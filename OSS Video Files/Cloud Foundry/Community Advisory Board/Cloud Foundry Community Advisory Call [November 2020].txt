Title: Cloud Foundry Community Advisory Call [November 2020]
Publication date: 2020-11-19
Playlist: Community Advisory Board
Description: 
	
Captions: 
	00:00:00,960 --> 00:00:07,759
good to go good to go okay welcome to

00:00:05,600 --> 00:00:08,960
cloud foundry community advisory board

00:00:07,759 --> 00:00:10,639
meeting uh

00:00:08,960 --> 00:00:13,440
a short one today i think for november

00:00:10,639 --> 00:00:15,920
the 18th um

00:00:13,440 --> 00:00:18,000
a small group of people together uh

00:00:15,920 --> 00:00:20,400
welcome everyone

00:00:18,000 --> 00:00:22,080
uh let's get started with the cloud

00:00:20,400 --> 00:00:27,279
foundry foundation

00:00:22,080 --> 00:00:29,599
updates chris anything to report

00:00:27,279 --> 00:00:30,320
hey everybody um no nothing in

00:00:29,599 --> 00:00:32,079
particular

00:00:30,320 --> 00:00:33,520
uh chip is here i don't know if you have

00:00:32,079 --> 00:00:36,399
anything

00:00:33,520 --> 00:00:38,079
yeah yeah um so we just uh shared

00:00:36,399 --> 00:00:39,440
earlier in the week that there's a kind

00:00:38,079 --> 00:00:40,640
of a redesign of the technical

00:00:39,440 --> 00:00:42,320
governance for the

00:00:40,640 --> 00:00:43,920
the purpose of like how decisions are

00:00:42,320 --> 00:00:45,520
made in the projects what projects are

00:00:43,920 --> 00:00:47,680
formed

00:00:45,520 --> 00:00:48,800
all that good stuff happening there's

00:00:47,680 --> 00:00:51,840
been a small working group

00:00:48,800 --> 00:00:53,920
from the four

00:00:51,840 --> 00:00:55,680
the four member companies who represent

00:00:53,920 --> 00:00:58,559
about 95 percent of the

00:00:55,680 --> 00:00:59,680
the contributions to the project um

00:00:58,559 --> 00:01:02,239
that's been kind of working over the

00:00:59,680 --> 00:01:05,199
last couple of months

00:01:02,239 --> 00:01:05,920
that said it's a bit of a straw man and

00:01:05,199 --> 00:01:09,760
starting in

00:01:05,920 --> 00:01:11,280
two weeks because here in the u.s

00:01:09,760 --> 00:01:12,560
there's uh you know we're going to try

00:01:11,280 --> 00:01:14,000
to thread the needle a little bit and

00:01:12,560 --> 00:01:17,280
have the first

00:01:14,000 --> 00:01:19,520
version of this meeting that is open to

00:01:17,280 --> 00:01:20,400
anyone with any interest whatsoever to

00:01:19,520 --> 00:01:23,280
come and join

00:01:20,400 --> 00:01:26,240
so if you look at the community calendar

00:01:23,280 --> 00:01:29,280
let's see two fridays from now

00:01:26,240 --> 00:01:31,520
i'm sorry three fridays from now

00:01:29,280 --> 00:01:32,960
you'll see that there's a invite to join

00:01:31,520 --> 00:01:35,520
that effort

00:01:32,960 --> 00:01:36,000
there was a repo in the cloud foundry

00:01:35,520 --> 00:01:38,880
org

00:01:36,000 --> 00:01:40,880
called community that's gone from

00:01:38,880 --> 00:01:44,000
private to public

00:01:40,880 --> 00:01:46,960
it is as the h1 heading

00:01:44,000 --> 00:01:48,799
on the readme says a work in progress so

00:01:46,960 --> 00:01:50,320
take absolutely nothing in there as

00:01:48,799 --> 00:01:51,920
anything other than the current straw

00:01:50,320 --> 00:01:53,439
man

00:01:51,920 --> 00:01:56,240
but everyone's welcome to participate

00:01:53,439 --> 00:01:56,240
should be a good time

00:01:58,000 --> 00:02:02,640
thank you i'm going to drop the link in

00:02:00,399 --> 00:02:04,079
the agenda doc so that people can find

00:02:02,640 --> 00:02:07,360
it

00:02:04,079 --> 00:02:08,560
um and uh yeah just connect that to what

00:02:07,360 --> 00:02:10,399
i was saying earlier we can

00:02:08,560 --> 00:02:11,400
uh after the updates i want to talk a

00:02:10,399 --> 00:02:12,560
little bit about um

00:02:11,400 --> 00:02:16,080
[Music]

00:02:12,560 --> 00:02:17,840
conformance-based certification and uh

00:02:16,080 --> 00:02:19,680
tie that into i want to get some more

00:02:17,840 --> 00:02:21,280
people some more eyes on it uh from a

00:02:19,680 --> 00:02:22,160
smaller group before we send it out to

00:02:21,280 --> 00:02:25,840
the whole

00:02:22,160 --> 00:02:27,440
organization um pmc updates

00:02:25,840 --> 00:02:30,239
uh sorry chip was that was that all from

00:02:27,440 --> 00:02:30,239
the foundation or

00:02:31,440 --> 00:02:35,280
yeah i think that's all right now i

00:02:34,080 --> 00:02:37,760
would also say that

00:02:35,280 --> 00:02:39,920
keep keep an eye out if you're a

00:02:37,760 --> 00:02:42,959
contributor to the project

00:02:39,920 --> 00:02:44,480
i think in early december

00:02:42,959 --> 00:02:46,959
chris will probably hold on this until

00:02:44,480 --> 00:02:47,519
early december we're going to send out a

00:02:46,959 --> 00:02:49,599
survey

00:02:47,519 --> 00:02:51,599
to anyone who's contributing to the

00:02:49,599 --> 00:02:54,480
project in any way

00:02:51,599 --> 00:02:57,040
we want to kind of get a sense of how

00:02:54,480 --> 00:03:00,800
things are going

00:02:57,040 --> 00:03:03,760
get get your read on what the

00:03:00,800 --> 00:03:05,760
foundation could do to support the

00:03:03,760 --> 00:03:07,440
technical community better

00:03:05,760 --> 00:03:09,680
but i think more importantly what you

00:03:07,440 --> 00:03:10,560
know what suggestions you might have for

00:03:09,680 --> 00:03:12,400
the

00:03:10,560 --> 00:03:13,920
technical community itself that you're

00:03:12,400 --> 00:03:16,640
part of

00:03:13,920 --> 00:03:18,959
in order to support each other so keep

00:03:16,640 --> 00:03:20,959
an eye out for that we'd love to

00:03:18,959 --> 00:03:25,360
collect all that feedback and then make

00:03:20,959 --> 00:03:25,360
sure we reflect that back to all of you

00:03:26,720 --> 00:03:34,159
awesome that's it thanks chip

00:03:31,040 --> 00:03:37,680
questions for chip look

00:03:34,159 --> 00:03:40,959
uh chris we're doing the um

00:03:37,680 --> 00:03:44,480
hands-on hands-on lab in in mark in

00:03:40,959 --> 00:03:44,959
december yeah for cf protect um yeah i

00:03:44,480 --> 00:03:48,319
believe

00:03:44,959 --> 00:03:50,080
james is on vacation at the moment um he

00:03:48,319 --> 00:03:51,840
was going to get us some copy for that

00:03:50,080 --> 00:03:54,959
um but we have a tentative date

00:03:51,840 --> 00:03:57,760
uh which is not fresh in my mind

00:03:54,959 --> 00:03:58,480
um but yes we will be running the cf

00:03:57,760 --> 00:04:02,720
protect

00:03:58,480 --> 00:04:02,720
hands-on lab in december at some point

00:04:05,680 --> 00:04:12,959
okay moving on to the

00:04:10,000 --> 00:04:13,519
pmcs app runtime thank you for the

00:04:12,959 --> 00:04:14,799
written

00:04:13,519 --> 00:04:17,040
update do you want to run through them

00:04:14,799 --> 00:04:17,600
for us eric yeah i'm happy to do that

00:04:17,040 --> 00:04:20,720
troy

00:04:17,600 --> 00:04:22,079
um so on the reliant side they've had a

00:04:20,720 --> 00:04:24,880
couple of quick releases

00:04:22,079 --> 00:04:26,479
of cf deployment uh to deal with some

00:04:24,880 --> 00:04:28,000
certificate regeneration issues

00:04:26,479 --> 00:04:30,080
that i believe the latest version of

00:04:28,000 --> 00:04:31,680
golang is requiring in terms of how it

00:04:30,080 --> 00:04:33,919
verifies certificates

00:04:31,680 --> 00:04:35,759
um so watch out for those i don't i

00:04:33,919 --> 00:04:37,600
don't think that they should

00:04:35,759 --> 00:04:38,639
um introduce any major complications

00:04:37,600 --> 00:04:39,840
we're just making sure that those

00:04:38,639 --> 00:04:42,479
certificates are

00:04:39,840 --> 00:04:43,440
appropriately generated for going to

00:04:42,479 --> 00:04:45,759
interact with them

00:04:43,440 --> 00:04:47,360
and then on the cf4k side uh they've

00:04:45,759 --> 00:04:49,759
been continuing work on

00:04:47,360 --> 00:04:51,040
both track for some more standardized

00:04:49,759 --> 00:04:53,360
image management

00:04:51,040 --> 00:04:54,160
and um more sophisticated management of

00:04:53,360 --> 00:04:56,560
secrets

00:04:54,160 --> 00:04:57,759
in the configuration there and then uh

00:04:56,560 --> 00:05:00,720
qcf has had another

00:04:57,759 --> 00:05:02,400
uh minor version release of 2.6 and uh i

00:05:00,720 --> 00:05:04,240
believe they're investigating

00:05:02,400 --> 00:05:06,240
uh what would be like to integrate um

00:05:04,240 --> 00:05:08,080
some of the kpac based staging

00:05:06,240 --> 00:05:10,000
mechanisms um that we've had in cfr

00:05:08,080 --> 00:05:12,880
gates into qcf as well which

00:05:10,000 --> 00:05:13,680
sounds great on some of the component

00:05:12,880 --> 00:05:15,440
team fronts

00:05:13,680 --> 00:05:17,919
i know the cappy team and the services

00:05:15,440 --> 00:05:21,280
api team have requested comment on

00:05:17,919 --> 00:05:24,800
uh what is the final stretch of the v3

00:05:21,280 --> 00:05:28,479
api endpoints and corresponding

00:05:24,800 --> 00:05:30,479
um v7 cfcli commands these are all for

00:05:28,479 --> 00:05:32,960
uh various service management and

00:05:30,479 --> 00:05:35,280
service binding interactions

00:05:32,960 --> 00:05:37,360
um arena's also continued working on

00:05:35,280 --> 00:05:40,639
support for sidecar processes

00:05:37,360 --> 00:05:41,520
and they're continuing work on their lrp

00:05:40,639 --> 00:05:42,880
crd

00:05:41,520 --> 00:05:45,120
and they're also streamlining and

00:05:42,880 --> 00:05:46,560
simplifying some of their templating

00:05:45,120 --> 00:05:48,400
which i think they're planning in

00:05:46,560 --> 00:05:49,680
preparation for a 2.0 version because

00:05:48,400 --> 00:05:52,639
there might be some breaking changes to

00:05:49,680 --> 00:05:55,759
the configuration there and then uh

00:05:52,639 --> 00:05:57,440
networking is continuing on um

00:05:55,759 --> 00:05:59,199
track of work around more flexible

00:05:57,440 --> 00:06:01,919
plugability of

00:05:59,199 --> 00:06:04,080
uh other ingress routing and networking

00:06:01,919 --> 00:06:05,199
systems focusing on contour as a lighter

00:06:04,080 --> 00:06:08,560
weight

00:06:05,199 --> 00:06:10,000
option alternative to issue and then

00:06:08,560 --> 00:06:11,199
logging in metrics has been continuing

00:06:10,000 --> 00:06:12,560
work on

00:06:11,199 --> 00:06:15,199
improving log cache performance and

00:06:12,560 --> 00:06:15,199
scalability

00:06:16,479 --> 00:06:20,479
thank you i think that's about it happy

00:06:18,800 --> 00:06:21,759
to take any questions or

00:06:20,479 --> 00:06:24,400
talk about any of that to the extent

00:06:21,759 --> 00:06:24,400
that i know about it

00:06:24,880 --> 00:06:30,240
uh changes in the irini team i heard a

00:06:27,840 --> 00:06:30,240
bit of

00:06:33,440 --> 00:06:39,440
no okay uh i know we we've been doing

00:06:37,120 --> 00:06:41,199
some reorganization on the vmware side

00:06:39,440 --> 00:06:42,319
uh across a lot of our teams

00:06:41,199 --> 00:06:43,840
uh so i think there's there's been a

00:06:42,319 --> 00:06:45,280
little turbulence from that but as far

00:06:43,840 --> 00:06:46,560
as i know we're still staffing people on

00:06:45,280 --> 00:06:50,000
that team

00:06:46,560 --> 00:06:52,720
okay no uh i thought was it was it

00:06:50,000 --> 00:06:53,360
this span is is jules is still leading

00:06:52,720 --> 00:06:56,560
it

00:06:53,360 --> 00:06:58,000
oh yeah jules yeah uh no actually here

00:06:56,560 --> 00:07:00,160
jules is now the project lead

00:06:58,000 --> 00:07:01,360
that's right uh for the team yeah yeah i

00:07:00,160 --> 00:07:02,000
i don't know if everyone was aware of

00:07:01,360 --> 00:07:05,360
that but that

00:07:02,000 --> 00:07:09,199
uh that we've changed jules's for irene

00:07:05,360 --> 00:07:13,360
right yeah um boshbmc

00:07:09,199 --> 00:07:13,360
uh kevin do you have any updates

00:07:13,680 --> 00:07:16,880
sorry i didn't mean to cut off uh

00:07:15,120 --> 00:07:19,199
questions by the way anything else for

00:07:16,880 --> 00:07:19,199
eric

00:07:23,120 --> 00:07:26,400
thank you for those updates thank you

00:07:28,560 --> 00:07:32,800
actually the checking if there is

00:07:30,240 --> 00:07:34,960
someone else from the bosch team i'm

00:07:32,800 --> 00:07:38,240
actually on a different project now

00:07:34,960 --> 00:07:40,560
okay so um that's all right i'll chase

00:07:38,240 --> 00:07:45,520
up some posh updates uh

00:07:40,560 --> 00:07:47,440
uh on slack if we don't have anyone here

00:07:45,520 --> 00:07:49,680
and for extensions the only update i

00:07:47,440 --> 00:07:53,120
have i will have more after the next

00:07:49,680 --> 00:07:57,039
extensions pmc meeting but

00:07:53,120 --> 00:08:00,080
yeah stratos 4.3 release

00:07:57,039 --> 00:08:03,840
mostly bug fixes and some back end work

00:08:00,080 --> 00:08:03,840
let me quickly call up the release notes

00:08:06,560 --> 00:08:11,520
uh to see what that was i should know it

00:08:10,160 --> 00:08:12,400
off the top of my head i don't think it

00:08:11,520 --> 00:08:15,280
was

00:08:12,400 --> 00:08:15,280
a lot of huge stuff

00:08:17,039 --> 00:08:25,199
list filters some work on the

00:08:21,199 --> 00:08:27,120
helm chart list some styling and

00:08:25,199 --> 00:08:30,080
coloring thing for the the dark theme i

00:08:27,120 --> 00:08:32,560
think uh

00:08:30,080 --> 00:08:34,959
and a bunch of bug fixes so congrats to

00:08:32,560 --> 00:08:34,959
that team

00:08:35,919 --> 00:08:40,080
uh but that's the only thing i have uh

00:08:38,320 --> 00:08:44,240
for open discussion

00:08:40,080 --> 00:08:47,839
i just want to um introduce

00:08:44,240 --> 00:08:50,160
uh this document i started

00:08:47,839 --> 00:08:51,120
uh at you is well not at use request

00:08:50,160 --> 00:08:52,640
it's something i've been talking with

00:08:51,120 --> 00:08:53,839
yui about for a while

00:08:52,640 --> 00:08:55,600
and she said you know you really got to

00:08:53,839 --> 00:08:56,880
get this started and because no one else

00:08:55,600 --> 00:08:59,279
is going to float this

00:08:56,880 --> 00:09:00,240
and so i'm going to drop a link here in

00:08:59,279 --> 00:09:03,519
uh

00:09:00,240 --> 00:09:06,320
the google doc link for something

00:09:03,519 --> 00:09:07,440
uh i will share once i've had some more

00:09:06,320 --> 00:09:09,839
eyes on it with

00:09:07,440 --> 00:09:11,279
cf dev conformance-based cf

00:09:09,839 --> 00:09:14,480
certification

00:09:11,279 --> 00:09:17,920
so i talked a little bit about this

00:09:14,480 --> 00:09:21,279
in philadelphia in the

00:09:17,920 --> 00:09:24,480
the cf kubernetes panel

00:09:21,279 --> 00:09:27,440
uh that we

00:09:24,480 --> 00:09:27,920
as we move away from the traditional vm

00:09:27,440 --> 00:09:31,600
based

00:09:27,920 --> 00:09:33,680
uh cf deployment release

00:09:31,600 --> 00:09:35,120
and we have now two different kubernetes

00:09:33,680 --> 00:09:38,160
implementations

00:09:35,120 --> 00:09:41,680
um the ship this code

00:09:38,160 --> 00:09:44,480
model of the certification

00:09:41,680 --> 00:09:45,200
uh process for for cloud foundry

00:09:44,480 --> 00:09:48,880
certified

00:09:45,200 --> 00:09:51,839
uh release uh distributions uh

00:09:48,880 --> 00:09:53,600
is going to be more difficult um uh

00:09:51,839 --> 00:09:57,519
because we would just have to keep

00:09:53,600 --> 00:10:01,760
adding different optional pieces of code

00:09:57,519 --> 00:10:02,399
uh in order to to to sort of guarantee

00:10:01,760 --> 00:10:05,920
this

00:10:02,399 --> 00:10:07,680
roughly the same user experience

00:10:05,920 --> 00:10:09,040
it would be much better to define that

00:10:07,680 --> 00:10:12,399
user experience

00:10:09,040 --> 00:10:15,600
by way of something that tests the api

00:10:12,399 --> 00:10:17,519
like cloud foundry acceptance tests so

00:10:15,600 --> 00:10:18,720
what i'm proposing here is that we start

00:10:17,519 --> 00:10:20,160
with

00:10:18,720 --> 00:10:22,560
cats the current cloud foundry

00:10:20,160 --> 00:10:26,640
acceptance test suite

00:10:22,560 --> 00:10:27,600
as a point for if if a distribution of

00:10:26,640 --> 00:10:30,399
cloud foundry

00:10:27,600 --> 00:10:32,399
passes uh either all of the cloud

00:10:30,399 --> 00:10:33,680
foundry acceptance tests or a designated

00:10:32,399 --> 00:10:35,760
subset

00:10:33,680 --> 00:10:37,200
or a designated subset plus some

00:10:35,760 --> 00:10:39,600
additional tests

00:10:37,200 --> 00:10:40,880
uh that it it should be considered

00:10:39,600 --> 00:10:42,959
certifiable

00:10:40,880 --> 00:10:44,880
so that those are the that it would pass

00:10:42,959 --> 00:10:48,160
the technical requirements

00:10:44,880 --> 00:10:49,360
now this has uh some interesting side

00:10:48,160 --> 00:10:52,160
effects

00:10:49,360 --> 00:10:53,600
and it it it maybe is different from the

00:10:52,160 --> 00:10:54,800
original goal of cloud foundry

00:10:53,600 --> 00:10:58,240
certification

00:10:54,800 --> 00:11:01,920
and uh feel free anybody to jump in

00:10:58,240 --> 00:11:05,040
and correct me or offer a different

00:11:01,920 --> 00:11:08,800
point of view but i believe

00:11:05,040 --> 00:11:11,839
um the something i can

00:11:08,800 --> 00:11:12,560
i refer to as the exact software

00:11:11,839 --> 00:11:13,760
requirement

00:11:12,560 --> 00:11:15,440
which is just borrowing some of the

00:11:13,760 --> 00:11:17,920
wording from the certification

00:11:15,440 --> 00:11:17,920
requirements

00:11:18,480 --> 00:11:21,920
i believe the exact software

00:11:19,760 --> 00:11:25,040
requirements were designed

00:11:21,920 --> 00:11:26,720
to encourage people to all contribute to

00:11:25,040 --> 00:11:29,519
the same code base

00:11:26,720 --> 00:11:30,480
so that maintenance load is was shared

00:11:29,519 --> 00:11:33,519
uh

00:11:30,480 --> 00:11:36,640
rather than um having

00:11:33,519 --> 00:11:38,800
each company working on forks

00:11:36,640 --> 00:11:41,040
of of cloud foundry so it was designed

00:11:38,800 --> 00:11:42,000
to bring bring the companies together to

00:11:41,040 --> 00:11:44,480
actually

00:11:42,000 --> 00:11:45,279
like initially uh or certainly

00:11:44,480 --> 00:11:48,399
historically

00:11:45,279 --> 00:11:49,839
to pair on on the software but also to

00:11:48,399 --> 00:11:54,399
make sure that the code base was

00:11:49,839 --> 00:11:58,079
was homogeneous

00:11:54,399 --> 00:12:01,440
i think uh now that we already have two

00:11:58,079 --> 00:12:02,079
uh converging diverging parallel i will

00:12:01,440 --> 00:12:06,560
say

00:12:02,079 --> 00:12:09,440
um uh projects for cf on kubernetes

00:12:06,560 --> 00:12:11,760
it's time to really look at uh opening

00:12:09,440 --> 00:12:15,200
things much wider

00:12:11,760 --> 00:12:16,800
that is if we were to to go towards an

00:12:15,200 --> 00:12:20,399
api driven

00:12:16,800 --> 00:12:23,440
conformance test like kubernetes has

00:12:20,399 --> 00:12:24,560
we could have uh certain components of

00:12:23,440 --> 00:12:27,920
cf

00:12:24,560 --> 00:12:31,120
uh be radically implemented

00:12:27,920 --> 00:12:33,920
and still provide uh

00:12:31,120 --> 00:12:35,200
the same interface to end users and

00:12:33,920 --> 00:12:37,839
potentially if we want to

00:12:35,200 --> 00:12:39,600
define this uh provide the same

00:12:37,839 --> 00:12:41,519
interfaces internally within cloud

00:12:39,600 --> 00:12:42,240
foundry on a component by component

00:12:41,519 --> 00:12:44,560
basis

00:12:42,240 --> 00:12:46,000
now that part of this uh there's a lot

00:12:44,560 --> 00:12:47,839
of to do's in my

00:12:46,000 --> 00:12:49,200
in my document here so i'm please

00:12:47,839 --> 00:12:50,480
understand i'm sharing a very early

00:12:49,200 --> 00:12:52,800
version of this

00:12:50,480 --> 00:12:54,320
uh in hopes that other people might uh

00:12:52,800 --> 00:12:57,440
uh contribute

00:12:54,320 --> 00:12:58,959
um but this would be a different uh the

00:12:57,440 --> 00:12:59,519
end result might be a bit different we

00:12:58,959 --> 00:13:02,320
might have

00:12:59,519 --> 00:13:03,680
many implementations growing uh for

00:13:02,320 --> 00:13:05,440
either components or entire

00:13:03,680 --> 00:13:09,440
distributions of

00:13:05,440 --> 00:13:10,240
of cloud foundry but i i thought i'd put

00:13:09,440 --> 00:13:12,480
this out there

00:13:10,240 --> 00:13:13,279
uh from susa's perspective we would we

00:13:12,480 --> 00:13:16,639
would really

00:13:13,279 --> 00:13:20,320
like to have the freedom to uh

00:13:16,639 --> 00:13:22,480
to innovate uh and and still

00:13:20,320 --> 00:13:24,560
have a distribution of cloud foundry

00:13:22,480 --> 00:13:27,200
which is which is certifiable

00:13:24,560 --> 00:13:27,680
so that's that's the motivation from me

00:13:27,200 --> 00:13:31,120
and

00:13:27,680 --> 00:13:32,079
from some of my colleagues open it up

00:13:31,120 --> 00:13:35,279
for thoughts

00:13:32,079 --> 00:13:38,639
generally on a conformance based more

00:13:35,279 --> 00:13:48,880
similar to the kubernetes model

00:13:38,639 --> 00:13:51,600
test framework for for certification

00:13:48,880 --> 00:13:52,240
chip i saw you uh mentioning something

00:13:51,600 --> 00:13:57,519
in the

00:13:52,240 --> 00:13:57,519
the the github issue where i raised this

00:13:58,480 --> 00:14:02,000
yeah that was uh well i actually brought

00:14:01,760 --> 00:14:05,199
you

00:14:02,000 --> 00:14:06,720
in to raise it um the

00:14:05,199 --> 00:14:08,079
the first thing i mentioned was that you

00:14:06,720 --> 00:14:09,839
know we want to rework the the way

00:14:08,079 --> 00:14:10,399
technical governance operates right and

00:14:09,839 --> 00:14:12,560
so the

00:14:10,399 --> 00:14:14,399
the straw man proposal is that you sort

00:14:12,560 --> 00:14:17,040
of reconstitute instead of having the

00:14:14,399 --> 00:14:18,720
pmc council with pmcs with projects

00:14:17,040 --> 00:14:20,639
it kind of gets reshuffled around and it

00:14:18,720 --> 00:14:24,480
becomes a toc

00:14:20,639 --> 00:14:27,040
with a bunch of working groups so my

00:14:24,480 --> 00:14:28,000
my suggestion in order of operations

00:14:27,040 --> 00:14:30,160
here is

00:14:28,000 --> 00:14:31,680
we don't need to rush to do an update

00:14:30,160 --> 00:14:33,279
for 2021.

00:14:31,680 --> 00:14:34,959
let's sort out who's how we're going to

00:14:33,279 --> 00:14:39,279
make decisions as a community

00:14:34,959 --> 00:14:42,079
um but and then if that straw man

00:14:39,279 --> 00:14:43,360
is roughly what's going to happen let's

00:14:42,079 --> 00:14:46,079
stand that thing up

00:14:43,360 --> 00:14:46,720
uh and then let's make deciding about

00:14:46,079 --> 00:14:50,000
exactly

00:14:46,720 --> 00:14:52,639
you know maybe maybe approving um

00:14:50,000 --> 00:14:53,279
the final approach to to the way cert

00:14:52,639 --> 00:14:57,040
should work

00:14:53,279 --> 00:15:00,000
going forward um in in that

00:14:57,040 --> 00:15:01,199
yes eoc body right so that was the right

00:15:00,000 --> 00:15:03,360
repo to toss that

00:15:01,199 --> 00:15:05,839
uh that idea into so guillaume from

00:15:03,360 --> 00:15:07,760
orange added it there which is awesome

00:15:05,839 --> 00:15:08,880
um and then i think that issue basically

00:15:07,760 --> 00:15:11,040
ends up being one of the

00:15:08,880 --> 00:15:12,079
early things that that atsc would take

00:15:11,040 --> 00:15:15,680
on in in

00:15:12,079 --> 00:15:17,120
early 2021 so at the same time the fact

00:15:15,680 --> 00:15:17,519
that you're sharing this now is awesome

00:15:17,120 --> 00:15:19,600
troy

00:15:17,519 --> 00:15:20,880
because i do think people should start

00:15:19,600 --> 00:15:24,000
thinking about it

00:15:20,880 --> 00:15:24,959
um if if we wait to start to formulate

00:15:24,000 --> 00:15:27,279
plans or

00:15:24,959 --> 00:15:28,560
approach then it means that won't be

00:15:27,279 --> 00:15:31,519
that won't actually

00:15:28,560 --> 00:15:32,560
be the thing that changes until you know

00:15:31,519 --> 00:15:34,240
the summer or later

00:15:32,560 --> 00:15:36,000
so it's good to do some things in

00:15:34,240 --> 00:15:38,959
parallel yeah and

00:15:36,000 --> 00:15:39,600
and um to be to be clear this is very

00:15:38,959 --> 00:15:41,600
much

00:15:39,600 --> 00:15:42,720
a work in progress and i'm looking to

00:15:41,600 --> 00:15:45,920
get

00:15:42,720 --> 00:15:48,800
eyes outside of souza on this as well

00:15:45,920 --> 00:15:49,759
so that we have something fairly full

00:15:48,800 --> 00:15:53,120
fully fleshed out

00:15:49,759 --> 00:15:55,519
to present to the new governance body

00:15:53,120 --> 00:15:58,000
to to make a decision on so we've got

00:15:55,519 --> 00:16:02,399
some consensus in the community already

00:15:58,000 --> 00:16:04,639
uh about uh what what

00:16:02,399 --> 00:16:06,480
what it means to be a cloud foundry

00:16:04,639 --> 00:16:07,600
distribution what it what cloud foundry

00:16:06,480 --> 00:16:10,320
is a lot uh

00:16:07,600 --> 00:16:10,959
credit to and i'm just blanking on his

00:16:10,320 --> 00:16:13,360
name

00:16:10,959 --> 00:16:14,079
the stark and wayne uh unconference

00:16:13,360 --> 00:16:15,600
presentation

00:16:14,079 --> 00:16:17,120
cloud foundry is dead long live cloud

00:16:15,600 --> 00:16:20,240
foundry uh

00:16:17,120 --> 00:16:23,519
james james yeah who was on the last uh

00:16:20,240 --> 00:16:25,279
uh cab call as well um his presentation

00:16:23,519 --> 00:16:26,639
sort of kicked off like okay other

00:16:25,279 --> 00:16:29,920
people feel this way

00:16:26,639 --> 00:16:32,720
um that uh

00:16:29,920 --> 00:16:34,560
that what cloud foundry really is is the

00:16:32,720 --> 00:16:36,639
experience

00:16:34,560 --> 00:16:37,759
and especially because it's changing so

00:16:36,639 --> 00:16:40,240
much right now and it's

00:16:37,759 --> 00:16:41,680
it's changed over time uh the thing that

00:16:40,240 --> 00:16:45,120
is most important

00:16:41,680 --> 00:16:47,360
is is preserving the amazing

00:16:45,120 --> 00:16:48,560
feeling you get when you use cloud

00:16:47,360 --> 00:16:51,920
foundry and

00:16:48,560 --> 00:16:52,639
and uh somewhat of the the workflow that

00:16:51,920 --> 00:16:55,440
has been

00:16:52,639 --> 00:16:56,399
established at so many companies of

00:16:55,440 --> 00:16:59,600
people who

00:16:56,399 --> 00:17:02,240
who use this day-to-day um

00:16:59,600 --> 00:17:03,920
and then allow for more freedom on the

00:17:02,240 --> 00:17:05,360
implementation side because there's been

00:17:03,920 --> 00:17:08,640
a lot of inven

00:17:05,360 --> 00:17:09,199
innovation i know from other companies

00:17:08,640 --> 00:17:11,679
that have

00:17:09,199 --> 00:17:12,559
re-implemented parts of cloud foundry

00:17:11,679 --> 00:17:15,919
and they just sit

00:17:12,559 --> 00:17:19,520
in a private fork somewhere because it

00:17:15,919 --> 00:17:20,640
doesn't really make sense for them to to

00:17:19,520 --> 00:17:21,919
bring it into the cloud foundry

00:17:20,640 --> 00:17:23,439
community because

00:17:21,919 --> 00:17:25,039
it would never fit in a certified

00:17:23,439 --> 00:17:27,600
distribution so

00:17:25,039 --> 00:17:29,760
uh part of this is is me thinking about

00:17:27,600 --> 00:17:32,880
uh revitalizing also the extensions

00:17:29,760 --> 00:17:36,160
pmc and if there's some overlap there

00:17:32,880 --> 00:17:37,919
um but uh but i

00:17:36,160 --> 00:17:39,679
i really think this is the way to go i

00:17:37,919 --> 00:17:42,400
know a lot of my sousa colleagues

00:17:39,679 --> 00:17:43,039
feel the same way um so any of you on

00:17:42,400 --> 00:17:46,080
this call

00:17:43,039 --> 00:17:48,160
uh please ping me on slack and i can

00:17:46,080 --> 00:17:50,080
add you as an editor to this document

00:17:48,160 --> 00:17:52,160
anyone can comment on it so feel free to

00:17:50,080 --> 00:17:54,000
do that

00:17:52,160 --> 00:17:57,120
but if you want to uh help me work

00:17:54,000 --> 00:17:57,120
through these ideas

00:17:57,200 --> 00:18:00,480
just just hit me up on slack and we'll

00:17:59,039 --> 00:18:04,000
uh we'll open it up

00:18:00,480 --> 00:18:06,720
any any questions about it

00:18:04,000 --> 00:18:07,679
um i i think our experience has been

00:18:06,720 --> 00:18:09,919
using we

00:18:07,679 --> 00:18:12,400
we use the cat stuff to help validate

00:18:09,919 --> 00:18:12,400
some of our

00:18:12,640 --> 00:18:16,880
deployments of code as well for clients

00:18:15,919 --> 00:18:19,520
and but

00:18:16,880 --> 00:18:21,600
i don't think it's at the level that

00:18:19,520 --> 00:18:25,039
that i would call a

00:18:21,600 --> 00:18:27,280
uh a certification level at all yeah

00:18:25,039 --> 00:18:28,799
this is uh feedback i've i've gotten

00:18:27,280 --> 00:18:31,520
from scissor developers as well

00:18:28,799 --> 00:18:32,640
so uh we would need to replace some of

00:18:31,520 --> 00:18:35,039
cats or

00:18:32,640 --> 00:18:35,919
uh use that as a starting point but it

00:18:35,039 --> 00:18:39,039
would

00:18:35,919 --> 00:18:39,840
require in some areas more rigor and and

00:18:39,039 --> 00:18:42,400
in other

00:18:39,840 --> 00:18:45,440
areas we would just leave out parts that

00:18:42,400 --> 00:18:46,799
are very specific to certain

00:18:45,440 --> 00:18:49,200
internal implementations i know there's

00:18:46,799 --> 00:18:51,440
certainly diego specific

00:18:49,200 --> 00:18:52,960
cats which wouldn't really apply to

00:18:51,440 --> 00:18:54,240
irani i think this was some of the

00:18:52,960 --> 00:18:55,280
reason they turned off some of those

00:18:54,240 --> 00:18:58,559
tests

00:18:55,280 --> 00:19:01,360
so um yeah and that's where i

00:18:58,559 --> 00:19:02,400
really need help because uh i i'm not

00:19:01,360 --> 00:19:04,480
familiar enough

00:19:02,400 --> 00:19:06,000
with the cloud foundry acceptance tests

00:19:04,480 --> 00:19:08,799
running them myself

00:19:06,000 --> 00:19:10,400
to know what they're exercising so i've

00:19:08,799 --> 00:19:13,360
got some help on the suicide to

00:19:10,400 --> 00:19:14,240
to go through these but uh anyone else

00:19:13,360 --> 00:19:16,880
who's interested

00:19:14,240 --> 00:19:18,160
um to identify because that's where the

00:19:16,880 --> 00:19:20,000
hard work is going to be

00:19:18,160 --> 00:19:21,360
is actually making the test suite and

00:19:20,000 --> 00:19:23,840
creating

00:19:21,360 --> 00:19:25,280
something that's a viable conformance

00:19:23,840 --> 00:19:27,440
suite of tests

00:19:25,280 --> 00:19:27,440
so

00:19:29,600 --> 00:19:35,919
i think the major lacking is

00:19:32,960 --> 00:19:39,120
i look at the cats as being more of a

00:19:35,919 --> 00:19:41,360
unit testing more than anything else yep

00:19:39,120 --> 00:19:43,760
from that standpoint there are some

00:19:41,360 --> 00:19:46,640
integration tests but it's not

00:19:43,760 --> 00:19:47,760
it doesn't take it from the angle of the

00:19:46,640 --> 00:19:50,480
end user

00:19:47,760 --> 00:19:52,000
or the user if you want to do

00:19:50,480 --> 00:19:54,000
certification you want to make sure

00:19:52,000 --> 00:19:55,200
and you're trying to validate the user

00:19:54,000 --> 00:19:56,559
experience

00:19:55,200 --> 00:19:58,640
then it should be done from a user

00:19:56,559 --> 00:20:00,240
experience point of view

00:19:58,640 --> 00:20:01,760
and i don't i don't believe cats does

00:20:00,240 --> 00:20:03,840
that from that standpoint

00:20:01,760 --> 00:20:05,360
as you said actually i don't really

00:20:03,840 --> 00:20:07,679
understand that because it's exercising

00:20:05,360 --> 00:20:10,880
the cfcli commands end to end

00:20:07,679 --> 00:20:12,640
yeah it exercises the commands but it

00:20:10,880 --> 00:20:13,280
doesn't exercise the commands in the

00:20:12,640 --> 00:20:14,640
order

00:20:13,280 --> 00:20:16,880
of things how how things get

00:20:14,640 --> 00:20:19,360
accomplished it's kind of like

00:20:16,880 --> 00:20:22,240
a single stack he said okay this worked

00:20:19,360 --> 00:20:23,840
but you don't have anything that does

00:20:22,240 --> 00:20:25,919
you got stuff that goes depth but

00:20:23,840 --> 00:20:28,080
nothing in the breath

00:20:25,919 --> 00:20:29,840
angles and so there's just not enough

00:20:28,080 --> 00:20:31,760
testing in there in my opinion

00:20:29,840 --> 00:20:34,159
that you know does it doesn't combine

00:20:31,760 --> 00:20:37,200
together um

00:20:34,159 --> 00:20:39,039
segmentation groups along with trying to

00:20:37,200 --> 00:20:41,200
make sure routing works and all this

00:20:39,039 --> 00:20:43,840
other stuff everything seems to be

00:20:41,200 --> 00:20:45,280
isolated and you can run stuff and you

00:20:43,840 --> 00:20:46,400
really don't know exactly how all the

00:20:45,280 --> 00:20:48,320
pieces fit

00:20:46,400 --> 00:20:50,000
and so i think there's a different way

00:20:48,320 --> 00:20:51,919
of looking at how the tests

00:20:50,000 --> 00:20:53,440
should run and then i think that will

00:20:51,919 --> 00:20:57,039
allow you to

00:20:53,440 --> 00:20:59,520
change the tests to to be more certain

00:20:57,039 --> 00:21:01,200
certified do you know that you can run a

00:20:59,520 --> 00:21:03,200
thousand users or stuff like that it's

00:21:01,200 --> 00:21:05,440
not designed for that

00:21:03,200 --> 00:21:07,280
it's really designed for functionality

00:21:05,440 --> 00:21:09,840
at least that's the way i look at it

00:21:07,280 --> 00:21:10,400
right but i think that's i mean we

00:21:09,840 --> 00:21:12,720
should

00:21:10,400 --> 00:21:14,240
you know we've mentioned the well one i

00:21:12,720 --> 00:21:15,760
want to say i i love this direction i

00:21:14,240 --> 00:21:17,919
think this is a great direction to go in

00:21:15,760 --> 00:21:19,679
um i'm i'm very encouraged by this thank

00:21:17,919 --> 00:21:22,960
you for putting this together troy i've

00:21:19,679 --> 00:21:24,880
i've i've long had this on my to-do list

00:21:22,960 --> 00:21:26,240
to promote as well so i'm glad to see it

00:21:24,880 --> 00:21:30,240
materialized for sure

00:21:26,240 --> 00:21:32,880
well i'll give you edit rights

00:21:30,240 --> 00:21:34,799
um i i think maybe it is useful to look

00:21:32,880 --> 00:21:37,280
at the scope of conformance testing

00:21:34,799 --> 00:21:38,799
that um that kubernetes has and what

00:21:37,280 --> 00:21:41,280
they found useful in their community

00:21:38,799 --> 00:21:42,960
you know is that um primarily functional

00:21:41,280 --> 00:21:44,720
testing is there scale or performance

00:21:42,960 --> 00:21:46,320
testing there as well

00:21:44,720 --> 00:21:47,600
and you know these could could all be

00:21:46,320 --> 00:21:48,799
different areas you know we don't have

00:21:47,600 --> 00:21:50,480
to do it all at once

00:21:48,799 --> 00:21:52,720
right but from my perspective starting

00:21:50,480 --> 00:21:55,600
from cats as still representing

00:21:52,720 --> 00:21:56,480
that end-to-end flow for a particular

00:21:55,600 --> 00:21:58,960
user

00:21:56,480 --> 00:21:59,919
usually the application developer using

00:21:58,960 --> 00:22:01,200
the platform

00:21:59,919 --> 00:22:03,600
is a good starting point but i agree

00:22:01,200 --> 00:22:06,960
that there is a lot of work to do there

00:22:03,600 --> 00:22:08,640
to make it comprehensive enough

00:22:06,960 --> 00:22:11,039
to serve as some sort of certification

00:22:08,640 --> 00:22:11,039
requirement

00:22:11,280 --> 00:22:15,679
something else that just occurred to me

00:22:12,799 --> 00:22:18,880
and i don't know how much work it would

00:22:15,679 --> 00:22:19,280
well probably a lot of work to backing

00:22:18,880 --> 00:22:22,400
up

00:22:19,280 --> 00:22:23,760
um the cloud foundry certified developer

00:22:22,400 --> 00:22:26,960
exam

00:22:23,760 --> 00:22:30,080
is based on a bunch of code

00:22:26,960 --> 00:22:31,280
that defines how a cloud foundry

00:22:30,080 --> 00:22:32,640
developer should use

00:22:31,280 --> 00:22:34,240
or you know what a cloud foundry

00:22:32,640 --> 00:22:36,080
developer should know to use the

00:22:34,240 --> 00:22:37,679
platform

00:22:36,080 --> 00:22:39,120
it's been a long time since i

00:22:37,679 --> 00:22:42,720
participated in

00:22:39,120 --> 00:22:46,880
in that but i think

00:22:42,720 --> 00:22:48,960
some of those tests of the developer

00:22:46,880 --> 00:22:50,080
could actually form a basis for

00:22:48,960 --> 00:22:53,600
additional tests of

00:22:50,080 --> 00:22:55,039
of of workflows through a cloud foundry

00:22:53,600 --> 00:22:57,120
system

00:22:55,039 --> 00:22:58,480
they could but i would be cautious to

00:22:57,120 --> 00:23:00,880
say that they were

00:22:58,480 --> 00:23:00,880
they were

00:23:01,919 --> 00:23:05,679
they are less specific than i even think

00:23:04,799 --> 00:23:09,039
that the

00:23:05,679 --> 00:23:11,039
the cats suite is right so

00:23:09,039 --> 00:23:12,880
remember the approach for how do you

00:23:11,039 --> 00:23:16,080
sort of how do you

00:23:12,880 --> 00:23:18,240
verify the skills of an individual

00:23:16,080 --> 00:23:19,840
is that you think about what are the

00:23:18,240 --> 00:23:23,280
what are the points of knowledge

00:23:19,840 --> 00:23:26,320
that someone has to have in their head

00:23:23,280 --> 00:23:28,240
right easily accessible in order to

00:23:26,320 --> 00:23:30,080
define them as being an expert in using

00:23:28,240 --> 00:23:31,280
something i think that's a very

00:23:30,080 --> 00:23:36,480
different intention

00:23:31,280 --> 00:23:39,120
from how does a uh

00:23:36,480 --> 00:23:40,080
you know how do you look at conformance

00:23:39,120 --> 00:23:42,240
of api

00:23:40,080 --> 00:23:44,000
implementation relative to two

00:23:42,240 --> 00:23:45,440
downstream distributions right

00:23:44,000 --> 00:23:47,840
because we might there are a ton of

00:23:45,440 --> 00:23:50,400
features that are not tested for

00:23:47,840 --> 00:23:51,760
uh in the developer certification and

00:23:50,400 --> 00:23:54,320
they shouldn't be because they're

00:23:51,760 --> 00:23:56,080
less commonly used but they might very

00:23:54,320 --> 00:23:58,559
easily be

00:23:56,080 --> 00:23:59,120
worthwhile to check for conformance

00:23:58,559 --> 00:24:02,880
between

00:23:59,120 --> 00:24:05,039
distros okay

00:24:02,880 --> 00:24:06,400
yeah and i like i said i've forgotten

00:24:05,039 --> 00:24:08,080
how much detail

00:24:06,400 --> 00:24:09,679
there is on the back end of how those

00:24:08,080 --> 00:24:12,720
tests are how those

00:24:09,679 --> 00:24:14,240
test questions are defined

00:24:12,720 --> 00:24:15,760
well the other the other thing that i

00:24:14,240 --> 00:24:17,520
would say troy is that

00:24:15,760 --> 00:24:18,960
those are not going to be publicly

00:24:17,520 --> 00:24:22,640
available because there's a

00:24:18,960 --> 00:24:23,520
oh right then everyone would ace their

00:24:22,640 --> 00:24:25,360
cloud foundry

00:24:23,520 --> 00:24:27,200
certified development yeah that's

00:24:25,360 --> 00:24:29,840
correct right

00:24:27,200 --> 00:24:31,600
you can just automate it and be great

00:24:29,840 --> 00:24:32,080
well all the verification is automated

00:24:31,600 --> 00:24:34,960
but

00:24:32,080 --> 00:24:37,120
we can't let that code become a public

00:24:34,960 --> 00:24:38,080
open source oh my goodness i totally

00:24:37,120 --> 00:24:41,200
didn't think of that

00:24:38,080 --> 00:24:44,480
this is why i'm not a

00:24:41,200 --> 00:24:48,400
teacher um

00:24:44,480 --> 00:24:52,000
okay what about the idea um of

00:24:48,400 --> 00:24:55,600
different categories or tiers of

00:24:52,000 --> 00:24:57,200
um of conformance uh that is

00:24:55,600 --> 00:24:59,360
you could get a conformance so it's not

00:24:57,200 --> 00:25:02,400
a pass or fail it's a percentage

00:24:59,360 --> 00:25:04,240
conformance or it's a or

00:25:02,400 --> 00:25:06,000
and this is what i'm thinking is we have

00:25:04,240 --> 00:25:09,520
a core set

00:25:06,000 --> 00:25:12,559
which is pass or fail and then uh

00:25:09,520 --> 00:25:14,400
other areas for example routing if

00:25:12,559 --> 00:25:15,679
if a distribution didn't want to

00:25:14,400 --> 00:25:18,559
implement tcp routing

00:25:15,679 --> 00:25:19,600
or wanted to implement it differently uh

00:25:18,559 --> 00:25:21,360
could that be

00:25:19,600 --> 00:25:23,200
outside of the core what what's called

00:25:21,360 --> 00:25:26,240
the core functionality

00:25:23,200 --> 00:25:28,559
so i i'm a hundred percent behind a

00:25:26,240 --> 00:25:30,480
core which should be centered around the

00:25:28,559 --> 00:25:34,240
ex developer experience

00:25:30,480 --> 00:25:34,240
and then a you know

00:25:34,559 --> 00:25:41,279
sort of like a a feature group

00:25:38,159 --> 00:25:42,880
or uh ver like uh vertical of features

00:25:41,279 --> 00:25:45,039
like you know

00:25:42,880 --> 00:25:47,120
if you care about this stuff then here's

00:25:45,039 --> 00:25:48,240
the the scores in the respective

00:25:47,120 --> 00:25:50,480
departments

00:25:48,240 --> 00:25:52,240
uh but they're not necessary to satisfy

00:25:50,480 --> 00:25:53,120
what is the core experience of cloud

00:25:52,240 --> 00:25:54,880
foundry

00:25:53,120 --> 00:25:56,159
uh so you know the core experience the

00:25:54,880 --> 00:25:56,960
cloud foundry should obviously be the

00:25:56,159 --> 00:26:00,320
cfcli

00:25:56,960 --> 00:26:03,360
based stuff plus build packs uh

00:26:00,320 --> 00:26:04,960
okay uh you know score right which

00:26:03,360 --> 00:26:06,240
unfortunately right now cf for kate's

00:26:04,960 --> 00:26:07,039
would probably not score too well in

00:26:06,240 --> 00:26:10,080
that area

00:26:07,039 --> 00:26:13,840
but they're coming along nicely um

00:26:10,080 --> 00:26:17,440
for example right like so that

00:26:13,840 --> 00:26:19,600
i would say i am 100 behind uh

00:26:17,440 --> 00:26:21,200
that approach of the the core they

00:26:19,600 --> 00:26:22,880
nailed the experience plus

00:26:21,200 --> 00:26:24,720
if you care about these verticals or

00:26:22,880 --> 00:26:28,320
whatever you're going to use

00:26:24,720 --> 00:26:31,039
feature set groups like

00:26:28,320 --> 00:26:31,919
yeah and there are some fairly uh well

00:26:31,039 --> 00:26:34,400
understood

00:26:31,919 --> 00:26:35,919
categories of that i think there's um

00:26:34,400 --> 00:26:38,080
there's a container to container

00:26:35,919 --> 00:26:42,480
networking not everyone does

00:26:38,080 --> 00:26:42,480
um or not everyone uses i should say

00:26:42,610 --> 00:26:45,520
[Music]

00:26:43,840 --> 00:26:46,880
what else the build taxes there's a lot

00:26:45,520 --> 00:26:50,080
of divergence in build packs

00:26:46,880 --> 00:26:52,720
uh between distributions um

00:26:50,080 --> 00:26:54,400
true there is a lot of divergence but

00:26:52,720 --> 00:26:56,799
there's some core expectations on the

00:26:54,400 --> 00:26:59,200
user's part and that's usually like

00:26:56,799 --> 00:27:00,000
not necessarily about which build packs

00:26:59,200 --> 00:27:02,400
are fully

00:27:00,000 --> 00:27:03,360
available out of the box but can i bring

00:27:02,400 --> 00:27:06,080
my own build

00:27:03,360 --> 00:27:07,679
that's absolutely crucial if you're in

00:27:06,080 --> 00:27:10,080
your own build pack

00:27:07,679 --> 00:27:11,760
pass if you cannot then yeah yeah here's

00:27:10,080 --> 00:27:13,679
the rating like or whatever

00:27:11,760 --> 00:27:15,279
and and i do think it was smart too to

00:27:13,679 --> 00:27:18,000
leave the build packs out

00:27:15,279 --> 00:27:19,120
of of the current certification for that

00:27:18,000 --> 00:27:20,720
for that reason because

00:27:19,120 --> 00:27:22,480
people do have very specific

00:27:20,720 --> 00:27:25,120
requirements um

00:27:22,480 --> 00:27:25,840
and often fork build packs to to do

00:27:25,120 --> 00:27:28,480
something

00:27:25,840 --> 00:27:32,000
yeah i i i can honestly say that very

00:27:28,480 --> 00:27:33,919
few clients of ours have ever

00:27:32,000 --> 00:27:35,679
not used the bring your old build back

00:27:33,919 --> 00:27:38,880
feature

00:27:35,679 --> 00:27:40,799
period yeah

00:27:38,880 --> 00:27:42,880
so that's like the number one thing is

00:27:40,799 --> 00:27:43,520
like yeah and now now do you think

00:27:42,880 --> 00:27:46,840
that's gonna

00:27:43,520 --> 00:27:48,320
carry on or even uh there'll be more

00:27:46,840 --> 00:27:50,480
proliferation honestly

00:27:48,320 --> 00:27:51,600
yes i feel it's going to not only carry

00:27:50,480 --> 00:27:54,159
on uh

00:27:51,600 --> 00:27:54,720
for for needing that feature but i think

00:27:54,159 --> 00:27:57,279
the

00:27:54,720 --> 00:27:58,320
like today we can have turn on for cloud

00:27:57,279 --> 00:28:00,960
foundry the

00:27:58,320 --> 00:28:02,399
you know either use build packs approach

00:28:00,960 --> 00:28:04,480
or run docker

00:28:02,399 --> 00:28:06,559
uh container images approach and i think

00:28:04,480 --> 00:28:09,200
that but but still can maintain the cf

00:28:06,559 --> 00:28:10,640
uh experience developer experience in

00:28:09,200 --> 00:28:12,480
the future i foresee

00:28:10,640 --> 00:28:14,720
you know especially on top of kubernetes

00:28:12,480 --> 00:28:16,240
like right like

00:28:14,720 --> 00:28:17,919
being you know supporting both

00:28:16,240 --> 00:28:20,000
directions is going to be very important

00:28:17,919 --> 00:28:22,559
but the bring your own is the most

00:28:20,000 --> 00:28:22,559
critical thing

00:28:25,039 --> 00:28:28,240
cool again that's my opinion based on

00:28:27,520 --> 00:28:31,039
what we're

00:28:28,240 --> 00:28:32,159
we've seen so far no that's excellent

00:28:31,039 --> 00:28:36,159
excellent uh

00:28:32,159 --> 00:28:40,480
feedback yeah and the score

00:28:36,159 --> 00:28:43,440
um actually had a nice side effect if uh

00:28:40,480 --> 00:28:44,080
you can sort of say here is the the core

00:28:43,440 --> 00:28:47,039
of of

00:28:44,080 --> 00:28:48,159
cloud foundry you know these five items

00:28:47,039 --> 00:28:50,559
out of ten

00:28:48,159 --> 00:28:51,440
here is you know team-based cloud

00:28:50,559 --> 00:28:54,159
foundry six

00:28:51,440 --> 00:28:56,080
items other ten here is you know for

00:28:54,159 --> 00:28:58,480
lack of a better word enterprise cloud

00:28:56,080 --> 00:28:58,960
foundry nine out of ten uh because i've

00:28:58,480 --> 00:29:02,240
always been

00:28:58,960 --> 00:29:04,320
advocating you know smaller footprint

00:29:02,240 --> 00:29:05,520
so being able to say you can still be

00:29:04,320 --> 00:29:08,080
conformed

00:29:05,520 --> 00:29:09,919
uh without feature a b and c you know

00:29:08,080 --> 00:29:13,120
maybe a

00:29:09,919 --> 00:29:16,480
a lightweight uh component

00:29:13,120 --> 00:29:18,880
swapped in um

00:29:16,480 --> 00:29:19,760
this is very good for smaller companies

00:29:18,880 --> 00:29:22,799
for the

00:29:19,760 --> 00:29:25,200
yep i i it's

00:29:22,799 --> 00:29:26,880
something we're looking at as well and

00:29:25,200 --> 00:29:29,360
something that's been on my mind

00:29:26,880 --> 00:29:30,799
something uh the reason i really like cf

00:29:29,360 --> 00:29:35,760
local

00:29:30,799 --> 00:29:38,880
is because there is a great use case for

00:29:35,760 --> 00:29:42,480
developers so just using

00:29:38,880 --> 00:29:45,360
pac or or uh on its own um

00:29:42,480 --> 00:29:47,440
or or cf local allows you to check that

00:29:45,360 --> 00:29:50,159
your staging is going to work locally

00:29:47,440 --> 00:29:52,080
so the the tightest loop of the the

00:29:50,159 --> 00:29:54,880
iterative process with your app

00:29:52,080 --> 00:29:56,799
can happen on your own machine uh and

00:29:54,880 --> 00:29:57,919
once that's nailed down then you move to

00:29:56,799 --> 00:30:00,000
pushing it to

00:29:57,919 --> 00:30:01,600
to a real pass wherever that might be on

00:30:00,000 --> 00:30:04,159
your local server or

00:30:01,600 --> 00:30:04,880
you're even in a small footprint cf on

00:30:04,159 --> 00:30:09,200
your local

00:30:04,880 --> 00:30:12,240
machine but um but that that ability to

00:30:09,200 --> 00:30:15,600
scale down the essence of cf

00:30:12,240 --> 00:30:17,200
for a developer to work with uh

00:30:15,600 --> 00:30:19,039
locally would be great and that what

00:30:17,200 --> 00:30:23,039
that would mean is that would be

00:30:19,039 --> 00:30:25,919
uh maybe an oslis or a an orgless

00:30:23,039 --> 00:30:27,360
uh cf or something with just a single

00:30:25,919 --> 00:30:30,799
user cf

00:30:27,360 --> 00:30:32,559
uh and that would

00:30:30,799 --> 00:30:34,159
there be a whole chunk of the cats that

00:30:32,559 --> 00:30:37,039
would not pass for that

00:30:34,159 --> 00:30:38,159
and uh that would have to be a a special

00:30:37,039 --> 00:30:40,240
case

00:30:38,159 --> 00:30:41,440
um and maybe that kind of thing doesn't

00:30:40,240 --> 00:30:44,559
have to be certified

00:30:41,440 --> 00:30:46,000
that's uh maybe we could leave that out

00:30:44,559 --> 00:30:47,120
of the certification process and that's

00:30:46,000 --> 00:30:50,240
just

00:30:47,120 --> 00:30:52,640
you know a nice tool that you use

00:30:50,240 --> 00:30:53,840
to uh to check that your stuff is going

00:30:52,640 --> 00:30:57,840
to deploy okay to

00:30:53,840 --> 00:30:59,760
cf um yeah i mean

00:30:57,840 --> 00:31:01,279
i think what you just said is sort of

00:30:59,760 --> 00:31:04,320
the the crux of it right

00:31:01,279 --> 00:31:06,480
effectively give

00:31:04,320 --> 00:31:08,960
turn like the this sort of certification

00:31:06,480 --> 00:31:10,159
thing into a tool such that uh companies

00:31:08,960 --> 00:31:13,200
can

00:31:10,159 --> 00:31:15,440
say these are the things i care about

00:31:13,200 --> 00:31:17,519
rate and give me a score right or what's

00:31:15,440 --> 00:31:18,000
the score for these things and then they

00:31:17,519 --> 00:31:21,120
can

00:31:18,000 --> 00:31:23,679
go based on their business needs versus

00:31:21,120 --> 00:31:24,240
just in general because if we have a one

00:31:23,679 --> 00:31:26,080
system

00:31:24,240 --> 00:31:27,600
that's not going to work so well because

00:31:26,080 --> 00:31:29,840
oh it scored 60

00:31:27,600 --> 00:31:32,159
except that you don't know that yeah

00:31:29,840 --> 00:31:33,840
percentage is all you care about so

00:31:32,159 --> 00:31:36,320
you're good

00:31:33,840 --> 00:31:38,080
yeah we so the is something that was

00:31:36,320 --> 00:31:40,960
floated around us is the idea of a

00:31:38,080 --> 00:31:43,840
matrix where you can actually just

00:31:40,960 --> 00:31:44,799
so this is this is the sweets these and

00:31:43,840 --> 00:31:46,080
we wouldn't do it test

00:31:44,799 --> 00:31:47,919
we could you know you could always

00:31:46,080 --> 00:31:48,480
expose test by test what passes and

00:31:47,919 --> 00:31:50,399
fails

00:31:48,480 --> 00:31:51,840
you could have like a score sheet that

00:31:50,399 --> 00:31:52,240
people could real but i think people

00:31:51,840 --> 00:31:55,840
need

00:31:52,240 --> 00:31:57,440
groups like some logical groupings of

00:31:55,840 --> 00:32:00,159
those tests so

00:31:57,440 --> 00:32:01,039
yeah sounds fantastic sorry i i did join

00:32:00,159 --> 00:32:03,039
late i was on another

00:32:01,039 --> 00:32:05,120
no you caught it right you know as we're

00:32:03,039 --> 00:32:07,279
getting into it so it's uh

00:32:05,120 --> 00:32:08,799
kind of where we're going with this troy

00:32:07,279 --> 00:32:11,360
it's almost like a behavioral

00:32:08,799 --> 00:32:12,640
um test suite in some ways what you're

00:32:11,360 --> 00:32:16,640
looking for

00:32:12,640 --> 00:32:18,720
you're looking for this behavior yeah

00:32:16,640 --> 00:32:20,240
i mean we do want we do want the correct

00:32:18,720 --> 00:32:23,679
response to an api

00:32:20,240 --> 00:32:27,279
call so that we know that uh

00:32:23,679 --> 00:32:28,720
if you use the client it's going to

00:32:27,279 --> 00:32:31,200
behave the right way or if you're

00:32:28,720 --> 00:32:34,159
implementing a new client

00:32:31,200 --> 00:32:35,039
it's going to behave the right way do we

00:32:34,159 --> 00:32:38,320
include

00:32:35,039 --> 00:32:41,360
both v2 and v3 is another thing

00:32:38,320 --> 00:32:41,360
that i'm curious about

00:32:41,679 --> 00:32:48,320
so due to where we are at in

00:32:46,240 --> 00:32:49,600
that's a loaded question and i i

00:32:48,320 --> 00:32:52,240
normally i would say

00:32:49,600 --> 00:32:53,519
no just do b3 focus on the future moving

00:32:52,240 --> 00:32:55,440
forward this is a new effort

00:32:53,519 --> 00:32:56,559
just sort of a new change just go with

00:32:55,440 --> 00:32:58,000
that

00:32:56,559 --> 00:32:59,919
the problem is i don't think i think

00:32:58,000 --> 00:33:03,120
that we're in a state whereas

00:32:59,919 --> 00:33:03,519
v2 and v3 uh is like incomplete is it

00:33:03,120 --> 00:33:07,440
not

00:33:03,519 --> 00:33:07,440
like we've got some some

00:33:07,519 --> 00:33:12,880
drift between us you know what works on

00:33:11,279 --> 00:33:14,159
kevin isn't it isn't it something you

00:33:12,880 --> 00:33:15,039
guys discovered like we've got some

00:33:14,159 --> 00:33:18,080
drift on

00:33:15,039 --> 00:33:19,760
you know v6 cli versus v7 cli and what

00:33:18,080 --> 00:33:21,519
supported v2 v3

00:33:19,760 --> 00:33:24,080
is like there's some it's not quite

00:33:21,519 --> 00:33:26,880
there yet

00:33:24,080 --> 00:33:27,840
oh kevin's not here anyways um i could

00:33:26,880 --> 00:33:31,200
be wrong

00:33:27,840 --> 00:33:32,480
but effectively i would definitely vote

00:33:31,200 --> 00:33:36,799
for

00:33:32,480 --> 00:33:36,799
focus on the future be three forward

00:33:36,840 --> 00:33:43,679
yeah

00:33:39,519 --> 00:33:46,320
i would say that the v2 interface is

00:33:43,679 --> 00:33:48,159
most many of the v3 interfaces are

00:33:46,320 --> 00:33:51,279
almost in place now

00:33:48,159 --> 00:33:52,159
that it's been most of the things have a

00:33:51,279 --> 00:33:53,919
replacement

00:33:52,159 --> 00:33:57,039
there's still a few things that are not

00:33:53,919 --> 00:33:57,039
that stoned the v2

00:33:59,360 --> 00:34:04,080
the worst thing we have right now is

00:34:01,279 --> 00:34:08,000
that when people try to use the v2

00:34:04,080 --> 00:34:10,079
cli on d3 and vice versa flip it around

00:34:08,000 --> 00:34:11,440
you know the world falls apart and

00:34:10,079 --> 00:34:13,679
that's unfortunate

00:34:11,440 --> 00:34:15,919
better with the latest releases so you

00:34:13,679 --> 00:34:18,720
can go back and forth more easily now

00:34:15,919 --> 00:34:19,440
okay um that's that's we because we

00:34:18,720 --> 00:34:21,760
found that

00:34:19,440 --> 00:34:22,879
uh as well but the the very latest

00:34:21,760 --> 00:34:26,399
releases of both

00:34:22,879 --> 00:34:28,800
uh v6 and v7 seem to not

00:34:26,399 --> 00:34:30,480
not be so bad i haven't given it done at

00:34:28,800 --> 00:34:31,919
all i just know that there's a lot of

00:34:30,480 --> 00:34:35,440
people in the world that are still

00:34:31,919 --> 00:34:37,040
on the v2 api using the the v6 client

00:34:35,440 --> 00:34:39,280
they have a lot of tooling in place that

00:34:37,040 --> 00:34:42,960
they don't want to necessarily

00:34:39,280 --> 00:34:45,440
um move right away

00:34:42,960 --> 00:34:47,760
that is true but isn't the spirit of

00:34:45,440 --> 00:34:48,000
this like as we move into this new world

00:34:47,760 --> 00:34:50,159
of

00:34:48,000 --> 00:34:52,879
like a lot of kubernetes based

00:34:50,159 --> 00:34:54,879
implementations how compatible are they

00:34:52,879 --> 00:34:56,879
i mean isn't that more of the concern so

00:34:54,879 --> 00:34:59,040
therefore v3 would make the most sense

00:34:56,879 --> 00:35:00,079
i don't know i think i think you're

00:34:59,040 --> 00:35:02,000
right

00:35:00,079 --> 00:35:03,280
also if you wanted to go backwards of

00:35:02,000 --> 00:35:04,960
time you could right

00:35:03,280 --> 00:35:07,440
if you got the v3 stuff then you could

00:35:04,960 --> 00:35:09,839
say okay how does a map back

00:35:07,440 --> 00:35:11,920
right yeah if i remember correctly

00:35:09,839 --> 00:35:14,560
there's a few things done in v3

00:35:11,920 --> 00:35:16,880
a little bit differently than in v2 so

00:35:14,560 --> 00:35:19,359
it's not uh it's

00:35:16,880 --> 00:35:21,040
sort of a change in the workflow um

00:35:19,359 --> 00:35:24,880
under under

00:35:21,040 --> 00:35:25,359
um but uh maybe it would be just simple

00:35:24,880 --> 00:35:28,160
to have

00:35:25,359 --> 00:35:30,000
in the matrix you know v3 compatibility

00:35:28,160 --> 00:35:33,040
and then another one for v2

00:35:30,000 --> 00:35:35,599
optional v2 compatibility uh maybe i can

00:35:33,040 --> 00:35:37,839
give some feedback from from sap side

00:35:35,599 --> 00:35:39,119
we have actually uh gone through this

00:35:37,839 --> 00:35:42,640
exercise to switch from

00:35:39,119 --> 00:35:44,079
uh cfcli version six to version seven

00:35:42,640 --> 00:35:46,400
for all our internal

00:35:44,079 --> 00:35:47,839
installation or let's say for a big uh

00:35:46,400 --> 00:35:50,640
the bigger part of it

00:35:47,839 --> 00:35:51,599
and that was actually uh not a big deal

00:35:50,640 --> 00:35:54,079
i mean

00:35:51,599 --> 00:35:54,880
if somebody let's say programs against

00:35:54,079 --> 00:35:58,400
the cli

00:35:54,880 --> 00:36:01,760
it's anyway broken but um those

00:35:58,400 --> 00:36:04,880
scripted stuff was was was not so much

00:36:01,760 --> 00:36:07,200
of a problem those colleagues who were

00:36:04,880 --> 00:36:09,280
really implement against the v2 api

00:36:07,200 --> 00:36:11,359
and now have to migrate to v3 they have

00:36:09,280 --> 00:36:13,040
a uh

00:36:11,359 --> 00:36:15,280
some some more work to do especially

00:36:13,040 --> 00:36:16,400
where synchronous calls switch to other

00:36:15,280 --> 00:36:18,160
chronos calls

00:36:16,400 --> 00:36:20,960
and the biggest problems that we have is

00:36:18,160 --> 00:36:23,119
that um let's say the v3 api

00:36:20,960 --> 00:36:25,040
still has here and there's some bugs and

00:36:23,119 --> 00:36:25,440
there are some really nasty bugs inside

00:36:25,040 --> 00:36:29,760
so

00:36:25,440 --> 00:36:32,000
race conditions and i guess it will take

00:36:29,760 --> 00:36:32,880
another half a year or so until all

00:36:32,000 --> 00:36:34,720
these

00:36:32,880 --> 00:36:35,920
things are gone actually and you get the

00:36:34,720 --> 00:36:38,720
stability back

00:36:35,920 --> 00:36:40,000
so let's say half a percent of sea of

00:36:38,720 --> 00:36:42,240
push availability is

00:36:40,000 --> 00:36:43,760
gone if you switch from a monitoring

00:36:42,240 --> 00:36:46,560
from cf6 to cf7

00:36:43,760 --> 00:36:47,760
on a loaded landscape just to give you

00:36:46,560 --> 00:36:50,640
some data

00:36:47,760 --> 00:36:51,520
oh my goodness that's not good so so

00:36:50,640 --> 00:36:55,040
part of the open

00:36:51,520 --> 00:36:56,240
and copy team is actually looking into

00:36:55,040 --> 00:36:59,280
it but these are

00:36:56,240 --> 00:37:01,920
tricky things uh it's not the easy bugs

00:36:59,280 --> 00:37:03,680
they are all uh found and and fixed uh

00:37:01,920 --> 00:37:05,520
probably by cats and and other things

00:37:03,680 --> 00:37:08,800
but let's see

00:37:05,520 --> 00:37:10,320
the delicate things um so yeah that is

00:37:08,800 --> 00:37:13,359
very useful information though

00:37:10,320 --> 00:37:15,440
yeah and but i mean also i think i think

00:37:13,359 --> 00:37:17,680
we should push to to get these bugs

00:37:15,440 --> 00:37:18,960
fixed faster than six months right

00:37:17,680 --> 00:37:20,160
especially if they're things people are

00:37:18,960 --> 00:37:21,680
going to hit in the wild

00:37:20,160 --> 00:37:23,359
yeah you've probably done a very

00:37:21,680 --> 00:37:24,720
exhaustive testing to find these things

00:37:23,359 --> 00:37:26,640
hopefully they're

00:37:24,720 --> 00:37:28,640
they're more edge cases even if they're

00:37:26,640 --> 00:37:30,800
nasty but um

00:37:28,640 --> 00:37:33,760
we will see yeah at the end of the day

00:37:30,800 --> 00:37:36,560
you'll find some oil on big landscapes

00:37:33,760 --> 00:37:38,079
all right sooner or later troy i was

00:37:36,560 --> 00:37:40,880
just reminded in the background

00:37:38,079 --> 00:37:42,320
uh that effectively the the thing that i

00:37:40,880 --> 00:37:45,440
was coming to mind for me

00:37:42,320 --> 00:37:47,520
is that uh we our last round of

00:37:45,440 --> 00:37:50,480
evaluating cf for cates

00:37:47,520 --> 00:37:50,960
uh it really only was supporting the v7

00:37:50,480 --> 00:37:54,400
uh

00:37:50,960 --> 00:37:57,680
cli in api basically and

00:37:54,400 --> 00:38:00,320
no support any longer for cappy v2 calls

00:37:57,680 --> 00:38:01,119
and and what the struggle there for us

00:38:00,320 --> 00:38:03,280
was that that

00:38:01,119 --> 00:38:04,960
the current implementation of stratos

00:38:03,280 --> 00:38:08,000
would not work because of that

00:38:04,960 --> 00:38:08,480
exactly yeah that's on their roadmap fyi

00:38:08,000 --> 00:38:11,119
but

00:38:08,480 --> 00:38:13,440
but again it's not uh it's not their

00:38:11,119 --> 00:38:16,640
stratos is going to have to support both

00:38:13,440 --> 00:38:18,160
yep so effectively i think that

00:38:16,640 --> 00:38:20,079
from this discussion and whatever

00:38:18,160 --> 00:38:22,079
everybody's saying

00:38:20,079 --> 00:38:24,320
my recommendation would definitely be

00:38:22,079 --> 00:38:25,359
let's just do future looking for this

00:38:24,320 --> 00:38:29,520
particular effort

00:38:25,359 --> 00:38:29,520
and say it's going to be for v3 and

00:38:29,760 --> 00:38:33,920
you know yeah okay definitely i think

00:38:32,720 --> 00:38:35,920
it's a way forward uh

00:38:33,920 --> 00:38:37,119
whatever can you do what would help for

00:38:35,920 --> 00:38:39,359
instance is also

00:38:37,119 --> 00:38:40,640
when you bring out a real deprecation

00:38:39,359 --> 00:38:42,640
plan for v2 that's

00:38:40,640 --> 00:38:44,800
one of the most asked questions that i

00:38:42,640 --> 00:38:47,040
get is v2 still available or not

00:38:44,800 --> 00:38:49,119
and then you say well yeah it's not yet

00:38:47,040 --> 00:38:50,720
officially deprecated but the resources

00:38:49,119 --> 00:38:52,079
have already in the documentation and

00:38:50,720 --> 00:38:56,079
application mark

00:38:52,079 --> 00:38:58,880
uh you should use v3 we can recommend v3

00:38:56,079 --> 00:39:00,000
cfcli version 6 is deprecated at least

00:38:58,880 --> 00:39:02,880
on our landscapes because

00:39:00,000 --> 00:39:04,079
we have recency of deployment versions

00:39:02,880 --> 00:39:06,000
inside where it's not supported

00:39:04,079 --> 00:39:07,680
officially anymore it's still working

00:39:06,000 --> 00:39:10,160
and sometimes even better than

00:39:07,680 --> 00:39:10,960
the cf7 so ah that's too much talking i

00:39:10,160 --> 00:39:14,960
mean

00:39:10,960 --> 00:39:18,240
if you have here a clear statement

00:39:14,960 --> 00:39:22,079
mid of next year v2 will be gone

00:39:18,240 --> 00:39:23,839
time is ticking uh please migrate that's

00:39:22,079 --> 00:39:25,440
something that everybody understands and

00:39:23,839 --> 00:39:26,880
where then also people will start to

00:39:25,440 --> 00:39:28,880
work if you

00:39:26,880 --> 00:39:31,280
explain that much of stories and

00:39:28,880 --> 00:39:34,000
everybody will say okay got the message

00:39:31,280 --> 00:39:36,079
i will wait that's that's what happens

00:39:34,000 --> 00:39:37,359
that's a brilliant suggestion give them

00:39:36,079 --> 00:39:43,440
a reason

00:39:37,359 --> 00:39:57,839
to care and move and close the gap

00:39:43,440 --> 00:39:57,839
capture some notes here um

00:40:04,800 --> 00:40:10,640
okay um

00:40:08,000 --> 00:40:12,560
has anyone else uh got any topics for

00:40:10,640 --> 00:40:14,560
discussion today that uh

00:40:12,560 --> 00:40:16,000
otherwise we can we can call it early

00:40:14,560 --> 00:40:19,200
and uh

00:40:16,000 --> 00:40:19,200
get back 20 minutes or so

00:40:19,680 --> 00:40:25,680
uh just wait is it does anyone want uh

00:40:23,680 --> 00:40:28,960
to help with this document does anyone

00:40:25,680 --> 00:40:28,960
want uh edit rights

00:40:29,040 --> 00:40:33,119
okay thanks norm i'll ping you

00:40:33,359 --> 00:40:40,720
uh sorry anyone else

00:40:36,560 --> 00:40:42,800
this is i just wanted to

00:40:40,720 --> 00:40:43,920
let folks know that there's a couple of

00:40:42,800 --> 00:40:46,960
hands-on labs

00:40:43,920 --> 00:40:47,760
the priciest one which is very

00:40:46,960 --> 00:40:51,680
introductory

00:40:47,760 --> 00:40:53,359
scheduled for early december

00:40:51,680 --> 00:40:55,200
one in the first week and one in the

00:40:53,359 --> 00:40:56,160
second week so one of the things that we

00:40:55,200 --> 00:40:59,359
are trying to do

00:40:56,160 --> 00:41:04,079
is um schedule this in

00:40:59,359 --> 00:41:04,079
time slots that are more friendly

00:41:04,160 --> 00:41:10,480
and in the eu slash africa slash

00:41:07,359 --> 00:41:11,839
middle east regions so okay if there's

00:41:10,480 --> 00:41:14,640
folks that you know

00:41:11,839 --> 00:41:15,359
um who are in these regions who might be

00:41:14,640 --> 00:41:18,319
interested

00:41:15,359 --> 00:41:20,880
in an introductory um see a friend

00:41:18,319 --> 00:41:20,880
something thing

00:41:22,079 --> 00:41:25,280
chris is this the one that you were

00:41:23,359 --> 00:41:26,800
mentioning earlier the hands-on labs

00:41:25,280 --> 00:41:29,200
that you guys were talking about

00:41:26,800 --> 00:41:29,839
uh no actually we so we're running the

00:41:29,200 --> 00:41:35,839
the two

00:41:29,839 --> 00:41:35,839
tri-cf uh labs as ramsay didn't in

00:41:36,319 --> 00:41:41,440
europe asia um friendly times and then

00:41:39,520 --> 00:41:43,119
we've also got a handsome lab from stark

00:41:41,440 --> 00:41:46,400
and wayne the cf protect

00:41:43,119 --> 00:41:47,599
um which which james demoed on the cap

00:41:46,400 --> 00:41:50,720
call last time

00:41:47,599 --> 00:41:54,240
which is a pretty cool project

00:41:50,720 --> 00:41:56,720
so we've got all those coming up in in

00:41:54,240 --> 00:41:56,720
december

00:41:58,800 --> 00:42:05,040
so that's tri-cf and uh have you

00:42:02,319 --> 00:42:07,119
uh ram have you put something in cf dev

00:42:05,040 --> 00:42:08,400
about that or cf the cf users

00:42:07,119 --> 00:42:10,800
mailing list or something where can

00:42:08,400 --> 00:42:13,920
people find more information

00:42:10,800 --> 00:42:16,960
so there's a there's a link to like

00:42:13,920 --> 00:42:20,880
a registration page on cloudfoundry.org

00:42:16,960 --> 00:42:23,119
and i'll send you the link

00:42:20,880 --> 00:42:24,160
okay i'll add it to the the notes here

00:42:23,119 --> 00:42:26,400
so uh

00:42:24,160 --> 00:42:28,079
everyone if you know someone in those

00:42:26,400 --> 00:42:30,319
time zones those regions

00:42:28,079 --> 00:42:31,520
um please evangelize this and make it

00:42:30,319 --> 00:42:35,280
known that there's some

00:42:31,520 --> 00:42:37,520
uh tri-cf courses uh in

00:42:35,280 --> 00:42:44,319
uh first and second week of december

00:42:37,520 --> 00:42:48,079
thanks ram

00:42:44,319 --> 00:42:49,119
okay uh thanks very much for joining

00:42:48,079 --> 00:42:51,520
this episode

00:42:49,119 --> 00:42:53,440
uh hopefully we'll have some uh i'll

00:42:51,520 --> 00:42:54,480
round up some uh presentations but i i

00:42:53,440 --> 00:42:55,119
thought it was really good to have this

00:42:54,480 --> 00:42:58,000
discussion

00:42:55,119 --> 00:42:59,440
um really really interesting some

00:42:58,000 --> 00:43:02,640
interesting information

00:42:59,440 --> 00:43:04,640
on uh v2 versus v3 uh

00:43:02,640 --> 00:43:07,359
thank you thank you stefan i may reach

00:43:04,640 --> 00:43:10,480
out to you with some questions later

00:43:07,359 --> 00:43:15,200
um everyone uh be calm be kind

00:43:10,480 --> 00:43:17,200
be safe carry on

00:43:15,200 --> 00:43:19,440
and i'll hopefully see you all in a

00:43:17,200 --> 00:43:24,400
month

00:43:19,440 --> 00:43:24,400

YouTube URL: https://www.youtube.com/watch?v=Nw07agkNIzA


