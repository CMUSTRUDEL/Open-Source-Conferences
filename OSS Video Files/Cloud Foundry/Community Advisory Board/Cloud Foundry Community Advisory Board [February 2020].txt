Title: Cloud Foundry Community Advisory Board [February 2020]
Publication date: 2020-02-19
Playlist: Community Advisory Board
Description: 
	CAB Call agenda: https://docs.google.com/document/d/1SCOlAquyUmNM-AQnekCOXiwhLs6gveTxAcduvDcW_xI/edit?usp=sharing
Captions: 
	00:00:08,630 --> 00:00:13,259
awesome okay well thank you everyone

00:00:10,830 --> 00:00:16,320
this is obviously their February Claire

00:00:13,259 --> 00:00:16,980
pfann dream cab meeting so I am NOT Troy

00:00:16,320 --> 00:00:19,260
top neck

00:00:16,980 --> 00:00:21,210
Troy turtleneck is your new house taking

00:00:19,260 --> 00:00:22,519
over from dr. max who served as well for

00:00:21,210 --> 00:00:24,449
the last I think three years

00:00:22,519 --> 00:00:27,000
Troy unfortunately is running a bit late

00:00:24,449 --> 00:00:29,369
today so he asked me to kick things off

00:00:27,000 --> 00:00:32,640
hopefully I'll join and we can that we

00:00:29,369 --> 00:00:34,469
can come formally welcome him so I guess

00:00:32,640 --> 00:00:36,000
we've got the usual updates on the

00:00:34,469 --> 00:00:38,460
agenda so we'll get this from cff

00:00:36,000 --> 00:00:40,129
highlights pmc project highlights and

00:00:38,460 --> 00:00:42,420
then we have hopefully a couple of

00:00:40,129 --> 00:00:45,239
community projects that we can that we

00:00:42,420 --> 00:00:47,640
can hear from the guys and and and

00:00:45,239 --> 00:00:48,899
people there see what's going on so

00:00:47,640 --> 00:00:50,239
let's starts wanna maybe you could give

00:00:48,899 --> 00:00:54,449
us an update on what's happening

00:00:50,239 --> 00:00:57,210
galactically in cff sure I think the

00:00:54,449 --> 00:01:00,000
biggest of it is definitely the Cloud

00:00:57,210 --> 00:01:01,800
Foundry summits I know the I hope you

00:01:00,000 --> 00:01:04,439
all know that these are co-located with

00:01:01,800 --> 00:01:06,240
open source summits now it is for this

00:01:04,439 --> 00:01:08,970
year in Austin for North America and

00:01:06,240 --> 00:01:11,430
Dublin Ireland for the European events

00:01:08,970 --> 00:01:14,820
the call for papers for open source

00:01:11,430 --> 00:01:18,439
summit closed last weekend but our o our

00:01:14,820 --> 00:01:21,600
call for papers is still open I think

00:01:18,439 --> 00:01:22,170
I'm looking at the agenda again the call

00:01:21,600 --> 00:01:24,780
for papers

00:01:22,170 --> 00:01:28,530
I think closes sometime in March I will

00:01:24,780 --> 00:01:32,670
put in the exact date here we did have a

00:01:28,530 --> 00:01:34,890
call for co-chairs as always we were

00:01:32,670 --> 00:01:38,340
looking for nominations for coachers

00:01:34,890 --> 00:01:40,890
I've received so so far only a handful

00:01:38,340 --> 00:01:42,600
of nominations I could proceed with that

00:01:40,890 --> 00:01:44,790
but I would like to keep that open for

00:01:42,600 --> 00:01:47,310
one more day they were supposed to close

00:01:44,790 --> 00:01:50,970
last night but I will keep that keep

00:01:47,310 --> 00:01:54,740
this open for one more day so that folks

00:01:50,970 --> 00:01:58,350
can maybe have their last minute

00:01:54,740 --> 00:02:01,140
nominations sending in or the co-chair

00:01:58,350 --> 00:02:03,299
nominations the only difference with

00:02:01,140 --> 00:02:05,280
co-chairs this time is that we will not

00:02:03,299 --> 00:02:08,280
just be asking the cultures to look at

00:02:05,280 --> 00:02:11,009
the submissions and help us rate the

00:02:08,280 --> 00:02:14,250
sessions or set of the sessions but we

00:02:11,009 --> 00:02:17,580
will also be looking for there

00:02:14,250 --> 00:02:18,990
advise or guidance as to what the format

00:02:17,580 --> 00:02:24,090
should be because we only have two

00:02:18,990 --> 00:02:26,220
tracks that developers track and the

00:02:24,090 --> 00:02:28,500
contributor track so instead of having

00:02:26,220 --> 00:02:30,570
seven different tracks for a single day

00:02:28,500 --> 00:02:34,260
event we'd reduced it to just two tracks

00:02:30,570 --> 00:02:36,050
so to answer your question Tyler it

00:02:34,260 --> 00:02:38,160
would be just for two tracks the

00:02:36,050 --> 00:02:42,630
developers track and the contributors

00:02:38,160 --> 00:02:45,660
track and we are looking for the

00:02:42,630 --> 00:02:47,700
co-chairs guidance on structuring the

00:02:45,660 --> 00:02:49,740
day or the format as well what would be

00:02:47,700 --> 00:02:52,380
the best given the submissions or given

00:02:49,740 --> 00:02:55,250
the single day even format what would be

00:02:52,380 --> 00:02:57,450
the best it would be a good idea to have

00:02:55,250 --> 00:02:58,650
session after session after session the

00:02:57,450 --> 00:03:00,930
way you we usually have with the

00:02:58,650 --> 00:03:04,200
breakout talks or will it be good to

00:03:00,930 --> 00:03:05,880
have a roundtable discussion or a retro

00:03:04,200 --> 00:03:08,610
kind of a discussion and then move into

00:03:05,880 --> 00:03:10,080
session so we would look for the

00:03:08,610 --> 00:03:11,550
co-chairs to give us that kind of a

00:03:10,080 --> 00:03:13,620
guidance mainly because this time we

00:03:11,550 --> 00:03:15,960
also will not be having keynotes it is

00:03:13,620 --> 00:03:17,520
as of now we will we're not planning on

00:03:15,960 --> 00:03:19,200
having a keynote stage given it's a

00:03:17,520 --> 00:03:21,360
single day event we did not want to take

00:03:19,200 --> 00:03:23,940
away much time from the breakout talks

00:03:21,360 --> 00:03:25,920
or from this rest of the discussions

00:03:23,940 --> 00:03:27,690
that would be more useful for the

00:03:25,920 --> 00:03:29,520
community so at least for now

00:03:27,690 --> 00:03:30,410
tentatively we are not planning on

00:03:29,520 --> 00:03:34,080
keynotes

00:03:30,410 --> 00:03:36,840
so we would be looking for the co-chairs

00:03:34,080 --> 00:03:38,130
as guidance on setting the structure for

00:03:36,840 --> 00:03:40,350
the rest of the day as well so it's a

00:03:38,130 --> 00:03:42,200
little more important as I mentioned it

00:03:40,350 --> 00:03:45,600
in the blog post then it has always been

00:03:42,200 --> 00:03:47,400
I mean it has always been important but

00:03:45,600 --> 00:03:49,230
this time it's a little more important

00:03:47,400 --> 00:03:51,590
because you all will be structuring the

00:03:49,230 --> 00:03:54,720
day as well the flow of the day as well

00:03:51,590 --> 00:03:57,780
so with that I will update all of the

00:03:54,720 --> 00:04:00,180
links in the meeting notes and I will

00:03:57,780 --> 00:04:02,330
pass it back to Neil unless anyone has

00:04:00,180 --> 00:04:02,330
questions

00:04:06,610 --> 00:04:10,690
okay well if anyone has questions I'm

00:04:09,490 --> 00:04:11,890
here through the rest of the call as

00:04:10,690 --> 00:04:14,530
well you can either send me a private

00:04:11,890 --> 00:04:17,130
message here or ask the question on chat

00:04:14,530 --> 00:04:19,989
or on slack or email thanks so much

00:04:17,130 --> 00:04:22,120
Thank You SWANA okay great so let's move

00:04:19,989 --> 00:04:24,130
on pmc project highlights so this way we

00:04:22,120 --> 00:04:26,770
hear from each of the PMC's I think

00:04:24,130 --> 00:04:28,870
first ups the runtime PMC I think I see

00:04:26,770 --> 00:04:30,790
Eric hey Neil yeah I'm here

00:04:28,870 --> 00:04:33,730
happy to give a quick overview of some

00:04:30,790 --> 00:04:37,270
of the highlights over the past month or

00:04:33,730 --> 00:04:38,890
so as others have mentioned the cube CF

00:04:37,270 --> 00:04:39,460
incubation proposal is out on the

00:04:38,890 --> 00:04:42,550
mailing list

00:04:39,460 --> 00:04:44,650
and if you have any comments or

00:04:42,550 --> 00:04:46,150
questions on it now is really your last

00:04:44,650 --> 00:04:50,590
chance because the PMC is going to

00:04:46,150 --> 00:04:52,540
consider it over the next few days so

00:04:50,590 --> 00:04:56,350
looking forward to to getting that in

00:04:52,540 --> 00:04:58,360
and across the existing project teams

00:04:56,350 --> 00:05:01,780
there's been a lot of activity primarily

00:04:58,360 --> 00:05:03,850
around running CF on Kate's

00:05:01,780 --> 00:05:06,220
so the relevant team has been

00:05:03,850 --> 00:05:09,820
progressing with their efforts to get

00:05:06,220 --> 00:05:11,620
the CF rickets integration project up

00:05:09,820 --> 00:05:14,470
and running I know if there's some

00:05:11,620 --> 00:05:17,620
component teams that have been getting

00:05:14,470 --> 00:05:21,910
their components up to their latest

00:05:17,620 --> 00:05:25,950
stable templates and configuration as

00:05:21,910 --> 00:05:29,070
part of that as one example Cappy is

00:05:25,950 --> 00:05:32,200
progressing on both their work to

00:05:29,070 --> 00:05:34,450
provide Kate's packaging and deployment

00:05:32,200 --> 00:05:37,470
artifacts for the clock controller

00:05:34,450 --> 00:05:41,950
components as well as their integration

00:05:37,470 --> 00:05:43,419
with the capac machinery to run build

00:05:41,950 --> 00:05:44,440
pack staging tasks using cloud native

00:05:43,419 --> 00:05:47,890
build packs so I think they're very

00:05:44,440 --> 00:05:49,810
close to having full CF push workflow

00:05:47,890 --> 00:05:50,520
working end to end so that's very

00:05:49,810 --> 00:05:53,820
exciting

00:05:50,520 --> 00:05:57,010
vlog creators also moving forward on

00:05:53,820 --> 00:06:00,760
integrating their new architecture into

00:05:57,010 --> 00:06:03,040
the CF rockets integration framework

00:06:00,760 --> 00:06:04,419
that's all based on fluid D for the log

00:06:03,040 --> 00:06:07,150
collection and they're standardizing

00:06:04,419 --> 00:06:09,880
that syslog for transport across

00:06:07,150 --> 00:06:13,950
components and then also networking

00:06:09,880 --> 00:06:16,060
they've had their sto beast ingress

00:06:13,950 --> 00:06:18,400
integrated into that for a while and

00:06:16,060 --> 00:06:20,470
they've been doing more now to take more

00:06:18,400 --> 00:06:23,680
advantage of the histiocytes cars

00:06:20,470 --> 00:06:28,180
to provide TLS between system components

00:06:23,680 --> 00:06:31,570
and that's I think wrapping up so they

00:06:28,180 --> 00:06:33,490
are now also starting to focus on more

00:06:31,570 --> 00:06:34,570
configuration for certificate management

00:06:33,490 --> 00:06:37,330
so actually being able to configure

00:06:34,570 --> 00:06:40,750
certificates on the ingress gateway for

00:06:37,330 --> 00:06:43,590
TLS termination and doing other

00:06:40,750 --> 00:06:48,520
management of certificates inside of the

00:06:43,590 --> 00:06:50,620
system component coordination UA also

00:06:48,520 --> 00:06:52,270
they're continuing to progress on their

00:06:50,620 --> 00:06:56,170
kids to playable artifact which I think

00:06:52,270 --> 00:07:00,060
it's really generic and likely to have

00:06:56,170 --> 00:07:04,900
applications outside of just the CF

00:07:00,060 --> 00:07:07,600
integration responsibilities also volume

00:07:04,900 --> 00:07:09,940
services they have been working on

00:07:07,600 --> 00:07:13,110
getting their existing support for

00:07:09,940 --> 00:07:17,380
shared SMB volumes for app containers

00:07:13,110 --> 00:07:19,480
into CF frigates I think things that

00:07:17,380 --> 00:07:23,380
they've been doing have been targeting

00:07:19,480 --> 00:07:24,430
both relevant project and keep CF so I

00:07:23,380 --> 00:07:26,260
think they're wrapping that up and

00:07:24,430 --> 00:07:29,080
they're starting to look more

00:07:26,260 --> 00:07:32,080
deliberately deliberately at expanding

00:07:29,080 --> 00:07:34,150
support for their volume attachments to

00:07:32,080 --> 00:07:37,750
things like single attached storage and

00:07:34,150 --> 00:07:41,860
then just more on an administrative note

00:07:37,750 --> 00:07:44,940
the Diego team they've decided to try

00:07:41,860 --> 00:07:49,600
out just using github for any kind of

00:07:44,940 --> 00:07:51,340
story tracking and issue intake so

00:07:49,600 --> 00:07:52,510
they've I think at this point cleared

00:07:51,340 --> 00:07:54,760
out their tracker project and they're

00:07:52,510 --> 00:07:57,280
just focusing on github as more

00:07:54,760 --> 00:08:01,180
community accessible resource so giving

00:07:57,280 --> 00:08:02,800
that a bit of an experiment I see we

00:08:01,180 --> 00:08:12,100
have a Jules here and the updates from

00:08:02,800 --> 00:08:14,110
Irene ii-era garden which Jules like the

00:08:12,100 --> 00:08:18,340
collective noun is embarrassment and

00:08:14,110 --> 00:08:21,640
embarrassment so Jules's it's not made

00:08:18,340 --> 00:08:24,520
that thing we shipped a little minor

00:08:21,640 --> 00:08:29,440
release of arena today get it while it's

00:08:24,520 --> 00:08:30,850
hot we are very close now to so we're

00:08:29,440 --> 00:08:32,469
calling it the one point one milestone

00:08:30,850 --> 00:08:34,719
even though we ship one point three

00:08:32,469 --> 00:08:37,839
today because we do love

00:08:34,719 --> 00:08:40,629
confuse people but 1.1 is sort of like

00:08:37,839 --> 00:08:43,329
the things that we kind of pushed over

00:08:40,629 --> 00:08:46,389
1.0 to 1.0 last year kind of the

00:08:43,329 --> 00:08:49,689
polishes we're very close to that and

00:08:46,389 --> 00:08:54,149
then we will start on v3 as our next big

00:08:49,689 --> 00:08:54,149
thing just completing the v3 futures

00:08:56,250 --> 00:09:02,529
cool like tasks and rolling deploys or

00:09:00,360 --> 00:09:04,810
you're not trying to tackle like

00:09:02,529 --> 00:09:08,769
isolation segments or anything not

00:09:04,810 --> 00:09:10,720
isolation segments although I mean well

00:09:08,769 --> 00:09:12,430
that's a whole other thing but you have

00:09:10,720 --> 00:09:13,689
lots of nice new options we're keeping

00:09:12,430 --> 00:09:17,170
at ease for some of those things but

00:09:13,689 --> 00:09:19,600
more more the user facing side of things

00:09:17,170 --> 00:09:21,939
things that users might expect to work

00:09:19,600 --> 00:09:23,649
like as you say like tasks a lot of

00:09:21,939 --> 00:09:34,149
deployments rollbacks that kind of thing

00:09:23,649 --> 00:09:36,910
very good done Erika's everything yeah I

00:09:34,149 --> 00:09:39,309
think I think that's a good list perfect

00:09:36,910 --> 00:09:42,910
thank you very much okay next up wash

00:09:39,309 --> 00:09:46,389
pmc do we have anyone I'm just looking

00:09:42,910 --> 00:09:47,259
through participants Marco Morgan I

00:09:46,389 --> 00:09:52,149
don't know if we have anyone from the

00:09:47,259 --> 00:09:53,589
Bosch team that can give an update if

00:09:52,149 --> 00:09:56,170
there is no one from the Bosch team

00:09:53,589 --> 00:09:59,889
there is also bashed pmc call if I'm not

00:09:56,170 --> 00:10:03,490
wrong tomorrow at the same time so you

00:09:59,889 --> 00:10:06,430
all can also join and either yes it is

00:10:03,490 --> 00:10:08,559
this at the same time tomorrow where can

00:10:06,430 --> 00:10:10,540
people find details on its on the

00:10:08,559 --> 00:10:12,519
community calendar good point wait I

00:10:10,540 --> 00:10:18,069
will post the link here and also the

00:10:12,519 --> 00:10:19,029
meeting notes Thank You Sona and I think

00:10:18,069 --> 00:10:21,879
we're going to get the same for

00:10:19,029 --> 00:10:23,470
extension obviously dr. max isn't here

00:10:21,879 --> 00:10:28,180
not sure if we have anyone else who can

00:10:23,470 --> 00:10:30,420
speak to extensions they're going to get

00:10:28,180 --> 00:10:33,100
an extension and having to talk about it

00:10:30,420 --> 00:10:35,370
so I know they have a I think they have

00:10:33,100 --> 00:10:37,389
their meeting on this coming Monday so

00:10:35,370 --> 00:10:40,240
look in the camera as well for that one

00:10:37,389 --> 00:10:41,680
and join if you interested all right wow

00:10:40,240 --> 00:10:43,509
that was a quick with truth EMC

00:10:41,680 --> 00:10:45,279
highlights so I guess this is the always

00:10:43,509 --> 00:10:47,079
interesting bit not that the last it

00:10:45,279 --> 00:10:48,510
wasn't interesting is we get to hear

00:10:47,079 --> 00:10:52,920
from people in the community

00:10:48,510 --> 00:10:58,220
so I guess first up we have CF smoke

00:10:52,920 --> 00:10:59,730
tests oh no do you want to take it away

00:10:58,220 --> 00:11:03,360
sound check

00:10:59,730 --> 00:11:05,279
one two three so next to me okay

00:11:03,360 --> 00:11:07,199
yes thank you let me see if I can share

00:11:05,279 --> 00:11:12,870
my screen it's the first time I'm

00:11:07,199 --> 00:11:17,630
sharing using let me see it says like

00:11:12,870 --> 00:11:20,130
this is that showing up my presentation

00:11:17,630 --> 00:11:22,560
absolutely yep okay just checking

00:11:20,130 --> 00:11:24,660
because normally I will do this from my

00:11:22,560 --> 00:11:27,839
laptop but I have been banned to the

00:11:24,660 --> 00:11:30,870
Attic so now I'm sitting with my regular

00:11:27,839 --> 00:11:35,910
PC and I just had to install the zoom

00:11:30,870 --> 00:11:39,600
and everything what if it's working then

00:11:35,910 --> 00:11:41,250
yeah well it's it's actually not yeah I

00:11:39,600 --> 00:11:44,519
don't know really what's definition of a

00:11:41,250 --> 00:11:48,329
community project basically I asked

00:11:44,519 --> 00:11:50,430
Swarna like how can we make things

00:11:48,329 --> 00:11:55,230
available in the best way and see just

00:11:50,430 --> 00:11:59,639
adjoining this call so basically it's

00:11:55,230 --> 00:12:02,819
about yeah smoke tests basically at this

00:11:59,639 --> 00:12:06,449
moment we have what we call the top

00:12:02,819 --> 00:12:08,970
native application platform yeah well we

00:12:06,449 --> 00:12:09,540
are relatively small compared to the big

00:12:08,970 --> 00:12:13,260
guns

00:12:09,540 --> 00:12:14,970
of course like Susie and others but we

00:12:13,260 --> 00:12:17,990
are government organization and

00:12:14,970 --> 00:12:31,649
basically we have to cope with our own

00:12:17,990 --> 00:12:34,199
situation for government regulation be

00:12:31,649 --> 00:12:44,730
my internet connection stable is it

00:12:34,199 --> 00:12:46,350
still feasible oh okay thank you because

00:12:44,730 --> 00:12:47,639
I'm the reason I moved to the Attic

00:12:46,350 --> 00:12:49,769
because here I have a wired connection

00:12:47,639 --> 00:12:51,959
the wireless I thought is too much of a

00:12:49,769 --> 00:12:55,500
risk and especially because I'm up

00:12:51,959 --> 00:12:57,209
streaming this but anyways we have five

00:12:55,500 --> 00:13:00,949
o'clock boundary and since lastly we

00:12:57,209 --> 00:13:00,949
also have communities array

00:13:01,800 --> 00:13:08,730
and yeah we have to monitor both of them

00:13:06,150 --> 00:13:15,420
well pamita's go fine I guess everybody

00:13:08,730 --> 00:13:18,150
already knows about that we sent a

00:13:15,420 --> 00:13:20,340
letter to select nowadays of all the

00:13:18,150 --> 00:13:24,560
common problems if you start turning on

00:13:20,340 --> 00:13:29,310
the lights you get a quite a lot of them

00:13:24,560 --> 00:13:32,520
but we were missing one big thing I mean

00:13:29,310 --> 00:13:34,590
you can look at numbers but if people

00:13:32,520 --> 00:13:37,920
start calling because applications don't

00:13:34,590 --> 00:13:40,530
work at least that's the perception we

00:13:37,920 --> 00:13:42,180
need to do have some quick way to see if

00:13:40,530 --> 00:13:44,760
it's the platform which is not working

00:13:42,180 --> 00:13:47,520
or just one of the hundreds of

00:13:44,760 --> 00:13:50,090
applications on the platform we didn't

00:13:47,520 --> 00:13:54,270
really have a standard solution for this

00:13:50,090 --> 00:13:57,330
so we asked our partner to build a smoke

00:13:54,270 --> 00:14:00,840
test 4 + foundry and later on we also

00:13:57,330 --> 00:14:04,170
added one for communities basically it's

00:14:00,840 --> 00:14:06,900
checks if the platform is operating if

00:14:04,170 --> 00:14:11,040
anything fails we will get an alert on

00:14:06,900 --> 00:14:12,900
the select channel yeah and we also have

00:14:11,040 --> 00:14:15,690
a nice dashboard we can share with the

00:14:12,900 --> 00:14:18,240
service desk and also our developers can

00:14:15,690 --> 00:14:19,620
also check out the dashboard it's just

00:14:18,240 --> 00:14:22,530
an application running on the platform

00:14:19,620 --> 00:14:25,280
itself which shells if everything is

00:14:22,530 --> 00:14:32,100
green more or less

00:14:25,280 --> 00:14:34,290
and if it's all green an application

00:14:32,100 --> 00:14:36,750
there is because that's what happens

00:14:34,290 --> 00:14:38,520
ever happen often in the past an

00:14:36,750 --> 00:14:40,770
application stopped responding and the

00:14:38,520 --> 00:14:43,620
platform gasps blades and yeah we needed

00:14:40,770 --> 00:14:48,030
to quickly point out where the problem

00:14:43,620 --> 00:14:50,280
is so well okay well this so I can skip

00:14:48,030 --> 00:14:54,300
I guess this is just like a customized

00:14:50,280 --> 00:14:56,520
dashboard I don't know if anybody online

00:14:54,300 --> 00:15:00,390
has experience with boss director

00:14:56,520 --> 00:15:03,570
monitoring that's one thing we were

00:15:00,390 --> 00:15:05,880
missing when we started out as

00:15:03,570 --> 00:15:08,040
Prometheus and kevanna for monitoring

00:15:05,880 --> 00:15:12,060
cloud foundry all the boss VMs were

00:15:08,040 --> 00:15:14,530
monitored except for boss director

00:15:12,060 --> 00:15:16,480
itself I mean

00:15:14,530 --> 00:15:18,460
when we had a problem with borscht we

00:15:16,480 --> 00:15:20,050
were not even aware of the problem until

00:15:18,460 --> 00:15:40,000
we realized we could no longer manage

00:15:20,050 --> 00:15:41,280
the borscht vm's so we added it's

00:15:40,000 --> 00:15:43,750
probably too small

00:15:41,280 --> 00:15:45,760
it's the text readable for the screen

00:15:43,750 --> 00:15:53,440
for the people because I don't know how

00:15:45,760 --> 00:15:56,260
it shows up in the in the recording it's

00:15:53,440 --> 00:16:05,050
it's like there was like a little delay

00:15:56,260 --> 00:16:07,240
in your inner-self okay okay here we

00:16:05,050 --> 00:16:09,370
have a screen shot of our smoke this

00:16:07,240 --> 00:16:11,200
pipeline I was not sure if I could show

00:16:09,370 --> 00:16:13,390
this life so I made some screenshots

00:16:11,200 --> 00:16:16,990
because yeah it all depends on the

00:16:13,390 --> 00:16:19,420
network connection I guess basically it

00:16:16,990 --> 00:16:22,150
runs every five minutes

00:16:19,420 --> 00:16:25,570
it pushes an app and the app itself will

00:16:22,150 --> 00:16:28,120
check if it can connect to all its bond

00:16:25,570 --> 00:16:30,520
services and execute some basic tests

00:16:28,120 --> 00:16:33,760
for example for database it creates a

00:16:30,520 --> 00:16:36,280
table inserts and records tries to read

00:16:33,760 --> 00:16:39,640
it again drops the table and yeah

00:16:36,280 --> 00:16:44,080
basically this cycle repeats and then

00:16:39,640 --> 00:16:46,420
the dashboard which looks kind of like

00:16:44,080 --> 00:16:48,400
this where we can see on the big screen

00:16:46,420 --> 00:16:51,520
in our operations room all our

00:16:48,400 --> 00:16:53,770
environments if everything is ok if it's

00:16:51,520 --> 00:16:56,380
ok it's green if it's failing for

00:16:53,770 --> 00:17:03,310
whatever reason it will be red and then

00:16:56,380 --> 00:17:05,860
we can check it out well of course Cloud

00:17:03,310 --> 00:17:08,140
Foundry is not an isolated part that's

00:17:05,860 --> 00:17:10,870
also one of our challenges I'm really

00:17:08,140 --> 00:17:14,100
curious how other people deal with it we

00:17:10,870 --> 00:17:24,250
have integration with DNS storage

00:17:14,100 --> 00:17:27,939
external databases as another components

00:17:24,250 --> 00:17:29,799
and yeah because the platform depends on

00:17:27,939 --> 00:17:34,210
or certificates get expired then the

00:17:29,799 --> 00:17:36,549
platform also stops working so yeah we

00:17:34,210 --> 00:17:41,549
needed to get a clearer picture where we

00:17:36,549 --> 00:17:41,549
are and how we can monitor everything

00:17:42,240 --> 00:17:48,759
well

00:17:43,450 --> 00:17:50,830
this is I guess obvious I guess I

00:17:48,759 --> 00:17:51,700
already mentioned we had no monitoring

00:17:50,830 --> 00:17:54,100
on borsch

00:17:51,700 --> 00:17:57,009
so the Reaper which is mentioned at the

00:17:54,100 --> 00:17:59,409
end also contains a bush exporter but if

00:17:57,009 --> 00:18:02,139
somebody now is going to tell us there

00:17:59,409 --> 00:18:04,620
is a standard solution I'd love to hear

00:18:02,139 --> 00:18:07,600
about it because this is a custom-built

00:18:04,620 --> 00:18:13,600
borscht exporter to monitor borscht

00:18:07,600 --> 00:18:17,590
itself and this is still we need to work

00:18:13,600 --> 00:18:21,100
on we don't have this yet in place and

00:18:17,590 --> 00:18:23,289
well again this is something also which

00:18:21,100 --> 00:18:26,919
caused problems in the past when I was

00:18:23,289 --> 00:18:30,490
an upload of software then suddenly bore

00:18:26,919 --> 00:18:51,190
started updating deployments when they

00:18:30,490 --> 00:18:54,519
were actually in use or sleeping close

00:18:51,190 --> 00:19:04,649
to the platform if you didn't build

00:18:54,519 --> 00:19:07,149
black restaging because so let me see

00:19:04,649 --> 00:19:09,669
well the main reason we have the smoke

00:19:07,149 --> 00:19:12,159
test basically well we can try to

00:19:09,669 --> 00:19:14,559
prevent things from becoming really a

00:19:12,159 --> 00:19:17,600
problem that's why we initiated this

00:19:14,559 --> 00:19:20,790
project in the first place

00:19:17,600 --> 00:19:22,650
we did ran into some issues so we would

00:19:20,790 --> 00:19:24,630
very much like to hear from other people

00:19:22,650 --> 00:19:28,460
how they men how they manage smoke

00:19:24,630 --> 00:19:31,950
testing their platform if they do

00:19:28,460 --> 00:19:34,380
because in both cases we either have the

00:19:31,950 --> 00:19:36,900
boss director filling up storage when we

00:19:34,380 --> 00:19:39,270
run both air and smoke tests like we do

00:19:36,900 --> 00:19:41,520
for Q Benitez and in a cloud foundry

00:19:39,270 --> 00:19:44,010
trace the bill pay cash was filling up

00:19:41,520 --> 00:19:52,020
because we were repeatedly pushing the

00:19:44,010 --> 00:19:53,580
same app well these are the things we

00:19:52,020 --> 00:19:56,220
are still working on we want to keep

00:19:53,580 --> 00:19:58,680
track of availability of the platform

00:19:56,220 --> 00:20:00,960
somehow some kind of nice figure for our

00:19:58,680 --> 00:20:04,920
management to determine how much uptime

00:20:00,960 --> 00:20:10,880
we actually have and I'm not sure if

00:20:04,920 --> 00:20:14,580
this is an excuse it's just angry words

00:20:10,880 --> 00:20:17,490
because we do often built back up grades

00:20:14,580 --> 00:20:20,880
or okay so we would like very much

00:20:17,490 --> 00:20:25,260
feedback on this point and also yeah

00:20:20,880 --> 00:20:28,320
last but not least any feedback would be

00:20:25,260 --> 00:20:30,390
very much welcome because I'm sure we

00:20:28,320 --> 00:20:36,630
are not the only ones facing problems

00:20:30,390 --> 00:20:38,790
like we did and well these are if people

00:20:36,630 --> 00:20:40,260
are interested in checking the codes

00:20:38,790 --> 00:20:42,210
we're actually using in the platform

00:20:40,260 --> 00:20:44,810
well slightly modified version our

00:20:42,210 --> 00:20:48,120
partner made it available on github so

00:20:44,810 --> 00:20:52,500
if people would like to check things out

00:20:48,120 --> 00:20:56,060
they are available there you know that's

00:20:52,500 --> 00:21:06,270
it for my part I can show some some live

00:20:56,060 --> 00:21:10,070
stuff but we just like it's passing or

00:21:06,270 --> 00:21:13,410
failing but it's the sound still working

00:21:10,070 --> 00:21:22,380
so I pass back presentation to the

00:21:13,410 --> 00:21:25,650
presenters the others any questions are

00:21:22,380 --> 00:21:27,270
we on the right track because we got the

00:21:25,650 --> 00:21:29,220
feeling we are basically like really

00:21:27,270 --> 00:21:32,030
felting the wheel somehow when we

00:21:29,220 --> 00:21:32,030
started out this

00:21:35,140 --> 00:21:39,559
well that's just the surface of it I am

00:21:37,549 --> 00:21:41,450
very curious we've we've solved similar

00:21:39,559 --> 00:21:43,940
things with people in the past as well

00:21:41,450 --> 00:21:45,980
and we have a project on github called

00:21:43,940 --> 00:21:48,860
lighthouse it might be worth kind of

00:21:45,980 --> 00:21:50,860
comparing notes at some point okay

00:21:48,860 --> 00:21:53,240
no definitely I should check it out

00:21:50,860 --> 00:21:54,950
b-because yeah we found fairly little

00:21:53,240 --> 00:21:58,279
feedback we did notice that whenever

00:21:54,950 --> 00:22:02,240
everywhere I did I said a presentation

00:21:58,279 --> 00:22:04,789
on on the CF summit twice that doesn't

00:22:02,240 --> 00:22:06,350
really make me experienced but I did

00:22:04,789 --> 00:22:08,000
notice that whenever we were talking

00:22:06,350 --> 00:22:09,980
about the smoke test and people were

00:22:08,000 --> 00:22:12,649
like hey we need something like this and

00:22:09,980 --> 00:22:14,779
that triggered me like maybe we should

00:22:12,649 --> 00:22:17,980
make this publicly available in some

00:22:14,779 --> 00:22:17,980
form and yeah

00:22:25,250 --> 00:22:36,140
oh no or spring

00:22:33,020 --> 00:22:38,090
thank you very much so I think we're

00:22:36,140 --> 00:22:41,260
hearing from some funny is that right

00:22:38,090 --> 00:22:46,789
from t-mobile on the same subject

00:22:41,260 --> 00:22:49,220
hey hey this is and yep we will also be

00:22:46,789 --> 00:22:52,460
presenting a smoke test and our senior

00:22:49,220 --> 00:22:54,470
engineer peers is on the call and if you

00:22:52,460 --> 00:22:57,020
can he came as a presenter he'll be

00:22:54,470 --> 00:23:00,049
presenting today and then we also have

00:22:57,020 --> 00:23:03,260
Ally you also worked on the snow test

00:23:00,049 --> 00:23:05,600
our joining today but pH P will be the

00:23:03,260 --> 00:23:09,289
one to talk about the scale at which

00:23:05,600 --> 00:23:14,480
will run at t-mobile and how small tests

00:23:09,289 --> 00:23:16,960
have really helped us perfect thank you

00:23:14,480 --> 00:23:16,960
take it away

00:23:29,950 --> 00:23:42,400
everyone is mine visible cool so good

00:23:41,270 --> 00:23:45,409
morning everyone

00:23:42,400 --> 00:23:50,360
MP from t-mobile back from engineering

00:23:45,409 --> 00:23:53,150
team work with Sammy and me and this is

00:23:50,360 --> 00:23:56,620
my first time in this forum so thank you

00:23:53,150 --> 00:23:59,620
for having us and let us share our work

00:23:56,620 --> 00:24:03,080
pretty excited share this with everyone

00:23:59,620 --> 00:24:06,470
just a quick norm great presentation oh

00:24:03,080 --> 00:24:07,760
no definitely I would like to say that

00:24:06,470 --> 00:24:10,970
you're on the right path

00:24:07,760 --> 00:24:12,919
we are trying to do similar stuff just

00:24:10,970 --> 00:24:16,490
in a different context at a different

00:24:12,919 --> 00:24:19,179
scale and definitely I will touch base

00:24:16,490 --> 00:24:24,260
on some of the things that Ono has

00:24:19,179 --> 00:24:28,039
already set the context for and before I

00:24:24,260 --> 00:24:30,950
move on with the presentation although

00:24:28,039 --> 00:24:33,830
everyone is aware of what smoke tests

00:24:30,950 --> 00:24:38,500
are and what are they choose for I like

00:24:33,830 --> 00:24:42,910
to give an analogy for the whole

00:24:38,500 --> 00:24:46,270
drive to initiate this effort although

00:24:42,910 --> 00:24:49,690
we have open source smoke tests

00:24:46,270 --> 00:24:53,850
available so what was the need for us to

00:24:49,690 --> 00:24:57,480
sort of build these from scratch well

00:24:53,850 --> 00:25:00,850
the simplest analogy I can think of is

00:24:57,480 --> 00:25:03,520
monitoring D health and performance of a

00:25:00,850 --> 00:25:05,550
car let's say for example if you want to

00:25:03,520 --> 00:25:08,860
make sure that your car is working

00:25:05,550 --> 00:25:10,840
finally one thing is to monitor all the

00:25:08,860 --> 00:25:12,850
metrics whether your store materials

00:25:10,840 --> 00:25:15,250
working fine whether your brakes are

00:25:12,850 --> 00:25:18,640
working fine and things like that but

00:25:15,250 --> 00:25:21,070
the other approach is to see whether all

00:25:18,640 --> 00:25:25,720
those components can work together and

00:25:21,070 --> 00:25:28,270
that's what the tribe is for us to build

00:25:25,720 --> 00:25:31,870
these smoke tests want to test the

00:25:28,270 --> 00:25:34,600
workflows not individual health of the

00:25:31,870 --> 00:25:38,740
met the critical components of count

00:25:34,600 --> 00:25:42,550
foundry but overall health

00:25:38,740 --> 00:25:44,980
as to verify that those components of

00:25:42,550 --> 00:25:49,420
working well together so that's our

00:25:44,980 --> 00:25:51,910
drive to building smoke test we have the

00:25:49,420 --> 00:25:57,430
platform engineering team we operate

00:25:51,910 --> 00:26:00,070
both platforms foundry and kinetics the

00:25:57,430 --> 00:26:02,710
scale is pretty large at t-mobile we are

00:26:00,070 --> 00:26:07,570
trying almost 80,000 plus application

00:26:02,710 --> 00:26:10,750
instances on foundry and 15,000 plus

00:26:07,570 --> 00:26:14,230
parts on kubernetes across two data

00:26:10,750 --> 00:26:17,530
centers three regions and so on pretty

00:26:14,230 --> 00:26:20,380
much every team that builds application

00:26:17,530 --> 00:26:24,580
within t-mobile uses either of these two

00:26:20,380 --> 00:26:28,840
platforms and given the inception of cow

00:26:24,580 --> 00:26:31,390
foundry within our team the third option

00:26:28,840 --> 00:26:36,910
has grown tremendously high am obviously

00:26:31,390 --> 00:26:42,400
plafond rates are more more used

00:26:36,910 --> 00:26:44,760
platform i would like to say and that

00:26:42,400 --> 00:26:47,110
basically puts us in a position that

00:26:44,760 --> 00:26:51,910
monitoring this mission critical for us

00:26:47,110 --> 00:26:55,630
we can't let events

00:26:51,910 --> 00:26:58,270
without being noticed so we need to

00:26:55,630 --> 00:27:02,350
really be on top of things not just as

00:26:58,270 --> 00:27:05,440
far as the health of critical components

00:27:02,350 --> 00:27:07,840
but also making sure that you know those

00:27:05,440 --> 00:27:10,380
components are working together as well

00:27:07,840 --> 00:27:13,090
as workflows are concerned because

00:27:10,380 --> 00:27:15,460
application developers go through those

00:27:13,090 --> 00:27:17,680
workflows every single day and we need

00:27:15,460 --> 00:27:22,360
to make sure that those boxes are

00:27:17,680 --> 00:27:26,170
healthy in healthy state so we obviously

00:27:22,360 --> 00:27:29,110
we decided with the open source smoke

00:27:26,170 --> 00:27:32,370
test but there were some gaps that we

00:27:29,110 --> 00:27:35,890
found and those are causing some issues

00:27:32,370 --> 00:27:38,650
to begin with there were some upstream

00:27:35,890 --> 00:27:41,860
changes that our pipelines are pulling

00:27:38,650 --> 00:27:46,270
and the pipeline's would break if if

00:27:41,860 --> 00:27:50,050
something for example recently one app

00:27:46,270 --> 00:27:52,200
got deleted from the public github repo

00:27:50,050 --> 00:27:55,620
and our pipeline one of our pipeline

00:27:52,200 --> 00:28:00,730
started breaking so those kind of things

00:27:55,620 --> 00:28:03,190
sort of put us in a bad spot where we

00:28:00,730 --> 00:28:05,620
were relying on something open-source

00:28:03,190 --> 00:28:08,890
but it's something changes and we are

00:28:05,620 --> 00:28:13,750
constantly using it those changes could

00:28:08,890 --> 00:28:18,550
cause problems for us then the word few

00:28:13,750 --> 00:28:20,950
tests that were using tremendous amount

00:28:18,550 --> 00:28:27,520
of resources on every single one of

00:28:20,950 --> 00:28:32,620
those tests and because of the lack of

00:28:27,520 --> 00:28:35,830
post-completion cleanups we were wasting

00:28:32,620 --> 00:28:38,530
a ton of resources at some point when we

00:28:35,830 --> 00:28:41,830
tried to clean up our foundations which

00:28:38,530 --> 00:28:44,740
were like 15 or so at that one of time

00:28:41,830 --> 00:28:49,330
we have 6,000 plus spaces at service

00:28:44,740 --> 00:28:55,420
instances all SCOTUS and so on occupying

00:28:49,330 --> 00:28:59,920
all these memory so that again together

00:28:55,420 --> 00:29:01,390
hurt alarm for us and we needed to go

00:28:59,920 --> 00:29:03,880
ahead and clean up all those resources

00:29:01,390 --> 00:29:05,020
manually and through automation and so

00:29:03,880 --> 00:29:07,090
on

00:29:05,020 --> 00:29:10,900
there were some operations like if you

00:29:07,090 --> 00:29:15,250
want to test how's your my sequel so

00:29:10,900 --> 00:29:17,650
this broker is drink you don't want to

00:29:15,250 --> 00:29:19,920
start right from creating walls and

00:29:17,650 --> 00:29:22,450
spaces and so on because those

00:29:19,920 --> 00:29:25,960
operations don't really tell you

00:29:22,450 --> 00:29:29,110
anything about my episodes poker so

00:29:25,960 --> 00:29:31,650
there were some unnecessary operations

00:29:29,110 --> 00:29:33,850
going on with those motels and then

00:29:31,650 --> 00:29:34,870
because you're doing all these

00:29:33,850 --> 00:29:39,340
operations

00:29:34,870 --> 00:29:41,470
she obviously need had privileges to run

00:29:39,340 --> 00:29:44,260
all these operations which was also

00:29:41,470 --> 00:29:50,740
causing a security risk for us and then

00:29:44,260 --> 00:29:56,080
at the end there was no not so the level

00:29:50,740 --> 00:29:59,200
of granularity for reporting the results

00:29:56,080 --> 00:30:01,510
of these motifs was also not adequate

00:29:59,200 --> 00:30:04,330
for us we wanted to make sure that we

00:30:01,510 --> 00:30:06,460
know how many times a particular

00:30:04,330 --> 00:30:09,550
operation is failing so that we can

00:30:06,460 --> 00:30:14,430
tackle those events in a much more

00:30:09,550 --> 00:30:19,210
focused way and so on so with all these

00:30:14,430 --> 00:30:21,490
we thought that let's try to solve this

00:30:19,210 --> 00:30:24,180
problem from the Big Bang

00:30:21,490 --> 00:30:29,530
right so we decided to go ahead and

00:30:24,180 --> 00:30:31,570
write customized sweep for smokers for

00:30:29,530 --> 00:30:36,190
all the major components that we were

00:30:31,570 --> 00:30:40,510
interested in and the goal was to have a

00:30:36,190 --> 00:30:43,450
solution that's reliable meaning if a

00:30:40,510 --> 00:30:46,450
smoke test fails we want to know or we

00:30:43,450 --> 00:30:50,080
want to be very sure that there's a

00:30:46,450 --> 00:30:52,870
problem at the platform rather not the

00:30:50,080 --> 00:30:55,420
problem with the smoke test itself so we

00:30:52,870 --> 00:30:58,780
want to make it we wanted to make it as

00:30:55,420 --> 00:31:02,500
reliable as possible also plug and play

00:30:58,780 --> 00:31:04,690
play because you know as we are growing

00:31:02,500 --> 00:31:08,230
our platforms and offering new services

00:31:04,690 --> 00:31:11,530
for application developers we want to

00:31:08,230 --> 00:31:15,340
make sure that we are not wasting too

00:31:11,530 --> 00:31:17,260
much time writing new tests from scratch

00:31:15,340 --> 00:31:19,510
and it will take

00:31:17,260 --> 00:31:22,179
significant amount of time so we wanted

00:31:19,510 --> 00:31:25,450
to add new for me to be able to add in

00:31:22,179 --> 00:31:27,539
foundation and Agni test as quickly as

00:31:25,450 --> 00:31:27,539
possible

00:31:27,630 --> 00:31:36,850
again foundation onboarding should be

00:31:31,350 --> 00:31:40,480
easy enough for us too because for last

00:31:36,850 --> 00:31:45,010
one year we have grown from 10 to almost

00:31:40,480 --> 00:31:47,169
25 foundations at this point and we are

00:31:45,010 --> 00:31:49,630
constantly increasing the number of

00:31:47,169 --> 00:31:52,960
foundations so we wanted to make sure

00:31:49,630 --> 00:31:55,389
that our framework should be easy enough

00:31:52,960 --> 00:32:00,190
to allow us to add new foundations

00:31:55,389 --> 00:32:01,899
fairly quickly and then not just adding

00:32:00,190 --> 00:32:05,110
a foundation but also define the

00:32:01,899 --> 00:32:06,820
pipeline of the smoke test on the newer

00:32:05,110 --> 00:32:10,450
formulation as quickly as possible

00:32:06,820 --> 00:32:13,510
through all sorts of automation and then

00:32:10,450 --> 00:32:17,769
we wanted to make sure that every smoke

00:32:13,510 --> 00:32:21,850
test job is customized in the sense that

00:32:17,769 --> 00:32:23,399
for most execution time it takes so we

00:32:21,850 --> 00:32:27,279
wanted to make sure that we are running

00:32:23,399 --> 00:32:29,970
each and individual smoke test with a

00:32:27,279 --> 00:32:35,730
customized frequency on every single

00:32:29,970 --> 00:32:39,820
foundation and then some level of bar

00:32:35,730 --> 00:32:41,919
level chena because sometimes when the

00:32:39,820 --> 00:32:44,529
service progress time out you need to go

00:32:41,919 --> 00:32:46,870
at the Posche level and clean up those

00:32:44,529 --> 00:32:51,429
resources so wanted to make sure that

00:32:46,870 --> 00:32:53,740
these are taken into account we wanted

00:32:51,429 --> 00:32:55,630
to make sure that we have enough panel

00:32:53,740 --> 00:32:59,649
of metrics so that we can bring

00:32:55,630 --> 00:33:01,990
heuristics on top of them and last but

00:32:59,649 --> 00:33:04,720
not the least it should be work oriented

00:33:01,990 --> 00:33:08,679
so the goal is to test the workflow but

00:33:04,720 --> 00:33:10,779
not necessarily you know testing the

00:33:08,679 --> 00:33:14,559
visual components because we have

00:33:10,779 --> 00:33:18,130
metrics for them and we know where the

00:33:14,559 --> 00:33:20,139
metrics behave differently we know that

00:33:18,130 --> 00:33:24,159
you know certain confidence and not

00:33:20,139 --> 00:33:26,139
behaving properly but for for the smoke

00:33:24,159 --> 00:33:28,010
test the purpose is really to test the

00:33:26,139 --> 00:33:31,490
workflows

00:33:28,010 --> 00:33:35,120
so what exactly do we test right now

00:33:31,490 --> 00:33:37,399
it does mostly those services that we

00:33:35,120 --> 00:33:41,320
are offering to our application

00:33:37,399 --> 00:33:44,029
developers and as obviously the poor

00:33:41,320 --> 00:33:46,429
functionality of the platform needs to

00:33:44,029 --> 00:33:49,820
be tested then autoscaler is one of the

00:33:46,429 --> 00:33:52,070
most utilized service among our

00:33:49,820 --> 00:33:55,519
application developers we offer my

00:33:52,070 --> 00:33:58,549
support Redis rabbitmq cloud cache all

00:33:55,519 --> 00:34:01,130
the spring cloud services and then we

00:33:58,549 --> 00:34:04,760
have our own monitoring tools metadata

00:34:01,130 --> 00:34:08,389
tools that need to be on on top of in

00:34:04,760 --> 00:34:12,320
terms of their health and then are we

00:34:08,389 --> 00:34:14,060
are applications able to send box to

00:34:12,320 --> 00:34:18,619
spam which is our flocking and

00:34:14,060 --> 00:34:21,829
monitoring platform and and then we

00:34:18,619 --> 00:34:27,079
started testing the basic community

00:34:21,829 --> 00:34:32,599
services as well going forward we have

00:34:27,079 --> 00:34:35,050
more in world class 2's boss objects

00:34:32,599 --> 00:34:39,560
releases you know deployments and such

00:34:35,050 --> 00:34:41,659
load balancer block stores and then at

00:34:39,560 --> 00:34:44,179
the end because our platforms are

00:34:41,659 --> 00:34:47,659
flowing the number of services we offer

00:34:44,179 --> 00:34:50,560
is growing we definitely want to make

00:34:47,659 --> 00:34:54,079
sure that every alert that's actionable

00:34:50,560 --> 00:34:58,150
we want to build automation around

00:34:54,079 --> 00:35:02,750
taking steps in a much educated and

00:34:58,150 --> 00:35:05,270
experienced way to recover the platform

00:35:02,750 --> 00:35:09,319
of the components that are failing or

00:35:05,270 --> 00:35:13,460
not in a path not in a state to recover

00:35:09,319 --> 00:35:16,369
them from that code state so that's our

00:35:13,460 --> 00:35:21,770
goal that's those are the things that

00:35:16,369 --> 00:35:24,349
are coming in future just to give a

00:35:21,770 --> 00:35:26,690
quick example of what we are testing and

00:35:24,349 --> 00:35:31,040
how we are testing so this is an example

00:35:26,690 --> 00:35:34,220
of autoscaler smoke test very basic

00:35:31,040 --> 00:35:38,510
workflow you know start with log into a

00:35:34,220 --> 00:35:40,880
back into your foundation target a

00:35:38,510 --> 00:35:44,270
specific organs phase

00:35:40,880 --> 00:35:47,090
first we checked the autoscaler apps

00:35:44,270 --> 00:35:49,130
that are provided by the platform are up

00:35:47,090 --> 00:35:52,130
and running and then we basically

00:35:49,130 --> 00:35:56,720
download the plugin and go through a

00:35:52,130 --> 00:35:59,810
complete life cycle of how an app would

00:35:56,720 --> 00:36:01,550
be using the autoscaler service so right

00:35:59,810 --> 00:36:04,160
from creating the service instance

00:36:01,550 --> 00:36:08,590
pushing a sample app you know binding

00:36:04,160 --> 00:36:12,110
the service instance scaling the app

00:36:08,590 --> 00:36:16,630
frightening some or creating some auto

00:36:12,110 --> 00:36:19,640
scaling rules based on their HTTP

00:36:16,630 --> 00:36:22,160
latency and memory and CPU requirements

00:36:19,640 --> 00:36:25,910
and so on and then we shall read some

00:36:22,160 --> 00:36:28,010
fake traffic to that and see the auto

00:36:25,910 --> 00:36:31,250
scaling events are taking place as

00:36:28,010 --> 00:36:35,600
expected and at the end we do all the

00:36:31,250 --> 00:36:39,470
necessary cleaner and once everything is

00:36:35,600 --> 00:36:44,000
okay we report all the metrics for each

00:36:39,470 --> 00:36:46,880
and an individual step here to our

00:36:44,000 --> 00:36:49,670
matrix platform which is plunk so

00:36:46,880 --> 00:36:51,680
obviously things can go wrong in any of

00:36:49,670 --> 00:36:55,040
these steps so we want to make sure that

00:36:51,680 --> 00:36:59,030
we have not wasting time executing any

00:36:55,040 --> 00:37:01,130
further operations if you know the

00:36:59,030 --> 00:37:03,680
operation that field is basically a

00:37:01,130 --> 00:37:05,900
blocking operation so for example if the

00:37:03,680 --> 00:37:08,210
create service fails there is no

00:37:05,900 --> 00:37:11,240
important to do anything else beyond

00:37:08,210 --> 00:37:14,000
that point because obviously you can't

00:37:11,240 --> 00:37:17,540
create an auto scaler serviced and you

00:37:14,000 --> 00:37:21,020
can't really bind an app and you use the

00:37:17,540 --> 00:37:23,740
service as expected so we we capture the

00:37:21,020 --> 00:37:29,920
results of every single step here and

00:37:23,740 --> 00:37:33,770
build heuristics at the strong side same

00:37:29,920 --> 00:37:37,640
example for spring cloud services we

00:37:33,770 --> 00:37:41,480
basically test all three major service

00:37:37,640 --> 00:37:43,490
types meaning config several service

00:37:41,480 --> 00:37:46,610
registry and circuit breaker and

00:37:43,490 --> 00:37:49,100
obviously they require the app that we

00:37:46,610 --> 00:37:51,680
are using it requires mass equal as well

00:37:49,100 --> 00:37:54,440
so you create a my sequel instances

00:37:51,680 --> 00:37:58,910
where I can check

00:37:54,440 --> 00:38:01,099
the entire workflow right from creating

00:37:58,910 --> 00:38:06,109
the services to finding the services to

00:38:01,099 --> 00:38:08,030
a sample app and then making sure that

00:38:06,109 --> 00:38:10,789
the app is able to read and write from

00:38:08,030 --> 00:38:15,400
those services instances so that's our

00:38:10,789 --> 00:38:15,400
entire workflow any questions so far

00:38:18,150 --> 00:38:29,490
okay again the workflow right here is

00:38:26,220 --> 00:38:33,569
from the smoke test and shoot the matrix

00:38:29,490 --> 00:38:35,700
because if if you don't stole the matrix

00:38:33,569 --> 00:38:40,559
of the result we can build heuristics we

00:38:35,700 --> 00:38:42,359
can't be sure that what's the pattern of

00:38:40,559 --> 00:38:45,660
those three years so that we can take

00:38:42,359 --> 00:38:47,849
more predictive actions and actions to

00:38:45,660 --> 00:38:54,799
avoid those kind of situations that are

00:38:47,849 --> 00:38:57,569
causing on those three years just a

00:38:54,799 --> 00:39:01,859
sample dashboard and you know the alerts

00:38:57,569 --> 00:39:04,079
that we get from Splunk so in Splunk

00:39:01,859 --> 00:39:07,559
what we are showing here is that you

00:39:04,079 --> 00:39:10,170
know these are the foundations and these

00:39:07,559 --> 00:39:13,680
are the sources which is basically the

00:39:10,170 --> 00:39:15,749
name of the smoke test job itself that

00:39:13,680 --> 00:39:19,410
is failing on this particular foundation

00:39:15,749 --> 00:39:23,190
and here is a concourse URL that you can

00:39:19,410 --> 00:39:25,890
follow to actually go to campos and look

00:39:23,190 --> 00:39:29,369
at the logs and figure out what's what

00:39:25,890 --> 00:39:32,670
actually went wrong and so on this is a

00:39:29,369 --> 00:39:35,249
very high level dashboard which is just

00:39:32,670 --> 00:39:41,220
telling you that this job field but we

00:39:35,249 --> 00:39:44,279
we do have the metrics to say that on

00:39:41,220 --> 00:39:48,059
this foundation spring cloud services

00:39:44,279 --> 00:39:50,099
failed because it failed to create a

00:39:48,059 --> 00:39:53,430
bicyclist and so it frayed to create a

00:39:50,099 --> 00:39:56,309
conflict server instance so we have the

00:39:53,430 --> 00:40:00,420
matrix available at that kind of level

00:39:56,309 --> 00:40:03,599
and we can obviously look back in past

00:40:00,420 --> 00:40:05,730
and analyze how many times a particular

00:40:03,599 --> 00:40:09,059
operation has been failing on a

00:40:05,730 --> 00:40:13,079
particular foundation or queuing region

00:40:09,059 --> 00:40:16,650
or foundations and such so that really

00:40:13,079 --> 00:40:20,420
helps us identifying and analyzing those

00:40:16,650 --> 00:40:23,910
problems that are causing these failures

00:40:20,420 --> 00:40:27,210
just a high-level overview of our

00:40:23,910 --> 00:40:29,310
deployment strategy so we have a booster

00:40:27,210 --> 00:40:31,650
pipeline which basically monitors

00:40:29,310 --> 00:40:32,430
we have people that contains the

00:40:31,650 --> 00:40:35,190
pipeline's

00:40:32,430 --> 00:40:39,060
environment variables and the smoke test

00:40:35,190 --> 00:40:42,750
scripts it goes ahead checks the git

00:40:39,060 --> 00:40:47,910
repo and any changes of Kuran get report

00:40:42,750 --> 00:40:51,150
deploys the pipeline on every region

00:40:47,910 --> 00:40:53,370
specific pom horse and within every

00:40:51,150 --> 00:40:57,600
region specific pound-force we have

00:40:53,370 --> 00:41:01,260
teams dedicated to all the Foundation's

00:40:57,600 --> 00:41:03,480
within that particular region so the

00:41:01,260 --> 00:41:07,640
bootstrap pipeline on any change will

00:41:03,480 --> 00:41:10,650
take the code and deploy the pipeline on

00:41:07,640 --> 00:41:14,160
the smoke test pipeline of each

00:41:10,650 --> 00:41:17,310
foundations within their individual team

00:41:14,160 --> 00:41:21,710
and what that pipeline contains it

00:41:17,310 --> 00:41:21,710
contains all jobs for all these

00:41:21,830 --> 00:41:31,530
components or services we use world as

00:41:26,400 --> 00:41:34,170
our secret store and it's basically

00:41:31,530 --> 00:41:37,710
designed based on the palm holds

00:41:34,170 --> 00:41:42,750
deployment strategy so every region

00:41:37,710 --> 00:41:47,070
specific force has dedicated path in the

00:41:42,750 --> 00:41:50,040
world that you use and so on so with

00:41:47,070 --> 00:41:54,390
this I'm like you want to just

00:41:50,040 --> 00:41:57,150
screenshot this is just a real picture

00:41:54,390 --> 00:42:00,020
of what we saw in this smoke test

00:41:57,150 --> 00:42:04,380
pipeline we have all these smokers jobs

00:42:00,020 --> 00:42:07,110
for a given foundation that we used so

00:42:04,380 --> 00:42:11,460
that's how we are basically testing our

00:42:07,110 --> 00:42:14,580
foundations as of now how have they

00:42:11,460 --> 00:42:17,700
really helped us we do foundation

00:42:14,580 --> 00:42:19,530
updates really every three to six months

00:42:17,700 --> 00:42:23,700
our time frames and given the number of

00:42:19,530 --> 00:42:28,410
foundations we it requires a significant

00:42:23,700 --> 00:42:30,930
cycle of say eight to ten weeks that's

00:42:28,410 --> 00:42:34,350
very critical time when we want to be on

00:42:30,930 --> 00:42:36,630
top of things as well as the workflows

00:42:34,350 --> 00:42:40,020
as we have of the platform is concerned

00:42:36,630 --> 00:42:40,920
so we use the smoke test regularly while

00:42:40,020 --> 00:42:42,810
we're doing

00:42:40,920 --> 00:42:44,700
trades the v-tail season is very

00:42:42,810 --> 00:42:47,580
important for us typically from

00:42:44,700 --> 00:42:50,370
September to December timeframe very

00:42:47,580 --> 00:42:54,900
meaningful not new phones get launched

00:42:50,370 --> 00:42:57,810
and so on Thanksgiving Christmas holiday

00:42:54,900 --> 00:43:01,910
seasons where the sales are typically

00:42:57,810 --> 00:43:05,880
higher and the applications that are

00:43:01,910 --> 00:43:08,910
catering to the stores and deployed on

00:43:05,880 --> 00:43:12,600
all of our platforms we want to make

00:43:08,910 --> 00:43:15,240
sure that those applications should be

00:43:12,600 --> 00:43:18,660
able to use the platform services as

00:43:15,240 --> 00:43:21,240
expected and we want to make sure that

00:43:18,660 --> 00:43:24,870
we are using the smoke has to verify and

00:43:21,240 --> 00:43:28,680
ensure that new phone launches it so

00:43:24,870 --> 00:43:32,870
that daily basis of course we from these

00:43:28,680 --> 00:43:35,880
pipelines on our regular interval and

00:43:32,870 --> 00:43:37,950
every job has a customized frequency so

00:43:35,880 --> 00:43:42,330
on a daily basis we want to make sure

00:43:37,950 --> 00:43:46,890
that running this to ensure the good

00:43:42,330 --> 00:43:50,430
health of the platforms really most of

00:43:46,890 --> 00:43:53,180
the smoke test shops have helped us on

00:43:50,430 --> 00:43:56,060
different occasions but typically

00:43:53,180 --> 00:43:59,550
autoscaler spring cloud services and

00:43:56,060 --> 00:44:01,710
this one dedicated to see the logging

00:43:59,550 --> 00:44:05,280
workflow those are some of the more

00:44:01,710 --> 00:44:09,720
critical ones that have benefited us

00:44:05,280 --> 00:44:11,730
more frequently than the others and the

00:44:09,720 --> 00:44:15,990
reasons are obvious you know all our

00:44:11,730 --> 00:44:18,360
applications are or I would say most of

00:44:15,990 --> 00:44:20,550
our applications are Auto scale we

00:44:18,360 --> 00:44:22,710
provide these recommendations to our

00:44:20,550 --> 00:44:26,310
application developers on a regular

00:44:22,710 --> 00:44:29,940
basis to follow the good practices have

00:44:26,310 --> 00:44:33,600
you know me any far application having

00:44:29,940 --> 00:44:37,080
water scaler binding to syslog services

00:44:33,600 --> 00:44:40,140
so that your logs are available in span

00:44:37,080 --> 00:44:42,360
and so on so the smoke tests that

00:44:40,140 --> 00:44:46,710
actually monitor these workflows are

00:44:42,360 --> 00:44:49,310
super critical for us we use them way

00:44:46,710 --> 00:44:52,500
more frequently than the others and

00:44:49,310 --> 00:44:53,670
overall I would say every single smoke

00:44:52,500 --> 00:44:56,789
reserve

00:44:53,670 --> 00:44:58,700
have just in one way or the other at one

00:44:56,789 --> 00:45:01,829
point or the other

00:44:58,700 --> 00:45:04,019
really the goal is to know the problems

00:45:01,829 --> 00:45:08,220
before a tree impacts the customers and

00:45:04,019 --> 00:45:10,349
I think in our experience the smoke

00:45:08,220 --> 00:45:14,489
tests have really helped us achieving

00:45:10,349 --> 00:45:18,410
that goal that's all for me any

00:45:14,489 --> 00:45:18,410
questions I'm more than happy today I

00:45:19,369 --> 00:45:26,460
have two questions if I may one you

00:45:24,029 --> 00:45:28,619
mentioned all the scalar are you talking

00:45:26,460 --> 00:45:30,779
about the because you're running past

00:45:28,619 --> 00:45:32,640
right the pivotal platform you're using

00:45:30,779 --> 00:45:34,410
they're pivotal or the scalar or the

00:45:32,640 --> 00:45:39,329
community one because I believe there

00:45:34,410 --> 00:45:41,460
was two different ones being using okay

00:45:39,329 --> 00:45:44,220
because we also had some some issues

00:45:41,460 --> 00:45:45,839
let's say challenges with the pivot all

00:45:44,220 --> 00:45:49,710
the scalar that's why we also included

00:45:45,839 --> 00:45:51,480
in our smoke test and you you do have a

00:45:49,710 --> 00:45:53,609
history there I mean that's cool that's

00:45:51,480 --> 00:45:55,589
exactly the thing we are missing is that

00:45:53,609 --> 00:45:58,259
because you you extract the data from

00:45:55,589 --> 00:46:05,039
Splunk or is that not where the metrics

00:45:58,259 --> 00:46:08,730
go yes so coming back to this oh yeah

00:46:05,039 --> 00:46:11,640
you at the dashboard err oh yeah so what

00:46:08,730 --> 00:46:13,739
we do is we basically Emma dark metrics

00:46:11,640 --> 00:46:17,279
from the smoke test which is running in

00:46:13,739 --> 00:46:21,960
compost only for Telegraph Telegraph is

00:46:17,279 --> 00:46:24,920
basically an open source sort of data

00:46:21,960 --> 00:46:28,499
form actor so you can translate whatever

00:46:24,920 --> 00:46:31,140
quantitative format to any given output

00:46:28,499 --> 00:46:34,349
format so we take JSON and convert it to

00:46:31,140 --> 00:46:38,730
spunk matrix format on using Telegraph

00:46:34,349 --> 00:46:41,039
and shoot those metrics just wrong okay

00:46:38,730 --> 00:46:42,930
cool because we are outputting Jason so

00:46:41,039 --> 00:46:45,390
we can use Telegraph as well thanks for

00:46:42,930 --> 00:46:47,220
the tip we do have integration with

00:46:45,390 --> 00:46:52,410
Splunk already so that would complete

00:46:47,220 --> 00:46:54,509
our picture so many other questions I

00:46:52,410 --> 00:46:55,920
know we're heading up towards time thank

00:46:54,509 --> 00:46:57,329
you very much I was super interesting

00:46:55,920 --> 00:46:58,739
actually so there was a great suggestion

00:46:57,329 --> 00:47:00,960
from Wayne in the chat that maybe

00:46:58,739 --> 00:47:02,789
between those two projects and Wayne's

00:47:00,960 --> 00:47:05,190
effort there's a kind of an ik

00:47:02,789 --> 00:47:07,089
extensions project in the making that'd

00:47:05,190 --> 00:47:09,279
be great to see all right

00:47:07,089 --> 00:47:11,950
thank you let's see we've got eight

00:47:09,279 --> 00:47:17,170
minutes left I thinks I was potential to

00:47:11,950 --> 00:47:19,269
give us a date for KS yeah we just we

00:47:17,170 --> 00:47:22,239
were chatting offline I'm very sorry

00:47:19,269 --> 00:47:23,979
everyone this is Troy and I'm very sorry

00:47:22,239 --> 00:47:26,859
to have missed the first part of this I

00:47:23,979 --> 00:47:29,170
will of course watch the recordings

00:47:26,859 --> 00:47:32,380
thank you thank you very much Neil for

00:47:29,170 --> 00:47:35,739
for covering for me i I just chatted

00:47:32,380 --> 00:47:39,969
with sy and we've agreed to postpone

00:47:35,739 --> 00:47:42,039
that item for next week's I is that I

00:47:39,969 --> 00:47:44,799
think that's what we just agreed so yeah

00:47:42,039 --> 00:47:47,880
not be great at next camping we've got a

00:47:44,799 --> 00:47:50,529
bit more time the keep seeing F

00:47:47,880 --> 00:47:53,559
incubation proposal on the agenda I

00:47:50,529 --> 00:47:57,039
think Vlad is still sick unfortunately

00:47:53,559 --> 00:48:00,519
get well soon glad that was just to

00:47:57,039 --> 00:48:03,579
point it out on the CF dev list if you

00:48:00,519 --> 00:48:06,359
have any comments about the document

00:48:03,579 --> 00:48:08,920
where he proposes where we propose

00:48:06,359 --> 00:48:13,180
incubating cube CF have a little look at

00:48:08,920 --> 00:48:15,039
that that thread and please feel free to

00:48:13,180 --> 00:48:17,849
make comments in in the document that's

00:48:15,039 --> 00:48:24,670
linked and then that's going to be

00:48:17,849 --> 00:48:27,009
circulated amongst the the PMC so if

00:48:24,670 --> 00:48:31,950
they want to have any discussions around

00:48:27,009 --> 00:48:36,039
that is there a slack channel Troy that

00:48:31,950 --> 00:48:38,079
could be on the CF 4k AIDS Channel we

00:48:36,039 --> 00:48:40,119
talked about in the kubernetes sig

00:48:38,079 --> 00:48:41,920
yesterday how the CF 4k is channel is

00:48:40,119 --> 00:48:44,819
sort of an overloaded channel name

00:48:41,920 --> 00:48:48,579
because it's also the name of size repo

00:48:44,819 --> 00:48:54,069
but I think we're all there or maybe

00:48:48,579 --> 00:48:58,559
better yet there is a there's a cube CF

00:48:54,069 --> 00:48:58,559
dev channel let me just drop that here

00:49:00,239 --> 00:49:12,670
thank you my channel here is cubed yes

00:49:09,839 --> 00:49:14,819
it would be happy to talk to people if

00:49:12,670 --> 00:49:18,819
you want to talk to us about the project

00:49:14,819 --> 00:49:19,520
I'm on that channel sometimes so may I

00:49:18,819 --> 00:49:22,840
ask one

00:49:19,520 --> 00:49:27,740
question about the cube CF project

00:49:22,840 --> 00:49:30,080
certainly because yeah I did I think the

00:49:27,740 --> 00:49:32,540
lost a cup coal was also about the

00:49:30,080 --> 00:49:34,520
incubation of of cube CF or was that

00:49:32,540 --> 00:49:37,490
another coal or intended one call where

00:49:34,520 --> 00:49:39,320
it was also mentioned what what we were

00:49:37,490 --> 00:49:41,900
interested wealth we are interested in

00:49:39,320 --> 00:49:45,140
right now since we already run cube

00:49:41,900 --> 00:49:47,720
Anita's and we run Cloud Foundry I don't

00:49:45,140 --> 00:49:50,660
know is there any any reference or

00:49:47,720 --> 00:49:54,170
guideline on how an operator can move

00:49:50,660 --> 00:49:56,450
towards yeah so founded on communities

00:49:54,170 --> 00:50:00,550
because that seems to be where everybody

00:49:56,450 --> 00:50:02,930
is going or miss planning to going and

00:50:00,550 --> 00:50:05,630
there seem to be multiple ways of doing

00:50:02,930 --> 00:50:07,730
that now so yeah there there are in fact

00:50:05,630 --> 00:50:09,380
and this came up as I want to invite

00:50:07,730 --> 00:50:14,390
people to who are interested in this

00:50:09,380 --> 00:50:17,630
topic to join the sig the kubernetes sig

00:50:14,390 --> 00:50:20,120
meeting which happens on the the third

00:50:17,630 --> 00:50:23,660
Tuesday of every month

00:50:20,120 --> 00:50:28,250
so the next one will be on the 17th of

00:50:23,660 --> 00:50:29,930
March at 8:30 a.m. Pacific I can't

00:50:28,250 --> 00:50:34,010
remember what that is in central Central

00:50:29,930 --> 00:50:36,230
European there are two initiatives going

00:50:34,010 --> 00:50:38,150
on right now and there's a bit of we

00:50:36,230 --> 00:50:39,980
talked about this yesterday there's a

00:50:38,150 --> 00:50:43,550
bit of a confusing landscape for the

00:50:39,980 --> 00:50:47,660
uninitiated the uninitiated to join in

00:50:43,550 --> 00:50:49,100
so we've got a little committee from

00:50:47,660 --> 00:50:51,440
that sync that's going to get together

00:50:49,100 --> 00:50:56,210
and untangle it and point people to the

00:50:51,440 --> 00:50:59,150
right places the short answer is cube CF

00:50:56,210 --> 00:51:03,230
is going to be the sort of working cloud

00:50:59,150 --> 00:51:06,530
foundry currently based on Bosch working

00:51:03,230 --> 00:51:08,690
with the CF operator and the CF 4k

00:51:06,530 --> 00:51:10,040
eights is the integration point feel

00:51:08,690 --> 00:51:11,120
free to chime in sigh I don't want to

00:51:10,040 --> 00:51:14,180
speak for you

00:51:11,120 --> 00:51:17,300
for the new upstream kubernetes if

00:51:14,180 --> 00:51:18,710
occation of the core components and cube

00:51:17,300 --> 00:51:21,890
CF will of course try and integrate

00:51:18,710 --> 00:51:24,860
those as well so there are two projects

00:51:21,890 --> 00:51:27,380
going on right now at cube CF is one of

00:51:24,860 --> 00:51:28,760
them but at the moment it's not under

00:51:27,380 --> 00:51:31,700
the cff umbrella we're trying to get

00:51:28,760 --> 00:51:33,110
that in so that it best congratulations

00:51:31,700 --> 00:51:35,620
on the incubation part

00:51:33,110 --> 00:51:37,840
although some announcements earlier so

00:51:35,620 --> 00:51:42,440
but it's not there yet

00:51:37,840 --> 00:51:44,360
you're working on it we're hoping to be

00:51:42,440 --> 00:51:47,390
able to announce the incubation soonish

00:51:44,360 --> 00:51:48,530
okay once it's had some review and then

00:51:47,390 --> 00:51:51,680
and then we'll see how it's progressing

00:51:48,530 --> 00:51:54,170
but cool thank you but yeah please

00:51:51,680 --> 00:51:55,760
please join the conversation in the

00:51:54,170 --> 00:51:58,520
kubernetes thing if you're interested

00:51:55,760 --> 00:52:03,500
and there's that channel as well on

00:51:58,520 --> 00:52:07,940
slack CF for fort AIDS yes where we talk

00:52:03,500 --> 00:52:10,730
about both projects and in general the

00:52:07,940 --> 00:52:13,610
directions cool thank you very much for

00:52:10,730 --> 00:52:15,140
the feedback and and oh no sorry I

00:52:13,610 --> 00:52:17,570
missed your presentation I will go back

00:52:15,140 --> 00:52:19,430
and watch the recording I hope that very

00:52:17,570 --> 00:52:22,490
creation Luke I hope it looked okay

00:52:19,430 --> 00:52:24,230
because it's hard for me to see if there

00:52:22,490 --> 00:52:25,820
was some sound breaking up at the

00:52:24,230 --> 00:52:27,650
beginning so I hope it was

00:52:25,820 --> 00:52:30,500
understandable or it was understandable

00:52:27,650 --> 00:52:32,600
but yeah I'm looking forward to it

00:52:30,500 --> 00:52:36,830
Thank You Ashley for recording thank you

00:52:32,600 --> 00:52:38,780
again Neil very much for presenting and

00:52:36,830 --> 00:52:40,850
for covering for me

00:52:38,780 --> 00:52:46,520
max sends his regrets he is

00:52:40,850 --> 00:52:47,960
unfortunately unable to attend and look

00:52:46,520 --> 00:52:52,820
forward to the next one

00:52:47,960 --> 00:52:55,760
Swarna any closing remarks no thank you

00:52:52,820 --> 00:52:58,730
very much nu for stepping up and hosting

00:52:55,760 --> 00:53:01,850
it today and thank you very much honor

00:52:58,730 --> 00:53:05,270
and pH for your presentations are super

00:53:01,850 --> 00:53:08,420
helpful I am looking at the chat as well

00:53:05,270 --> 00:53:11,510
thank you for mentioning that you all at

00:53:08,420 --> 00:53:13,490
t-mobile are also working on open

00:53:11,510 --> 00:53:16,360
sourcing your suite and their smoke test

00:53:13,490 --> 00:53:19,790
suite working with the legal team I will

00:53:16,360 --> 00:53:22,340
probably be sending out any email to the

00:53:19,790 --> 00:53:24,800
team of folks and also a know to see if

00:53:22,340 --> 00:53:26,330
we can follow up on the conversation

00:53:24,800 --> 00:53:28,730
like continue the conversation that

00:53:26,330 --> 00:53:30,050
Wayne had proposed for to merge all

00:53:28,730 --> 00:53:33,380
these efforts and make this may be a

00:53:30,050 --> 00:53:35,600
really effective extensions project so

00:53:33,380 --> 00:53:37,550
stay tuned for that that would be great

00:53:35,600 --> 00:53:42,140
because again in the end we all face the

00:53:37,550 --> 00:53:46,910
similar or same problems so I know

00:53:42,140 --> 00:53:49,970
welcome to the community one question

00:53:46,910 --> 00:53:54,829
it's the Oh actually I already are

00:53:49,970 --> 00:53:56,269
several dad does it does anybody have an

00:53:54,829 --> 00:54:03,250
experience of the cloud controller

00:53:56,269 --> 00:54:08,210
losing his date this is one place to us

00:54:03,250 --> 00:54:10,759
that's a broad question no I just

00:54:08,210 --> 00:54:13,339
recently we've lost our my sequel

00:54:10,759 --> 00:54:16,190
database or actually the database was

00:54:13,339 --> 00:54:20,029
there but the cloud controller lost the

00:54:16,190 --> 00:54:23,450
surface instance information so we were

00:54:20,029 --> 00:54:27,380
like how do we get our data back yeah I

00:54:23,450 --> 00:54:31,609
know Swarna can introduce us and after

00:54:27,380 --> 00:54:33,319
this call we're happy to know it's okay

00:54:31,609 --> 00:54:35,299
we already go to workarounds be locked

00:54:33,319 --> 00:54:36,589
into old containers angle to environment

00:54:35,299 --> 00:54:39,019
variables because they were still

00:54:36,589 --> 00:54:40,160
running but thank you sure but it'd be

00:54:39,019 --> 00:54:43,460
good to help you prevent that in the

00:54:40,160 --> 00:54:48,759
future so we should chat thank you

00:54:43,460 --> 00:54:48,759
sorry no question is our deployments for

00:54:52,539 --> 00:54:59,150
none apart from welcome Troy I'm looking

00:54:57,470 --> 00:55:02,829
forward to an introduction from you next

00:54:59,150 --> 00:55:06,200
time I'll do a proper start sorry for my

00:55:02,829 --> 00:55:08,930
movable conflict today yeah I'll

00:55:06,200 --> 00:55:11,230
properly introduce myself next week but

00:55:08,930 --> 00:55:14,920
we are at the top of the hour so if

00:55:11,230 --> 00:55:17,569
anyone has anything urgent speak now

00:55:14,920 --> 00:55:23,000
otherwise we'll see you all on slack and

00:55:17,569 --> 00:55:26,440
in the next week right - yes thank you

00:55:23,000 --> 00:55:26,440

YouTube URL: https://www.youtube.com/watch?v=2_-cQub8IzM


