Title: Cloud Foundry Community Advisory Board Call [Sept. 2018]
Publication date: 2018-09-20
Playlist: Community Advisory Board
Description: 
	Get the agenda here: https://bit.ly/2QG0J9b
Captions: 
	00:00:04,490 --> 00:00:10,650
okay welcome everybody for I guess

00:00:07,140 --> 00:00:15,150
September cat call it's one month before

00:00:10,650 --> 00:00:18,630
well a little bit less than women or the

00:00:15,150 --> 00:00:20,609
summit in Basel so I'm not sure how many

00:00:18,630 --> 00:00:22,890
people will join this one but looks like

00:00:20,609 --> 00:00:26,390
gathering a group and there are really

00:00:22,890 --> 00:00:29,070
two good calls so if you are here to

00:00:26,390 --> 00:00:33,660
listen to those calls they're gonna

00:00:29,070 --> 00:00:35,809
start soon first set up data in service

00:00:33,660 --> 00:00:40,670
fabric from the SAE team in India and

00:00:35,809 --> 00:00:42,690
then we have the washi ready from

00:00:40,670 --> 00:00:46,829
pivotal who's gonna give an update on

00:00:42,690 --> 00:00:50,210
CFC are or I guess the project that used

00:00:46,829 --> 00:00:53,820
to be called kubu this is essentially

00:00:50,210 --> 00:00:56,399
spinning up kubernetes using brush and

00:00:53,820 --> 00:00:59,329
of course other things just so so we're

00:00:56,399 --> 00:01:01,710
waiting on her she will join us towards

00:00:59,329 --> 00:01:06,900
you know the middle of the call because

00:01:01,710 --> 00:01:09,650
she's actually on a separate call is

00:01:06,900 --> 00:01:09,650
this dr. Nick

00:01:10,560 --> 00:01:14,570
all right

00:01:12,200 --> 00:01:17,299
how do you expect you but that came here

00:01:14,570 --> 00:01:18,409
you don't talk now yeah I cook now hey

00:01:17,299 --> 00:01:20,780
there you go

00:01:18,409 --> 00:01:24,649
I'm whelmed and I'm happy to see your

00:01:20,780 --> 00:01:29,950
face I'm equally happy to see your face

00:01:24,649 --> 00:01:32,210
and everyone else actually has excellent

00:01:29,950 --> 00:01:33,590
do you want to say something you wanna

00:01:32,210 --> 00:01:38,299
know something are you just gonna stay

00:01:33,590 --> 00:01:39,799
there in the middle of wing we

00:01:38,299 --> 00:01:42,140
love you man so we're just giving you

00:01:39,799 --> 00:01:45,110
time what do you want to do just what

00:01:42,140 --> 00:01:49,250
it's a hot all right are you cutting

00:01:45,110 --> 00:01:52,429
into basil right yeah I'll be a spring

00:01:49,250 --> 00:01:56,330
walk pretty one day mixer so if you're

00:01:52,429 --> 00:01:58,069
in San Francisco come see dr. Nick all

00:01:56,330 --> 00:02:00,679
right sorry I think the first thing we

00:01:58,069 --> 00:02:02,750
always do is we give Swan our chip but

00:02:00,679 --> 00:02:07,909
when I was here chance to kind of give

00:02:02,750 --> 00:02:10,459
us an update on what's going on yeah is

00:02:07,909 --> 00:02:17,959
on route to China so you have to settle

00:02:10,459 --> 00:02:20,299
it for today we do have a ton of updates

00:02:17,959 --> 00:02:22,850
but I won't go through a every single

00:02:20,299 --> 00:02:32,359
thing I did update the document we are

00:02:22,850 --> 00:02:34,160
at 7:15 where we were last year at this

00:02:32,359 --> 00:02:36,350
time but I hear from the events team

00:02:34,160 --> 00:02:40,519
that we are trying we have been trending

00:02:36,350 --> 00:02:43,100
higher all through ever since the

00:02:40,519 --> 00:02:45,709
registration started so basil is looking

00:02:43,100 --> 00:02:48,859
good the schedule and everything else is

00:02:45,709 --> 00:02:51,200
final so I added links for trainings and

00:02:48,859 --> 00:02:53,000
the rest of the days of your activities

00:02:51,200 --> 00:02:54,799
and if you are interested in the

00:02:53,000 --> 00:02:56,630
hands-on labs just go to the schedule

00:02:54,799 --> 00:02:59,030
and filter by the hands-on lab that you

00:02:56,630 --> 00:03:01,640
will see the list of the long list of

00:02:59,030 --> 00:03:04,819
hands-on labs that will be offered in

00:03:01,640 --> 00:03:06,049
the foundry the other thing that I also

00:03:04,819 --> 00:03:08,780
wanted to highlight I don't know how

00:03:06,049 --> 00:03:10,190
many of you were in Boston and it did or

00:03:08,780 --> 00:03:11,690
did not take advantage of the headshot

00:03:10,190 --> 00:03:14,420
sessions we are also offering there

00:03:11,690 --> 00:03:16,639
again as a complimentary had headshot

00:03:14,420 --> 00:03:19,370
session again and also if you want to

00:03:16,639 --> 00:03:22,700
get a professional picture taken please

00:03:19,370 --> 00:03:24,349
big advantage of that and thank you for

00:03:22,700 --> 00:03:25,530
all the nominations we receive for the

00:03:24,349 --> 00:03:27,750
Community Awards

00:03:25,530 --> 00:03:29,220
really was impressed with the amount of

00:03:27,750 --> 00:03:31,530
nominations we got for the Community

00:03:29,220 --> 00:03:33,870
Awards it was definitely a lot higher

00:03:31,530 --> 00:03:38,250
than what we see per Boston said I can't

00:03:33,870 --> 00:03:43,350
wait to announce on this on Thursday of

00:03:38,250 --> 00:03:44,940
the summit we also have announced that

00:03:43,350 --> 00:03:47,880
Cloud Foundry summit North America for

00:03:44,940 --> 00:03:49,260
2019 mark your calendars for April 2nd

00:03:47,880 --> 00:03:54,270
through 4th it's gonna be in

00:03:49,260 --> 00:03:56,100
Philadelphia chips hometown and we will

00:03:54,270 --> 00:03:57,870
open the registration and call for

00:03:56,100 --> 00:04:00,570
papers next month

00:03:57,870 --> 00:04:03,060
Clark boundary days we are doing this

00:04:00,570 --> 00:04:06,390
again as a day zero activity alongside

00:04:03,060 --> 00:04:08,190
cuke on both in Shanghai and Seattle the

00:04:06,390 --> 00:04:10,920
call for papers has closed for Shanghai

00:04:08,190 --> 00:04:12,600
but it closes soon on September 28th for

00:04:10,920 --> 00:04:15,480
Seattle so if you are interested in

00:04:12,600 --> 00:04:17,340
submitting any kind of papers or

00:04:15,480 --> 00:04:18,930
speaking proposals for Seattle please

00:04:17,340 --> 00:04:21,840
feel free to do so I have added the

00:04:18,930 --> 00:04:35,700
links for those as well Chris Clark from

00:04:21,840 --> 00:04:38,280
the foundation will be on site we also

00:04:35,700 --> 00:04:40,470
launched an updated community page at

00:04:38,280 --> 00:04:42,930
the link and we also have started this

00:04:40,470 --> 00:04:44,669
webinar series we had a couple done in

00:04:42,930 --> 00:04:47,160
the past and we have one upcoming on

00:04:44,669 --> 00:04:48,479
October 4th on project irony so if

00:04:47,160 --> 00:04:50,910
you're interested in those or if you

00:04:48,479 --> 00:04:52,800
would like to share those links as well

00:04:50,910 --> 00:04:53,490
with your folks or with your peers feel

00:04:52,800 --> 00:04:55,169
free to do so

00:04:53,490 --> 00:04:57,090
all the links and all these details are

00:04:55,169 --> 00:04:59,070
in the document and if you have any

00:04:57,090 --> 00:05:00,210
questions feel free to ping us anytime

00:04:59,070 --> 00:05:02,810
or email us

00:05:00,210 --> 00:05:06,720
we're always on email and slack anyway

00:05:02,810 --> 00:05:13,620
and that is it all right thank you so

00:05:06,720 --> 00:05:18,890
much any questions or comments everybody

00:05:13,620 --> 00:05:21,240
here at coming to puzzle cool I

00:05:18,890 --> 00:05:23,070
mentioned this last time but you know

00:05:21,240 --> 00:05:26,340
for people that have never been to

00:05:23,070 --> 00:05:30,990
Switzerland there is a place called lot

00:05:26,340 --> 00:05:34,050
of women that were planning to go to it

00:05:30,990 --> 00:05:36,810
is just mind blowing I was there last

00:05:34,050 --> 00:05:38,270
year and I'm going again so plan your

00:05:36,810 --> 00:05:47,400
time and visits

00:05:38,270 --> 00:05:50,370
cool okay about that next yes and give

00:05:47,400 --> 00:05:54,920
credit way to do this for my DM told me

00:05:50,370 --> 00:05:59,820
about this face apparently it's where

00:05:54,920 --> 00:06:02,310
who would Lord of the Rings anyway

00:05:59,820 --> 00:06:05,430
whoever would a lot of the wings he was

00:06:02,310 --> 00:06:08,460
inspired by that place and it's

00:06:05,430 --> 00:06:09,450
literally an hour two hours away from

00:06:08,460 --> 00:06:13,250
combat

00:06:09,450 --> 00:06:20,340
I trained pretty amazing

00:06:13,250 --> 00:06:26,460
alright we get started on PMC stuff kind

00:06:20,340 --> 00:06:29,310
of updates we have Yui and Eric here

00:06:26,460 --> 00:06:32,510
so I guess run time updates or

00:06:29,310 --> 00:06:36,450
highlights anything you want to mention

00:06:32,510 --> 00:06:38,910
yeah sure let's see a few things that

00:06:36,450 --> 00:06:42,600
come to mind see of deployment cut major

00:06:38,910 --> 00:06:44,790
version for last month and they have

00:06:42,600 --> 00:06:47,520
released some plans around what's gonna

00:06:44,790 --> 00:06:50,160
change for version 5 at the end of this

00:06:47,520 --> 00:06:51,300
month again these are usually little

00:06:50,160 --> 00:06:52,920
incremental improvements for their

00:06:51,300 --> 00:06:55,020
breaking changes so that are trying to

00:06:52,920 --> 00:06:58,200
adhere to or rigorous semantic

00:06:55,020 --> 00:07:00,600
versioning for those I know the CFC Li

00:06:58,200 --> 00:07:04,080
had a big update with multiple back

00:07:00,600 --> 00:07:07,260
support and big overhaul to the CF app

00:07:04,080 --> 00:07:11,160
display to start using the v3 API is

00:07:07,260 --> 00:07:13,919
from CC that's pretty exciting crowding

00:07:11,160 --> 00:07:16,880
it a big milestone with SEO in there

00:07:13,919 --> 00:07:20,100
scaling tests or they can demonstrate

00:07:16,880 --> 00:07:24,630
supporting 500 apps with 500 rounds

00:07:20,100 --> 00:07:28,890
total heard from Peter on the bid

00:07:24,630 --> 00:07:31,080
service team that that's approaching

00:07:28,890 --> 00:07:33,210
it's improving it maturity I believe

00:07:31,080 --> 00:07:35,460
it's even running in bluemix production

00:07:33,210 --> 00:07:36,990
at the moment and so they're working

00:07:35,460 --> 00:07:42,570
with the release integration team to get

00:07:36,990 --> 00:07:44,460
that mainlined into CF deployment some

00:07:42,570 --> 00:07:46,590
of the things have been going on

00:07:44,460 --> 00:07:48,600
capi I think they've wrapped up their

00:07:46,590 --> 00:07:51,270
initial support for handling app

00:07:48,600 --> 00:07:54,150
manifest server side and

00:07:51,270 --> 00:07:56,850
they're expecting to have a more widely

00:07:54,150 --> 00:07:59,400
available beta version of zero downtime

00:07:56,850 --> 00:08:05,190
app updates for the community to consume

00:07:59,400 --> 00:08:07,500
soon and see container networking

00:08:05,190 --> 00:08:11,069
they've also declared their DNS based

00:08:07,500 --> 00:08:12,419
polyglot service discovery staple at

00:08:11,069 --> 00:08:15,750
this point generally available and

00:08:12,419 --> 00:08:17,900
they're continuing to work on better

00:08:15,750 --> 00:08:20,569
support for dynamic egress policies and

00:08:17,900 --> 00:08:23,669
and they've asked for some feedback on

00:08:20,569 --> 00:08:25,949
some of the structuring of those

00:08:23,669 --> 00:08:28,020
entities and then points to express

00:08:25,949 --> 00:08:33,750
those policies a little more flexible

00:08:28,020 --> 00:08:36,419
manner a couple of the thing this cog

00:08:33,750 --> 00:08:38,760
controllers been changing the built back

00:08:36,419 --> 00:08:43,770
model to support associated specifics

00:08:38,760 --> 00:08:45,540
acts and look all the CF fill acts have

00:08:43,770 --> 00:08:47,120
been updated with support for the CF

00:08:45,540 --> 00:08:50,070
Linux FS three second so we're

00:08:47,120 --> 00:08:51,870
continuing to move forward in terms of

00:08:50,070 --> 00:08:54,390
the transfer to that before

00:08:51,870 --> 00:09:00,779
see if Linux FS two goes out support

00:08:54,390 --> 00:09:03,300
with trusty tar I'm next April and the

00:09:00,779 --> 00:09:05,820
logger Gator team is also investigating

00:09:03,300 --> 00:09:08,279
what it's going to mean for to have a

00:09:05,820 --> 00:09:10,470
logging isolation segment so I'm sure

00:09:08,279 --> 00:09:14,160
they'd also appreciate your feedback in

00:09:10,470 --> 00:09:16,500
terms of what you view is important in

00:09:14,160 --> 00:09:25,740
terms of segmenting or isolating logging

00:09:16,500 --> 00:09:29,579
traffic okay all right comprehensive any

00:09:25,740 --> 00:09:32,399
feedback or comment questions think one

00:09:29,579 --> 00:09:35,810
other thing to highlight there is the

00:09:32,399 --> 00:09:41,000
the kepi team is accelerating their work

00:09:35,810 --> 00:09:49,020
to transition the vtu endpoints to v3

00:09:41,000 --> 00:09:52,170
and hopefully you know setting a end us

00:09:49,020 --> 00:09:55,320
a timeline whereby we could deprecated

00:09:52,170 --> 00:09:57,839
the v2 endpoints they hope to

00:09:55,320 --> 00:09:59,310
communicate more widely about those

00:09:57,839 --> 00:10:03,180
plans and timing and things like that

00:09:59,310 --> 00:10:05,510
soon but but just wanted to FYI post

00:10:03,180 --> 00:10:05,510
months

00:10:09,319 --> 00:10:16,859
how much questions I actually have I

00:10:14,459 --> 00:10:19,069
have one question I'm totally I didn't

00:10:16,859 --> 00:10:21,829
though so bear with me if that's a

00:10:19,069 --> 00:10:24,059
stupid question particularly around

00:10:21,829 --> 00:10:26,459
around the v3 head plant because I

00:10:24,059 --> 00:10:28,470
probably should know this and I recall

00:10:26,459 --> 00:10:32,850
in the very early times when we started

00:10:28,470 --> 00:10:37,199
talking about v3 that there was a a way

00:10:32,850 --> 00:10:38,850
to find granularly control like searches

00:10:37,199 --> 00:10:43,649
in in the sense that I could make a

00:10:38,850 --> 00:10:46,919
curry and say hey in this art ID whereas

00:10:43,649 --> 00:10:48,540
in the v2 API it's it's all this I have

00:10:46,919 --> 00:10:51,689
to control this through the in mind that

00:10:48,540 --> 00:10:54,660
mechanism is that already part of the v3

00:10:51,689 --> 00:10:56,369
API today or or is that something that's

00:10:54,660 --> 00:11:01,259
that will be coming up after the

00:10:56,369 --> 00:11:03,660
transition do you know that I recall the

00:11:01,259 --> 00:11:06,899
discussions about how we might service

00:11:03,660 --> 00:11:09,569
that that sort of request I don't know

00:11:06,899 --> 00:11:14,850
if we ended up so there was space for

00:11:09,569 --> 00:11:16,439
that sort of thing in the API design but

00:11:14,850 --> 00:11:19,110
I don't know if he implemented any of

00:11:16,439 --> 00:11:23,220
those endpoints yet the the I think the

00:11:19,110 --> 00:11:25,499
the desire was to only implement that in

00:11:23,220 --> 00:11:28,259
in use cases that make sense as opposed

00:11:25,499 --> 00:11:32,160
to just implementing it willy-nilly all

00:11:28,259 --> 00:11:35,339
over the place so that we could optimize

00:11:32,160 --> 00:11:38,579
the performance of those sorts of

00:11:35,339 --> 00:11:42,899
queries so if there are specific sorts

00:11:38,579 --> 00:11:45,299
of requests that you know in line

00:11:42,899 --> 00:11:47,489
relations depth was the only way to get

00:11:45,299 --> 00:11:51,089
at it but in line relations deaths is

00:11:47,489 --> 00:11:53,039
also terrible but I'd encourage you to

00:11:51,089 --> 00:11:56,039
reach out to the McAfee team with with

00:11:53,039 --> 00:12:00,029
those sorts of use cases okay that's

00:11:56,039 --> 00:12:03,839
fine I'll do that because I I definitely

00:12:00,029 --> 00:12:05,249
know we have a handful of them where no

00:12:03,839 --> 00:12:07,679
matter what we do is terrible and I'm

00:12:05,249 --> 00:12:12,119
really looking forward to having a more

00:12:07,679 --> 00:12:14,160
fine great way of controlling v3 API

00:12:12,119 --> 00:12:18,030
Docs also have pretty comprehensive

00:12:14,160 --> 00:12:19,950
information about the kinds of

00:12:18,030 --> 00:12:22,920
you can run against the new endpoints

00:12:19,950 --> 00:12:26,280
you even the ones that exist today

00:12:22,920 --> 00:12:27,840
around apps in the v3 API and really

00:12:26,280 --> 00:12:30,060
good structures so that might be good

00:12:27,840 --> 00:12:31,200
turning-point is one yeah all right I'll

00:12:30,060 --> 00:12:44,310
follow up on that

00:12:31,200 --> 00:12:47,760
Thanks I've used the the new CF 3 face

00:12:44,310 --> 00:12:50,700
image for a stack but the act build pack

00:12:47,760 --> 00:12:52,800
doesn't work on it and I was told it's

00:12:50,700 --> 00:12:56,360
not a supported bill pack or it's not

00:12:52,800 --> 00:12:59,820
loved or I can't remember the word but

00:12:56,360 --> 00:13:04,440
it's blocking me I can't move to be to

00:12:59,820 --> 00:13:06,630
the CF 3 without that working so I'd

00:13:04,440 --> 00:13:09,390
love it to be supported it's really

00:13:06,630 --> 00:13:12,020
helpful so either back you have to move

00:13:09,390 --> 00:13:17,060
to docker images for certain scenarios

00:13:12,020 --> 00:13:20,850
and the other thing was the the CF as

00:13:17,060 --> 00:13:24,390
the CF CLI moves forward there are

00:13:20,850 --> 00:13:27,660
certain downstream users of it that

00:13:24,390 --> 00:13:29,910
aren't maintaining compatible I'm coming

00:13:27,660 --> 00:13:32,100
hello I'll put this so I tried to move

00:13:29,910 --> 00:13:37,110
forward with new manifest with bill

00:13:32,100 --> 00:13:39,600
packs but then the the concourse CF

00:13:37,110 --> 00:13:42,330
resource is not packaging a new version

00:13:39,600 --> 00:13:43,410
of that therefore it complains that it

00:13:42,330 --> 00:13:45,420
doesn't know what this is about so

00:13:43,410 --> 00:13:48,840
therefore I had to go back to using the

00:13:45,420 --> 00:13:52,470
old schemer because I did talk to the

00:13:48,840 --> 00:13:55,410
new p.m. for the CLI a few months ago

00:13:52,470 --> 00:13:57,960
about that I think which is why I

00:13:55,410 --> 00:14:00,150
thought about it that the CF CLI team

00:13:57,960 --> 00:14:01,590
should own that resource that they

00:14:00,150 --> 00:14:04,080
should own that it works and it's got

00:14:01,590 --> 00:14:05,670
all the fields because really should

00:14:04,080 --> 00:14:08,490
humans actually be touching the CFCA

00:14:05,670 --> 00:14:10,220
anyway certainly for push maybe not so

00:14:08,490 --> 00:14:15,600
therefore perhaps the CF team should own

00:14:10,220 --> 00:14:17,790
CI you know experiences they said no so

00:14:15,600 --> 00:14:20,610
that just means that whether it's concur

00:14:17,790 --> 00:14:22,050
or everyone else is you know if we don't

00:14:20,610 --> 00:14:23,640
keep maintain backward compatibility

00:14:22,050 --> 00:14:26,280
we're going to have users using one

00:14:23,640 --> 00:14:29,690
version of the CLI and CI systems having

00:14:26,280 --> 00:14:29,690
a very older different version

00:14:29,860 --> 00:14:35,950
or someone has to maintain Forks or

00:14:32,740 --> 00:14:37,690
whatever and if that didn't make sense I

00:14:35,950 --> 00:14:40,570
apologize I can explain it some other

00:14:37,690 --> 00:14:43,990
way to whoever wants to hear I guess -

00:14:40,570 --> 00:14:46,270
the first way about X after field pack

00:14:43,990 --> 00:14:52,510
and I don't know if Stevens on the line

00:14:46,270 --> 00:14:53,800
I believe he's on vacation correct

00:14:52,510 --> 00:14:59,740
things the people that aren't here just

00:14:53,800 --> 00:15:03,370
wallet sure I think that's that's still

00:14:59,740 --> 00:15:05,860
you know the scope of that team and

00:15:03,370 --> 00:15:08,050
whether or not they they're maintaining

00:15:05,860 --> 00:15:11,470
it they don't know who created the

00:15:08,050 --> 00:15:13,870
optional pack and then therefore the the

00:15:11,470 --> 00:15:16,330
question of maintaining it but but I do

00:15:13,870 --> 00:15:21,040
agree there there's some usage to it so

00:15:16,330 --> 00:15:24,010
I'm not quite sure like at least with

00:15:21,040 --> 00:15:27,210
the school about two of the supply stuff

00:15:24,010 --> 00:15:29,380
like you know when they supported final

00:15:27,210 --> 00:15:31,360
when they broke out the supply bill

00:15:29,380 --> 00:15:33,760
packs it's kind of like the canonical

00:15:31,360 --> 00:15:35,260
example of a supply bill pack if we

00:15:33,760 --> 00:15:37,120
don't have the app bill pack you've kind

00:15:35,260 --> 00:15:38,860
of got to start making bespoke bill

00:15:37,120 --> 00:15:40,840
packs till the cows come home and

00:15:38,860 --> 00:15:42,790
they're not I mean we can follow these

00:15:40,840 --> 00:15:43,930
up in different channels I don't agree

00:15:42,790 --> 00:15:45,730
we've got the people here to answer

00:15:43,930 --> 00:15:47,890
these questions and also you better be

00:15:45,730 --> 00:15:50,230
here in San Francisco right so come talk

00:15:47,890 --> 00:15:53,770
to these days right the bill pack chain

00:15:50,230 --> 00:15:56,230
is in no no thinking the CC and zone

00:15:53,770 --> 00:15:59,860
okay but let's let's take a short break

00:15:56,230 --> 00:16:02,470
but thank you for this let's move to

00:15:59,860 --> 00:16:05,170
blush and see if there is any update I

00:16:02,470 --> 00:16:09,520
see that Danny's here but let's see if

00:16:05,170 --> 00:16:14,830
maybe Morgan or any of the new yes I'm

00:16:09,520 --> 00:16:20,800
here hey how are you I'm good I'm good

00:16:14,830 --> 00:16:25,050
all right so few updates from Marco this

00:16:20,800 --> 00:16:28,120
time first we are right now having

00:16:25,050 --> 00:16:31,960
thought about the potential incubation

00:16:28,120 --> 00:16:35,200
for a one-way cloud CPI discussion is

00:16:31,960 --> 00:16:37,450
still on the way so we expect to wrap

00:16:35,200 --> 00:16:39,580
this soon so if there's anybody from

00:16:37,450 --> 00:16:43,240
Huawei or connected to our way here on

00:16:39,580 --> 00:16:44,209
the call we haven't forgot about about

00:16:43,240 --> 00:16:49,999
devote we

00:16:44,209 --> 00:16:54,170
are simply having those discussions also

00:16:49,999 --> 00:16:57,139
we have announced that few CPI's have

00:16:54,170 --> 00:16:59,449
graduated from incubation so the AWS

00:16:57,139 --> 00:17:03,589
OpenStack vSphere Google and as you are

00:16:59,449 --> 00:17:06,409
CPI are now full-blown projects as part

00:17:03,589 --> 00:17:09,380
of our PMC and this means that we will

00:17:06,409 --> 00:17:13,819
be moving the github repositories under

00:17:09,380 --> 00:17:17,779
a proper github organization this means

00:17:13,819 --> 00:17:22,880
that we will have new releases on Bosh

00:17:17,779 --> 00:17:24,829
io to deliver those artifacts so there

00:17:22,880 --> 00:17:29,000
will probably be a grace period but if

00:17:24,829 --> 00:17:32,710
you rely on the URLs that point to the

00:17:29,000 --> 00:17:35,990
current resources on budget IO plan some

00:17:32,710 --> 00:17:38,390
rework in the next few weeks since the

00:17:35,990 --> 00:17:40,580
URLs will change we'll probably try to

00:17:38,390 --> 00:17:43,100
have some re SS but at some point the

00:17:40,580 --> 00:17:44,690
old URLs that point to incubator or

00:17:43,100 --> 00:17:49,730
something like that will we'll be dead

00:17:44,690 --> 00:17:53,000
so take that into account also we are

00:17:49,730 --> 00:17:56,899
currently working on I would say

00:17:53,000 --> 00:17:59,090
official statements for our support

00:17:56,899 --> 00:18:01,220
policy for stem cells the director and

00:17:59,090 --> 00:18:04,309
Bosch deployment itself so we just want

00:18:01,220 --> 00:18:06,409
to make clear what the support

00:18:04,309 --> 00:18:09,830
expectation is there for those three

00:18:06,409 --> 00:18:12,590
distinct artifacts and so if you have

00:18:09,830 --> 00:18:14,600
any input about that for example we know

00:18:12,590 --> 00:18:16,820
that some people rely a lot on Bosch

00:18:14,600 --> 00:18:20,120
deployment and see in it a kind of

00:18:16,820 --> 00:18:23,539
official way to deploy Bosch some other

00:18:20,120 --> 00:18:27,049
people have a different opinion so we

00:18:23,539 --> 00:18:31,190
just want to listen to you guys and and

00:18:27,049 --> 00:18:34,039
make sure that whatever whatever route

00:18:31,190 --> 00:18:36,710
or whatever we do going forward will be

00:18:34,039 --> 00:18:38,899
will be explicitly defined so we're

00:18:36,710 --> 00:18:40,870
probably somewhere on budget at i/o when

00:18:38,899 --> 00:18:43,789
you download the stuff or something else

00:18:40,870 --> 00:18:46,520
so any input that you have these reach

00:18:43,789 --> 00:18:48,590
out to Morgan myself or to your team

00:18:46,520 --> 00:18:52,039
members like Danny and let us know what

00:18:48,590 --> 00:18:53,289
you think we are looking forward to

00:18:52,039 --> 00:18:55,340
hearing from you

00:18:53,289 --> 00:18:58,040
apart from that the team has been busy

00:18:55,340 --> 00:19:00,710
delivering a small small feet

00:18:58,040 --> 00:19:05,090
in the last few weeks bug fixes and

00:19:00,710 --> 00:19:08,570
things like that big chunks of work I

00:19:05,090 --> 00:19:10,850
had our improvements to DNS LTS in San

00:19:08,570 --> 00:19:14,150
Francisco and in Toronto we'll be

00:19:10,850 --> 00:19:17,660
delivering things around better

00:19:14,150 --> 00:19:19,160
information in the drain scripts to

00:19:17,660 --> 00:19:20,960
ensure that you can make better

00:19:19,160 --> 00:19:25,330
decisions about what to do in those

00:19:20,960 --> 00:19:30,230
scripts and will deliver things around

00:19:25,330 --> 00:19:32,780
concatenated CAS in bash manifests as

00:19:30,230 --> 00:19:36,500
well and this will make at that point in

00:19:32,780 --> 00:19:38,960
time our certificate rotation support

00:19:36,500 --> 00:19:42,710
complete when we deliver that last part

00:19:38,960 --> 00:19:45,700
and that's it for Bosch Thank You Fred

00:19:42,710 --> 00:19:48,380
all right we don't really have time for

00:19:45,700 --> 00:19:51,410
that's a question but maybe one if there

00:19:48,380 --> 00:19:57,770
is a question on blush a quick follow-up

00:19:51,410 --> 00:20:02,210
or something yes first thank you for

00:19:57,770 --> 00:20:03,980
Eric for the new stuff I've always

00:20:02,210 --> 00:20:07,670
wondered what is the difference between

00:20:03,980 --> 00:20:09,860
the default of the blush release and the

00:20:07,670 --> 00:20:12,560
default that are implementing the impose

00:20:09,860 --> 00:20:14,300
deployments and I actually actually I

00:20:12,560 --> 00:20:16,970
asked the question to Dimitri but never

00:20:14,300 --> 00:20:18,490
had an answer so what what would you say

00:20:16,970 --> 00:20:22,210
about that

00:20:18,490 --> 00:20:22,210
it's a very good question

00:20:22,720 --> 00:20:31,640
because that was true in one of those

00:20:27,770 --> 00:20:35,090
and false in like Bastian s implemented

00:20:31,640 --> 00:20:36,680
by default in bosch deployments so I

00:20:35,090 --> 00:20:38,420
submitted the pull requests in the

00:20:36,680 --> 00:20:40,400
documentation saying ok let's document

00:20:38,420 --> 00:20:42,410
that because it's implemented in first

00:20:40,400 --> 00:20:44,510
opponents and Dimitri said no I'm

00:20:42,410 --> 00:20:48,080
refusing these two requests because it's

00:20:44,510 --> 00:20:50,090
not the default in the perfidy okay I

00:20:48,080 --> 00:20:53,060
wasn't aware of that discussion so

00:20:50,090 --> 00:20:56,630
please reach out to me after the call on

00:20:53,060 --> 00:20:58,850
slack and maybe we can I can have a look

00:20:56,630 --> 00:21:01,280
at the the pull request and discuss it

00:20:58,850 --> 00:21:04,130
with Morgan to see what it is input

00:21:01,280 --> 00:21:06,560
because I you know we are a be a to head

00:21:04,130 --> 00:21:09,320
doctor now instead of a single head so

00:21:06,560 --> 00:21:10,940
it was quite some time ago but so the

00:21:09,320 --> 00:21:11,670
the volunter question after that was

00:21:10,940 --> 00:21:13,680
okay what's

00:21:11,670 --> 00:21:16,350
the difference between the default in

00:21:13,680 --> 00:21:19,130
the Bosch release which was phones about

00:21:16,350 --> 00:21:22,320
post genus and and the default of the

00:21:19,130 --> 00:21:26,790
well in the case in the case of DNS I

00:21:22,320 --> 00:21:30,650
would get I would guess that we set the

00:21:26,790 --> 00:21:34,530
the default in barcia plumbing - yes -

00:21:30,650 --> 00:21:38,820
to ensure that people will try it adopt

00:21:34,530 --> 00:21:41,100
it and the default in the release still

00:21:38,820 --> 00:21:42,870
stays to know maybe for historical

00:21:41,100 --> 00:21:45,600
reasons but this is something probably

00:21:42,870 --> 00:21:49,530
that we would be willing to bring in

00:21:45,600 --> 00:21:51,180
line and going forward I mean that's as

00:21:49,530 --> 00:21:55,890
part of our discussion about the role of

00:21:51,180 --> 00:21:58,170
Bosch deployment and here we don't have

00:21:55,890 --> 00:22:00,360
a definite answer we are still

00:21:58,170 --> 00:22:03,060
discussing Italy among ourselves but

00:22:00,360 --> 00:22:04,950
yeah if you have any additional input in

00:22:03,060 --> 00:22:07,010
that discussion we are more than willing

00:22:04,950 --> 00:22:09,750
to listen to you and see how we can

00:22:07,010 --> 00:22:13,370
reach an equilibrium or a compromise

00:22:09,750 --> 00:22:15,600
there okay great and we are expecting

00:22:13,370 --> 00:22:18,630
improvements in in the drain script

00:22:15,600 --> 00:22:21,810
because they the I have documented the

00:22:18,630 --> 00:22:25,290
the hack that the system is becoming

00:22:21,810 --> 00:22:29,700
zero - to know that the anode is going

00:22:25,290 --> 00:22:32,190
away forever and we we would like to

00:22:29,700 --> 00:22:34,800
have sure we need something better for

00:22:32,190 --> 00:22:37,470
inline in a memory databases for example

00:22:34,800 --> 00:22:39,720
that don't have any persistent disk yeah

00:22:37,470 --> 00:22:41,730
and in this case we are currently

00:22:39,720 --> 00:22:43,980
planning to return information about the

00:22:41,730 --> 00:22:48,030
few you know current and future state of

00:22:43,980 --> 00:22:50,280
the job instance group their instance

00:22:48,030 --> 00:22:52,710
and then you can make very granular

00:22:50,280 --> 00:22:56,220
decision about what you do so you should

00:22:52,710 --> 00:22:57,960
be happy we are busy there was a bus

00:22:56,220 --> 00:23:02,550
note on the topic but we are currently

00:22:57,960 --> 00:23:05,160
working on updating it once this is done

00:23:02,550 --> 00:23:08,310
we will move the content to a public

00:23:05,160 --> 00:23:09,090
Google Doc to listen to feedback from

00:23:08,310 --> 00:23:14,010
the community

00:23:09,090 --> 00:23:19,860
ok great thank you thank you Ben all

00:23:14,010 --> 00:23:24,750
right move on to the next because we

00:23:19,860 --> 00:23:25,950
want to give time to it so his dog will

00:23:24,750 --> 00:23:31,410
not hear or any

00:23:25,950 --> 00:23:35,220
it's on serviceworker api no all right

00:23:31,410 --> 00:23:39,180
so for extensions I'll mention just one

00:23:35,220 --> 00:23:41,900
thing the abacus team this is the

00:23:39,180 --> 00:23:44,880
metering engine for foundry the

00:23:41,900 --> 00:23:46,470
submitter proposal I would ask you to

00:23:44,880 --> 00:23:48,180
take a look at it because this is

00:23:46,470 --> 00:23:51,030
essentially the next version of a

00:23:48,180 --> 00:23:53,910
package that you're working on if you're

00:23:51,030 --> 00:23:56,520
interested in that project come to the

00:23:53,910 --> 00:23:58,680
sea of extensions BMC calls every month

00:23:56,520 --> 00:24:01,230
and you can get some options for that

00:23:58,680 --> 00:24:03,840
obviously there's other projects but we

00:24:01,230 --> 00:24:07,410
don't really have the time let's go now

00:24:03,840 --> 00:24:11,610
to the invited speakers we have our

00:24:07,410 --> 00:24:16,640
products from s AP in India I think from

00:24:11,610 --> 00:24:19,980
Bangalore my heart are you here yes

00:24:16,640 --> 00:24:21,300
inaudible yes where I can hear you so if

00:24:19,980 --> 00:24:23,580
you want to share your screen and give

00:24:21,300 --> 00:24:26,790
us a quick update on service fabric if

00:24:23,580 --> 00:24:28,350
you can keep it at 15 to 20 minutes I'll

00:24:26,790 --> 00:24:32,820
be great thank you

00:24:28,350 --> 00:24:35,970
sure little drink okay so maybe I'll

00:24:32,820 --> 00:24:38,760
quickly start hello everyone so I will

00:24:35,970 --> 00:24:43,890
be talking about service fabric which is

00:24:38,760 --> 00:24:45,600
a design of service fabric so these are

00:24:43,890 --> 00:24:50,280
the countries that I will be talking

00:24:45,600 --> 00:24:52,860
about why the new design was introduced

00:24:50,280 --> 00:24:55,830
what was motivation basically and then

00:24:52,860 --> 00:24:57,810
what it offers and briefly the

00:24:55,830 --> 00:25:00,570
high-level architecture and the

00:24:57,810 --> 00:25:03,390
capabilities and maybe if time permits

00:25:00,570 --> 00:25:07,620
that will also have a very short demo so

00:25:03,390 --> 00:25:10,620
let's quickly see so the main motivation

00:25:07,620 --> 00:25:13,760
behind the service fabric was the

00:25:10,620 --> 00:25:15,810
following so we wanted to basically

00:25:13,760 --> 00:25:18,090
integrate new provisional

00:25:15,810 --> 00:25:20,730
as you probably would know that service

00:25:18,090 --> 00:25:23,490
traffic at this point supports Bosch

00:25:20,730 --> 00:25:26,010
based provisioning and this provisioning

00:25:23,490 --> 00:25:27,990
we also wanted to integrate new

00:25:26,010 --> 00:25:32,850
provisional and we wanted to basically

00:25:27,990 --> 00:25:34,800
find out how easily somebody and on the

00:25:32,850 --> 00:25:37,600
similar line we would also wanted to

00:25:34,800 --> 00:25:40,600
have new backup my

00:25:37,600 --> 00:25:44,020
mechanism or integrated in post of this

00:25:40,600 --> 00:25:46,450
traffic along with the one that we

00:25:44,020 --> 00:25:50,080
already have something like VBR or

00:25:46,450 --> 00:25:51,940
shield also we wanted to have a even

00:25:50,080 --> 00:25:54,670
ribbon architecture which is easily

00:25:51,940 --> 00:25:59,140
capable and you can do lot of stuff like

00:25:54,670 --> 00:26:02,350
monitoring and avi also we initially we

00:25:59,140 --> 00:26:05,230
started with state as a stateless broker

00:26:02,350 --> 00:26:07,990
so we wanted to reduce some of the

00:26:05,230 --> 00:26:09,790
platform dependency that we have also

00:26:07,990 --> 00:26:13,210
some of the bosch dependency that we

00:26:09,790 --> 00:26:16,030
have for state and we wanted to maintain

00:26:13,210 --> 00:26:19,450
some kind of minimal state in the proper

00:26:16,030 --> 00:26:22,270
side so with this basically we

00:26:19,450 --> 00:26:25,000
introduced surface traffic to Garko

00:26:22,270 --> 00:26:28,660
which is basically a control loop based

00:26:25,000 --> 00:26:31,300
architecture and even River we use Kuban

00:26:28,660 --> 00:26:33,610
in this API server for the eventing so

00:26:31,300 --> 00:26:36,190
how it basically works is the broker

00:26:33,610 --> 00:26:39,670
basically sends the events to the API

00:26:36,190 --> 00:26:41,880
server so the broker basically is a API

00:26:39,670 --> 00:26:45,100
controller layer which only sends the

00:26:41,880 --> 00:26:46,810
events to the API server and you have

00:26:45,100 --> 00:26:49,920
different operators which basically

00:26:46,810 --> 00:26:53,560
watches and listens to these events

00:26:49,920 --> 00:26:58,090
processes them so going to the high

00:26:53,560 --> 00:27:01,060
level architecture so so if you see on

00:26:58,090 --> 00:27:03,880
the top we have different consuming

00:27:01,060 --> 00:27:08,290
platform speed Cloud Foundry humanities

00:27:03,880 --> 00:27:11,140
and maybe more so in the service broker

00:27:08,290 --> 00:27:12,580
framework we offer two types of API x1

00:27:11,140 --> 00:27:15,430
is the blueberry peas which are

00:27:12,580 --> 00:27:18,310
confirming to OSP API and which

00:27:15,430 --> 00:27:23,290
basically offers crud operations on the

00:27:18,310 --> 00:27:25,360
surface instances I find on my subject

00:27:23,290 --> 00:27:27,910
like that and we also have some

00:27:25,360 --> 00:27:30,070
extension API is like for doing backup

00:27:27,910 --> 00:27:34,950
and restore and stuff like that which

00:27:30,070 --> 00:27:38,080
could eventually become actions API and

00:27:34,950 --> 00:27:41,980
probably always be API spec comes with

00:27:38,080 --> 00:27:44,200
action so how it works

00:27:41,980 --> 00:27:48,030
the new design works is like whenever

00:27:44,200 --> 00:27:49,730
create or an update request comes the

00:27:48,030 --> 00:27:53,539
API controller

00:27:49,730 --> 00:27:56,600
basically sensed an event through the

00:27:53,539 --> 00:28:00,500
custom Vsauce definitions it creates a

00:27:56,600 --> 00:28:02,059
resource in the API server of course the

00:28:00,500 --> 00:28:05,570
idea is already second backed by the

00:28:02,059 --> 00:28:09,529
HTTP the packet and then on the operated

00:28:05,570 --> 00:28:12,080
side we have currently Porsche operative

00:28:09,529 --> 00:28:14,600
and opera operator and somebody can also

00:28:12,080 --> 00:28:17,720
write different other operators like you

00:28:14,600 --> 00:28:21,049
can write an operator for 200 his-

00:28:17,720 --> 00:28:23,600
service provisioning so the these

00:28:21,049 --> 00:28:26,080
operators basically are watching and

00:28:23,600 --> 00:28:29,899
listening to the APS of resources and

00:28:26,080 --> 00:28:32,720
any changes to them and then based on

00:28:29,899 --> 00:28:34,880
that it reacts and he does the service

00:28:32,720 --> 00:28:38,990
publishing lis are things like

00:28:34,880 --> 00:28:41,779
provisioning or things like that so in a

00:28:38,990 --> 00:28:44,899
nutshell the capabilities that it offers

00:28:41,779 --> 00:28:48,080
so integrating new provisional becomes

00:28:44,899 --> 00:28:51,399
easy now that flow is decoupled from the

00:28:48,080 --> 00:28:55,610
service traffic stream code and also

00:28:51,399 --> 00:28:59,000
many new capability a new mechanism like

00:28:55,610 --> 00:29:01,330
backup and restore also becomes easy we

00:28:59,000 --> 00:29:04,159
also maintain a minimal state which

00:29:01,330 --> 00:29:06,710
reduces some of the platform dependency

00:29:04,159 --> 00:29:09,980
for some of the metadata that we need to

00:29:06,710 --> 00:29:12,620
acquire something like plan ID or

00:29:09,980 --> 00:29:16,700
service ID for a particular service

00:29:12,620 --> 00:29:19,370
instance also the fourth point is very

00:29:16,700 --> 00:29:21,529
important is you can actually write new

00:29:19,370 --> 00:29:24,799
operators which can be in any language

00:29:21,529 --> 00:29:27,350
so it also enables polyglot programming

00:29:24,799 --> 00:29:30,769
and somebody can also contribute to

00:29:27,350 --> 00:29:34,100
service fabric and being in new

00:29:30,769 --> 00:29:35,990
revisionists also different other

00:29:34,100 --> 00:29:39,110
functionalities can be brought in

00:29:35,990 --> 00:29:41,450
something like monitoring or logging

00:29:39,110 --> 00:29:44,059
because it is even driven so somebody

00:29:41,450 --> 00:29:48,320
can listen to those events and bring in

00:29:44,059 --> 00:29:53,120
new features so with that we will

00:29:48,320 --> 00:29:59,120
probably we have some time right you

00:29:53,120 --> 00:30:00,950
have about seven minutes about how it

00:29:59,120 --> 00:30:03,030
works so I'll hand it over to my

00:30:00,950 --> 00:30:07,080
colleague KP key so

00:30:03,030 --> 00:30:10,230
what you okay hi everyone this is Kate

00:30:07,080 --> 00:30:16,530
kia from service rabbit team so i will

00:30:10,230 --> 00:30:19,290
just quickly show you a demo so i'll

00:30:16,530 --> 00:30:22,140
just explain take a moment to explain

00:30:19,290 --> 00:30:24,570
what these fails represents so here on

00:30:22,140 --> 00:30:27,240
left-hand side there is a px server that

00:30:24,570 --> 00:30:30,380
I will show how the resources are

00:30:27,240 --> 00:30:34,710
getting populated how their state change

00:30:30,380 --> 00:30:38,700
and then here over here I have a

00:30:34,710 --> 00:30:41,340
platform which is EF for now and then we

00:30:38,700 --> 00:30:44,040
have a back end in case of Bosch I will

00:30:41,340 --> 00:30:48,930
show how the Bosch deployments are

00:30:44,040 --> 00:30:52,110
getting spin so let's start I will show

00:30:48,930 --> 00:30:55,140
you the marketplace here so as you can

00:30:52,110 --> 00:30:57,240
see we have already a blueprint service

00:30:55,140 --> 00:30:58,710
which is also open source so it is a

00:30:57,240 --> 00:31:02,550
dummy service that's on this fabric

00:30:58,710 --> 00:31:06,420
provides and it has various plans mainly

00:31:02,550 --> 00:31:09,000
docker and then Bosh base so we can

00:31:06,420 --> 00:31:22,580
create our service instance of this

00:31:09,000 --> 00:31:25,830
blueprint instant service okay and

00:31:22,580 --> 00:31:34,260
meanwhile it is getting created what we

00:31:25,830 --> 00:31:37,380
can see is here we can see that in API

00:31:34,260 --> 00:31:43,620
server there are resources getting

00:31:37,380 --> 00:31:46,110
created for the same so resource type

00:31:43,620 --> 00:31:50,760
that we have for this Bosh based

00:31:46,110 --> 00:31:58,530
instances is director and the name here

00:31:50,760 --> 00:32:03,030
will be the deployment name and we can

00:31:58,530 --> 00:32:07,370
see that the the type of event is create

00:32:03,030 --> 00:32:11,180
and it is in progress also we can see in

00:32:07,370 --> 00:32:11,180
Bosh that

00:32:16,919 --> 00:32:23,919
that the deployment is getting created

00:32:19,960 --> 00:32:27,460
so probably reasons we do not have much

00:32:23,919 --> 00:32:29,529
time I I'll just skip this part so this

00:32:27,460 --> 00:32:32,169
will get created so I just wanted to

00:32:29,529 --> 00:32:34,120
show the you can see the create is a

00:32:32,169 --> 00:32:36,520
succeeded so I just wanted to show that

00:32:34,120 --> 00:32:38,169
this is the status quo for service

00:32:36,520 --> 00:32:42,299
fabric so they already support this

00:32:38,169 --> 00:32:46,779
Bosch which is now SF 2.0 architecture

00:32:42,299 --> 00:32:49,809
provision compliant what another thing I

00:32:46,779 --> 00:32:51,580
wanted to show is now we talked about we

00:32:49,809 --> 00:32:56,799
can bring in new Provisionals very

00:32:51,580 --> 00:33:01,630
easily so what we can see is I will show

00:32:56,799 --> 00:33:03,940
you that any I asked native also native

00:33:01,630 --> 00:33:07,029
service or so we can bring in very easy

00:33:03,940 --> 00:33:10,240
so for example I am taking here Ally

00:33:07,029 --> 00:33:13,870
Klaus Alibaba Klaus non-native service

00:33:10,240 --> 00:33:16,360
which is absurd a DB service of RDS they

00:33:13,870 --> 00:33:20,020
provide Postgres equal so what we have

00:33:16,360 --> 00:33:22,210
done is we if you can see here there is

00:33:20,020 --> 00:33:26,320
a service expose wire service fabric

00:33:22,210 --> 00:33:29,169
absurd a DB and this is nothing but the

00:33:26,320 --> 00:33:32,770
provisional for this I a leak louse

00:33:29,169 --> 00:33:37,809
native absurd a DB provisioning service

00:33:32,770 --> 00:33:49,090
so let me see how it works so I will

00:33:37,809 --> 00:33:52,809
just spawn an instance for this okay

00:33:49,090 --> 00:33:58,029
similarly we can again see here that the

00:33:52,809 --> 00:34:01,590
instance is getting created here the

00:33:58,029 --> 00:34:01,590
resource type is absurd

00:34:14,220 --> 00:34:24,730
okay so create is in progress so

00:34:17,020 --> 00:34:28,470
meanwhile what I show is okay meanwhile

00:34:24,730 --> 00:34:32,080
what I show is so this is ally clouds

00:34:28,470 --> 00:34:34,929
console and what we can see is there is

00:34:32,080 --> 00:34:37,929
an instance getting created here which I

00:34:34,929 --> 00:34:41,380
just spawned and it has the instanceid

00:34:37,929 --> 00:34:44,560
starting with fully seven sets which we

00:34:41,380 --> 00:34:46,720
just saw the resource for so this takes

00:34:44,560 --> 00:34:48,310
a little bit more time five to seven

00:34:46,720 --> 00:34:50,649
minutes so what I will do is I have

00:34:48,310 --> 00:34:53,740
already created one instance which is

00:34:50,649 --> 00:34:56,230
running already with this I leave zero

00:34:53,740 --> 00:35:01,900
to six and on this instance I will just

00:34:56,230 --> 00:35:08,320
show how the binding box so let's see

00:35:01,900 --> 00:35:09,910
the CF service so you can see that this

00:35:08,320 --> 00:35:13,300
is the same service instance I was

00:35:09,910 --> 00:35:25,090
talking about so I will just create a

00:35:13,300 --> 00:35:33,490
key for this so what the key is now

00:35:25,090 --> 00:35:40,090
created let's see okay so here in the

00:35:33,490 --> 00:35:42,250
backend what I saw is we'll just connect

00:35:40,090 --> 00:35:44,280
to this this is the Postgres instance so

00:35:42,250 --> 00:35:51,550
we will just connect to it via this

00:35:44,280 --> 00:35:54,180
service instance so just one more thing

00:35:51,550 --> 00:35:56,920
I will show is in this instance so

00:35:54,180 --> 00:35:59,830
basically what we do is we create our

00:35:56,920 --> 00:36:01,870
internet Internet address for this wire

00:35:59,830 --> 00:36:04,000
which we can access this instance we

00:36:01,870 --> 00:36:06,310
create some more sounds we create

00:36:04,000 --> 00:36:08,590
initial databases so this is all part of

00:36:06,310 --> 00:36:10,090
the create service instance which is

00:36:08,590 --> 00:36:15,700
done by a service fabric and the

00:36:10,090 --> 00:36:19,020
parishioner integrated with it okay

00:36:15,700 --> 00:36:19,020
so let's see

00:36:19,320 --> 00:36:41,620
so this is the username and test is 30

00:36:32,140 --> 00:36:45,220
days and password uses okay so just just

00:36:41,620 --> 00:36:49,390
to show you you can see that this is the

00:36:45,220 --> 00:36:53,020
user that has been created here so yeah

00:36:49,390 --> 00:36:56,470
this is how then we also have the unbind

00:36:53,020 --> 00:36:59,230
somebody service integrated with it and

00:36:56,470 --> 00:37:03,250
this is the easiest maybe we can bring

00:36:59,230 --> 00:37:04,990
in any provisional and meet anything I

00:37:03,250 --> 00:37:12,100
asked native service another banking

00:37:04,990 --> 00:37:15,990
service so so basically this is to show

00:37:12,100 --> 00:37:19,930
that with the new design we can now

00:37:15,990 --> 00:37:23,860
bring in new provisional and we can help

00:37:19,930 --> 00:37:26,950
enable people also to contribute to it

00:37:23,860 --> 00:37:28,630
and bring in different provisioning

00:37:26,950 --> 00:37:32,550
mechanism and different of the features

00:37:28,630 --> 00:37:35,650
yeah so that is all from our side so

00:37:32,550 --> 00:37:37,090
thanks excellent excellent thank you so

00:37:35,650 --> 00:37:38,830
much we don't really have time for

00:37:37,090 --> 00:37:42,160
question but I will ask one thing which

00:37:38,830 --> 00:37:43,930
is where would people go to find more

00:37:42,160 --> 00:37:46,870
information because obviously people

00:37:43,930 --> 00:37:48,790
will watch this on the video can you

00:37:46,870 --> 00:37:51,400
tell them where to go to they go to the

00:37:48,790 --> 00:37:53,400
service fabric repository on github and

00:37:51,400 --> 00:37:56,230
they'll have all the documentation and

00:37:53,400 --> 00:37:58,630
links to how they can contribute and add

00:37:56,230 --> 00:38:04,500
more provisioners or do you have a blog

00:37:58,630 --> 00:38:08,320
post all the information should be

00:38:04,500 --> 00:38:11,380
github repository so you can check the

00:38:08,320 --> 00:38:16,210
retweets or the documentation link that

00:38:11,380 --> 00:38:18,640
we have as part of the repository so the

00:38:16,210 --> 00:38:21,160
repository is from foundry incubator and

00:38:18,640 --> 00:38:24,340
then service fabric cooker you could

00:38:21,160 --> 00:38:26,560
check out the wiki and the API

00:38:24,340 --> 00:38:28,450
documentation also that we have

00:38:26,560 --> 00:38:31,180
architecture documentation also that we

00:38:28,450 --> 00:38:32,410
have and also if you have any questions

00:38:31,180 --> 00:38:36,039
or issues we feel

00:38:32,410 --> 00:38:39,579
to raise issues of or even directly

00:38:36,039 --> 00:38:40,569
contact us of the psycho state EXO thank

00:38:39,579 --> 00:38:42,930
you so much vaccine

00:38:40,569 --> 00:38:47,170
thank you sheesh alright so now we're

00:38:42,930 --> 00:38:50,559
switching to the last talk and we have

00:38:47,170 --> 00:38:52,269
karate ready she's here she's from

00:38:50,559 --> 00:38:55,630
pivotal and she's gonna give us an

00:38:52,269 --> 00:38:59,500
update I guess CFC are so refreshed

00:38:55,630 --> 00:39:09,279
oh thanks yeah just a couple of slides

00:38:59,500 --> 00:39:14,829
here I'm gonna share my screen can you

00:39:09,279 --> 00:39:16,779
all see this okay cool yeah so as Max

00:39:14,829 --> 00:39:18,039
mentioned my name is nirvash a engineer

00:39:16,779 --> 00:39:19,750
on the CFC RIT team

00:39:18,039 --> 00:39:21,250
it's probably been a while since you've

00:39:19,750 --> 00:39:23,140
heard from us so we thought we'd come

00:39:21,250 --> 00:39:25,660
over to this cow call on do a little

00:39:23,140 --> 00:39:30,450
update on what we've been doing and

00:39:25,660 --> 00:39:33,250
Before we jump into that like are we so

00:39:30,450 --> 00:39:35,920
the CFC our team stands for the cuff

00:39:33,250 --> 00:39:38,740
Rodrick container runtime you may have

00:39:35,920 --> 00:39:41,049
noticed previously as Kubo and our main

00:39:38,740 --> 00:39:43,450
responsibility is to just package

00:39:41,049 --> 00:39:46,299
kubernetes it's dependencies into a

00:39:43,450 --> 00:39:47,589
Bosch release so the main deliverable

00:39:46,299 --> 00:39:49,509
that we're offering is that if you're a

00:39:47,589 --> 00:39:51,549
Bosch operator that wants a kubernetes

00:39:49,509 --> 00:39:53,200
cluster you'll take our Bosch release

00:39:51,549 --> 00:39:55,599
deploy it and it provides a nice

00:39:53,200 --> 00:39:57,279
reproducible deployments for Cades so

00:39:55,599 --> 00:40:00,190
it's used as a foundational layer that

00:39:57,279 --> 00:40:03,789
other teams are using for creating

00:40:00,190 --> 00:40:07,359
things on top of our team members are

00:40:03,789 --> 00:40:10,029
mainly in the dublin ireland office as

00:40:07,359 --> 00:40:12,430
well as some of us here in the US I work

00:40:10,029 --> 00:40:14,349
out of the San Francisco office and I

00:40:12,430 --> 00:40:17,619
work with a vmware engineer who's

00:40:14,349 --> 00:40:20,769
working remotely from portland so we're

00:40:17,619 --> 00:40:22,150
a dis readed team but let's walk through

00:40:20,769 --> 00:40:25,420
a little bit of like kind of the

00:40:22,150 --> 00:40:27,519
beginnings of CFC are so back in early

00:40:25,420 --> 00:40:28,779
2017 I kind of want to remind like we're

00:40:27,519 --> 00:40:31,410
claw foundry and the open source

00:40:28,779 --> 00:40:36,160
community where it was

00:40:31,410 --> 00:40:38,200
Bosch v2 has just become like sort of a

00:40:36,160 --> 00:40:41,319
thing and and was ramping up

00:40:38,200 --> 00:40:44,019
bbl itself Bosch bootloader was starting

00:40:41,319 --> 00:40:46,060
to create support for creating directors

00:40:44,019 --> 00:40:48,190
with Boch equipment and create ends

00:40:46,060 --> 00:40:50,710
and there wasn't really quite Boston s

00:40:48,190 --> 00:40:53,470
yet it was still an idea that was

00:40:50,710 --> 00:40:55,960
percolating and cred hub itself was a

00:40:53,470 --> 00:40:58,780
maturing thing but despite all that we

00:40:55,960 --> 00:41:01,060
were trying to make probably most likely

00:40:58,780 --> 00:41:02,350
a highly visible Bosch release that was

00:41:01,060 --> 00:41:04,950
going to be consumed by a lot of folks

00:41:02,350 --> 00:41:08,860
with all these other developing

00:41:04,950 --> 00:41:11,680
technologies still maturing and our main

00:41:08,860 --> 00:41:13,600
goal at that time in early 2017 was just

00:41:11,680 --> 00:41:16,540
a build C of C R as quickly as possible

00:41:13,600 --> 00:41:18,940
we knew that kubernetes was you know had

00:41:16,540 --> 00:41:21,460
been around for three years or so at

00:41:18,940 --> 00:41:23,470
that point or maybe around just two

00:41:21,460 --> 00:41:24,880
years or so and we wanted to kind of get

00:41:23,470 --> 00:41:26,680
the ball rolling and offer something at

00:41:24,880 --> 00:41:29,320
that but on the Boche platform for

00:41:26,680 --> 00:41:29,710
kubernetes so eventually we figured it

00:41:29,320 --> 00:41:31,870
out

00:41:29,710 --> 00:41:34,480
we called it Kubo which was kubernetes

00:41:31,870 --> 00:41:36,250
plus Bosh and we created some artifacts

00:41:34,480 --> 00:41:38,110
that people could use Google really

00:41:36,250 --> 00:41:42,660
scooped a deployment even created a

00:41:38,110 --> 00:41:42,660
little trying to personify who we were

00:41:44,340 --> 00:41:49,510
but kind of frustrating into where we

00:41:46,570 --> 00:41:52,480
are now we had I guess he could say a

00:41:49,510 --> 00:41:53,890
bit of an identity crisis we start

00:41:52,480 --> 00:41:54,940
calling ourselves Kubo and started

00:41:53,890 --> 00:41:57,790
calling ourselves the confounded

00:41:54,940 --> 00:41:59,320
container runtime team and that really

00:41:57,790 --> 00:42:01,300
forced us to think about who are the

00:41:59,320 --> 00:42:03,970
users of the specialists that we've

00:42:01,300 --> 00:42:05,710
built so quickly and for a while we

00:42:03,970 --> 00:42:07,810
thought what we were doing is providing

00:42:05,710 --> 00:42:10,600
people a way to you and sell kubernetes

00:42:07,810 --> 00:42:13,060
which at the time was and still today is

00:42:10,600 --> 00:42:15,250
a difficult problem to do setting up

00:42:13,060 --> 00:42:16,900
your community so that they are those

00:42:15,250 --> 00:42:18,910
clusters are production ready and able

00:42:16,900 --> 00:42:22,260
to upgrade isn't only not a solved

00:42:18,910 --> 00:42:24,220
problem but we were one of many

00:42:22,260 --> 00:42:27,520
installers in the kubernetes community

00:42:24,220 --> 00:42:29,560
and still are like over 60 of them so by

00:42:27,520 --> 00:42:31,900
us creating tooling and things that were

00:42:29,560 --> 00:42:33,010
abstracting the Boche layer was actually

00:42:31,900 --> 00:42:34,560
doing it to service to the Bosch

00:42:33,010 --> 00:42:37,810
operator so we're trying to use

00:42:34,560 --> 00:42:40,390
kubernetes on Bosh so what we kind of

00:42:37,810 --> 00:42:42,460
decided to do is rename the team shift

00:42:40,390 --> 00:42:44,850
our focus a little bit to be more Bosh

00:42:42,460 --> 00:42:44,850
native

00:42:49,480 --> 00:42:53,230
so that means what we're working on

00:42:50,920 --> 00:42:55,690
right now is continuing to flush out

00:42:53,230 --> 00:42:58,990
that Bosch native experience and what I

00:42:55,690 --> 00:43:01,750
specifically mean by that is we where

00:42:58,990 --> 00:43:03,849
previously creating our own Bosch

00:43:01,750 --> 00:43:05,349
directors and obstructing them into like

00:43:03,849 --> 00:43:08,349
fairly large batch scripts and we would

00:43:05,349 --> 00:43:09,970
require users of CFC are to kind of take

00:43:08,349 --> 00:43:12,040
the artifacts that were produced out of

00:43:09,970 --> 00:43:15,190
creating that director in order to be

00:43:12,040 --> 00:43:17,619
able to create CFC our clusters in their

00:43:15,190 --> 00:43:19,089
environments which was kind of not the

00:43:17,619 --> 00:43:21,310
greatest experience and if you already

00:43:19,089 --> 00:43:23,770
knew what Bosch was doing and how to

00:43:21,310 --> 00:43:24,940
operate it it really was actually

00:43:23,770 --> 00:43:27,760
preventing you from being able to use

00:43:24,940 --> 00:43:29,349
and create clusters with ease so we're

00:43:27,760 --> 00:43:31,150
kind of doing away with all of that and

00:43:29,349 --> 00:43:33,609
we're moving a lot of scripts and things

00:43:31,150 --> 00:43:36,970
around so you'll see a lot of turbulence

00:43:33,609 --> 00:43:38,290
I guess in our repos currently but we're

00:43:36,970 --> 00:43:40,330
continuing to flush that out and all of

00:43:38,290 --> 00:43:42,460
those products that I was talking about

00:43:40,330 --> 00:43:44,830
back in the day and 2017 that were still

00:43:42,460 --> 00:43:46,720
maturing they're really we're leveraging

00:43:44,830 --> 00:43:49,830
a lot more of those and making it much

00:43:46,720 --> 00:43:52,240
more Bosch native experience to use FCR

00:43:49,830 --> 00:43:55,330
we're also thinking a lot about how we

00:43:52,240 --> 00:43:57,070
can secure clusters aside from just

00:43:55,330 --> 00:43:58,690
creating reliable reproducible

00:43:57,070 --> 00:44:00,369
kubernetes clusters on Bosch we're

00:43:58,690 --> 00:44:03,730
really trying to make our clusters

00:44:00,369 --> 00:44:06,060
default by secure for those who played

00:44:03,730 --> 00:44:08,680
around with kubernetes it's pretty much

00:44:06,060 --> 00:44:10,990
kind of the most popular workloads or

00:44:08,680 --> 00:44:12,940
the most common ones do you want you to

00:44:10,990 --> 00:44:14,349
use a privileged containers but there

00:44:12,940 --> 00:44:16,150
are ways that you can continue to lock

00:44:14,349 --> 00:44:19,030
down that cluster and we want to give

00:44:16,150 --> 00:44:20,680
cluster admin cluster administrators the

00:44:19,030 --> 00:44:22,359
ability to play around with some of

00:44:20,680 --> 00:44:24,940
those admission cultural center on those

00:44:22,359 --> 00:44:26,619
on so one of the next features that

00:44:24,940 --> 00:44:29,290
we're working on in specific particular

00:44:26,619 --> 00:44:30,880
is pod security policies which is a

00:44:29,290 --> 00:44:34,030
communities feature that will allow

00:44:30,880 --> 00:44:36,310
people to specifically define what their

00:44:34,030 --> 00:44:38,560
cluster users will be able to do and not

00:44:36,310 --> 00:44:40,450
do you at a much more granular level

00:44:38,560 --> 00:44:43,960
than just disallowing privileged

00:44:40,450 --> 00:44:45,609
containers or disallowing some other

00:44:43,960 --> 00:44:49,359
security context is that you can enable

00:44:45,609 --> 00:44:50,560
and those Linux containers the other

00:44:49,359 --> 00:44:52,510
thing we're really concerned about is

00:44:50,560 --> 00:44:54,700
for people to be able to do backup and

00:44:52,510 --> 00:44:56,770
resource of their clusters so we're

00:44:54,700 --> 00:45:01,010
working with the platform recovery team

00:44:56,770 --> 00:45:02,720
to provide a bbr solution for

00:45:01,010 --> 00:45:05,270
not only for single master which we have

00:45:02,720 --> 00:45:09,350
today as well as for a multi master set

00:45:05,270 --> 00:45:13,010
up for kubernetes and so I already said

00:45:09,350 --> 00:45:14,650
this we probably about more than six

00:45:13,010 --> 00:45:18,050
months ago released the multi master

00:45:14,650 --> 00:45:20,990
support I was on master of CFC our

00:45:18,050 --> 00:45:23,060
release and right now we are rolling out

00:45:20,990 --> 00:45:25,730
just more support and for ways to people

00:45:23,060 --> 00:45:27,830
to manage that I think I had mentioned

00:45:25,730 --> 00:45:29,840
back in back in the day people were

00:45:27,830 --> 00:45:32,060
really nervous about at CD especially in

00:45:29,840 --> 00:45:34,640
the Cloud Foundry community but what CFC

00:45:32,060 --> 00:45:38,630
our team did was create their own at CD

00:45:34,640 --> 00:45:41,359
release that's specific for CF CR and it

00:45:38,630 --> 00:45:43,220
really goes through all of the at CD

00:45:41,359 --> 00:45:45,380
operator guidelines and make sure that

00:45:43,220 --> 00:45:46,790
we adhere to that and does less of the

00:45:45,380 --> 00:45:50,450
orchestration I think that we were

00:45:46,790 --> 00:45:54,200
bitten by in the past so look out for

00:45:50,450 --> 00:45:55,490
more multi master support with that some

00:45:54,200 --> 00:45:58,790
of the challenges that we're kind of

00:45:55,490 --> 00:45:59,990
currently facing in CF CR is a little

00:45:58,790 --> 00:46:01,460
bit of that technical debt that I

00:45:59,990 --> 00:46:04,609
described where we were provisioning our

00:46:01,460 --> 00:46:06,440
own box directors and things and kind of

00:46:04,609 --> 00:46:08,619
abstract nglish away from the user which

00:46:06,440 --> 00:46:11,630
actually met just a lot of tooling that

00:46:08,619 --> 00:46:14,090
we now can get rid of but it's very

00:46:11,630 --> 00:46:16,130
deeply integrated in our CIS and the way

00:46:14,090 --> 00:46:17,869
that we were kind of offering too late

00:46:16,130 --> 00:46:19,550
for our product so we're paying down

00:46:17,869 --> 00:46:22,310
some of that technical debt now after

00:46:19,550 --> 00:46:26,300
we've taken a step back from having to

00:46:22,310 --> 00:46:28,940
ship really quickly and another kind of

00:46:26,300 --> 00:46:31,340
like challenge that we have is figuring

00:46:28,940 --> 00:46:34,490
out what's the level of configurability

00:46:31,340 --> 00:46:36,859
for the SE of CR release we have a whole

00:46:34,490 --> 00:46:39,080
range of users who come wanting to use

00:46:36,859 --> 00:46:41,210
the release to set up kubernetes on

00:46:39,080 --> 00:46:42,740
Bosch it can be people who just want to

00:46:41,210 --> 00:46:44,210
cluster and just want to want our

00:46:42,740 --> 00:46:46,040
default settings and then there could be

00:46:44,210 --> 00:46:47,540
some really experienced folks who know

00:46:46,040 --> 00:46:48,950
exactly what they want or trying to

00:46:47,540 --> 00:46:51,890
build really cool things on top of it

00:46:48,950 --> 00:46:54,920
that want all of the features and flags

00:46:51,890 --> 00:46:56,960
enabled inside of the current nice API

00:46:54,920 --> 00:46:58,520
server thinks of that nature so trying

00:46:56,960 --> 00:47:00,320
to find the right balance so that we can

00:46:58,520 --> 00:47:02,030
continue to have those reliable clusters

00:47:00,320 --> 00:47:05,300
without people shooting themselves in

00:47:02,030 --> 00:47:12,230
the foot that kind of thing and produce

00:47:05,300 --> 00:47:13,340
like a good product up next for us is we

00:47:12,230 --> 00:47:14,960
get a lot of people in our select

00:47:13,340 --> 00:47:17,660
channel talking about a sure

00:47:14,960 --> 00:47:19,520
and and giving support for that so what

00:47:17,660 --> 00:47:21,170
that kind of looks like for CFC are

00:47:19,520 --> 00:47:23,180
really so more supporting any ayahs is

00:47:21,170 --> 00:47:24,950
just configuring the cloud provider

00:47:23,180 --> 00:47:29,930
component inside of the kubernetes

00:47:24,950 --> 00:47:32,990
cluster so it's it's also for us just

00:47:29,930 --> 00:47:34,850
kind of the making sure that the the

00:47:32,990 --> 00:47:36,590
conformance tests which are kind of like

00:47:34,850 --> 00:47:38,240
baseline features that should work in

00:47:36,590 --> 00:47:41,540
kubernetes still operate on the ayahs

00:47:38,240 --> 00:47:42,830
that we configure CFC r4 so we have some

00:47:41,540 --> 00:47:45,250
PRS out there for a sure we're gonna

00:47:42,830 --> 00:47:48,160
definitely roll those in very soon and

00:47:45,250 --> 00:47:52,070
definitely on our mind up next is the

00:47:48,160 --> 00:47:54,230
rotating of certificates so all the

00:47:52,070 --> 00:47:56,000
components inside of kubernetes can be

00:47:54,230 --> 00:47:58,040
configured to communicate over TLS

00:47:56,000 --> 00:48:01,250
there's a ton of them that do that and

00:47:58,040 --> 00:48:02,810
as a result we are definitely using

00:48:01,250 --> 00:48:04,580
kinda up to generate those certificates

00:48:02,810 --> 00:48:06,920
but the rotation process of that is

00:48:04,580 --> 00:48:08,870
going to be a little bit tricky to

00:48:06,920 --> 00:48:10,790
provide the least amount of downtime on

00:48:08,870 --> 00:48:12,170
that on the API server around the

00:48:10,790 --> 00:48:13,520
control plane for folks so we're going

00:48:12,170 --> 00:48:19,790
to try to think about a good strategy

00:48:13,520 --> 00:48:22,100
for that and that's pretty much it you

00:48:19,790 --> 00:48:24,230
can get in touch with us

00:48:22,100 --> 00:48:26,090
like I said we're an open source team or

00:48:24,230 --> 00:48:29,720
in the cloud foundry a CFC our channel

00:48:26,090 --> 00:48:32,690
you can email us my anchor is on the

00:48:29,720 --> 00:48:34,520
call as well and maybe my PMS too and

00:48:32,690 --> 00:48:41,450
yeah those are my kiddos if you want to

00:48:34,520 --> 00:48:52,190
reach us and talk to us okay sweet we

00:48:41,450 --> 00:48:53,480
have a few minutes for questions are

00:48:52,190 --> 00:49:01,670
there any books would you recommend

00:48:53,480 --> 00:49:03,110
reading you kid like us unless you're

00:49:01,670 --> 00:49:14,470
searching and I'll be happy to help you

00:49:03,110 --> 00:49:14,470
with that you never know

00:49:16,240 --> 00:49:22,210
[Laughter]

00:49:29,500 --> 00:49:34,849
is any attribute so you you said or

00:49:32,570 --> 00:49:38,990
actually that you have now backup and

00:49:34,849 --> 00:49:42,020
restore so does that mean that you

00:49:38,990 --> 00:49:45,590
periodically backing up the cluster or

00:49:42,020 --> 00:49:49,099
how how how is the data being I guess

00:49:45,590 --> 00:49:50,480
saved like how often I'm not sure

00:49:49,099 --> 00:49:54,050
exactly how that works because I

00:49:50,480 --> 00:49:55,970
remember in in video are you you have to

00:49:54,050 --> 00:49:58,700
kind of configure each component so that

00:49:55,970 --> 00:50:01,730
it actually does on you know strategy

00:49:58,700 --> 00:50:03,590
and backup but in this case I guess you

00:50:01,730 --> 00:50:07,580
have to package all the different pieces

00:50:03,590 --> 00:50:10,070
of a student and so on yeah so I

00:50:07,580 --> 00:50:11,270
actually had to be more specific for a

00:50:10,070 --> 00:50:14,570
backup and restore what we're really

00:50:11,270 --> 00:50:16,609
doing is snapshots of the at CD notes

00:50:14,570 --> 00:50:18,680
that are supporting they keep API server

00:50:16,609 --> 00:50:20,990
in the backing store for it so we just

00:50:18,680 --> 00:50:22,730
build that the scripts are baked into CF

00:50:20,990 --> 00:50:25,070
CR release so that's someone who is

00:50:22,730 --> 00:50:27,080
using BB are the CLI can come in and

00:50:25,070 --> 00:50:29,930
take on whatever cadence stay with like

00:50:27,080 --> 00:50:34,760
backups and then use that to restore our

00:50:29,930 --> 00:50:37,070
new kubernetes clusters yeah so we like

00:50:34,760 --> 00:50:38,839
I've written in you know like backup

00:50:37,070 --> 00:50:40,280
scripts inside of CFC cars so that they

00:50:38,839 --> 00:50:42,589
can automatically integrate and like

00:50:40,280 --> 00:50:43,970
what to do post restore pre restore that

00:50:42,589 --> 00:50:45,650
kind of stuff like taking down the

00:50:43,970 --> 00:50:55,130
control play and taking down that CD so

00:50:45,650 --> 00:50:56,480
that you have a safe oh this is part of

00:50:55,130 --> 00:50:58,250
the current release but that backup and

00:50:56,480 --> 00:51:00,890
restore stuff is just for single master

00:50:58,250 --> 00:51:03,619
we are working for it with that platform

00:51:00,890 --> 00:51:05,869
recovery team that builds BB r to do

00:51:03,619 --> 00:51:07,580
support for multi master as well so they

00:51:05,869 --> 00:51:09,230
recently submitted a PR for that and

00:51:07,580 --> 00:51:19,940
we're probably gonna world at it and

00:51:09,230 --> 00:51:22,010
test I didn't see I barely soon yeah

00:51:19,940 --> 00:51:23,390
it's definitely maturing we're

00:51:22,010 --> 00:51:25,599
decoupling a lot of things that didn't

00:51:23,390 --> 00:51:27,740
need to be part of our product before so

00:51:25,599 --> 00:51:29,210
it's going to be a much more I think is

00:51:27,740 --> 00:51:31,880
your experience for people who are Bosch

00:51:29,210 --> 00:51:39,500
negative and needed kubernetes like

00:51:31,880 --> 00:51:41,990
fairly quickly I think

00:51:39,500 --> 00:51:47,390
a long long time ago dr. Nick made some

00:51:41,990 --> 00:51:50,180
PRS to deployment to simplify I guess

00:51:47,390 --> 00:51:52,070
the the command to deploy our way at a

00:51:50,180 --> 00:51:54,950
point where it's just a single board

00:51:52,070 --> 00:51:58,040
deploy without much configuration or we

00:51:54,950 --> 00:51:58,400
still kind of slowly trending towards

00:51:58,040 --> 00:52:01,340
that

00:51:58,400 --> 00:52:04,340
oh yeah we're definitely at a place

00:52:01,340 --> 00:52:07,040
where the manifest just works so you can

00:52:04,340 --> 00:52:08,840
deploy that there are some kind of most

00:52:07,040 --> 00:52:10,970
people want you know the cloud provider

00:52:08,840 --> 00:52:12,920
integrations so that they can provision

00:52:10,970 --> 00:52:14,930
I as resources within the kubernetes

00:52:12,920 --> 00:52:17,180
cluster so there's a couple obstacles

00:52:14,930 --> 00:52:19,340
for that but yeah we're pretty much at

00:52:17,180 --> 00:52:20,840
that point already in on our Kubo

00:52:19,340 --> 00:52:31,970
release readme page is where you can

00:52:20,840 --> 00:52:33,800
find the documentation for this nope I

00:52:31,970 --> 00:52:35,930
just I remember having a hard time

00:52:33,800 --> 00:52:37,460
deploying it for the first time solving

00:52:35,930 --> 00:52:52,190
like I should be able to do it now

00:52:37,460 --> 00:52:53,960
fairly easily in the manifest yeah we

00:52:52,190 --> 00:52:55,970
actually yeah you're right we do have a

00:52:53,960 --> 00:52:58,160
story for that in our backlog to make it

00:52:55,970 --> 00:53:00,890
so that you don't have to do upload the

00:52:58,160 --> 00:53:02,810
release and because right now we're

00:53:00,890 --> 00:53:05,300
catering towards just so we're doing

00:53:02,810 --> 00:53:06,890
some work in our CI cuz that's easy

00:53:05,300 --> 00:53:08,630
enough for us to do in the manifest but

00:53:06,890 --> 00:53:11,390
like I said a lot of our technical debt

00:53:08,630 --> 00:53:12,860
comes from the kind of weird things that

00:53:11,390 --> 00:53:14,900
we did in CI that make it a little bit

00:53:12,860 --> 00:53:17,450
harder and it's more dev centric I guess

00:53:14,900 --> 00:53:25,940
but yeah we do you have a story election

00:53:17,450 --> 00:53:28,220
this week until there's a CFC I compile

00:53:25,940 --> 00:53:30,110
deployment projects so other all the

00:53:28,220 --> 00:53:33,200
projects that compiled and the manifest

00:53:30,110 --> 00:53:34,820
is works and if anyone wants that at

00:53:33,200 --> 00:53:39,550
some point I can get rid of that project

00:53:34,820 --> 00:53:43,130
when it is operating so hopefully soon

00:53:39,550 --> 00:53:45,680
whoa so in the chat we had a few

00:53:43,130 --> 00:53:49,970
questions which I think Bret answered

00:53:45,680 --> 00:53:52,400
but there is still one for Mike Young he

00:53:49,970 --> 00:53:53,000
mentioned he's any work towards

00:53:52,400 --> 00:53:56,270
integrate

00:53:53,000 --> 00:54:00,020
reading your GF Sierra with other CF

00:53:56,270 --> 00:54:03,110
components like you a and perm or is

00:54:00,020 --> 00:54:07,520
that work considered outside of the CFC

00:54:03,110 --> 00:54:10,400
or scope it's certainly outside the

00:54:07,520 --> 00:54:11,870
scope of our team but it is I know

00:54:10,400 --> 00:54:13,670
something that other teams are working

00:54:11,870 --> 00:54:15,680
on trying to figure out a way that those

00:54:13,670 --> 00:54:17,800
two flat four platforms can coexist and

00:54:15,680 --> 00:54:20,960
kind of you know so you don't need like

00:54:17,800 --> 00:54:22,580
double up on a few of those things so

00:54:20,960 --> 00:54:24,080
it's it's in the works I've seen other

00:54:22,580 --> 00:54:36,560
teams working on it but outside the

00:54:24,080 --> 00:54:40,190
scope course and what about doing the

00:54:36,560 --> 00:54:43,460
question in the chat but co-locating CFC

00:54:40,190 --> 00:54:47,290
R and CF in the same brush where where

00:54:43,460 --> 00:54:47,290
are we about that right now

00:54:49,460 --> 00:54:55,160
I think that was the same question just

00:54:51,770 --> 00:54:56,600
now but yeah outside the scope of our

00:54:55,160 --> 00:54:59,390
team but I know that there is another

00:54:56,600 --> 00:55:01,520
team that is trying to strategically

00:54:59,390 --> 00:55:04,490
figure that out so that it's an easier

00:55:01,520 --> 00:55:06,710
experience to target either one I think

00:55:04,490 --> 00:55:09,590
people are interested in having you know

00:55:06,710 --> 00:55:11,690
your services created by kubernetes but

00:55:09,590 --> 00:55:13,220
maybe your apps and services but your

00:55:11,690 --> 00:55:15,140
apps from Cloud Foundry bind it over to

00:55:13,220 --> 00:55:17,090
services and kubernetes so there are

00:55:15,140 --> 00:55:19,100
teams that are working on that and we're

00:55:17,090 --> 00:55:25,090
just kind of there for for questions on

00:55:19,100 --> 00:55:29,840
just CFC our stuff and I can add that I

00:55:25,090 --> 00:55:32,300
just started we were able to collect ATF

00:55:29,840 --> 00:55:38,090
service here and same boat and Everson

00:55:32,300 --> 00:55:42,190
joked so like Tennessee question of

00:55:38,090 --> 00:55:47,750
security questions but it will dock

00:55:42,190 --> 00:55:51,720
giant with nothing will break just works

00:55:47,750 --> 00:55:53,810
oh okay thank you thank you

00:55:51,720 --> 00:55:56,300
[Music]

00:55:53,810 --> 00:55:58,610
let's see if there's no question I'll

00:55:56,300 --> 00:56:01,640
give a free plug for Raschi she's too

00:55:58,610 --> 00:56:05,780
shy to say but he will be in Basel Art

00:56:01,640 --> 00:56:06,530
Basel and they have a talk I think

00:56:05,780 --> 00:56:10,160
they're gonna go

00:56:06,530 --> 00:56:11,320
to even more details than this and of

00:56:10,160 --> 00:56:14,060
course you can

00:56:11,320 --> 00:56:16,400
you know poke her and ask more question

00:56:14,060 --> 00:56:19,190
technical stuff she's gonna be there and

00:56:16,400 --> 00:56:21,830
I think the whole team too so come to

00:56:19,190 --> 00:56:24,290
battle more reasons to come to vows all

00:56:21,830 --> 00:56:27,010
right I'm trying to get Demetri to come

00:56:24,290 --> 00:56:31,460
also so if you have questions for him

00:56:27,010 --> 00:56:34,610
we'll see what we can do anyways what

00:56:31,460 --> 00:56:36,080
are you doing I know I know and I don't

00:56:34,610 --> 00:56:38,360
know anything I just get people to come

00:56:36,080 --> 00:56:42,670
to battle all right take care everybody

00:56:38,360 --> 00:56:42,670
that's great like okay what's he doing

00:56:43,840 --> 00:56:52,280
he native that's one thing but you can

00:56:48,200 --> 00:56:58,270
talk okay he's still there hey DK what

00:56:52,280 --> 00:57:01,420
are you doing oh just random things

00:56:58,270 --> 00:57:04,730
mostly mostly kubernetes the oriented

00:57:01,420 --> 00:57:07,130
yeah mostly also providing a lot of

00:57:04,730 --> 00:57:12,830
jokes to her why she was sitting next to

00:57:07,130 --> 00:57:18,290
me I think the most recently Max and I

00:57:12,830 --> 00:57:21,500
have been pairing on key native cui but

00:57:18,290 --> 00:57:29,330
there's a few other kubernetes tooling

00:57:21,500 --> 00:57:32,270
that have been cooking all this stuff

00:57:29,330 --> 00:57:35,090
integrated with CF I only spent a couple

00:57:32,270 --> 00:57:37,460
days fairing with them so I'm keeping up

00:57:35,090 --> 00:57:40,520
anyway all right everybody see you in

00:57:37,460 --> 00:57:43,660
Basel Switzerland it'll be fun

00:57:40,520 --> 00:57:43,660

YouTube URL: https://www.youtube.com/watch?v=BOgNyDj0OQU


