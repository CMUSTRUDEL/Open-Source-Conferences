Title: Sam Ramji and Alex Williams
Publication date: 2016-03-18
Playlist: Cloud Foundry CEO, Sam Ramji
Description: 
	More at http://thenewstack.io/how-simple-consistent-apis-will-free-us/
Captions: 
	00:00:04,820 --> 00:00:11,310
so Alex flames hear the news guy here

00:00:08,040 --> 00:00:13,430
was damn Ramsey old friend good to see

00:00:11,310 --> 00:00:16,589
you Sam good to see you out yeah and so

00:00:13,430 --> 00:00:19,140
this is the interesting trip for me I

00:00:16,589 --> 00:00:21,239
was talking with John edgar of digital

00:00:19,140 --> 00:00:22,349
ocean and in the meantime I've been

00:00:21,239 --> 00:00:23,939
working on this story about

00:00:22,349 --> 00:00:26,220
orchestration frameworks and I've been

00:00:23,939 --> 00:00:27,480
talking to inhale about kind of the

00:00:26,220 --> 00:00:29,039
changes that they're making in the

00:00:27,480 --> 00:00:31,579
processor and how they're using

00:00:29,039 --> 00:00:36,030
rest-based API is now with this new

00:00:31,579 --> 00:00:38,250
project they call redfish and then we

00:00:36,030 --> 00:00:41,100
have the apple news this week right with

00:00:38,250 --> 00:00:43,879
them talking about you know this giant

00:00:41,100 --> 00:00:46,980
phone that they borrow from Samsung and

00:00:43,879 --> 00:00:47,850
and now we have your conference here I

00:00:46,980 --> 00:00:49,769
thought they were just following the

00:00:47,850 --> 00:00:51,390
aging Apple demographic right so now I

00:00:49,769 --> 00:00:53,999
have a phone I can use it on my glasses

00:00:51,390 --> 00:00:56,519
so true odd to tell you about these two

00:00:53,999 --> 00:00:58,499
kids I interviewed last night an 18 year

00:00:56,519 --> 00:01:00,149
old and a 15 year old who moved to San

00:00:58,499 --> 00:01:02,940
Francisco and are living here by

00:01:00,149 --> 00:01:05,370
themselves what's the world coming to

00:01:02,940 --> 00:01:08,310
dogs and cats dogs and the world as we

00:01:05,370 --> 00:01:09,720
know it so any case so so then I had

00:01:08,310 --> 00:01:12,930
this conversation with john edgar and

00:01:09,720 --> 00:01:18,240
then the conversation was about cloud

00:01:12,930 --> 00:01:22,260
web and mobile right and you know and

00:01:18,240 --> 00:01:25,230
you could see if it argue apples got it

00:01:22,260 --> 00:01:26,640
nailed right you know you know like kids

00:01:25,230 --> 00:01:29,820
like this is i interviewed last night

00:01:26,640 --> 00:01:32,190
it's like they're not using the apple

00:01:29,820 --> 00:01:34,380
mobile platform because oh they just

00:01:32,190 --> 00:01:35,670
want to use apple you know they're just

00:01:34,380 --> 00:01:37,170
trying to find tools that work for them

00:01:35,670 --> 00:01:38,820
to get what they want done they like oh

00:01:37,170 --> 00:01:40,500
it's a great idea they're like sitting

00:01:38,820 --> 00:01:42,540
there alone o'clock at night eating

00:01:40,500 --> 00:01:44,550
Cheetos and like you know plugging away

00:01:42,540 --> 00:01:47,040
make it easy and connect it to a

00:01:44,550 --> 00:01:48,920
marketplace right so just all of the

00:01:47,040 --> 00:01:51,750
impedances removed because you've got

00:01:48,920 --> 00:01:54,300
cloudkit right you've got iOS you've got

00:01:51,750 --> 00:01:56,310
the we've got the swift language you've

00:01:54,300 --> 00:01:57,720
got Xcode and all that stuff kind of

00:01:56,310 --> 00:02:00,060
leads you into oh and there's something

00:01:57,720 --> 00:02:02,850
we can sell so it's very smooth glide

00:02:00,060 --> 00:02:05,190
path yeah so then you can see get it is

00:02:02,850 --> 00:02:07,290
very smooth flight path and there's you

00:02:05,190 --> 00:02:08,610
now is Swift as we 12 times we've talked

00:02:07,290 --> 00:02:12,110
about it's like opening up the

00:02:08,610 --> 00:02:14,480
floodgates right but there is this one

00:02:12,110 --> 00:02:17,090
I'm starting to for that I'm sorry to

00:02:14,480 --> 00:02:21,530
see like this one weakness that Apple

00:02:17,090 --> 00:02:24,620
has that Google really can thrive upon

00:02:21,530 --> 00:02:26,930
and actually app developers can thrive

00:02:24,620 --> 00:02:30,110
upon and that's the ability to build

00:02:26,930 --> 00:02:31,580
these adaptive apps mm-hmm right yep you

00:02:30,110 --> 00:02:33,410
know Google's historically had the

00:02:31,580 --> 00:02:34,310
advantage here as has microsoft because

00:02:33,410 --> 00:02:36,380
they've had the infrastructure behind

00:02:34,310 --> 00:02:40,160
them right to be able to do these

00:02:36,380 --> 00:02:43,340
complicated you know processes for you

00:02:40,160 --> 00:02:46,910
know matching up you know event data

00:02:43,340 --> 00:02:48,740
right you know with different behavior

00:02:46,910 --> 00:02:51,500
patterns whatever do to understand you

00:02:48,740 --> 00:02:53,510
predict okay I'm it's going to take me

00:02:51,500 --> 00:02:55,610
45 minutes to walk three blocks because

00:02:53,510 --> 00:02:57,320
suddenly like you know there's this huge

00:02:55,610 --> 00:02:59,300
produce whatever you know you know the

00:02:57,320 --> 00:03:02,480
table to do actually and yeah they're

00:02:59,300 --> 00:03:04,850
very good at consuming large streams of

00:03:02,480 --> 00:03:06,530
dynamic data and then running different

00:03:04,850 --> 00:03:07,610
dimensions of queries against it and

00:03:06,530 --> 00:03:09,500
turning that into something that's

00:03:07,610 --> 00:03:11,270
useful information right like the

00:03:09,500 --> 00:03:13,130
traffic stuff is required from ways or

00:03:11,270 --> 00:03:17,510
you know like other event processing

00:03:13,130 --> 00:03:19,940
streams right right and so what where is

00:03:17,510 --> 00:03:21,560
that where you know do you thinking I

00:03:19,940 --> 00:03:24,590
don't want to get into like who's gonna

00:03:21,560 --> 00:03:27,080
win who's not but I'm curious seeing the

00:03:24,590 --> 00:03:29,209
patterns of behavior that you're

00:03:27,080 --> 00:03:31,100
starting to see and the customers that

00:03:29,209 --> 00:03:33,980
you talked about and how they're

00:03:31,100 --> 00:03:36,110
thinking about predictive apps and using

00:03:33,980 --> 00:03:39,320
this you know the new passive

00:03:36,110 --> 00:03:41,600
capabilities that go with them with the

00:03:39,320 --> 00:03:43,459
trust and the Machine zones yeah i think

00:03:41,600 --> 00:03:45,890
it's the trust in the machine to be

00:03:43,459 --> 00:03:48,080
intelligent right by degree way back in

00:03:45,890 --> 00:03:49,310
the way in the end the day was front was

00:03:48,080 --> 00:03:51,110
in artificial intelligence and

00:03:49,310 --> 00:03:53,030
neuroscience but we couldn't say

00:03:51,110 --> 00:03:54,799
artificial intelligence in the 90s

00:03:53,030 --> 00:03:57,200
because it was over-promised and

00:03:54,799 --> 00:03:59,330
under-delivered that became search now

00:03:57,200 --> 00:04:01,160
it's big data now it's machine learning

00:03:59,330 --> 00:04:02,360
and now it's augmented intelligence so

00:04:01,160 --> 00:04:07,010
there's a lot more trust in the machines

00:04:02,360 --> 00:04:09,170
i I tended to participate in a work

00:04:07,010 --> 00:04:11,570
group on the industrial internet for the

00:04:09,170 --> 00:04:13,020
world economic forum recently a lot of

00:04:11,570 --> 00:04:15,060
smart people there

00:04:13,020 --> 00:04:18,300
head of IOT from Cisco out of my OT from

00:04:15,060 --> 00:04:19,860
Intel same thing for GE Tim O'Reilly

00:04:18,300 --> 00:04:21,330
bunch of smart folks one thing that came

00:04:19,860 --> 00:04:23,610
out and that was the frame of reference

00:04:21,330 --> 00:04:25,920
of digital labor right this idea that

00:04:23,610 --> 00:04:28,410
things from like the Baxter robot to

00:04:25,920 --> 00:04:29,880
better algorithms are going to replace a

00:04:28,410 --> 00:04:32,220
lot of human labor so we're already

00:04:29,880 --> 00:04:34,980
trusting intelligent machines to write

00:04:32,220 --> 00:04:38,340
reports that go into Bloomberg another

00:04:34,980 --> 00:04:40,050
based on company's earnings so you push

00:04:38,340 --> 00:04:42,990
out the earnings in XML file Rio

00:04:40,050 --> 00:04:45,240
standard sec file a robot reads it and

00:04:42,990 --> 00:04:47,100
writes the article yeah we're already

00:04:45,240 --> 00:04:48,930
trusting that kind of that kind of you

00:04:47,100 --> 00:04:51,630
know intelligent systems and digital

00:04:48,930 --> 00:04:52,950
labor more importantly the challenge for

00:04:51,630 --> 00:04:54,600
Google is that the anime i press

00:04:52,950 --> 00:04:58,680
personally now is like you know as a

00:04:54,600 --> 00:05:00,660
publisher all right yeah I I want that

00:04:58,680 --> 00:05:02,010
yeah yeah I want to have like you know I

00:05:00,660 --> 00:05:04,770
want to be able to take all my podcast

00:05:02,010 --> 00:05:07,080
recordings and send them out to podcast

00:05:04,770 --> 00:05:09,000
Pete you know out in the data world

00:05:07,080 --> 00:05:11,340
wherever it is and put it back together

00:05:09,000 --> 00:05:12,480
as really nice show notes yeah it shot

00:05:11,340 --> 00:05:13,740
to be able to do that and then it should

00:05:12,480 --> 00:05:15,660
also be able to sort of fix some of the

00:05:13,740 --> 00:05:16,890
grammar and you know that because our

00:05:15,660 --> 00:05:18,300
spoke agreement or written grammar is

00:05:16,890 --> 00:05:20,700
very different so all those things

00:05:18,300 --> 00:05:21,960
should happen Google's challenge so they

00:05:20,700 --> 00:05:23,610
certainly have an advantage over apple

00:05:21,960 --> 00:05:25,920
because they're cross-platform so our

00:05:23,610 --> 00:05:28,410
enterprise customers yeah they love they

00:05:25,920 --> 00:05:30,210
love Macintosh they love iOS but they're

00:05:28,410 --> 00:05:32,910
surrounded with androids they've got

00:05:30,210 --> 00:05:35,010
windows devices whether it's a phone or

00:05:32,910 --> 00:05:37,230
a tablet it's a highly multi-device

00:05:35,010 --> 00:05:38,550
world and their hardware right there

00:05:37,230 --> 00:05:39,960
wearables all those things aren't just

00:05:38,550 --> 00:05:41,220
going to be from Apple their kiosks

00:05:39,960 --> 00:05:42,810
aren't just going to be trampled so

00:05:41,220 --> 00:05:45,360
Apple has a real strength and consumer

00:05:42,810 --> 00:05:47,400
because they're so clear on delivering

00:05:45,360 --> 00:05:48,690
great hardware that you want to buy but

00:05:47,400 --> 00:05:50,910
then on the other hand they don't cover

00:05:48,690 --> 00:05:52,500
everything and cloudkit isn't across

00:05:50,910 --> 00:05:54,480
platform health kits not about being

00:05:52,500 --> 00:05:57,120
cross platform in order to get all the

00:05:54,480 --> 00:05:59,250
analytical input streams to be really

00:05:57,120 --> 00:06:01,440
intelligent you need to be able to have

00:05:59,250 --> 00:06:02,700
a cross-platform stance a Google kind of

00:06:01,440 --> 00:06:04,440
has that right you don't really think

00:06:02,700 --> 00:06:05,700
about what platform is google on there's

00:06:04,440 --> 00:06:07,500
some you know there's some affinity to

00:06:05,700 --> 00:06:08,970
android but it's really started as a

00:06:07,500 --> 00:06:10,110
cloud service so you think you know i'm

00:06:08,970 --> 00:06:12,600
going to fund all I stopped to Google

00:06:10,110 --> 00:06:14,550
but they have a big privacy yeah right

00:06:12,600 --> 00:06:16,080
nobody trusts Google everybody knows

00:06:14,550 --> 00:06:18,030
that whatever data you do give them

00:06:16,080 --> 00:06:19,440
ultimately they will find a way to

00:06:18,030 --> 00:06:20,120
monetize the data you gave them

00:06:19,440 --> 00:06:22,220
regardless

00:06:20,120 --> 00:06:24,710
what you want to do with it so we're

00:06:22,220 --> 00:06:26,600
seeing a lot of customers and prospects

00:06:24,710 --> 00:06:28,430
who are thinking I need adaptive apps

00:06:26,600 --> 00:06:30,830
they go well I'm kind of highly

00:06:28,430 --> 00:06:32,330
regulated I've got maybe some HIPAA

00:06:30,830 --> 00:06:34,130
issues or I've got my own regulatory

00:06:32,330 --> 00:06:36,169
issues within you know financial

00:06:34,130 --> 00:06:38,090
services or whatever telecommunications

00:06:36,169 --> 00:06:39,860
has its own regulations what can I

00:06:38,090 --> 00:06:41,389
actually do with this well I better hang

00:06:39,860 --> 00:06:43,370
on to this while I can continue to audit

00:06:41,389 --> 00:06:45,530
the usage so I want my adaptive

00:06:43,370 --> 00:06:47,030
infrastructure to be on premises or very

00:06:45,530 --> 00:06:49,070
much within my control maybe within my

00:06:47,030 --> 00:06:51,050
cloud and not another cloud provider

00:06:49,070 --> 00:06:53,419
that may change over the next two three

00:06:51,050 --> 00:06:55,070
four years right if google or another

00:06:53,419 --> 00:06:57,830
provider like that like microsoft's gets

00:06:55,070 --> 00:06:59,810
so capable and anybody building on their

00:06:57,830 --> 00:07:01,280
platform is so much better because maybe

00:06:59,810 --> 00:07:03,260
they doing industry benchmarking rather

00:07:01,280 --> 00:07:05,240
commingling data in a safe way and it's

00:07:03,260 --> 00:07:06,889
proven at the d risk then you might

00:07:05,240 --> 00:07:09,590
start to see those kinds of things

00:07:06,889 --> 00:07:11,240
happen there right now for global 2000s

00:07:09,590 --> 00:07:12,770
there they're more worried about

00:07:11,240 --> 00:07:14,750
regulators in general than they are

00:07:12,770 --> 00:07:16,639
about the capabilities of a particular

00:07:14,750 --> 00:07:18,080
piece of cloud infrastructure yeah they

00:07:16,639 --> 00:07:19,610
want the adaptive capability but they've

00:07:18,080 --> 00:07:20,930
got to be able to trust it so there's

00:07:19,610 --> 00:07:22,430
still a trust gap for for the big

00:07:20,930 --> 00:07:25,760
providers is the predictive intelligence

00:07:22,430 --> 00:07:28,660
and the adaptability capable of like

00:07:25,760 --> 00:07:32,090
taking an account those policies and

00:07:28,660 --> 00:07:33,110
compliance issues it has to it has to if

00:07:32,090 --> 00:07:36,710
you're going to deliver that stuff to

00:07:33,110 --> 00:07:39,110
global 2000s so you know a lot of other

00:07:36,710 --> 00:07:41,599
things are being built on Amazon but

00:07:39,110 --> 00:07:43,130
it's not all just being built on a mr so

00:07:41,599 --> 00:07:44,900
ask yourself why is there so much

00:07:43,130 --> 00:07:46,760
cloudera why is there so much

00:07:44,900 --> 00:07:49,220
hortonworks why is it so much pivotal HD

00:07:46,760 --> 00:07:50,870
being pulled in right people want to

00:07:49,220 --> 00:07:53,539
work on data in their own environments

00:07:50,870 --> 00:07:55,520
not because it's cheaper for them in the

00:07:53,539 --> 00:07:58,729
small right it's certainly much cheaper

00:07:55,520 --> 00:08:00,349
to use Amazon EMR but it's much more

00:07:58,729 --> 00:08:02,180
manageable controllable they believe it

00:08:00,349 --> 00:08:03,590
they can experiment take risks and they

00:08:02,180 --> 00:08:05,570
don't feel that they're laying all the

00:08:03,590 --> 00:08:07,130
data out of the bar because data and the

00:08:05,570 --> 00:08:09,169
value data is so little understood

00:08:07,130 --> 00:08:11,750
there's a sense there's more here right

00:08:09,169 --> 00:08:14,120
for any given company so do we want to

00:08:11,750 --> 00:08:17,240
give it to Google who obviously

00:08:14,120 --> 00:08:18,800
understands how to monetize data right

00:08:17,240 --> 00:08:20,690
in exchange for a little bit of

00:08:18,800 --> 00:08:22,729
capability knowing that it might become

00:08:20,690 --> 00:08:24,500
much much more valuable for they might

00:08:22,729 --> 00:08:26,810
use it to compete with with us in fact

00:08:24,500 --> 00:08:29,300
one of the funny things is when we talk

00:08:26,810 --> 00:08:31,520
with global scale retailers global scale

00:08:29,300 --> 00:08:32,570
telecommunications companies one of the

00:08:31,520 --> 00:08:32,900
few things that all of them have in

00:08:32,570 --> 00:08:34,160
common

00:08:32,900 --> 00:08:36,800
is when they say well who's our

00:08:34,160 --> 00:08:39,130
competition they go back to Google and

00:08:36,800 --> 00:08:41,210
Apple as being their top competitors

00:08:39,130 --> 00:08:42,590
really it's quite interesting way

00:08:41,210 --> 00:08:44,030
because it's an asymmetric form of

00:08:42,590 --> 00:08:45,740
competition you wouldn't have thought oh

00:08:44,030 --> 00:08:47,660
what's a TEENs he's number one

00:08:45,740 --> 00:08:49,850
competitor Google what's their number

00:08:47,660 --> 00:08:51,920
two competitor Apple reverse the order

00:08:49,850 --> 00:08:54,290
right because there's this ability to

00:08:51,920 --> 00:08:57,200
invert control and platform ecosystems

00:08:54,290 --> 00:08:59,570
ha ok so in terms of the carriers it's

00:08:57,200 --> 00:09:06,050
an interesting topic so the carrier's

00:08:59,570 --> 00:09:08,210
now have at their hands much more

00:09:06,050 --> 00:09:10,960
powerful chips like the zia the new

00:09:08,210 --> 00:09:15,200
Intel Xeon ship they just came out right

00:09:10,960 --> 00:09:17,660
and the software is catching up to the

00:09:15,200 --> 00:09:20,480
chips right so we have that better

00:09:17,660 --> 00:09:23,060
software-defined networking sure we have

00:09:20,480 --> 00:09:25,240
better software to find infrastructure

00:09:23,060 --> 00:09:28,880
and now we have the admin of api's

00:09:25,240 --> 00:09:32,810
inside infrastructure what does that do

00:09:28,880 --> 00:09:35,180
for AT&T so that that will do for ATT

00:09:32,810 --> 00:09:37,160
for all the other telcos that are as as

00:09:35,180 --> 00:09:39,710
aggressive and visionaries AT&T some

00:09:37,160 --> 00:09:43,540
amazing stuff in changing the pattern of

00:09:39,710 --> 00:09:46,160
the application so so think about this

00:09:43,540 --> 00:09:49,120
just a company like Vodafone if you add

00:09:46,160 --> 00:09:51,860
up all of their physical networking gear

00:09:49,120 --> 00:09:54,500
they have about probably sixty seventy

00:09:51,860 --> 00:09:56,870
percent of the total compute capacity of

00:09:54,500 --> 00:09:59,750
all of Amazon and that's just to just to

00:09:56,870 --> 00:10:01,400
run the wireless network mm-hmm so that

00:09:59,750 --> 00:10:03,500
networking gear is getting virtualized

00:10:01,400 --> 00:10:05,120
so if you think the concept of NFV

00:10:03,500 --> 00:10:06,050
network function virtualization right

00:10:05,120 --> 00:10:07,580
it's sort of the salt in the same

00:10:06,050 --> 00:10:10,310
problem we've got old hardware it

00:10:07,580 --> 00:10:12,500
doesn't move it doesn't change Oh what

00:10:10,310 --> 00:10:13,790
if we start upgrading at hardware and

00:10:12,500 --> 00:10:16,220
making a virtualized so we can upgrade

00:10:13,790 --> 00:10:17,690
software across the network well that's

00:10:16,220 --> 00:10:19,880
interesting now that you start looking

00:10:17,690 --> 00:10:21,410
at applications like Facebook where the

00:10:19,880 --> 00:10:23,510
most important thing about Facebook is

00:10:21,410 --> 00:10:25,520
that you get a very fast response and

00:10:23,510 --> 00:10:27,680
that the more you use it the faster

00:10:25,520 --> 00:10:28,670
pneus right because the the power users

00:10:27,680 --> 00:10:30,350
are the ones who are going to drive the

00:10:28,670 --> 00:10:31,730
most revenue for facebook they're going

00:10:30,350 --> 00:10:32,780
to draw the most other people and more

00:10:31,730 --> 00:10:34,280
people are going to look at their posts

00:10:32,780 --> 00:10:35,750
right so the actual structure of the

00:10:34,280 --> 00:10:38,270
application needs to go from being

00:10:35,750 --> 00:10:41,570
something that's massively home in one

00:10:38,270 --> 00:10:43,430
data center and then reached out

00:10:41,570 --> 00:10:45,560
us the world through these you know

00:10:43,430 --> 00:10:49,250
relatively long pipes that you get from

00:10:45,560 --> 00:10:50,840
AT&T and others the actual core facebook

00:10:49,250 --> 00:10:52,040
application I don't mean the Apple on

00:10:50,840 --> 00:10:54,170
the phone I mean the application running

00:10:52,040 --> 00:10:56,450
a facebook data center and others like

00:10:54,170 --> 00:10:59,930
it actually need to break up so that you

00:10:56,450 --> 00:11:01,580
can push out parts of processing towards

00:10:59,930 --> 00:11:05,570
the edge of the AT&T network so you

00:11:01,580 --> 00:11:08,780
start singing compute move with network

00:11:05,570 --> 00:11:11,660
affinity and then being because the the

00:11:08,780 --> 00:11:13,550
tower knows where you are you can do

00:11:11,660 --> 00:11:15,110
smart things about identity you can do

00:11:13,550 --> 00:11:16,670
things about having the data follow the

00:11:15,110 --> 00:11:19,160
user so it's always very close to that

00:11:16,670 --> 00:11:20,540
user what we'll start to see over the

00:11:19,160 --> 00:11:22,730
next couple of years and you could talk

00:11:20,540 --> 00:11:25,970
with people from AT&T people from

00:11:22,730 --> 00:11:28,310
Equinix people from from Vodafone who

00:11:25,970 --> 00:11:30,020
are starting to adapt their networks the

00:11:28,310 --> 00:11:32,300
future there will be a lot of cloud

00:11:30,020 --> 00:11:33,890
computing activity inside large carriers

00:11:32,300 --> 00:11:36,200
because as we look for that next level

00:11:33,890 --> 00:11:37,940
of optimization will want to you move

00:11:36,200 --> 00:11:39,590
compute into the network and that

00:11:37,940 --> 00:11:41,960
network is going to be one that's that's

00:11:39,590 --> 00:11:45,290
owned by a global global telecoms

00:11:41,960 --> 00:11:47,240
operator hmmmm it's interesting to think

00:11:45,290 --> 00:11:50,510
about because i mean i'm moderating this

00:11:47,240 --> 00:11:55,250
panel tomorrow at an IDF and the

00:11:50,510 --> 00:11:57,260
discussions about red fish and the one

00:11:55,250 --> 00:11:59,930
of the interesting things to me is to

00:11:57,260 --> 00:12:04,130
think about the historical context for

00:11:59,930 --> 00:12:07,070
AP is and how they emerged and how that

00:12:04,130 --> 00:12:10,390
impacted the software world right and so

00:12:07,070 --> 00:12:14,720
we saw you know Twitter emerge we saw

00:12:10,390 --> 00:12:17,840
just just developers just finding a new

00:12:14,720 --> 00:12:19,730
way to use you know to use the

00:12:17,840 --> 00:12:21,530
technology that then add them really

00:12:19,730 --> 00:12:23,270
that the capability to before I mean

00:12:21,530 --> 00:12:26,000
they could do before but it was time

00:12:23,270 --> 00:12:28,250
consuming it was arduous and now the

00:12:26,000 --> 00:12:29,750
rest of the guys you know it that

00:12:28,250 --> 00:12:32,750
changed a lot do you think the rest of

00:12:29,750 --> 00:12:35,120
you guys will have a change on how you

00:12:32,750 --> 00:12:37,700
know in the topology of the developer

00:12:35,120 --> 00:12:39,920
community in the hardware infrastructure

00:12:37,700 --> 00:12:41,870
space for sure so we're already starting

00:12:39,920 --> 00:12:43,820
to see right this industrial Internet

00:12:41,870 --> 00:12:45,860
right and each individual device is

00:12:43,820 --> 00:12:46,760
going to have the right protocol right

00:12:45,860 --> 00:12:49,100
it's going to use something that's

00:12:46,760 --> 00:12:50,780
appropriate to it maybe zigbee maybe

00:12:49,100 --> 00:12:51,320
bluetooth low energy right you're not

00:12:50,780 --> 00:12:52,940
going to have

00:12:51,320 --> 00:12:55,190
p I on that if you have a low power

00:12:52,940 --> 00:12:57,770
sensor you know if you have a very low

00:12:55,190 --> 00:12:58,760
level actuator but the topology was

00:12:57,770 --> 00:13:02,600
starting to see is you've got these

00:12:58,760 --> 00:13:04,490
these low-level edge of the you know

00:13:02,600 --> 00:13:05,870
edge of the network devices that are

00:13:04,490 --> 00:13:07,970
communicating only on a local network

00:13:05,870 --> 00:13:09,740
and they're talking over you know

00:13:07,970 --> 00:13:13,100
customer proprietary protocols you know

00:13:09,740 --> 00:13:14,510
this is where like MQTT may play right

00:13:13,100 --> 00:13:15,890
it's sort of unsecured and maybe you

00:13:14,510 --> 00:13:17,570
trust it in that particular physical

00:13:15,890 --> 00:13:20,060
environment but then you need a

00:13:17,570 --> 00:13:22,010
controller you need control for almost

00:13:20,060 --> 00:13:23,690
devices to be able to say okay they're

00:13:22,010 --> 00:13:25,940
coordinating we're going to talk to

00:13:23,690 --> 00:13:28,790
those from across the world right maybe

00:13:25,940 --> 00:13:30,110
I have to move a robot arm remote lake

00:13:28,790 --> 00:13:32,030
from a thousand miles away how am I

00:13:30,110 --> 00:13:33,530
going to do that I need a controller I

00:13:32,030 --> 00:13:35,300
need a control plane I need to get all

00:13:33,530 --> 00:13:37,550
the way in that control plan is turning

00:13:35,300 --> 00:13:38,780
out to be api's so if you look at you

00:13:37,550 --> 00:13:40,820
know something as simple as Raspberry Pi

00:13:38,780 --> 00:13:43,100
right right you put you put something

00:13:40,820 --> 00:13:45,530
like Zetas on that yeah said about Jay

00:13:43,100 --> 00:13:48,050
S&O project which gives you an API

00:13:45,530 --> 00:13:51,320
interface an HTTP restful api interface

00:13:48,050 --> 00:13:54,110
yeah to be able to talk to this wildly

00:13:51,320 --> 00:13:56,000
varying set of highly complex very

00:13:54,110 --> 00:13:58,130
specific protocols very small machines

00:13:56,000 --> 00:14:01,220
and in some case not even machines just

00:13:58,130 --> 00:14:03,500
sensors and cause them to collaborate in

00:14:01,220 --> 00:14:04,490
this much bigger way right so we're

00:14:03,500 --> 00:14:07,730
starting to see the hardware ecosystem

00:14:04,490 --> 00:14:09,080
change based on the availability of way

00:14:07,730 --> 00:14:12,560
more developers now if you know

00:14:09,080 --> 00:14:14,150
JavaScript you can program IOT right you

00:14:12,560 --> 00:14:15,560
don't have to be an Arduino developer

00:14:14,150 --> 00:14:17,630
because that that stuff's our demon

00:14:15,560 --> 00:14:19,010
built so it's really leverage for the

00:14:17,630 --> 00:14:21,250
people who understand hardware deeply

00:14:19,010 --> 00:14:23,540
and there's a lot more innovative

00:14:21,250 --> 00:14:25,490
experimentation a lot more new stuff

00:14:23,540 --> 00:14:28,160
being built out by talking to those

00:14:25,490 --> 00:14:29,960
devices as if they were we're operable

00:14:28,160 --> 00:14:32,360
by a REST API because without local

00:14:29,960 --> 00:14:35,180
brain again some like Zetas running on a

00:14:32,360 --> 00:14:37,250
raspberry pi controller that's Wi-Fi

00:14:35,180 --> 00:14:39,320
enabled that's got an IP backbone that

00:14:37,250 --> 00:14:40,490
is talking to that's translating for

00:14:39,320 --> 00:14:43,490
everything locally and so there's this

00:14:40,490 --> 00:14:45,110
hum of local activity this longer loop

00:14:43,490 --> 00:14:47,540
control backup to the cloud and then

00:14:45,110 --> 00:14:49,880
maybe back to a phone or some other

00:14:47,540 --> 00:14:52,130
controlling surface what do you call so

00:14:49,880 --> 00:14:53,350
so basically wanted to think about like

00:14:52,130 --> 00:14:54,790
the actual texture

00:14:53,350 --> 00:14:57,220
of an application and what is the

00:14:54,790 --> 00:14:59,080
texture of an application about if you

00:14:57,220 --> 00:15:02,530
think about it in that context I mean

00:14:59,080 --> 00:15:05,050
it's almost like paint on a surface

00:15:02,530 --> 00:15:07,540
right it's like almost like the sensors

00:15:05,050 --> 00:15:10,570
are being painted it's over the service

00:15:07,540 --> 00:15:12,220
itself for sure what do you call that so

00:15:10,570 --> 00:15:14,770
Brian Malloy has been doing a lot of

00:15:12,220 --> 00:15:16,780
work on this he he's the one who's left

00:15:14,770 --> 00:15:20,680
team to build zetas he he is playing

00:15:16,780 --> 00:15:22,300
around with the term big apps some

00:15:20,680 --> 00:15:23,950
people talking about fog computing which

00:15:22,300 --> 00:15:25,870
is which is maybe fine describe the sort

00:15:23,950 --> 00:15:27,970
of the low level I call the activity

00:15:25,870 --> 00:15:29,830
right I guess I guess I wouldn't call it

00:15:27,970 --> 00:15:31,720
peanut butter but our maybe something a

00:15:29,830 --> 00:15:34,390
bit thinner well when there's a british

00:15:31,720 --> 00:15:36,310
expression of you know not enough better

00:15:34,390 --> 00:15:37,240
spread over too much bread and i think

00:15:36,310 --> 00:15:39,100
it's kind of what he means when he says

00:15:37,240 --> 00:15:41,560
big apps right it's been scraped across

00:15:39,100 --> 00:15:43,120
all of the available services to do the

00:15:41,560 --> 00:15:44,590
right for the right reasons yeah because

00:15:43,120 --> 00:15:46,060
you need a little bit here and a little

00:15:44,590 --> 00:15:47,680
bit there and a little bit there a

00:15:46,060 --> 00:15:52,270
little bit there right so to go from

00:15:47,680 --> 00:15:55,120
control to censor to control actuator

00:15:52,270 --> 00:15:56,110
and this is where the telecommunication

00:15:55,120 --> 00:15:57,850
companies are going to have to try to

00:15:56,110 --> 00:15:59,140
figure out what their stances are they

00:15:57,850 --> 00:16:00,460
do are they going to win or if the cable

00:15:59,140 --> 00:16:02,470
operator going to win because there's a

00:16:00,460 --> 00:16:05,830
bridge moment where you where you go

00:16:02,470 --> 00:16:07,780
from local IOT into an IP network and

00:16:05,830 --> 00:16:09,220
the big question is who's going to win

00:16:07,780 --> 00:16:12,340
that right there's an opportunity for

00:16:09,220 --> 00:16:14,620
small cells to be that bridge right

00:16:12,340 --> 00:16:16,300
where they can do you know they can

00:16:14,620 --> 00:16:19,240
combine a wireless spectrum and Wi-Fi

00:16:16,300 --> 00:16:21,700
and just get them get those signals back

00:16:19,240 --> 00:16:24,370
into an IT backbone or is it going to be

00:16:21,700 --> 00:16:26,350
just Wi-Fi boxes connected to comcast or

00:16:24,370 --> 00:16:28,390
something like that but ultimately that

00:16:26,350 --> 00:16:30,820
data is got to get in that's all that's

00:16:28,390 --> 00:16:32,770
another area where operators going to be

00:16:30,820 --> 00:16:34,360
able to do something interesting and

00:16:32,770 --> 00:16:35,890
what's happening with the compute what's

00:16:34,360 --> 00:16:37,690
happened with the networking right as

00:16:35,890 --> 00:16:40,000
they as they push on things like nfe so

00:16:37,690 --> 00:16:41,680
now we're seeing kind of the the

00:16:40,000 --> 00:16:42,499
proliferation of data centers all over

00:16:41,680 --> 00:16:44,899
the world

00:16:42,499 --> 00:16:49,579
yep which allows you to do things like

00:16:44,899 --> 00:16:51,079
have like a virtual network instead of

00:16:49,579 --> 00:16:54,229
having to put boxes in the background

00:16:51,079 --> 00:16:55,849
yes it allows you to do right you can do

00:16:54,229 --> 00:16:58,339
compute distribution to the edge of the

00:16:55,849 --> 00:17:00,409
network right so so our chief architect

00:16:58,339 --> 00:17:02,839
Michelle Burge a I used to be the chief

00:17:00,409 --> 00:17:05,419
architect at vodafone now chief

00:17:02,839 --> 00:17:07,459
architect for telecom an apogee super

00:17:05,419 --> 00:17:09,079
smart guy I'm learning a lot from him he

00:17:07,459 --> 00:17:11,899
he pointed he asked a pointed question

00:17:09,079 --> 00:17:15,769
which I'll ask you with just why did

00:17:11,899 --> 00:17:18,740
Google get into fights why they get him

00:17:15,769 --> 00:17:21,319
fast yeah why they get a finals I don't

00:17:18,740 --> 00:17:24,289
know portability his point was that the

00:17:21,319 --> 00:17:27,019
fios head end is actually a fully

00:17:24,289 --> 00:17:28,879
generalized compute device and you put

00:17:27,019 --> 00:17:31,519
it into the neighborhood so that last

00:17:28,879 --> 00:17:33,769
mile of fios is actually a server it's

00:17:31,519 --> 00:17:35,539
actually a it's like a Google container

00:17:33,769 --> 00:17:36,830
so it makes sense for them to get that

00:17:35,539 --> 00:17:38,330
there because they can actually do much

00:17:36,830 --> 00:17:39,970
richer analytics each one of those boxes

00:17:38,330 --> 00:17:42,320
are going to serve about 400 customers

00:17:39,970 --> 00:17:43,909
they can do very very intelligent

00:17:42,320 --> 00:17:46,909
network analytics and they can actually

00:17:43,909 --> 00:17:48,740
push a lot more data out reliably to get

00:17:46,909 --> 00:17:50,869
to like one millisecond responses from

00:17:48,740 --> 00:17:52,879
the house to that local head end server

00:17:50,869 --> 00:17:54,409
four of her files if you can push Google

00:17:52,879 --> 00:17:55,730
content down there if you can do better

00:17:54,409 --> 00:17:58,850
analytics they know how to monetize that

00:17:55,730 --> 00:18:00,830
so that's kind of a pointer to this new

00:17:58,850 --> 00:18:02,450
generation of peanut buttered computing

00:18:00,830 --> 00:18:04,429
where you're literally looking at things

00:18:02,450 --> 00:18:07,129
like docker containers and other forms

00:18:04,429 --> 00:18:11,029
of ability to take excute a big it works

00:18:07,129 --> 00:18:12,830
its porky ex actly we should call it for

00:18:11,029 --> 00:18:15,679
soda get yourself a can of pork soda

00:18:12,830 --> 00:18:17,929
accelerate everywhere but it's

00:18:15,679 --> 00:18:20,119
interesting right and as we think we're

00:18:17,929 --> 00:18:21,500
in a really strange moment in in IT

00:18:20,119 --> 00:18:23,539
history where we're starting to spread

00:18:21,500 --> 00:18:25,549
that that compute and network lunaire

00:18:23,539 --> 00:18:30,039
way farther than we had ever imagined

00:18:25,549 --> 00:18:33,230
but on the other hand you're seeing

00:18:30,039 --> 00:18:38,000
you're seeing Apple build like then

00:18:33,230 --> 00:18:39,440
they've built a new CDN right and you

00:18:38,000 --> 00:18:41,389
know and I was talking to people who

00:18:39,440 --> 00:18:44,059
said that they were testing it to see

00:18:41,389 --> 00:18:45,520
what its you know you know how fast it

00:18:44,059 --> 00:18:47,140
was and it's gigabit

00:18:45,520 --> 00:18:49,210
trimming and just so they can just like

00:18:47,140 --> 00:18:51,910
so you can upload a nap just like goof

00:18:49,210 --> 00:18:56,140
like that and have it live or die no

00:18:51,910 --> 00:18:58,300
however amount of time sure doesn't that

00:18:56,140 --> 00:19:02,230
doesn't that provide another way to

00:18:58,300 --> 00:19:05,200
think through how you know these new

00:19:02,230 --> 00:19:07,750
sensor networks will work where there

00:19:05,200 --> 00:19:10,360
could be just these CD hands again with

00:19:07,750 --> 00:19:12,850
like these server points you know just

00:19:10,360 --> 00:19:14,710
in different places so another is

00:19:12,850 --> 00:19:16,420
another aspect of distributed computing

00:19:14,710 --> 00:19:19,270
that we're starting to see come back is

00:19:16,420 --> 00:19:20,860
so CD ends or pro static content right

00:19:19,270 --> 00:19:22,480
right there not for dynamic content it's

00:19:20,860 --> 00:19:24,010
a great place to store the bits of an

00:19:22,480 --> 00:19:25,030
app that's going to go down on your

00:19:24,010 --> 00:19:26,650
phone and make sure you can get it

00:19:25,030 --> 00:19:28,480
quickly but it's not a place you do

00:19:26,650 --> 00:19:30,430
computing right it's a content delivery

00:19:28,480 --> 00:19:33,940
network but what we're starting to see

00:19:30,430 --> 00:19:35,770
is API delivery networks so that API

00:19:33,940 --> 00:19:38,460
data that is dynamic live data that

00:19:35,770 --> 00:19:42,550
represents compute represents state so

00:19:38,460 --> 00:19:46,150
you distribute an API DN to 20 points of

00:19:42,550 --> 00:19:47,920
presence right your app is talking

00:19:46,150 --> 00:19:49,540
through in any casting mechanism to make

00:19:47,920 --> 00:19:51,730
sure that it basically think of this API

00:19:49,540 --> 00:19:53,080
DNS get to the closest place that you

00:19:51,730 --> 00:19:56,680
could possibly get a response and

00:19:53,080 --> 00:19:57,970
ideally in a really smart AP idn the

00:19:56,680 --> 00:20:00,100
things that know about you as a user

00:19:57,970 --> 00:20:02,380
like your OAuth credentials and what

00:20:00,100 --> 00:20:05,590
tocan would scope your you should have

00:20:02,380 --> 00:20:07,060
access to and maybe what the last few

00:20:05,590 --> 00:20:08,440
things that you access from wherever you

00:20:07,060 --> 00:20:10,420
were before right imagine you get on a

00:20:08,440 --> 00:20:12,460
plane in San Francisco you land in

00:20:10,420 --> 00:20:14,500
London as soon as your device comes on

00:20:12,460 --> 00:20:18,100
the network knows that you're there it

00:20:14,500 --> 00:20:19,540
can give a signal to the API DN and it

00:20:18,100 --> 00:20:21,220
knows the last three videos you watch

00:20:19,540 --> 00:20:23,230
that maybe one of them out you only

00:20:21,220 --> 00:20:24,970
watched half of it Netflix you know you

00:20:23,230 --> 00:20:27,100
know so it might might move some of that

00:20:24,970 --> 00:20:28,540
local control information might say ok

00:20:27,100 --> 00:20:30,340
we're going to update our CDN pointers

00:20:28,540 --> 00:20:32,080
to the static video content and also

00:20:30,340 --> 00:20:33,820
some other things about your profile

00:20:32,080 --> 00:20:35,470
right there in London so it's not coming

00:20:33,820 --> 00:20:36,660
all the way around the world so we're

00:20:35,470 --> 00:20:38,950
starting to see a lot more mobility

00:20:36,660 --> 00:20:41,470
right in terms of where you want to do

00:20:38,950 --> 00:20:43,030
your computing and it's all about the

00:20:41,470 --> 00:20:45,040
data that's flowing so that's API

00:20:43,030 --> 00:20:47,410
distribution networks which is real it's

00:20:45,040 --> 00:20:49,300
compatible with CD ends but but but it

00:20:47,410 --> 00:20:50,980
handles all the programmability dynamic

00:20:49,300 --> 00:20:52,900
computing stuff that CD ends don't

00:20:50,980 --> 00:20:55,600
handle never will which leads you to

00:20:52,900 --> 00:20:58,860
thinking about you know again going back

00:20:55,600 --> 00:21:01,990
start to this conversation about new

00:20:58,860 --> 00:21:05,620
orchestration frameworks just such as

00:21:01,990 --> 00:21:07,840
Google kuru daddies and Diego Diego and

00:21:05,620 --> 00:21:09,730
missus yep those are those are those are

00:21:07,840 --> 00:21:11,799
interesting and those those kind of all

00:21:09,730 --> 00:21:14,080
operated schedulers inside you know

00:21:11,799 --> 00:21:16,630
Cloud Foundry right May so this is very

00:21:14,080 --> 00:21:18,400
good for for big data workloads I

00:21:16,630 --> 00:21:22,650
learned more about how this whole thing

00:21:18,400 --> 00:21:26,200
works too awesome yeah interestingly the

00:21:22,650 --> 00:21:28,360
end I'm it interestingly like what what

00:21:26,200 --> 00:21:31,000
what cloud foundry did was essentially

00:21:28,360 --> 00:21:33,130
kind of like decoupled the cloud

00:21:31,000 --> 00:21:35,470
controller yeah and they move the cloud

00:21:33,130 --> 00:21:38,380
controller into Diego with the health

00:21:35,470 --> 00:21:41,710
man yep yep right and so now they don't

00:21:38,380 --> 00:21:43,150
have to worry about you know you know

00:21:41,710 --> 00:21:45,070
all the kind of updates that were

00:21:43,150 --> 00:21:46,539
required where you would put the new

00:21:45,070 --> 00:21:48,460
when you try to add new features in the

00:21:46,539 --> 00:21:49,390
cloud foundry which makes sense but also

00:21:48,460 --> 00:21:51,070
think about what we were talking

00:21:49,390 --> 00:21:53,740
yesterday which is you can start to see

00:21:51,070 --> 00:21:55,870
this point towards a pluggable scheduler

00:21:53,740 --> 00:21:57,340
yes and so then you say well why would I

00:21:55,870 --> 00:21:59,110
want a different scheduler well you want

00:21:57,340 --> 00:22:01,990
a different scheduler when for example

00:21:59,110 --> 00:22:03,909
you're taking Linux down to tiny

00:22:01,990 --> 00:22:06,520
environments right embedded environments

00:22:03,909 --> 00:22:09,130
you know real time environments that

00:22:06,520 --> 00:22:10,419
requires different scheduling logic then

00:22:09,130 --> 00:22:13,030
you would in a general-purpose

00:22:10,419 --> 00:22:14,530
environment you really want me so as to

00:22:13,030 --> 00:22:17,440
do your cloud scheduling when you're

00:22:14,530 --> 00:22:19,809
doing a big honking you know chunk of

00:22:17,440 --> 00:22:22,000
data versus you know sort of the choppy

00:22:19,809 --> 00:22:23,679
behavior of apps so now you can start to

00:22:22,000 --> 00:22:25,120
see that apply what we just talked about

00:22:23,679 --> 00:22:28,539
with telecommunications networks yeah

00:22:25,120 --> 00:22:32,070
this whole thing portability right pork

00:22:28,539 --> 00:22:35,679
soda or so damn it all it all depends on

00:22:32,070 --> 00:22:37,240
great dynamic deployment right so these

00:22:35,679 --> 00:22:38,559
these new management and deployment

00:22:37,240 --> 00:22:40,330
worms if we can start to standardize

00:22:38,559 --> 00:22:42,280
like darker sort of eating up the world

00:22:40,330 --> 00:22:43,690
that's a part of it but then how do you

00:22:42,280 --> 00:22:45,850
how do you move your containers around

00:22:43,690 --> 00:22:47,679
as that stuff become standardized can we

00:22:45,850 --> 00:22:51,669
just bury the behavior and say well

00:22:47,679 --> 00:22:54,250
what's the what's the NF v optimized you

00:22:51,669 --> 00:22:58,090
know close to the fios neighborhood

00:22:54,250 --> 00:22:59,559
points scheduler and the app developers

00:22:58,090 --> 00:23:01,600
written their code the same way the

00:22:59,559 --> 00:23:03,549
architecture has kind of dynamically

00:23:01,600 --> 00:23:04,809
shifted all that everybody gets to see

00:23:03,549 --> 00:23:06,370
is the performance improves and the

00:23:04,809 --> 00:23:08,020
analytics keep everything sort of

00:23:06,370 --> 00:23:10,810
traceable and operating

00:23:08,020 --> 00:23:12,370
but we just made a lot better use of all

00:23:10,810 --> 00:23:14,260
the resources user experience is a lot

00:23:12,370 --> 00:23:15,880
better you know very very different

00:23:14,260 --> 00:23:17,530
opportunities but it's going to be these

00:23:15,880 --> 00:23:19,570
fundamental changes and another company

00:23:17,530 --> 00:23:21,340
to look at its cloud soft right there's

00:23:19,570 --> 00:23:23,200
there's some amazing work beyond our

00:23:21,340 --> 00:23:25,240
discipline how do we dynamically a have

00:23:23,200 --> 00:23:26,590
workloads and make all this don't work

00:23:25,240 --> 00:23:28,930
that's where the really really hard

00:23:26,590 --> 00:23:31,330
stuff is going to be interesting stuff

00:23:28,930 --> 00:23:34,690
and so you could then then you can start

00:23:31,330 --> 00:23:36,940
to see the corollaries to you know new

00:23:34,690 --> 00:23:39,550
storage capabilities I just SAT right

00:23:36,940 --> 00:23:41,350
just because you want to just like you

00:23:39,550 --> 00:23:43,510
know the South cable is essentially like

00:23:41,350 --> 00:23:45,340
turning stores your thousand bits and

00:23:43,510 --> 00:23:47,230
then is reassembling it in different

00:23:45,340 --> 00:23:48,670
places right and the whole point is

00:23:47,230 --> 00:23:50,530
accessibility per hour prior

00:23:48,670 --> 00:23:52,270
conversation also right because what is

00:23:50,530 --> 00:23:53,950
the developer want to know about that

00:23:52,270 --> 00:23:55,930
stuff they should not need to know about

00:23:53,950 --> 00:23:58,510
it at all they should be able to get it

00:23:55,930 --> 00:24:00,330
all of their data through an API call

00:23:58,510 --> 00:24:02,800
whether that's a database as a service

00:24:00,330 --> 00:24:05,440
whether that's some sort of thunk to a

00:24:02,800 --> 00:24:06,880
you know a JDBC driver entity the

00:24:05,440 --> 00:24:08,980
developer shouldn't have to care about

00:24:06,880 --> 00:24:11,200
the about the location of the data or

00:24:08,980 --> 00:24:13,770
what the adapter looks like so all that

00:24:11,200 --> 00:24:16,330
stuff should should be API centric

00:24:13,770 --> 00:24:17,770
simple consistent API is that are going

00:24:16,330 --> 00:24:19,150
to empower the developer to write

00:24:17,770 --> 00:24:20,800
whatever the hell they can imagine and

00:24:19,150 --> 00:24:22,210
then they can they can start dealing

00:24:20,800 --> 00:24:24,340
with you know up performance

00:24:22,210 --> 00:24:25,990
optimization tools that are more along

00:24:24,340 --> 00:24:28,030
the lines of how do i how do i shift

00:24:25,990 --> 00:24:29,920
deployment management rather than going

00:24:28,030 --> 00:24:31,840
you know how do i do I start to optimize

00:24:29,920 --> 00:24:34,500
my my data connections and now and now

00:24:31,840 --> 00:24:39,970
that we see really the need and the

00:24:34,500 --> 00:24:42,130
value of really good API design because

00:24:39,970 --> 00:24:43,840
you got to get this stuff right just any

00:24:42,130 --> 00:24:46,870
don't need you don't want to change your

00:24:43,840 --> 00:24:51,160
new version because you can have some

00:24:46,870 --> 00:24:54,340
like you know curmudgeon e old dude

00:24:51,160 --> 00:24:58,050
drinking his pork soda topeka and

00:24:54,340 --> 00:24:59,830
suddenly you know he's not getting the

00:24:58,050 --> 00:25:02,080
service that he

00:24:59,830 --> 00:25:03,760
he's normally used to have because

00:25:02,080 --> 00:25:06,399
there's been something that's been named

00:25:03,760 --> 00:25:08,260
I oh yeah well so that's what you need

00:25:06,399 --> 00:25:10,390
resilience in the in the API layer as

00:25:08,260 --> 00:25:12,940
well right so good design simplicity

00:25:10,390 --> 00:25:15,220
that will get an API lot of adoption and

00:25:12,940 --> 00:25:17,200
that's great but you also have to be

00:25:15,220 --> 00:25:21,130
flexible right so the way that you talk

00:25:17,200 --> 00:25:22,960
to an IOT head end right should be the

00:25:21,130 --> 00:25:25,240
same but maybe maybe you're talking to a

00:25:22,960 --> 00:25:28,000
Raspberry Pi right and when you exchange

00:25:25,240 --> 00:25:29,919
data there maybe you only want to send

00:25:28,000 --> 00:25:32,289
you know 10 kilobytes of data and you

00:25:29,919 --> 00:25:35,289
want to let that controller page in the

00:25:32,289 --> 00:25:36,730
next 10 kilobytes whereas you're talking

00:25:35,289 --> 00:25:39,039
to a set-top box one of the new ones

00:25:36,730 --> 00:25:40,929
coming up and Comcast and you're like

00:25:39,039 --> 00:25:44,110
yeah throw that throw that sucker a 10

00:25:40,929 --> 00:25:46,360
megabyte response so so is that is that

00:25:44,110 --> 00:25:48,010
variability of the API version or is it

00:25:46,360 --> 00:25:49,929
something else and I think I think that

00:25:48,010 --> 00:25:51,639
starts look like you call an API

00:25:49,929 --> 00:25:53,919
virtualization you could call it AP

00:25:51,639 --> 00:25:56,440
ionisation but you do need to have as

00:25:53,919 --> 00:25:59,649
last mile flexibility between sort of

00:25:56,440 --> 00:26:02,529
one constant simple well-designed fairly

00:25:59,649 --> 00:26:04,809
reliable API and the millions of

00:26:02,529 --> 00:26:07,059
variations of the way the client might

00:26:04,809 --> 00:26:09,370
want to get at it so sort of this name

00:26:07,059 --> 00:26:11,649
is API three-point oh I don't know but

00:26:09,370 --> 00:26:14,350
the ability to have a sandbox

00:26:11,649 --> 00:26:16,330
environment so the app developer can say

00:26:14,350 --> 00:26:18,159
well I like that API but it ought to

00:26:16,330 --> 00:26:19,690
look more like this right how can they

00:26:18,159 --> 00:26:21,039
start to tweak and optimize and then how

00:26:19,690 --> 00:26:23,110
is a provider could you support a

00:26:21,039 --> 00:26:25,750
sandbox where you go you know we've got

00:26:23,110 --> 00:26:28,029
a million developers and each one has

00:26:25,750 --> 00:26:29,230
their own version of the API and we

00:26:28,029 --> 00:26:30,700
don't care that's exactly how it should

00:26:29,230 --> 00:26:32,289
be because our adoption has been through

00:26:30,700 --> 00:26:34,600
the roof because we support every device

00:26:32,289 --> 00:26:37,019
you know it's known to humankind and we

00:26:34,600 --> 00:26:41,590
didn't have to implement any of them so

00:26:37,019 --> 00:26:43,179
so there's a resiliency of the API is

00:26:41,590 --> 00:26:45,399
important right and we're seeing the

00:26:43,179 --> 00:26:47,889
need for resiliency we're sorry to see

00:26:45,399 --> 00:26:50,950
also the need for something that goes

00:26:47,889 --> 00:26:53,580
beyond resiliency in terms of like

00:26:50,950 --> 00:26:55,870
adaptability in terms of sale like if

00:26:53,580 --> 00:26:57,159
part of the network goes down the

00:26:55,870 --> 00:26:58,480
network understands that part of the

00:26:57,159 --> 00:27:01,299
network is going down

00:26:58,480 --> 00:27:04,390
shift load so nothing changes yeah how

00:27:01,299 --> 00:27:05,799
does that relate to that ap is well 11

00:27:04,390 --> 00:27:07,960
part of API design is you want to have

00:27:05,799 --> 00:27:09,580
graceful failure yeah right so if you

00:27:07,960 --> 00:27:11,740
can't serve the freshest data does that

00:27:09,580 --> 00:27:13,510
matter should you then return a you know

00:27:11,740 --> 00:27:14,860
an error because you don't have a

00:27:13,510 --> 00:27:16,600
connection to the backend server should

00:27:14,860 --> 00:27:18,640
you serve it from cash right what are

00:27:16,600 --> 00:27:21,010
the what are the tolerance is there in

00:27:18,640 --> 00:27:22,540
terms of API is knowing when when

00:27:21,010 --> 00:27:23,799
network segments are down that kind of

00:27:22,540 --> 00:27:26,230
comes into a different layer one of the

00:27:23,799 --> 00:27:28,690
things that we're looking at is a sort

00:27:26,230 --> 00:27:32,260
of an API DNS right how could we have in

00:27:28,690 --> 00:27:34,660
that in that API distributed network

00:27:32,260 --> 00:27:36,190
that API DN how can you have a front-end

00:27:34,660 --> 00:27:38,350
facility where again the app doesn't

00:27:36,190 --> 00:27:39,910
have to know anything it just has a

00:27:38,350 --> 00:27:44,200
guarantee that it's going to connect to

00:27:39,910 --> 00:27:45,970
the closest fastest link that can give

00:27:44,200 --> 00:27:47,799
it cache data or connected through so

00:27:45,970 --> 00:27:49,330
that's another point of network

00:27:47,799 --> 00:27:51,520
resiliency so if you think about it as a

00:27:49,330 --> 00:27:53,350
dns problem you think about how any

00:27:51,520 --> 00:27:54,669
casting works you know it's not just

00:27:53,350 --> 00:27:56,679
gonna be the shortest it's also going to

00:27:54,669 --> 00:27:58,630
the fastest location they can guarantee

00:27:56,679 --> 00:28:00,040
you around the resource so as we start

00:27:58,630 --> 00:28:02,620
to tie that in more programmatically

00:28:00,040 --> 00:28:04,570
with api data and API security that's I

00:28:02,620 --> 00:28:06,460
think how a pee i started creating more

00:28:04,570 --> 00:28:08,260
resilience for the end user okay one of

00:28:06,460 --> 00:28:10,630
the advantages of docker is in its

00:28:08,260 --> 00:28:13,330
granularity but also gets back up

00:28:10,630 --> 00:28:15,880
capabilities yes could that be for sure

00:28:13,330 --> 00:28:17,049
a part of this has to be it has to be

00:28:15,880 --> 00:28:18,520
right so in terms of that whole

00:28:17,049 --> 00:28:21,040
triggering system you know whether you

00:28:18,520 --> 00:28:22,750
have a backup almost you have to so you

00:28:21,040 --> 00:28:25,330
could then have building and resilience

00:28:22,750 --> 00:28:26,890
in that dropped ability and this is

00:28:25,330 --> 00:28:29,140
where you want to rely on you know

00:28:26,890 --> 00:28:30,490
you're you know you're just you're sort

00:28:29,140 --> 00:28:32,590
of your source control but your ability

00:28:30,490 --> 00:28:34,419
to do you know continuous deployment you

00:28:32,590 --> 00:28:35,799
know where your artifacts located and

00:28:34,419 --> 00:28:36,970
this is where I think Cassandra is

00:28:35,799 --> 00:28:39,010
actually really interesting because you

00:28:36,970 --> 00:28:40,960
can have a very very big broadly scale

00:28:39,010 --> 00:28:43,150
cluster it's eventually consistent it's

00:28:40,960 --> 00:28:44,380
not as fast as CouchDB so you're

00:28:43,150 --> 00:28:48,429
starting to see you know things like

00:28:44,380 --> 00:28:50,590
lambda architectures like like Nathan

00:28:48,429 --> 00:28:51,970
Mars is described so eloquently where

00:28:50,590 --> 00:28:53,169
you say well we gotta gotta speed

00:28:51,970 --> 00:28:54,760
serving layer which is going to be our

00:28:53,169 --> 00:28:56,890
couch TV but we also have this

00:28:54,760 --> 00:28:58,179
consistency layer which is our Cassandra

00:28:56,890 --> 00:28:59,500
infrastructure we're going to see

00:28:58,179 --> 00:29:02,290
Cassandra used for a lot more things

00:28:59,500 --> 00:29:03,880
than it's used for today such as where

00:29:02,290 --> 00:29:04,509
would you go to have a backbone to say

00:29:03,880 --> 00:29:06,369
oh

00:29:04,509 --> 00:29:08,199
my primary server instance is down but

00:29:06,369 --> 00:29:11,229
I've got a local doctor that I can rent

00:29:08,199 --> 00:29:13,149
where do I find my other information how

00:29:11,229 --> 00:29:15,249
do i get that environment up running and

00:29:13,149 --> 00:29:16,929
then how do i start pointing you know

00:29:15,249 --> 00:29:18,999
API requests to it so it can serve it

00:29:16,929 --> 00:29:20,859
all that dynamism is we're going to

00:29:18,999 --> 00:29:23,649
choir sort of a globally shared state

00:29:20,859 --> 00:29:25,239
that's eventually consistent Sam thank

00:29:23,649 --> 00:29:26,769
you for talking to me it's been great

00:29:25,239 --> 00:29:28,209
alright the other thing sorry if i

00:29:26,769 --> 00:29:29,949
rambled a little bit so every

00:29:28,209 --> 00:29:31,869
conversation with it's a good is an

00:29:29,949 --> 00:29:35,049
interesting conversation we offer we

00:29:31,869 --> 00:29:38,319
went from Cloud Foundry to NFV to not a

00:29:35,049 --> 00:29:41,769
docker to you know pretty predictive and

00:29:38,319 --> 00:29:44,289
adaptive amps and it's all about pork

00:29:41,769 --> 00:29:47,789
pork cider get yourself a can of pork

00:29:44,289 --> 00:29:47,789

YouTube URL: https://www.youtube.com/watch?v=a2DGstfFPbM


