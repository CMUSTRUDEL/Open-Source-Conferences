Title: Collaboration Summit 2015 - Containers, PaaS, App Development
Publication date: 2016-03-18
Playlist: Cloud Foundry CEO, Sam Ramji
Description: 
	A roundtable discussion on containers, platform as a service (PaaS) and the future of application development featuring Lauren Cooney, Cisco; Craig McLuckie, Google; Steve Pousty, Red Hat; Sam Ramji, Cloud Foundry and Stephen O'Grady, Red Monk (Moderator). From Collaboration Summit 2015 in Santa Rosa, CA.
Captions: 
	00:00:00,000 --> 00:00:09,990
take this seat there you go that works I

00:00:08,340 --> 00:00:14,340
must open all to keep thinking about

00:00:09,990 --> 00:00:15,450
that even keel here okay Wow actually it

00:00:14,340 --> 00:00:17,660
was much easier when I standing up

00:00:15,450 --> 00:00:20,340
before they like keep blinding right now

00:00:17,660 --> 00:00:23,310
so as Jim said I'm Stephen O'Grady some

00:00:20,340 --> 00:00:24,930
of you may talk this morning as an

00:00:23,310 --> 00:00:26,130
analyst firm again you know most of you

00:00:24,930 --> 00:00:28,439
are familiar with what we do this is a

00:00:26,130 --> 00:00:30,179
the topic of this particular panel is

00:00:28,439 --> 00:00:32,219
one that's sort of near and dear to my

00:00:30,179 --> 00:00:37,350
heart we spent a lot of time trying to

00:00:32,219 --> 00:00:38,670
you know containers platforms VMs how do

00:00:37,350 --> 00:00:41,160
all these things fit together what do

00:00:38,670 --> 00:00:42,239
these changes mean and to help answer

00:00:41,160 --> 00:00:45,329
that question we always have a very

00:00:42,239 --> 00:00:47,219
talented panel so rather than me sort of

00:00:45,329 --> 00:00:49,079
fumble with their BIOS i'll just start

00:00:47,219 --> 00:00:51,000
with sam and if the parents could

00:00:49,079 --> 00:00:54,210
introduce themselves and try to keep it

00:00:51,000 --> 00:00:56,430
reasonably brief tam ramsey i'm the CEO

00:00:54,210 --> 00:00:58,500
of the cloud foundry foundation and

00:00:56,430 --> 00:01:00,210
previously i was chief strategy officer

00:00:58,500 --> 00:01:03,180
at apogee for the last five and a half

00:01:00,210 --> 00:01:05,850
years last time i got to present in

00:01:03,180 --> 00:01:07,380
front of this august group i was in fact

00:01:05,850 --> 00:01:09,780
head of open source and linux at

00:01:07,380 --> 00:01:12,090
microsoft corporation and before that a

00:01:09,780 --> 00:01:16,320
nerd and programmers since I was about

00:01:12,090 --> 00:01:18,299
nine years old so that's my story Jim

00:01:16,320 --> 00:01:22,229
Jim ultimately won that particular

00:01:18,299 --> 00:01:23,549
wrestling match great thanks Steven my

00:01:22,229 --> 00:01:26,450
name is Lauren Cooney I run software

00:01:23,549 --> 00:01:28,439
strategy for the CTO office at Cisco

00:01:26,450 --> 00:01:30,780
backgrounds a little bit different than

00:01:28,439 --> 00:01:32,400
most people at Cisco and that i actually

00:01:30,780 --> 00:01:35,310
will have worked with Sam at Microsoft

00:01:32,400 --> 00:01:37,290
bringing a lot of open source into into

00:01:35,310 --> 00:01:39,570
the web stack there ran web platform in

00:01:37,290 --> 00:01:41,130
standards for that i was at IBM where i

00:01:39,570 --> 00:01:43,500
worked around big data and built the

00:01:41,130 --> 00:01:45,780
first api platform to market out of the

00:01:43,500 --> 00:01:48,119
information management group and prior

00:01:45,780 --> 00:01:49,799
to that I was at be EA systems doing a

00:01:48,119 --> 00:01:52,710
lot of things around weblogic and

00:01:49,799 --> 00:01:54,570
looking at how people consume technology

00:01:52,710 --> 00:01:56,780
and build technology and where they want

00:01:54,570 --> 00:02:00,210
to go and what they want to consume

00:01:56,780 --> 00:02:03,119
another one semi name is Craig mcluckie

00:02:00,210 --> 00:02:06,719
on the product guy at Google responsible

00:02:03,119 --> 00:02:10,110
for our cloud computing product

00:02:06,719 --> 00:02:12,570
portfolio so compute engine app engine

00:02:10,110 --> 00:02:15,780
and the emerging container engine

00:02:12,570 --> 00:02:17,640
portfolio I was the founder of the

00:02:15,780 --> 00:02:19,890
Cooper Nettie's project what one of the

00:02:17,640 --> 00:02:22,650
fun is the company's project which is

00:02:19,890 --> 00:02:24,770
which brings Google style orchestration

00:02:22,650 --> 00:02:31,280
to the Linux application container world

00:02:24,770 --> 00:02:38,640
prior to that I grew up at Microsoft I

00:02:31,280 --> 00:02:43,310
never worked at Microsoft I'm going to

00:02:38,640 --> 00:02:45,990
drop the mic now finished drugs dude

00:02:43,310 --> 00:02:47,490
Steve boosty i work at Red Hat on

00:02:45,990 --> 00:02:50,790
openshift which is Red Hat's

00:02:47,490 --> 00:02:53,040
platform-as-a-service I'm officially a

00:02:50,790 --> 00:02:54,390
pass dust spreader that's what I got the

00:02:53,040 --> 00:02:55,560
name I wanted to put on my business card

00:02:54,390 --> 00:02:59,010
what that means is I'm a developer

00:02:55,560 --> 00:03:02,400
advocate and so I build apps and talk to

00:02:59,010 --> 00:03:04,770
developers most of the time I two

00:03:02,400 --> 00:03:07,110
caveats I usually play the saucy person

00:03:04,770 --> 00:03:08,250
on the panel I'm getting kind of tired

00:03:07,110 --> 00:03:09,959
of that role because then everybody

00:03:08,250 --> 00:03:12,300
argues with me and I'm just not feeling

00:03:09,959 --> 00:03:14,010
up to it but I may still go saucy and if

00:03:12,300 --> 00:03:15,209
I go saucy that means I'm arguing just

00:03:14,010 --> 00:03:16,680
so that we have a fun panel not

00:03:15,209 --> 00:03:17,940
necessarily because I strongly believe

00:03:16,680 --> 00:03:20,310
it so don't hunt me down later and

00:03:17,940 --> 00:03:22,170
second I'm from New York so if I use the

00:03:20,310 --> 00:03:24,299
word guys it's not a gender specific

00:03:22,170 --> 00:03:25,380
term guys is gender-neutral so please

00:03:24,299 --> 00:03:27,360
don't take offense at the use of the

00:03:25,380 --> 00:03:29,670
word guys I think that's probably the

00:03:27,360 --> 00:03:31,709
first qualification I've ever had from

00:03:29,670 --> 00:03:34,110
the panelists in terms of using gendered

00:03:31,709 --> 00:03:36,540
pronouns but all right lots of good

00:03:34,110 --> 00:03:37,680
Stern I actually really don't care where

00:03:36,540 --> 00:03:38,880
we start with this question but one of

00:03:37,680 --> 00:03:41,040
the one of the questions that we get all

00:03:38,880 --> 00:03:43,799
the time as analysts is pretty simple

00:03:41,040 --> 00:03:46,049
you know obviously pass is evolved to

00:03:43,799 --> 00:03:47,430
offer you know essentially a set of

00:03:46,049 --> 00:03:49,709
platform services depending on how you

00:03:47,430 --> 00:03:52,140
define that on top of you know some

00:03:49,709 --> 00:03:54,420
infrastructure substrate containers have

00:03:52,140 --> 00:03:56,010
made a huge jump you know certainly in

00:03:54,420 --> 00:03:58,380
last 12 to 18 months you know we like to

00:03:56,010 --> 00:04:00,780
tell people we've been doing this a red

00:03:58,380 --> 00:04:01,890
monk you know since 2002 and docker in

00:04:00,780 --> 00:04:04,019
particular is one of the fastest-growing

00:04:01,890 --> 00:04:06,959
projects we've ever seen from a

00:04:04,019 --> 00:04:08,610
visibility standpoint so how do these

00:04:06,959 --> 00:04:10,200
things fit together you know how do they

00:04:08,610 --> 00:04:13,019
not I mean is are they competitive did

00:04:10,200 --> 00:04:14,489
they overlap and I think said that I

00:04:13,019 --> 00:04:18,209
wasn't going starting where I guess else

00:04:14,489 --> 00:04:20,280
where was it it's funny because nothing

00:04:18,209 --> 00:04:22,320
is particularly perfectly linear anymore

00:04:20,280 --> 00:04:23,639
it's almost more like concentric circles

00:04:22,320 --> 00:04:25,770
you know what is Linux what

00:04:23,639 --> 00:04:28,949
to container you know what is metadata

00:04:25,770 --> 00:04:30,419
housing how's it all stack up right but

00:04:28,949 --> 00:04:32,490
I think ultimately it's about projecting

00:04:30,419 --> 00:04:34,229
user space across the data center a lot

00:04:32,490 --> 00:04:36,360
of data center technologies exist that

00:04:34,229 --> 00:04:38,430
make it easier to render the data center

00:04:36,360 --> 00:04:40,139
as api's to be able to work with all the

00:04:38,430 --> 00:04:42,509
different resources different

00:04:40,139 --> 00:04:44,370
instantiations but your your typical app

00:04:42,509 --> 00:04:46,229
developer does not and never wants to

00:04:44,370 --> 00:04:48,479
understand those they want to be able to

00:04:46,229 --> 00:04:50,849
place you know basically say you know as

00:04:48,479 --> 00:04:52,110
we all learned get push heroku master

00:04:50,849 --> 00:04:54,659
right you just want to be able to say

00:04:52,110 --> 00:04:56,219
here's my code please operate it within

00:04:54,659 --> 00:04:58,830
an SLA that's going to make everybody

00:04:56,219 --> 00:05:00,689
happy and the less details I need to

00:04:58,830 --> 00:05:03,479
know about that the better so I think

00:05:00,689 --> 00:05:05,849
the focus that Cloud Foundry is taking

00:05:03,479 --> 00:05:08,189
is can we have a massively distributed

00:05:05,849 --> 00:05:09,770
ecosystem where we've got consistency

00:05:08,189 --> 00:05:12,599
and a lot of app developers both

00:05:09,770 --> 00:05:15,479
building core apps within enterprises

00:05:12,599 --> 00:05:17,610
bespoke applications and can we create a

00:05:15,479 --> 00:05:19,919
really powerful is V you know

00:05:17,610 --> 00:05:22,229
independent software vendor marketplace

00:05:19,919 --> 00:05:25,379
where you know companies like Sugar CRM

00:05:22,229 --> 00:05:27,139
or documentum or brand new companies are

00:05:25,379 --> 00:05:29,819
building small apps for the enterprise

00:05:27,139 --> 00:05:31,949
that enables us to have an Internet like

00:05:29,819 --> 00:05:34,650
experience in the enterprise if you're

00:05:31,949 --> 00:05:36,509
if you work in a large company today you

00:05:34,650 --> 00:05:38,069
can't imagine the misery that you

00:05:36,509 --> 00:05:40,409
experience with internal apps the

00:05:38,069 --> 00:05:42,180
compared to the delight of being average

00:05:40,409 --> 00:05:44,550
user not even a super user on the

00:05:42,180 --> 00:05:46,259
internet yeah so how do we take pass

00:05:44,550 --> 00:05:48,539
platforms containers how do we take all

00:05:46,259 --> 00:05:50,490
this app developer cedric stuff and say

00:05:48,539 --> 00:05:53,219
here's user space for the data center

00:05:50,490 --> 00:05:56,009
have fun and make money if we do that

00:05:53,219 --> 00:05:58,889
then I think all of us win good turnout

00:05:56,009 --> 00:06:01,139
stalker rocket I guess we should include

00:05:58,889 --> 00:06:03,689
you know containers versus pass you know

00:06:01,139 --> 00:06:06,949
thoughts anybody else I don't think it's

00:06:03,689 --> 00:06:09,689
containers versus past I actually see

00:06:06,949 --> 00:06:11,639
containers as you know a component that

00:06:09,689 --> 00:06:13,050
can work inside of a past environment

00:06:11,639 --> 00:06:14,849
but containers can also work inside of

00:06:13,050 --> 00:06:17,370
for example and infrastructure as a

00:06:14,849 --> 00:06:19,110
service environment right so you know a

00:06:17,370 --> 00:06:21,240
lot of what sometimes we look at is

00:06:19,110 --> 00:06:22,979
we're building out you know new network

00:06:21,240 --> 00:06:24,419
services that are virtualized right how

00:06:22,979 --> 00:06:27,029
do we container eyes those so that they

00:06:24,419 --> 00:06:29,039
can run across multiple VMs for example

00:06:27,029 --> 00:06:29,580
raise so they're not dependent upon one

00:06:29,039 --> 00:06:31,860
vm are

00:06:29,580 --> 00:06:33,629
the vm things along those lines so I

00:06:31,860 --> 00:06:35,220
don't see them as competing I see them

00:06:33,629 --> 00:06:37,919
as actually complementary in certain

00:06:35,220 --> 00:06:39,960
situations but I also see them as

00:06:37,919 --> 00:06:42,419
growing extremely fast docker you

00:06:39,960 --> 00:06:44,969
mentioned you know is not only growing

00:06:42,419 --> 00:06:46,680
but also being used inside of you know

00:06:44,969 --> 00:06:48,150
other projects like shippable and stuff

00:06:46,680 --> 00:06:52,050
like that I think that's really

00:06:48,150 --> 00:06:53,639
important to look at a degree I tend to

00:06:52,050 --> 00:06:56,159
think about I think these things are

00:06:53,639 --> 00:06:58,259
very uniquely aligned I think what what

00:06:56,159 --> 00:07:00,389
doctors already given us is a very

00:06:58,259 --> 00:07:01,949
elegant way to solve a packaging and

00:07:00,389 --> 00:07:04,349
deployment problem that's existed since

00:07:01,949 --> 00:07:05,789
forever and I think it's it's catching

00:07:04,349 --> 00:07:08,159
on like wildfire because it's created

00:07:05,789 --> 00:07:10,800
this incredibly powerful hermetically

00:07:08,159 --> 00:07:12,719
sealed Adam of deployment so it's solved

00:07:10,800 --> 00:07:14,580
one of several problems that pass was

00:07:12,719 --> 00:07:16,919
looking to address and solved it

00:07:14,580 --> 00:07:19,080
incredibly well I think if you look more

00:07:16,919 --> 00:07:21,690
broadly there's still a lot of things

00:07:19,080 --> 00:07:23,520
that you need to to run a modern

00:07:21,690 --> 00:07:24,960
enlightened application you need a

00:07:23,520 --> 00:07:27,029
cluster environment so you need a place

00:07:24,960 --> 00:07:28,590
where you can deploy this thing and have

00:07:27,029 --> 00:07:31,650
its lifecycle manage and have it wired

00:07:28,590 --> 00:07:33,120
in to a broader system you're going to

00:07:31,650 --> 00:07:34,770
need a set of common services the things

00:07:33,120 --> 00:07:36,870
that bring an operationally viable

00:07:34,770 --> 00:07:39,029
environment to you so you can log and

00:07:36,870 --> 00:07:40,469
monitor and deal with it and then

00:07:39,029 --> 00:07:42,060
there's the final piece to this which i

00:07:40,469 --> 00:07:44,129
think you know we haven't seen as much

00:07:42,060 --> 00:07:45,629
sort of immediate traction on buy things

00:07:44,129 --> 00:07:47,789
and be very important which is the

00:07:45,629 --> 00:07:50,129
actual sort of application environment

00:07:47,789 --> 00:07:51,690
the curated pieces the dependency

00:07:50,129 --> 00:07:54,479
management the package management pieces

00:07:51,690 --> 00:07:55,680
that that your code depends on and I

00:07:54,479 --> 00:07:57,750
think if you if you pull that whole

00:07:55,680 --> 00:07:59,819
thing together that represents that the

00:07:57,750 --> 00:08:01,500
promise that passes had but what we're

00:07:59,819 --> 00:08:03,029
starting to see is a very principle

00:08:01,500 --> 00:08:06,150
decomposition of paths into these

00:08:03,029 --> 00:08:08,610
constituent pieces along very sort of

00:08:06,150 --> 00:08:09,599
effective interface lines and i think

00:08:08,610 --> 00:08:11,509
it's it's letting us actually produce

00:08:09,599 --> 00:08:14,819
much richer and much more sophisticated

00:08:11,509 --> 00:08:16,500
better systems yeah and I'm supposed to

00:08:14,819 --> 00:08:18,180
say something original and exciting

00:08:16,500 --> 00:08:21,240
after all three of these people spoken

00:08:18,180 --> 00:08:22,979
you choose to set up I know Jenny she's

00:08:21,240 --> 00:08:25,440
well I hope and switch the order second

00:08:22,979 --> 00:08:26,520
let me hide I mean they all said the

00:08:25,440 --> 00:08:27,750
same things I was going to say but they

00:08:26,520 --> 00:08:31,169
said them first I think the only thing

00:08:27,750 --> 00:08:32,940
that I would say is I think almost all

00:08:31,169 --> 00:08:34,469
the passes that I know have been using

00:08:32,940 --> 00:08:36,269
containers to start with it just wasn't

00:08:34,469 --> 00:08:37,409
docker and so like you said the great

00:08:36,269 --> 00:08:39,180
part about dr. was it was a nice

00:08:37,409 --> 00:08:41,610
specification that we could all come to

00:08:39,180 --> 00:08:42,150
agree on and kudos to them also for

00:08:41,610 --> 00:08:44,160
making

00:08:42,150 --> 00:08:45,540
a very open process right they could

00:08:44,160 --> 00:08:47,790
have said here's the docker containers

00:08:45,540 --> 00:08:49,290
back and we're going to control or I

00:08:47,790 --> 00:08:50,880
mean they're having some issues with

00:08:49,290 --> 00:08:52,320
control around it but they've made it a

00:08:50,880 --> 00:08:54,630
pretty open spec that people could sign

00:08:52,320 --> 00:08:55,980
on so but since they've nailed is the

00:08:54,630 --> 00:08:57,600
developer experience I mean let's just

00:08:55,980 --> 00:08:59,100
call it what it is doctors put lightning

00:08:57,600 --> 00:09:00,780
in a bottle in terms of creating an

00:08:59,100 --> 00:09:04,170
amazing developer experience that gets

00:09:00,780 --> 00:09:05,880
you up and running on the container okay

00:09:04,170 --> 00:09:07,890
so that I can disagree with you on so i

00:09:05,880 --> 00:09:09,840
think what bit finally something to

00:09:07,890 --> 00:09:11,460
disagree i think actually what docker

00:09:09,840 --> 00:09:14,450
has benefited from in containers in

00:09:11,460 --> 00:09:16,590
general have benefited from his vm right

00:09:14,450 --> 00:09:18,030
well I saw most of people in the

00:09:16,590 --> 00:09:20,820
audience and most of you are at least my

00:09:18,030 --> 00:09:22,530
age or around my age and when you were

00:09:20,820 --> 00:09:23,970
growing up writing developer soft when

00:09:22,530 --> 00:09:26,400
you are developing software it's like I

00:09:23,970 --> 00:09:28,680
need a box don't you put any vm on my

00:09:26,400 --> 00:09:30,480
machine I don't want you cohabitating

00:09:28,680 --> 00:09:33,120
other things on my machine there was a

00:09:30,480 --> 00:09:35,880
lot of cultural resistance to VMS and i

00:09:33,120 --> 00:09:37,920
think what's happened is the vm for the

00:09:35,880 --> 00:09:39,870
ice breaker for containers people got

00:09:37,920 --> 00:09:42,420
used to running on virtualized hardware

00:09:39,870 --> 00:09:43,830
and so what containers are what because

00:09:42,420 --> 00:09:45,350
of that containers are now able to say

00:09:43,830 --> 00:09:47,160
oh don't worry about it we're gonna run

00:09:45,350 --> 00:09:48,660
multi-tenant machine and you can be okay

00:09:47,160 --> 00:09:49,770
people like okay that sounds great oh

00:09:48,660 --> 00:09:51,870
and you're going to be lighter weight

00:09:49,770 --> 00:09:54,600
than a vm awesome i'm all about

00:09:51,870 --> 00:09:56,070
containers now I as a developer I was

00:09:54,600 --> 00:09:58,860
actually not very excited about docker

00:09:56,070 --> 00:10:00,570
just to be honest but that's because I'd

00:09:58,860 --> 00:10:03,450
use a pass before because viet to me a

00:10:00,570 --> 00:10:05,130
container is no more than a vm just with

00:10:03,450 --> 00:10:07,980
better specifications and lighter weight

00:10:05,130 --> 00:10:09,390
right for my developer experience from a

00:10:07,980 --> 00:10:11,970
sysadmin experience and other

00:10:09,390 --> 00:10:13,440
experiences i agree it brings a lot of

00:10:11,970 --> 00:10:15,360
other things but as a developer or the

00:10:13,440 --> 00:10:17,250
association time either definitely decos

00:10:15,360 --> 00:10:19,650
oh you know how often do you instantiate

00:10:17,250 --> 00:10:21,810
a vm as a developer yeah that's once a

00:10:19,650 --> 00:10:23,940
day right you boot your machine you boot

00:10:21,810 --> 00:10:26,100
your vm and off you go it doesn't i

00:10:23,940 --> 00:10:28,500
still had to like manage that can i

00:10:26,100 --> 00:10:30,120
start to manage the container right like

00:10:28,500 --> 00:10:32,340
I start to install the software into the

00:10:30,120 --> 00:10:34,620
container I have to start it up not

00:10:32,340 --> 00:10:36,630
entirely me dr. pol gives me a really

00:10:34,620 --> 00:10:38,580
rich sort of baseline of containers to

00:10:36,630 --> 00:10:40,650
work from right then I calculated so

00:10:38,580 --> 00:10:44,280
when i get a curated level of VMS at all

00:10:40,650 --> 00:10:46,710
look look am eyes are VMS and there's a

00:10:44,280 --> 00:10:48,270
very rich ecosystem of am eyes that have

00:10:46,710 --> 00:10:49,710
a lotta stuff i can pull down an am i

00:10:48,270 --> 00:10:51,180
with almost everything i want in it and

00:10:49,710 --> 00:10:52,860
go you can but it's all bound to a

00:10:51,180 --> 00:10:54,390
specific provider so if you want to if

00:10:52,860 --> 00:10:57,030
you want on your am I on your local

00:10:54,390 --> 00:10:59,670
so you know god help you okay I agree

00:10:57,030 --> 00:11:01,860
about but my point is a vm can beat my

00:10:59,670 --> 00:11:03,900
IT department could make a set of the

00:11:01,860 --> 00:11:05,730
end blessed VMs with all the software I

00:11:03,900 --> 00:11:09,210
needed and I booted up once for the day

00:11:05,730 --> 00:11:11,370
I to me as a developer containers don't

00:11:09,210 --> 00:11:13,350
get me much except when they're put with

00:11:11,370 --> 00:11:15,990
things that make them more exciting like

00:11:13,350 --> 00:11:18,210
I actually fine shocker as the guy who

00:11:15,990 --> 00:11:19,650
works on red hat spass a pass a lot more

00:11:18,210 --> 00:11:21,180
exciting because I give one command and

00:11:19,650 --> 00:11:24,420
I've got my whole environment Yeah right

00:11:21,180 --> 00:11:25,830
and I can deploy to the cloud I'll have

00:11:24,420 --> 00:11:27,450
to worry about all that other stuff and

00:11:25,830 --> 00:11:29,430
whether it's Cloud Foundry whether it's

00:11:27,450 --> 00:11:31,430
ours whether it's her Roku that was the

00:11:29,430 --> 00:11:36,210
exciting thing as a developer container

00:11:31,430 --> 00:11:38,310
but the one thing that goes come back

00:11:36,210 --> 00:11:39,720
way home I gotta give it I got to give

00:11:38,310 --> 00:11:41,310
one thing back to containers and I think

00:11:39,720 --> 00:11:43,110
this is the part where we're all kind of

00:11:41,310 --> 00:11:44,700
pushing right now and I'm really hoping

00:11:43,110 --> 00:11:47,460
this comes with our next version of open

00:11:44,700 --> 00:11:49,590
shift is I can take my same containers

00:11:47,460 --> 00:11:51,930
that I'm running on my machine dev there

00:11:49,590 --> 00:11:53,640
and then push that straight to the to

00:11:51,930 --> 00:11:55,530
the cloud and have that work so I have a

00:11:53,640 --> 00:11:57,120
seamless desktop I think the thing that

00:11:55,530 --> 00:11:58,860
all of us have missed all of us

00:11:57,120 --> 00:12:01,020
including Heroku who's probably done the

00:11:58,860 --> 00:12:02,850
best job so far is it seamless desktop

00:12:01,020 --> 00:12:04,440
to cloud deployment and i hope i got

00:12:02,850 --> 00:12:05,910
fifty under solvent well we'll come back

00:12:04,440 --> 00:12:07,710
to that one of the questions I wanted to

00:12:05,910 --> 00:12:09,180
actually start with Lauren on to get the

00:12:07,710 --> 00:12:10,260
perspective you know particularly for

00:12:09,180 --> 00:12:12,930
somebody who's coming at it from a

00:12:10,260 --> 00:12:14,310
systems perspective is you know has this

00:12:12,930 --> 00:12:15,720
changed sort of our fundamental notion

00:12:14,310 --> 00:12:17,850
of what the atomic unit of computing

00:12:15,720 --> 00:12:19,500
it's right so to your point Steve in

00:12:17,850 --> 00:12:20,640
other words one of the things that you

00:12:19,500 --> 00:12:22,980
know I've talked about lots of people

00:12:20,640 --> 00:12:24,690
talked about stood for is for most of us

00:12:22,980 --> 00:12:26,370
coming up you know the atomic unit was a

00:12:24,690 --> 00:12:27,930
server if I wanted to build something if

00:12:26,370 --> 00:12:30,570
I want to run a database something I

00:12:27,930 --> 00:12:32,250
needed a server to basis on VMS were

00:12:30,570 --> 00:12:33,660
sort of the next step you know okay you

00:12:32,250 --> 00:12:35,700
know hey I have this sort of interim

00:12:33,660 --> 00:12:39,090
virtual sort of representation of this

00:12:35,700 --> 00:12:40,290
you know containers are not you know

00:12:39,090 --> 00:12:42,750
sort of the quantum leap that

00:12:40,290 --> 00:12:43,920
necessarily that VMS were but obviously

00:12:42,750 --> 00:12:46,410
introduce some changes in terms of

00:12:43,920 --> 00:12:49,200
weight speed you know shared

00:12:46,410 --> 00:12:50,460
infrastructure and so on so to warren

00:12:49,200 --> 00:12:51,750
and we'll come back the rest of

00:12:50,460 --> 00:12:53,550
panelists you know when you look at it

00:12:51,750 --> 00:12:55,320
from a systems perspective have

00:12:53,550 --> 00:12:58,110
containers in particular change the way

00:12:55,320 --> 00:13:00,300
that you view you know what is sort of

00:12:58,110 --> 00:13:02,790
the most basic you know component of how

00:13:00,300 --> 00:13:06,530
we put together an application

00:13:02,790 --> 00:13:09,750
I think it largely depends on you know

00:13:06,530 --> 00:13:10,890
skill sets great and because I think a

00:13:09,750 --> 00:13:12,300
lot of you know you're kind of we're

00:13:10,890 --> 00:13:13,500
talking about you know a lot of

00:13:12,300 --> 00:13:15,060
different things and how containers

00:13:13,500 --> 00:13:16,440
don't excite you but you know for some

00:13:15,060 --> 00:13:18,060
people containers are pretty exciting

00:13:16,440 --> 00:13:20,040
because maybe they're not as a you know

00:13:18,060 --> 00:13:22,560
say sophisticated as developers you are

00:13:20,040 --> 00:13:24,900
great and so they allow a lot of things

00:13:22,560 --> 00:13:27,450
to occur that they traditionally would

00:13:24,900 --> 00:13:30,030
not be able to do right and so we have

00:13:27,450 --> 00:13:32,100
to look at the developer skill set when

00:13:30,030 --> 00:13:33,600
you're looking at actually what you're

00:13:32,100 --> 00:13:35,580
going to be using now from a systems

00:13:33,600 --> 00:13:37,140
perspective what we have is a lot of

00:13:35,580 --> 00:13:40,110
folks that were used to kind of like

00:13:37,140 --> 00:13:42,120
command-line interface or you know like

00:13:40,110 --> 00:13:43,560
server administrators things like that

00:13:42,120 --> 00:13:45,450
they're really excited because they can

00:13:43,560 --> 00:13:46,740
take you know like I was saying like

00:13:45,450 --> 00:13:48,150
network functions that are becoming

00:13:46,740 --> 00:13:50,070
virtualized and put them in a container

00:13:48,150 --> 00:13:52,080
and they don't have to worry about you

00:13:50,070 --> 00:13:53,910
know being stuck to vmware being stuck

00:13:52,080 --> 00:13:55,440
to you know another sort of you know

00:13:53,910 --> 00:13:56,820
vendor they can actually move their

00:13:55,440 --> 00:13:59,160
applications across multiple different

00:13:56,820 --> 00:14:00,900
environments when before they were you

00:13:59,160 --> 00:14:02,520
know tightly coupled now that loosely

00:14:00,900 --> 00:14:04,650
coupled is coming in and you seeing that

00:14:02,520 --> 00:14:07,530
abstraction right and I think that's

00:14:04,650 --> 00:14:08,910
really important and you know as you

00:14:07,530 --> 00:14:10,350
know I want to I think that this is

00:14:08,910 --> 00:14:12,540
important to address to you know as I

00:14:10,350 --> 00:14:15,180
look at pass and the way that that's

00:14:12,540 --> 00:14:16,590
affecting you know kind of the stack as

00:14:15,180 --> 00:14:18,630
a whole these stacks are flattening

00:14:16,590 --> 00:14:20,460
right so you have kind of like your app

00:14:18,630 --> 00:14:21,960
server not flattened to be kind of like

00:14:20,460 --> 00:14:23,970
a platform as a service we've got your

00:14:21,960 --> 00:14:25,470
infrastructure flatten your server

00:14:23,970 --> 00:14:27,360
storage and compute right be

00:14:25,470 --> 00:14:29,640
infrastructure as a service now so you

00:14:27,360 --> 00:14:31,500
have to look at you know when you're

00:14:29,640 --> 00:14:33,420
looking at pass and infrastructure

00:14:31,500 --> 00:14:37,530
service do you want those tightly

00:14:33,420 --> 00:14:40,200
coupled or more loosely coupled so Craig

00:14:37,530 --> 00:14:43,050
thought to me you know as the you know

00:14:40,200 --> 00:14:45,330
creator of urban a tease you know did

00:14:43,050 --> 00:14:47,490
that change or you know containers

00:14:45,330 --> 00:14:49,140
change the way that sort of you view the

00:14:47,490 --> 00:14:51,090
the building blocks of how we build

00:14:49,140 --> 00:14:53,370
applications or was that you know just

00:14:51,090 --> 00:14:54,420
continuation of a trend kind of i think

00:14:53,370 --> 00:14:55,770
it's i think it has fundamentally

00:14:54,420 --> 00:14:58,620
changed the way that people experience

00:14:55,770 --> 00:15:00,990
and consume software i'm going to look

00:14:58,620 --> 00:15:02,970
back on my experience I did

00:15:00,990 --> 00:15:07,170
compute engine before we did container

00:15:02,970 --> 00:15:08,940
engine and it was pretty jarring the the

00:15:07,170 --> 00:15:10,170
sort of the difference in experiences

00:15:08,940 --> 00:15:13,620
between someone who's coming into this

00:15:10,170 --> 00:15:15,420
VM based product so we were very proud

00:15:13,620 --> 00:15:16,560
you know a young team just got our first

00:15:15,420 --> 00:15:18,060
production users and we started looking

00:15:16,560 --> 00:15:19,440
at what people were doing with it it

00:15:18,060 --> 00:15:20,790
just didn't make any sense because we

00:15:19,440 --> 00:15:21,779
were Google guys like everything's in

00:15:20,790 --> 00:15:24,540
containers a google or I'd like

00:15:21,779 --> 00:15:26,220
everything was there we looked at the we

00:15:24,540 --> 00:15:27,540
look at the efficiency levels that folks

00:15:26,220 --> 00:15:29,190
were getting out of these contain out of

00:15:27,540 --> 00:15:31,140
out of the the vm based offerings we

00:15:29,190 --> 00:15:32,580
looked at the atom of deployment the set

00:15:31,140 --> 00:15:35,459
of tools they were using it looked

00:15:32,580 --> 00:15:37,170
nothing like what we were used to and I

00:15:35,459 --> 00:15:39,149
think that you know one of the things

00:15:37,170 --> 00:15:42,089
that this container revolution is

00:15:39,149 --> 00:15:44,130
bringing to bear is it's changing the

00:15:42,089 --> 00:15:46,350
basic atom of software consumption it's

00:15:44,130 --> 00:15:50,010
really redefining it as this much more

00:15:46,350 --> 00:15:53,820
lightweight portable you know unit or

00:15:50,010 --> 00:15:55,740
atom that is much easier to manage and

00:15:53,820 --> 00:15:57,330
has much higher levels of introspective

00:15:55,740 --> 00:15:59,010
ility do you think about the world of

00:15:57,330 --> 00:16:00,570
VMS today like you know as the guy who

00:15:59,010 --> 00:16:02,279
you know sort of was building out

00:16:00,570 --> 00:16:04,589
compute engine and we couldn't see very

00:16:02,279 --> 00:16:05,730
much you see x86 instruction set and

00:16:04,589 --> 00:16:07,470
para virtualized device driver calls

00:16:05,730 --> 00:16:11,010
it's not it's not very sort of

00:16:07,470 --> 00:16:12,750
enlightened sort of line of sort of

00:16:11,010 --> 00:16:14,970
integration whereas with containers you

00:16:12,750 --> 00:16:17,940
have you know the full Cisco interface

00:16:14,970 --> 00:16:20,970
you offer much higher levels of of

00:16:17,940 --> 00:16:23,940
insights it offers for more portability

00:16:20,970 --> 00:16:26,310
phorbol manageability and it really is a

00:16:23,940 --> 00:16:28,709
gateway to dynamic management and

00:16:26,310 --> 00:16:30,149
dynamic systems and I think that's to me

00:16:28,709 --> 00:16:31,649
personally the most exciting thing about

00:16:30,149 --> 00:16:34,529
this um you know we've been doing it for

00:16:31,649 --> 00:16:36,270
years inside Google and now we're able

00:16:34,529 --> 00:16:38,459
to really start seeing ways that people

00:16:36,270 --> 00:16:41,029
outside of Google can can run these

00:16:38,459 --> 00:16:43,620
these these much more enlightened

00:16:41,029 --> 00:16:45,980
applications as a result of this new

00:16:43,620 --> 00:16:49,230
Adam of software deployment consumption

00:16:45,980 --> 00:16:50,760
everything so looking at it from the

00:16:49,230 --> 00:16:52,170
developer down from the app developer

00:16:50,760 --> 00:16:55,649
down rather than from the systems

00:16:52,170 --> 00:16:58,260
engineer or the sysadmin up containers

00:16:55,649 --> 00:16:59,579
are nice for separating the concerns of

00:16:58,260 --> 00:17:01,110
modern applications right you're going

00:16:59,579 --> 00:17:02,520
to you need a place to put all of your

00:17:01,110 --> 00:17:04,949
stateless code that you're going to do

00:17:02,520 --> 00:17:06,300
your fire hose type io with and then

00:17:04,949 --> 00:17:07,410
you've got services which you know are

00:17:06,300 --> 00:17:08,459
not going to be in your container

00:17:07,410 --> 00:17:10,380
they're going to be system level

00:17:08,459 --> 00:17:12,530
services that you can depend on where's

00:17:10,380 --> 00:17:13,970
my Redis right where's my

00:17:12,530 --> 00:17:15,910
wearing my network interface what are

00:17:13,970 --> 00:17:18,170
the other things that I need to rely on

00:17:15,910 --> 00:17:21,230
some of the feedback that I've heard in

00:17:18,170 --> 00:17:25,100
the last month it's actually exactly 28

00:17:21,230 --> 00:17:27,080
days in my new job so it's important to

00:17:25,100 --> 00:17:29,030
listen the things that I keep hearing or

00:17:27,080 --> 00:17:30,890
where's my SLA for the services below

00:17:29,030 --> 00:17:34,190
the container level we know that we need

00:17:30,890 --> 00:17:35,960
to depend on on storage on you know

00:17:34,190 --> 00:17:37,370
image transformation on all sorts of

00:17:35,960 --> 00:17:38,630
things that we don't want to do with so

00:17:37,370 --> 00:17:41,120
for me the big revolution is

00:17:38,630 --> 00:17:43,100
microservices the idea that as an app

00:17:41,120 --> 00:17:45,370
developer you're now having a consistent

00:17:43,100 --> 00:17:47,360
concentric ring approach to architecture

00:17:45,370 --> 00:17:48,920
containers are one of a number of

00:17:47,360 --> 00:17:51,230
technologies that make it by temecula

00:17:48,920 --> 00:17:52,880
nicer to build microservices know you'll

00:17:51,230 --> 00:17:54,980
have a stable environment and know that

00:17:52,880 --> 00:17:56,750
you can depend on the systems engineers

00:17:54,980 --> 00:17:58,250
and those who are implementing a lot of

00:17:56,750 --> 00:18:00,050
this hard stuff right the path and

00:17:58,250 --> 00:18:02,270
infrastructure layers to know that

00:18:00,050 --> 00:18:04,760
you'll have a reliable fabric to deploy

00:18:02,270 --> 00:18:07,190
on right so r1 elasticity is developer

00:18:04,760 --> 00:18:08,690
this is sort of a distant is a there's

00:18:07,190 --> 00:18:09,980
an echo sitting here of ideas and

00:18:08,690 --> 00:18:13,850
technologies that are starting to make

00:18:09,980 --> 00:18:17,000
that work again I have to go laughs

00:18:13,850 --> 00:18:19,880
you're going first next okay great um so

00:18:17,000 --> 00:18:22,040
I think the so as much as I'd poo-pooed

00:18:19,880 --> 00:18:23,840
containers I wasn't really meaning to

00:18:22,040 --> 00:18:25,640
pooh-pooh containers what I really was

00:18:23,840 --> 00:18:28,310
trying to say is what adventure Majesty

00:18:25,640 --> 00:18:30,230
was why what's I Met Your Majesty what I

00:18:28,310 --> 00:18:31,790
pin I think containers are actually

00:18:30,230 --> 00:18:33,770
pretty awesome when they're combined

00:18:31,790 --> 00:18:35,690
with other technology right so that's

00:18:33,770 --> 00:18:37,610
the part that's exciting for me so I and

00:18:35,690 --> 00:18:40,340
Steve you actually brought this up once

00:18:37,610 --> 00:18:41,750
on a analyst call where we were talking

00:18:40,340 --> 00:18:44,240
about open shift and you're like oh it's

00:18:41,750 --> 00:18:45,740
nothing like my what was the you were

00:18:44,240 --> 00:18:47,270
comparing it to so it's not like my

00:18:45,740 --> 00:18:49,310
hosted Linux thing and this is a big

00:18:47,270 --> 00:18:50,420
hurdle for me and so this is back to

00:18:49,310 --> 00:18:51,830
what you were saying I think a lot of

00:18:50,420 --> 00:18:54,080
developers when they came to Google App

00:18:51,830 --> 00:18:56,660
Engine or when they come to a pass and

00:18:54,080 --> 00:18:58,610
to start with they think of I have a vm

00:18:56,660 --> 00:19:00,170
or I have a machine and I need to

00:18:58,610 --> 00:19:02,510
develop that same way and I think there

00:19:00,170 --> 00:19:04,100
is a mind shift and then containers make

00:19:02,510 --> 00:19:05,660
it nicer and easier to make that mind

00:19:04,100 --> 00:19:07,370
ship where you can just give a command

00:19:05,660 --> 00:19:11,120
and have your whole infrastructure up

00:19:07,370 --> 00:19:13,490
it's cost me nothing in terms of like to

00:19:11,120 --> 00:19:15,140
spin up EAP jboss EAP for me is one

00:19:13,490 --> 00:19:16,910
command I don't have to play with in any

00:19:15,140 --> 00:19:18,740
configuration files I don't have to play

00:19:16,910 --> 00:19:20,230
with an XML and if I want my system and

00:19:18,740 --> 00:19:23,180
can set it up exactly the way our

00:19:20,230 --> 00:19:24,100
company sets it up so what it frees me

00:19:23,180 --> 00:19:26,530
is I don't have to

00:19:24,100 --> 00:19:28,720
devops anymore i could just be deaf and

00:19:26,530 --> 00:19:31,000
i can spin up things quickly and fast

00:19:28,720 --> 00:19:32,580
and say oh that like I won't try no okay

00:19:31,000 --> 00:19:34,929
there's no I'll that really sucked

00:19:32,580 --> 00:19:37,000
delete it and it's gone so there's this

00:19:34,929 --> 00:19:38,740
agility that I get and that's ties right

00:19:37,000 --> 00:19:40,990
into the microservices thing we're not

00:19:38,740 --> 00:19:43,360
waking 20 I want six copies of Redis

00:19:40,990 --> 00:19:45,490
running go and it just doesn't like

00:19:43,360 --> 00:19:47,020
before that would have been like forget

00:19:45,490 --> 00:19:49,150
it just forget it I wouldn't have done

00:19:47,020 --> 00:19:50,980
it I wouldn't have taken that the cost

00:19:49,150 --> 00:19:52,270
to get up that hill unless I had a whole

00:19:50,980 --> 00:19:53,620
bunch of other Linux people with me

00:19:52,270 --> 00:19:55,450
would have been I'm just not doing

00:19:53,620 --> 00:19:57,760
reddits back to my sequel and you know

00:19:55,450 --> 00:19:59,470
tom cat and here i get to experiment and

00:19:57,760 --> 00:20:00,700
play and build really interesting things

00:19:59,470 --> 00:20:03,159
can because containers are so

00:20:00,700 --> 00:20:04,809
lightweight so easy to spin up and so

00:20:03,159 --> 00:20:06,280
easy to destroy yeah so i think it's

00:20:04,809 --> 00:20:08,350
great time you can tell you baby or the

00:20:06,280 --> 00:20:11,169
next question but we'll see okay that's

00:20:08,350 --> 00:20:13,120
how good I am containers pass in the

00:20:11,169 --> 00:20:16,049
future of application development so you

00:20:13,120 --> 00:20:18,669
know is either containers pass or both

00:20:16,049 --> 00:20:19,900
you know as far as sort of you know your

00:20:18,669 --> 00:20:21,130
experience certainly as a developer

00:20:19,900 --> 00:20:23,049
today you know talking to developers

00:20:21,130 --> 00:20:25,840
what's the single most important thing

00:20:23,049 --> 00:20:27,309
that either or both of those has changed

00:20:25,840 --> 00:20:32,020
in terms of developing applications

00:20:27,309 --> 00:20:33,400
moving forward so you wanted to go first

00:20:32,020 --> 00:20:34,870
I know I don't know I wondering well I

00:20:33,400 --> 00:20:38,230
also want to I had lots of time to think

00:20:34,870 --> 00:20:44,190
before now i have to like i would think

00:20:38,230 --> 00:20:46,419
that actually i think has the idea and

00:20:44,190 --> 00:20:48,280
pass has bit had the biggest impact

00:20:46,419 --> 00:20:52,570
right I don't think container says

00:20:48,280 --> 00:20:55,059
happen I think passes had the biggest

00:20:52,570 --> 00:20:56,710
impact because as allowed developers to

00:20:55,059 --> 00:20:58,120
stop thinking about how am I going to

00:20:56,710 --> 00:21:00,460
install this how am I going to get this

00:20:58,120 --> 00:21:02,320
running it's made a very clear line of

00:21:00,460 --> 00:21:03,370
separation might like my therapist says

00:21:02,320 --> 00:21:06,159
if you see any my talks like my

00:21:03,370 --> 00:21:12,460
therapist says clear boundaries infinite

00:21:06,159 --> 00:21:16,140
possibilities right and so ya know if

00:21:12,460 --> 00:21:18,789
you stuck some more deep introspection

00:21:16,140 --> 00:21:21,340
I'll take it but if you actually want to

00:21:18,789 --> 00:21:22,840
inspect the objects yeah yeah so I think

00:21:21,340 --> 00:21:23,980
though that if you think about at first

00:21:22,840 --> 00:21:25,510
I was like what are you talking about

00:21:23,980 --> 00:21:27,280
that sounds that sounds like no

00:21:25,510 --> 00:21:28,330
relationship at all in any relationship

00:21:27,280 --> 00:21:30,190
she was saying this about any

00:21:28,330 --> 00:21:31,960
relationship and if you think about it

00:21:30,190 --> 00:21:34,030
though if everything is if we have very

00:21:31,960 --> 00:21:35,140
clearly delineated boundaries then I

00:21:34,030 --> 00:21:36,340
know I'm on this side and I can do

00:21:35,140 --> 00:21:36,700
anything I want on this side I don't

00:21:36,340 --> 00:21:39,370
have to

00:21:36,700 --> 00:21:41,080
you every single time and the way we do

00:21:39,370 --> 00:21:43,210
app development without this kind of

00:21:41,080 --> 00:21:44,740
stuff now is well I kind of do some

00:21:43,210 --> 00:21:46,030
system and stuff and Oh sis admit I need

00:21:44,740 --> 00:21:47,770
to change this config while I know you

00:21:46,030 --> 00:21:49,270
didn't set that up and then so there's

00:21:47,770 --> 00:21:50,650
all this back and forth between the

00:21:49,270 --> 00:21:52,870
developer in the system in and they have

00:21:50,650 --> 00:21:55,150
to wear too many hats but this way I can

00:21:52,870 --> 00:21:57,790
say the system mins can set up all the

00:21:55,150 --> 00:21:59,470
containers for me I can just use the

00:21:57,790 --> 00:22:01,150
pass to get access to my containers and

00:21:59,470 --> 00:22:04,090
spin up the architecture in the way that

00:22:01,150 --> 00:22:06,430
I want in an approved manner and not

00:22:04,090 --> 00:22:07,840
have to get so I think and I say this in

00:22:06,430 --> 00:22:09,460
all my talks if your application

00:22:07,840 --> 00:22:11,080
developer if you work with them they

00:22:09,460 --> 00:22:13,240
should be playing with paths now given

00:22:11,080 --> 00:22:14,530
the suite of customers that Red Hat has

00:22:13,240 --> 00:22:16,300
that are buying our product the cloud

00:22:14,530 --> 00:22:18,220
foundry has that all the passes have

00:22:16,300 --> 00:22:20,050
buying their product their big large

00:22:18,220 --> 00:22:21,790
enterprises and they're coming to us

00:22:20,050 --> 00:22:23,860
saying when you coming out with a docker

00:22:21,790 --> 00:22:26,530
version I need the docker version like

00:22:23,860 --> 00:22:28,210
then and so I think you are doing your

00:22:26,530 --> 00:22:30,370
developers a disservice if they're not

00:22:28,210 --> 00:22:31,420
playing with the past and there's a

00:22:30,370 --> 00:22:32,920
reason for that so when we talk about

00:22:31,420 --> 00:22:34,060
the feature of application development I

00:22:32,920 --> 00:22:35,920
think the most interesting thing is that

00:22:34,060 --> 00:22:37,600
every Enterprise is becoming a software

00:22:35,920 --> 00:22:39,880
company right so everybody's heard and

00:22:37,600 --> 00:22:41,200
recent software is eating the world you

00:22:39,880 --> 00:22:43,420
know you could take that a step further

00:22:41,200 --> 00:22:45,130
and say if you're not available in the

00:22:43,420 --> 00:22:46,480
cloud right if you don't have if you

00:22:45,130 --> 00:22:48,400
don't have a pis if you can't be

00:22:46,480 --> 00:22:50,950
connected to you don't exist like not

00:22:48,400 --> 00:22:52,720
having a website in 1995 so the volume

00:22:50,950 --> 00:22:55,240
of new app development that has to be

00:22:52,720 --> 00:22:58,090
done is unprecedented and we are never

00:22:55,240 --> 00:22:59,740
going to have enough app developers to

00:22:58,090 --> 00:23:01,570
meet all the demands right the demand is

00:22:59,740 --> 00:23:03,550
exploding there's always going to be a

00:23:01,570 --> 00:23:05,770
limited supply of systems engineers and

00:23:03,550 --> 00:23:07,240
sis admin's we're going to have more and

00:23:05,770 --> 00:23:09,190
more app developers who have less and

00:23:07,240 --> 00:23:10,930
less time to write more and more code so

00:23:09,190 --> 00:23:13,150
the more that we can simplify their life

00:23:10,930 --> 00:23:14,500
the better off we are so the future of

00:23:13,150 --> 00:23:16,270
application development is that the

00:23:14,500 --> 00:23:18,010
enterprise boundary not just all the

00:23:16,270 --> 00:23:20,230
junk apps that you have to run HR

00:23:18,010 --> 00:23:21,760
internally but the definition of does

00:23:20,230 --> 00:23:24,010
the enterprise exist or not is going to

00:23:21,760 --> 00:23:25,420
be defined by did an app developer write

00:23:24,010 --> 00:23:27,160
that service and make it available well

00:23:25,420 --> 00:23:30,070
I so that's that's I think we're adding

00:23:27,160 --> 00:23:31,540
to what Sam and to what Sam said uh you

00:23:30,070 --> 00:23:33,460
know just really looking at how people

00:23:31,540 --> 00:23:34,750
build today too right like people aren't

00:23:33,460 --> 00:23:36,280
really building applications from

00:23:34,750 --> 00:23:37,900
scratch as much as they were in the past

00:23:36,280 --> 00:23:40,360
they're assembling these applications

00:23:37,900 --> 00:23:42,370
and pass provides that kind of safe

00:23:40,360 --> 00:23:45,580
sandbox environment with the tools that

00:23:42,370 --> 00:23:47,740
are required to actually you know build

00:23:45,580 --> 00:23:48,610
that up whether it be from scratch or

00:23:47,740 --> 00:23:50,950
whether it be you

00:23:48,610 --> 00:23:52,480
from a set of you know code that they

00:23:50,950 --> 00:23:54,040
pulled from github or something you know

00:23:52,480 --> 00:23:55,929
something along those lines you know I

00:23:54,040 --> 00:23:57,370
think that looking at the number of

00:23:55,929 --> 00:23:59,049
developers that are actually building

00:23:57,370 --> 00:24:00,370
versus the number that are assembling

00:23:59,049 --> 00:24:03,580
you're looking at massively different

00:24:00,370 --> 00:24:05,559
skill sets right and so being able to

00:24:03,580 --> 00:24:07,030
have passed environments with you know

00:24:05,559 --> 00:24:08,290
multiple choices for language like

00:24:07,030 --> 00:24:09,220
you're saying oh you know node I don't

00:24:08,290 --> 00:24:10,750
want to use that let's throw it away

00:24:09,220 --> 00:24:11,980
let's go back to what I know right like

00:24:10,750 --> 00:24:14,860
the ability to do that is just

00:24:11,980 --> 00:24:16,150
phenomenal so Greg yeah it was important

00:24:14,860 --> 00:24:19,059
thing for the future of application but

00:24:16,150 --> 00:24:21,549
I think it's I think the folks will be

00:24:19,059 --> 00:24:23,590
touching on a pretty well here we're

00:24:21,549 --> 00:24:26,200
going to see this this specialization of

00:24:23,590 --> 00:24:27,730
the operations function and I think

00:24:26,200 --> 00:24:29,740
that's an incredibly important and

00:24:27,730 --> 00:24:31,270
powerful thing so you can have a small

00:24:29,740 --> 00:24:33,580
number of specialized people that exist

00:24:31,270 --> 00:24:36,309
in an environment that provides you know

00:24:33,580 --> 00:24:37,870
infrastructure provisioning a set of you

00:24:36,309 --> 00:24:40,510
know a clustered environment instead of

00:24:37,870 --> 00:24:42,070
common services the set of things that

00:24:40,510 --> 00:24:43,570
the everyday developer needs to do their

00:24:42,070 --> 00:24:44,919
work and those are going to be

00:24:43,570 --> 00:24:47,440
specialized functions and they're going

00:24:44,919 --> 00:24:49,030
to be you know people that understand

00:24:47,440 --> 00:24:51,520
the systems and they curate manager

00:24:49,030 --> 00:24:53,740
systems they're going to be few and

00:24:51,520 --> 00:24:55,780
they're going to be effective and of

00:24:53,740 --> 00:24:57,850
great tools and then I think we're going

00:24:55,780 --> 00:24:59,620
to start to see a much stronger

00:24:57,850 --> 00:25:01,600
alignment of the individual

00:24:59,620 --> 00:25:03,070
technologists with the business and I

00:25:01,600 --> 00:25:05,020
think a lot of what we're doing here and

00:25:03,070 --> 00:25:07,780
a lot of a lot of these texts

00:25:05,020 --> 00:25:09,419
capabilities and technologies are going

00:25:07,780 --> 00:25:12,340
to kind of reduce the tyranny of

00:25:09,419 --> 00:25:15,160
centralized IT so you can actually have

00:25:12,340 --> 00:25:17,590
tools where it's safe for a technologist

00:25:15,160 --> 00:25:19,960
to be embedded in a business department

00:25:17,590 --> 00:25:21,370
they're able to you know start from a

00:25:19,960 --> 00:25:23,650
safe foundation of technology that's

00:25:21,370 --> 00:25:25,030
provided by set of core folks and they

00:25:23,650 --> 00:25:27,100
can work much more quickly and much more

00:25:25,030 --> 00:25:28,900
efficiently and perhaps even be far less

00:25:27,100 --> 00:25:30,100
specialized in terms of their skill set

00:25:28,900 --> 00:25:31,240
because you have these other

00:25:30,100 --> 00:25:32,679
technologies behind the scene that are

00:25:31,240 --> 00:25:33,700
creating this common environment is

00:25:32,679 --> 00:25:35,559
common services these common

00:25:33,700 --> 00:25:38,110
capabilities and then we're going to

00:25:35,559 --> 00:25:39,790
start to see a much stronger set of

00:25:38,110 --> 00:25:40,990
overlay technologies that exist on top

00:25:39,790 --> 00:25:43,200
of this because everything's running in

00:25:40,990 --> 00:25:46,840
these very introspective all principles

00:25:43,200 --> 00:25:48,429
controllable atoms that lets things that

00:25:46,840 --> 00:25:50,260
have to be centralized like governance

00:25:48,429 --> 00:25:51,910
risk management compliance etc be

00:25:50,260 --> 00:25:54,190
centralized I think this is really going

00:25:51,910 --> 00:25:55,929
to be pulled together by you know these

00:25:54,190 --> 00:25:57,220
new container technologies I can't

00:25:55,929 --> 00:25:57,980
personally separate container and pass

00:25:57,220 --> 00:25:59,390
any more like

00:25:57,980 --> 00:26:01,910
it's it's almost a nonsensical

00:25:59,390 --> 00:26:03,380
separation um you know past was always

00:26:01,910 --> 00:26:05,150
container based what we just have is

00:26:03,380 --> 00:26:07,760
more principled technologies that are

00:26:05,150 --> 00:26:09,710
more accessible these days and I think I

00:26:07,760 --> 00:26:11,540
think that's sort of that sort of

00:26:09,710 --> 00:26:12,559
separation and specialization is going

00:26:11,540 --> 00:26:14,030
to be a very powerful thing for the

00:26:12,559 --> 00:26:16,160
business because can I give one example

00:26:14,030 --> 00:26:18,169
of that no but you're going to get the

00:26:16,160 --> 00:26:19,549
next question oh but it was a great

00:26:18,169 --> 00:26:21,230
example as an eye-opening experience I'm

00:26:19,549 --> 00:26:25,100
sure I'm gonna tie it into my question

00:26:21,230 --> 00:26:26,780
no matter how okay so one of the things

00:26:25,100 --> 00:26:29,030
that Tim mentioned this earlier in terms

00:26:26,780 --> 00:26:30,950
of these the Venn diagrams you know we

00:26:29,030 --> 00:26:32,480
were talking about sort of to Craig's

00:26:30,950 --> 00:26:35,600
point in terms of Heiser distinct

00:26:32,480 --> 00:26:37,040
between paths and containers you know

00:26:35,600 --> 00:26:39,410
one of the things that we get questions

00:26:37,040 --> 00:26:40,790
about all the time all right or not just

00:26:39,410 --> 00:26:43,940
containers and past but we start looking

00:26:40,790 --> 00:26:45,380
at you know things like me sews the you

00:26:43,940 --> 00:26:47,299
know infrastructures or service pieces

00:26:45,380 --> 00:26:49,460
that underlie most of this there are a

00:26:47,299 --> 00:26:52,940
lot of moving pieces here right so the

00:26:49,460 --> 00:26:53,720
question for you sir is when you you

00:26:52,940 --> 00:26:55,640
know when you're out talking to

00:26:53,720 --> 00:26:58,570
customers you know what is your sort of

00:26:55,640 --> 00:27:01,250
assessment of how well they're digesting

00:26:58,570 --> 00:27:02,929
what all the pieces are and how they put

00:27:01,250 --> 00:27:05,299
them together correctly okay to get

00:27:02,929 --> 00:27:07,120
where they need to go I'm not going to

00:27:05,299 --> 00:27:10,610
tie in my other part I didn't think it

00:27:07,120 --> 00:27:12,410
ok so I think one of the things that

00:27:10,610 --> 00:27:14,480
I've seen most with customers is nobody

00:27:12,410 --> 00:27:16,520
is at the same place I mean and that's

00:27:14,480 --> 00:27:19,250
pretty simple to say but what that means

00:27:16,520 --> 00:27:22,280
is I think anyone who says this is the

00:27:19,250 --> 00:27:24,640
way you have to do it is selling you

00:27:22,280 --> 00:27:26,960
something and not in a good way and

00:27:24,640 --> 00:27:28,730
because some people say like even we get

00:27:26,960 --> 00:27:30,980
people can't you do use ansible and chef

00:27:28,730 --> 00:27:32,210
to do what your PA's does yeah you could

00:27:30,980 --> 00:27:33,710
probably pretty much do the same thing I

00:27:32,210 --> 00:27:35,390
mean it's not it takes more work and

00:27:33,710 --> 00:27:36,650
it's more customization but there's

00:27:35,390 --> 00:27:39,200
nothing that's there's many different

00:27:36,650 --> 00:27:43,010
ways to get to this same point right and

00:27:39,200 --> 00:27:45,320
I think some of it is people are scared

00:27:43,010 --> 00:27:47,000
people are excited and scared about the

00:27:45,320 --> 00:27:48,470
cloud at the same time right because

00:27:47,000 --> 00:27:50,450
it's a completely new way of doing

00:27:48,470 --> 00:27:52,760
things yep so if we were to go in or if

00:27:50,450 --> 00:27:54,080
I were to go and say yeah scrapple I

00:27:52,760 --> 00:27:55,970
mean keep your hard machines but then

00:27:54,080 --> 00:27:58,100
scrap all the individual OSS and you

00:27:55,970 --> 00:27:59,090
should put OpenStack and then open shift

00:27:58,100 --> 00:28:01,940
on top of that and that's the only

00:27:59,090 --> 00:28:02,809
proper way to run that either I beat I

00:28:01,940 --> 00:28:04,190
think I'd be doing them a great

00:28:02,809 --> 00:28:06,350
disservice because they take them a long

00:28:04,190 --> 00:28:07,970
time unless they were already in that

00:28:06,350 --> 00:28:09,970
spot like we're ready for infrastructure

00:28:07,970 --> 00:28:12,460
as a service and we're ready for past

00:28:09,970 --> 00:28:13,810
here's the products we have for you but

00:28:12,460 --> 00:28:15,400
sometimes when some customers is like

00:28:13,810 --> 00:28:16,690
let's start with open ship right you

00:28:15,400 --> 00:28:18,100
guys are doing a lot of application

00:28:16,690 --> 00:28:20,200
development and this can just run

00:28:18,100 --> 00:28:21,190
anywhere that rels running so you

00:28:20,200 --> 00:28:22,390
already have some real machines just

00:28:21,190 --> 00:28:26,230
throw it on there and see how that works

00:28:22,390 --> 00:28:28,150
for your company so I and then whenever

00:28:26,230 --> 00:28:29,110
I ask developers it shows how many of

00:28:28,150 --> 00:28:30,880
you know what infrastructure is a

00:28:29,110 --> 00:28:32,950
service versus platforms of services I

00:28:30,880 --> 00:28:34,720
don't have the nice graphs that James

00:28:32,950 --> 00:28:37,750
has because I don't have a straight feed

00:28:34,720 --> 00:28:40,210
out of my head but I would say the graph

00:28:37,750 --> 00:28:43,120
looks something in terms of those who

00:28:40,210 --> 00:28:44,320
actually know the distinction it looks

00:28:43,120 --> 00:28:46,300
something like we still have a long way

00:28:44,320 --> 00:28:48,310
to go well the didja stations gonna

00:28:46,300 --> 00:28:49,660
become less and less materials but see I

00:28:48,310 --> 00:28:50,950
think okay so that Laura and I had a

00:28:49,660 --> 00:28:54,430
Twitter battling with us over the other

00:28:50,950 --> 00:28:56,200
day I actually think I actually think

00:28:54,430 --> 00:28:57,580
the distinction between infrastructure

00:28:56,200 --> 00:28:59,770
reservist in the platform's of service

00:28:57,580 --> 00:29:02,260
and I don't think platform as a service

00:28:59,770 --> 00:29:04,300
is a nonsensical term first and then

00:29:02,260 --> 00:29:06,190
second I actually think it's a very good

00:29:04,300 --> 00:29:07,780
distinction because it actually sets up

00:29:06,190 --> 00:29:08,910
with that clear line of separation that

00:29:07,780 --> 00:29:10,900
you were talking about before

00:29:08,910 --> 00:29:13,600
infrastructure as a service to me is you

00:29:10,900 --> 00:29:15,370
deal with infrastructure like you are

00:29:13,600 --> 00:29:17,350
dealing with provisioning machines and

00:29:15,370 --> 00:29:19,300
all that kind of stuff and platform as a

00:29:17,350 --> 00:29:20,560
service I'm an application developer I

00:29:19,300 --> 00:29:22,390
don't want to think about the machines

00:29:20,560 --> 00:29:24,550
may be a bit from the application

00:29:22,390 --> 00:29:26,290
developers perspective it is a big

00:29:24,550 --> 00:29:28,480
distinction may be from the company's

00:29:26,290 --> 00:29:30,010
perspective it's not but as an

00:29:28,480 --> 00:29:31,120
application developer I don't want to

00:29:30,010 --> 00:29:33,730
work with infrastructure as a service

00:29:31,120 --> 00:29:35,860
that gets me right back into I have to

00:29:33,730 --> 00:29:38,470
admit linux machine is not official

00:29:35,860 --> 00:29:43,120
dichotomy can I good my turn to disagree

00:29:38,470 --> 00:29:44,710
with you good so I see this as a as a

00:29:43,120 --> 00:29:47,380
pretty artificial dichotomy and and the

00:29:44,710 --> 00:29:49,180
reality of most real-world deployments I

00:29:47,380 --> 00:29:53,050
see is they don't fit nicely into either

00:29:49,180 --> 00:29:55,060
and you know we've you know I'm I'm sort

00:29:53,050 --> 00:29:57,640
of involved in the evolution of App

00:29:55,060 --> 00:29:58,690
Engine which is a traditional paths I'm

00:29:57,640 --> 00:30:01,450
involved in the evolution of compute

00:29:58,690 --> 00:30:02,980
engine and everything in between and you

00:30:01,450 --> 00:30:04,960
know a lot of our customers you know

00:30:02,980 --> 00:30:07,180
they hit this artificial cliff with the

00:30:04,960 --> 00:30:09,820
past so it's you know the way the people

00:30:07,180 --> 00:30:11,530
have defined past to date it offers you

00:30:09,820 --> 00:30:13,600
know you trade off flexibility for

00:30:11,530 --> 00:30:14,770
opinionation' and it works very well to

00:30:13,600 --> 00:30:16,510
a certain point and then suddenly hit

00:30:14,770 --> 00:30:18,160
this list experiential cliff and you

00:30:16,510 --> 00:30:20,020
tend to have to do something else and

00:30:18,160 --> 00:30:21,490
the problem with that you know I tend to

00:30:20,020 --> 00:30:23,080
think about this and my experience with

00:30:21,490 --> 00:30:25,809
it has been it's like a little hole

00:30:23,080 --> 00:30:27,700
water balloon right the minute you you

00:30:25,809 --> 00:30:29,649
have this artificial you know cliff that

00:30:27,700 --> 00:30:31,899
exists between the platform and the

00:30:29,649 --> 00:30:33,429
infrastructure pieces you're forcing the

00:30:31,899 --> 00:30:35,200
developers to you know step outside of

00:30:33,429 --> 00:30:36,250
the past and do something else and while

00:30:35,200 --> 00:30:37,690
it might still be easier to do in the

00:30:36,250 --> 00:30:39,850
past they have to invest in an

00:30:37,690 --> 00:30:42,070
infrastructure provisioning story puppet

00:30:39,850 --> 00:30:43,510
or share for ansible assault stack to

00:30:42,070 --> 00:30:45,159
actually do the management they have to

00:30:43,510 --> 00:30:46,990
start you know dealing with that and

00:30:45,159 --> 00:30:49,419
eventually they like well why would I do

00:30:46,990 --> 00:30:50,620
this when I can just do this and so I

00:30:49,419 --> 00:30:52,029
think it's really important to start

00:30:50,620 --> 00:30:53,769
thinking about a more natural continuum

00:30:52,029 --> 00:30:55,059
that exists between these you do have

00:30:53,769 --> 00:30:56,950
infrastructure as a service and you do

00:30:55,059 --> 00:30:58,059
have people that have PMS and ya folks

00:30:56,950 --> 00:30:59,889
are always going to have this highly

00:30:58,059 --> 00:31:02,409
optimized kernel something to support

00:30:59,889 --> 00:31:04,450
the specific workload that they want to

00:31:02,409 --> 00:31:06,370
run in this appliance like environment

00:31:04,450 --> 00:31:07,539
at the other end of the spectrum you

00:31:06,370 --> 00:31:09,549
have people that just one run my code

00:31:07,539 --> 00:31:10,600
but I do think that there are some

00:31:09,549 --> 00:31:13,779
intermediate steps that are worth

00:31:10,600 --> 00:31:15,850
recognizing I think of the cluster as a

00:31:13,779 --> 00:31:17,620
first class thing I think there's this

00:31:15,850 --> 00:31:20,200
world where you go from infrastructure

00:31:17,620 --> 00:31:22,360
ops 2 cluster ops where you know you

00:31:20,200 --> 00:31:24,159
don't necessarily have a fully curated

00:31:22,360 --> 00:31:25,690
story but you have a clustered

00:31:24,159 --> 00:31:28,210
environment instead of common services

00:31:25,690 --> 00:31:30,730
and you know it's sort of the first step

00:31:28,210 --> 00:31:33,309
into the logical computing domain and I

00:31:30,730 --> 00:31:34,840
think that it's it's dangerous to to try

00:31:33,309 --> 00:31:36,909
to draw an artificial line between the

00:31:34,840 --> 00:31:38,230
two because there are situations where

00:31:36,909 --> 00:31:40,120
you know what I really want to do is I

00:31:38,230 --> 00:31:42,399
want to run you know precisely one

00:31:40,120 --> 00:31:44,250
container on you know one machine and I

00:31:42,399 --> 00:31:46,419
don't I don't want you to tell me what

00:31:44,250 --> 00:31:48,220
development environment need to run out

00:31:46,419 --> 00:31:51,490
I don't want you to tell me you know

00:31:48,220 --> 00:31:53,110
what storage it backs onto and so I

00:31:51,490 --> 00:31:54,220
think it is not official dichotomy I

00:31:53,110 --> 00:31:56,590
think what you're going to start seeing

00:31:54,220 --> 00:32:00,730
as as our as these technologies evolve

00:31:56,590 --> 00:32:02,440
is ISM as a series of paths through the

00:32:00,730 --> 00:32:04,690
stack rather than a set of sort of

00:32:02,440 --> 00:32:07,389
striated layers so you know I can use

00:32:04,690 --> 00:32:09,250
this or I can use this or I can use this

00:32:07,389 --> 00:32:11,529
or I can use this and I can use them all

00:32:09,250 --> 00:32:13,389
together I'm using a sort of common set

00:32:11,529 --> 00:32:14,889
of principles that a title together and

00:32:13,389 --> 00:32:16,450
I think I think is gonna be very

00:32:14,889 --> 00:32:17,919
interesting but wait so what are you

00:32:16,450 --> 00:32:20,769
spit when you say anything I'll it's

00:32:17,919 --> 00:32:22,440
Lauren well I'm trying to figure out

00:32:20,769 --> 00:32:26,700
what we arguing about not

00:32:22,440 --> 00:32:28,529
really haha a little I can't help we

00:32:26,700 --> 00:32:30,659
were arguing about you we were arguing

00:32:28,529 --> 00:32:35,250
about whether pass was a nonsensical

00:32:30,659 --> 00:32:36,539
terminal I don't think they were we

00:32:35,250 --> 00:32:38,429
thought there was some I'll tell you why

00:32:36,539 --> 00:32:40,110
you could Twitter battle that after the

00:32:38,429 --> 00:32:41,610
panel as I got it when the package i

00:32:40,110 --> 00:32:43,409
think i think you know just kind of to

00:32:41,610 --> 00:32:45,029
chime in i think that this that's a

00:32:43,409 --> 00:32:46,830
perfect example right here both of you

00:32:45,029 --> 00:32:48,690
guys you know kind of providing both

00:32:46,830 --> 00:32:51,059
your perspectives I mean the technology

00:32:48,690 --> 00:32:52,019
is evolving you know I think that you

00:32:51,059 --> 00:32:53,789
know what you're talking about is

00:32:52,019 --> 00:32:55,679
totally feasible right but the

00:32:53,789 --> 00:32:57,750
organizations have to catch up you know

00:32:55,679 --> 00:32:59,639
a lot of times what I find walking into

00:32:57,750 --> 00:33:00,990
customers is that I work with one group

00:32:59,639 --> 00:33:02,639
of customers and a large enterprise

00:33:00,990 --> 00:33:04,320
company and I work with another group of

00:33:02,639 --> 00:33:06,360
customers in the same enterprise company

00:33:04,320 --> 00:33:10,139
right and they sit inside different

00:33:06,360 --> 00:33:12,179
departments and they want to use you no

00:33:10,139 --> 00:33:13,919
one wants to use one sort of you know

00:33:12,179 --> 00:33:15,960
pass platform another wants to use

00:33:13,919 --> 00:33:18,960
another one and that's great that's fine

00:33:15,960 --> 00:33:21,210
by me it's really what the skill set you

00:33:18,960 --> 00:33:23,549
know what they want in that box in that

00:33:21,210 --> 00:33:25,799
container with those tools right to make

00:33:23,549 --> 00:33:29,429
them successful my jobs to enable that

00:33:25,799 --> 00:33:32,850
great I think that organizationally we

00:33:29,429 --> 00:33:33,570
have to start looking at you know as you

00:33:32,850 --> 00:33:35,100
know we were talking about how

00:33:33,570 --> 00:33:37,080
technology is going to transform and

00:33:35,100 --> 00:33:38,519
there's these more kind of POD like

00:33:37,080 --> 00:33:41,039
structures that are tied together with

00:33:38,519 --> 00:33:42,629
you know specific parameters yet they

00:33:41,039 --> 00:33:44,750
all kind of fit together you know we're

00:33:42,629 --> 00:33:46,740
not there as an organization yet

00:33:44,750 --> 00:33:48,600
organizations aren't there period and

00:33:46,740 --> 00:33:50,730
there may happen they're massive silos

00:33:48,600 --> 00:33:53,070
across the board when you look at you

00:33:50,730 --> 00:33:56,129
know networking and storage and compute

00:33:53,070 --> 00:33:57,629
and you know then up the stack to active

00:33:56,129 --> 00:33:59,399
even an app dev and then we're to

00:33:57,629 --> 00:34:01,590
security fit in right i mean you have

00:33:59,399 --> 00:34:03,870
it's not just like oh I can use a pass

00:34:01,590 --> 00:34:05,759
platform and it's magic great there's

00:34:03,870 --> 00:34:08,270
all this underlying stuff that has to go

00:34:05,759 --> 00:34:11,760
into it and people don't recognize that

00:34:08,270 --> 00:34:13,649
which leases actually who you know I

00:34:11,760 --> 00:34:14,700
think the next question which is 1 i'm

00:34:13,649 --> 00:34:16,679
actually very curious to hear the

00:34:14,700 --> 00:34:17,639
response is on bigoted we all spend so

00:34:16,679 --> 00:34:19,919
much time whether its infrastructure

00:34:17,639 --> 00:34:21,750
platform containers and sort of all

00:34:19,919 --> 00:34:23,790
these wonderful things you know

00:34:21,750 --> 00:34:25,409
particularly given the days when i was

00:34:23,790 --> 00:34:27,480
developing things like supplied easy

00:34:25,409 --> 00:34:29,339
right you know you have way more cool

00:34:27,480 --> 00:34:31,649
the you know sort of available to you

00:34:29,339 --> 00:34:33,500
you know that the huge library of open

00:34:31,649 --> 00:34:35,510
source code the infrastructure men's

00:34:33,500 --> 00:34:36,830
it's over so life's great but on the

00:34:35,510 --> 00:34:38,300
flip side there's those frustrations

00:34:36,830 --> 00:34:41,240
right there's still some things that

00:34:38,300 --> 00:34:42,649
don't necessarily you know work the way

00:34:41,240 --> 00:34:44,810
that you want so like when you guys

00:34:42,649 --> 00:34:48,010
project forward you know as you look at

00:34:44,810 --> 00:34:51,260
as you look at the application

00:34:48,010 --> 00:34:52,909
development experience what's what's

00:34:51,260 --> 00:34:53,960
sort of most frustrating for you you

00:34:52,909 --> 00:34:56,780
know what's the piece where you're

00:34:53,960 --> 00:34:58,490
you're still focused on this just is not

00:34:56,780 --> 00:35:00,410
where I want it to be and we need to

00:34:58,490 --> 00:35:02,900
move that ball forward so in many ways

00:35:00,410 --> 00:35:04,130
my first program job was the easiest and

00:35:02,900 --> 00:35:05,780
most satisfying because I had an

00:35:04,130 --> 00:35:08,870
environment where I could hit f5 and it

00:35:05,780 --> 00:35:10,550
ran right it was local on my box there

00:35:08,870 --> 00:35:12,290
wasn't the whole you know oh it works on

00:35:10,550 --> 00:35:14,780
my machine right it was just it was just

00:35:12,290 --> 00:35:16,460
very simple so as we get these very

00:35:14,780 --> 00:35:17,900
large scale problems how do you do

00:35:16,460 --> 00:35:19,850
application development and deployment

00:35:17,900 --> 00:35:21,680
in the data center not really a problem

00:35:19,850 --> 00:35:23,360
that most developers have right you care

00:35:21,680 --> 00:35:25,250
about design you care about affordances

00:35:23,360 --> 00:35:26,960
you care about modeling the problem

00:35:25,250 --> 00:35:29,080
domain correctly appropriate

00:35:26,960 --> 00:35:31,250
representation of the users concerns

00:35:29,080 --> 00:35:33,980
matching that into the data center is

00:35:31,250 --> 00:35:36,440
kind of rough so things like lattice is

00:35:33,980 --> 00:35:38,570
a new project within the cloud foundry

00:35:36,440 --> 00:35:40,700
umbrella say how do we solve this

00:35:38,570 --> 00:35:42,800
problem down to a small scale so that

00:35:40,700 --> 00:35:44,390
you have the equivalent of deploying to

00:35:42,800 --> 00:35:46,550
a data center but it's just right on

00:35:44,390 --> 00:35:48,380
your laptop I think Steve was saying you

00:35:46,550 --> 00:35:50,000
know similar things happening in an open

00:35:48,380 --> 00:35:51,760
shift it's just logical because you got

00:35:50,000 --> 00:35:54,170
to take these galactic scale problems

00:35:51,760 --> 00:35:55,730
and solve them on your desktop that's

00:35:54,170 --> 00:35:57,680
probably the biggest gap and it's been

00:35:55,730 --> 00:35:59,330
the most painful part of Franklin

00:35:57,680 --> 00:36:00,920
internet development since you know the

00:35:59,330 --> 00:36:02,480
late 90s so like that's starting to get

00:36:00,920 --> 00:36:05,210
solved I'd say that's that's very fair

00:36:02,480 --> 00:36:10,070
Lauren what's the biggest issue you see

00:36:05,210 --> 00:36:12,440
I think the one that I see is one when

00:36:10,070 --> 00:36:14,030
you're taking things like you know past

00:36:12,440 --> 00:36:16,700
and infrastructure as a service right

00:36:14,030 --> 00:36:18,380
the ability to let's say you're building

00:36:16,700 --> 00:36:20,120
an application and it's not you know

00:36:18,380 --> 00:36:21,680
giving you the optimal performance that

00:36:20,120 --> 00:36:24,200
you want it's actually the visibility

00:36:21,680 --> 00:36:26,450
down to the layer that you need to get

00:36:24,200 --> 00:36:27,920
it down to in order to tweak that you

00:36:26,450 --> 00:36:29,990
know for those three lines of note or

00:36:27,920 --> 00:36:31,430
whatever on your website you know that

00:36:29,990 --> 00:36:33,980
could be you know something that's

00:36:31,430 --> 00:36:36,770
actually happening in a router great in

00:36:33,980 --> 00:36:38,000
terms of you know the effectiveness you

00:36:36,770 --> 00:36:39,230
know and it's affecting the speed of

00:36:38,000 --> 00:36:40,970
your website when you get to the

00:36:39,230 --> 00:36:41,960
large-scale websites it's millions and

00:36:40,970 --> 00:36:44,330
millions of dollars per millisecond

00:36:41,960 --> 00:36:46,030
right and so you want that to run the

00:36:44,330 --> 00:36:48,220
lack of that visibility

00:36:46,030 --> 00:36:50,730
is is definitely a problem classy across

00:36:48,220 --> 00:36:53,680
the board and the inability of

00:36:50,730 --> 00:36:55,990
application developers to have access to

00:36:53,680 --> 00:36:57,970
that or even speak the same languages

00:36:55,990 --> 00:37:00,250
you know that work administrators to

00:36:57,970 --> 00:37:01,840
even fix those problems it's it's a huge

00:37:00,250 --> 00:37:04,330
gap and technology has to bridge that

00:37:01,840 --> 00:37:05,770
gap it can't be it's not a people

00:37:04,330 --> 00:37:11,770
problem it needs to be fixed by

00:37:05,770 --> 00:37:13,710
technology so I'm torn there's just

00:37:11,770 --> 00:37:16,720
these two things are going to talk about

00:37:13,710 --> 00:37:18,760
one the one challenge that endlessly

00:37:16,720 --> 00:37:20,590
frustrates me is is this dichotomy this

00:37:18,760 --> 00:37:22,060
is just personal but dichotomy that

00:37:20,590 --> 00:37:23,980
exists between the world inside group in

00:37:22,060 --> 00:37:27,940
the world outside who the one inside

00:37:23,980 --> 00:37:30,160
Google is it has moon lasers and you

00:37:27,940 --> 00:37:32,110
know insane technology that's incredibly

00:37:30,160 --> 00:37:33,790
complicated and hard to use like it's

00:37:32,110 --> 00:37:35,460
it's it's it's it's phenomenally

00:37:33,790 --> 00:37:38,440
powerful it's bit spectacularly awesome

00:37:35,460 --> 00:37:40,300
the world outside Google is a relatively

00:37:38,440 --> 00:37:42,700
simple set of tools that are much easier

00:37:40,300 --> 00:37:44,590
to use and so the thing that's kind of

00:37:42,700 --> 00:37:45,820
endlessly interesting and treating to me

00:37:44,590 --> 00:37:48,640
is to did you try to bring those tools

00:37:45,820 --> 00:37:51,790
together like create you know you know

00:37:48,640 --> 00:37:55,000
moon laser you know self-regulating AI

00:37:51,790 --> 00:37:57,280
driven management experiences in in a

00:37:55,000 --> 00:37:59,110
world that's accessible Delta they

00:37:57,280 --> 00:38:00,390
actually wanted to say that what was it

00:37:59,110 --> 00:38:03,430
going to be an actual answer here is

00:38:00,390 --> 00:38:06,970
it's so hard to reuse software and in a

00:38:03,430 --> 00:38:08,650
in a reliable trustworthy way it's so

00:38:06,970 --> 00:38:09,790
easy to find something and it's almost

00:38:08,650 --> 00:38:12,250
impossible to know where it came from

00:38:09,790 --> 00:38:13,360
and it's just endlessly frustrating like

00:38:12,250 --> 00:38:16,660
we have to do a better job with

00:38:13,360 --> 00:38:20,530
provenance and attestation stuff like we

00:38:16,660 --> 00:38:21,700
just have to do it so for me containers

00:38:20,530 --> 00:38:25,810
are the thing that are frustrating oh

00:38:21,700 --> 00:38:29,980
just kidding oh yeah actually it is the

00:38:25,810 --> 00:38:31,390
paradox of choice I would say okay is so

00:38:29,980 --> 00:38:33,940
I've started building microservice apps

00:38:31,390 --> 00:38:36,250
now so first up it would have been Sam

00:38:33,940 --> 00:38:38,230
stuff but Sam said it first so I'm going

00:38:36,250 --> 00:38:40,510
to do an addendum and the addendum is

00:38:38,230 --> 00:38:42,520
it's the paradox of choice stuff which

00:38:40,510 --> 00:38:44,830
is I've started right making

00:38:42,520 --> 00:38:46,300
microservices apps great I get this how

00:38:44,830 --> 00:38:47,320
do i wire this together what's the best

00:38:46,300 --> 00:38:49,060
practices I've got all these little

00:38:47,320 --> 00:38:50,440
micro services where all my log files

00:38:49,060 --> 00:38:52,120
going how do I monitor this how do i

00:38:50,440 --> 00:38:54,040
load test this and then the other thing

00:38:52,120 --> 00:38:55,870
is just exactly what you said you go on

00:38:54,040 --> 00:38:57,660
docker hub you search for wordpress how

00:38:55,870 --> 00:38:59,039
many different docker images do you get

00:38:57,660 --> 00:39:00,720
which one is the right one to use and

00:38:59,039 --> 00:39:03,119
it's the big same problem i always had

00:39:00,720 --> 00:39:04,799
with a mis i put in an ami which how do

00:39:03,119 --> 00:39:07,440
i know what like the whole curate like

00:39:04,799 --> 00:39:09,809
it's keeping all these incredibly moving

00:39:07,440 --> 00:39:11,309
things and like yes as a developer now

00:39:09,809 --> 00:39:13,170
my job is to understand which are the

00:39:11,309 --> 00:39:15,450
Blessed images and the Blessed

00:39:13,170 --> 00:39:17,700
architectures and these things that no

00:39:15,450 --> 00:39:20,280
one's really solved yet in a distributed

00:39:17,700 --> 00:39:22,109
space at a smaller scale so it's great

00:39:20,280 --> 00:39:23,789
when Facebook Google get up and talk

00:39:22,109 --> 00:39:25,650
about how they solve these things but

00:39:23,789 --> 00:39:27,990
for most developers their scales not

00:39:25,650 --> 00:39:29,700
Google into Facebook and the novel of

00:39:27,990 --> 00:39:31,380
engineering talent and numbers that they

00:39:29,700 --> 00:39:33,299
have are not the same so I can't just

00:39:31,380 --> 00:39:35,549
say hey I'll take five people off of

00:39:33,299 --> 00:39:37,260
this team and did build a distributed

00:39:35,549 --> 00:39:40,140
logging system it's not it's different

00:39:37,260 --> 00:39:43,500
right but even but even then right the

00:39:40,140 --> 00:39:44,970
myth of isolation right creeps in oh we

00:39:43,500 --> 00:39:46,920
can use services that are just in our

00:39:44,970 --> 00:39:48,329
own enterprise Oh baloney right you're

00:39:46,920 --> 00:39:49,950
going to use some services or come off

00:39:48,329 --> 00:39:52,200
of Dropbox then we'll come up with other

00:39:49,950 --> 00:39:54,390
parts of the public internet so I think

00:39:52,200 --> 00:39:56,819
we can all agree distributed debugging

00:39:54,390 --> 00:39:58,650
as a disaster it's always been a

00:39:56,819 --> 00:40:00,809
disaster does it always have to be a

00:39:58,650 --> 00:40:02,640
disaster we don't know right there was

00:40:00,809 --> 00:40:04,500
you know well you know one day

00:40:02,640 --> 00:40:07,410
Zarathustra spoke and then we had DTrace

00:40:04,500 --> 00:40:09,329
thank goodness but now in a world of you

00:40:07,410 --> 00:40:11,069
know api's and micro services and all

00:40:09,329 --> 00:40:12,660
that you know pity pity the poor

00:40:11,069 --> 00:40:14,730
developer we have to do a lot better for

00:40:12,660 --> 00:40:17,190
you know debugging tools so that it's

00:40:14,730 --> 00:40:18,599
less know are your buddy pockets on top

00:40:17,190 --> 00:40:20,400
of that right so start with WebSockets

00:40:18,599 --> 00:40:21,569
and then distributed app underneath the

00:40:20,400 --> 00:40:22,710
whole thing it's just yeah it's been

00:40:21,569 --> 00:40:23,910
it's been interesting because it's one

00:40:22,710 --> 00:40:25,829
of those you know we talked to audiences

00:40:23,910 --> 00:40:27,390
and even people people assume because

00:40:25,829 --> 00:40:29,609
the you know the cloud has grown so

00:40:27,390 --> 00:40:32,069
rapidly that the development experiences

00:40:29,609 --> 00:40:33,779
is great if you're like you actually try

00:40:32,069 --> 00:40:35,520
to develop an application it's actually

00:40:33,779 --> 00:40:36,720
it's much much harder than it needs to

00:40:35,520 --> 00:40:38,069
be the tooling you know I would

00:40:36,720 --> 00:40:40,079
certainly agree is not there you know

00:40:38,069 --> 00:40:41,400
nor is the debugging experience we are

00:40:40,079 --> 00:40:43,500
running out of time so last question for

00:40:41,400 --> 00:40:47,250
the panel and I guess I'll start with

00:40:43,500 --> 00:40:50,309
Steve since likes being first and

00:40:47,250 --> 00:40:51,210
everything so the question is this we

00:40:50,309 --> 00:40:52,680
have a bunch of folks in the room

00:40:51,210 --> 00:40:55,289
obviously that are sort of interested in

00:40:52,680 --> 00:40:56,700
committed to advocate for open source so

00:40:55,289 --> 00:40:59,520
when we look at future development

00:40:56,700 --> 00:41:02,069
future past containers and so on what

00:40:59,520 --> 00:41:03,839
role does open source play there okay so

00:41:02,069 --> 00:41:05,730
this one's kind of an easy one there it

00:41:03,839 --> 00:41:07,440
is only open source I mean if you look

00:41:05,730 --> 00:41:08,579
except for Heroku but I think that's

00:41:07,440 --> 00:41:10,830
because they got first mover advantage

00:41:08,579 --> 00:41:12,750
but then they also benefit

00:41:10,830 --> 00:41:15,480
all the open source that was there ever

00:41:12,750 --> 00:41:16,980
since Heroku it's been all there is

00:41:15,480 --> 00:41:21,830
nothing that I can think of in our

00:41:16,980 --> 00:41:25,020
ecosystem right now can you name aprenda

00:41:21,830 --> 00:41:26,670
whoo-hoo I know who a friend it is but

00:41:25,020 --> 00:41:28,350
their market share and the amount of

00:41:26,670 --> 00:41:30,930
traction they have is they like to

00:41:28,350 --> 00:41:32,850
pretend but anyway that was my being

00:41:30,930 --> 00:41:34,470
kind of nasty and caddy but basically

00:41:32,850 --> 00:41:37,770
Your Majesty is like a jelly doughnut

00:41:34,470 --> 00:41:40,380
discuss other than aprenda and staccato

00:41:37,770 --> 00:41:43,430
those are the tube but even staccato is

00:41:40,380 --> 00:41:46,110
boast based off a clown foundry I mean

00:41:43,430 --> 00:41:48,180
there isn't like you said before because

00:41:46,110 --> 00:41:50,340
of the economies of scale here it has to

00:41:48,180 --> 00:41:52,890
be open source because of the like we're

00:41:50,340 --> 00:41:55,050
now we in our next version we're just

00:41:52,890 --> 00:41:56,490
using Cooper Nettie's right so we're

00:41:55,050 --> 00:41:58,560
going to use dot containers either

00:41:56,490 --> 00:42:00,150
docker or rocket whichever container

00:41:58,560 --> 00:42:01,380
comes around and then we're using crew

00:42:00,150 --> 00:42:03,240
benetti's and then we're putting a layer

00:42:01,380 --> 00:42:05,430
on an open source layer on top of that I

00:42:03,240 --> 00:42:07,980
don't see how this ecosystem can exist

00:42:05,430 --> 00:42:10,320
without open source okay great just

00:42:07,980 --> 00:42:12,740
great I mean I I strongly agree you know

00:42:10,320 --> 00:42:14,820
I think you know as a cloud provider I

00:42:12,740 --> 00:42:17,010
was you know I got through container

00:42:14,820 --> 00:42:19,590
compute engine which was our so

00:42:17,010 --> 00:42:21,990
proprietary vm offering and was figuring

00:42:19,590 --> 00:42:24,480
out what to do next and it was kind of

00:42:21,990 --> 00:42:26,070
an obvious choice to lead with a leader

00:42:24,480 --> 00:42:28,440
cloud service as an open source

00:42:26,070 --> 00:42:30,270
initiative and it took a little

00:42:28,440 --> 00:42:33,660
convincing internally I'm so glad I did

00:42:30,270 --> 00:42:36,090
I mean the velocity the power the breath

00:42:33,660 --> 00:42:38,280
our ability to engage a partner

00:42:36,090 --> 00:42:40,110
ecosystem like the 14 people at Red Hat

00:42:38,280 --> 00:42:42,930
that contribute literally as much to

00:42:40,110 --> 00:42:44,690
give entities as we do you know our

00:42:42,930 --> 00:42:46,920
friends at core OS our friends at darker

00:42:44,690 --> 00:42:48,810
like we could not do that in a

00:42:46,920 --> 00:42:50,970
proprietary software way I think anyone

00:42:48,810 --> 00:42:52,830
who's trying to build a mainstream

00:42:50,970 --> 00:42:54,630
service or a mainstream product as

00:42:52,830 --> 00:42:55,860
proprietary is going to get a massive

00:42:54,630 --> 00:42:58,380
competitive disadvantage the open source

00:42:55,860 --> 00:43:01,500
community it's just it's a simple factor

00:42:58,380 --> 00:43:02,910
of economics and agility born yeah I

00:43:01,500 --> 00:43:04,680
would agree with everything that said I

00:43:02,910 --> 00:43:08,010
mean I think that you know when you look

00:43:04,680 --> 00:43:09,720
at kind of you know open source is

00:43:08,010 --> 00:43:11,640
absolutely critical but we have to talk

00:43:09,720 --> 00:43:13,610
about interoperability with existing

00:43:11,640 --> 00:43:16,440
systems to right we can't leave that out

00:43:13,610 --> 00:43:17,700
you know so interoperability with those

00:43:16,440 --> 00:43:20,100
systems is going to be extremely

00:43:17,700 --> 00:43:21,510
important with open source to make sure

00:43:20,100 --> 00:43:22,770
that there's the right you know plugins

00:43:21,510 --> 00:43:25,020
or drivers or things like

00:43:22,770 --> 00:43:26,010
that can enable you know applications to

00:43:25,020 --> 00:43:27,810
run across multiple different

00:43:26,010 --> 00:43:31,080
environments and also support multiple

00:43:27,810 --> 00:43:33,360
task platforms fair enough Sam last word

00:43:31,080 --> 00:43:35,160
so one of the reasons that inner tell

00:43:33,360 --> 00:43:37,380
interstellar space travel is science

00:43:35,160 --> 00:43:38,850
fiction is not just because the

00:43:37,380 --> 00:43:40,740
technologies have been invented yet but

00:43:38,850 --> 00:43:42,750
because it's going to require so many

00:43:40,740 --> 00:43:44,460
resources that you have to have a global

00:43:42,750 --> 00:43:47,040
government somehow all of us have to get

00:43:44,460 --> 00:43:49,380
along paths and data center operating

00:43:47,040 --> 00:43:51,600
systems are so complicated that no one

00:43:49,380 --> 00:43:53,820
company can build it so the economics

00:43:51,600 --> 00:43:54,960
just push us to have it be the

00:43:53,820 --> 00:43:57,180
equivalent of the International Space

00:43:54,960 --> 00:43:58,740
Station right it's got to be many many

00:43:57,180 --> 00:44:00,450
companies working together they've all

00:43:58,740 --> 00:44:02,190
got to put their best stuff in the pod

00:44:00,450 --> 00:44:04,470
they have all gotta trust that somehow

00:44:02,190 --> 00:44:06,810
it's all going to work out for them and

00:44:04,470 --> 00:44:09,570
if not in this recombination then in the

00:44:06,810 --> 00:44:11,370
next one so yeah now I didn't think of

00:44:09,570 --> 00:44:12,990
that for my that analogy for my slides

00:44:11,370 --> 00:44:14,640
this morning but that's to be open yeah

00:44:12,990 --> 00:44:16,380
that's it thanks so much everyone for

00:44:14,640 --> 00:44:19,070
coming if you'd join me in giving the

00:44:16,380 --> 00:44:19,070

YouTube URL: https://www.youtube.com/watch?v=UTLfuRbh7Cg


