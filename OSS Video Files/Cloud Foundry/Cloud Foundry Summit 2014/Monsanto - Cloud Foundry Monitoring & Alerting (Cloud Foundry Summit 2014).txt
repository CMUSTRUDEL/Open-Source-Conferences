Title: Monsanto - Cloud Foundry Monitoring & Alerting (Cloud Foundry Summit 2014)
Publication date: 2014-07-03
Playlist: Cloud Foundry Summit 2014
Description: 
	Mark Seidenstricker, Infrastructure Architect, Monsanto

Tracking and understanding key operational metrics are crucial to ensuring the availability and health of any system. This session will illustrate how a popular log aggregation platform can utilize Pivotal Ops Metrics to provide monitoring and alerting capabilities for your Cloud Foundry environment.
Captions: 
	00:00:00,930 --> 00:00:04,220
[Music]

00:00:08,269 --> 00:00:12,780
so my presentation is also about

00:00:10,769 --> 00:00:15,269
operations but I'm gonna cheat and use

00:00:12,780 --> 00:00:17,160
the clicker if you would call from my

00:00:15,269 --> 00:00:18,990
keynote earlier one of the features I

00:00:17,160 --> 00:00:21,000
said of Cloud Foundry that was sort of

00:00:18,990 --> 00:00:22,590
sort of not matured yet in the product

00:00:21,000 --> 00:00:24,600
is the features around monitoring

00:00:22,590 --> 00:00:26,570
alerting so I'm going to talk to you a

00:00:24,600 --> 00:00:28,470
little bit about how Monsanto sees

00:00:26,570 --> 00:00:30,660
monitoring and alerting through Cloud

00:00:28,470 --> 00:00:36,030
Foundry using a tool that you might not

00:00:30,660 --> 00:00:37,710
think of so yay logs all application

00:00:36,030 --> 00:00:40,079
developers know the importance of logs

00:00:37,710 --> 00:00:41,670
and if you're using Cloud Foundry Cloud

00:00:40,079 --> 00:00:43,920
Foundry actually has a pretty good

00:00:41,670 --> 00:00:45,780
method already of aggregating logs and

00:00:43,920 --> 00:00:47,070
exposing those to the developers and

00:00:45,780 --> 00:00:50,129
that's called log repeater

00:00:47,070 --> 00:00:51,870
but what if for your other applications

00:00:50,129 --> 00:00:53,399
in your enterprise maybe you have things

00:00:51,870 --> 00:00:56,210
that aren't running on Cloud Foundry or

00:00:53,399 --> 00:00:59,550
you have you know other infrastructure

00:00:56,210 --> 00:01:01,739
technologies you use a very common log

00:00:59,550 --> 00:01:02,760
technology called Splunk and you want to

00:01:01,739 --> 00:01:04,860
integrate the two together

00:01:02,760 --> 00:01:06,299
well pivotal has written up some

00:01:04,860 --> 00:01:09,060
documentation on how you do this

00:01:06,299 --> 00:01:11,580
integration and Matt Stein who's here at

00:01:09,060 --> 00:01:15,240
the conference today did a YouTube video

00:01:11,580 --> 00:01:16,380
on how you set up that integration but

00:01:15,240 --> 00:01:17,909
you're saying wait a minute long because

00:01:16,380 --> 00:01:19,970
I thought this was about monitoring and

00:01:17,909 --> 00:01:23,040
alerting I don't wanna hear about logs

00:01:19,970 --> 00:01:25,130
but actually Splunk can do that too and

00:01:23,040 --> 00:01:28,080
this was something I didn't realize but

00:01:25,130 --> 00:01:29,970
when I think about monitoring the the

00:01:28,080 --> 00:01:33,030
image that comes to mind is what's my

00:01:29,970 --> 00:01:35,040
CPU utilization trended historically

00:01:33,030 --> 00:01:37,530
over the past say 30 days or something

00:01:35,040 --> 00:01:39,750
like that but if you think about it if

00:01:37,530 --> 00:01:42,270
you're capturing that metric of CPU

00:01:39,750 --> 00:01:44,399
utilization spinning it out to a log and

00:01:42,270 --> 00:01:47,460
you can send out to the Splunk Splunk

00:01:44,399 --> 00:01:50,399
can very easily chart and graph that

00:01:47,460 --> 00:01:53,340
utilization over time so what I've done

00:01:50,399 --> 00:01:55,649
is combined a new tool from pivitol

00:01:53,340 --> 00:01:57,509
called pivotal ops metrics and this tool

00:01:55,649 --> 00:02:00,509
talks to all the components of your

00:01:57,509 --> 00:02:02,969
Cloud Foundry environment and it exposes

00:02:00,509 --> 00:02:05,280
a gathers some critical metrics and

00:02:02,969 --> 00:02:07,590
exposes those metrics over a jmx

00:02:05,280 --> 00:02:10,530
endpoint so I've taken that and I've

00:02:07,590 --> 00:02:12,330
taken an extension to Splunk called JMX

00:02:10,530 --> 00:02:13,420
for Splunk and I've combined the two

00:02:12,330 --> 00:02:15,340
together and

00:02:13,420 --> 00:02:17,980
how you can sort of generate these

00:02:15,340 --> 00:02:19,930
charge and and you get a CPU utilization

00:02:17,980 --> 00:02:26,200
graph like this that makes your sister

00:02:19,930 --> 00:02:27,430
admins feel all warm and fuzzy so here's

00:02:26,200 --> 00:02:31,450
a picture of the app that I put together

00:02:27,430 --> 00:02:33,790
this is a picture of the DEA specific

00:02:31,450 --> 00:02:36,610
metric page so you can see I'm charting

00:02:33,790 --> 00:02:38,560
the CPU load for the four D EAS that are

00:02:36,610 --> 00:02:40,959
in the environment there's some other

00:02:38,560 --> 00:02:43,269
DEA relevant metrics here and then you

00:02:40,959 --> 00:02:45,160
can see the various other components of

00:02:43,269 --> 00:02:47,019
the Cloud Foundry environment that also

00:02:45,160 --> 00:02:49,780
have pages like this like the cloud

00:02:47,019 --> 00:02:55,000
controller the router at CD and so on

00:02:49,780 --> 00:02:57,250
and so forth a really useful metric is a

00:02:55,000 --> 00:02:59,500
very simple one also and it's called

00:02:57,250 --> 00:03:01,569
healthy so this is a metric that is just

00:02:59,500 --> 00:03:03,670
either it's a binary value it's a 1 if

00:03:01,569 --> 00:03:06,310
that if it's healthy and it's a zero if

00:03:03,670 --> 00:03:08,650
it is not so you can see in this

00:03:06,310 --> 00:03:11,170
particular example we have our second da

00:03:08,650 --> 00:03:14,680
as reporting a zero for health which

00:03:11,170 --> 00:03:17,019
means that there is an issue with it so

00:03:14,680 --> 00:03:18,579
ok so that covers monitoring so what

00:03:17,019 --> 00:03:20,320
about alerting because you know you need

00:03:18,579 --> 00:03:22,600
to be alerted that that DEA went down

00:03:20,320 --> 00:03:23,890
well Splunk can do that too so any of

00:03:22,600 --> 00:03:25,299
the metrics that you're capturing with

00:03:23,890 --> 00:03:27,570
Splunk you can create these custom

00:03:25,299 --> 00:03:30,850
alerts for and I've I've created a

00:03:27,570 --> 00:03:32,980
number of them already so let's take a

00:03:30,850 --> 00:03:35,140
look at one of those so here's the alert

00:03:32,980 --> 00:03:36,280
that I created to say ok monitor all the

00:03:35,140 --> 00:03:39,100
components of my Cloud Foundry

00:03:36,280 --> 00:03:41,049
environment and alert me if the

00:03:39,100 --> 00:03:43,930
ephemeral disk gets greater than 80%

00:03:41,049 --> 00:03:46,359
used and so this is a little bit how you

00:03:43,930 --> 00:03:47,890
set that up you can define you know what

00:03:46,359 --> 00:03:50,950
schedule you want to be alerted to on

00:03:47,890 --> 00:03:55,540
who you want to set that alert to and

00:03:50,950 --> 00:03:57,220
things like that so in that graph I

00:03:55,540 --> 00:03:59,319
showed earlier where that second da was

00:03:57,220 --> 00:04:01,540
reporting a health of zero here's the

00:03:59,319 --> 00:04:05,280
email that I got that said hey there's a

00:04:01,540 --> 00:04:07,030
DEA down go do something about it so

00:04:05,280 --> 00:04:09,160
you're looking at this and you're saying

00:04:07,030 --> 00:04:11,590
hey this looks pretty cool but I've

00:04:09,160 --> 00:04:14,019
never used Splunk before but the good

00:04:11,590 --> 00:04:15,700
news is that there is a open-source free

00:04:14,019 --> 00:04:17,289
version available so you can go download

00:04:15,700 --> 00:04:21,100
it and you can play with it if you've

00:04:17,289 --> 00:04:22,870
never tried it before more good news is

00:04:21,100 --> 00:04:24,669
it's actually pretty intuitive so I had

00:04:22,870 --> 00:04:26,750
never used Splunk before either but I

00:04:24,669 --> 00:04:28,280
went from never using it before to

00:04:26,750 --> 00:04:30,410
building this app and in roughly a week

00:04:28,280 --> 00:04:32,150
of my free time and then the greatest

00:04:30,410 --> 00:04:37,760
news of all is I've already laid the

00:04:32,150 --> 00:04:40,430
foundation for you so what's next

00:04:37,760 --> 00:04:41,990
pivotal ops metrics exposes a whole

00:04:40,430 --> 00:04:43,520
bunch of attributes a whole bunch of

00:04:41,990 --> 00:04:45,410
metrics for all the components of your

00:04:43,520 --> 00:04:46,820
Cloud Foundry environment so really what

00:04:45,410 --> 00:04:49,340
we need to know is what do all these

00:04:46,820 --> 00:04:51,740
attributes mean which ones do I need to

00:04:49,340 --> 00:04:54,800
care about and what are some thresholds

00:04:51,740 --> 00:04:56,600
that I need to set in my alerts so why I

00:04:54,800 --> 00:04:59,450
would like to ask of you is to

00:04:56,600 --> 00:05:01,340
collaborate with me go download the app

00:04:59,450 --> 00:05:03,420
from my github page and let me know what

00:05:01,340 --> 00:05:08,170
you think thank you

00:05:03,420 --> 00:05:11,459
[Applause]

00:05:08,170 --> 00:05:11,459

YouTube URL: https://www.youtube.com/watch?v=mUSeRzO_4ZU


