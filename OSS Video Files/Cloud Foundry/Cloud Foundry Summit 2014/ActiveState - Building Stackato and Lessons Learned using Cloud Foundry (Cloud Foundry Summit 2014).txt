Title: ActiveState - Building Stackato and Lessons Learned using Cloud Foundry (Cloud Foundry Summit 2014)
Publication date: 2014-07-09
Playlist: Cloud Foundry Summit 2014
Description: 
	In this talk, Jeff Hobbs will share his experiences building Stackato, based on Cloud Foundry. Stackato allows agile enterprises to develop and deploy software solutions faster than ever before and manage them more effectively. ActiveState has been part of the Cloud Foundry community from the beginning - through major revisions and numerous feature updates. Jeff will explore some of the changes in Stackato over time. Stackato's move to the Cloud Foundry v2 codebase will be discussed, and alongside the benefits, the different design and implementation approaches taken with Stackato. In closing, lessons learned will be drawn out.
Captions: 
	00:00:00,930 --> 00:00:04,220
[Music]

00:00:07,570 --> 00:00:12,210
[Music]

00:00:09,080 --> 00:00:14,340
you'd see more people more faces here

00:00:12,210 --> 00:00:16,619
than the last one

00:00:14,340 --> 00:00:19,080
want to talk a little bit about a

00:00:16,619 --> 00:00:21,330
product staccato some lessons learned

00:00:19,080 --> 00:00:24,090
that we've have from working in the

00:00:21,330 --> 00:00:26,730
cloud foundry ecosystem first a little

00:00:24,090 --> 00:00:30,060
bit about active state we have been

00:00:26,730 --> 00:00:32,669
around since 1997 about two million plus

00:00:30,060 --> 00:00:35,760
developers using the tools including 97%

00:00:32,669 --> 00:00:39,180
of the Fortune 1000 have some active

00:00:35,760 --> 00:00:41,489
state technology in in-house we have a

00:00:39,180 --> 00:00:43,350
deep knowledge around programming

00:00:41,489 --> 00:00:46,500
languages and development we started

00:00:43,350 --> 00:00:49,440
with Perl on Windows in 97 and have gone

00:00:46,500 --> 00:00:52,860
cross-platform cross language and now

00:00:49,440 --> 00:00:55,050
into the platform as a service base we

00:00:52,860 --> 00:00:59,520
are a founding gold member of the cloud

00:00:55,050 --> 00:01:01,620
foundry foundation so a little bit about

00:00:59,520 --> 00:01:03,870
industry recognition yep yeah we've been

00:01:01,620 --> 00:01:05,700
recognized for creating good tools you

00:01:03,870 --> 00:01:08,310
where the rubber hits the road people

00:01:05,700 --> 00:01:13,170
have to use the software they seem to

00:01:08,310 --> 00:01:15,390
like us and I appreciate that so what is

00:01:13,170 --> 00:01:18,360
staccato you know the simplest thing is

00:01:15,390 --> 00:01:21,119
you know I've got my Cloud Foundry shirt

00:01:18,360 --> 00:01:23,250
on here's my staccato shirt you know

00:01:21,119 --> 00:01:26,820
that's it but it's a little bit more

00:01:23,250 --> 00:01:30,689
than slapping a logo and changing the

00:01:26,820 --> 00:01:32,070
color I've also got docker underwear on

00:01:30,689 --> 00:01:38,009
but marketing said I wasn't allowed to

00:01:32,070 --> 00:01:39,540
show that so in staccato we are taking

00:01:38,009 --> 00:01:41,490
where we try to leverage the best of

00:01:39,540 --> 00:01:44,100
open-source we think in pass that's

00:01:41,490 --> 00:01:46,860
definitely Cloud Foundry we make a lot

00:01:44,100 --> 00:01:48,600
of tweaks for those that really want to

00:01:46,860 --> 00:01:50,820
be using the pass in an on-premise

00:01:48,600 --> 00:01:52,350
environment or other private paths

00:01:50,820 --> 00:01:54,390
environment because it could be in the

00:01:52,350 --> 00:01:56,880
public cloud you know will run anywhere

00:01:54,390 --> 00:01:58,799
from VMware OpenStack cloud stack easy

00:01:56,880 --> 00:02:03,149
to have customers across the spectrum

00:01:58,799 --> 00:02:05,189
including in hybrid setups and but we've

00:02:03,149 --> 00:02:09,140
done other things where we replace

00:02:05,189 --> 00:02:12,280
certain key parts because it's necessary

00:02:09,140 --> 00:02:15,290
so a little bit about the path

00:02:12,280 --> 00:02:17,329
this is where we've gone you know we

00:02:15,290 --> 00:02:21,170
were we were the first productized

00:02:17,329 --> 00:02:22,849
version of Cloud Foundry and have a lot

00:02:21,170 --> 00:02:26,540
of customers on it we had them on their

00:02:22,849 --> 00:02:29,269
Cloud Foundry v1 and you know added a

00:02:26,540 --> 00:02:30,859
lot of new things to the cloud finder

00:02:29,269 --> 00:02:34,969
ecosystem all those were first

00:02:30,859 --> 00:02:38,079
introduced in staccato and what I want

00:02:34,969 --> 00:02:41,120
to talk about is the development line

00:02:38,079 --> 00:02:44,389
you know how far or how close were we

00:02:41,120 --> 00:02:47,870
really to the Cloud Foundry trunk and as

00:02:44,389 --> 00:02:53,840
we went through v1 it verged more and

00:02:47,870 --> 00:03:02,629
more away so this was the move from v1

00:02:53,840 --> 00:03:04,280
to v2 for us talking about forking in in

00:03:02,629 --> 00:03:06,079
the v1 space there were a lot of changes

00:03:04,280 --> 00:03:09,319
we were making didn't have the

00:03:06,079 --> 00:03:12,560
foundation running so all of these

00:03:09,319 --> 00:03:15,469
things are stuff that we added the v1

00:03:12,560 --> 00:03:17,180
space and it's a lot of stuff to read

00:03:15,469 --> 00:03:19,459
but the most important thing is all of

00:03:17,180 --> 00:03:21,199
that actually had to work in v2 as well

00:03:19,459 --> 00:03:23,060
we've got production customers they

00:03:21,199 --> 00:03:27,139
expect the same level of features and

00:03:23,060 --> 00:03:31,370
new ones all the time so what did it

00:03:27,139 --> 00:03:34,459
take to do this six months so for us as

00:03:31,370 --> 00:03:37,849
an independent Cloud Foundry product six

00:03:34,459 --> 00:03:43,009
months of engineering time lots of

00:03:37,849 --> 00:03:45,470
people so many man years and over 3,000

00:03:43,009 --> 00:03:46,819
changes of just our code that doesn't

00:03:45,470 --> 00:03:50,419
even include anything about the Cloud

00:03:46,819 --> 00:03:54,379
Foundry code to to get from a v12 a v2

00:03:50,419 --> 00:03:57,560
ecosystem so what does that actually

00:03:54,379 --> 00:04:01,909
look like this is the staccato three

00:03:57,560 --> 00:04:03,919
architecture you hopefully you can see

00:04:01,909 --> 00:04:07,009
it well enough they it is color coded

00:04:03,919 --> 00:04:09,829
those things in blue with the green

00:04:07,009 --> 00:04:12,319
highlight that's where we sort of gild

00:04:09,829 --> 00:04:15,229
the lily add a little bit of extra

00:04:12,319 --> 00:04:17,659
feature stuff on top those pieces in

00:04:15,229 --> 00:04:20,209
green are either completely new or

00:04:17,659 --> 00:04:22,279
replacements one of the things we love

00:04:20,209 --> 00:04:24,440
about the Cloud Foundry design is

00:04:22,279 --> 00:04:25,700
actually some things are super

00:04:24,440 --> 00:04:27,380
composable you know

00:04:25,700 --> 00:04:30,530
you can swap one router in for another

00:04:27,380 --> 00:04:33,890
ours is a node the core one is an NGO

00:04:30,530 --> 00:04:36,080
but talks over the message bus from

00:04:33,890 --> 00:04:37,880
anybody else's perspective doesn't make

00:04:36,080 --> 00:04:40,280
any difference

00:04:37,880 --> 00:04:45,050
new services and such added docker and

00:04:40,280 --> 00:04:46,820
log yard and other pieces in there so

00:04:45,050 --> 00:04:49,010
you know we had to play a little bit of

00:04:46,820 --> 00:04:51,770
catch-up totally revamped C of v2

00:04:49,010 --> 00:04:54,440
codebase most of it it stayed in Ruby

00:04:51,770 --> 00:04:57,320
but they swapped out frameworks you have

00:04:54,440 --> 00:04:59,450
completely new v2 API for customer

00:04:57,320 --> 00:05:01,970
purposes we had to have a client that

00:04:59,450 --> 00:05:03,950
spoke both v1 and v2 at the same time

00:05:01,970 --> 00:05:05,900
and the client of course also has to

00:05:03,950 --> 00:05:07,250
know how to know which features are

00:05:05,900 --> 00:05:10,040
available actually at every single

00:05:07,250 --> 00:05:13,130
version orgs and spaces we place in

00:05:10,040 --> 00:05:17,270
groups containers were now standard so

00:05:13,130 --> 00:05:18,890
you know we did a lot of stuff making

00:05:17,270 --> 00:05:20,600
sure the tests are passing before and

00:05:18,890 --> 00:05:23,960
after this is not just unit tests but

00:05:20,600 --> 00:05:26,240
integration tests so we do have a

00:05:23,960 --> 00:05:29,090
quarterly release cycle of staccato we

00:05:26,240 --> 00:05:32,300
are now merging every release cycle at

00:05:29,090 --> 00:05:34,730
least once with cloud foundry that six

00:05:32,300 --> 00:05:38,840
months has come down to two weeks two

00:05:34,730 --> 00:05:41,630
person weeks and that's you know from

00:05:38,840 --> 00:05:44,270
the the CTO and VP of engineering point

00:05:41,630 --> 00:05:47,810
of view is much nicer it allows us to

00:05:44,270 --> 00:05:49,910
integrate more often and not be so

00:05:47,810 --> 00:05:51,260
worried about it but also evaluate and

00:05:49,910 --> 00:05:54,260
pick up all the new features that are

00:05:51,260 --> 00:05:57,290
coming in here's an example of one IBM

00:05:54,260 --> 00:05:58,730
added zones it was great it was

00:05:57,290 --> 00:06:02,840
one-dimensional though we made it

00:05:58,730 --> 00:06:04,760
two-dimensional and you know other value

00:06:02,840 --> 00:06:07,790
add all of these pieces that you'll find

00:06:04,760 --> 00:06:11,030
in staccato out of the box either

00:06:07,790 --> 00:06:13,850
there's audit trails timeline stuff for

00:06:11,030 --> 00:06:16,670
managers all the placement zones as you

00:06:13,850 --> 00:06:19,160
see you can optionally front any

00:06:16,670 --> 00:06:20,960
application with single sign-on you can

00:06:19,160 --> 00:06:24,860
see when people actually log into the

00:06:20,960 --> 00:06:26,360
system admins aren't left out of the

00:06:24,860 --> 00:06:28,940
equation you know this is meant to be an

00:06:26,360 --> 00:06:30,740
on-premise solution so it's like Heroku

00:06:28,940 --> 00:06:35,270
in a box but somebody has to

00:06:30,740 --> 00:06:36,830
administrate this system and of course

00:06:35,270 --> 00:06:38,690
the developers are not forgotten and you

00:06:36,830 --> 00:06:39,650
know the great thing about Cloud Foundry

00:06:38,690 --> 00:06:42,470
it is

00:06:39,650 --> 00:06:44,600
composable and it is easy to augment so

00:06:42,470 --> 00:06:46,550
a couple of things that I think we're

00:06:44,600 --> 00:06:50,090
talked about this morning these are two

00:06:46,550 --> 00:06:53,419
existing features in staccato on the my

00:06:50,090 --> 00:06:56,539
left the that is application auto

00:06:53,419 --> 00:06:59,810
scaling built in augmented on top of the

00:06:56,539 --> 00:07:03,530
health managers and it'll you know did

00:06:59,810 --> 00:07:05,780
has cool period cool down cool and won't

00:07:03,530 --> 00:07:07,220
you know go spiking beyond your

00:07:05,780 --> 00:07:09,550
organizational quota all that kind of

00:07:07,220 --> 00:07:12,650
stuff just nice built into the system

00:07:09,550 --> 00:07:15,020
the one on the other side that is zero

00:07:12,650 --> 00:07:17,389
downtime deployments inside a cloud

00:07:15,020 --> 00:07:19,310
foundry based system anytime you push

00:07:17,389 --> 00:07:22,490
code we are not only version the code

00:07:19,310 --> 00:07:24,590
for you we'll make sure that there is no

00:07:22,490 --> 00:07:27,830
downtime of your app even across

00:07:24,590 --> 00:07:29,840
multiple instances and you say oops I

00:07:27,830 --> 00:07:31,970
broke something in the logic you can

00:07:29,840 --> 00:07:35,180
press a button by the way everything you

00:07:31,970 --> 00:07:36,440
see in we like fancy screens managers

00:07:35,180 --> 00:07:39,639
will of fancy screens they make great

00:07:36,440 --> 00:07:42,440
screenshots but all of this is based on

00:07:39,639 --> 00:07:46,099
the rest api's which are all published

00:07:42,440 --> 00:07:49,940
and we in the JavaScript client for this

00:07:46,099 --> 00:07:52,699
is even open sourced so we're next you

00:07:49,940 --> 00:07:54,919
know from what we want to see work Lord

00:07:52,699 --> 00:07:57,110
poured workload portability is important

00:07:54,919 --> 00:07:58,639
interoperability we're not talking just

00:07:57,110 --> 00:08:00,830
Cloud Foundry you know we're independent

00:07:58,639 --> 00:08:03,800
so it's Cloud Foundry we'd work in

00:08:00,830 --> 00:08:05,120
OpenStack VMware elsewhere and we want

00:08:03,800 --> 00:08:08,900
to see that the best of open-source

00:08:05,120 --> 00:08:11,240
really is leveraged docker we love it

00:08:08,900 --> 00:08:16,400
there is no warden in staccato and

00:08:11,240 --> 00:08:19,190
nobody knows the difference but that's a

00:08:16,400 --> 00:08:22,159
you know a place I'd like to see us make

00:08:19,190 --> 00:08:24,199
Diego go take a pic one you know you

00:08:22,159 --> 00:08:26,900
don't need multiple container backends

00:08:24,199 --> 00:08:29,030
and I know warden existed first in fact

00:08:26,900 --> 00:08:31,370
there's nothing wrong with warden but

00:08:29,030 --> 00:08:32,029
it's not docker and that's that's the

00:08:31,370 --> 00:08:35,180
big thing

00:08:32,029 --> 00:08:36,800
is that the ecosystem around that just

00:08:35,180 --> 00:08:40,940
leverage that aspect of the open source

00:08:36,800 --> 00:08:42,890
and let's work on the Paz layer some of

00:08:40,940 --> 00:08:45,800
the open source cloud foundry related

00:08:42,890 --> 00:08:47,600
contributions command line JavaScript

00:08:45,800 --> 00:08:49,040
client code to see of v2 services

00:08:47,600 --> 00:08:51,170
connect to persistent files some service

00:08:49,040 --> 00:08:53,450
elastic service service ActiveMQ there's

00:08:51,170 --> 00:08:53,760
several other services they're a-ok it's

00:08:53,450 --> 00:08:55,830
a

00:08:53,760 --> 00:08:58,650
you a replacement we open sources this

00:08:55,830 --> 00:09:02,910
week various pull requests the core code

00:08:58,650 --> 00:09:07,530
this bill paxton cetera so little

00:09:02,910 --> 00:09:10,080
summary staccato v3 it is based on v2 we

00:09:07,530 --> 00:09:13,380
do merges all the time now and we're not

00:09:10,080 --> 00:09:14,910
as afraid of them as we used to be Cloud

00:09:13,380 --> 00:09:17,160
Foundry does provide an excellent base

00:09:14,910 --> 00:09:19,650
to work with the composable elements and

00:09:17,160 --> 00:09:22,080
the design it's great the message

00:09:19,650 --> 00:09:24,210
passing it's it's a you know well done

00:09:22,080 --> 00:09:26,940
distributed system there's sure there's

00:09:24,210 --> 00:09:31,080
a lot of work to do but it's it's it's

00:09:26,940 --> 00:09:33,750
the best thing that is existing now so a

00:09:31,080 --> 00:09:36,780
little bit of point on dogfooding yes we

00:09:33,750 --> 00:09:38,850
do dog food this is if you look for our

00:09:36,780 --> 00:09:40,890
docks they run on staccato if you look

00:09:38,850 --> 00:09:43,800
for our patch and upgrade system

00:09:40,890 --> 00:09:45,810
it runs on staccato so you know we're

00:09:43,800 --> 00:09:47,340
doing the right thing a little bit about

00:09:45,810 --> 00:09:49,560
customer happiness it's always very

00:09:47,340 --> 00:09:51,500
important so we thought so a few of the

00:09:49,560 --> 00:09:53,880
numerous customers that we have up here

00:09:51,500 --> 00:09:55,290
but it's the usual happy happy that

00:09:53,880 --> 00:09:59,400
everyone's talking about because they

00:09:55,290 --> 00:10:03,280
are very happy with it and that's it the

00:09:59,400 --> 00:10:06,800
obligatory rare hiring slide thank you

00:10:03,280 --> 00:10:10,090
[Applause]

00:10:06,800 --> 00:10:10,090

YouTube URL: https://www.youtube.com/watch?v=pnOFLShIX8I


