Title: Cloud Foundry for Kubernetes SIG [December 2019]
Publication date: 2019-12-17
Playlist: Cloud Foundry for Kubernetes Monthly SIG
Description: 
	
Captions: 
	00:00:00,030 --> 00:00:09,349
I think we should get started so SWANA

00:00:03,120 --> 00:00:12,719
please roll the recording Thanks

00:00:09,349 --> 00:00:14,929
so welcome to this week's Cloud Foundry

00:00:12,719 --> 00:00:19,160
i'm kubernetes specially twist book call

00:00:14,929 --> 00:00:22,619
just last second check so no change in

00:00:19,160 --> 00:00:25,439
the polls for the topic today so the

00:00:22,619 --> 00:00:31,260
topic will be unsurprisingly irrelevant

00:00:25,439 --> 00:00:36,630
for cloud foundry on kubernetes we know

00:00:31,260 --> 00:00:39,540
with actually nine votes I rely on

00:00:36,630 --> 00:00:43,050
something second contender was half the

00:00:39,540 --> 00:00:44,760
votes of that so yeah that would be the

00:00:43,050 --> 00:00:48,239
topic for today I was actually hoping

00:00:44,760 --> 00:00:50,489
for solid you to be PP on right now but

00:00:48,239 --> 00:00:54,149
maybe while we're waiting for force I am

00:00:50,489 --> 00:00:56,250
Eric do you have some like general

00:00:54,149 --> 00:01:00,660
things to talk about

00:00:56,250 --> 00:01:03,750
yeah so I I can mention that the police

00:01:00,660 --> 00:01:06,540
integration project team has been doing

00:01:03,750 --> 00:01:07,650
some research primarily with the

00:01:06,540 --> 00:01:09,869
component teams that they'd be

00:01:07,650 --> 00:01:11,900
supporting with component integration

00:01:09,869 --> 00:01:15,659
over the past couple of weeks and

00:01:11,900 --> 00:01:22,049
they're preparing see you except on this

00:01:15,659 --> 00:01:24,659
topic on Thursday as a team so I expect

00:01:22,049 --> 00:01:27,869
after that we'll start seeing more

00:01:24,659 --> 00:01:30,930
deliberate activity from them again

00:01:27,869 --> 00:01:33,240
focused primarily on supporting the

00:01:30,930 --> 00:01:37,170
component teams as they're driving out

00:01:33,240 --> 00:01:39,509
their own kubernetes packaging and

00:01:37,170 --> 00:01:48,780
deployment artifacts for their

00:01:39,509 --> 00:01:52,439
subsystems I was wondering if there's

00:01:48,780 --> 00:01:56,579
any way where we can collaborate on QPS

00:01:52,439 --> 00:02:00,149
as well we're looking to maybe pair with

00:01:56,579 --> 00:02:06,170
teams like a Rivini or Cathy to

00:02:00,149 --> 00:02:08,759
integrate our CI systems and also to

00:02:06,170 --> 00:02:11,340
integrate on other levels to like but

00:02:08,759 --> 00:02:13,890
Irene if you have parkland in testing

00:02:11,340 --> 00:02:19,740
now so we could actually replace the

00:02:13,890 --> 00:02:22,100
bas-reliefs with home chart so yeah

00:02:19,740 --> 00:02:26,130
we're looking to pair we're looking to

00:02:22,100 --> 00:02:28,500
talk to people about this and connect

00:02:26,130 --> 00:02:31,550
the I systems like when you get an

00:02:28,500 --> 00:02:41,820
Iranian chart you should also get a new

00:02:31,550 --> 00:02:43,830
cube CF bump things like that and exam I

00:02:41,820 --> 00:02:46,790
think I think that makes sense I mean I

00:02:43,830 --> 00:02:50,850
can share a little bit more

00:02:46,790 --> 00:02:55,440
yeah go ahead Rubin I'm sorry

00:02:50,850 --> 00:02:56,850
I mean be there just your flag I think I

00:02:55,440 --> 00:03:00,090
can show a little bit more about the

00:02:56,850 --> 00:03:01,920
relevant section since tonichi and I

00:03:00,090 --> 00:03:04,850
have been working quite a bit with psy

00:03:01,920 --> 00:03:07,770
so you know they've been working with

00:03:04,850 --> 00:03:09,810
some excise been working more with the

00:03:07,770 --> 00:03:11,850
component teams in terms of what he

00:03:09,810 --> 00:03:15,420
would need and so on and then tonichi

00:03:11,850 --> 00:03:17,400
and I have been working more on hey

00:03:15,420 --> 00:03:22,230
Marco

00:03:17,400 --> 00:03:25,140
 see like how we can fulfill those

00:03:22,230 --> 00:03:27,600
with you know to change that some of

00:03:25,140 --> 00:03:30,540
which we had explored as part of our CFS

00:03:27,600 --> 00:03:32,370
like life cycles sake that had happened

00:03:30,540 --> 00:03:35,850
a while back and some of their tools ed

00:03:32,370 --> 00:03:37,769
she's also been working on so I wished I

00:03:35,850 --> 00:03:40,530
was here to talk a bit more about this

00:03:37,769 --> 00:03:44,850
but currently one of the things that

00:03:40,530 --> 00:03:48,269
we're considering is incepting on what

00:03:44,850 --> 00:03:52,410
it would look like to use the k for

00:03:48,269 --> 00:03:55,760
Tina's tooling in particular why TT for

00:03:52,410 --> 00:03:59,340
templating and tap for deploying

00:03:55,760 --> 00:04:01,950
CF and then just using you know like CF

00:03:59,340 --> 00:04:06,330
the CF deployment like artifact just

00:04:01,950 --> 00:04:08,280
being like a collection of config files

00:04:06,330 --> 00:04:12,870
from each of these individual components

00:04:08,280 --> 00:04:15,060
so like you a and the networking

00:04:12,870 --> 00:04:18,030
components and so on so just each of

00:04:15,060 --> 00:04:21,479
them had publishing their own images and

00:04:18,030 --> 00:04:23,789
their own config files and then us in on

00:04:21,479 --> 00:04:26,430
the rel inside putting it all together

00:04:23,789 --> 00:04:27,800
and creating those artifacts and maybe

00:04:26,430 --> 00:04:30,860
also creating some see

00:04:27,800 --> 00:04:33,199
I toss such that if you if you weren't

00:04:30,860 --> 00:04:35,830
so inclined to like use the the tooling

00:04:33,199 --> 00:04:38,090
directly yourself like you'd so be

00:04:35,830 --> 00:04:40,129
interfacing with like see I toss such as

00:04:38,090 --> 00:04:44,000
like a fresh deploy or an upgrade or

00:04:40,129 --> 00:04:46,789
something like that so in light of that

00:04:44,000 --> 00:04:51,110
or and sighs maybe here no he went so

00:04:46,789 --> 00:04:54,110
okay okay you're here so in light of

00:04:51,110 --> 00:04:56,210
that there's a few things we wanted to

00:04:54,110 --> 00:04:59,289
kind of like we could go to various

00:04:56,210 --> 00:05:02,690
level of detail kind of sharing this but

00:04:59,289 --> 00:05:04,400
he could we had like a small demo that

00:05:02,690 --> 00:05:06,979
we had put together that we could show

00:05:04,400 --> 00:05:09,590
it folks here if they were interested in

00:05:06,979 --> 00:05:11,509
what bad workflow would look like it's

00:05:09,590 --> 00:05:13,580
not for CF it's for like a much smaller

00:05:11,509 --> 00:05:16,849
scope like pretending to be CS kind of

00:05:13,580 --> 00:05:19,569
thing but it might demonstrate like what

00:05:16,849 --> 00:05:19,569
it would look like

00:05:26,479 --> 00:05:33,529
I guess I mean I've played around with

00:05:29,270 --> 00:05:36,650
with Kapil a bit there is also this ttak

00:05:33,529 --> 00:05:40,520
episode with Joe Beda Eisley goes

00:05:36,650 --> 00:05:42,110
through the entire thing but still I

00:05:40,520 --> 00:05:51,259
mean sure this entire thing is

00:05:42,110 --> 00:05:52,779
attractive okay Timmy chichi wanna share

00:05:51,259 --> 00:05:58,969
your screen take it away

00:05:52,779 --> 00:06:02,539
sure I guess one thing one thing that we

00:05:58,969 --> 00:06:04,580
just crossed through play and I guess

00:06:02,539 --> 00:06:05,810
maybe we can also talk a little bit

00:06:04,580 --> 00:06:08,300
about some of the differences between

00:06:05,810 --> 00:06:10,129
let's say on template and white sheets T

00:06:08,300 --> 00:06:12,680
poor people or and I really familiar

00:06:10,129 --> 00:06:19,099
with y TT I guess how many people are

00:06:12,680 --> 00:06:19,969
familiar with y TT on the call you I

00:06:19,099 --> 00:06:22,539
don't know

00:06:19,969 --> 00:06:24,949
yeah it's kinda hard to count on zoom

00:06:22,539 --> 00:06:30,259
maybe that's a maybe that's a new

00:06:24,949 --> 00:06:32,659
product right there video counting well

00:06:30,259 --> 00:06:36,080
I see a savanna before before I kinda

00:06:32,659 --> 00:06:37,249
show you know a typical demo that I show

00:06:36,080 --> 00:06:41,149
with some of these tools

00:06:37,249 --> 00:06:43,039
I guess maybe to briefly discuss you

00:06:41,149 --> 00:06:45,740
know what are the differences and what

00:06:43,039 --> 00:06:48,289
is let's say Y DT so the the workload

00:06:45,740 --> 00:06:50,599
that Luke is mentioning is based on

00:06:48,289 --> 00:06:53,089
several tools ytt

00:06:50,599 --> 00:06:57,399
being one of them that's for templating

00:06:53,089 --> 00:07:00,680
and overlaying kay build is another tool

00:06:57,399 --> 00:07:03,919
that's part of the workload to deal with

00:07:00,680 --> 00:07:06,139
image references and resolving images to

00:07:03,919 --> 00:07:08,389
lets it digests and helping you build

00:07:06,139 --> 00:07:11,479
certain things from docker images or

00:07:08,389 --> 00:07:14,360
other ways of building images and

00:07:11,479 --> 00:07:16,039
finally cap is the last tool that is

00:07:14,360 --> 00:07:17,240
responsible for deploying all of that

00:07:16,039 --> 00:07:19,759
stuff to kubernetes

00:07:17,240 --> 00:07:22,610
so the typical workflow really just

00:07:19,759 --> 00:07:26,120
looks like you know run ytt Piper into

00:07:22,610 --> 00:07:27,669
okay built Piper in choke app right but

00:07:26,120 --> 00:07:30,950
more specifically

00:07:27,669 --> 00:07:32,520
ytt you know

00:07:30,950 --> 00:07:34,710
[Music]

00:07:32,520 --> 00:07:35,850
what are the benefits of having ytt read

00:07:34,710 --> 00:07:38,340
the benefits of having for example

00:07:35,850 --> 00:07:41,220
capper fairly obvious you know keep CTO

00:07:38,340 --> 00:07:44,910
is not you know dealing with a lot of

00:07:41,220 --> 00:07:46,650
the you know problems that one would you

00:07:44,910 --> 00:07:48,479
know would see for example installing CR

00:07:46,650 --> 00:07:50,190
DS before installing other things or

00:07:48,479 --> 00:07:53,130
installing namespaces before installing

00:07:50,190 --> 00:07:55,860
things and maybe labeling resources so

00:07:53,130 --> 00:08:02,160
that that that stuff is fairly you know

00:07:55,860 --> 00:08:03,860
well known within the community the the

00:08:02,160 --> 00:08:07,080
templating side is a little bit more

00:08:03,860 --> 00:08:08,400
interesting at least to me one of the

00:08:07,080 --> 00:08:10,860
reasons that ytt

00:08:08,400 --> 00:08:13,860
came about is I was playing around with

00:08:10,860 --> 00:08:15,949
helm and using it for a few things and

00:08:13,860 --> 00:08:20,250
it was actually quite annoying to use

00:08:15,949 --> 00:08:23,160
for a bit more complicated scenarios but

00:08:20,250 --> 00:08:28,050
even for some of the simple scenarios it

00:08:23,160 --> 00:08:29,550
was a surprisingly error-prone so you

00:08:28,050 --> 00:08:32,399
know what is held template right he'll

00:08:29,550 --> 00:08:35,130
jump lit is based on ghost jump text

00:08:32,399 --> 00:08:37,409
templating package right so it's it's

00:08:35,130 --> 00:08:41,490
textual templating it's not they were a

00:08:37,409 --> 00:08:43,380
role that your templating llamó now the

00:08:41,490 --> 00:08:45,480
templating syntax that the language

00:08:43,380 --> 00:08:46,350
itself that that you using within that

00:08:45,480 --> 00:08:49,170
ghost

00:08:46,350 --> 00:08:52,440
you know framework if you will is also

00:08:49,170 --> 00:08:54,779
not similar to other I mean it's similar

00:08:52,440 --> 00:08:58,500
ish but it's not as similar and as easy

00:08:54,779 --> 00:09:00,480
to use as some other languages so you

00:08:58,500 --> 00:09:02,520
know given those two things right that

00:09:00,480 --> 00:09:05,790
it's textual templating given that the

00:09:02,520 --> 00:09:07,200
template syntax is a little weird you

00:09:05,790 --> 00:09:09,300
know you start running into certain

00:09:07,200 --> 00:09:12,209
problems of for example you have to

00:09:09,300 --> 00:09:13,829
manage the white space manually right so

00:09:12,209 --> 00:09:16,079
you have to throw in bunch of indents

00:09:13,829 --> 00:09:18,120
and you have to throw in I don't know

00:09:16,079 --> 00:09:21,690
quotes around certain values of what I

00:09:18,120 --> 00:09:24,089
write so that's kind of the main you

00:09:21,690 --> 00:09:26,940
know annoyance / challenge that I had

00:09:24,089 --> 00:09:29,550
with was the with the health templating

00:09:26,940 --> 00:09:32,579
approach you know aside from that I

00:09:29,550 --> 00:09:36,240
guess you know just kind of a you know

00:09:32,579 --> 00:09:37,680
looking into deeper into some of the

00:09:36,240 --> 00:09:39,600
functionality so helm doesn't

00:09:37,680 --> 00:09:41,430
necessarily offer any facilities to

00:09:39,600 --> 00:09:44,459
reuse some of the configuration so it

00:09:41,430 --> 00:09:46,620
doesn't really lead towards uh you know

00:09:44,459 --> 00:09:48,300
modules configuration

00:09:46,620 --> 00:09:50,339
there is a feature for example called

00:09:48,300 --> 00:09:51,830
library Charles and he'll be three but

00:09:50,339 --> 00:09:56,040
it doesn't really improve that situation

00:09:51,830 --> 00:09:58,649
by a lot and ultimately it's because the

00:09:56,040 --> 00:10:01,760
ghost ex-champ learning libraries are

00:09:58,649 --> 00:10:05,600
not meant for this kind of a thing

00:10:01,760 --> 00:10:08,580
so so that's uh that's kind of the the

00:10:05,600 --> 00:10:10,250
basic feeling around they held template

00:10:08,580 --> 00:10:12,959
come on right now

00:10:10,250 --> 00:10:14,459
ygt was designed specifically to address

00:10:12,959 --> 00:10:17,250
some of those challenges right so why

00:10:14,459 --> 00:10:19,740
did he actually starts off by being yeah

00:10:17,250 --> 00:10:21,750
malware right the templating itself is

00:10:19,740 --> 00:10:23,730
done on top of the mo data structures

00:10:21,750 --> 00:10:27,330
it's not checks templating it it doesn't

00:10:23,730 --> 00:10:28,980
actually know that any of this is plain

00:10:27,330 --> 00:10:32,670
text it only knows that it's punchy

00:10:28,980 --> 00:10:34,709
yellow and that leads to actually quite

00:10:32,670 --> 00:10:36,029
a few benefits right and you know the

00:10:34,709 --> 00:10:38,100
obvious ones being that you don't really

00:10:36,029 --> 00:10:40,950
have to quote a lot of the things that

00:10:38,100 --> 00:10:42,690
you would have to code before because

00:10:40,950 --> 00:10:45,779
you know he's just using the yellow

00:10:42,690 --> 00:10:48,600
serialization so it knows how to quote

00:10:45,779 --> 00:10:51,240
things you know by itself you don't have

00:10:48,600 --> 00:10:55,170
to do any kind of crazy manual white

00:10:51,240 --> 00:10:57,180
space indentation like you would have to

00:10:55,170 --> 00:10:58,800
do in hell because again it's not

00:10:57,180 --> 00:11:01,290
textual templating it just knows that

00:10:58,800 --> 00:11:06,060
hey this set of values goes after this

00:11:01,290 --> 00:11:09,589
particular key white is he also offers a

00:11:06,060 --> 00:11:12,270
Python like language it's a it's a

00:11:09,589 --> 00:11:14,250
language that's taken from basil the

00:11:12,270 --> 00:11:15,930
build tool from Google they have a

00:11:14,250 --> 00:11:19,770
standalone library for using the

00:11:15,930 --> 00:11:21,750
language called star lock and you know

00:11:19,770 --> 00:11:23,730
that also offers quite a few benefits in

00:11:21,750 --> 00:11:25,740
terms of like friendliness in how do you

00:11:23,730 --> 00:11:29,190
actually type in some of the template

00:11:25,740 --> 00:11:32,459
code and it also offers you know a few

00:11:29,190 --> 00:11:34,529
nice side-effects that you know your

00:11:32,459 --> 00:11:38,010
templating environment is fully turmeric

00:11:34,529 --> 00:11:41,130
there is no you know unless you actually

00:11:38,010 --> 00:11:42,899
explicitly you know make it available

00:11:41,130 --> 00:11:44,790
through the libraries or something like

00:11:42,899 --> 00:11:48,300
that but obviously I don't want to do

00:11:44,790 --> 00:11:51,329
that it's a you know doesn't have any

00:11:48,300 --> 00:11:53,430
way to to access network this any of

00:11:51,329 --> 00:11:55,950
that other stuff right so the templating

00:11:53,430 --> 00:11:58,460
itself is more or less just a compute

00:11:55,950 --> 00:12:01,610
kind of a task right

00:11:58,460 --> 00:12:03,870
and I guess the other interesting

00:12:01,610 --> 00:12:07,710
feature of ytt is that there is an

00:12:03,870 --> 00:12:10,380
overlay functionality available so it's

00:12:07,710 --> 00:12:13,740
somewhat competitive to you know both

00:12:10,380 --> 00:12:15,210
shops files customized but I think the

00:12:13,740 --> 00:12:20,220
syntax is a little bit friendlier and

00:12:15,210 --> 00:12:23,100
more more flexible in some cases so yes

00:12:20,220 --> 00:12:25,380
that's that's kind of the rundown of you

00:12:23,100 --> 00:12:30,950
know little comparison between those two

00:12:25,380 --> 00:12:35,610
tools ytt also does support a notion of

00:12:30,950 --> 00:12:38,670
libraries and has you know you know it's

00:12:35,610 --> 00:12:41,520
built around some of those primitives

00:12:38,670 --> 00:12:44,760
that allow better the use of your

00:12:41,520 --> 00:12:46,410
configuration so we're gonna see I guess

00:12:44,760 --> 00:12:49,680
some of that functionality and play as

00:12:46,410 --> 00:12:53,190
well so yeah so I think unless anyone

00:12:49,680 --> 00:13:00,360
have particular questions we can maybe a

00:12:53,190 --> 00:13:04,530
check out the demo all right well I'll

00:13:00,360 --> 00:13:06,290
assume no questions let me see let me

00:13:04,530 --> 00:13:11,520
see let me see let me see

00:13:06,290 --> 00:13:13,370
so where is the button there is what

00:13:11,520 --> 00:13:16,560
this here

00:13:13,370 --> 00:13:18,030
alright hopefully it's large enough I do

00:13:16,560 --> 00:13:19,800
have a mini cube running over here but

00:13:18,030 --> 00:13:23,760
I'm not even sure if we need to do that

00:13:19,800 --> 00:13:28,649
so maybe monster office sublime over

00:13:23,760 --> 00:13:33,540
here so the idea

00:13:28,649 --> 00:13:35,160
and you know quandary right is that

00:13:33,540 --> 00:13:36,839
there is lots of different components

00:13:35,160 --> 00:13:39,209
that interplay with each other it which

00:13:36,839 --> 00:13:41,249
is fairly standard in a you know in a

00:13:39,209 --> 00:13:44,279
modern application there's multiple

00:13:41,249 --> 00:13:45,779
services right so to represent that what

00:13:44,279 --> 00:13:49,740
I have is actually three folders over

00:13:45,779 --> 00:13:52,589
here CC DD and you a obviously this is

00:13:49,740 --> 00:13:55,230
not like video confidently so there's no

00:13:52,589 --> 00:13:57,029
cloud to run or anything like that but

00:13:55,230 --> 00:13:59,730
it's representative of a few components

00:13:57,029 --> 00:14:02,730
that makes this thing Cloud Foundry so

00:13:59,730 --> 00:14:04,829
the idea behind some of this layout is

00:14:02,730 --> 00:14:06,509
that this individual components more or

00:14:04,829 --> 00:14:08,850
less for the same pattern right there is

00:14:06,509 --> 00:14:11,910
config folder that contains some you

00:14:08,850 --> 00:14:14,329
know templates you as small as thing

00:14:11,910 --> 00:14:18,269
kind of a thing and then there is also

00:14:14,329 --> 00:14:21,300
user provided folders so this is I just

00:14:18,269 --> 00:14:22,589
do it in for demo there but you know

00:14:21,300 --> 00:14:24,360
let's say there's some kind of a

00:14:22,589 --> 00:14:26,309
database secret or something like that

00:14:24,360 --> 00:14:27,779
that would come externally from

00:14:26,309 --> 00:14:33,839
somewhere else wouldn't be checked in

00:14:27,779 --> 00:14:37,259
your repo so if we take a look at let's

00:14:33,839 --> 00:14:38,929
say Cloud Controller we'll see that

00:14:37,259 --> 00:14:43,379
there is a thing called value siamo and

00:14:38,929 --> 00:14:45,509
valleys GMO is one of the files that's

00:14:43,379 --> 00:14:48,899
part of configuration and it's annotated

00:14:45,509 --> 00:14:51,240
through ytt syntax as data values so

00:14:48,899 --> 00:14:54,240
this indicates to ITT that this is the

00:14:51,240 --> 00:14:55,949
input to the system input to these

00:14:54,240 --> 00:15:01,829
templates and you can have multiple dos

00:14:55,949 --> 00:15:04,290
variables data values parts so you know

00:15:01,829 --> 00:15:06,089
as as one would imagine there's a few

00:15:04,290 --> 00:15:08,009
you know generic configurations for

00:15:06,089 --> 00:15:10,649
cloud controller maybe like a namespace

00:15:08,009 --> 00:15:13,079
where to deploy you know in coronaries a

00:15:10,649 --> 00:15:15,959
you a URL that's by default is empty

00:15:13,079 --> 00:15:18,720
because what's new because you know it

00:15:15,959 --> 00:15:22,529
doesn't know how to connect to UA but it

00:15:18,720 --> 00:15:25,049
needs one what else some database stuff

00:15:22,529 --> 00:15:28,529
right so the database URL username

00:15:25,049 --> 00:15:30,420
password all that stuff so the other

00:15:28,529 --> 00:15:33,389
configuration file that's most

00:15:30,420 --> 00:15:35,730
interesting is this guy over here the

00:15:33,389 --> 00:15:38,009
bulk of it is actually this low section

00:15:35,730 --> 00:15:40,410
where there's a services kubernetes

00:15:38,009 --> 00:15:42,030
object there is a deployment kubernetes

00:15:40,410 --> 00:15:46,050
objects and there's a config map

00:15:42,030 --> 00:15:48,000
kubernetes object now given that ytt is

00:15:46,050 --> 00:15:49,500
a templating language it allows you to

00:15:48,000 --> 00:15:51,420
reuse certain things right so for

00:15:49,500 --> 00:15:54,050
example note that there's a few places

00:15:51,420 --> 00:15:56,430
were we using the same set of labels

00:15:54,050 --> 00:15:58,620
between let's say service at a

00:15:56,430 --> 00:16:01,080
deployment so that's defined over here

00:15:58,620 --> 00:16:04,610
in a function and so we're saying that

00:16:01,080 --> 00:16:07,260
there is a label CC and its value empty

00:16:04,610 --> 00:16:09,780
there is also a config map over here in

00:16:07,260 --> 00:16:12,270
the config map let's say you know as

00:16:09,780 --> 00:16:15,720
coming from a boss world there is a lot

00:16:12,270 --> 00:16:19,110
of you know applications that consume

00:16:15,720 --> 00:16:21,030
Jason or no files so config map would

00:16:19,110 --> 00:16:23,220
have let's say configure a monkey and

00:16:21,030 --> 00:16:26,250
under it it needs to be a full-blown

00:16:23,220 --> 00:16:28,530
llamó configuration file right so one

00:16:26,250 --> 00:16:30,270
interesting thing with ytt can you know

00:16:28,530 --> 00:16:32,550
compose some of the libraries that has

00:16:30,270 --> 00:16:34,380
built in so here we're saying let's yeah

00:16:32,550 --> 00:16:36,900
Molly encode the result of the config

00:16:34,380 --> 00:16:39,060
file function and a config file function

00:16:36,900 --> 00:16:41,790
contains you know I talked it over here

00:16:39,060 --> 00:16:43,500
that dips you know the configuration

00:16:41,790 --> 00:16:47,850
that we actually care about like you a

00:16:43,500 --> 00:16:51,000
URL GB or all that stuff so now over

00:16:47,850 --> 00:16:52,440
here mmm I'm also seeing still function

00:16:51,000 --> 00:16:54,300
called value that's actually something

00:16:52,440 --> 00:16:57,420
I've defined as little shorthand over

00:16:54,300 --> 00:17:00,480
here you know by default you know what

00:16:57,420 --> 00:17:03,690
if you exposes this data library data

00:17:00,480 --> 00:17:06,060
values and pull out some certain values

00:17:03,690 --> 00:17:09,330
but I decided to actually write in your

00:17:06,060 --> 00:17:11,100
function that makes the assertion the

00:17:09,330 --> 00:17:15,020
error message you look better because I

00:17:11,100 --> 00:17:18,210
wanted to see value is not empty so

00:17:15,020 --> 00:17:21,000
there is that usage of that value call

00:17:18,210 --> 00:17:22,290
for each one of those things so anyway

00:17:21,000 --> 00:17:24,300
so that that's our standard

00:17:22,290 --> 00:17:28,590
configuration file may look like let's

00:17:24,300 --> 00:17:30,630
say right hmm and at the end run it and

00:17:28,590 --> 00:17:33,570
my computer's a little bit slow so

00:17:30,630 --> 00:17:36,360
hopefully I'm not wagging too much so

00:17:33,570 --> 00:17:41,670
let's let's actually CD into config

00:17:36,360 --> 00:17:43,890
which it seemed ABC and say ytt config

00:17:41,670 --> 00:17:46,320
and most likely all fail right now and

00:17:43,890 --> 00:17:50,370
it's telling us that hey look you a URL

00:17:46,320 --> 00:17:52,020
is missing right it needs to be there

00:17:50,370 --> 00:17:53,400
right and that's you know there's your

00:17:52,020 --> 00:17:55,470
stack trace that's telling us you know

00:17:53,400 --> 00:17:57,240
why it's failing and because there's a

00:17:55,470 --> 00:17:58,919
few lines of code it's asking us right

00:17:57,240 --> 00:18:00,929
so I don't actually remember if I

00:17:58,919 --> 00:18:04,380
populated this file correctly it looks

00:18:00,929 --> 00:18:11,400
like this so if we take a look at user

00:18:04,380 --> 00:18:13,530
provided values hmm note that I've I've

00:18:11,400 --> 00:18:15,900
specified you a URL to just be here a

00:18:13,530 --> 00:18:18,000
URL and then I've specified some other

00:18:15,900 --> 00:18:19,230
diamond values for it to database stop I

00:18:18,000 --> 00:18:21,630
actually don't think clients is

00:18:19,230 --> 00:18:23,900
necessary for Club controller must be

00:18:21,630 --> 00:18:26,850
assembled robocopy face quite out there

00:18:23,900 --> 00:18:29,039
so yeah so note that it only needed to

00:18:26,850 --> 00:18:31,380
fill in the values that are not present

00:18:29,039 --> 00:18:33,299
in the other configuration right so

00:18:31,380 --> 00:18:34,860
there was value siamo right so the other

00:18:33,299 --> 00:18:37,740
values llamo specified all kinds of

00:18:34,860 --> 00:18:39,750
other things and but I had a few keep

00:18:37,740 --> 00:18:42,570
the missing and then in this file is

00:18:39,750 --> 00:18:44,580
specified only the missing stuff now you

00:18:42,570 --> 00:18:45,929
know for example to throw in some

00:18:44,580 --> 00:18:48,360
interesting intrigue over here

00:18:45,929 --> 00:18:50,760
let's say if I would have a type over

00:18:48,360 --> 00:18:52,740
here password instead of password I

00:18:50,760 --> 00:18:54,299
would've run the same command over here

00:18:52,740 --> 00:18:56,580
where actually would have blown up

00:18:54,299 --> 00:18:59,090
telling us that hey I don't know how to

00:18:56,580 --> 00:19:01,740
apply this past four you know

00:18:59,090 --> 00:19:03,870
configuration on top of the other data

00:19:01,740 --> 00:19:07,490
values file right so why did you try to

00:19:03,870 --> 00:19:11,220
be as protective of the user

00:19:07,490 --> 00:19:13,429
configuration writers you know so this

00:19:11,220 --> 00:19:18,230
that kind of tries to prevent mistakes

00:19:13,429 --> 00:19:24,240
so anyway so you know we we seen that

00:19:18,230 --> 00:19:29,370
our Cloud Controller let's say Yama file

00:19:24,240 --> 00:19:31,890
that generated right and you know that

00:19:29,370 --> 00:19:33,539
does a fairly you know simplistic kind

00:19:31,890 --> 00:19:35,100
of a template that you know that give us

00:19:33,539 --> 00:19:37,470
this nice configuration we can finally

00:19:35,100 --> 00:19:39,840
go ahead and deploy so I also included

00:19:37,470 --> 00:19:42,600
this release folder release folder has

00:19:39,840 --> 00:19:46,020
this little um old snippet that tells

00:19:42,600 --> 00:19:48,720
kay build which image to use too bad

00:19:46,020 --> 00:19:51,240
though that I don't think this because I

00:19:48,720 --> 00:19:55,409
blew away my mini cube this images I

00:19:51,240 --> 00:19:58,049
don't think are no longer true so iam

00:19:55,409 --> 00:20:01,049
pushing to an your registry so anyway so

00:19:58,049 --> 00:20:01,919
I'll mention the I'll mention this in a

00:20:01,049 --> 00:20:05,360
little bit

00:20:01,919 --> 00:20:08,270
so we

00:20:05,360 --> 00:20:09,830
Clow controller uas pretty much the same

00:20:08,270 --> 00:20:12,559
exact thing you know it's not that

00:20:09,830 --> 00:20:14,299
different we got some we got some

00:20:12,559 --> 00:20:15,860
configuration going on here actually it

00:20:14,299 --> 00:20:18,110
is slightly different and there is my

00:20:15,860 --> 00:20:20,750
slightly different is note that else is

00:20:18,110 --> 00:20:22,760
clients right and as you all know you a

00:20:20,750 --> 00:20:24,740
you know as a bunch of clients that

00:20:22,760 --> 00:20:26,299
needs to be configured for cloud

00:20:24,740 --> 00:20:28,190
controller and let's say some of the

00:20:26,299 --> 00:20:31,160
other services to operate so this is

00:20:28,190 --> 00:20:32,870
where this input would go into rain and

00:20:31,160 --> 00:20:36,320
if you actually take a look at the

00:20:32,870 --> 00:20:38,000
configure mo here we have a tip setup

00:20:36,320 --> 00:20:39,740
over here we have a config file that

00:20:38,000 --> 00:20:41,540
that's ultimately going to be in a

00:20:39,740 --> 00:20:44,870
config map right

00:20:41,540 --> 00:20:47,410
and we're also saying over here that for

00:20:44,870 --> 00:20:51,020
each one of the clients that's given

00:20:47,410 --> 00:20:53,929
through to us to the data values we want

00:20:51,020 --> 00:20:58,160
to actually make little you know key

00:20:53,929 --> 00:20:59,990
value kind of key map with value kind of

00:20:58,160 --> 00:21:01,700
thing and so I was just kind of trying

00:20:59,990 --> 00:21:03,799
to replicate what the current you a

00:21:01,700 --> 00:21:06,980
format looks like and how that would be

00:21:03,799 --> 00:21:08,750
you know configured right I say

00:21:06,980 --> 00:21:10,940
otherwise there is not really anything

00:21:08,750 --> 00:21:12,530
different going on over here one other

00:21:10,940 --> 00:21:16,059
interesting thing to note over here is

00:21:12,530 --> 00:21:18,110
that you a let's say will be deployed to

00:21:16,059 --> 00:21:20,510
kubernetes right so there's going to be

00:21:18,110 --> 00:21:22,429
some kind of a URL that you should

00:21:20,510 --> 00:21:25,760
access you a right and then kubernetes

00:21:22,429 --> 00:21:27,470
the urls or default genus this one's our

00:21:25,760 --> 00:21:30,890
namespace trait so their names pasted

00:21:27,470 --> 00:21:33,140
under there you know namespace so i just

00:21:30,890 --> 00:21:36,110
for no reason i just decided to put a

00:21:33,140 --> 00:21:37,640
little method over here called an S you

00:21:36,110 --> 00:21:40,190
know obviously you can inline it over

00:21:37,640 --> 00:21:42,440
here so yes that's the URL that's

00:21:40,190 --> 00:21:44,450
generated by this UAE configuration

00:21:42,440 --> 00:21:46,730
right and if we would have you know run

00:21:44,450 --> 00:21:50,990
ytg again with this thing you know if we

00:21:46,730 --> 00:21:55,790
go ahead and say on a CD out here in to

00:21:50,990 --> 00:21:57,020
you a again you know it works but you

00:21:55,790 --> 00:21:58,429
know some of the values are empty

00:21:57,020 --> 00:22:00,799
because we haven't specified anything

00:21:58,429 --> 00:22:05,020
right our user provide it values are

00:22:00,799 --> 00:22:08,419
empty over here except database I guess

00:22:05,020 --> 00:22:10,190
alright so we have these few components

00:22:08,419 --> 00:22:11,330
the database actually is that me over

00:22:10,190 --> 00:22:14,750
here it doesn't actually have anything

00:22:11,330 --> 00:22:16,790
just as a config map but one interesting

00:22:14,750 --> 00:22:18,890
thing about databases is that somehow

00:22:16,790 --> 00:22:21,890
someone needs to tell them that hey

00:22:18,890 --> 00:22:24,559
provisionally some you know you know

00:22:21,890 --> 00:22:28,250
username password to the database value

00:22:24,559 --> 00:22:30,020
things like that it so the values llamo

00:22:28,250 --> 00:22:31,760
for this guy you know takes a bunch of

00:22:30,020 --> 00:22:33,590
databases and then for every single

00:22:31,760 --> 00:22:35,570
database it will go ahead and you know

00:22:33,590 --> 00:22:38,390
extract the name username password and

00:22:35,570 --> 00:22:40,250
make some yellow for it wait so that

00:22:38,390 --> 00:22:42,830
really depends how you structure

00:22:40,250 --> 00:22:46,250
database right there based configuration

00:22:42,830 --> 00:22:49,790
of it so anyway so we have these three

00:22:46,250 --> 00:22:51,710
things you a clock control ID be they

00:22:49,790 --> 00:22:58,220
need to all kind of talk to each other

00:22:51,710 --> 00:23:02,480
right so if I get out here all right

00:22:58,220 --> 00:23:09,950
I'll say ytg config now we'll say - F

00:23:02,480 --> 00:23:13,400
user provided this DB it will actually

00:23:09,950 --> 00:23:16,040
generate a lot of this configuration now

00:23:13,400 --> 00:23:17,360
it will generate the configuration for

00:23:16,040 --> 00:23:19,760
each one of those you know Cloud

00:23:17,360 --> 00:23:22,669
Controller you a database it was

00:23:19,760 --> 00:23:24,919
questioned together but note that

00:23:22,669 --> 00:23:26,450
actually a few things happened over here

00:23:24,919 --> 00:23:29,600
so if you look at the Cloud Controller

00:23:26,450 --> 00:23:32,380
config it actually has the you a URL

00:23:29,600 --> 00:23:37,610
over here you know the proper namespace

00:23:32,380 --> 00:23:39,140
if you look at let's scroll let's see so

00:23:37,610 --> 00:23:41,179
if you look at the database the database

00:23:39,140 --> 00:23:42,919
actually has a list of the databases

00:23:41,179 --> 00:23:46,100
that needs to be provision for cloud

00:23:42,919 --> 00:23:49,580
controller and for you a now if you look

00:23:46,100 --> 00:23:51,770
at you a config it also has appropriate

00:23:49,580 --> 00:23:54,049
database configuration right so database

00:23:51,770 --> 00:23:56,150
has the URL and particular username and

00:23:54,049 --> 00:23:59,710
password you know one could also have

00:23:56,150 --> 00:24:02,960
like a database name or some front array

00:23:59,710 --> 00:24:05,880
so how did that all come together right

00:24:02,960 --> 00:24:08,070
so there isn't really no

00:24:05,880 --> 00:24:10,050
obvious ways of how to combine all of

00:24:08,070 --> 00:24:11,460
that stuff and share the information so

00:24:10,050 --> 00:24:13,920
there's a little bit of temporary needs

00:24:11,460 --> 00:24:16,620
to happen so this is a little bit of

00:24:13,920 --> 00:24:18,000
sampling it through in in the OL yeah mo

00:24:16,620 --> 00:24:19,200
file and we'll take a look at on a

00:24:18,000 --> 00:24:21,420
second now

00:24:19,200 --> 00:24:25,830
given that some of this configuration

00:24:21,420 --> 00:24:26,760
requires some you know input from the

00:24:25,830 --> 00:24:29,820
user

00:24:26,760 --> 00:24:31,710
here's an example Wiley's file and

00:24:29,820 --> 00:24:34,260
here's what a user had to provide for

00:24:31,710 --> 00:24:36,090
example on top of this alright so keep

00:24:34,260 --> 00:24:38,610
in mind a ytt is not meant to be used

00:24:36,090 --> 00:24:40,140
for secret generation you just accept

00:24:38,610 --> 00:24:42,810
some input value C does not many

00:24:40,140 --> 00:24:44,760
facilities to make any network requests

00:24:42,810 --> 00:24:46,140
or generate anything or you know there's

00:24:44,760 --> 00:24:48,570
not even a way to do any kind of

00:24:46,140 --> 00:24:50,760
randomized thing right so if you have to

00:24:48,570 --> 00:24:52,200
throw in some username password my

00:24:50,760 --> 00:24:53,790
thinking about it is that there is a

00:24:52,200 --> 00:24:55,470
responsibility for another tool that

00:24:53,790 --> 00:24:58,800
knows how to generate some secrets or

00:24:55,470 --> 00:25:00,390
interconnect with something right so

00:24:58,800 --> 00:25:01,890
anyway so in this particular case we

00:25:00,390 --> 00:25:03,900
just have to throw in some you know

00:25:01,890 --> 00:25:06,210
cloud control create a username

00:25:03,900 --> 00:25:08,880
passwords for the database that we want

00:25:06,210 --> 00:25:10,410
it to be used alternatively if you

00:25:08,880 --> 00:25:12,630
didn't want to use the database that

00:25:10,410 --> 00:25:15,780
came with this configuration you know

00:25:12,630 --> 00:25:17,640
throw in DB enabled falls over here and

00:25:15,780 --> 00:25:20,280
then you know provide some external

00:25:17,640 --> 00:25:22,800
database configuration right so now how

00:25:20,280 --> 00:25:27,860
does this all Yama file look like based

00:25:22,800 --> 00:25:30,090
on this stuff so there's a little bit of

00:25:27,860 --> 00:25:33,150
there's a little bit of comment we're

00:25:30,090 --> 00:25:35,100
not commenting but validation going on I

00:25:33,150 --> 00:25:36,330
just wanted to kind of play around with

00:25:35,100 --> 00:25:38,130
certain things now

00:25:36,330 --> 00:25:39,600
one you could always you know split up

00:25:38,130 --> 00:25:41,730
some of this stuff into different files

00:25:39,600 --> 00:25:44,750
but I just decided to dump it all into

00:25:41,730 --> 00:25:49,650
one for convenience for now so

00:25:44,750 --> 00:25:52,410
ultimately the end of the the end of the

00:25:49,650 --> 00:25:55,110
result is this is that somehow we have a

00:25:52,410 --> 00:25:58,590
bunch of Cici configuration that we want

00:25:55,110 --> 00:26:01,050
to you know replace this so table - and

00:25:58,590 --> 00:26:03,390
Yama means the document right so we want

00:26:01,050 --> 00:26:07,410
to replace whatever the result comes in

00:26:03,390 --> 00:26:10,380
over here we want to replace this table

00:26:07,410 --> 00:26:13,830
- the document with this set of results

00:26:10,380 --> 00:26:16,290
that comes out over here right now how

00:26:13,830 --> 00:26:19,620
did we obtain this configuration right

00:26:16,290 --> 00:26:22,230
so why Fiji and this is

00:26:19,620 --> 00:26:24,360
developing feature there's a few

00:26:22,230 --> 00:26:27,410
community discussions around it and

00:26:24,360 --> 00:26:31,080
whatnot but this is actually a way to

00:26:27,410 --> 00:26:32,790
use other ytt configurations as a

00:26:31,080 --> 00:26:34,470
library from within another

00:26:32,790 --> 00:26:36,240
configuration right so this is why I was

00:26:34,470 --> 00:26:39,480
kind of showing you earlier on that

00:26:36,240 --> 00:26:42,330
there is three folders ccdb and UA under

00:26:39,480 --> 00:26:45,480
ytt Lib and that's how ytt knows how to

00:26:42,330 --> 00:26:50,640
find those right so we're saying use the

00:26:45,480 --> 00:26:52,650
library built in module and you know

00:26:50,640 --> 00:26:55,290
grab the configuration from a file

00:26:52,650 --> 00:26:57,000
system under CC config right so it will

00:26:55,290 --> 00:26:59,010
grab this entire directory over here

00:26:57,000 --> 00:27:02,160
that has you know config um all that

00:26:59,010 --> 00:27:04,290
stuff great provide some additional data

00:27:02,160 --> 00:27:06,180
values right so this is data values that

00:27:04,290 --> 00:27:09,180
somehow you may massage into it so for

00:27:06,180 --> 00:27:11,880
example here we're saying let's you know

00:27:09,180 --> 00:27:14,280
let's throw in some your you a URL it's

00:27:11,880 --> 00:27:16,380
doing some DB functionality stuff right

00:27:14,280 --> 00:27:17,970
and then finally let's call the results

00:27:16,380 --> 00:27:19,680
on it and that's pretty much it right so

00:27:17,970 --> 00:27:21,600
it kind of grabs it and assembles it

00:27:19,680 --> 00:27:23,490
together now the benefit of this a

00:27:21,600 --> 00:27:25,230
little bit more dynamic assembling right

00:27:23,490 --> 00:27:27,690
is that you can actually throw in some

00:27:25,230 --> 00:27:29,940
logic around it right so I've told you

00:27:27,690 --> 00:27:33,120
already before controller needed the you

00:27:29,940 --> 00:27:35,340
a URL so for example UA

00:27:33,120 --> 00:27:37,080
is its own kind of a configuration

00:27:35,340 --> 00:27:41,100
component right and you can actually

00:27:37,080 --> 00:27:43,170
grab the URL from the UA so it will

00:27:41,100 --> 00:27:46,880
actually execute this as a function over

00:27:43,170 --> 00:27:49,500
here from that you a configuration set

00:27:46,880 --> 00:27:51,300
and finally you know you can do some

00:27:49,500 --> 00:27:53,520
fancier things like for example do you

00:27:51,300 --> 00:27:55,260
want that DB to be included in the in

00:27:53,520 --> 00:27:57,450
the file configuration or not well you

00:27:55,260 --> 00:27:59,010
can kind of control it through some

00:27:57,450 --> 00:28:01,560
other data values that you wanna inject

00:27:59,010 --> 00:28:03,150
right so the idea here is just this

00:28:01,560 --> 00:28:04,910
these three components need to be kind

00:28:03,150 --> 00:28:08,010
of a slapped together there is some

00:28:04,910 --> 00:28:11,040
little bit of exchange going on you need

00:28:08,010 --> 00:28:14,340
to massage it and further in right but

00:28:11,040 --> 00:28:17,190
also you can kind of see individual

00:28:14,340 --> 00:28:19,410
components as big functions that take in

00:28:17,190 --> 00:28:21,210
one argument the argument being the set

00:28:19,410 --> 00:28:24,210
of you know did the data values that

00:28:21,210 --> 00:28:25,950
they defied right and based on these

00:28:24,210 --> 00:28:28,530
data values they produce some you know

00:28:25,950 --> 00:28:31,040
some some value right so that's pretty

00:28:28,530 --> 00:28:33,070
much what's happening in this all diamo

00:28:31,040 --> 00:28:36,010
configuration

00:28:33,070 --> 00:28:40,500
yes that's that's kind of it right so if

00:28:36,010 --> 00:28:43,809
we you know run it this way right we can

00:28:40,500 --> 00:28:47,500
you know we can generate this big let's

00:28:43,809 --> 00:28:49,000
say quanta llamo there is it's based on

00:28:47,500 --> 00:28:50,679
individual components right so idea

00:28:49,000 --> 00:28:52,390
there is that individual teams will

00:28:50,679 --> 00:28:54,669
actually produce those individual

00:28:52,390 --> 00:28:57,539
components right and then there is you

00:28:54,669 --> 00:29:01,600
know someone else let's say maybe a

00:28:57,539 --> 00:29:04,570
relevant team maybe a collaboration

00:29:01,600 --> 00:29:05,679
between those component teams where they

00:29:04,570 --> 00:29:07,419
you know bringing those different

00:29:05,679 --> 00:29:10,659
components together glue some of these

00:29:07,419 --> 00:29:12,429
pieces together and offer it as the you

00:29:10,659 --> 00:29:15,970
know it's the final templating artifact

00:29:12,429 --> 00:29:19,950
right so one thing that I also mentioned

00:29:15,970 --> 00:29:22,840
earlier on is I included this release

00:29:19,950 --> 00:29:26,440
configuration over here the image ml or

00:29:22,840 --> 00:29:28,149
whatnot right so the idea behind this

00:29:26,440 --> 00:29:29,470
stuff is that your CI is actually

00:29:28,149 --> 00:29:31,090
building an image rate doing some

00:29:29,470 --> 00:29:34,690
integration testing whatever with this

00:29:31,090 --> 00:29:35,980
configuration and somewhere maybe in the

00:29:34,690 --> 00:29:37,899
repo maybe somewhere else

00:29:35,980 --> 00:29:40,029
sharing that this is the image that got

00:29:37,899 --> 00:29:42,250
built right ideally a relevant team

00:29:40,029 --> 00:29:44,110
wouldn't have to be rebuilding images

00:29:42,250 --> 00:29:46,179
from source right I mean they could if

00:29:44,110 --> 00:29:48,370
they wanted to but ideally they wouldn't

00:29:46,179 --> 00:29:51,820
have to read so that is that you've

00:29:48,370 --> 00:29:54,549
actually shared this digest reference to

00:29:51,820 --> 00:29:56,320
some location in some registry here I

00:29:54,549 --> 00:29:58,320
was just using a local doctor daemon so

00:29:56,320 --> 00:30:04,679
that's why this URL looks a little funky

00:29:58,320 --> 00:30:09,909
and finally when you were when you're

00:30:04,679 --> 00:30:12,640
running your how you call this when

00:30:09,909 --> 00:30:15,580
you're running your templates right you

00:30:12,640 --> 00:30:19,450
can actually throw in these pre-built

00:30:15,580 --> 00:30:20,740
images into it and then cable gladion

00:30:19,450 --> 00:30:24,029
you know replace those images

00:30:20,740 --> 00:30:27,580
appropriately so give you an example I

00:30:24,029 --> 00:30:29,890
don't thing actually done this so

00:30:27,580 --> 00:30:31,330
actually I did I did actually have a

00:30:29,890 --> 00:30:33,220
little script over here template

00:30:31,330 --> 00:30:35,980
pre-built so let's take a look at what

00:30:33,220 --> 00:30:39,760
the script does so this script actually

00:30:35,980 --> 00:30:44,409
just runs ytg config you know it throws

00:30:39,760 --> 00:30:46,190
in the the two pre-build images so for

00:30:44,409 --> 00:30:47,920
CC and for you a

00:30:46,190 --> 00:30:50,210
and then this is just some other

00:30:47,920 --> 00:30:54,350
configuration for the database it's

00:30:50,210 --> 00:30:55,640
irrelevant to this discussion so yeah so

00:30:54,350 --> 00:31:00,260
let's let's see what that looks like

00:30:55,640 --> 00:31:02,600
right so if we go ahead and run this she

00:31:00,260 --> 00:31:04,400
should be pause for a minute and ask if

00:31:02,600 --> 00:31:06,860
folks have questions and she's shown

00:31:04,400 --> 00:31:09,170
quite a bit of the ytt functionality and

00:31:06,860 --> 00:31:11,180
and kind of how things fit together and

00:31:09,170 --> 00:31:13,340
and like how a templated thing would

00:31:11,180 --> 00:31:16,520
look like could be a good place to pause

00:31:13,340 --> 00:31:18,770
ask questions and then move forward with

00:31:16,520 --> 00:31:21,830
the building of the image and deploying

00:31:18,770 --> 00:31:24,470
part should give me one second let me

00:31:21,830 --> 00:31:26,030
just finish this time so the all I

00:31:24,470 --> 00:31:27,980
wanted to show is that you know when

00:31:26,030 --> 00:31:29,750
running that same ytt command right if

00:31:27,980 --> 00:31:31,490
we just throw in these traditional files

00:31:29,750 --> 00:31:34,910
right now we have your screens not

00:31:31,490 --> 00:31:36,350
shared teach me what I did it stop

00:31:34,910 --> 00:31:39,200
sharing motion there when did it stop

00:31:36,350 --> 00:31:43,510
sharing just when I started talking I

00:31:39,200 --> 00:31:45,800
Shabet are you sorry I see anyway say so

00:31:43,510 --> 00:31:47,360
always trying to show is that this image

00:31:45,800 --> 00:31:49,940
overrides you know show up over here

00:31:47,360 --> 00:31:52,760
right and this URL right that's already

00:31:49,940 --> 00:31:55,640
pre-built by the component team will be

00:31:52,760 --> 00:31:58,910
somehow eventually that's what is

00:31:55,640 --> 00:32:01,190
getting into you know the the cable tool

00:31:58,910 --> 00:32:03,740
will you know find appropriate image

00:32:01,190 --> 00:32:06,410
location so for example this image CC

00:32:03,740 --> 00:32:09,050
image will be correlated with whatever

00:32:06,410 --> 00:32:12,530
the CC image is and you know we'll use

00:32:09,050 --> 00:32:13,760
that so anyway yeah so I think Cooper

00:32:12,530 --> 00:32:18,650
has a very good point

00:32:13,760 --> 00:32:20,480
definitely spoken for a while shoulde

00:32:18,650 --> 00:32:21,230
ytt stuff and some of the gluing stuff

00:32:20,480 --> 00:32:24,440
going on there

00:32:21,230 --> 00:32:26,980
showed some the component stuff how they

00:32:24,440 --> 00:32:26,980
may look like

00:32:34,110 --> 00:32:41,580
I have a high-level philosophical

00:32:36,270 --> 00:32:52,590
question it's not about brexit and thank

00:32:41,580 --> 00:32:54,750
God his ghost called bear what why is

00:32:52,590 --> 00:32:59,970
there so much animal in the world now

00:32:54,750 --> 00:33:02,910
that we need like languages to template

00:32:59,970 --> 00:33:05,580
oh yeah like I mean I did you check

00:33:02,910 --> 00:33:09,900
genuinely like it like what what is it

00:33:05,580 --> 00:33:12,780
why is it people have been successful

00:33:09,900 --> 00:33:15,630
with CF for years and never needed the

00:33:12,780 --> 00:33:17,160
animal templating engine or Yama give or

00:33:15,630 --> 00:33:18,929
take maybe four lines in a manifest

00:33:17,160 --> 00:33:22,830
camel and people have been successful

00:33:18,929 --> 00:33:25,440
with Bosch for years and I mean they

00:33:22,830 --> 00:33:28,049
need a Bosch - and like a few ops files

00:33:25,440 --> 00:33:30,270
to change something but they didn't need

00:33:28,049 --> 00:33:34,950
like a full scale programming language

00:33:30,270 --> 00:33:39,799
integrated into they Amal and I why is

00:33:34,950 --> 00:33:43,340
this happening can someone make it stop

00:33:39,799 --> 00:33:46,650
what what like you know what I mean like

00:33:43,340 --> 00:33:49,380
what we you know there's a fundamental

00:33:46,650 --> 00:33:51,030
and I we solving the symptom with all

00:33:49,380 --> 00:33:55,590
this ya know stuff and this is like

00:33:51,030 --> 00:33:58,140
anime easing solution but is there is

00:33:55,590 --> 00:34:00,179
there any way we could not be ill so

00:33:58,140 --> 00:34:03,110
I've I've had a similar conversation

00:34:00,179 --> 00:34:09,119
with someone else and what we're here

00:34:03,110 --> 00:34:14,280
what we have both and the rap agreeing

00:34:09,119 --> 00:34:17,700
on is that there is a lot of so there is

00:34:14,280 --> 00:34:19,530
this complexity floating around and it's

00:34:17,700 --> 00:34:20,909
really how you slice it and dice this

00:34:19,530 --> 00:34:22,980
where this complexity goes but it

00:34:20,909 --> 00:34:25,530
doesn't ultimately disappear so for

00:34:22,980 --> 00:34:29,520
example and it's from my own experiences

00:34:25,530 --> 00:34:31,050
you know she of push command yes is

00:34:29,520 --> 00:34:33,750
there and it may look simple however

00:34:31,050 --> 00:34:36,869
once you start production izing it the

00:34:33,750 --> 00:34:38,669
the configuration of that whatever you

00:34:36,869 --> 00:34:40,560
know the app that you pushing on

00:34:38,669 --> 00:34:42,359
whatever it still has to come from

00:34:40,560 --> 00:34:44,879
somewhere and that's you know typically

00:34:42,359 --> 00:34:47,220
not included in that default sea of push

00:34:44,879 --> 00:34:48,010
experience for example right so some of

00:34:47,220 --> 00:34:50,050
our customers

00:34:48,010 --> 00:34:52,179
pillow for example rate they end up

00:34:50,050 --> 00:34:54,669
writing orchestration tooling around CF

00:34:52,179 --> 00:34:58,630
push such that they can do it let's say

00:34:54,669 --> 00:35:00,280
more declarative manner right versus you

00:34:58,630 --> 00:35:02,410
know having to kind of what translated

00:35:00,280 --> 00:35:05,140
into more effective tonight for borscht

00:35:02,410 --> 00:35:06,760
specifically I can tell you that some

00:35:05,140 --> 00:35:09,310
that complexity was pushed into the

00:35:06,760 --> 00:35:11,490
releases right some that complexion was

00:35:09,310 --> 00:35:13,870
pushed into links some that complexity

00:35:11,490 --> 00:35:16,710
you know was left to both shops files

00:35:13,870 --> 00:35:19,000
right so it just really it's it's it

00:35:16,710 --> 00:35:22,690
traveling this complexity around right

00:35:19,000 --> 00:35:25,030
and the question is well where where is

00:35:22,690 --> 00:35:28,450
the correct place for it right now

00:35:25,030 --> 00:35:30,670
the way I think about it is the correct

00:35:28,450 --> 00:35:32,140
place for that complexity is really

00:35:30,670 --> 00:35:33,130
depends on a system right because

00:35:32,140 --> 00:35:34,810
different systems have different

00:35:33,130 --> 00:35:37,510
abstraction levels weight kubernetes

00:35:34,810 --> 00:35:40,600
provides different you know abstractions

00:35:37,510 --> 00:35:44,200
then boss right in kubernetes world and

00:35:40,600 --> 00:35:46,090
it's my opinion the the primitives that

00:35:44,200 --> 00:35:48,070
it gives you are more granular right so

00:35:46,090 --> 00:35:50,110
that means that you have to make that

00:35:48,070 --> 00:35:53,890
complex your shifts on top of those more

00:35:50,110 --> 00:35:56,680
granular you know blocks right now it

00:35:53,890 --> 00:35:59,470
just happened that you know you could

00:35:56,680 --> 00:36:01,120
put that complexity in here or you can

00:35:59,470 --> 00:36:04,860
put a complexity into something else

00:36:01,120 --> 00:36:08,020
right it's really I guess to me it's a

00:36:04,860 --> 00:36:12,240
there isn't really a place you can just

00:36:08,020 --> 00:36:13,650
hide it it's gonna be somewhere I guess

00:36:12,240 --> 00:36:16,900
[Music]

00:36:13,650 --> 00:36:20,830
so the question my head is is whether so

00:36:16,900 --> 00:36:22,750
for example right let example before K

00:36:20,830 --> 00:36:26,410
native etc existed right so like go back

00:36:22,750 --> 00:36:28,720
here anyone who looked like a deployment

00:36:26,410 --> 00:36:31,000
llamo was like this is mental there's

00:36:28,720 --> 00:36:32,800
like four places you have to put the

00:36:31,000 --> 00:36:35,410
same value right you have to put the tag

00:36:32,800 --> 00:36:36,940
in like four places what's going on and

00:36:35,410 --> 00:36:38,830
and so people solve that with these

00:36:36,940 --> 00:36:42,340
templating libraries so like put the tag

00:36:38,830 --> 00:36:43,720
in four places but then you seek in a

00:36:42,340 --> 00:36:46,900
three so why don't we just build the

00:36:43,720 --> 00:36:47,500
high-level thing that spits out those

00:36:46,900 --> 00:36:49,660
deployments

00:36:47,500 --> 00:36:51,370
it doesn't spit out within like a yeah

00:36:49,660 --> 00:36:54,880
more template but you could have if you

00:36:51,370 --> 00:36:57,070
see what I mean it just introduces a

00:36:54,880 --> 00:37:01,560
higher level concept to kubernetes right

00:36:57,070 --> 00:37:01,560
and I guess my question is is is

00:37:02,950 --> 00:37:08,240
are we just missing a few high-level

00:37:06,320 --> 00:37:09,710
concepts with which we could express

00:37:08,240 --> 00:37:11,750
everything in

00:37:09,710 --> 00:37:13,400
yamo without actually needing to

00:37:11,750 --> 00:37:15,860
template all the ammo if you see what I

00:37:13,400 --> 00:37:17,150
mean like could come like with the right

00:37:15,860 --> 00:37:18,590
high-level concepts

00:37:17,150 --> 00:37:21,170
couldn't we just write pretty simple

00:37:18,590 --> 00:37:23,510
yeah mo because K made if does let me

00:37:21,170 --> 00:37:26,450
like avoid a lot of stuff I used to have

00:37:23,510 --> 00:37:28,370
to write so I think this goes back to

00:37:26,450 --> 00:37:30,350
the shifting of complexity and I think

00:37:28,370 --> 00:37:32,840
the shifting of complexity also results

00:37:30,350 --> 00:37:34,550
in you know changes and flexibility

00:37:32,840 --> 00:37:36,260
alright so for example with K natives

00:37:34,550 --> 00:37:39,020
because they've taken a very opinionated

00:37:36,260 --> 00:37:43,550
approach to how they define their higher

00:37:39,020 --> 00:37:45,920
level limiting right now for people who

00:37:43,550 --> 00:37:48,050
want to let's say add some pressure I

00:37:45,920 --> 00:37:51,170
don't know whatever it may be right to

00:37:48,050 --> 00:37:53,120
their configuration there the

00:37:51,170 --> 00:37:55,370
effectively forced to go other ways

00:37:53,120 --> 00:37:57,530
right so you know this is the Carver

00:37:55,370 --> 00:37:59,570
constant challenge that K Native

00:37:57,530 --> 00:38:02,930
community has it how much features to

00:37:59,570 --> 00:38:04,400
add to you know to expose particular

00:38:02,930 --> 00:38:07,280
functionality right and if there's

00:38:04,400 --> 00:38:09,200
actually a fairly prominent thing that

00:38:07,280 --> 00:38:10,910
happens in help community where a chart

00:38:09,200 --> 00:38:13,370
starts out with five configuration

00:38:10,910 --> 00:38:15,110
values right but over time it becomes a

00:38:13,370 --> 00:38:16,880
thousand configuration values because

00:38:15,110 --> 00:38:18,620
everyone comes in and tries to solve the

00:38:16,880 --> 00:38:24,040
particular problem or a particular chart

00:38:18,620 --> 00:38:27,050
right so I think it goes back to it

00:38:24,040 --> 00:38:29,420
there is there is different there is

00:38:27,050 --> 00:38:31,100
different I guess complexity in

00:38:29,420 --> 00:38:34,340
different places and it all depends how

00:38:31,100 --> 00:38:36,260
you shifted around now to to go back to

00:38:34,340 --> 00:38:37,460
maybe what you're getting at is hey well

00:38:36,260 --> 00:38:40,670
what if we define some high level

00:38:37,460 --> 00:38:43,010
primitive that maybe doesn't in software

00:38:40,670 --> 00:38:45,050
it not let's a llamo does it all and go

00:38:43,010 --> 00:38:46,190
something like that right well we have

00:38:45,050 --> 00:38:49,130
we have some quite good programming

00:38:46,190 --> 00:38:52,700
languages so let's say you do that right

00:38:49,130 --> 00:38:55,670
it all goes back to again flexibility

00:38:52,700 --> 00:38:57,440
right so do you define a thousand

00:38:55,670 --> 00:38:59,660
options for all kinds of things that

00:38:57,440 --> 00:39:02,300
that the user may want to do to

00:38:59,660 --> 00:39:04,850
configure CF you know I think based on

00:39:02,300 --> 00:39:06,470
our boss experience in CF there's there

00:39:04,850 --> 00:39:08,360
is a bunch of options that people do

00:39:06,470 --> 00:39:12,400
wanna configure all the time right now

00:39:08,360 --> 00:39:14,470
in my opinion some things

00:39:12,400 --> 00:39:16,450
work out okay with that but some things

00:39:14,470 --> 00:39:18,190
they don't necessarily work out as well

00:39:16,450 --> 00:39:21,910
is that and so it becomes equation I

00:39:18,190 --> 00:39:24,309
could interject a bit we're running out

00:39:21,910 --> 00:39:28,329
of time and I wanted to talk about cubes

00:39:24,309 --> 00:39:32,799
yes as well you know I'm I'm interested

00:39:28,329 --> 00:39:35,049
in this effort but I'm not I'm not sure

00:39:32,799 --> 00:39:37,990
what the timeline is with that and we've

00:39:35,049 --> 00:39:40,690
had conversations in the past about cube

00:39:37,990 --> 00:39:43,450
CF and how it's going to be integrated

00:39:40,690 --> 00:39:45,940
maybe with Roland I've been looking to

00:39:43,450 --> 00:39:50,279
get some support from the railing team

00:39:45,940 --> 00:39:53,289
to try and get these cubes EF releases

00:39:50,279 --> 00:39:57,130
from relevant

00:39:53,289 --> 00:39:58,869
we have CI we have cats passing with an

00:39:57,130 --> 00:40:03,010
operator that deals with all of this

00:39:58,869 --> 00:40:06,010
complexity and this is something that's

00:40:03,010 --> 00:40:08,319
ready now and I really want to talk

00:40:06,010 --> 00:40:11,109
honestly about what the expectations are

00:40:08,319 --> 00:40:13,869
and how all of these efforts are

00:40:11,109 --> 00:40:16,829
competing or not competing or are

00:40:13,869 --> 00:40:25,660
expected to complete the project

00:40:16,829 --> 00:40:27,849
eventually yeah I can I can speak to

00:40:25,660 --> 00:40:31,359
that quickly so we have 15 minutes Vlad

00:40:27,849 --> 00:40:33,420
so I think we probably want to sync

00:40:31,359 --> 00:40:36,220
offline with the right group of people

00:40:33,420 --> 00:40:38,020
and then we can see how we can

00:40:36,220 --> 00:40:41,440
collaborate so I'll send out an invite

00:40:38,020 --> 00:40:45,480
or maybe for next week that's okay I

00:40:41,440 --> 00:40:49,539
think it's worth talking yeah sure so a

00:40:45,480 --> 00:40:51,490
quick update we are bumping on the

00:40:49,539 --> 00:40:55,690
latest C of deployment of the Soviet

00:40:51,490 --> 00:40:59,319
think we're 12 that 18 chats are passing

00:40:55,690 --> 00:41:01,960
Iranians working what else we have

00:40:59,319 --> 00:41:05,740
quirks lengths being tested right now

00:41:01,960 --> 00:41:09,250
which will allow integration of native

00:41:05,740 --> 00:41:12,520
components so if a component team wants

00:41:09,250 --> 00:41:14,349
to write kubernetes native stuff they

00:41:12,520 --> 00:41:17,920
can integrate with the risk of the Bosch

00:41:14,349 --> 00:41:19,809
world on kubernetes for those mechanisms

00:41:17,920 --> 00:41:24,089
and we can try and replace each

00:41:19,809 --> 00:41:25,810
component as we move as we move forward

00:41:24,089 --> 00:41:27,010
so hopefully this

00:41:25,810 --> 00:41:30,880
something that everyone's still

00:41:27,010 --> 00:41:32,410
interested in and yes I if we could chat

00:41:30,880 --> 00:41:43,510
as soon as possible that'd be great

00:41:32,410 --> 00:41:45,820
I really wonder about the scope of this

00:41:43,510 --> 00:41:48,460
session like on this Sun so like really

00:41:45,820 --> 00:41:50,590
far in the future and philosophical and

00:41:48,460 --> 00:41:52,090
it also looks like an approach that has

00:41:50,590 --> 00:41:55,240
already been tried

00:41:52,090 --> 00:41:57,100
because SCF was also trying to do all

00:41:55,240 --> 00:41:59,350
the templating first and it didn't

00:41:57,100 --> 00:42:01,570
really work out well so all that really

00:41:59,350 --> 00:42:04,570
changes here is the templating language

00:42:01,570 --> 00:42:07,330
and then it's just one deploying no

00:42:04,570 --> 00:42:11,470
active components that pretty I'm not

00:42:07,330 --> 00:42:15,490
convinced this is the way to go if you

00:42:11,470 --> 00:42:18,010
need so much templating then I think you

00:42:15,490 --> 00:42:20,140
have a problem with the approach sure

00:42:18,010 --> 00:42:22,210
you have to shift the complexity but

00:42:20,140 --> 00:42:25,720
pushing all the complexity down and

00:42:22,210 --> 00:42:28,270
templating seems wrong so one thing one

00:42:25,720 --> 00:42:30,790
thing that I wanted to add I think that

00:42:28,270 --> 00:42:33,100
that equates to this and to what Jules

00:42:30,790 --> 00:42:35,230
asked is that you know do we need

00:42:33,100 --> 00:42:36,760
templating I actually think that in a

00:42:35,230 --> 00:42:39,480
lot of cases most people don't need

00:42:36,760 --> 00:42:43,270
tempering and maybe even eventually

00:42:39,480 --> 00:42:44,650
including in this one the the challenge

00:42:43,270 --> 00:42:47,950
I see here is that there's a lot of

00:42:44,650 --> 00:42:49,600
software you know you a cloud controller

00:42:47,950 --> 00:42:52,290
you know keep on going down the list

00:42:49,600 --> 00:42:54,870
rate that does not

00:42:52,290 --> 00:42:57,150
go intermingle today nicely with some

00:42:54,870 --> 00:42:59,670
kind of a more singular configuration

00:42:57,150 --> 00:43:01,440
right you could imagine that you know if

00:42:59,670 --> 00:43:03,210
you shift some of that complexity into

00:43:01,440 --> 00:43:05,130
those individual components then it

00:43:03,210 --> 00:43:06,960
would work right so this is something

00:43:05,130 --> 00:43:10,800
that let's say other communities like

00:43:06,960 --> 00:43:13,170
Easter are slowly trying to figure out

00:43:10,800 --> 00:43:15,660
if they can solve some of their similar

00:43:13,170 --> 00:43:17,910
challenges to configuration complexity

00:43:15,660 --> 00:43:19,770
but in a more kind of a hidden way right

00:43:17,910 --> 00:43:22,620
so they're they're moving some of that

00:43:19,770 --> 00:43:24,090
stuff directly into East EO software

00:43:22,620 --> 00:43:26,670
components right to deal with the

00:43:24,090 --> 00:43:31,740
configuration right so for example if

00:43:26,670 --> 00:43:35,730
there would be you know if there would

00:43:31,740 --> 00:43:38,280
be a concentrated effort to move some of

00:43:35,730 --> 00:43:40,230
the let's say how does you know cloud

00:43:38,280 --> 00:43:42,270
controller accept all of that

00:43:40,230 --> 00:43:44,130
configuration how does you a accept all

00:43:42,270 --> 00:43:47,010
the configuration and if it becomes a

00:43:44,130 --> 00:43:49,710
little bit more I would say kubernetes

00:43:47,010 --> 00:43:51,330
native right then actually a lot of

00:43:49,710 --> 00:43:54,270
these templates really become they're

00:43:51,330 --> 00:43:57,240
just they're the template themselves are

00:43:54,270 --> 00:43:59,130
either slimming down significantly or

00:43:57,240 --> 00:44:01,920
disappearing right the only the only

00:43:59,130 --> 00:44:05,070
reason why you have to jump through some

00:44:01,920 --> 00:44:08,640
of the hoops I would say he is is

00:44:05,070 --> 00:44:10,710
because of that gluing right so if the

00:44:08,640 --> 00:44:13,170
gluing becomes easier because the

00:44:10,710 --> 00:44:15,330
components themselves became easier

00:44:13,170 --> 00:44:16,920
because they could take another complex

00:44:15,330 --> 00:44:19,790
to write then the gluing itself

00:44:16,920 --> 00:44:19,790
disappears right

00:44:22,800 --> 00:44:27,940
but you will always have to move

00:44:25,090 --> 00:44:31,180
configuration values from one component

00:44:27,940 --> 00:44:34,420
to the other I mean they they will

00:44:31,180 --> 00:44:35,590
depend on each other right but that

00:44:34,420 --> 00:44:37,180
doesn't necessarily mean that the

00:44:35,590 --> 00:44:42,100
components couldn't be referring to the

00:44:37,180 --> 00:44:43,330
same let's say config map right not

00:44:42,100 --> 00:44:45,370
necessarily like all of the

00:44:43,330 --> 00:44:47,200
configuration is to answer but imagine

00:44:45,370 --> 00:44:49,090
if there would be I don't know a TOS

00:44:47,200 --> 00:44:51,130
config map right that specifically

00:44:49,090 --> 00:44:58,450
describes to us configuration for all of

00:44:51,130 --> 00:45:01,120
the components right so this is what I

00:44:58,450 --> 00:45:03,760
would be interested in interested in

00:45:01,120 --> 00:45:05,860
hearing what the problem is that we're

00:45:03,760 --> 00:45:11,770
trying to solve and whether it hasn't

00:45:05,860 --> 00:45:13,150
been solved yet it also feels like we

00:45:11,770 --> 00:45:16,870
should have efforts in the Cloud Foundry

00:45:13,150 --> 00:45:21,180
community on the developer experience

00:45:16,870 --> 00:45:27,670
not just redoing all this work of

00:45:21,180 --> 00:45:29,140
deploying and redeploying stuff I think

00:45:27,670 --> 00:45:31,660
the main problem that we were trying to

00:45:29,140 --> 00:45:34,660
solve is how do we put together a CF

00:45:31,660 --> 00:45:38,770
deployment tight like integration level

00:45:34,660 --> 00:45:41,430
artifact which still adheres to as much

00:45:38,770 --> 00:45:47,260
as possible the boundary is set forth by

00:45:41,430 --> 00:45:48,460
kubernetes itself so you know like we we

00:45:47,260 --> 00:45:50,380
understand that like some of the

00:45:48,460 --> 00:45:53,620
component config and so on like there's

00:45:50,380 --> 00:45:57,400
still ways to come but in terms of

00:45:53,620 --> 00:45:59,620
packaging it up and deploying it what

00:45:57,400 --> 00:46:03,870
are what is still happy like what is the

00:45:59,620 --> 00:46:07,420
way to like take that and still try to

00:46:03,870 --> 00:46:10,090
follow tooling that is more like

00:46:07,420 --> 00:46:13,630
kubernetes needed so that was kind of

00:46:10,090 --> 00:46:15,610
the idea there is to try to maybe get

00:46:13,630 --> 00:46:17,700
some of the advantages that we got from

00:46:15,610 --> 00:46:22,750
the Bosch mode but without actually

00:46:17,700 --> 00:46:24,640
sticking with like the exact concepts

00:46:22,750 --> 00:46:26,920
from there's like the release concept or

00:46:24,640 --> 00:46:29,800
like the Lynx concept for trying to do

00:46:26,920 --> 00:46:31,780
things in a more like fashion that could

00:46:29,800 --> 00:46:33,940
work for software that was built for

00:46:31,780 --> 00:46:36,849
kubernetes while we try to get some of

00:46:33,940 --> 00:46:40,390
this component can fade stuff over

00:46:36,849 --> 00:46:42,729
soli now is kind of no problem you're

00:46:40,390 --> 00:46:44,920
trying to fall suds yeah

00:46:42,729 --> 00:46:47,859
have you looked at the operator that

00:46:44,920 --> 00:46:50,769
we've built that deals with this

00:46:47,859 --> 00:46:54,630
complexity of running distributed and

00:46:50,769 --> 00:46:58,269
complex software on top of cube which we

00:46:54,630 --> 00:47:00,670
it is a foundation incubation project if

00:46:58,269 --> 00:47:06,119
we're trying to build it specifically as

00:47:00,670 --> 00:47:09,609
a pathway to go from from Worcester cube

00:47:06,119 --> 00:47:12,789
yeah we did we did take a look at the

00:47:09,609 --> 00:47:17,710
operator I think one of the things that

00:47:12,789 --> 00:47:19,509
we were trying to do was also to break

00:47:17,710 --> 00:47:24,249
down some of the workflow so that it

00:47:19,509 --> 00:47:26,469
wasn't you know just the kind of the

00:47:24,249 --> 00:47:28,690
principle of like take something in and

00:47:26,469 --> 00:47:31,479
then it goes through various stages of

00:47:28,690 --> 00:47:33,279
life cycle and then it spits out like a

00:47:31,479 --> 00:47:36,789
full form deployment we were hoping to

00:47:33,279 --> 00:47:39,819
like decompose it a little bit hence for

00:47:36,789 --> 00:47:41,680
hence some of these you know some of

00:47:39,819 --> 00:47:44,440
these like boundaries around like okay

00:47:41,680 --> 00:47:46,509
though just to templating and then if

00:47:44,440 --> 00:47:49,839
you wanted to like do overlays for

00:47:46,509 --> 00:47:51,849
example on top of that you could or we

00:47:49,839 --> 00:47:53,499
just want to do like if you didn't want

00:47:51,849 --> 00:47:55,359
to use any of the templating it's all

00:47:53,499 --> 00:47:57,430
that's provided and and come with your

00:47:55,359 --> 00:48:00,549
own llamó file you could and still use

00:47:57,430 --> 00:48:03,759
staff and get get value from it so like

00:48:00,549 --> 00:48:05,499
that was one of the reasons we kind of

00:48:03,759 --> 00:48:07,420
started thinking through it which is

00:48:05,499 --> 00:48:10,150
that how can we break these things up to

00:48:07,420 --> 00:48:12,249
give folks more flexibility well we can

00:48:10,150 --> 00:48:13,950
also provide a default keychain for

00:48:12,249 --> 00:48:17,619
folks who don't want that flexibility

00:48:13,950 --> 00:48:19,989
yeah we we have a similar goal with the

00:48:17,619 --> 00:48:23,619
components that we build I wish we we

00:48:19,989 --> 00:48:25,989
would talk more and maybe find where the

00:48:23,619 --> 00:48:28,329
gap where you think the gaps are in the

00:48:25,989 --> 00:48:29,890
solutions that we've built because

00:48:28,329 --> 00:48:32,589
definitely we would we don't want to

00:48:29,890 --> 00:48:34,269
work in a vacuum and we want this

00:48:32,589 --> 00:48:37,960
foundation work to be useful for

00:48:34,269 --> 00:48:40,119
everyone one other thing that the same

00:48:37,960 --> 00:48:44,410
we've had the same goals that you were

00:48:40,119 --> 00:48:47,499
talking about have composable composable

00:48:44,410 --> 00:48:50,349
CR DS that can be used regardless of

00:48:47,499 --> 00:48:54,410
wash infrastructure or boss

00:48:50,349 --> 00:48:56,500
Bausch configuration that can be reused

00:48:54,410 --> 00:49:00,829
by the component teams to build

00:48:56,500 --> 00:49:05,150
individual standing project that don't

00:49:00,829 --> 00:49:07,789
really use any other dependencies one

00:49:05,150 --> 00:49:10,730
other thing to throw in maybe is uh you

00:49:07,789 --> 00:49:14,660
know claw foundry even though some

00:49:10,730 --> 00:49:18,410
people view it as a fairly complex app

00:49:14,660 --> 00:49:20,630
in my mind is just a bunch of stateless

00:49:18,410 --> 00:49:24,530
micro services right this is this is a

00:49:20,630 --> 00:49:28,039
straight up a use case for okay using

00:49:24,530 --> 00:49:31,819
brain my neck noting that right hey it

00:49:28,039 --> 00:49:34,819
is it should it should be pretty pretty

00:49:31,819 --> 00:49:38,569
easy to deploy it on kubernetes without

00:49:34,819 --> 00:49:41,720
any kind of a active like component that

00:49:38,569 --> 00:49:43,220
manages in lifecycle right you know a

00:49:41,720 --> 00:49:45,020
lot of the primitives that kubernetes

00:49:43,220 --> 00:49:46,760
gives you know in deployment rolling

00:49:45,020 --> 00:49:50,089
updates you know all kinds of other

00:49:46,760 --> 00:49:52,910
features that it has right directly

00:49:50,089 --> 00:49:55,760
supporting the features that we need so

00:49:52,910 --> 00:49:58,970
I I'm in agreement with you the trouble

00:49:55,760 --> 00:50:02,599
is not on a zero we've had cloud foundry

00:49:58,970 --> 00:50:05,029
deployed using docker images and just

00:50:02,599 --> 00:50:08,210
environment variable so even without a

00:50:05,029 --> 00:50:10,339
scheduler and it works that the problem

00:50:08,210 --> 00:50:13,069
is when you go through day one they end

00:50:10,339 --> 00:50:16,010
where you need updates you need secret

00:50:13,069 --> 00:50:17,839
rotation you want to make sure that you

00:50:16,010 --> 00:50:24,079
don't have downtime while you do update

00:50:17,839 --> 00:50:25,250
yep so yeah so these features yeah some

00:50:24,079 --> 00:50:27,500
of these features are missing in

00:50:25,250 --> 00:50:30,829
kubernetes and you can't get them with

00:50:27,500 --> 00:50:32,809
home or other templating this is what I

00:50:30,829 --> 00:50:34,819
think Ruby is getting at is that I think

00:50:32,809 --> 00:50:36,710
she's she's she's talking about breaking

00:50:34,819 --> 00:50:38,630
down the problem leo that you know into

00:50:36,710 --> 00:50:40,369
into into smaller pieces right so for

00:50:38,630 --> 00:50:42,770
example until you're talking about sound

00:50:40,369 --> 00:50:45,410
updating stuff right so a more smaller

00:50:42,770 --> 00:50:48,109
targeted tool let's say like CAF where I

00:50:45,410 --> 00:50:49,940
think there's like I know there's a few

00:50:48,109 --> 00:50:52,039
other tools similar to cap rate that

00:50:49,940 --> 00:50:53,960
solve a particular problem of you know

00:50:52,039 --> 00:50:55,849
converging a share of resources under a

00:50:53,960 --> 00:50:59,059
particular label right so let's say you

00:50:55,849 --> 00:51:00,619
have 60 resources and I don't know next

00:50:59,059 --> 00:51:02,660
morning you need to have only 30

00:51:00,619 --> 00:51:03,830
resource rate because someone's simplify

00:51:02,660 --> 00:51:07,490
laundry right

00:51:03,830 --> 00:51:10,280
those kind of tools converge it more you

00:51:07,490 --> 00:51:12,170
know you know it's it's a tool that

00:51:10,280 --> 00:51:14,990
designed for that particular purpose

00:51:12,170 --> 00:51:17,540
right so I do hear you that there is you

00:51:14,990 --> 00:51:19,640
know day two challenges right but I

00:51:17,540 --> 00:51:21,740
think there are tools that address those

00:51:19,640 --> 00:51:23,630
challenges in a more targeted way versus

00:51:21,740 --> 00:51:27,080
having a full-blown operator for this

00:51:23,630 --> 00:51:30,170
problem those tools are probably

00:51:27,080 --> 00:51:33,440
operators as well and our controllers

00:51:30,170 --> 00:51:35,810
are separate - there's one for each of

00:51:33,440 --> 00:51:39,170
the gaps that we're missing in

00:51:35,810 --> 00:51:41,000
kubernetes and we talk about the point

00:51:39,170 --> 00:51:44,180
and point I just wish that we talked

00:51:41,000 --> 00:51:49,270
about this sooner right I mean we've had

00:51:44,180 --> 00:51:55,460
conversations for months about these and

00:51:49,270 --> 00:51:57,440
yeah anyway what is 12 just I mean this

00:51:55,460 --> 00:51:59,180
just feels just the dates point it's in

00:51:57,440 --> 00:52:00,830
my head if you look at how can a TIF

00:51:59,180 --> 00:52:02,420
works and you know pen a secret foundry

00:52:00,830 --> 00:52:03,500
they're not wholly dissimilar if you

00:52:02,420 --> 00:52:06,260
think about what they're kind of trying

00:52:03,500 --> 00:52:08,090
to do you can deploy K native just from

00:52:06,260 --> 00:52:10,250
the amiable right thank you just do the

00:52:08,090 --> 00:52:12,950
yet I'm from the web site single coop

00:52:10,250 --> 00:52:14,990
cut up like a chef done but there's also

00:52:12,950 --> 00:52:17,630
a key native operator right if you want

00:52:14,990 --> 00:52:21,130
you know the a way of just giving me a

00:52:17,630 --> 00:52:24,650
k-8 severus CRD both of those can exist

00:52:21,130 --> 00:52:25,970
and and and from for what it's worth

00:52:24,650 --> 00:52:27,710
that feels like we're we should be

00:52:25,970 --> 00:52:29,900
trying to have there should be a simple

00:52:27,710 --> 00:52:33,530
Yama file that relic gives me which is

00:52:29,900 --> 00:52:35,750
here is my here is a few net here is a

00:52:33,530 --> 00:52:39,380
clarifier of humanities QL applied a

00:52:35,750 --> 00:52:41,330
chef right it's working if I want to

00:52:39,380 --> 00:52:43,520
then edit that and do fancy stuff with

00:52:41,330 --> 00:52:45,050
it maybe there's a way to edit the

00:52:43,520 --> 00:52:47,600
conflict Maps maybe let's see maybe

00:52:45,050 --> 00:52:50,330
Relan are using ytt to produce that yeah

00:52:47,600 --> 00:52:51,650
more files for example and i don't see

00:52:50,330 --> 00:52:54,290
any reason why there isn't also an

00:52:51,650 --> 00:52:58,550
operator it gives me an end to end they

00:52:54,290 --> 00:53:02,150
to thing via a CID I don't know the

00:52:58,550 --> 00:53:04,730
reason needs to be in conflict but I do

00:53:02,150 --> 00:53:06,800
think it's really important that there

00:53:04,730 --> 00:53:08,900
is a really simple the animal version

00:53:06,800 --> 00:53:11,270
that doesn't require me to use any tool

00:53:08,900 --> 00:53:13,370
to adopt it because if like if the force

00:53:11,270 --> 00:53:14,840
want to use ytt in your pipeline i no

00:53:13,370 --> 00:53:16,580
need to understand why ICT in my

00:53:14,840 --> 00:53:17,570
pipeline and that that's it's gonna hurt

00:53:16,580 --> 00:53:20,030
option

00:53:17,570 --> 00:53:21,680
and why not just go for basel directly

00:53:20,030 --> 00:53:26,450
if you're building images and all of

00:53:21,680 --> 00:53:30,290
that I mean I mean again what what gay

00:53:26,450 --> 00:53:33,290
guys is I just think I just think all of

00:53:30,290 --> 00:53:34,610
these things actually are good but none

00:53:33,290 --> 00:53:37,160
of these things should be mandatory to

00:53:34,610 --> 00:53:40,010
deploy cloud foundry I I think I agree

00:53:37,160 --> 00:53:44,030
was that I think you know the this demo

00:53:40,010 --> 00:53:46,280
was actually partly for you know what

00:53:44,030 --> 00:53:48,230
would it take to produce a manifest like

00:53:46,280 --> 00:53:50,270
that right but I don't think this demo

00:53:48,230 --> 00:53:53,480
is strictly it's saying that hey

00:53:50,270 --> 00:53:55,220
everyone should be running through all

00:53:53,480 --> 00:53:56,840
those steps to actually get the final

00:53:55,220 --> 00:53:58,970
yeah now there's going to be advanced

00:53:56,840 --> 00:54:02,150
cases right and maybe those advanced

00:53:58,970 --> 00:54:03,770
cases some some would be less advanced

00:54:02,150 --> 00:54:05,420
than others right and some may be able

00:54:03,770 --> 00:54:07,130
to use customize let's say if that's the

00:54:05,420 --> 00:54:11,720
tool of preference within the club right

00:54:07,130 --> 00:54:14,570
right but I do you know working a little

00:54:11,720 --> 00:54:16,580
bit on kn8 if I do see quite significant

00:54:14,570 --> 00:54:18,500
similarity between K native and cloud

00:54:16,580 --> 00:54:21,350
foundry and given red to not doing

00:54:18,500 --> 00:54:23,510
anything you know significantly more

00:54:21,350 --> 00:54:25,010
complicated from a deployment process I

00:54:23,510 --> 00:54:27,590
don't see a reason why I shouldn't have

00:54:25,010 --> 00:54:30,560
to should be able to have a single Yama

00:54:27,590 --> 00:54:36,980
that could be you know deployed through

00:54:30,560 --> 00:54:38,930
you know pooling of choice yeah yeah

00:54:36,980 --> 00:54:40,610
maybe even like a minimal man yeah man

00:54:38,930 --> 00:54:43,280
on a maximal yeah Olympics were produced

00:54:40,610 --> 00:54:45,320
by ytt that would be cool yeah I think I

00:54:43,280 --> 00:54:46,850
should mention also that the component

00:54:45,320 --> 00:54:51,610
teams themselves are getting much more

00:54:46,850 --> 00:54:54,140
directly engaged in producing their own

00:54:51,610 --> 00:54:55,790
component centric artifacts for

00:54:54,140 --> 00:54:58,520
deploying their subsystems as they were

00:54:55,790 --> 00:55:00,950
to get them containerized and they've

00:54:58,520 --> 00:55:02,570
really been clamoring for this they've

00:55:00,950 --> 00:55:05,960
been trying to do various things to

00:55:02,570 --> 00:55:08,210
integrate with I think various SDF

00:55:05,960 --> 00:55:10,150
versions or say the ireenie team help

00:55:08,210 --> 00:55:13,670
charts and it's it's been very difficult

00:55:10,150 --> 00:55:16,490
so well it has really been focused on

00:55:13,670 --> 00:55:18,040
what they can do to enable them as

00:55:16,490 --> 00:55:20,510
directly and simply as possible

00:55:18,040 --> 00:55:24,230
especially given some of the challenges

00:55:20,510 --> 00:55:26,030
they've been having trying to iterate on

00:55:24,230 --> 00:55:28,180
their own like they're really trying to

00:55:26,030 --> 00:55:30,590
focus on understanding what that

00:55:28,180 --> 00:55:31,490
kubernetes centric experience and

00:55:30,590 --> 00:55:33,910
development process

00:55:31,490 --> 00:55:36,110
like and to lean into it instead of

00:55:33,910 --> 00:55:39,200
continuing to focus only on Bosch

00:55:36,110 --> 00:55:42,950
artifacts as an input to some of these

00:55:39,200 --> 00:55:44,920
other tool chains so I I would imagine

00:55:42,950 --> 00:55:48,560
there's room to converge these over time

00:55:44,920 --> 00:55:50,480
I would also say that some of the work

00:55:48,560 --> 00:55:52,640
we've been doing on the pivotal side has

00:55:50,480 --> 00:55:54,590
been starting to integrate those

00:55:52,640 --> 00:55:57,500
artifacts and we're hoping that we can

00:55:54,590 --> 00:56:02,000
kind of jumpstart relevance efforts with

00:55:57,500 --> 00:56:04,900
that as a way of providing a framework

00:56:02,000 --> 00:56:08,869
to produce those more kubernetes centric

00:56:04,900 --> 00:56:11,300
resources directly and so the timeline

00:56:08,869 --> 00:56:12,860
for having a coherent artifact out even

00:56:11,300 --> 00:56:15,020
just four component teams to use may not

00:56:12,860 --> 00:56:17,810
be too far away like that there might be

00:56:15,020 --> 00:56:22,430
something that we could have a minimally

00:56:17,810 --> 00:56:25,250
coherent system for in the next few

00:56:22,430 --> 00:56:26,780
weeks even or next month or so again

00:56:25,250 --> 00:56:29,420
that's going to depend on I think what

00:56:26,780 --> 00:56:31,850
rel int starts working on and what they

00:56:29,420 --> 00:56:38,690
can pick up coming out of their upcoming

00:56:31,850 --> 00:56:49,490
inception as always I think like the

00:56:38,690 --> 00:56:57,380
hour is actually so too bad that like we

00:56:49,490 --> 00:57:01,869
really on any specific I guess also

00:56:57,380 --> 00:57:01,869
looking at at the calendar it looks like

00:57:03,640 --> 00:57:13,600
this would be the last I guess potential

00:57:09,650 --> 00:57:13,600
question to the round we try and see

00:57:13,630 --> 00:57:26,000
potentially continuing that discussion

00:57:15,609 --> 00:57:29,840
next week Tuesday showers hoping to give

00:57:26,000 --> 00:57:32,270
my update and really think Eric talked

00:57:29,840 --> 00:57:33,859
about it a bit but it'll be good to sort

00:57:32,270 --> 00:57:35,810
of circle back on that that's what I

00:57:33,859 --> 00:57:40,000
thought it was this meeting wasn't gonna

00:57:35,810 --> 00:57:43,460
be about but yeah yeah I also worry that

00:57:40,000 --> 00:57:45,050
two weeks from now is Christmas Eve so

00:57:43,460 --> 00:57:46,640
people may be on

00:57:45,050 --> 00:57:51,430
patience or maybe having a call next

00:57:46,640 --> 00:57:53,990
week instead of two weeks from now just

00:57:51,430 --> 00:57:55,940
you just ruin my Christmas

00:57:53,990 --> 00:57:58,370
v Alice that's my Christmas receive

00:57:55,940 --> 00:57:59,750
plans out the window just like supposed

00:57:58,370 --> 00:58:11,390
to do now that there is or one of these

00:57:59,750 --> 00:58:13,820
musics it sounds like you might be

00:58:11,390 --> 00:58:15,110
productive as wife Ladd had a time slot

00:58:13,820 --> 00:58:18,830
in that meeting to take us through some

00:58:15,110 --> 00:58:20,420
of the overlaps and kind of maybe show

00:58:18,830 --> 00:58:22,940
is I think I think one of everyone's

00:58:20,420 --> 00:58:24,770
main concerns is like the the Boche bit

00:58:22,940 --> 00:58:26,480
of the operator but maybe if we just

00:58:24,770 --> 00:58:27,650
like ignore the bush man talk about some

00:58:26,480 --> 00:58:29,780
of the components that are there that

00:58:27,650 --> 00:58:31,850
could be available like underneath that

00:58:29,780 --> 00:58:33,550
if you see what I mean how they extend

00:58:31,850 --> 00:58:37,220
is faithful sets and those other

00:58:33,550 --> 00:58:38,660
concepts so then I guess I would also

00:58:37,220 --> 00:58:40,400
take the liberty and not send out

00:58:38,660 --> 00:58:47,600
another wording for next week but just

00:58:40,400 --> 00:58:52,190
say we continue yeah and maybe sigh we

00:58:47,600 --> 00:58:54,350
can catch up before that meeting so I

00:58:52,190 --> 00:58:56,120
can tell you the about the pipelines

00:58:54,350 --> 00:58:57,760
that we built how we're building him and

00:58:56,120 --> 00:59:00,530
things like that

00:58:57,760 --> 00:59:03,070
that's good yeah I got a dropped it on

00:59:00,530 --> 00:59:04,220
the call but I will senator invites that

00:59:03,070 --> 00:59:06,580
Thanks

00:59:04,220 --> 00:59:06,580

YouTube URL: https://www.youtube.com/watch?v=bSh9GL9oQ50


