Title: Cloud Foundry for Kubernetes SIG [May 2020]
Publication date: 2020-05-12
Playlist: Cloud Foundry for Kubernetes Monthly SIG
Description: 
	
Captions: 
	00:00:14,380 --> 00:00:18,330
I am

00:00:19,440 --> 00:00:36,420
oh yeah somewhere it's mine SRP logo

00:00:26,670 --> 00:00:40,760
rich tecum yeah yeah let's took our data

00:00:36,420 --> 00:00:40,760
for as a d-link as I body Besser

00:00:41,230 --> 00:00:58,640
flower spits woman but I'm almost

00:00:47,710 --> 00:01:04,070
homeless cloud tea my nipple is sweet it

00:00:58,640 --> 00:01:06,370
of a syndrome P H is it gentlemen how

00:01:04,070 --> 00:01:06,370
are you

00:01:07,310 --> 00:01:12,160
I see we have a space traveler and a

00:01:09,860 --> 00:01:15,320
proprietary corporate-branded individual

00:01:12,160 --> 00:01:17,600
yeah who after a couple of meetings

00:01:15,320 --> 00:01:23,030
figured out that actually the SI Pino

00:01:17,600 --> 00:01:26,150
girl was flipped for everybody else now

00:01:23,030 --> 00:01:33,290
it's only flat flip for you exactly but

00:01:26,150 --> 00:01:35,509
I can live with that I just do the

00:01:33,290 --> 00:01:38,090
background to avoid everybody joking

00:01:35,509 --> 00:01:41,570
about my bare bones light bulb hanging

00:01:38,090 --> 00:01:43,759
from the ceiling which is the situation

00:01:41,570 --> 00:01:49,610
in that room for I don't know five years

00:01:43,759 --> 00:01:53,690
or so didn't find any time to fix the

00:01:49,610 --> 00:01:56,179
problem to see I used to have lots of

00:01:53,690 --> 00:02:02,709
amazon packages in my back and that's

00:01:56,179 --> 00:02:12,620
why I always connect they are gone now

00:02:02,709 --> 00:02:18,319
what happened oh you can bring your

00:02:12,620 --> 00:02:20,450
garbage there I see it's like thanks to

00:02:18,319 --> 00:02:24,170
couvade they stopped actually collecting

00:02:20,450 --> 00:02:26,720
it from the street like usually you can

00:02:24,170 --> 00:02:29,240
just put all the the paper the paper

00:02:26,720 --> 00:02:32,030
waste just next to the one no matter how

00:02:29,240 --> 00:02:41,930
much it is and they take it but now not

00:02:32,030 --> 00:02:51,379
now folks yeah thanks for joining

00:02:41,930 --> 00:02:53,840
Oh sec is also in space yeah yeah I'm on

00:02:51,379 --> 00:02:58,220
the ISS

00:02:53,840 --> 00:03:04,790
young is just outside from you walking

00:02:58,220 --> 00:03:08,030
bug I think the zoom URL is still wrong

00:03:04,790 --> 00:03:10,430
on the community calendar invite Oh at

00:03:08,030 --> 00:03:12,890
least good point at least I clicked the

00:03:10,430 --> 00:03:14,030
wrong one for a second and I only

00:03:12,890 --> 00:03:15,860
spotted a because I saw someone

00:03:14,030 --> 00:03:20,209
highlight the right one in the agenda

00:03:15,860 --> 00:03:27,290
document it's like a ha yeah I'll follow

00:03:20,209 --> 00:03:29,840
up with page to get that fixed it was

00:03:27,290 --> 00:03:34,400
actually also wrong in in slacks toe we

00:03:29,840 --> 00:03:38,000
updated it in the minutes document it's

00:03:34,400 --> 00:03:43,549
like what to actually think about the

00:03:38,000 --> 00:03:46,670
community it's a consistent accurate

00:03:43,549 --> 00:03:48,349
Jules are you using a gmail view or

00:03:46,670 --> 00:03:52,370
you're using that awesome IBM calendar

00:03:48,349 --> 00:03:55,310
software I think you from Gmail I got

00:03:52,370 --> 00:03:56,959
that from Jima then I heard maybe it's

00:03:55,310 --> 00:04:01,840
it maybe it's reading on Cuban a thesis

00:03:56,959 --> 00:04:01,840
this Desa CID summer it's a conversion

00:04:04,480 --> 00:04:09,560
if you added that calendar event to your

00:04:08,150 --> 00:04:12,350
google calendar at some point in the

00:04:09,560 --> 00:04:14,269
past I don't think it ever updates yeah

00:04:12,350 --> 00:04:15,799
that in fact could be eight yeah I'm

00:04:14,269 --> 00:04:25,639
doing it from my canon for my gmail

00:04:15,799 --> 00:04:31,520
account if you is that wrong whatever I

00:04:25,639 --> 00:04:39,370
don't know calendars are still always

00:04:31,520 --> 00:04:39,370
the worst so anyway whatever I'm hey now

00:04:43,210 --> 00:04:50,830
let's maybe wait another minute or two

00:04:45,710 --> 00:04:50,830
and then I think check out started

00:04:53,850 --> 00:05:02,310
I think I figured out I think instead of

00:05:00,210 --> 00:05:05,160
subscribing to her I did copy to

00:05:02,310 --> 00:05:11,850
calendar I think that's the that was the

00:05:05,160 --> 00:05:14,630
wrong move you want to yeah reference

00:05:11,850 --> 00:05:17,490
are quality if payers passed by value

00:05:14,630 --> 00:05:21,510
yeah it's it's only wrong if you didn't

00:05:17,490 --> 00:05:28,920
want a copy of it from the time you

00:05:21,510 --> 00:05:30,810
copied it I mean look I which understood

00:05:28,920 --> 00:05:34,290
that I'm sure there must be the use case

00:05:30,810 --> 00:05:35,730
for having a copy of a meeting in your

00:05:34,290 --> 00:05:40,830
calendar that doesn't update when the

00:05:35,730 --> 00:05:44,220
meeting does there has to be otherwise

00:05:40,830 --> 00:05:46,290
the feature wouldn't exist yeah I mean

00:05:44,220 --> 00:05:48,510
no no one in computing has ever created

00:05:46,290 --> 00:05:53,250
a feature that shouldn't exist anyway

00:05:48,510 --> 00:05:56,030
let's look like humanities right yeah

00:05:53,250 --> 00:06:02,400
let's let's get started I think I know a

00:05:56,030 --> 00:06:06,690
couple of people joining I would need to

00:06:02,400 --> 00:06:12,750
text page to get the recording started

00:06:06,690 --> 00:06:13,980
hang on seconds it's already running it

00:06:12,750 --> 00:06:17,070
would have been ashamed submits that

00:06:13,980 --> 00:06:19,740
great intro yeah that's true

00:06:17,070 --> 00:06:21,330
so yeah officially welcome to this

00:06:19,740 --> 00:06:25,230
week's Cloud Foundry uncoordinated

00:06:21,330 --> 00:06:28,980
special interest school calm I try to

00:06:25,230 --> 00:06:31,110
follow my own promises and kind of set

00:06:28,980 --> 00:06:33,450
out the ball a little bit earlier and

00:06:31,110 --> 00:06:35,010
close it a little bit earlier I think I

00:06:33,450 --> 00:06:38,670
can even do better next time

00:06:35,010 --> 00:06:41,390
but for this time at least we kind of

00:06:38,670 --> 00:06:45,260
gave folks a little bit of a heads up so

00:06:41,390 --> 00:06:49,530
we have Zach Angela and and folks from

00:06:45,260 --> 00:06:52,440
the VMware sites and the topic for for

00:06:49,530 --> 00:06:58,230
this time is talking about series in

00:06:52,440 --> 00:06:58,830
cloud foundry on communities so I think

00:06:58,230 --> 00:07:00,420
that the

00:06:58,830 --> 00:07:02,610
the usual question - to all the

00:07:00,420 --> 00:07:04,680
presenters that that we are inviting is

00:07:02,610 --> 00:07:06,840
like do you have a couple of slides or

00:07:04,680 --> 00:07:08,880
should we just kind of shoot random

00:07:06,840 --> 00:07:16,830
questions at you and then we we talk to

00:07:08,880 --> 00:07:19,110
things whatever you you prefer I don't

00:07:16,830 --> 00:07:20,940
think anyone prepared any specific

00:07:19,110 --> 00:07:24,000
presentation we just know some materials

00:07:20,940 --> 00:07:26,370
been going out and Eric sure that this

00:07:24,000 --> 00:07:29,450
topic was gonna be here so figured we'd

00:07:26,370 --> 00:07:34,290
sweet hop in and could ask questions and

00:07:29,450 --> 00:07:37,080
Angela and Connor did a lot of the sort

00:07:34,290 --> 00:07:38,250
of exploration so they may have some

00:07:37,080 --> 00:07:40,050
some drawings here in there they can

00:07:38,250 --> 00:07:42,060
pull up if any of the questions sort of

00:07:40,050 --> 00:07:44,370
head in that direction otherwise we can

00:07:42,060 --> 00:07:45,810
just sort of chat and if we need some

00:07:44,370 --> 00:07:50,520
more visuals then we can we can come

00:07:45,810 --> 00:07:50,880
back with more later yeah so I I took

00:07:50,520 --> 00:07:52,830
some time

00:07:50,880 --> 00:07:55,380
earlier today to actually go through

00:07:52,830 --> 00:07:59,160
both the documents that you folks sent

00:07:55,380 --> 00:08:04,320
as well as one that I received from

00:07:59,160 --> 00:08:06,000
Shannon on routing or C or DS so I'm not

00:08:04,320 --> 00:08:07,860
sure what what the status of everybody

00:08:06,000 --> 00:08:09,570
else on the call is like if you should

00:08:07,860 --> 00:08:11,850
rather start with with giving an

00:08:09,570 --> 00:08:14,160
introduction regarding those documents

00:08:11,850 --> 00:08:15,570
or if you can assume that people have

00:08:14,160 --> 00:08:17,850
have gone through it and would have

00:08:15,570 --> 00:08:21,110
specific questions so I guess that would

00:08:17,850 --> 00:08:21,110
be an ask - to the round

00:08:21,800 --> 00:08:26,150
on simple of the documents in question

00:08:23,419 --> 00:08:27,590
to the chat if it's unclear to anyone

00:08:26,150 --> 00:08:31,430
which documents were talking about

00:08:27,590 --> 00:08:33,380
I also linked them into the today

00:08:31,430 --> 00:08:38,750
section in our running Journal document

00:08:33,380 --> 00:08:45,770
I did I just could say I also added a

00:08:38,750 --> 00:08:47,630
link to our spike although it might be

00:08:45,770 --> 00:08:48,529
worth doing an overview of some of the

00:08:47,630 --> 00:08:50,750
contents of those stocks

00:08:48,529 --> 00:08:53,149
dad everyone has been able to

00:08:50,750 --> 00:08:59,690
internalize all of that let alone

00:08:53,149 --> 00:09:01,490
necessarily read all of it yeah I can

00:08:59,690 --> 00:09:03,649
maybe do a quick sort of high level of

00:09:01,490 --> 00:09:05,570
at least some you know what spreads some

00:09:03,649 --> 00:09:09,410
of this stuff you know we're obviously

00:09:05,570 --> 00:09:12,080
we're removing cf2 Cates kind of had a

00:09:09,410 --> 00:09:14,180
number of ways we we have VRA we have

00:09:12,080 --> 00:09:15,920
this uh you know our that the C

00:09:14,180 --> 00:09:18,589
uppercase effort we have we have the

00:09:15,920 --> 00:09:20,720
cube CF effort and they're both putting

00:09:18,589 --> 00:09:22,070
and moving and running components on the

00:09:20,720 --> 00:09:23,899
Cates and and in parallel to that

00:09:22,070 --> 00:09:25,459
they're ripping out you know some of the

00:09:23,899 --> 00:09:28,850
underlying implementations and leaning

00:09:25,459 --> 00:09:31,700
more on these primitives and so as we

00:09:28,850 --> 00:09:35,839
enter that ecosystem you know one of the

00:09:31,700 --> 00:09:37,579
key mechanisms for extending that

00:09:35,839 --> 00:09:41,329
lower-level kubernetes functionality is

00:09:37,579 --> 00:09:42,680
is with CR DS and really you know that's

00:09:41,329 --> 00:09:44,360
sort of often with the operator of

00:09:42,680 --> 00:09:47,360
pattern where you have these custom

00:09:44,360 --> 00:09:49,730
resources which are essentially api's

00:09:47,360 --> 00:09:53,140
that you can design and insert in today

00:09:49,730 --> 00:09:55,520
the eye server and then along with a

00:09:53,140 --> 00:09:57,050
separate application that runs often as

00:09:55,520 --> 00:09:59,120
an appointment on Cates that that

00:09:57,050 --> 00:10:02,450
synchronizes the contents that CR with

00:09:59,120 --> 00:10:03,950
other resources in kubernetes to give

00:10:02,450 --> 00:10:06,290
you that declarative experience and to

00:10:03,950 --> 00:10:09,770
realize the desired state you're asking

00:10:06,290 --> 00:10:12,190
for so you know we're finding that as we

00:10:09,770 --> 00:10:16,070
go it's becoming really natural to start

00:10:12,190 --> 00:10:17,690
wanting to either consume existing CR DS

00:10:16,070 --> 00:10:19,250
in the ecosystem so this this is how a

00:10:17,690 --> 00:10:20,779
lot of tools are represented to us for

00:10:19,250 --> 00:10:24,320
example Asda which is which is taking

00:10:20,779 --> 00:10:28,270
over the the routing tier essentially

00:10:24,320 --> 00:10:30,470
and as we build out new functionality so

00:10:28,270 --> 00:10:31,820
even within the routing org they're

00:10:30,470 --> 00:10:35,209
finding that you know it would be nice

00:10:31,820 --> 00:10:35,480
for them to have a route see Rd that

00:10:35,209 --> 00:10:37,360
look

00:10:35,480 --> 00:10:39,949
like a mirror of essentially the CF API

00:10:37,360 --> 00:10:44,240
and allows us to declare that state

00:10:39,949 --> 00:10:45,949
Indic indicates and essentially then

00:10:44,240 --> 00:10:48,130
under the hood you know that their their

00:10:45,949 --> 00:10:50,660
operator can turn that into sto based

00:10:48,130 --> 00:10:52,610
routing and theoretically in the future

00:10:50,660 --> 00:10:53,899
maybe that that could create a point for

00:10:52,610 --> 00:10:57,110
plug ability of different types of

00:10:53,899 --> 00:10:58,790
routing technology but there's other

00:10:57,110 --> 00:11:02,449
things too there's lots of different

00:10:58,790 --> 00:11:04,220
integrations you know we look at some of

00:11:02,449 --> 00:11:06,079
the work that serves as teams in in

00:11:04,220 --> 00:11:08,510
vmware are doing and they want to be

00:11:06,079 --> 00:11:10,339
able to they want to know about

00:11:08,510 --> 00:11:11,810
different parts of Cloud Foundry they

00:11:10,339 --> 00:11:13,940
want to know about orgs and spaces so

00:11:11,810 --> 00:11:15,290
they can set up different tenancy

00:11:13,940 --> 00:11:16,610
constructs in their integrations so

00:11:15,290 --> 00:11:19,699
sometimes it's you know it's not always

00:11:16,610 --> 00:11:20,990
core you know cloud primary

00:11:19,699 --> 00:11:22,850
functionality but you want to extend off

00:11:20,990 --> 00:11:24,589
of it and so that that's part of being

00:11:22,850 --> 00:11:27,050
in this case a ecosystem and we want to

00:11:24,589 --> 00:11:28,760
feel to understand that so our effort

00:11:27,050 --> 00:11:31,420
was originally sort of let's step back

00:11:28,760 --> 00:11:33,199
and see what we're doing in general

00:11:31,420 --> 00:11:34,850
let's see what some of the really

00:11:33,199 --> 00:11:36,139
important outcomes that people are doing

00:11:34,850 --> 00:11:37,220
we know there's you know when you just

00:11:36,139 --> 00:11:38,630
say extensibility there's probably

00:11:37,220 --> 00:11:40,160
gazillion things people can do but can

00:11:38,630 --> 00:11:41,600
we maybe sort of see what are some the

00:11:40,160 --> 00:11:43,910
key ones people are trying to do now and

00:11:41,600 --> 00:11:46,930
then does that help us understand you

00:11:43,910 --> 00:11:49,220
know is there a more deliberate way to

00:11:46,930 --> 00:11:51,019
integrate those things into the system

00:11:49,220 --> 00:11:54,050
are there certain CDs we can build in

00:11:51,019 --> 00:11:55,819
app and route CDs that we know will be

00:11:54,050 --> 00:11:57,019
really valuable integration points for

00:11:55,819 --> 00:11:59,750
people and will simplify our

00:11:57,019 --> 00:12:01,850
implementation you know do we need to

00:11:59,750 --> 00:12:03,649
think about orgs and spaces in various

00:12:01,850 --> 00:12:06,769
different ways for integrators to be

00:12:03,649 --> 00:12:09,170
able to vote against CF and have the

00:12:06,769 --> 00:12:11,240
opportunity to really extend things and

00:12:09,170 --> 00:12:13,940
as we do build those in are there other

00:12:11,240 --> 00:12:15,410
patterns we should we should follow that

00:12:13,940 --> 00:12:17,089
we should try and get everyone in the

00:12:15,410 --> 00:12:18,470
ecosystem to follow so for voting and

00:12:17,089 --> 00:12:19,850
routing charities for building and

00:12:18,470 --> 00:12:21,290
absurd ease if we're building in you

00:12:19,850 --> 00:12:24,260
know whatever other service C or DS or

00:12:21,290 --> 00:12:25,490
something alright did it is there enough

00:12:24,260 --> 00:12:27,050
shirt functionality that we can make it

00:12:25,490 --> 00:12:29,209
really easy for everyone to sort of

00:12:27,050 --> 00:12:30,740
understand from an architectural level

00:12:29,209 --> 00:12:32,240
how to build all those things and so

00:12:30,740 --> 00:12:35,600
that was kind of the basis that set us

00:12:32,240 --> 00:12:37,940
off to explore a little bit and has come

00:12:35,600 --> 00:12:40,940
up with some of the docs great question

00:12:37,940 --> 00:12:43,220
are you like as you mentioned service

00:12:40,940 --> 00:12:45,350
series are you thinking about like

00:12:43,220 --> 00:12:47,720
looking in things like Service Catalog

00:12:45,350 --> 00:12:49,250
like there is already an offer like a

00:12:47,720 --> 00:12:52,700
controller based

00:12:49,250 --> 00:12:55,730
um always be platform in the Kuwaitis

00:12:52,700 --> 00:12:57,470
ecosystem yeah I was kind of just

00:12:55,730 --> 00:13:00,440
listing things that exist in in the API

00:12:57,470 --> 00:13:02,720
that just sort of a demonstration but I

00:13:00,440 --> 00:13:03,770
do believe that that some of the teams

00:13:02,720 --> 00:13:06,560
that are thinking about the civics

00:13:03,770 --> 00:13:07,910
experience you know they're what we're

00:13:06,560 --> 00:13:10,970
finding is lots of folks are out there

00:13:07,910 --> 00:13:13,340
doing sort of disparate explorations and

00:13:10,970 --> 00:13:15,110
I think some of the folks responsible

00:13:13,340 --> 00:13:16,190
for the service experience experience

00:13:15,110 --> 00:13:17,570
have been looking at you know what might

00:13:16,190 --> 00:13:21,170
it look to like to put the service

00:13:17,570 --> 00:13:22,640
catalog behind the CF API I don't know

00:13:21,170 --> 00:13:25,190
that they've come to any conclusions or

00:13:22,640 --> 00:13:27,070
anything on that front but obvious

00:13:25,190 --> 00:13:29,330
benefits could be a shared

00:13:27,070 --> 00:13:31,010
implementation between all users of

00:13:29,330 --> 00:13:33,440
things so there's not you know

00:13:31,010 --> 00:13:35,840
variations and functionality and things

00:13:33,440 --> 00:13:39,500
like that yeah maybe I didn't stick to

00:13:35,840 --> 00:13:42,560
that yeah hi hi everyone this is this is

00:13:39,500 --> 00:13:44,330
my first time on this cool so nice to

00:13:42,560 --> 00:13:47,870
see some some familiar faces and some

00:13:44,330 --> 00:13:52,640
new ones mostly my face well I know what

00:13:47,870 --> 00:13:55,390
your face looks like so yeah I am

00:13:52,640 --> 00:13:58,970
involved in some of the services work

00:13:55,390 --> 00:14:01,190
sort of out of the London office or out

00:13:58,970 --> 00:14:02,990
of London at the moment and yeah Service

00:14:01,190 --> 00:14:05,810
Catalog is something that we're

00:14:02,990 --> 00:14:08,420
obviously very interested in we've got a

00:14:05,810 --> 00:14:10,330
few deliberate efforts that are sort of

00:14:08,420 --> 00:14:12,860
kicking off at the moment to look at

00:14:10,330 --> 00:14:15,440
what might it look like to integrate

00:14:12,860 --> 00:14:19,220
Service Catalog more directly into CFO

00:14:15,440 --> 00:14:22,970
gates but we've also actually just been

00:14:19,220 --> 00:14:25,100
using it sort of outside of Cloud

00:14:22,970 --> 00:14:27,620
Foundry for some other purposes that

00:14:25,100 --> 00:14:30,260
we're looking at at the moment so we're

00:14:27,620 --> 00:14:33,830
pretty pretty involved with it we keep

00:14:30,260 --> 00:14:35,210
an eye on it and a bunch of our team are

00:14:33,830 --> 00:14:37,040
sort of contributing to Service Catalog

00:14:35,210 --> 00:14:42,440
and I think we're hoping to try and get

00:14:37,040 --> 00:14:45,140
some more some more time to sort of work

00:14:42,440 --> 00:14:47,720
on it hopefully with the goal of

00:14:45,140 --> 00:14:49,250
improving the integrations into

00:14:47,720 --> 00:14:55,270
compounds so that's that's definitely

00:14:49,250 --> 00:14:55,270
happening great things

00:14:58,029 --> 00:15:02,450
and then so so folks you know have read

00:15:01,100 --> 00:15:04,790
the docs and have questions that's great

00:15:02,450 --> 00:15:07,279
if folks are going to read the docs you

00:15:04,790 --> 00:15:10,010
know I can sort of there's a couple at

00:15:07,279 --> 00:15:11,270
least the two that you know I worked

00:15:10,010 --> 00:15:16,190
with Angela and Connor on a little bits

00:15:11,270 --> 00:15:18,680
are the exploring series in the CF at

00:15:16,190 --> 00:15:21,560
run-time doc you see that link and that

00:15:18,680 --> 00:15:22,970
one's really sort of exploratory we put

00:15:21,560 --> 00:15:24,410
down some of the things we know that

00:15:22,970 --> 00:15:26,330
we're aware of an ecosystem that people

00:15:24,410 --> 00:15:27,740
are hoping to achieve it's not intended

00:15:26,330 --> 00:15:29,600
to be a proposal of like hey we should

00:15:27,740 --> 00:15:31,430
do this it's just it's more like what

00:15:29,600 --> 00:15:35,210
have we heard right there was a thread

00:15:31,430 --> 00:15:36,890
that that came up and you know it was

00:15:35,210 --> 00:15:38,900
like hey we want to declare it an

00:15:36,890 --> 00:15:40,610
interface for creating organs and spaces

00:15:38,900 --> 00:15:42,080
right and so that that was a use case

00:15:40,610 --> 00:15:43,279
and then you know I shared you know

00:15:42,080 --> 00:15:44,750
we're doing some routes here to use and

00:15:43,279 --> 00:15:46,400
that's more you know under the hood and

00:15:44,750 --> 00:15:47,839
things and so if folks have thoughts

00:15:46,400 --> 00:15:49,550
about things are hoping to achieve and

00:15:47,839 --> 00:15:50,900
understand in use cases that that they

00:15:49,550 --> 00:15:53,390
think would be valuable that that'll

00:15:50,900 --> 00:15:54,740
help us collect those and invalidate

00:15:53,390 --> 00:15:56,930
stuff so that's a great place to have

00:15:54,740 --> 00:15:59,029
that conversation and then there's a

00:15:56,930 --> 00:16:03,140
follow up one the CF app runtime Syria

00:15:59,029 --> 00:16:04,430
proaches where we stepped back and said

00:16:03,140 --> 00:16:06,320
okay given the goals were aware of and

00:16:04,430 --> 00:16:07,760
we think those will grow as people you

00:16:06,320 --> 00:16:09,740
know maybe after the stock or whatever

00:16:07,760 --> 00:16:14,300
it'll grow our understanding but given

00:16:09,740 --> 00:16:15,770
what we know now what are some different

00:16:14,300 --> 00:16:17,180
ways we could sort of architect the

00:16:15,770 --> 00:16:18,890
whole systems and this gets more into

00:16:17,180 --> 00:16:21,050
the technical bits and lesson to it sort

00:16:18,890 --> 00:16:24,500
of the these are facing bits of how

00:16:21,050 --> 00:16:26,600
might we lay some things out such that

00:16:24,500 --> 00:16:29,750
we could have you know consistency and

00:16:26,600 --> 00:16:31,550
how we apply CR DS and different things

00:16:29,750 --> 00:16:33,320
like that so that's what that one page

00:16:31,550 --> 00:16:35,540
and so that might help you kind of pick

00:16:33,320 --> 00:16:41,150
and choose where you want to start your

00:16:35,540 --> 00:16:44,300
reading so are you interested to have

00:16:41,150 --> 00:16:46,790
some information about the series we use

00:16:44,300 --> 00:16:51,110
in cubes here from the quacks operator

00:16:46,790 --> 00:16:56,410
and that first document then we could

00:16:51,110 --> 00:17:00,050
add some I think that'd be great yeah

00:16:56,410 --> 00:17:02,600
yeah and I think also like just like

00:17:00,050 --> 00:17:04,069
it's we're just trying to like aggregate

00:17:02,600 --> 00:17:07,189
all the different like goals and use

00:17:04,069 --> 00:17:09,079
cases in a single talk so like it's

00:17:07,189 --> 00:17:12,289
easily discoverable and like

00:17:09,079 --> 00:17:14,480
easy to reference back to so I think

00:17:12,289 --> 00:17:16,789
like you know like folks have like I

00:17:14,480 --> 00:17:18,589
think Adam folks from services like

00:17:16,789 --> 00:17:21,289
added a bit to like the end of the doc

00:17:18,589 --> 00:17:23,480
about like their use cases and so I

00:17:21,289 --> 00:17:25,429
think it would be great if like you can

00:17:23,480 --> 00:17:27,709
add a section as well I think it's like

00:17:25,429 --> 00:17:30,409
editable by everyone because we want it

00:17:27,709 --> 00:17:36,890
to be something that's owned more by the

00:17:30,409 --> 00:17:38,659
community I just I think there's one one

00:17:36,890 --> 00:17:40,340
thing I think we should keep in mind

00:17:38,659 --> 00:17:42,519
about CR DS is that I feel like there's

00:17:40,340 --> 00:17:45,320
two directions these use cases come from

00:17:42,519 --> 00:17:48,230
one is like this user thing like logs of

00:17:45,320 --> 00:17:51,380
spaces by a user kind of external to CF

00:17:48,230 --> 00:17:53,059
as a whole wants to understand it and

00:17:51,380 --> 00:17:54,860
then there's another which is the

00:17:53,059 --> 00:17:57,409
architecture CF itself and how the

00:17:54,860 --> 00:18:00,529
components talk to each other and how

00:17:57,409 --> 00:18:01,880
operable CF kind of as a whole is in the

00:18:00,529 --> 00:18:03,500
middle when you're trying to debug it

00:18:01,880 --> 00:18:06,320
and those are kind of like subtly

00:18:03,500 --> 00:18:08,000
different and you maybe need maybe once

00:18:06,320 --> 00:18:09,679
your leaders both but maybe actually

00:18:08,000 --> 00:18:11,779
there's like kind of user facing

00:18:09,679 --> 00:18:13,610
high-level see IDs and not you know like

00:18:11,779 --> 00:18:16,210
August of space and then kind of

00:18:13,610 --> 00:18:18,799
architectural see IDs like the roots one

00:18:16,210 --> 00:18:21,789
and I think it's actually useful to keep

00:18:18,799 --> 00:18:21,789
those separate in our heads

00:18:24,470 --> 00:18:29,270
I will while reading through doc I

00:18:27,559 --> 00:18:30,980
actually found it interesting that you

00:18:29,270 --> 00:18:32,809
have this notion of like could we have

00:18:30,980 --> 00:18:35,289
something like a manifest C or D in

00:18:32,809 --> 00:18:38,870
there which i think is kind of clearly

00:18:35,289 --> 00:18:41,480
user-facing in like the terminology that

00:18:38,870 --> 00:18:43,820
the Julie said I didn't actually think

00:18:41,480 --> 00:18:46,309
about those like when I thought about

00:18:43,820 --> 00:18:49,220
series in the context of tree I need

00:18:46,309 --> 00:18:52,610
more thought about like orgs and spaces

00:18:49,220 --> 00:18:55,640
and probably also roots and then I think

00:18:52,610 --> 00:18:58,940
like this the special one which is like

00:18:55,640 --> 00:19:02,059
the app there I left a comment in the

00:18:58,940 --> 00:19:04,400
doc basically asking I can imagine like

00:19:02,059 --> 00:19:06,230
how an app would get like certain

00:19:04,400 --> 00:19:08,900
properties and associations to other

00:19:06,230 --> 00:19:11,840
objects but how would you envision like

00:19:08,900 --> 00:19:14,750
the app it's actually being transferred

00:19:11,840 --> 00:19:17,780
for to to where they actually need to

00:19:14,750 --> 00:19:20,840
end up in in order for k2 to do its job

00:19:17,780 --> 00:19:23,750
would that be like a large finery field

00:19:20,840 --> 00:19:26,360
inside the C or D or is it a reference

00:19:23,750 --> 00:19:31,549
to something else or how would you

00:19:26,360 --> 00:19:35,120
envision that yeah I don't think we've

00:19:31,549 --> 00:19:37,400
gotten as far as you know scoping out

00:19:35,120 --> 00:19:38,750
exactly what an app sort of C or D or

00:19:37,400 --> 00:19:40,340
manifests here D would look like

00:19:38,750 --> 00:19:44,720
although I'd like us to start getting

00:19:40,340 --> 00:19:48,110
there soon you know at a high level we

00:19:44,720 --> 00:19:50,210
don't include the upload when it's

00:19:48,110 --> 00:19:52,909
orchestrated via the CLI it's a number

00:19:50,210 --> 00:19:54,950
of steps in the CLI manages and upload

00:19:52,909 --> 00:19:56,750
and then it then it puts some app

00:19:54,950 --> 00:19:58,760
resources into the API imagine we could

00:19:56,750 --> 00:20:01,669
do something similar with Kate's where

00:19:58,760 --> 00:20:04,370
we could have you know the CFC Li manage

00:20:01,669 --> 00:20:06,049
getting the bits somewhere available and

00:20:04,370 --> 00:20:07,190
then whenever it creates an app C or D

00:20:06,049 --> 00:20:10,130
it would it would create it with a

00:20:07,190 --> 00:20:11,690
pointer to it wherever those application

00:20:10,130 --> 00:20:12,590
bits are so I imagined be pretty similar

00:20:11,690 --> 00:20:16,760
talking to you today

00:20:12,590 --> 00:20:20,030
I think the discussion of user facing

00:20:16,760 --> 00:20:24,770
versus infrastructure is is really

00:20:20,030 --> 00:20:26,299
interesting and you know I think one

00:20:24,770 --> 00:20:27,559
thing we've talked about a little bit

00:20:26,299 --> 00:20:29,780
but we'd like to at least be able to

00:20:27,559 --> 00:20:31,730
explore is you know when you look at for

00:20:29,780 --> 00:20:33,649
example what what Capac gave where it's

00:20:31,730 --> 00:20:35,659
it's sort of the separate project now

00:20:33,649 --> 00:20:37,970
that that has the staging component of

00:20:35,659 --> 00:20:40,940
Cloud Foundry but it's able to be used

00:20:37,970 --> 00:20:43,010
independently of Cloud Foundry there's

00:20:40,940 --> 00:20:44,440
maybe an opportunity with CR DS to start

00:20:43,010 --> 00:20:47,390
breaking things down into more

00:20:44,440 --> 00:20:49,790
composable vids such as those here these

00:20:47,390 --> 00:20:51,710
could be user interfaces and ab c or d

00:20:49,790 --> 00:20:55,060
and arab CRT could be user interfaces

00:20:51,710 --> 00:20:58,100
may be independent of the whole you know

00:20:55,060 --> 00:21:01,610
CF proper that we bring together and you

00:20:58,100 --> 00:21:03,230
go through the CC api and get them get

00:21:01,610 --> 00:21:04,700
the full experience so that's another

00:21:03,230 --> 00:21:06,260
area we've been sort of thinking about

00:21:04,700 --> 00:21:07,190
as well like how would we break these

00:21:06,260 --> 00:21:08,990
down

00:21:07,190 --> 00:21:11,540
it probably had some complications where

00:21:08,990 --> 00:21:12,920
you know some cds might in some cases be

00:21:11,540 --> 00:21:15,380
a direct user interface but in other

00:21:12,920 --> 00:21:18,550
cases they're intended to be sort of

00:21:15,380 --> 00:21:22,010
managed by a higher controller tier and

00:21:18,550 --> 00:21:23,900
at least at first so that's one angle

00:21:22,010 --> 00:21:27,320
we've at least been sort of exploring

00:21:23,900 --> 00:21:29,180
and it comes up is really sorry good

00:21:27,320 --> 00:21:31,820
yeah thanks

00:21:29,180 --> 00:21:35,570
so we have a kind of kubernetes team

00:21:31,820 --> 00:21:39,160
here at Sousa and one of the architects

00:21:35,570 --> 00:21:43,100
there has been working on on a spec for

00:21:39,160 --> 00:21:44,840
organizations and spaces based on the

00:21:43,100 --> 00:21:46,820
Cloud Foundry notions of organizations

00:21:44,840 --> 00:21:49,790
and spaces and obviously they're

00:21:46,820 --> 00:21:52,160
separate but they are meant to do

00:21:49,790 --> 00:21:55,780
exactly what orgs and spaces do for

00:21:52,160 --> 00:22:00,050
Cloud Foundry but he wrote that proposal

00:21:55,780 --> 00:22:02,990
just from a kubernetes point of view so

00:22:00,050 --> 00:22:05,270
they're completely reusable regardless

00:22:02,990 --> 00:22:08,630
of Cloud Foundry and I think he's on

00:22:05,270 --> 00:22:11,750
vacation now but I pinged him to present

00:22:08,630 --> 00:22:16,580
his proposal here in or sake

00:22:11,750 --> 00:22:18,830
at some point yeah that would be super

00:22:16,580 --> 00:22:22,370
awesome to hear about that and think

00:22:18,830 --> 00:22:23,540
about that one thing the team looked

00:22:22,370 --> 00:22:25,490
into as they're exploring you know

00:22:23,540 --> 00:22:27,350
thinking about orgs and spaces is really

00:22:25,490 --> 00:22:31,250
interesting because they're they're yes

00:22:27,350 --> 00:22:32,360
a core component of Cloud Foundry but to

00:22:31,250 --> 00:22:33,740
that they're they are this integration

00:22:32,360 --> 00:22:36,160
point and so we found that for example

00:22:33,740 --> 00:22:38,630
some of our services teams in lieu of

00:22:36,160 --> 00:22:41,090
orgs and spaces existing are creating

00:22:38,630 --> 00:22:43,160
sort of shadow series this idea of an

00:22:41,090 --> 00:22:45,230
organ space like a CF organ space er D

00:22:43,160 --> 00:22:46,340
that they can use to their main series

00:22:45,230 --> 00:22:48,320
that actually kind of do work can

00:22:46,340 --> 00:22:49,850
reference back to those things and it's

00:22:48,320 --> 00:22:51,380
really all about getting this reference

00:22:49,850 --> 00:22:51,810
to an order space so that they can make

00:22:51,380 --> 00:22:54,810
their

00:22:51,810 --> 00:22:56,100
business logic decisions about that so

00:22:54,810 --> 00:22:58,340
like this concept of at least knowing

00:22:56,100 --> 00:23:00,960
about them is pretty interesting you

00:22:58,340 --> 00:23:03,330
know and then you extend it and there's

00:23:00,960 --> 00:23:05,070
this amount of okay well if you are

00:23:03,330 --> 00:23:06,500
doing that and we do have CFC artis you

00:23:05,070 --> 00:23:09,330
know how do we keep these things in sync

00:23:06,500 --> 00:23:10,980
and I finally see early MOT the organ

00:23:09,330 --> 00:23:12,270
space CID model is a really interesting

00:23:10,980 --> 00:23:13,320
place where it starts showing where we

00:23:12,270 --> 00:23:17,160
need to make some architectural

00:23:13,320 --> 00:23:18,540
decisions you can imagine today really

00:23:17,160 --> 00:23:20,190
quickly you could come up with an organ

00:23:18,540 --> 00:23:22,610
space er D and an operator that's

00:23:20,190 --> 00:23:24,810
interacted with the existing CF API and

00:23:22,610 --> 00:23:26,880
reconciled those two things together so

00:23:24,810 --> 00:23:29,100
users might create organ space CDs and

00:23:26,880 --> 00:23:31,110
then we can make those true in various

00:23:29,100 --> 00:23:34,170
foundations and then that will arrange

00:23:31,110 --> 00:23:35,250
sort of looks like C or D CF if you know

00:23:34,170 --> 00:23:37,650
and then Cloud Foundry is sort of

00:23:35,250 --> 00:23:39,870
underneath or you can imagine a world

00:23:37,650 --> 00:23:43,670
where you know we have a foundry and

00:23:39,870 --> 00:23:46,280
underneath we have organ space CDs and

00:23:43,670 --> 00:23:48,420
then you know people are still able to

00:23:46,280 --> 00:23:51,440
integrate with those at whichever level

00:23:48,420 --> 00:23:54,480
they care about whether it's a CF API or

00:23:51,440 --> 00:23:55,560
with with the kate's API but it has

00:23:54,480 --> 00:23:57,300
these really interesting subtle

00:23:55,560 --> 00:24:01,620
differences and where you layer these

00:23:57,300 --> 00:24:03,090
things at and so you know getting

00:24:01,620 --> 00:24:04,560
consistency you know might it might be

00:24:03,090 --> 00:24:05,820
sort of pragmatic and quick to do

00:24:04,560 --> 00:24:08,010
something where organ space where you

00:24:05,820 --> 00:24:09,120
sit sort of above tray can manage things

00:24:08,010 --> 00:24:11,340
because then you can start making these

00:24:09,120 --> 00:24:13,020
declarative decisions really quickly but

00:24:11,340 --> 00:24:14,250
for things like routes and and apps it

00:24:13,020 --> 00:24:16,710
feels more natural that they're probably

00:24:14,250 --> 00:24:18,750
as Jules talked about this idea of them

00:24:16,710 --> 00:24:20,010
being more of an infrastructure level

00:24:18,750 --> 00:24:21,450
but now we've got this two really

00:24:20,010 --> 00:24:23,670
different ways of interacting with C or

00:24:21,450 --> 00:24:25,500
DS and so try and understand like hey

00:24:23,670 --> 00:24:27,120
actually can we and we have a little

00:24:25,500 --> 00:24:28,500
more consistency even if in the long run

00:24:27,120 --> 00:24:30,840
that might take a little longer to get

00:24:28,500 --> 00:24:33,870
those things together and I think that's

00:24:30,840 --> 00:24:37,520
what we're trying to learn a fair bit

00:24:33,870 --> 00:24:37,520
about in some of these explorations

00:24:37,760 --> 00:24:45,330
looking at this proposal because it

00:24:41,780 --> 00:24:47,760
wasn't at all biased by cloth foundry

00:24:45,330 --> 00:24:50,370
right I mean the concepts were come

00:24:47,760 --> 00:24:53,400
foundry based but not biased about how

00:24:50,370 --> 00:24:55,700
cloud foundry works at all so it's

00:24:53,400 --> 00:25:00,300
interesting that you could set up

00:24:55,700 --> 00:25:02,040
organizations and spaces in kubernetes

00:25:00,300 --> 00:25:05,610
and have them be very very useful

00:25:02,040 --> 00:25:10,260
without cloud foundry so it's pretty

00:25:05,610 --> 00:25:11,700
I love you can come in here maybe this

00:25:10,260 --> 00:25:16,020
is that a document you'd be able to

00:25:11,700 --> 00:25:19,320
share on CF dev is synchronously I think

00:25:16,020 --> 00:25:21,540
so right now it's it's in our internal

00:25:19,320 --> 00:25:24,270
wiki and I don't want to take it out

00:25:21,540 --> 00:25:26,220
before it comes back oh yeah sure I just

00:25:24,270 --> 00:25:28,140
you know maybe in conjunction to you

00:25:26,220 --> 00:25:29,660
this kind of synchronous meeting I think

00:25:28,140 --> 00:25:32,070
it'd be beneficial to have some

00:25:29,660 --> 00:25:33,330
manifestation of that as like a Google

00:25:32,070 --> 00:25:35,460
Doc on CF dev yeah that'd be very

00:25:33,330 --> 00:25:37,770
helpful thank you and glad if he can

00:25:35,460 --> 00:25:39,990
refresh my memory was there a mapping

00:25:37,770 --> 00:25:42,059
between either orgs or spaces to

00:25:39,990 --> 00:25:44,360
kubernetes namespaces like a simple

00:25:42,059 --> 00:25:47,580
mapping or was that completely unrelated

00:25:44,360 --> 00:25:50,160
so the idea would is that normal users

00:25:47,580 --> 00:25:53,970
that are not administrators can no

00:25:50,160 --> 00:25:57,000
longer create namespaces and then

00:25:53,970 --> 00:25:59,730
through the series of organizations in

00:25:57,000 --> 00:26:00,120
spaces namespaces would be created for

00:25:59,730 --> 00:26:04,380
you

00:26:00,120 --> 00:26:09,110
together with the appropriate security

00:26:04,380 --> 00:26:11,760
settings like our bags and all of those

00:26:09,110 --> 00:26:13,470
so there would be a sort of a one-to-one

00:26:11,760 --> 00:26:16,590
mapping between the space and a

00:26:13,470 --> 00:26:18,750
namespace but you as a user you wouldn't

00:26:16,590 --> 00:26:22,250
be able to interact with namespaces

00:26:18,750 --> 00:26:22,250
directly you'd have to use the CR DS

00:26:23,310 --> 00:26:28,100
to

00:26:26,030 --> 00:26:29,720
yeah but that's a great topic and

00:26:28,100 --> 00:26:32,630
another one that gets really interesting

00:26:29,720 --> 00:26:36,050
to dig into is this mapping of orgs and

00:26:32,630 --> 00:26:37,580
spaces to namespaces and you know

00:26:36,050 --> 00:26:39,230
there's there's these figuring out how

00:26:37,580 --> 00:26:41,900
to do it even with all they have now and

00:26:39,230 --> 00:26:43,370
then there's you know I I think we have

00:26:41,900 --> 00:26:45,170
hopes and ambitions that we can have

00:26:43,370 --> 00:26:48,380
sort of a multi cluster representation

00:26:45,170 --> 00:26:50,120
of apps on Cloud Foundry at some point

00:26:48,380 --> 00:26:51,590
in the future and how does that play in

00:26:50,120 --> 00:26:53,900
and is that we're thinking about that

00:26:51,590 --> 00:26:55,790
yet in terms of just getting things

00:26:53,900 --> 00:26:57,380
working and so that's a lot of

00:26:55,790 --> 00:27:02,540
conversation that I've seen different

00:26:57,380 --> 00:27:06,830
folks having as well this stuff on your

00:27:02,540 --> 00:27:09,290
road map on the ireenie roadmap ireenie

00:27:06,830 --> 00:27:11,510
is spiking what it would look like if

00:27:09,290 --> 00:27:15,320
you read me if the interface between

00:27:11,510 --> 00:27:18,770
Kathy and arena versus CID that that's

00:27:15,320 --> 00:27:21,440
really a kind of architectural CID if

00:27:18,770 --> 00:27:23,390
you if you like in those two things just

00:27:21,440 --> 00:27:24,890
it kinda like the route CID

00:27:23,390 --> 00:27:27,080
it would be a lot easier for the

00:27:24,890 --> 00:27:29,030
integration if instead of the

00:27:27,080 --> 00:27:30,410
convergence loop being in CC we have to

00:27:29,030 --> 00:27:33,080
PR any have to kind of figure all that

00:27:30,410 --> 00:27:35,510
stuff out I mean there's a convergence

00:27:33,080 --> 00:27:37,370
sequence ECE Cuban SES is really good at

00:27:35,510 --> 00:27:38,240
convergence loops it's basically a big

00:27:37,370 --> 00:27:40,510
converge asleep

00:27:38,240 --> 00:27:42,710
let's move the converging sequence so

00:27:40,510 --> 00:27:45,470
that's more of a kind of architectural

00:27:42,710 --> 00:27:48,710
thing but as Zack says if we had a CID

00:27:45,470 --> 00:27:50,720
there then maybe that actually does kind

00:27:48,710 --> 00:27:52,400
of give the opportunity for people to

00:27:50,720 --> 00:27:54,560
build other things on top of it maybe it

00:27:52,400 --> 00:27:57,410
makes it easier people to extend the

00:27:54,560 --> 00:27:58,730
system without PR ain't was maybe there

00:27:57,410 --> 00:28:00,800
are some things that come out of that

00:27:58,730 --> 00:28:05,110
anyway maybe there's a user facing that

00:28:00,800 --> 00:28:07,490
comes out I think but they yes yes but I

00:28:05,110 --> 00:28:09,260
certainly wouldn't see our thing is

00:28:07,490 --> 00:28:12,250
trying to expose kind of user facing

00:28:09,260 --> 00:28:14,960
thing I think that would be kind of I

00:28:12,250 --> 00:28:18,740
was actually asking specifically about

00:28:14,960 --> 00:28:22,190
the allocation of applications into a

00:28:18,740 --> 00:28:26,480
single ireenie namespace oh yes we have

00:28:22,190 --> 00:28:28,280
a story what we're we're thinking just

00:28:26,480 --> 00:28:31,550
just basically and we're gonna just

00:28:28,280 --> 00:28:32,780
support in the Iranians face you telling

00:28:31,550 --> 00:28:33,980
us what the namespace should be so we're

00:28:32,780 --> 00:28:36,770
not going to worry about what the right

00:28:33,980 --> 00:28:38,660
mapping is but then Cathy will be able

00:28:36,770 --> 00:28:39,760
to set that mapping correctly so if it

00:28:38,660 --> 00:28:41,020
decides

00:28:39,760 --> 00:28:44,230
there should be a different namespace

00:28:41,020 --> 00:28:46,000
Olga definitely the space Cappy could

00:28:44,230 --> 00:28:48,220
then decide that but we have the arena

00:28:46,000 --> 00:28:49,750
side-story it's about four or five down

00:28:48,220 --> 00:28:52,510
by cog I think this is pretty small

00:28:49,750 --> 00:28:58,360
story for us yeah is there anybody

00:28:52,510 --> 00:29:01,150
already sorry Troy is there anybody

00:28:58,360 --> 00:29:10,420
already thinking about mapping isolation

00:29:01,150 --> 00:29:15,550
segments to clusters thinking we should

00:29:10,420 --> 00:29:17,080
yes but not thinking about how I think

00:29:15,550 --> 00:29:19,660
the closest we have let me share that

00:29:17,080 --> 00:29:22,780
there's we shared something out probably

00:29:19,660 --> 00:29:26,770
I don't know six to nine months ago on

00:29:22,780 --> 00:29:27,910
the mailing list around a Multi cluster

00:29:26,770 --> 00:29:30,250
experience we'd like to expose to

00:29:27,910 --> 00:29:31,780
applications and so if you've had a

00:29:30,250 --> 00:29:34,420
chance to read s claw I'll link it here

00:29:31,780 --> 00:29:37,690
again in the chat real quick but to be

00:29:34,420 --> 00:29:39,940
clear it doesn't get into things like

00:29:37,690 --> 00:29:42,100
architecture and things like like the

00:29:39,940 --> 00:29:44,680
how it's more of the you know what is

00:29:42,100 --> 00:29:46,240
the experience we'd like to provide so

00:29:44,680 --> 00:29:48,280
from that angle we're sort of thinking

00:29:46,240 --> 00:29:50,860
about it we don't talk about Isis eggs

00:29:48,280 --> 00:29:52,450
specifically we're more focused on just

00:29:50,860 --> 00:29:54,250
the high-level concept of there are apps

00:29:52,450 --> 00:29:56,170
there are clusters we'd like to have

00:29:54,250 --> 00:29:57,850
these experiences and get them validated

00:29:56,170 --> 00:30:00,730
with the community so I'll link that

00:29:57,850 --> 00:30:03,160
here and you know that can have at least

00:30:00,730 --> 00:30:04,990
that part of the conversation but as far

00:30:03,160 --> 00:30:07,870
as the implementation part of that but

00:30:04,990 --> 00:30:09,940
something I'm really eager to get to but

00:30:07,870 --> 00:30:11,980
my thinking right now is for one view we

00:30:09,940 --> 00:30:14,320
have to get to some GA of scheduling any

00:30:11,980 --> 00:30:17,800
apps on a cluster before he can do multi

00:30:14,320 --> 00:30:19,840
cluster and then to we're really trying

00:30:17,800 --> 00:30:21,640
to figure out how intertwined this idea

00:30:19,840 --> 00:30:24,220
of CR DS and our ability to distribute

00:30:21,640 --> 00:30:25,960
things on multiple clusters really are

00:30:24,220 --> 00:30:27,640
it might be a lot easier to do multi

00:30:25,960 --> 00:30:29,410
cluster work if we have some base layers

00:30:27,640 --> 00:30:30,100
here these that represent our

00:30:29,410 --> 00:30:32,890
application

00:30:30,100 --> 00:30:34,120
it might not so so I'm really eager to

00:30:32,890 --> 00:30:35,710
get to multi clusters the main thing I

00:30:34,120 --> 00:30:37,390
want to work on but there's a couple

00:30:35,710 --> 00:30:38,560
things kind of before that that we're

00:30:37,390 --> 00:30:40,090
sort of working our way here to get

00:30:38,560 --> 00:30:41,830
there so I'll show that doc real quick I

00:30:40,090 --> 00:30:42,630
can definitely see where the thinking

00:30:41,830 --> 00:30:47,620
that so far

00:30:42,630 --> 00:30:51,880
yon we just started spike for cube CF

00:30:47,620 --> 00:30:53,120
with Diego so not ireenie to do multi

00:30:51,880 --> 00:31:00,400
cluster

00:30:53,120 --> 00:31:00,400
with isolation groups okay thanks I

00:31:11,290 --> 00:31:17,420
think not directly related to I believe

00:31:15,080 --> 00:31:21,280
I read the doc sector you have been

00:31:17,420 --> 00:31:25,190
talking about and like one thing that we

00:31:21,280 --> 00:31:27,620
discuss every now and then is like could

00:31:25,190 --> 00:31:30,590
there be a separation of like where the

00:31:27,620 --> 00:31:32,450
control places where the applications

00:31:30,590 --> 00:31:35,570
are running it could be application

00:31:32,450 --> 00:31:38,780
speed just quote unquote pure kubernetes

00:31:35,570 --> 00:31:41,570
based workload so that like folks that

00:31:38,780 --> 00:31:43,670
are using the CF API to deploy their

00:31:41,570 --> 00:31:46,070
apps could still interact with other

00:31:43,670 --> 00:31:50,390
kubernetes stuff on the same cluster and

00:31:46,070 --> 00:31:52,010
and like um not be able to to actually

00:31:50,390 --> 00:31:53,450
interfere with Cloud Foundry control

00:31:52,010 --> 00:31:55,510
claim components because they are

00:31:53,450 --> 00:32:00,710
running on on it's completely different

00:31:55,510 --> 00:32:03,670
cluster elsewhere well I believe I also

00:32:00,710 --> 00:32:05,990
left a comment in the talk wrong Danny

00:32:03,670 --> 00:32:08,179
yeah thanks I think it's definitely a

00:32:05,990 --> 00:32:10,580
use case that that I've been hearing

00:32:08,179 --> 00:32:11,870
from you know from folks in that dock I

00:32:10,580 --> 00:32:14,690
think I've seen that comment and then I

00:32:11,870 --> 00:32:16,610
think even you know VMware customers

00:32:14,690 --> 00:32:19,700
also that's one of the first things I

00:32:16,610 --> 00:32:21,350
hear from them and so I meant about the

00:32:19,700 --> 00:32:23,179
right I think in my head that's somewhat

00:32:21,350 --> 00:32:24,530
related to the multi cluster work but

00:32:23,179 --> 00:32:27,130
it's nothing we're thinking about you

00:32:24,530 --> 00:32:30,559
know maybe maybe there's a fast path to

00:32:27,130 --> 00:32:32,360
some of the different use cases I think

00:32:30,559 --> 00:32:35,570
I'm bringing it up here because one

00:32:32,360 --> 00:32:38,090
thought that we had is like what is the

00:32:35,570 --> 00:32:40,190
minimum set of things that you need to

00:32:38,090 --> 00:32:42,559
have on that remote cluster so to speak

00:32:40,190 --> 00:32:45,470
like apart from the extra lap and if

00:32:42,559 --> 00:32:47,179
let's say the the C or DS need to live

00:32:45,470 --> 00:32:49,790
on that very same cluster than you're

00:32:47,179 --> 00:32:52,040
probably limiting yourself to like

00:32:49,790 --> 00:32:55,790
certain deployment scenarios whereas if

00:32:52,040 --> 00:32:57,770
the OSI or DS would be called remote

00:32:55,790 --> 00:32:59,690
enabled or could kind of live on a

00:32:57,770 --> 00:33:03,580
different cluster then I think you would

00:32:59,690 --> 00:33:06,260
have less less restrictions but

00:33:03,580 --> 00:33:06,890
complicate things as well so yeah

00:33:06,260 --> 00:33:09,830
interesting

00:33:06,890 --> 00:33:12,230
Point idea thanks burnt I'm not sure if

00:33:09,830 --> 00:33:15,230
you're interested in cube CF with Diego

00:33:12,230 --> 00:33:17,780
but that's exactly the use case of that

00:33:15,230 --> 00:33:20,360
spike that I was telling you on about

00:33:17,780 --> 00:33:24,320
with a control plane living in one

00:33:20,360 --> 00:33:27,920
cluster and then cells living in in the

00:33:24,320 --> 00:33:30,470
other cluster I mean if you could take a

00:33:27,920 --> 00:33:33,710
look like if you have thoughts that

00:33:30,470 --> 00:33:35,540
would be very useful because it's like

00:33:33,710 --> 00:33:41,260
you're you're talking about the exact

00:33:35,540 --> 00:33:43,460
same if you have like a doctor share

00:33:41,260 --> 00:33:47,380
I'll give you a link I'll give you a

00:33:43,460 --> 00:33:47,380
link okay thanks

00:33:48,989 --> 00:33:54,279
and then probably need the other thing

00:33:51,730 --> 00:33:56,019
that that I found very interesting

00:33:54,279 --> 00:33:57,850
reading through the docks was a

00:33:56,019 --> 00:34:02,110
discussion around like where does the

00:33:57,850 --> 00:34:05,230
persistency actually live like cloud

00:34:02,110 --> 00:34:11,109
controller database versus etcd versus

00:34:05,230 --> 00:34:13,270
sinking the true versus like one one API

00:34:11,109 --> 00:34:14,889
path kind of owning an object and the

00:34:13,270 --> 00:34:17,559
other one just allowing to do to read

00:34:14,889 --> 00:34:19,869
stuff so I found it interesting that you

00:34:17,559 --> 00:34:22,960
kind of came up with those various

00:34:19,869 --> 00:34:26,589
different like layouts and persistency

00:34:22,960 --> 00:34:29,679
options yeah at that point and I think

00:34:26,589 --> 00:34:31,869
you know it helps to sort of anchor

00:34:29,679 --> 00:34:35,589
those or ground them on some some very

00:34:31,869 --> 00:34:37,059
specific use cases you know I think at

00:34:35,589 --> 00:34:39,609
least what stood out to me so far is the

00:34:37,059 --> 00:34:41,169
most interesting sort of decisions we'll

00:34:39,609 --> 00:34:42,819
have to make are you know we really

00:34:41,169 --> 00:34:44,470
talked about that org space idea and

00:34:42,819 --> 00:34:46,089
like you know maybe there's a quick path

00:34:44,470 --> 00:34:48,700
if we layered it above but then if

00:34:46,089 --> 00:34:49,809
long-term we want it sort of below you

00:34:48,700 --> 00:34:51,250
know maybe there's a way to migrate some

00:34:49,809 --> 00:34:52,899
on the other we think that's a relation

00:34:51,250 --> 00:34:55,149
case and something that we have to like

00:34:52,899 --> 00:34:57,520
try and figure out the right thing the

00:34:55,149 --> 00:34:59,079
other one is this idea that you know III

00:34:57,520 --> 00:35:01,900
think our assumption is that we see are

00:34:59,079 --> 00:35:03,790
these a lot of the benefits of having

00:35:01,900 --> 00:35:06,220
that that cait's based representation is

00:35:03,790 --> 00:35:08,980
that we can integrate with other caves

00:35:06,220 --> 00:35:11,980
based ecosystem tooling a lot more

00:35:08,980 --> 00:35:13,780
easily because that that's the API level

00:35:11,980 --> 00:35:17,829
that they expect to interact with right

00:35:13,780 --> 00:35:19,049
and so a real simple use case might be

00:35:17,829 --> 00:35:22,299
auto-scaling

00:35:19,049 --> 00:35:24,010
the the horizontal pato scaler can can

00:35:22,299 --> 00:35:26,920
scale things that look like they have

00:35:24,010 --> 00:35:30,839
have a pods back right and so if we say

00:35:26,920 --> 00:35:32,770
we want to have that thing scale

00:35:30,839 --> 00:35:34,390
resources that are scheduled by Cloud

00:35:32,770 --> 00:35:36,700
Foundry there's this really interesting

00:35:34,390 --> 00:35:38,319
thing where they're manipulating whether

00:35:36,700 --> 00:35:40,450
they would theoretically be manipulating

00:35:38,319 --> 00:35:41,740
some C or D that we've created in the

00:35:40,450 --> 00:35:43,390
Cloud Foundry ecosystem they'd be

00:35:41,740 --> 00:35:46,000
changing values on that they wouldn't be

00:35:43,390 --> 00:35:49,750
going through the front door of the CC

00:35:46,000 --> 00:35:51,760
API and so now we've got this this this

00:35:49,750 --> 00:35:53,109
out of sync situation where what we

00:35:51,760 --> 00:35:55,540
actually want is what the autoscaler

00:35:53,109 --> 00:35:56,950
told us right we want that change that

00:35:55,540 --> 00:35:58,510
no user told us that through the front

00:35:56,950 --> 00:36:00,970
door and so now we have this source of

00:35:58,510 --> 00:36:02,800
truth issue of is what's in the case

00:36:00,970 --> 00:36:04,960
the source of truth or is what we had in

00:36:02,800 --> 00:36:07,510
CCTV source of truth and how do we

00:36:04,960 --> 00:36:09,849
reconcile those and so that's like a

00:36:07,510 --> 00:36:12,280
really sort of and then we imagine like

00:36:09,849 --> 00:36:14,380
that expanding to like various all kinds

00:36:12,280 --> 00:36:17,500
of other integrations hopefully right as

00:36:14,380 --> 00:36:19,180
new tools and new different different

00:36:17,500 --> 00:36:21,430
things exist in the Catechism we want

00:36:19,180 --> 00:36:23,050
people to really be able to extend and

00:36:21,430 --> 00:36:24,579
take advantage of all that and have that

00:36:23,050 --> 00:36:26,980
work with their their Cloud Foundry

00:36:24,579 --> 00:36:28,660
based things and so but it's really good

00:36:26,980 --> 00:36:31,390
said a small use case to see like why

00:36:28,660 --> 00:36:33,369
that that that source of truth location

00:36:31,390 --> 00:36:36,329
becomes really important to get right

00:36:33,369 --> 00:36:38,920
and really important to have the right

00:36:36,329 --> 00:36:40,780
sort of patterns in place so that you

00:36:38,920 --> 00:36:42,460
know maybe we want that true for our

00:36:40,780 --> 00:36:43,540
absolutism want that true for our outsi

00:36:42,460 --> 00:36:45,099
or needs as well maybe they're there

00:36:43,540 --> 00:36:47,050
some things that that people can can

00:36:45,099 --> 00:36:48,250
integrate against and manipulate those

00:36:47,050 --> 00:36:50,829
and so if we can make sure we're all

00:36:48,250 --> 00:36:52,210
doing the same thing we might have a lot

00:36:50,829 --> 00:36:55,410
lot of opportunity to open up the

00:36:52,210 --> 00:36:55,410
extensibility of subsea

00:37:03,269 --> 00:37:05,329
you

00:37:09,000 --> 00:37:19,450
okay additional questions to folks while

00:37:12,339 --> 00:37:36,099
they're still there I have so many tabs

00:37:19,450 --> 00:37:38,140
to read now questions and well what are

00:37:36,099 --> 00:37:39,760
we gonna do next I don't even know yet

00:37:38,140 --> 00:37:41,319
that's this exciting thing what we gonna

00:37:39,760 --> 00:37:46,089
do next now we've got so much stuff out

00:37:41,319 --> 00:37:47,490
there anyone has that answer yet but you

00:37:46,089 --> 00:37:56,650
mean to say thank you very much done

00:37:47,490 --> 00:38:00,099
yeah well usually Jesus is the person to

00:37:56,650 --> 00:38:02,680
come up with like creative new ideas and

00:38:00,099 --> 00:38:05,140
what to do next so Jules any thoughts

00:38:02,680 --> 00:38:07,150
there I got nothing

00:38:05,140 --> 00:38:08,589
I'm just hope you finish this whole

00:38:07,150 --> 00:38:09,339
cloud thing by the time I come back from

00:38:08,589 --> 00:38:12,640
paternity leave

00:38:09,339 --> 00:38:15,880
that's this alright the race is on what

00:38:12,640 --> 00:38:17,470
do we have mid-july something you've got

00:38:15,880 --> 00:38:19,960
you got a couple months justjust leave a

00:38:17,470 --> 00:38:22,390
couple things couple fun things left for

00:38:19,960 --> 00:38:27,790
me to come back to I'm gonna stick with

00:38:22,390 --> 00:38:29,020
the kid computers yeah computers are

00:38:27,790 --> 00:38:30,960
always broken Jules there'll be

00:38:29,020 --> 00:38:33,940
something broken right

00:38:30,960 --> 00:38:35,950
yeah I think what thing we've been we've

00:38:33,940 --> 00:38:39,099
been looking to drive out as like you

00:38:35,950 --> 00:38:40,599
know what I think there's broad

00:38:39,099 --> 00:38:43,329
consensus that we want to drive this

00:38:40,599 --> 00:38:46,809
domain forward but what things are you

00:38:43,329 --> 00:38:48,640
know going to be maybe uncontroversial

00:38:46,809 --> 00:38:52,690
and obviously the right decision to

00:38:48,640 --> 00:38:54,849
proceed with and what things are looking

00:38:52,690 --> 00:38:58,059
riskier either from a technical

00:38:54,849 --> 00:39:01,329
perspective or from an interface

00:38:58,059 --> 00:39:03,130
perspective that we could make some more

00:39:01,329 --> 00:39:05,609
reversible decisions or experiments

00:39:03,130 --> 00:39:08,140
around as we're trying these things out

00:39:05,609 --> 00:39:09,700
so I think yeah that's one thing that I

00:39:08,140 --> 00:39:12,490
found helpful about some of the details

00:39:09,700 --> 00:39:14,920
in the approaches document is to lay out

00:39:12,490 --> 00:39:18,299
a few different options there and and

00:39:14,920 --> 00:39:18,299
some of those trade-offs

00:39:21,620 --> 00:39:29,700
fine service there you go you make me

00:39:24,690 --> 00:39:32,550
said it they said it was the next thing

00:39:29,700 --> 00:39:37,230
we should do or I mean it was right

00:39:32,550 --> 00:39:39,240
there but instead I had good ideas so

00:39:37,230 --> 00:39:44,340
it's like think of an idea think what

00:39:39,240 --> 00:39:48,770
service ok but but but but you said that

00:39:44,340 --> 00:39:51,840
Cloud Foundry already was service I mean

00:39:48,770 --> 00:40:01,650
there's always that's done what's after

00:39:51,840 --> 00:40:07,440
that there's no sign I'm just gonna ask

00:40:01,650 --> 00:40:09,810
one last question given this new domain

00:40:07,440 --> 00:40:12,840
heavy maybe you have already done it but

00:40:09,810 --> 00:40:15,300
did we take a pulse check with customers

00:40:12,840 --> 00:40:17,460
who at least the you know individuals

00:40:15,300 --> 00:40:19,920
were working on platform engineers on ok

00:40:17,460 --> 00:40:22,050
it's operators to see what type of

00:40:19,920 --> 00:40:32,810
feedback we could get or is it too early

00:40:22,050 --> 00:40:34,830
for that this is a question to Jack

00:40:32,810 --> 00:40:37,290
you're right I mean I think as far as

00:40:34,830 --> 00:40:38,730
we're going is forward we're starting to

00:40:37,290 --> 00:40:40,230
explore right now right we have we've

00:40:38,730 --> 00:40:42,420
done as far as let's let's get a doc and

00:40:40,230 --> 00:40:46,110
share with the community around use

00:40:42,420 --> 00:40:49,200
cases we're aware of and then you know

00:40:46,110 --> 00:40:51,450
hopefully the you know vendors and

00:40:49,200 --> 00:40:53,040
different folks cancer chime in with

00:40:51,450 --> 00:40:55,110
with where that's this gonna go where

00:40:53,040 --> 00:40:56,940
the integrators can chime in and so

00:40:55,110 --> 00:40:59,780
we're at the stage of trying to gather

00:40:56,940 --> 00:40:59,780
that feedback is essential

00:41:02,540 --> 00:41:07,040
I mean probably related to that I think

00:41:04,970 --> 00:41:09,950
one one thought that we had early on in

00:41:07,040 --> 00:41:12,350
like the whole conversations was like

00:41:09,950 --> 00:41:14,510
how to actually get more traction from

00:41:12,350 --> 00:41:18,730
the kubernetes side of the house store

00:41:14,510 --> 00:41:21,890
but like I was wondering if some of them

00:41:18,730 --> 00:41:24,080
could some of that be validated by folks

00:41:21,890 --> 00:41:25,490
that probably don't have to see if

00:41:24,080 --> 00:41:30,080
background I don't have a good

00:41:25,490 --> 00:41:32,150
suggestion asking that question probably

00:41:30,080 --> 00:41:33,740
that's that's another angle to to look

00:41:32,150 --> 00:41:35,800
at things

00:41:33,740 --> 00:41:35,800
you

00:41:36,350 --> 00:41:43,080
so something like the question of to do

00:41:40,680 --> 00:41:49,770
the C or DS or these approaches feel

00:41:43,080 --> 00:41:53,040
good when it is like I think another

00:41:49,770 --> 00:41:56,220
attack on that B might be like with a at

00:41:53,040 --> 00:41:58,440
least in some form of utility within the

00:41:56,220 --> 00:42:00,150
kubernetes community more broadly I

00:41:58,440 --> 00:42:04,230
think we we don't have anyone from

00:42:00,150 --> 00:42:06,720
networking on but that I think is

00:42:04,230 --> 00:42:08,310
something that I recall is coming up for

00:42:06,720 --> 00:42:11,160
discussion among the route C or D is

00:42:08,310 --> 00:42:12,480
like could this be something that would

00:42:11,160 --> 00:42:14,220
be maybe a more convenient interface

00:42:12,480 --> 00:42:16,980
even over things like ingress or risk

00:42:14,220 --> 00:42:19,140
you virtual services for or maybe a

00:42:16,980 --> 00:42:21,960
better multi-tenant interface for

00:42:19,140 --> 00:42:24,060
routing to a variety of workloads on the

00:42:21,960 --> 00:42:27,480
Cates cluster not just CF apps it's not

00:42:24,060 --> 00:42:29,670
having it tightly coupled to that so

00:42:27,480 --> 00:42:31,290
that might be a future topic of

00:42:29,670 --> 00:42:34,280
discussion that we could solicit as a

00:42:31,290 --> 00:42:37,320
deeper dive into the routing series and

00:42:34,280 --> 00:42:39,480
how they might serve not just as a

00:42:37,320 --> 00:42:41,580
representation of that CF resource but

00:42:39,480 --> 00:42:46,890
if there are lots around there greater

00:42:41,580 --> 00:42:48,780
extensibility yeah I know like speaking

00:42:46,890 --> 00:42:51,450
with folks who've been working on the

00:42:48,780 --> 00:42:54,810
route C idea definitely I think one of

00:42:51,450 --> 00:42:57,230
the benefits of having it is idea that

00:42:54,810 --> 00:43:01,290
you can essentially swap out the backend

00:42:57,230 --> 00:43:05,220
and so it becomes like a more generic

00:43:01,290 --> 00:43:08,730
interface and then right now you about

00:43:05,220 --> 00:43:11,580
see Rd the like controller actuate in

00:43:08,730 --> 00:43:13,650
Ghana is creating sto resources but like

00:43:11,580 --> 00:43:15,150
in the future you could like consider

00:43:13,650 --> 00:43:17,700
maybe I want like a different like

00:43:15,150 --> 00:43:21,690
ingress solution or like a different

00:43:17,700 --> 00:43:24,090
like like open source project and so

00:43:21,690 --> 00:43:25,740
like I could be easy like contour for

00:43:24,090 --> 00:43:27,960
ingress instead and like swapping now

00:43:25,740 --> 00:43:29,070
and so I think getting back to like the

00:43:27,960 --> 00:43:31,260
point jules brought up at the beginning

00:43:29,070 --> 00:43:35,550
is sort of like thinking of like what is

00:43:31,260 --> 00:43:37,320
like like user facing like CRD versus

00:43:35,550 --> 00:43:41,310
maybe more architecture or like higher

00:43:37,320 --> 00:43:43,140
level lower level we talked about in

00:43:41,310 --> 00:43:45,650
like the clock boundary go system like

00:43:43,140 --> 00:43:49,290
routes us be like maybe a more like

00:43:45,650 --> 00:43:49,809
lower level but you can also almost view

00:43:49,290 --> 00:43:51,880
that as

00:43:49,809 --> 00:43:56,289
higher level construct like in

00:43:51,880 --> 00:44:00,039
comparison to like sto CR DS that are

00:43:56,289 --> 00:44:04,239
actually that driving like the specific

00:44:00,039 --> 00:44:05,890
ingress actually talent down that line I

00:44:04,239 --> 00:44:08,949
still have at the back of my head that

00:44:05,890 --> 00:44:11,469
I'd be pretty cool at some point if it

00:44:08,949 --> 00:44:13,809
reenie was creating Kane ativ resources

00:44:11,469 --> 00:44:16,059
rather than deployments like it seems

00:44:13,809 --> 00:44:18,670
like such a such an obvious potentially

00:44:16,059 --> 00:44:20,049
possible thing to do at some point I

00:44:18,670 --> 00:44:22,269
don't think it's quite there yet there's

00:44:20,049 --> 00:44:24,819
I think I think at the moment the kind

00:44:22,269 --> 00:44:27,309
of K native cold start is a bit

00:44:24,819 --> 00:44:28,420
prohibitive but it's certainly something

00:44:27,309 --> 00:44:30,880
you'd want to be able to do at some

00:44:28,420 --> 00:44:33,069
point I think I think long term it's

00:44:30,880 --> 00:44:35,170
actually prohibitive for doing all

00:44:33,069 --> 00:44:39,400
workloads right like a native very

00:44:35,170 --> 00:44:41,410
specifically excuse ordinality with any

00:44:39,400 --> 00:44:42,880
instances right so you have CF instance

00:44:41,410 --> 00:44:46,349
index we're just gonna break some stuff

00:44:42,880 --> 00:44:48,849
so it always would have to be optional I

00:44:46,349 --> 00:44:50,829
think well about the sin issue right now

00:44:48,849 --> 00:44:54,009
i think i think we plan to deprecated

00:44:50,829 --> 00:44:56,469
instance index anyway we yeah like i

00:44:54,009 --> 00:44:58,269
think i think to really take k nature

00:44:56,469 --> 00:45:00,519
surfing right now if you put K major at

00:44:58,269 --> 00:45:02,799
the bottom wouldn't really buy you that

00:45:00,519 --> 00:45:04,359
much are you a little bit because it

00:45:02,799 --> 00:45:05,709
means that the CRTs we're creating were

00:45:04,359 --> 00:45:07,329
like addressable so it integrate with

00:45:05,709 --> 00:45:09,009
the venting nice of it may be a cut but

00:45:07,329 --> 00:45:11,619
it wouldn't buy you that much what it

00:45:09,009 --> 00:45:15,279
would buy you potentially is service as

00:45:11,619 --> 00:45:18,219
in if we we could then expose the user

00:45:15,279 --> 00:45:20,799
facing feature of not requiring you to

00:45:18,219 --> 00:45:22,299
set instance counts and they said if you

00:45:20,799 --> 00:45:25,599
could have sort of like an auto scale

00:45:22,299 --> 00:45:27,429
flag or something on the CF push and you

00:45:25,599 --> 00:45:28,660
get that almost for free if you could

00:45:27,429 --> 00:45:31,059
swap that back-end if you see whatever

00:45:28,660 --> 00:45:32,439
you know there's maybe some stuff down

00:45:31,059 --> 00:45:33,789
that line where I don't think I'd want

00:45:32,439 --> 00:45:35,499
to put cane a screen just book K

00:45:33,789 --> 00:45:38,079
anything because actually like pretty

00:45:35,499 --> 00:45:40,179
damn complicated and you pay you don't

00:45:38,079 --> 00:45:42,249
it's not free in terms of the kind of

00:45:40,179 --> 00:45:44,019
auto scaling you there's some

00:45:42,249 --> 00:45:45,789
significant cold start time and some of

00:45:44,019 --> 00:45:48,989
that stuff but if you're exposing some

00:45:45,789 --> 00:45:51,009
features from it it could be pretty cool

00:45:48,989 --> 00:45:53,140
yeah I think that's definitely something

00:45:51,009 --> 00:45:54,849
you know we've chatted about is this you

00:45:53,140 --> 00:45:56,499
know what is the right layer of

00:45:54,849 --> 00:45:58,420
abstraction right and and we have this

00:45:56,499 --> 00:46:00,699
nice in the CF Road what we think is

00:45:58,420 --> 00:46:03,640
nice in terms of an app and a process

00:46:00,699 --> 00:46:05,860
layer and under the hood you can you can

00:46:03,640 --> 00:46:07,300
and auto-scaling to those things and but

00:46:05,860 --> 00:46:10,360
the other the other thing you can do is

00:46:07,300 --> 00:46:13,540
you can add volume service mounts and so

00:46:10,360 --> 00:46:15,040
we're able to sort of abstract things

00:46:13,540 --> 00:46:17,800
that are essentially serverless type

00:46:15,040 --> 00:46:20,290
workloads and things that are stateful

00:46:17,800 --> 00:46:23,370
type workloads right and so it does feel

00:46:20,290 --> 00:46:26,290
like unless Candido eventually has a

00:46:23,370 --> 00:46:27,670
stateful concept which I think we've

00:46:26,290 --> 00:46:29,860
been pretty clear that that's not their

00:46:27,670 --> 00:46:31,780
direction unless that happens then and

00:46:29,860 --> 00:46:35,200
they maybe they have that chance to sort

00:46:31,780 --> 00:46:36,820
of be able to understand users workloads

00:46:35,200 --> 00:46:39,490
in a way that gives them one definition

00:46:36,820 --> 00:46:41,320
and we can generate either kid native I

00:46:39,490 --> 00:46:43,840
see air to use to get serverless or you

00:46:41,320 --> 00:46:45,250
can create stateful sets to get things

00:46:43,840 --> 00:46:46,840
that need volume mounts you know maybe

00:46:45,250 --> 00:46:49,810
we have the chance to be that layer that

00:46:46,840 --> 00:46:53,010
can help decide the right underlying

00:46:49,810 --> 00:46:53,010
thing to for the user's workload

00:46:53,040 --> 00:46:57,940
yes potentially I mean I think I think

00:46:55,900 --> 00:47:02,320
you can do volume answer kit native but

00:46:57,940 --> 00:47:04,120
not you can put a volume out but you

00:47:02,320 --> 00:47:06,280
won't do the schedule what the won't a

00:47:04,120 --> 00:47:09,460
bit but yeah I mean I think general

00:47:06,280 --> 00:47:12,340
point this is like pretty fair there's

00:47:09,460 --> 00:47:13,810
there we have this nice high level CRD I

00:47:12,340 --> 00:47:15,370
think or nice high level content of an

00:47:13,810 --> 00:47:17,230
app which is much more of a high level

00:47:15,370 --> 00:47:20,220
user facing don't mess with all the

00:47:17,230 --> 00:47:22,780
Amaral stuff as we decompose that down

00:47:20,220 --> 00:47:24,100
it makes sense to start using some of

00:47:22,780 --> 00:47:25,960
the kind of best-of-breed lower level

00:47:24,100 --> 00:47:29,740
things and that float in two directions

00:47:25,960 --> 00:47:32,080
where like as well as it gives us it

00:47:29,740 --> 00:47:35,470
makes it easier for us to implement some

00:47:32,080 --> 00:47:38,530
nice features right and also it means

00:47:35,470 --> 00:47:41,230
that we can reuse some of this stuff so

00:47:38,530 --> 00:47:43,210
I don't think I think so far as we've

00:47:41,230 --> 00:47:45,370
been sort of making this transition to

00:47:43,210 --> 00:47:48,040
Cuban entities kind of understandably we

00:47:45,370 --> 00:47:49,870
just like fix the CF user experience and

00:47:48,040 --> 00:47:52,090
then just move everything over and re

00:47:49,870 --> 00:47:54,880
implement it and that that gives you

00:47:52,090 --> 00:47:57,160
some advantages but you're not really

00:47:54,880 --> 00:47:59,260
taking advantage yes this is that what's

00:47:57,160 --> 00:48:00,940
the next question not really taking much

00:47:59,260 --> 00:48:03,010
advantage yet because that's from user

00:48:00,940 --> 00:48:06,070
point of view you can get a single new

00:48:03,010 --> 00:48:07,720
feature five moves to kubernetes other

00:48:06,070 --> 00:48:09,520
than the kind of operator experience

00:48:07,720 --> 00:48:11,020
thing the question is at what point we

00:48:09,520 --> 00:48:12,640
can actually start exposing some of

00:48:11,020 --> 00:48:15,589
these features based on this stuff

00:48:12,640 --> 00:48:17,680
that's why it gets kind of fun

00:48:15,589 --> 00:48:17,680
you

00:48:18,020 --> 00:48:21,860
you know I think that might circle back

00:48:20,270 --> 00:48:23,930
a little bit to the tenancy conversation

00:48:21,860 --> 00:48:25,990
which is interesting right like there's

00:48:23,930 --> 00:48:28,790
not much you can expose to end-users

00:48:25,990 --> 00:48:30,740
without having some amount of tendency

00:48:28,790 --> 00:48:35,410
constructs and CFRA like only the

00:48:30,740 --> 00:48:35,410
admission see the entire world all right

00:48:41,740 --> 00:48:51,350
so that sounds like it's a topic for

00:48:44,690 --> 00:48:53,210
when jewel to spec from Isley I will

00:48:51,350 --> 00:48:57,170
expect it to have themselves by then

00:48:53,210 --> 00:49:11,450
season scanning for zebra by Mitchell

00:48:57,170 --> 00:49:13,730
I'd you all have been slacking yes

00:49:11,450 --> 00:49:25,580
unless there's any last-minute questions

00:49:13,730 --> 00:49:27,350
I think Alex or no I think we didn't

00:49:25,580 --> 00:49:29,630
have any any other topics I mean unless

00:49:27,350 --> 00:49:31,130
people want to bring up a topic that

00:49:29,630 --> 00:49:34,220
would fit in in the remaining ten

00:49:31,130 --> 00:49:38,420
minutes cool I'd like to do just a quick

00:49:34,220 --> 00:49:41,119
plug if I can just just a just a

00:49:38,420 --> 00:49:43,970
reminder that the you know some some

00:49:41,119 --> 00:49:47,270
some notice around the CLI b7g a has

00:49:43,970 --> 00:49:49,040
started to surface I think I think we've

00:49:47,270 --> 00:49:52,760
gone as far as to warn people that it is

00:49:49,040 --> 00:49:54,790
imminent there will be some more

00:49:52,760 --> 00:49:56,990
communication coming out soon around

00:49:54,790 --> 00:50:01,520
deprecation plans and then that happens

00:49:56,990 --> 00:50:02,660
but just want to get it in people's sort

00:50:01,520 --> 00:50:04,010
of top of mind a little bit that will

00:50:02,660 --> 00:50:07,040
have a new major version of the CLI

00:50:04,010 --> 00:50:08,960
coming out soon and you know if that

00:50:07,040 --> 00:50:11,240
raises any concerns or questions like to

00:50:08,960 --> 00:50:14,420
start dressing those sooner than later

00:50:11,240 --> 00:50:16,900
cuz we'll have this new thing we'll be

00:50:14,420 --> 00:50:16,900
supporting it

00:50:20,200 --> 00:50:26,600
okay then I think we indeed can close it

00:50:24,770 --> 00:50:29,360
a little bit earlier thanks everybody

00:50:26,600 --> 00:50:32,150
I'll send around the fall for next time

00:50:29,360 --> 00:50:35,990
as I said again a bit earlier than this

00:50:32,150 --> 00:50:38,990
time and try to kind of also close the

00:50:35,990 --> 00:50:43,100
poll in internet for people to actually

00:50:38,990 --> 00:50:46,040
be notified that input you have from

00:50:43,100 --> 00:50:49,040
joining this call with that thanks

00:50:46,040 --> 00:50:51,100
everybody talk to you next time take

00:50:49,040 --> 00:50:51,100

YouTube URL: https://www.youtube.com/watch?v=_dOVZ2Fzr8g


