Title: Cloud Foundry for Kubernetes SIG [February 2020]
Publication date: 2020-02-05
Playlist: Cloud Foundry for Kubernetes Monthly SIG
Description: 
	
Captions: 
	00:00:00,050 --> 00:00:11,790
that wasn't recorded excellent okay so

00:00:08,189 --> 00:00:15,590
welcome to this week's cloud foundry on

00:00:11,790 --> 00:00:19,470
kubernetes special interest group called

00:00:15,590 --> 00:00:22,529
looking at the poll I think at the

00:00:19,470 --> 00:00:25,439
moment what's leading there is what is

00:00:22,529 --> 00:00:28,050
the state of Cloud Foundry / CF for

00:00:25,439 --> 00:00:30,630
kubernetes you're a questionmark company

00:00:28,050 --> 00:00:32,730
question mark i meani question mark CF

00:00:30,630 --> 00:00:36,930
when it is networking question mark

00:00:32,730 --> 00:00:41,460
logging on the other hand I think over

00:00:36,930 --> 00:00:44,309
in the release integration a select

00:00:41,460 --> 00:00:47,969
channel um Danielle asked the question

00:00:44,309 --> 00:00:50,430
around what I think is kind of a recent

00:00:47,969 --> 00:00:53,579
addition to the Cloud Foundry repository

00:00:50,430 --> 00:00:57,510
which is the CF on on kubernetes project

00:00:53,579 --> 00:01:03,059
and I guess the the positioning or like

00:00:57,510 --> 00:01:06,780
the headline of that project so yeah

00:01:03,059 --> 00:01:08,369
maybe you want to like ask your one or

00:01:06,780 --> 00:01:10,280
two-sentence question around that

00:01:08,369 --> 00:01:13,830
project and then we can collectively

00:01:10,280 --> 00:01:16,140
decide if that is maybe also something

00:01:13,830 --> 00:01:19,500
that we should talk about in this course

00:01:16,140 --> 00:01:22,920
thanks Brent if I may interrupt for a

00:01:19,500 --> 00:01:24,930
quick second the boundary / CF for

00:01:22,920 --> 00:01:29,250
Kate's that I put in there is actually

00:01:24,930 --> 00:01:31,409
that repository oh I see okay because I

00:01:29,250 --> 00:01:33,890
also put in just a cloud foundry

00:01:31,409 --> 00:01:40,259
slightly which is probably not too

00:01:33,890 --> 00:01:44,369
descriptive okay but now sorry Danielle

00:01:40,259 --> 00:01:46,470
oh thanks folks and I suppose I'm coming

00:01:44,369 --> 00:01:49,649
at this from representative use of

00:01:46,470 --> 00:01:51,840
customers and potential customers of we

00:01:49,649 --> 00:01:54,930
if somebody is going to adopt cloud

00:01:51,840 --> 00:01:58,350
foundry on communities where should they

00:01:54,930 --> 00:02:01,200
start consuming stuff from and will that

00:01:58,350 --> 00:02:03,509
can will there be one place for all time

00:02:01,200 --> 00:02:06,630
that will change its contents and change

00:02:03,509 --> 00:02:11,190
its shape to give people confidence that

00:02:06,630 --> 00:02:12,360
it's a decision worth making and I've

00:02:11,190 --> 00:02:13,819
got a meeting

00:02:12,360 --> 00:02:16,129
hopefully next week with the potential

00:02:13,819 --> 00:02:18,680
customer who's asking me should I use

00:02:16,129 --> 00:02:20,659
cloud foundry or kubernetes I want to

00:02:18,680 --> 00:02:22,849
say to them you can use both there's a

00:02:20,659 --> 00:02:25,760
thing that's ready start using this and

00:02:22,849 --> 00:02:27,769
eventually that will become where all of

00:02:25,760 --> 00:02:29,840
the Clara foundry community congregates

00:02:27,769 --> 00:02:32,239
for its cloud foundry on Cuba Nettie's

00:02:29,840 --> 00:02:33,590
efforts without having say to them are

00:02:32,239 --> 00:02:35,510
you gonna pick one of these two repos

00:02:33,590 --> 00:02:36,769
and this one isn't ready yet that one's

00:02:35,510 --> 00:02:37,819
much more ready but it's not gonna be

00:02:36,769 --> 00:02:40,159
the final thing and then you have to

00:02:37,819 --> 00:02:41,599
switch to this other one that wasn't one

00:02:40,159 --> 00:02:45,260
or two sentences but it's the best I can

00:02:41,599 --> 00:02:48,560
do what great great summary I guess and

00:02:45,260 --> 00:02:51,079
I think like it's somehow a follow-up of

00:02:48,560 --> 00:02:54,709
last times conversation as well right

00:02:51,079 --> 00:02:57,049
where we talked about like qcf and the

00:02:54,709 --> 00:03:01,459
activities that Zion and team are are

00:02:57,049 --> 00:03:03,439
doing and how like one could start from

00:03:01,459 --> 00:03:06,230
cube CF and then probably bring in more

00:03:03,439 --> 00:03:09,139
or about kubernetes native components

00:03:06,230 --> 00:03:12,310
into that and I think like part of your

00:03:09,139 --> 00:03:14,599
question Daniel was also like is is that

00:03:12,310 --> 00:03:16,879
discussion and and the outcome of that

00:03:14,599 --> 00:03:21,889
discussion still well it or like that

00:03:16,879 --> 00:03:25,220
does that project change anything was at

00:03:21,889 --> 00:03:27,919
least like my summary from reading

00:03:25,220 --> 00:03:39,489
through that yeah that was what I was

00:03:27,919 --> 00:03:41,780
getting at I was just gonna say about

00:03:39,489 --> 00:03:44,810
describing it at the canonical way I

00:03:41,780 --> 00:03:47,060
think takes away a lot from the cube CF

00:03:44,810 --> 00:03:50,180
project they mainly agree that we

00:03:47,060 --> 00:03:53,000
shouldn't call either one canonical at

00:03:50,180 --> 00:03:55,939
least not yet right until we have

00:03:53,000 --> 00:03:57,620
something yeah so I'm just gonna say

00:03:55,939 --> 00:04:00,919
that I updated the readme it was a

00:03:57,620 --> 00:04:04,219
carryover from CF deployment when I was

00:04:00,919 --> 00:04:06,560
typing in I was trying to keep it

00:04:04,219 --> 00:04:09,680
similar but I removed the word canonical

00:04:06,560 --> 00:04:11,120
so we can it just simply says as an open

00:04:09,680 --> 00:04:14,030
source project for in something

00:04:11,120 --> 00:04:17,120
humanities and co-founder II feel the

00:04:14,030 --> 00:04:20,469
need to say thank you everyone knows red

00:04:17,120 --> 00:04:20,469
hats better than canonical anyway

00:04:20,570 --> 00:04:29,389
[Music]

00:04:23,680 --> 00:04:31,310
I'm now I've had my wage the week yeah I

00:04:29,389 --> 00:04:32,750
think again we we don't really know

00:04:31,310 --> 00:04:35,780
enough about how this is actually going

00:04:32,750 --> 00:04:37,970
to evolve to say for certain that

00:04:35,780 --> 00:04:40,430
there's going to be you know this the

00:04:37,970 --> 00:04:41,870
single unified way to do that you know I

00:04:40,430 --> 00:04:43,520
think we we would like to get there in

00:04:41,870 --> 00:04:45,620
the end but there's still a lot of

00:04:43,520 --> 00:04:47,840
experimentation that honestly we have to

00:04:45,620 --> 00:04:52,370
do you know in terms of technical and

00:04:47,840 --> 00:04:53,510
and community needs and you know we want

00:04:52,370 --> 00:04:55,639
to just don't want to do that

00:04:53,510 --> 00:04:58,430
experimentation in the open-source so it

00:04:55,639 --> 00:05:00,740
might be messy for a while but I think

00:04:58,430 --> 00:05:03,050
that's gonna be it's gonna end up better

00:05:00,740 --> 00:05:05,810
in the long run for us to be navigating

00:05:03,050 --> 00:05:08,360
all of that out in the open

00:05:05,810 --> 00:05:09,860
instead of having having all that

00:05:08,360 --> 00:05:12,710
happened behind closed doors and then

00:05:09,860 --> 00:05:15,530
popping it out closer to a point of

00:05:12,710 --> 00:05:18,860
completion or stability I feel like

00:05:15,530 --> 00:05:20,270
maybe maybe the import the maybe so what

00:05:18,860 --> 00:05:21,680
we were saying in that sector I think

00:05:20,270 --> 00:05:24,289
this is like the important thing there's

00:05:21,680 --> 00:05:27,289
the destination and how we get there

00:05:24,289 --> 00:05:28,910
and I think I think maybe we're

00:05:27,289 --> 00:05:32,650
confusing the how we get there with the

00:05:28,910 --> 00:05:36,440
destination at the moment right I'd like

00:05:32,650 --> 00:05:39,169
the the actually important thing I think

00:05:36,440 --> 00:05:41,419
is that where we end up is something

00:05:39,169 --> 00:05:44,539
that feels minimal and simple and

00:05:41,419 --> 00:05:46,070
sweeping at these native and it doesn't

00:05:44,539 --> 00:05:48,220
involve lots of wash manifests and all

00:05:46,070 --> 00:05:51,620
that kind of stuff

00:05:48,220 --> 00:05:53,510
and I think I think this is maybe the

00:05:51,620 --> 00:05:55,550
critical thing that we I'm not sure we

00:05:53,510 --> 00:05:59,180
are aligned on but I think it's more

00:05:55,550 --> 00:06:03,199
people worried about and I think we need

00:05:59,180 --> 00:06:06,229
to have a path for people today and a

00:06:03,199 --> 00:06:08,960
path that if people take today they will

00:06:06,229 --> 00:06:11,000
we can be confident that they will

00:06:08,960 --> 00:06:12,620
continue to have a good time even as

00:06:11,000 --> 00:06:16,330
other things even as we get to that end

00:06:12,620 --> 00:06:21,080
point right I think some of the worry

00:06:16,330 --> 00:06:22,760
validly is that I I agree which I don't

00:06:21,080 --> 00:06:24,979
think we can just stop and keep CF and

00:06:22,760 --> 00:06:26,449
just evolve to simpler I think I think

00:06:24,979 --> 00:06:28,220
it's really hard to evolve to simple I

00:06:26,449 --> 00:06:31,370
think we actually do need to start with

00:06:28,220 --> 00:06:34,550
simple and get there but we also need to

00:06:31,370 --> 00:06:37,160
have a way for customers who start

00:06:34,550 --> 00:06:40,310
oops yes now to continue to have a good

00:06:37,160 --> 00:06:42,289
time I think I'm going to make it even

00:06:40,310 --> 00:06:44,830
more difficult for everybody but like

00:06:42,289 --> 00:06:47,900
mid long-term we also need to have that

00:06:44,830 --> 00:06:49,789
kind of plan on how to move for

00:06:47,900 --> 00:06:53,000
everybody that's not face to name right

00:06:49,789 --> 00:06:55,069
but right then at the same time you

00:06:53,000 --> 00:06:57,650
wouldn't take like see if deployment

00:06:55,069 --> 00:07:00,919
today and then kind of start to I don't

00:06:57,650 --> 00:07:03,949
know change it over time to kind of

00:07:00,919 --> 00:07:06,680
result in something that's minimally and

00:07:03,949 --> 00:07:09,259
kubernetes native I guess right right

00:07:06,680 --> 00:07:11,740
and and it's quite possible you fix one

00:07:09,259 --> 00:07:14,720
you fix the other so it sounds like the

00:07:11,740 --> 00:07:17,530
undercurrent across these separate

00:07:14,720 --> 00:07:20,509
concerns is really having a set of

00:07:17,530 --> 00:07:23,060
practices and tooling for migrating

00:07:20,509 --> 00:07:24,979
between environments because if we're

00:07:23,060 --> 00:07:29,240
not going to do in place migration of

00:07:24,979 --> 00:07:31,250
CFD or possibly coops DF or CF or Kate's

00:07:29,240 --> 00:07:34,219
or what-have-you

00:07:31,250 --> 00:07:37,190
we need an easy way for customers to

00:07:34,219 --> 00:07:41,150
migrate from foundation you know a to

00:07:37,190 --> 00:07:46,009
foundation B would that be sufficient to

00:07:41,150 --> 00:07:47,360
help sort of ease these concerns between

00:07:46,009 --> 00:07:50,180
the different projects and how we bridge

00:07:47,360 --> 00:07:52,430
the gap between them for what it's worth

00:07:50,180 --> 00:07:53,599
that's that's what I was thinking that's

00:07:52,430 --> 00:07:56,300
what was in the back of my head when I

00:07:53,599 --> 00:07:58,159
said you saw one you saw both actually

00:07:56,300 --> 00:08:00,860
if we have a way to migraine a lot of

00:07:58,159 --> 00:08:03,169
this stops becoming such an issue there

00:08:00,860 --> 00:08:04,099
is a I thought that would be great

00:08:03,169 --> 00:08:07,940
and I think that would be really useful

00:08:04,099 --> 00:08:09,680
I think that there is a very separate to

00:08:07,940 --> 00:08:11,569
the engineering and what actually

00:08:09,680 --> 00:08:20,659
happens kind of viewpoint is the

00:08:11,569 --> 00:08:22,340
perception of customers and if if we end

00:08:20,659 --> 00:08:25,009
up in a situation where somebody picks

00:08:22,340 --> 00:08:28,460
to use the you know say cube C F now and

00:08:25,009 --> 00:08:29,930
then it is presented that that repo

00:08:28,460 --> 00:08:31,430
ceases to be and you're going to use

00:08:29,930 --> 00:08:33,020
this other one and then you're gonna get

00:08:31,430 --> 00:08:34,640
some professional services people in to

00:08:33,020 --> 00:08:36,289
do the migration for you or you're gonna

00:08:34,640 --> 00:08:38,479
use this tool to migrate from the thing

00:08:36,289 --> 00:08:41,149
you were using to the brave new world

00:08:38,479 --> 00:08:44,149
maybe it's you know the repo that

00:08:41,149 --> 00:08:46,769
certifcate becomes I think that will do

00:08:44,149 --> 00:08:50,339
damage to people's trust in the brand

00:08:46,769 --> 00:08:52,829
if say the they were using cube CF and

00:08:50,339 --> 00:08:55,529
that became eventually all of the parts

00:08:52,829 --> 00:08:59,129
in it got swapped out for CFO gates and

00:08:55,529 --> 00:09:00,660
there was a seamless transition and the

00:08:59,129 --> 00:09:01,800
tooling and the deployment mechanism and

00:09:00,660 --> 00:09:05,189
operators and things like that

00:09:01,800 --> 00:09:08,100
manage that migratory path for you then

00:09:05,189 --> 00:09:11,279
there's no undermining of trust and

00:09:08,100 --> 00:09:13,559
faith in the in the brand and no kind of

00:09:11,279 --> 00:09:14,879
unpleasant surprises when someone's like

00:09:13,559 --> 00:09:16,110
hey you told me I should be using this

00:09:14,879 --> 00:09:17,549
thing and that it would be great and

00:09:16,110 --> 00:09:19,019
that cloud foundry on communities was

00:09:17,549 --> 00:09:20,189
ready and now you're telling me that I

00:09:19,019 --> 00:09:23,100
have to give you more monies handled

00:09:20,189 --> 00:09:25,410
migration for me so a sense to that

00:09:23,100 --> 00:09:28,379
makes me totally I feel like most of the

00:09:25,410 --> 00:09:32,069
topics you just touched are more about

00:09:28,379 --> 00:09:33,779
like a distribution of Cloud Foundry I

00:09:32,069 --> 00:09:37,439
mean this would be in a similar question

00:09:33,779 --> 00:09:41,129
setting like a the ember of little

00:09:37,439 --> 00:09:43,379
people like now postulating that

00:09:41,129 --> 00:09:45,209
everything that is done for a CEO for

00:09:43,379 --> 00:09:47,959
cage needs to integrate like perfectly

00:09:45,209 --> 00:09:50,910
in ops man because this is the way

00:09:47,959 --> 00:09:53,910
currently their customers update and

00:09:50,910 --> 00:09:57,079
install the platforms right like to me

00:09:53,910 --> 00:10:00,089
this seems like a distribution concern I

00:09:57,079 --> 00:10:03,540
mean and they'll yes like open source

00:10:00,089 --> 00:10:06,569
work like an analogy right like in the

00:10:03,540 --> 00:10:08,670
communities community most people use a

00:10:06,569 --> 00:10:11,939
variety tools Thank You Bailey and for

00:10:08,670 --> 00:10:15,420
being the most popular soon the cluster

00:10:11,939 --> 00:10:16,829
lifecycle stuff will come along and

00:10:15,420 --> 00:10:18,629
there'll be CR these two crates and

00:10:16,829 --> 00:10:20,670
clusters and that will completely change

00:10:18,629 --> 00:10:24,240
how most people manage keeping at these

00:10:20,670 --> 00:10:26,179
clusters and that's a different story

00:10:24,240 --> 00:10:30,240
from like the various distributions

00:10:26,179 --> 00:10:31,889
hiding that from their customers is the

00:10:30,240 --> 00:10:35,360
underlying components and there's the

00:10:31,889 --> 00:10:37,769
distribution and it would be a shame if

00:10:35,360 --> 00:10:40,230
the kubernetes community or the Cloud

00:10:37,769 --> 00:10:42,720
Foundry community will I or we can't we

00:10:40,230 --> 00:10:44,549
can't change technologies because you

00:10:42,720 --> 00:10:47,939
know it's why did too much to what

00:10:44,549 --> 00:10:50,689
people are deploying those ways I think

00:10:47,939 --> 00:10:53,730
of migration tooling which actually

00:10:50,689 --> 00:10:56,579
allow a distributor to like provide a

00:10:53,730 --> 00:10:58,709
seamless path that is background

00:10:56,579 --> 00:11:00,390
actually changing completely the way

00:10:58,709 --> 00:11:02,730
it's deployed and then moving the

00:11:00,390 --> 00:11:05,790
epps over and everything is fine and the

00:11:02,730 --> 00:11:07,430
end customer actually doesn't see any we

00:11:05,790 --> 00:11:12,570
are we are merely describing like a

00:11:07,430 --> 00:11:14,190
boundary we've been taking a backup and

00:11:12,570 --> 00:11:18,030
restore approach to all of the data

00:11:14,190 --> 00:11:20,280
inside inside one foundation to move it

00:11:18,030 --> 00:11:23,610
into another and it seems pretty

00:11:20,280 --> 00:11:26,580
painless right now and I agree that it's

00:11:23,610 --> 00:11:29,070
more more of a distro approach on how

00:11:26,580 --> 00:11:31,200
you are you do it but I think it should

00:11:29,070 --> 00:11:35,220
be as painless as possible could be even

00:11:31,200 --> 00:11:39,660
a tool that generic and can migrate you

00:11:35,220 --> 00:11:43,200
from any type of cloud foundry whether

00:11:39,660 --> 00:11:45,540
it's GM based or Hernandez based right

00:11:43,200 --> 00:11:48,420
right as soon as we have that I think a

00:11:45,540 --> 00:11:49,950
lot of the problem as soon as we have

00:11:48,420 --> 00:11:54,030
that then all the various distributors

00:11:49,950 --> 00:11:55,620
can use that to give it customers a

00:11:54,030 --> 00:11:57,900
seamless experience and therefore we

00:11:55,620 --> 00:12:01,710
don't have to stick on one technology

00:11:57,900 --> 00:12:05,640
just in case we break something

00:12:01,710 --> 00:12:09,210
an interesting thing we had a CFC a

00:12:05,640 --> 00:12:15,060
light plug-in at some point that uses

00:12:09,210 --> 00:12:17,490
the API to download the staged artifact

00:12:15,060 --> 00:12:20,430
as well as source code as well as all

00:12:17,490 --> 00:12:22,250
setting for all apps and just through

00:12:20,430 --> 00:12:25,860
the API you could migrate

00:12:22,250 --> 00:12:28,020
things just throw a number out there

00:12:25,860 --> 00:12:32,390
like 80% of everything you had on

00:12:28,020 --> 00:12:35,220
boundary I think we could get it higher

00:12:32,390 --> 00:12:40,320
services would always always be a

00:12:35,220 --> 00:12:41,940
problem but yeah yeah I mean we've been

00:12:40,320 --> 00:12:44,790
thinking about those kinds of aspects of

00:12:41,940 --> 00:12:46,590
the problem as well and honestly the the

00:12:44,790 --> 00:12:50,760
apps seem like the easy part

00:12:46,590 --> 00:12:52,320
to move around and it's it's more of

00:12:50,760 --> 00:12:54,630
where that Cloud Foundry environment

00:12:52,320 --> 00:12:56,460
connects to the outside world via the

00:12:54,630 --> 00:12:57,840
service like system of record for

00:12:56,460 --> 00:13:01,590
service instance citizen service

00:12:57,840 --> 00:13:03,960
findings or also splitting ingress

00:13:01,590 --> 00:13:08,040
traffic across environment you know

00:13:03,960 --> 00:13:10,890
reasonable way so yeah I think like

00:13:08,040 --> 00:13:12,990
we're as Adrian mentioned you know it

00:13:10,890 --> 00:13:13,889
seems like this could be seven

00:13:12,990 --> 00:13:16,139
capabilities and

00:13:13,889 --> 00:13:18,660
rules that solves a bunch of different

00:13:16,139 --> 00:13:22,410
problems associated to CF environment

00:13:18,660 --> 00:13:27,980
fragmentation and we're we're getting

00:13:22,410 --> 00:13:30,269
interested and more concretely pursuing

00:13:27,980 --> 00:13:31,410
some of those approaches to address at

00:13:30,269 --> 00:13:40,619
least like you know the eighty or ninety

00:13:31,410 --> 00:13:40,970
percent of this problem space can I just

00:13:40,619 --> 00:13:43,009
tell you

00:13:40,970 --> 00:13:46,629
our intentions Souza's intentions with

00:13:43,009 --> 00:13:49,490
regard to distro versus upstream so

00:13:46,629 --> 00:13:53,120
obviously thank you cipher changing the

00:13:49,490 --> 00:13:59,540
wording that kind of ruined my day when

00:13:53,120 --> 00:14:01,790
I saw that but just to know that that

00:13:59,540 --> 00:14:05,959
our distribution will follow cube CF

00:14:01,790 --> 00:14:08,120
like our goal is to make cube CF pass

00:14:05,959 --> 00:14:10,250
without bumps for a customer to follow

00:14:08,120 --> 00:14:11,839
or for Cloud Foundry user to follow now

00:14:10,250 --> 00:14:14,569
that doesn't mean there can't be other

00:14:11,839 --> 00:14:17,629
paths but we will always try to make

00:14:14,569 --> 00:14:20,300
that the path of least resistance and to

00:14:17,629 --> 00:14:23,240
be able to consume any upstream cube

00:14:20,300 --> 00:14:25,310
idiomatic components that are created so

00:14:23,240 --> 00:14:28,129
we will adapt the project to use

00:14:25,310 --> 00:14:30,649
everything that is that is new from

00:14:28,129 --> 00:14:37,310
upstream and the component teams and we

00:14:30,649 --> 00:14:40,250
are going to try and let the the Boche

00:14:37,310 --> 00:14:42,470
part of that wither away as soon as we

00:14:40,250 --> 00:14:46,220
can take out pieces of it so that is our

00:14:42,470 --> 00:14:48,529
intention that the operator Rolanda the

00:14:46,220 --> 00:14:51,079
fact that cube CF relies on an operator

00:14:48,529 --> 00:14:52,879
it may always rely on an operator but it

00:14:51,079 --> 00:14:55,910
would at some point rely on a much

00:14:52,879 --> 00:14:58,129
simpler operator that is just in in

00:14:55,910 --> 00:15:00,920
charge of managing the sea far lifecycle

00:14:58,129 --> 00:15:04,480
so that's our engineering goal as a

00:15:00,920 --> 00:15:07,189
community anyone can get on board that

00:15:04,480 --> 00:15:11,059
as long as we don't have a situation

00:15:07,189 --> 00:15:14,019
where one project one integration point

00:15:11,059 --> 00:15:16,250
project is chosen over another so if

00:15:14,019 --> 00:15:17,930
we're still in that state we will

00:15:16,250 --> 00:15:19,670
continue to forge ahead and we'll sort

00:15:17,930 --> 00:15:21,860
of try and get mindshare from the

00:15:19,670 --> 00:15:24,500
community by making that the best way

00:15:21,860 --> 00:15:26,089
now there's various opinions about on

00:15:24,500 --> 00:15:28,459
whether we'll be successful in that

00:15:26,089 --> 00:15:31,220
because of the design and stuff but

00:15:28,459 --> 00:15:32,600
that's from a product side on souza

00:15:31,220 --> 00:15:35,629
product side that's the way we're going

00:15:32,600 --> 00:15:37,129
you guys can all see that it is a it's

00:15:35,629 --> 00:15:39,470
worth saying and I should write this

00:15:37,129 --> 00:15:42,370
down somewhere maybe in a blog so that

00:15:39,470 --> 00:15:43,490
it's on the record we are putting this

00:15:42,370 --> 00:15:46,689
upstream

00:15:43,490 --> 00:15:49,970
as soon as we hit 1.0 which is very soon

00:15:46,689 --> 00:15:53,630
I think we talked about through the week

00:15:49,970 --> 00:15:54,810
of February 24th I think we're okay

00:15:53,630 --> 00:15:57,150
putting that directly into

00:15:54,810 --> 00:15:59,610
Cloud Foundry foundation I'll talk to

00:15:57,150 --> 00:16:02,550
Chris and to chip about that to make

00:15:59,610 --> 00:16:06,480
sure that's okay please raise objections

00:16:02,550 --> 00:16:08,730
if that's a problem I think it's only

00:16:06,480 --> 00:16:09,960
fair given that cf4 Cates went directly

00:16:08,730 --> 00:16:15,600
into the foundation rather than the

00:16:09,960 --> 00:16:16,920
incubator so and I think I think we have

00:16:15,600 --> 00:16:18,180
the support of the foundation for that

00:16:16,920 --> 00:16:20,100
because we've been talking about it for

00:16:18,180 --> 00:16:22,290
a long time and it's been part of it's

00:16:20,100 --> 00:16:26,040
been associated closely with the quarks

00:16:22,290 --> 00:16:28,170
Project so that's our intention just so

00:16:26,040 --> 00:16:29,730
you know what we're doing we want to be

00:16:28,170 --> 00:16:30,930
really transparent so that our partners

00:16:29,730 --> 00:16:32,880
know what we're doing so that our

00:16:30,930 --> 00:16:35,460
customers know what we're doing and at

00:16:32,880 --> 00:16:37,470
this time when it's being there's

00:16:35,460 --> 00:16:39,480
perception in the press that oh cloud

00:16:37,470 --> 00:16:41,490
foundry doesn't know what it's doing we

00:16:39,480 --> 00:16:43,050
need to attack that I mean you might

00:16:41,490 --> 00:16:44,730
have seen some of the press that we've

00:16:43,050 --> 00:16:46,320
seen recently about oh what's gonna

00:16:44,730 --> 00:16:48,180
happen now that pivotal is gone to

00:16:46,320 --> 00:16:50,160
VMware or maybe nobody's gonna take care

00:16:48,180 --> 00:16:51,570
of Cloud Foundry I mean we're all here

00:16:50,160 --> 00:16:52,920
we're all talking about that we are

00:16:51,570 --> 00:16:55,950
gonna take care of Cloud Foundry we've

00:16:52,920 --> 00:16:57,029
got a vision for where it's going so now

00:16:55,950 --> 00:16:59,910
we've got to start making some noise

00:16:57,029 --> 00:17:01,589
about that so so this position is we're

00:16:59,910 --> 00:17:04,050
all in on Cube CF we're gonna share it

00:17:01,589 --> 00:17:06,420
with everyone we've acknowledged the

00:17:04,050 --> 00:17:07,679
objection to CF Operator being really

00:17:06,420 --> 00:17:09,959
more of a Bosch operator

00:17:07,679 --> 00:17:11,730
I'm not going to rename it right now but

00:17:09,959 --> 00:17:13,860
we get that it is a Bosch operator and

00:17:11,730 --> 00:17:15,089
that we will maybe need a Bosch operator

00:17:13,860 --> 00:17:18,120
but it should be separate from what

00:17:15,089 --> 00:17:19,500
takes care of keeps yeah so sorry to

00:17:18,120 --> 00:17:20,550
drag it back to that I just wanted

00:17:19,500 --> 00:17:22,100
everyone to be clear on what our

00:17:20,550 --> 00:17:28,679
position was and what we intend to do

00:17:22,100 --> 00:17:32,440
and that's yeah just to provide some

00:17:28,679 --> 00:17:34,710
clarity there I don't know if it's

00:17:32,440 --> 00:17:34,710
left

00:17:39,610 --> 00:17:46,519
guess not I had to add a couple so I

00:17:44,539 --> 00:17:47,960
thought that's like it's Troy something

00:17:46,519 --> 00:17:49,820
like that that sounds perfect like

00:17:47,960 --> 00:17:53,019
there's there's a couple of things I

00:17:49,820 --> 00:17:56,630
want to poke on just like tiny things

00:17:53,019 --> 00:17:58,340
firstly I still don't know that there

00:17:56,630 --> 00:17:59,539
should be a conflict at least long term

00:17:58,340 --> 00:18:01,700
I don't think there should be a conflict

00:17:59,539 --> 00:18:04,580
between the operator and the CFO cube

00:18:01,700 --> 00:18:06,950
stuff which by the way one reason I'm a

00:18:04,580 --> 00:18:08,630
bit worried about the ytt stuff and the

00:18:06,950 --> 00:18:10,429
CFO cube stuff so I think you could

00:18:08,630 --> 00:18:11,450
create a conflict where none needs to

00:18:10,429 --> 00:18:13,190
exist

00:18:11,450 --> 00:18:14,510
I think the ends they shouldn't be

00:18:13,190 --> 00:18:16,519
there's two different ways and let the

00:18:14,510 --> 00:18:19,100
market decide I think the ends thing is

00:18:16,519 --> 00:18:21,470
there's a simple minimal set of yeah

00:18:19,100 --> 00:18:24,139
malls that combines CF together and

00:18:21,470 --> 00:18:26,990
there's an operator so you can install

00:18:24,139 --> 00:18:29,720
that and upgrade that vsc IDs and and

00:18:26,990 --> 00:18:31,120
one should live on top of the other

00:18:29,720 --> 00:18:33,799
[Music]

00:18:31,120 --> 00:18:35,149
there's and one thing I'm a little

00:18:33,799 --> 00:18:36,860
concerned about is if we treat them as

00:18:35,149 --> 00:18:38,809
two separate things they can't become

00:18:36,860 --> 00:18:41,630
two separate things and because actually

00:18:38,809 --> 00:18:43,850
I think you should be making sure that

00:18:41,630 --> 00:18:46,070
the direction of CF for cakes goes in

00:18:43,850 --> 00:18:48,679
doesn't end up conflicting with that and

00:18:46,070 --> 00:18:52,309
again I worry about some of the ytt

00:18:48,679 --> 00:18:53,299
stuff because of that so that's great so

00:18:52,309 --> 00:18:59,870
do we

00:18:53,299 --> 00:19:02,840
the go ahead Fred yeah I was just

00:18:59,870 --> 00:19:04,760
saying that's the plan on to watch all

00:19:02,840 --> 00:19:07,970
those artifacts closely and try to

00:19:04,760 --> 00:19:09,889
integrate them as soon as possible yeah

00:19:07,970 --> 00:19:13,970
I was trying to say ytt specifically

00:19:09,889 --> 00:19:16,100
would slow us down right but it's not

00:19:13,970 --> 00:19:18,340
something we couldn't cope with we we

00:19:16,100 --> 00:19:21,830
talked about it I think last time

00:19:18,340 --> 00:19:23,570
certainly helm charts we can consume we

00:19:21,830 --> 00:19:26,750
should be able to consume straight-up

00:19:23,570 --> 00:19:30,260
kubernetes yamo other templating formats

00:19:26,750 --> 00:19:32,450
we just require that we figure out how

00:19:30,260 --> 00:19:35,299
to import it and we would like help with

00:19:32,450 --> 00:19:37,399
that if that's the choice so if y TT is

00:19:35,299 --> 00:19:40,039
a choice for the component team we need

00:19:37,399 --> 00:19:41,899
somebody to come and chip in on qcf once

00:19:40,039 --> 00:19:45,320
it's up stream understood once it's up

00:19:41,899 --> 00:19:47,899
stream to help us consume that you know

00:19:45,320 --> 00:19:49,190
we can do it ourselves but it's just it

00:19:47,899 --> 00:19:51,230
would take away from our other work I

00:19:49,190 --> 00:19:54,289
mean we are doing it with the Bosch

00:19:51,230 --> 00:19:57,379
manifest which also Yamla so we could do

00:19:54,289 --> 00:20:03,620
it with y TT with us also young a little

00:19:57,379 --> 00:20:06,169
bit off the scene one way not not sure

00:20:03,620 --> 00:20:08,179
if that's a good one or working out is

00:20:06,169 --> 00:20:09,049
for a cap there's an operator so you

00:20:08,179 --> 00:20:11,840
could have a

00:20:09,049 --> 00:20:14,870
helm shot that actually puts in a CID

00:20:11,840 --> 00:20:16,850
that describes a cup application that

00:20:14,870 --> 00:20:20,090
then renders ytt not sure if that's a

00:20:16,850 --> 00:20:23,389
good idea but right it could be an

00:20:20,090 --> 00:20:27,230
integration path yeah I mean I I just

00:20:23,389 --> 00:20:28,549
think that's a danger that we if you

00:20:27,230 --> 00:20:30,830
have to kind of read template the whole

00:20:28,549 --> 00:20:33,289
of CS in order to get the new things

00:20:30,830 --> 00:20:35,659
it's kind of hard to do what you want on

00:20:33,289 --> 00:20:37,460
top of that and especially because I

00:20:35,659 --> 00:20:39,260
think so this is the other thing I was

00:20:37,460 --> 00:20:42,139
going to say there the one remaining

00:20:39,260 --> 00:20:44,529
kind of worry I have about about the

00:20:42,139 --> 00:20:46,490
kind of how do we migrate people

00:20:44,529 --> 00:20:50,480
starting with a Bashaw operates and

00:20:46,490 --> 00:20:52,279
ending with a CF operator is if the

00:20:50,480 --> 00:20:54,320
thing the customer starts by supplying

00:20:52,279 --> 00:20:56,000
is the boss manifest if you see what I

00:20:54,320 --> 00:20:57,980
mean and if we have to keep a Bosch

00:20:56,000 --> 00:20:59,990
manifest working over the time that's

00:20:57,980 --> 00:21:02,870
quite hard to migrate as opposed with is

00:20:59,990 --> 00:21:05,029
the CID with some top-level fields and

00:21:02,870 --> 00:21:07,519
the fact that that becomes a manifest is

00:21:05,029 --> 00:21:12,470
whatever that's what happens today if

00:21:07,519 --> 00:21:15,320
you see what I mean and so the worry in

00:21:12,470 --> 00:21:17,179
my head is is I'm not I'm not I'm not

00:21:15,320 --> 00:21:19,850
I'm not completely clear how you keep it

00:21:17,179 --> 00:21:24,169
working if you start with a manifest

00:21:19,850 --> 00:21:24,950
it's the sort of user facing thing but

00:21:24,169 --> 00:21:27,220
to be fair

00:21:24,950 --> 00:21:30,230
cube CF is actually a home shot that

00:21:27,220 --> 00:21:32,780
internally creates a Bosch deployment

00:21:30,230 --> 00:21:38,540
that contains a manifest but you can

00:21:32,780 --> 00:21:40,490
like put in the values as home values so

00:21:38,540 --> 00:21:49,130
it's not really user facing if you if

00:21:40,490 --> 00:21:53,300
you deploy cubes here yeah

00:21:49,130 --> 00:21:56,180
maybe Troy I want to say thanks for the

00:21:53,300 --> 00:21:58,070
update about qcf and your plans I was

00:21:56,180 --> 00:21:59,660
wondering I mean you kind of seems like

00:21:58,070 --> 00:22:03,380
you have this kind of BIGBANG

00:21:59,660 --> 00:22:05,240
introduction for cube CF and I remember

00:22:03,380 --> 00:22:08,510
a few weeks ago you saying you were

00:22:05,240 --> 00:22:11,330
doing some cosmetic cleanups within the

00:22:08,510 --> 00:22:13,760
cube CF repo just to like Souza's

00:22:11,330 --> 00:22:16,460
specific things the reason not to

00:22:13,760 --> 00:22:18,500
propose it just for incubation now I'm

00:22:16,460 --> 00:22:21,740
assuming to go into the a prime-time PMC

00:22:18,500 --> 00:22:23,330
yes so the reason we don't want to do

00:22:21,740 --> 00:22:25,820
that two stage approaches

00:22:23,330 --> 00:22:29,450
it's just each time we move it there's a

00:22:25,820 --> 00:22:33,350
little bit of drag on the on the team in

00:22:29,450 --> 00:22:36,020
terms of the repo moving and you know

00:22:33,350 --> 00:22:37,760
having to make sure that the pipeline's

00:22:36,020 --> 00:22:40,910
the public pipelines are working

00:22:37,760 --> 00:22:43,040
properly so the the thought was and and

00:22:40,910 --> 00:22:45,230
of course that spike turns out hasn't

00:22:43,040 --> 00:22:47,330
happened yet so where that work still

00:22:45,230 --> 00:22:51,680
has to be done it'll probably be down to

00:22:47,330 --> 00:22:53,450
you Vlad to do a bunch of that and also

00:22:51,680 --> 00:22:55,400
we want the docs in a good enough shape

00:22:53,450 --> 00:23:00,250
that anyone coming to it for the first

00:22:55,400 --> 00:23:03,350
time can write from the upstream project

00:23:00,250 --> 00:23:04,910
use Cloud Foundry so so we want to get

00:23:03,350 --> 00:23:07,310
that in shape as well we're just a

00:23:04,910 --> 00:23:08,900
little behind on that that's all and we

00:23:07,310 --> 00:23:11,960
could move it in a sort of half-finished

00:23:08,900 --> 00:23:14,060
state into the incubator but that's just

00:23:11,960 --> 00:23:20,510
N and then two weeks later move it to

00:23:14,060 --> 00:23:24,500
two Cloud Foundry we could but then it's

00:23:20,510 --> 00:23:26,630
just one more move that is really kind

00:23:24,500 --> 00:23:28,820
of pointless it is it is fully baked

00:23:26,630 --> 00:23:31,850
it's working right now I use it that's

00:23:28,820 --> 00:23:33,770
my that's my Cloud Foundry it's just we

00:23:31,850 --> 00:23:36,080
haven't felt because the lack of

00:23:33,770 --> 00:23:37,760
documentation mostly and the fact there

00:23:36,080 --> 00:23:38,670
might be some Sousa artifacts still in

00:23:37,760 --> 00:23:40,620
there

00:23:38,670 --> 00:23:43,590
we haven't felt comfortable putting it

00:23:40,620 --> 00:23:45,179
upstream just yet is that is that

00:23:43,590 --> 00:23:47,070
satisfactory I mean do you get alright

00:23:45,179 --> 00:23:50,340
make sense I mean there there might

00:23:47,070 --> 00:23:52,830
technically be like a quantum state of

00:23:50,340 --> 00:23:56,610
incubation that it lands in according to

00:23:52,830 --> 00:24:00,990
the governance loss well no you know we

00:23:56,610 --> 00:24:03,240
can do that in a two stage so I just

00:24:00,990 --> 00:24:06,330
want to challenge you why why did CF er

00:24:03,240 --> 00:24:08,730
for Kate's go directly into without

00:24:06,330 --> 00:24:10,320
going through incubation there's a

00:24:08,730 --> 00:24:12,870
difference but in terms of the

00:24:10,320 --> 00:24:15,570
foundation governance between project

00:24:12,870 --> 00:24:18,929
team and repositories so the release

00:24:15,570 --> 00:24:21,360
integration projects team ll thing CF

00:24:18,929 --> 00:24:23,400
for Kate's and so since they're an

00:24:21,360 --> 00:24:27,000
active team they get to put things into

00:24:23,400 --> 00:24:28,710
the act I see uh stories yeah so and

00:24:27,000 --> 00:24:30,690
then that raises the question does this

00:24:28,710 --> 00:24:32,910
does keep CF fall under the quarks

00:24:30,690 --> 00:24:36,090
umbrella because then it would inherit

00:24:32,910 --> 00:24:38,460
that same privilege but is that the best

00:24:36,090 --> 00:24:39,870
governance model for it I think that's

00:24:38,460 --> 00:24:43,020
where we actually need to talk about the

00:24:39,870 --> 00:24:48,780
specifics of the project team associated

00:24:43,020 --> 00:24:51,570
to that repository so it sounds like

00:24:48,780 --> 00:24:55,080
given the the locus of expertise on cube

00:24:51,570 --> 00:24:56,940
CF is is with you and Vlad and the

00:24:55,080 --> 00:24:59,970
others use of folks and some of the IBM

00:24:56,940 --> 00:25:01,650
burrs that have been contributing that

00:24:59,970 --> 00:25:04,140
might make the most sense as a separate

00:25:01,650 --> 00:25:05,400
project team within the app runtime PMC

00:25:04,140 --> 00:25:06,510
because I don't think it's a boss thing

00:25:05,400 --> 00:25:09,600
I mean this yeah

00:25:06,510 --> 00:25:11,549
everything I mean we could lump it under

00:25:09,600 --> 00:25:15,220
quarks but that would that doesn't seem

00:25:11,549 --> 00:25:18,700
right because if I see

00:25:15,220 --> 00:25:20,560
yeah a front I make Smurfs done I mean

00:25:18,700 --> 00:25:22,890
Vlad does that work with you I mean

00:25:20,560 --> 00:25:28,030
there's a good rationale for having it a

00:25:22,890 --> 00:25:30,390
do do a jump through see if incubation

00:25:28,030 --> 00:25:34,690
if that's the governance model

00:25:30,390 --> 00:25:38,380
we'll talk offline about it but yeah

00:25:34,690 --> 00:25:42,100
yeah I don't mind what whatever works

00:25:38,380 --> 00:25:45,390
and makes everyone comfortable but yeah

00:25:42,100 --> 00:25:47,830
I think it's not just lessly

00:25:45,390 --> 00:25:50,980
I'm John yeah

00:25:47,830 --> 00:25:56,230
now how does everyone feel it does does

00:25:50,980 --> 00:26:01,780
anyone else do we strongly object to to

00:25:56,230 --> 00:26:03,520
cube CX skipping the incubator because

00:26:01,780 --> 00:26:05,950
like I said it would slow us down

00:26:03,520 --> 00:26:07,900
it's just especially because we're so

00:26:05,950 --> 00:26:11,470
close to you know it really truly

00:26:07,900 --> 00:26:13,870
consumable release anyway I can take it

00:26:11,470 --> 00:26:17,110
up with with chip and with Chris and

00:26:13,870 --> 00:26:21,850
we'll see we could do a very short

00:26:17,110 --> 00:26:27,090
incubation period Eric so you know Bill

00:26:21,850 --> 00:26:30,790
feel free to like if if we are following

00:26:27,090 --> 00:26:33,220
whatever is written down for and and

00:26:30,790 --> 00:26:35,260
with the foundation that's not like our

00:26:33,220 --> 00:26:38,530
around to decide this stuff right yeah

00:26:35,260 --> 00:26:40,660
we have PMC meetings for for the

00:26:38,530 --> 00:26:42,220
specific things so like if you want to

00:26:40,660 --> 00:26:46,720
talk about this I guess that's something

00:26:42,220 --> 00:26:48,370
called EQ pants I'm you see okay yeah

00:26:46,720 --> 00:26:50,260
and I think we can discuss just the

00:26:48,370 --> 00:26:53,350
logistics and the correct governance

00:26:50,260 --> 00:26:55,600
with Jim is that separate notion of

00:26:53,350 --> 00:27:01,450
having project teams versus the Reapers

00:26:55,600 --> 00:27:06,460
themselves okay no that works thank you

00:27:01,450 --> 00:27:09,010
we've also definitely observed that lag

00:27:06,460 --> 00:27:11,970
in moving things out of the incubator I

00:27:09,010 --> 00:27:14,050
think the Diego team might still have a

00:27:11,970 --> 00:27:17,280
foundry incubator that we haven't

00:27:14,050 --> 00:27:17,280
bothered to move or kill

00:27:21,589 --> 00:27:27,229
it makes it okay I understand the

00:27:24,749 --> 00:27:27,229
governance better

00:27:29,220 --> 00:27:35,190
do re to hijack the agenda again did we

00:27:32,900 --> 00:27:38,790
do you want to quick update on the

00:27:35,190 --> 00:27:40,490
technical project manager proposal from

00:27:38,790 --> 00:27:43,770
last last week

00:27:40,490 --> 00:27:47,270
this was UA was proposing first of all

00:27:43,770 --> 00:27:49,920
that Souza contributes someone to the

00:27:47,270 --> 00:27:53,670
release integration team which I don't

00:27:49,920 --> 00:27:58,650
know if we have that person the TPM role

00:27:53,670 --> 00:28:03,060
that she mentioned we may have but it I

00:27:58,650 --> 00:28:05,760
think we have considered putting someone

00:28:03,060 --> 00:28:08,940
half time a half time resource if that's

00:28:05,760 --> 00:28:11,160
helpful we still got to talk a little

00:28:08,940 --> 00:28:19,710
bit internally about about that we have

00:28:11,160 --> 00:28:23,630
a person in mind but yeah we can is that

00:28:19,710 --> 00:28:25,680
offer still going is what I'm saying I

00:28:23,630 --> 00:28:27,120
mean I think it would be helpful in

00:28:25,680 --> 00:28:29,370
terms of coordinating some of this

00:28:27,120 --> 00:28:32,100
activity we've also been talking on the

00:28:29,370 --> 00:28:34,800
VMware side about getting some more

00:28:32,100 --> 00:28:37,980
staffing in those kinds of rules okay

00:28:34,800 --> 00:28:40,650
and I think that they they may have some

00:28:37,980 --> 00:28:45,680
time to dedicate to some of the

00:28:40,650 --> 00:28:48,600
community coordination efforts as well

00:28:45,680 --> 00:28:51,450
okay so maybe maybe between the two of

00:28:48,600 --> 00:28:54,990
us we could get a full technical program

00:28:51,450 --> 00:29:05,159
manager coordinating a bunch of this

00:28:54,990 --> 00:29:08,429
activity okay so

00:29:05,159 --> 00:29:11,549
that may be a good point in time to kind

00:29:08,429 --> 00:29:15,509
of as Yun pointed out that he like was

00:29:11,549 --> 00:29:18,509
referring to like kubernetes native

00:29:15,509 --> 00:29:22,259
components with his number four question

00:29:18,509 --> 00:29:26,820
around CF for kubernetes to kind of try

00:29:22,259 --> 00:29:29,009
and see if if we might have folks on the

00:29:26,820 --> 00:29:31,259
call that can you can provide an update

00:29:29,009 --> 00:29:33,629
on where we stand with those topics I

00:29:31,259 --> 00:29:36,690
mean it might even start with kind of

00:29:33,629 --> 00:29:43,889
SCI describing what is in that

00:29:36,690 --> 00:29:46,889
repository now that's yeah sure

00:29:43,889 --> 00:29:49,649
can you all hear me okay awesome so I

00:29:46,889 --> 00:29:51,779
want to I just prepared this simple sort

00:29:49,649 --> 00:29:55,669
of visual and then we can can't jump

00:29:51,779 --> 00:29:59,759
into the repository in a moment so the

00:29:55,669 --> 00:30:01,109
sort of recalling a pre-alpha but what

00:29:59,759 --> 00:30:06,629
do you see right now in the repository

00:30:01,109 --> 00:30:09,869
is a script that installs basically capi

00:30:06,629 --> 00:30:13,559
irony in networking and we also have a

00:30:09,869 --> 00:30:18,989
fork versions of ua that we are using to

00:30:13,559 --> 00:30:21,330
make CF push with talk or app work so

00:30:18,989 --> 00:30:23,729
right now the that's one of the

00:30:21,330 --> 00:30:26,700
capabilities we have it's not a full CF

00:30:23,729 --> 00:30:29,279
experience but you can do you can

00:30:26,700 --> 00:30:31,409
install and you can actually push a

00:30:29,279 --> 00:30:35,099
docker app and you can route to it so

00:30:31,409 --> 00:30:37,349
that's where we are today I think where

00:30:35,099 --> 00:30:39,509
we are right now is we're working with

00:30:37,349 --> 00:30:43,049
the teams so these are the six teams

00:30:39,509 --> 00:30:44,820
that we identified for to integrate we

00:30:43,049 --> 00:30:48,509
working very closely with cross team

00:30:44,820 --> 00:30:50,519
pairing with them exclusively so we are

00:30:48,509 --> 00:30:52,950
working copy especially we are hoping to

00:30:50,519 --> 00:30:57,359
get K pack integration so that we can

00:30:52,950 --> 00:31:00,389
support the foals the real CF push using

00:30:57,359 --> 00:31:02,309
the K pack and Bill packs and we're also

00:31:00,389 --> 00:31:04,499
working on figuring out the install

00:31:02,309 --> 00:31:07,830
experience how do we package default

00:31:04,499 --> 00:31:10,169
databases and the blobstore as we we do

00:31:07,830 --> 00:31:12,210
with CF deployment what are the you know

00:31:10,169 --> 00:31:14,519
how can we do the batteries included

00:31:12,210 --> 00:31:16,649
installation experience and then last

00:31:14,519 --> 00:31:18,509
but not least in this we are also

00:31:16,649 --> 00:31:20,249
working on

00:31:18,509 --> 00:31:22,049
building pipelines and this will not

00:31:20,249 --> 00:31:23,940
only build pipelines for us as an

00:31:22,049 --> 00:31:25,919
integration team but also for the teams

00:31:23,940 --> 00:31:28,320
so that they have a we have a full

00:31:25,919 --> 00:31:30,299
feedback cycle between us and them so

00:31:28,320 --> 00:31:33,749
that's our goal in the next two to three

00:31:30,299 --> 00:31:36,299
weeks and then we're gonna you know as a

00:31:33,749 --> 00:31:38,639
bit as we release the Alpha which we

00:31:36,299 --> 00:31:41,399
expect to do it in Feb time for him and

00:31:38,639 --> 00:31:43,199
the fab you know some of the

00:31:41,399 --> 00:31:45,559
capabilities you will be able to do is

00:31:43,199 --> 00:31:48,899
you know you'll see a push and then

00:31:45,559 --> 00:31:50,269
teams will have a full feedback cycle

00:31:48,899 --> 00:31:52,859
and then we're gonna chip away

00:31:50,269 --> 00:31:55,379
individually with thinking about cats

00:31:52,859 --> 00:31:57,659
okay what are the things and cats for

00:31:55,379 --> 00:32:01,499
example DEA there are still tests from

00:31:57,659 --> 00:32:03,629
DEA which may not be required for we may

00:32:01,499 --> 00:32:06,299
have to be remove it we are probably

00:32:03,629 --> 00:32:07,679
thinking about some of the tests but

00:32:06,299 --> 00:32:09,599
they will just have to think of you know

00:32:07,679 --> 00:32:12,119
just look at them review them and see

00:32:09,599 --> 00:32:13,679
what what stays and what goes start

00:32:12,119 --> 00:32:16,529
thinking about they won't experience and

00:32:13,679 --> 00:32:18,209
then sort of chip away capabilities and

00:32:16,529 --> 00:32:19,940
then to day two and then so on and so

00:32:18,209 --> 00:32:22,649
forth so that's a very high level

00:32:19,940 --> 00:32:25,799
thought around how we're progressing

00:32:22,649 --> 00:32:28,039
from where we are today to where we want

00:32:25,799 --> 00:32:28,039
to go

00:32:28,200 --> 00:32:34,070
it towards GA when I paused

00:32:35,710 --> 00:32:42,760
have any questions concerns or things

00:32:38,080 --> 00:32:45,130
that stand out um I feel like like

00:32:42,760 --> 00:32:48,550
somewhere along the way you mentioned

00:32:45,130 --> 00:32:50,860
like cutting things like the a specific

00:32:48,550 --> 00:32:52,540
test on cats right and if you're not

00:32:50,860 --> 00:32:54,340
only talking about test Suites but we

00:32:52,540 --> 00:32:57,150
are talking about real functionality at

00:32:54,340 --> 00:33:00,700
some point in time the decisions might

00:32:57,150 --> 00:33:06,070
be necessary to really cut existing

00:33:00,700 --> 00:33:09,010
scope to say there might be existing use

00:33:06,070 --> 00:33:12,130
cases in Cloud Foundry we will not

00:33:09,010 --> 00:33:16,300
support or not support at first in the

00:33:12,130 --> 00:33:19,330
coordinators base book where would these

00:33:16,300 --> 00:33:22,630
decisions happen how would we decide on

00:33:19,330 --> 00:33:25,059
these things and so on this would be

00:33:22,630 --> 00:33:27,429
interesting to me yeah I think I expect

00:33:25,059 --> 00:33:30,820
that to be a proposal I'll go out to the

00:33:27,429 --> 00:33:33,340
community in terms of okay these are the

00:33:30,820 --> 00:33:35,980
tests that we identified the use cases

00:33:33,340 --> 00:33:38,110
are not supported at all or this is just

00:33:35,980 --> 00:33:40,780
a relic that we should be planned to

00:33:38,110 --> 00:33:43,900
remove in in the Boche wall but you just

00:33:40,780 --> 00:33:46,900
never got around it so I'd expect that

00:33:43,900 --> 00:33:54,429
to go out as a as a proposal and then we

00:33:46,900 --> 00:33:57,750
can collab on that yeah I think we're

00:33:54,429 --> 00:34:02,410
we're seeing a couple cases where

00:33:57,750 --> 00:34:07,409
there's some potentially minor but you

00:34:02,410 --> 00:34:09,429
know perhaps also significant to users

00:34:07,409 --> 00:34:11,950
cases where there's real behavioral

00:34:09,429 --> 00:34:15,520
change I know there was so I think there

00:34:11,950 --> 00:34:18,490
was a PR that the networking team sent

00:34:15,520 --> 00:34:21,429
in to cats where they were introducing

00:34:18,490 --> 00:34:24,310
some conditionality because when envoy

00:34:21,429 --> 00:34:26,260
is acting as the HTTP proxy instead of

00:34:24,310 --> 00:34:29,250
the go router it has some slightly

00:34:26,260 --> 00:34:33,159
different behavior in terms of like

00:34:29,250 --> 00:34:36,580
passing through or modifying some of the

00:34:33,159 --> 00:34:40,389
query parameters and so even even

00:34:36,580 --> 00:34:43,270
something like that could end up being a

00:34:40,389 --> 00:34:44,590
change that it doesn't break every app

00:34:43,270 --> 00:34:47,080
on the platform but it breaks one app

00:34:44,590 --> 00:34:51,550
that's expecting that consistency

00:34:47,080 --> 00:34:54,570
so that's where I mean traditionally

00:34:51,550 --> 00:34:57,970
we've relied on the judgment of

00:34:54,570 --> 00:34:59,860
especially the individual project teams

00:34:57,970 --> 00:35:02,140
that are responsible those those

00:34:59,860 --> 00:35:05,610
components or areas of functionality not

00:35:02,140 --> 00:35:05,610
to make those kinds of breaking changes

00:35:06,180 --> 00:35:10,750
but here I think also we have you know

00:35:09,280 --> 00:35:13,840
there's there's the opportunity for that

00:35:10,750 --> 00:35:16,510
kind of break across distributions and

00:35:13,840 --> 00:35:19,330
that might be something that you know if

00:35:16,510 --> 00:35:23,440
this is a fundamental behavioral change

00:35:19,330 --> 00:35:25,660
coming in from technology change

00:35:23,440 --> 00:35:30,490
underneath it may not be something that

00:35:25,660 --> 00:35:33,280
we want to put the effort in to change

00:35:30,490 --> 00:35:35,440
to have exact parity with the previous

00:35:33,280 --> 00:35:40,590
CF behavior and so it might be something

00:35:35,440 --> 00:35:40,590
that we would want to document across

00:35:41,190 --> 00:35:47,800
those distributions and to make clear is

00:35:45,640 --> 00:35:52,600
you know a behavioral change that could

00:35:47,800 --> 00:35:54,520
could affect you may not that could also

00:35:52,600 --> 00:35:58,060
be a rationale for having more

00:35:54,520 --> 00:36:00,580
multiplicity or complexity of

00:35:58,060 --> 00:36:02,350
configuration in those distributions if

00:36:00,580 --> 00:36:03,700
you have an existing environment that

00:36:02,350 --> 00:36:05,560
you know is relying on that behavior

00:36:03,700 --> 00:36:08,290
then you might have to stay on the

00:36:05,560 --> 00:36:15,370
exists or distribution until you resolve

00:36:08,290 --> 00:36:22,150
it yeah that's a good point

00:36:15,370 --> 00:36:24,790
thanks Eric cool is it really detest sir

00:36:22,150 --> 00:36:27,640
Diego tests and sorry I believe there is

00:36:24,790 --> 00:36:29,710
d8s and also Diego there might be a

00:36:27,640 --> 00:36:31,480
compatibility test for apps that were

00:36:29,710 --> 00:36:33,400
staged on the DA's like that the

00:36:31,480 --> 00:36:35,080
droplets can still run on Diego it's

00:36:33,400 --> 00:36:37,090
possible yeah that's the kind of thing

00:36:35,080 --> 00:36:43,540
that maybe could come fall off at this

00:36:37,090 --> 00:36:46,750
point so I'm gonna share the repository

00:36:43,540 --> 00:36:49,300
so just to give a glimpse on that so we

00:36:46,750 --> 00:36:52,900
updated the instructions a bit more

00:36:49,300 --> 00:36:55,540
helpful for folks to install but as I

00:36:52,900 --> 00:37:00,040
mentioned today you could only run see

00:36:55,540 --> 00:37:00,790
if docker based apps and I think the big

00:37:00,040 --> 00:37:04,630
next big

00:37:00,790 --> 00:37:06,880
milestone for us is capi integrating

00:37:04,630 --> 00:37:08,950
with KPAC and bill packs so we can do

00:37:06,880 --> 00:37:14,200
that you'll see of push experience that

00:37:08,950 --> 00:37:16,270
we have custom to anything specifically

00:37:14,200 --> 00:37:20,710
want to call out that we are using cap

00:37:16,270 --> 00:37:25,030
as a way to install cube annuities so

00:37:20,710 --> 00:37:30,070
cap allows us to manage the lifecycle of

00:37:25,030 --> 00:37:33,370
the of the installation so when you do

00:37:30,070 --> 00:37:34,720
capital eat it deletes all of the Kuban

00:37:33,370 --> 00:37:39,550
of these objects that we have installed

00:37:34,720 --> 00:37:40,960
by a cap similar to helm and then we're

00:37:39,550 --> 00:37:43,150
using white tea tea for templating

00:37:40,960 --> 00:37:47,580
that's what teams are using so we are

00:37:43,150 --> 00:37:50,380
basically you bringing all of those

00:37:47,580 --> 00:37:53,470
templates into our folder and then doing

00:37:50,380 --> 00:37:55,840
one big command one swoop of generating

00:37:53,470 --> 00:37:57,910
those templates and rendering them and

00:37:55,840 --> 00:38:05,680
then feeding that to cap to go install

00:37:57,910 --> 00:38:07,960
it to cuban release yeah anything that

00:38:05,680 --> 00:38:11,440
comes to your mind you want me to go

00:38:07,960 --> 00:38:14,920
deep here's the install script that does

00:38:11,440 --> 00:38:17,080
most of the installation and we're gonna

00:38:14,920 --> 00:38:20,380
continue you know a trade on this as

00:38:17,080 --> 00:38:23,200
each and every team will bring in you're

00:38:20,380 --> 00:38:25,030
using a package called vendor so what

00:38:23,200 --> 00:38:27,730
this does is very similar to how you

00:38:25,030 --> 00:38:29,680
pull in like you know dependencies so

00:38:27,730 --> 00:38:32,620
for example here's a meta controller

00:38:29,680 --> 00:38:34,540
here's the sea of kate's and working

00:38:32,620 --> 00:38:36,790
copy and we're gonna continue to add

00:38:34,540 --> 00:38:39,340
additional components like logging and

00:38:36,790 --> 00:38:42,070
metrics which is missing one thing I do

00:38:39,340 --> 00:38:44,680
want to call out that when you do a CF

00:38:42,070 --> 00:38:48,430
push if you install this today if we do

00:38:44,680 --> 00:38:50,890
see if perch the app will be running but

00:38:48,430 --> 00:38:52,390
you will get an error back because we

00:38:50,890 --> 00:38:53,920
are missing the logging and metrics

00:38:52,390 --> 00:38:56,260
component but the app is actually

00:38:53,920 --> 00:39:03,670
routable so just keep that in mind when

00:38:56,260 --> 00:39:05,410
you take this for a ride what else want

00:39:03,670 --> 00:39:07,660
to pause there I went through a lot of

00:39:05,410 --> 00:39:12,900
stuff just want to see if there is any

00:39:07,660 --> 00:39:14,680
questions if I'm sorry Daniel you know

00:39:12,900 --> 00:39:17,650
my question is for

00:39:14,680 --> 00:39:23,830
newbee questions Oh God God only that's

00:39:17,650 --> 00:39:28,720
the end so if we were looking into

00:39:23,830 --> 00:39:30,970
actually installing with CF for Kate's

00:39:28,720 --> 00:39:33,640
into two different clusters like having

00:39:30,970 --> 00:39:35,800
the control plane in one and having the

00:39:33,640 --> 00:39:39,070
apps and networking running in the other

00:39:35,800 --> 00:39:41,200
would that be at this stage PRS that

00:39:39,070 --> 00:39:44,260
could be acceptable or is that too early

00:39:41,200 --> 00:39:46,120
to think about that I think it's too

00:39:44,260 --> 00:39:50,410
early we still don't have all of these

00:39:46,120 --> 00:39:53,260
system components integrated yet so once

00:39:50,410 --> 00:39:56,410
we are at a maybe our beta release maybe

00:39:53,260 --> 00:40:00,700
we can consider that once we have a you

00:39:56,410 --> 00:40:03,250
know sort of a cat's running and once we

00:40:00,700 --> 00:40:04,210
have more stability and confidence I

00:40:03,250 --> 00:40:06,810
think that would be a good place to

00:40:04,210 --> 00:40:09,610
start thinking about how we want to

00:40:06,810 --> 00:40:13,620
distribute the components and the

00:40:09,610 --> 00:40:13,620
workloads okay understood

00:40:14,670 --> 00:40:21,250
that is like the what's the time frame

00:40:17,680 --> 00:40:24,460
for that yeah so so we're thinking about

00:40:21,250 --> 00:40:26,770
alpha release and a Feb March early so

00:40:24,460 --> 00:40:30,610
beta release is probably gonna be a

00:40:26,770 --> 00:40:32,620
month or two later but as we chip away

00:40:30,610 --> 00:40:35,890
in the next coming weeks we will have a

00:40:32,620 --> 00:40:39,370
more visibility on those dates so so

00:40:35,890 --> 00:40:41,530
right now it's just a estimate but as we

00:40:39,370 --> 00:40:48,010
get closer to alpha we'll have more

00:40:41,530 --> 00:40:52,270
concrete dates for the Vado putting a

00:40:48,010 --> 00:40:55,780
lot of eggs in the K 14 basket it's

00:40:52,270 --> 00:41:01,300
mostly just Dmitry working on this with

00:40:55,780 --> 00:41:04,630
with Nima is it are we fully committed

00:41:01,300 --> 00:41:10,130
to that though that toolchain the ytt

00:41:04,630 --> 00:41:12,500
and cap at all so

00:41:10,130 --> 00:41:14,660
we are looking at cab for variety of

00:41:12,500 --> 00:41:16,940
things it's likely experience it

00:41:14,660 --> 00:41:20,630
provides very similar to Bosch right the

00:41:16,940 --> 00:41:22,880
Bosch when you deploy and upgrade it it

00:41:20,630 --> 00:41:25,309
allows you to manage the entire

00:41:22,880 --> 00:41:28,039
lifecycle so at this stage right now we

00:41:25,309 --> 00:41:30,410
are we believe cap is a right tool for

00:41:28,039 --> 00:41:33,230
that but we're open to suggestions if

00:41:30,410 --> 00:41:34,700
there are any other you know tooling out

00:41:33,230 --> 00:41:37,609
there that could help us manage that

00:41:34,700 --> 00:41:39,289
life cycle because we were looking at as

00:41:37,609 --> 00:41:41,930
a you know three different parts like

00:41:39,289 --> 00:41:43,460
one is templating right so I'm really

00:41:41,930 --> 00:41:45,769
bringing all of these templates together

00:41:43,460 --> 00:41:48,410
and then the second part is how do you

00:41:45,769 --> 00:41:51,019
manage the lifecycle on Kuban at ease as

00:41:48,410 --> 00:41:54,529
a whole CF because it does install quite

00:41:51,019 --> 00:41:56,660
a few research resources and cap nicely

00:41:54,529 --> 00:42:01,250
manages those reconciles those who named

00:41:56,660 --> 00:42:03,230
you upgrade and deletes them cleanly no

00:42:01,250 --> 00:42:04,880
I get I get the reason you're using the

00:42:03,230 --> 00:42:06,650
tools are look fine

00:42:04,880 --> 00:42:08,900
it's just that they're not broadly

00:42:06,650 --> 00:42:13,279
adopted in the communities community I

00:42:08,900 --> 00:42:16,970
just proxying a feedback from from Tulio

00:42:13,279 --> 00:42:19,930
Esseesse who mentioned this like you

00:42:16,970 --> 00:42:23,539
chose the tool chain that was created

00:42:19,930 --> 00:42:25,910
you like Bosch was specifically you know

00:42:23,539 --> 00:42:27,440
for this task rather than adopting

00:42:25,910 --> 00:42:29,779
something that was more broadly used in

00:42:27,440 --> 00:42:33,559
the community he's warning you that

00:42:29,779 --> 00:42:37,910
that's that's a path to non-adoption in

00:42:33,559 --> 00:42:41,269
the kubernetes community it's something

00:42:37,910 --> 00:42:43,190
to be aware of it's the I've seen a demo

00:42:41,269 --> 00:42:44,869
of it as well and it looks this stuff

00:42:43,190 --> 00:42:46,549
looks good it's just I don't know a lot

00:42:44,869 --> 00:42:52,519
of people outside of our community that

00:42:46,549 --> 00:42:54,529
are using K 14 stuff yeah I think it

00:42:52,519 --> 00:42:57,049
would be great to explore having the

00:42:54,529 --> 00:42:59,150
ability to have sort of as we briefly

00:42:57,049 --> 00:43:04,039
mentioned earlier in the call the base

00:42:59,150 --> 00:43:08,869
set of Cloud Foundry you know deployment

00:43:04,039 --> 00:43:12,049
specs and other resources that are not

00:43:08,869 --> 00:43:14,750
templatized and then different

00:43:12,049 --> 00:43:17,750
distributions or projects could then add

00:43:14,750 --> 00:43:20,930
templating layers on top of that so you

00:43:17,750 --> 00:43:23,029
know config Maps secrets overlay

00:43:20,930 --> 00:43:23,870
settings that you may have on the base

00:43:23,029 --> 00:43:27,530
temp but

00:43:23,870 --> 00:43:30,680
so if we eventually get to that stage

00:43:27,530 --> 00:43:34,760
then I think that may well your fear of

00:43:30,680 --> 00:43:37,910
the dependence on K for teens tooling

00:43:34,760 --> 00:43:40,000
because the base deployment specs would

00:43:37,910 --> 00:43:42,830
not actually have any templating at all

00:43:40,000 --> 00:43:45,470
so the out-of-the-box experience may not

00:43:42,830 --> 00:43:50,740
be quite as rich but it will be more

00:43:45,470 --> 00:43:53,750
extensible downstream right what it like

00:43:50,740 --> 00:43:59,630
III may be knocked myself out nodding

00:43:53,750 --> 00:44:01,940
and they say this is why I worry about

00:43:59,630 --> 00:44:04,940
why I think template thing in the base

00:44:01,940 --> 00:44:06,710
is it's your template at the top we can

00:44:04,940 --> 00:44:08,330
do all sorts of things at the top if

00:44:06,710 --> 00:44:11,030
your template in the bottom everyone has

00:44:08,330 --> 00:44:12,890
to go through the white c-team stuff and

00:44:11,030 --> 00:44:15,110
it's gonna end up non-native and it's

00:44:12,890 --> 00:44:16,400
gonna be a pain and I'm not sure we're

00:44:15,110 --> 00:44:21,650
at the point where we need it

00:44:16,400 --> 00:44:24,110
III think I think I I would like us to

00:44:21,650 --> 00:44:27,190
try to knock our heads against not doing

00:44:24,110 --> 00:44:29,390
any templating and and see what breaks

00:44:27,190 --> 00:44:32,000
and then maybe we need to add some

00:44:29,390 --> 00:44:33,560
templates me higher up but if you start

00:44:32,000 --> 00:44:35,630
with it it's really hard to get away

00:44:33,560 --> 00:44:38,240
from it and I think a lot of people

00:44:35,630 --> 00:44:40,520
who've gone in with him over a period of

00:44:38,240 --> 00:44:46,070
time have realized the template thing

00:44:40,520 --> 00:44:47,570
close and it's bad enough to do it one

00:44:46,070 --> 00:44:50,480
of the challenges that we've seen with

00:44:47,570 --> 00:44:54,350
some of these components as they've been

00:44:50,480 --> 00:44:56,300
brought unto safer kubernetes is many

00:44:54,350 --> 00:44:59,660
components are not written in a way that

00:44:56,300 --> 00:45:02,570
they could accept configuration via

00:44:59,660 --> 00:45:04,610
config maps or files in some ways right

00:45:02,570 --> 00:45:07,040
or you know they're sort of configured

00:45:04,610 --> 00:45:09,620
they're expecting a very specific way of

00:45:07,040 --> 00:45:14,150
being configured so it made it much

00:45:09,620 --> 00:45:17,410
easier you add those into the pod spec

00:45:14,150 --> 00:45:19,880
definitions and things like that so I

00:45:17,410 --> 00:45:22,490
can see in some ways the way to see that

00:45:19,880 --> 00:45:25,400
the templates look now may not be the

00:45:22,490 --> 00:45:28,360
final stage because some of these are in

00:45:25,400 --> 00:45:31,790
service to get a working control plane

00:45:28,360 --> 00:45:35,080
by some definition of the word such that

00:45:31,790 --> 00:45:37,250
we can have a base to iterate on and

00:45:35,080 --> 00:45:40,520
make it more you know

00:45:37,250 --> 00:45:46,010
duction ready and sensible all that sort

00:45:40,520 --> 00:45:47,420
of stuff right I mean yeah a few hacks

00:45:46,010 --> 00:45:50,420
we get working thing is more than

00:45:47,420 --> 00:45:57,830
understandable it's just there's there's

00:45:50,420 --> 00:45:59,330
that tension that if you if we put there

00:45:57,830 --> 00:46:01,340
are some dependencies that you put in

00:45:59,330 --> 00:46:02,000
too early and it's really hard to get

00:46:01,340 --> 00:46:04,670
rid of them again

00:46:02,000 --> 00:46:06,620
and and I'm just gonna say monit and

00:46:04,670 --> 00:46:08,390
leave it there very much when it money

00:46:06,620 --> 00:46:09,890
seemed like a great idea inside as did

00:46:08,390 --> 00:46:11,960
Ruby any Arby's right when we started

00:46:09,890 --> 00:46:14,000
with the Bosch stuff let's just let's

00:46:11,960 --> 00:46:16,580
just have your B's itself everything you

00:46:14,000 --> 00:46:18,860
can't and pick that ever okay we should

00:46:16,580 --> 00:46:21,320
never have put which never let people

00:46:18,860 --> 00:46:24,110
put imperative stuff into into the ER

00:46:21,320 --> 00:46:27,950
B's and once you have you can't undo it

00:46:24,110 --> 00:46:28,850
so I'm just like I feel like this is one

00:46:27,950 --> 00:46:30,560
of those things that's gonna kind of

00:46:28,850 --> 00:46:32,870
infect everything and you're going to

00:46:30,560 --> 00:46:34,010
have this very static sort of template

00:46:32,870 --> 00:46:36,200
thing where I have to kind of template

00:46:34,010 --> 00:46:38,770
all out the ammo kind of offline first

00:46:36,200 --> 00:46:41,120
that doesn't lead to a very dynamic

00:46:38,770 --> 00:46:47,180
system in the way that C IDs and

00:46:41,120 --> 00:47:00,650
conflict maps - yeah completely agree

00:46:47,180 --> 00:47:03,560
there so the the main distribution the

00:47:00,650 --> 00:47:05,840
people the kind of primary members of

00:47:03,560 --> 00:47:07,700
the foundation is there a sense I'm

00:47:05,840 --> 00:47:10,280
guessing maybe probably not on the for

00:47:07,700 --> 00:47:12,700
the people on this call but the tension

00:47:10,280 --> 00:47:15,500
between getting stuff done quickly and

00:47:12,700 --> 00:47:18,320
getting wider spread adoption and

00:47:15,500 --> 00:47:21,380
engagement from the CN CF ecosystem

00:47:18,320 --> 00:47:23,750
developers there's a tension between

00:47:21,380 --> 00:47:27,260
those suit like you could use all of the

00:47:23,750 --> 00:47:29,450
k14 stalling now neighbor all you selves

00:47:27,260 --> 00:47:29,900
to go quickly to be able to get chef

00:47:29,450 --> 00:47:31,850
Achatz

00:47:29,900 --> 00:47:35,360
out getting in the hands customers that

00:47:31,850 --> 00:47:37,460
you already have that's gonna as people

00:47:35,360 --> 00:47:38,780
have mentioned alienate folks that kind

00:47:37,460 --> 00:47:40,040
of come into the ecosystem

00:47:38,780 --> 00:47:41,540
what's all this weird tooling that we've

00:47:40,040 --> 00:47:44,990
never seen before and it will be like

00:47:41,540 --> 00:47:46,430
Bosch all over again the alternative is

00:47:44,990 --> 00:47:48,650
you don't use any of that tooling that

00:47:46,430 --> 00:47:50,090
helps you go faster and then there are

00:47:48,650 --> 00:47:51,359
commercial implications from that but

00:47:50,090 --> 00:47:54,029
you get wider

00:47:51,359 --> 00:48:00,059
a kind of engagement possibly from the

00:47:54,029 --> 00:48:03,150
cubes ecosystem do does anyone think it

00:48:00,059 --> 00:48:05,579
will be possible to kind of come to a

00:48:03,150 --> 00:48:07,910
collective understanding of where on

00:48:05,579 --> 00:48:10,170
that spectrum the community wishes to go

00:48:07,910 --> 00:48:13,259
for example you could make that more

00:48:10,170 --> 00:48:15,990
concrete by saying when something is GA

00:48:13,259 --> 00:48:17,460
we will have not included all of these

00:48:15,990 --> 00:48:19,319
tools like we use these tools to get

00:48:17,460 --> 00:48:21,779
going and then there will be a kind of

00:48:19,319 --> 00:48:23,700
deadline by which we decides to just be

00:48:21,779 --> 00:48:26,640
issuing native vanilla and template two

00:48:23,700 --> 00:48:28,019
cubes Hamill is that sort of thinking

00:48:26,640 --> 00:48:31,019
that might be useful and might be

00:48:28,019 --> 00:48:32,700
achievable you know I think we've been

00:48:31,019 --> 00:48:34,980
wrestling with that issue a lot around

00:48:32,700 --> 00:48:37,410
like do we adopt tools that we don't

00:48:34,980 --> 00:48:40,859
like or that have serious deficiencies

00:48:37,410 --> 00:48:45,779
but they're used or do we build tools

00:48:40,859 --> 00:48:48,480
that work and work to our standards but

00:48:45,779 --> 00:48:51,000
then go through the loop of getting

00:48:48,480 --> 00:48:58,589
adopt some of that we ship and this is

00:48:51,000 --> 00:49:00,660
like this we should yeah sorry you're

00:48:58,589 --> 00:49:07,470
breaking up there I thought you you have

00:49:00,660 --> 00:49:13,500
finished yeah yeah I did I just

00:49:07,470 --> 00:49:15,450
all right right and as we've been coming

00:49:13,500 --> 00:49:18,720
together with the M where we we know

00:49:15,450 --> 00:49:20,819
there's a lot of other opinions and

00:49:18,720 --> 00:49:22,259
firmly here about that and we're trying

00:49:20,819 --> 00:49:24,930
to chart a course through those kinds of

00:49:22,259 --> 00:49:28,799
recommendations as as we get integrated

00:49:24,930 --> 00:49:30,930
into those sets of concerns so I think

00:49:28,799 --> 00:49:33,779
there's been some Nvidia you're making a

00:49:30,930 --> 00:49:34,859
broader push for one of the K 14 schools

00:49:33,779 --> 00:49:36,990
but I wouldn't say that's

00:49:34,859 --> 00:49:38,430
hundred-percent definite yet I may be a

00:49:36,990 --> 00:49:39,960
thing that we actually like we look for

00:49:38,430 --> 00:49:43,920
feedback on you know we can't make it

00:49:39,960 --> 00:49:46,799
now and expect that to necessarily

00:49:43,920 --> 00:49:50,640
pertain even in six months it may be

00:49:46,799 --> 00:49:52,500
worth putting more muscle behind the

00:49:50,640 --> 00:49:53,789
cape or to those tools if we think that

00:49:52,500 --> 00:49:57,720
they're the right approach going into

00:49:53,789 --> 00:49:59,519
the helm is garbage you know if you want

00:49:57,720 --> 00:50:02,339
to do templating this is a better way to

00:49:59,519 --> 00:50:03,210
do it q cut will apply is unreliable

00:50:02,339 --> 00:50:06,690
like you know

00:50:03,210 --> 00:50:08,130
there's there's as as declarative as we

00:50:06,690 --> 00:50:10,140
want kubernetes to be they're still

00:50:08,130 --> 00:50:11,910
ordering dependency is there still

00:50:10,140 --> 00:50:14,310
bootstrapping that needs to happen and

00:50:11,910 --> 00:50:18,180
this is a tool that is trying to strike

00:50:14,310 --> 00:50:20,520
a better balance there so I wanted to

00:50:18,180 --> 00:50:23,430
ask if if there are deficiencies in

00:50:20,520 --> 00:50:27,060
upstream project why not try and fix

00:50:23,430 --> 00:50:31,609
those deficiencies upstream why build

00:50:27,060 --> 00:50:34,680
something new if there's a hound

00:50:31,609 --> 00:50:36,660
efficiency that you found which by the

00:50:34,680 --> 00:50:39,810
way I'm still skeptical about because if

00:50:36,660 --> 00:50:47,130
you're making components cube native

00:50:39,810 --> 00:50:48,660
helm should be should be pretty easy but

00:50:47,130 --> 00:50:52,050
anyway yeah if there are deficiencies

00:50:48,660 --> 00:50:54,450
why why not try to fix them I think

00:50:52,050 --> 00:50:58,260
actually these are a great example of

00:50:54,450 --> 00:51:00,839
this where we realize that you need they

00:50:58,260 --> 00:51:02,849
CR D to be created in the API before you

00:51:00,839 --> 00:51:05,580
can use it so there's a like fundamental

00:51:02,849 --> 00:51:08,490
sequencing issue there and there's an

00:51:05,580 --> 00:51:11,310
issue on on the pel repo for held 3

00:51:08,490 --> 00:51:13,470
saying like can you solve this issue I

00:51:11,310 --> 00:51:15,930
believe the current state of ends to say

00:51:13,470 --> 00:51:19,109
no to make a separate helm template and

00:51:15,930 --> 00:51:22,380
chart for your CR DS so they're pushing

00:51:19,109 --> 00:51:23,820
that ordering concern out of hell into

00:51:22,380 --> 00:51:26,099
the structure of any projects they're

00:51:23,820 --> 00:51:28,050
using and to be fair we we hit that like

00:51:26,099 --> 00:51:30,839
we have to actually deploy the operator

00:51:28,050 --> 00:51:35,339
before we deploy cube CF I think for

00:51:30,839 --> 00:51:37,080
that reason yeah we it as well I I think

00:51:35,339 --> 00:51:39,480
I think we're getting too deep into

00:51:37,080 --> 00:51:41,369
which template tool is best we shouldn't

00:51:39,480 --> 00:51:44,339
use any template tools like we don't

00:51:41,369 --> 00:51:47,490
need tentacles resource deployment issue

00:51:44,339 --> 00:51:48,330
I mean so you can if you've just got

00:51:47,490 --> 00:51:50,849
Yammer files

00:51:48,330 --> 00:51:54,119
it's literally - couple of light C IDs

00:51:50,849 --> 00:51:57,349
only and then coo cuff will apply the

00:51:54,119 --> 00:52:00,030
rest of the stuff so it is like anyway

00:51:57,349 --> 00:52:03,720
the thing I was going to say is there's

00:52:00,030 --> 00:52:08,010
a rule in science fiction books you only

00:52:03,720 --> 00:52:11,490
allowed one divergence from reality if

00:52:08,010 --> 00:52:13,050
you have you pick one thing that is your

00:52:11,490 --> 00:52:15,060
thing and the reader will let you get

00:52:13,050 --> 00:52:17,100
over there in this little bit if you

00:52:15,060 --> 00:52:18,780
have five and then the reason

00:52:17,100 --> 00:52:20,670
it just doesn't make sense there are no

00:52:18,780 --> 00:52:23,340
rules in this universe and it doesn't

00:52:20,670 --> 00:52:25,500
work and I think I think it's okay for

00:52:23,340 --> 00:52:27,450
us to say he is our opinion where it's

00:52:25,500 --> 00:52:29,130
difference and we just we just can't

00:52:27,450 --> 00:52:30,690
have everything be different they were

00:52:29,130 --> 00:52:34,470
already asking people to make a leap

00:52:30,690 --> 00:52:36,030
into some some areas and I think yeah

00:52:34,470 --> 00:52:38,790
you've kind of got a budget you've got a

00:52:36,030 --> 00:52:41,010
you've got a weirdness budget that

00:52:38,790 --> 00:52:43,500
you're asking people to you know take on

00:52:41,010 --> 00:52:45,920
this new cognitive load so everything

00:52:43,500 --> 00:52:51,360
has to kind of pay its cost in weirdness

00:52:45,920 --> 00:52:54,060
and I'm not I'm not convinced that ytt

00:52:51,360 --> 00:52:56,190
does that needs to begin this that's

00:52:54,060 --> 00:53:03,660
true Jules then how do you describe Ring

00:52:56,190 --> 00:53:07,650
worlds you know terry pratchett will

00:53:03,660 --> 00:53:15,930
always always be the exception to the

00:53:07,650 --> 00:53:20,750
rule just want to point out that was

00:53:15,930 --> 00:53:24,120
that was ring world not Discworld so Oh

00:53:20,750 --> 00:53:27,480
go over budget on weirdness different

00:53:24,120 --> 00:53:29,280
way well hitch hikers garden gas and

00:53:27,480 --> 00:53:31,140
yeah this is this is the difference

00:53:29,280 --> 00:53:39,630
between science fact this stiffening

00:53:31,140 --> 00:53:42,420
science fiction/fantasy yeah yeah I

00:53:39,630 --> 00:53:44,310
think I think that like scrolling back

00:53:42,420 --> 00:53:45,690
there like we were talking about is

00:53:44,310 --> 00:53:47,070
there a tension between my getting

00:53:45,690 --> 00:53:49,620
something shits and getting something

00:53:47,070 --> 00:53:51,510
that's in the right shape and to bring

00:53:49,620 --> 00:53:53,070
this back to where we started that I

00:53:51,510 --> 00:53:55,080
think is why it's good but we have this

00:53:53,070 --> 00:53:59,640
coops yet things which is here as a way

00:53:55,080 --> 00:54:03,480
to deploy cube today that works and that

00:53:59,640 --> 00:54:04,950
should give us the space to be able to

00:54:03,480 --> 00:54:07,350
also do the thing that applies to our

00:54:04,950 --> 00:54:09,290
other user which is like someone who

00:54:07,350 --> 00:54:12,120
actually cares if it's cube native

00:54:09,290 --> 00:54:17,610
anybody wants to deploy this and we've

00:54:12,120 --> 00:54:19,020
got the cube native CNCs fan who wants

00:54:17,610 --> 00:54:20,970
something that fits in with their mental

00:54:19,020 --> 00:54:25,290
model of the world and hopefully those

00:54:20,970 --> 00:54:26,790
unify over over time but they I don't

00:54:25,290 --> 00:54:29,420
think we have one thing that's going to

00:54:26,790 --> 00:54:31,280
fit both today and maybe that's okay

00:54:29,420 --> 00:54:32,750
well

00:54:31,280 --> 00:54:36,230
a question with that too though which is

00:54:32,750 --> 00:54:38,180
the overall I'd say experience and

00:54:36,230 --> 00:54:41,089
product direction of Cloud Foundry in

00:54:38,180 --> 00:54:43,690
general in terms of kubernetes because

00:54:41,089 --> 00:54:46,099
if we look at CF as it is now is

00:54:43,690 --> 00:54:48,079
definitely an appliance that is

00:54:46,099 --> 00:54:51,410
installed onto a crepinette YZ cluster

00:54:48,079 --> 00:54:54,230
it does not have you know custom

00:54:51,410 --> 00:54:56,599
resource API it does not write you know

00:54:54,230 --> 00:54:58,730
from the application containers you're

00:54:56,599 --> 00:55:01,750
not able to hit the kits API other

00:54:58,730 --> 00:55:04,190
things like that so in terms of a

00:55:01,750 --> 00:55:06,920
customer who wants a kubernetes native

00:55:04,190 --> 00:55:09,349
experience regardless of our template

00:55:06,920 --> 00:55:11,839
incurring distribution it's not going to

00:55:09,349 --> 00:55:14,140
be kubernetes native so if that is who

00:55:11,839 --> 00:55:19,220
we are targeting with our distribution

00:55:14,140 --> 00:55:21,290
decisions we're not only not going to

00:55:19,220 --> 00:55:22,490
succeed with that customer segment but

00:55:21,290 --> 00:55:25,490
we're also going to have a less

00:55:22,490 --> 00:55:27,800
expressive experience for our own needs

00:55:25,490 --> 00:55:29,329
in our own installation so I think we

00:55:27,800 --> 00:55:31,250
also need to figure out who are we

00:55:29,329 --> 00:55:34,210
actually targeting with that if we are

00:55:31,250 --> 00:55:39,380
going to take it to that sort of CN CF

00:55:34,210 --> 00:55:40,730
portfolio extreme so I did this for what

00:55:39,380 --> 00:55:42,650
it's worth is long means I've been

00:55:40,730 --> 00:55:44,900
pushing on on that thing of we should

00:55:42,650 --> 00:55:47,690
all be using CF to deploy CF or at least

00:55:44,900 --> 00:55:50,180
using something a CF light because we

00:55:47,690 --> 00:55:52,730
need to figure out what are one of the

00:55:50,180 --> 00:55:54,890
the ways the CF expose itself needs to

00:55:52,730 --> 00:55:56,960
change so that we maintain this

00:55:54,890 --> 00:56:00,050
simplicity of CF and the things we like

00:55:56,960 --> 00:56:02,150
about it but it does start to feel more

00:56:00,050 --> 00:56:05,089
native to fit in with everything else

00:56:02,150 --> 00:56:06,800
because unless we're unless it's going

00:56:05,089 --> 00:56:10,220
to be a world where people only use CF

00:56:06,800 --> 00:56:11,450
where they only put 12 factor apps it's

00:56:10,220 --> 00:56:12,680
going to need to fit in with everything

00:56:11,450 --> 00:56:16,339
else and everything else is moving in

00:56:12,680 --> 00:56:17,480
that direction so we need the the the

00:56:16,339 --> 00:56:20,060
fact that it's gonna run on top of

00:56:17,480 --> 00:56:22,730
kubernetes in my view is necessary and

00:56:20,060 --> 00:56:24,020
not sufficient we also need to use the

00:56:22,730 --> 00:56:25,550
fact that we we no longer have to spend

00:56:24,020 --> 00:56:28,430
effort writing our own scheduler right

00:56:25,550 --> 00:56:31,640
we need to use that to evolve the UX as

00:56:28,430 --> 00:56:34,010
well to be more native and there should

00:56:31,640 --> 00:56:36,170
be more CR D's in there if you want them

00:56:34,010 --> 00:56:39,170
right there should be escape actors if

00:56:36,170 --> 00:56:40,369
you want them and we need to start one

00:56:39,170 --> 00:56:42,800
of the reasons I don't want us to go

00:56:40,369 --> 00:56:45,050
straight to cube CF is we all need to

00:56:42,800 --> 00:56:48,230
like figure out what are the gaps

00:56:45,050 --> 00:56:49,400
what doesn't doesn't work on what of it

00:56:48,230 --> 00:56:50,660
one of the things we wants you have to

00:56:49,400 --> 00:56:55,790
do one of the things where it should be

00:56:50,660 --> 00:56:58,730
more likely the nettings etc yeah we I

00:56:55,790 --> 00:57:01,280
don't disagree with with with with your

00:56:58,730 --> 00:57:04,910
statement right now CF doesn't feel cube

00:57:01,280 --> 00:57:06,790
negative in itself but I I mean I feel

00:57:04,910 --> 00:57:10,520
like that has to change

00:57:06,790 --> 00:57:15,500
hey folks so looking at the time I think

00:57:10,520 --> 00:57:20,150
one minute past scheduled timing I feel

00:57:15,500 --> 00:57:22,580
like we then kind of started discussing

00:57:20,150 --> 00:57:24,560
a couple of items that kind of hopefully

00:57:22,580 --> 00:57:28,160
make it them to the proposal list for

00:57:24,560 --> 00:57:29,900
for next time so I'm going to open on

00:57:28,160 --> 00:57:32,180
the voting then for for next time a

00:57:29,900 --> 00:57:36,230
couple of days before the meeting and as

00:57:32,180 --> 00:57:39,530
always tools be prepared to be called in

00:57:36,230 --> 00:57:41,930
for ireenie 1.0 demo because that's one

00:57:39,530 --> 00:57:44,930
of the few items that I think we haven't

00:57:41,930 --> 00:57:47,740
ticked off so far and very ready

00:57:44,930 --> 00:57:47,740
prepared for anything

00:57:50,350 --> 00:57:57,280

YouTube URL: https://www.youtube.com/watch?v=lyEbXXRco0s


