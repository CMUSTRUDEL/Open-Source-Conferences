Title: Getting out of First Gear, Renault-Nissan Mitsubishi Alliance A-CMS Journey with Cloud Foundry
Publication date: 2018-10-10
Playlist: Cloud Foundry Summit Europe 2018
Description: 
	Getting out of First Gear, Renault-Nissan Mitsubishi Alliance A-CMS Journey with Cloud Foundry -
Lakshman Diwaakar (LD), Renault-Nissan-Mitsubishi Alliance & Didier Burkhalter, Pivotal

Within the Renault Nissan Mitsubishi Alliance, A-CMS is developing the Alliance Connected Cloud, which will enable us to connect future, current and past connected vehicles onto the same platform
In less than a year, our A-CMS organization has embraced Cloud Native development, analytics and deployment at scale with bold moves combining acquisitions of engineering specialists and strategic partnership such as with Microsoft. Adopting Cloud Foundry was one big bet as well.
Come hear about our journey across France and Japan and how we leveraged and expanded the specifics of Pivotal Cloud Foundry, Concourse and Azure to implement our architecture with secure-first, global-ready and automate-everything core goals in our design.

https://cfseu18.sched.com/event/FRz6/getting-out-of-first-gear-renault-nissan-mitsubishi-alliance-a-cms-journey-with-cloud-foundry-lakshman-diwaakar-ld-renault-nissan-mitsubishi-alliance-didier-burkhalter-pivotal
Captions: 
	00:00:00,000 --> 00:00:07,950
all right thank you all for coming this

00:00:03,510 --> 00:00:10,830
should be fun it is really an honor to

00:00:07,950 --> 00:00:12,990
be here my talk is titled getting out of

00:00:10,830 --> 00:00:16,470
first gear Renault Nissan Mitsubishi's

00:00:12,990 --> 00:00:17,789
journey with pol Cloud Foundry quick

00:00:16,470 --> 00:00:20,070
word about myself

00:00:17,789 --> 00:00:22,830
I'm lux Amanda Walker everyone calls me

00:00:20,070 --> 00:00:25,500
LD working as a platform architect at

00:00:22,830 --> 00:00:28,710
the Alliance appear on stage with me as

00:00:25,500 --> 00:00:30,840
DDS on yes hello hello everybody I'm de

00:00:28,710 --> 00:00:32,880
la cultura some working as what we call

00:00:30,840 --> 00:00:35,430
platform ik architect at pivotal and

00:00:32,880 --> 00:00:38,190
working closely with the Hanoi Nissan

00:00:35,430 --> 00:00:41,190
team for a while now so happy to be

00:00:38,190 --> 00:00:46,710
there on stage having I mean this Touhey

00:00:41,190 --> 00:00:48,570
I describe for you thank you a bit of

00:00:46,710 --> 00:00:50,640
context before we move into our journey

00:00:48,570 --> 00:00:53,250
with the Cloud Foundry Renault Nissan

00:00:50,640 --> 00:00:55,410
Mitsubishi is a franco japanese

00:00:53,250 --> 00:00:57,180
strategic partnership between the

00:00:55,410 --> 00:00:59,219
automobile manufacturer Renault from

00:00:57,180 --> 00:01:01,199
France and Nissan and Mitsubishi from

00:00:59,219 --> 00:01:03,750
Japan we are the world's largest

00:01:01,199 --> 00:01:06,479
Automotive Group and a global leader

00:01:03,750 --> 00:01:08,909
when it comes to electric vehicles last

00:01:06,479 --> 00:01:11,840
year one out of nine vehicles sold

00:01:08,909 --> 00:01:14,640
worldwide whereby the Alliance

00:01:11,840 --> 00:01:16,820
under the Alliance I work for the

00:01:14,640 --> 00:01:19,380
connected vehicles Department a

00:01:16,820 --> 00:01:22,860
connected car is basically a car that is

00:01:19,380 --> 00:01:24,540
a cubed with the internet axis under the

00:01:22,860 --> 00:01:26,400
department we actually focus on the

00:01:24,540 --> 00:01:29,009
following categories we provide

00:01:26,400 --> 00:01:32,490
emergency calls provide better routes

00:01:29,009 --> 00:01:35,880
and an enjoyable journey discover the

00:01:32,490 --> 00:01:38,670
new ways to travel enhance the safety

00:01:35,880 --> 00:01:40,740
and security of the car we actually

00:01:38,670 --> 00:01:41,220
calculate the car insurance based on how

00:01:40,740 --> 00:01:44,520
you drive

00:01:41,220 --> 00:01:46,680
and finally the remote services where

00:01:44,520 --> 00:01:52,530
you can use your mobile app to remotely

00:01:46,680 --> 00:01:55,049
invoke functions in the car and this is

00:01:52,530 --> 00:01:56,969
a very high-level overview of the

00:01:55,049 --> 00:01:59,280
connected cloud which is powered by the

00:01:56,969 --> 00:02:01,350
puerile Cloud Foundry as you can see

00:01:59,280 --> 00:02:04,049
there the module within the car is

00:02:01,350 --> 00:02:06,030
connected to the cloud and all the three

00:02:04,049 --> 00:02:09,869
companies of the Alliance consume this

00:02:06,030 --> 00:02:11,550
cloud and also it's b2b partners and the

00:02:09,869 --> 00:02:13,230
back-end applications of the mobile app

00:02:11,550 --> 00:02:13,830
and various other interesting

00:02:13,230 --> 00:02:18,330
application

00:02:13,830 --> 00:02:20,280
are deployed on this connected Club here

00:02:18,330 --> 00:02:21,930
are some of the prediction applications

00:02:20,280 --> 00:02:25,050
that are running on the cloud foundry on

00:02:21,930 --> 00:02:29,010
the left is a Nissan Leaf which is the

00:02:25,050 --> 00:02:31,830
best-selling electric car and on the top

00:02:29,010 --> 00:02:34,530
right is a mobile app which makes it

00:02:31,830 --> 00:02:36,780
easy to remotely start your car or other

00:02:34,530 --> 00:02:38,820
vehicle functions like turning on your

00:02:36,780 --> 00:02:42,750
air condition checking the battery

00:02:38,820 --> 00:02:45,150
status we also have an Alexa skill that

00:02:42,750 --> 00:02:51,330
allows you to use your voice to remotely

00:02:45,150 --> 00:02:53,040
invoke functions in your car at the RN

00:02:51,330 --> 00:02:54,810
emmalin's they've been running pure

00:02:53,040 --> 00:02:55,970
Cloud Foundry for about one and a half

00:02:54,810 --> 00:02:58,110
years now

00:02:55,970 --> 00:02:58,650
people here would have heard about the

00:02:58,110 --> 00:03:02,190
2pz

00:02:58,650 --> 00:03:03,990
team rule by Jeff Bezos any team that is

00:03:02,190 --> 00:03:06,630
solving a problem should be fed by two

00:03:03,990 --> 00:03:09,270
pieces of the lunch that is about six to

00:03:06,630 --> 00:03:11,910
eight people in a team having said we

00:03:09,270 --> 00:03:14,910
are a one and a half piece a team my

00:03:11,910 --> 00:03:16,920
colleagues my manager Fukuda Sun and

00:03:14,910 --> 00:03:18,840
Lotfi are here in the room and we are

00:03:16,920 --> 00:03:21,540
actually split into two regions a Paris

00:03:18,840 --> 00:03:25,920
and Tokyo and we still have room for

00:03:21,540 --> 00:03:28,050
awesome people we have seven foundations

00:03:25,920 --> 00:03:29,820
that span across three regions in the

00:03:28,050 --> 00:03:31,739
world and we have hundred less

00:03:29,820 --> 00:03:34,800
developers that innovate on a platform

00:03:31,739 --> 00:03:38,220
and a bunch of applications related to

00:03:34,800 --> 00:03:40,080
connected services are deployed but all

00:03:38,220 --> 00:03:41,310
these one and half years were not as

00:03:40,080 --> 00:03:43,590
easy as it looks

00:03:41,310 --> 00:03:45,959
there were days where we would walk in

00:03:43,590 --> 00:03:48,780
and look at each other and say what we

00:03:45,959 --> 00:03:51,989
were thinking so this is a compilation

00:03:48,780 --> 00:03:55,380
of lessons we learn in running peril

00:03:51,989 --> 00:03:57,150
called foundry so this will be useful

00:03:55,380 --> 00:03:58,890
for people who are looking to start on

00:03:57,150 --> 00:04:00,830
cloud foundry or people who might

00:03:58,890 --> 00:04:04,110
already be running cloud foundry and

00:04:00,830 --> 00:04:06,590
today I present to you our journey with

00:04:04,110 --> 00:04:06,590
the cloud foundry

00:04:06,620 --> 00:04:12,600
we know that the cloud foundry community

00:04:09,600 --> 00:04:14,820
is obsessed with this 12 fact rap and

00:04:12,600 --> 00:04:16,859
DDS and here in the States came up with

00:04:14,820 --> 00:04:20,370
this idea that let's explain the journey

00:04:16,859 --> 00:04:22,919
in 12 steps and being in the car

00:04:20,370 --> 00:04:26,539
industry I thought let's explain these

00:04:22,919 --> 00:04:26,539
twelve steps as the road trip

00:04:26,930 --> 00:04:31,280
like every journey we also face the

00:04:29,270 --> 00:04:34,130
hardships and I've represented these

00:04:31,280 --> 00:04:37,640
hardships as of rocks here so that you

00:04:34,130 --> 00:04:40,700
don't have to repeat it and with that I

00:04:37,640 --> 00:04:41,840
hand over it to the DDS on okay thanks

00:04:40,700 --> 00:04:49,040
thanks LD son

00:04:41,840 --> 00:04:53,090
so first step is the discovery discovery

00:04:49,040 --> 00:04:57,470
fried face so the team started I would

00:04:53,090 --> 00:05:00,440
say two years ago and having no no team

00:04:57,470 --> 00:05:04,280
having no platform so the head of the

00:05:00,440 --> 00:05:07,100
the team at this time had to choose a I

00:05:04,280 --> 00:05:10,130
mean a partner that it that is being

00:05:07,100 --> 00:05:13,460
able to help this new team - I mean to

00:05:10,130 --> 00:05:16,310
build to build this platform so having a

00:05:13,460 --> 00:05:19,100
partner that has a worldwide coverage

00:05:16,310 --> 00:05:21,560
and having also an expertise and

00:05:19,100 --> 00:05:25,250
references in the in the in the

00:05:21,560 --> 00:05:30,620
automotive market so it it was it was at

00:05:25,250 --> 00:05:33,920
it's still pivotal and also - I mean -

00:05:30,620 --> 00:05:36,980
to bring this market to life there is

00:05:33,920 --> 00:05:38,750
some criteria that the the solution a

00:05:36,980 --> 00:05:41,870
chosen at this time had to have to

00:05:38,750 --> 00:05:45,710
provide it's a poly god polyglot

00:05:41,870 --> 00:05:48,320
platform so polyglot means providing the

00:05:45,710 --> 00:05:53,900
the capacity to an unbeatable cloud so

00:05:48,320 --> 00:05:57,380
major cloud so major is like a whe CP or

00:05:53,900 --> 00:06:00,320
zero having the capacity to provide

00:05:57,380 --> 00:06:05,600
Liberty to developers with multiple type

00:06:00,320 --> 00:06:08,390
of languages what we call the having the

00:06:05,600 --> 00:06:12,950
support with with build packs and also

00:06:08,390 --> 00:06:16,520
with the the fact that the cloud foundry

00:06:12,950 --> 00:06:19,070
is an open source solution and providing

00:06:16,520 --> 00:06:21,530
multiple layers of abstraction not

00:06:19,070 --> 00:06:23,630
having this kind of you know land level

00:06:21,530 --> 00:06:31,490
when they are working

00:06:23,630 --> 00:06:34,040
come constraints after you have chosen

00:06:31,490 --> 00:06:36,500
the solution have after you have chosen

00:06:34,040 --> 00:06:41,560
the partner you have I mean to do

00:06:36,500 --> 00:06:45,890
installation so there is a small

00:06:41,560 --> 00:06:49,600
roadblock but I would say installation

00:06:45,890 --> 00:06:56,360
is always easy or should be always easy

00:06:49,600 --> 00:06:59,020
so we decided to to onboard the the

00:06:56,360 --> 00:07:01,910
developer team so provide the better

00:06:59,020 --> 00:07:04,910
developer experience and boarding the

00:07:01,910 --> 00:07:08,960
team on PWS what is the public solution

00:07:04,910 --> 00:07:11,980
from from pivotal then we started to

00:07:08,960 --> 00:07:16,250
install the solution on the azure

00:07:11,980 --> 00:07:19,430
Russell Group from from from a CMS from

00:07:16,250 --> 00:07:22,910
foreign unison and we did of course a

00:07:19,430 --> 00:07:29,420
lot I mean a lot of manual installation

00:07:22,910 --> 00:07:32,450
we are using the cloud CLI and we were

00:07:29,420 --> 00:07:34,790
also using for example templates but it

00:07:32,450 --> 00:07:37,730
appears that this kind of installation

00:07:34,790 --> 00:07:40,790
and update and upgrade of the platform

00:07:37,730 --> 00:07:43,310
was very time time-consuming so it took

00:07:40,790 --> 00:07:47,450
at least for about two to three days to

00:07:43,310 --> 00:07:50,180
have a complete installation so this was

00:07:47,450 --> 00:07:53,170
not sustainable for for the team so we

00:07:50,180 --> 00:07:57,320
decided to go to some very automated

00:07:53,170 --> 00:07:59,690
solution to to be able to deploy the

00:07:57,320 --> 00:08:04,970
same solution across multiple multiple

00:07:59,690 --> 00:08:07,490
jails and for having less snowflakes and

00:08:04,970 --> 00:08:10,730
having better efficiency and from the

00:08:07,490 --> 00:08:13,490
operation point of view and Al design

00:08:10,730 --> 00:08:16,100
will come back on the dis automation I

00:08:13,490 --> 00:08:23,540
mean capacities and practices good

00:08:16,100 --> 00:08:25,970
practices yeah I hand over to mr. Edison

00:08:23,540 --> 00:08:31,040
thank you thank you really a sign and

00:08:25,970 --> 00:08:33,050
the next one is practice a child we are

00:08:31,040 --> 00:08:35,360
a single team but split geographically

00:08:33,050 --> 00:08:37,020
into two different time zones agile and

00:08:35,360 --> 00:08:40,020
the virtual tools are the things that

00:08:37,020 --> 00:08:42,320
unites us so most of angel ceremonies

00:08:40,020 --> 00:08:44,670
were adopted from the pivotal dojo as

00:08:42,320 --> 00:08:46,380
dominant Rohit's here in the room said

00:08:44,670 --> 00:08:48,900
that it's not the technology problem

00:08:46,380 --> 00:08:50,820
that's a solved problem so the problem

00:08:48,900 --> 00:08:55,020
is the process of developing a product

00:08:50,820 --> 00:08:57,060
and that's completely true dojo is an

00:08:55,020 --> 00:08:59,310
onboarding program where a pivotal

00:08:57,060 --> 00:09:01,800
engineers spar with you to help install

00:08:59,310 --> 00:09:03,690
and educate the platform and that's

00:09:01,800 --> 00:09:07,110
where we learned the art of power

00:09:03,690 --> 00:09:09,870
programming and we try to pair as often

00:09:07,110 --> 00:09:12,750
as possible so that which increases the

00:09:09,870 --> 00:09:15,600
team velocity and reduce the break and

00:09:12,750 --> 00:09:16,950
breaks the knowledge silos one of the

00:09:15,600 --> 00:09:20,010
important parts of the product

00:09:16,950 --> 00:09:22,320
development is the feedback user

00:09:20,010 --> 00:09:24,360
interviews were helpful to actually

00:09:22,320 --> 00:09:27,390
understand the pain points of developers

00:09:24,360 --> 00:09:28,950
the feedbacks and the suggestions and we

00:09:27,390 --> 00:09:31,520
need to use those feedbacks to

00:09:28,950 --> 00:09:34,170
prioritize or backlogs

00:09:31,520 --> 00:09:36,410
everyone in the team is always excited

00:09:34,170 --> 00:09:39,780
about one event which is retrospective

00:09:36,410 --> 00:09:42,810
this is really a fun event and it helps

00:09:39,780 --> 00:09:44,640
to keep the team more transparent and we

00:09:42,810 --> 00:09:49,650
are really excited to have our second

00:09:44,640 --> 00:09:54,270
dojo right after the summit so the next

00:09:49,650 --> 00:09:56,490
to end is start small if you're a small

00:09:54,270 --> 00:09:59,520
team like us you might not have the

00:09:56,490 --> 00:10:01,440
experience and the resources to manage

00:09:59,520 --> 00:10:05,310
both the application service and the

00:10:01,440 --> 00:10:09,420
data service like the Redis RabbitMQ and

00:10:05,310 --> 00:10:11,490
the other services so it is very

00:10:09,420 --> 00:10:14,220
difficult to start and juggle all the

00:10:11,490 --> 00:10:18,030
problems at the once it is better to

00:10:14,220 --> 00:10:19,650
start small and slowly expand earlier in

00:10:18,030 --> 00:10:21,450
the talk I was telling you that we were

00:10:19,650 --> 00:10:23,100
running portal called foundry and the

00:10:21,450 --> 00:10:24,840
great thing about pivotal is that they

00:10:23,100 --> 00:10:28,320
have great data services that integrate

00:10:24,840 --> 00:10:30,390
with the platform and we hope at one

00:10:28,320 --> 00:10:32,130
point of time the future we'll build our

00:10:30,390 --> 00:10:41,370
own service and integrate that to the

00:10:32,130 --> 00:10:43,500
platform the open even before we had our

00:10:41,370 --> 00:10:46,940
stable platform we actually introduced

00:10:43,500 --> 00:10:49,380
pivotal web services to the developers

00:10:46,940 --> 00:10:50,970
the connected service department is a

00:10:49,380 --> 00:10:52,800
brand new under the Alliance

00:10:50,970 --> 00:10:54,990
and once that we have decided to use

00:10:52,800 --> 00:10:57,269
Cloud Foundry we actually introduced a

00:10:54,990 --> 00:10:59,220
pure web service to the developers while

00:10:57,269 --> 00:11:01,139
the developers get accustomed to the

00:10:59,220 --> 00:11:02,579
cloud foundry environment we were

00:11:01,139 --> 00:11:05,939
working on and building our own

00:11:02,579 --> 00:11:08,670
foundation this was a pretty good move

00:11:05,939 --> 00:11:10,829
as we took around one to two month to

00:11:08,670 --> 00:11:13,860
bootstrap our own foundation and on both

00:11:10,829 --> 00:11:16,259
the developers and this concept apply

00:11:13,860 --> 00:11:18,420
same to the new data service when

00:11:16,259 --> 00:11:20,879
developers request you a new data

00:11:18,420 --> 00:11:23,790
service try to deploy a Minimum Viable

00:11:20,879 --> 00:11:26,100
version of that allow the developers to

00:11:23,790 --> 00:11:28,110
play with it and collect weekly or

00:11:26,100 --> 00:11:30,120
bi-weekly feedbacks and use those

00:11:28,110 --> 00:11:31,459
feedbacks to prioritize the features and

00:11:30,120 --> 00:11:34,379
improve it

00:11:31,459 --> 00:11:38,300
trust me this really saves time both for

00:11:34,379 --> 00:11:38,300
platform operators and the developers

00:11:39,379 --> 00:11:44,329
bridging the gap this was a hard lesson

00:11:44,389 --> 00:11:49,920
so we soon realized that developers were

00:11:47,819 --> 00:11:52,980
not completely leveraging the platform

00:11:49,920 --> 00:11:54,870
and the services and we found that

00:11:52,980 --> 00:11:58,079
updating the documentation is not

00:11:54,870 --> 00:12:00,059
solving the problem so we try to

00:11:58,079 --> 00:12:02,040
organize some meetings where some

00:12:00,059 --> 00:12:03,569
developers showed up but may needn't

00:12:02,040 --> 00:12:06,389
because they are different priorities

00:12:03,569 --> 00:12:08,579
and we try to organize something called

00:12:06,389 --> 00:12:10,860
lunch-and-learn where we offered free

00:12:08,579 --> 00:12:13,649
lunch to encourage attendance and

00:12:10,860 --> 00:12:15,389
involvement to the surprise many

00:12:13,649 --> 00:12:18,300
attendees turned out when compared to

00:12:15,389 --> 00:12:20,790
the previous meetings in fact this was

00:12:18,300 --> 00:12:22,980
introduced as part of the dojo and from

00:12:20,790 --> 00:12:25,050
that we try to organize at least one

00:12:22,980 --> 00:12:26,699
lunch and learn per month where we

00:12:25,050 --> 00:12:31,199
actually discuss about the platform

00:12:26,699 --> 00:12:32,819
updates and do some demos and earlier in

00:12:31,199 --> 00:12:34,980
the talk I told you that we were a small

00:12:32,819 --> 00:12:37,740
team and developers were expanding

00:12:34,980 --> 00:12:40,259
rapidly new teams like integration and

00:12:37,740 --> 00:12:42,509
testing started to appear and they used

00:12:40,259 --> 00:12:45,449
cloud foundry but many then knew the

00:12:42,509 --> 00:12:48,439
team behind the platform so that was the

00:12:45,449 --> 00:12:51,480
time they decided to brand our own team

00:12:48,439 --> 00:12:53,610
this happened at the dojo and everyone

00:12:51,480 --> 00:12:55,800
came up with interesting names but

00:12:53,610 --> 00:12:58,139
finally we settled with Kinjo which

00:12:55,800 --> 00:13:00,540
means that CEM alone which is our cloud

00:12:58,139 --> 00:13:02,550
platform and all the platform engineers

00:13:00,540 --> 00:13:03,890
had considered ninjas and that's why we

00:13:02,550 --> 00:13:06,350
have Kinjo

00:13:03,890 --> 00:13:09,800
so we started wearing t-shirts like this

00:13:06,350 --> 00:13:12,200
and changing our logos in the slack so

00:13:09,800 --> 00:13:14,149
people started noticing us so they were

00:13:12,200 --> 00:13:16,519
asking what is the skin job what is this

00:13:14,149 --> 00:13:19,730
new swag so we definitely got some

00:13:16,519 --> 00:13:22,250
traction there and moving on to the

00:13:19,730 --> 00:13:25,370
communication communication and

00:13:22,250 --> 00:13:27,320
Enterprise is terrible isn't it so slack

00:13:25,370 --> 00:13:29,779
is our main mode of communication which

00:13:27,320 --> 00:13:32,720
is very quick and efficient to answer

00:13:29,779 --> 00:13:34,760
the questions so we had our own slot

00:13:32,720 --> 00:13:36,890
channels where developers post the

00:13:34,760 --> 00:13:41,740
questions and we try to answer as fast

00:13:36,890 --> 00:13:45,500
as possible moving on to the next one

00:13:41,740 --> 00:13:48,920
automate the platform this is my

00:13:45,500 --> 00:13:51,170
favorite topic when it comes to the

00:13:48,920 --> 00:13:53,839
platform we need to completely remove

00:13:51,170 --> 00:13:57,200
all the manual tasks and make it 100%

00:13:53,839 --> 00:14:02,110
automated the sequence starts at the

00:13:57,200 --> 00:14:04,339
pivotal network any updates or patches

00:14:02,110 --> 00:14:08,180
comes to the pivotal network which

00:14:04,339 --> 00:14:09,769
triggers the whole update initially the

00:14:08,180 --> 00:14:11,750
update is applied to the sandbox

00:14:09,769 --> 00:14:14,600
foundation which is in the Europe and

00:14:11,750 --> 00:14:18,079
our automated smoke test kicks in and

00:14:14,600 --> 00:14:20,120
which tests a complete platform and if

00:14:18,079 --> 00:14:22,490
the smoke test passes it is then applied

00:14:20,120 --> 00:14:26,240
to the staging foundations which is in

00:14:22,490 --> 00:14:27,980
different regions and then only if the

00:14:26,240 --> 00:14:30,260
smoking tests a smoke test of the

00:14:27,980 --> 00:14:32,839
staging passes it is actually applied to

00:14:30,260 --> 00:14:35,660
the production foundations so you can

00:14:32,839 --> 00:14:38,029
see that the updates are applied to the

00:14:35,660 --> 00:14:40,579
prediction foundation only after two

00:14:38,029 --> 00:14:42,620
layers of testing so this makes sure

00:14:40,579 --> 00:14:45,110
that the updates does not break the

00:14:42,620 --> 00:14:48,290
foundation and this is the success

00:14:45,110 --> 00:14:52,370
scenario and what happens when it fails

00:14:48,290 --> 00:14:54,800
so it fails so there is something wrong

00:14:52,370 --> 00:14:56,890
in the pipeline and have you been

00:14:54,800 --> 00:15:02,029
drinking

00:14:56,890 --> 00:15:05,360
hardly now we don't drink at Japan so

00:15:02,029 --> 00:15:06,980
there comes the platform operator I wish

00:15:05,360 --> 00:15:11,240
and that cool like the guy over there

00:15:06,980 --> 00:15:13,459
but that's not me this is me and I go

00:15:11,240 --> 00:15:16,819
fix the pipeline and the cycle continues

00:15:13,459 --> 00:15:19,130
and this whole automation is powered by

00:15:16,819 --> 00:15:21,199
concourse

00:15:19,130 --> 00:15:23,810
we make sure that the patches are

00:15:21,199 --> 00:15:26,959
applied to all our foundations within a

00:15:23,810 --> 00:15:29,630
day or two so this is the automated

00:15:26,959 --> 00:15:32,449
platform where we make sure that the

00:15:29,630 --> 00:15:35,839
patches reach all the foundations and we

00:15:32,449 --> 00:15:38,500
are 100% sure that it is not any

00:15:35,839 --> 00:15:44,930
technical depth is available there and

00:15:38,500 --> 00:15:48,769
moving on to the next one eliminating

00:15:44,930 --> 00:15:51,050
the toil this is becoming a buzzword in

00:15:48,769 --> 00:15:54,050
the asari world according to the Google

00:15:51,050 --> 00:15:55,910
s our ebook toil is some work that you

00:15:54,050 --> 00:15:57,920
do more than three to four times or the

00:15:55,910 --> 00:16:00,889
work that takes hearts and hearts of

00:15:57,920 --> 00:16:02,779
your day in the cloud foundry I think we

00:16:00,889 --> 00:16:06,339
have some toil like adding and removing

00:16:02,779 --> 00:16:09,290
a user managing the orcs and the spaces

00:16:06,339 --> 00:16:11,660
you'd be really working on a special

00:16:09,290 --> 00:16:13,910
feature in the platform and you'll be

00:16:11,660 --> 00:16:15,589
bugged by the developers asking you to

00:16:13,910 --> 00:16:17,600
add them to a specific space and a

00:16:15,589 --> 00:16:21,500
specific hog that was really frustrating

00:16:17,600 --> 00:16:23,810
and we came across this tool called CF

00:16:21,500 --> 00:16:26,060
management which automates the style

00:16:23,810 --> 00:16:29,480
with the help of concourse and a git

00:16:26,060 --> 00:16:31,790
repository and this not only automates

00:16:29,480 --> 00:16:34,459
the toil but we also have a single

00:16:31,790 --> 00:16:37,930
source of truth about the Ark's spaces

00:16:34,459 --> 00:16:37,930
and the developers underneath them

00:16:39,880 --> 00:16:48,649
moving on to the next to n which is

00:16:44,120 --> 00:16:53,360
hardened and secured every enterprise as

00:16:48,649 --> 00:16:56,839
a big security even we hadn't so before

00:16:53,360 --> 00:16:59,510
you launch an application the same you

00:16:56,839 --> 00:17:01,519
have to pass the security test so did we

00:16:59,510 --> 00:17:03,620
and the security team analyzed the

00:17:01,519 --> 00:17:06,439
platform did some penetration testing

00:17:03,620 --> 00:17:09,309
and created a bunch of tickets related

00:17:06,439 --> 00:17:12,140
to the security policies of the platform

00:17:09,309 --> 00:17:14,270
going through the tickets and sending

00:17:12,140 --> 00:17:16,699
messages back and forth was not

00:17:14,270 --> 00:17:19,130
efficient and this was actually delaying

00:17:16,699 --> 00:17:21,669
the release date so we realized that

00:17:19,130 --> 00:17:25,189
this setup was not working anymore and

00:17:21,669 --> 00:17:28,220
we try to create a virtual platform team

00:17:25,189 --> 00:17:30,260
with a security expert where the

00:17:28,220 --> 00:17:31,220
security expert pass with the platform

00:17:30,260 --> 00:17:33,169
engineers

00:17:31,220 --> 00:17:35,870
to actually increase and enforce the

00:17:33,169 --> 00:17:38,539
security to the platform and this

00:17:35,870 --> 00:17:41,840
virtual platform team setup was way

00:17:38,539 --> 00:17:44,240
better than the previous set up and one

00:17:41,840 --> 00:17:46,909
good takeaway is that try to involve the

00:17:44,240 --> 00:17:48,590
security team as early as possible so

00:17:46,909 --> 00:17:53,900
that you can enforce all the security

00:17:48,590 --> 00:17:58,669
policies right from the start and the

00:17:53,900 --> 00:18:00,980
next one is testing we know that the

00:17:58,669 --> 00:18:03,860
Cloud Foundry comes with a default smoke

00:18:00,980 --> 00:18:07,309
test we make sure that we run the smoke

00:18:03,860 --> 00:18:09,049
test after every updates even though the

00:18:07,309 --> 00:18:10,640
smoke test was successful we were

00:18:09,049 --> 00:18:12,740
getting compliance from the developers

00:18:10,640 --> 00:18:14,900
that they were not able to connect to a

00:18:12,740 --> 00:18:17,600
particular service or the application

00:18:14,900 --> 00:18:19,940
could not restart so when we looked into

00:18:17,600 --> 00:18:21,950
the issue we actually found that the

00:18:19,940 --> 00:18:24,380
developers were trying to connect to the

00:18:21,950 --> 00:18:25,840
service in a different way that the

00:18:24,380 --> 00:18:28,460
smoke tests were not covering for

00:18:25,840 --> 00:18:31,520
example they were trying to connect to a

00:18:28,460 --> 00:18:33,470
Redis application with this with HTTPS

00:18:31,520 --> 00:18:36,770
but the smoke test was covering only the

00:18:33,470 --> 00:18:38,330
HTTP one so we soon realized that and we

00:18:36,770 --> 00:18:40,280
looked into the application architecture

00:18:38,330 --> 00:18:43,309
and try to come up with our own smoke

00:18:40,280 --> 00:18:45,760
test and we make sure that we ran the

00:18:43,309 --> 00:18:48,230
smoke test after every update and

00:18:45,760 --> 00:18:50,090
writing the smoke test also helped us to

00:18:48,230 --> 00:18:51,760
understand the application architecture

00:18:50,090 --> 00:18:54,140
and give feedback to the developers

00:18:51,760 --> 00:18:58,250
regarding the 12 fact rap and other

00:18:54,140 --> 00:19:00,350
different policies and the next job was

00:18:58,250 --> 00:19:02,409
we were given the task to come up with

00:19:00,350 --> 00:19:05,150
the SLI senesce allows for the platform

00:19:02,409 --> 00:19:07,309
if we know that the cloud foundry is

00:19:05,150 --> 00:19:09,890
pretty robust when it is deployed in the

00:19:07,309 --> 00:19:11,510
high availability mode but we really

00:19:09,890 --> 00:19:14,900
need to test it before we come up with a

00:19:11,510 --> 00:19:17,210
value for the SLI senesce loz and we

00:19:14,900 --> 00:19:20,809
devised a chaos monkey script which

00:19:17,210 --> 00:19:22,850
randomly destroys a VM and this chaos

00:19:20,809 --> 00:19:24,799
monkey was really helpful to understand

00:19:22,850 --> 00:19:27,710
the networking bottlenecks that we had

00:19:24,799 --> 00:19:30,730
and some of the VM performance issues

00:19:27,710 --> 00:19:33,230
which will later rectified it so I

00:19:30,730 --> 00:19:34,940
highly recommend you to actually do a

00:19:33,230 --> 00:19:39,830
chaos monkey test if you want to ensure

00:19:34,940 --> 00:19:42,409
the reliability of the platform and the

00:19:39,830 --> 00:19:45,859
next one is monitoring and alerting

00:19:42,409 --> 00:19:49,710
this was a hard lesson to

00:19:45,859 --> 00:19:52,529
so the developers use PCF metrics which

00:19:49,710 --> 00:19:55,350
is a dashboard that contains all the app

00:19:52,529 --> 00:19:58,440
level metrics like the request the

00:19:55,350 --> 00:20:01,200
request errors the 4x6 errors and the

00:19:58,440 --> 00:20:03,509
five axis they also have zip khun's

00:20:01,200 --> 00:20:05,249
which we're telling them the latency

00:20:03,509 --> 00:20:07,109
between the micro-services which were

00:20:05,249 --> 00:20:10,169
very helpful for them to improve the

00:20:07,109 --> 00:20:13,440
architecture and the platform operators

00:20:10,169 --> 00:20:15,869
us we use the PC of healthwatch which is

00:20:13,440 --> 00:20:18,029
an open ADA dashboard containing all the

00:20:15,869 --> 00:20:22,049
key performance indicators of a platform

00:20:18,029 --> 00:20:25,350
and these contain metrics like the

00:20:22,049 --> 00:20:28,649
cannery app and the CF push and about

00:20:25,350 --> 00:20:31,289
the Bosh jobs since the whole Department

00:20:28,649 --> 00:20:36,359
was actually using the slack we both use

00:20:31,289 --> 00:20:38,639
slack for alerting so earlier I told you

00:20:36,359 --> 00:20:40,289
that we had seven foundations and they

00:20:38,639 --> 00:20:42,840
were about 100 KP eyes for each

00:20:40,289 --> 00:20:46,080
foundation and we started setting up the

00:20:42,840 --> 00:20:48,389
alerts for all the foundations and we

00:20:46,080 --> 00:20:51,029
soon realized that most of the alerts

00:20:48,389 --> 00:20:53,429
were actually solved by the bosch

00:20:51,029 --> 00:20:56,070
self-healing capability so we were paced

00:20:53,429 --> 00:20:57,539
by all the alerts and we soon lost the

00:20:56,070 --> 00:21:00,690
interest in actually looking at each

00:20:57,539 --> 00:21:03,119
other's and solving that and then we

00:21:00,690 --> 00:21:05,190
found out that we need to monitor only

00:21:03,119 --> 00:21:07,679
very critical alerts like the cannery

00:21:05,190 --> 00:21:09,629
app whether you can actually see f.push

00:21:07,679 --> 00:21:12,239
and whether the apps manager or ops

00:21:09,629 --> 00:21:17,549
manager is up so that's why I've quoted

00:21:12,239 --> 00:21:21,679
that less is more and then moving on to

00:21:17,549 --> 00:21:24,059
the final one which is extend and scale

00:21:21,679 --> 00:21:28,230
so this is a geographical representation

00:21:24,059 --> 00:21:31,289
of our present regions so right now we

00:21:28,230 --> 00:21:34,259
are in Japan France and also in the US

00:21:31,289 --> 00:21:35,700
in the near future and in the future we

00:21:34,259 --> 00:21:39,019
are planning to expand to different

00:21:35,700 --> 00:21:41,999
other countries like Russia India China

00:21:39,019 --> 00:21:46,710
in order to scale rapidly we need more

00:21:41,999 --> 00:21:48,749
awesome people so we are hiring if

00:21:46,710 --> 00:21:51,210
you're interested please feel free to

00:21:48,749 --> 00:21:54,809
talk with me after the talk or my

00:21:51,210 --> 00:21:56,879
colleagues who is actually in the room

00:21:54,809 --> 00:21:58,680
you can also DM me in the Twitter with

00:21:56,879 --> 00:22:01,070
that thank you so much

00:21:58,680 --> 00:22:01,070
see

00:22:03,950 --> 00:22:06,010

YouTube URL: https://www.youtube.com/watch?v=EfmDCPRMSOs


