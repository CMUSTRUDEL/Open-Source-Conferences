Title: Keynote: Service Broker Management Across Cloud Foundry and Kubernetes
Publication date: 2018-10-10
Playlist: Cloud Foundry Summit Europe 2018
Description: 
	Keynote: Service Broker Management Across Cloud Foundry and Kubernetes - Florian MuÌˆller, Technical Lead Platform Foundation & Services, SAP Cloud Platform 

The Open Service Broker API sets the standard for how a single instance of Cloud Foundry, Kubernetes, and other platforms create services instances and bind those instances to applications. But managing which services are available across multiple instances of those platforms is a challenge when there are hundreds of potential services that need to be managed across thousands of platform instances.

This demo presents the Service Manager as a central service broker registry for Cloud Foundry and Kubernetes. I will show how the registration of a service broker at the Service Manager is propagated down to a Cloud Foundry Cloud Controller and a Kubernetes Service Catalog.

https://cfseu18.sched.com/event/FW16/keynote-service-broker-management-across-cloud-foundry-and-kubernetes-florian-muller-technical-lead-platform-foundation-services-sap-cloud-platform
Captions: 
	00:00:00,030 --> 00:00:09,129
so Florian come on up and show us

00:00:03,180 --> 00:00:09,129
[Music]

00:00:33,770 --> 00:00:39,140
okay so I'm going to talk about the

00:00:37,460 --> 00:00:45,010
serviceman from what the service manager

00:00:39,140 --> 00:00:48,920
is and how we use it at sa P so we have

00:00:45,010 --> 00:00:50,810
the the simple scenario here Y Cloud

00:00:48,920 --> 00:00:53,090
Foundry is talking to a service broker

00:00:50,810 --> 00:00:56,390
right at simple that's the open service

00:00:53,090 --> 00:00:57,800
broker a API nothing special so let's

00:00:56,390 --> 00:01:00,860
add another service broker to the

00:00:57,800 --> 00:01:02,870
picture well nothing really changes is

00:01:00,860 --> 00:01:06,020
the same API it's still manageable

00:01:02,870 --> 00:01:08,900
everything is fine mmm let's add

00:01:06,020 --> 00:01:10,790
kubernetes to the picture also not a big

00:01:08,900 --> 00:01:15,410
problem because it uses the same API

00:01:10,790 --> 00:01:17,510
it's the open service broker API so the

00:01:15,410 --> 00:01:20,990
service cataloging in kubernetes can use

00:01:17,510 --> 00:01:24,260
the same brokers no problem so now let's

00:01:20,990 --> 00:01:25,820
add a few more platforms to the game so

00:01:24,260 --> 00:01:28,640
when we're talking about the SP call

00:01:25,820 --> 00:01:32,150
platform well we have thousands of

00:01:28,640 --> 00:01:36,500
kubernetes and foundry instances running

00:01:32,150 --> 00:01:38,509
so here just a few on this slide now

00:01:36,500 --> 00:01:39,190
let's add a few more service broadcasts

00:01:38,509 --> 00:01:43,750
to it

00:01:39,190 --> 00:01:48,200
well at si P we run hundreds of services

00:01:43,750 --> 00:01:50,240
now let's connect them all together it's

00:01:48,200 --> 00:01:52,100
a mess right

00:01:50,240 --> 00:01:55,160
it's not just a mess on the slide it's

00:01:52,100 --> 00:01:57,890
also a real mess in reality so we need

00:01:55,160 --> 00:02:00,619
we need to find a solution to to manage

00:01:57,890 --> 00:02:03,130
this mess and the solution that we came

00:02:00,619 --> 00:02:05,810
up with is called the service manager

00:02:03,130 --> 00:02:07,850
the service manager will become a

00:02:05,810 --> 00:02:11,780
central component of the SP call

00:02:07,850 --> 00:02:13,819
platform so platforms will be registered

00:02:11,780 --> 00:02:16,610
at the service manager and brokers will

00:02:13,819 --> 00:02:19,460
be registered as a service manager so

00:02:16,610 --> 00:02:23,330
whenever we add a new platform to the to

00:02:19,460 --> 00:02:25,220
the service to the ASAP call platform we

00:02:23,330 --> 00:02:27,620
were registered at the service manager

00:02:25,220 --> 00:02:29,870
or the service manageable now which

00:02:27,620 --> 00:02:32,000
brokers have to be registered there so

00:02:29,870 --> 00:02:33,530
the author of the service and the

00:02:32,000 --> 00:02:35,569
service broker doesn't need to know

00:02:33,530 --> 00:02:38,090
what's actually going on the service

00:02:35,569 --> 00:02:40,760
manager will have its policies and based

00:02:38,090 --> 00:02:44,090
on those policies it will decide which

00:02:40,760 --> 00:02:45,980
broker goes where the same is true for

00:02:44,090 --> 00:02:47,540
the service broker so when the service

00:02:45,980 --> 00:02:51,409
when we have a new sir

00:02:47,540 --> 00:02:53,030
Broco new service we managed we added to

00:02:51,409 --> 00:02:55,310
the service manager and the service

00:02:53,030 --> 00:02:58,340
manager will then distribute this

00:02:55,310 --> 00:03:01,430
registration to whatever platform we

00:02:58,340 --> 00:03:04,430
think it has to go on the way we can

00:03:01,430 --> 00:03:07,250
also apply policies like well the

00:03:04,430 --> 00:03:09,620
service broke up provides service ABC

00:03:07,250 --> 00:03:14,209
but this kubernetes cluster here should

00:03:09,620 --> 00:03:16,280
only see B and C so we can change the

00:03:14,209 --> 00:03:18,439
catalog can modify the catalog of the

00:03:16,280 --> 00:03:23,269
service broker on the way to the

00:03:18,439 --> 00:03:25,340
culminated cluster the nice thing about

00:03:23,269 --> 00:03:27,650
this approach is that we are using the

00:03:25,340 --> 00:03:31,730
open service broker open service broke

00:03:27,650 --> 00:03:35,480
API and we basically don't need to

00:03:31,730 --> 00:03:37,609
change anything right so we don't need

00:03:35,480 --> 00:03:39,169
to change anything in Cloud Foundry we

00:03:37,609 --> 00:03:42,590
don't need to change anything in the

00:03:39,169 --> 00:03:44,930
service couple of coordinators it's this

00:03:42,590 --> 00:03:47,569
is still the same API all the native

00:03:44,930 --> 00:03:50,359
tools are still working all user

00:03:47,569 --> 00:03:53,199
experience is the same all no

00:03:50,359 --> 00:03:56,209
application has to change it just works

00:03:53,199 --> 00:03:59,090
it's the same the same is true for the

00:03:56,209 --> 00:04:01,310
service broker we have a lot of service

00:03:59,090 --> 00:04:03,169
brokers and they probably don't need to

00:04:01,310 --> 00:04:05,120
change at all because it's the same

00:04:03,169 --> 00:04:06,769
protocol there are of course a few

00:04:05,120 --> 00:04:10,069
exceptions there are service brokers

00:04:06,769 --> 00:04:12,919
that are specifically built for Cloud

00:04:10,069 --> 00:04:15,530
Foundry or for kubernetes those of

00:04:12,919 --> 00:04:17,570
course have to adapt a bit but also this

00:04:15,530 --> 00:04:20,419
is something that we can call control

00:04:17,570 --> 00:04:22,669
via policies for example if the service

00:04:20,419 --> 00:04:25,880
broker tells us it only works really

00:04:22,669 --> 00:04:28,010
with kubernetes we only registered it a

00:04:25,880 --> 00:04:30,020
Q&A disclosure not in cloud for me and

00:04:28,010 --> 00:04:32,150
vice-versa

00:04:30,020 --> 00:04:35,120
we also get some other nice features

00:04:32,150 --> 00:04:39,680
from this architecture we can provide

00:04:35,120 --> 00:04:41,180
functionalities that span platforms one

00:04:39,680 --> 00:04:42,919
of the most important one is instant

00:04:41,180 --> 00:04:46,130
sharing across platforms one of the

00:04:42,919 --> 00:04:48,080
scenarios you create a database for a

00:04:46,130 --> 00:04:51,650
cloud foundry application and year later

00:04:48,080 --> 00:04:53,479
you need you need the same database in a

00:04:51,650 --> 00:04:56,020
kubernetes cluster this is something

00:04:53,479 --> 00:04:58,940
that we can do with the service manager

00:04:56,020 --> 00:05:00,800
transparently to the to the platforms

00:04:58,940 --> 00:05:01,320
neither cloud foundry in Norman Aegis

00:05:00,800 --> 00:05:03,870
will

00:05:01,320 --> 00:05:08,190
we'll actually identify this as

00:05:03,870 --> 00:05:09,750
something hostile or different this is

00:05:08,190 --> 00:05:13,860
completely built on the open source

00:05:09,750 --> 00:05:17,190
broker API we know that we are not the

00:05:13,860 --> 00:05:19,380
only one having this this issue because

00:05:17,190 --> 00:05:22,680
there are other providers have a lot of

00:05:19,380 --> 00:05:24,390
platforms and a lot of services and so

00:05:22,680 --> 00:05:27,390
right from the beginning we start at the

00:05:24,390 --> 00:05:31,860
service manager project as an open sort

00:05:27,390 --> 00:05:33,630
of an open source project the project is

00:05:31,860 --> 00:05:38,640
called terribly you can find it on

00:05:33,630 --> 00:05:42,540
github so parently is basically the

00:05:38,640 --> 00:05:45,510
framework for the service manager what

00:05:42,540 --> 00:05:49,110
we are doing basically is adding plugins

00:05:45,510 --> 00:05:52,290
to it so there's a plugin framework that

00:05:49,110 --> 00:05:53,970
lets you extend this the service manager

00:05:52,290 --> 00:05:56,880
framework of tile perfectly and that

00:05:53,970 --> 00:06:00,600
that's what we're doing at SA P so we

00:05:56,880 --> 00:06:02,610
are not forking our own project and then

00:06:00,600 --> 00:06:04,110
changing it to fill with with it

00:06:02,610 --> 00:06:07,080
what we are doing is we are building

00:06:04,110 --> 00:06:08,760
plug-ins for it and those plugins and

00:06:07,080 --> 00:06:11,610
implement things like the policies I

00:06:08,760 --> 00:06:13,950
talked about because policies like which

00:06:11,610 --> 00:06:17,190
broker should be registered where is

00:06:13,950 --> 00:06:19,710
something that's really specific to the

00:06:17,190 --> 00:06:21,270
environment this is not some and

00:06:19,710 --> 00:06:25,410
something that you can build an

00:06:21,270 --> 00:06:26,760
open-source project with a set of simple

00:06:25,410 --> 00:06:28,140
rules so this is really if there's

00:06:26,760 --> 00:06:32,000
really need some coding and maybe also

00:06:28,140 --> 00:06:35,430
talking back to to the platform itself

00:06:32,000 --> 00:06:38,340
so what we are doing this we are we are

00:06:35,430 --> 00:06:42,570
taking this hitting plugins to it at s

00:06:38,340 --> 00:06:46,680
AP and using it at s ap I now want to

00:06:42,570 --> 00:06:49,260
show you a little demo I will register

00:06:46,680 --> 00:06:51,810
service broker at the service manager

00:06:49,260 --> 00:06:53,550
and this service manager has a Cloud

00:06:51,810 --> 00:06:57,180
Foundry like when youth cluster attached

00:06:53,550 --> 00:06:59,700
to it it's only two platforms here but

00:06:57,180 --> 00:07:03,510
you can imagine the service manager

00:06:59,700 --> 00:07:06,030
handles hundreds of platforms right all

00:07:03,510 --> 00:07:08,730
I'm going to show you is is the open

00:07:06,030 --> 00:07:12,330
source code here so everything I'm doing

00:07:08,730 --> 00:07:14,820
here on stage you can do yourself by

00:07:12,330 --> 00:07:18,060
just taking what's on the

00:07:14,820 --> 00:07:19,580
the github project and set it up

00:07:18,060 --> 00:07:22,560
yourself

00:07:19,580 --> 00:07:29,490
there's no SI p specific code in this

00:07:22,560 --> 00:07:35,220
demo so it's a live demo so let's see

00:07:29,490 --> 00:07:40,160
what goes wrong so basically I've three

00:07:35,220 --> 00:07:42,450
windows here and it's already shifted so

00:07:40,160 --> 00:07:44,280
three winners here at the top I have the

00:07:42,450 --> 00:07:45,780
service manager window where what runs

00:07:44,280 --> 00:07:47,330
Service Manager commands there's a

00:07:45,780 --> 00:07:51,120
command line tool that I'm going to use

00:07:47,330 --> 00:07:52,680
and this red vendor here I have Cloud

00:07:51,120 --> 00:07:55,200
Foundry I use the Cloud Foundry command

00:07:52,680 --> 00:07:58,560
line tool and down here I use this

00:07:55,200 --> 00:08:03,030
service catalog command line tool so

00:07:58,560 --> 00:08:06,180
let's see as I said I've registered two

00:08:03,030 --> 00:08:08,820
platforms at the service manager that

00:08:06,180 --> 00:08:10,650
you can see here and there are no

00:08:08,820 --> 00:08:14,280
broker's registered at the moment so

00:08:10,650 --> 00:08:16,800
it's a pretty empty system so let's look

00:08:14,280 --> 00:08:18,540
at cloud family yeah yeah there so if

00:08:16,800 --> 00:08:21,000
you broke as a registered here but

00:08:18,540 --> 00:08:24,420
nothing really of interest for this demo

00:08:21,000 --> 00:08:26,790
let's try the same on kubernetes no

00:08:24,420 --> 00:08:30,630
broker's registered here so now register

00:08:26,790 --> 00:08:34,650
one I have a little currency converter

00:08:30,630 --> 00:08:38,460
service that converts currencies that i

00:08:34,650 --> 00:08:40,320
use for the demo so let's see yes it has

00:08:38,460 --> 00:08:44,099
been registered I list the brokers here

00:08:40,320 --> 00:08:45,600
let's see you can see this now on Cloud

00:08:44,099 --> 00:08:47,760
Foundry yes we can

00:08:45,600 --> 00:08:50,160
so you see here there's a note broker

00:08:47,760 --> 00:08:53,400
that starts with SM proxy that's a

00:08:50,160 --> 00:08:55,230
service mention proxy that takes the

00:08:53,400 --> 00:08:56,940
role of the original broker and we

00:08:55,230 --> 00:09:00,900
should see something similar now on

00:08:56,940 --> 00:09:03,030
kubernetes yes it's it's over here so

00:09:00,900 --> 00:09:05,670
let's use it so let's go to the

00:09:03,030 --> 00:09:10,260
marketplace now we have a currency

00:09:05,670 --> 00:09:15,300
converter service you let's create an

00:09:10,260 --> 00:09:17,070
instance create a service Keene gr RF

00:09:15,300 --> 00:09:23,460
sul password in your username

00:09:17,070 --> 00:09:25,860
oh let's use it okay good it's it's

00:09:23,460 --> 00:09:27,890
working so let's try the same that the

00:09:25,860 --> 00:09:33,360
the kubernetes

00:09:27,890 --> 00:09:36,780
here's our is our service let's create

00:09:33,360 --> 00:09:40,890
an instance of that let's create a

00:09:36,780 --> 00:09:49,230
binding of course it's the one live demo

00:09:40,890 --> 00:09:51,300
and it doesn't work but yeah you can

00:09:49,230 --> 00:09:51,900
imagine that basically the same thing it

00:09:51,300 --> 00:10:00,120
works

00:09:51,900 --> 00:10:02,250
thank you Benitez as well I was able to

00:10:00,120 --> 00:10:03,750
create an instance of the communication

00:10:02,250 --> 00:10:06,720
between the Service Catalog and

00:10:03,750 --> 00:10:09,420
kubernetes and the actual broker did

00:10:06,720 --> 00:10:13,050
work but for some reason binding didn't

00:10:09,420 --> 00:10:16,250
work I don't know I have a session about

00:10:13,050 --> 00:10:21,900
the service manager later this afternoon

00:10:16,250 --> 00:10:23,760
and I will retry this demo so if you

00:10:21,900 --> 00:10:25,740
want to know more about the service

00:10:23,760 --> 00:10:27,540
manager or more details and what we

00:10:25,740 --> 00:10:31,020
actually do it is AP with it what kind

00:10:27,540 --> 00:10:31,770
of plugins we we write and things like

00:10:31,020 --> 00:10:36,590
that

00:10:31,770 --> 00:10:36,590
I will show you there thank you

00:10:40,880 --> 00:10:42,940

YouTube URL: https://www.youtube.com/watch?v=LMwo_zgfYjU


