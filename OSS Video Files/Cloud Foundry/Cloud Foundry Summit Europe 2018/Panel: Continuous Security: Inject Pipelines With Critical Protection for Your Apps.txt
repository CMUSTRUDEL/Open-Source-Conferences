Title: Panel: Continuous Security: Inject Pipelines With Critical Protection for Your Apps
Publication date: 2018-10-10
Playlist: Cloud Foundry Summit Europe 2018
Description: 
	Panel: Continuous Security: Inject Pipelines With Critical Protection for Your Apps - Kamala Dasika, Pivotal, James Wickett, Signal Sciences, Simon Maple, Snyk, & Josh Kirkwood, CyberArk

As development teams continue to automate processes and speed up their application delivery, implementing security controls at scale to support this velocity has become a challenge for enterprises. Developers are increasingly using prebuilt open source or third-party container images, applications are being subjected to new types of attacks, and production environments need to be updated against a relentless pace of newly announced vulnerabilities.

So, how do security teams re-orient their processes to safely keep pace? How will you ensure the right privileges and access to secrets across apps? In this session, a panel of security experts will discuss best practices on how enterprises can ensure the security of their containerized applications throughout their lifecycle without negatively impacting frontline productivity.

Participants include Simon Maple, DevOps Security Lead at Snyk; Josh Kirkwood, DevOps security lead at CyberArk; and James Wickett, Head of Research at Signal Sciences. The discussion will be lead by Kamala Dasika from Pivotal Software while working in references to baking bread and CISO humor.

https://cfseu18.sched.com/event/FRyz/panel-continuous-security-inject-pipelines-with-critical-protection-for-your-apps-kamala-dasika-pivotal-james-wickett-signal-sciences-simon-maple-snyk-josh-kirkwood-cyberark
Captions: 
	00:00:00,329 --> 00:00:03,449
alright I'll go ahead and get started

00:00:01,680 --> 00:00:05,339
today

00:00:03,449 --> 00:00:07,519
good evening and welcome to this

00:00:05,339 --> 00:00:09,719
discussion on continuous security

00:00:07,519 --> 00:00:12,540
injecting your pipelines with critical

00:00:09,719 --> 00:00:14,790
protection for your applications I'm

00:00:12,540 --> 00:00:16,980
Camilla desiccant your moderator and I

00:00:14,790 --> 00:00:19,949
focus on product marketing for cloud

00:00:16,980 --> 00:00:22,260
platform and the Ivy ecosystem at

00:00:19,949 --> 00:00:24,269
pivotal which means I get to work with

00:00:22,260 --> 00:00:26,070
some really great partners that help us

00:00:24,269 --> 00:00:29,310
broaden the value of the platform

00:00:26,070 --> 00:00:31,230
offering that we have now platforms like

00:00:29,310 --> 00:00:34,800
cloud foundry just fundamentally change

00:00:31,230 --> 00:00:37,800
and speed up development we've heard a

00:00:34,800 --> 00:00:40,620
lot about this today from users all day

00:00:37,800 --> 00:00:43,320
long so as the platform evolves to

00:00:40,620 --> 00:00:45,510
support high velocity and continuous

00:00:43,320 --> 00:00:47,460
application delivery it's becoming very

00:00:45,510 --> 00:00:51,390
clear that the traditional bolt on

00:00:47,460 --> 00:00:53,969
security type of siloed security

00:00:51,390 --> 00:00:56,730
specialists just won't cut it right so

00:00:53,969 --> 00:00:58,770
we have to rethink the software supply

00:00:56,730 --> 00:01:02,120
chain completely and think about

00:00:58,770 --> 00:01:04,559
security at every step of the pipeline

00:01:02,120 --> 00:01:07,650
we have a panel of experts here today

00:01:04,559 --> 00:01:10,830
each of whom represents very different

00:01:07,650 --> 00:01:13,979
aspects of security what we're going to

00:01:10,830 --> 00:01:17,280
try to do here is get their take on how

00:01:13,979 --> 00:01:20,040
the cloud foundry ecosystem is working

00:01:17,280 --> 00:01:24,659
to rethink security so please join me in

00:01:20,040 --> 00:01:26,790
welcoming our panelists I'll start in

00:01:24,659 --> 00:01:28,140
the middle because probably not

00:01:26,790 --> 00:01:31,290
expecting it and I like to pick on

00:01:28,140 --> 00:01:34,020
people so let's start with you Josh hi

00:01:31,290 --> 00:01:35,430
I'm Josh Kirkwood I look after develop

00:01:34,020 --> 00:01:40,590
security in the UK in north Europe for

00:01:35,430 --> 00:01:41,790
cyber-ark when I look after develop

00:01:40,590 --> 00:01:47,130
security in the UK in north Europe

00:01:41,790 --> 00:01:49,680
cyber-ark hi Simon maple thanks everyone

00:01:47,130 --> 00:01:53,189
for coming I'm one of the developer

00:01:49,680 --> 00:01:55,920
advocates in snick which is a tool that

00:01:53,189 --> 00:02:00,450
helps developers adopt all the wonderful

00:01:55,920 --> 00:02:03,610
best practices of security hi I'm James

00:02:00,450 --> 00:02:04,870
wicket I work over at signal Sciences

00:02:03,610 --> 00:02:06,790
well I guess we'll talk more about what

00:02:04,870 --> 00:02:10,390
we do later but I recover there is like

00:02:06,790 --> 00:02:12,060
a developer evangelist type role perfect

00:02:10,390 --> 00:02:14,770
so let's start with our first question

00:02:12,060 --> 00:02:19,900
again with with Josh because he started

00:02:14,770 --> 00:02:21,490
as out all right perfect for you today

00:02:19,900 --> 00:02:23,860
secrets management is one of those

00:02:21,490 --> 00:02:26,320
security topics that traditionally been

00:02:23,860 --> 00:02:28,450
an afterthought in enterprises the

00:02:26,320 --> 00:02:30,850
passports are set up password just set

00:02:28,450 --> 00:02:32,320
up manually they're shared with each you

00:02:30,850 --> 00:02:35,290
know with everybody through non secure

00:02:32,320 --> 00:02:38,350
methods like email they're not rotated

00:02:35,290 --> 00:02:41,760
that L is why proper secrets management

00:02:38,350 --> 00:02:44,560
is so important in CI CD pipelines and

00:02:41,760 --> 00:02:46,890
and also maybe throw in some examples of

00:02:44,560 --> 00:02:50,590
where not having them has been an issue

00:02:46,890 --> 00:02:52,660
okay so with my security on uber 2016

00:02:50,590 --> 00:02:56,820
2014 great examples of really strong

00:02:52,660 --> 00:02:59,260
secrets management for everybody else

00:02:56,820 --> 00:03:00,910
but essentially it's something you need

00:02:59,260 --> 00:03:03,100
to deal with across the board it's a

00:03:00,910 --> 00:03:06,130
challenge that's been around for more

00:03:03,100 --> 00:03:07,510
than there's been a secret management

00:03:06,130 --> 00:03:10,930
problem since before we've been saying

00:03:07,510 --> 00:03:13,269
DevOps and essentially not doing it as a

00:03:10,930 --> 00:03:15,130
form of negligence right if you start

00:03:13,269 --> 00:03:17,380
hard-coding credentials and apps you

00:03:15,130 --> 00:03:19,420
just end up with technical debt from day

00:03:17,380 --> 00:03:21,489
one that will be there until you

00:03:19,420 --> 00:03:22,840
decommission the application if you fix

00:03:21,489 --> 00:03:24,630
from the beginning it's simple and it's

00:03:22,840 --> 00:03:27,280
done

00:03:24,630 --> 00:03:31,150
it's kind of quite simple one actually

00:03:27,280 --> 00:03:34,150
please don't hard-code credentials have

00:03:31,150 --> 00:03:37,630
you ever have you ever done a search on

00:03:34,150 --> 00:03:38,019
github for password removed or something

00:03:37,630 --> 00:03:40,090
like that

00:03:38,019 --> 00:03:42,310
my favorite is AWS secret access key

00:03:40,090 --> 00:03:45,370
would firmly recommend it about half a

00:03:42,310 --> 00:03:46,989
million results then not all keys but I

00:03:45,370 --> 00:03:49,209
can guarantee you in the last 24 hours

00:03:46,989 --> 00:03:51,190
I'll be at least 10 live ones and if you

00:03:49,209 --> 00:03:53,170
think of the guys doing that they're not

00:03:51,190 --> 00:03:54,790
technically complex enough this is an IM

00:03:53,170 --> 00:03:57,580
wrong that's going to be a root account

00:03:54,790 --> 00:03:59,050
credential they've probably joined the

00:03:57,580 --> 00:04:00,880
cryptocurrency revolution the hard way

00:03:59,050 --> 00:04:02,290
which means that they're mining a

00:04:00,880 --> 00:04:09,340
cryptocurrency now they're not getting

00:04:02,290 --> 00:04:11,560
paid for a Tesla 2018 and it's real easy

00:04:09,340 --> 00:04:13,190
for developers to you know somehow like

00:04:11,560 --> 00:04:14,660
check in you know I

00:04:13,190 --> 00:04:17,209
I've done it right you check in commits

00:04:14,660 --> 00:04:18,440
that you know have have your access key

00:04:17,209 --> 00:04:19,970
or something to know that you don't

00:04:18,440 --> 00:04:21,440
exposed and so this is where like

00:04:19,970 --> 00:04:23,000
putting tooling in place is really

00:04:21,440 --> 00:04:24,620
helpful for this right you can you can

00:04:23,000 --> 00:04:25,850
monitor they just kind of these kind of

00:04:24,620 --> 00:04:28,130
commits and kind of stop them before

00:04:25,850 --> 00:04:29,360
they get into your reversed control or

00:04:28,130 --> 00:04:31,550
in the history because that's another

00:04:29,360 --> 00:04:33,320
thing I often see is like I removed it

00:04:31,550 --> 00:04:34,160
okay but it's yeah but that's the point

00:04:33,320 --> 00:04:36,050
of version control right it has a

00:04:34,160 --> 00:04:37,130
history of all this stuff so that's it

00:04:36,050 --> 00:04:39,470
and there's some brilliant tools out

00:04:37,130 --> 00:04:41,450
there that cost nothing personal

00:04:39,470 --> 00:04:42,440
favorites truffle way of counting your

00:04:41,450 --> 00:04:42,980
repository looking for higher entropy

00:04:42,440 --> 00:04:45,170
strings

00:04:42,980 --> 00:04:47,710
it's a truffle bug truffle hog okay big

00:04:45,170 --> 00:04:47,710
fan of truffles

00:04:48,970 --> 00:04:55,760
there's good secrets and almost get

00:04:53,690 --> 00:04:57,800
hound yeah though everyone should

00:04:55,760 --> 00:04:59,600
probably be dealing with and if you

00:04:57,800 --> 00:05:01,730
don't you end up in really interesting

00:04:59,600 --> 00:05:03,650
situations I mean if you ask 14-year old

00:05:01,730 --> 00:05:07,610
me when I set up my first WordPress and

00:05:03,650 --> 00:05:09,470
I pop my database creds in the WP config

00:05:07,610 --> 00:05:10,340
that was fine then but it just isn't

00:05:09,470 --> 00:05:15,290
fine now

00:05:10,340 --> 00:05:16,250
you wouldn't do it so please yeah well

00:05:15,290 --> 00:05:18,230
and this is one of those things that

00:05:16,250 --> 00:05:19,940
people ask me like when they're doing CI

00:05:18,230 --> 00:05:21,620
CD pipelines or whatever it's like what

00:05:19,940 --> 00:05:23,180
this is like a super easy thing that you

00:05:21,620 --> 00:05:25,190
can do this this takes no compute

00:05:23,180 --> 00:05:26,570
resources it takes like you know you

00:05:25,190 --> 00:05:28,790
know just a couple hours of someone's

00:05:26,570 --> 00:05:30,710
time at that at most to set the sort of

00:05:28,790 --> 00:05:32,330
thing up with you know filtering for

00:05:30,710 --> 00:05:34,040
what you need and then then you're set

00:05:32,330 --> 00:05:35,660
for your entire team so it's a really

00:05:34,040 --> 00:05:37,340
easy thing and from day one it doesn't

00:05:35,660 --> 00:05:40,040
really cost much I mean we ever weigh

00:05:37,340 --> 00:05:42,260
our products open source everybody else

00:05:40,040 --> 00:05:44,150
in our segment does yeah there's no need

00:05:42,260 --> 00:05:45,800
to pay for it from the beginning and

00:05:44,150 --> 00:05:48,220
only when it becomes something that you

00:05:45,800 --> 00:05:50,930
probably don't to be running yourself

00:05:48,220 --> 00:05:53,360
yeah but that happens with most things I

00:05:50,930 --> 00:05:54,650
mean the vendor boots that most people

00:05:53,360 --> 00:05:56,510
have a model that's when it's a problem

00:05:54,650 --> 00:05:59,180
to pay for it run it free when you don't

00:05:56,510 --> 00:06:01,010
need it well of course I think people

00:05:59,180 --> 00:06:02,510
are using BOTS now to kind of search

00:06:01,010 --> 00:06:04,010
these get get repositories and

00:06:02,510 --> 00:06:06,140
everything so when your opponent is

00:06:04,010 --> 00:06:09,620
completely automated and you're not

00:06:06,140 --> 00:06:12,200
that's a problem right you can scale up

00:06:09,620 --> 00:06:14,750
by hiring a ton more staff but I thought

00:06:12,200 --> 00:06:15,980
we kind of worry about that I'm pretty

00:06:14,750 --> 00:06:17,990
sure that's the whole point of being

00:06:15,980 --> 00:06:20,090
here like we were trying not to throw

00:06:17,990 --> 00:06:22,030
engineers at problems in this step make

00:06:20,090 --> 00:06:25,039
them better through automation

00:06:22,030 --> 00:06:26,900
reasonable ideas but it's absolutely

00:06:25,039 --> 00:06:29,479
right I mean look the mod

00:06:26,900 --> 00:06:31,210
fourteen-year-old is definitely about

00:06:29,479 --> 00:06:33,800
automation when it comes to ruining your

00:06:31,210 --> 00:06:35,840
website or business they don't want to

00:06:33,800 --> 00:06:37,939
spend a long time doing it and the

00:06:35,840 --> 00:06:39,259
methodologies are exposed to the same

00:06:37,939 --> 00:06:41,330
enablement materials that your own

00:06:39,259 --> 00:06:44,000
engineers are reading they can automate

00:06:41,330 --> 00:06:45,590
it right an AWS free tier account gives

00:06:44,000 --> 00:06:48,710
you enough compute resource to go to

00:06:45,590 --> 00:06:51,530
town on github any public repository

00:06:48,710 --> 00:06:53,569
showdowns glorious for picking things

00:06:51,530 --> 00:06:56,689
out Weight Watchers big fan away watches

00:06:53,569 --> 00:06:59,360
myself they themselves had open

00:06:56,689 --> 00:07:01,819
kubernetes just chilling you know no

00:06:59,360 --> 00:07:04,099
authentication on it with AWS secret

00:07:01,819 --> 00:07:05,300
keys sitting in humanity secrets no

00:07:04,099 --> 00:07:06,889
authentication to stop you from getting

00:07:05,300 --> 00:07:08,539
it and that was found by security

00:07:06,889 --> 00:07:12,289
researchers usually showdown it's not

00:07:08,539 --> 00:07:14,449
hard it's not difficult any idiot myself

00:07:12,289 --> 00:07:16,219
included could find your credentials if

00:07:14,449 --> 00:07:21,889
you hard code them and are careless with

00:07:16,219 --> 00:07:34,960
them now a similar note sneaked these

00:07:21,889 --> 00:07:37,729
for simon Sinek it lets you flag

00:07:34,960 --> 00:07:39,919
open-source security and license risks

00:07:37,729 --> 00:07:42,080
right that's the product space now the

00:07:39,919 --> 00:07:44,089
most famous example of this is of course

00:07:42,080 --> 00:07:44,779
the the Apache struts or what I should

00:07:44,089 --> 00:07:46,940
say infamous

00:07:44,779 --> 00:07:48,199
right is the Apache struts fires and

00:07:46,940 --> 00:07:50,960
what happened now the first public

00:07:48,199 --> 00:07:54,860
exploit of that happened literally a day

00:07:50,960 --> 00:07:57,560
after it was reported so there's really

00:07:54,860 --> 00:08:00,379
not a whole lot of time despite the

00:07:57,560 --> 00:08:02,719
patch being available right now how can

00:08:00,379 --> 00:08:06,229
enterprises today get in front of

00:08:02,719 --> 00:08:08,360
something like that yeah so this was

00:08:06,229 --> 00:08:11,839
earlier this year for those who hasn't

00:08:08,360 --> 00:08:13,550
heard of Equifax these days not a single

00:08:11,839 --> 00:08:17,389
hand oh you're a free credit protection

00:08:13,550 --> 00:08:18,949
from that thank you really yeah yeah I

00:08:17,389 --> 00:08:20,389
mean it's it facts on the only one of

00:08:18,949 --> 00:08:22,129
course British Airways was it was a

00:08:20,389 --> 00:08:24,020
classic example just the other day I got

00:08:22,129 --> 00:08:25,879
a year free credit protection yeah I got

00:08:24,020 --> 00:08:28,699
off it at my boss my boss actually said

00:08:25,879 --> 00:08:30,830
to me Simon have you have you booked any

00:08:28,699 --> 00:08:32,659
flights recently with British Airways I

00:08:30,830 --> 00:08:33,770
said yeah I put one just the other day

00:08:32,659 --> 00:08:35,209
and he said oh you should probably

00:08:33,770 --> 00:08:37,189
change your credit card

00:08:35,209 --> 00:08:38,719
I said actually guy I used your credit

00:08:37,189 --> 00:08:40,729
card so you should probably change yours

00:08:38,719 --> 00:08:42,319
and that's a true story yes the change

00:08:40,729 --> 00:08:44,990
is credit card but yeah I mean you know

00:08:42,319 --> 00:08:46,160
these attacks we can't we it's not like

00:08:44,990 --> 00:08:47,959
they're not going to happen in future

00:08:46,160 --> 00:08:50,629
they are they will happen it's a case of

00:08:47,959 --> 00:08:52,339
when and it's a case of who so what

00:08:50,629 --> 00:08:54,920
protection do we have against these kind

00:08:52,339 --> 00:08:56,990
of attacks well these are these attacks

00:08:54,920 --> 00:08:58,009
that typically happening from known

00:08:56,990 --> 00:08:59,899
vulnerabilities they're their

00:08:58,009 --> 00:09:01,819
vulnerabilities that are not being found

00:08:59,899 --> 00:09:03,589
out from scratch by every single really

00:09:01,819 --> 00:09:05,329
smart hacker kind of sitting in a back

00:09:03,589 --> 00:09:07,160
room with loads of monitors these are

00:09:05,329 --> 00:09:10,339
known vulnerabilities and very very easy

00:09:07,160 --> 00:09:12,379
to exploit so you know if there's a CBE

00:09:10,339 --> 00:09:15,170
the chances are if we just type that CBE

00:09:12,379 --> 00:09:17,809
in into Google and and type exploit in

00:09:15,170 --> 00:09:19,040
you'll find a hack on github or

00:09:17,809 --> 00:09:21,199
somewhere like that and then you just

00:09:19,040 --> 00:09:23,019
run that hack and very often

00:09:21,199 --> 00:09:24,949
particularly with the Apache struts

00:09:23,019 --> 00:09:26,779
spring break is another good example

00:09:24,949 --> 00:09:29,600
whereby there are a couple of

00:09:26,779 --> 00:09:30,980
interesting vulnerabilities whereby so

00:09:29,600 --> 00:09:33,949
long as you're running a specific

00:09:30,980 --> 00:09:35,660
version of that package you need to do

00:09:33,949 --> 00:09:37,429
little else in terms of structure of

00:09:35,660 --> 00:09:39,439
your application to actually be

00:09:37,429 --> 00:09:41,329
vulnerable to that so the

00:09:39,439 --> 00:09:43,490
vulnerabilities are really easy to hack

00:09:41,329 --> 00:09:45,410
you talked about showdown and ways in

00:09:43,490 --> 00:09:47,029
which people can find out you know what

00:09:45,410 --> 00:09:49,040
you're running what you're using it's

00:09:47,029 --> 00:09:52,009
incredibly easy to for people to find

00:09:49,040 --> 00:09:55,129
you so you know if we if we draw a

00:09:52,009 --> 00:09:58,220
parallel with maybe my honeymoon I went

00:09:55,129 --> 00:10:00,529
to Kruger Park where there's lions and

00:09:58,220 --> 00:10:02,480
in parlors and everything else around do

00:10:00,529 --> 00:10:04,579
you need to be the fastest in parlor to

00:10:02,480 --> 00:10:06,709
keep away from a lion no you need to

00:10:04,579 --> 00:10:08,029
make sure you're not the slowest and you

00:10:06,709 --> 00:10:09,860
know that's that's that's all you need

00:10:08,029 --> 00:10:12,470
to do if you put if you put minimal

00:10:09,860 --> 00:10:13,999
effort in and and you know you're not so

00:10:12,470 --> 00:10:17,269
so vulnerable that someone can without

00:10:13,999 --> 00:10:18,110
you know too much effort hack you that's

00:10:17,269 --> 00:10:20,499
what you need to do you need that you

00:10:18,110 --> 00:10:23,019
need to be able to outlast our hackers

00:10:20,499 --> 00:10:25,339
you know to manage time attention span

00:10:23,019 --> 00:10:26,929
that once you've done that they'll move

00:10:25,339 --> 00:10:29,319
on to someone else you just need to you

00:10:26,929 --> 00:10:31,970
know stop being the obvious target

00:10:29,319 --> 00:10:34,249
so how come how can we do this with a

00:10:31,970 --> 00:10:35,959
day of notice well you're not going to

00:10:34,249 --> 00:10:38,269
have a human looking around at every

00:10:35,959 --> 00:10:40,249
single application package that you're

00:10:38,269 --> 00:10:41,839
using every single dependency who knows

00:10:40,249 --> 00:10:44,689
how many dependencies they even have in

00:10:41,839 --> 00:10:45,890
their application one person direct and

00:10:44,689 --> 00:10:48,200
indirect

00:10:45,890 --> 00:10:49,490
in direct as wellthey you must use a

00:10:48,200 --> 00:10:51,200
tool for that right you're not going to

00:10:49,490 --> 00:10:55,160
go around cutting every single one so

00:10:51,200 --> 00:10:58,430
then eggs bright absolutely say Java or

00:10:55,160 --> 00:11:00,589
node Joe okay spring I presume right so

00:10:58,430 --> 00:11:03,019
you know when you have this you know

00:11:00,589 --> 00:11:05,000
amazing number of packages and indirect

00:11:03,019 --> 00:11:07,100
packages you need the kind of tooling

00:11:05,000 --> 00:11:08,269
that will allow you to say these are the

00:11:07,100 --> 00:11:10,130
packages using these are the

00:11:08,269 --> 00:11:11,899
vulnerabilities that you have and when

00:11:10,130 --> 00:11:13,880
new vulnerabilities come out for a tool

00:11:11,899 --> 00:11:16,040
to say by the way you are now vulnerable

00:11:13,880 --> 00:11:18,019
here is the suggested fix and we can

00:11:16,040 --> 00:11:20,450
automate this for you that's the kind of

00:11:18,019 --> 00:11:21,740
thing you need now in the struts case

00:11:20,450 --> 00:11:23,930
and they're in the Equifax case link a

00:11:21,740 --> 00:11:25,519
couple of days okay there's a couple of

00:11:23,930 --> 00:11:26,990
days for the first for the first hack

00:11:25,519 --> 00:11:28,250
but we need to understand that the

00:11:26,990 --> 00:11:30,709
difference between a hack and a breach

00:11:28,250 --> 00:11:32,660
okay a hack is just someone breaking a

00:11:30,709 --> 00:11:35,060
perimeter a breach is someone taking

00:11:32,660 --> 00:11:37,310
sensitive information and there was at

00:11:35,060 --> 00:11:39,290
least a month two months I think member

00:11:37,310 --> 00:11:40,760
the actual dates but have a really good

00:11:39,290 --> 00:11:42,890
time between the first hack and the

00:11:40,760 --> 00:11:45,260
breach it isn't a case of when an

00:11:42,890 --> 00:11:46,550
attacker comes in they just go smash I'm

00:11:45,260 --> 00:11:46,970
gonna download your database and I'm

00:11:46,550 --> 00:11:49,010
gone

00:11:46,970 --> 00:11:51,320
those times of shortening as well yeah

00:11:49,010 --> 00:11:58,820
we do research from every year and four

00:11:51,320 --> 00:11:59,990
years ago it was 90 days so yeah and I

00:11:58,820 --> 00:12:01,279
think for a lot of companies even if

00:11:59,990 --> 00:12:04,010
they noticed even if they were made

00:12:01,279 --> 00:12:06,199
aware at the time of the public

00:12:04,010 --> 00:12:07,910
disclosure sometimes their CI CD

00:12:06,199 --> 00:12:09,860
pipelines aren't aren't short enough for

00:12:07,910 --> 00:12:12,079
them to even you know put the change

00:12:09,860 --> 00:12:14,060
public and and and in production before

00:12:12,079 --> 00:12:16,790
they kind of further your metaphor right

00:12:14,060 --> 00:12:18,589
it's like Equifax didn't know that the

00:12:16,790 --> 00:12:20,089
Impala was getting eaten for like two

00:12:18,589 --> 00:12:21,620
months right yeah like like it's not

00:12:20,089 --> 00:12:23,870
just you know outrunning it's like they

00:12:21,620 --> 00:12:27,050
just had no any no no clue that they

00:12:23,870 --> 00:12:28,610
were getting there I mean this is a

00:12:27,050 --> 00:12:30,529
dangerous audience to ask the question

00:12:28,610 --> 00:12:33,560
but how long roughly does a deploy take

00:12:30,529 --> 00:12:35,779
you so we're gonna say it's in the

00:12:33,560 --> 00:12:38,390
minutes territory or is that policy that

00:12:35,779 --> 00:12:41,630
holds you up no change control anything

00:12:38,390 --> 00:12:43,699
like this you take a whole CD total

00:12:41,630 --> 00:12:46,160
cycle time total cyclone get commit to

00:12:43,699 --> 00:12:52,970
Ryan bread exactly is it something you

00:12:46,160 --> 00:12:56,649
do hourly daily weekly one's gonna raise

00:12:52,970 --> 00:12:56,649
their hand for weekly not in this room

00:12:57,700 --> 00:13:01,670
well I think part of the issue is also

00:12:59,930 --> 00:13:03,529
discoverability right discoverability of

00:13:01,670 --> 00:13:05,150
like where is the patch what do I do

00:13:03,529 --> 00:13:07,279
with what comes next

00:13:05,150 --> 00:13:09,170
like is that something that we can make

00:13:07,279 --> 00:13:12,320
easier now for for developers and

00:13:09,170 --> 00:13:14,260
actually applying the badge well I mean

00:13:12,320 --> 00:13:18,350
so for example the company I'm

00:13:14,260 --> 00:13:20,089
representing here snick we we automate a

00:13:18,350 --> 00:13:22,070
huge amount of not just the

00:13:20,089 --> 00:13:24,100
discoverability but we are very

00:13:22,070 --> 00:13:26,300
opinionated in the way which we suggest

00:13:24,100 --> 00:13:28,190
the the fix that you should you should

00:13:26,300 --> 00:13:29,779
apply should be done and then we'll

00:13:28,190 --> 00:13:32,240
actually go ahead and push pull requests

00:13:29,779 --> 00:13:33,770
so that you as a developer you know

00:13:32,240 --> 00:13:36,650
don't just don't just aren't just told

00:13:33,770 --> 00:13:37,940
about what the potential fixes but will

00:13:36,650 --> 00:13:40,160
actually go ahead and update your palm

00:13:37,940 --> 00:13:42,020
or your or your package Jason with the

00:13:40,160 --> 00:13:42,980
necessary update or a patch that we

00:13:42,020 --> 00:13:44,510
would handcraft

00:13:42,980 --> 00:13:47,240
that would that would alleviate you of

00:13:44,510 --> 00:13:50,029
that vulnerability so I think I think

00:13:47,240 --> 00:13:51,710
tools are extremely helpful but they are

00:13:50,029 --> 00:13:53,900
definitely not and this is from Tony

00:13:51,710 --> 00:13:55,700
whether they are not you know you can't

00:13:53,900 --> 00:13:57,290
buy at all and say I'm def sec ops

00:13:55,700 --> 00:13:59,870
compliant there are there are many

00:13:57,290 --> 00:14:02,480
things which which you know you need to

00:13:59,870 --> 00:14:05,390
change within your organization from the

00:14:02,480 --> 00:14:07,700
culture of the team from making sure

00:14:05,390 --> 00:14:09,500
Security's in your processes and through

00:14:07,700 --> 00:14:11,180
your processes from start to finish and

00:14:09,500 --> 00:14:13,670
so that the security team is actually

00:14:11,180 --> 00:14:16,610
part of your your overall working focus

00:14:13,670 --> 00:14:18,740
group to your feature teams tooling of

00:14:16,610 --> 00:14:20,540
course is there to actually help you

00:14:18,740 --> 00:14:22,520
achieve that in your processes in a

00:14:20,540 --> 00:14:25,580
timely fashion but it's certainly not

00:14:22,520 --> 00:14:27,320
the be-all and end-all actually that

00:14:25,580 --> 00:14:31,370
reminds me of a fun piece that I read

00:14:27,320 --> 00:14:34,760
written by James where he said that

00:14:31,370 --> 00:14:40,820
Security's shift left should really be

00:14:34,760 --> 00:14:42,470
shift right well and shift right no it's

00:14:40,820 --> 00:14:45,050
a little unexpected given what the

00:14:42,470 --> 00:14:48,640
industry mantra is right now so can you

00:14:45,050 --> 00:14:53,540
explain what you meant by that and

00:14:48,640 --> 00:14:55,190
explain yeah you know it's funny I just

00:14:53,540 --> 00:14:56,330
like an hour and a half ago like I was

00:14:55,190 --> 00:14:58,400
getting trolled on Twitter for this

00:14:56,330 --> 00:15:00,770
exact same thing you know it's lovely

00:14:58,400 --> 00:15:01,880
right they copy like the company Twitter

00:15:00,770 --> 00:15:02,400
handle in there as well so it's really

00:15:01,880 --> 00:15:04,590
great

00:15:02,400 --> 00:15:06,780
I appreciate that so if you're gonna

00:15:04,590 --> 00:15:13,890
troll me please make sure my boss gets

00:15:06,780 --> 00:15:16,470
do that what's one of the product a

00:15:13,890 --> 00:15:19,950
little assassin question here how many

00:15:16,470 --> 00:15:24,570
people know if you're under attack right

00:15:19,950 --> 00:15:25,800
now how many people would know you know

00:15:24,570 --> 00:15:27,060
feel confident that you would know if

00:15:25,800 --> 00:15:30,510
you're under attack right now or not

00:15:27,060 --> 00:15:32,760
under attack right now that's a question

00:15:30,510 --> 00:15:33,870
that really kept us up at night

00:15:32,760 --> 00:15:35,610
especially when we started signal

00:15:33,870 --> 00:15:37,590
sciences so we you know we are kind of

00:15:35,610 --> 00:15:40,380
on the on the production side the

00:15:37,590 --> 00:15:42,060
operations side of the continuous

00:15:40,380 --> 00:15:45,570
delivery pipeline when customers are

00:15:42,060 --> 00:15:46,530
actually using it and you know we're

00:15:45,570 --> 00:15:47,820
looking at application security

00:15:46,530 --> 00:15:49,620
vulnerabilities like cross-site

00:15:47,820 --> 00:15:51,060
scripting sequel injection all the

00:15:49,620 --> 00:15:54,990
oldies that we've had you know since

00:15:51,060 --> 00:15:56,370
like 15 years ago and and how to how to

00:15:54,990 --> 00:15:57,840
actually monitor and defend against

00:15:56,370 --> 00:15:59,690
those and then we're also looking at

00:15:57,840 --> 00:16:03,120
other things like bot mitigation or

00:15:59,690 --> 00:16:04,410
feature abuse and misuse or any types of

00:16:03,120 --> 00:16:05,760
any type so any logic in your

00:16:04,410 --> 00:16:09,090
application that you want to instrument

00:16:05,760 --> 00:16:09,930
the flow of and monitor you know we can

00:16:09,090 --> 00:16:12,510
be able to do that and then we also

00:16:09,930 --> 00:16:15,090
correlate things from all sorts of lists

00:16:12,510 --> 00:16:17,490
you know like that actor lists or weird

00:16:15,090 --> 00:16:18,270
anomalous behavior error codes or

00:16:17,490 --> 00:16:20,310
anything like that and then we

00:16:18,270 --> 00:16:22,290
contextualize the whole thing and then

00:16:20,310 --> 00:16:24,090
we let you know like is the Impala cat

00:16:22,290 --> 00:16:27,780
needin or is it not right and like

00:16:24,090 --> 00:16:29,490
that's kind of our answer there so what

00:16:27,780 --> 00:16:32,250
do I mean by the idea of shift right I

00:16:29,490 --> 00:16:34,920
think that that to a point we we sort of

00:16:32,250 --> 00:16:37,080
have brought this dev sack ops belief

00:16:34,920 --> 00:16:38,700
that though we want to do all this

00:16:37,080 --> 00:16:40,530
shifting left and I totally think like

00:16:38,700 --> 00:16:42,630
shifting left is a good approach and

00:16:40,530 --> 00:16:44,700
whenever we think of it's putting

00:16:42,630 --> 00:16:45,900
tooling in the pipeline putting tooling

00:16:44,700 --> 00:16:48,270
like we just talked about like to get

00:16:45,900 --> 00:16:51,120
secret stuff or or snick or other types

00:16:48,270 --> 00:16:52,680
of things that like you know do do like

00:16:51,120 --> 00:16:54,630
a software Bill of Materials I think all

00:16:52,680 --> 00:16:56,580
that stuff is really really great

00:16:54,630 --> 00:16:58,800
you totally need all the the shift left

00:16:56,580 --> 00:17:00,630
early in your pipeline testing stuff but

00:16:58,800 --> 00:17:01,920
often we do that to the detriment of

00:17:00,630 --> 00:17:03,390
actually putting any like good

00:17:01,920 --> 00:17:05,730
instrumentation so if you think back to

00:17:03,390 --> 00:17:07,310
and I have a corollary corollary here

00:17:05,730 --> 00:17:11,070
that I think is really important for us

00:17:07,310 --> 00:17:13,860
when DevOps started in 2009 Patrick

00:17:11,070 --> 00:17:15,449
Dubois like hey like it's agile but for

00:17:13,860 --> 00:17:17,549
operations right and

00:17:15,449 --> 00:17:19,740
marry that that thing I think Patrick

00:17:17,549 --> 00:17:22,169
was was totally right on with that and

00:17:19,740 --> 00:17:24,179
Andrew Shafer and some other folks and

00:17:22,169 --> 00:17:26,309
over those that was coming out and when

00:17:24,179 --> 00:17:27,689
we were in those like early days what

00:17:26,309 --> 00:17:30,360
were the conversations right it was like

00:17:27,689 --> 00:17:34,049
doing better testing the infrastructure

00:17:30,360 --> 00:17:35,610
as code there was also a big hinging

00:17:34,049 --> 00:17:37,110
point on monitoring and actually do an

00:17:35,610 --> 00:17:39,269
instrumentation where it matters and

00:17:37,110 --> 00:17:40,830
like putting the operational data back

00:17:39,269 --> 00:17:42,720
to the developers and developers are

00:17:40,830 --> 00:17:45,169
going to support this thing well you

00:17:42,720 --> 00:17:47,909
know developers also care about security

00:17:45,169 --> 00:17:49,320
often their their maligned by security

00:17:47,909 --> 00:17:51,000
and said that they don't care that

00:17:49,320 --> 00:17:52,380
there's stupid developers or whatever

00:17:51,000 --> 00:17:54,750
and I think security people that do that

00:17:52,380 --> 00:17:57,179
are very wrong and wrongheaded in their

00:17:54,750 --> 00:17:59,700
their approach with that but I believe

00:17:57,179 --> 00:18:00,480
that that we have to look at this in a

00:17:59,700 --> 00:18:02,370
way where we're adding an

00:18:00,480 --> 00:18:04,440
instrumentation that provides feedback

00:18:02,370 --> 00:18:06,059
to the developers just like operations

00:18:04,440 --> 00:18:08,039
did when they kind of underwent the the

00:18:06,059 --> 00:18:10,049
DevOps transformation security is doing

00:18:08,039 --> 00:18:11,669
their that under devstack ops sorry

00:18:10,049 --> 00:18:13,139
those really long but but I kind of I

00:18:11,669 --> 00:18:17,190
think it has to be contextualized in

00:18:13,139 --> 00:18:18,149
that that view right perfect I think

00:18:17,190 --> 00:18:20,760
that's really helpful for us to

00:18:18,149 --> 00:18:22,500
understand you know think somehow we we

00:18:20,760 --> 00:18:24,330
think that everything should move to the

00:18:22,500 --> 00:18:26,820
front of the line this is important to

00:18:24,330 --> 00:18:28,200
think about this is really interesting

00:18:26,820 --> 00:18:30,210
when we talk the words were using is

00:18:28,200 --> 00:18:32,850
like moving things well shifting things

00:18:30,210 --> 00:18:34,590
it's really not it's it's about it's

00:18:32,850 --> 00:18:36,419
about just making sure you have focuses

00:18:34,590 --> 00:18:38,100
in other areas as well so it's like when

00:18:36,419 --> 00:18:40,350
we talk about shifting left when we talk

00:18:38,100 --> 00:18:42,029
about and the same words we used with

00:18:40,350 --> 00:18:44,700
performance as well sometimes shifting

00:18:42,029 --> 00:18:46,049
performance left and I think we just

00:18:44,700 --> 00:18:48,269
need to shift performance every bit is

00:18:46,049 --> 00:18:52,100
like security everywhere right it's

00:18:48,269 --> 00:18:52,100
about time they not focus basically yeah

00:18:52,429 --> 00:18:56,730
train every developer to be secure and

00:18:55,110 --> 00:18:58,889
then we'll replace our security teams

00:18:56,730 --> 00:19:01,620
with security engineers in there what we

00:18:58,889 --> 00:19:02,880
actually need to do is sort of pay the

00:19:01,620 --> 00:19:04,950
same amount of attention across the

00:19:02,880 --> 00:19:06,659
whole thing train our security folk to

00:19:04,950 --> 00:19:13,230
be engineers train our risk people to

00:19:06,659 --> 00:19:14,820
understand what the hell's going on yeah

00:19:13,230 --> 00:19:16,529
well and I think your your corollary

00:19:14,820 --> 00:19:18,120
there to performance I think performance

00:19:16,529 --> 00:19:19,889
and security are very similar in their

00:19:18,120 --> 00:19:22,309
their space and how you do problem

00:19:19,889 --> 00:19:24,360
solving here and you can rewind to like

00:19:22,309 --> 00:19:26,010
2007 or six or whatever when velocity

00:19:24,360 --> 00:19:27,860
conference started out is like the

00:19:26,010 --> 00:19:29,210
weirdest conference idea that O'Reilly

00:19:27,860 --> 00:19:30,650
put together at the time it was like

00:19:29,210 --> 00:19:32,030
we're gonna take some front-end

00:19:30,650 --> 00:19:33,620
developers and we're gonna take some

00:19:32,030 --> 00:19:35,030
back-end operations folks and we're

00:19:33,620 --> 00:19:36,860
gonna jam them into a conference because

00:19:35,030 --> 00:19:39,440
we want less than two second page load

00:19:36,860 --> 00:19:40,790
times right and like and so from that

00:19:39,440 --> 00:19:42,410
like you had tooling that amid you know

00:19:40,790 --> 00:19:43,850
that like people started doing that like

00:19:42,410 --> 00:19:45,559
why slow and all that sort of stuff on

00:19:43,850 --> 00:19:47,090
the front end you've had infrastructures

00:19:45,559 --> 00:19:48,410
code and fake management and all that

00:19:47,090 --> 00:19:49,670
stuff and that was really a birthplace

00:19:48,410 --> 00:19:51,890
of DevOps like one of the main places

00:19:49,670 --> 00:19:54,380
where like DevOps really grew out of but

00:19:51,890 --> 00:19:56,240
it was taking these two separate people

00:19:54,380 --> 00:19:57,590
that and most organizations don't talk

00:19:56,240 --> 00:19:59,840
to each other and are separated by many

00:19:57,590 --> 00:20:01,610
layers and mini silos and kind of jamp

00:19:59,840 --> 00:20:02,870
them together in a conference so I don't

00:20:01,610 --> 00:20:04,130
think that it's a it was you know

00:20:02,870 --> 00:20:06,140
happenstance that it all kind of

00:20:04,130 --> 00:20:07,730
happened together I think security kind

00:20:06,140 --> 00:20:15,080
of need some of that same same approach

00:20:07,730 --> 00:20:17,660
right like it's got a at its core about

00:20:15,080 --> 00:20:19,309
having having the data at the right data

00:20:17,660 --> 00:20:21,950
at the right time rather that's pulling

00:20:19,309 --> 00:20:24,140
security left so that the developers

00:20:21,950 --> 00:20:25,250
understand which vulnerabilities are

00:20:24,140 --> 00:20:26,840
going in at the time that they're

00:20:25,250 --> 00:20:28,460
actually putting it in or whether that's

00:20:26,840 --> 00:20:29,809
in production whereby you actually

00:20:28,460 --> 00:20:31,400
understand what's happening at the right

00:20:29,809 --> 00:20:33,230
at the you know at the time and what

00:20:31,400 --> 00:20:34,340
what signs are there that a hack might

00:20:33,230 --> 00:20:36,230
be happening and things like that

00:20:34,340 --> 00:20:37,580
it's about getting those data points out

00:20:36,230 --> 00:20:40,820
the right time feeding it to the people

00:20:37,580 --> 00:20:41,990
who need it so there everybody what I

00:20:40,820 --> 00:20:43,790
find really funny with a lot of this

00:20:41,990 --> 00:20:45,679
discussion is that everyone sits there

00:20:43,790 --> 00:20:49,870
talking about improving news

00:20:45,679 --> 00:20:49,870
observability and I hate the word yeah

00:20:52,390 --> 00:20:56,600
and then they start building out all

00:20:54,559 --> 00:20:58,010
these processes around it and then they

00:20:56,600 --> 00:20:59,740
start talking to the traditional

00:20:58,010 --> 00:21:02,059
security people who sit at the back of a

00:20:59,740 --> 00:21:04,610
basement or somewhere far away from the

00:21:02,059 --> 00:21:06,740
developers like you know the diagrams in

00:21:04,610 --> 00:21:08,929
ten deploys a day ten years ago where

00:21:06,740 --> 00:21:10,940
there's this line between dev and ops

00:21:08,929 --> 00:21:13,850
and they don't realize that there's a

00:21:10,940 --> 00:21:16,880
sock you know an entire team of reactive

00:21:13,850 --> 00:21:18,500
engineers focused on looking for events

00:21:16,880 --> 00:21:20,690
that warrant attention and resolving

00:21:18,500 --> 00:21:23,270
them and because there's this dotted

00:21:20,690 --> 00:21:25,250
line that blocks security from DevOps

00:21:23,270 --> 00:21:27,020
they're missing out on this giant team

00:21:25,250 --> 00:21:29,210
of people that can do their jobs or

00:21:27,020 --> 00:21:31,130
sorry do the boring bits of their jobs

00:21:29,210 --> 00:21:32,720
for them the things that you don't want

00:21:31,130 --> 00:21:34,490
to do the things aren't building a new

00:21:32,720 --> 00:21:36,740
product aren't making things move faster

00:21:34,490 --> 00:21:39,380
and they just neglect it because they

00:21:36,740 --> 00:21:42,740
don't interact with security folks

00:21:39,380 --> 00:21:43,789
not unlike the testers you know of seven

00:21:42,740 --> 00:21:45,440
or eight years ago and it's like many

00:21:43,789 --> 00:21:48,020
many people brought their QA teams in

00:21:45,440 --> 00:21:50,660
and when we were working on a DevOps

00:21:48,020 --> 00:21:52,070
project at a large enterprise we you

00:21:50,660 --> 00:21:53,690
know we just sat down with the testing

00:21:52,070 --> 00:21:55,280
team and was like okay let's let's go

00:21:53,690 --> 00:21:57,080
over like test automation stuff and like

00:21:55,280 --> 00:21:58,669
in it just like night and day like the

00:21:57,080 --> 00:22:00,950
way the team functioned and how the

00:21:58,669 --> 00:22:02,090
performance worked and and it kind of

00:22:00,950 --> 00:22:03,799
brought them into the whole development

00:22:02,090 --> 00:22:05,210
cycle it was part of the team instead of

00:22:03,799 --> 00:22:08,570
kind of this separate oh that's the QA

00:22:05,210 --> 00:22:09,650
group that we we send stuff over to it

00:22:08,570 --> 00:22:12,470
seems like we covered a lot of ground

00:22:09,650 --> 00:22:15,530
here yeah I mean we talked about you

00:22:12,470 --> 00:22:17,120
know some of the soft spots that people

00:22:15,530 --> 00:22:18,080
would be able to exploit and just you

00:22:17,120 --> 00:22:19,730
know it's not like they're super

00:22:18,080 --> 00:22:22,250
sophisticated hackers are not super

00:22:19,730 --> 00:22:24,230
sophisticated they just look for

00:22:22,250 --> 00:22:27,440
vulnerabilities that or things that we

00:22:24,230 --> 00:22:29,929
might have forgotten to do now what are

00:22:27,440 --> 00:22:33,409
the steps that enterprises can take to

00:22:29,929 --> 00:22:33,919
first of all find these kinds of soft

00:22:33,409 --> 00:22:36,409
spots

00:22:33,919 --> 00:22:38,990
right where problems in applications

00:22:36,409 --> 00:22:40,669
that are already out there and we're and

00:22:38,990 --> 00:22:42,289
also secondly what about the newer

00:22:40,669 --> 00:22:48,080
applications right like what does that

00:22:42,289 --> 00:22:50,870
ideal pipeline look like to you all

00:22:48,080 --> 00:22:52,340
right yeah okay so I have a presentation

00:22:50,870 --> 00:22:53,510
that I've given recently and I can I

00:22:52,340 --> 00:22:55,640
could send the link to you as well but

00:22:53,510 --> 00:22:57,260
it's it kind of goes to the whole CIC D

00:22:55,640 --> 00:22:59,809
pipeline and breaks down each stage of

00:22:57,260 --> 00:23:01,309
the pipeline with some ideas of security

00:22:59,809 --> 00:23:02,780
tools that you can use and you know

00:23:01,309 --> 00:23:05,360
every stage is different depending on

00:23:02,780 --> 00:23:07,880
your language and and what you know how

00:23:05,360 --> 00:23:09,650
your how your architected and and what

00:23:07,880 --> 00:23:11,480
your your briefs in this out but I'd be

00:23:09,650 --> 00:23:13,370
happy to show that as a useful thing I

00:23:11,480 --> 00:23:15,260
took some of that and I distilled it

00:23:13,370 --> 00:23:16,400
into a course for LinkedIn learning

00:23:15,260 --> 00:23:17,510
that's gonna be hitting if you have a

00:23:16,400 --> 00:23:18,770
LinkedIn learning subscription you can

00:23:17,510 --> 00:23:22,070
check that out and that comes out within

00:23:18,770 --> 00:23:23,870
the next couple weeks so I think I think

00:23:22,070 --> 00:23:25,730
the first thing before we even think

00:23:23,870 --> 00:23:27,740
about tools is from a company point of

00:23:25,730 --> 00:23:29,900
view yeah everyone everyone talks about

00:23:27,740 --> 00:23:31,130
and it's a phrase I've already said to

00:23:29,900 --> 00:23:32,600
have set cops but it's another phrase

00:23:31,130 --> 00:23:34,370
I'm not massively keen on digital

00:23:32,600 --> 00:23:35,630
transformation if anyone wants to leave

00:23:34,370 --> 00:23:37,850
the room when I say that they are you're

00:23:35,630 --> 00:23:39,559
welcome to digital transformation

00:23:37,850 --> 00:23:42,740
effectively yet just trying to push push

00:23:39,559 --> 00:23:45,890
jobs through CI CD quicker being able to

00:23:42,740 --> 00:23:48,080
release faster but yet the problem with

00:23:45,890 --> 00:23:49,850
that is things like performance things

00:23:48,080 --> 00:23:51,169
like security they get left behind

00:23:49,850 --> 00:23:52,610
because they're traditionally you know

00:23:51,169 --> 00:23:55,760
not designed to fit in those

00:23:52,610 --> 00:23:58,100
short time lapsed release cycles and and

00:23:55,760 --> 00:23:59,900
I think the first thing to do is to make

00:23:58,100 --> 00:24:02,600
sure that the team is actually

00:23:59,900 --> 00:24:04,820
structured in a way that when you get

00:24:02,600 --> 00:24:06,710
tools and change processes the right

00:24:04,820 --> 00:24:08,420
people are talking to each other having

00:24:06,710 --> 00:24:11,510
security people in from the very first

00:24:08,420 --> 00:24:13,400
design meeting you know talking to

00:24:11,510 --> 00:24:15,170
developers talking about talking with

00:24:13,400 --> 00:24:16,790
the architect about the differences that

00:24:15,170 --> 00:24:18,620
you need to think about when you're

00:24:16,790 --> 00:24:20,470
thinking about the service architecture

00:24:18,620 --> 00:24:23,330
versus a monolith architecture or

00:24:20,470 --> 00:24:24,770
microservices architecture you know

00:24:23,330 --> 00:24:26,390
those kind of things first of all I

00:24:24,770 --> 00:24:27,940
think that's that's massively the first

00:24:26,390 --> 00:24:29,960
the biggest thing I think it was a

00:24:27,940 --> 00:24:32,540
Martin Fowler when he was talking about

00:24:29,960 --> 00:24:34,790
people adopting micro-services unless

00:24:32,540 --> 00:24:37,700
you have a team whereby you have lots of

00:24:34,790 --> 00:24:39,710
many many teams each representing a kind

00:24:37,700 --> 00:24:41,450
of single service unless you have that

00:24:39,710 --> 00:24:43,220
you went actually design and create a

00:24:41,450 --> 00:24:44,570
microservices architecture if you have

00:24:43,220 --> 00:24:46,910
one massive team all you're actually

00:24:44,570 --> 00:24:48,860
going to do is have what you think of

00:24:46,910 --> 00:24:51,160
modular microservices but they're

00:24:48,860 --> 00:24:53,390
actually you're actually just creating a

00:24:51,160 --> 00:24:55,460
monolith with the light boundaries and

00:24:53,390 --> 00:24:57,200
if you if you really want to structure

00:24:55,460 --> 00:24:59,540
your application structure you're your

00:24:57,200 --> 00:25:01,669
environment to deal with security you

00:24:59,540 --> 00:25:03,260
need to change the way you work change

00:25:01,669 --> 00:25:05,900
the organization yeah so that's the

00:25:03,260 --> 00:25:10,309
first thing I'd say so I'll wait on a

00:25:05,900 --> 00:25:13,160
different one because the panel you

00:25:10,309 --> 00:25:17,720
shouldn't agree come on yes disagree my

00:25:13,160 --> 00:25:20,600
goodness yeah I don't pay for it it's a

00:25:17,720 --> 00:25:22,460
really good mic so I think a lot of

00:25:20,600 --> 00:25:24,980
those tackle they're moving forwards

00:25:22,460 --> 00:25:27,559
side of things and security isn't

00:25:24,980 --> 00:25:29,600
something that you draw a line in the

00:25:27,559 --> 00:25:31,549
sand and say right from this point on

00:25:29,600 --> 00:25:34,309
everything secure because that's how you

00:25:31,549 --> 00:25:35,510
get hacked I think actually sitting down

00:25:34,309 --> 00:25:38,570
and trying to break down the walls

00:25:35,510 --> 00:25:41,780
organizationally first and saying what

00:25:38,570 --> 00:25:43,400
sucks ask the question of a open roomful

00:25:41,780 --> 00:25:44,960
of people inside your organization tell

00:25:43,400 --> 00:25:47,330
them no one will get fired bringing some

00:25:44,960 --> 00:25:49,730
pizza and beer and say right everyone in

00:25:47,330 --> 00:25:51,260
here will know something bad let's write

00:25:49,730 --> 00:25:53,090
a list of these let's find the

00:25:51,260 --> 00:25:55,580
low-hanging fruit let's you know collect

00:25:53,090 --> 00:25:57,320
them all together and fix them and often

00:25:55,580 --> 00:25:59,090
you know you develop or pick out

00:25:57,320 --> 00:26:00,919
something like my app doesn't lock well

00:25:59,090 --> 00:26:02,660
enough there'll be a guy who knows how

00:26:00,919 --> 00:26:04,490
to fix that in the heartbeat and prove

00:26:02,660 --> 00:26:05,510
that you gain visibility and we go back

00:26:04,490 --> 00:26:07,670
to this but you have to

00:26:05,510 --> 00:26:08,720
start with the old stuff first because

00:26:07,670 --> 00:26:10,870
otherwise you get lost in this

00:26:08,720 --> 00:26:13,370
everything new we're doing is secure

00:26:10,870 --> 00:26:14,780
which is a really good way of not fixing

00:26:13,370 --> 00:26:19,670
anything you haven't heard of doctor

00:26:14,780 --> 00:26:21,860
have you yeah you know he said you know

00:26:19,670 --> 00:26:24,200
one thing I'd recommend for folks if

00:26:21,860 --> 00:26:26,360
you're doing like you know agile or

00:26:24,200 --> 00:26:27,440
weekly or sprinting you know for

00:26:26,360 --> 00:26:29,450
development cycles there's a lot of

00:26:27,440 --> 00:26:30,860
people are you kind of read security

00:26:29,450 --> 00:26:32,750
stuff and they're like oh threat model

00:26:30,860 --> 00:26:34,100
and it's like this big gigantic process

00:26:32,750 --> 00:26:35,390
and you know and they only you know

00:26:34,100 --> 00:26:37,070
security really wants to like once a

00:26:35,390 --> 00:26:39,020
year if that right but there's a new one

00:26:37,070 --> 00:26:40,340
called Mozilla rapid risk assessments

00:26:39,020 --> 00:26:42,710
and I'd recommend checking it out it's

00:26:40,340 --> 00:26:45,080
built to do 30 minute tabletop exercises

00:26:42,710 --> 00:26:46,640
that you do once one time per sprint and

00:26:45,080 --> 00:26:49,400
then over time you build out like a

00:26:46,640 --> 00:26:50,840
holistic threat model together but like

00:26:49,400 --> 00:26:52,760
that's that's that's a great or thing

00:26:50,840 --> 00:26:53,960
because it's basically that idea of like

00:26:52,760 --> 00:26:56,330
okay what do we think is wrong with this

00:26:53,960 --> 00:26:57,500
thing what are the pieces were changing

00:26:56,330 --> 00:26:59,090
in the application okay what does that

00:26:57,500 --> 00:27:01,190
mean for authentication and other pieces

00:26:59,090 --> 00:27:03,200
are critical okay thanks good meeting

00:27:01,190 --> 00:27:05,180
see all in two weeks right and and

00:27:03,200 --> 00:27:07,010
that's it's a good process and we've

00:27:05,180 --> 00:27:08,660
been seeing some some companies were

00:27:07,010 --> 00:27:11,120
kind of leading edge security do that

00:27:08,660 --> 00:27:14,390
kind of stuff maybe get some more

00:27:11,120 --> 00:27:17,990
practical advice CDC ICD pipeline I

00:27:14,390 --> 00:27:20,060
think you know looking from the moment a

00:27:17,990 --> 00:27:21,500
developer starts writing code and there

00:27:20,060 --> 00:27:23,270
are actions and act and security

00:27:21,500 --> 00:27:26,390
activities that you don't need to be a

00:27:23,270 --> 00:27:28,160
security expert to do but will harden

00:27:26,390 --> 00:27:29,840
your environment and I can talk from the

00:27:28,160 --> 00:27:31,250
from the vulnerability side from the

00:27:29,840 --> 00:27:34,150
open source permeability side and we'll

00:27:31,250 --> 00:27:36,380
use PCF as a as an as an example as well

00:27:34,150 --> 00:27:37,880
from from the minute a developer writes

00:27:36,380 --> 00:27:41,240
code okay they're going to be writing

00:27:37,880 --> 00:27:42,740
code there's potential for them actually

00:27:41,240 --> 00:27:44,330
writing their own vulnerabilities don't

00:27:42,740 --> 00:27:45,590
write in their own vulnerable code so

00:27:44,330 --> 00:27:47,510
there's there are tools available that

00:27:45,590 --> 00:27:48,980
can actually do that can actually you

00:27:47,510 --> 00:27:50,210
know scan your source code have some

00:27:48,980 --> 00:27:51,680
static analysis of your source code

00:27:50,210 --> 00:27:53,950
you're also going to be pulling in

00:27:51,680 --> 00:27:56,450
vulnerable libraries there are tools

00:27:53,950 --> 00:27:58,100
snickers an example of one of them that

00:27:56,450 --> 00:28:00,080
can that can check the vulnerable

00:27:58,100 --> 00:28:02,480
libraries that you're using against its

00:28:00,080 --> 00:28:04,370
vulnerable library database and it can

00:28:02,480 --> 00:28:07,190
tell you which vulnerable libraries you

00:28:04,370 --> 00:28:09,530
are using which are the remediation

00:28:07,190 --> 00:28:11,450
steps so if you have vulnerabilities in

00:28:09,530 --> 00:28:14,480
your direct or transitive dependencies

00:28:11,450 --> 00:28:16,100
you can get remediation steps as to this

00:28:14,480 --> 00:28:18,050
is the direct dependency you need to be

00:28:16,100 --> 00:28:19,950
using to get the transitive dependencies

00:28:18,050 --> 00:28:21,870
without vulnerability

00:28:19,950 --> 00:28:23,940
and then you know that can end up as a

00:28:21,870 --> 00:28:25,410
automated pull request which can make

00:28:23,940 --> 00:28:28,140
that change for you then when you go

00:28:25,410 --> 00:28:31,470
into a CI CD your CI environment your

00:28:28,140 --> 00:28:33,660
Jenkins build that can also run a full a

00:28:31,470 --> 00:28:37,050
full test to check your vulnerabilities

00:28:33,660 --> 00:28:38,790
and fail the bill if you know you are

00:28:37,050 --> 00:28:40,560
using vulnerable code you are pulling in

00:28:38,790 --> 00:28:42,510
vulnerable code you know when a

00:28:40,560 --> 00:28:44,370
developer sends a pool request we for

00:28:42,510 --> 00:28:46,320
example its net we automatically test

00:28:44,370 --> 00:28:49,320
every single pool request on a web hook

00:28:46,320 --> 00:28:51,240
so that any chance you know any any

00:28:49,320 --> 00:28:53,010
delta of code changes that a developer

00:28:51,240 --> 00:28:54,870
will put into that pool request will be

00:28:53,010 --> 00:28:57,900
tested and you know you can set it up to

00:28:54,870 --> 00:28:59,160
a fairer merge if if new vulnerabilities

00:28:57,900 --> 00:29:00,510
are being added and then you know

00:28:59,160 --> 00:29:02,820
pushing into production if a new

00:29:00,510 --> 00:29:04,550
vulnerability occurs what happens well

00:29:02,820 --> 00:29:06,060
one of the things we do is we

00:29:04,550 --> 00:29:08,520
automatically create a pull request

00:29:06,060 --> 00:29:11,280
against your repository with the fits so

00:29:08,520 --> 00:29:13,920
you know these are the you don't need to

00:29:11,280 --> 00:29:15,390
be a really in-depth detailed security

00:29:13,920 --> 00:29:18,600
expert to do this you just need to be

00:29:15,390 --> 00:29:20,850
aware that of the problems and aware of

00:29:18,600 --> 00:29:23,010
the solutions and you then go in and try

00:29:20,850 --> 00:29:25,170
and you know enact those solutions so

00:29:23,010 --> 00:29:27,750
those are some some practical advice in

00:29:25,170 --> 00:29:29,640
the kind of CI CD pipelines there's a

00:29:27,750 --> 00:29:31,530
point to where we kind of bring security

00:29:29,640 --> 00:29:32,820
into the folder Patras a skewed in his

00:29:31,530 --> 00:29:34,020
last session was like we got a drag

00:29:32,820 --> 00:29:35,310
security into this because like

00:29:34,020 --> 00:29:37,770
sometimes that's that's one of the

00:29:35,310 --> 00:29:39,780
problems and and I was thinking recently

00:29:37,770 --> 00:29:42,240
like I was talking at a security kind of

00:29:39,780 --> 00:29:43,710
insider security thing and I was like

00:29:42,240 --> 00:29:45,570
yeah linting and they're like linting

00:29:43,710 --> 00:29:47,430
never never heard of it no idea right

00:29:45,570 --> 00:29:49,230
you're like okay like well you can

00:29:47,430 --> 00:29:50,820
actually do some some like easy quick

00:29:49,230 --> 00:29:51,840
security checks doing some lifting right

00:29:50,820 --> 00:29:54,060
and so we kind of talked through that

00:29:51,840 --> 00:29:55,920
process but exposing them to kind of

00:29:54,060 --> 00:29:57,900
what hooks and and things are in place

00:29:55,920 --> 00:29:59,430
in the pipeline like because you know

00:29:57,900 --> 00:30:01,080
they're you know security people are

00:29:59,430 --> 00:30:02,520
smart people you just gotta like help

00:30:01,080 --> 00:30:04,560
bring them along for the process

00:30:02,520 --> 00:30:06,780
otherwise we'll we'll kind of continue

00:30:04,560 --> 00:30:08,120
the silos so we're getting tools on my

00:30:06,780 --> 00:30:10,770
favorite points in this which is

00:30:08,120 --> 00:30:11,310
enabling services you mentioned on

00:30:10,770 --> 00:30:12,690
Twitter

00:30:11,310 --> 00:30:15,900
creepy I've been reading his Twitter I

00:30:12,690 --> 00:30:18,240
get bored oh yeah there's a paper outs

00:30:15,900 --> 00:30:19,590
from Netflix yeah yeah the idea being

00:30:18,240 --> 00:30:21,530
that if your security team are doing it

00:30:19,590 --> 00:30:25,320
well they'll start offering services

00:30:21,530 --> 00:30:27,810
we'll deal with your logs we'll deal

00:30:25,320 --> 00:30:29,390
with managing the packages you're using

00:30:27,810 --> 00:30:30,710
so these aren't problems for you

00:30:29,390 --> 00:30:31,850
and that when you start doing that's

00:30:30,710 --> 00:30:34,010
right you get to this magical guide

00:30:31,850 --> 00:30:36,230
rails not gates yeah or my personal

00:30:34,010 --> 00:30:37,370
favorite the carrot shape stick the idea

00:30:36,230 --> 00:30:38,600
being that you know you can do any way

00:30:37,370 --> 00:30:39,620
you want but if you don't do it away

00:30:38,600 --> 00:30:41,840
it's not gonna work

00:30:39,620 --> 00:30:44,120
yeah and that was when you really start

00:30:41,840 --> 00:30:46,280
improving the security whilst making it

00:30:44,120 --> 00:30:49,250
a process they value notice they're just

00:30:46,280 --> 00:30:50,720
walking it on the road yeah yeah I had a

00:30:49,250 --> 00:30:52,940
friend of mine who came up to me and he

00:30:50,720 --> 00:30:54,830
said hey he's worked a big enterprise

00:30:52,940 --> 00:30:56,720
they're just now getting the DevOps in

00:30:54,830 --> 00:30:58,309
the cloud so you know whatever but but a

00:30:56,720 --> 00:31:00,440
lot of folks are in that can be in that

00:30:58,309 --> 00:31:02,630
space and I said okay what should I do

00:31:00,440 --> 00:31:05,570
I'm security guy director of security I

00:31:02,630 --> 00:31:08,210
said yeah you need to like never say no

00:31:05,570 --> 00:31:09,470
like you need to like be you just need

00:31:08,210 --> 00:31:10,400
to figure out a way to always say yes to

00:31:09,470 --> 00:31:12,140
these people because they're ready to

00:31:10,400 --> 00:31:13,760
like route around you and like just just

00:31:12,140 --> 00:31:15,470
do whatever they want there is nothing

00:31:13,760 --> 00:31:17,059
more creative than a dev told no yeah

00:31:15,470 --> 00:31:18,650
and and so and yeah and I think like

00:31:17,059 --> 00:31:20,780
building this paved road like that they

00:31:18,650 --> 00:31:23,000
do a Netflix is like make it so it's

00:31:20,780 --> 00:31:24,950
like it's easy and you know free to get

00:31:23,000 --> 00:31:26,780
security and and really that's really

00:31:24,950 --> 00:31:27,860
security is only option because we don't

00:31:26,780 --> 00:31:29,900
have enough people in the industry to

00:31:27,860 --> 00:31:31,370
fill the vacant seats now much less if

00:31:29,900 --> 00:31:32,870
like we tried to staff up you know more

00:31:31,370 --> 00:31:35,179
so like their only way is to automate

00:31:32,870 --> 00:31:37,850
themselves through this process so I

00:31:35,179 --> 00:31:39,710
think we're a little bit over time do we

00:31:37,850 --> 00:31:43,910
have a few minutes to do questions or

00:31:39,710 --> 00:31:48,850
should we just alright one burning but

00:31:43,910 --> 00:31:52,340
you have one question for the panel

00:31:48,850 --> 00:31:58,070
otherwise awful question is it really

00:31:52,340 --> 00:31:59,809
sneak it's it's sneak okay all right

00:31:58,070 --> 00:32:10,370
kind of in-between the tool never get

00:31:59,809 --> 00:32:11,290
that right all right going once going

00:32:10,370 --> 00:32:14,960
twice

00:32:11,290 --> 00:32:17,090
all right so I want to thank our panel

00:32:14,960 --> 00:32:20,390
today a big THANK YOU and and of course

00:32:17,090 --> 00:32:22,190
you audience today for your time it's

00:32:20,390 --> 00:32:23,600
been a pretty good discussion and I

00:32:22,190 --> 00:32:25,490
think it's a lot of progress that the

00:32:23,600 --> 00:32:27,049
ecosystem is made I guess overall for

00:32:25,490 --> 00:32:28,400
the platform and I think using and

00:32:27,049 --> 00:32:31,190
extending some of the capabilities of

00:32:28,400 --> 00:32:32,690
cloud foundry so that you know customers

00:32:31,190 --> 00:32:35,630
can essentially implement those and

00:32:32,690 --> 00:32:37,850
think of security not just you know hey

00:32:35,630 --> 00:32:40,460
I bought myself a platform

00:32:37,850 --> 00:32:41,750
or I bought myself a couple tools you

00:32:40,460 --> 00:32:42,490
really think about the picture as a

00:32:41,750 --> 00:32:44,390
whole

00:32:42,490 --> 00:32:47,650
alright that brings us to the end of

00:32:44,390 --> 00:32:47,650

YouTube URL: https://www.youtube.com/watch?v=9v6JxDEY7oY


