Title: Autoupgrade BOSH Packages - Oleksandr Slynko & Akshay Mankar, Pivotal
Publication date: 2018-10-10
Playlist: Cloud Foundry Summit Europe 2018
Description: 
	Autoupgrade BOSH Packages - Oleksandr Slynko & Akshay Mankar, Pivotal

Keeping Bosh release update is hard. It requires constant following the next releases and testing. Cloud Foundry Container Runtime struggled with it, but then worked on automatic bumping packages. In this talk, Oleksandr will tell how is it implemented, what are benefits and risks and how the team fixes deprecations without spending too much time on upgrades.

https://cfseu18.sched.com/event/FRyK/autoupgrade-bosh-packages-oleksandr-slynko-akshay-mankar-pivotal
Captions: 
	00:00:00,210 --> 00:00:06,569
good morning good afternoon everyone my

00:00:02,750 --> 00:00:08,519
name is Alexander I look at pivotal I

00:00:06,569 --> 00:00:12,599
talk on call found a container run time

00:00:08,519 --> 00:00:16,020
and create hi my name is axiom anchor I

00:00:12,599 --> 00:00:18,690
used to work on the platform to contain

00:00:16,020 --> 00:00:22,039
run time as an engineer now I've moved

00:00:18,690 --> 00:00:26,430
to the closest part of the PKS program

00:00:22,039 --> 00:00:29,310
and this is our friend octo he is the

00:00:26,430 --> 00:00:33,180
octopus at pivotal he'll be helping us

00:00:29,310 --> 00:00:36,210
with in this talk so we will talk about

00:00:33,180 --> 00:00:40,620
off top reagan-bush packages and avoid

00:00:36,210 --> 00:00:44,489
in boring rock important posit this talk

00:00:40,620 --> 00:00:46,379
is will be most helpful for the Borgias

00:00:44,489 --> 00:00:52,489
all source we expect you to know what

00:00:46,379 --> 00:00:55,260
bolus is how you can develop it and yeah

00:00:52,489 --> 00:00:58,370
usually if you develop it you'll see

00:00:55,260 --> 00:01:03,559
benefits so what we will talk about I

00:00:58,370 --> 00:01:06,090
talk about why do you need to do this

00:01:03,559 --> 00:01:08,520
probably no but we'll just take up a

00:01:06,090 --> 00:01:11,430
little bit then how you can do it and

00:01:08,520 --> 00:01:14,820
how they all they're doing it and we'll

00:01:11,430 --> 00:01:16,850
raise some concerns during our talk what

00:01:14,820 --> 00:01:21,630
you can do better

00:01:16,850 --> 00:01:23,850
okay let's start so I joined piata

00:01:21,630 --> 00:01:25,369
almost three years ago and after

00:01:23,850 --> 00:01:29,009
deploying this Sheriff Porsche was

00:01:25,369 --> 00:01:33,020
incredible both deployments are so nice

00:01:29,009 --> 00:01:35,579
you can do put reproducibly deploy

00:01:33,020 --> 00:01:38,210
produce' bleed apply all the time we can

00:01:35,579 --> 00:01:41,040
deploy 10 different infrastructure

00:01:38,210 --> 00:01:43,500
manifested version of also new manifest

00:01:41,040 --> 00:01:47,149
new version of your deployment it's so

00:01:43,500 --> 00:01:51,030
nice and core part of it it's Bosley's

00:01:47,149 --> 00:01:54,360
what releases contains all the packages

00:01:51,030 --> 00:01:57,090
it's reproducible and in tough

00:01:54,360 --> 00:02:00,270
containable so you don't have to access

00:01:57,090 --> 00:02:03,570
internet to deploy something and this

00:02:00,270 --> 00:02:04,380
self-contained ability is done by blobs

00:02:03,570 --> 00:02:10,440
so

00:02:04,380 --> 00:02:12,760
blobs help us to use some versions it's

00:02:10,440 --> 00:02:15,760
vosch packages that usually

00:02:12,760 --> 00:02:20,260
other assets provide you upload them to

00:02:15,760 --> 00:02:23,010
the cloud and your son Sam you don't

00:02:20,260 --> 00:02:27,190
have to commit in your source code and

00:02:23,010 --> 00:02:30,959
blobs are also there's actually one

00:02:27,190 --> 00:02:36,760
problem problem with blobs set yeah

00:02:30,959 --> 00:02:40,750
problem we want to solve with this boss

00:02:36,760 --> 00:02:43,629
dance I I think all of you sorry

00:02:40,750 --> 00:02:45,970
it's when something gotta bread you need

00:02:43,629 --> 00:02:49,470
to add a new version of blob then remove

00:02:45,970 --> 00:02:52,290
old rationale blob then upload there's a

00:02:49,470 --> 00:02:58,450
new block to the clouds and can meet

00:02:52,290 --> 00:03:00,760
 seems very easy and yeah looks

00:02:58,450 --> 00:03:05,560
for easy unfortunately not as easy so

00:03:00,760 --> 00:03:09,700
here's just two months ago I forgot to

00:03:05,560 --> 00:03:11,140
applaud blob that happens it was I had a

00:03:09,700 --> 00:03:14,680
blob forgot to applaud it

00:03:11,140 --> 00:03:17,709
Oh before that I forgot to remove it and

00:03:14,680 --> 00:03:20,160
I do this mistakes even this ought to

00:03:17,709 --> 00:03:24,190
help what about you actually

00:03:20,160 --> 00:03:25,780
yeah I I I did something but I would I

00:03:24,190 --> 00:03:27,669
would fed my favor doctor to not share

00:03:25,780 --> 00:03:32,049
it it's it's really really bad practice

00:03:27,669 --> 00:03:36,519
I I once uploaded kubernetes version 1.6

00:03:32,049 --> 00:03:38,500
as 1.7 while upgrading 1.6 207 so we all

00:03:36,519 --> 00:03:41,620
thought it got upgraded but kubernetes

00:03:38,500 --> 00:03:43,930
was still old and guess what I did why

00:03:41,620 --> 00:03:46,090
don't we have a commit message here I

00:03:43,930 --> 00:03:48,220
was so embarrassed I post push on top of

00:03:46,090 --> 00:03:56,889
it please don't tell octo he'll probably

00:03:48,220 --> 00:03:59,260
kill me yeah that's and that even part

00:03:56,889 --> 00:04:05,319
of bigger upgrade saying you did

00:03:59,260 --> 00:04:07,359
actually yeah so that dance were small

00:04:05,319 --> 00:04:10,030
but look at this bigger dance how do you

00:04:07,359 --> 00:04:12,340
even know when when upgrades are going

00:04:10,030 --> 00:04:14,530
to when you have to upgrade a package

00:04:12,340 --> 00:04:17,650
you have to wait for some team member to

00:04:14,530 --> 00:04:19,750
notice the the package has updated like

00:04:17,650 --> 00:04:22,240
they have reason upgrade then they would

00:04:19,750 --> 00:04:23,830
create the same old boring story in in

00:04:22,240 --> 00:04:25,240
tracker or whatever your

00:04:23,830 --> 00:04:27,009
project management thing is you have to

00:04:25,240 --> 00:04:29,530
like find the old story

00:04:27,009 --> 00:04:32,139
copy paste things and be like great

00:04:29,530 --> 00:04:34,180
things and the next thing you have to

00:04:32,139 --> 00:04:36,520
convince your project manager your team

00:04:34,180 --> 00:04:38,500
that we need this upgrade then again

00:04:36,520 --> 00:04:40,000
that conversation goes on people go like

00:04:38,500 --> 00:04:42,400
ok we'll put it somewhere in the

00:04:40,000 --> 00:04:44,409
priority it makes it to the top of the

00:04:42,400 --> 00:04:48,250
backlog and then developer starts doing

00:04:44,409 --> 00:04:51,729
all those these things again you hope

00:04:48,250 --> 00:04:54,039
they don't make mistakes and then

00:04:51,729 --> 00:04:57,639
pipeline runs the test and then you

00:04:54,039 --> 00:05:01,629
shipping so all of this how do you feel

00:04:57,639 --> 00:05:04,569
about it Alex mmm I first I like it this

00:05:01,629 --> 00:05:08,919
octopus we like it but it feels

00:05:04,569 --> 00:05:10,840
repetitive and little bit boring little

00:05:08,919 --> 00:05:15,129
maybe a little bit just a little bit

00:05:10,840 --> 00:05:19,120
boring so yeah some boring things so

00:05:15,129 --> 00:05:21,400
first of all this find new Russian it's

00:05:19,120 --> 00:05:23,680
relatively easy this so we work on CF

00:05:21,400 --> 00:05:25,449
Charaka varieties packaging colitis and

00:05:23,680 --> 00:05:27,669
visca mantis is not easy

00:05:25,449 --> 00:05:29,289
ok new version of kubernetes will do

00:05:27,669 --> 00:05:33,099
some post on how can use or somewhere

00:05:29,289 --> 00:05:37,210
like ok let's do it but if we do some

00:05:33,099 --> 00:05:41,169
dependent package that no one cares that

00:05:37,210 --> 00:05:44,949
much even flannel or I know like some

00:05:41,169 --> 00:05:46,900
container image that we use it just you

00:05:44,949 --> 00:05:50,219
need to go somewhere probably to github

00:05:46,900 --> 00:05:53,139
and check the new github release and

00:05:50,219 --> 00:05:56,259
don't need to do it every day once a

00:05:53,139 --> 00:05:59,080
week exists yeah it has to be procedure

00:05:56,259 --> 00:06:05,940
is quite boring and that fun part of the

00:05:59,080 --> 00:06:05,940
born in second thing is development and

00:06:06,089 --> 00:06:13,779
since it's boring with all the mistakes

00:06:08,440 --> 00:06:16,029
even up to those mistakes here that it

00:06:13,779 --> 00:06:20,529
can be just one script that can do this

00:06:16,029 --> 00:06:22,500
for you and if it's boring I I'll ask

00:06:20,529 --> 00:06:25,389
you to do it actually yes obviously as

00:06:22,500 --> 00:06:28,000
as the doer of boring things I would

00:06:25,389 --> 00:06:31,629
probably make more mistakes or I just

00:06:28,000 --> 00:06:33,219
had Terminator to do it and if it's

00:06:31,629 --> 00:06:35,319
boring they it will terminate it like

00:06:33,219 --> 00:06:41,229
what's the point of doing this

00:06:35,319 --> 00:06:44,439
things like so again what we terminated

00:06:41,229 --> 00:06:45,939
to the matter would be my bot I call my

00:06:44,439 --> 00:06:48,879
pot Terminator

00:06:45,939 --> 00:06:51,249
it would be like it notices the upgrade

00:06:48,879 --> 00:06:53,680
it will create a story for me and then

00:06:51,249 --> 00:06:55,659
maybe wait for us to prioritize it and

00:06:53,680 --> 00:07:00,789
then we'll talk to p.m. have that

00:06:55,659 --> 00:07:02,050
conversation and then then when it

00:07:00,789 --> 00:07:04,119
reaches the table backlog Terminator

00:07:02,050 --> 00:07:04,990
will pick it up and do it right it's

00:07:04,119 --> 00:07:07,539
simple

00:07:04,990 --> 00:07:10,990
does this sound good like if I don't do

00:07:07,539 --> 00:07:15,309
it intermarried oh yeah so okay you

00:07:10,990 --> 00:07:18,699
saved your time that's fine but I know I

00:07:15,309 --> 00:07:21,309
think that probably Shawn who is here he

00:07:18,699 --> 00:07:23,979
won't enjoy if I ask him every time to

00:07:21,309 --> 00:07:26,139
prioritize bump of new package

00:07:23,979 --> 00:07:28,599
especially it will be like some very

00:07:26,139 --> 00:07:30,539
very important package it'll ask me why

00:07:28,599 --> 00:07:33,819
do you interpret eyes it can you like

00:07:30,539 --> 00:07:36,550
sneak it yeah I think I think I think

00:07:33,819 --> 00:07:39,849
you're right you're right and waiting is

00:07:36,550 --> 00:07:42,009
human like we as humans like to wait for

00:07:39,849 --> 00:07:44,259
things I like make sure we are doing the

00:07:42,009 --> 00:07:46,419
most most important work that the

00:07:44,259 --> 00:07:48,909
customers would would would benefit from

00:07:46,419 --> 00:07:51,430
and because our time is valuable we

00:07:48,909 --> 00:07:52,990
prioritize things but BOTS time is not

00:07:51,430 --> 00:07:55,389
that value of n so any bots that are

00:07:52,990 --> 00:07:57,669
here but that I am is not that valuable

00:07:55,389 --> 00:07:59,800
they are sitting there just and also

00:07:57,669 --> 00:08:02,740
it's cheap because what is BOTS time

00:07:59,800 --> 00:08:06,189
it's some cpu time on some VM on cloud

00:08:02,740 --> 00:08:10,360
right it's cheap so how about this new

00:08:06,189 --> 00:08:13,749
world where the bots will notice things

00:08:10,360 --> 00:08:17,769
and the bots will ship things and we can

00:08:13,749 --> 00:08:20,909
go to ads and hike yeah that's cute I

00:08:17,769 --> 00:08:25,889
mean that usually works good but

00:08:20,909 --> 00:08:30,249
unfortunately unfortunately we work on

00:08:25,889 --> 00:08:32,110
kubernetes and it has sometimes there

00:08:30,249 --> 00:08:34,319
are some problems happen that sometimes

00:08:32,110 --> 00:08:37,120
I had to do some braking changes when

00:08:34,319 --> 00:08:40,019
infatuations I want to talk about my

00:08:37,120 --> 00:08:42,830
reductions for contract my change

00:08:40,019 --> 00:08:45,470
something will happen and

00:08:42,830 --> 00:08:47,510
if some new features appear but usual

00:08:45,470 --> 00:08:50,990
don't expose it because port can treat

00:08:47,510 --> 00:08:54,380
release now so might be like softer

00:08:50,990 --> 00:08:58,329
might is bought and like him beat me

00:08:54,380 --> 00:09:01,070
today I don't know I don't know maybe

00:08:58,329 --> 00:09:03,380
like automating BOTS to these really

00:09:01,070 --> 00:09:04,850
these notes sometimes I can't understand

00:09:03,380 --> 00:09:07,279
them I don't know how to write code for

00:09:04,850 --> 00:09:09,079
BOTS to understand them I would I would

00:09:07,279 --> 00:09:11,029
much rather take some compromise here

00:09:09,079 --> 00:09:13,910
and bacon some flexibility in the bot

00:09:11,029 --> 00:09:15,980
right like if I notice that bot has

00:09:13,910 --> 00:09:18,579
upgraded something wrong maybe I would

00:09:15,980 --> 00:09:20,899
say hey how about you stop for a bit

00:09:18,579 --> 00:09:23,180
don't have great things and I will

00:09:20,899 --> 00:09:24,620
revert the bots things right the word

00:09:23,180 --> 00:09:26,149
whatever changes parts made I have to

00:09:24,620 --> 00:09:29,360
make sure the bot is not super reckless

00:09:26,149 --> 00:09:30,980
and just doesn't like I revert Botstein

00:09:29,360 --> 00:09:33,440
and it bought goes oh you're using wrong

00:09:30,980 --> 00:09:36,620
package let me upgrade it again so you

00:09:33,440 --> 00:09:37,850
don't want that so let's let's we we

00:09:36,620 --> 00:09:39,560
should have a pause button in our bot

00:09:37,850 --> 00:09:41,930
like it should be able to pause there

00:09:39,560 --> 00:09:44,060
are other problems that we could other

00:09:41,930 --> 00:09:45,560
ways to solve this is like somewhere it

00:09:44,060 --> 00:09:47,810
is the next best thing

00:09:45,560 --> 00:09:50,000
after reading release notes yes release

00:09:47,810 --> 00:09:53,060
notes give you much more depth in-depth

00:09:50,000 --> 00:09:55,250
detail but if if the packages you depend

00:09:53,060 --> 00:09:57,709
on religiously follow somewhere they

00:09:55,250 --> 00:10:00,410
would not break contracts in minors or

00:09:57,709 --> 00:10:04,550
they would not make major changes in

00:10:00,410 --> 00:10:06,020
patches so we could make but listen to

00:10:04,550 --> 00:10:08,120
only minor changes or patching this

00:10:06,020 --> 00:10:11,990
depending on what what package we depend

00:10:08,120 --> 00:10:14,420
on right at the next step we could also

00:10:11,990 --> 00:10:18,350
say that hey how about you don't push to

00:10:14,420 --> 00:10:20,870
master our master is super is supposed

00:10:18,350 --> 00:10:23,600
to be much more tested much more stable

00:10:20,870 --> 00:10:25,040
thing send a support request if baud

00:10:23,600 --> 00:10:26,540
sensors would request fear on a PR

00:10:25,040 --> 00:10:28,579
pipeline we make sure everything works

00:10:26,540 --> 00:10:30,020
maybe have a person go through it and

00:10:28,579 --> 00:10:32,480
see may I have a person goes through

00:10:30,020 --> 00:10:34,690
release notes check out deprecations and

00:10:32,480 --> 00:10:38,029
see if there can be any minor

00:10:34,690 --> 00:10:41,060
announcements they can make so we could

00:10:38,029 --> 00:10:43,279
do all of those things and not only we

00:10:41,060 --> 00:10:46,250
could do we actually do you can do this

00:10:43,279 --> 00:10:49,820
whole thing so we do all the things so

00:10:46,250 --> 00:10:51,910
we have several pipelines that's access

00:10:49,820 --> 00:10:54,670
by this URL or

00:10:51,910 --> 00:10:56,350
that will be linked to our git repo so

00:10:54,670 --> 00:10:59,350
for example in docker release we just

00:10:56,350 --> 00:11:03,250
say docker will only use supported

00:10:59,350 --> 00:11:05,710
version of in kubernetes so we won't

00:11:03,250 --> 00:11:08,170
bump it much we won't bump it higher so

00:11:05,710 --> 00:11:10,300
we won't go on the latest and incubate

00:11:08,170 --> 00:11:12,730
assets will use both it will bump only

00:11:10,300 --> 00:11:17,470
for patches and sent PRS because we are

00:11:12,730 --> 00:11:19,510
sometimes break things and yeah for for

00:11:17,470 --> 00:11:22,000
y'all for a TDM follow just just go

00:11:19,510 --> 00:11:24,730
ahead if it's a break we will think what

00:11:22,000 --> 00:11:27,580
to do and for goal and we'll talk about

00:11:24,730 --> 00:11:30,040
it a bit slightly because it's a bit

00:11:27,580 --> 00:11:33,100
more complicated but how does it work

00:11:30,040 --> 00:11:34,990
I don't like Shay can you yeah how would

00:11:33,100 --> 00:11:37,720
the bot notice things like you might

00:11:34,990 --> 00:11:39,900
think it might be super complicated by

00:11:37,720 --> 00:11:44,550
it's six lines of Jason in concourse

00:11:39,900 --> 00:11:44,550
thanks to concourse not Jason Yammer

00:11:45,180 --> 00:11:51,190
sorry so we just tell where the

00:11:48,370 --> 00:11:53,530
repository is you just say hey use this

00:11:51,190 --> 00:11:55,360
access token and there's this github

00:11:53,530 --> 00:11:59,170
release resource which comes at conkers

00:11:55,360 --> 00:12:01,030
which can monitor releases on github so

00:11:59,170 --> 00:12:04,240
whenever somebody makes a release it is

00:12:01,030 --> 00:12:06,160
triggered a pipeline and when the job

00:12:04,240 --> 00:12:10,450
gets triggered what does the job do it

00:12:06,160 --> 00:12:13,780
does exactly as I would do or any of you

00:12:10,450 --> 00:12:17,290
would do but much more precisely that is

00:12:13,780 --> 00:12:20,170
the blob dance at least half of it right

00:12:17,290 --> 00:12:22,900
and then it will have to do some changes

00:12:20,170 --> 00:12:24,910
to the packages because ideally what you

00:12:22,900 --> 00:12:28,140
want is you want your blobs to have

00:12:24,910 --> 00:12:30,970
versions in them as in if you have

00:12:28,140 --> 00:12:33,310
flannel and your flannel file in the

00:12:30,970 --> 00:12:35,890
blob is just called flannel you might

00:12:33,310 --> 00:12:37,720
get confused like did I really applaud

00:12:35,890 --> 00:12:39,340
it or not did it really work or not so

00:12:37,720 --> 00:12:42,040
for visibility at least you would

00:12:39,340 --> 00:12:44,680
ideally want flannel 0 or 10 and next

00:12:42,040 --> 00:12:48,220
0.11 comes you'd remove 0 10 and add 0

00:12:44,680 --> 00:12:49,930
at 11:00 so because this name changes

00:12:48,220 --> 00:12:51,880
happen you might have to change

00:12:49,930 --> 00:12:54,550
something in your packaging scripts and

00:12:51,880 --> 00:12:57,790
specs of the packages and usually those

00:12:54,550 --> 00:13:00,820
are very very tiny things you just

00:12:57,790 --> 00:13:02,170
basically change them with said or if

00:13:00,820 --> 00:13:04,450
it's more complicated you could do

00:13:02,170 --> 00:13:06,420
things are things are very very simple

00:13:04,450 --> 00:13:09,370
so we just you said

00:13:06,420 --> 00:13:12,240
yeah now you would be like how does it

00:13:09,370 --> 00:13:15,700
push code just like we do

00:13:12,240 --> 00:13:18,250
just check out the branch and push tech

00:13:15,700 --> 00:13:21,760
add everything and commit it right you

00:13:18,250 --> 00:13:24,430
could also make it push to master but

00:13:21,760 --> 00:13:26,640
again as we discussed it it's up to the

00:13:24,430 --> 00:13:31,330
package and you how comfortable you feel

00:13:26,640 --> 00:13:34,120
upgrading that package let's talk about

00:13:31,330 --> 00:13:39,210
the Golan thing that we yeah boss finder

00:13:34,120 --> 00:13:42,700
package so when I joined updating Bush

00:13:39,210 --> 00:13:45,100
languages was quite annoying and I until

00:13:42,700 --> 00:13:47,410
someone pushed me how like no maybe

00:13:45,100 --> 00:13:49,540
later and unless there's something

00:13:47,410 --> 00:13:52,660
important because I have to go an age

00:13:49,540 --> 00:13:57,430
release update this flop and even with

00:13:52,660 --> 00:14:00,340
optimization is okay doable but luckily

00:13:57,430 --> 00:14:02,290
Bosh team taught us how might be they

00:14:00,340 --> 00:14:04,630
had this problem as well so they

00:14:02,290 --> 00:14:06,790
introduced a standard package what it

00:14:04,630 --> 00:14:09,970
will do that actually maintains a

00:14:06,790 --> 00:14:13,270
release with package with Russian

00:14:09,970 --> 00:14:17,110
package or languages and some and CF CLI

00:14:13,270 --> 00:14:20,200
and when you buy Russian releases they

00:14:17,110 --> 00:14:22,480
automatically hide it to their release

00:14:20,200 --> 00:14:24,190
and we can use it in our package with

00:14:22,480 --> 00:14:26,560
simple command which will be on the next

00:14:24,190 --> 00:14:30,280
slide so for example for Golan they

00:14:26,560 --> 00:14:32,170
support you can either follows a major

00:14:30,280 --> 00:14:33,850
Russian or follows a minor version and

00:14:32,170 --> 00:14:37,240
you just run the same command again and

00:14:33,850 --> 00:14:40,300
again just this comment very simple if

00:14:37,240 --> 00:14:46,930
you want to know more doulton tomorrow

00:14:40,300 --> 00:14:49,930
start yeah bye Maya and Maria should be

00:14:46,930 --> 00:14:52,930
very interesting and you know this is

00:14:49,930 --> 00:14:54,610
what we do now pipeline and I want to

00:14:52,930 --> 00:14:56,490
explain a little bit more here what's

00:14:54,610 --> 00:15:00,040
happening so we get the version of

00:14:56,490 --> 00:15:01,950
doctorally of go release and why we do

00:15:00,040 --> 00:15:05,620
this because we want to bump it in

00:15:01,950 --> 00:15:07,990
darker back in darker that we use for

00:15:05,620 --> 00:15:11,580
our unit tests and that's what probably

00:15:07,990 --> 00:15:16,570
you should do as well because sometimes

00:15:11,580 --> 00:15:18,520
on bumping off pager packages go becomes

00:15:16,570 --> 00:15:19,059
more strict and you don't want it to

00:15:18,520 --> 00:15:21,099
fail

00:15:19,059 --> 00:15:23,829
integration time on your diploma time

00:15:21,099 --> 00:15:28,329
but file in your unit test time so

00:15:23,829 --> 00:15:30,459
that's why you can you should bump your

00:15:28,329 --> 00:15:34,269
lotions in your doctor image that you

00:15:30,459 --> 00:15:36,639
use inside that's like minor caveat and

00:15:34,269 --> 00:15:39,159
one more interesting thing about vendor

00:15:36,639 --> 00:15:42,069
package that basically all your releases

00:15:39,159 --> 00:15:45,939
all your packages and all your religious

00:15:42,069 --> 00:15:48,969
can be rendered so as for us for example

00:15:45,939 --> 00:15:53,019
we can use cube cartel and we thought

00:15:48,969 --> 00:15:56,739
about extracting more small releases

00:15:53,019 --> 00:15:58,569
that will use cube kato's so they can

00:15:56,739 --> 00:16:01,809
get this cube cut off from our main

00:15:58,569 --> 00:16:05,609
release and one of the benefits that you

00:16:01,809 --> 00:16:08,169
won't have to bomb packages in all

00:16:05,609 --> 00:16:11,289
Porsche leaders and other that it will

00:16:08,169 --> 00:16:12,639
be single blow up so less uploading less

00:16:11,289 --> 00:16:16,449
calculation if you don't use pre

00:16:12,639 --> 00:16:20,249
composite releases and it just jokes and

00:16:16,449 --> 00:16:23,049
now when we bump everything in our

00:16:20,249 --> 00:16:25,929
Porsche Lee's we finalize it

00:16:23,049 --> 00:16:28,059
next step is the manifest so you want to

00:16:25,929 --> 00:16:32,199
bomb present the manifest it's very

00:16:28,059 --> 00:16:34,299
simple again don't curse pipeline code

00:16:32,199 --> 00:16:38,019
is not readable but you can read from

00:16:34,299 --> 00:16:40,719
our repo it just gets a release URL and

00:16:38,019 --> 00:16:44,559
Shah and run borscht interpolate command

00:16:40,719 --> 00:16:52,029
for the manifest and push it as simple

00:16:44,559 --> 00:16:55,659
as that so links to our site and to our

00:16:52,029 --> 00:16:57,999
CI repo check our bump pipelines they're

00:16:55,659 --> 00:17:00,909
very simple if you have still have

00:16:57,999 --> 00:17:03,969
questions about it will we can answer

00:17:00,909 --> 00:17:07,649
them now or we can answer them after the

00:17:03,969 --> 00:17:11,019
talk or ask us in our slack Channel and

00:17:07,649 --> 00:17:14,259
thanks for all these sources for our

00:17:11,019 --> 00:17:18,059
images and have nice you have some it

00:17:14,259 --> 00:17:18,059
and hack happy up to here

00:17:18,210 --> 00:17:22,319
[Applause]

00:17:19,230 --> 00:17:22,319

YouTube URL: https://www.youtube.com/watch?v=bX2WgYn55l0


