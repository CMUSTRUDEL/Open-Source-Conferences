Title: Code Samples that Actually Compile - Clare Macrae - CppCon 2019
Publication date: 2019-10-23
Playlist: CppCon 2019 Lightning Talks
Description: 
	http://CppCon.org
—
Discussion & Comments: https://www.reddit.com/r/cpp/
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2019
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:08,200 --> 00:00:12,940
thank you very much

00:00:10,480 --> 00:00:15,309
I've got a little story about working

00:00:12,940 --> 00:00:17,230
with cats recently with apologies to the

00:00:15,309 --> 00:00:19,570
cash developers it was just a convenient

00:00:17,230 --> 00:00:21,520
answer it's convenient example it's no

00:00:19,570 --> 00:00:23,259
criticism so I was helping with the

00:00:21,520 --> 00:00:25,270
catch documentation and I wanted to make

00:00:23,259 --> 00:00:27,430
sure I understood a couple of new

00:00:25,270 --> 00:00:29,470
features and that was great because

00:00:27,430 --> 00:00:31,480
there was user documentation for them

00:00:29,470 --> 00:00:34,450
and happily the documentation had

00:00:31,480 --> 00:00:36,940
example code so all I needed to do was

00:00:34,450 --> 00:00:40,899
take that code and compile it

00:00:36,940 --> 00:00:42,309
but then I got compiler errors and this

00:00:40,899 --> 00:00:43,840
was going to be like a two minute thing

00:00:42,309 --> 00:00:46,150
and suddenly it wasn't a two minute

00:00:43,840 --> 00:00:48,550
thing so what do I do

00:00:46,150 --> 00:00:52,390
well I'm sure it sounds familiar to lot

00:00:48,550 --> 00:00:54,700
of you but it was quite easy to solve

00:00:52,390 --> 00:00:56,340
all I had to do was search for the

00:00:54,700 --> 00:00:58,690
missing symbol in the documentation

00:00:56,340 --> 00:01:01,420
wasn't anywhere in the documentation

00:00:58,690 --> 00:01:03,550
okay so I'll search for the example code

00:01:01,420 --> 00:01:07,240
from the documentation elsewhere in the

00:01:03,550 --> 00:01:08,619
project I found it so then I had to diff

00:01:07,240 --> 00:01:10,659
and find out what I was missing

00:01:08,619 --> 00:01:13,270
and then all I had to do was paste in

00:01:10,659 --> 00:01:13,689
the relevant missing bit of code and it

00:01:13,270 --> 00:01:17,590
worked

00:01:13,689 --> 00:01:19,749
sighs happy job done except then I had

00:01:17,590 --> 00:01:22,270
to spend time I chose to but of course I

00:01:19,749 --> 00:01:24,639
was going to fix the documentation and

00:01:22,270 --> 00:01:28,179
submit a pull request because why

00:01:24,639 --> 00:01:31,569
wouldn't you is there a better way to do

00:01:28,179 --> 00:01:35,770
this I'm going to talk through how I

00:01:31,569 --> 00:01:39,520
used a tool called MD snippets to make

00:01:35,770 --> 00:01:41,289
it really easy to pull code from your

00:01:39,520 --> 00:01:43,810
tests or even occasionally your

00:01:41,289 --> 00:01:46,779
production code into markdown

00:01:43,810 --> 00:01:49,719
documentation so that your users if you

00:01:46,779 --> 00:01:52,509
document in markdown never have to go

00:01:49,719 --> 00:01:54,849
through that small experience again so

00:01:52,509 --> 00:01:56,829
the basic idea with markdown snippets MD

00:01:54,849 --> 00:01:59,289
snippets is that you put little

00:01:56,829 --> 00:02:01,509
placeholder comments in your source code

00:01:59,289 --> 00:02:04,029
so the pattern is really obvious you've

00:02:01,509 --> 00:02:06,429
got begins snippet and then a name and

00:02:04,029 --> 00:02:09,520
then at the end of the chunk you want to

00:02:06,429 --> 00:02:11,230
include and snippets you give your

00:02:09,520 --> 00:02:12,640
snippets unique name so here is the

00:02:11,230 --> 00:02:13,870
other chunk that I needed and this was

00:02:12,640 --> 00:02:15,790
what was missing this was all I was

00:02:13,870 --> 00:02:20,739
missing and what I needed to copy and

00:02:15,790 --> 00:02:22,180
paste in and then where before you're at

00:02:20,739 --> 00:02:23,610
markdown file would have been called

00:02:22,180 --> 00:02:25,860
something dot MD

00:02:23,610 --> 00:02:27,570
you call it something got sauced or MD

00:02:25,860 --> 00:02:28,890
that's its convention you don't have to

00:02:27,570 --> 00:02:30,690
do that but you might as well stick to

00:02:28,890 --> 00:02:33,840
the convention and then you see at the

00:02:30,690 --> 00:02:36,060
bottom snippet name of what you want to

00:02:33,840 --> 00:02:38,190
paste in you can even include file names

00:02:36,060 --> 00:02:40,350
actually so you can include test output

00:02:38,190 --> 00:02:42,450
for example or example impose anything

00:02:40,350 --> 00:02:45,060
like that and then you run the MD

00:02:42,450 --> 00:02:46,500
snippets program and it's depending on

00:02:45,060 --> 00:02:47,820
the command-line arguments you give it

00:02:46,500 --> 00:02:52,160
searches through your source code

00:02:47,820 --> 00:02:56,820
expands any snippets and fails if it

00:02:52,160 --> 00:03:00,090
finds a missing snippet name so now I

00:02:56,820 --> 00:03:02,520
have my dot MD file generated from the

00:03:00,090 --> 00:03:05,130
dot source to MD of the same name and if

00:03:02,520 --> 00:03:06,810
i zoom in it looks much the same as the

00:03:05,130 --> 00:03:08,600
original code except it's machine

00:03:06,810 --> 00:03:11,040
generated so it's always up-to-date

00:03:08,600 --> 00:03:12,840
another little nice feature is it puts a

00:03:11,040 --> 00:03:14,960
link at the bottom and if you click on

00:03:12,840 --> 00:03:17,190
that link it goes to the snippets source

00:03:14,960 --> 00:03:18,960
so that means even if you don't include

00:03:17,190 --> 00:03:21,330
all the code that a usually would need

00:03:18,960 --> 00:03:23,460
to be able to run it that you can just

00:03:21,330 --> 00:03:24,990
go to the source code you can see it's

00:03:23,460 --> 00:03:26,910
highlighted it Peaks the exact lines

00:03:24,990 --> 00:03:29,070
they can see what your headers are

00:03:26,910 --> 00:03:30,690
needed and things like that so so really

00:03:29,070 --> 00:03:33,330
really lovely mechanism so in summary

00:03:30,690 --> 00:03:36,870
you have your sourced or MD file or

00:03:33,330 --> 00:03:39,270
files you can with snippet names in your

00:03:36,870 --> 00:03:40,020
source files with beginning snippet in

00:03:39,270 --> 00:03:41,880
snippet

00:03:40,020 --> 00:03:43,920
it's totally language agnostic by the

00:03:41,880 --> 00:03:46,800
way it's nothing specific to C++ you can

00:03:43,920 --> 00:03:49,290
use it any other text-based language you

00:03:46,800 --> 00:03:51,870
can pull in other text files as well you

00:03:49,290 --> 00:03:54,360
won that through DMD snippets and you

00:03:51,870 --> 00:03:57,989
get these beautifully formatted easily

00:03:54,360 --> 00:04:00,480
accessible source and contact context so

00:03:57,989 --> 00:04:03,360
that's it MD snippets com guaranteed

00:04:00,480 --> 00:04:05,700
working code examples and huge thanks to

00:04:03,360 --> 00:04:07,470
Simon crop in Australia for being

00:04:05,700 --> 00:04:10,050
incredibly responsive and making this

00:04:07,470 --> 00:04:11,880
excellent all available can I encourage

00:04:10,050 --> 00:04:14,010
you if you're responsible for any open

00:04:11,880 --> 00:04:16,440
source documentation to have a look at

00:04:14,010 --> 00:04:18,060
it and if anyone wants help adding it to

00:04:16,440 --> 00:04:19,260
their system I'm really happy to do that

00:04:18,060 --> 00:04:22,480
and show you how we've done it in

00:04:19,260 --> 00:04:24,540
approval tests thank you very much

00:04:22,480 --> 00:04:24,540

YouTube URL: https://www.youtube.com/watch?v=8mkHhwGkbXg


