Title: Ray Tracing In Minutes - Tanki Zhang - CppCon 2019
Publication date: 2019-10-23
Playlist: CppCon 2019 Lightning Talks
Description: 
	http://CppCon.org
—
Discussion & Comments: https://www.reddit.com/r/cpp/
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2019
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:13,190 --> 00:00:21,779
so however I'm tanky so I'm again - I'll

00:00:17,430 --> 00:00:23,820
perform fine epic yes so everyone is

00:00:21,779 --> 00:00:25,830
kind of tired of Ko so let's just do

00:00:23,820 --> 00:00:27,900
something without code I'm gonna

00:00:25,830 --> 00:00:29,580
challenge myself to teach everyone to do

00:00:27,900 --> 00:00:33,530
rigorous in couple minutes well see how

00:00:29,580 --> 00:00:36,120
progress what we do is basically again

00:00:33,530 --> 00:00:38,910
engines like for night a lot of

00:00:36,120 --> 00:00:41,550
companies use our Gangi unreal - topics

00:00:38,910 --> 00:00:45,300
different titles and for sure there's

00:00:41,550 --> 00:00:47,489
some shiny pixels for our team this our

00:00:45,300 --> 00:00:51,440
rendering real-time without you know a

00:00:47,489 --> 00:00:54,059
fancy offline renewal hours rendering

00:00:51,440 --> 00:00:56,309
just as memorizing I'm gonna discuss it

00:00:54,059 --> 00:00:59,550
about myself about not about the company

00:00:56,309 --> 00:01:00,809
so then let's just start so this is how

00:00:59,550 --> 00:01:03,480
we're gonna do the root race in a

00:01:00,809 --> 00:01:05,460
nutshell we can see the image of

00:01:03,480 --> 00:01:09,270
rendering pixel and for each pixel we

00:01:05,460 --> 00:01:11,130
just Casper it from the camera and do it

00:01:09,270 --> 00:01:13,799
in your section test where is the scene

00:01:11,130 --> 00:01:17,700
I guess the thing so if there's a hit

00:01:13,799 --> 00:01:20,759
then we can decide to compute the light

00:01:17,700 --> 00:01:24,869
interaction and this side the final

00:01:20,759 --> 00:01:27,060
pixel color for that pixel so sinful

00:01:24,869 --> 00:01:29,400
pride to simplify the problem here is

00:01:27,060 --> 00:01:31,290
the actual single gonna render there's a

00:01:29,400 --> 00:01:33,270
severe sitting on the ground in open

00:01:31,290 --> 00:01:35,729
space there's no extra light sources

00:01:33,270 --> 00:01:38,340
just skylight which means everywhere you

00:01:35,729 --> 00:01:40,350
hit and if you can't compute a light

00:01:38,340 --> 00:01:43,920
compute look computer like information

00:01:40,350 --> 00:01:47,040
it just can't be fixed value if it's not

00:01:43,920 --> 00:01:50,220
blocked so here this is what we can get

00:01:47,040 --> 00:01:53,939
if we do that interaction test we shade

00:01:50,220 --> 00:01:56,070
or the Villa hit as rad and then

00:01:53,939 --> 00:01:57,960
furthermore if we can evaluate the

00:01:56,070 --> 00:01:59,850
surface normally information and

00:01:57,960 --> 00:02:04,259
visualize it you say what we can they

00:01:59,850 --> 00:02:07,079
get then one step more if we can take

00:02:04,259 --> 00:02:09,989
another way from the surface and just

00:02:07,079 --> 00:02:12,270
cast it to a render direction if you a

00:02:09,989 --> 00:02:14,020
hits anything then the rated actually

00:02:12,270 --> 00:02:17,530
plop either likes

00:02:14,020 --> 00:02:19,870
else it's interacting with light so be

00:02:17,530 --> 00:02:24,430
aware that all the surface with gray is

00:02:19,870 --> 00:02:26,350
kind of the surface color but if only

00:02:24,430 --> 00:02:28,750
with that equation we should only get

00:02:26,350 --> 00:02:32,380
two color gray or black right but this

00:02:28,750 --> 00:02:34,810
is a parent not the truth here and yes

00:02:32,380 --> 00:02:37,450
because I was lying or saying it's just

00:02:34,810 --> 00:02:39,250
part of the sorry so it's not as simple

00:02:37,450 --> 00:02:42,400
as that we can see

00:02:39,250 --> 00:02:44,560
like I said we need to evaluate the

00:02:42,400 --> 00:02:47,380
light information of the surface where

00:02:44,560 --> 00:02:50,380
this is only part of the story not all

00:02:47,380 --> 00:02:53,860
the equation so this is what we actually

00:02:50,380 --> 00:02:56,140
try to do is so anyways anyway is still

00:02:53,860 --> 00:02:59,680
like look listen to me don't freak out

00:02:56,140 --> 00:03:02,230
here's a more literal version so to

00:02:59,680 --> 00:03:04,150
evaluate the color of the rig we need to

00:03:02,230 --> 00:03:06,070
some of the light emit from the point

00:03:04,150 --> 00:03:08,920
plus in the world within the hemisphere

00:03:06,070 --> 00:03:10,959
of the light coming from any given

00:03:08,920 --> 00:03:13,180
direction multiplied by the chance of

00:03:10,959 --> 00:03:15,700
such library bouncing toward the viewer

00:03:13,180 --> 00:03:18,400
and then finally weighted by the normal

00:03:15,700 --> 00:03:20,950
so this is what we call the rendering

00:03:18,400 --> 00:03:22,540
equation which is all the render try to

00:03:20,950 --> 00:03:26,380
solve it just different way different

00:03:22,540 --> 00:03:29,650
hat so actually the integration is where

00:03:26,380 --> 00:03:31,390
the problem come from we didn't evaluate

00:03:29,650 --> 00:03:35,560
the whole information we just evaluate

00:03:31,390 --> 00:03:37,959
like one rate so but coming back how we

00:03:35,560 --> 00:03:41,620
need to do the integration on computer

00:03:37,959 --> 00:03:43,989
there's a long way but here we need to

00:03:41,620 --> 00:03:46,150
introduce them into car integration so

00:03:43,989 --> 00:03:48,160
basically the idea is to resolve the

00:03:46,150 --> 00:03:49,989
integration of an abstraction you an

00:03:48,160 --> 00:03:51,610
unknown function we can take samples

00:03:49,989 --> 00:03:54,130
from the whole functions and get the

00:03:51,610 --> 00:03:57,010
average value in case we have enough

00:03:54,130 --> 00:04:00,040
samples we'll be able to evaluate a

00:03:57,010 --> 00:04:02,230
pretty close estimation so if we take

00:04:00,040 --> 00:04:04,750
more samples and compute the average we

00:04:02,230 --> 00:04:06,400
can get something with shadow now the

00:04:04,750 --> 00:04:10,030
mature property ourselves the surface

00:04:06,400 --> 00:04:11,560
simplified for here and we can imagine

00:04:10,030 --> 00:04:16,269
the lighting Direction can be very

00:04:11,560 --> 00:04:18,459
different on different materials so now

00:04:16,269 --> 00:04:20,799
I'm gonna ask is anyone's do you

00:04:18,459 --> 00:04:22,990
interested I'm gonna talk material and

00:04:20,799 --> 00:04:25,800
denoising yep

00:04:22,990 --> 00:04:25,800
so please

00:04:30,500 --> 00:04:36,060
hi thank you

00:04:32,790 --> 00:04:37,650
so these fancy boys just feel like what

00:04:36,060 --> 00:04:40,139
kind of material we can't get into crazy

00:04:37,650 --> 00:04:42,030
work and this is from the Disney but

00:04:40,139 --> 00:04:44,160
basically if we just get some more

00:04:42,030 --> 00:04:47,880
mature already in this thing and we

00:04:44,160 --> 00:04:50,130
can't render a singing like this so this

00:04:47,880 --> 00:04:53,400
looks pretty nice except if we try to

00:04:50,130 --> 00:04:55,830
zoom in so here's the problem why it's

00:04:53,400 --> 00:04:58,410
like super noisy well this is a problem

00:04:55,830 --> 00:05:00,389
this is because we actually use in Monte

00:04:58,410 --> 00:05:02,610
Carlo integration which means we sell

00:05:00,389 --> 00:05:04,860
like we need to take sufficient samples

00:05:02,610 --> 00:05:06,960
but it's very hard to decide whether it

00:05:04,860 --> 00:05:08,910
is sufficient so if it's not sufficient

00:05:06,960 --> 00:05:11,570
then we get something like this this is

00:05:08,910 --> 00:05:14,700
actually pretty bad pretty good already

00:05:11,570 --> 00:05:17,700
so to solving this problem there are

00:05:14,700 --> 00:05:20,430
actually a couple ways one direction we

00:05:17,700 --> 00:05:22,200
can generally go is to cast most

00:05:20,430 --> 00:05:24,330
efficient erase or say like more

00:05:22,200 --> 00:05:25,919
important trace one technique we

00:05:24,330 --> 00:05:28,740
generally use it is called important

00:05:25,919 --> 00:05:30,450
sampling consider this case there's an

00:05:28,740 --> 00:05:33,240
incoming rate then reflect from the

00:05:30,450 --> 00:05:34,710
surface then the reflection rate of

00:05:33,240 --> 00:05:38,039
Russian we actually scatter you know

00:05:34,710 --> 00:05:41,270
like a lob but we can imagine if we take

00:05:38,039 --> 00:05:43,860
more rays from the orange comb the area

00:05:41,270 --> 00:05:48,090
the whole image were just converge

00:05:43,860 --> 00:05:49,800
faster also a more carefully designed

00:05:48,090 --> 00:05:52,110
sampling pattern will work better to

00:05:49,800 --> 00:05:54,240
sample the same distribution simpler

00:05:52,110 --> 00:05:55,770
just because with a better sampler we

00:05:54,240 --> 00:05:58,979
will be able to cover the whole space

00:05:55,770 --> 00:06:00,780
better where we can estimate and provide

00:05:58,979 --> 00:06:04,560
some better property for the next thing

00:06:00,780 --> 00:06:07,580
neat I'm gonna introduce so this is what

00:06:04,560 --> 00:06:10,500
I took from the Intel open denoiser

00:06:07,580 --> 00:06:15,050
repository this we picked this picture

00:06:10,500 --> 00:06:17,789
rendered by 15 samples per pixel and

00:06:15,050 --> 00:06:20,430
this is what we get this is called

00:06:17,789 --> 00:06:22,979
annoying like I said it sounds like

00:06:20,430 --> 00:06:25,800
magic but it's not there's a lot of the

00:06:22,979 --> 00:06:28,740
noise in master going out and it's still

00:06:25,800 --> 00:06:31,200
a very open problem especially in real

00:06:28,740 --> 00:06:31,979
time scenario but generally there are

00:06:31,200 --> 00:06:34,440
several

00:06:31,979 --> 00:06:37,020
space we can apply the denoiser for

00:06:34,440 --> 00:06:38,490
example it's spacial basically applies

00:06:37,020 --> 00:06:41,599
in the space or

00:06:38,490 --> 00:06:44,729
temporal applying the whole timeline or

00:06:41,599 --> 00:06:47,250
even what we call past space it's a

00:06:44,729 --> 00:06:50,069
representation of the past which form a

00:06:47,250 --> 00:06:52,590
space for spatial we can actually apply

00:06:50,069 --> 00:06:55,919
our screen space in order are we called

00:06:52,590 --> 00:06:59,729
a were space denoiser screen space here

00:06:55,919 --> 00:07:01,800
is just simply means it's like in that

00:06:59,729 --> 00:07:03,690
image space for each pixel we try to do

00:07:01,800 --> 00:07:06,660
noise we just gather information of the

00:07:03,690 --> 00:07:09,240
pixel and it's me neighborhood or other

00:07:06,660 --> 00:07:13,020
pixels you can get you need they apply

00:07:09,240 --> 00:07:17,430
the algorithm and which applied which

00:07:13,020 --> 00:07:20,130
finally give you kind of nice result so

00:07:17,430 --> 00:07:22,680
I think that's pretty much it

00:07:20,130 --> 00:07:25,740
I hope everyone enjoyed the content and

00:07:22,680 --> 00:07:29,730
enjoy the rest of the conference

00:07:25,740 --> 00:07:29,730

YouTube URL: https://www.youtube.com/watch?v=KfH-TyDUq-I


