Title: Embedded Debugging with Visual Studio - Brian Ruth - CppCon 2019
Publication date: 2019-10-23
Playlist: CppCon 2019 Lightning Talks
Description: 
	http://CppCon.org
—
Discussion & Comments: https://www.reddit.com/r/cpp/
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2019
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:14,480 --> 00:00:20,610
this way okay um my name's Brian Ruth I

00:00:19,050 --> 00:00:22,020
am a senior self-run junior at Garmin

00:00:20,610 --> 00:00:23,240
I'm gonna talk about debugging on

00:00:22,020 --> 00:00:27,680
embedded hardware with Visual Studio

00:00:23,240 --> 00:00:30,570
2019 so initial setup so starting in

00:00:27,680 --> 00:00:32,750
Visual Studio 2017 Microsoft added

00:00:30,570 --> 00:00:35,130
support to open up any project not just

00:00:32,750 --> 00:00:37,020
msbuild projects it's mainly targeted

00:00:35,130 --> 00:00:39,690
towards C make literal work for anything

00:00:37,020 --> 00:00:41,100
they extended this in 2019 this is very

00:00:39,690 --> 00:00:43,110
similar to the functionality and Visual

00:00:41,100 --> 00:00:46,289
Studio code except that it's different

00:00:43,110 --> 00:00:48,570
and not really documented so it's a add

00:00:46,289 --> 00:00:50,640
embedded components to Visual Studio you

00:00:48,570 --> 00:00:52,739
need to have desktop development for

00:00:50,640 --> 00:00:53,940
Visual Studio C++ install plus Linux

00:00:52,739 --> 00:00:55,350
development if you've already got

00:00:53,940 --> 00:00:57,570
installed just open up your Visual

00:00:55,350 --> 00:00:59,309
Studio installer and modify alright

00:00:57,570 --> 00:01:01,379
building custom tasks Visual Studio has

00:00:59,309 --> 00:01:02,819
knows how to make C make knows how to I

00:01:01,379 --> 00:01:05,460
must build doesn't know how to do other

00:01:02,819 --> 00:01:07,920
build systems so to do that they've got

00:01:05,460 --> 00:01:09,150
this task stat vs JSON file that can

00:01:07,920 --> 00:01:11,700
either be in the project's root

00:01:09,150 --> 00:01:13,590
directory or in the dot vs folder that

00:01:11,700 --> 00:01:14,850
Visual Studio creates probably want to

00:01:13,590 --> 00:01:17,490
put it in the root directory so it could

00:01:14,850 --> 00:01:19,290
be part of your source control so in

00:01:17,490 --> 00:01:21,450
this we're going to use a build two tool

00:01:19,290 --> 00:01:23,399
called wofe it's a Python baseball build

00:01:21,450 --> 00:01:25,140
tool we're building a CPP Khan project

00:01:23,399 --> 00:01:26,610
and development mode so we're going to

00:01:25,140 --> 00:01:28,979
go ahead and edit the tasks that vSTEP

00:01:26,610 --> 00:01:30,360
JSON file we're gonna call it build cpp

00:01:28,979 --> 00:01:32,460
con development it's gonna apply to

00:01:30,360 --> 00:01:33,450
every file in the folder and it's gonna

00:01:32,460 --> 00:01:35,310
be a command and we're gonna run a

00:01:33,450 --> 00:01:37,170
command we're also going to tell it what

00:01:35,310 --> 00:01:40,020
we expect the output of this command to

00:01:37,170 --> 00:01:42,829
be workspace root is a special variable

00:01:40,020 --> 00:01:46,799
defined that supposedly points to the

00:01:42,829 --> 00:01:48,960
root of your folder so to run it after

00:01:46,799 --> 00:01:50,729
we go in save it refresh a few times if

00:01:48,960 --> 00:01:52,409
we right-click in our solution Explorer

00:01:50,729 --> 00:01:54,240
way down the bottom there you may be

00:01:52,409 --> 00:01:55,950
able to see there's sis build cpp con

00:01:54,240 --> 00:01:58,979
development go ahead and click on it

00:01:55,950 --> 00:02:00,630
and it starts to build but once we got a

00:01:58,979 --> 00:02:02,219
firmware built how do we get it on there

00:02:00,630 --> 00:02:03,270
we could just back out into a command

00:02:02,219 --> 00:02:05,460
line or we could just create another

00:02:03,270 --> 00:02:06,899
task this one's another generic command

00:02:05,460 --> 00:02:08,600
applies to everything and we're gonna

00:02:06,899 --> 00:02:11,370
launch that to afford everything over

00:02:08,600 --> 00:02:13,590
well debugging using custom launching

00:02:11,370 --> 00:02:15,420
once we get the firmware onto the device

00:02:13,590 --> 00:02:18,000
Visual Studio has no idea what you're

00:02:15,420 --> 00:02:20,700
using as a debugger so conveniently they

00:02:18,000 --> 00:02:23,489
have this launch dot vs JSON again

00:02:20,700 --> 00:02:24,959
project root or vs folder that's going

00:02:23,489 --> 00:02:27,750
to be able to tell Visual Studio how to

00:02:24,959 --> 00:02:30,370
go about connecting to your debugger

00:02:27,750 --> 00:02:32,439
this is what you need to do I'll break

00:02:30,370 --> 00:02:35,079
it down we're gonna do debugging using a

00:02:32,439 --> 00:02:36,459
Segar j-link debugger so first what we

00:02:35,079 --> 00:02:38,170
need to do is we need to create the

00:02:36,459 --> 00:02:40,599
launch configuration tell it where the

00:02:38,170 --> 00:02:43,629
arm gdb is tell it what we're using as a

00:02:40,599 --> 00:02:45,340
compiler tell it how we're the J link

00:02:43,629 --> 00:02:48,819
server is and we're gonna be calling

00:02:45,340 --> 00:02:50,290
this launch cpp con hardware alright

00:02:48,819 --> 00:02:52,359
next section is gonna be setting up the

00:02:50,290 --> 00:02:53,769
gdb server where we wanted to run what

00:02:52,359 --> 00:02:55,959
are all the parameters we need to pass

00:02:53,769 --> 00:02:58,120
at the server and the server started

00:02:55,959 --> 00:03:00,069
down there is actually telling Visual

00:02:58,120 --> 00:03:01,859
Studio what to look for in the console

00:03:00,069 --> 00:03:06,370
output to assume that it's all set up

00:03:01,859 --> 00:03:09,340
and finally once we get connected to the

00:03:06,370 --> 00:03:11,200
GEB server we need to tell gdb what to

00:03:09,340 --> 00:03:13,120
do now you'll notice the gdb root path

00:03:11,200 --> 00:03:14,829
up there up at the top that's because

00:03:13,120 --> 00:03:17,200
with all the extra back slashes the

00:03:14,829 --> 00:03:18,609
workspace route doesn't work for this so

00:03:17,200 --> 00:03:22,180
you have to actually make your own

00:03:18,609 --> 00:03:24,280
separate one and once you get that done

00:03:22,180 --> 00:03:25,870
you may have to refresh a few times you

00:03:24,280 --> 00:03:27,489
go to your play button hit the drop down

00:03:25,870 --> 00:03:28,840
and you'll see the new thing we added

00:03:27,489 --> 00:03:30,670
along with some other stuff that it

00:03:28,840 --> 00:03:32,769
finds but I hear that they're working on

00:03:30,670 --> 00:03:35,079
filtering that out go ahead and hit play

00:03:32,769 --> 00:03:38,530
on CPV Khan hardware and now we play

00:03:35,079 --> 00:03:43,629
with fire we're gonna try doing a live

00:03:38,530 --> 00:03:49,180
demo alright so I have actual hardware

00:03:43,629 --> 00:03:54,790
here and if I go and click here it'll

00:03:49,180 --> 00:03:58,810
hopefully launch on this hardware and

00:03:54,790 --> 00:04:02,040
it's not and this is why live demos are

00:03:58,810 --> 00:04:02,040
not good doing lightning talks

00:04:04,650 --> 00:04:14,760
let's try loading the firmware real

00:04:08,169 --> 00:04:17,829
quick it's not working oh well we tried

00:04:14,760 --> 00:04:21,480
alright so troubleshooting if you

00:04:17,829 --> 00:04:26,080
[Laughter]

00:04:21,480 --> 00:04:27,760
thank you if you have issues there's an

00:04:26,080 --> 00:04:29,830
undocumented command that you can use

00:04:27,760 --> 00:04:32,410
open up your command window and you can

00:04:29,830 --> 00:04:33,910
turn on debug logging debug on or off

00:04:32,410 --> 00:04:35,170
and it's gonna output all of your

00:04:33,910 --> 00:04:37,510
commands that you send to your launch

00:04:35,170 --> 00:04:43,930
that vs that JSON out to a log file so

00:04:37,510 --> 00:04:45,340
you can see what's going on and some

00:04:43,930 --> 00:04:47,020
resources Microsoft there's a couple

00:04:45,340 --> 00:04:48,850
blog posts going over how to do this

00:04:47,020 --> 00:04:50,650
type of thing but the main thing to do

00:04:48,850 --> 00:04:52,270
is if you go into the open folder schema

00:04:50,650 --> 00:04:54,340
that JSON that's installed with Visual

00:04:52,270 --> 00:04:55,570
Studio it goes into what all the

00:04:54,340 --> 00:04:58,150
different parameters are what they do

00:04:55,570 --> 00:05:00,310
that's probably the best resource so and

00:04:58,150 --> 00:05:02,450
the obligatory I work at Garmin we're

00:05:00,310 --> 00:05:07,670
hiring Thanks

00:05:02,450 --> 00:05:07,670

YouTube URL: https://www.youtube.com/watch?v=Qy8D9fO1t1I


