Title: Closing the Gap between Rust and C++ Using Principles of Static Analysis - Sunny Chatterjee - CppCon
Publication date: 2020-09-23
Playlist: CppCon 2020 Day 2
Description: 
	https://cppcon.org/
https://github.com/CppCon/CppCon2020
---
Did you know that 70% of serious security bugs are a result of memory safety issues? As a C++ developer, you may have heard about the safety benefits of Rust language. Although both Rust and C++ are high-performing system programming languages, we are increasingly hearing from customers and security researchers to have stronger safety and correctness guarantees in C++. Safety and correctness are no longer viewed as an opt-in behavior. The new adage is – if it compiles, it works. Static analysis has proved to be a valuable tool in empowering developers write modern C++. In this talk, I will share some ideas on how we can use the same principles in modern C++ code to provide strong statically-checked guarantees out-of-the-box. I will demonstrate some of these techniques live using MSVC’s code analysis tool.

---
Sunny leads a team responsible for developing the core C++ static analysis engines in Visual Studio productivity experience as well as the traditional security tooling scenarios used widely within Microsoft. He has many years of experience in static analysis and enjoys delivering new productivity benefits to customers. His current focus is to lead efforts towards making C++ a safer systems programming language.
---

Streamed & Edited by Digital Medium Ltd - events.digital-medium.co.uk
events@digital-medium.co.uk
YouTube URL: https://www.youtube.com/watch?v=_pQGRr4P16w


