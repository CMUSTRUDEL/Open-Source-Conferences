Title: CppCon 2015: Julian Storer "The Projucer"
Publication date: 2015-10-21
Playlist: CppCon 2015 Lightning Talks
Description: 
	http://www.Cppcon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/cppcon/cppcon2015
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:00,030 --> 00:00:06,839
thanks very much yeah thanks thank you

00:00:04,259 --> 00:00:08,429
nice easy start to the morning before 15

00:00:06,839 --> 00:00:11,130
minutes I'm gonna be demoing on you

00:00:08,429 --> 00:00:13,440
products the producer which you will all

00:00:11,130 --> 00:00:16,250
have got in your goodie bags when you

00:00:13,440 --> 00:00:18,150
were when you registered for CPP calm

00:00:16,250 --> 00:00:21,000
there's a little memory stick in there

00:00:18,150 --> 00:00:24,090
with the juice logo on and on there is a

00:00:21,000 --> 00:00:26,279
very early preview of the producer which

00:00:24,090 --> 00:00:27,300
you can have a go of we're kind of soft

00:00:26,279 --> 00:00:29,039
launching it this week

00:00:27,300 --> 00:00:30,720
we'll be releasing a public beats are in

00:00:29,039 --> 00:00:34,500
the next couple of weeks when we go out

00:00:30,720 --> 00:00:35,880
our butt juice version for launch so

00:00:34,500 --> 00:00:38,149
quickly the background for the guys who

00:00:35,880 --> 00:00:41,280
haven't heard of what juice is where

00:00:38,149 --> 00:00:43,950
it's a big one this big do it's all

00:00:41,280 --> 00:00:45,329
frameworks kind of in the QT style in

00:00:43,950 --> 00:00:48,809
the sense that we have everything from

00:00:45,329 --> 00:00:52,050
GUI frameworks networking you know

00:00:48,809 --> 00:00:54,750
cryptography and a loss of audio stuff

00:00:52,050 --> 00:00:56,850
and we're probably the most widely used

00:00:54,750 --> 00:00:59,640
framework in the audio music tech

00:00:56,850 --> 00:01:01,170
industry and so most of the plug-in

00:00:59,640 --> 00:01:03,750
audio plugins and what do you actually

00:01:01,170 --> 00:01:06,360
see pretty likely to be built with juice

00:01:03,750 --> 00:01:08,460
somewhere in there and what we tend to

00:01:06,360 --> 00:01:10,890
get in that in that industry is a lot of

00:01:08,460 --> 00:01:14,520
very customized user interfaces you'll

00:01:10,890 --> 00:01:19,170
see lots of really crazy customized we

00:01:14,520 --> 00:01:25,049
had sliders weird displays for feedback

00:01:19,170 --> 00:01:27,540
of all kinds of musical audio data so

00:01:25,049 --> 00:01:30,689
what and what I seem to have spent the

00:01:27,540 --> 00:01:34,020
last 10 years doing a lot of is tweaking

00:01:30,689 --> 00:01:36,930
pixels on user interfaces so will tend

00:01:34,020 --> 00:01:40,100
to get will have a very customized UI

00:01:36,930 --> 00:01:43,799
and will I seem to spend a lot of time

00:01:40,100 --> 00:01:46,259
nudging a font size or moving a tweaking

00:01:43,799 --> 00:01:49,320
a gradient color or you know moving a

00:01:46,259 --> 00:01:51,119
line around it's in compile waiting for

00:01:49,320 --> 00:01:53,520
you have to start up again going back to

00:01:51,119 --> 00:01:55,350
that part of the app and seeing if it's

00:01:53,520 --> 00:01:57,390
in the right place and no it's still 2

00:01:55,350 --> 00:01:57,810
pixels to the left so you go back to the

00:01:57,390 --> 00:02:00,540
code

00:01:57,810 --> 00:02:04,860
sweet sweet graphics again and go around

00:02:00,540 --> 00:02:06,360
and the nature of the kind of interfaces

00:02:04,860 --> 00:02:07,770
we do also means that it doesn't lend

00:02:06,360 --> 00:02:10,410
itself very well to give a designer

00:02:07,770 --> 00:02:11,650
tools because they they they're less

00:02:10,410 --> 00:02:14,560
dynamic

00:02:11,650 --> 00:02:16,959
we have a GUI design tool and people

00:02:14,560 --> 00:02:18,430
people do use it but when you're doing

00:02:16,959 --> 00:02:20,319
really complicated interface it's really

00:02:18,430 --> 00:02:22,000
the only way to test and iterate on

00:02:20,319 --> 00:02:25,300
these is to actually change the code and

00:02:22,000 --> 00:02:29,590
see what happens so the producer is an

00:02:25,300 --> 00:02:31,540
attempt to act augmenting the your

00:02:29,590 --> 00:02:34,209
normal workflow with a way of taking a

00:02:31,540 --> 00:02:36,099
little part of your app out and just

00:02:34,209 --> 00:02:38,920
viewing it on its own in real time while

00:02:36,099 --> 00:02:42,010
you edit code so we'll give you a

00:02:38,920 --> 00:02:45,580
demonstration the slide you've got there

00:02:42,010 --> 00:02:47,830
isn't PowerPoint or keynote I'm just

00:02:45,580 --> 00:02:50,769
going to zoom out that's a little piece

00:02:47,830 --> 00:02:55,720
of code I wrote last night and the code

00:02:50,769 --> 00:02:57,670
is over here on the right really really

00:02:55,720 --> 00:03:01,480
simple anyone who's ever seen juice or

00:02:57,670 --> 00:03:02,920
Java or QQ widget type classes will

00:03:01,480 --> 00:03:04,750
recognize this as a little widget class

00:03:02,920 --> 00:03:06,430
with a painting routine that just draws

00:03:04,750 --> 00:03:10,290
the stuff that you can see on the screen

00:03:06,430 --> 00:03:13,120
there so it fills the background it so

00:03:10,290 --> 00:03:16,630
it sets a font it prints the producer at

00:03:13,120 --> 00:03:18,820
the top and there's a few things now say

00:03:16,630 --> 00:03:21,040
I'm not happy with this like I think my

00:03:18,820 --> 00:03:23,530
name is a little bit small on there so

00:03:21,040 --> 00:03:25,660
let me see this is the I think this is a

00:03:23,530 --> 00:03:27,280
bit very sick the size of my name so I

00:03:25,660 --> 00:03:27,549
can just adjust that because if it's

00:03:27,280 --> 00:03:30,370
bigger

00:03:27,549 --> 00:03:32,200
I put the kind of regular gradients

00:03:30,370 --> 00:03:34,720
around the thing but this it's not quite

00:03:32,200 --> 00:03:40,329
right so let's let's tweak that color a

00:03:34,720 --> 00:03:42,579
bit and this is this the tool you're

00:03:40,329 --> 00:03:44,769
seeing on the right is our rum it's not

00:03:42,579 --> 00:03:46,510
an idea we have a tool called the

00:03:44,769 --> 00:03:49,510
introducer which was the predecessor to

00:03:46,510 --> 00:03:52,329
the producer Pro being a bit better and

00:03:49,510 --> 00:03:54,700
this has been juices project management

00:03:52,329 --> 00:03:57,850
sore for many years now and it lets you

00:03:54,700 --> 00:03:59,700
build project with good file structure

00:03:57,850 --> 00:04:01,359
as you've seen in many other IDs

00:03:59,700 --> 00:04:03,459
configurations here let you set

00:04:01,359 --> 00:04:05,590
different targets like Visual Studio

00:04:03,459 --> 00:04:08,010
Xcode it spits out this project fast

00:04:05,590 --> 00:04:10,060
we're not trying to get rid of the the

00:04:08,010 --> 00:04:11,950
the tools that people use from their

00:04:10,060 --> 00:04:13,060
everyday lives I still use Xcode we use

00:04:11,950 --> 00:04:14,859
Visual Studio all the time

00:04:13,060 --> 00:04:17,139
this is kind of management tool for that

00:04:14,859 --> 00:04:19,479
but now we've bolted into it the lrvm

00:04:17,139 --> 00:04:22,030
compiler so we also have a place here

00:04:19,479 --> 00:04:24,220
where it'll build the code pull out any

00:04:22,030 --> 00:04:25,300
classes it recognizes and then what

00:04:24,220 --> 00:04:28,120
we're seeing over here in this

00:04:25,300 --> 00:04:31,000
it's instantiated an instance of this

00:04:28,120 --> 00:04:33,009
component on its own without actually

00:04:31,000 --> 00:04:35,830
running me out so it never calls main it

00:04:33,009 --> 00:04:37,780
just pulls out one class

00:04:35,830 --> 00:04:39,389
Crick's for the magic boilerplate and

00:04:37,780 --> 00:04:43,180
runs the whole thing in the jet engine

00:04:39,389 --> 00:04:45,129
so I was I was just tweaking some

00:04:43,180 --> 00:04:47,770
numbers though if you change a little in

00:04:45,129 --> 00:04:49,509
the code it can detect that and inject

00:04:47,770 --> 00:04:50,620
those directly into running out but it's

00:04:49,509 --> 00:04:53,639
also very quick if you want to rewrite

00:04:50,620 --> 00:04:58,060
so like if I don't want our logo there

00:04:53,639 --> 00:04:59,409
I'm just going to comment that out let's

00:04:58,060 --> 00:05:01,719
go

00:04:59,409 --> 00:05:03,969
and by doing some really clever

00:05:01,719 --> 00:05:05,199
precompiled header tricks and not

00:05:03,969 --> 00:05:07,870
getting rid of the running code and

00:05:05,199 --> 00:05:09,819
silver we've got a replaceable compiled

00:05:07,870 --> 00:05:11,319
version to replace it with you get a

00:05:09,819 --> 00:05:13,449
very nice feedback loop where you can

00:05:11,319 --> 00:05:15,580
just sit on it with one window open

00:05:13,449 --> 00:05:18,129
showing the result another one showing

00:05:15,580 --> 00:05:19,840
the code and just tweak it and seeing

00:05:18,129 --> 00:05:23,469
real time what's going on so I'll show

00:05:19,840 --> 00:05:27,909
you some more examples of this in this

00:05:23,469 --> 00:05:29,469
little demo project we've also got this

00:05:27,909 --> 00:05:31,090
one this is on the memory on the memory

00:05:29,469 --> 00:05:32,319
sticks that you guys have got so if you

00:05:31,090 --> 00:05:34,479
were to install this and run it you'll

00:05:32,319 --> 00:05:36,520
see pretty much this as a starting point

00:05:34,479 --> 00:05:39,430
and here we've just got a little

00:05:36,520 --> 00:05:42,159
animated bunch of circles moving around

00:05:39,430 --> 00:05:43,389
with an algorithm and I can go to the

00:05:42,159 --> 00:05:45,210
code for that by hitting a few code

00:05:43,389 --> 00:05:47,529
it'll show me where it came from

00:05:45,210 --> 00:05:50,979
and we've added some little helpful

00:05:47,529 --> 00:05:53,729
hints here so saying hey try this and so

00:05:50,979 --> 00:05:53,729
there's a background color

00:05:56,669 --> 00:06:02,379
I don't know what that man was going to

00:06:00,009 --> 00:06:05,770
do make some bigger you can have fun

00:06:02,379 --> 00:06:08,020
playing around with that and then once

00:06:05,770 --> 00:06:09,460
we when we got to this point we realized

00:06:08,020 --> 00:06:12,400
this is actually a really great tool for

00:06:09,460 --> 00:06:15,729
beginners because if you're learning C++

00:06:12,400 --> 00:06:18,490
then this is what we can create and here

00:06:15,729 --> 00:06:20,020
is it a space where you can experiment

00:06:18,490 --> 00:06:22,389
and see immediate feedback of what's

00:06:20,020 --> 00:06:26,169
going on so we very quickly coded up a

00:06:22,389 --> 00:06:30,029
little example here this is a live

00:06:26,169 --> 00:06:33,020
console component name of the class and

00:06:30,029 --> 00:06:36,530
if I go to this one

00:06:33,020 --> 00:06:38,729
you'll see this this is the entire code

00:06:36,530 --> 00:06:41,580
that's the whole thing it's it's just a

00:06:38,729 --> 00:06:43,860
UI component but at the top we've

00:06:41,580 --> 00:06:46,080
created a little function called print

00:06:43,860 --> 00:06:49,020
your stuff here which can call a few

00:06:46,080 --> 00:06:51,060
member functions and if you if you so

00:06:49,020 --> 00:06:53,099
you can see the similarity here they've

00:06:51,060 --> 00:06:55,889
got hello world being printed then we

00:06:53,099 --> 00:06:57,509
can see how a world here on the Left so

00:06:55,889 --> 00:07:01,770
if I was to take that out we'd see that

00:06:57,509 --> 00:07:02,759
the stuff on the left would change this

00:07:01,770 --> 00:07:04,349
is just prints and numbers from North

00:07:02,759 --> 00:07:07,620
Zed but if I change that we can see in

00:07:04,349 --> 00:07:08,970
real time what that would do so we've

00:07:07,620 --> 00:07:10,770
actually already had some interest from

00:07:08,970 --> 00:07:12,659
some University departments who teach

00:07:10,770 --> 00:07:15,419
C++ it's saying this would be a great

00:07:12,659 --> 00:07:16,800
container classroom so a beginner can

00:07:15,419 --> 00:07:18,780
just look at the suit work on the syntax

00:07:16,800 --> 00:07:20,880
not have to worry about how to actually

00:07:18,780 --> 00:07:23,400
build that stuff or run it we'll know

00:07:20,880 --> 00:07:27,180
about you know anything other than the

00:07:23,400 --> 00:07:30,990
very basics also in here we've got some

00:07:27,180 --> 00:07:32,759
other demos we have there's a game of

00:07:30,990 --> 00:07:34,620
light breathing which is quite fun cause

00:07:32,759 --> 00:07:38,729
you can change the rules while it's

00:07:34,620 --> 00:07:41,430
running because this is just running any

00:07:38,729 --> 00:07:46,590
code it's there's no restrictions on

00:07:41,430 --> 00:07:50,430
what your code does in so we have things

00:07:46,590 --> 00:07:53,460
like over here we've got sound player

00:07:50,430 --> 00:07:56,909
this one opens up the audio device which

00:07:53,460 --> 00:07:59,270
you break on here and is generating some

00:07:56,909 --> 00:07:59,270
audio

00:08:02,189 --> 00:08:07,479
so if I go to the audio generator here I

00:08:06,009 --> 00:08:15,339
can probably tweak a few parameters and

00:08:07,479 --> 00:08:19,749
make it sound horrible that's just made

00:08:15,339 --> 00:08:21,909
it stop yeah um in what we do a lot of

00:08:19,749 --> 00:08:24,909
in the audio world is designing audio

00:08:21,909 --> 00:08:26,889
algorithms for things it's we we've

00:08:24,909 --> 00:08:28,749
actually got another component which is

00:08:26,889 --> 00:08:30,550
pretty much like an oscilloscope so you

00:08:28,749 --> 00:08:33,669
can see that playing with just one part

00:08:30,550 --> 00:08:35,589
of your deer speed code and see the

00:08:33,669 --> 00:08:37,959
results like live in an oscilloscope

00:08:35,589 --> 00:08:39,849
rather than spending a long time

00:08:37,959 --> 00:08:40,510
changing an algorithm wait for it to

00:08:39,849 --> 00:08:42,880
recompile

00:08:40,510 --> 00:08:50,199
fire up your app and and then blow your

00:08:42,880 --> 00:08:53,459
speakers so internally what's actually

00:08:50,199 --> 00:08:55,540
going on here is we've got the the clang

00:08:53,459 --> 00:08:57,820
we've built into the app and we've

00:08:55,540 --> 00:09:00,250
hacked around so that as it's actually

00:08:57,820 --> 00:09:03,399
pausing the code we also do a few tweaks

00:09:00,250 --> 00:09:05,500
to the abstract syntax tree and there

00:09:03,399 --> 00:09:08,079
are few clever tool little tricks like

00:09:05,500 --> 00:09:10,600
replacing all when I'm moving literals

00:09:08,079 --> 00:09:11,860
around all of those literals have been

00:09:10,600 --> 00:09:14,110
replaced in certainly by global

00:09:11,860 --> 00:09:17,350
variables that we can then link back to

00:09:14,110 --> 00:09:19,779
places within the code and then when it

00:09:17,350 --> 00:09:22,329
sees it that the text cells has changed

00:09:19,779 --> 00:09:24,250
a bit of code that's only within the

00:09:22,329 --> 00:09:25,630
space of a literal then we can just go

00:09:24,250 --> 00:09:28,420
into pokel out the global variable

00:09:25,630 --> 00:09:31,000
without any strips in the program we've

00:09:28,420 --> 00:09:32,529
got then we have also generous of

00:09:31,000 --> 00:09:34,750
boilerplate behind the scenes that

00:09:32,529 --> 00:09:37,360
actually creates the entire window that

00:09:34,750 --> 00:09:38,800
you see over on the left with all of

00:09:37,360 --> 00:09:41,800
these buttons at the bottom as well and

00:09:38,800 --> 00:09:44,019
the whole thing is like it's running in

00:09:41,800 --> 00:09:47,529
this one days actually so even

00:09:44,019 --> 00:09:48,850
the editor around this one we we've got

00:09:47,529 --> 00:09:52,089
some phones for doing some more advanced

00:09:48,850 --> 00:09:54,370
stuff to this I actually first them at

00:09:52,089 --> 00:09:54,790
this product projects about three years

00:09:54,370 --> 00:09:58,720
ago

00:09:54,790 --> 00:10:00,339
and we had a feedback loop in here as

00:09:58,720 --> 00:10:02,709
well so that you could have it could

00:10:00,339 --> 00:10:05,260
actually look at component layouts

00:10:02,709 --> 00:10:06,819
figure out where the code set that

00:10:05,260 --> 00:10:08,769
position and that you drag them around

00:10:06,819 --> 00:10:11,240
the screen was going back and changing

00:10:08,769 --> 00:10:14,480
the position in the code

00:10:11,240 --> 00:10:17,029
very meta way and we're going to revive

00:10:14,480 --> 00:10:18,170
that with a it's much more complex part

00:10:17,029 --> 00:10:22,160
coat so that'll be coming in a few

00:10:18,170 --> 00:10:23,509
months and and dance performing that's

00:10:22,160 --> 00:10:26,029
left and there's always a lot of

00:10:23,509 --> 00:10:37,550
questions when they demo this so any

00:10:26,029 --> 00:10:40,910
questions yeah the question is always

00:10:37,550 --> 00:10:45,769
using OpenGL we're not but we can if I

00:10:40,910 --> 00:10:48,410
open another project here we've got an

00:10:45,769 --> 00:10:50,420
example of that this is I'm hoping now

00:10:48,410 --> 00:10:52,610
the big juice kind of kitchen sink demo

00:10:50,420 --> 00:10:54,559
which has a whole bunch of different

00:10:52,610 --> 00:10:56,839
demos inside it you see it compiling

00:10:54,559 --> 00:10:58,279
here is pretty quick and this is cos is

00:10:56,839 --> 00:11:02,509
compiling the entire juice library now

00:10:58,279 --> 00:11:05,029
and maybe 100 compile units off the demo

00:11:02,509 --> 00:11:07,429
but I'm confident it'll finish quickly

00:11:05,029 --> 00:11:08,569
enough that we can actually see this but

00:11:07,429 --> 00:11:11,300
one of the demos we've got in here is

00:11:08,569 --> 00:11:16,670
OpenGL and it'll happily run it inside

00:11:11,300 --> 00:11:27,350
the window well that's loading any any

00:11:16,670 --> 00:11:29,869
more questions it's early the moment

00:11:27,350 --> 00:11:33,049
we've got some mac version we're in the

00:11:29,869 --> 00:11:34,879
middle of Windows build which we have

00:11:33,049 --> 00:11:37,119
seen some problems with claims window

00:11:34,879 --> 00:11:39,170
supporting them but as soon as that's

00:11:37,119 --> 00:11:40,579
find out then it will be all

00:11:39,170 --> 00:11:43,309
cross-platform juice is completely

00:11:40,579 --> 00:11:46,399
cross-platform we run on execute on them

00:11:43,309 --> 00:11:48,350
OS on Windows Linux iOS Android and

00:11:46,399 --> 00:11:50,389
embedded platforms as well and we're

00:11:48,350 --> 00:11:52,819
probably gonna have bare metal versions

00:11:50,389 --> 00:11:54,679
too soon so this is finished compiling

00:11:52,819 --> 00:12:05,269
out so somewhere in here we've got them

00:11:54,679 --> 00:12:08,420
open to your demo yeah so that's quite

00:12:05,269 --> 00:12:11,769
happily running the an Open GL window

00:12:08,420 --> 00:12:16,839
with our open GL to the rendering engine

00:12:11,769 --> 00:12:16,839
sitting on top of that and

00:12:17,649 --> 00:12:27,410
yeah it's not because we have to take

00:12:25,490 --> 00:12:28,430
control of the entire compile shame

00:12:27,410 --> 00:12:31,310
because we have to mess around with

00:12:28,430 --> 00:12:34,519
these insects tree but it doesn't have

00:12:31,310 --> 00:12:36,649
to be use our editor so what will happen

00:12:34,519 --> 00:12:39,230
is if you've if you've got your project

00:12:36,649 --> 00:12:41,120
open in this running the live Windows

00:12:39,230 --> 00:12:44,180
and you have your other edits are open

00:12:41,120 --> 00:12:46,430
and you hit save on the file it'll it'll

00:12:44,180 --> 00:12:47,600
diff it'll see the changes do this and

00:12:46,430 --> 00:12:49,930
you'll still get all the very fast

00:12:47,600 --> 00:12:49,930
update

00:12:50,050 --> 00:13:01,880
yeah well be the windows on the Left are

00:12:59,930 --> 00:13:03,380
running in a child process so if that

00:13:01,880 --> 00:13:04,610
dies we just start it up again I think

00:13:03,380 --> 00:13:05,990
it's died at the moment so yeah I can

00:13:04,610 --> 00:13:13,130
restart and it should just come back

00:13:05,990 --> 00:13:13,959
home anymore any more questions we have

00:13:13,130 --> 00:13:22,730
one minute left

00:13:13,959 --> 00:13:23,870
yeah can we the question is can we

00:13:22,730 --> 00:13:29,750
integrate it into the running

00:13:23,870 --> 00:13:31,760
application it we'd involve putting the

00:13:29,750 --> 00:13:33,890
whole of crankin LVM into the running

00:13:31,760 --> 00:13:36,529
application which could be done I mean

00:13:33,890 --> 00:13:38,000
this could all be encapsulated in a DLL

00:13:36,529 --> 00:13:41,060
which you link into your application and

00:13:38,000 --> 00:13:44,360
throw C++ at it and run yeah that could

00:13:41,060 --> 00:13:46,100
be done but I'm not sure what this would

00:13:44,360 --> 00:13:50,360
give you over just using our VM itself

00:13:46,100 --> 00:13:51,770
for that it's it depends where you want

00:13:50,360 --> 00:13:59,180
to do really whether that would be

00:13:51,770 --> 00:14:01,459
sensible anyone yeah when does it decide

00:13:59,180 --> 00:14:03,050
to recompile the code um it has a few

00:14:01,459 --> 00:14:06,440
different modes what we found most

00:14:03,050 --> 00:14:08,720
useful is it has a little timer so if

00:14:06,440 --> 00:14:13,510
you stop typing for more than half a

00:14:08,720 --> 00:14:13,510
second it kicks moku self compilation

00:14:14,500 --> 00:14:17,540
yeah you could be in the middle of

00:14:16,250 --> 00:14:19,070
modifying it but we have another mode

00:14:17,540 --> 00:14:21,920
you can turn that off and have like a

00:14:19,070 --> 00:14:24,980
build button that forces it to recompile

00:14:21,920 --> 00:14:26,300
or just turn it off altogether and so

00:14:24,980 --> 00:14:28,040
that all of them we have a few different

00:14:26,300 --> 00:14:31,029
modes we're experimenting with but it's

00:14:28,040 --> 00:14:31,029
really easy to change that

00:14:31,240 --> 00:14:42,130
thirty seconds anyone else okay good

00:14:39,410 --> 00:14:42,130

YouTube URL: https://www.youtube.com/watch?v=pKvt5_FhziI


