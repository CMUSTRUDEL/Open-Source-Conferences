Title: CppCon 2019: Daniel Hanson “Leveraging Modern C++ in Quantitative Finance”
Publication date: 2019-09-27
Playlist: CppCon 2019
Description: 
	http://CppCon.org
—
Discussion & Comments: https://www.reddit.com/r/cpp/
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2019
—
Starting with C++11, new features were introduced into the language and Standard Library that were immediately useful for quantitative developers in financial trading and risk management, yet not very much about these applications seems to have been presented at C++ conferences. Even recently published textbooks for C++ courses in finance still lag in covering these powerful new tools. Welcome additions such as distributional random number generation, task-based concurrency, and lambda expressions provide express lanes to coding necessary components of financial libraries that were once far more time consuming and less reliable to implement. Furthermore, beginning with C++17, parallel STL algorithms have become available to speed up routine computations, typically by simply adding an additional parameter.

In addition, Statistical Distributions, Circular Buffers for time series data, MultiArrays for option pricing lattices, and Quadrature for numerical integration are well-designed Boost libraries that add to an increasingly robust arsenal at the quant developer’s disposal.

The presentation will close with a review of how C++ is perceived in quantitative applications work – not always positive unfortunately – and proposals for overcoming these challenges, specifically by emphasizing and building on the progress made since C++11, and further modernizing math features in Boost.

Quantitative developers in both finance and other technical fields will see how to quickly leverage modern and powerful mathematical tools in C++ with minimal overhead to get on with the job quickly. Members of the Committee and larger C++ community should come away with a clearer view of quantitative developers’ demands for the language, and ideas for growing C++’s presence in the rapidly growing domain of computational finance in particular, and mathematical programming in general.
— 
Daniel Hanson
University of Washington, Applied Mathematics
Lecturer

Daniel Hanson spent 24 years in quantitative development in finance, primarily with C++ implementation of option pricing and portfolio risk models, and related library development. He now holds a full-time lecturer position in the Department of Applied Mathematics at the University of Washington, teaching quantitative development courses in the Computational Finance & Risk Management (CFRM) MSc program. This includes intermediate and advanced classes in computational C++, and mentoring students in Google Summer of Code projects involving implementation of mathematical models in C++ and R.
—
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
YouTube URL: https://www.youtube.com/watch?v=NeGO8lWDgyo


