Title: CppCon 2017: Michael Park “MPark.Patterns: Pattern Matching in C++”
Publication date: 2017-10-13
Playlist: CppCon 2017
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2017
—
Pattern matching brings a declarative approach to destructuring and inspecting complex data types. It’s a very powerful abstraction provided by many programming languages such as Haskell and OCaml, and more recently, Rust, Scala, and Swift. 

We’ll see a glimpse of pattern matching in C++17 and their current limitations through features such as structured bindings, `apply`, and `visit`. We’ll then jump into MPark.Patterns, an experimental pattern matching library for C++. The following is an example of `fizzbuzz` written with the library: 

void fizzbuzz() { 
   for (int i = 1; i ＜= 100; ++i) { 
    using namespace mpark::patterns; 
    match(i % 3, i % 5)( 
      pattern(0, 0) = [] { std::cout ＜＜ "fizzbuzz\n"; }, 
      pattern(0, _) = [] { std::cout ＜＜ "fizz\n"; }, 
      pattern(_, 0) = [] { std::cout ＜＜ "buzz\n"; }, 
      pattern(_, _) = [i] { std::cout ＜＜ i ＜＜ '\n'; }); 
  } 
} 

We’ll see many more examples like this that lead to simpler, declarative code that focuses on the desired shape/state of the data, rather than a sequence of imperative code that tries to inspect the data in piecemeal. 

The goal of the library, and the talk is to gain experience and exposure to pattern matching in order to potentially help guide the design of a language-based pattern matching mechanism.
— 
Michael Park: Mesosphere, Software Engineer

I’m a committer for the Apache Mesos project, and work as a Distributed Systems Engineer at Mesosphere. Within the realm of computer science, I’m very much intrigued by language design, compiler construction, and distributed systems. I’m also an active member of the ISO C++ Standards Committee.
—
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
YouTube URL: https://www.youtube.com/watch?v=HaZ1UQXnuC8


