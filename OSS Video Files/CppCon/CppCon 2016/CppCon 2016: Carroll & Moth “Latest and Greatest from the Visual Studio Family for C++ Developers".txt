Title: CppCon 2016: Carroll & Moth “Latest and Greatest from the Visual Studio Family for C++ Developers"
Publication date: 2016-10-01
Playlist: CppCon 2016
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/cppcon/cppcon2016
—
In this session, we’ll cover what’s new in the last year in the Visual Studio updates and our cross platform editor and debugger, VS Code. We’ll talk about and demo the features that are coming in the next version of Visual Studio and VS Code. This will include our ongoing roadmap for compiler and library conformance, major (and massive) improvements in performance and code quality and how to get the most out of it. We'll also cover cross platform development including Linux, Mac, iOS, and Android, and demo all the latest productivity features for C++ developers.
— 
Steve Carroll
Visual C++ Development Manager, Microsoft Corporation
Steve Carroll is the dev manager for the Visual C++ team and previously the dev manager for the Visual Studio debuggers and profilers.

Daniel Moth
Program Manager, Microsoft
Visual Studio
—
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:00,000 --> 00:00:05,700
so hi everyone welcome to this session

00:00:03,449 --> 00:00:08,040
on the visual studio family I would like

00:00:05,700 --> 00:00:10,080
to thank you for choosing to invest the

00:00:08,040 --> 00:00:11,700
next hour of your lives in this room

00:00:10,080 --> 00:00:14,429
here with us we hope you get a good

00:00:11,700 --> 00:00:16,920
return on that my name is Daniel moth

00:00:14,429 --> 00:00:19,140
I've been at Microsoft for just over 10

00:00:16,920 --> 00:00:21,240
years I've been on a few teams more

00:00:19,140 --> 00:00:23,580
recently the debugger and profilers team

00:00:21,240 --> 00:00:26,310
and I've only been on the C++ team since

00:00:23,580 --> 00:00:27,990
January so i'm very new here and that is

00:00:26,310 --> 00:00:31,230
why my team didn't trust me to give this

00:00:27,990 --> 00:00:33,420
talk on my own which is why you see me

00:00:31,230 --> 00:00:37,530
the new face the new guy but you've also

00:00:33,420 --> 00:00:39,480
got Steve the old guy not so that's so

00:00:37,530 --> 00:00:41,370
how long have you been all right so I've

00:00:39,480 --> 00:00:43,710
been on the C++ team for two years

00:00:41,370 --> 00:00:45,809
exactly I know this because my very

00:00:43,710 --> 00:00:48,510
first day on the job the week was this

00:00:45,809 --> 00:00:51,030
week of CP pecan and so there was like

00:00:48,510 --> 00:00:53,520
nobody there which was really concerning

00:00:51,030 --> 00:00:55,590
so the next year they let me come in and

00:00:53,520 --> 00:00:56,969
do the talk here at CP pecan and so I

00:00:55,590 --> 00:00:59,489
think you're only about nine months in

00:00:56,969 --> 00:01:00,510
so are you sure you up for this well

00:00:59,489 --> 00:01:03,660
obviously I know that's why you're here

00:01:00,510 --> 00:01:06,479
right solutely I on it so the way we've

00:01:03,660 --> 00:01:08,729
we've kind of split this session is

00:01:06,479 --> 00:01:10,619
Steve will do all the demos I will do

00:01:08,729 --> 00:01:12,330
all the slides and Steve will also take

00:01:10,619 --> 00:01:13,890
all the questions so you better have

00:01:12,330 --> 00:01:15,479
some good ones for you so since I'm

00:01:13,890 --> 00:01:17,909
doing the slides you can you know go to

00:01:15,479 --> 00:01:20,700
casino something not worried questions

00:01:17,909 --> 00:01:22,439
the reason the reason we we split it

00:01:20,700 --> 00:01:23,610
this way is because originally i don't

00:01:22,439 --> 00:01:25,259
if you can tell from my accent I'm from

00:01:23,610 --> 00:01:26,729
greece and in greece we have a

00:01:25,259 --> 00:01:28,650
characteristic we can speak really fast

00:01:26,729 --> 00:01:30,689
so this is good news for you because i

00:01:28,650 --> 00:01:32,430
can pack a lot of contents a lot of

00:01:30,689 --> 00:01:36,659
slides in this one hour so that's that's

00:01:32,430 --> 00:01:38,250
what we're going to do so if we if I saw

00:01:36,659 --> 00:01:40,829
fly through those slides you kind of

00:01:38,250 --> 00:01:42,299
missed something don't worry because you

00:01:40,829 --> 00:01:44,610
just need to write down this URL which

00:01:42,299 --> 00:01:47,369
is a blog and we will upload the slides

00:01:44,610 --> 00:01:48,990
to that blog later on and during the

00:01:47,369 --> 00:01:51,119
slides will be a whole bunch of URLs

00:01:48,990 --> 00:01:52,259
pointers to various things so you don't

00:01:51,119 --> 00:01:53,909
have to write all of those down just

00:01:52,259 --> 00:01:57,060
write this one down and then you'll get

00:01:53,909 --> 00:01:59,969
everything in one package so how have we

00:01:57,060 --> 00:02:02,490
structured this talk we've structured it

00:01:59,969 --> 00:02:04,439
in three parts so in the first part we

00:02:02,490 --> 00:02:06,689
will talk about what we call the toolset

00:02:04,439 --> 00:02:08,220
so that'll be the compiler the front and

00:02:06,689 --> 00:02:10,110
the back end the link of the library is

00:02:08,220 --> 00:02:12,990
that whole package and we'll do that in

00:02:10,110 --> 00:02:14,790
about 15 minutes just using slides

00:02:12,990 --> 00:02:16,530
then we'll go to the second part which

00:02:14,790 --> 00:02:18,570
is all about the visual studio ID and

00:02:16,530 --> 00:02:20,430
the visual studio code editor and that

00:02:18,570 --> 00:02:21,780
will be the meatiest the largest part of

00:02:20,430 --> 00:02:24,870
the session and that's where Steve is

00:02:21,780 --> 00:02:26,280
going to do most of his demos and then

00:02:24,870 --> 00:02:28,080
after that we'll get to the third

00:02:26,280 --> 00:02:29,730
section which will be the shortest where

00:02:28,080 --> 00:02:32,010
we look at what we call workloads which

00:02:29,730 --> 00:02:33,210
is basically the scenarios the types of

00:02:32,010 --> 00:02:34,890
apps that you build the types of

00:02:33,210 --> 00:02:36,630
platforms that your target and just see

00:02:34,890 --> 00:02:38,940
what's new specifically to those

00:02:36,630 --> 00:02:40,230
workloads so that's kind of like how we

00:02:38,940 --> 00:02:41,850
are thinking of doing this does that

00:02:40,230 --> 00:02:43,860
work for everyone can we proceed on that

00:02:41,850 --> 00:02:47,670
basis good because that's the only talk

00:02:43,860 --> 00:02:50,570
we brought so before we get started

00:02:47,670 --> 00:02:52,590
though I do have three targeted

00:02:50,570 --> 00:02:54,540
advertisements or advertisements

00:02:52,590 --> 00:02:56,160
depending on your upbringing so these

00:02:54,540 --> 00:02:59,370
three ads that targeted so you should

00:02:56,160 --> 00:03:01,800
like them so first targeted ad now as

00:02:59,370 --> 00:03:04,650
you as you probably know we don't have a

00:03:01,800 --> 00:03:06,600
great library acquisition story on

00:03:04,650 --> 00:03:07,890
Windows I like package managers and

00:03:06,600 --> 00:03:09,780
things like that you may have seen on

00:03:07,890 --> 00:03:11,970
other platforms which is why we're

00:03:09,780 --> 00:03:14,280
experimenting with a solution and on

00:03:11,970 --> 00:03:19,710
github so you can go to github.com /

00:03:14,280 --> 00:03:22,470
microsoft / vc PKG for vc package to use

00:03:19,710 --> 00:03:24,750
this or even join and contribute this is

00:03:22,470 --> 00:03:26,460
a completely open source project it has

00:03:24,750 --> 00:03:28,320
nothing to do with our compilers or

00:03:26,460 --> 00:03:31,140
visual studio or anything like that it's

00:03:28,320 --> 00:03:34,050
applicable to any C++ project on Windows

00:03:31,140 --> 00:03:36,750
that depends on a third-party libraries

00:03:34,050 --> 00:03:39,030
we just announced this today I think so

00:03:36,750 --> 00:03:42,240
go check that out this is also a good

00:03:39,030 --> 00:03:43,830
time to mention that tomorrow at Tuesday

00:03:42,240 --> 00:03:46,020
and on Wednesday we will have a

00:03:43,830 --> 00:03:48,150
microsoft booth basically a table out in

00:03:46,020 --> 00:03:49,740
the hallway where you can come and ask

00:03:48,150 --> 00:03:53,810
questions about this or anything else

00:03:49,740 --> 00:03:56,220
that we're doing at Microsoft so second

00:03:53,810 --> 00:03:59,550
targeted ads this will speaks for itself

00:03:56,220 --> 00:04:01,230
if you go to a khador ms / silicon

00:03:59,550 --> 00:04:04,680
you'll be able to take a developer

00:04:01,230 --> 00:04:06,540
survey for a chance to win an Xbox one s

00:04:04,680 --> 00:04:08,700
we will you know physically literally

00:04:06,540 --> 00:04:12,209
give that out this week here at c vb

00:04:08,700 --> 00:04:14,220
korn at the end on friday so please go

00:04:12,209 --> 00:04:17,010
and take that survey we do develop a

00:04:14,220 --> 00:04:19,350
service all the time and we do those so

00:04:17,010 --> 00:04:20,760
we can improve our products for you so

00:04:19,350 --> 00:04:22,770
even if you don't care about the xbox

00:04:20,760 --> 00:04:24,630
please go and take the developer survey

00:04:22,770 --> 00:04:26,220
and help influence our direction to

00:04:24,630 --> 00:04:29,760
where you think we should be

00:04:26,220 --> 00:04:31,740
going and then the third and last slide

00:04:29,760 --> 00:04:33,450
that i'll put up before we get into the

00:04:31,740 --> 00:04:36,150
talk for real is a list of the other

00:04:33,450 --> 00:04:38,610
talks that we have here it's epic on by

00:04:36,150 --> 00:04:41,250
members of the microsoft team which are

00:04:38,610 --> 00:04:43,140
these up here now as you know we

00:04:41,250 --> 00:04:45,870
participate enthusiastically we invest

00:04:43,140 --> 00:04:47,430
heavily in the c++ standards we send you

00:04:45,870 --> 00:04:49,710
know around eight people to each of the

00:04:47,430 --> 00:04:53,070
three meetings every year we review

00:04:49,710 --> 00:04:54,990
proposals we make proposals we implement

00:04:53,070 --> 00:04:56,970
early proposals in our compiler to

00:04:54,990 --> 00:04:58,650
validate that they really would work

00:04:56,970 --> 00:05:00,480
with large code bases and that's our

00:04:58,650 --> 00:05:03,030
duty since we represent such a large

00:05:00,480 --> 00:05:04,620
percentage of C++ developers as users of

00:05:03,030 --> 00:05:06,090
the compiler and all of that is

00:05:04,620 --> 00:05:10,100
reflected in the talks that you see up

00:05:06,090 --> 00:05:13,500
there on a tuple or modules co routines

00:05:10,100 --> 00:05:15,510
and and so on we also make contributions

00:05:13,500 --> 00:05:17,340
to the libraries if you were in the

00:05:15,510 --> 00:05:19,620
keynote you had beyond talked about for

00:05:17,340 --> 00:05:20,730
example the gsl the guidelines support

00:05:19,620 --> 00:05:22,530
library will make significant

00:05:20,730 --> 00:05:24,150
contributions to the proposal and the

00:05:22,530 --> 00:05:26,660
public repose for range be three which

00:05:24,150 --> 00:05:29,640
is what the iterator haiku talk is about

00:05:26,660 --> 00:05:31,800
so that's kind of like the the kind of

00:05:29,640 --> 00:05:33,570
talks that you see here and in fact if

00:05:31,800 --> 00:05:35,430
you look at all of them except for the

00:05:33,570 --> 00:05:37,500
last one all the others have nothing to

00:05:35,430 --> 00:05:39,600
do with any Microsoft products this is

00:05:37,500 --> 00:05:41,340
purely participating in the community

00:05:39,600 --> 00:05:43,320
and the understand that the only one

00:05:41,340 --> 00:05:45,000
let's do with our tooling is the last

00:05:43,320 --> 00:05:47,100
one where which is the one that you're

00:05:45,000 --> 00:05:49,500
in right now so let's go and talk about

00:05:47,100 --> 00:05:51,030
our tooling so by a show of hands maybe

00:05:49,500 --> 00:05:53,160
an obvious question but how many people

00:05:51,030 --> 00:05:56,729
here use the microsoft visual c++

00:05:53,160 --> 00:05:58,500
compiler msvc okay that's you don't use

00:05:56,729 --> 00:06:00,570
it James okay I'm just checking all

00:05:58,500 --> 00:06:02,700
right so that's that's most of you so

00:06:00,570 --> 00:06:04,560
you probably want to know how we're

00:06:02,700 --> 00:06:07,050
doing on a primary goal which is to

00:06:04,560 --> 00:06:09,780
achieve standards conformance so here is

00:06:07,050 --> 00:06:11,550
a slide with a bunch of green boxes

00:06:09,780 --> 00:06:13,740
which is the progress that we've made

00:06:11,550 --> 00:06:16,050
toward standards conformance with visual

00:06:13,740 --> 00:06:17,940
studio 2015 RT em release to

00:06:16,050 --> 00:06:20,940
manufacturing which is the release we

00:06:17,940 --> 00:06:24,510
had last summer and steve was here last

00:06:20,940 --> 00:06:27,300
year talking about all of these so if

00:06:24,510 --> 00:06:29,100
you're not on visual studio 2015 RT m

00:06:27,300 --> 00:06:31,380
this is what you're missing out so you

00:06:29,100 --> 00:06:33,479
should go to the latest so you can get

00:06:31,380 --> 00:06:36,090
all this but we haven't sat still since

00:06:33,479 --> 00:06:39,150
then we've released since that time

00:06:36,090 --> 00:06:41,310
Visual Studio 2015 update one

00:06:39,150 --> 00:06:44,250
vs 2015 update 2 and more recently

00:06:41,310 --> 00:06:46,080
update 3 and usually we do them the

00:06:44,250 --> 00:06:48,240
majority of the of the churn of the

00:06:46,080 --> 00:06:50,010
features in the rtm version by actually

00:06:48,240 --> 00:06:51,870
even in the updates you'll see from the

00:06:50,010 --> 00:06:54,120
blue boxes that we're making progress

00:06:51,870 --> 00:06:56,220
towards that standard conformance now

00:06:54,120 --> 00:06:58,530
beyond the updates we've also released

00:06:56,220 --> 00:07:00,480
previews of the next version of visual

00:06:58,530 --> 00:07:04,290
studio the one we are temporarily

00:07:00,480 --> 00:07:06,180
calling visual studio 15 and after all

00:07:04,290 --> 00:07:08,940
the previews are done then there'll be a

00:07:06,180 --> 00:07:10,500
release candidate and RC then on rtm and

00:07:08,940 --> 00:07:13,320
then updates the usual visual studio

00:07:10,500 --> 00:07:15,540
wave so you should be delighted to know

00:07:13,320 --> 00:07:17,160
that as part of that visual studio 15

00:07:15,540 --> 00:07:19,740
wave we're going to go and tackle all

00:07:17,160 --> 00:07:25,080
the orange boxes that you see up there

00:07:19,740 --> 00:07:28,440
across C++ 11 14 and 17 so wherever you

00:07:25,080 --> 00:07:30,510
see two asterisks that means that you

00:07:28,440 --> 00:07:31,920
have to throw the C++ latest compiler

00:07:30,510 --> 00:07:34,170
switch which we've blogged about and

00:07:31,920 --> 00:07:36,180
which I will touch on on the next line

00:07:34,170 --> 00:07:37,800
so in case it's not clear the big deal

00:07:36,180 --> 00:07:40,620
here is that we're communicating the

00:07:37,800 --> 00:07:42,930
next year we will be standard conformant

00:07:40,620 --> 00:07:44,970
up to c plus plus 14 plus more as you

00:07:42,930 --> 00:07:48,390
see up here on the slide so that's

00:07:44,970 --> 00:07:49,950
that's pretty good we think now what we

00:07:48,390 --> 00:07:52,320
don't have here on the slide is c plus

00:07:49,950 --> 00:07:55,230
plus 98 because I couldn't fit that on

00:07:52,320 --> 00:07:56,990
the slide so I left it off no on a more

00:07:55,230 --> 00:08:00,000
serious note we know that you care about

00:07:56,990 --> 00:08:02,250
the two-phase name lookup feature from

00:08:00,000 --> 00:08:04,680
C++ 98 I'm seeing a couple of people

00:08:02,250 --> 00:08:08,180
nodding so and a few people nodding off

00:08:04,680 --> 00:08:10,830
as well so so I would suppose plus 98

00:08:08,180 --> 00:08:12,240
and the two-phase name lookup we're

00:08:10,830 --> 00:08:14,280
trying to get there with what we call

00:08:12,240 --> 00:08:17,160
the compiler rejuvenation we were trying

00:08:14,280 --> 00:08:20,820
to modernize what is a very mature code

00:08:17,160 --> 00:08:22,140
base using an AST based parser and we're

00:08:20,820 --> 00:08:24,300
excited to announce that we will

00:08:22,140 --> 00:08:27,980
actually i could fit that up there get

00:08:24,300 --> 00:08:29,820
to phase name lookup as well in here so

00:08:27,980 --> 00:08:33,210
Steve you said there would be more

00:08:29,820 --> 00:08:34,650
excited with this like if we've have to

00:08:33,210 --> 00:08:37,950
beg for it you know if we don't want

00:08:34,650 --> 00:08:39,780
that so you can see that two phase name

00:08:37,950 --> 00:08:41,310
lookup has one asterisk on it it's kind

00:08:39,780 --> 00:08:42,570
of like you know raw eggs that you see

00:08:41,310 --> 00:08:44,700
on the menu where they have the answer's

00:08:42,570 --> 00:08:46,770
no doesn't matter I'll keep them to

00:08:44,700 --> 00:08:48,030
myself so the reason it has an asterisk

00:08:46,770 --> 00:08:49,620
is because you have to use the

00:08:48,030 --> 00:08:51,030
permissive minus switch so let's talk a

00:08:49,620 --> 00:08:52,860
little bit about that so this is

00:08:51,030 --> 00:08:54,720
basically a compiler option that

00:08:52,860 --> 00:08:57,899
puts the compiler in a mode where we

00:08:54,720 --> 00:09:01,380
will honor and enforce all pre C++ 11

00:08:57,899 --> 00:09:02,850
standards of course as the that has the

00:09:01,380 --> 00:09:06,300
side effect that you can potentially

00:09:02,850 --> 00:09:08,910
break all C++ tablet code which is why

00:09:06,300 --> 00:09:11,820
it is off by default so we need to give

00:09:08,910 --> 00:09:13,589
a chance to the ecosystem including all

00:09:11,820 --> 00:09:15,329
the code bases but the public headers

00:09:13,589 --> 00:09:17,070
the open source libraries to catch up

00:09:15,329 --> 00:09:19,230
with the idea that the Microsoft

00:09:17,070 --> 00:09:21,930
compiler does not enable by default all

00:09:19,230 --> 00:09:24,930
the Microsoft extensions and macro

00:09:21,930 --> 00:09:26,730
specific behaviors and we do want to

00:09:24,930 --> 00:09:28,649
tell you on by default at some point and

00:09:26,730 --> 00:09:31,709
until that point we'll continue adding

00:09:28,649 --> 00:09:34,800
to this mode this is good because this

00:09:31,709 --> 00:09:36,930
allows you to upgrade without fear that

00:09:34,800 --> 00:09:38,850
by default we will break your code while

00:09:36,930 --> 00:09:40,920
putting you in control at the pace at

00:09:38,850 --> 00:09:44,700
which you want update your code and go

00:09:40,920 --> 00:09:47,910
and flip the switch for you so in that

00:09:44,700 --> 00:09:50,910
kind of you know theme of switches we

00:09:47,910 --> 00:09:53,040
also have the standard C++ 14 which is

00:09:50,910 --> 00:09:55,410
on by default and that will give you the

00:09:53,040 --> 00:09:57,990
latest standard and we don't have a

00:09:55,410 --> 00:10:00,449
switch for C++ 17 yet because that is

00:09:57,990 --> 00:10:03,209
not finalized yet but we do have the

00:10:00,449 --> 00:10:04,470
standard C++ latest where we implement

00:10:03,209 --> 00:10:06,540
the technical specifications and

00:10:04,470 --> 00:10:08,940
anything that is not part of a finalized

00:10:06,540 --> 00:10:11,010
standard so we're talking about this

00:10:08,940 --> 00:10:13,410
oldest conformance what is the impact

00:10:11,010 --> 00:10:16,440
that has well beyond your own code bases

00:10:13,410 --> 00:10:18,510
you also rely on libraries so one

00:10:16,440 --> 00:10:20,010
measure is the some libraries that

00:10:18,510 --> 00:10:22,560
previously couldn't work with a compiler

00:10:20,010 --> 00:10:26,670
and now can and we've got some examples

00:10:22,560 --> 00:10:28,890
of those coming up on their slide now

00:10:26,670 --> 00:10:31,199
the reality is that some large

00:10:28,890 --> 00:10:32,880
cross-platform code bases have

00:10:31,199 --> 00:10:34,980
implemented workarounds for our compiler

00:10:32,880 --> 00:10:36,390
so because of our conformance gaps and

00:10:34,980 --> 00:10:38,250
now as we catching up with conformance

00:10:36,390 --> 00:10:40,560
we're going and working with those

00:10:38,250 --> 00:10:43,290
library owners had to remove those hacks

00:10:40,560 --> 00:10:45,930
the canonical example being boost where

00:10:43,290 --> 00:10:48,029
they had no less than what is it six

00:10:45,930 --> 00:10:49,589
pound defines and as you can see on the

00:10:48,029 --> 00:10:51,390
slide we're removing four of those if

00:10:49,589 --> 00:10:52,980
you're curious the other two one is on

00:10:51,390 --> 00:10:55,019
to phase name lookup that we touched on

00:10:52,980 --> 00:10:57,750
and the other one is mapped to a few

00:10:55,019 --> 00:11:01,589
bugs that we will fix by the next

00:10:57,750 --> 00:11:03,690
version of visual studio so that's kind

00:11:01,589 --> 00:11:05,550
of the conformance portion if you like

00:11:03,690 --> 00:11:06,270
as now that we're catching up to that

00:11:05,550 --> 00:11:08,130
we're

00:11:06,270 --> 00:11:09,870
so looking at what other investments we

00:11:08,130 --> 00:11:12,360
want to be making in the inner compiler

00:11:09,870 --> 00:11:15,120
as such as code analysis but also

00:11:12,360 --> 00:11:17,040
compiler Diagnostics of fixing improving

00:11:15,120 --> 00:11:19,410
the compiler errors so you seen two

00:11:17,040 --> 00:11:22,230
examples up there of the Diagnostics

00:11:19,410 --> 00:11:24,060
carrot which allows you to see not only

00:11:22,230 --> 00:11:25,530
what line the error occurred on but

00:11:24,060 --> 00:11:28,320
exactly which column so you can pinpoint

00:11:25,530 --> 00:11:30,750
exactly where the issue is now we're not

00:11:28,320 --> 00:11:33,420
sharing this as some a huge milestone or

00:11:30,750 --> 00:11:34,830
innovation this is purely to indicate to

00:11:33,420 --> 00:11:36,750
you the direction to which we're going

00:11:34,830 --> 00:11:41,160
to start and going next and I hope you

00:11:36,750 --> 00:11:43,170
like that direction now switching gears

00:11:41,160 --> 00:11:45,810
from the kind of front-end compiler more

00:11:43,170 --> 00:11:47,700
to the back ends on code generation and

00:11:45,810 --> 00:11:49,320
we have blogged in depth and actually

00:11:47,700 --> 00:11:51,780
did the channel 9 video and going native

00:11:49,320 --> 00:11:54,270
as well about the new essay based

00:11:51,780 --> 00:11:56,280
optimizer and what I have here on the

00:11:54,270 --> 00:11:58,830
slide i will just making you aware of it

00:11:56,280 --> 00:12:01,830
is an example of the code size savings

00:11:58,830 --> 00:12:04,080
that you have with code before and with

00:12:01,830 --> 00:12:06,120
and without using the new optimizer of

00:12:04,080 --> 00:12:07,950
course you care about not just code size

00:12:06,120 --> 00:12:10,740
but also called performance and we're

00:12:07,950 --> 00:12:12,390
seeing some early wins in some parts of

00:12:10,740 --> 00:12:13,980
some benchmarks that were sharing up

00:12:12,390 --> 00:12:16,050
there this will be an error going to

00:12:13,980 --> 00:12:18,150
invest more heavily in the next release

00:12:16,050 --> 00:12:20,550
of visual studio so you should expect to

00:12:18,150 --> 00:12:23,370
see more they're moving from performance

00:12:20,550 --> 00:12:25,800
to reliability we have what we call the

00:12:23,370 --> 00:12:27,930
real world code examples in our labs

00:12:25,800 --> 00:12:30,360
these are really large code bases that

00:12:27,930 --> 00:12:32,370
we build every single day after all the

00:12:30,360 --> 00:12:34,260
check-ins going to violate it that we're

00:12:32,370 --> 00:12:35,850
not breaking anything and the first

00:12:34,260 --> 00:12:37,350
bullet that you're seeing up there with

00:12:35,850 --> 00:12:38,850
windows and so on is kind of what we've

00:12:37,350 --> 00:12:41,010
traditionally been using which has been

00:12:38,850 --> 00:12:42,420
very good for us but now with the second

00:12:41,010 --> 00:12:43,890
bullet over the last year you can see

00:12:42,420 --> 00:12:46,260
we're adding more from the community

00:12:43,890 --> 00:12:49,140
more open source code bases in there so

00:12:46,260 --> 00:12:51,060
this is two positive effects one is that

00:12:49,140 --> 00:12:53,130
it makes our compiler more reliable and

00:12:51,060 --> 00:12:54,870
more robust the other as I mentioned at

00:12:53,130 --> 00:12:57,480
the top of this talk we do implement

00:12:54,870 --> 00:12:59,760
early proposals to the standards so this

00:12:57,480 --> 00:13:02,160
gives us a good way to catch any a Down

00:12:59,760 --> 00:13:04,740
level unwanted side effects so this is

00:13:02,160 --> 00:13:06,750
all goodness if you have a real world

00:13:04,740 --> 00:13:08,490
code a large code base that you think we

00:13:06,750 --> 00:13:10,410
should be including let us know and

00:13:08,490 --> 00:13:13,230
we'll consider that as well and then

00:13:10,410 --> 00:13:15,960
finally how many people here and you use

00:13:13,230 --> 00:13:19,350
a turn on the control flow guards option

00:13:15,960 --> 00:13:19,740
connect yeah so that's actually for

00:13:19,350 --> 00:13:22,020
people

00:13:19,740 --> 00:13:24,360
that's not a house for well all of you

00:13:22,020 --> 00:13:27,570
should so this is a security feature

00:13:24,360 --> 00:13:30,240
helps mitigate attacks in your code and

00:13:27,570 --> 00:13:32,430
all of Windows builds with this turned

00:13:30,240 --> 00:13:34,770
on over the last years and it helps a

00:13:32,430 --> 00:13:36,150
lot we've done a blog post in depth if

00:13:34,770 --> 00:13:37,800
you want to go and look at it all i

00:13:36,150 --> 00:13:40,440
wanted to signal here is that we

00:13:37,800 --> 00:13:43,920
continue to invest in secure code

00:13:40,440 --> 00:13:45,360
generation and then the last slide here

00:13:43,920 --> 00:13:46,800
is going to be about build throughput

00:13:45,360 --> 00:13:49,560
which we know you care about as you go

00:13:46,800 --> 00:13:51,510
and work daily in your edits and build

00:13:49,560 --> 00:13:53,340
debug a phase you want that building

00:13:51,510 --> 00:13:56,940
phase to be as short as possible so you

00:13:53,340 --> 00:13:58,920
can be more productive and turn things

00:13:56,940 --> 00:14:01,020
faster every day so we have done

00:13:58,920 --> 00:14:02,670
improvements in our front end and our

00:14:01,020 --> 00:14:04,410
back ends but the improvements you're

00:14:02,670 --> 00:14:08,550
going to feel the most are in the linker

00:14:04,410 --> 00:14:10,920
so they get their gains of 2 to 4 X in

00:14:08,550 --> 00:14:12,090
that linking phase which dominates when

00:14:10,920 --> 00:14:13,350
you're building and when you just edit

00:14:12,090 --> 00:14:15,750
something and build again before you

00:14:13,350 --> 00:14:18,300
debug by using specifically the debug

00:14:15,750 --> 00:14:20,580
fast link option so that is off by

00:14:18,300 --> 00:14:23,220
default in Visual Studio 2015 so go turn

00:14:20,580 --> 00:14:24,960
that on in Visual Studio 2015 update 3

00:14:23,220 --> 00:14:26,700
and see what gains you get over there

00:14:24,960 --> 00:14:29,130
and then the good news is that with the

00:14:26,700 --> 00:14:31,260
next version with visual studio 15 where

00:14:29,130 --> 00:14:34,080
a turning on by default so everybody

00:14:31,260 --> 00:14:36,210
will feel that and then be were actually

00:14:34,080 --> 00:14:38,400
improving another thirty percent on top

00:14:36,210 --> 00:14:40,080
of those games so this is is really good

00:14:38,400 --> 00:14:42,150
stuff this is performance difference you

00:14:40,080 --> 00:14:44,250
will feel now beyond what we are doing

00:14:42,150 --> 00:14:48,240
we also have partners that work with us

00:14:44,250 --> 00:14:50,160
in this space one of them is Incredibles

00:14:48,240 --> 00:14:52,290
and incredibles they sell these

00:14:50,160 --> 00:14:54,600
extensions so incredible has this

00:14:52,290 --> 00:14:56,760
extension that improves by ten twenty

00:14:54,600 --> 00:14:58,800
percent across the board or build

00:14:56,760 --> 00:15:00,840
throughput by paralyzing the builds and

00:14:58,800 --> 00:15:03,300
the good thing here is we've negotiated

00:15:00,840 --> 00:15:05,850
a deal with them where you can get a

00:15:03,300 --> 00:15:08,670
free version of their extension with a

00:15:05,850 --> 00:15:11,520
limitation being it only uses eight

00:15:08,670 --> 00:15:13,050
cores so if you're okay with our

00:15:11,520 --> 00:15:15,150
limitation I cannot imagine why you

00:15:13,050 --> 00:15:18,270
wouldn't go and try this and see what it

00:15:15,150 --> 00:15:20,220
does for you it's it's free so with that

00:15:18,270 --> 00:15:21,750
what kind of at the end of that first

00:15:20,220 --> 00:15:23,490
section that we talked about with the

00:15:21,750 --> 00:15:25,050
compiler tools and we cheated a bit

00:15:23,490 --> 00:15:26,580
especially with this slide because we

00:15:25,050 --> 00:15:30,900
started to touch on visual studio things

00:15:26,580 --> 00:15:33,110
so let's go here and transition from out

00:15:30,900 --> 00:15:35,839
of that into a visual studio

00:15:33,110 --> 00:15:37,070
so we do have time for a one question if

00:15:35,839 --> 00:15:39,980
someone is a burning question on what

00:15:37,070 --> 00:15:42,019
you've seen so far there's one there and

00:15:39,980 --> 00:15:44,660
one here and you're not allowed to ask

00:15:42,019 --> 00:15:45,920
any so let's go with this one he's

00:15:44,660 --> 00:16:04,279
looking at me very mean way you're

00:15:45,920 --> 00:16:06,110
looking a friendly way so yeah so the

00:16:04,279 --> 00:16:08,300
question was is it possible to take the

00:16:06,110 --> 00:16:11,779
compiler and put it in a mode where it's

00:16:08,300 --> 00:16:13,250
only c++ 11 and I'm seeing Steve who's

00:16:11,779 --> 00:16:14,750
supposed to take the questions music in

00:16:13,250 --> 00:16:16,970
his head you can say words you're

00:16:14,750 --> 00:16:19,910
allowed to speak it's like you know that

00:16:16,970 --> 00:16:26,899
was it no come on you throw a ball step

00:16:19,910 --> 00:16:29,570
what dr. repeat the snarky answer let's

00:16:26,899 --> 00:16:31,160
not let's not repeat so I just talked to

00:16:29,570 --> 00:16:33,980
Steve afterwards and make him make stuff

00:16:31,160 --> 00:16:42,740
on this do it so I'll take the one down

00:16:33,980 --> 00:16:45,350
there as well what was the question yeah

00:16:42,740 --> 00:16:47,390
so if I am the question was what's the

00:16:45,350 --> 00:16:49,130
trade-off there there was a trade of in

00:16:47,390 --> 00:16:53,570
terms of the fit actually do you wanna

00:16:49,130 --> 00:16:55,850
take a sure um so I the binaries they're

00:16:53,570 --> 00:16:57,920
no longer you don't ship the fast link

00:16:55,850 --> 00:17:00,470
binaries there's a tool on there called

00:16:57,920 --> 00:17:03,980
MSP dvc MF you need to use that to

00:17:00,470 --> 00:17:05,480
convert them into 22 full link fineries

00:17:03,980 --> 00:17:07,339
before you ship if you want to keep

00:17:05,480 --> 00:17:08,660
those symbols around that's that that's

00:17:07,339 --> 00:17:09,970
the trade-off it's why we didn't do it

00:17:08,660 --> 00:17:12,350
at first now we have kind of more of a

00:17:09,970 --> 00:17:14,150
developer experience around being able

00:17:12,350 --> 00:17:15,709
to do that so that so the trade off on

00:17:14,150 --> 00:17:17,660
your actual inner loop as you develop

00:17:15,709 --> 00:17:19,189
every day there isn't one it's only when

00:17:17,660 --> 00:17:20,870
you were going to move the PD bees and

00:17:19,189 --> 00:17:24,439
now we've kind of we think we've solved

00:17:20,870 --> 00:17:27,380
that to an extent all right so thank

00:17:24,439 --> 00:17:29,150
Steve so back to here so now we'll

00:17:27,380 --> 00:17:31,370
transition to looking at the visual

00:17:29,150 --> 00:17:33,140
studio side of things and before I go

00:17:31,370 --> 00:17:35,000
and jump into the visual studio ID and

00:17:33,140 --> 00:17:36,380
the visual studio code editor I didn't

00:17:35,000 --> 00:17:38,870
want to make you aware in case you're

00:17:36,380 --> 00:17:41,720
not or visual studio team services vs TS

00:17:38,870 --> 00:17:43,100
so those are our cloud powered developer

00:17:41,720 --> 00:17:45,679
services they give you things such as

00:17:43,100 --> 00:17:47,350
source control version control work item

00:17:45,679 --> 00:17:49,490
tracking project

00:17:47,350 --> 00:17:51,320
continuous integration you know can

00:17:49,490 --> 00:17:52,669
bands dash what's that kind of stuff the

00:17:51,320 --> 00:17:54,470
developer services that are really

00:17:52,669 --> 00:17:55,880
agnostic of whatever tool you use and

00:17:54,470 --> 00:17:57,710
what platform your own or even what

00:17:55,880 --> 00:17:59,570
programming language you use so if

00:17:57,710 --> 00:18:02,059
that's something to interest you you can

00:17:59,570 --> 00:18:03,140
go to visual studio calm and learn more

00:18:02,059 --> 00:18:05,120
about it because we're not talking about

00:18:03,140 --> 00:18:07,490
that in here and you should know that's

00:18:05,120 --> 00:18:09,980
free if for individuals and for small

00:18:07,490 --> 00:18:11,690
teams so that's something to go look at

00:18:09,980 --> 00:18:14,240
so now let's look at the visual studio

00:18:11,690 --> 00:18:17,360
ID so like I said earlier we should

00:18:14,240 --> 00:18:18,799
Visual Studio 2015 RT em last year and

00:18:17,360 --> 00:18:21,470
steve was actually here with my

00:18:18,799 --> 00:18:23,630
predecessor ayman and they did a talk

00:18:21,470 --> 00:18:27,950
about everything that was new in that

00:18:23,630 --> 00:18:30,140
and also said we do ship most of the

00:18:27,950 --> 00:18:32,270
value in a new release in the rtm

00:18:30,140 --> 00:18:33,530
version so if you're not familiar with

00:18:32,270 --> 00:18:35,419
what's in that version we're not

00:18:33,530 --> 00:18:38,000
repeating that today you should go to

00:18:35,419 --> 00:18:39,950
the youtube and watch that session what

00:18:38,000 --> 00:18:43,250
we're going to talk about today is only

00:18:39,950 --> 00:18:45,650
the Delta so what is new in the updates

00:18:43,250 --> 00:18:49,790
update 1 up the up to 3 and also what is

00:18:45,650 --> 00:18:51,620
new in Visual Studio 15 and here are

00:18:49,790 --> 00:18:53,150
some of those things I'm not going to

00:18:51,620 --> 00:18:54,679
read the slide I will always trust in

00:18:53,150 --> 00:18:57,410
your ability to read slides so you won't

00:18:54,679 --> 00:18:58,940
see me reading all of them so here we

00:18:57,410 --> 00:19:00,890
have two buckets there's a bucket of

00:18:58,940 --> 00:19:02,720
things in Visual Studio 2015 in the

00:19:00,890 --> 00:19:04,760
updates but then there's also the stuff

00:19:02,720 --> 00:19:07,130
on visual studio 15 and the ones we

00:19:04,760 --> 00:19:08,960
selected to put up here this is not

00:19:07,130 --> 00:19:10,340
release notes it's a selection are the

00:19:08,960 --> 00:19:12,169
ones that are under what we call the

00:19:10,340 --> 00:19:14,570
productivity bucket the things that make

00:19:12,169 --> 00:19:17,270
you more productive every single day so

00:19:14,570 --> 00:19:20,059
rather than talk about these steve is

00:19:17,270 --> 00:19:23,210
now going to actually go and demonstrate

00:19:20,059 --> 00:19:25,460
those to you damn ok great and I'm on

00:19:23,210 --> 00:19:27,260
all right so first thing you're going to

00:19:25,460 --> 00:19:28,820
stress this is a pre-release of a

00:19:27,260 --> 00:19:30,830
pre-release build I am running a

00:19:28,820 --> 00:19:33,020
developer build here on this box for you

00:19:30,830 --> 00:19:34,010
this is an upcoming build preview 5

00:19:33,020 --> 00:19:36,980
which should come out in the next few

00:19:34,010 --> 00:19:37,880
weeks or so what I have here is I want

00:19:36,980 --> 00:19:39,140
to show you some of our productivity

00:19:37,880 --> 00:19:40,669
features the ones that were on the slide

00:19:39,140 --> 00:19:43,100
just there the first thing I want to

00:19:40,669 --> 00:19:45,470
show you is what you can use to navigate

00:19:43,100 --> 00:19:46,850
around inside of your application but

00:19:45,470 --> 00:19:49,429
before I do that I want to really

00:19:46,850 --> 00:19:51,549
quickly just show you all tools options

00:19:49,429 --> 00:19:53,690
and if you come in here and you type

00:19:51,549 --> 00:19:55,760
experimental it's going to bring up this

00:19:53,690 --> 00:19:57,650
property page where all of our sort of

00:19:55,760 --> 00:19:58,970
very are more experimental things are

00:19:57,650 --> 00:19:59,410
this is the kind of audience of people

00:19:58,970 --> 00:20:01,390
who

00:19:59,410 --> 00:20:03,760
to go and try new things out please go

00:20:01,390 --> 00:20:04,720
set all of these two true I would really

00:20:03,760 --> 00:20:06,040
appreciate it and give us your feedback

00:20:04,720 --> 00:20:07,780
once you get your hands on these bits

00:20:06,040 --> 00:20:10,210
first thing i want to show you here is

00:20:07,780 --> 00:20:12,700
what we call the new go to experience so

00:20:10,210 --> 00:20:14,890
i'm going to push control comma on my

00:20:12,700 --> 00:20:16,330
handy-dandy keyboard and i'm going to

00:20:14,890 --> 00:20:19,240
get this new thing that looks like the

00:20:16,330 --> 00:20:20,830
old navigate to this is new i'm a type ?

00:20:19,240 --> 00:20:22,900
it's going to give me some help this is

00:20:20,830 --> 00:20:24,640
a very keyboard friendly experienced and

00:20:22,900 --> 00:20:26,020
it's going to teach you how to use it so

00:20:24,640 --> 00:20:27,640
i'm going to come in here first thing

00:20:26,020 --> 00:20:29,650
i'm going to do is not that exciting i'm

00:20:27,640 --> 00:20:33,820
going to go 155 really quick jumped onto

00:20:29,650 --> 00:20:36,580
that line once again boobs control comma

00:20:33,820 --> 00:20:38,440
back up to where i was ok so let's go to

00:20:36,580 --> 00:20:40,990
line right the next one i want to show

00:20:38,440 --> 00:20:44,080
you control comma i'm gonna type f for

00:20:40,990 --> 00:20:46,030
file space dlg so that's going to very

00:20:44,080 --> 00:20:47,860
quickly bring up a list of all of the

00:20:46,030 --> 00:20:49,840
files that have dlg somewhere in them

00:20:47,860 --> 00:20:51,760
and as you can see this is an mfc app so

00:20:49,840 --> 00:20:53,650
it's all the dialogues if i go on here

00:20:51,760 --> 00:20:55,150
and I like single click on this one you

00:20:53,650 --> 00:20:57,430
can see it'll open it up in the preview

00:20:55,150 --> 00:20:59,230
tab i also want to show you that there's

00:20:57,430 --> 00:21:00,550
actually a ton of configurability in

00:20:59,230 --> 00:21:02,620
here I can choose where I want this

00:21:00,550 --> 00:21:05,740
window to be I can choose what I want to

00:21:02,620 --> 00:21:07,780
use the preview tab at all but the go to

00:21:05,740 --> 00:21:09,400
file thing is a very fast navigation

00:21:07,780 --> 00:21:11,230
tool don't have to take your fingers off

00:21:09,400 --> 00:21:12,700
the keyboard next thing I want to show

00:21:11,230 --> 00:21:14,170
you is if I if I come back up here i'm

00:21:12,700 --> 00:21:16,960
going to type a keyword that's all over

00:21:14,170 --> 00:21:18,610
the universe so let me type event which

00:21:16,960 --> 00:21:21,190
is way overloaded and this keep in this

00:21:18,610 --> 00:21:23,080
code base so I've got a bunch of other

00:21:21,190 --> 00:21:25,450
filters down here one of them is types

00:21:23,080 --> 00:21:28,210
this is going to narrow the list down to

00:21:25,450 --> 00:21:29,830
classes struck synonyms this one over

00:21:28,210 --> 00:21:33,460
here is members so that's going to be

00:21:29,830 --> 00:21:35,950
like enum items fields methods etc and

00:21:33,460 --> 00:21:39,250
then this is symbols symbols is going to

00:21:35,950 --> 00:21:40,690
be types Plus members plus any other

00:21:39,250 --> 00:21:44,080
language constructs the main one is

00:21:40,690 --> 00:21:46,270
macros so that is our new navigate to

00:21:44,080 --> 00:21:48,640
experience it's it's fast and fluid it's

00:21:46,270 --> 00:21:50,860
super fast the next thing i want to show

00:21:48,640 --> 00:21:53,020
you once i get back to my thing is good

00:21:50,860 --> 00:21:55,150
all right here we go so next I want to

00:21:53,020 --> 00:21:59,110
show you is are significantly improved

00:21:55,150 --> 00:22:01,360
find all references experience so as i

00:21:59,110 --> 00:22:03,130
go here i chose final references on this

00:22:01,360 --> 00:22:04,780
and as you can see instead of the old

00:22:03,130 --> 00:22:06,370
dialogue we have a whole bunch of

00:22:04,780 --> 00:22:08,020
improvements here first thing I want to

00:22:06,370 --> 00:22:09,790
guide your attention to is the grouping

00:22:08,020 --> 00:22:11,560
you can group by project you can group

00:22:09,790 --> 00:22:12,640
by a path and so this is really useful

00:22:11,560 --> 00:22:14,290
once you get

00:22:12,640 --> 00:22:15,220
lot of number of items in here and

00:22:14,290 --> 00:22:17,080
you're trying to go through there may be

00:22:15,220 --> 00:22:18,400
some large-scale refactoring that you're

00:22:17,080 --> 00:22:20,710
doing another thing this is really

00:22:18,400 --> 00:22:23,290
useful for is any kind of code analysis

00:22:20,710 --> 00:22:25,810
fix all the warnings kind of situation

00:22:23,290 --> 00:22:27,220
we've got here the rewrite column which

00:22:25,810 --> 00:22:30,670
will tell you if it was a read or write

00:22:27,220 --> 00:22:32,650
or other we actually also have the

00:22:30,670 --> 00:22:34,810
ability to click here on the cell filter

00:22:32,650 --> 00:22:38,320
icon and then you can say only show me

00:22:34,810 --> 00:22:39,400
the roots so it's very configurable can

00:22:38,320 --> 00:22:41,260
be used in a lot of different scenarios

00:22:39,400 --> 00:22:42,460
another thing I want to stress about

00:22:41,260 --> 00:22:45,190
this and this is going to be a theme

00:22:42,460 --> 00:22:47,260
overall is raw performance we're

00:22:45,190 --> 00:22:49,030
bringing events in or we're bringing

00:22:47,260 --> 00:22:50,560
results in incrementally here it should

00:22:49,030 --> 00:22:51,790
be much faster for larger turns that's

00:22:50,560 --> 00:22:53,800
than what you were seeing previously

00:22:51,790 --> 00:22:56,290
okay so that's navigating around your

00:22:53,800 --> 00:22:58,570
coats new fun things the next thing I

00:22:56,290 --> 00:23:00,220
want to take you to is some authoring

00:22:58,570 --> 00:23:02,530
stuff so now i'm going to type some code

00:23:00,220 --> 00:23:06,400
so the first thing i want to do int I

00:23:02,530 --> 00:23:09,100
equals sighs okay great intellisense

00:23:06,400 --> 00:23:10,660
wonderful so uh what I have turned on

00:23:09,100 --> 00:23:14,530
from those experiments is it something

00:23:10,660 --> 00:23:17,200
we call a predictive intelius s and so

00:23:14,530 --> 00:23:18,790
because I typed int I equals this is

00:23:17,200 --> 00:23:20,680
already narrowed down this list to only

00:23:18,790 --> 00:23:23,290
things that you know could realistically

00:23:20,680 --> 00:23:26,800
be in so you can see when it boots let's

00:23:23,290 --> 00:23:28,870
do that one more time you can see all

00:23:26,800 --> 00:23:30,580
the ones that have the word size in them

00:23:28,870 --> 00:23:31,870
and also it's actually not that big of a

00:23:30,580 --> 00:23:34,330
bar if you take a look at the scroll bar

00:23:31,870 --> 00:23:35,350
I can also go in and do the same kind of

00:23:34,330 --> 00:23:36,910
filtering here that I did in the

00:23:35,350 --> 00:23:38,260
previous view of God you know narrow it

00:23:36,910 --> 00:23:40,180
down to just variables or narrow it down

00:23:38,260 --> 00:23:41,800
to functions and if you do want the old

00:23:40,180 --> 00:23:43,480
experience where we're not predicting in

00:23:41,800 --> 00:23:45,280
case you're doing something coo coo you

00:23:43,480 --> 00:23:47,350
can do this or ctrl J again we love

00:23:45,280 --> 00:23:48,610
keyboards to to get the full list and

00:23:47,350 --> 00:23:50,860
that can even if you looked at how much

00:23:48,610 --> 00:23:52,090
the the scroll bar changed you know it

00:23:50,860 --> 00:23:54,460
gives you a sense of just how much

00:23:52,090 --> 00:23:55,780
filtering we were doing for you okay so

00:23:54,460 --> 00:23:58,750
that's predictive intelligence it's

00:23:55,780 --> 00:24:00,100
really neat this one is super small but

00:23:58,750 --> 00:24:01,630
you know sometimes it's the little

00:24:00,100 --> 00:24:04,360
things to help so here i'm going to type

00:24:01,630 --> 00:24:06,190
p fonts a certain weight dot weight

00:24:04,360 --> 00:24:07,750
would and then i'm going to select that

00:24:06,190 --> 00:24:09,610
one and it automatically translates it

00:24:07,750 --> 00:24:11,260
to an arrow that's cool so this is like

00:24:09,610 --> 00:24:12,850
you know it's not going to change world

00:24:11,260 --> 00:24:14,200
peace or anything but now you know we're

00:24:12,850 --> 00:24:15,700
doing what you're meant not what you

00:24:14,200 --> 00:24:17,050
said this is the beginning of the AI

00:24:15,700 --> 00:24:19,570
taking over and destroying the world

00:24:17,050 --> 00:24:21,880
you're there on the ground floor all

00:24:19,570 --> 00:24:24,130
right so that's fun here's another super

00:24:21,880 --> 00:24:25,799
fun tiny one which is I'm going to go in

00:24:24,130 --> 00:24:28,769
here i'm going to select

00:24:25,799 --> 00:24:31,559
these and I'm going to type the left

00:24:28,769 --> 00:24:33,809
brace and then I can very quickly kind

00:24:31,559 --> 00:24:35,009
of help really all right okay that was

00:24:33,809 --> 00:24:36,929
not that one I thought was gonna get the

00:24:35,009 --> 00:24:38,399
womb oh it's fine all right cool that's

00:24:36,929 --> 00:24:40,200
okay I can't predict customers it all

00:24:38,399 --> 00:24:42,149
it's all gay okay again it's like this

00:24:40,200 --> 00:24:44,009
okay so you're going to remember the

00:24:42,149 --> 00:24:46,169
control common thing right ok so right

00:24:44,009 --> 00:24:48,749
next to that on your keyboard is the key

00:24:46,169 --> 00:24:50,970
right so control dot we significantly

00:24:48,749 --> 00:24:52,830
improve the light bulbs we have more

00:24:50,970 --> 00:24:54,779
reef actors in particular extract

00:24:52,830 --> 00:24:57,239
function is a lot better than it used to

00:24:54,779 --> 00:24:58,830
be we've got the ability and abstract as

00:24:57,239 --> 00:25:00,299
free function is member put it wherever

00:24:58,830 --> 00:25:02,850
you want it give it a nice name this is

00:25:00,299 --> 00:25:05,039
all stuff to initialize a tooltip hit

00:25:02,850 --> 00:25:07,799
enter it'll go do some intellisense make

00:25:05,039 --> 00:25:09,600
sure it makes it an accurate one opens

00:25:07,799 --> 00:25:11,159
up a preview tab so that you can peek

00:25:09,600 --> 00:25:15,929
into what it did and it replace the code

00:25:11,159 --> 00:25:17,759
so I'm back all that out and I am ready

00:25:15,929 --> 00:25:19,769
to show you some debugging so let's

00:25:17,759 --> 00:25:23,519
transition out of that I'm going to do a

00:25:19,769 --> 00:25:26,399
build and then we're gonna want done

00:25:23,519 --> 00:25:28,279
okay so all right this thing actually

00:25:26,399 --> 00:25:31,409
builds a help file every time sorry

00:25:28,279 --> 00:25:32,850
internet code it's actually really cool

00:25:31,409 --> 00:25:35,399
it's a Famicom tracker so you can like

00:25:32,850 --> 00:25:37,859
make beeps and bloops like a griddle and

00:25:35,399 --> 00:25:39,690
yes game so here we go i'm going to

00:25:37,859 --> 00:25:40,679
start up the debugger so the first thing

00:25:39,690 --> 00:25:42,359
that you're going to notice now that

00:25:40,679 --> 00:25:43,859
we're transitioning into diagnostics is

00:25:42,359 --> 00:25:45,929
the diagnostic tools window is going to

00:25:43,859 --> 00:25:48,210
open up there and actually have to hit

00:25:45,929 --> 00:25:50,549
my break point i'll go in here i set one

00:25:48,210 --> 00:25:51,960
in the about box to make this easy you

00:25:50,549 --> 00:25:54,600
see that says it's preparing threads up

00:25:51,960 --> 00:25:56,759
there and this is the cpu profiling

00:25:54,600 --> 00:25:58,169
thing is set to on so we've been doing

00:25:56,759 --> 00:25:59,700
this diagnostic tools thing this is our

00:25:58,169 --> 00:26:01,440
source second version with it and we've

00:25:59,700 --> 00:26:04,409
continued to Britt move more and more of

00:26:01,440 --> 00:26:07,379
the cool beyond debugging stuff into the

00:26:04,409 --> 00:26:09,299
debugger and here you can see while I

00:26:07,379 --> 00:26:10,830
was chatting there we brought up sort of

00:26:09,299 --> 00:26:13,799
a function list here right now it's

00:26:10,830 --> 00:26:15,149
sorted by the total cpu time in other

00:26:13,799 --> 00:26:16,739
words how often that function was on the

00:26:15,149 --> 00:26:19,859
stack but i can actually even come over

00:26:16,739 --> 00:26:22,320
here and sort based on self CPU so this

00:26:19,859 --> 00:26:24,269
is how often the body of this function

00:26:22,320 --> 00:26:25,619
was on there so that's kind of neat

00:26:24,269 --> 00:26:27,090
enough it's else if you've ever used the

00:26:25,619 --> 00:26:28,830
vigils to your profile my first and

00:26:27,090 --> 00:26:30,389
product here Microsoft I'm going to

00:26:28,830 --> 00:26:32,460
click on here and it's actually going to

00:26:30,389 --> 00:26:34,350
take me to the butterfly view so I can

00:26:32,460 --> 00:26:35,970
really you know start drilling in on the

00:26:34,350 --> 00:26:38,009
performance of my code without even

00:26:35,970 --> 00:26:39,389
having to leave the debugger so I can

00:26:38,009 --> 00:26:40,799
see what this function did

00:26:39,389 --> 00:26:42,570
is it called it you can see we've got

00:26:40,799 --> 00:26:44,399
just the beginnings of starting to color

00:26:42,570 --> 00:26:46,259
the actual function body itself with the

00:26:44,399 --> 00:26:48,029
hot spots so we think this is going to

00:26:46,259 --> 00:26:50,579
be really useful you can also come up

00:26:48,029 --> 00:26:52,440
here hit call tree and drill down into

00:26:50,579 --> 00:26:55,589
the culture do like kind of a top-down

00:26:52,440 --> 00:26:57,119
performance investigation and and so

00:26:55,589 --> 00:26:59,070
yeah the profiler right there inside of

00:26:57,119 --> 00:27:00,479
the debugger so that's great so the next

00:26:59,070 --> 00:27:03,839
thing I want to do is show you this is

00:27:00,479 --> 00:27:05,549
another little one I like these so if I

00:27:03,839 --> 00:27:07,229
if I just hover my mouse just a little

00:27:05,549 --> 00:27:09,059
bit cell green arrow and I click on it

00:27:07,229 --> 00:27:11,459
BAM this is the new run to cursor

00:27:09,059 --> 00:27:12,690
experience inside a visual studio if you

00:27:11,459 --> 00:27:14,519
like that and you didn't know we had it

00:27:12,690 --> 00:27:16,409
in the old versions when you go back to

00:27:14,519 --> 00:27:18,139
those to those of you who are still you

00:27:16,409 --> 00:27:20,369
know not using our pre-release products

00:27:18,139 --> 00:27:21,929
if you go in here there's actually it's

00:27:20,369 --> 00:27:23,239
always been here but people didn't find

00:27:21,929 --> 00:27:26,009
it so now you can find it it's awesome

00:27:23,239 --> 00:27:27,929
so okay one last thing for the

00:27:26,009 --> 00:27:30,869
productivity stuff so i got this struct

00:27:27,929 --> 00:27:32,820
here right and i'm going to neutralize

00:27:30,869 --> 00:27:35,190
it and then i'm going to go having a set

00:27:32,820 --> 00:27:36,479
like one of the fields to 10 and i'm

00:27:35,190 --> 00:27:38,070
going to step one more time but you know

00:27:36,479 --> 00:27:40,129
what I didn't actually initialize this

00:27:38,070 --> 00:27:43,649
thing properly so it's not going to work

00:27:40,129 --> 00:27:46,169
so BAM we get the new exception helper

00:27:43,649 --> 00:27:48,450
UI and there are two cool things about

00:27:46,169 --> 00:27:50,159
this first well three I actually like

00:27:48,450 --> 00:27:51,659
the UI looks prettier but the other one

00:27:50,159 --> 00:27:53,369
is it actually tells you for reading

00:27:51,659 --> 00:27:56,969
sess violations which part of this

00:27:53,369 --> 00:27:59,669
cascade of pointer dereference ease as a

00:27:56,969 --> 00:28:00,659
dot P P P was the null pointer which i

00:27:59,669 --> 00:28:03,419
think is definitely going to save you

00:28:00,659 --> 00:28:04,859
some time okay so now this is another

00:28:03,419 --> 00:28:06,570
once I get to ask you a question kind of

00:28:04,859 --> 00:28:08,700
moment so hmm who's ever had to use like

00:28:06,570 --> 00:28:09,899
a third-party library where that kind of

00:28:08,700 --> 00:28:11,279
the jerk who wrote the third party

00:28:09,899 --> 00:28:13,979
library likes to use exceptions as

00:28:11,279 --> 00:28:16,079
control flow is that okay well look

00:28:13,979 --> 00:28:17,579
nodding and yes you've all done that so

00:28:16,079 --> 00:28:19,529
I want to draw your attention to this

00:28:17,579 --> 00:28:20,909
edit conditions thing right i'm gonna

00:28:19,529 --> 00:28:24,239
click on that and so what this allows

00:28:20,909 --> 00:28:25,799
you to do is set conditions on your

00:28:24,239 --> 00:28:29,099
break points to say like if this is that

00:28:25,799 --> 00:28:30,659
jerks dll no don't break keep going so i

00:28:29,099 --> 00:28:33,479
think this is in and of itself going to

00:28:30,659 --> 00:28:38,070
save man years of time alright alright

00:28:33,479 --> 00:28:41,450
Daniel you're up and cool I can find a

00:28:38,070 --> 00:28:41,450
button you guys like that

00:28:43,850 --> 00:28:49,020
awesome so that was visual studio at 15

00:28:47,730 --> 00:28:50,760
and show you some things that are also

00:28:49,020 --> 00:28:52,410
in Visual Studio 2015 we're going to

00:28:50,760 --> 00:28:55,170
come back to visual studio but let's

00:28:52,410 --> 00:28:58,020
like take a small diversion towards

00:28:55,170 --> 00:28:59,700
editors and Visual Studio code how many

00:28:58,020 --> 00:29:01,320
people in here have not heard the

00:28:59,700 --> 00:29:03,929
visuals to the code before can sit show

00:29:01,320 --> 00:29:06,210
hands not I can also admitted a few

00:29:03,929 --> 00:29:08,160
people do alright so for everyone else

00:29:06,210 --> 00:29:10,170
that has heard about it and for the

00:29:08,160 --> 00:29:12,720
people that haven't when we released

00:29:10,170 --> 00:29:14,970
this a couple of years ago now it was

00:29:12,720 --> 00:29:17,400
people thought it was visual studio that

00:29:14,970 --> 00:29:19,410
now also runs on linux and the map so i

00:29:17,400 --> 00:29:21,419
just want to dispel that myth this isn't

00:29:19,410 --> 00:29:23,040
the visual studio it's not an ID it does

00:29:21,419 --> 00:29:25,980
run on linux on the mac as well as

00:29:23,040 --> 00:29:27,900
windows but it's an editor it doesn't

00:29:25,980 --> 00:29:30,150
have like a tenth of the capabilities

00:29:27,900 --> 00:29:32,640
that you would find in visual studio it

00:29:30,150 --> 00:29:35,400
is not meant to it is an editor but for

00:29:32,640 --> 00:29:37,470
an editor it is amazing it has built-in

00:29:35,400 --> 00:29:39,750
get integration it has debugging support

00:29:37,470 --> 00:29:41,640
it has extensibility you can go and

00:29:39,750 --> 00:29:43,200
configure text files to kind of compose

00:29:41,640 --> 00:29:45,900
your own inner loop with command lines

00:29:43,200 --> 00:29:48,630
and so on so it may not be an ID but

00:29:45,900 --> 00:29:50,309
it's a really great editor so it's kind

00:29:48,630 --> 00:29:52,320
of thing that if you don't want to use

00:29:50,309 --> 00:29:53,250
visual studio come if you crazy i don't

00:29:52,320 --> 00:29:54,929
know if you don't want to use visual

00:29:53,250 --> 00:29:56,760
studio and you have more of the

00:29:54,929 --> 00:29:59,940
upbringing the developer upbringing of

00:29:56,760 --> 00:30:01,620
the vim or emacs or sublime something

00:29:59,940 --> 00:30:03,330
like that then this is the tool you need

00:30:01,620 --> 00:30:05,549
to check out and if you go and download

00:30:03,330 --> 00:30:07,950
Visual Studio code you will want to also

00:30:05,549 --> 00:30:09,120
get our C++ extension which actually

00:30:07,950 --> 00:30:11,549
gives you the full suppose class

00:30:09,120 --> 00:30:12,830
experience in Visual Studio code so

00:30:11,549 --> 00:30:14,970
instead of talking about that experience

00:30:12,830 --> 00:30:17,220
Steve now is going to go in there might

00:30:14,970 --> 00:30:19,380
step out with you all right so I've got

00:30:17,220 --> 00:30:21,030
visuals to your coat up in here so the

00:30:19,380 --> 00:30:22,440
first thing I want you to do it installs

00:30:21,030 --> 00:30:24,360
really quick it's like a two minute

00:30:22,440 --> 00:30:26,580
install it's really tiny go and going to

00:30:24,360 --> 00:30:27,750
get it installed once you do and i will

00:30:26,580 --> 00:30:29,010
tell you i found out Daniel walrus

00:30:27,750 --> 00:30:31,260
practicing that this is this actually

00:30:29,010 --> 00:30:34,320
uses the network but so if you go in

00:30:31,260 --> 00:30:37,620
here new type CPP c++ and click enter oh

00:30:34,320 --> 00:30:39,390
and you have working Wi-Fi go ahead and

00:30:37,620 --> 00:30:40,799
pick the one we should be on top but the

00:30:39,390 --> 00:30:42,299
one by Microsoft that that's the one we

00:30:40,799 --> 00:30:43,650
wrote so that's how you get started

00:30:42,299 --> 00:30:44,790
alright so then once you have that

00:30:43,650 --> 00:30:46,830
installed the next thing I want to do is

00:30:44,790 --> 00:30:48,690
I'm going to go to open folder and I'm

00:30:46,830 --> 00:30:50,450
going to select this this is the CPP

00:30:48,690 --> 00:30:54,110
rest SDK that we ship and this is

00:30:50,450 --> 00:30:55,250
very simple application that uses it so

00:30:54,110 --> 00:30:56,510
I'm going to select that folder and

00:30:55,250 --> 00:30:59,300
what's going to do is it's going to open

00:30:56,510 --> 00:31:01,100
up sort of a folder view of what's going

00:30:59,300 --> 00:31:02,660
on there as you can see it creates a dot

00:31:01,100 --> 00:31:03,890
vs code file when you do that and that's

00:31:02,660 --> 00:31:06,440
where all the configuration information

00:31:03,890 --> 00:31:07,910
goes so I'm going to start up i'm going

00:31:06,440 --> 00:31:09,620
to open up my CPP file and you can see

00:31:07,910 --> 00:31:11,600
almost immediately I get a pretty good

00:31:09,620 --> 00:31:13,250
result in terms of coloring and I get

00:31:11,600 --> 00:31:14,600
these green squiggles and hey include

00:31:13,250 --> 00:31:16,250
files are not found well you know you

00:31:14,600 --> 00:31:17,300
got to tell us something right so I'm

00:31:16,250 --> 00:31:18,710
going to click on that I get a light

00:31:17,300 --> 00:31:20,390
bulb I'm going to click on that light

00:31:18,710 --> 00:31:23,240
bulb it's gonna stay add include pass to

00:31:20,390 --> 00:31:24,590
settings now i'm going to go ahead i'm

00:31:23,240 --> 00:31:27,410
going to not type in front of you

00:31:24,590 --> 00:31:29,810
because i am a bad bad typer i'm gonna

00:31:27,410 --> 00:31:31,010
go and i'm going to pull the oats you

00:31:29,810 --> 00:31:33,260
see I'm not even really that good with a

00:31:31,010 --> 00:31:34,430
mouse like managing though that good

00:31:33,260 --> 00:31:37,160
okay you can see you go get a different

00:31:34,430 --> 00:31:38,210
one for mac linux and and windows 32 i'm

00:31:37,160 --> 00:31:40,100
going to come in here i'm going to add

00:31:38,210 --> 00:31:43,010
in the include path i'm going to hit

00:31:40,100 --> 00:31:45,020
save hope i did that well switch over

00:31:43,010 --> 00:31:50,390
back to this file and now if we give it

00:31:45,020 --> 00:31:52,730
a second it should there we go okay it

00:31:50,390 --> 00:31:54,170
will cover it up and so now it knows

00:31:52,730 --> 00:31:55,550
about the include path we're going in

00:31:54,170 --> 00:31:56,810
the background and the reason it took a

00:31:55,550 --> 00:31:57,890
second there is because it's actually

00:31:56,810 --> 00:32:00,380
doing background coladas and lot of good

00:31:57,890 --> 00:32:02,420
stuff or tag parsing in this case and

00:32:00,380 --> 00:32:05,090
everything that you would expect to work

00:32:02,420 --> 00:32:06,740
works so you can go in here string T you

00:32:05,090 --> 00:32:08,690
can do keep def on that and it'll bring

00:32:06,740 --> 00:32:11,120
you a peek window just like you get in

00:32:08,690 --> 00:32:13,640
Big Brother visual studio it's probably

00:32:11,120 --> 00:32:16,970
a bad way to call it you know if you

00:32:13,640 --> 00:32:19,070
come in here to do clients dots you will

00:32:16,970 --> 00:32:22,160
get autocomplete you know we'll continue

00:32:19,070 --> 00:32:23,630
to work on the accuracy in these but

00:32:22,160 --> 00:32:27,200
right now it sits nice and it's fast

00:32:23,630 --> 00:32:28,190
okay so that's editing and navigation

00:32:27,200 --> 00:32:29,450
next thing i want to show you i'm going

00:32:28,190 --> 00:32:30,890
to push because i've trained on visual

00:32:29,450 --> 00:32:33,530
studio i'm going to press ctrl shift be

00:32:30,890 --> 00:32:35,030
to build its gonna say up no no no cask

00:32:33,530 --> 00:32:36,590
runner configured i'm going to click

00:32:35,030 --> 00:32:37,910
configure task runner you can see it

00:32:36,590 --> 00:32:39,710
gives me a bunch of choices and again

00:32:37,910 --> 00:32:41,600
there's a very large extension gallery

00:32:39,710 --> 00:32:42,680
all ready for this tool so you don't see

00:32:41,600 --> 00:32:43,850
what you need up here but i'm going to

00:32:42,680 --> 00:32:45,230
go ahead and go to pick the MS build one

00:32:43,850 --> 00:32:48,530
it's going to open up yet another

00:32:45,230 --> 00:32:50,900
helpful JSON file that we can then put

00:32:48,530 --> 00:32:53,120
information into this one actually don't

00:32:50,900 --> 00:32:55,610
have to change it I actually launched

00:32:53,120 --> 00:32:57,320
visual co code from the developer prompt

00:32:55,610 --> 00:32:58,820
and so all my tools are already in here

00:32:57,320 --> 00:33:00,680
I'm going to build it's going to bring

00:32:58,820 --> 00:33:04,310
up an output window it's beautiful it's

00:33:00,680 --> 00:33:07,340
lightweight the bill works

00:33:04,310 --> 00:33:11,660
and I'm excited have even more excited

00:33:07,340 --> 00:33:14,630
when it's done come back fast link

00:33:11,660 --> 00:33:18,080
that's the key nah alright so the next

00:33:14,630 --> 00:33:20,150
thing we're going to there you go I go

00:33:18,080 --> 00:33:22,280
alright so worked so the next thing i

00:33:20,150 --> 00:33:23,690
want to show you really quickly is the

00:33:22,280 --> 00:33:26,120
debugging experience yes there's a

00:33:23,690 --> 00:33:28,040
debugger in here so i could play and

00:33:26,120 --> 00:33:29,540
once again it prompts me so there's a

00:33:28,040 --> 00:33:32,360
couple of different environments here

00:33:29,540 --> 00:33:35,030
ironically we actually did the gdb lld

00:33:32,360 --> 00:33:37,940
be one first but in our most recent

00:33:35,030 --> 00:33:39,140
monthly bill of the c++ extension we

00:33:37,940 --> 00:33:40,490
actually added windows so i'm going to

00:33:39,140 --> 00:33:42,620
double that one today so i'm going to

00:33:40,490 --> 00:33:43,850
click that it's going to bring up a ok

00:33:42,620 --> 00:33:45,500
you need to set up one of these launch

00:33:43,850 --> 00:33:47,360
configurations everything's JSON files

00:33:45,500 --> 00:33:48,890
alright and so you can see I've got a

00:33:47,360 --> 00:33:50,900
launch configuration and attached

00:33:48,890 --> 00:33:52,580
configuration and I still don't like

00:33:50,900 --> 00:33:54,020
typing so I'm going to come over here

00:33:52,580 --> 00:33:56,180
and I'm going to take all I have to tell

00:33:54,020 --> 00:33:58,850
this thing really to get it going is the

00:33:56,180 --> 00:34:01,130
name of the program and the arguments to

00:33:58,850 --> 00:34:03,470
pass to it so I'm going to do that real

00:34:01,130 --> 00:34:06,290
quick I'm going to push you know f5 will

00:34:03,470 --> 00:34:07,460
work but I like my stew it's going to

00:34:06,290 --> 00:34:08,540
it's going to go up here we're going to

00:34:07,460 --> 00:34:11,780
hit the bed point we're going to get

00:34:08,540 --> 00:34:15,230
data tips it's beautiful this is the

00:34:11,780 --> 00:34:16,730
same underlying workload or the same

00:34:15,230 --> 00:34:18,590
underlying debug engine that we use

00:34:16,730 --> 00:34:20,780
inside a visual studio just shift for vs

00:34:18,590 --> 00:34:24,620
code it's lightweight if I go to the

00:34:20,780 --> 00:34:26,990
next breakpoint and step once you can

00:34:24,620 --> 00:34:29,600
see we've got NAT visualization native

00:34:26,990 --> 00:34:32,420
visualization works here so it's a

00:34:29,600 --> 00:34:33,860
lightweight editor I XO I realize I

00:34:32,420 --> 00:34:37,280
skipped a quick demo which is we

00:34:33,860 --> 00:34:39,560
actually just included the ability to do

00:34:37,280 --> 00:34:41,090
formatting as well so you can go in here

00:34:39,560 --> 00:34:44,480
and use it actually uses claim format on

00:34:41,090 --> 00:34:48,430
the back end hi to to work and uh yeah

00:34:44,480 --> 00:34:51,890
so that is vigil see your cup Daniel oh

00:34:48,430 --> 00:34:55,790
thank you I didn't need the party start

00:34:51,890 --> 00:34:58,250
they're learning extreme so that was a

00:34:55,790 --> 00:35:00,200
visual studio code again you see it has

00:34:58,250 --> 00:35:02,210
kind of a little bit of everything it's

00:35:00,200 --> 00:35:04,250
not a fool I ID that's the point I was

00:35:02,210 --> 00:35:05,450
making nervous or with the debugging for

00:35:04,250 --> 00:35:07,580
example it's nowhere near the richness

00:35:05,450 --> 00:35:09,410
of what you saw earlier but for an

00:35:07,580 --> 00:35:11,000
editor we think it's fantastic we hope

00:35:09,410 --> 00:35:13,760
you like it too will continue investing

00:35:11,000 --> 00:35:15,620
here to make it be the best editor out

00:35:13,760 --> 00:35:17,330
there and one of the things that we do

00:35:15,620 --> 00:35:19,370
like about editors in jan

00:35:17,330 --> 00:35:21,110
is that they're fast and lightweight so

00:35:19,370 --> 00:35:22,700
talking about performance what are we

00:35:21,110 --> 00:35:25,520
doing in Visual Studio 15 on the

00:35:22,700 --> 00:35:27,920
performance front so there's a couple of

00:35:25,520 --> 00:35:29,810
things hopefully you're all configuring

00:35:27,920 --> 00:35:31,880
a precompiled headers you can help us

00:35:29,810 --> 00:35:34,400
give you faster intelligence and

00:35:31,880 --> 00:35:36,380
navigation and so on but in the cases

00:35:34,400 --> 00:35:38,660
where you don't want to or can't we now

00:35:36,380 --> 00:35:40,790
kind of do that behind the background

00:35:38,660 --> 00:35:42,890
for you so you can get that performance

00:35:40,790 --> 00:35:44,870
if you were in such a situation try with

00:35:42,890 --> 00:35:46,700
the latest version of vs to to see if

00:35:44,870 --> 00:35:48,740
it's improved your life the other one is

00:35:46,700 --> 00:35:50,960
that in some cases with the bug in

00:35:48,740 --> 00:35:53,330
memory would grow and we had one

00:35:50,960 --> 00:35:55,090
pathological case like that of a real

00:35:53,330 --> 00:35:58,100
app that we were working with and

00:35:55,090 --> 00:36:00,050
unfortunately it would crash after you

00:35:58,100 --> 00:36:01,940
were debug after some point and now

00:36:00,050 --> 00:36:04,640
we've kind of contained it to be under

00:36:01,940 --> 00:36:06,560
two gig while debugging so if you had

00:36:04,640 --> 00:36:08,480
scenarios where you felt one of the bug

00:36:06,560 --> 00:36:10,400
in memory kind of goes out of whack try

00:36:08,480 --> 00:36:12,350
the latest version to see what's going

00:36:10,400 --> 00:36:13,880
on there and then finally we've done

00:36:12,350 --> 00:36:16,070
some dramatic improvements or two

00:36:13,880 --> 00:36:18,110
solution loading so here you can see

00:36:16,070 --> 00:36:21,280
someone is a solution with 1,700

00:36:18,110 --> 00:36:24,650
projects that's chromium by the way and

00:36:21,280 --> 00:36:26,960
we've taken that from 76 seconds to load

00:36:24,650 --> 00:36:29,360
after the first time that you've run it

00:36:26,960 --> 00:36:31,820
down to 15 and that is what i mean by

00:36:29,360 --> 00:36:33,440
dramatic improvements in another case

00:36:31,820 --> 00:36:35,600
where there was one large start a

00:36:33,440 --> 00:36:37,190
project and 23 smaller ones that's the

00:36:35,600 --> 00:36:39,740
Unreal Engine in that case we've only

00:36:37,190 --> 00:36:42,590
improved it by a hundred percent when

00:36:39,740 --> 00:36:44,120
you load it after the second time so

00:36:42,590 --> 00:36:46,070
again like I was saying with the build

00:36:44,120 --> 00:36:48,170
throughput this is performance you will

00:36:46,070 --> 00:36:50,690
feel now the other thing that we've done

00:36:48,170 --> 00:36:52,910
in a following on from the vs code demo

00:36:50,690 --> 00:36:55,310
is the ability and what we call up and

00:36:52,910 --> 00:36:57,230
folder to point visual studio to a

00:36:55,310 --> 00:36:59,870
folder and have it work with that code

00:36:57,230 --> 00:37:02,090
and if in there you also have a see make

00:36:59,870 --> 00:37:04,130
file we will actually pass that and give

00:37:02,090 --> 00:37:06,020
you an even richer experience in visual

00:37:04,130 --> 00:37:08,210
studio so we've got the beginnings of

00:37:06,020 --> 00:37:10,280
that which just started working on that

00:37:08,210 --> 00:37:12,110
so steve is going to demo that and when

00:37:10,280 --> 00:37:13,670
when we come back I'll talk about

00:37:12,110 --> 00:37:17,330
acquisition and installation experience

00:37:13,670 --> 00:37:18,740
with you okay so as you saw when I was

00:37:17,330 --> 00:37:20,270
doing that vs code demo right I just

00:37:18,740 --> 00:37:21,740
went and I did open folder and I pointed

00:37:20,270 --> 00:37:22,790
it or folder right would it be great if

00:37:21,740 --> 00:37:26,090
you could do the same thing inside a

00:37:22,790 --> 00:37:27,590
visual studio so I go in there I select

00:37:26,090 --> 00:37:30,130
open folder I'm going to go in here i'm

00:37:27,590 --> 00:37:32,529
going to pick just a folder this is

00:37:30,130 --> 00:37:34,539
ecstasy is a random algorithms thing we

00:37:32,529 --> 00:37:36,579
got off the internet it is not there's

00:37:34,539 --> 00:37:39,130
no project file here there's no see make

00:37:36,579 --> 00:37:41,109
it's just like the the vs code damage is

00:37:39,130 --> 00:37:42,130
something we're pointing at so what I'm

00:37:41,109 --> 00:37:44,170
going to do is I'm going in there and

00:37:42,130 --> 00:37:47,859
sort of scanned notice that it was there

00:37:44,170 --> 00:37:49,990
when I come in here and I open up one of

00:37:47,859 --> 00:37:52,329
these files if I give it a second it'll

00:37:49,990 --> 00:37:55,839
actually color once again if I come in

00:37:52,329 --> 00:37:58,930
here and do our beautiful you find all

00:37:55,839 --> 00:38:01,809
references experience it'll work and so

00:37:58,930 --> 00:38:03,460
how does this work so again it's JSON

00:38:01,809 --> 00:38:05,049
files all the way down so i'm going to

00:38:03,460 --> 00:38:08,710
go i'm going to show you let's use go to

00:38:05,049 --> 00:38:10,539
control comma and i'll do f CN PPP and

00:38:08,710 --> 00:38:15,490
you can see we've got the CPP properties

00:38:10,539 --> 00:38:20,049
JSON file and it looks going up oh okay

00:38:15,490 --> 00:38:22,390
cbv droll comma f Spacey VPP I'm

00:38:20,049 --> 00:38:24,940
secretly actually a mouse guy guys ok so

00:38:22,390 --> 00:38:26,559
you specify the include path you you

00:38:24,940 --> 00:38:28,690
look at the forced includes and you add

00:38:26,559 --> 00:38:29,799
the pound defines and it's enough that's

00:38:28,690 --> 00:38:31,059
how we're able to go and do that now

00:38:29,799 --> 00:38:32,140
we're going to keep going forwards on

00:38:31,059 --> 00:38:33,519
this and add the other kinds of

00:38:32,140 --> 00:38:35,140
experiences that you would expect like

00:38:33,519 --> 00:38:36,880
the ability to you know tell it how to

00:38:35,140 --> 00:38:38,950
find the right place to debug et cetera

00:38:36,880 --> 00:38:40,119
but that's just if you have a sort of

00:38:38,950 --> 00:38:42,369
random code that doesn't have anything

00:38:40,119 --> 00:38:45,039
but if i switch over to this other

00:38:42,369 --> 00:38:47,920
visual studio and I go to open folder

00:38:45,039 --> 00:38:51,250
and it picked that other folder that I

00:38:47,920 --> 00:38:53,019
had on that demos the sea make one I'm

00:38:51,250 --> 00:38:55,960
going to get an even better solution so

00:38:53,019 --> 00:38:57,730
this one is a basically every time you

00:38:55,960 --> 00:39:00,250
go open folder it goes and it rolls

00:38:57,730 --> 00:39:02,170
through the folder that it's opened and

00:39:00,250 --> 00:39:04,569
looks for as sort of these magic files

00:39:02,170 --> 00:39:05,529
right there's CBP proj JSON if it sees

00:39:04,569 --> 00:39:07,210
that it does what I was showing you

00:39:05,529 --> 00:39:09,759
before but if it finds that there's a

00:39:07,210 --> 00:39:11,380
sea make lists text file it will go in

00:39:09,759 --> 00:39:12,819
and you know now we've got enough

00:39:11,380 --> 00:39:14,440
information without you modifying

00:39:12,819 --> 00:39:16,750
anything to go in and again the

00:39:14,440 --> 00:39:18,250
colorization happened come in here I'll

00:39:16,750 --> 00:39:19,779
find our references again and to show

00:39:18,250 --> 00:39:22,329
you nothing on the sleeve notes not

00:39:19,779 --> 00:39:24,849
sleepy ah next thing i want to show you

00:39:22,329 --> 00:39:27,190
on this though is this one this is dump

00:39:24,849 --> 00:39:28,420
the early you I this is not how it's

00:39:27,190 --> 00:39:32,019
going to work eventually but you can

00:39:28,420 --> 00:39:34,299
come in here already click build it will

00:39:32,019 --> 00:39:40,750
succeed and yes you can right click on

00:39:34,299 --> 00:39:42,010
here if I debug and then a little bit of

00:39:40,750 --> 00:39:44,530
look

00:39:42,010 --> 00:39:46,930
yeah we're debugging the seeming thing

00:39:44,530 --> 00:39:49,060
so I want to stress there is no secret

00:39:46,930 --> 00:39:51,580
background generation of projects going

00:39:49,060 --> 00:39:52,990
on here we're actually you know using

00:39:51,580 --> 00:39:54,280
the sea make files sort of natively

00:39:52,990 --> 00:39:56,350
we're building on top of some awesome

00:39:54,280 --> 00:39:57,820
contributions in the community and we

00:39:56,350 --> 00:39:58,870
will make some enhancements to those and

00:39:57,820 --> 00:40:00,610
then contribute them back in

00:39:58,870 --> 00:40:02,530
collaboration with like the SEMA guys

00:40:00,610 --> 00:40:03,970
get where so yeah so that's the

00:40:02,530 --> 00:40:06,160
beginnings of sea make for visual studio

00:40:03,970 --> 00:40:10,480
I call this like visual studio on

00:40:06,160 --> 00:40:12,040
projects yes all right ok Daniel you're

00:40:10,480 --> 00:40:14,530
you guys didn't like that to you crop

00:40:12,040 --> 00:40:16,270
through the table that's the joke galaxy

00:40:14,530 --> 00:40:19,420
once you start together we got to keep

00:40:16,270 --> 00:40:21,280
going i'm addicted yeah without project

00:40:19,420 --> 00:40:22,900
so it's make it easier for you to just

00:40:21,280 --> 00:40:24,460
come and try visual studio without

00:40:22,900 --> 00:40:27,940
having to first buy into the whole

00:40:24,460 --> 00:40:31,180
project idea essentially so acquisition

00:40:27,940 --> 00:40:34,390
installation experience if you go and

00:40:31,180 --> 00:40:35,950
try so that was a demo if you go and try

00:40:34,390 --> 00:40:37,810
and install visual studio 15 you're

00:40:35,950 --> 00:40:40,030
going to see our new acquisition

00:40:37,810 --> 00:40:42,820
experience just curious how many people

00:40:40,030 --> 00:40:44,170
have actually tried visuals do 15 just a

00:40:42,820 --> 00:40:45,730
few of you so you guys may have seen

00:40:44,170 --> 00:40:47,140
that because it came it's a certain

00:40:45,730 --> 00:40:49,900
prettier than I don't know which one but

00:40:47,140 --> 00:40:51,490
it looks like this now so what we have

00:40:49,900 --> 00:40:54,280
is what we call a workload based

00:40:51,490 --> 00:40:56,440
approach to pick in your installation

00:40:54,280 --> 00:40:57,700
you can go and choose individual

00:40:56,440 --> 00:40:59,500
components and kind of do it a different

00:40:57,700 --> 00:41:02,200
way but the workload based approach what

00:40:59,500 --> 00:41:03,670
we expect most people to pick so for

00:41:02,200 --> 00:41:06,010
example you see at the top box up there

00:41:03,670 --> 00:41:07,870
it says the universal Windows platform

00:41:06,010 --> 00:41:10,030
development so if you were targeting

00:41:07,870 --> 00:41:11,680
apps to deploy to the Windows Store in

00:41:10,030 --> 00:41:14,080
whatever language you would pick that

00:41:11,680 --> 00:41:15,910
workload I have actually picked the one

00:41:14,080 --> 00:41:18,040
underneath hence the check mark which is

00:41:15,910 --> 00:41:19,720
the Windows desktop development of C++

00:41:18,040 --> 00:41:21,760
it says desktop but really it's just to

00:41:19,720 --> 00:41:23,470
build any binary that will run on

00:41:21,760 --> 00:41:25,870
Windows is not specifically targeting

00:41:23,470 --> 00:41:27,040
the Windows Store and then when you pick

00:41:25,870 --> 00:41:29,380
it here on the right you can go and

00:41:27,040 --> 00:41:31,360
fine-tuned and customize further within

00:41:29,380 --> 00:41:34,360
that workload now this is awesome why is

00:41:31,360 --> 00:41:36,580
it also three reasons first you will

00:41:34,360 --> 00:41:38,110
actually your hard disk will thank us

00:41:36,580 --> 00:41:40,000
right you're gonna you're going to only

00:41:38,110 --> 00:41:42,340
install the things that you want so this

00:41:40,000 --> 00:41:44,440
will have a smaller footprint second

00:41:42,340 --> 00:41:46,210
it's going to be much faster to install

00:41:44,440 --> 00:41:48,310
because again you're picking exactly

00:41:46,210 --> 00:41:49,840
what you want install and third there's

00:41:48,310 --> 00:41:51,520
not going to be the visual noise of

00:41:49,840 --> 00:41:53,230
things that you didn't care about that

00:41:51,520 --> 00:41:54,460
you just got because it's there with

00:41:53,230 --> 00:41:55,660
visual studio because you're only

00:41:54,460 --> 00:41:58,390
picking exactly the work

00:41:55,660 --> 00:42:00,400
that you want so for example if you

00:41:58,390 --> 00:42:01,569
didn't care at all about c-sharp you

00:42:00,400 --> 00:42:04,960
just didn't want to see that thing ever

00:42:01,569 --> 00:42:06,220
other than here maybe you pick C++

00:42:04,960 --> 00:42:07,869
because that's what you care about and

00:42:06,220 --> 00:42:09,789
then you will get the visual studio

00:42:07,869 --> 00:42:13,960
installation for c++ only the one you've

00:42:09,789 --> 00:42:15,130
always dreamt of in under 12 minutes all

00:42:13,960 --> 00:42:17,740
right so I don't know how many people

00:42:15,130 --> 00:42:19,119
budget for you know less than an hour to

00:42:17,740 --> 00:42:21,130
go and install visual suit of the day

00:42:19,119 --> 00:42:23,289
but at this point you get that like

00:42:21,130 --> 00:42:26,319
that's that's fast now there is a fourth

00:42:23,289 --> 00:42:28,180
reason is a c++ developer to to like

00:42:26,319 --> 00:42:30,849
here which is if you see here in the

00:42:28,180 --> 00:42:33,069
options this is where we can we can and

00:42:30,849 --> 00:42:35,020
will give you the ability to install all

00:42:33,069 --> 00:42:36,549
the tool sets so if you have some a

00:42:35,020 --> 00:42:39,339
project that you cannot move forward

00:42:36,549 --> 00:42:41,049
from let's say the visual studio 2013

00:42:39,339 --> 00:42:42,760
compiler or something like that instead

00:42:41,049 --> 00:42:44,500
of having to install that visual studio

00:42:42,760 --> 00:42:46,480
and have them side by side you just get

00:42:44,500 --> 00:42:47,710
the latest visual studio pick the tool

00:42:46,480 --> 00:42:49,630
set and then in that project is

00:42:47,710 --> 00:42:52,150
configured to target the older toolset

00:42:49,630 --> 00:42:53,980
again you had this good will help thank

00:42:52,150 --> 00:42:56,260
us for that so that's kind of like the

00:42:53,980 --> 00:42:59,799
workload approach that we're taking this

00:42:56,260 --> 00:43:01,599
is a good segue to the last section that

00:42:59,799 --> 00:43:04,210
we have where we actually talked about

00:43:01,599 --> 00:43:06,579
workloads and these workloads are in the

00:43:04,210 --> 00:43:08,740
visual studio 15 cents and in the in

00:43:06,579 --> 00:43:10,029
this installer but also a weekend you

00:43:08,740 --> 00:43:12,789
can use some of these like the

00:43:10,029 --> 00:43:15,660
android/ios with extensions and project

00:43:12,789 --> 00:43:18,309
types and so on so again I think we have

00:43:15,660 --> 00:43:20,289
probably time for a question if someone

00:43:18,309 --> 00:43:31,470
has on the stuff we've seen so far on a

00:43:20,289 --> 00:43:34,150
visual studio yes sir I think that Oh

00:43:31,470 --> 00:43:35,829
repeat the question all right can we can

00:43:34,150 --> 00:43:38,740
you save the configuration that you had

00:43:35,829 --> 00:43:40,869
I don't believe that part has been

00:43:38,740 --> 00:43:42,309
implemented and I am NOT a thousand

00:43:40,869 --> 00:43:43,690
percent sure with the spec but but that

00:43:42,309 --> 00:43:47,109
sounds like an extremely reasonable

00:43:43,690 --> 00:43:48,670
thing so we if we weren't planet will do

00:43:47,109 --> 00:43:51,369
it and in the preview builds there isn't

00:43:48,670 --> 00:43:53,500
things like there's no like offline

00:43:51,369 --> 00:43:54,910
install isn't there yet these things are

00:43:53,500 --> 00:43:56,680
coming but we'll we'll make sure people

00:43:54,910 --> 00:44:00,240
know yeah we have time for another

00:43:56,680 --> 00:44:00,240
questions wrong yes

00:44:21,329 --> 00:44:26,260
okay so we'll we'll definitely so the

00:44:24,640 --> 00:44:28,329
question was it will touch on Ross

00:44:26,260 --> 00:44:31,089
platform you know Jax will touch on that

00:44:28,329 --> 00:44:51,819
a bit in a minute Jonah I'll take one

00:44:31,089 --> 00:44:52,900
more if you want so the question is

00:44:51,819 --> 00:44:54,910
about the last thing with a visual

00:44:52,900 --> 00:44:56,589
studio debug engine that we plug into

00:44:54,910 --> 00:44:58,180
Visual Studio code you can use Visual

00:44:56,589 --> 00:45:00,310
Studio code without new client to do

00:44:58,180 --> 00:45:02,560
anything else so I think that's the

00:45:00,310 --> 00:45:04,720
answer the visual studio debug engine

00:45:02,560 --> 00:45:06,490
you is not something used directly or

00:45:04,720 --> 00:45:08,470
that we would expect someone to use

00:45:06,490 --> 00:45:35,079
directly use the code through that you

00:45:08,470 --> 00:45:37,480
get access to the engine yeah sure so so

00:45:35,079 --> 00:45:38,800
the question isn't on the question isn't

00:45:37,480 --> 00:45:40,720
see make and basically how do you

00:45:38,800 --> 00:45:42,010
distribute it how do you get it it keeps

00:45:40,720 --> 00:45:44,530
popping up everywhere like how is this

00:45:42,010 --> 00:45:46,569
going to work yeah so when you install

00:45:44,530 --> 00:45:48,010
visual studio you'll get everything you

00:45:46,569 --> 00:45:49,329
like you know if you noticed and on his

00:45:48,010 --> 00:45:57,579
slide there was actually a checkbox for

00:45:49,329 --> 00:45:59,230
the scenic tools yeah that's right no

00:45:57,579 --> 00:46:00,609
there's thing called see makinen that we

00:45:59,230 --> 00:46:03,970
talked to that that allows us to answer

00:46:00,609 --> 00:46:06,760
questions ever me yeah okay alright cool

00:46:03,970 --> 00:46:08,410
so let's jump into the workloads and

00:46:06,760 --> 00:46:09,630
this was the section I I said that the

00:46:08,410 --> 00:46:14,349
start we're going to go very fast

00:46:09,630 --> 00:46:15,849
through so first windows did they ask

00:46:14,349 --> 00:46:17,819
already how many people deploy to the

00:46:15,849 --> 00:46:20,480
Windows Store and we asked that question

00:46:17,819 --> 00:46:23,540
12 okay three

00:46:20,480 --> 00:46:25,640
like just shy like maybe and so I'll

00:46:23,540 --> 00:46:27,710
just go through that kind of quickly the

00:46:25,640 --> 00:46:31,400
new things that we have in there there's

00:46:27,710 --> 00:46:35,030
now a single unified windows store where

00:46:31,400 --> 00:46:36,830
you can deploy a single binary and with

00:46:35,030 --> 00:46:42,260
that reach all the different platforms

00:46:36,830 --> 00:46:45,320
desktop mobile hollow lens Xbox like

00:46:42,260 --> 00:46:48,920
everything and the at runtime that can

00:46:45,320 --> 00:46:51,619
detect and adjust to the format the

00:46:48,920 --> 00:46:53,270
input type and the actual form factor of

00:46:51,619 --> 00:46:54,650
the device it is running on so that's

00:46:53,270 --> 00:46:56,180
pretty cool we've also made some

00:46:54,650 --> 00:46:57,890
advancements here to the angle open

00:46:56,180 --> 00:46:59,570
source library if you want to use OpenGL

00:46:57,890 --> 00:47:01,850
and your mobile apps both of the Windows

00:46:59,570 --> 00:47:03,410
Store but also this accrues to targeting

00:47:01,850 --> 00:47:05,480
Android and iOS which is a workload

00:47:03,410 --> 00:47:07,280
we're going to attach on later on so

00:47:05,480 --> 00:47:08,990
that's cool as well and then what we try

00:47:07,280 --> 00:47:12,350
what we're doing now is experimenting

00:47:08,990 --> 00:47:14,450
with a c++ standards approach to access

00:47:12,350 --> 00:47:16,970
in winner t and there was talk about

00:47:14,450 --> 00:47:18,800
that earlier today that Canyon James did

00:47:16,970 --> 00:47:20,450
so if you're interested in that you

00:47:18,800 --> 00:47:22,609
should go and watch the recording on

00:47:20,450 --> 00:47:25,160
YouTube where they went in-depth us to

00:47:22,609 --> 00:47:27,320
how that works as an alternative

00:47:25,160 --> 00:47:30,100
approach to c plus plus CX potentially

00:47:27,320 --> 00:47:33,380
at some point now a lot of you have

00:47:30,100 --> 00:47:34,520
desktop apps and maybe from those

00:47:33,380 --> 00:47:35,780
desktop apps you want to reach more

00:47:34,520 --> 00:47:37,460
people by going through the windows

00:47:35,780 --> 00:47:39,500
store so we have this cool thing called

00:47:37,460 --> 00:47:43,100
the centennial bridge that allows you to

00:47:39,500 --> 00:47:45,140
package your desktop app and deployed to

00:47:43,100 --> 00:47:47,150
the Windows Store so that's kind of an

00:47:45,140 --> 00:47:48,530
easy way the first step to get there so

00:47:47,150 --> 00:47:50,630
that's something you should check out if

00:47:48,530 --> 00:47:52,490
that's of interest the other bridge that

00:47:50,630 --> 00:47:55,609
we have is the island woodbridge which

00:47:52,490 --> 00:47:58,100
is a project on github where it allows

00:47:55,609 --> 00:48:00,109
you to easily port iOS apps and have

00:47:58,100 --> 00:48:01,280
them run on the Windows platform and for

00:48:00,109 --> 00:48:03,290
the store and you can then go and

00:48:01,280 --> 00:48:06,050
advance them further by adding windows

00:48:03,290 --> 00:48:08,570
specific behaviors and finally we have

00:48:06,050 --> 00:48:11,300
this project structure in visual studio

00:48:08,570 --> 00:48:13,940
where you can go and actually share code

00:48:11,300 --> 00:48:16,010
across any platform at your target so we

00:48:13,940 --> 00:48:18,020
make that very easy to happen and Linux

00:48:16,010 --> 00:48:21,590
is coming very soon to that we haven't

00:48:18,020 --> 00:48:23,890
added that bit yet so there's a question

00:48:21,590 --> 00:48:23,890
still

00:48:29,529 --> 00:48:34,160
so the question was around linux hold up

00:48:32,450 --> 00:48:36,410
thought when we get to there and and if

00:48:34,160 --> 00:48:37,609
it still no answers bring it up again so

00:48:36,410 --> 00:48:39,170
i'm going to switch gears and go to the

00:48:37,609 --> 00:48:42,170
mobile workload which is now work load

00:48:39,170 --> 00:48:45,980
in its own right for android and iOS

00:48:42,170 --> 00:48:47,569
development and instead of talking about

00:48:45,980 --> 00:48:49,339
this there's actually another session

00:48:47,569 --> 00:48:50,569
here it's not done by Microsoft

00:48:49,339 --> 00:48:52,039
employees I don't know what's in it but

00:48:50,569 --> 00:48:53,690
I'm sure it's going to be great so you

00:48:52,039 --> 00:48:54,890
should go and look at this session will

00:48:53,690 --> 00:48:57,890
attend this if you're interested in

00:48:54,890 --> 00:48:59,960
mobile app development with visual c++

00:48:57,890 --> 00:49:02,000
or go to the URL at the bottom in a

00:48:59,960 --> 00:49:03,829
nutshell for those of you following the

00:49:02,000 --> 00:49:06,410
story there because we started that a

00:49:03,829 --> 00:49:08,150
while back we now have support for a

00:49:06,410 --> 00:49:10,099
round trip and importing and round trip

00:49:08,150 --> 00:49:11,630
in xcode their projects including

00:49:10,099 --> 00:49:14,119
support for frameworks and dynamic

00:49:11,630 --> 00:49:15,950
libraries and on the Android side we

00:49:14,119 --> 00:49:17,539
have an hour java language service that

00:49:15,950 --> 00:49:20,000
underpins intellisense and navigation

00:49:17,539 --> 00:49:23,690
and also the ability to debug java code

00:49:20,000 --> 00:49:25,609
when you mix Java and C++ on on Android

00:49:23,690 --> 00:49:28,099
and that and then finally also support

00:49:25,609 --> 00:49:29,660
for the Gradle build system again go to

00:49:28,099 --> 00:49:32,450
the other talk which I'm sure will go in

00:49:29,660 --> 00:49:35,210
more depth on these things moving on to

00:49:32,450 --> 00:49:38,660
the Linux workload so how many people

00:49:35,210 --> 00:49:40,670
have not heard of but actually tried our

00:49:38,660 --> 00:49:43,490
support for linux development here

00:49:40,670 --> 00:49:45,380
that's just a few of you so if you and I

00:49:43,490 --> 00:49:46,609
bet you've tried that in the visual

00:49:45,380 --> 00:49:47,839
studio thousand fifteen with the

00:49:46,609 --> 00:49:50,269
extension right yeah I'm seeing they're

00:49:47,839 --> 00:49:52,910
not if you go and select the Linux

00:49:50,269 --> 00:49:56,359
workloads here with visuals to 15 that

00:49:52,910 --> 00:49:58,009
will install in under six minutes so

00:49:56,359 --> 00:50:01,490
that is something you can very easily go

00:49:58,009 --> 00:50:04,490
try and to target Linux remotely from a

00:50:01,490 --> 00:50:07,250
visual studio so how that works is kind

00:50:04,490 --> 00:50:08,660
of how the Linux development works is up

00:50:07,250 --> 00:50:11,119
here on the slide but instead of me

00:50:08,660 --> 00:50:13,759
talking about this i will have steve to

00:50:11,119 --> 00:50:17,210
do his final demo so you know at the end

00:50:13,759 --> 00:50:20,630
you got a really really applaud hard yes

00:50:17,210 --> 00:50:23,450
or i'll cry a promise alright so to do

00:50:20,630 --> 00:50:25,730
the linux targeting development inside a

00:50:23,450 --> 00:50:27,740
visual studio all you need is some linux

00:50:25,730 --> 00:50:29,029
so I've got some linux here I've got

00:50:27,740 --> 00:50:33,890
some linux running in a virtual machine

00:50:29,029 --> 00:50:35,779
on my laptop this is Ubuntu 16 LTS so

00:50:33,890 --> 00:50:36,859
I'm going to switch over here all you

00:50:35,779 --> 00:50:39,289
need on that that thing

00:50:36,859 --> 00:50:41,299
is I don't care if it's a vm i don't i

00:50:39,289 --> 00:50:42,980
don't care if it's an azure as long as

00:50:41,299 --> 00:50:44,210
you can ssh to it as long as it's got

00:50:42,980 --> 00:50:45,589
some build tools on it because today

00:50:44,210 --> 00:50:49,640
we're mostly targeting remote build

00:50:45,589 --> 00:50:52,099
scenarios and so I've got a rotating

00:50:49,640 --> 00:50:53,869
cube here I've got a project here this

00:50:52,099 --> 00:50:54,950
is a linux project as you can see and

00:50:53,869 --> 00:50:57,650
i'm going to go and i'm going to show

00:50:54,950 --> 00:51:00,859
you the properties if i go in here and i

00:50:57,650 --> 00:51:02,119
got remote settings I've got it set ups

00:51:00,859 --> 00:51:03,769
here so it tells you where the target

00:51:02,119 --> 00:51:06,579
machine is now to specify where the

00:51:03,769 --> 00:51:08,420
target machine is we go to tools options

00:51:06,579 --> 00:51:11,150
to come in here i'm gonna type

00:51:08,420 --> 00:51:12,650
connection go spell it right then i'm

00:51:11,150 --> 00:51:14,989
going to get a connection manager it's

00:51:12,650 --> 00:51:16,670
as simple as this connect remote system

00:51:14,989 --> 00:51:19,339
dialogue all you have to do is specify

00:51:16,670 --> 00:51:21,319
the hostname what port ssh is running on

00:51:19,339 --> 00:51:23,749
and your username and either a private

00:51:21,319 --> 00:51:25,190
key or a password I've already done that

00:51:23,749 --> 00:51:30,529
I prepped this one so that it's talking

00:51:25,190 --> 00:51:32,420
to that to that virtual machine so also

00:51:30,529 --> 00:51:33,529
inside of the properties file you can

00:51:32,420 --> 00:51:35,989
see all the kind of other stuff that we

00:51:33,529 --> 00:51:38,869
do here you see we're using GCC here we

00:51:35,989 --> 00:51:40,670
added support for clang in the last

00:51:38,869 --> 00:51:43,910
iteration of these tools we're shipping

00:51:40,670 --> 00:51:45,650
a bell monthly on this generator you can

00:51:43,910 --> 00:51:47,779
see you can pick your standard librarian

00:51:45,650 --> 00:51:50,239
that we're targeting GCC remotely okay

00:51:47,779 --> 00:51:53,329
so that's cool so because it's not a

00:51:50,239 --> 00:51:55,700
demo unless I show final references okay

00:51:53,329 --> 00:51:57,559
so we got all what I did to prep this

00:51:55,700 --> 00:51:58,849
machine is I simply copied my source

00:51:57,559 --> 00:52:01,009
code here and I actually even just

00:51:58,849 --> 00:52:02,749
mirrored over us or include so that you

00:52:01,009 --> 00:52:04,430
could make sure that I could actually

00:52:02,749 --> 00:52:06,619
know where all of the header files were

00:52:04,430 --> 00:52:08,029
got that set up and I'm good to go you

00:52:06,619 --> 00:52:09,890
can see here I found all places this

00:52:08,029 --> 00:52:11,749
this is an OpenGL application it's going

00:52:09,890 --> 00:52:14,210
to spin a cute all right so i won't

00:52:11,749 --> 00:52:15,859
tease i'm going to actually launch this

00:52:14,210 --> 00:52:17,150
so what's going to happen is it's going

00:52:15,859 --> 00:52:18,410
to it's actually going to copy the

00:52:17,150 --> 00:52:22,309
source files over the remote machine

00:52:18,410 --> 00:52:24,920
build them there and then you know start

00:52:22,309 --> 00:52:27,289
up the application and were we're about

00:52:24,920 --> 00:52:30,249
ready to go here so i'm right here at

00:52:27,289 --> 00:52:32,420
the beginning now i'm going to hit f5

00:52:30,249 --> 00:52:35,480
it's going to go and we're going to

00:52:32,420 --> 00:52:37,700
watch a cube rotate in 3d on linux from

00:52:35,480 --> 00:52:39,019
visual studio okay so i'm going to hit

00:52:37,700 --> 00:52:40,759
cue just prove I'm not faking anything

00:52:39,019 --> 00:52:41,960
here we're going to end up here it's

00:52:40,759 --> 00:52:44,089
going to hit a breakpoint back here on

00:52:41,960 --> 00:52:46,460
visual studio this is cool we've done

00:52:44,089 --> 00:52:46,890
this demo a few times and we you know we

00:52:46,460 --> 00:52:48,960
love see

00:52:46,890 --> 00:52:50,970
picon it's in our town all this stuff so

00:52:48,960 --> 00:52:53,039
we wanted to show one new thing here

00:52:50,970 --> 00:52:55,740
that we've never shown before this is

00:52:53,039 --> 00:52:57,359
the grand finale so speak so I'm going

00:52:55,740 --> 00:52:59,940
to go in here I'm going to open up a

00:52:57,359 --> 00:53:03,319
very much hello world this time I'm

00:52:59,940 --> 00:53:05,940
going to go in to my project properties

00:53:03,319 --> 00:53:07,950
this time I'm going to go to remote

00:53:05,940 --> 00:53:12,059
settings and this time I'm going to

00:53:07,950 --> 00:53:13,710
point it at 127 00 got one all right

00:53:12,059 --> 00:53:15,839
they may notice this thing down here

00:53:13,710 --> 00:53:20,099
what this whole time was it teasing you

00:53:15,839 --> 00:53:22,319
right ok so in windows 10 anniversary

00:53:20,099 --> 00:53:24,510
edition there is a what's called the

00:53:22,319 --> 00:53:26,309
window subsystem for linux and what that

00:53:24,510 --> 00:53:28,650
is is it's not a vm there's no virtual

00:53:26,309 --> 00:53:30,539
machine here nothing up my sleeve this

00:53:28,650 --> 00:53:34,019
is an actual image of the loom to I

00:53:30,539 --> 00:53:35,940
think it's a bunch of 14 actually 14 one

00:53:34,019 --> 00:53:38,700
point that's actually integrated inside

00:53:35,940 --> 00:53:40,980
of Windows and so all I've done here you

00:53:38,700 --> 00:53:44,670
can see I suited up some moss or a spin

00:53:40,980 --> 00:53:45,750
sshd and so now when I go and I pointed

00:53:44,670 --> 00:53:47,220
at the target machine what's gonna do

00:53:45,750 --> 00:53:49,920
it's going to loop back around and talk

00:53:47,220 --> 00:53:53,130
to the window subsystem for linux so I

00:53:49,920 --> 00:53:54,690
don't know I hope this works alright so

00:53:53,130 --> 00:53:57,269
this is like me attempting to build

00:53:54,690 --> 00:54:01,079
suspense ok how's it how's that going

00:53:57,269 --> 00:54:02,339
alright so again I'm building so what's

00:54:01,079 --> 00:54:03,990
going to happen here is it's going to

00:54:02,339 --> 00:54:05,400
copy that over through there it's going

00:54:03,990 --> 00:54:07,890
to copy remotely into it I've actually

00:54:05,400 --> 00:54:09,779
installed GD GD b and GCC and all its

00:54:07,890 --> 00:54:11,430
friends there this is the linux council

00:54:09,779 --> 00:54:12,690
window so that you're not constantly

00:54:11,430 --> 00:54:14,099
having to like flip back and forth

00:54:12,690 --> 00:54:15,450
between VMs if you're just doing like a

00:54:14,099 --> 00:54:17,400
simple console app you can actually just

00:54:15,450 --> 00:54:20,460
use it here so i'll step over the line

00:54:17,400 --> 00:54:21,990
and it'll print out locally hello from

00:54:20,460 --> 00:54:24,980
console application 11 so we're done

00:54:21,990 --> 00:54:24,980
thanks

00:54:29,110 --> 00:54:38,210
cuz I they drop the mic yeah cool uh so

00:54:36,800 --> 00:54:40,160
I hope you like that because Microsoft

00:54:38,210 --> 00:54:43,220
does love Linux if satya says it I can

00:54:40,160 --> 00:54:45,050
say it as well so i could ham thing like

00:54:43,220 --> 00:54:47,200
i can mimic that we tried this is now

00:54:45,050 --> 00:54:50,420
possible I don't know how he does it

00:54:47,200 --> 00:54:52,640
related to linux kind of some situations

00:54:50,420 --> 00:54:55,460
is the Internet of Things IOT is kind of

00:54:52,640 --> 00:54:57,470
hot these days and when your things are

00:54:55,460 --> 00:54:59,480
running Linux everything we showed you

00:54:57,470 --> 00:55:01,850
just works so if you're doing kind of a

00:54:59,480 --> 00:55:03,830
ir t development with linux devices all

00:55:01,850 --> 00:55:05,270
of this stuff just works there for you

00:55:03,830 --> 00:55:07,130
and we will be adding support for

00:55:05,270 --> 00:55:08,360
microcontrollers and we're not sure if

00:55:07,130 --> 00:55:09,800
we're going to add that in this workload

00:55:08,360 --> 00:55:11,930
with linux or if we're going to have it

00:55:09,800 --> 00:55:13,310
separate we'll see we're not sure at

00:55:11,930 --> 00:55:16,340
this point but we will add support for

00:55:13,310 --> 00:55:17,960
microcontrollers and on the IOT front if

00:55:16,340 --> 00:55:20,420
you do 90 development in any environment

00:55:17,960 --> 00:55:22,040
on any platform this thing it's IOT

00:55:20,420 --> 00:55:23,690
because of the I that's the Internet

00:55:22,040 --> 00:55:25,280
these things are connected so if you

00:55:23,690 --> 00:55:26,540
need to be connected to something you

00:55:25,280 --> 00:55:30,650
should definitely check out the azure

00:55:26,540 --> 00:55:31,850
IOT SDK which is that URL which has all

00:55:30,650 --> 00:55:35,090
the things you would ever need variety

00:55:31,850 --> 00:55:38,180
development for your back-end moving to

00:55:35,090 --> 00:55:40,430
another workload games so you can see

00:55:38,180 --> 00:55:42,080
there at the top a unity has its own a

00:55:40,430 --> 00:55:44,780
workload because this mostly she shop

00:55:42,080 --> 00:55:46,460
folks that use that we think and then we

00:55:44,780 --> 00:55:48,890
have the one that I've checked which is

00:55:46,460 --> 00:55:50,900
the c++ game development which includes

00:55:48,890 --> 00:55:52,880
in our caucus and unreal and direct x

00:55:50,900 --> 00:55:54,290
and so on which you can configure on the

00:55:52,880 --> 00:55:56,630
side as usual you should be used to this

00:55:54,290 --> 00:55:58,970
by now so if we go and look at that

00:55:56,630 --> 00:56:00,860
first i should say if you're doing game

00:55:58,970 --> 00:56:03,110
development again with any tool or any

00:56:00,860 --> 00:56:04,760
platform similar to the IIT there is a

00:56:03,110 --> 00:56:06,470
trend with games now whether kind of

00:56:04,760 --> 00:56:08,300
using some kind of back-end service

00:56:06,470 --> 00:56:09,980
somewhere and azure does have a set of

00:56:08,300 --> 00:56:11,420
services specifically for game

00:56:09,980 --> 00:56:12,890
development so if you're doing game

00:56:11,420 --> 00:56:14,060
development should check out that URL

00:56:12,890 --> 00:56:16,220
and see if there's anything there of

00:56:14,060 --> 00:56:18,020
interest to you if you're doing your

00:56:16,220 --> 00:56:20,360
game development Direct X in visual

00:56:18,020 --> 00:56:22,580
studio then you may be are looking at

00:56:20,360 --> 00:56:23,870
the latest Direct X 12 and we've done a

00:56:22,580 --> 00:56:25,160
bunch of things that I've got on the

00:56:23,870 --> 00:56:27,050
slide improvements there in the

00:56:25,160 --> 00:56:28,820
Diagnostics space for debugging and

00:56:27,050 --> 00:56:30,680
profiling that you should find exciting

00:56:28,820 --> 00:56:32,570
so take the bits and check it out if

00:56:30,680 --> 00:56:34,340
you're not using that and instead you're

00:56:32,570 --> 00:56:35,450
working with one of our partners we are

00:56:34,340 --> 00:56:37,400
actually still evolving those

00:56:35,450 --> 00:56:39,140
relationships and moving forward so for

00:56:37,400 --> 00:56:40,880
example with the Coco's recently we had

00:56:39,140 --> 00:56:42,950
a blog post that showed an example

00:56:40,880 --> 00:56:44,480
of how to use caucus target Android from

00:56:42,950 --> 00:56:46,790
within visual studio so you can go on a

00:56:44,480 --> 00:56:49,190
blog and read about that and then epic

00:56:46,790 --> 00:56:51,140
for their Unreal Engine are actually

00:56:49,190 --> 00:56:52,700
working on that they don't have public

00:56:51,140 --> 00:56:54,530
bits yet they've got it internally

00:56:52,700 --> 00:56:56,690
though working with integrated editing

00:56:54,530 --> 00:56:58,010
and debugging and in visual studio so

00:56:56,690 --> 00:57:00,380
that what you're appetite with the

00:56:58,010 --> 00:57:01,820
screenshots that we have here and when

00:57:00,380 --> 00:57:03,680
this is ready for public consumption

00:57:01,820 --> 00:57:07,540
they will talk about it we will blog

00:57:03,680 --> 00:57:09,500
about it as well so that's the gaming

00:57:07,540 --> 00:57:11,510
workload and that brings us to the end

00:57:09,500 --> 00:57:13,160
of the workloads if there are workloads

00:57:11,510 --> 00:57:14,210
that we're missing here because really

00:57:13,160 --> 00:57:17,030
what we're trying to do is make sure

00:57:14,210 --> 00:57:19,460
that as a C++ developer no matter what

00:57:17,030 --> 00:57:21,350
type of development you're doing what

00:57:19,460 --> 00:57:22,940
you're targeting from Visual Studio and

00:57:21,350 --> 00:57:24,020
windows one offer that to you that's

00:57:22,940 --> 00:57:26,810
what we're trying to do so if there's

00:57:24,020 --> 00:57:28,520
something we're missing let us know I'm

00:57:26,810 --> 00:57:31,490
going to swiftly move on given the time

00:57:28,520 --> 00:57:33,920
and we'll take questions at the end I've

00:57:31,490 --> 00:57:36,170
got this in one more slide so we've

00:57:33,920 --> 00:57:37,760
started recently updated significantly

00:57:36,170 --> 00:57:39,890
our documentation working with our dog

00:57:37,760 --> 00:57:41,600
folks and our doc documentation folks

00:57:39,890 --> 00:57:44,210
and rpms and engineers everybody

00:57:41,600 --> 00:57:45,440
involved and we're actually updated that

00:57:44,210 --> 00:57:47,120
so if you haven't been term as the end

00:57:45,440 --> 00:57:49,070
in a while and you're kind of stuck on

00:57:47,120 --> 00:57:50,510
some kind of issue you can move forward

00:57:49,070 --> 00:57:52,220
to the latest version read the

00:57:50,510 --> 00:57:54,620
documentation this is actually again

00:57:52,220 --> 00:57:56,990
better and we're also introducing a new

00:57:54,620 --> 00:57:59,030
repository on github that you can go

00:57:56,990 --> 00:58:00,770
which is specifically for samples and

00:57:59,030 --> 00:58:02,780
upgrading forward so that gives you a

00:58:00,770 --> 00:58:04,580
good examples to look at and if that

00:58:02,780 --> 00:58:06,650
fails you've done those two steps and

00:58:04,580 --> 00:58:09,080
you still cannot move forward we will do

00:58:06,650 --> 00:58:11,930
it for you so there is an email address

00:58:09,080 --> 00:58:13,850
down there vc up with so just email that

00:58:11,930 --> 00:58:15,710
and we will schedule a Skype call with

00:58:13,850 --> 00:58:17,750
you and we'll have our engineers help

00:58:15,710 --> 00:58:19,520
you while you're sharing your codes on

00:58:17,750 --> 00:58:21,380
the screen to actually move forward

00:58:19,520 --> 00:58:22,730
we're committed to bringing you forwards

00:58:21,380 --> 00:58:24,140
I think be honest it's something like

00:58:22,730 --> 00:58:26,090
that in the keynote as well we need

00:58:24,140 --> 00:58:27,440
people moving forward to the latest in

00:58:26,090 --> 00:58:28,850
order they can get value from the new

00:58:27,440 --> 00:58:31,190
things that we're doing so hope you

00:58:28,850 --> 00:58:36,230
appreciate that and then on the final

00:58:31,190 --> 00:58:37,820
slide to kind of summarize I mean how do

00:58:36,230 --> 00:58:39,290
you summarize it so much that we've went

00:58:37,820 --> 00:58:40,700
through there's all these demos is all

00:58:39,290 --> 00:58:42,110
these slides all these pointers so I

00:58:40,700 --> 00:58:43,640
think you guys are going to go away

00:58:42,110 --> 00:58:45,410
forget about all this i think what i

00:58:43,640 --> 00:58:47,480
want to do is just make sure you leave

00:58:45,410 --> 00:58:48,950
with some words like if it's just a few

00:58:47,480 --> 00:58:50,510
words you're going to remember what

00:58:48,950 --> 00:58:53,230
should those be so i'll give you my

00:58:50,510 --> 00:58:54,619
opinion i think it should be conformance

00:58:53,230 --> 00:58:59,109
should be

00:58:54,619 --> 00:59:00,829
activity should be see make it should be

00:58:59,109 --> 00:59:02,569
performance through cogeneration

00:59:00,829 --> 00:59:05,299
performance through build trip with

00:59:02,569 --> 00:59:08,230
performance in the ID I workload based

00:59:05,299 --> 00:59:14,359
installation Windows Linux Android iOS

00:59:08,230 --> 00:59:17,329
IOT games and yeah then I get sweaty and

00:59:14,359 --> 00:59:18,769
start sound developers but it is finally

00:59:17,329 --> 00:59:22,279
developers Ballmer those were the days

00:59:18,769 --> 00:59:23,839
right no but actually on that point I

00:59:22,279 --> 00:59:26,480
hope you guys are sensing the kind of

00:59:23,839 --> 00:59:27,829
the change where we're in the community

00:59:26,480 --> 00:59:29,630
we're listening we're participating

00:59:27,829 --> 00:59:31,700
we're collaborating we're contributing

00:59:29,630 --> 00:59:34,400
who would have thought a few years ago

00:59:31,700 --> 00:59:37,039
that we would release a free

00:59:34,400 --> 00:59:39,619
cross-platform editor like Visual Studio

00:59:37,039 --> 00:59:41,150
code then open source it after I mean

00:59:39,619 --> 00:59:46,430
nobody would have thought about that

00:59:41,150 --> 00:59:48,440
right I don't know who would have

00:59:46,430 --> 00:59:50,240
thought about us talking about and

00:59:48,440 --> 00:59:52,819
encouraging you to use Visual Studio

00:59:50,240 --> 00:59:54,710
target Linux and doing that by you know

00:59:52,819 --> 00:59:57,529
connecting to home I mean these these

00:59:54,710 --> 00:59:58,819
are things that we on the inside as

00:59:57,529 --> 01:00:02,059
employees of this company I really

00:59:58,819 --> 01:00:04,519
enjoying and I hope you guys are as well

01:00:02,059 --> 01:00:06,739
so there's always more we can do so

01:00:04,519 --> 01:00:09,079
please do email me if you have

01:00:06,739 --> 01:00:10,519
suggestions what we can do for the C++

01:00:09,079 --> 01:00:13,670
community in particular my email is

01:00:10,519 --> 01:00:15,380
Steve Carrell it's my now but you can

01:00:13,670 --> 01:00:17,630
email Steve but you can email me Daniel

01:00:15,380 --> 01:00:18,920
dot more fat microsoft com so thank you

01:00:17,630 --> 01:00:21,249
for staying with us and enjoy the rest

01:00:18,920 --> 01:00:21,249

YouTube URL: https://www.youtube.com/watch?v=MBmp1gxCu9k


