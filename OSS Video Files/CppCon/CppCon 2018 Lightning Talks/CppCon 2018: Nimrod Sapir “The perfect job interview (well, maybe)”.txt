Title: CppCon 2018: Nimrod Sapir “The perfect job interview (well, maybe)”
Publication date: 2018-11-11
Playlist: CppCon 2018 Lightning Talks
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:00,030 --> 00:00:05,190
so I'm Rodham trading infrastructure

00:00:03,030 --> 00:00:07,890
team leader in Hughes Park which we ran

00:00:05,190 --> 00:00:10,889
a chief tea firm but today I'm not going

00:00:07,890 --> 00:00:15,299
to talk about my product or even about

00:00:10,889 --> 00:00:17,400
C++ I'm going to talk about a specific

00:00:15,299 --> 00:00:20,100
aspect of recruitment which is a

00:00:17,400 --> 00:00:22,230
technical interview I've done dozens of

00:00:20,100 --> 00:00:26,070
them I'm sure many people here have done

00:00:22,230 --> 00:00:28,289
maybe even more I have some tips from my

00:00:26,070 --> 00:00:30,029
experience to how to do a good technical

00:00:28,289 --> 00:00:33,570
interview for a developer

00:00:30,029 --> 00:00:38,610
they're completely subjective so if you

00:00:33,570 --> 00:00:42,000
don't agree you're probably right so my

00:00:38,610 --> 00:00:44,850
first tip is to make this a learning

00:00:42,000 --> 00:00:46,980
opportunity for the candidate I want

00:00:44,850 --> 00:00:49,829
someone who has ability to learn new

00:00:46,980 --> 00:00:53,309
things which is more important than his

00:00:49,829 --> 00:00:56,160
skill set so I'm trying to assess his

00:00:53,309 --> 00:00:58,800
knowledge trying to figure out what I

00:00:56,160 --> 00:01:03,120
expect from him to know from the test

00:00:58,800 --> 00:01:05,430
and then compare it to what I get and if

00:01:03,120 --> 00:01:08,880
he's doing better than what I expect

00:01:05,430 --> 00:01:11,549
then I'll give him some extra credit I

00:01:08,880 --> 00:01:13,080
also try not to put a very hard limit on

00:01:11,549 --> 00:01:16,650
the test time give him time to think

00:01:13,080 --> 00:01:19,619
about the test looks into some resources

00:01:16,650 --> 00:01:22,799
search the web maybe learn C++ if he's a

00:01:19,619 --> 00:01:24,869
C developer and come back with any kind

00:01:22,799 --> 00:01:27,360
of answer even if it's not a perfect

00:01:24,869 --> 00:01:29,490
answer and if he I feel that the gap is

00:01:27,360 --> 00:01:31,710
too large but I think of a good

00:01:29,490 --> 00:01:33,930
candidate something sent him home

00:01:31,710 --> 00:01:35,700
tell him learn something and come back

00:01:33,930 --> 00:01:38,549
in a week and show me what you've

00:01:35,700 --> 00:01:42,869
learned maybe go home then 30p come back

00:01:38,549 --> 00:01:44,640
and teach me CR to be my second tip is

00:01:42,869 --> 00:01:48,000
to try to simulate a work environment

00:01:44,640 --> 00:01:50,399
that means for coding question real diva

00:01:48,000 --> 00:01:53,280
real development environment access to

00:01:50,399 --> 00:01:56,460
the Internet no wrinkly papers no white

00:01:53,280 --> 00:01:58,950
boards on pseudocode I provide assistant

00:01:56,460 --> 00:02:00,930
I try to create some kind of interaction

00:01:58,950 --> 00:02:04,229
with a candidate like is a real employee

00:02:00,930 --> 00:02:06,090
I tell maybe the performance here I look

00:02:04,229 --> 00:02:08,190
at the answer I tell pretty good maybe

00:02:06,090 --> 00:02:10,379
you can improve the performance working

00:02:08,190 --> 00:02:13,800
it try a different data structure and

00:02:10,379 --> 00:02:16,560
try to see how the interaction goes

00:02:13,800 --> 00:02:18,900
that also means that if a candidate can

00:02:16,560 --> 00:02:23,160
google the full answer probably not a

00:02:18,900 --> 00:02:25,140
good question sir tip I use my product

00:02:23,160 --> 00:02:28,140
as a base for the interview for example

00:02:25,140 --> 00:02:31,740
I make the candidate design or implement

00:02:28,140 --> 00:02:34,440
a simplified version of my product first

00:02:31,740 --> 00:02:36,690
of all I'm lazy using my own product

00:02:34,440 --> 00:02:40,110
make it very easy to create real-life

00:02:36,690 --> 00:02:42,360
scenarios the test also improves as a

00:02:40,110 --> 00:02:44,820
product evolves new features mean new

00:02:42,360 --> 00:02:47,520
test questions or improving the existing

00:02:44,820 --> 00:02:49,500
questions also I'm looking for

00:02:47,520 --> 00:02:51,300
developers who are better than me if I

00:02:49,500 --> 00:02:53,940
was the best developer my team I would

00:02:51,300 --> 00:02:57,000
develop right now not making a lecture

00:02:53,940 --> 00:03:02,670
so I need some kind of edge over them I

00:02:57,000 --> 00:03:06,000
need to be in my good spot my first tip

00:03:02,670 --> 00:03:09,000
is to avoid misleading question

00:03:06,000 --> 00:03:11,550
I don't like brain teaser they provide

00:03:09,000 --> 00:03:13,230
bad coverage and tend to mislead maybe

00:03:11,550 --> 00:03:15,390
the candidate don't understand the

00:03:13,230 --> 00:03:17,730
question maybe you already knows it I

00:03:15,390 --> 00:03:21,060
can't ask a hundred of them to get a

00:03:17,730 --> 00:03:21,840
good coverage so I try to avoid them

00:03:21,060 --> 00:03:25,320
altogether

00:03:21,840 --> 00:03:28,110
I don't also personally don't like Bell

00:03:25,320 --> 00:03:29,640
and sig trees floating algorithms those

00:03:28,110 --> 00:03:32,340
are the kind of things you learn in the

00:03:29,640 --> 00:03:35,340
university and if you fresh graduate you

00:03:32,340 --> 00:03:37,950
probably be more likely to answer them

00:03:35,340 --> 00:03:40,800
successfully than experienced engineer I

00:03:37,950 --> 00:03:43,200
want question where experience gives an

00:03:40,800 --> 00:03:46,830
edge so I'm looking for something that

00:03:43,200 --> 00:03:49,080
you learn with experience my fifth tip

00:03:46,830 --> 00:03:51,900
is that the discussion is more

00:03:49,080 --> 00:03:53,850
interesting than the answers I am I'm

00:03:51,900 --> 00:03:55,920
more interested in the way candidates

00:03:53,850 --> 00:03:58,680
solve the question they need actual

00:03:55,920 --> 00:04:03,060
solution I try to create open this

00:03:58,680 --> 00:04:08,550
discussion give some feedback for the

00:04:03,060 --> 00:04:11,070
wrong answers point out point out and we

00:04:08,550 --> 00:04:13,350
solve the the question iteratively I

00:04:11,070 --> 00:04:15,870
don't like when a candidate can solve

00:04:13,350 --> 00:04:20,340
the question and if first run I'm trying

00:04:15,870 --> 00:04:23,010
to build this up as the as the test goes

00:04:20,340 --> 00:04:26,820
at least some of the questions are very

00:04:23,010 --> 00:04:27,610
vague like design or good API this

00:04:26,820 --> 00:04:31,030
allows the

00:04:27,610 --> 00:04:33,340
to provide his own ideas of a good

00:04:31,030 --> 00:04:35,639
solution if even if I don't think that's

00:04:33,340 --> 00:04:39,060
a good solution if you can actually

00:04:35,639 --> 00:04:42,460
justify and at least show a good

00:04:39,060 --> 00:04:43,030
conviction of his solution that's very

00:04:42,460 --> 00:04:45,669
good

00:04:43,030 --> 00:04:48,159
and my last tip is to trust your gut

00:04:45,669 --> 00:04:50,919
feeling I don't try to be completely

00:04:48,159 --> 00:04:54,669
impartial if I don't like a candidate

00:04:50,919 --> 00:04:58,090
personally I always ask myself why and I

00:04:54,669 --> 00:05:04,090
first for all ask myself do I want to

00:04:58,090 --> 00:05:07,259
work with this person thank you that's

00:05:04,090 --> 00:05:07,259

YouTube URL: https://www.youtube.com/watch?v=TKUmi724k7Y


