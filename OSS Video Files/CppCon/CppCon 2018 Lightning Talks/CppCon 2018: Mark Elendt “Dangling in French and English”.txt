Title: CppCon 2018: Mark Elendt “Dangling in French and English”
Publication date: 2018-11-11
Playlist: CppCon 2018 Lightning Talks
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:00,030 --> 00:00:04,290
yeah I was really inspired today by

00:00:02,250 --> 00:00:05,850
herbs pop so I thought I'd write

00:00:04,290 --> 00:00:08,189
something about dangling their punch in

00:00:05,850 --> 00:00:11,730
England and of course I'm Canadian and

00:00:08,189 --> 00:00:13,500
as you all know Canada is bilingual so I

00:00:11,730 --> 00:00:16,650
thought that I would present some code

00:00:13,500 --> 00:00:18,920
in front so here's a little bit of code

00:00:16,650 --> 00:00:21,449
in French and you can see that there's a

00:00:18,920 --> 00:00:24,840
this is by the way this is all about a

00:00:21,449 --> 00:00:27,510
really really subtle bug and some of you

00:00:24,840 --> 00:00:28,109
may get there way before I do but please

00:00:27,510 --> 00:00:30,390
bear with me

00:00:28,109 --> 00:00:32,399
so there's a there's a vector of skid

00:00:30,390 --> 00:00:34,829
strains there and of course the first

00:00:32,399 --> 00:00:37,440
thing we do is push backs in French so I

00:00:34,829 --> 00:00:39,540
say it was shame which is if you don't

00:00:37,440 --> 00:00:41,160
speak French this translates well at

00:00:39,540 --> 00:00:46,280
least Google tells me it translates to

00:00:41,160 --> 00:00:48,780
is this a straight and then we we grab a

00:00:46,280 --> 00:00:51,750
reference to that first string and then

00:00:48,780 --> 00:00:52,500
we push back hello world and then we see

00:00:51,750 --> 00:00:55,980
us

00:00:52,500 --> 00:00:58,289
spit out see out the first string and

00:00:55,980 --> 00:01:02,430
Edwin and of course when you run this

00:00:58,289 --> 00:01:05,040
and you can run this it outputs that as

00:01:02,430 --> 00:01:09,689
I can't speak French or I'm supposed to

00:01:05,040 --> 00:01:12,420
be - it says is this a spring someone

00:01:09,689 --> 00:01:14,070
out there must be French so because we

00:01:12,420 --> 00:01:17,250
are bilingual I thought I'd do this in

00:01:14,070 --> 00:01:18,600
English as well and so I said instead of

00:01:17,250 --> 00:01:20,729
pushing back the French I would push

00:01:18,600 --> 00:01:23,729
back the is it it's free and then I

00:01:20,729 --> 00:01:25,950
would do the exact same thing and take

00:01:23,729 --> 00:01:28,770
the first and then push back hello world

00:01:25,950 --> 00:01:31,170
and of course everyone here knows that

00:01:28,770 --> 00:01:33,030
when you actually run this code the

00:01:31,170 --> 00:01:35,180
English version of it is segmentation

00:01:33,030 --> 00:01:35,180
for

00:01:35,580 --> 00:01:44,830
so what's exactly going on here well so

00:01:43,000 --> 00:01:47,170
if we take a look at the length of the

00:01:44,830 --> 00:01:48,910
string the length of the French string

00:01:47,170 --> 00:01:51,040
is 18 because French is much more

00:01:48,910 --> 00:01:54,490
complicated than with the length of the

00:01:51,040 --> 00:01:56,770
English is only 15 characters and so if

00:01:54,490 --> 00:01:59,800
we look at stud string there's a small

00:01:56,770 --> 00:02:02,740
string optimization and so if the length

00:01:59,800 --> 00:02:05,530
is less than 16 the data gets stored in

00:02:02,740 --> 00:02:07,720
the small string this is just an

00:02:05,530 --> 00:02:10,360
approximation of fifth string otherwise

00:02:07,720 --> 00:02:13,540
it's stored in data so if we look at the

00:02:10,360 --> 00:02:15,430
French we store this this string as on

00:02:13,540 --> 00:02:18,430
the heap and we score a pointer to that

00:02:15,430 --> 00:02:21,280
data on the string if it's English it

00:02:18,430 --> 00:02:23,500
gets stored in small ceman so when we

00:02:21,280 --> 00:02:26,800
look here we've got a state vector and

00:02:23,500 --> 00:02:30,430
we store that the English on a string

00:02:26,800 --> 00:02:32,170
and then we push back on the vector and

00:02:30,430 --> 00:02:34,090
so when you push back on the vector of

00:02:32,170 --> 00:02:37,989
course that will grow the vector and

00:02:34,090 --> 00:02:39,880
move the string and so in French we

00:02:37,989 --> 00:02:42,280
actually have that blue box is the spit

00:02:39,880 --> 00:02:44,860
string and it points to the string on

00:02:42,280 --> 00:02:46,930
feet and then that red box down there is

00:02:44,860 --> 00:02:49,330
char first which is pointing to the same

00:02:46,930 --> 00:02:52,450
string which you get out from C stir and

00:02:49,330 --> 00:02:55,000
then when you grow this the the vector

00:02:52,450 --> 00:02:56,260
that that first string disappeared and

00:02:55,000 --> 00:02:58,239
you get a new string and it's called

00:02:56,260 --> 00:03:00,840
stood move and and move it over or if

00:02:58,239 --> 00:03:03,280
you've got something that's trivial

00:03:00,840 --> 00:03:06,010
trivially relocatable I still can't see

00:03:03,280 --> 00:03:08,230
it it'll it'll just men copy it over and

00:03:06,010 --> 00:03:09,850
that the pointer could first still

00:03:08,230 --> 00:03:12,610
points to the same thing but of course

00:03:09,850 --> 00:03:15,370
if you are pointing to an English string

00:03:12,610 --> 00:03:18,640
it stores it in the string itself as the

00:03:15,370 --> 00:03:21,400
small pointer small data and then when

00:03:18,640 --> 00:03:24,280
you realloc that first is still pointing

00:03:21,400 --> 00:03:27,250
to that stale memory and you end up with

00:03:24,280 --> 00:03:28,720
the trash so it's a really subtle bug it

00:03:27,250 --> 00:03:31,209
took us a long time to figure out what

00:03:28,720 --> 00:03:33,670
was going on because long strings work

00:03:31,209 --> 00:03:36,170
if short strings didn't and that's the

00:03:33,670 --> 00:03:37,010
reason why so merci

00:03:36,170 --> 00:03:39,660
[Applause]

00:03:37,010 --> 00:03:42,080
[Music]

00:03:39,660 --> 00:03:42,080

YouTube URL: https://www.youtube.com/watch?v=jieYLTcmTS0


