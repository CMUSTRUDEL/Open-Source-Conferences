Title: CppCon 2018: Jeff Trull “Qt Signals and the Coroutines TS”
Publication date: 2018-11-12
Playlist: CppCon 2018 Lightning Talks
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:00,000 --> 00:00:06,990
I want to say first this is not intended

00:00:02,159 --> 00:00:08,370
as a humorous lightening talk okay I'm

00:00:06,990 --> 00:00:10,410
talking about cute signals in the

00:00:08,370 --> 00:00:14,280
co-routines to us today there's a cute

00:00:10,410 --> 00:00:15,660
user here yeah good framework I enjoy it

00:00:14,280 --> 00:00:17,730
a lot

00:00:15,660 --> 00:00:20,100
huge signals are a kind of generalized

00:00:17,730 --> 00:00:21,960
event like timer expired button press

00:00:20,100 --> 00:00:23,490
packet receive all that kind of thing

00:00:21,960 --> 00:00:24,720
they can have parameters that give you a

00:00:23,490 --> 00:00:27,150
little bit more information about what's

00:00:24,720 --> 00:00:29,789
happening you connect them to slots

00:00:27,150 --> 00:00:31,320
slots are are like functions that have

00:00:29,789 --> 00:00:33,600
the same signature as the signal does

00:00:31,320 --> 00:00:35,880
they can be member functions lambdas

00:00:33,600 --> 00:00:37,290
whatever you can when you receive a

00:00:35,880 --> 00:00:39,030
signal you can take further actions like

00:00:37,290 --> 00:00:40,710
updating variables you can issue new

00:00:39,030 --> 00:00:41,840
signals yourself you can do whatever you

00:00:40,710 --> 00:00:44,100
like

00:00:41,840 --> 00:00:46,230
sequencing logic unfortunately in the

00:00:44,100 --> 00:00:48,480
situation is a pain sometimes you want

00:00:46,230 --> 00:00:50,039
things to happen in a specific order you

00:00:48,480 --> 00:00:52,829
have to respond to several signals in a

00:00:50,039 --> 00:00:54,870
row they arrive then you sort of return

00:00:52,829 --> 00:00:56,940
and another one arrives and return and

00:00:54,870 --> 00:00:59,609
so you have to sort of maintain a lot of

00:00:56,940 --> 00:01:02,070
state generally to to get things right

00:00:59,609 --> 00:01:04,409
when you're sequencing things for

00:01:02,070 --> 00:01:05,700
example if you want to draw a line you

00:01:04,409 --> 00:01:07,860
have a sequence of states going on

00:01:05,700 --> 00:01:09,810
actually very simple sequence no points

00:01:07,860 --> 00:01:11,580
have been entered is one state the other

00:01:09,810 --> 00:01:13,470
state is the first point is entered and

00:01:11,580 --> 00:01:15,360
then when you get another point then

00:01:13,470 --> 00:01:17,189
you're going to draw a line between the

00:01:15,360 --> 00:01:20,340
two points the one you already have and

00:01:17,189 --> 00:01:22,470
the one you just receive here's how that

00:01:20,340 --> 00:01:25,110
might look with conventional acute

00:01:22,470 --> 00:01:29,009
signals this is a slot I'm connecting a

00:01:25,110 --> 00:01:31,290
signal to a slot debase tin a lambda

00:01:29,009 --> 00:01:33,240
where we receive a point if I've already

00:01:31,290 --> 00:01:34,439
seen received the first point that I'm

00:01:33,240 --> 00:01:35,670
going to finish the line and if I

00:01:34,439 --> 00:01:37,950
haven't received the first point yet

00:01:35,670 --> 00:01:39,869
then I just store it and remember that I

00:01:37,950 --> 00:01:42,090
have the first point this is a little

00:01:39,869 --> 00:01:44,939
bit awkward what I really want to be

00:01:42,090 --> 00:01:47,310
able to say is get the first point get

00:01:44,939 --> 00:01:48,750
the second point draw the line that's it

00:01:47,310 --> 00:01:51,450
and I want to have all these extra state

00:01:48,750 --> 00:01:54,409
variables sitting around but this is a

00:01:51,450 --> 00:01:56,579
classic use case for co-routines

00:01:54,409 --> 00:01:58,530
this is the kind of code we want to

00:01:56,579 --> 00:02:00,450
write you want to be able to say I have

00:01:58,530 --> 00:02:03,509
the first point I wait on this event

00:02:00,450 --> 00:02:06,479
where I'm take acute signal and I turn

00:02:03,509 --> 00:02:08,069
it into a KO routine away table then I

00:02:06,479 --> 00:02:09,869
have the second point as well and then

00:02:08,069 --> 00:02:13,830
when I have those two things then I draw

00:02:09,869 --> 00:02:16,440
the line that's it so using the Curie

00:02:13,830 --> 00:02:18,390
to us to implement this this is what we

00:02:16,440 --> 00:02:22,230
need for co-routines in general we need

00:02:18,390 --> 00:02:23,880
a promise type which is at least the way

00:02:22,230 --> 00:02:26,370
I think about it a handle for the

00:02:23,880 --> 00:02:28,200
creating code to hold on to to the

00:02:26,370 --> 00:02:30,030
co-routine weeding it an away table

00:02:28,200 --> 00:02:33,060
which is kind of the right-hand side of

00:02:30,030 --> 00:02:34,680
the Coe await statement that away table

00:02:33,060 --> 00:02:36,150
has to handle connecting and

00:02:34,680 --> 00:02:39,800
disconnecting from the signal and

00:02:36,150 --> 00:02:42,630
marshaling the result of the Coe wait a

00:02:39,800 --> 00:02:43,950
little bit about the code first

00:02:42,630 --> 00:02:46,680
metaprogramming stuff which is

00:02:43,950 --> 00:02:50,310
terrifying to me Coe await needs to

00:02:46,680 --> 00:02:52,290
produce either void so we just go away

00:02:50,310 --> 00:02:54,480
and we don't do anything with result the

00:02:52,290 --> 00:02:56,520
a single type or a tupple of types

00:02:54,480 --> 00:02:59,430
depending on the signature of the signal

00:02:56,520 --> 00:03:01,410
the signal has two or more parameters we

00:02:59,430 --> 00:03:04,020
want to produce a tuple of that many

00:03:01,410 --> 00:03:05,760
parameters if it's just one type we want

00:03:04,020 --> 00:03:07,590
to we want to return just the type and

00:03:05,760 --> 00:03:10,730
if it doesn't have any parameters all we

00:03:07,590 --> 00:03:12,450
just want to return void is Arthur here

00:03:10,730 --> 00:03:16,560
Thank You Arthur

00:03:12,450 --> 00:03:18,600
all right it was very helpful a little

00:03:16,560 --> 00:03:20,640
bit of the code here all I'm doing is

00:03:18,600 --> 00:03:22,980
when the away table is constructed I'm

00:03:20,640 --> 00:03:25,260
actually performing the connection

00:03:22,980 --> 00:03:26,760
I'm calling something called make slot

00:03:25,260 --> 00:03:31,110
which has a bunch of meta program

00:03:26,760 --> 00:03:32,850
backing it up but makes slot so so we're

00:03:31,110 --> 00:03:35,489
connecting the the signal that we're

00:03:32,850 --> 00:03:37,680
that we're constructing the away table

00:03:35,489 --> 00:03:40,560
signal on our away table is constructed

00:03:37,680 --> 00:03:43,590
based on a signal and we're making a

00:03:40,560 --> 00:03:45,570
slot for it and the make slot the slot

00:03:43,590 --> 00:03:47,459
itself is just when you disconnect from

00:03:45,570 --> 00:03:49,170
the signal when the signal arrives it's

00:03:47,459 --> 00:03:50,459
going to marshal the result and then

00:03:49,170 --> 00:03:53,640
it's going to resume the original

00:03:50,459 --> 00:03:55,320
function here's our demo the code I'm

00:03:53,640 --> 00:03:57,570
gonna show right now is two co-routines

00:03:55,320 --> 00:03:59,880
one takes one parameter namely a point

00:03:57,570 --> 00:04:01,560
whenever we click on the window the

00:03:59,880 --> 00:04:02,970
other one takes no parameters at all

00:04:01,560 --> 00:04:04,130
it's just running off of a timer and

00:04:02,970 --> 00:04:06,510
it's changing the background color

00:04:04,130 --> 00:04:09,860
constantly and if you're interested in

00:04:06,510 --> 00:04:12,989
this code there's the the URL shortener

00:04:09,860 --> 00:04:17,250
bang for it

00:04:12,989 --> 00:04:20,400
here we go all right now we're sick of

00:04:17,250 --> 00:04:22,770
our signal our single no our no

00:04:20,400 --> 00:04:25,860
parameter signal is firing changing the

00:04:22,770 --> 00:04:27,540
color on them based on timer and now I

00:04:25,860 --> 00:04:32,130
click once I click twice

00:04:27,540 --> 00:04:35,130
get a line so basically that's to

00:04:32,130 --> 00:04:37,550
co-routines running out of the cute

00:04:35,130 --> 00:04:37,550
event loop

00:04:39,800 --> 00:04:43,889

YouTube URL: https://www.youtube.com/watch?v=2wz0r2FfJmg


