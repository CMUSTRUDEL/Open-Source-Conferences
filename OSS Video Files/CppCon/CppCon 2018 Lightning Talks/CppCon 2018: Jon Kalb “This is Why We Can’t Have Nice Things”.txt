Title: CppCon 2018: Jon Kalb “This is Why We Can’t Have Nice Things”
Publication date: 2018-11-11
Playlist: CppCon 2018 Lightning Talks
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/CppCon/CppCon2018
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:00,060 --> 00:00:03,540
the title of my talk is that this is why

00:00:02,370 --> 00:00:07,500
we can't have nice things I'm going to

00:00:03,540 --> 00:00:10,019
talk to you a little about East about

00:00:07,500 --> 00:00:11,940
East guns tonight but it's this is not

00:00:10,019 --> 00:00:13,410
really the ultimate deaf definition or

00:00:11,940 --> 00:00:14,370
defense of East Const I think there are

00:00:13,410 --> 00:00:15,750
better people who do that and I think

00:00:14,370 --> 00:00:17,820
it's probably difficult to do in five

00:00:15,750 --> 00:00:18,869
minutes in fact given where I am now I'm

00:00:17,820 --> 00:00:20,490
probably not finished this in five

00:00:18,869 --> 00:00:21,900
minutes as is so the term East conce

00:00:20,490 --> 00:00:23,460
comes from Simon brand are you here

00:00:21,900 --> 00:00:24,840
Simon Simon's here at the conference I

00:00:23,460 --> 00:00:26,099
don't know because here tonight he

00:00:24,840 --> 00:00:27,599
coined this last November but the

00:00:26,099 --> 00:00:30,750
concept itself has been around for a

00:00:27,599 --> 00:00:33,329
very long time Dan sacks has been

00:00:30,750 --> 00:00:34,530
pushing this since the the 90s Dan is

00:00:33,329 --> 00:00:36,630
also at the conference although I don't

00:00:34,530 --> 00:00:39,989
know if he's in the room tonight so the

00:00:36,630 --> 00:00:43,140
rule for Const is that constitutes on

00:00:39,989 --> 00:00:45,809
its left unless there is nothing on its

00:00:43,140 --> 00:00:49,020
left and then it applies to what's on

00:00:45,809 --> 00:00:50,550
its right now in my code I like simple

00:00:49,020 --> 00:00:52,680
consistent rules and I don't think this

00:00:50,550 --> 00:00:55,559
is a simple consistent rule so in my

00:00:52,680 --> 00:00:56,510
code the rule is constantly as to what's

00:00:55,559 --> 00:01:01,260
on its left

00:00:56,510 --> 00:01:04,530
full-stop because in my code constant

00:01:01,260 --> 00:01:05,640
always modifies what it's following what

00:01:04,530 --> 00:01:07,619
people objected I say wait a minute I

00:01:05,640 --> 00:01:10,560
want to read it as a constant integer

00:01:07,619 --> 00:01:12,659
because I'm an English speaker and I put

00:01:10,560 --> 00:01:14,790
my modifier in front of my noun and and

00:01:12,659 --> 00:01:16,170
I agree I want to do that too but the

00:01:14,790 --> 00:01:17,880
assumption you're making is that you're

00:01:16,170 --> 00:01:19,650
going to read left to right because

00:01:17,880 --> 00:01:20,790
you're an English speaker but you're not

00:01:19,650 --> 00:01:22,259
an English speaker you're a programmer

00:01:20,790 --> 00:01:25,080
and in C and C++

00:01:22,259 --> 00:01:27,330
the real order to read declarations is

00:01:25,080 --> 00:01:30,630
actually inside out and right-to-left so

00:01:27,330 --> 00:01:32,040
for example FN is a pointer to a

00:01:30,630 --> 00:01:35,909
function that takes an int and returns a

00:01:32,040 --> 00:01:39,509
void and Ra here is a reference to an

00:01:35,909 --> 00:01:43,079
array of three Long's and a pc is a

00:01:39,509 --> 00:01:44,909
constant pointer to a character and PC

00:01:43,079 --> 00:01:47,700
here is a constant pointer to a constant

00:01:44,909 --> 00:01:49,470
character and in this case RI is a

00:01:47,700 --> 00:01:52,140
reference to a constant integer so you

00:01:49,470 --> 00:01:54,570
see I do read it as a constant integer

00:01:52,140 --> 00:01:56,700
because I'm reading the the declaration

00:01:54,570 --> 00:01:59,700
order the way that unfortunately the

00:01:56,700 --> 00:02:00,869
language syntax calls for us to do there

00:01:59,700 --> 00:02:03,600
are times in the language where the

00:02:00,869 --> 00:02:05,340
language requires us to use East Const

00:02:03,600 --> 00:02:06,719
so for example if you want to have a

00:02:05,340 --> 00:02:08,220
constant pointer or if you want to

00:02:06,719 --> 00:02:09,869
declare a constant member function you

00:02:08,220 --> 00:02:11,670
must use these cons which is one of the

00:02:09,869 --> 00:02:12,670
reasons why we sometimes refer to East

00:02:11,670 --> 00:02:15,370
Const

00:02:12,670 --> 00:02:16,599
for before Simon came up with that

00:02:15,370 --> 00:02:19,480
clever name we used to just call it

00:02:16,599 --> 00:02:20,620
consistent cost because if you are going

00:02:19,480 --> 00:02:22,030
to use something that's other than these

00:02:20,620 --> 00:02:23,709
cons are going to be inconsistent in

00:02:22,030 --> 00:02:25,180
your code because if you ever have a

00:02:23,709 --> 00:02:26,440
constant member function or a constant

00:02:25,180 --> 00:02:29,260
pointer you're going to have to use

00:02:26,440 --> 00:02:30,640
these fonts in those cases it can also

00:02:29,260 --> 00:02:33,280
be confusing so for example I've created

00:02:30,640 --> 00:02:35,350
a type alias here of a widget pointer

00:02:33,280 --> 00:02:36,910
and if you if you're not using East

00:02:35,350 --> 00:02:38,380
constitute you might be confused by

00:02:36,910 --> 00:02:40,000
looking at this and think oh this is a

00:02:38,380 --> 00:02:41,950
pointer to a constant widget but of

00:02:40,000 --> 00:02:43,959
course that's not what it is it's a

00:02:41,950 --> 00:02:45,790
constant pointing a widget reading

00:02:43,959 --> 00:02:47,260
that's right and this is something

00:02:45,790 --> 00:02:48,580
that's this is what the talk is really

00:02:47,260 --> 00:02:50,500
about it's not about East Const it's

00:02:48,580 --> 00:02:52,660
about the frustration that I have felt

00:02:50,500 --> 00:02:54,160
in a number times in my career when I

00:02:52,660 --> 00:02:55,989
stumble onto something that usually

00:02:54,160 --> 00:02:57,370
someone else did not me but some other

00:02:55,989 --> 00:02:59,200
way that's actually a better way of

00:02:57,370 --> 00:03:00,610
programming and I I take this as a team

00:02:59,200 --> 00:03:02,170
and I say look this is a better way we

00:03:00,610 --> 00:03:04,780
could be writing code and the argument

00:03:02,170 --> 00:03:06,220
about we can't do that why not well

00:03:04,780 --> 00:03:07,510
there's a you know several million lines

00:03:06,220 --> 00:03:11,100
of code in our code base that don't do

00:03:07,510 --> 00:03:11,100
it that way so it would be inconsistent

00:03:11,790 --> 00:03:15,220
no I'm not buying that this is the

00:03:14,140 --> 00:03:16,269
argument that's actually used in the

00:03:15,220 --> 00:03:17,739
coding guidelines that's kind of what

00:03:16,269 --> 00:03:19,690
really motivated this talk they have

00:03:17,739 --> 00:03:22,060
this example here where they use the bad

00:03:19,690 --> 00:03:23,620
example is East concen they actually

00:03:22,060 --> 00:03:25,870
concede they say well the bad example is

00:03:23,620 --> 00:03:27,940
more logical but then they hide behind

00:03:25,870 --> 00:03:30,280
the kids right they say well novices

00:03:27,940 --> 00:03:32,769
relying on teaching material you might

00:03:30,280 --> 00:03:35,260
be confused because the the alternative

00:03:32,769 --> 00:03:37,329
the conventional is more common so what

00:03:35,260 --> 00:03:39,040
we're saying here is rather than improve

00:03:37,329 --> 00:03:41,290
our teaching materials we're going to

00:03:39,040 --> 00:03:43,690
condemn the entire industry to a less

00:03:41,290 --> 00:03:45,489
logical approach that is the argument

00:03:43,690 --> 00:03:46,750
they've made furthermore if you look

00:03:45,489 --> 00:03:47,950
down here in the enforcement part

00:03:46,750 --> 00:03:50,200
they're actually saying we're going to

00:03:47,950 --> 00:03:53,440
flag anything that uses

00:03:50,200 --> 00:03:55,540
Const as a suffix to a type but I call

00:03:53,440 --> 00:03:58,950
your attention back up here to the ok

00:03:55,540 --> 00:04:02,530
example where P is a type who's whose

00:03:58,950 --> 00:04:05,620
suffix is Const because for pointers it

00:04:02,530 --> 00:04:06,910
has to be so I'm going to I'm gonna say

00:04:05,620 --> 00:04:08,980
this is why we can't have nice things

00:04:06,910 --> 00:04:12,310
if you must remain consistent with the

00:04:08,980 --> 00:04:13,690
past you can never improve because any

00:04:12,310 --> 00:04:15,910
improvement is inconsistent with the

00:04:13,690 --> 00:04:20,150
past by definition so I'm going to ask

00:04:15,910 --> 00:04:22,220
you to join the East Coast revolution

00:04:20,150 --> 00:04:26,270
I think there are people who are handing

00:04:22,220 --> 00:04:28,310
out handing out bands lemon find me at

00:04:26,270 --> 00:04:31,430
any time we're gonna have some at the

00:04:28,310 --> 00:04:32,990
infograph if you have co-workers who

00:04:31,430 --> 00:04:33,890
need to have this when you go home take

00:04:32,990 --> 00:04:35,720
more than one

00:04:33,890 --> 00:04:37,520
there are believe me there are plenty

00:04:35,720 --> 00:04:43,390
here thank you very much

00:04:37,520 --> 00:04:43,390

YouTube URL: https://www.youtube.com/watch?v=fv--IKZFVO8


