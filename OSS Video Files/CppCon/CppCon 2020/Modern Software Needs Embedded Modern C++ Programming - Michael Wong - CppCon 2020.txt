Title: Modern Software Needs Embedded Modern C++ Programming - Michael Wong - CppCon 2020
Publication date: 2020-09-25
Playlist: CppCon 2020
Description: 
	https://cppcon.org/
https://github.com/CppCon/CppCon2020
---
As the chair of SG14 Embedded, I like to give an update of what we have done for embedded. But this talk is much more than that. It will describe our group's collective experience in what is Embedded which has come from Automotive, games, Medical, Finance and many others. The definition is surprisingly wide and covers hard- and soft-real time, wide span of seriousness, hardware, replication, response time, and supported software. For that matter, who are the Embedded programmers? I will tie this back to the two pillars of C++: a direct map to hardware and zero overhead. I will argue why we should use C++, some of the bad reasons for note using C++, and identify 2 of the biggest problems people have complained about moving to C++. Understanding that Embedded compilers may not be up to the latest standard, we plan to separate Modern C++ into 3 Ages so that we can have people to change their code with varying levels of Embedded C++ compiler support. Finally, I will show some examples of how to change from C to C++ as one of the most common case in the Embedded community. I will show some of the common c++ features for each of several cases which includes Adopting to C++ in one shot, and gradual adoption for various sizes of systems. These are some of the common cases when people need to convert to C++ from some other language in the Embedded domain. We hope this overview and deep dive at the same time will give people a better appreciation and realistic perspective of what it takes to move to Modern C++ for Embedded systems.
---
Michael Wong
DE, Codeplay
wongmichael.com/about
---
Streamed & Edited by Digital Medium Ltd - events.digital-medium.co.uk
events@digital-medium.co.uk
YouTube URL: https://www.youtube.com/watch?v=885TI3jnB7g


