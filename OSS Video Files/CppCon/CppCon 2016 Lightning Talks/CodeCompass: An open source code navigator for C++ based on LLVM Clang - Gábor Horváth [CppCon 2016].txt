Title: CodeCompass: An open source code navigator for C++ based on LLVM Clang - Gábor Horváth [CppCon 2016]
Publication date: 2016-10-08
Playlist: CppCon 2016 Lightning Talks
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/cppcon/cppcon2016
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
—
Optimized And Managed by Digital Medium Ltd - events.digital-medium.co.uk
events@digital-medium.co.uk
Captions: 
	00:00:00,000 --> 00:00:07,529
so I'm gabbard horvath the PhD student

00:00:03,780 --> 00:00:10,349
right now I did a sort of google Summer

00:00:07,529 --> 00:00:14,730
of Code projects and also interned at

00:00:10,349 --> 00:00:17,580
Apple last summer so and I mainly

00:00:14,730 --> 00:00:20,880
working with compiler static analysis

00:00:17,580 --> 00:00:27,990
and code compass is one of the tools

00:00:20,880 --> 00:00:32,160
that my team is working on okay and

00:00:27,990 --> 00:00:34,590
we're good to go okay so as a

00:00:32,160 --> 00:00:37,380
developer's we spend most of our time

00:00:34,590 --> 00:00:39,719
reading code not writing it so it would

00:00:37,380 --> 00:00:44,010
be great to have dueling to assist us

00:00:39,719 --> 00:00:51,260
actually understand but legacy code does

00:00:44,010 --> 00:00:57,270
so this tool is aimed to do just that so

00:00:51,260 --> 00:01:02,250
let's do a quick demo this this is a so

00:00:57,270 --> 00:01:11,790
llvm is parsed with this tool and I will

00:01:02,250 --> 00:01:16,439
search for definition so code search is

00:01:11,790 --> 00:01:21,270
one of the most basic most basic feature

00:01:16,439 --> 00:01:23,939
that we actually need and with these two

00:01:21,270 --> 00:01:25,890
we can visualize several properties of

00:01:23,939 --> 00:01:30,900
the codes for example we might be

00:01:25,890 --> 00:01:35,090
curious what are the weather inheritance

00:01:30,900 --> 00:01:40,070
thatís looks like and right now I'm

00:01:35,090 --> 00:01:46,439
interested in this instance school class

00:01:40,070 --> 00:01:59,659
so so if I go to this instance core

00:01:46,439 --> 00:02:03,719
class then I can I can Clary additional

00:01:59,659 --> 00:02:08,069
information for example I might be

00:02:03,719 --> 00:02:10,950
curious that how this class is used so

00:02:08,069 --> 00:02:13,590
for example I could query but global

00:02:10,950 --> 00:02:15,870
variables have this type or

00:02:13,590 --> 00:02:18,989
functions have this as a parameter or

00:02:15,870 --> 00:02:22,650
what functions return this type as a

00:02:18,989 --> 00:02:26,760
parameter or I might be interested in

00:02:22,650 --> 00:02:29,640
the methods that this class have for

00:02:26,760 --> 00:02:35,480
example the public methods let's look at

00:02:29,640 --> 00:02:40,700
this radical method and let's try to

00:02:35,480 --> 00:02:46,260
actually understand what it does so

00:02:40,700 --> 00:02:48,000
sorry oh but I will try to but it

00:02:46,260 --> 00:02:52,079
doesn't really matter what is there i

00:02:48,000 --> 00:02:54,840
would like to show mainly graphical

00:02:52,079 --> 00:02:59,670
stuff so you can you will get the idea

00:02:54,840 --> 00:03:03,349
even if you cannot see the text so first

00:02:59,670 --> 00:03:07,110
i might be curious how this how this

00:03:03,349 --> 00:03:09,930
method is used so one of the diagrams i

00:03:07,110 --> 00:03:16,739
could query is a function call diagram

00:03:09,930 --> 00:03:20,630
and in this case i can i can see what

00:03:16,739 --> 00:03:26,910
functions call this function and also

00:03:20,630 --> 00:03:29,880
but what functions are called by this

00:03:26,910 --> 00:03:34,130
function and this also tracks virtual

00:03:29,880 --> 00:03:38,790
cause so if this function might be

00:03:34,130 --> 00:03:42,299
called because of virtual dispatch then

00:03:38,790 --> 00:03:44,639
it is also marked on this diagram so i

00:03:42,299 --> 00:03:49,079
can i can check where where this

00:03:44,639 --> 00:03:53,970
function is used and from which source

00:03:49,079 --> 00:03:56,730
file so i can i only already understand

00:03:53,970 --> 00:04:01,410
how this function is used so let's let's

00:03:56,730 --> 00:04:04,290
see how this function works so one of

00:04:01,410 --> 00:04:07,169
the pain points when we try to

00:04:04,290 --> 00:04:09,209
understand such functions is that it

00:04:07,169 --> 00:04:12,120
cause on other functions which might be

00:04:09,209 --> 00:04:15,329
in other source files and it would be

00:04:12,120 --> 00:04:18,120
great to see all of the important pieces

00:04:15,329 --> 00:04:21,630
of code next to each other so for

00:04:18,120 --> 00:04:27,240
example if I click to a coil the code to

00:04:21,630 --> 00:04:30,389
get origin xfer it is a it is just

00:04:27,240 --> 00:04:34,199
another cool so basically that I might

00:04:30,389 --> 00:04:39,419
be curious what this variable is and I

00:04:34,199 --> 00:04:44,849
can see its type but I can also go to

00:04:39,419 --> 00:04:48,150
other color chains and I can click the

00:04:44,849 --> 00:04:50,880
cause until I get something that

00:04:48,150 --> 00:04:53,460
actually has some interesting piece of

00:04:50,880 --> 00:04:56,610
code and these code snippets are from

00:04:53,460 --> 00:04:59,909
multiple files so basically it is very

00:04:56,610 --> 00:05:02,970
easy to display only the relevant

00:04:59,909 --> 00:05:06,240
information together close to each other

00:05:02,970 --> 00:05:09,440
and we do not need to keep track of what

00:05:06,240 --> 00:05:12,810
is the what is the code chain which

00:05:09,440 --> 00:05:15,270
which function is in which file so it's

00:05:12,810 --> 00:05:20,909
a very concise way to present this

00:05:15,270 --> 00:05:23,370
information to the developer and once we

00:05:20,909 --> 00:05:28,380
found for example the source of the bag

00:05:23,370 --> 00:05:32,120
that we were working to solve then we

00:05:28,380 --> 00:05:36,479
can check who introduced it using the

00:05:32,120 --> 00:05:40,020
blame view so we also have the version

00:05:36,479 --> 00:05:43,650
control information parsed in all along

00:05:40,020 --> 00:05:46,620
side with the source code and this can

00:05:43,650 --> 00:05:49,669
also be a great help for us thank you

00:05:46,620 --> 00:05:49,669

YouTube URL: https://www.youtube.com/watch?v=gjQG3RNfFxM


