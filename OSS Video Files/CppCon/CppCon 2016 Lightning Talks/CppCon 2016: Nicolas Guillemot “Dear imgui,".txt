Title: CppCon 2016: Nicolas Guillemot “Dear imgui,"
Publication date: 2016-10-07
Playlist: CppCon 2016 Lightning Talks
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/cppcon/cppcon2016

ImGui repo: https://github.com/ocornut/imgui

—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
Captions: 
	00:00:00,030 --> 00:00:03,149
so hi everyone I'm here to talk to you

00:00:01,410 --> 00:00:04,560
about d-ring GUI which is a supposed

00:00:03,149 --> 00:00:07,440
library that I really like and I want to

00:00:04,560 --> 00:00:09,269
share with everyone so this is a gree

00:00:07,440 --> 00:00:11,370
library and so let's review how a GUI

00:00:09,269 --> 00:00:13,259
libraries work this basically I'm going

00:00:11,370 --> 00:00:15,389
to talk about two main ways to write GUI

00:00:13,259 --> 00:00:17,190
libraries the first one is the retain

00:00:15,389 --> 00:00:19,050
mode GUI so when you write a retain mode

00:00:17,190 --> 00:00:19,770
GUI typically your program looks

00:00:19,050 --> 00:00:21,300
something like this

00:00:19,770 --> 00:00:23,550
where you set up like a window maybe

00:00:21,300 --> 00:00:25,320
some widgets likes a text box or some

00:00:23,550 --> 00:00:26,010
buttons and you'll kind of like poke

00:00:25,320 --> 00:00:28,230
them all up together

00:00:26,010 --> 00:00:29,849
and maybe put on some callbacks and you

00:00:28,230 --> 00:00:31,740
know bust out your design patterns book

00:00:29,849 --> 00:00:34,890
put in some observers and some all the

00:00:31,740 --> 00:00:36,840
skin you know fancy stuff and after you

00:00:34,890 --> 00:00:39,690
set everything up you say run and then

00:00:36,840 --> 00:00:41,070
it just goes and after that it kind of

00:00:39,690 --> 00:00:42,809
just like everything all the logic is

00:00:41,070 --> 00:00:45,210
handled inside of callbacks and that

00:00:42,809 --> 00:00:47,730
kind of logic the second way to write a

00:00:45,210 --> 00:00:50,399
green library is immediate mode so this

00:00:47,730 --> 00:00:52,680
is an example of a mini about GUI where

00:00:50,399 --> 00:00:54,930
you see the main difference is that the

00:00:52,680 --> 00:00:57,300
cord on the Left they're actually each

00:00:54,930 --> 00:00:58,710
one of those function calls makes the

00:00:57,300 --> 00:01:00,570
corresponding we get appear so when you

00:00:58,710 --> 00:01:03,329
say in GUI text that makes a text block

00:01:00,570 --> 00:01:05,430
text box appear and the idea is that

00:01:03,329 --> 00:01:07,439
this code on the left is actually run in

00:01:05,430 --> 00:01:08,640
a loop so you run this coordinate loop

00:01:07,439 --> 00:01:10,590
over and over again and at every

00:01:08,640 --> 00:01:12,960
iteration of your program you regenerate

00:01:10,590 --> 00:01:13,830
the entire GUI and so you know that

00:01:12,960 --> 00:01:14,970
might sound kind of weird at first but

00:01:13,830 --> 00:01:17,549
actually turns out to be extremely

00:01:14,970 --> 00:01:19,320
useful for writing clean code and

00:01:17,549 --> 00:01:22,619
writing fast code I mean fast I mean in

00:01:19,320 --> 00:01:24,180
terms of development speed not in terms

00:01:22,619 --> 00:01:26,520
of performance so actually here's some

00:01:24,180 --> 00:01:27,960
pros and cons so if you're using retain

00:01:26,520 --> 00:01:29,549
mode this is this interrupt base that

00:01:27,960 --> 00:01:30,990
means you only do work when events

00:01:29,549 --> 00:01:32,880
happen so when you click on your mouse

00:01:30,990 --> 00:01:34,110
or whatever that makes it more efficient

00:01:32,880 --> 00:01:35,310
in terms of power so if you got have a

00:01:34,110 --> 00:01:36,360
program that runs for a long time you

00:01:35,310 --> 00:01:39,270
probably ought to go with retain mode

00:01:36,360 --> 00:01:41,700
however immediate mode is is actually

00:01:39,270 --> 00:01:43,020
polling based so it's power inefficient

00:01:41,700 --> 00:01:44,579
in the sense that it'll be doing

00:01:43,020 --> 00:01:46,619
constant work no matter what even if

00:01:44,579 --> 00:01:47,880
nothing is happening retain mode is

00:01:46,619 --> 00:01:49,350
mostly static so you basically build

00:01:47,880 --> 00:01:50,759
everything up up front and then it

00:01:49,350 --> 00:01:52,229
doesn't change very much after that and

00:01:50,759 --> 00:01:54,119
if you do want to change things after

00:01:52,229 --> 00:01:55,229
that it's gonna be pretty ugly and your

00:01:54,119 --> 00:01:57,420
part gonna have like lots of pointer

00:01:55,229 --> 00:01:58,590
problems on the other hand you mean mo

00:01:57,420 --> 00:02:01,079
is very dynamic because since you

00:01:58,590 --> 00:02:02,310
rebuild it every frame every frame you

00:02:01,079 --> 00:02:03,479
can completely change how the GUI looks

00:02:02,310 --> 00:02:05,909
depending on what's going on in your

00:02:03,479 --> 00:02:07,560
program retain mode is probably better

00:02:05,909 --> 00:02:08,970
for long term design but I mean a mode

00:02:07,560 --> 00:02:11,640
is actually good for a fast prototyping

00:02:08,970 --> 00:02:14,170
and so I would recommend using retain

00:02:11,640 --> 00:02:15,700
mode for everyday GUI apps like

00:02:14,170 --> 00:02:17,080
but he mo is actually really useful for

00:02:15,700 --> 00:02:18,310
real-time simulations where basically

00:02:17,080 --> 00:02:19,629
you want to have a GUI that's very

00:02:18,310 --> 00:02:22,660
responsive based on what's going on in

00:02:19,629 --> 00:02:23,920
real time in your program so dear in GUI

00:02:22,660 --> 00:02:25,390
is a library that implements this

00:02:23,920 --> 00:02:27,459
immediate mode GUI paradigm in C++

00:02:25,390 --> 00:02:29,200
here's some nice little screenshots I

00:02:27,459 --> 00:02:31,750
took from the github page that show you

00:02:29,200 --> 00:02:32,830
basically what it looks like on top

00:02:31,750 --> 00:02:34,150
right here you can actually it's being

00:02:32,830 --> 00:02:36,130
used that timeline for a rendering

00:02:34,150 --> 00:02:38,620
program so you can get a feel for yeah

00:02:36,130 --> 00:02:41,080
people use this in real time simulations

00:02:38,620 --> 00:02:42,790
if you want to use the do um GUI in your

00:02:41,080 --> 00:02:45,160
programs today there's only a few steps

00:02:42,790 --> 00:02:46,330
you have to do first go to the in GUI

00:02:45,160 --> 00:02:46,870
github which I'll show at the end of

00:02:46,330 --> 00:02:49,780
this talk

00:02:46,870 --> 00:02:51,670
grab the sources for EM GUI just add

00:02:49,780 --> 00:02:53,829
them to your project and also download

00:02:51,670 --> 00:02:55,720
the premium bindings they have they have

00:02:53,829 --> 00:02:58,150
bindings for directx and opengl and all

00:02:55,720 --> 00:02:59,560
offering systems a like and stuff you

00:02:58,150 --> 00:03:01,780
have a few callbacks through you have to

00:02:59,560 --> 00:03:03,430
put into your main so not very much work

00:03:01,780 --> 00:03:05,410
just calling it a new frame and process

00:03:03,430 --> 00:03:07,360
events and called render era debris loop

00:03:05,410 --> 00:03:08,980
and after that you basically just start

00:03:07,360 --> 00:03:10,750
putting in in booty calls so you just

00:03:08,980 --> 00:03:13,450
write text or button or whatever and

00:03:10,750 --> 00:03:16,599
they'll start generating in gooey

00:03:13,450 --> 00:03:19,630
wickets so I'm actually ending a bit

00:03:16,599 --> 00:03:22,060
early but here's the links to those

00:03:19,630 --> 00:03:23,049
libraries so are rather DM GUI is the

00:03:22,060 --> 00:03:24,280
library the top there if you want to

00:03:23,049 --> 00:03:26,620
grab that but it's also another one

00:03:24,280 --> 00:03:28,209
another immediate mode GUI library by

00:03:26,620 --> 00:03:31,510
called nuclear that's also pretty good

00:03:28,209 --> 00:03:33,310
and actually a nuclear is an CC library

00:03:31,510 --> 00:03:34,900
so if you're happen to be constrained to

00:03:33,310 --> 00:03:36,970
NCC that could be a really interesting

00:03:34,900 --> 00:03:39,579
choice and here's some gifts that I

00:03:36,970 --> 00:03:41,430
found of em doing action so you can see

00:03:39,579 --> 00:03:45,299
also very useful for writing tools and

00:03:41,430 --> 00:03:45,299

YouTube URL: https://www.youtube.com/watch?v=LSRJ1jZq90k


