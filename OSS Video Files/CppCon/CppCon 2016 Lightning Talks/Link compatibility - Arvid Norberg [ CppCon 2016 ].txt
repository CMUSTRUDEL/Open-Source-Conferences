Title: Link compatibility - Arvid Norberg [ CppCon 2016 ]
Publication date: 2016-10-07
Playlist: CppCon 2016 Lightning Talks
Description: 
	http://CppCon.org
—
Presentation Slides, PDFs, Source Code and other presenter materials are available at: https://github.com/cppcon/cppcon2016
—
Lightning Talk
— 
Videos Filmed & Edited by Bash Films: http://www.BashFilms.com
—
Optimized And Managed by Digital Medium Ltd - events.digital-medium.co.uk
events@digital-medium.co.uk
Captions: 
	00:00:00,030 --> 00:00:07,620
all right my name is Arvid and I work at

00:00:05,069 --> 00:00:11,130
had fun in New York called 2 Sigma 2

00:00:07,620 --> 00:00:15,660
Sigma on my spare time I maintain a

00:00:11,130 --> 00:00:17,820
library specifically a compile library

00:00:15,660 --> 00:00:24,990
not one of these fancy headers at all my

00:00:17,820 --> 00:00:26,519
library's so for instance my library has

00:00:24,990 --> 00:00:27,960
built congregations you can build a

00:00:26,519 --> 00:00:29,880
debug version and a release version

00:00:27,960 --> 00:00:31,410
which you can build with the deprecated

00:00:29,880 --> 00:00:34,410
functions enabled or you can build them

00:00:31,410 --> 00:00:38,010
disabled and a few other configurations

00:00:34,410 --> 00:00:40,350
along these lines so imagine that you

00:00:38,010 --> 00:00:41,730
have a header for your library that

00:00:40,350 --> 00:00:44,070
looks something like this you have a

00:00:41,730 --> 00:00:45,480
struct and one of these members was

00:00:44,070 --> 00:00:47,520
really mistake taught so you want to get

00:00:45,480 --> 00:00:49,140
rid of it so you if the fit under this

00:00:47,520 --> 00:00:52,110
build configuration option and then you

00:00:49,140 --> 00:00:53,340
have a function that returns this you

00:00:52,110 --> 00:00:58,649
have a client that includes your header

00:00:53,340 --> 00:01:00,930
file calls this function now it's it's

00:00:58,649 --> 00:01:01,949
very important that both the client and

00:01:00,930 --> 00:01:03,510
your library is built with the same

00:01:01,949 --> 00:01:04,619
build configuration otherwise this

00:01:03,510 --> 00:01:07,260
define will be different they were have

00:01:04,619 --> 00:01:10,530
different understanding so the layout of

00:01:07,260 --> 00:01:12,090
this struct this is basically the same

00:01:10,530 --> 00:01:15,509
problem of linking against the wrong

00:01:12,090 --> 00:01:17,189
version of MSV c CRT or having

00:01:15,509 --> 00:01:19,700
incompatible settings for GOP CX x

00:01:17,189 --> 00:01:26,850
debugging if you're familiar with that

00:01:19,700 --> 00:01:28,770
so how do you force the client to have

00:01:26,850 --> 00:01:31,590
the same coefficient as as the library

00:01:28,770 --> 00:01:34,259
there are a few solutions

00:01:31,590 --> 00:01:36,360
there's PKG config boost build

00:01:34,259 --> 00:01:39,270
surprisingly has a very good support for

00:01:36,360 --> 00:01:42,689
propagating requirements stop the the

00:01:39,270 --> 00:01:46,340
dependency graph column i learned this

00:01:42,689 --> 00:01:49,890
week also has ability to export sort of

00:01:46,340 --> 00:01:52,890
requirements turns out not a lot of

00:01:49,890 --> 00:01:55,320
people use boost build and mine mike's

00:01:52,890 --> 00:01:57,500
experience is that people only use pkg

00:01:55,320 --> 00:02:02,369
config after they've been bitten by this

00:01:57,500 --> 00:02:05,040
this problem and the symptom is memory

00:02:02,369 --> 00:02:07,829
corruption and I get big bug reports I

00:02:05,040 --> 00:02:09,360
figured out tell them and then they use

00:02:07,829 --> 00:02:13,349
peak echoing so I want to remove myself

00:02:09,360 --> 00:02:13,810
from this sort of cycle so what do you

00:02:13,349 --> 00:02:17,230
do

00:02:13,810 --> 00:02:19,630
you can turn it into a link tomorrow so

00:02:17,230 --> 00:02:22,780
basically what I'm ended up doing is

00:02:19,630 --> 00:02:23,709
something like this you have as part of

00:02:22,780 --> 00:02:26,530
your life where you have one header

00:02:23,709 --> 00:02:29,590
that's the buildconfig header so let's

00:02:26,530 --> 00:02:31,390
see what's what's going on here so this

00:02:29,590 --> 00:02:34,810
looks at the current build configuration

00:02:31,390 --> 00:02:37,090
and it traits defines that you know

00:02:34,810 --> 00:02:40,269
names either know deprecated or

00:02:37,090 --> 00:02:41,380
deprecated asserts or no asserts you

00:02:40,269 --> 00:02:44,260
know you can imagine that you have more

00:02:41,380 --> 00:02:47,760
of these variations you concatenate

00:02:44,260 --> 00:02:51,280
these names using newspapers obviously

00:02:47,760 --> 00:02:57,310
then you declare a function with this

00:02:51,280 --> 00:02:59,769
name in your library you define an empty

00:02:57,310 --> 00:03:03,010
function with this name and then somehow

00:02:59,769 --> 00:03:06,130
you force your clients to attempt to

00:03:03,010 --> 00:03:08,290
make a call to this function you can do

00:03:06,130 --> 00:03:10,870
this through different ways for instance

00:03:08,290 --> 00:03:12,010
if you have a main class that basically

00:03:10,870 --> 00:03:14,260
you have to instantiate to use remember

00:03:12,010 --> 00:03:17,549
you can have its constructor be inlined

00:03:14,260 --> 00:03:19,750
make a call to this and then you know

00:03:17,549 --> 00:03:23,140
forward that call to the actual

00:03:19,750 --> 00:03:27,220
constructor and then you get this

00:03:23,140 --> 00:03:32,340
instant and a bug report with this paste

00:03:27,220 --> 00:03:35,109
in it it's much more pleasant to handle

00:03:32,340 --> 00:03:36,220
however though if you can I would really

00:03:35,109 --> 00:03:38,859
recommend doing this this is what I've

00:03:36,220 --> 00:03:40,989
started doing where basically you you

00:03:38,859 --> 00:03:43,120
make sure that the the binary layout of

00:03:40,989 --> 00:03:46,389
your structs are the same and then when

00:03:43,120 --> 00:03:47,500
you actually delete this this member you

00:03:46,389 --> 00:03:50,250
can delete them both at the same time

00:03:47,500 --> 00:03:53,109
and you never sort of really run into

00:03:50,250 --> 00:03:54,579
the convertibility issue obviously you

00:03:53,109 --> 00:03:59,290
have to pump your SL personal this is

00:03:54,579 --> 00:04:01,170
sort of inter as a version also wanna

00:03:59,290 --> 00:04:03,190
mention if you are looking for long term

00:04:01,170 --> 00:04:04,959
payback compatibility and backwards

00:04:03,190 --> 00:04:06,280
compatible compatibility specifically

00:04:04,959 --> 00:04:11,790
you should probably look at in what

00:04:06,280 --> 00:04:11,790

YouTube URL: https://www.youtube.com/watch?v=cu21_TtaYug


