Title: OSBConf 2017 | Bareos, BeeGFS and Grau OpenArchive by Dr  Stefan Vollmar
Publication date: 2017-10-09
Playlist: OSBConf 2017 | Open Source Backup Conference
Description: 
	We have presented some of our concepts at the OSBC 2014 and have expanded our original setup over the past three years.

The Max Planck Institute for Metabolism Research operates several brain scanners for human and animal studies. Imaging techniques used here comprise magnetic resonance imaging  MRI  and positron emission tomography  PET . We now also use other data intensive acquisition methods like advanced microscopy techniques.

Research is often interdisciplinary with very heterogeneous characteristics of data and analysis methods. Backup requirements range between file systems with literally millions of very small files to files of 200 GB+ size.

Good Scientific Practice mandates backup/archiving primary data and everything else needed to reproduce published results  tools, documentation of tool chains, intermediate results  â€“ which is a veritable challenge in a high-end, dynamic lab environment.

We use a Quantum i6000  LTO-6  tape library with Grau OpenArchiver as HSM frontend  backup-to-disk using WORM tapes; one job per file; file archives 5 GB; mostly unixoid backup clients .

We present our experiences with several types of backup clients and, in particular, our strategy for backup and archiving of data from our Bee GFS parallel file system where we have some candidates for the new incremental forever paradigm.
Captions: 
	00:00:14,700 --> 00:00:22,000
the next top

00:00:16,570 --> 00:00:24,820
be helped by Piraeus user the speaker is

00:00:22,000 --> 00:00:29,710
the had a fight II of the Max Planck

00:00:24,820 --> 00:00:33,970
Institute of metabolism research and he

00:00:29,710 --> 00:00:37,269
will provide us a recap of three using

00:00:33,970 --> 00:00:40,030
three years of using per ears so please

00:00:37,269 --> 00:00:44,440
provide a warm welcome to mr. chef

00:00:40,030 --> 00:00:51,760
informa good afternoon

00:00:44,440 --> 00:00:55,059
yes okay so um been with me for who long

00:00:51,760 --> 00:01:01,239
hour I've been here before three years

00:00:55,059 --> 00:01:03,640
ago and we changed our name last time I

00:01:01,239 --> 00:01:06,880
was here we was they we were the Max

00:01:03,640 --> 00:01:09,960
Planck Institute for neurological

00:01:06,880 --> 00:01:14,310
research we are now metabolism research

00:01:09,960 --> 00:01:18,009
same building same machine small s

00:01:14,310 --> 00:01:24,240
slightly different people so this is our

00:01:18,009 --> 00:01:27,400
main building and this is a new building

00:01:24,240 --> 00:01:29,830
this is just next door this is the view

00:01:27,400 --> 00:01:34,000
from our roof so this is really our

00:01:29,830 --> 00:01:37,619
neighbor Institute and this is important

00:01:34,000 --> 00:01:43,860
because some of my nicer equipment is

00:01:37,619 --> 00:01:49,000
downstairs with that Institute okay I

00:01:43,860 --> 00:01:53,890
met some of you in Copenhagen recently

00:01:49,000 --> 00:01:57,340
at an open source conference and that

00:01:53,890 --> 00:02:00,399
made me reflect how much open source we

00:01:57,340 --> 00:02:06,399
use at our Institute which I'm really

00:02:00,399 --> 00:02:12,970
proud of and well that all looks

00:02:06,399 --> 00:02:17,650
familiar to you I'm sure and today I

00:02:12,970 --> 00:02:21,940
will focus on Barrios bgf as Co open

00:02:17,650 --> 00:02:26,019
archive in a little bit on it and I have

00:02:21,940 --> 00:02:28,780
to add that B GFS is not really open

00:02:26,019 --> 00:02:30,930
source but it's pretty close to open

00:02:28,780 --> 00:02:30,930
source

00:02:34,150 --> 00:02:40,790
okay so this is how I started last time

00:02:37,880 --> 00:02:46,700
and of course I used all my old slides

00:02:40,790 --> 00:02:49,550
and now I didn't but this one and I keep

00:02:46,700 --> 00:02:56,569
this very short many Institute's are

00:02:49,550 --> 00:02:59,630
doing MRI studies and this is also not

00:02:56,569 --> 00:03:02,840
my personal domain so I can say very

00:02:59,630 --> 00:03:05,140
little about it it makes for nice images

00:03:02,840 --> 00:03:12,140
this is what I said last time right I

00:03:05,140 --> 00:03:15,440
have some okay well we don't stay too

00:03:12,140 --> 00:03:18,620
long here because this is last time this

00:03:15,440 --> 00:03:23,269
is actually also a slide I had last time

00:03:18,620 --> 00:03:25,069
slightly larger this time and I do it

00:03:23,269 --> 00:03:29,480
again because this is one of my favorite

00:03:25,069 --> 00:03:33,820
machines okay this is a very special

00:03:29,480 --> 00:03:38,000
machine because this is the world's best

00:03:33,820 --> 00:03:40,190
positron emission tomography scanner

00:03:38,000 --> 00:03:43,430
long word difficult word difficult

00:03:40,190 --> 00:03:48,109
technique and this is where the patients

00:03:43,430 --> 00:03:51,620
had to go this is what the data looks

00:03:48,109 --> 00:03:56,079
like but this is slightly beyond our

00:03:51,620 --> 00:03:59,690
topic today it's a very sophisticated

00:03:56,079 --> 00:04:04,489
machine that doesn't work half the time

00:03:59,690 --> 00:04:08,090
so this is the trade-off okay this is

00:04:04,489 --> 00:04:12,519
new this is new so in the past three

00:04:08,090 --> 00:04:18,049
years we've done way more microscopy

00:04:12,519 --> 00:04:20,600
studies than before and actually these

00:04:18,049 --> 00:04:24,400
these microscopes I've just learned are

00:04:20,600 --> 00:04:26,900
so popular that we have young scientists

00:04:24,400 --> 00:04:31,039
getting up at 3 o'clock in the morning

00:04:26,900 --> 00:04:35,180
to get acquisition time on these systems

00:04:31,039 --> 00:04:39,380
so very popular and they create fairly

00:04:35,180 --> 00:04:42,020
large data sets these days and this

00:04:39,380 --> 00:04:42,950
gives me perfect excuse for a new video

00:04:42,020 --> 00:04:50,240
this is

00:04:42,950 --> 00:04:53,210
you this is one we did okay so this was

00:04:50,240 --> 00:04:55,520
a quiet with a light sheet fluorescent

00:04:53,210 --> 00:05:01,370
microscope you can find a nice Wikipedia

00:04:55,520 --> 00:05:07,040
article on that this is a fairly new

00:05:01,370 --> 00:05:09,410
technology pretty cool and it's a pretty

00:05:07,040 --> 00:05:13,930
sophisticated instrument of course and

00:05:09,410 --> 00:05:20,270
these green little dots are neurons 40

00:05:13,930 --> 00:05:27,470
micrometers in size and this is a mouse

00:05:20,270 --> 00:05:32,450
brain so it's small very small and the

00:05:27,470 --> 00:05:34,910
idea is that we acquire these little

00:05:32,450 --> 00:05:42,620
green dots and they tell us something

00:05:34,910 --> 00:05:47,390
about certain aspects of a particularly

00:05:42,620 --> 00:05:50,300
a mouse brain because we label certain

00:05:47,390 --> 00:05:52,790
of these neurons so we make them

00:05:50,300 --> 00:05:59,780
fluorescent and then we capture the

00:05:52,790 --> 00:06:04,180
green light and these data says 4 to 16

00:05:59,780 --> 00:06:07,130
gigabytes in size which is huge for

00:06:04,180 --> 00:06:11,510
microscopy as we used to do it a couple

00:06:07,130 --> 00:06:14,720
of years ago and it gives me the perfect

00:06:11,510 --> 00:06:18,140
excuse to show off another piece of

00:06:14,720 --> 00:06:20,660
software this is one my groups been

00:06:18,140 --> 00:06:25,190
working on the last ten years or

00:06:20,660 --> 00:06:28,450
something this is visualization and

00:06:25,190 --> 00:06:32,540
analysis of tomographic or data from

00:06:28,450 --> 00:06:37,450
quite a large variety of in particular

00:06:32,540 --> 00:06:37,450
brain scanners and we do a live demo now

00:06:38,440 --> 00:06:46,340
so it gets a little clearer in a second

00:06:43,240 --> 00:06:50,000
so this is our software which is called

00:06:46,340 --> 00:06:53,690
vici and this is something unfortunately

00:06:50,000 --> 00:06:56,990
I have no excuse to spend a lot of time

00:06:53,690 --> 00:07:00,110
on just now because it's

00:06:56,990 --> 00:07:04,250
really off topic but it makes from some

00:07:00,110 --> 00:07:07,310
really nice images doesn't it you know

00:07:04,250 --> 00:07:12,259
you can switch things on and off and you

00:07:07,310 --> 00:07:16,190
can okay now we do something which is

00:07:12,259 --> 00:07:19,039
less off-topic which is actually related

00:07:16,190 --> 00:07:22,370
all although it's not apparent

00:07:19,039 --> 00:07:38,389
immediately to the microscopy data we've

00:07:22,370 --> 00:07:42,889
just seen so well now just one thing our

00:07:38,389 --> 00:07:46,370
Institute has been doing these past 15

00:07:42,889 --> 00:07:50,419
years is work with data from different

00:07:46,370 --> 00:07:55,669
modalities in the sense that this is a

00:07:50,419 --> 00:07:58,370
study from an mr scanner this is a study

00:07:55,669 --> 00:08:03,710
from a PET scanner now they look pretty

00:07:58,370 --> 00:08:07,490
different and if I tell you well this is

00:08:03,710 --> 00:08:09,009
in fact the same patient you don't have

00:08:07,490 --> 00:08:16,940
to trust me of course you shouldn't

00:08:09,009 --> 00:08:18,949
don't trust me what you can do is we've

00:08:16,940 --> 00:08:21,530
been able to do this for many years it's

00:08:18,949 --> 00:08:25,520
not terribly difficult this is the EMR

00:08:21,530 --> 00:08:28,639
this is the pet data set and this is

00:08:25,520 --> 00:08:31,789
everything in between and if you

00:08:28,639 --> 00:08:34,870
superimpose these images and effusion it

00:08:31,789 --> 00:08:40,760
doesn't look like the same brain does it

00:08:34,870 --> 00:08:45,140
okay now what we do is we have fully

00:08:40,760 --> 00:08:47,089
automated way to Co register them this

00:08:45,140 --> 00:08:49,910
is a bit unfortunate when we started

00:08:47,089 --> 00:08:53,089
doing this 12 years 13 years ago this

00:08:49,910 --> 00:08:56,990
took almost a minute and I could you

00:08:53,089 --> 00:08:59,930
know explain it and tell people nice

00:08:56,990 --> 00:09:04,130
stories while it was running and these

00:08:59,930 --> 00:09:06,920
days unfortunately it's just quick it's

00:09:04,130 --> 00:09:09,830
not always you know a spectacular though

00:09:06,920 --> 00:09:13,760
it's pretty cool so you

00:09:09,830 --> 00:09:16,190
have to trust me again but this this way

00:09:13,760 --> 00:09:21,230
to sort of get an impression that this

00:09:16,190 --> 00:09:24,860
actually is the correct result this is a

00:09:21,230 --> 00:09:28,790
true 3d data set as you can see and you

00:09:24,860 --> 00:09:32,960
can define a contour here and then we

00:09:28,790 --> 00:09:34,550
finally say something about back up as

00:09:32,960 --> 00:09:39,380
we can see there's that can you see

00:09:34,550 --> 00:09:43,870
there's a contour here and this is not

00:09:39,380 --> 00:09:49,880
the eyes this is what we do at Kindle

00:09:43,870 --> 00:09:52,040
it's true actually so now you trust me a

00:09:49,880 --> 00:09:53,210
little bit okay this is called

00:09:52,040 --> 00:09:56,500
co-registration

00:09:53,210 --> 00:09:59,840
and this is a fully automated process

00:09:56,500 --> 00:10:04,610
sort of almost zero knowledge is kind of

00:09:59,840 --> 00:10:07,400
thing so it does is not limited to human

00:10:04,610 --> 00:10:10,400
brains and actually there's quite a lot

00:10:07,400 --> 00:10:14,390
of people all around the world who use

00:10:10,400 --> 00:10:17,120
this kind of software to go register all

00:10:14,390 --> 00:10:22,130
sorts of things like read brains and

00:10:17,120 --> 00:10:25,340
mouse brain so the thing is that we use

00:10:22,130 --> 00:10:28,400
a similar algorithm to convert istra

00:10:25,340 --> 00:10:31,280
microscopy data the main thing here is

00:10:28,400 --> 00:10:35,750
that the data sets are so huge that one

00:10:31,280 --> 00:10:38,840
of our larger system runs this on three

00:10:35,750 --> 00:10:44,000
hundred gigabytes of process and sixty

00:10:38,840 --> 00:10:47,720
calls which is significant at least for

00:10:44,000 --> 00:10:51,380
us so that was my excuse to stray a

00:10:47,720 --> 00:10:57,880
little and what we do scientifically no

00:10:51,380 --> 00:10:57,880
we come back to stories and archiving

00:10:58,170 --> 00:11:04,480
okay so you've seen that before and

00:11:01,119 --> 00:11:06,540
somebody mentioned warm tips today we

00:11:04,480 --> 00:11:08,379
like warm tips we use warm tapes

00:11:06,540 --> 00:11:11,109
exclusively because I'm a little

00:11:08,379 --> 00:11:14,919
paranoid and this makes for really good

00:11:11,109 --> 00:11:20,109
scientific practice okay you've seen

00:11:14,919 --> 00:11:24,549
that well it's the same library

00:11:20,109 --> 00:11:26,439
it was pretty new three years ago it's

00:11:24,549 --> 00:11:28,569
it's bit bigger from the inside now

00:11:26,439 --> 00:11:32,559
because it works so neatly we added some

00:11:28,569 --> 00:11:35,679
more drives so we have eight 8006 drives

00:11:32,559 --> 00:11:40,799
now and we share it with our colleagues

00:11:35,679 --> 00:11:45,009
from the other Institute so this is a

00:11:40,799 --> 00:11:48,519
tape library and the historical context

00:11:45,009 --> 00:11:52,179
is that we used to have some of SHSM

00:11:48,519 --> 00:11:55,899
system and we needed to replace it

00:11:52,179 --> 00:12:02,110
because it was really getting old

00:11:55,899 --> 00:12:06,009
and so we were able to acquire our open

00:12:02,110 --> 00:12:08,529
archive HSM system and we were

00:12:06,009 --> 00:12:11,169
unfortunately a little naive the idea my

00:12:08,529 --> 00:12:14,169
idea was that you know we go from some

00:12:11,169 --> 00:12:17,679
of us to growl in a week or something

00:12:14,169 --> 00:12:23,079
and it's pretty much this sort of the

00:12:17,679 --> 00:12:25,329
same no conceptual differences and some

00:12:23,079 --> 00:12:29,559
of us in some ways is a more mature

00:12:25,329 --> 00:12:32,410
system the the cour system has some some

00:12:29,559 --> 00:12:37,809
highlights to to be fair but it's

00:12:32,410 --> 00:12:42,249
different and also thinking back we felt

00:12:37,809 --> 00:12:45,660
that a lot of people who should have

00:12:42,249 --> 00:12:47,559
known better had difficulties with

00:12:45,660 --> 00:12:49,839
differentiating between offline and

00:12:47,559 --> 00:12:52,929
online data and no matter how often you

00:12:49,839 --> 00:12:59,529
explained it to them they sort of didn't

00:12:52,929 --> 00:13:03,939
get it and we took up a suggestion from

00:12:59,529 --> 00:13:07,230
a dead love yarn very happy that he came

00:13:03,939 --> 00:13:10,190
up with that he said why don't you use

00:13:07,230 --> 00:13:14,030
the HSM system a different way

00:13:10,190 --> 00:13:17,810
in the sense that you keep it for

00:13:14,030 --> 00:13:21,770
administrative purposes and you write

00:13:17,810 --> 00:13:26,840
your backup to disk but use an HSM

00:13:21,770 --> 00:13:30,500
system as disk so we tried this and the

00:13:26,840 --> 00:13:30,970
rest is history it works very well for

00:13:30,500 --> 00:13:36,320
us

00:13:30,970 --> 00:13:38,300
so last time I was here we had this tiny

00:13:36,320 --> 00:13:41,600
little not not so tiny but we had this

00:13:38,300 --> 00:13:45,200
virtual machine and that virtual machine

00:13:41,600 --> 00:13:47,780
was running barriers and we were

00:13:45,200 --> 00:13:49,550
extremely happy with that because it was

00:13:47,780 --> 00:13:52,460
very flexible we have a number of

00:13:49,550 --> 00:13:54,770
networks because we handle patient data

00:13:52,460 --> 00:13:59,080
probe and data and you want to keep that

00:13:54,770 --> 00:14:02,360
data in a closed network segment and

00:13:59,080 --> 00:14:06,170
still you want to make backups you have

00:14:02,360 --> 00:14:09,410
to make backups and it was pretty neat

00:14:06,170 --> 00:14:13,520
using this virtual machine because we

00:14:09,410 --> 00:14:17,450
just edit Network virtual network cards

00:14:13,520 --> 00:14:21,230
as needed so we could make proper

00:14:17,450 --> 00:14:26,990
backups in all these network segments

00:14:21,230 --> 00:14:29,780
and it was also nice from a security

00:14:26,990 --> 00:14:34,880
point of view because we used run before

00:14:29,780 --> 00:14:39,580
and run after jobs to take off and take

00:14:34,880 --> 00:14:42,320
up the respective network interfaces so

00:14:39,580 --> 00:14:46,880
the connection was only there when it

00:14:42,320 --> 00:14:49,310
was needed for backup so that is what we

00:14:46,880 --> 00:14:54,080
did last time and it was so successful

00:14:49,310 --> 00:14:56,660
it's still running so we started with

00:14:54,080 --> 00:15:01,550
backups of our virtual machines and we

00:14:56,660 --> 00:15:06,680
have a number of smaller database

00:15:01,550 --> 00:15:09,350
servers they are pretty small in two

00:15:06,680 --> 00:15:15,620
recent standards but still very

00:15:09,350 --> 00:15:17,510
important for us and all of them live in

00:15:15,620 --> 00:15:21,460
virtual machines this is a

00:15:17,510 --> 00:15:26,860
run-of-the-mill he is X cluster

00:15:21,460 --> 00:15:33,070
which is not spectacular but just

00:15:26,860 --> 00:15:40,080
working and this is how we back up

00:15:33,070 --> 00:15:43,840
databases as you can see here these are

00:15:40,080 --> 00:15:51,730
small but important databases and every

00:15:43,840 --> 00:15:54,880
Sunday we sort of take the luxury of a

00:15:51,730 --> 00:15:57,370
little redundancy with this tiny amount

00:15:54,880 --> 00:16:00,340
of data it's just a no-brainer I think

00:15:57,370 --> 00:16:04,480
this is a different kettle of fish

00:16:00,340 --> 00:16:08,890
altogether this is several terabytes

00:16:04,480 --> 00:16:13,960
backup job just finishing here and you

00:16:08,890 --> 00:16:17,830
can see something here which I'll come

00:16:13,960 --> 00:16:23,230
back to in a second most of these files

00:16:17,830 --> 00:16:28,000
are about five gigabytes in size this is

00:16:23,230 --> 00:16:32,740
not a coincidence the idea is that if

00:16:28,000 --> 00:16:37,570
you use an HSM system to store your

00:16:32,740 --> 00:16:40,630
backups your file backups you need to

00:16:37,570 --> 00:16:44,020
configure a useful granularity for files

00:16:40,630 --> 00:16:46,450
five gigabytes full gigabytes would work

00:16:44,020 --> 00:16:48,670
three gigabyte but seven gigabyte

00:16:46,450 --> 00:16:55,540
anything let's just keep it consistent

00:16:48,670 --> 00:16:58,390
keep it a reasonable size and very

00:16:55,540 --> 00:17:01,750
important the HSM system needs a

00:16:58,390 --> 00:17:07,200
suitable min file age you don't want to

00:17:01,750 --> 00:17:07,200
start backing up anything that is still

00:17:07,350 --> 00:17:16,180
being worked on and also very important

00:17:12,270 --> 00:17:17,830
you need one job per virtual tape to

00:17:16,180 --> 00:17:19,510
avoid writing earlier date of a

00:17:17,830 --> 00:17:22,330
particular file more than once I have to

00:17:19,510 --> 00:17:30,690
explain that because this is the key

00:17:22,330 --> 00:17:33,690
issue if on Monday you add some data

00:17:30,690 --> 00:17:33,690
that

00:17:34,700 --> 00:17:44,900
some some some files and if then on

00:17:41,340 --> 00:17:48,090
Tuesday you don't have that mechanism

00:17:44,900 --> 00:17:51,150
what happens is that on Tuesday you save

00:17:48,090 --> 00:17:54,600
Monday's data again and on Wednesday

00:17:51,150 --> 00:17:57,900
Monday and Tuesday's data again and if

00:17:54,600 --> 00:17:59,270
you do it that way you avoid that kind

00:17:57,900 --> 00:18:02,640
of problem

00:17:59,270 --> 00:18:06,150
this is something I've shown before so

00:18:02,640 --> 00:18:10,110
I'll be very quick about this got a see

00:18:06,150 --> 00:18:13,050
of my good colleague John Berendt who

00:18:10,110 --> 00:18:15,270
gave us some help some years ago with

00:18:13,050 --> 00:18:17,840
getting started with barrios we have a

00:18:15,270 --> 00:18:23,250
number of scripts which are still in use

00:18:17,840 --> 00:18:26,370
which work like many of us handle daily

00:18:23,250 --> 00:18:32,430
things that are repetitive we use

00:18:26,370 --> 00:18:34,440
templates and creating new adding new

00:18:32,430 --> 00:18:38,700
clients with templates is just a breeze

00:18:34,440 --> 00:18:42,480
if you don't have to touch these

00:18:38,700 --> 00:18:45,240
templates very often and as you can see

00:18:42,480 --> 00:18:48,150
how this works is that you create a

00:18:45,240 --> 00:18:52,800
virtual client put in some placeholders

00:18:48,150 --> 00:18:56,490
and then you just need this one call to

00:18:52,800 --> 00:19:01,580
add a new client to a class of backup

00:18:56,490 --> 00:19:05,580
and this is the special HSM

00:19:01,580 --> 00:19:08,070
configuration I just mentioned maximum

00:19:05,580 --> 00:19:13,520
volume jobs equals one and maximum

00:19:08,070 --> 00:19:19,080
volume bytes something okay this is

00:19:13,520 --> 00:19:23,460
slightly new when making backups of data

00:19:19,080 --> 00:19:29,150
back service I'm a bit paranoid so and

00:19:23,460 --> 00:19:32,850
if you have databases where the database

00:19:29,150 --> 00:19:38,960
dump does not exceed 20 megabytes or

00:19:32,850 --> 00:19:42,330
something you can store a lot of these

00:19:38,960 --> 00:19:45,100
dams if you do it more than once with a

00:19:42,330 --> 00:19:48,150
con drop on the local machine

00:19:45,100 --> 00:19:51,130
and the experience is that in most cases

00:19:48,150 --> 00:19:52,840
you don't need disaster recovery in most

00:19:51,130 --> 00:19:56,230
cases it's just that one of the

00:19:52,840 --> 00:20:01,030
administrators made mistakes can I have

00:19:56,230 --> 00:20:02,860
please a table from the last dump this

00:20:01,030 --> 00:20:04,990
morning and then it's on the local

00:20:02,860 --> 00:20:06,190
machine and there's no need to involve

00:20:04,990 --> 00:20:10,299
Barrios at all

00:20:06,190 --> 00:20:14,770
but it's good to know it's there so we

00:20:10,299 --> 00:20:18,940
these days use the auto Postgres sequel

00:20:14,770 --> 00:20:20,950
backup package there's a very similar

00:20:18,940 --> 00:20:23,260
package for my secret and we are

00:20:20,950 --> 00:20:26,440
debating works similar this is in

00:20:23,260 --> 00:20:30,850
essence what we've been doing with our

00:20:26,440 --> 00:20:35,440
own scripts but not as nice so this is

00:20:30,850 --> 00:20:37,750
the the pretty version it does a little

00:20:35,440 --> 00:20:40,770
bit of rotation and it's easy to see

00:20:37,750 --> 00:20:46,210
which files are the latest files and

00:20:40,770 --> 00:20:48,820
it's it's reasonable to also keep one

00:20:46,210 --> 00:20:59,230
file per week one file per month or

00:20:48,820 --> 00:21:01,409
something like that and it's a

00:20:59,230 --> 00:21:01,409
no-brainer

00:21:02,669 --> 00:21:11,799
okay so we have multimodality imaging

00:21:08,830 --> 00:21:14,890
data you've seen some MRI data you've

00:21:11,799 --> 00:21:19,900
seen some potater you've seen these days

00:21:14,890 --> 00:21:23,860
new some microscopy data and we also

00:21:19,900 --> 00:21:28,150
have data from from other institutes for

00:21:23,860 --> 00:21:31,929
multi-site studies so that's a lot of

00:21:28,150 --> 00:21:34,419
data and a lot of data and even more

00:21:31,929 --> 00:21:36,549
data and this is a totally different

00:21:34,419 --> 00:21:40,960
class of data

00:21:36,549 --> 00:21:43,150
fortunately this has not hit us very

00:21:40,960 --> 00:21:47,080
badly so far but this can change

00:21:43,150 --> 00:21:51,419
overnight and if your scientists start

00:21:47,080 --> 00:21:57,670
doing that you're lost because this is

00:21:51,419 --> 00:22:00,550
an atty different magnitude of files

00:21:57,670 --> 00:22:04,330
people starting with next-generation

00:22:00,550 --> 00:22:08,890
sequence and have no oil no respect of

00:22:04,330 --> 00:22:17,230
course but have no attitude definitely

00:22:08,890 --> 00:22:18,730
have no no shame I have well there's

00:22:17,230 --> 00:22:22,090
some trade craft missing they're

00:22:18,730 --> 00:22:24,610
handling these large files and every

00:22:22,090 --> 00:22:27,070
single Institute I know people do

00:22:24,610 --> 00:22:32,500
next-generation sequencing all the IT

00:22:27,070 --> 00:22:34,690
people ciggies some really difficult and

00:22:32,500 --> 00:22:38,260
solve problems ok and then we have

00:22:34,690 --> 00:22:40,870
heterogeneous groups the focuses biology

00:22:38,260 --> 00:22:45,400
genomics psychology neurology is an

00:22:40,870 --> 00:22:51,160
interesting mixture ok before I make any

00:22:45,400 --> 00:22:55,600
unsuitable jokes no good oh yeah we

00:22:51,160 --> 00:22:58,900
leave that ok now this is new which is

00:22:55,600 --> 00:23:01,590
not even new one last time I was here we

00:22:58,900 --> 00:23:04,630
were sort of starting with B GFS and

00:23:01,590 --> 00:23:10,570
three years ago seems like a long time

00:23:04,630 --> 00:23:13,690
ago we were looking for a large-scale

00:23:10,570 --> 00:23:17,290
parallel file system and we've had

00:23:13,690 --> 00:23:20,770
experiences with data core some of s and

00:23:17,290 --> 00:23:24,010
another hsm system the newer grow our

00:23:20,770 --> 00:23:25,810
archive manager and conventional file

00:23:24,010 --> 00:23:27,390
systems we found too slow too small too

00:23:25,810 --> 00:23:30,520
expensive

00:23:27,390 --> 00:23:34,390
ok there's a number of parallel file

00:23:30,520 --> 00:23:40,060
systems and it is also a matter of taste

00:23:34,390 --> 00:23:42,700
but it's definitely not only a matter of

00:23:40,060 --> 00:23:45,460
taste it's just that if for instance you

00:23:42,700 --> 00:23:46,960
run lastly you are better off having at

00:23:45,460 --> 00:23:50,980
least one or two specialized

00:23:46,960 --> 00:23:53,920
administrators that do only that and we

00:23:50,980 --> 00:23:57,940
can't afford that we are a small to

00:23:53,920 --> 00:24:04,330
medium-sized Institute so we needed

00:23:57,940 --> 00:24:06,730
something more accessible and we looked

00:24:04,330 --> 00:24:10,420
around and we found that B G of s was

00:24:06,730 --> 00:24:12,020
not perfect already had some nice

00:24:10,420 --> 00:24:16,920
property

00:24:12,020 --> 00:24:19,680
when we started with BT as it needed

00:24:16,920 --> 00:24:22,190
more redundancy needed a CSS quota

00:24:19,680 --> 00:24:25,070
enforcement a number of things and

00:24:22,190 --> 00:24:29,190
people from theme park which is a

00:24:25,070 --> 00:24:32,640
founder for spin off they told us we

00:24:29,190 --> 00:24:35,840
have it covered it's on the milestone

00:24:32,640 --> 00:24:41,720
plan and I said yeah yeah a software

00:24:35,840 --> 00:24:47,070
okay and those were the people that

00:24:41,720 --> 00:24:49,190
promised us commercial support and had

00:24:47,070 --> 00:24:51,030
some ideas about an initial

00:24:49,190 --> 00:24:54,110
configuration with Hewlett Packard

00:24:51,030 --> 00:25:00,360
components so that was starting with

00:24:54,110 --> 00:25:04,170
2015 oh three and it needed a lot of

00:25:00,360 --> 00:25:06,300
things and then they put in the

00:25:04,170 --> 00:25:08,100
redundant data checks and a couple of

00:25:06,300 --> 00:25:09,750
weeks later the ICS and then the quota

00:25:08,100 --> 00:25:12,080
enforcement and then the redundant

00:25:09,750 --> 00:25:16,980
metadata service it was frightening

00:25:12,080 --> 00:25:20,340
because it was all on time I wasn't used

00:25:16,980 --> 00:25:22,020
to that that this is luckily this is the

00:25:20,340 --> 00:25:28,100
only thing they haven't done so far they

00:25:22,020 --> 00:25:32,610
promised me that for Christmas okay so

00:25:28,100 --> 00:25:35,100
we started three years ago and there

00:25:32,610 --> 00:25:36,930
were sort of two or three rounds of

00:25:35,100 --> 00:25:39,810
making it bigger making it more

00:25:36,930 --> 00:25:42,240
redundant in particular making it more

00:25:39,810 --> 00:25:45,270
redundant was was interesting in the

00:25:42,240 --> 00:25:49,290
sense that we have two server halls in

00:25:45,270 --> 00:25:50,730
the New Orleans aging Institute this is

00:25:49,290 --> 00:25:54,480
where I mentioned it at the very

00:25:50,730 --> 00:26:01,400
beginning and they are organized in what

00:25:54,480 --> 00:26:01,400
they call body groups so both of these

00:26:01,640 --> 00:26:10,370
create a virtual storage target and if

00:26:05,760 --> 00:26:16,500
either this or this fails the other will

00:26:10,370 --> 00:26:21,870
do a failover we use InfiniBand on the

00:26:16,500 --> 00:26:23,670
storage systems and also for the compute

00:26:21,870 --> 00:26:28,170
clusters

00:26:23,670 --> 00:26:31,020
and we have 10gbe for everybody else so

00:26:28,170 --> 00:26:35,640
we have as I mentioned before the

00:26:31,020 --> 00:26:39,660
virtual machine doing various backups of

00:26:35,640 --> 00:26:43,080
all our important databases and we have

00:26:39,660 --> 00:26:46,620
not one but two more about little

00:26:43,080 --> 00:26:48,780
servers this was how we started at this

00:26:46,620 --> 00:26:50,760
was what we were thinking about last

00:26:48,780 --> 00:26:52,980
time I was the end and we started doing

00:26:50,760 --> 00:26:55,470
it slightly after the conference and

00:26:52,980 --> 00:27:00,620
kept on doing it because it worked quite

00:26:55,470 --> 00:27:06,380
well so on the system which has

00:27:00,620 --> 00:27:10,830
InfiniBand connection and native be GFS

00:27:06,380 --> 00:27:12,930
support this system also talks to the

00:27:10,830 --> 00:27:15,000
library and this is the only system that

00:27:12,930 --> 00:27:19,560
talks to the library this is the growl

00:27:15,000 --> 00:27:22,890
archive manager and on that system we

00:27:19,560 --> 00:27:26,220
also run above your server which means

00:27:22,890 --> 00:27:29,610
of course that it has rather nice access

00:27:26,220 --> 00:27:34,170
to everything in terms of data that is

00:27:29,610 --> 00:27:38,940
moving around and it works and this is

00:27:34,170 --> 00:27:42,720
new this is another body or server it

00:27:38,940 --> 00:27:46,200
has also native be GFS access very fast

00:27:42,720 --> 00:27:49,290
InfiniBand and it has local storage that

00:27:46,200 --> 00:27:51,030
this one has local storage too and the

00:27:49,290 --> 00:27:55,020
idea is that this is a parallel file

00:27:51,030 --> 00:27:59,160
system so just having one but they are

00:27:55,020 --> 00:28:02,340
service beautiful waste because you can

00:27:59,160 --> 00:28:05,880
do poor-man's paralyzation so we have

00:28:02,340 --> 00:28:09,060
organized the filesystem in obviously

00:28:05,880 --> 00:28:11,010
some sort of directory structure and if

00:28:09,060 --> 00:28:12,480
you survey you have that directory and

00:28:11,010 --> 00:28:14,520
you have that directory of that

00:28:12,480 --> 00:28:17,160
directory you can do poor-man's

00:28:14,520 --> 00:28:23,760
paralyzation and make sure that you

00:28:17,160 --> 00:28:28,740
don't do you are not more redundant than

00:28:23,760 --> 00:28:35,650
you want to be okay so this is what it

00:28:28,740 --> 00:28:38,500
looks like this is one one wreck

00:28:35,650 --> 00:28:44,400
these are the storage systems this is

00:28:38,500 --> 00:28:49,180
one compute cluster and it is InfiniBand

00:28:44,400 --> 00:28:51,490
it's not very small we use ansible

00:28:49,180 --> 00:28:54,850
another open-source tool we use slow I'm

00:28:51,490 --> 00:28:58,030
another open-source tool yes and

00:28:54,850 --> 00:29:08,220
thinlinc thinlinc is a game changer

00:28:58,030 --> 00:29:08,220
great commercial support available ok so

00:29:08,370 --> 00:29:12,990
these days we prefer not to buy hewlett

00:29:11,380 --> 00:29:17,050
in packet because we had some

00:29:12,990 --> 00:29:19,810
unfortunate experiences with them okay

00:29:17,050 --> 00:29:22,300
um this is this is what our computer

00:29:19,810 --> 00:29:25,450
servers look like and we have a couple

00:29:22,300 --> 00:29:27,040
with half a terabyte of RAM and these

00:29:25,450 --> 00:29:30,600
are the systems we use for

00:29:27,040 --> 00:29:34,270
co-registration I mentioned that before

00:29:30,600 --> 00:29:37,450
okay we can be very quick these are the

00:29:34,270 --> 00:29:40,860
storage systems this is not a very

00:29:37,450 --> 00:29:44,560
interesting how this is more interesting

00:29:40,860 --> 00:29:50,140
okay this is a standard benchmark and

00:29:44,560 --> 00:29:55,600
the bottom line is that this is pretty

00:29:50,140 --> 00:29:58,270
good okay this is a benchmark for one

00:29:55,600 --> 00:30:00,760
blade and for bgf as nodes which means

00:29:58,270 --> 00:30:07,300
that we can probably go a little faster

00:30:00,760 --> 00:30:09,910
than that which is if you have a

00:30:07,300 --> 00:30:13,660
parallel file system think rate but

00:30:09,910 --> 00:30:19,090
think rate in a macroscopic way if you

00:30:13,660 --> 00:30:22,600
have a raid array 0 you get performance

00:30:19,090 --> 00:30:25,360
by adding them bandwidth of individual

00:30:22,600 --> 00:30:28,600
disks and if you have a parallel file

00:30:25,360 --> 00:30:31,600
system you get performance by adding the

00:30:28,600 --> 00:30:34,480
performance of individual file servers

00:30:31,600 --> 00:30:36,990
at the same time which means that if you

00:30:34,480 --> 00:30:40,360
have a large file

00:30:36,990 --> 00:30:43,170
you-you-you-you right chunks of these

00:30:40,360 --> 00:30:46,140
files to all your file servers and then

00:30:43,170 --> 00:30:49,650
you get the raw performance from

00:30:46,140 --> 00:30:55,350
all of them if it works most of the time

00:30:49,650 --> 00:30:58,460
it does okay this is something almost a

00:30:55,350 --> 00:31:02,820
little innovative no it's not terribly

00:30:58,460 --> 00:31:05,970
geeky but it's maybe useful okay one

00:31:02,820 --> 00:31:07,830
thing I don't like about this is one of

00:31:05,970 --> 00:31:10,200
the few things I don't like about it was

00:31:07,830 --> 00:31:13,400
and it's a small thing and there's a fix

00:31:10,200 --> 00:31:16,920
for this and I like to keep

00:31:13,400 --> 00:31:19,890
configuration data in our github system

00:31:16,920 --> 00:31:25,020
we have a github enterprise server which

00:31:19,890 --> 00:31:28,230
is a nice I get so of course so the main

00:31:25,020 --> 00:31:31,320
thing is get now this thing is sitting

00:31:28,230 --> 00:31:36,750
in the DMZ which means that there's not

00:31:31,320 --> 00:31:39,360
as much security there as one might like

00:31:36,750 --> 00:31:43,280
and you are not supposed to put

00:31:39,360 --> 00:31:46,020
sensitive data there it's my policy

00:31:43,280 --> 00:31:52,410
which means of course that if you put

00:31:46,020 --> 00:31:55,250
your various configuration as is into a

00:31:52,410 --> 00:31:58,710
git repository which is the sort of

00:31:55,250 --> 00:32:01,770
instinctive thing we tend to do you have

00:31:58,710 --> 00:32:04,580
all the passwords in and clear in the

00:32:01,770 --> 00:32:08,880
repository it's not a very good idea

00:32:04,580 --> 00:32:11,550
okay but still you want a version

00:32:08,880 --> 00:32:15,090
control of what you do with Perez this

00:32:11,550 --> 00:32:18,090
is a compromise the compromise is right

00:32:15,090 --> 00:32:20,940
a good filter looks like this it's one

00:32:18,090 --> 00:32:24,930
line thing okay okay it's not terribly

00:32:20,940 --> 00:32:27,960
complicated it's just that the nice

00:32:24,930 --> 00:32:30,750
thing is consistency if there's as far

00:32:27,960 --> 00:32:33,990
as I know if there's critical

00:32:30,750 --> 00:32:38,880
information in the barrios config it

00:32:33,990 --> 00:32:41,550
starts with password equals so my

00:32:38,880 --> 00:32:43,910
suggestion is find all the lines where

00:32:41,550 --> 00:32:47,910
there's something with password and

00:32:43,910 --> 00:32:49,770
replace them so this is as much filter

00:32:47,910 --> 00:32:52,440
which means that anytime you check

00:32:49,770 --> 00:32:54,930
something in and to get if you do it

00:32:52,440 --> 00:32:58,500
properly it needs these three lines so

00:32:54,930 --> 00:32:59,070
it's a three line solution you work with

00:32:58,500 --> 00:33:03,120
get

00:32:59,070 --> 00:33:05,100
as usual nothing else but anytime you

00:33:03,120 --> 00:33:07,350
check something in and in any file

00:33:05,100 --> 00:33:10,139
there's any mention of any password it

00:33:07,350 --> 00:33:12,990
will be replaced which means that you

00:33:10,139 --> 00:33:16,559
have all the version control you want

00:33:12,990 --> 00:33:19,500
without the passwords the downside is

00:33:16,559 --> 00:33:21,750
that if anything breaks you will not get

00:33:19,500 --> 00:33:27,269
the passwords from your good server this

00:33:21,750 --> 00:33:31,740
is the price you pay okay so this is the

00:33:27,269 --> 00:33:35,700
test file this is the test file and when

00:33:31,740 --> 00:33:43,230
I check this in and I log in to my good

00:33:35,700 --> 00:33:47,490
system and this is why you want to do

00:33:43,230 --> 00:33:51,690
this this is what you get for free if

00:33:47,490 --> 00:33:55,200
you check it in to get configuration

00:33:51,690 --> 00:33:58,769
information should go to a version

00:33:55,200 --> 00:34:02,700
control system and most of you will use

00:33:58,769 --> 00:34:06,019
git for that okay and one of the things

00:34:02,700 --> 00:34:10,679
I mean Gators open-source github

00:34:06,019 --> 00:34:15,800
enterprise is not still I was a good

00:34:10,679 --> 00:34:18,800
decision it's worth every penny of it

00:34:15,800 --> 00:34:18,800
yeah

00:34:24,390 --> 00:34:32,200
yes yes yes yes you can do ugly things

00:34:29,440 --> 00:34:35,350
with that so you have to be you have to

00:34:32,200 --> 00:34:37,300
be responsible and the idea is that you

00:34:35,350 --> 00:34:42,430
have a smudge filter and you have a

00:34:37,300 --> 00:34:44,440
clean filter so the one is applied when

00:34:42,430 --> 00:34:47,290
checking in and the other is applied

00:34:44,440 --> 00:34:49,060
when you get data there's just no way if

00:34:47,290 --> 00:34:56,800
you remove the past but you can't get it

00:34:49,060 --> 00:34:59,140
back so this is a compromise and in a

00:34:56,800 --> 00:35:01,150
sense you have a similar problem if for

00:34:59,140 --> 00:35:05,260
instance you work with Django or any

00:35:01,150 --> 00:35:08,920
other database file but then you can

00:35:05,260 --> 00:35:10,420
keep the critical sensitive password

00:35:08,920 --> 00:35:12,460
information which is just you know a few

00:35:10,420 --> 00:35:15,760
bytes you keep them in separate files

00:35:12,460 --> 00:35:17,140
and then you write a get ignore file so

00:35:15,760 --> 00:35:19,030
you check everything in but these

00:35:17,140 --> 00:35:25,900
password files which is a cleaner

00:35:19,030 --> 00:35:28,380
solution than this let's still okay okay

00:35:25,900 --> 00:35:35,500
I did a little benchmarking benchmarking

00:35:28,380 --> 00:35:39,160
is always sort of with bits if and

00:35:35,500 --> 00:35:40,750
what's not and the thing is that if you

00:35:39,160 --> 00:35:47,170
want to do it properly you really need

00:35:40,750 --> 00:35:51,040
to look at the kind of data so it is a

00:35:47,170 --> 00:35:53,260
precise art but only if you look at the

00:35:51,040 --> 00:35:56,740
dirty details which we are not going to

00:35:53,260 --> 00:36:00,430
do here suffice it to say that this this

00:35:56,740 --> 00:36:05,620
was a tip I got from my good friends at

00:36:00,430 --> 00:36:10,300
bars that I should give LSAT for a try I

00:36:05,620 --> 00:36:13,120
was complaining that if I switch on gzip

00:36:10,300 --> 00:36:17,950
compression I take so much longer well

00:36:13,120 --> 00:36:22,090
it does and as you can see so this is a

00:36:17,950 --> 00:36:24,400
compromise it's used as at 4:00 which is

00:36:22,090 --> 00:36:28,780
way faster but then it doesn't give as

00:36:24,400 --> 00:36:32,290
good compression and that again depends

00:36:28,780 --> 00:36:34,600
on your kind of data what you can see

00:36:32,290 --> 00:36:37,030
from this little table here is that if

00:36:34,600 --> 00:36:41,710
you do this with a million files

00:36:37,030 --> 00:36:46,150
and this is a small file system if you

00:36:41,710 --> 00:36:48,460
do this with a million files and there's

00:36:46,150 --> 00:36:53,590
not such a lot of difference yeah but

00:36:48,460 --> 00:36:56,610
then for 10% compression and the other

00:36:53,590 --> 00:37:01,060
thing is if you look at the data volume

00:36:56,610 --> 00:37:04,960
if you go from 160 uncompressed to

00:37:01,060 --> 00:37:07,900
uncompressed roughly 300 you don't go

00:37:04,960 --> 00:37:11,200
from 42 minutes to 80 minutes right

00:37:07,900 --> 00:37:14,740
which means quite obviously that as we

00:37:11,200 --> 00:37:18,400
all know and this is tragic with HSM

00:37:14,740 --> 00:37:21,670
systems for instance complexity and cost

00:37:18,400 --> 00:37:24,580
is related to the number of files and

00:37:21,670 --> 00:37:28,920
not only to their files right through

00:37:24,580 --> 00:37:34,660
their size okay so this is just you know

00:37:28,920 --> 00:37:37,120
scratching the edges in in general all

00:37:34,660 --> 00:37:39,580
that for works pretty good for us and

00:37:37,120 --> 00:37:43,120
for some kind of data where I know that

00:37:39,580 --> 00:37:47,860
I get some compression I use it on the

00:37:43,120 --> 00:37:50,560
other hand obviously if I know there's a

00:37:47,860 --> 00:37:54,190
directory which contains just terabytes

00:37:50,560 --> 00:37:57,370
of microscopy data these are all TIFF

00:37:54,190 --> 00:37:59,680
files with that they are already gzip

00:37:57,370 --> 00:38:02,950
compressed there's no point whatsoever

00:37:59,680 --> 00:38:08,410
doing a new compression on them so I

00:38:02,950 --> 00:38:16,390
don't okay this is another one with this

00:38:08,410 --> 00:38:19,060
simple fix he helped me very there was

00:38:16,390 --> 00:38:21,040
an ugly case I mean he had a very good

00:38:19,060 --> 00:38:23,800
solution but it really made me nervous

00:38:21,040 --> 00:38:26,980
so what happens is this and this can

00:38:23,800 --> 00:38:33,820
happen to not everybody but to many of

00:38:26,980 --> 00:38:38,440
you if you configure various to do a

00:38:33,820 --> 00:38:42,280
backup of a file system which you need

00:38:38,440 --> 00:38:47,620
to mount for instance in our case the be

00:38:42,280 --> 00:38:50,170
GFS file system barriers will not check

00:38:47,620 --> 00:38:52,990
if there's anything mounted

00:38:50,170 --> 00:38:55,869
so if for instance and this happened

00:38:52,990 --> 00:38:58,720
twice you're just doing maintenance and

00:38:55,869 --> 00:39:01,390
the parallel file system is currently

00:38:58,720 --> 00:39:04,539
not available but you forgot to switch

00:39:01,390 --> 00:39:08,410
off the Piraeus scheduler Boreas will

00:39:04,539 --> 00:39:11,170
start doing its normal round of backups

00:39:08,410 --> 00:39:13,180
and we'll see oh there's this /b GFS

00:39:11,170 --> 00:39:16,750
directory it's empty

00:39:13,180 --> 00:39:20,049
all these 8 terabytes of files have been

00:39:16,750 --> 00:39:22,930
deleted which means that it goes through

00:39:20,049 --> 00:39:27,309
the database and will mark all these

00:39:22,930 --> 00:39:29,650
files are deleted so then you conclude

00:39:27,309 --> 00:39:34,180
maintenance you mount your filesystem

00:39:29,650 --> 00:39:39,430
again and next day barrio star says mmm

00:39:34,180 --> 00:39:42,130
8 terabytes of new files and this is a

00:39:39,430 --> 00:39:44,319
bit annoying and the solution really is

00:39:42,130 --> 00:39:48,690
very simple the solution is that if that

00:39:44,319 --> 00:39:51,160
kind of thing happens to you you just

00:39:48,690 --> 00:39:54,910
lead the corresponding job and

00:39:51,160 --> 00:39:57,910
everything will be would be good it

00:39:54,910 --> 00:40:01,180
takes seconds beautiful it was a very

00:39:57,910 --> 00:40:04,990
very good feeling to understand what was

00:40:01,180 --> 00:40:09,099
going wrong however there's a more

00:40:04,990 --> 00:40:11,410
permanent solution to this so this works

00:40:09,099 --> 00:40:14,769
pretty neatly and the more permanent

00:40:11,410 --> 00:40:18,309
solution is it in a sense also a

00:40:14,769 --> 00:40:21,250
one-line script we write a run before

00:40:18,309 --> 00:40:28,750
target available script and it just

00:40:21,250 --> 00:40:32,049
checks if the directory we are supposed

00:40:28,750 --> 00:40:35,920
to backup is actually there so in our

00:40:32,049 --> 00:40:39,099
case it's /b g FS /v 1 and then the good

00:40:35,920 --> 00:40:42,220
directory and if B g FS is not mounted

00:40:39,099 --> 00:40:45,460
it's just less PDF as nothing so it's

00:40:42,220 --> 00:40:51,400
easy to detect so there's this one lines

00:40:45,460 --> 00:40:56,650
of best script and we configure in our

00:40:51,400 --> 00:41:00,809
template a run before job which is sort

00:40:56,650 --> 00:41:03,400
of very concise one line again and

00:41:00,809 --> 00:41:05,529
barrios will fail

00:41:03,400 --> 00:41:10,599
if this run before target available

00:41:05,529 --> 00:41:23,680
script returns anything which is not

00:41:10,599 --> 00:41:28,240
zero fixed nice it's correct the mount

00:41:23,680 --> 00:41:32,200
point is there but I am not backing up

00:41:28,240 --> 00:41:34,990
/b GFS I'm always backing up / BG s / v

00:41:32,200 --> 00:41:48,640
1 / something and this makes it very

00:41:34,990 --> 00:41:52,059
easy but if yeah and if you want to for

00:41:48,640 --> 00:41:55,599
some reason to back up the /p g FS or

00:41:52,059 --> 00:41:58,000
whatever it is in your case then there's

00:41:55,599 --> 00:41:59,770
this another one line best script which

00:41:58,000 --> 00:42:03,609
will tell you is there something which

00:41:59,770 --> 00:42:08,349
is more sophisticated exactly so that

00:42:03,609 --> 00:42:10,119
was just you know simple simple simple

00:42:08,349 --> 00:42:11,680
this is not simple this is actually

00:42:10,119 --> 00:42:13,599
something we've been using for a number

00:42:11,680 --> 00:42:15,430
of years it's very complicated and I'm

00:42:13,599 --> 00:42:18,460
going to spend the next 20 minutes

00:42:15,430 --> 00:42:20,710
explaining it to and not it is very

00:42:18,460 --> 00:42:23,529
complicated it works that this is the

00:42:20,710 --> 00:42:25,720
nicest I can say about it I didn't think

00:42:23,529 --> 00:42:28,359
about it I had people set it up for me

00:42:25,720 --> 00:42:30,940
and I'm not going to touch it okay this

00:42:28,359 --> 00:42:34,960
is hot fell over and it works it's been

00:42:30,940 --> 00:42:39,010
shown to work accidentally at least

00:42:34,960 --> 00:42:41,859
three times it will not work forever and

00:42:39,010 --> 00:42:44,710
we are loose to change anything there

00:42:41,859 --> 00:42:47,289
and there's something I wanted to show

00:42:44,710 --> 00:42:49,329
you that's something I need to fix

00:42:47,289 --> 00:42:51,660
before which I've forgotten of course

00:42:49,329 --> 00:42:58,799
just a second

00:42:51,660 --> 00:43:04,000
yeah okay

00:42:58,799 --> 00:43:06,279
this is hot fell over and this is this

00:43:04,000 --> 00:43:08,740
is something a little off-topic but I

00:43:06,279 --> 00:43:12,579
hope you don't mind okay this is

00:43:08,740 --> 00:43:15,400
something only a few days ago okay it

00:43:12,579 --> 00:43:16,480
was 17th of September you can watch it

00:43:15,400 --> 00:43:19,690
here

00:43:16,480 --> 00:43:22,770
imagine London Barbican Hall this is one

00:43:19,690 --> 00:43:24,730
of the larger concert halls in Europe

00:43:22,770 --> 00:43:27,910
this is the London Symphony Orchestra

00:43:24,730 --> 00:43:30,760
two choirs there's a lot of people on

00:43:27,910 --> 00:43:32,560
stage there's 2,000 people sitting there

00:43:30,760 --> 00:43:33,880
looking at you no pressure no pressure

00:43:32,560 --> 00:43:36,670
okay

00:43:33,880 --> 00:43:40,930
so um the main thing is that this was

00:43:36,670 --> 00:43:44,470
streamed live just to add a little on it

00:43:40,930 --> 00:43:46,450
and in terms of failover there's

00:43:44,470 --> 00:43:48,700
something interesting to observe you

00:43:46,450 --> 00:43:53,350
can't hear it that's the main point and

00:43:48,700 --> 00:43:56,350
that's a bit of a spoiler just now okay

00:43:53,350 --> 00:44:01,660
the piece is October eros the damnation

00:43:56,350 --> 00:44:05,080
of Faust and this is the secret hero and

00:44:01,660 --> 00:44:09,330
name you wouldn't necessarily read oh

00:44:05,080 --> 00:44:13,180
he's the principal always so his famous

00:44:09,330 --> 00:44:17,710
but and he's definitely cooler than he

00:44:13,180 --> 00:44:20,620
looks and I show you okay and just a

00:44:17,710 --> 00:44:25,270
little background information it's only

00:44:20,620 --> 00:44:30,850
20 seconds don't worry this is an oboe

00:44:25,270 --> 00:44:36,660
and this is a double reed this double

00:44:30,850 --> 00:44:40,510
reed thing which means that every person

00:44:36,660 --> 00:44:43,630
playing oboe has a suitcase with the

00:44:40,510 --> 00:44:47,590
oboe and another suitcase with tools of

00:44:43,630 --> 00:44:51,640
the trade - you know optimize the the

00:44:47,590 --> 00:44:53,440
reed and what happens now is that he's

00:44:51,640 --> 00:44:55,780
going to play and there's little water

00:44:53,440 --> 00:44:59,530
in the reed happens perfectly normal and

00:44:55,780 --> 00:45:03,460
then you sort of once to sort of expunge

00:44:59,530 --> 00:45:06,370
the water unfortunately this is just bad

00:45:03,460 --> 00:45:09,880
luck he hits the reed too hard and it

00:45:06,370 --> 00:45:12,580
breaks and then he has less than a

00:45:09,880 --> 00:45:14,730
second to decide what to do and he's

00:45:12,580 --> 00:45:19,480
playing one of the most difficult

00:45:14,730 --> 00:45:22,510
important oboe solo areas otherwise it

00:45:19,480 --> 00:45:26,050
wouldn't be fun right okay watch it's

00:45:22,510 --> 00:45:28,860
very five seconds and it's descend into

00:45:26,050 --> 00:45:28,860
oboe hell

00:45:34,510 --> 00:45:37,510
now

00:45:44,130 --> 00:45:53,230
okay the main so the main point is that

00:45:49,240 --> 00:45:56,200
he didn't miss a single note also what

00:45:53,230 --> 00:45:58,630
you can't see is that the other oboe

00:45:56,200 --> 00:46:00,099
looks like an oboe but it's a totally

00:45:58,630 --> 00:46:03,130
different instrument totally different

00:46:00,099 --> 00:46:05,380
fingering he's just so cool

00:46:03,130 --> 00:46:09,400
he probably aged five years in that

00:46:05,380 --> 00:46:11,410
moment but and also what you can't see

00:46:09,400 --> 00:46:13,450
is this is this is what you can see on

00:46:11,410 --> 00:46:17,579
the Facebook channel of lands of Yorkist

00:46:13,450 --> 00:46:21,220
ROM is that while while he was playing

00:46:17,579 --> 00:46:24,069
his colleague sort of cleaned and fixed

00:46:21,220 --> 00:46:27,970
the oboe and one minute later they were

00:46:24,069 --> 00:46:33,750
both playing again and everybody else

00:46:27,970 --> 00:46:35,099
sitting around them poker-faced okay

00:46:33,750 --> 00:46:42,369
right

00:46:35,099 --> 00:46:46,539
coming back to track topology yes okay

00:46:42,369 --> 00:46:51,849
Network and back up I mentioned that we

00:46:46,539 --> 00:46:54,039
have several buildings and this is these

00:46:51,849 --> 00:46:57,180
are our buildings and this is the

00:46:54,039 --> 00:47:01,420
neighbor Institute we have a 10 gig II

00:46:57,180 --> 00:47:05,200
connection to there this is the B G of s

00:47:01,420 --> 00:47:10,779
it's partly in Hall B and partly in hall

00:47:05,200 --> 00:47:14,700
a and this is the first barrio server

00:47:10,779 --> 00:47:17,980
it also has local storage and it has the

00:47:14,700 --> 00:47:21,700
library there's the second barrier

00:47:17,980 --> 00:47:25,769
server in the other server Hall it also

00:47:21,700 --> 00:47:28,809
has Lotus storage and there's the third

00:47:25,769 --> 00:47:31,269
which is actually I'm sort of smeared

00:47:28,809 --> 00:47:34,299
over these buildings because it's a

00:47:31,269 --> 00:47:38,950
virtual machine and it can reside on any

00:47:34,299 --> 00:47:42,339
of four years X cluster nodes which

00:47:38,950 --> 00:47:46,839
makes it very flexible and there's one

00:47:42,339 --> 00:47:49,960
other system in okay I should mention

00:47:46,839 --> 00:47:53,049
that this is not open source and I'm I'm

00:47:49,960 --> 00:47:55,809
not ashamed to say it's it's a very nice

00:47:53,049 --> 00:47:56,450
system as a very nice system it's a

00:47:55,809 --> 00:47:59,109
German

00:47:56,450 --> 00:48:01,550
Factory and it's a pretty cool system

00:47:59,109 --> 00:48:04,099
it's called a silent break library

00:48:01,550 --> 00:48:06,680
because this cold storage this is a

00:48:04,099 --> 00:48:09,260
brick and we have a couple of those each

00:48:06,680 --> 00:48:13,640
brick has 16 terabyte each brick

00:48:09,260 --> 00:48:16,700
contains a number of disks from three

00:48:13,640 --> 00:48:24,380
different suppliers it's self-contained

00:48:16,700 --> 00:48:26,089
is warm certified and from all practical

00:48:24,380 --> 00:48:30,440
purposes it could be tape it could be

00:48:26,089 --> 00:48:33,829
standalone it's in fact discs they give

00:48:30,440 --> 00:48:35,690
you warranty for many years and you can

00:48:33,829 --> 00:48:39,440
do all sorts of cool things you can

00:48:35,690 --> 00:48:42,920
synchronize them you can create rates

00:48:39,440 --> 00:48:47,920
and stuff over it and it's a very nice

00:48:42,920 --> 00:48:52,040
addition to our backup concert because

00:48:47,920 --> 00:48:57,380
it complements the barrios concept

00:48:52,040 --> 00:49:01,520
because it allows me to give particular

00:48:57,380 --> 00:49:05,619
users direct access to read-only shares

00:49:01,520 --> 00:49:08,630
it's a huge psychological plus if I do

00:49:05,619 --> 00:49:12,680
backup for our scientists sort of

00:49:08,630 --> 00:49:15,099
abstract they have to trust me and if

00:49:12,680 --> 00:49:18,530
they have a system where they can

00:49:15,099 --> 00:49:20,359
anytime they want access their data and

00:49:18,530 --> 00:49:24,790
it's there it's read-only but it's there

00:49:20,359 --> 00:49:28,190
it makes for huge motivation to put

00:49:24,790 --> 00:49:34,520
their data into my responsibility which

00:49:28,190 --> 00:49:38,030
is always a bit of an issue and also it

00:49:34,520 --> 00:49:41,510
has a 1 lakh file system so in in effect

00:49:38,030 --> 00:49:44,270
it works like tape it's just different

00:49:41,510 --> 00:49:49,690
technology it's an additional building

00:49:44,270 --> 00:49:53,030
which is good also I can make use of

00:49:49,690 --> 00:49:56,420
parallel facing system because I use a

00:49:53,030 --> 00:50:05,420
parallel our sync method which was

00:49:56,420 --> 00:50:07,600
proposed by W click from the NCSA this

00:50:05,420 --> 00:50:13,100
is just this is just

00:50:07,600 --> 00:50:18,860
a 20 line script which uses our sink and

00:50:13,100 --> 00:50:22,190
some other new tools and and we sort of

00:50:18,860 --> 00:50:27,860
modify that a little bit just to say

00:50:22,190 --> 00:50:30,620
that we modified it a little bit and we

00:50:27,860 --> 00:50:34,160
use 20 threads for one transfer and we

00:50:30,620 --> 00:50:37,400
can get a significant speed up and we

00:50:34,160 --> 00:50:39,880
are not the first to observe that if you

00:50:37,400 --> 00:50:42,590
have our sink and you're able to sort of

00:50:39,880 --> 00:50:46,310
multi thread that this is a good thing

00:50:42,590 --> 00:50:49,760
because our sink is disappointing in

00:50:46,310 --> 00:50:51,530
certain circumstances and if you have a

00:50:49,760 --> 00:50:54,500
parallel file system this is definitely

00:50:51,530 --> 00:50:56,690
good idea and so we are close to sort of

00:50:54,500 --> 00:50:59,620
the theoretical maximum of what the

00:50:56,690 --> 00:51:06,950
system can write so what more can ask

00:50:59,620 --> 00:51:10,160
and finally when I got funding for this

00:51:06,950 --> 00:51:14,960
system I had a very nice conversation

00:51:10,160 --> 00:51:17,570
with our colleagues we discussed these

00:51:14,960 --> 00:51:20,300
things before me as I've spent money and

00:51:17,570 --> 00:51:21,920
they said yeah you can buy another one

00:51:20,300 --> 00:51:23,840
because this is an option from Fast

00:51:21,920 --> 00:51:25,820
Eddie you can buy another one put it in

00:51:23,840 --> 00:51:28,250
another building just put a switch and

00:51:25,820 --> 00:51:30,350
they will synchronize so it's very

00:51:28,250 --> 00:51:33,770
convenient they said yeah it's

00:51:30,350 --> 00:51:37,460
convenient but this sort of smells like

00:51:33,770 --> 00:51:40,970
vendor login use barriers to do backups

00:51:37,460 --> 00:51:43,910
of that system then you have it on disks

00:51:40,970 --> 00:51:46,790
and on tape and with burials you know

00:51:43,910 --> 00:51:48,890
exactly what you're doing and if five

00:51:46,790 --> 00:51:50,960
years from now whatever problems they

00:51:48,890 --> 00:51:55,210
might have you still have you later and

00:51:50,960 --> 00:51:55,210
I think this is a good way to conclude

00:52:01,240 --> 00:52:15,910
thank you I just so maybe you can tell

00:52:10,730 --> 00:52:15,910
us something right speed actually

00:52:18,339 --> 00:52:28,549
seconds how long does it take to took

00:52:23,030 --> 00:52:34,549
full backup of your small databases we

00:52:28,549 --> 00:52:37,910
usually do database dumps several times

00:52:34,549 --> 00:52:40,250
a day using cron jobs so the dump files

00:52:37,910 --> 00:52:45,319
are already on the system and it's

00:52:40,250 --> 00:52:47,240
really not very how shall I put it it's

00:52:45,319 --> 00:52:49,309
not a very difficult job for valios it's

00:52:47,240 --> 00:52:57,890
just collecting some dead files small

00:52:49,309 --> 00:53:00,130
and seconds really I don't want to leave

00:52:57,890 --> 00:53:03,680
the impression that virus is cool for

00:53:00,130 --> 00:53:05,960
you know backup a very small data bases

00:53:03,680 --> 00:53:07,970
this is one thing we do with this is one

00:53:05,960 --> 00:53:10,099
thing we do and it doesn't do really

00:53:07,970 --> 00:53:11,990
well but this is only one thing we do

00:53:10,099 --> 00:53:14,990
with it there's a number of other things

00:53:11,990 --> 00:53:17,780
it does very well too and last time I

00:53:14,990 --> 00:53:21,170
was here and I tried not to repeat all

00:53:17,780 --> 00:53:23,900
my old slides is that one of the things

00:53:21,170 --> 00:53:26,390
I loved about barriers is looking behind

00:53:23,900 --> 00:53:28,579
the scenes playing playing in a sense of

00:53:26,390 --> 00:53:31,220
read-only of course with the database

00:53:28,579 --> 00:53:34,670
being able to sort of generate any sort

00:53:31,220 --> 00:53:38,450
of listing like give me the last 20

00:53:34,670 --> 00:53:40,910
largest files sorted of course from a

00:53:38,450 --> 00:53:44,089
particular backup this is very helpful

00:53:40,910 --> 00:53:47,829
there's not a lot of backup systems that

00:53:44,089 --> 00:53:47,829
will do that I think

00:53:52,700 --> 00:53:59,010
so still any questions left yeah you can

00:53:57,540 --> 00:54:04,580
find the London Symphony thing on

00:53:59,010 --> 00:54:04,580
YouTube okay then thank you

00:54:04,770 --> 00:54:09,969

YouTube URL: https://www.youtube.com/watch?v=pRcw8C7CmU0


