Title: OSBConf 2016:Backup with Bareos and ZFS | Christian ReiÃŸ
Publication date: 2016-10-07
Playlist: OSBConf 2016 | Open Source Backup Conference
Description: 
	Doing backups is great, but storing the data somewhere is a whole different ballgame. You can use tapes, of course; but with always
declining prices and increasing reliability of Hard Disks storing all your data as files is becoming more and more preferable. There is just the matter on how to save them. As single files in a single filesystem, shared across a multitude of servers or even in one large archive. The option is only limited by the Administrators imagination.

In my speech I want to tell you about my experiences with storing all archives in ZFS. Opting for one-dataset-per-host, server-side compression, ZFS Raid and quota enforcement. And since we are all loving the fully automated approach I will show you how to do this in puppet. This option I am presenting you is in production. Hundreds of servers are fully automated with Puppet, Bareos/Bacula and ZFS.
Captions: 
	00:00:10,120 --> 00:00:17,500
okay we continue our next speaker is

00:00:13,740 --> 00:00:24,430
Christian rice and he's talking about

00:00:17,500 --> 00:00:27,280
back up with barriers and set FS okay

00:00:24,430 --> 00:00:31,150
hello everyone thank you for attending

00:00:27,280 --> 00:00:35,710
my presentation about burials edifice

00:00:31,150 --> 00:00:37,600
and puppet and that's right my name is

00:00:35,710 --> 00:00:38,800
cousin dice like I said a little bit

00:00:37,600 --> 00:00:42,070
about myself

00:00:38,800 --> 00:00:45,430
well let me go search seven years old

00:00:42,070 --> 00:00:48,790
I'm currently a system administrator at

00:00:45,430 --> 00:00:50,800
Symbian knows more about my company or

00:00:48,790 --> 00:00:53,320
the company I work for a little bit

00:00:50,800 --> 00:00:58,000
later because I'm using the company with

00:00:53,320 --> 00:01:00,579
live data and later on in this speech so

00:00:58,000 --> 00:01:04,989
I did but more about myself I'm using

00:01:00,579 --> 00:01:08,950
Linux ever since 95 ish using a 1.3

00:01:04,989 --> 00:01:11,710
kernel and that's actually pretty bad if

00:01:08,950 --> 00:01:13,509
you know 1.3 there was no make menu

00:01:11,710 --> 00:01:15,039
convict or anything like that and you

00:01:13,509 --> 00:01:17,259
had to compile your own kernel that

00:01:15,039 --> 00:01:19,869
would take three hours give or take so

00:01:17,259 --> 00:01:23,560
that's the pain but you also learned a

00:01:19,869 --> 00:01:25,750
lot doing that and also Bakula and

00:01:23,560 --> 00:01:27,490
barriers and vague lists so to speak

00:01:25,750 --> 00:01:30,069
people call me that because pretty much

00:01:27,490 --> 00:01:32,649
all the companies I've worked so far I

00:01:30,069 --> 00:01:35,590
have converted or migrated to either of

00:01:32,649 --> 00:01:38,800
those software systems and backup

00:01:35,590 --> 00:01:40,959
systems or well took over or enhance

00:01:38,800 --> 00:01:44,349
their current set up which I already did

00:01:40,959 --> 00:01:47,380
with my current employee that is like I

00:01:44,349 --> 00:01:51,069
said some genious and on top of that I

00:01:47,380 --> 00:01:54,520
also have puppet automatization now the

00:01:51,069 --> 00:01:59,140
topic I'm going to address here puppets

00:01:54,520 --> 00:02:01,869
ZFS and barriers is rather large one so

00:01:59,140 --> 00:02:04,360
I'm assuming you guys all know barriers

00:02:01,869 --> 00:02:06,670
that is they can be reused and you know

00:02:04,360 --> 00:02:08,770
if I say barriers I'm of course mean

00:02:06,670 --> 00:02:11,380
Bakula and various you can switch them

00:02:08,770 --> 00:02:14,770
because the stuff I'm going to tell here

00:02:11,380 --> 00:02:18,549
is applicable to both software solutions

00:02:14,770 --> 00:02:20,860
and puppet of course is a rather large

00:02:18,549 --> 00:02:23,440
software suit itself

00:02:20,860 --> 00:02:25,380
so you guys know the back yo director

00:02:23,440 --> 00:02:28,270
you guys know what a storage device

00:02:25,380 --> 00:02:32,170
t---minus and you know what and where to

00:02:28,270 --> 00:02:34,450
install our FD so to speak so if you

00:02:32,170 --> 00:02:36,790
know that we can a little bit continue

00:02:34,450 --> 00:02:40,240
on we can continue on my agenda for

00:02:36,790 --> 00:02:43,300
today is I'll give you a small history

00:02:40,240 --> 00:02:45,070
of my the company I work for not about

00:02:43,300 --> 00:02:48,490
the country itself but rather the backup

00:02:45,070 --> 00:02:52,960
strategy we've used prior using Bakula

00:02:48,490 --> 00:02:54,790
and I'll give you a then the solution to

00:02:52,960 --> 00:02:58,540
the problems we occurred on the

00:02:54,790 --> 00:03:01,290
migration and of course the ZFS and what

00:02:58,540 --> 00:03:03,970
you can do with ZFS running on there and

00:03:01,290 --> 00:03:06,340
lastly if we have the time I'm going to

00:03:03,970 --> 00:03:10,870
skim over the puppet module that I've

00:03:06,340 --> 00:03:12,670
wrote for all this stuff and that's so

00:03:10,870 --> 00:03:14,860
much for the overview I'm going to tell

00:03:12,670 --> 00:03:16,600
you here if there's Vista Rock of course

00:03:14,860 --> 00:03:18,630
any questions interrupt me at any given

00:03:16,600 --> 00:03:22,240
time I'll try to address and answer them

00:03:18,630 --> 00:03:23,170
but of questions you have okay I promise

00:03:22,240 --> 00:03:25,980
on my part

00:03:23,170 --> 00:03:27,310
I'm going to do an easy listening

00:03:25,980 --> 00:03:30,100
presentation here

00:03:27,310 --> 00:03:32,590
I'm not going to swamp you with look at

00:03:30,100 --> 00:03:35,050
my code here or anything else no

00:03:32,590 --> 00:03:37,300
snippets whatsoever the reason is simple

00:03:35,050 --> 00:03:39,730
if you want to do anything I say here

00:03:37,300 --> 00:03:42,519
you can do that because the production

00:03:39,730 --> 00:03:44,739
rate ready code is available just for

00:03:42,519 --> 00:03:46,750
this presentation here on github you can

00:03:44,739 --> 00:03:48,580
download it install it and get it

00:03:46,750 --> 00:03:51,400
running there is a whole tool in there

00:03:48,580 --> 00:03:53,800
it is limited it is production ready and

00:03:51,400 --> 00:03:55,570
we are using this setup I'm also

00:03:53,800 --> 00:03:58,540
available for any questions you might

00:03:55,570 --> 00:04:02,290
have for implementation customization

00:03:58,540 --> 00:04:04,959
contact data are at the end so enjoy an

00:04:02,290 --> 00:04:06,730
easy listening write for details look at

00:04:04,959 --> 00:04:08,860
the code use it to yourself

00:04:06,730 --> 00:04:13,209
and implement the ideas I'm going to

00:04:08,860 --> 00:04:15,970
show you okay so my company unless my

00:04:13,209 --> 00:04:18,340
company I of course from home I mean the

00:04:15,970 --> 00:04:20,919
company I work for is some genius with

00:04:18,340 --> 00:04:23,890
the brand power net team we are a

00:04:20,919 --> 00:04:28,180
mid-sized hosting company so we do the

00:04:23,890 --> 00:04:29,229
usual that is we do a web hosting and if

00:04:28,180 --> 00:04:30,569
you know we're posting you know

00:04:29,229 --> 00:04:33,509
mail my ask

00:04:30,569 --> 00:04:35,669
later and the usual project hosting or

00:04:33,509 --> 00:04:39,179
housing if you get any of that

00:04:35,669 --> 00:04:41,999
well that's awesome pretty much and this

00:04:39,179 --> 00:04:43,529
of course sorry this of course means we

00:04:41,999 --> 00:04:46,409
have a lot of stuff to back up on a

00:04:43,529 --> 00:04:49,589
daily basis that changes a lot and by a

00:04:46,409 --> 00:04:52,289
lot mean for a midsize company we have a

00:04:49,589 --> 00:04:54,719
lot of files rapidly-changing files for

00:04:52,289 --> 00:04:57,179
example and to look at the scale here we

00:04:54,719 --> 00:05:00,119
have a several hundred of servers across

00:04:57,179 --> 00:05:02,849
two data centers and each of those

00:05:00,119 --> 00:05:06,209
servers have hundreds of customers eat

00:05:02,849 --> 00:05:08,490
some more solo some less but in average

00:05:06,209 --> 00:05:11,189
several hundred customers each and each

00:05:08,490 --> 00:05:12,959
of those customers each have roughly a

00:05:11,189 --> 00:05:15,749
thousand or more files and their home

00:05:12,959 --> 00:05:19,259
directories and we're employing the mail

00:05:15,749 --> 00:05:21,059
year so each email is a file and if you

00:05:19,259 --> 00:05:23,269
know spam you get a lot of emails and

00:05:21,059 --> 00:05:26,189
well that's a lot of stuff to backup and

00:05:23,269 --> 00:05:28,800
last but not least we have MySQL which

00:05:26,189 --> 00:05:31,979
needs to be backed up too so that's a

00:05:28,800 --> 00:05:34,740
lot of i/o load for the service you're

00:05:31,979 --> 00:05:37,709
going to backup as well as we are using

00:05:34,740 --> 00:05:39,180
virtualization so you have a lot of VMs

00:05:37,709 --> 00:05:41,339
that are backed up pretty much

00:05:39,180 --> 00:05:44,099
simultaneously or a little stripped

00:05:41,339 --> 00:05:48,479
outside for the backup routine so you

00:05:44,099 --> 00:05:51,300
don't well overload the hosts the

00:05:48,479 --> 00:05:54,119
overload the host system so the

00:05:51,300 --> 00:05:55,889
motivation because we switches well you

00:05:54,119 --> 00:05:57,959
understand which is where we come from

00:05:55,889 --> 00:06:00,779
we're coming from a time where there are

00:05:57,959 --> 00:06:03,719
no network backups will come prior to

00:06:00,779 --> 00:06:06,809
any production rate ready systems or at

00:06:03,719 --> 00:06:08,610
least they used to be because I wasn't

00:06:06,809 --> 00:06:11,399
at that company at the time but they

00:06:08,610 --> 00:06:14,459
actually did backup Wistar they used a

00:06:11,399 --> 00:06:17,610
tire slash pipe compression somewhere

00:06:14,459 --> 00:06:19,649
NFS share and save it and there you go

00:06:17,610 --> 00:06:21,180
that's a full backup the incrementals

00:06:19,649 --> 00:06:24,180
were actually made and I'm kidding you

00:06:21,180 --> 00:06:26,999
not doing a see time on a find and all

00:06:24,180 --> 00:06:28,829
of the file lists you can regenerate our

00:06:26,999 --> 00:06:32,129
files that have changed in the last 24

00:06:28,829 --> 00:06:34,619
hours you would type those into tar type

00:06:32,129 --> 00:06:37,099
that into a pv zip 2 or B zip or Jesus

00:06:34,619 --> 00:06:39,719
what have you and says that on NFS and

00:06:37,099 --> 00:06:41,459
that's a lot of load for the server for

00:06:39,719 --> 00:06:42,839
the client itself a client I mean of

00:06:41,459 --> 00:06:43,880
course these servers that are running

00:06:42,839 --> 00:06:46,820
the customers

00:06:43,880 --> 00:06:48,800
and think about the IO load that has

00:06:46,820 --> 00:06:50,750
that is occurring alone for the

00:06:48,800 --> 00:06:53,660
traversing of the directory tree for a

00:06:50,750 --> 00:06:57,050
lot of files a lot of years insane and

00:06:53,660 --> 00:06:59,690
of course the Edit load for the

00:06:57,050 --> 00:07:02,210
compression and transferring to a remote

00:06:59,690 --> 00:07:04,760
host we are NFS it took ages and of

00:07:02,210 --> 00:07:07,340
course it's not good on either side

00:07:04,760 --> 00:07:09,890
server side we used to employ three to

00:07:07,340 --> 00:07:12,950
four of those backup service the NFS

00:07:09,890 --> 00:07:15,050
servers and the the Lord was actually up

00:07:12,950 --> 00:07:16,280
on the roof but of course it's not

00:07:15,050 --> 00:07:20,660
renting it did its job

00:07:16,280 --> 00:07:22,070
it is job good for years and you know

00:07:20,660 --> 00:07:24,670
the down times are of course the

00:07:22,070 --> 00:07:27,740
compression were making client-side and

00:07:24,670 --> 00:07:30,140
that's actually evil enough more to that

00:07:27,740 --> 00:07:33,170
monitoring was a nightmare it was self

00:07:30,140 --> 00:07:35,930
Britain and it actually generated a

00:07:33,170 --> 00:07:37,490
giant HTML page and someone had to

00:07:35,930 --> 00:07:39,710
scroll through there look for all the

00:07:37,490 --> 00:07:41,360
red lines in there and a red line means

00:07:39,710 --> 00:07:42,140
this server hasn't been backed up but

00:07:41,360 --> 00:07:44,600
then what

00:07:42,140 --> 00:07:46,460
you can't run a failed backup that

00:07:44,600 --> 00:07:48,440
should run in the night during day time

00:07:46,460 --> 00:07:50,360
that's not possible the customers would

00:07:48,440 --> 00:07:52,220
would dial in and say hey my server is

00:07:50,360 --> 00:07:54,740
like crawling but what about good gifts

00:07:52,220 --> 00:07:56,710
so monitoring was ok it didn't work

00:07:54,740 --> 00:07:59,600
let's close that page and move on

00:07:56,710 --> 00:08:02,240
restoring well guess what you had a lot

00:07:59,600 --> 00:08:05,240
of fights a lot of tire fires and you

00:08:02,240 --> 00:08:06,950
had to get all these files through PPC

00:08:05,240 --> 00:08:09,620
or whatever you had a compression and

00:08:06,950 --> 00:08:12,740
the out stream you had two pipes from

00:08:09,620 --> 00:08:16,040
tar and there you can say ok extract

00:08:12,740 --> 00:08:18,950
like home some user file and only

00:08:16,040 --> 00:08:21,350
through going from all the backups Isles

00:08:18,950 --> 00:08:22,880
all and decompressing all the files you

00:08:21,350 --> 00:08:25,310
could actually say here I sorry I don't

00:08:22,880 --> 00:08:26,090
have your file there because there was

00:08:25,310 --> 00:08:28,280
no file list

00:08:26,090 --> 00:08:30,860
there's no catalog so restoring could

00:08:28,280 --> 00:08:32,950
take ages and it wasn't actually

00:08:30,860 --> 00:08:34,849
guaranteed class and a site know what

00:08:32,950 --> 00:08:37,070
deleted files weren't handled properly

00:08:34,849 --> 00:08:38,750
if there was a full backup there was if

00:08:37,070 --> 00:08:41,000
I in there and it was deleted in an

00:08:38,750 --> 00:08:42,979
incremental well it doesn't show up

00:08:41,000 --> 00:08:45,140
because there are no files in there we

00:08:42,979 --> 00:08:47,600
tried several tournaments there for a

00:08:45,140 --> 00:08:49,840
one Becca PC our snapshot option a

00:08:47,600 --> 00:08:51,290
fraught with service snapshots and

00:08:49,840 --> 00:08:53,320
Rebecca done

00:08:51,290 --> 00:08:55,570
no of course

00:08:53,320 --> 00:08:59,380
everything faith why did it fail the

00:08:55,570 --> 00:09:00,250
Bekaa pc approaches all are pretty much

00:08:59,380 --> 00:09:02,410
the same stuff

00:09:00,250 --> 00:09:04,959
it's an arcing that goes through the

00:09:02,410 --> 00:09:07,990
root directory and since everything to

00:09:04,959 --> 00:09:10,360
see Beca PC so ever okay that's easy

00:09:07,990 --> 00:09:11,889
enough but Beca PC on the server side

00:09:10,360 --> 00:09:14,920
uses heartless

00:09:11,889 --> 00:09:17,800
so on the first run it copies all the

00:09:14,920 --> 00:09:20,529
files and you have in there okay

00:09:17,800 --> 00:09:23,230
the second run it copies all the changed

00:09:20,529 --> 00:09:25,269
files and that's hard links to the full

00:09:23,230 --> 00:09:28,029
backup now that's a lot of I own the

00:09:25,269 --> 00:09:31,680
server but what is that the incrementals

00:09:28,029 --> 00:09:37,180
going on up to 10 2015 11 wanted are all

00:09:31,680 --> 00:09:39,519
the hard linked files for that and now

00:09:37,180 --> 00:09:42,370
the fun part begins if you actually

00:09:39,519 --> 00:09:45,579
delete a rotate our own system out of

00:09:42,370 --> 00:09:47,139
there that is incremental is now overdue

00:09:45,579 --> 00:09:49,000
and it gets we deleted it traverses

00:09:47,139 --> 00:09:51,040
through all the files on the file system

00:09:49,000 --> 00:09:53,709
looks for all the hard link target and

00:09:51,040 --> 00:09:56,380
unlinks that so actually the last night

00:09:53,709 --> 00:09:58,420
was says the backup job plus Lee delete

00:09:56,380 --> 00:10:01,300
job actually took longer than 24 hours

00:09:58,420 --> 00:10:03,670
on a very high-end hardware SSD back-end

00:10:01,300 --> 00:10:07,779
sorry it just piled up and it wasn't

00:10:03,670 --> 00:10:10,690
good the ZFS snapshot approach was we

00:10:07,779 --> 00:10:13,089
didn't do the our backup PC we did the

00:10:10,690 --> 00:10:16,120
our snapshot snapped the entire file

00:10:13,089 --> 00:10:18,790
system for that so we had daily

00:10:16,120 --> 00:10:21,069
snapshots we could CD in to copy the

00:10:18,790 --> 00:10:23,199
files out there but still dropping a set

00:10:21,069 --> 00:10:24,269
of a snapshot on there took ages so it

00:10:23,199 --> 00:10:26,529
wasn't good

00:10:24,269 --> 00:10:29,050
macular soft several of those issues

00:10:26,529 --> 00:10:31,269
right from the get-go that backups are

00:10:29,050 --> 00:10:34,029
blazing fast it's insane how it does it

00:10:31,269 --> 00:10:36,760
it does it it's has the lowest IO load

00:10:34,029 --> 00:10:39,040
on the service with all the systems and

00:10:36,760 --> 00:10:42,370
software solution we try it and of

00:10:39,040 --> 00:10:44,560
course it's also very elegant because on

00:10:42,370 --> 00:10:46,779
the server side you can configure it in

00:10:44,560 --> 00:10:47,589
a way that all the files are saved into

00:10:46,779 --> 00:10:50,079
a single volume

00:10:47,589 --> 00:10:52,120
create stuff and of course restoring is

00:10:50,079 --> 00:10:55,240
the place you pick on so every store and

00:10:52,120 --> 00:10:57,310
and off you go you got it it just works

00:10:55,240 --> 00:11:00,970
so but that's that's not a great case

00:10:57,310 --> 00:11:02,980
here so for info but also sorry mr.

00:11:00,970 --> 00:11:05,740
slide here but also like I said there's

00:11:02,980 --> 00:11:06,810
no cpu load on the on the client side

00:11:05,740 --> 00:11:08,730
here

00:11:06,810 --> 00:11:11,700
because we don't do compression later

00:11:08,730 --> 00:11:13,770
more that and due to that we can

00:11:11,700 --> 00:11:16,800
actually do a daytime backup that's

00:11:13,770 --> 00:11:19,320
great for oversea customers you can just

00:11:16,800 --> 00:11:21,390
do that and no one would complain my

00:11:19,320 --> 00:11:23,430
atoms are a little bit of a different

00:11:21,390 --> 00:11:25,860
beast because you can't just copy violet

00:11:23,430 --> 00:11:28,320
MySQL over to the backup server that

00:11:25,860 --> 00:11:31,950
would end up with invalid data at most

00:11:28,320 --> 00:11:34,980
but well we have scripts for that that

00:11:31,950 --> 00:11:37,920
actually dump them in the night so to

00:11:34,980 --> 00:11:38,339
speed it up a little bit we have at this

00:11:37,920 --> 00:11:39,960
point

00:11:38,339 --> 00:11:42,660
sort of the clients that issue with a

00:11:39,960 --> 00:11:45,510
standard Bakula and barriers set up so

00:11:42,660 --> 00:11:48,570
far it's pretty much standard but we

00:11:45,510 --> 00:11:51,089
need to solve the server-side issues now

00:11:48,570 --> 00:11:54,110
all the companies and institutions I've

00:11:51,089 --> 00:11:56,700
worked for so far have an very ideal and

00:11:54,110 --> 00:12:00,750
fine-tuned concept of backing up the

00:11:56,700 --> 00:12:02,730
client they have these tweaks system

00:12:00,750 --> 00:12:05,610
controls they have ever seen in place it

00:12:02,730 --> 00:12:08,250
works just awesome but the server side

00:12:05,610 --> 00:12:09,750
no one really cares unless you do tapes

00:12:08,250 --> 00:12:14,550
and I'm not entertained

00:12:09,750 --> 00:12:16,770
I'm more into files and they mostly just

00:12:14,550 --> 00:12:20,070
dump their files into an export file

00:12:16,770 --> 00:12:23,310
system or I've seen the wireless things

00:12:20,070 --> 00:12:25,410
they're great one softer array and but

00:12:23,310 --> 00:12:27,510
it works but you can do it better

00:12:25,410 --> 00:12:30,089
you know let's before we before we

00:12:27,510 --> 00:12:32,339
consider what's actually good let's have

00:12:30,089 --> 00:12:34,620
a look at what we need or what our

00:12:32,339 --> 00:12:36,870
company actually needed we need a action

00:12:34,620 --> 00:12:38,730
against any sort of hardware fails that

00:12:36,870 --> 00:12:41,070
is we want to protect against hard drive

00:12:38,730 --> 00:12:44,640
fails if a hard drive actually failed it

00:12:41,070 --> 00:12:47,070
should continue on and just replace the

00:12:44,640 --> 00:12:47,310
hard disk no downtime here and off you

00:12:47,070 --> 00:12:49,320
go

00:12:47,310 --> 00:12:51,030
we want protection against bit rot

00:12:49,320 --> 00:12:54,150
that's interesting for those guys that

00:12:51,030 --> 00:12:56,640
have to preserve data for a long long

00:12:54,150 --> 00:12:58,709
long time because all these stuff

00:12:56,640 --> 00:13:01,110
written on hard disk AM magnetised

00:12:58,709 --> 00:13:03,060
information and magnetized information

00:13:01,110 --> 00:13:05,279
after a while degenerate

00:13:03,060 --> 00:13:08,790
and once flipped to zero and everything

00:13:05,279 --> 00:13:10,890
will well corrupt so for that we need a

00:13:08,790 --> 00:13:13,290
bit rot protection after that stuff and

00:13:10,890 --> 00:13:15,690
of course like I said we want transfer

00:13:13,290 --> 00:13:17,700
and compression and for an extra because

00:13:15,690 --> 00:13:20,010
we are having customers here we want

00:13:17,700 --> 00:13:20,760
quotas we don't want hey you can use all

00:13:20,010 --> 00:13:22,290
this stuff

00:13:20,760 --> 00:13:25,170
all the space we have on this server

00:13:22,290 --> 00:13:27,540
just a limited water that you can buy

00:13:25,170 --> 00:13:29,340
from us or a rent from us or that's

00:13:27,540 --> 00:13:31,200
included in your contract what have you

00:13:29,340 --> 00:13:32,880
and off you go

00:13:31,200 --> 00:13:36,330
even over our own infrastructure servers

00:13:32,880 --> 00:13:39,090
have caught us because they can always

00:13:36,330 --> 00:13:40,620
go haywire backup requested backup

00:13:39,090 --> 00:13:43,170
something like there's the mount in

00:13:40,620 --> 00:13:47,520
there and from a remote NFS director and

00:13:43,170 --> 00:13:49,650
would backup that so to avoid killing

00:13:47,520 --> 00:13:51,240
the entire servers we have quotas per

00:13:49,650 --> 00:13:53,730
server but we won't chorus verse seven

00:13:51,240 --> 00:13:56,010
also and this is important we wanted to

00:13:53,730 --> 00:13:58,410
totally be hassle-free we wanted a

00:13:56,010 --> 00:14:02,160
one-time setup it says it should work

00:13:58,410 --> 00:14:04,740
and it should actually work on normal

00:14:02,160 --> 00:14:06,870
hardware that's affordable to all of us

00:14:04,740 --> 00:14:09,570
not only the top five percentage on

00:14:06,870 --> 00:14:11,910
there with high-end SAS what have you

00:14:09,570 --> 00:14:13,650
SSD backed and stuff but rather our

00:14:11,910 --> 00:14:15,450
system that's in the corner that's

00:14:13,650 --> 00:14:17,790
mainly dormant for a year or something

00:14:15,450 --> 00:14:19,800
like that back in some artists and off

00:14:17,790 --> 00:14:22,740
it goes and it's it should be trusted

00:14:19,800 --> 00:14:27,000
and hassle-free no all it's all that is

00:14:22,740 --> 00:14:30,300
12 is edifice of that okay and various

00:14:27,000 --> 00:14:33,360
and so let's let's have a quick look at

00:14:30,300 --> 00:14:36,330
the points at I said with the feature

00:14:33,360 --> 00:14:38,250
set of ZFS and one of those is of course

00:14:36,330 --> 00:14:40,350
protection against data corruption and

00:14:38,250 --> 00:14:42,870
continues checking you can be yourself

00:14:40,350 --> 00:14:45,630
this actually just means very much

00:14:42,870 --> 00:14:47,550
simple that it does check something a

00:14:45,630 --> 00:14:49,650
little bit tuned down it means the

00:14:47,550 --> 00:14:51,930
smallest amount of data stored on as

00:14:49,650 --> 00:14:54,840
edifice there's a tiny checksum bit on

00:14:51,930 --> 00:14:56,910
there now several of those checksums are

00:14:54,840 --> 00:14:59,460
again checksum on a higher level and

00:14:56,910 --> 00:15:01,470
again on a higher level and and so for

00:14:59,460 --> 00:15:03,750
up until the root node so you have a

00:15:01,470 --> 00:15:06,450
path of checksum you can traverse and

00:15:03,750 --> 00:15:10,190
calculate up to the data you need and if

00:15:06,450 --> 00:15:12,540
any part of that zero is an illegal

00:15:10,190 --> 00:15:14,460
checksum or a data is corrupt or sounds

00:15:12,540 --> 00:15:16,890
like you know that this part is not

00:15:14,460 --> 00:15:19,380
correct it has bit rot over ever hard

00:15:16,890 --> 00:15:22,170
disk failure or not and since we will be

00:15:19,380 --> 00:15:24,390
deploying a rate system or right light

00:15:22,170 --> 00:15:27,120
system you have another copy of the data

00:15:24,390 --> 00:15:30,090
you check the checksum tree there you'll

00:15:27,120 --> 00:15:32,070
notice ok this calculates right ok on

00:15:30,090 --> 00:15:33,780
top so you can copy the data file and

00:15:32,070 --> 00:15:34,410
the checksum information over to the

00:15:33,780 --> 00:15:36,990
faulty

00:15:34,410 --> 00:15:39,780
and off you go this actually combined

00:15:36,990 --> 00:15:41,700
with smarty checking eliminates a bit

00:15:39,780 --> 00:15:42,270
road corruption and it's actually pretty

00:15:41,700 --> 00:15:47,460
cool

00:15:42,270 --> 00:15:50,010
no I said great great like stuff the ZFS

00:15:47,460 --> 00:15:51,750
has read that read the two Reds at three

00:15:50,010 --> 00:15:54,990
and what have you so you can actually

00:15:51,750 --> 00:15:58,380
lose two or three hard disk and it will

00:15:54,990 --> 00:16:00,240
continue on you can check it like a

00:15:58,380 --> 00:16:03,210
write five alright that too is like a

00:16:00,240 --> 00:16:05,070
red fire fish and like straight six is

00:16:03,210 --> 00:16:07,890
like us that three and sometimes that

00:16:05,070 --> 00:16:10,050
not getting too technical here but this

00:16:07,890 --> 00:16:12,420
is pretty much the same stuff and the

00:16:10,050 --> 00:16:13,650
great and awesome thing here is that you

00:16:12,420 --> 00:16:17,160
don't need a rate controller actually

00:16:13,650 --> 00:16:19,260
they the guys from Z ever say don't use

00:16:17,160 --> 00:16:20,850
any sort of rate controller give us the

00:16:19,260 --> 00:16:23,070
pure hard disk and we'll manage

00:16:20,850 --> 00:16:24,900
and go from there so you were free of

00:16:23,070 --> 00:16:25,980
rate controller hassle if a rate

00:16:24,900 --> 00:16:27,720
controller if you set up a rate

00:16:25,980 --> 00:16:30,060
controller and the rate controller dies

00:16:27,720 --> 00:16:32,340
you are still bound to that manufacturer

00:16:30,060 --> 00:16:33,990
because try to get a rate up and running

00:16:32,340 --> 00:16:36,300
from a different manufacturer three

00:16:33,990 --> 00:16:39,780
women for example and get it running on

00:16:36,300 --> 00:16:42,480
an elliptic good luck with that stuff it

00:16:39,780 --> 00:16:46,500
works you just yank out your your disc

00:16:42,480 --> 00:16:49,170
put it in some whatever you have no data

00:16:46,500 --> 00:16:52,080
control only USB you you could continue

00:16:49,170 --> 00:16:56,280
to get it to work and so that's actually

00:16:52,080 --> 00:16:58,110
working now I only mentioned this on a

00:16:56,280 --> 00:17:00,630
side note it has very very large

00:16:58,110 --> 00:17:02,610
capacities so you can scale all you want

00:17:00,630 --> 00:17:07,589
no one here we ever reach this zettabyte

00:17:02,610 --> 00:17:10,470
file system and so it's Zetas but file

00:17:07,589 --> 00:17:12,480
system good luck I said and we also

00:17:10,470 --> 00:17:15,600
employ or use the efficient data

00:17:12,480 --> 00:17:18,120
compression no it does what several type

00:17:15,600 --> 00:17:19,829
of compression from gzip one to geez you

00:17:18,120 --> 00:17:21,780
know I and what-have-you there's one

00:17:19,829 --> 00:17:24,660
very cool one that's actually very fast

00:17:21,780 --> 00:17:27,150
and you can look it up in the code if

00:17:24,660 --> 00:17:29,160
you want but that is really really

00:17:27,150 --> 00:17:31,200
really fast I'm going to show you the

00:17:29,160 --> 00:17:34,410
benchmarking or some benchmark results

00:17:31,200 --> 00:17:38,880
later on but this is really really cool

00:17:34,410 --> 00:17:41,760
and you can also do a complete snapshot

00:17:38,880 --> 00:17:43,950
on the fly on this server so you can do

00:17:41,760 --> 00:17:45,300
your testing something out your locking

00:17:43,950 --> 00:17:47,169
onto your server your backup server use

00:17:45,300 --> 00:17:49,570
your the USD and

00:17:47,169 --> 00:17:53,289
you want to do some wire things there

00:17:49,570 --> 00:17:55,029
you can say ZFS snapshot and it's

00:17:53,289 --> 00:17:57,639
snapshot you can always revert back to

00:17:55,029 --> 00:18:00,489
that state it's actually not big of a

00:17:57,639 --> 00:18:03,190
use in my use case and with the puppet

00:18:00,489 --> 00:18:04,450
code but it could all my possibilities

00:18:03,190 --> 00:18:06,970
that I'm not seeing

00:18:04,450 --> 00:18:09,519
still it's there for example if you do

00:18:06,970 --> 00:18:12,039
our snapshot to a snapshot a real set of

00:18:09,519 --> 00:18:15,460
has never do an arsenal and so on so it

00:18:12,039 --> 00:18:18,009
actually just work and a great thing

00:18:15,460 --> 00:18:19,960
also is that ZFS is freely available and

00:18:18,009 --> 00:18:22,600
already included in most current

00:18:19,960 --> 00:18:25,090
distributions if you get in Ubuntu okay

00:18:22,600 --> 00:18:28,960
who runs a several a Ubuntu but the

00:18:25,090 --> 00:18:31,779
possibility is there and 1604 up ZFS is

00:18:28,960 --> 00:18:34,509
in there just install it and off you go

00:18:31,779 --> 00:18:36,820
it's also available in default in future

00:18:34,509 --> 00:18:39,909
Debian releases install and off you go

00:18:36,820 --> 00:18:44,919
and for all the rest like CentOS 7 and 6

00:18:39,909 --> 00:18:46,779
and you're mostly error of choice is you

00:18:44,919 --> 00:18:49,179
can donate a distribution we are ZFS on

00:18:46,779 --> 00:18:52,419
linux support its repositories for your

00:18:49,179 --> 00:18:56,440
favorite OS you just install and off you

00:18:52,419 --> 00:18:58,960
go and last but not least a ZFS is so

00:18:56,440 --> 00:19:00,129
popular it also is being used by for

00:18:58,960 --> 00:19:03,549
example FreeNAS ok

00:19:00,129 --> 00:19:05,710
Rinas is used freebsd as a base but

00:19:03,549 --> 00:19:08,350
still if you use the Serena's the

00:19:05,710 --> 00:19:10,059
storage appliance I'll suggest you do

00:19:08,350 --> 00:19:12,460
have a look at it it's really great it's

00:19:10,059 --> 00:19:15,519
using ZFS at its main backup storage

00:19:12,460 --> 00:19:17,320
it's really fast it's blazingly fast get

00:19:15,519 --> 00:19:18,759
a ProLiant microserver and you have a

00:19:17,320 --> 00:19:22,929
very goodness for a very cheap price

00:19:18,759 --> 00:19:25,269
know if you really want to install these

00:19:22,929 --> 00:19:28,090
FS it's a matter of like in place that

00:19:25,269 --> 00:19:31,179
you install the package you do a yum

00:19:28,090 --> 00:19:32,249
install edifice or apt-get install

00:19:31,179 --> 00:19:34,659
edifice

00:19:32,249 --> 00:19:36,850
installs kernel by default or some

00:19:34,659 --> 00:19:38,830
kernel sources by default reboot once to

00:19:36,850 --> 00:19:40,359
get the kernel modules up and running

00:19:38,830 --> 00:19:43,299
you can do a mod prop but it's

00:19:40,359 --> 00:19:46,330
recommended to reboot not for me but

00:19:43,299 --> 00:19:48,399
from the ZFS developers and there you go

00:19:46,330 --> 00:19:50,470
you've got the service working already

00:19:48,399 --> 00:19:53,070
and you can work from the errors that we

00:19:50,470 --> 00:19:54,609
create and you got a working that will

00:19:53,070 --> 00:19:56,710
to get going

00:19:54,609 --> 00:19:59,080
those these two commands here actually

00:19:56,710 --> 00:20:00,790
all you need to get it up and running no

00:19:59,080 --> 00:20:03,100
so if you have

00:20:00,790 --> 00:20:05,380
working Boreas director a server

00:20:03,100 --> 00:20:07,870
actually serve it a part and you want to

00:20:05,380 --> 00:20:11,740
convert this is as easy as that

00:20:07,870 --> 00:20:13,660
okay so a live example from us is we

00:20:11,740 --> 00:20:15,730
have this very fought this very odd

00:20:13,660 --> 00:20:18,250
machine actually lying in a data center

00:20:15,730 --> 00:20:22,150
it was turned off and dormant for some

00:20:18,250 --> 00:20:25,060
time it's very low end it has 2.5

00:20:22,150 --> 00:20:27,730
gigahertz with a single 8 core there's

00:20:25,060 --> 00:20:31,120
not 16 logical cores it's really 8 cores

00:20:27,730 --> 00:20:33,400
in total in top so there is a really CPU

00:20:31,120 --> 00:20:37,210
bottleneck it was used by myself as a

00:20:33,400 --> 00:20:39,580
testing setup for my various puppet

00:20:37,210 --> 00:20:41,230
module with Rosetta Fez stuff I wanted

00:20:39,580 --> 00:20:43,030
to check if it actually works and we

00:20:41,230 --> 00:20:45,610
wanted to buy a bigger machine for that

00:20:43,030 --> 00:20:48,850
but turns out I didn't need it actually

00:20:45,610 --> 00:20:51,280
is totally sufficient we have a 32 gig

00:20:48,850 --> 00:20:53,860
of memory which was already in there we

00:20:51,280 --> 00:20:56,980
can use a lot less at least 8 mix gigs

00:20:53,860 --> 00:21:00,040
is recommended 16 also hey the more the

00:20:56,980 --> 00:21:01,660
merrier so be sure it's easy serum

00:21:00,040 --> 00:21:05,560
because you can need to protect your

00:21:01,660 --> 00:21:08,050
data for bit flips in there because that

00:21:05,560 --> 00:21:12,090
can corrupt an entire ZFS pool look it

00:21:08,050 --> 00:21:15,520
up ECC with ZFS it's a must-have ok and

00:21:12,090 --> 00:21:20,350
last one is the system is installed on

00:21:15,520 --> 00:21:22,810
an SSD drive so the my SQL data for our

00:21:20,350 --> 00:21:27,900
director which is also run on the starch

00:21:22,810 --> 00:21:30,880
device server it's to twofold server is

00:21:27,900 --> 00:21:33,700
running from an SSD because our MySQL

00:21:30,880 --> 00:21:35,650
data has reached our nearly 300

00:21:33,700 --> 00:21:38,320
gigabytes and Counting due to the high

00:21:35,650 --> 00:21:41,530
file count we have in there and writing

00:21:38,320 --> 00:21:43,690
and reading the SQL data files really is

00:21:41,530 --> 00:21:45,310
a bliss if you have an SSD drive it cuts

00:21:43,690 --> 00:21:47,620
the backup time in half that was

00:21:45,310 --> 00:21:51,640
actually bottleneck no more is but still

00:21:47,620 --> 00:21:52,300
and I'm we have employed 22 times for

00:21:51,640 --> 00:21:54,430
terabytes

00:21:52,300 --> 00:21:56,740
Western Digital Reds now this is not an

00:21:54,430 --> 00:21:59,500
advertising and just stating we using

00:21:56,740 --> 00:22:01,930
these cheap-ass disks here consume a

00:21:59,500 --> 00:22:04,930
great disk for production environment

00:22:01,930 --> 00:22:06,910
because it just works you can you can

00:22:04,930 --> 00:22:10,450
use it you stick it in there they are

00:22:06,910 --> 00:22:13,570
slow-moving they're like 5 or 7 K they

00:22:10,450 --> 00:22:14,230
have a tiny tiny cache on there but it's

00:22:13,570 --> 00:22:17,260
exact

00:22:14,230 --> 00:22:19,360
what ZFS need tiny stupid drives that

00:22:17,260 --> 00:22:21,670
are actually not very fast tons of them

00:22:19,360 --> 00:22:24,700
if you want and bam there you go

00:22:21,670 --> 00:22:26,110
I also have a one gigabit of a network

00:22:24,700 --> 00:22:27,880
connection in there no that doesn't

00:22:26,110 --> 00:22:32,730
sound much like I said it's a test setup

00:22:27,880 --> 00:22:35,200
it was no with this setup here I can do

00:22:32,730 --> 00:22:38,580
35 for servers backing up simultaneously

00:22:35,200 --> 00:22:47,020
on this thing no really

00:22:38,580 --> 00:22:50,770
yes we have a host bus adapter that's I

00:22:47,020 --> 00:22:53,200
think a 22 and there's six device so we

00:22:50,770 --> 00:22:54,910
have two expansion cards that actually

00:22:53,200 --> 00:22:56,950
just passes these data drives right

00:22:54,910 --> 00:23:00,670
through the New York system we have def

00:22:56,950 --> 00:23:03,760
SDH to Def as the L and I don't know

00:23:00,670 --> 00:23:06,420
rather a large count there but it is

00:23:03,760 --> 00:23:09,070
working yes please

00:23:06,420 --> 00:23:12,010
we are currently employing CentOS but

00:23:09,070 --> 00:23:16,540
don't be afraid the puppet code can do

00:23:12,010 --> 00:23:19,000
debian and Santos and I have integrated

00:23:16,540 --> 00:23:20,590
my own personal home PC for the for Beca

00:23:19,000 --> 00:23:22,300
purposes only and it took me a mere

00:23:20,590 --> 00:23:23,950
three minutes to get a new horas in

00:23:22,300 --> 00:23:27,180
there if you fail don't need another

00:23:23,950 --> 00:23:31,480
just contact me I'll get it done okay so

00:23:27,180 --> 00:23:33,940
the CPU and next our CPU and Nick are

00:23:31,480 --> 00:23:35,680
max during the night time that is those

00:23:33,940 --> 00:23:39,150
two are actually the bottleneck here and

00:23:35,680 --> 00:23:42,720
we can do a better sorcerer if I serve a

00:23:39,150 --> 00:23:45,100
simultaneously it's it's a matter of

00:23:42,720 --> 00:23:47,140
concurrent jobs in the director it's the

00:23:45,100 --> 00:23:49,120
only limit we have employed in the

00:23:47,140 --> 00:23:52,750
entire setup and it works like a bliss

00:23:49,120 --> 00:23:53,080
and with the cheap server setup I shown

00:23:52,750 --> 00:23:55,780
you

00:23:53,080 --> 00:23:57,910
that's a 900 minute of compressed state

00:23:55,780 --> 00:24:00,580
are not keep in mind those 900 in bed

00:23:57,910 --> 00:24:02,590
are consisting out of very small files

00:24:00,580 --> 00:24:05,320
tiny tiny files many fighters them

00:24:02,590 --> 00:24:07,150
shovin directly an uncompressed to the

00:24:05,320 --> 00:24:09,670
server which does transparent

00:24:07,150 --> 00:24:13,240
compressing as well as rate shaking as

00:24:09,670 --> 00:24:16,840
well as the CRC for the ZFS and a lot

00:24:13,240 --> 00:24:18,760
more and there you go and eight course

00:24:16,840 --> 00:24:21,640
you can and this is the beauty of it

00:24:18,760 --> 00:24:25,270
scale it to boots you can have of course

00:24:21,640 --> 00:24:26,710
a bigger CPU band to put in another Nick

00:24:25,270 --> 00:24:28,780
in there another network device

00:24:26,710 --> 00:24:30,640
welcome together with a big bond device

00:24:28,780 --> 00:24:32,920
have a switch that can do that and off

00:24:30,640 --> 00:24:36,370
you go you have a lot more firepower and

00:24:32,920 --> 00:24:38,440
not only that increase the start

00:24:36,370 --> 00:24:41,230
director count by to have two of those

00:24:38,440 --> 00:24:43,630
three whatever it scales and it's it's

00:24:41,230 --> 00:24:45,570
like medium scale hardware it's not

00:24:43,630 --> 00:24:47,770
high-end its eighth course come on

00:24:45,570 --> 00:24:49,180
okay should I have a look at the load

00:24:47,770 --> 00:24:51,910
average this is an itching a graph from

00:24:49,180 --> 00:24:55,810
a random day and you see is this 8:00

00:24:51,910 --> 00:24:57,940
p.m. and at 8:00 p.m. we do my SQL data

00:24:55,810 --> 00:25:00,760
dump from the director we want to backup

00:24:57,940 --> 00:25:02,530
the volume is quit with MySQL type its

00:25:00,760 --> 00:25:04,300
through busy too this explains the high

00:25:02,530 --> 00:25:08,350
load here and it's finished at around

00:25:04,300 --> 00:25:11,740
nine ish I guess and this is so we can

00:25:08,350 --> 00:25:13,900
restore the entire thing with a import

00:25:11,740 --> 00:25:15,970
of the MySQL data and we are up and

00:25:13,900 --> 00:25:18,310
running again the entire set up like I

00:25:15,970 --> 00:25:22,060
said here with puppet is completely

00:25:18,310 --> 00:25:24,490
disaster protected given that you save

00:25:22,060 --> 00:25:26,350
the of course data files for your

00:25:24,490 --> 00:25:28,750
clients as well as the bootstrap for

00:25:26,350 --> 00:25:31,060
it's somewhere the rest comes from

00:25:28,750 --> 00:25:35,260
puppet and it regenerates everything

00:25:31,060 --> 00:25:37,090
like well perfectly and I did it several

00:25:35,260 --> 00:25:40,750
times I reinstalled it two times this

00:25:37,090 --> 00:25:43,810
year for upgrades one we switched on

00:25:40,750 --> 00:25:47,170
CentOS X 6 to 7 to 7 and I just

00:25:43,810 --> 00:25:49,990
installed it a new copied the switch DVD

00:25:47,170 --> 00:25:53,050
drives around to the new chases and let

00:25:49,990 --> 00:25:55,090
Bakula run puppet run sorry and Bakula

00:25:53,050 --> 00:25:57,220
run off like nothing actually ever

00:25:55,090 --> 00:25:59,290
happened now this is the start of the

00:25:57,220 --> 00:26:01,540
backup we start at midnight and finish

00:25:59,290 --> 00:26:04,900
at around 6 a.m. mission and you see

00:26:01,540 --> 00:26:08,590
this line here it's a lot of 1.0 so all

00:26:04,900 --> 00:26:11,110
cores are maxed but not over utilized so

00:26:08,590 --> 00:26:15,640
just scale it if you want to you can do

00:26:11,110 --> 00:26:20,740
6070 whatever with cheap systems you

00:26:15,640 --> 00:26:23,500
know I am actually doing one quota or

00:26:20,740 --> 00:26:25,720
one data set per server that is I have

00:26:23,500 --> 00:26:28,000
three servers for example and each

00:26:25,720 --> 00:26:31,030
server gets its own set of has data set

00:26:28,000 --> 00:26:33,070
it's an own file system and only Italian

00:26:31,030 --> 00:26:35,140
is same but you can you can see it as a

00:26:33,070 --> 00:26:37,370
own file system for example this server

00:26:35,140 --> 00:26:41,210
or D 125

00:26:37,370 --> 00:26:41,750
actually on Bakula storage and there you

00:26:41,210 --> 00:26:45,440
have it

00:26:41,750 --> 00:26:45,980
it's fqdn it's the folder name and in

00:26:45,440 --> 00:26:48,110
there

00:26:45,980 --> 00:26:50,330
I didn't TF disk use it you see the

00:26:48,110 --> 00:26:52,610
quarter of four terabytes one terabyte

00:26:50,330 --> 00:26:54,590
is probably used and three terabytes are

00:26:52,610 --> 00:26:57,350
free okay that's not actually big news

00:26:54,590 --> 00:26:59,390
but that's the setup I'm applying with

00:26:57,350 --> 00:27:02,090
hundreds of hundreds of servers and it's

00:26:59,390 --> 00:27:03,980
working perfectly especially if you need

00:27:02,090 --> 00:27:06,620
to delete a server you just wipe the

00:27:03,980 --> 00:27:10,160
entire directory clean and no trace are

00:27:06,620 --> 00:27:14,600
left behind no inside of a directory you

00:27:10,160 --> 00:27:17,780
see the files I'm doing a one file per

00:27:14,600 --> 00:27:21,410
volume a one job per volume and every

00:27:17,780 --> 00:27:23,809
server has its own three pools and also

00:27:21,410 --> 00:27:25,640
has its own full differential and

00:27:23,809 --> 00:27:27,980
incremental and you can see here I

00:27:25,640 --> 00:27:30,110
marked it red I hope you can see it the

00:27:27,980 --> 00:27:32,570
colors aren't exactly perfect here you

00:27:30,110 --> 00:27:34,940
need these files to restore the most

00:27:32,570 --> 00:27:36,800
recent backup for this server the rest

00:27:34,940 --> 00:27:39,440
well they are there if you need another

00:27:36,800 --> 00:27:43,700
times them but those files are actually

00:27:39,440 --> 00:27:45,770
there and written and you can pass

00:27:43,700 --> 00:27:47,540
through them look at them if you need to

00:27:45,770 --> 00:27:49,160
like and you can I wipe them I have a

00:27:47,540 --> 00:27:51,400
script that traverses all the trees

00:27:49,160 --> 00:27:53,870
checks in my SQL data files if this

00:27:51,400 --> 00:27:56,870
volume is actually in the database from

00:27:53,870 --> 00:27:59,720
Bakula checks if there's a job for this

00:27:56,870 --> 00:28:01,370
device if not and it's maybe unknown or

00:27:59,720 --> 00:28:03,410
expired it actually deletes that stuff

00:28:01,370 --> 00:28:05,840
and off you go you even have a cleanup

00:28:03,410 --> 00:28:07,550
of your hard disk no asset compression

00:28:05,840 --> 00:28:09,590
you know and it turned it on and you can

00:28:07,550 --> 00:28:11,570
see here for those four randomly

00:28:09,590 --> 00:28:13,850
selected servers that the compression is

00:28:11,570 --> 00:28:16,910
actually quite good it's two times on

00:28:13,850 --> 00:28:18,470
this server so compression works good

00:28:16,910 --> 00:28:20,420
and you can actually increase it by

00:28:18,470 --> 00:28:22,429
yanking and cranking up the compression

00:28:20,420 --> 00:28:24,380
algorithm employed with the ZFS stuff

00:28:22,429 --> 00:28:27,140
with one single command I suggest you

00:28:24,380 --> 00:28:29,450
don't do that because the gain from a

00:28:27,140 --> 00:28:31,190
higher compression ratio is really

00:28:29,450 --> 00:28:34,870
really tiny compared to the amount of

00:28:31,190 --> 00:28:36,830
CPU power you had to push in there okay

00:28:34,870 --> 00:28:39,110
regarding the compression ratio you can

00:28:36,830 --> 00:28:41,420
see for these two again randomly

00:28:39,110 --> 00:28:45,440
selected files that you save around 30

00:28:41,420 --> 00:28:48,020
percent of your net written stuff that's

00:28:45,440 --> 00:28:51,020
good 30 percent safe or actually pretty

00:28:48,020 --> 00:28:53,150
much no cost or no extra hardware

00:28:51,020 --> 00:28:55,100
let's take that and if you consider how

00:28:53,150 --> 00:28:59,060
many terabytes you have certainly

00:28:55,100 --> 00:29:01,160
percent it's quite nice to have and on a

00:28:59,060 --> 00:29:02,840
side note if you want to do this date

00:29:01,160 --> 00:29:05,510
application instead of s does not work

00:29:02,840 --> 00:29:08,150
even if you have identical servers a lot

00:29:05,510 --> 00:29:09,980
of identical servers the volumes that

00:29:08,150 --> 00:29:11,780
are written on the storage server are

00:29:09,980 --> 00:29:13,850
different because there might be one

00:29:11,780 --> 00:29:16,160
tiny file in there that squeezes the

00:29:13,850 --> 00:29:19,280
volume up a little bit and the entire

00:29:16,160 --> 00:29:22,850
volume is deduplicated on these FS so

00:29:19,280 --> 00:29:25,670
even on a dental service the volumes are

00:29:22,850 --> 00:29:27,260
not but you use up a lot of memory and

00:29:25,670 --> 00:29:29,150
I'm talking a lot of memory so

00:29:27,260 --> 00:29:34,850
deduplication does not work do not

00:29:29,150 --> 00:29:47,050
attempt this do you have a question yes

00:29:34,850 --> 00:29:47,050
of course no yeah we tried it in

00:29:49,060 --> 00:29:53,330
entirely we tried the same we actually

00:29:51,800 --> 00:29:56,720
turned on deduplication for several

00:29:53,330 --> 00:29:58,490
service didn't work really no it's just

00:29:56,720 --> 00:29:59,810
a in theory yeah of course but I'm

00:29:58,490 --> 00:30:01,130
talking practice with stuffier for

00:29:59,810 --> 00:30:03,470
practical systems you want to get out

00:30:01,130 --> 00:30:05,270
there you do your job and in theory you

00:30:03,470 --> 00:30:07,520
can save doesn't really help you in your

00:30:05,270 --> 00:30:10,670
field because in theory doesn't save so

00:30:07,520 --> 00:30:12,770
some up ZFS gives you the ability to not

00:30:10,670 --> 00:30:14,750
use anymore rate control a certain way

00:30:12,770 --> 00:30:17,930
that's the waste okay

00:30:14,750 --> 00:30:19,250
and it's even slower plus you are no

00:30:17,930 --> 00:30:21,830
longer bound to a rate controller in

00:30:19,250 --> 00:30:23,570
there you have a working defense against

00:30:21,830 --> 00:30:26,180
bit rot you have a defense against

00:30:23,570 --> 00:30:28,280
private asterisks because if there is a

00:30:26,180 --> 00:30:31,250
pipe burst in your data center you lose

00:30:28,280 --> 00:30:33,140
the server like we learned okay and of

00:30:31,250 --> 00:30:35,600
course compression is done on the server

00:30:33,140 --> 00:30:37,820
side like I said and quotas like I shown

00:30:35,600 --> 00:30:40,570
you are also possible and all this I

00:30:37,820 --> 00:30:43,250
shown you is done without a single hack

00:30:40,570 --> 00:30:45,410
additional script or whatever

00:30:43,250 --> 00:30:47,120
it works out of the box and you can do

00:30:45,410 --> 00:30:48,770
it with your stuff without me giving you

00:30:47,120 --> 00:30:51,290
any single line of code I will of course

00:30:48,770 --> 00:30:54,410
so you know how to do this but it

00:30:51,290 --> 00:30:55,790
actually works like this okay so this

00:30:54,410 --> 00:30:59,090
actually I'm looking at the time

00:30:55,790 --> 00:31:01,310
concludes the ZFS part for for this and

00:30:59,090 --> 00:31:02,820
we're now moving on to the puppet part

00:31:01,310 --> 00:31:05,190
okay

00:31:02,820 --> 00:31:08,220
the puppet part for who doesn't know

00:31:05,190 --> 00:31:10,880
what puppet is honestly come on everyone

00:31:08,220 --> 00:31:13,620
knows ok one hand is no puppet is a

00:31:10,880 --> 00:31:16,230
configuration utility so you you tell

00:31:13,620 --> 00:31:17,280
the puppet server ok I want these

00:31:16,230 --> 00:31:19,710
packages installed

00:31:17,280 --> 00:31:22,710
I want these configurations like this

00:31:19,710 --> 00:31:25,200
and do I don't know this mode on this

00:31:22,710 --> 00:31:27,480
directory like so you could define a

00:31:25,200 --> 00:31:30,780
final stage of your server like you

00:31:27,480 --> 00:31:32,820
wanted and it enforces that in regards

00:31:30,780 --> 00:31:35,370
of whatever you want and whatever you

00:31:32,820 --> 00:31:38,460
have it just works so in order to

00:31:35,370 --> 00:31:41,070
actually it it's able to do that you

00:31:38,460 --> 00:31:43,500
need to have a module like puppet module

00:31:41,070 --> 00:31:45,690
so you can do whatever you want inside

00:31:43,500 --> 00:31:48,330
and that module but mostly you want of

00:31:45,690 --> 00:31:51,120
course a backing up server ok small

00:31:48,330 --> 00:31:53,040
inter interaction year but a puppet

00:31:51,120 --> 00:31:55,560
module or my puppet module that I've

00:31:53,040 --> 00:31:57,840
wrote is of course similar to most of

00:31:55,560 --> 00:32:00,780
most of the power modules out there of

00:31:57,840 --> 00:32:02,880
course it does backups of course it

00:32:00,780 --> 00:32:05,220
configures the director the storage and

00:32:02,880 --> 00:32:08,220
the clients ok so if you install it it

00:32:05,220 --> 00:32:09,930
will do all this stuff I'm only showing

00:32:08,220 --> 00:32:12,240
you the stuff that I'm doing different

00:32:09,930 --> 00:32:17,220
or on top of the normal modules that you

00:32:12,240 --> 00:32:21,720
will most likely guess it does so my

00:32:17,220 --> 00:32:24,990
module like I said just usual ok what I

00:32:21,720 --> 00:32:27,060
just said let's give that and I want to

00:32:24,990 --> 00:32:29,430
do different this may be different is I

00:32:27,060 --> 00:32:34,380
do they're independent pools for all the

00:32:29,430 --> 00:32:37,620
servers so you have pools x server x 3

00:32:34,380 --> 00:32:39,780
like you have 100 servers each server

00:32:37,620 --> 00:32:42,630
gets reports so you have 300 poets in

00:32:39,780 --> 00:32:44,880
there and it's actually large amount but

00:32:42,630 --> 00:32:46,770
it works and it works very cool because

00:32:44,880 --> 00:32:49,740
you can if you have a test server you

00:32:46,770 --> 00:32:51,840
can delete or drop a pool and it's it's

00:32:49,740 --> 00:32:53,880
going you can start on fresh just an

00:32:51,840 --> 00:32:56,400
example of what you could do and of

00:32:53,880 --> 00:33:00,630
course all these files are based in its

00:32:56,400 --> 00:33:03,590
own ZFS data set so if you don't need it

00:33:00,630 --> 00:33:06,000
anymore you can destroy that stuff and

00:33:03,590 --> 00:33:08,310
each server that you configure with

00:33:06,000 --> 00:33:11,010
puppet of course has limited be console

00:33:08,310 --> 00:33:12,930
shell access so if you haven't used acs

00:33:11,010 --> 00:33:15,720
before you pretty much will know because

00:33:12,930 --> 00:33:16,470
if you do a type b console on any given

00:33:15,720 --> 00:33:18,929
customer

00:33:16,470 --> 00:33:22,289
server that be console can restore

00:33:18,929 --> 00:33:24,390
backup and do all the things related to

00:33:22,289 --> 00:33:25,950
this server you cannot restore fight

00:33:24,390 --> 00:33:27,870
some run server to this server you're

00:33:25,950 --> 00:33:30,809
connected to or vice versa but you can

00:33:27,870 --> 00:33:32,880
run backup jobs for the same server or

00:33:30,809 --> 00:33:36,080
restore the fight for the same server

00:33:32,880 --> 00:33:38,520
you can you are in your own little

00:33:36,080 --> 00:33:41,039
shielded environment so to speak

00:33:38,520 --> 00:33:42,630
you can't disable this at all if you

00:33:41,039 --> 00:33:44,640
don't want your customers to have access

00:33:42,630 --> 00:33:47,640
to be console even the limited ones you

00:33:44,640 --> 00:33:50,669
can can disable that we are here oh you

00:33:47,640 --> 00:33:53,940
just sent a set of simple variable and

00:33:50,669 --> 00:33:57,720
it's gone and it's also documented how

00:33:53,940 --> 00:34:01,020
you will do with that and second we all

00:33:57,720 --> 00:34:02,940
each server has its own device so we can

00:34:01,020 --> 00:34:05,549
actually mount several volumes

00:34:02,940 --> 00:34:08,490
simultaneously from several pools and do

00:34:05,549 --> 00:34:10,349
the simultaneous 35 and more service in

00:34:08,490 --> 00:34:12,869
any given time it's a workaround but

00:34:10,349 --> 00:34:15,840
it's actually great now lastly it's

00:34:12,869 --> 00:34:18,869
fully monitored by H fingernails I want

00:34:15,840 --> 00:34:21,210
my backup system to be totally silent

00:34:18,869 --> 00:34:22,260
I won't install it once today I never

00:34:21,210 --> 00:34:25,440
hear from it again

00:34:22,260 --> 00:34:26,369
and I want it that way that if I don't

00:34:25,440 --> 00:34:29,040
from here from it again

00:34:26,369 --> 00:34:32,099
I know it's running if it's failed to

00:34:29,040 --> 00:34:34,290
run or doesn't report it should raise an

00:34:32,099 --> 00:34:36,419
alarm and I know about it it should come

00:34:34,290 --> 00:34:39,000
to me not a visor other way around it

00:34:36,419 --> 00:34:41,760
should work for all servers and all

00:34:39,000 --> 00:34:44,700
configurations if it doesn't alarm me

00:34:41,760 --> 00:34:46,830
alert me not the other way around and of

00:34:44,700 --> 00:34:49,830
course we wanted a fully automated

00:34:46,830 --> 00:34:52,409
system if I edit a new server it's a

00:34:49,830 --> 00:34:54,899
matter of signing the puppet certificate

00:34:52,409 --> 00:34:57,149
and never hear from it again it's so

00:34:54,899 --> 00:34:59,640
install the repository is very current

00:34:57,149 --> 00:35:01,920
Boreas installation which is also

00:34:59,640 --> 00:35:05,700
configurable we are the hero puppet in

00:35:01,920 --> 00:35:07,589
fact you can install the configuration

00:35:05,700 --> 00:35:08,849
and whatever you have plus and this is

00:35:07,589 --> 00:35:12,330
important we want a non-destructive

00:35:08,849 --> 00:35:14,790
installation then what is that sent us

00:35:12,330 --> 00:35:18,000
for example head header back hat is in

00:35:14,790 --> 00:35:20,490
past tense that the ZFS module does not

00:35:18,000 --> 00:35:22,470
get recompiled if a new kernel got

00:35:20,490 --> 00:35:24,750
installed so you type in your update it

00:35:22,470 --> 00:35:27,780
says hey I got a new car sure install it

00:35:24,750 --> 00:35:29,710
reboot it and your pool is gone not

00:35:27,780 --> 00:35:31,839
destructive gone it's not it's still

00:35:29,710 --> 00:35:34,270
but you had to manually reinstall the

00:35:31,839 --> 00:35:36,550
ZFS tools and then it works again it's

00:35:34,270 --> 00:35:40,119
and actually it's a back from reddit

00:35:36,550 --> 00:35:42,550
there Cerreta click this type this and

00:35:40,119 --> 00:35:44,650
it's solved thing and it's actually sort

00:35:42,550 --> 00:35:46,420
in upstream now so you won't have this

00:35:44,650 --> 00:35:48,880
problem anymore but if we do a

00:35:46,420 --> 00:35:51,640
destructive installation it would look

00:35:48,880 --> 00:35:53,619
for free or available disk installers

00:35:51,640 --> 00:35:54,819
that pool in there wiping all your data

00:35:53,619 --> 00:35:57,220
clean and off you go

00:35:54,819 --> 00:35:58,839
not good so after installation you need

00:35:57,220 --> 00:36:00,819
to type in three commands also

00:35:58,839 --> 00:36:05,290
documented just type it and you're off

00:36:00,819 --> 00:36:07,359
you go and also is this soft removal if

00:36:05,290 --> 00:36:09,520
I delete a server from puppet the

00:36:07,359 --> 00:36:13,210
configuration should be cleaned it

00:36:09,520 --> 00:36:15,579
should no longer do any sort of backups

00:36:13,210 --> 00:36:17,440
it should be silent but it data files

00:36:15,579 --> 00:36:21,220
and the boots reply it's shorter mine in

00:36:17,440 --> 00:36:22,809
place why because the puppet DB a system

00:36:21,220 --> 00:36:25,180
that contains all the puppet

00:36:22,809 --> 00:36:27,280
configuration might actually fault at

00:36:25,180 --> 00:36:29,589
some point and if it does it reports

00:36:27,280 --> 00:36:32,530
sorry I have 0 service for you to backup

00:36:29,589 --> 00:36:34,599
and the director would go and wipe its

00:36:32,530 --> 00:36:36,549
entire slate clean with all your backups

00:36:34,599 --> 00:36:38,319
along with it so that's not good

00:36:36,549 --> 00:36:42,010
soft removal is way better because

00:36:38,319 --> 00:36:44,650
whatever the Bakula does and removes you

00:36:42,010 --> 00:36:45,790
can reinstall by running a puppet run so

00:36:44,650 --> 00:36:49,030
it's as simple as that

00:36:45,790 --> 00:36:52,480
no on top on all that I want like I said

00:36:49,030 --> 00:36:54,250
one file per volume I love it because

00:36:52,480 --> 00:36:57,390
you know that if you delete this file

00:36:54,250 --> 00:37:00,130
you only wipe this single job and it's

00:36:57,390 --> 00:37:02,770
clean so to speak there are other

00:37:00,130 --> 00:37:05,650
approaches but this is what shown me in

00:37:02,770 --> 00:37:08,920
my profession so far the best results

00:37:05,650 --> 00:37:11,049
there are and addition to the monitoring

00:37:08,920 --> 00:37:13,119
is usually monitoring I want to monitor

00:37:11,049 --> 00:37:14,589
the last backup that ran and I want to

00:37:13,119 --> 00:37:16,780
know that the last backup actually did

00:37:14,589 --> 00:37:19,660
run with whatever exit code if their

00:37:16,780 --> 00:37:23,380
exit code is not zero whatever warning I

00:37:19,660 --> 00:37:25,540
want trigger an alarm if it's ok then be

00:37:23,380 --> 00:37:28,359
silent about it if it doesn't report

00:37:25,540 --> 00:37:30,819
alarming if it's green I must be sure

00:37:28,359 --> 00:37:35,290
it's ok so that's actually a very good

00:37:30,819 --> 00:37:37,569
thing also I want the majority my SQL

00:37:35,290 --> 00:37:39,160
dumps because what good use is a

00:37:37,569 --> 00:37:41,500
customer server where you don't have my

00:37:39,160 --> 00:37:42,700
SQL jobs okay so let's let's backup that

00:37:41,500 --> 00:37:46,530
as well and

00:37:42,700 --> 00:37:50,010
we check for the last valid full backup

00:37:46,530 --> 00:37:53,140
the setup I'm I'm showing you does

00:37:50,010 --> 00:37:55,600
increment or increase the backup level

00:37:53,140 --> 00:37:58,390
from whatever to full if there isn't a

00:37:55,600 --> 00:38:00,910
backup in the last 30 days and this

00:37:58,390 --> 00:38:03,760
alarm also gives us an alarm if there

00:38:00,910 --> 00:38:05,410
are no valid backups in last 30 days so

00:38:03,760 --> 00:38:07,390
if these checks are all agreeing you

00:38:05,410 --> 00:38:09,280
know you have a valid full backup the

00:38:07,390 --> 00:38:11,020
last backup has been run the MySQL data

00:38:09,280 --> 00:38:12,940
has been backed up and also us are

00:38:11,020 --> 00:38:15,880
running it's as easy as that

00:38:12,940 --> 00:38:18,610
so no alarms it's okay and of course is

00:38:15,880 --> 00:38:20,410
a freshness check so if the h-scene are

00:38:18,610 --> 00:38:24,330
directing our server does not receive

00:38:20,410 --> 00:38:26,980
any sorts of results from whatever

00:38:24,330 --> 00:38:29,500
result or ever move over every moisture

00:38:26,980 --> 00:38:32,110
it will trigger a freshness alarms so we

00:38:29,500 --> 00:38:34,150
even check that it does receive alarms

00:38:32,110 --> 00:38:37,570
at some point so the no stale okay

00:38:34,150 --> 00:38:39,940
warnings and whatever and of course a

00:38:37,570 --> 00:38:42,790
complete random pass was generated for

00:38:39,940 --> 00:38:45,940
each connection each server and each

00:38:42,790 --> 00:38:48,940
client each backup whatever you have has

00:38:45,940 --> 00:38:52,390
an own randomly generated password you

00:38:48,940 --> 00:38:54,280
can supply six passwords if you want but

00:38:52,390 --> 00:38:57,910
there's really no need because you don't

00:38:54,280 --> 00:39:00,340
really touch any of this by hand it just

00:38:57,910 --> 00:39:03,400
seemed to work like that and an

00:39:00,340 --> 00:39:05,680
additional very nice thing is the FD

00:39:03,400 --> 00:39:07,960
dot-com file that you need for the file

00:39:05,680 --> 00:39:10,840
daemon is also placed on the barrios

00:39:07,960 --> 00:39:12,970
director in a special own directory why

00:39:10,840 --> 00:39:16,510
is that it's pretty simple disaster

00:39:12,970 --> 00:39:19,120
recovery into commands you can launch a

00:39:16,510 --> 00:39:21,580
system rescue CD and I don't mean any

00:39:19,120 --> 00:39:25,080
but the system rescued CD that you can

00:39:21,580 --> 00:39:28,260
download the Linux based rescue CD and

00:39:25,080 --> 00:39:29,530
just launch it it has a pre-installed

00:39:28,260 --> 00:39:32,110
Bakula

00:39:29,530 --> 00:39:35,260
fire demon in there and you just copy

00:39:32,110 --> 00:39:37,420
this configuration over there up with

00:39:35,260 --> 00:39:39,460
the IP and you can restore your entire

00:39:37,420 --> 00:39:41,740
system when we tried it we used it in

00:39:39,460 --> 00:39:44,140
the real life scenario we got an up and

00:39:41,740 --> 00:39:47,890
running server by doing just that so

00:39:44,140 --> 00:39:49,900
it's a really great thing to have and of

00:39:47,890 --> 00:39:54,250
course the option to overwrite a piece

00:39:49,900 --> 00:39:55,190
was not setups and the routers in there

00:39:54,250 --> 00:39:57,410
you can

00:39:55,190 --> 00:39:58,310
or the IP might change from the view

00:39:57,410 --> 00:40:00,920
from the director

00:39:58,310 --> 00:40:02,420
it sees the public IP but the client

00:40:00,920 --> 00:40:05,560
that's actually connected has a private

00:40:02,420 --> 00:40:09,410
IP so you can override all that with

00:40:05,560 --> 00:40:12,260
with the hero stuff am i talking of Hira

00:40:09,410 --> 00:40:15,470
here is the configuration tool per host

00:40:12,260 --> 00:40:19,130
so you can do a very fine-grained access

00:40:15,470 --> 00:40:25,310
or configuration in there you can also

00:40:19,130 --> 00:40:26,690
override yeah well you can also operate

00:40:25,310 --> 00:40:28,369
several other things I've documented

00:40:26,690 --> 00:40:30,800
them all like I said but here's some

00:40:28,369 --> 00:40:33,560
more of course you include an executing

00:40:30,800 --> 00:40:37,160
of files by default it includes all and

00:40:33,560 --> 00:40:39,470
excludes the usual temp files and

00:40:37,160 --> 00:40:41,210
whatever you have but I'm approaching

00:40:39,470 --> 00:40:43,310
this with the let's backup everything

00:40:41,210 --> 00:40:44,780
and not loose anything behind

00:40:43,310 --> 00:40:46,760
rather than having forgotten something

00:40:44,780 --> 00:40:48,170
and tell you customer sorry I didn't

00:40:46,760 --> 00:40:51,560
back up your application if you install

00:40:48,170 --> 00:40:53,960
in a non valid or non real directory so

00:40:51,560 --> 00:40:56,810
let's skip that and rather takes the

00:40:53,960 --> 00:40:58,400
additional space we need for that we of

00:40:56,810 --> 00:41:01,640
course has the accurate fret that's

00:40:58,400 --> 00:41:02,480
default by yes so deleted files are more

00:41:01,640 --> 00:41:04,670
hard correctly

00:41:02,480 --> 00:41:06,980
this is actually over rideable because

00:41:04,670 --> 00:41:09,530
there might be systems out there that

00:41:06,980 --> 00:41:11,750
cannot run barrios maybe some very old

00:41:09,530 --> 00:41:13,869
stuff or pre-installed our stuff you

00:41:11,750 --> 00:41:17,990
can't have don't have access to like

00:41:13,869 --> 00:41:20,030
Bakula fedora stuff and it does not

00:41:17,990 --> 00:41:23,300
handle the accurate flag it would just

00:41:20,030 --> 00:41:25,579
panic on connecting or so you can

00:41:23,300 --> 00:41:28,490
disable that in there and of course the

00:41:25,579 --> 00:41:31,490
one file system flag I'm like it will

00:41:28,490 --> 00:41:33,920
not Traverse into mount directories by

00:41:31,490 --> 00:41:36,589
default and in this case you can

00:41:33,920 --> 00:41:39,589
override if you want to but now I talked

00:41:36,589 --> 00:41:41,390
about the monitoring and this is a live

00:41:39,589 --> 00:41:43,670
example of the monitoring and you see

00:41:41,390 --> 00:41:45,470
the different alarms the Bakula FD

00:41:43,670 --> 00:41:48,230
daemon is of course you process itself

00:41:45,470 --> 00:41:50,450
the tubercular FD is running of course

00:41:48,230 --> 00:41:52,579
this should we always be green the last

00:41:50,450 --> 00:41:54,319
full backup and you can see here ok the

00:41:52,579 --> 00:41:57,140
full backup is done okay within the last

00:41:54,319 --> 00:41:59,930
30 days if it doesn't receive any sort

00:41:57,140 --> 00:42:02,060
of confirmation or anything else it

00:41:59,930 --> 00:42:03,980
would turn red with a stay check or of

00:42:02,060 --> 00:42:06,349
course if it's over these 30 days if you

00:42:03,980 --> 00:42:07,990
actually state it here the last backup

00:42:06,349 --> 00:42:10,330
is the next line and what

00:42:07,990 --> 00:42:12,580
how long it actually did take to

00:42:10,330 --> 00:42:16,240
complete the last backup job and at what

00:42:12,580 --> 00:42:18,160
time it did complete and we have a check

00:42:16,240 --> 00:42:20,380
for the MySQL databases as you can see

00:42:18,160 --> 00:42:22,480
here nearly 900 databases were dumped

00:42:20,380 --> 00:42:25,510
and dumped okay this is a very fragile

00:42:22,480 --> 00:42:27,610
check is there even the smallest error

00:42:25,510 --> 00:42:29,590
in there it would turn to a warning it's

00:42:27,610 --> 00:42:31,690
not like okay you can not dump 10

00:42:29,590 --> 00:42:34,000
database and still be okay one database

00:42:31,690 --> 00:42:36,610
not dumped or any warning whatsoever

00:42:34,000 --> 00:42:39,700
it will turn not green it will turn

00:42:36,610 --> 00:42:41,700
yellow or red so if it all its green you

00:42:39,700 --> 00:42:45,010
know your server is perfectly back and

00:42:41,700 --> 00:42:48,580
you see here of course the quarter aunt

00:42:45,010 --> 00:42:50,710
is that FS 14% here used and I'm lazy of

00:42:48,580 --> 00:42:53,260
course we do restore us and if you do

00:42:50,710 --> 00:42:55,300
restore us you get the slash barriers or

00:42:53,260 --> 00:42:57,190
slash Bakula restores directory and

00:42:55,300 --> 00:42:59,470
sometimes it's not cleaned up so this

00:42:57,190 --> 00:43:01,420
actually checks that there is this

00:42:59,470 --> 00:43:05,920
directory and if it's there it raises an

00:43:01,420 --> 00:43:09,010
warning so no more space wasted in there

00:43:05,920 --> 00:43:12,430
and last but not least the papen module

00:43:09,010 --> 00:43:15,609
also does install the web UI completely

00:43:12,430 --> 00:43:17,050
and without any doing it you can of

00:43:15,609 --> 00:43:19,300
course this edit this if you don't want

00:43:17,050 --> 00:43:21,970
to but by default it installs the

00:43:19,300 --> 00:43:27,750
various web UI complete with access

00:43:21,970 --> 00:43:29,770
information and it all just works ok

00:43:27,750 --> 00:43:32,950
this actually would sum up my

00:43:29,770 --> 00:43:35,170
presentation here I'm guess I'm inside

00:43:32,950 --> 00:43:38,530
the time frame you thank you all for

00:43:35,170 --> 00:43:40,390
your attention s so far and like I

00:43:38,530 --> 00:43:43,030
promised here are the contact

00:43:40,390 --> 00:43:44,560
information and you get up available or

00:43:43,030 --> 00:43:48,700
the URL where you can download the

00:43:44,560 --> 00:43:50,380
current code I assign guess or hurt the

00:43:48,700 --> 00:43:53,260
puppet slides will be made available to

00:43:50,380 --> 00:43:54,700
all of you at the end so it would be

00:43:53,260 --> 00:43:55,720
easy to get these informations if you

00:43:54,700 --> 00:43:57,609
don't write it down right now

00:43:55,720 --> 00:43:59,080
and like I said if you have any problems

00:43:57,609 --> 00:44:01,930
or if you're implementing or have any

00:43:59,080 --> 00:44:06,510
questions I'm available we are my email

00:44:01,930 --> 00:44:06,510
okay thank you and other any questions

00:44:17,280 --> 00:44:24,460
do you configure the old clients also

00:44:20,320 --> 00:44:28,180
wire puppet yeah yes we the puppet

00:44:24,460 --> 00:44:29,650
module does configure all clients icing

00:44:28,180 --> 00:44:33,330
over all these clients actually a fedora

00:44:29,650 --> 00:44:36,670
course six and that's two thousand ish

00:44:33,330 --> 00:44:39,490
so yeah and again if you have a problem

00:44:36,670 --> 00:44:41,800
I can implement so if you if you need

00:44:39,490 --> 00:44:44,260
like a Gentoo or something that I can do

00:44:41,800 --> 00:44:47,890
that that's pop it is very easy and

00:44:44,260 --> 00:44:58,660
forgiving that I can see microphone

00:44:47,890 --> 00:45:01,450
needs to past using yes of course and it

00:44:58,660 --> 00:45:04,240
doesn't pick up okay that's very

00:45:01,450 --> 00:45:09,220
interesting we have to because you just

00:45:04,240 --> 00:45:10,480
get a sec board it does pick up and I

00:45:09,220 --> 00:45:13,390
was asking you because you were getting

00:45:10,480 --> 00:45:15,220
a segfault arrow on a connection it's

00:45:13,390 --> 00:45:18,849
actually a problem with sent server and

00:45:15,220 --> 00:45:21,040
a patch 23 I guess and this patch 23

00:45:18,849 --> 00:45:23,920
updates the crypto libraries on the

00:45:21,040 --> 00:45:25,990
extent server and in that the various

00:45:23,920 --> 00:45:27,640
doesn't start anymore auntie puppet

00:45:25,990 --> 00:45:30,820
doesn't start anymore you have to

00:45:27,640 --> 00:45:37,510
implement a patch for that it's a simple

00:45:30,820 --> 00:45:41,500
I can show you since ever 6.5 okay but

00:45:37,510 --> 00:45:43,150
it's it's down all to 6.0 so it's it's a

00:45:41,500 --> 00:45:46,390
reproductive you can actually reproduce

00:45:43,150 --> 00:45:48,880
this set error if you run the Bakula FD

00:45:46,390 --> 00:45:52,150
or barrios FD with the debug flag in for

00:45:48,880 --> 00:45:54,099
crowd connect and run the backup shop

00:45:52,150 --> 00:46:01,960
and you'll see it will sec forward and

00:45:54,099 --> 00:46:11,950
it's due to the crypto SSL all they went

00:46:01,960 --> 00:46:16,330
back and yes I'm applying xn server is

00:46:11,950 --> 00:46:19,000
support it's 6 to 6.5 we're using CentOS

00:46:16,330 --> 00:46:21,250
in five six seven Debian is supported

00:46:19,000 --> 00:46:24,190
and like I said I can implement many

00:46:21,250 --> 00:46:26,200
more it should be easy so I'm surprised

00:46:24,190 --> 00:46:27,430
he returned also see the faces of my

00:46:26,200 --> 00:46:31,390
colleague zeros

00:46:27,430 --> 00:46:35,349
price it would be nice me if you think

00:46:31,390 --> 00:46:39,880
about to contribute it or to make it

00:46:35,349 --> 00:46:43,540
public available so censor versa yeah

00:46:39,880 --> 00:46:46,349
IIIi did make it seem easy public I did

00:46:43,540 --> 00:46:49,329
write a blog close and if you google for

00:46:46,349 --> 00:46:51,220
extensible burials egg poet I'm like

00:46:49,329 --> 00:46:53,069
like the first page but I can consume it

00:46:51,220 --> 00:46:57,069
of course yes su-mei

00:46:53,069 --> 00:46:59,290
our romantic or would be really nice I

00:46:57,069 --> 00:47:01,869
think all four hours I'll get in contact

00:46:59,290 --> 00:47:07,740
I'm seeing to chest neck review I get

00:47:01,869 --> 00:47:09,910
contacted car because any more questions

00:47:07,740 --> 00:47:13,740
okay then thank you for your attention

00:47:09,910 --> 00:47:13,740

YouTube URL: https://www.youtube.com/watch?v=XKFwZ_mu3F4


