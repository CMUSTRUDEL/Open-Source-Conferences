Title: OSBConf 2016: The Database Backup is done - what next | Jörg Brühe
Publication date: 2016-10-11
Playlist: OSBConf 2016 | Open Source Backup Conference
Description: 
	“Nobody wants to do a backup – but everybody demands a restore”: This is a pointed description as seen by many system or database administrators.
Only the fact that restore cannot be had without backup ensures that they are given the resources for backup.

But creating a backup does not settle the matter. In their very own interest, admins must ensure that restore will really work, that the backup has no
hidden damage or is otherwise unsuitable. So a test system is needed to perform and verify a restore.

The result should not be simply overwritten: It is real live data, available on a system which is neither loaded nor changed by production!
These are perfect conditions to do load-intensive evaluations, create excerpts for billing or anonymize the data so that they may be used as snapshots for
developments and tests.

All this can be automated, and data privacy rules can be fit in.

I will present the relevant scripts and settings of a MySQL setup with about 30 production instances (each a master-master replication), from which you
may take the concepts and code snippets that fit your environment.
Captions: 
	00:00:09,670 --> 00:00:17,080
our next speaker is like brie and the

00:00:13,750 --> 00:00:20,980
topic of its talk is the data pick

00:00:17,080 --> 00:00:23,950
backup has finished what's next yeah the

00:00:20,980 --> 00:00:26,950
program committee has decided or has

00:00:23,950 --> 00:00:29,920
hoped that my talk will be provocative

00:00:26,950 --> 00:00:32,800
enough to get you all out of lunch mode

00:00:29,920 --> 00:00:36,760
back into discussion mode and I'll try

00:00:32,800 --> 00:00:39,400
to do my very best my name is your poem

00:00:36,760 --> 00:00:42,489
i'm working with from deuel from deuel

00:00:39,400 --> 00:00:45,850
is a small swiss company concentrating

00:00:42,489 --> 00:00:49,449
on services around mysql so we are doing

00:00:45,850 --> 00:00:51,640
consulting we do training we deliver

00:00:49,449 --> 00:00:55,269
support and we deliver remote DBA

00:00:51,640 --> 00:00:57,909
services to those who want them and some

00:00:55,269 --> 00:01:01,089
other minor stuff depending on what the

00:00:57,909 --> 00:01:04,690
customer needs but that's our basic or

00:01:01,089 --> 00:01:07,030
typical portfolio of services we are

00:01:04,690 --> 00:01:10,630
members in the relevant organizations

00:01:07,030 --> 00:01:16,770
including the dark the german user group

00:01:10,630 --> 00:01:19,780
of oracle users oracle and mysql you can

00:01:16,770 --> 00:01:21,850
download the slides later from our

00:01:19,780 --> 00:01:24,910
company side i will upload them there

00:01:21,850 --> 00:01:28,210
and they will be available via the ospc

00:01:24,910 --> 00:01:31,870
sites also and on our slides you can

00:01:28,210 --> 00:01:33,730
also find other talks we deliver like

00:01:31,870 --> 00:01:35,410
the talks we deliver at the dwark

00:01:33,730 --> 00:01:38,050
conference for those of you are

00:01:35,410 --> 00:01:40,540
interested I've got some of the leaflets

00:01:38,050 --> 00:01:44,050
for this year's to a conference in

00:01:40,540 --> 00:01:47,920
Nuremberg hear no more about me I'm

00:01:44,050 --> 00:01:50,580
working in the database world or data

00:01:47,920 --> 00:01:54,090
relational databases on unix world

00:01:50,580 --> 00:01:57,960
basically since I finished University

00:01:54,090 --> 00:02:02,229
and I'm doing that typically on the

00:01:57,960 --> 00:02:04,570
provider side so I've was member of a

00:02:02,229 --> 00:02:09,519
team developing a distributed database

00:02:04,570 --> 00:02:11,500
management system and was part of the

00:02:09,519 --> 00:02:14,650
MySQL build team for several years and

00:02:11,500 --> 00:02:17,200
then switched to the client side as a

00:02:14,650 --> 00:02:20,890
DBA and now I'm back on the provider

00:02:17,200 --> 00:02:25,630
side in that I deliver assistance and to

00:02:20,890 --> 00:02:27,700
training and stuff like this deviating

00:02:25,630 --> 00:02:30,250
from the typical talks about database

00:02:27,700 --> 00:02:30,700
backup I'm not going with it I going to

00:02:30,250 --> 00:02:33,220
tell you

00:02:30,700 --> 00:02:34,920
how you should do it I'm not going to

00:02:33,220 --> 00:02:37,480
offer you with the perfect solution

00:02:34,920 --> 00:02:41,860
because I simply assume you have got it

00:02:37,480 --> 00:02:43,810
already perfect always to be seen in the

00:02:41,860 --> 00:02:45,940
context of your requirements of your

00:02:43,810 --> 00:02:48,630
possibilities of your budget of your

00:02:45,940 --> 00:02:51,069
data volume and whatever belongs there

00:02:48,630 --> 00:02:53,790
rather I'm going to tell you what you

00:02:51,069 --> 00:02:57,040
should do with your database backup and

00:02:53,790 --> 00:03:00,549
what too many people are forgetting much

00:02:57,040 --> 00:03:05,799
too often and then they may run into

00:03:00,549 --> 00:03:08,650
tablet trouble so what I'm going to tell

00:03:05,799 --> 00:03:11,400
you is not specific to any any database

00:03:08,650 --> 00:03:15,400
system mysql will be used as an example

00:03:11,400 --> 00:03:17,410
not it's not limited to mysql and it's

00:03:15,400 --> 00:03:19,450
not limited to any specific backup

00:03:17,410 --> 00:03:21,819
solution whether you do your home ground

00:03:19,450 --> 00:03:25,329
stuff or barriers or whatever have you

00:03:21,819 --> 00:03:28,900
it doesn't matter because several of the

00:03:25,329 --> 00:03:32,260
tasks apply to any environment to any

00:03:28,900 --> 00:03:36,430
combination so we are going to talk

00:03:32,260 --> 00:03:41,230
about the purpose of database backups we

00:03:36,430 --> 00:03:44,350
are going to sort sorry we will talk

00:03:41,230 --> 00:03:46,870
about verification of a backup we will

00:03:44,350 --> 00:03:50,769
use it will discuss what to do with

00:03:46,870 --> 00:03:56,260
production data and all that kind of

00:03:50,769 --> 00:03:58,450
stuff why we do a backup well gracia has

00:03:56,260 --> 00:04:00,069
already mentioned it in his talk so i'm

00:03:58,450 --> 00:04:05,470
going to skip over several of these

00:04:00,069 --> 00:04:08,470
slides pretty fast we all know that data

00:04:05,470 --> 00:04:11,590
are essential either for a company or

00:04:08,470 --> 00:04:14,620
for personal user if you were to lose

00:04:11,590 --> 00:04:16,720
your holiday pictures or the pictures of

00:04:14,620 --> 00:04:19,000
your wedding anniversary or whatever it

00:04:16,720 --> 00:04:21,940
might be close to personal catastrophe

00:04:19,000 --> 00:04:23,919
just for emotional value I'm not talking

00:04:21,940 --> 00:04:27,370
about money only I'm also talking about

00:04:23,919 --> 00:04:29,050
emotions and the emotional value of your

00:04:27,370 --> 00:04:33,039
personal data may be much higher than

00:04:29,050 --> 00:04:34,960
the financial value of them for company

00:04:33,039 --> 00:04:38,200
of course everybody talks about hymens

00:04:34,960 --> 00:04:40,990
and money so for a company it is the

00:04:38,200 --> 00:04:43,220
risk that if a if you lose your company

00:04:40,990 --> 00:04:46,280
data it made

00:04:43,220 --> 00:04:49,690
it may totally break your operation and

00:04:46,280 --> 00:04:52,370
may mean the ruin of your company and

00:04:49,690 --> 00:04:56,990
there is the old saying it sounds

00:04:52,370 --> 00:04:59,150
cynical I know but if data did not get

00:04:56,990 --> 00:05:03,260
backed up obviously they are not

00:04:59,150 --> 00:05:05,360
important the OTB a rule if your boss

00:05:03,260 --> 00:05:08,720
doesn't give you the money to do a

00:05:05,360 --> 00:05:11,060
decent database backup say the disk or

00:05:08,720 --> 00:05:14,410
tape storage or whatever you you prefer

00:05:11,060 --> 00:05:16,760
for it then obviously it's not important

00:05:14,410 --> 00:05:21,890
that's the only way to look at it and

00:05:16,760 --> 00:05:23,600
still to keep your same mind one thing I

00:05:21,890 --> 00:05:26,110
forgot in the introduction if there are

00:05:23,600 --> 00:05:28,250
any questions about effects and

00:05:26,110 --> 00:05:30,770
understanding and so please put them

00:05:28,250 --> 00:05:33,230
immediately it doesn't make any sense

00:05:30,770 --> 00:05:37,430
that I continue talking and one or more

00:05:33,230 --> 00:05:41,960
of you have lost track and want to

00:05:37,430 --> 00:05:44,330
clarify something first the causes are

00:05:41,960 --> 00:05:46,610
the possible causes for data loss are

00:05:44,330 --> 00:05:49,520
many Gaussian has already mentioned them

00:05:46,610 --> 00:05:53,450
I'd like to draw your attention to the

00:05:49,520 --> 00:05:58,940
third point mishandling by accident or

00:05:53,450 --> 00:06:02,750
by intention is something which is much

00:05:58,940 --> 00:06:06,560
too often neglected and even the most

00:06:02,750 --> 00:06:08,570
elaborate hardware and fault-tolerant

00:06:06,560 --> 00:06:10,760
software etc and replication and

00:06:08,570 --> 00:06:13,400
multiple storage and rate system at what

00:06:10,760 --> 00:06:16,610
have you will not protect you against

00:06:13,400 --> 00:06:20,240
the silly programmer or the malicious

00:06:16,610 --> 00:06:24,140
user who simply drops the table yeah

00:06:20,240 --> 00:06:25,850
table drop will get replicated great no

00:06:24,140 --> 00:06:27,950
rate system will protect you against

00:06:25,850 --> 00:06:29,690
that that's also one of the reasons why

00:06:27,950 --> 00:06:32,570
a rate system is no substitute for

00:06:29,690 --> 00:06:37,490
backup the same holds on the operating

00:06:32,570 --> 00:06:39,979
system level and so you will do your own

00:06:37,490 --> 00:06:43,520
risk analysis and that's basically what

00:06:39,979 --> 00:06:47,630
cassia talked about so let's simply skip

00:06:43,520 --> 00:06:50,419
that and as a result you will end up

00:06:47,630 --> 00:06:53,539
with a backup strategy that fits your

00:06:50,419 --> 00:06:56,330
technical possibilities your environment

00:06:53,539 --> 00:07:02,150
your data volume and the risks you

00:06:56,330 --> 00:07:05,870
considered customer of ours is running

00:07:02,150 --> 00:07:08,539
to data centers and is replicating data

00:07:05,870 --> 00:07:13,490
to the second data center so they

00:07:08,539 --> 00:07:15,890
thought they are protected on second

00:07:13,490 --> 00:07:17,930
thought they noticed that both data

00:07:15,890 --> 00:07:20,900
centers are pretty close to the same

00:07:17,930 --> 00:07:25,460
small river so flooding might affect

00:07:20,900 --> 00:07:27,620
both and both data centers on the same

00:07:25,460 --> 00:07:32,990
direction close to the French nuclear

00:07:27,620 --> 00:07:35,660
power plant resin time so Geographic

00:07:32,990 --> 00:07:37,070
replication is not sufficient depending

00:07:35,660 --> 00:07:44,870
on the circumstances or may be

00:07:37,070 --> 00:07:47,660
insufficient now now we assume that we

00:07:44,870 --> 00:07:50,360
do have a database backup implemented

00:07:47,660 --> 00:07:55,490
it's running it's running regularly it's

00:07:50,360 --> 00:07:59,090
all fine my claim is that doesn't finish

00:07:55,490 --> 00:08:02,000
the job you may not yet turn to other

00:07:59,090 --> 00:08:07,010
items you still got work to do in the

00:08:02,000 --> 00:08:09,560
context of your database backup the

00:08:07,010 --> 00:08:13,460
purpose we already mentioned is to

00:08:09,560 --> 00:08:15,950
prevent you against data loss but the

00:08:13,460 --> 00:08:19,669
back up by itself is not sufficient to

00:08:15,950 --> 00:08:21,680
have the purpose fulfilled you want to

00:08:19,669 --> 00:08:25,610
you must be sure that the database

00:08:21,680 --> 00:08:30,200
backup is fit for recovery if it's not

00:08:25,610 --> 00:08:34,789
fit by for whatever reason you haven't

00:08:30,200 --> 00:08:36,890
finished so you have an acceptance

00:08:34,789 --> 00:08:39,409
criterion in the meaning of quality

00:08:36,890 --> 00:08:42,979
insurance for your backup and that that

00:08:39,409 --> 00:08:49,130
criterion is is sufficient for recovery

00:08:42,979 --> 00:08:51,620
and your honest belief is not enough to

00:08:49,130 --> 00:08:55,970
prove that quality you have to verify it

00:08:51,620 --> 00:08:59,480
you have to test it I have taken that

00:08:55,970 --> 00:09:01,220
quote from another talk we every

00:08:59,480 --> 00:09:03,430
database backup is a schrödinger's

00:09:01,220 --> 00:09:07,029
backup

00:09:03,430 --> 00:09:09,700
its status is unknown until you have

00:09:07,029 --> 00:09:15,100
used it for recovery and only then you

00:09:09,700 --> 00:09:17,710
know whether it's good or bad so they

00:09:15,100 --> 00:09:20,260
are obviously not only risks for your

00:09:17,710 --> 00:09:24,459
data well you're operating them there

00:09:20,260 --> 00:09:28,600
are also risks for recovery like the

00:09:24,459 --> 00:09:30,550
mismatch different versions and you Vern

00:09:28,600 --> 00:09:32,350
of your backup tool needing other

00:09:30,550 --> 00:09:35,620
parameters and now the result is

00:09:32,350 --> 00:09:37,990
suddenly not suitable for recovery our

00:09:35,620 --> 00:09:39,940
new version of your recovery it will not

00:09:37,990 --> 00:09:45,480
accepting that old data format or

00:09:39,940 --> 00:09:49,450
whatever have you and of course whatever

00:09:45,480 --> 00:09:52,930
vendors claim there is a non zero risk

00:09:49,450 --> 00:09:57,640
of data becoming corrupt at storage for

00:09:52,930 --> 00:10:00,370
example or during transfer I once was

00:09:57,640 --> 00:10:03,430
running a small machine which was using

00:10:00,370 --> 00:10:05,680
a riser card because the case was not

00:10:03,430 --> 00:10:09,010
high enough for other controller cards

00:10:05,680 --> 00:10:13,150
and so the skazhi card inserted into the

00:10:09,010 --> 00:10:15,459
riser card reproducibly had data

00:10:13,150 --> 00:10:17,140
corruption because some of the contacts

00:10:15,459 --> 00:10:19,209
were bad all the run times were

00:10:17,140 --> 00:10:21,760
different or whatever have you so

00:10:19,209 --> 00:10:23,950
whatever I would save through that

00:10:21,760 --> 00:10:28,060
skazhi card in the riser card was

00:10:23,950 --> 00:10:32,500
damaged irregardless of the device i was

00:10:28,060 --> 00:10:36,130
using that's a real risk and no software

00:10:32,500 --> 00:10:39,940
will detect that typically until you try

00:10:36,130 --> 00:10:42,640
to recover your recovery procedure might

00:10:39,940 --> 00:10:46,540
be faulty or not matching your backup

00:10:42,640 --> 00:10:51,459
and your sister might be unusable for

00:10:46,540 --> 00:10:54,400
recovery unsuitable whatever have you so

00:10:51,459 --> 00:10:57,400
what you need is a verification whether

00:10:54,400 --> 00:11:00,700
your database backup was okay that means

00:10:57,400 --> 00:11:03,160
you can't simply check it by itself you

00:11:00,700 --> 00:11:06,520
have to pass it through your recovery

00:11:03,160 --> 00:11:09,850
procedure and really recover a database

00:11:06,520 --> 00:11:12,600
instance from that backup that's the

00:11:09,850 --> 00:11:16,060
only way to really be sure it's okay

00:11:12,600 --> 00:11:16,940
there is no other way there is no other

00:11:16,060 --> 00:11:20,270
check

00:11:16,940 --> 00:11:22,760
and this check must be a routine action

00:11:20,270 --> 00:11:24,590
it's not sufficient to do it once when

00:11:22,760 --> 00:11:28,100
you would come up with your backup

00:11:24,590 --> 00:11:31,070
procedure it's necessary that you make

00:11:28,100 --> 00:11:33,770
that part of your routine work or rather

00:11:31,070 --> 00:11:37,340
your automated work running autumn

00:11:33,770 --> 00:11:39,740
without your manual intervention that

00:11:37,340 --> 00:11:44,120
sufficiently frequent regular intervals

00:11:39,740 --> 00:11:47,630
and depending on the level of your

00:11:44,120 --> 00:11:50,810
paranoia you may have any amount of

00:11:47,630 --> 00:11:53,540
checks just check the date they said

00:11:50,810 --> 00:11:56,030
database comes up with a backup check

00:11:53,540 --> 00:11:59,210
that it's contains the same number of

00:11:56,030 --> 00:12:01,790
tables as your productive data check

00:11:59,210 --> 00:12:03,620
that the number of rows per table is ok

00:12:01,790 --> 00:12:07,850
e check for consistency what have you

00:12:03,620 --> 00:12:10,010
there is no upper limit maybe your boss

00:12:07,850 --> 00:12:14,740
will put you a limit and say that enough

00:12:10,010 --> 00:12:14,740
but that's it that's a different aspect

00:12:15,040 --> 00:12:23,620
so you want to verify that because you

00:12:19,370 --> 00:12:28,430
want to sleep with a safe mind and

00:12:23,620 --> 00:12:31,910
undisturbed so you have to verify your

00:12:28,430 --> 00:12:38,030
back up and you have to do it somewhere

00:12:31,910 --> 00:12:41,390
where the restored data is protected by

00:12:38,030 --> 00:12:44,990
the same safeguards as your real-life

00:12:41,390 --> 00:12:46,700
data you don't want your customer data

00:12:44,990 --> 00:12:50,390
to appear in the open world of your

00:12:46,700 --> 00:12:53,090
financial data which means you need in

00:12:50,390 --> 00:12:56,150
your production environment with the

00:12:53,090 --> 00:12:58,970
same firewall protection etc at XS s

00:12:56,150 --> 00:13:02,800
access controls etc etc you need a

00:12:58,970 --> 00:13:06,530
second machine physical or virtual on

00:13:02,800 --> 00:13:09,530
which to restore your backup you need a

00:13:06,530 --> 00:13:13,640
second instance everything else is

00:13:09,530 --> 00:13:15,890
insufficient yes I know if your database

00:13:13,640 --> 00:13:18,620
costs you licensed recovery machine may

00:13:15,890 --> 00:13:22,220
cost your license too so sorry for you

00:13:18,620 --> 00:13:24,260
but there's no way out of it you don't

00:13:22,220 --> 00:13:29,010
want to do your wrist or on your

00:13:24,260 --> 00:13:31,920
productive machine would be really silly

00:13:29,010 --> 00:13:35,040
so basically you end up with at least

00:13:31,920 --> 00:13:37,620
such a setup you have a production

00:13:35,040 --> 00:13:40,370
instance you take a backup and you

00:13:37,620 --> 00:13:44,490
restore it onto a recovery instance and

00:13:40,370 --> 00:13:46,410
that recovery instance is in within your

00:13:44,490 --> 00:13:52,400
production Network protected by the

00:13:46,410 --> 00:13:56,750
firewall etc etc and everything else is

00:13:52,400 --> 00:13:59,970
cheaper in both meanings of the word

00:13:56,750 --> 00:14:04,620
it's not only less money but it's also

00:13:59,970 --> 00:14:07,710
less secure less protective for your

00:14:04,620 --> 00:14:14,460
ease of mind and more risky for your

00:14:07,710 --> 00:14:16,200
company now we assume you have got a

00:14:14,460 --> 00:14:19,800
recovery procedure established and

00:14:16,200 --> 00:14:22,020
working and we assume you have got it

00:14:19,800 --> 00:14:23,790
automated so that it doesn't take your

00:14:22,020 --> 00:14:27,060
valuable time and you can do better

00:14:23,790 --> 00:14:30,870
things in your day work once your have

00:14:27,060 --> 00:14:34,650
set it up and now you have done your

00:14:30,870 --> 00:14:39,060
recovery last night of some productive

00:14:34,650 --> 00:14:41,780
data what's your status now you've got a

00:14:39,060 --> 00:14:44,820
production database with live data

00:14:41,780 --> 00:14:48,240
constantly changed as orders come in and

00:14:44,820 --> 00:14:52,410
bookings are entered into the database

00:14:48,240 --> 00:14:55,170
and stall supply is updated and whatever

00:14:52,410 --> 00:14:57,870
have you and you've also got your

00:14:55,170 --> 00:15:00,770
recovery database which has got the live

00:14:57,870 --> 00:15:06,510
data of your last backup time say of

00:15:00,770 --> 00:15:10,080
last night midnight and it contains the

00:15:06,510 --> 00:15:12,930
same data sometimes I can some period

00:15:10,080 --> 00:15:16,350
back in time yes and it's also available

00:15:12,930 --> 00:15:22,080
on a machine in your production

00:15:16,350 --> 00:15:24,270
environment protected etc hmm great now

00:15:22,080 --> 00:15:27,660
the additional difference is that your

00:15:24,270 --> 00:15:29,640
recovery machine typically is idle the

00:15:27,660 --> 00:15:32,370
data are not changing and there's no

00:15:29,640 --> 00:15:35,010
user working on it especially there is

00:15:32,370 --> 00:15:40,710
no user who hopes for fast response time

00:15:35,010 --> 00:15:41,920
as usable or as to be expected on a fast

00:15:40,710 --> 00:15:47,579
machine

00:15:41,920 --> 00:15:53,380
so this copy of life data is of course

00:15:47,579 --> 00:15:56,649
subjected to privacy laws sure but it's

00:15:53,380 --> 00:16:01,480
also suitable for various purposes you

00:15:56,649 --> 00:16:03,250
can one statistic on them so last night

00:16:01,480 --> 00:16:05,019
backup might be good for running

00:16:03,250 --> 00:16:07,870
statistics of the previous week or the

00:16:05,019 --> 00:16:10,209
previous month statistics which you

00:16:07,870 --> 00:16:13,870
typically run on your production machine

00:16:10,209 --> 00:16:16,000
but why should you especially if it's a

00:16:13,870 --> 00:16:19,180
complicated statistic in your report

00:16:16,000 --> 00:16:21,910
nobody has provide expected before the

00:16:19,180 --> 00:16:24,490
report which is not supported by indexes

00:16:21,910 --> 00:16:27,570
so the report is really putting high

00:16:24,490 --> 00:16:31,209
load on the machine reading all data

00:16:27,570 --> 00:16:34,660
doing table scans which you normally

00:16:31,209 --> 00:16:38,290
would avoid etc etc who cares on the

00:16:34,660 --> 00:16:40,600
product on the recovery machine nobody

00:16:38,290 --> 00:16:45,760
it doesn't block anybody it doesn't

00:16:40,600 --> 00:16:48,910
block normal work you can say check on

00:16:45,760 --> 00:16:52,000
that recovery instance how long it

00:16:48,910 --> 00:16:55,660
create index would take whether you can

00:16:52,000 --> 00:16:57,880
afford that in daily operations or

00:16:55,660 --> 00:17:01,420
whether you need a nightly maintenance a

00:16:57,880 --> 00:17:03,430
window for a schema change all this kind

00:17:01,420 --> 00:17:06,309
of operation can be done on your

00:17:03,430 --> 00:17:11,919
recovery machine without disturbing

00:17:06,309 --> 00:17:16,630
anybody so accounting statistics I

00:17:11,919 --> 00:17:19,870
mentioned another item which is often

00:17:16,630 --> 00:17:23,199
case of concern if you do a physical

00:17:19,870 --> 00:17:25,750
backup of your database you might have

00:17:23,199 --> 00:17:28,390
suffered from bit rot on the disk I know

00:17:25,750 --> 00:17:32,070
it's unlikely but every now and then you

00:17:28,390 --> 00:17:34,809
hear the horror stories now who cares

00:17:32,070 --> 00:17:37,299
you do a physical backup to a physical

00:17:34,809 --> 00:17:40,390
restore have a running database and now

00:17:37,299 --> 00:17:42,490
do you do a full logical dump who cares

00:17:40,390 --> 00:17:44,740
that it takes two hours that it's

00:17:42,490 --> 00:17:48,220
putting up locks that it would block

00:17:44,740 --> 00:17:50,710
ongoing transactions nobody but that

00:17:48,220 --> 00:17:54,340
would be suitable to detect bit rot for

00:17:50,710 --> 00:17:56,350
example there are many per

00:17:54,340 --> 00:17:59,289
purses for which you can use a recovery

00:17:56,350 --> 00:18:03,760
machine because it contains the live

00:17:59,289 --> 00:18:08,559
data in your protected environment you

00:18:03,760 --> 00:18:12,520
can on exports if you need that say your

00:18:08,559 --> 00:18:16,570
marketing guys want to do their work via

00:18:12,520 --> 00:18:20,110
Excel or some other table calculation

00:18:16,570 --> 00:18:23,830
spreadsheet to a comma separated value

00:18:20,110 --> 00:18:27,360
export or OD bc or what have you doesn't

00:18:23,830 --> 00:18:31,809
matter do it on the recovering machine

00:18:27,360 --> 00:18:33,760
basically you can transfer any job on

00:18:31,809 --> 00:18:36,039
from the production machine to the

00:18:33,760 --> 00:18:40,120
recovery machine which is a read-only

00:18:36,039 --> 00:18:43,059
job and which doesnt need last minutes

00:18:40,120 --> 00:18:46,600
data but say that is the data of the

00:18:43,059 --> 00:18:48,580
last deck of a vine any such job can be

00:18:46,600 --> 00:18:51,640
taking off your production machine and

00:18:48,580 --> 00:18:53,710
put you on the recovery machine which

00:18:51,640 --> 00:18:56,710
immediately makes it easier for you to

00:18:53,710 --> 00:19:00,010
get a decent recovery machine because

00:18:56,710 --> 00:19:02,470
it's not sitting idle you are using it

00:19:00,010 --> 00:19:06,279
for meaningful purpose and you're taking

00:19:02,470 --> 00:19:09,100
load of your production machine so your

00:19:06,279 --> 00:19:13,080
production users will be happy because

00:19:09,100 --> 00:19:15,970
of less load and faster response times

00:19:13,080 --> 00:19:18,640
typically that's a pretty fine argument

00:19:15,970 --> 00:19:25,179
follow for the people controlling the

00:19:18,640 --> 00:19:28,559
budget now I've mentioned data privacy

00:19:25,179 --> 00:19:30,940
and we should not ignore that after all

00:19:28,559 --> 00:19:33,220
at least the majority of the

00:19:30,940 --> 00:19:34,960
participants here I think is running

00:19:33,220 --> 00:19:36,760
their business in Germany so they are

00:19:34,960 --> 00:19:38,049
subject to German data privacy laws

00:19:36,760 --> 00:19:42,250
which are a bit more strict than

00:19:38,049 --> 00:19:46,029
somewhere else in the world so that

00:19:42,250 --> 00:19:50,039
means everything which is relating to

00:19:46,029 --> 00:19:53,110
persons is protected by law and the

00:19:50,039 --> 00:19:55,929
amount of data you collect is limited

00:19:53,110 --> 00:20:00,070
you must not collect data which you

00:19:55,929 --> 00:20:03,429
don't need etc etc I'm not going to give

00:20:00,070 --> 00:20:07,750
you legal advice I'm just repeating the

00:20:03,429 --> 00:20:08,220
the buzzwords so that you also get them

00:20:07,750 --> 00:20:12,870
back

00:20:08,220 --> 00:20:15,659
your mind and typically you do have a

00:20:12,870 --> 00:20:17,429
data privacy privacy officer in your

00:20:15,659 --> 00:20:20,690
company at least you should have if your

00:20:17,429 --> 00:20:23,610
company is not really very small and

00:20:20,690 --> 00:20:25,980
that's the person to consult with for

00:20:23,610 --> 00:20:29,760
all the items which will be following

00:20:25,980 --> 00:20:32,880
and if you are really endowed better

00:20:29,760 --> 00:20:37,140
safe than sorry but I get legal advice

00:20:32,880 --> 00:20:40,740
on which you can rely then just follow

00:20:37,140 --> 00:20:44,340
your own instincts my personal claim is

00:20:40,740 --> 00:20:48,570
that most IT people are logical people

00:20:44,340 --> 00:20:58,260
and the correlation between law and

00:20:48,570 --> 00:21:00,530
logic is extremely low in my eyes so you

00:20:58,260 --> 00:21:02,940
have to protect the personal data

00:21:00,530 --> 00:21:08,190
depending on what you do with your

00:21:02,940 --> 00:21:12,059
recovery database well the recovery data

00:21:08,190 --> 00:21:15,179
are in an SQL instance the full power of

00:21:12,059 --> 00:21:18,179
SQL is at your hands so there's nothing

00:21:15,179 --> 00:21:22,230
that would prevent you to set the names

00:21:18,179 --> 00:21:25,470
to John Doe to protect any real live

00:21:22,230 --> 00:21:27,630
data any real persons there's nothing to

00:21:25,470 --> 00:21:30,620
that would prevent you to change the

00:21:27,630 --> 00:21:34,020
mail address into something which is

00:21:30,620 --> 00:21:39,650
legally from this correct from the

00:21:34,020 --> 00:21:44,460
syntax but cannot will not support any

00:21:39,650 --> 00:21:47,970
clues about the real address SQL gives

00:21:44,460 --> 00:21:50,100
you all those possibilities yes I know

00:21:47,970 --> 00:21:53,159
the md5 sum may be long and I hope your

00:21:50,100 --> 00:21:54,990
data your field is sufficiently long but

00:21:53,159 --> 00:22:01,590
that's a different issue that can be

00:21:54,990 --> 00:22:04,380
solved and as a proactive database

00:22:01,590 --> 00:22:08,549
administrator you can live on

00:22:04,380 --> 00:22:14,280
pessimistic assumptions it makes your

00:22:08,549 --> 00:22:16,320
life well it protects you a bit one of

00:22:14,280 --> 00:22:20,400
those assumptions is that you might be

00:22:16,320 --> 00:22:23,590
the only one remembering data privacy

00:22:20,400 --> 00:22:28,780
just act on that law or on that rule it

00:22:23,590 --> 00:22:33,790
will help you sooner or later foreign

00:22:28,780 --> 00:22:40,000
colleagues hmm no that's not meant as

00:22:33,790 --> 00:22:42,510
some political statement or some feeling

00:22:40,000 --> 00:22:45,820
against them foreign colleagues means

00:22:42,510 --> 00:22:50,350
people from other countries may not be

00:22:45,820 --> 00:22:55,750
used to the data privacy laws ruling

00:22:50,350 --> 00:22:57,730
your company so they may especially when

00:22:55,750 --> 00:23:01,300
they work as developers because they are

00:22:57,730 --> 00:23:04,000
cheaper say developers in an location

00:23:01,300 --> 00:23:06,640
abroad they may have hopes and they may

00:23:04,000 --> 00:23:10,380
want to access data which you are not

00:23:06,640 --> 00:23:15,090
allowed to give them for legal reasons

00:23:10,380 --> 00:23:20,440
so especially with foreign colleagues my

00:23:15,090 --> 00:23:22,840
recommendation is really check privacy

00:23:20,440 --> 00:23:25,360
laws and discuss them with foreign

00:23:22,840 --> 00:23:27,820
colleagues and point them at the

00:23:25,360 --> 00:23:33,000
restrictions which are governing your

00:23:27,820 --> 00:23:36,300
work it may really make the difference

00:23:33,000 --> 00:23:40,010
because they will

00:23:36,300 --> 00:23:43,800
we really surprised they probably know

00:23:40,010 --> 00:23:47,430
their IT work they know what to do

00:23:43,800 --> 00:23:52,320
technically but they may forget the

00:23:47,430 --> 00:23:55,250
legal aspect and when people ask you for

00:23:52,320 --> 00:23:59,390
some data from the recovery database

00:23:55,250 --> 00:24:02,870
check the schema they want to access and

00:23:59,390 --> 00:24:07,710
if you really don't know what it means

00:24:02,870 --> 00:24:12,150
just ask them better safe than sorry as

00:24:07,710 --> 00:24:14,490
I said before and remember all the

00:24:12,150 --> 00:24:16,680
various papers you signed when starting

00:24:14,490 --> 00:24:19,320
your work as a database administrator or

00:24:16,680 --> 00:24:22,650
as a developer or system administrator

00:24:19,320 --> 00:24:28,980
you probably signed some confidentiality

00:24:22,650 --> 00:24:33,660
rules and you better remember them what

00:24:28,980 --> 00:24:37,110
I hope will not you will not need but

00:24:33,660 --> 00:24:40,800
what I mentioned for completeness is the

00:24:37,110 --> 00:24:44,430
long-term company interest is much more

00:24:40,800 --> 00:24:47,610
important than the short-term desire of

00:24:44,430 --> 00:24:54,330
any colleague who says i need those data

00:24:47,610 --> 00:24:57,600
for my work we may think of some diesel

00:24:54,330 --> 00:25:02,870
engines we may think of any other

00:24:57,600 --> 00:25:06,600
scandals about mishandling of data

00:25:02,870 --> 00:25:09,800
better take care that you consider the

00:25:06,600 --> 00:25:15,300
long-term interest in not the short-term

00:25:09,800 --> 00:25:18,990
joy of your colleague and well in the

00:25:15,300 --> 00:25:22,110
worst case you may be you have to do to

00:25:18,990 --> 00:25:24,180
be disobedient I hope for everybody of

00:25:22,110 --> 00:25:30,270
you that it doesn't affect you that I

00:25:24,180 --> 00:25:33,660
want to affect you but who knows so why

00:25:30,270 --> 00:25:35,760
did I mention all these items well I

00:25:33,660 --> 00:25:40,050
mentioned them because what you

00:25:35,760 --> 00:25:42,420
typically may get as a DBA or system

00:25:40,050 --> 00:25:45,660
administrator is a request from

00:25:42,420 --> 00:25:48,720
development we need those data we need

00:25:45,660 --> 00:25:50,279
those life data for our development

00:25:48,720 --> 00:25:56,279
purposes for our development

00:25:50,279 --> 00:25:59,969
its development typically is not behind

00:25:56,279 --> 00:26:03,109
the firewall because they have easier

00:25:59,969 --> 00:26:07,049
access to the outside I should have

00:26:03,109 --> 00:26:09,289
development typically may not have

00:26:07,049 --> 00:26:12,239
signed the same confidential

00:26:09,289 --> 00:26:16,909
confidentiality papers which you as

00:26:12,239 --> 00:26:20,759
administrators may have signed so in

00:26:16,909 --> 00:26:25,169
theory development is a less safe area

00:26:20,759 --> 00:26:28,379
than production is nothing to be said

00:26:25,169 --> 00:26:31,979
against developers but you have to

00:26:28,379 --> 00:26:34,469
consider that what we typically want to

00:26:31,979 --> 00:26:38,219
do is they want to analyze how their

00:26:34,469 --> 00:26:42,330
features are used are people really

00:26:38,219 --> 00:26:46,440
entering those values do they make use

00:26:42,330 --> 00:26:48,629
of the newest feature edit how high as a

00:26:46,440 --> 00:26:53,489
percentage what's the distribution etc

00:26:48,629 --> 00:26:56,879
etc it's a typical developer desire they

00:26:53,489 --> 00:26:59,279
may want to use live data to have the

00:26:56,879 --> 00:27:03,929
real volume and to have a real-world

00:26:59,279 --> 00:27:09,570
value distribution that's also quite

00:27:03,929 --> 00:27:13,049
typical they may want to see the data

00:27:09,570 --> 00:27:15,479
volume so that they can run explain and

00:27:13,049 --> 00:27:22,289
can check whether it pays to add an

00:27:15,479 --> 00:27:24,690
index or not or they want to check which

00:27:22,289 --> 00:27:32,369
actions are possible which actions will

00:27:24,690 --> 00:27:35,729
take how long etc etc schema changes now

00:27:32,369 --> 00:27:40,799
in all those cases you have the legal

00:27:35,729 --> 00:27:44,339
aspects of the law you have the aspects

00:27:40,799 --> 00:27:49,049
of the data privacy statement which your

00:27:44,339 --> 00:27:51,089
company is due to users and you have of

00:27:49,049 --> 00:27:56,099
course the obligation you yourself

00:27:51,089 --> 00:28:01,309
signed that's three different items and

00:27:56,099 --> 00:28:01,309
all of them will matter in this moment

00:28:02,129 --> 00:28:11,470
you better check them and when you have

00:28:08,049 --> 00:28:14,619
done that you will need to find a

00:28:11,470 --> 00:28:19,389
solution how can you satisfy the

00:28:14,619 --> 00:28:23,830
developer desires while not violating

00:28:19,389 --> 00:28:27,070
your legal obligations so for instance

00:28:23,830 --> 00:28:28,960
in the recovery instance after recovery

00:28:27,070 --> 00:28:32,710
has been checked and recovery was okay

00:28:28,960 --> 00:28:35,139
you can be lead critical data if they

00:28:32,710 --> 00:28:37,659
are confidential as long as developers

00:28:35,139 --> 00:28:40,450
don't need those tables or those fields

00:28:37,659 --> 00:28:43,809
just delete them update them to blank or

00:28:40,450 --> 00:28:47,710
whatever so that they will not get

00:28:43,809 --> 00:28:50,350
exported you can replace them by John

00:28:47,710 --> 00:28:54,309
Doe or whatever theory kamusta man in

00:28:50,350 --> 00:28:55,960
German no problem as long as the

00:28:54,309 --> 00:28:59,470
distribution of values does not matter

00:28:55,960 --> 00:29:02,320
having all values the same will not

00:28:59,470 --> 00:29:05,859
cause trouble and you can of course do a

00:29:02,320 --> 00:29:08,950
selective export export only those data

00:29:05,859 --> 00:29:12,609
which you which developers may get which

00:29:08,950 --> 00:29:18,970
may leave the protected area while not

00:29:12,609 --> 00:29:21,789
exporting the others you can if the if

00:29:18,970 --> 00:29:24,759
it's really critical data and the data

00:29:21,789 --> 00:29:26,980
must not be all the data must be kept

00:29:24,759 --> 00:29:30,999
with the original values to be useful

00:29:26,980 --> 00:29:33,970
you would have to deny the export now

00:29:30,999 --> 00:29:36,159
denying the export sounds like the

00:29:33,970 --> 00:29:40,830
developers won't be able to do what they

00:29:36,159 --> 00:29:44,590
need yes they will why can't developers

00:29:40,830 --> 00:29:47,159
provide a script which you then run in

00:29:44,590 --> 00:29:51,340
your in the production environment and

00:29:47,159 --> 00:29:54,429
just supply the results say statistics

00:29:51,340 --> 00:29:57,039
about value distribution also so you

00:29:54,429 --> 00:29:59,859
would run the script on live data but

00:29:57,039 --> 00:30:04,119
not let the live data leave the

00:29:59,859 --> 00:30:06,129
protected area developers should be able

00:30:04,119 --> 00:30:09,009
to provide a script and you definitely

00:30:06,129 --> 00:30:10,809
will be able to run it if not there's

00:30:09,009 --> 00:30:13,230
something else really wrong in your

00:30:10,809 --> 00:30:13,230
environment

00:30:15,789 --> 00:30:24,950
so basically the result is like this you

00:30:20,570 --> 00:30:27,799
have a production instance you take a

00:30:24,950 --> 00:30:32,419
backup you restore it onto on your

00:30:27,799 --> 00:30:35,990
recovery instance you run scripts to

00:30:32,419 --> 00:30:39,110
delete or update critical data so that

00:30:35,990 --> 00:30:42,019
the result is not really critical

00:30:39,110 --> 00:30:44,870
anymore and the result you can then

00:30:42,019 --> 00:30:47,809
export outside the production firewall

00:30:44,870 --> 00:30:49,809
so that developers can import it onto

00:30:47,809 --> 00:30:59,750
their machines and do whatever they need

00:30:49,809 --> 00:31:08,000
to test no real problem just a bit of

00:30:59,750 --> 00:31:10,669
implementation effort yes now everything

00:31:08,000 --> 00:31:13,220
which I already mentioned is something

00:31:10,669 --> 00:31:15,860
you don't want to do manually you want

00:31:13,220 --> 00:31:18,769
to automate it you don't want to run the

00:31:15,860 --> 00:31:22,519
same exporter the same anonymization etc

00:31:18,769 --> 00:31:27,860
etc and that automation should be

00:31:22,519 --> 00:31:31,809
governed by some principles i will give

00:31:27,860 --> 00:31:34,279
examples now which are written for mysql

00:31:31,809 --> 00:31:36,200
well you will have to change them to

00:31:34,279 --> 00:31:39,309
your company's rules and to your

00:31:36,200 --> 00:31:42,950
company's database system of course and

00:31:39,309 --> 00:31:44,600
when you try read the examples the

00:31:42,950 --> 00:31:46,309
Kinect variable contains all the

00:31:44,600 --> 00:31:52,159
connection parameters use a password

00:31:46,309 --> 00:31:55,370
host and DB is the database on which

00:31:52,159 --> 00:32:02,960
they are operating or in Oracle speak

00:31:55,370 --> 00:32:05,360
the schema the principles are that you

00:32:02,960 --> 00:32:10,639
don't want to execute routine task

00:32:05,360 --> 00:32:13,700
manually that's fairly obvious everybody

00:32:10,639 --> 00:32:19,269
wants to automate to not repeat the same

00:32:13,700 --> 00:32:22,610
dull stuff day by day you want the

00:32:19,269 --> 00:32:26,200
script itself to contain the success

00:32:22,610 --> 00:32:30,370
checks and you will

00:32:26,200 --> 00:32:32,410
every now and then do a manual check to

00:32:30,370 --> 00:32:35,770
be sure your logic is still correct and

00:32:32,410 --> 00:32:40,780
the script check is correct but that's a

00:32:35,770 --> 00:32:44,920
rare event you want to be alerted about

00:32:40,780 --> 00:32:47,400
errors by mail typically not by SMS

00:32:44,920 --> 00:32:49,900
reaching you in the night because

00:32:47,400 --> 00:32:52,390
whatever may be the problem with your

00:32:49,900 --> 00:32:56,710
export script it's not worth you getting

00:32:52,390 --> 00:33:00,060
up at midnight and of course you want

00:32:56,710 --> 00:33:03,540
the scripts to adapt themselves

00:33:00,060 --> 00:33:07,720
automatically to changed environments

00:33:03,540 --> 00:33:10,540
you don't want to make to maintain your

00:33:07,720 --> 00:33:13,780
script and add a new database once a new

00:33:10,540 --> 00:33:17,560
database is added to your installation

00:33:13,780 --> 00:33:21,610
on your table you want the script to

00:33:17,560 --> 00:33:24,420
check for that automated and if it's a

00:33:21,610 --> 00:33:28,030
new table will don't do anything to it

00:33:24,420 --> 00:33:31,270
for example don't export it if it's not

00:33:28,030 --> 00:33:34,360
yet checked so you want to just rip 2l

00:33:31,270 --> 00:33:41,380
to the safe side by its own built-in

00:33:34,360 --> 00:33:43,570
checks which parts will you need well

00:33:41,380 --> 00:33:46,030
obviously you need a backup script

00:33:43,570 --> 00:33:51,040
that's a given and mentioned here only

00:33:46,030 --> 00:33:54,280
for completeness you probably want some

00:33:51,040 --> 00:33:57,220
automation to clean up old obsolete logs

00:33:54,280 --> 00:33:59,920
to get them off your disk purge log in

00:33:57,220 --> 00:34:05,500
MySQL speak whatever your database

00:33:59,920 --> 00:34:08,800
system calls it you need a script to do

00:34:05,500 --> 00:34:11,350
a restore of a given back up that's what

00:34:08,800 --> 00:34:14,440
you need for recovery test and that's of

00:34:11,350 --> 00:34:17,020
you also what you need in case you have

00:34:14,440 --> 00:34:20,800
to restore it on the real machine if the

00:34:17,020 --> 00:34:28,540
approach production data got defect

00:34:20,800 --> 00:34:31,690
broken crashed whatever in case you are

00:34:28,540 --> 00:34:34,780
running multiple databases which is all

00:34:31,690 --> 00:34:38,050
my terrible database instances sorry you

00:34:34,780 --> 00:34:39,730
probably want to do something for

00:34:38,050 --> 00:34:42,100
automated selection

00:34:39,730 --> 00:34:44,649
I have always mentioned you need one

00:34:42,100 --> 00:34:47,100
recovery machine though if you are

00:34:44,649 --> 00:34:49,230
running multiple database instances

00:34:47,100 --> 00:34:51,909
probably you will have several

00:34:49,230 --> 00:34:54,639
production instances but only one

00:34:51,909 --> 00:34:57,280
recovery instance assuming that note to

00:34:54,639 --> 00:35:01,150
production machines fail in the same on

00:34:57,280 --> 00:35:03,310
the same day yes that's the typical

00:35:01,150 --> 00:35:07,840
assumptions you don't expect double

00:35:03,310 --> 00:35:10,990
arrows I know flooding of fire in the

00:35:07,840 --> 00:35:14,200
data center is will affect all of them

00:35:10,990 --> 00:35:16,450
but for that you would need a spare data

00:35:14,200 --> 00:35:18,310
center somewhere else that's beyond of

00:35:16,450 --> 00:35:20,980
what I cover here you can have that of

00:35:18,310 --> 00:35:28,180
course but that's not what i expect the

00:35:20,980 --> 00:35:31,090
typical installation to have you will

00:35:28,180 --> 00:35:35,500
need a strip to check which schemas are

00:35:31,090 --> 00:35:38,320
in your country store that's will come

00:35:35,500 --> 00:35:40,960
very handy later you will need to handle

00:35:38,320 --> 00:35:43,990
user and password for that schema in an

00:35:40,960 --> 00:35:49,030
automated way and you will need scripts

00:35:43,990 --> 00:35:52,810
to make the data anonymous now look at

00:35:49,030 --> 00:35:55,840
the examples about the backup script I

00:35:52,810 --> 00:35:58,060
don't give code because it's too

00:35:55,840 --> 00:36:00,550
specific to your setup to your

00:35:58,060 --> 00:36:03,660
environment to your database I just

00:36:00,550 --> 00:36:06,369
mentioned what it should do definitely

00:36:03,660 --> 00:36:09,160
generate names which contain it a date

00:36:06,369 --> 00:36:11,500
and time stamp art because you want to

00:36:09,160 --> 00:36:15,700
know how old your backup is if you

00:36:11,500 --> 00:36:18,850
recover it you will delete old obsolete

00:36:15,700 --> 00:36:20,530
backups if they are kept on disk well if

00:36:18,850 --> 00:36:22,710
they are kept on tape your tape

00:36:20,530 --> 00:36:27,220
retention policy will take care of that

00:36:22,710 --> 00:36:30,670
you will have it started by cron what I

00:36:27,220 --> 00:36:33,040
would not put into the backup script is

00:36:30,670 --> 00:36:35,230
monitoring for disk space because you

00:36:33,040 --> 00:36:37,390
need monitoring anyways and I would not

00:36:35,230 --> 00:36:39,460
handle the recovery machine and the

00:36:37,390 --> 00:36:42,790
backup space and so on different from

00:36:39,460 --> 00:36:45,880
other disk space I would have that all

00:36:42,790 --> 00:36:49,080
be handled by the same uniform mechanism

00:36:45,880 --> 00:36:49,080
throughout your installation

00:36:49,740 --> 00:36:57,480
it will be helpful if your backup script

00:36:52,560 --> 00:37:01,200
takes care to write the backup history

00:36:57,480 --> 00:37:05,340
into the database that comes very handy

00:37:01,200 --> 00:37:07,530
that you can check sorry that you can

00:37:05,340 --> 00:37:11,310
check when your database was backed up

00:37:07,530 --> 00:37:13,860
last and what the result was so for

00:37:11,310 --> 00:37:17,040
example MySQL enterprise backup does

00:37:13,860 --> 00:37:19,470
write such a strip from the tool if it

00:37:17,040 --> 00:37:25,040
does not well of course your script can

00:37:19,470 --> 00:37:28,230
just do an insert into such a table an

00:37:25,040 --> 00:37:33,080
effect which we stumbled upon in that

00:37:28,230 --> 00:37:35,220
case i'm building the slides on is that

00:37:33,080 --> 00:37:37,290
it's a question whether you will

00:37:35,220 --> 00:37:41,880
replicate the backup history to a slave

00:37:37,290 --> 00:37:44,060
or not on the one hand you didn't you

00:37:41,880 --> 00:37:48,330
back it up the master not the slave

00:37:44,060 --> 00:37:50,700
typically so you don't the slave was not

00:37:48,330 --> 00:37:52,880
picked up so having the backup history

00:37:50,700 --> 00:37:55,770
there would be wrong on the other hand

00:37:52,880 --> 00:37:57,660
the slave doesn't contain any other data

00:37:55,770 --> 00:37:59,880
then you're already backed up so from

00:37:57,660 --> 00:38:04,350
that point of view a backup history also

00:37:59,880 --> 00:38:06,660
applies to the slave in our case it was

00:38:04,350 --> 00:38:09,660
really necessary to have the backup

00:38:06,660 --> 00:38:14,640
history because we built our perch log

00:38:09,660 --> 00:38:18,000
on it so we were running a master master

00:38:14,640 --> 00:38:20,130
replication taking the backup of on only

00:38:18,000 --> 00:38:22,950
one side by purging the log on both

00:38:20,130 --> 00:38:25,680
sides of course and so we needed to

00:38:22,950 --> 00:38:29,250
backup history on the other side why did

00:38:25,680 --> 00:38:33,060
we need it well as a sad perch log we

00:38:29,250 --> 00:38:37,770
would take the backup history select the

00:38:33,060 --> 00:38:43,220
start time of the successful backup of

00:38:37,770 --> 00:38:47,910
the last but one time descending limit

00:38:43,220 --> 00:38:50,880
11 offset one so we would get the backup

00:38:47,910 --> 00:38:54,000
time of the time of the last part one

00:38:50,880 --> 00:38:57,210
successful backup would write that into

00:38:54,000 --> 00:38:59,820
a variable called timestamp and then

00:38:57,210 --> 00:39:03,410
generate a purge master locks statement

00:38:59,820 --> 00:39:03,410
before dollar timestamp

00:39:05,630 --> 00:39:10,349
for that of course we needed the time

00:39:08,549 --> 00:39:14,849
stamp on both sides and the back of

00:39:10,349 --> 00:39:16,740
history on both sides again do it the

00:39:14,849 --> 00:39:18,990
way you like it do it the way you prefer

00:39:16,740 --> 00:39:22,289
add what you what's missing what your

00:39:18,990 --> 00:39:25,109
tool doesn't provide and key you can get

00:39:22,289 --> 00:39:28,650
that automated so there is no need to do

00:39:25,109 --> 00:39:32,430
any manual perch locks because the

00:39:28,650 --> 00:39:35,369
script will do that if you don't have a

00:39:32,430 --> 00:39:39,779
history while assuming you to a backup

00:39:35,369 --> 00:39:42,990
every night then a log which is older

00:39:39,779 --> 00:39:50,190
than 26 hours should be obsolete depends

00:39:42,990 --> 00:39:52,410
on your policies restore to a restore

00:39:50,190 --> 00:39:56,190
script you would pass the backup name as

00:39:52,410 --> 00:39:58,950
a parameter typically you need that in

00:39:56,190 --> 00:40:04,980
case you want to inquire into one

00:39:58,950 --> 00:40:08,690
specific database state so you need the

00:40:04,980 --> 00:40:12,989
possibility to do a selective restore

00:40:08,690 --> 00:40:16,680
definitely if you do a restore and are

00:40:12,989 --> 00:40:19,369
not on the dedicated restore server you

00:40:16,680 --> 00:40:22,259
want to have interactive confirmation

00:40:19,369 --> 00:40:23,849
you want to prevent yourself against an

00:40:22,259 --> 00:40:27,989
accidental restore on a production

00:40:23,849 --> 00:40:30,029
machine that's the background I would

00:40:27,989 --> 00:40:34,470
never let the restore script run

00:40:30,029 --> 00:40:37,769
automated on a non dedicated restore

00:40:34,470 --> 00:40:42,180
machine the risk of ruining my data is

00:40:37,769 --> 00:40:44,700
much too high it will delete all

00:40:42,180 --> 00:40:48,029
existing database contents and it will

00:40:44,700 --> 00:40:50,430
the Bekaa load the back up and start the

00:40:48,029 --> 00:40:57,500
database instance that's pretty obvious

00:40:50,430 --> 00:41:02,970
I talked about the restore repa

00:40:57,500 --> 00:41:06,660
you need that to check that all database

00:41:02,970 --> 00:41:10,680
instances have their backups recovery

00:41:06,660 --> 00:41:14,280
tested as a routine measure again and

00:41:10,680 --> 00:41:17,070
again not only once when you install

00:41:14,280 --> 00:41:20,820
them but as a routine step forever

00:41:17,070 --> 00:41:25,170
onwards so the restore rapper would only

00:41:20,820 --> 00:41:30,390
run on the dedicated restore host you

00:41:25,170 --> 00:41:32,849
probably can give it a hostname and if

00:41:30,390 --> 00:41:36,839
you give that it will check the lace

00:41:32,849 --> 00:41:39,480
last backup of that host and restore

00:41:36,839 --> 00:41:42,630
that but if you do not give it a

00:41:39,480 --> 00:41:46,280
hostname the rapper will check all

00:41:42,630 --> 00:41:50,460
instances in a round-robin ski schedule

00:41:46,280 --> 00:41:53,339
today number one tomorrow number two the

00:41:50,460 --> 00:41:55,650
day after number three etc until you

00:41:53,339 --> 00:42:00,650
have checked them all and then start

00:41:55,650 --> 00:42:04,020
with the first one again and once it has

00:42:00,650 --> 00:42:06,030
determined which instance to check it

00:42:04,020 --> 00:42:11,040
will call the restore script with that

00:42:06,030 --> 00:42:13,260
backup hostname round-robin I said well

00:42:11,040 --> 00:42:15,960
that's pretty trivial after all we are

00:42:13,260 --> 00:42:19,820
doing linux probably or some other unix

00:42:15,960 --> 00:42:23,150
platform so we have a decent shell

00:42:19,820 --> 00:42:26,970
nowadays the bash can handle arrays so

00:42:23,150 --> 00:42:31,619
you would list all the rectory names of

00:42:26,970 --> 00:42:35,130
your backup and by grep filter out those

00:42:31,619 --> 00:42:37,290
which are not database backups some

00:42:35,130 --> 00:42:40,730
others say it's for a file system of its

00:42:37,290 --> 00:42:45,920
own you would filter out lost and found

00:42:40,730 --> 00:42:50,030
so you have the host list as an array

00:42:45,920 --> 00:42:53,700
you would determine its number of hosts

00:42:50,030 --> 00:42:57,450
you would ask your date program for the

00:42:53,700 --> 00:43:01,170
day of the year running from 1 to 3 65

00:42:57,450 --> 00:43:03,599
or 366 depending on the year and then

00:43:01,170 --> 00:43:07,619
you would run a normal modulo operation

00:43:03,599 --> 00:43:10,230
they module a number of hosts and that

00:43:07,619 --> 00:43:15,380
will round robin iterate through out

00:43:10,230 --> 00:43:18,090
your pickups and every day you will take

00:43:15,380 --> 00:43:19,590
the backup of a next machine until you

00:43:18,090 --> 00:43:23,330
have reached the end of the list and

00:43:19,590 --> 00:43:23,330
will then start from the beginning again

00:43:23,780 --> 00:43:36,030
let's show that simple I said you will

00:43:33,210 --> 00:43:41,550
check which which schema you are

00:43:36,030 --> 00:43:43,680
handling so you would check your the

00:43:41,550 --> 00:43:48,030
number of early the list of your schemas

00:43:43,680 --> 00:43:52,109
get rid of the system schemas and what

00:43:48,030 --> 00:43:55,770
then in that schema apply somewhere

00:43:52,109 --> 00:43:58,290
somehow the user and password which you

00:43:55,770 --> 00:44:00,390
have predefined for that probably

00:43:58,290 --> 00:44:04,859
limited limited to the restore host

00:44:00,390 --> 00:44:08,780
which can be done in MySQL and you could

00:44:04,859 --> 00:44:12,210
then check whether that's a legal user

00:44:08,780 --> 00:44:14,570
can it connect if not then obviously

00:44:12,210 --> 00:44:17,480
that schema is not prepared for

00:44:14,570 --> 00:44:20,930
selective export and you would skip it

00:44:17,480 --> 00:44:25,170
fail-safe don't do anything on it and

00:44:20,930 --> 00:44:28,140
then you would search your directory

00:44:25,170 --> 00:44:31,260
where the scripts are located for the

00:44:28,140 --> 00:44:33,330
check script or anonymization or export

00:44:31,260 --> 00:44:36,810
script which could be a shell scrub or

00:44:33,330 --> 00:44:39,750
SQL list of SQL commands and you would

00:44:36,810 --> 00:44:44,190
apply that that's you can automate all

00:44:39,750 --> 00:44:46,410
that set it up once and then doesn't

00:44:44,190 --> 00:44:48,450
matter whether your developers give you

00:44:46,410 --> 00:44:54,000
a shell script on SQL list of SQL

00:44:48,450 --> 00:44:58,369
commands and then you could ask your

00:44:54,000 --> 00:45:01,850
database which tables there are and good

00:44:58,369 --> 00:45:04,590
what does it here it could truncate them

00:45:01,850 --> 00:45:10,140
for example if you want to protect those

00:45:04,590 --> 00:45:19,730
data and allow just the selected t1 t2

00:45:10,140 --> 00:45:22,619
t3 to be exported you can't dedicate it

00:45:19,730 --> 00:45:28,380
apply an update statement

00:45:22,619 --> 00:45:32,400
to make personal names etc confidential

00:45:28,380 --> 00:45:35,430
or to keep them you could do a count

00:45:32,400 --> 00:45:37,529
star to check the number of rows for

00:45:35,430 --> 00:45:39,690
your sanity checks how much how many

00:45:37,529 --> 00:45:42,119
rows do i have in recovery how many do I

00:45:39,690 --> 00:45:48,960
have on production data doesn't match

00:45:42,119 --> 00:45:53,339
the prop roughly very often you want to

00:45:48,960 --> 00:45:57,109
see the database schema say then you

00:45:53,339 --> 00:46:00,809
develop and needs it no problem and

00:45:57,109 --> 00:46:04,710
there is as I said before no limit what

00:46:00,809 --> 00:46:13,710
you can do if there were no questions

00:46:04,710 --> 00:46:21,990
yet then I guess they will come now any

00:46:13,710 --> 00:46:24,470
questions at this time no and then thank

00:46:21,990 --> 00:46:24,470
you very much

00:46:27,579 --> 00:46:29,640

YouTube URL: https://www.youtube.com/watch?v=KIg7jVHlAXI


