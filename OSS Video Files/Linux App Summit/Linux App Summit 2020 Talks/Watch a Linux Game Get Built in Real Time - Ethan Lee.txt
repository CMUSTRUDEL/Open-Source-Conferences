Title: Watch a Linux Game Get Built in Real Time - Ethan Lee
Publication date: 2020-11-15
Playlist: Linux App Summit 2020 Talks
Description: 
	There is a lot of discussion about how apps should be built, but has anyone watched an app actually get built? Behold, a something-hour time slot where you literally just watch Linux game porter Ethan Lee build Linux games. What you will see is completely uncensored and is actually, seriously how he builds programs that may very well be installed on your very computer at this exact moment in time. No joke. Compare the resulting footage to everything else you see at the summit and attempt to measure the delta accordingly.

Ethan "flibitijibibo" Lee has developed over 60 commercial Linux games over the past 8 years, including FEZ, Celeste, Streets of Rage 4, Bastion, Transistor, VVVVVV, Super Hexagon, Proteus, Eversion, Dust: An Elysian Tail, 5D Chess (yes, an actual playable 5D Chess), and Dream Daddy: A Dad Dating Simulator. He is extremely sorry for this so-called presentation.
Captions: 
	00:00:05,759 --> 00:00:08,960
yeah last time to life code is really

00:00:07,440 --> 00:00:12,320
terrible in this situation that's what

00:00:08,960 --> 00:00:12,320
people are waiting for right

00:00:12,480 --> 00:00:17,840
i think i'm live amazing we can hear you

00:00:15,360 --> 00:00:20,000
nice and loud

00:00:17,840 --> 00:00:20,000
hello

00:00:21,119 --> 00:00:27,039
all right i did not hear any of that

00:00:23,199 --> 00:00:27,039
anyway i think the audio's alright

00:00:27,199 --> 00:00:33,760
uh i'm gonna mute my output okay cool

00:00:30,320 --> 00:00:36,480
so we're live all right so uh thanks

00:00:33,760 --> 00:00:38,160
to everyone for being here today and

00:00:36,480 --> 00:00:40,960
more importantly thanks to linux

00:00:38,160 --> 00:00:42,320
app summit for taking what was probably

00:00:40,960 --> 00:00:44,719
the strangest

00:00:42,320 --> 00:00:45,360
worded pitch that they've probably ever

00:00:44,719 --> 00:00:48,399
gotten

00:00:45,360 --> 00:00:50,239
so um hopefully it'll be worth it but

00:00:48,399 --> 00:00:52,480
my name is ethan uh you may know me as

00:00:50,239 --> 00:00:54,960
flibbit if you want to be informal uh

00:00:52,480 --> 00:00:56,399
i make linux games uh so many that

00:00:54,960 --> 00:00:57,199
usually when i tell people what i worked

00:00:56,399 --> 00:00:58,879
on

00:00:57,199 --> 00:01:00,320
i tell them to go to this page and then

00:00:58,879 --> 00:01:01,680
i tell them to scroll down

00:01:00,320 --> 00:01:03,440
until they get to the bottom here's a

00:01:01,680 --> 00:01:06,479
fast version

00:01:03,440 --> 00:01:08,640
oh that frame looks great

00:01:06,479 --> 00:01:09,600
but yeah i mean i'll get there

00:01:08,640 --> 00:01:13,200
eventually

00:01:09,600 --> 00:01:16,320
and okay we're at the bottom so yeah uh

00:01:13,200 --> 00:01:18,960
i think it's well let's find out it is

00:01:16,320 --> 00:01:20,080
65 games that i've personally maintained

00:01:18,960 --> 00:01:22,159
i personally shipped

00:01:20,080 --> 00:01:24,240
i've worked on countless more i've

00:01:22,159 --> 00:01:27,600
shipped on many many platforms i think

00:01:24,240 --> 00:01:30,560
fna which is my main project uh

00:01:27,600 --> 00:01:32,240
ships for i think hills room i think

00:01:30,560 --> 00:01:34,400
it's like 11 platforms now

00:01:32,240 --> 00:01:36,400
but anyway linux is my primary platform

00:01:34,400 --> 00:01:39,439
and that's what i wanted to talk about

00:01:36,400 --> 00:01:40,000
my build system in particular because i

00:01:39,439 --> 00:01:41,680
remember

00:01:40,000 --> 00:01:43,439
like a couple months ago i think gaming

00:01:41,680 --> 00:01:46,960
on linux kind of

00:01:43,439 --> 00:01:50,159
posted an article about um

00:01:46,960 --> 00:01:50,880
this particular conference and it had a

00:01:50,159 --> 00:01:54,000
lot of things

00:01:50,880 --> 00:01:55,119
about stuff like flat pack and snap and

00:01:54,000 --> 00:01:57,439
the way things are packaged and

00:01:55,119 --> 00:02:00,799
distributed and i've

00:01:57,439 --> 00:02:02,640
over the years been um

00:02:00,799 --> 00:02:04,799
pitched things like flat pack and snap a

00:02:02,640 --> 00:02:07,840
lot uh i think sort of the

00:02:04,799 --> 00:02:08,080
common thing that i've gotten i've kind

00:02:07,840 --> 00:02:11,200
of

00:02:08,080 --> 00:02:12,879
realized is that um nobody really knows

00:02:11,200 --> 00:02:16,400
how games are packaged in ships

00:02:12,879 --> 00:02:18,640
because a games are pretty much unlike

00:02:16,400 --> 00:02:19,440
any other software that you build a run

00:02:18,640 --> 00:02:21,520
and second

00:02:19,440 --> 00:02:22,800
the games industry is very very very

00:02:21,520 --> 00:02:24,480
very secretive

00:02:22,800 --> 00:02:26,720
and so even if you wanted to know it's

00:02:24,480 --> 00:02:29,680
kind of hard to get a good sense of

00:02:26,720 --> 00:02:31,280
how that all works for triple a that's

00:02:29,680 --> 00:02:34,879
still true but for independent games

00:02:31,280 --> 00:02:34,879
we're a lot more open and can kind of be

00:02:35,360 --> 00:02:38,400
more transparent about how we do things

00:02:36,879 --> 00:02:39,519
so that's what i'm doing today i'm just

00:02:38,400 --> 00:02:41,599
going to go

00:02:39,519 --> 00:02:43,920
from the very start to the very end so

00:02:41,599 --> 00:02:47,280
there's no questions as to

00:02:43,920 --> 00:02:49,280
what i use how i like things to be done

00:02:47,280 --> 00:02:50,400
and how it's distributed and all that

00:02:49,280 --> 00:02:53,360
stuff

00:02:50,400 --> 00:02:54,400
so hopefully this will be a good way to

00:02:53,360 --> 00:02:56,480
kind of

00:02:54,400 --> 00:02:58,080
measure a delta in a way which is like

00:02:56,480 --> 00:02:59,840
hey if i'm introducing this thing

00:02:58,080 --> 00:03:02,319
that is meant to be used for linux app

00:02:59,840 --> 00:03:03,680
development by introducing it into this

00:03:02,319 --> 00:03:05,680
context am i

00:03:03,680 --> 00:03:07,760
actually making the developer experience

00:03:05,680 --> 00:03:09,200
better or am i

00:03:07,760 --> 00:03:11,440
just adding more things that they didn't

00:03:09,200 --> 00:03:12,800
ask for or am i

00:03:11,440 --> 00:03:14,879
accidentally taking something away that

00:03:12,800 --> 00:03:17,840
i didn't realize they really needed

00:03:14,879 --> 00:03:18,959
things like that so without further ado

00:03:17,840 --> 00:03:20,959
we'll basically get started

00:03:18,959 --> 00:03:22,959
um we'll finally get started basically

00:03:20,959 --> 00:03:24,400
what you're looking at is a

00:03:22,959 --> 00:03:26,000
close to a replica of my development

00:03:24,400 --> 00:03:28,159
environment i use node three i have a

00:03:26,000 --> 00:03:30,319
couple extensions that aren't on here

00:03:28,159 --> 00:03:32,000
um most of my life is in a terminal

00:03:30,319 --> 00:03:34,080
you'll notice there's no like id

00:03:32,000 --> 00:03:35,040
or anything like that i will get to that

00:03:34,080 --> 00:03:38,480
actually

00:03:35,040 --> 00:03:41,760
um and this is this fluid amd

00:03:38,480 --> 00:03:44,159
which is my amd testing box which

00:03:41,760 --> 00:03:46,000
normally i don't use for development but

00:03:44,159 --> 00:03:48,959
i use fedora on all my machines

00:03:46,000 --> 00:03:50,640
in the office so it really is very easy

00:03:48,959 --> 00:03:51,360
for me to kind of replicate it at that

00:03:50,640 --> 00:03:53,760
point

00:03:51,360 --> 00:03:54,480
um so yeah basically what we're gonna do

00:03:53,760 --> 00:03:57,920
is we're gonna start

00:03:54,480 --> 00:03:59,280
with sort of the what i do sort of

00:03:57,920 --> 00:04:00,640
day-to-day which is just as i'm

00:03:59,280 --> 00:04:02,000
developing things i'm not actually

00:04:00,640 --> 00:04:02,799
shipping anything because that actually

00:04:02,000 --> 00:04:04,879
does play into

00:04:02,799 --> 00:04:06,159
the shipping part a little bit um

00:04:04,879 --> 00:04:09,439
there's actually two

00:04:06,159 --> 00:04:10,959
parts to this which is uh c sharp and c

00:04:09,439 --> 00:04:12,239
plus games which are the two that i

00:04:10,959 --> 00:04:13,680
normally deal with because i deal with

00:04:12,239 --> 00:04:16,239
either custom engines

00:04:13,680 --> 00:04:17,040
or i'll deal with games with either xna

00:04:16,239 --> 00:04:18,880
or fna

00:04:17,040 --> 00:04:20,239
sometimes monogamy that i kind of which

00:04:18,880 --> 00:04:22,720
fna into

00:04:20,239 --> 00:04:23,520
um so we'll start with the sequels plus

00:04:22,720 --> 00:04:25,759
side because

00:04:23,520 --> 00:04:27,120
that's the one that this will know about

00:04:25,759 --> 00:04:28,240
uh

00:04:27,120 --> 00:04:29,680
let's see if i can type oh by the way

00:04:28,240 --> 00:04:30,560
mechanical keyboard so get ready for

00:04:29,680 --> 00:04:33,919
that

00:04:30,560 --> 00:04:35,919
um so we'll start with a game that i

00:04:33,919 --> 00:04:37,759
actually can disclose because

00:04:35,919 --> 00:04:39,120
how would i show it off development if

00:04:37,759 --> 00:04:39,680
i'm going to have to reveal things like

00:04:39,120 --> 00:04:42,639
source

00:04:39,680 --> 00:04:43,440
luckily we have not necessarily an open

00:04:42,639 --> 00:04:46,560
source

00:04:43,440 --> 00:04:48,080
um version of both but we have

00:04:46,560 --> 00:04:50,479
both the sequels plus and c sharp game

00:04:48,080 --> 00:04:52,320
that i can actually show you

00:04:50,479 --> 00:04:54,720
um and they are actual commercial

00:04:52,320 --> 00:04:57,520
releases we're gonna start with v

00:04:54,720 --> 00:04:58,880
which is the sequel's plus game that was

00:04:57,520 --> 00:05:00,960
well it was a flash game that was

00:04:58,880 --> 00:05:02,560
released in like 2010

00:05:00,960 --> 00:05:05,039
and then got a staples plus version like

00:05:02,560 --> 00:05:08,000
a year later um

00:05:05,039 --> 00:05:08,560
and for me it's a simple supposed game

00:05:08,000 --> 00:05:12,160
so really

00:05:08,560 --> 00:05:13,840
all i care about is like how do i

00:05:12,160 --> 00:05:16,080
compile the files and for in this case

00:05:13,840 --> 00:05:17,759
it's cmake um you may be terrified to

00:05:16,080 --> 00:05:19,440
know that for most games when i don't

00:05:17,759 --> 00:05:20,960
have to care about windows builds i

00:05:19,440 --> 00:05:22,479
generally just use their handwritten

00:05:20,960 --> 00:05:25,360
make file

00:05:22,479 --> 00:05:26,960
i don't know if that's uh too scary

00:05:25,360 --> 00:05:29,600
these days but really it's like

00:05:26,960 --> 00:05:31,120
i mean when you go into the scenic file

00:05:29,600 --> 00:05:32,560
you'll notice there's like a bunch of

00:05:31,120 --> 00:05:35,360
stuff for like

00:05:32,560 --> 00:05:36,720
like here's a giant apple block and you

00:05:35,360 --> 00:05:38,400
have a couple things that

00:05:36,720 --> 00:05:40,639
were actually added after the fact like

00:05:38,400 --> 00:05:42,960
the steam and dog flags

00:05:40,639 --> 00:05:44,479
um you have a nice r path thing i'll get

00:05:42,960 --> 00:05:46,080
to that in a second

00:05:44,479 --> 00:05:47,759
and then really the source is just this

00:05:46,080 --> 00:05:50,880
one list

00:05:47,759 --> 00:05:52,639
and then that's it you kind of just

00:05:50,880 --> 00:05:54,080
have a bunch of lists of source files we

00:05:52,639 --> 00:05:54,800
compile with a couple flags

00:05:54,080 --> 00:05:56,160
we don't really care about

00:05:54,800 --> 00:05:57,759
configurability of course because

00:05:56,160 --> 00:05:58,160
there's technically only supposed to be

00:05:57,759 --> 00:06:00,240
like

00:05:58,160 --> 00:06:01,919
one version unless you count you know

00:06:00,240 --> 00:06:05,199
the networking versions like steam and

00:06:01,919 --> 00:06:06,880
pog and so on and a lot of this is

00:06:05,199 --> 00:06:08,880
actually added after the source of the

00:06:06,880 --> 00:06:13,360
release and none of this was here

00:06:08,880 --> 00:06:15,840
before then um and so we do

00:06:13,360 --> 00:06:17,199
do the usual deal we know oh i've

00:06:15,840 --> 00:06:19,440
already compiled it that's great

00:06:17,199 --> 00:06:21,039
um so yeah we just do make is normal and

00:06:19,440 --> 00:06:23,680
then

00:06:21,039 --> 00:06:25,039
we'll run it how much you see here if

00:06:23,680 --> 00:06:25,759
you know how simple supposed to know it

00:06:25,039 --> 00:06:27,759
works

00:06:25,759 --> 00:06:29,199
um but one of the things that's unique

00:06:27,759 --> 00:06:30,800
is for you'll notice

00:06:29,199 --> 00:06:32,880
obviously i'm using system libraries in

00:06:30,800 --> 00:06:34,240
this case which isn't what you would

00:06:32,880 --> 00:06:34,560
actually do when you ship you typically

00:06:34,240 --> 00:06:37,759
you

00:06:34,560 --> 00:06:39,840
include all your dependencies but

00:06:37,759 --> 00:06:41,039
generally i because the adis are

00:06:39,840 --> 00:06:43,280
basically the same so

00:06:41,039 --> 00:06:44,639
and the behaviors generally don't change

00:06:43,280 --> 00:06:46,240
dramatically so i'll just

00:06:44,639 --> 00:06:48,160
live with the system libraries in rare

00:06:46,240 --> 00:06:50,880
cases where i need to use

00:06:48,160 --> 00:06:52,479
a specific version that's where our path

00:06:50,880 --> 00:06:54,080
actually comes into play so like for

00:06:52,479 --> 00:06:58,400
example you actually have a live

00:06:54,080 --> 00:06:59,840
64 folder here and it has sdl in it just

00:06:58,400 --> 00:07:02,560
for the purposes of example like if i

00:06:59,840 --> 00:07:03,919
needed to use exactly one version of sdl

00:07:02,560 --> 00:07:05,440
i would put it in that folder and of

00:07:03,919 --> 00:07:06,000
course the rpaf will resolve itself

00:07:05,440 --> 00:07:07,759
correctly

00:07:06,000 --> 00:07:09,440
as you can see here it has this

00:07:07,759 --> 00:07:12,080
ridiculous path instead of a nice loop

00:07:09,440 --> 00:07:15,360
64 path

00:07:12,080 --> 00:07:17,039
and so that's pretty much it like i'll

00:07:15,360 --> 00:07:19,120
use gdb i use valgrinds

00:07:17,039 --> 00:07:20,479
obviously this is that's all debugging

00:07:19,120 --> 00:07:23,759
stuff which we're not going to get into

00:07:20,479 --> 00:07:24,800
but pretty plain and simple you just

00:07:23,759 --> 00:07:27,280
type make

00:07:24,800 --> 00:07:28,720
maybe type c make before that sometimes

00:07:27,280 --> 00:07:29,360
developers will have something like

00:07:28,720 --> 00:07:32,160
pre-make

00:07:29,360 --> 00:07:33,840
or something like that but it's not

00:07:32,160 --> 00:07:38,080
complicated you type one command

00:07:33,840 --> 00:07:40,479
and then you type make that's it and

00:07:38,080 --> 00:07:43,520
so what about c sharp history sharp of

00:07:40,479 --> 00:07:46,720
course is a little bit more complicated

00:07:43,520 --> 00:07:49,680
um and in that case we actually have

00:07:46,720 --> 00:07:50,240
it correctly flozilla which is another

00:07:49,680 --> 00:07:53,919
game

00:07:50,240 --> 00:07:54,639
uh that was released in 2011 i want to

00:07:53,919 --> 00:07:57,599
say

00:07:54,639 --> 00:07:59,599
no probably 2010 i think i think like

00:07:57,599 --> 00:08:04,000
the xbox 360 version came out before

00:07:59,599 --> 00:08:07,280
but uh so not much to see here

00:08:04,000 --> 00:08:07,919
in this case um instead of making use x

00:08:07,280 --> 00:08:10,560
build or

00:08:07,919 --> 00:08:12,400
ms build nowadays because ms build we

00:08:10,560 --> 00:08:14,800
have the source to that and you can

00:08:12,400 --> 00:08:16,319
get like look it didn't get ms building

00:08:14,800 --> 00:08:17,199
a repository that's what i was trying to

00:08:16,319 --> 00:08:20,800
say

00:08:17,199 --> 00:08:23,039
uh so typically we just do

00:08:20,800 --> 00:08:24,639
like x build flotilla still two i've

00:08:23,039 --> 00:08:26,879
already again i've already built it but

00:08:24,639 --> 00:08:28,680
you know what compiling looks like um in

00:08:26,879 --> 00:08:30,560
this case we're compiling fna as well as

00:08:28,680 --> 00:08:34,240
flotilla.exe

00:08:30,560 --> 00:08:34,880
and if we go all the way down to where

00:08:34,240 --> 00:08:36,000
it outputs

00:08:34,880 --> 00:08:37,599
i just happen to know that you could

00:08:36,000 --> 00:08:39,120
read the build output and find out where

00:08:37,599 --> 00:08:42,719
that is

00:08:39,120 --> 00:08:44,720
it's basically flotilla

00:08:42,719 --> 00:08:46,160
and his friends and you'll notice and i

00:08:44,720 --> 00:08:48,000
didn't mention this with v

00:08:46,160 --> 00:08:49,440
because v happens to be literally one

00:08:48,000 --> 00:08:52,800
file for all content

00:08:49,440 --> 00:08:55,519
in this case you'll notice that

00:08:52,800 --> 00:08:57,040
user sim links not directories and what

00:08:55,519 --> 00:09:00,399
i typically do

00:08:57,040 --> 00:09:01,680
um is i will go ahead and when i get a

00:09:00,399 --> 00:09:03,120
new game typically they'll either give

00:09:01,680 --> 00:09:05,680
me a build that i can just use

00:09:03,120 --> 00:09:06,800
that's like dear and free and standalone

00:09:05,680 --> 00:09:08,720
or

00:09:06,800 --> 00:09:10,000
i'll just like if i have it on scene

00:09:08,720 --> 00:09:11,279
where they give me a key i just pull

00:09:10,000 --> 00:09:12,640
down the windows version

00:09:11,279 --> 00:09:14,399
use the content from that and just

00:09:12,640 --> 00:09:16,480
simulate it because

00:09:14,399 --> 00:09:18,480
ideally the content is identical across

00:09:16,480 --> 00:09:21,760
all the skus anyway

00:09:18,480 --> 00:09:25,680
and so all we do really is we

00:09:21,760 --> 00:09:28,800
take the managed binaries and

00:09:25,680 --> 00:09:30,000
run the output with the exception of the

00:09:28,800 --> 00:09:32,640
dll

00:09:30,000 --> 00:09:34,320
the the files again which is in this

00:09:32,640 --> 00:09:36,160
case you can't necessarily use the

00:09:34,320 --> 00:09:37,360
system files because

00:09:36,160 --> 00:09:39,440
in this case instead of running the

00:09:37,360 --> 00:09:40,640
binary you're running mono which is a

00:09:39,440 --> 00:09:43,839
system binary

00:09:40,640 --> 00:09:45,680
run into the managed executable so like

00:09:43,839 --> 00:09:47,600
ld library path can get messed up if you

00:09:45,680 --> 00:09:49,440
try to put sdl in there and then there's

00:09:47,600 --> 00:09:51,760
another library that uses it

00:09:49,440 --> 00:09:53,519
it's a big mess but we actually haven't

00:09:51,760 --> 00:09:54,959
necessarily found a good way to kind of

00:09:53,519 --> 00:09:57,519
make the user experience better there

00:09:54,959 --> 00:10:00,560
but as you can see i have

00:09:57,519 --> 00:10:03,360
one so far in there

00:10:00,560 --> 00:10:05,440
which is just infinite 3d which is our

00:10:03,360 --> 00:10:08,640
3d rendering for fna

00:10:05,440 --> 00:10:11,440
um and so typically we just run it with

00:10:08,640 --> 00:10:13,120
mono and that's it and it runs and it's

00:10:11,440 --> 00:10:15,120
great it has a bunch of rvg rug output

00:10:13,120 --> 00:10:16,399
because it's debug binary

00:10:15,120 --> 00:10:18,240
and it's got all these really good

00:10:16,399 --> 00:10:20,079
things fine um

00:10:18,240 --> 00:10:22,560
for debugging i would use mono develop i

00:10:20,079 --> 00:10:26,079
don't have mom develop on here because

00:10:22,560 --> 00:10:28,480
uh mono one fedora for very very

00:10:26,079 --> 00:10:29,839
good reasons is takes a little bit of

00:10:28,480 --> 00:10:32,480
extra setup work

00:10:29,839 --> 00:10:33,760
because you know just building one

00:10:32,480 --> 00:10:35,279
requires a bunch of binary boss

00:10:33,760 --> 00:10:38,640
bootstrap which is

00:10:35,279 --> 00:10:40,399
not great um so that's really all there

00:10:38,640 --> 00:10:41,200
is to day to day which is you build it

00:10:40,399 --> 00:10:43,200
you run it

00:10:41,200 --> 00:10:45,440
we're using system libraries technically

00:10:43,200 --> 00:10:48,560
except sometimes when we don't

00:10:45,440 --> 00:10:51,200
but it's kind of wishy-washy

00:10:48,560 --> 00:10:51,839
um and this is all in fedora fedora 33

00:10:51,200 --> 00:10:54,240
actually

00:10:51,839 --> 00:10:55,360
in this case because it's very latest

00:10:54,240 --> 00:10:59,360
but

00:10:55,360 --> 00:11:02,480
we can't actually use fedora to build

00:10:59,360 --> 00:11:05,519
um the final package even though

00:11:02,480 --> 00:11:07,519
so there's actually one little exception

00:11:05,519 --> 00:11:08,800
to the every machine in my house has

00:11:07,519 --> 00:11:11,200
dora on it

00:11:08,800 --> 00:11:11,839
and that is a little guy who i don't

00:11:11,200 --> 00:11:13,279
think that's

00:11:11,839 --> 00:11:15,680
recognized here so we're just going to

00:11:13,279 --> 00:11:18,560
do this

00:11:15,680 --> 00:11:19,120
welcome to flip it build um this is a

00:11:18,560 --> 00:11:24,000
different

00:11:19,120 --> 00:11:24,000
type of machine and that is

00:11:24,399 --> 00:11:30,079
say here we're back here lcd

00:11:28,000 --> 00:11:31,519
no i don't remember what you really need

00:11:30,079 --> 00:11:34,800
to know is that it's centos

00:11:31,519 --> 00:11:37,279
not fedora and there's actually one

00:11:34,800 --> 00:11:38,079
very very very particular reason for

00:11:37,279 --> 00:11:40,560
this

00:11:38,079 --> 00:11:42,320
would anybody like to guess what it is

00:11:40,560 --> 00:11:43,920
it's a very it's i mean obviously when

00:11:42,320 --> 00:11:45,839
it comes to builds you know can be very

00:11:43,920 --> 00:11:47,440
nuanced and complicated i'm sure you can

00:11:45,839 --> 00:11:48,399
make a reasonable guess as to what that

00:11:47,440 --> 00:11:52,079
is

00:11:48,399 --> 00:11:53,760
um but hey we have

00:11:52,079 --> 00:11:57,839
a little bit of time so i can just go

00:11:53,760 --> 00:11:57,839
ahead and do this

00:11:58,639 --> 00:12:03,279
hey that's the reason because it's a

00:12:00,720 --> 00:12:05,920
g-lib c

00:12:03,279 --> 00:12:06,959
and that's it that's literally the only

00:12:05,920 --> 00:12:10,800
reason

00:12:06,959 --> 00:12:12,240
um not the compiler it's not about some

00:12:10,800 --> 00:12:14,079
thing about stability or anything like

00:12:12,240 --> 00:12:17,279
that it's literally just the glibc

00:12:14,079 --> 00:12:19,680
version as well um

00:12:17,279 --> 00:12:21,279
and you'll notice if we go to say any

00:12:19,680 --> 00:12:22,480
particular game that may have been

00:12:21,279 --> 00:12:25,360
released in the last

00:12:22,480 --> 00:12:26,399
uh this morning or so uh you'll notice

00:12:25,360 --> 00:12:28,160
that if you go to the

00:12:26,399 --> 00:12:29,680
system requirements for one of my ports

00:12:28,160 --> 00:12:32,880
you'll notice that it says

00:12:29,680 --> 00:12:34,480
glfc 2.17 plus is the os requirement

00:12:32,880 --> 00:12:36,000
which probably sounds weird to people

00:12:34,480 --> 00:12:38,880
and i've actually been made fun of

00:12:36,000 --> 00:12:39,440
about this on various podcasts and

00:12:38,880 --> 00:12:42,800
articles

00:12:39,440 --> 00:12:44,560
um because people traditionally think

00:12:42,800 --> 00:12:46,880
it's going to be like oh you're going to

00:12:44,560 --> 00:12:50,399
say a121604 you're going to say

00:12:46,880 --> 00:12:53,440
maybe mint or probably art

00:12:50,399 --> 00:12:55,360
use arch in the gaming world uh nope

00:12:53,440 --> 00:12:57,120
all we care about is glub c so we'll

00:12:55,360 --> 00:13:00,480
also extend loop standards equals plus

00:12:57,120 --> 00:13:02,240
because and that's

00:13:00,480 --> 00:13:04,000
that's a little bit less clear to me but

00:13:02,240 --> 00:13:05,519
by targeting such a low ellipse c

00:13:04,000 --> 00:13:07,839
you kind of get this flip c plus plus

00:13:05,519 --> 00:13:11,440
minimum for free alongside that

00:13:07,839 --> 00:13:15,120
um so

00:13:11,440 --> 00:13:18,079
if we go and for example go to a build

00:13:15,120 --> 00:13:19,600
on centos which it's literally like a

00:13:18,079 --> 00:13:21,519
little tiny box

00:13:19,600 --> 00:13:24,160
in my home it used to be a vm for many

00:13:21,519 --> 00:13:27,600
many years um

00:13:24,160 --> 00:13:30,560
but to go to what happened

00:13:27,600 --> 00:13:30,560
yeah so it's

00:13:31,600 --> 00:13:38,880
uh i flirted with 132 in there

00:13:35,360 --> 00:13:42,880
which is something else entirely but

00:13:38,880 --> 00:13:46,000
so there was little build build

00:13:42,880 --> 00:13:50,800
this is totally returning by the way uh

00:13:46,000 --> 00:13:53,760
you are a little cma yo-yo

00:13:50,800 --> 00:13:54,399
build and that's it that's the build

00:13:53,760 --> 00:13:57,519
process

00:13:54,399 --> 00:13:59,600
for a typical game which is

00:13:57,519 --> 00:14:01,440
as you'll notice exactly the same as it

00:13:59,600 --> 00:14:03,360
is on desktop

00:14:01,440 --> 00:14:04,480
um except i just do it on centos and

00:14:03,360 --> 00:14:06,399
that's it

00:14:04,480 --> 00:14:08,320
i have an stl version that i

00:14:06,399 --> 00:14:09,839
self-compiled and sometimes when i have

00:14:08,320 --> 00:14:11,920
dependencies like steal mixer

00:14:09,839 --> 00:14:13,199
like v does i'll self-build that to you

00:14:11,920 --> 00:14:14,959
but in general it's pretty vanilla

00:14:13,199 --> 00:14:17,360
centos environment in fact

00:14:14,959 --> 00:14:19,279
go to my plan file go ahead and rev up

00:14:17,360 --> 00:14:22,560
your finger clients as i know you all

00:14:19,279 --> 00:14:24,160
have uh you'll see that

00:14:22,560 --> 00:14:25,680
the process of replicating my build

00:14:24,160 --> 00:14:27,600
environment fits in

00:14:25,680 --> 00:14:28,800
like half a screen there's not much to

00:14:27,600 --> 00:14:30,720
it because

00:14:28,800 --> 00:14:32,320
really all we care about is having

00:14:30,720 --> 00:14:33,920
ellipsee and a compiler that can at

00:14:32,320 --> 00:14:34,480
least compile relatively new things and

00:14:33,920 --> 00:14:36,480
that's about

00:14:34,480 --> 00:14:37,600
it everything else is virtually

00:14:36,480 --> 00:14:40,160
irrelevant we

00:14:37,600 --> 00:14:40,720
don't care about it we just want a low

00:14:40,160 --> 00:14:43,120
lib c

00:14:40,720 --> 00:14:44,560
if we had a flag that had like gcc dash

00:14:43,120 --> 00:14:47,040
m nin

00:14:44,560 --> 00:14:47,839
libsy version i would love to have that

00:14:47,040 --> 00:14:50,639
i would

00:14:47,839 --> 00:14:52,480
this thing would become a an intel gpu

00:14:50,639 --> 00:14:57,199
test box like the same day

00:14:52,480 --> 00:15:01,519
no question but for now we have centos

00:14:57,199 --> 00:15:04,959
and nothing else

00:15:01,519 --> 00:15:06,399
uh and for c sharp we don't actually do

00:15:04,959 --> 00:15:09,120
this we just use the c sharp

00:15:06,399 --> 00:15:09,680
build a system on fedora for example

00:15:09,120 --> 00:15:11,519
because

00:15:09,680 --> 00:15:13,360
obviously he doesn't care what see in

00:15:11,519 --> 00:15:14,320
that case but we do care about the run

00:15:13,360 --> 00:15:16,800
time

00:15:14,320 --> 00:15:18,800
and the runtime is particularly special

00:15:16,800 --> 00:15:20,959
in that it's basically just mono that we

00:15:18,800 --> 00:15:24,399
shoved into a single binary

00:15:20,959 --> 00:15:25,920
and then it basically just has mono in

00:15:24,399 --> 00:15:27,760
a single folder that doesn't depend on

00:15:25,920 --> 00:15:29,440
any system runtime library but we do

00:15:27,760 --> 00:15:32,959
have to build it on centos

00:15:29,440 --> 00:15:35,680
which is kind of interesting but

00:15:32,959 --> 00:15:36,639
especially considering you know

00:15:35,680 --> 00:15:39,600
typically expected

00:15:36,639 --> 00:15:40,800
to be using new operating systems but

00:15:39,600 --> 00:15:44,480
there you go

00:15:40,800 --> 00:15:46,320
so yeah we have this weird

00:15:44,480 --> 00:15:48,079
intermediary step for building which is

00:15:46,320 --> 00:15:48,959
basically to run and run all the builds

00:15:48,079 --> 00:15:52,320
through centos

00:15:48,959 --> 00:15:54,000
but then we can come back to fedora and

00:15:52,320 --> 00:15:55,519
that's when we start getting into the

00:15:54,000 --> 00:15:57,279
actual packaging finally

00:15:55,519 --> 00:15:59,279
i know you're all so excited to hear

00:15:57,279 --> 00:16:02,720
about um

00:15:59,279 --> 00:16:04,399
so really it's just

00:16:02,720 --> 00:16:05,920
these two folders here which is my

00:16:04,399 --> 00:16:06,560
little installers folder and there's two

00:16:05,920 --> 00:16:08,079
of them

00:16:06,560 --> 00:16:09,920
there's actually three technically but

00:16:08,079 --> 00:16:12,399
there's only two that i can disclose

00:16:09,920 --> 00:16:13,920
um and that is the drm-free and the

00:16:12,399 --> 00:16:16,079
steam environment

00:16:13,920 --> 00:16:17,519
and so the way this being the dr-free

00:16:16,079 --> 00:16:20,320
environment works

00:16:17,519 --> 00:16:21,600
is i'll just go in here there's a little

00:16:20,320 --> 00:16:23,279
bill

00:16:21,600 --> 00:16:26,160
there's this thing which has everything

00:16:23,279 --> 00:16:26,160
that i have and then

00:16:26,320 --> 00:16:31,759
so we're going to go ahead and do build

00:16:28,160 --> 00:16:34,160
flotilla as a drm free package together

00:16:31,759 --> 00:16:34,880
which is basically looking flotilla

00:16:34,160 --> 00:16:36,240
which i made

00:16:34,880 --> 00:16:38,800
there's all these files in here

00:16:36,240 --> 00:16:41,519
including bitmap it's not actually

00:16:38,800 --> 00:16:43,199
the uh flotilla bitmap we'll go ahead

00:16:41,519 --> 00:16:48,320
and grab it

00:16:43,199 --> 00:16:51,519
just go ahead and there it is

00:16:48,320 --> 00:16:54,639
this is actually how i do though

00:16:51,519 --> 00:16:57,680
um basically what i normally do is i'll

00:16:54,639 --> 00:16:59,199
take this image and then i'll save it i

00:16:57,680 --> 00:17:00,160
just realized i don't have something

00:16:59,199 --> 00:17:02,959
that will convert it to

00:17:00,160 --> 00:17:04,480
bitmap trivially so pretend that i made

00:17:02,959 --> 00:17:07,919
a bitmap of this exact

00:17:04,480 --> 00:17:07,919
file and put it there

00:17:09,760 --> 00:17:13,520
so this file details it's basically a

00:17:12,720 --> 00:17:17,199
title

00:17:13,520 --> 00:17:18,160
that okay so this is what i do is i just

00:17:17,199 --> 00:17:20,799
copy it and i

00:17:18,160 --> 00:17:22,400
change name that's how you do it i think

00:17:20,799 --> 00:17:24,720
i even wrote that explicitly in the

00:17:22,400 --> 00:17:27,039
documentation

00:17:24,720 --> 00:17:28,559
um and then there's this one file called

00:17:27,039 --> 00:17:32,000
config.lua which is

00:17:28,559 --> 00:17:36,240
a mess of lua stuff that probably

00:17:32,000 --> 00:17:36,240
has not been touched in like eight years

00:17:36,880 --> 00:17:42,559
and then let's see so let's just say for

00:17:40,320 --> 00:17:47,840
example

00:17:42,559 --> 00:17:47,840
games i think that's his website

00:17:55,760 --> 00:18:00,799
again i usually copy this from the scene

00:17:57,360 --> 00:18:05,760
description but i just go

00:18:00,799 --> 00:18:09,120
delete and usually there's a bitmap

00:18:05,760 --> 00:18:10,320
get to that and then the name of the

00:18:09,120 --> 00:18:12,480
executable

00:18:10,320 --> 00:18:13,360
the executable if you wondering for a c

00:18:12,480 --> 00:18:16,880
sharp game

00:18:13,360 --> 00:18:20,160
uh where we get that and if we go to

00:18:16,880 --> 00:18:24,160
our friend mona kickstart which is the

00:18:20,160 --> 00:18:26,400
name of the self-contained modern time

00:18:24,160 --> 00:18:27,440
oh by the way third stars for gog we'll

00:18:26,400 --> 00:18:30,880
get to that

00:18:27,440 --> 00:18:32,480
um but let's see

00:18:30,880 --> 00:18:33,760
go to precompiled and you'll see if

00:18:32,480 --> 00:18:35,679
you're familiar with c strip you'll

00:18:33,760 --> 00:18:38,960
recognize all these dlls system

00:18:35,679 --> 00:18:39,520
system system xml is in there system

00:18:38,960 --> 00:18:41,919
core

00:18:39,520 --> 00:18:42,559
mscorlet all our friends in c sharp

00:18:41,919 --> 00:18:45,360
world

00:18:42,559 --> 00:18:47,280
not everything if you get into this

00:18:45,360 --> 00:18:49,360
weird stuff like system.that web

00:18:47,280 --> 00:18:50,960
i usually tell people just copy it from

00:18:49,360 --> 00:18:51,840
their system installation because

00:18:50,960 --> 00:18:56,559
they're basically

00:18:51,840 --> 00:18:59,840
the same anyway um but what we do

00:18:56,559 --> 00:19:02,160
is do this take it copy it

00:18:59,840 --> 00:19:03,840
oh data folder by the way which is where

00:19:02,160 --> 00:19:07,600
all this comes in

00:19:03,840 --> 00:19:10,720
and that's all

00:19:07,600 --> 00:19:14,720
and we'll pretend that i got a bitmap

00:19:10,720 --> 00:19:14,720
for oh nope i just deleted it

00:19:14,799 --> 00:19:21,919
and we'll pretend this is the photo icon

00:19:18,960 --> 00:19:24,080
because it totally is and basically what

00:19:21,919 --> 00:19:26,160
we do is we just rename stuff

00:19:24,080 --> 00:19:27,600
the other side we're not really building

00:19:26,160 --> 00:19:30,480
that much and this is actually what i

00:19:27,600 --> 00:19:31,280
advise people who make use f a or c

00:19:30,480 --> 00:19:33,120
sharp

00:19:31,280 --> 00:19:35,360
uh do when they ship links games is they

00:19:33,120 --> 00:19:38,559
just copy stuff

00:19:35,360 --> 00:19:43,600
and rename stuff and

00:19:38,559 --> 00:19:43,600
this is totally flotilla

00:19:46,720 --> 00:19:50,240
and just copy paste more

00:19:50,400 --> 00:19:57,679
a lot of copy pasting in this step uh

00:19:54,240 --> 00:20:02,000
and then we go to our friends

00:19:57,679 --> 00:20:05,360
in mr

00:20:02,000 --> 00:20:07,360
flotilla it's not actually your ship

00:20:05,360 --> 00:20:08,960
obviously but some of the developers

00:20:07,360 --> 00:20:10,880
like to should be like binders i'm not

00:20:08,960 --> 00:20:13,919
one of those people

00:20:10,880 --> 00:20:16,799
and that's it just those two files

00:20:13,919 --> 00:20:18,840
you can follow this link here am i

00:20:16,799 --> 00:20:21,280
thinking of

00:20:18,840 --> 00:20:23,919
different file explorer probably

00:20:21,280 --> 00:20:23,919
emailing

00:20:24,400 --> 00:20:28,080
and then we copy paste again

00:20:29,200 --> 00:20:32,559
and let's see what else am i missing oh

00:20:31,280 --> 00:20:36,640
yes our

00:20:32,559 --> 00:20:40,240
native libraries like for example stl um

00:20:36,640 --> 00:20:40,240
i just have them in this folder

00:20:40,799 --> 00:20:46,559
now copy paste again all these are built

00:20:44,480 --> 00:20:48,799
on centos

00:20:46,559 --> 00:20:50,559
it could be built anywhere where a

00:20:48,799 --> 00:20:52,320
little c version is and you know what

00:20:50,559 --> 00:20:53,760
building scale looks like you can figure

00:20:52,320 --> 00:20:59,039
into it

00:20:53,760 --> 00:20:59,039
um and just as a test we can run

00:20:59,360 --> 00:21:04,080
and forgotten something let's find out

00:21:05,679 --> 00:21:13,760
oh yeah the dll got too big

00:21:10,880 --> 00:21:13,760
how could i forget

00:21:14,159 --> 00:21:20,000
but anyway the point is you see it's

00:21:16,480 --> 00:21:20,000
just a lot of copying and pasting

00:21:20,400 --> 00:21:27,039
oh yeah as caleb mentioned in the shot

00:21:23,520 --> 00:21:29,360
um building switch games unfortunately

00:21:27,039 --> 00:21:30,640
cannot be done at all because that's

00:21:29,360 --> 00:21:35,200
what we expect

00:21:30,640 --> 00:21:35,200
anyway we take builds can we type

00:21:36,000 --> 00:21:42,559
it does some

00:21:40,080 --> 00:21:44,860
things that you might recognize and what

00:21:42,559 --> 00:21:47,039
do you know the

00:21:44,860 --> 00:21:49,039
[Music]

00:21:47,039 --> 00:21:50,159
flotilla and there's a nice installer

00:21:49,039 --> 00:21:53,919
and you can pick

00:21:50,159 --> 00:21:55,760
your location didn't do enough copy

00:21:53,919 --> 00:21:59,280
pasting

00:21:55,760 --> 00:22:02,880
and installs and it's done

00:21:59,280 --> 00:22:06,559
and if you go to my apps hopefully it

00:22:02,880 --> 00:22:07,520
refreshed itself yeah flotilla it's

00:22:06,559 --> 00:22:12,690
right there

00:22:07,520 --> 00:22:15,729
it's great and if you want to install

00:22:12,690 --> 00:22:15,729
[Music]

00:22:19,840 --> 00:22:24,840
if you do add some files it does it's

00:22:21,520 --> 00:22:28,240
smart enough to not in your whole folder

00:22:24,840 --> 00:22:30,640
um and that's drm free builds

00:22:28,240 --> 00:22:31,360
uh it also happens everything i just

00:22:30,640 --> 00:22:33,039
showed you is

00:22:31,360 --> 00:22:35,360
how we've been doing it for quite a few

00:22:33,039 --> 00:22:37,360
years pretty much from the beginning

00:22:35,360 --> 00:22:39,440
um it's also obsolete we don't do it

00:22:37,360 --> 00:22:40,159
anymore there's a very specific reason

00:22:39,440 --> 00:22:43,200
for that

00:22:40,159 --> 00:22:46,880
um which i will show you with the steam

00:22:43,200 --> 00:22:49,919
build ski build

00:22:46,880 --> 00:22:52,640
is there's not much

00:22:49,919 --> 00:22:53,520
i can show but luckily i can show enough

00:22:52,640 --> 00:22:55,280
of it

00:22:53,520 --> 00:22:56,559
um because of course the steamworks

00:22:55,280 --> 00:22:59,440
stuff is technically

00:22:56,559 --> 00:23:00,320
mda except for um the stuff that's

00:22:59,440 --> 00:23:01,840
disclosed in the

00:23:00,320 --> 00:23:03,840
sdk documentation that you can actually

00:23:01,840 --> 00:23:06,799
go look up yourself

00:23:03,840 --> 00:23:08,480
um without having to assign anything and

00:23:06,799 --> 00:23:11,840
basically all you really need to know is

00:23:08,480 --> 00:23:11,840
that there's this wonderful thing

00:23:12,240 --> 00:23:16,640
where you can just type in your user

00:23:15,440 --> 00:23:17,679
password try

00:23:16,640 --> 00:23:19,760
have source so i don't have to

00:23:17,679 --> 00:23:20,960
constantly type it this little builder

00:23:19,760 --> 00:23:22,159
tool they have

00:23:20,960 --> 00:23:24,400
and then you point it at something like

00:23:22,159 --> 00:23:27,600
flotilla for example

00:23:24,400 --> 00:23:30,000
where basically there's an app

00:23:27,600 --> 00:23:32,320
which again lots of copy pasting but

00:23:30,000 --> 00:23:36,000
really all you care about is the app id

00:23:32,320 --> 00:23:37,280
and these things called deposed and for

00:23:36,000 --> 00:23:38,640
example the links you probably looks

00:23:37,280 --> 00:23:41,279
like this which is

00:23:38,640 --> 00:23:42,080
and again a number that valve gives you

00:23:41,279 --> 00:23:45,279
and then

00:23:42,080 --> 00:23:48,640
folder path pull the path

00:23:45,279 --> 00:23:51,679
go to linux oh look it's just a game um

00:23:48,640 --> 00:23:53,919
by itself and there's no

00:23:51,679 --> 00:23:55,440
other metadata or anything like that

00:23:53,919 --> 00:23:57,279
it's just the regular editing is

00:23:55,440 --> 00:23:59,200
that this is exactly what you would see

00:23:57,279 --> 00:24:03,600
when you download flotilla on steam

00:23:59,200 --> 00:24:03,600
to your machine nothing special about it

00:24:08,480 --> 00:24:11,520
just for the purposes of completion i

00:24:09,919 --> 00:24:14,320
will actually do this

00:24:11,520 --> 00:24:15,760
so please don't have me this is the

00:24:14,320 --> 00:24:19,840
second dumbest thing that anyone's ever

00:24:15,760 --> 00:24:19,840
done on a video conference

00:24:25,600 --> 00:24:32,400
and scan upload

00:24:28,880 --> 00:24:35,679
scans uploads oh it's done

00:24:32,400 --> 00:24:38,559
that's it uh you

00:24:35,679 --> 00:24:39,360
go onto the website you pick the upload

00:24:38,559 --> 00:24:42,240
that you just did

00:24:39,360 --> 00:24:44,480
and you set it to live and that's it you

00:24:42,240 --> 00:24:46,000
can set it on data branches if you want

00:24:44,480 --> 00:24:48,000
or whatever custom things you want to do

00:24:46,000 --> 00:24:50,240
with it but that's it

00:24:48,000 --> 00:24:51,760
that's the whole process um and you'll

00:24:50,240 --> 00:24:53,440
notice that it was ridiculously fast

00:24:51,760 --> 00:24:55,039
because as it turns out

00:24:53,440 --> 00:24:56,640
um one of the nice things that it does

00:24:55,039 --> 00:25:00,320
is that it checks what files are

00:24:56,640 --> 00:25:03,120
actually changed it only uploads those

00:25:00,320 --> 00:25:05,440
so that actually matters quite a lot

00:25:03,120 --> 00:25:07,760
especially if you're in a place that has

00:25:05,440 --> 00:25:09,440
terrible upload speeds or in some cases

00:25:07,760 --> 00:25:12,480
a straight up bandwidth cap

00:25:09,440 --> 00:25:14,480
um because for the case of most other

00:25:12,480 --> 00:25:15,600
packages we have to upload those every

00:25:14,480 --> 00:25:17,520
single time we do an

00:25:15,600 --> 00:25:19,279
update and the important thing to know

00:25:17,520 --> 00:25:21,440
about games industry if you have not

00:25:19,279 --> 00:25:22,640
been actively involved in the past 10

00:25:21,440 --> 00:25:24,880
years is that we

00:25:22,640 --> 00:25:25,679
update like most living organisms on

00:25:24,880 --> 00:25:28,000
earth drink

00:25:25,679 --> 00:25:29,520
water if we don't do it like at least

00:25:28,000 --> 00:25:32,240
six times a day the

00:25:29,520 --> 00:25:33,840
customer assumes that we're dead so

00:25:32,240 --> 00:25:36,080
having the update and upload

00:25:33,840 --> 00:25:37,279
process be fast is really really

00:25:36,080 --> 00:25:39,679
important

00:25:37,279 --> 00:25:41,760
um and the reason that the flip motor

00:25:39,679 --> 00:25:43,679
setup setup is obsolete is because

00:25:41,760 --> 00:25:46,000
basically every store has to smell

00:25:43,679 --> 00:25:47,840
uh gog has their own uploader tool which

00:25:46,000 --> 00:25:48,720
is the third that i couldn't disclose

00:25:47,840 --> 00:25:51,120
because that's

00:25:48,720 --> 00:25:51,919
not anywhere unless you have an sdk

00:25:51,120 --> 00:25:54,080
license

00:25:51,919 --> 00:25:55,440
um an itch.ios exactly like this they

00:25:54,080 --> 00:25:57,120
have a tool called butler that does

00:25:55,440 --> 00:25:59,600
exactly the same thing it

00:25:57,120 --> 00:26:01,200
takes the files zips them up uploads

00:25:59,600 --> 00:26:02,080
them has the right specs people

00:26:01,200 --> 00:26:04,960
permissions

00:26:02,080 --> 00:26:05,440
usually the most you end up doing is

00:26:04,960 --> 00:26:07,279
like

00:26:05,440 --> 00:26:08,840
specifying the executable name that's

00:26:07,279 --> 00:26:11,760
kind of it

00:26:08,840 --> 00:26:13,760
um so we don't

00:26:11,760 --> 00:26:14,960
package our own stuff anymore and that's

00:26:13,760 --> 00:26:17,840
kind of the one thing that i

00:26:14,960 --> 00:26:19,200
really think you may want to take away

00:26:17,840 --> 00:26:19,919
from this if you're in the business of

00:26:19,200 --> 00:26:22,240
making

00:26:19,919 --> 00:26:24,000
making packaging software is that

00:26:22,240 --> 00:26:26,640
developers don't package their software

00:26:24,000 --> 00:26:27,440
anymore distributors do because as it

00:26:26,640 --> 00:26:28,880
turns out

00:26:27,440 --> 00:26:30,480
distributors are the ones that actually

00:26:28,880 --> 00:26:32,080
suspend all that bandwidth and so they

00:26:30,480 --> 00:26:35,039
care a lot about how

00:26:32,080 --> 00:26:35,919
people get updates and downloads so they

00:26:35,039 --> 00:26:38,799
have their own

00:26:35,919 --> 00:26:40,720
system for compressing everything

00:26:38,799 --> 00:26:43,039
getting deltas together

00:26:40,720 --> 00:26:43,760
making updates fast for the end user

00:26:43,039 --> 00:26:45,919
things like that

00:26:43,760 --> 00:26:46,799
so we don't package things anymore we

00:26:45,919 --> 00:26:48,799
just take

00:26:46,799 --> 00:26:50,720
finish copies of the game and just

00:26:48,799 --> 00:26:51,760
upload them and we don't think about how

00:26:50,720 --> 00:26:55,120
it's packaged anymore

00:26:51,760 --> 00:26:57,200
and we don't care um

00:26:55,120 --> 00:26:58,559
particularly because for games in

00:26:57,200 --> 00:27:00,159
particular like it's not like we have to

00:26:58,559 --> 00:27:01,039
worry about dependencies because we ship

00:27:00,159 --> 00:27:03,760
them all

00:27:01,039 --> 00:27:04,840
like if we go into flotilla for example

00:27:03,760 --> 00:27:08,240
uh

00:27:04,840 --> 00:27:13,520
flotilla the ldd

00:27:08,240 --> 00:27:17,120
what's uh x8664

00:27:13,520 --> 00:27:19,120
not a huge list of dependencies

00:27:17,120 --> 00:27:20,720
yeah lib dl's in there i know that could

00:27:19,120 --> 00:27:22,720
be kind of scary but like

00:27:20,720 --> 00:27:23,919
look the reason the dll's there is so we

00:27:22,720 --> 00:27:25,440
can safely

00:27:23,919 --> 00:27:26,880
load things and fall back if something's

00:27:25,440 --> 00:27:27,679
not present that's particularly true of

00:27:26,880 --> 00:27:28,960
scl

00:27:27,679 --> 00:27:31,120
where we have to think about things like

00:27:28,960 --> 00:27:32,880
x11 and weyland as well as pulse and

00:27:31,120 --> 00:27:35,200
ulcer and

00:27:32,880 --> 00:27:37,279
all the other things and if you look at

00:27:35,200 --> 00:27:39,360
the

00:27:37,279 --> 00:27:41,919
fancy list for all of the libraries they

00:27:39,360 --> 00:27:45,279
fit on one screen by the way

00:27:41,919 --> 00:27:47,840
um includes like a video decoder

00:27:45,279 --> 00:27:48,640
it's got the image loader sdl it's got

00:27:47,840 --> 00:27:51,360
our shader

00:27:48,640 --> 00:27:52,320
thing our audio middleware it's all in

00:27:51,360 --> 00:27:54,960
there and like

00:27:52,320 --> 00:27:56,960
look it's all just like the c runtime

00:27:54,960 --> 00:27:59,279
and the dl and maybe like key thread

00:27:56,960 --> 00:28:00,480
and that's it we don't like the game

00:27:59,279 --> 00:28:02,320
developers don't like shipping

00:28:00,480 --> 00:28:04,000
dependencies and if they add them they

00:28:02,320 --> 00:28:05,200
always statically link them or they

00:28:04,000 --> 00:28:08,240
won't just include them

00:28:05,200 --> 00:28:09,440
because it minimizes risks that's

00:28:08,240 --> 00:28:11,120
i mean it's basically the same rule as

00:28:09,440 --> 00:28:12,480
windows like you don't tell people to

00:28:11,120 --> 00:28:14,640
install sdl

00:28:12,480 --> 00:28:17,679
from somewhere you just want to look at

00:28:14,640 --> 00:28:20,720
the game um

00:28:17,679 --> 00:28:23,919
and there's not much more

00:28:20,720 --> 00:28:27,120
to it than that um

00:28:23,919 --> 00:28:27,919
and so i think i did kind of burn

00:28:27,120 --> 00:28:29,200
through that

00:28:27,919 --> 00:28:30,960
pretty quickly real quick we have about

00:28:29,200 --> 00:28:33,919
10 minutes up that i want to say

00:28:30,960 --> 00:28:34,559
so i i ran through that very quickly but

00:28:33,919 --> 00:28:36,240
you may be

00:28:34,559 --> 00:28:39,200
shocked that how quick that packaging

00:28:36,240 --> 00:28:42,799
part was but that's really the thing

00:28:39,200 --> 00:28:44,880
now take away is that the reason it was

00:28:42,799 --> 00:28:48,320
no package

00:28:44,880 --> 00:28:50,399
um so yeah if you're in the business of

00:28:48,320 --> 00:28:53,200
packaging stuff talk to distributors

00:28:50,399 --> 00:28:54,159
not developers i mean developers will be

00:28:53,200 --> 00:28:56,880
excited if it makes

00:28:54,159 --> 00:28:58,000
packages look nicer but we don't do it

00:28:56,880 --> 00:28:59,600
so let's go ahead

00:28:58,000 --> 00:29:01,760
and look at our questions i'm sure

00:28:59,600 --> 00:29:03,039
there's a ton of them because i went

00:29:01,760 --> 00:29:05,600
why not use flat pack instead of

00:29:03,039 --> 00:29:08,240
building the centos um

00:29:05,600 --> 00:29:08,880
because as you'll notice when i wanted

00:29:08,240 --> 00:29:11,279
to build

00:29:08,880 --> 00:29:12,320
go to centos i ached into it and i hit

00:29:11,279 --> 00:29:14,640
take

00:29:12,320 --> 00:29:16,559
um and that's it and also i don't know

00:29:14,640 --> 00:29:18,159
if the flat pack c runtime is as low as

00:29:16,559 --> 00:29:18,880
2.17 which is actually a hard

00:29:18,159 --> 00:29:22,880
requirement

00:29:18,880 --> 00:29:22,880
um it needs to be

00:29:23,200 --> 00:29:29,679
really low because we can't i mean again

00:29:26,960 --> 00:29:31,279
flat pack it assumes that you will

00:29:29,679 --> 00:29:34,559
package the flat pack

00:29:31,279 --> 00:29:36,880
we don't we don't package anymore

00:29:34,559 --> 00:29:37,919
um so if you want people to use flat

00:29:36,880 --> 00:29:39,520
pack you would actually have to go to

00:29:37,919 --> 00:29:41,360
the distributors and say

00:29:39,520 --> 00:29:43,520
and so the distributors can come to us

00:29:41,360 --> 00:29:44,480
and say hey we're all using flat packs

00:29:43,520 --> 00:29:46,320
so you can

00:29:44,480 --> 00:29:47,760
assume a certain minimum and then i can

00:29:46,320 --> 00:29:50,159
say oh instead of

00:29:47,760 --> 00:29:50,880
going in in the centos i can just do

00:29:50,159 --> 00:29:53,919
like

00:29:50,880 --> 00:29:55,200
flat pack run command bash or whatever

00:29:53,919 --> 00:29:55,919
and then i can do exactly what i was

00:29:55,200 --> 00:29:59,279
doing before

00:29:55,919 --> 00:30:02,000
but just inside the flat pack container

00:29:59,279 --> 00:30:02,640
a little bit not it's not that much

00:30:02,000 --> 00:30:05,120
worse than

00:30:02,640 --> 00:30:06,240
ssh in the centos but if it means i

00:30:05,120 --> 00:30:07,120
could do it at all for door that'd be

00:30:06,240 --> 00:30:09,440
fine

00:30:07,120 --> 00:30:10,799
um the steam would it be better to use

00:30:09,440 --> 00:30:14,559
steam's pressure

00:30:10,799 --> 00:30:16,559
pressure vessel container um probably

00:30:14,559 --> 00:30:17,840
but the developer experience with the

00:30:16,559 --> 00:30:20,960
steam runtime is just

00:30:17,840 --> 00:30:23,039
awful because again

00:30:20,960 --> 00:30:25,520
you have to do all the setup to get a

00:30:23,039 --> 00:30:28,240
steam runtime environment to work

00:30:25,520 --> 00:30:28,799
you you you make a runtime environment

00:30:28,240 --> 00:30:30,880
that people

00:30:28,799 --> 00:30:31,919
build against you're competing with ssh

00:30:30,880 --> 00:30:34,640
and make because

00:30:31,919 --> 00:30:35,279
it's not that hard to put put a centos

00:30:34,640 --> 00:30:37,760
vm

00:30:35,279 --> 00:30:39,120
together i tell windows developers to do

00:30:37,760 --> 00:30:41,360
this all the time

00:30:39,120 --> 00:30:42,880
and like they're actually pleasantly

00:30:41,360 --> 00:30:44,480
surprised when they realize all that to

00:30:42,880 --> 00:30:48,480
do is just have this little

00:30:44,480 --> 00:30:50,320
server and type make and then go home um

00:30:48,480 --> 00:30:51,840
getting them to make all these build

00:30:50,320 --> 00:30:53,039
environments like it makes build

00:30:51,840 --> 00:30:55,440
engineers excited but

00:30:53,039 --> 00:30:56,480
develop independent developers where

00:30:55,440 --> 00:30:58,000
literally they're working out of their

00:30:56,480 --> 00:30:59,440
apartment and have like maybe a couple

00:30:58,000 --> 00:31:00,960
computers in total

00:30:59,440 --> 00:31:02,720
um and don't have all this

00:31:00,960 --> 00:31:03,279
infrastructure they don't like they

00:31:02,720 --> 00:31:05,919
really

00:31:03,279 --> 00:31:06,640
are not interested in putting together

00:31:05,919 --> 00:31:09,600
all this stuff

00:31:06,640 --> 00:31:10,960
you're talking people who benefit from

00:31:09,600 --> 00:31:11,919
the idea that you can just take your

00:31:10,960 --> 00:31:13,200
home computer

00:31:11,919 --> 00:31:16,000
build a program and share it with

00:31:13,200 --> 00:31:17,760
somebody um which is how it used to be

00:31:16,000 --> 00:31:19,200
um an independent dollar independent

00:31:17,760 --> 00:31:21,440
developers in particular

00:31:19,200 --> 00:31:22,960
care very much about that because the

00:31:21,440 --> 00:31:24,480
less overhead they have

00:31:22,960 --> 00:31:25,760
the more likely it is that they won't

00:31:24,480 --> 00:31:27,279
immediately go out of business because

00:31:25,760 --> 00:31:28,399
games industry is very dependent right

00:31:27,279 --> 00:31:30,960
now

00:31:28,399 --> 00:31:31,600
um i would be interested in trying and

00:31:30,960 --> 00:31:33,919
packaging with

00:31:31,600 --> 00:31:35,039
an app image uh have you already thought

00:31:33,919 --> 00:31:38,240
about it yeah

00:31:35,039 --> 00:31:41,279
uh roughly the same light

00:31:38,240 --> 00:31:41,279
same problems flat pack

00:31:41,360 --> 00:31:47,360
also i don't like single file programs

00:31:45,440 --> 00:31:48,799
one of the things i actually like about

00:31:47,360 --> 00:31:50,960
um

00:31:48,799 --> 00:31:52,640
getting programs off cmgog for example

00:31:50,960 --> 00:31:54,399
is that i can see all the files

00:31:52,640 --> 00:31:56,000
and it's not going into like some temp

00:31:54,399 --> 00:31:57,440
directory and

00:31:56,000 --> 00:32:00,080
people can actually take things apart

00:31:57,440 --> 00:32:00,720
and mess with them whereas like i think

00:32:00,080 --> 00:32:04,000
app image

00:32:00,720 --> 00:32:05,600
has an extract function but

00:32:04,000 --> 00:32:07,679
i think the last time i tried it didn't

00:32:05,600 --> 00:32:10,480
work um

00:32:07,679 --> 00:32:12,840
oh and you reminded me what about

00:32:10,480 --> 00:32:16,080
flipping mojo setup for example

00:32:12,840 --> 00:32:17,919
um so we go back to that

00:32:16,080 --> 00:32:19,440
that uh package the photo installer if

00:32:17,919 --> 00:32:19,919
you don't like having installers which

00:32:19,440 --> 00:32:24,000
some people

00:32:19,919 --> 00:32:24,000
generally don't uh guess what

00:32:25,440 --> 00:32:29,279
it's a zip file so you can just extract

00:32:28,559 --> 00:32:31,279
it

00:32:29,279 --> 00:32:33,039
because people know how to extract zip

00:32:31,279 --> 00:32:36,640
files turns out

00:32:33,039 --> 00:32:38,640
so again when it comes to

00:32:36,640 --> 00:32:40,640
packaging you're competing with ssh and

00:32:38,640 --> 00:32:42,320
make and when it comes to

00:32:40,640 --> 00:32:43,519
end users who want to be able to access

00:32:42,320 --> 00:32:44,480
the internals of their software you're

00:32:43,519 --> 00:32:48,480
competing with

00:32:44,480 --> 00:32:48,480
unzip or just nothing at all

00:32:49,120 --> 00:32:53,600
uh just any hints of building a service

00:32:52,159 --> 00:32:55,279
to major setup i have issues with the

00:32:53,600 --> 00:32:59,279
license files under curses

00:32:55,279 --> 00:33:01,600
um i think that got fixed recently

00:32:59,279 --> 00:33:03,679
um i think code reavers because code

00:33:01,600 --> 00:33:06,480
members still use the mojo setup for

00:33:03,679 --> 00:33:07,279
crossover i think so they actually

00:33:06,480 --> 00:33:10,399
submitted

00:33:07,279 --> 00:33:11,760
some patches recently that addressed a

00:33:10,399 --> 00:33:15,279
bunch of things i

00:33:11,760 --> 00:33:17,840
i believe um the increases back end

00:33:15,279 --> 00:33:21,039
worked last time i checked but

00:33:17,840 --> 00:33:21,679
to be fair um i haven't had a lot of use

00:33:21,039 --> 00:33:24,480
case for

00:33:21,679 --> 00:33:25,120
persons so there may genuinely be a bug

00:33:24,480 --> 00:33:27,840
um

00:33:25,120 --> 00:33:29,039
there so i would either bother ryan or i

00:33:27,840 --> 00:33:30,799
would bother

00:33:29,039 --> 00:33:34,720
the person who has the most recent

00:33:30,799 --> 00:33:36,720
commits to the merger setup repository

00:33:34,720 --> 00:33:38,080
uh isn't it a problem that the compilers

00:33:36,720 --> 00:33:40,799
on centos are kind of ancient

00:33:38,080 --> 00:33:42,080
sometimes yes um in fact and this is

00:33:40,799 --> 00:33:42,960
kind of a little bonus thing that you

00:33:42,080 --> 00:33:45,440
can do

00:33:42,960 --> 00:33:46,000
uh thankfully gcc actually keeps up

00:33:45,440 --> 00:33:49,120
pretty well

00:33:46,000 --> 00:33:50,399
um people making games don't use very

00:33:49,120 --> 00:33:53,679
modern language features

00:33:50,399 --> 00:33:55,120
um 11 though like i think the last game

00:33:53,679 --> 00:33:58,159
that i worked on that used a monitor

00:33:55,120 --> 00:33:58,880
set was wonderboy which used c plus plus

00:33:58,159 --> 00:34:00,559
00:33:58,880 --> 00:34:02,159
and that was three years ago like game

00:34:00,559 --> 00:34:03,919
developers are not in the business of

00:34:02,159 --> 00:34:05,919
getting super super intense with modern

00:34:03,919 --> 00:34:07,200
language creatures unreal engine 4 might

00:34:05,919 --> 00:34:10,480
be the exception of that rule

00:34:07,200 --> 00:34:13,359
but in general we

00:34:10,480 --> 00:34:13,839
in general we just go with really really

00:34:13,359 --> 00:34:16,480
old

00:34:13,839 --> 00:34:17,520
versions of things um in fact one of the

00:34:16,480 --> 00:34:19,359
main complaints that i got

00:34:17,520 --> 00:34:20,960
when the vsource crew went out was what

00:34:19,359 --> 00:34:23,839
the heck this is like c plus

00:34:20,960 --> 00:34:24,480
98 and i'm like yup that's how we like

00:34:23,839 --> 00:34:27,760
it

00:34:24,480 --> 00:34:31,760
um and

00:34:27,760 --> 00:34:33,040
so let's go into the fluid bone varnish

00:34:31,760 --> 00:34:34,720
in fact we can actually show off what it

00:34:33,040 --> 00:34:38,480
looks like to go to libraries so

00:34:34,720 --> 00:34:42,879
let's go to fna3d for example which is

00:34:38,480 --> 00:34:46,079
how i do the usual

00:34:42,879 --> 00:34:46,720
deal again you see making me but as it

00:34:46,079 --> 00:34:48,639
turns out

00:34:46,720 --> 00:34:51,520
this is a very recent development i have

00:34:48,639 --> 00:34:53,919
map builds running on this thing

00:34:51,520 --> 00:34:55,200
which actually on vanilla centos is

00:34:53,919 --> 00:34:57,359
impossible

00:34:55,200 --> 00:34:59,440
because you need a pretty recent version

00:34:57,359 --> 00:35:03,280
of planning and lvm to do that

00:34:59,440 --> 00:35:04,079
um and that's actually a bit of a

00:35:03,280 --> 00:35:07,200
problem

00:35:04,079 --> 00:35:09,280
for us but

00:35:07,200 --> 00:35:10,800
we actually have in the case of centos

00:35:09,280 --> 00:35:12,960
there's actually something there's like

00:35:10,800 --> 00:35:14,480
an llvm toolset eight which again is

00:35:12,960 --> 00:35:15,119
still kind of old but at least we have

00:35:14,480 --> 00:35:18,000
it

00:35:15,119 --> 00:35:20,160
so when i do i i call it maximum but

00:35:18,000 --> 00:35:23,280
basically i just go into a shell

00:35:20,160 --> 00:35:25,599
and then i do

00:35:23,280 --> 00:35:25,870
exactly the same thing see make and make

00:35:25,599 --> 00:35:26,960
and

00:35:25,870 --> 00:35:29,040
[Music]

00:35:26,960 --> 00:35:30,960
of course it has some warnings in there

00:35:29,040 --> 00:35:33,040
just because

00:35:30,960 --> 00:35:34,800
it is a little bit of a sketchy setup

00:35:33,040 --> 00:35:36,880
but if you'll notice

00:35:34,800 --> 00:35:39,280
we actually have um

00:35:36,880 --> 00:35:42,560
[Music]

00:35:39,280 --> 00:35:44,960
thyroid and it's mac dialed it's

00:35:42,560 --> 00:35:46,160
quick it's kind of neat um but that's

00:35:44,960 --> 00:35:48,560
pretty much the only example

00:35:46,160 --> 00:35:50,320
i can think of where um i really needed

00:35:48,560 --> 00:35:51,920
a modern compiler and it's not

00:35:50,320 --> 00:35:54,560
it's client eight so it's not even that

00:35:51,920 --> 00:35:56,880
new um

00:35:54,560 --> 00:35:58,079
but yeah i mean again getting back to

00:35:56,880 --> 00:35:58,960
the i would really like to be able to

00:35:58,079 --> 00:36:00,240
develop on fedora

00:35:58,960 --> 00:36:02,480
it would be pretty cool to be able to

00:36:00,240 --> 00:36:05,359
say hey i can take gcc 10

00:36:02,480 --> 00:36:06,640
or gcc 11. just set a flag that says

00:36:05,359 --> 00:36:10,000
don't target anything that g

00:36:06,640 --> 00:36:13,280
flip c 2.7 team wouldn't have

00:36:10,000 --> 00:36:16,880
and go that'd be great um it hasn't been

00:36:13,280 --> 00:36:18,560
um deadly though so i think we have

00:36:16,880 --> 00:36:21,920
about two minutes i think i saw some

00:36:18,560 --> 00:36:21,920
stuff in public chat let's see

00:36:24,839 --> 00:36:28,720
hi yeah if you want to work with c plus

00:36:27,359 --> 00:36:31,599
98 code go look at v

00:36:28,720 --> 00:36:32,640
it's um we still have the terrifying

00:36:31,599 --> 00:36:34,079
like 4 000

00:36:32,640 --> 00:36:36,160
case switch statement in there like

00:36:34,079 --> 00:36:36,560
we've polished some things but it's

00:36:36,160 --> 00:36:40,880
still

00:36:36,560 --> 00:36:43,040
just as gorgeous as the day it launched

00:36:40,880 --> 00:36:44,960
i think do you have any more notes

00:36:43,040 --> 00:36:46,480
before i

00:36:44,960 --> 00:36:48,480
give you guys a sweet release of me

00:36:46,480 --> 00:36:50,000
getting off camera oh by the way uh

00:36:48,480 --> 00:36:51,200
streets of rage 4 is now available for

00:36:50,000 --> 00:36:54,320
linux

00:36:51,200 --> 00:36:55,119
we just launched it um while i was

00:36:54,320 --> 00:36:57,839
getting that talk

00:36:55,119 --> 00:36:59,200
i probably should have mentioned that

00:36:57,839 --> 00:37:02,640
you may have you may have seen a little

00:36:59,200 --> 00:37:05,680
bit but yeah it's true uh

00:37:02,640 --> 00:37:05,680
it's my fiftieth night

00:37:06,720 --> 00:37:10,240
so thanks everybody um if you have any

00:37:09,280 --> 00:37:13,520
more questions

00:37:10,240 --> 00:37:14,880
uh go to this website

00:37:13,520 --> 00:37:17,200
my email address is at the bottom feel

00:37:14,880 --> 00:37:19,119
free to scroll um

00:37:17,200 --> 00:37:20,480
all the way down manually it's a fun

00:37:19,119 --> 00:37:24,079
experience trust me

00:37:20,480 --> 00:37:34,320
uh so yeah thanks everybody thank you

00:37:24,079 --> 00:37:34,320

YouTube URL: https://www.youtube.com/watch?v=VkZEAeUFmtc


