Title: Can your app run on a mainframe? - Elizabeth K. Joseph
Publication date: 2020-11-15
Playlist: Linux App Summit 2020 Talks
Description: 
	Modern mainframes feature state of the art hardware and software, including Linux, which is now the fastest growing operating system for the platform. Many organizations that are now taking their first steps into Linux, or moving workloads back to the mainframe, to take advantage of the security enhancements and software now available for Linux.

In this talk, I'll cover what is involved in porting an application to the big-endian architecture, as well as free (as in beer) and open source tools and services available to developers to build, test, and release applications for the platform. I'll also talk about how the IBM Z Ecosystem Team has been working with individual developers, the Linux Foundationâ€™s Open Mainframe Project, various Linux distributions, and specific open source projects to port their applications to the mainframe architecture. I will conclude by touching upon about how apps running on Linux can communicate with the more traditional mainframe back-ends, including open source projects like Zowe that modernize these interactions with an API and more.
Captions: 
	00:00:01,839 --> 00:00:06,640
all right hello everybody

00:00:03,760 --> 00:00:07,279
uh so thank you for coming um this is my

00:00:06,640 --> 00:00:10,800
first time

00:00:07,279 --> 00:00:13,759
at the linux application summit um but

00:00:10,800 --> 00:00:14,400
uh my background i've i've done a lot of

00:00:13,759 --> 00:00:17,600
work

00:00:14,400 --> 00:00:20,640
um in linux application space

00:00:17,600 --> 00:00:24,240
i spent a lot of my career working

00:00:20,640 --> 00:00:27,599
on ubuntu as a as a developer

00:00:24,240 --> 00:00:30,080
and a community outreach person

00:00:27,599 --> 00:00:30,720
and that was of all volunteer work and

00:00:30,080 --> 00:00:34,320
then i

00:00:30,720 --> 00:00:37,760
moved into other areas

00:00:34,320 --> 00:00:39,680
of open source um so

00:00:37,760 --> 00:00:40,960
what brings me here today is to talk to

00:00:39,680 --> 00:00:43,920
you about what i do for my

00:00:40,960 --> 00:00:45,200
day job these days um so i work over at

00:00:43,920 --> 00:00:48,320
ibm

00:00:45,200 --> 00:00:49,280
and i was looking for sort of a change

00:00:48,320 --> 00:00:52,079
in my career

00:00:49,280 --> 00:00:53,280
i was really interested in linux desktop

00:00:52,079 --> 00:00:56,640
and then i was working as a linux

00:00:53,280 --> 00:00:59,280
sysadmin for about 15 years

00:00:56,640 --> 00:01:00,239
but and i'd gotten into the cloud world

00:00:59,280 --> 00:01:03,120
um

00:01:00,239 --> 00:01:04,559
and had been working on openstack and

00:01:03,120 --> 00:01:06,400
containers

00:01:04,559 --> 00:01:08,159
um and all kinds of things that we think

00:01:06,400 --> 00:01:11,760
of when we think of the modern

00:01:08,159 --> 00:01:13,360
like devops movement sre um but when i

00:01:11,760 --> 00:01:15,200
about a couple years ago

00:01:13,360 --> 00:01:16,640
i thought you know everyone else is

00:01:15,200 --> 00:01:18,400
going over to kubernetes and working on

00:01:16,640 --> 00:01:20,000
that cool new infrastructure thing

00:01:18,400 --> 00:01:22,080
but i was wondering what else was out

00:01:20,000 --> 00:01:25,119
there um so i

00:01:22,080 --> 00:01:27,119
was approached by ibm i said

00:01:25,119 --> 00:01:28,640
do you want to work on mainframes and i

00:01:27,119 --> 00:01:31,680
was like

00:01:28,640 --> 00:01:33,840
no um but

00:01:31,680 --> 00:01:35,920
uh they convinced me um i was able to

00:01:33,840 --> 00:01:37,840
talk to a bunch of their technical staff

00:01:35,920 --> 00:01:39,280
um i was able to dive into some of the

00:01:37,840 --> 00:01:40,640
open source work that's being done on

00:01:39,280 --> 00:01:43,759
the mainframe

00:01:40,640 --> 00:01:45,439
which i'll talk about in this talk and

00:01:43,759 --> 00:01:47,119
the state of linux on the mainframe

00:01:45,439 --> 00:01:49,040
which it turns out has been around

00:01:47,119 --> 00:01:51,920
for 20 years linux has been running on

00:01:49,040 --> 00:01:53,520
this hardware over 20 years actually

00:01:51,920 --> 00:01:55,119
so that is what i'm here to talk to you

00:01:53,520 --> 00:01:57,280
about and how you can get your

00:01:55,119 --> 00:01:58,399
application to run on it there's a bunch

00:01:57,280 --> 00:02:01,200
of free

00:01:58,399 --> 00:02:03,360
resources out there um that allow you to

00:02:01,200 --> 00:02:07,280
uh

00:02:03,360 --> 00:02:11,200
developation on this platform

00:02:07,280 --> 00:02:13,360
all right so the first question i want

00:02:11,200 --> 00:02:16,800
to answer is what exactly a mainframe is

00:02:13,360 --> 00:02:19,200
because when i started talking ibm

00:02:16,800 --> 00:02:20,319
i wasn't sure what they were i knew they

00:02:19,200 --> 00:02:21,920
were big computers

00:02:20,319 --> 00:02:23,840
i know they were they've been around

00:02:21,920 --> 00:02:25,599
longer than i have

00:02:23,840 --> 00:02:27,840
uh but most of what i knew about

00:02:25,599 --> 00:02:30,480
mainframes was kind of like

00:02:27,840 --> 00:02:32,160
they were this vague big computer that

00:02:30,480 --> 00:02:33,280
i've never seen and probably would never

00:02:32,160 --> 00:02:34,400
work on because they're really

00:02:33,280 --> 00:02:36,800
complicated

00:02:34,400 --> 00:02:38,239
um and they you know that i didn't think

00:02:36,800 --> 00:02:39,200
that they ran the software that i was

00:02:38,239 --> 00:02:40,959
interested in

00:02:39,200 --> 00:02:42,239
i didn't think they did anything that

00:02:40,959 --> 00:02:44,560
that would have i

00:02:42,239 --> 00:02:46,319
would have ever crossed paths with i

00:02:44,560 --> 00:02:47,040
also didn't realize how pervasive they

00:02:46,319 --> 00:02:50,080
still are

00:02:47,040 --> 00:02:52,080
in the industry um this

00:02:50,080 --> 00:02:53,440
mainframe business is a multi-billion

00:02:52,080 --> 00:02:57,040
dollar industry

00:02:53,440 --> 00:02:59,760
um every time you swipe a credit card um

00:02:57,040 --> 00:03:01,280
there is a very very very high chance

00:02:59,760 --> 00:03:03,200
that it is going through a mainframe

00:03:01,280 --> 00:03:06,000
somewhere in the world

00:03:03,200 --> 00:03:06,720
um whether it's and and so it's huge in

00:03:06,000 --> 00:03:09,599
finance

00:03:06,720 --> 00:03:10,959
it's huge in health tech um it's huge in

00:03:09,599 --> 00:03:12,480
the insurance agency

00:03:10,959 --> 00:03:14,319
most of the airlines still run on

00:03:12,480 --> 00:03:16,800
mainframes um

00:03:14,319 --> 00:03:18,159
so that's the first thing um and this

00:03:16,800 --> 00:03:20,480
picture here

00:03:18,159 --> 00:03:21,680
is a photograph of a mainframe in a data

00:03:20,480 --> 00:03:24,560
center

00:03:21,680 --> 00:03:25,519
so these days they're they don't take up

00:03:24,560 --> 00:03:28,239
a whole room

00:03:25,519 --> 00:03:28,799
um they each each like section of the

00:03:28,239 --> 00:03:30,159
rack

00:03:28,799 --> 00:03:32,239
there's four of them in this picture

00:03:30,159 --> 00:03:34,159
that have the blue on it

00:03:32,239 --> 00:03:36,080
each section the rack is 19 inches wide

00:03:34,159 --> 00:03:37,360
so they fit into a standard 19-inch rack

00:03:36,080 --> 00:03:38,239
spot you no longer have to have a

00:03:37,360 --> 00:03:41,360
special place

00:03:38,239 --> 00:03:44,959
in your data center for this mainframe

00:03:41,360 --> 00:03:46,799
when you open it up this is what it

00:03:44,959 --> 00:03:48,480
looks like inside

00:03:46,799 --> 00:03:49,840
um it's a little hard to see because

00:03:48,480 --> 00:03:51,760
this is so small

00:03:49,840 --> 00:03:54,080
um but the main things that i wanted to

00:03:51,760 --> 00:03:56,159
point out was that there is no storage

00:03:54,080 --> 00:03:57,760
inside of a mainframe all the storage is

00:03:56,159 --> 00:03:59,120
going to be external so you attach a

00:03:57,760 --> 00:04:01,120
storage device there's a bunch of

00:03:59,120 --> 00:04:03,280
companies that make them

00:04:01,120 --> 00:04:04,400
and then inside it's pretty much all

00:04:03,280 --> 00:04:07,360
processing power

00:04:04,400 --> 00:04:09,200
so you've got your cpus your memory your

00:04:07,360 --> 00:04:11,760
pcie cards

00:04:09,200 --> 00:04:12,319
um it's like the through the five red

00:04:11,760 --> 00:04:15,280
circ

00:04:12,319 --> 00:04:16,560
red red um boxes in the middle are your

00:04:15,280 --> 00:04:18,479
cpus

00:04:16,560 --> 00:04:20,160
um which i'll talk about in a moment and

00:04:18,479 --> 00:04:22,479
then most of the rest of this

00:04:20,160 --> 00:04:24,160
is all of your like i o cards your

00:04:22,479 --> 00:04:26,240
cryptographic cards

00:04:24,160 --> 00:04:28,560
all of the specialized cards that make a

00:04:26,240 --> 00:04:31,199
mainframe really special and very good

00:04:28,560 --> 00:04:33,680
at processing data

00:04:31,199 --> 00:04:35,520
in the model that was released last year

00:04:33,680 --> 00:04:36,800
you have a water cooled option which is

00:04:35,520 --> 00:04:39,120
pretty much the standard

00:04:36,800 --> 00:04:40,560
um for these systems but they also have

00:04:39,120 --> 00:04:43,440
an air cooled version

00:04:40,560 --> 00:04:43,759
and you can get this in either one frame

00:04:43,440 --> 00:04:45,520
two

00:04:43,759 --> 00:04:47,199
three or four frames so if you get the

00:04:45,520 --> 00:04:47,759
four frame one like pictured here that's

00:04:47,199 --> 00:04:50,160
like

00:04:47,759 --> 00:04:50,960
the totally maxed out system that you

00:04:50,160 --> 00:04:52,800
can get

00:04:50,960 --> 00:04:54,400
and you can cluster mainframe so you can

00:04:52,800 --> 00:04:56,400
have multiple um

00:04:54,400 --> 00:04:58,720
and so you can scale scale horizontally

00:04:56,400 --> 00:04:58,720
that way

00:04:59,040 --> 00:05:02,400
um yeah so this one actually is the

00:05:01,360 --> 00:05:04,639
water cooled system

00:05:02,400 --> 00:05:04,639
here

00:05:06,000 --> 00:05:12,400
and those cpus so the really

00:05:09,280 --> 00:05:14,240
key thing for this entire talk is that

00:05:12,400 --> 00:05:16,639
they are not x86

00:05:14,240 --> 00:05:19,280
uh depending on who you talk to you'll

00:05:16,639 --> 00:05:20,960
see people refer to it as ibm z

00:05:19,280 --> 00:05:22,720
um which is probably how i'll refer to

00:05:20,960 --> 00:05:25,759
it in the rest of this talk um

00:05:22,720 --> 00:05:27,440
an s390x is how you might see it if you

00:05:25,759 --> 00:05:28,880
are in the open source world or in the

00:05:27,440 --> 00:05:30,880
linux world

00:05:28,880 --> 00:05:32,080
and are looking for the binaries for

00:05:30,880 --> 00:05:34,320
this architecture

00:05:32,080 --> 00:05:35,440
um if you come from sort of the

00:05:34,320 --> 00:05:37,759
mainframe

00:05:35,440 --> 00:05:39,759
um background you might refer to it as

00:05:37,759 --> 00:05:42,720
the architecture

00:05:39,759 --> 00:05:45,120
the cpus themselves if you have a maxed

00:05:42,720 --> 00:05:48,240
out system

00:05:45,120 --> 00:05:49,199
there are 190 of these processors inside

00:05:48,240 --> 00:05:53,120
that four frame

00:05:49,199 --> 00:05:55,440
machine each processor has 12 cores

00:05:53,120 --> 00:05:56,319
and each processor also has really big

00:05:55,440 --> 00:05:57,600
caches

00:05:56,319 --> 00:05:59,600
and that's one of the defining

00:05:57,600 --> 00:06:00,960
characteristics of this architecture is

00:05:59,600 --> 00:06:05,600
that

00:06:00,960 --> 00:06:07,600
these systems were built for um

00:06:05,600 --> 00:06:09,600
uh processing data so if you think back

00:06:07,600 --> 00:06:10,160
to the 1960s when the first ones were

00:06:09,600 --> 00:06:12,479
released

00:06:10,160 --> 00:06:14,319
the only companies that needed computers

00:06:12,479 --> 00:06:16,319
were ones that were doing

00:06:14,319 --> 00:06:17,840
processing ones that were doing a lot of

00:06:16,319 --> 00:06:20,000
work with data so they were either

00:06:17,840 --> 00:06:21,520
processing data or storing data so

00:06:20,000 --> 00:06:22,720
as we think back to the industries i

00:06:21,520 --> 00:06:24,000
mentioned the beginning we're thinking

00:06:22,720 --> 00:06:24,960
about banks we're thinking about

00:06:24,000 --> 00:06:27,840
airlines

00:06:24,960 --> 00:06:29,600
and ones who need to have data because

00:06:27,840 --> 00:06:30,720
there was no facebook back then like you

00:06:29,600 --> 00:06:32,960
didn't need to store your

00:06:30,720 --> 00:06:34,800
store random data about people it was

00:06:32,960 --> 00:06:35,919
really industries that were data focused

00:06:34,800 --> 00:06:37,759
back in the day

00:06:35,919 --> 00:06:38,960
and the systems are still geared towards

00:06:37,759 --> 00:06:40,880
data

00:06:38,960 --> 00:06:42,800
um in a fully decked out system you get

00:06:40,880 --> 00:06:46,160
40 terabytes of ram

00:06:42,800 --> 00:06:49,599
i mentioned all those pcie cards um

00:06:46,160 --> 00:06:51,919
and so there's 12 drawers of those um

00:06:49,599 --> 00:06:53,360
and they there are also these processors

00:06:51,919 --> 00:06:56,479
called saps

00:06:53,360 --> 00:06:59,759
um which are dedicated purely to io

00:06:56,479 --> 00:07:03,120
so when you're doing i o um

00:06:59,759 --> 00:07:04,720
you don't have to take away from the

00:07:03,120 --> 00:07:06,319
like the general processing power there

00:07:04,720 --> 00:07:07,919
are specific processors in there that

00:07:06,319 --> 00:07:11,680
just handle i o and again this is

00:07:07,919 --> 00:07:11,680
because of the data focus of the systems

00:07:13,120 --> 00:07:16,240
so there's an interesting question

00:07:14,720 --> 00:07:18,400
comment in the chat and

00:07:16,240 --> 00:07:20,639
someone mentioned that that um she had

00:07:18,400 --> 00:07:21,520
seen s390x while doing some some work on

00:07:20,639 --> 00:07:22,639
suse

00:07:21,520 --> 00:07:24,639
and they didn't know what they what it

00:07:22,639 --> 00:07:27,599
was for months

00:07:24,639 --> 00:07:28,319
yeah so that that is a great segue into

00:07:27,599 --> 00:07:31,199
this slide

00:07:28,319 --> 00:07:31,840
um so i wanted to stop for a moment just

00:07:31,199 --> 00:07:34,240
talk about

00:07:31,840 --> 00:07:35,599
other architectures in general um so the

00:07:34,240 --> 00:07:37,280
kubernetes project

00:07:35,599 --> 00:07:39,039
is just one that i like to bring up as

00:07:37,280 --> 00:07:40,319
an example as an infrastructure person

00:07:39,039 --> 00:07:42,080
myself

00:07:40,319 --> 00:07:43,199
they release binaries for their servers

00:07:42,080 --> 00:07:44,800
and their clients in multiple

00:07:43,199 --> 00:07:47,599
architectures

00:07:44,800 --> 00:07:48,960
so if you want to go through the list of

00:07:47,599 --> 00:07:51,680
what they release their server

00:07:48,960 --> 00:07:53,199
their kubernetes server has one of them

00:07:51,680 --> 00:07:54,400
is amd64

00:07:53,199 --> 00:07:58,160
which you're probably familiar with

00:07:54,400 --> 00:08:00,000
that's your standard 64-bit x86 machine

00:07:58,160 --> 00:08:01,360
um that's you know going to be in your

00:08:00,000 --> 00:08:05,360
standard laptop and

00:08:01,360 --> 00:08:05,360
not much longer for apple but

00:08:05,440 --> 00:08:08,879
the vm desktop and server that's that's

00:08:07,280 --> 00:08:10,000
pretty much what you're going to get if

00:08:08,879 --> 00:08:13,039
you

00:08:10,000 --> 00:08:16,080
you know load up any any random system

00:08:13,039 --> 00:08:17,360
and so that is oh

00:08:16,080 --> 00:08:20,160
and if you're interested in like

00:08:17,360 --> 00:08:22,479
architecture history finding out how

00:08:20,160 --> 00:08:24,240
x86 became the dominant architecture in

00:08:22,479 --> 00:08:25,520
the industry is a fascinating story

00:08:24,240 --> 00:08:27,360
and it has very little to do with

00:08:25,520 --> 00:08:28,400
technology there's a lot of politics

00:08:27,360 --> 00:08:30,720
involved in like

00:08:28,400 --> 00:08:32,479
back in the 80 86 days but that's way

00:08:30,720 --> 00:08:34,399
off topic

00:08:32,479 --> 00:08:35,760
um another one you might see around his

00:08:34,399 --> 00:08:39,039
arm of course arm

00:08:35,760 --> 00:08:40,000
is an arm hf those are those are what

00:08:39,039 --> 00:08:42,560
are in the older cell

00:08:40,000 --> 00:08:43,440
phones um and also the raspberry pi one

00:08:42,560 --> 00:08:46,880
and two

00:08:43,440 --> 00:08:48,720
so that's a 32-bit arm arm 64

00:08:46,880 --> 00:08:50,160
is the more modern version of arm again

00:08:48,720 --> 00:08:52,000
64-bit

00:08:50,160 --> 00:08:53,279
um that's arm so that's in all the

00:08:52,000 --> 00:08:56,399
modern cell phones both

00:08:53,279 --> 00:08:58,880
android and um

00:08:56,399 --> 00:09:00,480
and and the iphones and that's also

00:08:58,880 --> 00:09:01,760
what's in the raspberry pi three and

00:09:00,480 --> 00:09:03,200
four so if you've ever played around

00:09:01,760 --> 00:09:06,080
with the raspberry pi

00:09:03,200 --> 00:09:07,680
you have gotten your first taste of uh

00:09:06,080 --> 00:09:09,040
different architectures

00:09:07,680 --> 00:09:12,080
some of the stuff won't run because you

00:09:09,040 --> 00:09:15,680
have to compile it for that architecture

00:09:12,080 --> 00:09:18,800
um the ppc64

00:09:15,680 --> 00:09:21,200
so that is powerpc 64-bit

00:09:18,800 --> 00:09:22,959
you'll find those in ibm's power series

00:09:21,200 --> 00:09:24,720
of servers so that's the power 9 and the

00:09:22,959 --> 00:09:28,560
power 10 systems

00:09:24,720 --> 00:09:31,680
um the 64-bit um power pc was also used

00:09:28,560 --> 00:09:33,279
in the wii u system and the ps3 and the

00:09:31,680 --> 00:09:36,320
xbox 360.

00:09:33,279 --> 00:09:37,680
so that like era of of game consoles i

00:09:36,320 --> 00:09:38,560
guess we use a little after the other

00:09:37,680 --> 00:09:40,959
two but

00:09:38,560 --> 00:09:42,959
um there was a lot of power pc in gaming

00:09:40,959 --> 00:09:45,920
consoles for a while there

00:09:42,959 --> 00:09:47,040
um the le that's in parentheses which is

00:09:45,920 --> 00:09:49,040
what kubernetes

00:09:47,040 --> 00:09:50,800
releases as their binaries that stands

00:09:49,040 --> 00:09:53,680
for little endian

00:09:50,800 --> 00:09:55,920
um and that means power pc is typically

00:09:53,680 --> 00:09:58,640
big endian which has to do with um

00:09:55,920 --> 00:10:00,240
how how memory is handled in the system

00:09:58,640 --> 00:10:01,839
but the version that is becoming

00:10:00,240 --> 00:10:03,680
increasingly popular is a little endian

00:10:01,839 --> 00:10:05,600
version because every other processor

00:10:03,680 --> 00:10:08,240
i've described on this list

00:10:05,600 --> 00:10:10,399
is a little endian processor and that

00:10:08,240 --> 00:10:13,279
matters when you're porting software

00:10:10,399 --> 00:10:15,920
so powerpc has both versions and then

00:10:13,279 --> 00:10:18,000
coming again to the s390x

00:10:15,920 --> 00:10:20,320
which i'm talking about here that is big

00:10:18,000 --> 00:10:23,120
endian so on this list

00:10:20,320 --> 00:10:26,000
power pc has both s390x is big endian

00:10:23,120 --> 00:10:26,000
the rest are little

00:10:26,320 --> 00:10:29,839
so that is your very quick tour of

00:10:28,160 --> 00:10:31,440
hardware architectures and i had to try

00:10:29,839 --> 00:10:32,720
really hard not to dive too deep into

00:10:31,440 --> 00:10:34,880
this because you can get

00:10:32,720 --> 00:10:37,200
there's like many many talks about this

00:10:34,880 --> 00:10:37,200
topic

00:10:39,839 --> 00:10:45,760
so mainframes ibm z

00:10:44,079 --> 00:10:47,839
where did these things come from anyway

00:10:45,760 --> 00:10:49,279
um so one of the things that i

00:10:47,839 --> 00:10:51,120
that really pulled me in when i was

00:10:49,279 --> 00:10:52,240
learning about this architecture and

00:10:51,120 --> 00:10:54,160
these systems

00:10:52,240 --> 00:10:55,920
was that they have a really strong open

00:10:54,160 --> 00:10:57,760
source legacy it turns out

00:10:55,920 --> 00:10:59,440
like i was thinking you know ibm

00:10:57,760 --> 00:11:01,519
controls everything and they

00:10:59,440 --> 00:11:02,720
have this proprietary ecosystem and this

00:11:01,519 --> 00:11:05,279
whole thing

00:11:02,720 --> 00:11:06,800
but when i was reading about it it turns

00:11:05,279 --> 00:11:08,320
out that there's this organization

00:11:06,800 --> 00:11:11,680
called share

00:11:08,320 --> 00:11:13,519
it was founded in 1955 and so it is the

00:11:11,680 --> 00:11:16,959
longest continuously running

00:11:13,519 --> 00:11:20,079
open or a computer user group

00:11:16,959 --> 00:11:21,680
in the world um so

00:11:20,079 --> 00:11:23,680
that's pretty cool they just they just

00:11:21,680 --> 00:11:25,120
celebrated an anniversary this year and

00:11:23,680 --> 00:11:27,200
they had to have a virtual event which

00:11:25,120 --> 00:11:28,480
was sad but next year we'll all get back

00:11:27,200 --> 00:11:30,959
together

00:11:28,480 --> 00:11:34,320
um and one of the key resources back in

00:11:30,959 --> 00:11:36,480
the 1950s was the share library

00:11:34,320 --> 00:11:38,800
and that's a library of software that

00:11:36,480 --> 00:11:39,920
the developers of this these first

00:11:38,800 --> 00:11:41,760
computers

00:11:39,920 --> 00:11:43,920
the first commercial computers were

00:11:41,760 --> 00:11:45,440
sharing freely among each other

00:11:43,920 --> 00:11:47,120
um it wasn't really open source in the

00:11:45,440 --> 00:11:49,360
way we think of it now

00:11:47,120 --> 00:11:50,160
because there wasn't you know licensing

00:11:49,360 --> 00:11:51,760
and and

00:11:50,160 --> 00:11:53,760
legal stuff getting away it was just

00:11:51,760 --> 00:11:55,519
this was source code was the only way

00:11:53,760 --> 00:11:59,200
people could share code

00:11:55,519 --> 00:11:59,760
um in 1959 the organization came

00:11:59,200 --> 00:12:02,959
together

00:11:59,760 --> 00:12:05,040
and released the first operating system

00:12:02,959 --> 00:12:07,120
that really ever existed that had like

00:12:05,040 --> 00:12:09,200
certain components that you would

00:12:07,120 --> 00:12:11,120
generally call an operating system so

00:12:09,200 --> 00:12:12,959
it's called sos

00:12:11,120 --> 00:12:14,560
and if you go to wikipedia and read

00:12:12,959 --> 00:12:16,399
about sos it

00:12:14,560 --> 00:12:18,399
they they say it's it's one of the the

00:12:16,399 --> 00:12:20,240
first instances of commons based

00:12:18,399 --> 00:12:21,440
peer production now widely used in

00:12:20,240 --> 00:12:23,440
development of free and open source

00:12:21,440 --> 00:12:24,720
software such as linux and the gnu

00:12:23,440 --> 00:12:27,440
project

00:12:24,720 --> 00:12:29,200
so it's it's funny to me because when i

00:12:27,440 --> 00:12:32,079
when i look back at histories

00:12:29,200 --> 00:12:33,519
of open source and histories of things

00:12:32,079 --> 00:12:36,880
like linux

00:12:33,519 --> 00:12:38,000
unix plays a very very like a starring

00:12:36,880 --> 00:12:40,320
role in all of these

00:12:38,000 --> 00:12:41,440
stories um but unix only dates back to

00:12:40,320 --> 00:12:42,880
the 1970s

00:12:41,440 --> 00:12:45,360
um here we're looking back all the way

00:12:42,880 --> 00:12:47,519
into the 50s of people sharing software

00:12:45,360 --> 00:12:48,480
so cher is super cool there's lots of

00:12:47,519 --> 00:12:50,880
great people

00:12:48,480 --> 00:12:52,480
who weren't part of this organization

00:12:50,880 --> 00:12:55,760
and it's all focused

00:12:52,480 --> 00:12:56,480
um on mainframe i mentioned at the

00:12:55,760 --> 00:12:59,279
beginning

00:12:56,480 --> 00:12:59,839
uh that linux runs on the mainframe and

00:12:59,279 --> 00:13:03,360
it has

00:12:59,839 --> 00:13:05,760
for over 20 years um again like

00:13:03,360 --> 00:13:06,880
with this open source legacy like this

00:13:05,760 --> 00:13:10,160
all started out

00:13:06,880 --> 00:13:12,160
um as a community project as well um if

00:13:10,160 --> 00:13:13,200
anyone was around in the late 90s

00:13:12,160 --> 00:13:16,000
playing around with linux

00:13:13,200 --> 00:13:17,440
this was the era of like putting linux

00:13:16,000 --> 00:13:19,839
on a dead badger

00:13:17,440 --> 00:13:20,880
um that was a series of essays about you

00:13:19,839 --> 00:13:22,880
know um

00:13:20,880 --> 00:13:25,120
about like funny essays about linux and

00:13:22,880 --> 00:13:26,560
then where it was in the late 90s

00:13:25,120 --> 00:13:28,079
so people were just putting linux on

00:13:26,560 --> 00:13:28,720
everything because you could it was open

00:13:28,079 --> 00:13:30,240
source

00:13:28,720 --> 00:13:31,760
it was really lean at the time and

00:13:30,240 --> 00:13:33,040
people were trying to experiment and

00:13:31,760 --> 00:13:34,720
geek out about it

00:13:33,040 --> 00:13:37,040
um if you do go into the history of

00:13:34,720 --> 00:13:38,720
linux it's it's on ibm z it's it's

00:13:37,040 --> 00:13:41,600
really fun because

00:13:38,720 --> 00:13:42,399
the like if you're a linux nerd at all

00:13:41,600 --> 00:13:43,920
you'll totally

00:13:42,399 --> 00:13:46,399
see yourself in their reasons for

00:13:43,920 --> 00:13:49,279
porting it they ported it because

00:13:46,399 --> 00:13:50,240
it was there like it existed it seemed

00:13:49,279 --> 00:13:52,480
fun

00:13:50,240 --> 00:13:53,839
um they ported it because it was an

00:13:52,480 --> 00:13:55,680
interesting challenge

00:13:53,839 --> 00:13:57,120
um and then if you go down their list

00:13:55,680 --> 00:13:59,040
they're like oh yeah the i o is really

00:13:57,120 --> 00:14:00,959
fast and it does all this great stuff so

00:13:59,040 --> 00:14:02,320
it'd be cool to run linux on it but

00:14:00,959 --> 00:14:05,600
you know at the heart i know it's those

00:14:02,320 --> 00:14:07,040
first few reasons um

00:14:05,600 --> 00:14:08,880
and so there was a community effort

00:14:07,040 --> 00:14:11,199
working on this getting it running

00:14:08,880 --> 00:14:12,720
um and then it turns out ibm was

00:14:11,199 --> 00:14:16,320
simultaneously

00:14:12,720 --> 00:14:18,800
um working on on a linux version

00:14:16,320 --> 00:14:20,480
as well and so they released their first

00:14:18,800 --> 00:14:21,040
series of kernel patches i think it was

00:14:20,480 --> 00:14:24,399
a

00:14:21,040 --> 00:14:26,079
2-2 kernel in december of 1999.

00:14:24,399 --> 00:14:28,839
these were pretty much just like blobs

00:14:26,079 --> 00:14:32,320
like here this is how to get it to run

00:14:28,839 --> 00:14:36,720
um in october 2000 um

00:14:32,320 --> 00:14:38,959
suse enterprise server became the first

00:14:36,720 --> 00:14:39,839
um still in production enterprise linux

00:14:38,959 --> 00:14:42,880
to run on

00:14:39,839 --> 00:14:44,160
s390x architecture um there's an

00:14:42,880 --> 00:14:47,839
interesting story here

00:14:44,160 --> 00:14:51,040
um so i know that it's really just

00:14:47,839 --> 00:14:54,000
um a marketing thing right like when

00:14:51,040 --> 00:14:55,519
when uh suse rebranded to call itself

00:14:54,000 --> 00:14:56,639
enterprise linux server and all this

00:14:55,519 --> 00:14:59,120
stuff but

00:14:56,639 --> 00:15:00,800
the first suse enterprise server was

00:14:59,120 --> 00:15:03,680
called enterprise server

00:15:00,800 --> 00:15:05,440
because it ran on s390x it was

00:15:03,680 --> 00:15:06,560
enterprise because it ran on enterprise

00:15:05,440 --> 00:15:08,880
hardware

00:15:06,560 --> 00:15:09,600
the x86 version of suse enterprise

00:15:08,880 --> 00:15:11,360
server

00:15:09,600 --> 00:15:13,279
actually came a few months after the

00:15:11,360 --> 00:15:15,360
mainframe version

00:15:13,279 --> 00:15:16,800
um which is funny to me because then i

00:15:15,360 --> 00:15:20,160
get to tell people that this

00:15:16,800 --> 00:15:21,040
suse enterprise the x86 version is the

00:15:20,160 --> 00:15:23,279
port

00:15:21,040 --> 00:15:26,160
the mainframe version is the original i

00:15:23,279 --> 00:15:29,199
know it's not true but it's funny anyway

00:15:26,160 --> 00:15:31,040
um so tuesday was the first um red hat

00:15:29,199 --> 00:15:32,320
like just a couple months later they

00:15:31,040 --> 00:15:32,880
followed they were the second one that's

00:15:32,320 --> 00:15:34,639
like

00:15:32,880 --> 00:15:36,000
still an enterprise linux that runs on

00:15:34,639 --> 00:15:38,959
on the mainframe

00:15:36,000 --> 00:15:40,399
um and then and then one you know

00:15:38,959 --> 00:15:43,920
several years afterwards

00:15:40,399 --> 00:15:45,920
late late into 2016 ubuntu became

00:15:43,920 --> 00:15:47,199
came to support on the platform with

00:15:45,920 --> 00:15:50,800
their uh

00:15:47,199 --> 00:15:52,560
1604 release so when we talk about linux

00:15:50,800 --> 00:15:54,560
on the mainframe it's not some

00:15:52,560 --> 00:15:55,759
special ibm thing it's not some special

00:15:54,560 --> 00:15:57,839
proprietary thing

00:15:55,759 --> 00:15:59,440
it really is like these linuxes that we

00:15:57,839 --> 00:16:01,519
know and love already

00:15:59,440 --> 00:16:03,120
i also have a slide coming up with other

00:16:01,519 --> 00:16:06,160
distributions the community supported

00:16:03,120 --> 00:16:08,880
ones that are all on there

00:16:06,160 --> 00:16:10,399
um so at the beginning of this deck this

00:16:08,880 --> 00:16:12,079
presentation i showed you

00:16:10,399 --> 00:16:14,399
some mainframes with with a blue cover

00:16:12,079 --> 00:16:15,040
on them uh the ones with the orange

00:16:14,399 --> 00:16:18,000
cover

00:16:15,040 --> 00:16:19,440
are called linux one and those only run

00:16:18,000 --> 00:16:21,519
linux

00:16:19,440 --> 00:16:23,440
so there's a bunch of traditional

00:16:21,519 --> 00:16:26,079
mainframe operating systems proprietary

00:16:23,440 --> 00:16:29,120
ones that ibm sells that exist out there

00:16:26,079 --> 00:16:31,519
but the linux one only runs linux

00:16:29,120 --> 00:16:32,959
the first one from ibm was released in

00:16:31,519 --> 00:16:34,800
00:16:32,959 --> 00:16:37,920
and we called them the emperor and the

00:16:34,800 --> 00:16:40,480
rockhopper named after penguins

00:16:37,920 --> 00:16:42,720
in 2017 just two years later the emperor

00:16:40,480 --> 00:16:44,639
ii and the rockhopper ii came out

00:16:42,720 --> 00:16:46,160
and then just last year the linux one

00:16:44,639 --> 00:16:48,079
three came out and they dropped the

00:16:46,160 --> 00:16:51,440
penguin names i don't know why

00:16:48,079 --> 00:16:53,279
i guess the whimsy had run out of ibm

00:16:51,440 --> 00:16:54,720
but we don't use penguins in in the

00:16:53,279 --> 00:16:57,440
marketing anymore which is sad

00:16:54,720 --> 00:16:58,639
but here we are so the point here is

00:16:57,440 --> 00:17:00,399
like i'm not here to sell you one

00:16:58,639 --> 00:17:00,880
because i i'm that's not my job and i

00:17:00,399 --> 00:17:03,199
don't

00:17:00,880 --> 00:17:05,839
know how i don't even how much they cost

00:17:03,199 --> 00:17:05,839
um but

00:17:06,000 --> 00:17:10,000
the interesting thing here is like not

00:17:07,760 --> 00:17:11,039
only has ibm created a linux only

00:17:10,000 --> 00:17:14,000
mainframe

00:17:11,039 --> 00:17:15,280
um they keep creating it every two years

00:17:14,000 --> 00:17:16,839
we've been coming out with a new one

00:17:15,280 --> 00:17:19,360
like

00:17:16,839 --> 00:17:20,319
clearly an audience here and people who

00:17:19,360 --> 00:17:23,199
are using this

00:17:20,319 --> 00:17:24,559
and a real community around this which

00:17:23,199 --> 00:17:26,400
is one of the things that's that's been

00:17:24,559 --> 00:17:27,760
most exciting for me to learn about um

00:17:26,400 --> 00:17:30,960
in this role

00:17:27,760 --> 00:17:33,440
working at ibm on open source things

00:17:30,960 --> 00:17:34,480
so this is what we're here to actually

00:17:33,440 --> 00:17:37,679
talk about

00:17:34,480 --> 00:17:40,400
running your application on a mainframe

00:17:37,679 --> 00:17:42,000
so um we just had that wayland talk and

00:17:40,400 --> 00:17:42,880
i know a lot of the talks are very

00:17:42,000 --> 00:17:45,200
geared towards

00:17:42,880 --> 00:17:47,760
graphical applications and that is where

00:17:45,200 --> 00:17:50,799
i'm going to disappoint you

00:17:47,760 --> 00:17:52,559
because if you have a graphical

00:17:50,799 --> 00:17:54,160
application it's probably not going to

00:17:52,559 --> 00:17:57,600
run on the mainframe

00:17:54,160 --> 00:17:58,559
um i don't know if x server has actually

00:17:57,600 --> 00:18:00,720
been ported

00:17:58,559 --> 00:18:01,760
um but i don't know why anyone would

00:18:00,720 --> 00:18:03,120
bother

00:18:01,760 --> 00:18:05,440
your interaction with the mainframe is

00:18:03,120 --> 00:18:07,360
really text based

00:18:05,440 --> 00:18:09,360
so you're either using something like

00:18:07,360 --> 00:18:11,679
unix system services or you're using

00:18:09,360 --> 00:18:14,240
linux or directly

00:18:11,679 --> 00:18:15,440
the way you interact with the systems

00:18:14,240 --> 00:18:17,800
running on it is through something

00:18:15,440 --> 00:18:18,880
called zvm which is a virtualization top

00:18:17,800 --> 00:18:21,440
[Music]

00:18:18,880 --> 00:18:22,960
technology or you're running it on

00:18:21,440 --> 00:18:25,679
something like kvm

00:18:22,960 --> 00:18:26,880
which runs a super slim linux like on

00:18:25,679 --> 00:18:30,000
bare metal in the mainframe and then you

00:18:26,880 --> 00:18:32,880
run kvm on top of that

00:18:30,000 --> 00:18:34,080
um so the way you interact with it is

00:18:32,880 --> 00:18:37,760
very

00:18:34,080 --> 00:18:39,840
um not graphical um so

00:18:37,760 --> 00:18:40,960
this is the first thing there's there's

00:18:39,840 --> 00:18:43,280
not a lot of there's not really

00:18:40,960 --> 00:18:46,160
graphical apps on the mainframe

00:18:43,280 --> 00:18:46,880
um if you are running something like a

00:18:46,160 --> 00:18:48,559
web app

00:18:46,880 --> 00:18:50,240
um if you're using node.js if you're

00:18:48,559 --> 00:18:52,320
using python frameworks

00:18:50,240 --> 00:18:54,080
this is perfectly fine um node and

00:18:52,320 --> 00:18:57,039
python interpreters have been ported

00:18:54,080 --> 00:18:58,240
to to ibm z they've been around for

00:18:57,039 --> 00:19:00,080
years now

00:18:58,240 --> 00:19:01,520
and so typically if you're running node

00:19:00,080 --> 00:19:04,240
or python or something like it

00:19:01,520 --> 00:19:06,400
it can just run it's fine if you're

00:19:04,240 --> 00:19:08,080
focused on server side apps again like

00:19:06,400 --> 00:19:09,440
this is what these machines were made to

00:19:08,080 --> 00:19:12,400
do um

00:19:09,440 --> 00:19:14,080
if your app is data driven um i've

00:19:12,400 --> 00:19:15,840
talked about this already like seriously

00:19:14,080 --> 00:19:17,440
that is literally what mainframes were

00:19:15,840 --> 00:19:19,919
built to do they were built to

00:19:17,440 --> 00:19:21,360
deal with data and all the engineers

00:19:19,919 --> 00:19:22,880
thousands of engineers who are still

00:19:21,360 --> 00:19:24,960
working on the new processors and the

00:19:22,880 --> 00:19:26,320
new hardware like their focus is all

00:19:24,960 --> 00:19:28,880
about data

00:19:26,320 --> 00:19:31,120
um which is why we like one of the big

00:19:28,880 --> 00:19:31,919
pushes for ibm is like the hybrid cloud

00:19:31,120 --> 00:19:35,679
story

00:19:31,919 --> 00:19:37,280
because the cloud is is like

00:19:35,679 --> 00:19:38,960
a great technology for people to be

00:19:37,280 --> 00:19:40,559
using for their infrastructure

00:19:38,960 --> 00:19:43,120
but if you're really focused on data

00:19:40,559 --> 00:19:45,520
data transfers are really expensive

00:19:43,120 --> 00:19:46,480
um data storage in the cloud is really

00:19:45,520 --> 00:19:49,520
expensive

00:19:46,480 --> 00:19:52,559
and x86 was not developed for data

00:19:49,520 --> 00:19:54,400
processing like like the mainframes were

00:19:52,559 --> 00:19:56,080
so if you do have a data driven app i

00:19:54,400 --> 00:19:58,960
highly recommend checking it out

00:19:56,080 --> 00:20:00,720
um also if your application is somehow

00:19:58,960 --> 00:20:02,720
dependent on encryption

00:20:00,720 --> 00:20:05,520
oops i wrote encryption and encryption i

00:20:02,720 --> 00:20:07,840
meant encryption and decryption

00:20:05,520 --> 00:20:09,440
um like the cryptographic hardware in

00:20:07,840 --> 00:20:10,240
these things is one of the most exciting

00:20:09,440 --> 00:20:11,840
things for me

00:20:10,240 --> 00:20:13,360
um when i started learning about this

00:20:11,840 --> 00:20:16,960
because

00:20:13,360 --> 00:20:19,360
um the uh

00:20:16,960 --> 00:20:20,640
there are crypto coprocessors inside of

00:20:19,360 --> 00:20:22,320
every cpu

00:20:20,640 --> 00:20:23,919
and so you don't necessarily have to

00:20:22,320 --> 00:20:24,400
take away from general computing power

00:20:23,919 --> 00:20:26,480
to do

00:20:24,400 --> 00:20:27,679
crypto which means you can encrypt like

00:20:26,480 --> 00:20:29,440
all of your data

00:20:27,679 --> 00:20:30,720
you can use ipsec to encrypt it in

00:20:29,440 --> 00:20:32,960
flight you can use

00:20:30,720 --> 00:20:34,880
dmcrypt on the kernel level to encrypt

00:20:32,960 --> 00:20:36,480
it on the disk and you don't pull away

00:20:34,880 --> 00:20:39,520
from general processing power

00:20:36,480 --> 00:20:40,000
um i have a couple of servers behind me

00:20:39,520 --> 00:20:43,039
in here

00:20:40,000 --> 00:20:44,480
little x86 ones and it like just doing

00:20:43,039 --> 00:20:46,960
encryption on these machines takes like

00:20:44,480 --> 00:20:49,520
a ton of my cpu

00:20:46,960 --> 00:20:51,039
um so i'm not super thrilled about that

00:20:49,520 --> 00:20:52,480
i should have gotten more powerful cpus

00:20:51,039 --> 00:20:52,960
and these things but encryption really

00:20:52,480 --> 00:20:56,159
does

00:20:52,960 --> 00:20:57,200
chew up your cpu um and one of the

00:20:56,159 --> 00:20:58,720
things that

00:20:57,200 --> 00:21:00,480
you know we've been we've been sort of

00:20:58,720 --> 00:21:02,240
telling people about is that

00:21:00,480 --> 00:21:04,159
blockchain runs really well on a

00:21:02,240 --> 00:21:06,080
mainframe if you were to like purpose

00:21:04,159 --> 00:21:07,520
build a machine for blockchain

00:21:06,080 --> 00:21:09,679
it would probably look a lot like a

00:21:07,520 --> 00:21:10,960
mainframe between the data processing

00:21:09,679 --> 00:21:17,840
and the encryption stuff

00:21:10,960 --> 00:21:17,840
like that is what they're built to do

00:21:18,400 --> 00:21:21,440
so now getting to the question like is

00:21:20,559 --> 00:21:24,480
this some

00:21:21,440 --> 00:21:25,760
strange like side thing um

00:21:24,480 --> 00:21:28,720
a couple people mentioned in the chat

00:21:25,760 --> 00:21:30,320
that fire the firefox is built for s390x

00:21:28,720 --> 00:21:31,360
so hey there's a graphical app that's

00:21:30,320 --> 00:21:33,039
built for it

00:21:31,360 --> 00:21:34,880
um i'm gonna have to play around with

00:21:33,039 --> 00:21:36,720
some graphical apps after this because i

00:21:34,880 --> 00:21:39,120
don't

00:21:36,720 --> 00:21:39,919
yeah if firefox is built for it then

00:21:39,120 --> 00:21:41,280
like

00:21:39,919 --> 00:21:43,520
there's definitely some stuff going on

00:21:41,280 --> 00:21:45,520
there with with x

00:21:43,520 --> 00:21:47,039
um so yeah there's lots of other

00:21:45,520 --> 00:21:49,360
projects out there um

00:21:47,039 --> 00:21:50,960
this one is kind of like our our like

00:21:49,360 --> 00:21:54,559
vanity slide

00:21:50,960 --> 00:21:55,120
um there is not a comprehensive list

00:21:54,559 --> 00:21:57,039
really

00:21:55,120 --> 00:21:58,320
um we i'll talk about it later but we do

00:21:57,039 --> 00:21:59,440
have a software search tool that

00:21:58,320 --> 00:22:01,520
searches the

00:21:59,440 --> 00:22:02,480
the three distributions that i mentioned

00:22:01,520 --> 00:22:06,240
um for

00:22:02,480 --> 00:22:08,320
for packages um but this is kind of like

00:22:06,240 --> 00:22:11,200
when when people want to see like real

00:22:08,320 --> 00:22:14,799
projects are being ported to this this

00:22:11,200 --> 00:22:15,760
um architecture like yes they totally

00:22:14,799 --> 00:22:18,000
are

00:22:15,760 --> 00:22:19,360
um you'll see also there's community

00:22:18,000 --> 00:22:23,120
versions of linux so debian

00:22:19,360 --> 00:22:26,159
opensuse fedora clef os

00:22:23,120 --> 00:22:29,280
is a version of centos

00:22:26,159 --> 00:22:31,039
that's maintained it's an s390x port

00:22:29,280 --> 00:22:32,640
and alpine the one that's that's

00:22:31,039 --> 00:22:35,039
commonly used with containers

00:22:32,640 --> 00:22:36,000
that one's been ported that was done by

00:22:35,039 --> 00:22:37,600
um and

00:22:36,000 --> 00:22:40,960
um i think a mentee at the open

00:22:37,600 --> 00:22:42,880
mainframe project ported alpine um

00:22:40,960 --> 00:22:44,320
and then like all these other ones um

00:22:42,880 --> 00:22:45,919
there's a link here that i'll

00:22:44,320 --> 00:22:49,120
i also link to like in the slides this

00:22:45,919 --> 00:22:52,320
is just an image um

00:22:49,120 --> 00:22:53,039
and these ones are like the list that

00:22:52,320 --> 00:22:54,880
like ibm

00:22:53,039 --> 00:22:56,240
maintains concurrency on by working with

00:22:54,880 --> 00:22:57,760
the open source community

00:22:56,240 --> 00:22:59,919
but a bunch of open source communities

00:22:57,760 --> 00:23:00,640
like people just do it on their own like

00:22:59,919 --> 00:23:02,080
they maintain

00:23:00,640 --> 00:23:03,360
some of the ports and i think we have

00:23:02,080 --> 00:23:05,120
some of the people in the audience who

00:23:03,360 --> 00:23:08,480
have worked on

00:23:05,120 --> 00:23:12,000
this stuff um if you're into

00:23:08,480 --> 00:23:14,320
um containers um uh docker hub

00:23:12,000 --> 00:23:15,760
has a way to search by architecture um

00:23:14,320 --> 00:23:18,000
and so there's a there's a bunch of

00:23:15,760 --> 00:23:22,159
official images out there

00:23:18,000 --> 00:23:24,880
um for uh s390x as well

00:23:22,159 --> 00:23:26,559
so you don't have to focus just on on

00:23:24,880 --> 00:23:27,919
one side you can look into the container

00:23:26,559 --> 00:23:30,320
world too there's a bunch of stuff you

00:23:27,919 --> 00:23:30,320
can grab

00:23:31,520 --> 00:23:34,559
so the first thing i want to talk about

00:23:33,840 --> 00:23:36,720
is

00:23:34,559 --> 00:23:38,320
with regard to like specifically dealing

00:23:36,720 --> 00:23:40,480
with open source the first thing is

00:23:38,320 --> 00:23:41,840
is like how do you find other software

00:23:40,480 --> 00:23:44,799
projects that are already running

00:23:41,840 --> 00:23:45,840
on s390x so my first recommendation

00:23:44,799 --> 00:23:49,200
would be

00:23:45,840 --> 00:23:50,400
um actually which i didn't list here was

00:23:49,200 --> 00:23:52,400
uh

00:23:50,400 --> 00:23:53,600
search in your own distribution so if

00:23:52,400 --> 00:23:56,799
you've got

00:23:53,600 --> 00:23:57,679
um a vm which which i can tell you how

00:23:56,799 --> 00:23:59,360
to get

00:23:57,679 --> 00:24:01,279
running on red hat you just do you know

00:23:59,360 --> 00:24:02,159
a yum search and see if see if it's

00:24:01,279 --> 00:24:03,679
already there

00:24:02,159 --> 00:24:05,520
the first thing i did when i got my

00:24:03,679 --> 00:24:08,559
first uh vm

00:24:05,520 --> 00:24:11,840
on s390x was i installed um erc

00:24:08,559 --> 00:24:14,320
the the irc chat client and screen

00:24:11,840 --> 00:24:14,880
and i hopped on irc and i like piped a

00:24:14,320 --> 00:24:16,400
bunch of

00:24:14,880 --> 00:24:18,240
output to my friends and i'm like look

00:24:16,400 --> 00:24:19,279
i've got a vm on a mainframe how cool is

00:24:18,240 --> 00:24:23,520
that

00:24:19,279 --> 00:24:25,120
um i mean it was cool for me

00:24:23,520 --> 00:24:26,640
my friends seemed to appreciate it but i

00:24:25,120 --> 00:24:29,200
can't imagine that like

00:24:26,640 --> 00:24:31,120
um a text-based irc client was something

00:24:29,200 --> 00:24:33,200
that someone like

00:24:31,120 --> 00:24:34,960
a customer requested or someone went out

00:24:33,200 --> 00:24:35,520
of their way to create i think it was

00:24:34,960 --> 00:24:38,640
actually

00:24:35,520 --> 00:24:39,760
just something that you know red hat was

00:24:38,640 --> 00:24:41,440
like let's just build

00:24:39,760 --> 00:24:43,840
everything we can and it passed the

00:24:41,440 --> 00:24:44,640
tests and it worked and so they shipped

00:24:43,840 --> 00:24:46,720
it so

00:24:44,640 --> 00:24:48,960
cool like a lot of the software really

00:24:46,720 --> 00:24:51,840
just builds and works fine

00:24:48,960 --> 00:24:52,640
um if it's not part of your distribution

00:24:51,840 --> 00:24:54,480
um you can go

00:24:52,640 --> 00:24:56,080
direct to the project as you saw the

00:24:54,480 --> 00:24:58,320
kubernetes download page you saw there

00:24:56,080 --> 00:25:01,279
were s390x binaries

00:24:58,320 --> 00:25:02,880
um you can ask like if you're if you're

00:25:01,279 --> 00:25:04,880
a mainframe customer you typically

00:25:02,880 --> 00:25:06,799
have a vendor who's providing you

00:25:04,880 --> 00:25:09,840
software as well so you can talk about

00:25:06,799 --> 00:25:11,120
talk to the vendor um there's this

00:25:09,840 --> 00:25:12,480
really cool website that the open

00:25:11,120 --> 00:25:14,960
mainframe project

00:25:12,480 --> 00:25:16,240
which is part of the linux foundation um

00:25:14,960 --> 00:25:18,600
has put together so they

00:25:16,240 --> 00:25:19,760
it's called

00:25:18,600 --> 00:25:21,120
landscape.openmainframeproject.org and

00:25:19,760 --> 00:25:23,039
it allows you to scroll through a bunch

00:25:21,120 --> 00:25:25,039
of projects it's kind of like the slide

00:25:23,039 --> 00:25:29,840
i showed you and it's actually an

00:25:25,039 --> 00:25:29,840
evolution of that

00:25:30,720 --> 00:25:33,840
were like hey that's really cool we need

00:25:33,039 --> 00:25:36,960
that

00:25:33,840 --> 00:25:38,320
um an interactive version you can click

00:25:36,960 --> 00:25:40,840
through and see what the projects are

00:25:38,320 --> 00:25:42,240
about and the status of the s39 core

00:25:40,840 --> 00:25:45,600
stuff

00:25:42,240 --> 00:25:48,159
um ibm has a list verified software like

00:25:45,600 --> 00:25:48,720
not necessarily that that ibm supports

00:25:48,159 --> 00:25:50,799
but we

00:25:48,720 --> 00:25:52,320
we keep an eye on the ports and make

00:25:50,799 --> 00:25:55,279
sure that they're being updated

00:25:52,320 --> 00:25:56,240
by releases and that there's a specific

00:25:55,279 --> 00:25:58,159
interest in

00:25:56,240 --> 00:25:59,760
i mentioned there's an ibm z search on

00:25:58,159 --> 00:26:01,679
docker hub

00:25:59,760 --> 00:26:03,360
um and then a project that i'm working

00:26:01,679 --> 00:26:05,600
on right now

00:26:03,360 --> 00:26:07,600
um is the open mainframe project

00:26:05,600 --> 00:26:11,039
software discovery tool

00:26:07,600 --> 00:26:14,000
and that one allows you to search um

00:26:11,039 --> 00:26:14,400
red hat red hat enterprise linux suse

00:26:14,000 --> 00:26:17,520
and

00:26:14,400 --> 00:26:18,640
uh and ubuntu for binaries so if you

00:26:17,520 --> 00:26:20,640
search for

00:26:18,640 --> 00:26:22,720
whatever software you're looking for you

00:26:20,640 --> 00:26:24,799
can you can find it in that tool

00:26:22,720 --> 00:26:26,799
it's it's very early days we're going to

00:26:24,799 --> 00:26:28,080
add all a bunch of other stuff to it too

00:26:26,799 --> 00:26:29,200
so we don't want to just search linux

00:26:28,080 --> 00:26:31,279
distributions

00:26:29,200 --> 00:26:33,679
we also want to search for z os for

00:26:31,279 --> 00:26:36,640
traditional mainframe operating system

00:26:33,679 --> 00:26:37,520
stuff that's open source and also search

00:26:36,640 --> 00:26:40,240
pretty much

00:26:37,520 --> 00:26:41,760
everything we can get our hands on to

00:26:40,240 --> 00:26:42,960
make sure it's like a comprehensive

00:26:41,760 --> 00:26:46,000
search tool

00:26:42,960 --> 00:26:47,760
so that's finding open source software

00:26:46,000 --> 00:26:49,039
um the next step is if you have open

00:26:47,760 --> 00:26:50,720
source software if you're developing

00:26:49,039 --> 00:26:53,440
open source software what can you do to

00:26:50,720 --> 00:26:56,240
actually port your application

00:26:53,440 --> 00:26:56,880
so again open mainframe project like

00:26:56,240 --> 00:26:59,679
this

00:26:56,880 --> 00:27:00,880
is probably the reason i took the job

00:26:59,679 --> 00:27:04,159
with ibm z

00:27:00,880 --> 00:27:05,039
um being able to see a linux foundation

00:27:04,159 --> 00:27:08,159
sponsored

00:27:05,039 --> 00:27:10,080
project that was not controlled by ibm

00:27:08,159 --> 00:27:12,240
that had a bunch of stakeholders like

00:27:10,080 --> 00:27:14,480
their board and their technical board

00:27:12,240 --> 00:27:16,159
they're not even dominated by ibm i

00:27:14,480 --> 00:27:17,919
think has like one seat

00:27:16,159 --> 00:27:19,919
um on these boards but they're a bunch

00:27:17,919 --> 00:27:21,679
of companies that got together and

00:27:19,919 --> 00:27:24,720
decided that they want to do

00:27:21,679 --> 00:27:26,559
like have a a place

00:27:24,720 --> 00:27:28,080
where they can do all their project

00:27:26,559 --> 00:27:29,919
hosting for like projects that they're

00:27:28,080 --> 00:27:31,600
developing collaboratively

00:27:29,919 --> 00:27:33,360
so the open mainframe project if you

00:27:31,600 --> 00:27:35,679
have a mainframe specific

00:27:33,360 --> 00:27:36,880
application they'll do like your full

00:27:35,679 --> 00:27:38,559
project hosting

00:27:36,880 --> 00:27:40,240
um so that like they'll put in their

00:27:38,559 --> 00:27:42,880
github org they'll give you a mailing

00:27:40,240 --> 00:27:45,039
list at list.openmainframeproject.org

00:27:42,880 --> 00:27:46,880
you'll get a slack channel you can be

00:27:45,039 --> 00:27:48,240
interviewed on their podcasts and post

00:27:46,880 --> 00:27:50,480
on their blog

00:27:48,240 --> 00:27:52,159
um they have forums so like all the

00:27:50,480 --> 00:27:54,960
resources that you'd expect

00:27:52,159 --> 00:27:56,399
um a ci cd system for the software

00:27:54,960 --> 00:27:57,760
discovery tool they're gonna offer us

00:27:56,399 --> 00:27:59,279
web hosting space so we can actually

00:27:57,760 --> 00:28:03,039
host the tool somewhere

00:27:59,279 --> 00:28:04,399
once once it's in that state um

00:28:03,039 --> 00:28:07,279
but if you have an application that's

00:28:04,399 --> 00:28:10,320
not specific to the mainframe

00:28:07,279 --> 00:28:12,240
um they also provide resources for

00:28:10,320 --> 00:28:13,360
third-party open source software

00:28:12,240 --> 00:28:14,559
projects so

00:28:13,360 --> 00:28:16,640
um just off the top of my head i think

00:28:14,559 --> 00:28:18,640
debian is one of the ones in this

00:28:16,640 --> 00:28:20,159
that gets support from the open

00:28:18,640 --> 00:28:21,440
mainframe project and there's a bunch of

00:28:20,159 --> 00:28:24,480
other ones out there

00:28:21,440 --> 00:28:27,760
um on their website that um

00:28:24,480 --> 00:28:29,520
get vms that are that are like

00:28:27,760 --> 00:28:31,679
given to them through the open mainframe

00:28:29,520 --> 00:28:33,840
project um

00:28:31,679 --> 00:28:35,600
they also have an annual conference um

00:28:33,840 --> 00:28:36,880
it was supposed to be in person this

00:28:35,600 --> 00:28:40,559
year for the first time

00:28:36,880 --> 00:28:42,559
but alas nothing is in person

00:28:40,559 --> 00:28:43,840
um so their their first conference was

00:28:42,559 --> 00:28:45,600
it was in september

00:28:43,840 --> 00:28:47,679
and it was really cool because you got

00:28:45,600 --> 00:28:49,520
it's just the ecosystem around

00:28:47,679 --> 00:28:51,520
mainstream development and open sources

00:28:49,520 --> 00:28:54,799
is huge and it was really impressive to

00:28:51,520 --> 00:28:54,799
me to see everyone speaking there

00:28:55,279 --> 00:29:00,480
uh so the next one i want to talk about

00:28:56,799 --> 00:29:02,399
is the linux one community cloud

00:29:00,480 --> 00:29:03,919
so this is the one that i do most of my

00:29:02,399 --> 00:29:07,440
work on um

00:29:03,919 --> 00:29:10,720
if you go to developer.ibm.com linux1

00:29:07,440 --> 00:29:14,399
um it will give you a form to fill out

00:29:10,720 --> 00:29:17,679
in order to get access to a linux vm

00:29:14,399 --> 00:29:20,559
um that is a vm that's good for 120 days

00:29:17,679 --> 00:29:21,919
um it's actually a really nice vm for a

00:29:20,559 --> 00:29:22,960
free thing that we're giving away to

00:29:21,919 --> 00:29:25,039
people

00:29:22,960 --> 00:29:26,880
it's got a nice chunk of a really big

00:29:25,039 --> 00:29:29,200
chunk around the cpu is really great

00:29:26,880 --> 00:29:30,080
it's just it's a really nice machine for

00:29:29,200 --> 00:29:33,440
for what

00:29:30,080 --> 00:29:35,039
i mean for nothing um so this gives you

00:29:33,440 --> 00:29:38,000
120 days of access

00:29:35,039 --> 00:29:39,600
um and the secret here is if it expires

00:29:38,000 --> 00:29:41,520
you can you can

00:29:39,600 --> 00:29:42,799
sign up again you have to get a new vm

00:29:41,520 --> 00:29:45,039
but

00:29:42,799 --> 00:29:47,679
um you can you can sign up multiple

00:29:45,039 --> 00:29:50,399
times um

00:29:47,679 --> 00:29:52,000
so that's really cool um and so one of

00:29:50,399 --> 00:29:53,039
the things that we do is we we encourage

00:29:52,000 --> 00:29:55,039
open source projects if they're

00:29:53,039 --> 00:29:56,480
interested in doing this porting work

00:29:55,039 --> 00:29:58,320
is to hop on the linux one community

00:29:56,480 --> 00:30:01,039
cloud first

00:29:58,320 --> 00:30:03,279
see if their application builds and play

00:30:01,039 --> 00:30:05,760
around with it a bit

00:30:03,279 --> 00:30:06,799
and then if they're interested they

00:30:05,760 --> 00:30:09,279
should reach out

00:30:06,799 --> 00:30:10,320
more formally to either the open

00:30:09,279 --> 00:30:13,520
mainframe project

00:30:10,320 --> 00:30:14,240
or ibm i'm usually the contact person

00:30:13,520 --> 00:30:15,440
for this

00:30:14,240 --> 00:30:16,880
but i'm actually about to go on

00:30:15,440 --> 00:30:18,240
maternity leave so i'll be gone for a

00:30:16,880 --> 00:30:20,720
few months

00:30:18,240 --> 00:30:22,080
but there's other folks on my team who

00:30:20,720 --> 00:30:25,039
you will be directed to

00:30:22,080 --> 00:30:27,120
um to actually talk with ibm and get a

00:30:25,039 --> 00:30:30,399
longer-lived virtual machine

00:30:27,120 --> 00:30:33,760
so we support i think probably about

00:30:30,399 --> 00:30:35,600
30 projects formally in our open source

00:30:33,760 --> 00:30:36,799
sphere and then ibm has business

00:30:35,600 --> 00:30:37,760
relationships with a bunch of other

00:30:36,799 --> 00:30:39,600
projects so

00:30:37,760 --> 00:30:41,360
if you're if you're a project with red

00:30:39,600 --> 00:30:41,840
hat or microsoft there's probably some

00:30:41,360 --> 00:30:44,880
sort of

00:30:41,840 --> 00:30:46,799
like official arrangement there but if

00:30:44,880 --> 00:30:47,520
you're just like a normal grassroots

00:30:46,799 --> 00:30:49,039
like

00:30:47,520 --> 00:30:50,799
old school kind of open source project

00:30:49,039 --> 00:30:52,240
you'd be working with me because those

00:30:50,799 --> 00:30:54,159
are the ones that i'm supporting because

00:30:52,240 --> 00:30:57,440
i'm like

00:30:54,159 --> 00:30:59,519
part of my job is outreach to um

00:30:57,440 --> 00:31:01,039
the less like the less corporate-backed

00:30:59,519 --> 00:31:02,960
open source projects

00:31:01,039 --> 00:31:05,039
um and then here's a link here for the

00:31:02,960 --> 00:31:06,880
linux one community cloud community

00:31:05,039 --> 00:31:09,039
and that's where that's a forum and a

00:31:06,880 --> 00:31:10,399
blog and like just ways that people are

00:31:09,039 --> 00:31:12,080
collaborating and sharing things on the

00:31:10,399 --> 00:31:13,600
linux one community cloud and we just

00:31:12,080 --> 00:31:15,039
launched that so there aren't very many

00:31:13,600 --> 00:31:16,480
people there most of the blog posts are

00:31:15,039 --> 00:31:18,320
from me

00:31:16,480 --> 00:31:19,519
um but it's it's one that we're growing

00:31:18,320 --> 00:31:22,399
because we want people to be able to

00:31:19,519 --> 00:31:22,399
share their experience

00:31:23,760 --> 00:31:29,200
um so uh another way uh so

00:31:27,679 --> 00:31:30,960
my suggestion is to start off on

00:31:29,200 --> 00:31:32,480
something like either the open mainframe

00:31:30,960 --> 00:31:34,240
project offerings or the linux one

00:31:32,480 --> 00:31:35,440
community cloud

00:31:34,240 --> 00:31:37,919
and then once you know that your

00:31:35,440 --> 00:31:38,320
software builds um you can use something

00:31:37,919 --> 00:31:41,519
like

00:31:38,320 --> 00:31:42,640
the ubuntu personal package archive and

00:31:41,519 --> 00:31:44,960
that's on launchpad

00:31:42,640 --> 00:31:46,799
so if you're building uh debian ubuntu

00:31:44,960 --> 00:31:47,840
packages um this is really where you

00:31:46,799 --> 00:31:50,000
want to go

00:31:47,840 --> 00:31:51,600
so you can the personal package archives

00:31:50,000 --> 00:31:53,679
allows you to create a dev so you do

00:31:51,600 --> 00:31:55,679
have to know how to create a dev package

00:31:53,679 --> 00:31:57,039
you upload the sources source files for

00:31:55,679 --> 00:32:00,399
your dev package

00:31:57,039 --> 00:32:02,399
and then you can build your um

00:32:00,399 --> 00:32:03,760
your package and then you get like a url

00:32:02,399 --> 00:32:05,440
where people can you know put it in

00:32:03,760 --> 00:32:08,000
their sources.list

00:32:05,440 --> 00:32:08,960
um and then you have a way to deliver

00:32:08,000 --> 00:32:11,440
your software as well

00:32:08,960 --> 00:32:13,039
so by default it builds for amd64

00:32:11,440 --> 00:32:14,399
there's a little check box that you can

00:32:13,039 --> 00:32:17,440
build for z server

00:32:14,399 --> 00:32:18,559
s390x um i think i think they call it

00:32:17,440 --> 00:32:20,559
ibm z

00:32:18,559 --> 00:32:22,240
server but anyway there's a little

00:32:20,559 --> 00:32:23,919
checkbox so this is just like a simple

00:32:22,240 --> 00:32:24,880
app that i wrote in golang like hello

00:32:23,919 --> 00:32:27,679
world

00:32:24,880 --> 00:32:28,320
and i packaged it for debian and ubuntu

00:32:27,679 --> 00:32:29,840
and then i

00:32:28,320 --> 00:32:31,760
uploaded the source and it built it for

00:32:29,840 --> 00:32:34,240
me on canonical's mainframe

00:32:31,760 --> 00:32:34,960
it's like cool so that's on the ubuntu

00:32:34,240 --> 00:32:38,799
side

00:32:34,960 --> 00:32:40,720
um if you're using uh so you can also

00:32:38,799 --> 00:32:44,159
use the opensuse build system

00:32:40,720 --> 00:32:46,640
or build service um that that suse hosts

00:32:44,159 --> 00:32:47,760
um that that will also build um your

00:32:46,640 --> 00:32:50,799
package

00:32:47,760 --> 00:32:52,640
uh for uh s390x

00:32:50,799 --> 00:32:53,840
um i i don't i don't remember if you

00:32:52,640 --> 00:32:56,000
have to actually click it or if it'll

00:32:53,840 --> 00:32:58,320
automatically build it for you i think

00:32:56,000 --> 00:32:59,039
it'll automatically build it for you and

00:32:58,320 --> 00:33:01,120
if it builds

00:32:59,039 --> 00:33:03,000
awesome like you're on your way so

00:33:01,120 --> 00:33:04,320
opensuse build service

00:33:03,000 --> 00:33:05,679
build.opensuse.org

00:33:04,320 --> 00:33:07,440
and that again runs on one of the

00:33:05,679 --> 00:33:12,480
mainframes that the suse

00:33:07,440 --> 00:33:14,399
company has um in this case um

00:33:12,480 --> 00:33:16,159
you do have to have just like with with

00:33:14,399 --> 00:33:16,799
ubuntu ppas you have to know about dead

00:33:16,159 --> 00:33:18,720
packages

00:33:16,799 --> 00:33:20,880
with opensuse build service you do have

00:33:18,720 --> 00:33:23,440
to know a bit about rpm packaging

00:33:20,880 --> 00:33:24,000
um but i mean i wouldn't say it's easy

00:33:23,440 --> 00:33:25,760
either one

00:33:24,000 --> 00:33:27,279
they're not easy um but they are very

00:33:25,760 --> 00:33:29,600
well documented so it's something you

00:33:27,279 --> 00:33:29,600
can learn

00:33:31,440 --> 00:33:34,559
another way uh that we have for testing

00:33:33,760 --> 00:33:36,880
and

00:33:34,559 --> 00:33:38,559
keeping up your your system is uh we've

00:33:36,880 --> 00:33:42,640
partnered with the

00:33:38,559 --> 00:33:45,360
oregon state open source lab the osu osl

00:33:42,640 --> 00:33:46,720
um i love these folks they're they do so

00:33:45,360 --> 00:33:49,919
much great work for the open source

00:33:46,720 --> 00:33:52,480
community in in a very independent way

00:33:49,919 --> 00:33:53,279
um but they have a jenkins service that

00:33:52,480 --> 00:33:56,880
they run

00:33:53,279 --> 00:33:58,320
um that just has s390x builders

00:33:56,880 --> 00:34:00,240
and so you can if you're already using

00:33:58,320 --> 00:34:00,720
jenkins you can add the builders that

00:34:00,240 --> 00:34:04,320
you get

00:34:00,720 --> 00:34:06,240
from the osu osl um to your

00:34:04,320 --> 00:34:08,720
jenkins and then you can you can build

00:34:06,240 --> 00:34:09,919
it into your ci cd pipeline

00:34:08,720 --> 00:34:11,359
and this one's great because it's open

00:34:09,919 --> 00:34:13,679
source and it's run by some really great

00:34:11,359 --> 00:34:13,679
people

00:34:14,079 --> 00:34:21,440
um sort of sticking with the ci cd

00:34:18,320 --> 00:34:23,119
train here um travis which is it is

00:34:21,440 --> 00:34:24,800
proprietary but

00:34:23,119 --> 00:34:26,639
they have a beta trial right now for

00:34:24,800 --> 00:34:28,399
open source projects um

00:34:26,639 --> 00:34:30,000
and so you can build for multiple

00:34:28,399 --> 00:34:31,919
architectures i just put the docs link

00:34:30,000 --> 00:34:34,240
here for multi-cpu architectures because

00:34:31,919 --> 00:34:37,760
they now support

00:34:34,240 --> 00:34:40,320
arm s390x and

00:34:37,760 --> 00:34:41,200
powerpc so they have builders for all

00:34:40,320 --> 00:34:43,679
three of them

00:34:41,200 --> 00:34:45,679
and if you're already using travis it's

00:34:43,679 --> 00:34:46,159
really just a simple edit in your travis

00:34:45,679 --> 00:34:49,119
config

00:34:46,159 --> 00:34:49,599
to support other architectures so again

00:34:49,119 --> 00:34:51,200
probably

00:34:49,599 --> 00:34:52,720
make sure your software runs first and

00:34:51,200 --> 00:34:54,800
then and then dump it in your your

00:34:52,720 --> 00:34:58,800
travis config and now you have builders

00:34:54,800 --> 00:35:00,560
um um i think you also have to be have

00:34:58,800 --> 00:35:01,680
your project on github in order to use

00:35:00,560 --> 00:35:03,680
this but you can see in the

00:35:01,680 --> 00:35:05,839
documentation what what requirements are

00:35:03,680 --> 00:35:05,839
there

00:35:07,200 --> 00:35:10,960
and that is where i'm winding down so

00:35:09,359 --> 00:35:13,520
those are the free resources available

00:35:10,960 --> 00:35:14,320
and how you might go about it and i

00:35:13,520 --> 00:35:15,680
wanted to

00:35:14,320 --> 00:35:17,520
sort of close out by talking a little

00:35:15,680 --> 00:35:21,040
bit about programming languages here

00:35:17,520 --> 00:35:21,520
um as i mentioned in order to run your

00:35:21,040 --> 00:35:23,359
code

00:35:21,520 --> 00:35:25,119
on an architecture that is not what you

00:35:23,359 --> 00:35:28,560
wrote it for

00:35:25,119 --> 00:35:32,160
the compiler or interpreter has to run

00:35:28,560 --> 00:35:33,680
on the architecture so if your code is

00:35:32,160 --> 00:35:36,000
compiled something like c or c

00:35:33,680 --> 00:35:37,040
plus plus then the compiler needs to be

00:35:36,000 --> 00:35:39,200
imported

00:35:37,040 --> 00:35:40,800
um if it's interpreted like python or

00:35:39,200 --> 00:35:42,160
node um

00:35:40,800 --> 00:35:44,640
that those interpreters have to be

00:35:42,160 --> 00:35:47,200
written for the architecture

00:35:44,640 --> 00:35:48,400
in the case of z like that's that's

00:35:47,200 --> 00:35:49,839
really straightforward

00:35:48,400 --> 00:35:52,079
most programming languages you're going

00:35:49,839 --> 00:35:55,680
to encounter have already been ported

00:35:52,079 --> 00:35:57,680
so that's great um but you do need you

00:35:55,680 --> 00:35:58,000
do need the compiler or interpreter

00:35:57,680 --> 00:36:00,400
there

00:35:58,000 --> 00:36:02,000
in order for to run i also mentioned

00:36:00,400 --> 00:36:04,720
that it's big endian

00:36:02,000 --> 00:36:05,359
and that gets you when you start doing

00:36:04,720 --> 00:36:09,119
memory

00:36:05,359 --> 00:36:11,200
specific operations inside of your code

00:36:09,119 --> 00:36:12,880
so you may start running into endian

00:36:11,200 --> 00:36:14,560
errors which is going to be very new for

00:36:12,880 --> 00:36:16,880
a lot of you

00:36:14,560 --> 00:36:18,400
but i don't see it super often honestly

00:36:16,880 --> 00:36:21,040
unless you're doing really complicated

00:36:18,400 --> 00:36:21,040
data stuff

00:36:22,560 --> 00:36:26,000
but what i will say is that your code

00:36:24,079 --> 00:36:28,079
will probably run um

00:36:26,000 --> 00:36:29,200
like give it a try build it and see if

00:36:28,079 --> 00:36:32,480
it works

00:36:29,200 --> 00:36:34,400
um if not um one of the things that we

00:36:32,480 --> 00:36:35,920
you know that we found because it makes

00:36:34,400 --> 00:36:38,800
sense is that

00:36:35,920 --> 00:36:40,160
like a higher level language something

00:36:38,800 --> 00:36:42,720
like node or python

00:36:40,160 --> 00:36:44,320
like those tend to run really well um

00:36:42,720 --> 00:36:45,680
because they don't have as much hardware

00:36:44,320 --> 00:36:47,040
interaction like a lot of that is

00:36:45,680 --> 00:36:48,960
abstracted away

00:36:47,040 --> 00:36:51,119
and that's what it means to be higher

00:36:48,960 --> 00:36:52,800
level um

00:36:51,119 --> 00:36:54,640
but lower level languages they do do

00:36:52,800 --> 00:36:54,960
more hardware specific operations so you

00:36:54,640 --> 00:36:56,640
may

00:36:54,960 --> 00:36:58,000
run into some things there with with

00:36:56,640 --> 00:36:59,200
things like the uh

00:36:58,000 --> 00:37:01,040
when you're when you're working with c

00:36:59,200 --> 00:37:03,200
code so it's more likely you'll run

00:37:01,040 --> 00:37:04,800
the endian errors when you're running c

00:37:03,200 --> 00:37:05,359
it's almost unheard of if you're running

00:37:04,800 --> 00:37:08,800
like

00:37:05,359 --> 00:37:10,079
node unless the node app somehow

00:37:08,800 --> 00:37:12,800
interacts with hardware but that's

00:37:10,079 --> 00:37:16,800
incredibly uncommon

00:37:12,800 --> 00:37:18,800
and would be a very specific use case um

00:37:16,800 --> 00:37:20,960
and and i like to tell people like when

00:37:18,800 --> 00:37:22,320
they start porting their applications

00:37:20,960 --> 00:37:24,079
when they start moving their like node

00:37:22,320 --> 00:37:25,280
applications over they're like oh it's

00:37:24,079 --> 00:37:27,599
going to work it's going to be perfect

00:37:25,280 --> 00:37:29,839
especially people on my team who like

00:37:27,599 --> 00:37:31,839
are totally into this and i'm like okay

00:37:29,839 --> 00:37:33,200
in a perfect world absolutely yes

00:37:31,839 --> 00:37:36,160
all these high-level language will work

00:37:33,200 --> 00:37:39,040
flawlessly but i will tell you right now

00:37:36,160 --> 00:37:39,760
that like part of like a big chunk of

00:37:39,040 --> 00:37:42,160
the

00:37:39,760 --> 00:37:44,320
my job when i'm working on porting stuff

00:37:42,160 --> 00:37:47,280
is dependencies

00:37:44,320 --> 00:37:48,720
and what happens here is sometimes there

00:37:47,280 --> 00:37:50,160
are dependencies that are outside of

00:37:48,720 --> 00:37:51,760
your control or

00:37:50,160 --> 00:37:53,839
you do have to start building some

00:37:51,760 --> 00:37:56,079
things that haven't been ported yet

00:37:53,839 --> 00:37:57,599
and it's a very good thing i take very

00:37:56,079 --> 00:37:59,280
good notes because i could end up like

00:37:57,599 --> 00:38:00,960
really deep down the rabbit hole like

00:37:59,280 --> 00:38:02,240
why am i building this one thing again

00:38:00,960 --> 00:38:03,200
oh because i need it for this other

00:38:02,240 --> 00:38:04,720
thing so

00:38:03,200 --> 00:38:05,839
that can happen but i said don't let

00:38:04,720 --> 00:38:08,079
that scare you off that's actually kind

00:38:05,839 --> 00:38:09,839
of fun

00:38:08,079 --> 00:38:11,680
and that is where i wanted to conclude

00:38:09,839 --> 00:38:13,359
um so i think we have a couple minutes

00:38:11,680 --> 00:38:18,079
for questions if we have any

00:38:13,359 --> 00:38:19,839
um but thank you so much for coming um

00:38:18,079 --> 00:38:21,839
we have some time for a couple of

00:38:19,839 --> 00:38:24,880
questions the first question

00:38:21,839 --> 00:38:26,880
goes like this at the open source plus

00:38:24,880 --> 00:38:27,359
libreoffice conference there was a talk

00:38:26,880 --> 00:38:31,119
about

00:38:27,359 --> 00:38:34,320
malaysian containers etc youtube link

00:38:31,119 --> 00:38:36,880
one of the points brought up that

00:38:34,320 --> 00:38:37,599
was brought up was about having smaller

00:38:36,880 --> 00:38:41,040
hardware of

00:38:37,599 --> 00:38:42,880
s390 is to run in consideration from ibm

00:38:41,040 --> 00:38:44,839
on lowering the barrier to entry and

00:38:42,880 --> 00:38:46,560
alternative to the open mainframe

00:38:44,839 --> 00:38:48,240
project

00:38:46,560 --> 00:38:49,760
that is a great question and i don't

00:38:48,240 --> 00:38:52,320
know

00:38:49,760 --> 00:38:52,960
i mean i really wish there was um

00:38:52,320 --> 00:38:54,880
because

00:38:52,960 --> 00:38:56,480
like like we've been talking we talk

00:38:54,880 --> 00:38:58,480
about it like even internally like we

00:38:56,480 --> 00:38:59,839
want a baby mainframe

00:38:58,480 --> 00:39:01,520
we want just like a little tiny

00:38:59,839 --> 00:39:02,240
development box that we can just play

00:39:01,520 --> 00:39:03,839
around with

00:39:02,240 --> 00:39:05,920
and it comes up in the community often

00:39:03,839 --> 00:39:07,760
too but unfortunately that's not

00:39:05,920 --> 00:39:09,920
i don't i don't have insight into any of

00:39:07,760 --> 00:39:10,480
that i don't know um but yeah i really

00:39:09,920 --> 00:39:14,880
wish

00:39:10,480 --> 00:39:17,520
we could just get a baby mainframe

00:39:14,880 --> 00:39:19,520
and the next question is what kinds of

00:39:17,520 --> 00:39:23,119
applications are mainframes

00:39:19,520 --> 00:39:24,800
bad for so

00:39:23,119 --> 00:39:26,720
i mentioned like what they're good for

00:39:24,800 --> 00:39:29,040
is a lot of data driven stuff um

00:39:26,720 --> 00:39:31,920
if you're if your app like if your world

00:39:29,040 --> 00:39:33,280
is just like hosting a web front end

00:39:31,920 --> 00:39:35,760
and you're not dealing with a lot of

00:39:33,280 --> 00:39:37,599
data stuff like if you're really just

00:39:35,760 --> 00:39:38,800
um pulling from different back ends that

00:39:37,599 --> 00:39:40,160
have nothing to do with

00:39:38,800 --> 00:39:41,440
with data if you're showing a lot of

00:39:40,160 --> 00:39:42,079
things like i wouldn't recommend it to

00:39:41,440 --> 00:39:44,880
your standard

00:39:42,079 --> 00:39:45,839
just like app based startup like

00:39:44,880 --> 00:39:48,320
mainframe is not

00:39:45,839 --> 00:39:49,920
not really appropriate for everyone like

00:39:48,320 --> 00:39:51,280
if you really are doing data and you

00:39:49,920 --> 00:39:52,800
need it to be reliable

00:39:51,280 --> 00:39:54,800
um like i think of social media like

00:39:52,800 --> 00:39:56,079
youtube went down the other day like

00:39:54,800 --> 00:39:58,160
the world is not going to grind to a

00:39:56,079 --> 00:39:59,280
halt um

00:39:58,160 --> 00:40:01,760
and they're not really doing they're

00:39:59,280 --> 00:40:04,480
doing big files but not

00:40:01,760 --> 00:40:06,000
like i mean just because of the the

00:40:04,480 --> 00:40:07,520
amount of stuff they're doing it is it

00:40:06,000 --> 00:40:08,240
is actually really like a lot of data

00:40:07,520 --> 00:40:09,520
but

00:40:08,240 --> 00:40:12,319
that's sort of an artifact of what

00:40:09,520 --> 00:40:14,240
they're doing rather than the intent um

00:40:12,319 --> 00:40:15,599
but yeah like if you're just running a

00:40:14,240 --> 00:40:16,960
web app or if you're running an app on

00:40:15,599 --> 00:40:18,400
the phone like for the most part those

00:40:16,960 --> 00:40:19,920
are not gonna be

00:40:18,400 --> 00:40:22,000
great for the platform it's just it's

00:40:19,920 --> 00:40:23,040
gonna be a waste but if you are doing a

00:40:22,000 --> 00:40:25,839
lot of data or

00:40:23,040 --> 00:40:25,839

YouTube URL: https://www.youtube.com/watch?v=GqQViXZ3Y40


