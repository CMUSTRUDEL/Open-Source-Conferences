Title: Linux App Summit 2020 - Friday 13th November - 08:00 - 11:20
Publication date: 2020-11-14
Playlist: Linux App Summit 2020
Description: 
	
Captions: 
	00:06:14,400 --> 00:06:18,880
hello everyone

00:06:17,039 --> 00:06:20,080
good morning good afternoon or good

00:06:18,880 --> 00:06:24,240
evening wherever you

00:06:20,080 --> 00:06:24,639
are thank you for joining us again for

00:06:24,240 --> 00:06:28,000
day

00:06:24,639 --> 00:06:30,000
two of linux app summit we are

00:06:28,000 --> 00:06:32,080
very excited and very happy to give a

00:06:30,000 --> 00:06:35,120
warm welcome to rohan who will be

00:06:32,080 --> 00:06:36,800
starting off our day today

00:06:35,120 --> 00:06:40,319
rohan will be talking about linux

00:06:36,800 --> 00:06:44,000
graphics and i hope you enjoy his talk

00:06:40,319 --> 00:06:44,000
rohan welcome

00:06:46,080 --> 00:06:54,319
hey everyone can you hear me just fine

00:06:49,360 --> 00:06:54,319
you're a little bit soft just a second

00:06:54,720 --> 00:07:01,520
isn't that better a bit yes thank you

00:06:58,160 --> 00:07:04,560
all right i'm just i'm just waiting for

00:07:01,520 --> 00:07:04,560
the glock to hit nine o'clock

00:07:04,800 --> 00:07:17,840
no problem

00:07:45,919 --> 00:07:51,280
all right um hey everyone

00:07:48,960 --> 00:07:52,000
i am rohan i'm going to be talking about

00:07:51,280 --> 00:07:54,800
the next

00:07:52,000 --> 00:07:57,199
the next graphic stack i'm a consultant

00:07:54,800 --> 00:08:00,560
software engineer at collabora

00:07:57,199 --> 00:08:00,560
and let's get started

00:08:04,240 --> 00:08:08,560
so before we get into this presentation

00:08:06,960 --> 00:08:10,879
i am not yet an experienced

00:08:08,560 --> 00:08:12,479
graphics developer and i would recommend

00:08:10,879 --> 00:08:13,440
that you take my words with grain of

00:08:12,479 --> 00:08:16,960
salt

00:08:13,440 --> 00:08:16,960
and let me know if i'm wrong

00:08:18,319 --> 00:08:22,400
so since we're at linux app summit the

00:08:20,720 --> 00:08:25,680
goal take away from this talk

00:08:22,400 --> 00:08:27,599
for you as application developers

00:08:25,680 --> 00:08:29,520
should be an understanding of how the

00:08:27,599 --> 00:08:33,760
linux graphic stack

00:08:29,520 --> 00:08:37,279
works and the various components

00:08:33,760 --> 00:08:39,200
involved in in the graphics stack

00:08:37,279 --> 00:08:41,200
and as an application developer how can

00:08:39,200 --> 00:08:43,839
you help

00:08:41,200 --> 00:08:44,720
debug issues while developing your

00:08:43,839 --> 00:08:47,839
applications

00:08:44,720 --> 00:08:49,920
on on this stack this presentation is

00:08:47,839 --> 00:08:51,120
not going to be about how to use

00:08:49,920 --> 00:08:55,360
graphics apis

00:08:51,120 --> 00:08:58,240
or explaining what gpu drive gpus are

00:08:55,360 --> 00:08:59,920
or how to develop a gpu driving that's

00:08:58,240 --> 00:09:00,399
kind of the big agenda that i'd like to

00:08:59,920 --> 00:09:03,760
kind of

00:09:00,399 --> 00:09:03,760
talk about here

00:09:05,200 --> 00:09:08,959
all right so the linux graphics stack

00:09:08,399 --> 00:09:12,240
has

00:09:08,959 --> 00:09:15,760
essentially three major components to it

00:09:12,240 --> 00:09:18,240
uh as application developers you will

00:09:15,760 --> 00:09:20,399
be interacting with the graphics apis

00:09:18,240 --> 00:09:23,519
which are the first component

00:09:20,399 --> 00:09:24,080
underneath the graphics apis are the gpu

00:09:23,519 --> 00:09:26,240
drivers

00:09:24,080 --> 00:09:27,920
which are switched into user space and

00:09:26,240 --> 00:09:30,320
kernel space

00:09:27,920 --> 00:09:32,160
uh within the linux ecosystem the

00:09:30,320 --> 00:09:35,279
graphics api implementations

00:09:32,160 --> 00:09:38,080
as well as the use space drivers live

00:09:35,279 --> 00:09:40,000
in the mesa 3d software project uh

00:09:38,080 --> 00:09:44,000
whereas the current space drivers live

00:09:40,000 --> 00:09:47,040
in the linuxcon uh

00:09:44,000 --> 00:09:50,000
as as as application developers

00:09:47,040 --> 00:09:50,560
you will most often be interacting with

00:09:50,000 --> 00:09:52,080
either

00:09:50,560 --> 00:09:54,800
in the linux ecosystem you will be

00:09:52,080 --> 00:09:58,399
either interacting with opengl

00:09:54,800 --> 00:10:00,160
or the vulcan ecosystem uh

00:09:58,399 --> 00:10:02,320
on on windows system for example you

00:10:00,160 --> 00:10:05,839
would be interacting with direct3d

00:10:02,320 --> 00:10:05,839
i'm not going to be talking about that

00:10:06,399 --> 00:10:11,920
so the graphics api so what exactly does

00:10:09,600 --> 00:10:14,000
the graphics api give you

00:10:11,920 --> 00:10:15,360
a graphics api is an entry point for

00:10:14,000 --> 00:10:16,640
after graphics applications and

00:10:15,360 --> 00:10:19,040
libraries

00:10:16,640 --> 00:10:22,000
it allows for extraction of the gpu

00:10:19,040 --> 00:10:25,040
pipeline configuration manipulation

00:10:22,000 --> 00:10:26,959
uh part of this pipeline is programmable

00:10:25,040 --> 00:10:28,480
and part of this program out of this

00:10:26,959 --> 00:10:32,000
power line pipeline is

00:10:28,480 --> 00:10:35,200
configurable and you have the choice

00:10:32,000 --> 00:10:36,000
of either opengl or vulcan on linux

00:10:35,200 --> 00:10:39,040
ecosystem

00:10:36,000 --> 00:10:39,040
in the next ecosystem

00:10:39,760 --> 00:10:43,760
as i mentioned before part of the

00:10:41,440 --> 00:10:46,480
pipeline is programmable

00:10:43,760 --> 00:10:47,839
and the way you program this pipeline is

00:10:46,480 --> 00:10:51,120
through either

00:10:47,839 --> 00:10:53,680
glsl or hlsl

00:10:51,120 --> 00:10:55,760
and these programs are passed as part of

00:10:53,680 --> 00:10:58,480
the pipeline configuration

00:10:55,760 --> 00:11:00,640
and are compiled by the drivers who

00:10:58,480 --> 00:11:01,680
generate hardware specific bytecode

00:11:00,640 --> 00:11:04,160
these are the drive these are the

00:11:01,680 --> 00:11:07,600
user-based drivers i talked about

00:11:04,160 --> 00:11:07,600
just just couple slides ago

00:11:10,240 --> 00:11:13,600
so there are two philosophies when it

00:11:11,920 --> 00:11:16,160
comes to the

00:11:13,600 --> 00:11:18,399
graphics apis one of them is opengl and

00:11:16,160 --> 00:11:21,760
the other one is falcon

00:11:18,399 --> 00:11:24,160
opengl is the more traditional way of

00:11:21,760 --> 00:11:28,240
doing things where it tries to hide as

00:11:24,160 --> 00:11:30,800
much as possible about the gpu internals

00:11:28,240 --> 00:11:32,320
whereas vulcan provides much finer grain

00:11:30,800 --> 00:11:34,800
control

00:11:32,320 --> 00:11:36,320
essentially what this leads to is that

00:11:34,800 --> 00:11:37,519
welcome applications are much more

00:11:36,320 --> 00:11:39,680
verbose

00:11:37,519 --> 00:11:41,440
and more work for the developer but less

00:11:39,680 --> 00:11:44,640
work for the cpu

00:11:41,440 --> 00:11:46,399
this leads to better performances on cpu

00:11:44,640 --> 00:11:48,800
bound workloads

00:11:46,399 --> 00:11:52,000
this also means that drive bulk drivers

00:11:48,800 --> 00:11:52,000
are a lot more simpler

00:11:53,760 --> 00:12:00,399
so since gpu is a fairly complex piece

00:11:57,920 --> 00:12:02,880
we have the drivers for them are fairly

00:12:00,399 --> 00:12:05,200
complex as well

00:12:02,880 --> 00:12:05,200
and

00:12:07,839 --> 00:12:11,600
not all of the code that you need to

00:12:10,000 --> 00:12:14,000
write to run on a gpu

00:12:11,600 --> 00:12:15,440
needs to be run in a privileged context

00:12:14,000 --> 00:12:18,720
for this reason we

00:12:15,440 --> 00:12:21,440
split it we split the code between

00:12:18,720 --> 00:12:22,160
user space and kernel space this also

00:12:21,440 --> 00:12:23,839
leads to

00:12:22,160 --> 00:12:27,600
easier debugging since debugging in the

00:12:23,839 --> 00:12:27,600
user space is a lot more easier

00:12:30,000 --> 00:12:34,399
so first i'm going to be talking about

00:12:31,440 --> 00:12:34,399
the kernel drivers

00:12:34,480 --> 00:12:38,240
there are a couple of responsibilities

00:12:36,000 --> 00:12:41,600
that the kernel driver deals with

00:12:38,240 --> 00:12:42,959
such as memory command stream submission

00:12:41,600 --> 00:12:46,560
and scheduling

00:12:42,959 --> 00:12:47,279
interrupts and signaling these kernel

00:12:46,560 --> 00:12:49,519
drivers

00:12:47,279 --> 00:12:51,200
with open source user space drivers live

00:12:49,519 --> 00:12:56,639
in the linus tree

00:12:51,200 --> 00:12:59,600
and they are in driver's gpu drm

00:12:56,639 --> 00:13:00,320
whereas with close source user space

00:12:59,600 --> 00:13:02,880
drivers are

00:13:00,320 --> 00:13:02,880
out of tree

00:13:04,480 --> 00:13:07,519
the so the first thing that current

00:13:06,560 --> 00:13:09,360
drivers

00:13:07,519 --> 00:13:12,560
that the current gpu drivers need to

00:13:09,360 --> 00:13:14,320
deal with is memory management

00:13:12,560 --> 00:13:16,959
in order to perform memory management in

00:13:14,320 --> 00:13:18,720
the kernel we in order to perform

00:13:16,959 --> 00:13:20,320
any kind of graphics related tasks in

00:13:18,720 --> 00:13:22,079
the kernel we have something called the

00:13:20,320 --> 00:13:24,399
drm framework

00:13:22,079 --> 00:13:25,680
within the drm framework there is a

00:13:24,399 --> 00:13:27,360
memory management framework

00:13:25,680 --> 00:13:28,800
called there are a couple of memory

00:13:27,360 --> 00:13:29,200
management framework frameworks called

00:13:28,800 --> 00:13:33,120
gem

00:13:29,200 --> 00:13:35,279
and tpm before we get into german ttm

00:13:33,120 --> 00:13:36,800
there are a couple of technologies that

00:13:35,279 --> 00:13:38,240
terminology that i'd like you to be

00:13:36,800 --> 00:13:40,800
comfortable with

00:13:38,240 --> 00:13:42,480
uh a buffer object for example is a

00:13:40,800 --> 00:13:45,680
region of memory to upload

00:13:42,480 --> 00:13:47,680
gpu data such as textures vertexes

00:13:45,680 --> 00:13:49,680
just treat it as a region of memory

00:13:47,680 --> 00:13:51,680
essentially for now

00:13:49,680 --> 00:13:53,760
and iopto is the most common way for

00:13:51,680 --> 00:13:55,839
applications to interview with device

00:13:53,760 --> 00:13:58,399
drivers

00:13:55,839 --> 00:14:00,839
and a command stream is a set of

00:13:58,399 --> 00:14:03,199
commands compromising a full job on the

00:14:00,839 --> 00:14:04,720
gpu

00:14:03,199 --> 00:14:07,519
everything good with that everyone good

00:14:04,720 --> 00:14:07,519
with that so far

00:14:13,920 --> 00:14:20,880
all right

00:14:17,040 --> 00:14:23,760
so ttm is the older frame

00:14:20,880 --> 00:14:25,199
well dtm is only used by one gpu driver

00:14:23,760 --> 00:14:28,240
that i'm aware of which is

00:14:25,199 --> 00:14:29,360
vm graphics wire uh most other kernel

00:14:28,240 --> 00:14:33,360
drivers

00:14:29,360 --> 00:14:33,360
current gpu drivers will be using jam

00:14:33,519 --> 00:14:37,519
that's that's the only one i want to be

00:14:34,880 --> 00:14:37,519
talking about

00:14:37,760 --> 00:14:44,320
so gpu drivers using gem

00:14:40,880 --> 00:14:46,560
exposed eye options to do memory

00:14:44,320 --> 00:14:48,880
management

00:14:46,560 --> 00:14:51,199
tasks such as allocating buffer objects

00:14:48,880 --> 00:14:54,079
releasing buffer objects

00:14:51,199 --> 00:14:55,360
uh mapping buffer objects into gpu

00:14:54,079 --> 00:14:58,240
memory

00:14:55,360 --> 00:14:58,880
and so on and so forth they also provide

00:14:58,240 --> 00:15:02,240
a way to do

00:14:58,880 --> 00:15:04,560
cash maintenance and they also

00:15:02,240 --> 00:15:06,880
guarantee that buffer objects referenced

00:15:04,560 --> 00:15:09,600
by a gpu job

00:15:06,880 --> 00:15:11,519
are properly mapped on the gpu side of

00:15:09,600 --> 00:15:12,800
things

00:15:11,519 --> 00:15:15,519
on the right you'll see a couple of

00:15:12,800 --> 00:15:17,360
examples of these ioctals

00:15:15,519 --> 00:15:18,800
so you can see there's one which creates

00:15:17,360 --> 00:15:22,079
buffer objects

00:15:18,800 --> 00:15:24,240
uh maps buffer objects and gets the

00:15:22,079 --> 00:15:24,880
buffer object offset or the offset in

00:15:24,240 --> 00:15:27,839
memory

00:15:24,880 --> 00:15:27,839
essentially

00:15:30,480 --> 00:15:34,959
the next part of a gpu the next

00:15:33,199 --> 00:15:38,399
responsibility of a gpu driver

00:15:34,959 --> 00:15:41,519
is scheduling uh

00:15:38,399 --> 00:15:43,440
typically when you submit a gpu job it

00:15:41,519 --> 00:15:45,600
does not mean it will be

00:15:43,440 --> 00:15:47,680
executed immediately there might be

00:15:45,600 --> 00:15:48,720
several processes using the gpu in

00:15:47,680 --> 00:15:50,720
parallel

00:15:48,720 --> 00:15:52,160
and the gpu might just be busy when the

00:15:50,720 --> 00:15:54,079
request comes in

00:15:52,160 --> 00:15:55,759
so essentially submission means that you

00:15:54,079 --> 00:15:57,519
queue the command stream

00:15:55,759 --> 00:16:00,880
and each driver has an eye option for

00:15:57,519 --> 00:16:02,880
that since these jobs can have intercom

00:16:00,880 --> 00:16:04,880
inter command stream dependencies and

00:16:02,880 --> 00:16:08,560
user space the use phase driver

00:16:04,880 --> 00:16:11,120
knows that those uh the kernel space

00:16:08,560 --> 00:16:13,440
scheduler needs to know that as well

00:16:11,120 --> 00:16:14,160
and the rm provides a generic scheduling

00:16:13,440 --> 00:16:17,839
framework

00:16:14,160 --> 00:16:19,440
called drm shed which which allows you

00:16:17,839 --> 00:16:23,839
to pass that information from user's

00:16:19,440 --> 00:16:23,839
face to kernel space

00:16:24,880 --> 00:16:28,480
so now that you have your memory now

00:16:27,519 --> 00:16:31,680
that you have your

00:16:28,480 --> 00:16:33,360
job submitted to the gpu how do you

00:16:31,680 --> 00:16:35,600
synchronize between the kernel space and

00:16:33,360 --> 00:16:37,920
the use space

00:16:35,600 --> 00:16:39,360
what happens essentially is on gpe side

00:16:37,920 --> 00:16:41,199
of things a interrupt

00:16:39,360 --> 00:16:43,040
is filed and this interrupt gets

00:16:41,199 --> 00:16:46,240
reported from the kernel space

00:16:43,040 --> 00:16:49,360
into user space uh in order to

00:16:46,240 --> 00:16:51,120
prove in order to propagate this

00:16:49,360 --> 00:16:52,720
information from kernel space to use

00:16:51,120 --> 00:16:56,000
space we use

00:16:52,720 --> 00:16:59,440
sync objects and pencils uh

00:16:56,000 --> 00:17:02,880
fences allow for one job to reach

00:16:59,440 --> 00:17:03,680
another and sync objects allow for user

00:17:02,880 --> 00:17:08,160
space to be

00:17:03,680 --> 00:17:08,160
notified when a job has been completed

00:17:11,360 --> 00:17:14,880
all right everyone get so far with the

00:17:14,079 --> 00:17:17,120
kernel space

00:17:14,880 --> 00:17:19,839
side of things if you have any questions

00:17:17,120 --> 00:17:19,839
let me know in the chat

00:17:31,440 --> 00:17:33,840
all right

00:17:42,400 --> 00:17:47,840
a couple of questions coming in on the

00:17:43,760 --> 00:17:47,840
shared notes i'll just wait for that

00:18:01,039 --> 00:18:05,120
right so command streams are submission

00:18:03,520 --> 00:18:06,640
so the question is how is the command

00:18:05,120 --> 00:18:08,880
stream submitted

00:18:06,640 --> 00:18:10,880
does it also live in a buffer or is it

00:18:08,880 --> 00:18:13,679
sent via eye options

00:18:10,880 --> 00:18:15,440
uh so the command stream is submitted

00:18:13,679 --> 00:18:18,480
via eye options

00:18:15,440 --> 00:18:19,360
essentially there is a structure that

00:18:18,480 --> 00:18:22,480
you fill out

00:18:19,360 --> 00:18:25,440
with a list of

00:18:22,480 --> 00:18:27,440
commands and submitted by the eye

00:18:25,440 --> 00:18:29,200
operators to the gpus to the kernel

00:18:27,440 --> 00:18:31,760
which submits it which schedules it on

00:18:29,200 --> 00:18:31,760
the gpu

00:18:36,160 --> 00:18:40,799
all right so moving on to the user space

00:18:39,760 --> 00:18:42,640
driver

00:18:40,799 --> 00:18:44,559
a couple of roles of the user space

00:18:42,640 --> 00:18:47,280
driver are

00:18:44,559 --> 00:18:50,160
exposing one or several of graphics apis

00:18:47,280 --> 00:18:52,320
such as opengl or vulcan

00:18:50,160 --> 00:18:54,840
it also maintains which involves

00:18:52,320 --> 00:18:56,160
maintaining the api specific state

00:18:54,840 --> 00:18:59,200
machines

00:18:56,160 --> 00:19:02,240
managing any kind of rendering context

00:18:59,200 --> 00:19:03,919
compiling shaders the ones that we just

00:19:02,240 --> 00:19:06,320
talked about in earlier which were like

00:19:03,919 --> 00:19:07,520
which are written and opened in hlsl or

00:19:06,320 --> 00:19:10,720
glsl

00:19:07,520 --> 00:19:12,640
into hardware specific bytecode

00:19:10,720 --> 00:19:14,400
creating and populating and submitting

00:19:12,640 --> 00:19:17,120
command strings

00:19:14,400 --> 00:19:19,440
interacting with the windows system and

00:19:17,120 --> 00:19:21,919
synchronizing on render operations

00:19:19,440 --> 00:19:23,039
and essentially most of the

00:19:21,919 --> 00:19:26,880
functionality

00:19:23,039 --> 00:19:29,600
that you will be you will end up using

00:19:26,880 --> 00:19:29,600
in user space

00:19:30,400 --> 00:19:36,960
so there are a couple of graphics apis

00:19:33,520 --> 00:19:40,880
that that are provided by mesa

00:19:36,960 --> 00:19:43,440
so the first one is opengl and

00:19:40,880 --> 00:19:44,080
this is it provides an it provides the

00:19:43,440 --> 00:19:47,360
front end

00:19:44,080 --> 00:19:49,840
for opengl and gles

00:19:47,360 --> 00:19:51,120
uh the modern day drivers make use of

00:19:49,840 --> 00:19:53,360
something called gallium which is a

00:19:51,120 --> 00:19:57,120
state tracker within mesa

00:19:53,360 --> 00:19:59,120
and the drivers are shared libraries

00:19:57,120 --> 00:20:01,600
that are loaded in demand

00:19:59,120 --> 00:20:03,679
whereas when it comes to vulcan chronos

00:20:01,600 --> 00:20:04,799
has its own driver loader that is open

00:20:03,679 --> 00:20:07,200
source

00:20:04,799 --> 00:20:09,120
mesa only provides the vulcan drivers

00:20:07,200 --> 00:20:12,320
and there are no abstractions

00:20:09,120 --> 00:20:16,559
for vulcan drivers or state tracking and

00:20:12,320 --> 00:20:16,559
code sharing is done through libraries

00:20:18,080 --> 00:20:22,000
so let's get into maker state tracking

00:20:19,840 --> 00:20:25,919
this is the pipeline configuration part

00:20:22,000 --> 00:20:25,919
of the gpu pipeline

00:20:26,080 --> 00:20:29,280
i'm not going to be talking about

00:20:27,520 --> 00:20:32,039
pre-gallium days

00:20:29,280 --> 00:20:33,360
uh a bunch of drivers such as i-965 and

00:20:32,039 --> 00:20:37,520
i-915

00:20:33,360 --> 00:20:40,799
use this but uh they are more or less on

00:20:37,520 --> 00:20:45,039
the way on their way out in favor of

00:20:40,799 --> 00:20:47,200
gallium so what exactly is gallium

00:20:45,039 --> 00:20:49,440
gallium is a state tractor that allows

00:20:47,200 --> 00:20:52,240
for tracking opengl stage

00:20:49,440 --> 00:20:53,679
and allows for easier driver development

00:20:52,240 --> 00:20:56,400
essentially

00:20:53,679 --> 00:20:57,679
what happens is that mesa will implement

00:20:56,400 --> 00:21:01,039
the opengl

00:20:57,679 --> 00:21:03,440
and opengl on top of gallium

00:21:01,039 --> 00:21:04,480
and gallium consumes functionality

00:21:03,440 --> 00:21:08,080
provided by

00:21:04,480 --> 00:21:10,799
device drivers which further consume

00:21:08,080 --> 00:21:12,799
functionality provided by the kernel

00:21:10,799 --> 00:21:16,799
space device drivers

00:21:12,799 --> 00:21:20,320
this allows for much more

00:21:16,799 --> 00:21:23,600
easier creation of

00:21:20,320 --> 00:21:26,799
command streams and jobs

00:21:23,600 --> 00:21:28,559
as well as making sure any buffers that

00:21:26,799 --> 00:21:32,080
need to be synchronized

00:21:28,559 --> 00:21:33,600
get synchronized properly and it takes

00:21:32,080 --> 00:21:37,200
off a lot of work

00:21:33,600 --> 00:21:37,200
out of developing a driver

00:21:40,480 --> 00:21:44,320
when it comes to vulcan vulcan doesn't

00:21:43,600 --> 00:21:47,600
have

00:21:44,320 --> 00:21:49,919
galleon it only simply interacts with

00:21:47,600 --> 00:21:52,400
the kernel space drivers directly

00:21:49,919 --> 00:21:53,840
uh all of the state tracking for example

00:21:52,400 --> 00:21:59,520
will be left to

00:21:53,840 --> 00:22:02,320
an application developer

00:21:59,520 --> 00:22:03,600
right the next part is the nasa share

00:22:02,320 --> 00:22:05,520
compilation pass

00:22:03,600 --> 00:22:09,520
this is the pipeline manipulation part

00:22:05,520 --> 00:22:09,520
or the programmable part of the pipeline

00:22:10,240 --> 00:22:14,480
so shader compilation usually follows a

00:22:13,039 --> 00:22:18,799
couple of steps

00:22:14,480 --> 00:22:21,919
what it essentially means is that the

00:22:18,799 --> 00:22:24,840
a pro language such as glsl or hlsl gets

00:22:21,919 --> 00:22:28,080
converted into a generic

00:22:24,840 --> 00:22:31,440
ir this ir gets

00:22:28,080 --> 00:22:34,720
optimized by the by the

00:22:31,440 --> 00:22:37,200
by mesa over a couple of passes and then

00:22:34,720 --> 00:22:38,720
this generic ir gets converted into gpu

00:22:37,200 --> 00:22:40,720
specific ir

00:22:38,720 --> 00:22:43,360
and then the gpu driver performs

00:22:40,720 --> 00:22:44,559
optimization in the gpu specific ir

00:22:43,360 --> 00:22:46,559
space

00:22:44,559 --> 00:22:48,320
and then we have the bytecode generation

00:22:46,559 --> 00:22:48,960
which essentially compiles this gpa

00:22:48,320 --> 00:22:52,080
specific

00:22:48,960 --> 00:22:54,240
ir into byte code so what does this

00:22:52,080 --> 00:22:57,440
actually look like

00:22:54,240 --> 00:22:59,440
kind of like this um so let's say you

00:22:57,440 --> 00:23:02,240
have a glsl program

00:22:59,440 --> 00:23:05,600
and the way it will work is that the

00:23:02,240 --> 00:23:09,520
glsl will be converted into gls alias

00:23:05,600 --> 00:23:09,919
or scurvy for example this glsl ir will

00:23:09,520 --> 00:23:13,840
then

00:23:09,919 --> 00:23:16,320
be converted into tgsi or near

00:23:13,840 --> 00:23:19,120
and between each of these passes there's

00:23:16,320 --> 00:23:23,039
also an optimization pass going on

00:23:19,120 --> 00:23:25,440
so once you convert glsl into glsl ir

00:23:23,039 --> 00:23:27,919
it'll be it'll have an optimization pass

00:23:25,440 --> 00:23:30,640
and then if you convert it into near

00:23:27,919 --> 00:23:31,520
it will also have an optimization pass

00:23:30,640 --> 00:23:34,559
this near

00:23:31,520 --> 00:23:35,520
then might be converted into midgar ir

00:23:34,559 --> 00:23:38,559
for example

00:23:35,520 --> 00:23:40,559
by the by the device driver itself

00:23:38,559 --> 00:23:42,880
which will then be further optimized and

00:23:40,559 --> 00:23:44,240
then convert then finally converted into

00:23:42,880 --> 00:23:46,880
bytecode

00:23:44,240 --> 00:23:47,440
this is one of the most tricky parts of

00:23:46,880 --> 00:23:51,279
writing

00:23:47,440 --> 00:23:55,520
a gpu driver from what i've seen

00:23:51,279 --> 00:23:58,640
simply because on gpus such as

00:23:55,520 --> 00:24:00,640
the mali gpus there is no there's

00:23:58,640 --> 00:24:04,640
actually no available documentation

00:24:00,640 --> 00:24:07,360
on how to convert this

00:24:04,640 --> 00:24:08,960
this new or intermediate representation

00:24:07,360 --> 00:24:12,559
into

00:24:08,960 --> 00:24:15,039
gpu bytecode uh this is where the bulk

00:24:12,559 --> 00:24:16,320
of your development efforts gets spent

00:24:15,039 --> 00:24:18,880
on essentially

00:24:16,320 --> 00:24:19,840
uh it also has a big impact on driver

00:24:18,880 --> 00:24:22,960
performance

00:24:19,840 --> 00:24:25,679
so we really want to make sure that

00:24:22,960 --> 00:24:26,559
we the driver com like this bike good

00:24:25,679 --> 00:24:30,720
compiler

00:24:26,559 --> 00:24:30,720
is as optimized as it can be

00:24:31,679 --> 00:24:36,480
so debugging tips as as application

00:24:34,799 --> 00:24:36,880
developers this is probably one of the

00:24:36,480 --> 00:24:41,679
most

00:24:36,880 --> 00:24:41,679
useful parts of the presentation for you

00:24:42,080 --> 00:24:48,640
so gdp is your friend

00:24:45,120 --> 00:24:50,880
get comfortable with it uh

00:24:48,640 --> 00:24:52,480
essentially if you hit if you've done

00:24:50,880 --> 00:24:53,520
any sort of opengl programming in the

00:24:52,480 --> 00:24:56,960
past

00:24:53,520 --> 00:24:58,159
uh you will you will recognize that

00:24:56,960 --> 00:25:00,680
there's something called gl

00:24:58,159 --> 00:25:02,159
get error which allows you to

00:25:00,680 --> 00:25:04,480
[Music]

00:25:02,159 --> 00:25:05,760
to get errors from the opengl

00:25:04,480 --> 00:25:07,840
implementation

00:25:05,760 --> 00:25:09,600
within mesa this is implemented with the

00:25:07,840 --> 00:25:10,480
underscore mesa underscore error

00:25:09,600 --> 00:25:13,279
function

00:25:10,480 --> 00:25:15,360
and if you essentially break on this

00:25:13,279 --> 00:25:16,000
function you will have a back trace of

00:25:15,360 --> 00:25:18,880
exactly

00:25:16,000 --> 00:25:20,640
where mesa stopped executing or where

00:25:18,880 --> 00:25:24,320
exactly mesa

00:25:20,640 --> 00:25:25,120
through an error if you use a particular

00:25:24,320 --> 00:25:29,600
gl

00:25:25,120 --> 00:25:32,400
gl function such as gl gen textures

00:25:29,600 --> 00:25:33,279
uh the equivalent mesa function for that

00:25:32,400 --> 00:25:38,080
entry point is

00:25:33,279 --> 00:25:38,080
underscore mesa underscore pool

00:25:38,240 --> 00:25:42,080
you can break on any of these functions

00:25:40,159 --> 00:25:44,480
to start stepping

00:25:42,080 --> 00:25:46,320
into the mesa implementation of a gl

00:25:44,480 --> 00:25:48,159
call

00:25:46,320 --> 00:25:50,480
while you're debugging uh enabling

00:25:48,159 --> 00:25:53,039
asserts is also a great way to ensure

00:25:50,480 --> 00:25:54,159
that all the conditions are being met

00:25:53,039 --> 00:25:57,520
and satisfied

00:25:54,159 --> 00:25:59,919
in the code you can also set the mesa

00:25:57,520 --> 00:26:02,640
debug environment variable

00:25:59,919 --> 00:26:04,559
and you can check out each every single

00:26:02,640 --> 00:26:05,840
driver has its own environment variables

00:26:04,559 --> 00:26:07,200
for debugging as well

00:26:05,840 --> 00:26:09,440
and i would recommend that you go to

00:26:07,200 --> 00:26:11,360
this to the link that's mentioned

00:26:09,440 --> 00:26:13,200
in the pres in the slides to for a

00:26:11,360 --> 00:26:16,080
complete list

00:26:13,200 --> 00:26:16,559
piglets the thing tests are some of the

00:26:16,080 --> 00:26:19,279
best

00:26:16,559 --> 00:26:20,480
are one of the best ways for you to an

00:26:19,279 --> 00:26:21,679
application developer to either

00:26:20,480 --> 00:26:25,440
understand

00:26:21,679 --> 00:26:29,440
a particular feature or a gl call

00:26:25,440 --> 00:26:31,600
piglet tests mesa has a comprehens has a

00:26:29,440 --> 00:26:36,640
comprehensive test coverage

00:26:31,600 --> 00:26:38,320
and simply using gdp on one of the tests

00:26:36,640 --> 00:26:40,400
and breaking on any of the functions

00:26:38,320 --> 00:26:41,760
that that you need to debug or

00:26:40,400 --> 00:26:44,880
understand

00:26:41,760 --> 00:26:45,760
is a great way to have a minimal test

00:26:44,880 --> 00:26:49,600
case

00:26:45,760 --> 00:26:49,600
or a minimal entry point essentially

00:26:50,720 --> 00:26:57,200
all right so

00:26:54,159 --> 00:26:59,440
the gpu topic is quite big and

00:26:57,200 --> 00:27:01,200
it can be intimidating i have been

00:26:59,440 --> 00:27:02,400
working on this for the last year and a

00:27:01,200 --> 00:27:06,240
half

00:27:02,400 --> 00:27:08,559
and i still definitely

00:27:06,240 --> 00:27:09,360
i'm alone i definitely have a lot to

00:27:08,559 --> 00:27:10,880
learn

00:27:09,360 --> 00:27:13,440
so i would recommend that you start

00:27:10,880 --> 00:27:16,320
small and choose a driver

00:27:13,440 --> 00:27:17,840
and stick with it till you understand

00:27:16,320 --> 00:27:20,960
large parts of it

00:27:17,840 --> 00:27:22,480
uh or the larger theme of the driver uh

00:27:20,960 --> 00:27:23,760
maybe find a feature that's missing or

00:27:22,480 --> 00:27:26,480
buggy

00:27:23,760 --> 00:27:28,720
and just don't give up just keep at it

00:27:26,480 --> 00:27:29,760
and come hang out with us on irc ask

00:27:28,720 --> 00:27:32,720
questions

00:27:29,760 --> 00:27:34,399
there's a whole bunch of nice people uh

00:27:32,720 --> 00:27:35,919
who will help you and try to kind of get

00:27:34,399 --> 00:27:39,120
things working

00:27:35,919 --> 00:27:40,399
things take a while but if you just keep

00:27:39,120 --> 00:27:43,679
at it

00:27:40,399 --> 00:27:43,679
you'll you'll do great

00:27:45,600 --> 00:27:48,960
this is a couple of good resources that

00:27:48,399 --> 00:27:52,159
i would

00:27:48,960 --> 00:27:53,120
recommend that you read just get a

00:27:52,159 --> 00:27:58,000
general overview

00:27:53,120 --> 00:28:00,240
of how opengl works or how gpu works

00:27:58,000 --> 00:28:03,360
or to get a better understanding of the

00:28:00,240 --> 00:28:05,120
drm framework in the linux kernel

00:28:03,360 --> 00:28:07,440
and also go check out my colleagues

00:28:05,120 --> 00:28:10,799
stock

00:28:07,440 --> 00:28:12,960
at elce there's a whole bunch of talks

00:28:10,799 --> 00:28:15,840
that come out at elc

00:28:12,960 --> 00:28:16,559
that are great resources to learn

00:28:15,840 --> 00:28:20,799
specific

00:28:16,559 --> 00:28:24,399
things about the gpu driver

00:28:20,799 --> 00:28:27,120
community i would say so go check those

00:28:24,399 --> 00:28:27,120
out on youtube

00:28:28,399 --> 00:28:45,840
and that's it from my side uh does

00:28:30,320 --> 00:28:45,840
anyone have any other questions

00:29:21,679 --> 00:29:24,880
all right so one of the questions is

00:29:23,679 --> 00:29:27,200
which page of the framework is

00:29:24,880 --> 00:29:29,600
responsible for shaders

00:29:27,200 --> 00:29:30,799
and where do they get injected so

00:29:29,600 --> 00:29:34,399
shaders essentially

00:29:30,799 --> 00:29:37,520
are programs that application

00:29:34,399 --> 00:29:40,799
drivers application

00:29:37,520 --> 00:29:42,399
developers will write

00:29:40,799 --> 00:29:44,720
let me see if i can go back a couple of

00:29:42,399 --> 00:29:44,720
slides

00:29:49,240 --> 00:29:52,339
[Music]

00:29:52,640 --> 00:29:58,240
all right so shaders

00:29:55,840 --> 00:29:59,760
are written at the application layer

00:29:58,240 --> 00:30:03,760
over here

00:29:59,760 --> 00:30:05,440
and they get passed to galleon

00:30:03,760 --> 00:30:08,720
and then they get passed to the

00:30:05,440 --> 00:30:11,279
use-based drivers

00:30:08,720 --> 00:30:12,240
these are essentially programs like c or

00:30:11,279 --> 00:30:15,840
c they're c

00:30:12,240 --> 00:30:17,600
like programs and they get compiled

00:30:15,840 --> 00:30:20,320
just like you would compile for example

00:30:17,600 --> 00:30:23,919
a c program they have a compiler

00:30:20,320 --> 00:30:25,919
and except in this case every single

00:30:23,919 --> 00:30:29,120
driver has a compiler

00:30:25,919 --> 00:30:31,440
uh there isn't a standard gcc compiler

00:30:29,120 --> 00:30:31,440
and

00:30:32,480 --> 00:30:36,320
and in order to compile these programs

00:30:34,399 --> 00:30:40,080
you first have to convert

00:30:36,320 --> 00:30:43,279
them from this c like format to a

00:30:40,080 --> 00:30:46,000
ir format such as near or

00:30:43,279 --> 00:30:46,000
tgsi

00:30:46,720 --> 00:30:51,840
does that answer your question

00:30:57,600 --> 00:31:02,480
awesome one of the other questions was

00:31:03,039 --> 00:31:07,279
i think someone asked why are nvidia

00:31:04,960 --> 00:31:10,159
drivers so buggy jonathan

00:31:07,279 --> 00:31:10,720
i have no clue uh i think writing

00:31:10,159 --> 00:31:14,960
drivers

00:31:10,720 --> 00:31:14,960
is i think writing gpu drivers is

00:31:15,360 --> 00:31:19,340
pretty difficult uh especially when as a

00:31:18,159 --> 00:31:20,799
company you have to

00:31:19,340 --> 00:31:22,720
[Music]

00:31:20,799 --> 00:31:23,840
support a wide range of products across

00:31:22,720 --> 00:31:27,039
a variety of

00:31:23,840 --> 00:31:30,080
wide range of platforms

00:31:27,039 --> 00:31:31,440
we as mesa developers have a slightly

00:31:30,080 --> 00:31:35,039
easier job

00:31:31,440 --> 00:31:35,840
slightly easier job uh that we only have

00:31:35,039 --> 00:31:39,360
to kind of support

00:31:35,840 --> 00:31:41,919
linux at the moment and the fact that we

00:31:39,360 --> 00:31:45,279
have such a large and active community

00:31:41,919 --> 00:31:47,120
also definitely helps uh i think it's an

00:31:45,279 --> 00:31:49,039
india kind of wants to come join us

00:31:47,120 --> 00:31:51,200
in the in the mesa world they should

00:31:49,039 --> 00:32:01,840
they should definitely come do that

00:31:51,200 --> 00:32:01,840
maybe maybe we can learn from each other

00:32:14,799 --> 00:32:18,640
so the next question is what is the

00:32:16,799 --> 00:32:22,720
status of vulcan integration

00:32:18,640 --> 00:32:25,840
in mesa um

00:32:22,720 --> 00:32:25,840
let's see so

00:32:26,320 --> 00:32:29,519
that's a very that's a tricky question

00:32:27,919 --> 00:32:32,000
to answer essentially because of the

00:32:29,519 --> 00:32:35,200
fact that there are

00:32:32,000 --> 00:32:37,279
new standards uh uh coming out ev

00:32:35,200 --> 00:32:38,559
every single time you have a new opengl

00:32:37,279 --> 00:32:39,840
standard coming out there is new

00:32:38,559 --> 00:32:40,840
functionality that needs to be

00:32:39,840 --> 00:32:43,519
implemented

00:32:40,840 --> 00:32:46,720
implemented so the answer would be

00:32:43,519 --> 00:32:46,720
it's never going to be complete

00:32:47,280 --> 00:32:52,480
[Music]

00:32:48,960 --> 00:32:54,559
and so at the moment i don't really know

00:32:52,480 --> 00:32:56,159
how what percentage of the tests are

00:32:54,559 --> 00:32:56,880
passing what percentage of the pigment

00:32:56,159 --> 00:32:59,360
tests for

00:32:56,880 --> 00:33:00,640
vulcan are passing that is something

00:32:59,360 --> 00:33:02,799
that i would i would need to go and look

00:33:00,640 --> 00:33:02,799
out

00:33:05,519 --> 00:33:12,000
but from my understanding

00:33:08,559 --> 00:33:13,360
it is in a pretty good shape

00:33:12,000 --> 00:33:16,399
there i'm definitely i've definitely

00:33:13,360 --> 00:33:19,679
seen games running on vulcan on linux

00:33:16,399 --> 00:33:25,840
so decently complete

00:33:19,679 --> 00:33:25,840
enough is enough to run again complete

00:33:43,279 --> 00:33:46,640
thank you so much rohan

00:33:47,919 --> 00:33:51,919
we still have a couple more minutes in

00:33:49,519 --> 00:33:54,080
case anyone wants to add another

00:33:51,919 --> 00:33:58,000
question

00:33:54,080 --> 00:33:59,919
otherwise thank you so very much

00:33:58,000 --> 00:34:02,240
and i hope you enjoy the rest of the

00:33:59,919 --> 00:34:07,840
conference and you're able to stay in

00:34:02,240 --> 00:34:07,840
and watch with us

00:34:08,079 --> 00:34:12,159
absolutely and if you have any more

00:34:09,839 --> 00:34:12,560
questions i am shake slayer on irc you

00:34:12,159 --> 00:34:15,839
can

00:34:12,560 --> 00:34:19,760
throw those questions over there

00:34:15,839 --> 00:34:24,240
we have a bunch of irc channels

00:34:19,760 --> 00:34:27,599
hang out with us great

00:34:24,240 --> 00:34:29,359
again thank you ron we um

00:34:27,599 --> 00:34:35,839
we always look forward to hearing from

00:34:29,359 --> 00:34:35,839
you have a great rest of the day

00:53:38,960 --> 00:53:43,599
good morning everybody alison can you

00:53:42,240 --> 00:53:46,720
check that everybody

00:53:43,599 --> 00:53:50,800
that hi thank you

00:53:46,720 --> 00:53:52,640
you beat me to it wonderful

00:53:50,800 --> 00:53:54,319
good morning good afternoon good evening

00:53:52,640 --> 00:53:57,839
wherever you are

00:53:54,319 --> 00:54:00,240
and i'm very pleased to welcome

00:53:57,839 --> 00:54:01,040
luis to the stage he's going to talk

00:54:00,240 --> 00:54:04,079
about

00:54:01,040 --> 00:54:06,720
my gnu health which is an ongoing

00:54:04,079 --> 00:54:08,839
project using open source technology

00:54:06,720 --> 00:54:10,960
everyone please give a warm welcome to

00:54:08,839 --> 00:54:13,839
luis

00:54:10,960 --> 00:54:16,000
hello everybody good morning to you and

00:54:13,839 --> 00:54:18,480
good afternoon wherever you are

00:54:16,000 --> 00:54:20,000
and today we're going to be talking

00:54:18,480 --> 00:54:23,520
about my new health

00:54:20,000 --> 00:54:26,559
it's a lively

00:54:23,520 --> 00:54:29,280
project for

00:54:26,559 --> 00:54:29,599
a personal health record and it's part

00:54:29,280 --> 00:54:34,400
of

00:54:29,599 --> 00:54:36,960
the guinea health ecosystem

00:54:34,400 --> 00:54:37,680
just to go through the agenda very

00:54:36,960 --> 00:54:40,480
quickly

00:54:37,680 --> 00:54:42,079
we'll go through the history of the

00:54:40,480 --> 00:54:45,119
project

00:54:42,079 --> 00:54:49,200
and then we'll talk about the components

00:54:45,119 --> 00:54:51,040
and finally we'll dive into the uh

00:54:49,200 --> 00:54:52,240
the application itself the mobile

00:54:51,040 --> 00:54:54,880
application

00:54:52,240 --> 00:54:55,440
and and this is a bit more technical the

00:54:54,880 --> 00:54:59,119
others

00:54:55,440 --> 00:55:00,720
than others but uh not too techy anyway

00:54:59,119 --> 00:55:01,040
so i think that everybody would be able

00:55:00,720 --> 00:55:03,920
to

00:55:01,040 --> 00:55:05,839
to follow it and hopefully i think that

00:55:03,920 --> 00:55:08,960
we have until

00:55:05,839 --> 00:55:11,839
9 15 9 20

00:55:08,960 --> 00:55:14,400
so we get some time for the questions if

00:55:11,839 --> 00:55:14,400
there are any

00:55:15,040 --> 00:55:18,640
just a little bit about myself my

00:55:17,839 --> 00:55:20,400
background

00:55:18,640 --> 00:55:22,000
academic background and professional

00:55:20,400 --> 00:55:26,000
background it's a

00:55:22,000 --> 00:55:29,359
computer scientist and a medical doctor

00:55:26,000 --> 00:55:33,280
and basically i've been specialized in

00:55:29,359 --> 00:55:35,280
genomics and medical genetics

00:55:33,280 --> 00:55:37,440
but the things that moved me the most

00:55:35,280 --> 00:55:41,280
are social medicine

00:55:37,440 --> 00:55:44,880
uh animal rights you might hear my dogs

00:55:41,280 --> 00:55:48,319
between the the talk uh

00:55:44,880 --> 00:55:51,359
calling me for a walk and of course

00:55:48,319 --> 00:55:53,440
libra software and it's it's a it's a

00:55:51,359 --> 00:55:56,480
great combination to work

00:55:53,440 --> 00:55:58,960
in the three of them in this sort of

00:55:56,480 --> 00:55:58,960
projects

00:55:59,040 --> 00:56:04,079
so um this picture was one of the very

00:56:02,720 --> 00:56:07,119
first one that we

00:56:04,079 --> 00:56:11,119
um took

00:56:07,119 --> 00:56:14,160
in argentina this is 2006

00:56:11,119 --> 00:56:17,280
and it was the initial or the kickoff

00:56:14,160 --> 00:56:18,000
of the new health project we were

00:56:17,280 --> 00:56:22,000
working

00:56:18,000 --> 00:56:25,200
initially in rural schools

00:56:22,000 --> 00:56:27,760
and then i felt that

00:56:25,200 --> 00:56:28,559
these kids needed more than just

00:56:27,760 --> 00:56:31,599
technology

00:56:28,559 --> 00:56:34,079
and and that's where the primary care

00:56:31,599 --> 00:56:36,799
concepts and the um

00:56:34,079 --> 00:56:38,880
public health and all these

00:56:36,799 --> 00:56:42,640
socio-economic determinants of

00:56:38,880 --> 00:56:45,920
of health came into light and um

00:56:42,640 --> 00:56:48,400
a couple of years later new health was a

00:56:45,920 --> 00:56:48,400
reality

00:56:49,440 --> 00:56:58,319
so new health is

00:56:53,680 --> 00:57:03,200
a project from solidario nu solidario is

00:56:58,319 --> 00:57:07,040
an ngo that works on social media

00:57:03,200 --> 00:57:07,920
and we have a global we're small ngo but

00:57:07,040 --> 00:57:11,040
we work

00:57:07,920 --> 00:57:13,839
globally we have projects in all

00:57:11,040 --> 00:57:13,839
continents today

00:57:13,920 --> 00:57:26,000
and it's also a new

00:57:17,040 --> 00:57:29,920
official project since 2011.

00:57:26,000 --> 00:57:33,760
these are just some uh very

00:57:29,920 --> 00:57:34,720
quick summary of different projects

00:57:33,760 --> 00:57:39,040
around the world

00:57:34,720 --> 00:57:42,880
from laos jamaica argentina mexico

00:57:39,040 --> 00:57:45,599
india and we work with multilateral

00:57:42,880 --> 00:57:48,880
organizations like the united nations

00:57:45,599 --> 00:57:55,839
university or the

00:57:48,880 --> 00:57:58,960
world health health organization

00:57:55,839 --> 00:58:02,000
so what's what's taking us today

00:57:58,960 --> 00:58:04,960
it's again my new health and

00:58:02,000 --> 00:58:06,799
and as i said at the beginning it's part

00:58:04,960 --> 00:58:10,559
of a larger project called

00:58:06,799 --> 00:58:14,319
new health these are some of the

00:58:10,559 --> 00:58:16,480
components technical components that

00:58:14,319 --> 00:58:17,359
we use in our project all of them of

00:58:16,480 --> 00:58:20,480
course are

00:58:17,359 --> 00:58:24,559
libra software and

00:58:20,480 --> 00:58:27,599
from operating systems as open source

00:58:24,559 --> 00:58:31,040
or freebsd

00:58:27,599 --> 00:58:35,280
database we use different like

00:58:31,040 --> 00:58:38,240
postgres sql or tinydb python as a

00:58:35,280 --> 00:58:38,240
programming language

00:58:38,720 --> 00:58:43,200
cute tritone flask and the documentation

00:58:42,160 --> 00:58:47,200
today is on

00:58:43,200 --> 00:58:50,960
wikibooks we use vue.gs for the

00:58:47,200 --> 00:58:55,920
federation portal and gnupg mainly for

00:58:50,960 --> 00:58:55,920
signing documents and encrypt documents

00:58:57,040 --> 00:59:04,160
so new health as i said it's it's it's a

00:59:00,240 --> 00:59:07,520
it's an ecosystem it's it's a set

00:59:04,160 --> 00:59:11,839
of programs that do different tasks

00:59:07,520 --> 00:59:14,079
okay so we have a health

00:59:11,839 --> 00:59:16,480
hospital information management system

00:59:14,079 --> 00:59:20,160
we have a laboratory

00:59:16,480 --> 00:59:24,319
we have we'll be talking to the

00:59:20,160 --> 00:59:28,079
personal health record application

00:59:24,319 --> 00:59:30,640
we also work on the areas of

00:59:28,079 --> 00:59:33,040
precision medicine and bioinformatics

00:59:30,640 --> 00:59:36,400
and genomics

00:59:33,040 --> 00:59:37,200
and also we have the embedded solutions

00:59:36,400 --> 00:59:40,960
so you can

00:59:37,200 --> 00:59:44,839
run new health on single board devices

00:59:40,960 --> 00:59:47,839
like raspberry pi or karas or

00:59:44,839 --> 00:59:47,839
olimex

00:59:48,720 --> 00:59:52,720
so from all of those components we have

00:59:51,040 --> 00:59:55,760
this screenshot is

00:59:52,720 --> 00:59:58,960
a set of

00:59:55,760 --> 01:00:01,359
different scenarios within the

00:59:58,960 --> 01:00:02,799
hospital management information system

01:00:01,359 --> 01:00:06,000
component or node i

01:00:02,799 --> 01:00:08,079
i call them nodes um

01:00:06,000 --> 01:00:09,119
so you see that you can do diagnostic

01:00:08,079 --> 01:00:12,839
imaging

01:00:09,119 --> 01:00:15,599
uh have your agenda work on

01:00:12,839 --> 01:00:19,839
histopathology

01:00:15,599 --> 01:00:23,280
you have charts for epidemiology

01:00:19,839 --> 01:00:25,440
or growth charts in pediatrics and so on

01:00:23,280 --> 01:00:27,359
and basically you can run your your

01:00:25,440 --> 01:00:29,920
health institution your hospital your

01:00:27,359 --> 01:00:34,079
primary care center or your private

01:00:29,920 --> 01:00:34,079
doctor office or laboratory

01:00:36,079 --> 01:00:43,040
so now let's get into the

01:00:39,119 --> 01:00:45,760
details or or more than details

01:00:43,040 --> 01:00:46,319
an introduction of my new health and why

01:00:45,760 --> 01:00:48,319
did we

01:00:46,319 --> 01:00:50,640
create this application why are we

01:00:48,319 --> 01:00:54,960
creating this application

01:00:50,640 --> 01:00:58,079
um the main idea

01:00:54,960 --> 01:01:01,119
behind my new health is putting

01:00:58,079 --> 01:01:05,200
the person the citizen the patient

01:01:01,119 --> 01:01:10,160
on the driver's seat right i feel like

01:01:05,200 --> 01:01:13,520
as a physician most of the time

01:01:10,160 --> 01:01:17,119
people or the patients are are more of

01:01:13,520 --> 01:01:20,079
like passive actors you know and and

01:01:17,119 --> 01:01:21,680
and they pretty much are supposed to

01:01:20,079 --> 01:01:24,240
take the

01:01:21,680 --> 01:01:26,079
the orders or the recipes or whatever

01:01:24,240 --> 01:01:28,319
the health professionals tell them

01:01:26,079 --> 01:01:30,240
and and that is that's a mistake we have

01:01:28,319 --> 01:01:33,839
to empower the uh

01:01:30,240 --> 01:01:36,400
the um the person to be an active member

01:01:33,839 --> 01:01:40,559
of the system of health

01:01:36,400 --> 01:01:43,680
so um within this new health

01:01:40,559 --> 01:01:45,920
ecosystem my new health uses

01:01:43,680 --> 01:01:47,119
this technology that you're seeing here

01:01:45,920 --> 01:01:49,680
okay so

01:01:47,119 --> 01:01:53,839
as in many other components python is

01:01:49,680 --> 01:01:53,839
the main programming language

01:01:54,240 --> 01:01:59,440
we use again ginupg for

01:02:00,640 --> 01:02:06,319
privacy and for signing documents in

01:02:03,359 --> 01:02:10,000
this case we are using tinydb

01:02:06,319 --> 01:02:12,559
as a document-oriented database

01:02:10,000 --> 01:02:15,280
because remember this is now a

01:02:12,559 --> 01:02:17,599
one-to-one relationship between

01:02:15,280 --> 01:02:20,240
the person and your database this is

01:02:17,599 --> 01:02:20,799
this database is not a multi-user db

01:02:20,240 --> 01:02:24,079
this is

01:02:20,799 --> 01:02:25,920
your db it's going to be on your desktop

01:02:24,079 --> 01:02:29,039
or on your mobile device

01:02:25,920 --> 01:02:32,160
with your only data

01:02:29,039 --> 01:02:35,280
um then we'll see kirigami

01:02:32,160 --> 01:02:38,960
that makes it convergent a mud plot leap

01:02:35,280 --> 01:02:42,319
for charts enqueued

01:02:38,960 --> 01:02:45,920
for all the framework

01:02:42,319 --> 01:02:45,920
of of the

01:02:46,480 --> 01:02:53,440
graphical interface

01:02:49,839 --> 01:02:53,440
we use a plasma mobile

01:02:55,039 --> 01:02:58,960
so python 3 is the main language as i

01:02:57,440 --> 01:03:01,359
just said and most of

01:02:58,960 --> 01:03:02,079
these components you can find them uh

01:03:01,359 --> 01:03:05,520
today

01:03:02,079 --> 01:03:10,319
uh at the python podcast

01:03:05,520 --> 01:03:10,319
index pb um

01:03:10,799 --> 01:03:14,240
and again as many others okay so you can

01:03:13,839 --> 01:03:16,799
find

01:03:14,240 --> 01:03:18,760
thalamus or you can find all the stuff

01:03:16,799 --> 01:03:23,280
of related to

01:03:18,760 --> 01:03:23,280
bioinformatics at pi by 2.

01:03:27,280 --> 01:03:34,240
so we are using um

01:03:30,559 --> 01:03:37,440
qt uh for uh

01:03:34,240 --> 01:03:40,640
all the um graphical interface

01:03:37,440 --> 01:03:44,240
um by using the pi

01:03:40,640 --> 01:03:47,359
side package okay so uh

01:03:44,240 --> 01:03:48,720
basically is the queue for python uh or

01:03:47,359 --> 01:03:51,920
pi site2

01:03:48,720 --> 01:03:55,760
um package that allow us to

01:03:51,920 --> 01:03:59,119
interact with all the cued classes

01:03:55,760 --> 01:04:02,400
uh already existing

01:03:59,119 --> 01:04:05,280
and it's it's uh rolling up running out

01:04:02,400 --> 01:04:05,280
really really well

01:04:08,400 --> 01:04:17,520
now one of the good thing about cute and

01:04:12,880 --> 01:04:21,680
kde framework is this a component

01:04:17,520 --> 01:04:21,680
called kirigami that allow us to

01:04:22,480 --> 01:04:26,160
make my new health convergent and that

01:04:25,599 --> 01:04:29,440
means

01:04:26,160 --> 01:04:31,760
that it will adapt

01:04:29,440 --> 01:04:34,880
to different scenarios so if you are

01:04:31,760 --> 01:04:38,319
running my new health like your desktop

01:04:34,880 --> 01:04:38,960
computer you will have your widgets and

01:04:38,319 --> 01:04:44,640
your

01:04:38,960 --> 01:04:48,319
and your ui adapted to that

01:04:44,640 --> 01:04:51,520
desktop computer now with the same code

01:04:48,319 --> 01:04:54,640
you will be able to run it

01:04:51,520 --> 01:04:58,960
on a mobile device whether it's

01:04:54,640 --> 01:05:01,680
your tablet or where is your

01:04:58,960 --> 01:05:01,680
mobile phone

01:05:03,760 --> 01:05:11,520
so here is a very short example of

01:05:08,400 --> 01:05:15,760
my new help py the very first

01:05:11,520 --> 01:05:19,839
or main program and you can see in this

01:05:15,760 --> 01:05:23,440
slide how do you actually import

01:05:19,839 --> 01:05:27,680
those modules so you have pi side 2

01:05:23,440 --> 01:05:31,440
cubed widgets qt core and qml

01:05:27,680 --> 01:05:35,280
we use qml for the design

01:05:31,440 --> 01:05:36,559
and the logic is always on on the python

01:05:35,280 --> 01:05:39,599
side

01:05:36,559 --> 01:05:42,880
it's a nice way to divide ui

01:05:39,599 --> 01:05:47,440
from from the logic

01:05:42,880 --> 01:05:47,440
and it's it's pure python 3

01:05:48,839 --> 01:05:53,520
code

01:05:50,319 --> 01:05:56,640
so this is an example on how

01:05:53,520 --> 01:06:00,880
it will actually be seen on

01:05:56,640 --> 01:06:05,839
the plasma desktop

01:06:00,880 --> 01:06:05,839
you have two screenshots from different

01:06:06,160 --> 01:06:12,960
contexts right

01:06:09,520 --> 01:06:16,480
and you will be able now

01:06:12,960 --> 01:06:20,880
to see in the next slide

01:06:16,480 --> 01:06:25,520
how will that actually look um

01:06:20,880 --> 01:06:25,520
on the on the mobile devices

01:06:26,240 --> 01:06:32,240
so this is actually a picture the photo

01:06:28,960 --> 01:06:36,240
that i took

01:06:32,240 --> 01:06:41,119
from the pine from the pine phone

01:06:36,240 --> 01:06:41,920
uh and again you know i i didn't have to

01:06:41,119 --> 01:06:45,200
change

01:06:41,920 --> 01:06:48,960
a single line of code thanks to

01:06:45,200 --> 01:06:52,400
kirigami framework right it it

01:06:48,960 --> 01:06:56,559
if you see if you see this

01:06:52,400 --> 01:07:00,559
slide you will see this little

01:06:56,559 --> 01:07:02,079
icon here the typical x from the x

01:07:00,559 --> 01:07:05,920
window system right

01:07:02,079 --> 01:07:07,119
um that and of course you have the

01:07:05,920 --> 01:07:10,400
windows frame

01:07:07,119 --> 01:07:14,480
and and so on and then when it comes to

01:07:10,400 --> 01:07:17,920
um to the pine phone um

01:07:14,480 --> 01:07:21,599
all of those frames uh and icons

01:07:17,920 --> 01:07:22,400
disappear for the sake of uh expanding

01:07:21,599 --> 01:07:25,520
right

01:07:22,400 --> 01:07:29,039
and and optimizing the uh

01:07:25,520 --> 01:07:32,319
the viewing experience and in the

01:07:29,039 --> 01:07:35,599
layout on smaller

01:07:32,319 --> 01:07:37,920
screens and it's it works really really

01:07:35,599 --> 01:07:37,920
nice

01:07:41,680 --> 01:07:49,760
now um a few words about the storage

01:07:45,920 --> 01:07:50,720
so so one of the things that we need to

01:07:49,760 --> 01:07:52,960
do

01:07:50,720 --> 01:07:54,000
is to be able of course to storage all

01:07:52,960 --> 01:07:58,000
this data if

01:07:54,000 --> 01:07:58,720
if we want to have a chart on my blood

01:07:58,000 --> 01:08:02,000
pressure

01:07:58,720 --> 01:08:04,880
of my blood glucose levels

01:08:02,000 --> 01:08:05,920
i need to be able to retrieve it from

01:08:04,880 --> 01:08:10,480
somewhere

01:08:05,920 --> 01:08:14,799
and of course there are many really good

01:08:10,480 --> 01:08:19,359
databases engines both for

01:08:14,799 --> 01:08:22,719
regular computers as for smaller

01:08:19,359 --> 01:08:25,120
devices but i also wanted something that

01:08:22,719 --> 01:08:27,440
it was going to

01:08:25,120 --> 01:08:27,440
give

01:08:28,319 --> 01:08:33,120
facilities to the end user in terms of

01:08:33,279 --> 01:08:37,120
searching for documents

01:08:37,279 --> 01:08:42,239
and be able to make a single single

01:08:40,319 --> 01:08:44,319
backup and take it from your

01:08:42,239 --> 01:08:45,359
desktop to your mobile and vice versa

01:08:44,319 --> 01:08:47,679
and so on

01:08:45,359 --> 01:08:48,799
and then and that's what i found i need

01:08:47,679 --> 01:08:52,480
to be they maybe

01:08:48,799 --> 01:08:55,839
it's a document oriented database it's

01:08:52,480 --> 01:09:00,480
basically a nice way to represent

01:08:55,839 --> 01:09:00,480
json and to store json

01:09:00,799 --> 01:09:06,560
objects and

01:09:04,560 --> 01:09:09,199
and it's of course platform independent

01:09:06,560 --> 01:09:12,400
that means that if i take that dump

01:09:09,199 --> 01:09:14,719
from from by um

01:09:12,400 --> 01:09:15,920
from my desktop i'll just take the file

01:09:14,719 --> 01:09:19,600
and i can just

01:09:15,920 --> 01:09:21,679
put it on on the uh

01:09:19,600 --> 01:09:22,880
tablet or on my mobile device and it

01:09:21,679 --> 01:09:26,159
will just work

01:09:22,880 --> 01:09:29,600
fine uh and and that makes it very

01:09:26,159 --> 01:09:34,319
portable and so far so good it's a

01:09:29,600 --> 01:09:37,359
really really nice

01:09:34,319 --> 01:09:40,960
oriented database um

01:09:37,359 --> 01:09:43,679
that for this case where we don't have

01:09:40,960 --> 01:09:45,839
much of concurrency at all it's

01:09:43,679 --> 01:09:50,640
basically a single use database

01:09:45,839 --> 01:09:50,640
it's it's working beautifully

01:09:53,120 --> 01:09:59,840
so now we've talked about um

01:09:56,960 --> 01:10:03,120
pretty much running my new health my

01:09:59,840 --> 01:10:05,199
personal health record on my devices

01:10:03,120 --> 01:10:07,120
right whether it's my laptop or my

01:10:05,199 --> 01:10:09,840
mobile device and so on

01:10:07,120 --> 01:10:10,800
but that is good of course that is great

01:10:09,840 --> 01:10:14,000
but we need to go

01:10:10,800 --> 01:10:17,520
one step further and that means we need

01:10:14,000 --> 01:10:21,040
to integrate this data

01:10:17,520 --> 01:10:24,080
in the system of health so

01:10:21,040 --> 01:10:27,280
my health professional can see

01:10:24,080 --> 01:10:30,480
all those results without

01:10:27,280 --> 01:10:33,199
me having to go to the health

01:10:30,480 --> 01:10:33,199
institution

01:10:33,600 --> 01:10:38,880
and and especially now with this

01:10:36,159 --> 01:10:43,199
pandemic context that comes very handy

01:10:38,880 --> 01:10:46,239
because then you know

01:10:43,199 --> 01:10:49,600
you can have um

01:10:46,239 --> 01:10:52,159
pretty much a daily

01:10:49,600 --> 01:10:53,760
all your daily activities being

01:10:52,159 --> 01:10:56,159
monitored

01:10:53,760 --> 01:10:57,040
by your health professional and you can

01:10:56,159 --> 01:10:59,760
take action

01:10:57,040 --> 01:11:01,840
or or she or he can take action

01:10:59,760 --> 01:11:03,120
depending on the values that you are

01:11:01,840 --> 01:11:05,600
providing

01:11:03,120 --> 01:11:06,560
um and that's where the new health

01:11:05,600 --> 01:11:10,239
federation

01:11:06,560 --> 01:11:11,040
comes into place right if you see this

01:11:10,239 --> 01:11:13,360
slide

01:11:11,040 --> 01:11:15,120
you will see that it has pretty much

01:11:13,360 --> 01:11:18,560
three sections right you have

01:11:15,120 --> 01:11:19,679
a left side with three icons then in the

01:11:18,560 --> 01:11:22,800
middle you have

01:11:19,679 --> 01:11:25,920
thalamus and then in the right side

01:11:22,800 --> 01:11:28,000
you have the new health information

01:11:25,920 --> 01:11:31,040
system well

01:11:28,000 --> 01:11:34,880
the components that you see

01:11:31,040 --> 01:11:38,400
on the left hand side those are

01:11:34,880 --> 01:11:41,520
the nodes that make up

01:11:38,400 --> 01:11:45,760
the gnu health federation so

01:11:41,520 --> 01:11:45,760
one of the nodes can perfectly be

01:11:46,560 --> 01:11:53,679
a hospital running the hospital

01:11:50,159 --> 01:11:57,600
management information system node

01:11:53,679 --> 01:12:00,880
excuse me from new health

01:11:57,600 --> 01:12:01,280
the oil can be a laboratory and the oil

01:12:00,880 --> 01:12:04,159
can

01:12:01,280 --> 01:12:05,120
very well be my new health right so this

01:12:04,159 --> 01:12:08,560
could be

01:12:05,120 --> 01:12:12,320
my new health application

01:12:08,560 --> 01:12:15,600
what happened is you are going to have

01:12:12,320 --> 01:12:19,280
the possibility of setting up

01:12:15,600 --> 01:12:21,840
my new health and saying well i want

01:12:19,280 --> 01:12:22,640
to be part of the system of health right

01:12:21,840 --> 01:12:24,480
so you have

01:12:22,640 --> 01:12:25,760
a network settings that we'll see a

01:12:24,480 --> 01:12:28,239
little bit

01:12:25,760 --> 01:12:29,040
afterwards where you can actually say

01:12:28,239 --> 01:12:32,480
well this

01:12:29,040 --> 01:12:35,520
is where the thalamus server is

01:12:32,480 --> 01:12:39,199
it's located and and and

01:12:35,520 --> 01:12:42,320
i want to provide my credentials so

01:12:39,199 --> 01:12:44,560
whenever i enter my data that can

01:12:42,320 --> 01:12:48,159
actually sync

01:12:44,560 --> 01:12:51,600
or be in sync with the uh

01:12:48,159 --> 01:12:53,040
with this very large database that will

01:12:51,600 --> 01:12:57,040
have on the uh

01:12:53,040 --> 01:12:59,760
political system for example right so

01:12:57,040 --> 01:13:01,360
the thalamus is pretty much a messaging

01:12:59,760 --> 01:13:04,800
authentication server

01:13:01,360 --> 01:13:08,239
that it will allow you to go and and

01:13:04,800 --> 01:13:11,600
put data and retrieve data depending

01:13:08,239 --> 01:13:14,239
on your access rights

01:13:11,600 --> 01:13:15,120
right so basically you have an acl that

01:13:14,239 --> 01:13:18,320
says well

01:13:15,120 --> 01:13:19,040
you can actually providing that that you

01:13:18,320 --> 01:13:21,679
have

01:13:19,040 --> 01:13:23,280
logged in correctly and you can do this

01:13:21,679 --> 01:13:26,320
and this and this

01:13:23,280 --> 01:13:29,520
on this entire than that resources

01:13:26,320 --> 01:13:32,800
right and

01:13:29,520 --> 01:13:36,480
the thalamus is it's pretty much a flask

01:13:32,800 --> 01:13:36,480
application right

01:13:41,040 --> 01:13:45,360
so this is just to show you how you can

01:13:44,000 --> 01:13:50,080
couple with the

01:13:45,360 --> 01:13:57,120
new health federation

01:13:50,080 --> 01:13:57,120
uh from your own my new health

01:13:57,920 --> 01:14:04,640
application right so in this case

01:14:01,040 --> 01:14:07,520
you would go to a network settings

01:14:04,640 --> 01:14:08,400
right and then you establish by default

01:14:07,520 --> 01:14:12,239
the

01:14:08,400 --> 01:14:16,000
ssl https protocol

01:14:12,239 --> 01:14:18,880
and then you put where is that talam

01:14:16,000 --> 01:14:20,719
servers in this case we have

01:14:18,880 --> 01:14:21,920
in germany this is the federation

01:14:20,719 --> 01:14:25,600
newhealth.org

01:14:21,920 --> 01:14:26,080
this is a public server that we have set

01:14:25,600 --> 01:14:29,280
up so

01:14:26,080 --> 01:14:33,679
everybody can test their their notes and

01:14:29,280 --> 01:14:33,679
and play around with the system um

01:14:34,239 --> 01:14:41,040
you you put the port and then you have

01:14:37,760 --> 01:14:44,640
your unique federation account

01:14:41,040 --> 01:14:46,320
and your password right so what is the

01:14:44,640 --> 01:14:49,520
federation account well

01:14:46,320 --> 01:14:52,159
this is something that we've been uh we

01:14:49,520 --> 01:14:55,520
actually introduced this concept

01:14:52,159 --> 01:14:58,320
some years ago already and what we

01:14:55,520 --> 01:14:59,520
need or what we want to achieve with

01:14:58,320 --> 01:15:04,320
this

01:14:59,520 --> 01:15:06,480
is that um no matter where you are

01:15:04,320 --> 01:15:08,480
in your province or in your region on

01:15:06,480 --> 01:15:12,239
your country

01:15:08,480 --> 01:15:14,800
your health data is going to be

01:15:12,239 --> 01:15:16,480
up to date so if you are in health

01:15:14,800 --> 01:15:18,960
center a to d

01:15:16,480 --> 01:15:22,159
today and you go to health center b

01:15:18,960 --> 01:15:27,280
tomorrow in another province

01:15:22,159 --> 01:15:27,280
uh whoever is going to see your

01:15:27,600 --> 01:15:34,159
clinical history is going to be updated

01:15:31,679 --> 01:15:35,120
he or she doesn't have to start from

01:15:34,159 --> 01:15:37,840
zero

01:15:35,120 --> 01:15:39,199
to get all the data from you it will be

01:15:37,840 --> 01:15:42,320
already there

01:15:39,199 --> 01:15:43,440
and that is a huge advantage um because

01:15:42,320 --> 01:15:47,040
believe it or not

01:15:43,440 --> 01:15:48,800
we are still in many places in the world

01:15:47,040 --> 01:15:52,400
and in many places in

01:15:48,800 --> 01:15:56,560
within europe uh where

01:15:52,400 --> 01:15:59,600
different provinces have their own uh

01:15:56,560 --> 01:16:00,320
local database and they don't talk to

01:15:59,600 --> 01:16:03,520
each other

01:16:00,320 --> 01:16:06,400
so if you go from madrid to barcelona

01:16:03,520 --> 01:16:08,239
you're going to start from scratch

01:16:06,400 --> 01:16:10,000
with your medical history and clinical

01:16:08,239 --> 01:16:12,960
history and when that is

01:16:10,000 --> 01:16:16,000
within the public health system where

01:16:12,960 --> 01:16:16,000
pretty much we have

01:16:16,080 --> 01:16:24,400
seven minutes per patient that

01:16:19,360 --> 01:16:24,400
takes precious time out of your visit

01:16:25,760 --> 01:16:30,880
so once you have this set up all the

01:16:29,040 --> 01:16:33,760
data that you put

01:16:30,880 --> 01:16:35,040
and you wish to put because again if if

01:16:33,760 --> 01:16:37,520
if we go here but

01:16:35,040 --> 01:16:40,080
if we go back here one second you see

01:16:37,520 --> 01:16:40,080
this sync

01:16:40,480 --> 01:16:46,159
boolean here field basically saying

01:16:43,840 --> 01:16:47,280
i want to be part of the system of

01:16:46,159 --> 01:16:49,600
health okay

01:16:47,280 --> 01:16:50,719
and if you don't put the thing and if of

01:16:49,600 --> 01:16:54,000
course if you don't

01:16:50,719 --> 01:16:56,400
fill in this data you have your data

01:16:54,000 --> 01:17:02,480
only for you which is perk perfectly

01:16:56,400 --> 01:17:05,600
fine too

01:17:02,480 --> 01:17:07,760
so this is uh again

01:17:05,600 --> 01:17:08,640
a bit of a summary of what i just said

01:17:07,760 --> 01:17:12,400
about the

01:17:08,640 --> 01:17:16,400
the benefits of of having

01:17:12,400 --> 01:17:21,440
um every person as a node so

01:17:16,400 --> 01:17:24,159
until now the nodes were pretty much

01:17:21,440 --> 01:17:26,000
healthy institutions okay so you have

01:17:24,159 --> 01:17:27,679
many health institutions across your

01:17:26,000 --> 01:17:30,960
county and yes

01:17:27,679 --> 01:17:33,679
today we have the ability with the

01:17:30,960 --> 01:17:35,760
gnu health hospital management

01:17:33,679 --> 01:17:39,199
information system to sync

01:17:35,760 --> 01:17:39,199
all your patients

01:17:39,600 --> 01:17:45,280
evaluation lab clinical diagnostic

01:17:43,360 --> 01:17:48,400
imaging and so on

01:17:45,280 --> 01:17:53,520
but we didn't have a tool that

01:17:48,400 --> 01:17:56,159
would make the person an active

01:17:53,520 --> 01:17:57,679
actor right in the health system and

01:17:56,159 --> 01:18:00,480
that's where my new health

01:17:57,679 --> 01:18:02,000
comes into play and that's where you now

01:18:00,480 --> 01:18:05,360
as a citizen

01:18:02,000 --> 01:18:05,360
are a single node

01:18:07,600 --> 01:18:15,199
now all of this is really great um

01:18:12,400 --> 01:18:15,920
but if we look at it not only on the

01:18:15,199 --> 01:18:18,159
covet

01:18:15,920 --> 01:18:19,440
pandemics which of course will make a

01:18:18,159 --> 01:18:22,719
huge difference

01:18:19,440 --> 01:18:26,640
and it's already making it uh in in

01:18:22,719 --> 01:18:28,719
some countries uh not on my new health

01:18:26,640 --> 01:18:30,880
but at the hospital management

01:18:28,719 --> 01:18:35,040
information system

01:18:30,880 --> 01:18:35,040
think about what we can do in

01:18:35,600 --> 01:18:43,199
rare diseases in cancer research

01:18:39,199 --> 01:18:44,080
in autoimmune conditions there are so

01:18:43,199 --> 01:18:46,080
many things

01:18:44,080 --> 01:18:49,280
that we can do in the fields of

01:18:46,080 --> 01:18:49,280
precision medicine

01:18:49,440 --> 01:18:52,840
with the new health federation that is

01:18:51,600 --> 01:18:56,800
incredible

01:18:52,840 --> 01:18:59,120
and you can only do this

01:18:56,800 --> 01:19:00,560
if you have this sort of federated

01:18:59,120 --> 01:19:04,800
database

01:19:00,560 --> 01:19:04,800
and this federated distribution

01:19:05,520 --> 01:19:11,120
we work with the uniprot databases in

01:19:09,199 --> 01:19:14,159
the unit protein

01:19:11,120 --> 01:19:18,960
and we have thousands

01:19:14,159 --> 01:19:22,000
of natural variants and proteins

01:19:18,960 --> 01:19:25,440
or basically mutations

01:19:22,000 --> 01:19:28,640
in in genes that

01:19:25,440 --> 01:19:30,480
today we are uncertain of what is the

01:19:28,640 --> 01:19:33,600
clinical significance of

01:19:30,480 --> 01:19:36,640
many of those mutations

01:19:33,600 --> 01:19:37,600
so some of them we know and yes we can

01:19:36,640 --> 01:19:40,719
say well

01:19:37,600 --> 01:19:45,440
this is non-pathological or yes this

01:19:40,719 --> 01:19:47,679
is a clear clearly pathologic

01:19:45,440 --> 01:19:49,360
mutation so it has a very important

01:19:47,679 --> 01:19:54,159
clinical significance

01:19:49,360 --> 01:19:56,719
but many many of them we just don't know

01:19:54,159 --> 01:19:58,560
what can happen to us if we carry that

01:19:56,719 --> 01:20:01,600
mutation with us

01:19:58,560 --> 01:20:05,760
and by having this sort of

01:20:01,600 --> 01:20:09,120
uh of infrastructure

01:20:05,760 --> 01:20:12,159
you can find or it will

01:20:09,120 --> 01:20:15,040
help us finding

01:20:12,159 --> 01:20:16,239
a correlation between your genotype and

01:20:15,040 --> 01:20:20,239
your phenotype

01:20:16,239 --> 01:20:23,520
so what is what are your genes

01:20:20,239 --> 01:20:24,320
and what is the expressions of those

01:20:23,520 --> 01:20:28,159
things

01:20:24,320 --> 01:20:32,320
and for those for those

01:20:28,159 --> 01:20:34,719
especially for those um

01:20:32,320 --> 01:20:36,320
mutations where we still are natural

01:20:34,719 --> 01:20:38,159
variants that we still

01:20:36,320 --> 01:20:39,600
don't know what is the clinical

01:20:38,159 --> 01:20:41,520
significance and this is

01:20:39,600 --> 01:20:43,600
this would be really really a

01:20:41,520 --> 01:20:46,639
breakthrough and and

01:20:43,600 --> 01:20:49,600
and we are pushing

01:20:46,639 --> 01:20:50,159
to have uh new health and minor health

01:20:49,600 --> 01:20:53,280
in the

01:20:50,159 --> 01:20:55,440
in in different countries around the

01:20:53,280 --> 01:20:58,400
world of course we already have that

01:20:55,440 --> 01:21:00,480
but now that we are in europe we want

01:20:58,400 --> 01:21:03,360
the european community

01:21:00,480 --> 01:21:03,840
to embrace my new health and my new

01:21:03,360 --> 01:21:07,360
health

01:21:03,840 --> 01:21:12,840
federation to tackle

01:21:07,360 --> 01:21:17,360
these genetic diseases and of course

01:21:12,840 --> 01:21:17,360
cancer research

01:21:21,120 --> 01:21:30,800
and in argentina for example

01:21:25,600 --> 01:21:30,800
the national agency

01:21:31,920 --> 01:21:38,560
for research has chosen

01:21:35,440 --> 01:21:43,199
magnus health to work on

01:21:38,560 --> 01:21:46,560
as an observatory for the kobits uh

01:21:43,199 --> 01:21:50,239
uh pandemic in the

01:21:46,560 --> 01:21:50,239
entry rios uh province

01:21:51,600 --> 01:21:57,040
and again this this this possibility or

01:21:55,440 --> 01:22:01,440
disability of

01:21:57,040 --> 01:22:03,600
of the uh my new health excuse me of

01:22:01,440 --> 01:22:05,440
the new health federation to be able to

01:22:03,600 --> 01:22:12,320
do real-time

01:22:05,440 --> 01:22:12,320
charting real-time epidemiology reports

01:22:12,560 --> 01:22:21,040
in many cases will stop

01:22:16,719 --> 01:22:24,320
an outbreak to become from becoming

01:22:21,040 --> 01:22:27,120
a an epidemic right

01:22:24,320 --> 01:22:28,080
and it would be great to have had this

01:22:27,120 --> 01:22:31,920
in the

01:22:28,080 --> 01:22:32,800
early times of of the covet but anyways

01:22:31,920 --> 01:22:36,840
it's there

01:22:32,800 --> 01:22:39,760
and it's it's it's available for

01:22:36,840 --> 01:22:42,639
any public health system in the world

01:22:39,760 --> 01:22:42,639
that wants to use it

01:22:43,760 --> 01:22:52,320
and we are not just talking about

01:22:47,120 --> 01:22:55,920
um infectious diseases

01:22:52,320 --> 01:22:59,360
there are so many other diseases

01:22:55,920 --> 01:23:03,280
that are not contagious

01:22:59,360 --> 01:23:08,080
so we are talking about diabetes

01:23:03,280 --> 01:23:10,560
we are talking about domestic violence

01:23:08,080 --> 01:23:14,400
that are as important as contagious

01:23:10,560 --> 01:23:14,400
diseases and we need to tackle them

01:23:14,480 --> 01:23:17,360
in the same matter

01:23:19,440 --> 01:23:26,639
so um just wrapping up

01:23:24,400 --> 01:23:28,960
some of the things that we are doing

01:23:26,639 --> 01:23:32,080
today and some of the things that we

01:23:28,960 --> 01:23:34,800
need to be done and need to be where we

01:23:32,080 --> 01:23:38,639
need to put the focus

01:23:34,800 --> 01:23:42,480
again as i said currently we have the

01:23:38,639 --> 01:23:45,280
the mercurial repository

01:23:42,480 --> 01:23:45,280
at savannah

01:23:46,960 --> 01:23:52,320
and the documentation is on on wikibooks

01:23:49,920 --> 01:23:56,159
we are supposed to be releasing

01:23:52,320 --> 01:23:57,600
uh a bit a better version by the end of

01:23:56,159 --> 01:24:01,040
the year

01:23:57,600 --> 01:24:02,960
um and things that we would like to work

01:24:01,040 --> 01:24:06,960
on

01:24:02,960 --> 01:24:08,400
of course packaging localizations we've

01:24:06,960 --> 01:24:10,320
done a pretty good job

01:24:08,400 --> 01:24:12,400
on localization with the hospital

01:24:10,320 --> 01:24:15,280
management information system

01:24:12,400 --> 01:24:15,760
but today my new health is in english

01:24:15,280 --> 01:24:18,719
only

01:24:15,760 --> 01:24:20,560
so we have to work a bit on that so no

01:24:18,719 --> 01:24:21,920
matter where you are you will have it on

01:24:20,560 --> 01:24:26,159
your own language

01:24:21,920 --> 01:24:28,080
and of course strengthen uh

01:24:26,159 --> 01:24:30,719
privacy and security making sure that

01:24:28,080 --> 01:24:33,360
everything is in place

01:24:30,719 --> 01:24:35,280
the difference between my new health and

01:24:33,360 --> 01:24:37,360
the hospital management information

01:24:35,280 --> 01:24:39,440
system note is that

01:24:37,360 --> 01:24:40,639
my new health is to be run by people

01:24:39,440 --> 01:24:43,199
that are not necessarily

01:24:40,639 --> 01:24:44,000
technical so everything should be very

01:24:43,199 --> 01:24:46,560
very simple

01:24:44,000 --> 01:24:47,760
to use and as a matter of fact my new

01:24:46,560 --> 01:24:50,960
house should be

01:24:47,760 --> 01:24:53,280
already installed in uh for example the

01:24:50,960 --> 01:24:55,040
pine phone so whenever you get the pine

01:24:53,280 --> 01:24:57,760
phone you will have a

01:24:55,040 --> 01:24:58,480
minor health in place that that would be

01:24:57,760 --> 01:25:02,880
that would be

01:24:58,480 --> 01:25:05,760
uh wonderful and if not it should be

01:25:02,880 --> 01:25:07,360
simple to just download as a regular

01:25:05,760 --> 01:25:10,880
package

01:25:07,360 --> 01:25:14,320
um oh by the way

01:25:10,880 --> 01:25:17,679
we or or at least i work only

01:25:14,320 --> 01:25:18,400
on libre operating systems and leave the

01:25:17,679 --> 01:25:22,400
devices

01:25:18,400 --> 01:25:26,719
that's why i have chosen the python

01:25:22,400 --> 01:25:26,719
as the first

01:25:26,800 --> 01:25:31,920
mobile device to to to install or to

01:25:30,000 --> 01:25:36,000
develop my new health thing

01:25:31,920 --> 01:25:38,560
um i don't work with android

01:25:36,000 --> 01:25:40,960
i don't work with ios i don't work with

01:25:38,560 --> 01:25:44,000
microsoft windows um

01:25:40,960 --> 01:25:47,520
those are non-libre

01:25:44,000 --> 01:25:50,000
environments and i don't really want to

01:25:47,520 --> 01:25:51,520
spend my time on those if anybody wants

01:25:50,000 --> 01:25:54,320
to port my new health to

01:25:51,520 --> 01:25:55,440
any of those operating systems you are

01:25:54,320 --> 01:25:58,800
most welcome but

01:25:55,440 --> 01:26:02,000
uh you i think that

01:25:58,800 --> 01:26:05,040
it's it's not part of the

01:26:02,000 --> 01:26:08,080
new health philosophy and

01:26:05,040 --> 01:26:10,320
new health is a social project that

01:26:08,080 --> 01:26:12,560
you know that uses technology but mainly

01:26:10,320 --> 01:26:14,960
is a social project and i think that

01:26:12,560 --> 01:26:15,679
anything that is non-liberty goes

01:26:14,960 --> 01:26:19,600
against

01:26:15,679 --> 01:26:20,840
the our philosophy of universal health

01:26:19,600 --> 01:26:23,520
care

01:26:20,840 --> 01:26:26,880
and it's it's it's

01:26:23,520 --> 01:26:29,920
uh putting some sort of uh

01:26:26,880 --> 01:26:32,560
bars in front of people to reach

01:26:29,920 --> 01:26:33,600
that universality and that freedom in

01:26:32,560 --> 01:26:36,719
healthcare that's why

01:26:33,600 --> 01:26:40,639
again i only work with libre

01:26:36,719 --> 01:26:40,639
operating systems and environments

01:26:44,400 --> 01:26:47,440
as i said a couple of slides before we

01:26:46,960 --> 01:26:51,520
have

01:26:47,440 --> 01:26:54,880
um a testbed we have a community

01:26:51,520 --> 01:26:57,280
public server in munich um where

01:26:54,880 --> 01:26:58,320
anybody can just log in and and play

01:26:57,280 --> 01:27:01,679
around with it

01:26:58,320 --> 01:27:03,520
we have a thalamus installed there and

01:27:01,679 --> 01:27:05,520
we also have

01:27:03,520 --> 01:27:07,280
the hospital management information

01:27:05,520 --> 01:27:11,199
system so you can log on

01:27:07,280 --> 01:27:15,280
create a patient uh check the

01:27:11,199 --> 01:27:17,679
you know the lab test imaging and also

01:27:15,280 --> 01:27:20,000
play with this concept of the federation

01:27:17,679 --> 01:27:22,880
so you can install your own

01:27:20,000 --> 01:27:24,639
node and start syncing information back

01:27:22,880 --> 01:27:28,239
and forth and so on so that

01:27:24,639 --> 01:27:33,840
should be running 24x7 and

01:27:28,239 --> 01:27:33,840
it's been there for for quite a bit now

01:27:34,320 --> 01:27:41,360
and next week

01:27:37,520 --> 01:27:44,639
right by this time

01:27:41,360 --> 01:27:44,639
we will start

01:27:45,040 --> 01:27:51,600
the new healthcon 2020

01:27:48,880 --> 01:27:53,600
uh it will be also online as the one

01:27:51,600 --> 01:27:56,480
that we are doing today at the

01:27:53,600 --> 01:27:56,960
linux application summit and you are

01:27:56,480 --> 01:28:00,080
most

01:27:56,960 --> 01:28:02,880
welcome to participate on it and to

01:28:00,080 --> 01:28:03,520
you know get in touch with the community

01:28:02,880 --> 01:28:07,520
uh

01:28:03,520 --> 01:28:10,400
see all the guys from cute

01:28:07,520 --> 01:28:12,239
and from the plasma mobile island from

01:28:10,400 --> 01:28:15,600
the open source

01:28:12,239 --> 01:28:19,120
and so on that will be there uh

01:28:15,600 --> 01:28:22,480
hanging out with us and uh

01:28:19,120 --> 01:28:24,159
giving a lot of of cool information that

01:28:22,480 --> 01:28:28,000
definitely will be

01:28:24,159 --> 01:28:30,960
uh in the next uh upcoming

01:28:28,000 --> 01:28:32,159
new health and my new health releases so

01:28:30,960 --> 01:28:35,920
remember this will be

01:28:32,159 --> 01:28:40,480
next friday november 20

01:28:35,920 --> 01:28:42,400
and november 21st friday and saturday

01:28:40,480 --> 01:28:45,199
and you are most welcome to register

01:28:42,400 --> 01:28:45,199
right there at

01:28:46,600 --> 01:28:49,600
www.genuhealth.org

01:28:49,840 --> 01:28:54,639
and that pretty much makes it for today

01:28:55,840 --> 01:29:00,159
this is just some information i will

01:28:58,080 --> 01:29:01,920
leave it there for you so if you want to

01:29:00,159 --> 01:29:04,960
get in touch with us

01:29:01,920 --> 01:29:07,920
we'll be very happy to uh

01:29:04,960 --> 01:29:09,600
to listen to your to your questions and

01:29:07,920 --> 01:29:10,080
comments which of course are very

01:29:09,600 --> 01:29:12,320
valuable

01:29:10,080 --> 01:29:13,199
because at the end of the day what you

01:29:12,320 --> 01:29:16,239
see today

01:29:13,199 --> 01:29:18,400
it's a 12-year project

01:29:16,239 --> 01:29:19,520
and 12 years of feedback from the

01:29:18,400 --> 01:29:23,199
community

01:29:19,520 --> 01:29:26,400
which have give us the success that has

01:29:23,199 --> 01:29:28,800
no health today so um

01:29:26,400 --> 01:29:31,360
yeah we're going to have like eight

01:29:28,800 --> 01:29:34,960
minutes if there are any

01:29:31,360 --> 01:29:37,520
any questions yeah

01:29:34,960 --> 01:29:38,080
thank you luis we do have some questions

01:29:37,520 --> 01:29:41,520
if you

01:29:38,080 --> 01:29:42,560
would like i can uh i can say them for

01:29:41,520 --> 01:29:45,600
you

01:29:42,560 --> 01:29:46,960
great yes please listen a few minutes so

01:29:45,600 --> 01:29:49,280
let's get started

01:29:46,960 --> 01:29:50,320
the first question is what challenges

01:29:49,280 --> 01:29:54,400
does this app

01:29:50,320 --> 01:29:57,040
pose on terms of privacy

01:29:54,400 --> 01:29:59,040
yeah well um actually one of the reasons

01:29:57,040 --> 01:30:02,800
that we create my new health

01:29:59,040 --> 01:30:06,000
is actually to empower the person

01:30:02,800 --> 01:30:08,080
and make sure that you are in

01:30:06,000 --> 01:30:09,760
charge of your own privacy and that's

01:30:08,080 --> 01:30:13,280
why we don't use

01:30:09,760 --> 01:30:15,520
um any operating system or any device

01:30:13,280 --> 01:30:16,719
that is non-free because you are going

01:30:15,520 --> 01:30:19,120
to have

01:30:16,719 --> 01:30:20,080
the source code you are going to have

01:30:19,120 --> 01:30:22,560
the possibility

01:30:20,080 --> 01:30:23,600
of encrypting your data and you are

01:30:22,560 --> 01:30:26,320
going to pretty much

01:30:23,600 --> 01:30:27,440
be in charge of your own data and if you

01:30:26,320 --> 01:30:30,159
want to

01:30:27,440 --> 01:30:30,880
be part of the new health federation you

01:30:30,159 --> 01:30:34,480
might be

01:30:30,880 --> 01:30:38,239
very well welcome but from

01:30:34,480 --> 01:30:39,679
start to end you are in charge of your

01:30:38,239 --> 01:30:42,960
own privacy that's

01:30:39,679 --> 01:30:45,199
what it makes it different from other uh

01:30:42,960 --> 01:30:46,800
personal health records and that's why

01:30:45,199 --> 01:30:49,840
actually one of the main reasons we

01:30:46,800 --> 01:30:49,840
created my new health

01:30:53,040 --> 01:30:59,679
okay the next question we have

01:30:56,880 --> 01:31:03,360
is what are the open hardware devices

01:30:59,679 --> 01:31:06,719
you are currently looking at

01:31:03,360 --> 01:31:07,360
so we have um we basically have the pine

01:31:06,719 --> 01:31:11,679
phone on

01:31:07,360 --> 01:31:16,239
on mobile devices but then we have

01:31:11,679 --> 01:31:20,400
the um caddas and we have olimex

01:31:16,239 --> 01:31:23,840
as single board

01:31:20,400 --> 01:31:25,520
devices and we we also have images for

01:31:23,840 --> 01:31:30,000
the raspberry pi

01:31:25,520 --> 01:31:33,920
uh three and four so those would be

01:31:30,000 --> 01:31:36,639
the open hardware uh technology

01:31:33,920 --> 01:31:38,800
i would say that from all of those cadas

01:31:36,639 --> 01:31:41,679
and especially olimex olimex is

01:31:38,800 --> 01:31:45,840
is really really from a to c open

01:31:41,679 --> 01:31:45,840
hardware it's it's a great great device

01:31:48,320 --> 01:31:52,560
all right the next question we have is

01:31:50,800 --> 01:31:55,760
regarding privacy

01:31:52,560 --> 01:31:58,880
who has access to data on federation

01:31:55,760 --> 01:32:01,920
and how that

01:31:58,880 --> 01:32:05,199
the access to the data on the federation

01:32:01,920 --> 01:32:06,400
it's ruled by the access control list

01:32:05,199 --> 01:32:08,960
that you have

01:32:06,400 --> 01:32:09,840
on your federation id that i talked

01:32:08,960 --> 01:32:12,639
previously

01:32:09,840 --> 01:32:14,639
so if you are a citizen you will have a

01:32:12,639 --> 01:32:16,000
citizen profile if you are a health

01:32:14,639 --> 01:32:19,280
professional you have

01:32:16,000 --> 01:32:20,880
a health professional profile and if you

01:32:19,280 --> 01:32:22,320
are in the ministry of health you will

01:32:20,880 --> 01:32:24,800
have a ministry of health for

01:32:22,320 --> 01:32:28,000
epidemiology or whatever profile so

01:32:24,800 --> 01:32:31,040
depending on on your profile you will

01:32:28,000 --> 01:32:33,280
have different access

01:32:31,040 --> 01:32:35,920
control requirements to different

01:32:33,280 --> 01:32:35,920
resources

01:32:37,600 --> 01:32:41,199
all right luis this is the last question

01:32:39,760 --> 01:32:44,239
we have

01:32:41,199 --> 01:32:48,320
it is how how

01:32:44,239 --> 01:32:48,320
is duplicate data handled

01:32:48,560 --> 01:32:52,480
you shouldn't have any duplicated data

01:32:50,639 --> 01:32:56,000
because every single message

01:32:52,480 --> 01:33:01,199
has its own uuid it's it's

01:32:56,000 --> 01:33:01,199
it's unique id so

01:33:01,280 --> 01:33:04,960
you can have two different records with

01:33:04,159 --> 01:33:09,600
the same

01:33:04,960 --> 01:33:12,400
value but those would be different ids

01:33:09,600 --> 01:33:13,760
by itself so every node has its own id

01:33:12,400 --> 01:33:17,040
and every message

01:33:13,760 --> 01:33:19,440
within the node has its own unique id so

01:33:17,040 --> 01:33:23,840
it's pretty much impossible to have

01:33:19,440 --> 01:33:23,840
duplicate data

01:33:26,000 --> 01:33:31,040
all right louise well thank you it looks

01:33:28,000 --> 01:33:34,400
like that's all the questions we have

01:33:31,040 --> 01:33:35,679
um i hope everyone enjoyed your talk as

01:33:34,400 --> 01:33:39,280
much as i did

01:33:35,679 --> 01:33:43,520
it's always great to hear from you um

01:33:39,280 --> 01:33:45,679
we are coming up on a 10 minute break

01:33:43,520 --> 01:33:46,560
wonderful thank you alison it's been a

01:33:45,679 --> 01:33:49,600
pleasure for me

01:33:46,560 --> 01:33:50,000
and thank you for having me oh it's our

01:33:49,600 --> 01:33:52,719
pleasure

01:33:50,000 --> 01:33:54,560
as always luis we hope we get to see you

01:33:52,719 --> 01:33:58,480
around the conference a bit more

01:33:54,560 --> 01:34:02,639
for the next couple days uh absolutely

01:33:58,480 --> 01:34:04,320
great um feel free to hang out in chat

01:34:02,639 --> 01:34:06,480
your questions are still in the shared

01:34:04,320 --> 01:34:08,480
notes as for everyone

01:34:06,480 --> 01:34:11,600
else we are taking a 10-minute break and

01:34:08,480 --> 01:34:11,600
we'll be back shortly

01:34:16,840 --> 01:34:19,840
excellent

01:43:08,400 --> 01:43:11,679
good morning good afternoon good evening

01:43:10,400 --> 01:43:14,159
and namaste everyone

01:43:11,679 --> 01:43:14,960
my name is rakshit vaishnavidogra and i

01:43:14,159 --> 01:43:17,360
invite

01:43:14,960 --> 01:43:18,960
e katrina muraru who goes by adriate

01:43:17,360 --> 01:43:20,960
iwalika on twitter

01:43:18,960 --> 01:43:23,520
who will be giving us a splendid talk on

01:43:20,960 --> 01:43:25,920
ui ux trips and tricks for dev

01:43:23,520 --> 01:43:26,719
developers i already followed the tricks

01:43:25,920 --> 01:43:29,119
and trips

01:43:26,719 --> 01:43:30,000
she gave us in first name 20. so ladies

01:43:29,119 --> 01:43:31,840
and gentlemen

01:43:30,000 --> 01:43:34,880
i request a huge round of applause for

01:43:31,840 --> 01:43:34,880
her all the best ma'am

01:43:35,920 --> 01:43:39,360
oh my god thank you so much for this

01:43:37,360 --> 01:43:42,400
introduction i feel like

01:43:39,360 --> 01:43:45,440
yeah the audience is so happy

01:43:42,400 --> 01:43:48,719
yeah hello everyone nice to be here uh

01:43:45,440 --> 01:43:50,960
my name is akati namoraro and i want to

01:43:48,719 --> 01:43:54,239
talk a bit about

01:43:50,960 --> 01:43:57,600
ui tips and tricks uh i

01:43:54,239 --> 01:43:59,199
said that they are for developers but uh

01:43:57,600 --> 01:44:01,600
i mean they are for everyone i mean

01:43:59,199 --> 01:44:04,880
developers are just humans right

01:44:01,600 --> 01:44:07,280
uh but why do i think it's important to

01:44:04,880 --> 01:44:10,000
to know at least the the base things

01:44:07,280 --> 01:44:13,280
regarding the uix is because

01:44:10,000 --> 01:44:16,639
uh we have this um

01:44:13,280 --> 01:44:18,239
i don't know this disapproval inside our

01:44:16,639 --> 01:44:20,560
open source communities that

01:44:18,239 --> 01:44:21,360
the interfaces are not good enough and

01:44:20,560 --> 01:44:24,639
not

01:44:21,360 --> 01:44:27,360
enough designers are available to

01:44:24,639 --> 01:44:28,480
to help with uh with the project we're

01:44:27,360 --> 01:44:31,520
working on so

01:44:28,480 --> 01:44:35,520
i think it would be very helpful for

01:44:31,520 --> 01:44:38,080
any developer to to know some some basic

01:44:35,520 --> 01:44:39,199
when they're doing their uh their

01:44:38,080 --> 01:44:42,239
interfaces

01:44:39,199 --> 01:44:44,719
uh personally i work as an user

01:44:42,239 --> 01:44:48,560
experience designer and i've contributed

01:44:44,719 --> 01:44:51,520
in open source for the past 12 years and

01:44:48,560 --> 01:44:52,800
i would love to have more designers

01:44:51,520 --> 01:44:54,719
involved

01:44:52,800 --> 01:44:56,159
i don't know in making open source is so

01:44:54,719 --> 01:45:00,080
much greater than than

01:44:56,159 --> 01:45:01,840
it already is um if you have questions

01:45:00,080 --> 01:45:02,560
please ask them when you have them i

01:45:01,840 --> 01:45:06,800
mean i

01:45:02,560 --> 01:45:06,800
tend to talk very fast so

01:45:06,960 --> 01:45:10,239
yeah if you have questions just address

01:45:09,119 --> 01:45:14,000
them now

01:45:10,239 --> 01:45:14,000
um okay

01:45:15,280 --> 01:45:21,360
all um okay

01:45:18,320 --> 01:45:24,560
so uh just like in programming

01:45:21,360 --> 01:45:27,280
let me see slide

01:45:24,560 --> 01:45:28,239
uh just like in programming we also have

01:45:27,280 --> 01:45:32,000
some patterns

01:45:28,239 --> 01:45:34,719
in the user experience field uh

01:45:32,000 --> 01:45:35,840
the patterns can be i don't know it

01:45:34,719 --> 01:45:38,480
depends very much

01:45:35,840 --> 01:45:39,440
on the on the platform i mean there are

01:45:38,480 --> 01:45:42,840
some patterns for

01:45:39,440 --> 01:45:45,600
for web and for for for mobile but

01:45:42,840 --> 01:45:46,080
uh the patterns are considered to be

01:45:45,600 --> 01:45:48,400
let's say

01:45:46,080 --> 01:45:49,520
the next level in this presentation i'm

01:45:48,400 --> 01:45:52,560
going to

01:45:49,520 --> 01:45:55,600
to go even lower and even

01:45:52,560 --> 01:45:58,880
basic just like learning css or

01:45:55,600 --> 01:46:00,000
learning the the algorithmic part of in

01:45:58,880 --> 01:46:02,239
programming

01:46:00,000 --> 01:46:04,480
and we're going to cover uh some of the

01:46:02,239 --> 01:46:06,480
principles and principles are just

01:46:04,480 --> 01:46:07,600
fundamental rules about the practice of

01:46:06,480 --> 01:46:10,400
design

01:46:07,600 --> 01:46:11,760
and there are many principles i'm kind

01:46:10,400 --> 01:46:14,239
of

01:46:11,760 --> 01:46:15,679
mixing principle and examples in my

01:46:14,239 --> 01:46:19,119
presentation but

01:46:15,679 --> 01:46:19,840
the the biggest biggest principle that

01:46:19,119 --> 01:46:22,320
everybody

01:46:19,840 --> 01:46:23,840
should should try to apply in the

01:46:22,320 --> 01:46:27,119
interfaces they are creating

01:46:23,840 --> 01:46:28,880
is consistency and

01:46:27,119 --> 01:46:30,320
i don't know as a beginner you should

01:46:28,880 --> 01:46:33,360
make that your

01:46:30,320 --> 01:46:34,719
uh your main rule that everything needs

01:46:33,360 --> 01:46:37,360
to be consistent

01:46:34,719 --> 01:46:38,000
uh if you go to the advanced level let's

01:46:37,360 --> 01:46:41,360
say

01:46:38,000 --> 01:46:42,719
uh there are some corner cases where

01:46:41,360 --> 01:46:44,880
consistency

01:46:42,719 --> 01:46:46,080
can be broken but in the majority of

01:46:44,880 --> 01:46:48,000
cases uh

01:46:46,080 --> 01:46:50,239
if you stick to the consistency rule

01:46:48,000 --> 01:46:52,239
then you're being on the safe side for

01:46:50,239 --> 01:46:53,040
the majority of things that that you're

01:46:52,239 --> 01:46:55,280
doing

01:46:53,040 --> 01:46:57,119
and what exactly it means to to be

01:46:55,280 --> 01:46:59,280
consistent it means that

01:46:57,119 --> 01:47:00,639
uh similar objects should have similar

01:46:59,280 --> 01:47:03,600
meaning and function

01:47:00,639 --> 01:47:04,080
uh if something behaves in a certain way

01:47:03,600 --> 01:47:07,199
a

01:47:04,080 --> 01:47:10,080
user learns that once and then

01:47:07,199 --> 01:47:11,199
he will know that that thing or object

01:47:10,080 --> 01:47:14,320
will behave the same

01:47:11,199 --> 01:47:15,199
next time when consistency is broken we

01:47:14,320 --> 01:47:18,560
have that

01:47:15,199 --> 01:47:22,159
confusion moment and the users

01:47:18,560 --> 01:47:26,960
are not sure what exactly happened

01:47:22,159 --> 01:47:30,560
and uh also it would be very nice i mean

01:47:26,960 --> 01:47:30,560
to to take the same

01:47:31,040 --> 01:47:34,560
principle or things that we see in the

01:47:32,880 --> 01:47:35,840
surrounding world and apply them in our

01:47:34,560 --> 01:47:38,639
interface i mean

01:47:35,840 --> 01:47:39,600
if we see that everywhere on the

01:47:38,639 --> 01:47:41,040
applications

01:47:39,600 --> 01:47:43,040
when you click on the logo it takes you

01:47:41,040 --> 01:47:45,760
to the home page uh

01:47:43,040 --> 01:47:48,719
you should do that also in our

01:47:45,760 --> 01:47:48,719
applications i mean

01:47:48,880 --> 01:47:51,760
having a consistency inside an

01:47:50,560 --> 01:47:53,360
application is great but having

01:47:51,760 --> 01:47:56,000
consistency across

01:47:53,360 --> 01:47:57,040
multiple websites and the software is

01:47:56,000 --> 01:48:00,080
even better

01:47:57,040 --> 01:48:00,480
because uh the user don't need to read

01:48:00,080 --> 01:48:04,080
any

01:48:00,480 --> 01:48:07,199
any of the manual um

01:48:04,080 --> 01:48:09,199
okay uh and consistency

01:48:07,199 --> 01:48:11,040
as a principle can be applied to

01:48:09,199 --> 01:48:12,480
anything starting from buttons and

01:48:11,040 --> 01:48:16,320
continuing to

01:48:12,480 --> 01:48:21,360
uh all kinds of ui elements

01:48:16,320 --> 01:48:24,719
and um even if the buttons need to be

01:48:21,360 --> 01:48:26,800
consistent uh there are several types of

01:48:24,719 --> 01:48:29,360
consistency we can apply i mean

01:48:26,800 --> 01:48:30,239
uh doesn't mean that you need to be

01:48:29,360 --> 01:48:32,719
consistent on

01:48:30,239 --> 01:48:35,280
on one type i mean there can be

01:48:32,719 --> 01:48:37,679
consistency in subtypes and buttons

01:48:35,280 --> 01:48:39,440
can be split and should be split i mean

01:48:37,679 --> 01:48:41,199
if you split them uh it's going to

01:48:39,440 --> 01:48:43,199
increase the visibility

01:48:41,199 --> 01:48:44,639
uh you can split the buttons in the two

01:48:43,199 --> 01:48:47,440
categories like primer

01:48:44,639 --> 01:48:48,560
primary and secondary actions i mean

01:48:47,440 --> 01:48:52,400
when you have

01:48:48,560 --> 01:48:56,560
a page or or screen in your application

01:48:52,400 --> 01:48:57,520
um you should present to the user what

01:48:56,560 --> 01:48:59,920
is the

01:48:57,520 --> 01:49:01,520
main action what is the call to action

01:48:59,920 --> 01:49:03,440
that that you want that user to

01:49:01,520 --> 01:49:04,719
to follow and to do on that particular

01:49:03,440 --> 01:49:08,480
screen

01:49:04,719 --> 01:49:09,920
uh and uh there are several ways to do

01:49:08,480 --> 01:49:10,960
that like i don't know like floating

01:49:09,920 --> 01:49:14,000
buttons like you know

01:49:10,960 --> 01:49:17,599
the places that we see uh on the corner

01:49:14,000 --> 01:49:20,000
of our screen or uh i don't know but

01:49:17,599 --> 01:49:21,119
no matter how you decide to represent

01:49:20,000 --> 01:49:23,760
this uh

01:49:21,119 --> 01:49:25,520
they should be marked with a more

01:49:23,760 --> 01:49:28,080
predominant color in order to

01:49:25,520 --> 01:49:29,840
attract the attention of the user and

01:49:28,080 --> 01:49:32,639
everything else all the other

01:49:29,840 --> 01:49:33,520
uh actions you have present them as a

01:49:32,639 --> 01:49:35,760
secondary

01:49:33,520 --> 01:49:37,840
actions sometimes there can be like

01:49:35,760 --> 01:49:41,040
tertiary like you know like cancel

01:49:37,840 --> 01:49:42,159
or like other things that you know for

01:49:41,040 --> 01:49:46,080
sure the user

01:49:42,159 --> 01:49:49,679
might not need uh but have at least uh

01:49:46,080 --> 01:49:54,159
one primary action and represented in um

01:49:49,679 --> 01:49:56,719
in a in a very clear way

01:49:54,159 --> 01:49:57,360
and when you represent this action make

01:49:56,719 --> 01:50:01,119
sure

01:49:57,360 --> 01:50:05,040
that uh you are using verbs as action

01:50:01,119 --> 01:50:05,440
um we've seen a lot buttons that have

01:50:05,040 --> 01:50:09,679
like

01:50:05,440 --> 01:50:12,719
okay or read more or

01:50:09,679 --> 01:50:13,040
i don't know even next can be ambiguous

01:50:12,719 --> 01:50:16,239
but

01:50:13,040 --> 01:50:19,040
uh it would be so much

01:50:16,239 --> 01:50:20,159
easier for the user to know exactly what

01:50:19,040 --> 01:50:22,800
it will happen

01:50:20,159 --> 01:50:24,560
if you press that button so using verbs

01:50:22,800 --> 01:50:26,800
helps the user do that

01:50:24,560 --> 01:50:28,480
because uh user's thinking verb when

01:50:26,800 --> 01:50:30,239
they are on the screen

01:50:28,480 --> 01:50:31,679
they might want to add something or

01:50:30,239 --> 01:50:36,159
delete or edit

01:50:31,679 --> 01:50:37,360
and not second-guessing what that button

01:50:36,159 --> 01:50:40,000
does

01:50:37,360 --> 01:50:41,119
or not needing to to read the

01:50:40,000 --> 01:50:43,199
description text

01:50:41,119 --> 01:50:45,360
every time she does that will help them

01:50:43,199 --> 01:50:48,480
make that decision faster

01:50:45,360 --> 01:50:51,679
um also when we are

01:50:48,480 --> 01:50:55,280
writing uh hints or or labels

01:50:51,679 --> 01:50:58,960
that help uh describe

01:50:55,280 --> 01:51:01,760
the action uh make sure you are using

01:50:58,960 --> 01:51:03,199
natural language and not very technical

01:51:01,760 --> 01:51:06,239
terms i mean in open source

01:51:03,199 --> 01:51:09,360
it's it's so

01:51:06,239 --> 01:51:11,679
often that you see uh concepts that are

01:51:09,360 --> 01:51:15,280
not explained to the user

01:51:11,679 --> 01:51:18,719
and uh a lot of abbreviation

01:51:15,280 --> 01:51:19,199
and uh things that for the normal users

01:51:18,719 --> 01:51:21,199
they

01:51:19,199 --> 01:51:22,239
not necessarily know what it means and

01:51:21,199 --> 01:51:24,960
that's why

01:51:22,239 --> 01:51:27,440
the interfaces can be perceived as as

01:51:24,960 --> 01:51:27,440
scary

01:51:27,840 --> 01:51:31,119
regarding consistency it would be ideal

01:51:30,480 --> 01:51:34,400
if

01:51:31,119 --> 01:51:37,520
you would also preserve the the tone of

01:51:34,400 --> 01:51:40,239
the way you are are phrasing

01:51:37,520 --> 01:51:41,679
the things like like being friendly and

01:51:40,239 --> 01:51:44,400
keeping the same tone

01:51:41,679 --> 01:51:45,679
uh everywhere and and i know this is

01:51:44,400 --> 01:51:48,239
very hard because

01:51:45,679 --> 01:51:49,760
uh as developers we are we are

01:51:48,239 --> 01:51:52,800
preferring so much to be

01:51:49,760 --> 01:51:56,639
efficient and we know that just with one

01:51:52,800 --> 01:51:56,960
uh acronym we are saying so much more

01:51:56,639 --> 01:51:59,599
but

01:51:56,960 --> 01:52:00,560
uh it is very important to know what is

01:51:59,599 --> 01:52:02,960
your

01:52:00,560 --> 01:52:04,800
target audience and and try to be

01:52:02,960 --> 01:52:06,560
empathic and put yourself in the other

01:52:04,800 --> 01:52:08,320
shoes and think

01:52:06,560 --> 01:52:10,480
of the users that don't know anything

01:52:08,320 --> 01:52:13,520
about your interface

01:52:10,480 --> 01:52:16,560
okay so i hope i won't see

01:52:13,520 --> 01:52:20,000
buttons anymore with

01:52:16,560 --> 01:52:22,639
with okay or or

01:52:20,000 --> 01:52:22,639
stuff like that

01:52:23,119 --> 01:52:29,840
um bucket placement

01:52:26,159 --> 01:52:32,080
can also possess some issues and

01:52:29,840 --> 01:52:34,480
questions especially for people that

01:52:32,080 --> 01:52:35,679
that are not very comfortable designing

01:52:34,480 --> 01:52:39,119
interfaces

01:52:35,679 --> 01:52:42,560
um sometimes we look for inspiration in

01:52:39,119 --> 01:52:42,560
some screens and we see that

01:52:42,719 --> 01:52:47,360
i don't know in some screens we see them

01:52:45,040 --> 01:52:50,880
on the right side or on the left side

01:52:47,360 --> 01:52:55,040
if you are designing for um

01:52:50,880 --> 01:52:55,920
for devices the manufacturers of these

01:52:55,040 --> 01:52:59,679
devices

01:52:55,920 --> 01:53:02,159
um i mean the operating system people

01:52:59,679 --> 01:53:04,159
are usually providing also guidelines

01:53:02,159 --> 01:53:05,520
and style guides on where exactly the

01:53:04,159 --> 01:53:06,639
the button is to be placed and

01:53:05,520 --> 01:53:09,599
unfortunately

01:53:06,639 --> 01:53:11,199
uh some platforms prefer it one way and

01:53:09,599 --> 01:53:14,080
others prefer it

01:53:11,199 --> 01:53:15,520
the other way uh but again as long as

01:53:14,080 --> 01:53:16,239
it's consistent everywhere on that

01:53:15,520 --> 01:53:18,880
platform

01:53:16,239 --> 01:53:20,639
it's great but when you are trying to

01:53:18,880 --> 01:53:21,119
make the decision for yourself maybe you

01:53:20,639 --> 01:53:24,159
are

01:53:21,119 --> 01:53:26,159
designing for web and on the web uh we

01:53:24,159 --> 01:53:30,320
don't have very clear rules or

01:53:26,159 --> 01:53:30,320
where to place them um

01:53:30,560 --> 01:53:34,239
what could help you make that decision

01:53:32,560 --> 01:53:38,719
is uh understanding

01:53:34,239 --> 01:53:41,199
uh the the reading reading

01:53:38,719 --> 01:53:41,840
flow that the user does so for example

01:53:41,199 --> 01:53:44,960
um

01:53:41,840 --> 01:53:48,000
in the left line the user could just

01:53:44,960 --> 01:53:51,440
read the read the title and

01:53:48,000 --> 01:53:53,520
maybe go directly to the to the bottom

01:53:51,440 --> 01:53:54,560
that is the action so the flow can be

01:53:53,520 --> 01:53:56,639
very linear

01:53:54,560 --> 01:53:58,719
but for example i don't know when we

01:53:56,639 --> 01:54:01,679
have confirmation dialogues

01:53:58,719 --> 01:54:03,679
uh it's very good that we have them and

01:54:01,679 --> 01:54:05,520
we should be very explicit of what are

01:54:03,679 --> 01:54:06,560
the consequences of that dialogue but

01:54:05,520 --> 01:54:09,040
this means that

01:54:06,560 --> 01:54:09,679
the user should read what's what's

01:54:09,040 --> 01:54:11,520
stating

01:54:09,679 --> 01:54:13,840
i'm i don't know are we i'm also

01:54:11,520 --> 01:54:15,920
deleting this

01:54:13,840 --> 01:54:17,679
record from the database am i am i

01:54:15,920 --> 01:54:18,880
affecting something else can i go back

01:54:17,679 --> 01:54:21,119
etc

01:54:18,880 --> 01:54:22,880
so the pattern the user does it will be

01:54:21,119 --> 01:54:26,159
it will read the text it will

01:54:22,880 --> 01:54:29,360
read the the description and then

01:54:26,159 --> 01:54:31,679
it will go to the uh secondary button

01:54:29,360 --> 01:54:33,520
and he could continue because that's

01:54:31,679 --> 01:54:34,800
what we want them to do he continue on

01:54:33,520 --> 01:54:38,159
the primary button

01:54:34,800 --> 01:54:38,639
on the left aligned side he will need to

01:54:38,159 --> 01:54:42,800
make

01:54:38,639 --> 01:54:46,239
this going back in order to

01:54:42,800 --> 01:54:49,840
to keep the the

01:54:46,239 --> 01:54:54,239
to make the action so uh

01:54:49,840 --> 01:54:56,560
yeah think about uh if

01:54:54,239 --> 01:54:57,520
if you prefer to have the the vertical

01:54:56,560 --> 01:54:59,360
scanning

01:54:57,520 --> 01:55:01,199
or if you need this but no matter what

01:54:59,360 --> 01:55:02,960
decision you you make

01:55:01,199 --> 01:55:05,520
uh you should make this decision only

01:55:02,960 --> 01:55:07,440
once and then apply it to all the forms

01:55:05,520 --> 01:55:08,639
and all the bottles across your

01:55:07,440 --> 01:55:11,679
interface

01:55:08,639 --> 01:55:14,320
um a lot regarding mobile devices

01:55:11,679 --> 01:55:14,320
um

01:55:15,599 --> 01:55:21,679
this let's say this screen

01:55:19,520 --> 01:55:24,480
when it's either left or right it's not

01:55:21,679 --> 01:55:27,520
very important when the display is very

01:55:24,480 --> 01:55:29,520
very little because uh the distance from

01:55:27,520 --> 01:55:33,520
left to right is like i don't know

01:55:29,520 --> 01:55:36,800
uh 300 600 pixel depth resolution

01:55:33,520 --> 01:55:39,520
um and sometimes

01:55:36,800 --> 01:55:40,800
i you can also see on the mobile devices

01:55:39,520 --> 01:55:44,080
buttons that are

01:55:40,800 --> 01:55:44,719
centered or that are full width or

01:55:44,080 --> 01:55:47,040
inputs

01:55:44,719 --> 01:55:47,760
i don't know like vertical one after the

01:55:47,040 --> 01:55:50,000
other

01:55:47,760 --> 01:55:51,440
so all mobile doesn't matter that much

01:55:50,000 --> 01:55:54,639
but on the web

01:55:51,440 --> 01:55:56,480
if we have very large uh displays

01:55:54,639 --> 01:55:57,920
uh in for example like here we don't

01:55:56,480 --> 01:55:59,679
have columns i mean when you have larger

01:55:57,920 --> 01:56:01,520
display you can

01:55:59,679 --> 01:56:03,599
group and split the content into

01:56:01,520 --> 01:56:06,080
multiple areas each with their own

01:56:03,599 --> 01:56:06,800
um layout but let's say if you would

01:56:06,080 --> 01:56:10,080
have

01:56:06,800 --> 01:56:11,760
something like this even let's say if

01:56:10,080 --> 01:56:13,520
you would have preferred

01:56:11,760 --> 01:56:15,360
the left alignment because of that

01:56:13,520 --> 01:56:17,520
faster millisecond

01:56:15,360 --> 01:56:19,040
uh in that in this case it will not be

01:56:17,520 --> 01:56:22,400
that efficient because

01:56:19,040 --> 01:56:25,440
you kind of lose the context between the

01:56:22,400 --> 01:56:28,239
the text and the and the buttons

01:56:25,440 --> 01:56:29,679
so yeah you kind of need to know uh

01:56:28,239 --> 01:56:32,560
exactly

01:56:29,679 --> 01:56:33,679
what resolution you're designing uh what

01:56:32,560 --> 01:56:37,199
are the cases

01:56:33,679 --> 01:56:39,520
and sometimes it's okay to

01:56:37,199 --> 01:56:40,480
make some screens or or reiterate

01:56:39,520 --> 01:56:43,520
because you know

01:56:40,480 --> 01:56:45,920
you it's not wonderful i mean we can

01:56:43,520 --> 01:56:48,000
see the screens after and and and go

01:56:45,920 --> 01:56:50,080
back in the interface and fix them

01:56:48,000 --> 01:56:51,280
and decide later even though it's not

01:56:50,080 --> 01:56:54,480
very efficient

01:56:51,280 --> 01:56:56,080
from from implementation view but i

01:56:54,480 --> 01:56:57,599
i think it's better if you fix them

01:56:56,080 --> 01:57:01,119
later and you produce ability

01:56:57,599 --> 01:57:04,560
than and then the work needed to do that

01:57:01,119 --> 01:57:07,760
um regarding placement

01:57:04,560 --> 01:57:09,199
uh sometimes buttons feel more natural

01:57:07,760 --> 01:57:13,440
if they are placed on the right

01:57:09,199 --> 01:57:17,040
side let's say in the case of wizards

01:57:13,440 --> 01:57:17,679
but this depends um very much on the

01:57:17,040 --> 01:57:19,760
culture

01:57:17,679 --> 01:57:20,800
you are designing for and again you need

01:57:19,760 --> 01:57:23,440
to know your your

01:57:20,800 --> 01:57:24,239
target audience i mean in in western

01:57:23,440 --> 01:57:26,320
culture

01:57:24,239 --> 01:57:27,760
we are reading the book from right right

01:57:26,320 --> 01:57:31,199
and left and we are reading from

01:57:27,760 --> 01:57:34,320
our uh um from left right

01:57:31,199 --> 01:57:35,040
so we it's natural for us to i don't

01:57:34,320 --> 01:57:37,440
know to

01:57:35,040 --> 01:57:38,960
to make the same movement like uh the

01:57:37,440 --> 01:57:42,080
pages on a book

01:57:38,960 --> 01:57:45,520
um but

01:57:42,080 --> 01:57:48,639
uh not every culture reads this way

01:57:45,520 --> 01:57:53,360
and i don't even want to go in the uh

01:57:48,639 --> 01:57:56,880
i don't know japanese or um

01:57:53,360 --> 01:57:59,520
or or other asian uh

01:57:56,880 --> 01:58:00,480
uh reading directions because they can

01:57:59,520 --> 01:58:03,760
also be uh

01:58:00,480 --> 01:58:07,360
vertical um but

01:58:03,760 --> 01:58:09,760
the point was here that uh for wizards

01:58:07,360 --> 01:58:11,040
it feels natural to have next on the

01:58:09,760 --> 01:58:12,800
right alignment

01:58:11,040 --> 01:58:14,239
but no matter where you place them

01:58:12,800 --> 01:58:17,360
another tip

01:58:14,239 --> 01:58:19,679
that you need to know is that the

01:58:17,360 --> 01:58:20,080
primary button needs to be placed near

01:58:19,679 --> 01:58:23,199
the

01:58:20,080 --> 01:58:25,520
the edges i mean uh

01:58:23,199 --> 01:58:26,719
you should not place the primary action

01:58:25,520 --> 01:58:30,000
in the middle

01:58:26,719 --> 01:58:31,360
uh think about the direction you want

01:58:30,000 --> 01:58:34,400
the user to go

01:58:31,360 --> 01:58:36,560
and place the most important action

01:58:34,400 --> 01:58:38,560
near the edge because it will be much

01:58:36,560 --> 01:58:41,520
easier to be found

01:58:38,560 --> 01:58:41,520
by your user

01:58:43,040 --> 01:58:48,960
colorized meaning it's

01:58:46,239 --> 01:58:49,679
very important and it's very interesting

01:58:48,960 --> 01:58:52,000
to look at

01:58:49,679 --> 01:58:53,360
i mean i'm making a generalization here

01:58:52,000 --> 01:58:55,840
and it's not true but

01:58:53,360 --> 01:58:57,040
i wanted to say that uh open source

01:58:55,840 --> 01:58:59,360
projects have a lot of

01:58:57,040 --> 01:59:00,560
blue and it is great because blue means

01:58:59,360 --> 01:59:03,199
uh

01:59:00,560 --> 01:59:03,920
i don't know trust and we want with our

01:59:03,199 --> 01:59:05,119
application

01:59:03,920 --> 01:59:07,040
especially because they're kind of

01:59:05,119 --> 01:59:10,159
technical and kind of advanced to

01:59:07,040 --> 01:59:13,280
to to inspire the user

01:59:10,159 --> 01:59:16,159
we trust uh

01:59:13,280 --> 01:59:17,760
but keep in mind that colors again

01:59:16,159 --> 01:59:18,880
depending on the culture have some

01:59:17,760 --> 01:59:20,480
meaning and

01:59:18,880 --> 01:59:22,320
depending on the culture it's again an

01:59:20,480 --> 01:59:25,040
important note because

01:59:22,320 --> 01:59:26,320
uh danger in western means uh and it's

01:59:25,040 --> 01:59:29,599
used for

01:59:26,320 --> 01:59:31,199
errors and uh

01:59:29,599 --> 01:59:32,960
i don't know destructive actions and

01:59:31,199 --> 01:59:36,560
things that could go bad

01:59:32,960 --> 01:59:39,679
while uh in asia red means

01:59:36,560 --> 01:59:40,960
auspicious and a lot and all the good

01:59:39,679 --> 01:59:44,960
things so

01:59:40,960 --> 01:59:48,480
um yeah um

01:59:44,960 --> 01:59:48,480
think about that and uh

01:59:48,960 --> 01:59:54,320
i mean it would be great to and

01:59:52,639 --> 01:59:56,960
depending again on your audience if you

01:59:54,320 --> 01:59:59,040
want uh younger audiences who you might

01:59:56,960 --> 02:00:01,119
want to to use

01:59:59,040 --> 02:00:02,560
black oh sure we we love black and white

02:00:01,119 --> 02:00:05,760
on search right

02:00:02,560 --> 02:00:07,119
uh it looks more more geekish uh

02:00:05,760 --> 02:00:08,960
but i don't know maybe you would want to

02:00:07,119 --> 02:00:12,320
use purple or oranges

02:00:08,960 --> 02:00:15,360
um think about uh

02:00:12,320 --> 02:00:17,440
how other people are are using

02:00:15,360 --> 02:00:19,520
and and i know we we want to to be

02:00:17,440 --> 02:00:21,760
different and we want to be unique but

02:00:19,520 --> 02:00:24,159
sometimes people come with expectations

02:00:21,760 --> 02:00:27,360
uh of what they've seen in other places

02:00:24,159 --> 02:00:30,480
and i don't know maybe they expect some

02:00:27,360 --> 02:00:31,520
green uh sites and colors to be used by

02:00:30,480 --> 02:00:35,760
uh

02:00:31,520 --> 02:00:37,840
pharma or uh in in the branding part it

02:00:35,760 --> 02:00:39,760
can be a lot of discussion so

02:00:37,840 --> 02:00:41,280
sticking to the blue it's actually a

02:00:39,760 --> 02:00:42,960
good point because

02:00:41,280 --> 02:00:44,880
i don't know if you can go wrong with

02:00:42,960 --> 02:00:48,400
that um

02:00:44,880 --> 02:00:48,719
but what i've talked until now is mostly

02:00:48,400 --> 02:00:50,480
of

02:00:48,719 --> 02:00:52,239
having like an accent color in a brand

02:00:50,480 --> 02:00:56,960
new color that you can apply

02:00:52,239 --> 02:00:59,679
to the majority of your uh style guide

02:00:56,960 --> 02:01:00,639
but in theory you could have multiple

02:00:59,679 --> 02:01:02,239
colors

02:01:00,639 --> 02:01:04,239
for buttons i mean you can have like a

02:01:02,239 --> 02:01:07,840
success in warning and info and

02:01:04,239 --> 02:01:11,520
if you were to use

02:01:07,840 --> 02:01:14,159
i don't know a ui uh

02:01:11,520 --> 02:01:16,400
framework like bootstrap or or a library

02:01:14,159 --> 02:01:19,119
that

02:01:16,400 --> 02:01:21,199
provides the the code already done they

02:01:19,119 --> 02:01:23,679
usually provide

02:01:21,199 --> 02:01:24,400
this kind of specialty buttons this

02:01:23,679 --> 02:01:26,320
doesn't mean

02:01:24,400 --> 02:01:27,840
if they are there that we should use

02:01:26,320 --> 02:01:29,599
them and generally

02:01:27,840 --> 02:01:31,520
we should try to limit the the color

02:01:29,599 --> 02:01:34,239
selection we are making

02:01:31,520 --> 02:01:36,239
um and another note about the color that

02:01:34,239 --> 02:01:37,679
i want to make

02:01:36,239 --> 02:01:39,280
i mean in this case it's very nice

02:01:37,679 --> 02:01:40,960
because it's a success and learning but

02:01:39,280 --> 02:01:44,239
imagine that you would have

02:01:40,960 --> 02:01:47,360
like um a word that

02:01:44,239 --> 02:01:48,080
it's ambiguous uh you don't know exactly

02:01:47,360 --> 02:01:51,679
if it's a

02:01:48,080 --> 02:01:55,119
success or or if it's danger and

02:01:51,679 --> 02:01:57,840
you you as a designer rely on the color

02:01:55,119 --> 02:01:58,639
and that person that is viewing this

02:01:57,840 --> 02:02:01,040
screen

02:01:58,639 --> 02:02:03,440
might be colorblind or not necessarily

02:02:01,040 --> 02:02:03,440
um

02:02:03,679 --> 02:02:08,320
identify the color and or or understand

02:02:06,960 --> 02:02:09,440
exactly the meaning that you're trying

02:02:08,320 --> 02:02:13,119
to convey

02:02:09,440 --> 02:02:16,159
uh don't don't rely only on um

02:02:13,119 --> 02:02:19,360
on color uh that's why uh

02:02:16,159 --> 02:02:21,119
a good practice is to uh i don't know

02:02:19,360 --> 02:02:24,480
put like a nikon or or

02:02:21,119 --> 02:02:27,679
try to make another

02:02:24,480 --> 02:02:30,800
shaving or some background thing

02:02:27,679 --> 02:02:33,920
that can uh add

02:02:30,800 --> 02:02:34,560
to the diversification of the icon a bit

02:02:33,920 --> 02:02:36,960
more for

02:02:34,560 --> 02:02:38,800
the people that that don't necessarily

02:02:36,960 --> 02:02:40,159
differentiate colors and this is more

02:02:38,800 --> 02:02:42,310
related to accessibility but

02:02:40,159 --> 02:02:44,560
it's good to have it as a mention

02:02:42,310 --> 02:02:46,400
[Applause]

02:02:44,560 --> 02:02:48,080
and why should we have destructive

02:02:46,400 --> 02:02:51,040
colors and actions

02:02:48,080 --> 02:02:52,159
um again this might break a bit the

02:02:51,040 --> 02:02:54,480
consistency

02:02:52,159 --> 02:02:55,520
uh the thing that we were talking in the

02:02:54,480 --> 02:02:59,199
first thing

02:02:55,520 --> 02:03:01,360
but this can be a good a good thing

02:02:59,199 --> 02:03:02,800
if we are using it with caution i mean

02:03:01,360 --> 02:03:03,840
if we are consistent throughout the

02:03:02,800 --> 02:03:06,800
interface

02:03:03,840 --> 02:03:07,599
and uh users know that that button needs

02:03:06,800 --> 02:03:10,880
to be blue

02:03:07,599 --> 02:03:12,560
and they see that button to be uh to be

02:03:10,880 --> 02:03:14,159
read they might say okay this is

02:03:12,560 --> 02:03:17,440
something special

02:03:14,159 --> 02:03:18,159
maybe i need to pay careful attention to

02:03:17,440 --> 02:03:21,360
it

02:03:18,159 --> 02:03:22,159
and again don't rely just on putting

02:03:21,360 --> 02:03:25,440
that color

02:03:22,159 --> 02:03:27,520
and making sure that users

02:03:25,440 --> 02:03:28,880
will know the consequence of their

02:03:27,520 --> 02:03:31,280
action always

02:03:28,880 --> 02:03:32,400
try to to have a confirmation for

02:03:31,280 --> 02:03:35,040
destructive action

02:03:32,400 --> 02:03:36,320
explain very well what they are doing in

02:03:35,040 --> 02:03:39,440
case the user

02:03:36,320 --> 02:03:41,760
is not able to to

02:03:39,440 --> 02:03:42,480
recover things that they are deleting

02:03:41,760 --> 02:03:46,000
you know

02:03:42,480 --> 02:03:49,280
there are several patterns here like

02:03:46,000 --> 02:03:51,280
even very not hardcore i can say but

02:03:49,280 --> 02:03:52,719
you know when you were requesting the

02:03:51,280 --> 02:03:54,639
user to type

02:03:52,719 --> 02:03:56,960
the the name of the folder they want to

02:03:54,639 --> 02:03:59,920
delete or to really type delete i mean

02:03:56,960 --> 02:04:00,400
these are not necessarily good practices

02:03:59,920 --> 02:04:04,400
but

02:04:00,400 --> 02:04:06,480
there are some um some ways to ensure

02:04:04,400 --> 02:04:08,320
uh that the user is know what they're

02:04:06,480 --> 02:04:09,840
doing i would not encourage these kinds

02:04:08,320 --> 02:04:14,320
of things because they kind of

02:04:09,840 --> 02:04:17,199
increase the time to

02:04:14,320 --> 02:04:18,079
to to make that action yes sure the user

02:04:17,199 --> 02:04:21,119
will be

02:04:18,079 --> 02:04:22,880
uh very aware that he's doing something

02:04:21,119 --> 02:04:25,840
bad but he'll also be very

02:04:22,880 --> 02:04:27,040
scared about ever touching that that

02:04:25,840 --> 02:04:30,960
piece of

02:04:27,040 --> 02:04:33,840
of uh functionality there ideally

02:04:30,960 --> 02:04:34,880
we should provide support for ando and

02:04:33,840 --> 02:04:37,760
uh

02:04:34,880 --> 02:04:39,440
it's it's so funny when uh as a designer

02:04:37,760 --> 02:04:40,719
you go to the developers and ask them

02:04:39,440 --> 02:04:44,719
for undo and

02:04:40,719 --> 02:04:46,159
i mean the you

02:04:44,719 --> 02:04:47,760
the requirements to have this kind of

02:04:46,159 --> 02:04:50,000
functionality are are

02:04:47,760 --> 02:04:50,960
so much difficult from an implementation

02:04:50,000 --> 02:04:53,679
point of view

02:04:50,960 --> 02:04:54,320
but are so much nicer on on the user

02:04:53,679 --> 02:04:57,199
side and

02:04:54,320 --> 02:04:59,199
you always need to make this balance of

02:04:57,199 --> 02:05:03,520
deciding

02:04:59,199 --> 02:05:06,719
what size you want to to make happier

02:05:03,520 --> 02:05:09,360
um okay and uh

02:05:06,719 --> 02:05:10,719
yeah i mean you use them as blue because

02:05:09,360 --> 02:05:14,719
they should be consistent but it's

02:05:10,719 --> 02:05:14,719
better if you if you put them as red

02:05:16,480 --> 02:05:23,440
for this it's a principle that

02:05:19,679 --> 02:05:26,320
is widely used and while

02:05:23,440 --> 02:05:26,639
widely found and it's so much nicer when

02:05:26,320 --> 02:05:30,639
it's

02:05:26,639 --> 02:05:33,119
well implemented um and the metaphor for

02:05:30,639 --> 02:05:36,639
understanding affordance

02:05:33,119 --> 02:05:37,199
uh the the doors so if you want to open

02:05:36,639 --> 02:05:40,400
a door

02:05:37,199 --> 02:05:42,560
and it has like a circular handle uh

02:05:40,400 --> 02:05:45,040
you might know that in order to open

02:05:42,560 --> 02:05:47,599
that door you need to twist the handle

02:05:45,040 --> 02:05:49,199
uh the same is when you see the door and

02:05:47,599 --> 02:05:51,199
it has like um

02:05:49,199 --> 02:05:52,400
like this handle like like vertically

02:05:51,199 --> 02:05:54,880
and you can grab it

02:05:52,400 --> 02:05:56,719
you might understand that you need to to

02:05:54,880 --> 02:06:00,159
pull it or if it's like flat

02:05:56,719 --> 02:06:03,360
you you know that you need to push it um

02:06:00,159 --> 02:06:06,159
the problem is when uh the

02:06:03,360 --> 02:06:08,480
further the door is giving you uh

02:06:06,159 --> 02:06:09,040
doesn't match with the behavior the door

02:06:08,480 --> 02:06:11,599
has

02:06:09,040 --> 02:06:12,159
and that way when you bang your head to

02:06:11,599 --> 02:06:16,000
the door

02:06:12,159 --> 02:06:20,320
and stuff like that um so for this means

02:06:16,000 --> 02:06:22,880
giving cues on how the user should

02:06:20,320 --> 02:06:23,440
interact with the interface before they

02:06:22,880 --> 02:06:26,719
even

02:06:23,440 --> 02:06:29,679
pressed it and it can be

02:06:26,719 --> 02:06:31,040
very good if the interface behaves as

02:06:29,679 --> 02:06:34,159
the user expects

02:06:31,040 --> 02:06:37,119
and it can be not very bad but it can be

02:06:34,159 --> 02:06:38,719
confusing and uh annoying and disturbing

02:06:37,119 --> 02:06:41,040
to the user if the interface

02:06:38,719 --> 02:06:41,840
uh does not behave behave like the user

02:06:41,040 --> 02:06:43,760
expects

02:06:41,840 --> 02:06:45,840
and i forgot i provided here some

02:06:43,760 --> 02:06:47,840
examples so for example

02:06:45,840 --> 02:06:49,040
let's say that you have some headers and

02:06:47,840 --> 02:06:51,599
you put them in blue

02:06:49,040 --> 02:06:53,920
but those are not actually links i mean

02:06:51,599 --> 02:06:55,360
if you were to go on a blog platform the

02:06:53,920 --> 02:06:56,719
majority of them are links and you

02:06:55,360 --> 02:06:58,800
expect to go there

02:06:56,719 --> 02:06:59,920
and i don't know read the whole article

02:06:58,800 --> 02:07:02,079
or something

02:06:59,920 --> 02:07:03,599
but if you make them blue and it doesn't

02:07:02,079 --> 02:07:05,199
do anything you'll be like

02:07:03,599 --> 02:07:06,880
okay it doesn't do anything you learned

02:07:05,199 --> 02:07:10,320
and then you make again the mistake

02:07:06,880 --> 02:07:12,639
so so it it it will every time we will

02:07:10,320 --> 02:07:15,520
have this um

02:07:12,639 --> 02:07:17,360
i don't know battle inside you of what

02:07:15,520 --> 02:07:20,800
does it want from me

02:07:17,360 --> 02:07:25,360
uh uh another thing

02:07:20,800 --> 02:07:28,159
the same is also for for um

02:07:25,360 --> 02:07:29,599
i mean to differentiate links for from

02:07:28,159 --> 02:07:33,040
the content

02:07:29,599 --> 02:07:33,599
um the user might not know that this is

02:07:33,040 --> 02:07:36,079
a link

02:07:33,599 --> 02:07:37,679
it might say i mean in this case it's

02:07:36,079 --> 02:07:39,599
very nice because it says details and

02:07:37,679 --> 02:07:42,159
the others you cannot read but if you

02:07:39,599 --> 02:07:43,040
if it were to be a whole text and having

02:07:42,159 --> 02:07:45,360
only details

02:07:43,040 --> 02:07:47,280
at the end uh you might not know that

02:07:45,360 --> 02:07:51,280
that that's a link so

02:07:47,280 --> 02:07:52,000
um for the past i don't know how many

02:07:51,280 --> 02:07:54,480
years

02:07:52,000 --> 02:07:55,840
uh these blue things and blue links and

02:07:54,480 --> 02:07:59,520
underlinings

02:07:55,840 --> 02:08:02,320
it has been so much blurred because

02:07:59,520 --> 02:08:03,440
we have like now style guides of every

02:08:02,320 --> 02:08:08,239
other color

02:08:03,440 --> 02:08:10,480
but some users still expect

02:08:08,239 --> 02:08:11,679
and if we were consistent throughout the

02:08:10,480 --> 02:08:14,560
interface if you

02:08:11,679 --> 02:08:16,400
will see uh some text that is blue and

02:08:14,560 --> 02:08:19,119
underlined i'm

02:08:16,400 --> 02:08:20,719
i'm assuming that that people that that

02:08:19,119 --> 02:08:23,440
person will know that that's a link

02:08:20,719 --> 02:08:24,800
and and we'll expect it to building so

02:08:23,440 --> 02:08:26,960
uh

02:08:24,800 --> 02:08:28,239
differentiate the links from the content

02:08:26,960 --> 02:08:30,000
and if you can make them blue and

02:08:28,239 --> 02:08:33,119
underline that will be a plus

02:08:30,000 --> 02:08:35,599
for the usability of your of your

02:08:33,119 --> 02:08:39,040
application

02:08:35,599 --> 02:08:41,840
and one of the question is um okay uh

02:08:39,040 --> 02:08:42,800
when to use buttons and when to use

02:08:41,840 --> 02:08:46,079
links

02:08:42,800 --> 02:08:48,159
and um let's say

02:08:46,079 --> 02:08:50,239
maybe it's more obvious to not have

02:08:48,159 --> 02:08:53,360
buttons inside of the text

02:08:50,239 --> 02:08:56,000
and none as it would i mean

02:08:53,360 --> 02:08:57,599
it it will also look strange but you

02:08:56,000 --> 02:09:01,119
will also have some

02:08:57,599 --> 02:09:01,119
line height alignment and

02:09:02,560 --> 02:09:09,599
things will not look good or align good

02:09:06,159 --> 02:09:13,119
but the the thing you

02:09:09,599 --> 02:09:15,119
need to know here is that uh buttons and

02:09:13,119 --> 02:09:18,239
links have been created for a very

02:09:15,119 --> 02:09:20,480
uh specific purpose and that meaning

02:09:18,239 --> 02:09:22,480
that buttons should be used for actions

02:09:20,480 --> 02:09:24,400
and things that affect the interface i

02:09:22,480 --> 02:09:25,280
mean i don't know that ad entry to the

02:09:24,400 --> 02:09:28,079
database

02:09:25,280 --> 02:09:28,480
that changes the state of an object

02:09:28,079 --> 02:09:32,639
while

02:09:28,480 --> 02:09:33,040
links are create were created mostly for

02:09:32,639 --> 02:09:36,800
for

02:09:33,040 --> 02:09:40,320
navigating through neck screens or to go

02:09:36,800 --> 02:09:43,599
other places so use this thing um

02:09:40,320 --> 02:09:46,880
to as a rule when when trying to decide

02:09:43,599 --> 02:09:49,840
uh what to use when i mean sometimes

02:09:46,880 --> 02:09:51,520
we prefer the look of the links we think

02:09:49,840 --> 02:09:55,280
maybe it's a bit um

02:09:51,520 --> 02:09:58,400
more more more light but

02:09:55,280 --> 02:10:00,159
if you have

02:09:58,400 --> 02:10:02,320
everything as a link and they have

02:10:00,159 --> 02:10:05,679
different behaviors this can also be

02:10:02,320 --> 02:10:07,760
a bit confusing um

02:10:05,679 --> 02:10:09,520
another note that i want to make about

02:10:07,760 --> 02:10:13,360
buttons and affordance

02:10:09,520 --> 02:10:17,119
is that traditionally buttons

02:10:13,360 --> 02:10:20,560
have been displayed as 3d objects

02:10:17,119 --> 02:10:23,360
so the flat

02:10:20,560 --> 02:10:27,119
trend kind of removed all the gradients

02:10:23,360 --> 02:10:30,079
and all the shadows etc but

02:10:27,119 --> 02:10:31,520
if you have some shadow on a thing uh

02:10:30,079 --> 02:10:33,920
the user might know that

02:10:31,520 --> 02:10:34,880
it's it's a 3d it can be clicked because

02:10:33,920 --> 02:10:38,560
um

02:10:34,880 --> 02:10:41,280
uh buttons have very specific space

02:10:38,560 --> 02:10:44,079
states of being pressed or or or being

02:10:41,280 --> 02:10:46,880
active or being disabled so

02:10:44,079 --> 02:10:49,760
this kind of things could um could help

02:10:46,880 --> 02:10:49,760
the user know

02:10:50,159 --> 02:10:58,800
what to do exactly in the interface

02:10:53,920 --> 02:10:58,800
okay um wait

02:10:59,520 --> 02:11:04,560
i want also want to present you some

02:11:04,719 --> 02:11:08,480
proximity some other principle and one

02:11:07,760 --> 02:11:10,960
of the

02:11:08,480 --> 02:11:12,560
principle is proximity which states that

02:11:10,960 --> 02:11:13,599
objects that are closer together are

02:11:12,560 --> 02:11:15,920
perceived to be

02:11:13,599 --> 02:11:17,760
related and this is very important let's

02:11:15,920 --> 02:11:21,360
say when you're creating an interface

02:11:17,760 --> 02:11:24,320
and you want to do some grouping uh

02:11:21,360 --> 02:11:25,440
i don't know you want to group all the

02:11:24,320 --> 02:11:27,199
menus together

02:11:25,440 --> 02:11:29,440
and you put them a bit separate so so

02:11:27,199 --> 02:11:34,000
the user know those are related and

02:11:29,440 --> 02:11:34,000
the content is put someplace else

02:11:34,400 --> 02:11:39,440
or in the case that you you have a menu

02:11:37,280 --> 02:11:42,800
and uh

02:11:39,440 --> 02:11:45,520
let's say that that menu has like five

02:11:42,800 --> 02:11:47,920
independent things if you if some of

02:11:45,520 --> 02:11:50,400
these things are related i don't know

02:11:47,920 --> 02:11:53,040
uh like in this example from gmail a

02:11:50,400 --> 02:11:53,040
while back

02:11:53,119 --> 02:11:57,679
if you have this if that mail is

02:11:56,560 --> 02:12:00,079
important or not

02:11:57,679 --> 02:12:00,800
you could put them more closely together

02:12:00,079 --> 02:12:05,520
to

02:12:00,800 --> 02:12:08,639
to state that that functionality is like

02:12:05,520 --> 02:12:10,480
is like com comes in pairs and it's so

02:12:08,639 --> 02:12:12,000
much easier to scan interface where the

02:12:10,480 --> 02:12:13,840
things are grouped because you can

02:12:12,000 --> 02:12:16,000
just jump from one group to another

02:12:13,840 --> 02:12:19,760
instead of of trying to go

02:12:16,000 --> 02:12:23,280
over each of them so spacing can be

02:12:19,760 --> 02:12:25,840
used to to provide this kind of grouping

02:12:23,280 --> 02:12:27,440
and another thing to consider is the

02:12:25,840 --> 02:12:30,000
similarity principle

02:12:27,440 --> 02:12:30,800
which states that um object sharing

02:12:30,000 --> 02:12:35,199
attributes

02:12:30,800 --> 02:12:37,679
are are related so uh

02:12:35,199 --> 02:12:39,360
if for example you would try to read

02:12:37,679 --> 02:12:42,480
this um

02:12:39,360 --> 02:12:43,360
by lines let's imagine this word text or

02:12:42,480 --> 02:12:46,719
something

02:12:43,360 --> 02:12:48,880
it would be so so much harder than uh

02:12:46,719 --> 02:12:50,239
reading them by colors because our

02:12:48,880 --> 02:12:53,360
brains automatically

02:12:50,239 --> 02:12:54,239
groups them by colors by by uh by

02:12:53,360 --> 02:12:57,599
columns

02:12:54,239 --> 02:13:00,320
uh and this grouping can be done using a

02:12:57,599 --> 02:13:02,079
color or size or shape or orientation or

02:13:00,320 --> 02:13:05,119
there are multiple ways in

02:13:02,079 --> 02:13:08,159
in which we we can we can do this

02:13:05,119 --> 02:13:10,560
um grouping in others in order to

02:13:08,159 --> 02:13:12,239
to help us navigate and browse you know

02:13:10,560 --> 02:13:13,440
when we have activity streams and we

02:13:12,239 --> 02:13:15,280
have the avatars

02:13:13,440 --> 02:13:17,360
some avatars are displayed in with

02:13:15,280 --> 02:13:17,920
circulars and we put them in the front

02:13:17,360 --> 02:13:20,480
so

02:13:17,920 --> 02:13:22,239
the user just jumps from one avatar to

02:13:20,480 --> 02:13:25,280
another without needing to

02:13:22,239 --> 02:13:27,599
to read because he he's expecting uh

02:13:25,280 --> 02:13:29,119
all the items there to be of the same

02:13:27,599 --> 02:13:33,280
kind

02:13:29,119 --> 02:13:36,560
um the law of unity is another principle

02:13:33,280 --> 02:13:38,800
that is kind of uh overriding cues from

02:13:36,560 --> 02:13:39,520
proximity and similarities so it's much

02:13:38,800 --> 02:13:42,560
stronger

02:13:39,520 --> 02:13:45,760
in the effect you can have and what

02:13:42,560 --> 02:13:49,920
does the what it does is that

02:13:45,760 --> 02:13:51,520
um if you provide lines

02:13:49,920 --> 02:13:53,119
like in this case so if you provide

02:13:51,520 --> 02:13:57,840
boxes or i don't know

02:13:53,119 --> 02:14:01,199
um background colors or or whatever

02:13:57,840 --> 02:14:02,079
this additional container it's grouping

02:14:01,199 --> 02:14:05,280
the things

02:14:02,079 --> 02:14:05,280
inside of it

02:14:06,159 --> 02:14:12,960
so this can be

02:14:09,599 --> 02:14:14,800
very powerful i mean again even if you

02:14:12,960 --> 02:14:18,880
would have like

02:14:14,800 --> 02:14:20,079
so many uh entries here just by putting

02:14:18,880 --> 02:14:24,239
a background

02:14:20,079 --> 02:14:27,440
and a background color

02:14:24,239 --> 02:14:30,480
it will group your form uh

02:14:27,440 --> 02:14:32,079
and the user will know where to look and

02:14:30,480 --> 02:14:35,119
that those things are grouped

02:14:32,079 --> 02:14:37,199
are grouped uh and not regarding this is

02:14:35,119 --> 02:14:40,079
that we need to be very careful

02:14:37,199 --> 02:14:42,639
uh in order to not overcrowd the

02:14:40,079 --> 02:14:42,639
interface

02:14:42,880 --> 02:14:46,320
the more lines you put the more

02:14:44,639 --> 02:14:47,520
background colors you put the more

02:14:46,320 --> 02:14:50,639
containers you

02:14:47,520 --> 02:14:54,159
you add uh might

02:14:50,639 --> 02:14:56,800
feel a bit heavy uh

02:14:54,159 --> 02:14:58,159
that's why uh in order to have that

02:14:56,800 --> 02:15:01,199
eerie

02:14:58,159 --> 02:15:04,639
and simple and clean uh look

02:15:01,199 --> 02:15:07,840
uh designers are trying to add as much

02:15:04,639 --> 02:15:08,800
white space as they can and and try to

02:15:07,840 --> 02:15:13,119
limit the

02:15:08,800 --> 02:15:17,679
at all uh these heavy things but

02:15:13,119 --> 02:15:20,400
uh if if used properly

02:15:17,679 --> 02:15:20,960
uh properly it can be a very powerful

02:15:20,400 --> 02:15:24,800
technique

02:15:20,960 --> 02:15:28,159
in order to emphasize things

02:15:24,800 --> 02:15:32,079
um trace paralysis

02:15:28,159 --> 02:15:35,119
states that if users are going to have

02:15:32,079 --> 02:15:38,239
lots of options they will not know

02:15:35,119 --> 02:15:39,840
exactly which one to pick and uh

02:15:38,239 --> 02:15:42,239
and they will be paralyzed i mean is

02:15:39,840 --> 02:15:44,239
that good for me it's not not good for

02:15:42,239 --> 02:15:46,079
what should i pick and hicks loss is

02:15:44,239 --> 02:15:47,679
that the time to make that decision

02:15:46,079 --> 02:15:49,679
increases with the number and capacity

02:15:47,679 --> 02:15:53,599
of choices so

02:15:49,679 --> 02:15:55,760
what is recommended here is to to

02:15:53,599 --> 02:15:56,800
limit the options we are giving to our

02:15:55,760 --> 02:16:00,560
users

02:15:56,800 --> 02:16:04,560
and i've seen a lot of

02:16:00,560 --> 02:16:05,040
download pages for our open source

02:16:04,560 --> 02:16:08,880
project

02:16:05,040 --> 02:16:11,920
that i mean we are very proud that we

02:16:08,880 --> 02:16:14,400
we are supporting so many uh

02:16:11,920 --> 02:16:15,280
devices and so many platforms and we

02:16:14,400 --> 02:16:18,639
want to

02:16:15,280 --> 02:16:19,760
to let the user know about that but that

02:16:18,639 --> 02:16:23,040
can be

02:16:19,760 --> 02:16:25,599
very overwhelming i mean we can

02:16:23,040 --> 02:16:27,520
i don't know try to detect the the

02:16:25,599 --> 02:16:31,040
operating system the user is on

02:16:27,520 --> 02:16:34,080
and uh and propose exactly what they

02:16:31,040 --> 02:16:36,160
need and uh

02:16:34,080 --> 02:16:38,160
i don't know if sometimes even for the

02:16:36,160 --> 02:16:42,639
same operating system you have like

02:16:38,160 --> 02:16:45,200
uh like a different packaging method

02:16:42,639 --> 02:16:46,559
so state very clearly what are the

02:16:45,200 --> 02:16:49,519
differences between

02:16:46,559 --> 02:16:51,679
between the types and always recommend

02:16:49,519 --> 02:16:53,280
the one that you are

02:16:51,679 --> 02:16:55,280
proposing because sometimes we have a

02:16:53,280 --> 02:16:59,280
preference what we want our users

02:16:55,280 --> 02:17:00,800
to to try and the sometimes is the

02:16:59,280 --> 02:17:03,040
i don't know i don't know it depends on

02:17:00,800 --> 02:17:06,960
the project so it's hard to make a

02:17:03,040 --> 02:17:10,160
generalization um

02:17:06,960 --> 02:17:11,120
a similar principle is the seven plus

02:17:10,160 --> 02:17:15,439
two rule

02:17:11,120 --> 02:17:16,319
which um was an experiment done by

02:17:15,439 --> 02:17:20,000
miller

02:17:16,319 --> 02:17:22,639
uh like a hundred years ago and um

02:17:20,000 --> 02:17:23,599
this uh psychologist who investigated

02:17:22,639 --> 02:17:28,240
how

02:17:23,599 --> 02:17:31,040
many words uh can somebody

02:17:28,240 --> 02:17:31,840
put in their short-term memory uh and

02:17:31,040 --> 02:17:34,399
not forget

02:17:31,840 --> 02:17:36,160
and the results then were like seven

02:17:34,399 --> 02:17:39,200
plus minus two items

02:17:36,160 --> 02:17:42,080
and this argument was um

02:17:39,200 --> 02:17:42,559
used for a very long time uh in order to

02:17:42,080 --> 02:17:45,200
limit

02:17:42,559 --> 02:17:45,679
the things in menus i mean if you had

02:17:45,200 --> 02:17:48,800
like

02:17:45,679 --> 02:17:50,479
more than seven plus two things it was

02:17:48,800 --> 02:17:54,240
outrageous and you needed to

02:17:50,479 --> 02:17:54,800
to limit now new research has been made

02:17:54,240 --> 02:17:57,679
and the

02:17:54,800 --> 02:17:58,080
the estimate dropped to 4 plus minus 1

02:17:57,679 --> 02:18:01,599
but

02:17:58,080 --> 02:18:04,639
there's not not really a number that

02:18:01,599 --> 02:18:05,280
can be given because it depends so much

02:18:04,639 --> 02:18:08,240
on

02:18:05,280 --> 02:18:10,080
on so many other factors the conclusion

02:18:08,240 --> 02:18:12,479
here is that

02:18:10,080 --> 02:18:13,120
in our interfaces we should recommend

02:18:12,479 --> 02:18:15,760
and provide

02:18:13,120 --> 02:18:17,840
as fewer options or try to to group them

02:18:15,760 --> 02:18:20,120
or present them in in other screens

02:18:17,840 --> 02:18:24,399
in order for the interface to look

02:18:20,120 --> 02:18:28,479
digestible um

02:18:24,399 --> 02:18:31,040
yeah i've seen some so so many

02:18:28,479 --> 02:18:33,200
sites and sometimes we in open source we

02:18:31,040 --> 02:18:35,200
take pride in being very

02:18:33,200 --> 02:18:37,679
uh thorough and having all the

02:18:35,200 --> 02:18:41,200
information needed but uh

02:18:37,679 --> 02:18:45,920
sometimes that can can look so so hard

02:18:41,200 --> 02:18:48,880
and and so hard to digest um

02:18:45,920 --> 02:18:50,880
okay third position effect states that

02:18:48,880 --> 02:18:52,719
um

02:18:50,880 --> 02:18:54,240
we remember ben the first and the last

02:18:52,719 --> 02:18:56,399
item in the series

02:18:54,240 --> 02:18:57,679
uh the example here is with the alphabet

02:18:56,399 --> 02:19:00,000
we know it starts with a

02:18:57,679 --> 02:19:01,200
and ends with z but uh maybe in the

02:19:00,000 --> 02:19:06,160
middle some things

02:19:01,200 --> 02:19:08,319
get confusing for some people and um

02:19:06,160 --> 02:19:09,840
this can be also combined with the with

02:19:08,319 --> 02:19:13,200
the chunking principle

02:19:09,840 --> 02:19:14,960
that say that if you have a lot of

02:19:13,200 --> 02:19:17,120
information it would be good to

02:19:14,960 --> 02:19:19,200
break it in smaller chunks and in this

02:19:17,120 --> 02:19:21,200
case instead of having a navigation

02:19:19,200 --> 02:19:23,519
that has like nine items just break them

02:19:21,200 --> 02:19:25,280
in in in

02:19:23,519 --> 02:19:27,519
smaller things and for each of this

02:19:25,280 --> 02:19:31,280
group you will have a first and the last

02:19:27,519 --> 02:19:33,359
and the uh the first and last will be

02:19:31,280 --> 02:19:34,719
will be so much visible that then what's

02:19:33,359 --> 02:19:38,000
inside

02:19:34,719 --> 02:19:40,800
um because sometimes we say uh

02:19:38,000 --> 02:19:42,559
okay maybe the most important thing put

02:19:40,800 --> 02:19:44,319
them on the first position and second

02:19:42,559 --> 02:19:47,920
position and that is great

02:19:44,319 --> 02:19:48,479
for for things that are in a single line

02:19:47,920 --> 02:19:50,640
uh

02:19:48,479 --> 02:19:52,479
but we can use this too if if i don't

02:19:50,640 --> 02:19:56,080
know we have multiple things

02:19:52,479 --> 02:19:58,399
than two that we want to to highlight

02:19:56,080 --> 02:19:58,399
um

02:19:59,120 --> 02:20:02,800
four fields have a lot of things that

02:20:02,399 --> 02:20:06,319
can

02:20:02,800 --> 02:20:09,359
can be given uh as tips

02:20:06,319 --> 02:20:10,960
of what to do chunking can also be

02:20:09,359 --> 02:20:13,359
applied to phone numbers

02:20:10,960 --> 02:20:13,359
because

02:20:15,040 --> 02:20:21,760
it's so much it's easier to remember

02:20:18,720 --> 02:20:24,800
things in chunks of two trees and

02:20:21,760 --> 02:20:27,120
you can also size fields accordingly

02:20:24,800 --> 02:20:29,120
uh if that field is just three

02:20:27,120 --> 02:20:30,160
characters or or you know the size of

02:20:29,120 --> 02:20:33,280
the zip code

02:20:30,160 --> 02:20:36,160
just provides the exact

02:20:33,280 --> 02:20:37,680
dimension that you want the the user to

02:20:36,160 --> 02:20:40,800
to enter that information

02:20:37,680 --> 02:20:43,120
inside um

02:20:40,800 --> 02:20:44,479
highlighting and explaining the error in

02:20:43,120 --> 02:20:46,720
the context that it

02:20:44,479 --> 02:20:47,680
occurs it's so much better than having a

02:20:46,720 --> 02:20:50,240
generic

02:20:47,680 --> 02:20:51,040
uh place where you can look for their

02:20:50,240 --> 02:20:54,080
messages

02:20:51,040 --> 02:20:56,399
or how we've done it for our project

02:20:54,080 --> 02:20:57,600
the user needed to look in the in the

02:20:56,399 --> 02:20:59,920
console to

02:20:57,600 --> 02:21:00,800
find out the error that happened on the

02:20:59,920 --> 02:21:02,960
server no

02:21:00,800 --> 02:21:05,200
it would be so much a great effort for

02:21:02,960 --> 02:21:09,120
them to to have the error inside

02:21:05,200 --> 02:21:13,680
the interface um

02:21:09,120 --> 02:21:18,560
numbers should be right aligned

02:21:13,680 --> 02:21:18,560
because it's so much easier to to

02:21:18,880 --> 02:21:22,319
compare them by decimals and by hundreds

02:21:21,760 --> 02:21:26,479
than

02:21:22,319 --> 02:21:28,720
just having a random alignment for them

02:21:26,479 --> 02:21:28,720
and

02:21:30,000 --> 02:21:33,120
this happens also i don't know you can

02:21:32,399 --> 02:21:35,200
mark

02:21:33,120 --> 02:21:36,399
things that are secondary information

02:21:35,200 --> 02:21:37,920
with another color

02:21:36,399 --> 02:21:39,680
and keep the alignment good so that

02:21:37,920 --> 02:21:40,560
people can compare the things that they

02:21:39,680 --> 02:21:43,280
are interested

02:21:40,560 --> 02:21:43,680
in i'm trying to go a bit faster because

02:21:43,280 --> 02:21:45,600
i don't

02:21:43,680 --> 02:21:47,040
think i don't know how much time we we

02:21:45,600 --> 02:21:49,840
still have

02:21:47,040 --> 02:21:50,399
um and we are we are closing and i would

02:21:49,840 --> 02:21:51,920
want to

02:21:50,399 --> 02:21:53,600
see some questions i feel we have to

02:21:51,920 --> 02:21:57,040
question uh

02:21:53,600 --> 02:21:59,359
but as a closing note um

02:21:57,040 --> 02:22:00,160
i want to say again i want to say some

02:21:59,359 --> 02:22:02,960
things about

02:22:00,160 --> 02:22:02,960
the icons

02:22:03,439 --> 02:22:06,880
we are past the interface that are only

02:22:05,840 --> 02:22:10,240
text based and

02:22:06,880 --> 02:22:14,000
icons are very strong because uh

02:22:10,240 --> 02:22:16,640
users learn them once and then they can

02:22:14,000 --> 02:22:18,720
apply that knowledge uh with

02:22:16,640 --> 02:22:22,080
subsequential usages and just

02:22:18,720 --> 02:22:23,280
navigate to that uh sometimes it's very

02:22:22,080 --> 02:22:25,359
hard to find the right

02:22:23,280 --> 02:22:27,520
icon or even if you think you find the

02:22:25,359 --> 02:22:29,520
right the right icon that i continue

02:22:27,520 --> 02:22:31,600
so many things in this case this can be

02:22:29,520 --> 02:22:34,800
a search this can be a zoom

02:22:31,600 --> 02:22:37,439
or it can be just a ping pong pedal so

02:22:34,800 --> 02:22:38,560
again know your target and always test

02:22:37,439 --> 02:22:42,399
the interface that

02:22:38,560 --> 02:22:45,439
that you're doing but um

02:22:42,399 --> 02:22:48,240
having icons uh is

02:22:45,439 --> 02:22:48,960
something that will make your your

02:22:48,240 --> 02:22:52,640
interface

02:22:48,960 --> 02:22:53,280
uh much uh much easier to organize and

02:22:52,640 --> 02:22:55,680
digest

02:22:53,280 --> 02:22:58,399
after not necessarily for beginner user

02:22:55,680 --> 02:23:03,040
but for for advanced user we

02:22:58,399 --> 02:23:05,920
they will know where to jump um

02:23:03,040 --> 02:23:06,319
these are just a few of the principles

02:23:05,920 --> 02:23:08,160
and

02:23:06,319 --> 02:23:09,920
uh i don't know if you're passionate or

02:23:08,160 --> 02:23:12,000
not about uh

02:23:09,920 --> 02:23:13,680
these kind of things but the ux field

02:23:12,000 --> 02:23:16,960
has like i don't know like from

02:23:13,680 --> 02:23:19,280
psychological tips and tricks to uh

02:23:16,960 --> 02:23:20,080
things that come from visual arts and

02:23:19,280 --> 02:23:23,280
it's it's

02:23:20,080 --> 02:23:26,399
such a diverse field and that with

02:23:23,280 --> 02:23:30,319
very little information you can

02:23:26,399 --> 02:23:33,840
bring so much benefit for the end user

02:23:30,319 --> 02:23:33,840
so yeah uh

02:23:34,080 --> 02:23:36,560
can uh

02:23:38,160 --> 02:23:43,920
i will want to ask you some questions

02:23:41,439 --> 02:23:45,200
okay thank you ma'am uh we definitely

02:23:43,920 --> 02:23:47,520
have some questions but mom

02:23:45,200 --> 02:23:49,120
unfortunately we are out of time so

02:23:47,520 --> 02:23:50,800
i can address these questions in the

02:23:49,120 --> 02:23:54,560
chat box and thank you mom

02:23:50,800 --> 02:23:56,720
yes yes and you can you can

02:23:54,560 --> 02:23:57,600
you can send the questions i'll have my

02:23:56,720 --> 02:23:59,600
twitter handle

02:23:57,600 --> 02:24:01,200
and thank you so much for inviting me

02:23:59,600 --> 02:24:04,000
and have a great day

02:24:01,200 --> 02:24:05,760
thank you thank you mom i'm sure that

02:24:04,000 --> 02:24:08,160
this talk would have helped everyone in

02:24:05,760 --> 02:24:10,319
improving the ui and ux of their

02:24:08,160 --> 02:24:12,399
projects ladies and gentlemen that was

02:24:10,319 --> 02:24:14,000
the katrina

02:24:12,399 --> 02:24:16,240
we'll be having a small five-minute

02:24:14,000 --> 02:24:17,840
break gap and on the other side we'll be

02:24:16,240 --> 02:24:18,720
joined by the great mr greg crowe

02:24:17,840 --> 02:24:21,280
hartman

02:24:18,720 --> 02:24:22,000
with this talk on the topic what kernel

02:24:21,280 --> 02:24:23,840
developers

02:24:22,000 --> 02:24:26,319
which application developers would do

02:24:23,840 --> 02:24:27,120
better so stay tuned and see you on the

02:24:26,319 --> 02:24:29,120
other side

02:24:27,120 --> 02:24:30,399
this is your moderator you can find me

02:24:29,120 --> 02:24:33,280
on twitter by

02:24:30,399 --> 02:24:34,240
the hashtag by the user id at dog

02:24:33,280 --> 02:24:36,640
production

02:24:34,240 --> 02:24:43,840
signing off stay home and stay safe

02:24:36,640 --> 02:24:43,840
thank you

02:28:08,000 --> 02:28:11,439
good morning good afternoon good evening

02:28:10,080 --> 02:28:13,840
and namaste everyone

02:28:11,439 --> 02:28:16,640
my name is rakshit vaishnavi dogra and

02:28:13,840 --> 02:28:19,359
now i invite mr greg crowe hartman who

02:28:16,640 --> 02:28:21,520
goes by address greg kh on twitter

02:28:19,359 --> 02:28:23,439
i'm definitely sure that is that there

02:28:21,520 --> 02:28:25,840
is no need for an introduction

02:28:23,439 --> 02:28:27,359
so ladies and gentlemen put your hands

02:28:25,840 --> 02:28:31,040
together for mr greg

02:28:27,359 --> 02:28:31,040
hartman all the best sir

02:28:31,680 --> 02:28:37,760
okay is that working now

02:28:34,720 --> 02:28:40,479
i hope so um

02:28:37,760 --> 02:28:42,000
fun thing is great i have construction

02:28:40,479 --> 02:28:43,439
happening right below me so we might

02:28:42,000 --> 02:28:44,080
hear some drilling in the background but

02:28:43,439 --> 02:28:45,439
hey

02:28:44,080 --> 02:28:47,840
this is the joy of working from home in

02:28:45,439 --> 02:28:51,359
this situation um

02:28:47,840 --> 02:28:53,439
okay my talk um obvious title

02:28:51,359 --> 02:28:54,399
it's actually really short it's only one

02:28:53,439 --> 02:28:57,680
slide

02:28:54,399 --> 02:28:58,240
i can do this there that's the whole

02:28:57,680 --> 02:29:00,319
talk

02:28:58,240 --> 02:29:02,720
um okay let's go into a little more

02:29:00,319 --> 02:29:03,920
detail though i'll try and explain why

02:29:02,720 --> 02:29:06,560
you don't want to make users mad and

02:29:03,920 --> 02:29:07,840
what happens when you do um

02:29:06,560 --> 02:29:09,359
a little bit about me since it didn't

02:29:07,840 --> 02:29:10,319
introduce me um i've been a kernel

02:29:09,359 --> 02:29:12,319
developer for

02:29:10,319 --> 02:29:14,080
way too long i used to be a embedded

02:29:12,319 --> 02:29:14,880
developer before that i maintain stable

02:29:14,080 --> 02:29:17,280
kernels

02:29:14,880 --> 02:29:18,560
i have done a lot of user space work um

02:29:17,280 --> 02:29:21,520
but at the low level

02:29:18,560 --> 02:29:22,720
i also maintain some user space packages

02:29:21,520 --> 02:29:24,560
um

02:29:22,720 --> 02:29:26,319
i will make fun of gnome later but let

02:29:24,560 --> 02:29:27,840
me tell you i have been advisory board

02:29:26,319 --> 02:29:29,359
for them for many years and i'm still a

02:29:27,840 --> 02:29:30,479
foundation member

02:29:29,359 --> 02:29:32,960
and i've worked on lots and lots of

02:29:30,479 --> 02:29:35,600
different districts um

02:29:32,960 --> 02:29:36,000
so all this stuff comes down to a pretty

02:29:35,600 --> 02:29:38,960
simple

02:29:36,000 --> 02:29:40,240
thing um who are you writing code for um

02:29:38,960 --> 02:29:43,439
are you writing code for

02:29:40,240 --> 02:29:44,000
what type of i mean why are you doing

02:29:43,439 --> 02:29:45,520
this

02:29:44,000 --> 02:29:48,840
why it depends on why you're doing this

02:29:45,520 --> 02:29:51,439
is depends on what you should do

02:29:48,840 --> 02:29:52,560
so um

02:29:51,439 --> 02:29:54,399
very simple if you're writing for

02:29:52,560 --> 02:29:55,760
yourself and it's not a problem you

02:29:54,399 --> 02:29:57,439
throw it over the wall you have fun you

02:29:55,760 --> 02:29:58,479
put it out there publish it um you want

02:29:57,439 --> 02:30:01,600
other people to see this stuff

02:29:58,479 --> 02:30:02,960
get a resume wonderful no problem at all

02:30:01,600 --> 02:30:06,080
don't care about anything

02:30:02,960 --> 02:30:07,439
don't worry about it but the problem is

02:30:06,080 --> 02:30:09,760
if you write something that's useful it

02:30:07,439 --> 02:30:12,000
will come back and bite you ssla

02:30:09,760 --> 02:30:13,520
an open ssl was infamously created

02:30:12,000 --> 02:30:16,160
because the developer wanted to learn

02:30:13,520 --> 02:30:16,720
c and all the problems that happened

02:30:16,160 --> 02:30:19,280
with that

02:30:16,720 --> 02:30:20,479
one of the forks of um udeth was because

02:30:19,280 --> 02:30:22,560
somebody wanted to

02:30:20,479 --> 02:30:23,920
learn c again and put it out there and

02:30:22,560 --> 02:30:25,680
people start relying on and they have to

02:30:23,920 --> 02:30:29,280
maintain it and use it

02:30:25,680 --> 02:30:30,720
so um if you do this just watch out

02:30:29,280 --> 02:30:32,319
because it can happen um if you're

02:30:30,720 --> 02:30:34,080
writing it code for others which i think

02:30:32,319 --> 02:30:35,439
everybody here is because we all want to

02:30:34,080 --> 02:30:36,479
write open source software we want

02:30:35,439 --> 02:30:38,080
people to use it

02:30:36,479 --> 02:30:39,439
then we have to care about the users and

02:30:38,080 --> 02:30:40,640
we have to care about what they think

02:30:39,439 --> 02:30:42,800
what they do

02:30:40,640 --> 02:30:44,319
and how we react to them and we have to

02:30:42,800 --> 02:30:45,439
think about them when we create the

02:30:44,319 --> 02:30:48,240
software

02:30:45,439 --> 02:30:48,640
within reason there's the infamous xkd

02:30:48,240 --> 02:30:51,680
um

02:30:48,640 --> 02:30:53,520
document of somebody's odd feature a bug

02:30:51,680 --> 02:30:55,200
was a feature

02:30:53,520 --> 02:30:57,120
everything i say here is within reason

02:30:55,200 --> 02:30:58,240
because there are always some users you

02:30:57,120 --> 02:31:00,399
can never please

02:30:58,240 --> 02:31:02,319
no matter what and those people you can

02:31:00,399 --> 02:31:05,359
safely ignore

02:31:02,319 --> 02:31:08,240
so let's start though um what you

02:31:05,359 --> 02:31:09,359
do and how you act on creating code

02:31:08,240 --> 02:31:11,439
depends on who you are

02:31:09,359 --> 02:31:12,800
and i'll break everything down into

02:31:11,439 --> 02:31:15,439
about three different groups here

02:31:12,800 --> 02:31:16,800
um kernel developers um this audience is

02:31:15,439 --> 02:31:18,720
not current developers but since i am

02:31:16,800 --> 02:31:20,880
one i'll talk about what we've learned

02:31:18,720 --> 02:31:22,080
and how we've made mistakes and what

02:31:20,880 --> 02:31:23,520
we've learned from that and how

02:31:22,080 --> 02:31:25,280
to apply it again to library developers

02:31:23,520 --> 02:31:26,720
and application developers which is the

02:31:25,280 --> 02:31:29,760
primary audience here

02:31:26,720 --> 02:31:32,080
um so first off kernel developers

02:31:29,760 --> 02:31:32,880
easy easy thing um we only have really

02:31:32,080 --> 02:31:34,560
one role

02:31:32,880 --> 02:31:36,800
and lynas gets mad at this whenever you

02:31:34,560 --> 02:31:37,439
see ransom the press or whatnot this is

02:31:36,800 --> 02:31:39,680
when

02:31:37,439 --> 02:31:42,000
we do not we break this rule and the

02:31:39,680 --> 02:31:45,439
rule is we cannot break user space

02:31:42,000 --> 02:31:47,280
and cannot break user space on purpose

02:31:45,439 --> 02:31:49,120
um break it accidentally we'll fix it

02:31:47,280 --> 02:31:50,000
whatever uh we break user space if

02:31:49,120 --> 02:31:51,600
nobody notices

02:31:50,000 --> 02:31:53,040
that's fine because we're we take

02:31:51,600 --> 02:31:54,800
advantage of things that when you don't

02:31:53,040 --> 02:31:55,280
notice different functionalities or

02:31:54,800 --> 02:31:57,359
stuff

02:31:55,280 --> 02:31:58,479
but you just can't break user space and

02:31:57,359 --> 02:31:59,920
we make this rule

02:31:58,479 --> 02:32:02,479
and other operating systems have this

02:31:59,920 --> 02:32:05,280
rule as well it's a very solid rule

02:32:02,479 --> 02:32:06,560
because we always want you to upgrade

02:32:05,280 --> 02:32:07,359
and we want you to upgrade without

02:32:06,560 --> 02:32:09,680
worrying about

02:32:07,359 --> 02:32:11,359
we don't want you to feel scared if we

02:32:09,680 --> 02:32:12,960
get a new you see in the release

02:32:11,359 --> 02:32:14,240
and we say hey this fixes a bunch of

02:32:12,960 --> 02:32:14,880
problems we don't want you to feel

02:32:14,240 --> 02:32:17,040
worried about

02:32:14,880 --> 02:32:18,720
taking that and that's really really

02:32:17,040 --> 02:32:20,880
important especially with security you

02:32:18,720 --> 02:32:22,240
want people to take all these fixes

02:32:20,880 --> 02:32:23,840
you want people to be able to upgrade

02:32:22,240 --> 02:32:24,800
you want them to also take advantage of

02:32:23,840 --> 02:32:27,359
the new features

02:32:24,800 --> 02:32:29,439
and if you have them even hesitate about

02:32:27,359 --> 02:32:31,439
updating to your latest version

02:32:29,439 --> 02:32:33,040
because you've broken functionality for

02:32:31,439 --> 02:32:36,479
them they won't

02:32:33,040 --> 02:32:37,680
and that's not okay again users

02:32:36,479 --> 02:32:39,040
we've learned this the hard way they

02:32:37,680 --> 02:32:39,920
will not update if they're afraid you're

02:32:39,040 --> 02:32:42,479
going to break it

02:32:39,920 --> 02:32:43,600
and in the long time kernel past we used

02:32:42,479 --> 02:32:45,439
to break things and

02:32:43,600 --> 02:32:46,720
we now realize that is not what we

02:32:45,439 --> 02:32:48,319
should ever do

02:32:46,720 --> 02:32:50,000
i'm going to have a few number rules in

02:32:48,319 --> 02:32:52,240
this talk um they're

02:32:50,000 --> 02:32:53,600
not necessarily my rules but i'll i'll

02:32:52,240 --> 02:32:57,200
claim them for

02:32:53,600 --> 02:32:59,280
the choice of the talk um so how do you

02:32:57,200 --> 02:33:00,960
the problem with never breaking user

02:32:59,280 --> 02:33:02,319
space is what you do when you need

02:33:00,960 --> 02:33:04,640
things to change

02:33:02,319 --> 02:33:06,720
um the trick is you just support

02:33:04,640 --> 02:33:08,720
everything until there are no users

02:33:06,720 --> 02:33:10,240
um figuring out when there are and are

02:33:08,720 --> 02:33:12,080
not users is up to you

02:33:10,240 --> 02:33:13,760
in the kernel sometimes we know that oh

02:33:12,080 --> 02:33:15,280
there are no hardware

02:33:13,760 --> 02:33:16,800
of this type out there we used to have

02:33:15,280 --> 02:33:18,720
an architecture where we knew there was

02:33:16,800 --> 02:33:20,880
only two machines in existence

02:33:18,720 --> 02:33:22,560
one of them broke and the other one we

02:33:20,880 --> 02:33:22,960
actually paid the developer to replace

02:33:22,560 --> 02:33:24,240
it

02:33:22,960 --> 02:33:26,399
because we didn't want to support that

02:33:24,240 --> 02:33:28,000
thing anymore um other bits of part

02:33:26,399 --> 02:33:28,560
where we ripped out of the kernel when

02:33:28,000 --> 02:33:30,479
we knew

02:33:28,560 --> 02:33:32,560
things weren't even being used anymore

02:33:30,479 --> 02:33:34,720
we just ripped some code out

02:33:32,560 --> 02:33:36,319
from intel that a device that they know

02:33:34,720 --> 02:33:36,800
is not in the field that nobody actually

02:33:36,319 --> 02:33:38,720
uses

02:33:36,800 --> 02:33:40,240
that's fine but otherwise we have to

02:33:38,720 --> 02:33:42,560
keep supporting users

02:33:40,240 --> 02:33:43,760
um because we made that contract we made

02:33:42,560 --> 02:33:46,160
that contract that we gave them a

02:33:43,760 --> 02:33:48,399
functionality we cannot remove it

02:33:46,160 --> 02:33:50,399
but what we can do is we can evolve

02:33:48,399 --> 02:33:51,280
things over time so that nobody actually

02:33:50,399 --> 02:33:52,880
notices

02:33:51,280 --> 02:33:55,200
we can move to different ways things

02:33:52,880 --> 02:33:58,080
happen we can do different things how

02:33:55,200 --> 02:33:59,359
stuff that um works and we can provide

02:33:58,080 --> 02:34:01,120
new ways of doing things

02:33:59,359 --> 02:34:03,120
and we provide new ways of doing things

02:34:01,120 --> 02:34:04,880
hopefully people will migrate over time

02:34:03,120 --> 02:34:06,319
in reality they don't they stick to the

02:34:04,880 --> 02:34:08,000
old stuff which is fine

02:34:06,319 --> 02:34:09,600
but we can provide new ways and this is

02:34:08,000 --> 02:34:11,040
how we constantly evolve and how we

02:34:09,600 --> 02:34:13,120
constantly move forward

02:34:11,040 --> 02:34:14,720
and this is how you survive because you

02:34:13,120 --> 02:34:16,960
have to change with the world

02:34:14,720 --> 02:34:18,560
so you have to provide new functionality

02:34:16,960 --> 02:34:20,640
a lot of people i get this

02:34:18,560 --> 02:34:22,080
complaint a lot from a number of people

02:34:20,640 --> 02:34:23,359
who've been in the i t and the computer

02:34:22,080 --> 02:34:25,520
industry for a long time saying

02:34:23,359 --> 02:34:28,000
how is linux succeeding it's an old

02:34:25,520 --> 02:34:29,920
model the old unix posix model

02:34:28,000 --> 02:34:31,359
is obsolete we shouldn't be doing this

02:34:29,920 --> 02:34:34,240
anymore and the

02:34:31,359 --> 02:34:35,680
problem is um in one way linux supports

02:34:34,240 --> 02:34:37,280
that they support your binaries from 20

02:34:35,680 --> 02:34:40,479
years ago from 25 years ago

02:34:37,280 --> 02:34:42,080
you can still run really old um bsd

02:34:40,479 --> 02:34:43,840
applications you rebuild them and they

02:34:42,080 --> 02:34:45,600
work or you can run your application

02:34:43,840 --> 02:34:46,160
that was built 20 years ago and it still

02:34:45,600 --> 02:34:48,240
works

02:34:46,160 --> 02:34:49,680
so people think linux is stagnated but

02:34:48,240 --> 02:34:51,280
in reality we've created new

02:34:49,680 --> 02:34:52,399
functionalities right next to the old

02:34:51,280 --> 02:34:53,840
functionalities

02:34:52,399 --> 02:34:55,760
and that you can do different things you

02:34:53,840 --> 02:34:57,280
can take advantage of stuff we have ebpf

02:34:55,760 --> 02:34:58,479
which is taking over the world it's a

02:34:57,280 --> 02:35:00,720
micro kernel like

02:34:58,479 --> 02:35:02,160
architecture you can run user space

02:35:00,720 --> 02:35:03,200
programs on the kernel you can do all

02:35:02,160 --> 02:35:05,120
this fancy stuff

02:35:03,200 --> 02:35:07,520
proven that you can't lock up the kernel

02:35:05,120 --> 02:35:09,840
wonderful stuff iou ring is fast

02:35:07,520 --> 02:35:11,520
asynchronous io in a different way that

02:35:09,840 --> 02:35:13,200
has ever been done before and it's again

02:35:11,520 --> 02:35:13,840
sitting right next to the old posix

02:35:13,200 --> 02:35:15,600
model

02:35:13,840 --> 02:35:17,439
so that your old programs can work just

02:35:15,600 --> 02:35:18,319
fine but new programs can take advantage

02:35:17,439 --> 02:35:20,240
of stuff and

02:35:18,319 --> 02:35:21,840
take advantage of speed increases of

02:35:20,240 --> 02:35:23,120
course linux now is a real-time

02:35:21,840 --> 02:35:24,560
operating system it's been a real-time

02:35:23,120 --> 02:35:25,359
operating system for a while without a

02:35:24,560 --> 02:35:27,280
tree patch

02:35:25,359 --> 02:35:28,960
those changes are almost all merged

02:35:27,280 --> 02:35:30,399
that's something people said could never

02:35:28,960 --> 02:35:32,640
possibly be done but yep

02:35:30,399 --> 02:35:34,720
we did it right next to the existing

02:35:32,640 --> 02:35:36,319
operating system and nobody noticed

02:35:34,720 --> 02:35:38,399
that's how you do it you evolve and add

02:35:36,319 --> 02:35:39,680
new functionality without breaking

02:35:38,399 --> 02:35:42,240
anything

02:35:39,680 --> 02:35:44,319
um in order to do this we you have to

02:35:42,240 --> 02:35:45,760
create the trust that people can rely on

02:35:44,319 --> 02:35:47,520
the colonel developers made this public

02:35:45,760 --> 02:35:49,600
promise 15 years ago

02:35:47,520 --> 02:35:51,120
and we haven't broken it since and that

02:35:49,600 --> 02:35:52,720
is how we're succeeding

02:35:51,120 --> 02:35:54,880
because if we break that trust people

02:35:52,720 --> 02:35:57,200
will stop using us and that's not okay

02:35:54,880 --> 02:35:58,319
and we learned this really really a hard

02:35:57,200 --> 02:36:01,120
way when we

02:35:58,319 --> 02:36:02,640
old development model we used to have

02:36:01,120 --> 02:36:04,240
stable and then development trees and

02:36:02,640 --> 02:36:05,920
the development tree lasted a year

02:36:04,240 --> 02:36:07,600
and then the elementary lasted two years

02:36:05,920 --> 02:36:09,200
and then almost three years

02:36:07,600 --> 02:36:11,280
and it turned into a nightmare we broke

02:36:09,200 --> 02:36:12,640
things we had to roll things back we had

02:36:11,280 --> 02:36:14,880
to make things work again

02:36:12,640 --> 02:36:16,160
we had huge massive forks we all were

02:36:14,880 --> 02:36:17,040
working on different things at different

02:36:16,160 --> 02:36:19,760
times

02:36:17,040 --> 02:36:20,800
and it was a nightmare then we after 2.6

02:36:19,760 --> 02:36:22,240
came out

02:36:20,800 --> 02:36:24,080
a long time ago we said we're never

02:36:22,240 --> 02:36:25,040
going to do this again and we're all

02:36:24,080 --> 02:36:27,040
going to be stable

02:36:25,040 --> 02:36:29,840
every single release we do is stable so

02:36:27,040 --> 02:36:32,399
we've been that way since 2003

02:36:29,840 --> 02:36:34,240
and it's worked and people rely on us

02:36:32,399 --> 02:36:35,680
and we've done that and people said this

02:36:34,240 --> 02:36:37,840
is something you can't really do

02:36:35,680 --> 02:36:39,439
we kind of prove that you can do this we

02:36:37,840 --> 02:36:42,240
have a release every three months

02:36:39,439 --> 02:36:43,600
it's stable it's maintained we have

02:36:42,240 --> 02:36:45,359
long-term trees that people want to

02:36:43,600 --> 02:36:46,960
stick to those for various reasons for

02:36:45,359 --> 02:36:49,760
certain hardware or products

02:36:46,960 --> 02:36:51,439
but it can be done and so i recommend

02:36:49,760 --> 02:36:54,800
that the stable model

02:36:51,439 --> 02:36:56,479
rolling releases time-based stuff works

02:36:54,800 --> 02:36:57,600
so we've figured it out the hard way

02:36:56,479 --> 02:36:58,479
other operating system has done this

02:36:57,600 --> 02:37:01,200
before

02:36:58,479 --> 02:37:02,880
um windows infamously maintains backward

02:37:01,200 --> 02:37:04,800
compatibility osx does not

02:37:02,880 --> 02:37:05,920
and you see osx developers getting very

02:37:04,800 --> 02:37:08,240
mad about that so

02:37:05,920 --> 02:37:09,840
it's a trade-off um depends on where you

02:37:08,240 --> 02:37:10,720
want your operating system to be used or

02:37:09,840 --> 02:37:13,359
not

02:37:10,720 --> 02:37:14,479
um along those lines this is the big

02:37:13,359 --> 02:37:16,000
reason um

02:37:14,479 --> 02:37:17,920
because we can't force anybody to use

02:37:16,000 --> 02:37:19,200
linux because it's free you can use it

02:37:17,920 --> 02:37:19,760
if you want to or not if it solves your

02:37:19,200 --> 02:37:21,920
problem

02:37:19,760 --> 02:37:23,680
but we don't we should never create and

02:37:21,920 --> 02:37:24,560
give you a reason to stop using it once

02:37:23,680 --> 02:37:26,399
you used it

02:37:24,560 --> 02:37:27,840
once you use it and rely on it we don't

02:37:26,399 --> 02:37:29,840
want you to be bad about it

02:37:27,840 --> 02:37:31,439
we don't want to make a breaking change

02:37:29,840 --> 02:37:33,520
that keeps you

02:37:31,439 --> 02:37:34,560
it causes you to move away and that's

02:37:33,520 --> 02:37:36,080
something really important

02:37:34,560 --> 02:37:37,920
if you write software you don't want to

02:37:36,080 --> 02:37:38,560
alienate people and cause them to go

02:37:37,920 --> 02:37:41,600
away

02:37:38,560 --> 02:37:43,680
hopefully if you like users um

02:37:41,600 --> 02:37:45,359
okay that's kernel development i guess

02:37:43,680 --> 02:37:48,000
we'll do questions at the end

02:37:45,359 --> 02:37:48,880
so i'll wait this is going fast this is

02:37:48,000 --> 02:37:50,720
fun

02:37:48,880 --> 02:37:51,520
um let's talk about library developers i

02:37:50,720 --> 02:37:52,800
know there's a number of library

02:37:51,520 --> 02:37:56,000
developers here

02:37:52,800 --> 02:37:58,720
and um this

02:37:56,000 --> 02:38:00,160
is the hardest job ever um i really

02:37:58,720 --> 02:38:02,319
really feel sorry for you

02:38:00,160 --> 02:38:03,840
libraries writing this library develop

02:38:02,319 --> 02:38:04,399
is hard it's one of the hardest things

02:38:03,840 --> 02:38:05,680
to do

02:38:04,399 --> 02:38:07,520
in the kernel we're really lucky because

02:38:05,680 --> 02:38:08,960
we have internal apis that we can evolve

02:38:07,520 --> 02:38:10,399
and change over time

02:38:08,960 --> 02:38:12,080
because they're inside the kernel we

02:38:10,399 --> 02:38:13,520
don't have to worry about breaking that

02:38:12,080 --> 02:38:15,120
things that once things go outside the

02:38:13,520 --> 02:38:17,200
kernel i mean that's all a library is

02:38:15,120 --> 02:38:20,000
it's an outwardly facing api

02:38:17,200 --> 02:38:21,760
um it's impossible and the main reason

02:38:20,000 --> 02:38:22,399
it's impossible is you can never know if

02:38:21,760 --> 02:38:24,080
your api

02:38:22,399 --> 02:38:25,600
actually works until you have a lot of

02:38:24,080 --> 02:38:26,960
people using it and by the time you have

02:38:25,600 --> 02:38:28,319
a lot of people using it

02:38:26,960 --> 02:38:30,479
then you realize all the problems worth

02:38:28,319 --> 02:38:32,720
it and it and then you can't change it

02:38:30,479 --> 02:38:34,160
um getting it right the first time is

02:38:32,720 --> 02:38:37,439
almost impossible

02:38:34,160 --> 02:38:38,160
um it's hard i i don't know how you guys

02:38:37,439 --> 02:38:40,720
do it um

02:38:38,160 --> 02:38:42,479
it's a very difficult task the few

02:38:40,720 --> 02:38:44,800
libraries i've had to write are

02:38:42,479 --> 02:38:47,359
horrible and you learn over time there's

02:38:44,800 --> 02:38:50,399
some good ideas on how to do libraries

02:38:47,359 --> 02:38:52,720
um but um it's really difficult

02:38:50,399 --> 02:38:54,160
um here's some good ideas um one thing

02:38:52,720 --> 02:38:55,520
is you can never break anything

02:38:54,160 --> 02:38:58,000
if somebody starts using your library

02:38:55,520 --> 02:38:58,479
you can't break it um that's just a flat

02:38:58,000 --> 02:39:01,680
out rule

02:38:58,479 --> 02:39:02,800
um you should not ever break that rule

02:39:01,680 --> 02:39:04,720
otherwise you'll

02:39:02,800 --> 02:39:06,560
not use it you won't have a user anymore

02:39:04,720 --> 02:39:08,160
um the only way you can fix thing is by

02:39:06,560 --> 02:39:10,080
creating new ones and when you create a

02:39:08,160 --> 02:39:10,720
new api you can hope people move to that

02:39:10,080 --> 02:39:13,680
api

02:39:10,720 --> 02:39:14,960
but you still gotta stick around and

02:39:13,680 --> 02:39:17,280
keep that old api

02:39:14,960 --> 02:39:18,479
but in that api that you're creating you

02:39:17,280 --> 02:39:20,240
need to be strict

02:39:18,479 --> 02:39:22,080
you should not follow the postal's law

02:39:20,240 --> 02:39:23,760
for apis it just does not work we've

02:39:22,080 --> 02:39:26,560
seen it happen time and time again

02:39:23,760 --> 02:39:28,240
if you accept things that are too um

02:39:26,560 --> 02:39:29,520
that are out of bounds or out of

02:39:28,240 --> 02:39:30,880
scope from what you think you should be

02:39:29,520 --> 02:39:32,880
accepting and then you try and change

02:39:30,880 --> 02:39:34,479
that later on you will break real users

02:39:32,880 --> 02:39:36,399
so you need to be very strict in the

02:39:34,479 --> 02:39:38,000
beginning and the kernel we learned this

02:39:36,399 --> 02:39:40,240
the hard way with system calls

02:39:38,000 --> 02:39:41,680
we had extra fields and other sections

02:39:40,240 --> 02:39:43,520
of ioctyls and such

02:39:41,680 --> 02:39:45,600
that we didn't care about and then when

02:39:43,520 --> 02:39:47,359
we wanted to increase things or

02:39:45,600 --> 02:39:49,520
add a new feature or change something we

02:39:47,359 --> 02:39:51,439
all of a sudden had to

02:39:49,520 --> 02:39:52,560
accept that that those fields would be

02:39:51,439 --> 02:39:54,080
full of garbage

02:39:52,560 --> 02:39:56,000
and we couldn't do that so we now have a

02:39:54,080 --> 02:39:57,520
rule when we add new fields and new

02:39:56,000 --> 02:39:59,600
system calls that we have

02:39:57,520 --> 02:40:00,640
if anything is reserved or anything is

02:39:59,600 --> 02:40:03,359
um

02:40:00,640 --> 02:40:04,640
reserved for future use we check it and

02:40:03,359 --> 02:40:05,280
we check to make sure it's set to

02:40:04,640 --> 02:40:07,200
nothing

02:40:05,280 --> 02:40:08,399
and otherwise we will break in the

02:40:07,200 --> 02:40:09,680
future and we'll have to create another

02:40:08,399 --> 02:40:11,359
system call if you look we have

02:40:09,680 --> 02:40:12,800
renumber system calls if you have the

02:40:11,359 --> 02:40:14,640
third and fourth version of them

02:40:12,800 --> 02:40:16,080
we have a number of those over time

02:40:14,640 --> 02:40:17,840
that's just how things grow

02:40:16,080 --> 02:40:19,920
um so don't don't be don't follow

02:40:17,840 --> 02:40:20,640
postal's law when you're creating an api

02:40:19,920 --> 02:40:22,479
i

02:40:20,640 --> 02:40:24,080
you cannot maintain it over time just

02:40:22,479 --> 02:40:27,359
trust me i look at glibc

02:40:24,080 --> 02:40:27,780
um they know how to do this well as well

02:40:27,359 --> 02:40:30,720
um

02:40:27,780 --> 02:40:34,479
[Music]

02:40:30,720 --> 02:40:35,760
oh there we go um rusty russell is a

02:40:34,479 --> 02:40:37,840
kernel developer um

02:40:35,760 --> 02:40:39,680
back in 2003 he gave a really good talk

02:40:37,840 --> 02:40:41,200
on how to create an api

02:40:39,680 --> 02:40:42,720
such that if you hate your users or if

02:40:41,200 --> 02:40:44,640
you actually like your users

02:40:42,720 --> 02:40:46,960
um there's two blog posts that he

02:40:44,640 --> 02:40:48,319
summarized it in a nice way in 2008

02:40:46,960 --> 02:40:50,080
made it a little better the original

02:40:48,319 --> 02:40:52,479
talk slides are really interesting i'd

02:40:50,080 --> 02:40:53,200
recommend everybody reading it um and if

02:40:52,479 --> 02:40:54,720
you can find it

02:40:53,200 --> 02:40:56,479
i couldn't find the link online i think

02:40:54,720 --> 02:40:58,000
the talk was recorded somewhere but it

02:40:56,479 --> 02:40:59,920
was from 2003.

02:40:58,000 --> 02:41:01,200
um read those blog posts it tells you

02:40:59,920 --> 02:41:03,279
how to

02:41:01,200 --> 02:41:05,920
create an api that somebody cannot get

02:41:03,279 --> 02:41:09,200
wrong and that's the goal you want it to

02:41:05,920 --> 02:41:11,120
be so that your api is intuitive

02:41:09,200 --> 02:41:12,800
is not hard to use and it's

02:41:11,120 --> 02:41:13,439
self-documenting and all sorts of good

02:41:12,800 --> 02:41:17,840
things

02:41:13,439 --> 02:41:17,840
read those things they're really good

02:41:17,920 --> 02:41:22,960
um so again a lot of people claim

02:41:21,200 --> 02:41:24,800
that they want to move different apis

02:41:22,960 --> 02:41:26,080
because of they don't want to use them

02:41:24,800 --> 02:41:27,520
anymore they're broken

02:41:26,080 --> 02:41:29,600
you got to keep supporting them because

02:41:27,520 --> 02:41:31,439
you will have users and you want to if

02:41:29,600 --> 02:41:32,880
you do want to have people

02:41:31,439 --> 02:41:34,720
move to new things you need to provide

02:41:32,880 --> 02:41:36,240
them guides and help and documentation

02:41:34,720 --> 02:41:37,680
for how to do that you can't just throw

02:41:36,240 --> 02:41:40,160
a new api out there

02:41:37,680 --> 02:41:41,920
and expect them to use it and you need

02:41:40,160 --> 02:41:43,600
to document this stuff and you need to

02:41:41,920 --> 02:41:47,359
document it really well

02:41:43,600 --> 02:41:48,640
because if you don't stackoverflow is

02:41:47,359 --> 02:41:52,000
going to try and do it and

02:41:48,640 --> 02:41:53,439
we have so many examples of in the

02:41:52,000 --> 02:41:55,200
kernel elise you see these common

02:41:53,439 --> 02:41:56,399
patterns get submitted to us and drivers

02:41:55,200 --> 02:41:58,160
and whatnot and you're like where is

02:41:56,399 --> 02:41:59,279
this wrong code coming from and it's a

02:41:58,160 --> 02:42:01,520
stack overflow

02:41:59,279 --> 02:42:03,040
post that's been uploaded from 10 years

02:42:01,520 --> 02:42:04,720
ago with here's how you solve this

02:42:03,040 --> 02:42:06,160
problem when that's actually wrong

02:42:04,720 --> 02:42:07,760
um downloading those and getting rid of

02:42:06,160 --> 02:42:08,720
those is impossible so you just have to

02:42:07,760 --> 02:42:11,200
deal with that you don't want

02:42:08,720 --> 02:42:13,279
stackoverflow to be your primary use

02:42:11,200 --> 02:42:15,120
your primary documentation provide good

02:42:13,279 --> 02:42:16,800
documentation so in the kernel now we

02:42:15,120 --> 02:42:18,160
have tons and tons of documentation

02:42:16,800 --> 02:42:19,600
i don't know if anybody reads it but we

02:42:18,160 --> 02:42:20,960
have there to at least point people out

02:42:19,600 --> 02:42:21,920
when they get it wrong we can say go

02:42:20,960 --> 02:42:23,600
read this stuff

02:42:21,920 --> 02:42:25,359
and that's the most important thing but

02:42:23,600 --> 02:42:27,920
you need to provide a guide for how to

02:42:25,359 --> 02:42:30,800
do this type of stuff

02:42:27,920 --> 02:42:32,720
and again always evolve i have i can't

02:42:30,800 --> 02:42:35,120
count the number of times i've seen

02:42:32,720 --> 02:42:36,720
deprecated in libraries and that you

02:42:35,120 --> 02:42:38,399
rebuild your code against an old

02:42:36,720 --> 02:42:40,479
a new library and it's all of a sudden

02:42:38,399 --> 02:42:42,720
starts telling you a bunch of warnings

02:42:40,479 --> 02:42:43,840
that's the api that's the library

02:42:42,720 --> 02:42:46,880
creator saying

02:42:43,840 --> 02:42:48,319
um they give up you know that's not okay

02:42:46,880 --> 02:42:50,080
a lot of times you can just they're

02:42:48,319 --> 02:42:52,000
saying use this instead of that then

02:42:50,080 --> 02:42:53,600
do that in the library work around those

02:42:52,000 --> 02:42:54,080
things because once you have a user you

02:42:53,600 --> 02:42:56,160
need to

02:42:54,080 --> 02:42:57,920
keep holding on to that user i don't

02:42:56,160 --> 02:42:58,720
want to rewrite my code just because you

02:42:57,920 --> 02:43:00,479
updated something

02:42:58,720 --> 02:43:02,080
unless there's a really really really

02:43:00,479 --> 02:43:04,720
good reason and

02:43:02,080 --> 02:43:06,240
almost never there almost never is um

02:43:04,720 --> 02:43:06,800
please just work around it and solve the

02:43:06,240 --> 02:43:10,080
problem

02:43:06,800 --> 02:43:10,319
on your own um that being said sometimes

02:43:10,080 --> 02:43:12,160
you

02:43:10,319 --> 02:43:14,479
do have to take a break you do have to

02:43:12,160 --> 02:43:16,560
start over again and go on but do that

02:43:14,479 --> 02:43:19,600
and do that as a whole new library

02:43:16,560 --> 02:43:21,680
um gtka is a good example of they just

02:43:19,600 --> 02:43:23,760
started over and that was great and the

02:43:21,680 --> 02:43:25,680
different ways of doing things and

02:43:23,760 --> 02:43:27,760
different model and you go from there

02:43:25,680 --> 02:43:29,120
and that's a perfectly valid

02:43:27,760 --> 02:43:30,560
reason to do that hopefully support the

02:43:29,120 --> 02:43:31,200
old stuff because you have lots of users

02:43:30,560 --> 02:43:33,120
from that

02:43:31,200 --> 02:43:34,479
over time it's nice to evolve things out

02:43:33,120 --> 02:43:37,120
away out of

02:43:34,479 --> 02:43:38,560
a way but just start over and then you

02:43:37,120 --> 02:43:39,680
have no users and then you don't know if

02:43:38,560 --> 02:43:41,040
anybody's using your api

02:43:39,680 --> 02:43:42,800
you don't know if you got it right until

02:43:41,040 --> 02:43:45,120
you have users and then it's broken then

02:43:42,800 --> 02:43:46,640
the cycle continues that's life that's

02:43:45,120 --> 02:43:49,760
the life of a library developer

02:43:46,640 --> 02:43:51,359
i'm so sorry but that's your choice um

02:43:49,760 --> 02:43:53,840
but it's very useful

02:43:51,359 --> 02:43:55,200
very useful um but you need to if you

02:43:53,840 --> 02:43:56,720
violate those things you

02:43:55,200 --> 02:43:58,880
cause people to lose trust if i see

02:43:56,720 --> 02:44:00,560
somebody um if i rebuild and see

02:43:58,880 --> 02:44:02,319
deprecated all over the place or apis

02:44:00,560 --> 02:44:04,240
change then it's just horrible

02:44:02,319 --> 02:44:05,920
you don't want to do that um you don't

02:44:04,240 --> 02:44:07,680
want to violate that trust on purpose

02:44:05,920 --> 02:44:09,200
just because you're a lazy developer

02:44:07,680 --> 02:44:10,479
just because you feel like it could be

02:44:09,200 --> 02:44:11,200
done better just because you want to

02:44:10,479 --> 02:44:13,359
change things

02:44:11,200 --> 02:44:14,880
don't do that you're violating the trust

02:44:13,359 --> 02:44:17,840
that you're giving to a user

02:44:14,880 --> 02:44:18,960
and if you violate that trust you won't

02:44:17,840 --> 02:44:20,640
you have that user anymore

02:44:18,960 --> 02:44:22,720
and i've done this many times when i

02:44:20,640 --> 02:44:24,960
upgraded library and it turned out my

02:44:22,720 --> 02:44:26,640
code that relied on it now has to change

02:44:24,960 --> 02:44:28,080
because of that i will do everything i

02:44:26,640 --> 02:44:29,520
possibly can to rip it out and never

02:44:28,080 --> 02:44:32,240
rely on that library again

02:44:29,520 --> 02:44:33,279
maybe that's a good thing maybe it's not

02:44:32,240 --> 02:44:35,200
usually libraries there

02:44:33,279 --> 02:44:37,200
are there because i want to do something

02:44:35,200 --> 02:44:38,720
else and a library is providing the

02:44:37,200 --> 02:44:39,439
functionality so i can do what i really

02:44:38,720 --> 02:44:41,439
want to do

02:44:39,439 --> 02:44:43,439
i don't want to have to write the code

02:44:41,439 --> 02:44:45,439
that's in the library itself

02:44:43,439 --> 02:44:47,040
but don't force me to if you start

02:44:45,439 --> 02:44:48,800
breaking things i will

02:44:47,040 --> 02:44:50,080
and you won't have any users and that's

02:44:48,800 --> 02:44:53,520
not okay

02:44:50,080 --> 02:44:56,640
please don't do that okay

02:44:53,520 --> 02:44:56,640
wow i'm going fast

02:44:56,720 --> 02:45:00,160
um application developers a lot of

02:44:58,960 --> 02:45:02,399
application developers here

02:45:00,160 --> 02:45:04,560
this is good um this isn't such a hard

02:45:02,399 --> 02:45:06,720
thing but

02:45:04,560 --> 02:45:08,240
you guys are the most easily easiest to

02:45:06,720 --> 02:45:09,040
criticize so i really feel sorry for

02:45:08,240 --> 02:45:10,399
this stuff

02:45:09,040 --> 02:45:11,680
everybody sees the buttons everybody

02:45:10,399 --> 02:45:13,120
thinks they can do something different

02:45:11,680 --> 02:45:14,960
everybody wants to criticize

02:45:13,120 --> 02:45:16,640
how the layout looks what the graphics

02:45:14,960 --> 02:45:18,479
are look at the previous talk here's all

02:45:16,640 --> 02:45:19,760
these hints on how to do things better

02:45:18,479 --> 02:45:21,680
and if you get those wrong people get

02:45:19,760 --> 02:45:22,160
mad and they'll get mad easily and it's

02:45:21,680 --> 02:45:23,600
usually

02:45:22,160 --> 02:45:25,200
your core functionality of your

02:45:23,600 --> 02:45:27,200
application is somewhere else it's not

02:45:25,200 --> 02:45:29,200
on these buttons it's not the stuff and

02:45:27,200 --> 02:45:30,640
people get upset you're easiest to

02:45:29,200 --> 02:45:31,439
criticize it's just like a traffic

02:45:30,640 --> 02:45:32,960
engineer

02:45:31,439 --> 02:45:34,800
everybody knows where to put the road

02:45:32,960 --> 02:45:36,240
except you obviously so

02:45:34,800 --> 02:45:38,160
they will tell you about it and they

02:45:36,240 --> 02:45:38,880
will criticize you and that's not okay

02:45:38,160 --> 02:45:40,560
that's

02:45:38,880 --> 02:45:42,560
i feel very sorry for you but here's

02:45:40,560 --> 02:45:45,120
some things you can do to do this

02:45:42,560 --> 02:45:46,479
um the biggest thing to do is don't take

02:45:45,120 --> 02:45:48,319
away things that work

02:45:46,479 --> 02:45:49,600
if somebody's using this feature and

02:45:48,319 --> 02:45:53,359
using this functionality

02:45:49,600 --> 02:45:54,479
keep it there um it's that simple it's

02:45:53,359 --> 02:45:57,040
being it was there

02:45:54,479 --> 02:45:59,600
you provided for somebody don't think by

02:45:57,040 --> 02:46:00,720
removing it you're doing them a favor

02:45:59,600 --> 02:46:01,600
you might be doing yourself a favor

02:46:00,720 --> 02:46:02,880
because you think it can be done a

02:46:01,600 --> 02:46:04,960
different way but

02:46:02,880 --> 02:46:06,880
don't because it's not going to work and

02:46:04,960 --> 02:46:08,479
the biggest example of this and the most

02:46:06,880 --> 02:46:10,720
public example of this happened many

02:46:08,479 --> 02:46:13,359
many years ago um

02:46:10,720 --> 02:46:14,720
2011 the big day a number of people here

02:46:13,359 --> 02:46:18,240
know what that date was

02:46:14,720 --> 02:46:20,080
um i have heard it talked by

02:46:18,240 --> 02:46:22,399
as this date and this was the gnome

02:46:20,080 --> 02:46:23,760
three introduction everybody's system

02:46:22,399 --> 02:46:26,000
instantly when the district switched it

02:46:23,760 --> 02:46:27,040
over it looked totally and completely

02:46:26,000 --> 02:46:30,319
different

02:46:27,040 --> 02:46:31,040
um that was a major major break um this

02:46:30,319 --> 02:46:33,200
was the day

02:46:31,040 --> 02:46:34,319
the gnome project realized that they had

02:46:33,200 --> 02:46:35,520
real users

02:46:34,319 --> 02:46:36,800
based on the feedback they got they

02:46:35,520 --> 02:46:37,760
always thought they had users they

02:46:36,800 --> 02:46:38,000
always thought they were doing the right

02:46:37,760 --> 02:46:39,680
thing

02:46:38,000 --> 02:46:41,040
they wanted to make a change they wanted

02:46:39,680 --> 02:46:42,960
to do something different

02:46:41,040 --> 02:46:44,560
but this was the day that they really

02:46:42,960 --> 02:46:46,160
broke all their users trust

02:46:44,560 --> 02:46:47,600
because all of a sudden they imposed a

02:46:46,160 --> 02:46:49,200
totally different model

02:46:47,600 --> 02:46:51,120
onto them onto what they were currently

02:46:49,200 --> 02:46:53,680
using to do used to doing

02:46:51,120 --> 02:46:54,960
getting the workflow and it broke them

02:46:53,680 --> 02:46:57,680
it just caused a

02:46:54,960 --> 02:46:58,319
number of major major pain it was

02:46:57,680 --> 02:47:02,240
horrible

02:46:58,319 --> 02:47:03,760
um the lwn.net review of gnome 3 was

02:47:02,240 --> 02:47:06,800
actually really good

02:47:03,760 --> 02:47:08,880
it was very comprehensive um but and the

02:47:06,800 --> 02:47:10,640
comments of course were horrible

02:47:08,880 --> 02:47:12,080
but read this if you're an application

02:47:10,640 --> 02:47:12,800
developer and you are considering

02:47:12,080 --> 02:47:14,880
rewriting

02:47:12,800 --> 02:47:16,160
how you do everything in a totally

02:47:14,880 --> 02:47:18,240
different way

02:47:16,160 --> 02:47:19,200
look at this you are seeing people mad

02:47:18,240 --> 02:47:22,000
because you took

02:47:19,200 --> 02:47:23,439
something that they were using and using

02:47:22,000 --> 02:47:25,279
to get their real work done

02:47:23,439 --> 02:47:26,479
their real work isn't to create a

02:47:25,279 --> 02:47:28,640
interface or

02:47:26,479 --> 02:47:30,080
application environment their real work

02:47:28,640 --> 02:47:32,000
is to do something else and you

02:47:30,080 --> 02:47:34,240
made it harder to get them to do their

02:47:32,000 --> 02:47:36,160
real work you broke their trust

02:47:34,240 --> 02:47:37,920
and that was a long way you and the

02:47:36,160 --> 02:47:39,680
known developers clawed back from that

02:47:37,920 --> 02:47:40,319
it took them many many many years to do

02:47:39,680 --> 02:47:42,960
that

02:47:40,319 --> 02:47:44,479
um i think they're there now um i know

02:47:42,960 --> 02:47:46,319
myself i switched away and

02:47:44,479 --> 02:47:47,840
came back many years they've gone better

02:47:46,319 --> 02:47:49,279
since

02:47:47,840 --> 02:47:51,279
they realize having a clean break

02:47:49,279 --> 02:47:53,200
doesn't work and

02:47:51,279 --> 02:47:54,319
that was not the best idea please don't

02:47:53,200 --> 02:47:55,920
in your application

02:47:54,319 --> 02:47:57,359
do the same thing i see this happen a

02:47:55,920 --> 02:48:00,160
lot um

02:47:57,359 --> 02:48:00,640
people evolve applications to do

02:48:00,160 --> 02:48:02,640
something

02:48:00,640 --> 02:48:05,279
totally different different ui that's

02:48:02,640 --> 02:48:09,200
not a good idea please don't do that

02:48:05,279 --> 02:48:10,319
um as a result everybody here knows made

02:48:09,200 --> 02:48:12,880
in cinnamon

02:48:10,319 --> 02:48:14,240
sprung up um they fill a real need um

02:48:12,880 --> 02:48:15,680
these are real desktops that are with

02:48:14,240 --> 02:48:16,720
lots and lots of users because they were

02:48:15,680 --> 02:48:18,720
used to it before

02:48:16,720 --> 02:48:19,760
or they're used to that common paradigm

02:48:18,720 --> 02:48:22,399
that's fine

02:48:19,760 --> 02:48:25,520
but this is an example that kind of

02:48:22,399 --> 02:48:27,840
shows that what the gnome developers did

02:48:25,520 --> 02:48:29,760
was major and was really big because

02:48:27,840 --> 02:48:32,960
there's two separate projects

02:48:29,760 --> 02:48:34,479
just to fill that void um that's fine if

02:48:32,960 --> 02:48:36,880
the gnome developers want to do that

02:48:34,479 --> 02:48:38,880
they did um that was their decision to

02:48:36,880 --> 02:48:40,160
do again we're writing software for free

02:48:38,880 --> 02:48:42,319
you're giving it over throwing it over

02:48:40,160 --> 02:48:44,319
the wall i would say that maybe that

02:48:42,319 --> 02:48:45,680
wasn't the best decision to do but

02:48:44,319 --> 02:48:47,120
hey maybe you should have called it a

02:48:45,680 --> 02:48:48,080
different project gone off a different

02:48:47,120 --> 02:48:50,319
way

02:48:48,080 --> 02:48:52,000
that's their decision again be aware of

02:48:50,319 --> 02:48:55,120
this it will happen

02:48:52,000 --> 02:48:57,040
um but you want to change the thing

02:48:55,120 --> 02:48:58,319
about applications and ides and

02:48:57,040 --> 02:49:00,399
interfaces and whatnot you want to

02:48:58,319 --> 02:49:02,319
change based on time based on the world

02:49:00,399 --> 02:49:04,560
uh we change because we have to change

02:49:02,319 --> 02:49:05,040
um based on different ideas how things

02:49:04,560 --> 02:49:07,840
work

02:49:05,040 --> 02:49:08,640
so there's really two acceptable ways to

02:49:07,840 --> 02:49:11,040
change

02:49:08,640 --> 02:49:13,920
um in order to keep your users and that

02:49:11,040 --> 02:49:15,600
is um

02:49:13,920 --> 02:49:17,279
you can evolve slowly so that no one

02:49:15,600 --> 02:49:19,359
notices that's like the kernel we add

02:49:17,279 --> 02:49:22,000
new features we don't take things away

02:49:19,359 --> 02:49:23,520
we do nice things we evolve in such a

02:49:22,000 --> 02:49:25,439
manner that everybody's like oh that's

02:49:23,520 --> 02:49:27,040
just a common change i have my

02:49:25,439 --> 02:49:28,560
common paradigm from before i can learn

02:49:27,040 --> 02:49:31,279
the new stuff and keep on going

02:49:28,560 --> 02:49:33,520
it's a constant evolutionary change it

02:49:31,279 --> 02:49:36,319
isn't jarring it isn't major it isn't

02:49:33,520 --> 02:49:38,240
um a whole new paradigm and stuff and

02:49:36,319 --> 02:49:40,560
again the best example of this is kde

02:49:38,240 --> 02:49:41,680
kde has evolved and changed over time if

02:49:40,560 --> 02:49:43,439
you look at the old model

02:49:41,680 --> 02:49:45,600
versus the new stuff but they've evolved

02:49:43,439 --> 02:49:47,359
in such a way that the ideas are still

02:49:45,600 --> 02:49:50,080
there you can still have the same

02:49:47,359 --> 02:49:50,800
features um you haven't broken anybody's

02:49:50,080 --> 02:49:52,880
workflow

02:49:50,800 --> 02:49:54,000
you added new stuff you maybe move

02:49:52,880 --> 02:49:55,279
things around a little bit made it

02:49:54,000 --> 02:49:57,840
prettier of course

02:49:55,279 --> 02:49:59,279
things evolve over time but you didn't

02:49:57,840 --> 02:50:01,120
break anybody and because of that you

02:49:59,279 --> 02:50:02,560
don't hear anybody complaining about the

02:50:01,120 --> 02:50:03,680
new versions that much

02:50:02,560 --> 02:50:05,600
right they update to a new one they're

02:50:03,680 --> 02:50:06,800
like hey it looks fancier and they keep

02:50:05,600 --> 02:50:07,439
on going because they can get the real

02:50:06,800 --> 02:50:08,960
work done

02:50:07,439 --> 02:50:11,200
and their real work is what they want to

02:50:08,960 --> 02:50:12,800
have done um that's a really good way

02:50:11,200 --> 02:50:14,560
kde does this very well

02:50:12,800 --> 02:50:15,760
gnome since the big break has done it

02:50:14,560 --> 02:50:17,040
pretty well as well if you look at their

02:50:15,760 --> 02:50:19,439
individual releases

02:50:17,040 --> 02:50:21,520
um but again maybe they learn from katie

02:50:19,439 --> 02:50:24,640
i'm glad you guys are talking

02:50:21,520 --> 02:50:26,319
um another way you can do this is if you

02:50:24,640 --> 02:50:28,399
provide a compelling reason

02:50:26,319 --> 02:50:29,520
to make the change you have to provide

02:50:28,399 --> 02:50:32,880
enough reason

02:50:29,520 --> 02:50:34,399
and enough um goodness to force somebody

02:50:32,880 --> 02:50:35,439
to take the time to learn to do

02:50:34,399 --> 02:50:38,000
something else

02:50:35,439 --> 02:50:40,399
that's very rare it happens very very

02:50:38,000 --> 02:50:43,359
rarely in an application space

02:50:40,399 --> 02:50:45,279
sometimes in library spaces it does i'll

02:50:43,359 --> 02:50:47,439
call that systemd as a good example

02:50:45,279 --> 02:50:48,800
of how this they did it right they

02:50:47,439 --> 02:50:50,240
provided all the functionality they

02:50:48,800 --> 02:50:52,319
solved a real problem that was there

02:50:50,240 --> 02:50:54,319
they unified all these existing

02:50:52,319 --> 02:50:56,880
tools and problems in such a way that it

02:50:54,319 --> 02:50:58,640
was just so much better to use

02:50:56,880 --> 02:51:00,319
and it provided enough impetus that

02:50:58,640 --> 02:51:02,720
everybody was willing to do

02:51:00,319 --> 02:51:04,319
do the work to modify their own stuff

02:51:02,720 --> 02:51:06,240
and move to the new model

02:51:04,319 --> 02:51:07,600
that it worked um people still complain

02:51:06,240 --> 02:51:08,479
about it but it worked everybody

02:51:07,600 --> 02:51:10,160
switched

02:51:08,479 --> 02:51:12,319
um everybody updated the new stuff that

02:51:10,160 --> 02:51:14,000
kde is doing with systemd on how it

02:51:12,319 --> 02:51:15,200
launches better is very nice gnome was

02:51:14,000 --> 02:51:17,680
integrated with it very

02:51:15,200 --> 02:51:19,279
from the beginning from very early um it

02:51:17,680 --> 02:51:19,760
works well it solves a real problem

02:51:19,279 --> 02:51:22,560
again

02:51:19,760 --> 02:51:24,560
that was a example of how you can

02:51:22,560 --> 02:51:28,240
provide a compelling reason to move on

02:51:24,560 --> 02:51:31,120
and make the change so again

02:51:28,240 --> 02:51:32,720
never break somebody's trust um or they

02:51:31,120 --> 02:51:33,760
will leave if you want them to leave

02:51:32,720 --> 02:51:37,040
that's fine

02:51:33,760 --> 02:51:38,479
but realize they will leave if you do

02:51:37,040 --> 02:51:41,760
break that trust

02:51:38,479 --> 02:51:43,040
and for my final rule again you don't

02:51:41,760 --> 02:51:45,120
want to make anybody mad

02:51:43,040 --> 02:51:46,800
um they will not be your users anymore

02:51:45,120 --> 02:51:49,920
it's that simple

02:51:46,800 --> 02:51:51,920
um that was that's it um

02:51:49,920 --> 02:51:53,040
if you take anything again it goes back

02:51:51,920 --> 02:51:55,040
to my first slide

02:51:53,040 --> 02:51:56,800
don't make your users mad and you make

02:51:55,040 --> 02:51:58,240
your users mad by throwing changes at

02:51:56,800 --> 02:52:00,880
them that they're not expecting so they

02:51:58,240 --> 02:52:03,920
can't get their work done um

02:52:00,880 --> 02:52:07,680
and that's all that was fast

02:52:03,920 --> 02:52:12,560
55 slides in half an hour

02:52:07,680 --> 02:52:12,560
so questions anything else how do i do

02:52:12,840 --> 02:52:15,840
this

02:52:25,439 --> 02:52:32,479
questions in the shared notes okay

02:52:28,720 --> 02:52:33,920
okay um big change in your application

02:52:32,479 --> 02:52:36,640
do it step by step yes again

02:52:33,920 --> 02:52:38,399
evolve over time um libraries just keep

02:52:36,640 --> 02:52:40,240
adding to new libraries applications

02:52:38,399 --> 02:52:42,000
change things over time slowly

02:52:40,240 --> 02:52:44,080
and keep the old paradigm the old model

02:52:42,000 --> 02:52:45,600
if you want to switch to something major

02:52:44,080 --> 02:52:47,120
make it a whole new program it's that

02:52:45,600 --> 02:52:50,560
simple

02:52:47,120 --> 02:52:52,160
um symmetric december um

02:52:50,560 --> 02:52:54,640
signaling breaks by changing major

02:52:52,160 --> 02:52:57,120
versions um

02:52:54,640 --> 02:52:59,279
i think it's pointless if you're gonna

02:52:57,120 --> 02:53:00,560
say signify a break by a major version

02:52:59,279 --> 02:53:03,040
just call it a new library

02:53:00,560 --> 02:53:03,760
just make a new name um it's that simple

02:53:03,040 --> 02:53:05,439
because you're saying

02:53:03,760 --> 02:53:06,720
you're telling the world throwing

02:53:05,439 --> 02:53:07,200
everything away you got to start over

02:53:06,720 --> 02:53:09,359
again

02:53:07,200 --> 02:53:11,120
it's no different just support the old

02:53:09,359 --> 02:53:13,120
one support the new one

02:53:11,120 --> 02:53:14,800
and move on yes i can understand if you

02:53:13,120 --> 02:53:16,800
don't want to make changes and move to

02:53:14,800 --> 02:53:17,920
um keep the old api around but you threw

02:53:16,800 --> 02:53:19,760
it out there so

02:53:17,920 --> 02:53:21,920
it's your responsibility in a way to

02:53:19,760 --> 02:53:24,640
maintain that um

02:53:21,920 --> 02:53:24,960
i don't think sembert is a good idea

02:53:24,640 --> 02:53:28,560
just

02:53:24,960 --> 02:53:28,560
in reality it doesn't work very well

02:53:29,760 --> 02:53:34,240
um auto contain projects in linux world

02:53:33,600 --> 02:53:36,560
um

02:53:34,240 --> 02:53:37,760
we have the whole flat pack snap all

02:53:36,560 --> 02:53:39,359
that other stuff people are doing

02:53:37,760 --> 02:53:42,399
there's other solutions to that

02:53:39,359 --> 02:53:43,760
um docker containers i mean in a way we

02:53:42,399 --> 02:53:45,359
have more solutions for this than

02:53:43,760 --> 02:53:46,479
anybody else has ever had for any other

02:53:45,359 --> 02:53:48,560
operating system

02:53:46,479 --> 02:53:49,920
um people are working on that problem or

02:53:48,560 --> 02:53:52,000
yourself you link it all statically

02:53:49,920 --> 02:53:55,359
together there are solutions to do this

02:53:52,000 --> 02:53:57,200
um i'm not in this area space um talk to

02:53:55,359 --> 02:53:58,560
other people that are i'm way below that

02:53:57,200 --> 02:54:00,479
so i don't know too much about this

02:53:58,560 --> 02:54:02,080
stuff

02:54:00,479 --> 02:54:03,359
um apple doesn't follow this at all they

02:54:02,080 --> 02:54:05,120
change things all the time just delete

02:54:03,359 --> 02:54:06,160
apis you don't see the came kind of

02:54:05,120 --> 02:54:09,200
upset about this

02:54:06,160 --> 02:54:09,840
um you don't see the developers are you

02:54:09,200 --> 02:54:11,520
kidding me

02:54:09,840 --> 02:54:13,760
apple's lost more developers over time

02:54:11,520 --> 02:54:16,560
than anybody else um

02:54:13,760 --> 02:54:17,600
developers for apple products are mad

02:54:16,560 --> 02:54:19,120
and they don't like it

02:54:17,600 --> 02:54:20,960
and you see them complaining all the

02:54:19,120 --> 02:54:21,439
time they are willing to put up with it

02:54:20,960 --> 02:54:22,720
because

02:54:21,439 --> 02:54:24,800
that's their business and that's their

02:54:22,720 --> 02:54:26,080
job they don't like it they don't like

02:54:24,800 --> 02:54:29,279
it at all um

02:54:26,080 --> 02:54:30,399
so i i think apple's being providing a

02:54:29,279 --> 02:54:32,720
disservice by

02:54:30,399 --> 02:54:34,160
doing that um now i know why apple wants

02:54:32,720 --> 02:54:35,680
to do that because it's hard to keep

02:54:34,160 --> 02:54:38,000
things around for a long time

02:54:35,680 --> 02:54:39,200
but um to say that it doesn't cause

02:54:38,000 --> 02:54:41,359
problems is

02:54:39,200 --> 02:54:43,040
naive it does cause problems look at

02:54:41,359 --> 02:54:45,600
there's tons of blog posts about it

02:54:43,040 --> 02:54:47,520
and and arguments about it and how all

02:54:45,600 --> 02:54:50,399
new old applications don't run anymore

02:54:47,520 --> 02:54:51,439
et cetera et cetera it's hard um apple's

02:54:50,399 --> 02:54:52,880
big enough and they throw with their

02:54:51,439 --> 02:54:53,439
weight around and they can get away with

02:54:52,880 --> 02:54:54,479
it um

02:54:53,439 --> 02:54:55,840
but they don't care about their

02:54:54,479 --> 02:54:57,040
developers as much as they care about

02:54:55,840 --> 02:55:00,880
their users

02:54:57,040 --> 02:55:02,080
sorry um any kernel technology user

02:55:00,880 --> 02:55:04,560
space devs yes

02:55:02,080 --> 02:55:06,160
um iou ring user space developers who

02:55:04,560 --> 02:55:07,279
care about i o should pay attention to

02:55:06,160 --> 02:55:08,960
that i know the postgres

02:55:07,279 --> 02:55:10,880
developers should looking at it now

02:55:08,960 --> 02:55:12,399
database other database developers that

02:55:10,880 --> 02:55:15,760
is asynchronous io

02:55:12,399 --> 02:55:17,520
no system call overhead very very fast

02:55:15,760 --> 02:55:18,960
io you can throw things into a ring and

02:55:17,520 --> 02:55:19,920
you get notified user space when your

02:55:18,960 --> 02:55:22,560
data is there

02:55:19,920 --> 02:55:23,920
um very very good if you care about io i

02:55:22,560 --> 02:55:25,520
recommend looking at that

02:55:23,920 --> 02:55:27,439
ebpf if you care about networking and

02:55:25,520 --> 02:55:27,760
networking control planes and stuff like

02:55:27,439 --> 02:55:30,640
that

02:55:27,760 --> 02:55:31,439
um and tracing and modifications of the

02:55:30,640 --> 02:55:34,240
kernel

02:55:31,439 --> 02:55:35,600
as it runs um evpf is great you don't

02:55:34,240 --> 02:55:37,439
have to write kernel modules

02:55:35,600 --> 02:55:38,800
anymore you don't have to write drivers

02:55:37,439 --> 02:55:39,200
anymore you can do some really cool

02:55:38,800 --> 02:55:41,120
stuff

02:55:39,200 --> 02:55:43,279
um ebf just keeps getting better and

02:55:41,120 --> 02:55:46,560
better um there's more um

02:55:43,279 --> 02:55:47,920
there's ebpf um conference last week

02:55:46,560 --> 02:55:49,840
so go look at the notes for that um

02:55:47,920 --> 02:55:50,720
there's a book now about it um it

02:55:49,840 --> 02:55:52,080
changes

02:55:50,720 --> 02:55:54,720
all the time in the kernel but it's

02:55:52,080 --> 02:55:56,080
really really really good

02:55:54,720 --> 02:55:57,359
again that's what's exciting and linux

02:55:56,080 --> 02:55:59,520
development you should pay attention to

02:55:57,359 --> 02:56:01,279
i'm linux is boring we just provide a

02:55:59,520 --> 02:56:03,600
unified way to look at all your hardware

02:56:01,279 --> 02:56:05,920
we support all the hardware

02:56:03,600 --> 02:56:07,200
so but we do so in a boring way that for

02:56:05,920 --> 02:56:08,720
an application you shouldn't care

02:56:07,200 --> 02:56:10,720
because it doesn't matter what hardware

02:56:08,720 --> 02:56:12,720
you run on that being said

02:56:10,720 --> 02:56:14,640
new things new system calls we provide

02:56:12,720 --> 02:56:16,160
um take advantage of those we

02:56:14,640 --> 02:56:18,319
add a new system call every other

02:56:16,160 --> 02:56:20,479
release or so to solve some problem

02:56:18,319 --> 02:56:21,760
um usually they don't get added to the

02:56:20,479 --> 02:56:23,840
library to

02:56:21,760 --> 02:56:25,120
let see quickly you can take advantage

02:56:23,840 --> 02:56:26,880
of on your own and

02:56:25,120 --> 02:56:28,319
it in your application and roll back if

02:56:26,880 --> 02:56:28,880
you don't you can test if it's there or

02:56:28,319 --> 02:56:32,080
not

02:56:28,880 --> 02:56:33,120
um those are good things um i i've

02:56:32,080 --> 02:56:34,399
proposed a few

02:56:33,120 --> 02:56:35,920
system call recently but i don't have

02:56:34,399 --> 02:56:36,720
any actual users for it so it doesn't

02:56:35,920 --> 02:56:38,800
get merged

02:56:36,720 --> 02:56:40,319
um so i need an actual user for it so

02:56:38,800 --> 02:56:43,120
that was to do read and write of

02:56:40,319 --> 02:56:45,680
small files really quickly um or read

02:56:43,120 --> 02:56:49,040
files quickly not writing

02:56:45,680 --> 02:56:52,080
um what happens when you change your up

02:56:49,040 --> 02:56:55,600
to is only important for the new users

02:56:52,080 --> 02:56:58,319
um great we add support for new users

02:56:55,600 --> 02:56:59,040
all the time and you want to support new

02:56:58,319 --> 02:57:01,840
things but

02:56:59,040 --> 02:57:03,040
don't break old users that's the trick

02:57:01,840 --> 02:57:04,479
um i was

02:57:03,040 --> 02:57:05,920
it's sometimes a little different

02:57:04,479 --> 02:57:07,040
because i know there's lots of

02:57:05,920 --> 02:57:09,120
applications that have been around for

02:57:07,040 --> 02:57:11,040
forever that have really old uis

02:57:09,120 --> 02:57:12,080
but they keep those old uis an old ui

02:57:11,040 --> 02:57:13,359
model because they want to keep those

02:57:12,080 --> 02:57:14,640
old original users because that's what

02:57:13,359 --> 02:57:16,880
made them successful

02:57:14,640 --> 02:57:18,399
and you can switch and add new new

02:57:16,880 --> 02:57:18,960
properties and new things for new users

02:57:18,399 --> 02:57:21,359
as well

02:57:18,960 --> 02:57:22,479
it's hard i'm not saying it's easy to do

02:57:21,359 --> 02:57:23,840
but this is why you're writing

02:57:22,479 --> 02:57:24,960
application software and not kernel

02:57:23,840 --> 02:57:26,000
software right because you like doing

02:57:24,960 --> 02:57:29,200
this type of stuff

02:57:26,000 --> 02:57:31,040
just at least be nice to your users

02:57:29,200 --> 02:57:32,800
what's the best way for developers to

02:57:31,040 --> 02:57:33,439
stay up to date on kernel tech on linux

02:57:32,800 --> 02:57:36,640
weekly news

02:57:33,439 --> 02:57:38,720
lwn.net i you can subscribe to it

02:57:36,640 --> 02:57:40,160
um they're a great organization or you

02:57:38,720 --> 02:57:41,120
can just wait two weeks and the articles

02:57:40,160 --> 02:57:42,560
come out after that

02:57:41,120 --> 02:57:44,080
if you're two weeks behind on latest

02:57:42,560 --> 02:57:45,760
kernel development you're perfectly fine

02:57:44,080 --> 02:57:47,359
so i recommend doing that

02:57:45,760 --> 02:57:49,760
um that's the best way that's how we all

02:57:47,359 --> 02:57:52,399
get know things what uh going on we all

02:57:49,760 --> 02:57:57,120
read it as well

02:57:52,399 --> 02:58:00,479
um i think i

02:57:57,120 --> 02:58:00,479
answered all the questions

02:58:02,000 --> 02:58:05,840
anything else

02:58:11,120 --> 02:58:14,240
oh man oh man very tough was it what it

02:58:13,840 --> 02:58:17,279
was

02:58:14,240 --> 02:58:19,040
thank you so much for the greatness okay

02:58:17,279 --> 02:58:21,200
i gotta answer this last question the

02:58:19,040 --> 02:58:23,279
colors so there's a question

02:58:21,200 --> 02:58:25,359
um during the first corona breakdown i

02:58:23,279 --> 02:58:26,240
live in europe our lockdown my daughter

02:58:25,359 --> 02:58:28,319
had to come home for

02:58:26,240 --> 02:58:30,240
university and she was in i'm in the

02:58:28,319 --> 02:58:32,080
library she color-coded

02:58:30,240 --> 02:58:33,359
native the books that be for her

02:58:32,080 --> 02:58:35,840
conference calls for her

02:58:33,359 --> 02:58:36,399
university talks i didn't color code the

02:58:35,840 --> 02:58:37,600
books

02:58:36,399 --> 02:58:39,680
she did that so it was very

02:58:37,600 --> 02:58:42,319
instagrammable

02:58:39,680 --> 02:58:44,319
i take advantage i take i give her full

02:58:42,319 --> 02:58:47,520
credit for that effort

02:58:44,319 --> 02:58:50,160
it makes a pretty background

02:58:47,520 --> 02:58:50,160
sorry okay

02:58:51,200 --> 02:58:54,640
thank you so much sir for this great

02:58:52,720 --> 02:58:56,160
talk i'm sure that this talk would have

02:58:54,640 --> 02:58:56,960
enlightened and open source linux

02:58:56,160 --> 02:58:58,880
developers

02:58:56,960 --> 02:59:00,240
ladies and gentlemen that was greg crowe

02:58:58,880 --> 02:59:02,240
hartman and

02:59:00,240 --> 02:59:04,399
some important things that i want to

02:59:02,240 --> 02:59:05,680
tell you don't miss our breakout session

02:59:04,399 --> 02:59:09,600
today starting at

02:59:05,680 --> 02:59:11,760
110 utc uh 1310 utc and also the office

02:59:09,600 --> 02:59:13,120
hours of our champion sponsors canonical

02:59:11,760 --> 02:59:15,520
and collaborate

02:59:13,120 --> 02:59:17,520
secondly our first social event amalfi

02:59:15,520 --> 02:59:20,240
coast tour will take place tonight at

02:59:17,520 --> 02:59:22,160
2100 utc in the main track

02:59:20,240 --> 02:59:24,000
it will take us virtually in one of the

02:59:22,160 --> 02:59:24,560
most beautiful places in italy and

02:59:24,000 --> 02:59:28,080
europe

02:59:24,560 --> 02:59:29,600
oh man how i wish i was there also a big

02:59:28,080 --> 02:59:32,240
thank you to all our sponsors

02:59:29,600 --> 02:59:32,800
starting with collabra canonical code

02:59:32,240 --> 02:59:36,319
thing

02:59:32,800 --> 02:59:43,840
red hat and elementary have a nice break

02:59:36,319 --> 02:59:43,840
see you soon

03:00:04,880 --> 03:00:06,960

YouTube URL: https://www.youtube.com/watch?v=u8SI6AEwMnQ


