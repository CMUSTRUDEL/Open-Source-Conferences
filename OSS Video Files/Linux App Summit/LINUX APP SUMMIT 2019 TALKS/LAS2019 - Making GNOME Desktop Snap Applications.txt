Title: LAS2019 - Making GNOME Desktop Snap Applications
Publication date: 2019-12-23
Playlist: LINUX APP SUMMIT 2019 TALKS
Description: 
	Making GNOME Desktop Snap Applications

Heather Ellsworth
Captions: 
	00:00:00,500 --> 00:00:07,950
can you all hear me oh wow that's loud

00:00:03,030 --> 00:00:09,660
okay yep I'm Heather Ellsworth hi nice

00:00:07,950 --> 00:00:13,670
to see you all I'm here to tell you

00:00:09,660 --> 00:00:17,220
about kinome desktop snap applications

00:00:13,670 --> 00:00:19,800
so I've been a canonical for to 2 months

00:00:17,220 --> 00:00:24,029
now and this is basically what I've been

00:00:19,800 --> 00:00:26,910
working on so making it easier to make

00:00:24,029 --> 00:00:28,949
gnome desktop snaps so I'm going to

00:00:26,910 --> 00:00:34,230
introduce some snap crafts genome

00:00:28,949 --> 00:00:36,239
extensions so here we go so before I get

00:00:34,230 --> 00:00:38,969
into like what I've done just dive into

00:00:36,239 --> 00:00:40,170
the details right brief outline I want

00:00:38,969 --> 00:00:42,059
to lay some foundation because not

00:00:40,170 --> 00:00:44,340
everybody's familiar with snap and snap

00:00:42,059 --> 00:00:47,489
crafts are so we'll talk about what are

00:00:44,340 --> 00:00:50,000
snaps briefly what's snap craft what

00:00:47,489 --> 00:00:55,469
some of the core pieces of the metadata

00:00:50,000 --> 00:00:57,780
packaging file is and how we can improve

00:00:55,469 --> 00:01:01,020
the developer experience by using this

00:00:57,780 --> 00:01:04,589
new genome snap craft extension and kind

00:01:01,020 --> 00:01:07,020
of what is next so let's lay some

00:01:04,589 --> 00:01:09,240
foundation and talk about snap snap

00:01:07,020 --> 00:01:12,479
craft what the heck are they

00:01:09,240 --> 00:01:17,509
snaps are simply a bundled app with its

00:01:12,479 --> 00:01:19,409
dependencies that will work across many

00:01:17,509 --> 00:01:22,650
districts distributions without

00:01:19,409 --> 00:01:25,320
modification so this is really handy if

00:01:22,650 --> 00:01:27,360
you have an application that depends on

00:01:25,320 --> 00:01:29,820
a newer library that maybe your distro

00:01:27,360 --> 00:01:31,500
doesn't provide or depends on an older

00:01:29,820 --> 00:01:34,310
library that's getting deprecated right

00:01:31,500 --> 00:01:36,659
if you have python 2 7 applications that

00:01:34,310 --> 00:01:38,759
are not going to be rewritten any time

00:01:36,659 --> 00:01:44,220
soon you can absolutely snap them and

00:01:38,759 --> 00:01:47,640
can retain a user base it also provides

00:01:44,220 --> 00:01:50,189
like a path to give your users

00:01:47,640 --> 00:01:53,399
applications like more updated libraries

00:01:50,189 --> 00:01:54,979
and other dependencies right or you can

00:01:53,399 --> 00:01:58,380
just NAB something over the front of it

00:01:54,979 --> 00:02:01,799
and so stats are discoverable and

00:01:58,380 --> 00:02:03,299
installable from the snap store you

00:02:01,799 --> 00:02:07,860
don't have to install from the snap

00:02:03,299 --> 00:02:10,649
store you can build locally and install

00:02:07,860 --> 00:02:12,810
that snap locally you can give that snap

00:02:10,649 --> 00:02:13,920
package to your friend have them install

00:02:12,810 --> 00:02:14,940
it locally so it doesn't have to be

00:02:13,920 --> 00:02:17,250
with the staff store but that is

00:02:14,940 --> 00:02:20,790
typically how snaps are found and

00:02:17,250 --> 00:02:22,560
installed snaps are built from a tool

00:02:20,790 --> 00:02:26,400
called snap craft we'll get more into

00:02:22,560 --> 00:02:29,849
that next slide and then snaps are run

00:02:26,400 --> 00:02:34,110
and managed by snap D that typically the

00:02:29,849 --> 00:02:36,239
distros provide so snap craft is the

00:02:34,110 --> 00:02:37,800
build tool that is used to build snaps

00:02:36,239 --> 00:02:40,440
they said that just like ten seconds ago

00:02:37,800 --> 00:02:43,370
right and it builds all kinds of snaps

00:02:40,440 --> 00:02:46,050
so historically

00:02:43,370 --> 00:02:48,810
there have been a lot of headless snaps

00:02:46,050 --> 00:02:51,950
so like for IOT robotics that kind of

00:02:48,810 --> 00:02:56,040
thing but we can also do desktop snaps

00:02:51,950 --> 00:02:58,500
targeting mostly KDE and Gnome and then

00:02:56,040 --> 00:03:01,019
yeah it uses the snap crafty animal a

00:02:58,500 --> 00:03:04,950
file of a project in order to build the

00:03:01,019 --> 00:03:06,660
snap and to me what's really important

00:03:04,950 --> 00:03:10,230
is that snap craft is a bunch of knots

00:03:06,660 --> 00:03:16,470
carry Python take it go and check out

00:03:10,230 --> 00:03:18,720
and contribute to and it's great so now

00:03:16,470 --> 00:03:22,109
if we look at you know what some of the

00:03:18,720 --> 00:03:25,530
core genome requirements are for the

00:03:22,109 --> 00:03:29,459
snaps you'll see there's a lot of more

00:03:25,530 --> 00:03:32,820
pieces kind of on top of it then like a

00:03:29,459 --> 00:03:36,000
headless half would have so the snap

00:03:32,820 --> 00:03:39,120
crafty animal for a genome app is gonna

00:03:36,000 --> 00:03:42,930
have many parts some special to it being

00:03:39,120 --> 00:03:44,400
a desktop app some not but obviously

00:03:42,930 --> 00:03:47,340
it's gonna need some sort of genome

00:03:44,400 --> 00:03:51,750
theming info that uses plugs and slots

00:03:47,340 --> 00:03:54,120
and those terms can you know it's not

00:03:51,750 --> 00:03:56,720
real obvious what those mean so I have

00:03:54,120 --> 00:04:01,049
found this picture to be very useful

00:03:56,720 --> 00:04:02,910
that you know a plug is the consumer of

00:04:01,049 --> 00:04:04,560
an interface and a slot as a provider of

00:04:02,910 --> 00:04:06,750
an interface so I actually have this

00:04:04,560 --> 00:04:08,400
printed out and hanging on my wall

00:04:06,750 --> 00:04:13,290
behind my monitor so I don't look at it

00:04:08,400 --> 00:04:15,480
so dice yeah so like an example is if

00:04:13,290 --> 00:04:19,019
you have an application that needs

00:04:15,480 --> 00:04:21,959
access to the camera interface well then

00:04:19,019 --> 00:04:24,990
you have to define some sort of plug

00:04:21,959 --> 00:04:28,139
that consumes that information or for a

00:04:24,990 --> 00:04:30,900
slot an example would be if you

00:04:28,139 --> 00:04:32,819
want to provide with the the name of

00:04:30,900 --> 00:04:34,590
your application is for d-bus to

00:04:32,819 --> 00:04:37,050
register with like gtk application

00:04:34,590 --> 00:04:40,500
registration that is a slot it provides

00:04:37,050 --> 00:04:42,599
this information to the system and then

00:04:40,500 --> 00:04:45,270
there's gonna be a desktop desktop icon

00:04:42,599 --> 00:04:47,340
because people want to click on icons to

00:04:45,270 --> 00:04:48,979
run their app I mean you can also run

00:04:47,340 --> 00:04:54,509
your snap from the command line but

00:04:48,979 --> 00:04:56,340
desktop apps are important one nice

00:04:54,509 --> 00:04:58,169
thing is so there's going to be an app

00:04:56,340 --> 00:05:00,599
section that defines what the apps are

00:04:58,169 --> 00:05:03,389
that are made that are bundled in this

00:05:00,599 --> 00:05:07,080
application this snap and it can have

00:05:03,389 --> 00:05:08,430
more than one you can actually that can

00:05:07,080 --> 00:05:10,830
be pretty useful if you wanted to

00:05:08,430 --> 00:05:15,960
provide a toolbox of stuff like there's

00:05:10,830 --> 00:05:18,900
this snappy debug snap that has six apps

00:05:15,960 --> 00:05:20,729
that are all fantastic for you know

00:05:18,900 --> 00:05:23,639
using it's it's essentially like a

00:05:20,729 --> 00:05:27,389
toolbox for debugging events is another

00:05:23,639 --> 00:05:29,819
great one it snaps or it provides three

00:05:27,389 --> 00:05:32,819
different apps events even its previewer

00:05:29,819 --> 00:05:34,469
even some naylor so there's an app

00:05:32,819 --> 00:05:36,719
section and then there's a part section

00:05:34,469 --> 00:05:40,400
and the part section is really what I

00:05:36,719 --> 00:05:42,930
feel like is the meat of the y Amal and

00:05:40,400 --> 00:05:48,870
all of the parts come together to build

00:05:42,930 --> 00:05:52,789
the apps so parts that are you so there

00:05:48,870 --> 00:05:55,919
are a lot of common pieces common parts

00:05:52,789 --> 00:06:00,659
used across genome applications there

00:05:55,919 --> 00:06:04,409
are a lot of common plugs and and so on

00:06:00,659 --> 00:06:06,180
so some examples of parts that use

00:06:04,409 --> 00:06:08,310
libraries need to buy kinome themed up

00:06:06,180 --> 00:06:11,520
specifically you'd be like gee Lib you

00:06:08,310 --> 00:06:17,099
see lib gtq 3wz object introspection

00:06:11,520 --> 00:06:21,770
that kind of thing so how can we improve

00:06:17,099 --> 00:06:24,719
the developer experience by using its

00:06:21,770 --> 00:06:26,550
extensions snap craft extensions so I

00:06:24,719 --> 00:06:29,069
said the word common a lot at least I

00:06:26,550 --> 00:06:30,900
think it a lot there are a lot of common

00:06:29,069 --> 00:06:32,939
pieces across these genome apps and so

00:06:30,900 --> 00:06:34,889
what you would find before these

00:06:32,939 --> 00:06:36,959
extensions is you would say okay well

00:06:34,889 --> 00:06:38,610
how am I going to snap this you go find

00:06:36,959 --> 00:06:40,530
some examples on the forum they all have

00:06:38,610 --> 00:06:42,780
these common pieces

00:06:40,530 --> 00:06:45,120
so what what we want to do is abstract

00:06:42,780 --> 00:06:47,280
those away so no longer do you need to

00:06:45,120 --> 00:06:50,700
copy and paste it's just kind of done

00:06:47,280 --> 00:06:53,490
for you we want to provide new libraries

00:06:50,700 --> 00:06:55,530
to the users because our current base is

00:06:53,490 --> 00:06:57,240
abun to 1804 which you know it's a

00:06:55,530 --> 00:07:00,270
couple years old oh I'm almost right so

00:06:57,240 --> 00:07:02,400
when to give newer libraries and then a

00:07:00,270 --> 00:07:05,040
common build environment is always nice

00:07:02,400 --> 00:07:09,210
so you don't have to well we'll get it

00:07:05,040 --> 00:07:10,770
two more so what is the extension

00:07:09,210 --> 00:07:13,140
exactly

00:07:10,770 --> 00:07:16,110
it's it is an alternative method of

00:07:13,140 --> 00:07:18,750
building snaps you don't have to use it

00:07:16,110 --> 00:07:21,510
you can of course still provide the

00:07:18,750 --> 00:07:23,310
traditional theming information and

00:07:21,510 --> 00:07:26,550
build environment and what-have-you but

00:07:23,310 --> 00:07:28,800
it it I don't know why you wouldn't I

00:07:26,550 --> 00:07:33,870
guess this is where I'm going with that

00:07:28,800 --> 00:07:35,910
it is snap craft code so the gnome 328

00:07:33,870 --> 00:07:39,990
was the first extension that was kind of

00:07:35,910 --> 00:07:42,390
the experiment of this and then some

00:07:39,990 --> 00:07:43,250
work was done on genome 332 to kind of

00:07:42,390 --> 00:07:45,720
make it better

00:07:43,250 --> 00:07:49,500
abstract his builds an and platform snap

00:07:45,720 --> 00:07:52,290
from each other but 334 came out before

00:07:49,500 --> 00:07:54,240
you know him 332 extension could be

00:07:52,290 --> 00:07:59,130
released so that work was just rolled

00:07:54,240 --> 00:08:00,960
into the 334 and then genome 334 snap

00:07:59,130 --> 00:08:02,160
craft extension is almost ready for

00:08:00,960 --> 00:08:04,950
release so it's trying to get it

00:08:02,160 --> 00:08:08,550
released before I came here but maybe in

00:08:04,950 --> 00:08:12,360
the next couple of weeks it will be and

00:08:08,550 --> 00:08:14,250
the extension uses a build snap and a

00:08:12,360 --> 00:08:16,560
platform snap so do I mean by that a

00:08:14,250 --> 00:08:18,600
build snap is basically a snap that just

00:08:16,560 --> 00:08:21,350
builds a whole host of libraries there's

00:08:18,600 --> 00:08:26,490
about three dozen common libraries that

00:08:21,350 --> 00:08:28,560
genome snaps need like G Lib I mean I

00:08:26,490 --> 00:08:30,750
mentioned some earlier but it also

00:08:28,560 --> 00:08:36,300
builds like harf buzz and pango Cairo

00:08:30,750 --> 00:08:42,690
and so many things so it builds these

00:08:36,300 --> 00:08:45,480
these libraries from source and then the

00:08:42,690 --> 00:08:49,170
platform snap basically takes that build

00:08:45,480 --> 00:08:50,850
snap and then makes it available to your

00:08:49,170 --> 00:08:53,100
snap so that you have access to all of

00:08:50,850 --> 00:08:54,150
that stuff for build time but it's not

00:08:53,100 --> 00:08:56,100
packaged in your snow

00:08:54,150 --> 00:08:58,170
so it's not giant right you're not

00:08:56,100 --> 00:09:00,029
packaging gee love with every app but

00:08:58,170 --> 00:09:01,440
you have access to that new G Lib every

00:09:00,029 --> 00:09:06,360
time you build your snaps so that's very

00:09:01,440 --> 00:09:10,770
handy the extension also removes the

00:09:06,360 --> 00:09:12,900
need to use explicit Nome plugs and it

00:09:10,770 --> 00:09:14,820
simplifies the app specific plugs and

00:09:12,900 --> 00:09:17,790
then it obviates the need for these

00:09:14,820 --> 00:09:20,640
desktop launcher scripts these helper

00:09:17,790 --> 00:09:25,620
scripts that you also found yourself

00:09:20,640 --> 00:09:27,240
copy and pasting a lot so I know there's

00:09:25,620 --> 00:09:31,050
a lot here right this is just a snippet

00:09:27,240 --> 00:09:35,970
of an app yeah a snap crafty animal and

00:09:31,050 --> 00:09:38,070
because it's camel I tried to bold the

00:09:35,970 --> 00:09:40,950
the kind of top-level pieces so like

00:09:38,070 --> 00:09:43,950
plug slots app parts that's all like

00:09:40,950 --> 00:09:46,860
kind of the top level of the ammo and

00:09:43,950 --> 00:09:49,260
you can see that like so we have all of

00:09:46,860 --> 00:09:51,390
the theming stuff we were always copy

00:09:49,260 --> 00:09:55,050
pasting that from some existing you know

00:09:51,390 --> 00:09:57,660
map the slot that's where we can that's

00:09:55,050 --> 00:10:00,930
where you commonly see the d-bus name

00:09:57,660 --> 00:10:03,900
listed and then the the list of apps so

00:10:00,930 --> 00:10:07,140
this is an example of Tolley fur for

00:10:03,900 --> 00:10:09,390
example and in this case there's one app

00:10:07,140 --> 00:10:11,760
which is quite common and then we point

00:10:09,390 --> 00:10:12,209
to the desktop icon and then we list our

00:10:11,760 --> 00:10:14,790
parts

00:10:12,209 --> 00:10:17,550
so in this camel we had two parts we had

00:10:14,790 --> 00:10:20,640
the kind of helpers desktop helpers

00:10:17,550 --> 00:10:22,560
scripts and then we had the app itself

00:10:20,640 --> 00:10:23,820
and there's a dot dot dot here because

00:10:22,560 --> 00:10:28,620
there was a lot more and it wasn't

00:10:23,820 --> 00:10:30,870
really relevant here so so that so you

00:10:28,620 --> 00:10:33,930
know in the 3:32 branch this is what the

00:10:30,870 --> 00:10:37,050
staff crafting gamal is and then if we

00:10:33,930 --> 00:10:40,830
apply the extension we can get rid of

00:10:37,050 --> 00:10:44,040
all of this we can remove in this case

00:10:40,830 --> 00:10:46,020
all of the app specific plugs we can

00:10:44,040 --> 00:10:48,630
remove this entire part and then tally

00:10:46,020 --> 00:10:51,480
no longer needs to build after that part

00:10:48,630 --> 00:10:53,490
is built and all we do is add the

00:10:51,480 --> 00:10:56,220
extension essentially change the command

00:10:53,490 --> 00:10:59,010
so you're you're essentially removing 30

00:10:56,220 --> 00:11:02,700
lines of code and you're making it more

00:10:59,010 --> 00:11:06,089
intuitive so if a new person is coming

00:11:02,700 --> 00:11:06,710
to snap something it makes sense to add

00:11:06,089 --> 00:11:10,280
and

00:11:06,710 --> 00:11:14,570
tension assuming that they know what you

00:11:10,280 --> 00:11:18,590
know 334 328 is right that that is AG

00:11:14,570 --> 00:11:20,900
anomalies so that's really nice that's

00:11:18,590 --> 00:11:25,880
it's it's a much more intuitive much

00:11:20,900 --> 00:11:30,320
more maintainable data file to carry

00:11:25,880 --> 00:11:31,760
forward so I mentioned briefly that we

00:11:30,320 --> 00:11:35,210
have this build snap that's kind of like

00:11:31,760 --> 00:11:37,940
an underlying piece that really the

00:11:35,210 --> 00:11:39,980
person building a snap doesn't need to

00:11:37,940 --> 00:11:42,140
care about but because it's a key

00:11:39,980 --> 00:11:44,650
integral part of the extension and I

00:11:42,140 --> 00:11:47,390
wanted to tell you a little bit about it

00:11:44,650 --> 00:11:51,470
so we I told you there were like three

00:11:47,390 --> 00:11:55,820
dozen projects that we build from source

00:11:51,470 --> 00:11:57,560
and we do that from either the latest

00:11:55,820 --> 00:12:00,890
stable going on branch if that's if

00:11:57,560 --> 00:12:03,890
there's a 334 branch if not then we look

00:12:00,890 --> 00:12:07,730
for the latest stable branch or tag or

00:12:03,890 --> 00:12:10,250
what have you and this is this is better

00:12:07,730 --> 00:12:14,840
than using like the default libraries

00:12:10,250 --> 00:12:18,080
that are in an old Ubuntu 1804 base and

00:12:14,840 --> 00:12:21,440
it's really nice that because the build

00:12:18,080 --> 00:12:24,830
snap though all of those libraries are

00:12:21,440 --> 00:12:27,890
provided to any snap you build using an

00:12:24,830 --> 00:12:30,170
extension so you don't have to list any

00:12:27,890 --> 00:12:33,530
of those packages that would be used in

00:12:30,170 --> 00:12:37,970
your snap so you can thin it down that

00:12:33,530 --> 00:12:42,140
way too and then this is the the get lab

00:12:37,970 --> 00:12:43,550
repo for genome SDK which is there's a

00:12:42,140 --> 00:12:47,720
branch for the build snap there's a

00:12:43,550 --> 00:12:50,840
branch for a platform snap and then we

00:12:47,720 --> 00:12:55,430
have a common build environment this is

00:12:50,840 --> 00:12:59,600
really nice so I found myself going now

00:12:55,430 --> 00:13:04,030
where are the the GDK pics buff loaders

00:12:59,600 --> 00:13:07,790
again and linking to that every time so

00:13:04,030 --> 00:13:09,470
the this is only what seven seven

00:13:07,790 --> 00:13:14,180
environment variables and we're using

00:13:09,470 --> 00:13:17,000
the gtk portals as well and this entire

00:13:14,180 --> 00:13:20,180
environment is available to every part

00:13:17,000 --> 00:13:20,339
in every snap that you build that uses

00:13:20,180 --> 00:13:22,800
the

00:13:20,339 --> 00:13:24,689
extension now of course you can

00:13:22,800 --> 00:13:27,990
overwrite them if it doesn't work if you

00:13:24,689 --> 00:13:30,329
know this if your get text is in a

00:13:27,990 --> 00:13:32,850
different location then okay you can

00:13:30,329 --> 00:13:36,540
overwrite it as needed right if you need

00:13:32,850 --> 00:13:38,879
full control but it's important that you

00:13:36,540 --> 00:13:41,720
know we do kind of lay the ground in

00:13:38,879 --> 00:13:47,459
this you know build environments just to

00:13:41,720 --> 00:13:49,980
make it useful to all the parts so yeah

00:13:47,459 --> 00:13:53,959
that's nice okay so that's really cool

00:13:49,980 --> 00:13:53,959
right what is next

00:13:54,019 --> 00:14:00,149
well maintenance is a really big part so

00:13:57,029 --> 00:14:05,850
there are a lot of good know mats that

00:14:00,149 --> 00:14:09,300
exist that have snaps most in most cases

00:14:05,850 --> 00:14:11,759
the snap metadata is living in the

00:14:09,300 --> 00:14:14,430
project itself in get lab kinome org or

00:14:11,759 --> 00:14:16,019
whatever and so it's important to go

00:14:14,430 --> 00:14:21,029
through each one of those and update

00:14:16,019 --> 00:14:23,970
them to use the new extension and modify

00:14:21,029 --> 00:14:26,129
any you know remove any build packages

00:14:23,970 --> 00:14:29,850
that don't need to be there because

00:14:26,129 --> 00:14:31,589
they're provided in the build snap and

00:14:29,850 --> 00:14:33,540
yeah just kind of making sure that all

00:14:31,589 --> 00:14:36,740
of the snap metadata out there for the

00:14:33,540 --> 00:14:38,670
various apps is up-to-date right

00:14:36,740 --> 00:14:40,170
documentation is never done

00:14:38,670 --> 00:14:42,139
and anybody that knows me knows I love

00:14:40,170 --> 00:14:44,519
documentation like a crazy person

00:14:42,139 --> 00:14:48,809
so yeah that's always undergoing

00:14:44,519 --> 00:14:50,339
improvements by myself and community so

00:14:48,809 --> 00:14:54,319
that's great and then we really want to

00:14:50,339 --> 00:14:58,290
encourage community involvement because

00:14:54,319 --> 00:15:01,019
you know the these are all projects that

00:14:58,290 --> 00:15:02,790
we care about some may care about some

00:15:01,019 --> 00:15:07,709
projects more than others and so that's

00:15:02,790 --> 00:15:10,889
okay I want to I want to help project

00:15:07,709 --> 00:15:14,179
maintainer x' become more involved in

00:15:10,889 --> 00:15:17,759
the maintenance of their project snap

00:15:14,179 --> 00:15:19,980
even if that's just like I submit a pull

00:15:17,759 --> 00:15:22,379
request and then you build it and test

00:15:19,980 --> 00:15:24,389
it and say cool yeah it runs right I

00:15:22,379 --> 00:15:29,639
mean I'm gonna do that too before I send

00:15:24,389 --> 00:15:31,860
a pull request but yeah I mean if people

00:15:29,639 --> 00:15:33,809
are interested in learning a little bit

00:15:31,860 --> 00:15:34,180
more I'm always available to answer

00:15:33,809 --> 00:15:35,529
questions

00:15:34,180 --> 00:15:38,740
and if I don't know the answer to

00:15:35,529 --> 00:15:43,260
questions I'll certainly you know get

00:15:38,740 --> 00:15:46,000
you to the right person and learn myself

00:15:43,260 --> 00:15:48,029
and you can expect a new genomics

00:15:46,000 --> 00:15:51,339
tension for every genome release so you

00:15:48,029 --> 00:15:54,700
know in 334 was released some time ago

00:15:51,339 --> 00:15:57,370
and the extension is you know not out

00:15:54,700 --> 00:15:59,709
there yet but in the future I would like

00:15:57,370 --> 00:16:02,140
it to be pretty quick and since we've

00:15:59,709 --> 00:16:05,140
kind of got a lot of foundation for the

00:16:02,140 --> 00:16:08,709
genome 334 like the build snap the

00:16:05,140 --> 00:16:12,180
platform staff and all that jazz then it

00:16:08,709 --> 00:16:14,830
should be easier to get those out faster

00:16:12,180 --> 00:16:18,420
another cool thing is that we have a

00:16:14,830 --> 00:16:22,110
snap packaging workshop tomorrow in the

00:16:18,420 --> 00:16:24,580
salad Iranians room from 1:00 to 3:00

00:16:22,110 --> 00:16:26,800
where we're gonna have a good time we're

00:16:24,580 --> 00:16:29,440
going to talk about snap packaging we

00:16:26,800 --> 00:16:31,720
can help anybody package their snap if

00:16:29,440 --> 00:16:35,170
you have packaging issues or just tough

00:16:31,720 --> 00:16:38,350
questions come join us

00:16:35,170 --> 00:16:40,390
here's some useful links so that's where

00:16:38,350 --> 00:16:42,820
the snap craft code is the build tool

00:16:40,390 --> 00:16:44,500
right and then the SDK which is the

00:16:42,820 --> 00:16:47,500
building platform snap you can find it

00:16:44,500 --> 00:16:51,220
here and then there's the Talley example

00:16:47,500 --> 00:16:53,440
that I gave all the snap store Doc's

00:16:51,220 --> 00:16:56,380
forum it can all be found on snap craft

00:16:53,440 --> 00:17:00,790
at i/o and then here's my canned own

00:16:56,380 --> 00:17:02,770
blog where I have posted these slides so

00:17:00,790 --> 00:17:05,819
thank you very much

00:17:02,770 --> 00:17:11,520
are there any questions you can find me

00:17:05,819 --> 00:17:11,520
on the interwebs with this stuff

00:17:13,000 --> 00:17:21,339
[Applause]

00:17:26,089 --> 00:17:33,090
hi thank you for the presentation if I

00:17:30,270 --> 00:17:36,420
understood well the extensions are kind

00:17:33,090 --> 00:17:38,010
of mounted in the application namespace

00:17:36,420 --> 00:17:41,090
something like that so they can see all

00:17:38,010 --> 00:17:45,240
the files this sounds a little bit like

00:17:41,090 --> 00:17:49,110
flat-pack runtimes and I was wondering

00:17:45,240 --> 00:17:54,950
if you consider basing your attention in

00:17:49,110 --> 00:17:59,010
just non runtime just using the same

00:17:54,950 --> 00:18:01,770
yeah that's a good question so I know

00:17:59,010 --> 00:18:06,330
that Valentin and his team have done a

00:18:01,770 --> 00:18:10,050
lot of work on making the freed the

00:18:06,330 --> 00:18:13,980
freest free desktop SDK available to be

00:18:10,050 --> 00:18:16,980
used by snaps as well and his talk

00:18:13,980 --> 00:18:18,540
earlier in the week kind of showed that

00:18:16,980 --> 00:18:20,370
that was working on that it's

00:18:18,540 --> 00:18:21,870
experimental I didn't realize it was so

00:18:20,370 --> 00:18:25,170
far along so I'm excited to go try it

00:18:21,870 --> 00:18:29,550
like after the conference but using that

00:18:25,170 --> 00:18:34,140
as a base instead of strictly a boon to

00:18:29,550 --> 00:18:35,820
18:04 base is in the plan and I hope we

00:18:34,140 --> 00:18:38,340
can do that and then yeah if we can put

00:18:35,820 --> 00:18:42,110
more stuff maybe in the gnome runtime

00:18:38,340 --> 00:18:46,110
that might make sense to do can I

00:18:42,110 --> 00:18:49,050
quickly add the previous question so if

00:18:46,110 --> 00:18:51,270
you're going on top of the free desktop

00:18:49,050 --> 00:18:54,510
SDK then you could although we could

00:18:51,270 --> 00:18:57,500
also like consider adding directly the

00:18:54,510 --> 00:19:00,540
upstream around I'm the same snap craft

00:18:57,500 --> 00:19:02,700
exports so we could like directly build

00:19:00,540 --> 00:19:04,320
flood the flood work and the snap done

00:19:02,700 --> 00:19:06,750
about the same time so you don't even

00:19:04,320 --> 00:19:09,690
have to rebase your work on it it's like

00:19:06,750 --> 00:19:12,990
one source tree we could build the ball

00:19:09,690 --> 00:19:13,290
yeah yeah definitely I couldn't agree

00:19:12,990 --> 00:19:17,880
more

00:19:13,290 --> 00:19:21,290
I mean I think until that is readily

00:19:17,880 --> 00:19:24,870
available and stable and we're using it

00:19:21,290 --> 00:19:28,090
it's fairly easy to slap this together

00:19:24,870 --> 00:19:30,190
right and provide this to users

00:19:28,090 --> 00:19:32,409
but then I think once we have a shared

00:19:30,190 --> 00:19:34,590
base with flat-pack we should definitely

00:19:32,409 --> 00:19:34,590
use that

00:19:42,490 --> 00:19:50,219
okay thank you very much

00:19:44,960 --> 00:19:50,219

YouTube URL: https://www.youtube.com/watch?v=HJT8R2qK3Go


