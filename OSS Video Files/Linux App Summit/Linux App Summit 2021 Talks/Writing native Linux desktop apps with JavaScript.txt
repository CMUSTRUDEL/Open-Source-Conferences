Title: Writing native Linux desktop apps with JavaScript
Publication date: 2021-05-30
Playlist: Linux App Summit 2021 Talks
Description: 
	If you are a JavaScript developer and want to write something for the Linux desktop in JavaScript, two popular ways are to use Electron or to publish an extension for GNOME Shell on extensions.gnome.org. However, there is a third way that doesn't require users to use GNOME and doesn't require embedding a web browser!

In this talk I will walk through the process of creating a native desktop app written in JavaScript and publishing it to users.

Twitter and/or Mastodon Handle

@therealptomato


Author(s) Bio

Philip Chimento is a GNOME contributor, and the maintainer of GNOME's JavaScript bindings, as well as the author of the Inform 7 IDE on Flathub. His day job is being a JavaScript engine developer at Igalia S.L.


Q&A


1. Isn't Glade UI deprecated for creating UIs?

2. For maintainance, which is better? XML or code?

3.  Which language is GJS built upon?

4. is there an easy way to add a webview/browser widget? (no experience with gtk, sorry for the stupid question)

5. can GJS be used cross platform (Linux, Win, Mac, Android, iOS)?

6. how does GJS compare to electron performance and memory wise?

6.1. Is it native code? Or is it JS runtime in GJS running? Or native code for gui elements, and js for my logic, wirrten in js.

7.  Can this GJS be easily packed for windows and mac?

8. Is there http2 support in gjs, and is it transparent?

9. is webkitgtk cross-platform as well, like available in windows, mac as well?

10. Will it have good compatibility in respect to UI with QT? yes GJS.

11. RUST story?use of rust lib
YouTube URL: https://www.youtube.com/watch?v=YqmmK16rIm4


