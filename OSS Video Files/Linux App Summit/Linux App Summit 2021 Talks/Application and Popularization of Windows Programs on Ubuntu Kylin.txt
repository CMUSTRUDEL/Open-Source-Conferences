Title: Application and Popularization of Windows Programs on Ubuntu Kylin
Publication date: 2021-05-30
Playlist: Linux App Summit 2021 Talks
Description: 
	题目
Windows程序在Ubuntu Kylin 系统的应用和推广
Application and Popularization of Windows Programs on Ubuntu Kylin

目录
Index

1.linux 桌面的应用生态现状
The current situation of Linux Application Ecosystem.

Chicken-and-egg problem for Linux on the desktop
This brings us to the chicken and egg issue of Linux on the desktop. Until Linux can provide equivalents for the above applications, its market share on the desktop will stagnate.
But until the market share of Linux on the desktop rises, no vendor will develop applications for Linux. How does one break this vicious circle?

Again, Wine can provide an answer. By letting users reuse the Windows applications they have invested time and money in, Wine dramatically lowers the barrier that prevents users from switching to Linux. This then makes it possible for Linux to take off on the desktop, which increases its market share in that segment. In turn, this makes it viable for companies to produce Linux versions of their applications, and for new products to come out just for the Linux market.
But wine is not user-friendly tools.

2.Wine在windows程序适配中的不足
The weak point of Wine on Windows Programs Porting for linux.
Windows 应用wechat 和Tencent Meeting在中国应用广泛，但在wine对这些程序相应的支持不足；wine的使用对大众用户有些困难，需要做一些繁琐的配置工作。
Wechat and Tecent Meeting is popular application On Windows Desktop in China，but these app have many bugs when run them on Linux+wine.
It is a little difficult to use wine for ordinary user. If you want use wine well,you need a lot of configuration work.

3.Ubuntu Kylin 在Wechat适配中做出的工作和贡献
The Kylin Contribution in Wechat adaption On Ukylin OS
截图问题分析，和视频通话问题分析和解决，appimage 格式打应用包等。
In Wechat we resolved some issue such as screen capture fail, video talk fail ,etc. We also try to pack the wine and its depends with appimage format,to handle differences between different linux OS.

4.后续开发计划和展望
Future Research and Development Plan
Richedit，Directshow 等模块问题解决和开发计划，回馈开源，回馈wine 社区。



Author(s) Bio

梁珂铭（keming liang） ：Kylin Software Senior Engeer， in charge of development and research of wine related products。


Q&A


1. What steps must one take to analyze an issue with Wine and try to troubleshoot it?

2. How step is the learning curve to pack a exe into a deb? I am especially worried about writing startup scripts and editing the registries. 

3. Could you try to write a third party application for Wechat, that works in Linux via GTK or Qt or is it prevented in their EULA etc? if someone was up for the task or write a protest list and send them to get an offical client?

4. If I package Microsoft Office Like that with legnimate license will it work?
Captions: 
	00:00:00,399 --> 00:00:06,720
uh hello everyone i'm uh coming

00:00:03,360 --> 00:00:08,000
out from killingsoft today uh my speech

00:00:06,720 --> 00:00:10,080
is the

00:00:08,000 --> 00:00:11,679
subject is the application and the

00:00:10,080 --> 00:00:16,719
population of

00:00:11,679 --> 00:00:16,719
windows uh program on

00:00:18,240 --> 00:00:22,080
i will introduce the work we have done

00:00:20,960 --> 00:00:26,640
to promote

00:00:22,080 --> 00:00:26,640
windows application on linux

00:00:28,840 --> 00:00:34,559
okay uh

00:00:31,359 --> 00:00:36,800
let's speech our this part one right

00:00:34,559 --> 00:00:36,800
okay

00:00:38,399 --> 00:00:45,360
that's the future of this part one

00:00:41,600 --> 00:00:48,480
current saturation of linux application

00:00:45,360 --> 00:00:51,760
ecosystem two

00:00:48,480 --> 00:00:55,360
shorting coming the one one at

00:00:51,760 --> 00:00:58,160
the current stages next

00:00:55,360 --> 00:00:59,440
the work of windows application adoption

00:00:58,160 --> 00:01:02,719
on

00:00:59,440 --> 00:01:05,720
linux by ubuntu killing the first

00:01:02,719 --> 00:01:06,960
part is our future research and

00:01:05,720 --> 00:01:10,159
development

00:01:06,960 --> 00:01:13,840
plan about how to run one

00:01:10,159 --> 00:01:13,840
arm architecture

00:01:15,840 --> 00:01:22,799
let's let's look at the current

00:01:19,439 --> 00:01:26,560
situation of linux application

00:01:22,799 --> 00:01:30,320
echo system uh look at

00:01:26,560 --> 00:01:31,680
this picture windows the windows system

00:01:30,320 --> 00:01:35,200
occupy most of

00:01:31,680 --> 00:01:38,640
the market place so for leaves there

00:01:35,200 --> 00:01:42,399
are a chicken and egg problem

00:01:38,640 --> 00:01:45,840
until linux.com provides equivalence

00:01:42,399 --> 00:01:50,880
for the windows application

00:01:45,840 --> 00:01:54,000
it's its market share on the desktop

00:01:50,880 --> 00:01:57,360
wells designated but until the

00:01:54,000 --> 00:01:59,600
market uh share our linux on that

00:01:57,360 --> 00:02:00,399
that's probably a reason no wonder we'll

00:01:59,600 --> 00:02:03,439
develop

00:02:00,399 --> 00:02:07,360
application for linux uh how should

00:02:03,439 --> 00:02:09,840
we break this vicious circle

00:02:07,360 --> 00:02:09,840
uh

00:02:11,680 --> 00:02:19,680
way the one one is a good

00:02:14,800 --> 00:02:22,879
good answer we will use one in our

00:02:19,680 --> 00:02:25,840
operating system products

00:02:22,879 --> 00:02:27,599
to replacement the user requirement for

00:02:25,840 --> 00:02:30,800
windows application

00:02:27,599 --> 00:02:32,080
and some users have already paid a high

00:02:30,800 --> 00:02:35,680
cost for

00:02:32,080 --> 00:02:39,120
the previous solution they use

00:02:35,680 --> 00:02:42,319
used on windows mainly in terms of

00:02:39,120 --> 00:02:45,120
labor costs leaning costs

00:02:42,319 --> 00:02:47,120
and license fees by reducing the

00:02:45,120 --> 00:02:50,480
migration

00:02:47,120 --> 00:02:53,840
cost in this part more users can be

00:02:50,480 --> 00:02:54,879
attracted to mac microwaves out of the

00:02:53,840 --> 00:02:58,319
windows

00:02:54,879 --> 00:03:01,280
platform we think the

00:02:58,319 --> 00:03:01,760
linux desktop is sufficient for daily

00:03:01,280 --> 00:03:06,159
use

00:03:01,760 --> 00:03:11,360
by normal user but the meaning

00:03:06,159 --> 00:03:14,800
the mean difficulty in dominant specific

00:03:11,360 --> 00:03:18,959
market with the zero cost migration

00:03:14,800 --> 00:03:22,560
solutions describe about

00:03:18,959 --> 00:03:25,599
one it's dramatically

00:03:22,560 --> 00:03:28,000
lower the barriers that that print the

00:03:25,599 --> 00:03:28,000
user

00:03:28,080 --> 00:03:34,959
from switching to leaves which increases

00:03:31,440 --> 00:03:34,959
its market share

00:03:36,319 --> 00:03:39,200
in that dummy

00:03:44,840 --> 00:03:50,239
okay let's look

00:03:47,040 --> 00:03:54,720
look at why when

00:03:50,239 --> 00:03:58,480
architecture and the top the top is

00:03:54,720 --> 00:04:01,840
windows uh esc and the dot and

00:03:58,480 --> 00:04:05,680
the bottom move is the linux kernel

00:04:01,840 --> 00:04:09,519
why is it in the middle it is a comp

00:04:05,680 --> 00:04:12,840
compatibility layer comparable or

00:04:09,519 --> 00:04:15,360
run running windows application on

00:04:12,840 --> 00:04:17,759
several projects

00:04:15,360 --> 00:04:21,759
completing the operating system such as

00:04:17,759 --> 00:04:21,759
linux macos and bsd

00:04:21,919 --> 00:04:28,320
one can load p gram

00:04:24,960 --> 00:04:31,759
like a windows usb stock

00:04:28,320 --> 00:04:35,120
uh underwrite it as an elf

00:04:31,759 --> 00:04:39,199
program on linux

00:04:35,120 --> 00:04:42,320
that the one server can manage

00:04:39,199 --> 00:04:45,600
different with windows apps

00:04:42,320 --> 00:04:46,400
and windows different windows so back

00:04:45,600 --> 00:04:50,960
when

00:04:46,400 --> 00:04:50,960
windows apps can run on the

00:04:54,840 --> 00:05:00,000
linux

00:04:56,160 --> 00:05:03,039
uh let's look at the shortcomings

00:05:00,000 --> 00:05:11,840
one one at the one at

00:05:03,039 --> 00:05:11,840
the current stage

00:05:12,240 --> 00:05:16,400
uh let's look at the shortcomings one at

00:05:15,680 --> 00:05:19,680
the

00:05:16,400 --> 00:05:23,120
uh the kind of strategy which has uh

00:05:19,680 --> 00:05:26,960
undertaken the meeting uh

00:05:23,120 --> 00:05:30,320
are popular applications on windows

00:05:26,960 --> 00:05:31,600
desktop in china but this apps how many

00:05:30,320 --> 00:05:35,120
bugs will run

00:05:31,600 --> 00:05:36,080
them on linux with one and that's part

00:05:35,120 --> 00:05:39,440
of all

00:05:36,080 --> 00:05:42,560
this meanwhile is insufficient

00:05:39,440 --> 00:05:47,280
also the use of one is a

00:05:42,560 --> 00:05:51,440
bit difficult for a normal user and

00:05:47,280 --> 00:05:54,320
a lot of tedious

00:05:51,440 --> 00:05:55,360
configure work configuration work is

00:05:54,320 --> 00:05:59,039
required which

00:05:55,360 --> 00:06:02,319
affects the promotional one one

00:05:59,039 --> 00:06:07,840
one windows application which has

00:06:02,319 --> 00:06:07,840
as a telegram in china

00:06:14,800 --> 00:06:22,319
let's look at the work

00:06:20,000 --> 00:06:23,120
let's look at the work we have done in

00:06:22,319 --> 00:06:26,240
windows

00:06:23,120 --> 00:06:29,759
application adoption on linux

00:06:26,240 --> 00:06:33,680
first we take some files or when

00:06:29,759 --> 00:06:37,039
some bugs are critical secondly

00:06:33,680 --> 00:06:40,720
we developed a windows application

00:06:37,039 --> 00:06:44,479
packaging method based on what

00:06:40,720 --> 00:06:47,520
we packaged we had the windows location

00:06:44,479 --> 00:06:50,560
in deep dabbing

00:06:47,520 --> 00:06:53,919
package aka

00:06:50,560 --> 00:06:58,800
aka dab which is user

00:06:53,919 --> 00:07:02,639
manager also repaired the wind to

00:06:58,800 --> 00:07:06,280
app apb image of the image

00:07:02,639 --> 00:07:10,400
effect which contains all

00:07:06,280 --> 00:07:13,840
32-bit dependencies it can directly

00:07:10,400 --> 00:07:17,120
run between and between the different

00:07:13,840 --> 00:07:18,319
linear just distributions and the free

00:07:17,120 --> 00:07:21,919
sound from

00:07:18,319 --> 00:07:23,039
dependency troubles and then we pass the

00:07:21,919 --> 00:07:27,360
one again

00:07:23,039 --> 00:07:30,960
from package af image to

00:07:27,360 --> 00:07:32,400
that performance to adapt to linux

00:07:30,960 --> 00:07:35,840
package

00:07:32,400 --> 00:07:39,120
management the last

00:07:35,840 --> 00:07:42,240
we also researched how to run one in arm

00:07:39,120 --> 00:07:46,960
architecture with cameo a current

00:07:42,240 --> 00:07:59,840
stage is short it shows

00:07:46,960 --> 00:07:59,840
slowly eventually efficiency

00:08:09,840 --> 00:08:17,840
okay fix some errors about attack which

00:08:13,680 --> 00:08:21,360
text editing uh ad hacking and

00:08:17,840 --> 00:08:26,000
implement some missing features if

00:08:21,360 --> 00:08:28,479
it is used to resolve a display use

00:08:26,000 --> 00:08:29,919
about the text and the image is missing

00:08:28,479 --> 00:08:33,440
in which character

00:08:29,919 --> 00:08:36,479
test error and i also fix the

00:08:33,440 --> 00:08:40,000
videos stream or error

00:08:36,479 --> 00:08:40,000
when you use wechat group

00:08:46,399 --> 00:08:51,839
the picture is the which are

00:08:49,440 --> 00:08:53,519
allowed feature you can share your

00:08:51,839 --> 00:08:56,399
screen and the camera

00:08:53,519 --> 00:08:58,399
with the with your groove and number

00:08:56,399 --> 00:09:02,640
whichever is

00:08:58,399 --> 00:09:02,640
like a telegram in china

00:09:03,040 --> 00:09:09,920
uh oh

00:09:06,320 --> 00:09:13,600
i also analyzed that the

00:09:09,920 --> 00:09:17,760
eco which is which has a kind handcap

00:09:13,600 --> 00:09:21,440
capture screen uh fix the battery

00:09:17,760 --> 00:09:26,000
to one tdi and the gdi plus

00:09:21,440 --> 00:09:29,200
covenant fixed sample error in qcad

00:09:26,000 --> 00:09:37,839
library and we wait for our two java

00:09:29,200 --> 00:09:37,839
it will call the video call field

00:09:42,640 --> 00:09:44,880
uh

00:09:45,760 --> 00:09:51,839
let's look example uh apple

00:09:48,800 --> 00:09:55,360
image information app

00:09:51,839 --> 00:10:00,000
you may have image is a packaging method

00:09:55,360 --> 00:10:03,680
that can sell for content contain

00:10:00,000 --> 00:10:07,600
dependent library the finish

00:10:03,680 --> 00:10:10,880
the uh every major current run are any

00:10:07,600 --> 00:10:14,959
base uh dis distribution

00:10:10,880 --> 00:10:14,959
such as ubuntu

00:10:16,000 --> 00:10:19,839
and central os

00:10:21,200 --> 00:10:26,560
that below is some information about the

00:10:24,079 --> 00:10:30,160
app image

00:10:26,560 --> 00:10:33,839
you can find more details in

00:10:30,160 --> 00:10:33,839
this in a website

00:10:44,640 --> 00:10:53,200
now i will i will introduce

00:10:48,160 --> 00:10:58,320
or method package windows application

00:10:53,200 --> 00:11:01,760
step one target windows updation

00:10:58,320 --> 00:11:04,800
by this this command

00:11:01,760 --> 00:11:08,160
one which has set up the esc and

00:11:04,800 --> 00:11:11,920
copy the red fonts to one container

00:11:08,160 --> 00:11:15,120
uh mod three modify

00:11:11,920 --> 00:11:19,440
some regestry atom that the

00:11:15,120 --> 00:11:19,440
com applications required

00:11:21,600 --> 00:11:28,079
for our way reject

00:11:24,720 --> 00:11:32,000
editor what

00:11:28,079 --> 00:11:36,959
what and why right

00:11:32,000 --> 00:11:41,519
uh the white rather pharaoh continue

00:11:36,959 --> 00:11:44,000
the violence that the fellow contenders

00:11:41,519 --> 00:11:45,120
just repeat that you need to model

00:11:44,000 --> 00:11:47,600
multiply

00:11:45,120 --> 00:11:48,560
which needs to be added as a y and

00:11:47,600 --> 00:11:52,800
reject

00:11:48,560 --> 00:11:57,600
when reduction uh

00:11:52,800 --> 00:11:59,839
six uh file copy further

00:11:57,600 --> 00:11:59,839
to

00:12:00,880 --> 00:12:09,839
to to the package package further and

00:12:05,120 --> 00:12:12,480
dot dot one is the contender of

00:12:09,839 --> 00:12:12,480
recharger

00:12:13,440 --> 00:12:20,399
create six creator icons on the desktop

00:12:17,279 --> 00:12:25,360
entry phase and rather shares

00:12:20,399 --> 00:12:25,360
script to run package

00:12:26,079 --> 00:12:34,480
round package windows application one

00:12:30,480 --> 00:12:39,440
one and add this pair to target target

00:12:34,480 --> 00:12:43,920
target further as the last

00:12:39,440 --> 00:12:47,519
package in the windows application

00:12:43,920 --> 00:12:53,839
with this command tpk

00:12:47,519 --> 00:12:53,839
dktp okay

00:13:00,720 --> 00:13:08,720
uh this sound works

00:13:04,839 --> 00:13:08,720
uh it works and

00:13:09,120 --> 00:13:16,720
uh we also researched how to run one

00:13:12,639 --> 00:13:20,560
arm architecture which is the cameo

00:13:16,720 --> 00:13:24,079
at the current stage our

00:13:20,560 --> 00:13:27,200
autists show it wrong slowly and

00:13:24,079 --> 00:13:31,200
the efficiency is

00:13:27,200 --> 00:13:31,200
low and the method

00:13:31,279 --> 00:13:36,560
under this method how to how to round

00:13:34,800 --> 00:13:40,399
one with cameo in

00:13:36,560 --> 00:13:44,000
is user mode uh cameo

00:13:40,399 --> 00:13:48,240
i 386 and

00:13:44,000 --> 00:13:51,120
another one the following is

00:13:48,240 --> 00:13:51,120
windows apps

00:13:51,600 --> 00:13:59,360
this is the website is a

00:13:55,120 --> 00:13:59,360
manual or cameo

00:14:00,720 --> 00:14:07,680
we also test the box 86

00:14:03,839 --> 00:14:11,120
to run all of some tests

00:14:07,680 --> 00:14:17,839
show is efficient but

00:14:11,120 --> 00:14:17,839
how also many problems

00:14:23,360 --> 00:14:30,760
is some information our boxes 86

00:14:27,199 --> 00:14:34,320
also it is which allow your run

00:14:30,760 --> 00:14:37,600
x86 linux program

00:14:34,320 --> 00:14:40,639
online as it saves the architecture

00:14:37,600 --> 00:14:40,639
left left arm

00:14:41,199 --> 00:14:48,399
the host system needs to be 32

00:14:44,959 --> 00:14:53,040
bit little ending the

00:14:48,399 --> 00:14:57,839
website is its main page

00:14:53,040 --> 00:15:01,440
if your interest interest is

00:14:57,839 --> 00:15:04,720
you can visit this

00:15:01,440 --> 00:15:08,320
website now we found

00:15:04,720 --> 00:15:12,160
the emulator uh

00:15:08,320 --> 00:15:13,519
box data says uh how good good

00:15:12,160 --> 00:15:27,839
performance

00:15:13,519 --> 00:15:27,839
no but how many impacts

00:15:29,839 --> 00:15:33,360
okay this page is our future research

00:15:32,720 --> 00:15:36,880
and the

00:15:33,360 --> 00:15:40,000
developer month plan

00:15:36,880 --> 00:15:43,680
first we will resolve the one box report

00:15:40,000 --> 00:15:43,680
by our customer

00:15:44,720 --> 00:15:51,600
also we will research which edited

00:15:47,759 --> 00:15:55,199
at editing and direct show modding

00:15:51,600 --> 00:15:59,440
module and contribute back to one

00:15:55,199 --> 00:15:59,440
community of a community

00:16:01,279 --> 00:16:08,000
also we will we will research

00:16:04,639 --> 00:16:11,759
other national simulator

00:16:08,000 --> 00:16:16,079
technologies such as extra tier

00:16:11,759 --> 00:16:21,199
box 806 we hope we hope will run windows

00:16:16,079 --> 00:16:24,959
application efficiently to linux

00:16:21,199 --> 00:16:29,040
architecture by the way

00:16:24,959 --> 00:16:31,440
exagger is a good simulator which

00:16:29,040 --> 00:16:34,480
our many windows applications are

00:16:31,440 --> 00:16:34,480
android system

00:16:34,800 --> 00:16:42,079
but is not an open source

00:16:38,800 --> 00:16:45,360
okay my speech

00:16:42,079 --> 00:16:47,839
is over oh my english is not

00:16:45,360 --> 00:16:47,839
as good

00:16:49,360 --> 00:16:51,839
okay

00:16:52,399 --> 00:16:57,600
and any questions thank you for your

00:16:55,199 --> 00:16:57,600
listening

00:16:58,720 --> 00:17:01,120
okay

00:17:01,920 --> 00:17:06,240
thanks for this there are some questions

00:17:04,880 --> 00:17:07,919
in the shared notes

00:17:06,240 --> 00:17:10,079
i'm not sure if you can see if you want

00:17:07,919 --> 00:17:14,160
me to read them aloud

00:17:10,079 --> 00:17:14,160
um okay

00:17:15,280 --> 00:17:23,120
okay i am look at look at looking at

00:17:19,280 --> 00:17:26,400
the channels what was the steps

00:17:23,120 --> 00:17:29,039
must want to take to analyze a issue

00:17:26,400 --> 00:17:33,760
with one and try to

00:17:29,039 --> 00:17:37,280
troubleshoot it um

00:17:33,760 --> 00:17:41,360
a reasonable result with one part is a

00:17:37,280 --> 00:17:44,840
difficult work uh i i think

00:17:41,360 --> 00:17:49,039
uh your you can first you must

00:17:44,840 --> 00:17:52,559
open open you the logo you need

00:17:49,039 --> 00:17:56,400
uh okay you'll also need a

00:17:52,559 --> 00:18:00,880
you also need a learn or no uh windows

00:17:56,400 --> 00:18:05,440
api uh how how windows api works

00:18:00,880 --> 00:18:05,440
how windows api and

00:18:05,520 --> 00:18:13,440
api how how to use the windows api

00:18:10,400 --> 00:18:17,679
and you'll need to guess the logic

00:18:13,440 --> 00:18:20,720
of the function of the unica and how the

00:18:17,679 --> 00:18:23,840
how the api works

00:18:20,720 --> 00:18:28,000
uh how how it's wrong this is

00:18:23,840 --> 00:18:31,120
a little uh a little difficult

00:18:28,000 --> 00:18:35,039
also you must do many

00:18:31,120 --> 00:18:35,039
tests and

00:18:37,120 --> 00:18:43,840
and make sure what you what

00:18:40,840 --> 00:18:43,840
your

00:18:49,280 --> 00:18:53,760
must be a patient and

00:19:06,240 --> 00:19:12,640
the code is very very large okay

00:19:09,520 --> 00:19:15,919
you must be patient uh log

00:19:12,640 --> 00:19:19,120
an analysis under then

00:19:15,919 --> 00:19:22,480
uh i repeated the circle

00:19:19,120 --> 00:19:25,760
i i think i think

00:19:22,480 --> 00:19:28,170
uh the uh

00:19:25,760 --> 00:19:30,720
how does that learn from

00:19:28,170 --> 00:19:34,559
[Music]

00:19:30,720 --> 00:19:39,440
them and is worried about the

00:19:34,559 --> 00:19:43,039
writing started stream and editing

00:19:39,440 --> 00:19:45,520
the second the second

00:19:43,039 --> 00:19:45,520
question

00:19:48,240 --> 00:19:55,520
you need to learn how to edit

00:19:51,520 --> 00:19:55,520
registry uh

00:19:56,799 --> 00:20:02,720
for one you you you must firstly you

00:20:00,400 --> 00:20:02,720
must

00:20:02,880 --> 00:20:12,480
install install the windows apps

00:20:07,760 --> 00:20:12,480
with one to our container

00:20:12,559 --> 00:20:17,840
let's look at let's look at

00:20:19,440 --> 00:20:22,559
let's step forward

00:20:28,720 --> 00:20:35,840
several several steps

00:20:40,000 --> 00:20:43,760
you need uh you need to know how one

00:20:42,960 --> 00:20:47,120
works

00:20:43,760 --> 00:20:52,320
and how how why why find

00:20:47,120 --> 00:20:52,320
his container thought dr winfield

00:20:52,960 --> 00:21:00,159
of course there are many many

00:20:56,640 --> 00:21:04,240
many works we have done to run

00:21:00,159 --> 00:21:08,720
wrong one wrong one

00:21:04,240 --> 00:21:12,720
this is my this uh this is my

00:21:08,720 --> 00:21:19,600
uh my method of the

00:21:12,720 --> 00:21:24,400
development one okay i i kind of

00:21:19,600 --> 00:21:24,400
i can't say oh man

00:21:25,440 --> 00:21:31,840
stop stop creep

00:21:28,480 --> 00:21:35,440
out scripts

00:21:31,840 --> 00:21:37,730
if you if you have used one

00:21:35,440 --> 00:21:39,039
before

00:21:37,730 --> 00:21:43,120
[Music]

00:21:39,039 --> 00:21:45,360
it's a little same it's a little same

00:21:43,120 --> 00:21:46,480
you need to know either you need to

00:21:45,360 --> 00:21:49,840
learn

00:21:46,480 --> 00:21:54,240
learn more about our one how one works

00:21:49,840 --> 00:21:58,320
how our family one founder is container

00:21:54,240 --> 00:22:01,679
uh containers okay

00:21:58,320 --> 00:22:06,159
i cannot say more uh could you

00:22:01,679 --> 00:22:06,159
try to rather start further

00:22:06,320 --> 00:22:13,840
what the accuracy that works

00:22:09,679 --> 00:22:17,120
gtp and qt is

00:22:13,840 --> 00:22:21,520
in their own

00:22:17,120 --> 00:22:25,280
with some wise after test

00:22:21,520 --> 00:22:29,039
uh how no

00:22:25,280 --> 00:22:29,039
i how low the ability

00:22:29,600 --> 00:22:32,960
uh rather we charge which are which are

00:22:32,159 --> 00:22:37,120
the

00:22:32,960 --> 00:22:40,559
uh which other is which other is uh

00:22:37,120 --> 00:22:43,679
not open source and it's the

00:22:40,559 --> 00:22:44,240
tungsten tension the company is the

00:22:43,679 --> 00:22:49,360
product

00:22:44,240 --> 00:22:53,120
of tensioner company uh we we kind of

00:22:49,360 --> 00:22:56,880
we kind of know what what the weather

00:22:53,120 --> 00:23:00,400
it works i i can uh

00:22:56,880 --> 00:23:04,559
uh linux apps first so

00:23:00,400 --> 00:23:08,799
so we we use one to

00:23:04,559 --> 00:23:12,159
adapt a one two with chat

00:23:08,799 --> 00:23:14,400
we kind of release this

00:23:12,159 --> 00:23:14,400
app

00:23:15,840 --> 00:23:24,000
if your package microsoft

00:23:20,159 --> 00:23:25,039
microsoft office like that and legality

00:23:24,000 --> 00:23:28,080
license

00:23:25,039 --> 00:23:31,200
will be to work uh

00:23:28,080 --> 00:23:36,159
okay the the license

00:23:31,200 --> 00:23:39,600
is a problem i think

00:23:36,159 --> 00:23:43,840
uh we need a winning take care

00:23:39,600 --> 00:23:47,120
to take care of this problem and

00:23:43,840 --> 00:23:52,080
and uh and uh communicated

00:23:47,120 --> 00:23:52,080
uh the related company

00:23:54,960 --> 00:24:05,840
license before

00:24:11,890 --> 00:24:14,999
[Music]

00:24:16,840 --> 00:24:21,840
um

00:24:19,440 --> 00:24:21,840
yes

00:24:23,120 --> 00:24:26,559
maybe maybe it's uh

00:24:24,650 --> 00:24:30,000
[Applause]

00:24:26,559 --> 00:24:33,840
problem can validate

00:24:30,000 --> 00:24:33,840
layer okay

00:24:35,520 --> 00:24:43,600
okay any question and this is my

00:24:38,960 --> 00:24:46,799
this is my works to research

00:24:43,600 --> 00:24:49,919
one i'm glad to share this

00:24:46,799 --> 00:24:53,440
with with

00:24:49,919 --> 00:24:57,279
with me with with rs

00:24:53,440 --> 00:25:01,840
les thank you

00:24:57,279 --> 00:25:01,840
thank you

00:25:04,480 --> 00:25:07,679
right thank you for your very

00:25:06,400 --> 00:25:10,000
interesting talk

00:25:07,679 --> 00:25:11,600
so there is one comment in the chat if

00:25:10,000 --> 00:25:12,400
you want to take a look at it is about

00:25:11,600 --> 00:25:14,400
why don't you

00:25:12,400 --> 00:25:17,440
instead of packing with check on your

00:25:14,400 --> 00:25:20,480
own why don't you ask 10 cent to do it

00:25:17,440 --> 00:25:21,520
uh it's a tricky question i guess given

00:25:20,480 --> 00:25:23,919
that we have time

00:25:21,520 --> 00:25:28,240
maybe you want to try to to point or to

00:25:23,919 --> 00:25:28,240

YouTube URL: https://www.youtube.com/watch?v=Q7IPSxVB_wo


