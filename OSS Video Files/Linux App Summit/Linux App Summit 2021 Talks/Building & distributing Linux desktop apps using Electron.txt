Title: Building & distributing Linux desktop apps using Electron
Publication date: 2021-05-30
Playlist: Linux App Summit 2021 Talks
Description: 
	I'll walk you through the challenges I faced while building and distributing app for Linux using Electron. At the end of the talk, you'll learn the common gotchas and their solutions in distributing the app, understanding user experience without compromising the user privacy, managing different versions, managing automatic updates, reaching your target audience, ensuring security and a great user experience on Linux platforms. This knowledge would have saved me months of pain and tears.

Author(s) Bio

Pradeep is an experienced developer(10yrs) from India. He founded Invide(https://invidelabs.com/developer.html) (a remote developers' community), produced popular Git Commit Show(http://gitcommit.show/) and the created Developer Diary(http://flow.invidelabs.com/). He teaches developers via open source projects, #OpenSourceDiscovery(http://opensourcedisc.substack.com/) newsletter and online training.



Twitter and/or Mastodon Handle

https://www.linkedin.com/in/pradeepkumarsharma
https://twitter.com/pradeep_io
https://github.com/gitcommitshow
https://pradeep-io.medium.com/


Q&A


Note from Pradeep: I'd love to answer more questions. Don't forget to checkout the presentation pdf. I'm reachable at 
https://www.linkedin.com/in/pradeepkumarsharma/
https://twitter.com/pradeep_io

1. Does electron-builder support flatpak? Seems there is a guide here but it doesnt use electron builder directly: https://docs.flatpak.org/en/latest/electron.html
Response: It does not support flatpak out of the box. But snap is supported out of the box.

2. Do electron apps work on ARM platform?
Response: Yes.

3. Auto-updates would work through the snap store for snaps too though no?
Response: Yes. The update will come from snap, if you have any of your own auto-update code, you should disable it before publishint to snap.

4. One criticism Electron apps receive is their inconsistent looks when compared to other applications. What frameworks or guidelines would you suggest for making software feel more native?
Response: Other solutions are Qt and Gnome Extensions. Flutter might become good enough in a year or so (given it's development speed).

5. Are you aware of AppImage Launcher (One-click integration for AppImage) , and if yes, would you suggest it for users? ( https://github.com/TheAssassin/AppImageLauncher )
Response: I have no idea about it. Thanks for sharing.

6. What CI pipeline would you recommend for automatic packaging various distros and architectures.
Response: I do it manually at the moment, have a bash script to make my life easier. It was a big task for me to setup CI given the nature of the work but I can see it could be good to use a CI - in my research I zeroed in on Github Actions. But saying again, I haven't used it.
YouTube URL: https://www.youtube.com/watch?v=k0Wiw0vYFJY


