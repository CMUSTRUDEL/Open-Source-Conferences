Title: Behind KDE documentation tooling
Publication date: 2021-05-30
Playlist: Linux App Summit 2021 Talks
Description: 
	This lightning talk will primarily focus on the recent improvements on KDE's documentation tooling and how this can help other projects too. I will focus on describing our two biggest changes: the creation of our new centralized documentation hub in develop.kde.org/docs using Hugo and the many improvements in our API generation tooling.

This talks is interesting for people who develop libraries and want to increase the amount of API users by making it easier to get started.



Author(s) Bio

I'm a KDE developer focusing on both the KDE websites and on convergent applications. I maintain KDE documentation tooling and contribute often to the documentation themself. I'm the author of two Kirigami applications: NeoChat (a matrix client) and Kontrast.



Twitter and/or Mastodon Handle

@CarlKDE @carl@linuxrocks.online


Q&A


1. Is the documentation updated at the same pace as the code gets new releases and significant updates? It's common to see many considerably big projects getting newer and newer versions but the ocumentation is often forgotten, so to speak!

2. Does the documentation contemplates the languages used by all KDE projects? As someone who wants to contribute to KDE apps, it seems most apps are C++

3. Would the documentation meant for users be made with the same tooling as the documentation meant for developers?
It's a bit tricky since the user documentation is using docbooks (XML based language) and we would need to transform it in some way in a format that hugo can read (md or rst). I started looking into it but I have nothing concrete yet.
YouTube URL: https://www.youtube.com/watch?v=fCJueXAVNRA


