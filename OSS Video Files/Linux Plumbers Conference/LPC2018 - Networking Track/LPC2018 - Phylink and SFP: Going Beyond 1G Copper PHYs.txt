Title: LPC2018 - Phylink and SFP: Going Beyond 1G Copper PHYs
Publication date: 2018-12-04
Playlist: LPC2018 - Networking Track
Description: 
	url:  https://linuxplumbersconf.org/event/2/contributions/104/
speaker:  Andrew Lunn

phylib has provided the API Ethernet MAC drivers have used to control
Copper PHYs for many years. However with the advent of MACs/PHYs with
bandwidth of over 1Gbps, SERDES interfaces and fibre optical modules,
phylib is not sufficient. phylink provides an API which MAC drivers
can use to control these more complex and dynamic, possibly
hot-pluggable PHYs. This presentation will explain why phylink is
needed, how it differs from phylib, and describe how to convert a MAC
driver from phylib to phylink in order to make use of its new
features. The kernel support for SFP modules will also be detailed,
including how the MAC needs to handle hot-plugging of the PHY, which
can be copper or fibre.
Captions: 
	00:00:05,680 --> 00:00:11,660
welcome everyone to day two of the

00:00:08,300 --> 00:00:15,559
fabulous fantastic networking tract of

00:00:11,660 --> 00:00:21,500
Lennox planters conference that's right

00:00:15,559 --> 00:00:24,290
that deserves a round of applause we

00:00:21,500 --> 00:00:26,240
have a welcoming kind of session

00:00:24,290 --> 00:00:27,980
scheduled but I really don't have

00:00:26,240 --> 00:00:28,850
anything extra to add compared to

00:00:27,980 --> 00:00:32,180
yesterday because everything went

00:00:28,850 --> 00:00:35,120
smoothly as planned except no one took

00:00:32,180 --> 00:00:37,310
advantage of the alcohol for their

00:00:35,120 --> 00:00:40,370
sessions so I've taken it away guys

00:00:37,310 --> 00:00:43,730
don't deserve it I'll bring it to a more

00:00:40,370 --> 00:00:46,190
appreciative audience to use with that

00:00:43,730 --> 00:00:47,660
aside I'm just going to talk randomly

00:00:46,190 --> 00:00:49,010
about networking development and maybe

00:00:47,660 --> 00:00:50,600
we can have a kind of nice room little

00:00:49,010 --> 00:00:51,920
discussion you can ask me questions and

00:00:50,600 --> 00:00:56,989
stuff like that because we got to kill

00:00:51,920 --> 00:01:00,860
20 minutes somehow people are mostly

00:00:56,989 --> 00:01:04,189
behaved which is cool it makes my job a

00:01:00,860 --> 00:01:08,689
lot easier some things that I really

00:01:04,189 --> 00:01:12,319
want to see consistently done you got to

00:01:08,689 --> 00:01:13,670
provide affixes tag I mean it's if you

00:01:12,319 --> 00:01:15,649
don't put affixes tag there for a

00:01:13,670 --> 00:01:16,999
bug-fix that's like give me a house and

00:01:15,649 --> 00:01:25,249
not giving me the key to open the front

00:01:16,999 --> 00:01:27,709
door as part of my workflow I've

00:01:25,249 --> 00:01:29,450
improved it recently but basically every

00:01:27,709 --> 00:01:31,270
single patch that's a bug fix I look at

00:01:29,450 --> 00:01:34,969
the fixes tag and I kind of figure out

00:01:31,270 --> 00:01:37,670
does it go to stable what does it depend

00:01:34,969 --> 00:01:39,649
upon where did a bug get introduced how

00:01:37,670 --> 00:01:42,770
far back in stable do I have to go did I

00:01:39,649 --> 00:01:44,689
put the thing in the commit from the

00:01:42,770 --> 00:01:48,529
fixes tag into the stable releases - so

00:01:44,689 --> 00:01:51,049
I have to recursively reevaluate the

00:01:48,529 --> 00:01:52,849
whole backporting thing which is uh so

00:01:51,049 --> 00:01:54,590
imagine if I didn't have that fixes tag

00:01:52,849 --> 00:01:57,529
how much work is involved there it's

00:01:54,590 --> 00:01:59,079
just like I'm guaranteed to mess

00:01:57,529 --> 00:02:03,469
everything up so we need to fix his tag

00:01:59,079 --> 00:02:07,759
12 digits of SS a1 ID and the fixes tag

00:02:03,469 --> 00:02:09,950
please at least and put that header text

00:02:07,759 --> 00:02:11,620
in there with parentheses and double

00:02:09,950 --> 00:02:13,790
quotes

00:02:11,620 --> 00:02:19,250
I'll push your patch back if you don't

00:02:13,790 --> 00:02:22,280
do that one issue that's come up and was

00:02:19,250 --> 00:02:24,260
brought up by Florian Fanelli which may

00:02:22,280 --> 00:02:29,240
be I want it I think we need some more

00:02:24,260 --> 00:02:32,000
brainpower towards is we have all our

00:02:29,240 --> 00:02:34,430
driver API is a mess everyone

00:02:32,000 --> 00:02:36,080
understands that it's it's I'm so glad

00:02:34,430 --> 00:02:37,670
I'm not writing a driver to a new driver

00:02:36,080 --> 00:02:39,640
these days because it's really difficult

00:02:37,670 --> 00:02:42,520
it's not easy I'm sorry

00:02:39,640 --> 00:02:47,690
well one area of concern is we have

00:02:42,520 --> 00:02:49,670
multiple ways to program flows class

00:02:47,690 --> 00:02:52,670
flow classification into the drivers we

00:02:49,670 --> 00:02:57,050
have the RX NFC Eve tool business we've

00:02:52,670 --> 00:02:59,810
got class flower and Florian's question

00:02:57,050 --> 00:03:03,110
was if you implement both how should

00:02:59,810 --> 00:03:05,810
they behave if you insert a flower rule

00:03:03,110 --> 00:03:08,450
what does the RX NFC thing return what

00:03:05,810 --> 00:03:09,890
can you can you modify entries by index

00:03:08,450 --> 00:03:11,330
and then what does the flower stuff look

00:03:09,890 --> 00:03:14,960
like if you query it when you change

00:03:11,330 --> 00:03:16,820
with the other API no one you see

00:03:14,960 --> 00:03:20,140
everyone's got this look on their face

00:03:16,820 --> 00:03:20,140
this thousand miles there

00:03:27,020 --> 00:03:32,540
hello box yeah I'm presenting about that

00:03:31,280 --> 00:03:33,020
today Dave so thank you for bringing

00:03:32,540 --> 00:03:36,710
that up

00:03:33,020 --> 00:03:38,840
what a great suggestion I know you've

00:03:36,710 --> 00:03:43,220
you've had issues with our driver API is

00:03:38,840 --> 00:03:46,090
over the years one suggestion you've

00:03:43,220 --> 00:03:48,320
made that I we haven't followed up on is

00:03:46,090 --> 00:03:49,610
documenting this whole the mess that we

00:03:48,320 --> 00:03:50,750
have like it's one thing to have him as

00:03:49,610 --> 00:03:52,760
it's another thing to have a mess that

00:03:50,750 --> 00:03:54,340
no one understands completely because we

00:03:52,760 --> 00:03:57,890
haven't documented it so it

00:03:54,340 --> 00:04:00,560
documentation is a clear way forward to

00:03:57,890 --> 00:04:03,020
solve this mess I think right so hey

00:04:00,560 --> 00:04:05,510
there's a there's a plug for it's not in

00:04:03,020 --> 00:04:06,230
my paper or my presentation I was

00:04:05,510 --> 00:04:07,730
looking through the network

00:04:06,230 --> 00:04:10,010
documentation and that device thought HR

00:04:07,730 --> 00:04:12,260
and whatever else other pieces specially

00:04:10,010 --> 00:04:14,000
dev see there's a lot of places where we

00:04:12,260 --> 00:04:15,920
could put Indy oxygen headers the

00:04:14,000 --> 00:04:18,290
contents all there already it just needs

00:04:15,920 --> 00:04:20,359
to be reformatted mostly that's good to

00:04:18,290 --> 00:04:21,919
hear you know a lot of its there so I

00:04:20,359 --> 00:04:23,300
think that we could you know it'd be a

00:04:21,919 --> 00:04:24,470
easy task for someone to take on that

00:04:23,300 --> 00:04:25,970
wasn't super

00:04:24,470 --> 00:04:28,850
you know technical to help start

00:04:25,970 --> 00:04:30,830
formatting those into the K doc style I

00:04:28,850 --> 00:04:32,120
guess awesome that's great to know and

00:04:30,830 --> 00:04:34,130
then the other thing I wanted to ask

00:04:32,120 --> 00:04:35,660
about and documentation spaces should we

00:04:34,130 --> 00:04:37,600
be converting some of our stuff to rst

00:04:35,660 --> 00:04:39,740
some people are trying to do that and

00:04:37,600 --> 00:04:43,310
I'm trying to encourage people to work

00:04:39,740 --> 00:04:45,410
piecemeal like don't go and do a whole

00:04:43,310 --> 00:04:47,690
subdirectory under documentation and do

00:04:45,410 --> 00:04:51,140
like 20 files that's like no one's gonna

00:04:47,690 --> 00:04:55,850
review that I guess I guess that gets to

00:04:51,140 --> 00:04:57,560
a more general thing about what makes a

00:04:55,850 --> 00:05:00,020
patch series reviewable and easy to

00:04:57,560 --> 00:05:01,730
digest and what's likely to get people

00:05:00,020 --> 00:05:04,520
to review your stuff rather than ignore

00:05:01,730 --> 00:05:06,260
your changes if you come on to this with

00:05:04,520 --> 00:05:08,450
a 40-page series not only am i gonna

00:05:06,260 --> 00:05:10,340
just say push back on you but no one's

00:05:08,450 --> 00:05:11,780
gonna look at it like seriously no one

00:05:10,340 --> 00:05:16,910
but your coworkers are gonna look at it

00:05:11,780 --> 00:05:20,360
I can guarantee you this so then we have

00:05:16,910 --> 00:05:22,010
the the logical consequence of that is

00:05:20,360 --> 00:05:25,430
like okay I have the 60 patch series so

00:05:22,010 --> 00:05:31,400
I'm gonna send 18 at a time but without

00:05:25,430 --> 00:05:32,870
any logical grouping whatsoever this is

00:05:31,400 --> 00:05:35,780
a situation where the Cure is almost

00:05:32,870 --> 00:05:39,770
worse than the disease you should really

00:05:35,780 --> 00:05:41,210
think about providing a logical thing in

00:05:39,770 --> 00:05:43,100
those little such a changes I think

00:05:41,210 --> 00:05:44,870
David Ahern does this well when he's

00:05:43,100 --> 00:05:49,340
trying to get somewhere he's like I'm

00:05:44,870 --> 00:05:51,650
trying to reach this destination it's 60

00:05:49,340 --> 00:05:53,000
patches down the road but I'm gonna make

00:05:51,650 --> 00:05:56,150
this piece of infrastructure that you

00:05:53,000 --> 00:05:58,820
can see how it's used and there is usage

00:05:56,150 --> 00:06:00,590
of it in these like little twelve to

00:05:58,820 --> 00:06:02,030
fourteen patch series's and I really

00:06:00,590 --> 00:06:07,390
like that that's like a that's a

00:06:02,030 --> 00:06:09,800
pleasure to read you know that you've

00:06:07,390 --> 00:06:10,940
split up your patch series correctly if

00:06:09,800 --> 00:06:12,500
you're reading every pattern is saying

00:06:10,940 --> 00:06:14,270
of course of course of course of course

00:06:12,500 --> 00:06:16,850
of course of course obviously obviously

00:06:14,270 --> 00:06:19,190
obviously obviously you should never be

00:06:16,850 --> 00:06:21,830
like how does he call this function

00:06:19,190 --> 00:06:23,330
what's what's the call chain how is he

00:06:21,830 --> 00:06:25,190
locking this that if you're asking those

00:06:23,330 --> 00:06:26,780
kind of questions the the patch series

00:06:25,190 --> 00:06:28,860
hasn't been broken down correctly it's

00:06:26,780 --> 00:06:32,900
too hard to review

00:06:28,860 --> 00:06:32,900
and that's something people should avoid

00:06:32,990 --> 00:06:38,300
trying to think if there any pain points

00:06:35,400 --> 00:06:42,770
oh so I'll talk some more about stable

00:06:38,300 --> 00:06:44,370
so what I used to do is I would just

00:06:42,770 --> 00:06:46,110
everything that I said the chewed-up

00:06:44,370 --> 00:06:50,699
were stable would go into that bundle on

00:06:46,110 --> 00:06:53,129
patchwork right and then when I decided

00:06:50,699 --> 00:06:54,689
to do a stable submission I undo the

00:06:53,129 --> 00:06:57,210
bundle and I would look through to get

00:06:54,689 --> 00:06:59,370
history and extract all the commits out

00:06:57,210 --> 00:07:02,060
and then I'd put the upstream commit bla

00:06:59,370 --> 00:07:05,460
bla bla text into the commit message

00:07:02,060 --> 00:07:07,919
file them into sub sub directories such

00:07:05,460 --> 00:07:09,719
as their B I have a directory called

00:07:07,919 --> 00:07:12,750
queue and underneath queue there's V

00:07:09,719 --> 00:07:16,439
point for point 17 be poor for point 18

00:07:12,750 --> 00:07:18,029
and backwards and forwards and if the

00:07:16,439 --> 00:07:20,310
fixes tag told me that the bug was

00:07:18,029 --> 00:07:25,349
introduced in 4.17 that's where I would

00:07:20,310 --> 00:07:26,879
put that back board if it went beyond

00:07:25,349 --> 00:07:29,159
get history once at a top level

00:07:26,879 --> 00:07:30,599
directory or I I think the bugs been

00:07:29,159 --> 00:07:32,729
around forever even though the fixes

00:07:30,599 --> 00:07:34,759
text has something else I try to do a

00:07:32,729 --> 00:07:36,990
little bit interpretation here and there

00:07:34,759 --> 00:07:39,419
that was time-consuming so the whole

00:07:36,990 --> 00:07:41,490
pulling extracting the patches out from

00:07:39,419 --> 00:07:42,360
lettuces tree or my own tree just take

00:07:41,490 --> 00:07:44,039
took forever

00:07:42,360 --> 00:07:46,620
so what I do now is that when i cue

00:07:44,039 --> 00:07:48,389
something up for stable I extract the

00:07:46,620 --> 00:07:50,610
patch out of my own tree because it's

00:07:48,389 --> 00:07:52,259
the top level commit at that point and

00:07:50,610 --> 00:07:54,300
it's held a lot faster than searching

00:07:52,259 --> 00:07:55,919
through get history and then I put the

00:07:54,300 --> 00:07:57,719
upstream commit blah blah blah and I put

00:07:55,919 --> 00:07:59,069
it into the queue subdirectory and then

00:07:57,719 --> 00:08:00,569
it's all sitting there waiting for me

00:07:59,069 --> 00:08:02,339
when I do a stable submission and that

00:08:00,569 --> 00:08:03,779
is like a thousand times faster I should

00:08:02,339 --> 00:08:06,539
have been doing that just like 10 years

00:08:03,779 --> 00:08:10,469
ago so that's my process for a stable

00:08:06,539 --> 00:08:12,330
stuff people have asked me why do you

00:08:10,469 --> 00:08:15,300
why do you do it the special way and

00:08:12,330 --> 00:08:18,150
whatever I just I can't wrap my brain

00:08:15,300 --> 00:08:19,830
around the idea that just because the

00:08:18,150 --> 00:08:23,879
patch made insulin is this tree it she

00:08:19,830 --> 00:08:27,990
goes straight to stable that it doesn't

00:08:23,879 --> 00:08:29,849
compute like one out of every four

00:08:27,990 --> 00:08:32,390
patches will have a follow-on small bug

00:08:29,849 --> 00:08:35,760
fix a week later it's not the truth

00:08:32,390 --> 00:08:37,319
right so I'm trying to fight that effect

00:08:35,760 --> 00:08:38,880
so that the patch doesn't jump into

00:08:37,319 --> 00:08:41,069
stable with that little bug in it that

00:08:38,880 --> 00:08:42,630
needs a fix of a week later I really

00:08:41,069 --> 00:08:45,329
wanted things to cook in

00:08:42,630 --> 00:08:47,490
my treat and menaces tree for a week or

00:08:45,329 --> 00:08:50,040
two before I send it off the Greg into

00:08:47,490 --> 00:08:51,810
stable folks and just I think it saved

00:08:50,040 --> 00:08:54,750
us a lot of grief because we've been

00:08:51,810 --> 00:08:56,970
doing it this way the bad part is it's

00:08:54,750 --> 00:08:59,130
not automated like the CCC stable thing

00:08:56,970 --> 00:09:02,550
is and there's a lot of extra work for

00:08:59,130 --> 00:09:04,199
me but I think the increase in quality

00:09:02,550 --> 00:09:05,670
of the back courts that end up in stable

00:09:04,199 --> 00:09:07,829
is worth the extra work that I'm putting

00:09:05,670 --> 00:09:10,290
now and as I just described that kind of

00:09:07,829 --> 00:09:12,839
we reduced the amount of work I spend

00:09:10,290 --> 00:09:14,699
into this a lot so if people disagree

00:09:12,839 --> 00:09:16,589
with me say something but I think it's

00:09:14,699 --> 00:09:18,329
working well and I think I communicate

00:09:16,589 --> 00:09:19,500
with people and I think I tell people

00:09:18,329 --> 00:09:21,300
exactly what they need to do to get

00:09:19,500 --> 00:09:25,500
things into stable and there's no

00:09:21,300 --> 00:09:28,230
misunderstanding so any particular pain

00:09:25,500 --> 00:09:30,839
points with development generally

00:09:28,230 --> 00:09:32,730
speaking with networking I want to hear

00:09:30,839 --> 00:09:41,300
about it like here's here's your chance

00:09:32,730 --> 00:09:41,300
I'm here my ears are open oh the box

00:09:42,829 --> 00:09:51,810
want you to to point the importance of

00:09:48,779 --> 00:09:55,170
the tics tag that really helps all the

00:09:51,810 --> 00:09:59,100
backlog the backboard we do and all the

00:09:55,170 --> 00:10:01,439
stable teams do so if everybody can be

00:09:59,100 --> 00:10:04,009
adding this fixes tag it would be

00:10:01,439 --> 00:10:04,009
awesome

00:10:10,019 --> 00:10:15,490
so a question to that how much does

00:10:12,430 --> 00:10:18,490
saucers automatic thing nest of your

00:10:15,490 --> 00:10:24,100
work love whose automatic thing there's

00:10:18,490 --> 00:10:26,259
one that's looking through patches okay

00:10:24,100 --> 00:10:29,559
so here's the situation here I only have

00:10:26,259 --> 00:10:31,449
bandwidth to backport two releases back

00:10:29,559 --> 00:10:34,029
I mean if you once you get to the third

00:10:31,449 --> 00:10:36,670
or fourth the amount of work you have to

00:10:34,029 --> 00:10:40,809
do increases exponentially because the

00:10:36,670 --> 00:10:43,029
tree just changes that much I've kind of

00:10:40,809 --> 00:10:44,589
handed off what happens beyond that to

00:10:43,029 --> 00:10:46,300
whatever disabled folks want to do and

00:10:44,589 --> 00:10:48,160
yes I I see how they automatically

00:10:46,300 --> 00:10:49,930
backport stuff and sometimes people well

00:10:48,160 --> 00:10:54,370
that's not even relevant back there or

00:10:49,930 --> 00:10:55,990
whatever like that so it wouldn't be a

00:10:54,370 --> 00:10:57,970
stretch to say it's a kind of ad hoc

00:10:55,990 --> 00:11:00,970
situation and it's not a lot of control

00:10:57,970 --> 00:11:02,470
going into it so yeah it is a concern

00:11:00,970 --> 00:11:03,279
for the people using those older trees

00:11:02,470 --> 00:11:07,389
by far

00:11:03,279 --> 00:11:09,970
any suggestions yeah cuz I if I get

00:11:07,389 --> 00:11:11,529
involved then I'll disappear for two

00:11:09,970 --> 00:11:13,990
days instead of one day when I'm doing

00:11:11,529 --> 00:11:15,610
stable back boards and I know if you

00:11:13,990 --> 00:11:16,899
guys like waiting extra days for your

00:11:15,610 --> 00:11:18,790
patches to get applied and you probably

00:11:16,899 --> 00:11:20,769
don't so like I think I'm gonna continue

00:11:18,790 --> 00:11:24,689
down the path I'm and now but it's it is

00:11:20,769 --> 00:11:24,689
a real point thanks for bringing it up

00:11:25,410 --> 00:11:33,009
so about the stable do all like some

00:11:30,490 --> 00:11:35,829
fixes tags or go really far back yeah

00:11:33,009 --> 00:11:37,629
but the actual bug is pretty small and

00:11:35,829 --> 00:11:39,759
the risk of introducing a bigger one is

00:11:37,629 --> 00:11:42,430
actually pretty great so I guess two

00:11:39,759 --> 00:11:45,519
questions like if I know that it has to

00:11:42,430 --> 00:11:47,850
go back and the tree has changed a lot

00:11:45,519 --> 00:11:49,720
does it help if I do the busy work of

00:11:47,850 --> 00:11:51,040
creating this stable backboard

00:11:49,720 --> 00:11:52,839
particularly because we have our own

00:11:51,040 --> 00:11:54,819
internal this stores every awesome thing

00:11:52,839 --> 00:11:56,889
thanks for bringing this up okay as the

00:11:54,819 --> 00:11:58,059
second one do we not back port some of

00:11:56,889 --> 00:12:00,250
them and should we I put that in the

00:11:58,059 --> 00:12:04,779
past like don't you know in my opinion

00:12:00,250 --> 00:12:08,529
though okay so I run into trouble

00:12:04,779 --> 00:12:09,009
sometimes when I back port and I ask for

00:12:08,529 --> 00:12:12,100
help

00:12:09,009 --> 00:12:13,509
sometimes I say I like it II like Kong

00:12:12,100 --> 00:12:15,279
Wang would like touch something in the

00:12:13,509 --> 00:12:17,709
entire packet scheduler layer to fix

00:12:15,279 --> 00:12:19,389
some bug and I'm like dude and three

00:12:17,709 --> 00:12:20,019
releases back I can't I can't do this

00:12:19,389 --> 00:12:23,199
this is

00:12:20,019 --> 00:12:28,959
this so I do ask for help when I need it

00:12:23,199 --> 00:12:32,110
if you if you preemptively know that

00:12:28,959 --> 00:12:34,569
there's a lot of churn having the back

00:12:32,110 --> 00:12:36,249
point available helps a lot but get it

00:12:34,569 --> 00:12:37,809
into my tree first and then provide then

00:12:36,249 --> 00:12:39,579
say I'll provide back ports because

00:12:37,809 --> 00:12:42,549
release so-and-so is gonna be a

00:12:39,579 --> 00:12:47,619
difficult one that helps a lot okay

00:12:42,549 --> 00:12:53,379
what to do about the small fix big risk

00:12:47,619 --> 00:12:54,610
for breakage it depends it would be I

00:12:53,379 --> 00:12:56,739
have to be evaluated on a case-by-case

00:12:54,610 --> 00:12:58,329
basis but I understand the situation

00:12:56,739 --> 00:13:00,879
you're talking about sometimes I see a

00:12:58,329 --> 00:13:02,319
fix and I'm just like that is that's not

00:13:00,879 --> 00:13:10,089
worth pushing to stay aboard this is

00:13:02,319 --> 00:13:11,649
just gonna more problem like we ran into

00:13:10,089 --> 00:13:14,290
a situation like that with the UFO

00:13:11,649 --> 00:13:16,569
removal fixes we kept going back and

00:13:14,290 --> 00:13:19,029
forth and we were breaking as much as we

00:13:16,569 --> 00:13:20,439
were fixing at at one point so that was

00:13:19,029 --> 00:13:21,939
it that's it that's when it comes to my

00:13:20,439 --> 00:13:24,249
mind because I was directly involved in

00:13:21,939 --> 00:13:26,230
that do you have any specific examples

00:13:24,249 --> 00:13:27,699
because maybe we can evaluate a specific

00:13:26,230 --> 00:13:29,079
situation and think about how we would

00:13:27,699 --> 00:13:30,970
wrap our brains around a similar

00:13:29,079 --> 00:13:33,249
situation I guess there are a lot of

00:13:30,970 --> 00:13:35,920
these X Falls his scholar fixes there

00:13:33,249 --> 00:13:40,779
was a one with a race condition where

00:13:35,920 --> 00:13:43,149
you downgrade of v6v format v6 to a 3/4

00:13:40,779 --> 00:13:45,249
socket and that's not an atomic

00:13:43,149 --> 00:13:46,299
operation like do we really carry this

00:13:45,249 --> 00:13:48,369
has been there since I think the

00:13:46,299 --> 00:13:49,540
beginning of get I think I know which

00:13:48,369 --> 00:13:51,730
one you're talking about

00:13:49,540 --> 00:13:54,879
yeah yes this car finds a lot of weird

00:13:51,730 --> 00:13:57,549
stuff that's just like that's good to

00:13:54,879 --> 00:13:59,230
fix it no one's noticed I think a lot of

00:13:57,549 --> 00:14:01,179
you have packet races we're letting that

00:13:59,230 --> 00:14:02,410
in that kind of category to some not all

00:14:01,179 --> 00:14:04,540
of them some of them were very serious

00:14:02,410 --> 00:14:08,519
but some of them were like this is not

00:14:04,540 --> 00:14:08,519
happening but yes we have to fix it

00:14:11,500 --> 00:14:16,250
see the thing about the p6 p41 I

00:14:14,690 --> 00:14:17,780
wouldn't want it on my head that that I

00:14:16,250 --> 00:14:22,430
could fix that in stable if I wanted to

00:14:17,780 --> 00:14:24,080
and I'm not going to okay because I

00:14:22,430 --> 00:14:36,470
think did crash that one disk crash cuz

00:14:24,080 --> 00:14:38,900
it the reference garbage right no X so

00:14:36,470 --> 00:14:40,970
there's the that does it does it crash

00:14:38,900 --> 00:14:43,450
the system consideration and there's the

00:14:40,970 --> 00:14:48,740
could someone use it to do nefarious

00:14:43,450 --> 00:14:51,110
stuff so see it's not easy to evaluate

00:14:48,740 --> 00:14:53,240
stable backwards at all I guess it's

00:14:51,110 --> 00:14:55,520
even if someone asked me explicitly I

00:14:53,240 --> 00:14:58,100
would have to double-check I just I just

00:14:55,520 --> 00:14:59,630
have to do it so that's a good question

00:14:58,100 --> 00:15:02,240
though like what's the evaluation

00:14:59,630 --> 00:15:04,130
process I really depend at least a

00:15:02,240 --> 00:15:06,110
certain extent upon the submitter to

00:15:04,130 --> 00:15:10,670
kind of brief give me a brief if

00:15:06,110 --> 00:15:12,440
necessary like you know you put the

00:15:10,670 --> 00:15:14,810
commit message and you go - test - and

00:15:12,440 --> 00:15:16,430
you could add notes - just like write a

00:15:14,810 --> 00:15:18,200
novel there if you need to to help me

00:15:16,430 --> 00:15:21,590
understand the backward situation like

00:15:18,200 --> 00:15:24,500
do not never hold back on commit message

00:15:21,590 --> 00:15:25,670
and note area verbiage the more

00:15:24,500 --> 00:15:27,470
information you can provide the better

00:15:25,670 --> 00:15:29,000
I'd rather have to read a novel than get

00:15:27,470 --> 00:15:33,830
stuck with a backboard not know what I'm

00:15:29,000 --> 00:15:37,760
doing so some people one say also ah

00:15:33,830 --> 00:15:39,470
this drives me nuts they'll do revisions

00:15:37,760 --> 00:15:41,900
on either an individual patch or patch

00:15:39,470 --> 00:15:45,170
series and they'll try to hide from the

00:15:41,900 --> 00:15:47,450
commit message - changelog don't hide

00:15:45,170 --> 00:15:49,160
the change a lot keep it in there so

00:15:47,450 --> 00:15:51,530
that it goes into the good history why

00:15:49,160 --> 00:15:53,600
because someone down the road is gonna

00:15:51,530 --> 00:15:55,850
go back to your patch series or your

00:15:53,600 --> 00:15:58,310
patch and be like you know I would have

00:15:55,850 --> 00:16:00,080
suggested that they had do X Y & Z and

00:15:58,310 --> 00:16:02,330
they could see in the changelog that oh

00:16:00,080 --> 00:16:03,380
I changed from this thing that you think

00:16:02,330 --> 00:16:05,420
they should have done to this other

00:16:03,380 --> 00:16:07,100
thing based upon feedback so I can know

00:16:05,420 --> 00:16:09,860
that that idea was considered already

00:16:07,100 --> 00:16:11,960
and there was an explicit reason why

00:16:09,860 --> 00:16:14,000
that approach wasn't taken so you don't

00:16:11,960 --> 00:16:15,710
even have to go back to the mail the

00:16:14,000 --> 00:16:17,780
discussion back on net dev or wherever

00:16:15,710 --> 00:16:19,550
which is impossible to find it's right

00:16:17,780 --> 00:16:20,930
there in the commit history why as the

00:16:19,550 --> 00:16:21,410
change went in a certain direction and

00:16:20,930 --> 00:16:22,939
ended up

00:16:21,410 --> 00:16:25,669
a certain way did at the end so I think

00:16:22,939 --> 00:16:28,910
that's very valuable so do not try to

00:16:25,669 --> 00:16:31,009
lead the changelog from coming messages

00:16:28,910 --> 00:16:32,389
ever I'll put it in there if you try to

00:16:31,009 --> 00:16:37,129
remove it I just move it back in there I

00:16:32,389 --> 00:16:38,720
don't care yes oh yeah stable staples

00:16:37,129 --> 00:16:40,119
kind of an interesting situation is good

00:16:38,720 --> 00:16:45,499
that people are asking questions

00:16:40,119 --> 00:16:50,839
anything else we do all the time four

00:16:45,499 --> 00:16:52,939
more minutes three more minutes okay

00:16:50,839 --> 00:16:56,959
so I guess we'll just get ready for

00:16:52,939 --> 00:16:59,559
Andrews talk oh and be careful of

00:16:56,959 --> 00:17:02,539
Colonel shenanigans we learned yesterday

00:16:59,559 --> 00:17:04,989
so shield ourselves from Colonel

00:17:02,539 --> 00:17:04,989
shenanigans

00:17:07,480 --> 00:17:11,209
andrew has been a very valuable

00:17:09,350 --> 00:17:14,629
contributor to our team for some time

00:17:11,209 --> 00:17:16,939
now unless you've been under a rock he's

00:17:14,629 --> 00:17:18,589
been working on PSA and five drivers and

00:17:16,939 --> 00:17:22,009
helping review a lot of code that's

00:17:18,589 --> 00:17:24,470
because it'll is too so he was in a net

00:17:22,009 --> 00:17:26,539
comp in Toronto last year and he helped

00:17:24,470 --> 00:17:29,450
us with the Technical Committee for net

00:17:26,539 --> 00:17:32,029
dev so he's all over the place and we

00:17:29,450 --> 00:17:35,179
appreciate his his help without further

00:17:32,029 --> 00:17:36,950
ado engine thank you so we're going a

00:17:35,179 --> 00:17:39,860
bit lower than than usual I'll go into

00:17:36,950 --> 00:17:43,250
the mac and phy and I want to talk about

00:17:39,860 --> 00:17:46,460
some work that was merged recently which

00:17:43,250 --> 00:17:48,019
will help Mac drivers people write in

00:17:46,460 --> 00:17:49,879
mutt drivers for those who are doing

00:17:48,019 --> 00:17:52,159
greater than one gigabit per second

00:17:49,879 --> 00:17:54,580
which might seem a bit strange when most

00:17:52,159 --> 00:17:57,710
you are talking about 40k hundred gig

00:17:54,580 --> 00:18:00,470
but in reality look at your laptop if

00:17:57,710 --> 00:18:03,980
it's got an rj45 it's probably got a one

00:18:00,470 --> 00:18:07,279
gig I get 45 on it your desktop probably

00:18:03,980 --> 00:18:09,259
smoking but things change when we go

00:18:07,279 --> 00:18:11,929
from one gig to faster than ours

00:18:09,259 --> 00:18:13,279
especially in an embedded world and a

00:18:11,929 --> 00:18:15,679
lot of the stuff that I'm talking about

00:18:13,279 --> 00:18:17,720
has come from the embedded world and

00:18:15,679 --> 00:18:21,740
it's gonna be more generalized and

00:18:17,720 --> 00:18:23,299
usable for others I looked at the

00:18:21,740 --> 00:18:24,799
history for the last couple months what

00:18:23,299 --> 00:18:30,320
drives of those have been merged

00:18:24,799 --> 00:18:32,350
recently they're all multi gig there was

00:18:30,320 --> 00:18:35,110
no one gig Drive emerged

00:18:32,350 --> 00:18:36,820
so we can see that one gig is coming to

00:18:35,110 --> 00:18:40,210
its end of its life everybody's gonna

00:18:36,820 --> 00:18:42,399
have faster ethernet soon with the one

00:18:40,210 --> 00:18:46,809
exception that proves the rule it was

00:18:42,399 --> 00:18:48,039
this weird FDDI driver which is probably

00:18:46,809 --> 00:18:50,169
a museum piece

00:18:48,039 --> 00:18:52,600
Boeing I show the flexibility of Linux

00:18:50,169 --> 00:18:54,370
if you would make quality code and

00:18:52,600 --> 00:18:57,759
you've got a mentor in it you can have

00:18:54,370 --> 00:18:59,380
it so if you've got any more museum

00:18:57,759 --> 00:19:03,880
pieces you want to support I'm sure Dave

00:18:59,380 --> 00:19:08,230
will accept it so it all started like I

00:19:03,880 --> 00:19:10,779
said from embedded area this is one of

00:19:08,230 --> 00:19:13,419
Marvel's boards build by solid row and

00:19:10,779 --> 00:19:17,740
clear fog it's got an X to be in the

00:19:13,419 --> 00:19:23,769
middle which is this a bit with fiber

00:19:17,740 --> 00:19:25,480
optic cables coming out which around the

00:19:23,769 --> 00:19:28,179
horn it's something you'll see in the

00:19:25,480 --> 00:19:30,250
data center but it's slowly becoming

00:19:28,179 --> 00:19:33,399
more popular especially in industrial

00:19:30,250 --> 00:19:39,549
settings airplanes they want light

00:19:33,399 --> 00:19:42,370
weight of fiber rather than copper this

00:19:39,549 --> 00:19:43,419
interesting board which is more of a

00:19:42,370 --> 00:19:44,889
reference design and it brings

00:19:43,419 --> 00:19:47,820
everything out you could ever want from

00:19:44,889 --> 00:19:53,980
this chip so the interesting things here

00:19:47,820 --> 00:19:57,159
it's got three SFA's and it's got two 10

00:19:53,980 --> 00:19:59,559
gig Ethernet which for an embedded

00:19:57,159 --> 00:20:01,840
system yeah that's pretty powerful but

00:19:59,559 --> 00:20:05,639
that's the where things are going and it

00:20:01,840 --> 00:20:05,639
goes to do two point five and five

00:20:08,860 --> 00:20:15,440
so these were probably the first bolts

00:20:11,600 --> 00:20:16,730
in the embedded space to do this they've

00:20:15,440 --> 00:20:18,679
been around for a long time if you look

00:20:16,730 --> 00:20:23,450
at Ethernet switches in the embedded

00:20:18,679 --> 00:20:25,669
space yeah what was also novel is that

00:20:23,450 --> 00:20:27,350
in the embedded space often there's no

00:20:25,669 --> 00:20:30,980
firmware driving this

00:20:27,350 --> 00:20:32,240
it's Linux which is nice because we can

00:20:30,980 --> 00:20:37,490
take the boats when the third-most

00:20:32,240 --> 00:20:45,190
Brooklyn was nothing we can do so there

00:20:37,490 --> 00:20:45,190
was no real support for 10-gig SFPs a

00:20:45,250 --> 00:20:51,320
Russell King he was given the task

00:20:48,669 --> 00:20:53,900
invent something make it work we want

00:20:51,320 --> 00:20:55,580
this in mainline Russell King being

00:20:53,900 --> 00:20:57,860
Russell King he went to where he studied

00:20:55,580 --> 00:20:59,299
lots of different things decided what we

00:20:57,860 --> 00:21:03,140
have doesn't work and he invented

00:20:59,299 --> 00:21:05,990
something new so yes it's new API but

00:21:03,140 --> 00:21:07,190
it's documented and most of you don't

00:21:05,990 --> 00:21:09,440
need to care about it because it's one

00:21:07,190 --> 00:21:11,600
of those low-level one's really bottom

00:21:09,440 --> 00:21:17,030
of the mac to the Phi which there's only

00:21:11,600 --> 00:21:20,090
a few specialists people who do that so

00:21:17,030 --> 00:21:23,540
what is an SMP small form-factor

00:21:20,090 --> 00:21:26,360
wonderful it's hot pluggable which that

00:21:23,540 --> 00:21:28,760
makes it interesting normally you don't

00:21:26,360 --> 00:21:31,130
pull your isn't that file for your PCB

00:21:28,760 --> 00:21:34,820
and put it back again with these you

00:21:31,130 --> 00:21:37,280
can't and that because it's problems and

00:21:34,820 --> 00:21:39,470
lots of places where it doesn't expect

00:21:37,280 --> 00:21:41,570
it to disappear and come back again that

00:21:39,470 --> 00:21:46,330
was one of the main reasons we need a

00:21:41,570 --> 00:21:49,460
new API the interface to the Mac is also

00:21:46,330 --> 00:21:52,100
different at least compared to one gig

00:21:49,460 --> 00:21:54,740
it's a sad day as interface it's not a

00:21:52,100 --> 00:21:57,980
parallel bus that brings with it some

00:21:54,740 --> 00:21:59,900
issues and there's a control plane I

00:21:57,980 --> 00:22:02,200
squared C for something that looks like

00:21:59,900 --> 00:22:04,809
an EEPROM but it's not an EEPROM really

00:22:02,200 --> 00:22:07,480
and you've got some GP our lines

00:22:04,809 --> 00:22:11,809
what's our signal turn off the

00:22:07,480 --> 00:22:13,610
transmitter you don't blind anybody you

00:22:11,809 --> 00:22:15,030
can also check is anybody actually plug

00:22:13,610 --> 00:22:19,140
the module in

00:22:15,030 --> 00:22:21,030
you thought to know a block diagram and

00:22:19,140 --> 00:22:23,910
as if they've stolen from some vendors

00:22:21,030 --> 00:22:28,590
site so the top you can see the transmit

00:22:23,910 --> 00:22:30,060
path a data stream comes in it's turned

00:22:28,590 --> 00:22:32,190
into light and sent out

00:22:30,060 --> 00:22:35,580
it's totally passive it doesn't do

00:22:32,190 --> 00:22:37,740
anything except for electrical to light

00:22:35,580 --> 00:22:40,080
then the opposite direction light to

00:22:37,740 --> 00:22:42,300
electrical it's somewhat unusual when

00:22:40,080 --> 00:22:44,190
you think of normal fires they go in not

00:22:42,300 --> 00:22:47,730
a negotiation and they're talking to

00:22:44,190 --> 00:22:51,360
each other lots of things going on here

00:22:47,730 --> 00:22:54,510
nothing it's done and at the bottom

00:22:51,360 --> 00:22:56,370
you've got control plane this

00:22:54,510 --> 00:22:57,840
temperature sensors those voltage

00:22:56,370 --> 00:23:00,270
centers you can tell us the things

00:22:57,840 --> 00:23:03,150
overheating noise frozen think about

00:23:00,270 --> 00:23:07,590
that again industrial it's got to work

00:23:03,150 --> 00:23:09,750
at minus 20 the interesting thing is

00:23:07,590 --> 00:23:11,850
when is the up when do you actually have

00:23:09,750 --> 00:23:15,840
link because you don't have a fire

00:23:11,850 --> 00:23:18,240
talking to another fie things get pushed

00:23:15,840 --> 00:23:21,510
backwards a bit it's now the Mac needs

00:23:18,240 --> 00:23:26,640
to know or tells you when is the link-up

00:23:21,510 --> 00:23:27,990
it's not the fine notably they seem to

00:23:26,640 --> 00:23:33,270
like all their so Blaire's in various

00:23:27,990 --> 00:23:39,000
things and as well so we have inside the

00:23:33,270 --> 00:23:41,640
Mac a Mac Concilium there it's just a

00:23:39,000 --> 00:23:47,250
bit of glue and then the real

00:23:41,640 --> 00:23:49,290
interesting systems dense subsystem it

00:23:47,250 --> 00:23:52,080
takes the bike strain from the mac and

00:23:49,290 --> 00:23:55,140
turns it into bits and it does a bit of

00:23:52,080 --> 00:23:59,540
extra recording and it's also known as

00:23:55,140 --> 00:23:59,540
the saez the steriliser deserialize i

00:24:00,080 --> 00:24:08,160
determine that you've got a link

00:24:02,490 --> 00:24:08,760
end-to-end firstly loss of signal has to

00:24:08,160 --> 00:24:11,060
be false

00:24:08,760 --> 00:24:13,260
ie there's some sort of light coming in

00:24:11,060 --> 00:24:16,430
although it will tell you much about the

00:24:13,260 --> 00:24:19,680
light it's just the right wavelength and

00:24:16,430 --> 00:24:21,510
the pcs has to say

00:24:19,680 --> 00:24:25,370
I've got sync there's a clock signal I

00:24:21,510 --> 00:24:25,370
understand the basic bit stream

00:24:28,560 --> 00:24:33,040
you also got to try and configure these

00:24:30,670 --> 00:24:36,580
things in that again there's no aught on

00:24:33,040 --> 00:24:39,340
the gag he will tell you a bit about

00:24:36,580 --> 00:24:45,300
itself in its EEPROM what baud rate does

00:24:39,340 --> 00:24:48,670
it support in this case example 4.2

00:24:45,300 --> 00:24:50,950
that's a fibre channel I set P but you

00:24:48,670 --> 00:24:53,260
can also use it for networking that's

00:24:50,950 --> 00:24:57,220
sufficient to be able to do how's the

00:24:53,260 --> 00:24:59,830
best x and 2500 basics which gets

00:24:57,220 --> 00:25:02,350
confusing because what come to Mac do

00:24:59,830 --> 00:25:04,750
what can the SSP do the two have got to

00:25:02,350 --> 00:25:07,270
decide right I'm going to do this so the

00:25:04,750 --> 00:25:10,330
nice be some sort of negotiation between

00:25:07,270 --> 00:25:12,610
the Mac and fine and that doesn't

00:25:10,330 --> 00:25:14,920
normally exist with one gig you've got a

00:25:12,610 --> 00:25:15,820
wonky Mac you've got a one gig fine they

00:25:14,920 --> 00:25:19,180
talk to each other

00:25:15,820 --> 00:25:21,540
everybody's happy you also got the

00:25:19,180 --> 00:25:24,760
problem is what is the other end doing

00:25:21,540 --> 00:25:29,230
is he also trying to do one gig or is it

00:25:24,760 --> 00:25:32,170
trying to do 2.5 whatever so it's a lot

00:25:29,230 --> 00:25:34,210
more manual to setup it's a really fast

00:25:32,170 --> 00:25:35,170
pace to make it mainstream somebody

00:25:34,210 --> 00:25:37,540
needs to think about what the

00:25:35,170 --> 00:25:39,160
negotiation for data center where

00:25:37,540 --> 00:25:40,960
everything's on the good control no

00:25:39,160 --> 00:25:44,130
problems but if you think about

00:25:40,960 --> 00:25:46,270
fiber-to-the-home off my bay in the home

00:25:44,130 --> 00:25:53,680
somebody needs to think about looking

00:25:46,270 --> 00:25:56,950
play and then back to copper when is a

00:25:53,680 --> 00:25:59,410
couple link up that's slightly different

00:25:56,950 --> 00:26:02,350
here to single gate to multi kick

00:25:59,410 --> 00:26:04,930
because of this sad s line between the

00:26:02,350 --> 00:26:07,210
muck and the fine that's got to be

00:26:04,930 --> 00:26:12,700
configured to the right speed for what

00:26:07,210 --> 00:26:16,120
the whole chain is yet more layers

00:26:12,700 --> 00:26:18,670
within the various sections but the

00:26:16,120 --> 00:26:21,070
interesting thing here is going to the

00:26:18,670 --> 00:26:24,190
pcs going to the piece yes they've

00:26:21,070 --> 00:26:27,640
reused part of their standards to give

00:26:24,190 --> 00:26:30,430
you the Mac to fine link and then the

00:26:27,640 --> 00:26:35,170
user send block again to do you fight to

00:26:30,430 --> 00:26:38,990
Phi over the cable so you've got a sad

00:26:35,170 --> 00:26:41,280
days talking to a third s factor

00:26:38,990 --> 00:26:45,510
and you've got all the configuration

00:26:41,280 --> 00:26:47,520
issues with that to determine it so the

00:26:45,510 --> 00:26:50,370
first thing that will happen is the PCs

00:26:47,520 --> 00:26:52,860
layer will talk to the peer pcs layer

00:26:50,370 --> 00:26:54,960
and say I can do this bit but moderate

00:26:52,860 --> 00:26:58,740
at read but all right what's the common

00:26:54,960 --> 00:27:01,430
set we'll pick the highest then signal

00:26:58,740 --> 00:27:06,000
over the MDI goes to the fire driver

00:27:01,430 --> 00:27:07,580
I'm already at the cable ready the cable

00:27:06,000 --> 00:27:10,620
is then ready

00:27:07,580 --> 00:27:13,560
it will also configure it's all the PCs

00:27:10,620 --> 00:27:18,200
for the say des to the Mac to the right

00:27:13,560 --> 00:27:22,890
speed so in this case it's configured

00:27:18,200 --> 00:27:27,360
2500 things and then the Mac has got to

00:27:22,890 --> 00:27:30,510
configure its end to a sound speed and

00:27:27,360 --> 00:27:32,100
then you'll get a sink there's lots of

00:27:30,510 --> 00:27:34,380
steps to go through before you can

00:27:32,100 --> 00:27:35,910
actually say the link it up the cables

00:27:34,380 --> 00:27:42,450
got to be up the service has got to be

00:27:35,910 --> 00:27:48,090
up the classical API that's been around

00:27:42,450 --> 00:27:51,930
for decades is the violet which is there

00:27:48,090 --> 00:27:55,670
to represent a Phi it has no concept of

00:27:51,930 --> 00:27:55,670
all these different pieces in the chain

00:27:56,030 --> 00:28:00,810
the driver needs to connect to the Phi

00:27:58,950 --> 00:28:01,920
because there can be multiple fires out

00:28:00,810 --> 00:28:04,710
there and you've got to get the one

00:28:01,920 --> 00:28:05,970
that's actually connected to the Mac if

00:28:04,710 --> 00:28:07,620
you're in device tree for in the

00:28:05,970 --> 00:28:11,930
embedded world that will tell you where

00:28:07,620 --> 00:28:15,450
it is you got to disconnect to the end

00:28:11,930 --> 00:28:17,040
when your interfaces configured up you

00:28:15,450 --> 00:28:18,510
want to tell the fire hey talk to the

00:28:17,040 --> 00:28:23,250
other end figure out what link we're

00:28:18,510 --> 00:28:25,380
going to do so if I start well knowing

00:28:23,250 --> 00:28:28,380
it goes down you can save quite a bit of

00:28:25,380 --> 00:28:32,850
power by turning fire off maybe it will

00:28:28,380 --> 00:28:34,380
up to a what so it's worth doing it and

00:28:32,850 --> 00:28:36,660
then you've got a call back when the

00:28:34,380 --> 00:28:38,880
fine library tells the mac library

00:28:36,660 --> 00:28:41,790
something just happened the link ml Ling

00:28:38,880 --> 00:28:44,309
went down link chain the speed change

00:28:41,790 --> 00:28:47,830
though the pulse changed although

00:28:44,309 --> 00:28:52,659
this works well for the old ones ten

00:28:47,830 --> 00:28:54,879
hundred gig household duplex copper

00:28:52,659 --> 00:28:56,379
doesn't work for why I showed before

00:28:54,879 --> 00:29:00,909
it's got problems

00:28:56,379 --> 00:29:05,559
I've got limitations the only sports

00:29:00,909 --> 00:29:07,779
copper fiber didn't exist no idea what

00:29:05,559 --> 00:29:12,340
the supports ndio that's the normal both

00:29:07,779 --> 00:29:15,999
to talk to a fine you get into oddities

00:29:12,340 --> 00:29:18,549
when you've got an SFP module that is an

00:29:15,999 --> 00:29:21,220
optic it's copper you can do that you

00:29:18,549 --> 00:29:23,710
can have an rj45 connector on the front

00:29:21,220 --> 00:29:25,269
and then you don't have this MDI of

00:29:23,710 --> 00:29:30,869
course you've got this I squared C BOTS

00:29:25,269 --> 00:29:30,869
and you can tunnel MDI or of I squared C

00:29:31,499 --> 00:29:35,919
it's meant to be cold plug its on the

00:29:34,149 --> 00:29:37,570
board when the power comes on finds

00:29:35,919 --> 00:29:42,249
there it doesn't disappear it doesn't

00:29:37,570 --> 00:29:46,539
come back again this has some dynamic

00:29:42,249 --> 00:29:49,210
behavior but not much and the Mac is not

00:29:46,539 --> 00:29:52,409
involved am I the fire tells the map we

00:29:49,210 --> 00:29:56,879
have linked everything good girl

00:29:52,409 --> 00:29:59,080
ESPYs thankful nice much more dynamic

00:29:56,879 --> 00:30:01,570
the module can be plugged on float

00:29:59,080 --> 00:30:05,080
anytime you got to be able to handle

00:30:01,570 --> 00:30:11,950
that you've got to configure this Mac to

00:30:05,080 --> 00:30:15,029
find or muck to SSP link automations all

00:30:11,950 --> 00:30:15,029
the fact there's no autonegotiation

00:30:15,570 --> 00:30:20,080
you've got the weird modes

00:30:17,619 --> 00:30:22,749
sometimes you're running 2500 base X

00:30:20,080 --> 00:30:25,690
sometimes here is an SG mine clocked up

00:30:22,749 --> 00:30:27,850
at higher speed the math on the phone

00:30:25,690 --> 00:30:33,789
I've got to negotiate what we actually

00:30:27,850 --> 00:30:36,100
gonna talk to each other so we introduce

00:30:33,789 --> 00:30:40,059
Russell decide to introduce new new API

00:30:36,100 --> 00:30:41,830
to solve all these problems to try and

00:30:40,059 --> 00:30:44,259
make easier to use he can actually kept

00:30:41,830 --> 00:30:48,100
it quite similar to the old API rather

00:30:44,259 --> 00:30:49,509
than invent something completely new so

00:30:48,100 --> 00:30:51,620
we have a struct fine link and this

00:30:49,509 --> 00:30:57,380
represents the whole chair

00:30:51,620 --> 00:31:01,340
rather than just a fine it can handle an

00:30:57,380 --> 00:31:04,640
SFP it can handle a fine inside an SFP

00:31:01,340 --> 00:31:07,039
it can handle the saddest links it it

00:31:04,640 --> 00:31:08,720
hides all what knowledge into one

00:31:07,039 --> 00:31:13,909
structure which then houses numerous

00:31:08,720 --> 00:31:15,919
structures underneath it you've got to

00:31:13,909 --> 00:31:19,299
create and destroy this thing it doesn't

00:31:15,919 --> 00:31:21,919
just magically appear but at that point

00:31:19,299 --> 00:31:23,630
and because it's coming from the

00:31:21,919 --> 00:31:25,850
embedded world it will go look in the

00:31:23,630 --> 00:31:29,240
device tree and find what it can't about

00:31:25,850 --> 00:31:31,100
this board are we expecting there to be

00:31:29,240 --> 00:31:36,500
an SSP there where's the I squeeze I

00:31:31,100 --> 00:31:40,039
squared C loss what the GPIO us etc if

00:31:36,500 --> 00:31:42,140
you're using a soldered down fine then

00:31:40,039 --> 00:31:45,289
you need to connect to it in the same

00:31:42,140 --> 00:31:47,480
way you will do the pilot if you're not

00:31:45,289 --> 00:31:49,279
if it's hot plug in it will just appear

00:31:47,480 --> 00:31:54,130
it will tell you oh let me just plug

00:31:49,279 --> 00:31:54,130
this module in here's what it can do oh

00:31:54,549 --> 00:32:01,190
stop so every bit of power by turning it

00:31:57,770 --> 00:32:04,159
off when you don't need it and one major

00:32:01,190 --> 00:32:07,130
new coal is the muck can tell the

00:32:04,159 --> 00:32:09,710
library something just happened the sare

00:32:07,130 --> 00:32:11,960
des is now up that was completely

00:32:09,710 --> 00:32:15,740
missing from the old API that's one of

00:32:11,960 --> 00:32:16,970
the important functions and we also have

00:32:15,740 --> 00:32:23,270
a big long list of callbacks

00:32:16,970 --> 00:32:26,000
well the validate call is there to make

00:32:23,270 --> 00:32:27,770
sure the map and the Phi do both doing

00:32:26,000 --> 00:32:29,750
the same thing they both know that what

00:32:27,770 --> 00:32:31,610
their capabilities are and negotiate

00:32:29,750 --> 00:32:37,490
what are we gonna do on this link at

00:32:31,610 --> 00:32:39,890
this time you can ask the Mac how do you

00:32:37,490 --> 00:32:41,740
see the link at the moment is it up down

00:32:39,890 --> 00:32:44,450
what race is it running

00:32:41,740 --> 00:32:46,429
you can tell it you can tell the Mac how

00:32:44,450 --> 00:32:50,120
to configure itself what do we expect to

00:32:46,429 --> 00:32:52,010
be doing over this link at this time you

00:32:50,120 --> 00:32:54,200
can reach that autumn ago station on the

00:32:52,010 --> 00:32:57,190
Mac end which is a bit unusual because

00:32:54,200 --> 00:32:59,210
it's normal if I don't you need that

00:32:57,190 --> 00:33:01,730
anything policy to apply you can force

00:32:59,210 --> 00:33:04,190
it down when you don't actually output

00:33:01,730 --> 00:33:04,720
anything connected to it in terms of its

00:33:04,190 --> 00:33:08,110
connected

00:33:04,720 --> 00:33:12,520
an Ethernet switch not a fine on SFP you

00:33:08,110 --> 00:33:14,850
just want to force it up which is what

00:33:12,520 --> 00:33:17,409
we use a lot in da sir

00:33:14,850 --> 00:33:20,530
okay so now you actually want to try and

00:33:17,409 --> 00:33:24,730
use the thing documentation a few good

00:33:20,530 --> 00:33:27,549
examples the Marvel and Vanetta that's

00:33:24,730 --> 00:33:29,409
the one that was on in those boards that

00:33:27,549 --> 00:33:33,909
Russell used hence it is sports

00:33:29,409 --> 00:33:36,820
everything do you say so these nets

00:33:33,909 --> 00:33:38,169
which is that we support the Marvel

00:33:36,820 --> 00:33:40,450
Ethernet switch and the rod comm

00:33:38,169 --> 00:33:42,220
oriented on this bit I've done my bit if

00:33:40,450 --> 00:33:45,070
you want to use fiber connections to

00:33:42,220 --> 00:33:49,090
Ethernet switches pick the novel ones

00:33:45,070 --> 00:33:51,880
Oh rod come it'll work and then the

00:33:49,090 --> 00:33:53,950
other one is MVP to is working progress

00:33:51,880 --> 00:33:57,580
not the best yet but it's still

00:33:53,950 --> 00:34:00,659
something to look at and there's some

00:33:57,580 --> 00:34:00,659
criminal docket the I for it

00:34:03,270 --> 00:34:10,450
when you tend to use core code you often

00:34:08,470 --> 00:34:13,290
get free bit things that something else

00:34:10,450 --> 00:34:15,760
is implemented this just works for you

00:34:13,290 --> 00:34:18,550
if you implement all this yourself like

00:34:15,760 --> 00:34:20,649
all the Intel drivers they've got bits

00:34:18,550 --> 00:34:22,450
of Esav be good but they don't have

00:34:20,649 --> 00:34:24,190
they've had to plumb this bit together

00:34:22,450 --> 00:34:25,839
themselves whereas if you use the

00:34:24,190 --> 00:34:29,770
central in structure it just works so

00:34:25,839 --> 00:34:32,830
you can read what is this SFP what's in

00:34:29,770 --> 00:34:34,990
it's eproms what temperature is it

00:34:32,830 --> 00:34:38,320
running out how much current is a

00:34:34,990 --> 00:34:39,970
drawing what is it a fiber-optic how

00:34:38,320 --> 00:34:42,760
long can it go except for etcetera and

00:34:39,970 --> 00:34:45,250
it's somewhat human readable sometimes

00:34:42,760 --> 00:34:50,440
right and sometimes we even get the

00:34:45,250 --> 00:34:52,419
checksum right but often other things

00:34:50,440 --> 00:34:54,339
like the sensors in there you can see

00:34:52,419 --> 00:34:56,530
how hot is this thing because there's a

00:34:54,339 --> 00:34:59,950
lot of power going into these look at me

00:34:56,530 --> 00:35:03,460
1 watt 2 watts and if you've got a board

00:34:59,950 --> 00:35:05,349
with 12 of them it can get hot and hence

00:35:03,460 --> 00:35:07,920
you want to use things like it's really

00:35:05,349 --> 00:35:10,560
Mon to monitor it and to drive the fan

00:35:07,920 --> 00:35:14,200
so you just get this for free because

00:35:10,560 --> 00:35:14,950
the cord was it you can see what's the

00:35:14,200 --> 00:35:16,330
temperature

00:35:14,950 --> 00:35:17,730
what's the transmit power what's the

00:35:16,330 --> 00:35:21,800
received power

00:35:17,730 --> 00:35:25,580
is it actually get it voltage it wanders

00:35:21,800 --> 00:35:27,720
so go out there and use it please

00:35:25,580 --> 00:35:29,160
and now we'll review any patches you

00:35:27,720 --> 00:35:32,550
submit and I'll tell you what you got

00:35:29,160 --> 00:35:34,130
wrong and go right and also we're a bit

00:35:32,550 --> 00:35:36,960
limit at the moment with 1 gig fines

00:35:34,130 --> 00:35:39,720
there's only one that's really supported

00:35:36,960 --> 00:35:41,250
well that's the Marvel one may be nice

00:35:39,720 --> 00:35:45,300
if for the fines who have properly

00:35:41,250 --> 00:35:47,580
supported and this isn't replacing the

00:35:45,300 --> 00:35:49,080
fire drivers it's using the fire driver

00:35:47,580 --> 00:36:08,550
so don't worry about that you don't need

00:35:49,080 --> 00:36:10,170
to write new find drivers questions yeah

00:36:08,550 --> 00:36:11,310
I'm not gonna make any excuses for the

00:36:10,170 --> 00:36:15,030
Intel drivers because that's a whole

00:36:11,310 --> 00:36:19,770
nother hour so but I did have a question

00:36:15,030 --> 00:36:22,950
about how you manage in this layer how

00:36:19,770 --> 00:36:24,960
you manage like maybe incompatible SFP

00:36:22,950 --> 00:36:26,970
models so we've noticed from our side

00:36:24,960 --> 00:36:29,940
that and I know you've probably seen it

00:36:26,970 --> 00:36:30,900
maybe some - is that one he proms are

00:36:29,940 --> 00:36:32,490
just wrong

00:36:30,900 --> 00:36:33,990
yep and then there are certain things

00:36:32,490 --> 00:36:36,390
and you know some of our products have

00:36:33,990 --> 00:36:37,650
gone to whitelisting stuff for various

00:36:36,390 --> 00:36:39,020
reasons but some of the reason is

00:36:37,650 --> 00:36:41,730
because a lot of the stuff doesn't work

00:36:39,020 --> 00:36:43,200
right like you plug it in and it fits in

00:36:41,730 --> 00:36:45,690
the cage that doesn't really mean

00:36:43,200 --> 00:36:46,859
anything to tell functional it is and

00:36:45,690 --> 00:36:49,560
then the other one I wanted to add is

00:36:46,859 --> 00:36:51,930
that we we had to do some auto we called

00:36:49,560 --> 00:36:53,820
Auto try instead of on you know I don't

00:36:51,930 --> 00:36:55,230
negotiate right we were Auto trying 110

00:36:53,820 --> 00:36:57,270
giggling speeds because there's these

00:36:55,230 --> 00:37:00,450
dual modules that will support both

00:36:57,270 --> 00:37:02,310
speeds on the same laser yeah so

00:37:00,450 --> 00:37:04,650
basically it needs pushback from those

00:37:02,310 --> 00:37:07,530
to the manufacturers saying hey it just

00:37:04,650 --> 00:37:09,930
doesn't work fix it and suddenly of your

00:37:07,530 --> 00:37:12,869
size can probably do that in the small

00:37:09,930 --> 00:37:15,720
embedded world maybe not the abetted

00:37:12,869 --> 00:37:18,970
world Germany has the advantage they

00:37:15,720 --> 00:37:21,430
pick their SFP module they make

00:37:18,970 --> 00:37:24,730
they make sure it works and then they

00:37:21,430 --> 00:37:27,510
deploy the same one everywhere turn on

00:37:24,730 --> 00:37:27,510
the volume on the mic

00:37:27,690 --> 00:37:32,059
[Music]

00:37:33,670 --> 00:37:39,739
so for example and I know of warning

00:37:36,559 --> 00:37:41,630
when use curses on aircraft and it's

00:37:39,739 --> 00:37:44,660
always the same SFP module they know it

00:37:41,630 --> 00:37:46,579
works when it's when you do it in bed

00:37:44,660 --> 00:37:48,200
systems you can do that it's when it

00:37:46,579 --> 00:37:50,229
gets to consumer there's gonna be a

00:37:48,200 --> 00:37:52,130
problem

00:37:50,229 --> 00:37:55,729
datacenters not gonna be a problem it's

00:37:52,130 --> 00:37:57,799
gonna become cm oh I think he does have

00:37:55,729 --> 00:38:00,499
a fair point though because the hardware

00:37:57,799 --> 00:38:03,410
is out there and maybe we should have

00:38:00,499 --> 00:38:05,569
some mechanisms inside filing to have a

00:38:03,410 --> 00:38:07,339
whitelist or some kind of there is a

00:38:05,569 --> 00:38:10,160
fine there's a whitelist at the moment

00:38:07,339 --> 00:38:14,630
for this here CRC is wrong we will

00:38:10,160 --> 00:38:17,539
accept Phi s FPS with the broken if it's

00:38:14,630 --> 00:38:19,609
the IDE that's another if it's just yeah

00:38:17,539 --> 00:38:21,859
this generally the Cotswolds they're

00:38:19,609 --> 00:38:23,809
generally broken in terms of it looks

00:38:21,859 --> 00:38:27,650
like they changed the serial number and

00:38:23,809 --> 00:38:29,329
then don't update the CRC and I even

00:38:27,650 --> 00:38:32,140
think it's to the point where if I

00:38:29,329 --> 00:38:35,229
understand Jesse's situation accurately

00:38:32,140 --> 00:38:37,339
he knows a list of espionage ULA's that

00:38:35,229 --> 00:38:41,930
specifically do not work with his Mac

00:38:37,339 --> 00:38:43,880
yeah it's so a Mac specific what yeah

00:38:41,930 --> 00:38:48,519
Matt yeah a Mac specific white black

00:38:43,880 --> 00:38:48,519
list of some kind of something like that

00:38:55,960 --> 00:39:01,940
there's a specific SFB driver and I

00:38:59,509 --> 00:39:04,190
could see that that driver house kind of

00:39:01,940 --> 00:39:07,660
a sub library in it that contains this

00:39:04,190 --> 00:39:09,769
wine list that's how we could share it I

00:39:07,660 --> 00:39:12,529
think there needs to be some explicit

00:39:09,769 --> 00:39:14,509
support for this kind of situation at

00:39:12,529 --> 00:39:16,789
some point I think it partially is

00:39:14,509 --> 00:39:17,960
because again it's from the embedded

00:39:16,789 --> 00:39:19,549
world people know what they're doing I

00:39:17,960 --> 00:39:20,839
would note off the record that bra comic

00:39:19,549 --> 00:39:23,580
knowledge that there should be something

00:39:20,839 --> 00:39:26,380
like this yeah yeah

00:39:23,580 --> 00:39:28,900
it's just it takes time tap on done so

00:39:26,380 --> 00:39:30,490
far there's not been that much pain in

00:39:28,900 --> 00:39:33,220
the embedded world on its embedded world

00:39:30,490 --> 00:39:34,480
that's driving this when it comes to

00:39:33,220 --> 00:39:36,700
consumers yeah I can see they're gonna

00:39:34,480 --> 00:39:38,530
be paying and then we'll do it so I've

00:39:36,700 --> 00:39:41,050
been playing with SP a long time because

00:39:38,530 --> 00:39:44,500
that's what the Neptune driver used for

00:39:41,050 --> 00:39:45,790
10-gig the Sun nru and I had no idea

00:39:44,500 --> 00:39:47,140
about any of this because I just

00:39:45,790 --> 00:39:48,340
programmed everything directly in my

00:39:47,140 --> 00:39:51,370
driver and that's what everyone's been

00:39:48,340 --> 00:39:53,790
doing Intel as well we're all guilty

00:39:51,370 --> 00:39:55,810
parties in this situation so I

00:39:53,790 --> 00:39:57,940
definitely agree with you that it'd be

00:39:55,810 --> 00:40:00,490
nice if people move towards inverted

00:39:57,940 --> 00:40:01,990
infrastructure and some of you may not

00:40:00,490 --> 00:40:03,940
even believe this we didn't even have a

00:40:01,990 --> 00:40:05,530
fly layer at one point in the house and

00:40:03,940 --> 00:40:06,670
everyone duplicated the state machine

00:40:05,530 --> 00:40:09,040
and everything inside there anything

00:40:06,670 --> 00:40:10,090
that drivers so we're a long ways off to

00:40:09,040 --> 00:40:12,790
where we've been but we can keep

00:40:10,090 --> 00:40:17,020
improving that's for sure any other

00:40:12,790 --> 00:40:17,860
questions thank you very much Angie

00:40:17,020 --> 00:40:22,939
thank you

00:40:17,860 --> 00:40:22,939

YouTube URL: https://www.youtube.com/watch?v=1ecAkcAxLJw


