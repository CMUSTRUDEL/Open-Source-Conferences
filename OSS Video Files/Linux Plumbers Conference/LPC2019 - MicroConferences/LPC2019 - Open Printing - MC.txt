Title: LPC2019 - Open Printing - MC
Publication date: 2019-11-18
Playlist: LPC2019 - MicroConferences
Description: 
	Videos of the Topics:

[Printing in Linux as of today (00:0)](https://www.youtube.com/watch?v=0c_JaX4G7Zc)
Aveek Basu and Till Kamppeter

[Common Print Dialog Backends (29:14)](https://www.youtube.com/watch?v=0c_JaX4G7Zc?t=1754)
Rithvik Patibandia

[Working with SANE to make IPP scanning a reality (51:51)](https://www.youtube.com/watch?v=0c_JaX4G7Zc?t=3111)
Aveek Basu

[Printer/Scanner Application - The new format for printer and scanner drivers (1:15:30)](https://youtu.be/0c_JaX4G7Zc?t=4530)
Till Kamppeter

[The Future of Printer Setup Tools - IPP Driverless Printing and IPP System Service (2:05:10)](https://youtu.be/0c_JaX4G7Zc?t=7510)
Till Kamppeter 

[3D Printing without the use of any slicer (2:20:04)](https://youtu.be/0c_JaX4G7Zc?t=8405)
Aveek Basu
Captions: 
	00:00:00,790 --> 00:00:03,370
- So a very good morning everyone.

00:00:04,560 --> 00:00:06,690
This is all about open printing

00:00:06,690 --> 00:00:08,850
which we are going to discuss today.

00:00:08,850 --> 00:00:11,990
So before we start just tell me,

00:00:11,990 --> 00:00:13,490
how many of you have printed your

00:00:13,490 --> 00:00:15,710
boarding passes when welcoming over here?

00:00:18,370 --> 00:00:20,790
See, it's almost 50% of the population.

00:00:20,790 --> 00:00:23,340
So that's why printing is still important.

00:00:23,340 --> 00:00:26,270
Even though we talk about digitization,

00:00:26,270 --> 00:00:30,020
documents in our mobile or soft copies or drives

00:00:30,020 --> 00:00:32,250
and all, but still we print, to print

00:00:32,250 --> 00:00:34,590
our boarding passes or something else.

00:00:34,590 --> 00:00:38,380
So you know what, this is because of open

00:00:38,380 --> 00:00:40,690
printing that you are able to print in Linux.

00:00:40,690 --> 00:00:42,840
So that's the important of printing in today's life.

00:00:42,840 --> 00:00:43,760
Okay.

00:00:43,760 --> 00:00:48,700
So thank you all for joining this session this morning.

00:00:48,700 --> 00:00:51,260
I hope you had a wonderful sleep last night

00:00:51,260 --> 00:00:53,320
after your long flights.

00:00:53,320 --> 00:00:54,153
Okay.

00:00:54,153 --> 00:00:57,330
To start up, we will take this out

00:00:57,330 --> 00:00:59,720
in more of a discussion format.

00:00:59,720 --> 00:01:02,330
So before going to the discussion,

00:01:02,330 --> 00:01:05,440
we would like to show you what

00:01:05,440 --> 00:01:08,300
exactly is print doing today or

00:01:08,300 --> 00:01:10,630
where exactly are we today?

00:01:10,630 --> 00:01:12,690
So once we, because print is a very,

00:01:12,690 --> 00:01:14,680
very you know, concentrated technology

00:01:14,680 --> 00:01:17,050
and very few people work on in this area,

00:01:17,050 --> 00:01:19,580
it's very much concentrated so we,

00:01:19,580 --> 00:01:21,340
even though it's, we all agree to it

00:01:21,340 --> 00:01:23,080
that is very important.

00:01:23,080 --> 00:01:26,220
So we plan to show you how it is today,

00:01:26,220 --> 00:01:27,530
how it is working today

00:01:27,530 --> 00:01:29,650
and then we discuss about the challenges,

00:01:29,650 --> 00:01:32,020
what we can work together or to collaborate.

00:01:33,490 --> 00:01:37,940
Myself Aveek, I am the program manager of open printing

00:01:37,940 --> 00:01:40,230
and on my personal front I work

00:01:40,230 --> 00:01:42,210
for Lexmark for the last 11 years in

00:01:42,210 --> 00:01:45,160
the printing industry in India.

00:01:45,160 --> 00:01:48,010
And he is Till Kamppeter, he leads the.

00:01:48,010 --> 00:01:50,800
- Yes, I am the leader of the open printing project,

00:01:50,800 --> 00:01:54,770
Open printing was founded back in 2001

00:01:55,630 --> 00:01:59,030
and since then I am working on printing,

00:01:59,030 --> 00:02:02,070
I do everything to make printing just work

00:02:02,980 --> 00:02:06,330
with Linux and similar operating systems

00:02:07,987 --> 00:02:12,987
so that we have plug and print

00:02:13,280 --> 00:02:15,840
and not plug and play so not plug it in

00:02:15,840 --> 00:02:18,250
and play for hours with the drivers.

00:02:18,250 --> 00:02:21,000
Simply plug it in and you can print

00:02:21,940 --> 00:02:24,560
so it's not nothing complicated any more

00:02:24,560 --> 00:02:26,420
with structured deposition of ink

00:02:26,420 --> 00:02:30,830
and toner particles on paper substrates,

00:02:30,830 --> 00:02:34,180
it's simply plug and print

00:02:34,180 --> 00:02:36,390
and I hope it will get better.

00:02:37,340 --> 00:02:38,320
- Thank you Till.

00:02:38,320 --> 00:02:40,090
We have Rithvik also speaking today

00:02:40,090 --> 00:02:42,150
and we have Patrick from Google

00:02:42,150 --> 00:02:45,220
joining us on behalf of open printing.

00:02:45,220 --> 00:02:46,053
Okay.

00:02:46,053 --> 00:02:47,330
So we move on to the next slide

00:02:47,330 --> 00:02:48,650
on what we speak today.

00:02:49,540 --> 00:02:51,940
So the first thing is as I told you

00:02:51,940 --> 00:02:54,100
that we are going to discuss how printing

00:02:54,100 --> 00:02:56,590
today is in Linux or what we have

00:02:56,590 --> 00:02:58,430
achieved or how is it doing.

00:02:59,350 --> 00:03:02,700
The next thing is common print dialogue backends,

00:03:04,580 --> 00:03:07,750
then working with SANE to make IPP scanning a reality.

00:03:07,750 --> 00:03:09,720
So once we discuss more, you'll get to know

00:03:09,720 --> 00:03:12,780
what I'm speaking of, the next thing

00:03:12,780 --> 00:03:14,580
is printer, scanner applications.

00:03:14,580 --> 00:03:16,350
Now this is going to be the future.

00:03:16,350 --> 00:03:18,650
So this is what the future looks like.

00:03:20,480 --> 00:03:21,780
Thumb print setup tools

00:03:22,980 --> 00:03:25,510
and 3D printing without the use of any slicer.

00:03:25,510 --> 00:03:27,620
So this is the agenda for today.

00:03:27,620 --> 00:03:29,470
We quickly move on to the next slide.

00:03:32,760 --> 00:03:33,780
Okay.

00:03:33,780 --> 00:03:36,350
So how do we print today?

00:03:36,350 --> 00:03:38,870
In today's world, how are we trying to print?

00:03:38,870 --> 00:03:41,280
See this is a webpage from Lexmark

00:03:41,280 --> 00:03:44,320
where we generally need to download our drivers.

00:03:44,320 --> 00:03:46,680
So to use a printer, which is there in our home

00:03:46,680 --> 00:03:48,520
so what have we been doing?

00:03:48,520 --> 00:03:49,860
We need a driver.

00:03:49,860 --> 00:03:52,300
So driver communicates with your firmware

00:03:52,300 --> 00:03:54,450
and the users and it understands

00:03:54,450 --> 00:03:56,620
the language of the device.

00:03:56,620 --> 00:03:59,180
So we need the driver for that company,

00:03:59,180 --> 00:04:00,840
we need to go to their site, we need

00:04:00,840 --> 00:04:02,450
to download it from there right?

00:04:04,410 --> 00:04:07,390
So here as example I have put in

00:04:07,390 --> 00:04:12,060
a Lexmark CX920 so it gives me

00:04:12,060 --> 00:04:15,040
and I have put in the Linux OS it gives me

00:04:15,040 --> 00:04:17,160
all the drivers that are there, all kind

00:04:17,160 --> 00:04:19,150
of drivers, Lexmark, so similar is

00:04:19,150 --> 00:04:23,040
the case for HP or any other you know, printer vendor.

00:04:25,210 --> 00:04:27,630
So the next thing is you download

00:04:27,630 --> 00:04:29,420
and install it in your OS

00:04:30,400 --> 00:04:33,470
and last but not the least, you try to print it.

00:04:33,470 --> 00:04:35,970
So you need to follow all these complicated steps.

00:04:36,840 --> 00:04:41,840
So now for example say you want to print

00:04:42,650 --> 00:04:45,140
something from your hotel from Corinthia

00:04:45,140 --> 00:04:47,730
and because you forgot to get some printout

00:04:47,730 --> 00:04:49,570
and there is no one to attend you

00:04:49,570 --> 00:04:51,510
so what do you need to do is?

00:04:51,510 --> 00:04:54,160
You need to go to that make, I mean download

00:04:54,160 --> 00:04:55,510
the driver for that make

00:04:55,510 --> 00:04:56,800
and install it in your printer.

00:04:56,800 --> 00:04:57,980
Now it's a pain right?

00:05:00,860 --> 00:05:02,840
So how is printing today?

00:05:02,840 --> 00:05:04,110
What have we changed?

00:05:04,110 --> 00:05:06,280
What has open printing done or how is it?

00:05:07,880 --> 00:05:09,350
So this is what we have done.

00:05:10,900 --> 00:05:13,320
So it's all driverless.

00:05:13,320 --> 00:05:16,830
You sit back, you enjoy your magazine,

00:05:16,830 --> 00:05:20,220
you read, do whatever you want to,

00:05:20,220 --> 00:05:23,300
it's a driverless car, it does things

00:05:23,300 --> 00:05:24,960
without any user intervention.

00:05:26,290 --> 00:05:29,460
So printing today is just like using

00:05:29,460 --> 00:05:31,730
your thumb drive or your camera,

00:05:31,730 --> 00:05:34,130
you just plug it in, you use it.

00:05:35,030 --> 00:05:38,170
There is no need to do all the hassles

00:05:38,170 --> 00:05:41,480
of downloading a driver, installing it, using it.

00:05:41,480 --> 00:05:43,580
It's simply like you have a printer,

00:05:43,580 --> 00:05:45,410
all modern printers are now driverless

00:05:45,410 --> 00:05:47,320
printers or driverless scanners.

00:05:47,320 --> 00:05:51,290
So you plug it in, you do a control P,

00:05:51,290 --> 00:05:53,450
your printing works right?

00:05:53,450 --> 00:05:55,750
So this is what we have done.

00:05:55,750 --> 00:05:58,210
This is to ease out your pain,

00:05:58,210 --> 00:06:01,630
to make you, to help you print easily.

00:06:04,360 --> 00:06:07,150
So if you do not believe me, I have

00:06:07,150 --> 00:06:09,950
a short video to explain it, to give you the proof.

00:06:12,610 --> 00:06:15,500
I have a laptop, in this video I'm going

00:06:15,500 --> 00:06:18,460
to show a laptop which I connected to a network.

00:06:18,460 --> 00:06:19,550
Okay.

00:06:19,550 --> 00:06:20,690
So suppose you are connecting your

00:06:20,690 --> 00:06:22,630
laptop in this network

00:06:22,630 --> 00:06:25,610
and there are driverless printers in this network,

00:06:25,610 --> 00:06:27,760
so how is the OS going to behave

00:06:27,760 --> 00:06:29,280
or how is it going to behave?

00:06:30,450 --> 00:06:31,710
So let's see.

00:06:31,710 --> 00:06:34,900
- Yes this is by the way Ubuntu Linux

00:06:34,900 --> 00:06:37,310
where all is already implemented for

00:06:37,310 --> 00:06:39,110
driverless IPP printing.

00:06:46,280 --> 00:06:47,200
- Okay.

00:06:47,200 --> 00:06:48,033
Oh sorry.

00:06:51,565 --> 00:06:52,665
I make it full screen.

00:06:54,110 --> 00:06:54,943
Okay.

00:06:54,943 --> 00:06:58,150
This is the CUPS webpage so somebody who,

00:06:58,150 --> 00:07:00,580
if you are using printing extensively in Linux,

00:07:00,580 --> 00:07:01,980
so you know what is a CUPS page

00:07:01,980 --> 00:07:04,070
so this is a web interface of the CUPS,

00:07:04,070 --> 00:07:06,630
which is the backbone of printing in Linux.

00:07:06,630 --> 00:07:09,370
So at this point of time, my CUPS page shows

00:07:09,370 --> 00:07:11,680
I have only one printer added.

00:07:11,680 --> 00:07:14,280
So only one print queue that is HP office jet

00:07:14,280 --> 00:07:17,840
so that's a printer which I already have in my system.

00:07:18,730 --> 00:07:22,090
So now I connect it in a network which

00:07:22,090 --> 00:07:24,320
has wireless printers.

00:07:24,320 --> 00:07:26,530
Oh, sorry which has driverless printers.

00:07:26,530 --> 00:07:27,930
So let's see how it behaves.

00:07:35,090 --> 00:07:37,080
So this is just to show you that

00:07:37,080 --> 00:07:39,570
I have the PPD, so PPDs are the driver files.

00:07:39,570 --> 00:07:42,110
I mean in layman's terms we can term it

00:07:42,110 --> 00:07:44,380
as the driver files, so PPDs are something

00:07:44,380 --> 00:07:46,720
which records all that the printer

00:07:47,650 --> 00:07:50,040
exposes or the printer has okay.

00:07:50,040 --> 00:07:51,780
So it's, I had only one printer queue

00:07:51,780 --> 00:07:53,520
as I showed in the previous page

00:07:53,520 --> 00:07:55,210
and I have the driver file for that,

00:07:55,210 --> 00:07:56,310
there is nothing else.

00:07:57,170 --> 00:08:00,630
So now I have connected to the laptop,

00:08:02,010 --> 00:08:04,080
sorry I have connected my laptop

00:08:04,080 --> 00:08:07,260
in a network where there are driverless printers right?

00:08:07,260 --> 00:08:10,070
So in this thing, if you go to LibreOffice,

00:08:10,930 --> 00:08:14,440
I just did a control P and I see only one printer okay.

00:08:16,940 --> 00:08:18,220
Now what I'm doing is

00:08:19,800 --> 00:08:22,740
I'm connecting it to the network,

00:08:22,740 --> 00:08:24,980
which has driverless printers.

00:08:24,980 --> 00:08:26,940
It's connected to the network now,

00:08:26,940 --> 00:08:29,380
if you see it on the top corner,

00:08:29,380 --> 00:08:30,630
so it's showing ethernet.

00:08:37,920 --> 00:08:40,520
So at this point of time what you do is

00:08:40,520 --> 00:08:42,470
you want to print something, so you are

00:08:42,470 --> 00:08:44,420
in LibreOffice, you are doing control P

00:08:47,440 --> 00:08:48,390
see the difference.

00:08:50,170 --> 00:08:51,003
I did nothing.

00:08:51,003 --> 00:08:52,900
I didn't go to the website, I didn't

00:08:52,900 --> 00:08:56,760
download anything, I didn't install anything.

00:08:56,760 --> 00:08:58,640
I simply connected it to the network

00:08:58,640 --> 00:09:00,510
having driverless printers, I went

00:09:00,510 --> 00:09:03,180
to LibreOffice, I did a control P.

00:09:03,180 --> 00:09:04,970
It gives me the list of the printers

00:09:04,970 --> 00:09:06,850
which support driverless printing.

00:09:06,850 --> 00:09:08,700
So that is what we have achieved

00:09:08,700 --> 00:09:10,600
in open printing today.

00:09:10,600 --> 00:09:14,850
So you do not need to think of anything else.

00:09:14,850 --> 00:09:17,300
So these are the models which support driverless,

00:09:18,950 --> 00:09:20,970
What I need to do now is I need

00:09:20,970 --> 00:09:23,440
to select a particular printer with

00:09:23,440 --> 00:09:24,780
which I want to print.

00:09:26,030 --> 00:09:28,570
Here I select this particular model MX611,

00:09:29,420 --> 00:09:32,290
I just fired the print

00:09:32,290 --> 00:09:33,700
and see it started printing.

00:09:35,250 --> 00:09:36,850
See the notification on the top.

00:09:40,290 --> 00:09:42,440
You go to the jobs page of CUPS,

00:09:43,580 --> 00:09:46,600
it shows still the printing is in process

00:09:56,070 --> 00:09:57,020
printing completed.

00:09:59,820 --> 00:10:01,870
So don't worry if you forgot to print anything

00:10:01,870 --> 00:10:04,231
and you have a printer lying next to you,

00:10:04,231 --> 00:10:07,550
if it's a modern printer, if it supports

00:10:07,550 --> 00:10:11,140
driverless you can, you can simply print out of it.

00:10:14,200 --> 00:10:15,170
Okay.

00:10:15,170 --> 00:10:16,003
So

00:10:18,956 --> 00:10:22,560
yeah I think we need to do it

00:10:22,560 --> 00:10:24,000
there is a slide share mode.

00:10:27,494 --> 00:10:31,210
Just a second, I think we need to maximize this

00:10:32,140 --> 00:10:33,170
where is the next,

00:10:38,620 --> 00:10:43,030
okay so that was how printing is in today's world.

00:10:43,030 --> 00:10:46,460
Now I hand it over to Till, to have

00:10:46,460 --> 00:10:48,830
a short discussion on what all things

00:10:48,830 --> 00:10:50,420
we are doing for Open Printing,

00:10:50,420 --> 00:10:52,910
how we are supporting enterprises

00:10:52,910 --> 00:10:55,180
and what all things we do.

00:10:55,180 --> 00:10:56,013
Okay.

00:10:56,013 --> 00:10:58,300
So before that I need to make it a full screen.

00:11:05,130 --> 00:11:05,963
Okay.

00:11:05,963 --> 00:11:06,796
- Yes.

00:11:06,796 --> 00:11:10,490
Now we go to the wonderful world of open printing,

00:11:10,490 --> 00:11:13,250
which I'm leading since 2001

00:11:13,250 --> 00:11:16,360
and we do a lot of different things

00:11:16,360 --> 00:11:19,690
and it's the following.

00:11:24,290 --> 00:11:27,320
First of all we do everything to make

00:11:27,320 --> 00:11:32,320
printing just work, we implement printing standards,

00:11:33,600 --> 00:11:36,400
we work out architectures for integration

00:11:36,400 --> 00:11:40,870
of printing in free operating systems,

00:11:40,870 --> 00:11:43,960
Linux, Unix like operating systems

00:11:45,490 --> 00:11:46,323
and

00:11:48,650 --> 00:11:51,980
we work very closely together with PWG,

00:11:53,730 --> 00:11:55,320
the Printer Working Group.

00:11:55,320 --> 00:11:58,060
This is an organization consortium

00:11:58,060 --> 00:12:02,910
of printer manufacturers and also software,

00:12:02,910 --> 00:12:05,390
software and operating system vendors

00:12:06,380 --> 00:12:09,482
who work out standards for printing.

00:12:09,482 --> 00:12:13,150
Most important part of all is IPP,

00:12:13,150 --> 00:12:16,490
the Internet Printing Protocol,

00:12:17,780 --> 00:12:20,680
it got started back in the late 90,

00:12:24,937 --> 00:12:26,507
of the last Century

00:12:27,970 --> 00:12:31,930
and with the turn of the Century CUPS came up

00:12:31,930 --> 00:12:36,100
and so IPP was implemented in free software

00:12:37,120 --> 00:12:42,120
and beginning from this, I entered the business

00:12:45,950 --> 00:12:50,830
and made CUPS getting into the Linux distributions.

00:12:52,080 --> 00:12:52,913
And

00:12:54,480 --> 00:12:56,960
so we have IPP now

00:12:59,050 --> 00:13:02,940
and this got really the standard,

00:13:02,940 --> 00:13:07,040
every non CUPS printing system went away

00:13:07,040 --> 00:13:08,900
with the time, CUPS is the only

00:13:08,900 --> 00:13:10,650
maintained printing system.

00:13:10,650 --> 00:13:12,960
It's maintained by micro suite at EPR

00:13:15,329 --> 00:13:18,950
and for everything which EPR does not need,

00:13:18,950 --> 00:13:23,010
I'm the responsible with the open printing project.

00:13:27,280 --> 00:13:32,280
And the PWG has also thought about

00:13:33,900 --> 00:13:36,480
multifunction devices.

00:13:36,480 --> 00:13:38,530
These thing is where you have a printer

00:13:38,530 --> 00:13:43,220
and a scanner in one, it gets nearly

00:13:43,220 --> 00:13:47,310
more common than a simple single

00:13:47,310 --> 00:13:50,000
function printer nowadays

00:13:50,000 --> 00:13:52,660
you see much more in the offices

00:13:52,660 --> 00:13:56,140
and also at the homes, these ones which have printer

00:13:56,140 --> 00:13:58,530
and scanner all in one.

00:14:00,220 --> 00:14:01,540
And

00:14:02,603 --> 00:14:07,530
so the PWG has worked out the

00:14:07,530 --> 00:14:09,360
Internet Printing Protocol

00:14:09,360 --> 00:14:12,070
and started naturally for printing

00:14:12,070 --> 00:14:14,170
but they have also worked out the

00:14:14,170 --> 00:14:16,500
standard nowadays for the scanner in

00:14:16,500 --> 00:14:18,100
the multifunction devices.

00:14:18,100 --> 00:14:20,720
So we have IPP driverless scanning

00:14:21,970 --> 00:14:26,057
and this is also free and open standard,

00:14:26,057 --> 00:14:29,130
part of the IPP

00:14:29,130 --> 00:14:30,850
and by the way all of the standards

00:14:30,850 --> 00:14:33,960
worked out by the printing working group are free

00:14:33,960 --> 00:14:35,350
and open standards.

00:14:35,350 --> 00:14:39,110
So we have all specifications for

00:14:39,110 --> 00:14:44,110
every standard which the PWG is doing

00:14:44,140 --> 00:14:49,140
and so I can easily see the IPP has,

00:14:49,700 --> 00:14:54,660
the PWG has made something, something interesting

00:14:54,660 --> 00:14:58,130
so I align it up for the Google Summer of Code

00:14:58,130 --> 00:15:00,020
and in the next Google Summer of Code

00:15:00,020 --> 00:15:03,510
it will be turned to reality for us Linux

00:15:03,510 --> 00:15:06,760
and Unix and non Mac OS X users.

00:15:09,640 --> 00:15:12,450
And yes this is really also

00:15:12,450 --> 00:15:16,240
an important part of open printing

00:15:16,240 --> 00:15:21,240
that due to the lack of being attractive

00:15:21,431 --> 00:15:26,410
for volunteer contributors, we have started

00:15:26,410 --> 00:15:30,980
to every year participate in the Google Summer of Code.

00:15:30,980 --> 00:15:34,640
Aveek is recruiting students every

00:15:34,640 --> 00:15:37,850
year on in Indian universities

00:15:37,850 --> 00:15:39,890
and they do a lot of work for us

00:15:39,890 --> 00:15:43,910
and mainly also stay with our project so

00:15:44,940 --> 00:15:48,180
and continue working in open printing with us.

00:15:51,030 --> 00:15:54,490
And so in the next

00:15:54,490 --> 00:15:59,490
and so next up for the 2020 Google Summer of Code

00:15:59,590 --> 00:16:02,150
will be IPP driverless scanning

00:16:05,480 --> 00:16:09,330
and we will talk more about IPP

00:16:09,330 --> 00:16:10,920
driverless scanning later.

00:16:12,090 --> 00:16:16,110
And one important thing is Apple has

00:16:16,110 --> 00:16:18,550
overtaken Mike Sweet and CUPS many,

00:16:18,550 --> 00:16:21,660
many years ago to have a printing

00:16:21,660 --> 00:16:25,060
environment for Mac OS X.

00:16:25,060 --> 00:16:28,150
But CUPS was an integrated, complete

00:16:28,150 --> 00:16:31,970
solution for printing in Unix like

00:16:31,970 --> 00:16:36,840
operating systems but Apple for Mac OS X,

00:16:36,840 --> 00:16:40,150
they have decided to do some parts

00:16:40,150 --> 00:16:43,280
in the proprietary way, the filters

00:16:43,280 --> 00:16:47,140
for turning the PDF input data into

00:16:47,140 --> 00:16:49,880
the printer's native language, Apple has

00:16:49,880 --> 00:16:52,760
decided to do this all proprietary

00:16:52,760 --> 00:16:55,945
and not using the free filters which

00:16:55,945 --> 00:16:59,670
came with the OEG markups.

00:16:59,670 --> 00:17:03,130
So and Apple did not want to maintain

00:17:03,130 --> 00:17:06,220
any more these filters which they don't use any way

00:17:06,220 --> 00:17:10,540
and so they have passed them over to me to open printing

00:17:10,540 --> 00:17:14,420
and I have found that the CUPS filters

00:17:14,420 --> 00:17:17,520
project maintaining once these filters

00:17:17,520 --> 00:17:22,333
developing them in to add new standards,

00:17:24,600 --> 00:17:28,030
new page description languages

00:17:29,010 --> 00:17:32,433
and to make them more easily maintainable

00:17:36,110 --> 00:17:39,270
and everything which has to be done.

00:17:39,270 --> 00:17:42,000
And also the CUPS daemon itself which

00:17:42,000 --> 00:17:45,530
formally with its own particular nicely

00:17:45,530 --> 00:17:48,670
broadcasted shared printers and the client

00:17:48,670 --> 00:17:53,490
CUPS daemons automatically edit them

00:17:53,490 --> 00:17:58,040
to their local print queues so at

00:17:58,040 --> 00:18:01,620
a certain point of time CUPS D was,

00:18:01,620 --> 00:18:03,740
the CUPS daemon was switched over

00:18:03,740 --> 00:18:08,260
to the standard DNSSD, nice thing

00:18:08,260 --> 00:18:11,610
we follow the standards, but they did not make

00:18:11,610 --> 00:18:15,800
on the client side the picking up the

00:18:15,800 --> 00:18:19,610
printers which are broadcasted by a server via DNSSD.

00:18:20,500 --> 00:18:22,930
And so I introduced cups-browsed

00:18:22,930 --> 00:18:27,280
also in the CUPS filters project to overcome

00:18:27,280 --> 00:18:32,280
this disappearing feature in CUPS so that

00:18:32,760 --> 00:18:35,870
the users of Linux are continuously served

00:18:35,870 --> 00:18:40,480
with the features they are used to

00:18:40,480 --> 00:18:44,900
and but nowadays CUPS is picking up

00:18:44,900 --> 00:18:49,720
printers from servers via DNSSD again

00:18:49,720 --> 00:18:51,680
but cups-browsed is still there,

00:18:51,680 --> 00:18:54,180
I will not stop it, cups-browsed does it

00:18:54,180 --> 00:18:56,750
in a much more sophisticated way.

00:18:56,750 --> 00:19:00,440
It can cluster printers, CUPS formerly

00:19:00,440 --> 00:19:03,400
could do it too but nowadays not anymore,

00:19:03,400 --> 00:19:05,710
it can cluster printers, it can even

00:19:05,710 --> 00:19:07,470
cluster different printers

00:19:07,470 --> 00:19:11,700
and decide by the drop properties to which

00:19:11,700 --> 00:19:13,280
printer to send the job.

00:19:14,780 --> 00:19:18,430
Also nicely done by a Google Summer of Code student

00:19:18,430 --> 00:19:23,430
and you can also put in a lot of nice filter

00:19:25,150 --> 00:19:27,480
so that if you have 10000 printers

00:19:27,480 --> 00:19:30,280
in your network, you can make cups-browsed

00:19:30,280 --> 00:19:33,707
only listing the printers which are interesting to you.

00:19:35,381 --> 00:19:36,214
And

00:19:41,900 --> 00:19:46,040
yes and then we have the Foomatic database,

00:19:46,040 --> 00:19:50,530
it was even created back before 2000

00:19:50,530 --> 00:19:53,340
by another guy but when I started

00:19:53,340 --> 00:19:58,340
to work full time on printing starting in 2000

00:19:59,620 --> 00:20:04,620
at MandrakeSoft in Paris, this distribution,

00:20:04,710 --> 00:20:07,740
this we named later to Mandriva

00:20:07,740 --> 00:20:10,400
but now it does not exist anymore,

00:20:11,580 --> 00:20:16,580
there I discovered this database,

00:20:16,890 --> 00:20:20,970
it was called linuxprinting.org that time

00:20:20,970 --> 00:20:23,870
and as the owner did not have time

00:20:23,870 --> 00:20:26,470
for it anymore, he has passed it over to me

00:20:26,470 --> 00:20:30,500
and I've continued maintaining it.

00:20:30,500 --> 00:20:32,460
It's called Foomatic.

00:20:32,460 --> 00:20:35,970
This strange name comes from the case

00:20:35,970 --> 00:20:38,370
that in former times there were several

00:20:38,370 --> 00:20:39,450
printing environments.

00:20:39,450 --> 00:20:44,450
So there was APD, LPING, CUPs, PDQ, PPR and so on

00:20:45,750 --> 00:20:48,830
and this database supported all of them in

00:20:48,830 --> 00:20:51,420
and it had some scripts which were called

00:20:51,420 --> 00:20:55,420
LPD-O-Matic, LPING-O-Matic, CUPS-O-Matic

00:20:55,420 --> 00:20:59,200
and so on and so the guy who has started that

00:20:59,200 --> 00:21:02,930
has simply called it Foomatic this project.

00:21:02,930 --> 00:21:05,820
Therefore we have this name but nowadays

00:21:05,820 --> 00:21:09,263
it only supports CUPS as a printing system,

00:21:09,263 --> 00:21:12,820
all the other printing systems disappeared

00:21:12,820 --> 00:21:16,297
so we don't, do not need to put work in that anymore.

00:21:18,259 --> 00:21:21,610
And the thing, what Foomatic database,

00:21:21,610 --> 00:21:23,970
it's a database of printers

00:21:23,970 --> 00:21:28,450
and it tells which printers work how well with Linux

00:21:28,450 --> 00:21:31,590
and which driver you have to use for it

00:21:31,590 --> 00:21:33,730
and how to use this driver.

00:21:33,730 --> 00:21:37,740
There back in the 2000s, there was

00:21:37,740 --> 00:21:39,920
no driverless printing, there was no

00:21:39,920 --> 00:21:42,310
automatic printer set up, the user needed

00:21:42,310 --> 00:21:45,260
a place to look up how can I make

00:21:45,260 --> 00:21:48,213
my printer work or which printer can I buy

00:21:48,213 --> 00:21:50,830
so that it works with Linux

00:21:50,830 --> 00:21:53,360
and so he looked up in this database

00:21:53,360 --> 00:21:55,230
and if someone complained about printing

00:21:55,230 --> 00:21:57,800
does not work, I told him look up in

00:21:57,800 --> 00:21:59,720
this database there you can see which

00:21:59,720 --> 00:22:01,700
printer works and how.

00:22:01,700 --> 00:22:06,700
And I continue, the development entered new printers

00:22:08,220 --> 00:22:11,390
and I also made it more sophisticated,

00:22:11,390 --> 00:22:14,290
integrated it in distributions so that

00:22:14,290 --> 00:22:16,510
the distributions could automatically

00:22:16,510 --> 00:22:18,420
set up printers with a driver.

00:22:19,930 --> 00:22:21,810
And it worked really nicely

00:22:21,810 --> 00:22:24,990
and on every conference people told

00:22:24,990 --> 00:22:27,460
it was easy to set up my printer,

00:22:27,460 --> 00:22:32,070
thank you so much you did great work and so on.

00:22:34,550 --> 00:22:37,680
And so this is the Foomatic database,

00:22:37,680 --> 00:22:41,710
it still exists and some manufacturers like Lexmark

00:22:41,710 --> 00:22:44,760
and Ricoh are uploading printer into

00:22:44,760 --> 00:22:48,050
it's NPPD files for postscript printers

00:22:48,050 --> 00:22:50,684
so their PPD file let's get

00:22:50,684 --> 00:22:52,590
this way in the distributions

00:22:52,590 --> 00:22:56,060
and also people find their printer by this database.

00:23:00,080 --> 00:23:04,370
And nowadays you will less and less have

00:23:04,370 --> 00:23:06,850
to look up in the database as we get

00:23:06,850 --> 00:23:09,310
the driverless IPP printing so that

00:23:09,310 --> 00:23:11,790
the printer tells you by itself or

00:23:11,790 --> 00:23:14,240
tells your computer by itself what to do

00:23:14,240 --> 00:23:16,957
and the computer does it for you.

00:23:22,615 --> 00:23:26,230
And then wava new in open printing is

00:23:26,230 --> 00:23:29,900
the common print dialogue backends project.

00:23:29,900 --> 00:23:33,650
And this project years ago we saw the

00:23:33,650 --> 00:23:36,020
problem that the print dialogues

00:23:36,020 --> 00:23:38,440
of applications are inconsistent

00:23:39,480 --> 00:23:41,690
and do not display all the settings which

00:23:41,690 --> 00:23:44,200
you can have on the printer even if

00:23:44,200 --> 00:23:45,950
the driver have settings

00:23:46,880 --> 00:23:48,780
and so we are, we were searching for

00:23:48,780 --> 00:23:51,130
making the print dialog better.

00:23:51,130 --> 00:23:54,850
And in the beginning we started with a GUI expert

00:23:54,850 --> 00:23:56,920
to make a common print dialog,

00:23:56,920 --> 00:24:01,920
dialogue for all the graphics, graphical tool kits

00:24:04,837 --> 00:24:08,110
but this common print dialog project,

00:24:08,110 --> 00:24:12,660
it did not work out, we did not have much manpower,

00:24:12,660 --> 00:24:15,050
we worked with Google Summer of Code students

00:24:15,050 --> 00:24:19,910
and so and we did also did not get enough

00:24:19,910 --> 00:24:24,910
funding so that we could perhaps recruit someone for that

00:24:27,904 --> 00:24:32,904
and so we did not succeed to finish it.

00:24:34,510 --> 00:24:37,920
And later on we looked back at this

00:24:37,920 --> 00:24:41,040
and we wanted to improve the print dialog

00:24:41,040 --> 00:24:43,060
and we came to another idea which is

00:24:43,060 --> 00:24:45,590
the common print dialogue backends,

00:24:45,590 --> 00:24:48,790
which means the GUI toolkits they keep

00:24:48,790 --> 00:24:52,170
that print dialogs but they do not

00:24:52,170 --> 00:24:54,420
directly talk with CUPS or any other

00:24:54,420 --> 00:24:57,170
print technology, they talk with

00:24:57,170 --> 00:25:00,490
by divas with certain backend

00:25:00,490 --> 00:25:03,540
one for each printer technology so that

00:25:03,540 --> 00:25:06,200
the backend can be developed

00:25:06,200 --> 00:25:08,950
in a faster pace than the GUI

00:25:08,950 --> 00:25:12,780
and also by adding backends, you can

00:25:12,780 --> 00:25:16,257
quickly add new printer technologies

00:25:16,257 --> 00:25:20,070
to the print dialogs for example,

00:25:20,070 --> 00:25:23,540
Google cloud print or if someone else

00:25:23,540 --> 00:25:26,180
creates a print technology like Google

00:25:26,180 --> 00:25:29,470
cloud print a network printing technology

00:25:29,470 --> 00:25:33,160
so we can tell him simply put up such a backend

00:25:33,160 --> 00:25:37,070
and everything in Linux will support your technology.

00:25:39,060 --> 00:25:41,980
These in the eight week we're taught,

00:25:41,980 --> 00:25:45,340
we'll tell more details about this.

00:25:48,230 --> 00:25:50,970
- Right so I guess it's the next slide afterwards.

00:25:52,740 --> 00:25:53,850
Right.

00:25:53,850 --> 00:25:54,940
- Yes.

00:25:54,940 --> 00:25:57,720
- So before we all move on to the next slide

00:25:57,720 --> 00:25:59,980
so I'd just like to hear from you,

00:25:59,980 --> 00:26:02,880
so about your experiences or what

00:26:02,880 --> 00:26:05,248
do you think about having any problems

00:26:05,248 --> 00:26:07,930
or any other points that you want to

00:26:07,930 --> 00:26:11,810
discuss or you feel like something

00:26:11,810 --> 00:26:14,160
could have been done to make printing better?

00:26:15,160 --> 00:26:17,870
I mean improved printing or something of that sort.

00:26:17,870 --> 00:26:20,450
So I open it up to the audience

00:26:20,450 --> 00:26:23,750
for a discussion before we go onto the next slides.

00:26:23,750 --> 00:26:25,850
So if you can share your experiences

00:26:25,850 --> 00:26:29,880
or any problems, ideas or anything.

00:26:31,240 --> 00:26:32,850
Like you might think like okay,

00:26:32,850 --> 00:26:34,730
if print would have worked like this,

00:26:34,730 --> 00:26:37,530
I say something, it prints, I would have been happy.

00:26:37,530 --> 00:26:38,363
So anything.

00:26:43,080 --> 00:26:44,830
By the way for those who have,

00:26:44,830 --> 00:26:46,390
I couldn't deliver the pens, there are

00:26:46,390 --> 00:26:47,960
some open printing pens you can collect

00:26:47,960 --> 00:26:49,210
or collect from the back.

00:26:50,396 --> 00:26:51,229
Okay.

00:26:51,229 --> 00:26:55,940
So yeah so any magic wand that we can use

00:26:55,940 --> 00:26:57,950
to convert printing into something.

00:27:03,560 --> 00:27:05,050
- No one has to say anything,

00:27:05,050 --> 00:27:07,660
no one has any complaint about printing.

00:27:09,109 --> 00:27:10,101
- It started working.

00:27:10,101 --> 00:27:11,180
(laughs)

00:27:11,180 --> 00:27:12,013
- By the way.

00:27:12,013 --> 00:27:13,283
- It's working for you?

00:27:13,283 --> 00:27:14,210
- It worked for me.

00:27:15,530 --> 00:27:17,890
- By the way if printing is not working

00:27:17,890 --> 00:27:20,366
in Ubuntu, he's the culprit.

00:27:20,366 --> 00:27:21,510
(laughs)

00:27:21,510 --> 00:27:23,910
Take his mail id, take his phone number,

00:27:23,910 --> 00:27:26,770
give him a call, Till, I am using Ubuntu,

00:27:26,770 --> 00:27:29,540
printer's not working what have you done?

00:27:29,540 --> 00:27:33,300
- You know that why we have this nice meeting

00:27:33,300 --> 00:27:35,450
and all the people here all together

00:27:35,450 --> 00:27:39,080
was because some guy many, many years ago

00:27:39,080 --> 00:27:40,600
was not able to print.

00:27:45,250 --> 00:27:46,390
- Okay.

00:27:46,390 --> 00:27:49,130
So Rithvik I hand it over to you,

00:27:49,130 --> 00:27:52,320
Peter, if you can take the notes on behalf of Rithvik.

00:27:52,320 --> 00:27:53,650
Will that be fine with you?

00:27:54,705 --> 00:27:55,990
Yeah, it's huh?

00:27:57,470 --> 00:27:58,520
- [Peter] Real time?

00:27:58,520 --> 00:28:00,380
- Yeah real time or maybe you can

00:28:00,380 --> 00:28:02,830
do it afterwards as well so you can put that gap.

00:28:03,680 --> 00:28:04,730
Okay.

00:28:04,730 --> 00:28:09,730
So I can hand over the microphone to Rithvik.

00:28:10,190 --> 00:28:11,960
By the way guys there are some guys who have,

00:28:14,731 --> 00:28:16,251
sorry?

00:28:16,251 --> 00:28:18,529
Yeah, you can take that one as well.

00:28:18,529 --> 00:28:21,197
I hope you can do the presentation from

00:28:21,197 --> 00:28:24,663
this laptop because we have many folks

00:28:24,663 --> 00:28:27,050
connected over, I mean

00:28:27,050 --> 00:28:29,186
they are connected to the,

00:28:29,186 --> 00:28:30,090
they've called in so we have other

00:28:30,090 --> 00:28:32,340
folks from across the world who

00:28:32,340 --> 00:28:35,610
have joined us so that's why I'm using this laptop.

00:28:35,610 --> 00:28:37,140
Many couldn't come over here but

00:28:37,140 --> 00:28:39,140
they wanted to call in

00:28:39,140 --> 00:28:40,780
we have set it up for them.

00:28:40,780 --> 00:28:42,830
So if we can present it from this laptop.

00:29:17,060 --> 00:29:18,020
- Hi, I'm Rithvik.

00:29:19,780 --> 00:29:20,613
It's working?

00:29:21,690 --> 00:29:24,000
Hi, I'm Rithvik, I've worked with

00:29:24,000 --> 00:29:25,930
open printing as a Google Summer of Code

00:29:25,930 --> 00:29:28,960
student for two years, 2017 and 2018.

00:29:30,160 --> 00:29:31,820
Now am currently working at Amazon

00:29:31,820 --> 00:29:34,530
but I'm still continuing with open printing

00:29:34,530 --> 00:29:37,352
more often as a hobby.

00:29:37,352 --> 00:29:41,730
In 2017 open printing started the

00:29:41,730 --> 00:29:43,690
common print dialog backend project

00:29:43,690 --> 00:29:46,390
with a couple of other Google Summer of Code students.

00:29:47,280 --> 00:29:51,450
So the basic idea of a common print dialogue

00:29:51,450 --> 00:29:53,840
is to provide a unified, hassle-free

00:29:53,840 --> 00:29:55,750
printing experience across all the next,

00:29:55,750 --> 00:29:58,150
like irrespective of the distribution.

00:29:59,224 --> 00:30:00,330
It has picked all the printing technology

00:30:00,330 --> 00:30:02,730
that the printer uses, common print

00:30:02,730 --> 00:30:05,700
dialogue points to, wants their experience

00:30:05,700 --> 00:30:08,930
to be a same through out Linux

00:30:08,930 --> 00:30:10,790
and it has to be hassle free like you shouldn't

00:30:10,790 --> 00:30:13,440
bother with installing the printer

00:30:13,440 --> 00:30:15,274
drivers or setting up the printer.

00:30:15,274 --> 00:30:16,639
- [Till] Hold the microphone closer,

00:30:16,639 --> 00:30:19,391
I think it's not coming through the speakers.

00:30:19,391 --> 00:30:23,859
- Okay.

00:30:23,859 --> 00:30:27,810
So we want the all common print dialogue

00:30:27,810 --> 00:30:30,303
also wants to decouple print technologies

00:30:30,303 --> 00:30:33,770
like CUPS, IPP, Google cloud print from

00:30:33,770 --> 00:30:36,980
the GUI toolkits like Qt or a GTK

00:30:36,980 --> 00:30:39,580
so that application developers do not

00:30:39,580 --> 00:30:41,380
have to bother with keeping up with

00:30:41,380 --> 00:30:43,230
the developments of the printing technologies

00:30:43,230 --> 00:30:46,270
and printing technologies can, they're all

00:30:46,270 --> 00:30:50,090
much faster than GUI toolkits like

00:30:50,090 --> 00:30:51,570
the release cycles are much quicker

00:30:51,570 --> 00:30:55,010
with CUPS or IPP than it is with QT or GTK.

00:30:56,900 --> 00:30:59,010
So the design we came up with this was

00:30:59,010 --> 00:31:01,700
to provide front end libraries for two

00:31:01,700 --> 00:31:03,890
of the most widely used tool toolkits

00:31:03,890 --> 00:31:07,210
out there Qt and GTK and we wanted

00:31:07,210 --> 00:31:09,180
to provide a backend libraries for

00:31:09,180 --> 00:31:12,080
basically everyone else, like every application developer.

00:31:16,530 --> 00:31:18,270
So the way we implemented it,

00:31:18,270 --> 00:31:21,380
it is the GUI toolkit is the,

00:31:21,380 --> 00:31:24,250
the GUI toolkit has a print dialog,

00:31:24,250 --> 00:31:28,100
acts as a front end and every print technology

00:31:28,100 --> 00:31:30,850
has a backend, like CUPS has its own backend,

00:31:30,850 --> 00:31:32,330
Google cloud print has its own backend

00:31:32,330 --> 00:31:34,420
and the toolkit communicates with

00:31:34,420 --> 00:31:36,120
those backends via divas.

00:31:39,670 --> 00:31:41,620
We have backends available for CUPS NGCP

00:31:41,620 --> 00:31:46,620
as of right now and if a user,

00:31:47,150 --> 00:31:48,930
let's say if he's using a CUPS,

00:31:48,930 --> 00:31:52,000
regular CUPS printer and he installed

00:31:52,000 --> 00:31:53,460
CUPS backend and the printer's working

00:31:53,460 --> 00:31:56,052
and if the user decides to buy

00:31:56,052 --> 00:31:57,790
a Google cloud printer, all he has to do

00:31:57,790 --> 00:32:00,880
is install the respective backend

00:32:00,880 --> 00:32:02,180
and the printer will work.

00:32:03,311 --> 00:32:06,080
Nothing has to be changed on the front end side,

00:32:06,080 --> 00:32:08,710
the app developers do not have to explicitly

00:32:08,710 --> 00:32:11,640
support Google cloud print, all the user

00:32:11,640 --> 00:32:13,960
has to do is install the common print

00:32:13,960 --> 00:32:15,870
dialog backend that is relevant to

00:32:15,870 --> 00:32:17,990
that printer technology and it'll work.

00:32:19,760 --> 00:32:22,030
And backends can also be provided

00:32:22,030 --> 00:32:24,290
with a packaging, a sandbox packaging system

00:32:24,290 --> 00:32:26,990
like Ubuntu snap stores so you don't

00:32:26,990 --> 00:32:28,860
even have to tinker around with,

00:32:28,860 --> 00:32:30,090
make scripts or anything you can just

00:32:30,090 --> 00:32:32,630
download a snap for your printer from the snap store

00:32:32,630 --> 00:32:33,830
and it'll start working.

00:32:39,330 --> 00:32:40,640
So how does it work?

00:32:40,640 --> 00:32:45,110
Basically whenever we make the print dialog live,

00:32:45,110 --> 00:32:47,580
the backend, each of its, each backend

00:32:47,580 --> 00:32:49,080
like the CUPS backend and the Google

00:32:49,080 --> 00:32:53,400
cloud print backend, it supplies it's printers

00:32:53,400 --> 00:32:58,400
as a divas messages, the user that,

00:32:59,120 --> 00:33:00,950
the printers are listed in the dialog,

00:33:00,950 --> 00:33:02,630
then the user selects the printer,

00:33:02,630 --> 00:33:04,550
then the divas like at the backend

00:33:04,550 --> 00:33:06,530
will send all the available print

00:33:06,530 --> 00:33:09,040
options for that printer via a divas.

00:33:11,040 --> 00:33:12,310
Users selects these options

00:33:12,310 --> 00:33:15,147
and sets like whatever print job he wants to print

00:33:15,147 --> 00:33:18,890
and he prints it, the dialogue passes

00:33:18,890 --> 00:33:21,750
the options to the printer and the job gets done.

00:33:26,190 --> 00:33:30,710
So the major challenges we face today

00:33:31,580 --> 00:33:35,800
are integration, integration and integration.

00:33:35,800 --> 00:33:38,111
Because the main idea of Google,

00:33:38,111 --> 00:33:40,650
sorry, common print dialog backend

00:33:40,650 --> 00:33:43,390
is to provide a unified experience

00:33:43,390 --> 00:33:46,200
to all applications and all distributions

00:33:46,200 --> 00:33:47,730
but in order for that to work,

00:33:47,730 --> 00:33:49,850
we need the major toolkits to

00:33:51,611 --> 00:33:54,860
accept common print dialog backend

00:33:54,860 --> 00:33:56,840
into their tool kits so that the application

00:33:56,840 --> 00:33:59,020
developers can use that toolkit.

00:33:59,020 --> 00:34:02,260
We created a proof of concept dialog

00:34:02,260 --> 00:34:05,380
for Qt but it got a rejected the

00:34:05,380 --> 00:34:08,230
because we used QML and not Q widgets

00:34:09,070 --> 00:34:12,098
and we when we re-implemented using QV jets

00:34:12,098 --> 00:34:14,220
and posted it on the mailing list,

00:34:14,220 --> 00:34:16,090
there was virtually no response

00:34:17,470 --> 00:34:21,250
so we need help from you guys if you can,

00:34:21,250 --> 00:34:24,190
if you know how to, how we can fasten this up

00:34:24,190 --> 00:34:26,730
and how we can get this common print

00:34:26,730 --> 00:34:28,160
dialog backend products into any

00:34:28,160 --> 00:34:29,890
of the major toolkits, that would be

00:34:29,890 --> 00:34:32,540
a great help so yeah.

00:34:35,021 --> 00:34:35,854
- [Male Audience Member] I have a question.

00:34:35,854 --> 00:34:36,687
- Yeah.

00:34:40,230 --> 00:34:43,130
- So I mean as the part of the project

00:34:43,130 --> 00:34:47,380
you like define the API between the user interface

00:34:47,380 --> 00:34:48,213
and the backend?

00:34:50,400 --> 00:34:51,233
- Yes.

00:34:53,190 --> 00:34:56,310
- So there is some specification, yes

00:34:56,310 --> 00:34:57,910
how to communicate between backend

00:34:57,910 --> 00:34:58,950
and user interface?

00:34:58,950 --> 00:34:59,940
- Yeah.

00:34:59,940 --> 00:35:00,773
The specification is basically

00:35:00,773 --> 00:35:02,630
the format of the divas message that

00:35:02,630 --> 00:35:06,620
you have to send that for the backend to understand.

00:35:06,620 --> 00:35:07,453
- Okay.

00:35:07,453 --> 00:35:10,420
How is it related to IPP?

00:35:10,420 --> 00:35:13,110
I mean all these properties which is

00:35:13,110 --> 00:35:16,100
queried from the printer, you know

00:35:16,100 --> 00:35:18,740
the properties of the printers yes, the features.

00:35:18,740 --> 00:35:19,573
- Yes.

00:35:19,573 --> 00:35:22,650
- That are translated into this format like

00:35:24,040 --> 00:35:25,430
and passed on the bus.

00:35:25,430 --> 00:35:26,263
- Yeah.

00:35:26,263 --> 00:35:28,890
- So that the dialogue will know what

00:35:28,890 --> 00:35:30,350
should show to the user yes?

00:35:30,350 --> 00:35:31,325
- Yeah.

00:35:31,325 --> 00:35:32,980
We do have a helper package that

00:35:32,980 --> 00:35:36,230
takes whatever options you have from the dialog

00:35:36,230 --> 00:35:37,790
and converts it into divas messages

00:35:37,790 --> 00:35:39,840
and send it to the corresponding backend.

00:35:40,820 --> 00:35:43,670
We do that for you.

00:35:43,670 --> 00:35:44,503
- Okay.

00:35:46,640 --> 00:35:51,040
So what's the problem here?

00:35:51,040 --> 00:35:53,510
I mean but it requires the divas

00:35:53,510 --> 00:35:54,440
yes, internally.

00:35:54,440 --> 00:35:55,280
- Yeah.

00:35:55,280 --> 00:35:58,880
The divas will be set up by the dialog itself.

00:35:58,880 --> 00:36:01,080
You don't have to explicitly create a divas.

00:36:02,961 --> 00:36:07,961
- Okay.

00:36:11,400 --> 00:36:13,970
The only problem could maybe that maybe not,

00:36:13,970 --> 00:36:17,780
not all toolkits will want to add the

00:36:17,780 --> 00:36:21,070
like a divas like a as a dependency.

00:36:23,510 --> 00:36:24,343
- Okay.

00:36:30,212 --> 00:36:31,710
- But so like this project has two parts.

00:36:31,710 --> 00:36:34,730
One is this user interface on the top

00:36:34,730 --> 00:36:37,621
and the backends on the. at the bottom yes?

00:36:37,621 --> 00:36:38,454
- Yeah.

00:36:38,454 --> 00:36:39,287
- The backends supports.

00:36:39,287 --> 00:36:40,930
- The common print dialog has those two parts.

00:36:40,930 --> 00:36:43,640
The common print dialog backends is just the backend part.

00:36:44,710 --> 00:36:45,543
- Okay.

00:36:45,543 --> 00:36:46,376
Thank you.

00:36:48,300 --> 00:36:49,390
- Any other questions?

00:36:52,440 --> 00:36:53,273
No.

00:36:53,273 --> 00:36:54,106
- [Male Audience Member] Do they have some

00:36:54,106 --> 00:36:56,150
webpage with this specification?

00:36:56,150 --> 00:36:56,983
- Sorry?

00:36:56,983 --> 00:36:59,710
- Do have some webpage with specification

00:36:59,710 --> 00:37:01,590
how the communications is done.

00:37:01,590 --> 00:37:03,145
- Yeah.

00:37:03,145 --> 00:37:04,210
You can check one, two open printing website,

00:37:04,210 --> 00:37:07,420
we listed all the Google Summer of Code projects there

00:37:07,420 --> 00:37:10,970
and each project has its own description

00:37:10,970 --> 00:37:13,340
as to how it works.

00:37:13,340 --> 00:37:14,173
- Okay.

00:37:14,173 --> 00:37:16,820
So you have also beckoned by so sorry,

00:37:16,820 --> 00:37:18,277
backend for CUPS yes?

00:37:18,277 --> 00:37:19,581
- Yes.

00:37:19,581 --> 00:37:23,040
- Yes we are making a new website,

00:37:23,040 --> 00:37:25,340
it is, it will be.

00:37:25,340 --> 00:37:28,200
- Sorry to interrupt so I forgot

00:37:28,200 --> 00:37:29,540
to mention you the rules.

00:37:29,540 --> 00:37:31,140
So somebody who has a question needs

00:37:31,140 --> 00:37:33,970
to speak up so that that's captured on the camera.

00:37:33,970 --> 00:37:35,820
So I'm sorry for that, I didn't

00:37:35,820 --> 00:37:37,040
mention it to you earlier.

00:37:37,040 --> 00:37:39,070
So Till, if you can stand up so that

00:37:39,070 --> 00:37:42,353
you can face the camera.

00:37:42,353 --> 00:37:46,200
- Yes we will have a new website at open printing.

00:37:46,200 --> 00:37:50,350
It's currently worked on, it is nearly completed

00:37:50,350 --> 00:37:55,350
and these were also, these were contained

00:37:55,860 --> 00:37:59,090
pages for all sub projects of open printing

00:37:59,090 --> 00:38:02,620
and it will also contain all information

00:38:02,620 --> 00:38:05,760
about the common print dialog backends.

00:38:11,950 --> 00:38:13,050
- Any other questions?

00:38:16,410 --> 00:38:17,870
Great, I'll pass it to Aveek

00:38:17,870 --> 00:38:19,960
to continue the talk from here.

00:38:21,640 --> 00:38:23,840
- Okay, so you're trying to show

00:38:24,909 --> 00:38:25,925
the demo right for everyone?

00:38:25,925 --> 00:38:26,925
- I didn't get it.

00:38:26,925 --> 00:38:27,758
- Okay.

00:38:39,330 --> 00:38:40,330
Okay thanks Rithvik.

00:38:42,030 --> 00:38:44,240
Yeah so from the morning I have been

00:38:44,240 --> 00:38:47,030
talking a lot about driverless printing,

00:38:47,030 --> 00:38:49,510
IPP printing or internet printing protocol

00:38:49,510 --> 00:38:50,980
and all these things.

00:38:50,980 --> 00:38:55,000
So how do you guys think that this is working?

00:38:55,000 --> 00:38:57,050
So is there a magic going on that

00:38:57,050 --> 00:38:58,790
you connect your printer or how

00:38:58,790 --> 00:39:00,160
actually is it working?

00:39:00,160 --> 00:39:02,710
So anyone, any idea about how this can work?

00:39:03,750 --> 00:39:06,360
Or if you think that, if this could

00:39:06,360 --> 00:39:08,070
have been done from the firmware

00:39:08,070 --> 00:39:12,310
or from the OS then it will work out

00:39:15,540 --> 00:39:18,910
so I'll tell you typically how it happens,

00:39:18,910 --> 00:39:21,490
what actually is a driver doing?

00:39:21,490 --> 00:39:24,440
So driver is having an UI right?

00:39:24,440 --> 00:39:28,100
So it is listing the options what

00:39:28,100 --> 00:39:29,770
a printer can support.

00:39:29,770 --> 00:39:32,950
So if I am the manufacturer of the printer,

00:39:32,950 --> 00:39:35,290
I know what all features I have

00:39:35,290 --> 00:39:37,920
provided in my printer, whether my printer

00:39:37,920 --> 00:39:40,090
is a color printer or a black and white printer,

00:39:40,090 --> 00:39:43,440
whether it supports both side printing, this and that

00:39:43,440 --> 00:39:45,780
so being the manufacturer I know

00:39:45,780 --> 00:39:47,830
what my printer supports.

00:39:47,830 --> 00:39:49,970
So accordingly I have put it up

00:39:49,970 --> 00:39:52,070
in the UI in the driver UI that

00:39:52,070 --> 00:39:53,170
these are the features

00:39:54,110 --> 00:39:57,230
and being the manufacturer, I know what

00:39:57,230 --> 00:40:01,731
all commands will my printer react to.

00:40:01,731 --> 00:40:06,731
Say for example, in my UI I show print color,

00:40:08,197 --> 00:40:12,290
user chooses color so that's all on the UI

00:40:12,290 --> 00:40:15,250
and the driver knows what command

00:40:15,250 --> 00:40:17,620
it needs to send to the firmware

00:40:18,520 --> 00:40:21,540
so that can be a, so each company has

00:40:21,540 --> 00:40:23,500
its own set of commands or those

00:40:23,500 --> 00:40:25,240
confidential commands then we,

00:40:25,240 --> 00:40:28,120
so that is simply what the driver is doing.

00:40:28,120 --> 00:40:29,740
Driver is nothing else but that,

00:40:29,740 --> 00:40:33,030
rather than some medium to talk to the firmware.

00:40:33,030 --> 00:40:35,780
It takes a user's input, converts it

00:40:35,780 --> 00:40:38,560
to the specific command which the firmware understands,

00:40:39,680 --> 00:40:42,310
gets the job done from the firmware,

00:40:42,310 --> 00:40:45,250
I mean the firmware is in turn talking to the hardware

00:40:45,250 --> 00:40:49,570
and the response is coming back to the UI.

00:40:49,570 --> 00:40:52,510
So for example if you are trying to do a scan,

00:40:52,510 --> 00:40:54,970
you send a set of commands, I mean based

00:40:54,970 --> 00:40:57,030
on what the user has selected

00:40:57,030 --> 00:40:59,910
and you get raw data so it's all binary,

00:40:59,910 --> 00:41:02,920
one zero one zero so you get the raw data

00:41:02,920 --> 00:41:05,080
and from the driver you interpolate that

00:41:05,080 --> 00:41:06,640
and show it in the UI.

00:41:06,640 --> 00:41:10,560
So that's what actually is the function of a driver.

00:41:10,560 --> 00:41:12,480
So that's what the driver is doing.

00:41:12,480 --> 00:41:17,050
So now I talk about how this is all driverless

00:41:17,050 --> 00:41:19,120
or how it is working.

00:41:19,957 --> 00:41:22,715
Okay.

00:41:22,715 --> 00:41:27,715
This is my host okay, so what I do is

00:41:30,110 --> 00:41:34,220
I have connected my laptop to the network

00:41:35,240 --> 00:41:37,390
where I have multiple printers which

00:41:37,390 --> 00:41:38,930
supports driverless.

00:41:38,930 --> 00:41:40,890
Now during the starting of the session

00:41:40,890 --> 00:41:43,670
I showed you the video of how it is working

00:41:43,670 --> 00:41:46,820
so what actually is going on at the background,

00:41:46,820 --> 00:41:48,920
I am explaining it in this slide.

00:41:48,920 --> 00:41:53,140
So at first what I do is I do an MDNS query.

00:41:54,120 --> 00:41:58,330
So my host is doing an MDNS query okay

00:41:58,330 --> 00:42:01,040
to all, I mean to everything in the network.

00:42:03,720 --> 00:42:07,630
The printers respond back to that MDNS

00:42:07,630 --> 00:42:11,710
query saying whether it supports

00:42:11,710 --> 00:42:13,501
driverless printing or not okay.

00:42:13,501 --> 00:42:17,770
So I do a MDNS query in the network,

00:42:18,960 --> 00:42:21,840
all the printers respond to me,

00:42:21,840 --> 00:42:26,620
which is the host saying if I support

00:42:26,620 --> 00:42:29,750
driverless with the URI of the printer okay.

00:42:31,660 --> 00:42:33,310
So any questions till this point?

00:42:35,630 --> 00:42:37,490
So I need to know which all printer

00:42:37,490 --> 00:42:39,970
support driverless, that's what I need to know.

00:42:39,970 --> 00:42:41,240
So do you think it would have been

00:42:41,240 --> 00:42:44,730
done in a better way to understand

00:42:44,730 --> 00:42:46,630
which all support driverless printing?

00:42:47,510 --> 00:42:49,380
Apart from MDNS, can you think of

00:42:49,380 --> 00:42:51,280
any other technology or anything else?

00:42:53,080 --> 00:42:53,913
No.

00:42:55,890 --> 00:42:56,723
Okay.

00:42:57,600 --> 00:43:01,720
So this is the point when I get the list

00:43:02,610 --> 00:43:03,990
and I show it in the UI.

00:43:04,950 --> 00:43:06,910
If you remember in my demo when I did

00:43:06,910 --> 00:43:09,060
a control P after connecting my printer

00:43:09,060 --> 00:43:11,890
to the network having this driverless printers,

00:43:11,890 --> 00:43:14,570
it showed me the list of printers right?

00:43:14,570 --> 00:43:16,950
In the first time it was only one printer,

00:43:16,950 --> 00:43:18,930
the next time it was a list of printers.

00:43:18,930 --> 00:43:21,290
So this is how I'm getting the list

00:43:21,290 --> 00:43:24,970
based on the response I listed out in the UI okay.

00:43:27,110 --> 00:43:28,660
So next thing is you need to choose

00:43:28,660 --> 00:43:30,760
your printer from which you want to print.

00:43:31,840 --> 00:43:33,700
You have got a list of 10 printers

00:43:33,700 --> 00:43:37,010
which support driverless, being the user

00:43:37,010 --> 00:43:40,110
I know from which printer I need to choose

00:43:40,110 --> 00:43:41,480
I mean I need to print whether it's A,

00:43:41,480 --> 00:43:44,760
B, C, D, E, F, I select printer B.

00:43:45,860 --> 00:43:48,250
In my video I did choose a specific

00:43:48,250 --> 00:43:51,020
Lexmark printer, MX611 so say suppose

00:43:51,020 --> 00:43:52,070
that is my printer B.

00:43:53,230 --> 00:43:55,400
So in number two I'm selecting the printer.

00:43:57,730 --> 00:43:59,280
What happens at the background?

00:44:01,100 --> 00:44:02,540
So let's see.

00:44:02,540 --> 00:44:06,500
At this point in time another query

00:44:06,500 --> 00:44:08,350
is sent to that specific printer.

00:44:08,350 --> 00:44:10,080
Now at this point of time, it's not

00:44:10,080 --> 00:44:12,950
a generic MDNS or generic query.

00:44:12,950 --> 00:44:15,360
It's specific to that particular printer

00:44:15,360 --> 00:44:19,180
which I am trying to print it's give job attributes.

00:44:20,340 --> 00:44:21,890
What is that?

00:44:21,890 --> 00:44:24,880
So see these are the standards,

00:44:24,880 --> 00:44:26,820
these are certain standards which

00:44:26,820 --> 00:44:28,930
have been set up by PWG.

00:44:28,930 --> 00:44:32,250
So PWG has given the instructions

00:44:32,250 --> 00:44:34,340
so PWG is a group which comprises

00:44:34,340 --> 00:44:38,930
of printer manufacturers, people who

00:44:38,930 --> 00:44:41,210
decide the future of printing okay

00:44:41,210 --> 00:44:43,467
and IPP guys and everyone.

00:44:43,467 --> 00:44:46,600
So they have sit together

00:44:46,600 --> 00:44:50,400
and decided on some standards which should be sent

00:44:51,250 --> 00:44:53,110
and how the printer should respond.

00:44:53,110 --> 00:44:55,680
So when a driverless printer firmware

00:44:55,680 --> 00:44:58,490
gets a query like job attributes,

00:44:58,490 --> 00:45:01,600
get job attributes, that means the firmware

00:45:01,600 --> 00:45:05,120
knows it needs to respond back with

00:45:05,120 --> 00:45:08,300
the list of things it supports okay.

00:45:08,300 --> 00:45:13,300
So here we are doing a get job attributes via IPP

00:45:15,300 --> 00:45:17,390
and the printer firmware understands

00:45:17,390 --> 00:45:20,060
what the meaning of get job attributes

00:45:20,060 --> 00:45:23,050
so it will respond back to the host saying,

00:45:23,050 --> 00:45:25,470
well I support these many things.

00:45:25,470 --> 00:45:28,480
I support 10 things or 11 things or 12 things okay.

00:45:30,800 --> 00:45:35,800
So now what I have done is I have received the,

00:45:38,770 --> 00:45:42,290
I mean I did a job print job attributes query

00:45:42,290 --> 00:45:44,000
and the printer returned back with

00:45:44,000 --> 00:45:45,500
a set of features it supports.

00:45:47,550 --> 00:45:51,560
It's the job of the host, host means over here,

00:45:51,560 --> 00:45:54,920
the OS or I mean the print architecture

00:45:54,920 --> 00:45:58,310
two parts those data and show it up

00:45:58,310 --> 00:46:02,700
in the UI to show all the features in the UI okay.

00:46:03,580 --> 00:46:05,210
So based upon the response which

00:46:05,210 --> 00:46:07,660
I have received from the printer, I pass it

00:46:08,740 --> 00:46:12,084
and I show all the details in front of the,

00:46:12,084 --> 00:46:14,360
I mean in the UI, in front of the user.

00:46:16,120 --> 00:46:20,160
Now the user is free to choose any settings

00:46:21,090 --> 00:46:23,750
and print out of it.

00:46:23,750 --> 00:46:27,360
This is how the entire driverless print gamut is working.

00:46:30,533 --> 00:46:33,810
I query to all the printers in the network,

00:46:35,360 --> 00:46:38,600
we hear you support driverless, so those

00:46:38,600 --> 00:46:40,340
all who support driverless raises

00:46:40,340 --> 00:46:43,270
their hand, gives the information to the host,

00:46:43,270 --> 00:46:44,880
host understands okay, these are

00:46:44,880 --> 00:46:47,590
the printers which support driverless.

00:46:47,590 --> 00:46:50,740
That list is shown in the UI to the user,

00:46:50,740 --> 00:46:52,870
user selects a printer.

00:46:52,870 --> 00:46:55,960
Now then I specifically query that printer,

00:46:55,960 --> 00:46:57,760
I hammer that printer saying boss,

00:46:57,760 --> 00:47:00,900
give me the list of attributes which you support.

00:47:00,900 --> 00:47:03,570
Printer gives me back that data

00:47:03,570 --> 00:47:05,320
and I show it in the UI.

00:47:05,320 --> 00:47:07,710
Now the user is free to choose whatever they want

00:47:07,710 --> 00:47:09,100
and print out of it.

00:47:09,100 --> 00:47:10,490
So it's as simple as that how

00:47:10,490 --> 00:47:12,860
driverless printing is working okay.

00:47:14,760 --> 00:47:16,440
So anything you want to discuss

00:47:16,440 --> 00:47:18,310
at this point in time or you think

00:47:18,310 --> 00:47:19,390
something could have been done

00:47:19,390 --> 00:47:22,200
in a better way or from the technical

00:47:22,200 --> 00:47:25,670
perspective things would have been simpler

00:47:25,670 --> 00:47:28,510
using some other technology or something else?

00:47:34,000 --> 00:47:35,990
- [Male Speaker] I mean so there's a scout,

00:47:35,990 --> 00:47:37,500
IPP everywhere yes?

00:47:37,500 --> 00:47:38,765
- There is IPP everywhere.

00:47:38,765 --> 00:47:40,390
- Okay understand that.

00:47:40,390 --> 00:47:42,960
Do you know what's the percentage of printers

00:47:42,960 --> 00:47:44,610
on the market which support this?

00:47:45,610 --> 00:47:46,860
- That's a good question.

00:47:48,370 --> 00:47:53,170
So I wear two hats, when I am in the open,

00:47:53,170 --> 00:47:55,680
when I'm wearing the open printing hat,

00:47:55,680 --> 00:47:57,870
I try to promote driverless printing.

00:47:57,870 --> 00:48:00,990
You should go driverless, you should go driverless.

00:48:00,990 --> 00:48:03,390
When I'm wearing a Lexmark hat

00:48:03,390 --> 00:48:06,000
or the printing vendor manufacturer hat,

00:48:06,000 --> 00:48:09,120
so the actual fact is all modern

00:48:09,120 --> 00:48:10,420
printers are now driverless.

00:48:10,420 --> 00:48:12,660
So they have the driverless capability.

00:48:12,660 --> 00:48:17,660
But does it mean, what about our older models?

00:48:17,700 --> 00:48:20,050
Now there are certain firmwares

00:48:20,910 --> 00:48:23,910
in which this additional things can

00:48:23,910 --> 00:48:25,880
be incorporated or that can be converted

00:48:25,880 --> 00:48:27,460
to a driverless printer.

00:48:27,460 --> 00:48:30,980
So it's a way how the manufacturer has designed,

00:48:30,980 --> 00:48:32,920
so I can say that any new printer

00:48:32,920 --> 00:48:35,810
that's coming up in the market is driverless

00:48:35,810 --> 00:48:38,170
printer I mean, most of the printers,

00:48:38,170 --> 00:48:40,480
I'm not sure about all the vendors

00:48:40,480 --> 00:48:42,170
but the major vendors, printer

00:48:42,170 --> 00:48:44,030
printing vendors are doing it

00:48:44,030 --> 00:48:45,410
and even they're converting their

00:48:45,410 --> 00:48:48,310
old firmware into a driverless one.

00:48:49,800 --> 00:48:53,780
Because if you see in Apple,

00:48:53,780 --> 00:48:56,900
Apple is strongly promoting to use driverless print

00:48:56,900 --> 00:48:58,530
and driverless scan.

00:48:58,530 --> 00:49:01,770
So because in after a few days

00:49:01,770 --> 00:49:04,060
the driver support will not be there,

00:49:04,060 --> 00:49:06,300
so you'll not be able to use a driver,

00:49:06,300 --> 00:49:10,030
a PPD or CUPS is going to reduce it to that.

00:49:10,030 --> 00:49:13,597
So we want everyone to go into driverless

00:49:13,597 --> 00:49:17,840
because it's easier to use in Linux

00:49:17,840 --> 00:49:19,930
I mean, at least I can speak of Ubuntu

00:49:19,930 --> 00:49:22,100
you can do driverless printing,

00:49:22,100 --> 00:49:23,250
it is working smoothly.

00:49:24,190 --> 00:49:26,320
In case you are having a printer

00:49:26,320 --> 00:49:28,840
and you see that this is not working

00:49:28,840 --> 00:49:31,070
you can check with the manufacturer

00:49:31,070 --> 00:49:33,010
and check for the latest firmware

00:49:33,010 --> 00:49:35,060
because manufacturers have started

00:49:35,060 --> 00:49:37,020
rolling out their new firmwares

00:49:37,020 --> 00:49:39,550
to enable the older printers giving them

00:49:39,550 --> 00:49:42,320
support for driverless printing okay.

00:49:42,320 --> 00:49:43,870
So you can check in their pages

00:49:44,790 --> 00:49:48,710
and if it is not, might be your printer is very old

00:49:48,710 --> 00:49:49,960
and it's not possible to give the

00:49:49,960 --> 00:49:51,210
driverless support there.

00:49:54,710 --> 00:49:56,760
- Can you define very old what's the

00:49:56,760 --> 00:49:58,710
time ranges, what's the years will

00:49:58,710 --> 00:50:02,210
the transition start happening and how.

00:50:02,210 --> 00:50:05,809
- Kate, that's a tricky question in fact,

00:50:05,809 --> 00:50:08,260
and a good question altogether.

00:50:09,330 --> 00:50:12,829
From Lexmark perspective, I can tell that

00:50:12,829 --> 00:50:14,670
the printers which were there in the market,

00:50:14,670 --> 00:50:18,210
I mean last five, six years or seven years,

00:50:18,210 --> 00:50:21,200
all has driverless support or they

00:50:21,200 --> 00:50:23,080
are getting the driverless support

00:50:23,080 --> 00:50:27,290
but exact if for other manufacturers

00:50:27,290 --> 00:50:28,910
probably they will be the good person

00:50:28,910 --> 00:50:30,630
to say that from which year they

00:50:30,630 --> 00:50:33,970
can provide that support but typically speaking,

00:50:33,970 --> 00:50:35,930
printers released in the market

00:50:35,930 --> 00:50:37,640
in the last four, five years should

00:50:37,640 --> 00:50:38,940
be capable of handling it.

00:50:40,080 --> 00:50:41,870
- Yes when you are buying a printer

00:50:41,870 --> 00:50:44,840
you should look for whether this printer's

00:50:44,840 --> 00:50:47,920
capable of pointing from a phone,

00:50:47,920 --> 00:50:51,300
from iPhone, Android and so on.

00:50:51,300 --> 00:50:54,790
Usually this is implemented by

00:50:54,790 --> 00:50:57,720
driverless printing, for iPhones especially

00:50:57,720 --> 00:51:02,720
it's air print and Linux supports all of the

00:51:03,190 --> 00:51:07,020
four known driverless IPP standards

00:51:07,020 --> 00:51:11,083
including air print and so an air print

00:51:12,790 --> 00:51:15,240
printer prints also from Linux with

00:51:15,240 --> 00:51:17,150
driverless IPP pointing.

00:51:18,940 --> 00:51:21,450
- So in case you need to go get

00:51:21,450 --> 00:51:24,260
into more details on the call stacks

00:51:24,260 --> 00:51:26,040
or what exactly is happening,

00:51:26,040 --> 00:51:27,760
I have a document which gives you

00:51:27,760 --> 00:51:31,738
the full explanation with the network traces

00:51:31,738 --> 00:51:34,430
and how the passings are done or what

00:51:34,430 --> 00:51:36,920
data exactly is returned, just get

00:51:36,920 --> 00:51:38,710
in touch with me, I have my email id

00:51:38,710 --> 00:51:42,060
at the end of the slide so just drop me a mail

00:51:42,060 --> 00:51:44,830
I can send you that data which you can refer okay.

00:51:45,740 --> 00:51:47,970
So this is a good news about printing

00:51:49,230 --> 00:51:50,320
but there is a bad news.

00:51:50,320 --> 00:51:52,950
Don't worry, this is not the case with scanning.

00:51:55,170 --> 00:51:57,550
So you, I have shown you or explained you

00:51:57,550 --> 00:52:01,450
how smooth is it to print, but at the same time

00:52:01,450 --> 00:52:03,930
I'm very sorry to say we do not have

00:52:03,930 --> 00:52:05,380
anything similar in scanning.

00:52:06,470 --> 00:52:08,300
So that is a problem.

00:52:08,300 --> 00:52:11,160
That is where we need more collaboration,

00:52:11,160 --> 00:52:14,620
more contributions to make scanning

00:52:14,620 --> 00:52:17,210
at par with printing now okay.

00:52:17,210 --> 00:52:20,647
So for scanning still we are following

00:52:24,210 --> 00:52:27,620
the age old process of driver installation.

00:52:27,620 --> 00:52:30,180
You need to go to the manufacturer's site,

00:52:30,180 --> 00:52:34,270
download the scan driver, install it, use it.

00:52:34,270 --> 00:52:35,520
And yeah, so it's a pain.

00:52:36,764 --> 00:52:39,960
So that's what we wanted to discuss more,

00:52:40,820 --> 00:52:44,240
we want contributions in that area where scanning

00:52:44,240 --> 00:52:45,820
and printing can come together

00:52:47,010 --> 00:52:50,896
and use the best out of the IPP technologies

00:52:50,896 --> 00:52:54,810
and the standards that PWG has provided us.

00:52:57,910 --> 00:52:58,743
Okay.

00:52:58,743 --> 00:53:00,170
So as I have already explained,

00:53:00,170 --> 00:53:03,210
IPP scanning infrastructure is not in place today.

00:53:03,210 --> 00:53:04,120
We need to have it.

00:53:04,120 --> 00:53:05,780
That's very much required okay.

00:53:08,530 --> 00:53:10,540
Standards are already defined by PWG.

00:53:12,150 --> 00:53:16,630
So somebody just needs to develop and work on it.

00:53:16,630 --> 00:53:18,085
PWG has given the instructions or

00:53:18,085 --> 00:53:20,040
set up the standards like this

00:53:20,040 --> 00:53:21,984
is what needs to be done.

00:53:21,984 --> 00:53:22,817
This is what needs to be done.

00:53:22,817 --> 00:53:26,530
Like how the printing was, IPP printing was developed.

00:53:27,780 --> 00:53:29,730
So we need collaborations.

00:53:29,730 --> 00:53:33,190
As I said that printing is a very niche technology,

00:53:33,190 --> 00:53:36,100
we have very few people working on printing

00:53:36,100 --> 00:53:38,760
I mean, very few contributors so

00:53:38,760 --> 00:53:40,950
from open printing perspective,

00:53:40,950 --> 00:53:44,840
our main goal as of now is to

00:53:44,840 --> 00:53:48,960
expand this horizon, is to have more contributions.

00:53:48,960 --> 00:53:51,240
We want open printing to grow,

00:53:51,240 --> 00:53:54,030
we want more contributions in that area.

00:53:54,030 --> 00:53:57,317
And I keep on saying this to everyone,

00:53:57,317 --> 00:54:00,060
if you are doing something in open printing,

00:54:00,060 --> 00:54:02,360
if you are contributing it to open printing,

00:54:02,360 --> 00:54:06,090
it goes to the OS code the next day

00:54:06,090 --> 00:54:08,890
and feel happy whoever uses printing

00:54:08,890 --> 00:54:12,630
in Linux or in Ubuntu uses your code to print.

00:54:12,630 --> 00:54:14,060
So that's what you are doing,

00:54:14,060 --> 00:54:16,320
you are helping somewhere (chuckles)

00:54:16,320 --> 00:54:17,730
without your contribution, he couldn't

00:54:17,730 --> 00:54:19,940
have printed a you know, vital document

00:54:19,940 --> 00:54:24,065
or something of that sort okay.

00:54:24,065 --> 00:54:29,065
So as I said that this is a strong collaboration

00:54:29,980 --> 00:54:31,880
so driverless printing or scanning

00:54:31,880 --> 00:54:34,180
is a strong collaboration between the

00:54:34,180 --> 00:54:38,160
you know firmware and the software

00:54:38,160 --> 00:54:40,770
so both needs to work together.

00:54:40,770 --> 00:54:42,880
If we have our software architecture,

00:54:42,880 --> 00:54:46,703
if we have our you know, everything set up

00:54:46,703 --> 00:54:48,560
without the proper firmware we will

00:54:48,560 --> 00:54:49,700
not be able to do it.

00:54:49,700 --> 00:54:52,490
There should be a strong hand shaking right.

00:54:52,490 --> 00:54:54,810
Without that hand shaking it's not possible.

00:54:54,810 --> 00:54:56,800
So at the same time, printing companies

00:54:56,800 --> 00:54:58,390
or vendors need to come up with

00:54:58,390 --> 00:55:02,200
the proper firmwares which will support these standards.

00:55:07,390 --> 00:55:10,680
This probably I have already discussed like SANE

00:55:10,680 --> 00:55:12,830
and open printing, SANE community

00:55:12,830 --> 00:55:14,970
and the open printing needs to collaborate

00:55:14,970 --> 00:55:17,450
or work together because they are

00:55:17,450 --> 00:55:19,590
the persons who know scanning best.

00:55:19,590 --> 00:55:21,610
We are print guys, they are the scan guys

00:55:21,610 --> 00:55:23,670
they know it much better than us

00:55:23,670 --> 00:55:26,420
so they can develop it for, I mean quickly.

00:55:26,420 --> 00:55:28,070
So we need to collaborate.

00:55:28,070 --> 00:55:31,120
So that is one thing which we are trying to do

00:55:31,120 --> 00:55:33,540
I mean which we have started recently

00:55:33,540 --> 00:55:36,930
like we'll try to you know, have more discussions,

00:55:36,930 --> 00:55:39,050
more you know, talks with them

00:55:39,050 --> 00:55:41,460
and try to bring them together if,

00:55:42,890 --> 00:55:45,300
I mean I will, we will surely require Kate's help

00:55:45,300 --> 00:55:47,260
and we are already discussing it with her.

00:55:47,260 --> 00:55:49,940
So if we can have more you know,

00:55:49,940 --> 00:55:51,880
collaboration on that space

00:55:51,880 --> 00:55:54,540
otherwise print will move ahead

00:55:54,540 --> 00:55:57,270
and scan will still lag behind which we do not want.

00:56:02,580 --> 00:56:04,300
So what are we aiming, I mean

00:56:04,300 --> 00:56:06,810
what we think should it, I mean

00:56:06,810 --> 00:56:10,170
how it should work is like a printer,

00:56:10,170 --> 00:56:14,390
an IPP scanner it you know appears as an IPP

00:56:14,390 --> 00:56:16,460
server in the network with standard ports

00:56:16,460 --> 00:56:20,480
as 631 so it will be, it will be like

00:56:20,480 --> 00:56:22,940
you have a printer I mean, like for print

00:56:22,940 --> 00:56:25,670
we had an URI similarly for scan also

00:56:25,670 --> 00:56:28,170
there will be an URI where the host

00:56:28,170 --> 00:56:29,890
will communicate with the printer

00:56:29,890 --> 00:56:33,950
using that URI and other IPP you know,

00:56:33,950 --> 00:56:37,190
other IPP commands or ways of

00:56:37,190 --> 00:56:38,740
communicating with the printer.

00:56:40,370 --> 00:56:42,460
A multifunction device has both

00:56:42,460 --> 00:56:46,070
resources with this URI so it's like

00:56:46,070 --> 00:56:48,870
it has a print URI and it has a scan URI.

00:56:48,870 --> 00:56:50,590
So that's the interface using which

00:56:50,590 --> 00:56:52,290
you communicate with your printer.

00:56:58,160 --> 00:57:00,620
This also I have discussed like

00:57:01,740 --> 00:57:03,570
these are the things which would

00:57:03,570 --> 00:57:05,790
help us in scan okay.

00:57:05,790 --> 00:57:08,700
So till this point of time any items

00:57:08,700 --> 00:57:11,230
of discussion or you think we can

00:57:11,230 --> 00:57:13,448
do something to make it better

00:57:13,448 --> 00:57:18,034
or you know, to help it out or to

00:57:18,034 --> 00:57:21,970
make the delivery process quicker

00:57:21,970 --> 00:57:23,720
or the development process quicker?

00:57:28,300 --> 00:57:30,330
- [Male Speaker] Are there any manufacturers that

00:57:30,330 --> 00:57:33,469
have firmware that support this at all ready?

00:57:33,469 --> 00:57:37,990
- Most of them support air scan in Mac

00:57:37,990 --> 00:57:40,860
so if something is getting supported in Mac,

00:57:40,860 --> 00:57:44,580
it will not be a very big, very much you know,

00:57:44,580 --> 00:57:47,040
too much of heavy task to support it here

00:57:47,040 --> 00:57:52,040
but right now I guess not, it's fully supported.

00:57:55,330 --> 00:57:56,264
Till you want to add anything?

00:57:56,264 --> 00:58:00,610
- Yes, yes the the PWG, they have worked out,

00:58:00,610 --> 00:58:04,620
developed the IPP scanning standard

00:58:04,620 --> 00:58:08,000
but as fast, as far as I know,

00:58:08,000 --> 00:58:11,790
there are no scanners yet, no multi-function

00:58:11,790 --> 00:58:14,830
printers yet which support this standard.

00:58:19,630 --> 00:58:21,520
But I think it's a question of time

00:58:21,520 --> 00:58:24,380
when it will start that manufacturers will support it.

00:58:25,660 --> 00:58:28,280
- So the Apple standard is not the IPP standard?

00:58:30,880 --> 00:58:31,872
- Yeah.

00:58:31,872 --> 00:58:33,910
The question was so the Apple standard is not the IPP?

00:58:33,910 --> 00:58:36,140
- Yes I don't, yes I don't know

00:58:36,140 --> 00:58:39,300
what exactly the Apple air scan standard is.

00:58:39,300 --> 00:58:43,710
I know that Apple air print is IPP driverless

00:58:43,710 --> 00:58:46,910
printing but I don't know whether IP,

00:58:46,910 --> 00:58:49,750
whether Apple air scan is also IPP

00:58:49,750 --> 00:58:50,970
driverless scanning.

00:58:55,290 --> 00:58:57,550
- Okay so any other questions?

00:59:08,740 --> 00:59:09,573
Yeah

00:59:14,850 --> 00:59:15,850
can you please stand up?

00:59:15,850 --> 00:59:17,700
So they just wanted to get the video.

00:59:19,586 --> 00:59:21,663
- So forgive me for a dumb question

00:59:21,663 --> 00:59:25,920
but so is CUPS supporting the IPP

00:59:25,920 --> 00:59:29,110
scanning right, or the IPP printing

00:59:29,110 --> 00:59:31,830
and can bridge an older printer

00:59:31,830 --> 00:59:34,960
to IPP standard is that right?

00:59:34,960 --> 00:59:37,890
If you have a driver for a printer,

00:59:37,890 --> 00:59:39,230
for an older printer and they can have

00:59:39,230 --> 00:59:41,470
an interface, IPP interface on the

00:59:41,470 --> 00:59:44,750
network using CUPS is that true?

00:59:44,750 --> 00:59:47,640
- Yes CUPS completely supports IPP

00:59:47,640 --> 00:59:50,510
driverless printing so that if you have

00:59:50,510 --> 00:59:53,420
devices on the network, which support

00:59:53,420 --> 00:59:58,170
IPP driverless printing, they will be listed by CUPS

00:59:58,170 --> 01:00:00,380
and you can print on them.

01:00:00,380 --> 01:00:04,260
- But I can also exposer on all the printer

01:00:04,260 --> 01:00:05,680
using CUPS to the network as

01:00:05,680 --> 01:00:07,230
an IPP printer can I?

01:00:07,230 --> 01:00:08,150
- Ah, yes.

01:00:08,150 --> 01:00:10,760
This exposing an older printer like

01:00:10,760 --> 01:00:14,230
an IPP printer which by itself is not IPP

01:00:15,362 --> 01:00:19,050
this is the subject of the printer

01:00:19,050 --> 01:00:22,300
applications which will be the future

01:00:22,300 --> 01:00:23,860
form of printer drivers.

01:00:25,640 --> 01:00:26,720
- [Male Speaker] Okay so.

01:00:26,720 --> 01:00:30,060
- This will be a further sub session

01:00:30,060 --> 01:00:33,070
of this micro conference.

01:00:33,070 --> 01:00:36,030
- So can the scanning go a similar way?

01:00:36,030 --> 01:00:37,080
- Yes, yes.

01:00:37,080 --> 01:00:39,510
We are planning to do scanning the same way.

01:00:40,570 --> 01:00:42,590
- So for the scanners that don't support IPP.

01:00:42,590 --> 01:00:44,170
- Yes, yes.

01:00:44,170 --> 01:00:46,460
We plan on the next Google Summer of Code

01:00:46,460 --> 01:00:48,320
that a student will make a scanner

01:00:48,320 --> 01:00:51,440
application out of SANE so that

01:00:51,440 --> 01:00:55,400
if you have a SANE driver that the scanner

01:00:55,400 --> 01:00:58,070
can be represented also as an IPP

01:00:58,070 --> 01:01:01,890
driverless scanner emulated on the local machine.

01:01:01,890 --> 01:01:05,770
- And that's gonna be through CUPS.

01:01:05,770 --> 01:01:08,480
- No, no CUPS is not involved in that.

01:01:08,480 --> 01:01:11,220
- So the whatever implementation for IPPs

01:01:11,220 --> 01:01:12,480
and CUPS is not gonna be used?

01:01:12,480 --> 01:01:14,510
- Perhaps the CUPS library will be used

01:01:15,376 --> 01:01:19,507
to implement IPP, but the CUPS daemon

01:01:19,507 --> 01:01:23,070
is not involved in scanning.

01:01:23,070 --> 01:01:24,420
- [Male Speaker] Okay.

01:01:24,420 --> 01:01:25,560
Okay, that makes sense.

01:01:25,560 --> 01:01:26,393
Thank you.

01:01:28,480 --> 01:01:31,180
- So do you know any clients which

01:01:31,180 --> 01:01:32,270
support IPP scanning?

01:01:33,190 --> 01:01:34,023
- [Till] What?

01:01:34,023 --> 01:01:36,133
- [Aveek] Any client supporting IPP scanning?

01:01:36,133 --> 01:01:37,711
- Because yeah, we have no manufacturers.

01:01:37,711 --> 01:01:40,360
- We do not have yet clients.

01:01:40,360 --> 01:01:44,170
This will be another subject of

01:01:44,170 --> 01:01:45,684
Google Summer of Code 2020.

01:01:45,684 --> 01:01:47,767
(laughs)

01:01:50,310 --> 01:01:54,000
- So if people wanted to see this

01:01:54,000 --> 01:01:55,500
accelerated before next summer

01:01:57,340 --> 01:01:58,700
and there was funding dominated

01:01:58,700 --> 01:02:00,100
for interns through something like

01:02:00,100 --> 01:02:01,430
community bridge or something else,

01:02:01,430 --> 01:02:03,130
is there mentors around to help make

01:02:03,130 --> 01:02:05,390
some of this stuff work out in the community?

01:02:05,390 --> 01:02:07,320
If we can find interns through you know,

01:02:07,320 --> 01:02:08,880
different time periods?

01:02:08,880 --> 01:02:10,890
- It would be great if you could find

01:02:10,890 --> 01:02:15,380
interns too, the more we get the better it will be.

01:02:15,380 --> 01:02:16,213
- Yeah

01:02:16,213 --> 01:02:18,570
for scanning like when we started off

01:02:18,570 --> 01:02:20,450
in the SOC even had some projects

01:02:20,450 --> 01:02:22,030
so there were a few mentors who

01:02:22,030 --> 01:02:25,690
wanted to mentor on that so but we didn't

01:02:25,690 --> 01:02:28,520
make much progress because since

01:02:28,520 --> 01:02:30,250
there were other priority projects

01:02:30,250 --> 01:02:34,260
so it took a backseat but I think we can,

01:02:34,260 --> 01:02:37,950
we can have mentors in that way as well

01:02:37,950 --> 01:02:40,330
so who would be interested in supporting

01:02:40,330 --> 01:02:43,890
so we can work on that.

01:02:43,890 --> 01:02:46,060
And any of you who is over there in the room,

01:02:46,060 --> 01:02:49,459
if you want to help us mentoring a student

01:02:49,459 --> 01:02:54,459
please we'd be happy to work with you all.

01:02:54,594 --> 01:02:56,400
- And one of the problem is that

01:02:56,400 --> 01:02:58,199
for printing we have CUPS but what do

01:02:58,199 --> 01:03:00,260
we have for scanning?

01:03:00,260 --> 01:03:01,093
- SANE.

01:03:01,970 --> 01:03:04,070
That's SANE, that's the SANE protocol

01:03:04,070 --> 01:03:05,190
or the SANE standard.

01:03:05,190 --> 01:03:07,160
- Yeah, it's a protocol but what about

01:03:07,160 --> 01:03:09,610
the application for scanning?

01:03:09,610 --> 01:03:13,310
- Yeah SANE is an application which is commonly used.

01:03:13,310 --> 01:03:17,110
So SANE is probably a TWAIN, so it follows TWAIN.

01:03:17,110 --> 01:03:22,010
- No, no, SANE really does not follow TWAIN.

01:03:22,010 --> 01:03:24,569
SANE is something on its own,

01:03:24,569 --> 01:03:29,340
it consists of a library which is used

01:03:29,340 --> 01:03:31,030
by the front ends

01:03:31,030 --> 01:03:35,460
and this library dynamically links

01:03:35,460 --> 01:03:38,270
other libraries which are the scanner drivers.

01:03:40,680 --> 01:03:43,750
- Okay do you have the driver for IPP scanning?

01:03:43,750 --> 01:03:44,810
- Not yet.

01:03:44,810 --> 01:03:46,630
This is one of our plans.

01:03:46,630 --> 01:03:48,370
This is on our list.

01:03:48,370 --> 01:03:51,260
And if you enter as a volunteer

01:03:51,260 --> 01:03:54,270
you can pull it even earlier from the list.

01:03:55,910 --> 01:03:57,490
- So you need the mic?

01:03:57,490 --> 01:04:00,193
- [Male Voice] There's one here.

01:04:00,193 --> 01:04:01,490
- Yeah.

01:04:01,490 --> 01:04:05,000
- So I was just wondering, are we looking at,

01:04:05,000 --> 01:04:07,700
are you looking at using SANE APIs towards

01:04:07,700 --> 01:04:10,050
the desktop applications or are

01:04:10,050 --> 01:04:11,590
we basically creating something like

01:04:11,590 --> 01:04:13,410
the common printing dialogue in

01:04:13,410 --> 01:04:15,440
the new API that's divas based for

01:04:15,440 --> 01:04:19,100
applications to do the scanning and to do the UI

01:04:19,100 --> 01:04:21,970
and then basically just have the SANE code

01:04:21,970 --> 01:04:25,630
that's existing to support all the old

01:04:25,630 --> 01:04:29,820
devices but support new driverless scanners

01:04:29,820 --> 01:04:31,630
through some new daemon or something

01:04:31,630 --> 01:04:35,970
that is actually doing the DBAs API for applications.

01:04:37,020 --> 01:04:38,020
What's the deal there?

01:04:38,020 --> 01:04:38,853
Do you have any plans?

01:04:38,853 --> 01:04:42,260
- For the scanning our plans are to do two parts,

01:04:42,260 --> 01:04:45,400
one part is the scanner applications

01:04:45,400 --> 01:04:46,990
and there will be a special scanner

01:04:46,990 --> 01:04:49,660
application which contains SANE

01:04:49,660 --> 01:04:52,460
and all the existing SANE drivers

01:04:52,460 --> 01:04:54,700
which is for the Legacy scanners

01:04:55,930 --> 01:05:00,530
and there will be a SANE driver

01:05:02,086 --> 01:05:05,590
for IPP driverless scanning.

01:05:06,630 --> 01:05:09,920
And so if a SANE installation in the system

01:05:09,920 --> 01:05:14,230
has this same driver for IPP driverless scanning,

01:05:14,230 --> 01:05:19,230
when you open any scan dialog, scan UI

01:05:20,806 --> 01:05:24,500
SANE usually goes through all its backends

01:05:24,500 --> 01:05:27,850
for all its drivers to find a CU to the scanner

01:05:27,850 --> 01:05:32,340
and so when SANE hits the IPP driverless

01:05:32,340 --> 01:05:37,127
scanning driver, this one will find

01:05:37,127 --> 01:05:42,127
the IPP driverless scanners advertised via DNSSD

01:05:45,680 --> 01:05:49,770
and one of them is the scanner application

01:05:51,150 --> 01:05:53,270
and so the scanners are available.

01:05:55,890 --> 01:05:56,800
- [Male Voice] Right yep.

01:06:00,270 --> 01:06:01,103
Thank you.

01:06:01,103 --> 01:06:01,936
- Okay.

01:06:03,605 --> 01:06:05,670
- So with SANE there is often the problem

01:06:05,670 --> 01:06:07,320
that when you open the SANE dialog

01:06:07,320 --> 01:06:09,860
on a remote machine takes a long while

01:06:09,860 --> 01:06:12,830
for the server side to talk to the scanner

01:06:12,830 --> 01:06:14,390
to retrieve the printer parameters

01:06:14,390 --> 01:06:16,330
and all that stuff and the dialog to come up,

01:06:16,330 --> 01:06:18,040
it takes sometimes like a minute

01:06:19,120 --> 01:06:20,770
when it tries to get it.

01:06:20,770 --> 01:06:24,080
Is the IPP scanner gonna help with that

01:06:24,080 --> 01:06:26,470
or is it gonna be the problem again?

01:06:26,470 --> 01:06:29,390
- You are probably using SANE with

01:06:29,390 --> 01:06:32,700
its own network protocol, I don't know

01:06:32,700 --> 01:06:36,280
this network protocol how efficient it is.

01:06:36,280 --> 01:06:39,600
If you use IPP driverless scanning,

01:06:39,600 --> 01:06:42,340
you use the IPP protocol which works

01:06:42,340 --> 01:06:45,050
very well with printing already

01:06:45,050 --> 01:06:47,690
and we hope Aveek, by replacing the

01:06:49,330 --> 01:06:52,950
SANE's own protocol by a standard protocol

01:06:52,950 --> 01:06:54,010
that it gets better.

01:06:55,280 --> 01:06:57,670
- Well the, I've seen that the problem

01:06:57,670 --> 01:06:59,190
is not with the protocol itself,

01:06:59,190 --> 01:07:03,370
is not the network protocol that is slow,

01:07:04,510 --> 01:07:08,150
the problem is that in the SANE architecture

01:07:08,150 --> 01:07:10,190
where it has to check the printer,

01:07:10,190 --> 01:07:11,590
connect to the printer, communicate

01:07:11,590 --> 01:07:14,540
with the printer to give you a list of parameters.

01:07:14,540 --> 01:07:17,610
So the driver returns with the list of parameters

01:07:17,610 --> 01:07:21,240
and I'm just wondering if you're using SANE

01:07:21,240 --> 01:07:24,850
and its architecture would also have to first converse

01:07:24,850 --> 01:07:27,240
and retrieve all the parameters from the printer

01:07:27,240 --> 01:07:30,520
and that is gonna be the issue again.

01:07:32,170 --> 01:07:33,003
On the other hand.

01:07:33,003 --> 01:07:35,280
- Yeah it exposes some, with which

01:07:35,280 --> 01:07:37,250
the drivers starts talking.

01:07:37,250 --> 01:07:42,250
So how it works is like the driver gives

01:07:42,550 --> 01:07:46,520
a list to the those APIs like those extensions

01:07:46,520 --> 01:07:48,060
like these are the things I support

01:07:48,060 --> 01:07:49,990
so that's how SANE lists

01:07:49,990 --> 01:07:51,790
and again all this interactions happen

01:07:51,790 --> 01:07:55,600
so maybe in server mode it's, there is

01:07:55,600 --> 01:07:57,580
the hand shaking is not working properly.

01:07:58,910 --> 01:07:59,743
- Maybe yeah.

01:07:59,743 --> 01:08:02,490
And since the, I assume that the problem

01:08:02,490 --> 01:08:06,090
with this slowness is that the driver

01:08:06,090 --> 01:08:08,020
which returns the printer parameter,

01:08:08,020 --> 01:08:09,810
the scanner parameters first goes

01:08:09,810 --> 01:08:11,200
and initializes the scanner

01:08:11,200 --> 01:08:12,980
and that takes awhile like the move the mortar

01:08:12,980 --> 01:08:15,000
and things like that and that's why

01:08:15,000 --> 01:08:17,840
like it says okay I'm gonna initialize the scanner

01:08:17,840 --> 01:08:19,900
and then I'll give you the scanner parameters,

01:08:19,900 --> 01:08:22,560
the resolution, the size and everything

01:08:22,560 --> 01:08:25,110
maybe with IPP that's not gonna be the case.

01:08:25,110 --> 01:08:27,230
So maybe that's not a question actually.

01:08:28,350 --> 01:08:29,183
Thank you.

01:08:36,360 --> 01:08:37,193
- Okay.

01:08:37,193 --> 01:08:38,870
So I think throughout the discussion

01:08:38,870 --> 01:08:41,790
we have spoken about the last point also

01:08:41,790 --> 01:08:45,970
so the host does not need any device specific info.

01:08:45,970 --> 01:08:48,500
It can do, it can get everything through

01:08:48,500 --> 01:08:50,960
the IPP request so everything is taken

01:08:50,960 --> 01:08:53,252
care of by the IPP, by the firmware.

01:08:53,252 --> 01:08:56,220
So it doesn't need to know about what it supports

01:08:56,220 --> 01:08:59,345
and what it does not.

01:08:59,345 --> 01:09:02,800
- The driver principally is a piece

01:09:02,800 --> 01:09:05,547
of software which is specific to the model

01:09:05,547 --> 01:09:09,920
of hardware which it supports.

01:09:09,920 --> 01:09:12,370
And if we have driverless we don't have

01:09:12,370 --> 01:09:14,660
any kind of such software, we have

01:09:14,660 --> 01:09:16,960
only general software

01:09:16,960 --> 01:09:21,580
and so for the driverless printing

01:09:23,910 --> 01:09:26,090
or scanning we ask the device for

01:09:26,090 --> 01:09:28,040
its capabilities because we don't

01:09:28,040 --> 01:09:31,390
have information about the devices capabilities

01:09:31,390 --> 01:09:34,510
and the devices always use communication

01:09:34,510 --> 01:09:39,510
protocols both for the clearing

01:09:39,830 --> 01:09:44,780
and also for the wired job which are standardized.

01:09:50,010 --> 01:09:52,180
- [Male Speaker] What about the format of the document?

01:09:52,180 --> 01:09:53,810
It's like for printing now.

01:09:53,810 --> 01:09:58,340
- Yes for printing we have four standardized

01:09:58,340 --> 01:10:03,340
formats which where at least two of them

01:10:03,530 --> 01:10:07,660
are required by each of the four IPP

01:10:07,660 --> 01:10:09,610
driverless printing protocol

01:10:10,700 --> 01:10:15,700
and the four standard formats one is PDF,

01:10:17,450 --> 01:10:20,750
one is Apple wasta which is the wasta

01:10:20,750 --> 01:10:24,990
format of Apple air print, one is.

01:10:27,422 --> 01:10:28,255
- PWG.

01:10:28,255 --> 01:10:32,890
- PWG wasta which is the standard of IPP everywhere

01:10:33,930 --> 01:10:37,870
and one is PCLM, has nothing to do with PCL,

01:10:37,870 --> 01:10:41,410
it's a subset of PDF which is wasta only

01:10:42,400 --> 01:10:46,820
which is for example also used by the Mopria standard.

01:10:48,920 --> 01:10:50,860
- [Male Speaker] Postscript is that possible?

01:10:50,860 --> 01:10:53,020
- [Rithvik] Postscript is out.

01:10:53,020 --> 01:10:54,300
- Yes yes.

01:10:54,300 --> 01:10:55,133
- [Male Speaker] Okay.

01:10:56,080 --> 01:10:59,080
- You can use postscript together

01:10:59,080 --> 01:11:02,660
with IPP printing but it is not one

01:11:02,660 --> 01:11:06,240
of the required standard data formats.

01:11:06,240 --> 01:11:07,550
- But as of now postscript seems

01:11:07,550 --> 01:11:10,677
to be the most popular and the most used one.

01:11:10,677 --> 01:11:11,800
- Yes.

01:11:11,800 --> 01:11:14,890
Postscript is also not that reliable

01:11:16,110 --> 01:11:17,740
when there are postscript printers

01:11:17,740 --> 01:11:20,340
and windows drivers there's often more

01:11:20,340 --> 01:11:23,830
than only the PPD file but also some hidden

01:11:23,830 --> 01:11:27,760
fixers to work around the post cup box in the printer.

01:11:32,880 --> 01:11:33,910
- Okay.

01:11:33,910 --> 01:11:38,760
So the popularity of open printing

01:11:38,760 --> 01:11:42,230
seems to be growing bigger and bigger.

01:11:42,230 --> 01:11:44,760
So recently to give you a latest news

01:11:44,760 --> 01:11:48,200
recently this is being incorporated in Chrome OS

01:11:48,200 --> 01:11:50,660
so maybe you can hear it from the horse's mouth

01:11:50,660 --> 01:11:54,060
If Patrick you can just tell us,

01:11:54,060 --> 01:11:56,330
tell the audience like how open printing

01:11:56,330 --> 01:11:58,290
is being integrated with Chrome OS

01:11:58,290 --> 01:12:00,800
or how I mean, what all things you are

01:12:00,800 --> 01:12:03,270
picking up or your plans if you can share a bit

01:12:03,270 --> 01:12:04,103
and details.

01:12:07,310 --> 01:12:10,340
- In OS so yeah, we have CUPS

01:12:10,340 --> 01:12:13,830
which is on bookset so you cannot re-access it

01:12:13,830 --> 01:12:16,400
from external network.

01:12:17,290 --> 01:12:20,360
We don't use cups-browsed, we have our

01:12:20,360 --> 01:12:25,360
own discovery service which based on MDNS of course.

01:12:27,880 --> 01:12:29,900
We have also our own printing dialogue

01:12:31,240 --> 01:12:33,560
I mean yeah, I would like to mention that Chrome OS

01:12:33,560 --> 01:12:37,060
and Chrome it's internet it's open source

01:12:37,060 --> 01:12:39,600
solution so you can find it on the internet,

01:12:40,610 --> 01:12:44,720
the whole source code is on the internet.

01:12:44,720 --> 01:12:48,840
So yes internally we use, we based

01:12:48,840 --> 01:12:53,840
on IPP protocol yes, we're based on IPP protocol,

01:12:54,560 --> 01:12:56,570
we're also heavily based currently

01:12:56,570 --> 01:13:00,350
on PPD files for the older printers,

01:13:00,350 --> 01:13:03,130
I mean majority of printers didn't need SPPD files.

01:13:06,990 --> 01:13:09,670
Yes so we currently we are able like

01:13:09,670 --> 01:13:13,730
to install a printers in 70% of cases

01:13:16,650 --> 01:13:20,410
like driverless in the other cases

01:13:20,410 --> 01:13:22,060
it needs some user interventions.

01:13:23,770 --> 01:13:25,790
So still working on it.

01:13:27,490 --> 01:13:28,323
- Okay.

01:13:28,323 --> 01:13:29,220
Thank you Patrick.

01:13:30,270 --> 01:13:33,060
Okay so any other question or points to discuss?

01:13:41,800 --> 01:13:43,270
- So for the scanner side of it,

01:13:43,270 --> 01:13:45,430
it's just mostly manpower at this point in time

01:13:45,430 --> 01:13:47,484
and then the printer manufacturer,

01:13:47,484 --> 01:13:49,800
the scanner, the people who've got

01:13:49,800 --> 01:13:52,100
the all one functionality, printer,

01:13:52,100 --> 01:13:54,990
scanners need to be coming to the table

01:13:54,990 --> 01:13:56,780
and discussing things with people.

01:13:56,780 --> 01:14:01,080
- Right so I think both the cases

01:14:01,080 --> 01:14:03,280
but at first, I mean it will be great

01:14:03,280 --> 01:14:05,600
if we can have people contributing first

01:14:05,600 --> 01:14:07,450
and then parallelly we can approach

01:14:08,630 --> 01:14:11,340
the vendor manufacturers as well because

01:14:11,340 --> 01:14:12,970
everybody takes care I mean, takes part

01:14:12,970 --> 01:14:15,760
in the PWG board I mean they are in the PWG board is,

01:14:15,760 --> 01:14:18,390
so if we can approach them, but if we do not

01:14:18,390 --> 01:14:20,050
have something on the software side,

01:14:20,050 --> 01:14:22,450
it will be hard as well.

01:14:22,450 --> 01:14:25,028
- [Male Speaker] So perhaps it's a good way for

01:14:25,028 --> 01:14:27,990
starting to motivate the manufacturer.

01:14:27,990 --> 01:14:30,970
- So it's a good way to start to motivate

01:14:30,970 --> 01:14:34,806
the manufacturers perhaps to have already

01:14:34,806 --> 01:14:38,508
the SANE driver and the scanner application

01:14:38,508 --> 01:14:43,110
framework in place so that the protocol

01:14:43,110 --> 01:14:45,210
is used in the client software.

01:14:50,340 --> 01:14:53,956
- But in general manpower is a problem in open printing.

01:14:53,956 --> 01:14:56,520
(laughs)

01:14:56,520 --> 01:15:01,520
Okay so I think the next topic is a coffee break.

01:15:03,553 --> 01:15:06,249
(laughs)

01:15:06,249 --> 01:15:08,999
(audience claps)

01:15:12,940 --> 01:15:14,630
So we start after half an hour.

01:15:14,630 --> 01:15:19,630
So those of you who are, who have called in,

01:15:19,980 --> 01:15:21,860
so we have a break for half an hour.

01:15:21,860 --> 01:15:22,693
So see you soon.

01:15:25,200 --> 01:15:26,580
By the way don't forget to collect

01:15:26,580 --> 01:15:29,280
your open printing pens, they're lying on that corner.

01:15:31,300 --> 01:15:34,960
- Let's continue with session about open printing.

01:15:35,976 --> 01:15:40,976
We are talking now about printer

01:15:41,880 --> 01:15:43,800
and scanner applications.

01:15:46,400 --> 01:15:48,280
Already many years ago

01:15:49,758 --> 01:15:52,200
(laughs)

01:15:52,200 --> 01:15:55,160
always see I think it's more or less

01:15:55,160 --> 01:15:58,670
about 10 years ago when Mike Sweet

01:15:58,670 --> 01:16:03,380
of CUPS duplicated PPD files.

01:16:04,430 --> 01:16:09,430
But back then there was no alternative for them

01:16:09,520 --> 01:16:14,060
PPD files are postscript printer description files.

01:16:14,060 --> 01:16:17,440
This format is invented by Adobe

01:16:17,440 --> 01:16:21,670
to have a file containing the capabilities

01:16:21,670 --> 01:16:25,360
of a postscript printer in a standardized way

01:16:25,360 --> 01:16:30,360
so that a client could easily know about the printer

01:16:31,420 --> 01:16:36,350
and so make available all options

01:16:36,350 --> 01:16:39,130
to the user know about the paper size,

01:16:39,130 --> 01:16:41,880
about the non-printable margins

01:16:41,880 --> 01:16:43,910
and things like that.

01:16:43,910 --> 01:16:48,110
But the PPDs were on a CD which came

01:16:48,110 --> 01:16:51,060
with the printer, they were sold to

01:16:51,060 --> 01:16:53,270
save the driver for postscript printer

01:16:55,190 --> 01:16:57,360
or you downloaded them from the

01:16:57,360 --> 01:16:59,130
website of the manufacturer

01:17:01,410 --> 01:17:06,310
and they were actually made for postscript printers.

01:17:06,310 --> 01:17:11,310
When back in 2000 Mike Sweet came out with CUPS

01:17:13,620 --> 01:17:16,320
printing worked or in Unix

01:17:16,320 --> 01:17:19,350
and Linux worked all the way through postscript.

01:17:19,350 --> 01:17:22,100
Everything which came in was converted

01:17:22,100 --> 01:17:23,890
to postscript back ups.

01:17:24,860 --> 01:17:27,930
And then this postscript walls,

01:17:27,930 --> 01:17:31,000
if the printer was not postscript converted

01:17:31,000 --> 01:17:34,080
to the printer's actual language

01:17:35,200 --> 01:17:40,200
and everything went full postscript probably

01:17:41,580 --> 01:17:45,830
therefore Mike decides to use PPD files

01:17:45,830 --> 01:17:48,300
even for the non postscript printers

01:17:49,230 --> 01:17:51,980
as a mean to describe printers

01:17:51,980 --> 01:17:53,880
and capabilities in CUPS.

01:17:56,640 --> 01:18:01,640
And later on in the open printing summit 2006

01:18:01,920 --> 01:18:04,800
this was the first of the annual printing

01:18:04,800 --> 01:18:08,270
summits which I've organized with open printing,

01:18:09,930 --> 01:18:14,330
there we decided on switching over

01:18:14,330 --> 01:18:17,560
from the postscript based printing workflow

01:18:17,560 --> 01:18:21,940
to the PDF based printing workflow

01:18:21,940 --> 01:18:24,380
meaning that everything which comes in

01:18:24,380 --> 01:18:25,540
is turned into PDF

01:18:26,940 --> 01:18:30,190
and from PDF it is turned into the

01:18:30,190 --> 01:18:31,780
printer's native language.

01:18:32,630 --> 01:18:37,460
But lacking an alternative we continued

01:18:37,460 --> 01:18:41,620
to use PPD files to describe printer

01:18:41,620 --> 01:18:43,540
capabilities in CUPS.

01:18:45,520 --> 01:18:50,370
Some years later, Mike duplicated PPD files,

01:18:50,370 --> 01:18:53,020
telling PPD files will go away

01:18:53,020 --> 01:18:55,840
at a certain point in time.

01:18:55,840 --> 01:18:58,350
Duplicating does not mean we take it

01:18:58,350 --> 01:19:03,350
away now it means beware it will go away in some time

01:19:04,670 --> 01:19:09,670
and due to lack of alternatives it kept all the time

01:19:10,560 --> 01:19:12,550
and is still there.

01:19:12,550 --> 01:19:16,680
But in the open printing summit 2018,

01:19:18,100 --> 01:19:22,050
more than one year ago, Mike came up

01:19:22,050 --> 01:19:25,220
with the idea of printer applications,

01:19:25,220 --> 01:19:30,220
a print and described it as it is a daemon warning

01:19:32,000 --> 01:19:37,000
and this daemon emulates an IPP printer,

01:19:38,570 --> 01:19:40,590
it emulates it, it can emulate,

01:19:40,590 --> 01:19:45,590
it does not need a network and it emulates,

01:19:46,340 --> 01:19:49,690
it can simply emulate it on localhost

01:19:49,690 --> 01:19:51,720
and on some port even to CUPS.

01:19:52,560 --> 01:19:56,030
It emulates and so because usually

01:19:56,030 --> 01:19:57,400
CUPS is also around

01:19:59,800 --> 01:20:03,920
and this emulation of an IPP printer

01:20:05,274 --> 01:20:10,274
is like usual IPP printers advertising itself by a DNSSD

01:20:13,540 --> 01:20:18,210
and it does not only emulating getting

01:20:18,210 --> 01:20:20,460
a job but also emulating get

01:20:20,460 --> 01:20:23,550
printer attributes, telling the client

01:20:23,550 --> 01:20:27,480
on demand about the capabilities.

01:20:27,480 --> 01:20:30,150
And on the other side of this daemon

01:20:30,150 --> 01:20:32,360
is connected to the printer for example

01:20:32,360 --> 01:20:34,740
to a parallel or USB printer

01:20:34,740 --> 01:20:38,020
and the daemon itself is not only

01:20:38,020 --> 01:20:41,120
emulating the IPP printer on one side

01:20:41,120 --> 01:20:46,120
but on the other side it is filtering incoming jobs.

01:20:46,430 --> 01:20:50,900
The jobs are either in PDF or in one

01:20:50,900 --> 01:20:55,900
of the standard wasta formats, filters this

01:20:56,390 --> 01:21:01,390
into the PDA which the printer actually users

01:21:04,300 --> 01:21:07,640
and so this serves as a printer driver

01:21:08,760 --> 01:21:12,410
and as it answers get printer attribute requests,

01:21:12,410 --> 01:21:13,930
we needn't know where PPD

01:21:15,770 --> 01:21:20,670
and it does not, it does not like PPD

01:21:20,670 --> 01:21:22,470
and filters which have to be put

01:21:22,470 --> 01:21:25,110
in certain directories of CUPS,

01:21:28,188 --> 01:21:32,142
in certain directories of the CUPS,

01:21:32,142 --> 01:21:37,142
of the CUPS infrastructure.

01:21:43,824 --> 01:21:47,230
And connects only by our network

01:21:47,230 --> 01:21:50,320
connection, the CUPS and the printer

01:21:50,320 --> 01:21:53,540
application can be in different send boxes.

01:21:53,540 --> 01:21:58,540
So we allow send box packaging for printer drivers

01:22:01,350 --> 01:22:06,350
and so this will be therefore the

01:22:06,380 --> 01:22:09,750
format of printer drivers in the future

01:22:09,750 --> 01:22:11,970
and as this is common

01:22:11,970 --> 01:22:15,970
and as soon as this will be commonly available

01:22:15,970 --> 01:22:20,610
and used we can expect then PPD support

01:22:20,610 --> 01:22:23,100
and CUPS actually goes away

01:22:27,300 --> 01:22:29,870
as then they are really not needed anymore.

01:22:29,870 --> 01:22:34,430
And then CUPS is not handling drivers,

01:22:34,430 --> 01:22:37,170
really handling printer drivers anymore.

01:22:37,170 --> 01:22:40,610
CUPS is simply automatically discovering

01:22:40,610 --> 01:22:45,610
printers by DNSSD, pulling their capabilities

01:22:48,600 --> 01:22:52,000
and with this letting a print queue appear

01:22:53,360 --> 01:22:57,660
and you are not actively creating print queue

01:22:57,660 --> 01:23:01,670
and assigning PPDS or meeting some

01:23:01,670 --> 01:23:05,930
sophisticated algorithms as I have implemented

01:23:05,930 --> 01:23:10,440
in system conflict printer to automatically assign drivers

01:23:13,250 --> 01:23:16,270
and not know where download PPDS anymore.

01:23:16,270 --> 01:23:19,400
And these printer applications

01:23:19,400 --> 01:23:22,060
is they allow send box packaging,

01:23:22,060 --> 01:23:24,620
they can be put into a snap package

01:23:24,620 --> 01:23:27,870
and put into the snap stack

01:23:27,870 --> 01:23:32,450
and snaps have the nice capability of being

01:23:32,450 --> 01:23:34,790
Linux distribution independent.

01:23:34,790 --> 01:23:37,820
You can download them from any Linux distribution

01:23:37,820 --> 01:23:39,800
and they always work.

01:23:39,800 --> 01:23:43,940
So the printer manufacturer makes one snap,

01:23:43,940 --> 01:23:45,560
puts it in the snap stack

01:23:45,560 --> 01:23:47,590
and so we have a driver for all

01:23:47,590 --> 01:23:49,100
the Linux distributions.

01:23:50,030 --> 01:23:54,990
So we can finally fulfill this dream of

01:23:59,200 --> 01:24:02,630
Linux distribution independent driver packages.

01:24:02,630 --> 01:24:05,680
Some years ago we tried it another way

01:24:05,680 --> 01:24:09,340
by the LSP but it was very, very awkward

01:24:09,340 --> 01:24:12,860
and only Epson has adopted this possibility.

01:24:18,530 --> 01:24:23,530
And later on also Debian and Ubuntu have quit

01:24:23,650 --> 01:24:26,180
the LSB, do not support it anymore

01:24:26,180 --> 01:24:30,390
and so the printer application snaps,

01:24:30,390 --> 01:24:34,984
will get the new, the replacement for

01:24:34,984 --> 01:24:38,940
the driver, for the Linux distribution

01:24:38,940 --> 01:24:41,450
independent printer driver packages

01:24:42,830 --> 01:24:46,220
and everything which I told here now,

01:24:46,220 --> 01:24:48,810
this does not only work for printing,

01:24:48,810 --> 01:24:50,510
it works for everything IPP

01:24:51,560 --> 01:24:56,190
especially also scanning and IPP system service.

01:24:56,190 --> 01:24:58,780
We have already talked about scanning

01:24:58,780 --> 01:25:00,590
and the problems with the drivers

01:25:00,590 --> 01:25:02,560
and as we can make a printer application,

01:25:02,560 --> 01:25:05,080
we can make a scanner application.

01:25:05,080 --> 01:25:07,080
It emulates an IPP scanner

01:25:08,750 --> 01:25:13,750
and but in the back where we connect to the scanner

01:25:14,950 --> 01:25:19,950
and we take the commands which we receive via IPP

01:25:21,780 --> 01:25:24,460
and pass them on to the scanner

01:25:24,460 --> 01:25:28,110
and also our scanner application knows

01:25:28,110 --> 01:25:30,700
about the capabilities of the scanner

01:25:30,700 --> 01:25:34,030
so it can answer the get printer attribute

01:25:34,030 --> 01:25:38,490
request or perhaps get scanner attributes requests.

01:25:38,490 --> 01:25:41,810
There are some requests in the IPP

01:25:41,810 --> 01:25:44,900
standard also for IPP driverless scanning

01:25:44,900 --> 01:25:48,900
to get the capabilities.

01:25:51,590 --> 01:25:54,170
And if we have multifunction device

01:25:54,170 --> 01:25:57,760
we can naturally make simply one application

01:25:57,760 --> 01:26:01,780
which emulates an IPP multifunction device

01:26:01,780 --> 01:26:04,170
with all its functions, with scanning,

01:26:04,170 --> 01:26:05,490
printing and whatever.

01:26:07,420 --> 01:26:11,556
Even we can emulate, we can also emulate

01:26:11,556 --> 01:26:15,670
web administration interface or if we

01:26:15,670 --> 01:26:18,620
get more sophisticated, there's an also

01:26:18,620 --> 01:26:21,100
an IPP replacement for the web

01:26:21,100 --> 01:26:24,270
administration interface, it's called

01:26:24,270 --> 01:26:26,470
IPP system service.

01:26:26,470 --> 01:26:29,200
So a communication protocol where

01:26:29,200 --> 01:26:34,057
you can request from the IPP device,

01:26:35,180 --> 01:26:39,870
it's interface for administration and configuration,

01:26:39,870 --> 01:26:42,550
you can display it in a graphic dialogue,

01:26:42,550 --> 01:26:44,930
let the user do all the settings

01:26:44,930 --> 01:26:47,560
and the changes which the user does

01:26:48,560 --> 01:26:52,110
send back to the device.

01:26:52,110 --> 01:26:54,020
You can even control from there

01:26:54,020 --> 01:26:57,550
if you want to do a firmware update

01:26:57,550 --> 01:27:00,190
so you do not need to fear any more

01:27:00,190 --> 01:27:03,560
I've only Linux, how do I do a firmware update?

01:27:03,560 --> 01:27:04,850
This is also possible.

01:27:05,750 --> 01:27:09,340
And the printer or scanner application

01:27:09,340 --> 01:27:13,170
to make it complete is also supposed

01:27:13,170 --> 01:27:16,990
to emulate the IPP system service sooner or later.

01:27:19,710 --> 01:27:22,970
So you can have as a printer manufacturer,

01:27:22,970 --> 01:27:27,770
any nice sophisticated driver which

01:27:27,770 --> 01:27:30,220
does a lot of things, it gives

01:27:30,220 --> 01:27:33,080
the user configuration interface,

01:27:33,080 --> 01:27:35,530
it allows scanning, it allows printing.

01:27:35,530 --> 01:27:38,510
You can abstract all these in IPP,

01:27:39,758 --> 01:27:43,100
you can do it in the printer application

01:27:43,100 --> 01:27:47,730
and so an IPP standard component

01:27:47,730 --> 01:27:52,730
and then the user gets this application

01:27:52,870 --> 01:27:56,710
for the snap stack with any Linux distribution.

01:27:57,560 --> 01:28:00,570
And so he can use the device to its

01:28:00,570 --> 01:28:05,070
full extent because we have IPP which is

01:28:05,070 --> 01:28:08,170
a protocol which has enough sophistication

01:28:08,170 --> 01:28:09,900
to do everything which you can do

01:28:09,900 --> 01:28:12,430
with your multifunction device.

01:28:12,430 --> 01:28:17,430
And you can also do it all with free software

01:28:19,580 --> 01:28:21,820
programming on your computer making

01:28:25,072 --> 01:28:26,410
a printer application

01:28:26,410 --> 01:28:30,900
and so a manufacturer can make a sophisticated

01:28:30,900 --> 01:28:35,340
driver for any multifunction device

01:28:36,420 --> 01:28:38,720
and provide it in a snap

01:28:38,720 --> 01:28:41,720
and the user can get it working in the snap.

01:28:51,310 --> 01:28:55,710
So any questions about this?

01:28:58,500 --> 01:29:01,490
Anything any suggestions?

01:29:01,490 --> 01:29:04,180
Any volunteers who want to work on it?

01:29:08,179 --> 01:29:10,353
- Okay question on that.

01:29:10,353 --> 01:29:11,750
- Yes.

01:29:11,750 --> 01:29:13,790
- So it's supposed to be a daemon yes?

01:29:13,790 --> 01:29:15,350
- Yes, yes it's a daemon

01:29:16,260 --> 01:29:20,180
and this daemon is supposed to start

01:29:20,180 --> 01:29:22,270
when you plug in the printer

01:29:22,270 --> 01:29:26,050
and supposed to stop when you remove the printer

01:29:26,050 --> 01:29:27,700
or if it's a network printer it's

01:29:27,700 --> 01:29:30,730
supposed to start if the printer is discovered

01:29:30,730 --> 01:29:35,340
by DNSSD and stopped if the printer goes away.

01:29:35,340 --> 01:29:37,830
- Oh I mean what if you have 1000

01:29:37,830 --> 01:29:39,520
printers on the network?

01:29:39,520 --> 01:29:42,540
I have 1200 at work.

01:29:42,540 --> 01:29:46,010
- It does the following, a printer application

01:29:46,010 --> 01:29:50,080
is not for generally every arbitrary printer.

01:29:50,080 --> 01:29:53,750
It's for certain model or certain group of models

01:29:53,750 --> 01:29:57,370
for example Lexmark will publish for example

01:29:57,370 --> 01:30:00,170
a printer application for a certain class

01:30:00,170 --> 01:30:02,510
of multifunction devices.

01:30:03,560 --> 01:30:08,560
And it depend, probably most in most cases

01:30:11,450 --> 01:30:14,986
you have as we have we are now in

01:30:14,986 --> 01:30:19,986
the age of driverless printing,

01:30:20,250 --> 01:30:21,950
many network printers will not need

01:30:21,950 --> 01:30:24,260
a printer application so mostly these

01:30:24,260 --> 01:30:27,850
are local printers or legacy network printers.

01:30:28,860 --> 01:30:33,130
So it's not such a big amount of printers

01:30:33,130 --> 01:30:34,700
and the printer application naturally

01:30:34,700 --> 01:30:39,700
it checks on the DNSSD record whether

01:30:40,160 --> 01:30:43,400
the printer is the model for which it is made for.

01:30:43,400 --> 01:30:48,090
So if you install the Lexmark printer

01:30:48,090 --> 01:30:51,210
application for the scope of Lexmark printers

01:30:51,210 --> 01:30:52,880
and there are somewhere in the network

01:30:52,880 --> 01:30:55,860
an Epson printer it already sees that

01:30:55,860 --> 01:31:00,370
it's an Epson printer and does not connect to it

01:31:00,370 --> 01:31:02,860
or there's another Lexmark printer

01:31:02,860 --> 01:31:05,730
which is of another group, it will also

01:31:05,730 --> 01:31:06,850
not connect with it.

01:31:06,850 --> 01:31:09,460
It will only connect if it's a printer

01:31:09,460 --> 01:31:11,310
for which it is made for.

01:31:11,310 --> 01:31:13,330
- Yes I mean I know it's like a

01:31:13,330 --> 01:31:15,490
wrapper around the printer driver yes?

01:31:15,490 --> 01:31:16,370
- Yes.

01:31:16,370 --> 01:31:18,210
- Non-standard not IPP printer driver.

01:31:18,210 --> 01:31:19,880
- Yes, yes.

01:31:19,880 --> 01:31:23,910
- But so it must be installed by user yes.

01:31:23,910 --> 01:31:24,743
- Yes yes.

01:31:24,743 --> 01:31:26,230
It must be installed by the user.

01:31:26,230 --> 01:31:27,750
When we have a printer which does

01:31:27,750 --> 01:31:31,040
not do IPP driverless printing,

01:31:31,040 --> 01:31:32,980
we cannot get around that the user

01:31:32,980 --> 01:31:34,910
has to install a piece of software

01:31:37,070 --> 01:31:38,710
or that the piece of software comes

01:31:38,710 --> 01:31:43,710
with the distribution but then, so we can,

01:31:43,790 --> 01:31:47,020
it is also possible that it can happen

01:31:47,020 --> 01:31:50,510
some more common printer applications

01:31:50,510 --> 01:31:53,370
from manufacturers if they are under

01:31:53,370 --> 01:31:57,470
the white license, could also be,

01:31:57,470 --> 01:32:01,130
could also be included in a Linux distribution

01:32:01,130 --> 01:32:06,130
like currently in classical form HPLIP for example

01:32:07,310 --> 01:32:09,640
is included in the Linux distributions

01:32:09,640 --> 01:32:12,230
because it's a common driver package

01:32:12,230 --> 01:32:15,710
which is licensed appropriately so that

01:32:15,710 --> 01:32:18,420
it can be included in Linux distributions.

01:32:19,420 --> 01:32:22,440
- I mean in general it's an idea how

01:32:22,440 --> 01:32:25,610
manufacturers can provide some drivers yes.

01:32:25,610 --> 01:32:28,170
- Yes, yes that's it.

01:32:28,170 --> 01:32:31,600
So if your manufacturer has a legacy printer

01:32:31,600 --> 01:32:35,200
and they have no possibility by

01:32:35,200 --> 01:32:38,230
a firmware update to make this printer

01:32:38,230 --> 01:32:42,510
working driverless for example even

01:32:42,510 --> 01:32:45,480
also these local only which connect

01:32:45,480 --> 01:32:50,480
only by USB there it is possible,

01:32:51,730 --> 01:32:54,830
but if even in USB you can use IPP

01:32:54,830 --> 01:32:58,100
driverless printing because we have IPP over USB

01:32:59,030 --> 01:33:02,990
but the printer needs to have the hardware

01:33:03,990 --> 01:33:08,470
resources to take a firmware which

01:33:08,470 --> 01:33:11,260
does IPP driverless printing.

01:33:11,260 --> 01:33:13,570
And if a printer does not have enough

01:33:13,570 --> 01:33:17,940
hardware support, resources for such

01:33:17,940 --> 01:33:21,070
a sophisticated firmware so that you can

01:33:21,070 --> 01:33:23,530
only run it with a driver because the

01:33:23,530 --> 01:33:28,530
hardware is too weak then the solution

01:33:29,970 --> 01:33:32,860
is the printer applications so on the computer

01:33:32,860 --> 01:33:34,770
that's running the printer application,

01:33:34,770 --> 01:33:39,130
the computer has usually more computational power

01:33:40,070 --> 01:33:45,070
and the manufacturer can provide it as a snap.

01:33:46,600 --> 01:33:49,060
And this snap can be downloaded into

01:33:49,060 --> 01:33:51,610
all Linux distributions.

01:33:51,610 --> 01:33:52,960
- Yeah I mean internally by some kind of.

01:33:52,960 --> 01:33:55,110
- And also the manufacturer has no problems

01:33:55,110 --> 01:33:59,030
with the license because as it is downloaded

01:33:59,030 --> 01:34:01,480
by a separate snap and not included

01:34:01,480 --> 01:34:03,920
in the Linux distribution, he does not

01:34:03,920 --> 01:34:06,660
need to fulfill the license requirements

01:34:06,660 --> 01:34:08,030
of the Linux distribution.

01:34:10,460 --> 01:34:11,293
- Okay.

01:34:11,293 --> 01:34:13,380
But is it specified somewhere?

01:34:13,380 --> 01:34:15,820
What kind of properties must have

01:34:15,820 --> 01:34:17,370
this kind of driver?

01:34:17,370 --> 01:34:19,660
- One thing is the manufacturer would

01:34:19,660 --> 01:34:22,110
need to inform the user somewhere

01:34:23,180 --> 01:34:24,510
that for this printer.

01:34:25,510 --> 01:34:26,970
- Yes he must install the package.

01:34:26,970 --> 01:34:29,480
- Printer applications is available

01:34:29,480 --> 01:34:32,306
and another thing is when printer applications

01:34:32,306 --> 01:34:36,190
are made available for the snap store

01:34:36,190 --> 01:34:39,950
you know that users of a phone when they

01:34:39,950 --> 01:34:43,830
for example want to do some for example,

01:34:43,830 --> 01:34:47,700
rent a scooter from Lyme, they take their phone

01:34:47,700 --> 01:34:52,700
and enter Lyme in the search bar of Android play store

01:34:54,830 --> 01:34:57,000
and find the Lyme application

01:34:57,000 --> 01:34:59,270
and so they download it

01:34:59,270 --> 01:35:01,330
and can rent the scooter

01:35:01,330 --> 01:35:04,240
and so if a user has a Lexmark printer

01:35:04,240 --> 01:35:09,240
which is not IPP driverless, then he would

01:35:12,160 --> 01:35:14,460
go into the snap store and enter Lexmark there

01:35:16,070 --> 01:35:21,070
and then he would hit the Lexmark printer applications.

01:35:23,410 --> 01:35:24,243
- Okay.

01:35:24,243 --> 01:35:26,120
But how do daemon would be started?

01:35:27,120 --> 01:35:27,953
- Oh yes.

01:35:27,953 --> 01:35:32,060
When he installs the application

01:35:33,120 --> 01:35:36,840
and then with the application installed,

01:35:38,187 --> 01:35:42,370
the daemon is automatically started

01:35:42,370 --> 01:35:46,130
but it is in a, it is only waiting for

01:35:46,130 --> 01:35:49,980
a signal that an appropriate printer is connected.

01:35:51,500 --> 01:35:52,920
- I mean.

01:35:52,920 --> 01:35:57,750
- For example that by Udev it gets the signal

01:35:57,750 --> 01:36:02,640
that a printer has connected to USB,

01:36:02,640 --> 01:36:04,710
it checks if this is the printer

01:36:04,710 --> 01:36:07,420
the application is made for

01:36:07,420 --> 01:36:09,240
and if so it connects to the printer

01:36:10,160 --> 01:36:13,080
and starts emulating an IPP printer

01:36:13,080 --> 01:36:14,540
representing this printer.

01:36:15,710 --> 01:36:19,090
- About network it must discover through MDNS.

01:36:19,090 --> 01:36:20,150
- Yes, yes.

01:36:20,150 --> 01:36:24,750
When it's a networked, when it's a network

01:36:26,090 --> 01:36:29,050
printer for which this printer application

01:36:29,050 --> 01:36:33,490
is made, it listens on DNSSD

01:36:37,220 --> 01:36:39,690
and sees oh that's a printer, you must know

01:36:39,690 --> 01:36:43,300
the DNSSD is not only for IPP, they are

01:36:43,300 --> 01:36:48,300
also printers which support only socket 9100

01:36:49,360 --> 01:36:53,280
or LPD or such old protocol

01:36:53,280 --> 01:36:57,690
and they are advertising themselves by DNSSD also.

01:37:00,180 --> 01:37:02,070
And another thing is if you want

01:37:02,070 --> 01:37:04,180
to make a printer application even

01:37:04,180 --> 01:37:06,620
for an older printer which you have

01:37:06,620 --> 01:37:10,500
really manually by enter, to connect manually

01:37:10,500 --> 01:37:14,390
by entering its IP address, there's also a solution.

01:37:14,390 --> 01:37:16,820
You can make a printer application

01:37:16,820 --> 01:37:21,820
which right away starts an emulation of an IPP device.

01:37:23,580 --> 01:37:28,270
But this IPP device, it only in the beginning

01:37:28,270 --> 01:37:31,320
it only does IPP system service.

01:37:31,320 --> 01:37:35,000
So only provides an interface for configuration

01:37:35,890 --> 01:37:38,830
and so you go into your printer setup tool

01:37:38,830 --> 01:37:42,020
which supports IPP system service

01:37:42,020 --> 01:37:45,810
and so it sees this device which is

01:37:45,810 --> 01:37:48,560
IPP system service only

01:37:48,560 --> 01:37:51,890
and they are at this place an interface

01:37:51,890 --> 01:37:56,890
and this interface has a field for the

01:37:57,130 --> 01:38:00,560
IP address and then you enter the IP address

01:38:01,860 --> 01:38:04,870
and as soon as you have entered the IP address

01:38:04,870 --> 01:38:08,490
of your printer, of the printer this printer

01:38:08,490 --> 01:38:12,660
application is made for, the application connects

01:38:14,120 --> 01:38:17,500
and the device it emulates, expands

01:38:17,500 --> 01:38:18,680
to be also a printer.

01:38:30,220 --> 01:38:34,830
- I mean you know, it's like a

01:38:34,830 --> 01:38:36,050
the IPP is quite large.

01:38:36,050 --> 01:38:36,883
- [Till] Yes yes.

01:38:36,883 --> 01:38:37,716
- Protocol so.

01:38:37,716 --> 01:38:39,997
- Very, very sophisticated protocol

01:38:39,997 --> 01:38:43,790
and the PWG has worked on it

01:38:43,790 --> 01:38:46,610
and developed it for 20 years now.

01:38:46,610 --> 01:38:49,230
- Yes but you know, you cannot enforce

01:38:49,230 --> 01:38:52,020
manufacturer to invest too much cost

01:38:52,020 --> 01:38:53,220
in building driverless.

01:38:54,426 --> 01:38:55,259
- Yes and if.

01:38:55,259 --> 01:38:58,512
- It must be simple enough let's then say to implement.

01:38:58,512 --> 01:39:00,070
- Yes.

01:39:00,070 --> 01:39:01,640
The thing for the new printers

01:39:02,665 --> 01:39:05,570
the way to go, the standard way to go

01:39:05,570 --> 01:39:08,850
is to make the printer IPP by itself.

01:39:10,750 --> 01:39:14,160
The printer application is only a way

01:39:14,160 --> 01:39:16,740
to get around with which printers

01:39:16,740 --> 01:39:19,170
with which need a driver, which are

01:39:19,170 --> 01:39:20,460
mainly legacy printers.

01:39:22,200 --> 01:39:25,110
But it can be that some manufacturers

01:39:25,110 --> 01:39:27,820
would for some specialty printers

01:39:27,820 --> 01:39:32,820
also go the way to work with the printer application.

01:39:35,780 --> 01:39:37,990
But the way to go the way which is

01:39:37,990 --> 01:39:42,180
recommended to the manufacturers for new printers

01:39:42,180 --> 01:39:47,180
is to make them IPP driverless by themselves.

01:39:49,870 --> 01:39:52,360
- So I had a quick question which was

01:39:52,360 --> 01:39:54,730
how does this work when you might have

01:39:54,730 --> 01:39:58,330
multiple drivers for a single printer

01:39:58,330 --> 01:40:00,680
as has happened in the past?

01:40:00,680 --> 01:40:04,410
- Yes one thing is if you have multiple drivers,

01:40:04,410 --> 01:40:07,370
there's probably one which is the most sophisticated.

01:40:08,340 --> 01:40:11,880
So the manufacturer when he provides

01:40:11,880 --> 01:40:14,520
a printer application, something which

01:40:14,520 --> 01:40:17,940
should emulate an IPP printer which should

01:40:17,940 --> 01:40:22,933
work as well as possible, he would select

01:40:23,820 --> 01:40:27,680
the most sophisticated protocol

01:40:27,680 --> 01:40:29,600
with which the printer can do the best

01:40:29,600 --> 01:40:34,600
and nicest things and base the printer application on that.

01:40:36,810 --> 01:40:38,880
- What about distributions where

01:40:38,880 --> 01:40:43,480
which at the moment ship a large number of legacy drivers

01:40:43,480 --> 01:40:46,200
and again essentially let the user try

01:40:46,200 --> 01:40:47,990
and pick between them, would they be

01:40:47,990 --> 01:40:50,720
expected to use this technique as well?

01:40:50,720 --> 01:40:51,553
- Yes.

01:40:51,553 --> 01:40:54,570
Distributions at least is in some,

01:40:54,570 --> 01:40:59,570
when in some yes, CUPS stops support

01:41:01,170 --> 01:41:03,900
for PPD files, are also supposed

01:41:03,900 --> 01:41:06,310
to use printer applications.

01:41:06,310 --> 01:41:08,910
For print applications as they are

01:41:08,910 --> 01:41:12,830
all in all simply a program running on the computer,

01:41:12,830 --> 01:41:17,590
you are not required to put them into a snap.

01:41:17,590 --> 01:41:20,130
You can also put them into a debian package

01:41:20,130 --> 01:41:22,360
for if you want for example, if you want

01:41:22,360 --> 01:41:26,130
to include a printer application in a distribution.

01:41:27,060 --> 01:41:28,790
And a printer application

01:41:30,370 --> 01:41:32,600
one thing we have already started

01:41:32,600 --> 01:41:35,640
in this year's Google Summer of Code

01:41:35,640 --> 01:41:38,710
to make a printer application SDK

01:41:38,710 --> 01:41:41,950
a printer application framework with which

01:41:41,950 --> 01:41:46,950
you can pick legacy drivers consisting of filters

01:41:48,550 --> 01:41:52,150
and PPDs into a printer application.

01:41:52,150 --> 01:41:55,050
With this you could easily for example,

01:41:55,050 --> 01:41:58,170
put splits of guten print quickly into

01:41:58,170 --> 01:42:01,280
a print application so a distribution packager

01:42:01,280 --> 01:42:03,640
could when he had a distort

01:42:05,044 --> 01:42:09,480
and this distort would use a CUPS version

01:42:09,480 --> 01:42:12,620
which does not support PPDs anymore,

01:42:12,620 --> 01:42:14,620
he could use this framework to package

01:42:14,620 --> 01:42:16,300
gutenprint for example.

01:42:18,950 --> 01:42:21,190
So we are prepared for that

01:42:21,190 --> 01:42:24,930
and we can even make, we can even make

01:42:24,930 --> 01:42:26,920
it with time more sophisticated

01:42:26,920 --> 01:42:30,160
for example if you would need manual work,

01:42:31,000 --> 01:42:33,420
if you could not automatically connect,

01:42:34,380 --> 01:42:37,250
make a printer application which automatically

01:42:37,250 --> 01:42:40,770
connects to a printer and selects a quick driver,

01:42:40,770 --> 01:42:43,921
you could always add a user interface

01:42:43,921 --> 01:42:48,921
to a printer application by means

01:42:48,960 --> 01:42:50,860
of IPP system service

01:42:51,720 --> 01:42:56,720
and this user interface this could also have some options

01:42:58,060 --> 01:43:01,320
to select drivers, to select printers

01:43:01,320 --> 01:43:04,360
and so I think with printer applications,

01:43:04,360 --> 01:43:08,260
you could solve all of the legacy problems.

01:43:09,360 --> 01:43:11,490
- In that sort of scenario are you expecting.

01:43:11,490 --> 01:43:16,459
- You can even put the backend part of

01:43:16,459 --> 01:43:19,490
system config printer which automatically

01:43:19,490 --> 01:43:21,990
selects drivers, you could even

01:43:21,990 --> 01:43:24,010
stuff into a printer application tool.

01:43:25,850 --> 01:43:27,750
- Okay I think that's the answer to the question.

01:43:32,100 --> 01:43:34,170
- Yeah, I have one, first maybe

01:43:35,667 --> 01:43:38,210
you should make the scope, I think in my,

01:43:38,210 --> 01:43:41,160
according to my experience, we should make

01:43:41,160 --> 01:43:43,560
the scope maybe more narrow OS

01:43:43,560 --> 01:43:46,490
if you add too many options, too many

01:43:46,490 --> 01:43:51,050
possibilities to this yeah printer applications,

01:43:51,050 --> 01:43:55,130
it would be just, the mess will be larger

01:43:55,130 --> 01:43:58,740
and larger yes, you can bombard users with more

01:43:58,740 --> 01:43:59,720
and more options yes.

01:43:59,720 --> 01:44:04,190
- Yes, yes, the intention is naturally

01:44:04,190 --> 01:44:06,110
to make the printer applications

01:44:06,110 --> 01:44:07,600
as automatic as possible.

01:44:08,480 --> 01:44:12,001
They automatically discover there're printers

01:44:12,001 --> 01:44:17,001
and say like the driver and then emulate the IPP printer.

01:44:22,720 --> 01:44:23,553
- Okay.

01:44:23,553 --> 01:44:25,530
So I mean the, as I understood the model

01:44:25,530 --> 01:44:28,780
is that we have like a CUPS yes

01:44:28,780 --> 01:44:31,370
and we installed some driverless,

01:44:31,370 --> 01:44:33,160
I mean this printer application

01:44:33,160 --> 01:44:37,186
and it will announce itself on the

01:44:37,186 --> 01:44:39,390
localhost interface?

01:44:39,390 --> 01:44:40,970
- Yes, yes.

01:44:40,970 --> 01:44:42,630
- On the local yes on.

01:44:42,630 --> 01:44:44,390
- On localhost for example CUPS

01:44:44,390 --> 01:44:47,210
has a localhost port 631

01:44:47,210 --> 01:44:49,160
and when you start the printer application

01:44:49,160 --> 01:44:54,030
then appears a localhost port 8000

01:44:54,030 --> 01:44:59,030
for example, it advertises itself by the NSSD

01:44:59,070 --> 01:45:02,869
so it's no problem that the port is not 631.

01:45:02,869 --> 01:45:05,650
- One problem I can see here that

01:45:05,650 --> 01:45:06,970
you have one printer

01:45:06,970 --> 01:45:11,450
and it's detected twice, one by the driver

01:45:11,450 --> 01:45:13,120
and one by the CUPS.

01:45:14,530 --> 01:45:19,340
- Yes one thing is you need in a distribution

01:45:19,340 --> 01:45:22,520
to the correct organization for example,

01:45:22,520 --> 01:45:25,650
not by the same driver both by a printer

01:45:25,650 --> 01:45:29,120
application in the classical way because

01:45:29,120 --> 01:45:31,780
then the printer could be discovered twice,

01:45:31,780 --> 01:45:33,030
once as a local printer

01:45:33,030 --> 01:45:34,570
and once as a network printer.

01:45:37,550 --> 01:45:40,290
- Yes but if you run CUPS so cups-browsed

01:45:40,290 --> 01:45:42,910
will discover the printer even if

01:45:42,910 --> 01:45:45,310
it cannot print to it.

01:45:45,310 --> 01:45:49,220
- CUPS itself discovers driverless

01:45:49,220 --> 01:45:53,040
network printers simply when it is running

01:45:53,040 --> 01:45:55,190
only driverless network printers.

01:45:55,190 --> 01:45:57,577
- Not one it discover every printers

01:45:57,577 --> 01:46:01,460
that announce it's MDNS yes but

01:46:01,460 --> 01:46:03,810
it can't print to them because they

01:46:03,810 --> 01:46:05,230
are not IPP everywhere.

01:46:05,230 --> 01:46:06,063
- Yes.

01:46:06,063 --> 01:46:10,920
But the IPP driverless printers,

01:46:10,920 --> 01:46:13,900
it makes immediately available automatically.

01:46:13,900 --> 01:46:14,733
- Yes.

01:46:14,733 --> 01:46:16,820
- But for the other network printers

01:46:16,820 --> 01:46:20,980
it can also discover by DNSSD you see them

01:46:20,980 --> 01:46:24,940
only if you go into the CUPS web interface

01:46:24,940 --> 01:46:26,650
and select add printer.

01:46:30,100 --> 01:46:30,933
- Okay.

01:46:30,933 --> 01:46:32,550
- It does not do it by itself.

01:46:32,550 --> 01:46:34,130
And when you see in the distribution

01:46:34,130 --> 01:46:37,890
the print queues were already created

01:46:37,890 --> 01:46:42,517
by themselves for years, this is because there is Udev

01:46:44,410 --> 01:46:47,020
and Udev called system conflict printer

01:46:47,020 --> 01:46:49,910
and system conflict printer sets up the queue for you.

01:46:53,930 --> 01:46:54,763
- Okay.

01:46:54,763 --> 01:46:55,596
Thank you.

01:46:59,410 --> 01:47:00,410
- Anything else?

01:47:06,480 --> 01:47:09,380
- Okay so you have two of the same printers yes

01:47:09,380 --> 01:47:11,220
connected to the internet, you have two

01:47:11,220 --> 01:47:13,050
daemons or one daemon?

01:47:16,080 --> 01:47:19,970
- When you have two very different printers.

01:47:19,970 --> 01:47:21,750
- [Patrick] The same printer.

01:47:21,750 --> 01:47:23,670
- Two printers of the same model,

01:47:24,520 --> 01:47:27,908
this you can handle by one printer application.

01:47:27,908 --> 01:47:32,770
It can for example, emulate two IPP printers

01:47:32,770 --> 01:47:34,740
on two different ports.

01:47:34,740 --> 01:47:35,573
- [Patrick] Okay.

01:47:38,200 --> 01:47:39,800
- So if you've got something like

01:47:39,800 --> 01:47:43,520
let's say a print server which you're

01:47:43,520 --> 01:47:46,290
using to perhaps serve up multiple

01:47:46,290 --> 01:47:48,800
legacy printers, would the print server

01:47:48,800 --> 01:47:52,640
itself then start having to use up a lot of

01:47:54,450 --> 01:47:56,810
enumeration for each one of that printer

01:47:56,810 --> 01:47:58,440
so for every printer you're gonna

01:47:58,440 --> 01:48:01,310
have like another, all the applications

01:48:01,310 --> 01:48:03,200
are gonna be serving up another port

01:48:03,200 --> 01:48:07,730
to itself so that it can see each one of these,

01:48:07,730 --> 01:48:10,400
should we say legacy network printers?

01:48:10,400 --> 01:48:14,290
- We have enough ports that's no problem

01:48:14,290 --> 01:48:18,120
and these printers only need to be visible

01:48:18,120 --> 01:48:21,020
to the local, to the server itself

01:48:21,020 --> 01:48:23,580
as the server itself is running CUPS

01:48:23,580 --> 01:48:25,950
and the sharing is done by CUPS.

01:48:25,950 --> 01:48:27,990
- But the application on the other end?

01:48:27,990 --> 01:48:29,990
- The printer application could on

01:48:29,990 --> 01:48:31,760
or also share by itself.

01:48:31,760 --> 01:48:35,540
You do not need to nail it to only

01:48:35,540 --> 01:48:38,010
only advertise to localhost

01:48:38,010 --> 01:48:39,870
and if you give the printer application

01:48:39,870 --> 01:48:42,210
an IPP system service interface,

01:48:42,210 --> 01:48:45,890
it could even comfortably configure

01:48:46,790 --> 01:48:48,530
a printer application to where

01:48:48,530 --> 01:48:50,650
it broadcasts it's printer.

01:48:52,150 --> 01:48:54,220
- Would the expectation be the printer

01:48:54,220 --> 01:48:57,010
applications themselves should be, I guess

01:49:00,350 --> 01:49:01,183
what's the word?

01:49:01,183 --> 01:49:02,870
A synchronous essentially?

01:49:02,870 --> 01:49:03,703
- [Till] What?

01:49:03,703 --> 01:49:06,000
- Should printer applications themselves be a synchronous?

01:49:08,740 --> 01:49:12,000
- What do you mean, they are simply running as a daemon.

01:49:13,600 --> 01:49:15,250
- Because if you've got one application

01:49:15,250 --> 01:49:17,690
which can serve up multiple ports because

01:49:17,690 --> 01:49:18,990
it's representing multiple printers.

01:49:18,990 --> 01:49:19,823
- Yes, yes.

01:49:19,823 --> 01:49:22,908
This is a synchronous, it would start prints

01:49:22,908 --> 01:49:26,290
and then there are running several threads

01:49:26,290 --> 01:49:30,400
one per printer or if it does a task for example,

01:49:30,400 --> 01:49:32,540
it prints a job it could start

01:49:32,540 --> 01:49:34,280
a thread for printing the job

01:49:34,280 --> 01:49:36,150
to the printer while the main thread

01:49:36,150 --> 01:49:38,760
is still is listening for more commands

01:49:38,760 --> 01:49:39,650
from the client.

01:49:41,460 --> 01:49:44,090
How you've programmed them internally,

01:49:44,090 --> 01:49:48,520
it's up to the developer of the printer application.

01:49:51,718 --> 01:49:54,070
The only thing we acquire from the

01:49:54,070 --> 01:49:57,950
printer application that it correctly supports IPP.

01:49:59,906 --> 01:50:03,400
- I mean my concern issues, my concern here

01:50:03,400 --> 01:50:05,490
is that we duplicate a lot of functionality

01:50:05,490 --> 01:50:08,630
for CUPS queries, why do you need CUPS

01:50:08,630 --> 01:50:11,520
if you have full IPP on the printer application?

01:50:12,660 --> 01:50:16,470
- Yes one thing is to avoid duplication

01:50:16,470 --> 01:50:18,570
of CUPS, we could for example use the

01:50:18,570 --> 01:50:21,670
CUPS library for the IPP implementation

01:50:21,670 --> 01:50:24,340
in the printer applications or the code,

01:50:24,340 --> 01:50:25,670
the same code is used.

01:50:27,450 --> 01:50:32,159
And so we do not rewrite all the implementation

01:50:32,159 --> 01:50:35,180
of IPP and so we have a library for it.

01:50:38,000 --> 01:50:39,550
- But you need HTTP server yes?

01:50:40,630 --> 01:50:41,463
- [Till] Yes, yes.

01:50:41,463 --> 01:50:43,780
- So it's like driver with HTTP server

01:50:43,780 --> 01:50:45,970
and several you know, support for

01:50:45,970 --> 01:50:50,290
several IPP function, it must be quite large

01:50:50,290 --> 01:50:54,260
yes I mean, you know that the cost of

01:50:54,260 --> 01:50:57,560
building such kinds of driver, it's not trivialized.

01:50:57,560 --> 01:50:59,110
- Yes and one thing is a driver

01:51:00,720 --> 01:51:04,320
has always to connect in a way two CUPS

01:51:05,230 --> 01:51:08,040
and we need some interface.

01:51:08,040 --> 01:51:10,440
And what we need is an interface

01:51:10,440 --> 01:51:13,990
which does not work by having a program

01:51:13,990 --> 01:51:17,510
located in a certain place in the file system

01:51:17,510 --> 01:51:20,750
when where another pogrom expects it

01:51:20,750 --> 01:51:25,130
because this defeats sent box packaging.

01:51:25,130 --> 01:51:28,560
We need communication between different

01:51:28,560 --> 01:51:33,160
programs which works either by network protocols,

01:51:33,160 --> 01:51:37,850
IP protocols like IPP or by things like divas.

01:51:40,370 --> 01:51:43,490
- Yes I mean all, I mean I think the,

01:51:43,490 --> 01:51:46,480
that direction is good internally yes you need

01:51:46,480 --> 01:51:50,150
something which provide, which behaves

01:51:50,150 --> 01:51:51,460
as a printer yes.

01:51:51,460 --> 01:51:52,293
- [Till] Yes.

01:51:52,293 --> 01:51:54,560
- But maybe like try to like

01:51:56,260 --> 01:51:59,310
define some minimal capabilities

01:51:59,310 --> 01:52:02,080
that the driver must have to be

01:52:02,080 --> 01:52:05,570
recognized by CUPS yes, as a printer

01:52:05,570 --> 01:52:07,270
and that you don't have to implement

01:52:07,270 --> 01:52:10,340
all this stuff which is required by full IPPS.

01:52:12,460 --> 01:52:13,293
- [Till] Yes.

01:52:14,900 --> 01:52:17,400
- So from a security perspective,

01:52:17,400 --> 01:52:19,570
won't having lots of these little daemons

01:52:19,570 --> 01:52:22,640
potentially be an issue on things

01:52:22,640 --> 01:52:25,210
which are like multi-user systems for example

01:52:25,210 --> 01:52:29,170
because now where does the security come from?

01:52:29,170 --> 01:52:30,690
Because you've got the, you've got,

01:52:30,690 --> 01:52:32,890
you could potentially just talk to

01:52:32,890 --> 01:52:35,250
the printer applications directly now

01:52:35,250 --> 01:52:38,010
you don't have to talk to the CUPS

01:52:38,010 --> 01:52:39,160
application at the top.

01:52:40,860 --> 01:52:45,830
- Yes one thing is IPP has security,

01:52:47,126 --> 01:52:51,890
several security facilities for example

01:52:51,890 --> 01:52:54,200
you can have encrypt at transfer,

01:52:54,200 --> 01:52:59,200
you can have also printing with a password

01:53:00,410 --> 01:53:05,410
so that for example the CUPS is sending

01:53:05,520 --> 01:53:08,951
the drops with a password so that

01:53:08,951 --> 01:53:13,670
only CUPS can send the drops to the printer,

01:53:13,670 --> 01:53:17,720
to the IPP printers or IPP print applications.

01:53:17,720 --> 01:53:21,250
IPP supports all these facilities for security.

01:53:24,580 --> 01:53:25,413
- Yeah.

01:53:25,413 --> 01:53:27,530
So you have the facility to you know,

01:53:27,530 --> 01:53:31,160
put in the pin while printing so IPP

01:53:31,160 --> 01:53:33,720
has those things like earlier it was

01:53:33,720 --> 01:53:36,360
handled through driver, where in your driver

01:53:36,360 --> 01:53:39,510
you can give the option for a confidential print

01:53:39,510 --> 01:53:42,590
so user puts in a pin, you go to your printer,

01:53:42,590 --> 01:53:45,280
in your panel you put in that pin

01:53:45,280 --> 01:53:47,070
and then you get your print job.

01:53:47,070 --> 01:53:50,300
So here now this with driverless printing,

01:53:50,300 --> 01:53:51,910
this will be handled by IPP.

01:53:51,910 --> 01:53:54,660
So IPP you know, pin attributes

01:53:54,660 --> 01:53:56,765
and all these things out there.

01:53:56,765 --> 01:53:58,500
- Would you say that that would be

01:53:58,500 --> 01:54:00,960
the default or because I'm thinking now

01:54:00,960 --> 01:54:03,610
like a general user just trying

01:54:03,610 --> 01:54:06,030
to get an out of the box experience

01:54:06,030 --> 01:54:08,090
would they be setting up or would it be

01:54:08,090 --> 01:54:11,000
automatically set up some sort of protection

01:54:11,000 --> 01:54:14,298
from the main CUPS server to the

01:54:14,298 --> 01:54:17,810
printer application essentially because

01:54:17,810 --> 01:54:20,910
to prevent like rogue programs on this.

01:54:20,910 --> 01:54:23,810
- Meaning that for example, that the user

01:54:23,810 --> 01:54:26,180
cannot directly print on the IPP

01:54:26,180 --> 01:54:29,200
printer application so only CUPS for example,

01:54:29,200 --> 01:54:31,010
to so our own accounting.

01:54:35,590 --> 01:54:37,470
- See a job accounting I mean,

01:54:37,470 --> 01:54:40,710
this confidential print is not a default option

01:54:40,710 --> 01:54:43,100
so you might not always want your you know,

01:54:43,100 --> 01:54:47,700
to go for a confidential print so that's a user choice.

01:54:47,700 --> 01:54:49,906
So if you want you can go for a confidential

01:54:49,906 --> 01:54:52,890
print else you just do a control P.

01:54:55,560 --> 01:54:57,140
- One thing is also if you have a

01:54:57,140 --> 01:55:00,356
printer application, it would be by default

01:55:00,356 --> 01:55:05,356
only broadcast itself, advertise itself on a localhost

01:55:11,980 --> 01:55:14,800
and not on the whole network.

01:55:14,800 --> 01:55:17,130
And if you have a print server,

01:55:17,130 --> 01:55:21,321
this print server, users cannot log in on it.

01:55:21,321 --> 01:55:26,321
They only see the CUPS on port 631

01:55:27,190 --> 01:55:29,000
of this print server

01:55:29,000 --> 01:55:32,430
and this CUPS is advertising it's queues,

01:55:33,293 --> 01:55:37,290
it's CUPS queues to the network.

01:55:37,290 --> 01:55:40,210
The printer application which are running on it

01:55:40,210 --> 01:55:42,820
are not visible on the outside so the

01:55:42,820 --> 01:55:44,930
user can print on the printers on

01:55:44,930 --> 01:55:48,240
the print server only through CUPS because

01:55:48,240 --> 01:55:50,170
only CUPS is visible from the outside.

01:55:56,537 --> 01:55:57,740
- I mean the other problem

01:55:57,740 --> 01:55:59,810
is with like security on the level

01:55:59,810 --> 01:56:01,730
of operating system is because

01:56:01,730 --> 01:56:04,280
these printer applications can be

01:56:04,280 --> 01:56:07,450
like third party software yes?

01:56:07,450 --> 01:56:08,283
- [Till] Yes, yes.

01:56:08,283 --> 01:56:09,950
- It can be crossed or propriety

01:56:09,950 --> 01:56:12,790
and now we would have to give it

01:56:12,790 --> 01:56:15,610
permission for network stack

01:56:15,610 --> 01:56:19,680
- Manufacturers are supposed to deliver

01:56:19,680 --> 01:56:22,290
the printer application with a default

01:56:22,290 --> 01:56:27,190
configuration which lets them only broadcast on localhost.

01:56:28,060 --> 01:56:30,520
And only if the user wants the printer

01:56:30,520 --> 01:56:35,020
application directly share a printer,

01:56:35,020 --> 01:56:39,920
then he can modify the configuration

01:56:39,920 --> 01:56:44,220
of the printer application to a broadcasting

01:56:44,220 --> 01:56:45,770
to a wider part of the network.

01:56:48,590 --> 01:56:49,423
- Okay.

01:56:49,423 --> 01:56:50,517
Can you somehow like.

01:56:50,517 --> 01:56:53,430
- Like you can configure a physical IPP

01:56:53,430 --> 01:56:56,680
printer where you can get into the web interface

01:56:56,680 --> 01:56:58,540
and in the web interface say

01:56:59,410 --> 01:57:02,100
it should broadcast, it should be available

01:57:02,100 --> 01:57:04,670
on the whole local network or it should

01:57:04,670 --> 01:57:09,670
be available only on these list of IPS and so on.

01:57:09,690 --> 01:57:10,523
- Okay.

01:57:10,523 --> 01:57:11,870
Can we make sure that it wont talk

01:57:11,870 --> 01:57:13,780
to anything else that the printer.

01:57:15,456 --> 01:57:20,155
- Yeah you mean the application on it's printer

01:57:20,155 --> 01:57:25,155
and that someone could put out, publish

01:57:28,720 --> 01:57:30,330
a malicious print.

01:57:30,330 --> 01:57:32,120
- [Patrick] Images, some kind of terrorism.

01:57:32,120 --> 01:57:34,350
- This is the super printer driver

01:57:34,350 --> 01:57:39,350
for your good old Lexmark 5000 inkjet printer

01:57:40,784 --> 01:57:45,590
and in reality it is not a such a thing

01:57:45,590 --> 01:57:49,266
but a thing which is, which is spying

01:57:49,266 --> 01:57:52,660
the network or something like that.

01:57:52,660 --> 01:57:55,070
Doing some tasks which is completely

01:57:55,070 --> 01:57:59,537
independent of the task it's advertised for being for.

01:58:00,768 --> 01:58:03,590
This all does not only happen with

01:58:03,590 --> 01:58:05,810
print applications it can happen

01:58:05,810 --> 01:58:07,560
with any kind of software.

01:58:08,470 --> 01:58:10,767
There were already published on the

01:58:10,767 --> 01:58:15,767
Google play stores applications, mainly games

01:58:15,950 --> 01:58:18,780
which do completely different things in the background.

01:58:20,450 --> 01:58:22,952
- [Aveek] By the way Lexmark is no more into inkjet.

01:58:22,952 --> 01:58:23,887
(Laughs)

01:58:23,887 --> 01:58:24,720
- What?

01:58:24,720 --> 01:58:27,070
- [Aveek] Lexmark is no more into ink jet.

01:58:27,070 --> 01:58:30,420
- Yes I know, I simply gave a very,

01:58:30,420 --> 01:58:32,880
very old printer (chuckles) as an example.

01:58:34,020 --> 01:58:35,940
It was a point half the time when

01:58:35,940 --> 01:58:40,470
I started with open printing back in 2000.

01:58:42,960 --> 01:58:45,290
So I think now you would not even

01:58:45,290 --> 01:58:48,640
get ink any more on Ebay for that printer.

01:58:48,640 --> 01:58:49,540
- [Aveek] That's true.

01:58:53,670 --> 01:58:54,503
- Anything else?

01:58:57,360 --> 01:58:59,535
- So do we have some prototype?

01:58:59,535 --> 01:59:00,614
(chuckles)

01:59:00,614 --> 01:59:01,447
Or it's.

01:59:01,447 --> 01:59:02,900
- Of printer applications?

01:59:02,900 --> 01:59:05,360
Yes we have on open printing

01:59:06,360 --> 01:59:10,610
one of this year's Google Summer of Code

01:59:10,610 --> 01:59:14,420
students has made the frame work

01:59:14,420 --> 01:59:18,150
for converting legacy printer drivers

01:59:18,150 --> 01:59:19,760
into a printer application.

01:59:20,661 --> 01:59:22,218
- [Male Voice] Oh yeah.

01:59:22,218 --> 01:59:24,480
- And there are also an example inside

01:59:24,480 --> 01:59:28,060
for HP LIP but only for printing with HP LIP,

01:59:28,060 --> 01:59:28,910
not for scanning.

01:59:29,990 --> 01:59:33,390
- I think the student is there in the call

01:59:33,390 --> 01:59:35,890
and I mean he has called in, I don't know if he's,

01:59:36,990 --> 01:59:39,140
it's a Deeraj so he's already there,

01:59:39,140 --> 01:59:42,510
he's listening to all our discussions.

01:59:42,510 --> 01:59:44,780
So very soon we will probably be

01:59:44,780 --> 01:59:47,640
organizing a demo on this stuff,

01:59:47,640 --> 01:59:51,580
what he has worked on in printer applications

01:59:51,580 --> 01:59:54,540
so maybe I can invite you guys who all

01:59:54,540 --> 01:59:56,900
will be interested so you get a better clarity

01:59:56,900 --> 01:59:59,210
and understanding of how the printer

01:59:59,210 --> 02:00:01,982
application works or regarding the prototype

02:00:01,982 --> 02:00:06,982
how it is.

02:00:07,880 --> 02:00:09,630
So Deeraj, are you listening to us?

02:00:11,510 --> 02:00:12,343
- Deeraj?

02:00:13,980 --> 02:00:15,490
Are you there?

02:00:15,490 --> 02:00:16,323
- Let me check.

02:00:18,670 --> 02:00:20,260
- Ah it's this laptop.

02:00:20,260 --> 02:00:21,093
- [Deeraj] Hi.

02:00:21,093 --> 02:00:22,082
- Hi.

02:00:22,082 --> 02:00:22,915
- Hi.

02:00:22,915 --> 02:00:25,667
So yeah, I will just try to put you on mic.

02:00:25,667 --> 02:00:30,667
- Yes we'll give you a mic so that.

02:00:32,169 --> 02:00:34,730
There's a cable, you have to put this

02:00:34,730 --> 02:00:38,360
to the headphone jack of the, yes laptop

02:00:38,360 --> 02:00:41,420
still have headphone jacks, not like phones.

02:00:42,880 --> 02:00:44,450
- Microphone.

02:00:44,450 --> 02:00:46,070
- No, no headphones.

02:00:47,210 --> 02:00:48,043
Yes.

02:00:48,043 --> 02:00:51,050
- Okay Deeraj can you try to speak something?

02:00:52,420 --> 02:00:53,800
- Deeraj?

02:00:53,800 --> 02:00:54,633
Are you there?

02:00:56,180 --> 02:00:57,600
- [Deeraj] Yes I can.

02:00:57,600 --> 02:00:58,900
- You are live on air now.

02:01:01,506 --> 02:01:03,690
- [Deeraj] Okay so.

02:01:03,690 --> 02:01:05,600
- Yeah Deeraj, so we have an audience

02:01:05,600 --> 02:01:07,850
over here if you can briefly explain them

02:01:07,850 --> 02:01:10,370
what you have done in the printer

02:01:10,370 --> 02:01:11,840
applications prototype.

02:01:14,560 --> 02:01:17,000
- [Deeraj] So what I'm doing is,

02:01:17,000 --> 02:01:20,330
so in the framework we, I have made

02:01:20,330 --> 02:01:22,420
a framework which particularly checks,

02:01:23,510 --> 02:01:27,070
it is particularly developed for the snap package.

02:01:27,070 --> 02:01:29,690
So when you are installing a printer

02:01:29,690 --> 02:01:32,090
driver package, you can just install,

02:01:32,090 --> 02:01:34,400
it's simply like installing it in some

02:01:35,260 --> 02:01:39,070
custom directory so it just picks up the PPD

02:01:39,070 --> 02:01:42,396
and the driver files from those custom directories

02:01:42,396 --> 02:01:46,800
and the daemon basically checks,

02:01:47,730 --> 02:01:49,990
highlights our base which detects the printers

02:01:49,990 --> 02:01:53,094
on a various interfaces or CUPS backends

02:01:53,094 --> 02:01:55,710
like the USD backend.

02:01:55,710 --> 02:01:58,520
And if you have a particular driver

02:01:58,520 --> 02:02:01,170
package like HP LIPS, so it also have

02:02:01,170 --> 02:02:04,730
its own backends, HP and HP packs

02:02:04,730 --> 02:02:07,290
so it takes all the printers which it

02:02:07,290 --> 02:02:08,890
supports through their backends,

02:02:09,950 --> 02:02:13,780
so it takes all the printers which it is supporting

02:02:13,780 --> 02:02:17,010
and tries to find PPD files for those printers

02:02:17,960 --> 02:02:21,360
and those PPD files are detected using,

02:02:22,610 --> 02:02:24,050
which we have installed in the custom

02:02:24,050 --> 02:02:27,690
directories which as I said earlier,

02:02:27,690 --> 02:02:29,190
if you are installing the printer driver

02:02:29,190 --> 02:02:31,070
in a particular custom directory,

02:02:32,270 --> 02:02:35,620
so it picks up the PPD files using

02:02:37,820 --> 02:02:40,000
from those custom directories

02:02:40,000 --> 02:02:42,054
and attaches them with the IPP printer

02:02:42,054 --> 02:02:44,510
utility of CUPS package.

02:02:44,510 --> 02:02:48,970
So using those PPD files we can,

02:02:48,970 --> 02:02:51,510
we can provide the IPP printer utility

02:02:51,510 --> 02:02:53,410
the device URI of the printer

02:02:53,410 --> 02:02:56,210
and the PPD file and the IPP printer

02:02:56,210 --> 02:02:59,230
utility takes care of everything.

02:02:59,230 --> 02:03:01,870
I mean the, advertising it on the localhost

02:03:01,870 --> 02:03:04,230
and setting up the print queue

02:03:04,230 --> 02:03:06,810
and the printing itself.

02:03:06,810 --> 02:03:10,062
And we just have to add one more command,

02:03:10,062 --> 02:03:13,780
the IPP printer requires a particular command

02:03:13,780 --> 02:03:17,960
through which it prints, it involves

02:03:17,960 --> 02:03:20,370
the printing commands so in that command,

02:03:20,370 --> 02:03:24,482
we used, we detect which all filters we need

02:03:24,482 --> 02:03:29,170
to apply on the given file for a given job

02:03:29,170 --> 02:03:30,750
and then send it to the backend.

02:03:30,750 --> 02:03:33,800
So that is taken care by the IPP printer

02:03:33,800 --> 02:03:36,530
we just have to write a custom command

02:03:36,530 --> 02:03:38,850
and if we have the, if a particular

02:03:38,850 --> 02:03:41,750
printer driver already have filters, a filter

02:03:41,750 --> 02:03:45,520
and the backend for a particular printer,

02:03:45,520 --> 02:03:48,050
we don't have to worry about the framework

02:03:48,050 --> 02:03:49,700
already takes care of everything.

02:03:53,790 --> 02:03:54,790
- Okay.

02:03:54,790 --> 02:03:58,590
Thanks Deeraj so anyone, any questions to Deeraj?

02:03:58,590 --> 02:03:59,590
You have a question?

02:04:01,340 --> 02:04:02,670
- So I had a last general question

02:04:02,670 --> 02:04:06,000
which was will things like windows network print

02:04:06,000 --> 02:04:08,750
or printing to windows network printers

02:04:08,750 --> 02:04:11,090
work through a printer application as well?

02:04:12,630 --> 02:04:14,760
As in would there be an application

02:04:14,760 --> 02:04:16,090
for doing windows printing?

02:04:16,090 --> 02:04:17,680
- It would be an idea to make

02:04:17,680 --> 02:04:19,550
a printer application for that,

02:04:19,550 --> 02:04:20,780
we don't have one yet.

02:04:22,980 --> 02:04:25,980
- Right so printing in windows,

02:04:25,980 --> 02:04:28,910
it's a different way altogether

02:04:28,910 --> 02:04:32,040
and here it's different so it's

02:04:32,040 --> 02:04:35,840
a different technology and process.

02:04:35,840 --> 02:04:36,673
- Yes, yes.

02:04:36,673 --> 02:04:38,070
You wouldn't have to make a printer

02:04:38,070 --> 02:04:40,410
application which is the client for

02:04:41,290 --> 02:04:43,590
windows network printing

02:04:43,590 --> 02:04:48,140
and which discovers the windows network printers available

02:04:48,140 --> 02:04:52,460
and then converts to an emulated IPP printer.

02:04:52,460 --> 02:04:56,102
It is, it will be possible to make this

02:04:56,102 --> 02:05:00,000
one simply would need someone who makes it.

02:05:01,990 --> 02:05:02,823
- Okay.

02:05:02,823 --> 02:05:03,656
So any questions?

02:05:03,656 --> 02:05:04,580
Any other questions?

02:05:04,580 --> 02:05:08,440
No so Till, I think we need to move to the next slide.

02:05:12,980 --> 02:05:14,210
By the way, thanks Deeraj.

02:05:14,210 --> 02:05:15,570
- Yes.

02:05:15,570 --> 02:05:19,170
We are going now to the printer setup tools.

02:05:20,180 --> 02:05:21,160
Thank you Deeraj.

02:05:23,120 --> 02:05:23,953
- [Deeraj] Okay bye.

02:05:23,953 --> 02:05:27,080
- Yes, yes you can stay, you can stay in the line.

02:05:27,080 --> 02:05:29,950
We are talking about printer setup tools

02:05:29,950 --> 02:05:33,612
and there we will also see some further ideas

02:05:33,612 --> 02:05:37,560
which we would have to implement in

02:05:37,560 --> 02:05:39,600
printer applications in the future.

02:05:42,540 --> 02:05:43,373
- [Deera] Okay.

02:05:45,240 --> 02:05:48,870
- So currently printer setup tools,

02:05:50,530 --> 02:05:55,280
they are doing the following.

02:05:55,280 --> 02:05:57,200
When you open the printer set up tool,

02:05:57,200 --> 02:05:59,570
you see the queues which exist.

02:06:02,240 --> 02:06:05,680
And you can right click them or click

02:06:05,680 --> 02:06:07,760
on an option spartan

02:06:07,760 --> 02:06:11,300
and then set the default settings

02:06:11,300 --> 02:06:14,770
for each of the queues like duplex

02:06:14,770 --> 02:06:17,120
and paper size and so on.

02:06:17,120 --> 02:06:19,390
And you can also select the queue

02:06:19,390 --> 02:06:21,290
which would be of a default printer

02:06:23,020 --> 02:06:25,570
and most important there's a button,

02:06:25,570 --> 02:06:29,660
add a new printer and when you click it,

02:06:30,630 --> 02:06:35,490
it will at first look for what printers are available.

02:06:35,490 --> 02:06:37,970
It will discover network printers,

02:06:37,970 --> 02:06:42,970
it will discover USB printers and so on.

02:06:43,320 --> 02:06:45,329
It does it usually by calling all

02:06:45,329 --> 02:06:49,200
the backends of CUPS in discovery mode

02:06:49,200 --> 02:06:52,528
and each backend discovers the printer

02:06:52,528 --> 02:06:55,060
for which it is made for.

02:06:55,060 --> 02:06:59,690
And then it goes through for some

02:06:59,690 --> 02:07:04,620
nice algorithms of system conflict printer

02:07:04,620 --> 02:07:06,940
to find out which of the discovered

02:07:06,940 --> 02:07:09,800
printers appears physically the same

02:07:09,800 --> 02:07:11,260
and then it lists them.

02:07:13,540 --> 02:07:17,140
So there's already one sophisticated

02:07:17,140 --> 02:07:21,090
complex step which we need for making

02:07:21,090 --> 02:07:23,340
the classic form of printing without

02:07:23,340 --> 02:07:25,820
IPP driverless printing user friendly

02:07:27,050 --> 02:07:32,050
and so we have the list now then

02:07:32,480 --> 02:07:34,950
the user selects which is my printer

02:07:34,950 --> 02:07:37,010
or this is this one.

02:07:37,010 --> 02:07:39,310
Sometimes he gets to the problem

02:07:39,310 --> 02:07:41,680
where algorithm does not note it well

02:07:41,680 --> 02:07:44,120
and hence his printer appears twice

02:07:44,120 --> 02:07:47,050
and then he has to think which one is the right one

02:07:47,050 --> 02:07:50,270
and next step he clicks on the printer

02:07:50,270 --> 02:07:55,270
then system config printer is using some the make

02:07:56,030 --> 02:07:57,950
and model information of the printer

02:07:57,950 --> 02:07:59,840
which the printer has already provide

02:07:59,840 --> 02:08:03,690
for years to auto select driver

02:08:03,690 --> 02:08:08,690
also with some sophisticated complex algorithms often

02:08:08,721 --> 02:08:13,390
and it connects the driver and creates the queue

02:08:13,390 --> 02:08:15,730
when you are lucky, when you are not lucky

02:08:15,730 --> 02:08:18,343
when the algorithms do not find the driver

02:08:18,343 --> 02:08:21,600
or when the printer does not provide it's make

02:08:21,600 --> 02:08:23,480
and model info then you go through

02:08:23,480 --> 02:08:25,470
dialogs for make, model

02:08:25,470 --> 02:08:28,410
and then for different drivers and so on

02:08:30,210 --> 02:08:31,620
and you have to select

02:08:31,620 --> 02:08:36,620
and then you get the chance to print a test page

02:08:36,960 --> 02:08:38,790
and if you are lucky the test page

02:08:38,790 --> 02:08:41,820
comes out as you wish it and then you say okay

02:08:41,820 --> 02:08:43,610
and you have a print queue.

02:08:45,060 --> 02:08:49,870
A task which is a little bit awkward

02:08:49,870 --> 02:08:51,230
depending on the printer

02:08:53,330 --> 02:08:56,870
and also the sophisticated algorithms

02:08:56,870 --> 02:08:59,610
of system config printer also

02:08:59,610 --> 02:09:02,310
triggered it automatically by UDEV

02:09:02,310 --> 02:09:05,430
in modern distort of it when you plug

02:09:05,430 --> 02:09:09,380
in a printer a queue is set up automatically

02:09:09,380 --> 02:09:11,470
when the printer supported well

02:09:11,470 --> 02:09:14,658
and the device is installed distorts

02:09:14,658 --> 02:09:18,730
chip a lot of drivers, waste a lot of space with it

02:09:18,730 --> 02:09:22,410
and then you have a print queue.

02:09:23,560 --> 02:09:28,180
Looks nice but it's not IPP driverless printing

02:09:28,180 --> 02:09:32,650
and it's a lot of work from the developers

02:09:32,650 --> 02:09:35,820
behind this so that it actually works

02:09:36,680 --> 02:09:41,480
and this is as we know printer setup tools.

02:09:42,920 --> 02:09:46,600
And now with IPP driverless printing

02:09:47,610 --> 02:09:51,380
that will be a lot of, has to be a lot

02:09:51,380 --> 02:09:53,910
of change in printer setup tools.

02:09:53,910 --> 02:09:56,150
We will probably keep this main window

02:09:56,150 --> 02:09:58,720
which lists the available printers

02:09:58,720 --> 02:10:00,250
and where you can define one,

02:10:00,250 --> 02:10:03,260
which would be the default printer

02:10:03,260 --> 02:10:06,920
and where you can also define

02:10:06,920 --> 02:10:09,341
the preferences of option settings

02:10:09,341 --> 02:10:12,560
which you want to use.

02:10:12,560 --> 02:10:17,560
But one thing is at a new printer

02:10:17,600 --> 02:10:20,130
in most cases you don't need it.

02:10:20,130 --> 02:10:22,800
In most cases the printers come out

02:10:22,800 --> 02:10:27,160
automatically due to IPP driverless printing

02:10:28,560 --> 02:10:32,050
or if the printer needs a driver,

02:10:32,050 --> 02:10:36,520
when you have a printer application snap installed

02:10:36,520 --> 02:10:39,180
and then the printer appears automatically

02:10:39,180 --> 02:10:42,780
like an IPP network printer depends

02:10:42,780 --> 02:10:44,600
what we need here for the printer

02:10:44,600 --> 02:10:46,040
which needs a driver.

02:10:46,040 --> 02:10:49,100
We would need something which

02:10:49,100 --> 02:10:50,870
and not only for printers, for hardware

02:10:50,870 --> 02:10:53,170
in general the snap store would need

02:10:53,170 --> 02:10:57,880
something where snaps could be,

02:10:57,880 --> 02:11:00,160
would be associated with hardware

02:11:01,200 --> 02:11:06,118
to to allow for things, we should

02:11:06,118 --> 02:11:10,690
make future request to snap which would

02:11:10,690 --> 02:11:13,150
allow that if a certain hardware

02:11:13,150 --> 02:11:15,170
is detected the installation of a

02:11:15,170 --> 02:11:17,260
certain snap is triggered.

02:11:17,260 --> 02:11:21,790
This would be also a nice thing, this we need

02:11:21,790 --> 02:11:23,630
to work out with snap.

02:11:24,590 --> 02:11:29,590
And so the printer setup tool

02:11:30,990 --> 02:11:35,410
does not really actually for modern printers

02:11:35,410 --> 02:11:37,860
and for printer applications not need

02:11:37,860 --> 02:11:39,530
this add printer wizard.

02:11:40,520 --> 02:11:43,820
But one thing which printer set up tools

02:11:43,820 --> 02:11:48,520
do not have note also that on certain system

02:11:48,520 --> 02:11:52,150
like Apple iPhone, there is not even

02:11:52,150 --> 02:11:53,450
a printer setup tool.

02:11:55,820 --> 02:12:00,240
And what a printer setup tool

02:12:00,240 --> 02:12:03,260
does not have but which we probably need

02:12:03,260 --> 02:12:07,260
in the future is support for IPP system service.

02:12:08,150 --> 02:12:10,500
I have already talked sometimes here now

02:12:10,500 --> 02:12:12,580
about IPP system service.

02:12:13,910 --> 02:12:18,440
It's the next important IPP service

02:12:18,440 --> 02:12:20,810
after printing and scanning.

02:12:20,810 --> 02:12:25,470
It's a way to connect, to configure a printer for IPP.

02:12:26,890 --> 02:12:30,150
It does all the nice IPP way.

02:12:31,020 --> 02:12:33,300
If you want to get configuration

02:12:33,300 --> 02:12:36,650
interface for a printer, UI for configuring

02:12:37,762 --> 02:12:41,390
a printer formally they had solved it

02:12:41,390 --> 02:12:43,520
by using a web browser in the printers

02:12:43,520 --> 02:12:46,770
web interface but what you needed here,

02:12:46,770 --> 02:12:48,760
you needed a web browser

02:12:48,760 --> 02:12:52,040
and you've got a user interface from

02:12:52,040 --> 02:12:54,010
the printer manufacturer completely

02:12:54,010 --> 02:12:56,560
different from manufacturer to manufacturer

02:12:57,550 --> 02:13:00,560
and perhaps it could even have incompatibilities

02:13:00,560 --> 02:13:01,510
with some browsers.

02:13:03,070 --> 02:13:07,020
And also a browser is not the perfect

02:13:07,020 --> 02:13:11,190
user interface as you can, you have

02:13:11,190 --> 02:13:14,244
several operations which would a little bit

02:13:14,244 --> 02:13:16,900
interfere with a good user interface

02:13:16,900 --> 02:13:19,980
for example, if you are in a wizard

02:13:19,980 --> 02:13:24,740
of a web admin interface of a printer

02:13:24,740 --> 02:13:26,970
for setting something up inside the printer

02:13:28,210 --> 02:13:30,430
and then you meet in the middle

02:13:30,430 --> 02:13:33,810
of the way you press the back button

02:13:33,810 --> 02:13:36,630
of the browser, it could somehow,

02:13:38,260 --> 02:13:43,260
somehow bring this sequence out of tweak

02:13:43,500 --> 02:13:47,770
and so some entered configuration data can get lost.

02:13:48,950 --> 02:13:53,742
So IPP system service is a way to

02:13:53,742 --> 02:13:58,227
standardized way to get to configure printers via IPP.

02:13:59,549 --> 02:14:04,549
So our printer setup tool would get

02:14:05,570 --> 02:14:08,410
for each of the existing queues,

02:14:09,390 --> 02:14:13,460
the option configure printer.

02:14:14,870 --> 02:14:18,050
If you click on that, it would open

02:14:18,050 --> 02:14:21,750
a printer configuration interface

02:14:21,750 --> 02:14:24,940
and in IPP system service this means

02:14:24,940 --> 02:14:28,570
the client will see printer setup tool

02:14:28,570 --> 02:14:31,331
is pooling by IPP, the configuration

02:14:31,331 --> 02:14:33,940
interface of the printer

02:14:35,070 --> 02:14:38,890
and the printer answers it back all

02:14:38,890 --> 02:14:41,910
the information of its configuration interface.

02:14:42,770 --> 02:14:47,770
Then the client is drawing the UI

02:14:50,220 --> 02:14:52,890
for this configuration interface

02:14:52,890 --> 02:14:54,580
and the user can play with it,

02:14:54,580 --> 02:14:58,247
he can configure the printer.

02:14:58,247 --> 02:15:01,830
And the printer setup tool is sending

02:15:01,830 --> 02:15:04,390
commands back to the printer for

02:15:04,390 --> 02:15:07,480
every configuration operation the user has done

02:15:08,450 --> 02:15:10,810
and so the printer gets configured.

02:15:10,810 --> 02:15:12,370
And the interface has the look

02:15:12,370 --> 02:15:15,700
and feel of the users printer setup tool

02:15:15,700 --> 02:15:20,360
of the users graphic interface for example

02:15:20,360 --> 02:15:23,960
of the users gnome theme

02:15:23,960 --> 02:15:28,960
and so the user can nicely configure the printer.

02:15:30,250 --> 02:15:34,240
There are standards for configuration elements

02:15:34,240 --> 02:15:38,720
and so if the user, so if the user has printers

02:15:38,720 --> 02:15:41,890
from different manufacturers, the interfaces

02:15:41,890 --> 02:15:43,480
to also not get too different

02:15:45,250 --> 02:15:47,360
and this way the printer can,

02:15:47,360 --> 02:15:49,530
the user can easily configure his printer

02:15:49,530 --> 02:15:53,160
tell which clients should be allowed

02:15:53,160 --> 02:15:57,590
to access the printer, which paper is in which tray

02:15:57,590 --> 02:15:59,530
and he can even download

02:15:59,530 --> 02:16:01,600
and install firmware for the printer.

02:16:03,560 --> 02:16:05,900
And this way the problem of firmware

02:16:05,900 --> 02:16:07,940
update gets standardized

02:16:07,940 --> 02:16:11,010
and does not require a proprietary

02:16:11,010 --> 02:16:13,160
Windows applications anymore,

02:16:14,391 --> 02:16:15,980
which means under Linux we are finally

02:16:15,980 --> 02:16:18,347
able to update the firmware of a printer

02:16:18,347 --> 02:16:21,070
which does not update the firmware

02:16:21,070 --> 02:16:22,720
completely by itself.

02:16:22,720 --> 02:16:25,370
I have a printer which updates it's firmware

02:16:25,370 --> 02:16:27,140
completely by itself, you do not need

02:16:27,140 --> 02:16:28,450
to do anything for that.

02:16:29,410 --> 02:16:33,090
Sometime suddenly it has a new firmware or sometimes

02:16:33,090 --> 02:16:35,410
suddenly I saw that the printer rebooted

02:16:35,410 --> 02:16:37,920
without me doing anything

02:16:37,920 --> 02:16:39,930
and what happened is that the printer

02:16:39,930 --> 02:16:41,360
has updated it's firmware.

02:16:47,130 --> 02:16:50,330
So this is one important part

02:16:50,330 --> 02:16:53,520
which the printer setup tool of the future

02:16:53,520 --> 02:16:56,380
needs where we need naturally someone

02:16:56,380 --> 02:16:57,520
who implements it.

02:17:06,840 --> 02:17:09,630
Yes I'm always forgetting to advance this year

02:17:11,690 --> 02:17:16,008
because I'm used to have it all visible at once

02:17:16,008 --> 02:17:20,030
and Aveek has very close, very shortly

02:17:20,030 --> 02:17:24,800
before our meeting, he has modified

02:17:24,800 --> 02:17:29,270
all of the slides that each line appears

02:17:29,270 --> 02:17:31,870
only when you press the next.

02:17:31,870 --> 02:17:34,060
- Yeah I added some animations.

02:17:34,060 --> 02:17:34,893
- Yes, yes.

02:17:36,157 --> 02:17:39,680
(audience laughs)

02:17:39,680 --> 02:17:40,513
Yes.

02:17:41,520 --> 02:17:45,880
Anything, any questions?

02:17:57,380 --> 02:18:00,810
Anyone is here who is, who is developer

02:18:00,810 --> 02:18:02,770
of something in the snap work flow?

02:18:11,680 --> 02:18:16,680
Anyone is, has some idea on what

02:18:17,060 --> 02:18:18,580
he's doing with printers

02:18:18,580 --> 02:18:20,760
and what is missing in printer setup tools

02:18:21,952 --> 02:18:22,785
and I did not talk about that?

02:18:39,213 --> 02:18:40,770
- [Aveek] You have some more questions?

02:18:40,770 --> 02:18:44,187
I think we can move on to the next slide.

02:18:48,382 --> 02:18:49,215
- Yes.

02:18:49,215 --> 02:18:52,500
And as usual, we will open Google Summer

02:18:52,500 --> 02:18:54,420
of Code projects for the parts

02:18:54,420 --> 02:18:59,380
we want to have developed, also volunteers

02:18:59,380 --> 02:19:01,050
or mentors are also welcome.

02:19:03,900 --> 02:19:04,837
So it goes.

02:19:04,837 --> 02:19:07,290
- [Kate] Quickly, just quick question.

02:19:08,130 --> 02:19:10,300
We've been talking about snaps, is there any,

02:19:10,300 --> 02:19:12,440
what's happening in the Red Hat space?

02:19:13,780 --> 02:19:16,300
- One thing is as far as I know,

02:19:16,300 --> 02:19:20,350
you can install the snap D on any D store.

02:19:20,350 --> 02:19:21,183
- Okay.

02:19:21,183 --> 02:19:23,630
- So it should also be available for Oetted.

02:19:23,630 --> 02:19:25,440
And I think on the snap forms,

02:19:25,440 --> 02:19:28,650
I have also already seen complaints

02:19:28,650 --> 02:19:29,550
from Oetted users.

02:19:30,410 --> 02:19:31,790
- Okay and on Souza?

02:19:32,950 --> 02:19:36,040
- Well yes, on Souza I think it would be the same thing.

02:19:36,040 --> 02:19:36,873
- Okay.

02:19:38,990 --> 02:19:40,600
Have there been any interactions

02:19:40,600 --> 02:19:42,000
with the open embedded folk?

02:19:43,650 --> 02:19:44,483
- [Aveek] Embedded for?

02:19:44,483 --> 02:19:47,080
- Open embedded, OE , in yocto.

02:19:47,080 --> 02:19:49,290
- No we specifically didn't have

02:19:49,290 --> 02:19:53,709
any interaction with them but we can

02:19:53,709 --> 02:19:55,792
(laughs)

02:19:58,750 --> 02:19:59,583
okay.

02:19:59,583 --> 02:20:01,120
So we will move on to the next one.

02:20:02,610 --> 02:20:03,990
I think that's fine.

02:20:03,990 --> 02:20:04,823
Yeah.

02:20:06,380 --> 02:20:08,690
- Yes it's now about 3D printing.

02:20:08,690 --> 02:20:10,847
Do you want to have this mic here?

02:20:10,847 --> 02:20:12,764
- I think now you have.

02:20:17,468 --> 02:20:19,040
Now you have, is it audible?

02:20:20,634 --> 02:20:21,520
Hello, yeah.

02:20:21,520 --> 02:20:23,270
Now you have pressed it in advance.

02:20:25,110 --> 02:20:27,600
You have pressed the next button in advance.

02:20:27,600 --> 02:20:29,300
Okay thanks Till.

02:20:30,170 --> 02:20:33,980
So here we are almost at you know,

02:20:33,980 --> 02:20:35,650
end part of the presentation.

02:20:35,650 --> 02:20:38,270
So from the morning we have been

02:20:38,270 --> 02:20:39,217
talking about driverless printing,

02:20:39,217 --> 02:20:43,570
printing in you know, in paper paper

02:20:43,570 --> 02:20:45,000
and all these things.

02:20:45,000 --> 02:20:47,370
But I'm sure most of you wherever

02:20:47,370 --> 02:20:50,220
that we have 3D printing in pictures.

02:20:50,220 --> 02:20:52,130
So many companies have already

02:20:52,130 --> 02:20:54,150
designed their 3D printer.

02:20:54,150 --> 02:20:57,100
So any of you, have you ever tried

02:20:57,100 --> 02:20:59,750
to print anything in a 3D printer?

02:20:59,750 --> 02:21:00,583
You've used?

02:21:00,583 --> 02:21:02,870
Okay, great so a couple of you.

02:21:02,870 --> 02:21:06,450
So can anyone describe that how

02:21:06,450 --> 02:21:08,690
are you printing 3D printer?

02:21:09,550 --> 02:21:12,390
Starting from the design to the printing,

02:21:12,390 --> 02:21:14,690
can anyone from the audience to just describe?

02:21:18,860 --> 02:21:20,290
- [Male Speaker] Nobody else.

02:21:20,290 --> 02:21:24,000
Well I model my models in free CAD.

02:21:24,000 --> 02:21:25,850
I slice them with slicer,

02:21:25,850 --> 02:21:28,260
I put them on an SD card, I put it in the printer

02:21:28,260 --> 02:21:29,093
and I print.

02:21:30,420 --> 02:21:31,253
- Right.

02:21:31,253 --> 02:21:34,300
So great, thanks for the detail.

02:21:34,300 --> 02:21:36,990
So anybody following a different method,

02:21:36,990 --> 02:21:40,370
what he explained is, he creates his models,

02:21:40,370 --> 02:21:45,370
he slices it, puts it in a SD card, uses that to print.

02:21:47,280 --> 02:21:49,930
So anyone doing 3D printing in a different way?

02:21:52,510 --> 02:21:53,740
No.

02:21:53,740 --> 02:21:54,573
Okay.

02:21:54,573 --> 02:21:55,460
So exactly.

02:21:55,460 --> 02:21:58,910
So that's how 3D printing is done today.

02:21:58,910 --> 02:22:01,860
You, you, sorry, you first design your model,

02:22:02,930 --> 02:22:05,970
you get an STL file or something,

02:22:05,970 --> 02:22:08,970
then you slice it in layers because as a 3D,

02:22:08,970 --> 02:22:11,690
because 3D printer you know, prints in layers.

02:22:11,690 --> 02:22:14,290
So layer one, layer two so it's all

02:22:14,290 --> 02:22:16,360
the layers which get attached

02:22:16,360 --> 02:22:17,420
and create the model.

02:22:18,443 --> 02:22:19,276
Do you have a question?

02:22:19,276 --> 02:22:22,792
- [Male Voice] For FDM but not for.

02:22:22,792 --> 02:22:25,750
- Okay maybe you can have the mic.

02:22:28,940 --> 02:22:30,490
- But that's more for FDM than it is

02:22:30,490 --> 02:22:33,340
for like the resin, I think it's called FFF printing.

02:22:34,650 --> 02:22:35,590
- [Aveek] FDM?

02:22:35,590 --> 02:22:36,423
- Yeah.

02:22:36,423 --> 02:22:39,527
Fused plastic where you melt the plastic versus.

02:22:39,527 --> 02:22:40,690
- [Aveek] Right.

02:22:40,690 --> 02:22:41,523
- Okay.

02:22:41,523 --> 02:22:44,290
- I designed my 3D printer a couple of months back,

02:22:44,290 --> 02:22:46,790
out of the open source technologies

02:22:46,790 --> 02:22:48,860
I developed using Marlin firmware

02:22:48,860 --> 02:22:51,090
and I had designed the hardware myself.

02:22:51,090 --> 02:22:53,950
So all I was doing is this thing,

02:22:53,950 --> 02:22:55,780
I was creating an STL model

02:22:55,780 --> 02:22:58,850
and then I was slicing it using the

02:22:58,850 --> 02:23:02,180
softwares which are already have level.

02:23:03,392 --> 02:23:04,950
So for those who are not aware,

02:23:04,950 --> 02:23:07,170
it's like once you create the model,

02:23:07,170 --> 02:23:09,210
you have to slice it right?

02:23:09,210 --> 02:23:12,250
So slice means basically you are

02:23:12,250 --> 02:23:15,570
instructing the nozzle of the 3D head

02:23:15,570 --> 02:23:17,020
how it should move.

02:23:17,020 --> 02:23:20,990
So you have a base layer, it's like icing of the cake.

02:23:20,990 --> 02:23:24,113
You have cream, you have, you put in the cream

02:23:24,113 --> 02:23:26,990
and you press it, you write happy birthday

02:23:26,990 --> 02:23:28,350
or happy anniversary.

02:23:28,350 --> 02:23:30,550
So 3D printing is similar, you have

02:23:30,550 --> 02:23:33,120
a hot nozzle, you put in the plastic

02:23:33,120 --> 02:23:36,380
and you move the nozzle so it prints one layer.

02:23:36,380 --> 02:23:39,130
Then again on top of it, it prints the next layer

02:23:39,130 --> 02:23:42,340
and the next layer and then how the model is found

02:23:42,340 --> 02:23:43,920
so a model is a designed.

02:23:44,990 --> 02:23:47,400
So you create the design, then slice it

02:23:47,400 --> 02:23:48,970
through your slicer software

02:23:51,260 --> 02:23:55,000
and finally you feed the G code into

02:23:55,000 --> 02:23:56,480
this printer okay

02:23:57,330 --> 02:23:59,180
and it starts printing.

02:23:59,180 --> 02:24:00,620
So this is the process.

02:24:00,620 --> 02:24:02,800
This is the way how it is done today.

02:24:04,020 --> 02:24:07,230
So we want to modernize it or we want

02:24:07,230 --> 02:24:08,830
to make things easier.

02:24:08,830 --> 02:24:12,190
Like we have developed our you know,

02:24:12,190 --> 02:24:14,950
driverless printing for 2D printing,

02:24:14,950 --> 02:24:17,450
we want to do the same thing for 3D printers.

02:24:17,450 --> 02:24:20,350
So we need collaboration, we need people

02:24:20,350 --> 02:24:22,910
to contribute more on this space.

02:24:22,910 --> 02:24:25,070
So what we are proposing is

02:24:29,550 --> 02:24:32,980
a filter like we have our PDF to PDF filter

02:24:32,980 --> 02:24:35,995
or PCLM filters in Linux today

02:24:35,995 --> 02:24:38,530
that's meant to open printing.

02:24:38,530 --> 02:24:43,090
If we can have a filter that can remove

02:24:43,090 --> 02:24:45,390
the slicing process you know,

02:24:45,390 --> 02:24:47,740
so here it's like you have an STL,

02:24:48,758 --> 02:24:50,970
you slice it, converted into a G code

02:24:50,970 --> 02:24:51,803
and then print.

02:24:52,820 --> 02:24:55,030
If we have a filter, you just

02:24:56,240 --> 02:24:58,680
open the STL model maybe in Linux

02:24:58,680 --> 02:25:02,480
and you just do a control P, in between

02:25:02,480 --> 02:25:04,850
internally it will slice up things

02:25:04,850 --> 02:25:06,250
and send it to your printer.

02:25:07,450 --> 02:25:08,600
So life becomes easier.

02:25:09,680 --> 02:25:12,270
So that is something which we are proposing.

02:25:15,740 --> 02:25:19,200
- So there are reasons you might wanna

02:25:20,170 --> 02:25:23,060
slice it yourself because the layer adhesion

02:25:23,060 --> 02:25:25,510
that you'd have when you 3D print matters,

02:25:25,510 --> 02:25:26,870
like the strength from one direction

02:25:26,870 --> 02:25:29,500
to the other matters so you either

02:25:29,500 --> 02:25:31,730
would have to take that into account

02:25:31,730 --> 02:25:35,080
when you design your model or you need

02:25:35,080 --> 02:25:38,390
to have some options in this translation.

02:25:40,040 --> 02:25:41,078
- Yeah.

02:25:41,078 --> 02:25:43,450
So basically so currently you do a save

02:25:43,450 --> 02:25:46,050
then you save it then you open in slicer,

02:25:46,050 --> 02:25:48,680
then you tweak parameters, load some presets,

02:25:48,680 --> 02:25:51,430
then you start G-code and then you print it.

02:25:51,430 --> 02:25:53,120
And in this way, it'll be like you know

02:25:53,120 --> 02:25:54,910
you do the save, press control P

02:25:54,910 --> 02:25:55,840
then you tweak some parameters,

02:25:55,840 --> 02:25:57,400
then you load some presets

02:25:57,400 --> 02:26:00,000
and then you, that's not much easier

02:26:00,000 --> 02:26:00,833
from my point of view.

02:26:00,833 --> 02:26:01,980
- [Male Speaker] Yeah just like a proper.

02:26:01,980 --> 02:26:03,888
- You cannot, you cannot, you can

02:26:03,888 --> 02:26:08,670
avoid the way of saving intermediate G-code file

02:26:08,670 --> 02:26:10,753
but you cannot avoid tweaking the

02:26:10,753 --> 02:26:12,210
parameters for every model that you are printing.

02:26:12,210 --> 02:26:13,910
And by law doing all this stuff

02:26:15,000 --> 02:26:16,300
you still have to do that.

02:26:20,222 --> 02:26:24,462
- I think we need to move that speaker's microphone.

02:26:24,462 --> 02:26:28,295
(they speak at the same time)

02:26:32,001 --> 02:26:35,330
- [Male Voice] So that has to do with the speaker.

02:26:36,560 --> 02:26:38,540
- Yeah that one.

02:26:38,540 --> 02:26:39,373
- So

02:26:43,170 --> 02:26:44,320
okay thanks.

02:26:44,320 --> 02:26:47,510
First of all, I remember a presentation

02:26:47,510 --> 02:26:50,620
two or three years ago, talking about

02:26:50,620 --> 02:26:54,940
the same, at the Red Hat organized conference,

02:26:54,940 --> 02:26:57,390
DEFCON CZ which was happening in Bruno,

02:26:58,887 --> 02:27:01,180
so you might take a look at that.

02:27:01,180 --> 02:27:02,013
- Okay.

02:27:03,840 --> 02:27:05,980
- What the others were saying that

02:27:05,980 --> 02:27:09,580
there is still a big part of this

02:27:09,580 --> 02:27:12,152
is the interactive part where you have

02:27:12,152 --> 02:27:14,320
to tweak the model, tweak the settings

02:27:14,320 --> 02:27:15,153
and everything,

02:27:18,559 --> 02:27:19,920
it just goes into feedback.

02:27:20,820 --> 02:27:24,470
So the big part is that there is lots

02:27:24,470 --> 02:27:27,790
of manual work before you can actually slice it.

02:27:27,790 --> 02:27:32,560
And I would pose it that the automating

02:27:32,560 --> 02:27:36,340
that would take artificial intelligence

02:27:36,340 --> 02:27:38,910
to get any valuable results because

02:27:38,910 --> 02:27:40,630
there are things like adding supports

02:27:40,630 --> 02:27:43,120
and determining the direction

02:27:44,050 --> 02:27:46,210
but that's definitely something

02:27:46,210 --> 02:27:49,320
that would be good to do.

02:27:49,320 --> 02:27:50,830
- Before you print, I mean using

02:27:50,830 --> 02:27:52,970
the slicer software, you can do lot

02:27:52,970 --> 02:27:55,830
of improvisation like in which layer,

02:27:55,830 --> 02:27:57,770
I mean how much amount of quantity

02:27:57,770 --> 02:28:00,290
you want to infuse or how much strength

02:28:00,290 --> 02:28:02,610
you would need to give to a particular position.

02:28:02,610 --> 02:28:03,840
I agree to it.

02:28:03,840 --> 02:28:06,840
So my main point is like, if we can

02:28:06,840 --> 02:28:09,390
integrate things instead of doing things

02:28:09,390 --> 02:28:11,060
in different softwares, if we can

02:28:11,060 --> 02:28:14,080
integrate things in a, if we can integrate

02:28:14,080 --> 02:28:16,480
things all together so that makes all

02:28:16,480 --> 02:28:18,100
of our job easier.

02:28:18,100 --> 02:28:21,370
So our main aim is to make it as easier

02:28:21,370 --> 02:28:24,040
as 2D printing without losing any

02:28:24,040 --> 02:28:27,010
of the functionalities or things.

02:28:27,010 --> 02:28:29,440
So that's something which I wanted

02:28:29,440 --> 02:28:32,000
to open for the, I mean open up for discussion

02:28:32,000 --> 02:28:35,770
so that we see some better things tomorrow.

02:28:36,980 --> 02:28:38,130
Yeah.

02:28:38,130 --> 02:28:39,450
So you wanted to say?

02:28:40,380 --> 02:28:41,660
- So have you all looked at something

02:28:41,660 --> 02:28:42,493
like OctoPrint.

02:28:43,370 --> 02:28:44,203
- Sorry?

02:28:44,203 --> 02:28:46,390
- Have you looked at anything like OctoPrint?

02:28:46,390 --> 02:28:47,223
- No.

02:28:47,223 --> 02:28:50,630
- So I know for so I have a Prusa Mark three.

02:28:50,630 --> 02:28:51,463
- Okay.

02:28:52,650 --> 02:28:53,483
- And essentially it's a raspberry pie

02:28:53,483 --> 02:28:56,230
that you can add to the back of your controller board

02:28:56,230 --> 02:28:59,040
and it enables you to do all kinds of web things

02:28:59,040 --> 02:29:01,750
and you essentially can transfer the STL over.

02:29:01,750 --> 02:29:03,410
And I think it does, slicing on there.,

02:29:03,410 --> 02:29:05,680
I haven't used it but I think it does

02:29:05,680 --> 02:29:08,550
something similar but you need essentially

02:29:08,550 --> 02:29:11,310
a smart device to assist you.

02:29:11,310 --> 02:29:12,242
So maybe that's something that

02:29:12,242 --> 02:29:17,000
you would be recommending to 3D printer manufacturers.

02:29:17,000 --> 02:29:19,200
- That's an icing so I didn't knew about it.

02:29:22,740 --> 02:29:24,700
So you had any other question?

02:29:28,347 --> 02:29:29,180
- I don't know, I can just repeat

02:29:29,180 --> 02:29:31,552
what others were saying that yes,

02:29:31,552 --> 02:29:34,650
it'll make things easier, but it's not

02:29:34,650 --> 02:29:36,010
where the complexity is.

02:29:36,010 --> 02:29:38,700
So it will optimize the very minor part that

02:29:38,700 --> 02:29:41,024
nobody thinks is difficult at all.

02:29:41,024 --> 02:29:43,910
And the difficult part is you're not making it easy,

02:29:43,910 --> 02:29:47,910
you're just completely ignore the complexity,

02:29:47,910 --> 02:29:48,800
the main complexity

02:29:48,800 --> 02:29:53,800
and what you optimize is well nobody cares.

02:29:54,530 --> 02:29:57,080
- So which part you think is the most

02:29:57,080 --> 02:29:58,820
complex or hazardous?

02:29:58,820 --> 02:30:00,740
- Tweaking the slicer parameter

02:30:00,740 --> 02:30:02,520
instructions like the model, the way

02:30:02,520 --> 02:30:06,464
you want it to get the, well good results.

02:30:06,464 --> 02:30:10,690
- [Male Speaker] But it's not that different than

02:30:10,690 --> 02:30:12,390
a printer where you say what black level

02:30:12,390 --> 02:30:14,270
you want is, you know, how many perimeters

02:30:14,270 --> 02:30:16,290
you want in the 3D print, what black level you want,

02:30:16,290 --> 02:30:17,123
whether you want monochrome.

02:30:17,123 --> 02:30:21,140
- [Second Male Speaker] Yes but how often do you tweak

02:30:21,140 --> 02:30:23,080
your printer parameters before printing?

02:30:23,080 --> 02:30:25,703
How often do you tweak your slicer parameters?

02:30:25,703 --> 02:30:27,990
Well my printer recently gone crazy

02:30:27,990 --> 02:30:30,820
and I was tweaking this level of black

02:30:30,820 --> 02:30:32,420
and all this stuff and came across

02:30:32,420 --> 02:30:35,090
I did it once in like many years,

02:30:35,090 --> 02:30:37,240
with slicer you need to do that every time.

02:30:40,000 --> 02:30:40,833
- [Male Speaker] But I think he's going

02:30:40,833 --> 02:30:42,210
for more of a perfect world kind of thing

02:30:42,210 --> 02:30:43,950
that maybe the AI could figure it out

02:30:43,950 --> 02:30:46,790
and go oh well, it only needs to be two layers at here

02:30:46,790 --> 02:30:48,810
and it could be 10 over here cause it needs the strength.

02:30:48,810 --> 02:30:50,550
Is that what you're proposing?

02:30:50,550 --> 02:30:52,420
- All right, right somewhat similar.

02:30:56,220 --> 02:30:57,780
- So basically I want to add

02:30:57,780 --> 02:31:00,220
a little basically 3D printing at

02:31:00,220 --> 02:31:02,486
this moment is not a solved problem.

02:31:02,486 --> 02:31:07,486
If we compare laser printers to 3D printers,

02:31:07,800 --> 02:31:10,930
the laser printers are, it's a relatively

02:31:10,930 --> 02:31:13,610
small problem there, the first laser

02:31:13,610 --> 02:31:15,380
printers were introduced, I believe there

02:31:15,380 --> 02:31:18,280
would be difficulties to figure out

02:31:18,280 --> 02:31:21,314
how much toner you use, what kind of wall

02:31:21,314 --> 02:31:22,660
did you see use et cetera, to get

02:31:22,660 --> 02:31:25,450
the toner over the paper and things like that.

02:31:25,450 --> 02:31:27,560
But that was relatively easy problem to solve

02:31:27,560 --> 02:31:29,990
it was basically about two dimensions.

02:31:30,980 --> 02:31:33,300
With 3D printer there are so many parameters

02:31:33,300 --> 02:31:35,990
that it's a, for every print it has

02:31:35,990 --> 02:31:38,900
to be different and there are many,

02:31:38,900 --> 02:31:41,790
many parameters to solve and you cannot remove

02:31:41,790 --> 02:31:43,740
the human by default yet.

02:31:45,260 --> 02:31:47,790
- All right, there is more diversity

02:31:47,790 --> 02:31:48,880
which is being added.

02:31:48,880 --> 02:31:51,360
I mean few days back I was a seeing

02:31:51,360 --> 02:31:55,990
a video in YouTube where some university in UK,

02:31:55,990 --> 02:31:57,170
what they're trying to do is

02:31:57,170 --> 02:31:59,350
somebody gets admitted to a hospital

02:31:59,350 --> 02:32:02,120
with some problem in an artery in the heart.

02:32:02,120 --> 02:32:05,160
So a scanner is scanning that particular area

02:32:05,160 --> 02:32:07,610
and they are feeding it to the 3D printer

02:32:07,610 --> 02:32:12,210
and the 3D printer creates an artery of that size

02:32:12,210 --> 02:32:14,560
and shape using human cells

02:32:16,120 --> 02:32:18,260
and the doctor just needs to implant it.

02:32:18,260 --> 02:32:21,330
So maybe tomorrow we have a, my clone

02:32:21,330 --> 02:32:23,120
will be there, somebody, I'll be giving

02:32:23,120 --> 02:32:24,600
a presentation somewhere or somebody

02:32:24,600 --> 02:32:27,179
will create my clone (laughs)

02:32:27,179 --> 02:32:32,179
so yeah, so maybe in the future

02:32:34,240 --> 02:32:37,880
if we can have a common PDL or if we

02:32:37,880 --> 02:32:41,200
tell it as object description language OTL

02:32:41,200 --> 02:32:42,720
some uniformity.

02:32:43,630 --> 02:32:45,610
So I don't know I mean, these are all

02:32:45,610 --> 02:32:48,120
the things which needs a lot of discussion

02:32:48,120 --> 02:32:50,190
and what it should improve

02:32:50,190 --> 02:32:53,177
and so things like that.

02:32:56,400 --> 02:33:00,620
PWG has already defined some standards for 3D printing.

02:33:00,620 --> 02:33:04,950
So like a PWG is a Printing Workkways Group

02:33:04,950 --> 02:33:08,580
so they define the printing standards.

02:33:08,580 --> 02:33:11,350
They have already like IPP driverless printing

02:33:11,350 --> 02:33:13,380
and IPP everywhere, these kinds of standards

02:33:13,380 --> 02:33:16,730
where you know, developed by PWG similarly,

02:33:16,730 --> 02:33:18,580
they have it for 3D printing as well.

02:33:22,720 --> 02:33:26,850
Maybe tomorrow we will have a driverless 3D printer

02:33:26,850 --> 02:33:28,780
like we have a driverless 2D printer.

02:33:29,750 --> 02:33:32,460
So all these things are like we are proposing

02:33:34,370 --> 02:33:36,380
maybe open printing we can,

02:33:36,380 --> 02:33:39,660
I mean if somebody is interested we can collaborate

02:33:39,660 --> 02:33:40,760
and work on something.

02:33:42,100 --> 02:33:46,800
So that's it.

02:33:46,800 --> 02:33:49,720
Before we move on to the closure,

02:33:49,720 --> 02:33:52,650
I mean if any one of you want to discuss

02:33:52,650 --> 02:33:55,790
on any points that we discussed today,

02:33:55,790 --> 02:33:57,820
be it with respect to 2D printing

02:33:57,820 --> 02:34:00,450
or 3D printing or something that

02:34:00,450 --> 02:34:02,390
gives you pain while printing which

02:34:02,390 --> 02:34:06,830
we can resolve or if you want to you know,

02:34:06,830 --> 02:34:10,350
help us grow open printing or some you know,

02:34:12,060 --> 02:34:15,947
some softwares or something so please reach out.

02:34:18,142 --> 02:34:19,699
- Thank you.

02:34:19,699 --> 02:34:20,532
- [Female Speaker] Thank you.

02:34:20,532 --> 02:34:23,160
(claps)

02:34:23,160 --> 02:34:25,210
- If you have any further questions

02:34:25,210 --> 02:34:28,970
or anything you can email us here.

02:34:31,530 --> 02:34:32,700
Okay.

02:34:32,700 --> 02:34:33,533
- Yes.

02:34:33,533 --> 02:34:36,350
If you want to volunteer to be

02:34:36,350 --> 02:34:40,400
a part of open printing, maintain projects,

02:34:40,400 --> 02:34:45,363
create new stuff, implement things we need,

02:34:48,470 --> 02:34:50,890
fix bugs, create bugs.

02:34:54,650 --> 02:34:56,870
- And if anything is not working out

02:34:56,870 --> 02:35:00,186
in Linux while you print, shoot us a mail.

02:35:00,186 --> 02:35:03,019
(audience laughs)

02:35:03,976 --> 02:35:04,809
Okay.

02:35:04,809 --> 02:35:06,250

YouTube URL: https://www.youtube.com/watch?v=0c_JaX4G7Zc


