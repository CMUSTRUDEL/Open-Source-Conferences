Title: 2009 SouthEast LinuxFest - Robby Workman - Introduction to Firewalling on Linux
Publication date: 2012-02-14
Playlist: 2009 SouthEast LinuxFest
Description: 
	2009 SouthEast LinuxFest - Robby Workman - Introduction to Firewalling on Linux

This video is licensed under Creative Commons Attribution 3.0 Unported License.
Captions: 
	00:00:00,000 --> 00:00:04,110
the following presentation was recorded

00:00:02,040 --> 00:00:06,390
by view digital media at the inaugural

00:00:04,110 --> 00:00:13,080
southeast linux fest in clemson south

00:00:06,390 --> 00:00:16,289
carolina on jun 13 2014 winix fest visit

00:00:13,080 --> 00:00:19,260
southeast linux fest org well thanks

00:00:16,289 --> 00:00:20,970
everyone I'm actually quite surprised

00:00:19,260 --> 00:00:22,740
that the turnout I figured with Mark

00:00:20,970 --> 00:00:24,119
Spencer talking I have three or four

00:00:22,740 --> 00:00:25,710
people present we could all just get her

00:00:24,119 --> 00:00:30,119
in around a circular table or something

00:00:25,710 --> 00:00:31,619
but um as Rick said I am a teacher by

00:00:30,119 --> 00:00:33,870
trade please don't hold that against me

00:00:31,619 --> 00:00:35,760
I do what I can but you know working for

00:00:33,870 --> 00:00:44,640
the government some days is it's a tough

00:00:35,760 --> 00:00:48,420
job but um I'm sorry oh okay pardon me

00:00:44,640 --> 00:00:50,969
as we go through this first of all this

00:00:48,420 --> 00:00:52,170
is intended to be an introduction you

00:00:50,969 --> 00:00:54,660
know those of you that are already

00:00:52,170 --> 00:00:56,640
familiar with iptables and and that sort

00:00:54,660 --> 00:00:59,399
of thing to be honest with you you're

00:00:56,640 --> 00:01:01,109
not going to get anything new here so

00:00:59,399 --> 00:01:04,049
perhaps you might want to go to marks

00:01:01,109 --> 00:01:05,850
presentation otherwise if you don't know

00:01:04,049 --> 00:01:09,770
a whole lot about iptables already then

00:01:05,850 --> 00:01:12,570
I'm hoping that this can be kind of a

00:01:09,770 --> 00:01:13,890
good introduction certainly not going to

00:01:12,570 --> 00:01:16,350
get you writing any full-fledged

00:01:13,890 --> 00:01:18,869
firewall scripts when you leave but a

00:01:16,350 --> 00:01:21,930
good start to to an understanding anyway

00:01:18,869 --> 00:01:27,540
so with all that said let's see if I can

00:01:21,930 --> 00:01:30,840
figure out this difference PDF

00:01:27,540 --> 00:01:33,150
application to make a long story short I

00:01:30,840 --> 00:01:37,890
have my laptop down here and I just

00:01:33,150 --> 00:01:40,110
upgraded the xorg to what at some point

00:01:37,890 --> 00:01:43,049
will be 7.5 as you know it's not out yet

00:01:40,110 --> 00:01:44,909
and I guess there's still a few rough

00:01:43,049 --> 00:01:47,790
patches because the full screen

00:01:44,909 --> 00:01:50,460
presentation mode could solve right past

00:01:47,790 --> 00:01:54,000
the slash at the end of the slacker com

00:01:50,460 --> 00:01:55,890
website link and unfortunately I do have

00:01:54,000 --> 00:01:57,090
some text to the right of that on some

00:01:55,890 --> 00:02:01,950
of these slides so that wasn't going to

00:01:57,090 --> 00:02:04,259
be very useful to us so anyway first of

00:02:01,950 --> 00:02:05,850
all a general overview of firewalls you

00:02:04,259 --> 00:02:08,310
know what is a firewall this is

00:02:05,850 --> 00:02:10,229
something that it's really easy but

00:02:08,310 --> 00:02:12,209
difficult to answer it depends and

00:02:10,229 --> 00:02:13,650
really it depends upon your background

00:02:12,209 --> 00:02:15,390
where you're coming from

00:02:13,650 --> 00:02:17,549
I don't know how many of you are coming

00:02:15,390 --> 00:02:20,720
out of a windows background probably

00:02:17,549 --> 00:02:22,590
lots of asst maybe maybe not ideally but

00:02:20,720 --> 00:02:24,480
traditionally we think tend to think of

00:02:22,590 --> 00:02:27,840
a far wall is something that looks at

00:02:24,480 --> 00:02:30,810
network traffic and it determines

00:02:27,840 --> 00:02:34,010
whether it's allowed or denied based on

00:02:30,810 --> 00:02:36,390
a rule set of some sort

00:02:34,010 --> 00:02:38,400
application-level filters these are

00:02:36,390 --> 00:02:41,010
things that usually we think of

00:02:38,400 --> 00:02:44,310
zonealarm checkpoint other firewalls

00:02:41,010 --> 00:02:46,859
that that I guess a lot of people

00:02:44,310 --> 00:02:48,389
probably have on their windows machines

00:02:46,859 --> 00:02:49,709
or would have had on their windows

00:02:48,389 --> 00:02:52,680
machines or even should have on their

00:02:49,709 --> 00:02:54,450
windows machines that's not what we're

00:02:52,680 --> 00:02:58,310
going to be focusing on today we're

00:02:54,450 --> 00:03:03,030
looking at more of simple packet filters

00:02:58,310 --> 00:03:04,439
iptables on linux PF on openbsd modern

00:03:03,030 --> 00:03:06,000
packet filters they're going to have

00:03:04,439 --> 00:03:08,420
some more advanced capabilities or a

00:03:06,000 --> 00:03:10,829
network address translation or NAT

00:03:08,420 --> 00:03:12,959
altering packet headers deeper

00:03:10,829 --> 00:03:15,720
inspection of package contents some of

00:03:12,959 --> 00:03:19,530
that becomes useful and it just as an

00:03:15,720 --> 00:03:21,419
example altering packet headers there I

00:03:19,530 --> 00:03:25,889
don't think this is very common anymore

00:03:21,419 --> 00:03:29,879
but I can I don't know five to six years

00:03:25,889 --> 00:03:32,280
ago a lot of ISPs at the beginning of

00:03:29,879 --> 00:03:33,870
the wireless when wireless started

00:03:32,280 --> 00:03:35,310
becoming popular in people setting up

00:03:33,870 --> 00:03:38,849
home networks with their internet

00:03:35,310 --> 00:03:40,859
account some ISPs tended to want to

00:03:38,849 --> 00:03:43,229
charge extra money if you wanted to run

00:03:40,859 --> 00:03:44,819
a whole network so they would start say

00:03:43,229 --> 00:03:46,889
ten dollars or fifteen dollars or

00:03:44,819 --> 00:03:51,629
whatever for the router and to give you

00:03:46,889 --> 00:03:55,680
extra eye peas and what what you can do

00:03:51,629 --> 00:03:57,299
with iptables is is essentially every

00:03:55,680 --> 00:04:00,060
packet going out of the network gets a

00:03:57,299 --> 00:04:01,560
time to live header set and ISPs would

00:04:00,060 --> 00:04:03,930
look at that time to live header and if

00:04:01,560 --> 00:04:06,510
they were detecting different time to

00:04:03,930 --> 00:04:08,760
live in court or settings on on

00:04:06,510 --> 00:04:11,970
different packets they would start

00:04:08,760 --> 00:04:14,220
dropping you see your traffic so what

00:04:11,970 --> 00:04:16,650
you can do with iptables and probably PF

00:04:14,220 --> 00:04:18,030
and others is basically reset all those

00:04:16,650 --> 00:04:20,220
time to live headers of everything

00:04:18,030 --> 00:04:22,229
leaving your network so that as far as

00:04:20,220 --> 00:04:26,340
your ISP is concerned everything's

00:04:22,229 --> 00:04:27,310
coming from the same box but anyhow so

00:04:26,340 --> 00:04:29,850
we're going to focus on this

00:04:27,310 --> 00:04:32,260
simple packet filter winches iptables

00:04:29,850 --> 00:04:35,110
just an overview of the packet filter

00:04:32,260 --> 00:04:36,610
framework and the Linux kernel is

00:04:35,110 --> 00:04:38,320
divided into two parts you've got the

00:04:36,610 --> 00:04:40,060
kernel space which is knit filter or

00:04:38,320 --> 00:04:42,000
outdoor eggs tables and then the user

00:04:40,060 --> 00:04:44,290
space portion which is IP tables

00:04:42,000 --> 00:04:51,669
generally we refer to them together it's

00:04:44,290 --> 00:04:53,550
just plain ol iptables number Colonel

00:04:51,669 --> 00:04:56,290
configuration this is a touchy subject

00:04:53,550 --> 00:05:00,729
you just out of curiosity how many of us

00:04:56,290 --> 00:05:02,139
here have built custom kernels how many

00:05:00,729 --> 00:05:09,419
of you still do that as a matter of

00:05:02,139 --> 00:05:12,669
habit one ta okay well then this isn't

00:05:09,419 --> 00:05:16,720
necessarily bad advice I don't think use

00:05:12,669 --> 00:05:18,490
your distributions Colonel seriously I'm

00:05:16,720 --> 00:05:21,000
not saying that building a custom kernel

00:05:18,490 --> 00:05:23,860
is a bad idea but to be honest with you

00:05:21,000 --> 00:05:26,950
unless you have some legitimate need for

00:05:23,860 --> 00:05:28,960
it as in there's driver support in an

00:05:26,950 --> 00:05:31,510
uber kernel that you have to have or

00:05:28,960 --> 00:05:34,900
there is a bug in your distribution's

00:05:31,510 --> 00:05:36,550
kernel that is fixed in a later one you

00:05:34,900 --> 00:05:39,990
probably don't need to build a custom

00:05:36,550 --> 00:05:44,140
kernel and based on my experiences in

00:05:39,990 --> 00:05:46,750
distro development lots of people get

00:05:44,140 --> 00:05:49,660
them wrong and then they report bugs and

00:05:46,750 --> 00:05:52,990
we spend insane amounts of time tracking

00:05:49,660 --> 00:05:56,979
down bugs that quite frankly aren't our

00:05:52,990 --> 00:05:58,510
bugs and that gets frustrating so use

00:05:56,979 --> 00:06:02,139
your distro Colonel if at all possible

00:05:58,510 --> 00:06:04,600
um if you do build a custom kernel we're

00:06:02,139 --> 00:06:06,190
firewalling stuff is concerned you're

00:06:04,600 --> 00:06:09,160
almost surely going to want to set all

00:06:06,190 --> 00:06:11,860
of the net filter options as modules the

00:06:09,160 --> 00:06:15,729
advantages of that just at a high level

00:06:11,860 --> 00:06:18,100
is if you build things statically into

00:06:15,729 --> 00:06:20,020
the kernel and you need support for

00:06:18,100 --> 00:06:23,500
something new that you didn't do it into

00:06:20,020 --> 00:06:27,880
it you have to rebuild the kernel or if

00:06:23,500 --> 00:06:30,610
you just as an example you have a

00:06:27,880 --> 00:06:32,830
problem with a with this doesn't really

00:06:30,610 --> 00:06:35,310
apply to IP tables but you have a

00:06:32,830 --> 00:06:38,650
problem with a driver that that goes

00:06:35,310 --> 00:06:39,969
crazy you can just unload the module and

00:06:38,650 --> 00:06:42,129
reload it rather than have

00:06:39,969 --> 00:06:43,539
to reboot the whole system and usually

00:06:42,129 --> 00:06:46,029
that works out well so generally

00:06:43,539 --> 00:06:51,639
speaking keep all the stuff as modules

00:06:46,029 --> 00:06:52,899
that way if you need support for

00:06:51,639 --> 00:06:54,339
something that you didn't think you were

00:06:52,899 --> 00:06:55,809
going to need when you built your

00:06:54,339 --> 00:07:00,669
Colonel it's it's already there you just

00:06:55,809 --> 00:07:04,419
load a module X tables and netfilter

00:07:00,669 --> 00:07:06,939
this the name iptables actually comes

00:07:04,419 --> 00:07:09,939
from the fact that there are tables that

00:07:06,939 --> 00:07:13,539
are built into the kernel these tables

00:07:09,939 --> 00:07:16,089
are filter table and this does exactly

00:07:13,539 --> 00:07:18,009
what the name implies it's where the

00:07:16,089 --> 00:07:21,939
actual packet filtering takes place if

00:07:18,009 --> 00:07:25,419
you don't specify I hate touchpads I'm

00:07:21,939 --> 00:07:28,959
sorry I have no idea how to go back

00:07:25,419 --> 00:07:31,089
either so okay well anyway if you don't

00:07:28,959 --> 00:07:32,229
specify a table this will be that will

00:07:31,089 --> 00:07:34,689
make more sense here in a little while

00:07:32,229 --> 00:07:37,360
then the filter table is actually what

00:07:34,689 --> 00:07:39,579
is implied if you don't specify one when

00:07:37,360 --> 00:07:41,049
entering a rule you have then that table

00:07:39,579 --> 00:07:42,969
this is network address translation

00:07:41,049 --> 00:07:44,800
table that's where rewriting packet

00:07:42,969 --> 00:07:46,839
source or destination takes place and

00:07:44,800 --> 00:07:49,329
then the mangled table that's where you

00:07:46,839 --> 00:07:53,829
alter packet headers or contents if if

00:07:49,329 --> 00:07:57,699
need be each table oops forgot about one

00:07:53,829 --> 00:08:00,489
the wrong table that's really again with

00:07:57,699 --> 00:08:05,559
the name implies it looks at the raw

00:08:00,489 --> 00:08:08,139
packets as opposed to well that is

00:08:05,559 --> 00:08:09,939
really not a good explanation it doesn't

00:08:08,139 --> 00:08:12,309
do anything special to the packets as

00:08:09,939 --> 00:08:15,369
they come in this is where you can tell

00:08:12,309 --> 00:08:17,589
the whole connection tracking system to

00:08:15,369 --> 00:08:21,729
ignore this packet in and everything

00:08:17,589 --> 00:08:25,269
else associated with it each table has

00:08:21,729 --> 00:08:29,229
some built in Chains these chains are

00:08:25,269 --> 00:08:30,849
the input team the part about where its

00:08:29,229 --> 00:08:33,579
present really isn't important for our

00:08:30,849 --> 00:08:34,930
purposes at this point and I'm going to

00:08:33,579 --> 00:08:40,419
go ahead and bring up all three of these

00:08:34,930 --> 00:08:43,120
I hope in the input chain only packets

00:08:40,419 --> 00:08:46,389
that terminate on the local host go

00:08:43,120 --> 00:08:47,920
through the input chain that part is

00:08:46,389 --> 00:08:50,110
really important and I'm going to come

00:08:47,920 --> 00:08:53,200
back to this in just a moment the output

00:08:50,110 --> 00:08:55,360
chain again what's present isn't really

00:08:53,200 --> 00:08:57,490
terribly important at this point but

00:08:55,360 --> 00:09:00,220
only packets originating on localhost

00:08:57,490 --> 00:09:02,380
traverse the output team and then the

00:09:00,220 --> 00:09:04,630
forward chane packets that don't

00:09:02,380 --> 00:09:07,600
originate or terminate on the localhost

00:09:04,630 --> 00:09:11,020
traverse the forward chain you know to

00:09:07,600 --> 00:09:12,670
go back and summarize this quite frankly

00:09:11,020 --> 00:09:14,470
this is probably the biggest sticking

00:09:12,670 --> 00:09:16,300
point that new users are new people

00:09:14,470 --> 00:09:18,910
trying to figure out iptables run into

00:09:16,300 --> 00:09:23,980
problems with and I know this because I

00:09:18,910 --> 00:09:26,890
was there I remember a lot of people

00:09:23,980 --> 00:09:28,780
come into a frequent the iptables a ir

00:09:26,890 --> 00:09:31,120
se channel and this is one of the

00:09:28,780 --> 00:09:33,520
biggest i guess most frequent issues

00:09:31,120 --> 00:09:36,250
that comes up is people get a nice rule

00:09:33,520 --> 00:09:38,110
set with everything they want to accept

00:09:36,250 --> 00:09:40,990
into their network and the input chain

00:09:38,110 --> 00:09:43,410
and everything they want to go out and

00:09:40,990 --> 00:09:47,530
the output chain which we'll talk about

00:09:43,410 --> 00:09:50,470
output chain filtering later on and then

00:09:47,530 --> 00:09:53,670
say well my firewall can connect to the

00:09:50,470 --> 00:09:55,990
internet fine but nothing behind it

00:09:53,670 --> 00:09:58,630
seems to get out to the Internet what's

00:09:55,990 --> 00:10:00,670
wrong well what's your forward chain

00:09:58,630 --> 00:10:02,680
look like because see the input chain is

00:10:00,670 --> 00:10:04,960
only dealing with packets that are

00:10:02,680 --> 00:10:07,780
actually terminating ending at the

00:10:04,960 --> 00:10:10,180
firewall anything going behind it are

00:10:07,780 --> 00:10:12,310
supposed to be going behind it is not

00:10:10,180 --> 00:10:14,170
affected by input chain rules and the

00:10:12,310 --> 00:10:16,630
same goes for output it only applies to

00:10:14,170 --> 00:10:19,930
packets that the firewall itself is

00:10:16,630 --> 00:10:22,840
creating everything else is forward seen

00:10:19,930 --> 00:10:25,360
and the 14 is where things behind the

00:10:22,840 --> 00:10:28,480
firewall things on the other side of the

00:10:25,360 --> 00:10:31,780
firewall that well traffic between those

00:10:28,480 --> 00:10:35,470
two goes to the 14 so just keep that in

00:10:31,780 --> 00:10:37,810
mind that will be important later also

00:10:35,470 --> 00:10:39,400
to other built-in chains that may or may

00:10:37,810 --> 00:10:40,780
not be useful depending on what you're

00:10:39,400 --> 00:10:43,330
doing or the pre routing and post

00:10:40,780 --> 00:10:47,220
routing chains again exactly what the

00:10:43,330 --> 00:10:49,540
name implies pre routing before routing

00:10:47,220 --> 00:10:52,630
packets go through this chain before

00:10:49,540 --> 00:10:55,360
routing decisions made by the kernel pre

00:10:52,630 --> 00:10:57,220
routing is handy for port forwarding

00:10:55,360 --> 00:11:00,820
something that you tend to do on your

00:10:57,220 --> 00:11:03,070
commercial routers if you've got a host

00:11:00,820 --> 00:11:05,350
in your network running a web server and

00:11:03,070 --> 00:11:07,000
you want to forward everything on port

00:11:05,350 --> 00:11:09,550
80 to that particular

00:11:07,000 --> 00:11:12,010
their host then you'll do that in the

00:11:09,550 --> 00:11:16,200
prewriting chain of everything coming

00:11:12,010 --> 00:11:20,070
into your network post routing is where

00:11:16,200 --> 00:11:23,470
network address translation for example

00:11:20,070 --> 00:11:26,890
to take an internal network where

00:11:23,470 --> 00:11:30,190
everything is on just for example 192

00:11:26,890 --> 00:11:35,110
dot whatever IPO private address trains

00:11:30,190 --> 00:11:37,360
going out to the Internet obviously if a

00:11:35,110 --> 00:11:40,690
packet goes out to the wild wild

00:11:37,360 --> 00:11:44,830
internet with a 192 168 not whatever

00:11:40,690 --> 00:11:47,490
address the next router past you is

00:11:44,830 --> 00:11:52,470
going to barf on that pardon my language

00:11:47,490 --> 00:11:54,910
because obviously 192 168 dot whatever

00:11:52,470 --> 00:11:56,980
there's millions of them out there and

00:11:54,910 --> 00:11:58,510
they're not intended to be used on the

00:11:56,980 --> 00:12:01,480
Internet as a whole so before that

00:11:58,510 --> 00:12:03,670
packet leaves your network your firewall

00:12:01,480 --> 00:12:06,100
your gateway essentially needs to do

00:12:03,670 --> 00:12:07,900
something to it to make sure it knows or

00:12:06,100 --> 00:12:09,700
it knows where to go from there and more

00:12:07,900 --> 00:12:11,560
importantly where it's going knows how

00:12:09,700 --> 00:12:13,720
to get it back or get the response back

00:12:11,560 --> 00:12:15,610
so this is where post routing comes in

00:12:13,720 --> 00:12:18,610
once the routing decisions been made

00:12:15,610 --> 00:12:22,420
that packets being sent to google com

00:12:18,610 --> 00:12:25,240
and it's routed out before it actually

00:12:22,420 --> 00:12:29,170
leaves the network the the colonel will

00:12:25,240 --> 00:12:31,690
rewrite the source address of the packet

00:12:29,170 --> 00:12:34,600
words coming from to be the external IP

00:12:31,690 --> 00:12:36,970
address of your gateway box and then it

00:12:34,600 --> 00:12:39,220
goes out so that the next router

00:12:36,970 --> 00:12:41,980
upstream knows where to send the replies

00:12:39,220 --> 00:12:43,630
back and I hope that made some sense I

00:12:41,980 --> 00:12:45,880
sometimes tend to ramble when I'm

00:12:43,630 --> 00:12:48,040
talking but you know that's what this is

00:12:45,880 --> 00:12:51,970
where outgoing that happens is in the

00:12:48,040 --> 00:12:54,660
post routing team next is basic iptables

00:12:51,970 --> 00:12:54,660
syntax

00:13:00,350 --> 00:13:05,730
most of this to be honest is cut and

00:13:03,449 --> 00:13:08,939
paste from the iptables men page and

00:13:05,730 --> 00:13:12,420
that's a hint if you need help go there

00:13:08,939 --> 00:13:20,699
it's a great place to add or delete a

00:13:12,420 --> 00:13:23,310
rule here you go as an example iptables

00:13:20,699 --> 00:13:27,870
Dashti filter so on and so forth this

00:13:23,310 --> 00:13:30,509
will actually the first one well we'll

00:13:27,870 --> 00:13:34,110
get to that moment note that dash a

00:13:30,509 --> 00:13:38,399
means append this rule is added to the

00:13:34,110 --> 00:13:43,829
end of the chain I have no idea how to

00:13:38,399 --> 00:13:45,509
go back oh that's how okay good what

00:13:43,829 --> 00:13:49,259
these two examples do we'll come back to

00:13:45,509 --> 00:13:54,540
this in just a moment but this is a

00:13:49,259 --> 00:13:57,230
pending a roll to the input chain that's

00:13:54,540 --> 00:14:02,129
protocol so it's the TCP protocol

00:13:57,230 --> 00:14:04,949
destination port of 22 and it's jumping

00:14:02,129 --> 00:14:06,660
to the accept target there'll be more

00:14:04,949 --> 00:14:11,629
explanation on this later but basically

00:14:06,660 --> 00:14:18,300
what this rule is doing is accepting

00:14:11,629 --> 00:14:20,670
packets to the typical sshd port the

00:14:18,300 --> 00:14:23,579
next rule would delete the corresponding

00:14:20,670 --> 00:14:24,540
rule that we just inserted and this note

00:14:23,579 --> 00:14:26,160
down at the bottom that will be

00:14:24,540 --> 00:14:28,290
important later we're going to touch on

00:14:26,160 --> 00:14:34,709
that quite a bit more but long story

00:14:28,290 --> 00:14:38,009
short if you have if you have a rule set

00:14:34,709 --> 00:14:41,420
and you do in a day and a pen the rule

00:14:38,009 --> 00:14:44,309
is tacked on to the end of the ruleset

00:14:41,420 --> 00:14:46,350
next is to insert a rule at a particular

00:14:44,309 --> 00:14:50,819
place in the team would work like this

00:14:46,350 --> 00:14:54,329
this would take a rule to accept traffic

00:14:50,819 --> 00:14:56,370
on port 110 TCP protocol at position

00:14:54,329 --> 00:14:58,350
number two in your rule set instead of

00:14:56,370 --> 00:15:00,149
tacking it on to the end of the chain it

00:14:58,350 --> 00:15:04,529
takes it on at position number two and

00:15:00,149 --> 00:15:07,290
bumps everything below that downward you

00:15:04,529 --> 00:15:10,649
can also delete a row from attained by

00:15:07,290 --> 00:15:11,560
the rule number this particular example

00:15:10,649 --> 00:15:13,420
command

00:15:11,560 --> 00:15:15,070
would delete rule number two in other

00:15:13,420 --> 00:15:17,860
words it would delete what we just added

00:15:15,070 --> 00:15:23,050
in the previous slide of course the

00:15:17,860 --> 00:15:25,000
question at this point it question the

00:15:23,050 --> 00:15:26,740
question at this point probably becomes

00:15:25,000 --> 00:15:29,460
well how do I know what's at rule or

00:15:26,740 --> 00:15:32,050
what's at position number two and

00:15:29,460 --> 00:15:34,180
probably you'd want to use the line

00:15:32,050 --> 00:15:36,010
number of switch and the dash l which is

00:15:34,180 --> 00:15:43,870
the list come in to get the line numbers

00:15:36,010 --> 00:15:46,600
go ahead sir oh yeah yes we're going to

00:15:43,870 --> 00:15:48,100
touch on that well assuming time

00:15:46,600 --> 00:15:50,560
constraints don't play an issue but yes

00:15:48,100 --> 00:15:52,660
they are and we'll touch on that more up

00:15:50,560 --> 00:15:55,089
later it's one of those things where

00:15:52,660 --> 00:15:56,560
it's hard to talk about that without the

00:15:55,089 --> 00:16:01,720
basics in place but you are indeed

00:15:56,560 --> 00:16:03,490
correct um flushing rules from a chain

00:16:01,720 --> 00:16:07,029
if you want to clear out all the rules

00:16:03,490 --> 00:16:09,250
you have something like this these

00:16:07,029 --> 00:16:10,960
particular examples the first one it's

00:16:09,250 --> 00:16:13,210
going to clear out the filter tables

00:16:10,960 --> 00:16:16,740
input rules the second will clear out

00:16:13,210 --> 00:16:19,270
the net tables post routing chain rules

00:16:16,740 --> 00:16:22,180
if you want to zero the packet counters

00:16:19,270 --> 00:16:26,980
packet counters basically a nice

00:16:22,180 --> 00:16:29,290
troubleshooting tool it's more often

00:16:26,980 --> 00:16:33,700
than I would like that I put in the

00:16:29,290 --> 00:16:36,820
perfect set of firewall rules and the

00:16:33,700 --> 00:16:38,260
darn things still don't work and this is

00:16:36,820 --> 00:16:41,020
where you look at packet counters to

00:16:38,260 --> 00:16:44,230
find out exactly which rules are seeing

00:16:41,020 --> 00:16:46,210
packets and if those perfect firewall

00:16:44,230 --> 00:16:48,220
rules are seeing zero for the packet

00:16:46,210 --> 00:16:50,650
counters maybe they weren't so perfect

00:16:48,220 --> 00:16:52,630
after all and then you look at which

00:16:50,650 --> 00:16:54,700
ones are seeing packets they shouldn't

00:16:52,630 --> 00:17:00,550
be and give you some sort of hint as to

00:16:54,700 --> 00:17:02,560
where to look note that earlier the

00:17:00,550 --> 00:17:05,470
default chain if you don't specify one

00:17:02,560 --> 00:17:08,620
is filter and that also applies to this

00:17:05,470 --> 00:17:13,689
particular command we could have

00:17:08,620 --> 00:17:17,890
actually left off I hate touch pads just

00:17:13,689 --> 00:17:19,510
to remind you of that okay I'm just

00:17:17,890 --> 00:17:22,420
going to give that up we could have left

00:17:19,510 --> 00:17:24,910
off the part Dashti filter because

00:17:22,420 --> 00:17:26,939
that's that's implied if you don't say

00:17:24,910 --> 00:17:26,939
anything

00:17:28,080 --> 00:17:33,399
if you want to set the default chain

00:17:30,279 --> 00:17:36,250
policy here's how you do it as an

00:17:33,399 --> 00:17:39,519
example this would set the filter tables

00:17:36,250 --> 00:17:43,179
input chain policy to drop the way the

00:17:39,519 --> 00:17:45,880
chain policies work is if no rules match

00:17:43,179 --> 00:17:47,679
or if your packet doesn't or if they

00:17:45,880 --> 00:17:50,590
pack it coming in doesn't match any of

00:17:47,679 --> 00:17:52,539
the rules that are set up this is what

00:17:50,590 --> 00:17:54,039
happens to it it gets dropped or

00:17:52,539 --> 00:18:01,779
accepted depending on what you set the

00:17:54,039 --> 00:18:04,690
chain policy to oops we'll talk more

00:18:01,779 --> 00:18:08,679
later on suggested policies for each

00:18:04,690 --> 00:18:10,480
chain because there are some some pros

00:18:08,679 --> 00:18:12,070
and cons to how you set your chain

00:18:10,480 --> 00:18:15,519
policies and we'll try to get some time

00:18:12,070 --> 00:18:18,389
to touch on those creating custom chains

00:18:15,519 --> 00:18:20,649
again here's the syntax on that

00:18:18,389 --> 00:18:23,260
basically this will create a custom

00:18:20,649 --> 00:18:25,120
state teen in the filter table I'll try

00:18:23,260 --> 00:18:28,269
to touch on again this is all going to

00:18:25,120 --> 00:18:31,179
depend on time but usage of custom

00:18:28,269 --> 00:18:32,769
chains and how they can be handy as the

00:18:31,179 --> 00:18:35,049
gentleman in the back earlier was

00:18:32,769 --> 00:18:38,230
mentioning about optimizing rule sets

00:18:35,049 --> 00:18:40,960
and how the packets are our rules are

00:18:38,230 --> 00:18:43,840
applied in the order that they're that

00:18:40,960 --> 00:18:46,750
they occur whether they entered so

00:18:43,840 --> 00:18:48,460
ideally you want your earliest rules to

00:18:46,750 --> 00:18:50,980
be the ones that the most packets are

00:18:48,460 --> 00:18:52,990
going to be matching against for example

00:18:50,980 --> 00:18:56,590
if you know that this is a web server

00:18:52,990 --> 00:18:58,809
and most of the traffic it gets is on

00:18:56,590 --> 00:19:01,210
port 80 then you want to go ahead and

00:18:58,809 --> 00:19:03,309
have your early rules accepting all of

00:19:01,210 --> 00:19:05,169
that stuff because there's no need to

00:19:03,309 --> 00:19:07,080
compare the ninety percent of your

00:19:05,169 --> 00:19:10,450
traffic on port 80 against the rules for

00:19:07,080 --> 00:19:12,880
ssh just as an example and this is where

00:19:10,450 --> 00:19:14,919
customs hands come in you can early on

00:19:12,880 --> 00:19:17,200
go ahead and for example this state

00:19:14,919 --> 00:19:19,659
chain create rules to match against

00:19:17,200 --> 00:19:21,309
establish and related connections knock

00:19:19,659 --> 00:19:23,799
those out because that's going to be the

00:19:21,309 --> 00:19:30,610
vast majority of your traffic anyway but

00:19:23,799 --> 00:19:32,320
again more on that later if you create

00:19:30,610 --> 00:19:33,909
this state teen obviously you're going

00:19:32,320 --> 00:19:35,110
to need to jump to that chain from some

00:19:33,909 --> 00:19:38,919
of your other rules and there's how you

00:19:35,110 --> 00:19:41,379
would there's how you would do it

00:19:38,919 --> 00:19:43,629
and by the way those of you trying to

00:19:41,379 --> 00:19:45,789
make notes you really probably don't

00:19:43,629 --> 00:19:47,919
need to I've got a copy of this

00:19:45,789 --> 00:19:49,539
presentation that I'll show you a link

00:19:47,919 --> 00:19:52,389
to at the end you can just pull it off

00:19:49,539 --> 00:19:55,359
the internet there's no need to be

00:19:52,389 --> 00:20:00,129
making notes remember it's your call

00:19:55,359 --> 00:20:05,279
doesn't matter to make a good name my

00:20:00,129 --> 00:20:07,809
students would be appalled anyway

00:20:05,279 --> 00:20:09,909
deleting custom chains exactly the same

00:20:07,809 --> 00:20:13,419
is creating them except use the dash X

00:20:09,909 --> 00:20:15,549
flag or option just an example remove

00:20:13,419 --> 00:20:18,100
the state chain we created earlier note

00:20:15,549 --> 00:20:19,869
that when you remove a custom chain for

00:20:18,100 --> 00:20:21,519
example this state teen we can't have

00:20:19,869 --> 00:20:23,769
any other rules in our rule set that

00:20:21,519 --> 00:20:25,779
jump to that team at that chain

00:20:23,769 --> 00:20:28,359
basically is in use by other rule is

00:20:25,779 --> 00:20:29,830
jumping to it and iptables is going to

00:20:28,359 --> 00:20:31,299
barf out an error for you and tell you

00:20:29,830 --> 00:20:33,129
that you can't remove this because it's

00:20:31,299 --> 00:20:37,899
a noose or something along those lines I

00:20:33,129 --> 00:20:41,080
think it'll be obvious planning this is

00:20:37,899 --> 00:20:42,700
where we get into the nitty-gritty when

00:20:41,080 --> 00:20:46,239
you're working out a firewall rule set

00:20:42,700 --> 00:20:48,759
from you can certainly approach it from

00:20:46,239 --> 00:20:51,009
the let's just start writing this and

00:20:48,759 --> 00:20:53,980
see how it turns out to be honest with

00:20:51,009 --> 00:20:56,279
you I usually do it that way sometimes

00:20:53,980 --> 00:20:58,629
it works out sometimes it doesn't but

00:20:56,279 --> 00:21:00,009
ideally you want to sit down and kind of

00:20:58,629 --> 00:21:01,600
plant out you know what's the intended

00:21:00,009 --> 00:21:03,789
purpose of the box is this going to be a

00:21:01,600 --> 00:21:05,649
firewall rule set for us you know single

00:21:03,789 --> 00:21:07,749
workstation it's just for a router

00:21:05,649 --> 00:21:09,190
gateway it's a multi-purpose router

00:21:07,749 --> 00:21:13,450
gateway that's going to be running

00:21:09,190 --> 00:21:16,749
Apache and FTP servers and so on and so

00:21:13,450 --> 00:21:18,429
forth and whatnot so make sure you know

00:21:16,749 --> 00:21:20,739
what the purpose of the box what is

00:21:18,429 --> 00:21:22,119
expected what type of traffic is the box

00:21:20,739 --> 00:21:23,649
expecting because those are the things

00:21:22,119 --> 00:21:26,200
you're going to have to allow you in on

00:21:23,649 --> 00:21:27,730
your rule set if it's going to be a

00:21:26,200 --> 00:21:29,679
router and gateway are there any

00:21:27,730 --> 00:21:31,149
services inside the local network that

00:21:29,679 --> 00:21:33,759
have to be available to the outside

00:21:31,149 --> 00:21:35,470
again this is where the you're running

00:21:33,759 --> 00:21:37,419
the web server on the separate box

00:21:35,470 --> 00:21:39,279
inside your local network or you've got

00:21:37,419 --> 00:21:43,929
a separate box that serves is just a

00:21:39,279 --> 00:21:46,029
secure shell gateway do you need to do

00:21:43,929 --> 00:21:48,340
egress filtering in other words do you

00:21:46,029 --> 00:21:51,000
need to filter packets leaving the local

00:21:48,340 --> 00:21:54,300
network um

00:21:51,000 --> 00:21:56,430
my colleague Rob McGee has a saying that

00:21:54,300 --> 00:21:58,740
if you don't know how to do this without

00:21:56,430 --> 00:22:02,580
asking questions that means you don't

00:21:58,740 --> 00:22:04,320
need to do it because it's really not as

00:22:02,580 --> 00:22:05,790
simple as it sounds and yes that's

00:22:04,320 --> 00:22:08,970
another of those things I learn the hard

00:22:05,790 --> 00:22:10,740
way you can go through and open up port

00:22:08,970 --> 00:22:12,780
80 and all the other things that you

00:22:10,740 --> 00:22:14,370
think you need for you know your browser

00:22:12,780 --> 00:22:16,320
is going to have to go out on port 80

00:22:14,370 --> 00:22:20,310
and so on and so forth and you think

00:22:16,320 --> 00:22:22,770
I've got it everything is done and lo

00:22:20,310 --> 00:22:26,130
and behold you forgot to open it allow

00:22:22,770 --> 00:22:29,490
53 out so you can't do any name server

00:22:26,130 --> 00:22:33,800
lookups and suddenly nothing works and

00:22:29,490 --> 00:22:36,600
there's others but egress filtering

00:22:33,800 --> 00:22:40,080
depending upon your needs probably isn't

00:22:36,600 --> 00:22:43,560
worth the effort but as always there's

00:22:40,080 --> 00:22:45,150
exceptions and there's always the

00:22:43,560 --> 00:22:47,130
academic reasons for doing it just

00:22:45,150 --> 00:22:50,720
because hey I want to see if I can do

00:22:47,130 --> 00:22:54,540
this and that's perfectly legitimate

00:22:50,720 --> 00:22:56,730
setting same policy remember that chain

00:22:54,540 --> 00:22:58,590
policy decides what happens to packets

00:22:56,730 --> 00:23:00,570
when they fall off the chain in other

00:22:58,590 --> 00:23:02,940
words if packet doesn't match any of the

00:23:00,570 --> 00:23:05,370
rules that it sees the policy is what

00:23:02,940 --> 00:23:07,800
applies if that policy is dropped it

00:23:05,370 --> 00:23:10,050
gets dropped if that policy is accept it

00:23:07,800 --> 00:23:12,780
gets accepted note that there is not a

00:23:10,050 --> 00:23:15,060
reject policy this is also a common

00:23:12,780 --> 00:23:16,890
thing that happens someone uses reject

00:23:15,060 --> 00:23:19,020
as the policy there's no such creature

00:23:16,890 --> 00:23:21,140
and by the way in case you didn't know

00:23:19,020 --> 00:23:24,780
the difference between drop and reject

00:23:21,140 --> 00:23:25,980
drop exactly what the name implies the

00:23:24,780 --> 00:23:30,270
package is just thrown in the garbage

00:23:25,980 --> 00:23:31,980
can reject means that an actual reply

00:23:30,270 --> 00:23:34,140
some sort of acknowledgement that says

00:23:31,980 --> 00:23:35,580
we didn't just drop this packet in the

00:23:34,140 --> 00:23:37,320
garbage we're going to tell you we threw

00:23:35,580 --> 00:23:39,960
it in the garbage it's I guess the

00:23:37,320 --> 00:23:42,900
Usenet equivalent of plonk for those of

00:23:39,960 --> 00:23:44,430
you who are familiar with using it we're

00:23:42,900 --> 00:23:45,990
not just going to ignore your postings

00:23:44,430 --> 00:23:48,420
we're going to tell you will ignore your

00:23:45,990 --> 00:23:51,030
postings so but there is no reject

00:23:48,420 --> 00:23:52,650
policy so if that's what you want this

00:23:51,030 --> 00:23:56,420
is where it can be comes handy to create

00:23:52,650 --> 00:24:00,330
a custom team called reject put the

00:23:56,420 --> 00:24:04,250
particular reject rules in that and then

00:24:00,330 --> 00:24:04,250
jump to that reject chain

00:24:05,169 --> 00:24:11,360
correct great that the the end of the

00:24:09,320 --> 00:24:15,470
list so to speak is your chain policy

00:24:11,360 --> 00:24:18,440
it's whatever you set and as far as what

00:24:15,470 --> 00:24:23,120
the default is honestly that depends on

00:24:18,440 --> 00:24:28,159
how you how you define default the

00:24:23,120 --> 00:24:31,159
colonel default is accept everything by

00:24:28,159 --> 00:24:33,380
default basically the only exception to

00:24:31,159 --> 00:24:38,210
that would be forwarding packets I

00:24:33,380 --> 00:24:41,090
believe the IP forward to a prop flag is

00:24:38,210 --> 00:24:43,460
always set to zero by default but as far

00:24:41,090 --> 00:24:45,500
as if you build a vanilla Colonel on a

00:24:43,460 --> 00:24:47,690
distribution that's not setting up

00:24:45,500 --> 00:24:49,100
firewall rules by default everything is

00:24:47,690 --> 00:24:51,080
going to be accepted going out in the

00:24:49,100 --> 00:24:54,230
end by default now there are some

00:24:51,080 --> 00:24:56,210
distributions I know for sure red hat I

00:24:54,230 --> 00:24:58,700
can't say for sure on some of the others

00:24:56,210 --> 00:25:02,390
that do ship a default firewalls rule

00:24:58,700 --> 00:25:04,940
set that I may do various other things

00:25:02,390 --> 00:25:08,029
and I really can't speak to what they

00:25:04,940 --> 00:25:09,440
might do so those types of as far as

00:25:08,029 --> 00:25:13,309
that would go you need to go look at

00:25:09,440 --> 00:25:15,640
your distribution as far as default

00:25:13,309 --> 00:25:20,149
accept or drop policy which one you need

00:25:15,640 --> 00:25:22,070
depends on your needs ah the

00:25:20,149 --> 00:25:25,340
recommendation tends to be that drop

00:25:22,070 --> 00:25:29,029
policy is better for your filter table

00:25:25,340 --> 00:25:32,270
so that if I guess it's a security by

00:25:29,029 --> 00:25:35,210
default thing that if for whatever

00:25:32,270 --> 00:25:38,240
reason you forget to explicitly

00:25:35,210 --> 00:25:41,899
configure a drop for something or you

00:25:38,240 --> 00:25:44,270
open up a new service on accident I know

00:25:41,899 --> 00:25:46,309
that's happened to me I'm sure it's

00:25:44,270 --> 00:25:48,770
happened to lots of other sis admins

00:25:46,309 --> 00:25:50,720
where you're testing something and you

00:25:48,770 --> 00:25:53,000
forget that you left the service open

00:25:50,720 --> 00:25:54,799
that you know that RC Damon that you

00:25:53,000 --> 00:25:56,899
were just going to play with and see if

00:25:54,799 --> 00:25:59,419
it would work and then you forgot and

00:25:56,899 --> 00:26:02,870
left it open and suddenly you have all

00:25:59,419 --> 00:26:05,390
sorts of people on your rst name so a

00:26:02,870 --> 00:26:07,520
default drop policy kind of mitigates

00:26:05,390 --> 00:26:09,559
the hazards associated with that because

00:26:07,520 --> 00:26:12,500
unless you explicitly open up a port to

00:26:09,559 --> 00:26:13,909
the outside it's closed but you know

00:26:12,500 --> 00:26:15,410
there may be some circumstances where

00:26:13,909 --> 00:26:18,500
you want that it

00:26:15,410 --> 00:26:20,240
again that's at your call the output

00:26:18,500 --> 00:26:22,880
chain again this is where that comes up

00:26:20,240 --> 00:26:26,810
probably a default accept policy is

00:26:22,880 --> 00:26:29,000
better than the output chain rule order

00:26:26,810 --> 00:26:30,590
this kind of touches on the question

00:26:29,000 --> 00:26:34,340
from the gentleman earlier rule order is

00:26:30,590 --> 00:26:35,810
important there the rules are applied to

00:26:34,340 --> 00:26:37,520
packets in the order in which the

00:26:35,810 --> 00:26:41,420
packets rat or the rules were added to

00:26:37,520 --> 00:26:43,100
the to the team now that's per chain in

00:26:41,420 --> 00:26:45,890
other words you had a rule to the input

00:26:43,100 --> 00:26:47,960
chain you had another one there one and

00:26:45,890 --> 00:26:50,720
two you had a room for the output team

00:26:47,960 --> 00:26:53,510
that's a completely separate order it's

00:26:50,720 --> 00:26:57,080
not like every chain is is looked at for

00:26:53,510 --> 00:27:00,920
every packet that goes back to the early

00:26:57,080 --> 00:27:03,650
part of this where winch chain see wins

00:27:00,920 --> 00:27:08,020
packets versus source and destination

00:27:03,650 --> 00:27:11,570
and all that but rule order is important

00:27:08,020 --> 00:27:13,850
just as an example if you append you

00:27:11,570 --> 00:27:18,050
tack on a rule to the end of the filter

00:27:13,850 --> 00:27:21,410
tables input chain system you drop

00:27:18,050 --> 00:27:24,170
something but you tack on the rule to

00:27:21,410 --> 00:27:27,320
the filter tables input chain to drop

00:27:24,170 --> 00:27:30,230
packets on port 22 and then you say oh

00:27:27,320 --> 00:27:31,700
yeah but I need to accept port 22

00:27:30,230 --> 00:27:35,570
because I want to be able to get in on

00:27:31,700 --> 00:27:37,130
ssh from such-and-such IP address the

00:27:35,570 --> 00:27:41,210
problem you're about to experience is

00:27:37,130 --> 00:27:43,570
that you have a drop rule first for

00:27:41,210 --> 00:27:48,470
everything and then a more specific

00:27:43,570 --> 00:27:51,950
except rule from Bob slacker calm or

00:27:48,470 --> 00:27:53,990
wherever the thing is that packet coming

00:27:51,950 --> 00:27:56,720
in is going to see this drop first so

00:27:53,990 --> 00:27:58,430
it's dropped your accept rule will never

00:27:56,720 --> 00:28:00,980
be looked at remember the packet

00:27:58,430 --> 00:28:03,440
counters hint this is where it comes in

00:28:00,980 --> 00:28:05,180
handy you see that the drop rule is

00:28:03,440 --> 00:28:07,790
seeing too many packets and the accept

00:28:05,180 --> 00:28:09,560
rule is not seeing enough and gives you

00:28:07,790 --> 00:28:12,350
some troubleshooting hints so the first

00:28:09,560 --> 00:28:15,860
matching rule wins there is an exception

00:28:12,350 --> 00:28:18,890
to that there are some things called non

00:28:15,860 --> 00:28:21,890
terminating targets the log target the

00:28:18,890 --> 00:28:23,360
you log target the no track there are a

00:28:21,890 --> 00:28:26,780
few others i think i mentioned the next

00:28:23,360 --> 00:28:28,600
in the presentation um basically the

00:28:26,780 --> 00:28:32,320
idea is that if you

00:28:28,600 --> 00:28:33,880
want to log a specific packet you don't

00:28:32,320 --> 00:28:36,700
want that to be the last thing that

00:28:33,880 --> 00:28:40,300
happens because if you log it that means

00:28:36,700 --> 00:28:43,690
it wasn't accepted or wasn't dropped or

00:28:40,300 --> 00:28:45,670
so what happened to it so those are non

00:28:43,690 --> 00:28:48,460
terminating targets they don't in the

00:28:45,670 --> 00:28:51,850
processing doesn't stop there it goes on

00:28:48,460 --> 00:28:54,670
past that some other examples i

00:28:51,850 --> 00:28:57,640
mentioned log and you log no track the

00:28:54,670 --> 00:28:59,170
marked target and some others any other

00:28:57,640 --> 00:29:01,570
one suitable for the mangled table

00:28:59,170 --> 00:29:04,990
probably the mangled table is one that

00:29:01,570 --> 00:29:07,960
most of us will never have any excuse me

00:29:04,990 --> 00:29:11,740
will never have any need to use one good

00:29:07,960 --> 00:29:13,420
example of where it comes in handy and

00:29:11,740 --> 00:29:17,880
you'll be familiar with the concept of

00:29:13,420 --> 00:29:20,770
tarp hitting a connection okay if you

00:29:17,880 --> 00:29:22,390
basically if you were going to tar pit a

00:29:20,770 --> 00:29:25,690
connection because of the way that works

00:29:22,390 --> 00:29:28,030
you probably want to send those packets

00:29:25,690 --> 00:29:31,240
through the raw tables no track target

00:29:28,030 --> 00:29:33,370
first to tell your the colonel not to

00:29:31,240 --> 00:29:35,680
track those connections in essence don't

00:29:33,370 --> 00:29:37,720
allocate memory to keeping track of

00:29:35,680 --> 00:29:40,990
these connections because you don't care

00:29:37,720 --> 00:29:43,750
about them the idea is not to exhaust

00:29:40,990 --> 00:29:46,180
your system resources it's to exhaust

00:29:43,750 --> 00:29:48,010
the other ends resources so you don't

00:29:46,180 --> 00:29:49,630
want to track those but that's just an

00:29:48,010 --> 00:29:52,330
example probably most of us won't have

00:29:49,630 --> 00:29:57,370
any use for that aside from general

00:29:52,330 --> 00:30:01,480
mischief and mayhem the you logged

00:29:57,370 --> 00:30:04,500
target for those of you that for

00:30:01,480 --> 00:30:07,890
whatever reason want to keep logs of

00:30:04,500 --> 00:30:09,910
what happens in your firewall and

00:30:07,890 --> 00:30:17,200
probably you're going to want to look at

00:30:09,910 --> 00:30:18,160
you log be crap in order to use the you

00:30:17,200 --> 00:30:19,540
log targets you'll have to have

00:30:18,160 --> 00:30:23,440
something called you log B it was

00:30:19,540 --> 00:30:26,590
written by one of the old say old one of

00:30:23,440 --> 00:30:31,150
the early iptables developers and Harold

00:30:26,590 --> 00:30:33,820
loyalty but it basically logs all of

00:30:31,150 --> 00:30:37,510
your firewall rules into a separate foul

00:30:33,820 --> 00:30:39,490
as opposed to spamming your your I think

00:30:37,510 --> 00:30:41,799
it's for log messages is worth

00:30:39,490 --> 00:30:47,590
everything would go by default

00:30:41,799 --> 00:30:52,570
um but on that note probably you don't

00:30:47,590 --> 00:30:55,840
want to really log much at all logging

00:30:52,570 --> 00:30:57,999
all drops packets while perhaps good

00:30:55,840 --> 00:31:00,669
from a statistical point of view if

00:30:57,999 --> 00:31:02,200
you're just curious about what kind of

00:31:00,669 --> 00:31:05,559
traffic you're seeing from the Internet

00:31:02,200 --> 00:31:07,330
at large or if you're doing

00:31:05,559 --> 00:31:09,669
troubleshooting and you actually want to

00:31:07,330 --> 00:31:11,049
see the drop traffic because you have

00:31:09,669 --> 00:31:13,539
something that doesn't work and it's

00:31:11,049 --> 00:31:15,009
supposed to or you know as an example it

00:31:13,539 --> 00:31:19,239
doesn't work and your wife says it needs

00:31:15,009 --> 00:31:20,799
to our husband as the case may be or

00:31:19,239 --> 00:31:24,460
boyfriend girlfriend whatever I want to

00:31:20,799 --> 00:31:27,269
offend anybody too bad the point is

00:31:24,460 --> 00:31:31,499
those types of cases are where logs

00:31:27,269 --> 00:31:34,989
might be handy but honestly otherwise

00:31:31,499 --> 00:31:36,429
logs are just taking up space so you

00:31:34,989 --> 00:31:37,960
probably just don't want to log a whole

00:31:36,429 --> 00:31:39,879
lot that's one of those things that

00:31:37,960 --> 00:31:44,859
usually stays commented out in my rule

00:31:39,879 --> 00:31:48,970
sets you take the time I'm sorry I'd

00:31:44,859 --> 00:31:51,549
okay good we're in good shape all right

00:31:48,970 --> 00:31:57,149
so let's do a quick sample workstation

00:31:51,549 --> 00:32:00,899
rule set again this is just for a single

00:31:57,149 --> 00:32:04,600
user workstation quite frankly the

00:32:00,899 --> 00:32:07,119
gateway router it's a little too complex

00:32:04,600 --> 00:32:09,940
and too many choices that you would have

00:32:07,119 --> 00:32:11,739
to make to really get into an example of

00:32:09,940 --> 00:32:14,919
that here and probably we don't have

00:32:11,739 --> 00:32:16,330
time anyway so just a simple workstation

00:32:14,919 --> 00:32:19,989
here we'll set our default chain

00:32:16,330 --> 00:32:23,019
policies will set our input policy to

00:32:19,989 --> 00:32:25,509
drop forward policy to drop because and

00:32:23,019 --> 00:32:27,970
the reason for forward to drop remember

00:32:25,509 --> 00:32:31,029
this is a workstation this is my desktop

00:32:27,970 --> 00:32:34,499
or my laptop there's no need for me to

00:32:31,029 --> 00:32:37,359
be forwarding packets from the internet

00:32:34,499 --> 00:32:39,669
to any other box or vice versa because

00:32:37,359 --> 00:32:41,999
there are no other boxes behind it so

00:32:39,669 --> 00:32:44,679
forward policy should just be dropped

00:32:41,999 --> 00:32:47,169
input drop meaning everything coming to

00:32:44,679 --> 00:32:49,809
the laptop by default is dropped unless

00:32:47,169 --> 00:32:52,039
some other rule allows it and will allow

00:32:49,809 --> 00:32:57,289
an output policy to accept

00:32:52,039 --> 00:33:03,379
more on that a little bit um I just said

00:32:57,289 --> 00:33:05,779
all that oops okay so we've got our teen

00:33:03,379 --> 00:33:07,669
policies probably first we want to

00:33:05,779 --> 00:33:11,899
remove any existing rules from our rule

00:33:07,669 --> 00:33:14,899
set and that's how we do it since we did

00:33:11,899 --> 00:33:17,809
not specify a table or 18 this rule

00:33:14,899 --> 00:33:21,019
defaults to use the filter table and all

00:33:17,809 --> 00:33:22,549
change in that table so these next three

00:33:21,019 --> 00:33:25,879
things as you see would do the same

00:33:22,549 --> 00:33:28,999
thing with a lot more typing and because

00:33:25,879 --> 00:33:32,809
we nicked guys are inherently lazy we

00:33:28,999 --> 00:33:37,489
use the first method right okay maybe

00:33:32,809 --> 00:33:38,720
not but I do I'm lazy I guess next will

00:33:37,489 --> 00:33:47,210
allow all traffic on the loopback

00:33:38,720 --> 00:33:50,239
interface loopback interface first of

00:33:47,210 --> 00:33:54,200
all one of these is kind of redundant

00:33:50,239 --> 00:33:57,769
note that we have a output rule set to

00:33:54,200 --> 00:33:59,749
accept the traffic but we just in the

00:33:57,769 --> 00:34:02,899
previous slide or two back we set the

00:33:59,749 --> 00:34:05,989
output policy to accept so technically

00:34:02,899 --> 00:34:07,720
we don't need this output rule it's

00:34:05,989 --> 00:34:17,389
redundant it doesn't serve any purpose

00:34:07,720 --> 00:34:19,339
but here's why we did that oh sorry

00:34:17,389 --> 00:34:21,829
thank you glad you're hearing is better

00:34:19,339 --> 00:34:27,079
than I our worse than nine is a case may

00:34:21,829 --> 00:34:29,569
be so we add this output rule just to be

00:34:27,079 --> 00:34:31,970
safe basically the loopback interface is

00:34:29,569 --> 00:34:34,520
how the machine talks to itself yes

00:34:31,970 --> 00:34:36,859
they're all insane they do that and if

00:34:34,520 --> 00:34:39,770
you don't allow traffic on the loopback

00:34:36,859 --> 00:34:41,059
interface bad things happen and we'll

00:34:39,770 --> 00:34:42,649
just leave it at that so you always want

00:34:41,059 --> 00:34:45,859
the machine to be able to talk back and

00:34:42,649 --> 00:34:48,799
forth to itself so we'll make sure we've

00:34:45,859 --> 00:34:50,329
done that next we're going to tell the

00:34:48,799 --> 00:34:52,280
colonel to always accept incoming

00:34:50,329 --> 00:34:54,950
traffic that belongs to establish

00:34:52,280 --> 00:34:59,359
connections and traffic thats related to

00:34:54,950 --> 00:35:01,460
establish connections I think I've got a

00:34:59,359 --> 00:35:02,960
discussion in a little bit about more

00:35:01,460 --> 00:35:05,119
about what that means what each of those

00:35:02,960 --> 00:35:09,019
means if not all I'll add

00:35:05,119 --> 00:35:14,210
of it but here's the role to do that now

00:35:09,019 --> 00:35:16,099
note that this assumes that s0 is your

00:35:14,210 --> 00:35:18,890
internet-connected interface if it

00:35:16,099 --> 00:35:21,799
happens to be different then sure you

00:35:18,890 --> 00:35:25,220
use a different one but each of these

00:35:21,799 --> 00:35:28,130
flags the dash I flag is interface

00:35:25,220 --> 00:35:29,390
dashing young specifies to load a some

00:35:28,130 --> 00:35:32,269
sort of module we're going to load the

00:35:29,390 --> 00:35:35,089
connection tracking module and then the

00:35:32,269 --> 00:35:37,759
CT state is a flag of the connection

00:35:35,089 --> 00:35:39,410
track module until it to look at the

00:35:37,759 --> 00:35:41,230
connection tracking state established

00:35:39,410 --> 00:35:45,319
and related and accept those packets

00:35:41,230 --> 00:35:46,910
probably for almost everyone you'll want

00:35:45,319 --> 00:35:49,309
that to be one of your first rules

00:35:46,910 --> 00:35:51,349
because the vast majority of the packets

00:35:49,309 --> 00:35:54,440
that you care about and the key is that

00:35:51,349 --> 00:35:56,480
you care about coming into your box are

00:35:54,440 --> 00:35:59,809
going to be in one of those two states

00:35:56,480 --> 00:36:03,039
and so for optimization purposes you

00:35:59,809 --> 00:36:03,039
want that to be one of your first rules

00:36:03,430 --> 00:36:09,440
note that we didn't specify a protocol

00:36:06,279 --> 00:36:13,519
or a source and destination address our

00:36:09,440 --> 00:36:16,369
port there may very well be an exception

00:36:13,519 --> 00:36:18,619
to this but generally speaking if you

00:36:16,369 --> 00:36:21,710
don't specify something if you don't

00:36:18,619 --> 00:36:23,930
specify a protocol the default is all of

00:36:21,710 --> 00:36:26,150
them if you don't specify a source port

00:36:23,930 --> 00:36:28,730
that means every source port if you

00:36:26,150 --> 00:36:31,999
don't specify a destination address that

00:36:28,730 --> 00:36:34,400
means every destination address so in

00:36:31,999 --> 00:36:36,950
this particular case we don't care where

00:36:34,400 --> 00:36:38,930
the packets coming from what port it's

00:36:36,950 --> 00:36:42,739
coming from what port is going to

00:36:38,930 --> 00:36:45,079
locally what you know what protocol it

00:36:42,739 --> 00:36:47,989
is if it's in one of these two states

00:36:45,079 --> 00:36:49,989
established or related it's okay with us

00:36:47,989 --> 00:36:52,150
we want to go ahead and accept it and

00:36:49,989 --> 00:36:54,789
but you have to be careful with that

00:36:52,150 --> 00:36:57,980
there are some situations where you can

00:36:54,789 --> 00:36:59,269
pass incompatible options and i'll give

00:36:57,980 --> 00:37:06,579
you an example in a couple of slides

00:36:59,269 --> 00:37:06,579
down here we go oops

00:37:08,070 --> 00:37:13,960
the established connection probably is

00:37:10,900 --> 00:37:16,570
pretty self-explanatory I guess so not

00:37:13,960 --> 00:37:18,460
much explanation needed to that related

00:37:16,570 --> 00:37:23,530
perhaps isn't quite as self-explanatory

00:37:18,460 --> 00:37:27,310
um ftp is a good example of where you

00:37:23,530 --> 00:37:30,130
need the related rules on to summarize

00:37:27,310 --> 00:37:32,740
ftp is i guess you could argue as an

00:37:30,130 --> 00:37:34,240
insane protocol in that you go out with

00:37:32,740 --> 00:37:36,250
the client to a server and the server

00:37:34,240 --> 00:37:39,610
then connects back to you on a different

00:37:36,250 --> 00:37:42,430
port and prior to connection tracking

00:37:39,610 --> 00:37:45,340
and you had to basically open that

00:37:42,430 --> 00:37:48,640
believe that port wide open and so now

00:37:45,340 --> 00:37:50,800
with this connection tracking or state

00:37:48,640 --> 00:37:54,640
tracking where you can say if we make a

00:37:50,800 --> 00:37:57,820
connection to ftp dot wherever calm and

00:37:54,640 --> 00:38:00,130
then ftp dot wherever calm tries to

00:37:57,820 --> 00:38:02,470
connect back to us on 420 that's ok

00:38:00,130 --> 00:38:04,510
that's a related to connection it's not

00:38:02,470 --> 00:38:06,340
part of the same connection because well

00:38:04,510 --> 00:38:08,290
it's not in the same stream but it is

00:38:06,340 --> 00:38:11,320
related and this tells the colonel to

00:38:08,290 --> 00:38:14,770
accept that icmp air packets there are

00:38:11,320 --> 00:38:17,050
also examples of related or usually

00:38:14,770 --> 00:38:19,180
examples of related packets so we

00:38:17,050 --> 00:38:22,180
usually want to accept those i can't

00:38:19,180 --> 00:38:25,090
think of any any valid reason why you

00:38:22,180 --> 00:38:27,190
wouldn't but there's probably some out

00:38:25,090 --> 00:38:33,580
there and if you know one feel free to

00:38:27,190 --> 00:38:35,080
speak up okay good well as we mentioned

00:38:33,580 --> 00:38:36,670
in the previous slide or actually

00:38:35,080 --> 00:38:38,770
there's two slides back something is not

00:38:36,670 --> 00:38:40,510
specified then that basically the

00:38:38,770 --> 00:38:42,520
default is it means anything or

00:38:40,510 --> 00:38:46,720
everything just an example of

00:38:42,520 --> 00:38:49,410
incompatible options would be this by

00:38:46,720 --> 00:38:49,410
happy to see one

00:38:53,319 --> 00:38:56,160
no would

00:38:59,170 --> 00:39:08,470
are you almost there ah here we go it's

00:39:05,109 --> 00:39:10,319
the teacher coming out of me sorry um so

00:39:08,470 --> 00:39:13,780
we didn't specify our protocol here and

00:39:10,319 --> 00:39:16,720
that means any protocol problem is that

00:39:13,780 --> 00:39:19,030
some protocols don't have a concept of

00:39:16,720 --> 00:39:22,329
ports and we also specified a

00:39:19,030 --> 00:39:24,700
destination port of 22 so since you

00:39:22,329 --> 00:39:29,220
obviously have a conflict here you have

00:39:24,700 --> 00:39:32,049
rules for protocols without ports and

00:39:29,220 --> 00:39:34,000
specify the port then it's that's

00:39:32,049 --> 00:39:37,809
invalid and that's the error that you'll

00:39:34,000 --> 00:39:39,130
see in current version of iptables older

00:39:37,809 --> 00:39:44,670
versions had a little bit different

00:39:39,130 --> 00:39:44,670
error but it looked similar but honestly

00:39:44,700 --> 00:39:51,970
that's really not a good error message

00:39:46,869 --> 00:39:54,180
is it sorry i wish i could help help you

00:39:51,970 --> 00:39:56,770
with those iptables to be quite honest

00:39:54,180 --> 00:39:58,720
the error message is usually aren't very

00:39:56,770 --> 00:40:00,400
helpful it's one of those things that

00:39:58,720 --> 00:40:02,530
you just have to say okay there's

00:40:00,400 --> 00:40:04,540
something wrong let's go back and see if

00:40:02,530 --> 00:40:05,829
I can figure out what as opposed to

00:40:04,540 --> 00:40:12,579
there's something wrong and this tells

00:40:05,829 --> 00:40:15,099
me what so anyhow um at this point based

00:40:12,579 --> 00:40:16,780
on those few rules that we just added we

00:40:15,099 --> 00:40:18,930
have a pretty functional and secure

00:40:16,780 --> 00:40:21,220
firewall and notice I put that in quotes

00:40:18,930 --> 00:40:23,890
we have a pretty functional secure fire

00:40:21,220 --> 00:40:26,530
on our workstation however we might want

00:40:23,890 --> 00:40:30,520
to allow SSH connections from remote

00:40:26,530 --> 00:40:34,630
machines so we'll do this well add a

00:40:30,520 --> 00:40:39,819
rule to the input team coming in on at

00:40:34,630 --> 00:40:42,730
zero TCP protocol the dash dash ten

00:40:39,819 --> 00:40:45,579
means packets with the sin flag set or

00:40:42,730 --> 00:40:49,690
start a connection to destination port

00:40:45,579 --> 00:40:51,819
22 they are new and as far as the

00:40:49,690 --> 00:40:54,089
contract table is concerned new

00:40:51,819 --> 00:41:00,640
basically means that we haven't seen any

00:40:54,089 --> 00:41:02,799
packets in this stream or connection

00:41:00,640 --> 00:41:08,950
before this this is the first one we've

00:41:02,799 --> 00:41:10,569
seen and we want to accept those there's

00:41:08,950 --> 00:41:12,980
the shorter version of the long

00:41:10,569 --> 00:41:15,510
explanation

00:41:12,980 --> 00:41:18,330
so now we have a secure and functional

00:41:15,510 --> 00:41:30,510
rule set but sooner or later laughter

00:41:18,330 --> 00:41:40,980
yeah free yes correct there there are

00:41:30,510 --> 00:41:43,410
other ways I'm glad yes and maybe and

00:41:40,980 --> 00:41:45,450
yes you net wouldn't necessarily have to

00:41:43,410 --> 00:41:48,000
delete that rule you probably would want

00:41:45,450 --> 00:41:52,080
to but it being present wouldn't

00:41:48,000 --> 00:41:53,910
necessarily harm anything either there

00:41:52,080 --> 00:41:56,070
are other ways that you can do that as

00:41:53,910 --> 00:42:00,240
opposed to setting up secure cell to

00:41:56,070 --> 00:42:02,790
listen on an alternate port you could

00:42:00,240 --> 00:42:05,760
this is where that pre routing table

00:42:02,790 --> 00:42:07,440
comes in handy also just as a kind of

00:42:05,760 --> 00:42:10,020
handy hint for those of you aren't aware

00:42:07,440 --> 00:42:15,660
one thing that's neat to do a lot of

00:42:10,020 --> 00:42:17,880
places don't like opening up anything

00:42:15,660 --> 00:42:21,750
other than port 80 and 443 out of their

00:42:17,880 --> 00:42:23,730
network so if you have access to a Colo

00:42:21,750 --> 00:42:27,300
server somewhere or even your home

00:42:23,730 --> 00:42:29,910
system a great thing about port 443 is

00:42:27,300 --> 00:42:31,980
it usually isn't subjected to a lot of

00:42:29,910 --> 00:42:34,410
inspection because it's expected to be

00:42:31,980 --> 00:42:37,500
encrypted and if you take your secure

00:42:34,410 --> 00:42:40,440
shell Damon and running on port 443 or

00:42:37,500 --> 00:42:42,660
even better you can or what honestly

00:42:40,440 --> 00:42:45,470
better another way is to use IP tables

00:42:42,660 --> 00:42:50,060
rules on the prewriting chain coming in

00:42:45,470 --> 00:42:53,820
to basically rewrite packets on port 443

00:42:50,060 --> 00:42:55,650
from specific IP addresses like say that

00:42:53,820 --> 00:42:58,410
University that doesn't allow anything

00:42:55,650 --> 00:43:01,110
else out to just jump drop them back

00:42:58,410 --> 00:43:04,860
down to 22 and bingo you've got a nice

00:43:01,110 --> 00:43:07,200
outbound secure shell connection just in

00:43:04,860 --> 00:43:11,780
case any of you weren't aware usually

00:43:07,200 --> 00:43:11,780
that works out well for port 443 yeah

00:43:15,930 --> 00:43:25,780
there no but some of the newer stuff and

00:43:24,070 --> 00:43:27,430
I didn't even cover it in here because

00:43:25,780 --> 00:43:28,900
quite frankly I'm not terribly familiar

00:43:27,430 --> 00:43:32,620
with it I haven't had time to play with

00:43:28,900 --> 00:43:37,720
it yet there is some iptables xml stuff

00:43:32,620 --> 00:43:40,000
in the newer versions that just from

00:43:37,720 --> 00:43:42,070
memory that will dump an xml version of

00:43:40,000 --> 00:43:44,440
a ruleset and i think there are some

00:43:42,070 --> 00:43:47,080
editing capabilities that are part of

00:43:44,440 --> 00:43:49,690
that how will they work or if I'm even

00:43:47,080 --> 00:43:53,170
entirely accurate on that I'm not I

00:43:49,690 --> 00:43:55,210
don't know but something to look at

00:43:53,170 --> 00:43:57,190
anyway but generally speaking at least

00:43:55,210 --> 00:43:59,260
based on what we've had today no there

00:43:57,190 --> 00:44:00,790
is no editing the editing capability is

00:43:59,260 --> 00:44:05,560
you delete the wrong one and add a right

00:44:00,790 --> 00:44:07,480
one so all right so anyway so we've got

00:44:05,560 --> 00:44:08,950
the secure functional rule set we put in

00:44:07,480 --> 00:44:11,860
but you know we're going to have to

00:44:08,950 --> 00:44:13,270
reboot this thing sooner or later and I

00:44:11,860 --> 00:44:14,470
don't know about you guys but we're back

00:44:13,270 --> 00:44:18,070
to the lazy thing I don't want to have

00:44:14,470 --> 00:44:20,710
to retype all that in so we can put them

00:44:18,070 --> 00:44:21,700
in a script on slackware yeah a little

00:44:20,710 --> 00:44:24,010
more familiar with that and the other

00:44:21,700 --> 00:44:33,240
stuff in it you'd put them in our seat

00:44:24,010 --> 00:44:36,130
firewall but 01 if I missed the slide

00:44:33,240 --> 00:44:37,870
maybe not there's probably better ways

00:44:36,130 --> 00:44:42,040
to do that more on that in a moment I

00:44:37,870 --> 00:44:44,050
think it's later on some usage hints and

00:44:42,040 --> 00:44:46,390
this this touches on the question one of

00:44:44,050 --> 00:44:48,130
the earlier questions I already

00:44:46,390 --> 00:44:50,170
mentioned this you know you want to

00:44:48,130 --> 00:44:51,880
organize your rules so that most of your

00:44:50,170 --> 00:44:54,790
traffic will be matched by earlier rules

00:44:51,880 --> 00:44:56,740
in the ruleset you know it probably

00:44:54,790 --> 00:44:58,300
makes perfect sense so you know if you

00:44:56,740 --> 00:44:59,800
decrease the number of rules that a

00:44:58,300 --> 00:45:01,990
packet has to hit before or something

00:44:59,800 --> 00:45:06,400
matches then you're going to cut down on

00:45:01,990 --> 00:45:09,970
system resource usage on that note for

00:45:06,400 --> 00:45:12,580
your home firewalls it really doesn't

00:45:09,970 --> 00:45:16,840
matter you're not going to see any

00:45:12,580 --> 00:45:19,750
difference on any type of halfway modern

00:45:16,840 --> 00:45:23,500
hardware regardless of whether you

00:45:19,750 --> 00:45:24,849
optimize your rule sets or not for you

00:45:23,500 --> 00:45:27,249
know corporate firewall

00:45:24,849 --> 00:45:30,039
oh that's seeing lots and lots and lots

00:45:27,249 --> 00:45:33,759
of traffic sure you got to look at your

00:45:30,039 --> 00:45:35,289
needs but custom teens as mentioned

00:45:33,759 --> 00:45:37,779
earlier can be very useful to decrease

00:45:35,289 --> 00:45:40,479
number of rules a packet has to hit a

00:45:37,779 --> 00:45:42,549
little a little bit more advanced than

00:45:40,479 --> 00:45:44,470
probably what we'd have time or need to

00:45:42,549 --> 00:45:46,059
go through today but just something

00:45:44,470 --> 00:45:48,880
worth looking into you can do a lot of

00:45:46,059 --> 00:45:50,950
neat things with custom chains I mention

00:45:48,880 --> 00:45:52,390
the state teen earlier I know on the

00:45:50,950 --> 00:45:54,759
colo server that me and a couple other

00:45:52,390 --> 00:45:59,499
guys maintained we've got state chain

00:45:54,759 --> 00:46:02,170
and a ping an admin team that basically

00:45:59,499 --> 00:46:07,119
white list all of us from our IP

00:46:02,170 --> 00:46:08,259
addresses a custom reject team and a few

00:46:07,119 --> 00:46:09,970
others but there's a lot of things you

00:46:08,259 --> 00:46:12,369
can do to optimize your rule set using

00:46:09,970 --> 00:46:14,529
custom chains and another example

00:46:12,369 --> 00:46:18,220
mentioned here is there's no need to

00:46:14,529 --> 00:46:19,660
test stuff going you know UDP protocol

00:46:18,220 --> 00:46:22,390
traffic against the rules that only

00:46:19,660 --> 00:46:29,799
apply to TCP traffic so you can do them

00:46:22,390 --> 00:46:32,910
a little segment in there to those of

00:46:29,799 --> 00:46:36,400
you own dynamic IP addresses hopefully

00:46:32,910 --> 00:46:40,089
no I'm like I wish but how many of you

00:46:36,400 --> 00:46:48,130
still on dollar any anybody oh wow

00:46:40,089 --> 00:46:50,259
that's great oh god that's yeah that's a

00:46:48,130 --> 00:46:51,940
little different yeah it is yeah it is

00:46:50,259 --> 00:46:58,450
but i'm not i think i'm speaking of

00:46:51,940 --> 00:47:01,210
traditional now up to I'm glad no one in

00:46:58,450 --> 00:47:03,910
here is I just about two months ago I

00:47:01,210 --> 00:47:06,460
finally was able to move up in the world

00:47:03,910 --> 00:47:09,000
from a dial-up connection yes the old

00:47:06,460 --> 00:47:13,750
56k dollar

00:47:09,000 --> 00:47:15,250
it's a wonderful thing that's one of the

00:47:13,750 --> 00:47:20,079
hazards living in the woods in rural

00:47:15,250 --> 00:47:22,390
Alabama it's great except for Internet

00:47:20,079 --> 00:47:25,059
so now I have the nice verizon broadband

00:47:22,390 --> 00:47:27,910
card and it's certainly not super fast

00:47:25,059 --> 00:47:40,180
but compared to three to 4k per second

00:47:27,910 --> 00:47:44,589
and it rocks yeah I know I'm not sure I

00:47:40,180 --> 00:47:46,210
understand the question oh yeah it's

00:47:44,589 --> 00:47:49,000
actually plugged into my firewall and

00:47:46,210 --> 00:47:50,440
our Gateway firewall you know whatever

00:47:49,000 --> 00:47:53,559
you wanna call it it's plugged into that

00:47:50,440 --> 00:47:55,569
and it comes up as PPP zero interface

00:47:53,559 --> 00:47:57,160
and as far as that as far as your

00:47:55,569 --> 00:47:59,500
firewall rule set is concerned it

00:47:57,160 --> 00:48:01,180
doesn't care what the it doesn't care

00:47:59,500 --> 00:48:03,849
about the low-level details all it cares

00:48:01,180 --> 00:48:06,790
is that you have a PPP device or

00:48:03,849 --> 00:48:09,609
interface rather and your Ethernet

00:48:06,790 --> 00:48:11,440
interfaces on the other side you know

00:48:09,609 --> 00:48:13,420
the the what the actual hardware is

00:48:11,440 --> 00:48:14,619
underneath that and it doesn't care it

00:48:13,420 --> 00:48:16,390
doesn't matter so yeah it works great

00:48:14,619 --> 00:48:18,520
that's actually what we did my wife

00:48:16,390 --> 00:48:19,780
didn't let me bring the verizon card

00:48:18,520 --> 00:48:23,140
with me she says I couldn't leave her

00:48:19,780 --> 00:48:24,309
without internet so and I don't blame

00:48:23,140 --> 00:48:27,640
her she wouldn't have left me without it

00:48:24,309 --> 00:48:30,339
either but uh yeah as far as I goes they

00:48:27,640 --> 00:48:31,450
work they work just fine and I'll be

00:48:30,339 --> 00:48:34,690
more than willing to give you a hand

00:48:31,450 --> 00:48:46,049
with that necessary Oh was that your

00:48:34,690 --> 00:48:46,049
question sweet

00:48:47,210 --> 00:48:54,230
oh you mean just to create a vessel old

00:48:51,920 --> 00:48:57,619
inside the car network oh yeah I will

00:48:54,230 --> 00:49:02,839
get with me later today off is easy not

00:48:57,619 --> 00:49:04,310
a problem at all um alright so a lot of

00:49:02,839 --> 00:49:05,480
this probably won't apply to most of you

00:49:04,310 --> 00:49:08,869
since we don't have many folks on

00:49:05,480 --> 00:49:13,690
dial-up um looking about 10 minutes left

00:49:08,869 --> 00:49:15,470
or so huh oh okay well in that case

00:49:13,690 --> 00:49:21,020
sorry we're going to have to run through

00:49:15,470 --> 00:49:24,460
this I'm gonna put let me get to the end

00:49:21,020 --> 00:49:26,750
I promise because this is oh come on

00:49:24,460 --> 00:49:34,040
there's a few there's a little more good

00:49:26,750 --> 00:49:38,839
information in here I think yeah I kind

00:49:34,040 --> 00:49:41,450
of do Wow the book i mention this thing

00:49:38,839 --> 00:49:43,330
called linux firewalls a lot more

00:49:41,450 --> 00:49:46,820
information than probably you'll need

00:49:43,330 --> 00:49:52,760
but it's really really a great book come

00:49:46,820 --> 00:49:56,180
on this is worse than dial-up okay maybe

00:49:52,760 --> 00:49:57,770
not all right down at the bottom is the

00:49:56,180 --> 00:50:02,660
address on my personal site where you

00:49:57,770 --> 00:50:06,650
can grab this PDF and for those of you

00:50:02,660 --> 00:50:09,260
so inclined there's the raw lautech file

00:50:06,650 --> 00:50:12,550
that you could have a look at it you

00:50:09,260 --> 00:50:16,880
wanted to look at it for some reason

00:50:12,550 --> 00:50:19,430
maybe want to hurt your eyes but um if

00:50:16,880 --> 00:50:23,690
you have any questions I'm sorry I took

00:50:19,430 --> 00:50:24,890
so long we'll try to get them now if for

00:50:23,690 --> 00:50:26,480
whatever reason there's something that

00:50:24,890 --> 00:50:28,640
you need to ask that we don't have time

00:50:26,480 --> 00:50:34,460
for catch me during the day I'll be here

00:50:28,640 --> 00:50:40,310
ya know well the second part yes I'm

00:50:34,460 --> 00:50:42,200
sorry it is you know what I'll fix that

00:50:40,310 --> 00:50:46,160
here in just a minute to put a symlink

00:50:42,200 --> 00:50:51,560
at the lower case just in case but any

00:50:46,160 --> 00:50:53,240
other questions I hope you enjoyed i

00:50:51,560 --> 00:50:56,619
hope it was worth missing more expensive

00:50:53,240 --> 00:50:56,619
presentation thanks

00:50:57,380 --> 00:51:02,100
this work was recorded by view digital

00:51:00,300 --> 00:51:04,820
media and is licensed under a creative

00:51:02,100 --> 00:51:07,320
commons attribution share-alike version

00:51:04,820 --> 00:51:10,230
3.4 more information about the southeast

00:51:07,320 --> 00:51:12,890
linux fest visit southeast Linux vest

00:51:10,230 --> 00:51:12,890

YouTube URL: https://www.youtube.com/watch?v=Til0mi2KNqY


