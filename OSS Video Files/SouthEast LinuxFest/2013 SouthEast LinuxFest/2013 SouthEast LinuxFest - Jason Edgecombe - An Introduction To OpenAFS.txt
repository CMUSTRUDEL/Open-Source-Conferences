Title: 2013 SouthEast LinuxFest - Jason Edgecombe - An Introduction To OpenAFS
Publication date: 2015-04-19
Playlist: 2013 SouthEast LinuxFest
Description: 
	2013 SouthEast LinuxFest
Jason Edgecombe
An Introduction To OpenAFS
Captions: 
	00:00:00,060 --> 00:00:05,160
the following presentation was recorded

00:00:02,280 --> 00:00:06,960
at the 2013 southeast linux fest in

00:00:05,160 --> 00:00:09,179
charlotte north carolina

00:00:06,960 --> 00:00:12,030
it is licensed under a creative commons

00:00:09,179 --> 00:00:18,199
license for more information about the

00:00:12,030 --> 00:00:20,279
south east linux fest visit www.flu.gov

00:00:18,199 --> 00:00:23,189
linux fest would like to thank the

00:00:20,279 --> 00:00:25,470
following diamond sponsors in 2013 for

00:00:23,189 --> 00:00:28,050
helping make these videos possible so

00:00:25,470 --> 00:00:29,580
thank you for coming first of all let me

00:00:28,050 --> 00:00:32,189
introduce myself my name is Jason

00:00:29,580 --> 00:00:34,020
Edgecombe I work in the College of

00:00:32,189 --> 00:00:35,850
Engineering or excuse me the william

00:00:34,020 --> 00:00:37,260
states lee college of engineering at the

00:00:35,850 --> 00:00:39,899
University of North Carolina at

00:00:37,260 --> 00:00:45,780
Charlotte if you need to you can get me

00:00:39,899 --> 00:00:47,940
on Twitter so they'll take a little bit

00:00:45,780 --> 00:00:49,350
about myself I've been a Linux

00:00:47,940 --> 00:00:50,910
administrator and the College

00:00:49,350 --> 00:00:53,670
engineering since 2006

00:00:50,910 --> 00:00:56,399
I'm also the open FS administrator I

00:00:53,670 --> 00:00:59,399
share that Duty with the rest of the

00:00:56,399 --> 00:01:03,870
team I've been contributing to open FS

00:00:59,399 --> 00:01:05,580
as a hobby since 2007 I'm also currently

00:01:03,870 --> 00:01:07,740
the bill bada administrator so I keep

00:01:05,580 --> 00:01:09,540
the bills running make sure we're

00:01:07,740 --> 00:01:11,670
compiling on you know there's the seven

00:01:09,540 --> 00:01:14,189
or eight different platforms and I've

00:01:11,670 --> 00:01:15,450
written at least thirty man pages I lost

00:01:14,189 --> 00:01:17,520
count those are the ones that just have

00:01:15,450 --> 00:01:19,680
my name as the author the rest of just

00:01:17,520 --> 00:01:23,400
you know added contribute contributions

00:01:19,680 --> 00:01:27,030
to so let me walk you through with what

00:01:23,400 --> 00:01:31,890
we use currently we have 13 terabytes of

00:01:27,030 --> 00:01:33,659
data used we got about 4,000 users we've

00:01:31,890 --> 00:01:37,140
got as far as open AFS servers

00:01:33,659 --> 00:01:39,770
themselves we have three database

00:01:37,140 --> 00:01:42,479
servers nine production file servers and

00:01:39,770 --> 00:01:44,869
three tape backup machines with you

00:01:42,479 --> 00:01:48,090
typical tape changers no big deal there

00:01:44,869 --> 00:01:50,820
as far as non upping it the the rest of

00:01:48,090 --> 00:01:54,630
the stuff we have thirteen hundred

00:01:50,820 --> 00:01:57,899
desktops some linux desktops everybody's

00:01:54,630 --> 00:02:01,049
home directories in AFS so you know when

00:01:57,899 --> 00:02:02,729
you log in you just all your data is an

00:02:01,049 --> 00:02:05,520
AFS it follows you around we have

00:02:02,729 --> 00:02:07,350
running profiles it's really nice we can

00:02:05,520 --> 00:02:09,479
take a machine throw it out the window

00:02:07,350 --> 00:02:11,790
you walk to the next one login you're

00:02:09,479 --> 00:02:13,450
good yes we do have people with large

00:02:11,790 --> 00:02:15,430
files and USB drives

00:02:13,450 --> 00:02:19,420
you know if you store it on the network

00:02:15,430 --> 00:02:22,120
you're good we have about 50 production

00:02:19,420 --> 00:02:24,760
Linux servers doing various things you

00:02:22,120 --> 00:02:27,430
patchy my sequel I've got a couple of

00:02:24,760 --> 00:02:31,410
faculty members who I you know they got

00:02:27,430 --> 00:02:33,820
grant servers for we are we manage those

00:02:31,410 --> 00:02:36,580
that are in Bali port and Kerberos

00:02:33,820 --> 00:02:39,300
servers which you need for open AFS a

00:02:36,580 --> 00:02:41,260
couple of print servers and we got

00:02:39,300 --> 00:02:42,700
something I'm really proud of I got 12

00:02:41,260 --> 00:02:44,590
compete servers you know these guys have

00:02:42,700 --> 00:02:48,459
like 64 gigs and RAM each at least

00:02:44,590 --> 00:02:53,800
summer 96 gig and they tend to get

00:02:48,459 --> 00:02:56,440
hammered so how we use up NFS it is our

00:02:53,800 --> 00:02:58,030
primary network file system we like I

00:02:56,440 --> 00:03:00,640
said we store all of our user data in

00:02:58,030 --> 00:03:03,100
there and it is the home directory for

00:03:00,640 --> 00:03:06,730
both Windows and Linux so when you log

00:03:03,100 --> 00:03:08,110
in your desktop is is in open FS and if

00:03:06,730 --> 00:03:10,989
you're on Linux you need to file from

00:03:08,110 --> 00:03:12,580
Windows you just go up a couple of

00:03:10,989 --> 00:03:15,910
folders and back down another one and

00:03:12,580 --> 00:03:18,910
it's all there and if you drop your file

00:03:15,910 --> 00:03:20,650
on your Windows desktop and you go to

00:03:18,910 --> 00:03:23,110
you without logging out and go to

00:03:20,650 --> 00:03:26,290
another Linux machine or another Windows

00:03:23,110 --> 00:03:28,239
machine the farthest appears so it's

00:03:26,290 --> 00:03:32,200
really nice that way

00:03:28,239 --> 00:03:34,810
we have a heavily automated machine

00:03:32,200 --> 00:03:36,970
build infrastructure our Windows

00:03:34,810 --> 00:03:40,120
machines are not imaged they're actually

00:03:36,970 --> 00:03:41,470
like a scripted install and we do the

00:03:40,120 --> 00:03:43,930
windows install with all the

00:03:41,470 --> 00:03:45,760
applications we fire it up it takes a

00:03:43,930 --> 00:03:47,920
few hours to run but after that I mean

00:03:45,760 --> 00:03:51,940
it's fire-and-forget same thing with

00:03:47,920 --> 00:03:53,320
Linux only it's faster we've got you

00:03:51,940 --> 00:03:55,360
know fire up

00:03:53,320 --> 00:03:56,709
I can build a workstation in about 30

00:03:55,360 --> 00:03:59,980
minutes to an hour just depends on the

00:03:56,709 --> 00:04:03,400
network speed once we get off the normal

00:03:59,980 --> 00:04:04,720
you know obviously you have SMB or NFS

00:04:03,400 --> 00:04:07,360
to actually start the initial

00:04:04,720 --> 00:04:10,750
installation but after the kickstart or

00:04:07,360 --> 00:04:12,640
the installs done then ever it kicks up

00:04:10,750 --> 00:04:16,690
we've already configured AFS it starts

00:04:12,640 --> 00:04:19,090
pulling everything out of AFS so for

00:04:16,690 --> 00:04:20,410
Windows we have the applications are

00:04:19,090 --> 00:04:22,630
installed directly on the hard drive

00:04:20,410 --> 00:04:26,570
through the automated build for Linux we

00:04:22,630 --> 00:04:29,660
have a mixture of the two so

00:04:26,570 --> 00:04:31,400
you it's either rpm installed or it's

00:04:29,660 --> 00:04:36,290
sitting out in the FS on the shared

00:04:31,400 --> 00:04:39,790
folder which is really easy works very

00:04:36,290 --> 00:04:42,620
well with the caching that's set up and

00:04:39,790 --> 00:04:45,860
we actually kind of really encourage

00:04:42,620 --> 00:04:47,030
people to store the data on FS so

00:04:45,860 --> 00:04:48,950
basically anything on the local disk

00:04:47,030 --> 00:04:51,260
especially the the primary disk the

00:04:48,950 --> 00:04:54,370
system disk is erased at some point

00:04:51,260 --> 00:04:57,980
either you know it's just not permanent

00:04:54,370 --> 00:04:59,630
if you do want local data we tell you ok

00:04:57,980 --> 00:05:02,780
you need a second hard drive or third

00:04:59,630 --> 00:05:04,910
hard drive and we just have a general

00:05:02,780 --> 00:05:08,180
principle that if it's the primary disk

00:05:04,910 --> 00:05:14,780
we own it we can wipe it at any time our

00:05:08,180 --> 00:05:18,710
automation requires that all right so

00:05:14,780 --> 00:05:21,530
that's enough about me and the campus

00:05:18,710 --> 00:05:23,840
let me tell you what open FS is it's a

00:05:21,530 --> 00:05:25,400
distributed file system and it offers

00:05:23,840 --> 00:05:29,300
several nice features like read-only

00:05:25,400 --> 00:05:32,270
replicas and limited snapshotting its

00:05:29,300 --> 00:05:35,390
location independent which is very cool

00:05:32,270 --> 00:05:37,220
so you know when you're dealing with SMB

00:05:35,390 --> 00:05:39,710
and NFS you always have to tell it what

00:05:37,220 --> 00:05:42,320
server to mount you don't do that in AFS

00:05:39,710 --> 00:05:45,620
you tell it ok here's how I connect to

00:05:42,320 --> 00:05:48,050
the core FS servers and then your client

00:05:45,620 --> 00:05:50,840
queries those servers saying where are

00:05:48,050 --> 00:05:53,380
my files so you can actually move the

00:05:50,840 --> 00:05:56,270
files between different file servers and

00:05:53,380 --> 00:05:57,950
the client is automatically updated and

00:05:56,270 --> 00:05:59,900
notified and people don't even notice

00:05:57,950 --> 00:06:02,710
you move stuff between servers your

00:05:59,900 --> 00:06:05,120
paths don't change really cool like that

00:06:02,710 --> 00:06:07,310
and this is a feature of the single

00:06:05,120 --> 00:06:11,420
system image right here so yeah you know

00:06:07,310 --> 00:06:14,780
AFS example.org fubar exists on all AFS

00:06:11,420 --> 00:06:18,020
machines and AFS is actually set up as a

00:06:14,780 --> 00:06:20,630
van it's meant to be an open land file

00:06:18,020 --> 00:06:21,920
system so what this means is if you

00:06:20,630 --> 00:06:24,440
actually have your cell open to the

00:06:21,920 --> 00:06:26,600
Internet and someone else on the

00:06:24,440 --> 00:06:29,360
internet has you know the you know the

00:06:26,600 --> 00:06:32,060
addresses of your your main servers or

00:06:29,360 --> 00:06:33,290
your DB servers as they're called they

00:06:32,060 --> 00:06:35,330
can actually connect your files and see

00:06:33,290 --> 00:06:37,669
them if you've got the Akal set properly

00:06:35,330 --> 00:06:39,290
so if you install and anthis client you

00:06:37,669 --> 00:06:40,630
don't have to have an AFS server running

00:06:39,290 --> 00:06:43,270
if you just all 1/8 has client

00:06:40,630 --> 00:06:44,980
right now you go and look in /a FS and

00:06:43,270 --> 00:06:46,870
you see you you know you see a hundred

00:06:44,980 --> 00:06:49,270
different sites you go browse the file

00:06:46,870 --> 00:06:50,740
system it's a really handy way to to

00:06:49,270 --> 00:07:00,730
share files and you don't have to even

00:06:50,740 --> 00:07:01,030
have to use HTTP I'll get to that pardon

00:07:00,730 --> 00:07:03,940
me

00:07:01,030 --> 00:07:06,850
so it is federated so what that means is

00:07:03,940 --> 00:07:09,580
you can set up a trust relationship with

00:07:06,850 --> 00:07:11,890
a different institution so when they

00:07:09,580 --> 00:07:14,020
authenticate they can actually you know

00:07:11,890 --> 00:07:16,210
your your two cells is they're called

00:07:14,020 --> 00:07:18,190
know how to talk to one another and then

00:07:16,210 --> 00:07:19,960
you their people actually become guest

00:07:18,190 --> 00:07:23,410
in your cell and you can actually give

00:07:19,960 --> 00:07:26,440
them a give them rights it you know okay

00:07:23,410 --> 00:07:30,250
I'm your your your Joe at other

00:07:26,440 --> 00:07:32,670
institution dot edu or something so it's

00:07:30,250 --> 00:07:34,510
kind of nice like that too

00:07:32,670 --> 00:07:35,590
something that does that people don't

00:07:34,510 --> 00:07:37,180
quite understand this you know well how

00:07:35,590 --> 00:07:39,580
do you connect to it you know I want to

00:07:37,180 --> 00:07:43,720
share out you can you can use SMB know

00:07:39,580 --> 00:07:45,940
it open AFS or either AFS is a protocol

00:07:43,720 --> 00:07:49,420
it requires a specialized client and

00:07:45,940 --> 00:07:54,700
specialized server now there are more

00:07:49,420 --> 00:07:56,620
than one client there's open FS arla and

00:07:54,700 --> 00:08:01,150
there's actually an AFS client in the

00:07:56,620 --> 00:08:03,550
Linux kernel called ka k AFS although

00:08:01,150 --> 00:08:05,800
that's that one's fairly limited as to

00:08:03,550 --> 00:08:09,340
what it can do the the one that's used

00:08:05,800 --> 00:08:11,650
most often is it's obviously open AFS so

00:08:09,340 --> 00:08:15,100
other features that it has has a very

00:08:11,650 --> 00:08:17,950
rich Akal access control mechanism so i

00:08:15,100 --> 00:08:21,400
can say you know I as a user I can say I

00:08:17,950 --> 00:08:23,980
want to give Suzy or Johnny access to my

00:08:21,400 --> 00:08:25,840
folders and they can only do read and

00:08:23,980 --> 00:08:27,700
look up you know they could only read

00:08:25,840 --> 00:08:29,230
they can write they can only I can drop

00:08:27,700 --> 00:08:32,229
a file in but they can't read what they

00:08:29,230 --> 00:08:36,160
did I mean it's it's very nice as far as

00:08:32,229 --> 00:08:38,260
that regard you can actually manage your

00:08:36,160 --> 00:08:41,020
own groups so you can create groups and

00:08:38,260 --> 00:08:45,580
have just any number of users in them

00:08:41,020 --> 00:08:47,650
you can even have nested groups and you

00:08:45,580 --> 00:08:50,650
have transparent migration which I I

00:08:47,650 --> 00:08:52,930
just spoke about briefly when you like

00:08:50,650 --> 00:08:54,200
if the user is actually actively using

00:08:52,930 --> 00:08:57,380
their files

00:08:54,200 --> 00:08:59,360
too much but if you you know I've

00:08:57,380 --> 00:09:01,160
actually done this on myself I'd moved

00:08:59,360 --> 00:09:02,840
my volume from one server to the other

00:09:01,160 --> 00:09:05,150
my or my files live

00:09:02,840 --> 00:09:06,740
I didn't log out the only thing I

00:09:05,150 --> 00:09:09,290
noticed was just a brief pause for a few

00:09:06,740 --> 00:09:11,120
seconds while you know some you know

00:09:09,290 --> 00:09:14,360
some transitions some transactions are

00:09:11,120 --> 00:09:19,160
happening to enable that the move so

00:09:14,360 --> 00:09:21,520
it's very cool on the sysadmin side it's

00:09:19,160 --> 00:09:24,410
high availability kind of limited by

00:09:21,520 --> 00:09:25,910
that I mean we have there are read-only

00:09:24,410 --> 00:09:30,110
snapshots and you can add multiple

00:09:25,910 --> 00:09:32,000
read-only snapshots of your data so it's

00:09:30,110 --> 00:09:34,010
available the read-only data is highly

00:09:32,000 --> 00:09:39,010
available and let me give a little

00:09:34,010 --> 00:09:43,850
example of that we just actually had a a

00:09:39,010 --> 00:09:46,700
a planned emergency power outage and a

00:09:43,850 --> 00:09:48,110
data center and what happened and what

00:09:46,700 --> 00:09:50,330
the way I prepared for this was I moved

00:09:48,110 --> 00:09:52,700
all the staff machines are sorry the

00:09:50,330 --> 00:09:54,890
staff volumes out of the effected data

00:09:52,700 --> 00:09:56,810
center so that we could actually still

00:09:54,890 --> 00:09:58,970
login and when that data center went

00:09:56,810 --> 00:10:00,560
down most of our applications were fine

00:09:58,970 --> 00:10:02,330
because they're replicated it's

00:10:00,560 --> 00:10:05,000
read-only data it's replicated in other

00:10:02,330 --> 00:10:06,830
buildings now granted a third of our

00:10:05,000 --> 00:10:08,270
customer you know third of our users

00:10:06,830 --> 00:10:10,760
could not log in because their data

00:10:08,270 --> 00:10:12,380
their home directory was in the affected

00:10:10,760 --> 00:10:15,070
server room but the rest of the

00:10:12,380 --> 00:10:17,750
infrastructure mainly stayed up and

00:10:15,070 --> 00:10:19,430
aside from that you could actually if

00:10:17,750 --> 00:10:21,050
you go onto a Linux machine you you

00:10:19,430 --> 00:10:21,980
would have logged in but you wouldn't

00:10:21,050 --> 00:10:24,410
have been able to get your home

00:10:21,980 --> 00:10:27,950
directory so you weren't totally dead in

00:10:24,410 --> 00:10:30,290
the water but somewhat but it's nice to

00:10:27,950 --> 00:10:33,260
have the high high availability features

00:10:30,290 --> 00:10:36,110
and something else that to know this is

00:10:33,260 --> 00:10:38,960
POSIX like so it just works like a

00:10:36,110 --> 00:10:40,610
normal file system it's not like HDFS or

00:10:38,960 --> 00:10:42,680
Hadoop where you got some weird

00:10:40,610 --> 00:10:43,130
craziness going I know it's just a

00:10:42,680 --> 00:10:45,140
normal

00:10:43,130 --> 00:10:52,120
it follows normal UNIX file system

00:10:45,140 --> 00:10:55,010
semantics which is quite nice definitely

00:10:52,120 --> 00:10:58,550
so what we got

00:10:55,010 --> 00:11:01,240
we have lots and lots of support for

00:10:58,550 --> 00:11:03,770
clients and servers clients especially

00:11:01,240 --> 00:11:06,410
pretty much any major platform we have

00:11:03,770 --> 00:11:09,680
support for obviously Linux

00:11:06,410 --> 00:11:11,030
windows we got some crazy stuff in there

00:11:09,680 --> 00:11:15,260
like H bucks

00:11:11,030 --> 00:11:18,830
AIX lyrics you know some of these are

00:11:15,260 --> 00:11:21,080
not not well tested but they are they do

00:11:18,830 --> 00:11:24,650
actually compile we have bill bot slaves

00:11:21,080 --> 00:11:28,520
for them the server the heavily used

00:11:24,650 --> 00:11:32,090
ones are obviously Linux and Solaris got

00:11:28,520 --> 00:11:34,070
some people using AIX and they also got

00:11:32,090 --> 00:11:37,670
the people you have not quite as well

00:11:34,070 --> 00:11:41,180
tested running Mac OS servers and H

00:11:37,670 --> 00:11:45,320
bucks the the trick about the server is

00:11:41,180 --> 00:11:46,790
the server processes are fairly fairly

00:11:45,320 --> 00:11:50,210
portable and by that I mean they're just

00:11:46,790 --> 00:11:51,920
normal UNIX environment the interesting

00:11:50,210 --> 00:11:53,630
the client is more challenging because

00:11:51,920 --> 00:11:56,480
that you normally has kernel hugs too

00:11:53,630 --> 00:11:58,880
because it actually installs itself as a

00:11:56,480 --> 00:12:03,800
network file system so that's where

00:11:58,880 --> 00:12:05,750
things get a little little crazy so let

00:12:03,800 --> 00:12:08,900
me walk you through what a typical AFS

00:12:05,750 --> 00:12:11,510
architecture and looks like first off

00:12:08,900 --> 00:12:14,000
you have to have Kerberos it can be

00:12:11,510 --> 00:12:17,960
Active Directory MIT or Heimdall it

00:12:14,000 --> 00:12:19,490
doesn't really matter and that will you

00:12:17,960 --> 00:12:22,190
know obviously that's your where your

00:12:19,490 --> 00:12:25,430
users are stored your your service

00:12:22,190 --> 00:12:30,500
transit credentials you users bounce off

00:12:25,430 --> 00:12:34,400
it for passwords this last part right

00:12:30,500 --> 00:12:38,180
here actually answers your question it

00:12:34,400 --> 00:12:40,370
uses a de-essing type currently there's

00:12:38,180 --> 00:12:46,600
a DES style encryption they're working

00:12:40,370 --> 00:12:53,180
on upgrading that des level encryption

00:12:46,600 --> 00:12:57,320
single yeah weekly encrypted they're

00:12:53,180 --> 00:12:58,880
working on that now your clients what

00:12:57,320 --> 00:13:02,330
they do is they query the metadata from

00:12:58,880 --> 00:13:03,650
the database servers and pardon me if I

00:13:02,330 --> 00:13:05,150
call them self servers the old

00:13:03,650 --> 00:13:07,490
terminology is actually called a cell

00:13:05,150 --> 00:13:10,010
server but you have your metadata

00:13:07,490 --> 00:13:12,800
sitting on your DB servers they fetch

00:13:10,010 --> 00:13:15,650
the files from the file servers a cache

00:13:12,800 --> 00:13:18,710
files and metadata and they actually

00:13:15,650 --> 00:13:19,750
take your Kerberos 5 ticket and they'll

00:13:18,710 --> 00:13:21,940
convert it into what's called a

00:13:19,750 --> 00:13:25,890
touken which is what you use for to

00:13:21,940 --> 00:13:29,380
authenticate and to get access to AFS

00:13:25,890 --> 00:13:32,200
now your DB servers they have three

00:13:29,380 --> 00:13:36,130
services they hold the metadata for the

00:13:32,200 --> 00:13:38,830
entire FSL and you have pts which does

00:13:36,130 --> 00:13:41,950
user in groups vldb which is the volume

00:13:38,830 --> 00:13:45,670
lookup database this is how this is how

00:13:41,950 --> 00:13:48,250
it knows where all the files are all the

00:13:45,670 --> 00:13:52,390
files are in volume everybody's in a

00:13:48,250 --> 00:13:55,840
volume a volume lives on a server so the

00:13:52,390 --> 00:13:58,420
volume the the volume is exist and is

00:13:55,840 --> 00:14:00,670
tracked in the metadata service called

00:13:58,420 --> 00:14:02,530
the volume lookup database there's also

00:14:00,670 --> 00:14:05,020
the backup database which just keeps a

00:14:02,530 --> 00:14:07,980
list of backups that you've drawn for

00:14:05,020 --> 00:14:11,530
the af-s backup system file servers

00:14:07,980 --> 00:14:14,470
pretty boring serves the files enforce

00:14:11,530 --> 00:14:16,270
the security and it reports its volume

00:14:14,470 --> 00:14:18,370
data back to the vldb

00:14:16,270 --> 00:14:19,720
it also talks it coordinates with the

00:14:18,370 --> 00:14:21,340
other file servers when you're doing

00:14:19,720 --> 00:14:28,390
moves so there's some little bit of

00:14:21,340 --> 00:14:31,780
handshaking going on there so now let me

00:14:28,390 --> 00:14:35,140
I should have put these first everything

00:14:31,780 --> 00:14:37,510
lives in a volume so a volume is a set

00:14:35,140 --> 00:14:41,470
of files and directories and the volume

00:14:37,510 --> 00:14:42,610
is it it's kind of like a little mini

00:14:41,470 --> 00:14:46,300
Linux file system

00:14:42,610 --> 00:14:48,670
I guess the equivalent may be a server

00:14:46,300 --> 00:14:52,360
partition is a file system on the server

00:14:48,670 --> 00:14:55,360
and of line lives in it it would be

00:14:52,360 --> 00:14:57,550
comparable like a zpool and nfz FS

00:14:55,360 --> 00:14:59,380
there's you know your partition is your

00:14:57,550 --> 00:15:02,170
storage pool your volumes live in your

00:14:59,380 --> 00:15:03,910
partition there's not a fixed size that

00:15:02,170 --> 00:15:05,920
the volume is limited to you simply have

00:15:03,910 --> 00:15:08,830
a quota that you say okay the volume

00:15:05,920 --> 00:15:13,560
will not get bigger than this than X and

00:15:08,830 --> 00:15:13,560
it won't now

00:15:13,750 --> 00:15:20,270
well no the partition is like a zpool

00:15:16,730 --> 00:15:23,120
and the volume is more like a sieve all

00:15:20,270 --> 00:15:25,670
or just a filesystem you created on a

00:15:23,120 --> 00:15:29,570
zpool which is kind of like that the

00:15:25,670 --> 00:15:31,400
partition now every partition has well

00:15:29,570 --> 00:15:34,010
actually volumes don't have to have a

00:15:31,400 --> 00:15:36,980
mountain point but in order to access of

00:15:34,010 --> 00:15:38,750
line it needs to be mounted somewhere so

00:15:36,980 --> 00:15:41,870
what you have is actually a directed

00:15:38,750 --> 00:15:44,090
graph of your volume so you you look the

00:15:41,870 --> 00:15:46,790
route dot cell volume which is the route

00:15:44,090 --> 00:15:48,890
of your cell and then that looks like a

00:15:46,790 --> 00:15:51,290
folder and under there you have files

00:15:48,890 --> 00:15:54,260
and folders and within that volume will

00:15:51,290 --> 00:15:57,500
be mount points to other volumes and so

00:15:54,260 --> 00:16:00,980
on and so on and so on so like you would

00:15:57,500 --> 00:16:02,630
do mat run mount or DF in a Linux file

00:16:00,980 --> 00:16:06,380
system you'll see all the mount points

00:16:02,630 --> 00:16:07,940
of the file systems in FS land you would

00:16:06,380 --> 00:16:10,550
only actually see one mount point for

00:16:07,940 --> 00:16:12,620
AFS but it's similar and that there are

00:16:10,550 --> 00:16:14,690
mount points as you go down the file

00:16:12,620 --> 00:16:16,610
system when you change into a different

00:16:14,690 --> 00:16:18,800
directory you can be traversing a

00:16:16,610 --> 00:16:20,570
different volume you'll go through the

00:16:18,800 --> 00:16:22,100
mount point to a different volume which

00:16:20,570 --> 00:16:24,620
may live on an entirely different server

00:16:22,100 --> 00:16:26,240
it may not even be in your cell it may

00:16:24,620 --> 00:16:31,520
be completing a completely different

00:16:26,240 --> 00:16:42,950
institution so it's just really cool

00:16:31,520 --> 00:16:45,290
that way and I'm sorry what yes latency

00:16:42,950 --> 00:16:48,080
may change wildly as you change

00:16:45,290 --> 00:16:49,700
directories yes it can you know you you

00:16:48,080 --> 00:16:51,560
know you could be in one directory and

00:16:49,700 --> 00:16:53,180
it's in your local you know a server

00:16:51,560 --> 00:16:56,420
close to you and then you change into a

00:16:53,180 --> 00:17:00,020
different directory and its way across

00:16:56,420 --> 00:17:03,580
the internet and you don't even notice

00:17:00,020 --> 00:17:06,560
aside from the latency now you can have

00:17:03,580 --> 00:17:07,220
partitions and volumes larger than two

00:17:06,560 --> 00:17:10,370
terabytes

00:17:07,220 --> 00:17:12,800
but the quota is the maximum quarter you

00:17:10,370 --> 00:17:15,320
can set on a volume is two terabytes so

00:17:12,800 --> 00:17:16,910
it's generally good to just keep it at

00:17:15,320 --> 00:17:20,360
two terabytes if you need more you can

00:17:16,910 --> 00:17:23,090
you just when you start asking for the

00:17:20,360 --> 00:17:24,500
size of the partition you'll get back

00:17:23,090 --> 00:17:26,860
negative numbers or something weird

00:17:24,500 --> 00:17:26,860
really weird

00:17:40,500 --> 00:17:46,030
yes so the question was can if you're

00:17:43,420 --> 00:17:47,950
like a multinational corporation could

00:17:46,030 --> 00:17:50,950
you use AFS to keep her your files

00:17:47,950 --> 00:17:54,940
globally and the answer is yes what you

00:17:50,950 --> 00:17:58,060
can do in that case it appears as the

00:17:54,940 --> 00:17:59,590
same set of files and what you would do

00:17:58,060 --> 00:18:01,990
is you could have you know replicas of

00:17:59,590 --> 00:18:03,520
the root cell in every you know every

00:18:01,990 --> 00:18:05,680
continent

00:18:03,520 --> 00:18:07,810
you'd have ideally you probably have

00:18:05,680 --> 00:18:11,590
your cell servers or your DV servers on

00:18:07,810 --> 00:18:14,830
different continents latency may be an

00:18:11,590 --> 00:18:16,840
issue and what's interesting is you can

00:18:14,830 --> 00:18:21,580
actually have read-only replicas of your

00:18:16,840 --> 00:18:23,410
top level or important documents close

00:18:21,580 --> 00:18:25,900
to you you mean you can have replicas on

00:18:23,410 --> 00:18:28,030
each continent or in each side so that

00:18:25,900 --> 00:18:30,670
when you access it you set the

00:18:28,030 --> 00:18:34,180
preferences so that you access the

00:18:30,670 --> 00:18:36,850
closest copy and if you have a guy who's

00:18:34,180 --> 00:18:38,260
and and obviously if you're your

00:18:36,850 --> 00:18:40,260
employees you know if you're in Tokyo

00:18:38,260 --> 00:18:42,640
your volumes should probably be in Tokyo

00:18:40,260 --> 00:18:44,860
but if you decide to travel back to the

00:18:42,640 --> 00:18:46,810
US and you log in you can still access

00:18:44,860 --> 00:18:50,290
your stuff in Tokyo it's just gonna be

00:18:46,810 --> 00:18:52,930
really slow or if you want to I mean if

00:18:50,290 --> 00:18:58,000
the guy if a an employee transfers from

00:18:52,930 --> 00:19:00,100
say Tokyo to the US okay his path didn't

00:18:58,000 --> 00:19:02,920
change we just did a boss my boss move

00:19:00,100 --> 00:19:05,410
to move the volume from you know one

00:19:02,920 --> 00:19:07,480
file server to another now I think

00:19:05,410 --> 00:19:09,600
typically when you get into that level I

00:19:07,480 --> 00:19:12,550
think people still set up multiple cells

00:19:09,600 --> 00:19:16,150
but it's but yeah you could definitely

00:19:12,550 --> 00:19:19,090
do it as an entire cell so it's really

00:19:16,150 --> 00:19:21,880
cool and don't let the two terabyte

00:19:19,090 --> 00:19:23,740
limit fool you I mean you you can split

00:19:21,880 --> 00:19:25,900
a volume anytime you have a folder

00:19:23,740 --> 00:19:28,330
that's you can split that into a

00:19:25,900 --> 00:19:30,610
different volume so and you're gonna

00:19:28,330 --> 00:19:32,950
have you know I've got I've got file

00:19:30,610 --> 00:19:36,460
servers with ten terabytes of space or

00:19:32,950 --> 00:19:39,010
you know even more so you can have just

00:19:36,460 --> 00:19:41,500
about any forget the limit of sir

00:19:39,010 --> 00:19:45,400
I want to say you can have like 200 file

00:19:41,500 --> 00:19:50,650
servers or more it's there's quite a few

00:19:45,400 --> 00:19:52,810
I mean you I mean heavy-duty data

00:19:50,650 --> 00:19:55,840
intensive research institutions run this

00:19:52,810 --> 00:19:58,270
and even if you did need to split into

00:19:55,840 --> 00:19:59,890
different cells you can still have

00:19:58,270 --> 00:20:02,500
volume and mount points that actually go

00:19:59,890 --> 00:20:04,720
to different you know go to a completely

00:20:02,500 --> 00:20:07,480
different cell or a different realm

00:20:04,720 --> 00:20:09,850
you know administered and like you could

00:20:07,480 --> 00:20:12,520
be the Tokyo cell and the u.s. cell that

00:20:09,850 --> 00:20:14,410
kind of thing and you can actually could

00:20:12,520 --> 00:20:17,320
have the same same system accounts the

00:20:14,410 --> 00:20:20,920
same user accounts so you could actually

00:20:17,320 --> 00:20:25,480
just I get quickly access these and from

00:20:20,920 --> 00:20:29,290
anywhere it's really cool so as far as

00:20:25,480 --> 00:20:32,080
services go you have the the client the

00:20:29,290 --> 00:20:34,090
database server and the file server the

00:20:32,080 --> 00:20:35,320
database server run well all your all

00:20:34,090 --> 00:20:37,510
your AFS service will run something

00:20:35,320 --> 00:20:41,140
called boss the basic overseer service

00:20:37,510 --> 00:20:43,240
and this is a kind of a it's a nanny or

00:20:41,140 --> 00:20:45,130
it's more it's the boss it keeps it

00:20:43,240 --> 00:20:47,800
starts your services restarts them if

00:20:45,130 --> 00:20:50,380
they die you've got your volume location

00:20:47,800 --> 00:20:52,210
database PT server for users and their

00:20:50,380 --> 00:20:55,510
backup server running on the the DB

00:20:52,210 --> 00:20:58,560
servers on the file server you have boss

00:20:55,510 --> 00:21:01,240
and a file server instance so you have a

00:20:58,560 --> 00:21:03,480
demand attach file server the volume

00:21:01,240 --> 00:21:06,370
server which handles volume transactions

00:21:03,480 --> 00:21:10,320
and salvage which is essentially a you

00:21:06,370 --> 00:21:14,080
know a disk check forgot to mention that

00:21:10,320 --> 00:21:17,050
AFS has its own on disk format so you

00:21:14,080 --> 00:21:19,360
don't just have it's not like you say I

00:21:17,050 --> 00:21:22,060
want to share this folder you actually

00:21:19,360 --> 00:21:24,510
cannot access the files without using an

00:21:22,060 --> 00:21:27,540
AFS client or some specialized tools and

00:21:24,510 --> 00:21:30,790
the benefit you get from that is that

00:21:27,540 --> 00:21:32,890
that's how because it's a special format

00:21:30,790 --> 00:21:36,730
it's almost like a database and that

00:21:32,890 --> 00:21:39,700
it's a special format that is used in

00:21:36,730 --> 00:21:43,000
transactions between servers so by

00:21:39,700 --> 00:21:45,130
giving up that direct file access you

00:21:43,000 --> 00:21:47,170
get the nice transactions moving between

00:21:45,130 --> 00:21:49,900
servers that's not to say you can't

00:21:47,170 --> 00:21:50,789
access your files over SMB but you have

00:21:49,900 --> 00:21:54,209
to set up

00:21:50,789 --> 00:21:56,369
kind of translator from smb2 AFS I've

00:21:54,209 --> 00:21:59,999
read about people doing it I just don't

00:21:56,369 --> 00:22:02,669
know how to do it right off so some of

00:21:59,999 --> 00:22:04,409
the user commands you'd use to login to

00:22:02,669 --> 00:22:06,570
authenticate you actually do a que in it

00:22:04,409 --> 00:22:08,249
so use your normal Kerberos login and

00:22:06,570 --> 00:22:10,619
then you do an ake a log to convert your

00:22:08,249 --> 00:22:14,669
ticket your Kerberos ticket into an AFS

00:22:10,619 --> 00:22:16,559
token some other commands you use FS

00:22:14,669 --> 00:22:20,249
that's how you would set your ackles on

00:22:16,559 --> 00:22:22,709
your directories PT it's to you know

00:22:20,249 --> 00:22:25,019
create users delete users create groups

00:22:22,709 --> 00:22:27,809
add users to groups that kind of thing

00:22:25,019 --> 00:22:29,819
boss is the one you move you use quite a

00:22:27,809 --> 00:22:33,959
bit just to move volumes around create

00:22:29,819 --> 00:22:36,419
volumes that kind of thing now if you

00:22:33,959 --> 00:22:38,369
want to look at documentation there are

00:22:36,419 --> 00:22:42,329
some really good documents on the open

00:22:38,369 --> 00:22:44,519
FS website there's also a wiki the guide

00:22:42,329 --> 00:22:47,929
I tend to look at when I set up my cells

00:22:44,519 --> 00:22:53,249
is the fedora AFS install it's kind of

00:22:47,929 --> 00:22:55,139
kind of compact and easy to follow but

00:22:53,249 --> 00:22:56,819
the rough procedure is you have to if

00:22:55,139 --> 00:22:57,899
you wanted to set up your own cell you

00:22:56,819 --> 00:23:00,359
have to set up your Kerberos

00:22:57,899 --> 00:23:03,089
infrastructure ahead of time you install

00:23:00,359 --> 00:23:05,819
the FS packages you add a special

00:23:03,089 --> 00:23:08,909
Kerberos principal again this is the

00:23:05,819 --> 00:23:11,489
special DES encryption key and you

00:23:08,909 --> 00:23:13,289
install that onto that you can work that

00:23:11,489 --> 00:23:16,079
into what's called a key file and still

00:23:13,289 --> 00:23:18,809
put that on all of your FS servers cell

00:23:16,079 --> 00:23:20,009
servers and file servers and then you

00:23:18,809 --> 00:23:22,979
actually at that point you actually

00:23:20,009 --> 00:23:25,649
install the AFS services like VL server

00:23:22,979 --> 00:23:27,629
bu server PG server and your file

00:23:25,649 --> 00:23:31,289
servers and then you can actually

00:23:27,629 --> 00:23:33,749
configure your clients and you actually

00:23:31,289 --> 00:23:36,779
need a working client in order to create

00:23:33,749 --> 00:23:38,940
your root volume and set the access

00:23:36,779 --> 00:23:41,549
controls on those and once you set those

00:23:38,940 --> 00:23:44,489
you can start adding more clients more

00:23:41,549 --> 00:23:45,839
volumes and you're basically just part

00:23:44,489 --> 00:23:52,559
of your you're up and running at that

00:23:45,839 --> 00:23:55,979
point so now I have a wonderful demo set

00:23:52,559 --> 00:23:59,450
up for you so what I've done here is I

00:23:55,979 --> 00:24:02,030
have a who here is familiar with vagrant

00:23:59,450 --> 00:24:04,580
ok vagrant

00:24:02,030 --> 00:24:08,930
no okay you should go all they learn

00:24:04,580 --> 00:24:11,900
about vagrant vagrant is a kind of a

00:24:08,930 --> 00:24:15,940
your own little cloud internet clown in

00:24:11,900 --> 00:24:15,940
the box it uses the VirtualBox

00:24:16,090 --> 00:24:21,650
virtualization engine and helps you set

00:24:18,710 --> 00:24:24,620
up your virtual machines you can tear

00:24:21,650 --> 00:24:27,680
them you easily pick them up and tear

00:24:24,620 --> 00:24:31,700
them down quite easily so what I did is

00:24:27,680 --> 00:24:33,650
I created a vagrant opening FSL that you

00:24:31,700 --> 00:24:35,600
can actually download for yourself and

00:24:33,650 --> 00:24:38,000
run it so that way you can play around

00:24:35,600 --> 00:24:41,480
with this and you know not have to worry

00:24:38,000 --> 00:24:43,280
about doing crazy stuff at least on your

00:24:41,480 --> 00:24:45,530
production in our test boxes you can

00:24:43,280 --> 00:24:48,620
just do it on your laptop so I'm

00:24:45,530 --> 00:24:50,870
actually creating an EFS server in a

00:24:48,620 --> 00:24:52,520
cell from scratch right here it's right

00:24:50,870 --> 00:24:55,580
now it's importing everything it's

00:24:52,520 --> 00:24:58,400
waiting for the beam to boot it's all

00:24:55,580 --> 00:25:03,160
good stuff I'll give you the github URL

00:24:58,400 --> 00:25:03,160
later on one of the later slides

00:25:08,080 --> 00:25:17,170
I don't recall it's got Amazon and

00:25:14,430 --> 00:25:20,620
VirtualBox I don't remember if a task a

00:25:17,170 --> 00:25:22,180
VM or not but what the nice thing about

00:25:20,620 --> 00:25:24,250
this is if you wanted to set it up on

00:25:22,180 --> 00:25:27,970
real hardware what I actually did was I

00:25:24,250 --> 00:25:29,800
made puppet modules for this so it's

00:25:27,970 --> 00:25:31,380
pretty easy just to use these and

00:25:29,800 --> 00:25:34,540
actually set these up on real machines

00:25:31,380 --> 00:25:38,020
I've got a couple of scripts in my my

00:25:34,540 --> 00:25:43,870
open FS regular int repo that you would

00:25:38,020 --> 00:25:46,720
use to actually do the initial set up my

00:25:43,870 --> 00:25:49,060
puppet who is not quite good enough to

00:25:46,720 --> 00:25:50,590
to completely script the setup

00:25:49,060 --> 00:25:55,870
especially since it involves setting

00:25:50,590 --> 00:25:57,160
some passwords a few times so what it's

00:25:55,870 --> 00:26:01,120
actually doing here is I'm actually

00:25:57,160 --> 00:26:02,890
creating a virtual box VM with three

00:26:01,120 --> 00:26:04,300
hard drives so what you're saying is

00:26:02,890 --> 00:26:05,740
you're seeing it initializing the hard

00:26:04,300 --> 00:26:08,710
drives and formatting and partitioning

00:26:05,740 --> 00:26:10,660
them so the way it works is on a file

00:26:08,710 --> 00:26:14,140
server all of your partitions are named

00:26:10,660 --> 00:26:18,610
of the form slash Vice P and a letter or

00:26:14,140 --> 00:26:22,630
two letters so vise PA Vice PB vise PC

00:26:18,610 --> 00:26:26,260
all the way through vise PA a vise PA B

00:26:22,630 --> 00:26:30,960
and it goes up to thinking that like 254

00:26:26,260 --> 00:26:30,960
partitions on a file server

00:26:31,650 --> 00:26:38,020
so each vise partition is should be

00:26:35,500 --> 00:26:40,930
dedicated file system and if it's not

00:26:38,020 --> 00:26:42,900
then you can actually fake it if you

00:26:40,930 --> 00:26:46,710
create a file called always attached

00:26:42,900 --> 00:26:46,710
where the A's are capitalized

00:26:50,030 --> 00:26:58,190
so we're actually running puppet awesome

00:26:53,770 --> 00:27:00,320
now my virtual Maya vagrant demo has

00:26:58,190 --> 00:27:03,440
actually two cells and our two servers

00:27:00,320 --> 00:27:06,410
in there there's the initial cell server

00:27:03,440 --> 00:27:08,060
and the additional file server so the

00:27:06,410 --> 00:27:11,530
first machine is actually running both a

00:27:08,060 --> 00:27:11,530
cell server and a file server

00:27:26,110 --> 00:27:29,259
come on

00:27:36,000 --> 00:27:40,010
it helps if I turn the wireless on

00:28:00,550 --> 00:28:05,680
all right so that was a user error I

00:28:02,260 --> 00:28:07,150
forgot to turn on the wireless so I

00:28:05,680 --> 00:28:13,390
could download the packages that I need

00:28:07,150 --> 00:28:15,960
to install yes I did

00:28:13,390 --> 00:28:26,830
I turned the wireless off and during the

00:28:15,960 --> 00:28:29,230
the wireless security demonstration well

00:28:26,830 --> 00:28:32,310
that's running let me give you more of

00:28:29,230 --> 00:28:32,310
the slides

00:28:49,320 --> 00:28:53,100
all right

00:28:51,060 --> 00:28:54,540
so in the future there will be more

00:28:53,100 --> 00:28:56,310
encryption types they're already working

00:28:54,540 --> 00:28:57,930
on that they're tying in with Kerberos

00:28:56,310 --> 00:29:00,090
so they just gonna get all the Kerberos

00:28:57,930 --> 00:29:02,550
stuff for free they're working on better

00:29:00,090 --> 00:29:03,120
performance like 10 gigabyte 10 gig e

00:29:02,550 --> 00:29:07,290
speed

00:29:03,120 --> 00:29:08,760
I have saturated a gigabit network I did

00:29:07,290 --> 00:29:11,850
that with my file servers just recently

00:29:08,760 --> 00:29:13,650
I had like a 150 Windows clients doing

00:29:11,850 --> 00:29:16,350
builds simultaneously because we're

00:29:13,650 --> 00:29:19,140
migrating to Windows 7 and we're hitting

00:29:16,350 --> 00:29:20,910
several file servers and actually had I

00:29:19,140 --> 00:29:25,080
was actually saturating a gigabit

00:29:20,910 --> 00:29:28,710
network they be gigabit network port on

00:29:25,080 --> 00:29:30,540
the on the file server and I complained

00:29:28,710 --> 00:29:33,960
to the windows guys and what I ended up

00:29:30,540 --> 00:29:36,180
doing here's the the awesome things I

00:29:33,960 --> 00:29:38,550
actually looked at what the biggest

00:29:36,180 --> 00:29:40,230
volumes were on the servers and moved

00:29:38,550 --> 00:29:43,980
the volumes to a couple other servers

00:29:40,230 --> 00:29:45,750
just to spread out the load and I didn't

00:29:43,980 --> 00:29:47,310
do that while the clients were running

00:29:45,750 --> 00:29:50,640
because I didn't want to make them

00:29:47,310 --> 00:29:52,860
hiccup or you know pause any but I did

00:29:50,640 --> 00:29:56,000
that after we did that batch because we

00:29:52,860 --> 00:29:59,340
had a thousand machines to to migrate I

00:29:56,000 --> 00:30:00,660
just move those after they were done my

00:29:59,340 --> 00:30:03,210
good move the volumes around a little

00:30:00,660 --> 00:30:04,880
bit and the false the load was a bit

00:30:03,210 --> 00:30:08,400
better

00:30:04,880 --> 00:30:10,050
ipv6 is on the roadmap although it's I

00:30:08,400 --> 00:30:12,390
don't know how well it's fun at the

00:30:10,050 --> 00:30:14,610
moment and if you go to open a door up

00:30:12,390 --> 00:30:18,450
slash roadmap dot HTML you can get to

00:30:14,610 --> 00:30:23,670
see all the the cool stuff that's going

00:30:18,450 --> 00:30:26,700
to come in the future all right so we've

00:30:23,670 --> 00:30:30,380
actually run our puppet config for now

00:30:26,700 --> 00:30:30,380
so I'm just going to log into the

00:30:34,230 --> 00:30:38,399
I'm gonna log into my DB server

00:30:54,030 --> 00:30:58,590
so as I said you need a Kerberos

00:30:56,550 --> 00:30:59,460
infrastructure so I'm just first thing

00:30:58,590 --> 00:31:02,010
I'm going to do is I'm gonna setup

00:30:59,460 --> 00:31:04,730
Kerberos I have this wonderful script to

00:31:02,010 --> 00:31:04,730
do that that I wrote

00:31:12,379 --> 00:31:16,819
and I forgot to do a trick

00:31:22,240 --> 00:31:28,630
all right don't ever do this on a

00:31:25,480 --> 00:31:33,610
production on it on thinking something

00:31:28,630 --> 00:31:42,490
that you'd care about the entropy ignore

00:31:33,610 --> 00:31:45,970
the RN GD command okay so what I did was

00:31:42,490 --> 00:31:48,670
I created the stash file and that's what

00:31:45,970 --> 00:31:51,280
how your Kerberos database is encrypted

00:31:48,670 --> 00:31:53,830
on disk and then ask asked me to create

00:31:51,280 --> 00:31:58,630
an admin credential so I have an admin

00:31:53,830 --> 00:32:03,040
user now so now that I have Kerberos

00:31:58,630 --> 00:32:06,670
setup I can set up the dead database

00:32:03,040 --> 00:32:08,080
server and there's a handy couple of

00:32:06,670 --> 00:32:11,350
Handy scripts on Debian and Ubuntu

00:32:08,080 --> 00:32:14,140
called AFS new cell an AFS rootball to

00:32:11,350 --> 00:32:17,980
help you set up your infrastructure and

00:32:14,140 --> 00:32:27,070
actually use those and a little bit of

00:32:17,980 --> 00:32:29,550
my extra magic our production servers

00:32:27,070 --> 00:32:29,550
are Red Hat

00:32:33,679 --> 00:32:38,309
and don't worry about the this failure

00:32:36,540 --> 00:32:49,429
it's just waiting to shut down the Dame

00:32:38,309 --> 00:32:49,429
and it's all not anymore

00:33:11,009 --> 00:33:15,570
okay so if you look at these you're

00:33:13,149 --> 00:33:17,649
seeing that we've created

00:33:15,570 --> 00:33:19,929
you know we're setting up the self-serve

00:33:17,649 --> 00:33:23,049
DB which is your config file that says

00:33:19,929 --> 00:33:25,149
how you you know where you drop the IP

00:33:23,049 --> 00:33:27,159
addresses of your cell servers so you

00:33:25,149 --> 00:33:31,960
need your DB server so that your clients

00:33:27,159 --> 00:33:34,450
can talk to another we're creating

00:33:31,960 --> 00:33:36,970
actually doing the boss create command

00:33:34,450 --> 00:33:40,529
to create the to enable the PT server

00:33:36,970 --> 00:33:43,990
the VL server and then the file server

00:33:40,529 --> 00:33:47,789
and now it's running the root of all

00:33:43,990 --> 00:33:51,220
script to create the root volumes so

00:33:47,789 --> 00:33:53,679
every by default every AFS client knows

00:33:51,220 --> 00:33:57,149
that when it looks at a cell the volume

00:33:53,679 --> 00:34:02,049
it looks at for such FS slash

00:33:57,149 --> 00:34:07,929
example.org it looks for the the cell I

00:34:02,049 --> 00:34:09,639
think volume called root dot cell and it

00:34:07,929 --> 00:34:15,849
needs some admin credentials to do all

00:34:09,639 --> 00:34:18,270
this fun stuff so I type that in so it's

00:34:15,849 --> 00:34:21,780
actually creating the mount points and

00:34:18,270 --> 00:34:21,780
setting everything up

00:34:33,839 --> 00:34:38,379
now here you're saying into a false

00:34:35,799 --> 00:34:40,440
release a boss release is when you

00:34:38,379 --> 00:34:43,629
update this the read-only replicas so

00:34:40,440 --> 00:34:44,740
you have two types a couple different

00:34:43,629 --> 00:34:46,539
types of bonds you have read/write

00:34:44,740 --> 00:34:48,490
volumes you have read-only volumes and

00:34:46,539 --> 00:34:50,139
you have backup volumes fact that

00:34:48,490 --> 00:34:53,319
volumes are really just special cases of

00:34:50,139 --> 00:34:55,089
read-only volumes and when you update a

00:34:53,319 --> 00:34:57,490
readwrite volume you have to run a

00:34:55,089 --> 00:35:00,789
command called bossed release that will

00:34:57,490 --> 00:35:03,099
then update all the read-only replicas

00:35:00,789 --> 00:35:05,200
which is a differential update it's not

00:35:03,099 --> 00:35:12,640
a full copy it just copies the

00:35:05,200 --> 00:35:17,789
differences now I just need to restart

00:35:12,640 --> 00:35:17,789
my client so now

00:35:21,300 --> 00:35:29,460
I now have my my cell online as I

00:35:26,040 --> 00:35:31,380
mentioned if I look at slash AFS you see

00:35:29,460 --> 00:35:33,570
multiple cells I actually trimmed out

00:35:31,380 --> 00:35:35,460
most of them a common cell that you want

00:35:33,570 --> 00:35:37,680
to look at it's grand at central org

00:35:35,460 --> 00:35:41,370
which is one that actually distributes

00:35:37,680 --> 00:35:43,860
the FS software so you can actually if

00:35:41,370 --> 00:35:46,250
you had the AFS client installed you

00:35:43,860 --> 00:35:49,590
could actually upgrade directly out of

00:35:46,250 --> 00:35:53,550
the ER peanut out from the RPMs that are

00:35:49,590 --> 00:35:55,050
hosted on AFS Grand Central org I don't

00:35:53,550 --> 00:35:56,730
recommend it but you could actually just

00:35:55,050 --> 00:36:05,730
download them straight to your local box

00:35:56,730 --> 00:36:14,270
and then update them so I'm just gonna

00:36:05,730 --> 00:36:14,270
go ahead and Duchaine it again I can't I

00:36:20,720 --> 00:36:26,240
so I've got my Kerberos credentials

00:36:23,630 --> 00:36:28,970
right here now if I run the tokens

00:36:26,240 --> 00:36:32,210
command it says I have no tokens but I

00:36:28,970 --> 00:36:36,650
do a K log and I run tokens again I now

00:36:32,210 --> 00:36:39,589
have a token which is your your a kind

00:36:36,650 --> 00:36:41,690
of your authentication context and this

00:36:39,589 --> 00:36:45,410
is something kind of throws people it

00:36:41,690 --> 00:36:48,500
expires so if someone you got users that

00:36:45,410 --> 00:36:51,950
does never logout yeah they're there

00:36:48,500 --> 00:36:54,290
they will automatically lose access to

00:36:51,950 --> 00:36:56,780
their files when their tokens expire

00:36:54,290 --> 00:36:58,609
now you can't renew them you can just do

00:36:56,780 --> 00:37:01,460
a cane it again - Aniki log and you'll

00:36:58,609 --> 00:37:03,230
you're good for another day or another

00:37:01,460 --> 00:37:06,470
five days or however long you've got

00:37:03,230 --> 00:37:10,760
Kerberos set to issue you tickets and

00:37:06,470 --> 00:37:14,569
whatever your ticket lifetime is so now

00:37:10,760 --> 00:37:18,230
that I have access to my cell and I've

00:37:14,569 --> 00:37:25,069
authenticated I can do whatever I want I

00:37:18,230 --> 00:37:27,230
can just update files okay it's

00:37:25,069 --> 00:37:32,480
complaining because I forgot that this

00:37:27,230 --> 00:37:36,380
is a read-only volume I can update it if

00:37:32,480 --> 00:37:39,310
I just go to slash af-s slash dot

00:37:36,380 --> 00:37:39,310
example.org

00:37:40,390 --> 00:37:45,290
so dad doesn't have the read-only on

00:37:42,950 --> 00:37:45,950
there this is the vault the volume name

00:37:45,290 --> 00:37:48,050
right here

00:37:45,950 --> 00:37:50,839
and it tells me what the quota is how

00:37:48,050 --> 00:37:58,099
much is used and how much of the

00:37:50,839 --> 00:38:05,450
partition is used and if I just make a

00:37:58,099 --> 00:38:07,720
file so here's bar it has the contents

00:38:05,450 --> 00:38:07,720
of foo

00:38:10,969 --> 00:38:17,779
but you notice it doesn't update so I

00:38:14,219 --> 00:38:17,779
have to do a pulse release

00:38:22,530 --> 00:38:29,960
and it's telling me it's it's doing the

00:38:24,870 --> 00:38:29,960
other release so what I want to do now

00:38:33,740 --> 00:38:42,320
open a new tab and I'm gonna start up

00:38:39,480 --> 00:38:42,320
another file server

00:38:50,140 --> 00:38:54,579
now normally what you do is you can

00:38:53,289 --> 00:38:56,289
start up and you can run everything on

00:38:54,579 --> 00:38:58,269
one server but you have the two

00:38:56,289 --> 00:39:00,279
different roles that the cell server and

00:38:58,269 --> 00:39:01,749
the file server and once you actually

00:39:00,279 --> 00:39:03,579
start expanding you actually want to

00:39:01,749 --> 00:39:07,539
take to typically take the file server

00:39:03,579 --> 00:39:11,259
role off your cell servers and cell

00:39:07,539 --> 00:39:13,119
servers are very paltry I mean you could

00:39:11,259 --> 00:39:17,650
run them off of a Raspberry Pi I mean

00:39:13,119 --> 00:39:20,410
it's very low resource usage and ideally

00:39:17,650 --> 00:39:21,369
you want to have three cell servers that

00:39:20,410 --> 00:39:24,309
actually gives you the minimum

00:39:21,369 --> 00:39:28,029
redundancy because you need three to

00:39:24,309 --> 00:39:30,730
establish you need 2/3 to establish a

00:39:28,029 --> 00:39:32,079
quorum and at that point you can

00:39:30,730 --> 00:39:33,849
actually take one of your cell servers

00:39:32,079 --> 00:39:36,549
down if you have three and the other to

00:39:33,849 --> 00:39:38,980
keep functioning normally if you lose

00:39:36,549 --> 00:39:40,690
two of the three then you're now on

00:39:38,980 --> 00:39:41,440
read-only operations you can't update

00:39:40,690 --> 00:39:45,400
your volumes

00:39:41,440 --> 00:39:46,960
you can't create users but you would

00:39:45,400 --> 00:39:49,690
still you you would still be able to

00:39:46,960 --> 00:39:51,430
access your files and I'll tell you I

00:39:49,690 --> 00:39:55,539
actually do my upgrades and my cell

00:39:51,430 --> 00:39:57,220
servers during the business day actually

00:39:55,539 --> 00:39:58,680
reboot them people don't they don't

00:39:57,220 --> 00:40:02,910
notice besides just a little bit of a

00:39:58,680 --> 00:40:02,910
little lag sometimes sometimes

00:40:13,750 --> 00:40:17,339
I should have started this guy earlier

00:40:20,370 --> 00:40:56,590
any any other questions while I'm

00:40:22,600 --> 00:40:59,950
waiting for this now it's it's worth

00:40:56,590 --> 00:41:01,660
noting that you could you have to be

00:40:59,950 --> 00:41:03,250
able to in order to authenticate to your

00:41:01,660 --> 00:41:07,480
AFSL you have to be able to connect to

00:41:03,250 --> 00:41:09,760
both the Kerberos cell and the Kerberos

00:41:07,480 --> 00:41:12,130
realm and headwear servers and your AFS

00:41:09,760 --> 00:41:14,530
cell servers and any file servers you

00:41:12,130 --> 00:41:16,120
need to contact so if they can't talk to

00:41:14,530 --> 00:41:19,180
your Kerberos servers they can't get

00:41:16,120 --> 00:41:21,550
authenticated access now AFS does have a

00:41:19,180 --> 00:41:24,760
built in anonymous access called system

00:41:21,550 --> 00:41:26,800
any user and you can use that just to

00:41:24,760 --> 00:41:34,330
browse around that's where the public

00:41:26,800 --> 00:41:37,680
cells are that's what they use okay the

00:41:34,330 --> 00:41:37,680
guys still formatting the disks

00:41:44,290 --> 00:41:50,040
so if you use the elf qfs list quota

00:41:46,810 --> 00:41:53,530
command you'll see that here's rude cell

00:41:50,040 --> 00:41:56,770
and I also have a service the service

00:41:53,530 --> 00:42:00,430
folder happens to be in a balloon called

00:41:56,770 --> 00:42:03,100
service the user volume happens to be in

00:42:00,430 --> 00:42:10,510
a volume called the user folder happens

00:42:03,100 --> 00:42:12,370
to be in volume called user and the

00:42:10,510 --> 00:42:15,130
really nice thing about this moving the

00:42:12,370 --> 00:42:17,920
blinds back and forth is you set up a

00:42:15,130 --> 00:42:19,990
file server and oh no we're running out

00:42:17,920 --> 00:42:23,080
of disk space or we need to migrate

00:42:19,990 --> 00:42:25,300
something you can take the server down

00:42:23,080 --> 00:42:27,610
you have the option of moving all the

00:42:25,300 --> 00:42:29,830
data off to a different server you don't

00:42:27,610 --> 00:42:31,240
have to know to that's nice to notify

00:42:29,830 --> 00:42:33,190
the users but it's not absolutely

00:42:31,240 --> 00:42:39,700
required if you do it at night you don't

00:42:33,190 --> 00:42:41,920
even they won't even notice now if you

00:42:39,700 --> 00:42:43,660
have a really big operation like oh you

00:42:41,920 --> 00:42:47,890
have taking a data center down if you

00:42:43,660 --> 00:42:49,840
had enough notice and you could actually

00:42:47,890 --> 00:42:51,880
transfer all of your data out of the

00:42:49,840 --> 00:42:54,640
file servers in that data center to a

00:42:51,880 --> 00:42:56,920
different data center but if you're

00:42:54,640 --> 00:42:58,120
dealing it's not very practical when

00:42:56,920 --> 00:43:01,420
you're dealing with just you know

00:42:58,120 --> 00:43:02,560
terabytes of data I mean it just depends

00:43:01,420 --> 00:43:06,040
on your network latency and throughput

00:43:02,560 --> 00:43:08,440
and if you have enough enough notice you

00:43:06,040 --> 00:43:12,310
can do it it's just a matter of you know

00:43:08,440 --> 00:43:15,670
the hassle that's all and it wasn't it

00:43:12,310 --> 00:43:18,390
is it important enough to you do all

00:43:15,670 --> 00:43:26,370
that work or just suffer the downtime

00:43:18,390 --> 00:43:29,260
but you have that choice so while the

00:43:26,370 --> 00:43:32,200
server's coming back up if you want to

00:43:29,260 --> 00:43:35,620
set up a second AFS file server or third

00:43:32,200 --> 00:43:39,870
you actually have to copy a little a

00:43:35,620 --> 00:43:42,850
couple of files out of here your configs

00:43:39,870 --> 00:43:46,990
which on debian existant it's the open

00:43:42,850 --> 00:43:49,180
FS server under other platforms it may

00:43:46,990 --> 00:43:52,020
be under slash a it's like user slash

00:43:49,180 --> 00:43:52,020
AFS

00:43:52,480 --> 00:43:58,630
and what we have is you have cell Sardi

00:43:56,099 --> 00:44:00,670
which there's two copies of cell serve

00:43:58,630 --> 00:44:02,560
to be one on the client which tells you

00:44:00,670 --> 00:44:04,270
how to connect to the cell and one on

00:44:02,560 --> 00:44:08,680
the servers to tell them what the other

00:44:04,270 --> 00:44:14,320
what their cell servers are and if you

00:44:08,680 --> 00:44:16,839
just copy those files to someplace you

00:44:14,320 --> 00:44:20,310
have to copy them to the other servers

00:44:16,839 --> 00:44:20,310
in your realm or your cell

00:44:29,510 --> 00:44:35,020
okay now that I'm up I can SSH into it

00:44:49,640 --> 00:44:57,700
so if I copy the big thing is to sell

00:44:54,559 --> 00:44:57,700
started leaving the key file

00:45:24,589 --> 00:45:31,849
okay I'm looking good yeah I've got a

00:45:27,890 --> 00:45:34,930
little script to help me set up my

00:45:31,849 --> 00:45:34,930
second fall server

00:45:41,000 --> 00:45:51,710
and basically all that did was install

00:45:44,540 --> 00:45:55,550
the local services so that actually

00:45:51,710 --> 00:45:58,609
added the da file server or da Vall

00:45:55,550 --> 00:46:02,109
server salvaged server and the a file

00:45:58,609 --> 00:46:06,530
server which is demand attached so now

00:46:02,109 --> 00:46:09,710
what I can do is as I mentioned before

00:46:06,530 --> 00:46:12,020
Oh No we're running out of disk space so

00:46:09,710 --> 00:46:15,830
if I do boss examine on the service

00:46:12,020 --> 00:46:22,570
volume it'll show me that I'm actually

00:46:15,830 --> 00:46:22,570
on DB server if I just want to move it

00:46:50,090 --> 00:46:56,210
yeah I should have done that I'd do that

00:46:52,730 --> 00:46:57,230
any other cell the other one notice a

00:46:56,210 --> 00:46:59,770
complain because I didn't have

00:46:57,230 --> 00:46:59,770
authentication

00:47:05,300 --> 00:47:11,990
so here I'm saying move from DB server

00:47:08,210 --> 00:47:20,150
partition a which is vice PA to file

00:47:11,990 --> 00:47:22,190
server partition a and you'll it

00:47:20,150 --> 00:47:30,680
actually would say it's moving

00:47:22,190 --> 00:47:33,500
transaction if I did for Bo's takes a

00:47:30,680 --> 00:47:35,450
little bit and obviously since I'm you

00:47:33,500 --> 00:47:39,790
know emulating two machines on my laptop

00:47:35,450 --> 00:47:39,790
it's doing a lot of disks thrashing

00:47:51,290 --> 00:47:56,690
something just to be aware of one of the

00:47:53,360 --> 00:48:00,890
gotchas with AFS is your UNIX mode bits

00:47:56,690 --> 00:48:06,830
don't really matter don't matter it

00:48:00,890 --> 00:48:08,510
matter much anymore so you see that

00:48:06,830 --> 00:48:11,030
these files actually these folders

00:48:08,510 --> 00:48:14,510
actually have mode 700 say seven seven

00:48:11,030 --> 00:48:16,820
seven they don't not effectively the

00:48:14,510 --> 00:48:20,000
group and owner bits don't matter

00:48:16,820 --> 00:48:22,790
the Akal and the folder is what matters

00:48:20,000 --> 00:48:25,220
so the execute bit matters just because

00:48:22,790 --> 00:48:29,270
you won't be able to execute stuff but

00:48:25,220 --> 00:48:32,630
the when it for the actual access

00:48:29,270 --> 00:48:36,400
control the access control lists on that

00:48:32,630 --> 00:48:36,400
folder is actually what takes precedence

00:48:39,250 --> 00:48:43,900
what like if you're doing POSIX Ackles

00:48:44,590 --> 00:48:51,670
no no there there be different commands

00:48:49,340 --> 00:48:54,290
they don't act like you xp for Ackles

00:48:51,670 --> 00:48:59,870
it's use the FS command to set your

00:48:54,290 --> 00:49:02,930
Ackles chmod controls just how some some

00:48:59,870 --> 00:49:05,900
programs will will complain if you don't

00:49:02,930 --> 00:49:08,750
have the the chmod set correctly the

00:49:05,900 --> 00:49:10,970
unix mode bits so occasionally you do

00:49:08,750 --> 00:49:15,910
have access but the mode bits aren't set

00:49:10,970 --> 00:49:15,910
right you know how the programs expect

00:49:17,320 --> 00:49:19,910
that's pretty good

00:49:18,920 --> 00:49:22,580
you can actually right click go to

00:49:19,910 --> 00:49:23,960
properties you see tabs for a FS volume

00:49:22,580 --> 00:49:27,400
it tells you what file server you're on

00:49:23,960 --> 00:49:27,400
that kind of thing

00:49:28,610 --> 00:49:39,650
I don't know there is a tab there's a

00:49:37,550 --> 00:49:42,170
tab in the Windows Explorer that lets

00:49:39,650 --> 00:50:09,830
you set the Ackles so you can actually

00:49:42,170 --> 00:50:13,280
add and remove people that way okay so

00:50:09,830 --> 00:50:17,090
my false move is actually being a little

00:50:13,280 --> 00:50:22,790
annoying let me go ahead and add a

00:50:17,090 --> 00:50:26,090
replica site for rude sell so I can use

00:50:22,790 --> 00:50:32,470
the ads loss ad site command and I give

00:50:26,090 --> 00:50:32,470
it the name

00:50:35,030 --> 00:50:43,050
and then the volume there are long

00:50:40,710 --> 00:50:46,040
options by the way I'm just not I'm just

00:50:43,050 --> 00:50:46,040
used to not using them

00:50:57,220 --> 00:51:03,549
okay not sure why this isn't working but

00:51:05,420 --> 00:51:13,080
normally it does work and of course the

00:51:08,720 --> 00:51:16,830
presentation God's decided to to not

00:51:13,080 --> 00:51:18,810
shine on me there are some gotchas which

00:51:16,830 --> 00:51:22,260
I want to tell you about if you there's

00:51:18,810 --> 00:51:24,060
a lot of some there are some some

00:51:22,260 --> 00:51:26,370
outdated documentation on the Internet

00:51:24,060 --> 00:51:29,790
if you see anything regarding ka server

00:51:26,370 --> 00:51:32,670
ignore it also there used to be an old

00:51:29,790 --> 00:51:35,330
ntp variant for AFS don't use that

00:51:32,670 --> 00:51:38,970
either and use the normal linux ntp

00:51:35,330 --> 00:51:40,500
there's also up server no one uses it I

00:51:38,970 --> 00:51:44,090
mean you can but it's not really used

00:51:40,500 --> 00:51:46,650
you'd use puppet or chef instead of that

00:51:44,090 --> 00:51:49,380
locking whole file locking is good you

00:51:46,650 --> 00:51:50,850
get advisory locking windows mandatory

00:51:49,380 --> 00:51:53,070
locking does not work correctly

00:51:50,850 --> 00:51:56,430
there's no byte-range locking you'll

00:51:53,070 --> 00:51:57,810
actually acquire an entire file lock you

00:51:56,430 --> 00:51:59,910
don't want to run any kind of database

00:51:57,810 --> 00:52:01,920
out of AFS like if you're running an

00:51:59,910 --> 00:52:05,460
Access database don't run it as

00:52:01,920 --> 00:52:07,710
multi-user exchange or sorry Outlook

00:52:05,460 --> 00:52:12,630
personal folders may not work as

00:52:07,710 --> 00:52:15,360
expected and some of the things that

00:52:12,630 --> 00:52:16,980
people just don't understand is I logged

00:52:15,360 --> 00:52:18,960
in I never logged out why did I lose

00:52:16,980 --> 00:52:21,030
access to my files their access actually

00:52:18,960 --> 00:52:23,280
expires and then when they try to log

00:52:21,030 --> 00:52:24,750
out well things are failing because they

00:52:23,280 --> 00:52:27,390
can't actually save their session or

00:52:24,750 --> 00:52:29,790
their the profile back to the server so

00:52:27,390 --> 00:52:31,830
you know just getting lots of errors at

00:52:29,790 --> 00:52:33,600
that point and that doesn't not match

00:52:31,830 --> 00:52:36,960
with people's expectation that you log

00:52:33,600 --> 00:52:39,570
in and you just you know you you never

00:52:36,960 --> 00:52:43,440
lose access once you log in you stay

00:52:39,570 --> 00:52:45,300
connected forever which is not the case

00:52:43,440 --> 00:52:47,010
that's Jeff and cron jobs are

00:52:45,300 --> 00:52:49,680
interesting you have to find a way to

00:52:47,010 --> 00:52:52,020
authenticate if you're running services

00:52:49,680 --> 00:52:55,350
also there's a wonderful utility called

00:52:52,020 --> 00:52:57,390
k5 start by gentleman gentleman by the

00:52:55,350 --> 00:52:59,810
name of Russ all Barry wrote it so it

00:52:57,390 --> 00:53:02,640
you what you do is you take a Kerberos

00:52:59,810 --> 00:53:04,470
password or you get a what's called a

00:53:02,640 --> 00:53:06,750
key tab which is essentially a password

00:53:04,470 --> 00:53:08,850
in a file for Kerberos and it's

00:53:06,750 --> 00:53:14,070
encrypted and you will run the service

00:53:08,850 --> 00:53:15,720
with that context other things there are

00:53:14,070 --> 00:53:17,880
two different authentication contexts

00:53:15,720 --> 00:53:21,240
for example if I'm root

00:53:17,880 --> 00:53:25,760
on the box I cannot I can become you

00:53:21,240 --> 00:53:27,690
know Joe user but I cannot gain his AFS

00:53:25,760 --> 00:53:32,880
credentials unless actually know the

00:53:27,690 --> 00:53:34,110
password so even though it's really cool

00:53:32,880 --> 00:53:35,910
that way actually

00:53:34,110 --> 00:53:39,720
because if someone gets root on one of

00:53:35,910 --> 00:53:43,770
my workstations they don't have any

00:53:39,720 --> 00:53:45,840
special access in the FS folders and

00:53:43,770 --> 00:53:48,720
without doing some you know kind of

00:53:45,840 --> 00:53:51,900
sniffing passwords or something tickets

00:53:48,720 --> 00:53:53,610
and tokens so you have Kerberos tickets

00:53:51,900 --> 00:53:55,980
and FS tokens and they are separate

00:53:53,610 --> 00:53:58,110
although you just run the a K log

00:53:55,980 --> 00:54:01,110
command to cop since you convert your

00:53:58,110 --> 00:54:02,730
Kerberos tickets into tokens so people

00:54:01,110 --> 00:54:07,170
say well it's a ticket it's a token it's

00:54:02,730 --> 00:54:09,540
just some user stuff to keep in mind I

00:54:07,170 --> 00:54:11,640
already mentioned the unix mode bits act

00:54:09,540 --> 00:54:13,740
differently and you can't hard link

00:54:11,640 --> 00:54:16,050
between different folders because the

00:54:13,740 --> 00:54:18,480
access controls just don't quite carry

00:54:16,050 --> 00:54:19,920
over you know which which access control

00:54:18,480 --> 00:54:22,500
would fit would would be the one you

00:54:19,920 --> 00:54:23,640
look at the one in this the parent you

00:54:22,500 --> 00:54:26,130
know the source directory or the

00:54:23,640 --> 00:54:30,840
destination so hard links don't work

00:54:26,130 --> 00:54:32,490
softly soft links are fine most of the

00:54:30,840 --> 00:54:34,260
times these don't work don't aren't a

00:54:32,490 --> 00:54:37,500
big issue and for things like that's

00:54:34,260 --> 00:54:40,500
jobs and cron jobs you can either set a

00:54:37,500 --> 00:54:42,900
you make a dedicated principle for that

00:54:40,500 --> 00:54:45,960
service you can add a principle for the

00:54:42,900 --> 00:54:48,630
box so that it indicates or you can just

00:54:45,960 --> 00:54:50,430
set an IP Akal so you can actually just

00:54:48,630 --> 00:54:54,480
grant anonymous access to that

00:54:50,430 --> 00:54:57,120
particular host and if you want to find

00:54:54,480 --> 00:54:58,560
out more you can all go to wow that's

00:54:57,120 --> 00:55:01,380
terrible

00:54:58,560 --> 00:55:07,980
terrible color you can go to the FS

00:55:01,380 --> 00:55:09,900
website you can go to come on basically

00:55:07,980 --> 00:55:12,740
go to the website or any of these other

00:55:09,900 --> 00:55:12,740
places

00:55:23,010 --> 00:55:29,240
so basically can go to go to open FS

00:55:25,530 --> 00:55:33,750
dorg you can get to the wiki the docs

00:55:29,240 --> 00:55:36,510
IRC the open FS channel on freenode this

00:55:33,750 --> 00:55:42,060
demo you can get it at github calm slash

00:55:36,510 --> 00:55:45,869
edge stir EDG est er so that complaint

00:55:42,060 --> 00:55:47,670
that will set up bar me that will set up

00:55:45,869 --> 00:55:49,500
an entire FS cell for you

00:55:47,670 --> 00:55:51,450
with just a couple of scripts so you can

00:55:49,500 --> 00:55:55,470
play around with it that's round with it

00:55:51,450 --> 00:55:57,480
and if you join the mailing list the

00:55:55,470 --> 00:55:59,490
mailing list are awesome they have that

00:55:57,480 --> 00:56:02,460
if you have any questions go ahead and

00:55:59,490 --> 00:56:03,840
ask on the mailing list and if you

00:56:02,460 --> 00:56:05,490
actually want commercial support there

00:56:03,840 --> 00:56:09,330
are a handful of vendors will actually

00:56:05,490 --> 00:56:13,710
give you commercial support so it's all

00:56:09,330 --> 00:56:16,380
pretty good sorry for the technical

00:56:13,710 --> 00:56:20,630
glitches I hope everybody learned alot

00:56:16,380 --> 00:56:20,630
from here any questions any comments

00:56:37,830 --> 00:56:42,820
we haven't noticed actually we haven't

00:56:40,690 --> 00:56:44,890
noticed the cab complaining what

00:56:42,820 --> 00:56:46,540
happened okay let me let me back up in

00:56:44,890 --> 00:56:48,520
the bite range locking what happens when

00:56:46,540 --> 00:56:51,640
you do bite range locking on FS is it

00:56:48,520 --> 00:56:55,240
well actually to the server it will get

00:56:51,640 --> 00:56:56,680
a full file lock and on the client it

00:56:55,240 --> 00:56:59,920
will actually locally it will do bite

00:56:56,680 --> 00:57:02,170
range locking so the program's it

00:56:59,920 --> 00:57:04,240
actually works but your but you can't do

00:57:02,170 --> 00:57:06,720
bite range locking between two different

00:57:04,240 --> 00:57:09,340
clients and expect it to work properly

00:57:06,720 --> 00:57:12,869
it's just going to be the tire file will

00:57:09,340 --> 00:57:12,869
be locked not just that bite range

00:57:22,880 --> 00:57:28,470
correct if you try if you have two

00:57:25,859 --> 00:57:29,820
people trying to access the same file at

00:57:28,470 --> 00:57:37,830
the same time you will get blocked

00:57:29,820 --> 00:57:39,690
saying okay this file is in use okay we

00:57:37,830 --> 00:57:46,109
don't have that much of a prod it's not

00:57:39,690 --> 00:57:48,450
that big a deal in our group anybody has

00:57:46,109 --> 00:57:50,270
any questions shoot me a Twitter message

00:57:48,450 --> 00:57:53,580
or just hop on the man on the list I'm

00:57:50,270 --> 00:57:56,310
usually on there if you want to you can

00:57:53,580 --> 00:57:57,170
come and talk to me afterwards I think

00:57:56,310 --> 00:58:00,320
I'm done

00:57:57,170 --> 00:58:00,320
thank you

00:58:44,820 --> 00:58:49,800
most enterprises today realize that

00:58:47,520 --> 00:58:51,450
usernames and passwords alone aren't

00:58:49,800 --> 00:58:53,070
enough to keep their network safe from

00:58:51,450 --> 00:58:54,960
unauthorized intrusions

00:58:53,070 --> 00:58:57,450
that's like two-factor authentication

00:58:54,960 --> 00:58:58,620
has gotten so popular lately that adds

00:58:57,450 --> 00:59:01,220
that extra layer of protection

00:58:58,620 --> 00:59:03,780
enterprise networks need to stay safe

00:59:01,220 --> 00:59:05,670
but what you may not know is that some

00:59:03,780 --> 00:59:07,460
two-factor authentication solutions

00:59:05,670 --> 00:59:10,080
they're better than others like

00:59:07,460 --> 00:59:12,720
two-factor strong authentication with

00:59:10,080 --> 00:59:14,640
wicked wicked goes beyond on their

00:59:12,720 --> 00:59:17,220
authentication systems by being less

00:59:14,640 --> 00:59:20,070
expensive easier to implement and easier

00:59:17,220 --> 00:59:21,750
to use giving you software based token

00:59:20,070 --> 00:59:24,570
clients built to run on all major

00:59:21,750 --> 00:59:27,170
devices and OSS including iOS and

00:59:24,570 --> 00:59:29,460
Android these tokens utilize a

00:59:27,170 --> 00:59:31,740
public/private key combination that's

00:59:29,460 --> 00:59:33,870
generated an on device so there aren't

00:59:31,740 --> 00:59:36,390
any shared secrets flying around for

00:59:33,870 --> 00:59:37,560
attackers to hijack or which require any

00:59:36,390 --> 00:59:40,170
special handling

00:59:37,560 --> 00:59:42,270
instead all keys are kept secure and

00:59:40,170 --> 00:59:44,640
private between the requesting token and

00:59:42,270 --> 00:59:47,100
your server which you control in house

00:59:44,640 --> 00:59:49,680
making it the most secure way possible

00:59:47,100 --> 00:59:52,350
to perform authentication encryption and

00:59:49,680 --> 00:59:54,390
with an extensive flexible API and

00:59:52,350 --> 00:59:57,150
support for protocols like LDAP and

00:59:54,390 --> 00:59:59,040
radius wicked works with any enterprise

00:59:57,150 --> 01:00:01,490
network architecture to protect

00:59:59,040 --> 01:00:04,010
the IT systems vital to your enterprise

01:00:01,490 --> 01:00:05,940
download your wicked free trial today

01:00:04,010 --> 01:00:07,890
regardless of whether you're considering

01:00:05,940 --> 01:00:09,900
two-factor authentication for the first

01:00:07,890 --> 01:00:12,930
time or just ready to ditch your

01:00:09,900 --> 01:00:15,330
existing expensive key file system we

01:00:12,930 --> 01:00:20,240
can help with easy to implement easy to

01:00:15,330 --> 01:00:20,240
use strong authentication from wicked

01:00:24,910 --> 01:00:31,930
how's that so every way this is the way

01:00:28,240 --> 01:00:33,640
to better utilize all your resources and

01:00:31,930 --> 01:00:36,970
it makes managing all your resources

01:00:33,640 --> 01:00:40,800
pretty easy all of the innovation is

01:00:36,970 --> 01:00:44,320
happening in open source the

01:00:40,800 --> 01:00:46,240
collaborative nature and of the you know

01:00:44,320 --> 01:00:48,460
of the community and the speed at which

01:00:46,240 --> 01:00:50,230
these are these you know these these

01:00:48,460 --> 01:00:52,090
deficiencies these bugs are getting

01:00:50,230 --> 01:00:54,460
discovered and then fixed is there

01:00:52,090 --> 01:00:55,930
anything that really shows the power of

01:00:54,460 --> 01:00:58,660
the you know of the open source

01:00:55,930 --> 01:01:00,720
community it is global and it's

01:00:58,660 --> 01:01:04,000
definitely because of the users

01:01:00,720 --> 01:01:10,000
community people are extremely friendly

01:01:04,000 --> 01:01:11,740
and they're always ready to help if you

01:01:10,000 --> 01:01:13,390
go an entire see any day you'll see

01:01:11,740 --> 01:01:15,310
these guys helping each other out and

01:01:13,390 --> 01:01:18,220
they're all doing it like in a selfless

01:01:15,310 --> 01:01:19,780
manner the product is transparent for

01:01:18,220 --> 01:01:24,040
everyone everyone can look at the

01:01:19,780 --> 01:01:26,320
codebase everyone can see how Grau stack

01:01:24,040 --> 01:01:27,130
is being built nothing nothing is

01:01:26,320 --> 01:01:32,530
proprietary

01:01:27,130 --> 01:01:34,930
everything is open in many ways it's

01:01:32,530 --> 01:01:39,430
absolutely vital to the be ongoing

01:01:34,930 --> 01:01:43,810
health piled stack the most exciting

01:01:39,430 --> 01:01:46,670
event in recent memory for me was our

01:01:43,810 --> 01:01:49,039
first developer boot camp

01:01:46,670 --> 01:01:51,950
and our call gave people I think maybe

01:01:49,039 --> 01:01:55,910
two weeks notice to come attend I was

01:01:51,950 --> 01:02:00,079
expecting 25 or 30 people so we ended up

01:01:55,910 --> 01:02:02,930
with 87 people and had to go get more

01:02:00,079 --> 01:02:05,480
chairs in the room twice everything

01:02:02,930 --> 01:02:08,779
within cloud computing is commodity and

01:02:05,480 --> 01:02:11,750
is open source and so I don't think that

01:02:08,779 --> 01:02:13,519
you will you'll see anywhere where open

01:02:11,750 --> 01:02:16,549
source is not pervasive in cloud

01:02:13,519 --> 01:02:19,279
computing and so I think it's I think

01:02:16,549 --> 01:02:20,630
it's an assumption I think when you talk

01:02:19,279 --> 01:02:21,799
about cloud computing you're really

01:02:20,630 --> 01:02:26,720
talking about open source cloud

01:02:21,799 --> 01:02:29,900
computing cloud sack is a robust

01:02:26,720 --> 01:02:32,180
solution for large deployments you have

01:02:29,900 --> 01:02:35,500
dozens of data centers and thousands of

01:02:32,180 --> 01:02:38,750
servers in each data centers these

01:02:35,500 --> 01:02:42,049
hardware is gonna fail and cloud stack

01:02:38,750 --> 01:02:45,109
is designed to handle number one that

01:02:42,049 --> 01:02:47,029
mass scale number two it's designed to

01:02:45,109 --> 01:02:50,660
handle the failure that inevitably

01:02:47,029 --> 01:02:53,710
happens in large deployments we started

01:02:50,660 --> 01:02:57,529
working on contact over four years ago

01:02:53,710 --> 01:03:01,130
it was the original set of people

01:02:57,529 --> 01:03:03,549
working on it delivering software to

01:03:01,130 --> 01:03:07,130
telcos and service providers

01:03:03,549 --> 01:03:12,130
lots of QA lots of users actually using

01:03:07,130 --> 01:03:15,440
it high availability is the key feature

01:03:12,130 --> 01:03:17,569
multiple hypervisor support different

01:03:15,440 --> 01:03:18,490
network models we can pick up whatever

01:03:17,569 --> 01:03:21,289
suits you better

01:03:18,490 --> 01:03:24,460
well that management server can be

01:03:21,289 --> 01:03:27,259
deployed in different physical machines

01:03:24,460 --> 01:03:28,880
it definitely has a huge footprint it's

01:03:27,259 --> 01:03:34,279
being deployed everywhere there's a

01:03:28,880 --> 01:03:36,019
major movie studio that they were using

01:03:34,279 --> 01:03:39,259
cloud stack they were using it to

01:03:36,019 --> 01:03:41,420
transcode video and I thought that was

01:03:39,259 --> 01:03:42,740
terribly fascinating what I found more

01:03:41,420 --> 01:03:45,980
fascinating is what they did during

01:03:42,740 --> 01:03:48,769
lunch where they would spin up you know

01:03:45,980 --> 01:03:50,150
50 or 60 game servers then as soon as

01:03:48,769 --> 01:03:50,650
lunch was over they would destroy all

01:03:50,150 --> 01:03:53,620
the

01:03:50,650 --> 01:03:55,330
and get back to doing real work cloud

01:03:53,620 --> 01:03:57,100
stack is vast

01:03:55,330 --> 01:03:58,660
it touches so many different aspects and

01:03:57,100 --> 01:04:00,790
there's no one person that's kind of

01:03:58,660 --> 01:04:04,060
like a master of all those realms

01:04:00,790 --> 01:04:06,760
I think cloud stack as a project is

01:04:04,060 --> 01:04:09,370
going to be one of the leaders simply

01:04:06,760 --> 01:04:14,110
because it's some of the most beautiful

01:04:09,370 --> 01:04:18,430
and and and robust platforms out they

01:04:14,110 --> 01:04:20,730
were Adams senior living for the cloud

01:04:18,430 --> 01:04:20,730
Stagg

01:04:33,540 --> 01:04:35,600
you

01:04:38,920 --> 01:04:43,730
when we created asterisk over a decade

01:04:41,630 --> 01:04:45,950
ago we could not have imagined that

01:04:43,730 --> 01:04:48,140
asterisk would not only become the most

01:04:45,950 --> 01:04:50,270
widely adopted open-source communication

01:04:48,140 --> 01:04:52,310
software on the planet but that it would

01:04:50,270 --> 01:04:53,660
impact the entire industry in the way

01:04:52,310 --> 01:04:55,310
that it has today

01:04:53,660 --> 01:04:57,680
asterisk has found its way in the more

01:04:55,310 --> 01:04:59,930
than 170 countries and virtually every

01:04:57,680 --> 01:05:02,060
Fortune 1000 company the success of

01:04:59,930 --> 01:05:04,160
asterisk has enabled a transition of

01:05:02,060 --> 01:05:06,410
power from the hands of the traditional

01:05:04,160 --> 01:05:08,210
proprietary phone vendors into the hands

01:05:06,410 --> 01:05:11,060
of the users and administrators of phone

01:05:08,210 --> 01:05:12,410
systems using this power our customers

01:05:11,060 --> 01:05:14,540
have created all sorts of business

01:05:12,410 --> 01:05:16,190
changing applications from small office

01:05:14,540 --> 01:05:18,110
phone systems to mission-critical call

01:05:16,190 --> 01:05:20,120
centers the international carrier

01:05:18,110 --> 01:05:21,740
networks in fact there's even an entire

01:05:20,120 --> 01:05:23,750
country those communications

01:05:21,740 --> 01:05:25,100
infrastructure runs on asters the Jim

01:05:23,750 --> 01:05:27,650
has always been about creating

01:05:25,100 --> 01:05:29,090
technology that expands communications

01:05:27,650 --> 01:05:31,130
capabilities and ways that we could

01:05:29,090 --> 01:05:33,170
never have imagined and that's part of

01:05:31,130 --> 01:05:35,300
what's game-changing about Digium today

01:05:33,170 --> 01:05:37,700
we're doing it again this time by

01:05:35,300 --> 01:05:39,980
introducing a new family of HD IP phones

01:05:37,700 --> 01:05:41,840
that extends control of the user all the

01:05:39,980 --> 01:05:43,640
way to the desktop the launch of these

01:05:41,840 --> 01:05:45,950
new products represents the next phase

01:05:43,640 --> 01:05:47,630
indigenous history of innovation these

01:05:45,950 --> 01:05:49,580
are the first and only IP phones

01:05:47,630 --> 01:05:51,170
designed to fully leverage the power of

01:05:49,580 --> 01:05:52,790
Astra's when we first discussed our

01:05:51,170 --> 01:05:54,620
expectations for building a family of

01:05:52,790 --> 01:05:56,750
phones for use with asterisk our

01:05:54,620 --> 01:05:58,490
requirements were pretty simple we asked

01:05:56,750 --> 01:06:00,140
the team to build the phones such that

01:05:58,490 --> 01:06:02,330
they were easy to install integrate

01:06:00,140 --> 01:06:04,160
provision and use I think you'll soon

01:06:02,330 --> 01:06:06,740
agree our engineers have delivered on

01:06:04,160 --> 01:06:08,390
that goal user feedback is validating

01:06:06,740 --> 01:06:10,640
that when it comes to operation with

01:06:08,390 --> 01:06:12,920
Azure space systems including our own

01:06:10,640 --> 01:06:15,500
Switchvox based product these are the

01:06:12,920 --> 01:06:17,030
easiest to use best integrated most

01:06:15,500 --> 01:06:17,510
interoperable products on the market

01:06:17,030 --> 01:06:19,400
today

01:06:17,510 --> 01:06:21,370
the Digium family of phones will

01:06:19,400 --> 01:06:23,450
initially include three IP des hommes

01:06:21,370 --> 01:06:25,370
uniquely designed to complement any

01:06:23,450 --> 01:06:27,350
asterisks or Switchvox based solution

01:06:25,370 --> 01:06:27,980
these phones are different for a number

01:06:27,350 --> 01:06:30,740
of reasons

01:06:27,980 --> 01:06:33,170
first there is cluesive ly designed for

01:06:30,740 --> 01:06:34,790
use with esters secondly we've made it

01:06:33,170 --> 01:06:37,250
really easy to auto discover and

01:06:34,790 --> 01:06:38,360
provision the phones next we've made it

01:06:37,250 --> 01:06:40,880
easy for the phones to access

01:06:38,360 --> 01:06:42,530
information inside of asterisks allowing

01:06:40,880 --> 01:06:43,630
tight coupling between an application

01:06:42,530 --> 01:06:45,589
and

01:06:43,630 --> 01:06:47,749
additionally we've created an

01:06:45,589 --> 01:06:49,880
applications engine that allows users

01:06:47,749 --> 01:06:53,119
and developers to create and run their

01:06:49,880 --> 01:06:54,890
own apps on the phone and finally we've

01:06:53,119 --> 01:06:56,839
done all of this at a very compelling

01:06:54,890 --> 01:06:58,759
price point at Digium were always

01:06:56,839 --> 01:07:00,619
thinking of ways to give our customers

01:06:58,759 --> 01:07:03,199
the best value in business phone systems

01:07:00,619 --> 01:07:04,729
and also give them the power to create

01:07:03,199 --> 01:07:06,890
their own solutions or any

01:07:04,729 --> 01:07:08,630
communications challenge well continue

01:07:06,890 --> 01:07:10,039
to push the boundaries not only to make

01:07:08,630 --> 01:07:12,109
Astra's cooler faster more

01:07:10,039 --> 01:07:13,579
technologically feature-rich but to make

01:07:12,109 --> 01:07:16,190
asterisk and what communications even

01:07:13,579 --> 01:07:19,900
easier and together will change the way

01:07:16,190 --> 01:07:19,900
the world communicates again

01:07:27,200 --> 01:07:31,470
your customers rely on your website or

01:07:29,940 --> 01:07:33,869
application if it's slower

01:07:31,470 --> 01:07:36,809
non-responsive it infuriates your users

01:07:33,869 --> 01:07:38,609
and costs you money keeping your

01:07:36,809 --> 01:07:42,099
business critical systems humming along

01:07:38,609 --> 01:07:44,440
requires insight into what they're doing

01:07:42,099 --> 01:07:46,390
your system metrics tells stories

01:07:44,440 --> 01:07:48,400
stories that can reveal performance

01:07:46,390 --> 01:07:50,739
bottlenecks resource limitations and

01:07:48,400 --> 01:07:52,630
other problems but how do you keep an

01:07:50,739 --> 01:07:54,940
eye on all of your systems performance

01:07:52,630 --> 01:07:57,700
metrics in real time and record this

01:07:54,940 --> 01:07:59,559
data for a liter analysis enter long

01:07:57,700 --> 01:08:01,749
view the new way to see what's really

01:07:59,559 --> 01:08:03,910
going on under the hood the long view

01:08:01,749 --> 01:08:05,979
dashboard lets you visualize the status

01:08:03,910 --> 01:08:08,440
of all your systems providing you with a

01:08:05,979 --> 01:08:11,799
bird's-eye view of your entire fleet you

01:08:08,440 --> 01:08:14,380
can sort by CPU memory swap processes

01:08:11,799 --> 01:08:16,239
load and network usage click a specific

01:08:14,380 --> 01:08:18,549
system to access its individual

01:08:16,239 --> 01:08:21,060
dashboard then click and drag to zoom in

01:08:18,549 --> 01:08:23,469
on chokepoints and get more detail

01:08:21,060 --> 01:08:25,150
comprehensive network data including

01:08:23,469 --> 01:08:27,460
inbound and outbound traffic is

01:08:25,150 --> 01:08:29,409
available on the network tab and disk

01:08:27,460 --> 01:08:31,569
rights and free space on the disk stab

01:08:29,409 --> 01:08:33,790
while the process Explorer displays

01:08:31,569 --> 01:08:36,339
usage statistics for individual

01:08:33,790 --> 01:08:38,500
processes the system info tab shows

01:08:36,339 --> 01:08:40,900
listening services active connections

01:08:38,500 --> 01:08:43,000
and available updates adding longview to

01:08:40,900 --> 01:08:45,250
a system is easy just click the button

01:08:43,000 --> 01:08:46,900
copy the one-line installation command

01:08:45,250 --> 01:08:49,569
then run the command on your Linux

01:08:46,900 --> 01:08:51,429
system to complete the process the agent

01:08:49,569 --> 01:08:53,380
will begin collecting data and sending

01:08:51,429 --> 01:08:54,880
it to long view then the graphs start

01:08:53,380 --> 01:08:57,430
rolling

01:08:54,880 --> 01:08:59,620
use Longview to gain visibility into

01:08:57,430 --> 01:09:03,540
your servers so when your website or app

01:08:59,620 --> 01:09:03,540

YouTube URL: https://www.youtube.com/watch?v=UaG2oSLVspQ


