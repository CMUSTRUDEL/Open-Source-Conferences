Title: 2013 SouthEast LinuxFest - Joseph Ottinger - Alcyone - Raspberry Pi Music
Publication date: 2014-07-29
Playlist: 2013 SouthEast LinuxFest
Description: 
	2013 SouthEast LinuxFest
Joseph Ottinger - Alcyone - A Raspberry Pi Path To Music
Captions: 
	00:00:00,000 --> 00:00:05,160
the following presentation was recorded

00:00:02,639 --> 00:00:08,280
at the 2013 southeast linux fest in

00:00:05,160 --> 00:00:10,860
charlotte north carolina it is licensed

00:00:08,280 --> 00:00:12,509
under a creative commons license for

00:00:10,860 --> 00:00:18,359
more information about the southeast

00:00:12,509 --> 00:00:20,160
linux fest visit WWDC linux fest org the

00:00:18,359 --> 00:00:22,619
southeast linux fest would like to thank

00:00:20,160 --> 00:00:26,689
the following diamond sponsors in 2013

00:00:22,619 --> 00:00:26,689
for helping make these videos possible

00:01:25,909 --> 00:01:32,899
all right guys good morning my name is

00:01:30,679 --> 00:01:37,369
joe andrew i'm an employee of red hat

00:01:32,899 --> 00:01:40,369
working primarily with fedora and in the

00:01:37,369 --> 00:01:44,030
open source and standards group what i

00:01:40,369 --> 00:01:45,799
wanted to do today was talk about a

00:01:44,030 --> 00:01:47,209
project that we kind of put together

00:01:45,799 --> 00:01:51,259
kind of playing around with things to

00:01:47,209 --> 00:01:53,270
try to figure out what issues will be

00:01:51,259 --> 00:01:56,240
involved in creating new musical

00:01:53,270 --> 00:01:58,039
instruments the way that we did this was

00:01:56,240 --> 00:01:59,390
you know because I'm a musician in an

00:01:58,039 --> 00:02:01,280
engineer I approached it like an

00:01:59,390 --> 00:02:03,739
engineer would musicians tend to be kind

00:02:01,280 --> 00:02:05,270
of you know let me bang me something

00:02:03,739 --> 00:02:07,729
against a wall and see if I can record

00:02:05,270 --> 00:02:08,690
that and you get music out of that and

00:02:07,729 --> 00:02:10,129
you know sudden you have an album

00:02:08,690 --> 00:02:12,920
someone banging thing it's against a

00:02:10,129 --> 00:02:14,360
wall which you know generated a couple

00:02:12,920 --> 00:02:15,769
of Pink Floyd albums so you see that

00:02:14,360 --> 00:02:19,010
sort of thing has happened but it's

00:02:15,769 --> 00:02:20,690
generally been very haphazard I don't

00:02:19,010 --> 00:02:22,190
really like that too much I like to

00:02:20,690 --> 00:02:24,560
actually you know because of an engineer

00:02:22,190 --> 00:02:28,099
I like to have control so naturally the

00:02:24,560 --> 00:02:29,480
AV wasn't set up what we got here you

00:02:28,099 --> 00:02:31,489
know actually you can see my beautiful

00:02:29,480 --> 00:02:34,310
slides which aren't here because I ran a

00:02:31,489 --> 00:02:37,609
system upgrade this morning and actually

00:02:34,310 --> 00:02:38,750
broke open office so I get to do

00:02:37,609 --> 00:02:40,910
everything from memory which would be

00:02:38,750 --> 00:02:42,500
fine but a little bit less organized

00:02:40,910 --> 00:02:46,700
that I had it it's probably to your

00:02:42,500 --> 00:02:48,200
benefit the project that I chose was

00:02:46,700 --> 00:02:51,709
primarily some mini foot pedals I'm a

00:02:48,200 --> 00:02:53,660
guitarist by trade and as a guitarist

00:02:51,709 --> 00:02:55,130
one of the things you'd like to do is

00:02:53,660 --> 00:02:56,540
you like to play with things on you know

00:02:55,130 --> 00:02:59,060
have foot pedals that control

00:02:56,540 --> 00:03:00,709
distortions and things like that but I

00:02:59,060 --> 00:03:02,269
don't like just playing guitar I do a

00:03:00,709 --> 00:03:03,980
lot of other things on stage I play a

00:03:02,269 --> 00:03:05,780
lot of prog rock and stuff like that so

00:03:03,980 --> 00:03:07,099
I like to have synthesizers to play with

00:03:05,780 --> 00:03:09,109
as well but when you're playing guitar

00:03:07,099 --> 00:03:10,639
your hands are kind of occupied so the

00:03:09,109 --> 00:03:12,200
feet are the natural thing you got the

00:03:10,639 --> 00:03:14,989
new taurus pedals and things like that

00:03:12,200 --> 00:03:17,060
which kind of set the standard for for

00:03:14,989 --> 00:03:20,030
controlling since onstage with rush and

00:03:17,060 --> 00:03:22,549
genesis and put in bands like that so i

00:03:20,030 --> 00:03:24,560
thought the first thing that I wanted to

00:03:22,549 --> 00:03:26,389
do was create something known I wanted

00:03:24,560 --> 00:03:28,639
to start off from one thing foot pedals

00:03:26,389 --> 00:03:31,669
kind of have a certain musician geek

00:03:28,639 --> 00:03:33,139
cred but the other side is that the

00:03:31,669 --> 00:03:36,049
thing about foot pedals is you know what

00:03:33,139 --> 00:03:37,639
they're supposed to do when you play a

00:03:36,049 --> 00:03:38,930
theremin which is an instrument where

00:03:37,639 --> 00:03:42,230
you kind of wave your hands or

00:03:38,930 --> 00:03:44,810
if you've heard the Beach Boys the beach

00:03:42,230 --> 00:03:46,730
boys have that little forget the name of

00:03:44,810 --> 00:03:48,049
the song barbarian I think there's a

00:03:46,730 --> 00:03:49,340
little kind of horrible thing in there

00:03:48,049 --> 00:03:50,540
someone playing with their hands are

00:03:49,340 --> 00:03:51,829
kind of waving their hands in front of

00:03:50,540 --> 00:03:54,650
an instrument and getting music out of

00:03:51,829 --> 00:03:57,950
it well that's all great and I like the

00:03:54,650 --> 00:03:59,480
idea of the theremin the problem is what

00:03:57,950 --> 00:04:01,909
is it supposed to actually generate when

00:03:59,480 --> 00:04:03,739
you wave your hand here is it supposed

00:04:01,909 --> 00:04:05,629
to generate a sea or is it supposed to

00:04:03,739 --> 00:04:07,159
generate an e or is it you know where

00:04:05,629 --> 00:04:08,540
you don't know what the inputs are

00:04:07,159 --> 00:04:10,790
supposed to be you're kind of doing that

00:04:08,540 --> 00:04:12,590
same throw it against the wall and see

00:04:10,790 --> 00:04:14,540
what comes out of it if it's usable

00:04:12,590 --> 00:04:16,099
that's great but you're not really

00:04:14,540 --> 00:04:18,410
working with something predictable and

00:04:16,099 --> 00:04:20,840
as an engineer it's much better to say

00:04:18,410 --> 00:04:24,380
when I hit this I want to get this

00:04:20,840 --> 00:04:25,610
output you know which again musicians

00:04:24,380 --> 00:04:26,990
normally don't do that a whole lot they

00:04:25,610 --> 00:04:28,520
do it son because you're working with

00:04:26,990 --> 00:04:31,360
old you know you know how the chords are

00:04:28,520 --> 00:04:33,349
supposed to sound but in general most

00:04:31,360 --> 00:04:34,820
you know when you're designing something

00:04:33,349 --> 00:04:36,349
new like that you're really kind of are

00:04:34,820 --> 00:04:37,849
throwing against the wall and hoping you

00:04:36,349 --> 00:04:40,280
get something usable out and again I

00:04:37,849 --> 00:04:42,800
don't like that a whole lot so what I

00:04:40,280 --> 00:04:44,750
wanted to do was I can create something

00:04:42,800 --> 00:04:46,220
where I know that my inputs are supposed

00:04:44,750 --> 00:04:49,250
to look like this in my outfit simple

00:04:46,220 --> 00:04:53,000
like that then once I have that I can

00:04:49,250 --> 00:04:55,250
say I've solved all the issues of solve

00:04:53,000 --> 00:04:57,710
the issues around generating music now I

00:04:55,250 --> 00:04:59,150
can start thinking about well do I want

00:04:57,710 --> 00:05:00,770
to wave my hand in front of something

00:04:59,150 --> 00:05:04,789
you know do I want to build a laser harp

00:05:00,770 --> 00:05:06,500
do I want to have something that works

00:05:04,789 --> 00:05:08,419
on temperature whatever the case may be

00:05:06,500 --> 00:05:12,979
at least I'll have the issues solves the

00:05:08,419 --> 00:05:14,599
den effing free my my design from you

00:05:12,979 --> 00:05:17,389
know how do i generate the sound and

00:05:14,599 --> 00:05:20,419
into what do I want to do to create the

00:05:17,389 --> 00:05:23,330
sound I did set some limitations on the

00:05:20,419 --> 00:05:25,159
project I set my requirements have some

00:05:23,330 --> 00:05:27,590
awful requirements and things like that

00:05:25,159 --> 00:05:30,440
the first requirement is I had to be

00:05:27,590 --> 00:05:33,530
able to generate miti miti is thus it

00:05:30,440 --> 00:05:36,139
the sins of the standard music creation

00:05:33,530 --> 00:05:38,690
thing the standard for protocol standard

00:05:36,139 --> 00:05:41,630
protocol for creating music it is not

00:05:38,690 --> 00:05:43,820
perfect it's based on cereal protocols

00:05:41,630 --> 00:05:45,440
so that it's all one noted time you

00:05:43,820 --> 00:05:47,740
don't play a chord you actually send

00:05:45,440 --> 00:05:51,200
three notes immediately after each other

00:05:47,740 --> 00:05:54,580
it's based on 31 250 bog so it's

00:05:51,200 --> 00:05:58,550
slow for today's you know serial devices

00:05:54,580 --> 00:06:00,290
and you know it's fairly well defined

00:05:58,550 --> 00:06:02,210
but it is very limited I mean you know

00:06:00,290 --> 00:06:03,710
we are used to chromatic music we're

00:06:02,210 --> 00:06:07,580
used to western music which is based on

00:06:03,710 --> 00:06:09,170
a 12 note scale and you know midi

00:06:07,580 --> 00:06:11,630
doesn't handle microtones so if you're

00:06:09,170 --> 00:06:12,830
doing Eastern music where you have 24 25

00:06:11,630 --> 00:06:15,350
notes scales where you've got a little

00:06:12,830 --> 00:06:18,740
intermediate nodes MIDI doesn't really

00:06:15,350 --> 00:06:23,830
do that very well but we're in the west

00:06:18,740 --> 00:06:26,900
so western music works committees okay I

00:06:23,830 --> 00:06:27,920
wanted to have it for one playable and

00:06:26,900 --> 00:06:31,490
had to be tough enough to actually

00:06:27,920 --> 00:06:33,080
handle people banging it you know we

00:06:31,490 --> 00:06:34,430
wanted to take it on shows the kids

00:06:33,080 --> 00:06:36,560
could go out and hammer and play

00:06:34,430 --> 00:06:37,820
whack-a-mole with it it also needs to be

00:06:36,560 --> 00:06:40,430
heavy enough that when you're playing

00:06:37,820 --> 00:06:41,780
and it doesn't fly off the stage which

00:06:40,430 --> 00:06:43,340
can be a problem if you're actually

00:06:41,780 --> 00:06:44,540
playing somewhere else oh then someone

00:06:43,340 --> 00:06:47,090
in the front row gets hit with this

00:06:44,540 --> 00:06:48,350
40-pound thing and coming at them and

00:06:47,090 --> 00:06:52,220
then all of a sudden of course you don't

00:06:48,350 --> 00:06:54,260
have anything you can play anymore I did

00:06:52,220 --> 00:06:55,730
not I wanted how does an optional

00:06:54,260 --> 00:06:59,900
requirement that it generates sound

00:06:55,730 --> 00:07:01,730
itself the inspiration for this started

00:06:59,900 --> 00:07:05,120
off with like I mentioned the new taurus

00:07:01,730 --> 00:07:06,680
back in the late 60s the nuke Taurus is

00:07:05,120 --> 00:07:08,090
an actual synthesizer has its own

00:07:06,680 --> 00:07:10,070
oscillators it will generate sound

00:07:08,090 --> 00:07:13,610
itself I would have liked to have done

00:07:10,070 --> 00:07:16,220
that however it was always secondary

00:07:13,610 --> 00:07:17,660
because the way that most bands do music

00:07:16,220 --> 00:07:19,040
today is for what for one thing they

00:07:17,660 --> 00:07:21,590
have a CD that plays all the music's

00:07:19,040 --> 00:07:23,360
there's no actual musicians anymore but

00:07:21,590 --> 00:07:25,340
for those who do play music generally

00:07:23,360 --> 00:07:26,950
you have a bank of synthesizers behind

00:07:25,340 --> 00:07:30,320
the stage that's about you know it's a

00:07:26,950 --> 00:07:32,060
42-year rack and everything on the stage

00:07:30,320 --> 00:07:33,710
just controls those you don't have a

00:07:32,060 --> 00:07:35,840
whole lot of sound generation on stage

00:07:33,710 --> 00:07:37,550
anymore sometimes you do you have a lot

00:07:35,840 --> 00:07:39,230
of retro bands a lot of big people do

00:07:37,550 --> 00:07:40,970
still do it because of the retro cool

00:07:39,230 --> 00:07:43,010
they'll play the Nord synthesizers well

00:07:40,970 --> 00:07:45,230
or they'll have the moves but in general

00:07:43,010 --> 00:07:47,960
your general the standard practice is to

00:07:45,230 --> 00:07:50,150
control it off stage because you not

00:07:47,960 --> 00:07:51,620
freeze the musician from having to set

00:07:50,150 --> 00:07:53,750
everything up you can just change the

00:07:51,620 --> 00:07:55,610
MIDI channel all of a sudden you're

00:07:53,750 --> 00:07:57,380
talking to a different synthesizer much

00:07:55,610 --> 00:08:00,140
more convenient much more controllable

00:07:57,380 --> 00:08:01,640
for a stage environment for the big for

00:08:00,140 --> 00:08:02,840
the larger bands where you're playing to

00:08:01,640 --> 00:08:05,690
a thousand or ten

00:08:02,840 --> 00:08:07,820
or 20,000 people you want that

00:08:05,690 --> 00:08:09,590
predictability and having someone

00:08:07,820 --> 00:08:11,840
accidentally twist the knob and all of a

00:08:09,590 --> 00:08:16,850
sudden your sound is onion possible to

00:08:11,840 --> 00:08:21,949
hear is not a good thing on stage so my

00:08:16,850 --> 00:08:26,419
requirements were again midi not sound

00:08:21,949 --> 00:08:28,280
is optional I had to be able to change

00:08:26,419 --> 00:08:29,810
the parameters I needed to be able to do

00:08:28,280 --> 00:08:31,400
transposition I needed to be able to

00:08:29,810 --> 00:08:35,089
change octave and things like that so I

00:08:31,400 --> 00:08:36,529
needed some control on stage and I need

00:08:35,089 --> 00:08:40,550
have it heavy enough that it wasn't

00:08:36,529 --> 00:08:42,469
going to fly around I then started

00:08:40,550 --> 00:08:44,089
working through my requirements my first

00:08:42,469 --> 00:08:45,800
requirement was of course the physical

00:08:44,089 --> 00:08:47,900
procurement of the pedals and this is

00:08:45,800 --> 00:08:51,200
actually built up ripped off of a lower

00:08:47,900 --> 00:08:53,360
e organ from the pedals are probably 50

00:08:51,200 --> 00:08:54,890
to 60 years old it's one of those old

00:08:53,360 --> 00:08:57,770
things back in the 40s that everyone's

00:08:54,890 --> 00:08:59,870
grandmother grandmother used to have I

00:08:57,770 --> 00:09:04,460
actually just ordered it off of ebay you

00:08:59,870 --> 00:09:06,050
just get pirate the thing so that part

00:09:04,460 --> 00:09:07,580
was fairly easy but then I had to figure

00:09:06,050 --> 00:09:10,270
out how do i generate input from these

00:09:07,580 --> 00:09:12,500
things how does the actual switch work

00:09:10,270 --> 00:09:14,480
basically in the back of the of the

00:09:12,500 --> 00:09:16,160
pedals there's a rocker whenever you

00:09:14,480 --> 00:09:18,380
press the pedal of rocker goes across

00:09:16,160 --> 00:09:20,450
there's a spring that gets dragged

00:09:18,380 --> 00:09:21,709
across and you build a contact well okay

00:09:20,450 --> 00:09:24,260
I've got a simple switch it's got a

00:09:21,709 --> 00:09:25,880
great switch that was one of the issues

00:09:24,260 --> 00:09:29,720
that I had to address later and we'll

00:09:25,880 --> 00:09:30,950
talk about that but actually you know

00:09:29,720 --> 00:09:32,660
that was the first thing can I actually

00:09:30,950 --> 00:09:35,990
generate my input can I tell when

00:09:32,660 --> 00:09:37,640
something is pressed well the answer for

00:09:35,990 --> 00:09:39,650
that is pretty simple yes you hook up a

00:09:37,640 --> 00:09:41,270
light you know run power to it and you

00:09:39,650 --> 00:09:42,800
close the circuit okay and tell which

00:09:41,270 --> 00:09:47,150
one's press that's fairly easy actually

00:09:42,800 --> 00:09:49,550
ripped out a CV gate mechanisms about

00:09:47,150 --> 00:09:51,110
you know yeah it's hall with these

00:09:49,550 --> 00:09:54,290
capacitors that we're about you know

00:09:51,110 --> 00:09:55,490
four inches long but actually ripped all

00:09:54,290 --> 00:09:57,170
that out because I figured well I'm

00:09:55,490 --> 00:09:58,490
going to build my own system i don't

00:09:57,170 --> 00:10:01,430
need what's already there and plus

00:09:58,490 --> 00:10:04,190
what's theirs based on cv gate which is

00:10:01,430 --> 00:10:05,900
1 volt per node so I work with low power

00:10:04,190 --> 00:10:08,890
devices the one volts going to create a

00:10:05,900 --> 00:10:13,610
lot of smoke and light but no sound

00:10:08,890 --> 00:10:15,340
except for maybe an initial pop so then

00:10:13,610 --> 00:10:18,700
the next thing I worked on wobbly

00:10:15,340 --> 00:10:23,080
to an Arduino which is an 18 mega a very

00:10:18,700 --> 00:10:24,430
tiny device the Arduino what I decided

00:10:23,080 --> 00:10:26,050
to do is I was going to try to see if I

00:10:24,430 --> 00:10:27,550
forgive the Arduino to tell which note

00:10:26,050 --> 00:10:29,290
was pressed because the other nappin

00:10:27,550 --> 00:10:31,780
tell that a node is pressed I need to be

00:10:29,290 --> 00:10:33,460
able to determine which one so I set up

00:10:31,780 --> 00:10:35,500
what's called a resistor ladder which is

00:10:33,460 --> 00:10:38,860
a had a beautiful picture of it now

00:10:35,500 --> 00:10:41,740
adult the resistor ladder basically is a

00:10:38,860 --> 00:10:44,080
chain of resistors where where you hook

00:10:41,740 --> 00:10:46,270
up the switch to close the resistor in

00:10:44,080 --> 00:10:48,160
this ladder and the further down the

00:10:46,270 --> 00:10:49,660
down the ladder you close the switch the

00:10:48,160 --> 00:10:51,790
higher the resistance that comes through

00:10:49,660 --> 00:10:53,440
so you can tell just by sampling you get

00:10:51,790 --> 00:10:55,570
you know fifty percent resistance since

00:10:53,440 --> 00:10:59,380
this node forty percent resistance is

00:10:55,570 --> 00:11:01,270
that meant which was great except for a

00:10:59,380 --> 00:11:02,590
couple of things one the resistors were

00:11:01,270 --> 00:11:03,880
kind of low quality so there's a lot of

00:11:02,590 --> 00:11:06,820
variance in the signal that comes

00:11:03,880 --> 00:11:08,950
through second the actual rocker switch

00:11:06,820 --> 00:11:11,650
is a physical switch so it creates a lot

00:11:08,950 --> 00:11:13,840
of balance balance is what happens

00:11:11,650 --> 00:11:15,760
whenever you first close a switch you

00:11:13,840 --> 00:11:17,980
don't actually get a solid signal it's

00:11:15,760 --> 00:11:19,360
not like turning on a light you actually

00:11:17,980 --> 00:11:21,010
get a little bit of Flickr if you look

00:11:19,360 --> 00:11:23,050
through an oscilloscope and you actually

00:11:21,010 --> 00:11:26,380
see a lot of variation until the state

00:11:23,050 --> 00:11:28,210
until the signal stabilizes so that

00:11:26,380 --> 00:11:30,190
meant then when I was sampling I would

00:11:28,210 --> 00:11:32,980
get all of these variants you know all

00:11:30,190 --> 00:11:34,420
these wide variations of data and then

00:11:32,980 --> 00:11:37,000
it would stabilize and I can sort of

00:11:34,420 --> 00:11:40,210
tell but the resistors themselves aren't

00:11:37,000 --> 00:11:41,680
stable so my resistor ladder for one

00:11:40,210 --> 00:11:43,840
thing exhibited some bounce so i've got

00:11:41,680 --> 00:11:46,480
i have a difficult time telling when

00:11:43,840 --> 00:11:49,240
something actually starts but i also had

00:11:46,480 --> 00:11:50,980
to deal with the signal the variation in

00:11:49,240 --> 00:11:53,110
the signal itself which kept on tripping

00:11:50,980 --> 00:11:55,720
past the ranges i mean i can say that

00:11:53,110 --> 00:11:57,730
fifty percent was was this node but my

00:11:55,720 --> 00:12:02,770
actual resistance even holding down that

00:11:57,730 --> 00:12:04,450
note would go from 50 to 60 to 40 to 70

00:12:02,770 --> 00:12:05,800
error just a blip here and there so

00:12:04,450 --> 00:12:09,730
there's a lot of noise in the signal

00:12:05,800 --> 00:12:12,730
even not counting ballots so I wrote a

00:12:09,730 --> 00:12:14,560
routine a software d balancing Brezina

00:12:12,730 --> 00:12:18,820
basically did an oversampling it would

00:12:14,560 --> 00:12:21,460
sample the signal 13 40 times and yes 13

00:12:18,820 --> 00:12:23,290
to 40 to 50 times trying to figure out

00:12:21,460 --> 00:12:26,080
where I can stabilize the signal where i

00:12:23,290 --> 00:12:26,840
can tell yes i have a note or yes i have

00:12:26,080 --> 00:12:29,910
a chain

00:12:26,840 --> 00:12:31,500
and it's this note because i needed to

00:12:29,910 --> 00:12:33,090
filter out all the noise and i did this

00:12:31,500 --> 00:12:34,320
with a furrier transform probably the

00:12:33,090 --> 00:12:41,400
first time that i've used to further

00:12:34,320 --> 00:12:42,840
transform in the real world well the

00:12:41,400 --> 00:12:44,370
first time done in fur to transform in

00:12:42,840 --> 00:12:47,790
the real world that you know actually

00:12:44,370 --> 00:12:52,910
had a point to it and whenever the

00:12:47,790 --> 00:12:52,910
system comes back up oh there it is

00:12:53,690 --> 00:13:00,930
however the fourier transform on the

00:12:57,780 --> 00:13:02,610
Arduino meant that I had a giant lag in

00:13:00,930 --> 00:13:04,860
my data by the time the back of tellin

00:13:02,610 --> 00:13:08,580
note was pressed we were looking at

00:13:04,860 --> 00:13:10,950
anywhere from 12 to 30 milliseconds of a

00:13:08,580 --> 00:13:14,310
delay in which is a I could get it down

00:13:10,950 --> 00:13:16,230
but I couldn't get it stabilized so I

00:13:14,310 --> 00:13:17,640
could tell on this immediately I mean if

00:13:16,230 --> 00:13:20,220
I was looking for a change I could

00:13:17,640 --> 00:13:22,140
determine a change within three to four

00:13:20,220 --> 00:13:24,870
milliseconds the problem is that for me

00:13:22,140 --> 00:13:27,180
to stabilize that took about like I say

00:13:24,870 --> 00:13:31,730
you know roughly 20 40 milliseconds

00:13:27,180 --> 00:13:31,730
which is far too long you can hear that

00:13:31,820 --> 00:13:38,520
so something had to change at that point

00:13:36,630 --> 00:13:40,530
I thought well you know I've gotta just

00:13:38,520 --> 00:13:43,590
hardly known it's all great and it's

00:13:40,530 --> 00:13:44,850
cheap and kind of fun but I really kind

00:13:43,590 --> 00:13:46,470
of would like to go a little bit bigger

00:13:44,850 --> 00:13:47,940
the Arduino isn't going to ever be able

00:13:46,470 --> 00:13:52,050
to generate sound which was one of my

00:13:47,940 --> 00:13:54,480
optional requirements so i had the pie

00:13:52,050 --> 00:13:56,070
so I thought well I've got a pie it's

00:13:54,480 --> 00:13:57,630
got a lot of inputs this time I was

00:13:56,070 --> 00:13:59,010
actually got a real processor and it's

00:13:57,630 --> 00:14:01,710
got multi-threading it's running a real

00:13:59,010 --> 00:14:07,380
operating system which linux you go

00:14:01,710 --> 00:14:09,290
figure with yourself so I went ahead and

00:14:07,380 --> 00:14:12,270
switched over to the PI because of the

00:14:09,290 --> 00:14:14,550
tool support because of the possibility

00:14:12,270 --> 00:14:16,470
I our requirements and also the higher

00:14:14,550 --> 00:14:19,590
speed because the 18 megan's of 16

00:14:16,470 --> 00:14:22,050
megahertz chip which is fine but the you

00:14:19,590 --> 00:14:23,430
know 800 megahertz to a gig you know

00:14:22,050 --> 00:14:25,530
gigahertz is kind of a little bit more

00:14:23,430 --> 00:14:29,250
funds for the you know for the geeks and

00:14:25,530 --> 00:14:30,270
wellness so that was the that was the

00:14:29,250 --> 00:14:32,360
next thing go ahead and rip out

00:14:30,270 --> 00:14:36,290
everything with being with

00:14:32,360 --> 00:14:38,570
hardly known switch over to the pie the

00:14:36,290 --> 00:14:40,730
pie does not have any analog inputs the

00:14:38,570 --> 00:14:43,160
Arduino does so I needed to change how i

00:14:40,730 --> 00:14:45,050
was actually determining the new this

00:14:43,160 --> 00:14:46,970
seemed like a good time actually revised

00:14:45,050 --> 00:14:48,560
how was determining the data because the

00:14:46,970 --> 00:14:50,570
notes were again I was getting a lot of

00:14:48,560 --> 00:14:53,390
fluctuation so I couldn't really do it

00:14:50,570 --> 00:14:54,950
was a lack of usability there so i went

00:14:53,390 --> 00:14:58,760
ahead and switched over to a digital

00:14:54,950 --> 00:15:01,880
input which is bait you know hooking

00:14:58,760 --> 00:15:05,660
into an MCP 2308 chip which is a

00:15:01,880 --> 00:15:07,519
multiplexer chip now can actually tell I

00:15:05,660 --> 00:15:10,700
don't have any variation of note anymore

00:15:07,519 --> 00:15:12,410
i know that i'm pressing note 5 because

00:15:10,700 --> 00:15:13,820
it's the only that's the only input

00:15:12,410 --> 00:15:16,880
that's going to be hooked up there i

00:15:13,820 --> 00:15:19,310
still have to deal with bounce but I no

00:15:16,880 --> 00:15:24,410
longer have to worry about which note is

00:15:19,310 --> 00:15:26,180
depressed so then you know I can take my

00:15:24,410 --> 00:15:27,680
same for your transform except i'm

00:15:26,180 --> 00:15:29,300
working with digital numbers now so it's

00:15:27,680 --> 00:15:31,790
no longer even their transform it's just

00:15:29,300 --> 00:15:33,800
let me take 13 samples let me count

00:15:31,790 --> 00:15:36,279
which one's higher do i have more on and

00:15:33,800 --> 00:15:38,750
off well there's much current status

00:15:36,279 --> 00:15:40,490
going to linux mint that i could also

00:15:38,750 --> 00:15:43,519
change how i was designing the state

00:15:40,490 --> 00:15:46,370
machine and the arduino uses the

00:15:43,519 --> 00:15:48,079
microfiber controller so it's very much

00:15:46,370 --> 00:15:49,519
built on ladder programming it's very

00:15:48,079 --> 00:15:51,380
much a state machine you basically run a

00:15:49,519 --> 00:15:54,079
loop and loop and loop and loop and loop

00:15:51,380 --> 00:15:55,610
and check what's changed do i need to do

00:15:54,079 --> 00:15:59,779
something and so you have a giant if

00:15:55,610 --> 00:16:02,630
basically well using linux mint that i

00:15:59,779 --> 00:16:04,100
had real threading so I no longer have

00:16:02,630 --> 00:16:05,720
to worry quite the same thing about

00:16:04,100 --> 00:16:07,730
having a giant state machine I can

00:16:05,720 --> 00:16:10,670
actually do a series of state machines

00:16:07,730 --> 00:16:12,680
and just use threading nola I'm no

00:16:10,670 --> 00:16:15,380
longer using the Arduino wiring system

00:16:12,680 --> 00:16:17,209
when using C++ directly I can use any

00:16:15,380 --> 00:16:20,089
operating system or any language I could

00:16:17,209 --> 00:16:21,440
have used python I could have used Java

00:16:20,089 --> 00:16:23,329
if I'd wanted to I could have used

00:16:21,440 --> 00:16:24,980
anything but C++ just seemed to be a

00:16:23,329 --> 00:16:27,709
little bit closer for the metal and plus

00:16:24,980 --> 00:16:30,519
I was already using a variant of C++

00:16:27,709 --> 00:16:33,290
with your Arduino so it was an easy port

00:16:30,519 --> 00:16:35,690
so basically what I ended up doing was

00:16:33,290 --> 00:16:38,870
just writing a series of classes to take

00:16:35,690 --> 00:16:42,010
my input debounce then put again just

00:16:38,870 --> 00:16:45,040
over sampling and Counting and then I'm

00:16:42,010 --> 00:16:47,259
at this point with my testing of God

00:16:45,040 --> 00:16:49,660
my endless unable to determine my inputs

00:16:47,259 --> 00:16:52,209
in about three to four milliseconds

00:16:49,660 --> 00:16:53,769
which is well within tolerance for

00:16:52,209 --> 00:16:55,810
musical instruments or being a

00:16:53,769 --> 00:16:56,949
professional a professional instrument

00:16:55,810 --> 00:16:59,410
it's going to give you three or four

00:16:56,949 --> 00:17:01,120
milliseconds internally just because it

00:16:59,410 --> 00:17:04,059
takes time to determine some of those

00:17:01,120 --> 00:17:06,069
things you can get that down but because

00:17:04,059 --> 00:17:08,110
the human ear can't even begin to hear a

00:17:06,069 --> 00:17:11,020
variant variation at seven milliseconds

00:17:08,110 --> 00:17:14,020
your there's no point you can get it

00:17:11,020 --> 00:17:15,130
down but there's why you know the human

00:17:14,020 --> 00:17:16,419
brain is never going to be able to

00:17:15,130 --> 00:17:18,549
process that as long as you can keep

00:17:16,419 --> 00:17:23,799
that as long as you can keep that in

00:17:18,549 --> 00:17:26,110
that range down your ok so I've now

00:17:23,799 --> 00:17:28,480
fulfilled a couple of my milestones I've

00:17:26,110 --> 00:17:30,010
got the pedals at this point I've got

00:17:28,480 --> 00:17:33,160
just you know giant it's all over my

00:17:30,010 --> 00:17:36,340
work table but I am able to determine

00:17:33,160 --> 00:17:38,440
quickly what note is pressed and when

00:17:36,340 --> 00:17:40,150
when it's off I haven't addressed

00:17:38,440 --> 00:17:42,370
anything on actually sending data out

00:17:40,150 --> 00:17:46,720
yet I haven't actually generated the

00:17:42,370 --> 00:17:48,160
MIDI protocol at all at first it seemed

00:17:46,720 --> 00:17:49,450
really easy because I'm just hooking up

00:17:48,160 --> 00:17:51,520
a serial connection and I'm just

00:17:49,450 --> 00:17:53,530
watching for data coming across however

00:17:51,520 --> 00:17:55,240
the pie does not actually generate the

00:17:53,530 --> 00:17:58,570
serial bus and the pie does not generate

00:17:55,240 --> 00:18:01,150
the right baud rate for meeting in June

00:17:58,570 --> 00:18:05,799
it can generate 33 okay it can generate

00:18:01,150 --> 00:18:09,460
28a but it can't do 31 to 50 which Thank

00:18:05,799 --> 00:18:13,630
You Middies nyy 30 12 15 and they had

00:18:09,460 --> 00:18:15,580
better available why why bother I can't

00:18:13,630 --> 00:18:17,380
tell you and I won't tell you and I had

00:18:15,580 --> 00:18:19,960
lots of nice words for them when I was

00:18:17,380 --> 00:18:22,360
going through this but you can't

00:18:19,960 --> 00:18:24,669
actually overclock the u.s. the serial

00:18:22,360 --> 00:18:26,230
chip so that was the next thing that I

00:18:24,669 --> 00:18:28,330
had to figure out how to do which was

00:18:26,230 --> 00:18:30,179
fairly easy but you still had to do it

00:18:28,330 --> 00:18:34,299
basically overclocking the chip and then

00:18:30,179 --> 00:18:37,260
writing a 28 8 so it ends up being the

00:18:34,299 --> 00:18:39,460
right rating within tolerance permitting

00:18:37,260 --> 00:18:41,530
so then I was able to actually generate

00:18:39,460 --> 00:18:44,620
MIDI going through add in five connector

00:18:41,530 --> 00:18:46,210
so now I'm able able to actually work on

00:18:44,620 --> 00:18:48,909
generating music at this point actually

00:18:46,210 --> 00:18:50,559
hooked up something called an ox on a

00:18:48,909 --> 00:18:52,150
MIDI channel so i'm actually watching

00:18:50,559 --> 00:18:53,650
the notes coming through so it was

00:18:52,150 --> 00:18:55,450
actually turning something old and turn

00:18:53,650 --> 00:18:57,700
it off I've got music those poll

00:18:55,450 --> 00:19:00,460
maybe not usable music because you're

00:18:57,700 --> 00:19:05,139
you've got it all over my table but it's

00:19:00,460 --> 00:19:07,690
music it's a start so my other

00:19:05,139 --> 00:19:09,490
requirements were transposition related

00:19:07,690 --> 00:19:11,710
which were how do I control what channel

00:19:09,490 --> 00:19:13,570
the data is coming out on and what no to

00:19:11,710 --> 00:19:15,880
my actually generating you know

00:19:13,570 --> 00:19:17,409
generating middle C which is maybe fine

00:19:15,880 --> 00:19:19,179
but you don't want to control your

00:19:17,409 --> 00:19:20,620
synthesizer to generate a note you want

00:19:19,179 --> 00:19:24,250
to actually actually have the device

00:19:20,620 --> 00:19:26,200
that self-control windows coming out so

00:19:24,250 --> 00:19:29,350
I needed to think about input and output

00:19:26,200 --> 00:19:32,139
for the device itself originally I was

00:19:29,350 --> 00:19:33,549
going to hook up an LED screen and have

00:19:32,139 --> 00:19:35,200
switches that you could actually press

00:19:33,549 --> 00:19:40,149
you've got these you know giant things

00:19:35,200 --> 00:19:42,610
you step on however it just seemed like

00:19:40,149 --> 00:19:43,929
a kind of low-tech solution so I needed

00:19:42,610 --> 00:19:45,549
to figure out you know what's a better

00:19:43,929 --> 00:19:48,159
way to do it how can I do off for

00:19:45,549 --> 00:19:50,830
control well I could hook up another

00:19:48,159 --> 00:19:52,179
MIDI device to this one because it's you

00:19:50,830 --> 00:19:53,950
know a channel thing and have it watch

00:19:52,179 --> 00:19:58,090
on its own channel but that seems kind

00:19:53,950 --> 00:19:59,289
of dome you know why would you have a

00:19:58,090 --> 00:20:02,409
midi controller for a midi controller

00:19:59,289 --> 00:20:04,149
just doesn't i guess there's there's a

00:20:02,409 --> 00:20:07,360
certain insanity involved but i didn't

00:20:04,149 --> 00:20:10,960
like that idea so i wanted to think

00:20:07,360 --> 00:20:13,539
about how can I get you know awkward

00:20:10,960 --> 00:20:15,309
controlling LED would would be nice the

00:20:13,539 --> 00:20:16,870
LCD would be nice or external control

00:20:15,309 --> 00:20:18,220
but even that kind of drives up my price

00:20:16,870 --> 00:20:19,720
because I also kind of wanted to keep

00:20:18,220 --> 00:20:20,980
the price low so that my wife wouldn't

00:20:19,720 --> 00:20:25,360
be upset at how much money was being

00:20:20,980 --> 00:20:27,940
spent go figure so I could do a screen

00:20:25,360 --> 00:20:30,190
but the screens are fifty dollars just

00:20:27,940 --> 00:20:32,110
about price point going way out I could

00:20:30,190 --> 00:20:33,730
do a keyboard but the keyboards are ten

00:20:32,110 --> 00:20:35,950
bucks well and they're in their giant

00:20:33,730 --> 00:20:37,570
and plus on screen on stage you don't

00:20:35,950 --> 00:20:42,730
want me messing with a with a typewriter

00:20:37,570 --> 00:20:45,809
with a ordinary qwerty keyboard so the

00:20:42,730 --> 00:20:49,450
next thing I thought of was actually

00:20:45,809 --> 00:20:51,039
this thing which well this is just the

00:20:49,450 --> 00:20:54,039
next three but if anything would work

00:20:51,039 --> 00:20:57,039
everyone has a phone now every phone has

00:20:54,039 --> 00:20:59,230
Wi-Fi or Bluetooth capability why not

00:20:57,039 --> 00:21:00,760
rely on this what the idea idea what

00:20:59,230 --> 00:21:02,799
ideally you'd have a tablet so be a

00:21:00,760 --> 00:21:04,960
little bit larger but you can actually

00:21:02,799 --> 00:21:07,150
have this on a music stand and if you

00:21:04,960 --> 00:21:09,590
needed to control it play with this

00:21:07,150 --> 00:21:14,650
but that meant that this had to be

00:21:09,590 --> 00:21:16,880
networked aware which works out well

00:21:14,650 --> 00:21:18,890
except for you have to actually work out

00:21:16,880 --> 00:21:21,679
the wireless access point you actually

00:21:18,890 --> 00:21:24,049
have to building access point which is

00:21:21,679 --> 00:21:26,059
fairly easy except we we also have power

00:21:24,049 --> 00:21:28,040
requirements the Raspberry Pi on that

00:21:26,059 --> 00:21:30,020
generates about 700 mil eight hundred

00:21:28,040 --> 00:21:32,900
milliamps and hooking up a wireless

00:21:30,020 --> 00:21:36,200
dongle tends to drive it into a reboot

00:21:32,900 --> 00:21:38,870
loop so the next thing I've discovered

00:21:36,200 --> 00:21:40,580
that I had to deal with was power how

00:21:38,870 --> 00:21:42,169
much power can i generate in this thing

00:21:40,580 --> 00:21:43,900
how much what do i need to actually get

00:21:42,169 --> 00:21:46,460
enough power to drive the Raspberry Pi

00:21:43,900 --> 00:21:47,750
get all the inputs plus you'll have the

00:21:46,460 --> 00:21:50,570
wireless so they're not going to

00:21:47,750 --> 00:21:52,940
actually control all of this not to

00:21:50,570 --> 00:21:54,320
mention how do I control it because I'm

00:21:52,940 --> 00:21:57,620
just trying to connect talk to it at

00:21:54,320 --> 00:22:00,080
this point well the answer there of

00:21:57,620 --> 00:22:02,660
course is enough powered USB hub so it

00:22:00,080 --> 00:22:04,220
actually has two are two power

00:22:02,660 --> 00:22:05,600
connections coming out of it which is

00:22:04,220 --> 00:22:09,590
kind of a drag of inch landing to

00:22:05,600 --> 00:22:11,059
consolidated into one but you know still

00:22:09,590 --> 00:22:12,770
something that I had to consider and

00:22:11,059 --> 00:22:15,080
find out so now i know that i need to

00:22:12,770 --> 00:22:17,660
actually consider power in my design

00:22:15,080 --> 00:22:19,730
because the PI needs power itself plus

00:22:17,660 --> 00:22:21,049
the wireless needs power or I need to

00:22:19,730 --> 00:22:25,160
figure out some other way to actually

00:22:21,049 --> 00:22:26,929
control the data coming out actually

00:22:25,160 --> 00:22:30,620
hooking up the access points fairly easy

00:22:26,929 --> 00:22:32,690
there's hostapd and you dhcpd which is

00:22:30,620 --> 00:22:35,330
dhcp being controlled through here

00:22:32,690 --> 00:22:37,640
hostapd as a wireless you can actually

00:22:35,330 --> 00:22:39,500
start up a wireless access point if you

00:22:37,640 --> 00:22:41,630
look on your device if you look for the

00:22:39,500 --> 00:22:45,230
local networks you should see al see any

00:22:41,630 --> 00:22:46,940
which is the name of this thing my

00:22:45,230 --> 00:22:48,500
slides actually talked about why it's

00:22:46,940 --> 00:22:51,799
called I'll see an email cover that in a

00:22:48,500 --> 00:22:58,040
bit but you know without the slides it

00:22:51,799 --> 00:22:59,929
doesn't really help the so once I had

00:22:58,040 --> 00:23:01,190
the wireless setup once i could talk to

00:22:59,929 --> 00:23:04,520
it without actually having a physical

00:23:01,190 --> 00:23:08,390
connection to it then it turns into a

00:23:04,520 --> 00:23:11,510
question of how do you talk to it i can

00:23:08,390 --> 00:23:14,620
design a we could use bluetooth i guess

00:23:11,510 --> 00:23:17,210
not good get around some of the things

00:23:14,620 --> 00:23:18,440
but you're still talking about protocol

00:23:17,210 --> 00:23:19,940
how do you out what do you actually use

00:23:18,440 --> 00:23:22,149
to talk to the

00:23:19,940 --> 00:23:24,980
I'll see any itself this new device I

00:23:22,149 --> 00:23:29,299
chose HTTP because it's very simple it's

00:23:24,980 --> 00:23:31,399
easy to find you can actually design a

00:23:29,299 --> 00:23:33,080
webpage I guess if you wanted to to

00:23:31,399 --> 00:23:35,120
actually do do all the communication

00:23:33,080 --> 00:23:37,340
just passing me messages with rest and

00:23:35,120 --> 00:23:41,269
doing represent representational state

00:23:37,340 --> 00:23:42,860
get state backing out I actually did

00:23:41,269 --> 00:23:46,039
actually wrote an actually Android

00:23:42,860 --> 00:23:47,690
application to do that so that's not

00:23:46,039 --> 00:23:49,279
using a web page although it you know

00:23:47,690 --> 00:23:50,419
again it could it just doesn't yet

00:23:49,279 --> 00:23:54,980
because I wanted to kind of play with

00:23:50,419 --> 00:23:57,860
with polyglot programming as well so the

00:23:54,980 --> 00:23:59,299
Android application is very simple it

00:23:57,860 --> 00:24:02,559
basically connects to a known hosts

00:23:59,299 --> 00:24:05,000
which is given to it by the access point

00:24:02,559 --> 00:24:09,139
it basically sends a message that says

00:24:05,000 --> 00:24:11,090
give me the status or change the change

00:24:09,139 --> 00:24:14,259
the state to be you know change the MIDI

00:24:11,090 --> 00:24:16,850
channel up or down change the

00:24:14,259 --> 00:24:18,350
transposition change note transposition

00:24:16,850 --> 00:24:21,679
up or down and change the octave up or

00:24:18,350 --> 00:24:23,299
down on the code it's actually just a

00:24:21,679 --> 00:24:25,340
threat you know i mentioned that i was

00:24:23,299 --> 00:24:28,220
using c++ and i'm just using the boost

00:24:25,340 --> 00:24:31,549
libraries to run a series of threads one

00:24:28,220 --> 00:24:32,990
of the threads watches for input one of

00:24:31,549 --> 00:24:34,399
the threads actually flashes some

00:24:32,990 --> 00:24:36,950
internal lights that have to make sure

00:24:34,399 --> 00:24:38,929
the system is running properly and one

00:24:36,950 --> 00:24:41,029
of the threads is an HTTP server and it

00:24:38,929 --> 00:24:43,970
just watches for very simple messages

00:24:41,029 --> 00:24:47,299
and spits them back out thus using the

00:24:43,970 --> 00:24:50,899
web + + HP p which is a web server

00:24:47,299 --> 00:24:52,610
embedded inning a single include it was

00:24:50,899 --> 00:24:55,730
just the simplest and shortest path to

00:24:52,610 --> 00:24:58,129
what i wanted to do that didn't see any

00:24:55,730 --> 00:24:59,690
reasonably going for a full lemme embed

00:24:58,129 --> 00:25:04,129
in jenks or anything like that it's just

00:24:59,690 --> 00:25:06,110
too much work um so once I had all that

00:25:04,129 --> 00:25:07,700
once I had set up the Android to

00:25:06,110 --> 00:25:10,970
actually be able to set up as a control

00:25:07,700 --> 00:25:13,190
circuit I have the LCD actually

00:25:10,970 --> 00:25:16,129
generating MIDI at this point I'm really

00:25:13,190 --> 00:25:18,440
almost done except for the case um a

00:25:16,129 --> 00:25:20,330
friend of mine work was a naval engineer

00:25:18,440 --> 00:25:21,830
works on submarines and he was like well

00:25:20,330 --> 00:25:24,440
you know I can help with that and that's

00:25:21,830 --> 00:25:27,019
holding well sure why not he said well

00:25:24,440 --> 00:25:30,049
here it is finished and okay thank you

00:25:27,019 --> 00:25:31,900
um but at this point actually have a

00:25:30,049 --> 00:25:37,000
functional musical instrument and

00:25:31,900 --> 00:25:39,940
we can actually plan which is all nice

00:25:37,000 --> 00:25:43,030
it's just again it's generating to cash

00:25:39,940 --> 00:25:46,110
which is you know the one of the limits

00:25:43,030 --> 00:25:48,820
synthesizers it can generate anything

00:25:46,110 --> 00:25:52,450
talk to anything I've run it to an organ

00:25:48,820 --> 00:25:54,040
it's polyphonic I can run through a

00:25:52,450 --> 00:25:55,630
sampler you can run to anything it does

00:25:54,040 --> 00:26:00,520
an actual functional musical instrument

00:25:55,630 --> 00:26:02,590
have used it on stage and the main thing

00:26:00,520 --> 00:26:06,340
that comes out of it is for one thing

00:26:02,590 --> 00:26:08,080
it's kind of cool but another aspect of

00:26:06,340 --> 00:26:10,080
it is that you do actually I do actually

00:26:08,080 --> 00:26:13,420
have a list a laundry list of things

00:26:10,080 --> 00:26:17,710
that we can use to help others generate

00:26:13,420 --> 00:26:19,330
the same kind of design we know you know

00:26:17,710 --> 00:26:20,890
Apple II I'll tell you for one thing

00:26:19,330 --> 00:26:23,500
what kind of power requirements are

00:26:20,890 --> 00:26:24,910
likely to have what your issues are

00:26:23,500 --> 00:26:26,920
going to be in configuring the pie to

00:26:24,910 --> 00:26:28,570
generate knitting at the very least

00:26:26,920 --> 00:26:30,070
sound is a different issue because I'm

00:26:28,570 --> 00:26:34,540
still working on actually generating it

00:26:30,070 --> 00:26:35,950
as a sin but we have the wireless part I

00:26:34,540 --> 00:26:38,320
can actually take most of the guts of

00:26:35,950 --> 00:26:39,790
this rip it out and build a new

00:26:38,320 --> 00:26:41,860
instrument if I wanted to have a new

00:26:39,790 --> 00:26:44,320
type of input all I have to do is hook

00:26:41,860 --> 00:26:46,510
it up to an analog you know whatever

00:26:44,320 --> 00:26:49,030
whatever the case may be if I wanted to

00:26:46,510 --> 00:26:52,090
build a theremin I could within the

00:26:49,030 --> 00:26:54,010
limits of many of course and that's kind

00:26:52,090 --> 00:26:55,510
of where many the 12 note scale comes in

00:26:54,010 --> 00:26:58,570
because the theremin is very much a

00:26:55,510 --> 00:26:59,890
resistor resistor driven instruments so

00:26:58,570 --> 00:27:02,050
that it generates notes that aren't

00:26:59,890 --> 00:27:06,130
necessarily on the scale midi doesn't do

00:27:02,050 --> 00:27:07,990
that very well the name i mentioned that

00:27:06,130 --> 00:27:09,840
early on my slides actually dressed it

00:27:07,990 --> 00:27:12,760
really early i'm sorry about the slides

00:27:09,840 --> 00:27:17,680
the name comes from the tourists

00:27:12,760 --> 00:27:19,390
constellation nude back in the late 50s

00:27:17,680 --> 00:27:22,560
late 60s would actually had this idea

00:27:19,390 --> 00:27:25,060
that he would create a synthesizer a

00:27:22,560 --> 00:27:26,950
rack of synthesizers for thorough they

00:27:25,060 --> 00:27:28,630
were all not modular back then so they

00:27:26,950 --> 00:27:29,860
were all racks to begin with but he had

00:27:28,630 --> 00:27:32,530
yet this idea that he would have a

00:27:29,860 --> 00:27:34,930
synthesizer system and he called it the

00:27:32,530 --> 00:27:37,210
constellation so you had different

00:27:34,930 --> 00:27:38,620
pieces of you had the taurus and you had

00:27:37,210 --> 00:27:40,100
the pisces you had all these different

00:27:38,620 --> 00:27:41,240
you know zodiac type

00:27:40,100 --> 00:27:42,740
things that went into this giant

00:27:41,240 --> 00:27:44,150
synthesizer thing that probably would

00:27:42,740 --> 00:27:47,120
have cost about thirty thousand dollars

00:27:44,150 --> 00:27:48,200
back then and the tourist was the only

00:27:47,120 --> 00:27:50,990
one that I know of that he actually

00:27:48,200 --> 00:27:54,590
built for mass production which is the

00:27:50,990 --> 00:27:56,870
foot pedal one well I kind of I like the

00:27:54,590 --> 00:27:58,400
tourists a lot so I thought well I'll

00:27:56,870 --> 00:28:01,130
use something like the tourists in the

00:27:58,400 --> 00:28:06,530
name in the tourists constellation the

00:28:01,130 --> 00:28:07,940
brightest star is al de baran which is

00:28:06,530 --> 00:28:09,679
too long to say it's too hard to say

00:28:07,940 --> 00:28:13,159
nobody wants to say this is the al de

00:28:09,679 --> 00:28:14,960
baran so that's out the second brightest

00:28:13,159 --> 00:28:18,080
star in the tourists constellation is

00:28:14,960 --> 00:28:19,250
the towel which is unfortunately the

00:28:18,080 --> 00:28:21,710
name of another instrument from

00:28:19,250 --> 00:28:23,270
eigenharp so I was thinking well I know

00:28:21,710 --> 00:28:24,620
the people from eigenharp so I don't

00:28:23,270 --> 00:28:27,440
want to borrow their name for my own

00:28:24,620 --> 00:28:29,809
instrument the third one is al cien e

00:28:27,440 --> 00:28:32,210
which was named after a Greek heroine

00:28:29,809 --> 00:28:34,280
who commit try to commit suicide that

00:28:32,210 --> 00:28:36,039
part wasn't all that great but at least

00:28:34,280 --> 00:28:39,039
the name was fairly easy to sing

00:28:36,039 --> 00:28:47,049
pronouncing it sort of has a tie-in with

00:28:39,039 --> 00:28:47,049
with dude or the origin of the design so

00:28:48,460 --> 00:28:53,150
without the slides I'm kind of pacing my

00:28:51,320 --> 00:28:55,850
pace things a little bit off apologize

00:28:53,150 --> 00:28:57,110
about that but I wanted to kind of ask

00:28:55,850 --> 00:29:02,179
whether there are any questions about

00:28:57,110 --> 00:29:09,380
anything that I've covered so far yes

00:29:02,179 --> 00:29:12,110
sir yes sir it's a basically an eye to

00:29:09,380 --> 00:29:15,770
see I've got three ITC chips in there

00:29:12,110 --> 00:29:17,780
the mCP 2308 it's aight it's

00:29:15,770 --> 00:29:20,990
multiplexing eight bits in the into a

00:29:17,780 --> 00:29:22,669
single channel i have three of them in

00:29:20,990 --> 00:29:24,559
there to one is used for output the

00:29:22,669 --> 00:29:26,840
other two are for input so i can have 16

00:29:24,559 --> 00:29:28,280
inputs that are just little dedicated I

00:29:26,840 --> 00:29:31,190
you can actually individually address

00:29:28,280 --> 00:29:34,039
the biz so I could have you know input

00:29:31,190 --> 00:29:35,390
output input output I'm just going to

00:29:34,039 --> 00:29:38,090
point it's easier just to do a block

00:29:35,390 --> 00:29:40,429
reading a block right I actually have

00:29:38,090 --> 00:29:42,080
the the code actually does a block read

00:29:40,429 --> 00:29:45,860
and a block right for all of those

00:29:42,080 --> 00:29:48,169
things I could do individual bit reads

00:29:45,860 --> 00:29:50,940
without a significant loss in speed

00:29:48,169 --> 00:29:54,510
because the i2c bus is incredibly

00:29:50,940 --> 00:29:57,210
asked however again it just came down to

00:29:54,510 --> 00:29:58,650
why bother I've got the IO just go ahead

00:29:57,210 --> 00:30:01,110
and do a block read eight bits at a time

00:29:58,650 --> 00:30:02,460
and you don't even then you can just

00:30:01,110 --> 00:30:05,490
cycle through those eight bits and check

00:30:02,460 --> 00:30:09,180
your statuses but yes it's the mCP 2308

00:30:05,490 --> 00:30:12,720
I could have used the mcp 20 30 17 and

00:30:09,180 --> 00:30:16,220
gotten 16 in a time at my workbench I

00:30:12,720 --> 00:30:16,220
did not have one so I used what I had

00:30:17,540 --> 00:30:21,780
again the latency the total latency

00:30:20,250 --> 00:30:24,150
works out to about five to seven

00:30:21,780 --> 00:30:25,710
milliseconds through you know when you

00:30:24,150 --> 00:30:28,410
hit the note it's actually taking about

00:30:25,710 --> 00:30:29,760
about it's hard to get you know hard to

00:30:28,410 --> 00:30:33,000
gauge because there's there it's not a

00:30:29,760 --> 00:30:35,640
real time system that was one of the

00:30:33,000 --> 00:30:37,530
things that some of the people who have

00:30:35,640 --> 00:30:38,970
talked to who do or who do design

00:30:37,530 --> 00:30:41,010
musical instruments like the eigenharp

00:30:38,970 --> 00:30:42,690
people are saying well you know linux

00:30:41,010 --> 00:30:46,740
was in real time unless you're using

00:30:42,690 --> 00:30:49,470
linux real time which i wasn't the the

00:30:46,740 --> 00:30:51,240
thing about real time real time doesn't

00:30:49,470 --> 00:30:53,610
you know it doesn't mean speedy it

00:30:51,240 --> 00:30:57,090
doesn't mean fast it means predictable

00:30:53,610 --> 00:30:58,740
so real time is perfectly acceptable for

00:30:57,090 --> 00:31:00,750
it to take longer as long as you can

00:30:58,740 --> 00:31:02,760
guarantee that it have something happens

00:31:00,750 --> 00:31:06,210
within a span of time real time might be

00:31:02,760 --> 00:31:08,220
a hundred millisecond granularity but

00:31:06,210 --> 00:31:09,810
real time means that at that 100

00:31:08,220 --> 00:31:12,450
millisecond you are guaranteed for

00:31:09,810 --> 00:31:14,040
something to have happened that's why

00:31:12,450 --> 00:31:15,300
real time is important for medical

00:31:14,040 --> 00:31:17,430
devices when you have when you're having

00:31:15,300 --> 00:31:18,750
a heart attack you don't want you know

00:31:17,430 --> 00:31:21,750
your device to go through a garbage

00:31:18,750 --> 00:31:24,530
collection process when you know kind of

00:31:21,750 --> 00:31:27,720
need the jolt to get your heart going so

00:31:24,530 --> 00:31:30,540
a lot of me a lot of the people that I

00:31:27,720 --> 00:31:32,160
was speaking to we're suggesting that I

00:31:30,540 --> 00:31:34,440
use real time so I could guarantee that

00:31:32,160 --> 00:31:37,440
i had response within 4 to 10

00:31:34,440 --> 00:31:39,330
milliseconds but I didn't you know I

00:31:37,440 --> 00:31:41,520
wasn't doing that because I'm going for

00:31:39,330 --> 00:31:43,350
a simpler approach real time programming

00:31:41,520 --> 00:31:45,030
is kind of a pain you work with a lot of

00:31:43,350 --> 00:31:49,620
state machines the Arduino certainly

00:31:45,030 --> 00:31:51,270
uses it but I'm you know the what I

00:31:49,620 --> 00:31:55,140
found was there wasn't really a

00:31:51,270 --> 00:31:57,320
necessity for real time I'm not doing a

00:31:55,140 --> 00:31:59,670
whole lot of memory allocation in my c++

00:31:57,320 --> 00:32:01,830
I'm not doing a lot of deallocation

00:31:59,670 --> 00:32:02,279
there's no fragmentation swap all new

00:32:01,830 --> 00:32:06,179
raster

00:32:02,279 --> 00:32:08,639
hi is not being touched it's there

00:32:06,179 --> 00:32:11,070
because i never really i never got rid

00:32:08,639 --> 00:32:14,669
of it because i never needed to but

00:32:11,070 --> 00:32:18,599
honestly the program runs in about 120 k

00:32:14,669 --> 00:32:20,369
um start we're finished there's no you

00:32:18,599 --> 00:32:21,929
know it doesn't do a whole lot of stack

00:32:20,369 --> 00:32:23,099
allocation it doesn't do a whole lot of

00:32:21,929 --> 00:32:26,070
memory allocation so there's no

00:32:23,099 --> 00:32:30,090
fragmentation to deal with so even on a

00:32:26,070 --> 00:32:32,369
low in processor like the broadcom even

00:32:30,090 --> 00:32:35,519
using a non real-time operating system i

00:32:32,369 --> 00:32:37,289
really don't have any i have not had any

00:32:35,519 --> 00:32:39,960
severe glitches in terms of the sound

00:32:37,289 --> 00:32:41,669
coming out it is a multi-threaded

00:32:39,960 --> 00:32:44,609
applications so i do have to consider

00:32:41,669 --> 00:32:47,669
the implications of using

00:32:44,609 --> 00:32:49,499
multi-threading namely that you know i'm

00:32:47,669 --> 00:32:50,969
using a single bus to write to and read

00:32:49,499 --> 00:32:53,129
from so i do have to make sure that i'm

00:32:50,969 --> 00:32:54,629
not reading your writing a register then

00:32:53,129 --> 00:32:56,309
writing another register from another

00:32:54,629 --> 00:32:57,929
thread than pulling the data back out

00:32:56,309 --> 00:33:01,710
because they'll get noise coming back

00:32:57,929 --> 00:33:05,190
out because of the denoising system is

00:33:01,710 --> 00:33:06,509
in there theoretically I could get that

00:33:05,190 --> 00:33:08,309
noise and it wouldn't affect anything

00:33:06,509 --> 00:33:10,409
cuz it just be one data point and then

00:33:08,309 --> 00:33:12,089
denoising would get rid of it but it is

00:33:10,409 --> 00:33:14,249
still something to consider in your

00:33:12,089 --> 00:33:16,049
design if i had a much larger system it

00:33:14,249 --> 00:33:19,080
but had more threads to deal with it

00:33:16,049 --> 00:33:22,109
might be more sensitive to that to that

00:33:19,080 --> 00:33:25,440
noise everything about this by the way

00:33:22,109 --> 00:33:27,149
is open source if you go to github you

00:33:25,440 --> 00:33:30,989
can find the code as it's running right

00:33:27,149 --> 00:33:32,820
now and open source actually played

00:33:30,989 --> 00:33:34,589
really heavily into the whole design i

00:33:32,820 --> 00:33:36,149
mentioned we not talk to the people at

00:33:34,589 --> 00:33:40,349
eigenharp had talked to a lot of other

00:33:36,149 --> 00:33:43,019
musicians the open-source ethic actually

00:33:40,349 --> 00:33:45,690
played very strongly into it you know

00:33:43,019 --> 00:33:48,210
for one thing you know on windows

00:33:45,690 --> 00:33:50,969
because i use windows as well for other

00:33:48,210 --> 00:33:53,070
things but when you look at the windows

00:33:50,969 --> 00:33:55,200
programming environments it's all like

00:33:53,070 --> 00:33:57,599
they all even even windows programmers

00:33:55,200 --> 00:33:59,399
kind of see it as magic you know they're

00:33:57,599 --> 00:34:01,830
really users that have a very specific

00:33:59,399 --> 00:34:04,169
area where they kind of modify things

00:34:01,830 --> 00:34:06,149
and that's their programming you know

00:34:04,169 --> 00:34:09,149
it's like I'm just a user but I write

00:34:06,149 --> 00:34:11,429
this point of sale system you know in

00:34:09,149 --> 00:34:13,169
Linux the whole mindset is no you're not

00:34:11,429 --> 00:34:13,820
a user at all you're always even as a

00:34:13,169 --> 00:34:15,560
you know

00:34:13,820 --> 00:34:18,410
you're writing a document your

00:34:15,560 --> 00:34:21,200
programming something you know tech is

00:34:18,410 --> 00:34:24,860
all about this programming a document

00:34:21,200 --> 00:34:26,600
format even using LibreOffice you're

00:34:24,860 --> 00:34:27,920
kind of doing the same thing you're

00:34:26,600 --> 00:34:29,300
thinking about the states as you're

00:34:27,920 --> 00:34:30,470
writing it maybe most people don't think

00:34:29,300 --> 00:34:33,020
of it that way when you're actually

00:34:30,470 --> 00:34:36,920
doing it but that mine steps just

00:34:33,020 --> 00:34:38,780
permeates linux and I found that very

00:34:36,920 --> 00:34:41,900
useful because I had a lot of people who

00:34:38,780 --> 00:34:44,150
were able just to say have you thought

00:34:41,900 --> 00:34:46,310
about this you know in Windows you don't

00:34:44,150 --> 00:34:47,690
have that in other offering system

00:34:46,310 --> 00:34:51,140
environments you don't have that maker

00:34:47,690 --> 00:34:52,820
mentality that says you know let me give

00:34:51,140 --> 00:34:55,370
you advice have you thought about this

00:34:52,820 --> 00:34:57,770
do you know about this what about this

00:34:55,370 --> 00:34:59,120
what about that simply because the

00:34:57,770 --> 00:35:02,450
environment doesn't encourage it

00:34:59,120 --> 00:35:04,790
microsoft says you do what we say apple

00:35:02,450 --> 00:35:06,370
says we're not going to even tell you

00:35:04,790 --> 00:35:08,840
but you're just going to do it anyway

00:35:06,370 --> 00:35:11,150
whereas with the Linux mentality would

00:35:08,840 --> 00:35:12,650
be SD with the hotel operating system

00:35:11,150 --> 00:35:16,370
maker mentality is very much

00:35:12,650 --> 00:35:19,640
participatory where I had a 12 year old

00:35:16,370 --> 00:35:21,800
boy a couple of weeks ago tell me you

00:35:19,640 --> 00:35:23,690
can fix a bug by doing this and he had

00:35:21,800 --> 00:35:26,210
no idea what the code looked like and

00:35:23,690 --> 00:35:28,160
who was not quite correct but the fact

00:35:26,210 --> 00:35:29,990
that he was offering me a solution based

00:35:28,160 --> 00:35:31,670
on something he figured out well I think

00:35:29,990 --> 00:35:33,050
it's written like this if you're if it

00:35:31,670 --> 00:35:36,530
was written like this you could do this

00:35:33,050 --> 00:35:39,650
that mentality is incredibly useful I

00:35:36,530 --> 00:35:41,360
was impressed by this you know kid just

00:35:39,650 --> 00:35:42,800
because you know he's coming up I mean

00:35:41,360 --> 00:35:46,010
that's the whole thing that mentality

00:35:42,800 --> 00:35:49,220
comes up and says I'm going to actually

00:35:46,010 --> 00:35:50,870
be part of what you're designing even

00:35:49,220 --> 00:35:53,050
though he had no idea with the way that

00:35:50,870 --> 00:35:55,460
it was written no idea about what the

00:35:53,050 --> 00:35:57,470
internals were no idea about the actual

00:35:55,460 --> 00:35:59,480
you know gpio how did how the i/o

00:35:57,470 --> 00:36:01,400
actually worked but he was able to

00:35:59,480 --> 00:36:04,880
actually look at it and think how would

00:36:01,400 --> 00:36:07,460
I do that and regardless of whether he

00:36:04,880 --> 00:36:09,080
was right or not was not relevant the

00:36:07,460 --> 00:36:10,580
fact is that he was thinking about it

00:36:09,080 --> 00:36:12,650
and that's one of the greatest benefits

00:36:10,580 --> 00:36:15,740
we have out of this and that we have

00:36:12,650 --> 00:36:17,690
something where the mentality is to

00:36:15,740 --> 00:36:20,870
think about it the mentality is to learn

00:36:17,690 --> 00:36:24,370
them mentality is to grow and say how

00:36:20,870 --> 00:36:24,370
can we improve the world around us

00:36:24,890 --> 00:36:30,920
the tooling you know the the I can you

00:36:28,820 --> 00:36:33,470
know you could do it on any other

00:36:30,920 --> 00:36:35,480
operating system that no other operating

00:36:33,470 --> 00:36:40,490
system actually pushes all the tools in

00:36:35,480 --> 00:36:46,660
front of you and says go play any other

00:36:40,490 --> 00:36:46,660
questions yes sir

00:36:48,620 --> 00:37:03,530
oh no that it use it doesn't have any

00:36:57,560 --> 00:37:05,300
onboard sound not yet it can the pies

00:37:03,530 --> 00:37:07,010
sound generation is not especially

00:37:05,300 --> 00:37:10,940
strong the sound generation chip because

00:37:07,010 --> 00:37:14,420
it's a $35 computer you could probably

00:37:10,940 --> 00:37:17,180
offset that and eventually I would like

00:37:14,420 --> 00:37:19,310
to one of the things that I did not

00:37:17,180 --> 00:37:22,790
include in the middie spec was this X

00:37:19,310 --> 00:37:24,860
controls I'm not actually doing any midi

00:37:22,790 --> 00:37:28,970
controls notes you can do note on note

00:37:24,860 --> 00:37:32,180
off you can do pitch bins which you know

00:37:28,970 --> 00:37:33,980
the whole up and down horrible thing you

00:37:32,180 --> 00:37:36,350
can also send system control commands

00:37:33,980 --> 00:37:38,270
and stuff sex commands are just a

00:37:36,350 --> 00:37:40,640
basically a register that you write to

00:37:38,270 --> 00:37:44,030
and you can basically do a system dump I

00:37:40,640 --> 00:37:45,200
did not include sysex controls the

00:37:44,030 --> 00:37:46,940
reason this is relevance because

00:37:45,200 --> 00:37:48,950
eventually I would like to turn it into

00:37:46,940 --> 00:37:52,040
a sampler eventually I would like to

00:37:48,950 --> 00:37:55,250
turn it into a synthesizer I would like

00:37:52,040 --> 00:37:58,940
to be able to you know using the android

00:37:55,250 --> 00:38:00,860
app talent now go into a mode where

00:37:58,940 --> 00:38:03,440
you're playing a sample whenever you're

00:38:00,860 --> 00:38:07,340
hitting this knit or playing and go on

00:38:03,440 --> 00:38:09,260
board and also have off board control so

00:38:07,340 --> 00:38:12,410
I from national since no sexing system

00:38:09,260 --> 00:38:16,720
dump and restore commands that way but I

00:38:12,410 --> 00:38:19,310
haven't gotten there yet I'm not sure

00:38:16,720 --> 00:38:22,010
this X will be internet a lot sooner

00:38:19,310 --> 00:38:24,200
than on board synthesis will be because

00:38:22,010 --> 00:38:29,450
onward synthesis actually generating the

00:38:24,200 --> 00:38:31,190
sound is very complicated not very

00:38:29,450 --> 00:38:32,660
complicated once you learn once once

00:38:31,190 --> 00:38:34,600
you're looking at the actual waves and

00:38:32,660 --> 00:38:36,620
the data coming out it's not especially

00:38:34,600 --> 00:38:38,510
drastically complicated but generating

00:38:36,620 --> 00:38:42,140
good sounds is a little bit more

00:38:38,510 --> 00:38:44,120
involved generating a beep or a boot but

00:38:42,140 --> 00:38:46,480
like the old Atari sound noticing often

00:38:44,120 --> 00:38:51,950
to that that's also not usable musically

00:38:46,480 --> 00:38:54,790
unless you're trying to do Marya any

00:38:51,950 --> 00:38:54,790
other question yes sir

00:38:55,500 --> 00:39:02,500
um this is actually raspbian I'm living

00:38:59,049 --> 00:39:05,589
a fedora because I'm obviously Red Hat

00:39:02,500 --> 00:39:09,010
employee pedorra came out a couple of

00:39:05,589 --> 00:39:10,539
weeks ago so i mean you know i don't i

00:39:09,010 --> 00:39:11,890
don't know started doing the

00:39:10,539 --> 00:39:13,720
presentation I didn't want to change

00:39:11,890 --> 00:39:16,680
everything underlying right before the

00:39:13,720 --> 00:39:19,390
presentation you see my beautiful slides

00:39:16,680 --> 00:39:21,190
that's an example of me changing

00:39:19,390 --> 00:39:22,750
something right before coming here last

00:39:21,190 --> 00:39:24,730
night at work perfectly this morning

00:39:22,750 --> 00:39:26,920
LibreOffice updated nothing having

00:39:24,730 --> 00:39:31,510
nothing works I didn't want to do that

00:39:26,920 --> 00:39:34,720
with a musical instrument so the Fedora

00:39:31,510 --> 00:39:36,430
distribution actually probably will work

00:39:34,720 --> 00:39:40,869
a little bit better for it there as

00:39:36,430 --> 00:39:41,980
being but from what I have from what

00:39:40,869 --> 00:39:43,089
I've seen it's going to be a little bit

00:39:41,980 --> 00:39:46,980
easier to work with but I haven't

00:39:43,089 --> 00:39:46,980
actually done enough testing with it yet

00:39:50,190 --> 00:39:54,010
depending on the nature of the synthesis

00:39:52,809 --> 00:39:56,859
there are a lot of different approaches

00:39:54,010 --> 00:39:58,960
to sound generation I'm probably going

00:39:56,859 --> 00:40:01,480
to go through analogs an analog

00:39:58,960 --> 00:40:05,260
simulation which is really just taking a

00:40:01,480 --> 00:40:07,539
waveform and applying numbers to it you

00:40:05,260 --> 00:40:10,750
guys doing rate transfer doing frequency

00:40:07,539 --> 00:40:12,910
and pitch I'm probably not going to go

00:40:10,750 --> 00:40:15,609
for something that would really tax the

00:40:12,910 --> 00:40:17,799
horsepower beyond the CPUs ability to

00:40:15,609 --> 00:40:19,510
keep out is really the limitation there

00:40:17,799 --> 00:40:24,420
will probably be actually generating the

00:40:19,510 --> 00:40:24,420
sound on board yes sir

00:40:38,510 --> 00:40:42,840
yeah I'm not does that go through the

00:40:40,890 --> 00:40:47,359
hdmi output or is it actually use this

00:40:42,840 --> 00:40:47,359
the edge finished jack for it though I

00:40:48,740 --> 00:40:54,510
know that I know that the hdmi output is

00:40:51,840 --> 00:40:58,080
actually pretty strong the eighth inch

00:40:54,510 --> 00:41:00,540
jack is not so strong but I don't know

00:40:58,080 --> 00:41:04,619
how to I don't know myself how to get

00:41:00,540 --> 00:41:06,540
the hdmi output with sound only yet I

00:41:04,619 --> 00:41:08,340
mean again that's a problem that I want

00:41:06,540 --> 00:41:10,050
to solve and that's sort of the whole

00:41:08,340 --> 00:41:11,609
point here I've got a known thing I know

00:41:10,050 --> 00:41:14,099
what I know I'm determining what the

00:41:11,609 --> 00:41:15,660
problems are to solve so that I can tell

00:41:14,099 --> 00:41:17,160
people you know if they want to do the

00:41:15,660 --> 00:41:19,710
same thing they want to do something

00:41:17,160 --> 00:41:21,300
like this I can say here are the things

00:41:19,710 --> 00:41:22,770
you're going to have to consider here

00:41:21,300 --> 00:41:26,250
that you can you can use this code if

00:41:22,770 --> 00:41:29,630
you really want to you know and you know

00:41:26,250 --> 00:41:29,630
build your own system however you like

00:41:30,230 --> 00:41:41,040
anything else well um would anyone like

00:41:39,810 --> 00:41:43,349
to actually play the thing this is

00:41:41,040 --> 00:41:45,359
actually me it's actually pretty strong

00:41:43,349 --> 00:41:47,369
you know the whole thing about this

00:41:45,359 --> 00:41:51,060
design under fence posts believe it or

00:41:47,369 --> 00:41:52,500
not the case is all fence posts and it

00:41:51,060 --> 00:41:54,599
really is designed to be very strong we

00:41:52,500 --> 00:41:56,730
had we went to the maker faire a couple

00:41:54,599 --> 00:41:58,290
weeks ago and we had a bunch of people

00:41:56,730 --> 00:41:59,430
going through and then really were kind

00:41:58,290 --> 00:42:01,800
of playing whack-a-mole with her just

00:41:59,430 --> 00:42:03,150
kind of neat and it made it through and

00:42:01,800 --> 00:42:04,410
made it through the flight too so that

00:42:03,150 --> 00:42:06,300
was actually not bigger my biggest

00:42:04,410 --> 00:42:07,920
concern I figured people would you know

00:42:06,300 --> 00:42:09,720
stop banging on it once they stalk chips

00:42:07,920 --> 00:42:13,710
of wood flying off of it but the airport

00:42:09,720 --> 00:42:15,089
probably would not so again the

00:42:13,710 --> 00:42:18,000
ergonomics were actually pretty

00:42:15,089 --> 00:42:20,730
important you know it's about it's about

00:42:18,000 --> 00:42:21,810
four inches off so the idea was that you

00:42:20,730 --> 00:42:25,230
could actually play it without breaking

00:42:21,810 --> 00:42:27,150
your ankles which surprisingly is a

00:42:25,230 --> 00:42:30,330
musician your ankles factor and pretty

00:42:27,150 --> 00:42:35,480
heavily so you like to preserve your

00:42:30,330 --> 00:42:39,539
ankles anything else

00:42:35,480 --> 00:42:41,250
not yet it's using digital input I would

00:42:39,539 --> 00:42:42,660
actually like to use velocity at some

00:42:41,250 --> 00:42:45,510
point I thought about building a MIDI

00:42:42,660 --> 00:42:56,400
marimba or I'd like to actually do drums

00:42:45,510 --> 00:42:58,970
at some point but not yet yes sir I'm

00:42:56,400 --> 00:42:58,970
sorry say that again

00:43:11,060 --> 00:43:16,920
um well in terms of sampling absolutely

00:43:15,420 --> 00:43:19,619
and you don't even really need to tie in

00:43:16,920 --> 00:43:22,200
a set of raspberry PI's for sampling if

00:43:19,619 --> 00:43:23,670
I was trying to do a trumpet for example

00:43:22,200 --> 00:43:25,080
fluid since would be fine it's just

00:43:23,670 --> 00:43:29,720
basically doing you know pitch

00:43:25,080 --> 00:43:32,220
transposition on on a given sample set

00:43:29,720 --> 00:43:33,360
doing accurate trumpet and like if

00:43:32,220 --> 00:43:34,830
you're actually trying to simulate the

00:43:33,360 --> 00:43:38,610
way that a trumpet actually works in the

00:43:34,830 --> 00:43:40,140
real world not a chance and honestly I

00:43:38,610 --> 00:43:42,060
gotten the pie would be any good at that

00:43:40,140 --> 00:43:43,590
anyway because I mean honestly much

00:43:42,060 --> 00:43:48,150
bigger processors aren't very good at

00:43:43,590 --> 00:43:51,540
that in terms of actually generating

00:43:48,150 --> 00:43:53,490
sound I don't I think the pie itself the

00:43:51,540 --> 00:43:56,580
processor is certainly capable of doing

00:43:53,490 --> 00:43:59,760
it um you know the Commodore 64 could

00:43:56,580 --> 00:44:01,619
generate a valid waveform of course in

00:43:59,760 --> 00:44:03,000
how to dedicate a chip for it but even

00:44:01,619 --> 00:44:05,670
then you're talking about a 1 megahertz

00:44:03,000 --> 00:44:09,930
processor driving another one megahertz

00:44:05,670 --> 00:44:11,910
processor so if the Commodore 64 can

00:44:09,930 --> 00:44:14,220
generate something simulating a real

00:44:11,910 --> 00:44:16,560
sound at generating a real synthetic

00:44:14,220 --> 00:44:18,330
sound the broadcom and this thing

00:44:16,560 --> 00:44:20,930
certainly can I mean it's just numbers

00:44:18,330 --> 00:44:23,400
just floating point numbers coming now

00:44:20,930 --> 00:44:25,380
you know we mentioned in GPU it's going

00:44:23,400 --> 00:44:27,600
to be able to do the actual processing

00:44:25,380 --> 00:44:29,160
generating generating the waveform isn't

00:44:27,600 --> 00:44:31,080
even going to be difficult the question

00:44:29,160 --> 00:44:34,140
is how strong the signal thing would get

00:44:31,080 --> 00:44:38,520
out of the actual onboard sound only

00:44:34,140 --> 00:44:39,930
hardware and you know do I actually know

00:44:38,520 --> 00:44:44,040
enough to generate a sound that's worth

00:44:39,930 --> 00:44:45,540
listening to this is kacen which is one

00:44:44,040 --> 00:44:48,840
of the amount of synthesizers it's just

00:44:45,540 --> 00:44:51,510
basically a square wave mix with a sine

00:44:48,840 --> 00:44:53,280
wave which is really pretty simple and

00:44:51,510 --> 00:44:55,290
it's got a residence control on there so

00:44:53,280 --> 00:44:57,990
it actually sounds that little that wow

00:44:55,290 --> 00:44:59,730
sound and doing that's actually where

00:44:57,990 --> 00:45:02,369
the limitation isn't in generating the

00:44:59,730 --> 00:45:05,130
sound itself oh do I know enough to

00:45:02,369 --> 00:45:11,330
generate that filter and the answer to

00:45:05,130 --> 00:45:11,330
that right now is probably not yes sir

00:45:14,260 --> 00:45:21,220
I don't know it might I don't have

00:45:19,450 --> 00:45:25,960
enough experience working with those to

00:45:21,220 --> 00:45:28,510
tell you I know that the USB like I

00:45:25,960 --> 00:45:32,050
could probably hook up an off-board

00:45:28,510 --> 00:45:33,730
sound awkward amp and get a strong

00:45:32,050 --> 00:45:35,860
signal from now so theoretically you

00:45:33,730 --> 00:45:38,710
know I could use that to get around

00:45:35,860 --> 00:45:41,110
limitations of hdmi or the USB or the

00:45:38,710 --> 00:45:44,160
actual Athens Jack the sound jacket on

00:45:41,110 --> 00:45:49,390
the pie itself I haven't tried I

00:45:44,160 --> 00:45:50,770
wouldn't mind trying um but I knew my

00:45:49,390 --> 00:45:52,480
first step is actually good work with

00:45:50,770 --> 00:45:56,020
the I want to generate sound I want to

00:45:52,480 --> 00:45:57,520
do the synthesis directly once I did the

00:45:56,020 --> 00:45:59,050
synthesis directly then I can kind of

00:45:57,520 --> 00:46:01,570
figure out what do i need to actually

00:45:59,050 --> 00:46:03,550
use their to pipe that out my initial

00:46:01,570 --> 00:46:06,910
tests where the synthesis wasn't working

00:46:03,550 --> 00:46:08,770
well enough to actually use again that's

00:46:06,910 --> 00:46:12,220
all that's always been a secondary task

00:46:08,770 --> 00:46:15,880
for me because I am driving something

00:46:12,220 --> 00:46:17,560
off off board you know I've got a 30

00:46:15,880 --> 00:46:19,210
foot cable going somewhere else to drive

00:46:17,560 --> 00:46:21,580
the synthesizers and it's a bank of

00:46:19,210 --> 00:46:24,970
synthesizers so actually controlling it

00:46:21,580 --> 00:46:28,240
on board it presents its own

00:46:24,970 --> 00:46:29,410
difficulties the the Minimoog the one of

00:46:28,240 --> 00:46:31,270
the devices that actually kind of

00:46:29,410 --> 00:46:34,810
started the whole new home synthesis

00:46:31,270 --> 00:46:37,450
movement was a pain because it didn't

00:46:34,810 --> 00:46:39,700
have any onboard memory you know if you

00:46:37,450 --> 00:46:41,380
twiddle the knob you changed her sound

00:46:39,700 --> 00:46:43,780
and if you're like thinking well know

00:46:41,380 --> 00:46:46,630
what waveform was that let me go back to

00:46:43,780 --> 00:46:49,060
fix that well you had to replicate it

00:46:46,630 --> 00:46:51,550
again you didn't have a way of storing

00:46:49,060 --> 00:46:53,890
it they had memory moves later but the

00:46:51,550 --> 00:46:57,400
memory moves were very were incredibly

00:46:53,890 --> 00:46:59,950
expensive compared to you know compared

00:46:57,400 --> 00:47:01,600
to the you know actually the original

00:46:59,950 --> 00:47:03,580
device itself and the original device

00:47:01,600 --> 00:47:10,660
was twelve hundred dollars back then you

00:47:03,580 --> 00:47:12,340
know so so you know actually working

00:47:10,660 --> 00:47:14,260
with those working with the onboard

00:47:12,340 --> 00:47:16,030
sounds you know you there's a whole lot

00:47:14,260 --> 00:47:17,590
more involved there than just kind of

00:47:16,030 --> 00:47:19,570
generate a sound but how do I preserve

00:47:17,590 --> 00:47:20,740
that sound or replicated that's one of

00:47:19,570 --> 00:47:22,540
the reasons why Stan floors are so

00:47:20,740 --> 00:47:24,850
popular for that matter because

00:47:22,540 --> 00:47:27,400
you know I'm playing a trumpet it looks

00:47:24,850 --> 00:47:29,020
like this and also one of the reasons

00:47:27,400 --> 00:47:30,520
why CDs are so popular because then you

00:47:29,020 --> 00:47:32,620
don't have a musician out there playing

00:47:30,520 --> 00:47:34,870
the wrong note at any time ever your

00:47:32,620 --> 00:47:43,050
music is terrible but at least it's

00:47:34,870 --> 00:47:43,050
predictable any other questions yes sir

00:47:48,690 --> 00:47:58,930
that's correct um just well on a foot

00:47:55,420 --> 00:48:01,270
device probably not for other devices

00:47:58,930 --> 00:48:03,580
probably so I do want to have velocity

00:48:01,270 --> 00:48:05,740
sensitivity in there and also pressure

00:48:03,580 --> 00:48:08,260
sensitivity for that matter I mean it's

00:48:05,740 --> 00:48:10,420
fairly easy to do it converts the input

00:48:08,260 --> 00:48:13,900
to analog rather than digital right now

00:48:10,420 --> 00:48:15,910
it's just a set of 13 bits digital

00:48:13,900 --> 00:48:17,440
inputs very simple whenever I go to

00:48:15,910 --> 00:48:19,540
velocity I'm going to have to consider

00:48:17,440 --> 00:48:23,170
changing that to go into 13 analog

00:48:19,540 --> 00:48:25,060
inputs or however many analog inputs it

00:48:23,170 --> 00:48:26,920
is fairly easy to do I just didn't do it

00:48:25,060 --> 00:48:28,720
for this because again this is a MIDI

00:48:26,920 --> 00:48:32,850
pedal so you're stepping on it's going

00:48:28,720 --> 00:48:39,490
to be all the way down you every time so

00:48:32,850 --> 00:48:41,500
anything else guys well yes sir oh well

00:48:39,490 --> 00:48:44,230
thank you very much I hope this has been

00:48:41,500 --> 00:48:46,240
instructive again I apologize for the

00:48:44,230 --> 00:48:48,190
lack of the slides I'm going to you know

00:48:46,240 --> 00:48:51,610
blame myself for doing update this

00:48:48,190 --> 00:48:53,380
morning i hope that this has been

00:48:51,610 --> 00:48:55,180
instructive again it's all on the on the

00:48:53,380 --> 00:48:57,010
web if you would like to see the code

00:48:55,180 --> 00:48:58,720
and offer any improvement or if you want

00:48:57,010 --> 00:49:02,290
to actually show me how to generate

00:48:58,720 --> 00:49:05,790
those waveforms that'd be awesome and

00:49:02,290 --> 00:49:05,790
with that idea thank

00:49:55,559 --> 00:50:00,569
most enterprises today realize that

00:49:58,289 --> 00:50:02,219
usernames and passwords alone aren't

00:50:00,569 --> 00:50:04,589
enough to keep their network saved from

00:50:02,219 --> 00:50:06,660
unauthorized intrusions that's my

00:50:04,589 --> 00:50:08,699
two-factor authentication has gotten so

00:50:06,660 --> 00:50:10,829
popular lately that adds that extra

00:50:08,699 --> 00:50:13,499
layer of protection enterprise networks

00:50:10,829 --> 00:50:15,269
need to stay safe but what you may not

00:50:13,499 --> 00:50:17,459
know is that some two-factor

00:50:15,269 --> 00:50:19,680
authentication solutions they're better

00:50:17,459 --> 00:50:22,709
than others like two-factor strong

00:50:19,680 --> 00:50:24,989
authentication with wicked wicked goes

00:50:22,709 --> 00:50:26,939
beyond other authentication systems by

00:50:24,989 --> 00:50:29,999
being less expensive easier to implement

00:50:26,939 --> 00:50:32,489
and easier to use giving software-based

00:50:29,999 --> 00:50:35,339
token clients built to run on all major

00:50:32,489 --> 00:50:37,939
devices and OSS including iOS and

00:50:35,339 --> 00:50:40,289
Android these tokens utilize a

00:50:37,939 --> 00:50:42,509
public/private key combination that's

00:50:40,289 --> 00:50:44,640
generated and on device so there aren't

00:50:42,509 --> 00:50:47,160
any shared secrets flying around for

00:50:44,640 --> 00:50:50,009
attackers to hijack or which require any

00:50:47,160 --> 00:50:51,869
special handling instead all keys are

00:50:50,009 --> 00:50:54,359
kept secure and private between the

00:50:51,869 --> 00:50:56,519
requesting token and your server which

00:50:54,359 --> 00:50:58,160
you control aim house making it the most

00:50:56,519 --> 00:51:00,839
secure way possible to perform

00:50:58,160 --> 00:51:03,630
authentication encryption and with an

00:51:00,839 --> 00:51:06,420
extensive flexible API and support for

00:51:03,630 --> 00:51:08,400
protocols like ldap and radius wicket

00:51:06,420 --> 00:51:10,580
works with any enterprise network

00:51:08,400 --> 00:51:12,280
architecture to protect the IT

00:51:10,580 --> 00:51:14,890
Systems vital to your enterprise

00:51:12,280 --> 00:51:16,880
download your wicked free trial today

00:51:14,890 --> 00:51:18,650
regardless of whether you're considering

00:51:16,880 --> 00:51:20,450
two-factor authentication for the first

00:51:18,650 --> 00:51:23,690
time or just ready to ditch your

00:51:20,450 --> 00:51:26,090
existing expensive key file system we

00:51:23,690 --> 00:51:31,030
can help with easy to implement easy to

00:51:26,090 --> 00:51:31,030
use strong authentication from wicked

00:51:34,979 --> 00:51:40,029
when we created asterisk over a decade

00:51:37,690 --> 00:51:42,009
ago we could not have imagined that

00:51:40,029 --> 00:51:44,200
asterisk would not only become the most

00:51:42,009 --> 00:51:46,329
widely adopted open source communication

00:51:44,200 --> 00:51:48,369
software on the planet but that it would

00:51:46,329 --> 00:51:50,890
impact the entire industry in the way

00:51:48,369 --> 00:51:52,869
that it has today asterisk has found its

00:51:50,890 --> 00:51:55,509
way in the more than 170 countries and

00:51:52,869 --> 00:51:57,460
virtually every fortune 1000 company the

00:51:55,509 --> 00:51:59,559
success of asterisk has enabled a

00:51:57,460 --> 00:52:00,969
transition of power from the hands of

00:51:59,559 --> 00:52:03,219
the traditional proprietary phone

00:52:00,969 --> 00:52:05,619
vendors into the hands of the users and

00:52:03,219 --> 00:52:07,569
administrators of phone systems using

00:52:05,619 --> 00:52:08,799
this power our customers have created

00:52:07,569 --> 00:52:10,749
all sorts of business changing

00:52:08,799 --> 00:52:12,579
applications from small office phone

00:52:10,749 --> 00:52:15,099
systems to mission-critical call centers

00:52:12,579 --> 00:52:16,719
the international carrier networks in

00:52:15,099 --> 00:52:18,489
fact there's even an entire country

00:52:16,719 --> 00:52:20,890
those communications of a structure runs

00:52:18,489 --> 00:52:23,019
on esters the gym has always been about

00:52:20,890 --> 00:52:24,729
creating technology that expands

00:52:23,019 --> 00:52:26,920
communications capabilities in ways that

00:52:24,729 --> 00:52:28,089
we could never have imagined and that's

00:52:26,920 --> 00:52:30,489
part of what's game-changing about

00:52:28,089 --> 00:52:33,190
Digium today we're doing it again this

00:52:30,489 --> 00:52:35,289
time by introducing a new family of HD

00:52:33,190 --> 00:52:37,390
IP phones that extends control of the

00:52:35,289 --> 00:52:39,160
user all the way to the desktop the

00:52:37,390 --> 00:52:40,869
launch of these new products represents

00:52:39,160 --> 00:52:42,969
the next phase indigenous history of

00:52:40,869 --> 00:52:45,369
innovation these are the first and only

00:52:42,969 --> 00:52:47,079
IP phones designed to fully leverage the

00:52:45,369 --> 00:52:48,640
power of estrus when we first discussed

00:52:47,079 --> 00:52:50,680
our expectations for building a family

00:52:48,640 --> 00:52:52,809
of phones for use with asterisk our

00:52:50,680 --> 00:52:54,549
requirements were pretty simple we asked

00:52:52,809 --> 00:52:56,200
the team to build the phones such that

00:52:54,549 --> 00:52:58,390
they were easy to install integrate

00:52:56,200 --> 00:53:00,219
provision and use I think you'll soon

00:52:58,390 --> 00:53:02,799
agree our engineers have delivered on

00:53:00,219 --> 00:53:04,420
that goal user feedback is validating

00:53:02,799 --> 00:53:06,549
that when it comes to operation with

00:53:04,420 --> 00:53:08,979
astro space systems including our own

00:53:06,549 --> 00:53:11,529
switchvox based product these are the

00:53:08,979 --> 00:53:12,849
easiest to use best integrated most

00:53:11,529 --> 00:53:15,430
interoperable products on the market

00:53:12,849 --> 00:53:17,440
today the digitally phones will

00:53:15,430 --> 00:53:19,479
initially include three IP desk phones

00:53:17,440 --> 00:53:21,430
uniquely designed to complement any

00:53:19,479 --> 00:53:23,289
asterisks or switch box based solution

00:53:21,430 --> 00:53:25,960
these phones are different for a number

00:53:23,289 --> 00:53:28,630
of reasons first there is clue sively

00:53:25,960 --> 00:53:30,039
designed for use with esters secondly

00:53:28,630 --> 00:53:31,650
we've made it really easy to

00:53:30,039 --> 00:53:34,059
autodiscover and provision the phones

00:53:31,650 --> 00:53:35,739
next we've made it easy for the phones

00:53:34,059 --> 00:53:37,450
to access information inside of

00:53:35,739 --> 00:53:38,670
asterisks allowing tight coupling

00:53:37,450 --> 00:53:41,460
between an application

00:53:38,670 --> 00:53:43,830
and the phone additionally we've created

00:53:41,460 --> 00:53:45,930
an applications engine that allows users

00:53:43,830 --> 00:53:49,170
and developers to create and run their

00:53:45,930 --> 00:53:50,940
own apps on the phone and finally we've

00:53:49,170 --> 00:53:52,890
done all of this at a very compelling

00:53:50,940 --> 00:53:54,570
price point at Digium we're always

00:53:52,890 --> 00:53:56,670
thinking of ways to give our customers

00:53:54,570 --> 00:53:59,190
the best value in business phone systems

00:53:56,670 --> 00:54:00,810
and also give them the power to create

00:53:59,190 --> 00:54:02,940
their own solutions or any

00:54:00,810 --> 00:54:04,680
communications challenge well continue

00:54:02,940 --> 00:54:06,090
to push the boundaries not only to make

00:54:04,680 --> 00:54:08,160
Astros cooler faster and more

00:54:06,090 --> 00:54:09,780
technologically feature-rich but to make

00:54:08,160 --> 00:54:12,240
asterisk and what communications even

00:54:09,780 --> 00:54:15,650
easier and together we'll change the way

00:54:12,240 --> 00:54:15,650
the world communication again

00:54:26,660 --> 00:54:33,839
prospects I every way this is the way to

00:54:30,150 --> 00:54:35,760
better utilize all your resources and it

00:54:33,839 --> 00:54:38,819
makes managing all your resources pretty

00:54:35,760 --> 00:54:43,680
easy all of the innovation is happening

00:54:38,819 --> 00:54:47,069
in open source the collaborative nature

00:54:43,680 --> 00:54:49,710
and of the you know of the community and

00:54:47,069 --> 00:54:51,599
the speed at which these are these you

00:54:49,710 --> 00:54:53,670
know these these deficiencies these bugs

00:54:51,599 --> 00:54:56,040
are getting discovered and then fixed is

00:54:53,670 --> 00:54:59,549
it I think that really shows the power

00:54:56,040 --> 00:55:01,290
of the of the open source community it

00:54:59,549 --> 00:55:05,490
is global and it's definitely because of

00:55:01,290 --> 00:55:11,819
the users community people are extremely

00:55:05,490 --> 00:55:13,589
friendly and always ready to help if you

00:55:11,819 --> 00:55:15,020
go an entire see any day you'll see

00:55:13,589 --> 00:55:17,160
these guys helping each other out and

00:55:15,020 --> 00:55:20,040
they're all doing it like in a selfless

00:55:17,160 --> 00:55:21,869
manner the product is transparent for

00:55:20,040 --> 00:55:26,069
everyone everyone can look at the code

00:55:21,869 --> 00:55:28,109
base everyone can see how close duck is

00:55:26,069 --> 00:55:33,960
being built nothing nothing is

00:55:28,109 --> 00:55:36,630
proprietary everything is open in many

00:55:33,960 --> 00:55:40,829
ways it's absolutely vital to the the

00:55:36,630 --> 00:55:44,579
unborn health card stack the most

00:55:40,829 --> 00:55:48,380
exciting event in recent memory for me

00:55:44,579 --> 00:55:51,140
was our first developer boot camp

00:55:48,380 --> 00:55:53,779
and our call gave people I gave me two

00:55:51,140 --> 00:55:57,740
weeks notice to come attend I was

00:55:53,779 --> 00:56:01,910
expecting 25 or 30 people so we ended up

00:55:57,740 --> 00:56:04,759
with 87 people and had to go get more

00:56:01,910 --> 00:56:07,279
chairs into the room twice everything

00:56:04,759 --> 00:56:10,609
within cloud computing is commodity and

00:56:07,279 --> 00:56:13,609
is open source and so I don't think that

00:56:10,609 --> 00:56:15,349
you will you'll see anywhere where open

00:56:13,609 --> 00:56:18,380
source is not pervasive in cloud

00:56:15,349 --> 00:56:21,109
computing and so i think it's i think

00:56:18,380 --> 00:56:22,460
it's an assumption i think when you talk

00:56:21,109 --> 00:56:23,569
about cloud computing you're really

00:56:22,460 --> 00:56:29,119
talking about open source cloud

00:56:23,569 --> 00:56:32,269
computing cloud sac is a robust solution

00:56:29,119 --> 00:56:34,670
for large deployments you have dozens of

00:56:32,269 --> 00:56:38,569
data centers and thousands of servers in

00:56:34,670 --> 00:56:41,240
each data centers these hardware is

00:56:38,569 --> 00:56:44,720
going to fail and CloudStack is designed

00:56:41,240 --> 00:56:47,450
to handle number one that mass scale

00:56:44,720 --> 00:56:50,599
number two it's designed to handle the

00:56:47,450 --> 00:56:53,450
failure that inevitably happens in large

00:56:50,599 --> 00:56:57,680
deployments started working on cod tech

00:56:53,450 --> 00:57:00,920
over four years ago and it was the

00:56:57,680 --> 00:57:02,720
original set of people working on it had

00:57:00,920 --> 00:57:06,829
a background of delivering software

00:57:02,720 --> 00:57:11,059
telcos and service providers lots of QA

00:57:06,829 --> 00:57:14,690
lots of users actually using it high

00:57:11,059 --> 00:57:17,750
availability is a key feature multiple

00:57:14,690 --> 00:57:19,940
hypervisors support different network

00:57:17,750 --> 00:57:22,940
models we can pick up whatever suits you

00:57:19,940 --> 00:57:24,710
better while step management server can

00:57:22,940 --> 00:57:28,400
be deployed in different physical

00:57:24,710 --> 00:57:30,049
machines it definitely has a huge

00:57:28,400 --> 00:57:35,089
footprint it's being deployed everywhere

00:57:30,049 --> 00:57:37,640
there's a major movie studio that they

00:57:35,089 --> 00:57:40,940
were using cloudstack they were using it

00:57:37,640 --> 00:57:42,920
to transcode video and i thought that

00:57:40,940 --> 00:57:44,539
was terribly fascinating what i found

00:57:42,920 --> 00:57:47,809
more fascinating is what they did during

00:57:44,539 --> 00:57:50,599
lunch where they would spin up you know

00:57:47,809 --> 00:57:51,980
50 or 60 game servers then as soon as

00:57:50,599 --> 00:57:52,590
lunch was over they would destroy all

00:57:51,980 --> 00:57:54,680
the instance

00:57:52,590 --> 00:57:58,080
doesn't go back to doing real work

00:57:54,680 --> 00:57:59,610
cloudstack is vast it touches so many

00:57:58,080 --> 00:58:01,470
different aspects and there's no one

00:57:59,610 --> 00:58:04,700
person that's kind of like a master of

00:58:01,470 --> 00:58:07,890
all those realms I think CloudStack as a

00:58:04,700 --> 00:58:10,140
project is going to be one of the

00:58:07,890 --> 00:58:14,220
leaders simply because it's some of the

00:58:10,140 --> 00:58:19,650
most feature fallen and and robust

00:58:14,220 --> 00:58:22,550
platforms out they were I don't senior

00:58:19,650 --> 00:58:22,550
living through the clouds dag

00:58:37,990 --> 00:58:42,260
your customers rely on your website or

00:58:40,790 --> 00:58:44,630
application if it's slower

00:58:42,260 --> 00:58:47,570
non-responsive it infuriates your users

00:58:44,630 --> 00:58:49,400
and costs you money keeping your

00:58:47,570 --> 00:58:52,890
business critical systems humming along

00:58:49,400 --> 00:58:55,740
requires insight into what they're doing

00:58:52,890 --> 00:58:57,720
your system metrics tell stories stories

00:58:55,740 --> 00:59:00,210
that can reveal performance bottlenecks

00:58:57,720 --> 00:59:02,130
resource limitations and other problems

00:59:00,210 --> 00:59:04,050
but how do you keep an eye on all of

00:59:02,130 --> 00:59:06,660
your systems performance metrics in

00:59:04,050 --> 00:59:09,510
real-time and record this data for later

00:59:06,660 --> 00:59:11,490
analysis enter longview the new way to

00:59:09,510 --> 00:59:13,530
see what's really going on under the

00:59:11,490 --> 00:59:15,660
hood the longview dashboard lets you

00:59:13,530 --> 00:59:17,640
visualize the status of all your systems

00:59:15,660 --> 00:59:20,370
providing you with a bird's-eye view of

00:59:17,640 --> 00:59:23,490
your entire fleet you can sort by cpu

00:59:20,370 --> 00:59:25,950
memory swap processes load and network

00:59:23,490 --> 00:59:28,530
usage click a specific system to access

00:59:25,950 --> 00:59:30,510
its individual dashboard then click and

00:59:28,530 --> 00:59:33,510
drag to zoom in on chokepoints and get

00:59:30,510 --> 00:59:35,520
more detail comprehensive network data

00:59:33,510 --> 00:59:38,220
including inbound and outbound traffic

00:59:35,520 --> 00:59:39,810
is available on the network tab and disk

00:59:38,220 --> 00:59:41,700
rights and free space on the disk

00:59:39,810 --> 00:59:44,550
stabbed while the process Explorer

00:59:41,700 --> 00:59:47,100
displays usage statistics for individual

00:59:44,550 --> 00:59:49,260
processes the system info tab shows

00:59:47,100 --> 00:59:51,510
listening services active connections

00:59:49,260 --> 00:59:53,640
and available updates adding long view

00:59:51,510 --> 00:59:55,320
to a system is easy just click the

00:59:53,640 --> 00:59:57,480
button copy the one line installation

00:59:55,320 --> 00:59:59,910
command then run the command on your

00:59:57,480 --> 01:00:01,620
linux system to complete the process the

00:59:59,910 --> 01:00:03,780
agent will begin collecting data and

01:00:01,620 --> 01:00:05,660
sending it to longview then the graph

01:00:03,780 --> 01:00:08,210
start rolling

01:00:05,660 --> 01:00:10,579
use longview to gain visibility into

01:00:08,210 --> 01:00:14,319
your servers so when your website or app

01:00:10,579 --> 01:00:14,319

YouTube URL: https://www.youtube.com/watch?v=oHsa4wvBiaU


