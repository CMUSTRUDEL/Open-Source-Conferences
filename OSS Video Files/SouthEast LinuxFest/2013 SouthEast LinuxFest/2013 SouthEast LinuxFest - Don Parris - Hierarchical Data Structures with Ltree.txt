Title: 2013 SouthEast LinuxFest - Don Parris - Hierarchical Data Structures with Ltree
Publication date: 2014-07-29
Playlist: 2013 SouthEast LinuxFest
Description: 
	2013 SouthEast LinuxFest
Don Parris - Making Quick Work of Hierarchical Data Structures with Ltree
Captions: 
	00:00:00,000 --> 00:00:05,160
the following presentation was recorded

00:00:02,639 --> 00:00:08,280
at the 2013 southeast linux fest in

00:00:05,160 --> 00:00:10,860
charlotte north carolina it is licensed

00:00:08,280 --> 00:00:12,509
under a creative commons license for

00:00:10,860 --> 00:00:16,619
more information about the southeast

00:00:12,509 --> 00:00:19,830
linux fest visit WWF eastland TX phase

00:00:16,619 --> 00:00:21,600
or the southeast linux fest would like

00:00:19,830 --> 00:00:24,000
to thank the following diamond sponsors

00:00:21,600 --> 00:00:27,000
in 2013 for helping make these videos

00:00:24,000 --> 00:00:30,210
possible will stored in hierarchical

00:00:27,000 --> 00:00:31,800
tree-like structures to help you

00:00:30,210 --> 00:00:34,230
understand the concept we're going to

00:00:31,800 --> 00:00:37,559
take a look at the problem that I was

00:00:34,230 --> 00:00:39,600
trying to solve and then we'll take a

00:00:37,559 --> 00:00:42,239
look at some of the more common

00:00:39,600 --> 00:00:43,800
approaches to solving the problem of

00:00:42,239 --> 00:00:48,719
hierarchical data and relational

00:00:43,800 --> 00:00:50,579
databases then we're going to actually

00:00:48,719 --> 00:00:53,210
take a look at the l tree module and

00:00:50,579 --> 00:00:56,309
show you how that makes life easier

00:00:53,210 --> 00:00:57,840
finally i'm making some basic

00:00:56,309 --> 00:01:00,989
assumptions that you at least know what

00:00:57,840 --> 00:01:02,430
postgresql postgresql is and have some

00:01:00,989 --> 00:01:06,960
idea how to get it up and running know

00:01:02,430 --> 00:01:12,090
some basic SQL stuff then that you can

00:01:06,960 --> 00:01:14,460
install software on your distribution my

00:01:12,090 --> 00:01:16,799
problem is that i wanted to summarize

00:01:14,460 --> 00:01:18,509
categories summarize financial

00:01:16,799 --> 00:01:23,159
transactions by various levels of

00:01:18,509 --> 00:01:25,650
category you can accuse quicken or give

00:01:23,159 --> 00:01:27,930
quicken the credit you know used to be

00:01:25,650 --> 00:01:31,680
in the old days you'd get to the grocery

00:01:27,930 --> 00:01:33,960
store you'd buy groceries you come home

00:01:31,680 --> 00:01:39,740
and you put in a receipt and call it

00:01:33,960 --> 00:01:42,060
groceries and quicken I what is it yet

00:01:39,740 --> 00:01:44,430
in your case you may be wanting to

00:01:42,060 --> 00:01:48,210
actually summarize demographic data for

00:01:44,430 --> 00:01:50,610
a multinational conglomerate corporation

00:01:48,210 --> 00:01:54,540
thing that where you want to know data

00:01:50,610 --> 00:01:57,149
by continent nation state county city

00:01:54,540 --> 00:02:00,090
zip you know that kind of thing

00:01:57,149 --> 00:02:04,500
neighborhood up to seven levels of depth

00:02:00,090 --> 00:02:08,550
here or your taxonomy or structure may

00:02:04,500 --> 00:02:11,270
go deeper than that my case had a

00:02:08,550 --> 00:02:13,370
category structure or something like 200

00:02:11,270 --> 00:02:17,460
categories wide

00:02:13,370 --> 00:02:19,800
and you see the levels of depth here the

00:02:17,460 --> 00:02:22,440
numbers of categories at each level of

00:02:19,800 --> 00:02:25,530
depth so what you're seeing is you're

00:02:22,440 --> 00:02:27,450
seeing a tree that varies has some have

00:02:25,530 --> 00:02:30,690
some branches or longer than others more

00:02:27,450 --> 00:02:34,110
more deep than others this is just a

00:02:30,690 --> 00:02:36,630
cross-section of my category tree now I

00:02:34,110 --> 00:02:39,660
want you to know you go and show this to

00:02:36,630 --> 00:02:42,630
your wife this is a test show it to your

00:02:39,660 --> 00:02:46,950
wife and see how long it takes for her

00:02:42,630 --> 00:02:50,220
to get a headache how many of you are

00:02:46,950 --> 00:02:51,570
already getting a headache I mean you

00:02:50,220 --> 00:02:53,970
start looking at these numbers and

00:02:51,570 --> 00:02:56,459
you're just going over what the heck and

00:02:53,970 --> 00:02:59,970
all I'm showing here is I'm just showing

00:02:56,459 --> 00:03:04,320
income and expenses utilities transfer

00:02:59,970 --> 00:03:07,560
go sir ease and transportation but I

00:03:04,320 --> 00:03:09,510
have these broken down even further so

00:03:07,560 --> 00:03:11,100
that I've got a difference in the you

00:03:09,510 --> 00:03:13,430
know the types of food that i buy and

00:03:11,100 --> 00:03:16,709
even down to the beverages alcohol and

00:03:13,430 --> 00:03:21,260
truthfully I'm even further than that I

00:03:16,709 --> 00:03:21,260
have it down into beer wine and spirits

00:03:24,980 --> 00:03:31,290
so what I wanted to be able to do and I

00:03:29,400 --> 00:03:33,540
had the hardest time getting people to

00:03:31,290 --> 00:03:35,370
get this on the on the mailing lists

00:03:33,540 --> 00:03:37,560
when I was trying to figure out how to

00:03:35,370 --> 00:03:39,330
solve this problem I wanted to see

00:03:37,560 --> 00:03:43,380
things by utilities groceries and

00:03:39,330 --> 00:03:45,930
transportation all right well you know

00:03:43,380 --> 00:03:48,090
if you when you start getting adding

00:03:45,930 --> 00:03:50,070
these levels of categories into a

00:03:48,090 --> 00:03:52,170
relational database management system

00:03:50,070 --> 00:03:58,650
that's kind of like fitting square pegs

00:03:52,170 --> 00:04:01,590
into triangular holes ain't happening so

00:03:58,650 --> 00:04:05,040
and if you try to show that to a busy

00:04:01,590 --> 00:04:06,720
executive even you're going to get the

00:04:05,040 --> 00:04:07,830
same response as what my wife gave me I

00:04:06,720 --> 00:04:10,320
don't care about all these stupid

00:04:07,830 --> 00:04:15,350
numbers just show me some of the basic

00:04:10,320 --> 00:04:20,630
stuff there you go there's our

00:04:15,350 --> 00:04:23,970
government mandated warning do note that

00:04:20,630 --> 00:04:27,530
on the other hand IRS auditors

00:04:23,970 --> 00:04:30,030
really excited at seeing such details

00:04:27,530 --> 00:04:32,550
although I'm guessing from the news

00:04:30,030 --> 00:04:34,290
these days the IRS agents are not really

00:04:32,550 --> 00:04:44,070
excited about those details getting out

00:04:34,290 --> 00:04:45,720
to the public but in order to help you

00:04:44,070 --> 00:04:50,820
see what I want it where I wanted to get

00:04:45,720 --> 00:04:55,440
to this is where I wanted to get these

00:04:50,820 --> 00:04:58,890
are my income and expenses more or less

00:04:55,440 --> 00:05:01,020
I there's no time period here so we're

00:04:58,890 --> 00:05:03,180
just showing everything in the database

00:05:01,020 --> 00:05:08,280
at this particular whenever I took this

00:05:03,180 --> 00:05:11,880
great shot but really 18 rows that's

00:05:08,280 --> 00:05:14,070
much easier to understand and even

00:05:11,880 --> 00:05:17,940
better I can pull that into LibreOffice

00:05:14,070 --> 00:05:20,120
calc it create a pie chart now my wife

00:05:17,940 --> 00:05:22,860
can get her head around the pie chart a

00:05:20,120 --> 00:05:28,080
busy executive can get his or her head

00:05:22,860 --> 00:05:32,370
around a pie chart this is awesome but

00:05:28,080 --> 00:05:34,620
getting here was not easy most of the

00:05:32,370 --> 00:05:36,990
solutions i found required me to create

00:05:34,620 --> 00:05:40,500
lots of columns and that we're going to

00:05:36,990 --> 00:05:44,610
have no values and no DBA really wants a

00:05:40,500 --> 00:05:46,200
bunch of old values in their database or

00:05:44,610 --> 00:05:50,460
i'd need queries i didn't even have any

00:05:46,200 --> 00:05:53,010
clue how to write or I needed one query

00:05:50,460 --> 00:06:01,229
repeated for all of the branches of the

00:05:53,010 --> 00:06:04,140
category tree yeah you know 18 repeating

00:06:01,229 --> 00:06:06,660
the same query 18 to 20 times now need

00:06:04,140 --> 00:06:09,810
to start learning programming you know T

00:06:06,660 --> 00:06:11,940
whiz or create views and temp tables

00:06:09,810 --> 00:06:14,900
just to be able to get that in other

00:06:11,940 --> 00:06:19,530
words it's getting really convoluted I

00:06:14,900 --> 00:06:22,950
data warehousing when I asked this

00:06:19,530 --> 00:06:28,820
question 22 DBA gurus you know what they

00:06:22,950 --> 00:06:32,120
told me you need a data warehouse yeah

00:06:28,820 --> 00:06:36,360
cue the lord of the rings music here I

00:06:32,120 --> 00:06:37,440
wanted one query to rule them all I just

00:06:36,360 --> 00:06:39,480
wanted something

00:06:37,440 --> 00:06:42,000
simple to go up and down my category

00:06:39,480 --> 00:06:43,530
tree I just wanted to be able to

00:06:42,000 --> 00:06:46,830
summarize things I didn't want to have

00:06:43,530 --> 00:06:48,660
to go through all this junk so what are

00:06:46,830 --> 00:06:51,930
some of the things that I went through

00:06:48,660 --> 00:06:56,040
before I found L tree I went out and I

00:06:51,930 --> 00:06:58,860
did some homework and the first thing I

00:06:56,040 --> 00:07:00,720
found was an adjacency list model this

00:06:58,860 --> 00:07:05,040
is this actually gets taught in your

00:07:00,720 --> 00:07:08,970
average DBA course the nested set path

00:07:05,040 --> 00:07:11,400
enumeration data warehousing these are

00:07:08,970 --> 00:07:15,750
the most common approaches that I found

00:07:11,400 --> 00:07:17,190
and the truth is I really don't didn't

00:07:15,750 --> 00:07:19,200
care for any of them when i would start

00:07:17,190 --> 00:07:22,200
work trying to work with them and i

00:07:19,200 --> 00:07:27,900
don't care for any of them now but then

00:07:22,200 --> 00:07:30,450
I discovered L tree and there was I

00:07:27,900 --> 00:07:33,270
mentioned or ahead on the slide there

00:07:30,450 --> 00:07:37,560
about one of those being possibly or

00:07:33,270 --> 00:07:39,570
some variation being a even patented so

00:07:37,560 --> 00:07:43,530
you get it kind of watch yourself how

00:07:39,570 --> 00:07:45,000
you do things again the adjacency list

00:07:43,530 --> 00:07:48,210
this is what's taught in your average

00:07:45,000 --> 00:07:51,120
DBA 110 class and it is literal it's

00:07:48,210 --> 00:07:54,300
just a recursive tree a recursive table

00:07:51,120 --> 00:07:56,490
so you have an employee ID one and all

00:07:54,300 --> 00:08:00,060
you do is your manager ID refers back to

00:07:56,490 --> 00:08:04,200
the employee ID for the men who ever is

00:08:00,060 --> 00:08:06,660
the manager that's pretty simple if

00:08:04,200 --> 00:08:08,160
you're familiar with the F cod he

00:08:06,660 --> 00:08:10,140
actually wrote about this he's sort of

00:08:08,160 --> 00:08:16,680
the father of modern relational database

00:08:10,140 --> 00:08:20,930
systems wrote about this model the

00:08:16,680 --> 00:08:23,550
nested set theory or nested set model

00:08:20,930 --> 00:08:25,500
it's more difficult to understand it

00:08:23,550 --> 00:08:27,480
first it really takes you sometime I

00:08:25,500 --> 00:08:31,950
still haven't gotten my head around this

00:08:27,480 --> 00:08:33,030
one I mean I stole this stole borrowed

00:08:31,950 --> 00:08:36,810
whatever you want to call it from

00:08:33,030 --> 00:08:39,719
Wikipedia because I was afraid if I drew

00:08:36,810 --> 00:08:41,820
my own nested set graph that somebody

00:08:39,719 --> 00:08:46,680
here would be able to call me on my

00:08:41,820 --> 00:08:50,850
screwing it all up so I included the

00:08:46,680 --> 00:08:54,389
link to wikimedia for you there so if

00:08:50,850 --> 00:08:57,720
for references think so thanks to

00:08:54,389 --> 00:09:00,329
wikipedia now this one is actually I

00:08:57,720 --> 00:09:03,959
want to say to some extent easier to

00:09:00,329 --> 00:09:06,720
work with the path enumeration model you

00:09:03,959 --> 00:09:08,100
create a path here and I think

00:09:06,720 --> 00:09:11,339
technically you're supposed to be able

00:09:08,100 --> 00:09:14,040
to use pattern matching to go up and

00:09:11,339 --> 00:09:17,120
down your tree unfortunately me not

00:09:14,040 --> 00:09:19,079
being brilliant rocket scientist type I

00:09:17,120 --> 00:09:22,290
goofed up and really didn't know much

00:09:19,079 --> 00:09:25,259
how to implement pattern matching in my

00:09:22,290 --> 00:09:29,040
database so you know just shoot me if

00:09:25,259 --> 00:09:33,389
you will so that added to my

00:09:29,040 --> 00:09:35,339
difficulties it is advantageous when the

00:09:33,389 --> 00:09:40,139
tree is of limited depth and then you're

00:09:35,339 --> 00:09:43,259
not going to modify it much I and my

00:09:40,139 --> 00:09:46,019
original design was based on this but I

00:09:43,259 --> 00:09:48,690
used this form of a path instead of what

00:09:46,019 --> 00:09:52,529
you see here so just a little bit

00:09:48,690 --> 00:09:57,480
variation there's a downside of these

00:09:52,529 --> 00:10:00,930
approaches I when I asked when I showed

00:09:57,480 --> 00:10:03,660
my DBA one Tim professor my enumerated

00:10:00,930 --> 00:10:06,209
path model she looked at me and she said

00:10:03,660 --> 00:10:08,069
that's not normalized you need to I

00:10:06,209 --> 00:10:09,959
can't wait for us to get to the

00:10:08,069 --> 00:10:13,649
normalization chapter so you can see

00:10:09,959 --> 00:10:16,380
about normalization well she's actually

00:10:13,649 --> 00:10:19,259
right I and I you know inside I was kind

00:10:16,380 --> 00:10:22,470
of going alright let's put up your dukes

00:10:19,259 --> 00:10:24,750
yeah I did my research on this I this is

00:10:22,470 --> 00:10:26,730
the model that that many other people

00:10:24,750 --> 00:10:29,839
use and you're telling me it's not

00:10:26,730 --> 00:10:33,180
normalized well actually she's right

00:10:29,839 --> 00:10:38,100
thank you Joe cellco for clarifying that

00:10:33,180 --> 00:10:40,829
for me but you have to take measures to

00:10:38,100 --> 00:10:43,759
prevent data anomalies from entering

00:10:40,829 --> 00:10:46,740
your database with these various models

00:10:43,759 --> 00:10:50,189
the adjacency list starts becoming

00:10:46,740 --> 00:10:51,720
unwieldy when you get a larger tree the

00:10:50,189 --> 00:10:55,230
nested set is a pain in the neck to

00:10:51,720 --> 00:10:58,699
learn and it's slow on updates it's very

00:10:55,230 --> 00:11:03,120
fast to retrieve your data it's a

00:10:58,699 --> 00:11:04,680
understand it's beautiful code on when

00:11:03,120 --> 00:11:06,630
it comes time to retrieve

00:11:04,680 --> 00:11:08,220
but it's slow on updates because you

00:11:06,630 --> 00:11:12,810
know you have to update every single

00:11:08,220 --> 00:11:16,649
branch effectively path enumeration

00:11:12,810 --> 00:11:18,720
again that seems to be the better with

00:11:16,649 --> 00:11:20,160
pattern matching your ok but you also

00:11:18,720 --> 00:11:23,279
wind up fighting common table

00:11:20,160 --> 00:11:26,060
expressions these are queries I don't

00:11:23,279 --> 00:11:29,279
know how to write 90 DB gurus

00:11:26,060 --> 00:11:31,140
professional dbas who would have who

00:11:29,279 --> 00:11:33,810
would take them some time to write a

00:11:31,140 --> 00:11:37,980
common table expression that would work

00:11:33,810 --> 00:11:40,200
for what I wanted to do yeah there you

00:11:37,980 --> 00:11:46,290
go there's our common table expression

00:11:40,200 --> 00:11:51,420
with recursive this is 11 lines of code

00:11:46,290 --> 00:11:54,600
here and I haven't even introduced a

00:11:51,420 --> 00:11:59,700
time frame yet we're just talking about

00:11:54,600 --> 00:12:02,850
show me everything in the database if I

00:11:59,700 --> 00:12:06,240
want to see say show me everything all

00:12:02,850 --> 00:12:07,800
the financial transactions between the

00:12:06,240 --> 00:12:10,170
some of the financial transactions

00:12:07,800 --> 00:12:13,400
between january and march now i have to

00:12:10,170 --> 00:12:18,480
add in the dates and here somehow yeah

00:12:13,400 --> 00:12:19,950
yeah can you guys see how this might be

00:12:18,480 --> 00:12:23,160
difficult for somebody who doesn't

00:12:19,950 --> 00:12:28,860
really you know who hasn't doesn't have

00:12:23,160 --> 00:12:31,920
10 years experience as a DBA you'll see

00:12:28,860 --> 00:12:35,250
that we're going to trim that down by

00:12:31,920 --> 00:12:37,500
quite a bit data warehousing i mention

00:12:35,250 --> 00:12:39,150
this just briefly I don't even know

00:12:37,500 --> 00:12:41,220
anything about data warehousing much I

00:12:39,150 --> 00:12:43,380
know I get the idea the concept behind

00:12:41,220 --> 00:12:47,279
it but I've not ever implemented data

00:12:43,380 --> 00:12:49,260
warehousing but I'm trying to do this

00:12:47,279 --> 00:12:51,810
for personal financial transaction

00:12:49,260 --> 00:12:57,779
database why do I want to walk data

00:12:51,810 --> 00:13:00,360
warehouse for this I may not be the

00:12:57,779 --> 00:13:02,190
brightest bulb in the chandelier but at

00:13:00,360 --> 00:13:05,820
least I got the idea that that might be

00:13:02,190 --> 00:13:08,040
overkill so let's just be honest with

00:13:05,820 --> 00:13:12,089
ourselves we are in Mordor Mordor is a

00:13:08,040 --> 00:13:15,630
deep dark ugly place it's if you know

00:13:12,089 --> 00:13:17,410
your if you know the story it's not a

00:13:15,630 --> 00:13:19,060
great place to be

00:13:17,410 --> 00:13:22,440
and that's exactly where we are with

00:13:19,060 --> 00:13:25,870
these approaches to hierarchical data

00:13:22,440 --> 00:13:27,550
well if you remember Fredo got out of

00:13:25,870 --> 00:13:31,079
there and he went the way of the elves

00:13:27,550 --> 00:13:31,079
so let's go the way of the elves now

00:13:31,680 --> 00:13:35,620
does it really have it doesn't you know

00:13:34,000 --> 00:13:37,839
the question is is they have to be this

00:13:35,620 --> 00:13:40,829
complicated no it doesn't the l3 module

00:13:37,839 --> 00:13:45,040
makes all of this much less complicated

00:13:40,829 --> 00:13:47,680
l tree is an add-on module it uses a

00:13:45,040 --> 00:13:51,730
dotted labeled path plus pattern

00:13:47,680 --> 00:13:53,829
matching to perform its magic and you

00:13:51,730 --> 00:13:58,620
can write queries so easy that even a

00:13:53,829 --> 00:13:58,620
troll or myself can figure that out

00:13:58,949 --> 00:14:04,600
typically it is faster than a common

00:14:02,740 --> 00:14:08,310
table expression or other recursive

00:14:04,600 --> 00:14:10,300
queries yeah there may be exceptions but

00:14:08,310 --> 00:14:13,360
typically you'll find it's a lot faster

00:14:10,300 --> 00:14:15,339
and look at the look at what I did here

00:14:13,360 --> 00:14:20,139
all it is I created a separate table for

00:14:15,339 --> 00:14:24,449
the taxonomy and I get a primary key at

00:14:20,139 --> 00:14:28,029
a path continent confident doc country

00:14:24,449 --> 00:14:31,870
all the way down here confident country

00:14:28,029 --> 00:14:35,980
state county city dot zip underscored

00:14:31,870 --> 00:14:37,750
code you can't have any spaces you can't

00:14:35,980 --> 00:14:39,939
even use a dash you have to use an

00:14:37,750 --> 00:14:43,329
underscore so if you want to separate

00:14:39,939 --> 00:14:46,329
names to make it more readable then you

00:14:43,329 --> 00:14:53,980
just use an underscore that's actually

00:14:46,329 --> 00:14:58,180
important tonight to install L tree

00:14:53,980 --> 00:14:59,850
again it's an add-on module it's really

00:14:58,180 --> 00:15:02,019
simple you just use your your

00:14:59,850 --> 00:15:07,449
distributions package manager to install

00:15:02,019 --> 00:15:11,550
the postgresql contribute then you log

00:15:07,449 --> 00:15:13,660
on to postgres as a super user and

00:15:11,550 --> 00:15:18,790
connect to the database you want to

00:15:13,660 --> 00:15:21,839
install L tree so installing it is

00:15:18,790 --> 00:15:26,670
really a breeze create extension L tree

00:15:21,839 --> 00:15:26,670
that's really really hard

00:15:26,990 --> 00:15:35,790
to update it use alter extension l tree

00:15:31,500 --> 00:15:38,730
to keep it up to date if you installed a

00:15:35,790 --> 00:15:41,430
template one you can obviously make it

00:15:38,730 --> 00:15:44,340
available to all of your databases that

00:15:41,430 --> 00:15:49,140
use template one my database uses

00:15:44,340 --> 00:15:50,820
template 0 and you tae a utf-8 so I

00:15:49,140 --> 00:15:52,860
hadn't quite figured out how to make it

00:15:50,820 --> 00:15:59,430
available to all of the UTA all the

00:15:52,860 --> 00:16:01,440
template 0 databases 11 got you there so

00:15:59,430 --> 00:16:06,240
I have to install it on the individual

00:16:01,440 --> 00:16:09,930
database in this case using the data

00:16:06,240 --> 00:16:11,580
type honestly I think the recommended

00:16:09,930 --> 00:16:14,820
approach is actually create your

00:16:11,580 --> 00:16:16,800
taxonomy in a separate table you can't

00:16:14,820 --> 00:16:20,520
it's just a data type you can use it in

00:16:16,800 --> 00:16:22,110
any table you want but if you want to

00:16:20,520 --> 00:16:24,360
maintain your data integrity and that

00:16:22,110 --> 00:16:26,820
kind of stuff if you want to make

00:16:24,360 --> 00:16:30,240
managing this thing easy create a

00:16:26,820 --> 00:16:34,400
separate table just do yourself a favor

00:16:30,240 --> 00:16:43,170
there I do think it's important to

00:16:34,400 --> 00:16:45,030
maintain a primary key constraint I if I

00:16:43,170 --> 00:16:47,100
think as far as I know you can do big

00:16:45,030 --> 00:16:53,100
cereal it's it's you know you're just

00:16:47,100 --> 00:16:58,620
using a i mean the the primary key

00:16:53,100 --> 00:17:04,020
doesn't really have anything to do yeah

00:16:58,620 --> 00:17:08,580
it's just a primary key field so but

00:17:04,020 --> 00:17:11,089
your your path field uses this ultry

00:17:08,580 --> 00:17:11,089
data type

00:17:13,809 --> 00:17:29,139
I you can some depends on the functions

00:17:24,039 --> 00:17:33,480
I would recommend looking into the

00:17:29,139 --> 00:17:33,480
documentation as for the specifics on

00:17:34,350 --> 00:17:42,360
but yeah I think you really do need to

00:17:36,789 --> 00:17:42,360
have some sort of a unique constraint

00:17:43,139 --> 00:17:48,639
let's just give you an idea of my

00:17:46,059 --> 00:17:51,999
database here to just make make things

00:17:48,639 --> 00:17:54,399
easier this is my original category

00:17:51,999 --> 00:18:03,639
table using the the enumerated path

00:17:54,399 --> 00:18:07,779
model and so this is my new as

00:18:03,639 --> 00:18:11,559
cross-section of it using my new L tree

00:18:07,779 --> 00:18:13,419
version and you see here like i said the

00:18:11,559 --> 00:18:18,429
groceries not average is not alcohol

00:18:13,419 --> 00:18:20,080
that beer wine spirits now see if I if I

00:18:18,429 --> 00:18:22,450
see them spending too much money on beer

00:18:20,080 --> 00:18:32,649
not enough on wine or vice versa I can

00:18:22,450 --> 00:18:35,379
adjust my budget exactly and this is my

00:18:32,649 --> 00:18:40,179
i call it the entity table I you know I

00:18:35,379 --> 00:18:42,369
keep a principal pay income source

00:18:40,179 --> 00:18:43,869
whatever they're all in one table I just

00:18:42,369 --> 00:18:47,529
call them an entity because I don't know

00:18:43,869 --> 00:18:49,240
how do you call them all rather than

00:18:47,529 --> 00:18:55,869
create three different tables I thought

00:18:49,240 --> 00:19:00,100
that would be stupid so yeah as more or

00:18:55,869 --> 00:19:03,580
less extraneous data here but it's one

00:19:00,100 --> 00:19:05,590
of four tables in my database the

00:19:03,580 --> 00:19:07,600
transaction record table of course you

00:19:05,590 --> 00:19:10,559
can't have a table called transaction in

00:19:07,600 --> 00:19:14,909
a database that has transactional yeah

00:19:10,559 --> 00:19:18,070
the transaction is a reserved keyword

00:19:14,909 --> 00:19:19,629
but you can see I've got what's going to

00:19:18,070 --> 00:19:24,179
be important to us in a minute here is

00:19:19,629 --> 00:19:26,669
the trans req ID the trans wrecked date

00:19:24,179 --> 00:19:31,710
the rest of it is pretty

00:19:26,669 --> 00:19:33,659
Irenaeus I am by the way the nice thing

00:19:31,710 --> 00:19:36,059
about this is now I can even add in an

00:19:33,659 --> 00:19:39,179
extra column so that i can either

00:19:36,059 --> 00:19:44,009
include attached skin receipt documents

00:19:39,179 --> 00:19:46,169
or at least a link to them the details

00:19:44,009 --> 00:19:50,879
table is the real meat and potatoes of

00:19:46,169 --> 00:19:55,379
the database and like i say the category

00:19:50,879 --> 00:19:59,549
ID I just assigned that base category ID

00:19:55,379 --> 00:20:01,019
to the particular item again I mentioned

00:19:59,549 --> 00:20:02,700
earlier you back in the old days you'd

00:20:01,019 --> 00:20:05,970
go to the grocery store you buy

00:20:02,700 --> 00:20:08,309
groceries well nowadays walmart has

00:20:05,970 --> 00:20:09,659
gotten into the grocery business so

00:20:08,309 --> 00:20:11,100
maybe if I go to Walmart and buy

00:20:09,659 --> 00:20:13,049
groceries and I head over to the

00:20:11,100 --> 00:20:14,820
clothing section pick up a pair of jeans

00:20:13,049 --> 00:20:19,320
go over to automotive buy some oil for

00:20:14,820 --> 00:20:23,129
the car go over get some plants and then

00:20:19,320 --> 00:20:24,690
get some dental floss or something now

00:20:23,129 --> 00:20:27,809
when I get home how am I going to

00:20:24,690 --> 00:20:29,609
categorize the stupid transaction well

00:20:27,809 --> 00:20:32,820
that's why i put my category tree here i

00:20:29,609 --> 00:20:35,759
can line item each each expense each

00:20:32,820 --> 00:20:39,629
item on the receipt and give them an

00:20:35,759 --> 00:20:43,679
appropriate category takes a little

00:20:39,629 --> 00:20:49,879
longer to do it that way but that way

00:20:43,679 --> 00:20:57,230
everything goes in an appropriate yes

00:20:49,879 --> 00:20:57,230
yes yeah that's a yeah that's the link

00:21:00,670 --> 00:21:07,820
each each detail has a category a

00:21:05,090 --> 00:21:09,650
transaction if I if I want to do the

00:21:07,820 --> 00:21:11,410
transact the whole transaction is this

00:21:09,650 --> 00:21:13,640
ain't like for example when I buy gas

00:21:11,410 --> 00:21:18,620
okay well there's no way I'm going to

00:21:13,640 --> 00:21:21,500
split that but I can just take the total

00:21:18,620 --> 00:21:26,990
of the receipt and use that as one line

00:21:21,500 --> 00:21:32,210
item in the I called it trans details

00:21:26,990 --> 00:21:35,000
one could call this table line item so

00:21:32,210 --> 00:21:37,360
let's play with some queries here this

00:21:35,000 --> 00:21:43,850
is this is where it gets really cool

00:21:37,360 --> 00:21:45,920
this is just a simple query if you're

00:21:43,850 --> 00:21:48,340
familiar with SQL you know if you want

00:21:45,920 --> 00:21:51,530
to summarize things use the sum function

00:21:48,340 --> 00:21:57,500
and with cell belt with L tree you use

00:21:51,530 --> 00:21:59,300
saw Beltran a sub L tree path and then

00:21:57,500 --> 00:22:03,470
these two numbers here actually the most

00:21:59,300 --> 00:22:05,240
important numbers here the 0 the first

00:22:03,470 --> 00:22:08,360
number is actually your starting point

00:22:05,240 --> 00:22:11,720
the second number is your depth however

00:22:08,360 --> 00:22:18,410
deep you want to go depth of the

00:22:11,720 --> 00:22:21,860
category structure so you know you go

00:22:18,410 --> 00:22:25,340
back to the the original table or my

00:22:21,860 --> 00:22:28,310
category table what I'm doing is I'm

00:22:25,340 --> 00:22:32,560
telling it how many dots basically I

00:22:28,310 --> 00:22:32,560
want to go down is really what I'm doing

00:22:36,510 --> 00:22:46,510
zero would be the top level yeah yes in

00:22:43,570 --> 00:22:47,740
fact if i if i change that 120 it's

00:22:46,510 --> 00:22:49,950
actually going to give me my immediate

00:22:47,740 --> 00:22:51,940
immediately give me my net cash flow

00:22:49,950 --> 00:22:57,150
because it's going to some of the whole

00:22:51,940 --> 00:23:02,860
database boom so if I then want to see

00:22:57,150 --> 00:23:07,510
well first let's go to this is the

00:23:02,860 --> 00:23:13,420
result of this transaction of our

00:23:07,510 --> 00:23:16,420
previous query so now you see and again

00:23:13,420 --> 00:23:18,250
there's no date information here but now

00:23:16,420 --> 00:23:23,530
you begin to see now we've got 25

00:23:18,250 --> 00:23:25,809
categories here database development in

00:23:23,530 --> 00:23:28,480
my case and as in most is an iterative

00:23:25,809 --> 00:23:30,309
process the first screenshots had 18

00:23:28,480 --> 00:23:31,870
categories by now I've developed by the

00:23:30,309 --> 00:23:37,480
time I got this far along it developed

00:23:31,870 --> 00:23:40,150
an additional seven categories so you

00:23:37,480 --> 00:23:43,870
know but these are all the top level

00:23:40,150 --> 00:23:46,240
categories so by with the 0 and 1 this

00:23:43,870 --> 00:23:52,530
is what we see all of the top level

00:23:46,240 --> 00:23:54,429
categories now we dive down a level

00:23:52,530 --> 00:24:00,330
actually we're going to dive down three

00:23:54,429 --> 00:24:03,460
levels and again it's the same query and

00:24:00,330 --> 00:24:05,800
just remember we've got category and

00:24:03,460 --> 00:24:07,690
trans details and we're connecting them

00:24:05,800 --> 00:24:16,960
this is our you know we're making our

00:24:07,690 --> 00:24:18,610
join here so and the result mind you we

00:24:16,960 --> 00:24:20,500
get a lot more results this time because

00:24:18,610 --> 00:24:22,570
we're going down in further into the

00:24:20,500 --> 00:24:26,040
category tree so I just brought out a

00:24:22,570 --> 00:24:28,929
cross-section what this shows you though

00:24:26,040 --> 00:24:31,420
is it under that notice that even though

00:24:28,929 --> 00:24:35,110
we went four levels down it also

00:24:31,420 --> 00:24:41,590
summarizes the categories that only are

00:24:35,110 --> 00:24:44,320
three levels down or two or one so I've

00:24:41,590 --> 00:24:48,510
got two hundred eighty-seven dollars

00:24:44,320 --> 00:24:48,510
worth of receipts that I never itemized

00:24:58,460 --> 00:25:06,600
correct yeah that I did not sub K in

00:25:04,710 --> 00:25:09,840
other words that's a get receipt and I

00:25:06,600 --> 00:25:21,170
said groceries I gave it the category ID

00:25:09,840 --> 00:25:21,170
for groceries sure no problem

00:25:25,530 --> 00:25:31,770
we're getting 44 lines of code it's

00:25:30,000 --> 00:25:35,220
doubled up because of the screen space

00:25:31,770 --> 00:25:49,830
but four lines a kite here versus the 11

00:25:35,220 --> 00:25:52,140
we saw earlier sure okay now let's get a

00:25:49,830 --> 00:25:57,690
little more complicated now let's throw

00:25:52,140 --> 00:26:00,570
in a date and I say this makes it a

00:25:57,690 --> 00:26:03,330
little bit more complicated I pointed

00:26:00,570 --> 00:26:05,790
back to the transaction record table

00:26:03,330 --> 00:26:07,620
well now we're in order to get the date

00:26:05,790 --> 00:26:10,490
we've got to join the transaction

00:26:07,620 --> 00:26:13,500
transaction record table to the query

00:26:10,490 --> 00:26:16,500
simple enough but make sure you make

00:26:13,500 --> 00:26:18,090
that join because if you don't now

00:26:16,500 --> 00:26:22,620
you're going to get an erroneous result

00:26:18,090 --> 00:26:24,030
set and it looks really funny and if you

00:26:22,620 --> 00:26:26,610
don't know any better you're going to be

00:26:24,030 --> 00:26:28,170
going wow this is great and but

00:26:26,610 --> 00:26:32,280
everything is totally out of whack in

00:26:28,170 --> 00:26:40,560
terms of the numbers so definitely make

00:26:32,280 --> 00:26:44,520
sure you make that join and we only went

00:26:40,560 --> 00:26:47,490
two levels deep this time so now we have

00:26:44,520 --> 00:26:52,830
the result of that and you see we're

00:26:47,490 --> 00:26:56,400
only going down 1 dot so it's business

00:26:52,830 --> 00:27:01,220
dot office supplies education dot

00:26:56,400 --> 00:27:01,220
miscellaneous entertainment dining

00:27:02,570 --> 00:27:10,760
discounsel discounts doesn't have but

00:27:06,140 --> 00:27:10,760
one level so it did catch that

00:27:13,619 --> 00:27:20,379
but again you see the the results of

00:27:16,899 --> 00:27:22,989
just going down to levels deep but now

00:27:20,379 --> 00:27:26,440
this is all between effectively this is

00:27:22,989 --> 00:27:28,209
a year-to-date transaction I don't know

00:27:26,440 --> 00:27:30,999
if you paid attention to my dates but if

00:27:28,209 --> 00:27:33,429
I started january 1st through december

00:27:30,999 --> 00:27:42,099
31st so this is the year to date as of

00:27:33,429 --> 00:27:44,969
the time i took that screenshot okay now

00:27:42,099 --> 00:27:47,109
we get really really complicated

00:27:44,969 --> 00:27:49,299
actually we're it's not really all that

00:27:47,109 --> 00:27:51,969
complicated it's really the same query

00:27:49,299 --> 00:27:53,589
as before except what we're doing now is

00:27:51,969 --> 00:27:59,919
we're just wanting to see the groceries

00:27:53,589 --> 00:28:05,139
up by themselves yeah the left angle

00:27:59,919 --> 00:28:08,619
bracket with the @ sign or a roba that

00:28:05,139 --> 00:28:11,289
actually means anything underneath of

00:28:08,619 --> 00:28:13,749
groceries so you're going to specify

00:28:11,289 --> 00:28:16,799
your category that you want to see the

00:28:13,749 --> 00:28:19,479
specific category you want to see here

00:28:16,799 --> 00:28:22,059
with this and it will show you

00:28:19,479 --> 00:28:25,119
everything underneath the the groceries

00:28:22,059 --> 00:28:28,029
category as far down your tree as you

00:28:25,119 --> 00:28:32,200
want to go in this case I just went two

00:28:28,029 --> 00:28:38,639
levels deep so what we get is groceries

00:28:32,200 --> 00:28:38,639
dot food and groceries dot beverages yes

00:28:40,200 --> 00:28:48,159
by the way notice that i kept the group

00:28:45,519 --> 00:28:53,820
by exactly the same as my select

00:28:48,159 --> 00:28:53,820
statement up here yes that's right

00:28:54,500 --> 00:29:30,710
I I don't know how to get around that

00:29:00,380 --> 00:29:43,000
day at this point but maybe I should

00:29:30,710 --> 00:29:43,000
have yeah

00:29:47,440 --> 00:30:02,080
I think what he's saying is have a say

00:29:58,990 --> 00:30:11,049
group by category is that right yeah

00:30:02,080 --> 00:30:24,899
group you know what I wonder I wonder if

00:30:11,049 --> 00:30:24,899
I change this yeah yeah yeah okay okay

00:30:32,039 --> 00:30:39,519
yeah exactly there's more to explore you

00:30:37,750 --> 00:30:42,549
know I know we're kind of starting to

00:30:39,519 --> 00:30:44,080
run short on time here I think or am I

00:30:42,549 --> 00:30:50,799
did I move through this faster than I

00:30:44,080 --> 00:30:53,100
think 345 oh gosh I got I got another 20

00:30:50,799 --> 00:30:53,100
minutes

00:31:04,870 --> 00:31:12,799
if we count the time that I left it

00:31:09,649 --> 00:31:15,649
alone for a while and got sick and tired

00:31:12,799 --> 00:31:17,389
of playing with anything and had other

00:31:15,649 --> 00:31:20,230
things on my mind and all that fun stuff

00:31:17,389 --> 00:31:24,529
I was at this for probably about a year

00:31:20,230 --> 00:31:26,840
but once I actually inquired about once

00:31:24,529 --> 00:31:28,850
somebody suggested L tree and I was like

00:31:26,840 --> 00:31:31,610
I don't understand how to do L tree I

00:31:28,850 --> 00:31:33,649
don't know how to but I went and I found

00:31:31,610 --> 00:31:37,370
in the dock right there in the

00:31:33,649 --> 00:31:41,419
postgresql documentation you know you

00:31:37,370 --> 00:31:43,460
can it tells you what L tramonto is it

00:31:41,419 --> 00:31:49,760
even tells you how to install the add-on

00:31:43,460 --> 00:31:52,309
the contributing all that but I just

00:31:49,760 --> 00:31:54,909
figured this might be valuable for some

00:31:52,309 --> 00:31:58,100
people and might be worth knowing about

00:31:54,909 --> 00:32:00,289
because you know maybe an hour here

00:31:58,100 --> 00:32:02,440
might save you a couple of months of

00:32:00,289 --> 00:32:02,440
frustration

00:32:14,370 --> 00:32:18,750
geez into class

00:32:24,470 --> 00:32:34,679
yeah yes there are yeah was that's one

00:32:33,480 --> 00:32:36,659
of the things I was hoping is that

00:32:34,679 --> 00:32:39,029
people would be able to see how to apply

00:32:36,659 --> 00:32:42,029
this to their own problems that they

00:32:39,029 --> 00:32:45,289
want to solve I have not i am not aware

00:32:42,029 --> 00:32:50,940
of this being available in mysql SQL

00:32:45,289 --> 00:32:52,559
server or oracle or whatever i'm just

00:32:50,940 --> 00:32:56,330
not aware of anything like this being

00:32:52,559 --> 00:32:56,330
available in any other database system

00:32:57,289 --> 00:33:09,919
and you know that's yeah

00:33:13,450 --> 00:33:16,450
right

00:33:35,059 --> 00:33:42,379
yeah well when I actually asked about

00:33:38,779 --> 00:33:44,330
this on the SQL list and I'm you know

00:33:42,379 --> 00:33:49,789
I'm subscribed to postgresql general

00:33:44,330 --> 00:33:53,499
postgresql SQL and Nubian but when I

00:33:49,789 --> 00:33:53,499
asked about this guys were like

00:33:56,700 --> 00:34:03,220
well about hierarchical structures and

00:34:00,299 --> 00:34:05,740
even talking with the guy was a Dave

00:34:03,220 --> 00:34:08,440
that was here from postgresql today or

00:34:05,740 --> 00:34:10,419
this weekend even he was kind of like

00:34:08,440 --> 00:34:11,500
well I think when you ask that question

00:34:10,419 --> 00:34:13,960
a lot of people are thinking of

00:34:11,500 --> 00:34:17,109
hierarchical database systems rather

00:34:13,960 --> 00:34:20,590
than hierarchical data structures in you

00:34:17,109 --> 00:34:26,830
know but and again it I think it's kind

00:34:20,590 --> 00:34:29,409
of a confusing question but the idea of

00:34:26,830 --> 00:34:32,800
pulling hierarchical data into a

00:34:29,409 --> 00:34:38,980
relational database meant yeah it just

00:34:32,800 --> 00:34:42,190
doesn't yeah i got into whole thank you

00:34:38,980 --> 00:34:44,830
i got into a fight with my DBA 110

00:34:42,190 --> 00:34:51,190
professor at CPCC Jason you'll love this

00:34:44,830 --> 00:34:53,710
by the way si si de right when I was

00:34:51,190 --> 00:34:57,310
asking about this from her perspective

00:34:53,710 --> 00:35:01,089
and you know she's an Oracle she's more

00:34:57,310 --> 00:35:06,250
familiar with hora con ms-sql but she

00:35:01,089 --> 00:35:08,260
was she told me she said you know why

00:35:06,250 --> 00:35:13,119
are you even using postgresql it's not a

00:35:08,260 --> 00:35:14,980
big database and I went well when you

00:35:13,119 --> 00:35:17,980
say it's not a big database do you mean

00:35:14,980 --> 00:35:20,470
like it's not very popular or do you

00:35:17,980 --> 00:35:22,990
mean that it can't handle a lot of data

00:35:20,470 --> 00:35:25,150
and she said well you know the only

00:35:22,990 --> 00:35:26,920
place we ever used it here was in a

00:35:25,150 --> 00:35:29,710
class and it was only used for indexing

00:35:26,920 --> 00:35:33,849
purposes and it just can't handle

00:35:29,710 --> 00:35:35,920
terabytes and terabytes of data I was

00:35:33,849 --> 00:35:44,099
writing you know we're vissa lab class

00:35:35,920 --> 00:35:46,780
guys biggest at postgresql database boom

00:35:44,099 --> 00:35:50,410
tap boom here comes google with the

00:35:46,780 --> 00:35:52,540
result it's an article about yahoo back

00:35:50,410 --> 00:35:54,970
in two thousand eight claiming to run

00:35:52,540 --> 00:36:01,080
the world's largest database on no less

00:35:54,970 --> 00:36:01,080
than postgresql at two petabytes of data

00:36:10,210 --> 00:36:21,250
i well I started with my sequel and I

00:36:18,099 --> 00:36:24,010
liked their documentation they're there

00:36:21,250 --> 00:36:26,619
how to get up and running documentation

00:36:24,010 --> 00:36:28,930
is actually better than the postgresql

00:36:26,619 --> 00:36:31,450
how to get up and running documentation

00:36:28,930 --> 00:36:34,690
the information is in the postgresql

00:36:31,450 --> 00:36:36,670
docks but you actually have to go to

00:36:34,690 --> 00:36:41,080
like two or three different sections to

00:36:36,670 --> 00:36:42,910
figure out how to get up and running so

00:36:41,080 --> 00:36:44,740
if you don't know you just have to look

00:36:42,910 --> 00:36:48,550
for hopefully somebody's got a tutorial

00:36:44,740 --> 00:36:52,900
out there but mysql does very well at

00:36:48,550 --> 00:36:54,609
that part but i have to admit postgres

00:36:52,900 --> 00:36:58,839
has really good documentation you're

00:36:54,609 --> 00:37:00,670
absolutely right huh yeah they seem to

00:36:58,839 --> 00:37:04,349
be a pretty nice community they don't

00:37:00,670 --> 00:37:13,930
know nobody's told me rtfm yet you know

00:37:04,349 --> 00:37:16,060
so okay yeah now I did get recommended

00:37:13,930 --> 00:37:18,520
when i asked i think i was asking about

00:37:16,060 --> 00:37:19,960
this question on the newbies list and

00:37:18,520 --> 00:37:21,970
they went you know maybe you should ask

00:37:19,960 --> 00:37:25,450
that one on the general list for the SQL

00:37:21,970 --> 00:37:30,160
list because that was a much more

00:37:25,450 --> 00:37:35,010
advanced than new beast type stuffs but

00:37:30,160 --> 00:37:35,010
like I said I just hope that helps yes

00:37:55,320 --> 00:38:02,980
and I I think that this is actually I

00:37:59,260 --> 00:38:09,460
think L tree actually is it kind it's

00:38:02,980 --> 00:38:13,450
like it I want to say it is an index but

00:38:09,460 --> 00:38:17,170
you can combine indexing I think like be

00:38:13,450 --> 00:38:19,750
tree and other indexing with it but in

00:38:17,170 --> 00:38:23,310
some cases you won't get note won't

00:38:19,750 --> 00:38:23,310
necessarily get the performance boost

00:38:25,680 --> 00:38:43,560
yeah thanks for coming now good yeah I

00:38:37,240 --> 00:38:43,560
need to make it available anyway yeah

00:38:49,110 --> 00:38:53,380
your customers rely on your website or

00:38:51,850 --> 00:38:55,750
application if it's slower

00:38:53,380 --> 00:38:58,690
non-responsive it infuriates your users

00:38:55,750 --> 00:39:00,520
and costs you money keeping your

00:38:58,690 --> 00:39:04,040
business critical systems humming along

00:39:00,520 --> 00:39:06,350
requires insight into what they're doing

00:39:04,040 --> 00:39:08,300
your system metrics tells stories

00:39:06,350 --> 00:39:10,310
stories that can reveal performance

00:39:08,300 --> 00:39:12,650
bottlenecks resource limitations and

00:39:10,310 --> 00:39:14,210
other problems but how do you keep an

00:39:12,650 --> 00:39:16,850
eye on all of your systems performance

00:39:14,210 --> 00:39:19,880
metrics in real-time and record this

00:39:16,850 --> 00:39:21,860
data for later analysis enter longview

00:39:19,880 --> 00:39:23,660
the new way to see what's really going

00:39:21,860 --> 00:39:25,820
on under the hood the long view

00:39:23,660 --> 00:39:27,890
dashboard lets you visualize the status

00:39:25,820 --> 00:39:30,350
of all your systems providing you with a

00:39:27,890 --> 00:39:33,710
bird's-eye view of your entire fleet you

00:39:30,350 --> 00:39:36,290
can sort by cpu memory swap processes

00:39:33,710 --> 00:39:38,060
load and network usage click a specific

00:39:36,290 --> 00:39:40,460
system to access its individual

00:39:38,060 --> 00:39:42,970
dashboard then click and drag to zoom in

00:39:40,460 --> 00:39:45,380
on chokepoints and get more detail

00:39:42,970 --> 00:39:47,030
comprehensive network data including

00:39:45,380 --> 00:39:49,340
inbound and outbound traffic is

00:39:47,030 --> 00:39:50,930
available on the network tab and disk

00:39:49,340 --> 00:39:52,850
rights and free space on the disk

00:39:50,930 --> 00:39:55,670
stabbed while the process Explorer

00:39:52,850 --> 00:39:58,220
displays usage statistics for individual

00:39:55,670 --> 00:40:00,380
processes the system info tab shows

00:39:58,220 --> 00:40:02,630
listening services active connections

00:40:00,380 --> 00:40:04,760
and available updates adding long view

00:40:02,630 --> 00:40:06,470
to a system is easy just click the

00:40:04,760 --> 00:40:08,600
button copy the one line installation

00:40:06,470 --> 00:40:11,060
command then run the command on your

00:40:08,600 --> 00:40:12,740
linux system to complete the process the

00:40:11,060 --> 00:40:14,930
agent will begin collecting data and

00:40:12,740 --> 00:40:16,770
sending it to longview then the graph

00:40:14,930 --> 00:40:19,350
start rolling

00:40:16,770 --> 00:40:21,720
use longview to gain visibility into

00:40:19,350 --> 00:40:25,460
your servers so when your website or app

00:40:21,720 --> 00:40:25,460
heats up it stays up

00:41:06,510 --> 00:41:11,430
most enterprises today realize that

00:41:09,240 --> 00:41:13,170
usernames and passwords alone aren't

00:41:11,430 --> 00:41:15,540
enough to keep their network safe from

00:41:13,170 --> 00:41:17,610
unauthorized intrusions that's my

00:41:15,540 --> 00:41:19,650
two-factor authentication has gotten so

00:41:17,610 --> 00:41:21,780
popular lately that adds that extra

00:41:19,650 --> 00:41:24,450
layer of protection enterprise networks

00:41:21,780 --> 00:41:26,220
need to stay safe but what you may not

00:41:24,450 --> 00:41:28,410
know is that some two-factor

00:41:26,220 --> 00:41:30,630
authentication solutions they're better

00:41:28,410 --> 00:41:33,690
than others like two-factor strong

00:41:30,630 --> 00:41:35,940
authentication with wicked wicked goes

00:41:33,690 --> 00:41:37,920
beyond other authentication systems by

00:41:35,940 --> 00:41:40,980
being less expensive easier to implement

00:41:37,920 --> 00:41:43,440
and easier to use giving software-based

00:41:40,980 --> 00:41:46,290
token clients built to run on all major

00:41:43,440 --> 00:41:48,890
devices and OSS including iOS and

00:41:46,290 --> 00:41:51,240
Android these tokens utilize a

00:41:48,890 --> 00:41:53,640
public/private key combination that's

00:41:51,240 --> 00:41:55,590
generated on device so there aren't any

00:41:53,640 --> 00:41:58,110
shared secrets flying around or

00:41:55,590 --> 00:42:00,990
attackers to hijack or which require any

00:41:58,110 --> 00:42:02,850
special handling instead all keys are

00:42:00,990 --> 00:42:05,310
kept secure and private between the

00:42:02,850 --> 00:42:07,500
requesting token and your server which

00:42:05,310 --> 00:42:09,110
you control aim house making it the most

00:42:07,500 --> 00:42:11,790
secure way possible to perform

00:42:09,110 --> 00:42:14,610
authentication encryption and with an

00:42:11,790 --> 00:42:17,370
extensive flexible API and support for

00:42:14,610 --> 00:42:19,350
protocols like LDAP and radius wicked

00:42:17,370 --> 00:42:21,530
works with any enterprise network

00:42:19,350 --> 00:42:23,230
architecture to protect the IT

00:42:21,530 --> 00:42:25,840
Systems vital to your enterprise

00:42:23,230 --> 00:42:27,830
download your wicked free trial today

00:42:25,840 --> 00:42:29,630
regardless of whether you're considering

00:42:27,830 --> 00:42:31,430
two-factor authentication for the first

00:42:29,630 --> 00:42:34,670
time or just ready to ditch your

00:42:31,430 --> 00:42:37,070
existing expensive key file system we

00:42:34,670 --> 00:42:41,980
can help with easy to implement easy to

00:42:37,070 --> 00:42:41,980
use strong authentication from wicked

00:42:46,660 --> 00:42:53,080
how's that sigh every way this is the

00:42:49,780 --> 00:42:55,240
way to better utilize all your resources

00:42:53,080 --> 00:42:58,690
and it makes managing all your resources

00:42:55,240 --> 00:43:02,520
pretty easy all of the innovation is

00:42:58,690 --> 00:43:06,040
happening in open source the

00:43:02,520 --> 00:43:07,870
collaborative nature and of the you know

00:43:06,040 --> 00:43:09,970
of the community and the speed at which

00:43:07,870 --> 00:43:11,950
these are these you know these these

00:43:09,970 --> 00:43:14,230
deficiencies these bugs are getting

00:43:11,950 --> 00:43:16,870
discovered and then fixed is it I think

00:43:14,230 --> 00:43:19,540
that really shows the power of the you

00:43:16,870 --> 00:43:21,190
know of the open source community it is

00:43:19,540 --> 00:43:25,420
global and it's definitely because of

00:43:21,190 --> 00:43:31,750
the users community people are extremely

00:43:25,420 --> 00:43:33,640
friendly and always ready to help if you

00:43:31,750 --> 00:43:35,920
go on tire see any day you'll see these

00:43:33,640 --> 00:43:37,650
guys helping each other out and they're

00:43:35,920 --> 00:43:40,330
all doing it like in a selfless manner

00:43:37,650 --> 00:43:43,350
the product is transparent for everyone

00:43:40,330 --> 00:43:45,970
everyone can look at the code base

00:43:43,350 --> 00:43:48,010
everyone can see how clouds dark is

00:43:45,970 --> 00:43:53,890
being built nothing nothing is

00:43:48,010 --> 00:43:56,530
proprietary everything is open in many

00:43:53,890 --> 00:44:00,730
ways it's absolutely vital to the the

00:43:56,530 --> 00:44:04,480
unborn health CloudStack the most

00:44:00,730 --> 00:44:08,410
exciting event in recent memory for me

00:44:04,480 --> 00:44:11,050
was our first developer boot camp

00:44:08,410 --> 00:44:13,690
and our call gave people I gave me two

00:44:11,050 --> 00:44:17,650
weeks notice to come attend I was

00:44:13,690 --> 00:44:21,880
expecting 25 or 30 people so we ended up

00:44:17,650 --> 00:44:24,670
with 87 people and had to go get board

00:44:21,880 --> 00:44:27,190
chairs into the room twice everything

00:44:24,670 --> 00:44:30,520
within cloud computing is commodity and

00:44:27,190 --> 00:44:33,520
is open source and so I don't think that

00:44:30,520 --> 00:44:35,260
you will you'll see anywhere where open

00:44:33,520 --> 00:44:38,290
source is not pervasive in cloud

00:44:35,260 --> 00:44:41,020
computing and so i think it's i think

00:44:38,290 --> 00:44:42,370
it's an assumption i think when you talk

00:44:41,020 --> 00:44:46,080
about cloud computing you're really

00:44:42,370 --> 00:44:46,080
talking about a source cloud computing

00:44:46,380 --> 00:44:52,420
cloud sac is a robust solution for large

00:44:49,660 --> 00:44:54,820
deployments you'll have dozens of data

00:44:52,420 --> 00:44:58,840
centers and thousands of servers in each

00:44:54,820 --> 00:45:02,110
data centers these hardware is going to

00:44:58,840 --> 00:45:05,320
fail and CloudStack is designed to

00:45:02,110 --> 00:45:07,780
handle number one that mass scale number

00:45:05,320 --> 00:45:10,510
two it's designed to handle the failure

00:45:07,780 --> 00:45:13,360
that inevitably happens in large

00:45:10,510 --> 00:45:17,590
deployments started working on cod tech

00:45:13,360 --> 00:45:20,830
over four years ago and it was the

00:45:17,590 --> 00:45:22,630
original set of people working on it had

00:45:20,830 --> 00:45:26,740
a background of delivering software

00:45:22,630 --> 00:45:30,970
telcos and service providers lots of QA

00:45:26,740 --> 00:45:34,570
lots of users actually using it high

00:45:30,970 --> 00:45:37,660
availability is the key feature multiple

00:45:34,570 --> 00:45:39,670
hypervisors support different network

00:45:37,660 --> 00:45:42,370
models you can pick up whatever suits

00:45:39,670 --> 00:45:44,620
you better while step management server

00:45:42,370 --> 00:45:48,310
can be deployed in different physical

00:45:44,620 --> 00:45:49,960
machines it definitely has a huge

00:45:48,310 --> 00:45:54,940
footprint it's being deployed everywhere

00:45:49,960 --> 00:45:57,550
there's a major movie studio that they

00:45:54,940 --> 00:46:00,850
were using cloudstack they were using it

00:45:57,550 --> 00:46:02,830
to transcode video and I thought that

00:46:00,850 --> 00:46:04,450
was terribly fascinating what I found

00:46:02,830 --> 00:46:07,720
more fascinating is what they did during

00:46:04,450 --> 00:46:10,510
lunch where they would spin up you know

00:46:07,720 --> 00:46:11,890
50 or 60 game servers then as soon as

00:46:10,510 --> 00:46:12,420
lunch was over they would destroy all

00:46:11,890 --> 00:46:14,600
the esta

00:46:12,420 --> 00:46:18,000
sis and go back to doing real work

00:46:14,600 --> 00:46:19,500
CloudStack is vast it touches so many

00:46:18,000 --> 00:46:21,390
different aspects and there's no one

00:46:19,500 --> 00:46:24,350
person that's kind of like a master of

00:46:21,390 --> 00:46:27,840
all those realms I think CloudStack as a

00:46:24,350 --> 00:46:30,060
project is going to be one of the

00:46:27,840 --> 00:46:34,110
leaders simply because it's some of the

00:46:30,060 --> 00:46:39,570
most feature folan and and robust

00:46:34,110 --> 00:46:42,470
platforms out they were Adam senior

00:46:39,570 --> 00:46:42,470
living through the clouds dag

00:46:55,250 --> 00:46:57,310
you

00:47:00,640 --> 00:47:05,720
when we created asterisk over a decade

00:47:03,380 --> 00:47:07,670
ago we could not have imagined that

00:47:05,720 --> 00:47:09,890
asterisk would not only become the most

00:47:07,670 --> 00:47:12,020
widely adopted open source communication

00:47:09,890 --> 00:47:14,060
software on the planet but that it would

00:47:12,020 --> 00:47:16,580
impact the entire industry in the way

00:47:14,060 --> 00:47:18,560
that it has today asterisk has found its

00:47:16,580 --> 00:47:21,200
way in the more than 170 countries and

00:47:18,560 --> 00:47:23,150
virtually every fortune 1000 company the

00:47:21,200 --> 00:47:25,220
success of asterisk has enabled a

00:47:23,150 --> 00:47:26,630
transition of power from the hands of

00:47:25,220 --> 00:47:28,910
the traditional proprietary phone

00:47:26,630 --> 00:47:31,310
vendors into the hands of the users and

00:47:28,910 --> 00:47:33,260
administrators of phone systems using

00:47:31,310 --> 00:47:34,490
this power our customers have created

00:47:33,260 --> 00:47:36,410
all sorts of business changing

00:47:34,490 --> 00:47:38,270
applications from small office phone

00:47:36,410 --> 00:47:40,790
systems to mission-critical call centers

00:47:38,270 --> 00:47:42,380
the international carrier networks in

00:47:40,790 --> 00:47:44,180
fact there's even an entire country

00:47:42,380 --> 00:47:46,790
those communications infrastructure runs

00:47:44,180 --> 00:47:48,710
on esters the gym has always been about

00:47:46,790 --> 00:47:50,420
creating technology that expands

00:47:48,710 --> 00:47:52,580
communications capabilities in ways that

00:47:50,420 --> 00:47:53,780
we could never have imagined and that's

00:47:52,580 --> 00:47:56,540
part of what's game-changing about

00:47:53,780 --> 00:47:58,880
Digium today we're doing it again this

00:47:56,540 --> 00:48:00,950
time by introducing a new family of HD

00:47:58,880 --> 00:48:03,080
IP phones that extends control of the

00:48:00,950 --> 00:48:04,850
user all the way to the desktop the

00:48:03,080 --> 00:48:06,560
launch of these new products represents

00:48:04,850 --> 00:48:08,630
the next phase indigenous history of

00:48:06,560 --> 00:48:11,060
innovation these are the first and only

00:48:08,630 --> 00:48:12,770
IP phones designed to fully leverage the

00:48:11,060 --> 00:48:14,300
power of esters when we first discussed

00:48:12,770 --> 00:48:16,340
our expectations for building a family

00:48:14,300 --> 00:48:18,500
of phones for use with asterisk our

00:48:16,340 --> 00:48:20,240
requirements were pretty simple we asked

00:48:18,500 --> 00:48:21,860
the team to build the phones such that

00:48:20,240 --> 00:48:24,080
they were easy to install integrate

00:48:21,860 --> 00:48:25,910
provision and use I think you'll soon

00:48:24,080 --> 00:48:28,490
agree our engineers have delivered on

00:48:25,910 --> 00:48:30,110
that goal user feedback is validating

00:48:28,490 --> 00:48:32,240
that when it comes to operation with

00:48:30,110 --> 00:48:34,640
astro space systems including our own

00:48:32,240 --> 00:48:37,220
Switchvox based product these are the

00:48:34,640 --> 00:48:38,540
easiest to use best integrated most

00:48:37,220 --> 00:48:41,120
interoperable products on the market

00:48:38,540 --> 00:48:43,090
today the digi Malia phones will

00:48:41,120 --> 00:48:45,170
initially include three IP des hommes

00:48:43,090 --> 00:48:47,120
uniquely designed to complement any

00:48:45,170 --> 00:48:48,980
asterisk or switch box based solution

00:48:47,120 --> 00:48:51,650
these phones are different for a number

00:48:48,980 --> 00:48:54,290
of reasons first there is clue sively

00:48:51,650 --> 00:48:55,730
designed for use with esters secondly

00:48:54,290 --> 00:48:57,340
we've made it really easy to

00:48:55,730 --> 00:48:59,720
autodiscover and provision the phones

00:48:57,340 --> 00:49:01,820
next we've made it easy for the phones

00:48:59,720 --> 00:49:03,850
to access information inside of asterisk

00:49:01,820 --> 00:49:06,370
allowing tight coupling between the

00:49:03,850 --> 00:49:08,260
application and the phone additionally

00:49:06,370 --> 00:49:10,540
we've created an applications engine

00:49:08,260 --> 00:49:12,760
that allows users and developers to

00:49:10,540 --> 00:49:15,490
create and run their own apps on the

00:49:12,760 --> 00:49:17,590
phone and finally we've done all of this

00:49:15,490 --> 00:49:19,300
at a very compelling price point at

00:49:17,590 --> 00:49:21,520
Digium we're always thinking of ways to

00:49:19,300 --> 00:49:23,860
give our customers the best value in

00:49:21,520 --> 00:49:25,180
business phone systems and also give

00:49:23,860 --> 00:49:27,250
them the power to create their own

00:49:25,180 --> 00:49:29,050
solutions or any communications

00:49:27,250 --> 00:49:30,730
challenge will continue to push the

00:49:29,050 --> 00:49:32,440
boundaries not only to make Astra's

00:49:30,730 --> 00:49:34,390
cooler bastard more technologically

00:49:32,440 --> 00:49:35,950
feature-rich but to make asterisk and

00:49:34,390 --> 00:49:38,140
what communications even easier and

00:49:35,950 --> 00:49:41,640
together we'll change the way the world

00:49:38,140 --> 00:49:41,640

YouTube URL: https://www.youtube.com/watch?v=m8mB36mLzOo


