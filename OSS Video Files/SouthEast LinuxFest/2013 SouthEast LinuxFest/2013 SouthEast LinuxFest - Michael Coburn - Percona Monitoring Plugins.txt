Title: 2013 SouthEast LinuxFest - Michael Coburn - Percona Monitoring Plugins
Publication date: 2014-07-29
Playlist: 2013 SouthEast LinuxFest
Description: 
	2013 SouthEast LinuxFest
Michael Coburn - Percona Monitoring Plugins for Nagios and Cacti
Captions: 
	00:00:00,000 --> 00:00:05,160
the following presentation was recorded

00:00:02,639 --> 00:00:08,280
at the 2013 southeast linux fest in

00:00:05,160 --> 00:00:10,860
charlotte north carolina it is licensed

00:00:08,280 --> 00:00:12,509
under a creative commons license for

00:00:10,860 --> 00:00:17,359
more information about the southeast

00:00:12,509 --> 00:00:19,949
linux fest visit WWF selinux phys.org

00:00:17,359 --> 00:00:21,810
the southeast linux fest would like to

00:00:19,949 --> 00:00:24,000
thank the following diamond sponsors in

00:00:21,810 --> 00:00:29,849
2013 for helping make these videos

00:00:24,000 --> 00:00:30,929
possible ok thank you well just to begin

00:00:29,849 --> 00:00:33,450
with I want to thank everybody for

00:00:30,929 --> 00:00:37,399
coming to this talk this is my first

00:00:33,450 --> 00:00:41,070
time to Charlotte and so far loving it

00:00:37,399 --> 00:00:42,899
i'm here with percona and i'm going to

00:00:41,070 --> 00:00:44,640
be presenting a slightly different talk

00:00:42,899 --> 00:00:46,379
than what's in the program originally

00:00:44,640 --> 00:00:48,780
what we had scattered was a talk by ryan

00:00:46,379 --> 00:00:51,239
lowe based on using dot files and I

00:00:48,780 --> 00:00:53,100
apologize Ryan's not able to make it so

00:00:51,239 --> 00:00:55,530
I had to pull in at the last minute one

00:00:53,100 --> 00:00:57,000
of my own slide decks that that I've

00:00:55,530 --> 00:00:58,469
that I've delivered before so I hope it

00:00:57,000 --> 00:01:00,030
works for you today we're going to be

00:00:58,469 --> 00:01:01,890
talking about implementing percona

00:01:00,030 --> 00:01:04,379
monitoring plug-ins for nat nagios and

00:01:01,890 --> 00:01:07,439
cacti it does say four corner monitoring

00:01:04,379 --> 00:01:10,260
plugins these are open source GPL based

00:01:07,439 --> 00:01:12,750
templates so it's more of a talk about

00:01:10,260 --> 00:01:15,030
how nagios and cacti are used with

00:01:12,750 --> 00:01:17,369
regards to OS level and database

00:01:15,030 --> 00:01:18,869
monitoring so if that's your kind of

00:01:17,369 --> 00:01:20,070
flavor you want to talk about early here

00:01:18,869 --> 00:01:21,840
some stuff about that and have some

00:01:20,070 --> 00:01:28,350
questions for me by all means stick

00:01:21,840 --> 00:01:30,540
around okay so who am i I'm a Canadian I

00:01:28,350 --> 00:01:32,850
moved down to the US this is my second

00:01:30,540 --> 00:01:35,070
time working in the US but I moved down

00:01:32,850 --> 00:01:37,740
in 2011 to live in North Carolina i live

00:01:35,070 --> 00:01:39,240
in the raleigh area and in the spring of

00:01:37,740 --> 00:01:41,790
last year I joined percona as a

00:01:39,240 --> 00:01:43,979
consultant most of our work is done

00:01:41,790 --> 00:01:45,600
remotely which I love I get to stay home

00:01:43,979 --> 00:01:47,909
in all the beautiful weather that we get

00:01:45,600 --> 00:01:50,250
here in the state so very comfortable

00:01:47,909 --> 00:01:52,979
got my family my kids the school is not

00:01:50,250 --> 00:01:55,110
too far away so we love it you love it

00:01:52,979 --> 00:01:57,210
prior to that I worked for a number of

00:01:55,110 --> 00:01:59,340
different stock photography companies as

00:01:57,210 --> 00:02:00,570
a system administrator and so my

00:01:59,340 --> 00:02:02,670
background is more on the system side

00:02:00,570 --> 00:02:04,740
the development so I'm quite intimately

00:02:02,670 --> 00:02:06,930
familiar with monitoring and alerting

00:02:04,740 --> 00:02:08,489
and what it's like to get those pages at

00:02:06,930 --> 00:02:11,760
82 in the morning and what do you do

00:02:08,489 --> 00:02:13,630
about it so since then I was working for

00:02:11,760 --> 00:02:16,270
an email service provider where I was

00:02:13,630 --> 00:02:18,400
database administrator then it became

00:02:16,270 --> 00:02:19,750
lead to the team so I've got skills I

00:02:18,400 --> 00:02:23,320
think on both sides of the Linux and

00:02:19,750 --> 00:02:24,670
also the the MySQL side and I also want

00:02:23,320 --> 00:02:25,990
to give credit for the original slide

00:02:24,670 --> 00:02:27,790
deck that's being delivered here these

00:02:25,990 --> 00:02:28,960
were developed by Baron Schwartz who had

00:02:27,790 --> 00:02:31,600
work with / corner for a number of years

00:02:28,960 --> 00:02:35,590
and so Thank You baron if you're

00:02:31,600 --> 00:02:37,870
watching okay so what we're going to go

00:02:35,590 --> 00:02:39,310
through is a bunch of different angles

00:02:37,870 --> 00:02:41,320
of looking at monitoring and alerting

00:02:39,310 --> 00:02:42,820
we're going to try and define it we want

00:02:41,320 --> 00:02:45,270
to talk about what it's like to look at

00:02:42,820 --> 00:02:47,200
a historical view of a problem state

00:02:45,270 --> 00:02:50,050
we're going to look at what it means to

00:02:47,200 --> 00:02:51,790
do fault detection and that's more what

00:02:50,050 --> 00:02:54,340
is happening right here and now what is

00:02:51,790 --> 00:02:55,540
broken at this moment I don't care so

00:02:54,340 --> 00:02:56,620
much about what it looked like a week

00:02:55,540 --> 00:02:58,750
ago that's a different tools

00:02:56,620 --> 00:03:00,700
responsibility but nagios is going to

00:02:58,750 --> 00:03:02,290
tell us what what's going on what's out

00:03:00,700 --> 00:03:03,940
of range what threshold has been crossed

00:03:02,290 --> 00:03:05,440
we'll talk a little bit about what to

00:03:03,940 --> 00:03:07,630
monitor this is going to come a little

00:03:05,440 --> 00:03:10,090
bit more of a deeper focus into mysql so

00:03:07,630 --> 00:03:12,250
i guess is probably a good time to ask

00:03:10,090 --> 00:03:14,020
where is the background with with people

00:03:12,250 --> 00:03:17,280
in the audience are there many mysql

00:03:14,020 --> 00:03:26,110
users here right now it just show hands

00:03:17,280 --> 00:03:28,720
okay we got one okay okay do you use

00:03:26,110 --> 00:03:38,950
other types of data stores no SQL Azure

00:03:28,720 --> 00:03:41,830
postgres or some other are DBMS ok fair

00:03:38,950 --> 00:03:42,820
enough Brenna okay we'll talk about a

00:03:41,830 --> 00:03:44,140
little bit of the tools that are

00:03:42,820 --> 00:03:46,060
actually involved in here the cacti and

00:03:44,140 --> 00:03:47,410
the nagios components and we'll talk

00:03:46,060 --> 00:03:49,420
about what the / corner monitoring

00:03:47,410 --> 00:03:50,980
plugins deliver beyond the vanilla

00:03:49,420 --> 00:03:55,840
installations of those two pieces of

00:03:50,980 --> 00:03:58,570
software of cacti and nagios okay so two

00:03:55,840 --> 00:04:00,700
big things going on now in in the sphere

00:03:58,570 --> 00:04:02,230
of software that's out there today there

00:04:00,700 --> 00:04:04,930
are tools that do both of these and they

00:04:02,230 --> 00:04:06,820
do them well generally though that comes

00:04:04,930 --> 00:04:08,680
with a price tag and in the spirit of

00:04:06,820 --> 00:04:09,970
the self conference I'm focusing on open

00:04:08,680 --> 00:04:11,830
source based ones that you can download

00:04:09,970 --> 00:04:12,970
and use for free you can get support

00:04:11,830 --> 00:04:14,440
contracts on these kinds of things

00:04:12,970 --> 00:04:16,359
percona would love to help you with that

00:04:14,440 --> 00:04:19,060
but by and large you can install these

00:04:16,359 --> 00:04:21,549
things cacti nagios specifically run

00:04:19,060 --> 00:04:23,650
them all day long big shop small shops

00:04:21,549 --> 00:04:26,440
they do it and they don't have to sign

00:04:23,650 --> 00:04:28,510
up for expensive contracts so

00:04:26,440 --> 00:04:29,800
I won't go into it into too much detail

00:04:28,510 --> 00:04:33,130
talking about those other products out

00:04:29,800 --> 00:04:35,470
there where where are these to come

00:04:33,130 --> 00:04:37,330
apart cacti is designed to look at the

00:04:35,470 --> 00:04:39,400
long-term historical view of what's been

00:04:37,330 --> 00:04:41,320
happening with my system and cacti is

00:04:39,400 --> 00:04:42,940
able to monitor things such as your

00:04:41,320 --> 00:04:45,220
database server what's happening in

00:04:42,940 --> 00:04:46,990
MySQL it can look at your OS level and

00:04:45,220 --> 00:04:49,300
say these are the the throughput

00:04:46,990 --> 00:04:52,660
statistics of my disk here's the latency

00:04:49,300 --> 00:04:54,970
of my disk here's the CPU percentage of

00:04:52,660 --> 00:04:57,100
you cpu use these kinds of metrics are

00:04:54,970 --> 00:04:58,810
all plotted in cacti and it uses a

00:04:57,100 --> 00:05:01,150
back-end called rrd which stands to

00:04:58,810 --> 00:05:03,730
round-robin database and it plots these

00:05:01,150 --> 00:05:05,680
things over a time period the file size

00:05:03,730 --> 00:05:08,440
never changes but what it does is it

00:05:05,680 --> 00:05:10,540
discards data as the time gets older so

00:05:08,440 --> 00:05:12,430
where you might have good resolution in

00:05:10,540 --> 00:05:14,020
the short term over the last week or so

00:05:12,430 --> 00:05:16,180
you can view things that a five minute

00:05:14,020 --> 00:05:18,010
interval may be over if you look back a

00:05:16,180 --> 00:05:19,600
year ago though you only see resolution

00:05:18,010 --> 00:05:21,760
down to every 30 minutes or maybe every

00:05:19,600 --> 00:05:23,800
two hours so the data gets discarded the

00:05:21,760 --> 00:05:25,060
older it is with the the concept is that

00:05:23,800 --> 00:05:27,700
you probably don't care about what it

00:05:25,060 --> 00:05:29,260
looked like on Monday of January of 2012

00:05:27,700 --> 00:05:32,680
but you do care about what it look like

00:05:29,260 --> 00:05:34,780
last Monday okay and then on the other

00:05:32,680 --> 00:05:36,580
side cacti is great at looking at things

00:05:34,780 --> 00:05:38,110
in a historical view and it just plot

00:05:36,580 --> 00:05:40,000
stuff you don't generally get an email

00:05:38,110 --> 00:05:42,400
alert or anything from it the other side

00:05:40,000 --> 00:05:43,900
is the nagios that tells me all right I

00:05:42,400 --> 00:05:46,270
there's a fault condition somewhere in

00:05:43,900 --> 00:05:48,730
my application stack is it my web server

00:05:46,270 --> 00:05:50,530
has too many connections on it is it my

00:05:48,730 --> 00:05:52,630
database has too many connections on it

00:05:50,530 --> 00:05:54,160
now I can't log in the website is down

00:05:52,630 --> 00:05:56,320
all these kinds of things are the

00:05:54,160 --> 00:05:58,480
responsibility of nagios to identify

00:05:56,320 --> 00:06:00,610
those and then send out some sort of a

00:05:58,480 --> 00:06:02,290
metric to the to the system

00:06:00,610 --> 00:06:04,630
administrator to the NOC whoever's

00:06:02,290 --> 00:06:05,650
responsible for fixing the problem that

00:06:04,630 --> 00:06:08,800
comes up with your website or your

00:06:05,650 --> 00:06:11,230
application nor us is great in that it's

00:06:08,800 --> 00:06:12,730
a it's it's able to send out emails SMS

00:06:11,230 --> 00:06:14,140
is a whole bunch of different ways that

00:06:12,730 --> 00:06:18,940
you can get paged and woken up in the

00:06:14,140 --> 00:06:21,460
middle of the night okay now when we're

00:06:18,940 --> 00:06:23,380
doing metrics we really want to look for

00:06:21,460 --> 00:06:25,480
what's what's important happening in

00:06:23,380 --> 00:06:26,680
your data and i won't i won't keep

00:06:25,480 --> 00:06:29,500
saying Davis what's happening in your

00:06:26,680 --> 00:06:31,540
system cacti can be extended beyond the

00:06:29,500 --> 00:06:32,470
templates I'm going to show for example

00:06:31,540 --> 00:06:34,150
when I was working at some of these

00:06:32,470 --> 00:06:36,490
stock photography sites we wanted to

00:06:34,150 --> 00:06:38,080
keep track of how many image processing

00:06:36,490 --> 00:06:40,000
javale's were waiting to be processed

00:06:38,080 --> 00:06:41,350
and what state they were in

00:06:40,000 --> 00:06:42,970
well it was fairly trivial for me to

00:06:41,350 --> 00:06:44,590
query a database find out what the

00:06:42,970 --> 00:06:47,890
pending jobs were and then plot them in

00:06:44,590 --> 00:06:49,540
cacti now a view like that helps not

00:06:47,890 --> 00:06:51,160
only me but it helps the business decide

00:06:49,540 --> 00:06:52,990
and helps me justify to the business

00:06:51,160 --> 00:06:54,790
when we need to add new hardware I can

00:06:52,990 --> 00:06:56,740
show these graphs that show on the

00:06:54,790 --> 00:06:58,540
weekend we get these influxes of images

00:06:56,740 --> 00:06:59,500
and it doesn't ever degrade we're

00:06:58,540 --> 00:07:00,790
getting to a point where we're not

00:06:59,500 --> 00:07:02,350
getting through all of our jobs in the

00:07:00,790 --> 00:07:04,180
weekend anymore it's that kind of a

00:07:02,350 --> 00:07:06,520
conversation coupled with it with the

00:07:04,180 --> 00:07:08,980
graphing tool that plots values that

00:07:06,520 --> 00:07:10,570
says to your boss all right the time is

00:07:08,980 --> 00:07:12,040
here we needed we need to invest in our

00:07:10,570 --> 00:07:14,260
hardware we need to go by spit up some

00:07:12,040 --> 00:07:17,230
more AWS instances or something to that

00:07:14,260 --> 00:07:18,610
effect okay so the point is though with

00:07:17,230 --> 00:07:20,440
capturing metrics you want to look for

00:07:18,610 --> 00:07:21,940
what's useful to your business it's fine

00:07:20,440 --> 00:07:24,580
and dandy to go and capture stuff

00:07:21,940 --> 00:07:26,080
happening in but if you're not

00:07:24,580 --> 00:07:27,820
actually using in your deployment

00:07:26,080 --> 00:07:28,930
or in production it's probably not a

00:07:27,820 --> 00:07:31,360
graph you're going to look at all that

00:07:28,930 --> 00:07:32,650
often so just keep in mind that you want

00:07:31,360 --> 00:07:35,800
to be capturing useful data right now

00:07:32,650 --> 00:07:37,750
okay cacti is great for generating

00:07:35,800 --> 00:07:40,210
graphs that you can zoom in on it will

00:07:37,750 --> 00:07:42,040
generate default views at the daily the

00:07:40,210 --> 00:07:44,290
weekly in the monthly views but you can

00:07:42,040 --> 00:07:46,030
zoom in and view some finer granularity

00:07:44,290 --> 00:07:47,979
of it so it's great for when you want to

00:07:46,030 --> 00:07:50,260
do some more in-depth analysis of what

00:07:47,979 --> 00:07:51,669
actually happened at eight ten yesterday

00:07:50,260 --> 00:07:55,060
morning you can get that kind of detail

00:07:51,669 --> 00:07:57,340
out of it okay but on the flip side

00:07:55,060 --> 00:07:58,840
where I was saying you know don't grab

00:07:57,340 --> 00:08:00,370
everything well sometimes you want to

00:07:58,840 --> 00:08:02,560
begin by graphing everything just take

00:08:00,370 --> 00:08:04,210
this with a grain of salt because unless

00:08:02,560 --> 00:08:06,940
you know what you're exactly looking for

00:08:04,210 --> 00:08:08,919
when your website is down then you often

00:08:06,940 --> 00:08:10,360
are just kind of scratching around going

00:08:08,919 --> 00:08:12,160
well what was the problem last time and

00:08:10,360 --> 00:08:14,050
maybe it's a different problem today so

00:08:12,160 --> 00:08:15,700
sometimes when you go to your grass and

00:08:14,050 --> 00:08:16,870
you've been plotting these three or four

00:08:15,700 --> 00:08:18,460
different data points you didn't even

00:08:16,870 --> 00:08:20,380
know why or what they even mean but you

00:08:18,460 --> 00:08:23,050
see them skewing differently that's

00:08:20,380 --> 00:08:24,400
often a oh my gosh here it is here's

00:08:23,050 --> 00:08:26,260
where I got to go with this here's a way

00:08:24,400 --> 00:08:27,640
I can focus my attention and figure out

00:08:26,260 --> 00:08:30,970
what's actually going wrong in my system

00:08:27,640 --> 00:08:32,200
okay so the the corollary is sometimes

00:08:30,970 --> 00:08:35,589
you do want to graph more than you

00:08:32,200 --> 00:08:37,030
actually think you need to know okay can

00:08:35,589 --> 00:08:38,530
you monitor everything yep probably if

00:08:37,030 --> 00:08:40,210
your installation small enough but

00:08:38,530 --> 00:08:41,919
depending on the size of your shop if

00:08:40,210 --> 00:08:43,210
it's only a couple servers sure a single

00:08:41,919 --> 00:08:45,220
instance of cacti could plot that all

00:08:43,210 --> 00:08:46,420
day long if you're starting to get into

00:08:45,220 --> 00:08:48,310
environment where you might have five

00:08:46,420 --> 00:08:50,050
hundred or a thousand different servers

00:08:48,310 --> 00:08:51,670
and systems that's going to be a lot of

00:08:50,050 --> 00:08:52,910
load on that box so perhaps you're not

00:08:51,670 --> 00:08:54,590
going to be able to monitor

00:08:52,910 --> 00:08:55,640
all those different facets but hopefully

00:08:54,590 --> 00:08:57,320
by that point that you're monitoring

00:08:55,640 --> 00:08:58,760
that many boxes you've got a system

00:08:57,320 --> 00:09:00,050
administration and development team that

00:08:58,760 --> 00:09:04,670
can support you and help you focus your

00:09:00,050 --> 00:09:06,080
attention as well okay okay so fault

00:09:04,670 --> 00:09:07,310
detection this is the flip side we

00:09:06,080 --> 00:09:08,930
talked about this a little bit it's this

00:09:07,310 --> 00:09:10,970
is what nagios responsibility is it

00:09:08,930 --> 00:09:13,960
wants to tell you what's happening right

00:09:10,970 --> 00:09:15,740
here and now it has very little if any

00:09:13,960 --> 00:09:18,290
information about what happened last

00:09:15,740 --> 00:09:19,730
week it will keep track of did I alert

00:09:18,290 --> 00:09:21,680
you last week at eight o'clock in the

00:09:19,730 --> 00:09:23,600
morning it will have that data it might

00:09:21,680 --> 00:09:26,180
even store the threshold value that it

00:09:23,600 --> 00:09:27,740
actually crossed or what the so for

00:09:26,180 --> 00:09:29,630
example let's take something easy you

00:09:27,740 --> 00:09:31,400
want to keep track of the CPU time on

00:09:29,630 --> 00:09:32,900
your web server and you know when it

00:09:31,400 --> 00:09:34,610
gets above fifty percent the website

00:09:32,900 --> 00:09:36,080
performance just stinks and that you

00:09:34,610 --> 00:09:39,380
need to get a better you need to fire up

00:09:36,080 --> 00:09:40,850
another AWS instance okay so if that

00:09:39,380 --> 00:09:42,290
alert goes off in the middle of the

00:09:40,850 --> 00:09:44,120
night and it says it's at sixty percent

00:09:42,290 --> 00:09:46,670
you get out of bed and you do your job

00:09:44,120 --> 00:09:48,350
now that's what nagios is all it's going

00:09:46,670 --> 00:09:49,850
to do is ping you and say hey look I

00:09:48,350 --> 00:09:52,610
just did a health check it was over

00:09:49,850 --> 00:09:54,830
fifty percent get up do something and as

00:09:52,610 --> 00:09:56,120
you fix the condition as you add that

00:09:54,830 --> 00:09:57,860
other web server and then the first

00:09:56,120 --> 00:10:00,440
server CPU comes down below fifty

00:09:57,860 --> 00:10:01,700
percent the the next check that nagios

00:10:00,440 --> 00:10:03,170
will do will say oh look it's only at

00:10:01,700 --> 00:10:05,840
forty percent it will clear the alert

00:10:03,170 --> 00:10:07,730
now in terms of logging you have that

00:10:05,840 --> 00:10:09,380
email that just got sent to you probably

00:10:07,730 --> 00:10:11,360
that SMS that got sent to your phone

00:10:09,380 --> 00:10:14,120
that woke you up and you've got a view

00:10:11,360 --> 00:10:15,800
in august through the GUI to say last

00:10:14,120 --> 00:10:17,270
week at eight in the morning i got an

00:10:15,800 --> 00:10:18,980
alert from it but that's really the

00:10:17,270 --> 00:10:21,260
extent of it so don't count on nagios to

00:10:18,980 --> 00:10:25,040
do any type of long-term profiling of

00:10:21,260 --> 00:10:26,120
how your system has been healthy it will

00:10:25,040 --> 00:10:26,990
show you when you got pinged about

00:10:26,120 --> 00:10:30,410
something but doesn't really give you

00:10:26,990 --> 00:10:31,550
any context around it okay some of the

00:10:30,410 --> 00:10:33,530
things you know I'll jump through these

00:10:31,550 --> 00:10:35,480
real real quick here what happens is

00:10:33,530 --> 00:10:37,250
that people in this is probably human

00:10:35,480 --> 00:10:38,360
nature they they set up these alerts and

00:10:37,250 --> 00:10:40,130
they think oh I'm going to do something

00:10:38,360 --> 00:10:42,380
when I get this this message sent to me

00:10:40,130 --> 00:10:44,600
but they soon find out that it's not an

00:10:42,380 --> 00:10:47,210
actionable message if you can't just

00:10:44,600 --> 00:10:49,100
make the CPU usage go away if your only

00:10:47,210 --> 00:10:51,140
option is I have to live with my one

00:10:49,100 --> 00:10:53,180
server and just let the web traffic kind

00:10:51,140 --> 00:10:54,710
of dissipate so CPU comes back down you

00:10:53,180 --> 00:10:56,210
probably don't want to get woken up for

00:10:54,710 --> 00:10:57,590
that you only want to get woken up if

00:10:56,210 --> 00:10:59,240
you have an actionable item going on

00:10:57,590 --> 00:11:00,290
because if you get woken up at two in

00:10:59,240 --> 00:11:02,210
the morning and you stare at your screen

00:11:00,290 --> 00:11:04,640
and say whoops what can I do you should

00:11:02,210 --> 00:11:06,140
you just stayed in bed okay so what ends

00:11:04,640 --> 00:11:06,769
up happening you probably have a lot of

00:11:06,140 --> 00:11:08,540
spam you

00:11:06,769 --> 00:11:09,679
alerts that come in and you can't do

00:11:08,540 --> 00:11:11,689
anything on or you just say oh that's

00:11:09,679 --> 00:11:14,779
insignificant you end up creating email

00:11:11,689 --> 00:11:16,040
filters you send to Devon all it it's

00:11:14,779 --> 00:11:18,259
just human nature you don't want to get

00:11:16,040 --> 00:11:20,300
all these interruptions the danger to

00:11:18,259 --> 00:11:22,519
that is you start perhaps missing

00:11:20,300 --> 00:11:24,470
important conditions out there you might

00:11:22,519 --> 00:11:25,910
miss some some relationship of oh this

00:11:24,470 --> 00:11:27,170
alert comes in when this alert happens

00:11:25,910 --> 00:11:29,209
and that might have helped you focus and

00:11:27,170 --> 00:11:30,920
fix the problem sooner so that's the

00:11:29,209 --> 00:11:34,670
danger of having too many spammy alerts

00:11:30,920 --> 00:11:36,379
coming in okay so when we talked about

00:11:34,670 --> 00:11:38,449
cacti and monitoring in terms of

00:11:36,379 --> 00:11:40,040
graphing it's it's okay to graph a lot

00:11:38,449 --> 00:11:42,230
more than you actually need but in terms

00:11:40,040 --> 00:11:43,910
of alerting through nagios be careful

00:11:42,230 --> 00:11:45,709
with that because the more false alerts

00:11:43,910 --> 00:11:47,239
you get the more false positives you

00:11:45,709 --> 00:11:48,259
receive the less likely it is you're

00:11:47,239 --> 00:11:50,509
actually going to look at your phone

00:11:48,259 --> 00:11:54,679
next time it pings at you so careful

00:11:50,509 --> 00:11:55,879
with that ok so wat white why am I even

00:11:54,679 --> 00:11:57,799
talking about / corner monitoring

00:11:55,879 --> 00:11:59,089
plugins I'll introduce that really

00:11:57,799 --> 00:12:01,399
quickly and then I'll get to what the

00:11:59,089 --> 00:12:03,739
point of the rest of the slide is the

00:12:01,399 --> 00:12:05,540
monitoring plugins these are templates

00:12:03,739 --> 00:12:07,249
that we've got they're all either

00:12:05,540 --> 00:12:10,160
written in bash in terms of the nagios

00:12:07,249 --> 00:12:11,809
scripts and for cacti these are

00:12:10,160 --> 00:12:14,179
templates that we've designed for cacti

00:12:11,809 --> 00:12:16,309
they're xml-based you just have to

00:12:14,179 --> 00:12:17,839
import these things and make them work

00:12:16,309 --> 00:12:20,360
for your environment there's no cost to

00:12:17,839 --> 00:12:21,920
acquiring these things you could do them

00:12:20,360 --> 00:12:24,079
yourself but that leads right to the

00:12:21,920 --> 00:12:26,899
first point it's tricky to get these

00:12:24,079 --> 00:12:29,029
things right okay if you're working with

00:12:26,899 --> 00:12:30,679
templates working with cacti you're

00:12:29,029 --> 00:12:32,360
going to usually design one offs fairly

00:12:30,679 --> 00:12:34,519
well but the advantage of the proponent

00:12:32,360 --> 00:12:35,779
monitoring ones is that we take all the

00:12:34,519 --> 00:12:38,149
different data points that you could add

00:12:35,779 --> 00:12:40,309
a show global status and correlate that

00:12:38,149 --> 00:12:41,749
into useful graph so we take you know

00:12:40,309 --> 00:12:42,949
depending on which version of MySQL

00:12:41,749 --> 00:12:44,959
you're running some of them have over

00:12:42,949 --> 00:12:46,279
300 different status counters when you

00:12:44,959 --> 00:12:48,290
boil that down do you want to look at

00:12:46,279 --> 00:12:49,490
300 different graphs or per cone is done

00:12:48,290 --> 00:12:51,829
is we've taken that and condense that

00:12:49,490 --> 00:12:53,540
into 42 graphs so some graphs might only

00:12:51,829 --> 00:12:55,429
have one data point being plotted like

00:12:53,540 --> 00:12:56,749
replication lag but other ones might

00:12:55,429 --> 00:12:58,639
have about six or eight different data

00:12:56,749 --> 00:13:00,259
points like where where are the the

00:12:58,639 --> 00:13:01,579
stalls and entity be happening are they

00:13:00,259 --> 00:13:03,679
happening on pending reads pending

00:13:01,579 --> 00:13:04,879
rights we tie all that together we put

00:13:03,679 --> 00:13:06,230
some pretty colors on it and make it

00:13:04,879 --> 00:13:09,619
useful for it so you can get up and

00:13:06,230 --> 00:13:11,869
working right away okay in terms of the

00:13:09,619 --> 00:13:13,489
the the so that that part is fairly easy

00:13:11,869 --> 00:13:15,259
you could go and implement that yourself

00:13:13,489 --> 00:13:16,939
that the cacti soft wouldn't be as hard

00:13:15,259 --> 00:13:18,679
where I think it really starts to shine

00:13:16,939 --> 00:13:20,570
is for the nagios plugins where we've

00:13:18,679 --> 00:13:22,040
done the the shell scripting for

00:13:20,570 --> 00:13:24,410
you and we've got the error condition

00:13:22,040 --> 00:13:26,240
handling and we fix this stuff because

00:13:24,410 --> 00:13:28,820
we use it with our own customers so

00:13:26,240 --> 00:13:30,350
where I i implement it for a customer of

00:13:28,820 --> 00:13:32,060
mine and I stay working with them for a

00:13:30,350 --> 00:13:33,650
number of months if I start to see bugs

00:13:32,060 --> 00:13:35,600
with it I just need to report it to my

00:13:33,650 --> 00:13:37,820
internal dev team they fix it and for

00:13:35,600 --> 00:13:39,620
free as users of this stuff you get it

00:13:37,820 --> 00:13:40,670
in the next release we just bake it in

00:13:39,620 --> 00:13:43,460
and we make it available to everybody

00:13:40,670 --> 00:13:45,740
else so basically my time has been

00:13:43,460 --> 00:13:48,800
consumed through this customers paying

00:13:45,740 --> 00:13:50,600
for my time to fix the software so you

00:13:48,800 --> 00:13:51,830
would make it would make it's a pretty

00:13:50,600 --> 00:13:52,880
easy sell I think for you to take

00:13:51,830 --> 00:13:54,050
advantage of this kind of stuff out

00:13:52,880 --> 00:13:55,280
there and where I guess we're not the

00:13:54,050 --> 00:13:58,370
only company doing this kind of a play

00:13:55,280 --> 00:13:59,720
but nagios and cacti the templates that

00:13:58,370 --> 00:14:01,880
we've got they're great there's other

00:13:59,720 --> 00:14:03,230
ones out there though to ours are a

00:14:01,880 --> 00:14:09,950
little more battle tested in my opinion

00:14:03,230 --> 00:14:11,270
so take that for what it's worth ok so

00:14:09,950 --> 00:14:12,830
the way nagios works just a quick

00:14:11,270 --> 00:14:15,080
background on it it works based on

00:14:12,830 --> 00:14:17,150
plugins there is a core nagios Damon

00:14:15,080 --> 00:14:19,520
that runs and its job is to spawn off

00:14:17,150 --> 00:14:20,990
health checks and it can it can parallel

00:14:19,520 --> 00:14:22,250
eyes these to a certain degree depending

00:14:20,990 --> 00:14:24,050
on how you have your environment setup

00:14:22,250 --> 00:14:25,850
but generally with a simple shop you'll

00:14:24,050 --> 00:14:28,520
have one nagios installation so one

00:14:25,850 --> 00:14:30,020
nagios d running and what it does is it

00:14:28,520 --> 00:14:32,180
can call out to various types of shell

00:14:30,020 --> 00:14:34,250
scripts it could be in bash it could be

00:14:32,180 --> 00:14:35,750
in Perl whatever language you like has

00:14:34,250 --> 00:14:37,760
all the library supported on that server

00:14:35,750 --> 00:14:39,380
that's running from and also it's got

00:14:37,760 --> 00:14:42,140
some that are written in C for some

00:14:39,380 --> 00:14:44,390
super fast ones that need to run so the

00:14:42,140 --> 00:14:46,430
point of it is though is it acts just on

00:14:44,390 --> 00:14:47,570
the exit code of that script so where

00:14:46,430 --> 00:14:49,610
you might have one that does some

00:14:47,570 --> 00:14:51,650
complicated measuring of logging into a

00:14:49,610 --> 00:14:53,960
database and checking accounts in a

00:14:51,650 --> 00:14:55,640
table based on some where clause all you

00:14:53,960 --> 00:14:57,200
all nog use cares about is what is the

00:14:55,640 --> 00:14:59,060
exit code of that if it comes back as a

00:14:57,200 --> 00:15:01,070
zero it's going to say add health check

00:14:59,060 --> 00:15:02,660
was healthy that's great if it comes

00:15:01,070 --> 00:15:05,090
back with a one two or three those

00:15:02,660 --> 00:15:06,560
represent warning critical and unknown

00:15:05,090 --> 00:15:08,420
states and that will actually generate

00:15:06,560 --> 00:15:10,250
some sort of an action within Nami OSD

00:15:08,420 --> 00:15:13,010
okay so it all worked on the concept of

00:15:10,250 --> 00:15:14,240
standard out sorry of the exit code and

00:15:13,010 --> 00:15:16,220
then it lets you print a little message

00:15:14,240 --> 00:15:17,860
as well to standard out which would be

00:15:16,220 --> 00:15:21,380
included when you use the nagios GUI

00:15:17,860 --> 00:15:22,700
okay a lot of nagios plugins written for

00:15:21,380 --> 00:15:24,980
nagios can be used elsewhere because

00:15:22,700 --> 00:15:26,480
they are simply shell scripts so things

00:15:24,980 --> 00:15:27,500
like zabbix there's an author these

00:15:26,480 --> 00:15:32,510
other ones they can all leverage these

00:15:27,500 --> 00:15:33,980
types of scripts as well okay when we're

00:15:32,510 --> 00:15:35,510
doing monitoring and

00:15:33,980 --> 00:15:37,850
alerting there's certain things that

00:15:35,510 --> 00:15:39,500
nagios that i particularly like working

00:15:37,850 --> 00:15:43,310
with and this is more of the my school

00:15:39,500 --> 00:15:44,300
focus right here if you're if you're not

00:15:43,310 --> 00:15:46,280
familiar with it when you work with

00:15:44,300 --> 00:15:48,800
mysql replication is probably one of its

00:15:46,280 --> 00:15:51,560
biggest charms or benefits i'd say so

00:15:48,800 --> 00:15:53,450
when you have a slave of a master you

00:15:51,560 --> 00:15:55,220
can offload a lot of your reads onto the

00:15:53,450 --> 00:15:57,020
slave and still send your rights to the

00:15:55,220 --> 00:15:59,090
master well one of the drawbacks to

00:15:57,020 --> 00:16:00,800
mysql is that there's no consistency

00:15:59,090 --> 00:16:02,510
guarantee that says that slave will

00:16:00,800 --> 00:16:04,880
always have the same records as the

00:16:02,510 --> 00:16:06,860
master there is the potential for drift

00:16:04,880 --> 00:16:08,300
so that slave at some point through

00:16:06,860 --> 00:16:10,220
multiple different types of conditions

00:16:08,300 --> 00:16:11,660
could end up having different row counts

00:16:10,220 --> 00:16:14,450
in a certain table or actually different

00:16:11,660 --> 00:16:16,280
data for the same row counts so that

00:16:14,450 --> 00:16:18,170
could be problematic for your app if you

00:16:16,280 --> 00:16:19,880
write something in the master you know

00:16:18,170 --> 00:16:21,170
ID equals one and a whole bunch of

00:16:19,880 --> 00:16:22,340
values to go with it you expect to see

00:16:21,170 --> 00:16:23,990
that when you go to read it back off the

00:16:22,340 --> 00:16:26,180
slave it's different that's going to

00:16:23,990 --> 00:16:29,630
render the UI broken or you know your

00:16:26,180 --> 00:16:31,370
app will be basically unusable so why

00:16:29,630 --> 00:16:33,020
does that matter well there's a there's

00:16:31,370 --> 00:16:35,480
a suite of tools out there from Percona

00:16:33,020 --> 00:16:37,070
called Percona toolkit and there's two

00:16:35,480 --> 00:16:38,780
components to that well there's about 30

00:16:37,070 --> 00:16:40,280
tools in there but the one we referenced

00:16:38,780 --> 00:16:42,410
right off the top there's a tool called

00:16:40,280 --> 00:16:45,470
PT table checksum and what it does is it

00:16:42,410 --> 00:16:47,630
uses replication to group the chunks of

00:16:45,470 --> 00:16:49,580
rows on the master and slave and does a

00:16:47,630 --> 00:16:51,200
comparison so it does a checksum across

00:16:49,580 --> 00:16:53,600
a group of rows and at the end of it all

00:16:51,200 --> 00:16:54,740
it will show you which rose roach chunks

00:16:53,600 --> 00:16:56,420
are different from your master to your

00:16:54,740 --> 00:16:58,640
slave so that gives you a heads up to

00:16:56,420 --> 00:17:00,080
say aha somewhere I don't know how it

00:16:58,640 --> 00:17:02,570
happened but my slave has different data

00:17:00,080 --> 00:17:03,890
great this tool can run you usually run

00:17:02,570 --> 00:17:06,200
it from cron and then you'll set up

00:17:03,890 --> 00:17:07,790
nagios to actually log in and check this

00:17:06,200 --> 00:17:09,530
table just for the for the status

00:17:07,790 --> 00:17:11,090
results to say have you seen any

00:17:09,530 --> 00:17:13,460
problems and if you see any problems

00:17:11,090 --> 00:17:16,040
please send me an alert ok that's where

00:17:13,460 --> 00:17:17,690
nagios I love it the the typical way

00:17:16,040 --> 00:17:19,430
that checksums gets deployed with a

00:17:17,690 --> 00:17:21,260
customer is they just have it set up for

00:17:19,430 --> 00:17:23,090
a prawn with an email alert coming to

00:17:21,260 --> 00:17:24,500
them well people get these emails and

00:17:23,090 --> 00:17:26,240
they check it pretty good for a week or

00:17:24,500 --> 00:17:27,290
two weeks but they stop looking in it

00:17:26,240 --> 00:17:28,760
well if they don't look in it and

00:17:27,290 --> 00:17:30,140
there's data drift happening they're not

00:17:28,760 --> 00:17:31,730
seeing the fact that there's an email

00:17:30,140 --> 00:17:33,560
says you got a problem with your slave

00:17:31,730 --> 00:17:34,910
and only until they get a report from

00:17:33,560 --> 00:17:36,290
their business unit or somebody saying

00:17:34,910 --> 00:17:37,880
there's problems with the website do

00:17:36,290 --> 00:17:40,490
they maybe go back and do it well that's

00:17:37,880 --> 00:17:42,520
why I love this let nagios log in and

00:17:40,490 --> 00:17:44,960
tell you when there's a checksum problem

00:17:42,520 --> 00:17:46,490
the nargis checks can also come in and

00:17:44,960 --> 00:17:47,720
tell you about replication is the

00:17:46,490 --> 00:17:49,490
replication thread stop

00:17:47,720 --> 00:17:51,409
generally that's your that's going to be

00:17:49,490 --> 00:17:52,970
your first alert your your other alerts

00:17:51,409 --> 00:17:54,980
going to be your business you calling

00:17:52,970 --> 00:17:56,750
you in about eight hours saying you know

00:17:54,980 --> 00:17:58,190
I added credits to this person's

00:17:56,750 --> 00:17:59,360
accounts and they're still telling me

00:17:58,190 --> 00:18:01,010
that there don't have any credits in

00:17:59,360 --> 00:18:02,870
there what's going on and then you check

00:18:01,010 --> 00:18:04,190
your slave and you go replications been

00:18:02,870 --> 00:18:06,740
down for eight hours so you've been

00:18:04,190 --> 00:18:07,940
serving up stale data so better to let

00:18:06,740 --> 00:18:10,100
nagios tell you that you had a problem

00:18:07,940 --> 00:18:11,570
before your business unit tells you it

00:18:10,100 --> 00:18:12,830
can say it and there's other checks in

00:18:11,570 --> 00:18:14,360
there some that check you know how many

00:18:12,830 --> 00:18:16,850
threads are running at any current time

00:18:14,360 --> 00:18:18,740
what state they're in it can check the

00:18:16,850 --> 00:18:21,440
process table with in mysql things like

00:18:18,740 --> 00:18:23,690
that what's happening with inner DB do

00:18:21,440 --> 00:18:25,130
we have any extra long queries that are

00:18:23,690 --> 00:18:26,659
running do we have a lot of tables that

00:18:25,130 --> 00:18:28,820
are being held for locs these kinds of

00:18:26,659 --> 00:18:30,350
things can all be alerted and finally

00:18:28,820 --> 00:18:32,030
leave you with you can have status

00:18:30,350 --> 00:18:33,860
counters of any type be reported on

00:18:32,030 --> 00:18:35,179
generally I don't usually recommend you

00:18:33,860 --> 00:18:36,799
just pick them but if you have a

00:18:35,179 --> 00:18:39,500
specific condition where your website

00:18:36,799 --> 00:18:41,539
starts to crash when you get I don't

00:18:39,500 --> 00:18:44,030
know max Qatar you're reaching max

00:18:41,539 --> 00:18:45,230
connections and you simply just start to

00:18:44,030 --> 00:18:46,429
hit some sort of threshold level in the

00:18:45,230 --> 00:18:47,809
database that's something you want to

00:18:46,429 --> 00:18:50,090
act on that's unique to your environment

00:18:47,809 --> 00:18:52,760
so set up a specific alert using our

00:18:50,090 --> 00:18:58,880
toolkit to to wake yourself up and do

00:18:52,760 --> 00:19:00,530
something about it ok so what exactly do

00:18:58,880 --> 00:19:02,240
you want to monitor well the nagas

00:19:00,530 --> 00:19:03,500
toolkit has some some basic stuff it's

00:19:02,240 --> 00:19:05,450
going to check for threads running and

00:19:03,500 --> 00:19:07,730
alert when it gets above 20 is a warning

00:19:05,450 --> 00:19:09,409
and above 40 as critical that may or may

00:19:07,730 --> 00:19:11,600
not be important to you you might have a

00:19:09,409 --> 00:19:12,919
60 core machine or something and think

00:19:11,600 --> 00:19:14,179
well I don't care I could probably do a

00:19:12,919 --> 00:19:15,679
hundred threads running and that's no

00:19:14,179 --> 00:19:16,940
problem for my server well then you're

00:19:15,679 --> 00:19:18,980
going to want to fix that but that's the

00:19:16,940 --> 00:19:21,740
default setting for that alert is 20 and

00:19:18,980 --> 00:19:23,090
40 for threads running another one

00:19:21,740 --> 00:19:24,110
though that I really like is that you

00:19:23,090 --> 00:19:25,610
want to be alerted when threads

00:19:24,110 --> 00:19:27,860
connecting approaching max connections

00:19:25,610 --> 00:19:30,679
that is an error condition that probably

00:19:27,860 --> 00:19:33,830
something has gone awry in your database

00:19:30,679 --> 00:19:35,419
and you want to know that hey I got 2000

00:19:33,830 --> 00:19:37,370
as my max connections and I usually run

00:19:35,419 --> 00:19:39,350
around 100 but somehow we're up around

00:19:37,370 --> 00:19:41,600
1500 the web servers are going crazy

00:19:39,350 --> 00:19:42,890
some bad co got pushed whatever that's

00:19:41,600 --> 00:19:44,870
an error condition I would want to know

00:19:42,890 --> 00:19:46,730
about and I could do something about ok

00:19:44,870 --> 00:19:47,960
so when threads are threads connected to

00:19:46,730 --> 00:19:49,450
the server approaching how many they're

00:19:47,960 --> 00:19:51,789
actually allowed to actually store

00:19:49,450 --> 00:19:54,289
service you want to know about that

00:19:51,789 --> 00:19:56,659
another one is this is a simple one did

00:19:54,289 --> 00:19:58,280
might is the uptime fairly low and that

00:19:56,659 --> 00:19:59,910
should not usually be the case unless

00:19:58,280 --> 00:20:02,550
you had a plan restart

00:19:59,910 --> 00:20:05,130
now my skills got this rapper mysqld

00:20:02,550 --> 00:20:06,810
safe and it's group grated monitoring

00:20:05,130 --> 00:20:08,730
whether my school DS up and also great

00:20:06,810 --> 00:20:10,140
at starting it up again well I worked

00:20:08,730 --> 00:20:11,940
with a number of customers that weren't

00:20:10,140 --> 00:20:13,080
aware that their database was crashing

00:20:11,940 --> 00:20:14,790
and restarting on them and it might

00:20:13,080 --> 00:20:16,410
happen multiple times a day they'd get

00:20:14,790 --> 00:20:17,820
these weird stalls in their app but they

00:20:16,410 --> 00:20:19,500
didn't really know what was going on but

00:20:17,820 --> 00:20:20,850
they went on with it until finally they

00:20:19,500 --> 00:20:22,500
said okay we got to get we got to get

00:20:20,850 --> 00:20:23,880
this thing resolved well we get in there

00:20:22,500 --> 00:20:25,440
and we see that this thing is restarting

00:20:23,880 --> 00:20:28,470
over and over if I had an alert on their

00:20:25,440 --> 00:20:29,670
up time getting close to zero again that

00:20:28,470 --> 00:20:31,170
would have tipped us off right off the

00:20:29,670 --> 00:20:32,400
bat so that's the kind of thing that I

00:20:31,170 --> 00:20:33,990
leave behind when I leave a customer

00:20:32,400 --> 00:20:38,600
site you have nagios great I'll get

00:20:33,990 --> 00:20:42,480
these things installed for you okay okay

00:20:38,600 --> 00:20:44,010
this is this is a little more I guess

00:20:42,480 --> 00:20:46,080
it's there are lots of different

00:20:44,010 --> 00:20:47,910
opinions on this one i generally am NOT

00:20:46,080 --> 00:20:49,590
not a big favor of ratios in the

00:20:47,910 --> 00:20:52,740
database they don't often tell you a

00:20:49,590 --> 00:20:53,970
great deal of information if you start

00:20:52,740 --> 00:20:56,760
looking at things like what is my cache

00:20:53,970 --> 00:20:58,170
miss ratio well I don't know it depends

00:20:56,760 --> 00:20:59,880
on the size of the query it depends them

00:20:58,170 --> 00:21:01,860
you know how many other queries I

00:20:59,880 --> 00:21:03,780
actually you know did service from the

00:21:01,860 --> 00:21:05,130
cash and and how much of my memory I'm

00:21:03,780 --> 00:21:06,540
putting aside for this could I be doing

00:21:05,130 --> 00:21:08,280
my caching at a different layer outside

00:21:06,540 --> 00:21:10,710
the database may be in memcache a Redis

00:21:08,280 --> 00:21:11,940
or something else I'm not really a big

00:21:10,710 --> 00:21:14,520
fan I don't get a lot out of what the

00:21:11,940 --> 00:21:16,830
ratios are but that's up to you guys if

00:21:14,520 --> 00:21:18,420
you want to use it another one is is you

00:21:16,830 --> 00:21:21,090
know how quickly is a particular

00:21:18,420 --> 00:21:23,220
variable changing per second well you

00:21:21,090 --> 00:21:25,080
know if you if you have a perfectly flat

00:21:23,220 --> 00:21:27,300
workload where it's utterly predictable

00:21:25,080 --> 00:21:30,720
that is maybe a use case where you could

00:21:27,300 --> 00:21:32,760
say ok when you know inserts calm select

00:21:30,720 --> 00:21:35,190
or comment cert goes over a thousand and

00:21:32,760 --> 00:21:36,570
I'm usually at 500 ok that's cool but if

00:21:35,190 --> 00:21:38,310
you're running a typical application

00:21:36,570 --> 00:21:39,900
you've got high points and low points of

00:21:38,310 --> 00:21:41,130
the day you've got users who are logging

00:21:39,900 --> 00:21:42,450
in in the morning and who are maybe

00:21:41,130 --> 00:21:44,280
doing stuff late at night or maybe

00:21:42,450 --> 00:21:47,190
you're late at night kind of app for a

00:21:44,280 --> 00:21:49,380
dating site or something well what's

00:21:47,190 --> 00:21:50,730
normal then you know you probably don't

00:21:49,380 --> 00:21:52,860
just have a magic number that when

00:21:50,730 --> 00:21:54,960
things go above it send me an alert ok

00:21:52,860 --> 00:21:56,610
and that's really what threshold-based

00:21:54,960 --> 00:21:59,850
and variable per second kind of alerts

00:21:56,610 --> 00:22:01,710
are some metric is being my variable is

00:21:59,850 --> 00:22:03,420
saying I'm doing 200 of some operation

00:22:01,710 --> 00:22:04,950
right now is that good or bad and that's

00:22:03,420 --> 00:22:06,480
leaving it up to you as a threshold to

00:22:04,950 --> 00:22:08,430
say I don't really know if that's good

00:22:06,480 --> 00:22:09,990
or bad sometimes it's good in the

00:22:08,430 --> 00:22:12,210
daytime that's great at nighttime it

00:22:09,990 --> 00:22:14,000
might not be good so I'm leaving it kind

00:22:12,210 --> 00:22:15,380
of a vague way here but

00:22:14,000 --> 00:22:16,730
just be cautious when you see some

00:22:15,380 --> 00:22:18,590
recommendations on the net about whether

00:22:16,730 --> 00:22:20,930
you should be using ratios and

00:22:18,590 --> 00:22:26,540
threshold-based alerts for nagios your

00:22:20,930 --> 00:22:28,430
mileage may vary on it okay so finding a

00:22:26,540 --> 00:22:30,740
single right threshold can be pretty

00:22:28,430 --> 00:22:32,600
darn tricky to for a lot of the reasons

00:22:30,740 --> 00:22:33,920
we already talked about the this server

00:22:32,600 --> 00:22:35,630
is going to have different performance

00:22:33,920 --> 00:22:38,780
characteristics throughout the week

00:22:35,630 --> 00:22:40,100
weekday through versus a weekend morning

00:22:38,780 --> 00:22:41,360
versus night okay those are

00:22:40,100 --> 00:22:44,870
considerations you probably need to bake

00:22:41,360 --> 00:22:46,520
into your application the other thing

00:22:44,870 --> 00:22:48,890
that freaks me out the most about it is

00:22:46,520 --> 00:22:50,840
that you want these alerts to be

00:22:48,890 --> 00:22:52,190
actionable you want to have a wake me up

00:22:50,840 --> 00:22:53,420
out of bed yes because i have a problem

00:22:52,190 --> 00:22:54,890
but i also need to be able to do

00:22:53,420 --> 00:22:56,150
something about it frankly if the

00:22:54,890 --> 00:22:57,920
website is down and there's nothing i

00:22:56,150 --> 00:22:59,420
can do about it until the web traffic

00:22:57,920 --> 00:23:01,400
clears until people just go away and

00:22:59,420 --> 00:23:02,960
then they come back later you know what

00:23:01,400 --> 00:23:03,980
it sucks but don't wake up because what

00:23:02,960 --> 00:23:05,120
do you do and you're just a stare at

00:23:03,980 --> 00:23:06,200
your screen and send emails to your boss

00:23:05,120 --> 00:23:08,270
saying you know I looked at it there's

00:23:06,200 --> 00:23:09,410
nothing I can do so that's probably an

00:23:08,270 --> 00:23:11,180
extreme case but the point is is that

00:23:09,410 --> 00:23:12,530
you want actionable results coming out

00:23:11,180 --> 00:23:13,700
of this so these threshold base these

00:23:12,530 --> 00:23:18,010
variable per second they don't often

00:23:13,700 --> 00:23:20,210
give you a lot of meat to work on okay

00:23:18,010 --> 00:23:22,610
this I think is the last slide on on

00:23:20,210 --> 00:23:25,340
August we have one particular one here

00:23:22,610 --> 00:23:27,080
that lets you change based on the kind

00:23:25,340 --> 00:23:28,610
of career you want to run so for example

00:23:27,080 --> 00:23:30,950
when I was working at the stock places

00:23:28,610 --> 00:23:32,780
we wanted to say if our worker queue in

00:23:30,950 --> 00:23:34,490
the database had more than 200 items

00:23:32,780 --> 00:23:36,140
that's a problem that means probably our

00:23:34,490 --> 00:23:37,790
worker jobs broke for some reason so

00:23:36,140 --> 00:23:39,290
that means get up somebody look in and

00:23:37,790 --> 00:23:42,050
figure what's wrong with your man okay

00:23:39,290 --> 00:23:43,280
well I generate an alert at 200 items I

00:23:42,050 --> 00:23:45,680
just count from the table and if it's

00:23:43,280 --> 00:23:47,060
over 200 get out of bed this is the kind

00:23:45,680 --> 00:23:48,500
of tool that we'd use PMP check my

00:23:47,060 --> 00:23:50,660
school status I'll let you formulate a

00:23:48,500 --> 00:23:52,190
specific query that you can run in the

00:23:50,660 --> 00:23:54,440
database and then return your exit code

00:23:52,190 --> 00:23:57,080
is appropriate to generate an action in

00:23:54,440 --> 00:23:58,430
nagios so there's that's the tool if you

00:23:57,080 --> 00:23:59,930
have specific things for your app in the

00:23:58,430 --> 00:24:03,020
database you want to query that's the

00:23:59,930 --> 00:24:04,010
tool to use okay and this is what it

00:24:03,020 --> 00:24:06,290
looks like for those of you who haven't

00:24:04,010 --> 00:24:08,090
used nagios before I wouldn't say the

00:24:06,290 --> 00:24:10,220
GUI is like all web two point oh but I

00:24:08,090 --> 00:24:12,350
it works well enough i think for what

00:24:10,220 --> 00:24:14,090
it's got to do this is a dump from one

00:24:12,350 --> 00:24:15,380
of my customer screens i blacked out the

00:24:14,090 --> 00:24:17,960
name of the company down there at the

00:24:15,380 --> 00:24:21,710
bottom but they run a pretty high

00:24:17,960 --> 00:24:23,210
profile image Serena image I video

00:24:21,710 --> 00:24:24,410
sharing site so they've got some pretty

00:24:23,210 --> 00:24:25,490
high in equipment you notice that they

00:24:24,410 --> 00:24:27,260
got some virident cards

00:24:25,490 --> 00:24:29,720
they're so they got specific checks for

00:24:27,260 --> 00:24:31,460
that and while I was with them I

00:24:29,720 --> 00:24:32,870
implemented some of the PMP specific

00:24:31,460 --> 00:24:34,040
ones and i'm still working with them

00:24:32,870 --> 00:24:35,630
today so this is one of the things that

00:24:34,040 --> 00:24:37,010
I get on my phone to to tell me I've got

00:24:35,630 --> 00:24:38,960
a problem with this talk about this

00:24:37,010 --> 00:24:40,250
customer so in the case we were talking

00:24:38,960 --> 00:24:41,570
about the table check sums that's

00:24:40,250 --> 00:24:42,830
exactly what it's going to look like you

00:24:41,570 --> 00:24:44,870
see the yellow line there that shows

00:24:42,830 --> 00:24:47,570
that we had an error condition to rise

00:24:44,870 --> 00:24:49,370
we've got 97 different chunks based on

00:24:47,570 --> 00:24:51,230
three tables so that means there's

00:24:49,370 --> 00:24:52,400
different data on this slave and this is

00:24:51,230 --> 00:24:54,290
the check you'd run against all your

00:24:52,400 --> 00:24:56,360
slaves in your production environment to

00:24:54,290 --> 00:24:57,620
let you know when there's data drift now

00:24:56,360 --> 00:24:58,520
the interesting thing I've noticed is

00:24:57,620 --> 00:25:00,440
I've used this with more and more

00:24:58,520 --> 00:25:02,870
customers that data drift isn't always

00:25:00,440 --> 00:25:05,330
going to be happening across all of your

00:25:02,870 --> 00:25:06,620
slaves so I used to just assume that if

00:25:05,330 --> 00:25:08,090
I saw it on one I'd see the prom

00:25:06,620 --> 00:25:09,890
condition everywhere and then one fix

00:25:08,090 --> 00:25:12,140
would fix it all it's not it's not often

00:25:09,890 --> 00:25:13,370
been the case so when it what i mean by

00:25:12,140 --> 00:25:14,960
all this is that you want to run these

00:25:13,370 --> 00:25:16,429
checks on all of your servers all of

00:25:14,960 --> 00:25:18,200
your slaves don't just pick a slave and

00:25:16,429 --> 00:25:23,300
try to fix it there run it on all of the

00:25:18,200 --> 00:25:25,130
slaves okay so but in other case green

00:25:23,300 --> 00:25:26,900
is good we're not getting any emails at

00:25:25,130 --> 00:25:28,190
that point okay and then when I talked

00:25:26,900 --> 00:25:30,830
about just the different types of

00:25:28,190 --> 00:25:33,800
standard output information that you see

00:25:30,830 --> 00:25:35,720
that's where this disk ok free space tcp

00:25:33,800 --> 00:25:37,460
okay all these other components came out

00:25:35,720 --> 00:25:43,730
after the exit code is handled by by

00:25:37,460 --> 00:25:45,020
nagios okay so kak ty kak ty is

00:25:43,730 --> 00:25:47,420
beautiful for being able to go back in

00:25:45,020 --> 00:25:49,790
time see what was happening where I love

00:25:47,420 --> 00:25:52,100
to use this is where I'll be helping out

00:25:49,790 --> 00:25:53,179
a customer in and it's a 911 condition

00:25:52,100 --> 00:25:54,559
where they've called us and they're

00:25:53,179 --> 00:25:56,059
willing to pay premium dollars to solve

00:25:54,559 --> 00:25:57,500
a problem really quickly well that's

00:25:56,059 --> 00:25:58,670
high stress for them but also high

00:25:57,500 --> 00:26:00,320
stress for the consultants who are

00:25:58,670 --> 00:26:01,610
trying to help them you know under the

00:26:00,320 --> 00:26:03,200
gun I don't have to know anything about

00:26:01,610 --> 00:26:04,160
this customer yet other than their name

00:26:03,200 --> 00:26:05,929
I might have heard them in the news

00:26:04,160 --> 00:26:07,250
that's about it I get on their system

00:26:05,929 --> 00:26:08,600
and they tell me they've got cacti and

00:26:07,250 --> 00:26:09,980
they're using the monitoring plugins or

00:26:08,600 --> 00:26:12,050
any any plugins I don't really care at

00:26:09,980 --> 00:26:14,740
that point where it's beautiful is I can

00:26:12,050 --> 00:26:17,870
take a view of what it's doing today on

00:26:14,740 --> 00:26:19,850
on today versus seven days ago and I

00:26:17,870 --> 00:26:21,470
stand those graphs side by side and I go

00:26:19,850 --> 00:26:23,630
down and we're looking right off the bat

00:26:21,470 --> 00:26:25,910
what's different that is that that to me

00:26:23,630 --> 00:26:27,200
is the beauty of where cacti shines yeah

00:26:25,910 --> 00:26:28,970
you might look at cacti when things

00:26:27,200 --> 00:26:30,800
aren't busy but generally you're looking

00:26:28,970 --> 00:26:32,570
at them when things are a panic you may

00:26:30,800 --> 00:26:33,860
or may not know where to look so if you

00:26:32,570 --> 00:26:35,390
don't know where to look stack the grass

00:26:33,860 --> 00:26:36,780
side by side looking at a week ago a

00:26:35,390 --> 00:26:38,520
month ago whatever is it

00:26:36,780 --> 00:26:40,730
regular behavior for this time period in

00:26:38,520 --> 00:26:47,120
you know was this expected last week

00:26:40,730 --> 00:26:49,380
that's where it comes in okay okay so

00:26:47,120 --> 00:26:51,360
we're getting towards the end I've got

00:26:49,380 --> 00:26:52,350
some slides to that a number more of

00:26:51,360 --> 00:26:53,580
slides but we're going to go really

00:26:52,350 --> 00:26:56,580
quickly through them so this is the last

00:26:53,580 --> 00:26:58,440
or more of the talking slides cacti is

00:26:56,580 --> 00:27:02,520
is based on a number of different

00:26:58,440 --> 00:27:04,350
components cacti has a collection module

00:27:02,520 --> 00:27:06,510
it's called the polar and it's I think

00:27:04,350 --> 00:27:07,830
it's a fuller dot PHP and if you're in a

00:27:06,510 --> 00:27:09,360
larger environment you might be using a

00:27:07,830 --> 00:27:11,970
sea-based one which is called spline

00:27:09,360 --> 00:27:13,770
okay and the point of that is as you

00:27:11,970 --> 00:27:15,510
start to collect more servers you want

00:27:13,770 --> 00:27:17,640
to get the collections of all this data

00:27:15,510 --> 00:27:19,290
done within a fixed interval if you're

00:27:17,640 --> 00:27:21,360
doing it by default every five minutes

00:27:19,290 --> 00:27:22,890
this polar is going to go out and ask

00:27:21,360 --> 00:27:24,030
for more data from the servers and then

00:27:22,890 --> 00:27:25,950
do its thing it's going to plot them in

00:27:24,030 --> 00:27:27,300
the Girardi files well if you start

00:27:25,950 --> 00:27:28,650
running over that five minute interval

00:27:27,300 --> 00:27:30,480
you're going to have things stepping on

00:27:28,650 --> 00:27:32,100
each other and that's not good so at

00:27:30,480 --> 00:27:34,020
some point the developer said you know

00:27:32,100 --> 00:27:35,250
this PHP single-threaded operation isn't

00:27:34,020 --> 00:27:36,510
going to work for us and then they

00:27:35,250 --> 00:27:38,580
implement to some measure of threading

00:27:36,510 --> 00:27:39,780
in it but it only got them so far then

00:27:38,580 --> 00:27:42,960
they moved to spline where they could do

00:27:39,780 --> 00:27:44,160
a whole bunch of parallel jobs okay just

00:27:42,960 --> 00:27:46,380
some background on work cacti is doing

00:27:44,160 --> 00:27:48,240
so collections going on it's through a

00:27:46,380 --> 00:27:51,180
bunch of scripts in our case we wrote

00:27:48,240 --> 00:27:52,440
ours in PHP if we had to do it again I'd

00:27:51,180 --> 00:27:55,200
probably be in a different language but

00:27:52,440 --> 00:27:56,790
whatever it's what we have today and the

00:27:55,200 --> 00:27:58,230
job of the polar is to collect the data

00:27:56,790 --> 00:28:00,630
and then write it into these are our d

00:27:58,230 --> 00:28:02,340
files once the writ to the rd file the

00:28:00,630 --> 00:28:04,590
polar goes away it's done and then it

00:28:02,340 --> 00:28:07,260
wakes up again on cron and does this job

00:28:04,590 --> 00:28:08,970
where the cacti that we're most useful

00:28:07,260 --> 00:28:11,550
used to is the actual GUI interface

00:28:08,970 --> 00:28:14,340
which is delivered through PHP to your

00:28:11,550 --> 00:28:16,500
browser and it's what actually drops

00:28:14,340 --> 00:28:18,060
down into the the rd files and draws

00:28:16,500 --> 00:28:20,010
those on demand those graphs for you

00:28:18,060 --> 00:28:22,290
unless you zoom in on them and that kind

00:28:20,010 --> 00:28:24,240
of thing okay so when you're setting up

00:28:22,290 --> 00:28:26,580
this environment you need to import the

00:28:24,240 --> 00:28:29,070
script you need to get this the so

00:28:26,580 --> 00:28:31,650
import the the template scripts you then

00:28:29,070 --> 00:28:33,180
need to get the shell sorry the PHP

00:28:31,650 --> 00:28:34,320
script on to the file system so we can

00:28:33,180 --> 00:28:35,670
do its thing by connecting to the

00:28:34,320 --> 00:28:37,770
database servers and pulling in the data

00:28:35,670 --> 00:28:40,230
you need to then create graphs within

00:28:37,770 --> 00:28:42,120
cacti so tell it what the host names are

00:28:40,230 --> 00:28:44,040
and all the different username passwords

00:28:42,120 --> 00:28:45,780
it needs to know about and then you need

00:28:44,040 --> 00:28:47,550
to just generate a graph tree this kind

00:28:45,780 --> 00:28:49,080
of a trivial last step but you probably

00:28:47,550 --> 00:28:50,680
want to organize it to say you know this

00:28:49,080 --> 00:28:52,970
is my las vegas data center

00:28:50,680 --> 00:28:54,710
databases and here's my you know my new

00:28:52,970 --> 00:28:55,640
york city databases you might put them

00:28:54,710 --> 00:28:57,200
in a different view because you

00:28:55,640 --> 00:29:00,260
different system in teams monitoring

00:28:57,200 --> 00:29:02,630
them something like that okay but

00:29:00,260 --> 00:29:03,920
basically four steps it if i get on with

00:29:02,630 --> 00:29:05,480
a customer and everything is set up if

00:29:03,920 --> 00:29:06,560
they already got cacti running we could

00:29:05,480 --> 00:29:09,260
probably knock this thing out in an hour

00:29:06,560 --> 00:29:10,670
so so it's the kind of thing where the

00:29:09,260 --> 00:29:12,290
investment is fairly cheap for you to

00:29:10,670 --> 00:29:14,900
get going and it pays off in dividends

00:29:12,290 --> 00:29:16,880
huge dividends later on okay so where do

00:29:14,900 --> 00:29:18,530
you get it gaddafi percona calm we have

00:29:16,880 --> 00:29:19,880
a download section this is a little bit

00:29:18,530 --> 00:29:21,560
out of date I think we've got up to one

00:29:19,880 --> 00:29:23,870
point oh three is out there now we've

00:29:21,560 --> 00:29:27,620
also got some some RPM and Deb base

00:29:23,870 --> 00:29:29,330
packages for I think for the nagas

00:29:27,620 --> 00:29:31,040
plugins so we're starting to make it

00:29:29,330 --> 00:29:33,020
that much easier instead of just undoing

00:29:31,040 --> 00:29:34,100
tarbo are unpacking tar balls we can

00:29:33,020 --> 00:29:38,960
actually have them built within your

00:29:34,100 --> 00:29:40,820
package manager too okay once cacti set

00:29:38,960 --> 00:29:42,970
up this is a brand new installation so

00:29:40,820 --> 00:29:44,950
the password is admin and admin is the

00:29:42,970 --> 00:29:47,450
credentials that's what it looks like

00:29:44,950 --> 00:29:49,120
you want to just basically hop in there

00:29:47,450 --> 00:29:51,650
and then have at setting up the

00:29:49,120 --> 00:29:53,210
importing the templates on the left hand

00:29:51,650 --> 00:29:55,340
side is where all of the administration

00:29:53,210 --> 00:29:57,290
work under the console tab you choose

00:29:55,340 --> 00:29:59,120
import templates and it's going to pop

00:29:57,290 --> 00:30:01,730
you to another screen that allows you to

00:29:59,120 --> 00:30:02,990
hit a drop box and in here you're going

00:30:01,730 --> 00:30:04,670
to have locally these / corner

00:30:02,990 --> 00:30:05,750
monitoring plugins in one of the

00:30:04,670 --> 00:30:07,550
directors you'll see all the different

00:30:05,750 --> 00:30:09,020
scripts that you can actually import the

00:30:07,550 --> 00:30:10,940
different templates now the 1 i'm

00:30:09,020 --> 00:30:12,530
focusing on for the slide deck is for

00:30:10,940 --> 00:30:14,930
the mysql server but we've got them out

00:30:12,530 --> 00:30:16,040
there for Apache for the linux server

00:30:14,930 --> 00:30:17,930
which are a little bit better than the

00:30:16,040 --> 00:30:19,370
ones that are baked into the the cacti

00:30:17,930 --> 00:30:22,670
default install I think it's just got

00:30:19,370 --> 00:30:24,650
more monitoring points openvz I've never

00:30:22,670 --> 00:30:27,590
really used that one too much engine X

00:30:24,650 --> 00:30:28,880
and Redis so have at it they're great

00:30:27,590 --> 00:30:32,030
grass so there's a memcache one in there

00:30:28,880 --> 00:30:33,170
too and so that we monitor a lot

00:30:32,030 --> 00:30:34,400
more stuff with proponent monitoring

00:30:33,170 --> 00:30:38,630
plugins and just with mice then just

00:30:34,400 --> 00:30:40,180
mysql then you choose where you view

00:30:38,630 --> 00:30:43,070
selected it you tell it to import it

00:30:40,180 --> 00:30:44,390
spins for a few few seconds and then

00:30:43,070 --> 00:30:46,520
what you're looking for is everything to

00:30:44,390 --> 00:30:49,010
be green green successes and usually it

00:30:46,520 --> 00:30:50,870
should be once the templates are

00:30:49,010 --> 00:30:52,430
imported that's that's imported a number

00:30:50,870 --> 00:30:54,140
of different components it's got the

00:30:52,430 --> 00:30:56,390
graph the host in the data templates and

00:30:54,140 --> 00:30:58,700
that allows cacti to understand how do I

00:30:56,390 --> 00:31:00,950
go and collect data from somewhere where

00:30:58,700 --> 00:31:03,020
do I save it and then how do I relate it

00:31:00,950 --> 00:31:03,950
onto a graph what data points do I pull

00:31:03,020 --> 00:31:06,350
in and manga

00:31:03,950 --> 00:31:07,429
21 graph that's what the point of these

00:31:06,350 --> 00:31:10,700
three different templates are on the

00:31:07,429 --> 00:31:12,470
left so the next major step is a set up

00:31:10,700 --> 00:31:13,880
a device you want to go in and you want

00:31:12,470 --> 00:31:15,679
to by default you're going to have the

00:31:13,880 --> 00:31:17,450
local host monitored monitor you might

00:31:15,679 --> 00:31:19,010
be running cacti on the same boxes here

00:31:17,450 --> 00:31:20,510
as your web server your database that's

00:31:19,010 --> 00:31:22,909
fine but generally you've got a separate

00:31:20,510 --> 00:31:25,580
box set aside for monitoring so you'll

00:31:22,909 --> 00:31:27,620
want to go in and you'll define add at

00:31:25,580 --> 00:31:29,149
the top right in this case I've just

00:31:27,620 --> 00:31:30,080
done it all on one server so that's why

00:31:29,149 --> 00:31:31,370
it's going to go a little bit

00:31:30,080 --> 00:31:33,159
differently but generally you're going

00:31:31,370 --> 00:31:35,389
to go through the ad at the top right

00:31:33,159 --> 00:31:37,340
you're going to see new options

00:31:35,389 --> 00:31:38,659
available in the drop-down now out of

00:31:37,340 --> 00:31:40,429
the box cacti eyes got a number of

00:31:38,659 --> 00:31:41,750
different monitoring points the

00:31:40,429 --> 00:31:43,549
pre-owned of MySQL one is the one we

00:31:41,750 --> 00:31:45,470
just added if you were going to do

00:31:43,549 --> 00:31:48,200
or memcache you'd see an additional

00:31:45,470 --> 00:31:49,909
option in there to select ok and the

00:31:48,200 --> 00:31:51,110
advantage to that instead of trying to

00:31:49,909 --> 00:31:52,760
do it yourself you can add the graphs

00:31:51,110 --> 00:31:54,230
one at a time and data sources one time

00:31:52,760 --> 00:31:56,149
but because you imported all this

00:31:54,230 --> 00:31:57,950
templates in you can just select it once

00:31:56,149 --> 00:32:05,720
and it will do all the relations stuff

00:31:57,950 --> 00:32:06,830
for you ok so this is on the actual you

00:32:05,720 --> 00:32:08,299
have to drop to the command line just

00:32:06,830 --> 00:32:10,250
for a couple steps because we have this

00:32:08,299 --> 00:32:11,870
this PHP script that does the collection

00:32:10,250 --> 00:32:13,429
from the database servers you need to

00:32:11,870 --> 00:32:15,080
put it into the scripts directory where

00:32:13,429 --> 00:32:17,659
cacti expects to see all of its scripts

00:32:15,080 --> 00:32:19,340
make sure that it's readable by the

00:32:17,659 --> 00:32:21,559
cacti user whoever it's running as and

00:32:19,340 --> 00:32:23,299
then you need to define the credentials

00:32:21,559 --> 00:32:24,860
for it this is the simplest way to do it

00:32:23,299 --> 00:32:27,230
and the way that most of my customers do

00:32:24,860 --> 00:32:29,600
it they've username password on all

00:32:27,230 --> 00:32:31,250
their database servers for the cacti

00:32:29,600 --> 00:32:33,080
user to run so just with the minimal

00:32:31,250 --> 00:32:35,029
privileges that cacti needs to get its

00:32:33,080 --> 00:32:36,260
data now I think that involves super so

00:32:35,029 --> 00:32:38,690
it's kind of a lot of privileges but

00:32:36,260 --> 00:32:40,309
lock it down based on the IP address of

00:32:38,690 --> 00:32:42,260
the monitoring server that's what we end

00:32:40,309 --> 00:32:43,639
up doing so that's all you need to do

00:32:42,260 --> 00:32:44,809
you edit the script where you put it in

00:32:43,639 --> 00:32:46,519
place and then you edit it to put the

00:32:44,809 --> 00:32:49,250
right username password in and then

00:32:46,519 --> 00:32:51,470
you're done at the command line then

00:32:49,250 --> 00:32:52,610
once you've got the server to find you

00:32:51,470 --> 00:32:56,990
want to tell it that now we're ready to

00:32:52,610 --> 00:32:58,279
create some graphs for it ok it will pop

00:32:56,990 --> 00:32:59,510
you to a screen that has all the

00:32:58,279 --> 00:33:01,460
different graphs available this goes

00:32:59,510 --> 00:33:03,200
down for about forty two different line

00:33:01,460 --> 00:33:06,340
items choose the one at the top because

00:33:03,200 --> 00:33:08,750
you probably want to make all the graphs

00:33:06,340 --> 00:33:10,460
ok and then at the bottom of that screen

00:33:08,750 --> 00:33:11,720
there's a you know click Next to

00:33:10,460 --> 00:33:12,830
continue kind of thing it will take you

00:33:11,720 --> 00:33:15,740
to the screen saying I've created all

00:33:12,830 --> 00:33:17,419
the graphs then you want to put it on a

00:33:15,740 --> 00:33:17,870
tree that give you talking about you

00:33:17,419 --> 00:33:18,980
might have differ

00:33:17,870 --> 00:33:21,350
data centers you might just have

00:33:18,980 --> 00:33:23,000
different ways that you want to show you

00:33:21,350 --> 00:33:25,250
can show graph trees that show not only

00:33:23,000 --> 00:33:27,380
host to host mappings but you can take a

00:33:25,250 --> 00:33:29,120
specific graphs within cacti and say I

00:33:27,380 --> 00:33:31,760
want to show all of the inner DB

00:33:29,120 --> 00:33:33,800
statistics for all my servers on one set

00:33:31,760 --> 00:33:37,010
of graph trees so that's what you were

00:33:33,800 --> 00:33:39,410
able to do in this view here okay and

00:33:37,010 --> 00:33:42,170
then what ends up happening is when when

00:33:39,410 --> 00:33:43,430
the graphing is when the collection has

00:33:42,170 --> 00:33:44,960
begun it usually takes to monitoring

00:33:43,430 --> 00:33:46,040
periods for graphs to display so you're

00:33:44,960 --> 00:33:47,720
going to be in this bit of a split

00:33:46,040 --> 00:33:49,340
you're going to have one state where

00:33:47,720 --> 00:33:51,230
your graphs are starting to show up but

00:33:49,340 --> 00:33:52,820
they might have na n there isn't any

00:33:51,230 --> 00:33:54,200
data been stored into them yet but after

00:33:52,820 --> 00:33:55,970
two polling intervals the graph will

00:33:54,200 --> 00:33:57,800
display and there'll be some value is

00:33:55,970 --> 00:33:59,120
being populated in there give us some

00:33:57,800 --> 00:34:00,290
time usually a few hours and you'll

00:33:59,120 --> 00:34:01,760
actually have something interesting to

00:34:00,290 --> 00:34:05,380
look back and see some curves and some

00:34:01,760 --> 00:34:05,380
ups and downs going on with your graphs

00:34:05,679 --> 00:34:11,200
ok so just to kind of wrap up on what I

00:34:09,770 --> 00:34:13,280
hope you can take away from this talk

00:34:11,200 --> 00:34:14,300
you want to be you want to be fairly

00:34:13,280 --> 00:34:17,240
aggressive of what you're collecting

00:34:14,300 --> 00:34:19,040
with regards to cacti it's your good

00:34:17,240 --> 00:34:20,389
long term I don't know what's wrong I

00:34:19,040 --> 00:34:23,510
want to look and see what's out of the

00:34:20,389 --> 00:34:24,740
norm but be careful about nagios careful

00:34:23,510 --> 00:34:26,870
about what you're going to alert on it's

00:34:24,740 --> 00:34:28,040
okay to put a check in nagios maybe you

00:34:26,870 --> 00:34:30,139
don't want to set up though to page you

00:34:28,040 --> 00:34:33,530
between certain hours at night be more

00:34:30,139 --> 00:34:34,940
cautious around that okay don't don't

00:34:33,530 --> 00:34:36,169
try to write everything yourself I mean

00:34:34,940 --> 00:34:37,790
you don't have to use proponer modding

00:34:36,169 --> 00:34:39,740
plugins that we're not we don't there's

00:34:37,790 --> 00:34:42,379
no value truly to pro Kona in terms of

00:34:39,740 --> 00:34:44,179
you know monetary reward there's maybe

00:34:42,379 --> 00:34:46,669
some community goodwill we want to be

00:34:44,179 --> 00:34:49,399
able to give back as a as an enterprise

00:34:46,669 --> 00:34:50,780
so please take advantage of the work

00:34:49,399 --> 00:34:52,520
that our development team is continually

00:34:50,780 --> 00:34:54,260
supporting the software you know we're

00:34:52,520 --> 00:34:55,850
not we're in no place to abandon it but

00:34:54,260 --> 00:34:57,740
having said that there are lots of other

00:34:55,850 --> 00:34:59,090
checks out there feel free lots of other

00:34:57,740 --> 00:35:01,340
graphs that you can pull in with with

00:34:59,090 --> 00:35:04,460
nagios and sorry with cacti so how about

00:35:01,340 --> 00:35:05,930
that too and and you know some of the

00:35:04,460 --> 00:35:07,190
systems that I talked about earlier like

00:35:05,930 --> 00:35:09,170
the Zen toss it does everything all in

00:35:07,190 --> 00:35:10,040
one hey that works for some customers

00:35:09,170 --> 00:35:11,810
they don't want to monkey around with

00:35:10,040 --> 00:35:13,100
different types of environments but in

00:35:11,810 --> 00:35:14,930
my experience if you're going to stay

00:35:13,100 --> 00:35:17,060
open source probably the two best are

00:35:14,930 --> 00:35:19,100
going to be the cacti and the nagios for

00:35:17,060 --> 00:35:20,570
monitoring for alerting so I think you

00:35:19,100 --> 00:35:22,340
end up having to go that route for a

00:35:20,570 --> 00:35:28,400
while until we see maybe a different

00:35:22,340 --> 00:35:30,690
tool bubble up okay again that first

00:35:28,400 --> 00:35:31,859
link is more database specific but I

00:35:30,690 --> 00:35:33,510
I really would encourage you to take a

00:35:31,859 --> 00:35:34,560
look at that one there's a lot of good

00:35:33,510 --> 00:35:36,540
stuff in there for a system

00:35:34,560 --> 00:35:38,250
administrator to say you know what I

00:35:36,540 --> 00:35:39,270
never thought to monitor for that or I

00:35:38,250 --> 00:35:41,130
never thought that kind of air

00:35:39,270 --> 00:35:42,810
conditioned come up could come up so

00:35:41,130 --> 00:35:44,579
it's definitely worth the read it's only

00:35:42,810 --> 00:35:46,050
a couple pages long and we've got some

00:35:44,579 --> 00:35:48,359
blog posts that just discuss differences

00:35:46,050 --> 00:35:49,589
between our product and some of the

00:35:48,359 --> 00:35:52,800
other checks that are at or why it might

00:35:49,589 --> 00:35:57,050
be easier to use our so think I think

00:35:52,800 --> 00:35:59,250
it's my last one and that's it that's it

00:35:57,050 --> 00:36:00,720
does anybody have any questions or any

00:35:59,250 --> 00:36:04,700
anything we wanted to talk about we have

00:36:00,720 --> 00:36:11,010
a fairly small group so keep it informal

00:36:04,700 --> 00:36:12,450
that's okay can I ask this does anybody

00:36:11,010 --> 00:36:14,160
I probably should have asked this up

00:36:12,450 --> 00:36:24,510
front is anybody doing any monitoring

00:36:14,160 --> 00:36:37,170
and alerting right now okay okay do you

00:36:24,510 --> 00:36:38,579
have a preference I've heard it said

00:36:37,170 --> 00:36:43,079
that the nagas config files can be

00:36:38,579 --> 00:36:43,950
pretty hairy yeah yeah it's the kind of

00:36:43,079 --> 00:36:46,050
thing you want to have under version

00:36:43,950 --> 00:36:57,060
control and be be checking in quite

00:36:46,050 --> 00:36:58,619
often exactly right that's right I'm not

00:36:57,060 --> 00:37:00,960
familiar too much with open MS does it

00:36:58,619 --> 00:37:03,589
do the graphing side as well the

00:37:00,960 --> 00:37:03,589
historical view

00:37:09,440 --> 00:37:31,110
discovery I'm gonna have to take a look

00:37:24,480 --> 00:37:32,730
at that okay um are there any anybody

00:37:31,110 --> 00:37:38,190
else want to raise any concerns or any

00:37:32,730 --> 00:37:39,450
questions okay well thank you very much

00:37:38,190 --> 00:37:43,020
everybody for your time today I'll be

00:37:39,450 --> 00:37:45,240
enjoyed it most enterprises today

00:37:43,020 --> 00:37:46,890
realize that usernames and passwords

00:37:45,240 --> 00:37:48,510
alone aren't enough to keep their

00:37:46,890 --> 00:37:50,940
networks saved from unauthorized

00:37:48,510 --> 00:37:52,350
intrusions that's my two-factor

00:37:50,940 --> 00:37:54,750
authentication has gotten so popular

00:37:52,350 --> 00:37:56,790
lately that adds that extra layer of

00:37:54,750 --> 00:37:59,640
protection enterprise networks need to

00:37:56,790 --> 00:38:01,110
stay safe but what you may not know is

00:37:59,640 --> 00:38:03,450
that some two-factor authentication

00:38:01,110 --> 00:38:05,670
solutions they're better than others

00:38:03,450 --> 00:38:08,910
like to factor strong authentication

00:38:05,670 --> 00:38:10,950
with wicked wicked goes beyond other

00:38:08,910 --> 00:38:13,590
authentication systems by being less

00:38:10,950 --> 00:38:16,380
expensive easier to implement and easier

00:38:13,590 --> 00:38:18,030
to use giving software-based token

00:38:16,380 --> 00:38:20,880
clients built to run on all major

00:38:18,030 --> 00:38:21,940
devices and OSS including iOS and

00:38:20,880 --> 00:38:24,490
Android

00:38:21,940 --> 00:38:26,619
these tokens utilize a public/private

00:38:24,490 --> 00:38:28,599
key combination that's generated and on

00:38:26,619 --> 00:38:30,700
device so there aren't any shared

00:38:28,599 --> 00:38:32,950
secrets flying around for attackers to

00:38:30,700 --> 00:38:35,800
hijack or which require any special

00:38:32,950 --> 00:38:37,420
handling instead all keys are kept

00:38:35,800 --> 00:38:39,910
secure and private between the

00:38:37,420 --> 00:38:42,099
requesting token and your server which

00:38:39,910 --> 00:38:43,710
you control in-house making it the most

00:38:42,099 --> 00:38:46,390
secure way possible to perform

00:38:43,710 --> 00:38:49,180
authentication encryption and with an

00:38:46,390 --> 00:38:51,970
extensive flexible API and support for

00:38:49,180 --> 00:38:53,950
protocols like ldap and radius wicket

00:38:51,970 --> 00:38:56,410
works with any enterprise network

00:38:53,950 --> 00:38:59,079
architecture to protect the IT systems

00:38:56,410 --> 00:39:01,540
vital to your enterprise download your

00:38:59,079 --> 00:39:03,069
wicked free trial today regardless of

00:39:01,540 --> 00:39:05,079
whether you're considering two-factor

00:39:03,069 --> 00:39:06,880
authentication for the first time or

00:39:05,079 --> 00:39:09,579
just ready to ditch your existing

00:39:06,880 --> 00:39:11,890
expensive key file system we can help

00:39:09,579 --> 00:39:16,560
with easy to implement easy to use

00:39:11,890 --> 00:39:16,560
strong authentication from wicked

00:39:21,200 --> 00:39:28,250
I'll stats I every way this is the way

00:39:24,470 --> 00:39:29,840
to better utilize all your resources and

00:39:28,250 --> 00:39:33,290
it makes managing all your resources

00:39:29,840 --> 00:39:37,120
pretty easy all of the innovation is

00:39:33,290 --> 00:39:40,640
happening in open source the

00:39:37,120 --> 00:39:42,440
collaborative nature and of the you know

00:39:40,640 --> 00:39:44,360
of the community and the speed at which

00:39:42,440 --> 00:39:46,550
these are these you know these

00:39:44,360 --> 00:39:48,860
deficiencies these bugs are getting

00:39:46,550 --> 00:39:51,440
discovered and then fixed is it like

00:39:48,860 --> 00:39:54,170
that really shows the power of the you

00:39:51,440 --> 00:39:55,790
know of the open source community it is

00:39:54,170 --> 00:39:59,990
global and it's definitely because of

00:39:55,790 --> 00:40:06,320
the users community people are extremely

00:39:59,990 --> 00:40:08,240
friendly and always ready to help if you

00:40:06,320 --> 00:40:10,520
go on tire see any day you'll see these

00:40:08,240 --> 00:40:12,250
guys helping each other out and they're

00:40:10,520 --> 00:40:14,930
all doing it like in a selfless manner

00:40:12,250 --> 00:40:17,920
the product is transparent for everyone

00:40:14,930 --> 00:40:21,110
everyone can look at the code base

00:40:17,920 --> 00:40:23,350
everyone can see how close that is being

00:40:21,110 --> 00:40:28,850
built nothing nothing is proprietary

00:40:23,350 --> 00:40:31,460
everything is open in many ways it's

00:40:28,850 --> 00:40:35,930
absolutely vital to the the unborn

00:40:31,460 --> 00:40:40,160
health cloudstack the most exciting

00:40:35,930 --> 00:40:42,970
event in recent memory for me was our

00:40:40,160 --> 00:40:45,640
first developer boot camp

00:40:42,970 --> 00:40:48,280
and our call gave people I gave me two

00:40:45,640 --> 00:40:52,240
weeks notice to come attend I was

00:40:48,280 --> 00:40:56,410
expecting 25 or 30 people so we ended up

00:40:52,240 --> 00:40:59,260
with 87 people and had to go get more

00:40:56,410 --> 00:41:01,780
chairs in the room twice everything

00:40:59,260 --> 00:41:05,020
within cloud computing is commodity and

00:41:01,780 --> 00:41:08,080
is open source and so I don't think that

00:41:05,020 --> 00:41:09,850
you will you'll see anywhere where open

00:41:08,080 --> 00:41:12,880
source is not pervasive in cloud

00:41:09,850 --> 00:41:15,430
computing and so i think it's i think

00:41:12,880 --> 00:41:16,960
it's an assumption i think when you talk

00:41:15,430 --> 00:41:18,070
about cloud computing you're really

00:41:16,960 --> 00:41:23,620
talking about open source cloud

00:41:18,070 --> 00:41:26,650
computing cloud sac is a robust solution

00:41:23,620 --> 00:41:28,780
for large deployments you'll have dozens

00:41:26,650 --> 00:41:33,070
of data centers and thousands of servers

00:41:28,780 --> 00:41:35,740
in each data centers these hardware is

00:41:33,070 --> 00:41:39,220
going to fail and CloudStack is designed

00:41:35,740 --> 00:41:41,920
to handle number one that mass scale

00:41:39,220 --> 00:41:45,100
number two it's designed to handle the

00:41:41,920 --> 00:41:47,650
failure that inevitably happens in large

00:41:45,100 --> 00:41:51,190
deployments started working on college

00:41:47,650 --> 00:41:54,520
attack over four years ago and it was

00:41:51,190 --> 00:41:57,220
the original set of people working on it

00:41:54,520 --> 00:42:01,330
had a background of delivering software

00:41:57,220 --> 00:42:05,560
telcos and service providers lots of QA

00:42:01,330 --> 00:42:09,160
lots of users actually using it high

00:42:05,560 --> 00:42:12,250
availability is a key feature multiple

00:42:09,160 --> 00:42:14,260
hypervisors support different network

00:42:12,250 --> 00:42:16,960
models you can pick up whatever suits

00:42:14,260 --> 00:42:19,210
you better while step management server

00:42:16,960 --> 00:42:22,900
can be deployed in different physical

00:42:19,210 --> 00:42:24,550
machines it definitely has a huge

00:42:22,900 --> 00:42:29,530
footprint it's being deployed everywhere

00:42:24,550 --> 00:42:32,140
there's a major movie studio that they

00:42:29,530 --> 00:42:35,320
were using cloudstack they were using it

00:42:32,140 --> 00:42:37,390
to transcode video and i thought that

00:42:35,320 --> 00:42:39,040
was terribly fascinating what i found

00:42:37,390 --> 00:42:42,310
more fascinating is what they did during

00:42:39,040 --> 00:42:45,100
lunch where they would spin up you know

00:42:42,310 --> 00:42:46,600
50 or 60 game servers then as soon as

00:42:45,100 --> 00:42:49,160
much was over they would destroy all the

00:42:46,600 --> 00:42:52,590
instances and go back to doing

00:42:49,160 --> 00:42:54,090
CloudStack is vast it touches so many

00:42:52,590 --> 00:42:55,980
different aspects and there's no one

00:42:54,090 --> 00:42:58,940
person that's kind of like a master of

00:42:55,980 --> 00:43:02,430
all those realms I think CloudStack as a

00:42:58,940 --> 00:43:04,650
project is going to be one of the

00:43:02,430 --> 00:43:08,700
leaders simply because it's some of the

00:43:04,650 --> 00:43:14,160
most feature fallen and and robust

00:43:08,700 --> 00:43:17,060
platforms out they were Adam senior

00:43:14,160 --> 00:43:17,060
living through the clouds dag

00:43:29,860 --> 00:43:31,920
you

00:43:35,250 --> 00:43:40,329
when we created asterisk over a decade

00:43:37,960 --> 00:43:42,279
ago we could not have imagined that

00:43:40,329 --> 00:43:44,470
asterisk would not only become the most

00:43:42,279 --> 00:43:46,630
widely adopted open source communication

00:43:44,470 --> 00:43:48,640
software on the planet but that it would

00:43:46,630 --> 00:43:51,160
impact the entire industry in the way

00:43:48,640 --> 00:43:53,140
that it has today asterisk has found its

00:43:51,160 --> 00:43:55,779
way in the more than 170 countries and

00:43:53,140 --> 00:43:57,730
virtually every fortune 1000 company the

00:43:55,779 --> 00:43:59,829
success of asterisk has enabled a

00:43:57,730 --> 00:44:01,240
transition of power from the hands of

00:43:59,829 --> 00:44:03,490
the traditional proprietary phone

00:44:01,240 --> 00:44:05,890
vendors into the hands of the users and

00:44:03,490 --> 00:44:07,839
administrators of phone systems using

00:44:05,890 --> 00:44:09,069
this power our customers have created

00:44:07,839 --> 00:44:11,019
all sorts of business changing

00:44:09,069 --> 00:44:12,849
applications from small office phone

00:44:11,019 --> 00:44:15,369
systems to mission-critical call centers

00:44:12,849 --> 00:44:16,990
the international carrier networks in

00:44:15,369 --> 00:44:18,760
fact there's even an entire country

00:44:16,990 --> 00:44:21,369
those communications infrastructure runs

00:44:18,760 --> 00:44:23,289
on esters the gym has always been about

00:44:21,369 --> 00:44:25,000
creating technology that expands

00:44:23,289 --> 00:44:27,190
communications capabilities in ways that

00:44:25,000 --> 00:44:28,359
we could never have imagined and that's

00:44:27,190 --> 00:44:31,119
part of what's game-changing about

00:44:28,359 --> 00:44:33,460
Digium today we're doing it again this

00:44:31,119 --> 00:44:35,559
time by introducing a new family of HD

00:44:33,460 --> 00:44:37,660
IP phones that extends control of the

00:44:35,559 --> 00:44:39,430
user all the way to the desktop the

00:44:37,660 --> 00:44:41,140
launch of these new products represents

00:44:39,430 --> 00:44:43,240
the next phase indigenous history of

00:44:41,140 --> 00:44:45,640
innovation these are the first and only

00:44:43,240 --> 00:44:47,349
IP phones designed to fully leverage the

00:44:45,640 --> 00:44:48,910
power of estrus when we first discussed

00:44:47,349 --> 00:44:50,950
our expectations for building a family

00:44:48,910 --> 00:44:53,079
of phones for use with asterisk our

00:44:50,950 --> 00:44:54,819
requirements were pretty simple we asked

00:44:53,079 --> 00:44:56,470
the team to build the phones such that

00:44:54,819 --> 00:44:58,660
they were easy to install integrate

00:44:56,470 --> 00:45:00,490
provision and use I think you'll soon

00:44:58,660 --> 00:45:03,069
agree our engineers have delivered on

00:45:00,490 --> 00:45:04,690
that goal user feedback is validating

00:45:03,069 --> 00:45:06,819
that when it comes to operation with

00:45:04,690 --> 00:45:09,250
astro space systems including our own

00:45:06,819 --> 00:45:11,799
Switchvox based product these are the

00:45:09,250 --> 00:45:13,119
easiest to use best integrated most

00:45:11,799 --> 00:45:15,730
interoperable products on the market

00:45:13,119 --> 00:45:17,700
today the digitally phones will

00:45:15,730 --> 00:45:19,750
initially include three IP des hommes

00:45:17,700 --> 00:45:21,700
uniquely designed to complement any

00:45:19,750 --> 00:45:23,559
asterisks or Switchvox based solution

00:45:21,700 --> 00:45:26,230
these phones are different for a number

00:45:23,559 --> 00:45:28,900
of reasons first there is clue sively

00:45:26,230 --> 00:45:30,309
designed for use with esters secondly

00:45:28,900 --> 00:45:31,920
we've made it really easy to

00:45:30,309 --> 00:45:34,329
autodiscover and provision the phones

00:45:31,920 --> 00:45:36,009
next we've made it easy for the phones

00:45:34,329 --> 00:45:37,960
to access information inside of

00:45:36,009 --> 00:45:39,960
asterisks allowing tight coupling

00:45:37,960 --> 00:45:41,950
between an application and the phone

00:45:39,960 --> 00:45:44,080
additionally we've created an

00:45:41,950 --> 00:45:46,210
applications engine that allows users

00:45:44,080 --> 00:45:49,450
and developers to create and run their

00:45:46,210 --> 00:45:51,220
own apps on the phone and finally we've

00:45:49,450 --> 00:45:53,170
done all of this at a very compelling

00:45:51,220 --> 00:45:54,849
price point at digium we're always

00:45:53,170 --> 00:45:56,950
thinking of ways to give our customers

00:45:54,849 --> 00:45:59,530
the best value in business phone systems

00:45:56,950 --> 00:46:01,060
and also give them the power to create

00:45:59,530 --> 00:46:03,220
their own solutions or any

00:46:01,060 --> 00:46:04,960
communications challenge will continue

00:46:03,220 --> 00:46:06,400
to push the boundaries not only to make

00:46:04,960 --> 00:46:08,440
Astra's cooler bastard more

00:46:06,400 --> 00:46:10,060
technologically feature-rich but to make

00:46:08,440 --> 00:46:12,520
asterisk and what communications even

00:46:10,060 --> 00:46:16,230
easier and together we'll change the way

00:46:12,520 --> 00:46:16,230
the world communicates again

00:47:06,700 --> 00:47:10,970
your customers rely on your website or

00:47:09,470 --> 00:47:13,339
application if it's slower

00:47:10,970 --> 00:47:16,310
non-responsive it infuriates your users

00:47:13,339 --> 00:47:18,109
and costs you money keeping your

00:47:16,310 --> 00:47:21,600
business critical systems humming along

00:47:18,109 --> 00:47:23,940
requires insight into what they're doing

00:47:21,600 --> 00:47:25,890
your system metrics tells stories

00:47:23,940 --> 00:47:27,900
stories that can reveal performance

00:47:25,890 --> 00:47:30,240
bottlenecks resource limitations and

00:47:27,900 --> 00:47:31,800
other problems but how do you keep an

00:47:30,240 --> 00:47:34,440
eye on all of your systems performance

00:47:31,800 --> 00:47:37,470
metrics in real-time and record this

00:47:34,440 --> 00:47:39,240
data for later analysis enter longview

00:47:37,470 --> 00:47:41,250
the new way to see what's really going

00:47:39,240 --> 00:47:43,410
on under the hood the long view

00:47:41,250 --> 00:47:45,480
dashboard lets you visualize the status

00:47:43,410 --> 00:47:47,940
of all your systems providing you with a

00:47:45,480 --> 00:47:51,300
bird's-eye view of your entire fleet you

00:47:47,940 --> 00:47:53,880
can sort by cpu memory swap processes

00:47:51,300 --> 00:47:55,650
load and network usage click a specific

00:47:53,880 --> 00:47:58,050
system to access its individual

00:47:55,650 --> 00:48:00,560
dashboard then click and drag to zoom in

00:47:58,050 --> 00:48:02,970
on chokepoints and get more detail

00:48:00,560 --> 00:48:04,620
comprehensive network data including

00:48:02,970 --> 00:48:06,930
inbound and outbound traffic is

00:48:04,620 --> 00:48:08,520
available on the network tab and disk

00:48:06,930 --> 00:48:10,440
rights and free space on the disk

00:48:08,520 --> 00:48:13,260
stabbed while the process Explorer

00:48:10,440 --> 00:48:15,810
displays usage statistics for individual

00:48:13,260 --> 00:48:17,970
processes the system info tab shows

00:48:15,810 --> 00:48:20,220
listening services active connections

00:48:17,970 --> 00:48:22,350
and available updates adding long view

00:48:20,220 --> 00:48:24,060
to a system is easy just click the

00:48:22,350 --> 00:48:26,190
button copy the one line installation

00:48:24,060 --> 00:48:28,650
command then run the command on your

00:48:26,190 --> 00:48:30,330
linux system to complete the process the

00:48:28,650 --> 00:48:32,520
agent will begin collecting data and

00:48:30,330 --> 00:48:34,350
sending it to longview then the graph

00:48:32,520 --> 00:48:36,930
start rolling

00:48:34,350 --> 00:48:39,300
use longview to gain visibility into

00:48:36,930 --> 00:48:43,040
your servers so when your website or app

00:48:39,300 --> 00:48:43,040

YouTube URL: https://www.youtube.com/watch?v=RzFcYpx-xKc


