Title: 2013 SouthEast LinuxFest - David Cantrell - Rewriting Anaconda: A Look Back
Publication date: 2015-04-17
Playlist: 2013 SouthEast LinuxFest
Description: 
	2013 SouthEast LinuxFest
David Cantrell
Rewriting Anaconda: A Look Back
Captions: 
	00:00:00,000 --> 00:00:05,160
the following presentation was recorded

00:00:02,639 --> 00:00:08,280
at the 2013 southeast linux fest in

00:00:05,160 --> 00:00:10,860
charlotte north carolina it is licensed

00:00:08,280 --> 00:00:12,509
under a creative commons license for

00:00:10,860 --> 00:00:17,190
more information about the southeast

00:00:12,509 --> 00:00:19,949
linux fest visit w WC selinux phase or

00:00:17,190 --> 00:00:21,810
the southeast linux fest would like to

00:00:19,949 --> 00:00:24,000
thank the following diamond sponsors in

00:00:21,810 --> 00:00:26,849
2013 for helping make these videos

00:00:24,000 --> 00:00:29,580
possible my name is Debbie 10th row and

00:00:26,849 --> 00:00:35,640
this is rewriting anaconda a

00:00:29,580 --> 00:00:37,469
retrospective and this is presentation

00:00:35,640 --> 00:00:39,210
revision 0 see you guys are the guinea

00:00:37,469 --> 00:00:41,730
pigs for this I'll probably do it at

00:00:39,210 --> 00:00:45,930
other conferences so if things seem out

00:00:41,730 --> 00:00:50,340
of order let me know like if something

00:00:45,930 --> 00:00:57,329
would be better earlier ok so what is

00:00:50,340 --> 00:01:00,480
this all about I wanted to go over how

00:00:57,329 --> 00:01:03,539
we rewrote anaconda in fedora and red

00:01:00,480 --> 00:01:06,260
hat enterprise linux and all of the

00:01:03,539 --> 00:01:09,000
challenges and things like that and also

00:01:06,260 --> 00:01:11,640
how you can take what we learned and

00:01:09,000 --> 00:01:15,509
maybe apply it to a general open source

00:01:11,640 --> 00:01:17,729
project we learned quite a bit about how

00:01:15,509 --> 00:01:19,650
to interact with the community we change

00:01:17,729 --> 00:01:21,299
the way we do a lot of things and I

00:01:19,650 --> 00:01:24,330
think what we got out of that ended up

00:01:21,299 --> 00:01:26,430
being quite useful and we have kind of a

00:01:24,330 --> 00:01:33,420
very different workflow than we had a

00:01:26,430 --> 00:01:37,229
few years ago okay Who am I this is kind

00:01:33,420 --> 00:01:38,820
of the standard thing that I think

00:01:37,229 --> 00:01:40,770
everyone does the beginning of one of

00:01:38,820 --> 00:01:43,229
these I'm Davey Cantrell I'm the manager

00:01:40,770 --> 00:01:45,780
of the Installer team at Red Hat I work

00:01:43,229 --> 00:01:48,420
out of our Massachusetts office I know

00:01:45,780 --> 00:01:50,579
we have an office i think in raleigh in

00:01:48,420 --> 00:01:53,430
north carolina it has a few people there

00:01:50,579 --> 00:01:56,009
I don't know anything about it I know

00:01:53,430 --> 00:01:57,540
the old office here and I went to

00:01:56,009 --> 00:02:00,619
Georgia Tech and have a degree in

00:01:57,540 --> 00:02:03,600
computer science my history with Linux

00:02:00,619 --> 00:02:05,640
so I always I get a kick out of these

00:02:03,600 --> 00:02:08,399
stories like how people got their first

00:02:05,640 --> 00:02:11,640
start with Linux for me it was in 94-95

00:02:08,399 --> 00:02:13,470
I was in high school in Georgia and we

00:02:11,640 --> 00:02:15,900
were getting new computers

00:02:13,470 --> 00:02:20,610
at our school and there were IBM techs

00:02:15,900 --> 00:02:22,890
and I was helping because I was an

00:02:20,610 --> 00:02:25,260
upperclassman at the time and didn't

00:02:22,890 --> 00:02:26,940
have a lot to do so they said yeah David

00:02:25,260 --> 00:02:29,460
you do computer stuff why don't you help

00:02:26,940 --> 00:02:31,620
out idea and one guy had a laptop there

00:02:29,460 --> 00:02:32,820
and it was running Linux and I didn't

00:02:31,620 --> 00:02:35,130
know what it was at the time I obviously

00:02:32,820 --> 00:02:36,660
knew it wasn't Doss or windows I said

00:02:35,130 --> 00:02:38,190
what is that and the guy just kind of

00:02:36,660 --> 00:02:39,630
blew it off he's like oh that you you

00:02:38,190 --> 00:02:42,600
wouldn't know about that that's that's

00:02:39,630 --> 00:02:45,240
that's unix you don't know that so I was

00:02:42,600 --> 00:02:48,570
I was intrigued so I started asking more

00:02:45,240 --> 00:02:50,190
and he explained it and I ended up going

00:02:48,570 --> 00:02:53,610
with a friend of mine to a Barnes &

00:02:50,190 --> 00:02:55,980
Noble remember bookstores and we got the

00:02:53,610 --> 00:02:58,320
big linux Unleashed book and it came

00:02:55,980 --> 00:03:00,990
bundled with slackware linux and that's

00:02:58,320 --> 00:03:03,209
where I got my start then I met Patrick

00:03:00,990 --> 00:03:06,360
Volker ding in 1998 worked on slackware

00:03:03,209 --> 00:03:10,010
for quite a long time and now i'm at Red

00:03:06,360 --> 00:03:10,010
Hat and I've been there since 2005

00:03:11,090 --> 00:03:17,550
projects I've worked on so this is not

00:03:15,570 --> 00:03:19,739
an exhaustive list this is a list of

00:03:17,550 --> 00:03:22,200
things that I have contributed code to

00:03:19,739 --> 00:03:24,480
whether or not they have accepted it I

00:03:22,200 --> 00:03:25,890
don't know I mean I know some projects

00:03:24,480 --> 00:03:27,480
have but this is stuff that I've just

00:03:25,890 --> 00:03:30,180
helped with I've solved someone's

00:03:27,480 --> 00:03:34,650
problem and I've contributed code so

00:03:30,180 --> 00:03:38,790
slackware linux after step the old

00:03:34,650 --> 00:03:41,790
window manager Python fedora red hat

00:03:38,790 --> 00:03:46,650
enterprise linux anaconda of course proc

00:03:41,790 --> 00:03:49,860
PS canoe parted the python bindings for

00:03:46,650 --> 00:03:51,330
par dead ISC dhcp don't anyone ever work

00:03:49,860 --> 00:03:54,030
on that that's like terrible code

00:03:51,330 --> 00:03:55,769
network manager and most recently the

00:03:54,030 --> 00:04:02,340
common desktop environment which is now

00:03:55,769 --> 00:04:05,130
open source so yes I work on really old

00:04:02,340 --> 00:04:07,019
eagle okay so what does an installer do

00:04:05,130 --> 00:04:10,680
this is a question that seems really

00:04:07,019 --> 00:04:12,750
obvious and basic but it is a piece of

00:04:10,680 --> 00:04:14,610
software that can quickly get out of

00:04:12,750 --> 00:04:16,350
hand and suffer from scope creep people

00:04:14,610 --> 00:04:17,430
want to do everything in the Installer

00:04:16,350 --> 00:04:19,680
they want to play games and the

00:04:17,430 --> 00:04:22,410
Installer they want to have it connect

00:04:19,680 --> 00:04:23,910
to all of their social networks you want

00:04:22,410 --> 00:04:26,010
to have it do all kinds of stuff but

00:04:23,910 --> 00:04:27,030
really what it comes down to it's just a

00:04:26,010 --> 00:04:30,030
few simple things

00:04:27,030 --> 00:04:32,820
first s to find itself second find your

00:04:30,030 --> 00:04:35,040
storage devices third use your storage

00:04:32,820 --> 00:04:37,080
devices how you want to use them and

00:04:35,040 --> 00:04:39,840
then transfer the operating system to

00:04:37,080 --> 00:04:41,700
those and finally booted that's it

00:04:39,840 --> 00:04:44,460
that's all that an installer has to do

00:04:41,700 --> 00:04:46,590
everything beyond that is really the job

00:04:44,460 --> 00:04:48,450
of another program and when we start to

00:04:46,590 --> 00:04:50,490
incorporate more into an installer we

00:04:48,450 --> 00:04:52,770
just it gets out of hand and you'll see

00:04:50,490 --> 00:04:55,740
I have some screenshots of very old

00:04:52,770 --> 00:04:57,060
anaconda releases where we did really we

00:04:55,740 --> 00:05:00,480
did things that should have been done by

00:04:57,060 --> 00:05:05,760
other programs but we learned okay

00:05:00,480 --> 00:05:08,430
common questions not a lot but once that

00:05:05,760 --> 00:05:11,760
we hear often how hard can an installer

00:05:08,430 --> 00:05:14,910
really be well yeah that's that's valid

00:05:11,760 --> 00:05:16,980
but have you ever installed a linux

00:05:14,910 --> 00:05:19,380
distribution or just any other OS and

00:05:16,980 --> 00:05:22,140
had a bug in the Installer probably

00:05:19,380 --> 00:05:24,419
everyone what's your opinion of that

00:05:22,140 --> 00:05:27,090
product at that point have a pretty

00:05:24,419 --> 00:05:28,830
negative opinion so writing an installer

00:05:27,090 --> 00:05:32,040
we don't really have an opportunity to

00:05:28,830 --> 00:05:34,140
have bugs like other common program so

00:05:32,040 --> 00:05:37,410
we have to be pretty solid we form the

00:05:34,140 --> 00:05:40,260
first opinion of the OS four people and

00:05:37,410 --> 00:05:42,510
we have to constantly chase new hardware

00:05:40,260 --> 00:05:43,919
enablement challenges so anytime there's

00:05:42,510 --> 00:05:45,810
a new device type there's a new

00:05:43,919 --> 00:05:47,010
networking type all the stuff changes we

00:05:45,810 --> 00:05:52,500
have to account for that in the

00:05:47,010 --> 00:05:55,530
Installer but can't you just use live

00:05:52,500 --> 00:05:57,539
images yes this is this will render our

00:05:55,530 --> 00:05:59,340
job completely obsolete it is the fact

00:05:57,539 --> 00:06:01,440
that everyone just uses live images and

00:05:59,340 --> 00:06:04,020
we don't install anymore but who makes

00:06:01,440 --> 00:06:06,180
live images how do we set those up right

00:06:04,020 --> 00:06:08,070
now use installers and we just installed

00:06:06,180 --> 00:06:10,560
to a live image that may change over

00:06:08,070 --> 00:06:13,950
time but there's still something that

00:06:10,560 --> 00:06:16,680
has to set that up and what about the

00:06:13,950 --> 00:06:20,310
cloud well yeah you know that just uses

00:06:16,680 --> 00:06:22,950
images so it's the same problems really

00:06:20,310 --> 00:06:26,760
and for us I know other distributions

00:06:22,950 --> 00:06:29,039
have different limitations and

00:06:26,760 --> 00:06:30,780
restrictions but for us we're working on

00:06:29,039 --> 00:06:33,210
both fedora and red hat enterprise linux

00:06:30,780 --> 00:06:36,030
at the same time and people want the

00:06:33,210 --> 00:06:38,159
same OS installation experience across a

00:06:36,030 --> 00:06:40,860
range of device types they want laptops

00:06:38,159 --> 00:06:43,919
embedded devices mainframes

00:06:40,860 --> 00:06:47,159
topps workstations servers it's really

00:06:43,919 --> 00:06:50,789
hard to get that same experience across

00:06:47,159 --> 00:06:52,889
a wide range of platforms I think we do

00:06:50,789 --> 00:06:56,039
a good job of it but it's still quite

00:06:52,889 --> 00:06:58,289
challenging so what are the goals we

00:06:56,039 --> 00:06:59,789
have with the Anaconda okay any open

00:06:58,289 --> 00:07:01,500
source software project you got to have

00:06:59,789 --> 00:07:03,419
goals what are you trying to do you know

00:07:01,500 --> 00:07:06,240
are you making an email program are you

00:07:03,419 --> 00:07:09,780
making a web browser are you making

00:07:06,240 --> 00:07:11,909
another CD ripping program okay support

00:07:09,780 --> 00:07:13,740
use cases of fedora and rel pretty

00:07:11,909 --> 00:07:16,139
simple these are well defined for us

00:07:13,740 --> 00:07:18,960
other projects may not have well defined

00:07:16,139 --> 00:07:21,360
use cases but I say for any open source

00:07:18,960 --> 00:07:23,430
project you certainly want to have some

00:07:21,360 --> 00:07:27,240
use cases who who are you trying to

00:07:23,430 --> 00:07:29,819
target look nice and fit well with the

00:07:27,240 --> 00:07:31,319
rest of the OS well this is part of the

00:07:29,819 --> 00:07:33,569
reason we embarked on this rather

00:07:31,319 --> 00:07:36,659
impossible project of rewriting anaconda

00:07:33,569 --> 00:07:38,069
we wanted it to look well and fit fit in

00:07:36,659 --> 00:07:41,129
with the rest of the operating system

00:07:38,069 --> 00:07:43,650
and like i said earlier form a positive

00:07:41,129 --> 00:07:45,449
first opinion of the OS if people have a

00:07:43,650 --> 00:07:48,270
negative installation experience you've

00:07:45,449 --> 00:07:50,159
already shaped their view for everything

00:07:48,270 --> 00:07:53,219
else in the product it does not matter

00:07:50,159 --> 00:07:57,360
if it was benign if it was out of your

00:07:53,219 --> 00:08:01,409
control it's just the damage has been

00:07:57,360 --> 00:08:03,150
done and gained active contributors

00:08:01,409 --> 00:08:05,610
outside of the full-time development

00:08:03,150 --> 00:08:07,430
team this is probably one of the more

00:08:05,610 --> 00:08:09,330
challenging ones for us because

00:08:07,430 --> 00:08:10,620
contributing to an installer is

00:08:09,330 --> 00:08:14,789
certainly more difficult than

00:08:10,620 --> 00:08:17,039
contributing to a smaller program or say

00:08:14,789 --> 00:08:20,939
a web-based project or something like

00:08:17,039 --> 00:08:25,020
that so this is what we had going into

00:08:20,939 --> 00:08:29,490
our planned rewrite I guess all right

00:08:25,020 --> 00:08:30,900
stats these may be our week or so old so

00:08:29,490 --> 00:08:35,729
first commit was in april of nineteen

00:08:30,900 --> 00:08:37,529
ninety nine and CVS that's more than 14

00:08:35,729 --> 00:08:39,570
years of continual development 14 years

00:08:37,529 --> 00:08:41,310
and one month or two months or something

00:08:39,570 --> 00:08:47,310
like that i don't know math is not my

00:08:41,310 --> 00:08:49,050
strong point 433 unique authors that

00:08:47,310 --> 00:08:53,420
many lines of code

00:08:49,050 --> 00:08:55,769
it's like a lot that many commits

00:08:53,420 --> 00:08:58,290
sixty-four percent of it is in Python

00:08:55,769 --> 00:09:02,519
these days that's we're trying to get

00:08:58,290 --> 00:09:06,649
more of it in Python the highest line of

00:09:02,519 --> 00:09:10,079
code count was in 2002 @ over 88,000 and

00:09:06,649 --> 00:09:14,430
the reason I wrote that 2002 is the

00:09:10,079 --> 00:09:16,010
second highest came in 2012 where we

00:09:14,430 --> 00:09:18,570
kind of went up and then back down again

00:09:16,010 --> 00:09:20,040
but that was kind of associated with

00:09:18,570 --> 00:09:22,649
with the rewrite where things were

00:09:20,040 --> 00:09:24,810
moving around and stuff so this is a

00:09:22,649 --> 00:09:26,579
pretty big project you probably don't

00:09:24,810 --> 00:09:27,870
spend a lot of time we don't want you to

00:09:26,579 --> 00:09:31,350
spend a lot of time running the

00:09:27,870 --> 00:09:34,560
installer but for just those minutes

00:09:31,350 --> 00:09:37,140
that you're using it to install this is

00:09:34,560 --> 00:09:41,730
behind it so that's that's a lot of

00:09:37,140 --> 00:09:45,120
stuff all right so walkthrough of

00:09:41,730 --> 00:09:47,940
anaconda so I what I did is I gathered

00:09:45,120 --> 00:09:51,360
some screenshots here of past releases

00:09:47,940 --> 00:09:54,500
primarily realm releases because i can't

00:09:51,360 --> 00:09:57,990
find media for some of the really old

00:09:54,500 --> 00:10:00,029
fedoras and also there's a lot of fedora

00:09:57,990 --> 00:10:03,060
releases this kind of jumps ahead in

00:10:00,029 --> 00:10:05,040
time faster but you can certainly see

00:10:03,060 --> 00:10:09,050
that stuff was changing over time so

00:10:05,040 --> 00:10:13,140
starting with red hat enterprise linux

00:10:09,050 --> 00:10:14,370
2.1 februari 2002 so a while ago when

00:10:13,140 --> 00:10:18,630
you booted it up it looked like this

00:10:14,370 --> 00:10:21,600
that's a lot of text on the screen once

00:10:18,630 --> 00:10:25,010
you got into anaconda we asked you about

00:10:21,600 --> 00:10:27,500
your language now we love language

00:10:25,010 --> 00:10:32,220
questions we love internationalization

00:10:27,500 --> 00:10:34,350
problems in the code all right your

00:10:32,220 --> 00:10:37,110
keyboard look at this in 2002 we were

00:10:34,350 --> 00:10:38,610
asking people like this is who's going

00:10:37,110 --> 00:10:43,350
to know this stuff on the second screen

00:10:38,610 --> 00:10:45,060
of the installer your mouse type now

00:10:43,350 --> 00:10:46,769
this is fun while I was gathering these

00:10:45,060 --> 00:10:48,690
screenshots I accidentally clicked one

00:10:46,769 --> 00:10:50,459
of the other ones and then I i lost my

00:10:48,690 --> 00:10:53,310
mouse and i couldn't remember what i

00:10:50,459 --> 00:10:55,079
need to go back to and then we tell you

00:10:53,310 --> 00:11:01,910
what you're doing if you didn't already

00:10:55,079 --> 00:11:01,910
know yeah

00:11:02,360 --> 00:11:09,300
and then this if you've installed if

00:11:07,529 --> 00:11:13,139
you've been using fedora for a while or

00:11:09,300 --> 00:11:15,990
red hat linux or rel or whatever this

00:11:13,139 --> 00:11:19,319
this screen has remained in some form

00:11:15,990 --> 00:11:21,509
for a very long time this one still

00:11:19,319 --> 00:11:24,600
allowed you to run fdisk we got rid of

00:11:21,509 --> 00:11:28,649
that and then your your partitioning

00:11:24,600 --> 00:11:33,060
types can see gtk was a bit old at that

00:11:28,649 --> 00:11:36,930
point this storage layout kind of stayed

00:11:33,060 --> 00:11:41,430
the same we even gave you a choice

00:11:36,930 --> 00:11:43,019
between grub or lie low I know right the

00:11:41,430 --> 00:11:45,779
screens are really busy I mean this is

00:11:43,019 --> 00:11:47,790
this is kind of you just look at this

00:11:45,779 --> 00:11:49,529
screen it's like what is it asking me to

00:11:47,790 --> 00:11:53,100
do where should I go it's kind of busy

00:11:49,529 --> 00:11:56,639
but again it was 2002 and I wasn't

00:11:53,100 --> 00:11:57,959
involved in any of that so whatever yeah

00:11:56,639 --> 00:11:59,160
it is advanced that's right you

00:11:57,959 --> 00:12:02,069
shouldn't be using this unless you're

00:11:59,160 --> 00:12:05,579
advanced okay and that work that's

00:12:02,069 --> 00:12:08,480
fairly obvious i love the firewall

00:12:05,579 --> 00:12:13,079
security level choice high medium or no

00:12:08,480 --> 00:12:15,689
which I thought that was interesting and

00:12:13,079 --> 00:12:19,500
then you like checkboxes here's some

00:12:15,689 --> 00:12:25,769
more they're even in a scroll box for

00:12:19,500 --> 00:12:29,009
you this looks familiar time zone screen

00:12:25,769 --> 00:12:30,569
so I'm still going through this there's

00:12:29,009 --> 00:12:32,670
a lot of screen so one thing we wanted

00:12:30,569 --> 00:12:34,829
to do with this rewrite was get rid of a

00:12:32,670 --> 00:12:36,600
number of screens so you know I can keep

00:12:34,829 --> 00:12:40,350
going through all of this I mean we just

00:12:36,600 --> 00:12:42,480
have like this is just really busy so

00:12:40,350 --> 00:12:45,800
let's let's jump ahead a little bit we

00:12:42,480 --> 00:12:48,809
have red hat linux 8 i'm going to skip

00:12:45,800 --> 00:12:52,319
29 please both look about the same so in

00:12:48,809 --> 00:12:53,779
2003 okay we've cleaned this up a bit

00:12:52,319 --> 00:12:58,230
this looks a little more professional

00:12:53,779 --> 00:13:00,540
the ISO boot up screen we had this early

00:12:58,230 --> 00:13:01,860
loading program remember I said one of

00:13:00,540 --> 00:13:03,420
the things the Installer has to do is

00:13:01,860 --> 00:13:07,199
find itself that was a job of this

00:13:03,420 --> 00:13:09,720
program since I'm booting off the ISO

00:13:07,199 --> 00:13:11,130
media there wasn't a lot here then I get

00:13:09,720 --> 00:13:13,259
into an the installer and it looks like

00:13:11,130 --> 00:13:14,490
this ok so we've we've tried to make it

00:13:13,259 --> 00:13:16,230
look a little nicer we tell you

00:13:14,490 --> 00:13:18,510
what you're doing first rather than five

00:13:16,230 --> 00:13:21,899
screens in and we're back at the

00:13:18,510 --> 00:13:23,430
language screen keyboard we've

00:13:21,899 --> 00:13:28,440
eliminated a lot of those confusing

00:13:23,430 --> 00:13:30,089
choices mouse I did I didn't wipe the vm

00:13:28,440 --> 00:13:32,760
before i installed so did you know ask

00:13:30,089 --> 00:13:37,080
me if I want to upgrade and we had this

00:13:32,760 --> 00:13:38,670
here we we had this selection for a

00:13:37,080 --> 00:13:41,459
really long time what what type of

00:13:38,670 --> 00:13:43,320
installation are you doing we got rid of

00:13:41,459 --> 00:13:46,680
it at some point in fedora I forget

00:13:43,320 --> 00:13:49,709
which one the main reason is when you

00:13:46,680 --> 00:13:53,490
give users an option like this for

00:13:49,709 --> 00:13:56,310
anything and our users yeah and you put

00:13:53,490 --> 00:13:59,310
the last one or an option as custom or

00:13:56,310 --> 00:14:01,580
customize everyone will choose that no

00:13:59,310 --> 00:14:03,630
one will ever choose the other options

00:14:01,580 --> 00:14:08,670
because people always know better than

00:14:03,630 --> 00:14:11,850
you yeah whoops let's see there were a

00:14:08,670 --> 00:14:15,330
couple others so we started to lose some

00:14:11,850 --> 00:14:18,810
some elements on the on the screen we

00:14:15,330 --> 00:14:21,510
grew a few features here we eliminated

00:14:18,810 --> 00:14:25,410
the lie low choice this screen got

00:14:21,510 --> 00:14:28,200
cleaned up a bit still kind of busy this

00:14:25,410 --> 00:14:31,110
is basically the same but you can tell

00:14:28,200 --> 00:14:34,079
you know we've done some work to to try

00:14:31,110 --> 00:14:37,500
to clean it up a bit more the package

00:14:34,079 --> 00:14:41,339
groups and of course back then we had

00:14:37,500 --> 00:14:43,920
the option of everything or minimal if

00:14:41,339 --> 00:14:45,570
you're a fedora user you may remember

00:14:43,920 --> 00:14:48,029
years ago when we got rid of the

00:14:45,570 --> 00:14:50,880
everything option that coincided with

00:14:48,029 --> 00:14:53,010
moving too young in the installer and we

00:14:50,880 --> 00:14:56,010
allowed you to add any number of

00:14:53,010 --> 00:14:58,950
repositories at which point we could no

00:14:56,010 --> 00:15:02,700
longer define everything this was this

00:14:58,950 --> 00:15:05,160
package installation back end was using

00:15:02,700 --> 00:15:07,980
static data so it was easy to say

00:15:05,160 --> 00:15:11,760
everything or minimal and then

00:15:07,980 --> 00:15:13,980
installing yay I like the advertisement

00:15:11,760 --> 00:15:18,020
for blue curve get back to the basics

00:15:13,980 --> 00:15:23,220
with the Red Hat Linux desktop solution

00:15:18,020 --> 00:15:24,550
of course now we have a gnome 3 and I

00:15:23,220 --> 00:15:26,589
don't

00:15:24,550 --> 00:15:28,240
yeah I saw that and I was like well I'm

00:15:26,589 --> 00:15:32,380
gonna get a screenshot of that I don't

00:15:28,240 --> 00:15:35,350
know ok so that was red hat linux nine

00:15:32,380 --> 00:15:39,279
and we stopped doing that and we went

00:15:35,350 --> 00:15:43,870
with fedora and rel so r l three this is

00:15:39,279 --> 00:15:45,550
basically red hat linux 9 not a lot of

00:15:43,870 --> 00:15:50,649
difference here this is all kind of

00:15:45,550 --> 00:15:55,269
similar let's look at 44 still still

00:15:50,649 --> 00:15:57,300
kind of similar we couldn't figure out

00:15:55,269 --> 00:16:01,480
what the hell to call these products

00:15:57,300 --> 00:16:03,430
this was back when it was a s and ask

00:16:01,480 --> 00:16:04,810
any number of people and you'll get a

00:16:03,430 --> 00:16:09,630
different definition of what that stands

00:16:04,810 --> 00:16:13,630
for again with the language selection

00:16:09,630 --> 00:16:15,880
keyboard disk partitioning automatic

00:16:13,630 --> 00:16:21,790
partitioning this stayed the same for a

00:16:15,880 --> 00:16:26,320
really long time where the different

00:16:21,790 --> 00:16:30,790
screens oh yeah we did have yeah we

00:16:26,320 --> 00:16:32,589
tried to get you past yeah we try to let

00:16:30,790 --> 00:16:35,970
you skip over the the next screen I

00:16:32,589 --> 00:16:35,970
think with this if I remember correctly

00:16:36,209 --> 00:16:40,720
we were just kind of messing with people

00:16:38,680 --> 00:16:42,490
here we reversed the position of

00:16:40,720 --> 00:16:46,209
everything in middle so if you you know

00:16:42,490 --> 00:16:49,149
you had the the motor memories trained

00:16:46,209 --> 00:16:51,160
there you could do in wrong install and

00:16:49,149 --> 00:16:54,640
then of course it asked me for all these

00:16:51,160 --> 00:16:59,079
CDs so it's not for that let's look at

00:16:54,640 --> 00:17:01,060
five 2007 okay we decided to change the

00:16:59,079 --> 00:17:04,209
names again and this is what it looks

00:17:01,060 --> 00:17:06,459
like when you boot it up clean we have

00:17:04,209 --> 00:17:10,660
the graphic and everything all right now

00:17:06,459 --> 00:17:12,130
and red hat linux five those previous

00:17:10,660 --> 00:17:14,980
releases we had a lot of questions about

00:17:12,130 --> 00:17:16,689
language about keyboard about all kinds

00:17:14,980 --> 00:17:20,709
of system settings that were in the

00:17:16,689 --> 00:17:23,079
installer and one thing we ran into was

00:17:20,709 --> 00:17:25,480
that we needed to do the translation for

00:17:23,079 --> 00:17:26,919
those screens and and set up your

00:17:25,480 --> 00:17:30,400
keyboard before you even get to that

00:17:26,919 --> 00:17:32,740
point so starting with rel five or

00:17:30,400 --> 00:17:34,990
whatever for to our release it was we

00:17:32,740 --> 00:17:36,610
moved the stuff into the early loader

00:17:34,990 --> 00:17:36,980
because we need to know this data as

00:17:36,610 --> 00:17:40,250
soon

00:17:36,980 --> 00:17:42,710
possible so that's why we're asking your

00:17:40,250 --> 00:17:44,600
language here then we ask you your

00:17:42,710 --> 00:17:48,230
keyboard layout you got to know the code

00:17:44,600 --> 00:17:50,510
here and i did a network install of this

00:17:48,230 --> 00:17:53,570
and i didn't do a CD install so we had

00:17:50,510 --> 00:17:55,370
our network bring up screen give me the

00:17:53,570 --> 00:17:57,230
URL fetches the image and then this is

00:17:55,370 --> 00:17:59,750
what it looked like so that's way

00:17:57,230 --> 00:18:03,080
different now we've lost the the thing

00:17:59,750 --> 00:18:09,220
on the left there gtk looks a little

00:18:03,080 --> 00:18:13,700
different yeah we that didn't make sense

00:18:09,220 --> 00:18:15,110
the installation number and then our

00:18:13,700 --> 00:18:19,790
partitioning layout we changed this

00:18:15,110 --> 00:18:22,760
quite a bit 45 still basically the same

00:18:19,790 --> 00:18:25,490
options but moved around a bit this of

00:18:22,760 --> 00:18:28,070
course stayed the same bugged us for a

00:18:25,490 --> 00:18:30,110
long time I chose encrypt the volume so

00:18:28,070 --> 00:18:32,510
it would show me that bootloader screen

00:18:30,110 --> 00:18:34,910
this is still the same text we've been

00:18:32,510 --> 00:18:37,460
dragging around for a while network stay

00:18:34,910 --> 00:18:40,850
the same that's more or less the same so

00:18:37,460 --> 00:18:43,820
fewer questions now on the Installer we

00:18:40,850 --> 00:18:46,130
get to package selection I guess this

00:18:43,820 --> 00:18:55,340
package selection yeah so pick your

00:18:46,130 --> 00:18:57,380
groups or whatever and we we lose the

00:18:55,340 --> 00:18:59,559
since we move too young for this release

00:18:57,380 --> 00:19:02,030
we can no longer use the existing

00:18:59,559 --> 00:19:04,040
package listing that you saw with the

00:19:02,030 --> 00:19:06,230
icons and names and stuff so this is

00:19:04,040 --> 00:19:08,150
actually an embedded copy of a program

00:19:06,230 --> 00:19:14,470
we used to ship in fedora called pirate

00:19:08,150 --> 00:19:19,549
and it looks completely different and

00:19:14,470 --> 00:19:23,780
then installing so less busy screens ok

00:19:19,549 --> 00:19:25,809
let's see six when we have in six well

00:19:23,780 --> 00:19:29,890
we finally took up the whole screen now

00:19:25,809 --> 00:19:32,690
with the initial boot up which is nice

00:19:29,890 --> 00:19:36,559
still doing a lot in this early loader

00:19:32,690 --> 00:19:39,020
here we're asking for the language the

00:19:36,559 --> 00:19:41,929
keyboard doing a network install but

00:19:39,020 --> 00:19:44,360
with six we're now using network manager

00:19:41,929 --> 00:19:47,059
so you know that's something we changed

00:19:44,360 --> 00:19:48,650
this screen here to make it a little

00:19:47,059 --> 00:19:49,500
easier and give you more room to type

00:19:48,650 --> 00:19:53,370
URLs

00:19:49,500 --> 00:19:57,240
still basically the same even less on

00:19:53,370 --> 00:20:00,720
the screen now and rel 60 we lost the

00:19:57,240 --> 00:20:03,780
release notes viewer we lost the banner

00:20:00,720 --> 00:20:07,290
at the top we really tried to strip this

00:20:03,780 --> 00:20:10,140
down but one thing that we noticed in

00:20:07,290 --> 00:20:13,430
our aggressive stripping out of code is

00:20:10,140 --> 00:20:18,210
a lot of these screens look really empty

00:20:13,430 --> 00:20:20,550
especially at this resolution so basic

00:20:18,210 --> 00:20:22,500
storage devices are specialized and you

00:20:20,550 --> 00:20:23,880
know we explain what it is but you know

00:20:22,500 --> 00:20:26,070
if you're installing this for the first

00:20:23,880 --> 00:20:27,930
time you might say well why didn't they

00:20:26,070 --> 00:20:30,090
use some of the screen space to I don't

00:20:27,930 --> 00:20:33,120
know have some input fields for some of

00:20:30,090 --> 00:20:35,490
those stuff I don't know and then this

00:20:33,120 --> 00:20:38,310
you know just right in the middle and

00:20:35,490 --> 00:20:40,860
network configuration has been reduced

00:20:38,310 --> 00:20:42,420
to host name we managed to get out of

00:20:40,860 --> 00:20:44,130
the business of owning network

00:20:42,420 --> 00:20:46,170
configuration we turn that all over to

00:20:44,130 --> 00:20:48,000
network manager which is great but it

00:20:46,170 --> 00:20:49,800
meant that we were left with an empty

00:20:48,000 --> 00:20:52,140
screen because we still have to ask for

00:20:49,800 --> 00:20:53,910
host name the configure Network button

00:20:52,140 --> 00:20:56,370
that we added they're all it does is run

00:20:53,910 --> 00:21:00,510
the little network manager configuration

00:20:56,370 --> 00:21:01,890
program timezone wedged in the corner at

00:21:00,510 --> 00:21:06,600
this point in time we were still

00:21:01,890 --> 00:21:08,730
restricted to 800 x 600 so that kind of

00:21:06,600 --> 00:21:11,310
affects how a lot of these look but

00:21:08,730 --> 00:21:13,680
really we could be using better use of

00:21:11,310 --> 00:21:16,650
this screen space root password wedged

00:21:13,680 --> 00:21:19,970
in the corner there ok now we've kind of

00:21:16,650 --> 00:21:23,400
branched out now this was new for

00:21:19,970 --> 00:21:26,820
Pharrell 6 we tried to expand out the

00:21:23,400 --> 00:21:31,230
the installation type like the storage

00:21:26,820 --> 00:21:34,680
layout you wanted to do and we at least

00:21:31,230 --> 00:21:37,440
made this longer it was in a very small

00:21:34,680 --> 00:21:42,330
portion of the screen but still roughly

00:21:37,440 --> 00:21:47,940
the same commit changes to disk we had

00:21:42,330 --> 00:21:50,820
to do that early in rel 6 and then this

00:21:47,940 --> 00:21:52,950
is the same thing that you saw in five

00:21:50,820 --> 00:21:55,200
the pirate interface for package

00:21:52,950 --> 00:21:57,480
selection then we get to installation

00:21:55,200 --> 00:22:00,240
alright so r l 6 that's the current

00:21:57,480 --> 00:22:01,990
stable shipping version of red hat

00:22:00,240 --> 00:22:06,040
enterprise linux so

00:22:01,990 --> 00:22:10,480
oh it looks better I think than the 2002

00:22:06,040 --> 00:22:12,790
addition we have a ways to go so what do

00:22:10,480 --> 00:22:17,250
we do in fedora 18 now we're jumping

00:22:12,790 --> 00:22:19,900
ahead quite a bit here this was January

00:22:17,250 --> 00:22:22,090
so this is what it looks like when you

00:22:19,900 --> 00:22:25,450
boot it up now so you see this screen

00:22:22,090 --> 00:22:27,250
and you go right from there to here we

00:22:25,450 --> 00:22:30,700
don't have that early loading program

00:22:27,250 --> 00:22:33,309
that's in text mode we turned over

00:22:30,700 --> 00:22:36,550
responsibility of that too Drake it and

00:22:33,309 --> 00:22:39,580
other software we ask we ask your

00:22:36,550 --> 00:22:42,100
language in your language which is nice

00:22:39,580 --> 00:22:44,170
too we couldn't do that before yes you

00:22:42,100 --> 00:22:48,400
know if you can't speak English or read

00:22:44,170 --> 00:22:49,720
English so you do this first and then it

00:22:48,400 --> 00:22:52,150
looks like this this is totally

00:22:49,720 --> 00:22:55,420
different totally different than

00:22:52,150 --> 00:22:58,390
anything we've ever shipped we call this

00:22:55,420 --> 00:23:01,840
the installation hub the main hub the

00:22:58,390 --> 00:23:03,160
summary and it's doing stop the

00:23:01,840 --> 00:23:05,410
screenshot doesn't really show it but

00:23:03,160 --> 00:23:06,910
it's doing stuff in the background we

00:23:05,410 --> 00:23:09,940
have status messages there it's

00:23:06,910 --> 00:23:11,620
downloading package metadata and while

00:23:09,940 --> 00:23:13,210
it's doing that you can go and change

00:23:11,620 --> 00:23:14,770
other things you can go and change your

00:23:13,210 --> 00:23:17,020
date and time you can go and change your

00:23:14,770 --> 00:23:20,200
keyboard so we've given people the

00:23:17,020 --> 00:23:22,300
ability to do more quickly we don't kind

00:23:20,200 --> 00:23:24,910
of force you through this this one phase

00:23:22,300 --> 00:23:26,710
so if you click on network this is what

00:23:24,910 --> 00:23:28,450
it looks like again it's using network

00:23:26,710 --> 00:23:29,800
manager but we've pulled information out

00:23:28,450 --> 00:23:34,030
of that and made it available to you

00:23:29,800 --> 00:23:38,280
here timezone screen looks way better

00:23:34,030 --> 00:23:38,280
much bigger map much nicer looking oh

00:23:40,470 --> 00:23:46,969
what okay

00:23:43,399 --> 00:23:49,429
the keyboard layout thing uh you know I

00:23:46,969 --> 00:23:51,409
only need the English qwerty layout but

00:23:49,429 --> 00:23:54,109
you know if you need other ones we

00:23:51,409 --> 00:23:56,089
really put a lot of work into this you

00:23:54,109 --> 00:23:57,859
can change all the all the different

00:23:56,089 --> 00:24:00,559
keys and we have a little test box and

00:23:57,859 --> 00:24:02,869
everything installation source by

00:24:00,559 --> 00:24:05,450
default if you have a network interface

00:24:02,869 --> 00:24:06,979
we will try to do a network installation

00:24:05,450 --> 00:24:09,889
for you but you can change that to do a

00:24:06,979 --> 00:24:13,159
CD installation and then this is what

00:24:09,889 --> 00:24:16,519
package selection looks like in 18 and

00:24:13,159 --> 00:24:18,259
then we get to storage so we actually

00:24:16,519 --> 00:24:22,549
have we have icons now it's just kinda

00:24:18,259 --> 00:24:25,039
ice all of our different screens so

00:24:22,549 --> 00:24:27,889
we're making better use of the screen

00:24:25,039 --> 00:24:33,499
real estate here and and trying to make

00:24:27,889 --> 00:24:37,729
the workflow make more sense we got a

00:24:33,499 --> 00:24:39,440
lot of a lot of ideas about what we want

00:24:37,729 --> 00:24:41,749
to do like detecting existing

00:24:39,440 --> 00:24:43,489
installations being able to shrink a

00:24:41,749 --> 00:24:46,099
windows system being able to shrink and

00:24:43,489 --> 00:24:47,899
existing Linux system things like that

00:24:46,099 --> 00:24:50,119
these are all things that we've

00:24:47,899 --> 00:24:52,070
incorporated into the storage workflow

00:24:50,119 --> 00:24:54,619
and and we dumped everything so if you

00:24:52,070 --> 00:24:58,309
were to do a custom layout it would it

00:24:54,619 --> 00:25:00,469
would look like this so we I mean it's

00:24:58,309 --> 00:25:03,849
not it's not like any of those previous

00:25:00,469 --> 00:25:05,899
screens and this has confused people but

00:25:03,849 --> 00:25:08,629
for the most part they've been able to

00:25:05,899 --> 00:25:11,139
figure it out because it does tell you

00:25:08,629 --> 00:25:14,059
what you need to know about the system

00:25:11,139 --> 00:25:16,609
and then once you've done all that stuff

00:25:14,059 --> 00:25:19,509
on the main screen or accepted the

00:25:16,609 --> 00:25:22,849
defaults you move on to installation and

00:25:19,509 --> 00:25:25,759
this is the second sort of hub that we

00:25:22,849 --> 00:25:28,309
call and while it's installing and doing

00:25:25,759 --> 00:25:30,200
things you can do other tasks in fedora

00:25:28,309 --> 00:25:33,379
18 the only task here what set the root

00:25:30,200 --> 00:25:38,629
password but the ability to add others

00:25:33,379 --> 00:25:41,389
is there i saw the root password ok so

00:25:38,629 --> 00:25:44,059
that was 18 now we have 19 beta which we

00:25:41,389 --> 00:25:46,489
just shipped so we've sort of fill out

00:25:44,059 --> 00:25:52,099
these screens a little more let me get

00:25:46,489 --> 00:25:55,650
back here come on so this still looks

00:25:52,099 --> 00:26:02,340
basically the same more on this

00:25:55,650 --> 00:26:05,310
they're so the installation source from

00:26:02,340 --> 00:26:08,790
updates down is new so if you want to

00:26:05,310 --> 00:26:12,150
add another repo we've done that package

00:26:08,790 --> 00:26:16,800
selection is still the same storage has

00:26:12,150 --> 00:26:18,900
built out more brought back all of the

00:26:16,800 --> 00:26:25,140
advanced storage capabilities that we

00:26:18,900 --> 00:26:33,300
had before I like that a slider there

00:26:25,140 --> 00:26:36,890
yeah yeah it keeps moving yeah stop

00:26:33,300 --> 00:26:39,120
touching the mic alright so one thing

00:26:36,890 --> 00:26:42,450
one thing that has thrown people off

00:26:39,120 --> 00:26:44,430
quite a bit long time redhat users with

00:26:42,450 --> 00:26:47,430
the new storage configuration here is

00:26:44,430 --> 00:26:50,760
that we we base it around the idea of a

00:26:47,430 --> 00:26:53,460
mount point as opposed to the device the

00:26:50,760 --> 00:26:58,110
previous systems we asks you what do you

00:26:53,460 --> 00:27:00,240
want to use dev sda1 for so it was kind

00:26:58,110 --> 00:27:01,530
of a bottom-up approach you know we

00:27:00,240 --> 00:27:03,780
asked you what do you want to use that

00:27:01,530 --> 00:27:05,040
for I want to use it for raid okay well

00:27:03,780 --> 00:27:06,540
find another device and we'll make it

00:27:05,040 --> 00:27:07,650
happen okay now you have a raid device

00:27:06,540 --> 00:27:11,340
what do you want to do with the raid

00:27:07,650 --> 00:27:13,830
device oh I want to use it in a lv m

00:27:11,340 --> 00:27:14,940
okay great add it to a volume pool now

00:27:13,830 --> 00:27:17,040
you have a volume people what do you

00:27:14,940 --> 00:27:19,200
want to do with that so we kept asking

00:27:17,040 --> 00:27:21,240
all those questions now what we do is we

00:27:19,200 --> 00:27:23,760
ask you what mount points are you trying

00:27:21,240 --> 00:27:25,770
to get you know you want home you want

00:27:23,760 --> 00:27:27,330
root let's say that's all you want now

00:27:25,770 --> 00:27:30,480
you define the technology that's

00:27:27,330 --> 00:27:33,990
underneath those so we we changed the

00:27:30,480 --> 00:27:35,670
way you you approach this and and of

00:27:33,990 --> 00:27:40,140
course that was Matt with confusion but

00:27:35,670 --> 00:27:43,430
I think most people have grown to either

00:27:40,140 --> 00:27:43,430
accept it or like it

00:27:46,220 --> 00:27:52,020
yeah so adding a new mount point I tried

00:27:50,640 --> 00:27:53,790
to get a screenshot here because we do

00:27:52,020 --> 00:27:56,940
have a little pop-up hints and the

00:27:53,790 --> 00:27:59,430
capacity you can previously you had to

00:27:56,940 --> 00:28:01,440
specify it in megabytes and now we we

00:27:59,430 --> 00:28:03,240
accept anything so we're back here this

00:28:01,440 --> 00:28:13,590
is the clean installation summary and

00:28:03,240 --> 00:28:19,770
then you can proceed oops yeah yeah I am

00:28:13,590 --> 00:28:21,690
Ryan I'm going to have to that's the

00:28:19,770 --> 00:28:27,960
last time I pawn this work off onto

00:28:21,690 --> 00:28:29,520
someone else okay so there yeah there's

00:28:27,960 --> 00:28:33,360
other screenshots there but you know it

00:28:29,520 --> 00:28:35,790
looks roughly the same so starting with

00:28:33,360 --> 00:28:38,280
the view in 2002 to what we have now

00:28:35,790 --> 00:28:41,520
it's it's definitely we've come a long

00:28:38,280 --> 00:28:44,010
way and how did we execute that while

00:28:41,520 --> 00:28:46,860
still allowing fedora to do releases

00:28:44,010 --> 00:28:53,430
while still supporting our rel releases

00:28:46,860 --> 00:28:54,990
and not totally going insane first some

00:28:53,430 --> 00:28:56,190
unique development limitations i

00:28:54,990 --> 00:28:58,980
mentioned these because oftentimes

00:28:56,190 --> 00:29:02,280
people forget how hard it is to develop

00:28:58,980 --> 00:29:03,930
an installer first off installer

00:29:02,280 --> 00:29:05,820
releases are tied to the OS release

00:29:03,930 --> 00:29:07,740
schedule there is no instance in

00:29:05,820 --> 00:29:10,080
recorded human history of anyone ever

00:29:07,740 --> 00:29:13,020
going and downloading an installer for

00:29:10,080 --> 00:29:15,390
an OS and trying it on their own the way

00:29:13,020 --> 00:29:18,000
you try a new OS installer is to install

00:29:15,390 --> 00:29:21,480
the OS which means that our releases are

00:29:18,000 --> 00:29:26,340
the OS releases we have no choice but to

00:29:21,480 --> 00:29:27,930
do that bugs are not allowed I already

00:29:26,340 --> 00:29:29,730
mentioned this we can't patch the

00:29:27,930 --> 00:29:33,420
Installer what we can do is release new

00:29:29,730 --> 00:29:35,490
media but we don't want to so we're very

00:29:33,420 --> 00:29:37,680
closely tied to the QA efforts of a

00:29:35,490 --> 00:29:40,920
release to the development schedule all

00:29:37,680 --> 00:29:43,410
of that delays in our development or

00:29:40,920 --> 00:29:45,210
problems in our development affect the

00:29:43,410 --> 00:29:47,520
entire project people are trying to

00:29:45,210 --> 00:29:50,280
install nightly builds or interim builds

00:29:47,520 --> 00:29:51,840
to do their work so they're dependent on

00:29:50,280 --> 00:29:55,410
what we're using which makes it really

00:29:51,840 --> 00:29:57,810
hard for us to incorporate major changes

00:29:55,410 --> 00:30:05,570
that might break things

00:29:57,810 --> 00:30:08,040
temporarily so starting the discussion

00:30:05,570 --> 00:30:12,450
when did we sit down and decide to do

00:30:08,040 --> 00:30:16,380
this well initially we decided to do

00:30:12,450 --> 00:30:17,550
this I want to say in 2008 correct me if

00:30:16,380 --> 00:30:27,720
I'm wrong when we did the storage

00:30:17,550 --> 00:30:29,460
back-end rewrite 10 I think yeah so we

00:30:27,720 --> 00:30:30,960
were very ambitious and we said yeah you

00:30:29,460 --> 00:30:32,490
know there's a lot of stuff we want to

00:30:30,960 --> 00:30:34,530
change in anaconda we want to change our

00:30:32,490 --> 00:30:37,380
storage back-end code oh and while we're

00:30:34,530 --> 00:30:40,200
at it we should redo the UI and we were

00:30:37,380 --> 00:30:43,470
only we were half the size half the team

00:30:40,200 --> 00:30:45,360
size that we are now so we quickly

00:30:43,470 --> 00:30:46,890
decided that that was not going to work

00:30:45,360 --> 00:30:48,840
so we just worked on the backend code

00:30:46,890 --> 00:30:52,860
and we said yeah we'll do the UI stuff

00:30:48,840 --> 00:30:56,180
later so here we are at the UI stuff and

00:30:52,860 --> 00:30:58,980
we're at fud Khan and Tempe Arizona and

00:30:56,180 --> 00:31:00,840
we were in a room similar to this except

00:30:58,980 --> 00:31:03,690
I guess it was a classroom and we just

00:31:00,840 --> 00:31:05,100
ideas just started coming out and we

00:31:03,690 --> 00:31:06,810
were up on the whiteboard and we were

00:31:05,100 --> 00:31:09,510
taking notes and we were adding things

00:31:06,810 --> 00:31:11,400
to wikis and stuff like that and really

00:31:09,510 --> 00:31:15,210
you know what all did we want to do what

00:31:11,400 --> 00:31:17,520
did we want in the new UI we made some

00:31:15,210 --> 00:31:19,950
large decisions but we had to postpone a

00:31:17,520 --> 00:31:21,750
lot of the work because we had a lot of

00:31:19,950 --> 00:31:23,670
other pending releases that we just

00:31:21,750 --> 00:31:29,910
could not get out of but we did capture

00:31:23,670 --> 00:31:33,210
that early discussion for later large

00:31:29,910 --> 00:31:36,300
decisions okay these are almost no

00:31:33,210 --> 00:31:39,000
brainers again but again if you're

00:31:36,300 --> 00:31:40,560
working on a large project these are

00:31:39,000 --> 00:31:42,660
kind of things that you need to think

00:31:40,560 --> 00:31:45,300
about and communicate with your

00:31:42,660 --> 00:31:47,310
contributors so for us the question of

00:31:45,300 --> 00:31:49,290
whether or not to switch to another

00:31:47,310 --> 00:31:51,480
language did come up you know we said

00:31:49,290 --> 00:31:53,160
well maybe we should think about using

00:31:51,480 --> 00:31:55,980
it out of the language ultimately we

00:31:53,160 --> 00:31:58,470
decided to stick with Python so many of

00:31:55,980 --> 00:32:00,030
the things that we use are written in

00:31:58,470 --> 00:32:02,040
Python yum of course is written in

00:32:00,030 --> 00:32:05,160
Python and we need to be able to

00:32:02,040 --> 00:32:07,530
communicate with that easily it came up

00:32:05,160 --> 00:32:10,560
in the discussion because we use gtk and

00:32:07,530 --> 00:32:11,430
we wanted to explore the possibility of

00:32:10,560 --> 00:32:15,540
having

00:32:11,430 --> 00:32:19,920
an easier interaction with gtk Python

00:32:15,540 --> 00:32:22,430
ended up being fine for that I think gtk

00:32:19,920 --> 00:32:24,780
is probably frustrating in any language

00:32:22,430 --> 00:32:29,220
but it was certainly something we had to

00:32:24,780 --> 00:32:34,200
consider we did decide to move to gtk3

00:32:29,220 --> 00:32:37,050
like gnome 3 is using and continues and

00:32:34,200 --> 00:32:39,570
get this actually did come up not with

00:32:37,050 --> 00:32:42,470
the old team but some people asked if we

00:32:39,570 --> 00:32:47,670
could explore other version control and

00:32:42,470 --> 00:32:50,190
interaction systems yeah for us we we

00:32:47,670 --> 00:32:52,860
have people spread out all over the

00:32:50,190 --> 00:32:54,660
world and we have a patch review process

00:32:52,860 --> 00:32:57,990
on a mailing list it's similar to the

00:32:54,660 --> 00:32:59,370
Linux kernel we did talk about you know

00:32:57,990 --> 00:33:01,020
maybe that should change maybe we should

00:32:59,370 --> 00:33:03,810
go to like a bug based workflow

00:33:01,020 --> 00:33:05,940
exclusively these are things that need

00:33:03,810 --> 00:33:08,130
to be documented and communicated to

00:33:05,940 --> 00:33:10,020
contributors and for us we decided not

00:33:08,130 --> 00:33:12,960
really to you know shake the boat on

00:33:10,020 --> 00:33:16,920
that or rock the boat on that so back to

00:33:12,960 --> 00:33:18,630
the design so later in 2011 we got

00:33:16,920 --> 00:33:21,630
together and we said you know okay we

00:33:18,630 --> 00:33:23,310
really have to get this going so we

00:33:21,630 --> 00:33:25,380
pulled out all of those notes that we

00:33:23,310 --> 00:33:27,510
took in Arizona and we started having

00:33:25,380 --> 00:33:29,880
the world's longest design meetings ever

00:33:27,510 --> 00:33:32,490
I never thought that I could sit through

00:33:29,880 --> 00:33:35,570
discussions for one screen that went

00:33:32,490 --> 00:33:39,030
four hours and then do it the next day

00:33:35,570 --> 00:33:43,020
but we did and we got a lot of good

00:33:39,030 --> 00:33:45,030
information out on the table we started

00:33:43,020 --> 00:33:47,610
collecting information we were doing

00:33:45,030 --> 00:33:49,890
mock up designs we scrapped a lot of

00:33:47,610 --> 00:33:52,500
stuff we kept running into problems with

00:33:49,890 --> 00:33:54,840
balancing advanced versus new user ideas

00:33:52,500 --> 00:33:57,600
so we want this thing to be an easy for

00:33:54,840 --> 00:33:59,730
new users to pick up but we don't want

00:33:57,600 --> 00:34:01,530
the advanced users the long time users

00:33:59,730 --> 00:34:03,180
to run screaming and saying you know

00:34:01,530 --> 00:34:09,060
you've turned this into a Mac how dare

00:34:03,180 --> 00:34:12,450
you but why was this part not done in

00:34:09,060 --> 00:34:14,850
the open so people have asked me this

00:34:12,450 --> 00:34:17,280
not many people but it has come up and

00:34:14,850 --> 00:34:18,870
when I think about just a general open

00:34:17,280 --> 00:34:20,820
source project you've got to start

00:34:18,870 --> 00:34:22,280
somewhere you have to have like a basis

00:34:20,820 --> 00:34:24,620
for people to build

00:34:22,280 --> 00:34:26,510
and start contributing for us we were

00:34:24,620 --> 00:34:29,179
starting from scratch effectively with

00:34:26,510 --> 00:34:31,190
this new UI so we needed to have you

00:34:29,179 --> 00:34:34,280
know our core design what are we word

00:34:31,190 --> 00:34:36,140
what are we working from and really to

00:34:34,280 --> 00:34:38,690
do that effectively it has to be a

00:34:36,140 --> 00:34:41,090
limited group for us since we're all

00:34:38,690 --> 00:34:43,100
working for red hat it works that way

00:34:41,090 --> 00:34:45,500
but other projects it may just be a core

00:34:43,100 --> 00:34:47,419
group on a project team or something

00:34:45,500 --> 00:34:49,130
like that but if you look at all open

00:34:47,419 --> 00:34:51,669
source projects major changes like that

00:34:49,130 --> 00:34:53,720
are usually the result of a small group

00:34:51,669 --> 00:34:54,919
proposing something large they've sat

00:34:53,720 --> 00:34:57,320
down they've talked it out and that's

00:34:54,919 --> 00:34:59,330
really what's going on here if you think

00:34:57,320 --> 00:35:02,150
about the Linux kernel and think about

00:34:59,330 --> 00:35:03,740
the very first release that came out it

00:35:02,150 --> 00:35:05,660
was a working colonel you know people

00:35:03,740 --> 00:35:07,910
had something to start from they they

00:35:05,660 --> 00:35:10,790
said okay I know this thing that seeing

00:35:07,910 --> 00:35:12,860
works it boots up I know what he's going

00:35:10,790 --> 00:35:14,120
for now I know how to contribute so

00:35:12,860 --> 00:35:19,730
that's what we were trying to get to

00:35:14,120 --> 00:35:21,410
from this what's in the rewrite all

00:35:19,730 --> 00:35:23,150
right the goal is the UI but yeah of

00:35:21,410 --> 00:35:24,920
course that affects everything we got

00:35:23,150 --> 00:35:28,370
new back end sub systems for almost

00:35:24,920 --> 00:35:30,260
everything except storage new GUI code

00:35:28,370 --> 00:35:33,080
and text mode which I haven't talked

00:35:30,260 --> 00:35:34,640
about it all but the the old text mode

00:35:33,080 --> 00:35:40,460
which was in curses base has been

00:35:34,640 --> 00:35:42,980
replaced gtk3 and parallel execution of

00:35:40,460 --> 00:35:44,330
background tasks which really speeds up

00:35:42,980 --> 00:35:46,780
stuff it takes a long time to download

00:35:44,330 --> 00:35:49,100
yum metadata and things like that

00:35:46,780 --> 00:35:51,770
formatting file systems doing all that

00:35:49,100 --> 00:35:56,660
kind of stuff anything we could make

00:35:51,770 --> 00:35:58,250
parallel we did and of course booting

00:35:56,660 --> 00:36:01,970
directly into anaconda we got rid of

00:35:58,250 --> 00:36:09,590
loader which was one of the best days of

00:36:01,970 --> 00:36:11,840
my life ever no more loader code so our

00:36:09,590 --> 00:36:13,790
interim iterative design process so we

00:36:11,840 --> 00:36:16,580
had this basis now he had this design

00:36:13,790 --> 00:36:18,980
what we're going for and then we went

00:36:16,580 --> 00:36:21,440
through revision after image let's just

00:36:18,980 --> 00:36:23,270
keep doing this and Chris you probably

00:36:21,440 --> 00:36:24,800
remember this it's like it's just

00:36:23,270 --> 00:36:26,690
changing over and over and over again

00:36:24,800 --> 00:36:29,180
and we would change it based on feedback

00:36:26,690 --> 00:36:31,490
that we got from people in the community

00:36:29,180 --> 00:36:33,260
maybe from other developers maybe from

00:36:31,490 --> 00:36:36,140
some internal testing some external

00:36:33,260 --> 00:36:40,520
testing there was always a reason

00:36:36,140 --> 00:36:44,180
our designer marine Duffy on the Fedora

00:36:40,520 --> 00:36:48,320
team was really helpful with this she

00:36:44,180 --> 00:36:50,660
would take all of these reviews do a new

00:36:48,320 --> 00:36:53,600
mock-up design and then her blog

00:36:50,660 --> 00:36:56,810
basically became the informal anaconda

00:36:53,600 --> 00:36:59,030
team design blog and it was quite

00:36:56,810 --> 00:37:01,370
helpful because she would explain how

00:36:59,030 --> 00:37:02,540
did we get to this point you know why

00:37:01,370 --> 00:37:06,050
were we needing to make this decision

00:37:02,540 --> 00:37:08,630
and then what the decision was and you

00:37:06,050 --> 00:37:10,130
know why why we did that it was useful

00:37:08,630 --> 00:37:14,480
we can oh we could always point back to

00:37:10,130 --> 00:37:17,030
it and tell people well you know this is

00:37:14,480 --> 00:37:18,740
the feedback we got and this is why and

00:37:17,030 --> 00:37:20,690
that's really important in projects you

00:37:18,740 --> 00:37:22,010
need to do that some projects can get

00:37:20,690 --> 00:37:23,780
away with saying you know we're doing

00:37:22,010 --> 00:37:26,090
something because I say so but those are

00:37:23,780 --> 00:37:28,070
oftentimes really small projects when

00:37:26,090 --> 00:37:29,690
you have projects that are large and

00:37:28,070 --> 00:37:31,850
especially projects where you want

00:37:29,690 --> 00:37:34,040
active contributors that's not

00:37:31,850 --> 00:37:37,940
sufficient you you do need to explain to

00:37:34,040 --> 00:37:40,340
people why a decision was made and mo mo

00:37:37,940 --> 00:37:42,140
really helped us out with this so

00:37:40,340 --> 00:37:45,290
establishing regular communication her

00:37:42,140 --> 00:37:48,800
blog did that discussions should take

00:37:45,290 --> 00:37:50,870
place in one location this was hard for

00:37:48,800 --> 00:37:53,000
us we primarily use a mailing list we're

00:37:50,870 --> 00:37:57,230
also on IRC during working hours not

00:37:53,000 --> 00:38:00,650
that doesn't really sink up we did sort

00:37:57,230 --> 00:38:04,310
of a symbol information on Mo's blog but

00:38:00,650 --> 00:38:06,530
that sort of came about informally it

00:38:04,310 --> 00:38:08,120
didn't it wasn't an official thing we

00:38:06,530 --> 00:38:11,030
probably could have done that better but

00:38:08,120 --> 00:38:12,770
we did get one location for these things

00:38:11,030 --> 00:38:14,570
summarized decisions and discussions

00:38:12,770 --> 00:38:16,070
that's what she did a lot of that

00:38:14,570 --> 00:38:18,320
information wasn't carried over to the

00:38:16,070 --> 00:38:19,910
Fedora wiki where we could point back to

00:38:18,320 --> 00:38:23,750
things and say well this is the policy

00:38:19,910 --> 00:38:25,670
and explain the design decision which is

00:38:23,750 --> 00:38:27,440
very important you know people if you

00:38:25,670 --> 00:38:31,720
explain things to them and do they

00:38:27,440 --> 00:38:34,610
listen oftentimes they're okay with it

00:38:31,720 --> 00:38:38,090
communication really having an open

00:38:34,610 --> 00:38:39,560
source project comes down to this you

00:38:38,090 --> 00:38:40,790
got to get everyone on the same page you

00:38:39,560 --> 00:38:42,770
got to understand things there are

00:38:40,790 --> 00:38:45,140
cultural differences or language

00:38:42,770 --> 00:38:49,119
differences tone doesn't follow through

00:38:45,140 --> 00:38:54,819
an email it's it's quite difficult

00:38:49,119 --> 00:38:57,220
so this this was Moe's blog yeah I

00:38:54,819 --> 00:38:58,809
didn't get a any of the screenshot sawed

00:38:57,220 --> 00:39:02,920
off of it but these were the things that

00:38:58,809 --> 00:39:06,430
we used primarily and it's here if you

00:39:02,920 --> 00:39:07,930
want to look at this later I guess so

00:39:06,430 --> 00:39:10,839
the basis coding so after we had that

00:39:07,930 --> 00:39:13,720
design we sat down we said okay let's

00:39:10,839 --> 00:39:15,430
going back to that Colonel example and

00:39:13,720 --> 00:39:16,809
elena's had the very basic colonel

00:39:15,430 --> 00:39:19,839
didn't really do much but it did do

00:39:16,809 --> 00:39:21,190
something compile and ran so we need to

00:39:19,839 --> 00:39:26,220
have something where people could start

00:39:21,190 --> 00:39:28,569
building off of so when you do this you

00:39:26,220 --> 00:39:31,930
lower the contributor barrier to entry

00:39:28,569 --> 00:39:34,900
if they don't know what you want they're

00:39:31,930 --> 00:39:37,509
going to really just either not do

00:39:34,900 --> 00:39:40,930
anything which is probably most common

00:39:37,509 --> 00:39:42,970
but then don't know where to start this

00:39:40,930 --> 00:39:45,819
also indirectly marked some things as

00:39:42,970 --> 00:39:49,240
final I know that's kind of anti open

00:39:45,819 --> 00:39:51,609
source but really when you're working on

00:39:49,240 --> 00:39:55,150
a project the sky is not necessarily the

00:39:51,609 --> 00:39:58,269
limit here you you need to you need to

00:39:55,150 --> 00:40:01,239
set some some scope limits on what

00:39:58,269 --> 00:40:03,900
people can do and helps guide the

00:40:01,239 --> 00:40:10,119
contributors of course keep contributors

00:40:03,900 --> 00:40:12,700
active so for us our contributors are

00:40:10,119 --> 00:40:14,440
primarily doing design feedback and

00:40:12,700 --> 00:40:18,430
testing feedback we are getting more

00:40:14,440 --> 00:40:21,400
code contributors but but not nearly as

00:40:18,430 --> 00:40:23,079
many as the testers and stuff but you do

00:40:21,400 --> 00:40:26,739
want those contributors that information

00:40:23,079 --> 00:40:29,829
is useful and you need to recognize them

00:40:26,739 --> 00:40:33,579
and you know appreciate what they're

00:40:29,829 --> 00:40:36,130
doing it can be really difficult at

00:40:33,579 --> 00:40:39,549
times you know one guy looking at one

00:40:36,130 --> 00:40:41,529
thing and most enterprises today realize

00:40:39,549 --> 00:40:43,569
that usernames and passwords alone

00:40:41,529 --> 00:40:46,150
aren't enough to keep their network seen

00:40:43,569 --> 00:40:46,960
from unauthorized intrusions that's my

00:40:46,150 --> 00:40:48,370
two facts

00:40:46,960 --> 00:40:50,740
authentication has gotten so popular

00:40:48,370 --> 00:40:52,810
lately but adds that extra layer of

00:40:50,740 --> 00:40:55,660
protection enterprise networks need to

00:40:52,810 --> 00:40:57,130
stay safe but what you may not know is

00:40:55,660 --> 00:40:59,470
that some two-factor authentication

00:40:57,130 --> 00:41:01,660
solutions they're better than others

00:40:59,470 --> 00:41:04,930
like two-factor strong authentication

00:41:01,660 --> 00:41:06,970
with wicked wicked goes beyond other

00:41:04,930 --> 00:41:09,580
authentication systems by being less

00:41:06,970 --> 00:41:12,400
expensive easier to implement and easier

00:41:09,580 --> 00:41:14,050
to use getting software based token

00:41:12,400 --> 00:41:16,900
clients built to run on all major

00:41:14,050 --> 00:41:19,500
devices and OSS including iOS and

00:41:16,900 --> 00:41:21,850
Android these tokens utilize a

00:41:19,500 --> 00:41:24,070
public/private key combination that's

00:41:21,850 --> 00:41:26,200
generated an on device so there aren't

00:41:24,070 --> 00:41:28,720
any shared secrets flying around or

00:41:26,200 --> 00:41:31,570
attackers to hijack or which require any

00:41:28,720 --> 00:41:33,430
special handling instead all keys are

00:41:31,570 --> 00:41:35,920
kept secure and private between the

00:41:33,430 --> 00:41:38,080
requesting token and your server which

00:41:35,920 --> 00:41:39,720
you control a mouse making it the most

00:41:38,080 --> 00:41:42,400
secure way possible to perform

00:41:39,720 --> 00:41:45,190
authentication encryption and with an

00:41:42,400 --> 00:41:47,980
extensive flexible API and support for

00:41:45,190 --> 00:41:49,960
protocols like ldap and radius wicket

00:41:47,980 --> 00:41:52,420
works with any enterprise network

00:41:49,960 --> 00:41:55,090
architecture to protect the IT systems

00:41:52,420 --> 00:41:57,520
vital to your enterprise download your

00:41:55,090 --> 00:41:58,900
wicked free trial today regardless of

00:41:57,520 --> 00:42:01,150
whether you're considering two-factor

00:41:58,900 --> 00:42:02,890
authentication for the first time or

00:42:01,150 --> 00:42:05,620
just ready to ditch your existing

00:42:02,890 --> 00:42:07,650
expensive key file system we can help

00:42:05,620 --> 00:42:12,560
with easy to implement easy

00:42:07,650 --> 00:42:12,560
use strong authentication from wicked

00:42:19,300 --> 00:42:21,360
you

00:42:56,940 --> 00:43:01,210
your customers rely on your website or

00:42:59,740 --> 00:43:03,580
application if it's slower

00:43:01,210 --> 00:43:06,520
non-responsive it infuriates your users

00:43:03,580 --> 00:43:08,350
and costs you money keeping your

00:43:06,520 --> 00:43:11,830
business critical systems humming along

00:43:08,350 --> 00:43:14,170
requires insight into what they're doing

00:43:11,830 --> 00:43:16,120
your system metrics tells stories

00:43:14,170 --> 00:43:18,130
stories that can reveal performance

00:43:16,120 --> 00:43:20,470
bottlenecks resource limitations and

00:43:18,130 --> 00:43:22,030
other problems but how do you keep an

00:43:20,470 --> 00:43:24,670
eye on all of your systems performance

00:43:22,030 --> 00:43:27,730
metrics in real-time and record this

00:43:24,670 --> 00:43:29,470
data for later analysis enter longview

00:43:27,730 --> 00:43:31,480
the new way to see what's really going

00:43:29,470 --> 00:43:33,640
on under the hood the long view

00:43:31,480 --> 00:43:35,710
dashboard lets you visualize the status

00:43:33,640 --> 00:43:38,170
of all your systems providing you with a

00:43:35,710 --> 00:43:41,530
bird's-eye view of your entire fleet you

00:43:38,170 --> 00:43:44,110
can sort by cpu memory swap processes

00:43:41,530 --> 00:43:45,880
load and network usage click a specific

00:43:44,110 --> 00:43:48,280
system to access its individual

00:43:45,880 --> 00:43:50,790
dashboard then click and drag to zoom in

00:43:48,280 --> 00:43:53,200
on chokepoints and get more detail

00:43:50,790 --> 00:43:54,850
comprehensive network data including

00:43:53,200 --> 00:43:57,190
inbound and outbound traffic is

00:43:54,850 --> 00:43:58,750
available on the network tab and disk

00:43:57,190 --> 00:44:00,670
rights and free space on the disk

00:43:58,750 --> 00:44:03,490
stabbed while the process Explorer

00:44:00,670 --> 00:44:06,040
displays usage statistics for individual

00:44:03,490 --> 00:44:08,200
processes the system info tab shows

00:44:06,040 --> 00:44:10,450
listening services active connections

00:44:08,200 --> 00:44:12,580
and available updates adding long view

00:44:10,450 --> 00:44:14,290
to a system is easy just click the

00:44:12,580 --> 00:44:16,420
button copy the one line installation

00:44:14,290 --> 00:44:18,880
command then run the command on your

00:44:16,420 --> 00:44:20,560
linux system to complete the process the

00:44:18,880 --> 00:44:22,750
agent will begin collecting data and

00:44:20,560 --> 00:44:24,590
sending it to longview then the graph

00:44:22,750 --> 00:44:27,170
start rolling

00:44:24,590 --> 00:44:29,540
use longview to gain visibility into

00:44:27,170 --> 00:44:33,280
your servers so when your website or app

00:44:29,540 --> 00:44:33,280
heats up it stays up

00:44:36,440 --> 00:44:41,250
when we created asterisk over a decade

00:44:39,180 --> 00:44:43,470
ago we could not have imagined that

00:44:41,250 --> 00:44:45,690
asterisk would not only become the most

00:44:43,470 --> 00:44:47,820
widely adopted open source communication

00:44:45,690 --> 00:44:49,860
software on the planet but that it would

00:44:47,820 --> 00:44:52,380
impact the entire industry in the way

00:44:49,860 --> 00:44:54,360
that it has today asterisk has found its

00:44:52,380 --> 00:44:56,970
way in the more than 170 countries and

00:44:54,360 --> 00:44:58,950
virtually every fortune 1000 company the

00:44:56,970 --> 00:45:01,050
success of asterisk has enabled a

00:44:58,950 --> 00:45:02,430
transition of power from the hands of

00:45:01,050 --> 00:45:04,710
the traditional proprietary phone

00:45:02,430 --> 00:45:07,110
vendors into the hands of the users and

00:45:04,710 --> 00:45:09,060
administrators of phone systems using

00:45:07,110 --> 00:45:10,290
this power our customers have created

00:45:09,060 --> 00:45:12,210
all sorts of business changing

00:45:10,290 --> 00:45:14,070
applications from small office phone

00:45:12,210 --> 00:45:16,350
systems to mission-critical call centers

00:45:14,070 --> 00:45:18,180
the international carrier networks in

00:45:16,350 --> 00:45:19,980
fact there's even an entire country

00:45:18,180 --> 00:45:22,350
those communications infrastructure runs

00:45:19,980 --> 00:45:24,510
on esters the gym has always been about

00:45:22,350 --> 00:45:26,220
creating technology that expands

00:45:24,510 --> 00:45:28,380
communications capabilities in ways that

00:45:26,220 --> 00:45:29,580
we could never have imagined and that's

00:45:28,380 --> 00:45:31,980
part of what's game-changing about

00:45:29,580 --> 00:45:34,680
Digium today we're doing it again this

00:45:31,980 --> 00:45:36,750
time by introducing a new family of HD

00:45:34,680 --> 00:45:38,880
IP phones that extends control of the

00:45:36,750 --> 00:45:40,620
user all the way to the desktop the

00:45:38,880 --> 00:45:42,330
launch of these new products represents

00:45:40,620 --> 00:45:44,430
the next phase indigenous history of

00:45:42,330 --> 00:45:46,830
innovation these are the first and only

00:45:44,430 --> 00:45:48,180
IP phones designed to fully leverage the

00:45:46,830 --> 00:45:49,860
power of esther's when we first

00:45:48,180 --> 00:45:51,510
discussed our expectations for building

00:45:49,860 --> 00:45:54,120
a family of phones for use with asterisk

00:45:51,510 --> 00:45:55,920
our requirements were pretty simple we

00:45:54,120 --> 00:45:57,660
asked the team to build the phones such

00:45:55,920 --> 00:45:59,880
that they were easy to install integrate

00:45:57,660 --> 00:46:01,710
provision and use I think you'll soon

00:45:59,880 --> 00:46:04,260
agree our engineers have delivered on

00:46:01,710 --> 00:46:05,910
that goal user feedback is validating

00:46:04,260 --> 00:46:08,010
that when it comes to operation with

00:46:05,910 --> 00:46:10,440
astro space systems including our own

00:46:08,010 --> 00:46:13,020
Switchvox based product these are the

00:46:10,440 --> 00:46:14,310
easiest to use best integrated most

00:46:13,020 --> 00:46:16,920
interoperable products on the market

00:46:14,310 --> 00:46:18,890
today the Digium family phones will

00:46:16,920 --> 00:46:21,000
initially include three IP des hommes

00:46:18,890 --> 00:46:22,890
uniquely designed to complement any

00:46:21,000 --> 00:46:24,780
asterisk or Switchvox based solution

00:46:22,890 --> 00:46:27,450
these phones are different for a number

00:46:24,780 --> 00:46:30,090
of reasons first there is clue sively

00:46:27,450 --> 00:46:31,530
designed for use with esters secondly

00:46:30,090 --> 00:46:33,140
we've made it really easy to

00:46:31,530 --> 00:46:35,520
autodiscover and provision the phones

00:46:33,140 --> 00:46:37,620
next we've made it easy for the phones

00:46:35,520 --> 00:46:39,170
to access information inside of asterisk

00:46:37,620 --> 00:46:41,170
allowing tight coupling

00:46:39,170 --> 00:46:43,160
between an application and the phone

00:46:41,170 --> 00:46:45,290
additionally we've created an

00:46:43,160 --> 00:46:47,420
applications engine that allows users

00:46:45,290 --> 00:46:50,660
and developers to create and run their

00:46:47,420 --> 00:46:52,430
own apps on the phone and finally we've

00:46:50,660 --> 00:46:54,380
done all of this at a very compelling

00:46:52,430 --> 00:46:56,059
price point at Digium we're always

00:46:54,380 --> 00:46:58,160
thinking of ways to give our customers

00:46:56,059 --> 00:47:00,680
the best value in business phone systems

00:46:58,160 --> 00:47:02,390
and also give them the power to create

00:47:00,680 --> 00:47:04,430
their own solutions or eating

00:47:02,390 --> 00:47:06,140
communications challenge will continue

00:47:04,430 --> 00:47:07,579
to push the boundaries not only to make

00:47:06,140 --> 00:47:09,650
astros cooler faster and more

00:47:07,579 --> 00:47:11,240
technologically feature-rich but to make

00:47:09,650 --> 00:47:13,730
asterisk and what communications even

00:47:11,240 --> 00:47:17,440
easier and together we'll change the way

00:47:13,730 --> 00:47:17,440
the world communicates again

00:47:27,829 --> 00:47:34,650
how's that sigh every way this is the

00:47:31,349 --> 00:47:36,809
way to better utilize all your resources

00:47:34,650 --> 00:47:40,260
and it makes managing all your resources

00:47:36,809 --> 00:47:44,119
pretty easy all of the innovation is

00:47:40,260 --> 00:47:47,640
happening in open source the

00:47:44,119 --> 00:47:49,440
collaborative nature and of the you know

00:47:47,640 --> 00:47:51,539
of the community and the speed at which

00:47:49,440 --> 00:47:53,519
these are these you know these these

00:47:51,539 --> 00:47:55,829
deficiencies these bugs are getting

00:47:53,519 --> 00:47:58,440
discovered and then fixed is the thing

00:47:55,829 --> 00:48:01,109
that really shows the power of the you

00:47:58,440 --> 00:48:02,760
know of the open source community it is

00:48:01,109 --> 00:48:06,990
global and it's definitely because of

00:48:02,760 --> 00:48:13,319
the users community people are extremely

00:48:06,990 --> 00:48:15,180
friendly and always ready to help if you

00:48:13,319 --> 00:48:17,490
go on tire see any day you'll see these

00:48:15,180 --> 00:48:19,220
guys helping each other out and they're

00:48:17,490 --> 00:48:21,930
all doing it like in a selfless manner

00:48:19,220 --> 00:48:24,920
the product is transparent for everyone

00:48:21,930 --> 00:48:28,109
everyone can look at the code base

00:48:24,920 --> 00:48:30,319
everyone can see how both dark is being

00:48:28,109 --> 00:48:35,849
built nothing nothing is proprietary

00:48:30,319 --> 00:48:38,430
everything is open in many ways it's

00:48:35,849 --> 00:48:42,930
absolutely vital to the the unborn

00:48:38,430 --> 00:48:47,130
health I'll stack the most exciting

00:48:42,930 --> 00:48:49,890
event in recent memory for me was our

00:48:47,130 --> 00:48:52,620
first developer boot camp

00:48:49,890 --> 00:48:55,260
and our call gave people I gave me two

00:48:52,620 --> 00:48:59,220
weeks notice to come attend I was

00:48:55,260 --> 00:49:03,390
expecting 25 or 30 people so we ended up

00:48:59,220 --> 00:49:06,240
with 87 people and had to go get more

00:49:03,390 --> 00:49:08,760
chairs into the room twice everything

00:49:06,240 --> 00:49:12,000
within cloud computing is commodity and

00:49:08,760 --> 00:49:15,090
is open source and so I don't think that

00:49:12,000 --> 00:49:16,830
you will you'll see anywhere where open

00:49:15,090 --> 00:49:19,860
source is not pervasive in cloud

00:49:16,830 --> 00:49:22,590
computing and so i think it's i think

00:49:19,860 --> 00:49:23,940
it's an assumption i think when you talk

00:49:22,590 --> 00:49:25,050
about cloud computing you're really

00:49:23,940 --> 00:49:30,600
talking about open source cloud

00:49:25,050 --> 00:49:33,750
computing cloud sac is a robust solution

00:49:30,600 --> 00:49:36,150
for large deployments you have dozens of

00:49:33,750 --> 00:49:40,050
data centers and thousands of servers in

00:49:36,150 --> 00:49:42,720
each data centers these hardware is

00:49:40,050 --> 00:49:46,200
going to fail and CloudStack is designed

00:49:42,720 --> 00:49:48,930
to handle number one that mass scale

00:49:46,200 --> 00:49:52,080
number two it's designed to handle the

00:49:48,930 --> 00:49:54,930
failure that inevitably happens in large

00:49:52,080 --> 00:49:59,160
deployments started working on cod tech

00:49:54,930 --> 00:50:02,430
over four years ago and it was the

00:49:59,160 --> 00:50:04,200
original set of people working on it had

00:50:02,430 --> 00:50:08,310
a background of delivering software

00:50:04,200 --> 00:50:12,540
telcos and service providers lots of QA

00:50:08,310 --> 00:50:16,170
lots of users actually using it high

00:50:12,540 --> 00:50:19,230
availability is the key feature multiple

00:50:16,170 --> 00:50:21,240
hypervisors support different network

00:50:19,230 --> 00:50:23,940
models you can pick up whatever suits

00:50:21,240 --> 00:50:26,190
you better while step management server

00:50:23,940 --> 00:50:29,880
can be deployed in different physical

00:50:26,190 --> 00:50:31,530
machines it definitely has a huge

00:50:29,880 --> 00:50:36,510
footprint it's being deployed everywhere

00:50:31,530 --> 00:50:39,090
there's a major movie studio that they

00:50:36,510 --> 00:50:42,300
were using cloudstack they were using it

00:50:39,090 --> 00:50:44,400
to transcode video and i thought that

00:50:42,300 --> 00:50:46,020
was terribly fascinating what i found

00:50:44,400 --> 00:50:49,290
more fascinating is what they did during

00:50:46,020 --> 00:50:52,080
lunch where they would spin up you know

00:50:49,290 --> 00:50:53,460
50 or 60 game servers then as soon as

00:50:52,080 --> 00:50:54,080
lunch was over they would destroy all

00:50:53,460 --> 00:50:57,320
the instance

00:50:54,080 --> 00:50:59,870
go back to doing real work cloudstack is

00:50:57,320 --> 00:51:01,640
vast it touches so many different

00:50:59,870 --> 00:51:03,530
aspects and there's no one person that's

00:51:01,640 --> 00:51:06,920
kind of like a master of all those

00:51:03,530 --> 00:51:10,070
realms I think clouds stack as a project

00:51:06,920 --> 00:51:12,320
is going to be one of the leaders simply

00:51:10,070 --> 00:51:17,420
because it's some of the most feature

00:51:12,320 --> 00:51:21,770
folan and and robust platforms out they

00:51:17,420 --> 00:51:24,040
were Adams senior living for the clouds

00:51:21,770 --> 00:51:24,040
dag

00:51:36,859 --> 00:51:38,920

YouTube URL: https://www.youtube.com/watch?v=-jR-p99YMp4


