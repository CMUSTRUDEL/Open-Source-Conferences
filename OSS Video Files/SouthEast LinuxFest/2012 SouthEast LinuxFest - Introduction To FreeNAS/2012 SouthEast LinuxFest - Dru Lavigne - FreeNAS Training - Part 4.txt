Title: 2012 SouthEast LinuxFest - Dru Lavigne - FreeNAS Training - Part 4
Publication date: 2014-01-16
Playlist: 2012 SouthEast LinuxFest - Introduction To FreeNAS
Description: 
	2012 SouthEast LinuxFest
Dru Lavigne
Full Day FreeNAS Training - Part 4
Managing ZFS, Using the CLI
Captions: 
	00:00:00,000 --> 00:00:05,279
the following presentation was recorded

00:00:02,490 --> 00:00:08,040
the 2012 southeast linux fest in

00:00:05,279 --> 00:00:10,410
charlotte north carolina it is licensed

00:00:08,040 --> 00:00:12,090
under a creative commons license for

00:00:10,410 --> 00:00:16,859
more information about the southeast

00:00:12,090 --> 00:00:19,230
linux fest visit www.lend expense org

00:00:16,859 --> 00:00:21,320
the southeast linux fest would like to

00:00:19,230 --> 00:00:23,279
thank the following diamond sponsors in

00:00:21,320 --> 00:00:28,170
2012 for helping make these videos

00:00:23,279 --> 00:00:30,029
possible so in this section we're going

00:00:28,170 --> 00:00:33,930
to take a look at some of the stuff you

00:00:30,029 --> 00:00:37,680
can do a ZFS so we'll look at creating a

00:00:33,930 --> 00:00:39,480
schedule for snapshots and replicating

00:00:37,680 --> 00:00:43,800
those to another system will talk a bit

00:00:39,480 --> 00:00:45,809
about CFS scrubs i will also figure out

00:00:43,800 --> 00:00:47,430
what command line utilities would be

00:00:45,809 --> 00:00:48,809
useful for people to know about and

00:00:47,430 --> 00:00:55,199
they'll make sure they get added to the

00:00:48,809 --> 00:00:57,239
course and then in the next section the

00:00:55,199 --> 00:00:59,550
last one we'll get into the plug in

00:00:57,239 --> 00:01:03,000
jails and how can we install software

00:00:59,550 --> 00:01:05,280
using ZFS so if we take a look at the

00:01:03,000 --> 00:01:06,900
system that we have going here if I

00:01:05,280 --> 00:01:10,890
remember correctly I think we just have

00:01:06,900 --> 00:01:15,150
one volume we didn't actually commit to

00:01:10,890 --> 00:01:16,950
making any data sets so right now all we

00:01:15,150 --> 00:01:19,790
have is a volume and it's not showing

00:01:16,950 --> 00:01:22,439
any data sets or Z vols underneath them

00:01:19,790 --> 00:01:26,280
so I'm going to go in and create a data

00:01:22,439 --> 00:01:28,560
set since we're just doing it for

00:01:26,280 --> 00:01:30,810
demonstration purposes I won't give it a

00:01:28,560 --> 00:01:33,320
quota or any reserved space so we'll

00:01:30,810 --> 00:01:33,320
just add it

00:01:41,570 --> 00:01:44,409
ok

00:01:44,670 --> 00:01:50,009
so you'll notice you can tell that a

00:01:47,490 --> 00:01:51,960
volume has data sets if it shows

00:01:50,009 --> 00:01:54,750
underneath it so we just sort of make

00:01:51,960 --> 00:01:58,500
little sub trees one of the things you

00:01:54,750 --> 00:02:00,960
can do ZFS does support nested data sets

00:01:58,500 --> 00:02:03,530
so you can create data sets within data

00:02:00,960 --> 00:02:07,409
sets if that's part of your strategy I

00:02:03,530 --> 00:02:09,600
often get confused I don't know if I'm

00:02:07,409 --> 00:02:12,000
making a data set within a data set or a

00:02:09,600 --> 00:02:14,220
data set on the volume so if I get

00:02:12,000 --> 00:02:16,500
confused I just closed all my data sets

00:02:14,220 --> 00:02:18,510
and the one that's left over is for the

00:02:16,500 --> 00:02:21,180
volume and I can go in and create as

00:02:18,510 --> 00:02:23,670
many data sets as I want so for the fun

00:02:21,180 --> 00:02:29,549
of it let's make a second data set which

00:02:23,670 --> 00:02:32,190
is called data set to and once that's

00:02:29,549 --> 00:02:35,130
created they should both show under

00:02:32,190 --> 00:02:38,640
volume 1 so we have data set one data

00:02:35,130 --> 00:02:41,819
set to the other things that we see in

00:02:38,640 --> 00:02:44,700
storage deal with our periodic snapshot

00:02:41,819 --> 00:02:46,860
tasks and replication tasks so we talked

00:02:44,700 --> 00:02:52,140
a little bit before on what a snapshot

00:02:46,860 --> 00:02:54,780
is so it's basically what that portion

00:02:52,140 --> 00:02:57,630
of the ZFS pool looked like at that

00:02:54,780 --> 00:03:00,390
point of time when you're taking

00:02:57,630 --> 00:03:04,950
snapshots you can either do the entire

00:03:00,390 --> 00:03:07,590
volume or you can do data sets so it's

00:03:04,950 --> 00:03:09,329
up to you when you're scheduling your

00:03:07,590 --> 00:03:12,480
snapshots what you'd like to take a

00:03:09,329 --> 00:03:14,670
picture of as a reminder and for those

00:03:12,480 --> 00:03:17,310
people that weren't here earlier when we

00:03:14,670 --> 00:03:21,739
went through the ZFS definitions a

00:03:17,310 --> 00:03:26,130
snapshot itself is a read-only copy and

00:03:21,739 --> 00:03:28,890
the snapshots typically you take them

00:03:26,130 --> 00:03:33,030
very often because they don't use up any

00:03:28,890 --> 00:03:35,160
space until data changes so a lot of

00:03:33,030 --> 00:03:37,950
administrators for example will take

00:03:35,160 --> 00:03:41,100
snapshots every five minutes which means

00:03:37,950 --> 00:03:44,340
they can actually restore data up to a

00:03:41,100 --> 00:03:47,040
five minute point in time and since the

00:03:44,340 --> 00:03:49,680
space is very little used unless you're

00:03:47,040 --> 00:03:53,040
changing a lot of data it's not taking

00:03:49,680 --> 00:03:55,110
up more space on your storage pool so it

00:03:53,040 --> 00:03:58,350
doesn't hurt to take a lot of snapshots

00:03:55,110 --> 00:04:01,560
it really depends upon how often

00:03:58,350 --> 00:04:04,020
do users have to recover files or to get

00:04:01,560 --> 00:04:06,360
older versions of files that will pretty

00:04:04,020 --> 00:04:10,200
well decide how often you like to take a

00:04:06,360 --> 00:04:11,880
snapshot depending upon your data set

00:04:10,200 --> 00:04:14,490
structure what you're actually storing

00:04:11,880 --> 00:04:18,420
on your data sets you may decide only

00:04:14,490 --> 00:04:20,400
some data sets contain files that people

00:04:18,420 --> 00:04:23,220
tend to need to get older versions of

00:04:20,400 --> 00:04:26,640
and decide just to take snapshots of

00:04:23,220 --> 00:04:29,720
that so it's really up to you snapshots

00:04:26,640 --> 00:04:33,840
are really cool and they're a really

00:04:29,720 --> 00:04:36,690
useful way to be able to restore data

00:04:33,840 --> 00:04:43,410
but they are not a substitute for a full

00:04:36,690 --> 00:04:47,760
backup the data the snapshot needs for

00:04:43,410 --> 00:04:50,160
the original ZFS volume to exist so if

00:04:47,760 --> 00:04:53,340
there's a catastrophic disaster and you

00:04:50,160 --> 00:04:55,890
lose your ZFS pool your snapshots are no

00:04:53,340 --> 00:04:59,850
good to you the snapshots are only

00:04:55,890 --> 00:05:02,970
useful if the original pool still exists

00:04:59,850 --> 00:05:05,550
so you still need a complete backup

00:05:02,970 --> 00:05:07,940
strategy but this is something that you

00:05:05,550 --> 00:05:10,680
can use to supplement your backups

00:05:07,940 --> 00:05:13,170
especially if you just need to access a

00:05:10,680 --> 00:05:15,660
small amount of files you want to don't

00:05:13,170 --> 00:05:17,750
want to dig out your off-site backups so

00:05:15,660 --> 00:05:22,700
there they're an elegant way of

00:05:17,750 --> 00:05:24,810
augmenting your backup strategy when you

00:05:22,700 --> 00:05:29,310
have the other thing I'll mention

00:05:24,810 --> 00:05:31,290
because it is read-only what you can do

00:05:29,310 --> 00:05:34,560
is create something called a clone and

00:05:31,290 --> 00:05:37,860
that's a read/write copy and the clone

00:05:34,560 --> 00:05:41,130
itself takes up no space until it starts

00:05:37,860 --> 00:05:43,980
making changes to the code so one

00:05:41,130 --> 00:05:47,490
strategy that you can do is you can take

00:05:43,980 --> 00:05:50,220
an existing snapshot clone it set it up

00:05:47,490 --> 00:05:52,620
as a share and let people go at that

00:05:50,220 --> 00:05:55,980
portion of the file system so they can

00:05:52,620 --> 00:06:00,240
go in and make changes to it if you ever

00:05:55,980 --> 00:06:02,760
destroy that clone those changes are

00:06:00,240 --> 00:06:07,130
lost but it is one way of getting that

00:06:02,760 --> 00:06:09,930
old data so we have something called

00:06:07,130 --> 00:06:12,740
periodic snapshot tasks so we now have a

00:06:09,930 --> 00:06:16,200
volume and two data sets

00:06:12,740 --> 00:06:19,620
and when you're creating a snapshot task

00:06:16,200 --> 00:06:22,950
what you're really doing come on we're

00:06:19,620 --> 00:06:26,310
let's keep going for me let's hope we

00:06:22,950 --> 00:06:28,080
can still get in there hopefully he'll

00:06:26,310 --> 00:06:31,080
load up for us what you're really doing

00:06:28,080 --> 00:06:33,900
is you're scheduling the automatic

00:06:31,080 --> 00:06:36,510
creation of snapshots you're saying how

00:06:33,900 --> 00:06:39,120
often you want snapshots to be created

00:06:36,510 --> 00:06:42,300
and whether you want it to be created on

00:06:39,120 --> 00:06:45,360
a full volume or on a particular data

00:06:42,300 --> 00:06:49,050
set and you can do on a data set per

00:06:45,360 --> 00:06:58,980
data set basis yeah wonder if we've lost

00:06:49,050 --> 00:07:06,080
our connection to not looking good if I

00:06:58,980 --> 00:07:06,080
still have I still have an IP

00:07:09,540 --> 00:07:18,780
well the course may get more

00:07:11,430 --> 00:07:21,030
intellectual than visual for you does

00:07:18,780 --> 00:07:32,370
anybody else still have theirs up where

00:07:21,030 --> 00:07:34,140
have we completely lost your 5161 I'm

00:07:32,370 --> 00:07:36,390
just wondering if it's me it says my

00:07:34,140 --> 00:07:51,570
connection is still up see if i can ping

00:07:36,390 --> 00:07:54,000
anybody you said 5161 i give now may

00:07:51,570 --> 00:07:58,740
just be my system that saw being picky

00:07:54,000 --> 00:08:05,420
oh thank you know i can ping yeah ok

00:07:58,740 --> 00:08:05,420
won't see she opens that would do it ok

00:08:10,989 --> 00:08:22,279
we look crawl over there well if it gets

00:08:20,539 --> 00:08:24,769
that bad I think we do have a snapshot

00:08:22,279 --> 00:08:27,080
or a picture of this we can only see

00:08:24,769 --> 00:08:37,430
what it looks like now what page are we

00:08:27,080 --> 00:08:41,839
on not quite as exciting as seeing it

00:08:37,430 --> 00:08:47,529
real are you going in there there we go

00:08:41,839 --> 00:08:47,529
maybe I'll see if she opens up

00:08:52,960 --> 00:08:56,100
it's trying

00:09:01,029 --> 00:09:05,589
now let's see what we can do here

00:09:09,430 --> 00:09:17,820
so how big we can get this not very big

00:09:22,880 --> 00:09:28,910
not there we are okay let's see what you

00:09:25,850 --> 00:09:32,570
have in your storage I'll take a look at

00:09:28,910 --> 00:09:34,400
your volumes so we do have that i'm just

00:09:32,570 --> 00:09:36,700
going to quick make a quick data set

00:09:34,400 --> 00:09:36,700
again

00:09:45,710 --> 00:09:48,580
ok

00:09:50,570 --> 00:09:56,690
and one more time so if we add a

00:09:52,640 --> 00:09:59,810
periodic snapshot tasks yes so if you've

00:09:56,690 --> 00:10:02,450
created volumes and data sets every task

00:09:59,810 --> 00:10:05,120
you create you have to say what it is

00:10:02,450 --> 00:10:07,190
that you want to take a snapshot of so

00:10:05,120 --> 00:10:09,980
you can make as many tasks as you want

00:10:07,190 --> 00:10:12,890
you can set different schedules for

00:10:09,980 --> 00:10:14,990
different data sets and again it's going

00:10:12,890 --> 00:10:16,820
to depend upon what sort of data you're

00:10:14,990 --> 00:10:18,910
storing on a data set and how often

00:10:16,820 --> 00:10:21,650
you'd want to be able to recover that if

00:10:18,910 --> 00:10:23,030
it's you want the same policy for the

00:10:21,650 --> 00:10:28,640
whole thing just go for your whole

00:10:23,030 --> 00:10:32,320
volume I'll go for the volume so test

00:10:28,640 --> 00:10:36,470
eight to one you can decide how long

00:10:32,320 --> 00:10:38,810
snapshots exist and by default they last

00:10:36,470 --> 00:10:42,650
for two weeks so you can set a period

00:10:38,810 --> 00:10:45,140
longer or shorter than apt and you can

00:10:42,650 --> 00:10:51,710
go up two years and it will take any

00:10:45,140 --> 00:10:54,350
integer value here no so you're gonna

00:10:51,710 --> 00:11:01,520
have to remember every 20 years or so to

00:10:54,350 --> 00:11:04,190
go in and when they say begin and end

00:11:01,520 --> 00:11:06,680
you're really saying I don't want you to

00:11:04,190 --> 00:11:08,840
take snapshots before this hour of the

00:11:06,680 --> 00:11:12,200
day and I don't want you to take

00:11:08,840 --> 00:11:14,180
snapshots after this hour of the day so

00:11:12,200 --> 00:11:16,070
you could have it go from midnight to

00:11:14,180 --> 00:11:18,500
midnight if you wanted it to and it

00:11:16,070 --> 00:11:20,960
would always take snapshots so it really

00:11:18,500 --> 00:11:24,500
depends upon when your users are

00:11:20,960 --> 00:11:28,010
actively changing files so if it's 925

00:11:24,500 --> 00:11:30,170
you can set it for nine to five you can

00:11:28,010 --> 00:11:31,820
also set the interval this I think

00:11:30,170 --> 00:11:33,980
they've changed people were complaining

00:11:31,820 --> 00:11:36,140
there weren't enough intervals out there

00:11:33,980 --> 00:11:40,430
so looks like you can go from anywhere

00:11:36,140 --> 00:11:42,770
from 15 minutes to one week so within

00:11:40,430 --> 00:11:45,800
that time period if I don't start or end

00:11:42,770 --> 00:11:48,290
between these times I can say take a

00:11:45,800 --> 00:11:55,820
snapshot every 15 minutes or take one

00:11:48,290 --> 00:11:58,280
every hour or take one once a day you

00:11:55,820 --> 00:12:00,290
can specify which days of the week so

00:11:58,280 --> 00:12:01,520
again if your users don't come in on the

00:12:00,290 --> 00:12:03,510
weekend you don't have to take a

00:12:01,520 --> 00:12:06,450
snapshot if they do you can

00:12:03,510 --> 00:12:08,970
specify the days so let's just go in

00:12:06,450 --> 00:12:10,890
we'll pick the shortest interval we

00:12:08,970 --> 00:12:13,530
won't keep it that long so keep it for

00:12:10,890 --> 00:12:16,470
two hours I assume it's between 9 and

00:12:13,530 --> 00:12:22,860
six for your time zone we'll take one

00:12:16,470 --> 00:12:25,590
every 15 minutes once you create a

00:12:22,860 --> 00:12:27,630
snapshot task it will appear under the

00:12:25,590 --> 00:12:30,930
tree so you can go in and change its

00:12:27,630 --> 00:12:33,420
settings the other thing you can do is

00:12:30,930 --> 00:12:35,700
you can view all of your snapshot tasks

00:12:33,420 --> 00:12:37,140
so if you've created a whole bunch you

00:12:35,700 --> 00:12:39,270
can see what they are and it gives you a

00:12:37,140 --> 00:12:43,500
summary of what's happening with each

00:12:39,270 --> 00:12:51,480
task so tell you your volume or data set

00:12:43,500 --> 00:12:54,840
and the settings for it you'll find that

00:12:51,480 --> 00:12:57,330
as soon as you create a snapshot task it

00:12:54,840 --> 00:12:59,210
will go in and make your snapshot and

00:12:57,330 --> 00:13:02,400
then it will follow your schedule

00:12:59,210 --> 00:13:05,640
because I've selected a volume and that

00:13:02,400 --> 00:13:09,300
volume contains one data set it creates

00:13:05,640 --> 00:13:11,700
a snapshot for each if I don't want to

00:13:09,300 --> 00:13:14,100
get all the data sets on a volume I

00:13:11,700 --> 00:13:18,030
should instead do on a data set for data

00:13:14,100 --> 00:13:21,270
sap basis and this will automatically

00:13:18,030 --> 00:13:23,760
happen every 15 minutes this will be

00:13:21,270 --> 00:13:28,320
really boring if we don't have any data

00:13:23,760 --> 00:13:30,420
that changes but on an active system

00:13:28,320 --> 00:13:33,120
where dad is changing you'll notice that

00:13:30,420 --> 00:13:36,800
you're you space will change and it will

00:13:33,120 --> 00:13:40,620
tell you give you basically an idea of

00:13:36,800 --> 00:13:43,170
how many megabytes or whatever data is

00:13:40,620 --> 00:13:45,990
changing within that interval because it

00:13:43,170 --> 00:13:50,130
will show the original and for each

00:13:45,990 --> 00:13:52,170
snapshot afterwards the same way have

00:13:50,130 --> 00:13:54,420
any questions on snapshot tasks why

00:13:52,170 --> 00:13:58,850
you'd want to create wander or what's

00:13:54,420 --> 00:13:58,850
happening with their scheduling yes

00:13:59,310 --> 00:14:05,050
yes so they're stored in a hidden

00:14:01,839 --> 00:14:09,279
directory so on the volume there will be

00:14:05,050 --> 00:14:12,490
a directory called ZFS and if you take a

00:14:09,279 --> 00:14:13,839
look at that it'll show you the snapshot

00:14:12,490 --> 00:14:15,639
so I think we can do that I know if

00:14:13,839 --> 00:14:20,980
you're going to be able to see because

00:14:15,639 --> 00:14:28,959
web shell doesn't display that well so

00:14:20,980 --> 00:14:32,889
LS mount vol 1 dot set FS and seems me

00:14:28,959 --> 00:14:37,000
they had it hidden directly because I

00:14:32,889 --> 00:14:41,050
can't spell that's why yes so it's

00:14:37,000 --> 00:14:50,680
always related to the data and it's

00:14:41,050 --> 00:14:52,779
still not showing it to me sorry yes so

00:14:50,680 --> 00:14:54,759
they really are dependent upon the pool

00:14:52,779 --> 00:15:02,860
which is why they're useless if your

00:14:54,759 --> 00:15:05,920
pool dies if I know if I SSH and I can

00:15:02,860 --> 00:15:09,250
see my gfs and they're always going to

00:15:05,920 --> 00:15:11,949
have a name that's basically related to

00:15:09,250 --> 00:15:15,040
a timestamp so you have an idea of what

00:15:11,949 --> 00:15:17,139
the date was and if I'm doing 15 minute

00:15:15,040 --> 00:15:20,110
intervals I can I can check my 15-minute

00:15:17,139 --> 00:15:22,740
times they'll show up in the snapshots

00:15:20,110 --> 00:15:22,740
yes

00:15:30,330 --> 00:15:35,560
yet so we're going to do replication

00:15:32,500 --> 00:15:38,170
task snacks so what we recommend is that

00:15:35,560 --> 00:15:41,230
the snapshots actually gets stored on a

00:15:38,170 --> 00:15:46,450
separate system so so that way they're

00:15:41,230 --> 00:15:50,230
safe we've had a lot of people ask how

00:15:46,450 --> 00:15:52,720
can I do this just to a USB Drive and

00:15:50,230 --> 00:15:55,870
right now you can't do that from the GUI

00:15:52,720 --> 00:15:59,140
but you could write a script that uses

00:15:55,870 --> 00:16:02,440
the ZFS commands to create a snapshot so

00:15:59,140 --> 00:16:04,420
there is a ZFS snapshot command and then

00:16:02,440 --> 00:16:06,850
you could cron that and have it go to

00:16:04,420 --> 00:16:08,860
your USB Drive but you'd be dropping

00:16:06,850 --> 00:16:11,170
down to the command line to make your

00:16:08,860 --> 00:16:14,740
script and you'd want to test it well

00:16:11,170 --> 00:16:19,020
before crowning it so the the GUI was

00:16:14,740 --> 00:16:22,270
designed let's send it to another system

00:16:19,020 --> 00:16:27,970
once you have snapshots you can do those

00:16:22,270 --> 00:16:31,990
replication tasks and replication tasks

00:16:27,970 --> 00:16:36,730
basically take your latest CFS snapshot

00:16:31,990 --> 00:16:39,520
and uses our sink over ssh to send it to

00:16:36,730 --> 00:16:42,520
another system obviously that other

00:16:39,520 --> 00:16:45,870
system has to be formatted with ZFS and

00:16:42,520 --> 00:16:48,910
it needs to be running our sink and ssh

00:16:45,870 --> 00:16:51,430
if that other system is another freenas

00:16:48,910 --> 00:16:54,160
box you're just gonna have to start the

00:16:51,430 --> 00:16:57,490
rsync in the ssh service object another

00:16:54,160 --> 00:17:02,470
now it's ready to go so when you add a

00:16:57,490 --> 00:17:05,949
replication task you can't do this until

00:17:02,470 --> 00:17:07,839
you have some snapshots so I'm just

00:17:05,949 --> 00:17:10,780
going to get this out of the way if

00:17:07,839 --> 00:17:14,199
there isn't anything showing under ZFS

00:17:10,780 --> 00:17:17,439
snapshots this drop down menu will be

00:17:14,199 --> 00:17:19,990
empty it's saying I don't see a volume

00:17:17,439 --> 00:17:22,300
or data set that has existing snapshots

00:17:19,990 --> 00:17:23,980
there's nothing for me to replicate so

00:17:22,300 --> 00:17:26,620
it won't let you make the replication

00:17:23,980 --> 00:17:28,510
task so if you go in here and there's

00:17:26,620 --> 00:17:30,100
not menu drop-down menu that's your

00:17:28,510 --> 00:17:32,860
problem you're going to have to check

00:17:30,100 --> 00:17:34,630
out your you either forgot to make your

00:17:32,860 --> 00:17:38,470
snapshot task or there was a problem

00:17:34,630 --> 00:17:40,929
making the snapshot you're going to have

00:17:38,470 --> 00:17:43,240
to tell it the name of the file system

00:17:40,929 --> 00:17:45,880
on the other system

00:17:43,240 --> 00:17:50,559
so if it's called backups or whatever

00:17:45,880 --> 00:17:53,890
you called it and this thing here this

00:17:50,559 --> 00:17:56,350
initialized remote side for once the

00:17:53,890 --> 00:17:59,500
only time you do that is if your

00:17:56,350 --> 00:18:01,990
replication gets stuck so occasionally

00:17:59,500 --> 00:18:05,710
there will be a problem replicating over

00:18:01,990 --> 00:18:08,140
a snapshot and replication just sort of

00:18:05,710 --> 00:18:10,690
stalls because it's saying i was

00:18:08,140 --> 00:18:13,600
expecting this snapshot name and i got

00:18:10,690 --> 00:18:16,660
this instead and the best way to fix

00:18:13,600 --> 00:18:20,290
that is to check that button now if you

00:18:16,660 --> 00:18:22,690
do that it's going to delete all the

00:18:20,290 --> 00:18:26,140
snapshots on the other side so you only

00:18:22,690 --> 00:18:28,050
do that if replication gets stuck but

00:18:26,140 --> 00:18:32,679
that will be a quick way to kick start

00:18:28,050 --> 00:18:36,940
replication by default it's going to

00:18:32,679 --> 00:18:38,890
come in on the default ssh and if you

00:18:36,940 --> 00:18:42,190
want to change the port you can as long

00:18:38,890 --> 00:18:44,650
as your ssh server is listening on

00:18:42,190 --> 00:18:47,140
another port and you're going to have to

00:18:44,650 --> 00:18:52,150
put in the host key for the remote

00:18:47,140 --> 00:18:58,780
system and you can find out on a freenas

00:18:52,150 --> 00:19:03,040
system if i go into replication i can

00:18:58,780 --> 00:19:05,140
view the public key so if i'm doing that

00:19:03,040 --> 00:19:07,690
on another free now system i can just

00:19:05,140 --> 00:19:11,650
cut and paste that public key into my

00:19:07,690 --> 00:19:14,800
replication task if it's not a freenas

00:19:11,650 --> 00:19:18,250
system you can use what's the command

00:19:14,800 --> 00:19:21,580
ssh there's a command that will let you

00:19:18,250 --> 00:19:23,650
view your key and it escapes me at the

00:19:21,580 --> 00:19:27,190
moment but there is an SSH command you

00:19:23,650 --> 00:19:32,340
can use to view your key so on anybody's

00:19:27,190 --> 00:19:36,070
took their tongue or no that creates it

00:19:32,340 --> 00:19:38,320
there is one that is just not coming to

00:19:36,070 --> 00:19:40,500
me that there is an SSH command to do

00:19:38,320 --> 00:19:40,500
that

00:19:45,950 --> 00:19:54,210
yeah so really the periodic snapshot

00:19:49,740 --> 00:19:56,070
task if you have your console on when

00:19:54,210 --> 00:19:58,170
you're doing it and you watch it you'll

00:19:56,070 --> 00:20:02,040
see what the ZFS command is and it's

00:19:58,170 --> 00:20:05,100
basically piping your ZFS snapshot ZFS

00:20:02,040 --> 00:20:07,590
send it's piping it to SSH so that's

00:20:05,100 --> 00:20:10,050
what's built into the GUI if you want to

00:20:07,590 --> 00:20:12,750
send it someplace else you would rewrite

00:20:10,050 --> 00:20:15,300
that in a cron job and you would pipe it

00:20:12,750 --> 00:20:20,190
to someplace else rather than typing it

00:20:15,300 --> 00:20:22,860
SSH so you're basically playing with ZFS

00:20:20,190 --> 00:20:26,210
send ZFS receive those are the two

00:20:22,860 --> 00:20:26,210
commands that get used yep

00:20:42,230 --> 00:20:49,669
yes and the one thing that people find

00:20:45,380 --> 00:20:52,340
out the hard way with ZFS you don't want

00:20:49,669 --> 00:20:54,049
to get low on pool space so you want

00:20:52,340 --> 00:20:56,630
also always want to make sure you feed

00:20:54,049 --> 00:20:58,640
it enough disk space some people will

00:20:56,630 --> 00:21:01,010
all go oh my god I'm running out of

00:20:58,640 --> 00:21:03,740
space and we'll start deleting data and

00:21:01,010 --> 00:21:07,220
they don't get the space back because

00:21:03,740 --> 00:21:09,380
they have a snapshot task created so as

00:21:07,220 --> 00:21:11,179
soon as they delete it that gets written

00:21:09,380 --> 00:21:13,580
to the snapshot so there's still a

00:21:11,179 --> 00:21:16,549
version of it so doesn't like ever get

00:21:13,580 --> 00:21:18,130
deleted so if you really get to the

00:21:16,549 --> 00:21:21,320
point where you're running out of space

00:21:18,130 --> 00:21:23,120
delete your snapshot tasks first and

00:21:21,320 --> 00:21:27,980
then start deleting data if you need to

00:21:23,120 --> 00:21:29,990
recover this space so we had a user do

00:21:27,980 --> 00:21:31,820
that recently and say I've gotten rid of

00:21:29,990 --> 00:21:33,440
eight gigs at his space that I'm getting

00:21:31,820 --> 00:21:39,799
out of it back what's happening and

00:21:33,440 --> 00:21:43,750
that's what the culprit was any other

00:21:39,799 --> 00:21:43,750
questions before we leave replication

00:21:44,200 --> 00:21:53,179
okay the last thing that we can do in

00:21:49,700 --> 00:21:55,820
storage which we touched on a bit when

00:21:53,179 --> 00:22:00,290
we talked a little bit about ZFS is

00:21:55,820 --> 00:22:02,900
something called ZFS scrubs the scrub

00:22:00,290 --> 00:22:06,380
only occurs on the volume so basically

00:22:02,900 --> 00:22:08,780
occurs on your storage pool and we

00:22:06,380 --> 00:22:10,850
mentioned in the definition that a ZFS

00:22:08,780 --> 00:22:13,850
scrub is very similar to like doing a

00:22:10,850 --> 00:22:17,510
memtest on memory it's going through all

00:22:13,850 --> 00:22:20,059
of your physical sectors to see if

00:22:17,510 --> 00:22:23,090
there's any problems with your disks and

00:22:20,059 --> 00:22:25,700
it will try to autocorrect things that

00:22:23,090 --> 00:22:27,700
it can correct and stuff that it can't

00:22:25,700 --> 00:22:31,220
correct it will send you an alert about

00:22:27,700 --> 00:22:34,760
so ZFS scrub is a good thing because it

00:22:31,220 --> 00:22:36,830
gives you an early indication of disks

00:22:34,760 --> 00:22:39,140
that are probably going to do a disk

00:22:36,830 --> 00:22:40,970
failure at some point so it's a good way

00:22:39,140 --> 00:22:46,090
to find out between that in your smart

00:22:40,970 --> 00:22:48,860
tests a ZFS scrub is going to be very IO

00:22:46,090 --> 00:22:50,600
intensive because it's basically going

00:22:48,860 --> 00:22:53,179
through all the blocks on all of your

00:22:50,600 --> 00:22:55,309
disks so it's not something that you're

00:22:53,179 --> 00:22:56,039
going to schedule for when users are

00:22:55,309 --> 00:23:00,149
active

00:22:56,039 --> 00:23:03,720
using the freenas system whenever you

00:23:00,149 --> 00:23:06,809
create a ZFS volume so your pool it

00:23:03,720 --> 00:23:10,649
automatically creates a test for you and

00:23:06,809 --> 00:23:12,720
this is something that changed let's see

00:23:10,649 --> 00:23:19,979
if we're still up something that changed

00:23:12,720 --> 00:23:22,229
between 80 4 and 8 too good so the

00:23:19,979 --> 00:23:24,629
default we added something called

00:23:22,229 --> 00:23:28,739
threshold days and you'll notice that

00:23:24,629 --> 00:23:33,179
that number is divisible by 7 usually

00:23:28,739 --> 00:23:35,159
the goal is let's do our tests on Sunday

00:23:33,179 --> 00:23:38,369
when we're going to have not that many

00:23:35,159 --> 00:23:40,830
users on the system so we'll have all

00:23:38,369 --> 00:23:43,769
that disk i/o intensive stuff happening

00:23:40,830 --> 00:23:47,249
then what happened before we put in

00:23:43,769 --> 00:23:49,739
threshold days this is basically a cron

00:23:47,249 --> 00:23:52,950
job that you're doing and you would find

00:23:49,739 --> 00:23:55,649
that if you set like a 20 a 30 day

00:23:52,950 --> 00:23:58,289
schedule it would be on a different day

00:23:55,649 --> 00:24:02,220
each month and it would start to impact

00:23:58,289 --> 00:24:04,379
users so we put in the threshold days we

00:24:02,220 --> 00:24:08,879
recommend whatever your threshold days

00:24:04,379 --> 00:24:14,369
is make sure it's divisible by 7 if you

00:24:08,879 --> 00:24:17,609
read the ZFS recommendations so we had

00:24:14,369 --> 00:24:19,919
links to that in the PDF it recommends

00:24:17,609 --> 00:24:22,049
that if you have data center quality

00:24:19,919 --> 00:24:25,049
drives that you do a scrub once a month

00:24:22,049 --> 00:24:28,499
and it recommends if you have consumer

00:24:25,049 --> 00:24:31,529
quality drives that you do a scrub once

00:24:28,499 --> 00:24:33,749
a week so if you're if you just have

00:24:31,529 --> 00:24:36,299
generic drives you'll want to change

00:24:33,749 --> 00:24:41,879
that to something like seven just so

00:24:36,299 --> 00:24:44,789
that it can go through your drives once

00:24:41,879 --> 00:24:48,269
you've picked your thresholds you then

00:24:44,789 --> 00:24:51,269
can decide at what time that occurs so

00:24:48,269 --> 00:24:59,789
the default time is at two fifteen in

00:24:51,269 --> 00:25:02,759
the morning on once a month once every

00:24:59,789 --> 00:25:05,009
month and it looks like it shouldn't be

00:25:02,759 --> 00:25:06,530
every that looks like a bug that should

00:25:05,009 --> 00:25:08,870
just be sunday

00:25:06,530 --> 00:25:13,610
because we're aiming for sunday off to

00:25:08,870 --> 00:25:14,870
ask about that oh okay I was going to

00:25:13,610 --> 00:25:16,460
say that doesn't look like the default

00:25:14,870 --> 00:25:19,580
to me but if I haven't played that

00:25:16,460 --> 00:25:21,230
deeply with this some this snapshot so

00:25:19,580 --> 00:25:23,780
typically you'll pick a day when you're

00:25:21,230 --> 00:25:26,720
going to have the least disk usage makes

00:25:23,780 --> 00:25:28,760
sure always occurs on that day and pick

00:25:26,720 --> 00:25:32,060
a time of the day or night that's going

00:25:28,760 --> 00:25:33,980
to be the Dilys intrusive how long it

00:25:32,060 --> 00:25:37,040
takes is really going to depend upon the

00:25:33,980 --> 00:25:38,870
size of those drives so you may want to

00:25:37,040 --> 00:25:41,750
start really early in the morning if you

00:25:38,870 --> 00:25:47,780
have a very large you know a lot of

00:25:41,750 --> 00:25:51,380
drives in your storage system any

00:25:47,780 --> 00:25:54,380
questions on the scrubs now one thing

00:25:51,380 --> 00:25:56,480
I'll mention there is a delete button we

00:25:54,380 --> 00:25:58,760
recommend that you don't delete the

00:25:56,480 --> 00:26:02,450
scrub because it really is an early

00:25:58,760 --> 00:26:06,100
indication of impending disk failure if

00:26:02,450 --> 00:26:09,650
you find what we were finding is that

00:26:06,100 --> 00:26:12,410
about once a month some users were

00:26:09,650 --> 00:26:17,750
saying my system locks up and those

00:26:12,410 --> 00:26:20,510
users typically had not very good disk

00:26:17,750 --> 00:26:23,030
i/o subsystems and they often had a very

00:26:20,510 --> 00:26:24,980
low amount of memory which CFS doesn't

00:26:23,030 --> 00:26:26,660
like anyways low memory and they were

00:26:24,980 --> 00:26:28,250
saying my system just locks up about

00:26:26,660 --> 00:26:31,130
once a month that works great and then a

00:26:28,250 --> 00:26:34,010
locks up and the culprit tended to be

00:26:31,130 --> 00:26:36,380
your ZFS scrub was running and it was

00:26:34,010 --> 00:26:38,690
too much for the system to handle that's

00:26:36,380 --> 00:26:44,300
typically only going to happen on really

00:26:38,690 --> 00:26:46,430
low end systems if you find that the

00:26:44,300 --> 00:26:49,670
system you're running on tends to become

00:26:46,430 --> 00:26:52,660
unresponsive during the scrub what we

00:26:49,670 --> 00:26:56,090
recommend is that you disable it

00:26:52,660 --> 00:26:58,220
temporarily until you can either get

00:26:56,090 --> 00:27:01,490
more memory in there or a better disk

00:26:58,220 --> 00:27:02,870
subsystem because you really do want to

00:27:01,490 --> 00:27:07,220
know if something's happening with your

00:27:02,870 --> 00:27:09,260
disks we do give you a delete button but

00:27:07,220 --> 00:27:12,080
we usually ask that you disable it

00:27:09,260 --> 00:27:15,050
instead of delete it if you either by

00:27:12,080 --> 00:27:18,119
mistake or whatever do delete it or you

00:27:15,050 --> 00:27:20,519
can just go in and add a scrub

00:27:18,119 --> 00:27:22,859
and it will give you the same menu and

00:27:20,519 --> 00:27:24,929
yeah there's a default just Sunday okay

00:27:22,859 --> 00:27:29,699
I feel better now I thought they

00:27:24,929 --> 00:27:32,279
introduced a bug so that's basically our

00:27:29,699 --> 00:27:33,839
ZFS management so we already talked

00:27:32,279 --> 00:27:36,299
about how to make the datasets in that

00:27:33,839 --> 00:27:39,119
you can make your snapshots replicate

00:27:36,299 --> 00:27:44,249
them to another system and do your ZFS

00:27:39,119 --> 00:27:55,019
scrubs any questions before we leave ZFS

00:27:44,249 --> 00:27:59,309
management okay when you do get a chance

00:27:55,019 --> 00:28:01,199
to go through the PDF page 41 actually

00:27:59,309 --> 00:28:02,759
shows you how to copy the keys on that

00:28:01,199 --> 00:28:11,969
so when you're setting up your

00:28:02,759 --> 00:28:13,259
replication task so they go through the

00:28:11,969 --> 00:28:15,419
other thing that we have we've already

00:28:13,259 --> 00:28:18,149
talked about web shell we've used it a

00:28:15,419 --> 00:28:19,799
couple of times doing do we know where

00:28:18,149 --> 00:28:21,479
the lights are here or is that managed

00:28:19,799 --> 00:28:23,489
someplace else I'm just wondering if you

00:28:21,479 --> 00:28:26,159
can see web shell better if we dim the

00:28:23,489 --> 00:28:28,889
lights for a minute that's going to show

00:28:26,159 --> 00:28:37,649
up any better because right now you

00:28:28,889 --> 00:28:43,169
can't really see anything yeah I don't

00:28:37,649 --> 00:28:44,939
know and that's still not better okay so

00:28:43,169 --> 00:28:50,099
you know might as well turn the lights

00:28:44,939 --> 00:28:53,569
on you can't see anything so if you do

00:28:50,099 --> 00:28:56,129
get a chance to play with the iso i

00:28:53,569 --> 00:28:58,609
recommend open up web shelf your command

00:28:56,129 --> 00:29:01,829
line person just to see what you can do

00:28:58,609 --> 00:29:06,209
there are a couple of limitations and

00:29:01,829 --> 00:29:09,239
web shell so freenas itself is freebsd

00:29:06,209 --> 00:29:11,849
but it is a stripped-down embedded

00:29:09,239 --> 00:29:14,369
version of freebsd so they've stripped

00:29:11,849 --> 00:29:18,299
out a lot of stuff one to make sure it

00:29:14,369 --> 00:29:21,959
fits on the thumb drive and two just to

00:29:18,299 --> 00:29:23,849
make sure that it's suited for storage

00:29:21,959 --> 00:29:25,849
so they've taken out a lot of stuff that

00:29:23,849 --> 00:29:28,679
doesn't belong in a storage appliance

00:29:25,849 --> 00:29:29,080
one of the things that there wasn't room

00:29:28,679 --> 00:29:31,980
for

00:29:29,080 --> 00:29:34,710
were on the image was man pages and

00:29:31,980 --> 00:29:36,880
typically if you're at the command line

00:29:34,710 --> 00:29:39,280
the first thing you do before you run a

00:29:36,880 --> 00:29:41,310
command is you read the man page so man

00:29:39,280 --> 00:29:45,880
is not going to work in web shell

00:29:41,310 --> 00:29:49,090
heavens said that all of freebsd s man

00:29:45,880 --> 00:29:51,340
pages are online so because you're

00:29:49,090 --> 00:29:54,550
already in your web browser anyways you

00:29:51,340 --> 00:29:56,980
can just go to the the online man pages

00:29:54,550 --> 00:30:01,090
and read what you need to read and the

00:29:56,980 --> 00:30:02,800
URL for those man pages on page 44 so

00:30:01,090 --> 00:30:04,750
you can just go in and search for any me

00:30:02,800 --> 00:30:09,460
on page so it's typically what I do

00:30:04,750 --> 00:30:11,140
because I really do miss man pages by

00:30:09,460 --> 00:30:12,970
default you're thrown into the bash

00:30:11,140 --> 00:30:15,190
shell because that's the shell that most

00:30:12,970 --> 00:30:18,210
people are comfortable with you can

00:30:15,190 --> 00:30:24,280
change to other shells I know extended

00:30:18,210 --> 00:30:26,910
CSH is there I don't think the Z shell

00:30:24,280 --> 00:30:30,730
is there but I know the extended what is

00:30:26,910 --> 00:30:33,130
you do get history you get command line

00:30:30,730 --> 00:30:34,780
completions you can type tab and it will

00:30:33,130 --> 00:30:37,630
fill out the rest of the commander your

00:30:34,780 --> 00:30:39,250
file for you and you can use your up and

00:30:37,630 --> 00:30:42,840
down arrows to scroll through your

00:30:39,250 --> 00:30:46,060
history so it is convenient that way

00:30:42,840 --> 00:30:48,400
basically most of the commands that are

00:30:46,060 --> 00:30:54,850
avail want a freebsd system are

00:30:48,400 --> 00:31:00,840
available there and often this will be

00:30:54,850 --> 00:31:03,490
helpful to do things like to run say ZF

00:31:00,840 --> 00:31:06,460
zpool commands to check the status of

00:31:03,490 --> 00:31:08,260
things that sort of stuff now i did have

00:31:06,460 --> 00:31:10,450
a couple of commands that i thought

00:31:08,260 --> 00:31:12,370
would be useful and then I sort of ran

00:31:10,450 --> 00:31:14,560
out of imagination and didn't know what

00:31:12,370 --> 00:31:18,700
people would want to do in a shell so we

00:31:14,560 --> 00:31:20,740
may add to that and looks again even the

00:31:18,700 --> 00:31:25,770
PDF doesn't show up that big but we'll

00:31:20,740 --> 00:31:25,770
see what luck we have so it's page 45

00:31:31,480 --> 00:31:40,240
let's see if we get a decent job you on

00:31:34,580 --> 00:31:42,620
this that's two hundred percent okay

00:31:40,240 --> 00:31:45,799
that's a little bit better at least we

00:31:42,620 --> 00:31:49,190
can see the the print so often a useful

00:31:45,799 --> 00:31:52,549
command is to do a zpool status and this

00:31:49,190 --> 00:31:55,309
will show you all of the disks that have

00:31:52,549 --> 00:31:57,769
been fed to the pool and usually what

00:31:55,309 --> 00:32:00,889
you're interested in is their state and

00:31:57,769 --> 00:32:02,330
you do want to see things like online

00:32:00,889 --> 00:32:05,360
you don't want to see things like

00:32:02,330 --> 00:32:09,380
degraded because that typically means

00:32:05,360 --> 00:32:11,480
there's a problem with that disk the one

00:32:09,380 --> 00:32:14,960
thing I didn't show you we can probably

00:32:11,480 --> 00:32:21,409
take a look at that and then go back to

00:32:14,960 --> 00:32:24,470
our volumes we didn't take a look at

00:32:21,409 --> 00:32:27,769
view disks so whenever you create a

00:32:24,470 --> 00:32:30,350
volume it's going to show you the

00:32:27,769 --> 00:32:33,730
information about the disks let's see we

00:32:30,350 --> 00:32:36,730
got here might not be so exciting in a

00:32:33,730 --> 00:32:36,730
yeah

00:32:49,210 --> 00:32:53,690
did you do you know how many did you

00:32:52,250 --> 00:32:58,640
just have the one discourage you have a

00:32:53,690 --> 00:33:00,080
bunch of this that's why okay I was

00:32:58,640 --> 00:33:02,810
going to say it's not very exciting

00:33:00,080 --> 00:33:05,390
right now typically if you fed a bunch

00:33:02,810 --> 00:33:07,940
of dis it'll show all of your discs and

00:33:05,390 --> 00:33:13,180
you can then match it up to what shows

00:33:07,940 --> 00:33:15,860
in zpool so it'll show the freebsd name

00:33:13,180 --> 00:33:18,140
for it so if you actually need to see

00:33:15,860 --> 00:33:22,250
what disc it is so in this particular

00:33:18,140 --> 00:33:24,080
one there aren't any any problems it's

00:33:22,250 --> 00:33:25,820
also not very exciting there was any

00:33:24,080 --> 00:33:31,640
data on those discs I just took a

00:33:25,820 --> 00:33:36,620
screenshot another command that you can

00:33:31,640 --> 00:33:38,360
do is you can do a ZFS list but don't

00:33:36,620 --> 00:33:41,030
take what it gives you to the bank

00:33:38,360 --> 00:33:43,460
because until we have CFS d you're not

00:33:41,030 --> 00:33:46,700
going to get really good data on your

00:33:43,460 --> 00:33:50,000
disk usage but it will give you sort of

00:33:46,700 --> 00:33:52,220
an idea of what your use spaces and want

00:33:50,000 --> 00:33:56,660
your available disk space is but it's

00:33:52,220 --> 00:33:58,490
not going to be completely accurate you

00:33:56,660 --> 00:34:00,770
can go and look at your messages at any

00:33:58,490 --> 00:34:02,690
time doing a tale of our log messages

00:34:00,770 --> 00:34:05,390
and if you want to watch it live if you

00:34:02,690 --> 00:34:07,700
do a tail hyphen F and that's where my

00:34:05,390 --> 00:34:10,010
imagination ran out so is there anything

00:34:07,700 --> 00:34:14,980
else you guys would like to know what

00:34:10,010 --> 00:34:14,980
would be the command to do whatever I

00:34:17,470 --> 00:34:22,190
know you guys have much imagination as I

00:34:20,629 --> 00:34:25,340
did what I was trying to think what

00:34:22,190 --> 00:34:28,490
commands to do what do you usually do

00:34:25,340 --> 00:34:33,080
with ZFS Chris but do you do anything

00:34:28,490 --> 00:34:35,000
other knows too yeah so I'm going to add

00:34:33,080 --> 00:34:36,860
that one where you find out the version

00:34:35,000 --> 00:34:39,290
or it basically showed you the table and

00:34:36,860 --> 00:34:40,580
it stopped at 15 so i'll add them I'm

00:34:39,290 --> 00:34:45,530
just trying to think what else would be

00:34:40,580 --> 00:34:47,090
useful maybe you know how to do it linux

00:34:45,530 --> 00:34:49,480
but you're not sure if it's the same in

00:34:47,090 --> 00:34:49,480
freebsd

00:34:51,630 --> 00:34:59,880
if anything comes to anybody will who

00:34:55,180 --> 00:35:03,280
will make sure that we add it whatsapp

00:34:59,880 --> 00:35:04,990
for whatever so what if you had a

00:35:03,280 --> 00:35:06,160
storage appliance and you had a show

00:35:04,990 --> 00:35:18,060
where you could do anything what would

00:35:06,160 --> 00:35:18,060
you do yeah

00:35:20,110 --> 00:35:28,520
yeah so yeah so we got ZFS debt or ZFS

00:35:24,350 --> 00:35:36,500
status as well okay time I remember

00:35:28,520 --> 00:35:38,000
where I am okay so we can do a ZFS

00:35:36,500 --> 00:35:53,920
status do you usually do a switch with

00:35:38,000 --> 00:35:56,300
it or okay yeah yeah cuz I H is human

00:35:53,920 --> 00:35:59,150
output so will show your gigs my

00:35:56,300 --> 00:36:03,940
megabytes terabytes whatever do you have

00:35:59,150 --> 00:36:07,090
switch H so disk free human output

00:36:03,940 --> 00:36:07,090
anything else

00:36:21,430 --> 00:36:25,890
okay so search for a CI

00:36:34,789 --> 00:36:37,599
ok

00:36:59,589 --> 00:37:06,799
what time is the next break okay we're

00:37:04,819 --> 00:37:09,309
doing good done well that's the time to

00:37:06,799 --> 00:37:09,309
play with plugins

00:37:27,500 --> 00:37:33,050
we'll give that a minute see if we can

00:37:30,980 --> 00:37:36,950
get back into her and we'll take a look

00:37:33,050 --> 00:37:39,860
at the disks one things we should

00:37:36,950 --> 00:37:43,310
probably do is we'll do a little intro

00:37:39,860 --> 00:37:45,410
into the design of the plugins jail so

00:37:43,310 --> 00:37:49,480
when we come back from break we can just

00:37:45,410 --> 00:37:49,480
go ahead and start installing plugins

00:37:51,880 --> 00:37:57,650
has anybody used FreeBSD jails before

00:37:55,520 --> 00:38:05,540
sorry people familiar with that concept

00:37:57,650 --> 00:38:07,520
okay yes I know chris is so the when the

00:38:05,540 --> 00:38:10,040
in the new design of FreeNAS the

00:38:07,520 --> 00:38:12,440
operating system itself is just a tight

00:38:10,040 --> 00:38:13,940
court so it's the stuff that's deemed to

00:38:12,440 --> 00:38:17,000
be something you have to have in a

00:38:13,940 --> 00:38:19,070
storage operating system so the ability

00:38:17,000 --> 00:38:22,490
to create shares volumes permissions

00:38:19,070 --> 00:38:25,610
that sort of stuff a lot of people like

00:38:22,490 --> 00:38:28,100
to add additional software and it really

00:38:25,610 --> 00:38:29,660
depends upon the type of data that

00:38:28,100 --> 00:38:32,960
you're storing and what you want to do

00:38:29,660 --> 00:38:37,600
with that data so what people tend to

00:38:32,960 --> 00:38:40,910
miss the most is things dealing with say

00:38:37,600 --> 00:38:45,110
movies or sounds so things like the

00:38:40,910 --> 00:38:48,170
ability to do you pnp a lot of people do

00:38:45,110 --> 00:38:50,210
a lot of funky stuff on thank you a lot

00:38:48,170 --> 00:38:52,940
of people do a lot of funky stuff on

00:38:50,210 --> 00:38:54,920
their storage appliances which some

00:38:52,940 --> 00:38:56,990
purists would think well that doesn't

00:38:54,920 --> 00:39:00,410
belong on a storage appliance so you

00:38:56,990 --> 00:39:03,190
have people installing development

00:39:00,410 --> 00:39:05,870
environments you have people installing

00:39:03,190 --> 00:39:09,110
different types of file systems that

00:39:05,870 --> 00:39:14,380
didn't come with eos just basically

00:39:09,110 --> 00:39:16,550
anything that you can do so one way to

00:39:14,380 --> 00:39:21,200
basically extend the functionality

00:39:16,550 --> 00:39:24,590
without touching that core OS was to use

00:39:21,200 --> 00:39:29,720
freebsd jails and a freebsd jail

00:39:24,590 --> 00:39:33,140
basically allows you to install another

00:39:29,720 --> 00:39:37,370
version of freebsd on a host operating

00:39:33,140 --> 00:39:39,890
system as far as that new installation

00:39:37,370 --> 00:39:41,720
is concerned it's pretty much like

00:39:39,890 --> 00:39:44,240
having another freebsd

00:39:41,720 --> 00:39:46,340
installation it's not quite the same

00:39:44,240 --> 00:39:48,560
because some things get shared from the

00:39:46,340 --> 00:39:51,830
host but it's basically its own

00:39:48,560 --> 00:39:53,450
environment and with jails it's a little

00:39:51,830 --> 00:39:55,420
bit different than the other

00:39:53,450 --> 00:39:59,030
virtualization environments out there

00:39:55,420 --> 00:40:01,160
because it's very lightweight and it was

00:39:59,030 --> 00:40:04,099
something that became very popular with

00:40:01,160 --> 00:40:09,230
ISPs it's a different way to do hosting

00:40:04,099 --> 00:40:12,290
so you can for example on one server set

00:40:09,230 --> 00:40:14,930
up tens of thousands of jails and it can

00:40:12,290 --> 00:40:19,070
actually take that so it's not very

00:40:14,930 --> 00:40:21,320
heavy weight say like an esxi or doing

00:40:19,070 --> 00:40:23,060
virtual box or something so it's a

00:40:21,320 --> 00:40:27,590
different way to get different operating

00:40:23,060 --> 00:40:32,210
systems and each jail will have its own

00:40:27,590 --> 00:40:34,670
set of users it will have its own root

00:40:32,210 --> 00:40:37,040
access and you can install its own

00:40:34,670 --> 00:40:41,140
software and it's separate from the

00:40:37,040 --> 00:40:46,430
other jails and it's also it separated

00:40:41,140 --> 00:40:49,369
security from the the base system

00:40:46,430 --> 00:40:51,920
hosting the jails so the whole idea is

00:40:49,369 --> 00:40:55,640
typically you would run services and

00:40:51,920 --> 00:40:58,400
jails and if that jail for example got

00:40:55,640 --> 00:41:01,160
compromised it doesn't affect the host

00:40:58,400 --> 00:41:03,080
operating system and it doesn't affect

00:41:01,160 --> 00:41:05,720
any other jails that are installed in

00:41:03,080 --> 00:41:09,349
the environment so it's a perfect place

00:41:05,720 --> 00:41:12,230
for running say internet-facing servers

00:41:09,349 --> 00:41:14,960
so it's it's basically its own

00:41:12,230 --> 00:41:17,330
restricted environment so this is a

00:41:14,960 --> 00:41:19,730
perfect place to go in and install

00:41:17,330 --> 00:41:21,530
additional software that's going to be

00:41:19,730 --> 00:41:23,599
separate from your storage it's not

00:41:21,530 --> 00:41:25,280
going to affect your stored data it's

00:41:23,599 --> 00:41:28,700
not going to affect your host operating

00:41:25,280 --> 00:41:31,339
system it doesn't affect your config but

00:41:28,700 --> 00:41:33,589
you can still install stuff and enable

00:41:31,339 --> 00:41:36,619
those services so it's a whole idea

00:41:33,589 --> 00:41:40,420
behind that one of the things that

00:41:36,619 --> 00:41:44,150
FreeNAS added to their design which

00:41:40,420 --> 00:41:46,130
currently is not in freebsd jails it's

00:41:44,150 --> 00:41:49,520
still in the development version is

00:41:46,130 --> 00:41:52,580
something called the image so one of the

00:41:49,520 --> 00:41:55,099
traditional problems with jails is they

00:41:52,580 --> 00:41:55,850
shared the network stack with the host

00:41:55,099 --> 00:41:58,220
OS

00:41:55,850 --> 00:42:01,850
so you couldn't do things like I have

00:41:58,220 --> 00:42:03,800
multiple broadcast addresses / jails you

00:42:01,850 --> 00:42:06,260
couldn't do things like have multiple

00:42:03,800 --> 00:42:09,530
firewalls so East jail has its own

00:42:06,260 --> 00:42:11,990
firewall you can do things like heaven

00:42:09,530 --> 00:42:14,840
in your own ipsec set up in different

00:42:11,990 --> 00:42:17,420
jails they had to share that but with

00:42:14,840 --> 00:42:19,340
the image everything is separate so

00:42:17,420 --> 00:42:22,400
basically gets its own networking

00:42:19,340 --> 00:42:24,680
environment this is really handy when

00:42:22,400 --> 00:42:28,190
you start doing things like transmission

00:42:24,680 --> 00:42:31,010
or a firefly and you have services that

00:42:28,190 --> 00:42:32,360
rely on their own broadcast address so

00:42:31,010 --> 00:42:34,910
this is something that's going to be

00:42:32,360 --> 00:42:39,560
built into the design and it's something

00:42:34,910 --> 00:42:42,050
that is in your version of the ISO so

00:42:39,560 --> 00:42:46,790
that was added after beta 3 and it will

00:42:42,050 --> 00:42:48,710
be in beta 4 have I lost anybody on the

00:42:46,790 --> 00:42:54,620
whole jails thing what it is that we can

00:42:48,710 --> 00:42:58,340
do with jails in the freenas design what

00:42:54,620 --> 00:43:00,500
you download and what you have on the

00:42:58,340 --> 00:43:02,870
thumb drive is you download what's

00:43:00,500 --> 00:43:05,570
called a plug ins jail and that is

00:43:02,870 --> 00:43:08,240
something that you install once you

00:43:05,570 --> 00:43:11,150
install that plugins jail you basically

00:43:08,240 --> 00:43:14,690
have a freebsd environment that you can

00:43:11,150 --> 00:43:17,090
install software into and you start the

00:43:14,690 --> 00:43:21,500
plugins service and then you can install

00:43:17,090 --> 00:43:23,450
software one of the things that is part

00:43:21,500 --> 00:43:25,670
of the design is we want to make

00:43:23,450 --> 00:43:29,330
software installation as easy as

00:43:25,670 --> 00:43:31,910
possible and to provide popular software

00:43:29,330 --> 00:43:35,360
packages that people can mix and match

00:43:31,910 --> 00:43:38,060
from so we've decided to use the pbi

00:43:35,360 --> 00:43:40,010
format which is something those actually

00:43:38,060 --> 00:43:43,160
developed by chris hiding in the corner

00:43:40,010 --> 00:43:46,370
there so it's used by the pc-bsd project

00:43:43,160 --> 00:43:49,250
so pbi stands for push-button installer

00:43:46,370 --> 00:43:51,890
and it was designed that from a

00:43:49,250 --> 00:43:55,730
graphical environment you can easily

00:43:51,890 --> 00:43:58,010
install and uninstall software so when

00:43:55,730 --> 00:44:00,350
we're dealing with freebsd software

00:43:58,010 --> 00:44:03,290
there's a lot of software that's been

00:44:00,350 --> 00:44:06,200
ported to freebsd and i'm going to show

00:44:03,290 --> 00:44:08,630
you how to install some of that in the

00:44:06,200 --> 00:44:11,119
accession but the problem with the

00:44:08,630 --> 00:44:14,210
software that's been ported to freebsd

00:44:11,119 --> 00:44:16,849
is it's designed to be installed from

00:44:14,210 --> 00:44:19,430
the command line so you either use the

00:44:16,849 --> 00:44:23,210
package add command or you compile the

00:44:19,430 --> 00:44:26,359
port what the pbi does is it takes that

00:44:23,210 --> 00:44:28,339
existing software wraps it up in a

00:44:26,359 --> 00:44:30,290
format where you can do that from a GUI

00:44:28,339 --> 00:44:33,710
so you don't have to install from the

00:44:30,290 --> 00:44:37,280
command line freenas has actually

00:44:33,710 --> 00:44:39,140
extended the pbi format what they've

00:44:37,280 --> 00:44:42,650
done is not only can you install

00:44:39,140 --> 00:44:44,990
software from your web browser the other

00:44:42,650 --> 00:44:49,099
thing that you can do is it will add the

00:44:44,990 --> 00:44:51,470
software that you install to the GUI so

00:44:49,099 --> 00:44:54,109
we were talking earlier when we were

00:44:51,470 --> 00:44:56,599
looking at the services that it was

00:44:54,109 --> 00:45:04,329
divided into two panes where you start

00:44:56,599 --> 00:45:04,329
the services maybe we'll see it

00:45:15,869 --> 00:45:21,309
yeah it's trying to get over the

00:45:17,829 --> 00:45:25,119
wireless network that's a problem we'll

00:45:21,309 --> 00:45:27,730
see while it's loading we'll see if we

00:45:25,119 --> 00:45:30,309
can visualize there was one side that

00:45:27,730 --> 00:45:32,890
showed your core services and there was

00:45:30,309 --> 00:45:36,130
the other one that said plugins so what

00:45:32,890 --> 00:45:39,039
happens is when you install a PB I into

00:45:36,130 --> 00:45:41,950
a plugins jail it gets added to the

00:45:39,039 --> 00:45:43,960
plugins tab of the services entry so

00:45:41,950 --> 00:45:46,720
that means you can start and stop the

00:45:43,960 --> 00:45:50,230
service and verify it the other thing

00:45:46,720 --> 00:45:52,900
that we're going to see hopefully when

00:45:50,230 --> 00:45:57,910
we come back is when you go and install

00:45:52,900 --> 00:46:01,630
a plug-in once we have a plug ins jail

00:45:57,910 --> 00:46:04,450
if i install the firefly pbi firefly

00:46:01,630 --> 00:46:07,210
will be added to the tree and then all i

00:46:04,450 --> 00:46:08,920
have to do is click on firefly and i'm

00:46:07,210 --> 00:46:11,619
going to get one of those nice low gooey

00:46:08,920 --> 00:46:14,200
config things where i can check off all

00:46:11,619 --> 00:46:17,890
my Firefly settings just like we did for

00:46:14,200 --> 00:46:19,750
everything else in freenas so that's the

00:46:17,890 --> 00:46:22,660
additional wrapping that has been added

00:46:19,750 --> 00:46:24,579
to the PB is so integrates into the

00:46:22,660 --> 00:46:33,359
stuff that you're used to using in free

00:46:24,579 --> 00:46:36,069
nez let's see here we got 10 minutes and

00:46:33,359 --> 00:46:39,599
hopefully that's going to be better

00:46:36,069 --> 00:46:39,599
because right now that's really slow

00:46:41,799 --> 00:46:51,739
lost you all together so what we're

00:46:50,150 --> 00:46:53,809
going to do when we come back from break

00:46:51,739 --> 00:46:59,589
is we're going to install the plugins

00:46:53,809 --> 00:47:04,670
jail and it's a basically you you just

00:46:59,589 --> 00:47:07,489
navigate to the the jail's pbi on the

00:47:04,670 --> 00:47:10,069
USB thumb drive it will install it for

00:47:07,489 --> 00:47:13,029
you we'll start the service and then

00:47:10,069 --> 00:47:15,950
we're going to install firefly

00:47:13,029 --> 00:47:17,359
transmission and mini DLNA because those

00:47:15,950 --> 00:47:19,369
are the PBIS that are currently

00:47:17,359 --> 00:47:21,650
available you can see what they look

00:47:19,369 --> 00:47:26,359
like from the GUI if the GUI crop

00:47:21,650 --> 00:47:28,930
cooperates okay any questions before we

00:47:26,359 --> 00:47:28,930
go on break

00:47:31,930 --> 00:47:33,990
you

00:48:03,980 --> 00:48:10,430
how's that sigh every way this is the

00:48:07,130 --> 00:48:12,590
way to better utilize all your resources

00:48:10,430 --> 00:48:16,040
and it makes managing all your resources

00:48:12,590 --> 00:48:19,900
pretty easy all of the innovation is

00:48:16,040 --> 00:48:23,420
happening in open source the

00:48:19,900 --> 00:48:25,220
collaborative nature and of the you know

00:48:23,420 --> 00:48:27,320
of the community and the speed at which

00:48:25,220 --> 00:48:29,300
these are these you know these these

00:48:27,320 --> 00:48:31,609
deficiencies these bugs are getting

00:48:29,300 --> 00:48:34,220
discovered and then fixed is the thing

00:48:31,609 --> 00:48:36,920
that really shows the power of the you

00:48:34,220 --> 00:48:38,540
know of the open source community it is

00:48:36,920 --> 00:48:42,770
global and it's definitely because of

00:48:38,540 --> 00:48:49,100
the users community people are extremely

00:48:42,770 --> 00:48:50,990
friendly and always ready to help if you

00:48:49,100 --> 00:48:53,270
go on Tyra see any day you'll see these

00:48:50,990 --> 00:48:55,000
guys helping each other out and they're

00:48:53,270 --> 00:48:57,710
all doing it like in a selfless manner

00:48:55,000 --> 00:49:00,700
the product is transparent for everyone

00:48:57,710 --> 00:49:03,920
everyone can look at the code base

00:49:00,700 --> 00:49:06,100
everyone can see how CloudStack is being

00:49:03,920 --> 00:49:11,630
built nothing nothing is proprietary

00:49:06,100 --> 00:49:14,210
everything is open in many ways it's

00:49:11,630 --> 00:49:18,710
absolutely vital to the the unborn

00:49:14,210 --> 00:49:22,910
health card stack the most exciting

00:49:18,710 --> 00:49:25,680
event in recent memory for he was our

00:49:22,910 --> 00:49:28,380
first developer boot camp

00:49:25,680 --> 00:49:31,020
and our call gave people I gave you two

00:49:28,380 --> 00:49:35,010
weeks notice to come attend I was

00:49:31,020 --> 00:49:39,240
expecting 25 or 30 people so we ended up

00:49:35,010 --> 00:49:42,000
with 87 people and had to go get board

00:49:39,240 --> 00:49:44,520
chairs in the room twice everything

00:49:42,000 --> 00:49:47,790
within cloud computing is commodity and

00:49:44,520 --> 00:49:50,850
is open source and so I don't think that

00:49:47,790 --> 00:49:52,620
you will you'll see anywhere where open

00:49:50,850 --> 00:49:55,650
source is not pervasive in cloud

00:49:52,620 --> 00:49:58,350
computing and so i think it's i think

00:49:55,650 --> 00:49:59,700
it's an assumption i think when you talk

00:49:58,350 --> 00:50:00,840
about cloud computing you're really

00:49:59,700 --> 00:50:06,390
talking about open source cloud

00:50:00,840 --> 00:50:09,420
computing cloud zac is a robust solution

00:50:06,390 --> 00:50:11,550
for large deployments you'll have dozens

00:50:09,420 --> 00:50:15,810
of data centers and thousands of servers

00:50:11,550 --> 00:50:18,510
in each data center is these hardware is

00:50:15,810 --> 00:50:21,990
going to fail and CloudStack is designed

00:50:18,510 --> 00:50:24,690
to handle number one that mass scale

00:50:21,990 --> 00:50:27,870
number two it's designed to handle the

00:50:24,690 --> 00:50:30,420
failure that inevitably happens in large

00:50:27,870 --> 00:50:33,370
deployments we started working on cog

00:50:30,420 --> 00:50:36,460
deck over four years ago

00:50:33,370 --> 00:50:39,070
it was the original set of people

00:50:36,460 --> 00:50:41,260
working on it had a background of

00:50:39,070 --> 00:50:45,070
delivering software telcos and service

00:50:41,260 --> 00:50:49,840
providers lots of QA lots of users

00:50:45,070 --> 00:50:53,520
actually using it availability is a key

00:50:49,840 --> 00:50:56,470
feature multiple hypervisors support

00:50:53,520 --> 00:50:58,900
different network models you can pick up

00:50:56,470 --> 00:51:01,030
whatever suits you better while step

00:50:58,900 --> 00:51:04,540
management server can be deployed in

00:51:01,030 --> 00:51:06,340
different physical machines it

00:51:04,540 --> 00:51:07,990
definitely has a huge footprint it's

00:51:06,340 --> 00:51:13,390
being deployed everywhere there's a

00:51:07,990 --> 00:51:15,120
major movie studio that they were using

00:51:13,390 --> 00:51:18,250
CloudStack they were using it to

00:51:15,120 --> 00:51:20,500
transcode video and i thought that was

00:51:18,250 --> 00:51:21,820
terribly fascinating what I found more

00:51:20,500 --> 00:51:25,090
fascinating is what they did during

00:51:21,820 --> 00:51:27,880
lunch where they would spin up you know

00:51:25,090 --> 00:51:29,230
50 or 60 game servers then as soon as

00:51:27,880 --> 00:51:31,000
lunch was over they would destroy all

00:51:29,230 --> 00:51:34,780
the instances and go back to doing a

00:51:31,000 --> 00:51:36,220
little work cloudstack is vast it

00:51:34,780 --> 00:51:37,750
touches so many different aspects and

00:51:36,220 --> 00:51:39,940
there's no one person that's kind of

00:51:37,750 --> 00:51:43,420
like a master of all those realms I

00:51:39,940 --> 00:51:46,120
think CloudStack as a project is going

00:51:43,420 --> 00:51:49,770
to be one of the leaders simply because

00:51:46,120 --> 00:51:55,590
it's some of the most feature folan and

00:51:49,770 --> 00:51:57,550
and robust platforms out they were I

00:51:55,590 --> 00:51:59,820
don't senior living through the clouds

00:51:57,550 --> 00:51:59,820
dag

00:52:12,590 --> 00:52:14,650
you

00:52:18,000 --> 00:52:23,079
when we created asterisk over a decade

00:52:20,710 --> 00:52:25,029
ago we could not have imagined that

00:52:23,079 --> 00:52:27,250
asterisk would not only become the most

00:52:25,029 --> 00:52:29,380
widely adopted open source communication

00:52:27,250 --> 00:52:31,420
software on the planet but that it would

00:52:29,380 --> 00:52:33,940
impact the entire industry in the way

00:52:31,420 --> 00:52:35,920
that it has today asterisk has found its

00:52:33,940 --> 00:52:38,529
way in the more than 170 countries and

00:52:35,920 --> 00:52:40,510
virtually every fortune 1000 company the

00:52:38,529 --> 00:52:42,579
success of asterisk has enabled a

00:52:40,510 --> 00:52:43,990
transition of power from the hands of

00:52:42,579 --> 00:52:46,269
the traditional proprietary phone

00:52:43,990 --> 00:52:48,670
vendors into the hands of the users and

00:52:46,269 --> 00:52:50,740
administrators of phone systems using

00:52:48,670 --> 00:52:52,390
this power our customers have traded all

00:52:50,740 --> 00:52:54,460
sorts of business changing applications

00:52:52,390 --> 00:52:56,289
from small office phone systems to

00:52:54,460 --> 00:52:58,359
mission-critical call centers to

00:52:56,289 --> 00:53:00,190
international carrier networks in fact

00:52:58,359 --> 00:53:01,660
there's even an entire country those

00:53:00,190 --> 00:53:03,910
communications infrastructure runs on

00:53:01,660 --> 00:53:06,039
esters the gym has always been about

00:53:03,910 --> 00:53:07,750
creating technology that expands

00:53:06,039 --> 00:53:09,940
communications capabilities in ways that

00:53:07,750 --> 00:53:11,140
we could never have imagined and that's

00:53:09,940 --> 00:53:13,869
part of what's game-changing about

00:53:11,140 --> 00:53:16,210
Digium today we're doing it again this

00:53:13,869 --> 00:53:18,309
time by introducing a new family of HD

00:53:16,210 --> 00:53:20,440
IP phones that extends control of the

00:53:18,309 --> 00:53:22,180
user all the way to the desktop the

00:53:20,440 --> 00:53:23,890
launch of these new products represents

00:53:22,180 --> 00:53:25,900
the next phase indigenous history of

00:53:23,890 --> 00:53:28,390
innovation these are the first and only

00:53:25,900 --> 00:53:29,740
IP phones designed to fully leverage the

00:53:28,390 --> 00:53:31,420
power of esther's when we first

00:53:29,740 --> 00:53:33,069
discussed our expectations for building

00:53:31,420 --> 00:53:35,680
a family of phones for use with asterisk

00:53:33,069 --> 00:53:37,450
our requirements were pretty simple we

00:53:35,680 --> 00:53:39,220
asked the team to build the phones such

00:53:37,450 --> 00:53:41,410
that they were easy to install integrate

00:53:39,220 --> 00:53:43,269
provision in use I think you'll soon

00:53:41,410 --> 00:53:45,819
agree our engineers have delivered on

00:53:43,269 --> 00:53:47,470
that goal user feedback is validating

00:53:45,819 --> 00:53:49,569
that when it comes to operation with

00:53:47,470 --> 00:53:52,000
astro space systems including our own

00:53:49,569 --> 00:53:54,579
Switchvox based product these are the

00:53:52,000 --> 00:53:55,869
easiest to use best integrated most

00:53:54,579 --> 00:53:58,480
interoperable products on the market

00:53:55,869 --> 00:54:00,450
today the digitally of phones will

00:53:58,480 --> 00:54:02,559
initially include three IP des hommes

00:54:00,450 --> 00:54:04,450
uniquely designed to complement any

00:54:02,559 --> 00:54:06,339
asterisk or Switchvox based solution

00:54:04,450 --> 00:54:09,009
these phones are different for a number

00:54:06,339 --> 00:54:11,650
of reasons first there is clue sively

00:54:09,009 --> 00:54:13,089
designed for use with esters secondly

00:54:11,650 --> 00:54:14,700
we've made it really easy to

00:54:13,089 --> 00:54:17,079
autodiscover and provision the phones

00:54:14,700 --> 00:54:19,180
next we've made it easy for the phones

00:54:17,079 --> 00:54:21,130
to access information inside of asterisk

00:54:19,180 --> 00:54:22,720
allowing tight coupling between an

00:54:21,130 --> 00:54:24,680
application and

00:54:22,720 --> 00:54:26,839
additionally we've created an

00:54:24,680 --> 00:54:28,970
applications engine that allows users

00:54:26,839 --> 00:54:32,210
and developers to create and run their

00:54:28,970 --> 00:54:33,980
own apps on the phone and finally we've

00:54:32,210 --> 00:54:35,930
done all of this at a very compelling

00:54:33,980 --> 00:54:37,609
price point at Digium we're always

00:54:35,930 --> 00:54:39,710
thinking of ways to give our customers

00:54:37,609 --> 00:54:42,230
the best value in business phone systems

00:54:39,710 --> 00:54:43,819
and also give them the power to create

00:54:42,230 --> 00:54:45,980
their own solutions or any

00:54:43,819 --> 00:54:47,720
communications challenge will continue

00:54:45,980 --> 00:54:49,160
to push the boundaries not only to make

00:54:47,720 --> 00:54:51,200
astros cooler bastard more

00:54:49,160 --> 00:54:52,940
technologically feature-rich but to make

00:54:51,200 --> 00:54:55,460
asterisk and communications even easier

00:54:52,940 --> 00:54:58,990
and together we'll change the way the

00:54:55,460 --> 00:54:58,990

YouTube URL: https://www.youtube.com/watch?v=HSbbGeczUXM


