Title: 2012 SouthEast LinuxFest - ODBC Track - Richard Hipp - Behind The Scenes of Full Text Search
Publication date: 2013-04-06
Playlist: 2012 SouthEast LinuxFest
Description: 
	2012 SouthEast LinuxFest
Open Database Camp Speaker Track
Richard Hipp
Behind The Scenes of Full Text Search
Captions: 
	00:00:00,060 --> 00:00:05,310
the following presentation was recorded

00:00:02,520 --> 00:00:08,069
the 2012 southeast Linux Fest in

00:00:05,310 --> 00:00:10,440
Charlotte North Carolina it is licensed

00:00:08,069 --> 00:00:12,120
under a Creative Commons license for

00:00:10,440 --> 00:00:17,640
more information about the south east

00:00:12,120 --> 00:00:19,410
linux fest visit www.ccltss.org the

00:00:17,640 --> 00:00:22,350
south east linux best we'd like to thank

00:00:19,410 --> 00:00:25,279
the following diamond sponsors in 2012

00:00:22,350 --> 00:00:30,359
for helping make these videos possible

00:00:25,279 --> 00:01:05,939
get a little feedback getting some

00:00:30,359 --> 00:01:08,490
feedback management system and the

00:01:05,939 --> 00:01:13,560
backend database that uses responsible

00:01:08,490 --> 00:01:15,810
is Maria no signal and talk to us about

00:01:13,560 --> 00:01:19,229
full text search into algorithms of how

00:01:15,810 --> 00:01:23,509
to do it well thank you very much thank

00:01:19,229 --> 00:01:26,340
you for being here small correction I

00:01:23,509 --> 00:01:28,229
was actually born about a mile from here

00:01:26,340 --> 00:01:30,780
at Presbyterian Hospital on the

00:01:28,229 --> 00:01:33,990
Charlotte native not many of us around

00:01:30,780 --> 00:01:36,229
but all my people from around here

00:01:33,990 --> 00:01:38,759
there's a bunch of hips in this area

00:01:36,229 --> 00:01:44,759
there's a there's a physician here in

00:01:38,759 --> 00:01:48,390
town he's a neurosurgeon named Steven

00:01:44,759 --> 00:01:50,100
hip and I would used to get calls for

00:01:48,390 --> 00:01:51,869
him all the time you know and I danced

00:01:50,100 --> 00:01:52,979
through the phone and people start

00:01:51,869 --> 00:01:55,040
telling me about their medical problems

00:01:52,979 --> 00:01:59,159
and said are you looking for the

00:01:55,040 --> 00:02:01,170
neurologist or the mathematician oh I

00:01:59,159 --> 00:02:02,610
won't the neurologist okay well I have

00:02:01,170 --> 00:02:04,140
his number right here let me give you

00:02:02,610 --> 00:02:06,000
that number but listen if you ever have

00:02:04,140 --> 00:02:08,050
any trouble with your differential

00:02:06,000 --> 00:02:11,710
equations you give me a call

00:02:08,050 --> 00:02:13,270
and I never have met steena I keep

00:02:11,710 --> 00:02:14,980
telling every time they call so you know

00:02:13,270 --> 00:02:16,630
tell tell Stephen when you see him that

00:02:14,980 --> 00:02:18,280
we got to get together for lunch but I

00:02:16,630 --> 00:02:20,230
think he's one of the South Carolina

00:02:18,280 --> 00:02:21,580
hips there's two kind of groups of hips

00:02:20,230 --> 00:02:23,290
in this area there's the ones here in

00:02:21,580 --> 00:02:26,800
North Korea are leer and there's some in

00:02:23,290 --> 00:02:28,660
South Carolina and I'm the ones in South

00:02:26,800 --> 00:02:32,380
Carolina have money I'm not related to

00:02:28,660 --> 00:02:35,800
them so so I want to talk a little bit

00:02:32,380 --> 00:02:36,820
of a day about just full-text search and

00:02:35,800 --> 00:02:39,010
and this is not talking about a

00:02:36,820 --> 00:02:40,810
particular implementation or anything

00:02:39,010 --> 00:02:42,430
this is just going to make the theory

00:02:40,810 --> 00:02:44,590
behind it how it works what's going on

00:02:42,430 --> 00:02:47,530
behind the scenes this is so that you'll

00:02:44,590 --> 00:02:49,930
know kind of what's happening when you

00:02:47,530 --> 00:02:51,070
do the full-text search not intended to

00:02:49,930 --> 00:02:53,200
give you all the information needed to

00:02:51,070 --> 00:02:58,150
implement yourself though it'd be good

00:02:53,200 --> 00:03:00,220
foundation for that nor am i pushing you

00:02:58,150 --> 00:03:01,330
in any particular implementation of it

00:03:00,220 --> 00:03:03,070
this is just to tell you what's

00:03:01,330 --> 00:03:03,790
happening and why it why it seems like

00:03:03,070 --> 00:03:07,800
it's a hard problem

00:03:03,790 --> 00:03:10,960
what is full-text search in a nutshell

00:03:07,800 --> 00:03:14,620
full-text search is what being and

00:03:10,960 --> 00:03:18,280
Google and Yahoo do for you you type in

00:03:14,620 --> 00:03:21,490
some keyword into the search engine like

00:03:18,280 --> 00:03:23,410
Linux and it goes out and finds among

00:03:21,490 --> 00:03:26,230
some collection of documents such as all

00:03:23,410 --> 00:03:28,120
the web pages on the World Wide Web all

00:03:26,230 --> 00:03:30,730
the documents that have that keyword in

00:03:28,120 --> 00:03:32,830
it and you're all familiar with how this

00:03:30,730 --> 00:03:34,360
works you people who really don't

00:03:32,830 --> 00:03:35,620
understand what's going on they use it

00:03:34,360 --> 00:03:37,540
all the time it's very intuitive it's a

00:03:35,620 --> 00:03:39,959
natural thing you can type in a single

00:03:37,540 --> 00:03:42,070
word or you could type in two words or

00:03:39,959 --> 00:03:43,810
three words and it finds all the

00:03:42,070 --> 00:03:50,560
documents that have all those words in

00:03:43,810 --> 00:03:52,390
them now what and what so what some

00:03:50,560 --> 00:03:54,190
people don't realize is that that it can

00:03:52,390 --> 00:04:00,220
do quite a bit more than this you know

00:03:54,190 --> 00:04:02,560
some people my wife is a musician now

00:04:00,220 --> 00:04:03,910
know much this crowd she's you know not

00:04:02,560 --> 00:04:06,670
really technical but amongst musicians

00:04:03,910 --> 00:04:08,320
she's like a tech guru you know and so

00:04:06,670 --> 00:04:09,760
when anybody when ever heard musician

00:04:08,320 --> 00:04:13,690
friends one of their computers break

00:04:09,760 --> 00:04:16,560
they always come to her and but she uses

00:04:13,690 --> 00:04:19,690
like Google she uses it in

00:04:16,560 --> 00:04:21,430
if she wants to go to Facebook she takes

00:04:19,690 --> 00:04:25,030
Facebook into Google I mean she never

00:04:21,430 --> 00:04:26,710
uses the URL bar to go to Facebook or a

00:04:25,030 --> 00:04:29,080
bookmark she types it into the search

00:04:26,710 --> 00:04:30,820
bar Facebook and thinks on the link and

00:04:29,080 --> 00:04:35,650
there's actually a lot of people that do

00:04:30,820 --> 00:04:36,970
- everybody uses search now and you know

00:04:35,650 --> 00:04:39,550
you might want to implement search on

00:04:36,970 --> 00:04:43,000
your own websites why not just use a

00:04:39,550 --> 00:04:45,010
Google well or and or Yahoo or Bing

00:04:43,000 --> 00:04:48,280
well maybe you don't want to see all the

00:04:45,010 --> 00:04:50,169
advertising maybe you don't want your

00:04:48,280 --> 00:04:52,780
competitors links to appear at the top

00:04:50,169 --> 00:04:54,669
of the list and or maybe your maybe your

00:04:52,780 --> 00:04:56,110
index seeing a private website that's

00:04:54,669 --> 00:04:57,760
not on the public internet or maybe this

00:04:56,110 --> 00:04:59,590
is part of an application that's not

00:04:57,760 --> 00:05:01,300
really network connected it's a help

00:04:59,590 --> 00:05:03,180
system in the system there's a lot of

00:05:01,300 --> 00:05:05,800
reasons to want to do full-text search

00:05:03,180 --> 00:05:07,540
even though the the three the big three

00:05:05,800 --> 00:05:09,760
do a great job of it so you can type in

00:05:07,540 --> 00:05:11,260
a bunch of words and find the words what

00:05:09,760 --> 00:05:13,210
some people don't realize is that if you

00:05:11,260 --> 00:05:16,450
put double quotes around a search term

00:05:13,210 --> 00:05:19,960
like that this is a phrase search and

00:05:16,450 --> 00:05:25,000
that will find all instances of those

00:05:19,960 --> 00:05:27,100
three words in order so in the previous

00:05:25,000 --> 00:05:29,169
circuit I did here it was just looking

00:05:27,100 --> 00:05:31,180
for the word snippet function cannot and

00:05:29,169 --> 00:05:33,130
it found web pages that had those three

00:05:31,180 --> 00:05:35,979
words in it but if I put double quotes

00:05:33,130 --> 00:05:39,400
around that it insisted that the three

00:05:35,979 --> 00:05:41,260
words be in that specific order and I

00:05:39,400 --> 00:05:44,130
work very hard to find three words that

00:05:41,260 --> 00:05:49,930
would end up on the SQLite website but

00:05:44,130 --> 00:05:52,660
took me a while I found them so some

00:05:49,930 --> 00:05:54,340
other things you can do say you do a

00:05:52,660 --> 00:05:57,760
search you're looking for you know SQL

00:05:54,340 --> 00:06:00,070
full-text and when you do something like

00:05:57,760 --> 00:06:02,919
that you get just tons and tons of links

00:06:00,070 --> 00:06:04,750
to sequel server and suppose well I am

00:06:02,919 --> 00:06:06,850
NOT doing sequel server so I don't want

00:06:04,750 --> 00:06:10,720
it I don't want to do that you can add a

00:06:06,850 --> 00:06:13,810
term - Microsoft say and it will exclude

00:06:10,720 --> 00:06:17,320
those pages that have Microsoft in sort

00:06:13,810 --> 00:06:18,820
of an anti search term and all the all

00:06:17,320 --> 00:06:24,250
the big three search engines do this

00:06:18,820 --> 00:06:25,659
sort of thing another thing you can do I

00:06:24,250 --> 00:06:26,510
don't know if you're aware this you can

00:06:25,659 --> 00:06:29,990
do

00:06:26,510 --> 00:06:32,260
or search you cannot so this this

00:06:29,990 --> 00:06:35,240
particular one is gonna look for

00:06:32,260 --> 00:06:38,870
documents that have SQL full-text search

00:06:35,240 --> 00:06:41,990
and then have either SQLite or Postgres

00:06:38,870 --> 00:06:43,640
in their name as well but one of the

00:06:41,990 --> 00:06:45,950
other doesn't have to have be both it's

00:06:43,640 --> 00:06:50,360
got to have all of the first four but

00:06:45,950 --> 00:06:52,880
then one of those last two and all the

00:06:50,360 --> 00:06:55,430
search engines do this now there's some

00:06:52,880 --> 00:06:58,420
other things that full-text search and

00:06:55,430 --> 00:07:01,340
the general sense will do that

00:06:58,420 --> 00:07:05,060
being in yahoo and google don't do like

00:07:01,340 --> 00:07:07,400
you can do nearer searches and so I've

00:07:05,060 --> 00:07:09,110
put in and the search engine on the

00:07:07,400 --> 00:07:12,100
SQLite website does this and so that's

00:07:09,110 --> 00:07:14,810
why I'm using this interesting example

00:07:12,100 --> 00:07:16,280
snippet near developer that means the is

00:07:14,810 --> 00:07:19,850
looking for documents that have the word

00:07:16,280 --> 00:07:21,860
snippet and developer in it but they're

00:07:19,850 --> 00:07:24,620
kind of close to each other I think in

00:07:21,860 --> 00:07:25,910
the default setting for SQLite it's they

00:07:24,620 --> 00:07:30,650
have to be within ten words of each

00:07:25,910 --> 00:07:31,760
other but yet question yeah the least

00:07:30,650 --> 00:07:34,010
amount that I've been able to figure out

00:07:31,760 --> 00:07:38,300
do you no way to get to get them to do

00:07:34,010 --> 00:07:39,680
this I mean I went digging around I

00:07:38,300 --> 00:07:42,340
talked to people I couldn't find any way

00:07:39,680 --> 00:07:44,330
to do it I mean it's not that hard to do

00:07:42,340 --> 00:07:45,860
from a technical point of view and I'm

00:07:44,330 --> 00:07:48,040
going to show you the algorithms in just

00:07:45,860 --> 00:07:48,040
a minute

00:07:48,360 --> 00:07:55,419
are these they use the nearness to help

00:07:51,819 --> 00:07:57,069
rank it I did not know that you know the

00:07:55,419 --> 00:07:59,050
ranking functions are like you know

00:07:57,069 --> 00:08:01,569
super secret things and I don't I

00:07:59,050 --> 00:08:03,130
haven't signed that NDA and if I had if

00:08:01,569 --> 00:08:07,930
I had I wouldn't be giving this talk

00:08:03,130 --> 00:08:09,639
would I but yes this is an easy thing to

00:08:07,930 --> 00:08:12,130
compute I'll show you the algorithms in

00:08:09,639 --> 00:08:14,020
just a minute and and and you can do

00:08:12,130 --> 00:08:27,460
things like to say well you know it has

00:08:14,020 --> 00:08:30,039
to come after or before question it's

00:08:27,460 --> 00:08:31,479
kind of combined because the beak of the

00:08:30,039 --> 00:08:33,250
comment was the full text search is only

00:08:31,479 --> 00:08:35,080
used for finding the pages and ranking

00:08:33,250 --> 00:08:38,560
is showing which order in which they're

00:08:35,080 --> 00:08:40,000
displayed but you know for a small

00:08:38,560 --> 00:08:41,260
website that's entirely true that's an

00:08:40,000 --> 00:08:42,820
entirely legitimate thing to do and

00:08:41,260 --> 00:08:44,410
that's entirely what I do here because I

00:08:42,820 --> 00:08:46,270
don't there aren't that many different

00:08:44,410 --> 00:08:47,709
pages that you can possibly get if you

00:08:46,270 --> 00:08:49,149
put in a search term that hit every

00:08:47,709 --> 00:08:51,579
single page on my website that's only

00:08:49,149 --> 00:08:53,649
about a thousand pages and so you know

00:08:51,579 --> 00:08:57,010
we can sort through that but if you put

00:08:53,649 --> 00:08:59,200
in a really broad search term into one

00:08:57,010 --> 00:09:02,850
of the internet search engines and it

00:08:59,200 --> 00:09:06,220
hit a million pages you can't really

00:09:02,850 --> 00:09:08,140
evaluate and rank those and pick the top

00:09:06,220 --> 00:09:10,630
ten and still get the results back to

00:09:08,140 --> 00:09:12,970
the user and 100 milliseconds or less so

00:09:10,630 --> 00:09:16,870
you've got to kind of combine both the

00:09:12,970 --> 00:09:18,880
ranking in the search in one big step so

00:09:16,870 --> 00:09:20,260
so you can do near searches and that

00:09:18,880 --> 00:09:22,149
that can be useful sometimes and I think

00:09:20,260 --> 00:09:24,430
the reason they omit this from the

00:09:22,149 --> 00:09:27,279
internet search engines is because most

00:09:24,430 --> 00:09:29,170
users they just going to type in words

00:09:27,279 --> 00:09:33,339
they you know most users don't even know

00:09:29,170 --> 00:09:34,540
about phrase search much less or search

00:09:33,339 --> 00:09:37,630
and this is getting really complicated

00:09:34,540 --> 00:09:39,700
it's just more confusion than was really

00:09:37,630 --> 00:09:41,500
seen as necessary this does not sell

00:09:39,700 --> 00:09:44,440
more advertising and so we'll just leave

00:09:41,500 --> 00:09:46,620
that out that's not helpful but it can

00:09:44,440 --> 00:09:49,209
be useful for specialized functions and

00:09:46,620 --> 00:09:51,459
a lot of this a lot of search engines do

00:09:49,209 --> 00:09:53,890
it and then another thing that it comes

00:09:51,459 --> 00:09:56,980
up this is comes up useful is a prefix

00:09:53,890 --> 00:09:59,500
search and and this is not really useful

00:09:56,980 --> 00:10:00,279
for you directly as a user of a search

00:09:59,500 --> 00:10:01,839
engine that

00:10:00,279 --> 00:10:04,629
actually works on the one I've got on

00:10:01,839 --> 00:10:07,180
that secure website we're here I'm

00:10:04,629 --> 00:10:12,819
looking for all documents that contain

00:10:07,180 --> 00:10:18,779
words that begin with PS or X e and so

00:10:12,819 --> 00:10:21,579
it found you know pseudo here and that

00:10:18,779 --> 00:10:24,249
acronym for power safe overwrite and

00:10:21,579 --> 00:10:27,999
then the name of some method on an

00:10:24,249 --> 00:10:29,529
object so where this sort of thing would

00:10:27,999 --> 00:10:31,569
come in handy so if you are building an

00:10:29,529 --> 00:10:33,430
application around full-text search

00:10:31,569 --> 00:10:34,990
you were you were doing something where

00:10:33,430 --> 00:10:37,899
they use and you're doing search as you

00:10:34,990 --> 00:10:40,480
type and the user starts typing things

00:10:37,899 --> 00:10:42,930
in and you want to stay show the show

00:10:40,480 --> 00:10:45,699
the search results as they're typing

00:10:42,930 --> 00:10:48,220
well you would modify what they've typed

00:10:45,699 --> 00:10:50,649
to put an asterisk after the last word

00:10:48,220 --> 00:10:52,240
so it's going to show everything that

00:10:50,649 --> 00:10:55,779
begins with the word they're currently

00:10:52,240 --> 00:10:58,360
typing you see how that works so you can

00:10:55,779 --> 00:11:01,089
do those courts of searches as well so

00:10:58,360 --> 00:11:02,439
that's all well and good well what's it

00:11:01,089 --> 00:11:04,269
really involved here there's really a

00:11:02,439 --> 00:11:05,589
lot going on behind the scenes and that

00:11:04,269 --> 00:11:07,240
and that's the whole point of this

00:11:05,589 --> 00:11:08,980
talking well I mentioned I'm gonna

00:11:07,240 --> 00:11:11,259
finish up I've got a demo I'm gonna give

00:11:08,980 --> 00:11:13,600
you I got some code that you can

00:11:11,259 --> 00:11:15,879
download that you can do really easy to

00:11:13,600 --> 00:11:19,209
use you can use it as a basis for a

00:11:15,879 --> 00:11:20,889
search on a website but in it but right

00:11:19,209 --> 00:11:21,970
now the the things you got to think

00:11:20,889 --> 00:11:23,920
about is first you have to identify the

00:11:21,970 --> 00:11:25,149
documents what constant is a document

00:11:23,920 --> 00:11:26,319
that you're going to be searching what's

00:11:25,149 --> 00:11:29,019
gonna be your search result

00:11:26,319 --> 00:11:31,329
what's the granularity of this do you

00:11:29,019 --> 00:11:33,069
look you know do you look on individual

00:11:31,329 --> 00:11:35,110
paragraphs within the document entire

00:11:33,069 --> 00:11:36,970
documents if your search result came

00:11:35,110 --> 00:11:38,860
back says oh yeah those two words you

00:11:36,970 --> 00:11:41,579
typed they're used in the complete

00:11:38,860 --> 00:11:44,199
annotated works of William Shakespeare

00:11:41,579 --> 00:11:46,000
that helps some but you really would

00:11:44,199 --> 00:11:48,339
like for it to narrow it down more and

00:11:46,000 --> 00:11:51,759
so this is actually a tough choice as a

00:11:48,339 --> 00:11:54,970
designer of a system how specific do you

00:11:51,759 --> 00:11:56,800
get in in your search results and then

00:11:54,970 --> 00:11:59,009
you have to tokenize these documents a

00:11:56,800 --> 00:12:03,459
lot of times they're in strange formats

00:11:59,009 --> 00:12:04,280
you've got to massage the the letters

00:12:03,459 --> 00:12:05,540
into word

00:12:04,280 --> 00:12:07,400
that are recognizable by the search

00:12:05,540 --> 00:12:09,920
engine will go into all of this we're

00:12:07,400 --> 00:12:12,710
gonna form posting lists put them in the

00:12:09,920 --> 00:12:14,990
database or the index we're gonna talk

00:12:12,710 --> 00:12:17,450
about querying snippet generation and

00:12:14,990 --> 00:12:19,010
scoring I put up there and I don't think

00:12:17,450 --> 00:12:21,740
I have any slides on but they're there

00:12:19,010 --> 00:12:24,440
ok so here's an example here's part of a

00:12:21,740 --> 00:12:26,630
website this is part this is just a bit

00:12:24,440 --> 00:12:29,600
of a little bit of text from the SQLite

00:12:26,630 --> 00:12:33,470
website actually talking about a book

00:12:29,600 --> 00:12:36,890
that's available in SQLite and this is

00:12:33,470 --> 00:12:38,360
what the search engine would see it's a

00:12:36,890 --> 00:12:41,330
bunch of words but it's also got markup

00:12:38,360 --> 00:12:42,890
in there and you know you don't really

00:12:41,330 --> 00:12:44,600
want to necessarily search for the

00:12:42,890 --> 00:12:46,730
markup so kind of the first thing you

00:12:44,600 --> 00:12:49,430
need to do is identify the parts that

00:12:46,730 --> 00:12:51,350
you really want to search for so when

00:12:49,430 --> 00:12:52,730
you're when you're building your index

00:12:51,350 --> 00:12:56,570
you've got and in this you know with

00:12:52,730 --> 00:12:58,640
HTML it's not too hard because you know

00:12:56,570 --> 00:13:00,230
you can just eliminate the tags more or

00:12:58,640 --> 00:13:04,130
less but it gets a little bit more

00:13:00,230 --> 00:13:05,750
complicated because you've got elements

00:13:04,130 --> 00:13:07,520
you know the the ampersand and then the

00:13:05,750 --> 00:13:10,850
name and you will need to resolve those

00:13:07,520 --> 00:13:17,120
and then this is English and English is

00:13:10,850 --> 00:13:20,510
is really nice in that it uses white

00:13:17,120 --> 00:13:21,650
space white space is a wonderful

00:13:20,510 --> 00:13:23,210
invision you know white space is a

00:13:21,650 --> 00:13:25,190
relatively new invention

00:13:23,210 --> 00:13:28,660
did you know do you already familiar

00:13:25,190 --> 00:13:32,240
with the history of white space I credit

00:13:28,660 --> 00:13:33,770
Saint Patrick with white space you know

00:13:32,240 --> 00:13:35,000
know that I'm there really that it's in

00:13:33,770 --> 00:13:37,910
the st. Patrick didn't invent white

00:13:35,000 --> 00:13:40,370
space himself but he founded a bunch of

00:13:37,910 --> 00:13:43,010
monasteries in Ireland that were copying

00:13:40,370 --> 00:13:46,640
documents during right after the fall of

00:13:43,010 --> 00:13:49,450
Rome and they eventually got run out of

00:13:46,640 --> 00:13:51,710
Ireland by the Vikings but the other

00:13:49,450 --> 00:13:53,930
monasteries that they founded in the

00:13:51,710 --> 00:13:56,620
mainland of Europe they were copying on

00:13:53,930 --> 00:13:58,850
these documents and at the time you know

00:13:56,620 --> 00:14:00,560
sometimes they would put a little dot

00:13:58,850 --> 00:14:03,530
between words or sometimes they just run

00:14:00,560 --> 00:14:05,240
the words together and then but in this

00:14:03,530 --> 00:14:07,550
tradition somebody had the bright ideas

00:14:05,240 --> 00:14:09,260
oh we'll put a little gap between the

00:14:07,550 --> 00:14:10,230
words so you can tell where one the word

00:14:09,260 --> 00:14:12,390
starts in the next

00:14:10,230 --> 00:14:15,030
word begins and this was happening

00:14:12,390 --> 00:14:15,870
around the 10th or 11th centuries when

00:14:15,030 --> 00:14:19,520
they first discovered this is a

00:14:15,870 --> 00:14:23,270
relatively modern invention whitespace

00:14:19,520 --> 00:14:28,820
still has not caught on in the Far East

00:14:23,270 --> 00:14:32,550
okay so if you know Thailand and China

00:14:28,820 --> 00:14:35,070
and Japan and Korea they just kind of

00:14:32,550 --> 00:14:36,930
run it all together and this presents

00:14:35,070 --> 00:14:39,840
interesting problems to the search

00:14:36,930 --> 00:14:43,400
engine is to you know where does one

00:14:39,840 --> 00:14:46,400
word start in and the next word start

00:14:43,400 --> 00:14:46,400
question/comment

00:14:50,360 --> 00:14:55,410
well I mean no with the the characters -

00:14:54,150 --> 00:14:57,750
are there any native Chinese speakers in

00:14:55,410 --> 00:15:01,200
the room you know a little bit of

00:14:57,750 --> 00:15:03,330
Chinese huh I know I know I know none I

00:15:01,200 --> 00:15:05,490
know very little but but yeah I mean the

00:15:03,330 --> 00:15:06,840
each each character actually actually

00:15:05,490 --> 00:15:11,250
represents a sound

00:15:06,840 --> 00:15:13,080
it's a syllable and and a word can can

00:15:11,250 --> 00:15:18,330
consist of two or three characters but

00:15:13,080 --> 00:15:19,830
of course the same syllable has ten or

00:15:18,330 --> 00:15:21,420
hundred depending on which character it

00:15:19,830 --> 00:15:23,160
of syllable it is ten or a hundred

00:15:21,420 --> 00:15:25,790
different characters that you use to

00:15:23,160 --> 00:15:28,170
spell that syllable depending on context

00:15:25,790 --> 00:15:32,090
but given the characters you can always

00:15:28,170 --> 00:15:34,530
you can always produce a sound for it

00:15:32,090 --> 00:15:36,540
you know given a particular die light of

00:15:34,530 --> 00:15:37,770
course you know you move around in China

00:15:36,540 --> 00:15:39,150
and the different characters are

00:15:37,770 --> 00:15:42,180
pronounced differently just to

00:15:39,150 --> 00:15:43,560
complicate things even further but I

00:15:42,180 --> 00:15:45,810
talked to Chinese speakers and they tell

00:15:43,560 --> 00:15:49,920
me that um you know if you mix if you

00:15:45,810 --> 00:15:53,180
use the wrong symbol for sound native

00:15:49,920 --> 00:15:55,680
speakers will understand what you mean

00:15:53,180 --> 00:15:57,000
it's kind of like in English if you if

00:15:55,680 --> 00:15:59,490
you're writing ISM is that somebody's

00:15:57,000 --> 00:16:03,800
not a native speaker and they use th e

00:15:59,490 --> 00:16:07,380
IR when they mean th ey apostrophe re e

00:16:03,800 --> 00:16:10,140
you know we native speakers we laugh at

00:16:07,380 --> 00:16:11,910
that I stupid foreigner right yep well

00:16:10,140 --> 00:16:14,490
but it's the same kind of thing they

00:16:11,910 --> 00:16:17,460
understand what you mean if you use the

00:16:14,490 --> 00:16:17,940
wrong character but it's still you know

00:16:17,460 --> 00:16:21,360
yeah

00:16:17,940 --> 00:16:23,910
stupid Americans you know anyway my

00:16:21,360 --> 00:16:26,040
point here is that breaking things up

00:16:23,910 --> 00:16:28,080
into tokens is kind of easy in English

00:16:26,040 --> 00:16:29,700
and in Western languages it gets more

00:16:28,080 --> 00:16:31,940
difficult in some other languages and

00:16:29,700 --> 00:16:34,760
the algorithms used there are tricky and

00:16:31,940 --> 00:16:38,430
you know they tend to vary a lot and

00:16:34,760 --> 00:16:40,710
they're kind of well we won't even go go

00:16:38,430 --> 00:16:44,000
into that I don't have a clock so does

00:16:40,710 --> 00:16:47,280
anybody know what time it is can keep up

00:16:44,000 --> 00:16:49,110
okay so first step is to kind of remove

00:16:47,280 --> 00:16:51,750
the markup from the document that you're

00:16:49,110 --> 00:16:55,800
going to be indexing and and you're left

00:16:51,750 --> 00:16:59,190
with these terms here and then the next

00:16:55,800 --> 00:17:01,020
step is to kind of modernize the text a

00:16:59,190 --> 00:17:03,150
little bit convert everything to

00:17:01,020 --> 00:17:06,810
lowercase because you don't if you type

00:17:03,150 --> 00:17:08,370
in an all lowercase search term you you

00:17:06,810 --> 00:17:10,589
want to find cases where you know it

00:17:08,370 --> 00:17:11,760
might be an initial initial capital to I

00:17:10,589 --> 00:17:17,189
mean you don't want this to be excluded

00:17:11,760 --> 00:17:19,050
and I'll in it and I altered this text

00:17:17,189 --> 00:17:23,180
slightly for this talk by putting an

00:17:19,050 --> 00:17:25,319
umlaut over the first a in Java just to

00:17:23,180 --> 00:17:27,089
spice it up with that because I didn't

00:17:25,319 --> 00:17:28,650
have any text in Italy at hand that had

00:17:27,089 --> 00:17:30,210
but you know if you're dealing with

00:17:28,650 --> 00:17:32,670
European texts and stuff they'll have a

00:17:30,210 --> 00:17:34,590
lot of these marks like that and you

00:17:32,670 --> 00:17:36,920
typically want to remove those because

00:17:34,590 --> 00:17:45,000
those are not helpful for searching

00:17:36,920 --> 00:17:47,190
common here no not really

00:17:45,000 --> 00:17:48,600
I guess you could maybe think about that

00:17:47,190 --> 00:17:52,200
but I don't think any of the search

00:17:48,600 --> 00:17:54,330
engines do that so kind of homogenized

00:17:52,200 --> 00:17:57,690
the the words a little bit by removing

00:17:54,330 --> 00:18:02,400
extraneous marking and punctuation dye

00:17:57,690 --> 00:18:03,810
critics case folding and this gave me

00:18:02,400 --> 00:18:06,380
kind of tricky too I've got one system

00:18:03,810 --> 00:18:08,640
that was working on for a customer and

00:18:06,380 --> 00:18:13,280
they wanted to do this sort of thing and

00:18:08,640 --> 00:18:18,450
and so people would write in Cyrillic

00:18:13,280 --> 00:18:22,470
fonts or Greek and I could transliterate

00:18:18,450 --> 00:18:25,800
it into two Roman characters too before

00:18:22,470 --> 00:18:29,260
I do the search which actually works out

00:18:25,800 --> 00:18:32,080
really well because you know Russian or

00:18:29,260 --> 00:18:33,790
our Bulgarian witch uses Cyrillic font

00:18:32,080 --> 00:18:36,640
their indo-european languages there's a

00:18:33,790 --> 00:18:38,559
lot of cognate swith with other european

00:18:36,640 --> 00:18:39,580
languages and so you can still find

00:18:38,559 --> 00:18:41,429
words even though they're written

00:18:39,580 --> 00:18:44,700
completely different characters and

00:18:41,429 --> 00:18:47,710
that's that's a really cool thing to do

00:18:44,700 --> 00:18:55,900
there's a package that was originally

00:18:47,710 --> 00:18:57,820
done for perl called de Unicode instead

00:18:55,900 --> 00:19:00,220
of Unicode is D Unicode and what it will

00:18:57,820 --> 00:19:04,419
do is it will take any kind of Unicode

00:19:00,220 --> 00:19:08,350
text you know Han Chinese Han character

00:19:04,419 --> 00:19:10,179
Japanese Greek Korean but of Hebrew

00:19:08,350 --> 00:19:12,450
whatever and will convert it into just

00:19:10,179 --> 00:19:14,530
you know plain ol ASCII for you

00:19:12,450 --> 00:19:16,630
transliterate it so that it's you know

00:19:14,530 --> 00:19:18,250
it's the way it's supposed to pronounce

00:19:16,630 --> 00:19:20,410
and that though you might be some things

00:19:18,250 --> 00:19:22,679
you'd want to do before you do this the

00:19:20,410 --> 00:19:25,630
other thing you want to do is stimming

00:19:22,679 --> 00:19:27,730
this is a very language dependent thing

00:19:25,630 --> 00:19:30,520
and that's the basic idea between behind

00:19:27,730 --> 00:19:36,100
stemming is to try and find the root of

00:19:30,520 --> 00:19:39,370
each word so for example definitive gets

00:19:36,100 --> 00:19:41,230
simplified to just the senate or

00:19:39,370 --> 00:19:45,040
something that this is an example of the

00:19:41,230 --> 00:19:48,460
output of a classic stim ER for english

00:19:45,040 --> 00:19:50,740
called the porter stemmer it's a classic

00:19:48,460 --> 00:19:53,530
the guy porter what was his first name i

00:19:50,740 --> 00:19:56,799
forget all of a sudden he wrote this in

00:19:53,530 --> 00:19:58,540
the 70s or 80s and it's just sort of a

00:19:56,799 --> 00:20:01,540
classic algorithm works great for

00:19:58,540 --> 00:20:03,910
english if you use it doesn't work for

00:20:01,540 --> 00:20:06,820
other languages and so the problem with

00:20:03,910 --> 00:20:08,410
this is it's very language specific you

00:20:06,820 --> 00:20:09,940
have to have a stim ER that applies to

00:20:08,410 --> 00:20:13,210
the particular language that you're

00:20:09,940 --> 00:20:16,390
working on and if your document includes

00:20:13,210 --> 00:20:19,510
a mixture of multiple languages that

00:20:16,390 --> 00:20:21,190
could be a very serious problem but and

00:20:19,510 --> 00:20:22,660
so this is these are the sorts of things

00:20:21,190 --> 00:20:24,640
that you have to deal with here I've

00:20:22,660 --> 00:20:26,470
skimmed it using the porter stemmer to

00:20:24,640 --> 00:20:30,130
sort of simplify some of the words and

00:20:26,470 --> 00:20:32,620
get them down to their canonical form

00:20:30,130 --> 00:20:36,460
and then sometimes you want to remove

00:20:32,620 --> 00:20:38,080
stop words these are little words that

00:20:36,460 --> 00:20:39,730
occur everywhere and there are not

00:20:38,080 --> 00:20:40,880
generally considered helpful for

00:20:39,730 --> 00:20:43,400
searching

00:20:40,880 --> 00:20:45,410
I did some experiments for this talk and

00:20:43,400 --> 00:20:46,730
I think in a little bit of slot and a

00:20:45,410 --> 00:20:49,640
slide later we'll see some of the major

00:20:46,730 --> 00:20:51,140
search engines do stop words and one of

00:20:49,640 --> 00:20:55,370
them does not and we'll talk more about

00:20:51,140 --> 00:20:58,940
that in the in just a minute so once you

00:20:55,370 --> 00:21:00,920
get all of these get it processed like

00:20:58,940 --> 00:21:03,260
this you take every word in the document

00:21:00,920 --> 00:21:05,360
and as suppose this we're giving this

00:21:03,260 --> 00:21:07,730
document an identifier in this case

00:21:05,360 --> 00:21:09,770
number 2351

00:21:07,730 --> 00:21:11,030
we take every word in the document and

00:21:09,770 --> 00:21:14,690
then you have these things called

00:21:11,030 --> 00:21:18,620
posting lists and these are like records

00:21:14,690 --> 00:21:22,280
in the database and we've got a posting

00:21:18,620 --> 00:21:25,730
list for the word Anu and the posting

00:21:22,280 --> 00:21:29,150
list contains every document that uses

00:21:25,730 --> 00:21:30,920
the word new and we've got a got a

00:21:29,150 --> 00:21:32,630
posting list for every word that can

00:21:30,920 --> 00:21:34,250
possibly be used and so there's a bunch

00:21:32,630 --> 00:21:36,050
of these and then depending on how many

00:21:34,250 --> 00:21:39,320
documents have these posting lists can

00:21:36,050 --> 00:21:44,780
get very large so that's building the

00:21:39,320 --> 00:21:47,330
index this is this is what that's what

00:21:44,780 --> 00:21:51,080
you do in order to construct your your

00:21:47,330 --> 00:21:53,060
full text index now to query it you take

00:21:51,080 --> 00:21:56,260
your query here's somebody's time to UM

00:21:53,060 --> 00:21:59,210
recommend a new book as their query and

00:21:56,260 --> 00:22:01,340
you have to do the same processing steps

00:21:59,210 --> 00:22:04,370
on the query that you did on the

00:22:01,340 --> 00:22:07,610
original document we're going to case

00:22:04,370 --> 00:22:10,130
folding and diacritic removal and then

00:22:07,610 --> 00:22:12,020
you have to do stemming we changed

00:22:10,130 --> 00:22:13,760
recommendation to recommend there's the

00:22:12,020 --> 00:22:17,990
only change and then you pull out the

00:22:13,760 --> 00:22:21,020
stop words and it's very important here

00:22:17,990 --> 00:22:23,330
that you use exactly the same algorithm

00:22:21,020 --> 00:22:25,700
for transforming in the query text as

00:22:23,330 --> 00:22:28,880
you used when you've generated your

00:22:25,700 --> 00:22:30,260
index which is this is a problem with

00:22:28,880 --> 00:22:33,650
full text search that means that if you

00:22:30,260 --> 00:22:36,320
want to tweak your you're your dimmer or

00:22:33,650 --> 00:22:38,120
you decide that you don't want to do

00:22:36,320 --> 00:22:41,380
thankful you have to rebuild your whole

00:22:38,120 --> 00:22:41,380
index you got to start over

00:22:42,070 --> 00:22:48,650
so once you get all that you've got

00:22:47,390 --> 00:22:50,840
these three words you look up the

00:22:48,650 --> 00:22:51,960
posting lists for the three words in

00:22:50,840 --> 00:22:55,860
your search

00:22:51,960 --> 00:22:57,960
and then you take their intersection and

00:22:55,860 --> 00:23:00,869
that's going to be the documents that

00:22:57,960 --> 00:23:02,490
have all three words in them and there's

00:23:00,869 --> 00:23:05,639
a really efficient way to do this

00:23:02,490 --> 00:23:07,799
because the idea is that you in the

00:23:05,639 --> 00:23:11,549
posting list you store these document

00:23:07,799 --> 00:23:13,799
IDs and new in numerical order let's say

00:23:11,549 --> 00:23:15,869
that it's ascending order so you know

00:23:13,799 --> 00:23:17,340
the early documents come first and so

00:23:15,869 --> 00:23:21,539
you've got these lists that are in

00:23:17,340 --> 00:23:26,429
sorted order and you can process process

00:23:21,539 --> 00:23:28,110
them as streams so you've got all the so

00:23:26,429 --> 00:23:30,929
if this were a full internet search

00:23:28,110 --> 00:23:32,820
there are literally billions of web

00:23:30,929 --> 00:23:34,860
pages that contain the word book and

00:23:32,820 --> 00:23:37,649
billions that contain the word new and

00:23:34,860 --> 00:23:40,889
so both of those posting lists are very

00:23:37,649 --> 00:23:42,149
large and so you can you're straining

00:23:40,889 --> 00:23:44,639
them off the disk into this little

00:23:42,149 --> 00:23:48,600
algorithm here you're getting to to

00:23:44,639 --> 00:23:51,330
identifier tune integers at once and if

00:23:48,600 --> 00:23:53,279
the first one is less than the second we

00:23:51,330 --> 00:23:54,690
toss it away the second one is less than

00:23:53,279 --> 00:23:57,360
the first one you toss it away if

00:23:54,690 --> 00:23:58,499
they're the same though you can pass

00:23:57,360 --> 00:24:01,409
that down because that's the

00:23:58,499 --> 00:24:08,279
intersection this very quick merge it

00:24:01,409 --> 00:24:10,379
happens very fast and you can gang this

00:24:08,279 --> 00:24:12,269
up you can do multiple operations this

00:24:10,379 --> 00:24:14,340
way to do as many terms as you want

00:24:12,269 --> 00:24:15,990
processing is processing it through

00:24:14,340 --> 00:24:18,929
these little intersect operators like

00:24:15,990 --> 00:24:21,330
that and that'll very quickly get you

00:24:18,929 --> 00:24:22,789
just the documents that have all the

00:24:21,330 --> 00:24:27,059
words that you're asking for in them

00:24:22,789 --> 00:24:28,860
well what about or same idea except for

00:24:27,059 --> 00:24:31,440
instead of doing an intersection of the

00:24:28,860 --> 00:24:33,499
posting lists you do a union of the

00:24:31,440 --> 00:24:39,029
posting list so here the document

00:24:33,499 --> 00:24:39,419
changes slightly the algorithm changes

00:24:39,029 --> 00:24:42,899
slightly

00:24:39,419 --> 00:24:44,940
if you output the smaller of the two and

00:24:42,899 --> 00:24:46,679
then if they're equal you consume them

00:24:44,940 --> 00:24:47,999
both otherwise you just consume the

00:24:46,679 --> 00:24:50,009
smallest and you repeat until you're

00:24:47,999 --> 00:24:51,510
done so obviously with an or you're

00:24:50,009 --> 00:24:54,360
going to get more out of it than with

00:24:51,510 --> 00:24:57,690
and but you still get the result and you

00:24:54,360 --> 00:25:02,700
can combine these just like you can with

00:24:57,690 --> 00:25:04,770
an inner intersect operator and and you

00:25:02,700 --> 00:25:07,560
can even do things like a recommend a

00:25:04,770 --> 00:25:10,200
new book about tickle or SQLite where

00:25:07,560 --> 00:25:12,090
you do some unions and then some

00:25:10,200 --> 00:25:13,590
intersections and then at the bottom you

00:25:12,090 --> 00:25:16,950
just get a list of all the documents

00:25:13,590 --> 00:25:20,130
that have this stuff and you know if

00:25:16,950 --> 00:25:22,500
you're careful if if you have some a

00:25:20,130 --> 00:25:24,500
priori idea of which documents you're

00:25:22,500 --> 00:25:28,020
going to want to return most frequently

00:25:24,500 --> 00:25:30,060
like you know you know you know the ones

00:25:28,020 --> 00:25:33,210
that that want you want to be near the

00:25:30,060 --> 00:25:35,370
top of your results give them very small

00:25:33,210 --> 00:25:36,780
document numbers put them in first and

00:25:35,370 --> 00:25:42,000
so they're going to come out of the list

00:25:36,780 --> 00:25:47,610
first in this operation so if you want

00:25:42,000 --> 00:25:49,860
to do a prefix search that's just really

00:25:47,610 --> 00:25:54,540
kind of doing a union of ever all of the

00:25:49,860 --> 00:25:56,940
posting lists that start with th so you

00:25:54,540 --> 00:25:59,780
know here's a bunch of posting lists I

00:25:56,940 --> 00:26:02,520
just use the words that were on the I

00:25:59,780 --> 00:26:05,880
just went check all the posting lists on

00:26:02,520 --> 00:26:07,470
a SQLite website search indexing and so

00:26:05,880 --> 00:26:09,180
and you've got a bunch of these and you

00:26:07,470 --> 00:26:11,250
can feed them all into a Union operator

00:26:09,180 --> 00:26:13,710
all at once and then find all the words

00:26:11,250 --> 00:26:15,570
that start with th now if it's something

00:26:13,710 --> 00:26:17,910
small like you know all the words that

00:26:15,570 --> 00:26:20,340
start with T you can actually end up

00:26:17,910 --> 00:26:22,620
with thousands and thousands of these

00:26:20,340 --> 00:26:25,650
all feeding into one thing and you could

00:26:22,620 --> 00:26:28,650
if you wanted to think about creating a

00:26:25,650 --> 00:26:32,390
separate posting list just that contain

00:26:28,650 --> 00:26:32,390
to all words that start with T question

00:26:38,680 --> 00:26:43,280
so the comet was some some engines

00:26:41,540 --> 00:26:45,200
requiring you to have a minimum of three

00:26:43,280 --> 00:26:48,170
characters before they'll even attempt

00:26:45,200 --> 00:26:50,210
this and that's just probably to limit

00:26:48,170 --> 00:26:53,600
the load because you know if searching

00:26:50,210 --> 00:26:57,740
for T star is going to find a lot of

00:26:53,600 --> 00:27:00,020
documents generally it really it depends

00:26:57,740 --> 00:27:02,030
on your collection I mean a T star works

00:27:00,020 --> 00:27:02,930
fine on the SQLite website because we

00:27:02,030 --> 00:27:06,890
only have about a thousand documents

00:27:02,930 --> 00:27:10,130
there but you know you'd be given to a

00:27:06,890 --> 00:27:11,300
larger document set you might want to

00:27:10,130 --> 00:27:13,460
have that restriction in place

00:27:11,300 --> 00:27:15,380
that's definitely and remember users

00:27:13,460 --> 00:27:17,480
don't normally do these these prefix

00:27:15,380 --> 00:27:19,730
urges like this this is sort of a

00:27:17,480 --> 00:27:21,770
facility that that is wrapped by the

00:27:19,730 --> 00:27:24,740
larger application to allow you to do

00:27:21,770 --> 00:27:27,620
search as you type so if you're doing a

00:27:24,740 --> 00:27:30,410
search as you type type thing you might

00:27:27,620 --> 00:27:31,760
want to wait until you've got at least

00:27:30,410 --> 00:27:35,480
three characters before you start doing

00:27:31,760 --> 00:27:37,850
the search okay so that's all well and

00:27:35,480 --> 00:27:41,030
good an interesting thing here is to

00:27:37,850 --> 00:27:43,460
note to this structure I leave you've

00:27:41,030 --> 00:27:45,410
heard of the Google file system yeah you

00:27:43,460 --> 00:27:47,870
heard of that and Hadoop and all of the

00:27:45,410 --> 00:27:49,850
big file and I read about the Google

00:27:47,870 --> 00:27:51,380
file system and there's a this is back

00:27:49,850 --> 00:27:52,790
when Google used to publish papers and

00:27:51,380 --> 00:27:55,820
contribute you know to general knowledge

00:27:52,790 --> 00:27:56,929
now they're kind of secretive they there

00:27:55,820 --> 00:27:58,640
was this thing on the Google file system

00:27:56,929 --> 00:28:00,500
talk about how they needed a network

00:27:58,640 --> 00:28:03,140
file system and they had all these

00:28:00,500 --> 00:28:05,450
different requirements and how you know

00:28:03,140 --> 00:28:07,760
the files were really big and you would

00:28:05,450 --> 00:28:09,230
read a lot and you would pin to them but

00:28:07,760 --> 00:28:11,390
you would never really update them very

00:28:09,230 --> 00:28:14,330
much and I thought what an odd set of

00:28:11,390 --> 00:28:17,929
requirements but then you start looking

00:28:14,330 --> 00:28:19,550
at it in terms of this reading posting

00:28:17,929 --> 00:28:22,010
lists and taking intersections and

00:28:19,550 --> 00:28:23,750
unions of them and then you look at how

00:28:22,010 --> 00:28:25,429
the Google file system the structure and

00:28:23,750 --> 00:28:28,490
you think mm-hmm

00:28:25,429 --> 00:28:30,290
yes that's not a coincidence I'm I

00:28:28,490 --> 00:28:31,850
suspect I have no inside knowledge of

00:28:30,290 --> 00:28:34,990
how Google does their their full-text

00:28:31,850 --> 00:28:37,550
search but one one can make suppositions

00:28:34,990 --> 00:28:40,730
all right so what about phrase queries

00:28:37,550 --> 00:28:42,620
this is a very useful facility and but

00:28:40,730 --> 00:28:44,360
it can be tricky

00:28:42,620 --> 00:28:46,240
the naive approach would be to do just

00:28:44,360 --> 00:28:49,360
an ordinary and query

00:28:46,240 --> 00:28:52,240
and then gather up all the documents

00:28:49,360 --> 00:28:54,730
contain all three words are all however

00:28:52,240 --> 00:28:56,350
many words you're searching for and then

00:28:54,730 --> 00:28:58,750
pulling the complete text of those

00:28:56,350 --> 00:29:00,580
documents and scan the complete text to

00:28:58,750 --> 00:29:03,760
see if those words occurred in the order

00:29:00,580 --> 00:29:05,890
specified and beside each other and you

00:29:03,760 --> 00:29:10,059
know for a lot of cases that that's a

00:29:05,890 --> 00:29:12,730
reasonable thing to do but you know

00:29:10,059 --> 00:29:17,500
there are some cases that like you know

00:29:12,730 --> 00:29:19,390
a phrase search for thee and but as an

00:29:17,500 --> 00:29:20,290
example you might ask well why do you

00:29:19,390 --> 00:29:22,300
want to do that well this is a

00:29:20,290 --> 00:29:24,760
pathological case those three words

00:29:22,300 --> 00:29:29,230
occur in just about every document out

00:29:24,760 --> 00:29:30,990
there but they very very rarely occur in

00:29:29,230 --> 00:29:34,630
that order

00:29:30,990 --> 00:29:37,150
okay and so I actually tried this phrase

00:29:34,630 --> 00:29:40,210
search on the the three big search

00:29:37,150 --> 00:29:44,080
engines and it did not work on being or

00:29:40,210 --> 00:29:46,990
or Yahoo and I think that this because

00:29:44,080 --> 00:29:49,390
those two search engines are using stop

00:29:46,990 --> 00:29:50,740
words they don't allow these words in

00:29:49,390 --> 00:29:53,080
the search at all because they were just

00:29:50,740 --> 00:29:56,620
giving me random results but it actually

00:29:53,080 --> 00:29:59,679
worked on Google and I found some

00:29:56,620 --> 00:30:04,450
documents that contain thee and but in

00:29:59,679 --> 00:30:08,230
that order I thought that was pretty

00:30:04,450 --> 00:30:09,370
cool I thought but how do they do that

00:30:08,230 --> 00:30:12,540
and then they they got that later

00:30:09,370 --> 00:30:14,679
Richenda they're searching for literally

00:30:12,540 --> 00:30:17,380
what's what's having documents that they

00:30:14,679 --> 00:30:19,630
have now and these searches does anybody

00:30:17,380 --> 00:30:21,400
know I know that it's more than will fit

00:30:19,630 --> 00:30:24,490
and you can't count them with a four

00:30:21,400 --> 00:30:26,679
that was a big deal back ten years ago

00:30:24,490 --> 00:30:29,140
when Google had to go away from using a

00:30:26,679 --> 00:30:31,150
four by integer for numbering their

00:30:29,140 --> 00:30:32,440
documents okay that was I was a big deal

00:30:31,150 --> 00:30:34,660
for them I haven't heard anything since

00:30:32,440 --> 00:30:38,830
I mean how many bytes of integer do they

00:30:34,660 --> 00:30:41,679
need now does anybody know par me yeah

00:30:38,830 --> 00:30:43,120
yeah whatever one mole now it's probably

00:30:41,679 --> 00:30:45,130
not that many but still they have they

00:30:43,120 --> 00:30:46,690
more than four billion documents and

00:30:45,130 --> 00:30:48,820
they did this in a few milliseconds how

00:30:46,690 --> 00:30:52,120
did it do that well what you have to do

00:30:48,820 --> 00:30:54,040
for the phrase search thing is you have

00:30:52,120 --> 00:30:55,510
to store some additional information you

00:30:54,040 --> 00:30:58,780
go up and you take your original

00:30:55,510 --> 00:31:00,700
document and you number all of the words

00:30:58,780 --> 00:31:04,270
in the document you remember the

00:31:00,700 --> 00:31:06,070
position of each word and then when you

00:31:04,270 --> 00:31:10,330
store the documents and the posting

00:31:06,070 --> 00:31:13,120
lists you also store its position within

00:31:10,330 --> 00:31:14,890
the document and if a word occurs in a

00:31:13,120 --> 00:31:17,230
document more than once it has to be in

00:31:14,890 --> 00:31:19,750
the posting list more than once so for

00:31:17,230 --> 00:31:24,070
example book occurs up here three times

00:31:19,750 --> 00:31:25,540
at position 5 15 and 25 and I have to

00:31:24,070 --> 00:31:29,740
store that three times in the posting

00:31:25,540 --> 00:31:32,610
list and so then when you do your query

00:31:29,740 --> 00:31:35,550
you have a slightly more complicated

00:31:32,610 --> 00:31:39,910
intersect algorithm that has to consider

00:31:35,550 --> 00:31:43,300
not only the document number but the

00:31:39,910 --> 00:31:47,020
position within the document and you

00:31:43,300 --> 00:31:49,600
know they have to be off by one well in

00:31:47,020 --> 00:31:51,820
the simple case of a two-word phrase off

00:31:49,600 --> 00:31:53,590
by one if it were a three word phrase

00:31:51,820 --> 00:31:56,890
then the first one has to be offset by

00:31:53,590 --> 00:31:58,210
two from the last one and you get the

00:31:56,890 --> 00:32:01,270
idea

00:31:58,210 --> 00:32:03,700
and you can do this and very quickly

00:32:01,270 --> 00:32:06,840
find out all the documents that have the

00:32:03,700 --> 00:32:09,490
phrase and hey this really kind of ghost

00:32:06,840 --> 00:32:11,920
shows you how to do the near search too

00:32:09,490 --> 00:32:13,330
doesn't it because now if you want to

00:32:11,920 --> 00:32:14,680
find all the documents that have two

00:32:13,330 --> 00:32:17,440
words near each other

00:32:14,680 --> 00:32:19,870
you just have to tweak this little thing

00:32:17,440 --> 00:32:21,790
here to be a range query order you know

00:32:19,870 --> 00:32:24,130
a range expression where X is greater

00:32:21,790 --> 00:32:26,290
than this or less than that other and

00:32:24,130 --> 00:32:27,880
then that will work just as well for

00:32:26,290 --> 00:32:29,980
that well so you kind of get phrase

00:32:27,880 --> 00:32:34,470
phrase search and range query are kind

00:32:29,980 --> 00:32:34,470
of the same thing comment question

00:32:38,410 --> 00:32:44,070
faster if you do actually worry

00:32:54,020 --> 00:32:58,140
eliminate it that way yeah all right so

00:32:56,940 --> 00:32:59,910
the comment was you know maybe if you

00:32:58,140 --> 00:33:01,890
look for words in the phrase that were

00:32:59,910 --> 00:33:04,500
unusual and only gave you a few

00:33:01,890 --> 00:33:06,480
documents you can kind of use that as a

00:33:04,500 --> 00:33:08,580
basis and then examine those few

00:33:06,480 --> 00:33:11,610
documents and yeah you can pull some

00:33:08,580 --> 00:33:12,810
optimization games like that but you

00:33:11,610 --> 00:33:16,980
know if you're if you're looking for the

00:33:12,810 --> 00:33:20,310
phrase the but and this is the only way

00:33:16,980 --> 00:33:25,800
to do it and in my experiments parently

00:33:20,310 --> 00:33:27,840
googles then I'm doing this okay so and

00:33:25,800 --> 00:33:33,150
of course you can combine these sorts of

00:33:27,840 --> 00:33:34,470
things and have big trees and that's one

00:33:33,150 --> 00:33:36,540
thing that it's very important it's

00:33:34,470 --> 00:33:38,910
important to balance this tree note note

00:33:36,540 --> 00:33:40,760
in particular that this really lends

00:33:38,910 --> 00:33:42,810
itself to parallelism man you can really

00:33:40,760 --> 00:33:44,580
parallelize this in a big way because

00:33:42,810 --> 00:33:46,080
each one of these little comparison

00:33:44,580 --> 00:33:48,210
operators could be on a separate machine

00:33:46,080 --> 00:33:49,560
and each one of these posting lists

00:33:48,210 --> 00:33:52,890
could be pulled off of a different disk

00:33:49,560 --> 00:33:54,270
drive you can really really paralyze

00:33:52,890 --> 00:33:56,220
this but it's important that you kind of

00:33:54,270 --> 00:33:57,510
balance the tree you don't want all you

00:33:56,220 --> 00:33:58,620
don't want that if you got a lot of

00:33:57,510 --> 00:34:00,330
search terms you don't want the tree

00:33:58,620 --> 00:34:02,400
going off in one direction it's

00:34:00,330 --> 00:34:05,690
important to keep it balanced so that

00:34:02,400 --> 00:34:10,200
you can get performance out of it okay

00:34:05,690 --> 00:34:11,700
so if that's how you find words and you

00:34:10,200 --> 00:34:13,710
know that you've actually searched for

00:34:11,700 --> 00:34:18,330
but people don't really enter the words

00:34:13,710 --> 00:34:22,710
that they want to search for they enter

00:34:18,330 --> 00:34:23,910
words like this the doctor says aunt

00:34:22,710 --> 00:34:29,970
betty has pneumonia

00:34:23,910 --> 00:34:33,500
what is that John's going up to

00:34:29,970 --> 00:34:37,220
Philadelphia to visit somebody and

00:34:33,500 --> 00:34:37,220
what's a yacht club

00:34:37,260 --> 00:34:45,520
now and yeah and yeah my friend's

00:34:44,109 --> 00:34:51,220
daughter is going to school she study in

00:34:45,520 --> 00:34:53,919
sociology or psychology excuse me yeah

00:34:51,220 --> 00:34:55,599
and we don't want to we don't we're all

00:34:53,919 --> 00:34:57,940
against bureaucracy you're in here

00:34:55,599 --> 00:35:00,220
you're in Charlotte North Carolina now I

00:34:57,940 --> 00:35:02,530
don't know this is the correct way you

00:35:00,220 --> 00:35:03,849
know the place where they keep books you

00:35:02,530 --> 00:35:05,410
know where you go to borrow books in

00:35:03,849 --> 00:35:08,619
Charlotte with Keanu is pronounced

00:35:05,410 --> 00:35:11,470
library okay that is the way it is

00:35:08,619 --> 00:35:14,619
pronounced if you say library stupid

00:35:11,470 --> 00:35:20,140
Yankee okay that's the way but you know

00:35:14,619 --> 00:35:21,700
and I tried these and and and then the

00:35:20,140 --> 00:35:23,950
search engines they they actually do the

00:35:21,700 --> 00:35:25,570
right thing all of these so there's

00:35:23,950 --> 00:35:27,160
spelling correction really has to be a

00:35:25,570 --> 00:35:28,450
part of this because you know your users

00:35:27,160 --> 00:35:31,170
are not going to do the right thing so

00:35:28,450 --> 00:35:33,550
how do you do this spell cream here um

00:35:31,170 --> 00:35:35,619
why is this like you oh yeah here I've

00:35:33,550 --> 00:35:39,520
typed into being and I've misspelled

00:35:35,619 --> 00:35:42,760
SQLite database and it says that yes oh

00:35:39,520 --> 00:35:45,220
but no I put the plus sign on front if

00:35:42,760 --> 00:35:47,589
you don't want the web the searching

00:35:45,220 --> 00:35:51,160
needs to do the spelling correction for

00:35:47,589 --> 00:35:53,140
you I found that you can put a plus sign

00:35:51,160 --> 00:35:55,180
in the front of the query and it'll

00:35:53,140 --> 00:35:56,650
it'll take literally what you type and

00:35:55,180 --> 00:35:58,859
won't try and spell correct for you at

00:35:56,650 --> 00:36:01,720
least being in Yahoo work that way

00:35:58,859 --> 00:36:03,190
Google insists upon spelling correcting

00:36:01,720 --> 00:36:04,869
regardless of what you did if there's

00:36:03,190 --> 00:36:06,490
some magic way to get Google to not

00:36:04,869 --> 00:36:09,640
spell correct I have not figured out

00:36:06,490 --> 00:36:12,960
what it is so yes do a plus in front to

00:36:09,640 --> 00:36:12,960
disable spelling correction

00:36:22,330 --> 00:36:27,860
yeah so I you know I had how do you get

00:36:25,700 --> 00:36:35,420
it to do that with I'm feeling lucky I

00:36:27,860 --> 00:36:36,800
haven't figured that out yet so the

00:36:35,420 --> 00:36:38,630
comment was you can put quotes around

00:36:36,800 --> 00:36:41,510
each misspelled word and that prevents

00:36:38,630 --> 00:36:49,730
it from spell correcting okay I did not

00:36:41,510 --> 00:36:51,470
know that in the comp the comment was

00:36:49,730 --> 00:36:53,030
that they got rid of the plus sign thing

00:36:51,470 --> 00:36:55,970
when they came up with Google+ because

00:36:53,030 --> 00:36:58,070
there was an issue there that's entirely

00:36:55,970 --> 00:37:00,920
possible so what so spelling correction

00:36:58,070 --> 00:37:02,570
is a big part of search and spelling

00:37:00,920 --> 00:37:04,850
correction is a big problem it's been

00:37:02,570 --> 00:37:06,500
researched for a long time and there's

00:37:04,850 --> 00:37:08,120
just tons of papers out of there on this

00:37:06,500 --> 00:37:09,500
the big problem with spelling Craig's

00:37:08,120 --> 00:37:13,690
the first identify words that are

00:37:09,500 --> 00:37:16,220
misspelled because English has the total

00:37:13,690 --> 00:37:19,070
vocabulary of English is like a million

00:37:16,220 --> 00:37:22,490
words nobody in this room knows more

00:37:19,070 --> 00:37:24,920
than thirty thousand of those and you

00:37:22,490 --> 00:37:27,170
know any misspelling you type has a

00:37:24,920 --> 00:37:30,440
strong chance of being another word and

00:37:27,170 --> 00:37:32,060
you know so so figuring out which word

00:37:30,440 --> 00:37:33,710
you misspelled is a hard problem I'm

00:37:32,060 --> 00:37:36,310
gonna leave it there then you have to

00:37:33,710 --> 00:37:40,900
locate possible corrected Spelling's and

00:37:36,310 --> 00:37:43,160
then you have to rank them by quality so

00:37:40,900 --> 00:37:46,130
we'll start at the end that ranking by

00:37:43,160 --> 00:37:48,680
quality it's there's bazillion ways to

00:37:46,130 --> 00:37:49,910
rank spelling Corrections by quality but

00:37:48,680 --> 00:37:53,350
everything keeps coming back to this

00:37:49,910 --> 00:37:55,550
idea of edit distance where you you

00:37:53,350 --> 00:37:56,780
count the number of insertions or

00:37:55,550 --> 00:37:59,420
deletions and substitutions maybe

00:37:56,780 --> 00:38:01,750
transpositions and the total amount is

00:37:59,420 --> 00:38:04,820
the Edit distance between the two words

00:38:01,750 --> 00:38:07,520
and some of you might want to wait that

00:38:04,820 --> 00:38:09,910
so let's say here's here's the Edit

00:38:07,520 --> 00:38:14,150
distance between pneumonia and pneumonia

00:38:09,910 --> 00:38:15,680
we can insert the pee changed the W to a

00:38:14,150 --> 00:38:17,599
you delete the a

00:38:15,680 --> 00:38:35,750
changed the water with ice and then edit

00:38:17,599 --> 00:38:37,579
instances for comment okay so the there

00:38:35,750 --> 00:38:41,869
was comment about Sam tact don't get

00:38:37,579 --> 00:38:48,619
ahead of me coming I'm gonna get there

00:38:41,869 --> 00:38:51,579
just just chill so yeah so and the other

00:38:48,619 --> 00:38:54,380
thing is he might want wait this because

00:38:51,579 --> 00:38:55,910
you know the PN is a common little thing

00:38:54,380 --> 00:38:57,050
that people mess up so you know putting

00:38:55,910 --> 00:38:59,859
a P at the end of the word you might

00:38:57,050 --> 00:39:02,809
want to give less weight to that

00:38:59,859 --> 00:39:05,000
changing a vowel to another vowel is a

00:39:02,809 --> 00:39:07,640
pretty common thing so you give so

00:39:05,000 --> 00:39:10,400
that's not as bad of an edit as some

00:39:07,640 --> 00:39:11,839
other things and so I just tossed up you

00:39:10,400 --> 00:39:13,790
know and curse the weights here are

00:39:11,839 --> 00:39:15,950
pretty much subjective how do you come

00:39:13,790 --> 00:39:19,339
up with good weights for measuring this

00:39:15,950 --> 00:39:21,770
I chose one at random and it gave me a

00:39:19,339 --> 00:39:26,690
weighted at a distance of 1.71 which is

00:39:21,770 --> 00:39:28,700
still a lot closer than four so one

00:39:26,690 --> 00:39:31,369
strategy would be that you know you

00:39:28,700 --> 00:39:33,170
start with the misspelled word and this

00:39:31,369 --> 00:39:34,190
is if you look at if you do an internet

00:39:33,170 --> 00:39:35,569
search well how do you out of a new

00:39:34,190 --> 00:39:37,700
spelling correction there's a real

00:39:35,569 --> 00:39:39,920
popular pot unit there's a real popular

00:39:37,700 --> 00:39:42,020
website where you can do this algorithm

00:39:39,920 --> 00:39:44,420
in Python in 22 lines or something like

00:39:42,020 --> 00:39:46,160
that and you start with the misspelled

00:39:44,420 --> 00:39:47,930
word and you start you know making all

00:39:46,160 --> 00:39:49,309
these edit operations and then checking

00:39:47,930 --> 00:39:53,510
to see if it's a word in the in the

00:39:49,309 --> 00:39:54,770
dictionary and you know and then check

00:39:53,510 --> 00:39:56,119
and then do the edit distance get the

00:39:54,770 --> 00:39:57,890
result and keep the best once and those

00:39:56,119 --> 00:40:03,650
are your possible spelling Corrections

00:39:57,890 --> 00:40:05,359
and this works okay for typos stuff that

00:40:03,650 --> 00:40:10,040
you know where the where you really only

00:40:05,359 --> 00:40:13,190
have one thing wrong but where you have

00:40:10,040 --> 00:40:14,930
things like pneumonia to pneumonia that

00:40:13,190 --> 00:40:17,299
technique just doesn't work because up

00:40:14,930 --> 00:40:19,760
here there's only a few hundred you know

00:40:17,299 --> 00:40:21,589
when you're trying to take this and find

00:40:19,760 --> 00:40:23,660
all possible changes there's only a few

00:40:21,589 --> 00:40:25,849
hundred possible changes you have to

00:40:23,660 --> 00:40:28,359
make before you find the right word but

00:40:25,849 --> 00:40:30,400
down here if you start randomly

00:40:28,359 --> 00:40:32,440
making changes to pneumonia trying to

00:40:30,400 --> 00:40:34,839
change into pneumonia you'll have to

00:40:32,440 --> 00:40:36,759
look at literally billions of different

00:40:34,839 --> 00:40:39,819
changes before you actually stumble upon

00:40:36,759 --> 00:40:42,190
the right one you know and if you have a

00:40:39,819 --> 00:40:44,829
warehouse stacked to the roof with

00:40:42,190 --> 00:40:47,140
servers maybe you can get away with that

00:40:44,829 --> 00:40:51,279
but if you're trying to do this on your

00:40:47,140 --> 00:40:54,400
your iPhone not so much okay you got to

00:40:51,279 --> 00:40:57,999
come up with a different algorithm so

00:40:54,400 --> 00:40:59,349
phonetic spelling correction the other

00:40:57,999 --> 00:41:02,140
approach is to kind of guess what the

00:40:59,349 --> 00:41:04,299
word sounds like and then find

00:41:02,140 --> 00:41:09,400
vocabulary words that sound similar and

00:41:04,299 --> 00:41:12,369
compute the Edit distance there so this

00:41:09,400 --> 00:41:14,140
is the kind of a sound X approach here

00:41:12,369 --> 00:41:16,809
where you take the the letters and you

00:41:14,140 --> 00:41:18,999
map them into numbers and these are

00:41:16,809 --> 00:41:21,249
letters that produce sounds that sound

00:41:18,999 --> 00:41:25,259
that they're similar like vowels and

00:41:21,249 --> 00:41:32,489
semivowels or they just get eliminated

00:41:25,259 --> 00:41:35,859
by labels get one rear stops get to

00:41:32,489 --> 00:41:41,579
Libya Dental stops get three semivowels

00:41:35,859 --> 00:41:41,579
get whatever honey yeah

00:41:42,540 --> 00:41:57,210
oh yeah all right so the question is

00:41:55,830 --> 00:41:58,950
would it be easier to keep an index of

00:41:57,210 --> 00:42:02,880
misspelled words there's all kinds of

00:41:58,950 --> 00:42:05,430
games you can play and it depends on if

00:42:02,880 --> 00:42:08,310
your Google or Yahoo or whatever and you

00:42:05,430 --> 00:42:09,930
you're able to mine your traffic to come

00:42:08,310 --> 00:42:12,780
up with a library of misspelled words

00:42:09,930 --> 00:42:16,140
that works great if you're trying to

00:42:12,780 --> 00:42:18,180
build a app for Android and the whole

00:42:16,140 --> 00:42:20,700
thing has to fit in a certain memory

00:42:18,180 --> 00:42:22,650
budget then having a big table of

00:42:20,700 --> 00:42:25,620
misspelled words doesn't work as well

00:42:22,650 --> 00:42:26,820
and even then they're going to be

00:42:25,620 --> 00:42:29,190
misspelled words that are not in your

00:42:26,820 --> 00:42:31,470
table so you've still got to be able to

00:42:29,190 --> 00:42:32,790
do this so probably the best strategy is

00:42:31,470 --> 00:42:35,550
to do the first thing I'll talk about

00:42:32,790 --> 00:42:37,830
you know where you do the spelling

00:42:35,550 --> 00:42:39,540
correction by trying variations on the

00:42:37,830 --> 00:42:41,160
misspelled word and then doing a

00:42:39,540 --> 00:42:43,680
phonetic thing I like what's going to

00:42:41,160 --> 00:42:45,230
say I like to go to letters rather than

00:42:43,680 --> 00:42:48,600
numbers that makes more sense to me and

00:42:45,230 --> 00:42:52,460
and then then also have a lookup table

00:42:48,600 --> 00:42:56,550
it I'll I'll go back to my original

00:42:52,460 --> 00:43:00,690
example for example yacht I spelled at

00:42:56,550 --> 00:43:02,970
y8e there's no way that you're gonna to

00:43:00,690 --> 00:43:04,440
really make that happen you're gonna

00:43:02,970 --> 00:43:05,700
have to have a lookup table that's sort

00:43:04,440 --> 00:43:07,350
of an exception to the rule there are a

00:43:05,700 --> 00:43:08,520
lot of words that are that backed that

00:43:07,350 --> 00:43:11,220
way so you've got to have the lookup

00:43:08,520 --> 00:43:12,360
table to help you but these are all

00:43:11,220 --> 00:43:15,810
you've gotta really use all three

00:43:12,360 --> 00:43:18,060
algorithms so I like to use a phonetic

00:43:15,810 --> 00:43:19,890
code that you know maps letters and the

00:43:18,060 --> 00:43:22,710
letters that makes more sense to me so

00:43:19,890 --> 00:43:26,520
pneumonia and pneumonia both map to the

00:43:22,710 --> 00:43:28,140
same thing here and Philadelphia and

00:43:26,520 --> 00:43:32,070
Philadelphia both map to the same thing

00:43:28,140 --> 00:43:33,810
here but yacht-club does not the author

00:43:32,070 --> 00:43:36,030
Club would not match her so yacht club

00:43:33,810 --> 00:43:39,590
would have to be in my my dictionary of

00:43:36,030 --> 00:43:39,590
commonly misspelled words

00:43:43,620 --> 00:43:50,110
it does amazing we Eastern languages it

00:43:47,380 --> 00:43:53,290
does or like if you're searching Chinese

00:43:50,110 --> 00:43:55,270
though you translate to pinyin and then

00:43:53,290 --> 00:43:56,980
then you can do it that way and hope

00:43:55,270 --> 00:44:03,760
that the person writing it doesn't speak

00:43:56,980 --> 00:44:07,240
Cantonese yes yes

00:44:03,760 --> 00:44:09,670
so you well but but you know the the

00:44:07,240 --> 00:44:11,410
opinion is just the Mandarin dialect and

00:44:09,670 --> 00:44:13,030
so there's a bazillion other dialects oh

00:44:11,410 --> 00:44:14,920
you got that a problem but that's yeah

00:44:13,030 --> 00:44:17,560
so you can translate transliterate

00:44:14,920 --> 00:44:19,060
anything into just the Roman characters

00:44:17,560 --> 00:44:21,370
and then do this translation here and it

00:44:19,060 --> 00:44:22,810
works pretty well that actually works

00:44:21,370 --> 00:44:26,200
pretty well it was amazing what you'll

00:44:22,810 --> 00:44:27,790
find and I like stumbling across

00:44:26,200 --> 00:44:31,720
yacht-club because somebody had typed

00:44:27,790 --> 00:44:33,190
something like that in in in Cyrillic it

00:44:31,720 --> 00:44:36,970
was some Cyrillic word I'd never heard

00:44:33,190 --> 00:44:39,250
of before and and it translates to a

00:44:36,970 --> 00:44:41,410
yacht port actually was what it was and

00:44:39,250 --> 00:44:44,370
you know if when you transliterated it

00:44:41,410 --> 00:44:47,860
comes out yacht port and it found it I

00:44:44,370 --> 00:44:49,960
was so amazed but it's a sir it was a

00:44:47,860 --> 00:44:51,010
Russian word I've never heard it so

00:44:49,960 --> 00:44:55,000
anyway this sort of thing works well for

00:44:51,010 --> 00:44:56,950
phonetics not so good for typos you

00:44:55,000 --> 00:45:00,550
really need to combine both algorithms

00:44:56,950 --> 00:45:05,550
and you need in a table of exceptions

00:45:00,550 --> 00:45:07,240
back up above I had my list of from

00:45:05,550 --> 00:45:08,920
troublesome Spelling's

00:45:07,240 --> 00:45:10,570
I tried all six of these on the on the

00:45:08,920 --> 00:45:15,580
search engines they corrected them all

00:45:10,570 --> 00:45:19,360
correctly but on all of these would be

00:45:15,580 --> 00:45:21,370
corrected by the phonetic changes except

00:45:19,360 --> 00:45:23,080
for Yacht Club you've got to have a

00:45:21,370 --> 00:45:24,520
table of exceptions for that one that

00:45:23,080 --> 00:45:27,150
was just there's no there's no way to

00:45:24,520 --> 00:45:27,150
figure that out otherwise

00:45:40,580 --> 00:45:46,320
okay so the comment is if you extend

00:45:43,050 --> 00:45:48,900
this method to include lots of phonetic

00:45:46,320 --> 00:45:50,100
rules of but if you can extend it to

00:45:48,900 --> 00:45:51,390
include lots of phonetic rules and you

00:45:50,100 --> 00:45:54,480
might be able get yacht-club to work

00:45:51,390 --> 00:45:56,370
with this phonetic matching to do that

00:45:54,480 --> 00:45:57,450
you're going to get to get a lot of

00:45:56,370 --> 00:45:59,640
rules if you'll ever looked at the rule

00:45:57,450 --> 00:46:01,200
set for double meta phone which is one

00:45:59,640 --> 00:46:04,200
of these phonetic hashing hashing things

00:46:01,200 --> 00:46:05,430
it's horrendous and you just don't want

00:46:04,200 --> 00:46:07,680
to memorize all that you don't want to

00:46:05,430 --> 00:46:11,130
learn it and plus it only works for

00:46:07,680 --> 00:46:15,060
English whereas a simple rule works for

00:46:11,130 --> 00:46:16,980
a lot of languages and then you can just

00:46:15,060 --> 00:46:32,100
use a small table of exceptions to

00:46:16,980 --> 00:46:36,090
handle the hard cases well yeah the

00:46:32,100 --> 00:46:38,970
vowels are taken out yeah yeah so all

00:46:36,090 --> 00:46:40,260
right I the question mark means it's

00:46:38,970 --> 00:46:45,450
time for questions only

00:46:40,260 --> 00:46:52,080
oh please repeat the question okay I'm

00:46:45,450 --> 00:46:55,350
sorry so let's just move on ice already

00:46:52,080 --> 00:46:57,450
past my memory horizon so I actually put

00:46:55,350 --> 00:47:03,540
together so that's sort of the tour of

00:46:57,450 --> 00:47:08,040
why spell of what's what's involved

00:47:03,540 --> 00:47:10,050
behind full text search and my plan was

00:47:08,040 --> 00:47:11,430
I I wrote a little bit of code for full

00:47:10,050 --> 00:47:13,620
text search that you can just download

00:47:11,430 --> 00:47:15,150
and and use on your website to do it and

00:47:13,620 --> 00:47:19,010
I was going to actually demonstrate for

00:47:15,150 --> 00:47:24,450
you live putting this on a Linux server

00:47:19,010 --> 00:47:28,070
it hurricane electric in Fremont and I

00:47:24,450 --> 00:47:28,070
was going to do that over the Internet

00:47:28,450 --> 00:47:36,320
so that didn't work out so I scrambled

00:47:32,660 --> 00:47:38,270
around and I put I copied the website

00:47:36,320 --> 00:47:41,570
and put a little webserver here on my

00:47:38,270 --> 00:47:44,480
Mac and the process discovering that

00:47:41,570 --> 00:47:46,160
Linux boxes are way way easier to set up

00:47:44,480 --> 00:47:52,670
for this sort of thing than Mac's are

00:47:46,160 --> 00:47:55,150
and so this is and and and i fudged my

00:47:52,670 --> 00:48:00,610
um can you can you can you read this I

00:47:55,150 --> 00:48:05,960
can make it maybe a little bit bigger I

00:48:00,610 --> 00:48:09,320
fudged my Etsy hosts file so that it

00:48:05,960 --> 00:48:10,930
thinks that the SQLite website is one

00:48:09,320 --> 00:48:24,560
00:48:10,930 --> 00:48:25,970
so whenever I type www.google.com it was

00:48:24,560 --> 00:48:27,710
that's gonna kill me about three days I

00:48:25,970 --> 00:48:30,350
desperately need to remember to take

00:48:27,710 --> 00:48:39,770
this entry out after this after this

00:48:30,350 --> 00:48:41,600
hall yes yes so alright here we go I'm

00:48:39,770 --> 00:48:46,550
going to go over here I'm going to make

00:48:41,600 --> 00:48:48,200
a temporary directory and I'm gonna CD

00:48:46,550 --> 00:48:49,580
there and then I'm going to get the

00:48:48,200 --> 00:48:51,140
source code to this little project it's

00:48:49,580 --> 00:48:53,000
C code and you can download it's open

00:48:51,140 --> 00:48:56,480
source and and do what you want with it

00:48:53,000 --> 00:48:59,600
and I'm going to use fossil to get the

00:48:56,480 --> 00:49:01,010
code now it's on a website fossil is the

00:48:59,600 --> 00:49:03,800
configuration management system that I

00:49:01,010 --> 00:49:07,970
wrote but it's on this website here and

00:49:03,800 --> 00:49:10,790
you can see the URL there wws coauthored

00:49:07,970 --> 00:49:14,660
site search is all you need to go to and

00:49:10,790 --> 00:49:18,510
if you go to timeline and you click on

00:49:14,660 --> 00:49:20,860
this top link there are two

00:49:18,510 --> 00:49:22,840
I'll tell you what well there's gonna be

00:49:20,860 --> 00:49:24,850
two links here under other links to

00:49:22,840 --> 00:49:27,850
download it I just didn't have that

00:49:24,850 --> 00:49:29,200
turned on yet but that will when I get

00:49:27,850 --> 00:49:31,120
back to the office and have internet

00:49:29,200 --> 00:49:32,380
I'll I'll make sure that those links are

00:49:31,120 --> 00:49:36,880
there and you can just download the code

00:49:32,380 --> 00:49:38,650
that way but I'm gonna do fossil clone

00:49:36,880 --> 00:49:41,080
and you can do the same thing if you

00:49:38,650 --> 00:49:42,790
just defaults tall fossil fossil is a

00:49:41,080 --> 00:49:44,230
standalone program it's in a single

00:49:42,790 --> 00:49:45,370
binary you just put it on your pants

00:49:44,230 --> 00:49:47,830
somewhere and then you can do all of

00:49:45,370 --> 00:49:49,090
this that's the only dependency then I'm

00:49:47,830 --> 00:49:51,610
telling that's got this in this little

00:49:49,090 --> 00:49:53,710
demo is that one one command so if you

00:49:51,610 --> 00:49:55,870
just get that one standalone binary from

00:49:53,710 --> 00:49:58,780
Linux and put it in your path you're

00:49:55,870 --> 00:50:10,570
good to go and then I'm gonna do HTTP

00:49:58,780 --> 00:50:15,280
colon WWE SQLite org site search site

00:50:10,570 --> 00:50:17,050
search I'll just do site doc fossil ok

00:50:15,280 --> 00:50:19,020
and that pulls all the couldn't and now

00:50:17,050 --> 00:50:21,820
we've got the complete web site here and

00:50:19,020 --> 00:50:23,500
then do and so right now in this

00:50:21,820 --> 00:50:27,370
directory I just have that one file and

00:50:23,500 --> 00:50:29,920
then to do fossil open site dot fossil

00:50:27,370 --> 00:50:31,420
and I'm showing you this just for your

00:50:29,920 --> 00:50:34,780
benefit so that you can do this later

00:50:31,420 --> 00:50:36,040
yourself so you're taking notes right so

00:50:34,780 --> 00:50:41,230
now I've got the files for this thing

00:50:36,040 --> 00:50:43,150
and then I type make and it's got a copy

00:50:41,230 --> 00:50:45,700
of SQLite I'm using the SQLite has a

00:50:43,150 --> 00:50:46,900
full text search engine built in and I'm

00:50:45,700 --> 00:50:49,390
using that for this particular search

00:50:46,900 --> 00:50:51,670
engine I promise you I'm not pushing any

00:50:49,390 --> 00:50:52,870
particular implementation of search

00:50:51,670 --> 00:50:54,010
engine there's a lot of them out there

00:50:52,870 --> 00:50:56,260
if you want to re-implement this on the

00:50:54,010 --> 00:50:58,480
island here I did it because it's I can

00:50:56,260 --> 00:51:00,310
include all of the source code I need in

00:50:58,480 --> 00:51:03,580
this one little thing and it's all

00:51:00,310 --> 00:51:06,850
self-contained so I have this binary now

00:51:03,580 --> 00:51:09,550
called Site Search good to go now I'm

00:51:06,850 --> 00:51:12,250
going to go over to my website pretend

00:51:09,550 --> 00:51:17,320
that I am I'm logged in to my server I'm

00:51:12,250 --> 00:51:19,570
going to go to this is the web site here

00:51:17,320 --> 00:51:21,210
and it's got a bunch of static HTML in

00:51:19,570 --> 00:51:26,080
it and then I'm gonna go to a directory

00:51:21,210 --> 00:51:29,920
called CGI now if this were a website

00:51:26,080 --> 00:51:31,630
run from Apache then in this directory

00:51:29,920 --> 00:51:36,400
there's oh but if I do

00:51:31,630 --> 00:51:38,770
that there's an HD htaccess file if this

00:51:36,400 --> 00:51:41,410
were a patchy that says that everything

00:51:38,770 --> 00:51:46,480
in this particular directory is to be

00:51:41,410 --> 00:51:47,830
run as cgi this is not really Apache but

00:51:46,480 --> 00:51:51,210
I just put the file there because I

00:51:47,830 --> 00:51:53,830
figure you probably are running Apache

00:51:51,210 --> 00:51:55,060
does it really I've got a pine cone here

00:51:53,830 --> 00:51:58,470
I spent all that time putting this on

00:51:55,060 --> 00:51:58,470
here and I didn't have to do anything

00:51:59,130 --> 00:52:05,350
all right so there was a comment that

00:52:01,210 --> 00:52:07,060
there's Apache actually on the mat okay

00:52:05,350 --> 00:52:09,700
so after the talk you're going to show

00:52:07,060 --> 00:52:11,560
me how that works okay I went and I put

00:52:09,700 --> 00:52:14,620
a different web server on here

00:52:11,560 --> 00:52:18,010
but anyway so now I'm going to create

00:52:14,620 --> 00:52:19,780
and because remember I'm I'm secure

00:52:18,010 --> 00:52:21,310
shell than two remote server and I don't

00:52:19,780 --> 00:52:23,410
have graphical editors I'm gonna use

00:52:21,310 --> 00:52:27,040
Edie who knows how to work the Edie

00:52:23,410 --> 00:52:29,320
editor old-timer yeah anybody in here

00:52:27,040 --> 00:52:29,680
without gray hair you don't have great

00:52:29,320 --> 00:52:31,540
hair

00:52:29,680 --> 00:52:33,210
did anybody in there without great year

00:52:31,540 --> 00:52:37,920
like mine that knows how to use the IDI

00:52:33,210 --> 00:52:45,030
Wow very impressive I wrote my first

00:52:37,920 --> 00:52:47,860
compiler with Edie I have punched cards

00:52:45,030 --> 00:52:50,460
okay so Edie and I'm going to call it

00:52:47,860 --> 00:52:50,460
what do want to call it

00:52:50,910 --> 00:52:58,210
FTS search maybe okay and so I'm going

00:52:56,020 --> 00:53:05,590
to a pin to this I'm gonna give it a

00:52:58,210 --> 00:53:07,090
shebang users DRH temp site search

00:53:05,590 --> 00:53:08,650
that's the name of the program that it

00:53:07,090 --> 00:53:10,810
just compiled and you put it wherever

00:53:08,650 --> 00:53:12,190
your web browser can found it and then

00:53:10,810 --> 00:53:14,230
going to do database it's got to have a

00:53:12,190 --> 00:53:18,340
database to work off of and I'm gonna

00:53:14,230 --> 00:53:24,000
put my database at users DRH XYZ ducky

00:53:18,340 --> 00:53:24,000
be say again

00:53:24,500 --> 00:53:31,500
that I missed something up oh that's

00:53:30,120 --> 00:53:33,150
because I hadn't written in now that now

00:53:31,500 --> 00:53:41,480
I won't say that anymore it'll be there

00:53:33,150 --> 00:53:45,600
look there say it's there we are talking

00:53:41,480 --> 00:53:49,340
1970s technology here okay doll don't

00:53:45,600 --> 00:53:52,070
don't get upset with Edie okay

00:53:49,340 --> 00:53:58,650
okay so now it's there and I've got to

00:53:52,070 --> 00:54:00,210
give it execute permission okay and

00:53:58,650 --> 00:54:01,860
we're not quite done because I've still

00:54:00,210 --> 00:54:03,750
got to create the database and to do

00:54:01,860 --> 00:54:08,250
that I've got to run my little utility

00:54:03,750 --> 00:54:10,050
site search FTS search in it that

00:54:08,250 --> 00:54:14,310
created the database now I have to

00:54:10,050 --> 00:54:16,620
populate it with content and I'm going

00:54:14,310 --> 00:54:18,240
to do all the HTML files that are

00:54:16,620 --> 00:54:20,340
directly above me and then I have a

00:54:18,240 --> 00:54:24,450
bunch of other HTML files in

00:54:20,340 --> 00:54:26,970
sub-directories and it's reading every

00:54:24,450 --> 00:54:28,740
one of those HTML files and doing all of

00:54:26,970 --> 00:54:31,080
those steps that I talked about during

00:54:28,740 --> 00:54:33,630
this lecture and pushing them into the

00:54:31,080 --> 00:54:35,760
database and it's done okay and so now

00:54:33,630 --> 00:54:42,780
we're good to go so I can bring up my

00:54:35,760 --> 00:54:45,570
web browser and I put this under CGI and

00:54:42,780 --> 00:54:50,250
what did we call it I forgot what we

00:54:45,570 --> 00:54:56,730
call FDS - search okay and what do you

00:54:50,250 --> 00:54:57,500
wanna search for so what was I didn't

00:54:56,730 --> 00:55:00,360
hear you

00:54:57,500 --> 00:55:02,040
pneumoniae and that it's not it's not a

00:55:00,360 --> 00:55:04,640
that's not gonna work I have five

00:55:02,040 --> 00:55:04,640
minutes

00:55:06,079 --> 00:55:10,619
I'll sq a lot well it's gonna find a lot

00:55:08,910 --> 00:55:16,369
of hits on Oh what did I hit I didn't

00:55:10,619 --> 00:55:22,170
hit the right now pillar CGI FTS search

00:55:16,369 --> 00:55:28,260
Ohio no Dan document sound compile I

00:55:22,170 --> 00:55:32,700
think I can put Q equal compiled there

00:55:28,260 --> 00:55:33,510
we go and so well but you know that

00:55:32,700 --> 00:55:36,030
didn't really working out because

00:55:33,510 --> 00:55:37,560
there's this backlink cross-reference

00:55:36,030 --> 00:55:39,089
document that I have there which is not

00:55:37,560 --> 00:55:41,849
something that you really want to appear

00:55:39,089 --> 00:55:44,579
in your search results that's a bad

00:55:41,849 --> 00:55:46,500
because this is that's this really weird

00:55:44,579 --> 00:55:48,060
document that just tells me about all

00:55:46,500 --> 00:55:49,980
the hyperlinks that I have because the

00:55:48,060 --> 00:55:51,450
website is automatically generated so I

00:55:49,980 --> 00:55:58,290
want to get rid of that document let me

00:55:51,450 --> 00:56:00,599
um go over here I'm going to say let's

00:55:58,290 --> 00:56:05,160
drop what was the name of that document

00:56:00,599 --> 00:56:09,510
it was doc backlink crossref or

00:56:05,160 --> 00:56:12,599
something something across you breath

00:56:09,510 --> 00:56:15,089
HTML so I dropped a couple documents

00:56:12,599 --> 00:56:18,900
there and I'm gonna repeat this search

00:56:15,089 --> 00:56:24,900
and those first couple of documents that

00:56:18,900 --> 00:56:32,760
are crossdress should go away and they

00:56:24,900 --> 00:56:34,349
did so so anyways it's a it's a it's a

00:56:32,760 --> 00:56:36,440
cheap little search engine there and it

00:56:34,349 --> 00:56:38,700
doesn't do a whole lot it does not do to

00:56:36,440 --> 00:56:40,500
pneumonia to pneumonia I don't I do have

00:56:38,700 --> 00:56:42,450
not attempted to do spelling correction

00:56:40,500 --> 00:56:44,339
in this this particular demo it's some

00:56:42,450 --> 00:56:46,440
simple C code and you're welcome to it

00:56:44,339 --> 00:56:48,240
download the code and play with it and

00:56:46,440 --> 00:56:51,180
use it on your side or whatever if you

00:56:48,240 --> 00:56:54,200
want to do and what about out of time so

00:56:51,180 --> 00:56:56,250
I'm going to open the floor to questions

00:56:54,200 --> 00:56:59,660
you've already asked all the questions

00:56:56,250 --> 00:56:59,660
already a query engine yes go

00:57:01,430 --> 00:57:06,810
question why wouldn't we use leucine

00:57:04,290 --> 00:57:08,250
well maybe did I mean if you want to use

00:57:06,810 --> 00:57:10,050
leucine that's fine I say I'm not

00:57:08,250 --> 00:57:12,150
pushing a specific implementation

00:57:10,050 --> 00:57:14,220
there's Sphinx there's a leucine there's

00:57:12,150 --> 00:57:16,020
search engine is there searchers that

00:57:14,220 --> 00:57:19,140
search engine will text search build the

00:57:16,020 --> 00:57:21,540
post grass who knows there is there's

00:57:19,140 --> 00:57:28,830
full text search built into MySQL which

00:57:21,540 --> 00:57:43,980
I understand is very bad it does have

00:57:28,830 --> 00:57:47,820
soundex okay so so there's a lot yeah

00:57:43,980 --> 00:57:49,320
lutein is very nice I actually we

00:57:47,820 --> 00:57:51,780
studied leucine very closely we went

00:57:49,320 --> 00:57:53,880
into the code and the SQLite

00:57:51,780 --> 00:57:56,700
implementation is modeled after leucine

00:57:53,880 --> 00:58:00,810
circa night sir core 2006 leucine may

00:57:56,700 --> 00:58:01,920
have been rewritten since then and but

00:58:00,810 --> 00:58:03,780
and if you want to do it leucine

00:58:01,920 --> 00:58:06,180
have at it I just I want to do something

00:58:03,780 --> 00:58:08,910
really simple that was with leucine I'd

00:58:06,180 --> 00:58:10,170
have to get to have Java on hand and I'd

00:58:08,910 --> 00:58:11,970
have to get a bunch of stuff together

00:58:10,170 --> 00:58:13,350
instead of a big environment if you want

00:58:11,970 --> 00:58:14,430
to do that it's fine I wanted to put

00:58:13,350 --> 00:58:16,619
together something that's really simple

00:58:14,430 --> 00:58:21,530
and compact and standalone like this I

00:58:16,619 --> 00:58:21,530
have 30 seconds question

00:58:34,040 --> 00:58:37,890
yeah the question is ranking ranking is

00:58:36,570 --> 00:58:52,050
a whole nother talk that's a whole

00:58:37,890 --> 00:58:53,730
nother lecture it's a big problem no

00:58:52,050 --> 00:58:56,130
there's there's a lot of strategies for

00:58:53,730 --> 00:58:57,890
ranking you know putting putting the

00:58:56,130 --> 00:59:00,630
important dockets first but also

00:58:57,890 --> 00:59:02,339
post-processing today on this system we

00:59:00,630 --> 00:59:03,690
get hunt you know say a hundred

00:59:02,339 --> 00:59:05,490
different ones and we go through and

00:59:03,690 --> 00:59:06,660
look at the frequency of words of the

00:59:05,490 --> 00:59:08,940
word of the search words within each

00:59:06,660 --> 00:59:11,150
document which we can pull out of the

00:59:08,940 --> 00:59:13,260
posting lists by being clever and

00:59:11,150 --> 00:59:16,290
there's some formulas that have been

00:59:13,260 --> 00:59:17,910
worked out for you know finding words

00:59:16,290 --> 00:59:19,079
that occur a lot and then one document

00:59:17,910 --> 00:59:20,730
you're looking for it don't occur

00:59:19,079 --> 00:59:23,160
anywhere else and that that in document

00:59:20,730 --> 00:59:24,839
is important but then if you get onto an

00:59:23,160 --> 00:59:26,790
internet search where people are trying

00:59:24,839 --> 00:59:29,420
to gain your search engine you have to

00:59:26,790 --> 00:59:32,640
be much more clever than that to avoid

00:59:29,420 --> 00:59:34,740
people stacking the deck and trying to

00:59:32,640 --> 00:59:37,849
get their stuff up to the top okay we're

00:59:34,740 --> 00:59:37,849
out of time thank you very much

00:59:52,180 --> 00:59:55,180
Thanks

00:59:58,869 --> 01:00:06,230
how's that say every way this is the way

01:00:02,599 --> 01:00:07,880
to better utilize all your resources and

01:00:06,230 --> 01:00:11,329
it makes managing all your resources

01:00:07,880 --> 01:00:15,190
pretty easy all of the innovation is

01:00:11,329 --> 01:00:18,619
happening in open source the

01:00:15,190 --> 01:00:20,480
collaborative nature and of the you know

01:00:18,619 --> 01:00:22,790
of the community and the speed at which

01:00:20,480 --> 01:00:24,410
these are these you know these these

01:00:22,790 --> 01:00:26,660
deficiencies these bugs are getting

01:00:24,410 --> 01:00:29,210
discovered and then fixed is that I

01:00:26,660 --> 01:00:32,119
think that really shows the power of the

01:00:29,210 --> 01:00:33,740
you know of the open source community it

01:00:32,119 --> 01:00:38,119
is global and it's definitely because of

01:00:33,740 --> 01:00:40,400
the users community people are extremely

01:00:38,119 --> 01:00:45,619
friendly and they're always ready to

01:00:40,400 --> 01:00:47,089
help if you go in on tire see any day

01:00:45,619 --> 01:00:49,400
you'll see these guys helping each other

01:00:47,089 --> 01:00:51,800
out and they're all doing it like in a

01:00:49,400 --> 01:00:53,660
selfless manner the product is

01:00:51,800 --> 01:00:57,440
transparent for everyone everyone can

01:00:53,660 --> 01:00:59,900
look at the codebase everyone can see

01:00:57,440 --> 01:01:01,640
how cloud stack is being built nothing

01:00:59,900 --> 01:01:06,890
nothing is proprietary

01:01:01,640 --> 01:01:09,530
everything is open in many ways it's

01:01:06,890 --> 01:01:13,970
absolutely vital to the beyond born

01:01:09,530 --> 01:01:18,170
helped file stack the most exciting

01:01:13,970 --> 01:01:20,940
event in recent memory for me was our

01:01:18,170 --> 01:01:23,400
first developer boot camp

01:01:20,940 --> 01:01:26,280
and our call gave people I think maybe

01:01:23,400 --> 01:01:30,270
two weeks notice to come attend I was

01:01:26,280 --> 01:01:34,440
expecting 25 or 30 people so we ended up

01:01:30,270 --> 01:01:37,260
with 87 people and had to go get more

01:01:34,440 --> 01:01:39,810
chairs in the room twice everything

01:01:37,260 --> 01:01:43,140
within cloud computing is commodity and

01:01:39,810 --> 01:01:46,080
is open-source and so I don't think that

01:01:43,140 --> 01:01:47,880
you will you'll see anywhere where open

01:01:46,080 --> 01:01:50,910
source is not pervasive in cloud

01:01:47,880 --> 01:01:53,610
computing and so I think it's uh I think

01:01:50,910 --> 01:01:54,960
it's an assumption I think when you talk

01:01:53,610 --> 01:01:56,160
about cloud computing you're really

01:01:54,960 --> 01:02:01,080
talking about open source cloud

01:01:56,160 --> 01:02:04,080
computing cloud sack is a robust

01:02:01,080 --> 01:02:05,880
solution for large deployments you'll

01:02:04,080 --> 01:02:07,740
have dozens of data centers and

01:02:05,880 --> 01:02:12,120
thousands of servers in each data

01:02:07,740 --> 01:02:15,930
centers these hardware is gonna fail and

01:02:12,120 --> 01:02:18,840
cloud stack is designed to handle number

01:02:15,930 --> 01:02:20,610
one that mass scale number two it's

01:02:18,840 --> 01:02:23,910
designed to handle the failure that

01:02:20,610 --> 01:02:26,280
inevitably happens in large deployments

01:02:23,910 --> 01:02:30,360
we started working on cog attack over

01:02:26,280 --> 01:02:33,510
four years ago and it was the original

01:02:30,360 --> 01:02:35,490
set of people working on it had a

01:02:33,510 --> 01:02:39,330
background of delivering software to

01:02:35,490 --> 01:02:43,590
telcos and service providers lots of QA

01:02:39,330 --> 01:02:47,460
lots of users actually using it high

01:02:43,590 --> 01:02:50,280
availability is a key feature multiple

01:02:47,460 --> 01:02:52,290
hypervisor support different network

01:02:50,280 --> 01:02:52,850
models you can pick up whatever suits

01:02:52,290 --> 01:02:55,500
you better

01:02:52,850 --> 01:02:58,820
while step management server can be

01:02:55,500 --> 01:03:01,620
deployed in different physical machines

01:02:58,820 --> 01:03:03,240
it definitely has a huge footprint it's

01:03:01,620 --> 01:03:06,930
being deployed everywhere there's a

01:03:03,240 --> 01:03:09,599
major movie studio that

01:03:06,930 --> 01:03:13,109
they were using CloudStack they were

01:03:09,599 --> 01:03:14,640
using it to transcode video and I

01:03:13,109 --> 01:03:16,619
thought that was terribly fascinating

01:03:14,640 --> 01:03:18,690
what I found more fascinating is what

01:03:16,619 --> 01:03:22,410
they did during lunch where they would

01:03:18,690 --> 01:03:23,880
spin up you know 50 or 60 game servers

01:03:22,410 --> 01:03:25,710
then as soon as lunch was over they

01:03:23,880 --> 01:03:28,200
would destroy all the instances and get

01:03:25,710 --> 01:03:31,020
back to doing a little work cloud stack

01:03:28,200 --> 01:03:32,700
is vast it touches so many different

01:03:31,020 --> 01:03:34,559
aspects and there's no one person that's

01:03:32,700 --> 01:03:35,160
kind of like a master of all those

01:03:34,559 --> 01:03:38,400
realms

01:03:35,160 --> 01:03:41,099
I think cloud stack as a project is

01:03:38,400 --> 01:03:43,380
going to be one of the leaders simply

01:03:41,099 --> 01:03:48,270
because it's some of the most feature

01:03:43,380 --> 01:03:52,589
pulling and and robust platforms I hope

01:03:48,270 --> 01:03:55,069
they learn I don't senior living for the

01:03:52,589 --> 01:03:55,069
clouds dag

01:04:38,660 --> 01:04:40,720
you

01:04:43,930 --> 01:04:48,740
when we created asterisk over a decade

01:04:46,640 --> 01:04:50,960
ago we could not have imagined that

01:04:48,740 --> 01:04:53,180
asterisk would not only become the most

01:04:50,960 --> 01:04:55,280
widely adopted open-source communication

01:04:53,180 --> 01:04:57,350
software on the planet but that it would

01:04:55,280 --> 01:04:58,670
impact the entire industry in the way

01:04:57,350 --> 01:05:00,350
that it has today

01:04:58,670 --> 01:05:02,690
asterisk has found its way in the more

01:05:00,350 --> 01:05:04,940
than 170 countries and virtually every

01:05:02,690 --> 01:05:07,070
Fortune 1000 company the success of

01:05:04,940 --> 01:05:09,170
asterisk has enabled a transition of

01:05:07,070 --> 01:05:11,420
power from the hands of the traditional

01:05:09,170 --> 01:05:13,220
proprietary phone vendors into the hands

01:05:11,420 --> 01:05:16,100
of the users and administrators of phone

01:05:13,220 --> 01:05:17,420
systems using this power our customers

01:05:16,100 --> 01:05:19,550
have created all sorts of business

01:05:17,420 --> 01:05:21,200
changing applications from small office

01:05:19,550 --> 01:05:23,120
phone systems to mission-critical call

01:05:21,200 --> 01:05:25,160
centers the international carrier

01:05:23,120 --> 01:05:26,750
networks in fact there's even an entire

01:05:25,160 --> 01:05:28,790
country those communications

01:05:26,750 --> 01:05:30,500
infrastructure runs on asters the Jim

01:05:28,790 --> 01:05:32,660
has always been about creating

01:05:30,500 --> 01:05:34,340
technology that expands communications

01:05:32,660 --> 01:05:36,320
capabilities in ways that we could never

01:05:34,340 --> 01:05:38,660
have imagined and that's part of what's

01:05:36,320 --> 01:05:40,730
game-changing about Digium today we're

01:05:38,660 --> 01:05:43,250
doing it again this time by introducing

01:05:40,730 --> 01:05:45,110
a new family of HD IP phones that

01:05:43,250 --> 01:05:47,000
extends control of the user all the way

01:05:45,110 --> 01:05:48,980
to the desktop the launch of these new

01:05:47,000 --> 01:05:51,140
products represents the next phase in

01:05:48,980 --> 01:05:53,630
Digium history of innovation these are

01:05:51,140 --> 01:05:55,370
the first and only IP phones designed to

01:05:53,630 --> 01:05:56,930
fully leverage the power of esters when

01:05:55,370 --> 01:05:58,580
we first discussed our expectations for

01:05:56,930 --> 01:06:00,470
building a family of phones for use with

01:05:58,580 --> 01:06:02,690
asterisk our requirements were pretty

01:06:00,470 --> 01:06:04,040
simple we asked the team to build the

01:06:02,690 --> 01:06:06,380
phones such that they were easy to

01:06:04,040 --> 01:06:08,600
install integrate provision and use I

01:06:06,380 --> 01:06:10,610
think you'll soon agree our engineers

01:06:08,600 --> 01:06:12,410
have delivered on that goal user

01:06:10,610 --> 01:06:14,030
feedback is validating that when it

01:06:12,410 --> 01:06:16,280
comes to operation with Azure space

01:06:14,030 --> 01:06:18,350
systems including our own Switchvox

01:06:16,280 --> 01:06:21,080
based product these are the easiest to

01:06:18,350 --> 01:06:23,420
use best integrated most interoperable

01:06:21,080 --> 01:06:25,100
products on the market today the Digium

01:06:23,420 --> 01:06:27,530
family of phones will initially include

01:06:25,100 --> 01:06:29,540
three IP desk phones uniquely designed

01:06:27,530 --> 01:06:31,610
to complement any asterisk or Switchvox

01:06:29,540 --> 01:06:32,840
based solution these phones are

01:06:31,610 --> 01:06:35,750
different for a number of reasons

01:06:32,840 --> 01:06:38,180
first there is cluesive Lee designed for

01:06:35,750 --> 01:06:39,800
use with esters secondly we've made it

01:06:38,180 --> 01:06:42,260
really easy to auto discover and

01:06:39,800 --> 01:06:43,370
provision the phones next we've made it

01:06:42,260 --> 01:06:45,890
easy for the phones to access

01:06:43,370 --> 01:06:47,940
information inside of asterisks allowing

01:06:45,890 --> 01:06:50,610
tight coupling between an application

01:06:47,940 --> 01:06:52,770
the phone additionally we've created an

01:06:50,610 --> 01:06:54,900
applications engine that allows users

01:06:52,770 --> 01:06:58,140
and developers to create and run their

01:06:54,900 --> 01:06:59,910
own apps on the phone and finally we've

01:06:58,140 --> 01:07:01,860
done all of this at a very compelling

01:06:59,910 --> 01:07:03,780
price point at Digium we're always

01:07:01,860 --> 01:07:05,640
thinking of ways to give our customers

01:07:03,780 --> 01:07:08,280
the best value in business phone systems

01:07:05,640 --> 01:07:09,750
and also give them the power to create

01:07:08,280 --> 01:07:11,910
their own solutions or any

01:07:09,750 --> 01:07:13,650
communications challenge well continue

01:07:11,910 --> 01:07:15,060
to push the boundaries not only to make

01:07:13,650 --> 01:07:17,130
Astra's cooler faster and more

01:07:15,060 --> 01:07:18,750
technologically feature-rich but to make

01:07:17,130 --> 01:07:21,210
asterisk and what communications even

01:07:18,750 --> 01:07:24,920
easier and together will change the way

01:07:21,210 --> 01:07:24,920

YouTube URL: https://www.youtube.com/watch?v=Bqpq0HPc3co


