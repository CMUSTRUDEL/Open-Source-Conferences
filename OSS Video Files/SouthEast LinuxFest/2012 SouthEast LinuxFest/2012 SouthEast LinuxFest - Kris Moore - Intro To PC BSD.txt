Title: 2012 SouthEast LinuxFest - Kris Moore - Intro To PC BSD
Publication date: 2013-12-02
Playlist: 2012 SouthEast LinuxFest
Description: 
	2012 SouthEast LinuxFest
Kris Moore
Intro To PC-BSD
Captions: 
	00:00:00,000 --> 00:00:05,279
the following presentation was recorded

00:00:02,490 --> 00:00:08,040
the 2012 southeast linux fest in

00:00:05,279 --> 00:00:10,410
charlotte north carolina it is licensed

00:00:08,040 --> 00:00:12,090
under a creative commons license for

00:00:10,410 --> 00:00:16,859
more information about the southeast

00:00:12,090 --> 00:00:19,230
linux fest visit www.lend expense org

00:00:16,859 --> 00:00:21,320
the southeast linux fest would like to

00:00:19,230 --> 00:00:23,279
thank the following diamond sponsors in

00:00:21,320 --> 00:00:27,720
2012 for helping make these videos

00:00:23,279 --> 00:00:29,730
possible alright well thank you as he

00:00:27,720 --> 00:00:32,250
said I am the founder of the pc-bsd

00:00:29,730 --> 00:00:35,219
project and today I'm just going to be

00:00:32,250 --> 00:00:38,899
giving kind of a brief overview of pcbs

00:00:35,219 --> 00:00:40,920
t9 what it is how it differs from Linux

00:00:38,899 --> 00:00:43,649
maybe what's different from previous

00:00:40,920 --> 00:00:44,789
pc-bsd versions and just give you enough

00:00:43,649 --> 00:00:47,160
of an overview so you can ask questions

00:00:44,789 --> 00:00:48,450
and that's really what I enjoys the

00:00:47,160 --> 00:00:50,579
question of slot because there's usually

00:00:48,450 --> 00:00:53,070
really good stuff that comes up and I'll

00:00:50,579 --> 00:00:54,989
be too happy to answer if I'm going too

00:00:53,070 --> 00:00:56,520
fast or if you guys see something and

00:00:54,989 --> 00:00:58,890
have a question about it just raise your

00:00:56,520 --> 00:01:00,840
hand get my attention I love following

00:00:58,890 --> 00:01:02,969
rabbit trails and we will go ahead and

00:01:00,840 --> 00:01:05,129
dive into it but let's go ahead and get

00:01:02,969 --> 00:01:06,930
started so the first question I always

00:01:05,129 --> 00:01:11,670
get when I come to a linux conferences

00:01:06,930 --> 00:01:13,140
what is pc-bsd more accurately sometimes

00:01:11,670 --> 00:01:16,140
what they're asking really is what is

00:01:13,140 --> 00:01:17,580
bsd so i like to start with what it's

00:01:16,140 --> 00:01:19,350
not because this is the first couple

00:01:17,580 --> 00:01:21,750
things I hear well first of all it's not

00:01:19,350 --> 00:01:23,909
a fork of Linux it's not a flavor of

00:01:21,750 --> 00:01:25,590
linux and it's not a distribution of

00:01:23,909 --> 00:01:29,100
linux those are the three things i hear

00:01:25,590 --> 00:01:31,409
a lot of times what it is is a branch of

00:01:29,100 --> 00:01:34,259
unix it's derived from the original

00:01:31,409 --> 00:01:35,790
eighteen t in excellent late 70s one

00:01:34,259 --> 00:01:37,710
thing that makes it different from Linux

00:01:35,790 --> 00:01:39,630
is that it's a complete operating system

00:01:37,710 --> 00:01:41,340
in the sense that it has a kernel and an

00:01:39,630 --> 00:01:42,960
integrated user land it's not just a

00:01:41,340 --> 00:01:45,869
colonel with some packages thrown into

00:01:42,960 --> 00:01:48,740
it you can grab freebsd install it and

00:01:45,869 --> 00:01:51,240
have a workable environment with ssh

00:01:48,740 --> 00:01:53,970
compilers other tools i was a part of

00:01:51,240 --> 00:01:55,890
the base operating system it's released

00:01:53,970 --> 00:01:58,320
under a business-friendly bsd style

00:01:55,890 --> 00:02:00,360
license which is where I make my first

00:01:58,320 --> 00:02:02,520
little digression and we chase a rabbit

00:02:00,360 --> 00:02:04,200
trail what is the bsd license and why is

00:02:02,520 --> 00:02:06,960
it so business friendly what's the

00:02:04,200 --> 00:02:08,450
difference well this is it if you can

00:02:06,960 --> 00:02:12,030
read it all here this is the entire

00:02:08,450 --> 00:02:13,260
freebsd bsd license it's actually two

00:02:12,030 --> 00:02:16,080
clauses i think it's

00:02:13,260 --> 00:02:17,340
started to 42 sort of 54 and then it

00:02:16,080 --> 00:02:19,290
went down to three and now we're down at

00:02:17,340 --> 00:02:22,049
two so it's gotten smaller as time has

00:02:19,290 --> 00:02:24,120
gone on and basically the gist of it is

00:02:22,049 --> 00:02:25,980
here's our software don't sue us if it

00:02:24,120 --> 00:02:27,900
doesn't work and if you use it include

00:02:25,980 --> 00:02:31,200
the copyright somewhere I mean it's real

00:02:27,900 --> 00:02:33,569
easy to read comply with whereas the

00:02:31,200 --> 00:02:35,610
license that Linux programs a lot of

00:02:33,569 --> 00:02:39,000
them use the GPL is tended to get bigger

00:02:35,610 --> 00:02:42,420
over time and as you can see here it has

00:02:39,000 --> 00:02:46,590
gotten larger and larger and larger and

00:02:42,420 --> 00:02:48,450
larger and larger and larger and you

00:02:46,590 --> 00:02:49,920
know for various reasons you may be on

00:02:48,450 --> 00:02:51,180
one side of the fence of the other but

00:02:49,920 --> 00:02:53,489
the end of the day that means we have

00:02:51,180 --> 00:02:55,139
more lawyers involved we have to decide

00:02:53,489 --> 00:02:57,030
what we can do and can't do with this

00:02:55,139 --> 00:02:59,370
license what's allowed what's not and

00:02:57,030 --> 00:03:00,690
some may argue it's for extra freedom

00:02:59,370 --> 00:03:02,250
which fine you know people could take

00:03:00,690 --> 00:03:05,010
different sides of this issue but on the

00:03:02,250 --> 00:03:06,870
bsd side it's simple it's free in the

00:03:05,010 --> 00:03:08,430
sense of we give it to you do whatever

00:03:06,870 --> 00:03:10,950
you want with it we place no

00:03:08,430 --> 00:03:14,129
restrictions upon you and that's always

00:03:10,950 --> 00:03:15,900
been the spirit of the bsd community so

00:03:14,129 --> 00:03:18,030
back to our regularly scheduled program

00:03:15,900 --> 00:03:20,400
so what is previous t as i said it's a

00:03:18,030 --> 00:03:22,799
descendant of the original bsd unix it's

00:03:20,400 --> 00:03:25,139
complete operating system which can then

00:03:22,799 --> 00:03:27,299
run third party applications via the

00:03:25,139 --> 00:03:31,470
ports and packages system that would be

00:03:27,299 --> 00:03:33,900
your equivalent of rpms etc on Linux its

00:03:31,470 --> 00:03:36,180
popular server OS for hosting companies

00:03:33,900 --> 00:03:37,919
data centers etc that's where you'll see

00:03:36,180 --> 00:03:41,760
it running in the background is happily

00:03:37,919 --> 00:03:43,290
churning away doing its thing it's able

00:03:41,760 --> 00:03:45,510
to build and run pretty much all the

00:03:43,290 --> 00:03:48,569
open source applications you're familiar

00:03:45,510 --> 00:03:52,109
with out there such as Apache X or KDE

00:03:48,569 --> 00:03:54,750
Firefox libre office open office I think

00:03:52,109 --> 00:03:57,389
there's 26,000 ports at last count give

00:03:54,750 --> 00:03:58,620
or take a few and those are the bulk of

00:03:57,389 --> 00:03:59,879
those are just the traditional things

00:03:58,620 --> 00:04:02,069
you're going to see on any Linux

00:03:59,879 --> 00:04:04,260
distribution it includes some other

00:04:02,069 --> 00:04:06,299
unique features one of them right now is

00:04:04,260 --> 00:04:08,129
ZFS is kind of a hot one that everyone's

00:04:06,299 --> 00:04:10,319
talking about but we have things like

00:04:08,129 --> 00:04:12,180
jelly for disk encryption ji anzi

00:04:10,319 --> 00:04:15,180
mirroring I mean there's a lot of unique

00:04:12,180 --> 00:04:16,949
freebsd features but a ZFS is the biggie

00:04:15,180 --> 00:04:18,810
at the moment something a lot of people

00:04:16,949 --> 00:04:20,669
don't know is we include a compatibility

00:04:18,810 --> 00:04:22,919
layer which is kind of heat and allow

00:04:20,669 --> 00:04:23,530
you allows you to run linux applications

00:04:22,919 --> 00:04:26,590
native

00:04:23,530 --> 00:04:28,060
lee on bsd without emulation it's not

00:04:26,590 --> 00:04:30,280
actually emulating things it's just

00:04:28,060 --> 00:04:32,139
mapping linux calls into freebsd calls

00:04:30,280 --> 00:04:34,120
and doing its thing so occasionally

00:04:32,139 --> 00:04:35,380
you'll see a benchmark article written

00:04:34,120 --> 00:04:37,990
and they'll be like hey we ran some

00:04:35,380 --> 00:04:39,910
Linux app or game on bsd and found out

00:04:37,990 --> 00:04:42,070
it ran faster on freebsd than it did on

00:04:39,910 --> 00:04:44,350
linux because we're more efficient in

00:04:42,070 --> 00:04:46,810
whatever area for multi-processing or

00:04:44,350 --> 00:04:48,580
whatever it is but that's an interesting

00:04:46,810 --> 00:04:49,990
side you know tidbit there if you do

00:04:48,580 --> 00:04:52,690
have something Linux you can still run

00:04:49,990 --> 00:04:54,610
it on bsd often that's how we run things

00:04:52,690 --> 00:04:57,430
like Skype for example which they only

00:04:54,610 --> 00:04:58,630
release the Linux version of so now that

00:04:57,430 --> 00:05:02,050
you've got a little background on

00:04:58,630 --> 00:05:04,240
FreeBSD what is pc-bsd well it's a

00:05:02,050 --> 00:05:06,130
desktop version of freebsd but it's not

00:05:04,240 --> 00:05:07,690
a fork we haven't taken it and changed

00:05:06,130 --> 00:05:10,510
it too much it's one hundred percent

00:05:07,690 --> 00:05:12,660
freebsd under the hood and we intend to

00:05:10,510 --> 00:05:15,610
keep it that way for as long as we can

00:05:12,660 --> 00:05:20,740
it comes pre built with desktop packages

00:05:15,610 --> 00:05:22,389
such as X KDE and maybe gnome xfce etc

00:05:20,740 --> 00:05:25,060
so all your little desktop goodies are

00:05:22,389 --> 00:05:26,620
there right out of box and we try and

00:05:25,060 --> 00:05:28,330
initialize it for the best desktop

00:05:26,620 --> 00:05:29,919
environment possible which means we

00:05:28,330 --> 00:05:32,470
include things like flash support and

00:05:29,919 --> 00:05:35,020
NVIDIA binary drivers right out of box

00:05:32,470 --> 00:05:37,060
we don't really have a dog in the fight

00:05:35,020 --> 00:05:39,280
over licensing issues we just want the

00:05:37,060 --> 00:05:40,930
desktop to work at a box and I know a

00:05:39,280 --> 00:05:42,039
lot of users when they get a system that

00:05:40,930 --> 00:05:43,690
doesn't have those that's the first

00:05:42,039 --> 00:05:45,990
thing they fetched so we're just going

00:05:43,690 --> 00:05:48,070
to try and make it as easy as possible

00:05:45,990 --> 00:05:53,620
yeah empty three supports in there as

00:05:48,070 --> 00:05:54,970
well so yes so what else do we add on to

00:05:53,620 --> 00:05:56,500
freebsd well the first thing you're

00:05:54,970 --> 00:05:58,240
going to see is if you've ever installed

00:05:56,500 --> 00:06:00,850
freebsd you know it's got a text-based

00:05:58,240 --> 00:06:02,410
installer and there's no X stuff well

00:06:00,850 --> 00:06:04,510
one of the first things we added was our

00:06:02,410 --> 00:06:06,640
own custom GUI for installation because

00:06:04,510 --> 00:06:09,220
again we're targeting a desktop audience

00:06:06,640 --> 00:06:11,289
we want this to be easy to use and we

00:06:09,220 --> 00:06:12,520
support a lot of cool freebsd features

00:06:11,289 --> 00:06:14,830
that maybe you can't even do in the

00:06:12,520 --> 00:06:17,380
freebsd install right now this would be

00:06:14,830 --> 00:06:19,330
like ZFS if you want to do a ZFS

00:06:17,380 --> 00:06:21,039
installation where there was no ufs and

00:06:19,330 --> 00:06:23,080
it's just one big zpool you can do that

00:06:21,039 --> 00:06:25,360
you want to turn on jelly for disk

00:06:23,080 --> 00:06:26,950
encryption that's a popular option if

00:06:25,360 --> 00:06:29,080
you're on a laptop I can just click a

00:06:26,950 --> 00:06:30,940
button type in a password now my disk is

00:06:29,080 --> 00:06:33,370
encrypted it won't boot up until I /

00:06:30,940 --> 00:06:36,529
supply the password we can do mirroring

00:06:33,370 --> 00:06:37,939
we do automatic labeling of drives

00:06:36,529 --> 00:06:39,919
and that's really cool like say you have

00:06:37,939 --> 00:06:41,629
a desktop with multiple SATA drives and

00:06:39,919 --> 00:06:44,209
you unplug certain things plug it in

00:06:41,629 --> 00:06:47,179
your FS tab doesn't go away or go nuts

00:06:44,209 --> 00:06:49,819
because device names have changed we

00:06:47,179 --> 00:06:52,429
also allow installing freebsd or pc-bsd

00:06:49,819 --> 00:06:53,809
off the same disk that DVD has enough

00:06:52,429 --> 00:06:55,969
room that we could put both on their

00:06:53,809 --> 00:06:58,189
happily so if you want to install a

00:06:55,969 --> 00:07:00,319
freebsd server with maybe some of these

00:06:58,189 --> 00:07:01,639
discs options like ZFS something that

00:07:00,319 --> 00:07:04,189
might have been more difficult to do

00:07:01,639 --> 00:07:05,659
with the freebsd installer we allow you

00:07:04,189 --> 00:07:07,969
the opportunity to do that vr

00:07:05,659 --> 00:07:10,399
installation disk and of course we have

00:07:07,969 --> 00:07:13,189
all the typical installation choices you

00:07:10,399 --> 00:07:15,829
know DVD USB network we have some live

00:07:13,189 --> 00:07:18,529
disks which have que te on them right

00:07:15,829 --> 00:07:20,149
now and you can install from that 491

00:07:18,529 --> 00:07:21,649
we're talking about putting other window

00:07:20,149 --> 00:07:25,639
managers on there as well so you have

00:07:21,649 --> 00:07:27,319
more to play with but right now 49 point

00:07:25,639 --> 00:07:29,899
0 this is what the Installer looks like

00:07:27,319 --> 00:07:32,419
it's written in QT and it's just a

00:07:29,899 --> 00:07:34,219
pretty simple a wizard based graphical

00:07:32,419 --> 00:07:36,469
installation environment you're going to

00:07:34,219 --> 00:07:38,599
pick your typical stuff you know

00:07:36,469 --> 00:07:40,479
timezone language etc it's localized

00:07:38,599 --> 00:07:42,860
into a number of different languages

00:07:40,479 --> 00:07:44,689
hard drive again we tried to make this

00:07:42,860 --> 00:07:46,999
pretty simple so we're just going to

00:07:44,689 --> 00:07:48,499
pick a disc if we want to use the entire

00:07:46,999 --> 00:07:51,409
thing and then you can select your file

00:07:48,499 --> 00:07:53,869
system so in this case I've chosen ZFS

00:07:51,409 --> 00:07:55,879
and then we have an option to install

00:07:53,869 --> 00:07:57,319
our own boot loaders well you may or may

00:07:55,879 --> 00:07:59,899
not want that if your dual booting with

00:07:57,319 --> 00:08:02,839
linux and rdf grubs a ton for some and

00:07:59,899 --> 00:08:06,079
we can do GPT if you heed large disk

00:08:02,839 --> 00:08:09,199
support another thing we add into pc-bsd

00:08:06,079 --> 00:08:10,849
is a network management GUI pcbs these

00:08:09,199 --> 00:08:12,469
are free BS these networking is a lot

00:08:10,849 --> 00:08:14,419
different from linux so we can't just

00:08:12,469 --> 00:08:15,619
bring over network manager a compile it

00:08:14,419 --> 00:08:17,989
and have it work it would be a lot of

00:08:15,619 --> 00:08:19,909
rewriting so we've written a lot of our

00:08:17,989 --> 00:08:21,919
own utilities to do things like this and

00:08:19,909 --> 00:08:26,509
it supports you know your typical

00:08:21,919 --> 00:08:28,399
ethernet and Wi-Fi devices ipv4 v6 we

00:08:26,509 --> 00:08:29,809
got some cool stuff in the background

00:08:28,399 --> 00:08:32,120
you can enable that allows you to do

00:08:29,809 --> 00:08:34,490
failover so if you're on a laptop you

00:08:32,120 --> 00:08:37,009
can enable the lag interface it's just a

00:08:34,490 --> 00:08:39,589
check box and you can be happily working

00:08:37,009 --> 00:08:41,329
on your network unplug and it seamlessly

00:08:39,589 --> 00:08:43,189
transfers to the Wi-Fi without dropping

00:08:41,329 --> 00:08:44,990
your state so your downloads continue

00:08:43,189 --> 00:08:46,760
etc so there's just some neat little

00:08:44,990 --> 00:08:48,470
features we've added to it

00:08:46,760 --> 00:08:50,390
and this is what it looks like again

00:08:48,470 --> 00:08:52,550
cutie be a Skua all of our goo is

00:08:50,390 --> 00:08:54,590
written in QT and just shows you what

00:08:52,550 --> 00:08:56,450
devices are available you can enable

00:08:54,590 --> 00:08:57,680
system tray icons if you want to have

00:08:56,450 --> 00:09:01,130
the little status showing you what's

00:08:57,680 --> 00:09:03,260
going on see all your IP info etc and

00:09:01,130 --> 00:09:06,770
then of course all the room for adding

00:09:03,260 --> 00:09:08,840
DNS gateways ipv6 and there's the lag

00:09:06,770 --> 00:09:12,500
interface i told you about one checkbox

00:09:08,840 --> 00:09:14,120
it just does it for you another thing

00:09:12,500 --> 00:09:16,460
we've added is a system management

00:09:14,120 --> 00:09:18,950
utility and this allows you to do some

00:09:16,460 --> 00:09:22,010
freebsd specific stuff such as fetching

00:09:18,950 --> 00:09:23,660
the freebsd system sources why would you

00:09:22,010 --> 00:09:25,880
want to do that well maybe you want to

00:09:23,660 --> 00:09:27,410
compile a port in an easy to compile a

00:09:25,880 --> 00:09:29,210
kernel module and it's going to bug you

00:09:27,410 --> 00:09:30,740
for system sources you don't have to go

00:09:29,210 --> 00:09:33,620
look up the command line command to do

00:09:30,740 --> 00:09:35,480
that it can do it via the GUI or does

00:09:33,620 --> 00:09:37,340
port snap which lets you fetch the

00:09:35,480 --> 00:09:38,810
FreeBSD ports tree you want to compile

00:09:37,340 --> 00:09:41,690
something by hand because you want to

00:09:38,810 --> 00:09:43,490
turn on ipv6 support and apache you can

00:09:41,690 --> 00:09:45,410
do that you can fetch all your ports and

00:09:43,490 --> 00:09:47,210
we got some features where you can

00:09:45,410 --> 00:09:48,800
generate like tech support sheets so if

00:09:47,210 --> 00:09:50,660
something goes wrong you send me the

00:09:48,800 --> 00:09:52,070
seat I can look at your hardware output

00:09:50,660 --> 00:09:53,750
and figure out okay you've got some

00:09:52,070 --> 00:09:56,720
weird controller we are you're having

00:09:53,750 --> 00:09:58,250
problems with or something this is what

00:09:56,720 --> 00:10:00,500
the system manager looks like the first

00:09:58,250 --> 00:10:02,180
time you bring it up and again just get

00:10:00,500 --> 00:10:03,800
some tabs up top giving you some

00:10:02,180 --> 00:10:07,370
different options here and then the big

00:10:03,800 --> 00:10:09,020
a diagnostic sheet button this would be

00:10:07,370 --> 00:10:11,630
an example of how we download source

00:10:09,020 --> 00:10:14,030
from FreeBSD right now it's still using

00:10:11,630 --> 00:10:15,710
a CBS up although they've moved to

00:10:14,030 --> 00:10:17,450
subversion so I'll be updating this to

00:10:15,710 --> 00:10:19,700
subversion at some point but this is

00:10:17,450 --> 00:10:21,320
still up mirrored and you can pick which

00:10:19,700 --> 00:10:24,620
part you want and just say do a check

00:10:21,320 --> 00:10:26,450
out another big thing that we do in

00:10:24,620 --> 00:10:28,640
pc-bsd is our package management system

00:10:26,450 --> 00:10:31,250
is completely different this is

00:10:28,640 --> 00:10:33,440
something pretty unique for us but we

00:10:31,250 --> 00:10:36,110
use a system called PBIS which is for

00:10:33,440 --> 00:10:37,490
push button installer what's different

00:10:36,110 --> 00:10:40,430
about it is it's a self-contained

00:10:37,490 --> 00:10:42,650
package format it keeps your operating

00:10:40,430 --> 00:10:46,430
system separate from your applications

00:10:42,650 --> 00:10:48,020
so instead of extracting a an archive

00:10:46,430 --> 00:10:49,610
and putting files all over the place

00:10:48,020 --> 00:10:52,070
they end up in one nice neat little

00:10:49,610 --> 00:10:53,330
directory self-contained contained away

00:10:52,070 --> 00:10:55,760
from the rest of the operating system

00:10:53,330 --> 00:10:57,560
and other applications and this provides

00:10:55,760 --> 00:10:59,960
some stability to the users desktop

00:10:57,560 --> 00:11:01,490
experience now you can add or move /

00:10:59,960 --> 00:11:03,590
that will even things with possibly

00:11:01,490 --> 00:11:05,150
conflicting library types or versions

00:11:03,590 --> 00:11:06,920
because they don't work well with the

00:11:05,150 --> 00:11:10,700
newer one or the older one or vice versa

00:11:06,920 --> 00:11:12,320
and they just don't touch one another so

00:11:10,700 --> 00:11:14,450
a little bit closer so I get a lot of

00:11:12,320 --> 00:11:16,640
questions on this well first of all why

00:11:14,450 --> 00:11:18,410
we did this my philosophy is

00:11:16,640 --> 00:11:19,960
applications are not your operating

00:11:18,410 --> 00:11:22,910
system your operating system is

00:11:19,960 --> 00:11:25,340
self-contained unit updates to that come

00:11:22,910 --> 00:11:26,960
down a different pipeline and that

00:11:25,340 --> 00:11:28,340
should be based off one set of things

00:11:26,960 --> 00:11:29,840
then your applications are just things

00:11:28,340 --> 00:11:32,810
you run on top of that they shouldn't be

00:11:29,840 --> 00:11:35,210
monkeying around with my KDE libraries

00:11:32,810 --> 00:11:37,430
or my gtk libraries just because I won't

00:11:35,210 --> 00:11:38,900
install any web browser or something so

00:11:37,430 --> 00:11:40,850
we try and keep things separate and

00:11:38,900 --> 00:11:42,740
again there are self-contained so they

00:11:40,850 --> 00:11:45,170
have all the required files and

00:11:42,740 --> 00:11:48,440
libraries within and we just don't touch

00:11:45,170 --> 00:11:50,660
system packages we leave that alone now

00:11:48,440 --> 00:11:52,700
this is just visually what I'm talking

00:11:50,660 --> 00:11:54,500
about here this is your typical open

00:11:52,700 --> 00:11:56,690
source operating system this could be

00:11:54,500 --> 00:11:57,860
Linux kernel it could be freebsd even

00:11:56,690 --> 00:11:59,720
because this is what they do with their

00:11:57,860 --> 00:12:01,250
ports and packages you'll have your

00:11:59,720 --> 00:12:03,110
kernel or your base and then you'll

00:12:01,250 --> 00:12:05,390
start building packages on top of it and

00:12:03,110 --> 00:12:07,130
this could be lib PNG and then

00:12:05,390 --> 00:12:08,840
everything depends on that and the gtk

00:12:07,130 --> 00:12:10,520
and so forth and so on till you actually

00:12:08,840 --> 00:12:12,950
get to something useful up top like

00:12:10,520 --> 00:12:15,140
Firefox and there can be thousands of

00:12:12,950 --> 00:12:17,180
dependencies on your typical system and

00:12:15,140 --> 00:12:18,890
if you notice they're very

00:12:17,180 --> 00:12:22,340
interconnected and if you pull one of

00:12:18,890 --> 00:12:24,220
these pieces out usually bad things

00:12:22,340 --> 00:12:27,800
happen and your weekend is ruined right

00:12:24,220 --> 00:12:29,750
so this is what we do in pc-bsd we have

00:12:27,800 --> 00:12:32,180
our base system which is freebsd in this

00:12:29,750 --> 00:12:33,800
case and then your desktop packages

00:12:32,180 --> 00:12:36,380
which only depend on the base that could

00:12:33,800 --> 00:12:38,420
be kte that likes to eat whatever and

00:12:36,380 --> 00:12:40,040
then your PB is are all self-contained

00:12:38,420 --> 00:12:42,620
and only depend on some of the base

00:12:40,040 --> 00:12:44,210
system stuff like lipsy just some very

00:12:42,620 --> 00:12:47,090
basic libraries that don't change

00:12:44,210 --> 00:12:50,810
between major releases so you can run a

00:12:47,090 --> 00:12:53,510
PB I that was compiled on pc-bsd eight

00:12:50,810 --> 00:12:54,860
point 0 all the way up to r 81 82 83 and

00:12:53,510 --> 00:12:56,870
you don't have to upgrade it if you

00:12:54,860 --> 00:13:00,790
don't want if it's stable and it works

00:12:56,870 --> 00:13:02,870
the way you want great you can do that

00:13:00,790 --> 00:13:05,150
now one of the things that's different

00:13:02,870 --> 00:13:07,460
in nine-point-oh is if you've run pc-bsd

00:13:05,150 --> 00:13:10,130
in the past we were very que te centric

00:13:07,460 --> 00:13:12,019
back in the day and we kept getting

00:13:10,130 --> 00:13:14,059
requests on hey we won or another

00:13:12,019 --> 00:13:16,249
so the first thing we did is we made the

00:13:14,059 --> 00:13:19,279
window manager utilities all system

00:13:16,249 --> 00:13:20,839
agnostic so now you can run any window

00:13:19,279 --> 00:13:22,819
manager you want during installation

00:13:20,839 --> 00:13:26,989
you're given the choices of the major

00:13:22,819 --> 00:13:30,439
for which I consider KDE gnome gnome 2

00:13:26,989 --> 00:13:32,929
right now xfce and LXDE although we have

00:13:30,439 --> 00:13:35,449
a ton of other unsupported window

00:13:32,929 --> 00:13:37,999
managers like window maker fluxbox open

00:13:35,449 --> 00:13:39,079
box a lot of the lighter-weight ones the

00:13:37,999 --> 00:13:40,759
only reason we put those in the

00:13:39,079 --> 00:13:43,129
unsupported categories that they don't

00:13:40,759 --> 00:13:45,290
support the ex DG specifications for

00:13:43,129 --> 00:13:47,989
desktop icons and stuff that our package

00:13:45,290 --> 00:13:49,579
manager does so we consider that more

00:13:47,989 --> 00:13:51,559
like hardcore users if you know how to

00:13:49,579 --> 00:13:53,629
make your own icons and shortcuts use

00:13:51,559 --> 00:13:55,879
those but for everyone else he just

00:13:53,629 --> 00:13:57,769
expects an icon to show up use these for

00:13:55,879 --> 00:13:59,389
and you're good and we had to

00:13:57,769 --> 00:14:01,850
reimplement the pbi system to do this

00:13:59,389 --> 00:14:03,769
too so it was all agnostic and could

00:14:01,850 --> 00:14:07,749
understand okay where this window answer

00:14:03,769 --> 00:14:07,749
that and know how to work with each one

00:14:08,350 --> 00:14:12,679
big part of that was we had to remove

00:14:10,549 --> 00:14:15,639
all the KDE hooks that run our tools and

00:14:12,679 --> 00:14:18,470
switch to pure QT for which we've done

00:14:15,639 --> 00:14:20,420
post installation this is not locked in

00:14:18,470 --> 00:14:22,759
so after you've done installing your

00:14:20,420 --> 00:14:24,589
system say you load up katie fforde it's

00:14:22,759 --> 00:14:26,149
too heavy for you you can always go into

00:14:24,589 --> 00:14:28,759
the system manager and say let's remove

00:14:26,149 --> 00:14:31,249
that and add LXDE log out and log into

00:14:28,759 --> 00:14:33,439
lxd and you're done so you're not locked

00:14:31,249 --> 00:14:37,309
it locked into anything by any stretch

00:14:33,439 --> 00:14:39,170
the imagination and again these are the

00:14:37,309 --> 00:14:42,079
four major ones I talked about here some

00:14:39,170 --> 00:14:43,519
of the unsupported ones we offer and if

00:14:42,079 --> 00:14:45,589
you have a favorite and would like to

00:14:43,519 --> 00:14:47,629
run it on pc-bsd odds are it's been

00:14:45,589 --> 00:14:49,579
ported to freebsd a good chunk of em are

00:14:47,629 --> 00:14:51,860
I just need to get the request somebody

00:14:49,579 --> 00:14:53,629
shoot me an email or tell me hey I like

00:14:51,860 --> 00:14:55,669
this window manager and usually we can

00:14:53,629 --> 00:15:00,169
add it within a day or two it's not that

00:14:55,669 --> 00:15:01,129
difficult just couple com files so this

00:15:00,169 --> 00:15:02,959
is what it looks like during

00:15:01,129 --> 00:15:05,299
installation you're given your choice

00:15:02,959 --> 00:15:07,160
here's our packages what do you want to

00:15:05,299 --> 00:15:09,350
install and then of course you can fine

00:15:07,160 --> 00:15:10,519
tune it and go in and remove parts of KD

00:15:09,350 --> 00:15:12,049
you don't want you don't want the

00:15:10,519 --> 00:15:13,519
educational stuff or maybe the

00:15:12,049 --> 00:15:15,769
development tools you just want to run

00:15:13,519 --> 00:15:18,230
the desktop so you can fine tune it to

00:15:15,769 --> 00:15:20,600
some degree as well we don't get into

00:15:18,230 --> 00:15:23,059
too much nitty-gritty with this package

00:15:20,600 --> 00:15:25,610
system it's something i call meta

00:15:23,059 --> 00:15:26,899
packages so that's still a collection of

00:15:25,610 --> 00:15:28,339
packages underneath but you're not going

00:15:26,899 --> 00:15:31,430
to have to go through and figure out oh

00:15:28,339 --> 00:15:33,290
I need que te PIM libs and libs and bass

00:15:31,430 --> 00:15:35,269
lives and work space and all these just

00:15:33,290 --> 00:15:37,579
to run the desktop it'll figure out what

00:15:35,269 --> 00:15:39,170
you really want you want just KDE we'll

00:15:37,579 --> 00:15:40,910
figure out what those packages are for

00:15:39,170 --> 00:15:44,750
you so we've tried to simplify it a bit

00:15:40,910 --> 00:15:47,240
and this is after installation Zach same

00:15:44,750 --> 00:15:48,769
widget same options so you can always go

00:15:47,240 --> 00:15:51,050
in and add remove stuff post

00:15:48,769 --> 00:15:52,880
installation and like hardware drivers

00:15:51,050 --> 00:15:54,890
is there that's where your nvidia driver

00:15:52,880 --> 00:15:56,660
will be so you decide you want to run

00:15:54,890 --> 00:16:00,920
your video binary driver click it it

00:15:56,660 --> 00:16:02,959
shows up another thing we've done is

00:16:00,920 --> 00:16:04,550
we've added an improved control panel

00:16:02,959 --> 00:16:06,920
which again is agnostic to the

00:16:04,550 --> 00:16:08,690
particular window manager it provides a

00:16:06,920 --> 00:16:10,370
consistent user experience which was

00:16:08,690 --> 00:16:12,620
important especially for documentation

00:16:10,370 --> 00:16:14,779
purposes we want you to be able to go to

00:16:12,620 --> 00:16:16,370
one spot and regardless of the window

00:16:14,779 --> 00:16:18,950
manager you're running have some kind of

00:16:16,370 --> 00:16:20,540
consistency so we can tell you go here

00:16:18,950 --> 00:16:22,850
configure this and it'll fix your

00:16:20,540 --> 00:16:23,959
problem and it does detect the running

00:16:22,850 --> 00:16:26,630
window manager and shows some

00:16:23,959 --> 00:16:28,370
appropriate icons as well so you go in

00:16:26,630 --> 00:16:30,890
there maybe you're running lxde and it

00:16:28,370 --> 00:16:33,260
brings up the lxd utility for setting

00:16:30,890 --> 00:16:34,699
Mouse options or keyboard options so we

00:16:33,260 --> 00:16:37,730
do some things like that to make it

00:16:34,699 --> 00:16:40,040
convenient for you as well and that's

00:16:37,730 --> 00:16:41,839
what this looks like on a PCB sd9

00:16:40,040 --> 00:16:45,860
there's actually a lot more icons in it

00:16:41,839 --> 00:16:48,620
now for 91 and here's where you can auto

00:16:45,860 --> 00:16:49,880
detect what window manager using it will

00:16:48,620 --> 00:16:51,410
show you the current but you can even

00:16:49,880 --> 00:16:52,820
switch between them so if you have no

00:16:51,410 --> 00:16:54,589
them installed you can switch and see

00:16:52,820 --> 00:16:58,490
what gnome utilities can I run here as

00:16:54,589 --> 00:17:00,140
well so one of the things that we redid

00:16:58,490 --> 00:17:02,390
for nine-point-oh is we had to rewrite

00:17:00,140 --> 00:17:04,610
the pbi format completely since it was

00:17:02,390 --> 00:17:06,260
very dependent on KDE stuff cutie and we

00:17:04,610 --> 00:17:08,419
had to go back and fix some issues with

00:17:06,260 --> 00:17:09,919
it so we had some problems with the old

00:17:08,419 --> 00:17:11,720
one it had attacked on command line

00:17:09,919 --> 00:17:13,100
interface which was all cutie base not

00:17:11,720 --> 00:17:14,780
very friendly to use at the command

00:17:13,100 --> 00:17:17,360
prompt or on a server if you don't want

00:17:14,780 --> 00:17:19,819
to load QT libs it was wasting space

00:17:17,360 --> 00:17:21,079
because it wasn't sharing libraries it

00:17:19,819 --> 00:17:22,850
didn't really have any distribution

00:17:21,079 --> 00:17:24,770
infrastructure we just had a website

00:17:22,850 --> 00:17:27,319
where you downloaded and added your PB

00:17:24,770 --> 00:17:29,660
is no signatures and the file updates

00:17:27,319 --> 00:17:30,980
for very large so these were some of the

00:17:29,660 --> 00:17:33,980
problems I wanted to address in

00:17:30,980 --> 00:17:36,530
nine-point-oh so the first thing I did

00:17:33,980 --> 00:17:37,910
is I reimplemented the entire tool chain

00:17:36,530 --> 00:17:40,850
in shell for portal

00:17:37,910 --> 00:17:44,150
on FreeBSD so we can take this tool

00:17:40,850 --> 00:17:45,560
chain run it on FreeBSD it's in pfsense

00:17:44,150 --> 00:17:48,080
now is what they're working on adding

00:17:45,560 --> 00:17:50,060
that for their plugins freenas is using

00:17:48,080 --> 00:17:52,100
it very portable no reason we couldn't

00:17:50,060 --> 00:17:54,080
move it to open or net BST even and

00:17:52,100 --> 00:17:55,750
possibly Linux someday if somebody at

00:17:54,080 --> 00:17:58,610
adventurous and decided to port it over

00:17:55,750 --> 00:18:00,020
all the functionalities available via

00:17:58,610 --> 00:18:04,280
the command line you don't have to have

00:18:00,020 --> 00:18:05,990
X at all for anything anymore another

00:18:04,280 --> 00:18:07,580
thing we wanted to do is add intelligent

00:18:05,990 --> 00:18:10,340
library sharing we were wasting space

00:18:07,580 --> 00:18:12,440
before so I create came up with a system

00:18:10,340 --> 00:18:14,930
that allows sharing all the identical

00:18:12,440 --> 00:18:17,000
files you have between PBIS if I have a

00:18:14,930 --> 00:18:19,450
PPI of thunderbird and Firefox they both

00:18:17,000 --> 00:18:22,670
have lib gtk in it which is identical

00:18:19,450 --> 00:18:24,500
most of the time so we want to be able

00:18:22,670 --> 00:18:26,210
to share that so we set up a system of

00:18:24,500 --> 00:18:28,220
sharing these files and libraries with

00:18:26,210 --> 00:18:30,740
hard links so you only have one copy on

00:18:28,220 --> 00:18:32,330
disk and one copy in memory even know

00:18:30,740 --> 00:18:35,720
each program thinks it has its own

00:18:32,330 --> 00:18:37,820
coffee we were able to reduce the disk

00:18:35,720 --> 00:18:39,440
in runtime memory usage and we can track

00:18:37,820 --> 00:18:41,000
all the matches would check some so

00:18:39,440 --> 00:18:42,290
everything's now automatically checksum

00:18:41,000 --> 00:18:44,150
and we can tell if something's been

00:18:42,290 --> 00:18:45,710
tampered with and so we just have a

00:18:44,150 --> 00:18:47,540
daemon that runs in the background that

00:18:45,710 --> 00:18:49,340
just keeps things up to date and says ok

00:18:47,540 --> 00:18:51,070
you've installed a package let me just

00:18:49,340 --> 00:18:54,070
check make sure we're consists in here

00:18:51,070 --> 00:18:54,070
yes

00:18:58,809 --> 00:19:01,529
yes

00:19:10,200 --> 00:19:14,800
well so the question was what happens

00:19:12,520 --> 00:19:16,510
when we uninstall pbi and it's got

00:19:14,800 --> 00:19:18,880
libraries that other ppi's maybe are

00:19:16,510 --> 00:19:20,290
using what happens the libraries well

00:19:18,880 --> 00:19:21,940
because of the way they're hard linked

00:19:20,290 --> 00:19:23,950
i'm going to show you here in a future

00:19:21,940 --> 00:19:25,570
slide it keeps those libraries for the

00:19:23,950 --> 00:19:27,100
other applications and won't remove them

00:19:25,570 --> 00:19:29,530
and the damon takes care of that i think

00:19:27,100 --> 00:19:31,750
that's actually the next slide so good

00:19:29,530 --> 00:19:33,310
question here we go so here's the

00:19:31,750 --> 00:19:36,490
example you're talking about we have two

00:19:33,310 --> 00:19:38,560
PB is for you know kicks we'll just say

00:19:36,490 --> 00:19:40,930
it's thunderbird and Firefox and they

00:19:38,560 --> 00:19:42,790
happen to have lib food s 0 dot one

00:19:40,930 --> 00:19:45,490
which is identical the checksums match

00:19:42,790 --> 00:19:47,560
well I'm pc-bsd we have a directory we

00:19:45,490 --> 00:19:49,420
call the hash directory and that's where

00:19:47,560 --> 00:19:50,800
we place libraries when a program is

00:19:49,420 --> 00:19:53,170
installed this is what the daemon

00:19:50,800 --> 00:19:55,330
manages in the background it's going to

00:19:53,170 --> 00:19:56,560
take the first library and say ok I'm

00:19:55,330 --> 00:19:58,690
going to add this to the hash dirt

00:19:56,560 --> 00:20:00,220
doesn't exist and it adds the file with

00:19:58,690 --> 00:20:01,870
the checksum appended to the end of it

00:20:00,220 --> 00:20:03,810
so we can easily look at it and figure

00:20:01,870 --> 00:20:06,550
out if it's been changed or tweaked and

00:20:03,810 --> 00:20:08,680
then on its next pass it goes ooh we've

00:20:06,550 --> 00:20:11,470
just installed firefox it has the same

00:20:08,680 --> 00:20:13,510
library and it exists it removes the

00:20:11,470 --> 00:20:15,640
original hard links it into the hash

00:20:13,510 --> 00:20:17,260
door so again we only have one copy on

00:20:15,640 --> 00:20:19,360
disk right now but two programs see

00:20:17,260 --> 00:20:22,030
their own copy of the library and the

00:20:19,360 --> 00:20:23,890
way freebsd loads libraries it's looking

00:20:22,030 --> 00:20:25,420
at the inode so they're both pointing to

00:20:23,890 --> 00:20:28,480
the same spot so we only get one copy

00:20:25,420 --> 00:20:31,270
and memory so we've saved both disk and

00:20:28,480 --> 00:20:33,460
memory space now say you come along and

00:20:31,270 --> 00:20:35,650
you upgrade firefox and now they have a

00:20:33,460 --> 00:20:36,910
new version of the library or an

00:20:35,650 --> 00:20:39,010
incompatible or something's different

00:20:36,910 --> 00:20:40,540
about it well we can unlink and just

00:20:39,010 --> 00:20:42,820
create a second copy with the checksum

00:20:40,540 --> 00:20:44,500
appended to it so we have two copies on

00:20:42,820 --> 00:20:46,750
disk and maybe their conflicting they

00:20:44,500 --> 00:20:48,070
won't work together but now each program

00:20:46,750 --> 00:20:50,950
is happy and they just keep running they

00:20:48,070 --> 00:20:54,010
don't care but if we come along later

00:20:50,950 --> 00:20:56,260
and we remove the pbi one now we have an

00:20:54,010 --> 00:20:57,700
orphan left in the hash sir and that's

00:20:56,260 --> 00:20:59,500
kind of what you're asking here the the

00:20:57,700 --> 00:21:01,270
daemon will then go through and clean

00:20:59,500 --> 00:21:03,160
that up and go okay nothing is using

00:21:01,270 --> 00:21:06,190
this library now we can safely throw it

00:21:03,160 --> 00:21:08,170
away and with the way hard links work is

00:21:06,190 --> 00:21:10,420
if they're both using the same library

00:21:08,170 --> 00:21:12,160
we just remove the one instance here and

00:21:10,420 --> 00:21:13,540
then we can check the reference count

00:21:12,160 --> 00:21:15,700
and see if anybody else is still

00:21:13,540 --> 00:21:18,130
consuming that library and clean it up

00:21:15,700 --> 00:21:21,300
if it's down to one so pretty simple

00:21:18,130 --> 00:21:21,300
very very quick yes

00:21:23,980 --> 00:21:29,360
correct the question yeah the question

00:21:27,530 --> 00:21:31,730
was does the hash to have to exist in

00:21:29,360 --> 00:21:33,020
the same file system that's correct by

00:21:31,730 --> 00:21:35,929
default we're going to put it in the

00:21:33,020 --> 00:21:38,270
slash user file system under user pbi

00:21:35,929 --> 00:21:41,630
all your ppi is installed it there and

00:21:38,270 --> 00:21:43,130
the hash to exists there as well one

00:21:41,630 --> 00:21:45,290
thing I'll mention about this which is

00:21:43,130 --> 00:21:47,030
kind of neat though is because the pbis

00:21:45,290 --> 00:21:49,340
don't touch the rest of your system and

00:21:47,030 --> 00:21:52,160
nine you can install PBIS as your user

00:21:49,340 --> 00:21:53,900
account you don't need root for probably

00:21:52,160 --> 00:21:56,360
about ninety five percent of all the

00:21:53,900 --> 00:21:57,559
stuff in our catalog Firefox you don't

00:21:56,360 --> 00:21:59,059
need a root for that you don't need to

00:21:57,559 --> 00:22:01,190
give anybody route to install an

00:21:59,059 --> 00:22:02,840
application they don't need to use sudo

00:22:01,190 --> 00:22:04,700
nothing's magically doing root in the

00:22:02,840 --> 00:22:06,679
background it's just installing it and

00:22:04,700 --> 00:22:08,210
extracting it to a directory and we have

00:22:06,679 --> 00:22:10,100
group permissions and stuff set up so

00:22:08,210 --> 00:22:12,140
that works kind of similar to how Mac

00:22:10,100 --> 00:22:15,250
does their model if anyone's looked at

00:22:12,140 --> 00:22:17,840
that but yeah it's pretty sweet so

00:22:15,250 --> 00:22:19,940
distribution another thing we needed to

00:22:17,840 --> 00:22:22,280
add was mechanism for creators to

00:22:19,940 --> 00:22:24,260
distribute pbi files to the end users

00:22:22,280 --> 00:22:26,870
and we needed some way to integrate that

00:22:24,260 --> 00:22:29,270
with digital signatures so that's been

00:22:26,870 --> 00:22:32,360
added in 9 it allows us to maintain a

00:22:29,270 --> 00:22:34,100
master index of release PBIS on with the

00:22:32,360 --> 00:22:36,260
meta index that has additional

00:22:34,100 --> 00:22:37,790
information like here's Firefox here's

00:22:36,260 --> 00:22:40,520
the description here's the license

00:22:37,790 --> 00:22:42,320
here's the website the author etc and

00:22:40,520 --> 00:22:45,530
then we can display that you know via

00:22:42,320 --> 00:22:47,390
GUI or elsewhere in a meaningful way the

00:22:45,530 --> 00:22:50,059
meta index is actually on the hard drive

00:22:47,390 --> 00:22:51,710
so you can browse it and then issue your

00:22:50,059 --> 00:22:54,500
commands the download PB is from the

00:22:51,710 --> 00:22:56,330
repo or perform updates of older ppi's

00:22:54,500 --> 00:23:00,320
and your versions all by looking at one

00:22:56,330 --> 00:23:02,630
index file the way we do digital

00:23:00,320 --> 00:23:04,340
signatures in the PBIS is automatically

00:23:02,630 --> 00:23:05,960
done with openssl which is in the

00:23:04,340 --> 00:23:07,610
freebsd based system so we're not

00:23:05,960 --> 00:23:10,940
depending on anything outside of what's

00:23:07,610 --> 00:23:13,730
in freebsd everything from the archive

00:23:10,940 --> 00:23:15,230
to any installation removal scripts

00:23:13,730 --> 00:23:17,840
anything that could potentially be

00:23:15,230 --> 00:23:19,550
dangerous is gone ahead and signed with

00:23:17,840 --> 00:23:22,160
the openssl so we make sure it's not

00:23:19,550 --> 00:23:24,230
tampered with and then it installation

00:23:22,160 --> 00:23:25,700
time the end user whatever front and

00:23:24,230 --> 00:23:27,440
you're running we'll take a look at the

00:23:25,700 --> 00:23:28,419
signature and can warn you and stop you

00:23:27,440 --> 00:23:30,369
know if it's

00:23:28,419 --> 00:23:34,659
been tampered with or possibly gotten

00:23:30,369 --> 00:23:36,970
corrupted even during transit another

00:23:34,659 --> 00:23:38,649
thing in the old pbi format was binary

00:23:36,970 --> 00:23:40,659
patching was large since the pbi

00:23:38,649 --> 00:23:41,919
contains a lot of libraries in it they

00:23:40,659 --> 00:23:43,450
tend to be much larger than a

00:23:41,919 --> 00:23:45,700
traditional package which just has a

00:23:43,450 --> 00:23:47,919
couple things so I need to come up with

00:23:45,700 --> 00:23:50,529
a system to fix this so what we've done

00:23:47,919 --> 00:23:52,659
in nine-point-oh is we create binary

00:23:50,529 --> 00:23:55,179
patches from old versions and new

00:23:52,659 --> 00:23:57,789
versions so you can update via this

00:23:55,179 --> 00:23:59,559
binary pack a good example is I had 100

00:23:57,789 --> 00:24:01,629
Meg pbi and the patch was like less than

00:23:59,559 --> 00:24:04,330
two meds operate it from version of

00:24:01,629 --> 00:24:06,249
version so very minimal more often than

00:24:04,330 --> 00:24:08,289
not it's only a few files that change

00:24:06,249 --> 00:24:10,629
between updates and it just gets the

00:24:08,289 --> 00:24:13,629
binary diffs we use the commands be a

00:24:10,629 --> 00:24:15,789
stiff and bs patch to do this those are

00:24:13,629 --> 00:24:17,529
built into freebsd eden they're pretty

00:24:15,789 --> 00:24:22,509
cool if you want to send binary patches

00:24:17,529 --> 00:24:25,299
around and fix them yeah what was that

00:24:22,509 --> 00:24:28,119
oh the question was do we have support

00:24:25,299 --> 00:24:30,730
for wine yes we do yeah the way on

00:24:28,119 --> 00:24:32,679
pc-bsd we have couple wine packages we

00:24:30,730 --> 00:24:34,720
have your regular 32-bit one which is

00:24:32,679 --> 00:24:37,570
what we build then we have a special one

00:24:34,720 --> 00:24:39,070
for amd64 systems which will link in

00:24:37,570 --> 00:24:41,470
like the nvidia driver another so you

00:24:39,070 --> 00:24:45,609
get accelerated wine goodness and

00:24:41,470 --> 00:24:47,139
complains and all that so yeah we also

00:24:45,609 --> 00:24:50,440
have the ability to auto-generate

00:24:47,139 --> 00:24:51,879
patches from port builds so on our

00:24:50,440 --> 00:24:54,100
server when I get a new version of

00:24:51,879 --> 00:24:56,139
Firefox it spits out the binary patches

00:24:54,100 --> 00:24:58,419
when it's done so i can upload those

00:24:56,139 --> 00:25:00,669
along with the new pbi and if you're on

00:24:58,419 --> 00:25:01,960
firefox 10 and 11 comes out it's going

00:25:00,669 --> 00:25:04,210
to grab that you know a couple hundred

00:25:01,960 --> 00:25:05,710
or a couple hundred kilobyte or a few

00:25:04,210 --> 00:25:08,350
megabyte patch whatever it ends up being

00:25:05,710 --> 00:25:10,720
and using that and then it will fall

00:25:08,350 --> 00:25:12,940
back to fetching the full file if vs

00:25:10,720 --> 00:25:15,159
patch fails for some reason which may

00:25:12,940 --> 00:25:16,419
happen if your tanker hacker and start

00:25:15,159 --> 00:25:18,519
messing around they're changing files

00:25:16,419 --> 00:25:19,690
and checksums don't match anymore so

00:25:18,519 --> 00:25:23,649
we're going to go ahead and check for

00:25:19,690 --> 00:25:25,269
that as well so another thing we've

00:25:23,649 --> 00:25:27,549
added for nine-point-oh is a graphical

00:25:25,269 --> 00:25:29,320
utility we call the app cafe this is

00:25:27,549 --> 00:25:31,809
basically our marketplace this is our

00:25:29,320 --> 00:25:34,119
store where you can browse for all kinds

00:25:31,809 --> 00:25:36,129
of applications it's a cutie based front

00:25:34,119 --> 00:25:39,159
end to the pbi browser command-line

00:25:36,129 --> 00:25:40,440
utility so again if you've ssh tin you

00:25:39,159 --> 00:25:42,720
can do everything via

00:25:40,440 --> 00:25:45,390
commandline pbi browser lets you browse

00:25:42,720 --> 00:25:46,650
categories see what's available shows

00:25:45,390 --> 00:25:49,740
you how to install stuff it's really

00:25:46,650 --> 00:25:50,820
cool and then in the app cafe you can go

00:25:49,740 --> 00:25:53,190
ahead and run it as your user account

00:25:50,820 --> 00:25:55,290
you don't need root and then you can add

00:25:53,190 --> 00:25:56,880
and remove applications it'll only bug

00:25:55,290 --> 00:25:59,400
you for root if you install something

00:25:56,880 --> 00:26:01,080
that needs it VirtualBox is a good

00:25:59,400 --> 00:26:02,640
example because it has to load kernel

00:26:01,080 --> 00:26:06,180
modules and do a few things that a

00:26:02,640 --> 00:26:07,710
normal program would have to do it has

00:26:06,180 --> 00:26:09,900
support for browsing and managing

00:26:07,710 --> 00:26:11,730
repositories and mirrors so you're not

00:26:09,900 --> 00:26:13,560
locked into just our mirror the pbi

00:26:11,730 --> 00:26:15,660
system includes support for making your

00:26:13,560 --> 00:26:17,460
own repositories and mirrors so if

00:26:15,660 --> 00:26:19,410
you're a company or you're rolling your

00:26:17,460 --> 00:26:20,760
own project like FreeNAS there's nothing

00:26:19,410 --> 00:26:23,120
stopping you from creating your own

00:26:20,760 --> 00:26:25,620
repository their own keys and signing

00:26:23,120 --> 00:26:27,180
packages and you can even import them

00:26:25,620 --> 00:26:29,700
right into our utility and we can browse

00:26:27,180 --> 00:26:33,180
them all graphically and then of course

00:26:29,700 --> 00:26:34,860
includes support for a nice KDE ish tray

00:26:33,180 --> 00:26:36,570
icon which shows up and tells you when

00:26:34,860 --> 00:26:39,870
things are out of date and need to be

00:26:36,570 --> 00:26:42,390
updated this is what it looks like on

00:26:39,870 --> 00:26:44,970
nine point out just again it's a browser

00:26:42,390 --> 00:26:46,860
with categories since the index files

00:26:44,970 --> 00:26:48,690
stored on your hard drive searching is

00:26:46,860 --> 00:26:51,000
instant you can just type something in

00:26:48,690 --> 00:26:52,800
and bam it shows up so it's really quick

00:26:51,000 --> 00:26:54,540
you could just click on your category or

00:26:52,800 --> 00:26:56,670
application and it will bring up details

00:26:54,540 --> 00:26:59,070
about it this is what a typical one look

00:26:56,670 --> 00:27:01,470
like Firefox its installed you know

00:26:59,070 --> 00:27:03,330
details about versions etc we can also

00:27:01,470 --> 00:27:04,320
do automatic updating since we don't

00:27:03,330 --> 00:27:06,240
have to worry about tweaking

00:27:04,320 --> 00:27:08,580
dependencies and worrying about breaking

00:27:06,240 --> 00:27:10,050
something you enable automatic updating

00:27:08,580 --> 00:27:12,420
and the daemon will just keep an eye on

00:27:10,050 --> 00:27:15,230
it every 24 hours and if the version

00:27:12,420 --> 00:27:18,330
gets bumped it will install it for you

00:27:15,230 --> 00:27:19,800
and once you've got applications

00:27:18,330 --> 00:27:21,990
installed there's ways where you can go

00:27:19,800 --> 00:27:24,270
through and be the details again I added

00:27:21,990 --> 00:27:26,640
some support for doing additional

00:27:24,270 --> 00:27:27,960
desktop icons menu icons sometimes

00:27:26,640 --> 00:27:29,790
there's a case where somebody install

00:27:27,960 --> 00:27:31,950
something and deletes the icons like oh

00:27:29,790 --> 00:27:33,840
how do I get those back well you can

00:27:31,950 --> 00:27:37,800
recreate them now it'll just put them

00:27:33,840 --> 00:27:39,870
all back where they were we also have a

00:27:37,800 --> 00:27:43,190
utility called the life preserver which

00:27:39,870 --> 00:27:45,270
is pretty unique pc-bsd it's basically a

00:27:43,190 --> 00:27:48,600
simple utility which will allow you to

00:27:45,270 --> 00:27:50,640
do our synch over ssh backups to any

00:27:48,600 --> 00:27:52,039
server running SSH and our sink or

00:27:50,640 --> 00:27:54,769
something like free now is for

00:27:52,039 --> 00:27:56,749
Apple so if you a pc-bsd box you can

00:27:54,769 --> 00:27:58,999
safely back up all your data daily and

00:27:56,749 --> 00:28:00,529
it'll just do our synch a dips it's a

00:27:58,999 --> 00:28:02,809
tray application that will just sit in

00:28:00,529 --> 00:28:04,999
the tray and let you do your thing you

00:28:02,809 --> 00:28:07,279
can schedule them and again it uses our

00:28:04,999 --> 00:28:09,710
sink over ssh so you could be back up to

00:28:07,279 --> 00:28:13,940
a linux box even it's really agnostic as

00:28:09,710 --> 00:28:15,350
long as it has those two utilities and

00:28:13,940 --> 00:28:17,690
that's what this looks like you bring it

00:28:15,350 --> 00:28:19,759
up I've set up a backup to my local

00:28:17,690 --> 00:28:22,549
server here don't have any backups done

00:28:19,759 --> 00:28:27,259
you can schedule it etc it's very very

00:28:22,549 --> 00:28:30,470
easy to use so pc-bsd nine-point-oh came

00:28:27,259 --> 00:28:32,119
out in January of 2012 at the moment we

00:28:30,470 --> 00:28:34,429
have all kinds of installation media

00:28:32,119 --> 00:28:37,849
including making VirtualBox and VMware

00:28:34,429 --> 00:28:39,379
images I may be adding qemu images 491

00:28:37,849 --> 00:28:41,539
here the future I've had a couple

00:28:39,379 --> 00:28:43,759
requests for it and of course live

00:28:41,539 --> 00:28:45,830
medium we have some light ones too so if

00:28:43,759 --> 00:28:48,679
you want a small USB image with just

00:28:45,830 --> 00:28:50,899
lxde you can grab that and of course

00:28:48,679 --> 00:28:52,909
post installation you can add k to eat

00:28:50,899 --> 00:28:54,919
if you want it it includes the Quick

00:28:52,909 --> 00:28:56,629
Start Guide in handbook which drew

00:28:54,919 --> 00:28:58,489
lavigne worked a lot on getting that

00:28:56,629 --> 00:29:01,279
already and it's a great PDF with just

00:28:58,489 --> 00:29:02,869
tons information on pc-bsd and freebsd

00:29:01,279 --> 00:29:04,970
so if you're new to both it's great

00:29:02,869 --> 00:29:06,919
place to get your feet wet and it has

00:29:04,970 --> 00:29:08,210
support for ZFS and the new ufs

00:29:06,919 --> 00:29:12,200
journaling which was in freebsd

00:29:08,210 --> 00:29:14,359
nine-point up but what's coming for 9.1

00:29:12,200 --> 00:29:17,239
well we're currently rolling snapshots

00:29:14,359 --> 00:29:19,849
49.1 based on freebsd nine stable which

00:29:17,239 --> 00:29:21,440
has some new features but on the pc-bsd

00:29:19,849 --> 00:29:23,599
side but we're adding right now is a

00:29:21,440 --> 00:29:24,799
greatly simplified installer GUI it's

00:29:23,599 --> 00:29:25,999
not going to look quite like what you

00:29:24,799 --> 00:29:28,249
saw on the screen shots here it's

00:29:25,999 --> 00:29:30,080
literally two or three screens next next

00:29:28,249 --> 00:29:31,429
finish you only click the customize

00:29:30,080 --> 00:29:34,159
button if you don't like the defaults

00:29:31,429 --> 00:29:36,379
and even that's really simple we've

00:29:34,159 --> 00:29:38,299
added an integrated warden jail manager

00:29:36,379 --> 00:29:41,570
that's graphical and command-line

00:29:38,299 --> 00:29:43,970
utility for pc-bsd desktop and server

00:29:41,570 --> 00:29:46,759
edition where it'll allow you to create

00:29:43,970 --> 00:29:48,979
and manage jails all within one easy to

00:29:46,759 --> 00:29:52,549
use command there's a new bluetooth

00:29:48,979 --> 00:29:54,169
utility it's gooey we've added I don't

00:29:52,549 --> 00:29:56,690
know if anybody knows that be EA DM is

00:29:54,169 --> 00:29:58,399
from solaris that's boot environment

00:29:56,690 --> 00:30:01,759
support so that's where if you're

00:29:58,399 --> 00:30:03,559
running ZFS on your file system you can

00:30:01,759 --> 00:30:04,850
instantly take a snapshot and then you

00:30:03,559 --> 00:30:06,500
can roll back to that and say I want

00:30:04,850 --> 00:30:08,030
rebooting that snapshot later if you

00:30:06,500 --> 00:30:10,400
screw something up and then you can

00:30:08,030 --> 00:30:11,900
delete the new one or whatever so it's

00:30:10,400 --> 00:30:13,370
just a great way to tinker with stuff

00:30:11,900 --> 00:30:15,740
and not worry about am I going to

00:30:13,370 --> 00:30:18,110
destroy my OS and we're going to be

00:30:15,740 --> 00:30:20,660
doing frequent updates of desktops and

00:30:18,110 --> 00:30:23,000
such and 9.1 as well so when the new

00:30:20,660 --> 00:30:24,710
katy far you know five-point o hits or

00:30:23,000 --> 00:30:28,010
Never it'll come down the pipe usually a

00:30:24,710 --> 00:30:30,650
week later so that's couple the new

00:30:28,010 --> 00:30:32,570
features in 91 so when I let you guys

00:30:30,650 --> 00:30:33,950
ask questions now and I'll be happy to

00:30:32,570 --> 00:30:39,140
show things off if I have it on my

00:30:33,950 --> 00:30:41,360
laptop yeah question was how do we

00:30:39,140 --> 00:30:43,820
handle upgrades between versions well we

00:30:41,360 --> 00:30:45,860
can do rolling upgrades so the update

00:30:43,820 --> 00:30:48,350
manager will just notify you hey pc-bsd

00:30:45,860 --> 00:30:50,600
91 is out and you're on 90 do you want

00:30:48,350 --> 00:30:52,220
to upgrade it will look at your desktop

00:30:50,600 --> 00:30:53,810
and figure out which desktop packages

00:30:52,220 --> 00:30:56,000
you have installed so if you have que te

00:30:53,810 --> 00:30:57,440
it'll build a package list then fetch

00:30:56,000 --> 00:30:59,380
all the new stuff from the server and

00:30:57,440 --> 00:31:02,270
the new base environment of freebsd

00:30:59,380 --> 00:31:04,760
it'll reboot apply them all reboot and

00:31:02,270 --> 00:31:06,380
in your backup to your desktop so we're

00:31:04,760 --> 00:31:08,780
going to try and do rolling updates for

00:31:06,380 --> 00:31:13,100
everything i'm doing them right now for

00:31:08,780 --> 00:31:15,230
90 to 91 92 93 and maybe from 93 to 10

00:31:13,100 --> 00:31:17,210
point oh I'm a little iffy on that just

00:31:15,230 --> 00:31:19,220
because freebsd may change significantly

00:31:17,210 --> 00:31:21,320
underneath the hood so i'm not

00:31:19,220 --> 00:31:25,120
committing to that yet but if we can we

00:31:21,320 --> 00:31:25,120
will yes

00:31:29,309 --> 00:31:32,700
sure the question was do we have support

00:31:31,350 --> 00:31:35,190
for doing headless installs not

00:31:32,700 --> 00:31:36,929
installing any of the desktop stuff well

00:31:35,190 --> 00:31:39,120
on the disk you can install the pc-bsd

00:31:36,929 --> 00:31:40,289
server edition which but still you've

00:31:39,120 --> 00:31:41,999
got to have a head you got to have some

00:31:40,289 --> 00:31:44,580
kind of vga connected to it to see the

00:31:41,999 --> 00:31:46,919
gooey but another thing we've added 291

00:31:44,580 --> 00:31:48,899
is a new thin client server so you're

00:31:46,919 --> 00:31:49,980
able to run a command and then pick if

00:31:48,899 --> 00:31:52,200
you're going to be setting up a thin

00:31:49,980 --> 00:31:54,179
client desktop server or install server

00:31:52,200 --> 00:31:55,710
and if you're doing the install server

00:31:54,179 --> 00:31:58,019
it will let you pick C boot clients

00:31:55,710 --> 00:31:59,460
select the installation script you want

00:31:58,019 --> 00:32:01,409
and it'll just go ahead and install it

00:31:59,460 --> 00:32:03,080
so that'll make it easy for deploying

00:32:01,409 --> 00:32:11,009
system in a completely headless

00:32:03,080 --> 00:32:12,570
environment so your questions ok

00:32:11,009 --> 00:32:14,149
question was what kind of minimums do we

00:32:12,570 --> 00:32:17,159
need to have to run it well it varies

00:32:14,149 --> 00:32:19,350
depending on your desktop selection if

00:32:17,159 --> 00:32:21,149
you're looking at KDE you want you know

00:32:19,350 --> 00:32:22,980
12 15 gigs with all the different

00:32:21,149 --> 00:32:24,600
packages and whatnot if you do something

00:32:22,980 --> 00:32:27,240
lightweight like fluxbox you might be

00:32:24,600 --> 00:32:29,970
able to get away with like six so that's

00:32:27,240 --> 00:32:32,820
hard drive space speed wise you can use

00:32:29,970 --> 00:32:34,440
it on a p3 I mean I like multi-core if

00:32:32,820 --> 00:32:37,679
you want to use ZFS you need to be on

00:32:34,440 --> 00:32:40,619
64-bit with you know to four gigs ram to

00:32:37,679 --> 00:32:43,830
use all those features but ram why is

00:32:40,619 --> 00:32:45,570
512 it's usually pretty good you can go

00:32:43,830 --> 00:32:46,889
below that but I don't recommend it just

00:32:45,570 --> 00:32:52,190
because a lot of the window managers

00:32:46,889 --> 00:32:52,190
tend to be happier with more yes

00:32:56,140 --> 00:33:00,020
yeah the question was do we have a web

00:32:58,310 --> 00:33:03,920
page where you can look at all the PBIS

00:33:00,020 --> 00:33:06,620
that are available no not yet so what we

00:33:03,920 --> 00:33:08,030
have is the index files stored on our

00:33:06,620 --> 00:33:11,300
server right now we have somebody

00:33:08,030 --> 00:33:13,310
writing a fresh pbi zorg kind of dikko

00:33:11,300 --> 00:33:15,980
respond with fresh ports that will parse

00:33:13,310 --> 00:33:17,660
that display and some kind of web format

00:33:15,980 --> 00:33:21,910
so there will be one coming soon but

00:33:17,660 --> 00:33:24,580
it's not up at the moment what was that

00:33:21,910 --> 00:33:27,530
question was how large is the team ah

00:33:24,580 --> 00:33:30,950
committers them think developers price

00:33:27,530 --> 00:33:33,650
six six or seven developers and then you

00:33:30,950 --> 00:33:35,300
got testers documentary in and out and

00:33:33,650 --> 00:33:39,410
do translations there's a ton of

00:33:35,300 --> 00:33:41,000
translators maybe 20 of them so I mean

00:33:39,410 --> 00:33:46,840
they were a pretty small nimble project

00:33:41,000 --> 00:33:46,840
but yeah any other questions

00:34:13,429 --> 00:34:17,700
okay so the question was how are we

00:34:15,869 --> 00:34:19,770
different from Linux maybe things we

00:34:17,700 --> 00:34:22,020
have that Linux dozen or Linux has that

00:34:19,770 --> 00:34:24,089
we don't and a question about how the

00:34:22,020 --> 00:34:26,429
colonel works well there are some things

00:34:24,089 --> 00:34:28,020
where we differ since we're not linux we

00:34:26,429 --> 00:34:30,240
don't have access to all their drivers

00:34:28,020 --> 00:34:32,669
so we tend to lag a little bit behind

00:34:30,240 --> 00:34:34,079
for some Wi-Fi drivers right now but on

00:34:32,669 --> 00:34:36,240
the other hand we tend to have great

00:34:34,079 --> 00:34:39,210
ethernet drivers because of freebsd

00:34:36,240 --> 00:34:42,000
historically being an awesome server so

00:34:39,210 --> 00:34:43,770
that would be one area video drivers

00:34:42,000 --> 00:34:46,200
would be another one right now we have

00:34:43,770 --> 00:34:47,849
awesome nvidia drivers we've done work

00:34:46,200 --> 00:34:50,490
with nvidia to make those really good

00:34:47,849 --> 00:34:52,740
but the ati and intel braver tend to lag

00:34:50,490 --> 00:34:55,379
a bit behind so that would be an area

00:34:52,740 --> 00:34:56,819
where we're a little different things

00:34:55,379 --> 00:34:59,310
that we have maybe that linux doesn't

00:34:56,819 --> 00:35:01,349
would be like native ZFS in the colonel

00:34:59,310 --> 00:35:03,569
so we can just do that right out of box

00:35:01,349 --> 00:35:05,400
linux you got to load some fuse modules

00:35:03,569 --> 00:35:08,640
and stuff to do that it's kind of

00:35:05,400 --> 00:35:10,650
hackish at the moment but question about

00:35:08,640 --> 00:35:13,050
the colonel though it is a big colonel

00:35:10,650 --> 00:35:21,470
file what specifically did you want to

00:35:13,050 --> 00:35:21,470
know about it mm-hmm

00:35:25,039 --> 00:35:32,220
sure so the question was how is the

00:35:30,180 --> 00:35:33,539
evolution of the kernel bsd versus the

00:35:32,220 --> 00:35:36,539
linux where you're getting version

00:35:33,539 --> 00:35:38,549
revisions every so often well it is a

00:35:36,539 --> 00:35:40,019
bit different so the freebsd kernel is

00:35:38,549 --> 00:35:42,269
tightly integrated with the base

00:35:40,019 --> 00:35:43,859
environment so when you get a freebsd

00:35:42,269 --> 00:35:46,200
nine-point-oh you get a freebsd

00:35:43,859 --> 00:35:48,420
nine-point-oh kernel which works well

00:35:46,200 --> 00:35:50,339
with all the other user lands stuff

00:35:48,420 --> 00:35:52,259
they're very tightly integrated so

00:35:50,339 --> 00:35:54,359
you're not going to be seeing a separate

00:35:52,259 --> 00:35:56,430
freebsd kernel update come out in the

00:35:54,359 --> 00:35:58,259
middle of a nine-point-oh release cycle

00:35:56,430 --> 00:36:00,690
you won't get a new kernel until nine

00:35:58,259 --> 00:36:02,759
one comes out they have a head and then

00:36:00,690 --> 00:36:04,319
a stable branch where you can follow

00:36:02,759 --> 00:36:05,700
along with the development and if you

00:36:04,319 --> 00:36:07,589
want to run a stable kernel and

00:36:05,700 --> 00:36:09,839
recompile it yourself every couple days

00:36:07,589 --> 00:36:11,160
or weeks there's nothing stopping you

00:36:09,839 --> 00:36:12,990
from doing that that's what our

00:36:11,160 --> 00:36:15,720
snapshots are based on it's just a cut

00:36:12,990 --> 00:36:18,750
of freebsd stable during the development

00:36:15,720 --> 00:36:20,940
process leading up to 9.1 right now but

00:36:18,750 --> 00:36:22,920
you're not going to be again seeing a

00:36:20,940 --> 00:36:25,680
big update coming down saying freebsd

00:36:22,920 --> 00:36:27,660
nine point 0 point 0 put 2.3 some kernel

00:36:25,680 --> 00:36:29,460
coming down on your nine-point-oh system

00:36:27,660 --> 00:36:31,170
the only time you'll get an update if

00:36:29,460 --> 00:36:33,180
you're on a release is for security

00:36:31,170 --> 00:36:34,950
vulnerabilities and then you don't touch

00:36:33,180 --> 00:36:41,839
the kernel until the new release comes

00:36:34,950 --> 00:36:41,839
out that answer your question okay yes

00:36:52,099 --> 00:36:56,549
the question was we do track freebsd

00:36:54,960 --> 00:36:58,369
right now will there be divergence in

00:36:56,549 --> 00:37:01,349
the future as bigger changes come

00:36:58,369 --> 00:37:02,819
hopefully not as long as I'm around I

00:37:01,349 --> 00:37:05,010
don't want to ever fork it off and

00:37:02,819 --> 00:37:07,170
change we we have people who've made

00:37:05,010 --> 00:37:08,760
changes for us and then they make

00:37:07,170 --> 00:37:10,410
changes we try and push them back

00:37:08,760 --> 00:37:12,210
upstream because I don't want to have to

00:37:10,410 --> 00:37:15,359
be maintaining patches all day I mean

00:37:12,210 --> 00:37:16,769
that's just crazy yeah but no we want to

00:37:15,359 --> 00:37:18,240
keep we want to put everything back into

00:37:16,769 --> 00:37:20,069
freebsd we're not going out and

00:37:18,240 --> 00:37:21,690
developing proprietary modules or

00:37:20,069 --> 00:37:23,099
anything weird like that and then saying

00:37:21,690 --> 00:37:25,849
we're not going to push it back upstream

00:37:23,099 --> 00:37:28,849
that's not not what we're about at all

00:37:25,849 --> 00:37:28,849
yes

00:37:33,180 --> 00:37:39,880
the question was booting from ZFS and

00:37:35,980 --> 00:37:41,349
the would you say zone manager oh the

00:37:39,880 --> 00:37:43,329
warden thing okay well they're

00:37:41,349 --> 00:37:46,420
completely different different projects

00:37:43,329 --> 00:37:48,579
or things but booting from ZFS you can

00:37:46,420 --> 00:37:50,410
do that in freebsd where they're lacking

00:37:48,579 --> 00:37:52,660
at the moment is that our installer they

00:37:50,410 --> 00:37:54,819
have for the traditional freebsd text

00:37:52,660 --> 00:37:57,550
mode installer doesn't have ZFS support

00:37:54,819 --> 00:37:59,859
so if you want to add ZFS or boot from

00:37:57,550 --> 00:38:02,050
it you got to go to a shell run the

00:37:59,859 --> 00:38:04,000
commands build the file system set it up

00:38:02,050 --> 00:38:05,589
yourself whereas we just kind of do it

00:38:04,000 --> 00:38:08,170
for you right out of box just click it

00:38:05,589 --> 00:38:10,569
it's done the wardens separate its

00:38:08,170 --> 00:38:13,119
that's just a top it's a layer on top of

00:38:10,569 --> 00:38:15,160
the jail system already in freebsd so

00:38:13,119 --> 00:38:17,319
everything i'm doing in the warden for

00:38:15,160 --> 00:38:19,000
jails you could do from freebsd if you

00:38:17,319 --> 00:38:21,460
know all the command line kung fu to do

00:38:19,000 --> 00:38:24,970
it right but the warden just makes it

00:38:21,460 --> 00:38:28,240
easier and sets it all up for you yes

00:38:24,970 --> 00:38:30,640
the wardens included in pc-bsd yeah yeah

00:38:28,240 --> 00:38:32,319
so so I occasionally we make some of our

00:38:30,640 --> 00:38:35,410
stuff into ports and put it into the

00:38:32,319 --> 00:38:36,640
freebsd port street so the pbi format

00:38:35,410 --> 00:38:39,069
would be a good one we actually have a

00:38:36,640 --> 00:38:41,500
port so if you install native freebsd

00:38:39,069 --> 00:38:43,420
you can add the pbi package manager

00:38:41,500 --> 00:38:45,579
right into freebsd you never touch our

00:38:43,420 --> 00:38:47,140
site or any of our stuff some other

00:38:45,579 --> 00:38:49,300
utilities like the warden though I've

00:38:47,140 --> 00:38:50,829
kind of pulled back from doing that not

00:38:49,300 --> 00:38:52,119
because we don't want to make an open

00:38:50,829 --> 00:38:53,740
source or something just because it

00:38:52,119 --> 00:38:55,930
relies on a lot of things that are all

00:38:53,740 --> 00:38:57,730
part of pc-bsd and making a port which

00:38:55,930 --> 00:38:59,140
includes all that would be pretty

00:38:57,730 --> 00:39:06,000
difficult you know as well just install

00:38:59,140 --> 00:39:06,000
pc-bsd yes

00:39:10,250 --> 00:39:27,870
sure sure Wow so how about both okay so

00:39:25,140 --> 00:39:29,130
here's the secret so in pc-bsd 91 what

00:39:27,870 --> 00:39:31,140
we've created is something called the

00:39:29,130 --> 00:39:33,630
pc-bsd server which again is just

00:39:31,140 --> 00:39:36,060
freebsd it's pretty much vanilla freebsd

00:39:33,630 --> 00:39:38,790
but we have the command line utilities

00:39:36,060 --> 00:39:41,040
for pb ice and the warden all built in

00:39:38,790 --> 00:39:42,810
so all of our custom utilities are there

00:39:41,040 --> 00:39:45,360
that you would normally have to hack

00:39:42,810 --> 00:39:47,310
into freebsd and you can install that

00:39:45,360 --> 00:39:49,890
with ZFS and all of our awesome install

00:39:47,310 --> 00:39:50,970
options so that supports there and if

00:39:49,890 --> 00:39:52,950
you have if there's something specific

00:39:50,970 --> 00:39:54,180
you want in the freebsd installer though

00:39:52,950 --> 00:39:55,560
i can give you a lot of mailing list

00:39:54,180 --> 00:39:58,640
where you can post all kinds of stuff

00:39:55,560 --> 00:40:10,790
about why doesn't your installer do this

00:39:58,640 --> 00:40:10,790
yeah what was that and catch that mm-hmm

00:40:11,240 --> 00:40:15,360
to build your own configuration for an

00:40:13,560 --> 00:40:24,590
installation I'm not I'm not as familiar

00:40:15,360 --> 00:40:28,170
with their software now mm-hmm config

00:40:24,590 --> 00:40:29,250
sure okay so the question was do we have

00:40:28,170 --> 00:40:32,700
a way where you could build your own

00:40:29,250 --> 00:40:34,650
custom config packages yeah using a GUI

00:40:32,700 --> 00:40:36,360
so what we have right now is we don't

00:40:34,650 --> 00:40:39,840
have a GUI which will do it aside from

00:40:36,360 --> 00:40:41,640
our install GUI behind the scenes of our

00:40:39,840 --> 00:40:43,950
install GUI every installs actually a

00:40:41,640 --> 00:40:45,870
scripted install so you can do that

00:40:43,950 --> 00:40:48,000
right now it's not there's nothing fancy

00:40:45,870 --> 00:40:50,460
linking it together but after each

00:40:48,000 --> 00:40:52,590
install it saves the configure used on

00:40:50,460 --> 00:40:54,180
your hard drive you can then take that

00:40:52,590 --> 00:40:56,790
script because it's just a script to

00:40:54,180 --> 00:40:58,620
install tweak it whatever packages on it

00:40:56,790 --> 00:41:00,390
you want and then you can deploy it via

00:40:58,620 --> 00:41:02,670
the pixi server for example and do

00:41:00,390 --> 00:41:04,860
headless installs so you can one time

00:41:02,670 --> 00:41:07,050
use our GUI lay everything out just

00:41:04,860 --> 00:41:09,270
perfectly all your ZFS data sets and

00:41:07,050 --> 00:41:11,100
options and all that goodness all one

00:41:09,270 --> 00:41:12,750
spot and then take that config and

00:41:11,100 --> 00:41:14,820
replicate it as many times as you like

00:41:12,750 --> 00:41:19,700
it's not via the web but it can be done

00:41:14,820 --> 00:41:19,700
with our tools yes yeah

00:41:29,289 --> 00:41:33,619
yeah the question was what's our jellies

00:41:32,210 --> 00:41:35,539
usually like is it full disk encryption

00:41:33,619 --> 00:41:38,119
so yeah it can be full disk encryption

00:41:35,539 --> 00:41:40,640
it works on freebsd has called the G

00:41:38,119 --> 00:41:42,710
amla r so that can be an entire disk it

00:41:40,640 --> 00:41:44,480
could be just a slice or a partition if

00:41:42,710 --> 00:41:47,150
you want to get crazy you can put jelly

00:41:44,480 --> 00:41:48,349
but ZFS on top of it there's a lot of

00:41:47,150 --> 00:42:00,680
different ways you can work that but

00:41:48,349 --> 00:42:02,420
yeah it can be full disk as well yes ok

00:42:00,680 --> 00:42:05,059
so the question was how will does sleep

00:42:02,420 --> 00:42:07,309
currently work in pc-bsd sleep is

00:42:05,059 --> 00:42:12,470
awesome it works so well it'll never

00:42:07,309 --> 00:42:13,640
wake up no no seriously it depends on

00:42:12,470 --> 00:42:16,160
the depends on the hardware you're on

00:42:13,640 --> 00:42:18,859
like this laptop I can suspend resume

00:42:16,160 --> 00:42:20,660
and it works fine but it depends on the

00:42:18,859 --> 00:42:22,730
hardware there are a number of issues of

00:42:20,660 --> 00:42:24,859
freebsd and that would be an area where

00:42:22,730 --> 00:42:28,039
we lag behind linux and having proper

00:42:24,859 --> 00:42:29,329
suspend resume support in it yeah yeah

00:42:28,039 --> 00:42:30,740
it's one of those things depending on

00:42:29,329 --> 00:42:37,789
the hardware you got your mileage will

00:42:30,740 --> 00:42:39,710
vary not an easy issue i think the cases

00:42:37,789 --> 00:42:41,779
we have a certain acpi standard we

00:42:39,710 --> 00:42:43,369
followed of course not everybody else

00:42:41,779 --> 00:42:45,470
follows that and especially the hardware

00:42:43,369 --> 00:42:50,599
doesn't so we're still fighting that

00:42:45,470 --> 00:42:51,980
battle as well any other questions you

00:42:50,599 --> 00:42:54,529
guys like me to show you anything well I

00:42:51,980 --> 00:42:55,700
have the screen up here one thing I was

00:42:54,529 --> 00:42:57,890
going to point out for those who are

00:42:55,700 --> 00:43:01,490
curious I didn't have a slide slide of

00:42:57,890 --> 00:43:03,680
it but in nine ones I'm actually running

00:43:01,490 --> 00:43:05,569
the snapshot here this is what the

00:43:03,680 --> 00:43:08,000
warden looks like by default the GUI

00:43:05,569 --> 00:43:10,039
again this is all command line as well

00:43:08,000 --> 00:43:12,559
but I've gone ahead and created a couple

00:43:10,039 --> 00:43:14,779
jails I've given them a few IPS you can

00:43:12,559 --> 00:43:19,670
give them as many as you want plus ipv6

00:43:14,779 --> 00:43:21,529
and we have utilities with them so we

00:43:19,670 --> 00:43:23,690
have graphical user administrators for

00:43:21,529 --> 00:43:25,039
your jails we can launch terminals in

00:43:23,690 --> 00:43:26,839
there we can check for updates and

00:43:25,039 --> 00:43:29,119
upgrade your jails and upgrade packages

00:43:26,839 --> 00:43:31,279
inside them for you and we can export it

00:43:29,119 --> 00:43:32,420
to a single file that you can take an

00:43:31,279 --> 00:43:34,130
import on other hardware

00:43:32,420 --> 00:43:35,690
so if you want to migrate systems it's

00:43:34,130 --> 00:43:38,510
easy to move a jail from one system to

00:43:35,690 --> 00:43:42,200
another this is kind of a cool feature

00:43:38,510 --> 00:43:44,720
if you are running ZFS we like ZFS you

00:43:42,200 --> 00:43:46,910
want to use ZFS because it is awesome so

00:43:44,720 --> 00:43:48,560
we provide support and the warden for

00:43:46,910 --> 00:43:50,720
letting you take snapshots of your jails

00:43:48,560 --> 00:43:52,940
so if you're going to do a potentially

00:43:50,720 --> 00:43:54,590
risky Apache upgrade or own cloud or

00:43:52,940 --> 00:43:57,200
whatever it is you're running you take

00:43:54,590 --> 00:43:58,490
an instant ZFS snapshot and then you can

00:43:57,200 --> 00:44:02,120
delete it when your daughter roll back

00:43:58,490 --> 00:44:04,130
to it should something go wrong and last

00:44:02,120 --> 00:44:06,110
but not least we are starting to build

00:44:04,130 --> 00:44:08,450
up a set of packages for jails as well

00:44:06,110 --> 00:44:10,610
which is just using the freebsd package

00:44:08,450 --> 00:44:13,460
commands in the background but will have

00:44:10,610 --> 00:44:15,530
pre-built Apache my sequel you know

00:44:13,460 --> 00:44:18,380
whatever you want we can get a package

00:44:15,530 --> 00:44:20,960
of it out of those 26,000 ports and make

00:44:18,380 --> 00:44:22,340
it jailable and we can load that in

00:44:20,960 --> 00:44:24,320
there and then of course it'll warn you

00:44:22,340 --> 00:44:26,270
about keeping it up-to-date as well so

00:44:24,320 --> 00:44:30,430
it just tried to take all the guesswork

00:44:26,270 --> 00:44:30,430
out of creating jails and managing them

00:44:33,010 --> 00:44:40,280
well let's see here I don't know if you

00:44:38,960 --> 00:44:42,740
can see it that well it's all command

00:44:40,280 --> 00:44:44,480
line based as well so the question was

00:44:42,740 --> 00:44:46,280
do we have a command line warden so all

00:44:44,480 --> 00:44:48,350
these utilities graphical things i'm

00:44:46,280 --> 00:44:50,030
showing you i think pretty much all of

00:44:48,350 --> 00:44:51,770
them have a full command line interface

00:44:50,030 --> 00:44:53,390
as well now and that's something I'm

00:44:51,770 --> 00:44:55,820
insisting on so that when we build our

00:44:53,390 --> 00:44:57,410
pc-bsd server edition you get the

00:44:55,820 --> 00:44:58,910
command line version and if you like it

00:44:57,410 --> 00:45:00,830
there's nothing stopping you from moving

00:44:58,910 --> 00:45:02,900
jails to a desktop tinkering with them

00:45:00,830 --> 00:45:04,340
and then moving them back and so forth

00:45:02,900 --> 00:45:07,760
and so on but yeah this can all be done

00:45:04,340 --> 00:45:10,060
via the command line and your questions

00:45:07,760 --> 00:45:10,060
from you guys

00:45:16,110 --> 00:45:21,700
question was freebsd pc-bsd what

00:45:18,940 --> 00:45:23,530
bootloader do we use freebsd has its own

00:45:21,700 --> 00:45:25,840
boot loader and so we're using that

00:45:23,530 --> 00:45:28,060
right now it's really simple f12 load vs

00:45:25,840 --> 00:45:30,760
tf2 to load linux f3 for windows

00:45:28,060 --> 00:45:34,300
whatever i'm not sure is our name for

00:45:30,760 --> 00:45:36,070
that drew to the freebsd bootloader boot

00:45:34,300 --> 00:45:37,630
loader yeah it doesn't have a fancy name

00:45:36,070 --> 00:45:39,730
like grub or anything it's just the boot

00:45:37,630 --> 00:45:43,680
loader and it's the standard one that's

00:45:39,730 --> 00:45:43,680
in freebsd so we piggybacked off of that

00:45:45,840 --> 00:45:50,950
the question was what is the default

00:45:48,010 --> 00:45:54,460
file system for freebsd or pc-bsd i

00:45:50,950 --> 00:45:56,290
guess for freebsd it's ufs right now

00:45:54,460 --> 00:45:58,060
that's their default file system and

00:45:56,290 --> 00:46:01,480
then you have to hack on if you want to

00:45:58,060 --> 00:46:03,850
use ZFS pcbs see it depends in the

00:46:01,480 --> 00:46:06,340
snapshot it's going to autodetect based

00:46:03,850 --> 00:46:08,260
on your hardware if you're on 64-bit and

00:46:06,340 --> 00:46:10,150
you have couple gigs of ram it's going

00:46:08,260 --> 00:46:12,460
to push you toward ZFS because we want

00:46:10,150 --> 00:46:14,350
you to be using these features even if

00:46:12,460 --> 00:46:16,540
it's on a desktop or laptop I mean you

00:46:14,350 --> 00:46:18,730
can benefit from a boot environment or

00:46:16,540 --> 00:46:20,380
taking snapshots plus you have things

00:46:18,730 --> 00:46:22,750
like compression where we can compress a

00:46:20,380 --> 00:46:24,940
bunch of directories with just text

00:46:22,750 --> 00:46:26,380
files in so it's going to depend on your

00:46:24,940 --> 00:46:28,030
hardware if you're on more reasonable

00:46:26,380 --> 00:46:29,530
modest hardware with less Ram it's going

00:46:28,030 --> 00:46:31,660
to default you back to ufs with

00:46:29,530 --> 00:46:33,880
journaling so you'll still have that as

00:46:31,660 --> 00:46:36,280
a fallback option but you know I'm a big

00:46:33,880 --> 00:46:38,200
fan of ZFS the longer I use it the more

00:46:36,280 --> 00:46:40,420
rabid I get about like you have to be on

00:46:38,200 --> 00:46:41,950
ZFS this is the coolest thing ever so

00:46:40,420 --> 00:46:47,640
we're going to try and push you that way

00:46:41,950 --> 00:46:47,640
if we can yes

00:46:49,309 --> 00:46:54,420
question was where is SSD support pc-bsd

00:46:52,410 --> 00:46:57,930
we have support for it they've added the

00:46:54,420 --> 00:46:59,730
trim options to the ufs did they add

00:46:57,930 --> 00:47:07,950
that to ZFS yet drew I remember reading

00:46:59,730 --> 00:47:09,420
about oh ok so what drew said was

00:47:07,950 --> 00:47:12,650
there's argument being made that the way

00:47:09,420 --> 00:47:14,970
ZFS does its thing it doesn't need trim

00:47:12,650 --> 00:47:16,170
yeah that is correct it's doing

00:47:14,970 --> 00:47:18,390
copy-on-write so maybe that's

00:47:16,170 --> 00:47:26,039
unnecessary but for the ufs side they

00:47:18,390 --> 00:47:28,109
have added trim support hmm question was

00:47:26,039 --> 00:47:30,450
do we have any live CDs yes just not

00:47:28,109 --> 00:47:31,799
here so if you go to the website the

00:47:30,450 --> 00:47:33,150
ones we're handing out back that are

00:47:31,799 --> 00:47:34,859
they install disks I don't have enough

00:47:33,150 --> 00:47:36,839
room to get both a live image and the

00:47:34,859 --> 00:47:38,549
install and all our packages on the one

00:47:36,839 --> 00:47:40,950
but you can go to the website and grab a

00:47:38,549 --> 00:47:43,760
live media or live USB if you'd like

00:47:40,950 --> 00:47:43,760
they're all on there

00:47:57,900 --> 00:48:04,150
so the question was ZFS does it need a

00:48:00,640 --> 00:48:06,640
64-bit capable CPU or the 64-bit OS well

00:48:04,150 --> 00:48:08,440
neither you can install it on 32-bit

00:48:06,640 --> 00:48:09,910
there's nothing in the Installer it's

00:48:08,440 --> 00:48:13,600
going to stop you it just gives a

00:48:09,910 --> 00:48:16,330
recommendation ambi 64 with Ram I don't

00:48:13,600 --> 00:48:18,190
push people that way CFS on 32-bit is

00:48:16,330 --> 00:48:20,470
really discouraged because it's pretty

00:48:18,190 --> 00:48:22,630
easy to kill your system with it it's

00:48:20,470 --> 00:48:25,180
designed for the extra addressing space

00:48:22,630 --> 00:48:26,890
so if you go and try and move over a big

00:48:25,180 --> 00:48:28,960
two gigabyte file it's pretty easy to

00:48:26,890 --> 00:48:31,030
knock your system over and be done but

00:48:28,960 --> 00:48:33,520
amd64 we don't see that that's what it's

00:48:31,030 --> 00:48:35,410
designed for so nothing stopping you

00:48:33,520 --> 00:48:42,070
from running it but you do so at your

00:48:35,410 --> 00:48:44,770
own risk oh yeah yeah yeah when we say

00:48:42,070 --> 00:48:47,470
excuse me when I say amd64 I mean the

00:48:44,770 --> 00:48:50,170
whole family of 64-bit architecture it's

00:48:47,470 --> 00:48:52,510
just what freebsd labels there's amd64

00:48:50,170 --> 00:49:07,780
and I 386 those are our 32-bit and

00:48:52,510 --> 00:49:09,490
64-bit platforms yeah yeah more RAM

00:49:07,780 --> 00:49:11,710
definitely i don't know about pae I've

00:49:09,490 --> 00:49:13,960
not I've not played with that on like a

00:49:11,710 --> 00:49:16,540
32 bit and tried that drew do you have

00:49:13,960 --> 00:49:18,970
any idea how that works that seems

00:49:16,540 --> 00:49:22,240
really hacky to me I mean I would just

00:49:18,970 --> 00:49:23,560
run the 64-bit OS version if I could I

00:49:22,240 --> 00:49:26,820
have not played it though so I have no

00:49:23,560 --> 00:49:29,820
first-hand experience going that route

00:49:26,820 --> 00:49:29,820
ok

00:49:38,709 --> 00:49:43,489
question was how do we handle basically

00:49:41,269 --> 00:49:45,529
64-bit OS and then running 32-bit

00:49:43,489 --> 00:49:47,389
applications and handling libraries

00:49:45,529 --> 00:49:48,979
underneath well one of the cool things

00:49:47,389 --> 00:49:52,009
about the PPI format is being

00:49:48,979 --> 00:49:53,329
self-contained we run 32-bit stuff on 64

00:49:52,009 --> 00:49:55,039
all the time because they include the

00:49:53,329 --> 00:49:57,109
libraries they need that's how we get

00:49:55,039 --> 00:49:59,089
around have a wine package so you

00:49:57,109 --> 00:50:02,479
install the wine package and really it's

00:49:59,089 --> 00:50:04,639
installing the 32-bit version but it's

00:50:02,479 --> 00:50:07,599
got all the libraries it needs to run 32

00:50:04,639 --> 00:50:09,919
so on pc-bsd that's less of an issue

00:50:07,599 --> 00:50:11,809
it's still kind of hacky if you want to

00:50:09,919 --> 00:50:14,149
do it manually via ports you have to set

00:50:11,809 --> 00:50:16,819
up like at root of iron set up 32-bit

00:50:14,149 --> 00:50:18,439
world build stuff in there but just use

00:50:16,819 --> 00:50:20,839
the PDI system we've done all that work

00:50:18,439 --> 00:50:23,329
for you and you can just grab 32-bit

00:50:20,839 --> 00:50:25,130
packages of emulators like super

00:50:23,329 --> 00:50:27,649
nintendo emulators you know whatever and

00:50:25,130 --> 00:50:29,119
those just work on the 64-bit host

00:50:27,649 --> 00:50:34,549
because they have the libraries they

00:50:29,119 --> 00:50:36,409
need and everything's pretty kosher any

00:50:34,549 --> 00:50:37,699
other questions guys I appreciate these

00:50:36,409 --> 00:50:38,899
are awesome questions I like getting

00:50:37,699 --> 00:50:40,809
good questions because that gives me

00:50:38,899 --> 00:50:46,449
ideas about what to talk about next time

00:50:40,809 --> 00:50:46,449
yeah oh sorry we'll go back here first

00:50:52,180 --> 00:50:57,740
the question was he needs to compile

00:50:54,470 --> 00:51:06,140
Firefox Knightley's every day how would

00:50:57,740 --> 00:51:07,580
we do that on pc-bsd yeah it is a long

00:51:06,140 --> 00:51:09,530
compile process we have some neat

00:51:07,580 --> 00:51:11,720
utilities like tinder box which can help

00:51:09,530 --> 00:51:13,220
automate that where it'll cash like all

00:51:11,720 --> 00:51:15,020
the packages the intermediaries that

00:51:13,220 --> 00:51:18,380
maybe don't change and just compile the

00:51:15,020 --> 00:51:20,150
Firefox code I would I don't see why you

00:51:18,380 --> 00:51:21,860
couldn't do that the biggest problem

00:51:20,150 --> 00:51:23,830
you'd probably have is just if there's

00:51:21,860 --> 00:51:29,450
any custom patches we have for freebsd

00:51:23,830 --> 00:51:30,710
to make it run on freebsd yeah we try

00:51:29,450 --> 00:51:32,450
and we try and push a lot of those

00:51:30,710 --> 00:51:34,670
upstream so those tend to get pushed

00:51:32,450 --> 00:51:36,350
upstream as soon as we can and then it's

00:51:34,670 --> 00:51:38,060
not issue you can just compile it kind

00:51:36,350 --> 00:51:39,620
of out of box we have our own make file

00:51:38,060 --> 00:51:41,600
structure with the board system so you

00:51:39,620 --> 00:51:43,130
can piggyback off of that and just tweak

00:51:41,600 --> 00:51:46,280
the version number or whatever and and

00:51:43,130 --> 00:51:48,080
go to town I've not personally done it

00:51:46,280 --> 00:51:51,320
but it can be done I don't see too much

00:51:48,080 --> 00:52:00,020
difficulty with that sorry we'll come

00:51:51,320 --> 00:52:02,180
back here you oh yes yes I have an extra

00:52:00,020 --> 00:52:03,560
lunch ticket and or drinks tickets I

00:52:02,180 --> 00:52:06,740
think that's what these are on a lunch

00:52:03,560 --> 00:52:08,990
ticket okay if anyone wants him come up

00:52:06,740 --> 00:52:10,340
and see me afterwards I will be glad to

00:52:08,990 --> 00:52:19,340
hand them out to you cuz he could not

00:52:10,340 --> 00:52:21,500
stay you had a question question was do

00:52:19,340 --> 00:52:23,030
we have our own web browser well we

00:52:21,500 --> 00:52:24,710
don't have our own custom web browser we

00:52:23,030 --> 00:52:28,760
use the standard ones you see another

00:52:24,710 --> 00:52:30,710
yeah Firefox Chrome Opera conquer as a

00:52:28,760 --> 00:52:32,870
pifa knee and I mean all the standard

00:52:30,710 --> 00:52:35,660
ones are there but we're not gonna I

00:52:32,870 --> 00:52:37,790
don't foresee us writing our own we have

00:52:35,660 --> 00:52:40,430
some cool stuff they did with chrome on

00:52:37,790 --> 00:52:42,410
freebsd at some point we may be getting

00:52:40,430 --> 00:52:44,420
a special package version of that with

00:52:42,410 --> 00:52:46,880
capsicum support which is their big

00:52:44,420 --> 00:52:48,620
sandboxing security ultra secure

00:52:46,880 --> 00:52:50,690
environment which encapsulate the

00:52:48,620 --> 00:52:52,310
browser so we may be rolling out with a

00:52:50,690 --> 00:52:54,620
package of that here fairly soon as well

00:52:52,310 --> 00:52:58,400
but yeah it's all the standard stuff and

00:52:54,620 --> 00:53:02,330
was you had a question question was do

00:52:58,400 --> 00:53:04,240
we support Dropbox new at the moment

00:53:02,330 --> 00:53:06,430
they only release the Linux version

00:53:04,240 --> 00:53:08,140
and we can run parts of it through the

00:53:06,430 --> 00:53:10,690
Linux simulation but we're waiting for

00:53:08,140 --> 00:53:12,100
somebody to add some I poll features to

00:53:10,690 --> 00:53:14,380
our Linux emulation and then we'll be

00:53:12,100 --> 00:53:17,470
able to run it I get around that I run

00:53:14,380 --> 00:53:19,390
my own own cloud instance on freebsd /

00:53:17,470 --> 00:53:21,400
your pc BSC it works great and i've been

00:53:19,390 --> 00:53:22,510
using that but that's something that

00:53:21,400 --> 00:53:28,090
will probably come here in the near

00:53:22,510 --> 00:53:34,720
future yeah yeah we can't run netflix

00:53:28,090 --> 00:53:36,160
sorry no silverlight yeah well yeah any

00:53:34,720 --> 00:53:39,040
other questions guys or should I let you

00:53:36,160 --> 00:53:42,000
go to dinner okay well I think guys I

00:53:39,040 --> 00:53:42,000
appreciate you coming out

00:54:21,580 --> 00:54:28,030
how's that sigh every way this is the

00:54:24,730 --> 00:54:30,190
way to better utilize all your resources

00:54:28,030 --> 00:54:33,640
and it makes managing all your resources

00:54:30,190 --> 00:54:37,500
pretty easy all of the innovation is

00:54:33,640 --> 00:54:40,960
happening in open source the

00:54:37,500 --> 00:54:42,760
collaborative nature and of the you know

00:54:40,960 --> 00:54:44,710
of the community and then the speed at

00:54:42,760 --> 00:54:46,630
which these are these you know these

00:54:44,710 --> 00:54:48,760
these deficiencies these bugs are

00:54:46,630 --> 00:54:51,160
getting discovered and then fixed is it

00:54:48,760 --> 00:54:54,520
I think that really shows the power of

00:54:51,160 --> 00:54:56,140
the of the open source community it is

00:54:54,520 --> 00:55:00,340
global and it's definitely because of

00:54:56,140 --> 00:55:06,670
the users community people are extremely

00:55:00,340 --> 00:55:08,440
friendly and always ready to help if you

00:55:06,670 --> 00:55:09,870
go an entire see any day you'll see

00:55:08,440 --> 00:55:12,010
these guys helping each other out and

00:55:09,870 --> 00:55:14,890
they're all doing it like in a selfless

00:55:12,010 --> 00:55:16,720
manner the product is transparent for

00:55:14,890 --> 00:55:20,920
everyone everyone can look at the code

00:55:16,720 --> 00:55:22,960
base everyone can see how close darkest

00:55:20,920 --> 00:55:28,810
is being built nothing nothing is

00:55:22,960 --> 00:55:31,480
proprietary everything is open in many

00:55:28,810 --> 00:55:35,680
ways it's absolutely vital to the the

00:55:31,480 --> 00:55:39,430
unborn health CloudStack the most

00:55:35,680 --> 00:55:43,320
exciting event in recent memory for me

00:55:39,430 --> 00:55:45,990
was our first developer boot camp

00:55:43,320 --> 00:55:48,630
and our call gave people a give me two

00:55:45,990 --> 00:55:52,590
weeks notice to come attend I was

00:55:48,630 --> 00:55:56,760
expecting 25 or 30 people so we ended up

00:55:52,590 --> 00:55:58,710
with 87 people and had to go get more

00:55:56,760 --> 00:56:00,960
chairs and into the room twice

00:55:58,710 --> 00:56:04,500
everything within cloud computing is

00:56:00,960 --> 00:56:07,200
commodity and is open source and so I

00:56:04,500 --> 00:56:09,000
don't think that you will you'll see

00:56:07,200 --> 00:56:11,670
anywhere where open source is not

00:56:09,000 --> 00:56:14,550
pervasive in cloud computing and so i

00:56:11,670 --> 00:56:16,410
think it's i think it's an assumption i

00:56:14,550 --> 00:56:17,670
think when you talk about cloud

00:56:16,410 --> 00:56:22,890
computing you're really talking about

00:56:17,670 --> 00:56:25,370
open source cloud computing cloud sac is

00:56:22,890 --> 00:56:28,230
a robust solution for large deployments

00:56:25,370 --> 00:56:30,090
you have dozens of data centers and

00:56:28,230 --> 00:56:34,020
thousands of servers in each data

00:56:30,090 --> 00:56:37,350
centers these hardware is going to fail

00:56:34,020 --> 00:56:40,500
and CloudStack is designed to handle

00:56:37,350 --> 00:56:43,050
number one that mass scale number two

00:56:40,500 --> 00:56:46,340
it's designed to handle the failure that

00:56:43,050 --> 00:56:48,840
inevitably happens in large deployments

00:56:46,340 --> 00:56:53,730
started working on cod tech over four

00:56:48,840 --> 00:56:56,640
years ago and it was the original set of

00:56:53,730 --> 00:56:58,830
people working on it had a background of

00:56:56,640 --> 00:57:02,670
delivering software telcos and service

00:56:58,830 --> 00:57:07,140
providers lots of QA lots of users

00:57:02,670 --> 00:57:11,120
actually using it high availability is a

00:57:07,140 --> 00:57:14,010
key feature multiple hypervisors support

00:57:11,120 --> 00:57:16,470
different network models we can pick up

00:57:14,010 --> 00:57:18,630
whatever suits you better while step

00:57:16,470 --> 00:57:22,140
management server can be deployed in

00:57:18,630 --> 00:57:23,940
different physical machines it

00:57:22,140 --> 00:57:25,560
definitely has a huge footprint it's

00:57:23,940 --> 00:57:30,990
being deployed everywhere there's a

00:57:25,560 --> 00:57:32,720
major movie studio that they were using

00:57:30,990 --> 00:57:35,850
cloudstack they were using it to

00:57:32,720 --> 00:57:38,100
transcode video and i thought that was

00:57:35,850 --> 00:57:39,390
terribly fascinating what i found more

00:57:38,100 --> 00:57:42,660
fascinating is what they did during

00:57:39,390 --> 00:57:45,450
lunch where they would spin up you know

00:57:42,660 --> 00:57:46,690
50 or 60 game servers then as soon as

00:57:45,450 --> 00:57:48,760
lunch was over they would this

00:57:46,690 --> 00:57:52,900
the instances and go back to doing real

00:57:48,760 --> 00:57:54,220
work cloudstack is vast it touches so

00:57:52,900 --> 00:57:56,290
many different aspects and there's no

00:57:54,220 --> 00:57:58,690
one person that's kind of like a master

00:57:56,290 --> 00:58:02,800
of all those realms I think clouds stack

00:57:58,690 --> 00:58:04,990
as a project is going to be one of the

00:58:02,800 --> 00:58:09,069
leaders simply because it's some of the

00:58:04,990 --> 00:58:14,500
most feature folan and and robust

00:58:09,069 --> 00:58:17,400
platforms out they were Adam senior

00:58:14,500 --> 00:58:17,400
living through the clouds dag

00:58:30,170 --> 00:58:32,230
you

00:58:35,609 --> 00:58:40,660
when we created asterisk over a decade

00:58:38,320 --> 00:58:42,640
ago we could not have imagined that

00:58:40,660 --> 00:58:44,830
asterisk would not only become the most

00:58:42,640 --> 00:58:46,960
widely adopted open source communication

00:58:44,830 --> 00:58:49,000
software on the planet but that it would

00:58:46,960 --> 00:58:51,520
impact the entire industry in the way

00:58:49,000 --> 00:58:53,500
that it has today asterisk has found its

00:58:51,520 --> 00:58:56,140
way in the more than 170 countries and

00:58:53,500 --> 00:58:58,090
virtually every fortune 1000 company the

00:58:56,140 --> 00:59:00,160
success of asterisk has enabled a

00:58:58,090 --> 00:59:01,599
transition of power from the hands of

00:59:00,160 --> 00:59:03,849
the traditional proprietary phone

00:59:01,599 --> 00:59:06,250
vendors into the hands of the users and

00:59:03,849 --> 00:59:08,200
administrators of phone systems using

00:59:06,250 --> 00:59:09,430
this power our customers have created

00:59:08,200 --> 00:59:11,380
all sorts of business changing

00:59:09,430 --> 00:59:13,210
applications from small office phone

00:59:11,380 --> 00:59:15,730
systems to mission-critical call centers

00:59:13,210 --> 00:59:17,349
the international carrier networks in

00:59:15,730 --> 00:59:19,119
fact there's even an entire country

00:59:17,349 --> 00:59:21,520
those communications infrastructure runs

00:59:19,119 --> 00:59:23,650
on esters the gym has always been about

00:59:21,520 --> 00:59:25,359
creating technology that expands

00:59:23,650 --> 00:59:27,520
communications capabilities in ways that

00:59:25,359 --> 00:59:28,720
we could never have imagined and that's

00:59:27,520 --> 00:59:31,119
part of what's game-changing about

00:59:28,720 --> 00:59:33,820
Digium today we're doing it again this

00:59:31,119 --> 00:59:35,920
time by introducing a new family of HD

00:59:33,820 --> 00:59:38,020
IP phones that extends control of the

00:59:35,920 --> 00:59:39,790
user all the way to the desktop the

00:59:38,020 --> 00:59:41,500
launch of these new products represents

00:59:39,790 --> 00:59:43,599
the next phase indigenous history of

00:59:41,500 --> 00:59:46,000
innovation these are the first and only

00:59:43,599 --> 00:59:47,710
IP phones designed to fully leverage the

00:59:46,000 --> 00:59:49,240
power of estrus when we first discussed

00:59:47,710 --> 00:59:51,280
our expectations for building a family

00:59:49,240 --> 00:59:53,440
of phones for use with asterisk our

00:59:51,280 --> 00:59:55,180
requirements were pretty simple we asked

00:59:53,440 --> 00:59:56,830
the team to build the phones such that

00:59:55,180 --> 00:59:59,020
they were easy to install integrate

00:59:56,830 --> 01:00:00,849
provision and use I think you'll soon

00:59:59,020 --> 01:00:03,430
agree our engineers have delivered on

01:00:00,849 --> 01:00:05,050
that goal user feedback is validating

01:00:03,430 --> 01:00:07,180
that when it comes to operation with

01:00:05,050 --> 01:00:09,580
astro space systems including our own

01:00:07,180 --> 01:00:12,160
Switchvox based product these are the

01:00:09,580 --> 01:00:13,480
easiest to use best integrated most

01:00:12,160 --> 01:00:16,060
interoperable products on the market

01:00:13,480 --> 01:00:18,060
today the digitally phones will

01:00:16,060 --> 01:00:20,109
initially include three IP des hommes

01:00:18,060 --> 01:00:22,060
uniquely designed to complement any

01:00:20,109 --> 01:00:23,920
asterisk or switch box based solution

01:00:22,060 --> 01:00:26,589
these phones are different for a number

01:00:23,920 --> 01:00:29,230
of reasons first there is clue sively

01:00:26,589 --> 01:00:30,670
designed for use with esters secondly

01:00:29,230 --> 01:00:32,280
we've made it really easy to

01:00:30,670 --> 01:00:34,690
autodiscover and provision the phones

01:00:32,280 --> 01:00:36,369
next we've made it easy for the phones

01:00:34,690 --> 01:00:38,080
to access information inside of

01:00:36,369 --> 01:00:39,280
asterisks allowing tight coupling

01:00:38,080 --> 01:00:42,100
between an application

01:00:39,280 --> 01:00:44,440
and the phone additionally we've created

01:00:42,100 --> 01:00:46,570
an applications engine that allows users

01:00:44,440 --> 01:00:49,810
and developers to create and run their

01:00:46,570 --> 01:00:51,580
own apps on the phone and finally we've

01:00:49,810 --> 01:00:53,530
done all of this at a very compelling

01:00:51,580 --> 01:00:55,210
price point at Digium we're always

01:00:53,530 --> 01:00:57,310
thinking of ways to give our customers

01:00:55,210 --> 01:00:59,830
the best value in business phone systems

01:00:57,310 --> 01:01:01,540
and also give them the power to create

01:00:59,830 --> 01:01:03,580
their own solutions or eating

01:01:01,540 --> 01:01:05,290
communications challenge will continue

01:01:03,580 --> 01:01:06,730
to push the boundaries not only to make

01:01:05,290 --> 01:01:08,770
Astra's cooler faster and more

01:01:06,730 --> 01:01:10,390
technologically feature-rich but to make

01:01:08,770 --> 01:01:12,880
asterisk and what communications even

01:01:10,390 --> 01:01:16,590
easier and together we'll change the way

01:01:12,880 --> 01:01:16,590

YouTube URL: https://www.youtube.com/watch?v=IZeQquD1rwc


