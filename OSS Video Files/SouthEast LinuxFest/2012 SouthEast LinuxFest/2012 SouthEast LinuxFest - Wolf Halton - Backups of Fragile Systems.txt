Title: 2012 SouthEast LinuxFest - Wolf Halton - Backups of Fragile Systems
Publication date: 2013-04-04
Playlist: 2012 SouthEast LinuxFest
Description: 
	2012 SouthEast LinuxFest
Wolf Halton
Backups of Fragile Systems
Captions: 
	00:00:00,000 --> 00:00:05,279
the following presentation was recorded

00:00:02,490 --> 00:00:08,040
the 2012 southeast linux fest in

00:00:05,279 --> 00:00:10,410
charlotte north carolina it is licensed

00:00:08,040 --> 00:00:12,090
under a creative commons license for

00:00:10,410 --> 00:00:16,859
more information about the southeast

00:00:12,090 --> 00:00:19,230
linux fest visit www.lend expense org

00:00:16,859 --> 00:00:21,320
the southeast linux fest would like to

00:00:19,230 --> 00:00:23,369
thank the following diamond sponsors in

00:00:21,320 --> 00:00:28,380
2012 for helping make these videos

00:00:23,369 --> 00:00:33,750
possible paltan I'm network admin for a

00:00:28,380 --> 00:00:36,480
library Club basically a buying club and

00:00:33,750 --> 00:00:39,930
I do software service for them I

00:00:36,480 --> 00:00:45,480
inherited this little problem which led

00:00:39,930 --> 00:00:47,489
to what we're talking about here used to

00:00:45,480 --> 00:00:57,300
teach class so I'm not comfortable if I

00:00:47,489 --> 00:01:01,969
don't have a blackboard so the get it to

00:00:57,300 --> 00:01:06,740
behave itself so here's the problem i

00:01:01,969 --> 00:01:11,100
inherited a customer's two systems on

00:01:06,740 --> 00:01:16,530
somebody else's network i was given a

00:01:11,100 --> 00:01:19,950
pseudo wow I was given pseudo for the

00:01:16,530 --> 00:01:21,990
two boxes but I wasn't given a root

00:01:19,950 --> 00:01:25,020
password because they belong to somebody

00:01:21,990 --> 00:01:27,960
else yet again oh great okay that's

00:01:25,020 --> 00:01:29,460
reasonable you can y'all use a boon to

00:01:27,960 --> 00:01:31,049
you could do that with pseudo right

00:01:29,460 --> 00:01:35,579
don't even need to know the root

00:01:31,049 --> 00:01:40,110
password the problem is that this these

00:01:35,579 --> 00:01:42,150
two boxes had a bunch of custom software

00:01:40,110 --> 00:01:44,579
on it and then one piece of software

00:01:42,150 --> 00:01:50,159
they had on it was is called D space

00:01:44,579 --> 00:01:54,000
which is a which is a digital repository

00:01:50,159 --> 00:01:56,399
and so if you go to internet archives

00:01:54,000 --> 00:01:58,939
y'all been to internet archives the

00:01:56,399 --> 00:02:02,189
wayback machine they also do digital

00:01:58,939 --> 00:02:05,729
repositories for libraries and cities

00:02:02,189 --> 00:02:08,789
and who knows what so the pictures of

00:02:05,729 --> 00:02:11,569
your great-grandparents in that little

00:02:08,789 --> 00:02:15,999
city in Maryland or where

00:02:11,569 --> 00:02:19,689
or they may have a picture of mislabeled

00:02:15,999 --> 00:02:22,310
so you won't find it but it's there

00:02:19,689 --> 00:02:23,870
they'll be labeled after the newspapers

00:02:22,310 --> 00:02:25,730
or whatever they're connected to so this

00:02:23,870 --> 00:02:28,150
is a great idea for all this old stuff

00:02:25,730 --> 00:02:30,709
you would never get if you never

00:02:28,150 --> 00:02:32,650
actually went to that little library in

00:02:30,709 --> 00:02:37,400
the town where you grew up who were your

00:02:32,650 --> 00:02:39,019
grandparents grew up so I get these

00:02:37,400 --> 00:02:41,120
boxes and all this sounded great those

00:02:39,019 --> 00:02:43,609
customs custom software that i do not

00:02:41,120 --> 00:02:49,849
have documentation for anyone else had

00:02:43,609 --> 00:02:51,379
that experience fun isn't it I wonder

00:02:49,849 --> 00:02:54,620
what this does don't press that button

00:02:51,379 --> 00:02:56,870
right and the software didn't always

00:02:54,620 --> 00:02:59,299
work the software honest on the second

00:02:56,870 --> 00:03:02,590
system which was mostly customized

00:02:59,299 --> 00:03:04,969
didn't work so it's we had another guy

00:03:02,590 --> 00:03:07,639
trying to figure out what what it was

00:03:04,969 --> 00:03:08,959
doing and we discovered that the

00:03:07,639 --> 00:03:10,879
customer thought that they had been

00:03:08,959 --> 00:03:13,760
getting back ups for the last X number

00:03:10,879 --> 00:03:18,970
of years from the previous support

00:03:13,760 --> 00:03:22,489
people which turned out to be guess what

00:03:18,970 --> 00:03:26,659
you're good you're good it was exactly

00:03:22,489 --> 00:03:28,909
right it was terrible the there was no

00:03:26,659 --> 00:03:32,150
backup there was no evidence of backup

00:03:28,909 --> 00:03:34,720
and the systems were Fedora 7 which were

00:03:32,150 --> 00:03:39,079
when I got them two years out of date

00:03:34,720 --> 00:03:45,049
past end of life could not update could

00:03:39,079 --> 00:03:49,909
not add anything now that left me with a

00:03:45,049 --> 00:03:52,729
little bit of a problem to to work with

00:03:49,909 --> 00:03:54,500
it because I want to do backups know

00:03:52,729 --> 00:03:57,229
you've seen some backup programs right

00:03:54,500 --> 00:04:00,139
you've seen bakula and Amanda anyone

00:03:57,229 --> 00:04:02,000
else seeing others what do you have to

00:04:00,139 --> 00:04:05,209
do with those you have to install them

00:04:02,000 --> 00:04:08,680
they have dependencies that our main it

00:04:05,209 --> 00:04:12,639
may or may not be on those machines so I

00:04:08,680 --> 00:04:12,639
couldn't use what they had

00:04:16,739 --> 00:04:22,180
so all I had to do was create a

00:04:19,540 --> 00:04:25,240
recoverable condition because they were

00:04:22,180 --> 00:04:26,980
concerned that what if one of the

00:04:25,240 --> 00:04:30,270
systems it actually dies because they

00:04:26,980 --> 00:04:32,800
are old and they could just die and

00:04:30,270 --> 00:04:36,070
these old systems I couldn't do much

00:04:32,800 --> 00:04:37,780
with them except that I could discover

00:04:36,070 --> 00:04:41,370
that they were full of unpurchased logs

00:04:37,780 --> 00:04:44,860
which meant the hard drives were full

00:04:41,370 --> 00:04:48,450
almost entirely full when I got it it

00:04:44,860 --> 00:04:50,830
was like a ticking time bomb or you know

00:04:48,450 --> 00:04:59,310
you got two flat tires and you're headed

00:04:50,830 --> 00:05:02,919
for a curve one drive was 41 120 full of

00:04:59,310 --> 00:05:08,919
100 k log files how long it takes to

00:05:02,919 --> 00:05:14,080
fill up a 128 gig drive with 100 k log

00:05:08,919 --> 00:05:17,260
files so I had to use only the software

00:05:14,080 --> 00:05:21,070
that was on the boxes I had to find a

00:05:17,260 --> 00:05:23,260
way to guess what were the right files

00:05:21,070 --> 00:05:25,450
to back up you may not have thought

00:05:23,260 --> 00:05:28,450
about this but doing a backup of the

00:05:25,450 --> 00:05:31,510
whole system is very wasteful yeah you

00:05:28,450 --> 00:05:34,000
can you can do that but you don't need

00:05:31,510 --> 00:05:36,850
it all and you may not need even half of

00:05:34,000 --> 00:05:38,979
it so I had to figure out what software

00:05:36,850 --> 00:05:42,820
was in use and where the software puts

00:05:38,979 --> 00:05:46,750
stuff this is this is a challenge

00:05:42,820 --> 00:05:48,250
because for most people me included I

00:05:46,750 --> 00:05:52,350
don't really want to know where all

00:05:48,250 --> 00:05:54,820
those pieces are you know if you have a

00:05:52,350 --> 00:05:57,789
standard Linux system set up in a

00:05:54,820 --> 00:06:00,220
standard way most of the software is

00:05:57,789 --> 00:06:02,979
going to follow the POSIX file

00:06:00,220 --> 00:06:04,330
convention and that turns out to be your

00:06:02,979 --> 00:06:08,080
friend because then you start looking

00:06:04,330 --> 00:06:10,960
for okay where are the actual program

00:06:08,080 --> 00:06:14,080
files for these programs once you find

00:06:10,960 --> 00:06:15,820
out what they are and if you if they're

00:06:14,080 --> 00:06:18,180
set up in a sort of a POSIX way they'll

00:06:15,820 --> 00:06:21,060
be where you expect them to be

00:06:18,180 --> 00:06:24,270
and that was in fact helpful so I did

00:06:21,060 --> 00:06:27,740
did manage to audit them and found out

00:06:24,270 --> 00:06:30,720
that this is basically what was on them

00:06:27,740 --> 00:06:36,810
versions of all this stuff that this is

00:06:30,720 --> 00:06:38,699
that post postgresql 82 which in this

00:06:36,810 --> 00:06:42,810
case was it put in a different place

00:06:38,699 --> 00:06:49,229
than the new ones are new a new ones end

00:06:42,810 --> 00:06:52,220
up in / VAR / lib / postgresql you know

00:06:49,229 --> 00:06:57,240
this old one was in something called

00:06:52,220 --> 00:07:01,490
psql and so I couldn't find it in by

00:06:57,240 --> 00:07:01,490
looking for the standard folder

00:07:01,610 --> 00:07:10,830
peculiarities I don't know a lot about

00:07:05,599 --> 00:07:13,830
Java and aunt except installed the newer

00:07:10,830 --> 00:07:15,389
versions of D space and and it was a

00:07:13,830 --> 00:07:17,729
bear to install so I didn't want to

00:07:15,389 --> 00:07:20,789
imagine how interesting it would be to

00:07:17,729 --> 00:07:26,460
install or to recover that that old

00:07:20,789 --> 00:07:29,580
version so what do you have on a system

00:07:26,460 --> 00:07:34,800
what do you have on every system you've

00:07:29,580 --> 00:07:36,810
got thar you've got ssh server how do

00:07:34,800 --> 00:07:39,360
you know well then you just pull into it

00:07:36,810 --> 00:07:43,349
if you just shelled into it it has sha

00:07:39,360 --> 00:07:47,220
ssh server and most of them have client

00:07:43,349 --> 00:07:51,090
your desktop has client most servers

00:07:47,220 --> 00:07:55,320
like hardware servers have ssh server so

00:07:51,090 --> 00:07:59,550
thank goodness for that so when you're

00:07:55,320 --> 00:08:02,190
if you're working with because on my

00:07:59,550 --> 00:08:06,000
server too i was running postgresql I

00:08:02,190 --> 00:08:08,370
could use PG dump all PG dump all just

00:08:06,000 --> 00:08:11,310
takes everything all of the details all

00:08:08,370 --> 00:08:13,530
of the users the schemas the tables all

00:08:11,310 --> 00:08:19,320
the databases and gives you a

00:08:13,530 --> 00:08:22,039
recoverable package so as I'm running

00:08:19,320 --> 00:08:24,340
those backups running that back up

00:08:22,039 --> 00:08:27,940
essentially once a day

00:08:24,340 --> 00:08:30,669
once I found I had it and with tar you

00:08:27,940 --> 00:08:34,659
can say well what do I need to back up I

00:08:30,669 --> 00:08:36,339
need to back up that pgsql the folder

00:08:34,659 --> 00:08:40,180
you know the postgres folder I need to

00:08:36,339 --> 00:08:43,539
back up all of those programs all of

00:08:40,180 --> 00:08:47,500
those program folders because they may

00:08:43,539 --> 00:08:48,940
have customized information in there

00:08:47,500 --> 00:08:55,660
where else do they have customized

00:08:48,940 --> 00:08:59,050
information anyone know sometimes in

00:08:55,660 --> 00:09:03,490
route yes exactly sometimes in the etsy

00:08:59,050 --> 00:09:06,070
folder and sometimes in the home folders

00:09:03,490 --> 00:09:10,089
depending on how the developers and

00:09:06,070 --> 00:09:12,160
administrators dealt with it so in a

00:09:10,089 --> 00:09:14,110
general I was trying to build a general

00:09:12,160 --> 00:09:17,260
algorithm for how what I'm going to back

00:09:14,110 --> 00:09:23,080
up so it ended up being essentially home

00:09:17,260 --> 00:09:25,180
folders rude etsy opt because some

00:09:23,080 --> 00:09:29,279
programs are in opt things that are

00:09:25,180 --> 00:09:31,839
installed not by the system repos if

00:09:29,279 --> 00:09:35,770
you're installing as if you're a system

00:09:31,839 --> 00:09:37,690
repo into class USR slash bin you may

00:09:35,770 --> 00:09:40,540
have problems with that I'm not saying

00:09:37,690 --> 00:09:43,089
you will guaranteed but if you do the

00:09:40,540 --> 00:09:45,970
updates it's in a place where it might

00:09:43,089 --> 00:09:47,920
get overwritten by something else and if

00:09:45,970 --> 00:09:52,180
you're having if you have a print for

00:09:47,920 --> 00:09:53,589
instance this D space you're not very

00:09:52,180 --> 00:09:56,050
likely to get that overwritten by

00:09:53,589 --> 00:09:59,220
something else one would hope but it was

00:09:56,050 --> 00:09:59,220
still out of harm's way

00:10:02,560 --> 00:10:09,620
so since I had two machines and only two

00:10:05,420 --> 00:10:17,180
machines I did not have backup storage

00:10:09,620 --> 00:10:19,069
for the system so you get the I have to

00:10:17,180 --> 00:10:22,250
save from one machine to the other

00:10:19,069 --> 00:10:26,709
machine and it worked out that if I if

00:10:22,250 --> 00:10:33,170
this week I delete the old remote

00:10:26,709 --> 00:10:38,720
tarball push across and the new the new

00:10:33,170 --> 00:10:41,029
remote tarball run that system and then

00:10:38,720 --> 00:10:43,880
make this week's one we end up with

00:10:41,029 --> 00:10:48,199
three weeks worth one on the old one

00:10:43,880 --> 00:10:51,100
last week's on the on the local machine

00:10:48,199 --> 00:10:55,310
and this week's on the local machine

00:10:51,100 --> 00:10:57,440
which worked ok as long as I absolutely

00:10:55,310 --> 00:10:59,060
purged the oldest one from that 40 gig

00:10:57,440 --> 00:11:06,410
hard drive because I didn't have space

00:10:59,060 --> 00:11:08,899
to have to so the question the question

00:11:06,410 --> 00:11:13,420
your manager would ask you to is it

00:11:08,899 --> 00:11:15,709
recoverable when you take antara file it

00:11:13,420 --> 00:11:20,000
compresses that file but it doesn't

00:11:15,709 --> 00:11:25,339
change anything and so if you compress /

00:11:20,000 --> 00:11:28,370
VAR / p pgsql what you get in that tar

00:11:25,339 --> 00:11:29,930
file is the whole file structure but

00:11:28,370 --> 00:11:34,730
nothing else you don't get all the other

00:11:29,930 --> 00:11:37,399
things under / bar / lib right you'll

00:11:34,730 --> 00:11:48,939
just get that piece so if you're saving

00:11:37,399 --> 00:11:53,420
/ bar / libs / pgsql and / VAR / www

00:11:48,939 --> 00:11:54,680
because these are web apps and it's very

00:11:53,420 --> 00:11:58,630
likely you're going to have some web

00:11:54,680 --> 00:11:58,630
stuff going on too so

00:12:00,240 --> 00:12:17,100
oh good Wow so the first thing is do it

00:12:15,000 --> 00:12:19,520
do this back up and make sure that you

00:12:17,100 --> 00:12:24,240
can then recover that all the files I

00:12:19,520 --> 00:12:28,560
have no development machine to test this

00:12:24,240 --> 00:12:30,089
on okay I can't test it on a development

00:12:28,560 --> 00:12:32,450
machine but I can look at the raw data

00:12:30,089 --> 00:12:45,480
and make sure that it looks the same

00:12:32,450 --> 00:12:49,140
like there's a heavy downpour and you

00:12:45,480 --> 00:12:50,760
can also diff the files okay you know

00:12:49,140 --> 00:12:52,560
I'm talking about on the command line

00:12:50,760 --> 00:12:55,649
you run the command diff and then two

00:12:52,560 --> 00:12:57,000
different files here or even folders or

00:12:55,649 --> 00:13:00,420
directories and they'll tell you what's

00:12:57,000 --> 00:13:05,459
different as like was a surprisingly

00:13:00,420 --> 00:13:11,430
helpful tool so we ended up with the

00:13:05,459 --> 00:13:14,399
idea that a weekly data dump or a weekly

00:13:11,430 --> 00:13:19,230
configuration file dump sorry and the

00:13:14,399 --> 00:13:20,970
data files themselves with with digital

00:13:19,230 --> 00:13:26,510
preservation there's a lot of things

00:13:20,970 --> 00:13:29,579
that are just basically files JPEGs and

00:13:26,510 --> 00:13:31,860
stuff that doesn't change just because

00:13:29,579 --> 00:13:33,240
someone looked at it it's just a file so

00:13:31,860 --> 00:13:37,620
we didn't think that that needed to be

00:13:33,240 --> 00:13:42,680
updated every day but we did update the

00:13:37,620 --> 00:13:45,029
database dump every day and so I had

00:13:42,680 --> 00:13:48,060
seven copies of the database dump

00:13:45,029 --> 00:13:51,529
sitting there inside the database folder

00:13:48,060 --> 00:13:55,160
and when it was time to do the main

00:13:51,529 --> 00:14:01,350
backup push them to the backup folder

00:13:55,160 --> 00:14:02,880
okay and got that to work this didn't

00:14:01,350 --> 00:14:04,800
take too long but I had to test it on

00:14:02,880 --> 00:14:06,440
other machines because all of the stuff

00:14:04,800 --> 00:14:09,660
on these machines was essentially

00:14:06,440 --> 00:14:11,310
irreplaceable and so I didn't even want

00:14:09,660 --> 00:14:14,600
to run tirean it until I was sure I

00:14:11,310 --> 00:14:14,600
wasn't going to get any changes

00:14:15,179 --> 00:14:22,839
okay so at this point OCD of course

00:14:19,199 --> 00:14:26,529
raises its ugly head maybe not that head

00:14:22,839 --> 00:14:32,369
but it's some other other ugly head how

00:14:26,529 --> 00:14:36,309
many backups how many backups do you run

00:14:32,369 --> 00:14:39,059
how many backups do you keep because

00:14:36,309 --> 00:14:42,519
once I had it that it was all working I

00:14:39,059 --> 00:14:44,679
could have pushed off board and saved

00:14:42,519 --> 00:14:47,439
backups other places I tested this out

00:14:44,679 --> 00:14:50,199
it did work but how many how deep are

00:14:47,439 --> 00:14:56,170
you going to go into that hole I ended

00:14:50,199 --> 00:14:57,639
up only one more level it's a a lot of

00:14:56,170 --> 00:14:59,499
it comes down to how important your

00:14:57,639 --> 00:15:04,269
management thinks it is to hold the

00:14:59,499 --> 00:15:06,610
stuff and this may not be true as in a

00:15:04,269 --> 00:15:08,259
technical sense because if you've got a

00:15:06,610 --> 00:15:11,319
good copy of it already you don't need

00:15:08,259 --> 00:15:15,519
another copy of that copy but sometimes

00:15:11,319 --> 00:15:18,850
they just want that anyway so there's

00:15:15,519 --> 00:15:22,569
well my all my questions that we pretty

00:15:18,850 --> 00:15:24,459
much got answered about halfway through

00:15:22,569 --> 00:15:26,199
the second month discovered that one of

00:15:24,459 --> 00:15:28,990
the directories we needed to be backing

00:15:26,199 --> 00:15:32,829
up we weren't so that had to be added to

00:15:28,990 --> 00:15:35,790
the backup concept and for every every

00:15:32,829 --> 00:15:37,929
backup before that it hadn't been there

00:15:35,790 --> 00:15:39,670
the only good thing that we can say

00:15:37,929 --> 00:15:42,459
about backup is you don't need it every

00:15:39,670 --> 00:15:48,519
day and it's not you're not going to

00:15:42,459 --> 00:15:49,779
have a disaster every day right this is

00:15:48,519 --> 00:15:52,149
the only way most people's home

00:15:49,779 --> 00:15:54,129
computers are to have anything on them

00:15:52,149 --> 00:15:57,939
of any value at all because we don't

00:15:54,129 --> 00:16:00,040
need them every day but all of this

00:15:57,939 --> 00:16:02,079
ended up becoming the project that I've

00:16:00,040 --> 00:16:04,869
put together that the link on the front

00:16:02,079 --> 00:16:07,179
page was no because what if they wanted

00:16:04,869 --> 00:16:09,730
to update to a more current version of

00:16:07,179 --> 00:16:11,139
fedora there's a lot of different things

00:16:09,730 --> 00:16:13,559
that would have to be adjusted and I

00:16:11,139 --> 00:16:18,429
wasn't sure how that was going to work

00:16:13,559 --> 00:16:19,749
but we ended up with what has worked out

00:16:18,429 --> 00:16:23,169
I've got this working now on a

00:16:19,749 --> 00:16:25,480
production network with its on 26

00:16:23,169 --> 00:16:26,950
machines right now and it's working

00:16:25,480 --> 00:16:30,010
properly

00:16:26,950 --> 00:16:34,570
no good lord willing and the creek don't

00:16:30,010 --> 00:16:36,640
rise it's working properly today and you

00:16:34,570 --> 00:16:39,490
can read a file anywhere you have a

00:16:36,640 --> 00:16:42,430
command line you can read a file on

00:16:39,490 --> 00:16:46,300
a window system if you have if you have

00:16:42,430 --> 00:16:49,780
the 7z or something else that will open

00:16:46,300 --> 00:16:53,320
a tar.gz file you can do that with any

00:16:49,780 --> 00:16:55,840
system this is this made the librarians

00:16:53,320 --> 00:16:59,500
happy as if you're in if you're in the

00:16:55,840 --> 00:17:01,840
world of data preservation the idea of

00:16:59,500 --> 00:17:04,959
having a format that you can no longer

00:17:01,840 --> 00:17:07,150
read after X amount of time it'd be like

00:17:04,959 --> 00:17:10,570
opening a book and not being able to

00:17:07,150 --> 00:17:12,820
read the language in it anymore that

00:17:10,570 --> 00:17:16,510
does happen but it happens over the

00:17:12,820 --> 00:17:20,230
course of several hundred years digital

00:17:16,510 --> 00:17:23,610
formats tend to be outdated over the

00:17:20,230 --> 00:17:34,650
course of six or seven years ten years

00:17:23,610 --> 00:17:34,650
but thar has had remarkable longevity so

00:17:35,620 --> 00:17:40,580
there's no question so everybody is

00:17:38,510 --> 00:17:42,740
asleep right anyone not asleep please

00:17:40,580 --> 00:17:48,950
raise their hand okay good the three or

00:17:42,740 --> 00:17:50,210
four but once I just once I did this and

00:17:48,950 --> 00:17:51,860
said why how to open this up to the

00:17:50,210 --> 00:17:53,660
world because it would be useful to

00:17:51,860 --> 00:17:56,059
people who have similar situations you

00:17:53,660 --> 00:17:58,580
come up on a machine that's very very

00:17:56,059 --> 00:18:01,460
old that you don't have much space on

00:17:58,580 --> 00:18:03,500
that you don't have any wiggle room on

00:18:01,460 --> 00:18:05,210
software this would be useful so I

00:18:03,500 --> 00:18:08,270
started thinking well how we're going to

00:18:05,210 --> 00:18:10,820
make it useful to the world and the

00:18:08,270 --> 00:18:12,620
first thing was my for my original

00:18:10,820 --> 00:18:16,580
design was designed around that one set

00:18:12,620 --> 00:18:20,990
of systems the design on those systems

00:18:16,580 --> 00:18:24,230
was a single partition if you installed

00:18:20,990 --> 00:18:27,550
a debian system using their assistance

00:18:24,230 --> 00:18:33,140
now they're they're guided installation

00:18:27,550 --> 00:18:35,630
they would set up a four or five

00:18:33,140 --> 00:18:41,350
different partitions and your root

00:18:35,630 --> 00:18:44,990
partition on the hard drive would be 385

00:18:41,350 --> 00:18:48,650
Meg so if you're putting your backup

00:18:44,990 --> 00:18:50,960
files into the root partition that would

00:18:48,650 --> 00:18:52,760
be a problem right unless you've got

00:18:50,960 --> 00:18:55,610
nothing going on if it's an empty

00:18:52,760 --> 00:18:57,410
machine yeah maybe it'll work but all

00:18:55,610 --> 00:19:00,620
you have to do is throw a couple of a

00:18:57,410 --> 00:19:02,120
couple of files in anywhere and then

00:19:00,620 --> 00:19:04,940
it's not going to work so that in the

00:19:02,120 --> 00:19:06,679
system needs to be made more more POSIX

00:19:04,940 --> 00:19:10,870
compliant and was that mean I need to

00:19:06,679 --> 00:19:17,240
put my I need to put those files into

00:19:10,870 --> 00:19:19,070
slash var slash something right so that

00:19:17,240 --> 00:19:22,100
they're in a place you'd expect to find

00:19:19,070 --> 00:19:23,420
them none of this matters to beginners

00:19:22,100 --> 00:19:25,160
but once you've got into it a little bit

00:19:23,420 --> 00:19:26,390
you start to realize that if you're

00:19:25,160 --> 00:19:30,080
looking for something that's not where

00:19:26,390 --> 00:19:31,370
you expect it you're going to be in a

00:19:30,080 --> 00:19:32,270
lot of trouble you're at least you're

00:19:31,370 --> 00:19:36,520
going to feel like you're in a lot of

00:19:32,270 --> 00:19:39,559
trouble you can't really package a

00:19:36,520 --> 00:19:42,830
program that's not at least somewhat

00:19:39,559 --> 00:19:45,100
POSIX compliant so if I wanted to give

00:19:42,830 --> 00:19:47,170
you to you in your a boon to system

00:19:45,100 --> 00:19:50,380
can't do it

00:19:47,170 --> 00:19:54,920
you know it's just not possible so

00:19:50,380 --> 00:19:57,950
that's got to be done I want to automate

00:19:54,920 --> 00:19:59,690
installation if possible because this is

00:19:57,950 --> 00:20:03,050
the sort of thing that with a new system

00:19:59,690 --> 00:20:06,020
you can automate in an old system you

00:20:03,050 --> 00:20:09,320
can so you'd have to have sort of a case

00:20:06,020 --> 00:20:11,150
structure of the program to make sure

00:20:09,320 --> 00:20:13,190
that okay if this system so old it

00:20:11,150 --> 00:20:15,170
doesn't have repositories anymore it

00:20:13,190 --> 00:20:19,100
will not continue to attempt to install

00:20:15,170 --> 00:20:20,809
something that doesn't exist fair enough

00:20:19,100 --> 00:20:22,850
right but if it's brand new and it

00:20:20,809 --> 00:20:45,429
doesn't have our sink like brand new

00:20:22,850 --> 00:20:45,429
debian squeeze yes sir oh huge Lee

00:20:49,669 --> 00:20:56,240
is just waiting to get so why not just

00:21:04,880 --> 00:21:13,919
district rail which has right right

00:21:09,929 --> 00:21:16,679
source nos which has a 10-year cycle has

00:21:13,919 --> 00:21:19,730
the same cycle that's an excellent plan

00:21:16,679 --> 00:21:23,429
this is in fact what I did attempt and

00:21:19,730 --> 00:21:27,240
they were so scared that they're custom

00:21:23,429 --> 00:21:30,059
software would break that there was no

00:21:27,240 --> 00:21:32,490
way there was no going there and there's

00:21:30,059 --> 00:21:35,790
a lot of old systems with custom

00:21:32,490 --> 00:21:37,740
software this since the you can't you

00:21:35,790 --> 00:21:39,720
can't always figure out what they did in

00:21:37,740 --> 00:21:43,320
the first place you're going to be stuck

00:21:39,720 --> 00:21:45,720
with that every all these old place old

00:21:43,320 --> 00:21:48,120
things now that one thing I would I like

00:21:45,720 --> 00:21:51,030
to try to do with old systems is get

00:21:48,120 --> 00:21:54,660
people onto newer less customized

00:21:51,030 --> 00:21:56,520
software solutions as well as a lot

00:21:54,660 --> 00:21:58,980
easier if it's not customized because

00:21:56,520 --> 00:22:01,380
then you can just do upgrades but by the

00:21:58,980 --> 00:22:04,110
time I got it it was already past

00:22:01,380 --> 00:22:08,160
upgrading because fedora eight was also

00:22:04,110 --> 00:22:10,770
into life and so there's really nothing

00:22:08,160 --> 00:22:13,410
I could do about that side of it except

00:22:10,770 --> 00:22:22,280
a total rebuild and you're right that

00:22:13,410 --> 00:22:25,169
would been great so where am I an the

00:22:22,280 --> 00:22:28,549
this the next line about purging stale

00:22:25,169 --> 00:22:32,750
tar balls on freenas because on a

00:22:28,549 --> 00:22:35,669
production system i was using a storage

00:22:32,750 --> 00:22:42,350
solution network-attached storage

00:22:35,669 --> 00:22:47,760
storage with free now system and using

00:22:42,350 --> 00:22:50,940
ZFS now you all been heard about ZFS how

00:22:47,760 --> 00:22:53,929
cool it is how cool it can be guess what

00:22:50,940 --> 00:22:57,570
if you fill up a drive-in ZFS you can't

00:22:53,929 --> 00:23:00,499
delete anything I discovered that by

00:22:57,570 --> 00:23:03,299
filling up the drive-in ZFS

00:23:00,499 --> 00:23:09,870
yeah it's a production system luckily it

00:23:03,299 --> 00:23:11,999
was not a front line system but so you

00:23:09,870 --> 00:23:13,769
want to have it purged and and I have

00:23:11,999 --> 00:23:17,249
got that essentially done now that's the

00:23:13,769 --> 00:23:22,970
automatic purging is a fine files of

00:23:17,249 --> 00:23:24,960
this type older than and remove them I

00:23:22,970 --> 00:23:28,080
can show you the line if you're

00:23:24,960 --> 00:23:30,120
interested and it's it's useful and it's

00:23:28,080 --> 00:23:32,669
safe because it's not going to delete

00:23:30,120 --> 00:23:34,769
stuff that's too new you don't want to

00:23:32,669 --> 00:23:42,299
you don't want to have your regex be so

00:23:34,769 --> 00:23:43,649
free that it'll delete everything so one

00:23:42,299 --> 00:23:47,820
thing about that this system is that

00:23:43,649 --> 00:23:51,710
went are runs it kicks out messages

00:23:47,820 --> 00:23:55,970
ongoing messages that aren't very useful

00:23:51,710 --> 00:24:00,240
removing trailing slashes for instance

00:23:55,970 --> 00:24:03,090
yes and who cares right I don't know why

00:24:00,240 --> 00:24:04,830
it does that I'm sure there's people who

00:24:03,090 --> 00:24:07,860
could tell you why it does that I would

00:24:04,830 --> 00:24:11,879
just assume that it put that into dev no

00:24:07,860 --> 00:24:14,070
because it's useless information and

00:24:11,879 --> 00:24:15,600
then automating the restoration

00:24:14,070 --> 00:24:20,879
functionality the problem I have right

00:24:15,600 --> 00:24:25,830
now is that to restore you have to untie

00:24:20,879 --> 00:24:29,549
ur and our sink back in or shell it back

00:24:25,830 --> 00:24:31,799
in secure the secure FTP and that takes

00:24:29,549 --> 00:24:33,749
a lot of time you have to make sure your

00:24:31,799 --> 00:24:36,269
systems turned off your database is

00:24:33,749 --> 00:24:38,009
turned off and then you can you can our

00:24:36,269 --> 00:24:39,509
sink and all the pieces you need and

00:24:38,009 --> 00:24:41,249
then restart it and it'll work but

00:24:39,509 --> 00:24:43,379
that's it would be neat if you could

00:24:41,249 --> 00:24:46,200
just say i want the backup from two

00:24:43,379 --> 00:24:48,869
weeks ago bang and have it do all that

00:24:46,200 --> 00:24:54,640
on its own and what know any reason why

00:24:48,869 --> 00:24:57,610
that couldn't be done so

00:24:54,640 --> 00:24:59,710
it's a it's really rather a short

00:24:57,610 --> 00:25:02,710
program because I don't have it's it's a

00:24:59,710 --> 00:25:03,910
it's so much in progress that's thought

00:25:02,710 --> 00:25:12,270
I would just go ahead and show you the

00:25:03,910 --> 00:25:15,630
scripts who here does shell scripting

00:25:12,270 --> 00:25:20,200
who hears terrified of shell scripting

00:25:15,630 --> 00:25:21,250
okay good yeah it's it's just look scary

00:25:20,200 --> 00:25:24,190
because there's so many different things

00:25:21,250 --> 00:25:32,920
that can be done wrong but this is a

00:25:24,190 --> 00:25:35,910
very simple shell script the that's

00:25:32,920 --> 00:25:40,360
that's a redirect to a file name right

00:25:35,910 --> 00:25:43,630
and the this right here is a way to take

00:25:40,360 --> 00:25:46,300
the hostname and instead of just saying

00:25:43,630 --> 00:25:50,770
hostname it runs the program and brings

00:25:46,300 --> 00:25:54,220
you the hostname yes and so that one

00:25:50,770 --> 00:25:58,120
will say hostname PG dump all that makes

00:25:54,220 --> 00:26:02,050
a data dump every day and because this

00:25:58,120 --> 00:26:03,220
is anonymous it's just that I don't I

00:26:02,050 --> 00:26:04,870
didn't want to have these files have

00:26:03,220 --> 00:26:08,400
huge long names they still ended up

00:26:04,870 --> 00:26:12,190
pretty long then this is tarde

00:26:08,400 --> 00:26:16,890
compressed to a name hostname PG dump

00:26:12,190 --> 00:26:19,180
and date and all this structure here

00:26:16,890 --> 00:26:28,270
gives you a pretty nice date readable

00:26:19,180 --> 00:26:31,990
date and then you've used the fine

00:26:28,270 --> 00:26:35,110
command if you all use locate before you

00:26:31,990 --> 00:26:36,910
know I'm talking about as the cool

00:26:35,110 --> 00:26:43,330
command find is about eight hundred

00:26:36,910 --> 00:26:45,430
times stronger use find the autocheck

00:26:43,330 --> 00:26:48,160
find out those for those of you who

00:26:45,430 --> 00:26:50,350
haven't used it because it is it is a

00:26:48,160 --> 00:26:52,600
huge thing because you can you can

00:26:50,350 --> 00:26:54,820
search through recursive directories

00:26:52,600 --> 00:26:57,400
with find and find just what you're

00:26:54,820 --> 00:27:00,280
looking for you put in locate and in a

00:26:57,400 --> 00:27:02,620
short term in there and you'll find

00:27:00,280 --> 00:27:05,620
everything in the entire hard drive that

00:27:02,620 --> 00:27:07,600
says those those characters and it's not

00:27:05,620 --> 00:27:11,780
very useful

00:27:07,600 --> 00:27:14,480
well this is an entire postgresql dump

00:27:11,780 --> 00:27:16,940
script and when I was doing it

00:27:14,480 --> 00:27:19,550
originally on the boxes I just wrote out

00:27:16,940 --> 00:27:22,430
the scripts but since using these fancy

00:27:19,550 --> 00:27:30,860
naming techniques it was hard to

00:27:22,430 --> 00:27:35,000
remember so I made a script for it and

00:27:30,860 --> 00:27:37,820
what the next one does is essentially

00:27:35,000 --> 00:27:40,040
you set up here's your two backup

00:27:37,820 --> 00:27:41,810
directories as I told you in the wrong

00:27:40,040 --> 00:27:45,650
place you know that's going to just end

00:27:41,810 --> 00:27:50,300
up in the root directory as / whatever

00:27:45,650 --> 00:27:53,990
and I can't use that on about half my

00:27:50,300 --> 00:27:56,870
systems I have to adjust it and move it

00:27:53,990 --> 00:28:06,950
to some place else but for the old

00:27:56,870 --> 00:28:09,850
system it worked as these two directory

00:28:06,950 --> 00:28:13,370
names then become if those directories

00:28:09,850 --> 00:28:18,080
don't exist then you make them you

00:28:13,370 --> 00:28:21,260
create them and make them absolutely

00:28:18,080 --> 00:28:24,950
free for use is that a security problem

00:28:21,260 --> 00:28:26,390
yes slightly now any user on that anyone

00:28:24,950 --> 00:28:28,100
who could log in to that server could

00:28:26,390 --> 00:28:31,010
look at those backups could delete those

00:28:28,100 --> 00:28:39,500
backups but you know who can log into

00:28:31,010 --> 00:28:41,300
those servers just me these even these

00:28:39,500 --> 00:28:43,250
web servers you can't log into them you

00:28:41,300 --> 00:28:47,420
can't shell into unless you have that an

00:28:43,250 --> 00:28:53,050
account on them so this bit this then is

00:28:47,420 --> 00:29:00,760
it builds using a variable for hostname

00:28:53,050 --> 00:29:00,760
and and then getting getting rid of

00:29:01,270 --> 00:29:08,090
everything inside directory to directory

00:29:04,640 --> 00:29:11,420
to is where all the small the original

00:29:08,090 --> 00:29:12,860
tar files go but we want to get all of

00:29:11,420 --> 00:29:15,230
them outta there so that we can move on

00:29:12,860 --> 00:29:16,850
to the next step because you don't want

00:29:15,230 --> 00:29:18,190
to have two versions of the same thing

00:29:16,850 --> 00:29:21,009
even if they're

00:29:18,190 --> 00:29:22,899
have different dates on them then you

00:29:21,009 --> 00:29:25,000
just is going to make your backup grow

00:29:22,899 --> 00:29:28,870
bigger and bigger and bigger until your

00:29:25,000 --> 00:29:35,409
backup basically is taking up the whole

00:29:28,870 --> 00:29:39,159
hard drive then we get into those series

00:29:35,409 --> 00:29:43,659
of if it's there we wanted we want to

00:29:39,159 --> 00:29:45,490
run a dump on it like MySQL it wasn't on

00:29:43,659 --> 00:29:46,960
every machine and it isn't on every

00:29:45,490 --> 00:29:48,340
machine but if it's on your machine

00:29:46,960 --> 00:29:49,720
would be nice if it would do that

00:29:48,340 --> 00:29:52,330
automatically and you didn't have to

00:29:49,720 --> 00:30:00,639
search it out and run another script for

00:29:52,330 --> 00:30:11,399
it and that makes a dump of it and drops

00:30:00,639 --> 00:30:11,399
it into this into this tar.gz file the I

00:30:12,870 --> 00:30:22,750
know where I am if you've got a

00:30:17,860 --> 00:30:25,600
postgresql folder then you want to back

00:30:22,750 --> 00:30:29,710
that up but in this case because we're

00:30:25,600 --> 00:30:31,360
using a different dump system it's just

00:30:29,710 --> 00:30:34,779
going to grab the files out of that

00:30:31,360 --> 00:30:39,570
postgresql folder drag them into the

00:30:34,779 --> 00:30:39,570
backup file and tar them

00:30:42,070 --> 00:30:44,190
and

00:30:49,400 --> 00:30:53,090
now it just gets into some of this stuff

00:30:51,620 --> 00:31:01,210
is you're not going to see this on every

00:30:53,090 --> 00:31:06,230
machine open open ILS is a for evergreen

00:31:01,210 --> 00:31:10,730
cataloging system and I know know who

00:31:06,230 --> 00:31:12,650
here has that on their system so there's

00:31:10,730 --> 00:31:14,060
no point in having a check for it every

00:31:12,650 --> 00:31:16,390
time and do something with something

00:31:14,060 --> 00:31:26,030
that won't be there and the same with a

00:31:16,390 --> 00:31:28,190
postgresql stuff WWE files since the

00:31:26,030 --> 00:31:31,730
only thing that I've found in slash var

00:31:28,190 --> 00:31:34,820
that started with a w was the WWE web

00:31:31,730 --> 00:31:37,100
files that was enough is if it has web

00:31:34,820 --> 00:31:39,740
files in it we're going to make a

00:31:37,100 --> 00:31:42,920
directory a web directory to back them

00:31:39,740 --> 00:31:45,680
up and then there's stuff that you're

00:31:42,920 --> 00:31:48,770
not going to ask if because you know

00:31:45,680 --> 00:31:50,600
there's home folders you're not missing

00:31:48,770 --> 00:31:54,020
any of that so you'll always see a home

00:31:50,600 --> 00:31:56,090
folder and so we're going to just back

00:31:54,020 --> 00:31:58,820
those up right away we're going to tar

00:31:56,090 --> 00:32:02,180
those up and you're always going to have

00:31:58,820 --> 00:32:05,360
root so you're going to tar that up

00:32:02,180 --> 00:32:07,640
that's more POSIX stuff and then in the

00:32:05,360 --> 00:32:10,810
end all of those little tar files in one

00:32:07,640 --> 00:32:16,300
big file and dropped into folder one

00:32:10,810 --> 00:32:16,300
which is the parent of folder too and

00:32:16,960 --> 00:32:22,310
once you've done that now you may have

00:32:19,430 --> 00:32:24,980
two or three or five or who knows how

00:32:22,310 --> 00:32:28,970
many depending on what you're purging

00:32:24,980 --> 00:32:31,940
system is but if you have another of

00:32:28,970 --> 00:32:35,060
these huge tar files you want to get rid

00:32:31,940 --> 00:32:37,610
of it so get rid of anything older than

00:32:35,060 --> 00:32:42,680
four days which gets takes care of the

00:32:37,610 --> 00:32:45,020
seven day old stuff and the transfer is

00:32:42,680 --> 00:32:52,640
really simple in this case i just put

00:32:45,020 --> 00:32:56,150
example org the rsync AV from directory

00:32:52,640 --> 00:32:59,420
one of anything that says tar.gz send

00:32:56,150 --> 00:33:00,950
that to its folder this was done on my

00:32:59,420 --> 00:33:03,110
utility box

00:33:00,950 --> 00:33:04,760
and since I don't have internet here or

00:33:03,110 --> 00:33:10,490
I'd show you the utility box so i can

00:33:04,760 --> 00:33:21,139
get at it from the internet then put it

00:33:10,490 --> 00:33:28,190
into its up it's a freenas array and at

00:33:21,139 --> 00:33:31,120
that point any questions have i I'd say

00:33:28,190 --> 00:33:31,120
everyone still sleep now

00:33:37,200 --> 00:33:46,980
I do but not nearly as often the

00:33:43,919 --> 00:33:49,169
question was in addition to backup so

00:33:46,980 --> 00:33:51,240
this nature to do I have an image of the

00:33:49,169 --> 00:33:55,049
whole disk in case I got to back up from

00:33:51,240 --> 00:33:57,450
bare metal and answer as I do in this

00:33:55,049 --> 00:34:00,299
case I can't always guarantee i have

00:33:57,450 --> 00:34:05,880
that but in this case my networks run on

00:34:00,299 --> 00:34:11,190
a vmware exs I system so i can run very

00:34:05,880 --> 00:34:13,079
simple backups using that and it's a

00:34:11,190 --> 00:34:16,070
pretty good way to handle backups it's

00:34:13,079 --> 00:34:16,070
not perfect yes sir

00:34:31,950 --> 00:34:39,129
on the first original to did I did I

00:34:36,789 --> 00:34:42,879
worry about the backups before I did the

00:34:39,129 --> 00:34:45,519
images that's the question and yeah I

00:34:42,879 --> 00:34:48,819
couldn't image those and the person who

00:34:45,519 --> 00:34:51,819
owned the network they were on he

00:34:48,819 --> 00:34:53,559
wouldn't give me any help at all and I'm

00:34:51,819 --> 00:34:55,299
sure he was busy and there's lots of

00:34:53,559 --> 00:34:57,460
good reasons for all of that but I

00:34:55,299 --> 00:35:00,460
couldn't image them at all I was much

00:34:57,460 --> 00:35:02,499
more concerned that the systems were you

00:35:00,460 --> 00:35:05,559
know the tar was going to fail I've

00:35:02,499 --> 00:35:10,619
never seen tar fail before but I guess

00:35:05,559 --> 00:35:10,619
it could be done yes sir

00:35:37,100 --> 00:35:43,110
directory and then copy the one in place

00:35:39,750 --> 00:35:54,630
so I run that every two hours so I get

00:35:43,110 --> 00:36:00,810
every two hours yeah that's nice way to

00:35:54,630 --> 00:36:03,960
put in it you got all kinds of time once

00:36:00,810 --> 00:36:08,130
a week you're gonna do that right yeah

00:36:03,960 --> 00:36:10,440
okay so if you are sink into into that

00:36:08,130 --> 00:36:24,420
our sink back up and you could also do a

00:36:10,440 --> 00:36:26,190
cron job for that yeah yeah that's

00:36:24,420 --> 00:36:29,810
that's a good system that's a good way

00:36:26,190 --> 00:36:32,810
to handle it with all those data files

00:36:29,810 --> 00:36:32,810
question

00:36:38,289 --> 00:36:43,749
that's kind of a funny thing i have a

00:36:41,029 --> 00:36:47,779
number of friends who do admin who are

00:36:43,749 --> 00:36:54,130
sinking rather than using any kind of

00:36:47,779 --> 00:36:54,130
fancy backup systems now it's simple

00:36:58,479 --> 00:37:02,589
right that's true

00:37:08,310 --> 00:37:16,440
yeah okay any other things

00:37:19,220 --> 00:37:28,369
okay well we're way ahead of schedule

00:37:25,700 --> 00:37:29,450
but that's it that's the thing when you

00:37:28,369 --> 00:37:40,790
got it when you got a good class

00:37:29,450 --> 00:37:45,410
everything moves too fast all right I'm

00:37:40,790 --> 00:37:47,060
glad I'm glad to hear that all right

00:37:45,410 --> 00:37:52,970
thank you very much for talking today

00:37:47,060 --> 00:37:55,099
I'm going to come around of all and

00:37:52,970 --> 00:37:57,530
before you run out don't forget there's

00:37:55,099 --> 00:37:59,090
a survey today if you pick it up from

00:37:57,530 --> 00:38:01,430
the registration desk fill it in put it

00:37:59,090 --> 00:38:05,720
in the box they will draw the surveys

00:38:01,430 --> 00:38:07,520
after the keynote speech tonight for the

00:38:05,720 --> 00:38:09,619
raffle and you can win prizes if you

00:38:07,520 --> 00:38:12,710
fill in a survey today there is another

00:38:09,619 --> 00:38:15,740
survey tomorrow different survey with a

00:38:12,710 --> 00:38:23,630
different raffle so go fill in a survey

00:38:15,740 --> 00:38:27,260
please software if you want to pull the

00:38:23,630 --> 00:38:32,089
software to look at it yourself and then

00:38:27,260 --> 00:38:37,190
that's where to go github.com / wolf 29

00:38:32,089 --> 00:38:39,619
/ get back and if you want to send me an

00:38:37,190 --> 00:38:42,619
email that's my email wolf dot Halton

00:38:39,619 --> 00:38:45,550
that lyrices org thank you all very much

00:38:42,619 --> 00:38:45,550
I appreciate you

00:39:21,200 --> 00:39:23,260
you

00:39:26,479 --> 00:39:31,559
when we created asterisk over a decade

00:39:29,190 --> 00:39:33,509
ago we could not have imagined that

00:39:31,559 --> 00:39:35,700
asterisk would not only become the most

00:39:33,509 --> 00:39:37,859
widely adopted open source communication

00:39:35,700 --> 00:39:39,869
software on the planet but that it would

00:39:37,859 --> 00:39:42,390
impact the entire industry in the way

00:39:39,869 --> 00:39:44,369
that it has today asterisk has found its

00:39:42,390 --> 00:39:47,009
way into more than 170 countries and

00:39:44,369 --> 00:39:48,960
virtually every fortune 1000 company the

00:39:47,009 --> 00:39:51,059
success of asterisk has enabled a

00:39:48,960 --> 00:39:52,469
transition of power from the hands of

00:39:51,059 --> 00:39:54,749
the traditional proprietary phone

00:39:52,469 --> 00:39:57,150
vendors into the hands of the users and

00:39:54,749 --> 00:39:59,069
administrators of phone systems using

00:39:57,150 --> 00:40:00,299
this power our customers have created

00:39:59,069 --> 00:40:02,249
all sorts of business changing

00:40:00,299 --> 00:40:04,109
applications from small office phone

00:40:02,249 --> 00:40:06,599
systems to mission-critical call centres

00:40:04,109 --> 00:40:08,219
the international carrier networks in

00:40:06,599 --> 00:40:09,989
fact there's even an entire country

00:40:08,219 --> 00:40:12,599
those communications infrastructure runs

00:40:09,989 --> 00:40:14,519
on esters the gym has always been about

00:40:12,599 --> 00:40:16,229
creating technology that expands

00:40:14,519 --> 00:40:18,420
communications capabilities in ways that

00:40:16,229 --> 00:40:19,589
we could never have imagined and that's

00:40:18,420 --> 00:40:22,349
part of what's game-changing about

00:40:19,589 --> 00:40:24,690
Digium today we're doing it again this

00:40:22,349 --> 00:40:26,789
time by introducing a new family of HD

00:40:24,690 --> 00:40:28,890
IP phones that extends control of the

00:40:26,789 --> 00:40:30,660
user all the way to the desktop the

00:40:28,890 --> 00:40:32,369
launch of these new products represents

00:40:30,660 --> 00:40:34,469
the next phase indigenous history of

00:40:32,369 --> 00:40:36,869
innovation these are the first and only

00:40:34,469 --> 00:40:38,579
IP phones designed to fully leverage the

00:40:36,869 --> 00:40:40,140
power of estrus when we first discussed

00:40:38,579 --> 00:40:42,180
our expectations for building a family

00:40:40,140 --> 00:40:44,309
of phones for use with asterisk our

00:40:42,180 --> 00:40:46,049
requirements were pretty simple we asked

00:40:44,309 --> 00:40:47,700
the team to build the phones such that

00:40:46,049 --> 00:40:49,890
they were easy to install integrate

00:40:47,700 --> 00:40:51,749
provision and use I think you'll soon

00:40:49,890 --> 00:40:54,299
agree our engineers have delivered on

00:40:51,749 --> 00:40:55,920
that goal user feedback is validating

00:40:54,299 --> 00:40:58,049
that when it comes to operation with

00:40:55,920 --> 00:41:00,479
astro space systems including our own

00:40:58,049 --> 00:41:03,059
Switchvox based product these are the

00:41:00,479 --> 00:41:04,349
easiest to use best integrated most

00:41:03,059 --> 00:41:06,930
interoperable products on the market

00:41:04,349 --> 00:41:08,930
today the digitally phones will

00:41:06,930 --> 00:41:10,979
initially include three IP des hommes

00:41:08,930 --> 00:41:12,930
uniquely designed to complement any

00:41:10,979 --> 00:41:14,789
asterisks or switch box based solution

00:41:12,930 --> 00:41:17,460
these phones are different for a number

00:41:14,789 --> 00:41:20,130
of reasons first there is clue sively

00:41:17,460 --> 00:41:21,539
designed for use with asterisks secondly

00:41:20,130 --> 00:41:23,150
we've made it really easy to

00:41:21,539 --> 00:41:25,559
autodiscover and provision the phones

00:41:23,150 --> 00:41:27,239
next we've made it easy for the phones

00:41:25,559 --> 00:41:29,170
to access information inside of

00:41:27,239 --> 00:41:31,200
asterisks allowing tight coupling

00:41:29,170 --> 00:41:33,160
between an application and the phone

00:41:31,200 --> 00:41:35,319
additionally we've created an

00:41:33,160 --> 00:41:37,450
applications engine that allows users

00:41:35,319 --> 00:41:40,690
and developers to create and run their

00:41:37,450 --> 00:41:42,460
own apps on the phone and finally we've

00:41:40,690 --> 00:41:44,410
done all of this at a very compelling

00:41:42,460 --> 00:41:46,089
price point at digium we're always

00:41:44,410 --> 00:41:48,190
thinking of ways to give our customers

00:41:46,089 --> 00:41:50,770
the best value in business phone systems

00:41:48,190 --> 00:41:52,299
and also give them the power to create

00:41:50,770 --> 00:41:54,460
their own solutions or any

00:41:52,299 --> 00:41:56,170
communications challenge will continue

00:41:54,460 --> 00:41:57,609
to push the boundaries not only to make

00:41:56,170 --> 00:41:59,619
Astra's cooler bastard more

00:41:57,609 --> 00:42:01,390
technologically feature-rich but to make

00:41:59,619 --> 00:42:03,940
asterisk and communications even easier

00:42:01,390 --> 00:42:07,440
and together we'll change the way the

00:42:03,940 --> 00:42:07,440
world communicates again

00:42:17,859 --> 00:42:24,680
how's that sigh every way this is the

00:42:21,380 --> 00:42:26,839
way to better utilize all your resources

00:42:24,680 --> 00:42:30,319
and it makes managing all your resources

00:42:26,839 --> 00:42:34,150
pretty easy all of the innovation is

00:42:30,319 --> 00:42:37,640
happening in open source the

00:42:34,150 --> 00:42:39,440
collaborative nature and of the you know

00:42:37,640 --> 00:42:41,569
of the community and the speed at which

00:42:39,440 --> 00:42:43,550
these are these you know these these

00:42:41,569 --> 00:42:45,859
deficiencies these bugs are getting

00:42:43,550 --> 00:42:48,710
discovered and then fixed is it like

00:42:45,859 --> 00:42:51,710
that really shows the power of the of

00:42:48,710 --> 00:42:54,160
the open source community it is global

00:42:51,710 --> 00:42:57,710
and it's definitely because of the users

00:42:54,160 --> 00:43:03,680
community people are extremely friendly

00:42:57,710 --> 00:43:05,390
and always ready to help if you go on

00:43:03,680 --> 00:43:07,579
tire see any day you'll see these guys

00:43:05,390 --> 00:43:10,250
helping each other out and they're all

00:43:07,579 --> 00:43:11,930
doing it like in a selfless manner the

00:43:10,250 --> 00:43:14,950
product is transparent for everyone

00:43:11,930 --> 00:43:18,140
everyone can look at the code base

00:43:14,950 --> 00:43:20,349
everyone can see how close that is being

00:43:18,140 --> 00:43:25,849
built nothing nothing is proprietary

00:43:20,349 --> 00:43:28,520
everything is open in many ways it's

00:43:25,849 --> 00:43:32,960
absolutely vital to the the ongoing

00:43:28,520 --> 00:43:37,160
health plan stack the most exciting

00:43:32,960 --> 00:43:40,010
event in recent memory for me was our

00:43:37,160 --> 00:43:42,650
first developer boot camp

00:43:40,010 --> 00:43:45,290
and our call gave people I gave you two

00:43:42,650 --> 00:43:49,250
weeks notice to come attend I was

00:43:45,290 --> 00:43:53,420
expecting 25 or 30 people so we ended up

00:43:49,250 --> 00:43:56,270
with 87 people and had to go get more

00:43:53,420 --> 00:43:58,790
chairs in the room twice everything

00:43:56,270 --> 00:44:02,030
within cloud computing is commodity and

00:43:58,790 --> 00:44:05,090
is open source and so I don't think that

00:44:02,030 --> 00:44:06,860
you will you'll see anywhere where open

00:44:05,090 --> 00:44:09,890
source is not pervasive in cloud

00:44:06,860 --> 00:44:12,440
computing and so i think it's i think

00:44:09,890 --> 00:44:13,970
it's an assumption i think when you talk

00:44:12,440 --> 00:44:15,080
about cloud computing you're really

00:44:13,970 --> 00:44:20,630
talking about open source cloud

00:44:15,080 --> 00:44:23,660
computing cloud sac is a robust solution

00:44:20,630 --> 00:44:25,790
for large deployments you'll have dozens

00:44:23,660 --> 00:44:30,080
of data centers and thousands of servers

00:44:25,790 --> 00:44:32,750
in each data centers these hardware is

00:44:30,080 --> 00:44:36,230
going to fail and CloudStack is designed

00:44:32,750 --> 00:44:38,930
to handle number one that mass scale

00:44:36,230 --> 00:44:42,110
number two it's designed to handle the

00:44:38,930 --> 00:44:44,990
failure that inevitably happens in large

00:44:42,110 --> 00:44:49,160
deployments started working on contact

00:44:44,990 --> 00:44:52,460
over four years ago and it was the

00:44:49,160 --> 00:44:54,230
original set of people working right had

00:44:52,460 --> 00:44:58,340
a background of delivering software

00:44:54,230 --> 00:45:02,570
telcos and service providers lots of QA

00:44:58,340 --> 00:45:06,170
lots of users actually using it high

00:45:02,570 --> 00:45:09,260
availability is a key feature multiple

00:45:06,170 --> 00:45:11,270
hypervisors support of different network

00:45:09,260 --> 00:45:13,970
models you can pick up whatever suits

00:45:11,270 --> 00:45:16,220
you better while step management server

00:45:13,970 --> 00:45:19,910
can be deployed in different physical

00:45:16,220 --> 00:45:21,560
machines it definitely has a huge

00:45:19,910 --> 00:45:26,540
footprint it's being deployed everywhere

00:45:21,560 --> 00:45:29,120
there's a major movie studio that they

00:45:26,540 --> 00:45:32,420
were using cloudstack they were using it

00:45:29,120 --> 00:45:34,400
to transcode video and i thought that

00:45:32,420 --> 00:45:36,050
was terribly fascinating what i found

00:45:34,400 --> 00:45:39,320
more fascinating is what they did during

00:45:36,050 --> 00:45:42,110
lunch where they would spin up you know

00:45:39,320 --> 00:45:43,490
50 or 60 game servers then as soon as

00:45:42,110 --> 00:45:46,189
lunch was over they would destroy all

00:45:43,490 --> 00:45:49,589
the instances and go back to doing

00:45:46,189 --> 00:45:51,119
cloudstack is vast it touches so many

00:45:49,589 --> 00:45:52,979
different aspects and there's no one

00:45:51,119 --> 00:45:55,619
person that's kind of like a master of

00:45:52,979 --> 00:45:59,429
all those realms I think clouds stack as

00:45:55,619 --> 00:46:01,769
a project is going to be one of the

00:45:59,429 --> 00:46:05,729
leaders simply because it's some of the

00:46:01,769 --> 00:46:11,159
most feature fallen and and robust

00:46:05,729 --> 00:46:14,059
platforms out they were Adam senior

00:46:11,159 --> 00:46:14,059
living through the clouds dag

00:46:23,640 --> 00:46:25,700
you

00:46:26,870 --> 00:46:28,930

YouTube URL: https://www.youtube.com/watch?v=ar1vQpZFLjA


