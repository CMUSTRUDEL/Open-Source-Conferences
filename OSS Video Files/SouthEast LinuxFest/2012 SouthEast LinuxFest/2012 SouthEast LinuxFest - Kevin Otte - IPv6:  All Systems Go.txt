Title: 2012 SouthEast LinuxFest - Kevin Otte - IPv6:  All Systems Go
Publication date: 2013-04-13
Playlist: 2012 SouthEast LinuxFest
Description: 
	2012 SouthEast LinuxFest
Kevin Otte
IPv6: All Systems Go
Captions: 
	00:00:00,000 --> 00:00:05,370
the following presentation was recorded

00:00:02,580 --> 00:00:08,130
the 2012 southeast linux fest in

00:00:05,370 --> 00:00:10,469
charlotte north carolina it is licensed

00:00:08,130 --> 00:00:12,179
under a creative commons license for

00:00:10,469 --> 00:00:17,670
more information about the southeast

00:00:12,179 --> 00:00:19,529
linux fest visit WWDC linux pc org the

00:00:17,670 --> 00:00:22,410
southeast linux fest would like to thank

00:00:19,529 --> 00:00:26,150
the following diamond sponsors in 2012

00:00:22,410 --> 00:00:26,150
for helping make these videos possible

00:00:29,960 --> 00:00:36,690
he's now assistant bin at a large

00:00:33,750 --> 00:00:39,989
academic research library at a small

00:00:36,690 --> 00:00:41,670
University in North Carolina does think

00:00:39,989 --> 00:00:54,600
of it networks that you'll discover in a

00:00:41,670 --> 00:00:56,640
moment once and almost forever it is

00:00:54,600 --> 00:00:57,989
interesting that Brian ended up just

00:00:56,640 --> 00:00:59,370
happened to be the one proctoring this

00:00:57,989 --> 00:01:01,829
room for me because he's actually one of

00:00:59,370 --> 00:01:03,809
my more avid workshop attendees I've

00:01:01,829 --> 00:01:06,630
done a couple of workshops back in

00:01:03,809 --> 00:01:09,600
durham for hands-on stuff and he shows

00:01:06,630 --> 00:01:11,670
up with him the whole monstrosity of a

00:01:09,600 --> 00:01:13,170
freebsd firewall all the switches and

00:01:11,670 --> 00:01:14,729
everything so you know we're really

00:01:13,170 --> 00:01:19,110
putting together the whole network here

00:01:14,729 --> 00:01:23,189
so it was pretty fun so how does it feel

00:01:19,110 --> 00:01:26,009
to be living in the future alright so

00:01:23,189 --> 00:01:29,840
yes the world ipv6 launch was three days

00:01:26,009 --> 00:01:33,030
ago on wednesday when all the major

00:01:29,840 --> 00:01:35,579
providers Google Yahoo Microsoft from

00:01:33,030 --> 00:01:37,650
all the big players turned on ipv6 on

00:01:35,579 --> 00:01:43,380
their main services with the intent to

00:01:37,650 --> 00:01:44,399
leave it on now and forever so a little

00:01:43,380 --> 00:01:46,590
bit what we're going to go over just

00:01:44,399 --> 00:01:48,450
sort of the features of what ipv6 is

00:01:46,590 --> 00:01:50,909
going to bring us I'm going to go over

00:01:48,450 --> 00:01:52,470
just how the addressing works you got to

00:01:50,909 --> 00:01:55,979
kind of know the basic vocabulary that

00:01:52,470 --> 00:01:57,270
you can work with to go forward dns

00:01:55,979 --> 00:01:59,670
issues you know how we're going to

00:01:57,270 --> 00:02:02,130
manage being able to look up all the

00:01:59,670 --> 00:02:04,649
stuff i want to go into a little bit of

00:02:02,130 --> 00:02:07,259
actual system configuration on some of

00:02:04,649 --> 00:02:08,759
the linux platforms and finally if we've

00:02:07,259 --> 00:02:11,220
got enough time just discuss briefly

00:02:08,759 --> 00:02:12,140
some of the applications level issues

00:02:11,220 --> 00:02:17,750
that we're going to run

00:02:12,140 --> 00:02:20,270
too there's a lot here so don't feel bad

00:02:17,750 --> 00:02:21,620
if you get overwhelmed it is kind of

00:02:20,270 --> 00:02:23,150
like drinking from the firehose if you

00:02:21,620 --> 00:02:25,520
don't necessarily get everything you

00:02:23,150 --> 00:02:26,990
know feel free to have some questions or

00:02:25,520 --> 00:02:34,520
at least that way you'll know what to go

00:02:26,990 --> 00:02:37,400
look up so features of ipv6 it uses a

00:02:34,520 --> 00:02:41,270
128-bit address space that's as opposed

00:02:37,400 --> 00:02:44,780
to ipv4 is 32 bits so 2 to the 1 28

00:02:41,270 --> 00:02:47,989
verses 2 32 i will leave the obscene

00:02:44,780 --> 00:02:51,050
math as an exercise to the reader but

00:02:47,989 --> 00:02:53,870
one comparison I saw to the the to

00:02:51,050 --> 00:02:56,780
address spaces is if the ipv4 address

00:02:53,870 --> 00:02:58,910
space is the size of a golf ball then

00:02:56,780 --> 00:03:02,060
the entirety of the ipv6 address space

00:02:58,910 --> 00:03:03,500
is the size of the Sun so we've got a

00:03:02,060 --> 00:03:05,000
little bit more room to grow so

00:03:03,500 --> 00:03:07,840
hopefully we don't ever have to go

00:03:05,000 --> 00:03:07,840
through this again yeah

00:03:14,100 --> 00:03:21,750
every person on planet earth one times

00:03:16,200 --> 00:03:23,160
ten to the eighth addresses yeah yeah

00:03:21,750 --> 00:03:25,170
yeah that's so saying you know he was

00:03:23,160 --> 00:03:26,640
saying that one of the other aggregates

00:03:25,170 --> 00:03:29,790
was that whole notion of every person

00:03:26,640 --> 00:03:31,740
can have to themselves some obscene

00:03:29,790 --> 00:03:33,420
amount of addresses at some point it

00:03:31,740 --> 00:03:35,520
when you get to that scale it almost

00:03:33,420 --> 00:03:38,340
ceases to matter you do want to pee

00:03:35,520 --> 00:03:39,390
little mindful of it just because we

00:03:38,340 --> 00:03:40,920
don't want to go through this again we

00:03:39,390 --> 00:03:42,120
don't want to get to willy nilly well

00:03:40,920 --> 00:03:43,500
then in the other hand the idea is you

00:03:42,120 --> 00:03:45,300
don't want to have to be remembering a

00:03:43,500 --> 00:03:48,450
lot like we've had to do like we're

00:03:45,300 --> 00:03:50,910
having to do right now so the side

00:03:48,450 --> 00:03:56,640
effect of this is we don't have any more

00:03:50,910 --> 00:03:58,140
net hallelu yes it breaks the egg how

00:03:56,640 --> 00:04:01,110
many of the application developers are

00:03:58,140 --> 00:04:02,670
loving this here of it but network

00:04:01,110 --> 00:04:04,680
address translation has broken the end

00:04:02,670 --> 00:04:07,320
end principle that the internet was

00:04:04,680 --> 00:04:09,390
originally designed around and so that

00:04:07,320 --> 00:04:11,910
has caused a lot of headaches I've seen

00:04:09,390 --> 00:04:13,560
the list of things the application

00:04:11,910 --> 00:04:15,120
developers have to do to be able to say

00:04:13,560 --> 00:04:17,010
okay well I have to send this packet in

00:04:15,120 --> 00:04:18,989
this order and expect this reply to be

00:04:17,010 --> 00:04:20,640
able to know that I'm through both me no

00:04:18,989 --> 00:04:22,590
none of that anymore we'll still have to

00:04:20,640 --> 00:04:24,390
deal with firewalls but that's a lot

00:04:22,590 --> 00:04:25,860
easier than actually you at least know

00:04:24,390 --> 00:04:31,410
what the address is on the other end and

00:04:25,860 --> 00:04:35,670
you know that's your endpoint yes it's

00:04:31,410 --> 00:04:37,080
like on behalf of hoop one of the

00:04:35,670 --> 00:04:39,510
features they put in is this notion of

00:04:37,080 --> 00:04:44,190
stateless address auto-configuration or

00:04:39,510 --> 00:04:45,900
a slack basically the idea is you don't

00:04:44,190 --> 00:04:49,440
have to use this but they bake this in

00:04:45,900 --> 00:04:53,070
to make client deployments much easier

00:04:49,440 --> 00:04:56,340
the idea is that the router advertises

00:04:53,070 --> 00:04:59,910
its prefix its its network prefix the

00:04:56,340 --> 00:05:03,600
endpoint then creates its own network

00:04:59,910 --> 00:05:05,550
address usually based on the mac address

00:05:03,600 --> 00:05:07,040
on ethernet but obviously doesn't have

00:05:05,550 --> 00:05:09,240
to because not everything is ethernet

00:05:07,040 --> 00:05:12,180
generates this checks to make sure it's

00:05:09,240 --> 00:05:14,040
in use and moves on so you don't have to

00:05:12,180 --> 00:05:18,450
have the state fulness of like a dhcp

00:05:14,040 --> 00:05:19,890
server may end up needing it later we

00:05:18,450 --> 00:05:24,419
can talk about that later if we have a

00:05:19,890 --> 00:05:26,820
chance so let's go over how the

00:05:24,419 --> 00:05:30,100
addressing works

00:05:26,820 --> 00:05:31,870
so this is your average ipv4 address the

00:05:30,100 --> 00:05:37,350
dotted quad that we've all grown to know

00:05:31,870 --> 00:05:41,250
and love this is your brain on ipv6

00:05:37,350 --> 00:05:44,220
yeah so it looks pretty ugly at first

00:05:41,250 --> 00:05:45,600
glance you may be a little apprehensive

00:05:44,220 --> 00:05:48,780
but there are some ways to make this

00:05:45,600 --> 00:05:51,240
work a little easier so the first thing

00:05:48,780 --> 00:05:53,970
that can happen is any of these leading

00:05:51,240 --> 00:05:56,760
zeros have a good pointer here but any

00:05:53,970 --> 00:05:59,610
of the leading zeros that are in the

00:05:56,760 --> 00:06:02,310
address can actually be lopped off so

00:05:59,610 --> 00:06:05,550
you don't have to have all the digits in

00:06:02,310 --> 00:06:09,170
there if it starts with a0 okay we've

00:06:05,550 --> 00:06:09,170
gotten ourselves a little shorter here

00:06:09,500 --> 00:06:14,100
now in this case if you're assigning

00:06:12,210 --> 00:06:16,080
addresses to a server or known fixed

00:06:14,100 --> 00:06:19,050
device you may just want to assign it

00:06:16,080 --> 00:06:21,480
number one but who wants to be sitting

00:06:19,050 --> 00:06:24,180
there banging away at their 0ki all day

00:06:21,480 --> 00:06:26,430
okay we don't have to do that so in

00:06:24,180 --> 00:06:29,040
addition to the previous leader zeros

00:06:26,430 --> 00:06:31,560
can be stripped any time you have a

00:06:29,040 --> 00:06:33,450
single this can only happen once in the

00:06:31,560 --> 00:06:36,480
address but anytime you have a single

00:06:33,450 --> 00:06:39,360
long run of zeros it can be shortened to

00:06:36,480 --> 00:06:42,480
this double colon notation so this will

00:06:39,360 --> 00:06:44,610
mean fill-in out two zeros to pad to

00:06:42,480 --> 00:06:52,850
what you would need so suddenly this

00:06:44,610 --> 00:06:52,850
doesn't look quite so bad okay yes

00:07:04,900 --> 00:07:08,719
so you're saying would it make sense to

00:07:07,069 --> 00:07:10,520
have the colons there and just some of

00:07:08,719 --> 00:07:12,110
the zeros you could just say colon 0

00:07:10,520 --> 00:07:13,939
colon 0 colon zero and just have the

00:07:12,110 --> 00:07:16,789
single 0 so that when you know that it's

00:07:13,939 --> 00:07:18,889
the whole thing those that leading 0

00:07:16,789 --> 00:07:21,740
expansion rules do apply still so you

00:07:18,889 --> 00:07:40,279
could have 12 colon 0 colon 0 colon 0

00:07:21,740 --> 00:07:41,930
colon 1 that well that's that's just not

00:07:40,279 --> 00:07:44,659
how the speck was written unfortunately

00:07:41,930 --> 00:07:46,729
I mean there are some debate as to

00:07:44,659 --> 00:07:48,529
whether the whole notion of whether it's

00:07:46,729 --> 00:07:53,779
leading 0 or not or whether you got the

00:07:48,529 --> 00:07:55,219
double colons so yeah it's just

00:07:53,779 --> 00:07:56,990
basically a matter of that was kind of

00:07:55,219 --> 00:07:59,060
how it was designed to try and make it a

00:07:56,990 --> 00:08:01,419
little easier unfortunately it does make

00:07:59,060 --> 00:08:03,469
the parsing rules kind of a pain

00:08:01,419 --> 00:08:07,520
somebody actually just before I came

00:08:03,469 --> 00:08:10,879
down here to talk sent me a reg ex that

00:08:07,520 --> 00:08:13,940
was to parse I don't have that URL handy

00:08:10,879 --> 00:08:16,370
unfortunately but I think it was just

00:08:13,940 --> 00:08:23,389
word wrapped it was something like 12

00:08:16,370 --> 00:08:25,879
lines long it was Wow so in general

00:08:23,389 --> 00:08:27,589
you're going to have the address split

00:08:25,879 --> 00:08:29,180
pretty much down the middle your first

00:08:27,589 --> 00:08:31,699
64 bits are going to be your network

00:08:29,180 --> 00:08:33,409
identifier and then the last 64 bits are

00:08:31,699 --> 00:08:37,909
always going to be your interface

00:08:33,409 --> 00:08:40,070
identifier and so much like in ipv4 we

00:08:37,909 --> 00:08:43,370
used to have this notion of the classes

00:08:40,070 --> 00:08:47,060
and one not v6 is totally classless but

00:08:43,370 --> 00:08:49,339
they do tend to break it down on the on

00:08:47,060 --> 00:08:52,730
the colon boundaries which I left out

00:08:49,339 --> 00:08:54,920
here on the table but basically your

00:08:52,730 --> 00:08:58,550
largest is allocations usually to your

00:08:54,920 --> 00:09:01,699
ISPs are going to be a / 32 so I think

00:08:58,550 --> 00:09:04,579
that first db8 are like hurricane

00:09:01,699 --> 00:09:07,339
electric these guys are 200 1 colon 470

00:09:04,579 --> 00:09:12,589
that whole thing is their address space

00:09:07,339 --> 00:09:15,850
and then carve out chunks from that so a

00:09:12,589 --> 00:09:17,889
/ 48 would be then what you would give

00:09:15,850 --> 00:09:20,589
to perhaps in individual sites like for

00:09:17,889 --> 00:09:22,949
example of redhead at a / 32 each of

00:09:20,589 --> 00:09:25,240
their sites would probably be a / 48

00:09:22,949 --> 00:09:27,670
each of their different offices and then

00:09:25,240 --> 00:09:32,259
inside those buildings you'd have your

00:09:27,670 --> 00:09:34,690
site local aggregate the SLA and from

00:09:32,259 --> 00:09:41,889
there then you would split out your / 64

00:09:34,690 --> 00:09:43,779
/ VLAN per subnet there is a sudden

00:09:41,889 --> 00:09:45,730
massive these the splash notation is

00:09:43,779 --> 00:09:47,560
your subnet mask it's just all done

00:09:45,730 --> 00:09:49,810
insider notation because you don't want

00:09:47,560 --> 00:09:52,839
to be writing / ffffs colon ffff colon

00:09:49,810 --> 00:09:56,019
ffs you know for hours on end but yeah

00:09:52,839 --> 00:09:58,899
so these these / 48 30 to 40 and 60 for

00:09:56,019 --> 00:10:07,990
those are your / notations and those

00:09:58,899 --> 00:10:11,160
your your subnets yes so the question is

00:10:07,990 --> 00:10:14,860
do people subnets smaller than a 64

00:10:11,160 --> 00:10:18,970
right now no um 64 is kind of designed

00:10:14,860 --> 00:10:21,399
to be the last aggregate especially

00:10:18,970 --> 00:10:22,600
because if you if your if you can use

00:10:21,399 --> 00:10:24,100
something smaller because it is

00:10:22,600 --> 00:10:25,779
classless it'll have the router will

00:10:24,100 --> 00:10:28,540
gladly just ask it down to whatever at

00:10:25,779 --> 00:10:29,920
once but the stateless auto config won't

00:10:28,540 --> 00:10:31,420
work and there's probably a few other

00:10:29,920 --> 00:10:33,670
things that have been kind of hard coded

00:10:31,420 --> 00:10:35,769
not to work there's some debate right

00:10:33,670 --> 00:10:39,100
now on whether you want to use a smaller

00:10:35,769 --> 00:10:40,990
notation like a 126 or 127 on a router

00:10:39,100 --> 00:10:44,350
link so you're not wasting all that

00:10:40,990 --> 00:10:47,050
space but right now the current notation

00:10:44,350 --> 00:10:49,930
is to just use a 64 on any sort of

00:10:47,050 --> 00:10:51,189
interlink on any link and we'll get into

00:10:49,930 --> 00:10:53,589
link-local here in a bit it was there a

00:10:51,189 --> 00:10:55,510
question over here I thought I saw no

00:10:53,589 --> 00:10:59,810
okay

00:10:55,510 --> 00:11:01,760
how much a / 64 would cost that's mostly

00:10:59,810 --> 00:11:03,560
going to be your ISP because right now

00:11:01,760 --> 00:11:05,720
for like off a home is P I think the

00:11:03,560 --> 00:11:07,430
idea is you're going to actually get a

00:11:05,720 --> 00:11:08,960
prefix delegated to you from your isp

00:11:07,430 --> 00:11:16,370
and that'll just be par for the course

00:11:08,960 --> 00:11:17,330
I'm hoping that's the case so I want to

00:11:16,370 --> 00:11:21,620
go over some of the more notable

00:11:17,330 --> 00:11:24,490
addresses you'll run into colon colon 1

00:11:21,620 --> 00:11:26,420
all zeros one that is your venerable

00:11:24,490 --> 00:11:29,810
localhost that's that's your equivalent

00:11:26,420 --> 00:11:31,790
tier 1 27001 back in v floor lamp so

00:11:29,810 --> 00:11:34,250
you'll see that on a lot of things that

00:11:31,790 --> 00:11:39,770
are listening localhost only so they

00:11:34,250 --> 00:11:42,290
still talk to it like you would anything

00:11:39,770 --> 00:11:44,930
starting with an EFI 80 and this is what

00:11:42,290 --> 00:11:47,420
is known as a link-local address these

00:11:44,930 --> 00:11:49,520
addresses are only valid on the

00:11:47,420 --> 00:11:50,990
individual piece of wire or virtual wire

00:11:49,520 --> 00:11:54,050
in the case of wireless but on that

00:11:50,990 --> 00:11:57,470
individual link they these addresses

00:11:54,050 --> 00:11:59,870
will never be routed but these addresses

00:11:57,470 --> 00:12:02,720
are also used to pass a lot of the

00:11:59,870 --> 00:12:04,190
control messages gone are the days of

00:12:02,720 --> 00:12:05,960
things like art being a separate

00:12:04,190 --> 00:12:10,370
protocol most of all of that stuff is

00:12:05,960 --> 00:12:12,350
being done with icmpv6 so for those of

00:12:10,370 --> 00:12:15,020
you who've heard people say don't block

00:12:12,350 --> 00:12:17,330
ICMP envy for space because it breaks

00:12:15,020 --> 00:12:20,510
things yet let me repeat that even

00:12:17,330 --> 00:12:22,700
louder in v6 space you can't intercept

00:12:20,510 --> 00:12:27,860
ICMP and break it or you will break a

00:12:22,700 --> 00:12:29,720
lot of things okay but if you've done an

00:12:27,860 --> 00:12:31,490
interface list on any of your machines

00:12:29,720 --> 00:12:34,250
you'll probably you've seen Fe 80

00:12:31,490 --> 00:12:38,740
addresses on all the interfaces every

00:12:34,250 --> 00:12:38,740
interface will get one right off the bat

00:12:39,160 --> 00:12:45,170
now you've noticed that colon is used as

00:12:42,380 --> 00:12:47,030
the delimiter and that's some confusion

00:12:45,170 --> 00:12:49,940
if for example you want to specify port

00:12:47,030 --> 00:12:52,010
number so the idea here is you want to

00:12:49,940 --> 00:12:54,290
wrap you if you're using a bear address

00:12:52,010 --> 00:12:55,460
then you wrap it in square brackets so

00:12:54,290 --> 00:12:59,630
that it knows that's the end of the

00:12:55,460 --> 00:13:01,640
address and that's your port number so

00:12:59,630 --> 00:13:04,089
you should be using DNS which we will

00:13:01,640 --> 00:13:04,089
get into

00:13:04,980 --> 00:13:08,679
yeah he's asked me if it's true for

00:13:07,179 --> 00:13:11,439
browsers on yeah pretty much any app

00:13:08,679 --> 00:13:13,569
that's going to be parsing a URL or any

00:13:11,439 --> 00:13:16,480
kind of colon notation port he's going

00:13:13,569 --> 00:13:18,429
to use this this bracket notation like

00:13:16,480 --> 00:13:19,749
that that does if you're looking at from

00:13:18,429 --> 00:13:23,110
the security standpoint that could open

00:13:19,749 --> 00:13:25,420
up a new vector for you know somebody

00:13:23,110 --> 00:13:29,559
puts a bracket noted URL much like to do

00:13:25,420 --> 00:13:32,860
bare urls about before urls but not a

00:13:29,559 --> 00:13:35,019
great idea to be using urls especially

00:13:32,860 --> 00:13:36,850
because okay you've got a dotted quad

00:13:35,019 --> 00:13:38,829
out there okay and I'll get into that

00:13:36,850 --> 00:13:43,269
later later on but basically you have a

00:13:38,829 --> 00:13:48,249
dotted quad got a v6 server you're not

00:13:43,269 --> 00:13:50,199
going to get anywhere so now we have dns

00:13:48,249 --> 00:13:55,420
or i wrote it down in my journal so I

00:13:50,199 --> 00:13:58,629
wouldn't have to remember our standard a

00:13:55,420 --> 00:14:04,089
record that we're used to in v4 space a

00:13:58,629 --> 00:14:07,660
record address record well since we're

00:14:04,089 --> 00:14:10,449
increasing the space x 4 x 4 x 32 is a

00:14:07,660 --> 00:14:12,610
128-bit well four times an a record is a

00:14:10,449 --> 00:14:16,569
quality record and that's our address

00:14:12,610 --> 00:14:19,329
type for v6 addresses so and you use the

00:14:16,569 --> 00:14:22,540
shortened notation the system will

00:14:19,329 --> 00:14:27,129
expand it on the fly and off you go so

00:14:22,540 --> 00:14:29,829
forward lookups pretty easy so we now we

00:14:27,129 --> 00:14:31,470
get into our reverse lookups so again

00:14:29,829 --> 00:14:33,399
you've got these sort of the reversed

00:14:31,470 --> 00:14:37,529
notation down there on the end where

00:14:33,399 --> 00:14:37,529
it's the last off that first coming back

00:14:38,490 --> 00:14:43,200
yeah

00:14:41,070 --> 00:14:47,150
they actually they went ahead and split

00:14:43,200 --> 00:14:50,220
it on the individual hex nibble boundary

00:14:47,150 --> 00:14:52,260
such that we could do finer grained

00:14:50,220 --> 00:14:54,270
delegation because if you notice them

00:14:52,260 --> 00:14:57,480
the v4 when you're trying to delegate on

00:14:54,270 --> 00:15:00,000
that last dotted address you know you

00:14:57,480 --> 00:15:02,250
you couldn't delegate anything small

00:15:00,000 --> 00:15:05,210
going to / 24 so if your ISP gave you a

00:15:02,250 --> 00:15:08,220
25 26 29 whatever one of those small

00:15:05,210 --> 00:15:11,400
segments for your business you had no

00:15:08,220 --> 00:15:13,560
way to actually delegate that DNS down

00:15:11,400 --> 00:15:14,910
there was some trickery that got done

00:15:13,560 --> 00:15:16,890
but there was no efficient way to do it

00:15:14,910 --> 00:15:20,520
so that was the main impetus for doing

00:15:16,890 --> 00:15:22,410
this but obviously that's a lot to deal

00:15:20,520 --> 00:15:24,510
with this is why scripts are your friend

00:15:22,410 --> 00:15:25,830
either scripts or database some sort of

00:15:24,510 --> 00:15:27,750
automated method of dealing with this

00:15:25,830 --> 00:15:30,950
but that's basically what the raw

00:15:27,750 --> 00:15:30,950
records going to look like on the wire

00:15:31,790 --> 00:15:38,100
okay so just a little break here you

00:15:35,550 --> 00:15:41,120
can't go wrong with a cat but this image

00:15:38,100 --> 00:15:43,590
was actually circulated at the european

00:15:41,120 --> 00:15:46,800
regional registry conference a few

00:15:43,590 --> 00:15:53,220
months back you know ahead of the launch

00:15:46,800 --> 00:15:57,320
day but so now we'll get into a little

00:15:53,220 --> 00:15:57,320
bit on actually configuring your systems

00:15:58,010 --> 00:16:03,630
so for servers you're probably going to

00:16:00,330 --> 00:16:04,860
be doing mostly static type stuff so

00:16:03,630 --> 00:16:07,830
we'll start with sort of the red hat

00:16:04,860 --> 00:16:09,810
based variants and if I don't get to

00:16:07,830 --> 00:16:12,180
your specific flavor I just went with

00:16:09,810 --> 00:16:13,860
the two biggest ones the redhead and the

00:16:12,180 --> 00:16:15,510
Debian is just because its most what's

00:16:13,860 --> 00:16:19,380
out there but obviously there's quite a

00:16:15,510 --> 00:16:21,150
plethora so your main file as your sexy

00:16:19,380 --> 00:16:24,150
sis config network where it controls

00:16:21,150 --> 00:16:26,700
just sort of the actual core pretty

00:16:24,150 --> 00:16:30,180
simple at a syncline tell it hey we want

00:16:26,700 --> 00:16:31,770
v6 I believe in rel 6 and beyond it's

00:16:30,180 --> 00:16:34,110
going to be on by default but I think

00:16:31,770 --> 00:16:37,320
you need this for real five can't hurt

00:16:34,110 --> 00:16:38,970
to have it in there and then you get to

00:16:37,320 --> 00:16:41,490
your interface and all the great stuff

00:16:38,970 --> 00:16:45,410
is what you've already got you basically

00:16:41,490 --> 00:16:45,410
add an extra set of lines and

00:16:46,089 --> 00:16:50,439
I was afraid I was going to do something

00:16:48,639 --> 00:16:52,930
like this you do need the netmask out

00:16:50,439 --> 00:16:55,629
here I forgot to include that so you

00:16:52,930 --> 00:16:57,579
would have your / 64 I think it will

00:16:55,629 --> 00:16:59,829
imply that because i saw actually two

00:16:57,579 --> 00:17:01,059
different variants of this but for

00:16:59,829 --> 00:17:02,559
safety sake you do want to put that in

00:17:01,059 --> 00:17:04,589
that mask out there so it knows to add

00:17:02,559 --> 00:17:04,589
that

00:17:09,390 --> 00:17:14,459
and as I said the debian ubuntu sort of

00:17:11,670 --> 00:17:16,650
the Debian base all of their network

00:17:14,459 --> 00:17:19,380
stuff is handled in one file and is on

00:17:16,650 --> 00:17:22,140
by default so you basically add another

00:17:19,380 --> 00:17:23,880
add another of the same interface but

00:17:22,140 --> 00:17:27,150
you give it the kind of six family

00:17:23,880 --> 00:17:29,760
instead of the inet family and you give

00:17:27,150 --> 00:17:31,950
it your address the netmask is whatever

00:17:29,760 --> 00:17:36,450
the cider notation is and you give it

00:17:31,950 --> 00:17:42,060
your gateway so pretty simple going on

00:17:36,450 --> 00:17:45,180
there so if you've been using the

00:17:42,060 --> 00:17:47,160
ifconfig command and the route command I

00:17:45,180 --> 00:17:50,390
kind of recommend against kind of doing

00:17:47,160 --> 00:17:52,980
that going forward the IP command is

00:17:50,390 --> 00:17:55,260
sort of what's being the de facto

00:17:52,980 --> 00:17:56,760
standard now and it makes it you're able

00:17:55,260 --> 00:17:58,410
to get into a lot more guts of the stack

00:17:56,760 --> 00:18:01,890
but it also gives you a more holistic

00:17:58,410 --> 00:18:03,420
kind of view with the interface so your

00:18:01,890 --> 00:18:06,210
main commands you want to deal with our

00:18:03,420 --> 00:18:10,350
IP address show I will show you all the

00:18:06,210 --> 00:18:13,470
addresses on the system and then you'll

00:18:10,350 --> 00:18:15,810
for this you want ip6 meaning the ipv6

00:18:13,470 --> 00:18:19,140
address family route show if you give an

00:18:15,810 --> 00:18:21,000
IP route show alone it assumes v4 but IP

00:18:19,140 --> 00:18:23,150
address will show all it is a little

00:18:21,000 --> 00:18:23,150
quirky

00:18:26,830 --> 00:18:31,400
firewalling everybody has IP tables

00:18:29,810 --> 00:18:35,720
running on their hosts so they don't get

00:18:31,400 --> 00:18:37,640
hit by the bad guys r I eat so I p6

00:18:35,720 --> 00:18:40,970
tables is basically the same command set

00:18:37,640 --> 00:18:42,680
obviously there's no NAT table but you

00:18:40,970 --> 00:18:44,930
do the same sort of input/output forward

00:18:42,680 --> 00:18:50,120
tables and you can do the same sorts of

00:18:44,930 --> 00:18:51,740
things so one of the things you may want

00:18:50,120 --> 00:18:53,900
to do is actually use the Linux box as a

00:18:51,740 --> 00:18:55,610
router and I was mentioning in the bit

00:18:53,900 --> 00:18:59,030
about the stateless address auto config

00:18:55,610 --> 00:19:01,670
that the router advertises itself and

00:18:59,030 --> 00:19:04,910
its prefix so you have something called

00:19:01,670 --> 00:19:08,270
router advertisement demon read VD this

00:19:04,910 --> 00:19:10,550
is the simplest config file that will

00:19:08,270 --> 00:19:13,190
get you up and running there are a ton

00:19:10,550 --> 00:19:15,380
more options in terms of being able to

00:19:13,190 --> 00:19:18,440
tell it that go get your dns information

00:19:15,380 --> 00:19:20,240
from over here or take it from not from

00:19:18,440 --> 00:19:22,190
me on the router that's an experimental

00:19:20,240 --> 00:19:24,230
feature and in just terms of a bunch of

00:19:22,190 --> 00:19:26,420
whole of the flag timeouts you can set

00:19:24,230 --> 00:19:28,550
here but this this is the simplest one

00:19:26,420 --> 00:19:30,890
it basically says on this interface yes

00:19:28,550 --> 00:19:36,790
send advertisements here's the prefix

00:19:30,890 --> 00:19:36,790
let the clients automatically good ports

00:19:40,330 --> 00:19:45,050
so he so you're asking on this is what

00:19:43,460 --> 00:19:47,120
enables the IP addresses to be

00:19:45,050 --> 00:19:54,320
automatically assign yes the the

00:19:47,120 --> 00:19:55,940
stateless address auto configure their

00:19:54,320 --> 00:19:57,890
Zach chua Lee a flag that says you go

00:19:55,940 --> 00:20:00,770
automatically configure yourself or

00:19:57,890 --> 00:20:04,220
don't and use stateful so there is still

00:20:00,770 --> 00:20:06,680
dhcpv6 and I didn't I didn't really get

00:20:04,220 --> 00:20:09,740
much into that here but you can also if

00:20:06,680 --> 00:20:11,960
you desire have it say don't auto

00:20:09,740 --> 00:20:14,210
configure yourself go talk to a DHCP

00:20:11,960 --> 00:20:17,450
server get your address and your other

00:20:14,210 --> 00:20:19,700
stuff but still use me as the router the

00:20:17,450 --> 00:20:22,400
htpc 6 does not have at present the

00:20:19,700 --> 00:20:24,950
ability as in v4 to say here's your

00:20:22,400 --> 00:20:26,330
default route as well there's some

00:20:24,950 --> 00:20:27,770
discussion about whether they want to

00:20:26,330 --> 00:20:29,150
add that just because a lot of people

00:20:27,770 --> 00:20:31,610
are we used to their workflow where the

00:20:29,150 --> 00:20:33,050
DHCP server does everything but as it is

00:20:31,610 --> 00:20:34,820
right now the way the spec is written

00:20:33,050 --> 00:20:35,810
the router is sort of the canonical

00:20:34,820 --> 00:20:39,320
thing this is how you get off your

00:20:35,810 --> 00:20:41,150
subnet and it advertises itself and then

00:20:39,320 --> 00:20:47,930
that's the negotiation okay where do I

00:20:41,150 --> 00:20:49,970
get the rest of my information okay so

00:20:47,930 --> 00:20:52,820
as I said there are a lot of this has

00:20:49,970 --> 00:20:54,620
been sort of the OS level you know sort

00:20:52,820 --> 00:20:56,210
of the dirt basic configuration but

00:20:54,620 --> 00:20:58,130
obviously it presents some issues

00:20:56,210 --> 00:21:02,840
further up the stack into the

00:20:58,130 --> 00:21:04,550
applications so as I was saying earlier

00:21:02,840 --> 00:21:06,500
if you've got some kind of an

00:21:04,550 --> 00:21:08,180
application be it either you know XML or

00:21:06,500 --> 00:21:11,830
if you're sending back a web page you

00:21:08,180 --> 00:21:16,550
have a link to a dotted quad address

00:21:11,830 --> 00:21:20,990
well suppose now that we're exhausted on

00:21:16,550 --> 00:21:23,420
our IP addresses and somebody comes

00:21:20,990 --> 00:21:26,270
online some distant part of the world or

00:21:23,420 --> 00:21:28,040
maybe down the street someday soon that

00:21:26,270 --> 00:21:30,140
machine does not have an ipv4 address

00:21:28,040 --> 00:21:32,720
does not have one you don't have one to

00:21:30,140 --> 00:21:34,370
give you sorry and it comes across this

00:21:32,720 --> 00:21:39,620
and it says well I don't have a route to

00:21:34,370 --> 00:21:43,280
19 20 to 17 now what so please please

00:21:39,620 --> 00:21:45,260
please use dns entries wherever possible

00:21:43,280 --> 00:21:47,810
use host names because then what will

00:21:45,260 --> 00:21:50,060
happen is for the for the time being

00:21:47,810 --> 00:21:51,800
while we're in this dual stack mode but

00:21:50,060 --> 00:21:54,770
we have machines that have to both the

00:21:51,800 --> 00:21:58,280
v4 and the v6 you'll get both the a and

00:21:54,770 --> 00:21:59,930
the quad a record back and it will the

00:21:58,280 --> 00:22:02,120
client system can then say okay I've got

00:21:59,930 --> 00:22:03,620
a route to this or this or both and it

00:22:02,120 --> 00:22:05,480
can make the best decision as to what

00:22:03,620 --> 00:22:09,770
connectivity it has to be able to get

00:22:05,480 --> 00:22:10,970
back to your service of course if it's

00:22:09,770 --> 00:22:12,680
only got an a record you're still have

00:22:10,970 --> 00:22:15,670
the same problem but at least it's a

00:22:12,680 --> 00:22:15,670
little more obvious what happened

00:22:16,210 --> 00:22:22,510
so here's a fun little scenario we might

00:22:18,910 --> 00:22:24,580
run into suppose you've got a database

00:22:22,510 --> 00:22:28,570
that you're tracking customer IPS of

00:22:24,580 --> 00:22:30,180
some sort and it's only got a 15

00:22:28,570 --> 00:22:34,060
character limit because hey you know

00:22:30,180 --> 00:22:35,620
three a dotted quad with maximum three

00:22:34,060 --> 00:22:37,780
digits with the dots as a string that's

00:22:35,620 --> 00:22:40,080
only 15 characters okay what happens

00:22:37,780 --> 00:22:42,400
when you get when you feed it this I

00:22:40,080 --> 00:22:44,590
believe SQLite it'll just accept

00:22:42,400 --> 00:22:46,060
excitante it validates that stuff mysql

00:22:44,590 --> 00:22:48,130
i think it just silently truncates it

00:22:46,060 --> 00:22:49,450
correct me if I'm wrong and then you've

00:22:48,130 --> 00:22:50,710
got your post grads your Oracle in some

00:22:49,450 --> 00:22:52,360
of your other engines they're going to

00:22:50,710 --> 00:22:53,680
throw an air and flat out say you know

00:22:52,360 --> 00:22:58,540
you tried to put something too big into

00:22:53,680 --> 00:23:00,580
this field you're done so there's going

00:22:58,540 --> 00:23:04,090
to be a lot of traipsing back through

00:23:00,580 --> 00:23:05,350
code to see what's going to happen let's

00:23:04,090 --> 00:23:10,030
see where these things aren't maybe

00:23:05,350 --> 00:23:12,310
someone won't question the back 1999 all

00:23:10,030 --> 00:23:15,850
over again yes except the only problem

00:23:12,310 --> 00:23:17,800
right more work oh and the other problem

00:23:15,850 --> 00:23:19,990
here is there's no drop-dead date like

00:23:17,800 --> 00:23:24,130
we knew December 31st 99 if this wasn't

00:23:19,990 --> 00:23:26,260
fixed kaboom this you know there's just

00:23:24,130 --> 00:23:28,480
this this shift there's this slow

00:23:26,260 --> 00:23:29,500
migration there's no one day I mean I

00:23:28,480 --> 00:23:31,450
don't know how many of you had to deal

00:23:29,500 --> 00:23:33,370
with the digital TV migration they said

00:23:31,450 --> 00:23:34,900
on this day you know the analog receiver

00:23:33,370 --> 00:23:37,270
or the animal transmitters are just

00:23:34,900 --> 00:23:39,520
going to go away unfortunately there's

00:23:37,270 --> 00:23:41,770
no one day was like all the ipv4 on

00:23:39,520 --> 00:23:44,680
planets just going to go away can't

00:23:41,770 --> 00:23:46,570
really happen with billions of users on

00:23:44,680 --> 00:23:48,940
the planet there's it's it's really

00:23:46,570 --> 00:23:50,980
difficult to coordinate one day that's

00:23:48,940 --> 00:23:53,770
why we have these events like ipv6 day

00:23:50,980 --> 00:23:55,150
last year for a test run and ipv6

00:23:53,770 --> 00:23:57,610
launched this year where it's like okay

00:23:55,150 --> 00:24:01,500
this is on now this is the new normal

00:23:57,610 --> 00:24:04,840
and you bring up new machines they're v6

00:24:01,500 --> 00:24:09,070
or both but usually preferably there's

00:24:04,840 --> 00:24:13,170
some kind of e6 on the machine now so

00:24:09,070 --> 00:24:13,170
any other questions from everyone

00:24:26,090 --> 00:24:30,260
so the question is of the current route

00:24:28,130 --> 00:24:31,580
stack of routers out there are pretty

00:24:30,260 --> 00:24:34,010
much all v4 and we're going to see

00:24:31,580 --> 00:24:36,529
updates and that's a big huge it depends

00:24:34,010 --> 00:24:38,630
a lot of those older routers they've

00:24:36,529 --> 00:24:41,120
been end-of-life by their vendor with

00:24:38,630 --> 00:24:43,100
our manufacturer so they're probably not

00:24:41,120 --> 00:24:45,620
interested in going back and getting new

00:24:43,100 --> 00:24:47,150
firm reported to them and of course it's

00:24:45,620 --> 00:24:49,700
like whoa of course you're going to give

00:24:47,150 --> 00:24:51,710
us more money for buying a new product

00:24:49,700 --> 00:24:53,809
so that you can so you can get on the

00:24:51,710 --> 00:24:57,110
new internet unfortunate that may be a

00:24:53,809 --> 00:24:59,059
lot of what happens in terms of the open

00:24:57,110 --> 00:25:01,789
source world you can get an alternate

00:24:59,059 --> 00:25:04,190
farmer like open wrt today I think

00:25:01,789 --> 00:25:06,470
dd-wrt is working on it your PF senses

00:25:04,190 --> 00:25:08,419
you know all of those firmware projects

00:25:06,470 --> 00:25:11,120
you can flash on but in terms of the

00:25:08,419 --> 00:25:14,860
average consumer yeah they're probably

00:25:11,120 --> 00:25:14,860
not going to be there right yet

00:25:23,010 --> 00:25:27,670
so in your case you have AT&T u-verse

00:25:25,300 --> 00:25:29,920
and you've got their router box and

00:25:27,670 --> 00:25:32,410
that's the only option so it's incumbent

00:25:29,920 --> 00:25:34,060
upon them to then when it comes time

00:25:32,410 --> 00:25:36,190
they have to give you new router box

00:25:34,060 --> 00:25:38,440
that's that's the the joy and the curse

00:25:36,190 --> 00:25:41,590
of being able to have that is because

00:25:38,440 --> 00:25:44,370
it's it's their problem so I had back

00:25:41,590 --> 00:25:44,370
here and then you

00:25:56,040 --> 00:26:01,090
that's another one of those it varies

00:25:58,480 --> 00:26:02,530
there are some ISPs out there that kind

00:26:01,090 --> 00:26:04,390
of have their head down in the sand it's

00:26:02,530 --> 00:26:06,970
like oh well we don't want to spend all

00:26:04,390 --> 00:26:08,860
this money right now and it's just you

00:26:06,970 --> 00:26:11,020
know that's just a thing an ipv4 is now

00:26:08,860 --> 00:26:12,809
going in or so clearly you know but

00:26:11,020 --> 00:26:15,040
unfortunately the flip side of that is

00:26:12,809 --> 00:26:16,450
the only other way to get around this

00:26:15,040 --> 00:26:18,580
problem is if you've got more and more

00:26:16,450 --> 00:26:20,799
and more clients coming online and you

00:26:18,580 --> 00:26:22,330
don't have addresses to give them you

00:26:20,799 --> 00:26:25,360
got to start putting them behind layers

00:26:22,330 --> 00:26:27,940
and more layers and more layers of a

00:26:25,360 --> 00:26:31,510
gnat and so it becomes more difficult

00:26:27,940 --> 00:26:33,640
for them to have to engineer all of that

00:26:31,510 --> 00:26:34,900
stuff in between when they could just

00:26:33,640 --> 00:26:38,220
say well you know what why don't we just

00:26:34,900 --> 00:26:41,169
spend all that money and migrate to ipv6

00:26:38,220 --> 00:26:43,450
so it some of the ISPs are getting that

00:26:41,169 --> 00:26:45,040
message some of them are still waiting

00:26:43,450 --> 00:26:46,120
to the last possible second so they

00:26:45,040 --> 00:26:54,490
couldn't earn it in like a really bad

00:26:46,120 --> 00:26:58,440
term paper you and then you wipe it is

00:26:54,490 --> 00:26:58,440
watching for quinoa and also sure

00:27:01,850 --> 00:27:06,870
so so he's noting that in same situation

00:27:04,950 --> 00:27:09,299
where you got u verse and so right now

00:27:06,870 --> 00:27:11,730
yes you can go to a tunnel broker I

00:27:09,299 --> 00:27:13,530
personally use tunnel broker net there

00:27:11,730 --> 00:27:15,840
this in terms of the easiest to set up

00:27:13,530 --> 00:27:17,940
and yes you can still set up a tunnel

00:27:15,840 --> 00:27:19,409
now since you don't have control of the

00:27:17,940 --> 00:27:21,480
end device you're actually setting up

00:27:19,409 --> 00:27:22,980
that tunnel just a hair inside you're

00:27:21,480 --> 00:27:25,440
still going out through the NAT it gets

00:27:22,980 --> 00:27:27,630
a little dicey it can be done but

00:27:25,440 --> 00:27:28,830
ultimately we need to get the ISPs on

00:27:27,630 --> 00:27:32,039
board with the fact that you know we

00:27:28,830 --> 00:27:36,890
need to do this actually hear you had

00:27:32,039 --> 00:27:36,890
him next ok

00:27:41,850 --> 00:27:48,900
so serato is the protocol and marido is

00:27:45,210 --> 00:27:50,250
the client you can install that's what I

00:27:48,900 --> 00:27:53,250
consider sort of the protocol of last

00:27:50,250 --> 00:27:54,390
resort for migration just because you do

00:27:53,250 --> 00:27:56,760
have to install it on every single

00:27:54,390 --> 00:28:01,530
client you can only get one address and

00:27:56,760 --> 00:28:03,210
it as well as 624 is another migration

00:28:01,530 --> 00:28:05,910
strategy but those are what they call

00:28:03,210 --> 00:28:09,390
any cast you're sending all your traffic

00:28:05,910 --> 00:28:10,380
to 192 do you need 99 dot one it doesn't

00:28:09,390 --> 00:28:12,179
matter where you are on the planet you

00:28:10,380 --> 00:28:13,830
send it to that address and then the

00:28:12,179 --> 00:28:15,390
intervening routers figure out where the

00:28:13,830 --> 00:28:18,480
nearest gateway is for you automatically

00:28:15,390 --> 00:28:19,950
which means you don't know so if you're

00:28:18,480 --> 00:28:21,539
trying to troubleshoot a problem and

00:28:19,950 --> 00:28:22,679
you're trying to figure out where that

00:28:21,539 --> 00:28:25,380
gateway is that doesn't necessarily

00:28:22,679 --> 00:28:26,549
always work and it could just change out

00:28:25,380 --> 00:28:31,190
from under you in the middle of the

00:28:26,549 --> 00:28:34,190
stream so it makes life very interesting

00:28:31,190 --> 00:28:34,190
good

00:28:45,070 --> 00:28:49,789
so the question is how you got on

00:28:47,269 --> 00:28:53,389
openbsd and they're very concerned about

00:28:49,789 --> 00:28:55,549
the security risks that is such a murky

00:28:53,389 --> 00:28:57,259
topic i'm not a security professional I

00:28:55,549 --> 00:28:59,929
don't really know if I'm trained to

00:28:57,259 --> 00:29:01,940
speak on such things but it is to my

00:28:59,929 --> 00:29:04,490
mind it's really no more or less more or

00:29:01,940 --> 00:29:06,230
less secure as a protocol than v forks

00:29:04,490 --> 00:29:08,720
at some point it's just telling where

00:29:06,230 --> 00:29:09,799
the bits go the problems start to come

00:29:08,720 --> 00:29:12,110
in when you have these migration

00:29:09,799 --> 00:29:15,080
strategies I know in the case of Windows

00:29:12,110 --> 00:29:17,240
a lot of them have if it detects that

00:29:15,080 --> 00:29:19,730
you have a public before address it will

00:29:17,240 --> 00:29:21,440
turn on 6240 automatically or if you're

00:29:19,730 --> 00:29:23,360
behind a firewall on some of the client

00:29:21,440 --> 00:29:25,730
OS is it will turn on torito

00:29:23,360 --> 00:29:28,220
automatically which is handy because

00:29:25,730 --> 00:29:29,929
then if you have a site that's v6 only

00:29:28,220 --> 00:29:33,049
so as the servers start to come online

00:29:29,929 --> 00:29:34,249
that don't they can't get v force base

00:29:33,049 --> 00:29:37,279
from there is peas because they've just

00:29:34,249 --> 00:29:40,100
plum run out then this client that's

00:29:37,279 --> 00:29:42,679
before only has a mechanism to tunnel

00:29:40,100 --> 00:29:44,419
and get there but now you your malware

00:29:42,679 --> 00:29:48,769
has another way to bypass the firewalls

00:29:44,419 --> 00:29:51,110
and tunnel back out whereas with your v4

00:29:48,769 --> 00:29:52,399
border policies you may have firewall

00:29:51,110 --> 00:29:54,740
rules in place say okay that's bad

00:29:52,399 --> 00:29:56,600
traffic but if it's encapsulated inside

00:29:54,740 --> 00:29:59,450
a UDP frame that it doesn't know about

00:29:56,600 --> 00:30:01,190
it might get through so yeah the

00:29:59,450 --> 00:30:04,869
migration strategies present their own

00:30:01,190 --> 00:30:09,279
unique security issues but with any luck

00:30:04,869 --> 00:30:09,279
their time is hopefully limited

00:30:33,149 --> 00:30:35,179
I

00:30:36,709 --> 00:30:42,089
so the question is is could I pv6

00:30:39,479 --> 00:30:44,039
threaten these sort of isp level control

00:30:42,089 --> 00:30:45,779
by half by forcing anything through the

00:30:44,039 --> 00:30:48,509
net or fruit through the central routing

00:30:45,779 --> 00:30:50,369
point and well yes and that could be

00:30:48,509 --> 00:30:53,809
some of why is peas are all scared of it

00:30:50,369 --> 00:30:58,919
and some enforcement agencies you're

00:30:53,809 --> 00:31:00,929
like your providers just don't want you

00:30:58,919 --> 00:31:03,389
they want to control you essentially and

00:31:00,929 --> 00:31:04,619
yeah the whole notion of the internet

00:31:03,389 --> 00:31:07,079
when it was created was an end in

00:31:04,619 --> 00:31:10,619
principle I can talk to anyone any

00:31:07,079 --> 00:31:12,059
machine on the planet as a peer and now

00:31:10,619 --> 00:31:13,559
that there's these new business models

00:31:12,059 --> 00:31:16,889
that have cropped up where it's you know

00:31:13,559 --> 00:31:18,599
consumer provider consumer yeah there is

00:31:16,889 --> 00:31:22,440
some of that but that that gets more

00:31:18,599 --> 00:31:25,429
political but in terms of it makes the

00:31:22,440 --> 00:31:25,429
technical jobs a lot easier

00:31:36,720 --> 00:31:42,070
yeah so the question is by what day do I

00:31:39,490 --> 00:31:45,580
need to have all my v6 working my

00:31:42,070 --> 00:31:46,690
opinion a year ago that that's just

00:31:45,580 --> 00:31:49,539
that's what I was commenting earlier I

00:31:46,690 --> 00:32:01,510
said there's no drop-dead date there's

00:31:49,539 --> 00:32:03,460
no way to kind of enforce so when do we

00:32:01,510 --> 00:32:05,470
get more density on v6 when we get more

00:32:03,460 --> 00:32:09,159
usership more network effect to make it

00:32:05,470 --> 00:32:11,919
viable that's the problems that's been a

00:32:09,159 --> 00:32:14,260
lot of opinion i think with the world

00:32:11,919 --> 00:32:17,440
ipv6 launched this past wednesday that

00:32:14,260 --> 00:32:20,230
is a huge driver so you now have a lot

00:32:17,440 --> 00:32:21,669
of content providers you know 3,000 of

00:32:20,230 --> 00:32:24,130
the some of the major sites on the net

00:32:21,669 --> 00:32:26,320
are now providing v6 in the clear

00:32:24,130 --> 00:32:28,450
because i'm one of the things prior to

00:32:26,320 --> 00:32:32,679
launch day was google had a whitelist if

00:32:28,450 --> 00:32:35,500
you said to them we have known working

00:32:32,679 --> 00:32:37,929
v6 please accept any DNS requests from

00:32:35,500 --> 00:32:38,950
us and give us quad-a records they did

00:32:37,929 --> 00:32:41,799
that because they didn't want

00:32:38,950 --> 00:32:43,840
misconfigured sites to not be able to

00:32:41,799 --> 00:32:46,450
reach google because the client is not

00:32:43,840 --> 00:32:47,860
going to assume that it's a is peaceful

00:32:46,450 --> 00:32:51,190
they're going to assume google salon off

00:32:47,860 --> 00:32:54,880
the map but now we're in a whole new

00:32:51,190 --> 00:32:56,559
world v6 is the new normal so please go

00:32:54,880 --> 00:32:58,870
turn it on as soon as you can even if

00:32:56,559 --> 00:32:59,980
it's just new test lab right now to get

00:32:58,870 --> 00:33:01,779
used to it but you want to be

00:32:59,980 --> 00:33:04,409
comfortable with it you want to do it on

00:33:01,779 --> 00:33:06,460
your own schedule so that you're not

00:33:04,409 --> 00:33:08,190
freaking out the last minute like that

00:33:06,460 --> 00:33:10,720
bad term paper you want to have a very

00:33:08,190 --> 00:33:11,890
good grasp of the fundamentals and you

00:33:10,720 --> 00:33:14,289
want to have hands-on experience with it

00:33:11,890 --> 00:33:15,700
so you know go home set up a test lab or

00:33:14,289 --> 00:33:17,470
you know set something up on the side of

00:33:15,700 --> 00:33:20,049
your business with with some addresses

00:33:17,470 --> 00:33:21,880
and i'll bet you you get very familiar

00:33:20,049 --> 00:33:23,950
with it very quickly and gold this was

00:33:21,880 --> 00:33:26,279
easy and then you can start an actual

00:33:23,950 --> 00:33:26,279
rollout plan

00:33:31,730 --> 00:33:42,900
question is broadcast versus multicast

00:33:34,140 --> 00:33:46,530
up so the question is is there multicast

00:33:42,900 --> 00:33:48,299
essentially in v6 face so broadcast is

00:33:46,530 --> 00:33:50,070
gone there there's this known there is

00:33:48,299 --> 00:33:53,030
no more notion of a broadcast to your

00:33:50,070 --> 00:33:56,010
link everything is considered multicast

00:33:53,030 --> 00:33:57,900
there are certain multicast addresses I

00:33:56,010 --> 00:34:00,120
don't have a list of them here but you

00:33:57,900 --> 00:34:02,490
can go find the relevant RFC but

00:34:00,120 --> 00:34:05,100
anything starting with that f digit

00:34:02,490 --> 00:34:07,770
means this is a multicast address so you

00:34:05,100 --> 00:34:09,899
can have site-wide multicast and there

00:34:07,770 --> 00:34:12,540
is you know sort of local multicast that

00:34:09,899 --> 00:34:14,879
acts as a broadcast but the whole notion

00:34:12,540 --> 00:34:16,980
of a broadcast specifically is kind of

00:34:14,879 --> 00:34:20,129
gone away but you have your variable

00:34:16,980 --> 00:34:22,050
multicast scopes and a lot of the the

00:34:20,129 --> 00:34:23,460
router advertisements of the neighbor

00:34:22,050 --> 00:34:27,389
discovery which is the equivalent to

00:34:23,460 --> 00:34:30,619
your ARP that's all done over icmpv6 to

00:34:27,389 --> 00:34:30,619
the multicast scope for your link

00:34:45,190 --> 00:34:50,090
b16 so the question is you know the

00:34:48,379 --> 00:34:51,350
whole notion of dual stack and you're

00:34:50,090 --> 00:34:55,610
saying if you've got a machine that

00:34:51,350 --> 00:35:03,020
doesn't support going to be 60 Yeah Yeah

00:34:55,610 --> 00:35:05,390
right right so yeah during this

00:35:03,020 --> 00:35:06,680
transition you want to have both your v4

00:35:05,390 --> 00:35:08,660
and your v6 deck especially on your

00:35:06,680 --> 00:35:09,800
servers and your clients as well so you

00:35:08,660 --> 00:35:12,200
can still get to some of the legacy

00:35:09,800 --> 00:35:13,940
stuff but yeah ventually there's just

00:35:12,200 --> 00:35:16,760
going to be servers services out there

00:35:13,940 --> 00:35:18,050
and some ISPs now especially you need

00:35:16,760 --> 00:35:21,410
your Pacific they were the first to run

00:35:18,050 --> 00:35:22,430
out so your option for getting v4 yeah

00:35:21,410 --> 00:35:24,950
you're going to have to continue either

00:35:22,430 --> 00:35:26,990
do network address translation to out to

00:35:24,950 --> 00:35:29,150
other before but there's no way to

00:35:26,990 --> 00:35:33,220
translate up to v6 because you can't

00:35:29,150 --> 00:35:35,810
cram 128 gallons into a 32 gallon bucket

00:35:33,220 --> 00:35:37,250
so you're probably going to have to do

00:35:35,810 --> 00:35:38,960
some application level stuff you're

00:35:37,250 --> 00:35:40,130
going to have HTTP proxies you're going

00:35:38,960 --> 00:35:42,050
to have imap proxies you're going to

00:35:40,130 --> 00:35:43,970
have all these sort of different proxies

00:35:42,050 --> 00:35:47,930
for these devices that are still legacy

00:35:43,970 --> 00:35:49,520
that you just can't ever upgrade but as

00:35:47,930 --> 00:35:50,630
time progresses you're probably going to

00:35:49,520 --> 00:35:52,510
get into a situation we had a lot of

00:35:50,630 --> 00:35:55,340
those devices that only ever spoke IPX

00:35:52,510 --> 00:36:00,190
how many of those are still out there a

00:35:55,340 --> 00:36:00,190
few granted but they're very rare

00:36:05,910 --> 00:36:10,119
so he's asking if it'll end up whether

00:36:08,590 --> 00:36:11,890
every device will have a permanent

00:36:10,119 --> 00:36:13,930
address based on a Mac or cereal or

00:36:11,890 --> 00:36:16,560
something like that probably not I mean

00:36:13,930 --> 00:36:19,240
you've still got the whole notion of

00:36:16,560 --> 00:36:21,280
width D it you can still do DHCP and

00:36:19,240 --> 00:36:23,380
those will be handed out for a short

00:36:21,280 --> 00:36:26,260
time that's mostly a lot for compliance

00:36:23,380 --> 00:36:29,290
and security tracking stateless address

00:36:26,260 --> 00:36:31,360
auto config is based on the mac address

00:36:29,290 --> 00:36:37,480
and i can actually show that a little

00:36:31,360 --> 00:36:40,480
here so you know the router says hello

00:36:37,480 --> 00:36:42,640
you know here's my prefix and like I

00:36:40,480 --> 00:36:44,530
said the experimental feature of putting

00:36:42,640 --> 00:36:46,660
the DNS resolvers in but what it

00:36:44,530 --> 00:36:49,780
actually does is it takes the mac and

00:36:46,660 --> 00:36:52,330
converts it to this notion of the eui-64

00:36:49,780 --> 00:36:54,040
so you have to switch one of the bits in

00:36:52,330 --> 00:36:55,960
the first octet because that determines

00:36:54,040 --> 00:36:57,880
whether it was lee locally generated or

00:36:55,960 --> 00:36:59,440
globally generated so whether it was

00:36:57,880 --> 00:37:01,090
assigned by a vendor or whether it's

00:36:59,440 --> 00:37:03,310
just something you picked up off the

00:37:01,090 --> 00:37:08,619
shelf and it inserts this flag to make

00:37:03,310 --> 00:37:10,660
it enough bits some people saw this and

00:37:08,619 --> 00:37:14,800
said wait a minute there's a privacy

00:37:10,660 --> 00:37:16,119
concern here if even if my prefix is

00:37:14,800 --> 00:37:18,190
changing if i go from network to network

00:37:16,119 --> 00:37:19,930
at work and i'm still basically

00:37:18,190 --> 00:37:21,790
essentially advertising my mac address

00:37:19,930 --> 00:37:23,320
that's a unique identifier that they

00:37:21,790 --> 00:37:26,380
could use to identify me they don't even

00:37:23,320 --> 00:37:28,510
need Cookies at that point said ok that

00:37:26,380 --> 00:37:31,600
that's fair there is this notion called

00:37:28,510 --> 00:37:33,369
privacy extensions wherein it is you

00:37:31,600 --> 00:37:35,770
know it can still generate this address

00:37:33,369 --> 00:37:37,210
mostly for the on link traffic but then

00:37:35,770 --> 00:37:39,070
what it will also do is generate a

00:37:37,210 --> 00:37:41,710
temporary what essentially amounts to a

00:37:39,070 --> 00:37:44,920
random number and it can it can also

00:37:41,710 --> 00:37:46,180
then rotate this through every desired

00:37:44,920 --> 00:37:48,670
interval i think it's every hour it

00:37:46,180 --> 00:37:50,800
reassigns so that you can use that for

00:37:48,670 --> 00:37:52,810
outgoing connections and they can't

00:37:50,800 --> 00:37:57,010
track you if it comes back and who owned

00:37:52,810 --> 00:37:58,420
that IP you know we don't know no the

00:37:57,010 --> 00:38:00,130
client is actually what's doing the

00:37:58,420 --> 00:38:05,800
reassignment of those ip's in when

00:38:00,130 --> 00:38:08,020
you're in slack so so the privacy

00:38:05,800 --> 00:38:10,150
concerns are now mitigated because you

00:38:08,020 --> 00:38:13,000
know it's generating a random number but

00:38:10,150 --> 00:38:15,060
the reason you know at unc we're trying

00:38:13,000 --> 00:38:16,980
to roll this out

00:38:15,060 --> 00:38:19,410
use that we can't really let that go

00:38:16,980 --> 00:38:22,380
because one of our security policies is

00:38:19,410 --> 00:38:24,330
that we have to be able to say okay some

00:38:22,380 --> 00:38:25,860
someone has done something bad it

00:38:24,330 --> 00:38:28,500
occurred at this time stamp and it came

00:38:25,860 --> 00:38:31,170
from this IP we need to be able to take

00:38:28,500 --> 00:38:32,910
those two bits of information go back

00:38:31,170 --> 00:38:34,620
through whatever mechanism we have in

00:38:32,910 --> 00:38:36,420
our case it's a lot of logs and dhcp

00:38:34,620 --> 00:38:39,210
server matching to be able to okay

00:38:36,420 --> 00:38:41,190
that's the person who had that IP at

00:38:39,210 --> 00:38:44,310
that time we will go have a chat with

00:38:41,190 --> 00:38:49,530
them this breaks all that so we can't

00:38:44,310 --> 00:38:54,120
roll this out and the dhcpv6 doesn't use

00:38:49,530 --> 00:38:56,430
the notion of a mac address the duid go

00:38:54,120 --> 00:38:57,330
you could go hours on that so long story

00:38:56,430 --> 00:39:00,000
short we don't have an answer for that

00:38:57,330 --> 00:39:01,260
yet and it's very frustrating which is

00:39:00,000 --> 00:39:03,710
why we haven't rolled this out to the

00:39:01,260 --> 00:39:03,710
clients yet

00:39:08,930 --> 00:39:13,069
the client could change its MAC address

00:39:10,970 --> 00:39:14,569
and the client could actually just nice

00:39:13,069 --> 00:39:16,550
Lee there's a much larger space to to

00:39:14,569 --> 00:39:18,740
the 64 to just pick a random address

00:39:16,550 --> 00:39:21,339
from so in theory yes that could happen

00:39:18,740 --> 00:39:24,680
and you could do that in before now I

00:39:21,339 --> 00:39:25,970
think they said the networking office

00:39:24,680 --> 00:39:28,720
had the number of times they've seen

00:39:25,970 --> 00:39:31,640
that in the last 10 years has been zero

00:39:28,720 --> 00:39:35,119
so admittedly it is kind of to keep the

00:39:31,640 --> 00:39:36,920
honest people honest but it's been good

00:39:35,119 --> 00:39:39,380
enough for compliance purposes to be

00:39:36,920 --> 00:39:43,220
able to have that trait trackback in

00:39:39,380 --> 00:39:44,990
terms of you know timestamp IP person is

00:39:43,220 --> 00:39:49,940
just unfortunately don't have a good

00:39:44,990 --> 00:39:51,859
clean pathway for that yet 4 p-6 there's

00:39:49,940 --> 00:39:53,240
some notion of using 80 to 1 X 4 port

00:39:51,859 --> 00:39:55,670
level authentication but not everything

00:39:53,240 --> 00:39:57,140
has a supplicant if you've had to deal

00:39:55,670 --> 00:40:00,950
with any windows clients they're

00:39:57,140 --> 00:40:02,480
supplicants support is hit or miss so

00:40:00,950 --> 00:40:04,430
you get into a lot of those issues so

00:40:02,480 --> 00:40:07,190
we're trying to come up with some system

00:40:04,430 --> 00:40:09,470
that is generic enough that all the OSS

00:40:07,190 --> 00:40:12,589
can get on the user has to do a minimal

00:40:09,470 --> 00:40:14,210
amount if any interaction right now we

00:40:12,589 --> 00:40:15,859
basically have a go to web page register

00:40:14,210 --> 00:40:18,770
their mac address before they can get on

00:40:15,859 --> 00:40:22,059
to the system but we're just

00:40:18,770 --> 00:40:22,059
unfortunately not there yet

00:40:31,770 --> 00:40:33,830
I

00:40:41,160 --> 00:40:46,300
right so the question is how do you do

00:40:43,570 --> 00:40:48,430
firewalls and sort of the notion of

00:40:46,300 --> 00:40:50,650
keeping with a pro right now you've

00:40:48,430 --> 00:40:52,690
gotten that you've got a address space

00:40:50,650 --> 00:40:54,550
that is never routed well the good news

00:40:52,690 --> 00:40:57,190
is your firewall you know that that

00:40:54,550 --> 00:40:58,900
route point will still be there it will

00:40:57,190 --> 00:41:00,550
just serve as a firewall instead of

00:40:58,900 --> 00:41:02,260
translating the addresses you can still

00:41:00,550 --> 00:41:04,060
inspect the packets as they come by

00:41:02,260 --> 00:41:05,680
because it's still a routing decision so

00:41:04,060 --> 00:41:07,960
you can say you know this junk of my

00:41:05,680 --> 00:41:10,450
space only allow these ports or this

00:41:07,960 --> 00:41:12,310
chunk of my space don't even well and

00:41:10,450 --> 00:41:14,710
don't even allow anything in only allow

00:41:12,310 --> 00:41:16,120
my outbound and any related traffic as

00:41:14,710 --> 00:41:18,040
you can still do the stateful packet

00:41:16,120 --> 00:41:20,050
inspection that's what really makes it

00:41:18,040 --> 00:41:23,560
so powerful that's that with a jump

00:41:20,050 --> 00:41:25,780
allow established related I think it is

00:41:23,560 --> 00:41:27,460
in iptables you can still do that in v6

00:41:25,780 --> 00:41:29,620
you can have a network that says only

00:41:27,460 --> 00:41:31,810
let clients go out and only process

00:41:29,620 --> 00:41:34,710
their answers so you still get that same

00:41:31,810 --> 00:41:37,780
level of the state fulness that it has

00:41:34,710 --> 00:41:39,370
but you're still able to then see the

00:41:37,780 --> 00:41:44,200
endpoints very easily you don't have to

00:41:39,370 --> 00:41:45,460
look at a translation table see so you

00:41:44,200 --> 00:41:46,720
don't have to just worry about port

00:41:45,460 --> 00:41:49,540
forwarding you can basically say at the

00:41:46,720 --> 00:41:50,680
border you know allow these ports if you

00:41:49,540 --> 00:41:53,550
want you don't have to forward them you

00:41:50,680 --> 00:41:53,550
just say allow them through

00:42:00,510 --> 00:42:06,849
on the Red Hat it's at csis config IP

00:42:03,880 --> 00:42:08,410
tables i think at csis config IP six

00:42:06,849 --> 00:42:15,609
tables is there but I'm not entirely

00:42:08,410 --> 00:42:18,160
certain oh the the sort of assistive

00:42:15,609 --> 00:42:19,150
tool yeah so you have system config I

00:42:18,160 --> 00:42:20,890
think it's actually since of config

00:42:19,150 --> 00:42:24,519
firewall now that i think about it yeah

00:42:20,890 --> 00:42:26,589
system config firewall I'm not sure I

00:42:24,519 --> 00:42:33,819
haven't actually tried it we should do

00:42:26,589 --> 00:42:36,970
that sometime advice for a good iptables

00:42:33,819 --> 00:42:38,440
generator I don't I'm a bit of a purist

00:42:36,970 --> 00:42:42,190
I like to actually muck around the

00:42:38,440 --> 00:42:44,859
iptables I know our lug on our services

00:42:42,190 --> 00:42:46,869
uses char wall and I have gone in there

00:42:44,859 --> 00:42:49,029
and set up the equivalent v6 rules once

00:42:46,869 --> 00:42:51,579
we brought up our Tom connectivity so

00:42:49,029 --> 00:42:54,519
there is enough parody they're basically

00:42:51,579 --> 00:42:56,500
if you have one that's you're familiar

00:42:54,519 --> 00:42:59,319
with that you are comfortable with envy

00:42:56,500 --> 00:43:01,089
for go see if they have v6 support if

00:42:59,319 --> 00:43:03,990
they don't maybe you can encourage them

00:43:01,089 --> 00:43:03,990
to kind of bring that along

00:43:17,210 --> 00:43:21,990
so the question is if you know you call

00:43:19,920 --> 00:43:24,090
time warner you get your v6 address and

00:43:21,990 --> 00:43:26,910
they turn it on and who does the gateway

00:43:24,090 --> 00:43:28,080
well in Time Warner's case with any luck

00:43:26,910 --> 00:43:29,580
they're going to give you dual stack so

00:43:28,080 --> 00:43:31,260
you're still going to have both a public

00:43:29,580 --> 00:43:32,910
before dress that you'll still be able

00:43:31,260 --> 00:43:34,680
to nap through like you already do and

00:43:32,910 --> 00:43:38,040
you'll have your v6 that you can then

00:43:34,680 --> 00:43:42,810
wrap through now in the case of t-mobile

00:43:38,040 --> 00:43:45,060
on their v6 trials because of the way 3g

00:43:42,810 --> 00:43:48,210
works you can only have one address

00:43:45,060 --> 00:43:49,920
ether of equal or v6 there is actually a

00:43:48,210 --> 00:43:52,080
mechanism where t-mobile has done this a

00:43:49,920 --> 00:43:56,550
couple other sites have done this where

00:43:52,080 --> 00:44:00,060
there is a nat64 so if you're a v6 only

00:43:56,550 --> 00:44:03,510
they basically map the entire ipv4 space

00:44:00,060 --> 00:44:06,440
into the last 32 off debts of the of the

00:44:03,510 --> 00:44:06,440
address space here

00:44:10,850 --> 00:44:17,340
so you know they basically take these

00:44:13,110 --> 00:44:19,860
last bits and represent the ipv4 address

00:44:17,340 --> 00:44:20,910
as hex and then the trick they have to

00:44:19,860 --> 00:44:22,650
be able to do and be able to pull this

00:44:20,910 --> 00:44:25,590
off is you have to use their dns

00:44:22,650 --> 00:44:29,400
resolver so when when it makes the DNS

00:44:25,590 --> 00:44:31,830
request for a quad a record it then goes

00:44:29,400 --> 00:44:34,310
out and asks and if it only gets back in

00:44:31,830 --> 00:44:37,860
a record it takes that IP address

00:44:34,310 --> 00:44:39,630
responds with the 32-bit encoded address

00:44:37,860 --> 00:44:42,420
with their address space as a quad a

00:44:39,630 --> 00:44:44,100
record and then your machine happily

00:44:42,420 --> 00:44:46,350
makes the connection and for about

00:44:44,100 --> 00:44:48,360
ninety nine percent of your applications

00:44:46,350 --> 00:44:50,400
actually works pretty nicely I've done

00:44:48,360 --> 00:44:54,180
some test trials of this on my test nets

00:44:50,400 --> 00:44:56,670
at home and works great there are some

00:44:54,180 --> 00:44:59,310
caveats how things like skype and I get

00:44:56,670 --> 00:45:01,530
some of the other voice over IP but we

00:44:59,310 --> 00:45:03,660
know any sort of direct link tools they

00:45:01,530 --> 00:45:05,580
like to encode the dotted quads so you

00:45:03,660 --> 00:45:08,700
may be able to do a dns resolution of

00:45:05,580 --> 00:45:09,750
the sort of handover point and you can

00:45:08,700 --> 00:45:12,870
get connected to that and then it says

00:45:09,750 --> 00:45:14,610
ok go talk to one two three to four well

00:45:12,870 --> 00:45:16,020
you try and open up a socket connection

00:45:14,610 --> 00:45:19,460
to one two three four you don't have a

00:45:16,020 --> 00:45:19,460
route you're right back to

00:45:22,130 --> 00:45:29,420
that and of course since you only think

00:45:27,410 --> 00:45:34,309
you have a v6 address yeah you can get

00:45:29,420 --> 00:45:39,619
to v4 if you know to do 2001 db8 you

00:45:34,309 --> 00:45:40,789
know c 00 00 to FF or whatever but the

00:45:39,619 --> 00:45:42,970
application doesn't have that level of

00:45:40,789 --> 00:45:42,970
knowledge

00:45:48,490 --> 00:45:51,980
realistically speaking yes it's going to

00:45:50,360 --> 00:45:55,340
be quite a while yet before we can

00:45:51,980 --> 00:45:58,910
actually have a pure v6 system I know

00:45:55,340 --> 00:46:01,130
somebody mentioned BSD there was there's

00:45:58,910 --> 00:46:04,040
even some issues with even the local

00:46:01,130 --> 00:46:05,690
loop machines freebsd the reason i bring

00:46:04,040 --> 00:46:09,020
that up is they have actually started to

00:46:05,690 --> 00:46:10,940
do trials with a kernel that does not

00:46:09,020 --> 00:46:13,400
have any ipv4 compiled into it

00:46:10,940 --> 00:46:15,140
whatsoever just to see how it's going to

00:46:13,400 --> 00:46:16,130
behave because you know someday this

00:46:15,140 --> 00:46:18,860
will be the norm but they've already

00:46:16,130 --> 00:46:21,530
started that work but I know I have some

00:46:18,860 --> 00:46:24,290
my some of my various demons on even on

00:46:21,530 --> 00:46:27,410
my lint out there compiled will listen

00:46:24,290 --> 00:46:29,030
to 127 001 and only one 2701 they don't

00:46:27,410 --> 00:46:38,300
have the ability to bind to cone cone

00:46:29,030 --> 00:46:39,710
one pearl I'm looking at you so he's

00:46:38,300 --> 00:46:42,110
asking about things like printers other

00:46:39,710 --> 00:46:44,360
embedded devices yeah you're going to

00:46:42,110 --> 00:46:46,760
have devices out there that only have an

00:46:44,360 --> 00:46:48,560
embedded V for stack that's the joys of

00:46:46,760 --> 00:46:52,190
working with a bit even even our phones

00:46:48,560 --> 00:46:54,350
you know you because the IP stack is

00:46:52,190 --> 00:46:57,260
down essentially right next to the radio

00:46:54,350 --> 00:47:00,080
firmware my phone cannot yet a v6

00:46:57,260 --> 00:47:02,210
address even though t-mobile has the

00:47:00,080 --> 00:47:04,040
support on their network just radio just

00:47:02,210 --> 00:47:05,840
has no knowledge of it so you're going

00:47:04,040 --> 00:47:07,720
to have a lot of things where maybe you

00:47:05,840 --> 00:47:10,160
can get some kind of a firmware upgrade

00:47:07,720 --> 00:47:11,090
from your vendor hopefully maybe but

00:47:10,160 --> 00:47:12,620
yeah you're going to have a lot of

00:47:11,090 --> 00:47:14,720
things out there that are just still

00:47:12,620 --> 00:47:16,700
before forever so you're probably still

00:47:14,720 --> 00:47:17,660
going to have a lot of private space you

00:47:16,700 --> 00:47:23,300
have to do some kind of application

00:47:17,660 --> 00:47:24,380
level proxy or getting hardware which

00:47:23,300 --> 00:47:25,460
i'm sure the vendors are loving cuz that

00:47:24,380 --> 00:47:27,200
means you get to spend more money with

00:47:25,460 --> 00:47:29,680
them but yeah who has that kind of money

00:47:27,200 --> 00:47:29,680
in this economy

00:47:36,150 --> 00:47:40,720
well launch day was pretty much the last

00:47:38,740 --> 00:47:43,000
one I've heard of and it's you know so

00:47:40,720 --> 00:47:45,220
if basic thing this is the new normal so

00:47:43,000 --> 00:47:51,609
the next event is you go home and you go

00:47:45,220 --> 00:47:53,830
turn it on is there going to be an ipv

00:47:51,609 --> 00:47:55,599
turn up for turn off I would love to see

00:47:53,830 --> 00:47:59,140
that I would I think that would be a

00:47:55,599 --> 00:48:00,760
really fun exercise I don't know I

00:47:59,140 --> 00:48:02,500
really don't know if there's is there's

00:48:00,760 --> 00:48:03,760
any gonna be any such thing we're just

00:48:02,500 --> 00:48:05,859
still really trying to convince people

00:48:03,760 --> 00:48:07,599
that you know go turn this on go see how

00:48:05,859 --> 00:48:12,820
it's gonna be so are we about out of

00:48:07,599 --> 00:48:14,470
time no we can keep going all right got

00:48:12,820 --> 00:48:15,970
about 10 minutes any other questions or

00:48:14,470 --> 00:48:17,470
I know it's coming up to lunchtime if

00:48:15,970 --> 00:48:21,460
you guys want to go get some food I

00:48:17,470 --> 00:48:23,820
understand all right thank you all so

00:48:21,460 --> 00:48:23,820
much for coming

00:48:29,290 --> 00:48:32,590
just before

00:49:26,190 --> 00:49:32,640
how's that sigh every way this is the

00:49:29,340 --> 00:49:34,800
way to better utilize all your resources

00:49:32,640 --> 00:49:38,250
and it makes managing all your resources

00:49:34,800 --> 00:49:42,080
pretty easy all of the innovation is

00:49:38,250 --> 00:49:45,600
happening in open source the

00:49:42,080 --> 00:49:47,400
collaborative nature and of the you know

00:49:45,600 --> 00:49:49,530
of the community and the speed at which

00:49:47,400 --> 00:49:51,510
these are these you know these these

00:49:49,530 --> 00:49:53,580
deficiencies these bugs are getting

00:49:51,510 --> 00:49:56,160
discovered and then fixed is that I

00:49:53,580 --> 00:49:58,980
think that really shows the power of the

00:49:56,160 --> 00:50:00,750
you know of the open source community it

00:49:58,980 --> 00:50:04,950
is global and it's definitely because of

00:50:00,750 --> 00:50:11,280
the users community people are extremely

00:50:04,950 --> 00:50:13,050
friendly and always ready to help if you

00:50:11,280 --> 00:50:14,640
go an entire see any day you'll see

00:50:13,050 --> 00:50:16,590
these guys helping each other out and

00:50:14,640 --> 00:50:19,500
they're all doing it like in a selfless

00:50:16,590 --> 00:50:21,330
manner the product is transparent for

00:50:19,500 --> 00:50:25,530
everyone everyone can look at the code

00:50:21,330 --> 00:50:27,570
base everyone can see how close darkest

00:50:25,530 --> 00:50:33,420
is being built nothing nothing is

00:50:27,570 --> 00:50:36,090
proprietary everything is open in many

00:50:33,420 --> 00:50:40,290
ways it's absolutely vital to the the

00:50:36,090 --> 00:50:44,040
ongoing health I'll stack the most

00:50:40,290 --> 00:50:47,850
exciting event in recent memory for me

00:50:44,040 --> 00:50:50,580
was our first developer boot camp

00:50:47,850 --> 00:50:53,250
and our call gave people I gave you two

00:50:50,580 --> 00:50:57,210
weeks notice to come attend I was

00:50:53,250 --> 00:51:01,380
expecting 25 or 30 people so we ended up

00:50:57,210 --> 00:51:04,200
with 87 people and had to go get more

00:51:01,380 --> 00:51:06,750
chairs into the room twice everything

00:51:04,200 --> 00:51:09,990
within cloud computing is commodity and

00:51:06,750 --> 00:51:13,050
is open source and so I don't think that

00:51:09,990 --> 00:51:14,820
you will you'll see anywhere where open

00:51:13,050 --> 00:51:17,850
source is not pervasive in cloud

00:51:14,820 --> 00:51:20,400
computing and so i think it's i think

00:51:17,850 --> 00:51:21,900
it's an assumption i think when you talk

00:51:20,400 --> 00:51:23,040
about cloud computing you're really

00:51:21,900 --> 00:51:28,590
talking about open source cloud

00:51:23,040 --> 00:51:31,620
computing cloud sac is a robust solution

00:51:28,590 --> 00:51:33,750
for large deployments you'll have dozens

00:51:31,620 --> 00:51:38,010
of data centers and thousands of servers

00:51:33,750 --> 00:51:40,710
in each data centers these hardware is

00:51:38,010 --> 00:51:44,190
going to fail and CloudStack is designed

00:51:40,710 --> 00:51:46,890
to handle number one that mass scale

00:51:44,190 --> 00:51:50,070
number two it's designed to handle the

00:51:46,890 --> 00:51:52,620
failure that inevitably happens in large

00:51:50,070 --> 00:51:56,160
deployments started working on cog

00:51:52,620 --> 00:51:59,490
attack over four years ago and it was

00:51:56,160 --> 00:52:02,160
the original set of people working on it

00:51:59,490 --> 00:52:06,270
had a background of delivering software

00:52:02,160 --> 00:52:10,530
telcos and service providers lots of QA

00:52:06,270 --> 00:52:14,130
lots of users actually using it high

00:52:10,530 --> 00:52:17,220
availability is a key feature multiple

00:52:14,130 --> 00:52:19,380
hypervisors support different network

00:52:17,220 --> 00:52:22,410
models we can pick up whatever suits you

00:52:19,380 --> 00:52:24,180
better while step management server can

00:52:22,410 --> 00:52:27,870
be deployed in different physical

00:52:24,180 --> 00:52:29,520
machines it definitely has a huge

00:52:27,870 --> 00:52:34,500
footprint it's being deployed everywhere

00:52:29,520 --> 00:52:37,080
there's a major movie studio that they

00:52:34,500 --> 00:52:40,290
were using cloudstack they were using it

00:52:37,080 --> 00:52:42,360
to transcode video and I thought that

00:52:40,290 --> 00:52:44,010
was terribly fascinating what I found

00:52:42,360 --> 00:52:47,280
more fascinating is what they did during

00:52:44,010 --> 00:52:50,070
lunch where they would spin up you know

00:52:47,280 --> 00:52:51,240
50 or 60 game servers then as soon as

00:52:50,070 --> 00:52:53,070
lunch was over they would

00:52:51,240 --> 00:52:57,180
all the instances and go back to doing

00:52:53,070 --> 00:52:58,830
real work CloudStack is vast it touches

00:52:57,180 --> 00:53:00,900
so many different aspects and there's no

00:52:58,830 --> 00:53:03,270
one person that's kind of like a master

00:53:00,900 --> 00:53:07,380
of all those realms I think clouds stack

00:53:03,270 --> 00:53:09,600
as a project is going to be one of the

00:53:07,380 --> 00:53:13,680
leaders simply because it's some of the

00:53:09,600 --> 00:53:19,110
most feature fallen and and robust

00:53:13,680 --> 00:53:22,010
platforms out they were I don't senior

00:53:19,110 --> 00:53:22,010
living through the clouds dag

00:54:10,870 --> 00:54:15,950
when we created asterisk over a decade

00:54:13,580 --> 00:54:17,900
ago we could not have imagined that

00:54:15,950 --> 00:54:20,090
asterisk would not only become the most

00:54:17,900 --> 00:54:22,250
widely adopted open source communication

00:54:20,090 --> 00:54:24,290
software on the planet but that it would

00:54:22,250 --> 00:54:26,810
impact the entire industry in the way

00:54:24,290 --> 00:54:28,790
that it has today asterisk has found its

00:54:26,810 --> 00:54:31,400
way in the more than 170 countries and

00:54:28,790 --> 00:54:33,380
virtually every fortune 1000 company the

00:54:31,400 --> 00:54:35,480
success of asterisk has enabled a

00:54:33,380 --> 00:54:36,860
transition of power from the hands of

00:54:35,480 --> 00:54:39,140
the traditional proprietary phone

00:54:36,860 --> 00:54:41,540
vendors into the hands of the users and

00:54:39,140 --> 00:54:43,460
administrators of phone systems using

00:54:41,540 --> 00:54:44,690
this power our customers have created

00:54:43,460 --> 00:54:46,640
all sorts of business changing

00:54:44,690 --> 00:54:48,500
applications from small office phone

00:54:46,640 --> 00:54:51,020
systems to mission-critical call centres

00:54:48,500 --> 00:54:52,610
to international carrier networks in

00:54:51,020 --> 00:54:54,410
fact there's even an entire country

00:54:52,610 --> 00:54:56,990
those communications infrastructure runs

00:54:54,410 --> 00:54:58,910
on esters the gym has always been about

00:54:56,990 --> 00:55:00,620
creating technology that expands

00:54:58,910 --> 00:55:02,810
communications capabilities in ways that

00:55:00,620 --> 00:55:04,010
we could never have imagined and that's

00:55:02,810 --> 00:55:06,380
part of what's game-changing about

00:55:04,010 --> 00:55:09,080
Digium today we're doing it again this

00:55:06,380 --> 00:55:11,180
time by introducing a new family of HD

00:55:09,080 --> 00:55:13,310
IP phones that extends control of the

00:55:11,180 --> 00:55:15,050
user all the way to the desktop the

00:55:13,310 --> 00:55:16,760
launch of these new products represents

00:55:15,050 --> 00:55:18,740
the next phase in digium history of

00:55:16,760 --> 00:55:21,260
innovation these are the first and only

00:55:18,740 --> 00:55:22,970
IP phones designed to fully leverage the

00:55:21,260 --> 00:55:24,530
power of esters when we first discussed

00:55:22,970 --> 00:55:26,570
our expectations for building a family

00:55:24,530 --> 00:55:28,730
of phones for use with asterisk our

00:55:26,570 --> 00:55:30,440
requirements were pretty simple we asked

00:55:28,730 --> 00:55:32,090
the team to build the phones such that

00:55:30,440 --> 00:55:34,280
they were easy to install integrate

00:55:32,090 --> 00:55:36,140
provision and use I think you'll soon

00:55:34,280 --> 00:55:38,690
agree our engineers have delivered on

00:55:36,140 --> 00:55:40,340
that goal user feedback is validating

00:55:38,690 --> 00:55:42,440
that when it comes to operation with

00:55:40,340 --> 00:55:44,870
astro space systems including our own

00:55:42,440 --> 00:55:47,450
Switchvox based product these are the

00:55:44,870 --> 00:55:48,740
easiest to use best integrated most

00:55:47,450 --> 00:55:51,350
interoperable products on the market

00:55:48,740 --> 00:55:53,320
today the Digium family of phones will

00:55:51,350 --> 00:55:55,400
initially include three IP des hommes

00:55:53,320 --> 00:55:57,320
uniquely designed to complement any

00:55:55,400 --> 00:55:59,210
asterisk or Switchvox based solution

00:55:57,320 --> 00:56:01,850
these phones are different for a number

00:55:59,210 --> 00:56:04,520
of reasons first there is clue sively

00:56:01,850 --> 00:56:05,930
designed for use with esters secondly

00:56:04,520 --> 00:56:07,570
we've made it really easy to

00:56:05,930 --> 00:56:09,950
autodiscover and provision the phones

00:56:07,570 --> 00:56:11,630
next we've made it easy for the phones

00:56:09,950 --> 00:56:13,460
to access information inside of

00:56:11,630 --> 00:56:15,580
asterisks allowing tight couple

00:56:13,460 --> 00:56:17,570
between an application and the phone

00:56:15,580 --> 00:56:19,730
additionally we've created an

00:56:17,570 --> 00:56:21,830
applications engineer that allows users

00:56:19,730 --> 00:56:25,070
and developers to create and run their

00:56:21,830 --> 00:56:26,839
own apps on the phone and finally we've

00:56:25,070 --> 00:56:28,790
done all of this at a very compelling

00:56:26,839 --> 00:56:30,470
price point at Digium we're always

00:56:28,790 --> 00:56:32,570
thinking of ways to give our customers

00:56:30,470 --> 00:56:35,089
the best value in business phone systems

00:56:32,570 --> 00:56:36,710
and also give them the power to create

00:56:35,089 --> 00:56:38,839
their own solutions or any

00:56:36,710 --> 00:56:40,580
communications challenge well continue

00:56:38,839 --> 00:56:42,020
to push the boundaries not only to make

00:56:40,580 --> 00:56:44,060
astros cooler bastard more

00:56:42,020 --> 00:56:45,680
technologically feature-rich but to make

00:56:44,060 --> 00:56:48,140
asterisk and web communications even

00:56:45,680 --> 00:56:51,550
easier and together we'll change the way

00:56:48,140 --> 00:56:51,550

YouTube URL: https://www.youtube.com/watch?v=QgPYcXhH4n8


