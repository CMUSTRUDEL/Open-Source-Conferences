Title: 2012 SouthEast LinuxFest - Jayneil Dalal - Image Processing Using The PandaBoard
Publication date: 2013-05-06
Playlist: 2012 SouthEast LinuxFest
Description: 
	2012 SouthEast LinuxFest
Jayneil Dalal
Image Processing Using The PandaBoard
Captions: 
	00:00:00,000 --> 00:00:05,310
the following presentation was recorded

00:00:02,520 --> 00:00:08,069
the 2012 southeast linux fest in

00:00:05,310 --> 00:00:10,440
charlotte north carolina it is licensed

00:00:08,069 --> 00:00:12,120
under a creative commons license for

00:00:10,440 --> 00:00:17,609
more information about the southeast

00:00:12,120 --> 00:00:19,470
linux fest visit w wh linux pc org the

00:00:17,609 --> 00:00:22,350
southeast linux fest would like to thank

00:00:19,470 --> 00:00:26,480
the following diamond sponsors in 2012

00:00:22,350 --> 00:00:26,480
for helping make these videos possible

00:01:01,660 --> 00:01:03,720
you

00:02:04,070 --> 00:02:11,430
yeah and currently if you're following a

00:02:10,110 --> 00:02:13,950
lot of blocks a lot of people are doing

00:02:11,430 --> 00:02:17,670
a lot of work on connect and you know

00:02:13,950 --> 00:02:20,000
they're making quadcopters and devices

00:02:17,670 --> 00:02:22,350
that interact with the environment and

00:02:20,000 --> 00:02:24,330
most of the work that I've seen on

00:02:22,350 --> 00:02:27,290
computer vision we can regarding

00:02:24,330 --> 00:02:30,030
recognizing your face or your gesture or

00:02:27,290 --> 00:02:32,100
detecting sign languages so they do

00:02:30,030 --> 00:02:34,230
mostly on you know your computer or

00:02:32,100 --> 00:02:36,180
standalone system so what happens is

00:02:34,230 --> 00:02:37,950
that if you have this kind of system if

00:02:36,180 --> 00:02:39,630
I have a system that detects your hand

00:02:37,950 --> 00:02:42,090
or your gestures if I do number one it

00:02:39,630 --> 00:02:45,030
should you know open up a door if I do

00:02:42,090 --> 00:02:46,920
number two then it should you know turn

00:02:45,030 --> 00:02:48,270
on the engine or something like that now

00:02:46,920 --> 00:02:50,160
the problem is that they'll have a

00:02:48,270 --> 00:02:52,459
standalone system that you cannot take

00:02:50,160 --> 00:02:54,840
it to other environment it's very

00:02:52,459 --> 00:02:56,400
restricted to one environment you cannot

00:02:54,840 --> 00:02:58,500
take it to different rooms or different

00:02:56,400 --> 00:03:00,420
places so what I want to show in my talk

00:02:58,500 --> 00:03:03,510
is that there are a lot of devices right

00:03:00,420 --> 00:03:05,430
now there are powerful enough and if you

00:03:03,510 --> 00:03:07,230
see the upcoming new smartphones or

00:03:05,430 --> 00:03:10,440
gadgets all of them are coming with

00:03:07,230 --> 00:03:12,810
faster processors more ram so day by day

00:03:10,440 --> 00:03:14,790
the size of the devices is getting

00:03:12,810 --> 00:03:17,370
smaller at the same time the performance

00:03:14,790 --> 00:03:20,040
is increasing so doing your computation

00:03:17,370 --> 00:03:25,799
work or your project on a platform like

00:03:20,040 --> 00:03:27,120
this is a wise choice so for now I'll

00:03:25,799 --> 00:03:29,910
tell you the topics that I'm going to

00:03:27,120 --> 00:03:32,010
cover in the talk so i'll give an

00:03:29,910 --> 00:03:33,750
overview of the pandaboard then there

00:03:32,010 --> 00:03:35,250
are a couple of accessories that you

00:03:33,750 --> 00:03:38,250
will need to buy before you can start

00:03:35,250 --> 00:03:40,799
developing on the Panda board then I

00:03:38,250 --> 00:03:44,040
will show you how to install the one to

00:03:40,799 --> 00:03:45,900
12.04 LTS on the Panda board then there

00:03:44,040 --> 00:03:47,760
are a couple of hacks you can do to

00:03:45,900 --> 00:03:51,000
increase your performance further on the

00:03:47,760 --> 00:03:53,160
Panda board then what is the opencv

00:03:51,000 --> 00:03:55,370
library then how you will install the

00:03:53,160 --> 00:03:58,250
latest version of opencv on pandaboard

00:03:55,370 --> 00:04:00,959
then i'll show you a few live demos and

00:03:58,250 --> 00:04:03,060
finally like have obviously because when

00:04:00,959 --> 00:04:05,100
you use such kind of hardware boards you

00:04:03,060 --> 00:04:07,890
will face a couple of problems your

00:04:05,100 --> 00:04:13,410
board might not boot up or you have some

00:04:07,890 --> 00:04:15,720
major so how to solve those areas okay

00:04:13,410 --> 00:04:16,470
so i'll just give a small overview of

00:04:15,720 --> 00:04:18,810
this board

00:04:16,470 --> 00:04:21,090
so as you can see that over here is your

00:04:18,810 --> 00:04:24,450
processor it has a 1 gigahertz dual-core

00:04:21,090 --> 00:04:26,400
processor it is a package on package so

00:04:24,450 --> 00:04:30,500
be neat on top of this processor you

00:04:26,400 --> 00:04:33,870
have the 1gb of RAM then you can play

00:04:30,500 --> 00:04:38,100
1080p full HD videos on it it also has a

00:04:33,870 --> 00:04:39,840
GPU that clocks at 304 megahertz it also

00:04:38,100 --> 00:04:44,790
has inbuilt digital signal processor

00:04:39,840 --> 00:04:46,890
then you have a Wi-Fi Bluetooth then UK

00:04:44,790 --> 00:04:50,880
you have the hdmi ports you also have

00:04:46,890 --> 00:04:53,220
the audio in and out connections then

00:04:50,880 --> 00:04:55,020
you also have an external connections

00:04:53,220 --> 00:04:57,120
you have the camera connector you have

00:04:55,020 --> 00:04:58,530
the serial port then you also have the

00:04:57,120 --> 00:05:00,240
expansion hitters over here so if you

00:04:58,530 --> 00:05:02,700
want to collect connect to some kind of

00:05:00,240 --> 00:05:04,980
external LCD you can do that using the

00:05:02,700 --> 00:05:07,290
STD expansion header and you have the

00:05:04,980 --> 00:05:09,000
normal expansion hitter and you also

00:05:07,290 --> 00:05:10,919
have the GPIO this is general purpose

00:05:09,000 --> 00:05:12,930
input/output pins you have to extend

00:05:10,919 --> 00:05:14,370
them they're not in by default there and

00:05:12,930 --> 00:05:16,770
you all said the serial port over there

00:05:14,370 --> 00:05:19,260
that i'm not using it right now but the

00:05:16,770 --> 00:05:22,200
serial port you basically use to see

00:05:19,260 --> 00:05:23,820
what's going on inside the pandaboard I

00:05:22,200 --> 00:05:26,370
mean sometimes what will happen is the

00:05:23,820 --> 00:05:28,919
board will not boot so to see what the

00:05:26,370 --> 00:05:31,440
problem actually is you will install

00:05:28,919 --> 00:05:34,140
some kind of serial terminal on your

00:05:31,440 --> 00:05:36,419
computer and observe what is actually

00:05:34,140 --> 00:05:38,070
going on and if you face problems you

00:05:36,419 --> 00:05:40,650
can post that output to the community

00:05:38,070 --> 00:05:43,080
and they'll get back to you I have the

00:05:40,650 --> 00:05:45,600
old one old pandaboard the new one is

00:05:43,080 --> 00:05:47,850
called pandaboard es the only difference

00:05:45,600 --> 00:05:49,650
is that the new one has a 1.2 gigahertz

00:05:47,850 --> 00:05:51,660
processor this one has a 1 gigahertz one

00:05:49,650 --> 00:05:53,310
that's the only difference everything

00:05:51,660 --> 00:05:55,590
else is the same and price difference is

00:05:53,310 --> 00:05:57,570
about twenty five dollar difference this

00:05:55,590 --> 00:06:05,580
one is for 175 dollars and the new one

00:05:57,570 --> 00:06:07,110
is for two hundred dollars now i'll talk

00:06:05,580 --> 00:06:08,820
about which are the major operating

00:06:07,110 --> 00:06:10,080
systems that i've tried pouring on the

00:06:08,820 --> 00:06:12,479
Panda board and which I have seen other

00:06:10,080 --> 00:06:14,280
people do it and now this does not mean

00:06:12,479 --> 00:06:16,590
that a particular operating system

00:06:14,280 --> 00:06:18,630
cannot be poured it to a panda board

00:06:16,590 --> 00:06:21,690
these are just the ones I'm sure that

00:06:18,630 --> 00:06:24,570
they can be you can run them on the

00:06:21,690 --> 00:06:27,720
Panda board or I've seen them you can

00:06:24,570 --> 00:06:29,150
you know run almost majority of the

00:06:27,720 --> 00:06:32,600
versions of Ubuntu starting

00:06:29,150 --> 00:06:35,690
10.04 you can run android on it you can

00:06:32,600 --> 00:06:43,340
run fedora open suse angstrom sabayon

00:06:35,690 --> 00:06:45,140
also on it now where do buy this you can

00:06:43,340 --> 00:06:47,180
just go on to the panda board or website

00:06:45,140 --> 00:06:50,960
and there are a lot of distributors for

00:06:47,180 --> 00:06:52,220
them as photonics you have arrow and a

00:06:50,960 --> 00:06:54,260
lot of the distributor so you can select

00:06:52,220 --> 00:07:00,590
which one is the nearest to you and you

00:06:54,260 --> 00:07:02,420
can order from them so before starting

00:07:00,590 --> 00:07:04,640
your development work on the panel board

00:07:02,420 --> 00:07:08,480
you need to buy a few accessories so

00:07:04,640 --> 00:07:10,610
first you need an hdmi cable then you

00:07:08,480 --> 00:07:13,250
need an external DC power supply of 5

00:07:10,610 --> 00:07:15,500
volt you need a USB hub if you want to

00:07:13,250 --> 00:07:17,870
connect more external you know if you

00:07:15,500 --> 00:07:19,640
don't kind of your keyboard or mouse

00:07:17,870 --> 00:07:24,890
because this only has by default two USB

00:07:19,640 --> 00:07:27,230
ports ya know you gotta buy it on your

00:07:24,890 --> 00:07:30,050
own you only get this board that's it

00:07:27,230 --> 00:07:31,760
you don't get anything else ok the

00:07:30,050 --> 00:07:33,950
question was if you get a power supply

00:07:31,760 --> 00:07:38,000
with the panda board the answer is no

00:07:33,950 --> 00:07:39,800
you only get the board then I would

00:07:38,000 --> 00:07:42,530
recommend that you buy an 8gb microSD

00:07:39,800 --> 00:07:44,630
card or normal SD card usually what

00:07:42,530 --> 00:07:46,490
happens in the 4gb microsd cards you run

00:07:44,630 --> 00:07:48,260
out of space if you want to install

00:07:46,490 --> 00:07:51,710
further applications so i recommend that

00:07:48,260 --> 00:07:57,500
you buy an 8gb microSD card and you need

00:07:51,710 --> 00:07:59,570
to buy a serial to USB cables well so

00:07:57,500 --> 00:08:01,790
installing ubuntu 12.04 and pandaboard

00:07:59,570 --> 00:08:04,460
well the procedure is very long it took

00:08:01,790 --> 00:08:06,020
me about one hour or so or more for

00:08:04,460 --> 00:08:08,000
ubuntu install on this so i cannot show

00:08:06,020 --> 00:08:10,430
your live demo but i have listed down

00:08:08,000 --> 00:08:13,790
all the steps so first you will need to

00:08:10,430 --> 00:08:17,390
go to the Ubuntu website and download

00:08:13,790 --> 00:08:18,770
their latest release and the reason I

00:08:17,390 --> 00:08:20,770
recommend using the latest version is

00:08:18,770 --> 00:08:24,260
that they have solved a lot of bugs I

00:08:20,770 --> 00:08:25,610
tried running 11.04 first but I could

00:08:24,260 --> 00:08:29,690
not get it to do so so that's why i

00:08:25,610 --> 00:08:31,640
shipped it to 12.04 then you need to

00:08:29,690 --> 00:08:33,650
download the texas instruments omap for

00:08:31,640 --> 00:08:35,930
now this is based on the texas

00:08:33,650 --> 00:08:37,460
instrument omap platform now there are

00:08:35,930 --> 00:08:40,130
different versions like the beagleboard

00:08:37,460 --> 00:08:42,289
is based on omap 3 this is a map for so

00:08:40,130 --> 00:08:44,870
you need to install the omap4 version

00:08:42,289 --> 00:08:48,230
then you need to insert your SD card and

00:08:44,870 --> 00:08:51,620
make sure that it's not mounted then you

00:08:48,230 --> 00:08:53,360
need to navigate to the folder or the

00:08:51,620 --> 00:08:58,459
directory where you download it in the

00:08:53,360 --> 00:09:00,110
ISO image then you just need to type the

00:08:58,459 --> 00:09:02,120
following code what this code will

00:09:00,110 --> 00:09:03,949
basically do is that it will develop all

00:09:02,120 --> 00:09:05,569
the file system for you or make prepare

00:09:03,949 --> 00:09:07,970
the SD card for booting on the panel

00:09:05,569 --> 00:09:09,110
board that's what this does because when

00:09:07,970 --> 00:09:12,009
you download the image it's kind of

00:09:09,110 --> 00:09:13,970
compressed so you need to unpack it and

00:09:12,009 --> 00:09:15,529
install the file system everything on

00:09:13,970 --> 00:09:17,720
the Panda board so this is what this

00:09:15,529 --> 00:09:19,819
command over here does and before

00:09:17,720 --> 00:09:21,470
booting on the mooting the panda board

00:09:19,819 --> 00:09:23,779
you have to install mini-com for the

00:09:21,470 --> 00:09:25,399
first time in case you get some errors

00:09:23,779 --> 00:09:27,319
or there are some problems to know that

00:09:25,399 --> 00:09:29,449
you have to info mini-com but that is

00:09:27,319 --> 00:09:30,680
where you will see ok this is the error

00:09:29,449 --> 00:09:32,300
that you're getting if you do not

00:09:30,680 --> 00:09:34,399
install mini-com you can not know like

00:09:32,300 --> 00:09:37,850
what why it's not booting up or what's

00:09:34,399 --> 00:09:38,959
the problem and then you usually need to

00:09:37,850 --> 00:09:40,250
connect the SD card and other

00:09:38,959 --> 00:09:42,649
accessories that I've connected over

00:09:40,250 --> 00:09:45,019
here and just boot up the pan de Bourgh

00:09:42,649 --> 00:09:48,790
and installation for 12 will be the same

00:09:45,019 --> 00:09:48,790
as you would do on your normal computer

00:09:48,819 --> 00:09:53,420
and in case some of you don't know what

00:09:51,769 --> 00:09:55,190
is Ubuntu I mean in case you guys don't

00:09:53,420 --> 00:09:56,810
know I have also made a video like one

00:09:55,190 --> 00:09:58,100
hour video that covers all the topics

00:09:56,810 --> 00:10:05,779
including how to install windows

00:09:58,100 --> 00:10:07,130
application on 12 using mine so these

00:10:05,779 --> 00:10:09,290
are just a few hacks that i found that

00:10:07,130 --> 00:10:10,220
increase your performance a little bit

00:10:09,290 --> 00:10:11,449
i'm not saying it increases the

00:10:10,220 --> 00:10:13,490
performance one hundred percent of two

00:10:11,449 --> 00:10:15,399
hundred percent but some of them really

00:10:13,490 --> 00:10:17,839
did increase my performance first of all

00:10:15,399 --> 00:10:19,819
and you want to there's a system called

00:10:17,839 --> 00:10:22,130
slap system so what this is basically

00:10:19,819 --> 00:10:24,589
this is kind of like your virtual ram so

00:10:22,130 --> 00:10:26,720
in case there's not enough space on the

00:10:24,589 --> 00:10:28,970
ramp to store your temporary files it

00:10:26,720 --> 00:10:31,089
uses the swap file system so what it

00:10:28,970 --> 00:10:34,040
does is that it uses your hard disk and

00:10:31,089 --> 00:10:35,720
creates a separate allocation where it

00:10:34,040 --> 00:10:39,920
stores your temporary files in case the

00:10:35,720 --> 00:10:41,240
RAM is full now in opa in pandaboard you

00:10:39,920 --> 00:10:44,209
have everything on a SD card and

00:10:41,240 --> 00:10:45,740
accessing the SD card is very slow so on

00:10:44,209 --> 00:10:48,230
top of it if you have slap it'll be

00:10:45,740 --> 00:10:51,199
further slow so you got to disable the

00:10:48,230 --> 00:10:53,750
swap file then there's a file system

00:10:51,199 --> 00:10:55,910
called tmpfs file system so what this

00:10:53,750 --> 00:10:58,490
does is that the most commonly acts

00:10:55,910 --> 00:11:01,490
documents or your temporary file systems

00:10:58,490 --> 00:11:04,240
are stored on your ram instead of

00:11:01,490 --> 00:11:06,200
accessing from sdcard the most commonly

00:11:04,240 --> 00:11:08,360
documents at you access will be stored

00:11:06,200 --> 00:11:10,040
on the RAM so the thing is that you'll

00:11:08,360 --> 00:11:12,680
get more faster access compared to

00:11:10,040 --> 00:11:16,190
accessing from SD card so that is the

00:11:12,680 --> 00:11:18,980
second hack you can do then now the 12

00:11:16,190 --> 00:11:21,560
12.04 comes with the default unity

00:11:18,980 --> 00:11:23,510
interface now the problem with this

00:11:21,560 --> 00:11:26,420
interface is that it's very heavy on the

00:11:23,510 --> 00:11:28,430
pan de Bourgh it's a little bit laggy so

00:11:26,420 --> 00:11:30,740
if you want more speed or more power

00:11:28,430 --> 00:11:32,840
than I recommend that you install x 12

00:11:30,740 --> 00:11:34,970
or any other lightweight desktop

00:11:32,840 --> 00:11:38,210
environment that you find comfortable

00:11:34,970 --> 00:11:40,370
with or and sometimes when you do very

00:11:38,210 --> 00:11:42,470
intensive applications your panda board

00:11:40,370 --> 00:11:44,930
might heat up so you might want to use a

00:11:42,470 --> 00:11:52,610
laptop cooler or a heat sink on top of

00:11:44,930 --> 00:11:56,570
the processor so now I'll talk about

00:11:52,610 --> 00:11:58,550
what is open CV so basically I'm sure

00:11:56,570 --> 00:12:01,730
most of you know a lot of tools like

00:11:58,550 --> 00:12:04,010
MATLAB or Scilab and other tools so

00:12:01,730 --> 00:12:05,780
basically open CV is similar to that and

00:12:04,010 --> 00:12:08,660
it's used for an image processing task

00:12:05,780 --> 00:12:10,970
and it actually grew out of an Intel

00:12:08,660 --> 00:12:13,460
research initiative and the main

00:12:10,970 --> 00:12:15,590
fundamental design behind designing this

00:12:13,460 --> 00:12:17,690
was that you don't have to develop

00:12:15,590 --> 00:12:19,490
everything from scratch if I want to

00:12:17,690 --> 00:12:21,350
detect your face let's say I have a

00:12:19,490 --> 00:12:23,000
video camera that's doing live video

00:12:21,350 --> 00:12:24,770
recording and I want to detect the faces

00:12:23,000 --> 00:12:27,290
inside it I don't want to develop the

00:12:24,770 --> 00:12:30,140
whole code from scratch so opencv has a

00:12:27,290 --> 00:12:32,180
lot of classifiers or machine learning

00:12:30,140 --> 00:12:34,070
algorithms so what you can do is as long

00:12:32,180 --> 00:12:36,260
as you know what's how the algorithm

00:12:34,070 --> 00:12:38,180
works you can just use the function very

00:12:36,260 --> 00:12:41,210
mentally so let's say you want to use a

00:12:38,180 --> 00:12:43,310
function to convert a normal image to

00:12:41,210 --> 00:12:46,190
black and white you can just use a

00:12:43,310 --> 00:12:48,530
ready-made function grayscale function

00:12:46,190 --> 00:12:50,710
to do that you don't need to design the

00:12:48,530 --> 00:12:53,390
whole function so that is what I

00:12:50,710 --> 00:12:55,460
recommend using opencv for and there are

00:12:53,390 --> 00:12:57,470
a lot of software's like MATLAB but they

00:12:55,460 --> 00:12:58,730
are very intensive I mean they require a

00:12:57,470 --> 00:13:00,560
lot of space for installation and

00:12:58,730 --> 00:13:03,680
they're not free this is completely free

00:13:00,560 --> 00:13:06,410
and development community behind it is

00:13:03,680 --> 00:13:08,240
reactive you have a lot of tutorials you

00:13:06,410 --> 00:13:09,290
a lot of code you have a lot of example

00:13:08,240 --> 00:13:10,820
codes there

00:13:09,290 --> 00:13:13,990
out of books on this to which you can

00:13:10,820 --> 00:13:16,759
read and figure out how to use opencv

00:13:13,990 --> 00:13:18,290
and you can use it for a lot of other

00:13:16,759 --> 00:13:19,850
applications i use it basically for

00:13:18,290 --> 00:13:25,220
image processing but you can use it for

00:13:19,850 --> 00:13:29,029
some other purpose is to now installing

00:13:25,220 --> 00:13:32,000
opencv 2.4 this is where most of people

00:13:29,029 --> 00:13:34,699
have problems you have to follow

00:13:32,000 --> 00:13:38,240
specific steps to install it otherwise

00:13:34,699 --> 00:13:39,980
you have some problems so I'm sure like

00:13:38,240 --> 00:13:41,750
a lot of a lot of you will not be able

00:13:39,980 --> 00:13:44,810
to read this but I will provide the

00:13:41,750 --> 00:13:47,540
slides and everything and I have made

00:13:44,810 --> 00:13:50,839
the presentation using so see it's

00:13:47,540 --> 00:13:52,519
another addition you can add to inkscape

00:13:50,839 --> 00:13:54,350
so what happens is that instead of

00:13:52,519 --> 00:13:55,730
normal boring presentations we just go

00:13:54,350 --> 00:13:57,800
left and right in word or openoffice

00:13:55,730 --> 00:14:00,170
this one actually lets you zoom in zoom

00:13:57,800 --> 00:14:02,209
out depending on what kind of and you

00:14:00,170 --> 00:14:04,630
can also add further cool effects I'm

00:14:02,209 --> 00:14:11,440
just using the zoomin feature right now

00:14:04,630 --> 00:14:11,440
all for the presentation so Z s 0 z I

00:14:11,709 --> 00:14:20,290
and you need to use it as something else

00:14:14,750 --> 00:14:22,339
it's not a standalone package okay so

00:14:20,290 --> 00:14:25,670
first you need to install all the

00:14:22,339 --> 00:14:27,500
prerequisites these are like to do

00:14:25,670 --> 00:14:29,930
processing on the video or the image you

00:14:27,500 --> 00:14:31,970
need some pre requested libraries so

00:14:29,930 --> 00:14:34,399
this over here i have read a lot of

00:14:31,970 --> 00:14:36,500
blogs and I've collected list of all the

00:14:34,399 --> 00:14:39,470
possible prerequisites you'll require to

00:14:36,500 --> 00:14:40,699
install this and you first of all you

00:14:39,470 --> 00:14:42,829
will first install all of the

00:14:40,699 --> 00:14:47,569
prerequisites then you will download the

00:14:42,829 --> 00:14:49,970
opencv 2.4 from the sourceforge now

00:14:47,569 --> 00:14:52,010
there's already a pre-compiled package

00:14:49,970 --> 00:14:53,420
in ubuntu you can install that way but i

00:14:52,010 --> 00:14:55,720
recommend this method so that you will

00:14:53,420 --> 00:14:58,310
get the most latest version in the

00:14:55,720 --> 00:15:00,019
repositories what happens is that the

00:14:58,310 --> 00:15:01,939
version is quite old sometimes it's not

00:15:00,019 --> 00:15:04,509
the latest one that's why I prefer this

00:15:01,939 --> 00:15:06,949
method and over you can also customize

00:15:04,509 --> 00:15:09,709
so once you download it that you need to

00:15:06,949 --> 00:15:11,300
extract to your home directory then

00:15:09,709 --> 00:15:13,279
using your terminal you need to navigate

00:15:11,300 --> 00:15:16,790
to the directory and all you need to do

00:15:13,279 --> 00:15:18,560
is type make you know you need to make

00:15:16,790 --> 00:15:20,480
another directory called build in which

00:15:18,560 --> 00:15:22,040
you'll be doing all this and then just

00:15:20,480 --> 00:15:22,760
type C make GUI so this will install

00:15:22,040 --> 00:15:25,220
open

00:15:22,760 --> 00:15:27,830
graphical interface where you can select

00:15:25,220 --> 00:15:30,710
the component which you want to be

00:15:27,830 --> 00:15:32,630
installed along with opencv and after

00:15:30,710 --> 00:15:34,610
that all you do is make and then to make

00:15:32,630 --> 00:15:37,610
the installation permanently this you

00:15:34,610 --> 00:15:40,550
sudo make install and then you just have

00:15:37,610 --> 00:15:41,600
to configure your local pads and

00:15:40,550 --> 00:15:45,320
everything so that you can use it

00:15:41,600 --> 00:15:48,280
library and if you follow this method

00:15:45,320 --> 00:15:51,890
you can also use the opencv with Python

00:15:48,280 --> 00:15:53,540
so as I've said over here if you follow

00:15:51,890 --> 00:15:55,640
this method you log into your Python

00:15:53,540 --> 00:15:58,370
command prompt and you just write import

00:15:55,640 --> 00:16:00,680
cv this will import the entire opencv

00:15:58,370 --> 00:16:01,790
library to python so you can use this

00:16:00,680 --> 00:16:06,050
library with your normal python

00:16:01,790 --> 00:16:07,340
programming i'm just going a bit fast

00:16:06,050 --> 00:16:09,020
because i want to show you live demos of

00:16:07,340 --> 00:16:12,980
six experiments so they'll also take a

00:16:09,020 --> 00:16:15,140
lot of time so this is just a few

00:16:12,980 --> 00:16:18,680
screenshots this is X Ubuntu upgrading

00:16:15,140 --> 00:16:21,260
on my panda board then this is my setup

00:16:18,680 --> 00:16:22,880
that I had you can see over here I have

00:16:21,260 --> 00:16:30,320
the laptop cooler because in India is to

00:16:22,880 --> 00:16:33,260
get a lot hot mean and so now the thing

00:16:30,320 --> 00:16:34,550
is you you're booting panda I mean

00:16:33,260 --> 00:16:35,900
you're doing something on the panda but

00:16:34,550 --> 00:16:37,190
you're running operating systems on it

00:16:35,900 --> 00:16:39,710
but you want to do something to your

00:16:37,190 --> 00:16:42,710
external environment you want to let's

00:16:39,710 --> 00:16:44,030
say control a robot or you want to you

00:16:42,710 --> 00:16:46,310
know change something you want to turn

00:16:44,030 --> 00:16:48,290
on and often a light or something so to

00:16:46,310 --> 00:16:50,570
use do something like that you need to

00:16:48,290 --> 00:16:52,640
access the general-purpose input/output

00:16:50,570 --> 00:16:55,280
pins on the panda board which is not an

00:16:52,640 --> 00:16:57,560
easy task so for that reason you have

00:16:55,280 --> 00:16:59,780
the Arduino and I'm sure most of you

00:16:57,560 --> 00:17:01,610
must know about this so those for those

00:16:59,780 --> 00:17:02,950
of you don't know about Arduino it's one

00:17:01,610 --> 00:17:05,510
of the world's most popular

00:17:02,950 --> 00:17:07,339
microcontroller development board so

00:17:05,510 --> 00:17:08,930
usually what happens in a microphone

00:17:07,339 --> 00:17:10,940
troller is that you have to develop your

00:17:08,930 --> 00:17:13,610
own development board you just get the

00:17:10,940 --> 00:17:14,720
chip if you by net atmega16 chip you

00:17:13,610 --> 00:17:16,970
have to develop your own development

00:17:14,720 --> 00:17:18,770
board you need an external programmer to

00:17:16,970 --> 00:17:21,170
dump your code that you wrote on the

00:17:18,770 --> 00:17:24,380
computer to the microcontroller but with

00:17:21,170 --> 00:17:25,520
the Arduino you have a USB ports so the

00:17:24,380 --> 00:17:28,100
entire code is dumb to the

00:17:25,520 --> 00:17:30,890
microcontroller using USB and the ID

00:17:28,100 --> 00:17:33,260
that you use is the Arduino IDE ed that

00:17:30,890 --> 00:17:35,460
is based on processing language and it's

00:17:33,260 --> 00:17:37,140
very simple and I've seen

00:17:35,460 --> 00:17:38,730
people from fifth grade or fourth grade

00:17:37,140 --> 00:17:41,010
you know even make programs on that we

00:17:38,730 --> 00:17:42,630
know it's very simple and the other

00:17:41,010 --> 00:17:48,200
benefit is that they have something

00:17:42,630 --> 00:17:51,539
called a playground okay so they're

00:17:48,200 --> 00:17:53,399
waiting okay see it so why so they

00:17:51,539 --> 00:17:55,200
have something called Arduino playground

00:17:53,399 --> 00:17:58,440
where they have tons of codes examples

00:17:55,200 --> 00:18:00,480
tutorials guides then you can just

00:17:58,440 --> 00:18:04,260
follow and get you or you know code

00:18:00,480 --> 00:18:07,020
running and I have the Arduino mega over

00:18:04,260 --> 00:18:10,260
here it has the atmega 128 chip it has

00:18:07,020 --> 00:18:16,860
54 digital pins and blah blah blah these

00:18:10,260 --> 00:18:18,360
are all just specks of that and it's

00:18:16,860 --> 00:18:21,000
pretty cheap I mean you can get the

00:18:18,360 --> 00:18:23,370
Arduino Uno for about like if I'm sure

00:18:21,000 --> 00:18:26,450
$25 max to max and the mega one should

00:18:23,370 --> 00:18:29,429
cost you make close to sixty dollars oh

00:18:26,450 --> 00:18:30,659
yeah and the other thing is that the

00:18:29,429 --> 00:18:32,399
best thing about Arduino is that it has

00:18:30,659 --> 00:18:35,130
shields so let's say you want to connect

00:18:32,399 --> 00:18:37,110
internet on your Arduino so you just buy

00:18:35,130 --> 00:18:39,260
an Ethernet shield so what this shield

00:18:37,110 --> 00:18:43,020
is that it plugs on top of your Arduino

00:18:39,260 --> 00:18:44,820
so let's say you want to make a call

00:18:43,020 --> 00:18:46,799
make yourself make makeup call a cell

00:18:44,820 --> 00:18:49,470
phone from your Arduino so what you do

00:18:46,799 --> 00:18:50,940
is you buy the gsm shield so you just

00:18:49,470 --> 00:18:53,039
plug the gsm shield on top of your

00:18:50,940 --> 00:18:54,840
Arduino and then you have that feature

00:18:53,039 --> 00:18:56,309
so depending on what kind of feature you

00:18:54,840 --> 00:18:58,620
want on Arduino you can just buy that

00:18:56,309 --> 00:18:59,940
shield they have shields for controlling

00:18:58,620 --> 00:19:01,049
motors their shields for controlling

00:18:59,940 --> 00:19:03,000
robots you know different different

00:19:01,049 --> 00:19:07,770
shields so you can just buy the shield

00:19:03,000 --> 00:19:09,899
that you want depending on your need ok

00:19:07,770 --> 00:19:12,080
so I'll should be sure the live demo

00:19:09,899 --> 00:19:12,080
part

00:19:26,240 --> 00:19:31,290
yeah it this entire this is one to 12.04

00:19:29,430 --> 00:19:33,750
the latest version and it's running on

00:19:31,290 --> 00:19:35,760
the Panda board and I don't have

00:19:33,750 --> 00:19:38,220
internet but you can I mean it's pretty

00:19:35,760 --> 00:19:40,650
I mean it's not that fast as the

00:19:38,220 --> 00:19:43,500
computer but it's quite fast I mean you

00:19:40,650 --> 00:19:46,500
can do your normal browsing or you can

00:19:43,500 --> 00:19:49,290
even try playing full HD videos on it it

00:19:46,500 --> 00:19:53,240
works great and it's it this way is

00:19:49,290 --> 00:19:53,240
about only like max do max hundred grams

00:20:22,330 --> 00:20:26,789
these are just a few experiments that I

00:20:24,190 --> 00:20:30,220
made so the experiments are first the

00:20:26,789 --> 00:20:32,559
first experiment is to display an image

00:20:30,220 --> 00:20:34,840
using opencv just to open the image and

00:20:32,559 --> 00:20:37,240
see it the second experiment is to

00:20:34,840 --> 00:20:39,149
convert the normal image that you have

00:20:37,240 --> 00:20:43,330
to grayscale that is black and white

00:20:39,149 --> 00:20:46,269
then how to draw a circle on a given

00:20:43,330 --> 00:20:47,649
image the fourth experiment is a candy

00:20:46,269 --> 00:20:50,380
filter so what this does is that it

00:20:47,649 --> 00:20:51,669
detects the edges or the boundaries so

00:20:50,380 --> 00:20:55,480
if you have a book it will detect the

00:20:51,669 --> 00:20:57,610
edges then the fifth experiments to

00:20:55,480 --> 00:20:59,139
detect faces if you have any given image

00:20:57,610 --> 00:21:01,570
you want to detect only the face part in

00:20:59,139 --> 00:21:03,039
it how you do that and last one is I'll

00:21:01,570 --> 00:21:05,649
give you a live demo how to set up a

00:21:03,039 --> 00:21:07,659
burglar or arm system so what I have in

00:21:05,649 --> 00:21:20,019
that experiment I'll just go over there

00:21:07,659 --> 00:21:22,419
when I come to that so I'm using Python

00:21:20,019 --> 00:21:29,200
because it's very easy i mean compared

00:21:22,419 --> 00:21:34,440
to other c c++ programming onc I'm sorry

00:21:29,200 --> 00:21:34,440
ok let's go to second

00:21:43,730 --> 00:21:51,660
it's pretty fast so I mean do you want

00:21:46,260 --> 00:21:52,590
me to do that again good so first you

00:21:51,660 --> 00:21:54,000
have the normal image it then it

00:21:52,590 --> 00:21:55,950
converts to black and white so you can

00:21:54,000 --> 00:21:57,750
see that i'm running in image processing

00:21:55,950 --> 00:21:58,890
library and the output is pretty fast i

00:21:57,750 --> 00:22:11,610
mean it's not slow i mean it's

00:21:58,890 --> 00:22:14,000
reasonable so it draws a circle around

00:22:11,610 --> 00:22:14,000
that

00:22:27,890 --> 00:22:32,190
so you can see that it detects all them

00:22:30,210 --> 00:22:34,740
you know all the edges over here this

00:22:32,190 --> 00:22:37,980
edge everything in the text edges I mean

00:22:34,740 --> 00:22:40,230
and to make it more precise you have to

00:22:37,980 --> 00:22:42,210
tune it this is just a default

00:22:40,230 --> 00:22:44,250
configuration that I've used you can

00:22:42,210 --> 00:22:58,380
change the parameters in that too for

00:22:44,250 --> 00:22:59,820
that unit depending upon your need so

00:22:58,380 --> 00:23:09,990
this is the image that has all the faces

00:22:59,820 --> 00:23:11,610
and then sew what opencv has it has a

00:23:09,990 --> 00:23:14,130
lot of hard classifier so what this

00:23:11,610 --> 00:23:16,919
means is that i'm using a premade hard

00:23:14,130 --> 00:23:19,169
classifier so they were what Intel did

00:23:16,919 --> 00:23:21,210
it did five years or further intensive

00:23:19,169 --> 00:23:22,620
research and then it after doing a lot

00:23:21,210 --> 00:23:24,809
of computations it came up with a hard

00:23:22,620 --> 00:23:26,429
classifier so what this does is that it

00:23:24,809 --> 00:23:27,840
gives you a pre definite a classifier

00:23:26,429 --> 00:23:31,409
you just need to know how to use it and

00:23:27,840 --> 00:23:33,450
how it works so after that you can use

00:23:31,409 --> 00:23:35,429
any image detect faces on it you can use

00:23:33,450 --> 00:23:37,740
it for I'm doing static processing so

00:23:35,429 --> 00:23:39,900
i'm having i'm using a premade pre image

00:23:37,740 --> 00:23:41,490
that i have you can connect your camera

00:23:39,900 --> 00:23:43,230
to the panda board and take a live video

00:23:41,490 --> 00:23:53,070
and do the same operation that i'm doing

00:23:43,230 --> 00:23:55,250
over here and detect faces so what in

00:23:53,070 --> 00:23:57,450
the final experiment i'm doing is that i

00:23:55,250 --> 00:23:59,120
have the pandaboard running the face

00:23:57,450 --> 00:24:01,590
detect program that i showed you earlier

00:23:59,120 --> 00:24:03,659
so what I'm doing over here is that it

00:24:01,590 --> 00:24:05,159
will detect faces and even if I have a

00:24:03,659 --> 00:24:06,450
live camera this will do the same

00:24:05,159 --> 00:24:09,150
operation but I don't have a camera

00:24:06,450 --> 00:24:10,919
that's a problem so if you have a live

00:24:09,150 --> 00:24:13,409
camera attached to your pandaboard it

00:24:10,919 --> 00:24:16,710
will take the live video and process it

00:24:13,409 --> 00:24:18,419
and detect faces now if any face is

00:24:16,710 --> 00:24:19,799
detected let's say you are leaving your

00:24:18,419 --> 00:24:21,870
home at eight o'clock and you turn on

00:24:19,799 --> 00:24:23,010
the system so after that time when

00:24:21,870 --> 00:24:24,840
you're out if someone comes into your

00:24:23,010 --> 00:24:26,610
home that means it's a bold group

00:24:24,840 --> 00:24:30,000
someone is trying to break in your home

00:24:26,610 --> 00:24:32,280
so if the match is positive it detects

00:24:30,000 --> 00:24:34,650
faces then what we'll do is I have the

00:24:32,280 --> 00:24:36,809
Arduino connected to the USB port it

00:24:34,650 --> 00:24:39,659
will trigger the Arduino and

00:24:36,809 --> 00:24:42,210
as of now I did not have the buzzer or

00:24:39,659 --> 00:24:45,600
you know something to control so I'm

00:24:42,210 --> 00:24:47,100
just going to use an LED so the LED

00:24:45,600 --> 00:24:50,070
stands for anything you can use you can

00:24:47,100 --> 00:24:53,429
use a full-fledged buzzer on this also

00:24:50,070 --> 00:24:54,840
that can you know maybe alert a security

00:24:53,429 --> 00:24:56,999
warning and maybe alert your neighbors

00:24:54,840 --> 00:24:58,710
so what this final program is going to

00:24:56,999 --> 00:25:01,529
do is that if the phase detection is

00:24:58,710 --> 00:25:05,059
positive it will turn on the LED if it's

00:25:01,529 --> 00:25:05,059
not then little not alone LED

00:25:31,660 --> 00:25:35,650
so if you see the code I mean it's

00:25:33,940 --> 00:25:45,820
pretty simple i mean the functions are

00:25:35,650 --> 00:25:47,530
in arduino are pre-built it's pretty

00:25:45,820 --> 00:25:50,380
simple like you basically have two loops

00:25:47,530 --> 00:25:53,320
the setup loop and the normal loop that

00:25:50,380 --> 00:25:55,480
you have now this loop only runs one

00:25:53,320 --> 00:25:58,300
time and the other loop this loop runs

00:25:55,480 --> 00:25:59,740
in finite times then you you basically

00:25:58,300 --> 00:26:02,320
do your programming inside two of these

00:25:59,740 --> 00:26:04,210
loops that's it and as you can see it's

00:26:02,320 --> 00:26:13,030
pretty simple if you want to do micro

00:26:04,210 --> 00:26:22,990
internal programming yeah undependable

00:26:13,030 --> 00:26:33,700
yes yeah yeah command from yeah from the

00:26:22,990 --> 00:26:35,410
pan double yes yeah yes because the

00:26:33,700 --> 00:26:37,570
limitation with Arduino is that it can

00:26:35,410 --> 00:26:39,340
do a lot of stuff it can you know

00:26:37,570 --> 00:26:42,250
interact with your environment okay the

00:26:39,340 --> 00:26:45,400
question was that am i running the

00:26:42,250 --> 00:26:47,470
Arduino with the pandava yes so the

00:26:45,400 --> 00:26:49,000
system setup is that the Arduino is

00:26:47,470 --> 00:26:51,370
connected to the panda board and the

00:26:49,000 --> 00:26:53,440
reason for doing is because the Arduino

00:26:51,370 --> 00:26:54,970
has some limitations it can do a lot of

00:26:53,440 --> 00:26:56,650
changes to the environment you can

00:26:54,970 --> 00:26:59,200
control a lot of stuff but it cannot do

00:26:56,650 --> 00:27:01,530
processing goes it to my controller you

00:26:59,200 --> 00:27:04,240
can do it but it's very difficult so

00:27:01,530 --> 00:27:06,460
using the good points of the panda board

00:27:04,240 --> 00:27:11,290
there is a lot of processing power I'm

00:27:06,460 --> 00:27:17,080
trying to combine both of them so I've

00:27:11,290 --> 00:27:18,430
uploaded the code I think it should turn

00:27:17,080 --> 00:27:21,180
on the LED if everything is right not

00:27:18,430 --> 00:27:21,180
just pull over here

00:27:40,070 --> 00:27:43,860
did you see that LED blink once so the

00:27:42,480 --> 00:27:45,929
moment they detected now can find the

00:27:43,860 --> 00:27:48,899
faces was there triggered arduino and

00:27:45,929 --> 00:27:50,999
turn on the LED and if you had some

00:27:48,899 --> 00:27:53,070
other system buzzer or your security

00:27:50,999 --> 00:27:54,240
system attached to this it will also do

00:27:53,070 --> 00:27:59,340
the same thing that I'm doing over here

00:27:54,240 --> 00:28:01,759
this is just an example okay I'll just

00:27:59,340 --> 00:28:01,759
return

00:28:13,999 --> 00:28:19,259
now often while working on the panda

00:28:17,340 --> 00:28:20,610
board you have a lot of problems the

00:28:19,259 --> 00:28:22,950
board might not boot up or you might not

00:28:20,610 --> 00:28:25,769
get something but I recommend that you

00:28:22,950 --> 00:28:27,869
joined the pandaboard google group they

00:28:25,769 --> 00:28:29,730
they have a lot of users and usually

00:28:27,869 --> 00:28:31,230
when I used to post my Curtis and

00:28:29,730 --> 00:28:33,450
everything they would reply back within

00:28:31,230 --> 00:28:34,950
a day or so usually or sometimes what

00:28:33,450 --> 00:28:36,360
happens is someone already had the same

00:28:34,950 --> 00:28:38,580
problem so you can just search the

00:28:36,360 --> 00:28:39,749
forums and I'm pretty much sure if

00:28:38,580 --> 00:28:41,340
you're starting now there must be

00:28:39,749 --> 00:28:42,840
someone who had the same problems so you

00:28:41,340 --> 00:28:45,600
can just look what solutions they use

00:28:42,840 --> 00:28:47,070
and yeah the second officer google

00:28:45,600 --> 00:28:48,869
because a lot of people write blogs and

00:28:47,070 --> 00:28:50,549
everything on pandaboard and everything

00:28:48,869 --> 00:28:53,309
they write all the steps you can follow

00:28:50,549 --> 00:28:55,230
so probably you will find a blog that

00:28:53,309 --> 00:29:00,619
matches your work that you want to do

00:28:55,230 --> 00:29:02,460
and now my further research work is too

00:29:00,619 --> 00:29:04,950
everyone knows about the Microsoft

00:29:02,460 --> 00:29:07,980
Kinect and a lot of people I've seen a

00:29:04,950 --> 00:29:09,239
lot of cool you know hacks and programs

00:29:07,980 --> 00:29:11,179
that people have done with the Kinect

00:29:09,239 --> 00:29:14,340
there's actually a program where a

00:29:11,179 --> 00:29:16,649
person has made that using Kinect it's

00:29:14,340 --> 00:29:20,100
able to help the blind person navigate

00:29:16,649 --> 00:29:22,409
anywhere it has a Bluetooth and

00:29:20,100 --> 00:29:25,200
everything so using Kinect you get the

00:29:22,409 --> 00:29:28,470
3d data and using that you can do image

00:29:25,200 --> 00:29:29,940
processing on that and reproduce to get

00:29:28,470 --> 00:29:32,070
some good results but the problem is

00:29:29,940 --> 00:29:33,720
that they're doing is on a laptop so the

00:29:32,070 --> 00:29:35,369
person who made the system had an entire

00:29:33,720 --> 00:29:36,840
laptop on his back so we had to walk

00:29:35,369 --> 00:29:39,359
with the laptop and laptop is very heavy

00:29:36,840 --> 00:29:41,220
so I'm trying to get the kinect to work

00:29:39,359 --> 00:29:42,480
on the panda board so anyone can just

00:29:41,220 --> 00:29:46,499
put it in a bag and just walk it with

00:29:42,480 --> 00:29:48,659
them and also looking at the fact that

00:29:46,499 --> 00:29:50,340
cloud computing is very much growing so

00:29:48,659 --> 00:29:52,019
I'm trying to also figure out a way how

00:29:50,340 --> 00:29:54,149
to use cloud computing with the panda

00:29:52,019 --> 00:29:55,649
board so what will happen is instead of

00:29:54,149 --> 00:29:59,340
me doing all the image processing on the

00:29:55,649 --> 00:30:01,830
panda board I can just have my panda

00:29:59,340 --> 00:30:03,720
would connect to a cloud somewhere which

00:30:01,830 --> 00:30:05,549
I set up so that does all the processing

00:30:03,720 --> 00:30:07,379
and it just sends a command like I do to

00:30:05,549 --> 00:30:09,809
the Arduino it just sends a final

00:30:07,379 --> 00:30:12,590
command yes or no and depending on that

00:30:09,809 --> 00:30:18,749
the panda board can take some actions

00:30:12,590 --> 00:30:21,419
that is what my future work is and you

00:30:18,749 --> 00:30:23,330
can contact me at genio de la la gmail

00:30:21,419 --> 00:30:27,000
com

00:30:23,330 --> 00:30:28,680
and I really acted tank the self team

00:30:27,000 --> 00:30:31,160
for accepting my talk and also

00:30:28,680 --> 00:30:33,360
dependable community for helping me and

00:30:31,160 --> 00:30:34,830
now if you have any questions regarding

00:30:33,360 --> 00:30:36,900
this your personal questions if you if

00:30:34,830 --> 00:30:38,580
you have some idea that you want to know

00:30:36,900 --> 00:30:41,040
if it's possible using the panda but I

00:30:38,580 --> 00:30:47,010
can tell you if it's not if it's a good

00:30:41,040 --> 00:30:48,600
platform or yes well it has a GPIO pin

00:30:47,010 --> 00:30:51,120
so you have to use the hook up wires and

00:30:48,600 --> 00:30:53,430
use an external okay so the question was

00:30:51,120 --> 00:30:56,250
does it have a GPIO pins on the panda

00:30:53,430 --> 00:30:58,560
board so yeah it does have that but the

00:30:56,250 --> 00:31:00,660
thing is they are connected with the SD

00:30:58,560 --> 00:31:03,180
card slot so you have to use hook up

00:31:00,660 --> 00:31:04,800
wires and put it the hook of our

00:31:03,180 --> 00:31:06,990
connector over there to the breadboard

00:31:04,800 --> 00:31:09,660
to do some X whatever work you want to

00:31:06,990 --> 00:31:11,430
do so looking at that option and looking

00:31:09,660 --> 00:31:14,340
at the Arduino I think Arduino is a much

00:31:11,430 --> 00:31:19,880
easier option I mean and you can do much

00:31:14,340 --> 00:31:19,880
more with Arduino normal yeah

00:31:25,030 --> 00:31:30,560
well the thing with raspberry PI's that

00:31:28,070 --> 00:31:32,420
it has only okay the question was I'm

00:31:30,560 --> 00:31:35,420
really sorry about the question was is

00:31:32,420 --> 00:31:37,640
raspberry prior placement for panda born

00:31:35,420 --> 00:31:40,390
maybe Arduino well for arduino yeah

00:31:37,640 --> 00:31:42,770
because it's very powerful than arduino

00:31:40,390 --> 00:31:45,470
but not for all applications and the

00:31:42,770 --> 00:31:48,440
second thing is the Raspberry Pi has if

00:31:45,470 --> 00:31:50,510
i'm correct 700 megahertz processor so

00:31:48,440 --> 00:31:52,010
and this one has one gigahertz and the

00:31:50,510 --> 00:31:56,300
ram is also twice on this you have more

00:31:52,010 --> 00:31:59,090
USB ports yeah basically this is more

00:31:56,300 --> 00:32:01,370
feature and this is more expensive so

00:31:59,090 --> 00:32:03,590
for certain applications it's a good I

00:32:01,370 --> 00:32:05,240
mean to start it's a good way because

00:32:03,590 --> 00:32:08,030
you don't want to start directly in the

00:32:05,240 --> 00:32:09,230
panda board cuz just me if you do

00:32:08,030 --> 00:32:10,610
something bad or if you blow up the

00:32:09,230 --> 00:32:12,140
pandaboard I mean that's two hundred

00:32:10,610 --> 00:32:14,000
dollars down the drain you don't want to

00:32:12,140 --> 00:32:15,650
do that you start with the Raspberry Pi

00:32:14,000 --> 00:32:17,000
so even if you do something bad to it

00:32:15,650 --> 00:32:19,280
it's only thirty-five dollars or twenty

00:32:17,000 --> 00:32:20,990
dollars that's erased it but eventually

00:32:19,280 --> 00:32:23,150
you will need a further powerful

00:32:20,990 --> 00:32:27,130
platform for that you might want to move

00:32:23,150 --> 00:32:27,130
to the panda board yes sir

00:32:41,309 --> 00:32:45,880
ok the question is that the Raspberry Pi

00:32:43,510 --> 00:32:47,890
only has a GPIO pins it does not have

00:32:45,880 --> 00:32:50,170
the pulse width modulation pains and the

00:32:47,890 --> 00:32:53,950
analog-to-digital converter and those

00:32:50,170 --> 00:32:58,420
kind of peripherals well so whatever

00:32:53,950 --> 00:32:59,800
recommend is that you i think i read a

00:32:58,420 --> 00:33:01,929
blog where someone has done something

00:32:59,800 --> 00:33:04,720
like that on an arm-based board but it's

00:33:01,929 --> 00:33:06,130
very hard i mean you have to spend a lot

00:33:04,720 --> 00:33:07,990
of time to figure out how to do it so

00:33:06,130 --> 00:33:10,480
I'm I salute my advice would be to just

00:33:07,990 --> 00:33:12,640
hook up in Arduino with it so it becomes

00:33:10,480 --> 00:33:19,870
much easier and as you can see the

00:33:12,640 --> 00:33:24,120
system is very compact I mean does

00:33:19,870 --> 00:33:24,120
anyone else have any questions like yes

00:33:25,500 --> 00:33:30,790
it can play your full HD videos ok the

00:33:28,990 --> 00:33:33,190
question is what is the graphic

00:33:30,790 --> 00:33:35,050
capabilities of the panda board well

00:33:33,190 --> 00:33:38,970
they're decent enough that you can run a

00:33:35,050 --> 00:33:48,710
blu-ray movie or a full HD video on it

00:33:38,970 --> 00:33:51,770
without any lag I mean yes pardon me

00:33:48,710 --> 00:33:59,570
I the quit okay i'm sorry i'm not able

00:33:51,770 --> 00:34:01,549
to i've not heard about that oh yeah if

00:33:59,570 --> 00:34:02,870
it's okay the question is that if you

00:34:01,549 --> 00:34:05,270
want to run a particular desktop

00:34:02,870 --> 00:34:08,210
application on pandaboard that you may

00:34:05,270 --> 00:34:10,369
be using on your home linux system well

00:34:08,210 --> 00:34:11,929
yeah if you're running ubuntu on it and

00:34:10,369 --> 00:34:14,330
you have a certain application that you

00:34:11,929 --> 00:34:15,950
are running on your home ubuntu computer

00:34:14,330 --> 00:34:32,000
will yeah it will work on the Panda but

00:34:15,950 --> 00:34:36,980
mostly yes sir ok the question is that

00:34:32,000 --> 00:34:38,929
does the opencv use the TI graphic

00:34:36,980 --> 00:34:41,179
processor that comes with it or does use

00:34:38,929 --> 00:34:42,589
a native arm code well it depends on how

00:34:41,179 --> 00:34:45,260
you want to use it i mean if you want

00:34:42,589 --> 00:34:47,690
you can use the graphic module that

00:34:45,260 --> 00:34:50,540
comes with it but as far as I'm sure I

00:34:47,690 --> 00:34:53,960
don't think there's a dedicated graphic

00:34:50,540 --> 00:34:55,639
library to use the the TI processor that

00:34:53,960 --> 00:34:57,530
comes with the panda board there have

00:34:55,639 --> 00:34:59,119
been libraries to use your in media if

00:34:57,530 --> 00:35:01,580
you have an via graphic card on your

00:34:59,119 --> 00:35:05,030
laptop then there is an especial and

00:35:01,580 --> 00:35:07,339
media library for opencv I forgot the

00:35:05,030 --> 00:35:11,720
name but it's very popular so you can

00:35:07,339 --> 00:35:13,640
use it for that I'm not enabled the

00:35:11,720 --> 00:35:15,020
geographic module on the panda board

00:35:13,640 --> 00:35:16,460
because I what I heard is that from the

00:35:15,020 --> 00:35:17,990
recent updates on the paddleboard I

00:35:16,460 --> 00:35:20,540
would recommend you don't install that

00:35:17,990 --> 00:35:22,250
update because then the system does not

00:35:20,540 --> 00:35:23,900
respond that well with the graphic

00:35:22,250 --> 00:35:31,460
drivers the recent ones I'm just using

00:35:23,900 --> 00:35:34,930
the native one any questions or moves ok

00:35:31,460 --> 00:35:34,930
guys thanks a lot for attending

00:35:42,380 --> 00:35:48,359
there's a survey at the registration of

00:35:45,960 --> 00:35:50,549
this and this is for the raffle if you

00:35:48,359 --> 00:35:52,140
wanna win the raffle tonight after the

00:35:50,549 --> 00:35:53,940
keynote as we do the raffle after the

00:35:52,140 --> 00:35:56,549
keynote you need to fill in the survey

00:35:53,940 --> 00:36:00,859
and put it into the box before the

00:35:56,549 --> 00:36:00,859
keynote starts there is

00:36:03,700 --> 00:36:08,780
when we created asterisk over a decade

00:36:06,440 --> 00:36:10,730
ago we could not have imagined that

00:36:08,780 --> 00:36:12,950
asterisk would not only become the most

00:36:10,730 --> 00:36:15,080
widely adopted open source communication

00:36:12,950 --> 00:36:17,120
software on the planet but that it would

00:36:15,080 --> 00:36:19,640
impact the entire industry in the way

00:36:17,120 --> 00:36:21,620
that it has today asterisk has found its

00:36:19,640 --> 00:36:24,260
way in the more than 170 countries and

00:36:21,620 --> 00:36:26,210
virtually every fortune 1000 company the

00:36:24,260 --> 00:36:28,310
success of asterisk has enabled a

00:36:26,210 --> 00:36:29,690
transition of power from the hands of

00:36:28,310 --> 00:36:31,970
the traditional proprietary phone

00:36:29,690 --> 00:36:34,370
vendors into the hands of the users and

00:36:31,970 --> 00:36:36,320
administrators of phone systems using

00:36:34,370 --> 00:36:37,550
this power our customers have created

00:36:36,320 --> 00:36:39,470
all sorts of business changing

00:36:37,550 --> 00:36:41,330
applications from small office phone

00:36:39,470 --> 00:36:43,520
systems to mission-critical call centers

00:36:41,330 --> 00:36:45,440
the international carrier networks in

00:36:43,520 --> 00:36:47,240
fact there's even an entire country

00:36:45,440 --> 00:36:49,640
those communications infrastructure runs

00:36:47,240 --> 00:36:51,770
on esters the gym has always been about

00:36:49,640 --> 00:36:53,480
creating technology that expands

00:36:51,770 --> 00:36:55,640
communications capabilities in ways that

00:36:53,480 --> 00:36:56,840
we could never have imagined and that's

00:36:55,640 --> 00:36:59,240
part of what's game-changing about

00:36:56,840 --> 00:37:01,910
Digium today we're doing it again this

00:36:59,240 --> 00:37:04,010
time by introducing a new family of HD

00:37:01,910 --> 00:37:06,140
IP phones that extends control of the

00:37:04,010 --> 00:37:07,880
user all the way to the desktop the

00:37:06,140 --> 00:37:09,590
launch of these new products represents

00:37:07,880 --> 00:37:11,600
the next phase indigenous history of

00:37:09,590 --> 00:37:14,090
innovation these are the first and only

00:37:11,600 --> 00:37:15,470
IP phones designed to fully leverage the

00:37:14,090 --> 00:37:17,120
power of esther's when we first

00:37:15,470 --> 00:37:18,770
discussed our expectations for building

00:37:17,120 --> 00:37:21,380
a family of phones for use with asterisk

00:37:18,770 --> 00:37:23,180
our requirements were pretty simple we

00:37:21,380 --> 00:37:24,920
asked the team to build the phones such

00:37:23,180 --> 00:37:27,140
that they were easy to install integrate

00:37:24,920 --> 00:37:28,970
provision and use I think you'll soon

00:37:27,140 --> 00:37:31,520
agree our engineers have delivered on

00:37:28,970 --> 00:37:33,170
that goal user feedback is validating

00:37:31,520 --> 00:37:35,270
that when it comes to operation with

00:37:33,170 --> 00:37:37,700
astro space systems including our own

00:37:35,270 --> 00:37:40,280
Switchvox based product these are the

00:37:37,700 --> 00:37:41,570
easiest to use best integrated most

00:37:40,280 --> 00:37:44,180
interoperable products on the market

00:37:41,570 --> 00:37:46,150
today the Digium family of phones will

00:37:44,180 --> 00:37:48,260
initially include three IP des hommes

00:37:46,150 --> 00:37:50,150
uniquely designed to complement any

00:37:48,260 --> 00:37:52,040
asterisk or switch box based solution

00:37:50,150 --> 00:37:54,710
these phones are different for a number

00:37:52,040 --> 00:37:57,350
of reasons first there is clue sively

00:37:54,710 --> 00:37:58,790
designed for use with esters secondly

00:37:57,350 --> 00:38:00,230
we've made it really easy to

00:37:58,790 --> 00:38:02,780
autodiscover and provision the phones

00:38:00,230 --> 00:38:04,880
next we've made it easy for the phones

00:38:02,780 --> 00:38:06,870
to access information inside of asterisk

00:38:04,880 --> 00:38:09,420
allowing tight coupling

00:38:06,870 --> 00:38:11,310
application and the phone additionally

00:38:09,420 --> 00:38:13,620
we've created an applications engine

00:38:11,310 --> 00:38:15,810
that allows users and developers to

00:38:13,620 --> 00:38:18,660
create and run their own apps on the

00:38:15,810 --> 00:38:20,640
phone and finally we've done all of this

00:38:18,660 --> 00:38:22,380
at a very compelling price point at

00:38:20,640 --> 00:38:24,570
digium we're always thinking of ways to

00:38:22,380 --> 00:38:26,940
give our customers the best value in

00:38:24,570 --> 00:38:28,230
business phone systems and also give

00:38:26,940 --> 00:38:30,330
them the power to create their own

00:38:28,230 --> 00:38:32,130
solutions or any communications

00:38:30,330 --> 00:38:33,780
challenge well continue to push the

00:38:32,130 --> 00:38:35,580
boundaries not only to make astros

00:38:33,780 --> 00:38:37,440
cooler faster and more technologically

00:38:35,580 --> 00:38:39,000
feature-rich but to make asterisk and

00:38:37,440 --> 00:38:41,220
what communications even easier and

00:38:39,000 --> 00:38:44,420
together we'll change the way the world

00:38:41,220 --> 00:38:44,420
communication again

00:39:26,119 --> 00:39:32,569
how's that sigh every way this is the

00:39:29,269 --> 00:39:34,759
way to better utilize all your resources

00:39:32,569 --> 00:39:38,210
and it makes managing all your resources

00:39:34,759 --> 00:39:42,039
pretty easy all of the innovation is

00:39:38,210 --> 00:39:45,559
happening in open source the

00:39:42,039 --> 00:39:47,329
collaborative nature and of the you know

00:39:45,559 --> 00:39:49,279
of the community and and the speed at

00:39:47,329 --> 00:39:51,170
which these are these you know these

00:39:49,279 --> 00:39:53,329
these deficiencies these bugs are

00:39:51,170 --> 00:39:55,700
getting discovered and then fixed is it

00:39:53,329 --> 00:39:57,140
I think that really shows the power of

00:39:55,700 --> 00:39:59,900
the you know of the open source

00:39:57,140 --> 00:40:02,079
community it is global and it's

00:39:59,900 --> 00:40:05,599
definitely because of the users

00:40:02,079 --> 00:40:11,569
community people are extremely friendly

00:40:05,599 --> 00:40:13,309
and always ready to help if you go on

00:40:11,569 --> 00:40:15,440
tire see any day you'll see these guys

00:40:13,309 --> 00:40:18,140
helping each other out and they're all

00:40:15,440 --> 00:40:19,849
doing it like in a selfless manner the

00:40:18,140 --> 00:40:22,839
product is transparent for everyone

00:40:19,849 --> 00:40:25,999
everyone can look at the code base

00:40:22,839 --> 00:40:28,269
everyone can see how close that is being

00:40:25,999 --> 00:40:33,769
built nothing nothing is proprietary

00:40:28,269 --> 00:40:36,410
everything is open in many ways it's

00:40:33,769 --> 00:40:40,849
absolutely vital to the the ongoing

00:40:36,410 --> 00:40:45,049
health I'll stack the most exciting

00:40:40,849 --> 00:40:47,890
event in recent memory for me was our

00:40:45,049 --> 00:40:50,529
first developer boot camp

00:40:47,890 --> 00:40:53,200
and our call gave people a gave me two

00:40:50,529 --> 00:40:57,130
weeks notice to come attend I was

00:40:53,200 --> 00:41:01,390
expecting 25 or 30 people so we ended up

00:40:57,130 --> 00:41:04,150
with 87 people and had to go get board

00:41:01,390 --> 00:41:06,700
chairs in the room twice everything

00:41:04,150 --> 00:41:09,940
within cloud computing is commodity and

00:41:06,700 --> 00:41:13,000
is open source and so I don't think that

00:41:09,940 --> 00:41:14,769
you will you'll see anywhere where open

00:41:13,000 --> 00:41:17,799
source is not pervasive in cloud

00:41:14,769 --> 00:41:20,500
computing and so i think it's i think

00:41:17,799 --> 00:41:21,849
it's an assumption i think when you talk

00:41:20,500 --> 00:41:22,990
about cloud computing you're really

00:41:21,849 --> 00:41:28,539
talking about open source cloud

00:41:22,990 --> 00:41:31,569
computing cloud sac is a robust solution

00:41:28,539 --> 00:41:33,700
for large deployments you'll have dozens

00:41:31,569 --> 00:41:37,960
of data centers and thousands of servers

00:41:33,700 --> 00:41:40,660
in each data center is these hardware is

00:41:37,960 --> 00:41:44,140
going to fail and CloudStack is designed

00:41:40,660 --> 00:41:46,839
to handle number one that mass scale

00:41:44,140 --> 00:41:50,019
number two it's designed to handle the

00:41:46,839 --> 00:41:52,269
failure that inevitably happens in large

00:41:50,019 --> 00:41:56,079
deployments we started working on

00:41:52,269 --> 00:41:59,440
contact over four years ago and it was

00:41:56,079 --> 00:42:02,109
the original set of people working on it

00:41:59,440 --> 00:42:06,220
had a background of delivering software

00:42:02,109 --> 00:42:10,480
telcos and service providers lots of QA

00:42:06,220 --> 00:42:14,079
lots of users actually using it high

00:42:10,480 --> 00:42:17,170
availability is the key feature multiple

00:42:14,079 --> 00:42:19,180
hypervisors support different network

00:42:17,170 --> 00:42:21,849
models you can pick up whatever suits

00:42:19,180 --> 00:42:24,130
you better while step management server

00:42:21,849 --> 00:42:27,819
can be deployed in different physical

00:42:24,130 --> 00:42:29,470
machines it definitely has a huge

00:42:27,819 --> 00:42:34,450
footprint it's being deployed everywhere

00:42:29,470 --> 00:42:37,029
there's a major movie studio that they

00:42:34,450 --> 00:42:40,329
were using cloudstack they were using it

00:42:37,029 --> 00:42:42,309
to transcode video and i thought that

00:42:40,329 --> 00:42:43,960
was terribly fascinating what i found

00:42:42,309 --> 00:42:47,230
more fascinating is what they did during

00:42:43,960 --> 00:42:50,019
lunch where they would spin up you know

00:42:47,230 --> 00:42:51,369
50 or 60 game servers then as soon as

00:42:50,019 --> 00:42:51,940
lunch was over they would destroy all

00:42:51,369 --> 00:42:54,090
the instant

00:42:51,940 --> 00:42:57,490
system compactor doing a little work

00:42:54,090 --> 00:42:59,020
CloudStack is vast it touches so many

00:42:57,490 --> 00:43:00,880
different aspects and there's no one

00:42:59,020 --> 00:43:03,840
person that's kind of like a master of

00:43:00,880 --> 00:43:07,300
all those realms I think CloudStack as a

00:43:03,840 --> 00:43:09,550
project is going to be one of the

00:43:07,300 --> 00:43:13,630
leaders simply because it's some of the

00:43:09,550 --> 00:43:19,030
most feature fallen and and robust

00:43:13,630 --> 00:43:21,960
platforms out they were out on senior

00:43:19,030 --> 00:43:21,960

YouTube URL: https://www.youtube.com/watch?v=cZsTqi_aAe8


