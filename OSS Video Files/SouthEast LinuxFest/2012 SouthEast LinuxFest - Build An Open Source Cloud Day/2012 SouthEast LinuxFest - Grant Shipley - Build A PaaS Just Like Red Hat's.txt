Title: 2012 SouthEast LinuxFest - Grant Shipley - Build A PaaS Just Like Red Hat's
Publication date: 2014-01-10
Playlist: 2012 SouthEast LinuxFest - Build An Open Source Cloud Day
Description: 
	2012 SouthEast LinuxFest
Grant Shipley
Build An Open Source Cloud Day
Build A PaaS Just Like Red Hat's
Captions: 
	00:00:00,000 --> 00:00:05,279
the following presentation was recorded

00:00:02,490 --> 00:00:08,040
the 2012 southeast linux fest in

00:00:05,279 --> 00:00:10,410
charlotte north carolina it is licensed

00:00:08,040 --> 00:00:12,090
under a creative commons license for

00:00:10,410 --> 00:00:16,859
more information about the southeast

00:00:12,090 --> 00:00:19,230
linux fest visit www.lend expense org

00:00:16,859 --> 00:00:21,320
the southeast linux fest would like to

00:00:19,230 --> 00:00:23,369
thank the following diamond sponsors in

00:00:21,320 --> 00:00:29,310
2012 for helping make these videos

00:00:23,369 --> 00:00:33,059
possible job boards and whatnot I think

00:00:29,310 --> 00:00:34,230
it started maybe I don't know three or

00:00:33,059 --> 00:00:39,420
four years ago or something like that

00:00:34,230 --> 00:00:43,440
2009 alright so has anyone heard of open

00:00:39,420 --> 00:00:45,750
shift before alright alright so what

00:00:43,440 --> 00:00:48,030
we're going to talk about today is what

00:00:45,750 --> 00:00:51,449
is open shift we're going to talk about

00:00:48,030 --> 00:00:53,910
why open source matters specifically in

00:00:51,449 --> 00:00:55,350
the cloud computing environment and I'll

00:00:53,910 --> 00:00:57,239
talk a little bit I'll go off on a

00:00:55,350 --> 00:01:00,059
tangent hopefully not too long about

00:00:57,239 --> 00:01:02,250
cloud computing and what it really means

00:01:00,059 --> 00:01:04,260
because everyone says cloud cloud cloud

00:01:02,250 --> 00:01:06,030
cloud cloud cloud cloud move to the

00:01:04,260 --> 00:01:07,979
cloud blah blah blah and it really

00:01:06,030 --> 00:01:10,049
doesn't mean anything right and so we'll

00:01:07,979 --> 00:01:13,500
talk a little bit about that as well and

00:01:10,049 --> 00:01:17,820
then i will show you guys the open

00:01:13,500 --> 00:01:19,080
source code behind this project that i'm

00:01:17,820 --> 00:01:22,380
showing you today and we'll get it up

00:01:19,080 --> 00:01:24,780
and running on my local laptop here and

00:01:22,380 --> 00:01:28,470
i'll do what some people call a

00:01:24,780 --> 00:01:33,540
micro-cap cloud or a local cloud and and

00:01:28,470 --> 00:01:35,579
we'll go through that so first of all if

00:01:33,540 --> 00:01:37,920
you haven't signed up for open shift it

00:01:35,579 --> 00:01:41,189
is open shift com or you can go to open

00:01:37,920 --> 00:01:43,799
shift redhat com it is completely free

00:01:41,189 --> 00:01:46,970
to use we don't charge for it and it's

00:01:43,799 --> 00:01:49,409
basically a way for you to quickly

00:01:46,970 --> 00:01:51,689
deploy your apps out in a scalable

00:01:49,409 --> 00:01:56,549
fashion in the cloud and when I say

00:01:51,689 --> 00:01:57,680
scalable fashion the free tier I guess

00:01:56,549 --> 00:02:00,000
you could call it that we give away

00:01:57,680 --> 00:02:03,119
you're allowed to create up to three

00:02:00,000 --> 00:02:04,950
applications with gig and a half of ram

00:02:03,119 --> 00:02:06,960
and three gigs of disk space so if you

00:02:04,950 --> 00:02:10,050
deploy one app out there you can only

00:02:06,960 --> 00:02:13,050
scale up to three notes today we're

00:02:10,050 --> 00:02:15,600
working on introducing

00:02:13,050 --> 00:02:17,700
a tier for companies who need to scale

00:02:15,600 --> 00:02:19,650
up to a hundred two hundred nodes things

00:02:17,700 --> 00:02:21,390
like that and that's probably where

00:02:19,650 --> 00:02:24,480
we'll make our money we're not sure yet

00:02:21,390 --> 00:02:28,230
we do not have any pricing structure

00:02:24,480 --> 00:02:30,570
today what we're committed to is keeping

00:02:28,230 --> 00:02:33,240
this open source having a big community

00:02:30,570 --> 00:02:35,820
driven and always given away for free

00:02:33,240 --> 00:02:38,040
what we do today as far as hosting and

00:02:35,820 --> 00:02:40,560
it costs us an average about a hundred

00:02:38,040 --> 00:02:42,510
dollars a user to provide all the

00:02:40,560 --> 00:02:44,220
back-end infrastructure as a service for

00:02:42,510 --> 00:02:46,350
these applications you may not

00:02:44,220 --> 00:02:48,870
understand a lot of what I just said but

00:02:46,350 --> 00:02:51,540
we'll go into that and explain explain

00:02:48,870 --> 00:02:55,440
what all of this is but this is what the

00:02:51,540 --> 00:02:56,970
website looks like and if you want to

00:02:55,440 --> 00:02:59,160
create an account you just click try it

00:02:56,970 --> 00:03:01,590
now we just asked for an email address

00:02:59,160 --> 00:03:04,110
and a password we don't ask for your

00:03:01,590 --> 00:03:06,090
dog's name cats name what kind of car do

00:03:04,110 --> 00:03:10,580
you drive is just your email address and

00:03:06,090 --> 00:03:14,010
password alright so what is open shift

00:03:10,580 --> 00:03:15,330
so open shift is Red Hat's free platform

00:03:14,010 --> 00:03:17,940
of service has anyone heard of a

00:03:15,330 --> 00:03:20,400
platform as a service before a few

00:03:17,940 --> 00:03:23,370
people some of the more popular ones out

00:03:20,400 --> 00:03:26,959
there is Microsoft Azure i think is what

00:03:23,370 --> 00:03:30,870
they call it Heroku Google App Engine

00:03:26,959 --> 00:03:33,690
Cloud Foundry engine yard there's a lot

00:03:30,870 --> 00:03:37,709
of people in this space right now a red

00:03:33,690 --> 00:03:41,040
hat we decided but we didn't decide we

00:03:37,709 --> 00:03:42,570
came to the realization that a platform

00:03:41,040 --> 00:03:46,190
as a service will really change the way

00:03:42,570 --> 00:03:48,510
as developers we code and deploy our

00:03:46,190 --> 00:03:51,390
applications in the future and so when

00:03:48,510 --> 00:03:54,300
we created openshift we had a couple

00:03:51,390 --> 00:03:57,570
design tenants that we kept in mind and

00:03:54,300 --> 00:04:00,209
that we have stayed true to and the

00:03:57,570 --> 00:04:02,880
first one is no proprietary ap is and

00:04:00,209 --> 00:04:06,120
that's very important as you're hosting

00:04:02,880 --> 00:04:08,040
your code out in the cloud you want to

00:04:06,120 --> 00:04:09,930
be able to have the freedom to take your

00:04:08,040 --> 00:04:13,860
code that you've written and move it to

00:04:09,930 --> 00:04:17,040
a different vendor very easily and what

00:04:13,860 --> 00:04:20,280
we're seeing now which is bad for us as

00:04:17,040 --> 00:04:22,410
an industry is that a lot of these cloud

00:04:20,280 --> 00:04:23,910
hosting providers whether proprietary

00:04:22,410 --> 00:04:26,100
data store that you have to write to

00:04:23,910 --> 00:04:28,810
their API

00:04:26,100 --> 00:04:32,410
and it gets really complicated in fact

00:04:28,810 --> 00:04:35,050
one of my friends he has a start-up and

00:04:32,410 --> 00:04:39,010
they deployed on Google App Engine using

00:04:35,050 --> 00:04:40,750
their proprietary data store and they're

00:04:39,010 --> 00:04:42,640
getting bought out by another company

00:04:40,750 --> 00:04:44,440
and the other company doesn't want to

00:04:42,640 --> 00:04:46,780
use Google because they recently

00:04:44,440 --> 00:04:48,460
increased their prices and they honestly

00:04:46,780 --> 00:04:49,930
went from being profitable to losing

00:04:48,460 --> 00:04:52,630
money overnight just on the price

00:04:49,930 --> 00:04:56,800
increases and they were stuck and so we

00:04:52,630 --> 00:05:00,880
wanted to not have any vendor lock-in at

00:04:56,800 --> 00:05:02,170
all with this service so platform is

00:05:00,880 --> 00:05:09,280
service you probably thinking this is

00:05:02,170 --> 00:05:11,890
kind of like Amazon right it's not who

00:05:09,280 --> 00:05:16,810
here actually has something deployed in

00:05:11,890 --> 00:05:21,750
the cloud today is anyone doing it not

00:05:16,810 --> 00:05:21,750
on Amazon what are you using

00:05:23,080 --> 00:05:30,920
me anything storage compute hosting yeah

00:05:28,690 --> 00:05:32,710
so that's something personally that I'm

00:05:30,920 --> 00:05:35,390
a little worried about is it seems like

00:05:32,710 --> 00:05:37,910
Amazon they have a great product they've

00:05:35,390 --> 00:05:40,580
really revolutionized how we can quickly

00:05:37,910 --> 00:05:42,800
spin up machines but they almost have a

00:05:40,580 --> 00:05:44,870
monopoly on the infrastructure as a

00:05:42,800 --> 00:05:46,570
service and that's why as an open source

00:05:44,870 --> 00:05:50,090
community we really need to get behind

00:05:46,570 --> 00:05:52,160
OpenStack and things like that and other

00:05:50,090 --> 00:05:53,480
infrastructure as a service project so

00:05:52,160 --> 00:05:55,970
that we can compete with them it's not

00:05:53,480 --> 00:05:58,070
good for any one company to control

00:05:55,970 --> 00:06:00,080
almost half the internet right when they

00:05:58,070 --> 00:06:02,000
had an elastic block storage outage I

00:06:00,080 --> 00:06:04,790
guess about nine months ago it seemed

00:06:02,000 --> 00:06:07,490
like half the internet was down netflix

00:06:04,790 --> 00:06:09,890
streams all of their movies via amazon

00:06:07,490 --> 00:06:12,650
and you know it's just something i'm a

00:06:09,890 --> 00:06:14,510
little bit concerned about I think what

00:06:12,650 --> 00:06:17,870
amazon has done technology-wise is

00:06:14,510 --> 00:06:19,340
phenomenal i'm not saying that they are

00:06:17,870 --> 00:06:21,770
doing anything bad we just need

00:06:19,340 --> 00:06:24,530
competition and competition is always

00:06:21,770 --> 00:06:27,800
good all right so when people talk about

00:06:24,530 --> 00:06:30,169
cloud it's mostly marketing guys or your

00:06:27,800 --> 00:06:31,910
CIO or your manager we got to move to

00:06:30,169 --> 00:06:34,340
the cloud right it's going to solve all

00:06:31,910 --> 00:06:35,780
of our problems so when people talk

00:06:34,340 --> 00:06:38,710
about cloud they're really talking about

00:06:35,780 --> 00:06:41,000
one of three things and they probably

00:06:38,710 --> 00:06:43,700
don't know which of these three things

00:06:41,000 --> 00:06:46,460
they're talking about but here's the

00:06:43,700 --> 00:06:48,080
basic the three components of what the

00:06:46,460 --> 00:06:49,669
cloud really is we have an

00:06:48,080 --> 00:06:52,700
infrastructure as a service which is

00:06:49,669 --> 00:06:55,640
Amazon ec2 basically Rackspace as one

00:06:52,700 --> 00:06:58,160
but it allows you to quickly spin up

00:06:55,640 --> 00:07:00,440
machines which has changed a lot of

00:06:58,160 --> 00:07:02,479
people's lives and operations inside of

00:07:00,440 --> 00:07:04,070
IT groups because they don't have to

00:07:02,479 --> 00:07:07,930
procure hardware and wait for it they

00:07:04,070 --> 00:07:11,810
can get it instantaneous basically and

00:07:07,930 --> 00:07:15,860
you know when I first spun up my first

00:07:11,810 --> 00:07:20,120
ec2 instance i'm a developer by trade

00:07:15,860 --> 00:07:21,979
and I got my virtual machine and then I

00:07:20,120 --> 00:07:24,350
had to choose what operating system I

00:07:21,979 --> 00:07:26,870
wanted to put on it and then I had to

00:07:24,350 --> 00:07:30,430
configure selinux don't just turn that

00:07:26,870 --> 00:07:34,430
off it is important I had to install

00:07:30,430 --> 00:07:35,510
Apache I had to I'm a JBoss or a Java

00:07:34,430 --> 00:07:37,310
developer so I had to

00:07:35,510 --> 00:07:39,350
download and install jboss configure it

00:07:37,310 --> 00:07:41,630
no the inside is now the application

00:07:39,350 --> 00:07:43,670
server I had to install database

00:07:41,630 --> 00:07:45,260
or MySQL or post grass or whatever I'm

00:07:43,670 --> 00:07:48,080
using I didn't know how to tune the

00:07:45,260 --> 00:07:50,780
database I had to install and configure

00:07:48,080 --> 00:07:53,470
my firewall rules set up any proxy load

00:07:50,780 --> 00:07:55,820
balancing and something I hated doing it

00:07:53,470 --> 00:07:58,130
didn't really the only problem this

00:07:55,820 --> 00:08:00,650
solves is it gave us the compute

00:07:58,130 --> 00:08:02,600
resources very quickly but we still have

00:08:00,650 --> 00:08:03,830
to manage all of those ourselves it's

00:08:02,600 --> 00:08:06,680
not something I wanted to do as a

00:08:03,830 --> 00:08:09,080
developer so software-as-a-service I'll

00:08:06,680 --> 00:08:10,610
skip right up to the top here everyone

00:08:09,080 --> 00:08:15,770
probably uses software as a service

00:08:10,610 --> 00:08:17,000
today Google Mail seems like three

00:08:15,770 --> 00:08:19,130
quarters of the companies in the world

00:08:17,000 --> 00:08:23,330
are using salesforce com right now and

00:08:19,130 --> 00:08:25,520
then this middle part which openshift is

00:08:23,330 --> 00:08:27,260
is called a platform as a service and it

00:08:25,520 --> 00:08:30,200
sits between infrastructures of service

00:08:27,260 --> 00:08:32,300
and software as a service so here when

00:08:30,200 --> 00:08:33,650
you get a machine you still have to

00:08:32,300 --> 00:08:36,140
bring all of those things that I just

00:08:33,650 --> 00:08:37,970
talked about the management your code

00:08:36,140 --> 00:08:40,940
your application platform as a service

00:08:37,970 --> 00:08:42,919
sits on top of this and manages all of

00:08:40,940 --> 00:08:44,210
that for you so in a platform as a

00:08:42,919 --> 00:08:46,400
service world the only thing you have to

00:08:44,210 --> 00:08:49,700
bring to the table is your code and your

00:08:46,400 --> 00:08:50,750
users ok and software-as-a-service the

00:08:49,700 --> 00:08:52,790
only thing you have to bring to the

00:08:50,750 --> 00:08:54,740
table is your users you don't manage the

00:08:52,790 --> 00:08:57,950
code you have no visibility into the

00:08:54,740 --> 00:09:01,130
code most of the times and you know this

00:08:57,950 --> 00:09:07,930
kind of let's see if I can exit out of

00:09:01,130 --> 00:09:07,930
this let's try x paint

00:09:14,550 --> 00:09:23,889
see if I can do this I'm looking

00:09:16,990 --> 00:09:25,149
sideways is anyone familiar with this i

00:09:23,889 --> 00:09:26,680
know that looks terrible but this is

00:09:25,149 --> 00:09:29,649
called the Gartner hype cycle and

00:09:26,680 --> 00:09:32,709
basically every technology goes through

00:09:29,649 --> 00:09:35,620
this hype cycle okay virtualization went

00:09:32,709 --> 00:09:36,850
through this years ago 10 years ago

00:09:35,620 --> 00:09:39,060
virtualization was going to solve

00:09:36,850 --> 00:09:41,680
everyone's problems we have all these

00:09:39,060 --> 00:09:43,300
compute resources sitting around

00:09:41,680 --> 00:09:45,069
underutilized we need to virtualize

00:09:43,300 --> 00:09:47,290
everything and so the hype cycle

00:09:45,069 --> 00:09:49,720
basically says it gets to a point to

00:09:47,290 --> 00:09:51,490
where it promises to do everything and

00:09:49,720 --> 00:09:53,079
everyone is talking about it but no

00:09:51,490 --> 00:09:55,180
one's really using it and so

00:09:53,079 --> 00:09:56,529
virtualization got a lot of high back in

00:09:55,180 --> 00:09:58,300
the day and today you really don't hear

00:09:56,529 --> 00:10:01,060
about it anymore but everyone's actually

00:09:58,300 --> 00:10:03,160
using it most data centers are using

00:10:01,060 --> 00:10:05,230
virtualization and some some fashion and

00:10:03,160 --> 00:10:08,800
so you get to the hype and this is a

00:10:05,230 --> 00:10:11,470
terrible graph here but and then it

00:10:08,800 --> 00:10:13,000
comes down to where hype starts petering

00:10:11,470 --> 00:10:14,949
out a little bit but then you have a

00:10:13,000 --> 00:10:17,860
real adoption cycle where people start

00:10:14,949 --> 00:10:20,259
using it and so virtualization is is up

00:10:17,860 --> 00:10:21,880
here now I mean it's just everywhere so

00:10:20,259 --> 00:10:24,189
this is my personal opinion I will go

00:10:21,880 --> 00:10:27,279
through where I think the cloud stuff is

00:10:24,189 --> 00:10:29,709
right now so I where's the services

00:10:27,279 --> 00:10:31,089
right here there's a lot of hype about

00:10:29,709 --> 00:10:32,500
it you guys remember those years ago

00:10:31,089 --> 00:10:34,300
everything you read the software the

00:10:32,500 --> 00:10:38,579
server software service is going to do

00:10:34,300 --> 00:10:38,579
everything infrastructure-as-a-service

00:10:38,699 --> 00:10:43,750
I'm going to say it's right here and you

00:10:40,990 --> 00:10:46,149
guys can disagree with me I still think

00:10:43,750 --> 00:10:49,329
there's a lot of hype about it but it's

00:10:46,149 --> 00:10:50,740
not as much as it used to be it's kind

00:10:49,329 --> 00:10:52,269
of went down a little bit people are

00:10:50,740 --> 00:10:53,759
absolutely using it but it hasn't

00:10:52,269 --> 00:10:55,899
reached mass adoption yet

00:10:53,759 --> 00:11:00,399
platform-as-a-service what I'm talking

00:10:55,899 --> 00:11:03,040
about today probably right here it's a

00:11:00,399 --> 00:11:06,699
lot of height right now how useful is it

00:11:03,040 --> 00:11:11,170
will see when is it really going to

00:11:06,699 --> 00:11:13,509
change our lives as developers it can

00:11:11,170 --> 00:11:15,689
today but we're probably a year off or

00:11:13,509 --> 00:11:18,130
so before this reaches massive adoption

00:11:15,689 --> 00:11:19,959
maybe that's a little optimistic on my

00:11:18,130 --> 00:11:22,240
part just because I know how easy it's

00:11:19,959 --> 00:11:24,220
made my life and so I wish it would be a

00:11:22,240 --> 00:11:24,990
year from now but it might be more like

00:11:24,220 --> 00:11:26,490
a year and a half

00:11:24,990 --> 00:11:28,680
years out before we really start seeing

00:11:26,490 --> 00:11:31,310
this and in all of our day-to-day work

00:11:28,680 --> 00:11:31,310
environments

00:11:39,030 --> 00:11:41,870
ok

00:11:46,640 --> 00:11:52,230
so that's basically the the three areas

00:11:49,350 --> 00:11:55,080
of cloud right and if you guys have

00:11:52,230 --> 00:11:56,610
questions or want to disagree with

00:11:55,080 --> 00:11:58,380
something I said feel free just to

00:11:56,610 --> 00:12:01,950
interrupt me I'm a very informal

00:11:58,380 --> 00:12:04,110
presenter so if you disagree with me I

00:12:01,950 --> 00:12:05,940
that's good discussions to him I don't

00:12:04,110 --> 00:12:07,620
get upset about that so why

00:12:05,940 --> 00:12:10,310
platform-as-a-service it allows you to

00:12:07,620 --> 00:12:12,930
start quickly and iterate quickly

00:12:10,310 --> 00:12:15,270
typically the the platform as a service

00:12:12,930 --> 00:12:18,060
provider manages the cloud and the app

00:12:15,270 --> 00:12:19,650
stack for you okay so that's what I'm

00:12:18,060 --> 00:12:20,850
going to show first of all and then i'm

00:12:19,650 --> 00:12:22,200
going to show you the open source side

00:12:20,850 --> 00:12:24,330
so you can do this in your own data

00:12:22,200 --> 00:12:26,520
center and still have the software

00:12:24,330 --> 00:12:28,170
manage it for you so let you focus on

00:12:26,520 --> 00:12:30,720
your code and customers and not on

00:12:28,170 --> 00:12:32,340
deployments I used to manage someone

00:12:30,720 --> 00:12:36,300
mentioned are each in earlier as anyone

00:12:32,340 --> 00:12:38,130
used re-tune yeah I used to manage that

00:12:36,300 --> 00:12:43,920
team at Red Hat and I used to work on on

00:12:38,130 --> 00:12:46,080
that software as well and it was a very

00:12:43,920 --> 00:12:48,270
interesting thing when we would push new

00:12:46,080 --> 00:12:50,040
versions out it got very complicated and

00:12:48,270 --> 00:12:52,380
a platform as a service will help that

00:12:50,040 --> 00:12:54,930
as well because you know we would rpm up

00:12:52,380 --> 00:12:58,890
everything our ra Chen was actually a

00:12:54,930 --> 00:13:01,250
mix of Perl Python and Java code and so

00:12:58,890 --> 00:13:03,750
it got quite messy there towards the end

00:13:01,250 --> 00:13:06,210
especially deployments versioning that

00:13:03,750 --> 00:13:08,010
making sure you're not taking down time

00:13:06,210 --> 00:13:10,110
and whatnot in case there's a security

00:13:08,010 --> 00:13:12,660
vulnerability and so this will help

00:13:10,110 --> 00:13:15,150
alleviate those problems as well how do

00:13:12,660 --> 00:13:16,590
you use it you create an account like I

00:13:15,150 --> 00:13:19,520
said it's just the email address and

00:13:16,590 --> 00:13:22,980
password or you can download the code

00:13:19,520 --> 00:13:26,910
you can install the client tools that's

00:13:22,980 --> 00:13:28,560
how I prefer to interface with it on the

00:13:26,910 --> 00:13:32,070
command line we also have rest-based

00:13:28,560 --> 00:13:34,590
interfaces and a web console as well if

00:13:32,070 --> 00:13:36,180
you want to do everything in the web you

00:13:34,590 --> 00:13:37,950
choose a name space you create

00:13:36,180 --> 00:13:40,020
application you choose your language he

00:13:37,950 --> 00:13:41,910
had cartridges and then you push your

00:13:40,020 --> 00:13:47,640
code with get everything with open shift

00:13:41,910 --> 00:13:50,400
is get get back all right so I live this

00:13:47,640 --> 00:13:52,590
world right here if there's other people

00:13:50,400 --> 00:13:55,650
in the room that's lived this you can

00:13:52,590 --> 00:13:58,720
tell me if you agree with this but like

00:13:55,650 --> 00:14:01,240
I said I managed rhn also managed

00:13:58,720 --> 00:14:03,160
dub dub dub redhat com and all the

00:14:01,240 --> 00:14:08,379
developers and infrastructure behind

00:14:03,160 --> 00:14:11,589
that and you know when we had an idea

00:14:08,379 --> 00:14:14,019
for a new application at Red Hat first

00:14:11,589 --> 00:14:18,399
thing we do is have to get budget for it

00:14:14,019 --> 00:14:21,670
and that budget would have to be very

00:14:18,399 --> 00:14:23,769
detailed down to number of man hours you

00:14:21,670 --> 00:14:25,300
know how much hardware in all of the

00:14:23,769 --> 00:14:26,949
environments because we have a

00:14:25,300 --> 00:14:31,180
development environment then we have a

00:14:26,949 --> 00:14:34,810
QA stage in production environment we

00:14:31,180 --> 00:14:37,300
had to submit the hardware requests so

00:14:34,810 --> 00:14:41,589
we basically would get quotes from our

00:14:37,300 --> 00:14:47,769
vendor review those quotes negotiate the

00:14:41,589 --> 00:14:49,810
prices and then finally put a p.o in to

00:14:47,769 --> 00:14:51,040
get the hardware so we eventually get

00:14:49,810 --> 00:14:52,689
the hardware and then we'd have to go

00:14:51,040 --> 00:14:54,970
through that full stack we'd have to you

00:14:52,689 --> 00:14:57,279
know unbox some rack and stack them we

00:14:54,970 --> 00:14:59,199
ran we run puppet for everything and so

00:14:57,279 --> 00:15:03,069
I hope that helped alleviate some of our

00:14:59,199 --> 00:15:05,500
concerns with the deployments then we

00:15:03,069 --> 00:15:08,290
would code we would push and we would do

00:15:05,500 --> 00:15:10,569
this in each environment and if our

00:15:08,290 --> 00:15:12,850
application was more popular than we

00:15:10,569 --> 00:15:14,529
thought we'd have to repeat this whole

00:15:12,850 --> 00:15:16,209
process again and order more servers

00:15:14,529 --> 00:15:17,769
because we're not we don't buy them and

00:15:16,209 --> 00:15:22,350
just leave them sitting in boxes waiting

00:15:17,769 --> 00:15:22,350
to be used we buy them as we need them

00:15:22,860 --> 00:15:28,120
so now with a platform as a service and

00:15:25,569 --> 00:15:31,120
I'll show you guys this I know it sounds

00:15:28,120 --> 00:15:33,490
a little marketing but it's actually

00:15:31,120 --> 00:15:35,410
true you can have an idea you can code

00:15:33,490 --> 00:15:37,509
and test it and launch it without having

00:15:35,410 --> 00:15:40,149
to worry about the infrastructure this

00:15:37,509 --> 00:15:41,889
is very important especially if you're

00:15:40,149 --> 00:15:43,569
doing a start-up or maybe a mobile

00:15:41,889 --> 00:15:46,209
application that has a back end because

00:15:43,569 --> 00:15:47,680
you don't know how popular your mobile

00:15:46,209 --> 00:15:49,660
application or your application in

00:15:47,680 --> 00:15:53,079
general is going to be so why would you

00:15:49,660 --> 00:15:55,300
invest in all this hardware until you

00:15:53,079 --> 00:15:58,899
know so if you deploy to a platform as a

00:15:55,300 --> 00:16:00,790
service you can deploy for free and then

00:15:58,899 --> 00:16:03,129
as your application hopefully grows to

00:16:00,790 --> 00:16:05,019
millions of users your systems will

00:16:03,129 --> 00:16:06,730
automatically scale to handle that load

00:16:05,019 --> 00:16:08,610
and you never have to think about it or

00:16:06,730 --> 00:16:11,610
worried about your systems anymore

00:16:08,610 --> 00:16:11,610
awesome

00:16:13,060 --> 00:16:20,180
all right yeah maybe you can see the

00:16:18,050 --> 00:16:22,070
screen better so again you can't create

00:16:20,180 --> 00:16:24,590
an account openshift calm you can use

00:16:22,070 --> 00:16:26,780
that promo code if you want what does

00:16:24,590 --> 00:16:32,180
that promo code get you absolutely

00:16:26,780 --> 00:16:33,950
nothing I put this on here and this is

00:16:32,180 --> 00:16:35,900
why we have promo codes it really gets

00:16:33,950 --> 00:16:37,400
you absolutely nothing but it allows us

00:16:35,900 --> 00:16:40,670
to track like where people are coming

00:16:37,400 --> 00:16:42,950
from so we know like where if we should

00:16:40,670 --> 00:16:44,960
go to more open source conferences or

00:16:42,950 --> 00:16:47,060
more java type conferences just for us

00:16:44,960 --> 00:16:49,400
if you want to use it great if not I

00:16:47,060 --> 00:16:55,010
won't be angry other important thing as

00:16:49,400 --> 00:17:05,570
you sign up though alright so first

00:16:55,010 --> 00:17:07,699
thing you do yeah that's right and I'll

00:17:05,570 --> 00:17:09,500
show you that a little bit later it's

00:17:07,699 --> 00:17:11,120
kind of like the big reveal because the

00:17:09,500 --> 00:17:13,520
Staten used to be open source didn't

00:17:11,120 --> 00:17:16,699
used to be it was not open source before

00:17:13,520 --> 00:17:19,970
and we just open sourced it I think last

00:17:16,699 --> 00:17:21,550
month last month or so and so what I'm

00:17:19,970 --> 00:17:24,500
going to show you first is the hosted

00:17:21,550 --> 00:17:27,170
environment and then I'll show you the

00:17:24,500 --> 00:17:28,940
live CD that you can download also show

00:17:27,170 --> 00:17:30,020
you where to get the source code things

00:17:28,940 --> 00:17:31,880
like that if you want to build it

00:17:30,020 --> 00:17:36,230
yourself i would suggest just using the

00:17:31,880 --> 00:17:40,510
pre-built binaries do you guys mostly

00:17:36,230 --> 00:17:43,610
use Linux okay well you never know right

00:17:40,510 --> 00:17:47,570
so we do have pre-built boundaries for

00:17:43,610 --> 00:17:51,500
red hat obviously and fedora what we

00:17:47,570 --> 00:17:53,720
need help with is to get binaries for in

00:17:51,500 --> 00:17:55,910
boone two and slackware and things like

00:17:53,720 --> 00:17:57,500
that so if someone in the community

00:17:55,910 --> 00:17:59,780
wants to help us out with that that'd be

00:17:57,500 --> 00:18:01,010
great all right the first thing you do

00:17:59,780 --> 00:18:02,480
is you install the client tools our

00:18:01,010 --> 00:18:05,240
client tools are actually all written in

00:18:02,480 --> 00:18:08,180
Ruby so you just do a gem install our HC

00:18:05,240 --> 00:18:09,920
if you have Ruby and Jim installed you

00:18:08,180 --> 00:18:11,210
create a namespace I'm going to skip

00:18:09,920 --> 00:18:13,490
through all this and I'll just show you

00:18:11,210 --> 00:18:17,240
how it actually works so why do we

00:18:13,490 --> 00:18:22,070
actually support on openshift we support

00:18:17,240 --> 00:18:23,229
perl python ruby java nodejs PHP if i

00:18:22,070 --> 00:18:28,149
didn't say that

00:18:23,229 --> 00:18:28,149
someone actually got cobol running on it

00:18:29,229 --> 00:18:35,629
yeah well and it really made us angry

00:18:32,359 --> 00:18:38,389
and I'll tell you why we had this April

00:18:35,629 --> 00:18:39,590
Fool's joke plan for a long time that we

00:18:38,389 --> 00:18:42,979
were going announced that we were the

00:18:39,590 --> 00:18:45,229
cloud for COBOL right to get people's

00:18:42,979 --> 00:18:47,149
COBOL code up in the cloud and like two

00:18:45,229 --> 00:18:49,789
days before april first this guy emailed

00:18:47,149 --> 00:18:51,649
us from his company and said hey I got

00:18:49,789 --> 00:18:55,659
COBOL running on openshift check it out

00:18:51,649 --> 00:18:58,220
they're like oh man ruined our joke but

00:18:55,659 --> 00:19:00,379
basically anything that's open source or

00:18:58,220 --> 00:19:03,440
will write on top of Linux will run on

00:19:00,379 --> 00:19:04,879
openshift the second design tenant the

00:19:03,440 --> 00:19:08,269
first one I talked about was proprietary

00:19:04,879 --> 00:19:09,979
we wanted to make this the best platform

00:19:08,269 --> 00:19:12,559
as a service for open source languages

00:19:09,979 --> 00:19:14,599
and technologies and databases and so if

00:19:12,559 --> 00:19:17,059
it's open source we'll run it obviously

00:19:14,599 --> 00:19:21,019
we're not going to run oracle databases

00:19:17,059 --> 00:19:23,269
or anything like that for you be out any

00:19:21,019 --> 00:19:25,070
language pretty much any framework any

00:19:23,269 --> 00:19:27,739
of the big open source database whether

00:19:25,070 --> 00:19:31,879
it's a no sequel database or you know a

00:19:27,739 --> 00:19:33,859
traditional my sequel or postgres all

00:19:31,879 --> 00:19:37,789
frameworks will essentially work as well

00:19:33,859 --> 00:19:40,249
and what's interesting is that we

00:19:37,789 --> 00:19:42,710
actually use Amazon ec2 on the backend

00:19:40,249 --> 00:19:43,849
for all of our infrastructure even

00:19:42,710 --> 00:19:45,710
though I was saying it's probably not a

00:19:43,849 --> 00:19:47,749
good thing that they own all the market

00:19:45,710 --> 00:19:50,479
there's just no other game in town for

00:19:47,749 --> 00:19:52,909
us to realistically use they drive the

00:19:50,479 --> 00:19:55,700
price so far down it's a commodity now

00:19:52,909 --> 00:19:58,399
now you just can't compete in that

00:19:55,700 --> 00:20:00,440
market with how cheap things get with

00:19:58,399 --> 00:20:03,950
those guys everything is rel 6 on the

00:20:00,440 --> 00:20:05,029
back end and it's a fully managed rail 6

00:20:03,950 --> 00:20:06,769
for you so if you deploy your

00:20:05,029 --> 00:20:09,679
applications out we do update it with

00:20:06,769 --> 00:20:11,299
the security Radha updates it's actually

00:20:09,679 --> 00:20:14,570
a real entitlement to Red Hat Enterprise

00:20:11,299 --> 00:20:16,729
Linux you can't actually log in and and

00:20:14,570 --> 00:20:20,629
look at it but but it is a real

00:20:16,729 --> 00:20:24,649
entitlement on those systems all right

00:20:20,629 --> 00:20:25,850
enough of the slide where let's see if I

00:20:24,649 --> 00:20:33,620
could

00:20:25,850 --> 00:20:37,920
change this yeah so are we do support

00:20:33,620 --> 00:20:42,150
jboss as7 one right now and it's a fully

00:20:37,920 --> 00:20:47,130
stack actually that's not true it's the

00:20:42,150 --> 00:20:49,410
world trying to do that again a free

00:20:47,130 --> 00:20:52,320
awesome it was it's a web profile so you

00:20:49,410 --> 00:20:54,240
can't do like a lot of EJ B's right now

00:20:52,320 --> 00:20:55,560
we're working on that and hopefully

00:20:54,240 --> 00:20:58,320
we'll have it done in a couple of weeks

00:20:55,560 --> 00:21:09,060
we're hoping to have it done by a Judd

00:20:58,320 --> 00:21:11,100
con at the end of this month know-it-all

00:21:09,060 --> 00:21:20,070
come yeah you don't have to add anything

00:21:11,100 --> 00:21:22,710
yeah mm-hmm oh sure the question is does

00:21:20,070 --> 00:21:25,260
jboss come standard or is it something

00:21:22,710 --> 00:21:27,780
you have to add on yourself and it comes

00:21:25,260 --> 00:21:29,100
standard all of these languages do it's

00:21:27,780 --> 00:21:31,560
very easy to get up and running with

00:21:29,100 --> 00:21:33,480
them and it makes life a lot easier

00:21:31,560 --> 00:21:35,700
especially if you're wanting to learn

00:21:33,480 --> 00:21:38,970
something like note jsr wanting to learn

00:21:35,700 --> 00:21:41,550
mongodb and so having to figure out how

00:21:38,970 --> 00:21:42,930
to download and install DB which

00:21:41,550 --> 00:21:45,120
isn't hard so it's probably a bad

00:21:42,930 --> 00:21:47,730
example but to get the drivers installed

00:21:45,120 --> 00:21:51,420
and all of that that all comes comes for

00:21:47,730 --> 00:21:56,970
you alright i'm going to open up a

00:21:51,420 --> 00:21:59,660
terminal here and we'll get cooking yeah

00:21:56,970 --> 00:21:59,660
see there okay

00:22:00,649 --> 00:22:06,590
increase the font but

00:22:10,490 --> 00:22:25,980
then black online it is i just checked

00:22:15,870 --> 00:22:27,210
out of him what happened yeah you guys

00:22:25,980 --> 00:22:29,390
want black out of mine is that what you

00:22:27,210 --> 00:22:29,390
want

00:22:37,330 --> 00:22:40,080
I'm not

00:22:41,400 --> 00:22:49,080
what okay all right so i have the rh c

00:22:46,590 --> 00:22:51,420
command line tools already installed so

00:22:49,080 --> 00:22:54,840
the first thing I can do is a rhd domain

00:22:51,420 --> 00:22:58,020
show and see if I'm on the internet I

00:22:54,840 --> 00:23:00,570
don't know if I am will quickly find out

00:22:58,020 --> 00:23:03,750
yet oh yeah so what I did is I ran our

00:23:00,570 --> 00:23:06,510
HC domain show and this basically made a

00:23:03,750 --> 00:23:08,280
rest call up to our rest services and

00:23:06,510 --> 00:23:10,050
you can download these client tools as

00:23:08,280 --> 00:23:12,150
well to see how we're actually doing it

00:23:10,050 --> 00:23:13,740
but my name spaces just on paths you

00:23:12,150 --> 00:23:16,350
could use your name or whatever you want

00:23:13,740 --> 00:23:18,300
it it's just arbitrary name and then it

00:23:16,350 --> 00:23:20,520
lists all of my applications that i have

00:23:18,300 --> 00:23:21,690
deployed okay so let's create a new

00:23:20,520 --> 00:23:27,450
application what do you guys want to do

00:23:21,690 --> 00:23:30,450
java PHP PHP all right PHP all right so

00:23:27,450 --> 00:23:33,330
let's do our HC app create will call it

00:23:30,450 --> 00:23:39,180
as the linux can't do that we'll just

00:23:33,330 --> 00:23:41,850
call it that and then we'll do PHP 53 so

00:23:39,180 --> 00:23:45,210
what I doing here is I'm saying our HC

00:23:41,850 --> 00:23:48,720
create a app name my app SEL and it's

00:23:45,210 --> 00:23:50,880
going to be a PHP 53 app so hit enter

00:23:48,720 --> 00:23:53,040
and it's making a rest call hopefully my

00:23:50,880 --> 00:23:56,220
network doesn't flake out like it's been

00:23:53,040 --> 00:23:58,380
doing all day it's making a rest call up

00:23:56,220 --> 00:24:02,190
to open shift we're provisioning a node

00:23:58,380 --> 00:24:06,210
for you in ec2 we're configuring the

00:24:02,190 --> 00:24:08,190
system we actually use selinux linux

00:24:06,210 --> 00:24:12,360
control groups does anyone familiar with

00:24:08,190 --> 00:24:14,490
that we use those two things heavily in

00:24:12,360 --> 00:24:17,540
order to provide a secure and performant

00:24:14,490 --> 00:24:20,820
environment without doing virtualization

00:24:17,540 --> 00:24:24,390
not to like sound boastful about red hat

00:24:20,820 --> 00:24:27,570
but no one knows selinux better than we

00:24:24,390 --> 00:24:32,600
do and so we were able to use selinux

00:24:27,570 --> 00:24:32,600
for this yeah

00:24:35,500 --> 00:24:41,720
no it's multi-tenant the the question is

00:24:39,500 --> 00:24:44,090
does every node have or just every app

00:24:41,720 --> 00:24:46,340
have its own ec2 note the answer is no

00:24:44,090 --> 00:24:48,740
it is multi-tenant and that's why

00:24:46,340 --> 00:24:51,130
selinux and linux control groups are so

00:24:48,740 --> 00:24:53,720
important to us because that's how we

00:24:51,130 --> 00:24:55,400
guarantee that your application can get

00:24:53,720 --> 00:24:57,800
the processing power in the memory that

00:24:55,400 --> 00:25:00,350
it needs outside of the virtual

00:24:57,800 --> 00:25:03,440
environment and it's normally takes like

00:25:00,350 --> 00:25:06,860
15 seconds so I blame sprint because i'm

00:25:03,440 --> 00:25:09,680
using this little Wi-Fi thing here it's

00:25:06,860 --> 00:25:12,350
also like i said installing apache

00:25:09,680 --> 00:25:15,440
making sure mod PHP is installed it's

00:25:12,350 --> 00:25:17,660
setting up a private git repository for

00:25:15,440 --> 00:25:21,050
me and this is the first time i've

00:25:17,660 --> 00:25:25,030
created abs and wants me to add that to

00:25:21,050 --> 00:25:25,030
my keys yeah question

00:25:28,310 --> 00:25:34,260
the question is am I starting an

00:25:30,660 --> 00:25:35,940
instance now or you are creating the new

00:25:34,260 --> 00:25:40,140
instances that what you said or using an

00:25:35,940 --> 00:25:41,640
existing instant so if there is a

00:25:40,140 --> 00:25:43,830
whiteboard I would draw out how this

00:25:41,640 --> 00:25:45,120
actually works under the covers but we

00:25:43,830 --> 00:25:47,850
basically have hundreds hundreds

00:25:45,120 --> 00:25:50,400
hundreds of ec2 machines and we use em

00:25:47,850 --> 00:25:51,900
collective I don't know if you're

00:25:50,400 --> 00:25:53,970
familiar with that they basically gather

00:25:51,900 --> 00:25:56,250
stats it gets pretty complicated under

00:25:53,970 --> 00:25:59,220
the covers we find the best machine for

00:25:56,250 --> 00:26:01,560
your application to go on if there's not

00:25:59,220 --> 00:26:03,330
one we will spin up a new one and add it

00:26:01,560 --> 00:26:06,090
to that for you so to answer your

00:26:03,330 --> 00:26:09,780
question it really depends on the load

00:26:06,090 --> 00:26:12,420
on those servers and also what's cool is

00:26:09,780 --> 00:26:14,910
we can move your application in real

00:26:12,420 --> 00:26:17,070
time it's a load on that box gets too

00:26:14,910 --> 00:26:19,380
high over to a different note for you

00:26:17,070 --> 00:26:22,380
without you having to do anything so we

00:26:19,380 --> 00:26:26,700
can guarantee performing issues as well

00:26:22,380 --> 00:26:30,330
so this is done ok so it also propagated

00:26:26,700 --> 00:26:38,690
my DNA dns out worldwide so if i go to

00:26:30,330 --> 00:26:45,270
this maybe I don't have Firefox too big

00:26:38,690 --> 00:26:49,050
sailed on past rh cloud dr this is a

00:26:45,270 --> 00:26:51,390
templated app that's out there just to

00:26:49,050 --> 00:26:53,670
get me started but what's important is

00:26:51,390 --> 00:26:56,970
all the infrastructure and underlying

00:26:53,670 --> 00:26:58,980
technologies was already created for me

00:26:56,970 --> 00:27:00,660
and just a like i said takes about 20

00:26:58,980 --> 00:27:02,460
seconds it took a little longer here for

00:27:00,660 --> 00:27:04,920
some reason so let's make a quick change

00:27:02,460 --> 00:27:08,610
and i'll show you how easy this is so i

00:27:04,920 --> 00:27:12,540
go into my directory and since this is a

00:27:08,610 --> 00:27:14,040
PHP directory or a PHP application I

00:27:12,540 --> 00:27:16,380
have a PHP directory that's where my

00:27:14,040 --> 00:27:18,980
source code actually lives if it was

00:27:16,380 --> 00:27:22,140
Java are there any Java developers here

00:27:18,980 --> 00:27:23,940
so for Java we actually use the maven

00:27:22,140 --> 00:27:26,250
build system if you push your code and

00:27:23,940 --> 00:27:28,200
we'll see your pom.xml file and we'll

00:27:26,250 --> 00:27:29,640
build it on our servers if you don't

00:27:28,200 --> 00:27:31,410
want to do that you can just drop your

00:27:29,640 --> 00:27:33,930
war file or your ear file in the

00:27:31,410 --> 00:27:36,060
deployments directory so I go into the

00:27:33,930 --> 00:27:38,509
PHP directory I'm going to be I test up

00:27:36,060 --> 00:27:46,249
PHP and do

00:27:38,509 --> 00:27:49,669
PHP echo hello world so i just created a

00:27:46,249 --> 00:27:53,089
new PHP file I'm going to add that and

00:27:49,669 --> 00:27:55,699
then I'm going to commit it and then I'm

00:27:53,089 --> 00:27:58,820
going to push it and so when I do a git

00:27:55,699 --> 00:28:01,429
push I actually have a remote repository

00:27:58,820 --> 00:28:03,919
set up and sending all my code up to my

00:28:01,429 --> 00:28:06,019
openshift servers for me so that's done

00:28:03,919 --> 00:28:08,209
we also have hooks if you wanted to

00:28:06,019 --> 00:28:09,859
automate something every time you did a

00:28:08,209 --> 00:28:11,690
push maybe you want to update your

00:28:09,859 --> 00:28:14,299
internet page so hey a new versions out

00:28:11,690 --> 00:28:20,119
there whatever you can do that so now if

00:28:14,299 --> 00:28:22,339
I go back to this URL a test up PHP you

00:28:20,119 --> 00:28:30,769
can see the money code was pushed out

00:28:22,339 --> 00:28:31,819
there for me so yeah absolutely yeah and

00:28:30,769 --> 00:28:33,739
that's something that really sets us

00:28:31,819 --> 00:28:36,109
apart especially it would give it away

00:28:33,739 --> 00:28:37,609
for free so here's my blog which I just

00:28:36,109 --> 00:28:39,919
reinstalled last night so it's going to

00:28:37,609 --> 00:28:43,069
have absolutely nothing on it but as G

00:28:39,919 --> 00:28:47,059
shipley on paths are each cloud calm and

00:28:43,069 --> 00:28:51,979
then it's also dub dub dub grips Shipley

00:28:47,059 --> 00:28:56,149
dot cold and the way we do that is we

00:28:51,979 --> 00:29:01,519
have what's called an alias I'll show

00:28:56,149 --> 00:29:03,969
you this real quick so where's Dee

00:29:01,519 --> 00:29:03,969
Shipley

00:29:05,200 --> 00:29:08,830
yeah beer shift that's a mobile app I'm

00:29:07,539 --> 00:29:11,350
actually giving a talk on it in the

00:29:08,830 --> 00:29:14,649
morning it's a social beer drinking

00:29:11,350 --> 00:29:17,950
application that runs on openshift and

00:29:14,649 --> 00:29:19,179
the iphone and android I assure you guys

00:29:17,950 --> 00:29:23,409
that if you want we can completely

00:29:19,179 --> 00:29:25,870
change the talk but so G Shipley here

00:29:23,409 --> 00:29:28,059
has an alias of dub dub dub grant

00:29:25,870 --> 00:29:30,279
Shipley com so I just went in and I

00:29:28,059 --> 00:29:32,710
added alias you have to make sure

00:29:30,279 --> 00:29:35,049
obviously that you have permissions to

00:29:32,710 --> 00:29:37,750
add cname records in your domain

00:29:35,049 --> 00:29:38,889
registry and they don't work for you ok

00:29:37,750 --> 00:29:42,580
so let me show you got something really

00:29:38,889 --> 00:29:51,010
cool I'm going to do our HC app create

00:29:42,580 --> 00:29:55,419
let's call it WordPress to HP 53 and I'm

00:29:51,010 --> 00:30:05,610
going to open up my browser go to github

00:29:55,419 --> 00:30:05,610
com / openshift search for WordPress

00:30:06,360 --> 00:30:09,050
maybe

00:30:14,220 --> 00:30:23,410
my internet just died terrible all right

00:30:21,400 --> 00:30:24,780
i'll switch over to my mac now anyway

00:30:23,410 --> 00:30:30,900
because i wanted to show you guys the

00:30:24,780 --> 00:30:30,900
this running on my mac desktop yep

00:30:31,830 --> 00:30:38,350
that's tough for us to do we we do do it

00:30:35,740 --> 00:30:40,840
and i don't know admittedly I'm not as

00:30:38,350 --> 00:30:42,970
familiar with SS LS I should be just

00:30:40,840 --> 00:30:45,670
because I'm not an admin type guy but I

00:30:42,970 --> 00:30:46,960
think piggyback ssl i think is what we

00:30:45,670 --> 00:30:49,420
support but i'm not one hundred percent

00:30:46,960 --> 00:30:53,560
sure on that and i don't know the

00:30:49,420 --> 00:30:55,660
details enough ssl certs now that's on

00:30:53,560 --> 00:30:57,940
the free tier if you're deploying your

00:30:55,660 --> 00:31:00,400
company website out there obviously we

00:30:57,940 --> 00:31:02,680
would support that sure but on the free

00:31:00,400 --> 00:31:04,360
tier i think we do but you have to its

00:31:02,680 --> 00:31:07,900
old crazy or a little different than

00:31:04,360 --> 00:31:10,450
standard way of doing it so I don't know

00:31:07,900 --> 00:31:16,630
email open shifter reddit com and and

00:31:10,450 --> 00:31:18,330
I'll find out for you any other

00:31:16,630 --> 00:31:23,500
questions while I'm getting this Mac

00:31:18,330 --> 00:31:31,770
trash I carry this for that iphone and I

00:31:23,500 --> 00:31:31,770
was telling you guys about yeah

00:31:34,320 --> 00:31:38,159
mm-hmm yeah

00:31:41,850 --> 00:31:49,840
mm-hmm so for Pearl we support the

00:31:46,270 --> 00:31:52,210
question is how do you add dependencies

00:31:49,840 --> 00:31:55,120
for your languages whether that's a pis

00:31:52,210 --> 00:31:58,330
are in the Java world jar files or C pad

00:31:55,120 --> 00:32:00,190
modules or pair Peko modules or MP ohms

00:31:58,330 --> 00:32:01,660
and nodejs we basically support the

00:32:00,190 --> 00:32:05,680
standard way of doing that for every

00:32:01,660 --> 00:32:07,570
language other than PHP we actually have

00:32:05,680 --> 00:32:09,730
a dep list text which you can put your

00:32:07,570 --> 00:32:11,740
just list your pair modules in and we'll

00:32:09,730 --> 00:32:21,490
pull them in for you but there's a way

00:32:11,740 --> 00:32:23,920
to do it for every language it yeah if

00:32:21,490 --> 00:32:25,900
you were pulling down other libraries to

00:32:23,920 --> 00:32:27,820
use in your code we would pull down via

00:32:25,900 --> 00:32:34,150
Sipan is that is that what you're asking

00:32:27,820 --> 00:32:47,890
oh the actual pearl language itself that

00:32:34,150 --> 00:32:49,240
we're using Ono you don't have to do

00:32:47,890 --> 00:32:50,920
that you just list them and we'll pull

00:32:49,240 --> 00:32:57,160
them in you can specify the versions and

00:32:50,920 --> 00:33:02,940
however works with a maybe here we go

00:32:57,160 --> 00:33:02,940
starting may be searching or starting

00:33:07,419 --> 00:33:19,880
yeah yeah hang on let me close my email

00:33:18,679 --> 00:33:23,750
there might be something important here

00:33:19,880 --> 00:33:27,409
I don't want to go and my RC ham I got

00:33:23,750 --> 00:33:31,340
really good at my mess I'm a mess let me

00:33:27,409 --> 00:33:35,110
kill all this let me get on the Wi-Fi

00:33:31,340 --> 00:33:35,110
all right what was your question sorry

00:33:40,570 --> 00:33:48,759
mmhmm yeah most of the cases we have a

00:33:45,100 --> 00:33:50,710
directory in most cases called libs I'm

00:33:48,759 --> 00:33:51,940
not sure about the Pearl would what is

00:33:50,710 --> 00:33:55,980
called that you could drop them in there

00:33:51,940 --> 00:33:55,980
and we'll resolve it that way yeah

00:34:00,840 --> 00:34:20,050
energy yep yeah yeah we build on our

00:34:17,349 --> 00:34:21,579
servers and that gives us some

00:34:20,050 --> 00:34:23,669
advantages it's normally a lot quicker

00:34:21,579 --> 00:34:26,530
for us because we mirror most of the

00:34:23,669 --> 00:34:28,240
repos especially for java like I biblio

00:34:26,530 --> 00:34:29,859
to pull in maven dependencies and things

00:34:28,240 --> 00:34:36,280
like that so we do get some advantages

00:34:29,859 --> 00:34:43,139
from that all right let's see what we

00:34:36,280 --> 00:34:43,139
got here let's make sure can't see that

00:34:45,649 --> 00:34:48,649
alright

00:34:59,430 --> 00:35:04,720
alright so I'm doing the same thing here

00:35:01,920 --> 00:35:08,200
was creating a new app i'm calling it

00:35:04,720 --> 00:35:12,119
wordpress and it's a PHP 53 up let's see

00:35:08,200 --> 00:35:12,119
if my internets actually working

00:35:23,900 --> 00:35:27,590
I'll show you a wordpress real quick

00:35:25,850 --> 00:35:29,690
because it also will show you how to use

00:35:27,590 --> 00:35:31,580
a database with an open shift

00:35:29,690 --> 00:35:35,720
application so what I did is this

00:35:31,580 --> 00:35:40,850
command real quick and then I'm going to

00:35:35,720 --> 00:35:49,550
add my SQL let me cut and paste that to

00:35:40,850 --> 00:35:55,480
save some time maybe application already

00:35:49,550 --> 00:35:55,480
have one so this name at rest too

00:36:05,849 --> 00:36:11,460
can you ask it a different way I'm not

00:36:08,020 --> 00:36:11,460
sure I understood the question

00:36:21,460 --> 00:36:28,190
yeah so the question is when we add

00:36:24,530 --> 00:36:31,130
things is it already on that system for

00:36:28,190 --> 00:36:33,020
the most part yes because it is running

00:36:31,130 --> 00:36:34,670
rail if there r l packages they are

00:36:33,020 --> 00:36:38,420
available and already on the system

00:36:34,670 --> 00:36:40,370
what's interesting about our databases

00:36:38,420 --> 00:36:42,920
though and i'll show you this because

00:36:40,370 --> 00:36:44,660
our databases are not actually shared so

00:36:42,920 --> 00:36:48,050
when we create a database for you it is

00:36:44,660 --> 00:36:49,250
your database it's not you have root for

00:36:48,050 --> 00:36:51,500
the database you can do whatever you

00:36:49,250 --> 00:36:52,910
want so let's add the database real

00:36:51,500 --> 00:36:54,980
quick i just created this app so i'm

00:36:52,910 --> 00:36:56,120
going to say our HC app and we call

00:36:54,980 --> 00:36:58,550
databases and things like that

00:36:56,120 --> 00:37:00,380
cartridges so think of like the nintendo

00:36:58,550 --> 00:37:03,200
system you would plug a cartridge in and

00:37:00,380 --> 00:37:04,970
it changes the state of the machine so

00:37:03,200 --> 00:37:08,720
the same same situation here i'm going

00:37:04,970 --> 00:37:14,060
to add a mysql 51 cartridge to my

00:37:08,720 --> 00:37:16,940
wordpress to application could i had a

00:37:14,060 --> 00:37:20,480
what question is could you add an Oracle

00:37:16,940 --> 00:37:25,370
database absolutely not and you

00:37:20,480 --> 00:37:29,150
shouldn't hey oh that's true actually

00:37:25,370 --> 00:37:33,560
and I keep forgetting them and well what

00:37:29,150 --> 00:37:35,660
do you do with the open source version

00:37:33,560 --> 00:37:37,760
of this you could absolutely do it

00:37:35,660 --> 00:37:39,230
yourself we have a cartridge gene API to

00:37:37,760 --> 00:37:40,640
where you can write your own cartridges

00:37:39,230 --> 00:37:42,860
and if it was in your own data center

00:37:40,640 --> 00:37:47,510
and you could write at Oracle cartridge

00:37:42,860 --> 00:37:50,810
and yeah all right so here's my mysql

00:37:47,510 --> 00:37:53,120
database i have a root user password and

00:37:50,810 --> 00:37:54,830
created a default database for me just

00:37:53,120 --> 00:37:57,110
based on my application name it also

00:37:54,830 --> 00:37:59,510
gave me the connection URL you'll notice

00:37:57,110 --> 00:38:01,790
this is a non-routable private IP

00:37:59,510 --> 00:38:05,660
address you can't actually connect to it

00:38:01,790 --> 00:38:07,970
from any node other than your

00:38:05,660 --> 00:38:12,430
applications node so i can't connect to

00:38:07,970 --> 00:38:12,430
mysql locally kind of a pain in the ass

00:38:13,120 --> 00:38:19,640
no well not yet we will allow that the

00:38:17,870 --> 00:38:22,880
question is can you connect to a

00:38:19,640 --> 00:38:24,860
database for multiple applications today

00:38:22,880 --> 00:38:28,460
you cannot that will be coming out soon

00:38:24,860 --> 00:38:29,600
very soon so that was kind of a pain so

00:38:28,460 --> 00:38:32,060
if you want to do that we actually have

00:38:29,600 --> 00:38:34,580
a RHC port forward command that you can

00:38:32,060 --> 00:38:37,610
run and you pass in your application

00:38:34,580 --> 00:38:39,440
name it will actually scan your hosted

00:38:37,610 --> 00:38:47,720
forward all the ports you can connect to

00:38:39,440 --> 00:38:49,970
your mysql locally yep the question is

00:38:47,720 --> 00:38:52,970
is the database on a separate ec2

00:38:49,970 --> 00:39:01,880
instance more than likely not but it

00:38:52,970 --> 00:39:04,660
could be it could be what do we do for

00:39:01,880 --> 00:39:07,010
backups we do not back up your data

00:39:04,660 --> 00:39:08,960
because there's too many legal

00:39:07,010 --> 00:39:11,840
ramifications for that your data is your

00:39:08,960 --> 00:39:13,850
data we do not want anything to do with

00:39:11,840 --> 00:39:16,520
your data or to house it in case you get

00:39:13,850 --> 00:39:18,140
sued and then we get subpoenaed and it

00:39:16,520 --> 00:39:22,700
were just stay now that business so what

00:39:18,140 --> 00:39:25,240
we have actually is a command called RHC

00:39:22,700 --> 00:39:29,870
snapshot you can pass in your app name

00:39:25,240 --> 00:39:31,340
you know basically it does this over ssh

00:39:29,870 --> 00:39:33,260
but actually goes to your openshift

00:39:31,340 --> 00:39:35,990
server gathers up all your source code

00:39:33,260 --> 00:39:38,090
all your configuration files does a

00:39:35,990 --> 00:39:40,490
database dump if you're using like minus

00:39:38,090 --> 00:39:43,040
QL do a minus killed dump we also give

00:39:40,490 --> 00:39:44,600
you the files for the database the

00:39:43,040 --> 00:39:46,490
actual files on the file systems he

00:39:44,600 --> 00:39:48,590
could recreate it and you can take that

00:39:46,490 --> 00:39:50,270
tar.gz file and do whatever you want

00:39:48,590 --> 00:39:55,330
with you get deploy it locally you can

00:39:50,270 --> 00:39:55,330
recreate a half off a snapshot yeah

00:39:58,240 --> 00:40:02,660
question is what are we using for

00:39:59,930 --> 00:40:06,830
storage reusing abs on the back end

00:40:02,660 --> 00:40:10,550
lastly block storage yeah okay so i

00:40:06,830 --> 00:40:12,890
created a wordpress application i

00:40:10,550 --> 00:40:14,450
created a database now like I said

00:40:12,890 --> 00:40:17,180
earlier because we have no proprietary

00:40:14,450 --> 00:40:20,390
api's at all your source code should

00:40:17,180 --> 00:40:24,050
just work out of the box so i'm going to

00:40:20,390 --> 00:40:32,510
show you that by grabbing the wordpress

00:40:24,050 --> 00:40:33,830
source code this that all right so what

00:40:32,510 --> 00:40:38,540
I'm doing if you're not familiar with

00:40:33,830 --> 00:40:41,450
get as I'm saying what did I what

00:40:38,540 --> 00:40:51,080
happened here to that pay strong fatal

00:40:41,450 --> 00:40:53,960
remote upstream oh okay so I'm adding my

00:40:51,080 --> 00:40:55,880
remote or the remote WordPress github

00:40:53,960 --> 00:40:59,210
repository and then I'm going to issue

00:40:55,880 --> 00:41:00,740
this get pull which basically is going

00:40:59,210 --> 00:41:02,150
to override everything I have in my

00:41:00,740 --> 00:41:04,280
director you remember that stupid little

00:41:02,150 --> 00:41:06,410
sample web page that we displayed it's

00:41:04,280 --> 00:41:08,600
going to remove that and replace it with

00:41:06,410 --> 00:41:15,470
the wordpress source code so I'll do

00:41:08,600 --> 00:41:19,130
that it's downloading it from github so

00:41:15,470 --> 00:41:21,800
that's done so now if i go into PHP it's

00:41:19,130 --> 00:41:27,050
the wordpress source code so now all i

00:41:21,800 --> 00:41:29,390
have to do is get push and it's going to

00:41:27,050 --> 00:41:31,400
send my source code up to open shift and

00:41:29,390 --> 00:41:34,070
because it's PHP it's it's not a

00:41:31,400 --> 00:41:37,540
compiled language so it is it's not

00:41:34,070 --> 00:41:37,540
going to go through a build process yeah

00:41:48,049 --> 00:41:52,799
that's right so so the question is how

00:41:51,630 --> 00:41:54,359
do you handle things that you wouldn't

00:41:52,799 --> 00:41:56,960
want checked into revision control like

00:41:54,359 --> 00:41:58,799
passwords you would actually set them as

00:41:56,960 --> 00:42:03,240
environment variables that's the

00:41:58,799 --> 00:42:05,849
practice we suggest and I can show you

00:42:03,240 --> 00:42:14,099
something that we set for you by little

00:42:05,849 --> 00:42:18,740
people all right so let's see if this

00:42:14,099 --> 00:42:22,829
actually worked word press to pass rh

00:42:18,740 --> 00:42:30,450
cloud.com and I spell it wrong with word

00:42:22,829 --> 00:42:34,730
rest wordpress and here's my wordpress

00:42:30,450 --> 00:42:34,730
site so it's just the

00:42:35,310 --> 00:42:45,780
it doesn't for you actually like i was

00:42:38,280 --> 00:42:47,280
saying environment variables so yes it

00:42:45,780 --> 00:42:49,680
did so i'll show you another cool thing

00:42:47,280 --> 00:42:53,160
about openshift because here's my get

00:42:49,680 --> 00:42:56,460
you are ill this is also my user ID for

00:42:53,160 --> 00:43:04,740
the box and the hostname and so i can

00:42:56,460 --> 00:43:08,310
ssh en and if i do EMV and you know grip

00:43:04,740 --> 00:43:10,650
DB it's probably a little too much

00:43:08,310 --> 00:43:13,920
information for you to parse but it does

00:43:10,650 --> 00:43:15,870
have like a DB password and so in the

00:43:13,920 --> 00:43:18,240
config files instead of having the

00:43:15,870 --> 00:43:19,770
password in PHP and you can do this in

00:43:18,240 --> 00:43:22,050
all languages I basically use the system

00:43:19,770 --> 00:43:32,880
environment variable on the connection

00:43:22,050 --> 00:43:34,680
streets say it again it's the same sort

00:43:32,880 --> 00:43:36,450
code and there is a difference here and

00:43:34,680 --> 00:43:40,830
I'll show you because there was a little

00:43:36,450 --> 00:43:43,260
bit of man here because the database was

00:43:40,830 --> 00:43:49,500
has to be created right and so what I

00:43:43,260 --> 00:43:54,980
did is me exit out it is this is the

00:43:49,500 --> 00:43:59,310
only change to the core WordPress here

00:43:54,980 --> 00:44:02,310
if I go into dot open shift there is a

00:43:59,310 --> 00:44:05,850
action hooks directory and here you can

00:44:02,310 --> 00:44:09,630
do scripts that will happen and so if i

00:44:05,850 --> 00:44:11,460
look at my build script I think know

00:44:09,630 --> 00:44:13,740
where is it let me look at the files

00:44:11,460 --> 00:44:16,520
length here just a ploy because PHP

00:44:13,740 --> 00:44:16,520
doesn't build

00:44:18,460 --> 00:44:23,680
I just read this little script to see if

00:44:21,040 --> 00:44:28,150
a database has been configured and been

00:44:23,680 --> 00:44:34,089
installed if it hasn't I I create one

00:44:28,150 --> 00:44:36,820
based on this database export that I did

00:44:34,089 --> 00:44:38,910
so that's the only magic that really

00:44:36,820 --> 00:44:42,010
happens there the source code is fine

00:44:38,910 --> 00:44:43,450
and I just did that to make it easier

00:44:42,010 --> 00:44:45,490
for people because WordPress is one of

00:44:43,450 --> 00:44:47,530
those things that everyone's grandma

00:44:45,490 --> 00:44:49,810
loves to use and so we want to make it

00:44:47,530 --> 00:44:51,880
really easy not that your grandma would

00:44:49,810 --> 00:44:55,930
ever come the command line she would

00:44:51,880 --> 00:44:58,089
come here and I'll show you we have

00:44:55,930 --> 00:45:01,290
these things called instant apps let me

00:44:58,089 --> 00:45:01,290
log in here real quick

00:45:15,080 --> 00:45:21,180
the question is or the statement was

00:45:18,150 --> 00:45:24,720
that you can ssh into that instance but

00:45:21,180 --> 00:45:27,090
you don't have root that is correct you

00:45:24,720 --> 00:45:28,950
know if your ssh into your box we wanted

00:45:27,090 --> 00:45:30,900
to allow people to freedom to do that

00:45:28,950 --> 00:45:32,070
but at that point you might as well just

00:45:30,900 --> 00:45:33,990
go with a straight

00:45:32,070 --> 00:45:35,610
infrastructure-as-a-service if you're

00:45:33,990 --> 00:45:39,380
having to log into your box and start

00:45:35,610 --> 00:45:41,850
managing things yourself we do have a

00:45:39,380 --> 00:45:45,390
do-it-yourself cartridge like if you

00:45:41,850 --> 00:45:46,500
wanted to basically just use open shift

00:45:45,390 --> 00:45:48,480
as an infrastructure-as-a-service

00:45:46,500 --> 00:45:51,960
instead of specifying like a language

00:45:48,480 --> 00:45:53,640
type PHP or java you just do DIY and you

00:45:51,960 --> 00:45:56,010
basically just SSH into the box and

00:45:53,640 --> 00:45:57,780
install whatever you want you have you

00:45:56,010 --> 00:46:07,410
can compile things that you do whatever

00:45:57,780 --> 00:46:13,830
you need to do at that point and I think

00:46:07,410 --> 00:46:16,820
my internet just died so that's going

00:46:13,830 --> 00:46:16,820
quickly

00:46:23,350 --> 00:46:31,720
so i'm going to show you let me go back

00:46:26,960 --> 00:46:31,720
I don't have the slides on here anymore

00:46:32,710 --> 00:46:38,080
so a couple weeks ago like I said it's

00:46:35,870 --> 00:46:41,810
probably been a month ago we realized

00:46:38,080 --> 00:46:43,900
that people want to take advantage of

00:46:41,810 --> 00:46:47,930
this but they can't necessarily do that

00:46:43,900 --> 00:46:49,730
for Policy compliance reasons especially

00:46:47,930 --> 00:46:52,100
for your government shop or something

00:46:49,730 --> 00:46:54,590
like that or people may just have a huge

00:46:52,100 --> 00:46:58,220
investment in hardware that they already

00:46:54,590 --> 00:47:00,710
have in their data center but they still

00:46:58,220 --> 00:47:02,570
want to be able to take advantage of how

00:47:00,710 --> 00:47:04,190
easy it was to get something deployed

00:47:02,570 --> 00:47:06,890
out there because think about it you

00:47:04,190 --> 00:47:09,680
know as developers if we wanted to spin

00:47:06,890 --> 00:47:12,650
up a five node cluster in the past to

00:47:09,680 --> 00:47:14,090
kind of mirror or production environment

00:47:12,650 --> 00:47:16,460
it would take a lot of hassle for us to

00:47:14,090 --> 00:47:19,310
do that we'd have to get the IT guys to

00:47:16,460 --> 00:47:21,080
you know basically do it for us and we

00:47:19,310 --> 00:47:24,170
can alleviate that now I could create a

00:47:21,080 --> 00:47:27,320
you know a 50 node exact replica of

00:47:24,170 --> 00:47:29,240
production with a scaled database

00:47:27,320 --> 00:47:31,250
and you know less than five minutes or

00:47:29,240 --> 00:47:33,290
something like that so it will change

00:47:31,250 --> 00:47:36,260
how we develop because today we develop

00:47:33,290 --> 00:47:38,270
locally single node most of the time and

00:47:36,260 --> 00:47:40,250
we deploy to a cluster and some of the

00:47:38,270 --> 00:47:41,840
junior developers it's real struggle for

00:47:40,250 --> 00:47:44,300
them and it's a struggle for some of the

00:47:41,840 --> 00:47:46,820
senior level engineers as well but

00:47:44,300 --> 00:47:48,500
junior developers they don't understand

00:47:46,820 --> 00:47:50,060
that in a clustered environment you

00:47:48,500 --> 00:47:52,220
can't actually store session state on

00:47:50,060 --> 00:47:53,600
the file system right because the next

00:47:52,220 --> 00:47:55,460
server won't be able to pick it up so

00:47:53,600 --> 00:47:59,180
things like that and so it will help us

00:47:55,460 --> 00:48:05,930
out as developers so I'm going to create

00:47:59,180 --> 00:48:12,290
a new virtual machine it's linux it's a

00:48:05,930 --> 00:48:15,920
fedora 64 bit and give us a name of

00:48:12,290 --> 00:48:20,840
selinux click continue you will give it

00:48:15,920 --> 00:48:22,550
some memory here I'm not going to create

00:48:20,840 --> 00:48:25,670
a startup justice because this is a live

00:48:22,550 --> 00:48:28,849
CD that I'm using so I don't need a hard

00:48:25,670 --> 00:48:37,190
drive for it great

00:48:28,849 --> 00:48:39,380
I'm going to make sure that with a

00:48:37,190 --> 00:48:46,339
little more very now I'm going to mount

00:48:39,380 --> 00:48:51,529
the iso image and it's a live CD and

00:48:46,339 --> 00:48:53,450
again you can download this if you log

00:48:51,529 --> 00:48:56,239
into openshift com there's a download

00:48:53,450 --> 00:48:59,150
link there you can also go to github com

00:48:56,239 --> 00:49:00,710
/ openshift if you actually want to pull

00:48:59,150 --> 00:49:03,140
down the source code it's written in

00:49:00,710 --> 00:49:05,029
Ruby if you want to work on that we have

00:49:03,140 --> 00:49:09,910
pre-built binaries like i said earlier

00:49:05,029 --> 00:49:13,640
for rail red hat enterprise linux and

00:49:09,910 --> 00:49:15,079
fedora if you use a different version or

00:49:13,640 --> 00:49:22,819
flavor of linux we would love help

00:49:15,079 --> 00:49:26,119
porting it over to that yep that's

00:49:22,819 --> 00:49:30,739
correct yep the question is what exactly

00:49:26,119 --> 00:49:33,469
is this right and so this is a the exact

00:49:30,739 --> 00:49:35,239
same code that we're using on the hosted

00:49:33,469 --> 00:49:37,569
stuff that I just showed you that will

00:49:35,239 --> 00:49:40,729
allow you to run it locally using

00:49:37,569 --> 00:49:45,670
virtualization and we actually use kvm

00:49:40,729 --> 00:49:45,670
for the for the open shift origin side

00:49:45,849 --> 00:49:49,700
okay so the first thing when you boot

00:49:48,259 --> 00:49:52,789
the live CD it will give you a little

00:49:49,700 --> 00:49:58,249
information about it and then if I

00:49:52,789 --> 00:49:59,900
actually go to my terminal by default it

00:49:58,249 --> 00:50:02,809
creates an admin user with admin

00:49:59,900 --> 00:50:05,380
password so i can do our HC domain

00:50:02,809 --> 00:50:08,859
create i'll give it a name of test oh

00:50:05,380 --> 00:50:08,859
maybe that's the wrong

00:50:15,890 --> 00:50:21,289
that's where i forgot the command on how

00:50:19,259 --> 00:50:27,019
to do this because you only do it once

00:50:21,289 --> 00:50:27,019
five minutes five minutes all right i

00:50:28,099 --> 00:50:32,970
only done this once because you set up a

00:50:31,049 --> 00:50:35,640
namespace the first time you don't mess

00:50:32,970 --> 00:50:38,999
with it after that but all the commands

00:50:35,640 --> 00:50:41,130
are here it already has j balls PHP perl

00:50:38,999 --> 00:50:43,109
all of those things that i showed you on

00:50:41,130 --> 00:50:45,059
the hosted environment running here on

00:50:43,109 --> 00:50:48,480
this live CD you can copy it over to

00:50:45,059 --> 00:50:51,299
your hard drive and start using it so a

00:50:48,480 --> 00:50:55,049
lot of people ask us you know kvm well

00:50:51,299 --> 00:50:56,339
what about OpenStack so OpenStack if

00:50:55,049 --> 00:50:59,190
you're not familiar with that is

00:50:56,339 --> 00:51:00,180
basically open source project to allow

00:50:59,190 --> 00:51:02,400
you to create your own infrastructure

00:51:00,180 --> 00:51:05,640
service similar to ec2 in your own data

00:51:02,400 --> 00:51:07,499
center we are very committed to

00:51:05,640 --> 00:51:10,619
OpenStack remember the OpenStack

00:51:07,499 --> 00:51:14,730
foundation we have several core

00:51:10,619 --> 00:51:16,950
contributors on the team and our goal is

00:51:14,730 --> 00:51:18,869
to be the best platform as a service to

00:51:16,950 --> 00:51:21,239
run on top of OpenStack in your own data

00:51:18,869 --> 00:51:23,369
centers with the open source project so

00:51:21,239 --> 00:51:27,630
how can you get involved it isn't a

00:51:23,369 --> 00:51:29,970
patchy license it's very business

00:51:27,630 --> 00:51:31,499
friendly we do not require contributor

00:51:29,970 --> 00:51:33,690
agreement so if you want to submit code

00:51:31,499 --> 00:51:35,880
you don't have to you know sign the

00:51:33,690 --> 00:51:38,430
paper that a lot of open source projects

00:51:35,880 --> 00:51:42,619
larger open source projects want you to

00:51:38,430 --> 00:51:45,599
do is truly an open source project we're

00:51:42,619 --> 00:51:47,579
not we didn't open source it for the

00:51:45,599 --> 00:51:49,259
sake of open sourcing it a lot of people

00:51:47,579 --> 00:51:51,210
say that they have an open source

00:51:49,259 --> 00:51:53,009
project but it's really a closed open

00:51:51,210 --> 00:51:55,200
source project try to get something

00:51:53,009 --> 00:51:56,910
contributed to one of these projects and

00:51:55,200 --> 00:51:59,430
the company controls everything and

00:51:56,910 --> 00:52:01,349
that's not what we intend here we really

00:51:59,430 --> 00:52:04,529
want it to be a community-driven project

00:52:01,349 --> 00:52:08,489
how can you get involved get the code go

00:52:04,529 --> 00:52:09,660
to the wiki if you're not a developer or

00:52:08,489 --> 00:52:11,430
if you're not a system administrator

00:52:09,660 --> 00:52:15,900
there's a lot of other areas you can

00:52:11,430 --> 00:52:19,410
help translation documentation whatever

00:52:15,900 --> 00:52:22,000
you know you want to help out with we

00:52:19,410 --> 00:52:24,340
don't have a governance model yet will

00:52:22,000 --> 00:52:26,380
to flesh that out as a community starts

00:52:24,340 --> 00:52:27,670
growing around this this is only open

00:52:26,380 --> 00:52:30,450
shift as a whole has only been around

00:52:27,670 --> 00:52:32,710
about eight months and the open source

00:52:30,450 --> 00:52:34,900
origin bits have only been around for

00:52:32,710 --> 00:52:36,190
about a month so I have a lot a lot of

00:52:34,900 --> 00:52:40,060
room we grow we made a lot of progress

00:52:36,190 --> 00:52:43,270
and we look forward to you guys helping

00:52:40,060 --> 00:52:45,700
us continue this project and making it a

00:52:43,270 --> 00:52:48,520
great thing for us to use in the

00:52:45,700 --> 00:52:52,390
industry that's basically I don't have

00:52:48,520 --> 00:52:54,040
the slides on this computer so I'll save

00:52:52,390 --> 00:52:55,810
you the marketing slides at the end but

00:52:54,040 --> 00:52:57,190
i'll be sticking around for a little bit

00:52:55,810 --> 00:53:01,470
if you guys have questions I think

00:52:57,190 --> 00:53:01,470
amount of time now one question yeah oh

00:53:03,270 --> 00:53:07,180
yeah I didn't show you that so basically

00:53:05,950 --> 00:53:09,490
the question how do you scale the

00:53:07,180 --> 00:53:11,410
application when you create your app you

00:53:09,490 --> 00:53:15,070
can do our HC app create give it a name

00:53:11,410 --> 00:53:17,260
my app and AB dash S to it this will

00:53:15,070 --> 00:53:19,450
tell openshift that you want this

00:53:17,260 --> 00:53:21,520
application to scale automatically if

00:53:19,450 --> 00:53:23,140
you don't want it to scale automatically

00:53:21,520 --> 00:53:25,540
you want a manual scale you can do that

00:53:23,140 --> 00:53:28,540
as well what basically happens here when

00:53:25,540 --> 00:53:31,270
you pass on dash yes we create two nodes

00:53:28,540 --> 00:53:33,370
for your app one is H a proxy and then

00:53:31,270 --> 00:53:36,160
we create your app under that and so

00:53:33,370 --> 00:53:37,600
then as you and the way we actually

00:53:36,160 --> 00:53:40,210
scale is we take a look at your

00:53:37,600 --> 00:53:42,190
application every 20 seconds to see if

00:53:40,210 --> 00:53:44,560
you've had more than 10 concurrent HTTP

00:53:42,190 --> 00:53:46,810
requests if you have we add another node

00:53:44,560 --> 00:53:49,900
and load balance it with H a proxy and

00:53:46,810 --> 00:53:52,210
then as you know we really look at that

00:53:49,900 --> 00:53:54,070
in your beginning satisfy demand will

00:53:52,210 --> 00:53:57,040
either remove an odor at another one and

00:53:54,070 --> 00:53:58,720
will bleed those connections off yeah

00:53:57,040 --> 00:54:02,410
and if you want to manually scale you

00:53:58,720 --> 00:54:04,150
can you would just embed a che proxy and

00:54:02,410 --> 00:54:05,650
then there's a scale up in a scale down

00:54:04,150 --> 00:54:07,330
command if you know you have a release

00:54:05,650 --> 00:54:11,580
that's going to get some traffic to your

00:54:07,330 --> 00:54:11,580
website yep

00:54:13,140 --> 00:54:19,510
not yet we would love for it to round

00:54:17,080 --> 00:54:23,290
there but it realistic it'll run on

00:54:19,510 --> 00:54:34,119
eucalyptus and I'll run on amazon ec2

00:54:23,290 --> 00:54:36,580
today we have a am I for it yep we are

00:54:34,119 --> 00:54:38,619
not using delta cloud no that's what

00:54:36,580 --> 00:54:40,180
we're working on right now and we

00:54:38,619 --> 00:54:42,640
actually have another project at Red Hat

00:54:40,180 --> 00:54:45,160
called Aeolus it's the open source

00:54:42,640 --> 00:54:47,020
project that will kind of allow you it

00:54:45,160 --> 00:54:48,670
abstracts the whole cloud problem there

00:54:47,020 --> 00:54:50,320
needs to be standards with how we talk

00:54:48,670 --> 00:54:52,180
to cloud providers but it's going to

00:54:50,320 --> 00:54:53,830
abstract that so you can talk to all

00:54:52,180 --> 00:54:55,750
these cloud providers with a single API

00:54:53,830 --> 00:55:00,940
and so hopefully that's what will

00:54:55,750 --> 00:55:03,690
eventually run on yeah all right thanks

00:55:00,940 --> 00:55:03,690
guys appreciate ur

00:55:12,780 --> 00:55:19,230
how's that sigh every way this is the

00:55:15,930 --> 00:55:21,390
way to better utilize all your resources

00:55:19,230 --> 00:55:24,840
and it makes managing all your resources

00:55:21,390 --> 00:55:28,670
pretty easy all of the innovation is

00:55:24,840 --> 00:55:32,190
happening in open source the

00:55:28,670 --> 00:55:33,990
collaborative nature and of the you know

00:55:32,190 --> 00:55:35,910
of the community and the speed at which

00:55:33,990 --> 00:55:38,100
these are these you know these

00:55:35,910 --> 00:55:40,410
deficiencies these bugs are getting

00:55:38,100 --> 00:55:43,020
discovered and then fixed is it like

00:55:40,410 --> 00:55:45,720
that really shows the power of the you

00:55:43,020 --> 00:55:47,340
know of the open source community it is

00:55:45,720 --> 00:55:51,540
global and it's definitely because of

00:55:47,340 --> 00:55:57,870
the users community people are extremely

00:55:51,540 --> 00:55:59,610
friendly and always ready to help if you

00:55:57,870 --> 00:56:01,320
go an entire see any day you'll see

00:55:59,610 --> 00:56:03,180
these guys helping each other out and

00:56:01,320 --> 00:56:06,090
they're all doing it like in a selfless

00:56:03,180 --> 00:56:07,920
manner the product is transparent for

00:56:06,090 --> 00:56:11,940
everyone everyone can look at the code

00:56:07,920 --> 00:56:14,160
base everyone can see how close that is

00:56:11,940 --> 00:56:20,010
being built nothing nothing is

00:56:14,160 --> 00:56:22,650
proprietary everything is open in many

00:56:20,010 --> 00:56:26,850
ways it's absolutely vital to the the

00:56:22,650 --> 00:56:30,630
ongoing health CloudStack the most

00:56:26,850 --> 00:56:34,560
exciting event in recent memory for me

00:56:30,630 --> 00:56:37,170
was our first developer boot camp

00:56:34,560 --> 00:56:39,840
and our call gave people a gave me two

00:56:37,170 --> 00:56:43,770
weeks notice to come attend I was

00:56:39,840 --> 00:56:48,030
expecting 25 or 30 people so we ended up

00:56:43,770 --> 00:56:50,790
with 87 people and had to go get board

00:56:48,030 --> 00:56:53,310
chairs in the room twice everything

00:56:50,790 --> 00:56:56,580
within cloud computing is commodity and

00:56:53,310 --> 00:56:59,640
is open source and so I don't think that

00:56:56,580 --> 00:57:01,410
you will you'll see anywhere where open

00:56:59,640 --> 00:57:04,440
source is not pervasive in cloud

00:57:01,410 --> 00:57:07,140
computing and so i think it's i think

00:57:04,440 --> 00:57:08,490
it's an assumption i think when you talk

00:57:07,140 --> 00:57:12,230
about cloud computing you're really

00:57:08,490 --> 00:57:12,230
talking about a source cloud computing

00:57:12,500 --> 00:57:18,570
cloud sac is a robust solution for large

00:57:15,780 --> 00:57:20,940
deployments you'll have dozens of data

00:57:18,570 --> 00:57:24,900
centers and thousands of servers in each

00:57:20,940 --> 00:57:28,230
data center is these hardware is going

00:57:24,900 --> 00:57:31,470
to fail and CloudStack is designed to

00:57:28,230 --> 00:57:33,930
handle number one that mass scale number

00:57:31,470 --> 00:57:36,660
two it's designed to handle the failure

00:57:33,930 --> 00:57:38,910
that inevitably happens in large

00:57:36,660 --> 00:57:42,750
deployments we started working on

00:57:38,910 --> 00:57:46,080
contact over four years ago and it was

00:57:42,750 --> 00:57:48,750
the original set of people working on it

00:57:46,080 --> 00:57:52,860
had a background of delivering software

00:57:48,750 --> 00:57:57,120
telcos and service providers lots of QA

00:57:52,860 --> 00:58:00,720
lots of users actually using it high

00:57:57,120 --> 00:58:03,810
availability is the key feature multiple

00:58:00,720 --> 00:58:05,820
hypervisors support different network

00:58:03,810 --> 00:58:08,490
models you can pick up whatever suits

00:58:05,820 --> 00:58:10,770
you better while step management server

00:58:08,490 --> 00:58:14,460
can be deployed in different physical

00:58:10,770 --> 00:58:16,110
machines it definitely has a huge

00:58:14,460 --> 00:58:21,090
footprint it's being deployed everywhere

00:58:16,110 --> 00:58:23,670
there's a major movie studio that they

00:58:21,090 --> 00:58:26,970
were using cloudstack they were using it

00:58:23,670 --> 00:58:28,950
to transcode video and i thought that

00:58:26,970 --> 00:58:30,600
was terribly fascinating what i found

00:58:28,950 --> 00:58:33,870
more fascinating is what they did during

00:58:30,600 --> 00:58:36,660
lunch where they would spin up you know

00:58:33,870 --> 00:58:38,010
50 or 60 game servers then as soon as

00:58:36,660 --> 00:58:38,540
lunch was over they would destroy all

00:58:38,010 --> 00:58:40,720
the esta

00:58:38,540 --> 00:58:44,120
Susan go back to doing real work

00:58:40,720 --> 00:58:45,650
CloudStack is vast it touches so many

00:58:44,120 --> 00:58:47,510
different aspects and there's no one

00:58:45,650 --> 00:58:50,180
person that's kind of like a master of

00:58:47,510 --> 00:58:53,990
all those realms I think clouds stack as

00:58:50,180 --> 00:58:56,300
a project is going to be one of the

00:58:53,990 --> 00:59:00,260
leaders simply because it's some of the

00:58:56,300 --> 00:59:05,810
most feature fallen and and robust

00:59:00,260 --> 00:59:08,590
platforms out favor Adam senior living

00:59:05,810 --> 00:59:08,590
through the clouds dag

00:59:52,190 --> 00:59:54,250
you

00:59:57,470 --> 01:00:02,519
when we created asterisk over a decade

01:00:00,180 --> 01:00:04,499
ago we could not have imagined that

01:00:02,519 --> 01:00:06,690
asterisk would not only become the most

01:00:04,499 --> 01:00:08,819
widely adopted open source communication

01:00:06,690 --> 01:00:10,859
software on the planet but that it would

01:00:08,819 --> 01:00:13,380
impact the entire industry in the way

01:00:10,859 --> 01:00:15,359
that it has today asterisk has found its

01:00:13,380 --> 01:00:17,999
way into more than 170 countries and

01:00:15,359 --> 01:00:19,950
virtually every fortune 1000 company the

01:00:17,999 --> 01:00:22,049
success of asterisk has enabled a

01:00:19,950 --> 01:00:23,460
transition of power from the hands of

01:00:22,049 --> 01:00:25,739
the traditional proprietary phone

01:00:23,460 --> 01:00:28,109
vendors into the hands of the users and

01:00:25,739 --> 01:00:30,059
administrators of phone systems using

01:00:28,109 --> 01:00:31,289
this power our customers have created

01:00:30,059 --> 01:00:33,239
all sorts of business changing

01:00:31,289 --> 01:00:35,069
applications from small office phone

01:00:33,239 --> 01:00:37,589
systems to mission-critical call centres

01:00:35,069 --> 01:00:39,210
the international carrier networks in

01:00:37,589 --> 01:00:40,980
fact there's even an entire country

01:00:39,210 --> 01:00:43,589
those communications of a structure runs

01:00:40,980 --> 01:00:45,509
on esters the gym has always been about

01:00:43,589 --> 01:00:47,220
creating technology that expands

01:00:45,509 --> 01:00:49,380
communications capabilities in ways that

01:00:47,220 --> 01:00:50,579
we could never have imagined and that's

01:00:49,380 --> 01:00:52,980
part of what's game-changing about

01:00:50,579 --> 01:00:55,680
Digium today we're doing it again this

01:00:52,980 --> 01:00:57,779
time by introducing a new family of HD

01:00:55,680 --> 01:00:59,880
IP phones that extends control of the

01:00:57,779 --> 01:01:01,650
user all the way to the desktop the

01:00:59,880 --> 01:01:03,359
launch of these new products represents

01:01:01,650 --> 01:01:05,309
the next phase in de jambes history of

01:01:03,359 --> 01:01:07,859
innovation these are the first and only

01:01:05,309 --> 01:01:09,569
IP phones designed to fully leverage the

01:01:07,859 --> 01:01:11,130
power of estrus when we first discussed

01:01:09,569 --> 01:01:13,170
our expectations for building a family

01:01:11,130 --> 01:01:15,299
of phones for use with asterisk our

01:01:13,170 --> 01:01:17,039
requirements were pretty simple we asked

01:01:15,299 --> 01:01:18,690
the team to build the phones such that

01:01:17,039 --> 01:01:20,880
they were easy to install integrate

01:01:18,690 --> 01:01:22,710
provision in use I think you'll soon

01:01:20,880 --> 01:01:25,289
agree our engineers have delivered on

01:01:22,710 --> 01:01:26,910
that goal user feedback is validating

01:01:25,289 --> 01:01:29,039
that when it comes to operation with

01:01:26,910 --> 01:01:31,470
astro space systems including our own

01:01:29,039 --> 01:01:34,019
Switchvox based product these are the

01:01:31,470 --> 01:01:35,339
easiest to use best integrated most

01:01:34,019 --> 01:01:37,920
interoperable products on the market

01:01:35,339 --> 01:01:39,930
today the digitally phones will

01:01:37,920 --> 01:01:41,970
initially include three IP desk phones

01:01:39,930 --> 01:01:43,920
uniquely designed to complement any

01:01:41,970 --> 01:01:45,779
asterisk or switch box based solution

01:01:43,920 --> 01:01:48,450
these phones are different for a number

01:01:45,779 --> 01:01:51,119
of reasons first there is clue sively

01:01:48,450 --> 01:01:52,529
designed for use with esters secondly

01:01:51,119 --> 01:01:54,140
we've made it really easy to

01:01:52,529 --> 01:01:56,549
autodiscover and provision the phones

01:01:54,140 --> 01:01:58,619
next we've made it easy for the phones

01:01:56,549 --> 01:02:00,569
to access information inside of asterisk

01:01:58,619 --> 01:02:02,190
allowing tight coupling between an

01:02:00,569 --> 01:02:04,150
application and the

01:02:02,190 --> 01:02:06,309
additionally we've created an

01:02:04,150 --> 01:02:08,440
applications engineer that allows users

01:02:06,309 --> 01:02:11,650
and developers to create and run their

01:02:08,440 --> 01:02:13,450
own apps on the phone and finally we've

01:02:11,650 --> 01:02:15,400
done all of this at a very compelling

01:02:13,450 --> 01:02:17,079
price point at Digium we're always

01:02:15,400 --> 01:02:19,180
thinking of ways to give our customers

01:02:17,079 --> 01:02:21,730
the best value in business phone systems

01:02:19,180 --> 01:02:23,289
and also give them the power to create

01:02:21,730 --> 01:02:25,420
their own solutions or any

01:02:23,289 --> 01:02:27,160
communications challenge well continue

01:02:25,420 --> 01:02:28,569
to push the boundaries not only to make

01:02:27,160 --> 01:02:30,640
Astra's cooler faster and more

01:02:28,569 --> 01:02:32,260
technologically feature-rich but to make

01:02:30,640 --> 01:02:34,720
asterisk and what communications even

01:02:32,260 --> 01:02:38,190
easier and together we'll change the way

01:02:34,720 --> 01:02:38,190

YouTube URL: https://www.youtube.com/watch?v=34SWrEnJHmo


