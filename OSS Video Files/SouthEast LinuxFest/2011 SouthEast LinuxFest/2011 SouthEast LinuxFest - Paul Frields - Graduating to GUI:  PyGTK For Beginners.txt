Title: 2011 SouthEast LinuxFest - Paul Frields - Graduating to GUI:  PyGTK For Beginners
Publication date: 2012-03-20
Playlist: 2011 SouthEast LinuxFest
Description: 
	2011 SouthEast LinuxFest - Paul Frields - Graduating to GUI:  PyGTK For Beginners

This video is licensed under Creative Commons Attribution 3.0 Unported License.
Captions: 
	00:00:01,159 --> 00:00:07,319
the following presentation was recorded

00:00:04,230 --> 00:00:09,900
at the 2011 southeast linux fest in

00:00:07,319 --> 00:00:11,400
Spartanburg South Carolina it is

00:00:09,900 --> 00:00:14,219
licensed under a creative commons

00:00:11,400 --> 00:00:18,390
license for more information about the

00:00:14,219 --> 00:00:21,869
southeast linux fest visit www southeast

00:00:18,390 --> 00:00:23,100
linux pc org the southeast linux fest

00:00:21,869 --> 00:00:26,460
would like to thank the following

00:00:23,100 --> 00:00:30,380
diamond and platinum sponsors in 2011

00:00:26,460 --> 00:00:30,380
for helping make these videos possible

00:00:54,630 --> 00:01:02,360
I've only learned a little bit not a lot

00:00:58,490 --> 00:01:05,430
probably not as much as Glenn so um

00:01:02,360 --> 00:01:07,320
welcome everybody I'd like to thank the

00:01:05,430 --> 00:01:11,400
southeast linux fest for having me back

00:01:07,320 --> 00:01:14,490
this year to to do a talk this is

00:01:11,400 --> 00:01:16,920
actually a slight update to a talk I

00:01:14,490 --> 00:01:20,340
gave last year also it's a somewhat of a

00:01:16,920 --> 00:01:24,390
condensation of that talk which was on

00:01:20,340 --> 00:01:26,010
pi gtk so thanks you too thank you to

00:01:24,390 --> 00:01:27,720
the self organizers for having me back

00:01:26,010 --> 00:01:29,330
to to talk about this again something

00:01:27,720 --> 00:01:33,540
near and dear to my heart which is

00:01:29,330 --> 00:01:35,160
getting beginners who are comfortable

00:01:33,540 --> 00:01:37,770
with scripting languages and maybe have

00:01:35,160 --> 00:01:39,270
been around linux for a while I've been

00:01:37,770 --> 00:01:40,650
around free software for a while but

00:01:39,270 --> 00:01:43,590
they're trying to make the jump to

00:01:40,650 --> 00:01:45,869
learning how a GUI works and how you can

00:01:43,590 --> 00:01:48,900
right tools for yourself that they use a

00:01:45,869 --> 00:01:51,630
graphical interface so I'm going to be

00:01:48,900 --> 00:01:53,759
talking about pi g object which is

00:01:51,630 --> 00:01:57,540
basically what you want to be using

00:01:53,759 --> 00:02:00,869
nowadays instead of pi gtk how many

00:01:57,540 --> 00:02:04,319
people were at my talk last year good

00:02:00,869 --> 00:02:06,450
money someone there ok so i would say

00:02:04,319 --> 00:02:08,729
probably thirty percent of this talk is

00:02:06,450 --> 00:02:11,910
new and it's probably mostly about what

00:02:08,729 --> 00:02:15,150
pi g object does but the the concepts

00:02:11,910 --> 00:02:18,150
and and a lot in fact a lot of the

00:02:15,150 --> 00:02:22,530
practice really remains the same is

00:02:18,150 --> 00:02:24,930
there anybody here who has not used a

00:02:22,530 --> 00:02:27,120
scripting language something like Python

00:02:24,930 --> 00:02:30,140
or bash or something like that so

00:02:27,120 --> 00:02:32,580
anybody who has not used one of those

00:02:30,140 --> 00:02:36,030
okay is there anybody here who's who's

00:02:32,580 --> 00:02:37,560
not used python in particular okay only

00:02:36,030 --> 00:02:40,560
couple all right that's and that's fine

00:02:37,560 --> 00:02:43,319
um obviously I can't teach you Python in

00:02:40,560 --> 00:02:49,080
an hour but I can point you to some

00:02:43,319 --> 00:02:51,300
great learning resources for Python and

00:02:49,080 --> 00:02:54,060
in fact I'm going to drop over here to a

00:02:51,300 --> 00:02:56,160
browser and point you to one of my

00:02:54,060 --> 00:02:58,790
favorite one of my favorite books in

00:02:56,160 --> 00:03:01,349
fact the book that i use to learn the

00:02:58,790 --> 00:03:05,130
beginning elements of python it's called

00:03:01,349 --> 00:03:06,810
dive into python by mark pilgrim he's a

00:03:05,130 --> 00:03:09,390
great technical right

00:03:06,810 --> 00:03:13,190
um he is in fact he's one of the people

00:03:09,390 --> 00:03:16,920
that that I've read who has a really

00:03:13,190 --> 00:03:20,190
good knack for making highly technical

00:03:16,920 --> 00:03:22,470
stuff understandable to the novice and

00:03:20,190 --> 00:03:24,120
you will in fact be able to read this

00:03:22,470 --> 00:03:26,819
book even if you've never looked at

00:03:24,120 --> 00:03:30,030
Python before and even if you're not a

00:03:26,819 --> 00:03:31,500
much of a programmer at all which I

00:03:30,030 --> 00:03:33,300
would definitely put myself in that

00:03:31,500 --> 00:03:36,660
category so if you go to dive into

00:03:33,300 --> 00:03:39,690
python org you can actually read this

00:03:36,660 --> 00:03:41,850
book online you can download it for free

00:03:39,690 --> 00:03:43,530
it might even be available in some of

00:03:41,850 --> 00:03:45,269
your distributions and Fedora we have it

00:03:43,530 --> 00:03:47,640
package you can actually install it on

00:03:45,269 --> 00:03:50,760
your system and read it live on your on

00:03:47,640 --> 00:03:53,790
your box you can download a PDF or other

00:03:50,760 --> 00:03:56,580
formats or you can support mark and you

00:03:53,790 --> 00:03:58,890
can support his publisher in making

00:03:56,580 --> 00:04:01,739
these sorts of free books available by

00:03:58,890 --> 00:04:03,780
buying a dead tree copy so i don't know

00:04:01,739 --> 00:04:05,730
mark I don't get any money for saying

00:04:03,780 --> 00:04:07,470
that I just honestly I'm a big fan of

00:04:05,730 --> 00:04:10,349
this book so if you're looking to learn

00:04:07,470 --> 00:04:16,729
Python I highly recommend that book it's

00:04:10,349 --> 00:04:19,530
a great great tutorial okay so here's

00:04:16,729 --> 00:04:21,930
basically the the agenda I'm going to

00:04:19,530 --> 00:04:23,400
give you some really really simple

00:04:21,930 --> 00:04:24,870
information for getting started we're

00:04:23,400 --> 00:04:26,760
going to talk about G object inter

00:04:24,870 --> 00:04:29,669
spection and what it is what it brings

00:04:26,760 --> 00:04:34,140
to the the gooey table and then we're

00:04:29,669 --> 00:04:36,810
going to dive into how the gtk object

00:04:34,140 --> 00:04:39,240
model works whether we're talking about

00:04:36,810 --> 00:04:42,620
pi g object or pi gtk we're still

00:04:39,240 --> 00:04:47,840
talking about the gtk toolkit underneath

00:04:42,620 --> 00:04:50,550
the gtk toolkit is it's a collection of

00:04:47,840 --> 00:04:53,100
widgets and definitions that allow you

00:04:50,550 --> 00:04:55,830
to build graphical interfaces that do

00:04:53,100 --> 00:04:59,340
useful things and gtk of course is the

00:04:55,830 --> 00:05:02,070
underlying technology under tools like

00:04:59,340 --> 00:05:05,970
the and of course the gnome desktop

00:05:02,070 --> 00:05:08,100
environment of which I'm a big fan talk

00:05:05,970 --> 00:05:11,310
about signals which are the way that you

00:05:08,100 --> 00:05:14,430
actually hook these these widgets and

00:05:11,310 --> 00:05:17,400
objects to actions that you want to

00:05:14,430 --> 00:05:19,370
happen when your user performs perform

00:05:17,400 --> 00:05:20,300
some task on the GUI

00:05:19,370 --> 00:05:22,400
and then I'm going to go through a

00:05:20,300 --> 00:05:24,080
simple example we're going to go pretty

00:05:22,400 --> 00:05:26,600
quickly for through the beginning of

00:05:24,080 --> 00:05:28,910
this because i feel like the theoretical

00:05:26,600 --> 00:05:31,280
bits are not as important as kind of

00:05:28,910 --> 00:05:33,139
diving into some of the code and how it

00:05:31,280 --> 00:05:35,210
works you are going to see a little bit

00:05:33,139 --> 00:05:36,919
of python here on those of you who are

00:05:35,210 --> 00:05:39,979
Python experts those of you who are

00:05:36,919 --> 00:05:41,449
gooey experts I don't expect you're

00:05:39,979 --> 00:05:44,449
going to pick up a lot of secrets here

00:05:41,449 --> 00:05:51,919
I'm not an expert programmer i am at

00:05:44,449 --> 00:05:54,199
best a bullheaded amateur I guess right

00:05:51,919 --> 00:05:56,449
able I will knock my head against a wall

00:05:54,199 --> 00:05:59,090
for hours to learn something that takes

00:05:56,449 --> 00:06:00,410
a good programmer a few minutes and so

00:05:59,090 --> 00:06:04,280
what I'm hoping I'm going to do here is

00:06:00,410 --> 00:06:06,620
save people who who want to dive into

00:06:04,280 --> 00:06:08,150
gooeys I'm hopefully going to save them

00:06:06,620 --> 00:06:11,210
a little of that of that pain and a

00:06:08,150 --> 00:06:15,860
little of the the concussion damage that

00:06:11,210 --> 00:06:17,360
I've sustained over in my lifetime all

00:06:15,860 --> 00:06:19,550
right so we're going to first talk a

00:06:17,360 --> 00:06:20,840
little bit about the tools that you need

00:06:19,550 --> 00:06:24,590
how to get to the point where you can

00:06:20,840 --> 00:06:27,080
actually use gtk basically what you need

00:06:24,590 --> 00:06:28,580
in order to to go a little further and

00:06:27,080 --> 00:06:31,190
start working with gooeys you need a

00:06:28,580 --> 00:06:34,330
copy of Python on your system you might

00:06:31,190 --> 00:06:37,370
also find that it's useful to have a

00:06:34,330 --> 00:06:40,280
Python helper rapper something like I

00:06:37,370 --> 00:06:43,610
Python which I really like it's sort of

00:06:40,280 --> 00:06:46,900
a more user-friendly interactive shell

00:06:43,610 --> 00:06:50,000
does a lot of useful things for you

00:06:46,900 --> 00:06:52,360
beyond what the the Python built in

00:06:50,000 --> 00:06:54,949
Python command interpreter would do

00:06:52,360 --> 00:06:56,889
you're going to want pi g object and

00:06:54,949 --> 00:07:00,500
that should be available basically on

00:06:56,889 --> 00:07:04,160
just about every every platform out

00:07:00,500 --> 00:07:05,840
there you're going to want gtk and i'm

00:07:04,160 --> 00:07:07,669
recommending because of because of the

00:07:05,840 --> 00:07:10,639
way that g object introspection works

00:07:07,669 --> 00:07:13,520
and the way that the way that it

00:07:10,639 --> 00:07:16,490
leverages the power of the new gtk3 i'm

00:07:13,520 --> 00:07:19,460
recommending that you would use gtk3 or

00:07:16,490 --> 00:07:21,830
above right now three point 0 is the

00:07:19,460 --> 00:07:23,000
latest stable version 3.2 you know I

00:07:21,830 --> 00:07:25,550
would imagine it's going to be released

00:07:23,000 --> 00:07:26,990
at some point months down the line so

00:07:25,550 --> 00:07:30,039
three point 0 is what you can find

00:07:26,990 --> 00:07:32,249
nowadays on on most distributions

00:07:30,039 --> 00:07:34,229
certainly can find out on on

00:07:32,249 --> 00:07:35,849
Dora I believe that next opensuse is

00:07:34,229 --> 00:07:38,549
going to have gtk3 available as well

00:07:35,849 --> 00:07:40,019
you'll want to text editor right and

00:07:38,549 --> 00:07:41,999
that can be yet whatever you like if

00:07:40,019 --> 00:07:44,129
you're a vim guy for an eMac skive your

00:07:41,999 --> 00:07:46,229
G attic guy doesn't matter just need a

00:07:44,129 --> 00:07:49,439
text editor you're also going to want

00:07:46,229 --> 00:07:52,589
Glade Glade 3 which is the latest

00:07:49,439 --> 00:07:55,649
version of blade and that that version

00:07:52,589 --> 00:07:57,419
is actually compatible with some of the

00:07:55,649 --> 00:07:59,819
underlying technologies we're going to

00:07:57,419 --> 00:08:03,529
be showing in this in this presentation

00:07:59,819 --> 00:08:08,009
and I highly recommend dev help as well

00:08:03,529 --> 00:08:10,589
def help is a tool that exposes the API

00:08:08,009 --> 00:08:12,599
and user documentation for these

00:08:10,589 --> 00:08:14,969
toolkits things like gtk so you can

00:08:12,599 --> 00:08:17,069
actually look at the definitions for

00:08:14,969 --> 00:08:19,229
different widgets look at how they work

00:08:17,069 --> 00:08:21,689
you can see examples of the functions

00:08:19,229 --> 00:08:25,919
and methods that you can use with each

00:08:21,689 --> 00:08:27,959
of these pieces of the toolkit so it's

00:08:25,919 --> 00:08:31,439
very useful when you're getting started

00:08:27,959 --> 00:08:34,409
I find that that I do refer to dev held

00:08:31,439 --> 00:08:35,849
quite a bit as an index for you know if

00:08:34,409 --> 00:08:37,800
I'm looking for a specific method I'll

00:08:35,849 --> 00:08:39,300
look it up and we'll show off this tool

00:08:37,800 --> 00:08:42,240
and and what it does in just a few

00:08:39,300 --> 00:08:44,910
minutes so getting the tools is actually

00:08:42,240 --> 00:08:46,709
very simple for most distributions just

00:08:44,910 --> 00:08:49,379
use your package manager of choice if

00:08:46,709 --> 00:08:51,620
you're on fedora opensuse you'll use the

00:08:49,379 --> 00:08:55,470
add remove software tool if you're on

00:08:51,620 --> 00:08:58,500
debian you'll use apt or or you'll use

00:08:55,470 --> 00:09:00,029
aptitude of on a bun two and so on and

00:08:58,500 --> 00:09:03,120
so forth the package names may be

00:09:00,029 --> 00:09:05,069
slightly different for your for your

00:09:03,120 --> 00:09:06,660
distribution of choice but you're

00:09:05,069 --> 00:09:08,730
looking for these coat for these

00:09:06,660 --> 00:09:11,370
keywords you're looking for gtk3 and

00:09:08,730 --> 00:09:13,889
especially the docks for development

00:09:11,370 --> 00:09:16,350
right if those are split out in your in

00:09:13,889 --> 00:09:17,579
your distributions packaging do grab the

00:09:16,350 --> 00:09:20,610
documentation because that actually

00:09:17,579 --> 00:09:22,290
interfaces with the dev help tool and it

00:09:20,610 --> 00:09:24,149
automatically becomes part of your

00:09:22,290 --> 00:09:25,740
library of documentation that you can

00:09:24,149 --> 00:09:28,259
access through dev help and of course

00:09:25,740 --> 00:09:29,790
you also want pi g object to and any

00:09:28,259 --> 00:09:37,350
documentation that comes along with that

00:09:29,790 --> 00:09:41,629
as well alright so how does the workflow

00:09:37,350 --> 00:09:41,629
work for putting together a GUI

00:09:43,510 --> 00:09:48,980
basically it's pretty simple you start

00:09:47,060 --> 00:09:52,370
by well I'm going to assume that you

00:09:48,980 --> 00:09:53,990
have started by deciding what the

00:09:52,370 --> 00:09:55,670
project that you're writing is going to

00:09:53,990 --> 00:09:58,760
do right what you want the user

00:09:55,670 --> 00:10:00,380
experience to be what do you want it to

00:09:58,760 --> 00:10:01,670
look like what sort of interactions do

00:10:00,380 --> 00:10:03,440
you want the user to have a lot of

00:10:01,670 --> 00:10:05,120
people i think make the mistake of you

00:10:03,440 --> 00:10:07,310
know running right in and just you know

00:10:05,120 --> 00:10:09,440
starting to code without thinking about

00:10:07,310 --> 00:10:11,120
you know how you want that to look to

00:10:09,440 --> 00:10:13,520
the user right how you want their

00:10:11,120 --> 00:10:14,990
interaction to work you want it to be as

00:10:13,520 --> 00:10:17,570
simple as possible as elegant as

00:10:14,990 --> 00:10:19,640
possible and and make informed choices

00:10:17,570 --> 00:10:21,170
for the user especially if you're doing

00:10:19,640 --> 00:10:22,970
something that you want to integrate

00:10:21,170 --> 00:10:25,310
with an environment like like known

00:10:22,970 --> 00:10:28,130
that's designed for simplicity and ease

00:10:25,310 --> 00:10:31,730
of use but basically you can use the

00:10:28,130 --> 00:10:33,800
glade tool to design the UI now this

00:10:31,730 --> 00:10:35,690
this does not require that you have code

00:10:33,800 --> 00:10:38,450
written to begin with you can actually

00:10:35,690 --> 00:10:41,210
use Glade to make essentially a mock-up

00:10:38,450 --> 00:10:43,280
for your interface right you can lay in

00:10:41,210 --> 00:10:45,440
a dialogue you can put buttons in it you

00:10:43,280 --> 00:10:47,450
can put entry fields without worrying

00:10:45,440 --> 00:10:50,000
about the code that's actually going to

00:10:47,450 --> 00:10:52,910
run that stuff and and make it do things

00:10:50,000 --> 00:10:56,030
the code can be written afterward now

00:10:52,910 --> 00:10:59,360
when you write that stuff and glade it

00:10:56,030 --> 00:11:01,250
does Glade does give you a choice of how

00:10:59,360 --> 00:11:03,800
it's going to write that resource file

00:11:01,250 --> 00:11:06,110
out nowadays the recommended way to do

00:11:03,800 --> 00:11:08,480
that is write it out as gtk builder I

00:11:06,110 --> 00:11:11,210
think the other choices live glade lib

00:11:08,480 --> 00:11:13,310
blade is sort of the older compatibility

00:11:11,210 --> 00:11:15,440
library its kind of deprecated now so

00:11:13,310 --> 00:11:17,180
gtk builders the default if you're

00:11:15,440 --> 00:11:19,220
writing anything new that's what you

00:11:17,180 --> 00:11:22,100
want to choose when you save that

00:11:19,220 --> 00:11:24,290
project what actually gets saved is an

00:11:22,100 --> 00:11:27,350
XML file that defines the interface

00:11:24,290 --> 00:11:29,510
defines all the widgets where they lied

00:11:27,350 --> 00:11:32,150
to finds the properties about them how

00:11:29,510 --> 00:11:34,460
wide a certain text field is if you've

00:11:32,150 --> 00:11:36,260
labeled a button the label text will be

00:11:34,460 --> 00:11:38,750
in there as well and you can actually

00:11:36,260 --> 00:11:41,270
tweak that XML file you can do it in

00:11:38,750 --> 00:11:43,610
glade if you're if you're if you get

00:11:41,270 --> 00:11:45,350
really familiar with the toolkit I'm not

00:11:43,610 --> 00:11:47,030
one of those people but if you get

00:11:45,350 --> 00:11:49,580
really familiar with the toolkit you can

00:11:47,030 --> 00:11:51,980
actually go into the xml file and just

00:11:49,580 --> 00:11:54,320
make changes manually as you would any

00:11:51,980 --> 00:11:58,140
other sort of text file

00:11:54,320 --> 00:12:00,089
now to make that file actually do

00:11:58,140 --> 00:12:02,370
anything to make that that interface

00:12:00,089 --> 00:12:04,920
actually function what you're going to

00:12:02,370 --> 00:12:07,200
do is load it in your Python program as

00:12:04,920 --> 00:12:09,149
a resource right you're going to say hey

00:12:07,200 --> 00:12:11,220
I've got this builder file out here I

00:12:09,149 --> 00:12:14,190
mean I need to load that and then i'm

00:12:11,220 --> 00:12:17,339
going to start actually defining what

00:12:14,190 --> 00:12:19,560
happens in my program when the user

00:12:17,339 --> 00:12:21,630
interacts with them with a piece of that

00:12:19,560 --> 00:12:23,700
interface in a certain way so for

00:12:21,630 --> 00:12:26,940
example if I know that I have a button

00:12:23,700 --> 00:12:29,250
it's more clothes and I want when the

00:12:26,940 --> 00:12:31,830
user clicks that close button I want the

00:12:29,250 --> 00:12:33,990
the program to close I need to define

00:12:31,830 --> 00:12:35,700
that in my Python code right and the way

00:12:33,990 --> 00:12:37,709
I do that well we'll go over how that

00:12:35,700 --> 00:12:39,110
works and in just a little bit but you

00:12:37,709 --> 00:12:42,029
would actually write that into your code

00:12:39,110 --> 00:12:44,730
so this functions get called based on

00:12:42,029 --> 00:12:46,740
the interactions that you choose right

00:12:44,730 --> 00:12:48,510
and it can get pretty granular we're

00:12:46,740 --> 00:12:51,360
talk about that when we get to signals

00:12:48,510 --> 00:12:52,320
in just a moment alright this is a

00:12:51,360 --> 00:12:54,209
little bit it's a little bit theoretical

00:12:52,320 --> 00:12:59,160
but does everybody follow me follow me

00:12:54,209 --> 00:13:00,750
so far this make sense okay and please

00:12:59,160 --> 00:13:03,779
you know feel free if you have questions

00:13:00,750 --> 00:13:05,160
you know shout if you if there are a lot

00:13:03,779 --> 00:13:06,690
of them at once maybe we might have to

00:13:05,160 --> 00:13:09,540
have hands raised but you know feel free

00:13:06,690 --> 00:13:15,570
to shout out question and Allah and and

00:13:09,540 --> 00:13:19,310
I'll do my best to answer you okay so on

00:13:15,570 --> 00:13:21,750
2g object introspection um this is a

00:13:19,310 --> 00:13:24,120
when I talk about gir that's the G

00:13:21,750 --> 00:13:26,100
object introspection repository which

00:13:24,120 --> 00:13:30,089
you'll see when you get into writing

00:13:26,100 --> 00:13:33,149
code so my joke here's who died and left

00:13:30,089 --> 00:13:35,910
you King right how is that how is it

00:13:33,149 --> 00:13:38,970
that pi g object is now you know the new

00:13:35,910 --> 00:13:40,860
hotness what happened to pi gtk wasn't

00:13:38,970 --> 00:13:42,360
that the good stuff well it's always

00:13:40,860 --> 00:13:43,890
been very good and so I'm not

00:13:42,360 --> 00:13:45,149
denigrating the project at all when i

00:13:43,890 --> 00:13:47,940
call it the old stuff yeah that's kind

00:13:45,149 --> 00:13:49,860
of the old busted it's not that old and

00:13:47,940 --> 00:13:52,649
busted and it's fact in fact very stable

00:13:49,860 --> 00:13:56,930
and it still is very useful a lot of

00:13:52,649 --> 00:13:59,010
platforms still have the g TK 2x toolkit

00:13:56,930 --> 00:13:59,920
probably something like you know two dot

00:13:59,010 --> 00:14:03,730
twenty

00:13:59,920 --> 00:14:04,870
made or above but but even the PI gtk

00:14:03,730 --> 00:14:09,040
project is recommending that people

00:14:04,870 --> 00:14:13,149
migrate their code to p 2 pi g object so

00:14:09,040 --> 00:14:15,279
why is that well because pi g TK was

00:14:13,149 --> 00:14:18,459
essentially a python project that was

00:14:15,279 --> 00:14:21,970
written directly on top of gtk as a as a

00:14:18,459 --> 00:14:25,510
compatibility or I'm sorry as a as a a

00:14:21,970 --> 00:14:28,779
set of bindings for for the libraries so

00:14:25,510 --> 00:14:31,810
you could use Python with the two to

00:14:28,779 --> 00:14:33,699
actually use the toolkit but the problem

00:14:31,810 --> 00:14:36,850
with doing that is that every time the

00:14:33,699 --> 00:14:38,800
underlying toolkit changed pi gtk had to

00:14:36,850 --> 00:14:42,250
change as well right had to be changed

00:14:38,800 --> 00:14:44,079
directly and it doesn't scale well right

00:14:42,250 --> 00:14:45,399
I mean every time the every time one up

00:14:44,079 --> 00:14:47,199
string changes the other upstream has

00:14:45,399 --> 00:14:49,060
got to got to make a bunch of changes

00:14:47,199 --> 00:14:51,699
and had to coordinate releases and

00:14:49,060 --> 00:14:53,680
things like that not much fun right and

00:14:51,699 --> 00:14:58,810
it can kind of slow the momentum of both

00:14:53,680 --> 00:15:01,209
projects so what what's being used now

00:14:58,810 --> 00:15:03,490
is G object introspection and

00:15:01,209 --> 00:15:08,310
essentially what this is is a thin it's

00:15:03,490 --> 00:15:11,079
a thin layer of glue that allows the

00:15:08,310 --> 00:15:13,480
library including the libraries

00:15:11,079 --> 00:15:15,430
including gtk but not only G decay but

00:15:13,480 --> 00:15:18,610
other libraries like G live and Gi Oh

00:15:15,430 --> 00:15:22,240
that are all part of the G object the

00:15:18,610 --> 00:15:27,339
larger G object ecosystem it allows them

00:15:22,240 --> 00:15:28,329
basically to expose the see the the bits

00:15:27,339 --> 00:15:31,480
that are written in the C programming

00:15:28,329 --> 00:15:35,050
language underneath and it does it in

00:15:31,480 --> 00:15:38,110
such a way that now a Python piece of

00:15:35,050 --> 00:15:40,390
code can actually talk to the thin layer

00:15:38,110 --> 00:15:41,740
of G object introspection and whatever

00:15:40,390 --> 00:15:44,170
functions have been changed whatever

00:15:41,740 --> 00:15:47,680
things happen under in the underlying

00:15:44,170 --> 00:15:50,050
gtk library immediately are visible and

00:15:47,680 --> 00:15:52,959
usable in Python without any extra work

00:15:50,050 --> 00:15:56,380
on the programmers part right and in

00:15:52,959 --> 00:15:57,550
fact without any extra work on on the

00:15:56,380 --> 00:15:59,769
part of people who are working on

00:15:57,550 --> 00:16:01,720
introspection without any more work on

00:15:59,769 --> 00:16:03,310
the part of people were writing pi g

00:16:01,720 --> 00:16:05,290
object so they can actually concentrate

00:16:03,310 --> 00:16:08,640
on making their code better not worry

00:16:05,290 --> 00:16:11,560
about the underlying library as much

00:16:08,640 --> 00:16:13,170
also the other thing that the GI the the

00:16:11,560 --> 00:16:15,149
GI repository does

00:16:13,170 --> 00:16:17,790
is it makes it possible to add bindings

00:16:15,149 --> 00:16:20,100
for other languages very very easily by

00:16:17,790 --> 00:16:22,320
simply tying them into the to the G

00:16:20,100 --> 00:16:24,120
object introspection so it's just a way

00:16:22,320 --> 00:16:26,550
of making things work better write more

00:16:24,120 --> 00:16:29,250
scalable e more as a more fluid

00:16:26,550 --> 00:16:30,750
development the the different parts of

00:16:29,250 --> 00:16:32,639
the community that are working on these

00:16:30,750 --> 00:16:34,260
underlying bits all those guys who are

00:16:32,639 --> 00:16:36,209
you know great programmers who are

00:16:34,260 --> 00:16:38,010
actually writing the bits that make make

00:16:36,209 --> 00:16:40,620
it possible for other programmers to do

00:16:38,010 --> 00:16:43,079
stuff they don't have to they don't have

00:16:40,620 --> 00:16:44,910
to worry so much about coordinating

00:16:43,079 --> 00:16:47,220
their timing and the work that they're

00:16:44,910 --> 00:16:50,130
doing they can simply worry about moving

00:16:47,220 --> 00:16:53,610
forward faster and doing a doing all of

00:16:50,130 --> 00:16:55,940
the the enhancements and and fixes that

00:16:53,610 --> 00:16:58,740
they want to do for their their toolkit

00:16:55,940 --> 00:17:00,060
so that's that's basically out G object

00:16:58,740 --> 00:17:02,880
works I mean this is kind of a picture

00:17:00,060 --> 00:17:05,490
so you can glue pretty much any sort of

00:17:02,880 --> 00:17:08,040
language on top of it Python valla you

00:17:05,490 --> 00:17:10,079
know some other language can all use G

00:17:08,040 --> 00:17:12,860
object introspection and immediately get

00:17:10,079 --> 00:17:15,089
all the benefits whenever gtk changes

00:17:12,860 --> 00:17:17,160
those functions will immediately be

00:17:15,089 --> 00:17:19,559
exposed through the G object

00:17:17,160 --> 00:17:21,150
introspection to those languages alright

00:17:19,559 --> 00:17:25,559
so that's for the more maybe the more

00:17:21,150 --> 00:17:26,970
developer propeller beanie heads I guess

00:17:25,559 --> 00:17:29,730
who are in here know a lot more about

00:17:26,970 --> 00:17:33,270
this stuff than I do for the rest of us

00:17:29,730 --> 00:17:35,280
though so what well nothing really I

00:17:33,270 --> 00:17:37,200
mean there is no so what I mean that was

00:17:35,280 --> 00:17:38,880
interesting for I think people who are

00:17:37,200 --> 00:17:41,549
interested in toolkits and how these

00:17:38,880 --> 00:17:42,690
libraries work but if you're like me if

00:17:41,549 --> 00:17:44,429
you're more of a name you know eidetic

00:17:42,690 --> 00:17:46,980
like i said a dedicated or a bullheaded

00:17:44,429 --> 00:17:48,929
amateur this all this stuff really

00:17:46,980 --> 00:17:51,299
doesn't matter that much unless you need

00:17:48,929 --> 00:17:53,100
to port existing code I'm not going to

00:17:51,299 --> 00:17:54,870
cover that here but i will show you or

00:17:53,100 --> 00:17:57,210
some resources where you can find

00:17:54,870 --> 00:17:59,340
information on how to port your pie gtk

00:17:57,210 --> 00:18:02,549
code 2 pi g object it's actually quite

00:17:59,340 --> 00:18:04,110
simple if you're a beginner though

00:18:02,549 --> 00:18:05,549
here's what you might want to get out of

00:18:04,110 --> 00:18:07,770
what i just talked about for a few

00:18:05,549 --> 00:18:09,900
minutes which is that when you look at

00:18:07,770 --> 00:18:12,450
code and people are talking about pi gtk

00:18:09,900 --> 00:18:13,919
just realize that you're looking at

00:18:12,450 --> 00:18:15,809
something that was probably written a

00:18:13,919 --> 00:18:17,520
while back and it's increasingly

00:18:15,809 --> 00:18:20,760
deprecated overtime right it's

00:18:17,520 --> 00:18:22,980
increasingly becoming obsolete so and

00:18:20,760 --> 00:18:24,720
even possibly plain wrong right so you

00:18:22,980 --> 00:18:25,600
won't necessarily be able to follow

00:18:24,720 --> 00:18:27,910
those instructions

00:18:25,600 --> 00:18:30,039
shins you know many years in the future

00:18:27,910 --> 00:18:32,620
if you're trying to write to toolkit

00:18:30,039 --> 00:18:35,860
like gtk3 you really want to concentrate

00:18:32,620 --> 00:18:37,600
on using pi g object instead if you are

00:18:35,860 --> 00:18:40,179
interested in specific stuff about pi

00:18:37,600 --> 00:18:43,240
gtk you can look at the my last year's

00:18:40,179 --> 00:18:45,130
talk either itself or the ohio linux

00:18:43,240 --> 00:18:48,100
fest and i've got information in there

00:18:45,130 --> 00:18:49,570
about that is very pi gtk specific so if

00:18:48,100 --> 00:18:50,559
you're still using that and you're

00:18:49,570 --> 00:18:53,530
looking for more information

00:18:50,559 --> 00:18:59,679
specifically about pi gtk you can visit

00:18:53,530 --> 00:19:03,130
that talk alright so now i'm going to

00:18:59,679 --> 00:19:06,070
start talking a little bit about the

00:19:03,130 --> 00:19:07,570
real nitty-gritty about how how to how

00:19:06,070 --> 00:19:10,780
to actually start writing code and how

00:19:07,570 --> 00:19:12,580
to understand the gtk toolkit not all

00:19:10,780 --> 00:19:14,440
the ins and outs right I'm not qualified

00:19:12,580 --> 00:19:16,900
to give you that but i but I hopefully

00:19:14,440 --> 00:19:18,789
can give those folks in here who are

00:19:16,900 --> 00:19:20,770
beginners again trying to make that that

00:19:18,789 --> 00:19:23,020
jump give you a little bit of a flavor

00:19:20,770 --> 00:19:25,450
for how you can learn to figure this

00:19:23,020 --> 00:19:30,460
stuff out a lot more easily than then it

00:19:25,450 --> 00:19:33,480
came to me all right so when we talk

00:19:30,460 --> 00:19:36,039
about the toolkit that the gtk toolkit

00:19:33,480 --> 00:19:39,970
there's an underlying object model in

00:19:36,039 --> 00:19:42,309
gtk which is based on something that's

00:19:39,970 --> 00:19:45,730
probably pretty familiar to people who

00:19:42,309 --> 00:19:48,700
have worked in object-oriented languages

00:19:45,730 --> 00:19:50,740
right python is an example of an

00:19:48,700 --> 00:19:52,870
object-oriented language gtk as an

00:19:50,740 --> 00:19:54,190
object model that will be you know

00:19:52,870 --> 00:19:57,039
familiar to people who know those

00:19:54,190 --> 00:20:02,470
concepts it's based on the idea of

00:19:57,039 --> 00:20:06,010
classes and inheritance so when when you

00:20:02,470 --> 00:20:07,450
you instantiate an object all right

00:20:06,010 --> 00:20:10,860
election actually let me let me step

00:20:07,450 --> 00:20:15,700
back from before the big words there um

00:20:10,860 --> 00:20:19,720
every class of an object has some sense

00:20:15,700 --> 00:20:21,909
of definition around it right we attach

00:20:19,720 --> 00:20:26,770
properties to it there are there are

00:20:21,909 --> 00:20:29,530
things that that are our characteristics

00:20:26,770 --> 00:20:31,840
for that class right so an example would

00:20:29,530 --> 00:20:33,039
be you know this chair object that I've

00:20:31,840 --> 00:20:36,190
that I've written up here if you look at

00:20:33,039 --> 00:20:38,279
one of these chairs right um a chair is

00:20:36,190 --> 00:20:41,039
it's it's a thing but

00:20:38,279 --> 00:20:43,049
there's also an idea of a chair that we

00:20:41,039 --> 00:20:45,090
have in our in our minds even if a chair

00:20:43,049 --> 00:20:47,219
is not sitting in front of you when i

00:20:45,090 --> 00:20:49,349
say chair to you you know what I'm

00:20:47,219 --> 00:20:51,450
talking about right there's an idea of a

00:20:49,349 --> 00:20:54,450
chair and I probably could get you know

00:20:51,450 --> 00:20:56,279
really lost in a in a lecture on on

00:20:54,450 --> 00:20:57,719
metaphysics for my college days and we

00:20:56,279 --> 00:20:59,549
could talk about you know the ideas of

00:20:57,719 --> 00:21:02,190
Plato's Republic and all that but the

00:20:59,549 --> 00:21:05,909
important stuff here really is that that

00:21:02,190 --> 00:21:08,460
idea is different than an instance right

00:21:05,909 --> 00:21:10,019
an actual chair the idea of a chair is

00:21:08,460 --> 00:21:14,129
one thing right that you can think of

00:21:10,019 --> 00:21:16,919
that like a class and the object itself

00:21:14,129 --> 00:21:18,779
or what we call an instance is maybe

00:21:16,919 --> 00:21:23,159
that actual chair there in the front row

00:21:18,779 --> 00:21:24,539
here the idea of a chair has properties

00:21:23,159 --> 00:21:26,279
that we can attach to it like if you

00:21:24,539 --> 00:21:29,999
were to imagine a chair that chair would

00:21:26,279 --> 00:21:32,369
have some location in reality it might

00:21:29,999 --> 00:21:36,059
have a you know the property of whether

00:21:32,369 --> 00:21:37,979
it's upholstered or not um maybe how

00:21:36,059 --> 00:21:39,389
many legs it has right some chairs have

00:21:37,979 --> 00:21:41,129
four legs maybe there are some other

00:21:39,389 --> 00:21:42,659
ones out there that have five or you

00:21:41,129 --> 00:21:46,080
know they sit on a spindle or something

00:21:42,659 --> 00:21:48,089
like that and then if you think about it

00:21:46,080 --> 00:21:49,830
there are all sorts of subclasses of

00:21:48,089 --> 00:21:52,200
chairs that you can imagine for example

00:21:49,830 --> 00:21:56,129
let's imagine a class called a folding

00:21:52,200 --> 00:21:58,739
chair which has the same properties as

00:21:56,129 --> 00:22:01,229
any other chair but maybe it has some

00:21:58,739 --> 00:22:03,179
additional properties as well like for

00:22:01,229 --> 00:22:06,389
example you can fold a folding chair

00:22:03,179 --> 00:22:08,009
whereas i could not fold this more

00:22:06,389 --> 00:22:12,259
generic chair that's up here in the

00:22:08,009 --> 00:22:14,999
front row which has a fixed legs a

00:22:12,259 --> 00:22:17,369
swivel chair might be a different kind

00:22:14,999 --> 00:22:19,049
of sub class that has a rotate function

00:22:17,369 --> 00:22:24,839
you can actually sit and spin on the

00:22:19,049 --> 00:22:28,919
swivel chair as my kids tend to do in my

00:22:24,839 --> 00:22:30,899
office when I'm not around so so those

00:22:28,919 --> 00:22:32,940
are some that's that's I guess a nice

00:22:30,899 --> 00:22:35,279
easy way to think about classes and

00:22:32,940 --> 00:22:36,960
inheritance right these classes of

00:22:35,279 --> 00:22:39,210
properties and methods attached to them

00:22:36,960 --> 00:22:41,759
you can subclass one of these classes

00:22:39,210 --> 00:22:43,229
and add additional methods and

00:22:41,759 --> 00:22:46,259
properties that only apply to that

00:22:43,229 --> 00:22:47,820
subclass but it also inherits all of the

00:22:46,259 --> 00:22:48,830
methods and properties of the class

00:22:47,820 --> 00:22:51,950
above it

00:22:48,830 --> 00:22:55,250
now here's an example of how that works

00:22:51,950 --> 00:22:56,720
in gtk itself all right so it's it's not

00:22:55,250 --> 00:22:58,490
important that you memorize any of this

00:22:56,720 --> 00:23:01,250
stuff it's just an example to show you

00:22:58,490 --> 00:23:04,880
how this hierarchy works let's imagine a

00:23:01,250 --> 00:23:07,159
button right the class gtk button is a

00:23:04,880 --> 00:23:08,630
push-button widget it's the widget that

00:23:07,159 --> 00:23:11,360
actually makes a button on the screen

00:23:08,630 --> 00:23:14,090
and when you click on it it allows you

00:23:11,360 --> 00:23:16,549
to interact with with a GUI program that

00:23:14,090 --> 00:23:19,850
gtk button is actually several

00:23:16,549 --> 00:23:22,370
subclasses down in hierarchy from higher

00:23:19,850 --> 00:23:25,850
level objects so the gtk button is

00:23:22,370 --> 00:23:28,519
actually a subclass of the bin and a gtk

00:23:25,850 --> 00:23:30,169
bin is basically a widget that contains

00:23:28,519 --> 00:23:32,450
something but it only contains one other

00:23:30,169 --> 00:23:34,700
thing right and the reason they're that

00:23:32,450 --> 00:23:36,169
bin it might seem odd to have something

00:23:34,700 --> 00:23:39,019
that can only contain one other thing

00:23:36,169 --> 00:23:41,720
but it does make sense when you when you

00:23:39,019 --> 00:23:44,750
start thinking about the space that an

00:23:41,720 --> 00:23:46,309
object occupies what how that space

00:23:44,750 --> 00:23:49,130
interacts with the space around other

00:23:46,309 --> 00:23:50,960
things and so forth so that bin is a

00:23:49,130 --> 00:23:52,880
subclass of a container where a

00:23:50,960 --> 00:23:54,500
containment whereas a bin can only have

00:23:52,880 --> 00:23:56,360
one thing in it a container can have

00:23:54,500 --> 00:23:58,070
many other things right so you can

00:23:56,360 --> 00:24:00,440
imagine you know a container having

00:23:58,070 --> 00:24:03,049
several bins each of those bins having

00:24:00,440 --> 00:24:06,649
another type of widget in them the

00:24:03,049 --> 00:24:08,809
container is a subclass of the even more

00:24:06,649 --> 00:24:12,470
generic widget which basically just

00:24:08,809 --> 00:24:16,700
means something useful in the gtk tool

00:24:12,470 --> 00:24:20,539
class I'm sorry tool kit excuse me and

00:24:16,700 --> 00:24:23,570
that's actually a subclass of AG object

00:24:20,539 --> 00:24:27,380
which is an incredibly incredibly

00:24:23,570 --> 00:24:29,480
abstract idea right gia you can't even I

00:24:27,380 --> 00:24:30,980
mean a G object is not even something

00:24:29,480 --> 00:24:34,940
like really can describe to you it's

00:24:30,980 --> 00:24:36,830
basically a basic class that has some

00:24:34,940 --> 00:24:38,690
very very fundamental methods and

00:24:36,830 --> 00:24:41,149
properties that are needed basically buy

00:24:38,690 --> 00:24:44,029
anything in the gtk toolkit that G

00:24:41,149 --> 00:24:46,190
object is not really as useful for for

00:24:44,029 --> 00:24:47,299
most programmers on its own especially

00:24:46,190 --> 00:24:49,309
on when you're getting started as you

00:24:47,299 --> 00:24:50,929
get further along you do find uses for

00:24:49,309 --> 00:24:56,779
that but we're not going to talk about

00:24:50,929 --> 00:24:58,700
them today so ok that's useful but

00:24:56,779 --> 00:25:01,309
obviously I'm not going to take the next

00:24:58,700 --> 00:25:02,250
you know 40 minutes and describe

00:25:01,309 --> 00:25:05,730
everything

00:25:02,250 --> 00:25:09,000
member of the toolkit for you right that

00:25:05,730 --> 00:25:11,040
would be a waste of your time the

00:25:09,000 --> 00:25:12,720
toolkit is actually fully described in

00:25:11,040 --> 00:25:14,460
the documentation so what I'm going to

00:25:12,720 --> 00:25:16,530
show you is how to bring that

00:25:14,460 --> 00:25:18,240
documentation up and actually look

00:25:16,530 --> 00:25:20,910
through it yourself so you can actually

00:25:18,240 --> 00:25:22,680
see how these how this inheritance works

00:25:20,910 --> 00:25:25,890
and how the how the methods and

00:25:22,680 --> 00:25:27,540
properties work so this is this is dev

00:25:25,890 --> 00:25:29,280
help so I'm going to look up the gtk

00:25:27,540 --> 00:25:31,800
button in dev help actually I actually

00:25:29,280 --> 00:25:33,840
have it called up already here this is

00:25:31,800 --> 00:25:37,880
the dev help program and I'm going to

00:25:33,840 --> 00:25:42,150
run down to the gtk3 reference manual

00:25:37,880 --> 00:25:43,530
and we're going to call up the list of

00:25:42,150 --> 00:25:45,960
widgets and objects actually they have a

00:25:43,530 --> 00:25:47,840
full object hierarchy here which we're

00:25:45,960 --> 00:25:52,140
going to call up this is basically

00:25:47,840 --> 00:25:53,910
everything in the toolkit all the

00:25:52,140 --> 00:25:55,800
different kinds of widgets and objects

00:25:53,910 --> 00:25:59,700
that you can use and what I'm going to

00:25:55,800 --> 00:26:04,010
do is look for gtk button and there it

00:25:59,700 --> 00:26:06,570
is so we're going to call this up and

00:26:04,010 --> 00:26:08,490
notice how helpful this is right we get

00:26:06,570 --> 00:26:10,050
a we we get an explanation of what the

00:26:08,490 --> 00:26:12,480
button is we even have a nice little

00:26:10,050 --> 00:26:13,950
picture showing us an example and then

00:26:12,480 --> 00:26:16,590
there's a bunch of code now if you're a

00:26:13,950 --> 00:26:19,500
fledgling programmer like me when you

00:26:16,590 --> 00:26:21,690
open this this tool this is very scary

00:26:19,500 --> 00:26:23,370
right because this is exactly what I

00:26:21,690 --> 00:26:25,410
don't know how to do when I'm starting

00:26:23,370 --> 00:26:27,330
out all right and what I'm going to tell

00:26:25,410 --> 00:26:29,760
you is that as a as a beginning

00:26:27,330 --> 00:26:31,950
programmer there's not much in here that

00:26:29,760 --> 00:26:34,530
you need that you need to worry about to

00:26:31,950 --> 00:26:36,600
begin with all right let's look at just

00:26:34,530 --> 00:26:40,110
the object hierarchy for now and you'll

00:26:36,600 --> 00:26:41,850
see how outlined here and the

00:26:40,110 --> 00:26:43,920
documentation is exactly what I just

00:26:41,850 --> 00:26:47,220
showed you in the slides which is that a

00:26:43,920 --> 00:26:48,810
gtk button is a subclass of the bins

00:26:47,220 --> 00:26:50,520
which is a subclass of the container

00:26:48,810 --> 00:26:51,810
which is a subclass the widget there's

00:26:50,520 --> 00:26:53,580
actually subclass of another thing

00:26:51,810 --> 00:26:56,730
called this initially unknown which is

00:26:53,580 --> 00:27:00,600
again very abstract not important which

00:26:56,730 --> 00:27:02,970
is a subclass of G object now looking at

00:27:00,600 --> 00:27:06,450
this dev help you actually can find out

00:27:02,970 --> 00:27:09,930
all the different things that that a

00:27:06,450 --> 00:27:13,190
button is capable of so a button for

00:27:09,930 --> 00:27:14,960
example if we look at its properties a

00:27:13,190 --> 00:27:19,039
button may have

00:27:14,960 --> 00:27:20,809
a label right and that label is just a

00:27:19,039 --> 00:27:23,120
piece of text that sits on the button

00:27:20,809 --> 00:27:25,820
that is hopefully instructed to the user

00:27:23,120 --> 00:27:28,909
about what they're going to do but keep

00:27:25,820 --> 00:27:31,130
in mind these properties do not this

00:27:28,909 --> 00:27:35,059
does not represent the entire list of

00:27:31,130 --> 00:27:39,049
properties for a button right because

00:27:35,059 --> 00:27:41,570
the button has inherited everything from

00:27:39,049 --> 00:27:48,440
up the line so for example we can look

00:27:41,570 --> 00:27:50,390
at the gtk widget properties I'll say

00:27:48,440 --> 00:27:53,149
the properties link here and you'll see

00:27:50,390 --> 00:27:56,809
that these properties I'm sorry these

00:27:53,149 --> 00:27:59,179
properties are things that all widgets

00:27:56,809 --> 00:28:01,250
are capable of and that means that a

00:27:59,179 --> 00:28:03,169
button which is a subclass of a widget

00:28:01,250 --> 00:28:05,419
even if it's several several steps down

00:28:03,169 --> 00:28:13,059
the line inherits all of these as well

00:28:05,419 --> 00:28:17,630
so for example sensitive right that that

00:28:13,059 --> 00:28:20,240
sensitive property is just a it's a yes

00:28:17,630 --> 00:28:22,640
or no can this object be interacted with

00:28:20,240 --> 00:28:25,640
by the user right is it kind of is it

00:28:22,640 --> 00:28:28,570
going to be sensitive to motion over it

00:28:25,640 --> 00:28:30,710
or clicking or something like that right

00:28:28,570 --> 00:28:33,500
so that means that this sensitive

00:28:30,710 --> 00:28:36,409
property is something that all widgets

00:28:33,500 --> 00:28:39,919
have including buttons does that make

00:28:36,409 --> 00:28:41,240
sense so far all right I know this seems

00:28:39,919 --> 00:28:43,820
like I'm really haranguing this but

00:28:41,240 --> 00:28:46,520
believe me this this was when it when

00:28:43,820 --> 00:28:48,620
you start getting the the the hierarchy

00:28:46,520 --> 00:28:50,539
and the inheritance down in your head

00:28:48,620 --> 00:28:52,760
you really start to be able to navigate

00:28:50,539 --> 00:28:55,340
around this help this help system and

00:28:52,760 --> 00:28:56,750
start to find all of the different

00:28:55,340 --> 00:28:59,029
functions and different properties that

00:28:56,750 --> 00:29:01,309
you need for making your GUI do

00:28:59,029 --> 00:29:04,700
something useful so when you don't find

00:29:01,309 --> 00:29:06,380
those things in the particular the very

00:29:04,700 --> 00:29:09,020
particular subclass you're looking at

00:29:06,380 --> 00:29:11,210
like a button you can go up the line and

00:29:09,020 --> 00:29:12,980
look for the property or the function

00:29:11,210 --> 00:29:14,480
that you're interested in right and when

00:29:12,980 --> 00:29:17,570
you locate that as long as it's in the

00:29:14,480 --> 00:29:19,399
inheritance in the ancestry for that for

00:29:17,570 --> 00:29:23,260
that widget then you can use that as

00:29:19,399 --> 00:29:23,260
well okay

00:29:23,780 --> 00:29:32,040
alright so I've shown you a little bit

00:29:29,970 --> 00:29:33,990
about dev help and and and how that

00:29:32,040 --> 00:29:35,610
works and by the way I did show you

00:29:33,990 --> 00:29:38,550
properties what I didn't show you where

00:29:35,610 --> 00:29:41,010
methods but methods essentially are

00:29:38,550 --> 00:29:44,640
things that a widget can do right there

00:29:41,010 --> 00:29:47,880
or they are things that can occur right

00:29:44,640 --> 00:29:50,760
that are attached to that widget like

00:29:47,880 --> 00:29:58,860
for example hiding that widget or

00:29:50,760 --> 00:30:00,630
showing that widget all right so now

00:29:58,860 --> 00:30:02,040
that we've gone through that of I want

00:30:00,630 --> 00:30:10,110
to talk a little bit about signals

00:30:02,040 --> 00:30:12,210
signals are really the the heart of user

00:30:10,110 --> 00:30:17,970
interaction when you're writing a

00:30:12,210 --> 00:30:19,950
program in a GUI when you run your your

00:30:17,970 --> 00:30:22,620
GUI program essentially what's happening

00:30:19,950 --> 00:30:24,690
is at some point or other after you've

00:30:22,620 --> 00:30:27,480
done whatever preparatory steps are

00:30:24,690 --> 00:30:29,640
needed in your program you're going to

00:30:27,480 --> 00:30:32,460
start something called the main loop

00:30:29,640 --> 00:30:34,920
right the GDK mail or I should say that

00:30:32,460 --> 00:30:41,310
I guess it's the G lot the G lib main

00:30:34,920 --> 00:30:43,140
loop and that main loop is exactly what

00:30:41,310 --> 00:30:46,610
it sounds like it's essentially just a

00:30:43,140 --> 00:30:50,340
loop in which your your application is

00:30:46,610 --> 00:30:53,610
waiting for receipt of information from

00:30:50,340 --> 00:30:56,310
the user right things like you know did

00:30:53,610 --> 00:30:58,320
the mouse the mouse moved over a piece

00:30:56,310 --> 00:31:00,750
of the interface right that would

00:30:58,320 --> 00:31:02,220
actually be caught by the main loop you

00:31:00,750 --> 00:31:05,610
could do something with it if you want

00:31:02,220 --> 00:31:07,440
it but you know generally your movement

00:31:05,610 --> 00:31:09,480
isn't may be as important to you as

00:31:07,440 --> 00:31:12,270
something like a click all right but you

00:31:09,480 --> 00:31:14,340
can pick and choose which of those input

00:31:12,270 --> 00:31:16,950
which of those interactions are going to

00:31:14,340 --> 00:31:20,730
become input for your program so for

00:31:16,950 --> 00:31:23,550
example you may not care if somebody

00:31:20,730 --> 00:31:26,550
moves their mouse over your button right

00:31:23,550 --> 00:31:28,260
that may not matter to you but you may

00:31:26,550 --> 00:31:30,270
be interested in if they actually if

00:31:28,260 --> 00:31:31,920
they click on your button but those

00:31:30,270 --> 00:31:33,720
choices are available to you right it

00:31:31,920 --> 00:31:34,950
gets very very granular in fact it's not

00:31:33,720 --> 00:31:37,019
just the fact they clicked on

00:31:34,950 --> 00:31:39,299
but if you cared about it you could have

00:31:37,019 --> 00:31:41,159
your program react by doing something

00:31:39,299 --> 00:31:43,110
when they press the button down and

00:31:41,159 --> 00:31:45,450
something else when they let when they

00:31:43,110 --> 00:31:46,799
release the button alright you can do

00:31:45,450 --> 00:31:49,289
things like when the when the mouse

00:31:46,799 --> 00:31:51,659
cursor goes over the board slips over

00:31:49,289 --> 00:31:53,639
the border of that element that button

00:31:51,659 --> 00:31:54,990
something could happen then when it

00:31:53,639 --> 00:31:57,960
leaves the border something that

00:31:54,990 --> 00:32:00,779
happened right so there's a lot of very

00:31:57,960 --> 00:32:02,940
very granular events but you know the

00:32:00,779 --> 00:32:04,649
the main ones that people use are going

00:32:02,940 --> 00:32:07,260
to be the obvious ones like for a button

00:32:04,649 --> 00:32:09,630
you would attach a signal to the clicked

00:32:07,260 --> 00:32:11,549
event right when the button is clicked

00:32:09,630 --> 00:32:13,830
you want something to happen and a click

00:32:11,549 --> 00:32:18,840
basically consists of somebody pressing

00:32:13,830 --> 00:32:21,419
the button and then releasing it so that

00:32:18,840 --> 00:32:24,419
interaction generates a signal that's

00:32:21,419 --> 00:32:25,980
caught by the main loop now that doesn't

00:32:24,419 --> 00:32:29,730
mean that anything necessarily is going

00:32:25,980 --> 00:32:33,059
to happen unless you catch the signal by

00:32:29,730 --> 00:32:35,340
connecting some function to it right and

00:32:33,059 --> 00:32:36,960
that's called a call back right and what

00:32:35,340 --> 00:32:39,570
happens is you'll say that when this

00:32:36,960 --> 00:32:41,700
button is clicked I want a call back to

00:32:39,570 --> 00:32:43,590
happen to this function right and that

00:32:41,700 --> 00:32:47,309
function is going to make my application

00:32:43,590 --> 00:32:49,860
do something right and that's really the

00:32:47,309 --> 00:32:52,679
that's really the essence of how the how

00:32:49,860 --> 00:32:53,880
the interaction process works you know

00:32:52,679 --> 00:32:55,559
you might want something to happen if

00:32:53,880 --> 00:32:58,799
somebody fills in a checkbox let's let's

00:32:55,559 --> 00:33:00,389
here's here's a good example there's a

00:32:58,799 --> 00:33:02,570
certain kind of widget called a label

00:33:00,389 --> 00:33:05,220
right which is just a piece of text and

00:33:02,570 --> 00:33:09,179
you can declare a property for that

00:33:05,220 --> 00:33:10,919
label uh trying to remember what the

00:33:09,179 --> 00:33:13,230
name for it is i thought it was active

00:33:10,919 --> 00:33:14,700
but i'm not sure anymore um but there's

00:33:13,230 --> 00:33:18,419
a property that determines whether that

00:33:14,700 --> 00:33:20,340
label is you know is written in Stan a

00:33:18,419 --> 00:33:22,860
standard coloring it appears like

00:33:20,340 --> 00:33:24,809
probably black on gray or whether it's

00:33:22,860 --> 00:33:26,279
kind of grayed out and unavailable

00:33:24,809 --> 00:33:28,200
everybody's seen that right in an

00:33:26,279 --> 00:33:29,669
interface where you have a couple labels

00:33:28,200 --> 00:33:32,159
or controls that are grayed out you

00:33:29,669 --> 00:33:34,019
can't do anything with them right one

00:33:32,159 --> 00:33:36,840
form of interaction might be you might

00:33:34,019 --> 00:33:39,120
want when when the user selects a

00:33:36,840 --> 00:33:40,769
checkbox puts a check in the box you

00:33:39,120 --> 00:33:43,470
might want that you might want the

00:33:40,769 --> 00:33:45,690
property for those labels to change so

00:33:43,470 --> 00:33:47,010
that they are now available you guys

00:33:45,690 --> 00:33:48,039
have probably seen that from a user

00:33:47,010 --> 00:33:49,960
perspective

00:33:48,039 --> 00:33:53,320
you've seen that happen now that's an

00:33:49,960 --> 00:33:55,210
example of catching the signal of making

00:33:53,320 --> 00:33:57,749
the check box active when the check box

00:33:55,210 --> 00:34:01,440
becomes active do the following things

00:33:57,749 --> 00:34:04,479
the following widgets now need to be a

00:34:01,440 --> 00:34:09,369
maid active or sensitive or whatever the

00:34:04,479 --> 00:34:11,619
case is for that property right and

00:34:09,369 --> 00:34:13,030
you'd also want to catch the opposite

00:34:11,619 --> 00:34:15,730
which is when the checkbook when the

00:34:13,030 --> 00:34:17,559
check boxes turned off that those things

00:34:15,730 --> 00:34:19,960
get great out again right or you could

00:34:17,559 --> 00:34:21,909
you can make them vanish even right you

00:34:19,960 --> 00:34:23,859
can make your your dialogue actually

00:34:21,909 --> 00:34:25,659
hide that whole part of the the

00:34:23,859 --> 00:34:27,069
interface so that your interface you

00:34:25,659 --> 00:34:28,720
know opens up when you click the

00:34:27,069 --> 00:34:35,020
checkbox and then when you turn off the

00:34:28,720 --> 00:34:36,429
the interface closes up okay so those

00:34:35,020 --> 00:34:38,409
are different ways that you can that you

00:34:36,429 --> 00:34:42,309
can use signals now I'm actually going

00:34:38,409 --> 00:34:43,750
to show you a little later here some

00:34:42,309 --> 00:34:47,500
examples of how that works in real life

00:34:43,750 --> 00:34:49,329
so how do you do this in Python though I

00:34:47,500 --> 00:34:50,829
mean this is the salt hopefully this is

00:34:49,329 --> 00:34:52,780
all information that's fairly useful

00:34:50,829 --> 00:34:54,369
right for you guys if you're if you're

00:34:52,780 --> 00:34:56,020
starting gooeys hopefully that's that's

00:34:54,369 --> 00:34:58,089
giving you an idea that you know this

00:34:56,020 --> 00:34:59,920
stuff is not it's not as much rocket

00:34:58,089 --> 00:35:02,079
science as as maybe that you're you're

00:34:59,920 --> 00:35:04,140
afraid of I know that I was very afraid

00:35:02,079 --> 00:35:06,280
of writing gooeys for a long time and

00:35:04,140 --> 00:35:09,190
when I finally realized how these things

00:35:06,280 --> 00:35:13,390
work um you know it just opened up this

00:35:09,190 --> 00:35:15,040
whole this whole new Vista so how how

00:35:13,390 --> 00:35:18,339
can we make this part of our Python

00:35:15,040 --> 00:35:20,079
program well to use for example the gtk

00:35:18,339 --> 00:35:22,839
library it's very simple you load it

00:35:20,079 --> 00:35:26,740
using the the G object introspection

00:35:22,839 --> 00:35:29,470
repository from GI dot repository import

00:35:26,740 --> 00:35:30,819
gtk all right for those of you aren't

00:35:29,470 --> 00:35:32,230
Python programmers hopefully that makes

00:35:30,819 --> 00:35:35,079
a little bit of sense basically we're

00:35:32,230 --> 00:35:38,890
loading a module of code that we're

00:35:35,079 --> 00:35:42,490
going to be using the next thing we do

00:35:38,890 --> 00:35:44,140
is we create a GT k builder object

00:35:42,490 --> 00:35:47,650
remember i talked about gtk builder a

00:35:44,140 --> 00:35:49,390
little while ago what was what was a you

00:35:47,650 --> 00:35:54,569
know I when I talked about that I talked

00:35:49,390 --> 00:35:56,710
about it in the in the sense of creating

00:35:54,569 --> 00:36:00,299
creating a resource that we're going to

00:35:56,710 --> 00:36:00,299
load what was that resource anybody

00:36:00,630 --> 00:36:10,800
yeah thumb drive yeah absolutely it's an

00:36:08,610 --> 00:36:14,520
XML file and what's going to happen is

00:36:10,800 --> 00:36:16,830
in Python we're going to create a jgt k

00:36:14,520 --> 00:36:19,320
builder object or i should say an

00:36:16,830 --> 00:36:21,930
instance of the gtk builder class and

00:36:19,320 --> 00:36:24,390
we're going to populate it by saying hey

00:36:21,930 --> 00:36:26,640
load the definition that's in this file

00:36:24,390 --> 00:36:28,980
on the file system and then it's going

00:36:26,640 --> 00:36:31,830
to have a whole tree of objects those

00:36:28,980 --> 00:36:33,420
objects all have names and those names

00:36:31,830 --> 00:36:37,860
are the way that we can refer to them

00:36:33,420 --> 00:36:39,450
later on in our program so that's what

00:36:37,860 --> 00:36:41,850
I'm doing with this piece of Python code

00:36:39,450 --> 00:36:43,140
here now it's going to get this is going

00:36:41,850 --> 00:36:44,370
to get a little hairy to explain if

00:36:43,140 --> 00:36:46,620
you're not if you're not already using

00:36:44,370 --> 00:36:48,900
Python those of you have used python the

00:36:46,620 --> 00:36:50,820
hopeless this is not difficult to

00:36:48,900 --> 00:36:54,600
understand we're just saying that when

00:36:50,820 --> 00:36:57,870
we start up when we start up our our

00:36:54,600 --> 00:37:00,000
object here our class maybe it's a UI

00:36:57,870 --> 00:37:03,540
class that we've declared when we

00:37:00,000 --> 00:37:06,780
initialize it we create a property this

00:37:03,540 --> 00:37:08,660
builder property by instantiating a gtk

00:37:06,780 --> 00:37:11,970
builder object that basically means

00:37:08,660 --> 00:37:13,590
create a gtk builder object all right

00:37:11,970 --> 00:37:16,050
there's nothing in it yet it's just a

00:37:13,590 --> 00:37:19,410
just a holding a holding place right now

00:37:16,050 --> 00:37:24,240
to populate it we add the we add the

00:37:19,410 --> 00:37:26,790
contents of the probe so we'll add that

00:37:24,240 --> 00:37:30,180
in and now our gtk builder object

00:37:26,790 --> 00:37:31,920
actually has content in it now we can

00:37:30,180 --> 00:37:34,530
start referring to the things that are

00:37:31,920 --> 00:37:40,140
inside that builder file using the self

00:37:34,530 --> 00:37:42,060
dot builder object okay and this is how

00:37:40,140 --> 00:37:44,700
we would do that remember I described it

00:37:42,060 --> 00:37:47,250
at when we load in that tree of objects

00:37:44,700 --> 00:37:49,320
they all have names right those names

00:37:47,250 --> 00:37:51,330
are assigned automatically by the way by

00:37:49,320 --> 00:37:54,420
Glade right if you write your own

00:37:51,330 --> 00:37:55,920
builder file from scratch you have to be

00:37:54,420 --> 00:37:58,080
careful to make sure that you you know

00:37:55,920 --> 00:37:59,700
don't use the same name for two objects

00:37:58,080 --> 00:38:02,190
or else you'll get an error when you try

00:37:59,700 --> 00:38:03,900
and load the file Glade generally takes

00:38:02,190 --> 00:38:05,520
care of that stuff for you it will tell

00:38:03,900 --> 00:38:07,980
you when there's a problem like that and

00:38:05,520 --> 00:38:09,780
if you let it it will simply assign all

00:38:07,980 --> 00:38:12,570
the names itself and they have wonderful

00:38:09,780 --> 00:38:13,200
descriptive names like button 1 + button

00:38:12,570 --> 00:38:16,020
to

00:38:13,200 --> 00:38:18,060
right so i usually try and make the

00:38:16,020 --> 00:38:20,190
naming you know something that I'll take

00:38:18,060 --> 00:38:23,240
care of after I after I make that that

00:38:20,190 --> 00:38:25,589
mock up that you I i'll make those names

00:38:23,240 --> 00:38:28,470
descriptive in some way you know like

00:38:25,589 --> 00:38:29,849
I'll call my close button close right

00:38:28,470 --> 00:38:32,430
makes it easier to remember when I'm

00:38:29,849 --> 00:38:37,290
writing my Python code later that's the

00:38:32,430 --> 00:38:40,890
that's the name of the object so how do

00:38:37,290 --> 00:38:42,869
we how do we do something with for

00:38:40,890 --> 00:38:46,380
example a button that is part of that

00:38:42,869 --> 00:38:49,560
tree of objects well again using our UI

00:38:46,380 --> 00:38:51,270
class this self object we declare

00:38:49,560 --> 00:38:53,280
something called a close but close

00:38:51,270 --> 00:38:56,579
underscore button and that close button

00:38:53,280 --> 00:38:59,000
equals the object that is named close

00:38:56,579 --> 00:39:02,640
and we do that using this get object

00:38:59,000 --> 00:39:04,560
method does this make sense for those of

00:39:02,640 --> 00:39:06,720
you our Python folks is kind of makes

00:39:04,560 --> 00:39:09,030
sense to you all right so all we've done

00:39:06,720 --> 00:39:11,579
is we've assigned that that that gtk

00:39:09,030 --> 00:39:14,220
button that opt that widget to the self

00:39:11,579 --> 00:39:17,099
dot close button then we can start doing

00:39:14,220 --> 00:39:19,410
things with that all right so how do we

00:39:17,099 --> 00:39:20,819
put all this stuff together how do we

00:39:19,410 --> 00:39:22,369
make something useful out of this so I'm

00:39:20,819 --> 00:39:24,690
going to show you a simple example

00:39:22,369 --> 00:39:28,460
putting together the concepts that we

00:39:24,690 --> 00:39:32,160
just talked about and do an incredibly

00:39:28,460 --> 00:39:34,140
simple and pretty useless little program

00:39:32,160 --> 00:39:36,390
it's basically a one step up from hello

00:39:34,140 --> 00:39:40,170
world but it's simple enough that we can

00:39:36,390 --> 00:39:42,599
go through it quickly and it'll show us

00:39:40,170 --> 00:39:44,550
how you can take text entry from a

00:39:42,599 --> 00:39:46,050
dialogue and then I'm doing something

00:39:44,550 --> 00:39:49,109
dumb with it which is just outputting

00:39:46,050 --> 00:39:50,550
the text on the command line I'm not I'm

00:39:49,109 --> 00:39:51,930
not trying to make the case that that's

00:39:50,550 --> 00:39:54,690
something you're going to want to often

00:39:51,930 --> 00:39:56,790
do but it should show you that if you if

00:39:54,690 --> 00:39:59,730
you can take something from the GUI and

00:39:56,790 --> 00:40:01,410
then have that output to a terminal that

00:39:59,730 --> 00:40:02,940
should open up hopefully a whole realm

00:40:01,410 --> 00:40:04,410
of possibilities in your mind I mean you

00:40:02,940 --> 00:40:06,300
could do anything with that text you

00:40:04,410 --> 00:40:09,390
could write a bit of Python code in your

00:40:06,300 --> 00:40:13,160
in your callback function that would you

00:40:09,390 --> 00:40:15,599
know email it to somebody or you know I

00:40:13,160 --> 00:40:18,780
don't know might take it as the name for

00:40:15,599 --> 00:40:20,880
a server that you want to connect to and

00:40:18,780 --> 00:40:22,230
then do some sort of function there all

00:40:20,880 --> 00:40:23,460
right so this is just a really really

00:40:22,230 --> 00:40:25,740
simple example

00:40:23,460 --> 00:40:28,140
to show you the following thing is when

00:40:25,740 --> 00:40:30,060
a window button is in text entry I'm

00:40:28,140 --> 00:40:31,860
going to it'll show you how the window

00:40:30,060 --> 00:40:34,590
is deleted and this how we catch a

00:40:31,860 --> 00:40:37,770
signal on specific buttons and it'll

00:40:34,590 --> 00:40:40,230
show you that main loop it worked ok so

00:40:37,770 --> 00:40:42,060
let's go take a look at it oh by the way

00:40:40,230 --> 00:40:47,010
actually before you before we look at

00:40:42,060 --> 00:40:49,020
that let's look at them so I should look

00:40:47,010 --> 00:40:51,390
at the the glade file so here's the

00:40:49,020 --> 00:40:53,490
glade file for this this easy program

00:40:51,390 --> 00:40:56,280
you know again we're looking at the user

00:40:53,490 --> 00:40:59,490
interface not the python code so this is

00:40:56,280 --> 00:41:02,310
just a very very simple dialogue it's

00:40:59,490 --> 00:41:04,200
got a label up here it's got a text

00:41:02,310 --> 00:41:06,660
entry box and it's got a couple buttons

00:41:04,200 --> 00:41:08,580
closing print right now when we look at

00:41:06,660 --> 00:41:10,980
these things I'm going to pull this out

00:41:08,580 --> 00:41:12,720
so it's a little easier to see here when

00:41:10,980 --> 00:41:14,850
you look at one of these items like for

00:41:12,720 --> 00:41:17,720
example the dialogue it has a number of

00:41:14,850 --> 00:41:20,910
properties that you can adjust down here

00:41:17,720 --> 00:41:22,590
right whether it's resizable or not I

00:41:20,910 --> 00:41:24,240
have it set to yes although you know far

00:41:22,590 --> 00:41:26,130
writing up a program for something like

00:41:24,240 --> 00:41:28,350
this might not be a yes it can change

00:41:26,130 --> 00:41:30,060
those things modal you know whether or

00:41:28,350 --> 00:41:32,880
not it sticks in front of everything

00:41:30,060 --> 00:41:35,520
else whether you wanted to earn I you

00:41:32,880 --> 00:41:37,230
can set position you can set an icon for

00:41:35,520 --> 00:41:40,650
it there's all sorts of things that you

00:41:37,230 --> 00:41:42,510
can that you can set here I'm not going

00:41:40,650 --> 00:41:43,800
to go through all of these I will tell

00:41:42,510 --> 00:41:45,540
you that one of the one of the things

00:41:43,800 --> 00:41:47,220
that you'll you'll start doing when you

00:41:45,540 --> 00:41:50,970
design these gooeys is you'll use a lot

00:41:47,220 --> 00:41:52,440
of one particular widget which is well

00:41:50,970 --> 00:41:55,410
actually a couple of the kinds of

00:41:52,440 --> 00:41:58,530
widgets which are these rows and columns

00:41:55,410 --> 00:42:01,490
and and and and tables right or I think

00:41:58,530 --> 00:42:04,100
they call them H box vbox and and table

00:42:01,490 --> 00:42:08,610
those are ways that you can lay out your

00:42:04,100 --> 00:42:09,930
interface in a nice neat way right there

00:42:08,610 --> 00:42:12,060
fortunately you don't have to do that

00:42:09,930 --> 00:42:13,710
for every single kind of dialogue out

00:42:12,060 --> 00:42:16,020
there right if your say you want to have

00:42:13,710 --> 00:42:17,700
an about dialogue for your GUI right

00:42:16,020 --> 00:42:19,860
everybody wants that right you hit help

00:42:17,700 --> 00:42:22,470
about and a dialogue comes up and tells

00:42:19,860 --> 00:42:23,820
you the program name copyright maybe it

00:42:22,470 --> 00:42:25,500
has a link to the website or whatever

00:42:23,820 --> 00:42:27,660
you don't have to write that stuff from

00:42:25,500 --> 00:42:29,520
scratch a lot of those dialogues that

00:42:27,660 --> 00:42:33,090
you see every day are already written

00:42:29,520 --> 00:42:33,990
for you so for example like we'll see

00:42:33,090 --> 00:42:37,200
what you find it

00:42:33,990 --> 00:42:39,630
the sister where's the where's my about

00:42:37,200 --> 00:42:41,100
there it is right this about dialogue

00:42:39,630 --> 00:42:43,530
lets you actually create an about

00:42:41,100 --> 00:42:45,540
dialogue very simply and you can

00:42:43,530 --> 00:42:47,040
populate it either by filling out the

00:42:45,540 --> 00:42:53,450
glade or you can populate it from your

00:42:47,040 --> 00:43:02,310
Python program alright so let's do this

00:42:53,450 --> 00:43:05,490
I'm going to load up and i'm going to

00:43:02,310 --> 00:43:06,780
let me um adjust the i'm going to adjust

00:43:05,490 --> 00:43:16,290
the font size here just to make sure

00:43:06,780 --> 00:43:23,510
people can see it in the back there that

00:43:16,290 --> 00:43:37,970
should work and there let's try this

00:43:23,510 --> 00:43:37,970
dude oops sorry my fault bad type

00:43:42,200 --> 00:43:49,080
and I'm going to open up this Python

00:43:46,320 --> 00:43:51,540
program all right so you can see so you

00:43:49,080 --> 00:43:53,070
can see how this works actually what you

00:43:51,540 --> 00:43:56,850
know even just to make it simple let me

00:43:53,070 --> 00:43:58,410
just run that program so you can get an

00:43:56,850 --> 00:44:04,830
idea of what it does before we start

00:43:58,410 --> 00:44:06,690
looking at the code behind it all right

00:44:04,830 --> 00:44:07,980
all it does is it generates this little

00:44:06,690 --> 00:44:11,160
dialogue right it's the same thing we

00:44:07,980 --> 00:44:13,800
saw in the glade program and it gives an

00:44:11,160 --> 00:44:15,180
instruction here right and if we watch

00:44:13,800 --> 00:44:19,130
that if you take keep an eye on this

00:44:15,180 --> 00:44:19,130
terminal up here we'll just put in some

00:44:21,230 --> 00:44:26,910
and you'll see that when I hit print the

00:44:23,670 --> 00:44:29,310
text outputs on the terminal right and

00:44:26,910 --> 00:44:32,340
then I can get close programmers going

00:44:29,310 --> 00:44:33,990
okay alright so that's very simple

00:44:32,340 --> 00:44:36,180
obviously you know it's not a lot of

00:44:33,990 --> 00:44:37,770
bells and whistles wait because we have

00:44:36,180 --> 00:44:40,590
a limited limited amount of time here

00:44:37,770 --> 00:44:42,960
but you will find that there are quite a

00:44:40,590 --> 00:44:44,370
number of applications on pretty much

00:44:42,960 --> 00:44:47,220
every linux distribution that are

00:44:44,370 --> 00:44:49,530
written in python using the gtk library

00:44:47,220 --> 00:44:51,240
right so you can probably look at some

00:44:49,530 --> 00:44:53,460
of the code of four simple programs on

00:44:51,240 --> 00:44:55,260
your own system and get an idea of some

00:44:53,460 --> 00:44:56,490
of the more complex things but let's go

00:44:55,260 --> 00:44:57,840
through this one and just you know to

00:44:56,490 --> 00:45:00,600
make it nice and easy well we're going

00:44:57,840 --> 00:45:02,910
to go through this line by line so what

00:45:00,600 --> 00:45:04,770
we do at the beginning here I do an

00:45:02,910 --> 00:45:06,690
import which I I'm just used to doing I

00:45:04,770 --> 00:45:09,330
do that move with most of my most of my

00:45:06,690 --> 00:45:11,010
Python programs which is is OS insist

00:45:09,330 --> 00:45:13,470
because i'm going to use at least OS

00:45:11,010 --> 00:45:15,600
down below probably left offices but

00:45:13,470 --> 00:45:16,920
whatever and then here's that line that

00:45:15,600 --> 00:45:19,830
i told you about before from GI

00:45:16,920 --> 00:45:21,750
repository import gtk we do that because

00:45:19,830 --> 00:45:24,510
we're going to use the gtk toolkit in

00:45:21,750 --> 00:45:28,470
this python program and then i set up a

00:45:24,510 --> 00:45:31,230
UI now i did this as a class right and

00:45:28,470 --> 00:45:32,970
which I'm then going to instantiate it's

00:45:31,230 --> 00:45:35,040
not required that you do that I mean you

00:45:32,970 --> 00:45:37,470
could actually just write this more as a

00:45:35,040 --> 00:45:41,070
script and build the thing from a script

00:45:37,470 --> 00:45:43,920
but I feel like this is a better way to

00:45:41,070 --> 00:45:45,570
show Python then the other way right

00:45:43,920 --> 00:45:47,840
this will this will take you further in

00:45:45,570 --> 00:45:50,880
life right understanding how this works

00:45:47,840 --> 00:45:53,220
so I have a UI class which i initialize

00:45:50,880 --> 00:45:54,840
and this this should look pretty

00:45:53,220 --> 00:45:57,090
familiar right we just went over the

00:45:54,840 --> 00:45:59,580
same thing here which is we and we

00:45:57,090 --> 00:46:02,010
instantiate a builder object and then we

00:45:59,580 --> 00:46:04,950
we add the content to it from our file

00:46:02,010 --> 00:46:06,330
of now notice my my ad from files a

00:46:04,950 --> 00:46:08,280
little goofy here because what I'm doing

00:46:06,330 --> 00:46:10,170
is saying Oh get the current working

00:46:08,280 --> 00:46:12,360
directory and whatever that path is at

00:46:10,170 --> 00:46:14,580
easy entry you I to it so it's going to

00:46:12,360 --> 00:46:16,560
add that from my my current directory I

00:46:14,580 --> 00:46:18,660
did that for a specific reason that's

00:46:16,560 --> 00:46:20,880
not important here but just understand

00:46:18,660 --> 00:46:21,990
that all I'm doing there is essentially

00:46:20,880 --> 00:46:24,480
the same thing loading in the

00:46:21,990 --> 00:46:26,550
definitions then I declare something

00:46:24,480 --> 00:46:28,380
called self-doubt window and what's that

00:46:26,550 --> 00:46:31,350
going to be well whatever object is

00:46:28,380 --> 00:46:33,630
called dialogue one is now when I talk

00:46:31,350 --> 00:46:35,940
about self dot window it's that widget

00:46:33,630 --> 00:46:39,000
in fact that isn't that is the entire

00:46:35,940 --> 00:46:41,670
dialogue then I declare something called

00:46:39,000 --> 00:46:42,900
close button which is attached to you

00:46:41,670 --> 00:46:45,270
know that's actually populated from

00:46:42,900 --> 00:46:47,730
whatever the close button object was

00:46:45,270 --> 00:46:49,590
similarly with print button similarly

00:46:47,730 --> 00:46:52,230
with entry right all i'm doing is

00:46:49,590 --> 00:46:55,230
attaching these things to python objects

00:46:52,230 --> 00:46:57,660
right i'm making a Python object out of

00:46:55,230 --> 00:46:59,370
each of these widgets why because then I

00:46:57,660 --> 00:47:01,500
can refer to that Python object I can

00:46:59,370 --> 00:47:04,290
refer to its its properties and methods

00:47:01,500 --> 00:47:07,650
and actually use them in my program so

00:47:04,290 --> 00:47:09,300
for example for the window I'm going to

00:47:07,650 --> 00:47:11,640
connect now this connect method is

00:47:09,300 --> 00:47:14,580
something that you can do with most with

00:47:11,640 --> 00:47:17,100
with any any kind of widget that connect

00:47:14,580 --> 00:47:18,990
is a method that it's attached to very

00:47:17,100 --> 00:47:21,930
very high up the hierarchy very high up

00:47:18,990 --> 00:47:24,000
the sub up to class tree right and what

00:47:21,930 --> 00:47:25,470
I'm doing is a delete event I'm

00:47:24,000 --> 00:47:27,810
attaching to the delete event if

00:47:25,470 --> 00:47:30,120
somebody hits the X the little below

00:47:27,810 --> 00:47:32,010
close button for that window or if the

00:47:30,120 --> 00:47:34,260
or if the window is deleted for some

00:47:32,010 --> 00:47:37,820
other reason then this the quick

00:47:34,260 --> 00:47:40,020
function is going to run for this UI

00:47:37,820 --> 00:47:42,380
similarly if somebody connected I'm

00:47:40,020 --> 00:47:47,010
going to skip a line here if somebody

00:47:42,380 --> 00:47:48,810
clicks the close button object the quit

00:47:47,010 --> 00:47:51,000
but the quit function will also run then

00:47:48,810 --> 00:47:52,680
right this is kind of important because

00:47:51,000 --> 00:47:54,390
what you'll find is when you run one of

00:47:52,680 --> 00:47:56,880
these applications if you don't attach

00:47:54,390 --> 00:47:59,700
something like that you can't get the

00:47:56,880 --> 00:48:00,510
GUI to go away unless you like sig kill

00:47:59,700 --> 00:48:04,890
you

00:48:00,510 --> 00:48:08,010
application itself so it's and the

00:48:04,890 --> 00:48:10,350
reason that's interesting is that once I

00:48:08,010 --> 00:48:12,080
understood why that was again it was

00:48:10,350 --> 00:48:14,970
like one of those little doors opened

00:48:12,080 --> 00:48:17,040
when you create these these two these

00:48:14,970 --> 00:48:20,040
these interfaces these dialogues and

00:48:17,040 --> 00:48:22,080
things they all exist they all exist

00:48:20,040 --> 00:48:24,390
whether you can see them or not right

00:48:22,080 --> 00:48:26,340
there in memory there there whether

00:48:24,390 --> 00:48:28,620
they're visible or not the act of making

00:48:26,340 --> 00:48:31,140
them visible is something that you

00:48:28,620 --> 00:48:33,600
actually have to do right and you would

00:48:31,140 --> 00:48:35,340
make certain certain parts of your

00:48:33,600 --> 00:48:37,710
builder object that is you know maybe

00:48:35,340 --> 00:48:40,110
this dialogue or that dialogue you make

00:48:37,710 --> 00:48:43,260
them appear at specific times depending

00:48:40,110 --> 00:48:44,670
on what you want right that kind of like

00:48:43,260 --> 00:48:46,080
I don't know that I don't know about you

00:48:44,670 --> 00:48:47,550
guys that kind of blew my mind when I

00:48:46,080 --> 00:48:49,520
learned it maybe I'm just I may be the

00:48:47,550 --> 00:48:52,080
stupidest person in the room though so

00:48:49,520 --> 00:48:55,140
that was something that I really like I

00:48:52,080 --> 00:48:58,050
really dug that that the fact that

00:48:55,140 --> 00:48:59,880
making those things going go away making

00:48:58,050 --> 00:49:01,110
the main loop stop right making these

00:48:59,880 --> 00:49:03,210
different dialogues appear and disappear

00:49:01,110 --> 00:49:05,280
and knowing that they're all there all

00:49:03,210 --> 00:49:07,620
the time and it's just a matter of which

00:49:05,280 --> 00:49:09,930
ones you expose and make available for

00:49:07,620 --> 00:49:12,060
people to use that's it's such a

00:49:09,930 --> 00:49:14,340
powerful concept and when you realize

00:49:12,060 --> 00:49:16,320
that those things are always there and

00:49:14,340 --> 00:49:18,870
it's just a matter of you as a program

00:49:16,320 --> 00:49:21,290
or deciding how the user is going to

00:49:18,870 --> 00:49:25,830
interact with them I mean the

00:49:21,290 --> 00:49:28,140
possibilities are limitless right it

00:49:25,830 --> 00:49:30,290
also helps you understand that these

00:49:28,140 --> 00:49:33,630
functions that you write in Python are

00:49:30,290 --> 00:49:35,790
little bits of code that only run when

00:49:33,630 --> 00:49:38,160
somebody does whatever that that's sick

00:49:35,790 --> 00:49:39,690
when they produce that signal all right

00:49:38,160 --> 00:49:43,560
so you can build all sorts of really

00:49:39,690 --> 00:49:47,010
cool functions and not worry about you

00:49:43,560 --> 00:49:49,770
know you don't need to worry about some

00:49:47,010 --> 00:49:51,060
abstract connection between the dialogue

00:49:49,770 --> 00:49:53,430
that's in front of you and where your

00:49:51,060 --> 00:49:54,420
python program is running right you

00:49:53,430 --> 00:49:56,370
don't have to think about it that way

00:49:54,420 --> 00:49:58,320
you simply think that when I would I do

00:49:56,370 --> 00:50:00,780
this thing when the user does this thing

00:49:58,320 --> 00:50:03,780
this the following callback function is

00:50:00,780 --> 00:50:05,130
going to is going to run so to follow

00:50:03,780 --> 00:50:06,510
that up let's you know let's look at

00:50:05,130 --> 00:50:08,430
this with this line i skipped which is

00:50:06,510 --> 00:50:10,770
the print buttons connect function when

00:50:08,430 --> 00:50:12,210
the print button object is clicked we're

00:50:10,770 --> 00:50:13,050
going to run this function called print

00:50:12,210 --> 00:50:14,890
text

00:50:13,050 --> 00:50:16,780
alright so now we've got several

00:50:14,890 --> 00:50:17,859
functions that we've connected and here

00:50:16,780 --> 00:50:20,290
they are right down here they're very

00:50:17,859 --> 00:50:24,089
simple I have a print text that print

00:50:20,290 --> 00:50:27,579
text function that we we looked at here

00:50:24,089 --> 00:50:30,190
there's the actual function itself I use

00:50:27,579 --> 00:50:32,920
this star args because it is actually

00:50:30,190 --> 00:50:34,150
possible to send arguments into that

00:50:32,920 --> 00:50:35,980
function that you could you know some

00:50:34,150 --> 00:50:38,020
arbitrary arguments that you could use

00:50:35,980 --> 00:50:42,119
in your Python program later i'm not

00:50:38,020 --> 00:50:45,460
actually using them what happens is i

00:50:42,119 --> 00:50:47,560
simply print at the terminal some text

00:50:45,460 --> 00:50:49,690
where do i get the text well i'm

00:50:47,560 --> 00:50:51,760
referring back to the self dot entry

00:50:49,690 --> 00:50:53,829
object which is that that little text

00:50:51,760 --> 00:50:56,530
entry box and i'm doing i'm actually

00:50:53,829 --> 00:50:58,510
running a method the dot the get text

00:50:56,530 --> 00:51:00,369
method which basically does exactly what

00:50:58,510 --> 00:51:03,430
it sounds like gets the text that's in

00:51:00,369 --> 00:51:05,500
the entry box and that that's now what

00:51:03,430 --> 00:51:09,450
we're referring to so that string object

00:51:05,500 --> 00:51:12,690
gets printed out does that make sense

00:51:09,450 --> 00:51:15,400
alright and there's our quit function

00:51:12,690 --> 00:51:17,980
which is obviously not a lot of fun

00:51:15,400 --> 00:51:19,839
basically when it quits it runs the gtk

00:51:17,980 --> 00:51:22,089
main quit which basically breaks the

00:51:19,839 --> 00:51:24,190
main loop once that main loop is broken

00:51:22,089 --> 00:51:26,319
your GUI program is gone right

00:51:24,190 --> 00:51:27,700
your-your-your GUI pieces are going

00:51:26,319 --> 00:51:29,589
you're no longer you're no longer

00:51:27,700 --> 00:51:32,050
getting sick or I should say you're no

00:51:29,589 --> 00:51:39,579
longer getting signal data at that point

00:51:32,050 --> 00:51:40,920
right it's uh when when you do that if

00:51:39,579 --> 00:51:44,170
you have if there's nothing further

00:51:40,920 --> 00:51:45,640
happening after the main loop the

00:51:44,170 --> 00:51:47,470
program is going to quit and all of

00:51:45,640 --> 00:51:49,960
those resources are gone it is actually

00:51:47,470 --> 00:51:52,960
possible to quit out of the main loop

00:51:49,960 --> 00:51:54,220
but not have anything further happen

00:51:52,960 --> 00:51:56,200
like your program would basically look

00:51:54,220 --> 00:51:58,780
like it was locked right it just stopped

00:51:56,200 --> 00:52:00,880
the GUI went away for example and but

00:51:58,780 --> 00:52:02,770
yet the person doesn't get a prom back

00:52:00,880 --> 00:52:04,690
right or something like that it's

00:52:02,770 --> 00:52:06,310
possible to do that so you you do want

00:52:04,690 --> 00:52:08,980
to make sure to clean up after yourself

00:52:06,310 --> 00:52:11,079
in in those kind of programs here it's

00:52:08,980 --> 00:52:13,630
actually very simple because when i run

00:52:11,079 --> 00:52:15,790
this this python program i only do two

00:52:13,630 --> 00:52:17,859
things really remember that all of this

00:52:15,790 --> 00:52:21,490
stuff up here none of this is actually

00:52:17,859 --> 00:52:24,670
stuff that runs when i start the python

00:52:21,490 --> 00:52:26,299
program until i instantiate this class

00:52:24,670 --> 00:52:28,759
right

00:52:26,299 --> 00:52:31,849
I make a UI object which is an instance

00:52:28,759 --> 00:52:34,309
of this class you I when I instantiate

00:52:31,849 --> 00:52:36,709
it all of this stuff happens the

00:52:34,309 --> 00:52:38,900
builders stuff is loaded the signal

00:52:36,709 --> 00:52:42,019
connections are made these functions are

00:52:38,900 --> 00:52:44,150
defined but not run right and that all

00:52:42,019 --> 00:52:47,959
happens when I do this the next thing I

00:52:44,150 --> 00:52:49,339
do is I start the main loop that's it so

00:52:47,959 --> 00:52:53,829
what I've done is I've said I've

00:52:49,339 --> 00:52:58,699
essentially I've built a dialogue and I

00:52:53,829 --> 00:53:01,699
run it okay and when it's done when that

00:52:58,699 --> 00:53:03,469
main quit happens this loop this this

00:53:01,699 --> 00:53:06,109
this function here which is essentially

00:53:03,469 --> 00:53:08,269
just a loop when that's over there's no

00:53:06,109 --> 00:53:10,549
more program that's it so that's why

00:53:08,269 --> 00:53:12,319
everything quits when I when I you know

00:53:10,549 --> 00:53:17,029
click on the close button or click on

00:53:12,319 --> 00:53:19,759
the DX on the dialog does that make

00:53:17,029 --> 00:53:21,769
sense to everybody all right I know this

00:53:19,759 --> 00:53:24,619
is a very simple example not incredibly

00:53:21,769 --> 00:53:29,749
useful but you can actually pick apart

00:53:24,619 --> 00:53:35,809
any pie gtk or pi g object GUI program

00:53:29,749 --> 00:53:39,259
using this stuff ok so where does that

00:53:35,809 --> 00:53:43,400
leave us just remind you about the

00:53:39,259 --> 00:53:45,019
program flow you have an XML file that

00:53:43,400 --> 00:53:47,569
defines the GUI elements you're going to

00:53:45,019 --> 00:53:49,910
use you load them in you load them into

00:53:47,569 --> 00:53:52,189
a gtk builder object with your python

00:53:49,910 --> 00:53:54,380
code and then you continue to refine the

00:53:52,189 --> 00:53:56,900
GUI and assign interactivity through

00:53:54,380 --> 00:53:59,779
other functions that you set up now

00:53:56,900 --> 00:54:01,789
couple notes you don't need to write

00:53:59,779 --> 00:54:03,829
everything in the UI file you don't need

00:54:01,789 --> 00:54:05,660
to label every button you don't need to

00:54:03,829 --> 00:54:07,459
label every single widget you can

00:54:05,660 --> 00:54:09,589
actually do that stuff in your python

00:54:07,459 --> 00:54:11,089
program why is that important because

00:54:09,589 --> 00:54:14,329
you might want to change it as the

00:54:11,089 --> 00:54:16,609
program goes right as you're like here's

00:54:14,329 --> 00:54:19,130
an example i have an about dialogue for

00:54:16,609 --> 00:54:22,219
a program that i wrote when i change the

00:54:19,130 --> 00:54:24,769
version number from 0 point for 2.5 I

00:54:22,219 --> 00:54:26,390
don't want to find all of the labels

00:54:24,769 --> 00:54:28,369
where I have a no point for and change

00:54:26,390 --> 00:54:30,739
them so I set that in an overall

00:54:28,369 --> 00:54:32,709
definition that you know that the my

00:54:30,739 --> 00:54:35,029
Python program uses and then I actually

00:54:32,709 --> 00:54:36,310
programmatically set the label in the

00:54:35,029 --> 00:54:37,990
about dialog to be

00:54:36,310 --> 00:54:39,970
you know that the content of that

00:54:37,990 --> 00:54:42,010
variable that way I only have to change

00:54:39,970 --> 00:54:43,240
it in one place and anywhere the version

00:54:42,010 --> 00:54:45,130
number is used in my program it

00:54:43,240 --> 00:54:46,720
automatically changes right of course

00:54:45,130 --> 00:54:48,130
you can build that into your you're

00:54:46,720 --> 00:54:50,860
building scripts and all sorts of other

00:54:48,130 --> 00:54:53,020
automation you can do you can hide or

00:54:50,860 --> 00:54:55,960
show elements dynamically I have a

00:54:53,020 --> 00:54:57,730
fairly simple a program that I wrote

00:54:55,960 --> 00:54:59,380
called pulse caster which you can get I

00:54:57,730 --> 00:55:01,510
know you can get it in fedora i think in

00:54:59,380 --> 00:55:04,210
opensuse i think you can get it in a bun

00:55:01,510 --> 00:55:05,740
to now but if not go to pulse cast org

00:55:04,210 --> 00:55:07,660
you can download the code it's

00:55:05,740 --> 00:55:09,790
incredibly simple I would not call it a

00:55:07,660 --> 00:55:12,130
paragon of great programming so don't

00:55:09,790 --> 00:55:14,620
don't use it as a Bible for God's sake

00:55:12,130 --> 00:55:16,720
but you will hopefully find it a little

00:55:14,620 --> 00:55:19,360
bit instructive on what a bullheaded

00:55:16,720 --> 00:55:24,400
amateur can achieve given enough time

00:55:19,360 --> 00:55:25,720
and enough caffeine alright so at the

00:55:24,400 --> 00:55:27,460
end here I don't want to apologize to

00:55:25,720 --> 00:55:30,490
Burt Bacharach for butchering as lyrics

00:55:27,460 --> 00:55:32,380
for my little slides and I'm going to

00:55:30,490 --> 00:55:34,990
note that pi g object does not make

00:55:32,380 --> 00:55:36,730
anything a harder than pi gtk if you're

00:55:34,990 --> 00:55:38,560
starting out it really doesn't matter

00:55:36,730 --> 00:55:40,600
you're all you're doing is learning a

00:55:38,560 --> 00:55:42,820
couple a couple of new ways of

00:55:40,600 --> 00:55:45,910
addressing objects but it's it's really

00:55:42,820 --> 00:55:47,740
no different than pi gtk if you're going

00:55:45,910 --> 00:55:49,210
to write something try contributing to

00:55:47,740 --> 00:55:50,770
something before you reinvent a wheel

00:55:49,210 --> 00:55:53,080
there's a lot of GUI programs out there

00:55:50,770 --> 00:55:55,750
so a lot of bad GUI programs out there

00:55:53,080 --> 00:55:58,480
so see if you can contribute to

00:55:55,750 --> 00:56:00,700
something that you like to help out and

00:55:58,480 --> 00:56:03,970
if you're doing something new remember

00:56:00,700 --> 00:56:06,670
code last right design design what you

00:56:03,970 --> 00:56:09,220
want your users to see figure out their

00:56:06,670 --> 00:56:13,840
experience first write the code is the

00:56:09,220 --> 00:56:15,570
last step all right now I think I got a

00:56:13,840 --> 00:56:18,010
few minutes for questions or any and

00:56:15,570 --> 00:56:19,480
like to thank everybody for hanging out

00:56:18,010 --> 00:56:24,030
here with me and I'll take whatever

00:56:19,480 --> 00:56:24,030
questions yeah yeah

00:56:25,170 --> 00:56:30,250
yes absolutely the presentation that

00:56:27,490 --> 00:56:32,380
you're looking at is under the self 2011

00:56:30,250 --> 00:56:34,510
folder in my in my fedora people space

00:56:32,380 --> 00:56:37,210
you can also download the program the UI

00:56:34,510 --> 00:56:39,040
file everything and in fact even the the

00:56:37,210 --> 00:56:43,840
diagram I did you can download the the

00:56:39,040 --> 00:56:45,610
SVG for that and if you want okay yeah

00:56:43,840 --> 00:56:46,840
that's and I there's some other stuff up

00:56:45,610 --> 00:56:48,940
there which may or you may or may not

00:56:46,840 --> 00:56:51,010
find useful maybe you can laugh at it I

00:56:48,940 --> 00:56:58,140
guess it's some of its cut out of date

00:56:51,010 --> 00:56:58,140
so I don't clean that space often yes

00:57:02,640 --> 00:57:09,730
I'm sorry if I've nuts oh okay so the

00:57:07,600 --> 00:57:11,620
question was how how much more difficult

00:57:09,730 --> 00:57:14,620
with the example of man if I didn't

00:57:11,620 --> 00:57:18,150
start with Glade um actually in terms of

00:57:14,620 --> 00:57:21,550
complexity not not a lot more complex

00:57:18,150 --> 00:57:24,490
but you if you don't use Glade you

00:57:21,550 --> 00:57:26,950
basically have to set up the the tree of

00:57:24,490 --> 00:57:28,900
objects yourself so you have to set up a

00:57:26,950 --> 00:57:30,700
dialogue you have to declare you know

00:57:28,900 --> 00:57:32,770
what kind of buttons are in it you have

00:57:30,700 --> 00:57:34,480
to declare you know these vertical boxes

00:57:32,770 --> 00:57:37,000
the things that are going to be in them

00:57:34,480 --> 00:57:38,470
set the labels for text those are all

00:57:37,000 --> 00:57:41,080
things that basically blade is a

00:57:38,470 --> 00:57:43,360
shortcut it's basically a GUI for making

00:57:41,080 --> 00:57:46,300
gooeys right it just shortens your time

00:57:43,360 --> 00:57:48,370
to your time to develop but you

00:57:46,300 --> 00:57:51,010
absolutely could do that in the program

00:57:48,370 --> 00:57:53,800
like in the in the in that in it that

00:57:51,010 --> 00:57:55,300
that initialization function I could

00:57:53,800 --> 00:57:57,400
have done all of that manually using

00:57:55,300 --> 00:58:00,850
Python code I could have said you know

00:57:57,400 --> 00:58:02,590
make a gtk dialogue you know fill it up

00:58:00,850 --> 00:58:05,110
with the following things then pack the

00:58:02,590 --> 00:58:08,170
pack the rows and and and that sort of

00:58:05,110 --> 00:58:10,210
stuff I I find that's a pain people who

00:58:08,170 --> 00:58:13,810
write Python who have come from the sea

00:58:10,210 --> 00:58:15,670
world of doing gtk are doing gooeys a

00:58:13,810 --> 00:58:17,410
lot of times they do that because

00:58:15,670 --> 00:58:19,330
they're so used to doing it and see that

00:58:17,410 --> 00:58:21,940
they just do it all the time I find

00:58:19,330 --> 00:58:23,410
Glade much easier to start with helps me

00:58:21,940 --> 00:58:28,390
get my ideas I guess into practice

00:58:23,410 --> 00:58:31,440
faster anybody else

00:58:28,390 --> 00:58:31,440
yes sir

00:58:55,939 --> 00:58:59,159
yeah really good i'm just going to

00:58:57,749 --> 00:59:02,759
repeat that for the camera so it picks

00:58:59,159 --> 00:59:04,140
it up a really good point that the nice

00:59:02,759 --> 00:59:05,669
thing about when you actually write that

00:59:04,140 --> 00:59:09,089
code out longhand as opposed to using

00:59:05,669 --> 00:59:11,249
glade it gives you a lot more control at

00:59:09,089 --> 00:59:13,739
a granular level over all of the things

00:59:11,249 --> 00:59:15,539
that that your that your GUI is made up

00:59:13,739 --> 00:59:18,269
like every component becomes a little

00:59:15,539 --> 00:59:20,309
more tunable like more easily but you

00:59:18,269 --> 00:59:22,109
know again the beginner thing I think

00:59:20,309 --> 00:59:23,579
Glade is great for beginners as you get

00:59:22,109 --> 00:59:24,749
as you get more advanced you may decide

00:59:23,579 --> 00:59:27,269
that you're going to start doing more of

00:59:24,749 --> 00:59:29,459
it by hands so it's definitely it's

00:59:27,269 --> 00:59:32,059
definitely up to you I find that the

00:59:29,459 --> 00:59:41,789
glades like just a low barrier to entry

00:59:32,059 --> 00:59:45,259
idea for me yeah anybody else okay thank

00:59:41,789 --> 00:59:45,259
you very much for coming I appreciate it

00:59:47,269 --> 00:59:50,269
goes

00:59:58,750 --> 01:00:03,220
what about this I can help it like it we

01:00:01,330 --> 01:00:06,240
have the same problem or whatever a few

01:00:03,220 --> 01:00:06,240
haters you gave me I

01:00:08,380 --> 01:00:12,910
let's put the word out

01:00:10,850 --> 01:00:12,910
you

01:01:20,640 --> 01:01:27,490
as a service leader in cloud computing

01:01:24,370 --> 01:01:29,050
all we do is hosting computing to us the

01:01:27,490 --> 01:01:31,000
cloud is just the next generation of

01:01:29,050 --> 01:01:32,950
hosting and if someone who's been in the

01:01:31,000 --> 01:01:35,140
hosting industry for 12 years we feel

01:01:32,950 --> 01:01:36,610
work in a unique position to really help

01:01:35,140 --> 01:01:38,650
bring these two worlds together these

01:01:36,610 --> 01:01:40,570
different sense of technologies and to

01:01:38,650 --> 01:01:42,880
help companies embrace this new world

01:01:40,570 --> 01:01:44,890
and this great new tool that allows

01:01:42,880 --> 01:01:47,470
faster innovation not only is it about

01:01:44,890 --> 01:01:52,480
us being responsive and accountable but

01:01:47,470 --> 01:01:55,710
it's about us doing more for you whether

01:01:52,480 --> 01:01:59,260
less nos that works the way that you do

01:01:55,710 --> 01:02:03,420
across all your devices HP Slate and

01:01:59,260 --> 01:02:03,420

YouTube URL: https://www.youtube.com/watch?v=xHvkrpXoN60


