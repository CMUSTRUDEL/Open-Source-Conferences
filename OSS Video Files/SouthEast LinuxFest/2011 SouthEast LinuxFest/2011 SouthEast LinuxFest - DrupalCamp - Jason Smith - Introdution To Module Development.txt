Title: 2011 SouthEast LinuxFest - DrupalCamp - Jason Smith - Introdution To Module Development
Publication date: 2013-03-10
Playlist: 2011 SouthEast LinuxFest
Description: 
	2011 SouthEast LinuxFest
DrupalCamp
Jason Smith
Introdution To Module Development
Captions: 
	00:00:01,159 --> 00:00:07,290
the following presentation was recorded

00:00:03,810 --> 00:00:09,870
at the 2011 southeast linux fest in

00:00:07,290 --> 00:00:11,370
Spartanburg South Carolina it is

00:00:09,870 --> 00:00:14,190
licensed under a Creative Commons

00:00:11,370 --> 00:00:16,940
license for more information about the

00:00:14,190 --> 00:00:26,849
south east linux fest visit

00:00:16,940 --> 00:00:30,449
www.ccltss.org or monsters in 2011 for

00:00:26,849 --> 00:00:32,130
helping make these videos possible hello

00:00:30,449 --> 00:00:38,070
everybody welcome to econ 101

00:00:32,130 --> 00:00:40,680
I felt flat this is intro to module

00:00:38,070 --> 00:00:42,480
development from Drupal 6 with whatever

00:00:40,680 --> 00:00:45,989
modifications need to be made to adapt

00:00:42,480 --> 00:00:48,149
the things I'm showing to Drupal 7

00:00:45,989 --> 00:00:49,800
despite well there are quite a few

00:00:48,149 --> 00:00:51,030
things that have changed from 6 to 7 but

00:00:49,800 --> 00:00:53,250
a lot of the things that we go over a

00:00:51,030 --> 00:00:55,860
relatively simple changes the the

00:00:53,250 --> 00:00:57,690
largest difference is between 6 & 7 our

00:00:55,860 --> 00:00:59,100
session management and the database

00:00:57,690 --> 00:01:02,690
management not at neither of which we're

00:00:59,100 --> 00:01:06,720
going to be touching that said this this

00:01:02,690 --> 00:01:08,760
sessions not about the details of the

00:01:06,720 --> 00:01:11,250
API I'm trying to give you an overview

00:01:08,760 --> 00:01:13,770
in the direction and where do you need

00:01:11,250 --> 00:01:16,590
to look to find what you need to do to

00:01:13,770 --> 00:01:17,909
get started this is basically one of the

00:01:16,590 --> 00:01:19,830
hardest things to do when you're getting

00:01:17,909 --> 00:01:21,330
started with a new development project

00:01:19,830 --> 00:01:22,830
or the new framework it's finding out

00:01:21,330 --> 00:01:26,610
where all the pieces are and how they

00:01:22,830 --> 00:01:28,890
all fit together so first we're going to

00:01:26,610 --> 00:01:32,280
find a module how many of you guys

00:01:28,890 --> 00:01:34,140
already use Drupal everybody have you

00:01:32,280 --> 00:01:37,020
guys comfortable installing modules

00:01:34,140 --> 00:01:39,630
yourself didn't we used rush to install

00:01:37,020 --> 00:01:43,280
them for themselves has anybody tried to

00:01:39,630 --> 00:01:45,439
write a module themselves oh we got one

00:01:43,280 --> 00:01:50,790
all right I just wanted to get an idea

00:01:45,439 --> 00:01:51,960
all right so what is a module some

00:01:50,790 --> 00:01:55,110
examples that you guys might have come

00:01:51,960 --> 00:01:57,000
across CCK provides the content fields

00:01:55,110 --> 00:02:00,090
views which allows you to display

00:01:57,000 --> 00:02:01,680
content automatic node tiles etc caption

00:02:00,090 --> 00:02:03,840
and you block these are examples of

00:02:01,680 --> 00:02:05,280
modules you'll find in the Trib we're

00:02:03,840 --> 00:02:09,750
going to talk a little bit how they are

00:02:05,280 --> 00:02:11,370
put together so modules are the building

00:02:09,750 --> 00:02:13,470
blocks that get Drupal the flexibility

00:02:11,370 --> 00:02:13,900
and power if that's not a good enough

00:02:13,470 --> 00:02:16,239
explanation

00:02:13,900 --> 00:02:18,069
to you a module is a collection of hooks

00:02:16,239 --> 00:02:21,090
and API calls that act together to

00:02:18,069 --> 00:02:25,239
extend or modify core functionality

00:02:21,090 --> 00:02:29,650
everybody on board all right well what

00:02:25,239 --> 00:02:30,609
are hooks and API calls if UI calls

00:02:29,650 --> 00:02:32,590
you'll be familiar with when you're

00:02:30,609 --> 00:02:33,700
working with anything else and any other

00:02:32,590 --> 00:02:35,290
framework they're basically the

00:02:33,700 --> 00:02:37,599
functions that the framework provides to

00:02:35,290 --> 00:02:39,220
you I'll go over a few of them later the

00:02:37,599 --> 00:02:40,870
important thing to learn with Drupal is

00:02:39,220 --> 00:02:42,579
the hook system if you're familiar with

00:02:40,870 --> 00:02:45,099
design patterns a bit it's a bit like

00:02:42,579 --> 00:02:46,900
the the listener pattern what you do is

00:02:45,099 --> 00:02:49,690
you set up a function that is going to

00:02:46,900 --> 00:02:52,000
be called on certain occasions that is

00:02:49,690 --> 00:02:54,879
to say when a page is loaded there's a

00:02:52,000 --> 00:02:56,889
function hook for page load when a user

00:02:54,879 --> 00:02:57,700
logs in there's a function hook for the

00:02:56,889 --> 00:03:00,189
user login

00:02:57,700 --> 00:03:02,290
so when Drupal processes the request for

00:03:00,189 --> 00:03:04,239
a page it says hey anybody interested in

00:03:02,290 --> 00:03:07,109
processing the page load anybody

00:03:04,239 --> 00:03:09,519
interested in processing the user login

00:03:07,109 --> 00:03:12,879
so here are some examples of built-in

00:03:09,519 --> 00:03:15,519
hooks that you're gonna use on virtually

00:03:12,879 --> 00:03:19,030
every module that you develop hook menu

00:03:15,519 --> 00:03:20,680
which allows you to create menu

00:03:19,030 --> 00:03:23,889
callbacks that is to say if someone were

00:03:20,680 --> 00:03:26,319
to go to slash my custom page you would

00:03:23,889 --> 00:03:28,870
add a callback to the hook menu saying I

00:03:26,319 --> 00:03:31,000
want to add my custom page to the

00:03:28,870 --> 00:03:33,150
request queue that is to say if somebody

00:03:31,000 --> 00:03:35,829
requests my custom page call my function

00:03:33,150 --> 00:03:38,139
hook form alter lets you modify forms

00:03:35,829 --> 00:03:40,659
before they displayed hook block lets

00:03:38,139 --> 00:03:43,419
you create display and edit existing

00:03:40,659 --> 00:03:47,220
blocks hook user lets you keep track of

00:03:43,419 --> 00:03:50,859
user login logout creation deletion and

00:03:47,220 --> 00:03:53,049
hook node API keeps track of note

00:03:50,859 --> 00:03:55,090
creation and deletion now because it's

00:03:53,049 --> 00:04:00,340
such an important concept does everybody

00:03:55,090 --> 00:04:03,489
understand what a hook is no all right

00:04:00,340 --> 00:04:06,489
there's this old metaphor I'm not sure

00:04:03,489 --> 00:04:09,340
how well it communicates but when you're

00:04:06,489 --> 00:04:11,139
delivering mail via train they have

00:04:09,340 --> 00:04:13,000
these hooks that are on the side of the

00:04:11,139 --> 00:04:14,799
train and as the train goes by the

00:04:13,000 --> 00:04:16,269
station they have these hooks at various

00:04:14,799 --> 00:04:19,030
Heights depending upon whether or not

00:04:16,269 --> 00:04:21,159
it's picking up or delivering mail so if

00:04:19,030 --> 00:04:22,870
the station wants to pick up mail from a

00:04:21,159 --> 00:04:24,310
particular location they set the hook at

00:04:22,870 --> 00:04:25,690
this height and if they want to deliver

00:04:24,310 --> 00:04:26,540
mail they'll set a hook at another

00:04:25,690 --> 00:04:28,010
height

00:04:26,540 --> 00:04:29,450
so when they're ready to deliver mail

00:04:28,010 --> 00:04:31,370
they just hang their mailbag on that

00:04:29,450 --> 00:04:34,490
hook and when the train flies by the

00:04:31,370 --> 00:04:36,380
hook on the train catches it and it gets

00:04:34,490 --> 00:04:39,140
deposit into a part of the train

00:04:36,380 --> 00:04:41,570
the corollary here is as a Drupal

00:04:39,140 --> 00:04:43,670
developer you're acting as the station

00:04:41,570 --> 00:04:45,620
dealing with the train you're trying to

00:04:43,670 --> 00:04:47,800
anticipate actions that the train is

00:04:45,620 --> 00:04:51,290
going to be taking and you want to

00:04:47,800 --> 00:04:53,890
prepare your mailbag or your content for

00:04:51,290 --> 00:04:57,770
when the train stops by so those

00:04:53,890 --> 00:05:00,170
examples of what a hook might be are for

00:04:57,770 --> 00:05:01,130
example when you go to a Drupal website

00:05:00,170 --> 00:05:04,310
and load the front page

00:05:01,130 --> 00:05:08,180
behind-the-scenes there is a module say

00:05:04,310 --> 00:05:10,310
the node module that will figure out

00:05:08,180 --> 00:05:13,730
what node that you're trying to look at

00:05:10,310 --> 00:05:15,830
and call hook node with that information

00:05:13,730 --> 00:05:20,030
so you're creating that function and

00:05:15,830 --> 00:05:21,790
it's being called let me back up a

00:05:20,030 --> 00:05:23,990
little bit and say these are not

00:05:21,790 --> 00:05:26,480
functions as such there is no hook

00:05:23,990 --> 00:05:28,730
underscore menu function the hook part

00:05:26,480 --> 00:05:30,050
is created by you so if we're creating a

00:05:28,730 --> 00:05:33,110
module and we're going to create one

00:05:30,050 --> 00:05:34,430
called hello then your implementation of

00:05:33,110 --> 00:05:37,340
hook menu is going to be hello

00:05:34,430 --> 00:05:39,890
underscore menu Drupal parses your

00:05:37,340 --> 00:05:42,560
source files finds these functions by

00:05:39,890 --> 00:05:47,240
this magic naming scheme and calls them

00:05:42,560 --> 00:05:48,500
automatically so is that kind of getting

00:05:47,240 --> 00:05:52,370
the idea across because I can go some

00:05:48,500 --> 00:05:53,570
more and we'll revisit it again and I

00:05:52,370 --> 00:05:56,030
think after I do a little bit of the

00:05:53,570 --> 00:05:57,290
module development so this is the first

00:05:56,030 --> 00:06:00,110
opportunity where I can show you some

00:05:57,290 --> 00:06:01,430
differences between Drupal 6 and 7 & 6

00:06:00,110 --> 00:06:03,830
these are the functions that you'd be

00:06:01,430 --> 00:06:05,300
using the one of the issues that they're

00:06:03,830 --> 00:06:08,540
trying to address in seven with the new

00:06:05,300 --> 00:06:10,970
hook system is that hook node API is

00:06:08,540 --> 00:06:14,570
called whether the node is being created

00:06:10,970 --> 00:06:15,830
deleted inserted destroyed etc so it

00:06:14,570 --> 00:06:18,470
seems like an awful lot of work for a

00:06:15,830 --> 00:06:20,780
single hook instance to be handling so

00:06:18,470 --> 00:06:23,240
what they've done I started with fusion

00:06:20,780 --> 00:06:25,790
of course same with the hook user

00:06:23,240 --> 00:06:28,940
normally these are passes parameters to

00:06:25,790 --> 00:06:29,600
the your your callback function now in

00:06:28,940 --> 00:06:32,060
Drupal 7

00:06:29,600 --> 00:06:34,880
they've all been forced parse down into

00:06:32,060 --> 00:06:36,730
their own separate functions right so

00:06:34,880 --> 00:06:39,170
I'll go into an implementation of them

00:06:36,730 --> 00:06:40,610
so we do the same thing with movies

00:06:39,170 --> 00:06:43,050
[Music]

00:06:40,610 --> 00:06:49,620
we do the same thing with no block or

00:06:43,050 --> 00:06:51,330
hook lock so here's an example of a

00:06:49,620 --> 00:06:53,910
workflow where you would actually define

00:06:51,330 --> 00:06:56,160
some callbacks say we're building a user

00:06:53,910 --> 00:06:58,170
login form our Drupal is about to build

00:06:56,160 --> 00:07:01,080
the user login form and it's going to

00:06:58,170 --> 00:07:02,700
call a hook login and say does anybody

00:07:01,080 --> 00:07:04,650
want to take a look at the form that's

00:07:02,700 --> 00:07:06,120
being passed well hook form alter really

00:07:04,650 --> 00:07:10,490
does anybody want to take a look at the

00:07:06,120 --> 00:07:13,260
form CCK has no response doesn't care

00:07:10,490 --> 00:07:17,790
views it doesn't interact with that hook

00:07:13,260 --> 00:07:22,770
so there's no definition in their login

00:07:17,790 --> 00:07:24,450
toboggan it wants to add a login using

00:07:22,770 --> 00:07:25,950
your email address a piece of

00:07:24,450 --> 00:07:27,390
information and it wants to add a

00:07:25,950 --> 00:07:29,910
callback to verify that the email

00:07:27,390 --> 00:07:32,580
address was valid so in this case login

00:07:29,910 --> 00:07:34,800
toboggan will implement hook form alter

00:07:32,580 --> 00:07:36,570
on the login form wait for that to be

00:07:34,800 --> 00:07:38,340
called modify the form to add the

00:07:36,570 --> 00:07:42,860
missing pieces that it wants to add and

00:07:38,340 --> 00:07:45,270
then send it back on its way open ID

00:07:42,860 --> 00:07:46,800
yeah it also responds links to add

00:07:45,270 --> 00:07:51,240
please it's a little known fact that

00:07:46,800 --> 00:07:52,890
open ID speaks small cats alright so

00:07:51,240 --> 00:07:57,420
that's the example of hooks that we are

00:07:52,890 --> 00:07:59,850
going to be using there's also an API as

00:07:57,420 --> 00:08:02,340
part of the framework there's a couple

00:07:59,850 --> 00:08:04,200
of examples of API functions within

00:08:02,340 --> 00:08:06,720
Drupal you can use the tee function to

00:08:04,200 --> 00:08:08,430
localize text so if you have a piece of

00:08:06,720 --> 00:08:09,990
text that you'd want to be translated in

00:08:08,430 --> 00:08:11,850
the user's language you'd pass it

00:08:09,990 --> 00:08:13,680
through the tee function it's not the

00:08:11,850 --> 00:08:16,140
only thing it does it also sanitizes the

00:08:13,680 --> 00:08:17,850
text to some extent so it's always a

00:08:16,140 --> 00:08:21,690
good idea to pass it to the tee function

00:08:17,850 --> 00:08:24,270
for future there are also things that

00:08:21,690 --> 00:08:25,440
allow you to hook there are hooks that

00:08:24,270 --> 00:08:26,670
are called when the tee function is

00:08:25,440 --> 00:08:28,620
called so that means that in the future

00:08:26,670 --> 00:08:29,910
should you ever want to modify all text

00:08:28,620 --> 00:08:32,160
that passes through the tee function

00:08:29,910 --> 00:08:36,720
you'll be able to catch that hook and

00:08:32,160 --> 00:08:38,820
modify that text so L is another

00:08:36,720 --> 00:08:41,220
function it sanitizes links and those

00:08:38,820 --> 00:08:44,670
aliases anybody familiar with the path

00:08:41,220 --> 00:08:46,980
auto module what that function module

00:08:44,670 --> 00:08:50,550
does is it takes nodes slash 26 and

00:08:46,980 --> 00:08:52,240
creates an alias and now that you know

00:08:50,550 --> 00:08:53,740
that there's a hook for menu you can

00:08:52,240 --> 00:08:58,629
get an idea of how that might come into

00:08:53,740 --> 00:09:00,459
play for loading them saving nodes

00:08:58,629 --> 00:09:03,809
there's no load and those save those

00:09:00,459 --> 00:09:09,129
works slightly different in v7 versus d6

00:09:03,809 --> 00:09:12,939
and Drupal doesn't encourage the export

00:09:09,129 --> 00:09:15,160
of HTML directly to pages you generally

00:09:12,939 --> 00:09:17,410
want to pass say list elements or a

00:09:15,160 --> 00:09:19,689
table function the table content or

00:09:17,410 --> 00:09:21,910
anything that needs to be structured

00:09:19,689 --> 00:09:25,149
through the theme function and there are

00:09:21,910 --> 00:09:27,339
sub functions for lists grid table etc

00:09:25,149 --> 00:09:30,459
the reason you'd want to do this is that

00:09:27,339 --> 00:09:32,259
it allows the theme layer to interpret

00:09:30,459 --> 00:09:36,790
that list any way it wants so we can

00:09:32,259 --> 00:09:38,649
create an accordion a drop-down list a

00:09:36,790 --> 00:09:40,420
slide-out it can do whatever wacky thing

00:09:38,649 --> 00:09:41,980
it needs to where you'd and you don't

00:09:40,420 --> 00:09:46,089
have to update any of your code to my

00:09:41,980 --> 00:09:48,369
benefit from that Drupal set message

00:09:46,089 --> 00:09:50,410
gives you those little pop-up messages

00:09:48,369 --> 00:09:51,910
that you see it will give you the notice

00:09:50,410 --> 00:09:55,360
warning or error messages that you see

00:09:51,910 --> 00:09:57,399
throughout the site and user load and

00:09:55,360 --> 00:10:00,100
user save allow you to load and save

00:09:57,399 --> 00:10:04,869
user accounts so you can change email

00:10:00,100 --> 00:10:06,249
addresses user names etc in terms of

00:10:04,869 --> 00:10:08,199
checking whether or not somebody has

00:10:06,249 --> 00:10:09,910
access to do this you guys are familiar

00:10:08,199 --> 00:10:11,529
with the role system within Drupal user

00:10:09,910 --> 00:10:13,240
access is a function that you pass a

00:10:11,529 --> 00:10:14,470
user and a permission or a role and

00:10:13,240 --> 00:10:18,850
it'll tell you whether or not that user

00:10:14,470 --> 00:10:19,959
has access there is a reason I'm going

00:10:18,850 --> 00:10:24,339
through these in particular we're going

00:10:19,959 --> 00:10:27,519
to be using them for creating forms

00:10:24,339 --> 00:10:29,679
Drupal again takes the ability to spit

00:10:27,519 --> 00:10:31,689
out HTML directly away from you you have

00:10:29,679 --> 00:10:33,339
to generate these nested form arrays

00:10:31,689 --> 00:10:35,259
I'll give you an example of one later

00:10:33,339 --> 00:10:38,350
the reason they do it with nested form

00:10:35,259 --> 00:10:40,540
or nested arrays is that when a form is

00:10:38,350 --> 00:10:43,209
generated several hooks get access to

00:10:40,540 --> 00:10:44,799
modify that form and so they can add an

00:10:43,209 --> 00:10:46,089
element to the array take elements out

00:10:44,799 --> 00:10:48,939
of the array or move things around

00:10:46,089 --> 00:10:51,689
before the function to before the form

00:10:48,939 --> 00:10:55,240
is finally displayed to the user it's a

00:10:51,689 --> 00:10:57,249
hash key is generated based on the

00:10:55,240 --> 00:10:59,679
elements that are present in the form

00:10:57,249 --> 00:11:02,339
and the reason they do that is that if

00:10:59,679 --> 00:11:04,779
the form has ever cross site posted or

00:11:02,339 --> 00:11:05,990
modified in the browser before being

00:11:04,779 --> 00:11:08,600
posted the hash

00:11:05,990 --> 00:11:12,140
fail little the formal fail so it's an

00:11:08,600 --> 00:11:15,230
allure of security so here's the

00:11:12,140 --> 00:11:17,450
obligatory structure diagram of how

00:11:15,230 --> 00:11:24,310
Drupal into various elements work

00:11:17,450 --> 00:11:26,899
together and here's an existing in core

00:11:24,310 --> 00:11:29,870
various controls provide their own hooks

00:11:26,899 --> 00:11:32,470
in addition to these so to get an idea

00:11:29,870 --> 00:11:35,540
of how many you have available to you

00:11:32,470 --> 00:11:38,260
lots if you want to see the full list

00:11:35,540 --> 00:11:40,670
you can try to go to this URL this

00:11:38,260 --> 00:11:44,209
presentation is available on prezi.com

00:11:40,670 --> 00:11:45,470
if you search for Drupal 6 rapid module

00:11:44,209 --> 00:11:49,100
development and the name of this

00:11:45,470 --> 00:11:50,959
conference it'll be there so let's go

00:11:49,100 --> 00:11:53,690
ahead and talk about how we build an

00:11:50,959 --> 00:11:55,490
example module what we're gonna do is

00:11:53,690 --> 00:11:58,880
we're gonna make a module that when you

00:11:55,490 --> 00:12:02,690
log in it will say hello username and

00:11:58,880 --> 00:12:04,550
we'll also create a block that says you

00:12:02,690 --> 00:12:07,700
have been logged in for X number of

00:12:04,550 --> 00:12:09,200
minutes and seconds and I'm sorry if I'm

00:12:07,700 --> 00:12:11,000
rushing through things I want to be able

00:12:09,200 --> 00:12:13,329
to do the actual module development and

00:12:11,000 --> 00:12:16,640
this presentation can go a little long

00:12:13,329 --> 00:12:19,070
alright so one of the things that we

00:12:16,640 --> 00:12:21,350
want to be able to do is we want to have

00:12:19,070 --> 00:12:22,760
a settings forum so that you can contain

00:12:21,350 --> 00:12:24,920
CH what message appears when the user

00:12:22,760 --> 00:12:27,230
logs in so we're going to have our

00:12:24,920 --> 00:12:28,640
settings for it I'd say admin slash

00:12:27,230 --> 00:12:31,730
settings slash hello

00:12:28,640 --> 00:12:33,709
in order to create the form that appears

00:12:31,730 --> 00:12:35,690
when you go to that URL we're going to

00:12:33,709 --> 00:12:40,880
create an implementation of the hook

00:12:35,690 --> 00:12:43,040
menu hook and we want to make sure that

00:12:40,880 --> 00:12:45,709
the person accessing that form has

00:12:43,040 --> 00:12:47,420
permission to do so so we're going to

00:12:45,709 --> 00:12:49,459
create a permission the way we do that

00:12:47,420 --> 00:12:53,000
is we create an instance of the hook

00:12:49,459 --> 00:12:54,260
perm permission or define the

00:12:53,000 --> 00:12:56,750
permissions that we want to be able to

00:12:54,260 --> 00:12:57,980
be accessible the user the administrator

00:12:56,750 --> 00:12:59,149
assigns those permissions and then

00:12:57,980 --> 00:13:03,770
they'll have access to those menu

00:12:59,149 --> 00:13:08,000
entries well user access that's how they

00:13:03,770 --> 00:13:11,180
would we would check it in codes so next

00:13:08,000 --> 00:13:13,370
up hook user given what you know about

00:13:11,180 --> 00:13:16,209
hook user why would we want to write an

00:13:13,370 --> 00:13:16,209
implementation of that

00:13:16,540 --> 00:13:24,800
not everybody wants this is the function

00:13:22,940 --> 00:13:27,050
that's called when somebody logs in so

00:13:24,800 --> 00:13:28,940
your implementation of hook user is

00:13:27,050 --> 00:13:31,100
going to be called when anybody logs in

00:13:28,940 --> 00:13:34,069
so when when it gets called you're going

00:13:31,100 --> 00:13:36,139
to say is this user supposed to receive

00:13:34,069 --> 00:13:38,300
this message and in our case everybody

00:13:36,139 --> 00:13:40,069
does we'll go ahead and do the Drupal

00:13:38,300 --> 00:13:49,370
set message from our implementation of

00:13:40,069 --> 00:13:50,930
hook user that's indicated here now I

00:13:49,370 --> 00:13:52,579
have said also that this module is going

00:13:50,930 --> 00:13:53,870
to create a block that displays the

00:13:52,579 --> 00:13:56,569
amount of time that you've been logged

00:13:53,870 --> 00:13:57,709
in we're how we're going to do that is

00:13:56,569 --> 00:13:59,779
we're going to use hook block in a

00:13:57,709 --> 00:14:02,959
number of different ways in Drupal 6 we

00:13:59,779 --> 00:14:05,269
would catch the info operation which

00:14:02,959 --> 00:14:08,000
tells Drupal how what blocks were

00:14:05,269 --> 00:14:09,620
creating and any of the metadata

00:14:08,000 --> 00:14:12,350
associated with it like a title a

00:14:09,620 --> 00:14:15,910
description whether or not to cache the

00:14:12,350 --> 00:14:18,589
results etc it will also catch the view

00:14:15,910 --> 00:14:19,970
operation and that's what happens when

00:14:18,589 --> 00:14:22,490
Drupal actually wants to display the

00:14:19,970 --> 00:14:23,930
block it calls your view callback now in

00:14:22,490 --> 00:14:25,519
Drupal 7 it's a little different you

00:14:23,930 --> 00:14:32,360
didn't put in two different hooks at the

00:14:25,519 --> 00:14:35,660
hook block info and hook block view this

00:14:32,360 --> 00:14:38,060
is a good time to talk about how data is

00:14:35,660 --> 00:14:40,639
passed around in Drupal there's a good

00:14:38,060 --> 00:14:42,410
mix of nested arrays and objects in

00:14:40,639 --> 00:14:44,870
Drupal 6 in Drupal 7 there's a lot more

00:14:42,410 --> 00:14:46,579
on the object side but they're generally

00:14:44,870 --> 00:14:49,910
large objects that are passed around by

00:14:46,579 --> 00:14:51,230
reference the former a form is passed as

00:14:49,910 --> 00:14:52,610
an array for the reasons I specified

00:14:51,230 --> 00:14:55,189
earlier it's going to be passed from one

00:14:52,610 --> 00:14:57,350
hook to another being modified so things

00:14:55,189 --> 00:14:59,839
like login toboggan can add their login

00:14:57,350 --> 00:15:02,899
with your email address open ID can add

00:14:59,839 --> 00:15:06,170
the little links at the bottom account

00:15:02,899 --> 00:15:08,059
is well user is the user object which

00:15:06,170 --> 00:15:10,879
contains the logged in user for this

00:15:08,059 --> 00:15:12,709
particular request it also contains if

00:15:10,879 --> 00:15:17,180
there's a Content profile usually no

00:15:12,709 --> 00:15:19,009
really the node fields related to it the

00:15:17,180 --> 00:15:20,410
time they were last logged in which is

00:15:19,009 --> 00:15:24,439
going to useful to us in this module

00:15:20,410 --> 00:15:26,300
there's also a convention that if you're

00:15:24,439 --> 00:15:28,130
modifying a user and it's not the active

00:15:26,300 --> 00:15:29,900
user that you use the account

00:15:28,130 --> 00:15:33,970
variable the reason you do that is just

00:15:29,900 --> 00:15:36,560
make the code easier to read and note is

00:15:33,970 --> 00:15:44,810
typically the active node and it's a

00:15:36,560 --> 00:15:47,450
large very large object oh alright so

00:15:44,810 --> 00:15:50,720
what is the bare necessities to actually

00:15:47,450 --> 00:15:53,660
creating a module there are two foot two

00:15:50,720 --> 00:15:55,220
files the name of your module about info

00:15:53,660 --> 00:15:57,860
and the name of your module dot module

00:15:55,220 --> 00:15:59,690
what Drupal does is it scans the site's

00:15:57,860 --> 00:16:02,690
directory recursively looking for dot

00:15:59,690 --> 00:16:03,950
info files it reads them and then based

00:16:02,690 --> 00:16:06,680
on the information contained in them

00:16:03,950 --> 00:16:10,400
displays those modules on your modules

00:16:06,680 --> 00:16:11,420
page so that really the bare necessity

00:16:10,400 --> 00:16:13,790
to have something show up on that

00:16:11,420 --> 00:16:16,580
modules page is the dot info file so

00:16:13,790 --> 00:16:19,790
what goes in the info file this is an

00:16:16,580 --> 00:16:21,890
example we have the name which is going

00:16:19,790 --> 00:16:23,960
to show up on your list in description

00:16:21,890 --> 00:16:25,580
that just appears directly below it the

00:16:23,960 --> 00:16:30,560
version of Drupal that this module is

00:16:25,580 --> 00:16:32,780
targeting the package is a you know how

00:16:30,560 --> 00:16:34,940
they're grouped according to purpose

00:16:32,780 --> 00:16:37,520
like we'll have UI and we'll have C CK

00:16:34,940 --> 00:16:38,990
etc that's what the package is and a

00:16:37,520 --> 00:16:40,670
little tip if you're doing the module

00:16:38,990 --> 00:16:42,410
development is to go ahead and start

00:16:40,670 --> 00:16:43,730
your package name with a Z so it'll

00:16:42,410 --> 00:16:47,140
float all the way to the bottom make it

00:16:43,730 --> 00:16:49,670
easier to find excuse me dependencies

00:16:47,140 --> 00:16:51,200
that's exactly what it sounds like if

00:16:49,670 --> 00:16:53,060
your module has requirements for other

00:16:51,200 --> 00:16:56,540
modules to be enabled you can specify

00:16:53,060 --> 00:17:00,620
them here and Drupal dis allow you to

00:16:56,540 --> 00:17:03,920
enable until these dependencies are met

00:17:00,620 --> 00:17:08,050
it also is instructional to drush 3 & 4

00:17:03,920 --> 00:17:11,270
to download those modules and request

00:17:08,050 --> 00:17:12,589
now the module dot module file is a lot

00:17:11,270 --> 00:17:15,080
more oh this is if you want more

00:17:12,589 --> 00:17:16,910
information about the info file the

00:17:15,080 --> 00:17:18,310
module dot module file contains a lot

00:17:16,910 --> 00:17:22,040
more information this is all of the

00:17:18,310 --> 00:17:24,230
actual module content and we're gonna go

00:17:22,040 --> 00:17:25,610
ahead and build that there are two other

00:17:24,230 --> 00:17:26,870
files that you probably don't have to

00:17:25,610 --> 00:17:29,060
concern yourself with and getting

00:17:26,870 --> 00:17:30,950
started there's a dot install file which

00:17:29,060 --> 00:17:33,080
read by default by Drupal when the

00:17:30,950 --> 00:17:34,430
module is first enabled the reason you'd

00:17:33,080 --> 00:17:36,470
have this in a separate file is they

00:17:34,430 --> 00:17:38,260
don't go enabling and disabling files or

00:17:36,470 --> 00:17:40,970
modules all the time and so it seems

00:17:38,260 --> 00:17:41,580
redundant to include that code so this

00:17:40,970 --> 00:17:43,170
is where you would

00:17:41,580 --> 00:17:46,110
set up your schema definitions for

00:17:43,170 --> 00:17:47,670
tables that you create or set up

00:17:46,110 --> 00:17:50,730
variables and delete variables when the

00:17:47,670 --> 00:17:52,710
module is uninstalled you would also put

00:17:50,730 --> 00:17:54,450
your messages to users for instructions

00:17:52,710 --> 00:17:57,660
on what to do after they've enabled the

00:17:54,450 --> 00:18:00,390
module here and dot IMC files are just

00:17:57,660 --> 00:18:05,040
includes that are loaded on demand so

00:18:00,390 --> 00:18:06,870
you would you would do Drupal I forget

00:18:05,040 --> 00:18:09,150
module load I can't return my call

00:18:06,870 --> 00:18:11,930
there's a API call that loads the

00:18:09,150 --> 00:18:15,450
include files on demand

00:18:11,930 --> 00:18:18,000
alright so the module development

00:18:15,450 --> 00:18:20,070
process is make sure you really need the

00:18:18,000 --> 00:18:22,140
module because it's not going to be a

00:18:20,070 --> 00:18:23,810
shorter process as you might think make

00:18:22,140 --> 00:18:26,490
sure somebody else didn't already do it

00:18:23,810 --> 00:18:28,770
research the hooks you need research the

00:18:26,490 --> 00:18:30,630
API calls and then see if another module

00:18:28,770 --> 00:18:31,860
can fulfill part of that responsibility

00:18:30,630 --> 00:18:34,440
for you so that you don't have to go all

00:18:31,860 --> 00:18:37,470
of them for yourself and lastly get

00:18:34,440 --> 00:18:41,850
started alright so now that you know

00:18:37,470 --> 00:18:44,040
roughly the framework you can get an

00:18:41,850 --> 00:18:46,650
idea of how these modules do their thing

00:18:44,040 --> 00:18:49,800
so for example automatic node tiles it

00:18:46,650 --> 00:18:51,600
caches the node the hook node and when a

00:18:49,800 --> 00:18:54,390
mote is saved it checks for whatever

00:18:51,600 --> 00:18:55,340
rules you set to change the title saves

00:18:54,390 --> 00:18:59,670
the node again

00:18:55,340 --> 00:19:01,950
captcha does a hook form alter response

00:18:59,670 --> 00:19:07,440
to that on a specific form ID and adds

00:19:01,950 --> 00:19:09,390
the captcha to it maybe block o that

00:19:07,440 --> 00:19:13,650
creates a menu a block out of a menu so

00:19:09,390 --> 00:19:15,840
you can see how that might be done if

00:19:13,650 --> 00:19:18,930
you are migrating modules from 6 to 7

00:19:15,840 --> 00:19:21,750
this is a useful URL I'll go ahead and

00:19:18,930 --> 00:19:25,820
mark that a little later and this is a

00:19:21,750 --> 00:19:27,960
module to check whether and I you are

00:19:25,820 --> 00:19:31,380
adhering to the conventions and

00:19:27,960 --> 00:19:33,500
standards of Drupal coding practices so

00:19:31,380 --> 00:19:36,150
coder I'll call you out on things like

00:19:33,500 --> 00:19:38,760
not using the T function or not using

00:19:36,150 --> 00:19:43,710
Drupal set message with clean text

00:19:38,760 --> 00:19:46,910
sanitize text all right let's go ahead

00:19:43,710 --> 00:19:46,910
and get started with the module

00:19:53,500 --> 00:19:56,820
get out of this

00:20:41,340 --> 00:20:45,660
all right so any of the modules you

00:20:44,370 --> 00:20:48,090
create you're gonna put them under the

00:20:45,660 --> 00:20:50,820
sites all modules folder there's a

00:20:48,090 --> 00:20:52,380
useful convention to put contribute

00:20:50,820 --> 00:20:54,510
folder and your custom modules in the

00:20:52,380 --> 00:20:56,400
custom logic folder Drupal will still

00:20:54,510 --> 00:20:58,230
find them wherever they are but the

00:20:56,400 --> 00:20:59,400
advantage of separating them out is that

00:20:58,230 --> 00:21:00,780
it's a much easier to find them when

00:20:59,400 --> 00:21:04,860
you're trying to fix something that's

00:21:00,780 --> 00:21:09,110
bringing the site down all right so

00:21:04,860 --> 00:21:09,110
we're going to create our hello module

00:21:12,230 --> 00:21:23,520
you know what I think I'm actually just

00:21:14,700 --> 00:21:25,940
going to start from built and walk you

00:21:23,520 --> 00:21:25,940
through it

00:21:39,740 --> 00:21:42,460
oops

00:21:48,070 --> 00:21:51,330
so the first thing we'll do

00:22:04,480 --> 00:22:08,850
we're just going to create a module

00:22:05,740 --> 00:22:08,850
called hello Drupal

00:22:20,680 --> 00:22:23,970
and it won't show up

00:22:46,850 --> 00:22:49,960
that's awkward

00:22:55,810 --> 00:22:59,880
i dname package description

00:23:05,750 --> 00:23:18,460
it's one of those things that works

00:23:07,250 --> 00:23:18,460
until you demo it weird okay

00:23:33,000 --> 00:23:37,460
so anybody catch the latest episode of

00:23:34,799 --> 00:23:37,460
Walking Dead

00:23:55,360 --> 00:24:00,710
that's a that's a one of those shows

00:23:57,679 --> 00:24:03,860
that catches you by surprise I'm not

00:24:00,710 --> 00:24:06,489
sure what I did wrong there the module

00:24:03,860 --> 00:24:06,489
shows up now

00:24:11,780 --> 00:24:16,040
so we have it under the name of hello

00:24:13,670 --> 00:24:18,110
Drupal description demonstration module

00:24:16,040 --> 00:24:20,330
for a few hooks and the package we're

00:24:18,110 --> 00:24:23,840
using zze drupal summit for the reasons

00:24:20,330 --> 00:24:26,720
I said before so here it goes it shows

00:24:23,840 --> 00:24:29,480
up on the module listing page there's

00:24:26,720 --> 00:24:31,100
our name there's our description I have

00:24:29,480 --> 00:24:32,570
the coder module in vault installed so

00:24:31,100 --> 00:24:34,850
it gives me the opportunity to do a code

00:24:32,570 --> 00:24:37,190
review on it

00:24:34,850 --> 00:24:39,760
I'm not going to enable it just yet I'll

00:24:37,190 --> 00:24:39,760
see here

00:24:51,519 --> 00:25:05,659
anybody know a color scheme that's not

00:24:53,629 --> 00:25:08,710
so hard to read anybody know a vim color

00:25:05,659 --> 00:25:08,710
scheme that's not hard to read

00:25:19,680 --> 00:25:22,680
morning

00:25:28,360 --> 00:25:33,730
there's that easier to read all right so

00:25:31,510 --> 00:25:35,710
here's an example of a hook that we're

00:25:33,730 --> 00:25:37,690
creating an instance for the enable hook

00:25:35,710 --> 00:25:40,360
the first time you enable your your

00:25:37,690 --> 00:25:43,510
function or your module it's going to

00:25:40,360 --> 00:25:45,490
call hook enable and in that module it

00:25:43,510 --> 00:25:47,620
knows which hooks to call because your

00:25:45,490 --> 00:25:50,380
module is named hello and so it's just

00:25:47,620 --> 00:25:52,539
looking for hello underscore enable so

00:25:50,380 --> 00:25:54,039
in this case once I enable the module I

00:25:52,539 --> 00:25:57,010
want a message to pop up saying don't

00:25:54,039 --> 00:26:01,710
forget to place the block let's go ahead

00:25:57,010 --> 00:26:01,710
and do the same module

00:26:10,340 --> 00:26:14,690
all right so let's go ahead and enable

00:26:12,420 --> 00:26:14,690
it

00:26:24,389 --> 00:26:28,450
so there's our message that popped up

00:26:26,559 --> 00:26:30,309
the first time we enabled the module if

00:26:28,450 --> 00:26:36,309
I disable and enable the module again

00:26:30,309 --> 00:26:37,840
it'll pop up again so now I'll go ahead

00:26:36,309 --> 00:26:41,679
and look at our implementation of hook

00:26:37,840 --> 00:26:43,000
menu again Drupal when it first enables

00:26:41,679 --> 00:26:46,330
a module and every time you visit the

00:26:43,000 --> 00:26:48,940
modules page will scan the dot module

00:26:46,330 --> 00:26:50,380
files looking for hooks of interest one

00:26:48,940 --> 00:26:52,539
of those hooks of interest is menu

00:26:50,380 --> 00:26:54,070
another one who's blocked and what it's

00:26:52,539 --> 00:26:56,590
trying to do is it's trying to rebuild

00:26:54,070 --> 00:26:58,450
the menu registry so in this case we're

00:26:56,590 --> 00:27:00,909
interested in responding to admin slash

00:26:58,450 --> 00:27:03,250
settings slash hello when we get a

00:27:00,909 --> 00:27:07,630
request for that URL we want to call our

00:27:03,250 --> 00:27:09,549
our forum to be generated so in this

00:27:07,630 --> 00:27:14,110
case we have a forum generation function

00:27:09,549 --> 00:27:15,340
called hello settings page so it'll give

00:27:14,110 --> 00:27:21,130
you an example of that

00:27:15,340 --> 00:27:23,440
nasty form array this is a our forum

00:27:21,130 --> 00:27:25,659
generation function we just create a

00:27:23,440 --> 00:27:27,370
blank array initialize it than nothing

00:27:25,659 --> 00:27:29,649
this will be the variable that's going

00:27:27,370 --> 00:27:31,679
to be stored in the variables table this

00:27:29,649 --> 00:27:34,000
is a description of the field element

00:27:31,679 --> 00:27:35,289
default value whether or not it's

00:27:34,000 --> 00:27:37,179
required and the rest of this should be

00:27:35,289 --> 00:27:39,429
straightforward there is a form API page

00:27:37,179 --> 00:27:42,460
for details on what those Darr in

00:27:39,429 --> 00:27:44,200
particular this return system settings

00:27:42,460 --> 00:27:46,840
form this is a special function in

00:27:44,200 --> 00:27:48,549
Drupal 4 settings pages it takes care of

00:27:46,840 --> 00:27:50,440
a lot of the work that you'd normally do

00:27:48,549 --> 00:27:52,149
to process a form and saves these

00:27:50,440 --> 00:27:53,559
functions in the variables table for you

00:27:52,149 --> 00:27:56,620
so you don't have to do anything special

00:27:53,559 --> 00:27:59,350
to get the information back out so what

00:27:56,620 --> 00:28:02,130
have we use for our URL and then

00:27:59,350 --> 00:28:02,130
settings hello

00:28:05,470 --> 00:28:14,250
so there's our forum we have a welcome

00:28:10,539 --> 00:28:14,250
back hello like that's not right

00:28:16,470 --> 00:28:22,450
we'd like it to say welcome message this

00:28:20,440 --> 00:28:23,350
is the description and this is the

00:28:22,450 --> 00:28:25,899
default text

00:28:23,350 --> 00:28:28,090
hello use your payment there's the title

00:28:25,899 --> 00:28:37,860
default blah blah blah you just getting

00:28:28,090 --> 00:28:37,860
the idea there all right now

00:28:49,510 --> 00:28:56,380
hello admin welcome back so let's go

00:28:53,950 --> 00:28:58,830
ahead and go through this module to

00:28:56,380 --> 00:29:03,760
figure out how that's all accomplished

00:28:58,830 --> 00:29:07,330
we have a inflammation of the user hook

00:29:03,760 --> 00:29:09,130
so when the user logs in I check the

00:29:07,330 --> 00:29:11,770
operation to make sure that it's a login

00:29:09,130 --> 00:29:13,900
because again in v6 this this function

00:29:11,770 --> 00:29:17,230
is called for login logout delete create

00:29:13,900 --> 00:29:19,450
so check to make sure it's a login if it

00:29:17,230 --> 00:29:20,740
is then I get the variable out of the

00:29:19,450 --> 00:29:22,540
variables table that we saved at our

00:29:20,740 --> 00:29:25,870
settings page and if there's not one I

00:29:22,540 --> 00:29:29,230
have a default of hello username I

00:29:25,870 --> 00:29:31,480
replace my sudo token this is just PHP

00:29:29,230 --> 00:29:33,790
for string replacement and then I do a

00:29:31,480 --> 00:29:37,900
triple set message and exit out of the

00:29:33,790 --> 00:29:40,750
function does that make sense yeah all

00:29:37,900 --> 00:29:43,030
right so we want to go that step further

00:29:40,750 --> 00:29:45,250
and make sure that the nobody except a

00:29:43,030 --> 00:29:51,460
user with appropriate permissions has

00:29:45,250 --> 00:29:54,520
access to this page the way that we'll

00:29:51,460 --> 00:29:56,740
do that is we'll define a permission so

00:29:54,520 --> 00:29:58,000
here's that hook perm this is called by

00:29:56,740 --> 00:30:00,460
Drupal when it degenerates the

00:29:58,000 --> 00:30:04,080
permissions table we define a permission

00:30:00,460 --> 00:30:04,080
called access hello module settings

00:30:11,669 --> 00:30:18,320
and there's our permission we can now

00:30:15,240 --> 00:30:19,440
assign that to users to roles and

00:30:18,320 --> 00:30:21,210
accordingly

00:30:19,440 --> 00:30:22,860
so then we can assign the roles back to

00:30:21,210 --> 00:30:24,450
the users so now we have full control

00:30:22,860 --> 00:30:26,820
over who has access to that settings

00:30:24,450 --> 00:30:30,890
page at least within the permissions

00:30:26,820 --> 00:30:33,660
table when you actually get to the forum

00:30:30,890 --> 00:30:36,059
we have these access arguments in the

00:30:33,660 --> 00:30:40,679
menu saying that only people who pass

00:30:36,059 --> 00:30:43,049
the access check will have access to

00:30:40,679 --> 00:30:45,450
with this permission we'll have access

00:30:43,049 --> 00:30:48,450
to this menu entry so if they don't pass

00:30:45,450 --> 00:30:49,830
this access check that menu entry won't

00:30:48,450 --> 00:30:53,250
even show up they won't have the ability

00:30:49,830 --> 00:30:58,080
to access it'll show four oh four three

00:30:53,250 --> 00:30:59,910
is forbidden so we also talked about

00:30:58,080 --> 00:31:01,080
creating a block that showed the amount

00:30:59,910 --> 00:31:08,660
of time that they've actually been

00:31:01,080 --> 00:31:08,660
logged in so that the blocks page

00:31:11,720 --> 00:31:16,790
and here's our block that we created

00:31:13,490 --> 00:31:22,430
just go ahead and put it in the left

00:31:16,790 --> 00:31:24,470
sidebar on the top here you've been

00:31:22,430 --> 00:31:29,240
logged you logged in two minutes and 33

00:31:24,470 --> 00:31:31,550
seconds ago so we do that using the

00:31:29,240 --> 00:31:35,180
another hook implementation in this case

00:31:31,550 --> 00:31:40,040
block we're gonna catch the operations

00:31:35,180 --> 00:31:42,170
for list and for view list is the

00:31:40,040 --> 00:31:43,580
operation that tells rupal which blocks

00:31:42,170 --> 00:31:45,170
you're going to be generating for

00:31:43,580 --> 00:31:45,380
display and gives you information about

00:31:45,170 --> 00:31:46,610
them

00:31:45,380 --> 00:31:49,450
this is the information that's used to

00:31:46,610 --> 00:31:54,380
generate that block listing page view as

00:31:49,450 --> 00:31:58,190
actually displays the block the Delta is

00:31:54,380 --> 00:31:59,870
a key that you use and you can generate

00:31:58,190 --> 00:32:02,690
anything use anything you like for the

00:31:59,870 --> 00:32:04,160
key can be text numbers numerical etc so

00:32:02,690 --> 00:32:05,930
that if your module creates more than

00:32:04,160 --> 00:32:09,020
one block you can bring up the

00:32:05,930 --> 00:32:12,710
appropriate block accordingly so I use

00:32:09,020 --> 00:32:14,480
hello welcome as the key and then I call

00:32:12,710 --> 00:32:18,620
a function to populate the contents of

00:32:14,480 --> 00:32:21,410
it and you see that will use that global

00:32:18,620 --> 00:32:23,300
user object to find out when the user

00:32:21,410 --> 00:32:25,520
logged in last that's a unix time so we

00:32:23,300 --> 00:32:27,380
format use an api call the format the

00:32:25,520 --> 00:32:29,330
interval so that it looks pretty and we

00:32:27,380 --> 00:32:32,650
return the text that's going to appear

00:32:29,330 --> 00:32:36,080
in the block all right

00:32:32,650 --> 00:32:37,880
that is the Drupal six module I have a

00:32:36,080 --> 00:32:39,230
Drupal 7 module I'll go through next

00:32:37,880 --> 00:32:42,710
unless you guys want to stop and go

00:32:39,230 --> 00:32:46,420
through how the pieces fit together

00:32:42,710 --> 00:32:49,570
again does anybody have any questions

00:32:46,420 --> 00:32:49,570
all right

00:33:20,840 --> 00:33:24,380
all right so the menu function works

00:33:22,970 --> 00:33:26,419
exactly the same way as it did before

00:33:24,380 --> 00:33:28,370
nothing's changed between d6 and seven

00:33:26,419 --> 00:33:29,990
here we've pulled the info section out

00:33:28,370 --> 00:33:33,710
of that hook block and now it's its own

00:33:29,990 --> 00:33:35,750
function block view now that's its own

00:33:33,710 --> 00:33:40,070
function we still rely on the Delta to

00:33:35,750 --> 00:33:42,200
know which block we're delivering it's

00:33:40,070 --> 00:33:43,640
no longer hook user now it's user login

00:33:42,200 --> 00:33:46,370
because we only care about the login

00:33:43,640 --> 00:33:47,480
operation the permissions work the same

00:33:46,370 --> 00:33:49,340
except that we now have the opportunity

00:33:47,480 --> 00:33:51,890
to define a description of the

00:33:49,340 --> 00:33:54,950
permission that will appear in place of

00:33:51,890 --> 00:33:57,679
and/or in addition to the title or the

00:33:54,950 --> 00:34:01,490
permission name itself and the settings

00:33:57,679 --> 00:34:03,440
page works exactly the same so the

00:34:01,490 --> 00:34:06,500
generation of the Drupal seven module

00:34:03,440 --> 00:34:08,060
from the Dukla six in this case was

00:34:06,500 --> 00:34:09,409
relatively straightforward you can

00:34:08,060 --> 00:34:11,929
actually get the coder module to do it

00:34:09,409 --> 00:34:13,310
for you because it'll recognize things

00:34:11,929 --> 00:34:15,290
like the switches that he used to

00:34:13,310 --> 00:34:17,389
specify which operations are acting on

00:34:15,290 --> 00:34:19,369
and it'll pull them out for you so if

00:34:17,389 --> 00:34:23,109
you're migrating the d6 to d7 module

00:34:19,369 --> 00:34:29,629
start with the coder system alright so

00:34:23,109 --> 00:34:31,280
we talked about we talked about the

00:34:29,629 --> 00:34:32,690
framework we talked about the hook

00:34:31,280 --> 00:34:33,980
system and then we showed you an

00:34:32,690 --> 00:34:36,820
implementation of how the hooks work

00:34:33,980 --> 00:34:36,820
could fit together

00:34:52,730 --> 00:34:57,250
I wanted to go to that last page about

00:34:54,710 --> 00:34:57,250
the modules

00:35:02,410 --> 00:35:06,150
should I just come backwards from the

00:35:03,910 --> 00:35:06,150
first

00:35:15,230 --> 00:35:21,240
all right so for men you block does

00:35:19,320 --> 00:35:22,200
anybody have any idea how we would put

00:35:21,240 --> 00:35:27,180
that together if we were to implement

00:35:22,200 --> 00:35:29,390
something like that any hooks that you

00:35:27,180 --> 00:35:31,920
would implement and create a menu block

00:35:29,390 --> 00:35:33,990
so what menu block does as a module is

00:35:31,920 --> 00:35:37,890
that it takes a menu that exists in the

00:35:33,990 --> 00:35:41,610
system and it formats it as a nested

00:35:37,890 --> 00:35:45,570
array all right it's a nested Li tag and

00:35:41,610 --> 00:35:48,440
then spits it out as a block so there's

00:35:45,570 --> 00:35:51,780
at least one hook that suggests itself

00:35:48,440 --> 00:35:53,160
yeah hook block yeah and then you'd use

00:35:51,780 --> 00:35:54,630
the framework to pull out the menu

00:35:53,160 --> 00:35:58,770
entries for the particular menu of

00:35:54,630 --> 00:36:00,600
interest CAPTCHA I briefly mentioned it

00:35:58,770 --> 00:36:03,690
that's hook form alter and what that

00:36:00,600 --> 00:36:06,150
does is you can get the form ID for any

00:36:03,690 --> 00:36:08,550
form on the website and create a form

00:36:06,150 --> 00:36:11,160
alter function for it you implement the

00:36:08,550 --> 00:36:13,800
callback for it so that you can modify

00:36:11,160 --> 00:36:15,960
it an example of something that I use

00:36:13,800 --> 00:36:20,070
frequently for hook form alter is the

00:36:15,960 --> 00:36:24,090
login blocks on Drupal will allow the

00:36:20,070 --> 00:36:26,220
saving of login credentials and that

00:36:24,090 --> 00:36:29,970
apparently is a PCI compliance issue so

00:36:26,220 --> 00:36:31,920
you have to add the no Save tag whatever

00:36:29,970 --> 00:36:34,710
it has to be so you can use hook form

00:36:31,920 --> 00:36:36,750
alter to modify the login form so that

00:36:34,710 --> 00:36:38,040
you can be PCI compliant instead of

00:36:36,750 --> 00:36:39,270
having a modify template files

00:36:38,040 --> 00:36:41,130
throughout the site and then if somebody

00:36:39,270 --> 00:36:44,490
changes the theme you're starting from

00:36:41,130 --> 00:36:46,080
square one another example of hook form

00:36:44,490 --> 00:36:49,080
alter that you might need to say that

00:36:46,080 --> 00:36:52,830
you have a content type that has fields

00:36:49,080 --> 00:36:55,050
that are generally available but one or

00:36:52,830 --> 00:36:56,430
two fields that you don't want users of

00:36:55,050 --> 00:36:58,080
a certain troll that have access to

00:36:56,430 --> 00:36:59,760
there is a module called content

00:36:58,080 --> 00:37:01,680
permissions but I consider that to be a

00:36:59,760 --> 00:37:03,300
little heavy and unwieldy for something

00:37:01,680 --> 00:37:05,310
as simple as hiding one or two fields

00:37:03,300 --> 00:37:08,030
hook form alter allow you to set those

00:37:05,310 --> 00:37:11,610
fields as invisible on a per roll basis

00:37:08,030 --> 00:37:14,520
relatively straightforward another use

00:37:11,610 --> 00:37:18,510
for hook form alter is adding a widget

00:37:14,520 --> 00:37:20,940
say that you want your integer fields to

00:37:18,510 --> 00:37:22,710
show up as a slider you can add HTML

00:37:20,940 --> 00:37:24,780
markup it will pop up right afterwards

00:37:22,710 --> 00:37:25,680
and that way you can do it in code

00:37:24,780 --> 00:37:27,330
rather than a theme

00:37:25,680 --> 00:37:30,870
so that it again if they change the

00:37:27,330 --> 00:37:33,810
theme yours your content goes with it

00:37:30,870 --> 00:37:35,580
hook user that's if you want to keep

00:37:33,810 --> 00:37:37,440
track of when somebody temps to change

00:37:35,580 --> 00:37:39,480
their login change passwords and you

00:37:37,440 --> 00:37:41,430
want to impose restrictions on how often

00:37:39,480 --> 00:37:42,810
they can do that if you want to impose

00:37:41,430 --> 00:37:44,730
restrictions on how long they've gone

00:37:42,810 --> 00:37:47,250
without changing their password hook

00:37:44,730 --> 00:37:51,350
user you can just respond to on login or

00:37:47,250 --> 00:37:53,880
logout and post messages or send emails

00:37:51,350 --> 00:37:55,380
at every step in the process at the

00:37:53,880 --> 00:37:57,420
various things that Drupal does and I'll

00:37:55,380 --> 00:38:00,120
say for example sending out an email

00:37:57,420 --> 00:38:02,820
when an email is generated if you use

00:38:00,120 --> 00:38:06,300
the Drupal mail function every module

00:38:02,820 --> 00:38:08,340
that implements the hook mail callback

00:38:06,300 --> 00:38:13,770
has an opportunity to modify that mail

00:38:08,340 --> 00:38:15,960
before it gets sent out so the in

00:38:13,770 --> 00:38:17,640
general if you find that there's a part

00:38:15,960 --> 00:38:19,590
of the website that you want to modify

00:38:17,640 --> 00:38:23,730
before it gets seen by the user there's

00:38:19,590 --> 00:38:28,010
a hook for that that's a common Drupal

00:38:23,730 --> 00:38:30,870
developer mantra there's a hook for that

00:38:28,010 --> 00:38:33,120
some controls provide their own hooks

00:38:30,870 --> 00:38:35,970
CCK provides a number of hooks Muse

00:38:33,120 --> 00:38:37,590
provides a number of hooks that allow

00:38:35,970 --> 00:38:39,570
you to modify the view before it gets

00:38:37,590 --> 00:38:42,330
presented to the user an example of a

00:38:39,570 --> 00:38:45,390
hook that you might use for views is

00:38:42,330 --> 00:38:46,950
that you might want to do some

00:38:45,390 --> 00:38:48,510
operations on the argument before it

00:38:46,950 --> 00:38:50,430
gets passed into the view or you might

00:38:48,510 --> 00:38:52,800
want to hide or show filters dependent

00:38:50,430 --> 00:38:57,620
upon the context there are other ways to

00:38:52,800 --> 00:38:59,900
do that but that's not an example use

00:38:57,620 --> 00:39:02,130
let's see what else is there

00:38:59,900 --> 00:39:03,750
automatic hood titles I think I hinted

00:39:02,130 --> 00:39:05,580
it how that was done before does anybody

00:39:03,750 --> 00:39:10,500
have a concept of how we might have done

00:39:05,580 --> 00:39:12,990
that which hook who might use it would

00:39:10,500 --> 00:39:14,850
be in Drupal six it would be hook node

00:39:12,990 --> 00:39:18,120
API and Drupal seven of the hook node

00:39:14,850 --> 00:39:23,730
load and you use no load no safe to

00:39:18,120 --> 00:39:25,560
modify the so any questions about

00:39:23,730 --> 00:39:26,790
details in particular and can I show

00:39:25,560 --> 00:39:32,070
some example of something you'd like to

00:39:26,790 --> 00:39:33,660
see because if there's something that

00:39:32,070 --> 00:39:36,410
you'd like me to add to the module I can

00:39:33,660 --> 00:39:36,410
do that really quickly

00:39:53,010 --> 00:40:01,420
you yeah there is a module called fuel

00:39:59,140 --> 00:40:03,790
permissions and that is what it does I

00:40:01,420 --> 00:40:05,860
find that much a little unwieldy because

00:40:03,790 --> 00:40:07,630
when you enable it you have to control

00:40:05,860 --> 00:40:10,600
every field that you create for every

00:40:07,630 --> 00:40:12,880
content type and so it's you know you

00:40:10,600 --> 00:40:13,600
can do the same thing with a node load

00:40:12,880 --> 00:40:16,420
or node

00:40:13,600 --> 00:40:18,070
I think it's preview so that you can

00:40:16,420 --> 00:40:19,840
modify what's in the node before it's

00:40:18,070 --> 00:40:21,280
presented to the theme layer as long as

00:40:19,840 --> 00:40:22,570
you've got access to it before it's sent

00:40:21,280 --> 00:40:25,480
to the theme layer you can control what

00:40:22,570 --> 00:40:27,640
the user sees and you can use that user

00:40:25,480 --> 00:40:29,020
access framework API call to find out

00:40:27,640 --> 00:40:30,250
whether or not they have the permissions

00:40:29,020 --> 00:40:33,640
and you can generate your own

00:40:30,250 --> 00:40:36,040
permissions using that hook perm so say

00:40:33,640 --> 00:40:38,080
that you wanted to limit access to these

00:40:36,040 --> 00:40:39,850
three fields based on a certain

00:40:38,080 --> 00:40:41,560
combination of those three fields over

00:40:39,850 --> 00:40:43,660
those three permissions you need to

00:40:41,560 --> 00:40:45,310
create a callback for hook perm to find

00:40:43,660 --> 00:40:47,020
the three permissions of interest you

00:40:45,310 --> 00:40:49,500
create a hook node load or hook node

00:40:47,020 --> 00:40:52,270
preview I think it is and you would

00:40:49,500 --> 00:40:53,410
check the node and check the content

00:40:52,270 --> 00:40:55,600
type to make sure it was the content

00:40:53,410 --> 00:40:57,130
type of interest check the users access

00:40:55,600 --> 00:40:59,740
levels dependent based on your

00:40:57,130 --> 00:41:02,430
particular user logic and then either

00:40:59,740 --> 00:41:05,410
remove those variables from the array or

00:41:02,430 --> 00:41:07,120
put them somewhere else yeah or you

00:41:05,410 --> 00:41:08,770
might replace them with content sayings

00:41:07,120 --> 00:41:10,660
such as you don't have access to view

00:41:08,770 --> 00:41:12,220
this now whether or not it's the correct

00:41:10,660 --> 00:41:15,610
way to do it depends on your use case

00:41:12,220 --> 00:41:17,790
but yeah anybody else with a particular

00:41:15,610 --> 00:41:17,790
need

00:41:20,630 --> 00:41:26,390
well there are a lot of gotchas when it

00:41:23,810 --> 00:41:30,490
comes to module development as I said

00:41:26,390 --> 00:41:36,860
the the user

00:41:30,490 --> 00:41:39,020
global object or usual array is is the

00:41:36,860 --> 00:41:41,480
active user so if you modify the you

00:41:39,020 --> 00:41:43,820
would of the user object and say if I

00:41:41,480 --> 00:41:46,460
did a global user down here and then

00:41:43,820 --> 00:41:48,830
I've set user - ID equals one suddenly

00:41:46,460 --> 00:41:51,890
that user has an admin privileges from

00:41:48,830 --> 00:41:56,420
that point forward because well for that

00:41:51,890 --> 00:41:57,560
request so that's why I can by

00:41:56,420 --> 00:41:59,210
convention if you're going to be about

00:41:57,560 --> 00:42:01,640
doing modifications to a user account

00:41:59,210 --> 00:42:04,010
you want to copy the user to clone the

00:42:01,640 --> 00:42:05,630
user into a variable called account make

00:42:04,010 --> 00:42:13,040
your modifications and then do a node

00:42:05,630 --> 00:42:14,930
user save on it and when you're doing

00:42:13,040 --> 00:42:17,570
module development a very useful module

00:42:14,930 --> 00:42:19,910
is called the Vil what de velas you to

00:42:17,570 --> 00:42:21,050
do is it provides to two or three

00:42:19,910 --> 00:42:23,150
functions one of them one of the most

00:42:21,050 --> 00:42:25,550
useful is DPM which is basically a

00:42:23,150 --> 00:42:27,170
pretty print for function for variables

00:42:25,550 --> 00:42:31,180
it'll print the objects out and it'll

00:42:27,170 --> 00:42:31,180
print the and in fact I'll show ya

00:42:36,930 --> 00:42:44,970
no this is gonna crash right now because

00:42:40,570 --> 00:42:44,970
DPM is not in her development enabled

00:43:07,710 --> 00:43:15,859
so I'm gonna bed and download the devel

00:43:09,420 --> 00:43:15,859
module go ahead and enable it

00:43:24,650 --> 00:43:27,610
it's enabled yet

00:43:30,330 --> 00:43:43,940
that block is probably set to cash nope

00:43:35,550 --> 00:43:43,940
Oh silly me I'm in the d7 folder

00:44:09,299 --> 00:44:13,450
so dpi mellitus print out the variables

00:44:12,400 --> 00:44:14,920
while you're working on them give you a

00:44:13,450 --> 00:44:16,270
good idea of what's in them this is a

00:44:14,920 --> 00:44:21,880
good idea to do because then you can see

00:44:16,270 --> 00:44:23,049
how the user object looks I have to

00:44:21,880 --> 00:44:25,589
download developer game because it was

00:44:23,049 --> 00:44:25,589
on the wrong site

00:44:47,200 --> 00:44:51,630
let's just determine not to let me do

00:44:49,090 --> 00:44:51,630
that isn't it

00:44:57,110 --> 00:45:02,020
oh that's for login wrong please

00:45:06,690 --> 00:45:13,890
so here's an example of the user object

00:45:09,750 --> 00:45:15,240
for admin okay you get access to the you

00:45:13,890 --> 00:45:17,340
would of the user the name of the user

00:45:15,240 --> 00:45:18,840
this is the hashed pass that's actually

00:45:17,340 --> 00:45:20,550
stored in the database their email

00:45:18,840 --> 00:45:25,020
address you see all of this information

00:45:20,550 --> 00:45:27,030
might be useful for generating logic to

00:45:25,020 --> 00:45:30,780
model work based on the user who's

00:45:27,030 --> 00:45:32,880
logged in this data field is actually

00:45:30,780 --> 00:45:37,140
for storage of serialized data of your

00:45:32,880 --> 00:45:39,660
own discretion it's not generally used

00:45:37,140 --> 00:45:43,160
because if you were to fill that out it

00:45:39,660 --> 00:45:46,650
would slow the the user indexing down

00:45:43,160 --> 00:45:48,900
this login time is the time that we live

00:45:46,650 --> 00:45:55,200
in and that's what we use for the block

00:45:48,900 --> 00:45:56,910
over here so in addition to devel you

00:45:55,200 --> 00:46:00,690
recall that I had to generate that form

00:45:56,910 --> 00:46:02,370
array well this form array if you're

00:46:00,690 --> 00:46:04,080
building a large form can quickly become

00:46:02,370 --> 00:46:06,210
kind of cumbersome for example right

00:46:04,080 --> 00:46:08,850
here we're building a single field and

00:46:06,210 --> 00:46:10,530
it's what is that ten lines of code if

00:46:08,850 --> 00:46:14,340
you want to generate anything resembling

00:46:10,530 --> 00:46:17,100
a large a decent size form you're gonna

00:46:14,340 --> 00:46:19,440
be putting in fifteen field elements

00:46:17,100 --> 00:46:21,660
it's about 120 lines of code just to

00:46:19,440 --> 00:46:31,560
spit out a form there is a module

00:46:21,660 --> 00:46:34,130
available form builder so if you enable

00:46:31,560 --> 00:46:36,540
the form builder module it gives you a

00:46:34,130 --> 00:46:38,250
display like this that allows you to

00:46:36,540 --> 00:46:39,990
drive and drop and create the form when

00:46:38,250 --> 00:46:42,510
you're done you click export Misfits out

00:46:39,990 --> 00:46:46,590
the PHP that you would need to generate

00:46:42,510 --> 00:46:48,630
this that's in the rapid module

00:46:46,590 --> 00:46:50,580
development side of things now the

00:46:48,630 --> 00:46:52,380
another thing that speeds things up is

00:46:50,580 --> 00:46:54,690
if your module defines a content type

00:46:52,380 --> 00:46:58,170
generates any views creates permissions

00:46:54,690 --> 00:47:00,930
English cache profiles and these are all

00:46:58,170 --> 00:47:02,910
things that tend to go with you writing

00:47:00,930 --> 00:47:04,890
the code to create all that is rather

00:47:02,910 --> 00:47:06,840
cumbersome and error-prone so the faster

00:47:04,890 --> 00:47:08,430
way to do it is to use features so you

00:47:06,840 --> 00:47:09,990
would enable the features module collect

00:47:08,430 --> 00:47:12,870
all of the exportable content that's

00:47:09,990 --> 00:47:14,670
related to your module generate the

00:47:12,870 --> 00:47:17,010
feature download it create an include

00:47:14,670 --> 00:47:17,850
file for your code and then add the line

00:47:17,010 --> 00:47:19,410
to include the

00:47:17,850 --> 00:47:21,810
included now that would give you the

00:47:19,410 --> 00:47:23,400
opportunity to leverage everything

00:47:21,810 --> 00:47:25,140
features brings to the table which is to

00:47:23,400 --> 00:47:26,610
say if you need to make a quick change

00:47:25,140 --> 00:47:29,130
to a view you just do it through the

00:47:26,610 --> 00:47:31,650
pull the lever method re-roll the

00:47:29,130 --> 00:47:34,590
feature and re-include your include file

00:47:31,650 --> 00:47:36,480
and you don't have to worry about

00:47:34,590 --> 00:47:41,310
whether or not you miss the semicolon in

00:47:36,480 --> 00:47:47,820
the content type import what else is

00:47:41,310 --> 00:47:50,430
there anything else well I was a little

00:47:47,820 --> 00:47:55,560
faster than I expected I should have

00:47:50,430 --> 00:47:56,990
taken more time well see is there

00:47:55,560 --> 00:48:09,600
anything else you guys want to do

00:47:56,990 --> 00:48:11,070
content the site for reference that

00:48:09,600 --> 00:48:15,540
you'll be using his API that drupal.org

00:48:11,070 --> 00:48:18,960
or Drupal contribute and defaults to

00:48:15,540 --> 00:48:20,580
seven enemy but if you wanted to look up

00:48:18,960 --> 00:48:23,130
a function for example the L function

00:48:20,580 --> 00:48:24,630
that wraps the links gives you the

00:48:23,130 --> 00:48:31,980
parameters and arguments for return

00:48:24,630 --> 00:48:33,690
values you need good alright then well

00:48:31,980 --> 00:48:38,400
then I finished you guys have some time

00:48:33,690 --> 00:48:40,050
to kill unless people have questions so

00:48:38,400 --> 00:48:41,550
again I'm sorry for rushing through

00:48:40,050 --> 00:48:42,810
things I thought that the module

00:48:41,550 --> 00:48:45,200
development side of things would take a

00:48:42,810 --> 00:48:45,200
little longer

00:48:45,350 --> 00:48:49,580
much appreciated for you guys coming out

00:48:47,340 --> 00:48:53,949
thank you

00:48:49,580 --> 00:48:53,949
[Applause]

00:49:09,539 --> 00:49:12,539
uh-huh

00:49:17,229 --> 00:49:25,329
book there's a book called the

00:49:21,729 --> 00:49:27,489
professional Drupal development and that

00:49:25,329 --> 00:49:29,140
is practically the Bible because it's

00:49:27,489 --> 00:49:30,339
organized well organized and structured

00:49:29,140 --> 00:49:33,309
according to the kinds of things that

00:49:30,339 --> 00:49:35,819
you'd be looking to build it's the only

00:49:33,309 --> 00:49:38,529
book I found out that I keep on my shelf

00:49:35,819 --> 00:49:40,359
here's a new version out for Drupal 7

00:49:38,529 --> 00:49:43,180
there were a lot of Herat on it when I

00:49:40,359 --> 00:49:48,309
had a copy it was things like a

00:49:43,180 --> 00:49:49,599
misspelling node so watch out for that

00:49:48,309 --> 00:49:57,519
but other than that it's an excellent

00:49:49,599 --> 00:49:59,140
reference approachable development in

00:49:57,519 --> 00:50:00,609
terms of module of elements really the

00:49:59,140 --> 00:50:05,019
hardest thing to get a hang of this is

00:50:00,609 --> 00:50:06,789
how the hooks get called and and what to

00:50:05,019 --> 00:50:08,529
actually put in the module Don info and

00:50:06,789 --> 00:50:10,119
module dot module files once you've got

00:50:08,529 --> 00:50:12,910
an idea of where to look for the hook

00:50:10,119 --> 00:50:14,859
callbacks and where your new reference

00:50:12,910 --> 00:50:18,689
material is all that and from that point

00:50:14,859 --> 00:50:18,689
forward is just Google

00:50:31,700 --> 00:50:36,900
three hours out of that line I like it

00:50:33,840 --> 00:50:39,410
here head right back to him I have

00:50:36,900 --> 00:50:42,420
another presentation on using panels in

00:50:39,410 --> 00:50:50,100
about an hour so you guys are looking

00:50:42,420 --> 00:50:52,170
for another reason to sleep aside from

00:50:50,100 --> 00:50:57,000
me rushing through it was the content

00:50:52,170 --> 00:50:58,680
good yeah I heard a little bit about

00:50:57,000 --> 00:51:03,620
trying to fit everything in and so I

00:50:58,680 --> 00:51:03,620
tried to rush through it a little so

00:51:06,470 --> 00:51:10,350
yeah I don't like building the former is

00:51:08,970 --> 00:51:14,390
I used that form builder pretty much

00:51:10,350 --> 00:51:14,390
entirely yeah

00:51:14,570 --> 00:51:20,370
Drupal seven adds some new things where

00:51:16,830 --> 00:51:24,870
you can add markup to it like it's more

00:51:20,370 --> 00:51:27,840
convenient to add markup there's a lot

00:51:24,870 --> 00:51:32,640
more theming flexibility in d7 yeah a

00:51:27,840 --> 00:51:34,050
lot more flexibility the database system

00:51:32,640 --> 00:51:37,470
that they've gotten d7 though I'm not

00:51:34,050 --> 00:51:40,020
sure is a good approach has anybody

00:51:37,470 --> 00:51:41,640
looked at it so previously I mean you

00:51:40,020 --> 00:51:43,560
generate your queries directly you'd

00:51:41,640 --> 00:51:45,270
call them with DB query and DB result

00:51:43,560 --> 00:51:48,740
these are the API calls available for

00:51:45,270 --> 00:51:50,610
you to call the the database it was

00:51:48,740 --> 00:51:51,690
abstracted so you know whatever no

00:51:50,610 --> 00:51:52,950
matter what's running underneath it

00:51:51,690 --> 00:51:54,180
would run the sequel against it but you

00:51:52,950 --> 00:51:54,990
still had to make sure your sequel was

00:51:54,180 --> 00:52:02,000
cross-platform

00:51:54,990 --> 00:52:02,000
compliant now it's object based so

00:52:09,810 --> 00:52:14,070
what about this I can help it I could we

00:52:12,330 --> 00:52:16,280
have the same problem what happens if

00:52:14,070 --> 00:52:16,280
you do

00:52:16,880 --> 00:52:20,800
[Music]

00:52:19,770 --> 00:52:31,520
let's put the word out

00:52:20,800 --> 00:52:31,520
[Music]

00:52:32,360 --> 00:52:39,650
level s an OS that works the way that

00:52:35,630 --> 00:52:44,810
you do across all your devices HP Slate

00:52:39,650 --> 00:52:47,450
and webOS HP as a service leader in

00:52:44,810 --> 00:52:49,490
cloud computing all we do is host a

00:52:47,450 --> 00:52:51,500
computing to us the cloud is just the

00:52:49,490 --> 00:52:52,520
next generation of hosting and as

00:52:51,500 --> 00:52:54,320
someone who's been in the hosting

00:52:52,520 --> 00:52:56,330
industry for twelve years we feel we're

00:52:54,320 --> 00:52:57,860
in a unique position to really help

00:52:56,330 --> 00:52:59,810
bring these two worlds together these

00:52:57,860 --> 00:53:02,000
different sets of technologies and to

00:52:59,810 --> 00:53:04,550
help companies embrace this new world in

00:53:02,000 --> 00:53:06,710
this great new tool that allows faster

00:53:04,550 --> 00:53:08,720
innovation not only is it about us being

00:53:06,710 --> 00:53:11,800
responsive and accountable but it's

00:53:08,720 --> 00:53:11,800
about us doing more for you

00:53:13,660 --> 00:53:42,650
[Music]

00:53:40,130 --> 00:53:45,780
[Applause]

00:53:42,650 --> 00:53:45,780
[Music]

00:53:48,400 --> 00:54:02,840
[Music]

00:54:05,640 --> 00:54:07,700
you

00:54:07,790 --> 00:54:10,989

YouTube URL: https://www.youtube.com/watch?v=lHpNSeHS0IU


