Title: 2011 SouthEast LinuxFest - Alan Hicks - Heartbeat and High Availability
Publication date: 2012-03-05
Playlist: 2011 SouthEast LinuxFest
Description: 
	2011 SouthEast LinuxFest - Alan Hicks - Heartbeat:  A Pacemaker for Systems with High Cholesterol

This video is licensed under Creative Commons Attribution 3.0 Unported License.
Captions: 
	00:00:01,129 --> 00:00:07,290
the following presentation was recorded

00:00:04,200 --> 00:00:09,870
at the 2011 southeast linux fest in

00:00:07,290 --> 00:00:11,370
Spartanburg South Carolina it is

00:00:09,870 --> 00:00:14,190
licensed under a creative commons

00:00:11,370 --> 00:00:18,390
license for more information about the

00:00:14,190 --> 00:00:21,840
southeast linux fest visit www southeast

00:00:18,390 --> 00:00:23,070
linux fest org the southeast linux fest

00:00:21,840 --> 00:00:26,430
would like to thank the following

00:00:23,070 --> 00:00:30,380
diamond and platinum sponsors in 2011

00:00:26,430 --> 00:00:30,380
for helping make these videos possible

00:01:10,180 --> 00:01:22,720
he does well we're good now okay good so

00:01:20,560 --> 00:01:24,610
uh i'm not going to do a whole bunch of

00:01:22,720 --> 00:01:27,010
this Who am I crap because they just did

00:01:24,610 --> 00:01:33,070
all that I'd also like to say I'm very

00:01:27,010 --> 00:01:36,610
sexy so but you know you didn't come to

00:01:33,070 --> 00:01:38,320
see me well y'all did but uh you know

00:01:36,610 --> 00:01:41,200
everybody else came to see all this job

00:01:38,320 --> 00:01:42,759
so high availability systems before we

00:01:41,200 --> 00:01:44,229
actually start talking about heartbeat

00:01:42,759 --> 00:01:46,990
we're going to talk a little bit about a

00:01:44,229 --> 00:01:49,450
che systems and when I see a che just

00:01:46,990 --> 00:01:51,160
understand high availability that's a

00:01:49,450 --> 00:01:55,119
mouthful for somebody like me who's

00:01:51,160 --> 00:01:57,840
already got a mouthful so what exactly

00:01:55,119 --> 00:02:01,330
is it by definition high availability

00:01:57,840 --> 00:02:04,660
systems our systems that can withstand a

00:02:01,330 --> 00:02:06,520
single failure without suffering loss of

00:02:04,660 --> 00:02:11,770
service basically they seamlessly

00:02:06,520 --> 00:02:15,670
continue on deprecated services okaying

00:02:11,770 --> 00:02:17,590
a lot of these sort of things and when

00:02:15,670 --> 00:02:20,860
we start talking rate is not actually

00:02:17,590 --> 00:02:22,360
high availability but in some ways since

00:02:20,860 --> 00:02:25,870
most of us are probably familiar with

00:02:22,360 --> 00:02:27,250
raid if you're not raise your hand okay

00:02:25,870 --> 00:02:31,239
good y'all know what the hell I'm

00:02:27,250 --> 00:02:34,510
talking about it's it's helpful for

00:02:31,239 --> 00:02:35,560
illustrative purposes and you might want

00:02:34,510 --> 00:02:39,430
to think about high availability

00:02:35,560 --> 00:02:43,440
services as a software raid for your

00:02:39,430 --> 00:02:46,269
services it's important when you think

00:02:43,440 --> 00:02:48,250
you know everybody brags about you know

00:02:46,269 --> 00:02:51,040
I've got the Linux box with two years of

00:02:48,250 --> 00:02:53,829
uptime and stuff and there ain't a whole

00:02:51,040 --> 00:02:55,180
lot of us that can say that when you

00:02:53,829 --> 00:02:58,480
start talking about high availability

00:02:55,180 --> 00:03:00,700
systems you stop talking about server

00:02:58,480 --> 00:03:03,220
uptime and start talking about service

00:03:00,700 --> 00:03:05,829
up time you know you're not worried if a

00:03:03,220 --> 00:03:08,290
server fails as long as you can continue

00:03:05,829 --> 00:03:12,310
to offer whatever network services you

00:03:08,290 --> 00:03:15,340
have whether that be ftp web database

00:03:12,310 --> 00:03:17,049
services what have you and there's a lot

00:03:15,340 --> 00:03:21,160
of different ways to go about this i'm

00:03:17,049 --> 00:03:23,470
only going to really discuss one but

00:03:21,160 --> 00:03:25,900
your goals when you're designing

00:03:23,470 --> 00:03:27,160
high-availability systems the first

00:03:25,900 --> 00:03:29,260
thing you have to do is start

00:03:27,160 --> 00:03:31,630
eliminating single points of failure and

00:03:29,260 --> 00:03:33,940
a lot of people look at their boxes and

00:03:31,630 --> 00:03:36,910
they think well I've got raid I've got

00:03:33,940 --> 00:03:39,040
you know redundant power supplies things

00:03:36,910 --> 00:03:40,810
like that and those are all great those

00:03:39,040 --> 00:03:41,770
are our first line of defense because

00:03:40,810 --> 00:03:44,860
those are the things that are most

00:03:41,770 --> 00:03:46,660
likely to fail but if you actually need

00:03:44,860 --> 00:03:48,910
stuff to stay up all the time you have

00:03:46,660 --> 00:03:52,030
to look beyond that it doesn't do you

00:03:48,910 --> 00:03:54,490
any good to have redundant power

00:03:52,030 --> 00:03:56,860
supplies plugged into the same power

00:03:54,490 --> 00:03:58,570
feed like a UPS or something because if

00:03:56,860 --> 00:04:02,950
that thing goes tango uniform your

00:03:58,570 --> 00:04:05,620
server does too one of the great goals

00:04:02,950 --> 00:04:09,010
of high availability it provides a path

00:04:05,620 --> 00:04:11,470
for maintenance let's uh let's say for

00:04:09,010 --> 00:04:15,459
instance you've got four web servers and

00:04:11,470 --> 00:04:18,549
they're all serving the same thing but

00:04:15,459 --> 00:04:21,940
you need to perform updates on them your

00:04:18,549 --> 00:04:24,430
poor assistant men me could either be

00:04:21,940 --> 00:04:26,680
there at four a.m. when nobody is on

00:04:24,430 --> 00:04:29,590
your web servers because remember this

00:04:26,680 --> 00:04:32,680
is you know you're offering content 24-7

00:04:29,590 --> 00:04:36,070
to anyone in let's say the continental

00:04:32,680 --> 00:04:38,680
US four o'clock here is still only one

00:04:36,070 --> 00:04:40,570
a.m. pacific time if you start doing

00:04:38,680 --> 00:04:42,040
this stuff that you know one am thinking

00:04:40,570 --> 00:04:44,470
nobody's going to be on there that's 10

00:04:42,040 --> 00:04:47,620
p.m. pacific and you're pissing off a

00:04:44,470 --> 00:04:49,419
bunch of people so what you do with have

00:04:47,620 --> 00:04:51,430
everybody systems when you need to do

00:04:49,419 --> 00:04:54,370
maintenance like say i need to install

00:04:51,430 --> 00:04:56,050
updates to apache or you know by god the

00:04:54,370 --> 00:04:58,090
colonel sometimes you can just install

00:04:56,050 --> 00:05:00,850
them do you know like a graceful restart

00:04:58,090 --> 00:05:03,430
and it's no big deal sometimes like say

00:05:00,850 --> 00:05:05,500
a kernel update you have to reboot that

00:05:03,430 --> 00:05:07,780
box to start running that update and

00:05:05,500 --> 00:05:10,260
during that reboot period if you don't

00:05:07,780 --> 00:05:17,320
have high Valdez high availability

00:05:10,260 --> 00:05:19,930
systems the you have a service outage so

00:05:17,320 --> 00:05:21,700
what you want to be able to do is when

00:05:19,930 --> 00:05:24,910
you need to have that service outage for

00:05:21,700 --> 00:05:27,520
maintenance seamlessly automatically

00:05:24,910 --> 00:05:30,460
fell over to a secondary system that can

00:05:27,520 --> 00:05:34,140
handle the workload and basically it's

00:05:30,460 --> 00:05:34,140
transparent to your end users

00:05:34,350 --> 00:05:39,420
it also gives you a great way to do

00:05:36,630 --> 00:05:42,060
application upgrades so you're

00:05:39,420 --> 00:05:45,720
transitioning from I don't know Drupal

00:05:42,060 --> 00:05:48,240
five to Drupal 6 that's a big change it

00:05:45,720 --> 00:05:52,530
changes a lot of your backend stuff well

00:05:48,240 --> 00:05:55,230
you can perform that on you know your

00:05:52,530 --> 00:05:57,780
secondary systems test them out have

00:05:55,230 --> 00:05:59,790
them ready to go and then fell over to

00:05:57,780 --> 00:06:02,220
them and automatically you're up running

00:05:59,790 --> 00:06:05,160
on that Drupal 6 thing then you can take

00:06:02,220 --> 00:06:07,530
your primary systems upgrade them fell

00:06:05,160 --> 00:06:09,870
back to them and everything's on you

00:06:07,530 --> 00:06:12,960
know the updated code base and you've

00:06:09,870 --> 00:06:15,060
got you've had no downtime so those are

00:06:12,960 --> 00:06:18,330
basically the goals or the things we

00:06:15,060 --> 00:06:20,640
want to do with it you know eliminate

00:06:18,330 --> 00:06:24,800
the possibility of getting that call at

00:06:20,640 --> 00:06:26,880
4am because something's crashed and

00:06:24,800 --> 00:06:28,890
eliminating the possibility of having to

00:06:26,880 --> 00:06:30,810
schedule yourself to do this crap at 4am

00:06:28,890 --> 00:06:35,790
because nobody wants to be up at that

00:06:30,810 --> 00:06:37,950
time unless they're drinking so I

00:06:35,790 --> 00:06:39,870
already kind of talked about this common

00:06:37,950 --> 00:06:42,450
pitfalls the very first point you know

00:06:39,870 --> 00:06:44,700
if your ups takes a dirt nap and you're

00:06:42,450 --> 00:06:49,470
done that power supplies are linked into

00:06:44,700 --> 00:06:52,080
that you're dead let's say you have even

00:06:49,470 --> 00:06:55,350
two different systems if that power line

00:06:52,080 --> 00:06:57,840
fails you're dead and you can take this

00:06:55,350 --> 00:07:01,320
very far to where you have a you know a

00:06:57,840 --> 00:07:02,820
secondary H a system in another data

00:07:01,320 --> 00:07:05,040
center and another part of the country

00:07:02,820 --> 00:07:07,560
so if you have you know a massive

00:07:05,040 --> 00:07:10,080
blackout like they had five six years

00:07:07,560 --> 00:07:12,630
ago up in the New York area anybody

00:07:10,080 --> 00:07:16,320
remember when that happened okay I see

00:07:12,630 --> 00:07:17,400
we have nobody who reads the knees so

00:07:16,320 --> 00:07:19,590
when something like that happens you

00:07:17,400 --> 00:07:24,240
could fail over automatically to a

00:07:19,590 --> 00:07:25,680
second data center or whatnot again

00:07:24,240 --> 00:07:28,410
things like raid these are only a

00:07:25,680 --> 00:07:31,710
partial solution these are basically

00:07:28,410 --> 00:07:34,530
band-aids whereas a che is a full

00:07:31,710 --> 00:07:38,520
solution or if it's well implemented

00:07:34,530 --> 00:07:40,920
it's a full solution people have read

00:07:38,520 --> 00:07:44,190
Because hard drives fail I mean other

00:07:40,920 --> 00:07:45,870
than fans you know you've got fans hard

00:07:44,190 --> 00:07:46,979
drives and power supplies in your

00:07:45,870 --> 00:07:48,060
computer and those are pretty much

00:07:46,979 --> 00:07:50,190
you're only moving Paul

00:07:48,060 --> 00:07:51,510
arts you know those are what we're out

00:07:50,190 --> 00:07:53,910
quickest because they're the only things

00:07:51,510 --> 00:07:57,240
that have you know bearings that give

00:07:53,910 --> 00:07:59,700
out and all kind of crowd so you know

00:07:57,240 --> 00:08:01,410
you do raid there because you know

00:07:59,700 --> 00:08:03,780
they're going to fail I mean we have

00:08:01,410 --> 00:08:06,930
those because we know those are going to

00:08:03,780 --> 00:08:10,440
take a dirt nap sometime and we want you

00:08:06,930 --> 00:08:12,840
know to avoid outages there but you know

00:08:10,440 --> 00:08:16,950
that does you no good if you have say a

00:08:12,840 --> 00:08:19,050
kernel segfault on you in those

00:08:16,950 --> 00:08:21,780
situations you know no amount of

00:08:19,050 --> 00:08:24,030
hardware planning can help you out if

00:08:21,780 --> 00:08:29,700
your software just decides to go you

00:08:24,030 --> 00:08:33,690
know batshit crazy a lot of people talk

00:08:29,700 --> 00:08:35,820
about load balancing load balancing it's

00:08:33,690 --> 00:08:37,260
not high availability it might seem like

00:08:35,820 --> 00:08:39,750
it at first you know I'd say we got

00:08:37,260 --> 00:08:43,020
those same for web servers that we

00:08:39,750 --> 00:08:45,750
talked about before and we r load

00:08:43,020 --> 00:08:47,610
balancing you know request between all

00:08:45,750 --> 00:08:49,620
four of them well we can have one fail

00:08:47,610 --> 00:08:52,710
and the other three are still strong

00:08:49,620 --> 00:08:54,630
enough to pick up its load that's still

00:08:52,710 --> 00:08:56,640
not high availability because our load

00:08:54,630 --> 00:08:58,950
balancer is now our single point of

00:08:56,640 --> 00:09:00,540
failure instead of our web server being

00:08:58,950 --> 00:09:03,600
our single point of failure our load

00:09:00,540 --> 00:09:05,280
bouncer is now so now you have to you

00:09:03,600 --> 00:09:08,630
know look at that new single point of

00:09:05,280 --> 00:09:08,630
failure and make it high availability

00:09:09,200 --> 00:09:16,440
another thing let's go back to our for

00:09:12,990 --> 00:09:18,810
web servers thing multiple redundant

00:09:16,440 --> 00:09:22,350
operating systems at or near peak load

00:09:18,810 --> 00:09:24,030
say we got those for web servers and

00:09:22,350 --> 00:09:27,170
they're operating at eighty percent of

00:09:24,030 --> 00:09:30,060
their total peak and one of them fails

00:09:27,170 --> 00:09:31,920
well that one still has more load than

00:09:30,060 --> 00:09:33,780
the other three can pick up at the same

00:09:31,920 --> 00:09:35,459
time so a single point of failure

00:09:33,780 --> 00:09:38,550
doesn't mean a single thing that can

00:09:35,459 --> 00:09:41,790
fail but it means a single service that

00:09:38,550 --> 00:09:44,850
can fail you need to you know have

00:09:41,790 --> 00:09:46,770
enough spare to pick up the load for any

00:09:44,850 --> 00:09:49,529
one failure because we're not talking

00:09:46,770 --> 00:09:51,750
about system availability we're talking

00:09:49,529 --> 00:09:53,730
about service availability that's a very

00:09:51,750 --> 00:09:56,600
key distinction that needs to be made

00:09:53,730 --> 00:09:56,600
and understood

00:09:57,810 --> 00:10:03,060
so how do we get that with Linux oh and

00:10:00,560 --> 00:10:05,700
yes I did more than just screw up how to

00:10:03,060 --> 00:10:07,260
spell contributor I was halfway drunk

00:10:05,700 --> 00:10:10,380
when i made this presentation forgive

00:10:07,260 --> 00:10:14,160
the you know the problems with the being

00:10:10,380 --> 00:10:17,250
there so how do we get there with linux

00:10:14,160 --> 00:10:19,589
if you don't very much know about linux

00:10:17,250 --> 00:10:21,720
networking in linux you can make an

00:10:19,589 --> 00:10:24,330
alias to IP address or add a second IP

00:10:21,720 --> 00:10:27,570
address to an ethernet interface like

00:10:24,330 --> 00:10:31,800
I've done here you can see EG row has

00:10:27,570 --> 00:10:36,300
172 dot 116 dot one dot one and it's in

00:10:31,800 --> 00:10:39,450
a / 28 i believe that is subnet I'd have

00:10:36,300 --> 00:10:44,820
to do the math and I don't care to / 27

00:10:39,450 --> 00:10:50,130
sorry but then we also have a second IP

00:10:44,820 --> 00:10:53,130
address 172 dot 116 dot 3 dot one dot 3

00:10:50,130 --> 00:10:55,620
in that same subnet now imagine we have

00:10:53,130 --> 00:10:59,160
two systems one on dot one and one on

00:10:55,620 --> 00:11:02,550
dot two if one of those services also

00:10:59,160 --> 00:11:06,089
has dot three alias two here we can then

00:11:02,550 --> 00:11:09,330
if that server fails the second service

00:11:06,089 --> 00:11:13,410
can spin up dot 3 on its internet or its

00:11:09,330 --> 00:11:16,230
ethernet card its nick and pick up those

00:11:13,410 --> 00:11:18,600
services almost instantaneously there's

00:11:16,230 --> 00:11:21,120
some lag involved but for practical

00:11:18,600 --> 00:11:24,830
purposes it's as good as you're going to

00:11:21,120 --> 00:11:28,140
get without spending boo Koos and money

00:11:24,830 --> 00:11:29,940
so H a networking and this is kind of

00:11:28,140 --> 00:11:33,410
well just said they're like I said I

00:11:29,940 --> 00:11:33,410
have not practiced a speech at all

00:11:34,460 --> 00:11:39,390
configuring these sort of type services

00:11:36,839 --> 00:11:42,240
where your service is running all the

00:11:39,390 --> 00:11:46,050
time is very easy because you only have

00:11:42,240 --> 00:11:49,260
to share an IP address think for example

00:11:46,050 --> 00:11:53,310
like Apache send mail whatever you can

00:11:49,260 --> 00:11:57,209
have it listen on 0 0 0 0 / 0 all

00:11:53,310 --> 00:11:59,250
interfaces all IP addresses and whenever

00:11:57,209 --> 00:12:02,339
you spin up a new IP address on that box

00:11:59,250 --> 00:12:04,680
is automatically listening to it some

00:12:02,339 --> 00:12:06,270
services don't work that way or maybe

00:12:04,680 --> 00:12:08,370
you don't want to configure it that way

00:12:06,270 --> 00:12:10,320
for some reasons you know maybe you've

00:12:08,370 --> 00:12:11,670
got additional Nick's on it you want

00:12:10,320 --> 00:12:13,560
listening on some and not

00:12:11,670 --> 00:12:17,070
listening on others there's a lot of

00:12:13,560 --> 00:12:18,420
reasons you might want that but you know

00:12:17,070 --> 00:12:19,910
when you just have to share an IP

00:12:18,420 --> 00:12:22,400
address like we have in this situation

00:12:19,910 --> 00:12:24,960
where we can set up this alias type II

00:12:22,400 --> 00:12:42,080
it's very easy to set up a chain

00:12:24,960 --> 00:12:47,880
networking yeah out of a it's a slasher

00:12:42,080 --> 00:12:49,470
I'm not even gonna worry about it like I

00:12:47,880 --> 00:12:55,170
said I was half drunk i wrote this

00:12:49,470 --> 00:12:57,390
speech and yet if y'all have questions

00:12:55,170 --> 00:12:58,560
don't save them for the end just go

00:12:57,390 --> 00:12:59,880
ahead and you know don't even bother

00:12:58,560 --> 00:13:03,420
sticking of your hand just shout them

00:12:59,880 --> 00:13:07,590
out i will get to them unless they're

00:13:03,420 --> 00:13:11,580
stupid so we're going to look at a

00:13:07,590 --> 00:13:14,970
simple config for just sharing an IP

00:13:11,580 --> 00:13:16,380
address there's three files when you

00:13:14,970 --> 00:13:18,810
install heartbeat and I'm not going to

00:13:16,380 --> 00:13:20,250
cover compiling or I figured y'all can

00:13:18,810 --> 00:13:22,280
y'all are smart enough you haven't

00:13:20,250 --> 00:13:24,570
figure all that stuff out on your own

00:13:22,280 --> 00:13:29,010
but you know we have basically three

00:13:24,570 --> 00:13:30,600
config files HH CF h a resources and

00:13:29,010 --> 00:13:33,120
every time i see that i want to say hair

00:13:30,600 --> 00:13:36,360
resources it's like where bugs bunny

00:13:33,120 --> 00:13:40,470
gets all his crap and authentication

00:13:36,360 --> 00:13:43,350
keys are off keys hcf is the main sort

00:13:40,470 --> 00:13:46,110
of configuration thing a che resources

00:13:43,350 --> 00:13:48,870
is what resources we're going to have in

00:13:46,110 --> 00:13:50,580
this high availability cluster and I

00:13:48,870 --> 00:13:52,350
hate use that word cluster because it

00:13:50,580 --> 00:13:55,280
means so many different things that has

00:13:52,350 --> 00:14:00,240
no meaning it's kind of cliché and

00:13:55,280 --> 00:14:02,160
authentication keys authentication key

00:14:00,240 --> 00:14:03,480
is very easiest one to look at we'll

00:14:02,160 --> 00:14:06,360
look at it first even though its third

00:14:03,480 --> 00:14:08,790
on the list it's just basically some

00:14:06,360 --> 00:14:12,030
very long sort of password you can think

00:14:08,790 --> 00:14:14,310
of it like that that each one of these

00:14:12,030 --> 00:14:16,620
systems must have because if they don't

00:14:14,310 --> 00:14:18,810
match it won't trust it and won't trust

00:14:16,620 --> 00:14:25,200
the signals its ending or not getting

00:14:18,810 --> 00:14:26,100
from the other hcf pretty much a simple

00:14:25,200 --> 00:14:28,680
thing I'm not going to go over

00:14:26,100 --> 00:14:30,840
everything but large facility that's

00:14:28,680 --> 00:14:34,890
just the syslog facility to use you can

00:14:30,840 --> 00:14:39,030
redirect it as needed keep-alive two

00:14:34,890 --> 00:14:40,740
seconds UDP port you can actually do it

00:14:39,030 --> 00:14:42,360
on TCP but I wouldn't recommend it

00:14:40,740 --> 00:14:46,710
because you're just adding you know

00:14:42,360 --> 00:14:48,870
additional crap you don't need UDP port

00:14:46,710 --> 00:14:52,410
694 I figure y'all can all figure that

00:14:48,870 --> 00:14:53,820
out there's two other there's two ways

00:14:52,410 --> 00:14:56,850
to do this you can either do a broadcast

00:14:53,820 --> 00:15:00,120
or a unicast and I've got them both here

00:14:56,850 --> 00:15:01,910
so you can kind of see them but you

00:15:00,120 --> 00:15:04,050
would only want to use one of the other

00:15:01,910 --> 00:15:07,650
broadcast is where you basically send

00:15:04,050 --> 00:15:11,460
out to everything in your subnet and it

00:15:07,650 --> 00:15:14,400
can make it can make you if you have a

00:15:11,460 --> 00:15:16,290
whole bunch of these 10 you tend not to

00:15:14,400 --> 00:15:19,110
but if you have a whole bunch so it can

00:15:16,290 --> 00:15:21,240
make your configuration simpler unicast

00:15:19,110 --> 00:15:24,900
is where you're just denoting another

00:15:21,240 --> 00:15:28,460
peer here we just have to you know H a

00:15:24,900 --> 00:15:36,360
proxy 01 example.com and a jay Park CO 2

00:15:28,460 --> 00:15:40,130
and so aging products co 2 is on dot 2h

00:15:36,360 --> 00:15:43,260
a proxy dot one will be on dot one and

00:15:40,130 --> 00:15:47,550
forgive me because I realize these IP

00:15:43,260 --> 00:15:50,360
addresses do not match like I said half

00:15:47,550 --> 00:15:53,460
drunk when I wrote this presentation

00:15:50,360 --> 00:15:58,290
auto fail back this is something that

00:15:53,460 --> 00:15:59,990
can be useful or not be useful I tend to

00:15:58,290 --> 00:16:03,180
leave it disabled by preference

00:15:59,990 --> 00:16:06,300
basically what this says is when the

00:16:03,180 --> 00:16:09,090
primary node fails okay he goes offline

00:16:06,300 --> 00:16:11,880
for whatever reason the secondary node h

00:16:09,090 --> 00:16:13,890
a proxy 02 will pick it up and we'll

00:16:11,880 --> 00:16:17,910
begin you know offering all the services

00:16:13,890 --> 00:16:20,520
and things well when HTTP proxy 01 comes

00:16:17,910 --> 00:16:22,800
back online if you have auto fell back

00:16:20,520 --> 00:16:26,130
on it will automatically switch back to

00:16:22,800 --> 00:16:28,830
using the primary make sense the reason

00:16:26,130 --> 00:16:31,320
I don't use it is because if if the

00:16:28,830 --> 00:16:35,030
first one fails I don't want it coming

00:16:31,320 --> 00:16:37,699
back online you know mysteriously and

00:16:35,030 --> 00:16:40,910
working you know it may have some weird

00:16:37,699 --> 00:16:43,939
a hardware bug and make makes it reboot

00:16:40,910 --> 00:16:46,639
and bounce up and down and I don't want

00:16:43,939 --> 00:16:50,869
switching back and forth risking that so

00:16:46,639 --> 00:16:53,480
I usually keep it disabled and then once

00:16:50,869 --> 00:16:55,519
you bring a cheap roxio one back on you

00:16:53,480 --> 00:17:01,189
have to manually fell it over through

00:16:55,519 --> 00:17:03,529
something like a heartbeat restart a che

00:17:01,189 --> 00:17:05,419
resources in this situation uh forget

00:17:03,529 --> 00:17:07,669
the H a proxy tacked on here to the end

00:17:05,419 --> 00:17:10,699
we're not really worried about that just

00:17:07,669 --> 00:17:14,720
yet the first line is your primary node

00:17:10,699 --> 00:17:19,069
in the cluster again I hate that word H

00:17:14,720 --> 00:17:22,159
a proxy 01 example.com the everything

00:17:19,069 --> 00:17:26,089
else is resources to share and I've

00:17:22,159 --> 00:17:30,710
simplified this file a bit just because

00:17:26,089 --> 00:17:32,419
I didn't want running on forever the

00:17:30,710 --> 00:17:36,370
first resource we're sharing is that IP

00:17:32,419 --> 00:17:38,659
address 172 dot 16 dot one dot three

00:17:36,370 --> 00:17:40,700
there's other options there where you

00:17:38,659 --> 00:17:43,190
can pass it different net mass different

00:17:40,700 --> 00:17:47,750
gateways different Nick's you want spun

00:17:43,190 --> 00:17:49,010
up on but overall you know this is this

00:17:47,750 --> 00:17:51,260
should be good for demonstration

00:17:49,010 --> 00:17:56,149
purposes we're sharing this resource

00:17:51,260 --> 00:18:00,950
when we start up heartbeat this IP

00:17:56,149 --> 00:18:02,929
address dot 3 will get shared and you

00:18:00,950 --> 00:18:05,149
know will it won't get shared it will

00:18:02,929 --> 00:18:08,389
get spun up on whichever one is active

00:18:05,149 --> 00:18:11,059
at the moment and then you know if the

00:18:08,389 --> 00:18:13,820
other one fails or the active one fails

00:18:11,059 --> 00:18:16,490
the other one picks it up you know

00:18:13,820 --> 00:18:19,130
pretty pretty simple stuff the next one

00:18:16,490 --> 00:18:21,970
there H a proxy says to start the H a

00:18:19,130 --> 00:18:26,690
proxy service and basically that does a

00:18:21,970 --> 00:18:29,240
/c forward slash init.d /h a proxy start

00:18:26,690 --> 00:18:31,580
if you're using slackware and you should

00:18:29,240 --> 00:18:33,380
be you'll have to actually add that file

00:18:31,580 --> 00:18:39,080
yourself for most things because we use

00:18:33,380 --> 00:18:42,500
a more sane in its structure this is

00:18:39,080 --> 00:18:45,919
where crap gets complicated it's easy in

00:18:42,500 --> 00:18:48,649
this situation right here to say well

00:18:45,919 --> 00:18:50,750
this box has failed let me spin up this

00:18:48,649 --> 00:18:51,470
proxy server this proxy server all it's

00:18:50,750 --> 00:18:55,070
doing is

00:18:51,470 --> 00:18:57,020
you know proxy proxy in commands between

00:18:55,070 --> 00:18:59,600
the outside world and some internal

00:18:57,020 --> 00:19:02,900
system it doesn't need to have very much

00:18:59,600 --> 00:19:04,669
data it doesn't need to know any of the

00:19:02,900 --> 00:19:06,350
data the other one knows only has to

00:19:04,669 --> 00:19:08,960
have is a config file and I can copy

00:19:06,350 --> 00:19:11,510
that config file between systems when I

00:19:08,960 --> 00:19:14,750
make a change not that big a deal but

00:19:11,510 --> 00:19:18,380
when we need to do data sharing stuff

00:19:14,750 --> 00:19:20,330
gets hairy the traditional way we do it

00:19:18,380 --> 00:19:24,590
is with something called drbd which I'll

00:19:20,330 --> 00:19:26,690
get to in a minute because this crap is

00:19:24,590 --> 00:19:29,559
difficult if you have very little data

00:19:26,690 --> 00:19:32,600
and you're not expecting you know a

00:19:29,559 --> 00:19:35,030
failover that doesn't have a complete

00:19:32,600 --> 00:19:36,919
data set will be a big deal you might be

00:19:35,030 --> 00:19:40,460
able to just rsync stuff between them

00:19:36,919 --> 00:19:43,429
you know if you've got sales samba share

00:19:40,460 --> 00:19:46,250
this you know just a bulk share but you

00:19:43,429 --> 00:19:47,840
want to keep it going all the time you

00:19:46,250 --> 00:19:50,510
can probably are sync data back and

00:19:47,840 --> 00:19:52,580
forth between it and you know call that

00:19:50,510 --> 00:19:55,700
from crying every 10-15 minutes whatever

00:19:52,580 --> 00:19:57,740
you think is best and you know it should

00:19:55,700 --> 00:20:01,220
be okay but if you need something that's

00:19:57,740 --> 00:20:03,679
real time say someone is uploading

00:20:01,220 --> 00:20:07,100
content to your web servers making post

00:20:03,679 --> 00:20:09,710
on a forum things of that nature data

00:20:07,100 --> 00:20:12,049
sharing between your primary system and

00:20:09,710 --> 00:20:17,539
your secondary very important because

00:20:12,049 --> 00:20:19,400
you need that data in real time if

00:20:17,539 --> 00:20:21,919
you're going to do that there's really

00:20:19,400 --> 00:20:25,429
only two ways to do it that I that I am

00:20:21,919 --> 00:20:26,900
prepared to speak on well really only

00:20:25,429 --> 00:20:30,440
one I'm prepared to speak on a 1 i'm

00:20:26,900 --> 00:20:32,110
prepared to mention drbd its we'll get

00:20:30,440 --> 00:20:38,650
on to that in the next slide or

00:20:32,110 --> 00:20:43,250
clustering file system like gfs2 or ocfs

00:20:38,650 --> 00:20:45,770
clustering file systems it's a little

00:20:43,250 --> 00:20:47,630
bit like raid you know we've got we've

00:20:45,770 --> 00:20:51,200
got multiple boxes that have all this

00:20:47,630 --> 00:20:54,260
data but that clustering file server is

00:20:51,200 --> 00:20:56,289
still blood that clustering file system

00:20:54,260 --> 00:20:58,940
is probably on a sand somewhere

00:20:56,289 --> 00:21:01,610
connected by I scuzzy to multiple

00:20:58,940 --> 00:21:03,710
targets that sand is then a single point

00:21:01,610 --> 00:21:05,210
of failure you know you then have to

00:21:03,710 --> 00:21:07,850
figure out ways to

00:21:05,210 --> 00:21:11,059
you do that and I am intimately familiar

00:21:07,850 --> 00:21:13,370
with the problems that causes and that

00:21:11,059 --> 00:21:19,159
is all that i'm going to say on that

00:21:13,370 --> 00:21:25,130
subject oh well I'll say this much sand

00:21:19,159 --> 00:21:27,740
failure is not fun so what's drbd it's a

00:21:25,130 --> 00:21:30,649
distributed replicated block device now

00:21:27,740 --> 00:21:32,659
what the hell is that a block device is

00:21:30,649 --> 00:21:34,490
essentially like a hard drive partition

00:21:32,659 --> 00:21:38,360
or hard drive it's something where data

00:21:34,490 --> 00:21:40,100
is stored in blocks you know we have we

00:21:38,360 --> 00:21:42,200
want to write out a file we allocate

00:21:40,100 --> 00:21:44,890
this block we write it into this spot on

00:21:42,200 --> 00:21:47,149
the blog it's you know written

00:21:44,890 --> 00:21:50,059
distributed if you don't know what

00:21:47,149 --> 00:21:51,620
distributed or replicated means you

00:21:50,059 --> 00:21:57,559
probably should not be attending this

00:21:51,620 --> 00:21:59,630
talk but it sits between the drbd it

00:21:57,559 --> 00:22:02,690
sits between the filesystem say ext3

00:21:59,630 --> 00:22:05,539
ext4 or whatever file system you're

00:22:02,690 --> 00:22:08,510
using and the raw devices on two

00:22:05,539 --> 00:22:10,039
different computers you know the Royal

00:22:08,510 --> 00:22:14,690
device will be your hard drive or your

00:22:10,039 --> 00:22:17,809
hard drive partition and what this does

00:22:14,690 --> 00:22:20,960
is when files are changed added removed

00:22:17,809 --> 00:22:25,610
from the file system before they are

00:22:20,960 --> 00:22:28,510
actually committed to disk or as they're

00:22:25,610 --> 00:22:32,630
being committed to disk i should say the

00:22:28,510 --> 00:22:35,480
drbd notes which blocks on that disk are

00:22:32,630 --> 00:22:37,909
being changed what the changes are and

00:22:35,480 --> 00:22:40,429
it will send it to a secondary computer

00:22:37,909 --> 00:22:43,429
that's listening you know by ethernet

00:22:40,429 --> 00:22:45,409
gigabit whatever and that secondary

00:22:43,429 --> 00:22:47,750
system which doesn't even have the file

00:22:45,409 --> 00:22:49,880
system mount at this point will write

00:22:47,750 --> 00:22:54,620
that change data in those blocks

00:22:49,880 --> 00:22:57,470
directly to the to the disk will show

00:22:54,620 --> 00:22:59,990
how this works here in a minute this is

00:22:57,470 --> 00:23:01,370
the dr bd.com file and this is highly

00:22:59,990 --> 00:23:04,070
simplified they get a lot more

00:23:01,370 --> 00:23:07,429
complicated than this if you go on the

00:23:04,070 --> 00:23:09,080
internet start googling drbd you'll get

00:23:07,429 --> 00:23:12,980
a lot more information than i can give

00:23:09,080 --> 00:23:19,160
you in this slide but uh here i've set

00:23:12,980 --> 00:23:22,310
up to drbd instances ones on h

00:23:19,160 --> 00:23:24,770
proxy 01 that's a physical computer the

00:23:22,310 --> 00:23:27,800
others on H a proxy 02 another physical

00:23:24,770 --> 00:23:29,540
computer and I've made partitions on

00:23:27,800 --> 00:23:35,360
both of these boxes will assume that

00:23:29,540 --> 00:23:38,510
their hardware is identical SDA to you

00:23:35,360 --> 00:23:44,750
can see disk dev SDA 2 on both of them

00:23:38,510 --> 00:23:47,180
will be device dev drbd 0 on each one

00:23:44,750 --> 00:23:52,400
and then we have the addresses of each

00:23:47,180 --> 00:23:57,200
box dot 14 h a proxy 0 1 24 h a proxy 02

00:23:52,400 --> 00:24:00,110
and the port numbers that drbd will be

00:23:57,200 --> 00:24:02,650
communicating on and we're also storing

00:24:00,110 --> 00:24:05,920
meta disk information internally

00:24:02,650 --> 00:24:09,500
basically that means a metadesk metadesk

00:24:05,920 --> 00:24:11,390
information I can't really explain

00:24:09,500 --> 00:24:15,920
everything about it because quite

00:24:11,390 --> 00:24:18,680
frankly I don't know but basically you

00:24:15,920 --> 00:24:21,110
can store that information on that disk

00:24:18,680 --> 00:24:24,140
on that partition or you can store it

00:24:21,110 --> 00:24:25,790
somewhere else this is just telling drbd

00:24:24,140 --> 00:24:28,310
where to find all that information that

00:24:25,790 --> 00:24:31,610
it needs things like you know which

00:24:28,310 --> 00:24:35,450
other system is there where I might add

00:24:31,610 --> 00:24:38,780
as far as replication replicating in

00:24:35,450 --> 00:24:41,360
case replication breaks so once we've

00:24:38,780 --> 00:24:43,460
got that config file in place oh and let

00:24:41,360 --> 00:24:46,310
me let me go back mention how thing

00:24:43,460 --> 00:24:48,350
where you have a the common thing

00:24:46,310 --> 00:24:50,180
protocol see that's pretty much the one

00:24:48,350 --> 00:24:53,360
you're going to want all the time that's

00:24:50,180 --> 00:24:55,070
the one where when blocks are allocated

00:24:53,360 --> 00:24:57,860
to the primary they get allocated to the

00:24:55,070 --> 00:24:59,750
secondary at the same time there's a few

00:24:57,860 --> 00:25:02,320
other ways which you know may or may not

00:24:59,750 --> 00:25:09,200
be useful depending on your application

00:25:02,320 --> 00:25:12,260
but this is how we actually create drbd

00:25:09,200 --> 00:25:14,360
nodes remember we have our file system

00:25:12,260 --> 00:25:16,790
well there's actually no file system on

00:25:14,360 --> 00:25:21,680
it is all we have a hard drive partition

00:25:16,790 --> 00:25:24,380
SDA too we're going to we made that

00:25:21,680 --> 00:25:28,520
resource 01 you can see in the resource

00:25:24,380 --> 00:25:32,540
section its resource 01 and then drbd

00:25:28,520 --> 00:25:36,650
admin refers to it as resource 01

00:25:32,540 --> 00:25:38,540
forever essentially first step is

00:25:36,650 --> 00:25:40,580
creating the metadata that's you know

00:25:38,540 --> 00:25:44,060
what tells it you know where we've seen

00:25:40,580 --> 00:25:45,980
how we think this that another you have

00:25:44,060 --> 00:25:47,750
to attach the volume have to set up

00:25:45,980 --> 00:25:49,880
synchronization you have to connect to

00:25:47,750 --> 00:25:52,400
the pier and you pretty much have to do

00:25:49,880 --> 00:25:56,090
these more or less simultaneously on the

00:25:52,400 --> 00:25:58,520
two different boxes you don't have to

00:25:56,090 --> 00:26:00,650
but you know it'll help your

00:25:58,520 --> 00:26:02,990
understanding if you think of us hey i'm

00:26:00,650 --> 00:26:04,790
typing this on the first computer hit

00:26:02,990 --> 00:26:09,170
enter I go I type it on the second

00:26:04,790 --> 00:26:10,940
computer hit enter so the first thing

00:26:09,170 --> 00:26:13,880
you know we're writing the metadata to

00:26:10,940 --> 00:26:18,700
wherever we stored in our config file we

00:26:13,880 --> 00:26:18,700
stored it internally metadesk internal

00:26:19,330 --> 00:26:25,670
the next thing to do is attach the

00:26:21,770 --> 00:26:28,010
resource this is basically just still

00:26:25,670 --> 00:26:32,530
set up processes this is where it is

00:26:28,010 --> 00:26:37,400
creating dev drbd 0 it's creating this

00:26:32,530 --> 00:26:39,980
fictitious block device drbd 0 which

00:26:37,400 --> 00:26:42,830
linux will act as if it is a real block

00:26:39,980 --> 00:26:45,980
device as far as the file system as far

00:26:42,830 --> 00:26:49,100
as all your regular tools cpe rsync all

00:26:45,980 --> 00:26:53,330
that crap is concerned drbd 0 is just

00:26:49,100 --> 00:26:55,400
another hard drive partition then you

00:26:53,330 --> 00:26:58,610
set up synchronization this is where it

00:26:55,400 --> 00:27:00,830
starts to sync data between the two

00:26:58,610 --> 00:27:04,490
different discs or prepares to do it

00:27:00,830 --> 00:27:07,940
anyhow and then you connect to the other

00:27:04,490 --> 00:27:13,280
node again notice you know we're talking

00:27:07,940 --> 00:27:16,190
drbd admin to resource one in every case

00:27:13,280 --> 00:27:21,620
we're not saying you know drbd admin to

00:27:16,190 --> 00:27:23,420
SDA to to dev drbd 0 as far as dr BTW is

00:27:21,620 --> 00:27:25,790
concerned it looks at it as a resource

00:27:23,420 --> 00:27:29,200
and if you look back at our config file

00:27:25,790 --> 00:27:31,940
and you can line up you know the

00:27:29,200 --> 00:27:35,480
brackets if I did that right you'll see

00:27:31,940 --> 00:27:38,270
that resource 01 has two nodes on H a

00:27:35,480 --> 00:27:40,820
proxy I want H a proxy 02 and then the

00:27:38,270 --> 00:27:43,790
information is in them that's why the

00:27:40,820 --> 00:27:46,100
command is the same on both nodes it's

00:27:43,790 --> 00:27:49,640
not drbd Adam

00:27:46,100 --> 00:27:51,830
in on H a proxy 01 this partition we

00:27:49,640 --> 00:27:55,370
just refer to it as the resource it

00:27:51,830 --> 00:27:56,990
looks up its own hostname and you know

00:27:55,370 --> 00:28:04,179
looks up the information for that host

00:27:56,990 --> 00:28:08,960
name in the config file so now this is a

00:28:04,179 --> 00:28:11,809
little bit more complicated but at this

00:28:08,960 --> 00:28:13,370
point you should have a proc drbd 0 and

00:28:11,809 --> 00:28:16,400
I screwed that up on this presentation

00:28:13,370 --> 00:28:20,000
as well on both notes for information on

00:28:16,400 --> 00:28:21,770
your volumes it should be oh I'm sorry I

00:28:20,000 --> 00:28:26,179
didn't screw that up on the presentation

00:28:21,770 --> 00:28:28,820
I screwed it up out of my mouth at this

00:28:26,179 --> 00:28:31,700
point in the proc file system proc FS

00:28:28,820 --> 00:28:34,730
you should have a file called proc drbd

00:28:31,700 --> 00:28:39,669
and I don't think I have any content

00:28:34,730 --> 00:28:43,610
from that file because San failure sucks

00:28:39,669 --> 00:28:45,650
but uh anyhow this will tell you you

00:28:43,610 --> 00:28:48,020
know whether I'm the primary note at

00:28:45,650 --> 00:28:50,510
this time with on the secondary is my

00:28:48,020 --> 00:28:52,250
information up to date am I sinking to

00:28:50,510 --> 00:28:54,770
the other note is the other nodes

00:28:52,250 --> 00:28:57,409
thinking from me you can read all that

00:28:54,770 --> 00:29:00,799
information just by cat proc drbd at

00:28:57,409 --> 00:29:04,640
this point if we need to we can also

00:29:00,799 --> 00:29:07,580
force the secondary box to overwrite

00:29:04,640 --> 00:29:11,120
whatever it has on SDA to with whatever

00:29:07,580 --> 00:29:14,539
we've got so you know you could set up

00:29:11,120 --> 00:29:17,179
this box and already have your data and

00:29:14,539 --> 00:29:18,950
stuff on it and then for synchronization

00:29:17,179 --> 00:29:21,650
to the other thing almost like you've

00:29:18,950 --> 00:29:24,500
done in our scene the difference here is

00:29:21,650 --> 00:29:29,030
because death because drbd deals with

00:29:24,500 --> 00:29:31,549
blocks you can't just you can't just

00:29:29,030 --> 00:29:34,370
copy you know let's say I have SDA too

00:29:31,549 --> 00:29:37,909
and I want to rsync everything on that

00:29:34,370 --> 00:29:40,280
partition to this other box when you do

00:29:37,909 --> 00:29:42,620
that our sink those files while they're

00:29:40,280 --> 00:29:46,159
identical they might be in different

00:29:42,620 --> 00:29:49,760
blocks on that file system so you have

00:29:46,159 --> 00:29:53,000
to tell drbd you know over aight by

00:29:49,760 --> 00:29:56,059
block not overwrite by file because the

00:29:53,000 --> 00:29:59,340
RBT knows nothing about files it knows

00:29:56,059 --> 00:30:01,890
only about bits and blocks

00:29:59,340 --> 00:30:04,500
does that make sense to everybody okay

00:30:01,890 --> 00:30:09,240
good the one of you who didn't raise

00:30:04,500 --> 00:30:11,280
your hand poo on you so at this point I

00:30:09,240 --> 00:30:13,440
you know product drbd will show

00:30:11,280 --> 00:30:14,910
information on how much of the volumes

00:30:13,440 --> 00:30:17,720
been synced after you've run this

00:30:14,910 --> 00:30:20,790
command and you know how fast it's going

00:30:17,720 --> 00:30:23,400
there's a lot of different options you

00:30:20,790 --> 00:30:26,580
can use which I don't have room to go

00:30:23,400 --> 00:30:28,470
over or time but you know they can speed

00:30:26,580 --> 00:30:32,130
it up they can slow it down you can say

00:30:28,470 --> 00:30:36,630
we want to deal in blocks that are 4096

00:30:32,130 --> 00:30:40,110
in size or you know 65 536 I think

00:30:36,630 --> 00:30:42,720
that's right you know you can say it's

00:30:40,110 --> 00:30:44,790
just like DD everyone familiar with DD

00:30:42,720 --> 00:30:47,100
you know you've got bite-size block

00:30:44,790 --> 00:30:50,280
count that sort of thing it's the same

00:30:47,100 --> 00:30:52,200
sort of situation with a drbd you can

00:30:50,280 --> 00:30:55,050
say read this much data send this much

00:30:52,200 --> 00:30:56,820
died at a time and you know play with

00:30:55,050 --> 00:31:01,190
your speed that way and you can achieve

00:30:56,820 --> 00:31:04,440
very good performance with such tweaks

00:31:01,190 --> 00:31:11,040
so now we want to make a dr BTW and

00:31:04,440 --> 00:31:13,140
heartbeat play nice drbd volumes like i

00:31:11,040 --> 00:31:19,710
said they'll be Martinus primary or

00:31:13,140 --> 00:31:22,760
secondary and i'm good on time man you

00:31:19,710 --> 00:31:25,590
can only actually read from the primary

00:31:22,760 --> 00:31:27,600
dr BTW in the colonel will block you

00:31:25,590 --> 00:31:29,640
from mounting that file system if it's

00:31:27,600 --> 00:31:31,380
the secondary it'll block you from doing

00:31:29,640 --> 00:31:34,290
all kinds of crap because it wants

00:31:31,380 --> 00:31:35,790
exclusive read and write access to it

00:31:34,290 --> 00:31:38,280
really it's not even concerned about

00:31:35,790 --> 00:31:41,130
reads when it's the secondary it's only

00:31:38,280 --> 00:31:42,660
concerned about right so you know if you

00:31:41,130 --> 00:31:48,300
have a complete failure a complete

00:31:42,660 --> 00:31:50,010
meltdown reading excuse me unless you

00:31:48,300 --> 00:31:52,890
have a meltdown on that sick on that

00:31:50,010 --> 00:31:55,260
first box or specifically fell over to

00:31:52,890 --> 00:31:56,970
the second one you can't actually read

00:31:55,260 --> 00:32:03,420
that data on that second when all you

00:31:56,970 --> 00:32:06,060
can do is read the block device when we

00:32:03,420 --> 00:32:10,320
have our primary system in my example it

00:32:06,060 --> 00:32:12,990
will be H a proxy 01 when it fails the

00:32:10,320 --> 00:32:15,690
secondary system H a proxy 02

00:32:12,990 --> 00:32:17,730
it must take over as the primary you

00:32:15,690 --> 00:32:20,760
have to tell it essentially hey take

00:32:17,730 --> 00:32:23,990
over as the primary how do we accomplish

00:32:20,760 --> 00:32:26,730
that heartbeats what allows us to do it

00:32:23,990 --> 00:32:29,010
and then when a failed system comes back

00:32:26,730 --> 00:32:31,580
online remember when we were talking

00:32:29,010 --> 00:32:33,809
about Otto fell back being on or off

00:32:31,580 --> 00:32:36,870
this is one of the reasons why you would

00:32:33,809 --> 00:32:39,300
want to be off because say you know HTTP

00:32:36,870 --> 00:32:41,940
proxy 01 it goes offline it's all for a

00:32:39,300 --> 00:32:44,880
day a cheap roxio two picks up

00:32:41,940 --> 00:32:46,830
everything's fine and dandy and

00:32:44,880 --> 00:32:49,920
continues to work but we get a whole

00:32:46,830 --> 00:32:54,090
day's worth of updates to it we don't

00:32:49,920 --> 00:32:56,309
then won't oh one to come back and spin

00:32:54,090 --> 00:32:58,440
up and take over without that day's

00:32:56,309 --> 00:33:01,710
activity that day's activity could be

00:32:58,440 --> 00:33:05,820
forever lost to us once a one starts

00:33:01,710 --> 00:33:07,790
sending rights to the secondary so when

00:33:05,820 --> 00:33:10,770
a when a failed system comes back online

00:33:07,790 --> 00:33:13,070
it has to come up as a secondary if you

00:33:10,770 --> 00:33:16,980
care at all about that data and then

00:33:13,070 --> 00:33:19,200
sink that entire partitions data and

00:33:16,980 --> 00:33:21,750
it's not even that entire partitions

00:33:19,200 --> 00:33:24,780
data is that entire partition if it is a

00:33:21,750 --> 00:33:27,510
200 gig partition with 50 kilobytes of

00:33:24,780 --> 00:33:31,890
data on it it has to sink that 200 gig

00:33:27,510 --> 00:33:33,990
partition because drbd has no idea what

00:33:31,890 --> 00:33:39,300
is actually on there oh it sees it

00:33:33,990 --> 00:33:42,660
zeroes and ones and blogs so how do we

00:33:39,300 --> 00:33:44,790
tell heartbeat what to do if you'll

00:33:42,660 --> 00:33:47,160
recall from our earlier example where we

00:33:44,790 --> 00:33:52,550
had the hair resources file and again I

00:33:47,160 --> 00:33:55,470
said it's a che resources this is where

00:33:52,550 --> 00:33:58,500
drbd disk it's sort of the service and

00:33:55,470 --> 00:34:01,170
now we have all these fancy colons and

00:33:58,500 --> 00:34:02,970
stuff we have to tell it you know

00:34:01,170 --> 00:34:05,630
various options that's how that's

00:34:02,970 --> 00:34:08,010
accomplished into a che resources file I

00:34:05,630 --> 00:34:11,090
don't have time to go through all of it

00:34:08,010 --> 00:34:13,800
but basically this is saying drbd disk

00:34:11,090 --> 00:34:16,320
resource one and if we look back at our

00:34:13,800 --> 00:34:20,010
config file you can see again we're

00:34:16,320 --> 00:34:23,909
resource one here go ahead spin that up

00:34:20,010 --> 00:34:26,520
let's be let's become primary now file

00:34:23,909 --> 00:34:28,919
system this is saying hey

00:34:26,520 --> 00:34:31,440
now I want the mount of filesystem the

00:34:28,919 --> 00:34:34,409
file system I want to mount is dead drbd

00:34:31,440 --> 00:34:36,570
0 and I want to mount it on Mount

00:34:34,409 --> 00:34:38,760
because that's the only place I can

00:34:36,570 --> 00:34:43,080
think to put a fictitious file system

00:34:38,760 --> 00:34:45,360
and the file system type is ext3 you can

00:34:43,080 --> 00:34:49,470
actually avoid some of this by putting

00:34:45,360 --> 00:34:51,630
this as an option in its the fstab you

00:34:49,470 --> 00:34:55,590
know you want to be you want to use the

00:34:51,630 --> 00:34:59,970
note auto mount option in fstab or FS

00:34:55,590 --> 00:35:04,020
tab whatever yeah don't make fun of me

00:34:59,970 --> 00:35:05,160
I'm the one up here speaking but yeah

00:35:04,020 --> 00:35:06,690
you could you could put all that

00:35:05,160 --> 00:35:11,880
information in there for the most part

00:35:06,690 --> 00:35:13,470
and just say hey mount /em NT but I

00:35:11,880 --> 00:35:15,930
figured I'd give you the long version

00:35:13,470 --> 00:35:20,580
because you came here to you know hear

00:35:15,930 --> 00:35:24,840
me talk so what that says is when H a

00:35:20,580 --> 00:35:27,270
proxy does the fell over run these

00:35:24,840 --> 00:35:29,970
commands spin up the resource one make

00:35:27,270 --> 00:35:32,310
it the primary mount the file system and

00:35:29,970 --> 00:35:33,480
that's all we're doing here typically

00:35:32,310 --> 00:35:35,850
you would want to do something

00:35:33,480 --> 00:35:38,700
additional like say starts on but start

00:35:35,850 --> 00:35:41,250
NFS start you know some other network

00:35:38,700 --> 00:35:43,800
file system but you know for purposes of

00:35:41,250 --> 00:35:49,020
this talk we're just worried about you

00:35:43,800 --> 00:35:51,630
know spending up drbd so like I said HEA

00:35:49,020 --> 00:35:53,610
resources that's what tells heartbeat

00:35:51,630 --> 00:35:56,760
what services are being managed once

00:35:53,610 --> 00:35:59,580
again it's sort of you know your most

00:35:56,760 --> 00:36:01,110
important file more or less once you get

00:35:59,580 --> 00:36:02,040
the other set up this is probably the

00:36:01,110 --> 00:36:03,780
only one you're going to be making

00:36:02,040 --> 00:36:06,120
changes in because you're going to be

00:36:03,780 --> 00:36:09,180
adding more services that you want to

00:36:06,120 --> 00:36:12,300
change and you know there's a lot of

00:36:09,180 --> 00:36:14,220
different options to it like right here

00:36:12,300 --> 00:36:16,700
on H a resources we could add you know

00:36:14,220 --> 00:36:19,710
even more lines and say run this script

00:36:16,700 --> 00:36:23,160
run this additional service run this

00:36:19,710 --> 00:36:25,380
script with these options to it you know

00:36:23,160 --> 00:36:27,030
with these arguments things of that

00:36:25,380 --> 00:36:30,390
nature so it's a very powerful thing

00:36:27,030 --> 00:36:33,450
it's basically think of it like expect

00:36:30,390 --> 00:36:34,980
for the network we're sitting here you

00:36:33,450 --> 00:36:37,500
know waiting for something and then when

00:36:34,980 --> 00:36:40,020
something happens BAM we do all this or

00:36:37,500 --> 00:36:41,460
think of it as a while loop that

00:36:40,020 --> 00:36:44,850
you know waiting for a condition to be

00:36:41,460 --> 00:36:51,420
true and then once it's true we exit and

00:36:44,850 --> 00:36:54,720
do all this crap make sense so you know

00:36:51,420 --> 00:36:56,460
more on a che resources typically you

00:36:54,720 --> 00:37:01,080
know shared IP addresses share file

00:36:56,460 --> 00:37:03,270
systems network services because when we

00:37:01,080 --> 00:37:06,000
won't high availability systems we tend

00:37:03,270 --> 00:37:08,220
not to care if your desktop crashes I

00:37:06,000 --> 00:37:10,290
mean it might inconvenience you but it

00:37:08,220 --> 00:37:12,800
doesn't inconvenience anyone else and

00:37:10,290 --> 00:37:16,170
having us set up you know two

00:37:12,800 --> 00:37:17,580
workstations for you with seamless fell

00:37:16,170 --> 00:37:20,670
over and all that stuff that's just too

00:37:17,580 --> 00:37:22,650
much work for too little game you know

00:37:20,670 --> 00:37:25,350
call the helpdesk get them to fix your

00:37:22,650 --> 00:37:30,300
windows box and you know go on about

00:37:25,350 --> 00:37:31,560
your business many services again I

00:37:30,300 --> 00:37:33,180
touched on this a little bit earlier

00:37:31,560 --> 00:37:35,760
they don't need to be started or stopped

00:37:33,180 --> 00:37:40,160
by heartbeat and can simply run all the

00:37:35,760 --> 00:37:44,490
time again you know if it's listening on

00:37:40,160 --> 00:37:46,020
all interfaces you don't have to you

00:37:44,490 --> 00:37:48,720
know start or stop it you just let it

00:37:46,020 --> 00:37:50,340
run all the time you might also want to

00:37:48,720 --> 00:37:52,530
start and stop it in case you know it

00:37:50,340 --> 00:37:55,680
crashes you know you don't want your

00:37:52,530 --> 00:37:58,350
secondary apache server to crash a month

00:37:55,680 --> 00:38:00,450
or so ago and nobody realizes it because

00:37:58,350 --> 00:38:02,760
nobody's pointing at it and then

00:38:00,450 --> 00:38:06,210
suddenly it picks up the IP address and

00:38:02,760 --> 00:38:07,710
bam there's nothing listening there but

00:38:06,210 --> 00:38:08,910
you know more or less when you have

00:38:07,710 --> 00:38:12,870
something like that you can just share

00:38:08,910 --> 00:38:15,000
the IP address but different things and

00:38:12,870 --> 00:38:19,350
we'll go back to our load balancer

00:38:15,000 --> 00:38:22,050
example here you want to spin up only

00:38:19,350 --> 00:38:28,950
when it's the active node for example H

00:38:22,050 --> 00:38:32,670
a proxy is a TCP and HTTP HTTP proxy

00:38:28,950 --> 00:38:34,920
server load balances between multiple

00:38:32,670 --> 00:38:39,030
boxes so we have four web servers we're

00:38:34,920 --> 00:38:40,140
low bouncing between them and H a proxy

00:38:39,030 --> 00:38:43,560
we want to make high availability

00:38:40,140 --> 00:38:47,190
because you know we're pointing everyone

00:38:43,560 --> 00:38:49,920
at dot 3 dot 4 and dot 5 those r rh a

00:38:47,190 --> 00:38:52,740
proxy interfaces going to i don't know

00:38:49,920 --> 00:38:53,850
maybe 16 different web servers if you go

00:38:52,740 --> 00:38:56,190
to dot 3

00:38:53,850 --> 00:38:58,740
get sent to you know these for web

00:38:56,190 --> 00:39:01,020
servers which do your plum environment

00:38:58,740 --> 00:39:03,570
if you go to dot for it goes to these

00:39:01,020 --> 00:39:05,790
two which are just you know static web

00:39:03,570 --> 00:39:09,750
servers you know serving static images

00:39:05,790 --> 00:39:11,700
or whatnot so you know depending on

00:39:09,750 --> 00:39:13,170
something like that you can't have it

00:39:11,700 --> 00:39:15,990
listening all the time because that

00:39:13,170 --> 00:39:18,270
interface isn't up you know you can say

00:39:15,990 --> 00:39:21,150
listen on everything and then when it

00:39:18,270 --> 00:39:22,440
spins one up it you know listens on it

00:39:21,150 --> 00:39:25,560
as well because it's listening on

00:39:22,440 --> 00:39:27,780
anything but if you want if you want to

00:39:25,560 --> 00:39:30,210
handle things differently by what IP

00:39:27,780 --> 00:39:32,520
address it hits then you basically have

00:39:30,210 --> 00:39:39,020
to start those systems those services up

00:39:32,520 --> 00:39:42,060
once you have a failover event oh yeah

00:39:39,020 --> 00:39:47,100
that's uh oh yeah like I said halfway

00:39:42,060 --> 00:39:48,600
drunk while i was doing this that was

00:39:47,100 --> 00:39:52,800
supposed to be the questions and

00:39:48,600 --> 00:39:54,990
comments tab thankfully i did not make

00:39:52,800 --> 00:39:58,020
it too much longer because I got a

00:39:54,990 --> 00:39:59,790
little love gypped on my time today but

00:39:58,020 --> 00:40:01,950
uh you know what kind of questions has

00:39:59,790 --> 00:40:05,330
anybody got cuz you know bounce off of

00:40:01,950 --> 00:40:05,330
me yeah go ahead

00:40:19,099 --> 00:40:25,410
okay what he's asking about is let's say

00:40:23,490 --> 00:40:28,290
we have three servers and we need two of

00:40:25,410 --> 00:40:32,369
them to be up at all times so we have

00:40:28,290 --> 00:40:35,010
active active and passive such things

00:40:32,369 --> 00:40:38,070
are doable they're complicated they're

00:40:35,010 --> 00:40:39,990
not easy to do and often that's when you

00:40:38,070 --> 00:40:41,700
have something like broadcast you know

00:40:39,990 --> 00:40:45,450
when you're doing that kind of many

00:40:41,700 --> 00:40:47,580
different ones lots of times because of

00:40:45,450 --> 00:40:50,670
the additional complexity people will

00:40:47,580 --> 00:40:52,710
just have a active active and then two

00:40:50,670 --> 00:40:57,119
secondaries and those two actives will

00:40:52,710 --> 00:40:58,980
point at different secondaries so you

00:40:57,119 --> 00:41:02,010
know that that doesn't help you if

00:40:58,980 --> 00:41:05,210
active and secondary fail but neither

00:41:02,010 --> 00:41:07,710
does you know only having three systems

00:41:05,210 --> 00:41:09,300
the downside there is you have to have

00:41:07,710 --> 00:41:13,830
additional resources sitting there on

00:41:09,300 --> 00:41:17,240
standby that might be doable in a highly

00:41:13,830 --> 00:41:21,390
virtualized environment it might not be

00:41:17,240 --> 00:41:22,950
so you know it is doable but it's

00:41:21,390 --> 00:41:32,089
complex I think there was another

00:41:22,950 --> 00:41:32,089
question about here yo

00:41:37,180 --> 00:41:45,860
okay his question was you know we talked

00:41:42,530 --> 00:41:49,040
a lot about doing data replication from

00:41:45,860 --> 00:41:51,200
box to box by the network what about

00:41:49,040 --> 00:41:53,630
fiber channel replication where

00:41:51,200 --> 00:41:56,660
essentially you have one physical disk

00:41:53,630 --> 00:42:00,190
on fibre channel hooked up to two or

00:41:56,660 --> 00:42:02,870
more physical systems or virtual systems

00:42:00,190 --> 00:42:09,770
that is doable and a lot of people do it

00:42:02,870 --> 00:42:12,160
it's expensive as crap though well it's

00:42:09,770 --> 00:42:15,440
been a while since I looked at it but

00:42:12,160 --> 00:42:17,540
again it depends largely if you have a

00:42:15,440 --> 00:42:19,340
highly virtualized environment like I'm

00:42:17,540 --> 00:42:20,900
used to working with that's you know not

00:42:19,340 --> 00:42:23,000
necessarily an option because you don't

00:42:20,900 --> 00:42:25,670
necessarily have physical Hardware on

00:42:23,000 --> 00:42:27,410
the actual boxes that need it but yeah

00:42:25,670 --> 00:42:30,110
that is an option fibre channel is a

00:42:27,410 --> 00:42:32,180
great option for something like that the

00:42:30,110 --> 00:42:33,830
one thing you have to worry about is you

00:42:32,180 --> 00:42:36,830
know the secondary box doing some sort

00:42:33,830 --> 00:42:41,960
of ride on it at the same time but again

00:42:36,830 --> 00:42:46,220
and here's another thing you're when

00:42:41,960 --> 00:42:49,220
you're using fibre channel to distribute

00:42:46,220 --> 00:42:52,160
the same data across you know an active

00:42:49,220 --> 00:42:56,000
and a passive system you know your fell

00:42:52,160 --> 00:42:57,830
over your fibre channel device that's

00:42:56,000 --> 00:43:00,290
potentially another single point of

00:42:57,830 --> 00:43:01,970
failure because if it fails it doesn't

00:43:00,290 --> 00:43:03,770
matter what these two boxes are doing

00:43:01,970 --> 00:43:15,850
because they don't have access to that

00:43:03,770 --> 00:43:15,850
data is that you know yeah

00:43:22,770 --> 00:43:30,520
right that's almost like right that's

00:43:28,060 --> 00:43:32,830
almost almost like a clustering file

00:43:30,520 --> 00:43:36,670
system but you don't have individual

00:43:32,830 --> 00:43:38,470
file or block locking fibre channel in

00:43:36,670 --> 00:43:41,080
that situation i'm not entirely sure

00:43:38,470 --> 00:43:43,150
i've never done it i know some people do

00:43:41,080 --> 00:43:46,960
i don't have access to the actual

00:43:43,150 --> 00:43:49,210
devices but yeah there's there's a

00:43:46,960 --> 00:43:50,800
service you run that says you know let

00:43:49,210 --> 00:43:54,250
me run this service with this argument

00:43:50,800 --> 00:43:55,900
and it will turn on fibre channel for me

00:43:54,250 --> 00:43:59,050
and that fiber channel device will

00:43:55,900 --> 00:44:01,480
immediately say hey this one's requested

00:43:59,050 --> 00:44:05,640
something you know i'll make it the

00:44:01,480 --> 00:44:05,640
active and shut off the secondary box

00:44:06,000 --> 00:44:09,820
you know there's so many other great

00:44:08,140 --> 00:44:11,650
things that i wanted to touch on and I

00:44:09,820 --> 00:44:14,380
just forgot to put into this thing like

00:44:11,650 --> 00:44:19,540
stone a--the does anybody have any idea

00:44:14,380 --> 00:44:21,490
what stone it means not you stone earth

00:44:19,540 --> 00:44:24,640
is an acronym and it's my very favorite

00:44:21,490 --> 00:44:29,350
acronym in the world it means shoot the

00:44:24,640 --> 00:44:31,690
other node in the head so it's a way of

00:44:29,350 --> 00:44:37,450
saying hey I'm the secondary box I won't

00:44:31,690 --> 00:44:43,119
be the primary bang you're dead that's

00:44:37,450 --> 00:44:50,230
just beautiful uh-uh you had another

00:44:43,119 --> 00:44:52,359
question sir well it's not encryption

00:44:50,230 --> 00:44:53,560
because if we look at the thing here let

00:44:52,359 --> 00:44:56,320
me go back and find the right thing

00:44:53,560 --> 00:44:58,869
you'll see it's just a sha-1 song it's

00:44:56,320 --> 00:45:01,150
not really you know like a full public

00:44:58,869 --> 00:45:04,810
private encryption key thing is it's not

00:45:01,150 --> 00:45:07,330
the greatest in the world but yeah it's

00:45:04,810 --> 00:45:09,490
it doesn't encrypt the data being going

00:45:07,330 --> 00:45:12,580
back and forth but it does you know

00:45:09,490 --> 00:45:17,820
basically apply hash based on that and

00:45:12,580 --> 00:45:20,830
you know to legitimize it so what

00:45:17,820 --> 00:45:24,270
exactly exactly it's more like a

00:45:20,830 --> 00:45:27,480
password key than a encryption key

00:45:24,270 --> 00:45:27,480
somebody else

00:45:33,640 --> 00:45:40,760
that's a good question i do not know the

00:45:35,960 --> 00:45:45,080
answer to that oh yeah sorry the

00:45:40,760 --> 00:45:47,930
question was was the data uh you know

00:45:45,080 --> 00:45:50,180
encrypted as it going across the thing

00:45:47,930 --> 00:45:51,770
well with heartbeat it more or less

00:45:50,180 --> 00:45:53,570
doesn't matter for the most part because

00:45:51,770 --> 00:45:56,560
there's not really really any real data

00:45:53,570 --> 00:45:59,000
going unless you're talking about drbd

00:45:56,560 --> 00:46:02,690
because it's just saying hey I'm alive

00:45:59,000 --> 00:46:04,640
hey I'm alive hey I'm alive and then

00:46:02,690 --> 00:46:16,910
when you stop seeing those it you know

00:46:04,640 --> 00:46:18,770
dies yeah that's a good point what he

00:46:16,910 --> 00:46:22,580
said is if you were on looks basically

00:46:18,770 --> 00:46:25,580
hard hard hard drive partition

00:46:22,580 --> 00:46:27,020
encryption and Linux you know the data

00:46:25,580 --> 00:46:29,990
going back and forth would be encrypted

00:46:27,020 --> 00:46:32,359
at that point that's a very good point

00:46:29,990 --> 00:46:38,839
that's why he is Patrick Volker Dinkin

00:46:32,359 --> 00:46:41,900
I'm Alan Higgs am I at a time yet oh I

00:46:38,839 --> 00:46:49,490
got a couple minutes left Wow I get to

00:46:41,900 --> 00:46:51,260
you know go ahead his question was have

00:46:49,490 --> 00:46:54,680
I ever used it with openfiler to

00:46:51,260 --> 00:46:56,540
openfiler sands no I have not and

00:46:54,680 --> 00:47:00,650
generally when you start talking about

00:46:56,540 --> 00:47:02,810
sand environments most of those I'm more

00:47:00,650 --> 00:47:05,450
familiar with equal logic than storage

00:47:02,810 --> 00:47:06,910
network or some other things but they

00:47:05,450 --> 00:47:08,990
tend to have their own sort of

00:47:06,910 --> 00:47:12,440
replication strategies which are

00:47:08,990 --> 00:47:14,930
separate from the actual devices that

00:47:12,440 --> 00:47:18,230
run on top of them you can set up one

00:47:14,930 --> 00:47:20,570
you can set up a system where you know

00:47:18,230 --> 00:47:26,510
if it goes down it spins up on another

00:47:20,570 --> 00:47:28,930
San unit in case of San failure but I've

00:47:26,510 --> 00:47:30,830
never had to go quite that far before

00:47:28,930 --> 00:47:34,670
usually if you're talking about

00:47:30,830 --> 00:47:40,280
something that disastrous and trust me I

00:47:34,670 --> 00:47:43,349
know how that disastrous it can be it a

00:47:40,280 --> 00:47:45,690
you don't necessarily mind so much a

00:47:43,349 --> 00:47:48,900
little bit of downtime to go to this

00:47:45,690 --> 00:47:50,849
other thing spin up your volumes spin up

00:47:48,900 --> 00:47:54,619
your systems or your virtual machines or

00:47:50,849 --> 00:47:58,680
whatever on it grab the data that way

00:47:54,619 --> 00:48:02,339
you know it depends on how important

00:47:58,680 --> 00:48:04,799
your stuff is if your bank of america if

00:48:02,339 --> 00:48:06,660
you're running a nuclear missile silo i

00:48:04,799 --> 00:48:08,640
want you to have something that will

00:48:06,660 --> 00:48:12,000
instantaneously transfer between sands

00:48:08,640 --> 00:48:16,250
in case of failure but for most of us

00:48:12,000 --> 00:48:19,859
that's not you know it's a question of

00:48:16,250 --> 00:48:22,380
how likely is it and how difficult and

00:48:19,859 --> 00:48:24,059
expensive it is you know and if you

00:48:22,380 --> 00:48:25,849
multiply those together and it doesn't

00:48:24,059 --> 00:48:28,829
reach you know a certain point that

00:48:25,849 --> 00:48:31,559
you're all that worried about it then

00:48:28,829 --> 00:48:35,819
you know you ignore it and just hope to

00:48:31,559 --> 00:48:38,220
restore from backup somebody else ask a

00:48:35,819 --> 00:48:43,950
question any question a good question

00:48:38,220 --> 00:48:47,280
not a stupid question oh that just kind

00:48:43,950 --> 00:48:54,030
of rule Robbie out didn't it come on

00:48:47,280 --> 00:48:55,799
somebody feed me something a master dns

00:48:54,030 --> 00:49:00,059
server no i have not because i have

00:48:55,799 --> 00:49:05,010
multiple secondaries what's the ? main

00:49:00,059 --> 00:49:07,280
Oh repeat the question crap oh sorry his

00:49:05,010 --> 00:49:12,690
question was have I ever used it to

00:49:07,280 --> 00:49:15,900
protect a master DNS a master dns server

00:49:12,690 --> 00:49:18,299
i have it and the reason for it is the

00:49:15,900 --> 00:49:21,299
dns has a certain amount of this already

00:49:18,299 --> 00:49:23,490
built into it by design the protocol you

00:49:21,299 --> 00:49:26,640
know you have a master you have one or

00:49:23,490 --> 00:49:28,829
more multiple secondary systems so

00:49:26,640 --> 00:49:30,299
generally speaking what you would do is

00:49:28,829 --> 00:49:32,790
you would just have your master online

00:49:30,299 --> 00:49:34,950
you would have your slave online at the

00:49:32,790 --> 00:49:38,280
same time and sort of the active active

00:49:34,950 --> 00:49:41,220
configuration and you know the net load

00:49:38,280 --> 00:49:44,760
balances between the two there are some

00:49:41,220 --> 00:49:47,150
situations where you might want that but

00:49:44,760 --> 00:49:52,280
generally speaking DNS has enough

00:49:47,150 --> 00:49:52,280
replication built into it now go ahead

00:49:55,980 --> 00:50:02,980
okay okay okay and his clarification is

00:50:00,760 --> 00:50:07,260
a minute more is towards the dhcp server

00:50:02,980 --> 00:50:10,390
because the dhcp the dhcp server has to

00:50:07,260 --> 00:50:12,970
communicate with the master dns server

00:50:10,390 --> 00:50:16,780
you're referring to things like to do

00:50:12,970 --> 00:50:20,670
not dynamic dns updates for a particular

00:50:16,780 --> 00:50:23,470
zone or a particular n dash adders on

00:50:20,670 --> 00:50:25,660
I've not done that that's interesting

00:50:23,470 --> 00:50:27,630
but yeah you would pretty much have to

00:50:25,660 --> 00:50:31,240
do something like that in order to have

00:50:27,630 --> 00:50:34,570
you know dhcp systems working properly

00:50:31,240 --> 00:50:37,450
and high availability because now I'm

00:50:34,570 --> 00:50:40,290
down to 30 seconds awesome I can finish

00:50:37,450 --> 00:50:43,450
your question and not ask another

00:50:40,290 --> 00:50:48,130
because in that situation and I

00:50:43,450 --> 00:50:50,859
completely lost track because of you

00:50:48,130 --> 00:50:53,140
know in in dhcp situations you're pretty

00:50:50,859 --> 00:50:58,630
much limited to one dns sir I mean one

00:50:53,140 --> 00:51:00,339
dhcp server per subnet or per segment or

00:50:58,630 --> 00:51:03,280
VLAN or whatever you want to do it ask

00:51:00,339 --> 00:51:05,380
because you know if you have multiple

00:51:03,280 --> 00:51:09,460
ones they don't tend to play nice

00:51:05,380 --> 00:51:15,660
together any other questions you've got

00:51:09,460 --> 00:51:15,660
about 15 seconds come on people 10

00:51:16,080 --> 00:51:20,849
everyone but Rob can leave at this point

00:51:45,720 --> 00:51:49,990
what about this I can help you like it

00:51:48,130 --> 00:51:54,000
we have the same problem what would

00:51:49,990 --> 00:51:54,000
happen if you do you think the ipod

00:51:55,880 --> 00:52:00,450
let's put the word out

00:51:58,390 --> 00:52:00,450
you

00:53:08,220 --> 00:53:14,950
as a service leader in cloud computing

00:53:11,830 --> 00:53:16,540
all we do is hosting computing to us the

00:53:14,950 --> 00:53:18,490
cloud is just the next generation of

00:53:16,540 --> 00:53:20,440
hosting and if someone who's been in the

00:53:18,490 --> 00:53:22,480
hosting industry for 12 years we feel

00:53:20,440 --> 00:53:23,560
we're in a unique position to really

00:53:22,480 --> 00:53:25,690
help bring these two worlds together

00:53:23,560 --> 00:53:28,030
these different sets of technologies and

00:53:25,690 --> 00:53:30,340
to help companies embrace this new world

00:53:28,030 --> 00:53:32,350
in this great new tool that allows

00:53:30,340 --> 00:53:34,930
faster innovation not only is it about

00:53:32,350 --> 00:53:40,530
us being responsive and accountable but

00:53:34,930 --> 00:53:43,170
it's about us doing more for you webos

00:53:40,530 --> 00:53:46,720
nos that works the way that you do

00:53:43,170 --> 00:53:50,880
across all your devices HP Slate and

00:53:46,720 --> 00:53:50,880

YouTube URL: https://www.youtube.com/watch?v=w7WDHvARhcY


