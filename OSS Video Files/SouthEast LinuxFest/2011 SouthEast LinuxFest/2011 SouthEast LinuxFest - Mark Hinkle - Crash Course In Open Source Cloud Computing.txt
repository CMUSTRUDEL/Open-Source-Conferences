Title: 2011 SouthEast LinuxFest - Mark Hinkle - Crash Course In Open Source Cloud Computing
Publication date: 2012-03-01
Playlist: 2011 SouthEast LinuxFest
Description: 
	2011 SouthEast LinuxFest - Mark Hinkle - Crash Course In Open Source Cloud Computing

This video is licensed under Creative Commons Attribution 3.0 Unported License.
Captions: 
	00:00:01,129 --> 00:00:07,290
the following presentation was recorded

00:00:04,200 --> 00:00:09,870
at the 2011 southeast linux fest in

00:00:07,290 --> 00:00:11,370
Spartanburg South Carolina it is

00:00:09,870 --> 00:00:14,190
licensed under a creative commons

00:00:11,370 --> 00:00:18,390
license for more information about the

00:00:14,190 --> 00:00:21,840
southeast linux fest visit www southeast

00:00:18,390 --> 00:00:23,070
linux fest org the southeast linux fest

00:00:21,840 --> 00:00:26,430
would like to thank the following

00:00:23,070 --> 00:00:30,740
diamond and platinum sponsors in 2011

00:00:26,430 --> 00:00:30,740
for helping make these videos possible

00:00:59,840 --> 00:01:07,080
guys here we all right cool all right i

00:01:03,840 --> 00:01:10,320
am mark Hinkel i'm the vp of community

00:01:07,080 --> 00:01:12,060
at cloud com there's a little bit of my

00:01:10,320 --> 00:01:14,370
background but i'm an open source guy

00:01:12,060 --> 00:01:16,770
i've had the privilege to work a lot of

00:01:14,370 --> 00:01:18,630
open source projects i like the idea of

00:01:16,770 --> 00:01:21,620
open source for a lot of reasons but if

00:01:18,630 --> 00:01:24,120
idealistically and pragmatically and

00:01:21,620 --> 00:01:27,390
this is for a long time a big-time

00:01:24,120 --> 00:01:31,470
desktop linux advocate not so much

00:01:27,390 --> 00:01:34,670
anymore but anyhow what we're going to

00:01:31,470 --> 00:01:37,920
talk about today is cloud computing and

00:01:34,670 --> 00:01:40,050
specifically open source tools that

00:01:37,920 --> 00:01:45,450
allow you to accomplish cloud computing

00:01:40,050 --> 00:01:48,479
tasks I put my slides up on SlideShare

00:01:45,450 --> 00:01:50,520
if anybody asked me for the slides

00:01:48,479 --> 00:01:52,590
always forget to let you know that but

00:01:50,520 --> 00:01:54,000
they are on SlideShare and you can

00:01:52,590 --> 00:01:57,780
download them if you want to look at

00:01:54,000 --> 00:01:59,130
them afterwards all right we're going to

00:01:57,780 --> 00:02:01,800
look at quickly I'm going to talk a

00:01:59,130 --> 00:02:03,259
little bit about cloud computing I have

00:02:01,800 --> 00:02:05,369
a pet peeve about cloud computing

00:02:03,259 --> 00:02:06,960
there's a lot of marketing people out

00:02:05,369 --> 00:02:08,940
there that have taken their old busted

00:02:06,960 --> 00:02:10,860
software said it's connected to the

00:02:08,940 --> 00:02:15,450
Internet and that makes it cloud that's

00:02:10,860 --> 00:02:17,010
not the case it's my big pet peeve we're

00:02:15,450 --> 00:02:18,810
going to talk a little bit about

00:02:17,010 --> 00:02:20,190
overview what cloud computing that

00:02:18,810 --> 00:02:22,680
actually is and I'm going to really dive

00:02:20,190 --> 00:02:25,410
into the tools to deploy and manage

00:02:22,680 --> 00:02:29,940
specifically infrastructure as a service

00:02:25,410 --> 00:02:31,170
and finally we'll do a little Q a which

00:02:29,940 --> 00:02:36,300
I think will probably be the most

00:02:31,170 --> 00:02:38,940
valuable to you guys all right so one of

00:02:36,300 --> 00:02:43,470
my favorite cartoons it's a little

00:02:38,940 --> 00:02:46,319
Dilbert about with every new IT trend

00:02:43,470 --> 00:02:48,630
there seems to be a rash of consultants

00:02:46,319 --> 00:02:50,970
telling you about this IT trend that

00:02:48,630 --> 00:02:53,040
have absolutely no experience in the

00:02:50,970 --> 00:02:56,700
field there's a lot of them out there

00:02:53,040 --> 00:02:58,830
and cloud computing hopefully I don't

00:02:56,700 --> 00:03:01,260
fall into that category I'm going to try

00:02:58,830 --> 00:03:03,300
and prove that I know a little bit today

00:03:01,260 --> 00:03:05,400
and try and set you guys down the path

00:03:03,300 --> 00:03:07,590
of I'm going to give you a sort of a

00:03:05,400 --> 00:03:09,120
laundry list and give you a map and then

00:03:07,590 --> 00:03:09,900
afterwards you should be able to go out

00:03:09,120 --> 00:03:11,459
and Google

00:03:09,900 --> 00:03:17,909
and get involved in the communities that

00:03:11,459 --> 00:03:20,189
fit your needs so recently just to give

00:03:17,909 --> 00:03:22,470
you an idea of what people I didn't have

00:03:20,189 --> 00:03:24,480
a great idea of what people wanted to do

00:03:22,470 --> 00:03:26,159
in the cloud you know you see the

00:03:24,480 --> 00:03:27,810
commercials if you work for company it

00:03:26,159 --> 00:03:31,920
gets Gardner research or like cloud this

00:03:27,810 --> 00:03:34,560
cloud back cloud washing is rampant so

00:03:31,920 --> 00:03:38,010
what I did was I I pulled our community

00:03:34,560 --> 00:03:41,549
the bitnami which makes a virtual

00:03:38,010 --> 00:03:43,650
machine images for cloud and zenus user

00:03:41,549 --> 00:03:45,540
communities this spring to get an idea

00:03:43,650 --> 00:03:47,940
of what people's intention was with

00:03:45,540 --> 00:03:49,109
cloud I'm going to publish that survey

00:03:47,940 --> 00:03:53,609
next week but here's some of the

00:03:49,109 --> 00:03:56,010
findings reasons for people to adopt the

00:03:53,609 --> 00:03:57,959
cloud hardware savings was at the top of

00:03:56,010 --> 00:04:00,599
the list I'm going to tell you right now

00:03:57,959 --> 00:04:02,069
I think hardware savings is good but I

00:04:00,599 --> 00:04:04,439
don't think that's the biggest benefit

00:04:02,069 --> 00:04:07,109
in the cloud I think faster deployment

00:04:04,439 --> 00:04:09,209
of infrastructure is a big deal all of a

00:04:07,109 --> 00:04:11,220
sudden the opportunity cost from what it

00:04:09,209 --> 00:04:13,409
takes from having a need till you get

00:04:11,220 --> 00:04:15,359
something deployed that's a big benefit

00:04:13,409 --> 00:04:18,690
how many people here are systems

00:04:15,359 --> 00:04:21,329
management guys okay I think that's a

00:04:18,690 --> 00:04:23,370
huge opportunity for for essence systems

00:04:21,329 --> 00:04:25,260
management because in the past when

00:04:23,370 --> 00:04:27,510
you're working with legacy hardware you

00:04:25,260 --> 00:04:29,490
have you know a mishmash of systems

00:04:27,510 --> 00:04:31,020
things to instrument all of a sudden now

00:04:29,490 --> 00:04:34,020
you've abstract it out all your

00:04:31,020 --> 00:04:39,080
infrastructure into this cloud makes it

00:04:34,020 --> 00:04:45,750
a heterogenous across the whole stack

00:04:39,080 --> 00:04:47,729
finally open source usage I love open

00:04:45,750 --> 00:04:49,979
source I think it's great I like the

00:04:47,729 --> 00:04:51,680
fact that it's supported by users driven

00:04:49,979 --> 00:04:54,870
by users who have real problems to solve

00:04:51,680 --> 00:04:56,669
when I told these people I was happy to

00:04:54,870 --> 00:04:59,400
see how many people use open-source

00:04:56,669 --> 00:05:01,440
whenever possible I think open source

00:04:59,400 --> 00:05:04,229
from an idealistic standpoint is great I

00:05:01,440 --> 00:05:10,940
think from a pragmatic state standpoint

00:05:04,229 --> 00:05:10,940
it's even better what kind of stuff yeah

00:05:13,639 --> 00:05:29,609
yeah yeah so the question was did we

00:05:27,629 --> 00:05:31,769
distinguish between open source and open

00:05:29,609 --> 00:05:35,939
standards and and it was very clearly

00:05:31,769 --> 00:05:37,649
stated that open source software so

00:05:35,939 --> 00:05:40,849
which I think open source today open

00:05:37,649 --> 00:05:43,109
standards are equally important in an

00:05:40,849 --> 00:05:48,899
interoperability and some other reasons

00:05:43,109 --> 00:05:50,459
but anyhow the the types of cloud

00:05:48,899 --> 00:05:53,879
computing that people were planning to

00:05:50,459 --> 00:05:56,339
use this here were compute so that is

00:05:53,879 --> 00:05:59,489
your virtualized machines running in an

00:05:56,339 --> 00:06:02,909
abstracted way in the cloud cloud

00:05:59,489 --> 00:06:04,169
storage which both of those two things

00:06:02,909 --> 00:06:05,699
fall under a category we call

00:06:04,169 --> 00:06:07,079
infrastructure as a service and I'll

00:06:05,699 --> 00:06:09,929
dive into that a little bit later and

00:06:07,079 --> 00:06:11,279
then platform as a service where in the

00:06:09,929 --> 00:06:13,559
infrastructure as a service your

00:06:11,279 --> 00:06:15,299
abstracting your base infrastructure and

00:06:13,559 --> 00:06:19,339
platform and is the service your

00:06:15,299 --> 00:06:19,339
abstracting up to your development layer

00:06:19,909 --> 00:06:24,569
why open source I don't think I really

00:06:22,889 --> 00:06:27,599
need to go into it this deeply because

00:06:24,569 --> 00:06:30,059
we're all it is linux fest but the

00:06:27,599 --> 00:06:33,360
number one thing for me that I i think

00:06:30,059 --> 00:06:34,949
is important is that it is you know you

00:06:33,360 --> 00:06:36,779
put your money where your mouth is you

00:06:34,949 --> 00:06:39,569
can download try and use the software

00:06:36,779 --> 00:06:42,319
and you can interact with other users in

00:06:39,569 --> 00:06:45,029
an open community that's the big thing

00:06:42,319 --> 00:06:46,589
but in the cloud I think it's important

00:06:45,029 --> 00:06:49,229
to have a open data open standards and

00:06:46,589 --> 00:06:51,089
open EP is and open source communities

00:06:49,229 --> 00:06:55,189
generally adhered to the other two

00:06:51,089 --> 00:06:55,189
beyond the all three of those things

00:06:55,740 --> 00:07:02,520
okay so here is the I don't think it's

00:07:00,150 --> 00:07:05,280
clear to everybody what cloud computing

00:07:02,520 --> 00:07:08,190
is just because something is connected

00:07:05,280 --> 00:07:11,220
to the Internet and the public telephone

00:07:08,190 --> 00:07:13,650
cloud it does not mean it's cloud it is

00:07:11,220 --> 00:07:17,599
there's a actual definition and

00:07:13,650 --> 00:07:20,069
characteristics that make things cloud

00:07:17,599 --> 00:07:22,830
there are five characteristics this is

00:07:20,069 --> 00:07:25,889
the definition that is generally

00:07:22,830 --> 00:07:30,120
accepted from the National Institute of

00:07:25,889 --> 00:07:32,370
Standards on-demand self service that is

00:07:30,120 --> 00:07:35,159
that's a key tenet of cloud computing

00:07:32,370 --> 00:07:39,060
you should be able to go to a web page

00:07:35,159 --> 00:07:41,159
or a system and provision your own stuff

00:07:39,060 --> 00:07:44,009
whether it is a virtual machine running

00:07:41,159 --> 00:07:47,099
in Amazon ec2 whether it's virtual

00:07:44,009 --> 00:07:49,380
storage running in rackspace files

00:07:47,099 --> 00:07:50,880
whether it's your own private cloud and

00:07:49,380 --> 00:07:53,849
you have users they should be able to go

00:07:50,880 --> 00:07:57,300
and generate there's their stuff

00:07:53,849 --> 00:08:02,699
whatever that is storage compute power

00:07:57,300 --> 00:08:06,060
etc broad network access they're not

00:08:02,699 --> 00:08:08,340
just a t12 your data center but broad

00:08:06,060 --> 00:08:10,740
high availability network access that is

00:08:08,340 --> 00:08:13,440
one of the characteristics resource

00:08:10,740 --> 00:08:15,120
pooling in the past if you want to look

00:08:13,440 --> 00:08:17,460
at the difference between virtual

00:08:15,120 --> 00:08:19,469
private server and cloud you have a

00:08:17,460 --> 00:08:21,030
single server that's broken up into

00:08:19,469 --> 00:08:23,580
slices and you have virtual machines

00:08:21,030 --> 00:08:26,219
running into it in the cloud you take

00:08:23,580 --> 00:08:28,770
multiple virtualized servers like that

00:08:26,219 --> 00:08:33,950
combine them and it's pulled together

00:08:28,770 --> 00:08:36,810
that's resource pooling rapid elasticity

00:08:33,950 --> 00:08:39,000
graffity elasticity means that the

00:08:36,810 --> 00:08:41,520
amount of compute power and storage and

00:08:39,000 --> 00:08:45,029
other assets are available to you as you

00:08:41,520 --> 00:08:47,430
need them and finally as the as you grow

00:08:45,029 --> 00:08:50,670
and expand and contract that you have

00:08:47,430 --> 00:08:54,630
measured service good example is gmail

00:08:50,670 --> 00:08:56,160
you get 10 gigs of storage free when you

00:08:54,630 --> 00:08:59,430
go over that you have the option to buy

00:08:56,160 --> 00:09:00,779
more when you drop below that you you

00:08:59,430 --> 00:09:02,990
don't have to pay any more but your

00:09:00,779 --> 00:09:05,910
measured and pay based on your usage

00:09:02,990 --> 00:09:07,529
those are the five characteristics now

00:09:05,910 --> 00:09:09,120
when I say measured service even if

00:09:07,529 --> 00:09:10,130
you're not buying from a hosting

00:09:09,120 --> 00:09:13,310
provider but you're using

00:09:10,130 --> 00:09:17,060
an internal private cloud what we call

00:09:13,310 --> 00:09:19,520
private cloud you can now measure by

00:09:17,060 --> 00:09:22,400
user what kind of it resources are being

00:09:19,520 --> 00:09:24,650
used by who and in large enterprises

00:09:22,400 --> 00:09:26,180
they like to do chargebacks understand

00:09:24,650 --> 00:09:30,340
what part of the organization uses it

00:09:26,180 --> 00:09:30,340
and that's that's an appealing thing too

00:09:39,700 --> 00:09:45,950
next thing is service models so I would

00:09:43,970 --> 00:09:48,290
bet that most everybody here uses cloud

00:09:45,950 --> 00:09:51,050
computing in some way shape and form and

00:09:48,290 --> 00:09:53,360
the most common way to use cloud

00:09:51,050 --> 00:09:56,800
computing is in software as a service so

00:09:53,360 --> 00:10:00,700
that would be gmail that would be

00:09:56,800 --> 00:10:03,290
salesforce com that would be Google Docs

00:10:00,700 --> 00:10:05,960
now that's what I call the user cloud

00:10:03,290 --> 00:10:09,110
and users of software you're consuming

00:10:05,960 --> 00:10:11,510
software-as-a-service the next level

00:10:09,110 --> 00:10:13,310
that's a little below that would be the

00:10:11,510 --> 00:10:16,370
development cloud and that's called

00:10:13,310 --> 00:10:20,510
platform-as-a-service examples would be

00:10:16,370 --> 00:10:23,420
Google App Engine Salesforce bought a

00:10:20,510 --> 00:10:26,390
company called her Roku recently that's

00:10:23,420 --> 00:10:29,390
platform-as-a-service wendys a juror

00:10:26,390 --> 00:10:31,550
racks be sites and Red Hat by a company

00:10:29,390 --> 00:10:33,260
called makara which I don't know if it's

00:10:31,550 --> 00:10:35,870
been released an open source yet but it

00:10:33,260 --> 00:10:38,420
probably will be known as red hat and

00:10:35,870 --> 00:10:40,250
these are abstracting out your your

00:10:38,420 --> 00:10:42,350
infrastructure to the development layer

00:10:40,250 --> 00:10:47,900
to the platform so you can develop your

00:10:42,350 --> 00:10:48,980
Ruby Python Java apps as a developer and

00:10:47,900 --> 00:10:51,500
not have to worry about the underlying

00:10:48,980 --> 00:10:54,100
infrastructure should scale to meet your

00:10:51,500 --> 00:10:57,020
needs and they've abstracted that to you

00:10:54,100 --> 00:10:58,730
at the bottom of the level is the

00:10:57,020 --> 00:11:00,710
system's cloud or infrastructure as a

00:10:58,730 --> 00:11:03,860
service this is abstracted

00:11:00,710 --> 00:11:08,600
virtualization and compute networking

00:11:03,860 --> 00:11:13,810
falls in there two examples anybody here

00:11:08,600 --> 00:11:18,590
use Amazon ec2 anybody used amazon s3

00:11:13,810 --> 00:11:21,140
those are both IAS

00:11:18,590 --> 00:11:24,260
rackspace cloud files that's an example

00:11:21,140 --> 00:11:30,020
OpenStack is a project sponsored by red

00:11:24,260 --> 00:11:32,680
hat or I'm sorry Rackspace cloud com

00:11:30,020 --> 00:11:35,450
delivers that eucalyptus Ubuntu

00:11:32,680 --> 00:11:39,410
OpenNebula so these are the service

00:11:35,450 --> 00:11:42,280
models not to be confused with the

00:11:39,410 --> 00:11:45,140
deployment models and a very simple

00:11:42,280 --> 00:11:48,500
level you have public private and hybrid

00:11:45,140 --> 00:11:51,110
clouds public cloud applies that it's

00:11:48,500 --> 00:11:53,440
hosted out by someone else and you

00:11:51,110 --> 00:11:55,730
access it outside of your firewall

00:11:53,440 --> 00:11:57,230
private cloud that's your cloud

00:11:55,730 --> 00:11:58,970
computing infrastructure that you use

00:11:57,230 --> 00:12:01,550
when you're in hardware behind the

00:11:58,970 --> 00:12:03,350
firewall and then there's the hybrid

00:12:01,550 --> 00:12:06,710
cloud and this is what I think is

00:12:03,350 --> 00:12:09,410
probably going to be the like and give

00:12:06,710 --> 00:12:11,090
you example of he does that farm bill

00:12:09,410 --> 00:12:13,160
okay the company's Zynga the gaming

00:12:11,090 --> 00:12:16,460
company they do mafia wars and farmville

00:12:13,160 --> 00:12:20,660
on all those facebook games they do a

00:12:16,460 --> 00:12:22,400
hybrid cloud so they when they have

00:12:20,660 --> 00:12:25,040
steady demand they're running it in

00:12:22,400 --> 00:12:26,870
their private cloud at seven o'clock or

00:12:25,040 --> 00:12:29,240
eight o'clock after people get home from

00:12:26,870 --> 00:12:30,950
work and start playing farmville I guess

00:12:29,240 --> 00:12:33,260
everybody plays farmville all day from

00:12:30,950 --> 00:12:34,850
apparently from facebook but the bulk of

00:12:33,260 --> 00:12:38,000
their traffic comes in they can level

00:12:34,850 --> 00:12:41,210
that by offloading some of that compete

00:12:38,000 --> 00:12:43,160
demand out to Amazon and other places so

00:12:41,210 --> 00:12:47,000
it's a they're using it for load

00:12:43,160 --> 00:12:50,230
balancing within the public cloud people

00:12:47,000 --> 00:12:52,670
also do virtual private cloud which is

00:12:50,230 --> 00:12:55,220
sort of security ring around private

00:12:52,670 --> 00:12:56,600
cloud it is a term that's used I don't

00:12:55,220 --> 00:12:58,160
know that the distinction needs to be

00:12:56,600 --> 00:12:59,630
there but if you hear that they're

00:12:58,160 --> 00:13:02,720
probably meaning that there is a

00:12:59,630 --> 00:13:05,450
firewalled hosted cloud out there may be

00:13:02,720 --> 00:13:08,750
within terremark is a big enterprise

00:13:05,450 --> 00:13:14,810
cloud company that offers these kind of

00:13:08,750 --> 00:13:19,160
services alright so that was clouds so

00:13:14,810 --> 00:13:21,160
makes sense we have sass pass IAS you

00:13:19,160 --> 00:13:25,550
can pronounce that how you would but

00:13:21,160 --> 00:13:29,270
sounds like earth and then the service

00:13:25,550 --> 00:13:31,980
models so now I'm going to cover the

00:13:29,270 --> 00:13:34,110
different open-source software out there

00:13:31,980 --> 00:13:41,370
available for you to create your own

00:13:34,110 --> 00:13:43,260
cloud and managed that cloud cloud

00:13:41,370 --> 00:13:45,660
computing still requires our contextual

00:13:43,260 --> 00:13:49,320
design so when I first started hearing

00:13:45,660 --> 00:13:50,820
this cloud stuff I had decided like the

00:13:49,320 --> 00:13:52,860
way it was described to me as I have

00:13:50,820 --> 00:13:55,470
this web app and i just upload it to the

00:13:52,860 --> 00:13:57,180
cloud and all of a sudden that a web app

00:13:55,470 --> 00:13:59,880
scales forever it's highly available

00:13:57,180 --> 00:14:03,390
it's from you know backed up it just it

00:13:59,880 --> 00:14:06,450
runs like magic that is not cloud

00:14:03,390 --> 00:14:08,790
computing yet you still have to have

00:14:06,450 --> 00:14:11,640
design points some then anybody see a

00:14:08,790 --> 00:14:14,760
couple yes last month there was a big

00:14:11,640 --> 00:14:18,300
outage in Amazon okay foursquare was

00:14:14,760 --> 00:14:19,950
down so you know amazon was at fault

00:14:18,300 --> 00:14:24,210
because there was there's a problem with

00:14:19,950 --> 00:14:25,950
their RDS in their data center east but

00:14:24,210 --> 00:14:29,090
the users were just as much as fault

00:14:25,950 --> 00:14:31,320
because they didn't do some things that

00:14:29,090 --> 00:14:33,540
constitute good architecture which we

00:14:31,320 --> 00:14:38,370
mean having multiple geographic

00:14:33,540 --> 00:14:40,410
locations so they had all their stuff in

00:14:38,370 --> 00:14:42,660
the data set the eastern US data center

00:14:40,410 --> 00:14:44,070
that data center had a problem and they

00:14:42,660 --> 00:14:46,590
didn't have any load balancing the

00:14:44,070 --> 00:14:48,090
distribution across multiple data

00:14:46,590 --> 00:14:50,360
centers that's not might not be

00:14:48,090 --> 00:14:52,170
practicable for everybody in every app

00:14:50,360 --> 00:14:53,880
but if you have a service based

00:14:52,170 --> 00:14:56,700
application with millions of users I

00:14:53,880 --> 00:14:58,110
think that's pretty practical so you

00:14:56,700 --> 00:15:00,000
still have to have some rigor in your

00:14:58,110 --> 00:15:01,410
design you have to have if you need

00:15:00,000 --> 00:15:05,270
redundant storage you have to plan for

00:15:01,410 --> 00:15:05,270
it if you need to have geographical

00:15:07,580 --> 00:15:12,060
multiple geographic geography served you

00:15:10,290 --> 00:15:14,610
should distribute your data center as

00:15:12,060 --> 00:15:18,120
much as you can across the cloud the

00:15:14,610 --> 00:15:20,430
also cloud is not a magic one size fits

00:15:18,120 --> 00:15:21,870
all thing you got to figure out what

00:15:20,430 --> 00:15:25,020
you're going to do at the end of the day

00:15:21,870 --> 00:15:26,970
and typically the use cases that I see

00:15:25,020 --> 00:15:29,280
that are popular the ones that are

00:15:26,970 --> 00:15:30,780
publicized right now are like the

00:15:29,280 --> 00:15:32,490
Twitter's of the world and the zingos of

00:15:30,780 --> 00:15:35,340
the world doing these high-performance

00:15:32,490 --> 00:15:38,790
computing or not high performance

00:15:35,340 --> 00:15:41,070
computing high volume websites the other

00:15:38,790 --> 00:15:44,230
use case that I see that's very popular

00:15:41,070 --> 00:15:46,000
is sort of the dev test lab where people

00:15:44,230 --> 00:15:48,580
their development their test in their

00:15:46,000 --> 00:15:50,500
production and they have a way to make

00:15:48,580 --> 00:15:52,840
their infrastructure consistent across

00:15:50,500 --> 00:15:54,400
all three labs scale them out and move

00:15:52,840 --> 00:15:55,840
them from production that's what I think

00:15:54,400 --> 00:15:57,400
the system in the straight errs of the

00:15:55,840 --> 00:16:01,060
world the regular IT guys are going to

00:15:57,400 --> 00:16:02,830
see as their private cloud first there's

00:16:01,060 --> 00:16:05,500
other there's other use cases and

00:16:02,830 --> 00:16:09,310
there's but this is a two I think our

00:16:05,500 --> 00:16:11,920
are good examples one is a very public

00:16:09,310 --> 00:16:14,200
facing hyper scalable high-volume kind

00:16:11,920 --> 00:16:15,940
of thing and then one is just the next

00:16:14,200 --> 00:16:17,680
evolution of what you're probably doing

00:16:15,940 --> 00:16:21,700
with virtualization in your data center

00:16:17,680 --> 00:16:23,020
already but as I said you got to design

00:16:21,700 --> 00:16:24,940
your architecture with the end of mine

00:16:23,020 --> 00:16:26,200
the other thing and I'm going to touch

00:16:24,940 --> 00:16:29,700
on this when i get to the tool section

00:16:26,200 --> 00:16:33,160
quite a bit is make your infrastructure

00:16:29,700 --> 00:16:36,030
replicable can you rebuild every part of

00:16:33,160 --> 00:16:38,620
your data center very quickly and I mean

00:16:36,030 --> 00:16:41,380
abstracting out all your server

00:16:38,620 --> 00:16:44,200
configurations adding your packages and

00:16:41,380 --> 00:16:47,170
if a data center goes down or you need

00:16:44,200 --> 00:16:53,590
to scale up you can do that without a

00:16:47,170 --> 00:16:56,530
lot of overhead so when we talk about

00:16:53,590 --> 00:16:57,970
the compute cloud at the very bottom

00:16:56,530 --> 00:16:59,290
level the thing that you're going to

00:16:57,970 --> 00:17:02,050
have to do is make a decision on

00:16:59,290 --> 00:17:06,340
hypervisors I'm going to talk about the

00:17:02,050 --> 00:17:09,490
open-source hypervisors Zhen Zhen cloud

00:17:06,340 --> 00:17:12,790
platform and kvm are going to be the two

00:17:09,490 --> 00:17:16,660
most popular open-source hypervisors to

00:17:12,790 --> 00:17:20,520
do compete clouds right now virtualbox

00:17:16,660 --> 00:17:23,140
how many people here use virtualbox I

00:17:20,520 --> 00:17:25,630
VirtualBox is a good you know single

00:17:23,140 --> 00:17:27,760
server virtualization solution desktop

00:17:25,630 --> 00:17:29,230
virtualization solution I don't know

00:17:27,760 --> 00:17:30,310
that virtual box is going to be the

00:17:29,230 --> 00:17:32,530
hypervisor you're going to want to

00:17:30,310 --> 00:17:34,060
choose for the cloud some of the cloud

00:17:32,530 --> 00:17:37,180
compute environments out there do

00:17:34,060 --> 00:17:39,670
support it but I don't think for

00:17:37,180 --> 00:17:42,010
high-performance cloud computing you're

00:17:39,670 --> 00:17:45,460
going to see VirtualBox openvz does

00:17:42,010 --> 00:17:48,730
anybody use openvz if in VZ is really

00:17:45,460 --> 00:17:51,520
interesting because it's a it's it's

00:17:48,730 --> 00:17:53,080
great for people they're running a lot

00:17:51,520 --> 00:17:55,360
of the same application over and over

00:17:53,080 --> 00:17:57,520
and there's some interesting people out

00:17:55,360 --> 00:18:02,200
there there's some actual there

00:17:57,520 --> 00:18:04,630
a specialized cloud computing use cases

00:18:02,200 --> 00:18:09,310
for that but as a general cloud compute

00:18:04,630 --> 00:18:10,780
to take your vmware's and virtualized

00:18:09,310 --> 00:18:14,320
servers to the next level right now I

00:18:10,780 --> 00:18:16,180
openvz is not your solution and the LXE

00:18:14,320 --> 00:18:20,020
is sort of your user space to routed

00:18:16,180 --> 00:18:22,830
installs the most popular hypervisor and

00:18:20,020 --> 00:18:26,590
use out there by far is vmware

00:18:22,830 --> 00:18:28,090
proprietary in the cloud i think you're

00:18:26,590 --> 00:18:29,950
going to see a lot of people that are

00:18:28,090 --> 00:18:32,920
doing great scale are not going to use

00:18:29,950 --> 00:18:34,870
vmware as much as the Middle's scale

00:18:32,920 --> 00:18:37,390
markets I mean VMware has a considerable

00:18:34,870 --> 00:18:39,030
expense especially when you're trying to

00:18:37,390 --> 00:18:42,040
bring up tens of thousands of servers

00:18:39,030 --> 00:18:43,630
virtualized servers I should say citrix

00:18:42,040 --> 00:18:47,320
xenserver is the commercialized version

00:18:43,630 --> 00:18:51,030
is n hyper-v and then oracle vm in

00:18:47,320 --> 00:18:54,220
oracle vm is variant of zen i believe i

00:18:51,030 --> 00:18:57,460
put the two for the takeaway i would say

00:18:54,220 --> 00:19:01,180
is if you're doing general purpose if

00:18:57,460 --> 00:19:06,310
you're doing cloud compute IAS zen and

00:19:01,180 --> 00:19:08,020
kvm and kvm actually has some technical

00:19:06,310 --> 00:19:13,210
advantages that because it runs and

00:19:08,020 --> 00:19:16,420
first stuff that runs in user space open

00:19:13,210 --> 00:19:17,560
source compute clouds so this is the

00:19:16,420 --> 00:19:19,930
part where i will go to give you a

00:19:17,560 --> 00:19:21,700
disclaimer i chose to go to work for

00:19:19,930 --> 00:19:23,980
cloud calm that's what I'm always going

00:19:21,700 --> 00:19:25,540
to tell you is best I like the fact that

00:19:23,980 --> 00:19:27,430
there is our open source and you can go

00:19:25,540 --> 00:19:32,680
download them so take it with a grain of

00:19:27,430 --> 00:19:35,970
salt but last year cloud calm released

00:19:32,680 --> 00:19:43,570
our open source project cloud stock as a

00:19:35,970 --> 00:19:45,490
GPL project CloudStack is a compute

00:19:43,570 --> 00:19:50,290
environment allows you to manage your

00:19:45,490 --> 00:19:52,330
virtualized storage servers and network

00:19:50,290 --> 00:19:55,690
and do virtual networking all in one

00:19:52,330 --> 00:19:57,670
package we have numerous clients

00:19:55,690 --> 00:20:00,370
throughout the year throughout the world

00:19:57,670 --> 00:20:02,530
running large-scale clouds on it our

00:20:00,370 --> 00:20:04,900
domain language is Java the guy who

00:20:02,530 --> 00:20:06,970
founded the company is Chen Lang rate

00:20:04,900 --> 00:20:10,330
the original jbm he was part of james

00:20:06,970 --> 00:20:12,659
gosling steam eucalyptus

00:20:10,330 --> 00:20:15,779
they probably have the most tenure and

00:20:12,659 --> 00:20:18,909
what they started out the one was

00:20:15,779 --> 00:20:21,850
creating cloud computing software that

00:20:18,909 --> 00:20:23,890
kept compatibility between amazon and

00:20:21,850 --> 00:20:26,610
their cloud so you see two and and

00:20:23,890 --> 00:20:30,429
eucalyptus is a cloud computing software

00:20:26,610 --> 00:20:34,330
use the same api's and and allows you to

00:20:30,429 --> 00:20:38,110
move from ec2 to your own private cloud

00:20:34,330 --> 00:20:40,990
seamlessly on the supported hypervisors

00:20:38,110 --> 00:20:42,700
here i think that there's been some

00:20:40,990 --> 00:20:44,169
changes i think there's probably more

00:20:42,700 --> 00:20:47,159
than i put on there but i haven't been

00:20:44,169 --> 00:20:50,529
able to confirm them a hundred percent

00:20:47,159 --> 00:20:52,750
so take that with grain of salt they

00:20:50,529 --> 00:20:58,120
probably all these projects move pretty

00:20:52,750 --> 00:21:02,679
fast OpenStack OpenStack is very

00:20:58,120 --> 00:21:07,120
interesting to me I'm sorry OpenStack is

00:21:02,679 --> 00:21:08,559
a project sponsored by Rackspace and a

00:21:07,120 --> 00:21:11,320
number of other companies which cloud

00:21:08,559 --> 00:21:13,350
com is a supporter of it ubuntu i

00:21:11,320 --> 00:21:16,480
believe the supporter of OpenStack and

00:21:13,350 --> 00:21:19,029
what they they did was took this code

00:21:16,480 --> 00:21:21,429
that was developed for NASA by a company

00:21:19,029 --> 00:21:22,960
called answer labs which is a system

00:21:21,429 --> 00:21:25,690
integrator that has since been acquired

00:21:22,960 --> 00:21:29,110
by Rackspace and last July they released

00:21:25,690 --> 00:21:31,630
their code under an open source license

00:21:29,110 --> 00:21:35,070
and they have a lot of momentum because

00:21:31,630 --> 00:21:35,070
they have a lot of interest as a

00:21:35,279 --> 00:21:41,830
vendor-neutral kind of widespread cloud

00:21:38,529 --> 00:21:43,360
compute platform what they do could be

00:21:41,830 --> 00:21:46,120
leveraged by a number of the other cloud

00:21:43,360 --> 00:21:50,289
providers and that's why people like a

00:21:46,120 --> 00:21:52,210
bunch of us participate with them but

00:21:50,289 --> 00:21:54,190
right now there is a lot of overlap them

00:21:52,210 --> 00:21:58,870
how they handle virtualization

00:21:54,190 --> 00:22:02,320
orchestration ubuntu enterprise cloud it

00:21:58,870 --> 00:22:06,130
started with the karma the karmic koala

00:22:02,320 --> 00:22:09,399
release so does anybody know what koalas

00:22:06,130 --> 00:22:12,760
eat that is clever little joke koala

00:22:09,399 --> 00:22:15,519
Zika lyptus so they packaged eucalyptus

00:22:12,760 --> 00:22:19,500
within their their distribution to

00:22:15,519 --> 00:22:19,500
create the Ubuntu enterprise cloud and

00:22:19,740 --> 00:22:24,280
that was their cloud compete platform

00:22:22,179 --> 00:22:26,680
just recently I believe they in

00:22:24,280 --> 00:22:28,650
that they are going to spur a bun to

00:22:26,680 --> 00:22:34,000
enterprise cloud start packaging

00:22:28,650 --> 00:22:37,660
OpenStack instead of eucalyptus finally

00:22:34,000 --> 00:22:39,340
Abuk whoa the only reason I list Abba

00:22:37,660 --> 00:22:42,970
quo on there is because they do release

00:22:39,340 --> 00:22:46,000
cloud compute software under an open

00:22:42,970 --> 00:22:47,800
source license and it seems to be

00:22:46,000 --> 00:22:52,360
legitimate but I know the least about

00:22:47,800 --> 00:22:53,950
them I don't they're very the company

00:22:52,360 --> 00:22:56,380
the behind has been around for a long

00:22:53,950 --> 00:22:58,690
time but they've really just recently

00:22:56,380 --> 00:23:03,340
pushed this cloud computing package out

00:22:58,690 --> 00:23:04,480
so download it try it and take the spin

00:23:03,340 --> 00:23:07,450
around their community ask some

00:23:04,480 --> 00:23:11,590
questions these are the compute clouds

00:23:07,450 --> 00:23:13,600
and the hypervisor so you have a

00:23:11,590 --> 00:23:14,770
hypervisor you have cloud compute now

00:23:13,600 --> 00:23:19,180
you've got to store your images

00:23:14,770 --> 00:23:21,370
somewhere and one of the most probably

00:23:19,180 --> 00:23:24,010
one of the most debated topics right now

00:23:21,370 --> 00:23:29,560
is how you do storage for your compute

00:23:24,010 --> 00:23:33,700
cloud and a lot of it is distributed

00:23:29,560 --> 00:23:36,640
storage the projects out there that do

00:23:33,700 --> 00:23:39,790
that that are probably most interesting

00:23:36,640 --> 00:23:43,360
our Gluster FS they do scale out mass

00:23:39,790 --> 00:23:49,230
system that aggregates storage over

00:23:43,360 --> 00:23:51,490
Ethernet or infinite man SEF which is a

00:23:49,230 --> 00:23:53,650
distributed file system storage that is

00:23:51,490 --> 00:23:55,570
developed by dreamhost and I sort of

00:23:53,650 --> 00:23:58,450
like the idea of the back to my original

00:23:55,570 --> 00:23:59,770
point dreamhost is a user of distributed

00:23:58,450 --> 00:24:02,080
storage so they're solving a problem

00:23:59,770 --> 00:24:06,060
they're not trying to sell you software

00:24:02,080 --> 00:24:09,250
so i think that input is valuable in the

00:24:06,060 --> 00:24:10,480
evolution of storage systems and i think

00:24:09,250 --> 00:24:12,820
other if you're a managed service

00:24:10,480 --> 00:24:14,650
provider they probably have a lot of

00:24:12,820 --> 00:24:16,950
similar issues that you have and you

00:24:14,650 --> 00:24:19,960
could learn something from them

00:24:16,950 --> 00:24:21,970
OpenStack has two components there are

00:24:19,960 --> 00:24:24,070
actually three components to it but on

00:24:21,970 --> 00:24:26,680
the compute side the codename for

00:24:24,070 --> 00:24:31,600
computers called nova on the storage

00:24:26,680 --> 00:24:35,290
side it's called Swift and that is if

00:24:31,600 --> 00:24:37,929
you're our user of cloud of rackspace

00:24:35,290 --> 00:24:39,549
cloud files their storage system

00:24:37,929 --> 00:24:41,350
the underlying software that runs that

00:24:39,549 --> 00:24:43,419
they may have been sourced it and that's

00:24:41,350 --> 00:24:46,090
long term object storage that's where

00:24:43,419 --> 00:24:48,909
you would store data but not stuff that

00:24:46,090 --> 00:24:52,980
has heavy read/write like your system

00:24:48,909 --> 00:24:55,360
images and stuff like that but sheep dog

00:24:52,980 --> 00:24:58,649
sheepdogs another interesting one this

00:24:55,360 --> 00:25:03,580
is strictly for kvm hypervisors its

00:24:58,649 --> 00:25:05,830
development is led by ntt and right now

00:25:03,580 --> 00:25:07,690
it's approaching there's some

00:25:05,830 --> 00:25:10,389
limitations that think they can do a

00:25:07,690 --> 00:25:13,570
thousand servers is the limit for sheep

00:25:10,389 --> 00:25:16,809
dog but they they work specifically with

00:25:13,570 --> 00:25:18,340
kvm what I think you're going to

00:25:16,809 --> 00:25:20,529
probably run into more times than

00:25:18,340 --> 00:25:21,820
anything else right now is people who

00:25:20,529 --> 00:25:23,740
are repurposing their existing

00:25:21,820 --> 00:25:26,440
infrastructure will be mounting their

00:25:23,740 --> 00:25:28,299
their existing storage via NFS so you

00:25:26,440 --> 00:25:32,049
might be have if you have netapp filers

00:25:28,299 --> 00:25:34,119
or open filers or other kinds of

00:25:32,049 --> 00:25:36,820
commercial storage that's probably what

00:25:34,119 --> 00:25:40,539
you're going to do there's some

00:25:36,820 --> 00:25:42,129
performance bottlenecks in NFS but that

00:25:40,539 --> 00:25:46,529
is probably what I see more often than

00:25:42,129 --> 00:25:54,700
anything else I'm not a storage guy so

00:25:46,529 --> 00:25:56,740
I'm fascinated by that so ap is almost

00:25:54,700 --> 00:26:00,490
every single one of these clouds has

00:25:56,740 --> 00:26:02,379
their own API the problem is that every

00:26:00,490 --> 00:26:03,909
single these one of these clouds has an

00:26:02,379 --> 00:26:07,539
API that's slightly different than the

00:26:03,909 --> 00:26:09,549
others why is that important because you

00:26:07,539 --> 00:26:11,139
have tools to manage these clouds and on

00:26:09,549 --> 00:26:13,869
every single cloud you'd have different

00:26:11,139 --> 00:26:17,139
convention to call these ap is to start

00:26:13,869 --> 00:26:19,720
and stop virtual machines to do

00:26:17,139 --> 00:26:21,490
different things so what is evolved are

00:26:19,720 --> 00:26:24,970
these abstractions that actually are

00:26:21,490 --> 00:26:27,820
common API that map their API to

00:26:24,970 --> 00:26:30,869
different cloud service providers so Jay

00:26:27,820 --> 00:26:34,360
clouds is a popular Java cloud

00:26:30,869 --> 00:26:37,450
abstraction written by a really smart

00:26:34,360 --> 00:26:39,190
guy called Julie Nicole and they support

00:26:37,450 --> 00:26:41,289
a wide variety clouds so if you had a

00:26:39,190 --> 00:26:43,570
tool that provisioned virtual machines

00:26:41,289 --> 00:26:46,600
you could write to Jay clouds and maybe

00:26:43,570 --> 00:26:47,590
provisioning them across Amazon Cloud

00:26:46,600 --> 00:26:49,539
com

00:26:47,590 --> 00:26:51,520
and terremark for example if you had

00:26:49,539 --> 00:26:53,679
multiple clouds so that you'd have some

00:26:51,520 --> 00:26:55,720
consistency in your tools and you don't

00:26:53,679 --> 00:26:57,700
have to retool because one of the the

00:26:55,720 --> 00:26:59,679
implied promises of the cloud is that

00:26:57,700 --> 00:27:01,539
someday you're going to be able to move

00:26:59,679 --> 00:27:03,460
from vendor to vendor as simply as you

00:27:01,539 --> 00:27:06,490
move web hosting today that kind of

00:27:03,460 --> 00:27:08,380
consistency across vendors some kind of

00:27:06,490 --> 00:27:13,059
standardization not anywhere close to

00:27:08,380 --> 00:27:17,890
that there today lib cloud is another

00:27:13,059 --> 00:27:21,820
one in delta cloud they are both Apache

00:27:17,890 --> 00:27:25,140
Incubator projects right now and fog is

00:27:21,820 --> 00:27:28,059
another abstraction and they are sort of

00:27:25,140 --> 00:27:31,690
they were developed i believe by Engine

00:27:28,059 --> 00:27:33,610
Yard and they're sort of Ruby based so

00:27:31,690 --> 00:27:35,590
the reason I bring up the open-source

00:27:33,610 --> 00:27:36,700
abstractions is I think it's going to be

00:27:35,590 --> 00:27:42,789
pretty important when we talk about

00:27:36,700 --> 00:27:45,610
tools so this is sort of a rundown of

00:27:42,789 --> 00:27:49,600
the things we talked about we have this

00:27:45,610 --> 00:27:52,299
hardware we have this hardware at the

00:27:49,600 --> 00:27:54,450
bottom layer then we have the OS the vm

00:27:52,299 --> 00:27:57,450
manager then we have virtualized

00:27:54,450 --> 00:28:00,340
resources like computing network storage

00:27:57,450 --> 00:28:02,250
then on this other this other little red

00:28:00,340 --> 00:28:04,809
block here the image and the image

00:28:02,250 --> 00:28:07,149
metadata that's worth noting because

00:28:04,809 --> 00:28:10,090
right now there isn't a well adopted

00:28:07,149 --> 00:28:11,770
standard virtual machine image there is

00:28:10,090 --> 00:28:15,159
a standard that has recently emerged

00:28:11,770 --> 00:28:17,230
called a ovf and I think that over time

00:28:15,159 --> 00:28:18,880
that will be this standard

00:28:17,230 --> 00:28:21,279
virtualization image that works across

00:28:18,880 --> 00:28:22,870
all hypervisors it's not only a machine

00:28:21,279 --> 00:28:24,789
image but it also has some metadata

00:28:22,870 --> 00:28:26,350
attached with it so that you can

00:28:24,789 --> 00:28:29,890
understand what that virtual image holds

00:28:26,350 --> 00:28:32,890
today if you're a VMware user you might

00:28:29,890 --> 00:28:36,789
use you can use ovf with recent recent

00:28:32,890 --> 00:28:40,390
versions but probably vmdk is their

00:28:36,789 --> 00:28:44,080
standard if you're kvm user it's Q Cal's

00:28:40,390 --> 00:28:46,990
if it's then there's another image

00:28:44,080 --> 00:28:49,570
format so you can can't just pick up one

00:28:46,990 --> 00:28:51,549
image and move it across you have to use

00:28:49,570 --> 00:28:55,270
converters so if you're converting

00:28:51,549 --> 00:28:58,029
images across hypervisors anybody here

00:28:55,270 --> 00:29:00,399
you use qemu

00:28:58,029 --> 00:29:02,200
there's some tool sets with qemu that

00:29:00,399 --> 00:29:03,580
allow you to do conversion a lot of

00:29:02,200 --> 00:29:06,429
there's a lot of tools out there to make

00:29:03,580 --> 00:29:08,229
conversions but if you build a cloud and

00:29:06,429 --> 00:29:09,759
you have of two different hypervisors in

00:29:08,229 --> 00:29:12,309
there you would have to have two

00:29:09,759 --> 00:29:26,919
different kinds of virtual machine

00:29:12,309 --> 00:29:29,830
images yes oh so so the question was if

00:29:26,919 --> 00:29:31,749
you're using lvm could you just use raw

00:29:29,830 --> 00:29:34,450
images rather than a virtual machine

00:29:31,749 --> 00:29:35,889
image and really it shouldn't matter

00:29:34,450 --> 00:29:40,330
it's just a matter of what your

00:29:35,889 --> 00:29:43,119
hypervisor supports I don't know that

00:29:40,330 --> 00:29:46,059
every cloud platform supports that

00:29:43,119 --> 00:29:47,559
though kids a lot of times they they

00:29:46,059 --> 00:29:49,960
want to see those machine images they're

00:29:47,559 --> 00:29:52,899
instrumented for specific machine images

00:29:49,960 --> 00:29:57,489
but that's a good question actually

00:29:52,899 --> 00:29:59,619
we'll do a little research on that all

00:29:57,489 --> 00:30:02,049
right so so at the bottom of the compute

00:29:59,619 --> 00:30:03,909
cloud we have these abstracted resources

00:30:02,049 --> 00:30:05,349
and then above that we have that

00:30:03,909 --> 00:30:07,809
infrastructure as a service which is

00:30:05,349 --> 00:30:09,999
that bribe bottom layer and some some

00:30:07,809 --> 00:30:11,469
users consume that directly if your

00:30:09,999 --> 00:30:13,659
platform as a service guy you're

00:30:11,469 --> 00:30:15,159
probably consuming both even though the

00:30:13,659 --> 00:30:17,169
infrastructure as a service layer is

00:30:15,159 --> 00:30:18,460
abstracted finally as

00:30:17,169 --> 00:30:21,029
software-as-a-service you may be

00:30:18,460 --> 00:30:24,609
consuming all three or two of the three

00:30:21,029 --> 00:30:26,080
but it's it's transparent to you so

00:30:24,609 --> 00:30:29,049
that's what's what's really interesting

00:30:26,080 --> 00:30:31,539
in general about the cloud is that

00:30:29,049 --> 00:30:33,339
you've abstracted your infrastructure so

00:30:31,539 --> 00:30:35,379
that there's still somebody dealing with

00:30:33,339 --> 00:30:37,690
that hardware but the bulk of the users

00:30:35,379 --> 00:30:40,299
using the cloud are not going to have to

00:30:37,690 --> 00:30:43,269
worry about you know when I was well

00:30:40,299 --> 00:30:45,460
worked as a hands-on IT guy installing

00:30:43,269 --> 00:30:48,070
systems and used to have problems with

00:30:45,460 --> 00:30:52,210
grade cards you had to worry about you

00:30:48,070 --> 00:30:55,359
know you know capacity on your machines

00:30:52,210 --> 00:30:57,549
in a way that was tough to manage now

00:30:55,359 --> 00:30:59,320
you sort of have this abstraction you

00:30:57,549 --> 00:31:02,169
have this pooled resources you have this

00:30:59,320 --> 00:31:05,950
ability to you have a level flexibility

00:31:02,169 --> 00:31:07,799
that is really building on a lot of

00:31:05,950 --> 00:31:10,570
technologies that we already use today

00:31:07,799 --> 00:31:11,120
on the right-hand side we have the

00:31:10,570 --> 00:31:12,260
manager

00:31:11,120 --> 00:31:14,600
it which is where we're going to talk

00:31:12,260 --> 00:31:16,930
about next thing management of the cloud

00:31:14,600 --> 00:31:20,030
brings in some some pretty unique

00:31:16,930 --> 00:31:21,920
challenges and then I have my little API

00:31:20,030 --> 00:31:26,650
abstraction so you may be consuming

00:31:21,920 --> 00:31:29,300
something like Salesforce via browser or

00:31:26,650 --> 00:31:30,580
something else via command line and a

00:31:29,300 --> 00:31:33,950
lot of clouds you're going to be

00:31:30,580 --> 00:31:35,390
interacting with through an API and if

00:31:33,950 --> 00:31:39,770
you don't like the clouds API you can

00:31:35,390 --> 00:31:42,590
use an abstraction all right this is the

00:31:39,770 --> 00:31:46,370
part that I think is the unique

00:31:42,590 --> 00:31:49,429
challenge with the cloud because I can

00:31:46,370 --> 00:31:51,290
go to Amazon with a credit card and spin

00:31:49,429 --> 00:31:55,280
up a thousand servers and new time

00:31:51,290 --> 00:31:57,890
literally you know very very quickly but

00:31:55,280 --> 00:31:59,780
once I spin up this thousand servers how

00:31:57,890 --> 00:32:02,179
do I actively manage the lifecycle of

00:31:59,780 --> 00:32:05,240
those servers kids before I had the when

00:32:02,179 --> 00:32:07,670
I had physical hardware had to order the

00:32:05,240 --> 00:32:09,500
hardware ID to rack it up I did install

00:32:07,670 --> 00:32:11,720
an operating system if I wanted to

00:32:09,500 --> 00:32:13,760
virtualize it I virtualized it I had all

00:32:11,720 --> 00:32:16,010
these steps to get to the point of

00:32:13,760 --> 00:32:18,350
having virtual machines running in my

00:32:16,010 --> 00:32:20,720
data center now credit card push a

00:32:18,350 --> 00:32:22,100
couple buttons very very easy to have a

00:32:20,720 --> 00:32:29,210
large infrastructure running very

00:32:22,100 --> 00:32:32,660
quickly so how do you scale you can

00:32:29,210 --> 00:32:35,300
either you know I mean hire more people

00:32:32,660 --> 00:32:38,600
that's a linear scaling if the system in

00:32:35,300 --> 00:32:40,490
can manage five or fifty servers or 100

00:32:38,600 --> 00:32:42,530
servers and you're spinning up a

00:32:40,490 --> 00:32:44,630
thousand a day you've got to scale that

00:32:42,530 --> 00:32:48,320
way or you got to figure out how you

00:32:44,630 --> 00:32:50,210
scale your sis admin's and I think you

00:32:48,320 --> 00:32:52,850
got to really think about how you and

00:32:50,210 --> 00:32:55,460
the system men's us I call the meat

00:32:52,850 --> 00:32:58,100
cloud and we got to figure out how we

00:32:55,460 --> 00:33:00,920
scale these people I would say it's

00:32:58,100 --> 00:33:04,550
through automation there's a lot of

00:33:00,920 --> 00:33:07,850
movements out there on bitter because

00:33:04,550 --> 00:33:12,440
that preach this kind of scalability

00:33:07,850 --> 00:33:17,600
automation agility and anybody here

00:33:12,440 --> 00:33:19,460
familiar with the term DevOps okay prob

00:33:17,600 --> 00:33:22,250
that could be a whole talk in itself but

00:33:19,460 --> 00:33:24,330
DevOps really borrows a lot of the

00:33:22,250 --> 00:33:25,679
practices of agile

00:33:24,330 --> 00:33:29,669
development and applies them to

00:33:25,679 --> 00:33:33,169
operations the idea of iterate often

00:33:29,669 --> 00:33:35,610
have process but streamlined bureaucracy

00:33:33,169 --> 00:33:38,159
plan the the other thing i like about

00:33:35,610 --> 00:33:41,159
DevOps and the DevOps is the root of it

00:33:38,159 --> 00:33:43,590
is development operations and it very

00:33:41,159 --> 00:33:46,470
beginning I said you've got a plan for

00:33:43,590 --> 00:33:49,100
your end use that is taking your

00:33:46,470 --> 00:33:51,720
development people and having them

00:33:49,100 --> 00:33:56,000
provide specifications of how their

00:33:51,720 --> 00:33:58,139
applications should be run in operations

00:33:56,000 --> 00:34:02,309
definitely worth giggling and reading

00:33:58,139 --> 00:34:04,470
about but the thing that I want you to

00:34:02,309 --> 00:34:06,630
take away from today's talk for cloud

00:34:04,470 --> 00:34:08,550
management is you really got to think

00:34:06,630 --> 00:34:12,570
about scripting and automating

00:34:08,550 --> 00:34:14,460
repetitive tasks and the tools i'm going

00:34:12,570 --> 00:34:20,250
to talk about really lend themselves to

00:34:14,460 --> 00:34:22,679
that so why do i like open source tools

00:34:20,250 --> 00:34:24,929
versus proprietary tools especially for

00:34:22,679 --> 00:34:28,550
cloud computing it's because it's a fits

00:34:24,929 --> 00:34:31,560
fast-moving and open-source guys tend to

00:34:28,550 --> 00:34:33,359
lease early and release often and i feel

00:34:31,560 --> 00:34:34,830
like they're the tool sets that are

00:34:33,359 --> 00:34:38,399
keeping up with the cloud computing

00:34:34,830 --> 00:34:40,290
trend better than anyone else the other

00:34:38,399 --> 00:34:42,740
thing i like about open source tools is

00:34:40,290 --> 00:34:45,000
they're typically user developed and

00:34:42,740 --> 00:34:47,119
instrumented and that's that's the other

00:34:45,000 --> 00:34:49,950
thing so end users of cloud computing

00:34:47,119 --> 00:34:51,750
infrastructure are providing the

00:34:49,950 --> 00:34:53,250
inspiration instrumentation for

00:34:51,750 --> 00:34:56,970
configuration management and monitoring

00:34:53,250 --> 00:34:59,220
is my observation the other thing is

00:34:56,970 --> 00:35:01,080
they're easily to assemble into tool

00:34:59,220 --> 00:35:03,210
chains and it seems like there's a

00:35:01,080 --> 00:35:09,260
culture there of integrating different

00:35:03,210 --> 00:35:12,869
kinds of tools together so what makes

00:35:09,260 --> 00:35:15,330
tools cloudy in my opinion this is no

00:35:12,869 --> 00:35:17,310
hard-and-fast thing but their network

00:35:15,330 --> 00:35:18,810
capable their cloud aware and what I

00:35:17,310 --> 00:35:20,670
mean cloud aware is there instrumented

00:35:18,810 --> 00:35:22,080
for the cloud so they they have

00:35:20,670 --> 00:35:25,580
instrumentation for things like

00:35:22,080 --> 00:35:28,530
hypervisors for network storage

00:35:25,580 --> 00:35:31,200
monitoring has plugins for that easy to

00:35:28,530 --> 00:35:33,960
integrate here to open standards lend

00:35:31,200 --> 00:35:35,490
themselves automation not that I want to

00:35:33,960 --> 00:35:36,500
be too repetitive but I want you guys to

00:35:35,490 --> 00:35:40,780
really

00:35:36,500 --> 00:35:43,550
go away with automation as a theme so

00:35:40,780 --> 00:35:46,580
this slide I got a credit to the man in

00:35:43,550 --> 00:35:49,510
the red shirt back there tarus balog who

00:35:46,580 --> 00:35:53,930
who brought to light the fact of what a

00:35:49,510 --> 00:35:56,390
service level really constitutes and how

00:35:53,930 --> 00:36:00,740
little time you have to recover from an

00:35:56,390 --> 00:36:04,940
outage so if you are adhering to a 49 s

00:36:00,740 --> 00:36:06,950
service level you have 52.6 minutes out

00:36:04,940 --> 00:36:09,380
of the year to respond to that and

00:36:06,950 --> 00:36:11,120
resolve your outage or you're going to

00:36:09,380 --> 00:36:13,070
blow your service level in a month

00:36:11,120 --> 00:36:15,200
that's only four point three two minutes

00:36:13,070 --> 00:36:19,700
so if you're polling period for an

00:36:15,200 --> 00:36:21,920
outage is five minutes and you don't

00:36:19,700 --> 00:36:23,780
made aware of it within that polling

00:36:21,920 --> 00:36:26,390
period you blame your service outage

00:36:23,780 --> 00:36:29,000
before you even know about it so polling

00:36:26,390 --> 00:36:31,010
intervals might be important to you also

00:36:29,000 --> 00:36:33,890
the ability to be alerted and recover

00:36:31,010 --> 00:36:36,050
from it till you are alerted log into

00:36:33,890 --> 00:36:46,130
your machine recover you could have

00:36:36,050 --> 00:36:48,400
blown it oh I'm sorry about that just

00:36:46,130 --> 00:36:50,990
something to think about when you're and

00:36:48,400 --> 00:36:53,480
the way people define and what groups

00:36:50,990 --> 00:36:56,300
and and what scope of infrastructure

00:36:53,480 --> 00:36:59,960
constitutes constitutes a service level

00:36:56,300 --> 00:37:02,840
varies by organization but really at the

00:36:59,960 --> 00:37:08,540
end of the day high levels of service

00:37:02,840 --> 00:37:09,920
have very little room for error so today

00:37:08,540 --> 00:37:12,290
I'm going to talk about four types of

00:37:09,920 --> 00:37:15,080
management tools provisioning

00:37:12,290 --> 00:37:21,350
configuration management orchestration

00:37:15,080 --> 00:37:24,620
automation and monitoring how many

00:37:21,350 --> 00:37:26,380
people here are developers okay so you

00:37:24,620 --> 00:37:30,050
guys all know what a tool chain is right

00:37:26,380 --> 00:37:32,210
output of one one system informs the

00:37:30,050 --> 00:37:33,800
input of another that's how I want you

00:37:32,210 --> 00:37:35,050
to think about management tools for the

00:37:33,800 --> 00:37:36,980
cloud actually I want you to think about

00:37:35,050 --> 00:37:39,740
management tools like that in general

00:37:36,980 --> 00:37:43,820
that the output of your configuration

00:37:39,740 --> 00:37:46,160
management tool informs the input of

00:37:43,820 --> 00:37:47,540
some other tool tells your monitoring

00:37:46,160 --> 00:37:49,450
tool what's configured and what to

00:37:47,540 --> 00:37:51,220
monitor I want your

00:37:49,450 --> 00:37:53,200
visiting tool to inform your

00:37:51,220 --> 00:37:54,700
configuration management tool I want

00:37:53,200 --> 00:37:58,300
your monitoring tool when it had there's

00:37:54,700 --> 00:38:01,210
a fault if it makes sense to automate

00:37:58,300 --> 00:38:03,790
the recovery of that now the danger with

00:38:01,210 --> 00:38:06,099
automation is it can fix things really

00:38:03,790 --> 00:38:09,220
really fast it can screw things up

00:38:06,099 --> 00:38:12,010
equally as fast so for a long long time

00:38:09,220 --> 00:38:16,720
people at smart people at IBM have

00:38:12,010 --> 00:38:18,820
preached autumn autonomic and I think

00:38:16,720 --> 00:38:20,800
it's a good idea but I also think

00:38:18,820 --> 00:38:24,520
there's certain simple things that you

00:38:20,800 --> 00:38:26,290
can automate and help stay within your

00:38:24,520 --> 00:38:31,740
service level and make it easier to

00:38:26,290 --> 00:38:34,089
recover from open source provisioning

00:38:31,740 --> 00:38:36,820
how many people here provision their

00:38:34,089 --> 00:38:43,300
linux servers will kick-start okay

00:38:36,820 --> 00:38:45,280
cobbler ok cool so kickstart you create

00:38:43,300 --> 00:38:47,380
the specification the spec file

00:38:45,280 --> 00:38:49,720
kickstart file kick it off and it

00:38:47,380 --> 00:38:52,200
automates the install and basic

00:38:49,720 --> 00:38:54,880
configuration of systems a single system

00:38:52,200 --> 00:38:56,530
cobbler is very cool because it's a

00:38:54,880 --> 00:39:00,190
client-server application allows you to

00:38:56,530 --> 00:39:03,010
do that with a one-to-many relationship

00:39:00,190 --> 00:39:05,550
so you can kick off multiple you can

00:39:03,010 --> 00:39:08,140
pick C boot multiple virtual machines

00:39:05,550 --> 00:39:11,200
simultaneously configure them and bring

00:39:08,140 --> 00:39:13,359
them into service very very quickly that

00:39:11,200 --> 00:39:16,210
is an awesome tool it's part of the dora

00:39:13,359 --> 00:39:19,200
project the most overlooked tool that

00:39:16,210 --> 00:39:21,369
once people use it they are hooked i

00:39:19,200 --> 00:39:23,200
highly recommend if you don't look at

00:39:21,369 --> 00:39:24,849
any other stuff in your linux system in

00:39:23,200 --> 00:39:30,819
when you're done here get a look at

00:39:24,849 --> 00:39:35,800
cobbler spacewalk is another another

00:39:30,819 --> 00:39:38,349
tool that is sponsored by red hat fedora

00:39:35,800 --> 00:39:40,650
project and it's sort of the satellites

00:39:38,349 --> 00:39:45,550
Red Hat satellite server for open source

00:39:40,650 --> 00:39:51,180
it's also pretty neat and spacewalk does

00:39:45,550 --> 00:39:54,670
Fedora CentOS rel right now cobbler does

00:39:51,180 --> 00:39:58,900
moving into more and more of the non rpm

00:39:54,670 --> 00:40:00,760
based distributions another one that's a

00:39:58,900 --> 00:40:02,619
newly launched project there's not a lot

00:40:00,760 --> 00:40:03,730
of information on it yet is called

00:40:02,619 --> 00:40:08,049
crowbar

00:40:03,730 --> 00:40:11,270
and that's a bare-metal provisioning

00:40:08,049 --> 00:40:13,819
tool that extends a open source tool

00:40:11,270 --> 00:40:17,000
called chef and it's sponsored by Dell

00:40:13,819 --> 00:40:18,710
and OpenStack I think it's going to be a

00:40:17,000 --> 00:40:23,079
pretty important tool as time goes on

00:40:18,710 --> 00:40:26,000
but they just launched it recently and

00:40:23,079 --> 00:40:28,849
there isn't even a centralized wiki on

00:40:26,000 --> 00:40:30,680
it but if you google crowbar and cloud

00:40:28,849 --> 00:40:34,760
or crowbar and chef you're going to see

00:40:30,680 --> 00:40:38,270
it but what that allows you do is autumn

00:40:34,760 --> 00:40:47,030
eight the installation of multiple

00:40:38,270 --> 00:40:50,119
claudius this is at scale configuration

00:40:47,030 --> 00:40:52,910
management tools this is another

00:40:50,119 --> 00:40:55,700
probably you know the funny thing is

00:40:52,910 --> 00:40:57,349
that I I'm in a cloud guy and I've made

00:40:55,700 --> 00:40:59,349
cloud software but the tools are what I

00:40:57,349 --> 00:41:02,119
think are really really interesting and

00:40:59,349 --> 00:41:03,700
configuration management especially in

00:41:02,119 --> 00:41:05,569
the way that these tools provide

00:41:03,700 --> 00:41:07,940
configuration management is really

00:41:05,569 --> 00:41:09,440
really interesting so a lot of people

00:41:07,940 --> 00:41:10,790
and I'm talking about configuration

00:41:09,440 --> 00:41:12,500
management mainly from a server

00:41:10,790 --> 00:41:14,119
perspective even though there's

00:41:12,500 --> 00:41:17,480
definitely configuration management in

00:41:14,119 --> 00:41:19,339
the network that's slightly slightly

00:41:17,480 --> 00:41:24,619
different these are all very server

00:41:19,339 --> 00:41:27,020
centric so bcf g2 is 2003 he's been

00:41:24,619 --> 00:41:28,579
around a while that is probably least

00:41:27,020 --> 00:41:30,380
popular one and I'm going to skip past

00:41:28,579 --> 00:41:33,740
it real quick it'll come back to it

00:41:30,380 --> 00:41:37,670
because the next three I did these in

00:41:33,740 --> 00:41:39,680
alphabetical order because I don't want

00:41:37,670 --> 00:41:42,140
to I don't really have a preference but

00:41:39,680 --> 00:41:45,319
there is sort of an evolution this whole

00:41:42,140 --> 00:41:47,510
idea of taking your configurations and

00:41:45,319 --> 00:41:51,109
abstracting them in some kind of

00:41:47,510 --> 00:41:52,910
manifest or pele that allows you to push

00:41:51,109 --> 00:41:54,230
those configurations out across your

00:41:52,910 --> 00:41:58,430
whole infrastructure as what they do

00:41:54,230 --> 00:42:00,380
these tools do and CF engine was started

00:41:58,430 --> 00:42:04,040
by a man named mark burgess who was a

00:42:00,380 --> 00:42:06,589
researcher and he had this idea that

00:42:04,040 --> 00:42:08,690
rather than go and edit each individual

00:42:06,589 --> 00:42:11,000
configuration file he would come up with

00:42:08,690 --> 00:42:12,619
these definitions and abstractions of

00:42:11,000 --> 00:42:15,380
what the configuration should be and

00:42:12,619 --> 00:42:17,029
classes of servers and then push these

00:42:15,380 --> 00:42:19,609
implement at Lisa

00:42:17,029 --> 00:42:22,189
definitions out automatically or

00:42:19,609 --> 00:42:24,589
automate this across numerous servers

00:42:22,189 --> 00:42:29,029
and so all these tools seem to work with

00:42:24,589 --> 00:42:31,339
most of the unix-like systems see if

00:42:29,029 --> 00:42:34,309
engine is probably is widely

00:42:31,339 --> 00:42:37,239
instrumented for not just Linux's and

00:42:34,309 --> 00:42:41,650
unix is but also windows to some degree

00:42:37,239 --> 00:42:46,039
so CF engine granddaddy of them all

00:42:41,650 --> 00:42:49,069
there's a CF engine user who wanted to

00:42:46,039 --> 00:42:51,759
abstract and create additional level of

00:42:49,069 --> 00:42:54,140
abstraction with some roles and other

00:42:51,759 --> 00:42:56,689
attributes of servers and he created

00:42:54,140 --> 00:43:00,319
puppet in 2004 his name is Luca nice and

00:42:56,689 --> 00:43:01,849
he has a company behind puppet called

00:43:00,319 --> 00:43:06,650
puppet labs to provide support and

00:43:01,849 --> 00:43:09,140
service there was a puppet user after

00:43:06,650 --> 00:43:10,269
him named Adam Jacob he was using puppet

00:43:09,140 --> 00:43:12,319
and he had a bug and he didn't like

00:43:10,269 --> 00:43:15,019
exactly the way everything was working

00:43:12,319 --> 00:43:17,839
so he created yet another system called

00:43:15,019 --> 00:43:20,179
chef which all three of these things at

00:43:17,839 --> 00:43:21,890
a very high level do the same thing all

00:43:20,179 --> 00:43:24,859
four of these things actually you have

00:43:21,890 --> 00:43:26,569
these these manifests or in chefs case

00:43:24,859 --> 00:43:30,049
they're called cookbooks puppets or

00:43:26,569 --> 00:43:31,880
manifest that give you these definitions

00:43:30,049 --> 00:43:33,769
of how your servers should be configured

00:43:31,880 --> 00:43:36,169
and you can push them out and you can

00:43:33,769 --> 00:43:38,449
have different levels of classes so you

00:43:36,169 --> 00:43:40,069
could have all my linux servers and then

00:43:38,449 --> 00:43:43,459
you can have Apache servers should be

00:43:40,069 --> 00:43:45,349
configured this way and you know my file

00:43:43,459 --> 00:43:47,839
servers could be configured this way and

00:43:45,349 --> 00:43:50,559
so on and so on and they could have

00:43:47,839 --> 00:43:54,679
different roles within the organization

00:43:50,559 --> 00:43:59,239
that that idea of automating and pushing

00:43:54,679 --> 00:44:01,189
it out across all these servers is it's

00:43:59,239 --> 00:44:03,289
pretty important because your

00:44:01,189 --> 00:44:07,039
alternative is to to configure them

00:44:03,289 --> 00:44:09,769
individually or create create a you know

00:44:07,039 --> 00:44:11,979
file file that you push out and then

00:44:09,769 --> 00:44:16,039
make incremental changes across them

00:44:11,979 --> 00:44:19,329
chef is the tool that I was talking

00:44:16,039 --> 00:44:22,519
about that crowbar integrates with and

00:44:19,329 --> 00:44:26,239
they have an open source server called

00:44:22,519 --> 00:44:28,880
chef solo and they also have a company

00:44:26,239 --> 00:44:30,160
behind a cop's kid that provides support

00:44:28,880 --> 00:44:33,839
and services and

00:44:30,160 --> 00:44:36,130
a hosted version of chef tomorrow

00:44:33,839 --> 00:44:37,990
Garrett Honeycutt from puppet labs is

00:44:36,130 --> 00:44:41,109
doing a whole day for tutorial one

00:44:37,990 --> 00:44:42,520
puppet I like them all but since you're

00:44:41,109 --> 00:44:44,250
here and if you're interested in this

00:44:42,520 --> 00:44:51,369
it's probably well worth your day to go

00:44:44,250 --> 00:44:54,309
listen to Garrett's talk monitoring

00:44:51,369 --> 00:44:56,230
tools once again I'll give my disclaimer

00:44:54,309 --> 00:44:58,569
I spent the last four and a half years

00:44:56,230 --> 00:44:59,710
working on Xena's project that's the one

00:44:58,569 --> 00:45:03,490
I'm going to tell you I like the best

00:44:59,710 --> 00:45:05,020
they're all pretty good up here and you

00:45:03,490 --> 00:45:09,609
should I encourage you to download them

00:45:05,020 --> 00:45:11,170
all you have cacti which leverages our

00:45:09,609 --> 00:45:13,780
addy tool that does performance

00:45:11,170 --> 00:45:15,579
monitoring its embedded that some of the

00:45:13,780 --> 00:45:18,940
ones below there how many people here

00:45:15,579 --> 00:45:21,220
are now yes users now yes probably got

00:45:18,940 --> 00:45:23,559
the largest user base event any

00:45:21,220 --> 00:45:28,089
monitoring project out there they do a

00:45:23,559 --> 00:45:31,930
fault monitoring and alerting you have

00:45:28,089 --> 00:45:34,119
opennms there a java-based network

00:45:31,930 --> 00:45:39,960
management solution they've been around

00:45:34,119 --> 00:45:44,760
since 2000 GPL southeastern company

00:45:39,960 --> 00:45:48,279
zabbix I zabbix is sort of the is

00:45:44,760 --> 00:45:53,049
developed by a open source company in

00:45:48,279 --> 00:45:55,750
Russia interesting I like I like the I

00:45:53,049 --> 00:45:58,000
think now yes and cacti are the most

00:45:55,750 --> 00:45:59,529
popular so like the bottom three because

00:45:58,000 --> 00:46:02,529
I think they have a little wider breadth

00:45:59,529 --> 00:46:04,240
of not just availability monitoring but

00:46:02,529 --> 00:46:05,789
performance monitoring as well they do

00:46:04,240 --> 00:46:08,950
some other things like automatic

00:46:05,789 --> 00:46:10,720
discovery and things like that those are

00:46:08,950 --> 00:46:13,750
your list well I think it comes to

00:46:10,720 --> 00:46:15,700
monitoring there are thousands literally

00:46:13,750 --> 00:46:19,359
are thousands of monitoring package out

00:46:15,700 --> 00:46:21,640
there these are the open-source ones I

00:46:19,359 --> 00:46:23,640
think are solid and useful and you

00:46:21,640 --> 00:46:26,970
should pick the one that that generally

00:46:23,640 --> 00:46:26,970
works for you

00:46:30,330 --> 00:46:36,250
Automation this is also one of my

00:46:33,160 --> 00:46:39,010
favorites so automation and

00:46:36,250 --> 00:46:41,710
orchestration orchestration tools or

00:46:39,010 --> 00:46:43,570
stuff that accomplish tasks for you

00:46:41,710 --> 00:46:46,780
either in a one-to-many relationship or

00:46:43,570 --> 00:46:48,910
one-to-one or ideally in a way that can

00:46:46,780 --> 00:46:54,190
cue those jobs and do them with some

00:46:48,910 --> 00:46:57,250
kind of priority automate it sort of

00:46:54,190 --> 00:47:00,040
more of a single server tool it sort of

00:46:57,250 --> 00:47:02,100
breaks my cloudy rule but it's really a

00:47:00,040 --> 00:47:05,910
handy way to bring up a server and

00:47:02,100 --> 00:47:09,040
accomplish a lot of post install tasks

00:47:05,910 --> 00:47:11,170
Capistrano Capistrano was pretty popular

00:47:09,040 --> 00:47:13,540
for a while and then I think they

00:47:11,170 --> 00:47:16,030
switched their project lead which is

00:47:13,540 --> 00:47:17,860
sort of the i'm all about open source

00:47:16,030 --> 00:47:22,240
projects but when your project lead

00:47:17,860 --> 00:47:25,360
changes sometimes that's not in less

00:47:22,240 --> 00:47:26,800
than favorable circumstances then then

00:47:25,360 --> 00:47:28,240
you may want to consider whether or not

00:47:26,800 --> 00:47:32,140
that project is when you're going to

00:47:28,240 --> 00:47:34,390
depend on or where there isn't a

00:47:32,140 --> 00:47:38,400
critical mass of people developing that

00:47:34,390 --> 00:47:42,310
product behind that project in concert

00:47:38,400 --> 00:47:43,990
next thing we have is run deck this is

00:47:42,310 --> 00:47:48,190
the one I think is the most interesting

00:47:43,990 --> 00:47:52,660
out there simply because it allows you

00:47:48,190 --> 00:47:54,910
to execute multiple scripts and jobs

00:47:52,660 --> 00:47:57,100
across your whole infrastructure with

00:47:54,910 --> 00:48:00,730
some kind of priority and take back and

00:47:57,100 --> 00:48:03,790
receive feedback into your job scheduler

00:48:00,730 --> 00:48:05,530
does anybody use a software does anybody

00:48:03,790 --> 00:48:08,320
here know what a run book is anybody use

00:48:05,530 --> 00:48:12,430
a run book so a job scheduler it runs

00:48:08,320 --> 00:48:14,050
across your management architecture this

00:48:12,430 --> 00:48:16,240
is the only thing in open source I've

00:48:14,050 --> 00:48:18,730
seen so far that comes close to that if

00:48:16,240 --> 00:48:21,580
your blade ever been blade logic for

00:48:18,730 --> 00:48:26,500
them which was sort of last evolution of

00:48:21,580 --> 00:48:30,070
these kind of tools across blades run

00:48:26,500 --> 00:48:31,600
deck is is pretty interesting and it

00:48:30,070 --> 00:48:35,190
integrates with a lot of tools I talked

00:48:31,600 --> 00:48:39,250
about already funk funk is a

00:48:35,190 --> 00:48:41,980
orchestration tool that comes from the

00:48:39,250 --> 00:48:43,630
same people that developed cobbler so

00:48:41,980 --> 00:48:45,640
it's an orchestration layer that's

00:48:43,630 --> 00:48:48,600
all integrated with cobbler should be

00:48:45,640 --> 00:48:50,890
worth looking at em collective is a

00:48:48,600 --> 00:48:54,310
orchestration layer that's integrated

00:48:50,890 --> 00:48:56,050
with puppet look them up if you if you

00:48:54,310 --> 00:48:58,060
pick some of your tools these are sort

00:48:56,050 --> 00:49:03,220
of some some that are already have tool

00:48:58,060 --> 00:49:05,740
chains to go together so the reason I

00:49:03,220 --> 00:49:07,030
touched all this on all these parts just

00:49:05,740 --> 00:49:10,150
kids at the end of the day what I want

00:49:07,030 --> 00:49:13,090
you to do is come up with tool chains

00:49:10,150 --> 00:49:15,910
that automate the install configuration

00:49:13,090 --> 00:49:18,190
and starting and stopping of services

00:49:15,910 --> 00:49:20,020
within your cloud and that's taking your

00:49:18,190 --> 00:49:23,020
cloud whether it's eucalyptus OpenStack

00:49:20,020 --> 00:49:25,510
CloudStack Abuk well starting your you

00:49:23,020 --> 00:49:27,570
your cloud image through some kind of

00:49:25,510 --> 00:49:31,000
automated install whether it's kickstart

00:49:27,570 --> 00:49:32,830
cobbler spacewalk configuring it with

00:49:31,000 --> 00:49:34,870
Chef CF engine puppet and there's

00:49:32,830 --> 00:49:36,820
actually a lot of integrations in those

00:49:34,870 --> 00:49:39,760
communities there's integrations between

00:49:36,820 --> 00:49:45,030
cobbler and puppet there's integrations

00:49:39,760 --> 00:49:47,620
between puppet and xena and run deck and

00:49:45,030 --> 00:49:50,380
already out there or you can create your

00:49:47,620 --> 00:49:54,130
own then once it's configured brings the

00:49:50,380 --> 00:49:55,510
services into play so I was rushing

00:49:54,130 --> 00:49:57,310
there towards the end because I've about

00:49:55,510 --> 00:50:03,760
seven minutes I want to give you guys

00:49:57,310 --> 00:50:07,050
chance for questions oh yeah yeah URL

00:50:03,760 --> 00:50:07,050
for the slideshow is

00:50:55,770 --> 00:51:01,840
so the question is do I ever see the

00:50:59,140 --> 00:51:06,580
evolution of a standard API and i would

00:51:01,840 --> 00:51:08,650
say i would see some subset of api calls

00:51:06,580 --> 00:51:11,860
that would be standard across most cloud

00:51:08,650 --> 00:51:16,720
providers which is pretty much happening

00:51:11,860 --> 00:51:19,060
today but i think that the value that

00:51:16,720 --> 00:51:22,060
cloud providers are going to add or

00:51:19,060 --> 00:51:25,630
higher up the stack so i think for

00:51:22,060 --> 00:51:28,690
example if i look at a CloudStack we can

00:51:25,630 --> 00:51:31,870
our api's allow you to dynamically call

00:51:28,690 --> 00:51:33,730
and create VLANs and some of the other

00:51:31,870 --> 00:51:35,640
cloud providers didn't provide the

00:51:33,730 --> 00:51:38,020
ability to create VLANs so those

00:51:35,640 --> 00:51:41,170
differentiating features there's always

00:51:38,020 --> 00:51:42,790
going to be some some stuff outside the

00:51:41,170 --> 00:51:45,790
API but things that are standard like

00:51:42,790 --> 00:51:47,860
starting to stopping instances creating

00:51:45,790 --> 00:51:49,180
and destroying instances I could see

00:51:47,860 --> 00:51:55,180
that everybody would support some

00:51:49,180 --> 00:52:03,370
standards someday some but other

00:51:55,180 --> 00:52:05,870
questions I I can tell you right now I

00:52:03,370 --> 00:52:09,930
didn't explain it that well

00:52:05,870 --> 00:52:11,940
absolutely still it's a lot to digest

00:52:09,930 --> 00:52:13,680
and I mean the thing that's really

00:52:11,940 --> 00:52:15,270
interesting is I talked about compute

00:52:13,680 --> 00:52:17,880
cloud because that's a lot at the bottom

00:52:15,270 --> 00:52:19,980
right the next evolution of stuff that's

00:52:17,880 --> 00:52:22,440
going to be interesting is and it is

00:52:19,980 --> 00:52:25,770
interesting today is the past stuff so

00:52:22,440 --> 00:52:28,410
the you know Heroku is really really

00:52:25,770 --> 00:52:34,200
interesting I don't believe they're open

00:52:28,410 --> 00:52:37,950
source but fog is and I'm gonna assume

00:52:34,200 --> 00:52:39,840
makara will be but having the ability to

00:52:37,950 --> 00:52:41,940
as developers because there were a lot

00:52:39,840 --> 00:52:43,950
of developers hands to just go in there

00:52:41,940 --> 00:52:45,810
and buy and have the sandbox where the

00:52:43,950 --> 00:52:47,100
load balancing and multi-tier

00:52:45,810 --> 00:52:49,170
architecture and all that kind of stuff

00:52:47,100 --> 00:52:51,840
is already developed that's that's

00:52:49,170 --> 00:52:54,140
pretty exciting I mean there is not a

00:52:51,840 --> 00:52:56,580
lot of value in the development team

00:52:54,140 --> 00:52:58,920
figuring out what their architecture

00:52:56,580 --> 00:53:00,420
should be for their application I mean

00:52:58,920 --> 00:53:03,000
there's a lot of value in them defining

00:53:00,420 --> 00:53:04,590
what their application needs but making

00:53:03,000 --> 00:53:11,610
that happen as a waste of their time

00:53:04,590 --> 00:53:13,980
that's not specialization security for

00:53:11,610 --> 00:53:17,580
cloud I think that's you know that's the

00:53:13,980 --> 00:53:20,130
million-dollar question I mean there's a

00:53:17,580 --> 00:53:22,640
lot of things that are no different from

00:53:20,130 --> 00:53:26,270
a security standpoint than there were in

00:53:22,640 --> 00:53:28,080
virtual private servers there's a lot of

00:53:26,270 --> 00:53:30,240
changes though and different

00:53:28,080 --> 00:53:33,090
architectures in these software I think

00:53:30,240 --> 00:53:35,520
is a big concern i think it's the number

00:53:33,090 --> 00:53:37,710
one concern Oh actually of our survey

00:53:35,520 --> 00:53:40,680
results I it's the number two concern

00:53:37,710 --> 00:53:43,920
after lack of tag cloud training for

00:53:40,680 --> 00:53:46,140
people to adopt the cloud so I don't

00:53:43,920 --> 00:53:49,170
know I think there will be the security

00:53:46,140 --> 00:53:53,130
industry in general will have to

00:53:49,170 --> 00:53:54,600
instrument for cloud I think it's but I

00:53:53,130 --> 00:53:57,120
think no matter what you put on the

00:53:54,600 --> 00:53:58,590
Internet whatever new service arrives

00:53:57,120 --> 00:54:00,780
you still got to figure out what the

00:53:58,590 --> 00:54:02,850
security is around it but I mean

00:54:00,780 --> 00:54:06,420
obviously by putting stuff in the public

00:54:02,850 --> 00:54:08,900
cloud security becomes a major

00:54:06,420 --> 00:54:08,900
consideration

00:54:11,469 --> 00:54:17,029
soft open source software to look at

00:54:14,210 --> 00:54:19,549
cloud security I would be the same stuff

00:54:17,029 --> 00:54:22,670
that I would recommend for your legacy

00:54:19,549 --> 00:54:26,119
stuff so sourcefire he does store it and

00:54:22,670 --> 00:54:29,029
plan a V those are the two I mean snore

00:54:26,119 --> 00:54:32,299
it isn't an ids and clam baby is

00:54:29,029 --> 00:54:34,640
antivirus but there's also some sort of

00:54:32,299 --> 00:54:36,950
best practices stuff that I don't know

00:54:34,640 --> 00:54:38,599
that there's really goods that I'm aware

00:54:36,950 --> 00:54:43,729
of source of information on cloud

00:54:38,599 --> 00:54:45,920
security yeah the vendor your vendor

00:54:43,729 --> 00:54:48,229
here's the other thing though I I

00:54:45,920 --> 00:54:50,779
noticed that the marketing guys that all

00:54:48,229 --> 00:54:52,789
these vendors have now cloud washed what

00:54:50,779 --> 00:54:54,920
they did before and I don't know how

00:54:52,789 --> 00:54:57,469
much of that is thoughtful re

00:54:54,920 --> 00:55:02,719
architecture or considering what cloud

00:54:57,469 --> 00:55:04,249
infrastructure looks like and so the in

00:55:02,719 --> 00:55:06,440
you know there's there's there's a ton

00:55:04,249 --> 00:55:08,119
all the management disciplines I didn't

00:55:06,440 --> 00:55:11,539
even touch on single sign-on in the

00:55:08,119 --> 00:55:14,809
cloud and I mean that's a big thing that

00:55:11,539 --> 00:55:17,269
you know a big question for a lot of

00:55:14,809 --> 00:55:19,609
enterprises in that case you have people

00:55:17,269 --> 00:55:21,410
like likewise software that provides

00:55:19,609 --> 00:55:24,170
their software for single sign-on and

00:55:21,410 --> 00:55:28,309
open source and you know you have the

00:55:24,170 --> 00:55:30,319
Samba ldap combinations to do that

00:55:28,309 --> 00:55:32,479
that's I mean I don't know that it's

00:55:30,319 --> 00:55:34,279
that much difference but now that you're

00:55:32,479 --> 00:55:36,380
putting your hosting somewhere else and

00:55:34,279 --> 00:55:38,680
you're not using your legacy Active

00:55:36,380 --> 00:55:41,680
Directory installs and stuff like that

00:55:38,680 --> 00:55:44,029
you might need to look at federated

00:55:41,680 --> 00:55:46,729
authentication and single sign-on stuff

00:55:44,029 --> 00:55:48,859
like that that might have slight

00:55:46,729 --> 00:55:57,339
slightly different nuance than in the

00:55:48,859 --> 00:55:57,339
legacy data center any other questions

00:55:57,700 --> 00:56:05,749
my email is market cloud com if you have

00:56:01,640 --> 00:56:08,089
any questions or I think my profile and

00:56:05,749 --> 00:56:11,809
SlideShare also links to my contact as

00:56:08,089 --> 00:56:14,630
well and it's in the slides so if you

00:56:11,809 --> 00:56:16,489
have questions or want to try out

00:56:14,630 --> 00:56:18,170
cloudstack grand in this other software

00:56:16,489 --> 00:56:21,190
and I can help you out I'd be glad to

00:56:18,170 --> 00:56:21,190
so thanks a lot

00:56:37,960 --> 00:56:42,130
what about this I can help the legged we

00:56:40,599 --> 00:56:45,780
have the same problem what would happen

00:56:42,130 --> 00:56:45,780
a few haters you gave me I thought

00:56:48,090 --> 00:56:52,250
let's put the word out

00:56:50,190 --> 00:56:52,250
you

00:57:59,980 --> 00:58:06,740
as a service leader in cloud computing

00:58:03,619 --> 00:58:08,329
all we do is hosting computing to us the

00:58:06,740 --> 00:58:10,280
cloud is just the next generation of

00:58:08,329 --> 00:58:12,230
hosting and if someone who's been in the

00:58:10,280 --> 00:58:14,180
hosting industry for 12 years we feel

00:58:12,230 --> 00:58:15,349
we're in a unique position to really

00:58:14,180 --> 00:58:17,480
help bring these two worlds together

00:58:15,349 --> 00:58:19,819
these different sets of technologies and

00:58:17,480 --> 00:58:22,130
to help companies embrace this new world

00:58:19,819 --> 00:58:24,140
in this great new tool that allows

00:58:22,130 --> 00:58:26,750
faster innovation not only is it about

00:58:24,140 --> 00:58:31,760
us being responsive and accountable but

00:58:26,750 --> 00:58:34,490
it's about us doing more for you whether

00:58:31,760 --> 00:58:38,510
less an OS that works the way that you

00:58:34,490 --> 00:58:42,670
do across all your devices HP Slate and

00:58:38,510 --> 00:58:42,670

YouTube URL: https://www.youtube.com/watch?v=wyXeCMHgP94


