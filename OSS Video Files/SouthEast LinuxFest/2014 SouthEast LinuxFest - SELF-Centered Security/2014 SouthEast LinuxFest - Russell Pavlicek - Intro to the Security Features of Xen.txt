Title: 2014 SouthEast LinuxFest - Russell Pavlicek - Intro to the Security Features of Xen
Publication date: 2015-05-17
Playlist: 2014 SouthEast LinuxFest - SELF-Centered Security
Description: 
	2014 SouthEast LinuxFest
Russell Pavlicek
Introduction to the Advanced Security Features of the Xen Project Hypervisor
Captions: 
	00:00:00,000 --> 00:00:05,339
the following presentation was recorded

00:00:02,490 --> 00:00:08,189
the 2014 southeast linux fest in

00:00:05,339 --> 00:00:11,070
charlotte north carolina it is licensed

00:00:08,189 --> 00:00:14,519
under a creative commons license for

00:00:11,070 --> 00:00:17,910
more information visit www so I see

00:00:14,519 --> 00:00:18,990
Linux PC org the southeast linux fest

00:00:17,910 --> 00:00:22,380
would like to thank the following

00:00:18,990 --> 00:00:24,480
diamond sponsors in 2014 for helping

00:00:22,380 --> 00:00:27,779
make these videos pastas good news

00:00:24,480 --> 00:00:32,250
there's time to repent and join with the

00:00:27,779 --> 00:00:35,790
right team just so it's on one of my

00:00:32,250 --> 00:00:38,969
ending slides just so I don't forget we

00:00:35,790 --> 00:00:41,219
have the Zen project user summit in New

00:00:38,969 --> 00:00:44,579
York this year September 15th it's a

00:00:41,219 --> 00:00:47,399
one-day affair it's all 79 bucks it's

00:00:44,579 --> 00:00:49,350
probably some of the best Zen project

00:00:47,399 --> 00:00:51,899
information you're going to get all year

00:00:49,350 --> 00:00:53,460
I encourage you all to consider putting

00:00:51,899 --> 00:00:55,140
it on the calendar it's on a monday so

00:00:53,460 --> 00:00:59,160
that means if you want to do like a long

00:00:55,140 --> 00:01:01,920
weekend thing and check out manhattan it

00:00:59,160 --> 00:01:05,129
works pretty well so i encourage

00:01:01,920 --> 00:01:07,439
everyone to do that as i'm the one

00:01:05,129 --> 00:01:10,409
organizing it it's like please please

00:01:07,439 --> 00:01:11,970
come but it actually should be really

00:01:10,409 --> 00:01:13,470
good because we're just about to publish

00:01:11,970 --> 00:01:16,549
the schedule and we've got all sorts of

00:01:13,470 --> 00:01:16,549
interesting talks

00:01:24,710 --> 00:01:30,650
how many people intend to stay till

00:01:26,840 --> 00:01:34,119
Sunday excellent I think that's more

00:01:30,650 --> 00:01:38,140
people than staple sunday last year I

00:01:34,119 --> 00:01:40,250
actually have two talks on Sunday that I

00:01:38,140 --> 00:01:45,470
would love to encourage you to show up

00:01:40,250 --> 00:01:48,610
for the others n talk is Zen 44 features

00:01:45,470 --> 00:01:50,899
and futures that's the one after lunch

00:01:48,610 --> 00:01:53,210
that's got a lot of decent information

00:01:50,899 --> 00:01:55,700
in it and then may I have a more general

00:01:53,210 --> 00:01:58,640
open source talk in the morning called

00:01:55,700 --> 00:02:01,220
geek empowerment the real heart of open

00:01:58,640 --> 00:02:02,720
source and I encourage everyone to show

00:02:01,220 --> 00:02:05,090
up for that one because quite honestly I

00:02:02,720 --> 00:02:07,190
think there's something going on in the

00:02:05,090 --> 00:02:11,330
community we need to be aware of i'm not

00:02:07,190 --> 00:02:14,840
hearing any else talk about and it could

00:02:11,330 --> 00:02:17,920
be devastating to us as a community if

00:02:14,840 --> 00:02:20,959
we're not conscious of what's going on

00:02:17,920 --> 00:02:22,880
do some make some changes so encourage

00:02:20,959 --> 00:02:27,319
everyone for that sole mio point we just

00:02:22,880 --> 00:02:29,299
get going this is the advanced security

00:02:27,319 --> 00:02:36,829
features of the Zen project hypervisor

00:02:29,299 --> 00:02:40,850
talk so the obligatory who the hell are

00:02:36,829 --> 00:02:44,660
you slide I'm a guy with a really big

00:02:40,850 --> 00:02:48,650
mouth and so that's my job to have a

00:02:44,660 --> 00:02:52,010
really big mouth I technically get a

00:02:48,650 --> 00:02:55,690
paycheck from Citrix but if you're

00:02:52,010 --> 00:02:58,579
having a VDI issue i will look

00:02:55,690 --> 00:03:00,140
endearingly into your eyes pat your

00:02:58,579 --> 00:03:01,489
hands say they're there and there's

00:03:00,140 --> 00:03:03,680
nothing I can do about it because quite

00:03:01,489 --> 00:03:06,079
honestly I have very little to do with

00:03:03,680 --> 00:03:09,470
anything that's traditional citrix my

00:03:06,079 --> 00:03:14,510
job is to work with the Zen project team

00:03:09,470 --> 00:03:18,019
itself I do open source and I've got a

00:03:14,510 --> 00:03:20,150
history that dates back to 95 I used to

00:03:18,019 --> 00:03:22,100
be a columnist at a couple of magazines

00:03:20,150 --> 00:03:24,760
maybe once upon a time you saw something

00:03:22,100 --> 00:03:28,340
like that anyone remember the Linux show

00:03:24,760 --> 00:03:33,049
the original linux show god i feel old

00:03:28,340 --> 00:03:34,669
okay that you know that was a webcast

00:03:33,049 --> 00:03:35,410
that went on for i think seven years

00:03:34,669 --> 00:03:39,640
that was

00:03:35,410 --> 00:03:41,380
tremendous time and I've written a lot

00:03:39,640 --> 00:03:45,010
of stuff which goes along with having a

00:03:41,380 --> 00:03:47,440
really big mouth so in the in this

00:03:45,010 --> 00:03:50,560
presentation we're going to first deal

00:03:47,440 --> 00:03:52,270
just a little bit about the whole notion

00:03:50,560 --> 00:03:53,380
of security and clouds because that's

00:03:52,270 --> 00:03:56,380
something that's on a lot of people's

00:03:53,380 --> 00:03:58,060
minds and this fits into that we're

00:03:56,380 --> 00:04:00,480
going to talk a bit about the Zen

00:03:58,060 --> 00:04:04,960
security tools that are available and

00:04:00,480 --> 00:04:07,180
some of the security features and you

00:04:04,960 --> 00:04:12,160
know none of this is particularly

00:04:07,180 --> 00:04:13,840
difficult the whole trick of it is you

00:04:12,160 --> 00:04:15,760
have to know that the security tools

00:04:13,840 --> 00:04:18,730
exist and you have to make the decision

00:04:15,760 --> 00:04:21,700
to use them in most cases using them is

00:04:18,730 --> 00:04:23,650
not hard but you have to decide and

00:04:21,700 --> 00:04:26,770
that's part of what this session is is

00:04:23,650 --> 00:04:28,570
to get you aware of what's out there get

00:04:26,770 --> 00:04:30,720
you pointed in the right direction so

00:04:28,570 --> 00:04:34,210
you can use them if you choose to and

00:04:30,720 --> 00:04:36,190
and get get the ball move moving we're

00:04:34,210 --> 00:04:38,860
going to be covering those topics you

00:04:36,190 --> 00:04:41,950
see there by the way these slides are

00:04:38,860 --> 00:04:43,810
already available on Zen project org if

00:04:41,950 --> 00:04:45,760
you go to the presentation section you

00:04:43,810 --> 00:04:48,070
can download it i think it's listed as

00:04:45,760 --> 00:04:56,080
linux best northwest so i gave this talk

00:04:48,070 --> 00:04:57,310
recently that show same set of slides so

00:04:56,080 --> 00:04:59,730
let's just talk for just a couple

00:04:57,310 --> 00:05:03,370
minutes about the whole notion of

00:04:59,730 --> 00:05:05,050
securing a hypervisor in a cloud how

00:05:03,370 --> 00:05:06,910
many people are working with clouds just

00:05:05,050 --> 00:05:09,669
show of hands how many people are

00:05:06,910 --> 00:05:11,320
thinking of working with clouds how many

00:05:09,669 --> 00:05:18,010
people are fearful of working with

00:05:11,320 --> 00:05:19,419
clouds okay the stuff I'm not going to

00:05:18,010 --> 00:05:21,040
be talking about it's not cloud specific

00:05:19,419 --> 00:05:22,840
at all but it's just it's one of those

00:05:21,040 --> 00:05:26,020
topics that comes to mind for a lot of

00:05:22,840 --> 00:05:28,750
folks Zen project for folks who don't

00:05:26,020 --> 00:05:30,550
know is a type one hypervisor and just a

00:05:28,750 --> 00:05:34,390
minute we'll discuss exactly what that

00:05:30,550 --> 00:05:36,850
means it was actually had the very

00:05:34,390 --> 00:05:39,190
interesting function of being built for

00:05:36,850 --> 00:05:43,080
a cloud environment before the whole

00:05:39,190 --> 00:05:44,819
terming cloud was even coined which

00:05:43,080 --> 00:05:47,340
a really neat thing and it's got a

00:05:44,819 --> 00:05:49,470
number of security features that we're

00:05:47,340 --> 00:05:52,770
going to cover that you just have to

00:05:49,470 --> 00:05:56,039
decide to use now the whole notion of

00:05:52,770 --> 00:05:57,780
cloud security is the 800-pound gorilla

00:05:56,039 --> 00:06:00,000
I mean how many people have had the

00:05:57,780 --> 00:06:02,250
discussion you know about this or that

00:06:00,000 --> 00:06:04,439
about clouds low clouds are insecure we

00:06:02,250 --> 00:06:07,319
can't have our data out mcleod because

00:06:04,439 --> 00:06:08,909
you know that's insecure and we're going

00:06:07,319 --> 00:06:11,219
to talk about that in just a second but

00:06:08,909 --> 00:06:12,750
you know that's one of the big

00:06:11,219 --> 00:06:15,449
issues when it comes to cloud adoption

00:06:12,750 --> 00:06:18,090
right now is the whole security thing I

00:06:15,449 --> 00:06:20,310
think the second biggest issue when it

00:06:18,090 --> 00:06:23,789
comes to cloud adoption is this whole

00:06:20,310 --> 00:06:26,819
notion of change how you know not too

00:06:23,789 --> 00:06:29,940
many no cloud advocates in the room you

00:06:26,819 --> 00:06:32,490
can tell a cloud advocate because

00:06:29,940 --> 00:06:34,110
they've got like stripes running down

00:06:32,490 --> 00:06:36,060
their back where they've been beaten

00:06:34,110 --> 00:06:39,949
soundly when they go into their IT

00:06:36,060 --> 00:06:43,199
operation and say we need a clap and

00:06:39,949 --> 00:06:45,180
especially if you've got an IT operation

00:06:43,199 --> 00:06:47,729
that you know his guys would like you

00:06:45,180 --> 00:06:51,090
know as much gray hair as i do you got

00:06:47,729 --> 00:06:54,139
to remember that in this industry the

00:06:51,090 --> 00:06:58,199
mantra up till you know the 90s was that

00:06:54,139 --> 00:07:02,180
uniting change is bad the whole idea of

00:06:58,199 --> 00:07:04,379
IT was stability when you left at night

00:07:02,180 --> 00:07:06,360
everything that was doing all that was

00:07:04,379 --> 00:07:08,190
doing would do the exact same thing when

00:07:06,360 --> 00:07:11,069
you got it in the morning that was the

00:07:08,190 --> 00:07:13,710
ideal that was Nirvana if something

00:07:11,069 --> 00:07:16,259
changed in the night that meant

00:07:13,710 --> 00:07:18,960
something broke that meant probably

00:07:16,259 --> 00:07:20,879
someone got a phone call at 3am that

00:07:18,960 --> 00:07:22,440
meant someone's job was probably

00:07:20,879 --> 00:07:23,879
threatened that unless it's up by

00:07:22,440 --> 00:07:25,460
beginning of business you know you may

00:07:23,879 --> 00:07:29,789
not have a job in this organization

00:07:25,460 --> 00:07:32,430
change was a horror in IT and when you

00:07:29,789 --> 00:07:34,650
got a new box in what would you do you

00:07:32,430 --> 00:07:36,509
beat the box to death until all the

00:07:34,650 --> 00:07:38,069
change was out of it and you had the

00:07:36,509 --> 00:07:39,810
runbook assigned to it you had the

00:07:38,069 --> 00:07:41,580
policies assigned to it yet the software

00:07:39,810 --> 00:07:43,979
assigned to it so everything was known

00:07:41,580 --> 00:07:45,360
so by the time turned it on it did what

00:07:43,979 --> 00:07:48,569
it was supposed to do with just satting

00:07:45,360 --> 00:07:50,550
and you could walk down the racks you

00:07:48,569 --> 00:07:53,610
know in the old old style data centers

00:07:50,550 --> 00:07:56,580
and just eyes closed like that's the HR

00:07:53,610 --> 00:07:58,889
server this is the payroll server this

00:07:56,580 --> 00:08:01,129
the database and you didn't have to look

00:07:58,889 --> 00:08:03,080
because you knew where everything was

00:08:01,129 --> 00:08:06,449
everything was in its little box

00:08:03,080 --> 00:08:10,889
everything did it what it was told along

00:08:06,449 --> 00:08:12,689
comes cloud and it's like hey we want

00:08:10,889 --> 00:08:15,509
something that changes automatically

00:08:12,689 --> 00:08:17,849
with with the wind we want something

00:08:15,509 --> 00:08:20,849
that will move and groove with the with

00:08:17,849 --> 00:08:23,789
the business well what a lot of younger

00:08:20,849 --> 00:08:25,500
folks particularly don't realize is you

00:08:23,789 --> 00:08:27,889
know when they go into an old-school IT

00:08:25,500 --> 00:08:30,629
organization starts saying that it's

00:08:27,889 --> 00:08:32,130
like telling your saintly grandmother

00:08:30,629 --> 00:08:34,919
who goes to church every day that you

00:08:32,130 --> 00:08:37,110
become Satanist it's like telling the

00:08:34,919 --> 00:08:40,140
PETA person that you like stomping

00:08:37,110 --> 00:08:44,760
puppies to death it's you are in you're

00:08:40,140 --> 00:08:46,649
not just doing something on that's not

00:08:44,760 --> 00:08:48,870
normal you're doing something evil

00:08:46,649 --> 00:08:51,839
because you're embracing change and

00:08:48,870 --> 00:08:54,570
everyone with gray hair NIT knows that

00:08:51,839 --> 00:08:57,240
change is evil so that was part of the

00:08:54,570 --> 00:09:00,089
the real pain that a lot of people had

00:08:57,240 --> 00:09:01,769
to go through if they became cloud

00:09:00,089 --> 00:09:04,649
advocates and I had to deal with that

00:09:01,769 --> 00:09:05,970
role for quite some time but we're not

00:09:04,649 --> 00:09:08,640
going to deal about that specifically

00:09:05,970 --> 00:09:10,500
but the second big one is security and

00:09:08,640 --> 00:09:12,360
cloud and hopefully we'll be covering

00:09:10,500 --> 00:09:16,050
that today if you're having to wrestle

00:09:12,360 --> 00:09:17,970
with that notion the truth is that

00:09:16,050 --> 00:09:21,360
security and IT has always been a

00:09:17,970 --> 00:09:23,699
problem so this notion of Oh in the

00:09:21,360 --> 00:09:27,149
cloud it's not secure well that's

00:09:23,699 --> 00:09:29,910
actually a fairly true statement because

00:09:27,149 --> 00:09:33,329
your data not in the cloud is also

00:09:29,910 --> 00:09:38,220
insecure it's just that you've ignored

00:09:33,329 --> 00:09:41,040
it in most cases because frequently the

00:09:38,220 --> 00:09:43,709
brand solution has been the firewall oh

00:09:41,040 --> 00:09:47,820
we've got the firewall if we've got the

00:09:43,709 --> 00:09:50,579
firewall we are secure let me tell you a

00:09:47,820 --> 00:09:52,120
story that that will date me as if I

00:09:50,579 --> 00:09:55,510
need any more dating than ball

00:09:52,120 --> 00:09:57,670
done in the era before the Internet I

00:09:55,510 --> 00:10:03,190
worked with a very large media company

00:09:57,670 --> 00:10:07,089
that used to deal with security in this

00:10:03,190 --> 00:10:10,420
way when we had to dial in to check out

00:10:07,089 --> 00:10:13,240
the site they say just make sure that

00:10:10,420 --> 00:10:16,770
modem is unplugged after the dial in and

00:10:13,240 --> 00:10:18,700
that will keep us secure we're secure

00:10:16,770 --> 00:10:22,240
because they can't get in through the

00:10:18,700 --> 00:10:25,600
motor and on the surface that sounds

00:10:22,240 --> 00:10:28,029
like decent logic but then you add a

00:10:25,600 --> 00:10:31,089
couple other pieces to this picture this

00:10:28,029 --> 00:10:33,970
was a company that used to thrive in

00:10:31,089 --> 00:10:35,680
acquiring other companies when they do

00:10:33,970 --> 00:10:37,330
the acquisition they bring everyone into

00:10:35,680 --> 00:10:40,270
the room and they say fifty percent of

00:10:37,330 --> 00:10:43,540
you are now fired other fifty percent of

00:10:40,270 --> 00:10:47,680
you are going to do the work of the guys

00:10:43,540 --> 00:10:49,750
who just left without complaining if you

00:10:47,680 --> 00:10:51,490
complain you'll be fired and we'll hire

00:10:49,750 --> 00:10:53,110
back the guy that we just fired who used

00:10:51,490 --> 00:10:57,910
to sit next to you because he now wants

00:10:53,110 --> 00:11:01,120
a job so you have a group of people who

00:10:57,910 --> 00:11:05,740
are used to being treated like meat they

00:11:01,120 --> 00:11:07,930
are cattle they're not happy add to that

00:11:05,740 --> 00:11:09,550
the piece of the picture that all these

00:11:07,930 --> 00:11:11,950
various sites that they had located

00:11:09,550 --> 00:11:16,120
throughout the country all had the exact

00:11:11,950 --> 00:11:20,080
same password structured so the

00:11:16,120 --> 00:11:23,100
application in Des Moines had the exact

00:11:20,080 --> 00:11:29,650
same password as the one in Portland is

00:11:23,100 --> 00:11:33,100
the one down in Florida and these people

00:11:29,650 --> 00:11:35,260
talk to each other so if you get one

00:11:33,100 --> 00:11:40,089
disgruntled employee somewhere in

00:11:35,260 --> 00:11:42,220
Wisconsin calling his buddy who was was

00:11:40,089 --> 00:11:47,050
around in New York say by the way the

00:11:42,220 --> 00:11:50,920
password to payroll is blah you have a

00:11:47,050 --> 00:11:54,550
problem did they recognize the problem

00:11:50,920 --> 00:11:56,950
no because they had turned off the

00:11:54,550 --> 00:11:59,910
telephone and that's part of the problem

00:11:56,950 --> 00:12:03,250
that we have with security thinking in

00:11:59,910 --> 00:12:05,410
old IT we have the firewall well that's

00:12:03,250 --> 00:12:08,680
great the firewall

00:12:05,410 --> 00:12:10,350
can help stop one type of exploit or

00:12:08,680 --> 00:12:13,029
maybe more coming in from the outside

00:12:10,350 --> 00:12:15,610
but there are other exports there are

00:12:13,029 --> 00:12:18,910
other possibilities all of this comes

00:12:15,610 --> 00:12:20,910
down to security thinking so this whole

00:12:18,910 --> 00:12:23,170
notion of security through obscurity

00:12:20,910 --> 00:12:25,389
we're going to lock it in the back room

00:12:23,170 --> 00:12:27,339
is dead let's just get that off the

00:12:25,389 --> 00:12:30,930
table right now what we're going to deal

00:12:27,339 --> 00:12:36,250
with excuse me is security by design

00:12:30,930 --> 00:12:39,430
that by wishful thinking and that means

00:12:36,250 --> 00:12:41,379
you don't rely on your firewalls you

00:12:39,430 --> 00:12:43,569
don't address one area of your security

00:12:41,379 --> 00:12:47,500
saying well we've got this locked up and

00:12:43,569 --> 00:12:49,899
then ignore other areas of security you

00:12:47,500 --> 00:12:52,120
need a and you certainly can't say we

00:12:49,899 --> 00:12:53,350
haven't had the problem before in this

00:12:52,120 --> 00:12:55,389
industry that's not even a valid

00:12:53,350 --> 00:12:57,250
statement for crying out loud because

00:12:55,389 --> 00:13:00,939
the world looks different today than it

00:12:57,250 --> 00:13:04,180
did a year ago let alone five you have

00:13:00,939 --> 00:13:07,689
to have security by design and that's

00:13:04,180 --> 00:13:11,050
the way that Zen project comes about we

00:13:07,689 --> 00:13:16,480
have a security model by design by

00:13:11,050 --> 00:13:18,069
intent the designers foresaw a day and

00:13:16,480 --> 00:13:20,019
you can look at this paper like I said

00:13:18,069 --> 00:13:21,939
these slides are online so if you want

00:13:20,019 --> 00:13:26,370
the link just you know go to Zen project

00:13:21,939 --> 00:13:26,370
org grab the presentation click the link

00:13:26,670 --> 00:13:32,350
you've got this paper out there which

00:13:30,069 --> 00:13:34,750
was actually written in late 90s saying

00:13:32,350 --> 00:13:37,930
at some point we want a flexible

00:13:34,750 --> 00:13:40,899
infrastructure that responds to the need

00:13:37,930 --> 00:13:43,209
of the organization and that's why we

00:13:40,899 --> 00:13:45,610
need this thing that's a hypervisor and

00:13:43,209 --> 00:13:48,189
it's got to be able to withstand the

00:13:45,610 --> 00:13:50,380
pressures of that style of organization

00:13:48,189 --> 00:13:53,110
so we have a hypervisor that was

00:13:50,380 --> 00:13:56,559
actually designed with this problem in

00:13:53,110 --> 00:13:59,559
mind let's talk for just a minute about

00:13:56,559 --> 00:14:02,379
the basic architecture does not everyone

00:13:59,559 --> 00:14:05,980
is an architecture freak most people

00:14:02,379 --> 00:14:09,730
have jobs this is a textbook picture of

00:14:05,980 --> 00:14:11,110
a type one bare-metal hypervisor you

00:14:09,730 --> 00:14:12,730
know you've got that we've got the

00:14:11,110 --> 00:14:14,829
hardware on the bottom you've got a

00:14:12,730 --> 00:14:16,689
hypervisor layer that sits right on top

00:14:14,829 --> 00:14:18,480
of the hardware and then you've got your

00:14:16,689 --> 00:14:21,600
vm sitting on the top

00:14:18,480 --> 00:14:24,690
very simple sort of concept now that's

00:14:21,600 --> 00:14:26,399
not the only model of hypervisor that's

00:14:24,690 --> 00:14:29,399
out there there's also called a hosted

00:14:26,399 --> 00:14:33,060
or type 2 type 2 does it a little

00:14:29,399 --> 00:14:36,029
differently we've got the hardware now

00:14:33,060 --> 00:14:40,620
we've got a host OS and the hypervisor

00:14:36,029 --> 00:14:43,769
functions are within the host OS and the

00:14:40,620 --> 00:14:46,800
vm sit on top of it that's closer to

00:14:43,769 --> 00:14:51,029
what kvm does and some other hypervisors

00:14:46,800 --> 00:14:53,370
do it that way which is better whichever

00:14:51,029 --> 00:14:54,570
works best for you it's simply two

00:14:53,370 --> 00:14:58,500
different ways of approaching the

00:14:54,570 --> 00:15:00,630
problem and frequently you'll find that

00:14:58,500 --> 00:15:03,630
one fits better inside one organization

00:15:00,630 --> 00:15:06,240
than another but it really is depends on

00:15:03,630 --> 00:15:13,199
your application but those are the two

00:15:06,240 --> 00:15:16,320
two basic architectures now Zen is a

00:15:13,199 --> 00:15:18,839
type one with a twist so here is your

00:15:16,320 --> 00:15:22,079
text book type one that we just had up

00:15:18,839 --> 00:15:26,370
before this is what the Zen architecture

00:15:22,079 --> 00:15:29,250
looks like pretty similar you notice all

00:15:26,370 --> 00:15:34,410
the pieces are there what's missing the

00:15:29,250 --> 00:15:36,870
device drivers and models that goes into

00:15:34,410 --> 00:15:40,260
a thing which we call dom0 or control

00:15:36,870 --> 00:15:42,060
domain why would we do that well it's

00:15:40,260 --> 00:15:45,269
really quite simple how many people have

00:15:42,060 --> 00:15:48,779
been working with Linux for say 15 years

00:15:45,269 --> 00:15:51,569
show of hands okay you remember the days

00:15:48,779 --> 00:15:53,190
when you would go out maybe to the local

00:15:51,569 --> 00:15:55,139
computer show or something you come back

00:15:53,190 --> 00:15:56,279
with that new piece of hardware it's

00:15:55,139 --> 00:15:58,740
like yeah I've been waiting to do this

00:15:56,279 --> 00:16:02,180
you plug it into your machine and you

00:15:58,740 --> 00:16:05,519
boot it up and it's like crap no driver

00:16:02,180 --> 00:16:07,649
so you either go out looking at fresh

00:16:05,519 --> 00:16:10,319
meat or source words looking for a

00:16:07,649 --> 00:16:11,970
driver or maybe you try to upgrade your

00:16:10,319 --> 00:16:13,769
Linux distribution or something like

00:16:11,970 --> 00:16:17,959
this try to get that driver in for the

00:16:13,769 --> 00:16:20,190
hardware well it turns out that by now

00:16:17,959 --> 00:16:23,130
linux and the bsd s have a pretty good

00:16:20,190 --> 00:16:25,260
handle on drivers doesn't make any sense

00:16:23,130 --> 00:16:27,480
to reinvent the wheel and keep those

00:16:25,260 --> 00:16:29,130
drivers down the hypervisor layer so

00:16:27,480 --> 00:16:32,100
you're constantly having to upgrade your

00:16:29,130 --> 00:16:35,130
hypervisor to get the latest driver

00:16:32,100 --> 00:16:38,160
so the thought is we'll just leverage

00:16:35,130 --> 00:16:41,220
the driver power that's already there in

00:16:38,160 --> 00:16:44,040
the control domain and use that as the

00:16:41,220 --> 00:16:46,740
means of talking to the hardware where

00:16:44,040 --> 00:16:51,209
we need to so that's really why the

00:16:46,740 --> 00:16:53,880
device drivers and device models are up

00:16:51,209 --> 00:16:55,319
in the control domain now let's just

00:16:53,880 --> 00:16:57,360
take a look let's do a little break down

00:16:55,319 --> 00:17:00,329
further for the sake of our discussion

00:16:57,360 --> 00:17:04,909
today and this is a little bit more

00:17:00,329 --> 00:17:07,079
exact picture not quite as pretty of

00:17:04,909 --> 00:17:12,929
what's going on notice that we have a

00:17:07,079 --> 00:17:15,659
fully virtualized hv m vm over here and

00:17:12,929 --> 00:17:19,530
that talks to the device model which is

00:17:15,659 --> 00:17:23,789
qm you just so people are aware yes zen

00:17:19,530 --> 00:17:27,449
in fully virtualized mode uses qmu but

00:17:23,789 --> 00:17:33,600
it doesn't use qm use virtualization it

00:17:27,449 --> 00:17:35,940
only uses its device emulation that's

00:17:33,600 --> 00:17:38,280
what it's there for we do not actually

00:17:35,940 --> 00:17:39,630
use its virtualization capabilities but

00:17:38,280 --> 00:17:41,850
it does a real nice job of imitating

00:17:39,630 --> 00:17:45,090
devices so that's that's good for that

00:17:41,850 --> 00:17:49,080
that's in fully virtualized mode in para

00:17:45,090 --> 00:17:51,299
virtualized mode we have our own drivers

00:17:49,080 --> 00:17:55,320
having to do with netback netfront black

00:17:51,299 --> 00:17:57,390
bloc baton and block front and so that's

00:17:55,320 --> 00:17:59,220
the image here and we're going to go

00:17:57,390 --> 00:18:03,330
through a couple a couple different

00:17:59,220 --> 00:18:07,440
examples using these these two styles of

00:18:03,330 --> 00:18:09,179
VMS for a moment first is the whole

00:18:07,440 --> 00:18:11,970
notion of what is security thinking

00:18:09,179 --> 00:18:14,700
we're going to actually deal with threat

00:18:11,970 --> 00:18:18,270
models we're going to think through some

00:18:14,700 --> 00:18:21,030
possible threats we're going to try to

00:18:18,270 --> 00:18:25,860
evaluate what can happen from those

00:18:21,030 --> 00:18:27,150
threats and how badly you can you'll be

00:18:25,860 --> 00:18:29,280
affected by them if they're successful

00:18:27,150 --> 00:18:33,630
and then we're going to look at some

00:18:29,280 --> 00:18:38,580
tactics to fight those threats there is

00:18:33,630 --> 00:18:40,260
no magic bullet and that's you know like

00:18:38,580 --> 00:18:41,730
I said there was the firewall thing we

00:18:40,260 --> 00:18:45,360
have the firewall therefore we're secure

00:18:41,730 --> 00:18:47,070
no magic bullets are dead too so what we

00:18:45,360 --> 00:18:50,940
need to be thinking about is defense in

00:18:47,070 --> 00:18:52,169
depth defense in depth thinking is y'all

00:18:50,940 --> 00:18:55,049
you know if you think of an old medieval

00:18:52,169 --> 00:18:56,880
town you know you got the town we've got

00:18:55,049 --> 00:19:00,030
the Marauders they're coming in they say

00:18:56,880 --> 00:19:03,330
well how can we defend the town well

00:19:00,030 --> 00:19:05,400
we'll put a moat around the town well

00:19:03,330 --> 00:19:07,500
that's pretty cool so they dig a moat

00:19:05,400 --> 00:19:08,909
and they got the moat there but then

00:19:07,500 --> 00:19:12,630
some Marauders come up and they've got

00:19:08,909 --> 00:19:14,370
boots well what we going to do with

00:19:12,630 --> 00:19:17,130
Marauders with boats well let's build

00:19:14,370 --> 00:19:20,340
walls on the inside so we've got the

00:19:17,130 --> 00:19:21,960
moat we've got the wall well that's good

00:19:20,340 --> 00:19:23,340
too because then the Marauders have to

00:19:21,960 --> 00:19:25,409
have the boats then they have to scale

00:19:23,340 --> 00:19:27,390
the walls well then you bring in the

00:19:25,409 --> 00:19:29,340
archers you know so you can fire the

00:19:27,390 --> 00:19:32,070
arrows down so you have level after

00:19:29,340 --> 00:19:34,380
level after level to fight the invader

00:19:32,070 --> 00:19:35,909
that's the sort of model that we're

00:19:34,380 --> 00:19:37,350
going to be talking about today we're

00:19:35,909 --> 00:19:41,640
going to be talking about individual

00:19:37,350 --> 00:19:54,090
tools that you put together in layers to

00:19:41,640 --> 00:19:56,309
defeat the attackers hello okay just for

00:19:54,090 --> 00:19:58,350
the sake of conversation we're going to

00:19:56,309 --> 00:20:01,070
have a fairly basic hardware setup

00:19:58,350 --> 00:20:04,350
figuring two networks one for control

00:20:01,070 --> 00:20:05,730
144 data that second line very

00:20:04,350 --> 00:20:08,250
definitely written by an engineer it

00:20:05,730 --> 00:20:10,980
means that you have hardware with

00:20:08,250 --> 00:20:13,260
virtualization extensions ie any server

00:20:10,980 --> 00:20:16,140
built within the last 12 years or so

00:20:13,260 --> 00:20:19,020
something like that for the sake of

00:20:16,140 --> 00:20:20,850
discussion we're going to assume the

00:20:19,020 --> 00:20:22,590
very default sort of configuration of

00:20:20,850 --> 00:20:27,090
having all your network drivers in dumb

00:20:22,590 --> 00:20:28,500
and domain 0 and then the para

00:20:27,090 --> 00:20:31,740
virtualized and hardware virtualized

00:20:28,500 --> 00:20:33,179
we'll use the defaults default settings

00:20:31,740 --> 00:20:36,000
as well and then we'll talk about how

00:20:33,179 --> 00:20:37,470
you can make it better so let's take a

00:20:36,000 --> 00:20:40,190
look first about an attack on the

00:20:37,470 --> 00:20:44,730
network interface this is a very common

00:20:40,190 --> 00:20:46,789
in fact I remember probably about 10

00:20:44,730 --> 00:20:49,980
years ago now working with a customer

00:20:46,789 --> 00:20:51,540
that was dealing with something similar

00:20:49,980 --> 00:20:53,490
to this only not even in virtualization

00:20:51,540 --> 00:20:54,750
and the interesting thing here is most

00:20:53,490 --> 00:20:55,559
of these attacks we're going to talk

00:20:54,750 --> 00:20:58,169
about

00:20:55,559 --> 00:20:59,249
are not virtualization attacks their

00:20:58,169 --> 00:21:01,169
attacks that even if you're not

00:20:59,249 --> 00:21:06,450
virtualized at all you're still dealing

00:21:01,169 --> 00:21:08,700
with right now excuse me the network

00:21:06,450 --> 00:21:12,090
attacks a big one I worked with the

00:21:08,700 --> 00:21:13,649
customer as I said and they had they

00:21:12,090 --> 00:21:15,419
just gotten a whole bunch of new servers

00:21:13,649 --> 00:21:17,249
in you know rack them stacked them

00:21:15,419 --> 00:21:19,860
getting ready to go ready to power up

00:21:17,249 --> 00:21:22,049
then the boss read something and

00:21:19,860 --> 00:21:25,529
realizes that the brand new shiny nicks

00:21:22,049 --> 00:21:29,700
in all of these servers I have exploits

00:21:25,529 --> 00:21:31,529
in them and the proprietary companies

00:21:29,700 --> 00:21:36,409
that were providing the drivers hadn't

00:21:31,529 --> 00:21:39,210
provided updates yet so they're insecure

00:21:36,409 --> 00:21:41,850
so he takes the corporate credit card

00:21:39,210 --> 00:21:45,179
and gives it to Bob or whoever on the IT

00:21:41,850 --> 00:21:47,070
staff who runs down to whatever a local

00:21:45,179 --> 00:21:50,669
supplier they had and comes back with

00:21:47,070 --> 00:21:54,210
arms full of boxes of older style Knicks

00:21:50,669 --> 00:21:58,110
which were known to be secure and he and

00:21:54,210 --> 00:22:00,929
the rest of the data center staff had a

00:21:58,110 --> 00:22:04,169
wonderful time over the weekend pulling

00:22:00,929 --> 00:22:06,869
every single new box that they had just

00:22:04,169 --> 00:22:08,940
racked and stacked pulling out the

00:22:06,869 --> 00:22:10,799
brand-new shiny nicks and putting in the

00:22:08,940 --> 00:22:15,269
ones that they knew they could secure

00:22:10,799 --> 00:22:17,490
and a wonderful time was had by all this

00:22:15,269 --> 00:22:22,340
is a very common problem through the

00:22:17,490 --> 00:22:24,929
years so we have to be wary of this and

00:22:22,340 --> 00:22:28,350
in this case let's assume that we have a

00:22:24,929 --> 00:22:30,179
rogue domain you know how do you get

00:22:28,350 --> 00:22:31,499
that well any number of ways if your

00:22:30,179 --> 00:22:35,129
hosting company you get them all the

00:22:31,499 --> 00:22:38,360
time somebody buys a vm from you and

00:22:35,129 --> 00:22:40,289
puts nastiness on it's different

00:22:38,360 --> 00:22:41,730
internally but there's any number of

00:22:40,289 --> 00:22:43,919
ways you can have a rogue domain and

00:22:41,730 --> 00:22:45,509
let's say that rogue domain then is

00:22:43,919 --> 00:22:50,940
going to try to attack your network

00:22:45,509 --> 00:22:55,950
stack or nefarious means so that's what

00:22:50,940 --> 00:22:57,179
the picture looks like now how might

00:22:55,950 --> 00:22:59,820
this happened well they may be looking

00:22:57,179 --> 00:23:03,210
for bugs in the hardware driver maybe

00:22:59,820 --> 00:23:05,279
bugs and filtering and bridging maybe

00:23:03,210 --> 00:23:06,780
even in paravirtualization they might be

00:23:05,279 --> 00:23:09,330
trying to attack net back

00:23:06,780 --> 00:23:11,850
net back being the sort of little socket

00:23:09,330 --> 00:23:15,480
that's used for network traffic net back

00:23:11,850 --> 00:23:17,430
itself is like really really simple so

00:23:15,480 --> 00:23:19,440
it's exceptionally hard to do anything

00:23:17,430 --> 00:23:21,180
in net back but we have to be

00:23:19,440 --> 00:23:23,580
intellectually honest and say well it's

00:23:21,180 --> 00:23:28,850
possible so that's why we haven't listed

00:23:23,580 --> 00:23:32,400
here so this is what the attack

00:23:28,850 --> 00:23:38,370
situation looks like and as I said in

00:23:32,400 --> 00:23:39,780
hardware this could be devastating the

00:23:38,370 --> 00:23:42,300
strange thing that most people don't

00:23:39,780 --> 00:23:46,350
necessarily realize is that in a

00:23:42,300 --> 00:23:48,630
hypervisor you can actually defend even

00:23:46,350 --> 00:23:51,750
better than you can in hardware because

00:23:48,630 --> 00:23:55,410
you're not going to send Bob out to the

00:23:51,750 --> 00:24:01,950
local computer mark to get nicks and

00:23:55,410 --> 00:24:03,810
ruin his weekend so let's say that that

00:24:01,950 --> 00:24:05,940
it's been compromised now the red areas

00:24:03,810 --> 00:24:08,760
show what a compromised situation might

00:24:05,940 --> 00:24:11,640
be they manage to get into all the

00:24:08,760 --> 00:24:14,490
networking drivers somehow take that

00:24:11,640 --> 00:24:19,160
over they manage to take over the guest

00:24:14,490 --> 00:24:22,710
network as a result it's a bad situation

00:24:19,160 --> 00:24:25,250
if they're in that situation they might

00:24:22,710 --> 00:24:27,240
even take over the control of domain 0

00:24:25,250 --> 00:24:29,190
because it's all part of the colonel

00:24:27,240 --> 00:24:30,800
structure and that could lead to the

00:24:29,190 --> 00:24:33,300
compromise of the entire system

00:24:30,800 --> 00:24:38,280
everything that's on that hypervisor

00:24:33,300 --> 00:24:40,620
host so what do we do we introduce the

00:24:38,280 --> 00:24:43,020
notion of a driver domain now notice all

00:24:40,620 --> 00:24:47,090
these things in yellow are no longer

00:24:43,020 --> 00:24:51,060
part domain 0 they're in their own

00:24:47,090 --> 00:24:54,930
isolated domain that isolated domain is

00:24:51,060 --> 00:24:57,860
non-privileged that isolated domain has

00:24:54,930 --> 00:25:04,110
no access to things like passwords

00:24:57,860 --> 00:25:06,240
databases even disks why would your why

00:25:04,110 --> 00:25:09,120
would your network domain need to look

00:25:06,240 --> 00:25:12,090
at the disk so you can isolate all these

00:25:09,120 --> 00:25:13,770
things into its own domain so when the

00:25:12,090 --> 00:25:16,880
attack comes from that road

00:25:13,770 --> 00:25:19,980
main it's attacking something that has

00:25:16,880 --> 00:25:25,830
very little of consequence attached to

00:25:19,980 --> 00:25:29,070
it as I said it's unprivileged it

00:25:25,830 --> 00:25:31,890
provides driver access and is very

00:25:29,070 --> 00:25:33,840
limited in sculpt scope so it really

00:25:31,890 --> 00:25:35,790
doesn't have much going on there doesn't

00:25:33,840 --> 00:25:38,880
even have a driver domain doesn't even

00:25:35,790 --> 00:25:41,250
have access to things like bash you know

00:25:38,880 --> 00:25:45,720
you have utilities why would you have

00:25:41,250 --> 00:25:48,780
utilities and a driver coming so the

00:25:45,720 --> 00:25:50,940
compromise compromising happens a driver

00:25:48,780 --> 00:25:53,970
domain is lost so this is what the end

00:25:50,940 --> 00:25:58,860
and situation looks like now is your

00:25:53,970 --> 00:26:00,960
control domain at risk nope has nothing

00:25:58,860 --> 00:26:04,500
to do with the control to me is your

00:26:00,960 --> 00:26:07,230
hypervisor at risk no they haven't

00:26:04,500 --> 00:26:10,070
reached the hypervisor all they've

00:26:07,230 --> 00:26:14,670
managed to do is to basically disrupt

00:26:10,070 --> 00:26:16,740
network traffic now if you're in a cloud

00:26:14,670 --> 00:26:19,410
especially what happens if you disrupt

00:26:16,740 --> 00:26:21,930
network traffic well just about every

00:26:19,410 --> 00:26:25,080
cloud I've dealt with that sends off

00:26:21,930 --> 00:26:27,200
alarms in short order and they say let's

00:26:25,080 --> 00:26:30,960
reboot this or let's restart this

00:26:27,200 --> 00:26:32,880
because something's wrong so they have

00:26:30,960 --> 00:26:34,820
managed to go in and win a victory

00:26:32,880 --> 00:26:38,610
they've disrupted your network traffic

00:26:34,820 --> 00:26:40,860
but in the cloud especially that victory

00:26:38,610 --> 00:26:44,010
is short-lived it could be a matter of a

00:26:40,860 --> 00:26:45,930
minute or two what have they received

00:26:44,010 --> 00:26:50,340
have they received any valuable data

00:26:45,930 --> 00:26:53,730
maybe your proprietary plans maybe your

00:26:50,340 --> 00:26:56,940
passwords not they don't have access to

00:26:53,730 --> 00:27:01,170
any of that all they've done they've

00:26:56,940 --> 00:27:05,030
gone from compromising your entire host

00:27:01,170 --> 00:27:07,440
situation down to being an annoyance

00:27:05,030 --> 00:27:11,550
they've gone from causing a major

00:27:07,440 --> 00:27:14,460
infection two causing flea bites because

00:27:11,550 --> 00:27:17,140
of the use of driver domains

00:27:14,460 --> 00:27:20,440
and what's more if they want to go

00:27:17,140 --> 00:27:23,920
further now they're going to need to a

00:27:20,440 --> 00:27:25,390
try an entirely different attack because

00:27:23,920 --> 00:27:27,310
they got the driver domain but that

00:27:25,390 --> 00:27:28,300
didn't give them what they want so now

00:27:27,310 --> 00:27:30,760
they have to figure out how to

00:27:28,300 --> 00:27:33,220
manipulate a drug domain that has no

00:27:30,760 --> 00:27:37,210
utilities like we said has no access to

00:27:33,220 --> 00:27:40,780
disk has none of this and somehow do it

00:27:37,210 --> 00:27:42,310
do it before the software decides it's

00:27:40,780 --> 00:27:47,500
time to restart because something's gone

00:27:42,310 --> 00:27:50,470
wrong with the network so it's it's it's

00:27:47,500 --> 00:27:53,020
made their job all that much harder now

00:27:50,470 --> 00:27:56,110
how do you do this this is a quick quick

00:27:53,020 --> 00:27:59,320
walkthrough all you need to do is set up

00:27:56,110 --> 00:28:01,810
the appropriate vm with the appropriate

00:27:59,320 --> 00:28:07,030
drivers there are hot plug scripts

00:28:01,810 --> 00:28:08,740
available you give the vm access to the

00:28:07,030 --> 00:28:13,030
things that needs access to in this case

00:28:08,740 --> 00:28:14,950
it needs the physical nick and then

00:28:13,030 --> 00:28:16,720
configure the topology the same way that

00:28:14,950 --> 00:28:19,510
you would within the driver within the

00:28:16,720 --> 00:28:22,270
control domain which basically amounts

00:28:19,510 --> 00:28:25,260
to something that looks more or less

00:28:22,270 --> 00:28:28,840
like this in the configuration file and

00:28:25,260 --> 00:28:30,910
that's about it you can find the full

00:28:28,840 --> 00:28:33,370
walkthrough here on this wiki page like

00:28:30,910 --> 00:28:37,300
I said these slides are available online

00:28:33,370 --> 00:28:39,130
at does n project org so you can go to

00:28:37,300 --> 00:28:42,310
the link there but that's it it's not a

00:28:39,130 --> 00:28:44,770
really difficult thing to employ but

00:28:42,310 --> 00:28:46,330
it's exceptionally powerful if you think

00:28:44,770 --> 00:28:51,040
that you've got a potential weakness in

00:28:46,330 --> 00:28:54,040
this area excuse me let's take a look at

00:28:51,040 --> 00:28:56,490
the PI grub boot loader loader this is a

00:28:54,040 --> 00:29:00,040
situation where in a para virtualized

00:28:56,490 --> 00:29:01,810
situation we see that we have a thing

00:29:00,040 --> 00:29:07,300
called PI grub now as the name sort of

00:29:01,810 --> 00:29:11,470
implies this is a grub boot loader that

00:29:07,300 --> 00:29:13,470
works within the para virtualized world

00:29:11,470 --> 00:29:16,679
and

00:29:13,470 --> 00:29:22,460
we see that that pie grub by default

00:29:16,679 --> 00:29:22,460
resides within the domain 0 environment

00:29:25,039 --> 00:29:32,730
pi grub is a Python program which does

00:29:27,840 --> 00:29:35,700
what rub does it reads the vm the vm

00:29:32,730 --> 00:29:38,400
filesystem it parses the grub calm and

00:29:35,700 --> 00:29:44,039
it does what grub does that's basically

00:29:38,400 --> 00:29:46,320
yet scrub for a particular particular TV

00:29:44,039 --> 00:29:48,559
application so in the case here where

00:29:46,320 --> 00:29:52,260
something has happened to this disc and

00:29:48,559 --> 00:29:55,470
it can now attack pi grub someone's

00:29:52,260 --> 00:29:58,740
inserted some sort of infection or

00:29:55,470 --> 00:30:00,809
whatever it could attack PI grub which

00:29:58,740 --> 00:30:05,429
could attack the entire domain builder

00:30:00,809 --> 00:30:11,159
tool stack and in essence threaten can

00:30:05,429 --> 00:30:13,230
the control domain it may be exploiting

00:30:11,159 --> 00:30:18,110
bugs in the system parser or the menu

00:30:13,230 --> 00:30:21,570
parts or domain builder you know so it's

00:30:18,110 --> 00:30:25,590
you know any number of basic exploits

00:30:21,570 --> 00:30:26,760
that could be trying to leverage and

00:30:25,590 --> 00:30:30,570
this is what it looks like when it's

00:30:26,760 --> 00:30:32,730
done the red area indicating infection

00:30:30,570 --> 00:30:39,960
well you know you just lost control of

00:30:32,730 --> 00:30:42,270
your system so there's a couple ways we

00:30:39,960 --> 00:30:44,669
can combat this one is called using fix

00:30:42,270 --> 00:30:47,190
kernels now if you're using if you're

00:30:44,669 --> 00:30:48,630
using the hypervisor in a production

00:30:47,190 --> 00:30:51,090
situation you're probably already doing

00:30:48,630 --> 00:30:52,830
this you're not allowing people when

00:30:51,090 --> 00:30:55,950
they boot up to pick their current

00:30:52,830 --> 00:30:58,620
that's basically all this means and

00:30:55,950 --> 00:31:02,820
that's a very reasonable way of dealing

00:30:58,620 --> 00:31:06,870
with this so because there is no pie

00:31:02,820 --> 00:31:12,210
grub involved at all there's no chance

00:31:06,870 --> 00:31:13,860
to infect the actual system now that

00:31:12,210 --> 00:31:16,440
means that your host administrator then

00:31:13,860 --> 00:31:17,880
it has to be responsible for picking the

00:31:16,440 --> 00:31:20,130
Colonel's etc and keeping them all up

00:31:17,880 --> 00:31:23,010
today okay in production that makes

00:31:20,130 --> 00:31:24,179
sense but that may not make sense if

00:31:23,010 --> 00:31:26,630
you're running sort of more of a lab

00:31:24,179 --> 00:31:30,710
environment you want the people to

00:31:26,630 --> 00:31:34,180
have the opportunity to pick how they

00:31:30,710 --> 00:31:37,190
want to loot so instead we use PV grub

00:31:34,180 --> 00:31:40,340
now note that PV grub rather than

00:31:37,190 --> 00:31:45,080
residing in the control domain actually

00:31:40,340 --> 00:31:48,140
resides within the target vm and it sits

00:31:45,080 --> 00:31:50,510
on top of a mini OS just a minimalistic

00:31:48,140 --> 00:31:56,710
operating system which is just enough to

00:31:50,510 --> 00:31:59,690
get the thing to boot so it's just a a

00:31:56,710 --> 00:32:01,970
grub that works directly in the guest

00:31:59,690 --> 00:32:06,710
context and it's basically the

00:32:01,970 --> 00:32:12,440
equivalent of a BIOS boot but in a PV

00:32:06,710 --> 00:32:14,240
context as a result if there's something

00:32:12,440 --> 00:32:16,790
out there to infect all you'll do is

00:32:14,240 --> 00:32:18,650
you'll lose the guest domain but if it

00:32:16,790 --> 00:32:20,240
was infected if it was already lost all

00:32:18,650 --> 00:32:22,910
right so basically nothing new has

00:32:20,240 --> 00:32:27,050
happened there is no longer a threat to

00:32:22,910 --> 00:32:29,720
the control domain now how do you use PV

00:32:27,050 --> 00:32:31,100
grub it's actually fairly simple make

00:32:29,720 --> 00:32:33,370
sure that you have the image you look

00:32:31,100 --> 00:32:36,710
for something of that sort out there

00:32:33,370 --> 00:32:38,360
that's where it normally lives debian

00:32:36,710 --> 00:32:41,660
and slice and a few others it's already

00:32:38,360 --> 00:32:43,730
pre-built for you go to nicotine it's

00:32:41,660 --> 00:32:47,810
less you have to build yourself other

00:32:43,730 --> 00:32:50,900
ones are pre-built life in fedora it's

00:32:47,810 --> 00:32:52,610
not difficult to do quite honestly all

00:32:50,900 --> 00:32:55,180
you have to do is then add the

00:32:52,610 --> 00:32:57,440
appropriate bootloader parameter and

00:32:55,180 --> 00:33:00,940
there's the wiki page below and that's

00:32:57,440 --> 00:33:04,160
pretty much it it doesn't take much to

00:33:00,940 --> 00:33:06,250
to get this to go and in fact there's

00:33:04,160 --> 00:33:10,610
been some work inside the latest release

00:33:06,250 --> 00:33:13,430
so that that pv grub is actually i think

00:33:10,610 --> 00:33:17,420
going to be if it's not already now part

00:33:13,430 --> 00:33:19,670
of the actual grub tree so so it will be

00:33:17,420 --> 00:33:22,970
one hundred percent compatible always

00:33:19,670 --> 00:33:25,760
with grub because it is grown it's it's

00:33:22,970 --> 00:33:26,410
part of the grub project and it's just a

00:33:25,760 --> 00:33:32,290
targeted

00:33:26,410 --> 00:33:36,100
appropriately for this sort of use now

00:33:32,290 --> 00:33:39,490
attacking qmu as we said zen doesn't use

00:33:36,100 --> 00:33:41,370
qm use hypervisor capabilities it only

00:33:39,490 --> 00:33:44,550
uses its device modeling capabilities

00:33:41,370 --> 00:33:47,850
and it does a real good job at that but

00:33:44,550 --> 00:33:50,200
as with anything there may be bugs

00:33:47,850 --> 00:33:51,990
that's what I may try to exploit and

00:33:50,200 --> 00:33:55,510
this is the picture we showed before

00:33:51,990 --> 00:33:57,220
there's qmu residing in donne 0 and if

00:33:55,510 --> 00:34:00,730
you're doing full hardware

00:33:57,220 --> 00:34:09,580
virtualization you have to use q mu 2 to

00:34:00,730 --> 00:34:11,470
emulate devices now q mu as i said in

00:34:09,580 --> 00:34:15,940
other context is used for virtualization

00:34:11,470 --> 00:34:20,380
but not for us there may be bugs in you

00:34:15,940 --> 00:34:25,060
know anything that's emulating it's all

00:34:20,380 --> 00:34:27,780
possible and in the standard situation

00:34:25,060 --> 00:34:30,010
that could yield control of domain 0 and

00:34:27,780 --> 00:34:34,419
that could be a serious system

00:34:30,010 --> 00:34:36,780
compromised well we can get around that

00:34:34,419 --> 00:34:40,240
by using what's known as a stub domain

00:34:36,780 --> 00:34:43,450
it's a small service domain that runs a

00:34:40,240 --> 00:34:46,090
singular application it's kind of

00:34:43,450 --> 00:34:47,970
similar in concept to a driver domain

00:34:46,090 --> 00:34:51,750
it's a little different but it's the

00:34:47,970 --> 00:34:55,090
basic concept applies so instead of

00:34:51,750 --> 00:34:57,160
letting qm you reside and control in the

00:34:55,090 --> 00:34:59,820
control domain we're going to create its

00:34:57,160 --> 00:35:05,020
own box and throw q mu in that box and

00:34:59,820 --> 00:35:08,020
use that for device modeling so what

00:35:05,020 --> 00:35:09,910
happens if the assault is successful

00:35:08,020 --> 00:35:12,910
there well you once again you take over

00:35:09,910 --> 00:35:15,760
this little bitty box that has no access

00:35:12,910 --> 00:35:20,380
to passwords no access to databases no

00:35:15,760 --> 00:35:25,480
access to anything and the net result is

00:35:20,380 --> 00:35:30,460
that you have won this very small semi

00:35:25,480 --> 00:35:32,470
useless vm and nothing of value has been

00:35:30,460 --> 00:35:34,180
compromised and now you must come up

00:35:32,470 --> 00:35:37,200
with an entirely different attack to try

00:35:34,180 --> 00:35:41,310
to get some 22 whatever data it is that

00:35:37,200 --> 00:35:42,210
actually tried to get to now something

00:35:41,310 --> 00:35:44,670
we're going to talk about a couple

00:35:42,210 --> 00:35:47,540
minutes with both the driver domain and

00:35:44,670 --> 00:35:50,430
stub domain is the use of flask and

00:35:47,540 --> 00:35:53,700
flask is the security policy and when

00:35:50,430 --> 00:35:57,119
when you add flask to either driver or

00:35:53,700 --> 00:36:00,119
subdomains you end up with a very tight

00:35:57,119 --> 00:36:02,910
package that makes it almost impossible

00:36:00,119 --> 00:36:07,230
to do anything useful with which is

00:36:02,910 --> 00:36:12,240
really really good how do you use a stub

00:36:07,230 --> 00:36:14,250
domain it's almost identical to using PB

00:36:12,240 --> 00:36:18,180
grub make sure the image is out there

00:36:14,250 --> 00:36:19,589
that's where it's normally located in

00:36:18,180 --> 00:36:22,410
slush you have to build it yourself

00:36:19,589 --> 00:36:26,849
although I've heard that's less 12 has

00:36:22,410 --> 00:36:29,640
it pre-built but I'm not sure yet so we

00:36:26,849 --> 00:36:32,070
need to verify that fedora already has

00:36:29,640 --> 00:36:35,869
it built the Debian offshoots you'll

00:36:32,070 --> 00:36:39,750
have to build it yourself you basically

00:36:35,869 --> 00:36:40,950
add that line to the config and then

00:36:39,750 --> 00:36:46,650
follow the information on the wiki

00:36:40,950 --> 00:36:51,030
that's it it's not that difficult but it

00:36:46,650 --> 00:36:53,910
is quite powerful now there's a notion

00:36:51,030 --> 00:36:55,500
of attacking the hypervisor itself you

00:36:53,910 --> 00:36:59,099
know every once in a while I read

00:36:55,500 --> 00:37:00,930
articles that talk about cloud security

00:36:59,099 --> 00:37:03,869
and stuff like this and they say oh well

00:37:00,930 --> 00:37:07,200
you know people can attack this big

00:37:03,869 --> 00:37:10,440
field of hypervisor to get into your

00:37:07,200 --> 00:37:12,960
system well quite honestly if you look

00:37:10,440 --> 00:37:16,200
at the way things are structured with

00:37:12,960 --> 00:37:19,260
within Zen particularly at least the

00:37:16,200 --> 00:37:23,099
assault area for the hypervisor is

00:37:19,260 --> 00:37:27,660
miniscule it really is there just isn't

00:37:23,099 --> 00:37:30,359
a lot to attack but it's possible in the

00:37:27,660 --> 00:37:33,420
11 years Evans been around there has

00:37:30,359 --> 00:37:36,839
been one known successful hypervisor

00:37:33,420 --> 00:37:42,089
exploit and that was killed years ago so

00:37:36,839 --> 00:37:44,529
this is not a a rich area for for

00:37:42,089 --> 00:37:48,920
expansion

00:37:44,529 --> 00:37:52,309
so how could this happen well in the PV

00:37:48,920 --> 00:37:54,559
area you're using paravirtualization and

00:37:52,309 --> 00:37:56,150
maybe some bug in the hyper calls maybe

00:37:54,559 --> 00:37:59,210
that's where they're going if you're

00:37:56,150 --> 00:38:02,029
doing fully hardware virtualized area

00:37:59,210 --> 00:38:04,400
could be the h vm I / calls could be

00:38:02,029 --> 00:38:08,150
instruction emulation or other

00:38:04,400 --> 00:38:09,259
emulations for the various devices or it

00:38:08,150 --> 00:38:12,499
could be trying to use something like

00:38:09,259 --> 00:38:15,920
nested virtualization so if you have

00:38:12,499 --> 00:38:17,509
your druthers stick with the PV area if

00:38:15,920 --> 00:38:19,940
you're worried about this because PV

00:38:17,509 --> 00:38:26,660
area is even smaller than the hardware

00:38:19,940 --> 00:38:31,009
area much less of an attack service now

00:38:26,660 --> 00:38:39,230
the zen security modules also known as

00:38:31,009 --> 00:38:43,660
flask everyone's favorite government

00:38:39,230 --> 00:38:46,849
agency the NSA has been responsible for

00:38:43,660 --> 00:38:50,210
selinux they're also the ones

00:38:46,849 --> 00:38:53,029
responsible for the zen security modules

00:38:50,210 --> 00:38:55,369
or flask now I've heard a lot of people

00:38:53,029 --> 00:38:57,799
recently i live in the Washington DC

00:38:55,369 --> 00:39:01,069
area and I hear a lot of people say a

00:38:57,799 --> 00:39:03,950
lot of unkind things about the NSA

00:39:01,069 --> 00:39:04,880
recently I've yet to hear anyone suggest

00:39:03,950 --> 00:39:07,880
that they don't know anything about

00:39:04,880 --> 00:39:11,089
security however so regardless of what

00:39:07,880 --> 00:39:16,339
else they may be doing this they do

00:39:11,089 --> 00:39:20,480
pretty well and the flash framework was

00:39:16,339 --> 00:39:24,019
developed to be like selinux except on a

00:39:20,480 --> 00:39:26,420
level that makes sense for VMS at a

00:39:24,019 --> 00:39:31,400
particular granularity that makes sense

00:39:26,420 --> 00:39:33,230
for VMS so how many people have had

00:39:31,400 --> 00:39:36,380
aneurysms are closed working with

00:39:33,230 --> 00:39:38,599
selinux show of hands the good news is

00:39:36,380 --> 00:39:42,220
you can have that same aneurysm working

00:39:38,599 --> 00:39:45,859
for the flask okay because it's the same

00:39:42,220 --> 00:39:50,059
mind-numbing gut-wrenching stuff but

00:39:45,859 --> 00:39:52,130
it's there so if you need to type to

00:39:50,059 --> 00:39:56,040
tighten something down into a secure

00:39:52,130 --> 00:39:59,440
bundle blast will do with

00:39:56,040 --> 00:40:01,420
and it even actually restricts down to

00:39:59,440 --> 00:40:07,600
the hyper call level what's allowed

00:40:01,420 --> 00:40:12,040
which is very very powerful so you can

00:40:07,600 --> 00:40:15,070
take flask and wrap it around a driver

00:40:12,040 --> 00:40:19,920
domain take flask and wrap it around a

00:40:15,070 --> 00:40:23,350
stub domain and actually make it so that

00:40:19,920 --> 00:40:26,500
isolated domain can only do exactly what

00:40:23,350 --> 00:40:28,960
it's designed for that's extremely

00:40:26,500 --> 00:40:33,970
powerful now there is a thing called a

00:40:28,960 --> 00:40:38,320
flask example policy and just like with

00:40:33,970 --> 00:40:40,540
selinux you don't take an selinux policy

00:40:38,320 --> 00:40:42,119
that someone hands you and turn it on in

00:40:40,540 --> 00:40:45,820
production and say I hope this works

00:40:42,119 --> 00:40:48,540
because it won't flask is kind of in the

00:40:45,820 --> 00:40:51,490
same boat we give you something that

00:40:48,540 --> 00:40:53,170
looks pretty good but whether it works

00:40:51,490 --> 00:40:56,860
for you you're going to have to decide

00:40:53,170 --> 00:40:59,710
so make sure you test it work with it

00:40:56,860 --> 00:41:02,410
tweak it to make it work for your

00:40:59,710 --> 00:41:05,560
organization we don't test it as

00:41:02,410 --> 00:41:07,090
thoroughly as the rest of the system say

00:41:05,560 --> 00:41:11,050
when we have our test days we have test

00:41:07,090 --> 00:41:13,150
days during every release cycle and and

00:41:11,050 --> 00:41:16,210
the flask example policy doesn't get

00:41:13,150 --> 00:41:17,590
nearly as rigorous a testing because

00:41:16,210 --> 00:41:20,680
it's assumed that you're going to have

00:41:17,590 --> 00:41:25,780
to make adjustments anyway so that's up

00:41:20,680 --> 00:41:29,100
to you but it is exceptionally powerful

00:41:25,780 --> 00:41:34,270
and very useful for things like this so

00:41:29,100 --> 00:41:38,310
how do you deal with flask you've got to

00:41:34,270 --> 00:41:40,960
make sure that excess mm is is enabled

00:41:38,310 --> 00:41:45,160
build the example policy and then you

00:41:40,960 --> 00:41:48,250
start making the adjustments to fit your

00:41:45,160 --> 00:41:50,859
environment and there is a web page that

00:41:48,250 --> 00:41:52,540
will help you get that a venir aneurysm

00:41:50,859 --> 00:41:54,930
you were hoping to have by using things

00:41:52,540 --> 00:41:54,930
like this

00:41:55,460 --> 00:42:03,000
let's talk a little bit about arm-based

00:41:58,080 --> 00:42:06,390
Sakura how many people are looking at or

00:42:03,000 --> 00:42:10,260
working with arm as a future situation

00:42:06,390 --> 00:42:12,180
okay arm is actually one of those very

00:42:10,260 --> 00:42:15,210
interesting things where it's you know

00:42:12,180 --> 00:42:20,460
the architecture that goes anywhere from

00:42:15,210 --> 00:42:24,630
you know the cell phone your car to now

00:42:20,460 --> 00:42:31,050
servers and in particular these highly

00:42:24,630 --> 00:42:33,300
dense server situations Zen works on arm

00:42:31,050 --> 00:42:36,600
and is continuing to be developed on arm

00:42:33,300 --> 00:42:40,110
and it's really a tremendous story from

00:42:36,600 --> 00:42:41,970
a security standpoint as well as any

00:42:40,110 --> 00:42:44,130
other standpoint you want to make this

00:42:41,970 --> 00:42:46,110
is what the arm architecture looks like

00:42:44,130 --> 00:42:50,070
with the hypervisor calls in which i

00:42:46,110 --> 00:42:53,490
think was with the rb7 i think added the

00:42:50,070 --> 00:42:56,610
hypervisor extensions so this is this is

00:42:53,490 --> 00:42:59,790
what the basic arm tree looks like now

00:42:56,610 --> 00:43:02,940
how does n fit into this picture notice

00:42:59,790 --> 00:43:07,890
that the hypervisor fits right into the

00:43:02,940 --> 00:43:10,020
hypervisor mode within arm band doesn't

00:43:07,890 --> 00:43:14,430
need to cross over doesn't need to

00:43:10,020 --> 00:43:17,700
change modes likewise kernel space user

00:43:14,430 --> 00:43:20,250
space fit directly into kernel and user

00:43:17,700 --> 00:43:23,550
space within the within the arm

00:43:20,250 --> 00:43:30,540
architecture this just leaves the device

00:43:23,550 --> 00:43:33,510
tree device tree domain 0 it covers the

00:43:30,540 --> 00:43:36,930
device support that's it I was talking

00:43:33,510 --> 00:43:42,350
with Stefano who's one of our chief arm

00:43:36,930 --> 00:43:44,610
guys okay he was saying that it was like

00:43:42,350 --> 00:43:46,230
the ARM architecture and the Zen

00:43:44,610 --> 00:43:49,080
architecture were implemented from the

00:43:46,230 --> 00:43:52,370
same document that's the way it's

00:43:49,080 --> 00:43:55,740
designed as a result it's extremely good

00:43:52,370 --> 00:43:57,840
for security because while you're in the

00:43:55,740 --> 00:43:59,760
hypervisor mode you never have to run

00:43:57,840 --> 00:44:02,670
into kernel mode to get anything done

00:43:59,760 --> 00:44:04,260
you stay in hyper visor mode you don't

00:44:02,670 --> 00:44:08,880
need to have that addition

00:44:04,260 --> 00:44:12,600
power mode other hypervisors can't do

00:44:08,880 --> 00:44:15,300
that most of the most of the things that

00:44:12,600 --> 00:44:17,930
are designed for the x86 world cross

00:44:15,300 --> 00:44:21,200
because they play with that type to

00:44:17,930 --> 00:44:24,060
style thinking that's not present here

00:44:21,200 --> 00:44:27,030
so it stays inside the hypervisor mode

00:44:24,060 --> 00:44:29,190
it maps and as a result you don't have

00:44:27,030 --> 00:44:31,710
the elevated privileges coming and going

00:44:29,190 --> 00:44:37,470
so there is no room for that level of

00:44:31,710 --> 00:44:41,160
exploit and we don't need to do device

00:44:37,470 --> 00:44:43,980
emulation because we can just cover that

00:44:41,160 --> 00:44:46,650
with the driver in domain 0 period end

00:44:43,980 --> 00:44:50,280
of discussion and we don't have to worry

00:44:46,650 --> 00:44:52,800
about legacy operating systems like

00:44:50,280 --> 00:44:54,240
Windows that can't be educated that so

00:44:52,800 --> 00:44:55,500
what's going on underneath because there

00:44:54,240 --> 00:44:59,130
isn't such a thing really in the arm

00:44:55,500 --> 00:45:03,930
world so it makes for a very tight hard

00:44:59,130 --> 00:45:05,660
solution and that's basically the talk

00:45:03,930 --> 00:45:08,520
can actually have a minute or two left

00:45:05,660 --> 00:45:13,560
as I said at the beginning we've got a

00:45:08,520 --> 00:45:15,720
couple of Zen events coming up the user

00:45:13,560 --> 00:45:19,260
summit which I'm in charge of in

00:45:15,720 --> 00:45:21,180
September please please please consider

00:45:19,260 --> 00:45:24,120
coming if you're using Zen it's well

00:45:21,180 --> 00:45:28,830
worth your time the developer summit is

00:45:24,120 --> 00:45:31,740
at Linux con in Chicago you know if

00:45:28,830 --> 00:45:33,660
you're if you're twisting bits in the

00:45:31,740 --> 00:45:35,820
Zen world that's a that's a good place

00:45:33,660 --> 00:45:38,430
to be but if you're a user please

00:45:35,820 --> 00:45:41,400
consider the top one we are trying to

00:45:38,430 --> 00:45:44,610
rebirth or perhaps more appropriately

00:45:41,400 --> 00:45:47,850
birth a true user community in the Zen

00:45:44,610 --> 00:45:52,890
world zen world historically has been

00:45:47,850 --> 00:45:54,990
very sort of developer minded and hasn't

00:45:52,890 --> 00:45:56,730
necessarily done a really good job of

00:45:54,990 --> 00:45:58,260
trying to bring together the user

00:45:56,730 --> 00:46:00,380
community it sort of been hit and miss

00:45:58,260 --> 00:46:03,840
we're trying to do something about that

00:46:00,380 --> 00:46:07,500
and we're trying very actively to brings

00:46:03,840 --> 00:46:10,950
end-users together so please consider

00:46:07,500 --> 00:46:12,480
user summit it's well worth it I'm going

00:46:10,950 --> 00:46:13,710
to be publishing a schedule probably in

00:46:12,480 --> 00:46:15,269
about a week we've got a lot of good

00:46:13,710 --> 00:46:17,519
talks there

00:46:15,269 --> 00:46:19,499
there and that's like 79 bucks or

00:46:17,519 --> 00:46:21,749
something like this as I said to it's on

00:46:19,499 --> 00:46:24,979
a monday so if you ever wanted to like

00:46:21,749 --> 00:46:27,839
hang out for a long weekend in New York

00:46:24,979 --> 00:46:32,939
here's the excuse you know show up a

00:46:27,839 --> 00:46:36,419
little early many thanks the first off

00:46:32,939 --> 00:46:38,039
there is a wiki page everything's got a

00:46:36,419 --> 00:46:41,009
wiki page but there's a wiki page about

00:46:38,039 --> 00:46:43,799
security many thanks to george dunlop

00:46:41,009 --> 00:46:46,349
and Stefano stab Bellini who did a lot

00:46:43,799 --> 00:47:05,749
of the background work here thank you

00:46:46,349 --> 00:47:09,119
for that of questions sure ah

00:47:05,749 --> 00:47:10,559
performance as having to do with like

00:47:09,119 --> 00:47:13,380
things like drivers domains and

00:47:10,559 --> 00:47:15,509
subdomains thank you I really should

00:47:13,380 --> 00:47:17,759
have addressed that that i'll pay you

00:47:15,509 --> 00:47:20,009
afterwards the interesting thing about

00:47:17,759 --> 00:47:23,849
the use of driver domains and subdomains

00:47:20,009 --> 00:47:25,489
is that used intelligently it can

00:47:23,849 --> 00:47:28,979
actually increase your performance

00:47:25,489 --> 00:47:30,389
rather than decrease it which is really

00:47:28,979 --> 00:47:32,039
kind of an interesting thing in the

00:47:30,389 --> 00:47:33,389
security world that when you lock

00:47:32,039 --> 00:47:36,089
something down it actually does it

00:47:33,389 --> 00:47:38,789
better than it did before the reason for

00:47:36,089 --> 00:47:42,209
that is if you think about it if you

00:47:38,789 --> 00:47:45,299
have multiple VMs going through say one

00:47:42,209 --> 00:47:48,659
network pipe well you know that could be

00:47:45,299 --> 00:47:51,209
a logjam well if suddenly you break this

00:47:48,659 --> 00:47:53,039
thing off into its own little module

00:47:51,209 --> 00:47:54,809
there's nothing that says that you can't

00:47:53,039 --> 00:47:59,399
actually break it off into multiple

00:47:54,809 --> 00:48:01,979
modules so you could end up with let's

00:47:59,399 --> 00:48:04,019
say let's say we're talking qmu so you

00:48:01,979 --> 00:48:07,049
talking about device emulation instead

00:48:04,019 --> 00:48:10,319
of having one Q mu sub domain you could

00:48:07,049 --> 00:48:13,799
have five or you could have ten or as

00:48:10,319 --> 00:48:18,149
many as you need to deal with the number

00:48:13,799 --> 00:48:20,729
of VMs on your machine you know this

00:48:18,149 --> 00:48:22,349
didn't used to be a problem because when

00:48:20,729 --> 00:48:23,819
you were talking about VMS on machine

00:48:22,349 --> 00:48:26,820
you were normally talk about stuff he

00:48:23,819 --> 00:48:30,280
could probably count on your fingers

00:48:26,820 --> 00:48:31,990
there is technology out there now and if

00:48:30,280 --> 00:48:35,440
you'll go to the Zen project org site

00:48:31,990 --> 00:48:38,860
and look at mirage OS or if you've heard

00:48:35,440 --> 00:48:43,390
stuff in the press about osb there is

00:48:38,860 --> 00:48:47,050
this notion of a of what sometimes

00:48:43,390 --> 00:48:55,000
called a cloud operating system it is a

00:48:47,050 --> 00:48:57,490
very very light OS that as a result you

00:48:55,000 --> 00:48:59,290
can put many of them and by many I'm

00:48:57,490 --> 00:49:03,610
talking about hundreds or perhaps even

00:48:59,290 --> 00:49:06,220
thousands on a single host if you're

00:49:03,610 --> 00:49:09,730
going to do that it kind of makes sense

00:49:06,220 --> 00:49:12,850
that at the hypervisor layer you want

00:49:09,730 --> 00:49:15,270
replication of whatever device models or

00:49:12,850 --> 00:49:18,640
anything else that you may be using

00:49:15,270 --> 00:49:21,370
that's one of the powers of using these

00:49:18,640 --> 00:49:24,160
device domains and subdomains what we

00:49:21,370 --> 00:49:26,490
refer to as disaggregation as a

00:49:24,160 --> 00:49:29,640
principle to be able to disaggregate

00:49:26,490 --> 00:49:32,950
stuff that is normally in domain 0 and

00:49:29,640 --> 00:49:35,710
create not just one individual coffee

00:49:32,950 --> 00:49:39,250
but as many as needed so that if you

00:49:35,710 --> 00:49:41,770
have lots and lots of VMs running you

00:49:39,250 --> 00:49:43,630
can say well these 20 you're going to go

00:49:41,770 --> 00:49:46,300
to this one and these 20 are going to go

00:49:43,630 --> 00:49:49,270
to this one however you want to do it so

00:49:46,300 --> 00:49:51,450
instead of actually making it worse

00:49:49,270 --> 00:49:53,920
performance wise we can make it better

00:49:51,450 --> 00:49:58,390
using the exact same techniques that we

00:49:53,920 --> 00:50:01,060
just showed you it's a it's a tremendous

00:49:58,390 --> 00:50:03,700
win-win situation it's an once again

00:50:01,060 --> 00:50:07,600
it's it is a security by design

00:50:03,700 --> 00:50:09,810
situation where someone actually believe

00:50:07,600 --> 00:50:12,460
it or not thought this through before

00:50:09,810 --> 00:50:13,810
they you know throw bandaid on it well

00:50:12,460 --> 00:50:17,470
no this isn't about throwing band-aids

00:50:13,810 --> 00:50:19,420
on this was you know the results of some

00:50:17,470 --> 00:50:22,090
really intelligent thinking and as a

00:50:19,420 --> 00:50:24,700
result you can do better implementing

00:50:22,090 --> 00:50:28,330
these things carefully it's just out of

00:50:24,700 --> 00:50:30,640
the box you need to make decisions so

00:50:28,330 --> 00:50:31,930
you have to look at your setup make

00:50:30,640 --> 00:50:35,170
whatever decision make sense for

00:50:31,930 --> 00:50:38,040
security but also for performance but

00:50:35,170 --> 00:50:38,040
you can increase both

00:50:38,870 --> 00:50:42,260
other questions

00:50:44,790 --> 00:50:51,270
well I'd like to thank you all for

00:50:46,500 --> 00:50:54,480
coming we do have the Zen Zen project

00:50:51,270 --> 00:50:57,360
4.4 features and futures talk after

00:50:54,480 --> 00:50:59,190
lunch on Sunday for the six people who

00:50:57,360 --> 00:51:02,490
will actually be staying after lunch on

00:50:59,190 --> 00:51:04,650
sun it if you're one of them you know

00:51:02,490 --> 00:51:06,720
please please consider coming to that

00:51:04,650 --> 00:51:08,550
that's actually guts we've got some

00:51:06,720 --> 00:51:10,140
interesting information there likewise

00:51:08,550 --> 00:51:11,790
the slide deck for that out on Zen

00:51:10,140 --> 00:51:14,700
project or go to the presentation

00:51:11,790 --> 00:51:18,090
section and I do have a session Sunday

00:51:14,700 --> 00:51:20,280
morning about geek empowerment the real

00:51:18,090 --> 00:51:22,350
heart of open source it's a straight

00:51:20,280 --> 00:51:23,880
open source talk and I encourage

00:51:22,350 --> 00:51:26,400
everyone if you're around on Sunday

00:51:23,880 --> 00:51:28,860
morning please stop in for that it will

00:51:26,400 --> 00:51:31,080
be well worth your time that much I can

00:51:28,860 --> 00:51:32,940
pretty much guarantee well thank you

00:51:31,080 --> 00:51:35,270
very much and I hope you have a great

00:51:32,940 --> 00:51:35,270
show

00:52:14,520 --> 00:52:18,790
your customers rely on your website or

00:52:17,320 --> 00:52:21,160
application if it's slower

00:52:18,790 --> 00:52:24,100
non-responsive it infuriates your users

00:52:21,160 --> 00:52:25,930
and costs you money keeping your

00:52:24,100 --> 00:52:29,450
business critical systems humming along

00:52:25,930 --> 00:52:32,270
requires insight into what they're doing

00:52:29,450 --> 00:52:34,250
your system metrics tell stories stories

00:52:32,270 --> 00:52:36,500
that can reveal performance bottlenecks

00:52:34,250 --> 00:52:38,660
resource limitations and other problems

00:52:36,500 --> 00:52:40,609
but how do you keep an eye on all of

00:52:38,660 --> 00:52:43,190
your systems performance metrics in

00:52:40,609 --> 00:52:46,040
real-time and record this data for later

00:52:43,190 --> 00:52:48,020
analysis enter longview the new way to

00:52:46,040 --> 00:52:50,060
see what's really going on under the

00:52:48,020 --> 00:52:52,160
hood the longview dashboard lets you

00:52:50,060 --> 00:52:54,170
visualize the status of all your systems

00:52:52,160 --> 00:52:57,079
providing you with a bird's-eye view of

00:52:54,170 --> 00:53:00,020
your entire fleet you can sort by cpu

00:52:57,079 --> 00:53:02,480
memory swap processes load and network

00:53:00,020 --> 00:53:05,060
usage click a specific system to access

00:53:02,480 --> 00:53:07,070
its individual dashboard then click and

00:53:05,060 --> 00:53:10,070
drag to zoom in on chokepoints and get

00:53:07,070 --> 00:53:12,050
more detail comprehensive network data

00:53:10,070 --> 00:53:14,750
including inbound and outbound traffic

00:53:12,050 --> 00:53:16,339
is available on the network tab and disk

00:53:14,750 --> 00:53:18,230
rights and free space on the disk

00:53:16,339 --> 00:53:21,079
stabbed while the process Explorer

00:53:18,230 --> 00:53:23,630
displays usage statistics for individual

00:53:21,079 --> 00:53:25,790
processes the system info tab shows

00:53:23,630 --> 00:53:28,040
listening services active connections

00:53:25,790 --> 00:53:30,170
and available updates adding long view

00:53:28,040 --> 00:53:31,849
to a system is easy just click the

00:53:30,170 --> 00:53:34,010
button copy the one line installation

00:53:31,849 --> 00:53:36,440
command then run the command on your

00:53:34,010 --> 00:53:38,150
linux system to complete the process the

00:53:36,440 --> 00:53:40,339
agent will begin collecting data and

00:53:38,150 --> 00:53:42,190
sending it to longview then the graphs

00:53:40,339 --> 00:53:44,740
start rolling

00:53:42,190 --> 00:53:47,110
used longview to gain visibility into

00:53:44,740 --> 00:53:50,850
your servers so when your website or app

00:53:47,110 --> 00:53:50,850

YouTube URL: https://www.youtube.com/watch?v=8oPcsVSyIXU


