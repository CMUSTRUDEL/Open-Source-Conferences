Title: 2011 SouthEast LinuxFest - BAOSCD - Garrett Honeycutt - Introduction To Puppet
Publication date: 2012-04-04
Playlist: 2011 SouthEast LinuxFest - Build An Open Source Cloud Day
Description: 
	2011 SouthEast LinuxFest - Build An Open Source Cloud Day
Garrett Honeycutt - Introduction To Puppet

This video is licensed under Creative Commons Attribution 3.0 Unported License.
Captions: 
	00:00:01,159 --> 00:00:07,319
the following presentation was recorded

00:00:04,230 --> 00:00:09,900
at the 2011 southeast linux fest in

00:00:07,319 --> 00:00:11,400
Spartanburg South Carolina it is

00:00:09,900 --> 00:00:14,219
licensed under a creative commons

00:00:11,400 --> 00:00:18,390
license for more information about the

00:00:14,219 --> 00:00:21,869
southeast linux fest visit www southeast

00:00:18,390 --> 00:00:23,100
linux fest org the southeast linux fest

00:00:21,869 --> 00:00:26,460
would like to thank the following

00:00:23,100 --> 00:00:30,380
diamond and platinum sponsors in 2011

00:00:26,460 --> 00:00:30,380
for helping make these videos possible

00:00:33,950 --> 00:00:38,790
right on so I like we'll go ahead and

00:00:36,600 --> 00:00:44,010
get like get started here hope everybody

00:00:38,790 --> 00:00:46,739
had a good lunch wanted to thank like

00:00:44,010 --> 00:00:49,649
David and Mark from Cloud com for having

00:00:46,739 --> 00:00:51,570
me out here for this glad I could be

00:00:49,649 --> 00:00:53,730
here by my name is Garrett Honeycutt I'm

00:00:51,570 --> 00:00:57,510
a professional services consultant with

00:00:53,730 --> 00:01:00,770
puppet labs so that means I get to come

00:00:57,510 --> 00:01:04,799
to my linux fests and talk about puppet

00:01:00,770 --> 00:01:08,939
do public trainings as well as actually

00:01:04,799 --> 00:01:10,590
work and do consulting our company is

00:01:08,939 --> 00:01:17,280
based out of Portland I'm based out of

00:01:10,590 --> 00:01:19,740
Indianapolis I'm a remote worker thought

00:01:17,280 --> 00:01:22,680
we'd start off today with doing like

00:01:19,740 --> 00:01:24,780
talking about puppet and configuration

00:01:22,680 --> 00:01:28,710
management in general and then moving on

00:01:24,780 --> 00:01:30,180
to do a demo like how many people here

00:01:28,710 --> 00:01:32,670
use some kind of configuration

00:01:30,180 --> 00:01:36,720
management tool now to manage their

00:01:32,670 --> 00:01:39,590
systems okay so a few folks how many of

00:01:36,720 --> 00:01:46,330
those people have used puppet before

00:01:39,590 --> 00:01:49,790
okay so intro talk is a good choice

00:01:46,330 --> 00:01:51,680
so I think it makes sense in the big in

00:01:49,790 --> 00:01:54,320
talking about why configuration

00:01:51,680 --> 00:01:55,880
management in general and then and then

00:01:54,320 --> 00:01:59,690
I'll go into more of like how puppet

00:01:55,880 --> 00:02:06,880
works and what's going on there well you

00:01:59,690 --> 00:02:06,880
really can't read that at all thanks so

00:02:07,630 --> 00:02:13,370
like what I often hear is what I call

00:02:10,760 --> 00:02:16,520
the one off myth is that my systems are

00:02:13,370 --> 00:02:18,770
unique snowflakes and there's there's

00:02:16,520 --> 00:02:20,510
just a one-off you know why should I

00:02:18,770 --> 00:02:24,530
invest time and configuration management

00:02:20,510 --> 00:02:27,560
for this one system I call it a myth so

00:02:24,530 --> 00:02:31,370
obviously I'm not a believer of the one

00:02:27,560 --> 00:02:35,450
off so the first reason I hear is that

00:02:31,370 --> 00:02:38,770
my host is only temporary how many

00:02:35,450 --> 00:02:41,630
people have deployed temporary hoofs

00:02:38,770 --> 00:02:45,950
before yeah those like still on your

00:02:41,630 --> 00:02:48,350
network I know all the all the really

00:02:45,950 --> 00:02:50,209
old crusty hosts that I see at places

00:02:48,350 --> 00:02:51,709
when I ask people about their like yeah

00:02:50,209 --> 00:02:54,350
that was a temporary host to fix

00:02:51,709 --> 00:02:56,300
something obviously once you build

00:02:54,350 --> 00:02:58,340
something and put it out there for

00:02:56,300 --> 00:03:00,650
people to use people rely on it you

00:02:58,340 --> 00:03:03,050
can't just take systems back our

00:03:00,650 --> 00:03:07,360
services back so I don't think that only

00:03:03,050 --> 00:03:10,010
temporary ever holds up and second is

00:03:07,360 --> 00:03:13,239
replicas for pre production environments

00:03:10,010 --> 00:03:15,800
I mean if you build something out once

00:03:13,239 --> 00:03:19,580
don't you also want to have you know

00:03:15,800 --> 00:03:21,500
like a dev and a QA etc like versions of

00:03:19,580 --> 00:03:23,989
your systems hopefully you're not just

00:03:21,500 --> 00:03:25,310
building out production systems and you

00:03:23,989 --> 00:03:26,900
know writing all your code on the

00:03:25,310 --> 00:03:29,510
servers that they run on and stuff right

00:03:26,900 --> 00:03:34,160
like but like you have some sort of QA

00:03:29,510 --> 00:03:38,239
process this is a big one for folks I

00:03:34,160 --> 00:03:41,060
mean I think about all the troubles that

00:03:38,239 --> 00:03:43,340
you've had because dev didn't look just

00:03:41,060 --> 00:03:45,080
like you a and Q ate it and look just

00:03:43,340 --> 00:03:47,060
like prod and you're like well it worked

00:03:45,080 --> 00:03:49,010
in this environment why did is why did

00:03:47,060 --> 00:03:51,680
it suddenly catch on fire when I

00:03:49,010 --> 00:03:53,360
released it and a lot of times it

00:03:51,680 --> 00:03:55,580
happens because your environments aren't

00:03:53,360 --> 00:03:56,720
the same and so configuration management

00:03:55,580 --> 00:03:57,810
is really going to help you keep

00:03:56,720 --> 00:03:59,280
everything

00:03:57,810 --> 00:04:00,989
actually the same so you don't have

00:03:59,280 --> 00:04:04,920
those hidden surprises when you go to

00:04:00,989 --> 00:04:07,260
deploy and the next is disaster recovery

00:04:04,920 --> 00:04:09,360
I mean if the system was important

00:04:07,260 --> 00:04:12,660
enough for you to spend any time on to

00:04:09,360 --> 00:04:15,120
build once isn't it important enough to

00:04:12,660 --> 00:04:17,430
rebuild when the system fails I mean all

00:04:15,120 --> 00:04:20,100
all systems fail it's not a matter of if

00:04:17,430 --> 00:04:22,380
it's a matter of when so if it was

00:04:20,100 --> 00:04:25,790
important enough to do once don't you

00:04:22,380 --> 00:04:25,790
want it to be around after it fails

00:04:26,270 --> 00:04:32,700
think that I don't have a bullet up here

00:04:28,800 --> 00:04:36,389
for is that oftentimes as admins where

00:04:32,700 --> 00:04:38,790
we rushed into doing work and a lot of

00:04:36,389 --> 00:04:42,060
times we we like to say yes and don't

00:04:38,790 --> 00:04:44,010
really push back enough and like what

00:04:42,060 --> 00:04:46,680
happens is we end up building these

00:04:44,010 --> 00:04:48,960
things that we're not really proud of we

00:04:46,680 --> 00:04:51,080
rush through it and then even worse when

00:04:48,960 --> 00:04:54,990
they break because we didn't do it right

00:04:51,080 --> 00:04:57,240
suddenly it's it's it's our fault it

00:04:54,990 --> 00:05:00,120
makes us look bad and then we're the

00:04:57,240 --> 00:05:02,610
ones have to fix it at 3am so well

00:05:00,120 --> 00:05:05,070
there's definitely a bit higher cost in

00:05:02,610 --> 00:05:08,310
the beginning of using any configuration

00:05:05,070 --> 00:05:11,640
management tool I think the benefits are

00:05:08,310 --> 00:05:14,190
huge to being able to build things that

00:05:11,640 --> 00:05:18,210
are repeatable and that you can be like

00:05:14,190 --> 00:05:19,710
proud of and not have to fix the 3m like

00:05:18,210 --> 00:05:22,950
the whole reason I actually got started

00:05:19,710 --> 00:05:26,960
with configuration management i was

00:05:22,950 --> 00:05:30,870
using puppet in 2007 to build a

00:05:26,960 --> 00:05:33,539
nationwide boy like platform and so I

00:05:30,870 --> 00:05:34,919
had you know systems that had to be up

00:05:33,539 --> 00:05:37,910
all the time this is like real-time

00:05:34,919 --> 00:05:40,950
voice traffic Ida deployed in multiple

00:05:37,910 --> 00:05:43,260
like locations lots of pre-production

00:05:40,950 --> 00:05:44,820
environments and I knew that I just

00:05:43,260 --> 00:05:46,169
couldn't do it without configuration

00:05:44,820 --> 00:05:49,889
management so i looked at what was

00:05:46,169 --> 00:05:53,310
available started using puppet and it

00:05:49,889 --> 00:06:00,210
very quickly was managing things and my

00:05:53,310 --> 00:06:03,770
infrastructure before we had puppet what

00:06:00,210 --> 00:06:07,320
I'm I was a like the last line of

00:06:03,770 --> 00:06:08,880
escalation and so problems would come to

00:06:07,320 --> 00:06:10,680
me and i couldnt escalate further i had

00:06:08,880 --> 00:06:11,480
to fix them and generally problems came

00:06:10,680 --> 00:06:13,580
to me

00:06:11,480 --> 00:06:14,840
three in the morning when I didn't want

00:06:13,580 --> 00:06:16,970
to be dealing with problems so my only

00:06:14,840 --> 00:06:19,160
goal in life was really to build things

00:06:16,970 --> 00:06:21,650
that were repeatable and that were well

00:06:19,160 --> 00:06:25,070
documented and that wouldn't have the

00:06:21,650 --> 00:06:27,590
not like by calling me at all hours

00:06:25,070 --> 00:06:29,480
because things were bored down that was

00:06:27,590 --> 00:06:34,610
a big like motivating factor for me and

00:06:29,480 --> 00:06:37,610
through by using puppet we were able to

00:06:34,610 --> 00:06:41,240
get ahead of the curve of something's on

00:06:37,610 --> 00:06:43,040
fire go fix this go fix that I mean

00:06:41,240 --> 00:06:44,840
that's really a crappy place to be in

00:06:43,040 --> 00:06:49,760
and I think it's where a lot of admins

00:06:44,840 --> 00:06:51,680
are is you're not a proactive part of

00:06:49,760 --> 00:06:53,630
your team you're always like reacting

00:06:51,680 --> 00:06:57,290
something's breaking something's going

00:06:53,630 --> 00:07:00,020
on and and so these sort of tools helped

00:06:57,290 --> 00:07:01,700
our team get ahead of that curve to

00:07:00,020 --> 00:07:03,800
where instead of just reacting the

00:07:01,700 --> 00:07:05,300
things we were able to build out like

00:07:03,800 --> 00:07:07,730
new things and we're actually able to go

00:07:05,300 --> 00:07:09,350
to product and say hey we've got these

00:07:07,730 --> 00:07:11,600
new things we can sell that we can build

00:07:09,350 --> 00:07:16,580
you know which is a lot more fun than

00:07:11,600 --> 00:07:19,430
just reacting the fires so we've got on

00:07:16,580 --> 00:07:22,160
top off topic than the like the one off

00:07:19,430 --> 00:07:26,180
of the next this is my my goofy looking

00:07:22,160 --> 00:07:28,550
cloud picture is a host host on demand I

00:07:26,180 --> 00:07:32,780
mean so you can swipe your credit card

00:07:28,550 --> 00:07:34,670
and have 10,000 machines up okay like

00:07:32,780 --> 00:07:38,510
how do you manage them right like how do

00:07:34,670 --> 00:07:40,790
you ensure that the changes that you

00:07:38,510 --> 00:07:45,280
want to Institute across them or being

00:07:40,790 --> 00:07:45,280
done properly I mean if you're using

00:07:45,490 --> 00:07:54,020
images alone for this I'm sure you've

00:07:48,740 --> 00:07:58,250
hit hit like hit a wall with image

00:07:54,020 --> 00:08:00,770
sprawl and having to you know update

00:07:58,250 --> 00:08:05,510
these like golden systems it doesn't it

00:08:00,770 --> 00:08:08,870
doesn't scale another reason for config

00:08:05,510 --> 00:08:11,420
management is to reduce entropy like how

00:08:08,870 --> 00:08:16,580
many folks here have deployed clustered

00:08:11,420 --> 00:08:18,730
systems yeah and so those folks are like

00:08:16,580 --> 00:08:22,010
did you use configuration management

00:08:18,730 --> 00:08:24,230
yeah okay so I've deployed lots of

00:08:22,010 --> 00:08:26,960
clusters without config management and

00:08:24,230 --> 00:08:30,200
I'm guessing you'll have a similar thing

00:08:26,960 --> 00:08:32,510
is that after time sure they're all male

00:08:30,200 --> 00:08:34,850
servers but they're not all quite doing

00:08:32,510 --> 00:08:36,800
the same thing right because while you

00:08:34,850 --> 00:08:38,300
were updating them by hand maybe you

00:08:36,800 --> 00:08:40,160
updated some because there was some

00:08:38,300 --> 00:08:42,590
problem they have different revs of

00:08:40,160 --> 00:08:44,690
software and so now they're like on the

00:08:42,590 --> 00:08:46,370
cover you know they're all doing sort of

00:08:44,690 --> 00:08:49,340
the same thing but they're not really

00:08:46,370 --> 00:08:52,150
the same machine I would see this a lot

00:08:49,340 --> 00:08:53,990
where our mail systems would have

00:08:52,150 --> 00:08:56,000
characteristics of their own they'd have

00:08:53,990 --> 00:08:59,540
their own personalities you're like you

00:08:56,000 --> 00:09:01,640
know why is male 27 why is it Q always

00:08:59,540 --> 00:09:03,410
large and the rest of them aren't like

00:09:01,640 --> 00:09:04,490
things like that so having configuration

00:09:03,410 --> 00:09:06,020
management actually lets you have

00:09:04,490 --> 00:09:07,580
systems that are actually the same and

00:09:06,020 --> 00:09:11,720
so it's going to reduce that entropy

00:09:07,580 --> 00:09:13,760
that grows and grows Zess recover we

00:09:11,720 --> 00:09:16,250
talked about the importance of that and

00:09:13,760 --> 00:09:19,970
then like change management I mean how

00:09:16,250 --> 00:09:22,280
do you manage change across your systems

00:09:19,970 --> 00:09:24,110
so like building out a system okay you

00:09:22,280 --> 00:09:27,710
built a system but then you have to

00:09:24,110 --> 00:09:29,840
update and upkeep that system and so to

00:09:27,710 --> 00:09:32,870
do that like I get to be able to

00:09:29,840 --> 00:09:35,090
properly take those changes get them

00:09:32,870 --> 00:09:37,400
tested in pre-production environments

00:09:35,090 --> 00:09:39,890
and then like rolled out to your

00:09:37,400 --> 00:09:41,380
production environments if you're doing

00:09:39,890 --> 00:09:45,770
that without configuration management

00:09:41,380 --> 00:09:50,000
your change management is probably like

00:09:45,770 --> 00:09:53,060
giving you problems before I started to

00:09:50,000 --> 00:09:55,100
use puppet simply some of you folks

00:09:53,060 --> 00:09:57,320
might be familiar with this like change

00:09:55,100 --> 00:09:58,910
approval boards or perhaps you have to

00:09:57,320 --> 00:10:01,850
go in front of people and explain why

00:09:58,910 --> 00:10:03,800
you're going to make changes we got a

00:10:01,850 --> 00:10:06,610
ton of scrutiny because change events

00:10:03,800 --> 00:10:08,720
didn't like didn't always like go well

00:10:06,610 --> 00:10:12,080
after we sort of like using puppet

00:10:08,720 --> 00:10:13,610
suddenly the need for everyone to say no

00:10:12,080 --> 00:10:15,440
you can't make changes no you can't make

00:10:13,610 --> 00:10:18,380
changes left because our maintenance

00:10:15,440 --> 00:10:20,630
events were went really smooth and so it

00:10:18,380 --> 00:10:22,430
was it was easy when you don't break

00:10:20,630 --> 00:10:26,620
things to get people to let you to

00:10:22,430 --> 00:10:29,540
change things more often and

00:10:26,620 --> 00:10:31,370
infrastructure is code that's sort of a

00:10:29,540 --> 00:10:35,750
buzz word going around but the idea

00:10:31,370 --> 00:10:37,379
behind this is that your modeling all of

00:10:35,750 --> 00:10:40,169
your infrastructure as code

00:10:37,379 --> 00:10:43,199
and so since since it is code you can

00:10:40,169 --> 00:10:45,539
use the tools that you already use to

00:10:43,199 --> 00:10:48,209
deal with code so you can version

00:10:45,539 --> 00:10:50,849
control your infrastructure you can use

00:10:48,209 --> 00:10:55,220
tools like diff to see what changed in

00:10:50,849 --> 00:10:57,599
my infrastructure by looking at the code

00:10:55,220 --> 00:11:02,159
you can do things like continuous

00:10:57,599 --> 00:11:04,739
integration to see when people make new

00:11:02,159 --> 00:11:10,109
changes to your infrastructure you know

00:11:04,739 --> 00:11:16,459
is it going to break things so puppet

00:11:10,109 --> 00:11:18,809
itself is open source we are Apache v2

00:11:16,459 --> 00:11:20,909
the slide is a little bit all I think

00:11:18,809 --> 00:11:24,839
there's like 4,000 or so people on the

00:11:20,909 --> 00:11:27,929
mailing list now 400 so people at all

00:11:24,839 --> 00:11:30,059
times on IRC so if you're looking for

00:11:27,929 --> 00:11:34,229
help I receipts great so is the mailing

00:11:30,059 --> 00:11:37,229
list we come packaged with the major

00:11:34,229 --> 00:11:40,499
like distros and we have a lot of people

00:11:37,229 --> 00:11:44,159
contributing code to the project so

00:11:40,499 --> 00:11:46,559
while puppet labs does does help you

00:11:44,159 --> 00:11:48,779
know point the project it's not just

00:11:46,559 --> 00:11:54,809
people like working there this is

00:11:48,779 --> 00:11:58,699
definitely a very vibrant community we

00:11:54,809 --> 00:12:01,439
released a recently puppet enterprise

00:11:58,699 --> 00:12:03,839
which is our enterprise like level

00:12:01,439 --> 00:12:05,819
software I promise this isn't a sales

00:12:03,839 --> 00:12:08,579
feel but it's new people like want to

00:12:05,819 --> 00:12:10,919
hear about it the ones in blue are

00:12:08,579 --> 00:12:15,119
operating systems that we have support

00:12:10,919 --> 00:12:18,479
for or will soon release for and the

00:12:15,119 --> 00:12:22,129
ones in orange are not are things that

00:12:18,479 --> 00:12:22,129
puppet like runs on but not PE

00:12:24,910 --> 00:12:30,910
so what puppet enterprise is is

00:12:27,850 --> 00:12:33,720
basically we we take all the components

00:12:30,910 --> 00:12:35,860
of puppet and we package them for you

00:12:33,720 --> 00:12:37,990
and we do it in a way that's scalable

00:12:35,860 --> 00:12:39,730
and in line with best practices I mean

00:12:37,990 --> 00:12:43,810
published just a web apps you can run it

00:12:39,730 --> 00:12:47,410
with mongrel unicorn reverse proxies

00:12:43,810 --> 00:12:48,250
with Apache Apache passenger engine X

00:12:47,410 --> 00:12:51,310
there's like a million different ways

00:12:48,250 --> 00:12:52,660
that you could like set it up so we just

00:12:51,310 --> 00:12:57,340
pick the one that's going to be the most

00:12:52,660 --> 00:12:59,890
like scalable and durable it's a fully

00:12:57,340 --> 00:13:02,140
like cute a stack and it's totally

00:12:59,890 --> 00:13:05,290
encapsulated it's like a problem that

00:13:02,140 --> 00:13:08,500
people have is that you have to have a

00:13:05,290 --> 00:13:10,330
certain version of Ruby or a patchy or

00:13:08,500 --> 00:13:12,730
something to make puppet work in your

00:13:10,330 --> 00:13:15,010
environment but then you also need some

00:13:12,730 --> 00:13:18,250
other version of Ruby for your app and

00:13:15,010 --> 00:13:20,350
so we encapsulate everything by using

00:13:18,250 --> 00:13:22,600
specific packages for our stuff and

00:13:20,350 --> 00:13:24,640
putting everything under up like puppet

00:13:22,600 --> 00:13:27,100
so our Ruby's not going to interfere

00:13:24,640 --> 00:13:29,230
with your Ruby you don't have to be on

00:13:27,100 --> 00:13:35,290
the same upgrade schedule so it sort of

00:13:29,230 --> 00:13:38,050
takes some of the headache out in the

00:13:35,290 --> 00:13:40,140
future like what we have by coming as a

00:13:38,050 --> 00:13:43,210
set of commonly used like modules

00:13:40,140 --> 00:13:45,790
currently you can go to the forge forge

00:13:43,210 --> 00:13:48,430
dot puppet labs com and get code that's

00:13:45,790 --> 00:13:50,350
already written to make puppet work for

00:13:48,430 --> 00:13:55,210
you and so we're going to be like

00:13:50,350 --> 00:13:59,470
releasing more of that with PE and then

00:13:55,210 --> 00:14:01,770
integration with M collective so I

00:13:59,470 --> 00:14:03,970
puppets pervasive so if you're not using

00:14:01,770 --> 00:14:06,430
puppet you're definitely not a guinea

00:14:03,970 --> 00:14:09,730
pig it's not anything new and i started

00:14:06,430 --> 00:14:15,520
in 2007 and now we have customers like

00:14:09,730 --> 00:14:17,830
Disney Zynga New York Stock Exchange one

00:14:15,520 --> 00:14:19,510
customer we found out at Faust M which I

00:14:17,830 --> 00:14:22,630
thought was cool that isn't up here is

00:14:19,510 --> 00:14:27,130
the air traffic control for Germany like

00:14:22,630 --> 00:14:32,440
uses should things look pretty neat so

00:14:27,130 --> 00:14:36,460
by going to how puppet works puppets a

00:14:32,440 --> 00:14:38,590
declarative like language it's it's own

00:14:36,460 --> 00:14:42,460
DSL so if you don't know

00:14:38,590 --> 00:14:44,020
Ruby or something that's that's okay the

00:14:42,460 --> 00:14:46,870
dsl is really easy we're going to know

00:14:44,020 --> 00:14:48,700
what that might looks like and so we're

00:14:46,870 --> 00:14:51,730
going to define what the state of our

00:14:48,700 --> 00:14:55,060
system like should be through code and

00:14:51,730 --> 00:14:57,070
then we can simulate what that is going

00:14:55,060 --> 00:14:58,810
to look like so this is great for your

00:14:57,070 --> 00:15:02,200
maintenance events because you can run

00:14:58,810 --> 00:15:05,500
puppet in a simulation mode with dash

00:15:02,200 --> 00:15:07,840
dash but no op and so you could actually

00:15:05,500 --> 00:15:10,720
see what changes would take place

00:15:07,840 --> 00:15:12,970
without actually doing them which is

00:15:10,720 --> 00:15:14,740
great so you can see what what what

00:15:12,970 --> 00:15:17,800
would happen before you shoot yourself

00:15:14,740 --> 00:15:20,620
in the foot across all your nodes and

00:15:17,800 --> 00:15:22,090
then you can actually enforce that so

00:15:20,620 --> 00:15:24,130
you can enforce that the state of your

00:15:22,090 --> 00:15:26,860
system is in the state you want it to be

00:15:24,130 --> 00:15:29,590
in and any time you do that a report

00:15:26,860 --> 00:15:32,940
gets like kicked off so that you can log

00:15:29,590 --> 00:15:36,370
and no like what changed and I look back

00:15:32,940 --> 00:15:39,430
go into each of these so like we define

00:15:36,370 --> 00:15:41,380
how the systems work through writing

00:15:39,430 --> 00:15:43,390
modules so this is the actual code that

00:15:41,380 --> 00:15:45,700
that you would write work download from

00:15:43,390 --> 00:15:48,820
the Forge and so we have different types

00:15:45,700 --> 00:15:50,590
of modules that like you would get and

00:15:48,820 --> 00:15:52,920
then you would assign those modules

00:15:50,590 --> 00:15:55,930
through what I call like an ode to code

00:15:52,920 --> 00:15:58,330
relationship where you say this node

00:15:55,930 --> 00:16:00,580
runs these modules so you say you know

00:15:58,330 --> 00:16:03,940
my web server like maybe runs the Apache

00:16:00,580 --> 00:16:07,780
module my database like server runs the

00:16:03,940 --> 00:16:10,350
my sequel module and they all run the

00:16:07,780 --> 00:16:13,210
security modules that things like that

00:16:10,350 --> 00:16:19,000
and that's where you associate that code

00:16:13,210 --> 00:16:22,090
with the different nodes so like how it

00:16:19,000 --> 00:16:25,020
works is that you have your blank

00:16:22,090 --> 00:16:27,490
hardware or this could be lack of a vm

00:16:25,020 --> 00:16:30,310
you have your provisioning system which

00:16:27,490 --> 00:16:32,290
makes your base install and then pop it

00:16:30,310 --> 00:16:34,660
from that point is going to configure

00:16:32,290 --> 00:16:38,350
the system into its role but it's also

00:16:34,660 --> 00:16:40,060
going to maintain that role so if you're

00:16:38,350 --> 00:16:42,760
not using configuration management you

00:16:40,060 --> 00:16:45,220
probably have up to this point like

00:16:42,760 --> 00:16:48,430
figured out like you have blank hardware

00:16:45,220 --> 00:16:50,470
you provision and then you configure so

00:16:48,430 --> 00:16:53,050
this might be something like a kick

00:16:50,470 --> 00:16:55,210
start does it then you have some post

00:16:53,050 --> 00:16:57,250
section which runs your scripts and

00:16:55,210 --> 00:16:59,110
maybe you know your big pile of pearl

00:16:57,250 --> 00:17:00,880
and like whatever you use to get the

00:16:59,110 --> 00:17:03,010
system going but that's where most

00:17:00,880 --> 00:17:05,700
people stop right so you just build a

00:17:03,010 --> 00:17:11,770
system but now it's not being maintained

00:17:05,700 --> 00:17:13,750
which isn't super useful so some some

00:17:11,770 --> 00:17:17,530
best practice and this is configuration

00:17:13,750 --> 00:17:21,640
management agnostic is this base install

00:17:17,530 --> 00:17:24,580
should be the same across your systems

00:17:21,640 --> 00:17:26,680
and it should be a minimal system so the

00:17:24,580 --> 00:17:28,570
minimal of what it is to be a node on

00:17:26,680 --> 00:17:30,910
your network should be in your base

00:17:28,570 --> 00:17:34,030
install as opposed to having different

00:17:30,910 --> 00:17:36,220
base installs for your web server versus

00:17:34,030 --> 00:17:41,080
your database server things like that so

00:17:36,220 --> 00:17:42,670
you want all those to be as minimal as

00:17:41,080 --> 00:17:44,410
possible and then you're going to

00:17:42,670 --> 00:17:47,050
describe on top of that with your

00:17:44,410 --> 00:17:55,030
configuration management tool to model

00:17:47,050 --> 00:17:57,040
the rest of the system and so like here

00:17:55,030 --> 00:17:59,620
we have your desired state and so this

00:17:57,040 --> 00:18:02,290
is what the system should like should

00:17:59,620 --> 00:18:05,020
look like and what variably happens is

00:18:02,290 --> 00:18:07,480
that the system sorts the drift out of

00:18:05,020 --> 00:18:09,850
that state and that could be through an

00:18:07,480 --> 00:18:11,260
admin comes and makes a change that's

00:18:09,850 --> 00:18:14,320
not through the configuration management

00:18:11,260 --> 00:18:17,950
tool it could be a security breach it

00:18:14,320 --> 00:18:20,080
could just be a process died and so you

00:18:17,950 --> 00:18:22,630
want your web server to be running but

00:18:20,080 --> 00:18:25,870
it's not so now you're in this other

00:18:22,630 --> 00:18:28,750
state and puppets like runs it basically

00:18:25,870 --> 00:18:31,330
does a diff between what does the system

00:18:28,750 --> 00:18:32,950
look like and what is the system's like

00:18:31,330 --> 00:18:35,740
supposed to look like and then it's

00:18:32,950 --> 00:18:37,870
going to converge back onto that and any

00:18:35,740 --> 00:18:40,090
time it does it convergence it sends out

00:18:37,870 --> 00:18:43,960
a report off so this could be something

00:18:40,090 --> 00:18:47,620
as simple as saying my etsy sudoers file

00:18:43,960 --> 00:18:50,080
should have mode Oh 400 and so that's

00:18:47,620 --> 00:18:53,980
your state of the system and then

00:18:50,080 --> 00:18:55,600
somehow it gets changed 20 644 well

00:18:53,980 --> 00:18:57,790
that's not right so it brings it ended

00:18:55,600 --> 00:18:59,200
convergence and it just changes the mode

00:18:57,790 --> 00:19:01,470
back because maybe that's the only thing

00:18:59,200 --> 00:19:01,470
that's changed

00:19:02,909 --> 00:19:10,659
so like we talked about like data flow

00:19:05,499 --> 00:19:13,809
between the nodes all of the traffic is

00:19:10,659 --> 00:19:16,600
SSL encrypted and we use search for

00:19:13,809 --> 00:19:18,850
authentication and it's torque software

00:19:16,600 --> 00:19:21,789
you have a node and the node is going to

00:19:18,850 --> 00:19:24,730
send information facts about itself to

00:19:21,789 --> 00:19:27,490
the master the master then takes those

00:19:24,730 --> 00:19:29,919
and creates a catalog this is the state

00:19:27,490 --> 00:19:33,190
of the system that it's supposed to be

00:19:29,919 --> 00:19:34,779
in sends the catalog to the node which

00:19:33,190 --> 00:19:37,119
is going to like process it and

00:19:34,779 --> 00:19:39,340
basically do the diff and say hey does

00:19:37,119 --> 00:19:40,749
the catalog like do I look like what the

00:19:39,340 --> 00:19:44,799
catalog says I'm supposed to look like

00:19:40,749 --> 00:19:47,169
if not let's make the changes and then

00:19:44,799 --> 00:19:54,690
it sends a report on to the puppet

00:19:47,169 --> 00:19:54,690
master so facts ah sorry

00:20:26,999 --> 00:20:32,649
I would do all the changes through your

00:20:29,950 --> 00:20:34,989
configuration management and then run

00:20:32,649 --> 00:20:37,960
that code base against one system and

00:20:34,989 --> 00:20:39,129
see if it did what you wanted it to do

00:20:37,960 --> 00:20:45,690
and then you could run that code base

00:20:39,129 --> 00:20:48,489
against your other systems fax

00:20:45,690 --> 00:20:51,489
automatically maintained asset inventory

00:20:48,489 --> 00:20:54,609
so this is a real-time information on

00:20:51,489 --> 00:20:56,470
your systems and facts are just key

00:20:54,609 --> 00:20:58,899
values and I was probably kind of hard

00:20:56,470 --> 00:21:04,139
to read back there it just has a key of

00:20:58,899 --> 00:21:04,139
some information and then a value for it

00:21:04,559 --> 00:21:14,220
like how many people here code Ruby

00:21:08,190 --> 00:21:14,220
right on so a small number of hands oh

00:21:14,489 --> 00:21:20,080
and I love old these facts you can

00:21:17,409 --> 00:21:22,539
access as top top level scope like

00:21:20,080 --> 00:21:26,799
variables within your code so now I can

00:21:22,539 --> 00:21:29,049
make like programmatically I can make

00:21:26,799 --> 00:21:32,559
decisions based on the values of these

00:21:29,049 --> 00:21:35,710
so one might be upset running a tomcat

00:21:32,559 --> 00:21:38,980
system and I want to allocate allocate

00:21:35,710 --> 00:21:42,549
heap size based on the total memory of

00:21:38,980 --> 00:21:45,909
the system I could look at a total like

00:21:42,549 --> 00:21:47,590
memory size here and then use like logic

00:21:45,909 --> 00:21:49,779
like a case statement if statement or

00:21:47,590 --> 00:21:52,090
something and set the heap size of

00:21:49,779 --> 00:21:55,320
tomcat based on the size of memory on my

00:21:52,090 --> 00:21:58,059
system for instance so now I'm

00:21:55,320 --> 00:22:01,749
programmatically and dynamically like

00:21:58,059 --> 00:22:05,440
doing things instead of having to know

00:22:01,749 --> 00:22:08,100
about all that stuff wow you really

00:22:05,440 --> 00:22:08,100
can't read that

00:22:08,250 --> 00:22:14,160
so custom facts I don't code Ruby I've

00:22:10,860 --> 00:22:17,640
been using puppets since 2007 it hasn't

00:22:14,160 --> 00:22:22,320
slowed me down any this is hard to read

00:22:17,640 --> 00:22:25,020
but basically you can have Ruby exec

00:22:22,320 --> 00:22:28,050
scripts so if you can code in a

00:22:25,020 --> 00:22:29,880
different language bash or the language

00:22:28,050 --> 00:22:35,880
of your choice you can still make your

00:22:29,880 --> 00:22:38,370
own custom facts and it's easy to do so

00:22:35,880 --> 00:22:40,140
the next is the catalog and so that's

00:22:38,370 --> 00:22:42,770
going to be a comprehensive resource

00:22:40,140 --> 00:22:45,800
list of your system and it's easily

00:22:42,770 --> 00:22:48,000
validated for compliance requirements

00:22:45,800 --> 00:22:53,880
like does anyone here deal with

00:22:48,000 --> 00:22:59,340
compliance like socks PCI HIPAA things

00:22:53,880 --> 00:23:03,590
like that put of the folks that works

00:22:59,340 --> 00:23:05,670
with us was able to the he had some PCI

00:23:03,590 --> 00:23:08,340
audit and so he was able to actually

00:23:05,670 --> 00:23:11,100
give them the puppet code and they were

00:23:08,340 --> 00:23:12,480
excited to get that as part of the audix

00:23:11,100 --> 00:23:17,880
and they could see like what was going

00:23:12,480 --> 00:23:20,610
on now the next is reporting reporting

00:23:17,880 --> 00:23:24,390
is comprehensive of every change ever

00:23:20,610 --> 00:23:27,630
made and correlated to the resource that

00:23:24,390 --> 00:23:29,670
you that you're managing so the resource

00:23:27,630 --> 00:23:34,260
could be a user it could be a file a

00:23:29,670 --> 00:23:37,910
service all sorts of things and then

00:23:34,260 --> 00:23:41,780
it's easily validated against compliance

00:23:37,910 --> 00:23:45,360
different ways you can send reports HTTP

00:23:41,780 --> 00:23:48,870
syslog rd graphs you can store the

00:23:45,360 --> 00:23:52,740
yambol tag mail is is fun because you

00:23:48,870 --> 00:23:55,230
can tag parts of your code and when they

00:23:52,740 --> 00:23:57,890
change the log entry is sent via email

00:23:55,230 --> 00:24:02,730
so something you could do with this is

00:23:57,890 --> 00:24:05,190
let's say you have a security like

00:24:02,730 --> 00:24:08,510
policy that says you can't ssh as route

00:24:05,190 --> 00:24:11,810
to your systems so like pretty common

00:24:08,510 --> 00:24:15,540
you could manage that your sshd config

00:24:11,810 --> 00:24:17,610
file you know and sure you can't look

00:24:15,540 --> 00:24:20,220
like you can't do that and then if that

00:24:17,610 --> 00:24:22,230
file ever changes someone turns it on

00:24:20,220 --> 00:24:24,000
you can ssh this route

00:24:22,230 --> 00:24:26,190
puppets going to go and fix it and put

00:24:24,000 --> 00:24:28,530
it back but now it can send an email to

00:24:26,190 --> 00:24:31,230
your security team and say hey like this

00:24:28,530 --> 00:24:33,600
happened and then so you like you have

00:24:31,230 --> 00:24:35,760
logging of the incident you know when

00:24:33,600 --> 00:24:37,530
the incident was fixed and if you have

00:24:35,760 --> 00:24:38,820
the last puppet run like like you could

00:24:37,530 --> 00:24:41,490
tell window when you were out of

00:24:38,820 --> 00:24:44,460
compliance which is cool and if you have

00:24:41,490 --> 00:24:46,830
an email base like ticketing system now

00:24:44,460 --> 00:24:48,929
puppet can auto generate like tickets

00:24:46,830 --> 00:24:54,590
for you when it's these things that

00:24:48,929 --> 00:24:57,570
aren't right on your network there's a

00:24:54,590 --> 00:25:00,090
picture again like the lighting isn't

00:24:57,570 --> 00:25:02,070
great for this but what's going on here

00:25:00,090 --> 00:25:04,980
with our dashboard this is a web base

00:25:02,070 --> 00:25:07,440
like gooey and it gives you simple red

00:25:04,980 --> 00:25:10,350
and green output of you know are things

00:25:07,440 --> 00:25:12,330
good or are they failing and then you

00:25:10,350 --> 00:25:15,630
can also do things like look at compile

00:25:12,330 --> 00:25:23,220
time to sort of get some metrics for how

00:25:15,630 --> 00:25:25,650
your puppet master is doing what puppet

00:25:23,220 --> 00:25:29,070
does is that I like is that it talks

00:25:25,650 --> 00:25:30,450
about what not how is is is there any

00:25:29,070 --> 00:25:31,860
way you can bring the lights down in the

00:25:30,450 --> 00:25:36,179
front up there so people can read the

00:25:31,860 --> 00:25:38,610
slides or think there might be buttons

00:25:36,179 --> 00:25:42,620
next to you if you want to try smashing

00:25:38,610 --> 00:25:42,620
on those know

00:25:44,150 --> 00:25:50,570
there we go like an people read what's

00:25:46,400 --> 00:25:53,960
up there now is that better yeah okay so

00:25:50,570 --> 00:25:56,960
what I initially was was really excited

00:25:53,960 --> 00:26:00,650
about with by using puppet is that I

00:25:56,960 --> 00:26:02,660
talked about what not how so it's like

00:26:00,650 --> 00:26:06,230
like pretty easy to read this I've got a

00:26:02,660 --> 00:26:09,980
package its name is ntp and I want it to

00:26:06,230 --> 00:26:11,960
be installed so that's that's like easy

00:26:09,980 --> 00:26:14,060
to work with I didn't have to know some

00:26:11,960 --> 00:26:18,830
other programming language to make it

00:26:14,060 --> 00:26:22,070
happen and notice I don't say run

00:26:18,830 --> 00:26:24,350
apt-get I don't say run yum you know I

00:26:22,070 --> 00:26:28,310
don't say run package add i just say i

00:26:24,350 --> 00:26:30,770
want the package so this is the code

00:26:28,310 --> 00:26:35,000
that you would like right in and the

00:26:30,770 --> 00:26:39,620
puppet master doesn't know what system

00:26:35,000 --> 00:26:41,960
the the end node is and it doesn't care

00:26:39,620 --> 00:26:45,320
it's up to the end node to figure out

00:26:41,960 --> 00:26:47,840
how to get packages on its on its system

00:26:45,320 --> 00:26:50,780
you know like which like what software

00:26:47,840 --> 00:26:51,890
like do i use to make that happen like

00:26:50,780 --> 00:26:54,950
this is great because at the end of the

00:26:51,890 --> 00:26:58,490
day when you're building systems and

00:26:54,950 --> 00:27:01,280
modeling systems do you really care what

00:26:58,490 --> 00:27:04,370
flags you have to pass the user add or

00:27:01,280 --> 00:27:06,950
add user or whatever no like you want to

00:27:04,370 --> 00:27:15,620
build services not get caught up in the

00:27:06,950 --> 00:27:19,670
like details this just lists the

00:27:15,620 --> 00:27:22,340
providers which is how these the agents

00:27:19,670 --> 00:27:24,020
know how to do that and so an agent will

00:27:22,340 --> 00:27:26,360
say I'm a red hat system so i'm going to

00:27:24,020 --> 00:27:28,400
use young or i'm a debian system i'm

00:27:26,360 --> 00:27:30,560
going to use apt and so it'll just do

00:27:28,400 --> 00:27:34,970
the right thing to get packages or users

00:27:30,560 --> 00:27:39,110
or like whatever onto the system so

00:27:34,970 --> 00:27:41,650
example resource types we have are the

00:27:39,110 --> 00:27:45,800
ones we use the most cron exact file

00:27:41,650 --> 00:27:49,070
package and service when we're talking

00:27:45,800 --> 00:27:50,860
about like by unix machines these are

00:27:49,070 --> 00:27:53,840
generally the things we're talking about

00:27:50,860 --> 00:27:57,110
like you may talk about hosts or mounts

00:27:53,840 --> 00:27:59,600
or ZFS like things like that and then

00:27:57,110 --> 00:28:01,610
isn't a comprehensive list is just a

00:27:59,600 --> 00:28:06,559
small small one and then you can create

00:28:01,610 --> 00:28:08,150
your own resource types puppets again a

00:28:06,559 --> 00:28:11,440
declarative language and not a

00:28:08,150 --> 00:28:14,510
procedural one so I love it in that I

00:28:11,440 --> 00:28:17,390
model what my system should look like as

00:28:14,510 --> 00:28:21,170
opposed to write you know scripts that

00:28:17,390 --> 00:28:27,170
say do this do this do this which

00:28:21,170 --> 00:28:30,470
doesn't scale so the the most common

00:28:27,170 --> 00:28:33,830
design pattern that we have is the

00:28:30,470 --> 00:28:35,440
package file service design pattern so

00:28:33,830 --> 00:28:40,070
normally when we're installing software

00:28:35,440 --> 00:28:42,679
you install a package you twiddle some

00:28:40,070 --> 00:28:44,929
knobs through config files and then at

00:28:42,679 --> 00:28:47,150
the end of it if you total the knobs

00:28:44,929 --> 00:28:50,600
right like your service starts up right

00:28:47,150 --> 00:28:52,700
and so this this this design pattern

00:28:50,600 --> 00:28:54,950
like the most common what we're saying

00:28:52,700 --> 00:28:58,780
here is we have a package in tpe we want

00:28:54,950 --> 00:29:03,260
it installed we have a file ntp calm and

00:28:58,780 --> 00:29:05,809
it requires the package so puppet does

00:29:03,260 --> 00:29:08,559
have the sense of ordering like built-in

00:29:05,809 --> 00:29:11,630
sit and to do that you have to specify

00:29:08,559 --> 00:29:13,940
relationships between your resources and

00:29:11,630 --> 00:29:15,830
that's how you can ensure that the

00:29:13,940 --> 00:29:17,750
package happens before the config file

00:29:15,830 --> 00:29:20,240
right since you have to get the config

00:29:17,750 --> 00:29:23,240
file from somewhere and then you have a

00:29:20,240 --> 00:29:26,480
service ntp that you want to be running

00:29:23,240 --> 00:29:29,270
and it's going to subscribe to this file

00:29:26,480 --> 00:29:32,919
so this file ever changes then your

00:29:29,270 --> 00:29:35,240
service will get by notified and hopped

00:29:32,919 --> 00:29:38,210
so this is the only thing you can do

00:29:35,240 --> 00:29:39,470
with puppet you can still do a ton in

00:29:38,210 --> 00:29:45,230
terms of like managing your

00:29:39,470 --> 00:29:48,559
infrastructure puppet allows for file

00:29:45,230 --> 00:29:54,380
serving so it uses this puppet let you

00:29:48,559 --> 00:29:56,809
are I to serve up files we're talking

00:29:54,380 --> 00:30:02,179
about adding BitTorrent support for

00:29:56,809 --> 00:30:05,540
large files which would be cool and then

00:30:02,179 --> 00:30:07,610
we also have like templates for twofer

00:30:05,540 --> 00:30:10,220
for templates we didn't reinvent the

00:30:07,610 --> 00:30:11,000
wheel we just use like rubies ER be

00:30:10,220 --> 00:30:14,680
engine

00:30:11,000 --> 00:30:18,500
for templating and so here we're taking

00:30:14,680 --> 00:30:21,770
like variables and putting those in a

00:30:18,500 --> 00:30:25,640
template so this is actually the first

00:30:21,770 --> 00:30:29,510
code that I wrote with like with puppet

00:30:25,640 --> 00:30:31,370
was to model my MOT d and within a few

00:30:29,510 --> 00:30:35,660
minutes I had puppet like going and

00:30:31,370 --> 00:30:37,910
doing stuff so there's more advanced

00:30:35,660 --> 00:30:40,610
like templates that you can do you can

00:30:37,910 --> 00:30:42,470
have in line Ruby in air be files you

00:30:40,610 --> 00:30:46,250
can do all sorts of stuff this is a

00:30:42,470 --> 00:30:48,860
simple one for a resolv.conf so here we

00:30:46,250 --> 00:30:51,290
have like a search path and then this is

00:30:48,860 --> 00:30:53,990
essentially like a for loop over an

00:30:51,290 --> 00:30:56,560
array of name servers and so it's going

00:30:53,990 --> 00:30:59,330
to print all those out for your resolver

00:30:56,560 --> 00:31:03,220
so just like demonstrate you know like

00:30:59,330 --> 00:31:03,220
what you can do with light templates

00:31:04,240 --> 00:31:09,130
there's also like syntax checking I

00:31:11,140 --> 00:31:16,550
would strongly encourage that people do

00:31:13,760 --> 00:31:19,280
syntax checking as pre-commit hooks to

00:31:16,550 --> 00:31:21,290
their version control system you can

00:31:19,280 --> 00:31:23,960
commit code that's syntactically correct

00:31:21,290 --> 00:31:26,690
and still does dump things like it's not

00:31:23,960 --> 00:31:28,010
going to stop you from that but like you

00:31:26,690 --> 00:31:30,470
should at least do syntax checks to

00:31:28,010 --> 00:31:32,720
ensure that you're not accepting code

00:31:30,470 --> 00:31:34,040
that's that's just you know like broken

00:31:32,720 --> 00:31:41,210
from the get go into your version

00:31:34,040 --> 00:31:42,920
control some of that people like

00:31:41,210 --> 00:31:48,760
generally like bring up is how to check

00:31:42,920 --> 00:31:51,380
how do the nodes become aware of each up

00:31:48,760 --> 00:31:53,720
of each other and how do you pass data

00:31:51,380 --> 00:31:57,380
between nodes so far we just talked

00:31:53,720 --> 00:31:59,720
about nodes in the puppet master and so

00:31:57,380 --> 00:32:04,730
to get data between nodes we use a

00:31:59,720 --> 00:32:06,770
database as a proxy the database is the

00:32:04,730 --> 00:32:09,740
standard ones you'd expect to see we

00:32:06,770 --> 00:32:14,600
generally do my sequel or sequel live by

00:32:09,740 --> 00:32:17,450
default and how it works is that one

00:32:14,600 --> 00:32:19,820
node can export a resource so that'll

00:32:17,450 --> 00:32:22,940
get shoved into the database and then

00:32:19,820 --> 00:32:24,230
these other nodes can realize those like

00:32:22,940 --> 00:32:27,260
resources

00:32:24,230 --> 00:32:29,450
so seen people do this with with host

00:32:27,260 --> 00:32:31,970
entries so that they can have like a

00:32:29,450 --> 00:32:35,150
host file that's up to date but I think

00:32:31,970 --> 00:32:38,720
more exciting is like SSH keys for hosts

00:32:35,150 --> 00:32:41,900
so every every node can export its SSH

00:32:38,720 --> 00:32:44,030
key and then every other node can can

00:32:41,900 --> 00:32:45,770
like realize those and then you can

00:32:44,030 --> 00:32:47,990
enforce that only the ones that you

00:32:45,770 --> 00:32:50,570
explicitly declare are in your known

00:32:47,990 --> 00:32:57,830
hosts file and so people can't just add

00:32:50,570 --> 00:33:02,000
things in there we also have support for

00:32:57,830 --> 00:33:04,280
sin we call an ANC and external node X

00:33:02,000 --> 00:33:06,080
from no classifier and you can use our

00:33:04,280 --> 00:33:09,020
puppet dashboard which is the web base

00:33:06,080 --> 00:33:12,020
like GUI or you can use your own systems

00:33:09,020 --> 00:33:14,900
and so let's say you already have a

00:33:12,020 --> 00:33:17,780
database of all your hosts and IP

00:33:14,900 --> 00:33:20,510
information and things like that or you

00:33:17,780 --> 00:33:22,190
have some management tool that was

00:33:20,510 --> 00:33:23,720
written ten years ago and tickle and

00:33:22,190 --> 00:33:27,700
pearl and it's not leaving your

00:33:23,720 --> 00:33:31,010
organization but like you can still

00:33:27,700 --> 00:33:33,860
interface with that to do it you just

00:33:31,010 --> 00:33:37,250
have a script that takes the cert name

00:33:33,860 --> 00:33:39,140
which is like the name of the node as an

00:33:37,250 --> 00:33:41,390
argument and then it just outputs like

00:33:39,140 --> 00:33:42,590
yeah Mille to standard out and so this

00:33:41,390 --> 00:33:44,179
could be as simple as let's say you

00:33:42,590 --> 00:33:46,340
already have a database that has all

00:33:44,179 --> 00:33:47,990
your node information you might have

00:33:46,340 --> 00:33:50,780
like rack location or things like that

00:33:47,990 --> 00:33:53,870
you could add a couple more like columns

00:33:50,780 --> 00:33:56,750
for what classes and what variables

00:33:53,870 --> 00:34:00,140
should be associated like with that node

00:33:56,750 --> 00:34:03,200
and then just do a sequel like look up

00:34:00,140 --> 00:34:05,120
and output at ample so this is just to

00:34:03,200 --> 00:34:07,580
show that puppets like really hackable

00:34:05,120 --> 00:34:11,960
and you can get it to work in your

00:34:07,580 --> 00:34:14,149
infrastructure so this is a common node

00:34:11,960 --> 00:34:17,659
like declaration of what the code would

00:34:14,149 --> 00:34:19,429
look like where we have some node we

00:34:17,659 --> 00:34:21,320
have a few variables and then we're

00:34:19,429 --> 00:34:23,389
doing this no decode relationship or

00:34:21,320 --> 00:34:25,760
we're saying this system is going to

00:34:23,389 --> 00:34:30,950
have the common class the puppet class

00:34:25,760 --> 00:34:32,780
the dns consonant defeat class and so

00:34:30,950 --> 00:34:36,260
this is what it would look like in yamo

00:34:32,780 --> 00:34:38,889
output so if your script can do that

00:34:36,260 --> 00:34:38,889
then you can

00:34:39,010 --> 00:34:48,410
use assets that you already have I've

00:34:45,350 --> 00:34:51,590
got a demo to go through about using

00:34:48,410 --> 00:35:00,050
this with ec2 why does anyone have like

00:34:51,590 --> 00:35:03,830
questions yeah I have not used blueprint

00:35:00,050 --> 00:35:08,210
myself but so blueprint is software that

00:35:03,830 --> 00:35:18,290
uses puppet to identify what the state

00:35:08,210 --> 00:35:21,110
of the system is right yeah I haven't

00:35:18,290 --> 00:35:24,290
haven't used it myself I generally like

00:35:21,110 --> 00:35:26,480
to build systems new which isn't always

00:35:24,290 --> 00:35:28,100
you know something you can do or you

00:35:26,480 --> 00:35:29,960
have to do like forensics to figure out

00:35:28,100 --> 00:35:31,970
well how do I build the new system so

00:35:29,960 --> 00:35:41,870
tools like that or good to help you like

00:35:31,970 --> 00:35:44,210
do that so it doesn't use SSH uses ssl

00:35:41,870 --> 00:35:46,430
encryption and search for authentication

00:35:44,210 --> 00:35:59,510
and now you have to install software on

00:35:46,430 --> 00:36:02,690
each of the nodes hmm yep yeah by

00:35:59,510 --> 00:36:05,120
default it runs a demon that wakes up

00:36:02,690 --> 00:36:08,960
every 30 minutes checks in with the

00:36:05,120 --> 00:36:12,980
master gets its its catalog and then

00:36:08,960 --> 00:36:16,070
makes a change if necessary you can also

00:36:12,980 --> 00:36:19,670
run puppet out of chron which is what a

00:36:16,070 --> 00:36:21,410
lot of folks do this is good so like

00:36:19,670 --> 00:36:23,960
people like the New York Stock Exchange

00:36:21,410 --> 00:36:25,760
what they do is they say there's not

00:36:23,960 --> 00:36:28,850
going to be any changes to our systems

00:36:25,760 --> 00:36:30,500
during trading hours so obviously that's

00:36:28,850 --> 00:36:32,890
that's that's when it's real important

00:36:30,500 --> 00:36:35,360
that everything is up all right and so

00:36:32,890 --> 00:36:37,550
puppet doesn't run during the light

00:36:35,360 --> 00:36:40,040
during trading hours and then after that

00:36:37,550 --> 00:36:42,410
it runs in a no op mode so if any

00:36:40,040 --> 00:36:45,350
changes were made to those systems they

00:36:42,410 --> 00:36:48,290
get logged into reporting and then

00:36:45,350 --> 00:36:49,700
change approval board can say hey where

00:36:48,290 --> 00:36:51,280
these change is supposed to be there

00:36:49,700 --> 00:36:56,390
what's going on with

00:36:51,280 --> 00:36:58,880
and then they can run puppet in that the

00:36:56,390 --> 00:37:03,440
enforcing mode during a maintenance

00:36:58,880 --> 00:37:06,050
window so definitely different options

00:37:03,440 --> 00:37:09,170
you have for like running puppet also

00:37:06,050 --> 00:37:12,770
with that you can run with with the

00:37:09,170 --> 00:37:14,990
puppet demon you can put a splay in

00:37:12,770 --> 00:37:16,640
there to splay the time so you don't

00:37:14,990 --> 00:37:18,920
have thundering herd where everything

00:37:16,640 --> 00:37:20,059
wakes up right up you know the 30

00:37:18,920 --> 00:37:22,550
minutes on the dot and they all like

00:37:20,059 --> 00:37:27,890
check in at once in cron what people do

00:37:22,550 --> 00:37:29,420
is wrap a random sleep so that not all

00:37:27,890 --> 00:37:42,859
the things are waking up at the same

00:37:29,420 --> 00:37:46,550
time like any other questions so like

00:37:42,859 --> 00:37:49,010
not not not directly although i've used

00:37:46,550 --> 00:37:52,190
puppet to manage spacewalk and i use

00:37:49,010 --> 00:37:56,170
spacewalk in conjunction with puppet but

00:37:52,190 --> 00:37:56,170
they're not like glued doing each other

00:37:57,760 --> 00:38:02,869
that's actually good that you like bring

00:38:00,170 --> 00:38:05,599
up so for folks especially that use

00:38:02,869 --> 00:38:08,359
puppet now you can specify versions of

00:38:05,599 --> 00:38:12,290
packages in your puppet code which i

00:38:08,359 --> 00:38:14,440
think is not a good practice and instead

00:38:12,290 --> 00:38:17,059
i would have people manage their

00:38:14,440 --> 00:38:19,490
repositories so the tools like spacewalk

00:38:17,059 --> 00:38:21,920
are great for that so that your systems

00:38:19,490 --> 00:38:23,630
aren't connecting to the internet to get

00:38:21,920 --> 00:38:26,799
packages they're getting them from your

00:38:23,630 --> 00:38:31,849
repositories and you're managing what's

00:38:26,799 --> 00:38:37,040
like what's light there within them it's

00:38:31,849 --> 00:38:39,230
like good practice cool folks like to

00:38:37,040 --> 00:38:42,579
see the demo will go on to that or we

00:38:39,230 --> 00:38:42,579
have more more questions

00:38:57,100 --> 00:39:07,310
see Wow unfortunately I think I think we

00:39:05,810 --> 00:39:11,320
should skip the demo because you can't

00:39:07,310 --> 00:39:13,690
read what's on my screen which makes it

00:39:11,320 --> 00:39:19,310
it's going to make it hard for me to

00:39:13,690 --> 00:39:28,120
show you cool can people read what's

00:39:19,310 --> 00:39:28,120
going on here maybe

00:39:52,630 --> 00:39:59,470
is that better people read that okay

00:40:01,600 --> 00:40:06,730
there we go sweet

00:40:16,140 --> 00:40:24,880
maybe we can go down one size people

00:40:19,599 --> 00:40:27,400
surveyed this to get more than like five

00:40:24,880 --> 00:40:31,410
characters that go across would be

00:40:27,400 --> 00:40:35,170
helpful cool so like what I'll do for

00:40:31,410 --> 00:40:39,309
like this demo I just provisioned two

00:40:35,170 --> 00:40:43,000
machines in ec2 and we're going to

00:40:39,309 --> 00:40:45,880
install puppet enterprise on both of

00:40:43,000 --> 00:40:49,319
them and then manage a Java deployment

00:40:45,880 --> 00:40:49,319
as you can see what that would look like

00:40:53,339 --> 00:41:00,369
so the puppet enterprise is a textual

00:40:57,549 --> 00:41:03,160
installer but we are a company of

00:41:00,369 --> 00:41:07,809
automation so you can feed it in answers

00:41:03,160 --> 00:41:13,510
file I'm going to do it interactively

00:41:07,809 --> 00:41:21,460
just you can see what's there it lets me

00:41:13,510 --> 00:41:24,490
install a puppet master by default your

00:41:21,460 --> 00:41:28,599
nodes are going to look for a house

00:41:24,490 --> 00:41:30,430
called puppet on on your domain and so

00:41:28,599 --> 00:41:36,609
what folks would do is add a system and

00:41:30,430 --> 00:41:37,359
then add like a cname to that hose we're

00:41:36,609 --> 00:41:40,359
going to go ahead and turn on a

00:41:37,359 --> 00:41:43,079
dashboard and use it as an external node

00:41:40,359 --> 00:41:43,079
classifier

00:41:54,660 --> 00:41:57,890
I messed up

00:41:59,550 --> 00:42:04,520
doesn't actually do anything till the

00:42:01,440 --> 00:42:04,520
end like luckily

00:42:21,300 --> 00:42:28,590
alright so like you can see as this does

00:42:25,230 --> 00:42:32,610
the install that the packages all be

00:42:28,590 --> 00:42:36,870
prefixed with PE so that way we have our

00:42:32,610 --> 00:42:39,690
own versions of tools that we're

00:42:36,870 --> 00:42:43,220
installing so that way it doesn't clash

00:42:39,690 --> 00:42:43,220
with your versions that are out there

00:42:50,140 --> 00:42:57,770
very long yes you can see everything is

00:42:53,150 --> 00:43:00,640
prefixed with PE and this is a feature

00:42:57,770 --> 00:43:00,640
of puppet enterprise

00:43:16,610 --> 00:43:24,530
right on so we can see it's setting up

00:43:19,240 --> 00:43:26,690
the dashboard for us sitting up sequel

00:43:24,530 --> 00:43:33,070
so now it says it's it's done and ready

00:43:26,690 --> 00:43:36,380
to go so we're going to set up pup it on

00:43:33,070 --> 00:43:41,380
another node and see how how that works

00:43:36,380 --> 00:43:41,380
but first let's connect to the dashboard

00:43:50,000 --> 00:43:58,010
so for that I just have an SSH by tunnel

00:43:53,930 --> 00:44:01,210
that's going to tunnel to the system so

00:43:58,010 --> 00:44:03,290
if you're not familiar with ssh tunnels

00:44:01,210 --> 00:44:06,980
it's a good way to get around those

00:44:03,290 --> 00:44:10,280
proxies at work in school this is what's

00:44:06,980 --> 00:44:12,290
going on just creating a local port 3000

00:44:10,280 --> 00:44:14,980
that's connected to port 3000 on the

00:44:12,290 --> 00:44:14,980
local machine

00:44:23,700 --> 00:44:29,520
cool so this is connecting on my 3g

00:44:26,820 --> 00:44:31,890
connection so i was having trouble with

00:44:29,520 --> 00:44:40,940
the wireless here so it might be a

00:44:31,890 --> 00:44:40,940
little slow for us but I see there we go

00:44:44,119 --> 00:44:48,329
so it doesn't know about any nodes yet

00:44:46,560 --> 00:44:50,990
so we'll go ahead and run puppet on the

00:44:48,329 --> 00:44:50,990
puppet system

00:45:04,700 --> 00:45:12,750
cool so we see we've got a note in there

00:45:07,860 --> 00:45:17,340
and everything's green or kind of green

00:45:12,750 --> 00:45:23,100
wellness display but we can go in there

00:45:17,340 --> 00:45:28,050
and send see the status of it what's

00:45:23,100 --> 00:45:31,490
going on so let's add another node will

00:45:28,050 --> 00:45:31,490
add the node that's going to run tomcat

00:45:47,109 --> 00:45:56,380
I believe it's it's dash S we can create

00:45:49,749 --> 00:45:58,119
and dancers file so we're going to go

00:45:56,380 --> 00:46:00,339
through and create and the answers file

00:45:58,119 --> 00:46:03,809
or we don't want to install master query

00:46:00,339 --> 00:46:03,809
have one weird have a dashboard

00:46:13,710 --> 00:46:18,390
we want symbolic links and user local

00:46:16,470 --> 00:46:21,960
bins so what that did is created this

00:46:18,390 --> 00:46:25,050
file and so this file is going to be

00:46:21,960 --> 00:46:28,190
evaluated with bash or actually with

00:46:25,050 --> 00:46:31,440
shell and so all these just get set as

00:46:28,190 --> 00:46:34,080
variables that the install script is

00:46:31,440 --> 00:46:36,869
going to use so if you're doing this for

00:46:34,080 --> 00:46:39,869
deployments well folks I generally do is

00:46:36,869 --> 00:46:41,580
cert like certain aim they'll have back

00:46:39,869 --> 00:46:44,670
ticks and then you'll put like hostname

00:46:41,580 --> 00:46:47,099
chef and that way your system will

00:46:44,670 --> 00:46:51,109
evaluate that and have its own name in

00:46:47,099 --> 00:46:51,109
there not one that's hard coded

00:47:03,579 --> 00:47:11,499
then we'll go ahead and install from the

00:47:06,009 --> 00:47:13,719
answers file so normally the install

00:47:11,499 --> 00:47:18,190
from the answers file I I would have

00:47:13,719 --> 00:47:21,219
done like as a post part of your

00:47:18,190 --> 00:47:24,190
provisioning step so if you were using

00:47:21,219 --> 00:47:28,859
like kickstart in your post section you

00:47:24,190 --> 00:47:32,170
might w get the script that's going to

00:47:28,859 --> 00:47:34,930
like grab the the tar ball and the

00:47:32,170 --> 00:47:37,119
answers file unpack the tar ball and run

00:47:34,930 --> 00:47:40,390
it with the answers file for you I was

00:47:37,119 --> 00:47:42,579
like part of your provisioning so like

00:47:40,390 --> 00:47:47,229
when this machine ran its it's submitted

00:47:42,579 --> 00:47:52,619
a request to the master so i can run

00:47:47,229 --> 00:47:55,809
puppets cert list and that'll show me

00:47:52,619 --> 00:47:59,589
outstanding systems to be signed or i

00:47:55,809 --> 00:48:04,019
can do all and show all my sist all my

00:47:59,589 --> 00:48:04,019
certs so tomcat still needs to be signed

00:48:07,259 --> 00:48:11,619
so there's ways to work around this with

00:48:09,940 --> 00:48:13,359
automation as well so that you don't

00:48:11,619 --> 00:48:15,819
have this manual step of signing your

00:48:13,359 --> 00:48:20,819
certs and it really depends on your

00:48:15,819 --> 00:48:24,099
security constraints so you can turn on

00:48:20,819 --> 00:48:26,079
auto signing and so any host that

00:48:24,099 --> 00:48:28,989
connects it will automatically be signed

00:48:26,079 --> 00:48:31,569
so I would only do this if you're on a a

00:48:28,989 --> 00:48:33,339
trusted like network and so you like you

00:48:31,569 --> 00:48:36,069
have other like mechanisms that keep

00:48:33,339 --> 00:48:39,459
posts from getting on that network that

00:48:36,069 --> 00:48:42,880
you're using you can also pre generate

00:48:39,459 --> 00:48:45,489
the certs as well so you can pre like

00:48:42,880 --> 00:48:48,190
generate them for a node and then have

00:48:45,489 --> 00:48:54,910
that note perhaps I get that data

00:48:48,190 --> 00:48:59,190
through some secure means so let's let's

00:48:54,910 --> 00:48:59,190
look over here and check out our nodes

00:49:05,510 --> 00:49:08,510
run

00:49:10,900 --> 00:49:15,579
so there isn't really any code here yet

00:49:12,880 --> 00:49:21,730
so it doesn't do anything so we haven't

00:49:15,579 --> 00:49:24,490
described the state of a system but now

00:49:21,730 --> 00:49:28,359
when we look here with my fast 3g

00:49:24,490 --> 00:49:33,460
connection there we go so we're going to

00:49:28,359 --> 00:49:40,420
add a class and there's a hello world

00:49:33,460 --> 00:49:43,960
class it's already there then we're

00:49:40,420 --> 00:49:46,470
going to associate that class with the

00:49:43,960 --> 00:49:49,869
Tomcat know that we just like brought up

00:49:46,470 --> 00:49:53,349
so like you could do this textually

00:49:49,869 --> 00:49:55,359
through a site manifest which is

00:49:53,349 --> 00:49:57,970
generally how I prefer to do it or you

00:49:55,359 --> 00:50:05,529
can use an external no class of fire

00:49:57,970 --> 00:50:07,270
like the dashboard to keep the data so

00:50:05,529 --> 00:50:15,549
now I'm going to add this to the list of

00:50:07,270 --> 00:50:17,500
classes so now I'm going to run puppet

00:50:15,549 --> 00:50:24,069
on the Tomcat node it's going to

00:50:17,500 --> 00:50:30,000
evaluate that class so we'll do that so

00:50:24,069 --> 00:50:30,000
here we see the notice hello world yeah

00:50:31,589 --> 00:50:36,460
I'll highlight everything so you can see

00:50:34,150 --> 00:50:38,520
what's happening on the screen you can

00:50:36,460 --> 00:50:41,200
see it looks for plugins it got a

00:50:38,520 --> 00:50:45,279
configuration and it's doing the hello

00:50:41,200 --> 00:50:48,520
world we look back over here at the

00:50:45,279 --> 00:50:52,029
dashboard we can see what that what that

00:50:48,520 --> 00:50:55,599
looks like in terms of reporting so we

00:50:52,029 --> 00:50:58,119
see everything still all good and when

00:50:55,599 --> 00:51:04,420
we look at the Tomcat we see the number

00:50:58,119 --> 00:51:06,609
of runs and what's going on I'm going to

00:51:04,420 --> 00:51:10,319
create a class that fails and you can

00:51:06,609 --> 00:51:10,319
see what failure would look like

00:51:38,940 --> 00:51:52,410
so here I am installing a package that I

00:51:45,329 --> 00:51:56,819
know is not going to be there so now I'm

00:51:52,410 --> 00:51:59,369
going to add that class and associate it

00:51:56,819 --> 00:52:02,400
with the Tomcat node so it will evaluate

00:51:59,369 --> 00:52:09,000
the fail class and we can see what it

00:52:02,400 --> 00:52:10,050
looks like when stuff breaks because if

00:52:09,000 --> 00:52:13,099
you're like me you're going to write

00:52:10,050 --> 00:52:13,099
stuff that's going to break things

00:52:25,460 --> 00:52:38,850
cool so run puppet agent again give you

00:52:29,670 --> 00:52:48,720
text that you can't read then we should

00:52:38,850 --> 00:52:51,150
watch it fail cool so we can see the

00:52:48,720 --> 00:52:53,610
hello world stuff worked and since the

00:52:51,150 --> 00:52:55,050
hello world didn't have any dependencies

00:52:53,610 --> 00:52:57,420
on the fail like there weren't any

00:52:55,050 --> 00:52:59,490
relationships between the two the

00:52:57,420 --> 00:53:03,540
failure didn't keep other code from

00:52:59,490 --> 00:53:06,360
executing so anything that you manage if

00:53:03,540 --> 00:53:09,090
if there's an issue with one part and it

00:53:06,360 --> 00:53:10,830
relies on subsequent areas those aren't

00:53:09,090 --> 00:53:14,010
going to be evaluated because there was

00:53:10,830 --> 00:53:16,860
a failure but other code that you have

00:53:14,010 --> 00:53:19,080
it's still going to evaluate that so

00:53:16,860 --> 00:53:23,090
here we see the pillow world's is still

00:53:19,080 --> 00:53:26,940
here but now we have an error the on

00:53:23,090 --> 00:53:29,040
class fail package as the resource and

00:53:26,940 --> 00:53:32,340
that's the name of the resource and it

00:53:29,040 --> 00:53:35,990
couldn't find it go figure so now let's

00:53:32,340 --> 00:53:38,550
look and see what this looks like here

00:53:35,990 --> 00:53:40,980
we can see suddenly we have one failing

00:53:38,550 --> 00:53:45,570
it's some bright red it's pretty obvious

00:53:40,980 --> 00:53:53,550
something's Busta cated we can go in

00:53:45,570 --> 00:53:55,530
there and see what failed so and this is

00:53:53,550 --> 00:53:58,740
just like the error we saw back on the

00:53:55,530 --> 00:54:00,930
screen we have the error itself and then

00:53:58,740 --> 00:54:06,690
it's correlated to the resource that

00:54:00,930 --> 00:54:08,100
we're managing and then a time so this

00:54:06,690 --> 00:54:09,870
is great when you're working in the

00:54:08,100 --> 00:54:13,880
cloud and that scale like you're not

00:54:09,870 --> 00:54:16,140
logged in to all your machines right in

00:54:13,880 --> 00:54:19,830
fact once they got public going on

00:54:16,140 --> 00:54:21,720
systems i did an ssh into hosts like the

00:54:19,830 --> 00:54:23,910
only time you ssh into host when

00:54:21,720 --> 00:54:26,310
something really odd it peculiar was was

00:54:23,910 --> 00:54:28,680
like happening and then you wanted to do

00:54:26,310 --> 00:54:31,620
like some forensics to see why but other

00:54:28,680 --> 00:54:34,620
than that like this this this sort of

00:54:31,620 --> 00:54:36,690
breaks that model of connecting to your

00:54:34,620 --> 00:54:37,900
host the rest of sage it's just not

00:54:36,690 --> 00:54:43,119
something

00:54:37,900 --> 00:54:47,260
that you that you need to do so like

00:54:43,119 --> 00:54:50,890
we'll go ahead and get that fail class

00:54:47,260 --> 00:54:56,890
out of there we don't want to see it

00:54:50,890 --> 00:54:59,230
keep failing all the time and now we'll

00:54:56,890 --> 00:55:07,770
add some code for java to do a java

00:54:59,230 --> 00:55:07,770
deployment or a tomcat rather

00:55:13,730 --> 00:55:20,550
so I got some code here that another

00:55:18,180 --> 00:55:26,240
individual wrote most of that's going to

00:55:20,550 --> 00:55:30,859
install the java like jdk and set up

00:55:26,240 --> 00:55:30,859
like Jenkins so go ahead and add those

00:55:41,220 --> 00:55:52,200
and while I'm editing them here you can

00:55:44,310 --> 00:55:55,280
add them with these with these commands

00:55:52,200 --> 00:56:09,800
you could add them like programmatically

00:55:55,280 --> 00:56:09,800
so we'll keep that a shot loop all right

00:56:24,349 --> 00:56:30,079
so go ahead and add all these classes

00:56:27,140 --> 00:56:32,650
for the module to our external node

00:56:30,079 --> 00:56:32,650
classifier

00:56:42,950 --> 00:56:48,160
and we'll go ahead and associate those

00:56:44,930 --> 00:56:48,160
with the node

00:57:17,390 --> 00:57:23,780
so we went to Jenkins just yet but we'll

00:57:19,830 --> 00:57:23,780
set up tom cat and service in Java

00:57:29,260 --> 00:57:33,460
and then we'll run the agent again

00:57:35,350 --> 00:57:40,630
and see it actually set up tomcat for us

00:57:50,540 --> 00:57:56,089
so my ec2 micro instances are very fast

00:58:05,180 --> 00:58:15,960
video so we can see it's setting up the

00:58:12,780 --> 00:58:18,210
forest and so it's just installed all

00:58:15,960 --> 00:58:21,329
the Tomcat business as well as gave us

00:58:18,210 --> 00:58:25,650
the hello world again so now let's do

00:58:21,329 --> 00:58:36,900
another SSH like tunnel Tomcat should be

00:58:25,650 --> 00:58:38,970
running on port 8080 on that system so

00:58:36,900 --> 00:58:43,200
we see we've got tomcat like going so

00:58:38,970 --> 00:58:45,119
that all got set up Oh automagically for

00:58:43,200 --> 00:58:48,270
us and now we'll deployed Jenkins

00:58:45,119 --> 00:58:52,609
Jenkins is a fork from Hudson it's just

00:58:48,270 --> 00:58:52,609
a java app does continuous integration

00:59:07,800 --> 00:59:14,680
before we do that I'll show you what the

00:59:10,570 --> 00:59:16,510
Jenkins code looks like so the Jenkins

00:59:14,680 --> 00:59:19,930
code is including the Tomcat and tomcat

00:59:16,510 --> 00:59:22,780
like service code it's installing a

00:59:19,930 --> 00:59:24,340
package called Jenkins and it's

00:59:22,780 --> 00:59:28,080
requiring that a few things be done

00:59:24,340 --> 00:59:35,110
first which is to set up a yum repo and

00:59:28,080 --> 00:59:39,100
install a a repo key here we see file

00:59:35,110 --> 00:59:42,640
statements that are setting up the

00:59:39,100 --> 00:59:47,380
repository and then similar ones for

00:59:42,640 --> 00:59:49,420
deploying the war the war file gets

00:59:47,380 --> 00:59:51,760
stuck somewhere else and then we're

00:59:49,420 --> 00:59:53,500
creating a symbolic link so this is

00:59:51,760 --> 00:59:56,920
pretty common if you're deploying like

00:59:53,500 --> 00:59:59,140
web apps to deploy your web app to some

00:59:56,920 --> 01:00:01,660
like virgin area on the file system and

00:59:59,140 --> 01:00:04,990
then do an atomic sim link to that

01:00:01,660 --> 01:00:07,240
whether it's Java war files or whatever

01:00:04,990 --> 01:00:16,270
application like you're running that's a

01:00:07,240 --> 01:00:20,470
pretty standard like practice yeah so we

01:00:16,270 --> 01:00:22,270
didn't specify so here I'm using I'm on

01:00:20,470 --> 01:00:25,270
a red hat system so I'm setting up the

01:00:22,270 --> 01:00:28,930
repository for it so if this was already

01:00:25,270 --> 01:00:30,460
in my repository for the system then

01:00:28,930 --> 01:00:34,300
yeah and that's that's a better way to

01:00:30,460 --> 01:00:36,940
manage it is to set up repository so you

01:00:34,300 --> 01:00:40,420
like you'd have some custom bike repo

01:00:36,940 --> 01:00:42,840
and then you would just install install

01:00:40,420 --> 01:00:42,840
Jenkins

01:00:45,710 --> 01:00:49,910
so see okay

01:00:57,290 --> 01:01:04,580
so now we see it's setting up that

01:00:59,210 --> 01:01:08,480
repository it's installing the the gpg

01:01:04,580 --> 01:01:11,500
key for that and then pulling down the

01:01:08,480 --> 01:01:11,500
jenkins software

01:01:18,630 --> 01:01:25,390
I'll be it a little bit slowly for us so

01:01:23,619 --> 01:01:27,790
then we see it was created and deployed

01:01:25,390 --> 01:01:38,440
now we can go and sure that it's

01:01:27,790 --> 01:01:46,330
actually there and we should see the

01:01:38,440 --> 01:01:50,349
butler looking guy again I apologize for

01:01:46,330 --> 01:01:51,670
my blazingly fast 3g connection I hope

01:01:50,349 --> 01:01:54,030
to see what's going on with the wireless

01:01:51,670 --> 01:01:54,030
here

01:02:01,050 --> 01:02:05,910
there we go so you can see it's like

01:02:03,780 --> 01:02:10,920
loading ups we were able to deploy the

01:02:05,910 --> 01:02:19,590
web app could somebody bring the lights

01:02:10,920 --> 01:02:23,130
back up again right on does anyone have

01:02:19,590 --> 01:02:27,300
like questions about deploying deploying

01:02:23,130 --> 01:02:59,790
apps infrastructure with puppet the

01:02:27,300 --> 01:03:03,360
comments for me yeah yeah yeahs with a

01:02:59,790 --> 01:03:06,180
check out Garrett Honeycutt com you can

01:03:03,360 --> 01:03:08,700
see public speaking and I did a talk on

01:03:06,180 --> 01:03:10,830
change management and so we'll go

01:03:08,700 --> 01:03:17,190
through all of that here but I've got

01:03:10,830 --> 01:03:18,750
taco slides up to check out change

01:03:17,190 --> 01:03:21,270
management with puppet isn't so much a

01:03:18,750 --> 01:03:22,920
technical problem as it is just

01:03:21,270 --> 01:03:25,140
understanding understanding what that

01:03:22,920 --> 01:03:28,140
flow like should be but there's ways you

01:03:25,140 --> 01:03:30,900
can use your version control system in

01:03:28,140 --> 01:03:34,310
line with puppet and a ticketing system

01:03:30,900 --> 01:03:37,620
so that change comes in through a

01:03:34,310 --> 01:03:41,190
ticketing system you create a topic

01:03:37,620 --> 01:03:43,200
branch in your code to just address like

01:03:41,190 --> 01:03:45,810
what's there you can get that merged

01:03:43,200 --> 01:03:48,030
like back in create a tag and then

01:03:45,810 --> 01:03:49,800
propagate those tags throughout light

01:03:48,030 --> 01:03:51,240
throughout your code and do like change

01:03:49,800 --> 01:03:54,630
management that way because that's

01:03:51,240 --> 01:03:57,870
that's like huge for for people to know

01:03:54,630 --> 01:03:59,490
you know what's like what's going on I

01:03:57,870 --> 01:04:02,160
mean just building and maintaining

01:03:59,490 --> 01:04:03,840
systems okay but you have to know like

01:04:02,160 --> 01:04:06,320
how does that change make it through

01:04:03,840 --> 01:04:06,320
right

01:04:31,400 --> 01:04:36,900
so there's there's a few proaches like

01:04:34,019 --> 01:04:39,509
you do that one is you can set your

01:04:36,900 --> 01:04:41,219
module path just like any other path

01:04:39,509 --> 01:04:43,259
like statement so you set up multiple

01:04:41,219 --> 01:04:45,509
paths to look in for your puppet code

01:04:43,259 --> 01:04:47,069
and it'll stop on the first one like

01:04:45,509 --> 01:04:49,109
that it sees so you could do something

01:04:47,069 --> 01:04:51,299
like that and then check those out so

01:04:49,109 --> 01:04:54,170
that each organization can put stuff

01:04:51,299 --> 01:04:58,170
there then you can arrange the hierarchy

01:04:54,170 --> 01:05:00,119
the other way is just have the the

01:04:58,170 --> 01:05:01,949
different organizations you know having

01:05:00,119 --> 01:05:03,630
their own like modules and then you pull

01:05:01,949 --> 01:05:06,089
in the right ones that you want in your

01:05:03,630 --> 01:05:08,069
one like module path but there's

01:05:06,089 --> 01:05:11,099
definitely ways they like you can work

01:05:08,069 --> 01:05:14,219
to collaborate like with others and have

01:05:11,099 --> 01:05:33,719
you know different teams responsible for

01:05:14,219 --> 01:05:36,059
different parts of the systems yep yeah

01:05:33,719 --> 01:05:39,559
and you have to conform to that like

01:05:36,059 --> 01:05:42,599
policy in fact the like the DoD I

01:05:39,559 --> 01:05:44,549
published a like puppet code I forget

01:05:42,599 --> 01:05:46,739
the standard it is for their

01:05:44,549 --> 01:05:49,229
workstations but they have like a a

01:05:46,739 --> 01:05:52,380
security baseline standard and so they

01:05:49,229 --> 01:05:53,789
used like puppet to enforce that like

01:05:52,380 --> 01:05:55,890
you read through the code and it's all

01:05:53,789 --> 01:05:58,619
you know this ensures compliance with

01:05:55,890 --> 01:06:00,989
section you know 2 dot 3 dot 50 of you

01:05:58,619 --> 01:06:06,900
know like some policy thing so yeah

01:06:00,989 --> 01:06:09,779
folks are like doing that right on like

01:06:06,900 --> 01:06:19,109
any other questions the comments fun

01:06:09,779 --> 01:06:22,199
things you're doing with puppet that was

01:06:19,109 --> 01:06:25,469
from an RPM and actually would recommend

01:06:22,199 --> 01:06:30,479
that all the software you install go

01:06:25,469 --> 01:06:32,099
through a package like system so roll

01:06:30,479 --> 01:06:35,009
your own packages for whatever your

01:06:32,099 --> 01:06:36,779
operating system is that way you're

01:06:35,009 --> 01:06:38,819
doing everything the same way and you

01:06:36,779 --> 01:06:40,799
can manage them all you're managing your

01:06:38,819 --> 01:06:43,559
repositories and so now you can manage

01:06:40,799 --> 01:06:48,509
your releases by managing what's in your

01:06:43,559 --> 01:06:50,519
repository yeah there's like a little

01:06:48,509 --> 01:06:52,259
upfront cost having to build those but

01:06:50,519 --> 01:06:55,829
then you can automate you know those

01:06:52,259 --> 01:06:58,469
those builds and it's it's well worth

01:06:55,829 --> 01:07:00,569
your time to not have to have these

01:06:58,469 --> 01:07:06,890
different ways for getting software onto

01:07:00,569 --> 01:07:06,890
a system yeah yeah

01:07:08,380 --> 01:07:12,440
sure so there's there's multiple ways to

01:07:11,150 --> 01:07:15,800
handle different environments so

01:07:12,440 --> 01:07:17,750
different environments might be like the

01:07:15,800 --> 01:07:20,660
the simplistic one is let's say you have

01:07:17,750 --> 01:07:21,740
dev QA and and production and so there's

01:07:20,660 --> 01:07:24,200
there's different ways that you can

01:07:21,740 --> 01:07:26,300
handle dealing with different

01:07:24,200 --> 01:07:29,000
environments depending on what your

01:07:26,300 --> 01:07:32,240
constraints are so if if all of your

01:07:29,000 --> 01:07:34,730
systems can all talk to each other then

01:07:32,240 --> 01:07:36,560
you can use puppet environments and what

01:07:34,730 --> 01:07:40,700
it does is you basically specify a flag

01:07:36,560 --> 01:07:43,310
in the on all the agents that say I'm an

01:07:40,700 --> 01:07:45,800
environment QA and then when they talk

01:07:43,310 --> 01:07:48,170
to the puppet master it says oh you're

01:07:45,800 --> 01:07:51,290
in the QA environment so i'll give you

01:07:48,170 --> 01:07:53,480
the module path insight manifest that's

01:07:51,290 --> 01:07:56,290
specific for those systems so they say

01:07:53,480 --> 01:08:00,770
has different paths to the set of code

01:07:56,290 --> 01:08:04,670
for each of the environments i started

01:08:00,770 --> 01:08:07,010
using puppet and a telecommunications

01:08:04,670 --> 01:08:09,040
atmosphere where none of the

01:08:07,010 --> 01:08:11,990
environments could route to the other

01:08:09,040 --> 01:08:14,510
environments and actually i think that's

01:08:11,990 --> 01:08:17,180
a much better way to set up pre

01:08:14,510 --> 01:08:19,430
production environments it's a lot more

01:08:17,180 --> 01:08:22,819
of a headache but you never have the

01:08:19,430 --> 01:08:25,640
problem of oh my dev systems just

01:08:22,819 --> 01:08:28,069
hammered a production API because they

01:08:25,640 --> 01:08:29,299
can't talk to anything so this way that

01:08:28,069 --> 01:08:31,760
I like to do things coming from that

01:08:29,299 --> 01:08:34,069
environment but if you go that route

01:08:31,760 --> 01:08:37,280
then like what I do is I run separate

01:08:34,069 --> 01:08:40,450
puppet masters in each environment so

01:08:37,280 --> 01:08:47,560
they're definitely pros and cons to each

01:08:40,450 --> 01:08:47,560
yeah like any other questions

01:09:03,200 --> 01:09:09,220
I don't understand the mirroring repulse

01:09:07,040 --> 01:09:09,220
furs

01:09:22,370 --> 01:09:27,200
yeah totally yep yeah and so that's done

01:09:25,520 --> 01:09:30,470
that's not necessary for a puppet to

01:09:27,200 --> 01:09:33,700
have your repos done like locally but

01:09:30,470 --> 01:09:36,320
it's definitely best practices because

01:09:33,700 --> 01:09:38,660
like without like versioning your

01:09:36,320 --> 01:09:40,820
repositories like let's say you want to

01:09:38,660 --> 01:09:42,770
take your systems back to last week so

01:09:40,820 --> 01:09:45,470
you have all the code and your Reaper

01:09:42,770 --> 01:09:48,080
visioning with another you know tag of

01:09:45,470 --> 01:09:51,110
your code but now they're going out to

01:09:48,080 --> 01:09:53,660
these rpms that are have all like been

01:09:51,110 --> 01:09:55,640
upgraded since last week so now you like

01:09:53,660 --> 01:10:00,080
you can't really get that state back and

01:09:55,640 --> 01:10:02,870
so that so that's like a good reason to

01:10:00,080 --> 01:10:04,400
have your own like like repos but yeah I

01:10:02,870 --> 01:10:07,820
mean you could programmatically say

01:10:04,400 --> 01:10:09,710
based on your environment use these like

01:10:07,820 --> 01:10:18,760
repos and manage it that way lots of

01:10:09,710 --> 01:10:18,760
folks like do that yeah what's up

01:10:29,820 --> 01:10:37,210
what I've done is use tools like space

01:10:34,240 --> 01:10:40,330
walk I've also done it through just

01:10:37,210 --> 01:10:41,740
having like symlinks so I say you know

01:10:40,330 --> 01:10:45,100
this is the version and then it actually

01:10:41,740 --> 01:10:48,880
symlinks to some like timestamps like

01:10:45,100 --> 01:10:51,730
copy so i might have you know you know

01:10:48,880 --> 01:10:53,890
one let's say custom like repo that has

01:10:51,730 --> 01:10:56,890
all the all the packages that i had to

01:10:53,890 --> 01:10:58,840
hand roll and all that stuff and so it

01:10:56,890 --> 01:11:00,580
looks in that one place and that its end

01:10:58,840 --> 01:11:04,000
links off because like the problem is

01:11:00,580 --> 01:11:06,670
either this is really operating system

01:11:04,000 --> 01:11:08,440
agnostic with with like repos either you

01:11:06,670 --> 01:11:11,080
change all your agents to look in some

01:11:08,440 --> 01:11:13,480
other place or you change it on where

01:11:11,080 --> 01:11:16,210
they're like looking so like generally i

01:11:13,480 --> 01:11:18,130
do that with like some links then you

01:11:16,210 --> 01:11:20,710
can use programs like hard links so that

01:11:18,130 --> 01:11:23,200
you don't have you know physical like

01:11:20,710 --> 01:11:25,510
copies of that file like 20 times like

01:11:23,200 --> 01:11:29,230
using up all your disk space on those

01:11:25,510 --> 01:11:32,440
things help yeah that's elector right

01:11:29,230 --> 01:11:37,260
changelogs forum so I know why I did

01:11:32,440 --> 01:11:37,260
things cool yeah

01:11:45,969 --> 01:11:52,309
so rollbacks honestly are almost

01:11:48,679 --> 01:11:58,030
impossible because like it's not

01:11:52,309 --> 01:12:00,769
yesterday so but if if if your data if

01:11:58,030 --> 01:12:03,349
you could also roll back your data which

01:12:00,769 --> 01:12:04,909
is generally the hardest thing and you

01:12:03,349 --> 01:12:09,260
know all your packages you could do the

01:12:04,909 --> 01:12:11,420
code as well and do that although really

01:12:09,260 --> 01:12:13,820
the preferred thing to do is to roll

01:12:11,420 --> 01:12:18,739
forward and it's the you know fix the

01:12:13,820 --> 01:12:26,599
problem and go forward wow that's

01:12:18,739 --> 01:12:29,269
annoying huh cool like any other like my

01:12:26,599 --> 01:12:31,969
questions tales of puppet

01:12:29,269 --> 01:12:36,110
infrastructures that you might run cool

01:12:31,969 --> 01:12:39,229
things you've seen with it right on well

01:12:36,110 --> 01:12:42,559
like thanks everybody for by coming out

01:12:39,229 --> 01:12:45,800
thanks again to cloud calm for having me

01:12:42,559 --> 01:12:47,539
here I'm speaking two morrow morning but

01:12:45,800 --> 01:12:49,939
but I'm going to be speaking on the same

01:12:47,539 --> 01:12:52,749
thing so you saw me today go see

01:12:49,939 --> 01:12:54,860
somebody else tomorrow if you're

01:12:52,749 --> 01:12:57,559
interested in learning more about puppet

01:12:54,860 --> 01:13:02,179
i'm doing a one-day tutorial on sunday

01:12:57,559 --> 01:13:05,059
so from nine a.m. to four p.m. i'm going

01:13:02,179 --> 01:13:07,639
to give out the training materials that

01:13:05,059 --> 01:13:09,979
we generally charge a couple grand to

01:13:07,639 --> 01:13:13,760
come to and see and you'll get those for

01:13:09,979 --> 01:13:15,530
free and our training is only a 3-day

01:13:13,760 --> 01:13:18,229
thing like that i teach going to be

01:13:15,530 --> 01:13:21,199
condensing it down into one day but you

01:13:18,229 --> 01:13:24,429
should walk away with two VMS that

01:13:21,199 --> 01:13:28,760
you're able to run like pump it on so

01:13:24,429 --> 01:13:31,179
that's going on on sunday all right like

01:13:28,760 --> 01:13:31,179
thanks everybody

01:13:40,160 --> 01:13:44,120
what about this I can help you like it

01:13:42,110 --> 01:13:47,980
we have the same problem what would have

01:13:44,120 --> 01:13:47,980
become a few haters you gave me I found

01:13:49,920 --> 01:13:54,360
let's put the word out

01:13:52,300 --> 01:13:54,360
you

01:15:02,090 --> 01:15:08,909
as a service leader in cloud computing

01:15:05,400 --> 01:15:10,500
all we do is hosting computing to us the

01:15:08,909 --> 01:15:12,449
cloud is just the next generation of

01:15:10,500 --> 01:15:14,400
hosting and if someone who's been in the

01:15:12,449 --> 01:15:16,440
hosting industry for 12 years we feel

01:15:14,400 --> 01:15:17,520
we're in a unique position to really

01:15:16,440 --> 01:15:19,650
help bring these two worlds together

01:15:17,520 --> 01:15:21,989
these different sets of technologies and

01:15:19,650 --> 01:15:24,300
to help companies embrace this new world

01:15:21,989 --> 01:15:26,310
in this great new tool that allows

01:15:24,300 --> 01:15:28,920
faster innovation not only is it about

01:15:26,310 --> 01:15:33,929
us being responsive and accountable but

01:15:28,920 --> 01:15:37,130
it's about us doing more for you whether

01:15:33,929 --> 01:15:40,679
less nos that works the way that you do

01:15:37,130 --> 01:15:44,480
across all your devices HP Slate and

01:15:40,679 --> 01:15:44,480

YouTube URL: https://www.youtube.com/watch?v=xCVxsb6JVic


