Title: 2012 SouthEast LinuxFest - MySQL Training - Sheeri Cabral - Beyond The ACLs - MySQL Security
Publication date: 2013-08-28
Playlist: 2012 SouthEast LinuxFest - MySQL Training - Advanced
Description: 
	2012 SouthEast LinuxFest
MySQL Training - Advanced
Sheeri Cabral
Beyond The ACLs - MySQL Security
Captions: 
	00:00:00,000 --> 00:00:05,310
the following presentation was recorded

00:00:02,490 --> 00:00:08,040
the 2012 southeast linux fest in

00:00:05,310 --> 00:00:10,410
charlotte north carolina it is licensed

00:00:08,040 --> 00:00:12,090
under a creative commons license for

00:00:10,410 --> 00:00:17,609
more information about the southeast

00:00:12,090 --> 00:00:19,439
linux fest visit w wh linux pc org the

00:00:17,609 --> 00:00:22,320
southeast linux fest we like to thank

00:00:19,439 --> 00:00:24,949
the following diamond sponsors in 2012

00:00:22,320 --> 00:00:28,289
for helping make these videos possible

00:00:24,949 --> 00:00:30,630
without any supper welcome to mysql

00:00:28,289 --> 00:00:32,940
security more than just the ACLS i am

00:00:30,630 --> 00:00:34,440
cherie cabral i'm a senior DBA in the a

00:00:32,940 --> 00:00:38,489
stands for your admin or architects

00:00:34,440 --> 00:00:41,190
depending on the day at Mozilla and you

00:00:38,489 --> 00:00:44,640
know twitter is at syrian blog as cheery

00:00:41,190 --> 00:00:46,320
calm so i want to talk a little bit

00:00:44,640 --> 00:00:48,510
generous security when i say general

00:00:46,320 --> 00:00:51,840
security i mean for any application you

00:00:48,510 --> 00:00:53,820
have this is not specific to mysql if

00:00:51,840 --> 00:00:56,370
you have any kind of software if you

00:00:53,820 --> 00:00:57,899
have a web server if you have you know

00:00:56,370 --> 00:01:00,030
third-party software you're going to

00:00:57,899 --> 00:01:01,410
have to do this you have to patch you

00:01:00,030 --> 00:01:02,670
have to prevent access and you have to

00:01:01,410 --> 00:01:04,920
prevent meaningful and for me

00:01:02,670 --> 00:01:06,990
information gathering now when I say

00:01:04,920 --> 00:01:08,939
patch mysql has a new version every

00:01:06,990 --> 00:01:12,030
month they come out with features and

00:01:08,939 --> 00:01:13,860
bug fixes and security hole fixes now

00:01:12,030 --> 00:01:15,840
you're I'm not going to expect you guys

00:01:13,860 --> 00:01:16,860
to patch every moment close some of

00:01:15,840 --> 00:01:19,189
these doors because it's a little loud

00:01:16,860 --> 00:01:19,189
outside

00:01:22,350 --> 00:01:29,409
just one of them thanks so you know I

00:01:27,280 --> 00:01:30,820
don't expect you to patch my SQL every

00:01:29,409 --> 00:01:32,409
single month that would be a lot of work

00:01:30,820 --> 00:01:34,030
to test it and whatever and most of the

00:01:32,409 --> 00:01:35,640
time you know there aren't they aren't

00:01:34,030 --> 00:01:38,350
security fixes but you should probably

00:01:35,640 --> 00:01:41,680
upgrade every 6 to 12 months one of the

00:01:38,350 --> 00:01:43,720
benefits of this is that if you can take

00:01:41,680 --> 00:01:45,220
your system down for maintenance and

00:01:43,720 --> 00:01:46,690
when I say take your system down I mean

00:01:45,220 --> 00:01:48,729
one system at a time in a rolling

00:01:46,690 --> 00:01:50,409
upgrade kind of way you're practicing

00:01:48,729 --> 00:01:52,119
your fail overs you're practicing for

00:01:50,409 --> 00:01:53,380
your having fire drills so you're

00:01:52,119 --> 00:01:54,789
practicing for the real fire so that

00:01:53,380 --> 00:01:56,200
when something does break and you do

00:01:54,789 --> 00:01:58,240
have to failover you already know how to

00:01:56,200 --> 00:01:59,350
do it you've done it 10 times during the

00:01:58,240 --> 00:02:02,050
day so you can do it at three in the

00:01:59,350 --> 00:02:04,679
morning when something breaks so that's

00:02:02,050 --> 00:02:07,000
a that's that's something useful

00:02:04,679 --> 00:02:08,830
preventing access preventing access

00:02:07,000 --> 00:02:10,840
includes things like permissions and

00:02:08,830 --> 00:02:13,870
acls but it's not limited to that and

00:02:10,840 --> 00:02:15,190
we'll talk about that more and a lot of

00:02:13,870 --> 00:02:16,750
people want to prevent information

00:02:15,190 --> 00:02:18,760
gathering another thing to do is prevent

00:02:16,750 --> 00:02:20,200
meaningful information gathering at some

00:02:18,760 --> 00:02:22,600
point you probably will be hacked right

00:02:20,200 --> 00:02:24,190
it happens looked at LinkedIn right if

00:02:22,600 --> 00:02:26,530
linkedin would have just salted their

00:02:24,190 --> 00:02:28,209
passwords nobody would have had this

00:02:26,530 --> 00:02:29,769
problem right the passwords be salted

00:02:28,209 --> 00:02:31,780
and the password breach that happened a

00:02:29,769 --> 00:02:34,690
couple days ago wouldn't been so bad the

00:02:31,780 --> 00:02:36,579
problem is they didn't so if somebody

00:02:34,690 --> 00:02:38,470
broke in and got the passwords that were

00:02:36,579 --> 00:02:39,579
salted that would have been information

00:02:38,470 --> 00:02:42,130
gathering but it wouldn't have been as

00:02:39,579 --> 00:02:43,780
meaningful as being able to find their

00:02:42,130 --> 00:02:45,820
passwords if you store passwords in the

00:02:43,780 --> 00:02:47,799
clear right that's very meaningful

00:02:45,820 --> 00:02:51,400
information right you don't even have to

00:02:47,799 --> 00:02:53,500
look at a hash table for that so think

00:02:51,400 --> 00:02:55,180
about those kinds of things when we say

00:02:53,500 --> 00:02:57,670
prevent access what kind of access

00:02:55,180 --> 00:02:59,859
network access who has network access to

00:02:57,670 --> 00:03:01,720
it you might say well you know who cares

00:02:59,859 --> 00:03:03,250
it sits on the same so there's a machine

00:03:01,720 --> 00:03:05,320
on the same subnet or the whole world

00:03:03,250 --> 00:03:08,410
can see it what's the big deal well

00:03:05,320 --> 00:03:11,560
MySQL runs using broadcast traffic so

00:03:08,410 --> 00:03:14,320
when there is a TCP packet that comes

00:03:11,560 --> 00:03:15,820
into mysql it's just broadcast which is

00:03:14,320 --> 00:03:16,690
equivalent you probably are also some

00:03:15,820 --> 00:03:18,220
mints here and you know but it's

00:03:16,690 --> 00:03:21,609
equivalent to somebody saying i have

00:03:18,220 --> 00:03:22,260
this query for mysql if you're tcp or

00:03:21,609 --> 00:03:24,659
this

00:03:22,260 --> 00:03:26,220
this if you're 192 168 that one not one

00:03:24,659 --> 00:03:29,610
I have a packet for you or if your

00:03:26,220 --> 00:03:31,439
hostname db1 I have a packet for you and

00:03:29,610 --> 00:03:33,840
then whoever is the right services hope

00:03:31,439 --> 00:03:35,700
that's me let me grab that packet but

00:03:33,840 --> 00:03:36,780
you can actually sniff the network

00:03:35,700 --> 00:03:39,810
traffic and I'll show you how you can

00:03:36,780 --> 00:03:41,879
use TCP dump so if you're on a machine

00:03:39,810 --> 00:03:43,950
you need to be route to use the TCP dump

00:03:41,879 --> 00:03:45,390
but if you're on any other machine on

00:03:43,950 --> 00:03:48,090
the network you can actually sniff

00:03:45,390 --> 00:03:49,079
traffic which is really useful you know

00:03:48,090 --> 00:03:50,909
people will talk about things like

00:03:49,079 --> 00:03:52,079
firewalls and things like that but then

00:03:50,909 --> 00:03:54,540
you start talking about getting into the

00:03:52,079 --> 00:03:56,940
cloud and you realize that hey you have

00:03:54,540 --> 00:03:58,140
no idea who is on your subnet because

00:03:56,940 --> 00:04:00,989
you don't control that anymore you're in

00:03:58,140 --> 00:04:03,329
the cloud who can get direct database

00:04:00,989 --> 00:04:05,220
access I think everyone here knows that

00:04:03,329 --> 00:04:06,780
you know you don't want people to be

00:04:05,220 --> 00:04:08,069
able to directly access the database

00:04:06,780 --> 00:04:09,810
even if they have no username and

00:04:08,069 --> 00:04:11,489
password they might be able to crack one

00:04:09,810 --> 00:04:13,470
or they might just be able to send

00:04:11,489 --> 00:04:15,599
thousands and thousands of TCP

00:04:13,470 --> 00:04:17,609
connections and denial of service attack

00:04:15,599 --> 00:04:20,220
you if they have direct database access

00:04:17,609 --> 00:04:22,289
and due to the nature of databases you

00:04:20,220 --> 00:04:24,000
probably don't need to have database

00:04:22,289 --> 00:04:26,669
access open to the world unless what

00:04:24,000 --> 00:04:28,580
you're providing is database service to

00:04:26,669 --> 00:04:30,840
the world if you just have like a

00:04:28,580 --> 00:04:33,599
database backed application or website

00:04:30,840 --> 00:04:34,830
you don't need to open the database to

00:04:33,599 --> 00:04:37,020
the world you just need to open the

00:04:34,830 --> 00:04:39,060
database the application so i would

00:04:37,020 --> 00:04:41,190
definitely suggest having you know your

00:04:39,060 --> 00:04:43,760
application in a demilitarized zone and

00:04:41,190 --> 00:04:46,710
your database somewhere firewalled off

00:04:43,760 --> 00:04:49,530
the other thing about access is who has

00:04:46,710 --> 00:04:51,300
access to your backups because your

00:04:49,530 --> 00:04:52,710
backups have all your information in it

00:04:51,300 --> 00:04:55,260
that's the whole point right is to store

00:04:52,710 --> 00:04:56,849
a copy of all your information so where

00:04:55,260 --> 00:04:59,550
do your backups go what's the flow of

00:04:56,849 --> 00:05:01,169
the traffic do you have a centralized

00:04:59,550 --> 00:05:03,599
backup server is that something the

00:05:01,169 --> 00:05:06,570
whole world can see how does the traffic

00:05:03,599 --> 00:05:08,849
flow for replication is that is that

00:05:06,570 --> 00:05:12,000
encrypted and we'll talk about encrypted

00:05:08,849 --> 00:05:14,460
connections a little later so access

00:05:12,000 --> 00:05:16,320
points who can actually log in we talked

00:05:14,460 --> 00:05:18,210
about network seeing traffic this URL

00:05:16,320 --> 00:05:20,970
actually well I actually show you the

00:05:18,210 --> 00:05:24,080
actual TCP command a little later but if

00:05:20,970 --> 00:05:26,610
you want the command it's at that URL

00:05:24,080 --> 00:05:28,110
and who can log into the operating

00:05:26,610 --> 00:05:30,090
system if you can log in the operating

00:05:28,110 --> 00:05:31,229
system you might be able to see data or

00:05:30,090 --> 00:05:32,120
logs you might be able to see the

00:05:31,229 --> 00:05:34,639
backups

00:05:32,120 --> 00:05:36,590
this is all really really very important

00:05:34,639 --> 00:05:39,350
to know who who can access this

00:05:36,590 --> 00:05:41,419
information because your logs have all

00:05:39,350 --> 00:05:43,250
your rights so if you're writing

00:05:41,419 --> 00:05:44,690
somebody's past order your writing

00:05:43,250 --> 00:05:46,100
someone's credit card information you're

00:05:44,690 --> 00:05:48,470
writing someone's email to the database

00:05:46,100 --> 00:05:49,910
then its analog somewhere so you might

00:05:48,470 --> 00:05:51,320
say well they can't access the database

00:05:49,910 --> 00:05:52,790
but they might be able to see the logs

00:05:51,320 --> 00:05:54,770
or they might be able to see the backups

00:05:52,790 --> 00:05:59,330
they still then can steal the

00:05:54,770 --> 00:06:01,400
information so this is that TCP dump

00:05:59,330 --> 00:06:03,620
command I was telling you about TCP dump

00:06:01,400 --> 00:06:08,020
dash L dash ie0 or whatever your

00:06:03,620 --> 00:06:10,430
Ethernet port is w sr c or d st port 306

00:06:08,020 --> 00:06:13,039
3306 is the port mysql runs on by

00:06:10,430 --> 00:06:15,229
default pipe into strings and then you

00:06:13,039 --> 00:06:16,880
can grep for select or some I bet you

00:06:15,229 --> 00:06:18,470
can see the traffic running through and

00:06:16,880 --> 00:06:21,440
you could actually get queries it's

00:06:18,470 --> 00:06:22,910
pretty cool now this is on the slide

00:06:21,440 --> 00:06:24,919
called encryption because if you don't

00:06:22,910 --> 00:06:27,289
encrypt your data you can see this so

00:06:24,919 --> 00:06:29,479
you you can actually encrypt your data

00:06:27,289 --> 00:06:30,979
with encrypt your connections with MySQL

00:06:29,479 --> 00:06:32,750
just like HTTPS you can have a

00:06:30,979 --> 00:06:35,510
certificate and it will encrypt your

00:06:32,750 --> 00:06:37,039
data mysql is the same thing now the one

00:06:35,510 --> 00:06:39,410
thing about mysql is that unlike

00:06:37,039 --> 00:06:42,620
something like a web server you can't

00:06:39,410 --> 00:06:46,099
say i want all traffic to be SSL enabled

00:06:42,620 --> 00:06:48,770
you do it per client so per user name

00:06:46,099 --> 00:06:50,660
that connects so by default all

00:06:48,770 --> 00:06:53,960
usernames are allowed to use encrypted

00:06:50,660 --> 00:06:55,220
connections or not so you can always

00:06:53,960 --> 00:06:57,919
connect to mysql with an encrypted

00:06:55,220 --> 00:07:00,410
connection and it will be accepted but

00:06:57,919 --> 00:07:04,220
there are also ways you can require a

00:07:00,410 --> 00:07:06,139
user to connect only using ssl so for

00:07:04,220 --> 00:07:07,250
example if you are worried about if

00:07:06,139 --> 00:07:08,539
you're in the cloud and you have

00:07:07,250 --> 00:07:09,620
replication and you're worried about

00:07:08,539 --> 00:07:12,050
somebody trying to sniff that

00:07:09,620 --> 00:07:14,660
replication traffic you can say the

00:07:12,050 --> 00:07:17,570
replication user is required to connect

00:07:14,660 --> 00:07:18,949
via ssl and in fact when I was a

00:07:17,570 --> 00:07:20,120
consultant we had a company that was in

00:07:18,949 --> 00:07:23,300
the cloud and one of the things that

00:07:20,120 --> 00:07:26,090
they that they did was they had everyone

00:07:23,300 --> 00:07:28,610
who wasn't localhost so anyone who was

00:07:26,090 --> 00:07:31,210
connecting via TCP had to connect via

00:07:28,610 --> 00:07:33,710
ssl except for their monitoring system

00:07:31,210 --> 00:07:35,630
and then because their monitor system

00:07:33,710 --> 00:07:37,729
couldn't actually handle connecting by

00:07:35,630 --> 00:07:39,139
ssl and then everybody else who was

00:07:37,729 --> 00:07:41,090
local to the machine so if you're like

00:07:39,139 --> 00:07:42,650
rude at localhost or something then you

00:07:41,090 --> 00:07:45,500
were able to log in without

00:07:42,650 --> 00:07:48,979
without SSL because you're not doing it

00:07:45,500 --> 00:07:50,479
over the network so it's okay the other

00:07:48,979 --> 00:07:51,500
thing I would recommend is you know if

00:07:50,479 --> 00:07:53,090
you're saying if you want to take that

00:07:51,500 --> 00:07:56,060
even further and say well even localhost

00:07:53,090 --> 00:07:58,370
should connect via ssl I would caution

00:07:56,060 --> 00:07:59,990
you to have a user that doesn't require

00:07:58,370 --> 00:08:01,820
ssl just in case your certificates are

00:07:59,990 --> 00:08:04,190
broken because how are you going to

00:08:01,820 --> 00:08:08,180
debug that if you can't actually log

00:08:04,190 --> 00:08:09,740
into mysql operating system so what are

00:08:08,180 --> 00:08:12,050
some of the operating system security

00:08:09,740 --> 00:08:14,060
things we can talk about well we can

00:08:12,050 --> 00:08:16,130
talk about authentication into the

00:08:14,060 --> 00:08:20,090
operating system right you might say

00:08:16,130 --> 00:08:22,610
well we don't give away the MySQL

00:08:20,090 --> 00:08:25,220
passwords we put it in like a root tilde

00:08:22,610 --> 00:08:28,070
dot my dot CNF and have people sue you

00:08:25,220 --> 00:08:29,419
know sudo to do as root and then they

00:08:28,070 --> 00:08:33,140
don't have to memorize a mysql password

00:08:29,419 --> 00:08:35,209
they just log in as rude but then it's

00:08:33,140 --> 00:08:38,000
only secure as the person's password so

00:08:35,209 --> 00:08:40,940
for example if i log in to shiri at a

00:08:38,000 --> 00:08:44,690
hostname and then i type sudo su to

00:08:40,940 --> 00:08:47,060
become rude then I end up my password

00:08:44,690 --> 00:08:49,160
security my password is only good as my

00:08:47,060 --> 00:08:51,410
password whereas if you're using some

00:08:49,160 --> 00:08:54,440
kind of a root login or something like

00:08:51,410 --> 00:08:56,839
that which is better than not usually

00:08:54,440 --> 00:08:58,550
not recommended to login as root so you

00:08:56,839 --> 00:09:01,760
have to be careful I guess is what I'm

00:08:58,550 --> 00:09:03,050
saying and who you give permissions to

00:09:01,760 --> 00:09:05,260
because you have to think about what

00:09:03,050 --> 00:09:07,130
their authentication is as well

00:09:05,260 --> 00:09:09,050
firewalls I'm not going to talk too much

00:09:07,130 --> 00:09:10,880
about firewalls firewalls are definitely

00:09:09,050 --> 00:09:12,890
important a lot of people say well

00:09:10,880 --> 00:09:15,020
firewall is not a silver bullet sure

00:09:12,890 --> 00:09:16,580
neither is locking your car doors or

00:09:15,020 --> 00:09:18,020
parking lot so you'll be addressed when

00:09:16,580 --> 00:09:21,230
you plug in stuff but you still do it

00:09:18,020 --> 00:09:23,779
right yes and to me and this you very

00:09:21,230 --> 00:09:25,970
bottom line myself with regards to

00:09:23,779 --> 00:09:27,770
freenas is very much like so the company

00:09:25,970 --> 00:09:30,620
where I work for is we have the

00:09:27,770 --> 00:09:32,870
development in 80 us or if you have like

00:09:30,620 --> 00:09:34,459
nine xboxes we're actually document

00:09:32,870 --> 00:09:36,800
that's like being the department of so

00:09:34,459 --> 00:09:38,870
I'm gonna send to email if you for most

00:09:36,800 --> 00:09:40,130
of us drive like Toyota Corollas right

00:09:38,870 --> 00:09:41,959
they're not exciting more as we find

00:09:40,130 --> 00:09:43,820
there's nothing's you don't I do try

00:09:41,959 --> 00:09:45,860
somatic be made if you know these doors

00:09:43,820 --> 00:09:48,020
open someone's get registered so the

00:09:45,860 --> 00:09:49,700
else I'm for days we're always to do is

00:09:48,020 --> 00:09:51,589
make sure our doors locked right so for

00:09:49,700 --> 00:09:54,160
most of this one basic introduction on

00:09:51,589 --> 00:09:56,170
what freenas is what its features are

00:09:54,160 --> 00:09:57,940
a little bit more about history CLG

00:09:56,170 --> 00:09:59,290
what's going on work throughout this and

00:09:57,940 --> 00:10:02,019
there will also be reminded the

00:09:59,290 --> 00:10:04,779
foundation she affects of the square CFS

00:10:02,019 --> 00:10:06,490
there's no longer you can even that sir

00:10:04,779 --> 00:10:08,230
Sir operating system files and

00:10:06,490 --> 00:10:10,600
provisions my name is pretty good at

00:10:08,230 --> 00:10:13,540
doing people doing this regular which we

00:10:10,600 --> 00:10:16,089
all you know 2l whether it's MySQL or

00:10:13,540 --> 00:10:20,139
pro Kona's patched version or Maria db's

00:10:16,089 --> 00:10:23,230
version of MySQL or whatever you use it

00:10:20,139 --> 00:10:25,360
starts mysql it starts a rapper script

00:10:23,230 --> 00:10:27,459
around mysql called mysqld safe it

00:10:25,360 --> 00:10:30,100
starts that as root the reason it starts

00:10:27,459 --> 00:10:32,850
at as root is so it can then spawn the

00:10:30,100 --> 00:10:35,379
mysqld process the mysql demon as the

00:10:32,850 --> 00:10:38,589
mysql server user which is usually

00:10:35,379 --> 00:10:40,750
called MySQL and it does it spawns it

00:10:38,589 --> 00:10:42,639
from the root users so that the mysql

00:10:40,750 --> 00:10:45,089
user inherits everything from the root

00:10:42,639 --> 00:10:47,500
user things like you limits for files

00:10:45,089 --> 00:10:48,730
for open files and things like that so

00:10:47,500 --> 00:10:52,060
you definitely don't want just a

00:10:48,730 --> 00:10:53,889
thousand open files if you have if you

00:10:52,060 --> 00:10:56,620
have mysql because you know if you have

00:10:53,889 --> 00:10:58,240
10 users using a hundred tables that's a

00:10:56,620 --> 00:11:00,189
thousand open files right there and if

00:10:58,240 --> 00:11:03,459
your limits 1024 you're going to run out

00:11:00,189 --> 00:11:05,800
of files open file no open i know it's

00:11:03,459 --> 00:11:08,139
pretty quickly so you want it to be able

00:11:05,800 --> 00:11:10,959
to do that and so MySQL does that really

00:11:08,139 --> 00:11:13,389
well where for security purposes the

00:11:10,959 --> 00:11:15,519
server itself runs as mysql so if

00:11:13,389 --> 00:11:18,370
someone does manage to hack into mysql

00:11:15,519 --> 00:11:20,170
they don't have root on your server the

00:11:18,370 --> 00:11:23,350
mysql server files and logs are also

00:11:20,170 --> 00:11:24,490
pretty locked down as the mysql user so

00:11:23,350 --> 00:11:26,019
that's pretty good if you're not in the

00:11:24,490 --> 00:11:28,569
mysql user group you won't be able to

00:11:26,019 --> 00:11:30,699
see these passwords on command line if

00:11:28,569 --> 00:11:33,579
you you can actually when you log into

00:11:30,699 --> 00:11:36,670
mysql on command line you usually type

00:11:33,579 --> 00:11:39,610
like mysql dash you username Dash P and

00:11:36,670 --> 00:11:41,589
you can either say Dash P and then type

00:11:39,610 --> 00:11:43,389
in your password there's a say enter

00:11:41,589 --> 00:11:44,620
your password and its type in your

00:11:43,389 --> 00:11:46,660
password or you can do it on command

00:11:44,620 --> 00:11:48,790
line if you don't want an interactive

00:11:46,660 --> 00:11:50,350
password so that's not so great you

00:11:48,790 --> 00:11:52,329
might say doing it on command line it's

00:11:50,350 --> 00:11:55,269
stored in your bash history file then or

00:11:52,329 --> 00:11:57,189
whatever your shell history is and then

00:11:55,269 --> 00:11:59,230
also you might say well what happens if

00:11:57,189 --> 00:12:01,180
you do a process list can someone see

00:11:59,230 --> 00:12:03,819
the password and the answer is actually

00:12:01,180 --> 00:12:06,130
know if you type in like MySQL dash you

00:12:03,819 --> 00:12:08,920
she read ash p password

00:12:06,130 --> 00:12:12,340
if you somebody else anyone or you type

00:12:08,920 --> 00:12:15,310
PS what you'll see is MySQL dash you she

00:12:12,340 --> 00:12:16,780
read ash p XX XX so it's pretty cool and

00:12:15,310 --> 00:12:18,790
it's not even it's just the same number

00:12:16,780 --> 00:12:21,010
exes I think it's five it's not even

00:12:18,790 --> 00:12:22,270
like 1x per actual character in the

00:12:21,010 --> 00:12:24,370
password so they don't know how long it

00:12:22,270 --> 00:12:28,060
is and the other thing that I'd

00:12:24,370 --> 00:12:31,180
recommend is have some policies you may

00:12:28,060 --> 00:12:33,520
not always use them or follow them you

00:12:31,180 --> 00:12:35,830
should have policies in a run book so

00:12:33,520 --> 00:12:37,300
that if somebody does if there is a

00:12:35,830 --> 00:12:38,860
breach or something you can say okay

00:12:37,300 --> 00:12:40,330
well this went against the run book or

00:12:38,860 --> 00:12:41,680
this one against the policies you'll

00:12:40,330 --> 00:12:43,060
always have exception somebody's like

00:12:41,680 --> 00:12:44,650
what happens if you need to like make a

00:12:43,060 --> 00:12:46,300
user in an emergency and I'm like well

00:12:44,650 --> 00:12:47,770
that's what emergencies are right you

00:12:46,300 --> 00:12:49,960
don't follow the policies in emergency

00:12:47,770 --> 00:12:52,660
that's why it's an emergency but I do

00:12:49,960 --> 00:12:54,400
recommend having ideas what happens when

00:12:52,660 --> 00:12:56,530
someone leaves the company do you change

00:12:54,400 --> 00:12:58,120
the database passwords when does the

00:12:56,530 --> 00:13:00,670
last time you guys changed your database

00:12:58,120 --> 00:13:02,770
application password probably not since

00:13:00,670 --> 00:13:04,150
the first developer created it right

00:13:02,770 --> 00:13:06,070
maybe you should change it more often

00:13:04,150 --> 00:13:07,960
now I don't know about you but I'm kind

00:13:06,070 --> 00:13:10,900
of a little scared to change the faster

00:13:07,960 --> 00:13:12,280
on my on my application user because you

00:13:10,900 --> 00:13:13,420
know it's not just the application in

00:13:12,280 --> 00:13:15,730
that configuration file there might be

00:13:13,420 --> 00:13:16,960
cron scripts somewhere so it's a little

00:13:15,730 --> 00:13:18,220
tricky of an issue you know it's easy

00:13:16,960 --> 00:13:20,620
for me to stand here and say change

00:13:18,220 --> 00:13:22,540
everything when somebody leaves your DBA

00:13:20,620 --> 00:13:24,550
leaves you should change everything but

00:13:22,540 --> 00:13:28,320
I know it's a lot harder in practice to

00:13:24,550 --> 00:13:32,920
actually do that so authenticating to

00:13:28,320 --> 00:13:34,810
mysql I said this is beyond the ACLS but

00:13:32,920 --> 00:13:38,560
there are acl's in mysql and you can do

00:13:34,810 --> 00:13:41,410
that you want to make sure that that you

00:13:38,560 --> 00:13:43,720
lock down who can authenticate where do

00:13:41,410 --> 00:13:45,160
you have configuration files right

00:13:43,720 --> 00:13:47,020
somehow your application needs to talk

00:13:45,160 --> 00:13:48,430
to your database right and so somehow

00:13:47,020 --> 00:13:50,320
within your application there's a

00:13:48,430 --> 00:13:51,640
configuration file that says here's the

00:13:50,320 --> 00:13:53,910
host here's the username here's the

00:13:51,640 --> 00:13:57,190
password what about encrypting that

00:13:53,910 --> 00:13:58,870
anyone do that right what happens if

00:13:57,190 --> 00:14:00,910
someone breaks in your application they

00:13:58,870 --> 00:14:03,630
find your config file boom they can

00:14:00,910 --> 00:14:03,630
connect your database

00:14:06,890 --> 00:14:10,950
right right or even if they're not in

00:14:09,390 --> 00:14:12,570
your web root or your applications rude

00:14:10,950 --> 00:14:15,660
or whatever if they end up breaking into

00:14:12,570 --> 00:14:18,210
the application itself right like they

00:14:15,660 --> 00:14:19,770
might not be in a patchi's webroot but

00:14:18,210 --> 00:14:21,930
if somebody breaks into the Machine by

00:14:19,770 --> 00:14:23,880
cup by coming through Apache and they

00:14:21,930 --> 00:14:25,320
have root on the machine they can see it

00:14:23,880 --> 00:14:27,540
even if it's not in the web directory

00:14:25,320 --> 00:14:29,100
and in fact usually config files are not

00:14:27,540 --> 00:14:31,290
in the web root so they're not visible

00:14:29,100 --> 00:14:32,820
by the web unless you're using like

00:14:31,290 --> 00:14:34,950
Drupal or something and then they still

00:14:32,820 --> 00:14:36,810
recommend that you bought it so that P

00:14:34,950 --> 00:14:38,190
you can't see it from the web but if

00:14:36,810 --> 00:14:44,610
someone breaks into the web server they

00:14:38,190 --> 00:14:46,530
can still see it that is a good point so

00:14:44,610 --> 00:14:48,450
the point was that doesn't seem like a

00:14:46,530 --> 00:14:50,960
solvable problem right because because

00:14:48,450 --> 00:14:52,800
somehow the application has to read it

00:14:50,960 --> 00:14:57,020
there's actually a company out there

00:14:52,800 --> 00:14:59,880
called Kazan Gaz Zee ang that does

00:14:57,020 --> 00:15:01,740
filesystem encryption with a way with

00:14:59,880 --> 00:15:04,590
ways for things like the application to

00:15:01,740 --> 00:15:05,940
know the key but without storing key in

00:15:04,590 --> 00:15:08,790
the applicant I mean it is one of these

00:15:05,940 --> 00:15:10,650
hard problems they use open-source

00:15:08,790 --> 00:15:12,150
encryption libraries so they're not

00:15:10,650 --> 00:15:14,550
trying to reinvent encryption they're

00:15:12,150 --> 00:15:16,560
just putting stuff on top of it to kind

00:15:14,550 --> 00:15:18,660
of wrap it around and make it as like an

00:15:16,560 --> 00:15:19,950
encrypted file system just like my

00:15:18,660 --> 00:15:21,420
laptop actually has an encrypted file

00:15:19,950 --> 00:15:23,940
system so if someone steals my laptop

00:15:21,420 --> 00:15:26,610
even if they can like guess my password

00:15:23,940 --> 00:15:30,720
to get into it it's going to be an

00:15:26,610 --> 00:15:32,280
encrypted file system the application

00:15:30,720 --> 00:15:34,830
doesn't need the key right there there

00:15:32,280 --> 00:15:36,390
is again it's locks on the door on your

00:15:34,830 --> 00:15:37,830
car doors even though somebody could

00:15:36,390 --> 00:15:39,210
break a window there you can always

00:15:37,830 --> 00:15:43,110
break a window but that doesn't mean you

00:15:39,210 --> 00:15:44,490
shouldn't put the locks in right so you

00:15:43,110 --> 00:15:46,290
know there's there's always a way to do

00:15:44,490 --> 00:15:48,300
it right you talk about like a CLS and

00:15:46,290 --> 00:15:49,530
well but people can spoof hostnames well

00:15:48,300 --> 00:15:51,660
sure they can't but that doesn't mean

00:15:49,530 --> 00:15:52,800
you shouldn't use them you know people

00:15:51,660 --> 00:15:55,440
can break your window that doesn't mean

00:15:52,800 --> 00:15:57,030
you should lock your door and then also

00:15:55,440 --> 00:15:58,860
a securing your your application will

00:15:57,030 --> 00:16:00,240
talk about SQL injection that's one of

00:15:58,860 --> 00:16:01,589
the things that that we're definitely

00:16:00,240 --> 00:16:02,570
going to talk about but it's it's

00:16:01,589 --> 00:16:05,339
certainly something that you know people

00:16:02,570 --> 00:16:07,140
people would say on this slide hey what

00:16:05,339 --> 00:16:08,010
about SQL injection so I'm putting it

00:16:07,140 --> 00:16:11,880
here we're going to talk more about that

00:16:08,010 --> 00:16:13,740
later so who has ax access percona has a

00:16:11,880 --> 00:16:15,570
tool kit called proto toolkit and

00:16:13,740 --> 00:16:17,050
everything in the epicardial toolkit

00:16:15,570 --> 00:16:18,700
starts with P T that's why it's

00:16:17,050 --> 00:16:21,190
there so there's this tool called PT

00:16:18,700 --> 00:16:22,600
show grants it's free and basically what

00:16:21,190 --> 00:16:25,870
it does is it will show you grant

00:16:22,600 --> 00:16:27,399
statements so if you log in as any user

00:16:25,870 --> 00:16:28,450
you can type show grants and it will

00:16:27,399 --> 00:16:30,220
show you the grant statement that you

00:16:28,450 --> 00:16:31,899
can then copy and paste to say another

00:16:30,220 --> 00:16:34,510
machine to give you the same privileges

00:16:31,899 --> 00:16:36,100
on that machine so you know grant all on

00:16:34,510 --> 00:16:39,760
start out star to root at localhost

00:16:36,100 --> 00:16:41,680
identified by you know hash password so

00:16:39,760 --> 00:16:43,779
who has access you can see who has

00:16:41,680 --> 00:16:46,149
access with PT show rants you'll get all

00:16:43,779 --> 00:16:47,170
the grant statements that just shows you

00:16:46,149 --> 00:16:48,850
all the grants so if you have a hundred

00:16:47,170 --> 00:16:50,260
users what are you really looking

00:16:48,850 --> 00:16:51,570
forward to try to secure it if you're

00:16:50,260 --> 00:16:54,730
not going through every single one

00:16:51,570 --> 00:16:56,019
painstakingly well I have to to queries

00:16:54,730 --> 00:16:57,970
here there's three bullet points but

00:16:56,019 --> 00:17:00,430
it's select user host password SSL type

00:16:57,970 --> 00:17:01,959
from my SQL user the first where clause

00:17:00,430 --> 00:17:04,780
that I would recommend doing is we're

00:17:01,959 --> 00:17:06,520
super pre vehicles why now we're super

00:17:04,780 --> 00:17:09,160
pre vehicles why is very important why

00:17:06,520 --> 00:17:11,170
because the super privilege it's not

00:17:09,160 --> 00:17:12,760
just oh well they can read and write and

00:17:11,170 --> 00:17:14,890
do everything what the super privilege

00:17:12,760 --> 00:17:18,100
gives you on top of all that kind of

00:17:14,890 --> 00:17:20,199
stuff is well you have the ability to

00:17:18,100 --> 00:17:22,600
shut down MySQL with the mysqladmin

00:17:20,199 --> 00:17:24,490
shutdown command so you don't just want

00:17:22,600 --> 00:17:26,919
like someone who can say break into your

00:17:24,490 --> 00:17:28,540
application to have super privileges

00:17:26,919 --> 00:17:30,100
whoever has a super privileged to be a

00:17:28,540 --> 00:17:32,679
very limited set of users and should

00:17:30,100 --> 00:17:34,840
only be your dbas I would actually go so

00:17:32,679 --> 00:17:37,090
far as to say your application users

00:17:34,840 --> 00:17:39,340
should definitely be able to like insert

00:17:37,090 --> 00:17:41,200
and delete and read you know read and

00:17:39,340 --> 00:17:43,840
write but should they be able to create

00:17:41,200 --> 00:17:45,280
a database or drop a database probably

00:17:43,840 --> 00:17:47,050
not how often in your application are

00:17:45,280 --> 00:17:48,429
you creating a database you might even

00:17:47,050 --> 00:17:51,580
say well they shouldn't be able to do

00:17:48,429 --> 00:17:53,230
any creates or drops tables right

00:17:51,580 --> 00:17:55,450
because aren't they only using tables

00:17:53,230 --> 00:17:57,100
some people might say okay they can

00:17:55,450 --> 00:17:58,330
create only temporary tables because

00:17:57,100 --> 00:18:00,880
they might need to create a temporary

00:17:58,330 --> 00:18:02,890
table but I would say start with the

00:18:00,880 --> 00:18:04,690
with the most limited access and then if

00:18:02,890 --> 00:18:06,220
you need to open it up do that so we're

00:18:04,690 --> 00:18:09,309
super privileged equals y so not just

00:18:06,220 --> 00:18:10,660
shut down that's that's the least

00:18:09,309 --> 00:18:13,780
innocuous of the things they can do a

00:18:10,660 --> 00:18:16,450
super privilege there's a flag in MySQL

00:18:13,780 --> 00:18:18,460
called read underscore only and the idea

00:18:16,450 --> 00:18:20,080
is if you have like a master and a slave

00:18:18,460 --> 00:18:21,970
and you want to reads to come from the

00:18:20,080 --> 00:18:25,690
slave you can set the slave to be read

00:18:21,970 --> 00:18:28,720
only as yes so that nobody can write to

00:18:25,690 --> 00:18:29,630
it now with the super privilege you can

00:18:28,720 --> 00:18:31,370
write to it

00:18:29,630 --> 00:18:33,710
and there's no warnings there's nothing

00:18:31,370 --> 00:18:37,340
it's silent you would have no idea if

00:18:33,710 --> 00:18:39,010
you login is like the super user or user

00:18:37,340 --> 00:18:42,950
with the super privilege I should say

00:18:39,010 --> 00:18:44,240
then you can write or write to a

00:18:42,950 --> 00:18:45,350
database that's a read-only and you

00:18:44,240 --> 00:18:47,780
don't even get a warning that says hey

00:18:45,350 --> 00:18:50,510
by the way you're writing to a read-only

00:18:47,780 --> 00:18:51,950
database if you are not a super user and

00:18:50,510 --> 00:18:54,140
you try to write to a read-only database

00:18:51,950 --> 00:18:55,970
you will get an error but this is

00:18:54,140 --> 00:18:57,230
another thing that's bad that you could

00:18:55,970 --> 00:18:59,990
do if you have the super village and you

00:18:57,230 --> 00:19:02,840
might not even realize it there's but

00:18:59,990 --> 00:19:04,720
wait there's more if if you reach max

00:19:02,840 --> 00:19:06,950
connections so there's a there's a

00:19:04,720 --> 00:19:08,420
variable MySQL called max connections

00:19:06,950 --> 00:19:10,880
and after you reach this many

00:19:08,420 --> 00:19:13,070
connections you can't do more now why is

00:19:10,880 --> 00:19:15,980
this in place well every connection can

00:19:13,070 --> 00:19:17,780
use memory and there are some per thread

00:19:15,980 --> 00:19:20,990
memory Buffon's per connection memory

00:19:17,780 --> 00:19:22,400
buffers and what that what the reason

00:19:20,990 --> 00:19:25,220
they have max connections is so that if

00:19:22,400 --> 00:19:27,320
you have a million threads each using a

00:19:25,220 --> 00:19:29,180
gig of memory you won't crash MySQL

00:19:27,320 --> 00:19:31,400
because if my scale tries to allocate

00:19:29,180 --> 00:19:33,890
more memory than exists it'll crash so

00:19:31,400 --> 00:19:35,000
the idea is not to crash MySQL the

00:19:33,890 --> 00:19:37,340
problem is it's really hard to calculate

00:19:35,000 --> 00:19:39,590
what the best amount of max memory is

00:19:37,340 --> 00:19:40,730
because it's very unlikely that all of

00:19:39,590 --> 00:19:42,200
your threads that are connected are

00:19:40,730 --> 00:19:44,750
going to be using the maximum possible

00:19:42,200 --> 00:19:46,130
per thread buffers that they can get

00:19:44,750 --> 00:19:47,690
because there's more than one per thread

00:19:46,130 --> 00:19:49,310
buffer so it's really hard to calculate

00:19:47,690 --> 00:19:51,260
it because if you just calculate it so

00:19:49,310 --> 00:19:53,170
that no matter what my skill would never

00:19:51,260 --> 00:19:57,020
crash you'd have like five connections

00:19:53,170 --> 00:20:01,190
the default is I think 151 which is one

00:19:57,020 --> 00:20:04,280
more than Apaches default of 150 of max

00:20:01,190 --> 00:20:06,170
web clients they actually changed it

00:20:04,280 --> 00:20:08,300
used to be 100 and they changed 150 and

00:20:06,170 --> 00:20:09,590
I'm like what's the point like you you

00:20:08,300 --> 00:20:11,870
want to change like two thousand or so

00:20:09,590 --> 00:20:14,000
meaner usually in heavy applications you

00:20:11,870 --> 00:20:15,230
want to change it to to be higher so I'm

00:20:14,000 --> 00:20:18,530
like why'd you bother changing the

00:20:15,230 --> 00:20:20,990
default from like low too low and it was

00:20:18,530 --> 00:20:22,790
because everybody who was ever running a

00:20:20,990 --> 00:20:27,470
website was getting was running good

00:20:22,790 --> 00:20:28,970
Sarah now if you reach max connection so

00:20:27,470 --> 00:20:30,590
let's say you hit let's say you set max

00:20:28,970 --> 00:20:33,320
connection to 2000 and you hit max

00:20:30,590 --> 00:20:35,750
connections you actually have one more

00:20:33,320 --> 00:20:37,670
connection that only some of the super

00:20:35,750 --> 00:20:40,010
privileged can use because imagine you

00:20:37,670 --> 00:20:41,480
have queries going haywire right you

00:20:40,010 --> 00:20:42,940
don't want to have to shut down MySQL

00:20:41,480 --> 00:20:44,590
just to start it up again and have more

00:20:42,940 --> 00:20:46,540
queries going haywire it's an endless

00:20:44,590 --> 00:20:47,710
loop you want to be able to log in

00:20:46,540 --> 00:20:49,570
figure out what's going on whatever

00:20:47,710 --> 00:20:52,900
mysql gives you that with the super

00:20:49,570 --> 00:20:54,370
privilege so make sure that the only

00:20:52,900 --> 00:20:56,320
people who have the super privilege of

00:20:54,370 --> 00:20:58,000
the people who actually need it because

00:20:56,320 --> 00:20:59,830
they can do a lot of things they can

00:20:58,000 --> 00:21:01,840
shut down mysql they can write to a

00:20:59,830 --> 00:21:03,850
read-only database they can connect with

00:21:01,840 --> 00:21:07,000
max connections they can do that now a

00:21:03,850 --> 00:21:09,490
note here on super privilege when mysql

00:21:07,000 --> 00:21:12,430
starts up when you first install mysql

00:21:09,490 --> 00:21:13,750
it does in fact give you root users it

00:21:12,430 --> 00:21:17,140
gives you root at localhost if you use

00:21:13,750 --> 00:21:18,280
55 which is the current ga it's been GA

00:21:17,140 --> 00:21:22,600
for like a year and a half it does give

00:21:18,280 --> 00:21:23,890
you ipv6 addresses if you if you when

00:21:22,600 --> 00:21:26,650
you start it up it does give you a root

00:21:23,890 --> 00:21:28,600
user the user name is named route but

00:21:26,650 --> 00:21:30,400
there's nothing special about that you

00:21:28,600 --> 00:21:31,900
can drop that user there's no

00:21:30,400 --> 00:21:33,250
consequences you probably want to make

00:21:31,900 --> 00:21:35,470
sure you have at least one user that has

00:21:33,250 --> 00:21:37,900
a super privilege but if you really want

00:21:35,470 --> 00:21:40,840
to create a user called super or share

00:21:37,900 --> 00:21:42,400
your DBA or whatever you want you can

00:21:40,840 --> 00:21:45,070
drop the root user and there's no

00:21:42,400 --> 00:21:47,080
problems with it if they have the super

00:21:45,070 --> 00:21:50,440
privilege if you do grant all on start

00:21:47,080 --> 00:21:52,030
out star to a user it's the same as root

00:21:50,440 --> 00:21:54,190
so there's there's nothing special about

00:21:52,030 --> 00:21:56,410
the name route now I talked about when

00:21:54,190 --> 00:21:58,420
mysql when you first install mysql it

00:21:56,410 --> 00:21:59,890
gives you you know root at localhost it

00:21:58,420 --> 00:22:02,560
also gives you what's called the

00:21:59,890 --> 00:22:04,060
anonymous user and what that is is where

00:22:02,560 --> 00:22:05,830
user equals blank you can see the last

00:22:04,060 --> 00:22:08,890
one so user host password ssl type for

00:22:05,830 --> 00:22:11,050
mysql user where user equals blank now

00:22:08,890 --> 00:22:12,490
by default all of the passwords in mysql

00:22:11,050 --> 00:22:14,680
are empty which means you can connect

00:22:12,490 --> 00:22:16,510
from root @ localhost with no password

00:22:14,680 --> 00:22:19,510
that's nice you should probably change

00:22:16,510 --> 00:22:21,100
that for security purposes but you know

00:22:19,510 --> 00:22:22,330
for security purposes it's a whole lot

00:22:21,100 --> 00:22:24,670
better than just having something like

00:22:22,330 --> 00:22:26,350
oh the password by default is admin I

00:22:24,670 --> 00:22:27,790
mean it doesn't matter what your default

00:22:26,350 --> 00:22:29,500
password is because everyone's going to

00:22:27,790 --> 00:22:31,690
know it you know every hacker there's

00:22:29,500 --> 00:22:33,370
going to know it anyway so I guess they

00:22:31,690 --> 00:22:35,290
decided just leave it blank because you

00:22:33,370 --> 00:22:36,910
know then you know that you look at it

00:22:35,290 --> 00:22:38,680
you could see where you can even do

00:22:36,910 --> 00:22:40,750
where password equals blank and see that

00:22:38,680 --> 00:22:42,280
it would be very easy to see that as

00:22:40,750 --> 00:22:44,020
opposed to if you see a hashed password

00:22:42,280 --> 00:22:46,030
you might not realize oh it's the

00:22:44,020 --> 00:22:48,580
default admin password as opposed to

00:22:46,030 --> 00:22:50,080
something else so where user was blank

00:22:48,580 --> 00:22:52,150
well that doesn't mean the username is

00:22:50,080 --> 00:22:54,370
the empty string it means the user name

00:22:52,150 --> 00:22:54,980
is anything so you can connect as say

00:22:54,370 --> 00:22:57,890
the

00:22:54,980 --> 00:23:00,950
shiri or these are John or the user

00:22:57,890 --> 00:23:03,200
Kumar doesn't matter whoever you connect

00:23:00,950 --> 00:23:07,400
as with that password you can do that

00:23:03,200 --> 00:23:10,450
now by default the user the blank user

00:23:07,400 --> 00:23:13,910
the anonymous user has what i will call

00:23:10,450 --> 00:23:15,710
quote-unquote no privileges and when I

00:23:13,910 --> 00:23:19,040
say no privileges if you did a show

00:23:15,710 --> 00:23:20,299
grants it would say grant usage on start

00:23:19,040 --> 00:23:21,890
out star so you and said well that's

00:23:20,299 --> 00:23:25,280
just usage they can log in and that's it

00:23:21,890 --> 00:23:26,780
or grant usage on a database they can't

00:23:25,280 --> 00:23:28,549
really they can't read any tables they

00:23:26,780 --> 00:23:31,610
can't write any tables what could they

00:23:28,549 --> 00:23:33,020
do hold that question we'll go back to

00:23:31,610 --> 00:23:34,820
it later because they can do stuff but

00:23:33,020 --> 00:23:36,620
for now I'll just say there are quote

00:23:34,820 --> 00:23:39,470
unquote no permissions that that user

00:23:36,620 --> 00:23:41,030
has other than by the way being able to

00:23:39,470 --> 00:23:43,130
log into mysql and taking up one of your

00:23:41,030 --> 00:23:45,169
TCP connections do you guys know how

00:23:43,130 --> 00:23:49,990
many TCP connections Linux allows you by

00:23:45,169 --> 00:23:49,990
default anyone want to take a guess

00:23:51,010 --> 00:24:01,010
12,000 decent 4,000 it's higher higher

00:23:57,080 --> 00:24:02,330
than that it's 10,000 240 which now that

00:24:01,010 --> 00:24:05,480
I say that number that makes sense right

00:24:02,330 --> 00:24:07,010
it's a 1024 x 10 by default linux gives

00:24:05,480 --> 00:24:08,419
you ten thousand two hundred forty a TCP

00:24:07,010 --> 00:24:11,360
connections and i know this because i

00:24:08,419 --> 00:24:12,830
was testing out a mysql solution for

00:24:11,360 --> 00:24:13,850
people who are like okay let the load

00:24:12,830 --> 00:24:15,350
test this baby we're going to have

00:24:13,850 --> 00:24:17,480
millions of simultaneous connections

00:24:15,350 --> 00:24:19,070
let's do it and every time we got to

00:24:17,480 --> 00:24:21,020
about 10,000 connections mysql would

00:24:19,070 --> 00:24:22,460
break and i'm like mo max connection

00:24:21,020 --> 00:24:24,860
sets like a hundred thousand so it's not

00:24:22,460 --> 00:24:26,720
max connections and as we figured out it

00:24:24,860 --> 00:24:29,780
was the tcp current the colonel was only

00:24:26,720 --> 00:24:31,809
allowing 10,000 240 tcp connections so

00:24:29,780 --> 00:24:34,460
someone can denial of service attack you

00:24:31,809 --> 00:24:36,620
even with an anonymous user if they're

00:24:34,460 --> 00:24:37,880
allowed from anywhere right if they can

00:24:36,620 --> 00:24:39,559
they can take one of those TCP

00:24:37,880 --> 00:24:40,490
connections all you need is about 10,000

00:24:39,559 --> 00:24:43,040
of those if you haven't changed your

00:24:40,490 --> 00:24:44,630
kernel and people can go off service

00:24:43,040 --> 00:24:46,100
attack you so that's another reason to

00:24:44,630 --> 00:24:48,500
have your database behind a firewall is

00:24:46,100 --> 00:24:51,679
just just that basic denial of service

00:24:48,500 --> 00:24:54,290
attack anyone can do it with with load

00:24:51,679 --> 00:24:55,700
testing software I know if we had more

00:24:54,290 --> 00:24:56,990
people that use load testing software

00:24:55,700 --> 00:24:59,059
though the world would be a better place

00:24:56,990 --> 00:25:02,270
not the hacking part but the the actual

00:24:59,059 --> 00:25:04,429
load testing so why do I say use your

00:25:02,270 --> 00:25:07,040
host password ssl type for mysql user i

00:25:04,429 --> 00:25:08,029
didn't explain that user and host is

00:25:07,040 --> 00:25:10,580
what makes a you

00:25:08,029 --> 00:25:12,229
eek user in mysql this is very important

00:25:10,580 --> 00:25:14,929
because that means that she relocates

00:25:12,229 --> 00:25:16,669
and shiri at 127 02 02 on are

00:25:14,929 --> 00:25:18,619
technically different users they can

00:25:16,669 --> 00:25:21,499
have different passwords you can give

00:25:18,619 --> 00:25:23,239
them different permissions I wouldn't

00:25:21,499 --> 00:25:25,309
recommend doing that in fact I just ran

00:25:23,239 --> 00:25:28,429
into a problem at Mozilla we move data

00:25:25,309 --> 00:25:30,859
centers and I had a problem where I was

00:25:28,429 --> 00:25:33,289
copying some users and so you know copy

00:25:30,859 --> 00:25:35,539
the user and I had apparently copied the

00:25:33,289 --> 00:25:37,190
wrong password because I had copied the

00:25:35,539 --> 00:25:39,169
user that was from the old data center

00:25:37,190 --> 00:25:40,609
and I put it in the new one but I didn't

00:25:39,169 --> 00:25:42,799
realize that we had a third data center

00:25:40,609 --> 00:25:44,450
they were using a user from that data

00:25:42,799 --> 00:25:46,700
center so when they moved everything

00:25:44,450 --> 00:25:48,950
over to the new data center things

00:25:46,700 --> 00:25:50,389
didn't work because the old password

00:25:48,950 --> 00:25:52,099
different now what happened was they

00:25:50,389 --> 00:25:53,779
changed the password they've changed it

00:25:52,099 --> 00:25:55,399
in the new data center only not the old

00:25:53,779 --> 00:25:57,169
data center but nobody was using the

00:25:55,399 --> 00:25:59,539
database in the old data center so

00:25:57,169 --> 00:26:01,580
nobody thought to drop the user so I

00:25:59,539 --> 00:26:03,200
there was actually a user with the same

00:26:01,580 --> 00:26:06,349
permissions but two different passwords

00:26:03,200 --> 00:26:08,119
because the host was different so it's

00:26:06,349 --> 00:26:09,559
just something to note that you can kind

00:26:08,119 --> 00:26:10,820
of screw yourself over if you do that

00:26:09,559 --> 00:26:13,070
make sure when you have the same

00:26:10,820 --> 00:26:14,749
username you know whether it's shiri or

00:26:13,070 --> 00:26:16,489
nagios or something like that or the

00:26:14,749 --> 00:26:17,629
application user make sure they have the

00:26:16,489 --> 00:26:19,580
same password and that's one of the

00:26:17,629 --> 00:26:22,399
reasons to see select user host password

00:26:19,580 --> 00:26:25,820
you can make sure that the same users

00:26:22,399 --> 00:26:27,649
have the same password hashes by the way

00:26:25,820 --> 00:26:30,169
mysql does not salt their password

00:26:27,649 --> 00:26:32,659
hashes it does salt when it's

00:26:30,169 --> 00:26:34,820
authenticating so it does send a salted

00:26:32,659 --> 00:26:36,710
hashman its authenticating but stored in

00:26:34,820 --> 00:26:40,849
the database it's not a hashed it's not

00:26:36,710 --> 00:26:43,489
a salted hash so let's see an ssl type

00:26:40,849 --> 00:26:45,339
if ssl type is blank it means that ssl

00:26:43,489 --> 00:26:48,229
is not required but you can use it

00:26:45,339 --> 00:26:50,029
there's also i think require which may

00:26:48,229 --> 00:26:52,729
or it might be yes i forget what the

00:26:50,029 --> 00:26:54,919
exact string is but there's if it's

00:26:52,729 --> 00:26:56,599
required to use ssl you can see that too

00:26:54,919 --> 00:26:57,889
so if you wanted to check like hey is

00:26:56,599 --> 00:27:00,440
everyone using as a cell it's not

00:26:57,889 --> 00:27:03,469
localhost you can write a query that on

00:27:00,440 --> 00:27:04,639
the other reason to show password if you

00:27:03,469 --> 00:27:07,969
want to do something like select user

00:27:04,639 --> 00:27:10,129
host password for a mysql user and show

00:27:07,969 --> 00:27:12,080
all the users you can see if people have

00:27:10,129 --> 00:27:13,399
the same password hash so someone's

00:27:12,080 --> 00:27:16,339
using the same password for all the

00:27:13,399 --> 00:27:18,349
users kind of defeats purpose now where

00:27:16,339 --> 00:27:20,770
is the access from i talked about user

00:27:18,349 --> 00:27:25,900
at host being

00:27:20,770 --> 00:27:29,650
being a unique so MySQL uses in the host

00:27:25,900 --> 00:27:33,820
it uses SQL wild cards which is percent

00:27:29,650 --> 00:27:36,400
for a multi multi character wild card or

00:27:33,820 --> 00:27:43,960
underscore for a one card wild card so

00:27:36,400 --> 00:27:49,080
hey hello did the lamp just died yeah

00:27:43,960 --> 00:28:03,100
the whole thing died they went to sleep

00:27:49,080 --> 00:28:04,360
but I'm doing things thank you so I'll

00:28:03,100 --> 00:28:06,970
just talk about it so the first one

00:28:04,360 --> 00:28:08,560
point was the % % means you know if you

00:28:06,970 --> 00:28:11,340
have she react percent that means from

00:28:08,560 --> 00:28:13,900
any host that can reach it it's allowed

00:28:11,340 --> 00:28:17,010
if you had the next bullet point was %

00:28:13,900 --> 00:28:19,390
up company com so like say % mozilla com

00:28:17,010 --> 00:28:21,190
right that means that anyone coming from

00:28:19,390 --> 00:28:23,080
that host name now host names could be

00:28:21,190 --> 00:28:24,700
spoofed right but that doesn't mean you

00:28:23,080 --> 00:28:26,920
shouldn't put the lock on but you might

00:28:24,700 --> 00:28:29,170
not want to you might now want to put

00:28:26,920 --> 00:28:31,450
host names you might want to put IP

00:28:29,170 --> 00:28:34,210
addresses those are harder to spoof 10

00:28:31,450 --> 00:28:36,250
dot 0 dot percent or 192 168 dot percent

00:28:34,210 --> 00:28:38,350
when we were when I was doing that

00:28:36,250 --> 00:28:41,350
consulting with the folks in the cloud

00:28:38,350 --> 00:28:43,180
they had to use ten percent because they

00:28:41,350 --> 00:28:45,340
didn't know if one of their application

00:28:43,180 --> 00:28:46,390
service would be restarted they don't

00:28:45,340 --> 00:28:48,220
know what IP address they were going to

00:28:46,390 --> 00:28:50,770
get but they did know that it would be

00:28:48,220 --> 00:28:53,350
some time sometimes some place in the a

00:28:50,770 --> 00:28:56,170
class of 10 that's what they knew that's

00:28:53,350 --> 00:28:58,540
the the best they could get it so what

00:28:56,170 --> 00:29:00,700
can you do so 10 dot 0 dot percent

00:28:58,540 --> 00:29:02,470
usually within your company you can do

00:29:00,700 --> 00:29:04,060
something like we we actually have a

00:29:02,470 --> 00:29:05,380
load balancer for our database stuff so

00:29:04,060 --> 00:29:07,990
we allow things from the load balancer

00:29:05,380 --> 00:29:10,090
so it's like you know 10 dot eight dot

00:29:07,990 --> 00:29:12,580
seventy percent or ten nine eight dot

00:29:10,090 --> 00:29:15,910
seventy dot 20 underscore so it could be

00:29:12,580 --> 00:29:18,430
200 to a1 to a2 to a3 because it's

00:29:15,910 --> 00:29:19,870
underscores a one card wild card one of

00:29:18,430 --> 00:29:21,250
the interesting things about mysql is

00:29:19,870 --> 00:29:22,960
that there's actually a five-way

00:29:21,250 --> 00:29:26,590
handshake for authentication it's it's

00:29:22,960 --> 00:29:30,370
actually kind of cool so when if you if

00:29:26,590 --> 00:29:32,650
you try to connect to mysql with a

00:29:30,370 --> 00:29:33,600
username and password the first thing it

00:29:32,650 --> 00:29:36,270
does is it

00:29:33,600 --> 00:29:38,520
checks your host and it says could this

00:29:36,270 --> 00:29:40,980
aw there we go could this host at all

00:29:38,520 --> 00:29:42,090
connect to me I don't care what your

00:29:40,980 --> 00:29:44,490
name is I don't care what's your

00:29:42,090 --> 00:29:46,799
password is do I even allow you from

00:29:44,490 --> 00:29:48,270
this whole anyone from this host to to

00:29:46,799 --> 00:29:50,700
to do that and in fact if you try to

00:29:48,270 --> 00:29:52,470
telnet to report from a host that's not

00:29:50,700 --> 00:29:54,960
allowed you can't even tell him it to

00:29:52,470 --> 00:29:56,669
the poor mysql won't even let that won't

00:29:54,960 --> 00:29:58,559
even let that happen which i found out

00:29:56,669 --> 00:30:00,630
the hard way an apology to my network

00:29:58,559 --> 00:30:01,980
and guys I was like it's the firewalls

00:30:00,630 --> 00:30:04,080
not open I can't tell that and they're

00:30:01,980 --> 00:30:07,260
like well I can knit cat to it so maybe

00:30:04,080 --> 00:30:09,840
it's you and it was so another reason to

00:30:07,260 --> 00:30:11,010
not allow from percent is that people

00:30:09,840 --> 00:30:14,909
could just tell that to your port and

00:30:11,010 --> 00:30:16,140
again using apogee CP connection but if

00:30:14,909 --> 00:30:18,210
you get something that says host is not

00:30:16,140 --> 00:30:20,700
allowed to connect it's because there's

00:30:18,210 --> 00:30:24,090
no host that would match any of the host

00:30:20,700 --> 00:30:25,799
definitions so I said I would not talk

00:30:24,090 --> 00:30:27,929
too much about acl's but this is what

00:30:25,799 --> 00:30:29,700
this is what the grant statement looks

00:30:27,929 --> 00:30:31,530
like so grant privilege type and you can

00:30:29,700 --> 00:30:33,059
also do on a column lists so I'm kind of

00:30:31,530 --> 00:30:34,980
showing you here it's not just like

00:30:33,059 --> 00:30:37,260
grant all on star dot star or grant all

00:30:34,980 --> 00:30:40,730
on database name dot star you can

00:30:37,260 --> 00:30:44,130
actually be pretty powerful with mysql

00:30:40,730 --> 00:30:45,510
ACLs here so you can grant privilege

00:30:44,130 --> 00:30:47,669
types on a certain column lists you can

00:30:45,510 --> 00:30:49,140
say you know they can read all the

00:30:47,669 --> 00:30:51,179
columns but not like the credit card

00:30:49,140 --> 00:30:52,890
once they can read the name you can say

00:30:51,179 --> 00:30:55,799
grant select on name email address

00:30:52,890 --> 00:30:57,299
whatever but you don't do anything you

00:30:55,799 --> 00:30:59,250
could say on object types so it could be

00:30:57,299 --> 00:31:02,640
on a table name can be on a database

00:30:59,250 --> 00:31:04,470
name here mysql uses star for wild cards

00:31:02,640 --> 00:31:07,230
or just kind of annoying but there you

00:31:04,470 --> 00:31:09,600
go so you can say grant all on a routine

00:31:07,230 --> 00:31:11,429
name you can use routines store

00:31:09,600 --> 00:31:13,740
procedures or store functions to allow

00:31:11,429 --> 00:31:16,530
people to do things they wouldn't

00:31:13,740 --> 00:31:18,480
normally be able to do for example you

00:31:16,530 --> 00:31:20,909
could say well they're allowed to read

00:31:18,480 --> 00:31:23,340
only and they're allowed to execute some

00:31:20,909 --> 00:31:24,900
stored procedures and then those stored

00:31:23,340 --> 00:31:27,390
procedures are allowed to say right to

00:31:24,900 --> 00:31:30,179
certain places so using store procedures

00:31:27,390 --> 00:31:32,190
away security-wise to give people access

00:31:30,179 --> 00:31:34,559
they wouldn't ordinarily have otherwise

00:31:32,190 --> 00:31:36,510
so you're not giving them access to

00:31:34,559 --> 00:31:38,880
write to the underlying table your give

00:31:36,510 --> 00:31:39,990
them access to use a particular stored

00:31:38,880 --> 00:31:42,240
procedure that does something in

00:31:39,990 --> 00:31:44,330
particular which can be a lot safer in

00:31:42,240 --> 00:31:47,730
some ways

00:31:44,330 --> 00:31:50,730
excuse me sorry about blowing out the

00:31:47,730 --> 00:31:52,590
levels there on the mic so you grant all

00:31:50,730 --> 00:31:54,870
these things on the object whether it's

00:31:52,590 --> 00:31:56,730
the database or table name or both to a

00:31:54,870 --> 00:31:58,590
user and that's a username at a host

00:31:56,730 --> 00:32:00,900
which you just talked about identified

00:31:58,590 --> 00:32:03,750
by and you can either give the password

00:32:00,900 --> 00:32:05,100
in plain text or as a hash so if you or

00:32:03,750 --> 00:32:06,840
if you're copying a grant it would

00:32:05,100 --> 00:32:10,950
already be hashed for you but if you're

00:32:06,840 --> 00:32:12,600
saying identified by quote password then

00:32:10,950 --> 00:32:15,080
you don't use the password key word

00:32:12,600 --> 00:32:18,210
that's why this this password here is

00:32:15,080 --> 00:32:20,370
optional and then by default you can see

00:32:18,210 --> 00:32:22,410
this says none by default this is SSL

00:32:20,370 --> 00:32:24,090
there's no there's no ssl required you

00:32:22,410 --> 00:32:26,970
can require ssl or you can require

00:32:24,090 --> 00:32:28,590
specifically x509 so one of the things

00:32:26,970 --> 00:32:32,430
that's interesting about mysql is that

00:32:28,590 --> 00:32:33,960
you can use ssl certificates but there's

00:32:32,430 --> 00:32:36,210
a whole bunch of different levels you

00:32:33,960 --> 00:32:37,710
can observe difficulty news you can say

00:32:36,210 --> 00:32:39,990
you know what this user has to use

00:32:37,710 --> 00:32:41,970
encryption I don't care if the

00:32:39,990 --> 00:32:43,440
certificate they used is expired I don't

00:32:41,970 --> 00:32:46,170
care they just have to use encryption

00:32:43,440 --> 00:32:48,780
right this isn't like do you trust that

00:32:46,170 --> 00:32:51,870
this is your bank's website on an Apache

00:32:48,780 --> 00:32:54,000
web certificate it's not about like SSL

00:32:51,870 --> 00:32:55,470
in that way it's about encryption so you

00:32:54,000 --> 00:32:57,840
can actually just say I don't care and

00:32:55,470 --> 00:33:00,930
that's require ssl you can say require

00:32:57,840 --> 00:33:03,360
x509 have an x.509 certificate oops you

00:33:00,930 --> 00:33:05,460
can require a specific cipher you can

00:33:03,360 --> 00:33:07,110
require a specific issuer so you can say

00:33:05,460 --> 00:33:09,960
okay this has to be signed by this

00:33:07,110 --> 00:33:12,440
certificate authority so you can

00:33:09,960 --> 00:33:15,030
actually you can actually give your dbas

00:33:12,440 --> 00:33:16,200
secure connections and then if they

00:33:15,030 --> 00:33:18,420
leave the company take away their

00:33:16,200 --> 00:33:19,890
certificate and now they can't login to

00:33:18,420 --> 00:33:21,570
the database anymore now hopefully they

00:33:19,890 --> 00:33:23,280
won't be able to get to log into your

00:33:21,570 --> 00:33:24,510
database because they're not allowed to

00:33:23,280 --> 00:33:26,940
log into your jump host or whatever

00:33:24,510 --> 00:33:29,580
anymore but this is just basically how

00:33:26,940 --> 00:33:31,770
easy it is to I mean you still to make

00:33:29,580 --> 00:33:33,750
their certificates and whatnot but this

00:33:31,770 --> 00:33:35,580
is exactly how easy it is to make a user

00:33:33,750 --> 00:33:40,110
be secure and you can do this with the

00:33:35,580 --> 00:33:41,670
replication user too so other ACLs what

00:33:40,110 --> 00:33:43,230
about object access we talked a little

00:33:41,670 --> 00:33:47,100
bit about stored procedure astore drew

00:33:43,230 --> 00:33:50,160
teens access we talked about password

00:33:47,100 --> 00:33:51,330
policies as well so I talked about

00:33:50,160 --> 00:33:52,680
stored procedures and functions the

00:33:51,330 --> 00:33:54,960
other thing I didn't talk about yet was

00:33:52,680 --> 00:33:56,880
views so you can actually use a view

00:33:54,960 --> 00:33:57,510
which some people might call a virtual

00:33:56,880 --> 00:33:59,760
table

00:33:57,510 --> 00:34:01,830
in MySQL it's not actually materialized

00:33:59,760 --> 00:34:04,020
it's not a real table it's just a query

00:34:01,830 --> 00:34:08,429
so you could say you know create view

00:34:04,020 --> 00:34:10,139
foo as select username email from table

00:34:08,429 --> 00:34:12,480
that might have more information than

00:34:10,139 --> 00:34:15,210
just the username and table it's a way

00:34:12,480 --> 00:34:17,580
to give a view of the table whether it's

00:34:15,210 --> 00:34:19,800
horizontal or vertical so you can say

00:34:17,580 --> 00:34:22,350
you can give a where clause and you can

00:34:19,800 --> 00:34:24,480
specify well this company can see only

00:34:22,350 --> 00:34:27,480
these three fields of this table and

00:34:24,480 --> 00:34:30,480
only when the rows match that it's very

00:34:27,480 --> 00:34:32,040
powerful as a security tool it's not

00:34:30,480 --> 00:34:34,530
necessarily the best in performance

00:34:32,040 --> 00:34:36,419
because it's not a it's not a separate

00:34:34,530 --> 00:34:38,280
table but it might look like a simpler

00:34:36,419 --> 00:34:39,330
table and it really is so people might

00:34:38,280 --> 00:34:41,520
make some queries that are a little

00:34:39,330 --> 00:34:44,190
weird but again there's always a

00:34:41,520 --> 00:34:45,570
security performance trade-off right so

00:34:44,190 --> 00:34:48,330
it's just figuring out what that is and

00:34:45,570 --> 00:34:50,399
you can use explained in MySQL to look

00:34:48,330 --> 00:34:52,740
at the explained plans it's like the

00:34:50,399 --> 00:34:55,590
optimizer plan what are your password

00:34:52,740 --> 00:34:59,100
policies and what are your roles so you

00:34:55,590 --> 00:35:00,420
could allow people to run commands we

00:34:59,100 --> 00:35:01,680
were talked about this a little bit with

00:35:00,420 --> 00:35:03,360
stored procedures you'd say okay they

00:35:01,680 --> 00:35:05,430
have the role of whatever should use

00:35:03,360 --> 00:35:06,690
these stored procedures to do things now

00:35:05,430 --> 00:35:08,880
maybe you don't allow people to create

00:35:06,690 --> 00:35:12,240
users but you allow them to run a store

00:35:08,880 --> 00:35:13,980
procedure that creates users where's the

00:35:12,240 --> 00:35:14,880
access from well you know one thing you

00:35:13,980 --> 00:35:16,860
can do is you can have access from

00:35:14,880 --> 00:35:19,440
localhost only maybe have a tiny tiny

00:35:16,860 --> 00:35:21,660
you know blog or something that you

00:35:19,440 --> 00:35:24,030
don't really need to have you know high

00:35:21,660 --> 00:35:26,970
availability on your database have it is

00:35:24,030 --> 00:35:29,370
localhost only you know skip networking

00:35:26,970 --> 00:35:31,080
you don't even open your tcp ports at

00:35:29,370 --> 00:35:33,360
all skip networking means you connect

00:35:31,080 --> 00:35:35,130
locally via sockets assuming you're on

00:35:33,360 --> 00:35:38,640
unix if you happen to be on Windows

00:35:35,130 --> 00:35:40,500
that's shared pipes or named pipes or

00:35:38,640 --> 00:35:43,110
shared memory I think they're called but

00:35:40,500 --> 00:35:44,460
basically sockets so you can go sockets

00:35:43,110 --> 00:35:47,070
only if you really want depending on how

00:35:44,460 --> 00:35:48,810
skew you are again firewall who can

00:35:47,070 --> 00:35:49,920
attempt to denial of service attack you

00:35:48,810 --> 00:35:51,330
you know even if they don't have a

00:35:49,920 --> 00:35:53,820
username even they don't have a password

00:35:51,330 --> 00:35:57,690
they can connect to your TCP p if your

00:35:53,820 --> 00:36:01,200
tcp port on 3306 they take one of your

00:35:57,690 --> 00:36:05,220
precious precious connections to tcp so

00:36:01,200 --> 00:36:07,440
i said before that the anonymous user

00:36:05,220 --> 00:36:08,880
had quote unquote no privileges so

00:36:07,440 --> 00:36:11,040
here's where the quote unquote comes in

00:36:08,880 --> 00:36:14,340
there's a database by default called

00:36:11,040 --> 00:36:17,040
test okay this is the test database

00:36:14,340 --> 00:36:18,600
anyone can access it anyone even if they

00:36:17,040 --> 00:36:22,200
have no privileges even it says grant

00:36:18,600 --> 00:36:23,700
usage on okay and this comes default

00:36:22,200 --> 00:36:25,380
with MySQL so one of the things that you

00:36:23,700 --> 00:36:27,180
can do when they say like to make my

00:36:25,380 --> 00:36:29,670
scale more secure you change the root

00:36:27,180 --> 00:36:32,550
password you drop the anonymous user and

00:36:29,670 --> 00:36:33,810
you drop the test database now why is

00:36:32,550 --> 00:36:36,420
that such a big deal what is somebody

00:36:33,810 --> 00:36:38,670
going to do well they can stuff that

00:36:36,420 --> 00:36:40,620
that database they can create tables and

00:36:38,670 --> 00:36:43,890
drop tables they can stuff it with data

00:36:40,620 --> 00:36:46,140
they can start putting so much data into

00:36:43,890 --> 00:36:47,640
your tables well who cares nobody using

00:36:46,140 --> 00:36:49,530
that yeah but the file system can get

00:36:47,640 --> 00:36:50,880
full your logs can get full there's a

00:36:49,530 --> 00:36:52,890
lot of junk they can slow down your

00:36:50,880 --> 00:36:56,010
replication by putting too much stuff in

00:36:52,890 --> 00:36:57,540
it and if mysql by the way if your day

00:36:56,010 --> 00:36:59,730
if your data directory gets full your

00:36:57,540 --> 00:37:01,950
log directory gets full mysql just hangs

00:36:59,730 --> 00:37:03,570
because it's waiting to be able to do

00:37:01,950 --> 00:37:05,520
that commander it's waiting to be able

00:37:03,570 --> 00:37:07,380
to write that lock so just sits there

00:37:05,520 --> 00:37:09,270
hangs it doesn't crash doesn't do it it

00:37:07,380 --> 00:37:12,390
just hangs just waits waits until

00:37:09,270 --> 00:37:13,890
there's enough space to free space so

00:37:12,390 --> 00:37:15,180
yeah and you know we all have disk

00:37:13,890 --> 00:37:17,880
monitoring so we'll find that when that

00:37:15,180 --> 00:37:20,180
happens but try to prevent it before it

00:37:17,880 --> 00:37:20,180
starts

00:37:23,579 --> 00:37:28,200
so the question is there grant statement

00:37:25,680 --> 00:37:29,400
like you can give somebody you know you

00:37:28,200 --> 00:37:31,680
can not keep reversing that know it's

00:37:29,400 --> 00:37:34,529
hard coded into mysql so literally if

00:37:31,680 --> 00:37:37,109
you can log into mysql you can access

00:37:34,529 --> 00:37:39,329
this drop insert delete that's why they

00:37:37,109 --> 00:37:41,279
say to drop the test database now the

00:37:39,329 --> 00:37:44,309
problem is it's not just the database

00:37:41,279 --> 00:37:47,009
called t EST annie database that starts

00:37:44,309 --> 00:37:48,900
with the letters t EST so if you have

00:37:47,009 --> 00:37:51,690
your development server and you're like

00:37:48,900 --> 00:37:54,059
well this is dev underscore Firefox and

00:37:51,690 --> 00:37:56,190
this is test underscore fire everyone

00:37:54,059 --> 00:37:58,170
can see that test underscore whatever

00:37:56,190 --> 00:38:00,269
because it starts even if its testing

00:37:58,170 --> 00:38:02,160
des TI ng if it starts with a letter

00:38:00,269 --> 00:38:04,319
test and that the wood letters and tests

00:38:02,160 --> 00:38:06,900
and that's that's just hard coding I

00:38:04,319 --> 00:38:08,130
felt not one out the hard way to it's

00:38:06,900 --> 00:38:09,660
kind of funny and it's it's right there

00:38:08,130 --> 00:38:11,369
in the manual but whoever reads the

00:38:09,660 --> 00:38:13,140
manual page on the test database but I

00:38:11,369 --> 00:38:14,849
looked out like with people like why do

00:38:13,140 --> 00:38:16,170
I see this random date why did the

00:38:14,849 --> 00:38:19,259
Thunder where people see the firebox

00:38:16,170 --> 00:38:23,039
database lying on all then I looked it

00:38:19,259 --> 00:38:25,979
up and I look now that's why is it case

00:38:23,039 --> 00:38:29,299
sensitive ah case sensitivity with mysql

00:38:25,979 --> 00:38:33,329
databases so MySQL does things in a very

00:38:29,299 --> 00:38:35,579
simple way a direct a database in mysql

00:38:33,329 --> 00:38:38,400
is just a directory so if you're

00:38:35,579 --> 00:38:41,910
operating system is case sensitive like

00:38:38,400 --> 00:38:44,219
unix is then indeed it will be case

00:38:41,910 --> 00:38:46,049
sensitive as for the test Davis I you

00:38:44,219 --> 00:38:47,519
know I haven't tried it but that's

00:38:46,049 --> 00:38:52,920
actually a great question let me write

00:38:47,519 --> 00:38:56,940
that down I think the answer to is be on

00:38:52,920 --> 00:38:58,019
the safe side and just don't do it but

00:38:56,940 --> 00:38:59,430
that's great you know this is probably

00:38:58,019 --> 00:39:00,930
the eighth time I've given this

00:38:59,430 --> 00:39:01,979
presentation in two months so it's a

00:39:00,930 --> 00:39:03,630
current one but I've given a lot

00:39:01,979 --> 00:39:09,799
nobody's asked that it's a great

00:39:03,630 --> 00:39:13,619
question is test DB grants case

00:39:09,799 --> 00:39:16,199
sensitive like is it is it capital t EST

00:39:13,619 --> 00:39:17,519
also there is easy way to figure that

00:39:16,199 --> 00:39:18,989
out right just create the database

00:39:17,519 --> 00:39:20,369
create a user that isn't allowed to see

00:39:18,989 --> 00:39:21,269
anything and see what happens that's

00:39:20,369 --> 00:39:23,339
actually one of things i love about

00:39:21,269 --> 00:39:27,869
mysql is that it's so easy to test these

00:39:23,339 --> 00:39:30,269
things out anyway so what what else can

00:39:27,869 --> 00:39:33,029
be with acls so there's a parameter in

00:39:30,269 --> 00:39:35,489
mysql called local in file now by

00:39:33,029 --> 00:39:37,240
default local and file is set to one

00:39:35,489 --> 00:39:40,590
which means you are allowed to use

00:39:37,240 --> 00:39:44,050
made a file local to your client to

00:39:40,590 --> 00:39:45,820
import data right so load data infile

00:39:44,050 --> 00:39:47,110
whatever if you have the permissions to

00:39:45,820 --> 00:39:49,180
write to the database and all that kind

00:39:47,110 --> 00:39:51,220
of stuff now that's great that means i

00:39:49,180 --> 00:39:54,220
can connect from my laptop to a system

00:39:51,220 --> 00:39:55,660
and you know load a file from my system

00:39:54,220 --> 00:39:57,190
right I'm a developer I want to load

00:39:55,660 --> 00:39:58,720
some data and it's a new system or

00:39:57,190 --> 00:40:00,040
something well that's bad because it

00:39:58,720 --> 00:40:01,960
allows anyone who can log into the

00:40:00,040 --> 00:40:04,780
database to take a file local to their

00:40:01,960 --> 00:40:06,640
system so one of the security parameters

00:40:04,780 --> 00:40:07,869
in my skull is you can set local in file

00:40:06,640 --> 00:40:10,240
to zero which means you can't use a

00:40:07,869 --> 00:40:12,820
local in file you have to use something

00:40:10,240 --> 00:40:14,650
that's on the database server itself now

00:40:12,820 --> 00:40:16,630
this opens up another can of worms and

00:40:14,650 --> 00:40:19,410
people have asked but if you allow the

00:40:16,630 --> 00:40:22,390
developer to copy a file to the MySQL

00:40:19,410 --> 00:40:24,810
database server to somewhere the MySQL

00:40:22,390 --> 00:40:27,520
server can see it like temp or something

00:40:24,810 --> 00:40:28,869
isn't that like bad for security because

00:40:27,520 --> 00:40:30,520
now you're giving a developer a log into

00:40:28,869 --> 00:40:32,230
a machine like well that's your trade

00:40:30,520 --> 00:40:34,510
off all right your trade off is do you

00:40:32,230 --> 00:40:37,300
want to allow people to import locally

00:40:34,510 --> 00:40:40,030
or if they want to import something it

00:40:37,300 --> 00:40:41,380
has to be on the server and you know it

00:40:40,030 --> 00:40:43,480
may be something like in development

00:40:41,380 --> 00:40:47,560
they they can import locally and in

00:40:43,480 --> 00:40:49,930
production they can skip symbolic links

00:40:47,560 --> 00:40:52,119
this is one of those things that maybe

00:40:49,930 --> 00:40:54,310
was a problem 50 years ago I don't know

00:40:52,119 --> 00:40:57,490
but in MySQL it's actually pretty cool

00:40:54,310 --> 00:40:59,410
if you can actually symbolically linked

00:40:57,490 --> 00:41:01,359
directories or files and mysql will

00:40:59,410 --> 00:41:02,530
actually follow them which is great when

00:41:01,359 --> 00:41:04,270
you're like running out of disk space

00:41:02,530 --> 00:41:05,950
and you're like well let me move this

00:41:04,270 --> 00:41:07,960
file over to another directory and

00:41:05,950 --> 00:41:10,390
quickly do a symbolic link to it if

00:41:07,960 --> 00:41:11,859
nobody notices that it moved and it into

00:41:10,390 --> 00:41:13,359
work so I've done that when I'm like

00:41:11,859 --> 00:41:16,869
running out of disk space and move a

00:41:13,359 --> 00:41:18,280
file over it works and apparently this

00:41:16,869 --> 00:41:21,220
is flagged as one of these security

00:41:18,280 --> 00:41:22,990
options to skip that I've never really

00:41:21,220 --> 00:41:25,300
seriously I've never heard of someone

00:41:22,990 --> 00:41:29,350
who had any problems where someone like

00:41:25,300 --> 00:41:31,450
broke into their computer and you know

00:41:29,350 --> 00:41:33,550
broke into their mysql and changed their

00:41:31,450 --> 00:41:35,470
data directory to like symbolically link

00:41:33,550 --> 00:41:38,020
somewhere else I've you know I think

00:41:35,470 --> 00:41:39,430
it's more of a problem of someone's

00:41:38,020 --> 00:41:41,850
stealing your data than someone kind of

00:41:39,430 --> 00:41:44,890
making your data be look different but

00:41:41,850 --> 00:41:46,750
it's something that you can do so this

00:41:44,890 --> 00:41:48,750
coming back up I don't know what's wrong

00:41:46,750 --> 00:42:00,090
with this baby

00:41:48,750 --> 00:42:01,920
oh that's the lens cap come on baby yeah

00:42:00,090 --> 00:42:05,490
but I'm changing it maybe the blue is

00:42:01,920 --> 00:42:07,650
not changing enough anyway so the last

00:42:05,490 --> 00:42:10,590
three things on that slide maybe while

00:42:07,650 --> 00:42:12,810
this comes up was to grant max queries

00:42:10,590 --> 00:42:14,580
per hour max updates per hour on max

00:42:12,810 --> 00:42:15,690
connections per hour and that's part of

00:42:14,580 --> 00:42:16,950
the grant statement at the end of the

00:42:15,690 --> 00:42:18,450
grand statement that is the big along

00:42:16,950 --> 00:42:20,760
when I showed you before you can

00:42:18,450 --> 00:42:22,830
actually say grant you know all on

00:42:20,760 --> 00:42:26,160
Stardust artists year yet whatever max

00:42:22,830 --> 00:42:27,860
queries per hour equals whatever by

00:42:26,160 --> 00:42:30,320
default at zero which means unlimited

00:42:27,860 --> 00:42:33,060
but you can say max queries per hour 10

00:42:30,320 --> 00:42:36,120
that user can only do 10 queries per

00:42:33,060 --> 00:42:41,040
hour any queries whether it's select

00:42:36,120 --> 00:42:46,920
show whatever it is max updates per hour

00:42:41,040 --> 00:42:48,300
is the same but for updates well it's

00:42:46,920 --> 00:42:53,280
blue it's coming up I don't want to

00:42:48,300 --> 00:42:56,100
power off don't push power again so yeah

00:42:53,280 --> 00:42:58,650
it's coming back slowly so that updates

00:42:56,100 --> 00:43:00,270
are any rights so inserts updates delete

00:42:58,650 --> 00:43:01,770
so you say as many selects as you want

00:43:00,270 --> 00:43:03,810
as many reasons you want you want type

00:43:01,770 --> 00:43:06,480
show databases whatever you want but the

00:43:03,810 --> 00:43:07,860
max updates per hour is 100 or max

00:43:06,480 --> 00:43:09,800
connections per hour they can only have

00:43:07,860 --> 00:43:12,960
this many times they connect per hour

00:43:09,800 --> 00:43:14,460
which is great and that's actually

00:43:12,960 --> 00:43:17,100
pretty cool i'm pretty powerful the

00:43:14,460 --> 00:43:20,220
problem is you only get these three and

00:43:17,100 --> 00:43:25,200
you only get them max per hour you can't

00:43:20,220 --> 00:43:27,720
say per minute or per day you can only

00:43:25,200 --> 00:43:29,280
say per hour and it's it's not

00:43:27,720 --> 00:43:31,020
time-based it's not like in the six

00:43:29,280 --> 00:43:34,110
o'clock hour it's like if your first

00:43:31,020 --> 00:43:35,670
login is at six 12pm then you have 100

00:43:34,110 --> 00:43:38,310
more logins you know connections are

00:43:35,670 --> 00:43:39,420
over till there so I don't know too many

00:43:38,310 --> 00:43:40,320
people who use this but if it's

00:43:39,420 --> 00:43:44,400
something that you're concerned about

00:43:40,320 --> 00:43:45,390
you could use that changing ACLs again

00:43:44,400 --> 00:43:48,960
this is one of these like what's your

00:43:45,390 --> 00:43:51,570
policy who changes them your DBA who

00:43:48,960 --> 00:43:53,580
who's auditing your DBA how are those

00:43:51,570 --> 00:43:55,800
changes audited and when do they happen

00:43:53,580 --> 00:43:58,320
do they happen when a developer who's

00:43:55,800 --> 00:44:00,300
been working on the project leaves right

00:43:58,320 --> 00:44:01,170
like you know I say this and as I was

00:44:00,300 --> 00:44:03,119
writing these slides

00:44:01,170 --> 00:44:04,589
like it's like nobody does this like

00:44:03,119 --> 00:44:05,970
I've never worked for company that's

00:44:04,589 --> 00:44:07,829
like oh this developer left and he was

00:44:05,970 --> 00:44:09,750
like the head of the project so we got

00:44:07,829 --> 00:44:11,640
to change our database passwords nobody

00:44:09,750 --> 00:44:13,109
ever says that but like from a security

00:44:11,640 --> 00:44:16,559
standpoint that's the first thing you

00:44:13,109 --> 00:44:19,230
should change so I'm a little passionate

00:44:16,559 --> 00:44:20,369
about that as you can tell but it's just

00:44:19,230 --> 00:44:22,740
one of those things that nobody does but

00:44:20,369 --> 00:44:25,020
but nobody would argue like this would

00:44:22,740 --> 00:44:26,910
totally not be PCI compliant or HIPAA

00:44:25,020 --> 00:44:28,079
compliant or any compliance HIPAA

00:44:26,910 --> 00:44:30,119
probably does matter but it wouldn't be

00:44:28,079 --> 00:44:31,559
PCI compliant to say oh when someone

00:44:30,119 --> 00:44:34,140
leaves no we don't change our database

00:44:31,559 --> 00:44:35,730
passwords right and for me by the way

00:44:34,140 --> 00:44:37,319
people like well can you explain what

00:44:35,730 --> 00:44:40,109
PCI compliance is because it's not

00:44:37,319 --> 00:44:41,880
really security for me PCI compliance is

00:44:40,109 --> 00:44:43,859
basically did you do your due diligence

00:44:41,880 --> 00:44:45,510
enough so that the journalist writing

00:44:43,859 --> 00:44:47,460
the story is going to make you sound

00:44:45,510 --> 00:44:48,660
like you did your due diligence or is

00:44:47,460 --> 00:44:49,950
the journalists going to make you sound

00:44:48,660 --> 00:44:53,700
like right because you could have like a

00:44:49,950 --> 00:44:56,849
homegrown low balance or traffic shaper

00:44:53,700 --> 00:44:59,460
that is way more secure than say a

00:44:56,849 --> 00:45:01,290
Juniper router right but the juniper

00:44:59,460 --> 00:45:04,230
routers PCI compliant the homegrown one

00:45:01,290 --> 00:45:06,420
isn't why because basically well if some

00:45:04,230 --> 00:45:08,849
journalists comes and says oh yeah they

00:45:06,420 --> 00:45:10,950
did their own that's going to look like

00:45:08,849 --> 00:45:12,750
well yeah of course if a two-bit hacks

00:45:10,950 --> 00:45:14,849
of course your system got hacked you did

00:45:12,750 --> 00:45:18,359
your own you didn't go with the you know

00:45:14,849 --> 00:45:20,700
you can go juniper so anyway so when do

00:45:18,359 --> 00:45:22,020
they happen when are they changed secure

00:45:20,700 --> 00:45:25,020
rich is actually a really good program

00:45:22,020 --> 00:45:27,540
you can look it up it does it uses

00:45:25,020 --> 00:45:29,490
stored procedures in a database and it

00:45:27,540 --> 00:45:31,170
has its own table so it's basically a

00:45:29,490 --> 00:45:33,359
collection of stored procedures it's

00:45:31,170 --> 00:45:34,920
written by Darren Cassar it's a free and

00:45:33,359 --> 00:45:37,290
open source he's a community member in

00:45:34,920 --> 00:45:39,589
mysql and it basically allows you to

00:45:37,290 --> 00:45:42,540
have roles so for example this has an

00:45:39,589 --> 00:45:45,390
example of a role of select and then you

00:45:42,540 --> 00:45:48,119
basically apply that role to a person

00:45:45,390 --> 00:45:50,190
and object so this bottom command here

00:45:48,119 --> 00:45:51,720
call grandpa leverage is giving the role

00:45:50,190 --> 00:45:54,299
one which could have been named better

00:45:51,720 --> 00:45:59,099
the Select role to John at machine

00:45:54,299 --> 00:46:00,809
domain com on the employees database so

00:45:59,099 --> 00:46:03,900
that's actually a very powerful tool for

00:46:00,809 --> 00:46:05,130
security and it's very neat so some of

00:46:03,900 --> 00:46:06,780
the things you can do that you can't do

00:46:05,130 --> 00:46:08,549
in MySQL you can have reserved usernames

00:46:06,780 --> 00:46:10,740
so you say well nobody's allowed to have

00:46:08,549 --> 00:46:12,750
the username of root or super you can

00:46:10,740 --> 00:46:14,700
block users so something you can't do in

00:46:12,750 --> 00:46:17,010
mysql is just disable a user

00:46:14,700 --> 00:46:18,990
if they're in the MySQL grant table they

00:46:17,010 --> 00:46:20,520
have permissions right so if you have

00:46:18,990 --> 00:46:22,740
like say a contractor that comes in once

00:46:20,520 --> 00:46:24,780
a quarter to do some work for a month

00:46:22,740 --> 00:46:26,099
you would have to create the user then

00:46:24,780 --> 00:46:28,020
drop these and create the user and drop

00:46:26,099 --> 00:46:30,589
the user this set of stored procedures

00:46:28,020 --> 00:46:33,150
does that for you it stores the

00:46:30,589 --> 00:46:34,770
credentials while it's disabled it

00:46:33,150 --> 00:46:37,050
deletes it from the MySQL table for you

00:46:34,770 --> 00:46:38,490
and stores it in its own table so that

00:46:37,050 --> 00:46:40,890
you can then say okay we turn this

00:46:38,490 --> 00:46:43,290
account on again something you can't do

00:46:40,890 --> 00:46:44,940
with MySQL would be very useful renaming

00:46:43,290 --> 00:46:47,310
user if you try to rename a user in

00:46:44,940 --> 00:46:50,130
MySQL it resets the privileges to be

00:46:47,310 --> 00:46:51,300
nothing ask me how I know I'm so glad

00:46:50,130 --> 00:46:53,190
you asked me how I know we just did this

00:46:51,300 --> 00:46:54,900
data center move and so I was like oh

00:46:53,190 --> 00:46:58,560
just update everything that was like 10

00:46:54,900 --> 00:47:00,960
dot 2 to 10 dot 8 guess what oh it

00:46:58,560 --> 00:47:02,640
worked and they could connect and that's

00:47:00,960 --> 00:47:03,630
all they could do because we dropped the

00:47:02,640 --> 00:47:05,579
test database so they couldn't do

00:47:03,630 --> 00:47:07,619
anything else you can also clone a user

00:47:05,579 --> 00:47:10,109
you can say make a user like she renamed

00:47:07,619 --> 00:47:11,910
name of John and then you can also do

00:47:10,109 --> 00:47:13,710
reconciliation what's reconciliation

00:47:11,910 --> 00:47:16,710
well like I said security has its own

00:47:13,710 --> 00:47:20,339
table of usernames and passwords so what

00:47:16,710 --> 00:47:22,410
happens when somebody grants something

00:47:20,339 --> 00:47:23,910
not using secure inch well that's not in

00:47:22,410 --> 00:47:25,859
the security stuff so you can reconcile

00:47:23,910 --> 00:47:28,079
and you can say make sure that you're up

00:47:25,859 --> 00:47:30,540
to date with the mysql table and there's

00:47:28,079 --> 00:47:33,119
a robust ways of reconciling you could

00:47:30,540 --> 00:47:36,630
say overwrite with mine or have it over

00:47:33,119 --> 00:47:39,089
right mind server options bind address

00:47:36,630 --> 00:47:42,180
so by default mysql will listen on TCP

00:47:39,089 --> 00:47:45,180
port 3306 on all of the IP addresses on

00:47:42,180 --> 00:47:47,339
your machine whether it's 127 001 or if

00:47:45,180 --> 00:47:49,290
you have 70 different IP addresses you

00:47:47,339 --> 00:47:53,069
can use dash dash behind address to give

00:47:49,290 --> 00:47:55,109
it a comma separated list of ips or host

00:47:53,069 --> 00:47:57,480
names to listen on so you might say well

00:47:55,109 --> 00:47:59,910
we have support mozilla com and addons

00:47:57,480 --> 00:48:01,589
mozilla com but we only want to listen

00:47:59,910 --> 00:48:03,660
on support now mozilla com that IP

00:48:01,589 --> 00:48:05,280
address you can do that skip name

00:48:03,660 --> 00:48:07,880
resolve so I was talking about the

00:48:05,280 --> 00:48:10,230
five-way handshake that MySQL has and

00:48:07,880 --> 00:48:12,450
one of the things that my school will do

00:48:10,230 --> 00:48:15,960
is if you connect by a host name like

00:48:12,450 --> 00:48:18,450
you say MySQL dash you you know food

00:48:15,960 --> 00:48:21,960
mozilla com it will actually look up

00:48:18,450 --> 00:48:24,900
that that IP address how's name get the

00:48:21,960 --> 00:48:27,900
IP address well if dns is horked then

00:48:24,900 --> 00:48:28,480
you can't connect to mysql because it's

00:48:27,900 --> 00:48:29,590
waiting

00:48:28,480 --> 00:48:31,660
waiting and waiting like if there's a

00:48:29,590 --> 00:48:32,800
lag in DNS then that's a problem the

00:48:31,660 --> 00:48:34,060
good news is that would never happen

00:48:32,800 --> 00:48:38,070
because there's never any problems with

00:48:34,060 --> 00:48:40,510
DNS the bad news is that's not true and

00:48:38,070 --> 00:48:42,609
so a lot of people you skip name resolve

00:48:40,510 --> 00:48:44,680
the thing is if you use skip name

00:48:42,609 --> 00:48:47,109
resolve when you have your grants to

00:48:44,680 --> 00:48:50,710
user at host that host has to be an IP

00:48:47,109 --> 00:48:52,960
address now when I say has to be what I

00:48:50,710 --> 00:48:56,140
mean is you can certainly my school will

00:48:52,960 --> 00:48:58,090
allow you to put in host names they just

00:48:56,140 --> 00:49:00,900
want use them and if you restart mysql

00:48:58,090 --> 00:49:03,460
you'll notice in your error logs it says

00:49:00,900 --> 00:49:05,530
warning i can't use this so I'm just not

00:49:03,460 --> 00:49:08,050
going to bother skip show database by

00:49:05,530 --> 00:49:09,369
default if you do you can allow peep

00:49:08,050 --> 00:49:11,430
there's a grant called show database

00:49:09,369 --> 00:49:14,830
that you can see databases they're not

00:49:11,430 --> 00:49:15,940
in and by default you can do that so we

00:49:14,830 --> 00:49:18,460
already talked about how to your data

00:49:15,940 --> 00:49:20,170
flow where's your data encrypted is it

00:49:18,460 --> 00:49:24,700
encrypted in the database itself do you

00:49:20,170 --> 00:49:27,190
say insert into foo md5 of the password

00:49:24,700 --> 00:49:29,650
well the logs will now have a statement

00:49:27,190 --> 00:49:32,380
that has a password in plain text do you

00:49:29,650 --> 00:49:34,480
encrypt it in your code so you're

00:49:32,380 --> 00:49:37,180
basically saying insert into you know

00:49:34,480 --> 00:49:38,650
the table it's already encrypted well

00:49:37,180 --> 00:49:39,850
where are long lines to encrypt it the

00:49:38,650 --> 00:49:42,100
closer you encrypt it to where the

00:49:39,850 --> 00:49:43,810
client types it in the better right

00:49:42,100 --> 00:49:45,390
because of summin against about stealing

00:49:43,810 --> 00:49:47,710
meaningful data versus stealing data

00:49:45,390 --> 00:49:49,060
where do the errors go our dare you

00:49:47,710 --> 00:49:49,990
checking your error logs to make sure

00:49:49,060 --> 00:49:51,160
that you're getting everything in order

00:49:49,990 --> 00:49:53,260
does the traffic flow we talked about

00:49:51,160 --> 00:49:55,630
replication backups think about

00:49:53,260 --> 00:49:57,910
everything separating administrative

00:49:55,630 --> 00:49:59,080
apps I'm starting to run out of time or

00:49:57,910 --> 00:50:01,810
someone go through this a little quickly

00:49:59,080 --> 00:50:03,670
same data a different interface it

00:50:01,810 --> 00:50:06,369
prevents basically denial of service

00:50:03,670 --> 00:50:09,940
attacks from your reporting people and

00:50:06,369 --> 00:50:11,260
then you have you can it's usually for

00:50:09,940 --> 00:50:12,760
performance but you might want to have

00:50:11,260 --> 00:50:14,920
it for administrative apps to that way

00:50:12,760 --> 00:50:16,600
if someone like breaks into your app

00:50:14,920 --> 00:50:17,980
server they'd have to break in your

00:50:16,600 --> 00:50:21,040
admin app server to get the admin

00:50:17,980 --> 00:50:23,890
privileges plant text information don't

00:50:21,040 --> 00:50:25,300
store it if you don't have to I mean

00:50:23,890 --> 00:50:26,500
don't store if you don't have to period

00:50:25,300 --> 00:50:31,390
but definitely don't store plain text

00:50:26,500 --> 00:50:33,070
information salt your passwords so if

00:50:31,390 --> 00:50:34,869
you see this password hash the one on

00:50:33,070 --> 00:50:36,430
top that's the password hash of password

00:50:34,869 --> 00:50:41,430
okay oh and guess what this bottom one

00:50:36,430 --> 00:50:41,430
is no actually it's not

00:50:41,980 --> 00:50:47,240
now you probably won't guess it but it

00:50:44,510 --> 00:50:49,040
is a common word so if I do this and I

00:50:47,240 --> 00:50:51,980
do star the cool part is the first one

00:50:49,040 --> 00:50:54,200
that comes up is this this this

00:50:51,980 --> 00:50:56,630
presentation the second one is a look at

00:50:54,200 --> 00:50:59,060
open a hash database let's check it out

00:50:56,630 --> 00:51:01,880
what's this it's a rainbow table you

00:50:59,060 --> 00:51:04,310
have md5sum md5 of md5 so don't get

00:51:01,880 --> 00:51:06,320
clever don't think oh well md5 my md5

00:51:04,310 --> 00:51:08,480
sum and that will be secured now and

00:51:06,320 --> 00:51:10,340
here's a mysql password and then sha-1

00:51:08,480 --> 00:51:13,310
as well so here's a whole table and

00:51:10,340 --> 00:51:14,840
looky here and oh look penguin submits

00:51:13,310 --> 00:51:16,730
the name penguin which I should have

00:51:14,840 --> 00:51:17,960
guessed because this is something i

00:51:16,730 --> 00:51:19,280
actually did because there was a user

00:51:17,960 --> 00:51:21,020
name was penguin i was trying to figure

00:51:19,280 --> 00:51:23,270
out what the password was so this is

00:51:21,020 --> 00:51:24,350
called google hacking by the way if you

00:51:23,270 --> 00:51:27,950
do it for good it's called white hat

00:51:24,350 --> 00:51:33,710
google hacking and let's see what else

00:51:27,950 --> 00:51:36,890
is there SQL injection you all know

00:51:33,710 --> 00:51:38,360
little Bobby tables right all right good

00:51:36,890 --> 00:51:40,430
that's what database injection that's

00:51:38,360 --> 00:51:43,310
what SQL injection is you might say well

00:51:40,430 --> 00:51:44,510
does that really happen just last month

00:51:43,310 --> 00:51:46,100
I was doing this presentation someone

00:51:44,510 --> 00:51:48,650
came up to me afterwards and said have

00:51:46,100 --> 00:51:51,170
you tried this do a curl dash head of

00:51:48,650 --> 00:51:54,050
red that reddit com so this just gets

00:51:51,170 --> 00:51:56,150
the headers from reddit okay you've got

00:51:54,050 --> 00:51:59,690
HTV one okay content types it sets a

00:51:56,150 --> 00:52:01,970
cookie big deal and then the server name

00:51:59,690 --> 00:52:03,500
is quote semicolon drop server table

00:52:01,970 --> 00:52:05,390
server types so I'm guessing somewhere

00:52:03,500 --> 00:52:06,890
that there's like hacker software out

00:52:05,390 --> 00:52:08,180
there that will go and find the server

00:52:06,890 --> 00:52:11,180
types and puts it in a database called

00:52:08,180 --> 00:52:12,710
or a table called server types and then

00:52:11,180 --> 00:52:14,750
you can see that's when I ran this so

00:52:12,710 --> 00:52:16,790
how cool is it this is like a real world

00:52:14,750 --> 00:52:18,110
there and you can you can curl reddit

00:52:16,790 --> 00:52:20,870
com it's been there for like three four

00:52:18,110 --> 00:52:23,060
years escaping user input so again

00:52:20,870 --> 00:52:25,490
trying to avoid SQL injection there are

00:52:23,060 --> 00:52:26,780
libraries that will do this for you but

00:52:25,490 --> 00:52:28,370
look be on the lookout for things like

00:52:26,780 --> 00:52:32,030
semicolon that starts a new statement

00:52:28,370 --> 00:52:34,430
things like that not only does is it

00:52:32,030 --> 00:52:36,050
good for you know not having SQL

00:52:34,430 --> 00:52:38,210
injection but saves yourself time if you

00:52:36,050 --> 00:52:40,820
validate email addresses for example you

00:52:38,210 --> 00:52:44,750
don't have to do that when you when you

00:52:40,820 --> 00:52:46,730
go to email somebody prepared statements

00:52:44,750 --> 00:52:49,970
you can use those but they're not very

00:52:46,730 --> 00:52:51,620
efficient trusting get or post I hope

00:52:49,970 --> 00:52:53,730
you're not necessarily trusting it

00:52:51,620 --> 00:52:55,980
because people have been steal

00:52:53,730 --> 00:52:57,720
accessions cross-site request forgery I

00:52:55,980 --> 00:53:00,750
have two whole minutes I thought I had

00:52:57,720 --> 00:53:02,640
less than that stored code so i talked

00:53:00,750 --> 00:53:04,650
about stored procedures or functions and

00:53:02,640 --> 00:53:06,540
i talked about views my school also has

00:53:04,650 --> 00:53:09,630
events now who here is running a cron

00:53:06,540 --> 00:53:12,090
script to do database stuff right maybe

00:53:09,630 --> 00:53:13,650
you're doing cash table whatever well if

00:53:12,090 --> 00:53:15,720
you're doing something like every five

00:53:13,650 --> 00:53:18,000
minutes run something to clean out a

00:53:15,720 --> 00:53:19,740
table or you know cash sessions every

00:53:18,000 --> 00:53:21,390
day you're cleaning out a table you know

00:53:19,740 --> 00:53:23,369
she's a my school event what that is is

00:53:21,390 --> 00:53:26,280
it's a it's a it's basically like a

00:53:23,369 --> 00:53:28,710
procedure store procedure in mysql but

00:53:26,280 --> 00:53:30,660
it's run via a scheduler in mysql and

00:53:28,710 --> 00:53:32,369
it's just as powerful as a dork ron you

00:53:30,660 --> 00:53:34,830
can say run it every ten minutes or run

00:53:32,369 --> 00:53:37,440
it at a certain time and you could say

00:53:34,830 --> 00:53:39,060
repeated repeat it until this day you

00:53:37,440 --> 00:53:40,650
say repeat you know every day until

00:53:39,060 --> 00:53:42,740
saturday or you could say repeat every

00:53:40,650 --> 00:53:45,270
day for the rest of your life doing this

00:53:42,740 --> 00:53:47,280
and the cool part is because it's

00:53:45,270 --> 00:53:48,990
already in mysql you basically when you

00:53:47,280 --> 00:53:51,210
define it you say invoke it as this

00:53:48,990 --> 00:53:53,340
person as this user and you don't have

00:53:51,210 --> 00:53:55,080
to put in a password it just runs in the

00:53:53,340 --> 00:53:57,930
MySQL scheduler the other benefit is

00:53:55,080 --> 00:53:58,980
that it's backed up with MySQL so if you

00:53:57,930 --> 00:54:00,540
ever had the problem where you're like

00:53:58,980 --> 00:54:02,160
you made a new server and like oh we

00:54:00,540 --> 00:54:04,350
forgot the quran scripts you don't have

00:54:02,160 --> 00:54:05,700
to worry about that with events auditing

00:54:04,350 --> 00:54:09,300
and monitoring prevention is only one

00:54:05,700 --> 00:54:13,500
part of security mysql has auditing

00:54:09,300 --> 00:54:15,180
plugins it has a plug-in API excuse me

00:54:13,500 --> 00:54:17,369
and McAfee is actually released an open

00:54:15,180 --> 00:54:18,660
source tool they released it a couple

00:54:17,369 --> 00:54:21,119
months ago I haven't had a chance to

00:54:18,660 --> 00:54:23,970
assess it yet but you know it's McAfee

00:54:21,119 --> 00:54:25,590
it's probably pretty decent and then

00:54:23,970 --> 00:54:27,210
monitoring how do you alert for your

00:54:25,590 --> 00:54:30,030
security issues that's not a solve

00:54:27,210 --> 00:54:32,760
problem yet you can use the general log

00:54:30,030 --> 00:54:35,040
to see all login attempts and there's

00:54:32,760 --> 00:54:37,619
actually a variable called max connect

00:54:35,040 --> 00:54:39,750
errors which I will talk about very

00:54:37,619 --> 00:54:42,030
quickly it's a global thing and by

00:54:39,750 --> 00:54:44,190
default it's 10 which means you can try

00:54:42,030 --> 00:54:46,770
to connect and fail 10 times before your

00:54:44,190 --> 00:54:48,450
accounts locked that's pretty cool 10

00:54:46,770 --> 00:54:50,310
times in a row if you if you try three

00:54:48,450 --> 00:54:52,200
times and then you login successfully

00:54:50,310 --> 00:54:53,820
the counters reset so that's by default

00:54:52,200 --> 00:54:54,750
as 10 it's a pretty good default because

00:54:53,820 --> 00:54:57,150
you've probably never heard of it before

00:54:54,750 --> 00:54:58,830
the problem with this is let's say two

00:54:57,150 --> 00:55:02,310
people are locked shiri and John are

00:54:58,830 --> 00:55:04,140
locked but the way that you unlock is by

00:55:02,310 --> 00:55:06,460
doing a flush hosts you can't just

00:55:04,140 --> 00:55:08,109
unlock one person its global and

00:55:06,460 --> 00:55:09,820
you can't just say well she Riza loud to

00:55:08,109 --> 00:55:11,200
connect ten times but John's allowed to

00:55:09,820 --> 00:55:13,180
connect only three times before he gets

00:55:11,200 --> 00:55:16,240
locked out so the problem is that its

00:55:13,180 --> 00:55:18,060
global to lock and global to unlock so

00:55:16,240 --> 00:55:20,680
my final advice to use play hard to get

00:55:18,060 --> 00:55:22,540
use MySQL events instead of chron task

00:55:20,680 --> 00:55:25,240
scheduler if there's no password saved

00:55:22,540 --> 00:55:26,740
there's no password to steal again no

00:55:25,240 --> 00:55:29,230
plaintext passwords or credit cards or

00:55:26,740 --> 00:55:31,359
whatever if they grab your database and

00:55:29,230 --> 00:55:32,589
they have no information in it then they

00:55:31,359 --> 00:55:34,000
have no information so don't store if

00:55:32,589 --> 00:55:35,970
they don't need it there's also an

00:55:34,000 --> 00:55:38,260
authentication plugin so you can use

00:55:35,970 --> 00:55:41,170
windows or pam authentication so you can

00:55:38,260 --> 00:55:42,849
use ldap which is awesome creating

00:55:41,170 --> 00:55:49,240
policies make sure you do it and that's

00:55:42,849 --> 00:55:51,640
it well yeah ldf isn't awesome if dns

00:55:49,240 --> 00:55:52,930
isn't as awesome and right now it's a

00:55:51,640 --> 00:55:55,330
little hacky like you basically use a

00:55:52,930 --> 00:55:56,740
proxy user so you basically say and it's

00:55:55,330 --> 00:55:59,380
a one-to-one relationship so you can't

00:55:56,740 --> 00:56:02,470
say Oh anyone in this group can now use

00:55:59,380 --> 00:56:05,140
the root account so it's still in its

00:56:02,470 --> 00:56:07,570
infancy but it's something that people

00:56:05,140 --> 00:56:09,550
have been wanting for a long time so you

00:56:07,570 --> 00:56:11,680
know again how is ldap good for anything

00:56:09,550 --> 00:56:13,440
and yet that's if dns isn't good and yet

00:56:11,680 --> 00:56:16,300
that's what people use universally so

00:56:13,440 --> 00:56:18,520
that's I don't think that's by the way I

00:56:16,300 --> 00:56:21,550
don't work for oracle / mysql our for

00:56:18,520 --> 00:56:23,740
mozilla so find me in the hallways ask

00:56:21,550 --> 00:56:26,560
me anything whatever you want I will I

00:56:23,740 --> 00:56:29,770
will let you know but just I'm not I

00:56:26,560 --> 00:56:32,220
only drink certain cool aids so thank

00:56:29,770 --> 00:56:32,220
you guys so much

00:56:33,950 --> 00:56:36,010
you

00:56:40,940 --> 00:56:46,020
when we created asterisk over a decade

00:56:43,650 --> 00:56:47,970
ago we could not have imagined that

00:56:46,020 --> 00:56:50,160
asterisk would not only become the most

00:56:47,970 --> 00:56:52,320
widely adopted open source communication

00:56:50,160 --> 00:56:54,330
software on the planet but that it would

00:56:52,320 --> 00:56:56,850
impact the entire industry in the way

00:56:54,330 --> 00:56:58,830
that it has today asterisk has found its

00:56:56,850 --> 00:57:01,470
way into more than 170 countries and

00:56:58,830 --> 00:57:03,420
virtually every fortune 1000 company the

00:57:01,470 --> 00:57:05,520
success of asterisk has enabled a

00:57:03,420 --> 00:57:06,930
transition of power from the hands of

00:57:05,520 --> 00:57:09,210
the traditional proprietary phone

00:57:06,930 --> 00:57:11,610
vendors into the hands of the users and

00:57:09,210 --> 00:57:13,530
administrators of phone systems using

00:57:11,610 --> 00:57:14,760
this power our customers have created

00:57:13,530 --> 00:57:16,710
all sorts of business changing

00:57:14,760 --> 00:57:18,570
applications from small office phone

00:57:16,710 --> 00:57:21,060
systems to mission-critical call centres

00:57:18,570 --> 00:57:22,680
the international carrier networks in

00:57:21,060 --> 00:57:24,450
fact there's even an entire country

00:57:22,680 --> 00:57:27,060
those communications infrastructure runs

00:57:24,450 --> 00:57:28,980
on esters the gym has always been about

00:57:27,060 --> 00:57:30,690
creating technology that expands

00:57:28,980 --> 00:57:32,880
communications capabilities in ways that

00:57:30,690 --> 00:57:34,050
we could never have imagined and that's

00:57:32,880 --> 00:57:36,810
part of what's game-changing about

00:57:34,050 --> 00:57:39,150
Digium today we're doing it again this

00:57:36,810 --> 00:57:41,250
time by introducing a new family of HD

00:57:39,150 --> 00:57:43,350
IP phones that extends control of the

00:57:41,250 --> 00:57:45,120
user all the way to the desktop the

00:57:43,350 --> 00:57:46,830
launch of these new products represents

00:57:45,120 --> 00:57:48,930
the next phase indigenous history of

00:57:46,830 --> 00:57:51,330
innovation these are the first and only

00:57:48,930 --> 00:57:53,040
IP phones designed to fully leverage the

00:57:51,330 --> 00:57:54,600
power of estrus when we first discussed

00:57:53,040 --> 00:57:56,640
our expectations for building a family

00:57:54,600 --> 00:57:58,770
of phones for use with asterisk our

00:57:56,640 --> 00:58:00,510
requirements were pretty simple we asked

00:57:58,770 --> 00:58:02,160
the team to build the phones such that

00:58:00,510 --> 00:58:04,350
they were easy to install integrate

00:58:02,160 --> 00:58:06,210
provision in use I think you'll soon

00:58:04,350 --> 00:58:08,760
agree our engineers have delivered on

00:58:06,210 --> 00:58:10,380
that goal user feedback is validating

00:58:08,760 --> 00:58:12,510
that when it comes to operation with

00:58:10,380 --> 00:58:14,940
Astra space systems including our own

00:58:12,510 --> 00:58:17,520
Switchvox based product these are the

00:58:14,940 --> 00:58:18,810
easiest to use best integrated most

00:58:17,520 --> 00:58:21,810
interoperable products on the market

00:58:18,810 --> 00:58:24,390
today the digital phones will initially

00:58:21,810 --> 00:58:26,130
include three IP des hommes uniquely

00:58:24,390 --> 00:58:28,470
designed to complement any asterisks or

00:58:26,130 --> 00:58:29,720
Switchvox based solution these phones

00:58:28,470 --> 00:58:32,790
are different for a number of reasons

00:58:29,720 --> 00:58:35,190
first there is clue sively designed for

00:58:32,790 --> 00:58:36,810
use with esters secondly we've made it

00:58:35,190 --> 00:58:39,180
really easy to autodiscover and

00:58:36,810 --> 00:58:40,380
provision the phones next we've made it

00:58:39,180 --> 00:58:42,900
easy for the phones to access

00:58:40,380 --> 00:58:44,610
information inside of asterisks allowing

00:58:42,900 --> 00:58:47,430
tight coupling between an application

00:58:44,610 --> 00:58:49,800
and the phone additionally we've created

00:58:47,430 --> 00:58:51,900
an applications engine that allows users

00:58:49,800 --> 00:58:55,140
and developers to create and run their

00:58:51,900 --> 00:58:56,910
own apps on the phone and finally we've

00:58:55,140 --> 00:58:58,860
done all of this at a very compelling

00:58:56,910 --> 00:59:00,540
price point at Digium we're always

00:58:58,860 --> 00:59:02,640
thinking of ways to give our customers

00:59:00,540 --> 00:59:05,160
the best value in business phone systems

00:59:02,640 --> 00:59:06,750
and also give them the power to create

00:59:05,160 --> 00:59:08,910
their own solutions or any

00:59:06,750 --> 00:59:10,650
communications challenge will continue

00:59:08,910 --> 00:59:12,090
to push the boundaries not only to make

00:59:10,650 --> 00:59:14,130
Astra's cooler bastard more

00:59:12,090 --> 00:59:15,870
technologically feature-rich but to make

00:59:14,130 --> 00:59:18,390
asterisk and communications even easier

00:59:15,870 --> 00:59:21,920
and together we'll change the way the

00:59:18,390 --> 00:59:21,920
world communicates again

00:59:32,339 --> 00:59:39,130
how's that sigh every way this is the

00:59:35,920 --> 00:59:41,319
way to better utilize all your resources

00:59:39,130 --> 00:59:44,770
and it makes managing all your resources

00:59:41,319 --> 00:59:48,599
pretty easy all of the innovation is

00:59:44,770 --> 00:59:52,119
happening in open source the

00:59:48,599 --> 00:59:53,890
collaborative nature and of the you know

00:59:52,119 --> 00:59:55,839
of the community and and the speed at

00:59:53,890 --> 00:59:58,000
which these are these you know these

00:59:55,839 --> 01:00:00,309
deficiencies these bugs are getting

00:59:58,000 --> 01:00:03,160
discovered and then fixed is the thing

01:00:00,309 --> 01:00:06,160
that really shows the power of the of

01:00:03,160 --> 01:00:08,640
the open source community it is global

01:00:06,160 --> 01:00:12,160
and it's definitely because of the users

01:00:08,640 --> 01:00:17,799
community people are extremely friendly

01:00:12,160 --> 01:00:19,690
and they're always ready to help if you

01:00:17,799 --> 01:00:21,970
go on tire see any day you'll see these

01:00:19,690 --> 01:00:23,700
guys helping each other out and they're

01:00:21,970 --> 01:00:26,410
all doing it like in a selfless manner

01:00:23,700 --> 01:00:29,400
the product is transparent for everyone

01:00:26,410 --> 01:00:32,559
everyone can look at the code base

01:00:29,400 --> 01:00:34,829
everyone can see how close that is being

01:00:32,559 --> 01:00:40,329
built nothing nothing is proprietary

01:00:34,829 --> 01:00:42,970
everything is open in many ways it's

01:00:40,329 --> 01:00:47,410
absolutely vital to the the ongoing

01:00:42,970 --> 01:00:51,609
health CloudStack the most exciting

01:00:47,410 --> 01:00:54,450
event in recent memory for me was our

01:00:51,609 --> 01:00:57,089
first developer boot camp

01:00:54,450 --> 01:00:59,760
and our call gave people a gave me two

01:00:57,089 --> 01:01:03,690
weeks notice to come attend I was

01:00:59,760 --> 01:01:07,950
expecting 25 or 30 people so we ended up

01:01:03,690 --> 01:01:10,710
with 87 people and had to go get board

01:01:07,950 --> 01:01:13,230
chairs in the room twice everything

01:01:10,710 --> 01:01:16,500
within cloud computing is commodity and

01:01:13,230 --> 01:01:19,560
is open source and so I don't think that

01:01:16,500 --> 01:01:21,329
you will you'll see anywhere where open

01:01:19,560 --> 01:01:24,359
source is not pervasive in cloud

01:01:21,329 --> 01:01:27,060
computing and so i think it's i think

01:01:24,359 --> 01:01:28,410
it's an assumption i think when you talk

01:01:27,060 --> 01:01:29,550
about cloud computing you're really

01:01:28,410 --> 01:01:35,099
talking about open source cloud

01:01:29,550 --> 01:01:38,130
computing cloud sac is a robust solution

01:01:35,099 --> 01:01:40,260
for large deployments you'll have dozens

01:01:38,130 --> 01:01:44,520
of data centers and thousands of servers

01:01:40,260 --> 01:01:47,190
in each data centers these hardware is

01:01:44,520 --> 01:01:50,700
going to fail and CloudStack is designed

01:01:47,190 --> 01:01:53,400
to handle number one that mass scale

01:01:50,700 --> 01:01:56,579
number two it's designed to handle the

01:01:53,400 --> 01:01:58,829
failure that inevitably happens in large

01:01:56,579 --> 01:02:02,109
deployments we started working on

01:01:58,829 --> 01:02:05,319
contact over four years ago

01:02:02,109 --> 01:02:07,779
here it was the original set of people

01:02:05,319 --> 01:02:09,970
working on it had a background of

01:02:07,779 --> 01:02:13,779
delivering software telcos and service

01:02:09,970 --> 01:02:18,160
providers lots of QA lots of users

01:02:13,779 --> 01:02:21,279
actually using it high availability is

01:02:18,160 --> 01:02:24,730
the key feature multiple hypervisors

01:02:21,279 --> 01:02:27,279
support different network models you can

01:02:24,730 --> 01:02:29,319
pick up whatever suits you better while

01:02:27,279 --> 01:02:33,249
step management server can be deployed

01:02:29,319 --> 01:02:35,049
in different physical machines it

01:02:33,249 --> 01:02:36,670
definitely has a huge footprint it's

01:02:35,049 --> 01:02:42,099
being deployed everywhere there's a

01:02:36,670 --> 01:02:43,829
major movie studio that they were using

01:02:42,099 --> 01:02:47,019
cloudstack they were using it to

01:02:43,829 --> 01:02:49,210
transcode video and I thought that was

01:02:47,019 --> 01:02:50,529
terribly fascinating what I found more

01:02:49,210 --> 01:02:53,799
fascinating is what they did during

01:02:50,529 --> 01:02:56,559
lunch where they would spin up you know

01:02:53,799 --> 01:02:57,940
50 or 60 game servers then as soon as

01:02:56,559 --> 01:02:59,859
lunch was over they would destroy all

01:02:57,940 --> 01:03:03,999
the instances and get back to doing real

01:02:59,859 --> 01:03:05,319
work cloudstack is vast it touches so

01:03:03,999 --> 01:03:07,420
many different aspects and there's no

01:03:05,319 --> 01:03:09,789
one person that's kind of like a master

01:03:07,420 --> 01:03:13,900
of all those realms I think CloudStack

01:03:09,789 --> 01:03:16,119
as a project is going to be one of the

01:03:13,900 --> 01:03:20,170
leaders simply because it's some of the

01:03:16,119 --> 01:03:25,599
most feature fallen and and robust

01:03:20,170 --> 01:03:28,529
platforms out they were out on senior

01:03:25,599 --> 01:03:28,529
living for the clouds dag

01:04:12,110 --> 01:04:14,170

YouTube URL: https://www.youtube.com/watch?v=BUH85X6R_Aw


