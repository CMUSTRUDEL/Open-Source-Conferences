Title: Kevin Howell - Jenkins 101
Publication date: 2019-06-18
Playlist: 2019 SouthEast LinuxFest
Description: 
	SouthEast Linux Fest 2019
If you are doing software development (or want to), and have never heard of Jenkins (or don't know much about Jenkins), then you are missing out. This talk will discuss what Jenkins is, how to install and manage Jenkins, and strategies for getting Jenkins to do useful things (jobs and pipelines). I will discuss also some modern Jenkins best practices along the way.
Captions: 
	00:00:00,000 --> 00:00:04,980
with someone about Jenkins so if you

00:00:03,240 --> 00:00:07,319
find yourself talking you know with a

00:00:04,980 --> 00:00:10,590
manager or developers to sentiment

00:00:07,319 --> 00:00:14,730
anybody about Jenkins I hope that you

00:00:10,590 --> 00:00:17,580
have you know some common language talk

00:00:14,730 --> 00:00:21,090
just briefly about how to install and

00:00:17,580 --> 00:00:22,500
manage Jenkins again don't expect people

00:00:21,090 --> 00:00:25,470
to come out of this talk with oh yeah

00:00:22,500 --> 00:00:28,140
I'm a Jenkins admin now but just give

00:00:25,470 --> 00:00:31,070
you a quick little preview walk through

00:00:28,140 --> 00:00:34,829
some things also wants to talk about

00:00:31,070 --> 00:00:37,050
Jenkins best practices so so really I

00:00:34,829 --> 00:00:38,930
want to give some advice so that if

00:00:37,050 --> 00:00:41,640
you're getting started with Jenkins and

00:00:38,930 --> 00:00:44,040
you decide you know this is something

00:00:41,640 --> 00:00:49,410
you want to pursue just some best

00:00:44,040 --> 00:00:54,690
practices so first a little bit about me

00:00:49,410 --> 00:00:56,730
so my name is Kevin Howell I can be

00:00:54,690 --> 00:00:59,370
reached it came out right edicom or my

00:00:56,730 --> 00:01:01,559
personal email is Kevin at Kate Howell

00:00:59,370 --> 00:01:05,040
dotnet either of those will work to

00:01:01,559 --> 00:01:09,119
reach me I've got my github URL there I

00:01:05,040 --> 00:01:10,409
have a web page but I don't keep a lot

00:01:09,119 --> 00:01:12,689
of stuff on there but one thing I am

00:01:10,409 --> 00:01:15,119
posting is this presentation so if you

00:01:12,689 --> 00:01:17,610
want to go back and see it again or or

00:01:15,119 --> 00:01:22,140
want to see my speaker notes

00:01:17,610 --> 00:01:24,720
they'll be accessible from there so so

00:01:22,140 --> 00:01:28,140
I've been with Red Hat for a little over

00:01:24,720 --> 00:01:33,000
five years now I am a Red Hat certified

00:01:28,140 --> 00:01:35,070
architect and my day job I work as a

00:01:33,000 --> 00:01:38,070
senior software engineer in the Red Hat

00:01:35,070 --> 00:01:40,829
satellite six group I'm currently the

00:01:38,070 --> 00:01:42,869
tech lead for group that works on

00:01:40,829 --> 00:01:46,200
subscription management as part of

00:01:42,869 --> 00:01:48,659
satellite six and and there are a couple

00:01:46,200 --> 00:01:50,640
projects associated with that if you

00:01:48,659 --> 00:01:53,430
hear me say candlepin or subscription

00:01:50,640 --> 00:02:01,200
manager those are two of those projects

00:01:53,430 --> 00:02:05,340
so first like to define what what is

00:02:01,200 --> 00:02:07,110
Jenkins so first of all if anyone has

00:02:05,340 --> 00:02:09,979
heard the term Hudson or if you've used

00:02:07,110 --> 00:02:09,979
in the past

00:02:10,239 --> 00:02:17,000
that was the project that the Jenkins

00:02:12,890 --> 00:02:19,310
originally you know sort of started from

00:02:17,000 --> 00:02:21,530
it was another one of those projects

00:02:19,310 --> 00:02:23,450
that you know work well had an

00:02:21,530 --> 00:02:26,000
involvement and of course there's a fork

00:02:23,450 --> 00:02:28,010
and Jenkins is the fork that is the more

00:02:26,000 --> 00:02:30,170
community maintained for guy I believe

00:02:28,010 --> 00:02:31,549
work will still maintain Sutton but you

00:02:30,170 --> 00:02:34,870
won't hear people talking about HUDs and

00:02:31,549 --> 00:02:34,870
much anymore

00:02:34,909 --> 00:02:41,569
so first of all Jenkins is a widely used

00:02:38,739 --> 00:02:46,760
open-source automation server I say

00:02:41,569 --> 00:02:48,079
widely used because I've seen tons and

00:02:46,760 --> 00:02:50,239
tons of job postings for four different

00:02:48,079 --> 00:02:55,189
industries you know gaming industry uses

00:02:50,239 --> 00:02:58,069
it obviously software industry I I would

00:02:55,189 --> 00:03:00,530
go as far as to say it's probably the

00:02:58,069 --> 00:03:06,769
sort of default de-facto automation

00:03:00,530 --> 00:03:07,970
server the most obvious use of Jenkins

00:03:06,769 --> 00:03:11,269
and sort of the thing that is sort of

00:03:07,970 --> 00:03:15,440
started out really being used for is to

00:03:11,269 --> 00:03:20,949
build and test software so people really

00:03:15,440 --> 00:03:23,329
think continuous integration but

00:03:20,949 --> 00:03:25,909
something that I want folks to take away

00:03:23,329 --> 00:03:29,989
from this is that Jenkins can be used as

00:03:25,909 --> 00:03:32,540
a general purpose tool for for giving

00:03:29,989 --> 00:03:36,470
you a central way to to run your tasks

00:03:32,540 --> 00:03:38,750
so you know it's a centrally accessible

00:03:36,470 --> 00:03:44,079
web interface that you can use to both

00:03:38,750 --> 00:03:44,079
trigger and then monitor automation

00:03:45,519 --> 00:03:51,229
another important aspect of Jenkins is

00:03:48,650 --> 00:03:55,970
that Jenkins functionality is provided

00:03:51,229 --> 00:03:58,159
by a community of plug-ins so this talk

00:03:55,970 --> 00:03:59,750
I won't go into too much detail about a

00:03:58,159 --> 00:04:00,799
lot of different plugins but but it's

00:03:59,750 --> 00:04:03,319
important to note that if there's

00:04:00,799 --> 00:04:04,729
something that you're trying to do it's

00:04:03,319 --> 00:04:07,370
worth looking to see if there are

00:04:04,729 --> 00:04:09,470
plugins that will support you because

00:04:07,370 --> 00:04:12,650
it's kind of you have some basic

00:04:09,470 --> 00:04:16,159
building blocks and you can do a lot

00:04:12,650 --> 00:04:18,620
with those but but sometimes plugins

00:04:16,159 --> 00:04:21,099
will give you easier ways of doing what

00:04:18,620 --> 00:04:21,099
you're trying to accomplish

00:04:21,890 --> 00:04:26,870
I think though I want to focus on just

00:04:25,340 --> 00:04:28,820
core Jenkins because you might find

00:04:26,870 --> 00:04:29,990
yourself in an environment where you

00:04:28,820 --> 00:04:34,340
don't have a lot of control over what

00:04:29,990 --> 00:04:37,130
plugins you're allowed to install or you

00:04:34,340 --> 00:04:39,110
know due to security or just you might

00:04:37,130 --> 00:04:44,840
be working on a server that you don't

00:04:39,110 --> 00:04:48,290
have access to do that so first of all

00:04:44,840 --> 00:04:53,000
Jenkins runs anywhere that Java runs so

00:04:48,290 --> 00:04:55,880
this means Linux Windows Mac on Linux

00:04:53,000 --> 00:04:58,640
you know all the the popular flavors so

00:04:55,880 --> 00:05:02,750
so there are packages for RAL CentOS

00:04:58,640 --> 00:05:06,080
Fedora open SUSE this is a boon to

00:05:02,750 --> 00:05:09,050
Debian and you can run Jenkins as a

00:05:06,080 --> 00:05:11,840
container there there's a supported

00:05:09,050 --> 00:05:13,640
container image for that when I say

00:05:11,840 --> 00:05:15,710
supported I mean by the community not

00:05:13,640 --> 00:05:19,760
officially supported in any capacity as

00:05:15,710 --> 00:05:22,580
far as I know and then there for Windows

00:05:19,760 --> 00:05:24,830
there's installer for for Mac OS I

00:05:22,580 --> 00:05:32,450
assume something similar but less

00:05:24,830 --> 00:05:35,660
experienced with that personally so for

00:05:32,450 --> 00:05:38,120
for Jenkins installation as I mentioned

00:05:35,660 --> 00:05:44,480
there are packages available for all the

00:05:38,120 --> 00:05:48,010
various Linux distros another option is

00:05:44,480 --> 00:05:50,930
to run a VM image so I there are some

00:05:48,010 --> 00:05:52,850
vendors out there such as I think been

00:05:50,930 --> 00:05:57,740
Nami has an image for Jenkins that you

00:05:52,850 --> 00:05:59,840
can just spin up on your infrastructure

00:05:57,740 --> 00:06:07,180
provider of choice be that you know

00:05:59,840 --> 00:06:11,960
Amazon or our Google cloud or Google or

00:06:07,180 --> 00:06:13,880
Azure or another option that might be

00:06:11,960 --> 00:06:17,660
compelling to you is is you could build

00:06:13,880 --> 00:06:22,790
a customized image that runs Jenkins

00:06:17,660 --> 00:06:24,680
using a tool like Packard i/o and as I

00:06:22,790 --> 00:06:28,700
mentioned you can also run Jenkins as a

00:06:24,680 --> 00:06:30,919
container image that's quite useful and

00:06:28,700 --> 00:06:33,440
there are a few flavors of this there

00:06:30,919 --> 00:06:36,590
there is a general Jenkins community

00:06:33,440 --> 00:06:42,020
the image that is docker Daioh slash

00:06:36,590 --> 00:06:44,780
library slash Jenkins and then a quick

00:06:42,020 --> 00:06:47,180
plug for for Red Hat OpenShift has

00:06:44,780 --> 00:06:47,840
Jenkins image that you can run as part

00:06:47,180 --> 00:06:49,760
of OpenShift

00:06:47,840 --> 00:06:52,640
and that has some integrations with

00:06:49,760 --> 00:06:57,050
OpenShift and i think you'll find in

00:06:52,640 --> 00:06:59,660
general in an environment it's

00:06:57,050 --> 00:07:01,430
advantageous to have a jenkins set up

00:06:59,660 --> 00:07:03,830
that has plug-ins that are geared

00:07:01,430 --> 00:07:09,410
towards whatever you're trying to really

00:07:03,830 --> 00:07:11,450
orchestrate so I'm not gonna talk

00:07:09,410 --> 00:07:15,110
through really installation because I

00:07:11,450 --> 00:07:16,460
think the Jenkins documentation does a

00:07:15,110 --> 00:07:18,080
great job of telling you how you really

00:07:16,460 --> 00:07:20,690
install it it's really not much more

00:07:18,080 --> 00:07:24,710
than installing a package and then

00:07:20,690 --> 00:07:26,690
starting a service once you start in

00:07:24,710 --> 00:07:30,860
that service it has a web interface that

00:07:26,690 --> 00:07:35,150
runs on port 8080 so I'm trying here

00:07:30,860 --> 00:07:38,570
I'll point out a few things so the first

00:07:35,150 --> 00:07:43,400
is and I realized that text is a little

00:07:38,570 --> 00:07:47,030
hard to read but there are menu items on

00:07:43,400 --> 00:07:49,370
the left the first one is new items so

00:07:47,030 --> 00:07:53,540
this is the entry point for you to

00:07:49,370 --> 00:07:55,340
create new automation to run in Jenkins

00:07:53,540 --> 00:07:58,730
and I'll go into detail about that in a

00:07:55,340 --> 00:08:00,140
moment and then there the other big one

00:07:58,730 --> 00:08:02,660
I wanted to point out was there's a

00:08:00,140 --> 00:08:04,250
manage drinkin's and this is if you have

00:08:02,660 --> 00:08:09,380
administrative access to that Jenkins

00:08:04,250 --> 00:08:11,390
server how you can install plug-ins how

00:08:09,380 --> 00:08:17,169
you can configure security how you can

00:08:11,390 --> 00:08:17,169
add credentials I actually would like to

00:08:17,620 --> 00:08:26,480
show that really quick so like I said

00:08:24,440 --> 00:08:29,410
it's a web app so I've just got a

00:08:26,480 --> 00:08:33,560
standard you know browser window up here

00:08:29,410 --> 00:08:35,690
as I mentioned new item is used to

00:08:33,560 --> 00:08:37,880
create jobs or pipelines and like I said

00:08:35,690 --> 00:08:40,520
I'll get into that later but I want to

00:08:37,880 --> 00:08:47,130
show a few things under the management

00:08:40,520 --> 00:08:49,019
page so you can define users

00:08:47,130 --> 00:08:52,350
you can do things like integrate with

00:08:49,019 --> 00:08:54,889
LDAP and use groups to constrain who is

00:08:52,350 --> 00:08:58,560
able to do certain things and Jenkins

00:08:54,889 --> 00:09:01,259
you can as I mentioned add credentials

00:08:58,560 --> 00:09:06,530
this is think username and password or

00:09:01,259 --> 00:09:08,389
SSH key and these are really useful

00:09:06,530 --> 00:09:12,380
[Music]

00:09:08,389 --> 00:09:12,380
shrink the screen just a touch

00:09:21,620 --> 00:09:27,590
so you can enter like I said a username

00:09:23,870 --> 00:09:29,510
and password you can include files so

00:09:27,590 --> 00:09:35,260
you might do for example like I said an

00:09:29,510 --> 00:09:37,790
SSH key and and those are useful if you

00:09:35,260 --> 00:09:40,580
if you anticipate writing some

00:09:37,790 --> 00:09:43,010
automation that needs to reach out to

00:09:40,580 --> 00:09:45,770
other systems you know if you if some of

00:09:43,010 --> 00:09:48,010
your automation might involve SSH seeing

00:09:45,770 --> 00:09:51,980
into machines and kicking off commands

00:09:48,010 --> 00:09:53,420
or you know hitting api's this is the

00:09:51,980 --> 00:09:56,150
the place where you're going to want to

00:09:53,420 --> 00:10:02,210
store the the secrets that you're using

00:09:56,150 --> 00:10:07,240
to access the services the other thing I

00:10:02,210 --> 00:10:10,850
did want to show really quickly is I

00:10:07,240 --> 00:10:14,440
mentioned plugins so if you go to this

00:10:10,850 --> 00:10:17,410
the plug-in management page in Jenkins

00:10:14,440 --> 00:10:23,570
if you go to available there's a slew of

00:10:17,410 --> 00:10:25,340
of packages and so for example if I'm if

00:10:23,570 --> 00:10:29,660
I do a search for a sure you'll see

00:10:25,340 --> 00:10:32,740
there are 51 matches for four as you're

00:10:29,660 --> 00:10:37,730
related plugins and in general any

00:10:32,740 --> 00:10:39,440
technology that most technologies that

00:10:37,730 --> 00:10:41,180
that you you know would think of

00:10:39,440 --> 00:10:42,890
especially ones that are more common

00:10:41,180 --> 00:10:45,430
like the cloud providers they have a lot

00:10:42,890 --> 00:10:47,660
of plugins available some of these are

00:10:45,430 --> 00:10:49,280
maintained by community members some of

00:10:47,660 --> 00:10:52,220
them are have a little bit more direct

00:10:49,280 --> 00:10:55,670
involvement from the cloud providers

00:10:52,220 --> 00:10:58,100
themselves but but the big thing here is

00:10:55,670 --> 00:11:00,380
this is how you typically will install

00:10:58,100 --> 00:11:03,800
plugins and get a little bit more of a

00:11:00,380 --> 00:11:06,250
first-class support for for those

00:11:03,800 --> 00:11:06,250
services

00:11:08,770 --> 00:11:17,230
so another aspect or rather a central

00:11:14,770 --> 00:11:19,570
aspect of Jenkins for understanding how

00:11:17,230 --> 00:11:23,140
things can work is that Jenkins has this

00:11:19,570 --> 00:11:27,190
concept of a node and a node is just a

00:11:23,140 --> 00:11:32,529
system that Jenkins is using to execute

00:11:27,190 --> 00:11:34,690
tasks so you might create different

00:11:32,529 --> 00:11:38,920
nodes for different tasks so you might

00:11:34,690 --> 00:11:40,600
have a node that is used for doing Linux

00:11:38,920 --> 00:11:46,450
builds you might have a node that's used

00:11:40,600 --> 00:11:52,750
for doing Windows builds the important

00:11:46,450 --> 00:11:58,779
thing here is nodes do a lot for you in

00:11:52,750 --> 00:12:04,870
terms of they provide a lot of different

00:11:58,779 --> 00:12:07,270
things so first one security is having

00:12:04,870 --> 00:12:09,550
Jenkins run automation on a separate

00:12:07,270 --> 00:12:11,380
system means that if that system gets

00:12:09,550 --> 00:12:17,520
compromised you're not compromising your

00:12:11,380 --> 00:12:20,170
entire automation server stability

00:12:17,520 --> 00:12:22,240
having that automation code being run on

00:12:20,170 --> 00:12:25,860
a separate machine the separate system

00:12:22,240 --> 00:12:30,160
means that the automation server itself

00:12:25,860 --> 00:12:35,620
is not using a lot of resources and and

00:12:30,160 --> 00:12:37,510
doesn't suffer in terms of SLA in terms

00:12:35,620 --> 00:12:38,170
of you know latency on the pages and

00:12:37,510 --> 00:12:42,220
things like that

00:12:38,170 --> 00:12:44,170
it provides isolation in that you can

00:12:42,220 --> 00:12:46,899
have a lot of different jobs running

00:12:44,170 --> 00:12:48,250
once on different systems and again you

00:12:46,899 --> 00:12:52,660
know in terms of resources have that

00:12:48,250 --> 00:12:56,560
spread out and what I hinted at a moment

00:12:52,660 --> 00:13:00,520
ago because you can create nodes on

00:12:56,560 --> 00:13:02,709
systems of different types you can do

00:13:00,520 --> 00:13:04,529
some cross-platform automation so one

00:13:02,709 --> 00:13:07,390
thing that we've used this for in

00:13:04,529 --> 00:13:09,550
subscription manager we we build

00:13:07,390 --> 00:13:13,120
subscription manager for several Linux

00:13:09,550 --> 00:13:16,329
distros including a openSUSE and we can

00:13:13,120 --> 00:13:20,440
test against openSUSE and also test

00:13:16,329 --> 00:13:23,520
against real family systems all from the

00:13:20,440 --> 00:13:23,520
same automation server

00:13:23,640 --> 00:13:29,770
so there there are many types of Jenkins

00:13:26,980 --> 00:13:33,550
nodes and I sort of just depends on your

00:13:29,770 --> 00:13:36,040
environment so the the first to sort of

00:13:33,550 --> 00:13:39,310
obvious ones are the Jenkins master

00:13:36,040 --> 00:13:41,350
itself can be used as a node so if

00:13:39,310 --> 00:13:43,900
you're doing some experimentation this

00:13:41,350 --> 00:13:47,770
it's a decent way to sort of just get

00:13:43,900 --> 00:13:50,200
started to just let the Jenkins server

00:13:47,770 --> 00:13:54,700
also run some of the scripts it's bad

00:13:50,200 --> 00:13:58,150
practice in the long run but it's an

00:13:54,700 --> 00:14:02,320
option the other really common sort of

00:13:58,150 --> 00:14:07,210
baseline node type is to setup Jenkins

00:14:02,320 --> 00:14:10,150
to SSH to another machine so that can be

00:14:07,210 --> 00:14:11,550
bare metal or provisioned however you

00:14:10,150 --> 00:14:14,190
might think to provision that machine

00:14:11,550 --> 00:14:22,270
but as long as it's got Java installed

00:14:14,190 --> 00:14:27,520
Jenkins can utilize that as node there

00:14:22,270 --> 00:14:30,850
are other options for doing scaling up

00:14:27,520 --> 00:14:33,820
and down on demand so if you're using

00:14:30,850 --> 00:14:35,500
OpenStack there's a plug-in for that if

00:14:33,820 --> 00:14:37,750
you're using cloud provider there are

00:14:35,500 --> 00:14:41,350
plugins for those to scale up and down

00:14:37,750 --> 00:14:44,740
resources bring up a compute resource

00:14:41,350 --> 00:14:46,270
use it for your automation and then tear

00:14:44,740 --> 00:14:51,010
it down when when you no longer have

00:14:46,270 --> 00:14:54,040
automation running on that and then if

00:14:51,010 --> 00:14:56,529
you are if you're using containers

00:14:54,040 --> 00:14:59,230
heavily in your environment you can

00:14:56,529 --> 00:15:03,100
provision and deprovision containers or

00:14:59,230 --> 00:15:06,750
pods on a specific system so you can say

00:15:03,100 --> 00:15:09,070
this is my kubernetes master I'd like to

00:15:06,750 --> 00:15:13,360
execute some automation inside that

00:15:09,070 --> 00:15:19,630
kubernetes cluster and utilize that four

00:15:13,360 --> 00:15:22,810
or four year nodes another concept is is

00:15:19,630 --> 00:15:24,550
the job so the job is is what was

00:15:22,810 --> 00:15:27,250
implemented originally in Jenkins

00:15:24,550 --> 00:15:31,440
it's the Freestyle job is is the more

00:15:27,250 --> 00:15:35,070
the longer more canonical term for it

00:15:31,440 --> 00:15:37,800
and and jobs are really

00:15:35,070 --> 00:15:40,740
they're pretty simple objects that they

00:15:37,800 --> 00:15:42,720
have a few components one is that they

00:15:40,740 --> 00:15:46,430
have configuration so they have things

00:15:42,720 --> 00:15:52,110
like what get repo are you connecting to

00:15:46,430 --> 00:15:54,660
and the this really ties into using

00:15:52,110 --> 00:15:58,740
Jenkins for continuous integration so

00:15:54,660 --> 00:15:59,880
you might set your get repo to the the

00:15:58,740 --> 00:16:04,500
code of the application that you're

00:15:59,880 --> 00:16:06,329
trying to build and test and there are

00:16:04,500 --> 00:16:09,269
other things in there there's retention

00:16:06,329 --> 00:16:13,170
policies for that job parameters on the

00:16:09,269 --> 00:16:16,100
job and I think a big really useful one

00:16:13,170 --> 00:16:19,290
is there's a description field and I

00:16:16,100 --> 00:16:21,569
recommend that if you create freestyle

00:16:19,290 --> 00:16:24,720
jobs that you fill in the description

00:16:21,569 --> 00:16:27,149
for whoever you know inherits that or

00:16:24,720 --> 00:16:31,079
uses that because the that's your way of

00:16:27,149 --> 00:16:34,529
documenting the job to others there are

00:16:31,079 --> 00:16:36,300
triggers which are how the job is run a

00:16:34,529 --> 00:16:40,069
couple of useful ones

00:16:36,300 --> 00:16:42,510
if you connect it to a source control

00:16:40,069 --> 00:16:48,269
system then you can trigger on things

00:16:42,510 --> 00:16:50,490
like git pushes there's also a cron like

00:16:48,269 --> 00:16:54,420
schedulers as a trigger so you can say I

00:16:50,490 --> 00:17:00,060
want to run a job at 3:00 a.m. every

00:16:54,420 --> 00:17:03,779
night and so you can use Jenkins as sort

00:17:00,060 --> 00:17:07,770
of a centralized cron server they're

00:17:03,779 --> 00:17:10,770
also build actions is where you actually

00:17:07,770 --> 00:17:14,100
define what the job should be doing so

00:17:10,770 --> 00:17:16,079
the baseline I would recommend is shell

00:17:14,100 --> 00:17:17,730
scripts so if you can write a shell

00:17:16,079 --> 00:17:21,600
script you can then take that shell

00:17:17,730 --> 00:17:23,790
script and run it using Jenkins ideally

00:17:21,600 --> 00:17:29,100
you know you keep that shell script also

00:17:23,790 --> 00:17:31,049
in source control those build actions

00:17:29,100 --> 00:17:34,650
can use parameters and they can use

00:17:31,049 --> 00:17:37,860
credentials and then finally they're

00:17:34,650 --> 00:17:41,850
post build actions which are essentially

00:17:37,860 --> 00:17:45,240
mostly just notifications so you know

00:17:41,850 --> 00:17:47,190
send an email or send a message to IRC

00:17:45,240 --> 00:17:48,640
or you know whatever your messaging

00:17:47,190 --> 00:17:50,950
platform of choice is

00:17:48,640 --> 00:17:54,490
about when the job fails or you can say

00:17:50,950 --> 00:17:56,220
you know anytime the job runs you can

00:17:54,490 --> 00:17:58,600
also use postpone actions to change jobs

00:17:56,220 --> 00:18:10,510
so you can have a job kick off another

00:17:58,600 --> 00:18:13,180
job so this is the interface that you'll

00:18:10,510 --> 00:18:17,070
see in the web UI for a freestyle job

00:18:13,180 --> 00:18:19,060
you can kind of see there there are

00:18:17,070 --> 00:18:22,150
sections there for each of the items

00:18:19,060 --> 00:18:23,710
that I mentioned so there's section to

00:18:22,150 --> 00:18:25,410
define general attributes of the job

00:18:23,710 --> 00:18:28,630
here's where the description field is

00:18:25,410 --> 00:18:32,970
they put it up there first and you know

00:18:28,630 --> 00:18:35,740
it's in your face so please fill it out

00:18:32,970 --> 00:18:37,180
there's the the triggers as I mentioned

00:18:35,740 --> 00:18:40,660
the build and then the postpone actions

00:18:37,180 --> 00:18:45,760
so the most basic way of creating the

00:18:40,660 --> 00:18:48,760
freestyle jobs is to basically fill out

00:18:45,760 --> 00:18:50,920
this form and then there's a Save button

00:18:48,760 --> 00:18:53,650
that you can't really see in the

00:18:50,920 --> 00:18:56,590
screenshot but a little bit further down

00:18:53,650 --> 00:19:00,160
the page it's a big long form with a

00:18:56,590 --> 00:19:03,120
Save button at the bottom something that

00:19:00,160 --> 00:19:05,860
we started doing which I think is useful

00:19:03,120 --> 00:19:10,020
but but but also requires a little bit

00:19:05,860 --> 00:19:13,840
more investment in terms of skill is

00:19:10,020 --> 00:19:17,320
there's a DSL that you can use to create

00:19:13,840 --> 00:19:18,850
jobs and so this is really just a way of

00:19:17,320 --> 00:19:23,260
taking all the same information that

00:19:18,850 --> 00:19:27,580
you'd put in that UI and putting that

00:19:23,260 --> 00:19:32,380
into code so the job DSL is a groovy

00:19:27,580 --> 00:19:36,250
based DSL so I've pulled up an example

00:19:32,380 --> 00:19:38,410
from one of our jobs and I'll talk

00:19:36,250 --> 00:19:41,650
through it a little bit so you can see

00:19:38,410 --> 00:19:47,290
it defines a name for the job so this

00:19:41,650 --> 00:19:48,730
this one it lands in a folder so you can

00:19:47,290 --> 00:19:51,000
see there's some variable interpolation

00:19:48,730 --> 00:19:53,650
there and I sort of emitted that bit but

00:19:51,000 --> 00:19:55,870
the name of the job is vagrant upstream

00:19:53,650 --> 00:19:58,510
images you can see I filled out a

00:19:55,870 --> 00:20:01,660
description so that folks can kind of

00:19:58,510 --> 00:20:02,230
understand what the intended uses of

00:20:01,660 --> 00:20:05,350
this job

00:20:02,230 --> 00:20:07,390
so so this job builds CentOS fedora and

00:20:05,350 --> 00:20:11,230
other bigger images for subscription

00:20:07,390 --> 00:20:16,690
manager development there's a label this

00:20:11,230 --> 00:20:21,700
says what what node what type of node

00:20:16,690 --> 00:20:25,510
the job should run on there is the SEM

00:20:21,700 --> 00:20:26,980
information so this this shows that the

00:20:25,510 --> 00:20:30,940
first thing this job should do is check

00:20:26,980 --> 00:20:34,750
out this candlepin Packer repo from

00:20:30,940 --> 00:20:39,040
github and then you can see we're using

00:20:34,750 --> 00:20:42,180
credentials here as I mentioned when you

00:20:39,040 --> 00:20:47,470
need to interact with external API or

00:20:42,180 --> 00:20:49,510
external system credentials is the way

00:20:47,470 --> 00:20:51,880
you should be doing that and then

00:20:49,510 --> 00:20:54,520
finally we have some steps in here so

00:20:51,880 --> 00:20:58,780
you can see this this job doesn't doing

00:20:54,520 --> 00:21:00,640
any notification but the the big thing

00:20:58,780 --> 00:21:05,620
that we have been doing here which I

00:21:00,640 --> 00:21:08,620
would recommend if you if you want to

00:21:05,620 --> 00:21:14,920
utilize freestyle jobs is read file from

00:21:08,620 --> 00:21:18,790
workspace allows you to keep the keep

00:21:14,920 --> 00:21:20,980
your build action the shell script part

00:21:18,790 --> 00:21:22,990
of it actually in a file in a repo

00:21:20,980 --> 00:21:26,770
rather than having that inlined here

00:21:22,990 --> 00:21:34,450
which you know is functional but is also

00:21:26,770 --> 00:21:36,570
harder to maintain the other concept of

00:21:34,450 --> 00:21:39,550
Jenkins so freestyle jobs was the

00:21:36,570 --> 00:21:40,600
original way that people use Jenkins and

00:21:39,550 --> 00:21:42,150
people would kind of chain them together

00:21:40,600 --> 00:21:45,550
and they started building out

00:21:42,150 --> 00:21:49,720
essentially pipelines in the modern way

00:21:45,550 --> 00:21:52,540
of interacting with Jenkins is some some

00:21:49,720 --> 00:21:55,810
years ago they added first-class support

00:21:52,540 --> 00:21:58,720
for this concept so rather than chaining

00:21:55,810 --> 00:22:07,680
together jobs you get the you get a way

00:21:58,720 --> 00:22:07,680
of defining an actual pipeline so

00:22:08,170 --> 00:22:17,800
these are also a groovy DSL so you can

00:22:12,730 --> 00:22:21,630
see it starts with pipeline and then you

00:22:17,800 --> 00:22:24,820
have some options around the job so this

00:22:21,630 --> 00:22:29,050
shows that we have a retention policy of

00:22:24,820 --> 00:22:31,470
keeping 50/50 of those instances of the

00:22:29,050 --> 00:22:35,320
jobs that have run around for history

00:22:31,470 --> 00:22:37,660
again you see it is set to run on a

00:22:35,320 --> 00:22:40,930
specific node and then the big thing

00:22:37,660 --> 00:22:44,290
here and this is where the pipelines and

00:22:40,930 --> 00:22:46,390
the Freestyle jobs kind of diverge in in

00:22:44,290 --> 00:22:48,880
terms of the way that they're

00:22:46,390 --> 00:22:51,430
architected the pipeline's defined

00:22:48,880 --> 00:22:54,160
stages and each of those stages is

00:22:51,430 --> 00:22:59,880
somewhat independent so you can rerun an

00:22:54,160 --> 00:22:59,880
individual stage within a pipeline and

00:23:00,090 --> 00:23:05,470
you can see that this pipeline is this

00:23:03,910 --> 00:23:09,640
is pretty typical of what you might see

00:23:05,470 --> 00:23:13,840
for continuous integration so you get a

00:23:09,640 --> 00:23:15,550
build that is you get the project

00:23:13,840 --> 00:23:17,560
checked out you get it built and then

00:23:15,550 --> 00:23:18,880
you you get it assembled and then some

00:23:17,560 --> 00:23:26,770
of the stages that are meted we do some

00:23:18,880 --> 00:23:28,480
tests and so some other things actually

00:23:26,770 --> 00:23:31,990
might be helpful to go back to this so

00:23:28,480 --> 00:23:34,300
you can see we build the project we run

00:23:31,990 --> 00:23:36,490
unit tests against it we run some

00:23:34,300 --> 00:23:39,100
linting and then we do some static

00:23:36,490 --> 00:23:44,620
analysis so all typical kind of

00:23:39,100 --> 00:23:48,400
continuous integration stuff and the big

00:23:44,620 --> 00:23:52,840
thing with with these pipelines is that

00:23:48,400 --> 00:23:55,480
if you choose to use pipelines the the

00:23:52,840 --> 00:23:58,240
convention that is quite useful is you

00:23:55,480 --> 00:24:01,480
can create a file called Jenkins file in

00:23:58,240 --> 00:24:06,930
the repo of the the code that you are

00:24:01,480 --> 00:24:09,420
trying to automate and that Jenkins file

00:24:06,930 --> 00:24:11,800
just just by having it set up that way

00:24:09,420 --> 00:24:14,830
you probably noticed in this example

00:24:11,800 --> 00:24:17,310
pipeline there was no mention of the SCM

00:24:14,830 --> 00:24:17,310
being used

00:24:18,980 --> 00:24:22,850
and so you have somewhat of a you know

00:24:21,620 --> 00:24:26,360
you have some independence from your

00:24:22,850 --> 00:24:28,430
from your se in that way and then the

00:24:26,360 --> 00:24:30,260
the pipeline can really focus on all the

00:24:28,430 --> 00:24:37,940
steps that come after the code has been

00:24:30,260 --> 00:24:39,500
checked out so for Jenkins file you can

00:24:37,940 --> 00:24:41,150
see you know a lot of you are probably

00:24:39,500 --> 00:24:43,910
thinking oh well that sounds a lot like

00:24:41,150 --> 00:24:46,460
a make file they're obviously trying to

00:24:43,910 --> 00:24:50,300
you know conjure images of that in your

00:24:46,460 --> 00:24:53,930
head through the naming anyone that's

00:24:50,300 --> 00:24:59,390
familiar with Travis Travis yeah Mille

00:24:53,930 --> 00:25:03,080
is a similar concept one piece of advice

00:24:59,390 --> 00:25:04,910
so I didn't really go into detail in

00:25:03,080 --> 00:25:08,180
that last pipeline that I was showing

00:25:04,910 --> 00:25:09,620
but that was a pipeline written in a

00:25:08,180 --> 00:25:12,410
declarative syntax so there are two

00:25:09,620 --> 00:25:16,760
syntaxes out there the declarative one

00:25:12,410 --> 00:25:18,800
is the one that the Jenkins community is

00:25:16,760 --> 00:25:20,030
really pushing at this point I would

00:25:18,800 --> 00:25:27,830
advise you try to use that one possible

00:25:20,030 --> 00:25:32,060
the other syntax they call the scripted

00:25:27,830 --> 00:25:33,610
syntax that's more powerful but you're

00:25:32,060 --> 00:25:39,290
allowed to do plain groovy in the

00:25:33,610 --> 00:25:41,840
scripted syntax which while useful makes

00:25:39,290 --> 00:25:46,330
the the pipelines often harder to

00:25:41,840 --> 00:25:50,510
maintain consistent you know style and

00:25:46,330 --> 00:25:53,660
in the declarative syntax you can always

00:25:50,510 --> 00:25:55,640
create a a block a script block to break

00:25:53,660 --> 00:25:59,680
out into the scripted syntax so there's

00:25:55,640 --> 00:25:59,680
always an escape hatch that you can use

00:26:00,190 --> 00:26:06,410
as I mentioned before it's very useful

00:26:03,980 --> 00:26:07,880
to keep the the scripts that you're

00:26:06,410 --> 00:26:09,650
actually running especially if you're

00:26:07,880 --> 00:26:14,030
writing them as bash scripts or Python

00:26:09,650 --> 00:26:17,660
scripts it's useful to keep those in the

00:26:14,030 --> 00:26:19,550
repo it's useful too rather than inline

00:26:17,660 --> 00:26:21,530
commands especially if you're doing more

00:26:19,550 --> 00:26:24,890
than one command to put those in a

00:26:21,530 --> 00:26:27,140
script this also lets you leverage

00:26:24,890 --> 00:26:29,090
skills you already have if you know bash

00:26:27,140 --> 00:26:32,500
or if you know Python or Ruby or any

00:26:29,090 --> 00:26:32,500
other scripting language

00:26:33,470 --> 00:26:37,309
- so now I want to talk a little bit

00:26:35,450 --> 00:26:38,450
about okay so so now with all these

00:26:37,309 --> 00:26:40,600
concepts what are some of the things

00:26:38,450 --> 00:26:46,100
that you can do with Jenkins

00:26:40,600 --> 00:26:50,600
so as I mentioned before Jenkins can be

00:26:46,100 --> 00:26:51,950
a central script runner so this is a

00:26:50,600 --> 00:26:54,890
good way to share your scripts you know

00:26:51,950 --> 00:26:57,860
you can put them in a repo and then set

00:26:54,890 --> 00:27:00,770
up either jobs or pipelines on the

00:26:57,860 --> 00:27:03,980
Jenkins server as a way of sharing those

00:27:00,770 --> 00:27:06,289
with others and sharing can be in terms

00:27:03,980 --> 00:27:08,630
of development so others can pull down

00:27:06,289 --> 00:27:12,010
your get repo and headed the scripts it

00:27:08,630 --> 00:27:16,880
can also be in terms of if you have

00:27:12,010 --> 00:27:19,159
people that need to interact with

00:27:16,880 --> 00:27:20,960
whatever process you've automated but

00:27:19,159 --> 00:27:23,059
you don't you you either don't trust

00:27:20,960 --> 00:27:24,350
them or they don't want the access to

00:27:23,059 --> 00:27:26,090
run the scripts by themselves you can

00:27:24,350 --> 00:27:29,030
give them a nice little interface you

00:27:26,090 --> 00:27:33,610
say here's here's a job if you hit run

00:27:29,030 --> 00:27:33,610
and then then it runs the process

00:27:35,530 --> 00:27:40,039
another one that is really useful when

00:27:38,270 --> 00:27:45,289
you're running your scripts this way in

00:27:40,039 --> 00:27:46,960
Jenkins you you get this nice log that

00:27:45,289 --> 00:27:51,700
you can always come back to you

00:27:46,960 --> 00:27:54,230
basically every run the logs are stored

00:27:51,700 --> 00:27:56,870
indefinitely by default but you can set

00:27:54,230 --> 00:27:58,820
a retention policy as you saw we did for

00:27:56,870 --> 00:28:01,429
one of our jobs but but that can be

00:27:58,820 --> 00:28:03,350
really useful if you are trying to debug

00:28:01,429 --> 00:28:06,260
because you can share a link you can say

00:28:03,350 --> 00:28:08,179
hey that last you know piece of

00:28:06,260 --> 00:28:12,919
automation failed I'm not sure why

00:28:08,179 --> 00:28:15,260
here's a link to the the log and then

00:28:12,919 --> 00:28:18,230
also it allows you to keep a history of

00:28:15,260 --> 00:28:23,240
who and what so when you when someone

00:28:18,230 --> 00:28:25,429
executes a job that you know that

00:28:23,240 --> 00:28:27,409
history of who executed that is is

00:28:25,429 --> 00:28:30,320
stored and if if you have parameters in

00:28:27,409 --> 00:28:31,760
that job or that pipeline that is also

00:28:30,320 --> 00:28:35,409
stored so you have this nice sort of

00:28:31,760 --> 00:28:40,610
little audit trail of who has done what

00:28:35,409 --> 00:28:42,679
but I do keep in mind if you if if that

00:28:40,610 --> 00:28:44,150
is a strategy you want to use keep their

00:28:42,679 --> 00:28:45,290
retention thing in mind and also keep

00:28:44,150 --> 00:28:48,380
storage in mind because

00:28:45,290 --> 00:28:50,720
as you imagine you know on if you leave

00:28:48,380 --> 00:28:58,670
that unbounded than your log storage can

00:28:50,720 --> 00:29:00,350
become an issue the other another use

00:28:58,670 --> 00:29:02,330
case for Jenkins is for continuous

00:29:00,350 --> 00:29:03,770
integration I've already talked about

00:29:02,330 --> 00:29:07,220
this a little bit and and you saw that

00:29:03,770 --> 00:29:10,700
in some of the examples that I've been

00:29:07,220 --> 00:29:12,800
showing but big thing you can execute

00:29:10,700 --> 00:29:15,680
your unit test with Jenkins you can

00:29:12,800 --> 00:29:18,250
execute your into end tests so you can

00:29:15,680 --> 00:29:22,280
do things like stand up your application

00:29:18,250 --> 00:29:25,550
you can have those in in tests living in

00:29:22,280 --> 00:29:27,430
the same codebase or in a separate code

00:29:25,550 --> 00:29:34,850
base and you can get both of those

00:29:27,430 --> 00:29:36,830
pulled in to your automation you can do

00:29:34,850 --> 00:29:40,040
static analysis with Jenkins so things

00:29:36,830 --> 00:29:41,990
like if your Python developer flake

00:29:40,040 --> 00:29:44,780
eight if you're a Java developer things

00:29:41,990 --> 00:29:46,400
like find bugs or something that's

00:29:44,780 --> 00:29:48,890
generally useful to everybody there's

00:29:46,400 --> 00:29:55,310
tool called sonar cubes that I'm quite

00:29:48,890 --> 00:29:56,990
fond of and then one interesting aspect

00:29:55,310 --> 00:30:00,410
of using Jenkins for continuous

00:29:56,990 --> 00:30:02,840
integration you can both look at pull

00:30:00,410 --> 00:30:04,460
requests so looking at changes as

00:30:02,840 --> 00:30:06,860
they're coming in and making sure that

00:30:04,460 --> 00:30:08,750
those changes meet your standards making

00:30:06,860 --> 00:30:10,490
sure you know that they don't break for

00:30:08,750 --> 00:30:13,430
existing functionality making sure that

00:30:10,490 --> 00:30:15,050
they pass whatever standards you might

00:30:13,430 --> 00:30:17,150
set in your your static analysis if

00:30:15,050 --> 00:30:18,920
you're doing that but you can also use

00:30:17,150 --> 00:30:21,230
them for long live branches so you can

00:30:18,920 --> 00:30:23,780
do things like every time master is

00:30:21,230 --> 00:30:27,680
updated run some analysis on it and keep

00:30:23,780 --> 00:30:32,300
a history of you know whether your code

00:30:27,680 --> 00:30:35,170
coverage is going up or down you can

00:30:32,300 --> 00:30:38,360
also use Jenkins for continuous delivery

00:30:35,170 --> 00:30:41,050
which delivery for for different teams

00:30:38,360 --> 00:30:46,610
means different things so for some folks

00:30:41,050 --> 00:30:48,650
delivery means doing builds so if you're

00:30:46,610 --> 00:30:50,960
doing builds of an application that's

00:30:48,650 --> 00:30:53,000
cross-platform you might have for

00:30:50,960 --> 00:30:55,670
example rpms that you build and you

00:30:53,000 --> 00:30:57,590
might have exe installers so both of

00:30:55,670 --> 00:30:59,100
those things could be built with the

00:30:57,590 --> 00:31:03,660
same

00:30:59,100 --> 00:31:05,880
underlying automation code once you have

00:31:03,660 --> 00:31:09,840
whatever artifacts you're building you

00:31:05,880 --> 00:31:12,000
can automate pushing those out to to a

00:31:09,840 --> 00:31:18,870
CDN or to whatever sort of internal

00:31:12,000 --> 00:31:21,000
location to artifact repository and you

00:31:18,870 --> 00:31:22,940
can also automate the deployment of a

00:31:21,000 --> 00:31:27,500
service so you might use something like

00:31:22,940 --> 00:31:30,270
ansible to actually automate the

00:31:27,500 --> 00:31:33,050
deployment itself and then you can use

00:31:30,270 --> 00:31:35,370
Jenkins as a way to invoke ansible

00:31:33,050 --> 00:31:39,450
and and so putting those two together

00:31:35,370 --> 00:31:42,240
you can kind of see you can you kind of

00:31:39,450 --> 00:31:46,100
get the idea that you can build out a

00:31:42,240 --> 00:31:49,020
really long pipeline where you go from

00:31:46,100 --> 00:31:52,260
you know change has happened someone

00:31:49,020 --> 00:31:55,980
opened a PR all the way through to you

00:31:52,260 --> 00:31:57,780
you have the service running and I think

00:31:55,980 --> 00:32:00,120
you know that that's the kind of thing

00:31:57,780 --> 00:32:02,760
that people strive for but you know even

00:32:00,120 --> 00:32:05,010
if you're just automating just that

00:32:02,760 --> 00:32:08,400
deployment that last step if that's

00:32:05,010 --> 00:32:15,390
still valuable and I think it's sort of

00:32:08,400 --> 00:32:17,520
a continuous journey so quick recap

00:32:15,390 --> 00:32:20,970
so Jenkins can be used for a lot of

00:32:17,520 --> 00:32:24,480
different kinds automation and if you

00:32:20,970 --> 00:32:28,770
take nothing else away I hope that you

00:32:24,480 --> 00:32:33,020
go away with you know just some ideas of

00:32:28,770 --> 00:32:34,920
how you you might use Jenkins plugins

00:32:33,020 --> 00:32:39,330
will will give you additional

00:32:34,920 --> 00:32:41,130
functionality the nodes are important

00:32:39,330 --> 00:32:42,960
because they provide some security and

00:32:41,130 --> 00:32:46,890
isolation and also allow you to do

00:32:42,960 --> 00:32:48,390
things like have Windows builds if

00:32:46,890 --> 00:32:49,950
you're in a linux environment and you

00:32:48,390 --> 00:32:52,260
have a box that you do your Windows

00:32:49,950 --> 00:32:57,570
builds on you can use that through

00:32:52,260 --> 00:33:01,590
Jenkins and big one so I showed both the

00:32:57,570 --> 00:33:02,910
Freestyle jobs and the pipelines the big

00:33:01,590 --> 00:33:05,730
thing is that if you're starting new

00:33:02,910 --> 00:33:07,080
automation you should really look at

00:33:05,730 --> 00:33:09,750
pipelines because that's the direction

00:33:07,080 --> 00:33:11,580
the Jenkins community is headed in it's

00:33:09,750 --> 00:33:15,480
not that freestyle jobs are going away

00:33:11,580 --> 00:33:19,889
but pipelines are definitely getting the

00:33:15,480 --> 00:33:24,090
most attention right now I have a few

00:33:19,889 --> 00:33:25,230
resources and I'm gonna make these this

00:33:24,090 --> 00:33:26,759
presentation available it's actually

00:33:25,230 --> 00:33:31,350
already available now you might have

00:33:26,759 --> 00:33:34,200
seen the the URL I'm gonna share that a

00:33:31,350 --> 00:33:36,210
moment but the Jenkins website has

00:33:34,200 --> 00:33:37,289
fantastic documentation for general

00:33:36,210 --> 00:33:40,649
Jenkins there's a little bit of a

00:33:37,289 --> 00:33:41,850
learning curve to the documentation as I

00:33:40,649 --> 00:33:44,220
don't know if any of you were in the

00:33:41,850 --> 00:33:46,440
other Jenkins presentation the other day

00:33:44,220 --> 00:33:48,179
but speaker there did point out you know

00:33:46,440 --> 00:33:49,710
there is a bit of a learning curve so if

00:33:48,179 --> 00:33:52,080
you go to the Jenkins documentation you

00:33:49,710 --> 00:33:53,820
think oh god and you know I'm not

00:33:52,080 --> 00:33:57,749
understanding any of this it's not just

00:33:53,820 --> 00:34:02,909
you there there's there's a bit of a hop

00:33:57,749 --> 00:34:04,440
to get over the the job DSL there

00:34:02,909 --> 00:34:07,169
there's some various links related to

00:34:04,440 --> 00:34:10,530
that here and then I've posted some

00:34:07,169 --> 00:34:13,919
other you know examples I pasted a few

00:34:10,530 --> 00:34:22,950
links to the actual Jenkins files and

00:34:13,919 --> 00:34:27,240
jobs that we are using today alright so

00:34:22,950 --> 00:34:32,510
so that's about all I have so if you

00:34:27,240 --> 00:34:34,980
have questions feel free to speak up

00:34:32,510 --> 00:34:37,109
before that thanks everybody for

00:34:34,980 --> 00:34:40,369
attending I have a couple links on here

00:34:37,109 --> 00:34:44,760
the first one is the this presentation

00:34:40,369 --> 00:34:47,210
so if you have QR code reader and get

00:34:44,760 --> 00:34:55,589
that or the bitly link is somewhat short

00:34:47,210 --> 00:34:56,970
second link I would like anyone that's

00:34:55,589 --> 00:35:01,349
willing to if you'd like to give me some

00:34:56,970 --> 00:35:04,140
feedback I'd love to know you know any

00:35:01,349 --> 00:35:06,000
suggestions for doing better on this

00:35:04,140 --> 00:35:07,770
talk any other topics you'd want to hear

00:35:06,000 --> 00:35:13,790
more about in Jenkins any of that any

00:35:07,770 --> 00:35:13,790
any feedback is good really so questions

00:35:41,070 --> 00:35:46,540
you know go to a web page fill out a

00:35:44,260 --> 00:35:48,280
form and have it basically run a script

00:35:46,540 --> 00:35:49,960
for it

00:35:48,280 --> 00:35:52,840
well what question I did have actually

00:35:49,960 --> 00:35:56,020
was in terms of like Jenkins argument

00:35:52,840 --> 00:35:59,170
like we have a Jenkins job right and you

00:35:56,020 --> 00:36:02,680
have the the job format it's filling out

00:35:59,170 --> 00:36:04,510
all right right now it seems that at

00:36:02,680 --> 00:36:08,530
least the way I've maybe we talked about

00:36:04,510 --> 00:36:09,940
this later but it uses environment

00:36:08,530 --> 00:36:11,830
variables till I passed the arguments

00:36:09,940 --> 00:36:13,900
kind of into the job or that just seems

00:36:11,830 --> 00:36:15,820
you the way it's done is there a better

00:36:13,900 --> 00:36:17,350
way of doing it I'm not a big fan of

00:36:15,820 --> 00:36:18,609
like passing around environment

00:36:17,350 --> 00:36:21,100
variables all over the place so that

00:36:18,609 --> 00:36:28,900
having to like shuffle those and say

00:36:21,100 --> 00:36:31,060
what your actual use cases so yeah so

00:36:28,900 --> 00:36:34,210
the the big thing you know

00:36:31,060 --> 00:36:36,420
Perry just mentioned that if you put

00:36:34,210 --> 00:36:40,359
parameters on a job or on a pipeline

00:36:36,420 --> 00:36:42,400
those end up in the execution context is

00:36:40,359 --> 00:36:45,100
environment variables and so he was

00:36:42,400 --> 00:36:47,230
asking you know well that seems sort of

00:36:45,100 --> 00:36:52,000
inconvenient their use cases that that's

00:36:47,230 --> 00:36:54,369
not like any fun so I would advise

00:36:52,000 --> 00:36:56,080
actually look at credentials as a way of

00:36:54,369 --> 00:36:58,000
resolving that because you know if the

00:36:56,080 --> 00:37:03,760
thing that you're trying to inject say

00:36:58,000 --> 00:37:04,990
is maybe a configuration if what you

00:37:03,760 --> 00:37:06,730
were gonna end up doing with that

00:37:04,990 --> 00:37:07,780
anyways is building configuration file

00:37:06,730 --> 00:37:09,369
well you can just stick the

00:37:07,780 --> 00:37:15,060
configuration file in Jenkins as a

00:37:09,369 --> 00:37:15,060
credential and then inject that and

00:37:15,260 --> 00:37:26,990
oh I guess when I was war looking for

00:37:25,310 --> 00:37:34,370
was something like yeah you're right

00:37:26,990 --> 00:37:37,220
but whether well I really just wanted to

00:37:34,370 --> 00:37:40,370
like give me the arguments in JSON or

00:37:37,220 --> 00:37:43,300
Yale format and they'd be able to

00:37:40,370 --> 00:37:51,140
disperse them myself right as opposed

00:37:43,300 --> 00:37:53,900
right and so I have seen I've seen some

00:37:51,140 --> 00:37:56,060
examples of passing an entire you know

00:37:53,900 --> 00:37:58,910
JSON string has an environment variable

00:37:56,060 --> 00:38:00,290
and then later on and the job doing some

00:37:58,910 --> 00:38:03,400
parsing of that and you know the Python

00:38:00,290 --> 00:38:05,420
script or Ruby script or what have you

00:38:03,400 --> 00:38:11,180
unfortunately that's just sort of the

00:38:05,420 --> 00:38:12,530
the mechanism that is used for passing

00:38:11,180 --> 00:38:14,870
parameters and Jenkins is the

00:38:12,530 --> 00:38:18,020
environment variable so you can do

00:38:14,870 --> 00:38:20,120
things to kind of you know work around

00:38:18,020 --> 00:38:22,760
that but there's no getting around that

00:38:20,120 --> 00:38:24,940
that's just the way that the parameters

00:38:22,760 --> 00:38:24,940
work

00:38:34,549 --> 00:38:48,269
yeah actually I launched one earlier

00:38:39,119 --> 00:38:49,920
today with pod man what was was there a

00:38:48,269 --> 00:38:59,700
specific thing you wanted to see in a

00:38:49,920 --> 00:39:03,170
live Jenkins yeah so so as I mentioned

00:38:59,700 --> 00:39:05,910
you get a web UI and that's on port 8080

00:39:03,170 --> 00:39:07,920
so when when you first install Jenkins

00:39:05,910 --> 00:39:09,329
what you'll get is is you'll get an

00:39:07,920 --> 00:39:11,849
initial administrator password and then

00:39:09,329 --> 00:39:17,670
it asks you to create a user so I will

00:39:11,849 --> 00:39:21,650
log out and log back in so it's a pretty

00:39:17,670 --> 00:39:26,460
typical web app you know you've got you

00:39:21,650 --> 00:39:31,579
log in you've got some user management

00:39:26,460 --> 00:39:37,710
in here so if I go for example to

00:39:31,579 --> 00:39:39,960
security there are several ways to and

00:39:37,710 --> 00:39:42,119
integrate users with Jenkins one of them

00:39:39,960 --> 00:39:44,279
as I mentioned before is to integrate

00:39:42,119 --> 00:39:45,569
with an LDAP database which is useful if

00:39:44,279 --> 00:39:47,880
you're in an organization that already

00:39:45,569 --> 00:39:50,460
has that kind of things stood up but if

00:39:47,880 --> 00:39:51,900
you're experimenting or you you just

00:39:50,460 --> 00:39:56,549
want to set up something independent of

00:39:51,900 --> 00:39:59,039
that Jenkins has its own user database

00:39:56,549 --> 00:40:07,140
that you can use you can create new

00:39:59,039 --> 00:40:12,380
users always forget where the actual

00:40:07,140 --> 00:40:12,380
create new user is

00:40:13,610 --> 00:40:21,620
yeah people thank you and then

00:40:19,130 --> 00:40:25,070
unfortunately one thing I actually am

00:40:21,620 --> 00:40:30,580
NOT a huge fan of is a lot of things and

00:40:25,070 --> 00:40:30,580
Jenkins are in this sort of side menu

00:40:37,510 --> 00:40:43,010
yeah and I actually wonder if the user

00:40:40,970 --> 00:40:45,800
that I created initially doesn't

00:40:43,010 --> 00:40:55,070
actually have admin so I'll login as

00:40:45,800 --> 00:40:58,160
admin actually so so funny thing about

00:40:55,070 --> 00:40:59,630
the admin user there's this big long

00:40:58,160 --> 00:41:03,020
string that they give you when you

00:40:59,630 --> 00:41:04,490
install Jenkins and I'd have to go dig

00:41:03,020 --> 00:41:16,390
that string out if I want to log in as

00:41:04,490 --> 00:41:19,390
admin well it's all under manage Jenkins

00:41:16,390 --> 00:41:19,390
whoops

00:41:31,100 --> 00:41:37,340
and and I believe it is actually under

00:41:34,480 --> 00:41:40,210
global security I just don't recall how

00:41:37,340 --> 00:41:42,230
to add a new you can do this you can

00:41:40,210 --> 00:41:46,100
check the checkbox and a lot of people

00:41:42,230 --> 00:41:49,010
to create their own user and I believe

00:41:46,100 --> 00:41:52,310
if I had logged in with the admin user

00:41:49,010 --> 00:41:54,020
which I'm not gonna go dig out the the

00:41:52,310 --> 00:41:55,520
credential for that at the moment but I

00:41:54,020 --> 00:41:58,190
think if I had logged in as the admin

00:41:55,520 --> 00:42:11,660
user out of had another menu item here

00:41:58,190 --> 00:42:13,490
for creating users good you had said

00:42:11,660 --> 00:42:16,070
that it hooks into like cloud resources

00:42:13,490 --> 00:42:17,510
and OpenStack do you know of any other

00:42:16,070 --> 00:42:21,650
hypervisors that it could hook into

00:42:17,510 --> 00:42:24,500
because I'm looking at essentially using

00:42:21,650 --> 00:42:26,000
Packer to build images and it's going to

00:42:24,500 --> 00:42:28,850
need essentially bare metal performance

00:42:26,000 --> 00:42:30,860
or bare metal to enable it so I've

00:42:28,850 --> 00:42:34,970
already got it to where I passed through

00:42:30,860 --> 00:42:39,410
the CPU to allow whatever it's actually

00:42:34,970 --> 00:42:41,570
exposes the CPU to the VM so I was

00:42:39,410 --> 00:42:45,220
curious if you know does it work do you

00:42:41,570 --> 00:42:45,220
just like install the agent on the VM

00:42:45,400 --> 00:42:51,020
yeah so so there are a few ways to get

00:42:48,230 --> 00:42:52,730
agents running the the most

00:42:51,020 --> 00:42:54,110
straightforward one is the SSH one and

00:42:52,730 --> 00:42:56,750
most people are familiar with SSH and

00:42:54,110 --> 00:43:00,110
have machines that they can SSH into but

00:42:56,750 --> 00:43:02,750
one thing you can also do you can launch

00:43:00,110 --> 00:43:05,450
the Jenkins agent and point it back at

00:43:02,750 --> 00:43:10,220
the Jenkins server so it's almost the

00:43:05,450 --> 00:43:13,130
other way around if you're using you

00:43:10,220 --> 00:43:16,280
know hypervisor like VMware there there

00:43:13,130 --> 00:43:21,200
is a plug-in for that as I said before

00:43:16,280 --> 00:43:24,530
if I'm surprised when Jenkins doesn't

00:43:21,200 --> 00:43:26,480
have a plugin for for some especially

00:43:24,530 --> 00:43:30,530
infrastructure or platform related

00:43:26,480 --> 00:43:37,780
service so for example if I go here in

00:43:30,530 --> 00:43:37,780
Jenkins and then go to plugins available

00:43:44,030 --> 00:43:57,980
so there are seven matches yeah yeah

00:43:55,310 --> 00:43:59,840
they've done a lot in Jenkins one thing

00:43:57,980 --> 00:44:04,400
I didn't mention but is is useful to

00:43:59,840 --> 00:44:06,530
know when you come to this front page

00:44:04,400 --> 00:44:08,450
they they have an area here while the

00:44:06,530 --> 00:44:09,920
word they'll display if you have you

00:44:08,450 --> 00:44:11,660
know plugins that are outdated with

00:44:09,920 --> 00:44:14,000
known vulnerabilities if you go to

00:44:11,660 --> 00:44:16,970
manage Jenkins there's a whole slew that

00:44:14,000 --> 00:44:22,810
will show up here if you have stale data

00:44:16,970 --> 00:44:22,810
or if you have known vulnerabilities

00:44:23,920 --> 00:44:26,920
yeah

00:44:29,030 --> 00:44:32,590
any other questions

00:44:37,260 --> 00:44:43,000
how's that

00:44:39,030 --> 00:44:46,630
bread bent Lassiter's book I'm drinking

00:44:43,000 --> 00:44:50,020
I have not actually most of my

00:44:46,630 --> 00:44:55,539
experience with Jenkins has been sort of

00:44:50,020 --> 00:44:58,809
self learning I've used it so honestly

00:44:55,539 --> 00:45:00,670
ever since I started at Red Hat a little

00:44:58,809 --> 00:45:03,299
more than five years ago I was on an IT

00:45:00,670 --> 00:45:05,349
team that used Jenkins pretty heavily

00:45:03,299 --> 00:45:07,990
started building out some pipelines with

00:45:05,349 --> 00:45:10,569
the Freestyle jobs and then have

00:45:07,990 --> 00:45:13,030
continued to do Jenkins work since then

00:45:10,569 --> 00:45:17,500
and the the tricky thing I would say

00:45:13,030 --> 00:45:21,849
about any sort of books is that Jenkins

00:45:17,500 --> 00:45:24,039
is is evolving very very quickly so the

00:45:21,849 --> 00:45:25,329
the pipeline thing is is someone newer

00:45:24,039 --> 00:45:28,150
and if you if you talk with someone

00:45:25,329 --> 00:45:30,670
about Jenkins they may or may not even

00:45:28,150 --> 00:45:33,599
know about the the pipeline thing they

00:45:30,670 --> 00:45:37,240
they may think about the pattern of

00:45:33,599 --> 00:45:40,890
changing jobs together and that might be

00:45:37,240 --> 00:45:46,089
what they think of when you say pipeline

00:45:40,890 --> 00:45:47,440
the UI is also going through an overhaul

00:45:46,089 --> 00:45:50,289
there's there's a project called blue

00:45:47,440 --> 00:45:54,130
ocean so even you know the UI that I've

00:45:50,289 --> 00:46:04,680
shown you may not be there for you know

00:45:54,130 --> 00:46:04,680
forever any other questions comments

00:46:08,570 --> 00:46:18,869
so this is a very basic setup I did

00:46:15,990 --> 00:46:22,820
import a couple of things into it but I

00:46:18,869 --> 00:46:25,290
kind of stubbed them out afterwards so I

00:46:22,820 --> 00:46:27,869
will I can talk through a couple things

00:46:25,290 --> 00:46:30,060
though so so when you do new item as I

00:46:27,869 --> 00:46:30,630
mentioned there's freestyle job as an

00:46:30,060 --> 00:46:34,619
option

00:46:30,630 --> 00:46:37,050
there's also pipeline as an option and

00:46:34,619 --> 00:46:38,700
these are both you know you go through

00:46:37,050 --> 00:46:41,310
the UI and you define what you want to

00:46:38,700 --> 00:46:44,640
do so pipeline you could either tell it

00:46:41,310 --> 00:46:46,680
to check out a script from a repo or you

00:46:44,640 --> 00:46:50,609
could paste in the the pipeline code

00:46:46,680 --> 00:46:52,109
itself the option one option that we've

00:46:50,609 --> 00:46:54,780
been using a lot lately that's quite

00:46:52,109 --> 00:46:56,790
nice is this multi branch pipeline so

00:46:54,780 --> 00:46:59,160
what this does is if you have code out

00:46:56,790 --> 00:47:04,109
on github for some project that has a

00:46:59,160 --> 00:47:06,330
jenkins file in the repo this will will

00:47:04,109 --> 00:47:09,930
scan all the branches of that particular

00:47:06,330 --> 00:47:14,190
project you know you can figure it and

00:47:09,930 --> 00:47:15,810
then it will execute the the pipeline

00:47:14,190 --> 00:47:17,960
for each of the branches as they as they

00:47:15,810 --> 00:47:21,150
have changes and you can define rules on

00:47:17,960 --> 00:47:24,359
what's branches it should be operating

00:47:21,150 --> 00:47:26,070
on you can define define rules about

00:47:24,359 --> 00:47:27,180
whether it should build PRS or not

00:47:26,070 --> 00:47:29,849
whether it should just put branches

00:47:27,180 --> 00:47:34,619
whether you want to build PRS from

00:47:29,849 --> 00:47:41,910
external Forks or just you know PRS from

00:47:34,619 --> 00:47:44,760
the from that repo itself but as I said

00:47:41,910 --> 00:47:46,820
I did spin up a couple real real quick

00:47:44,760 --> 00:47:51,300
here I was I was mainly using these as

00:47:46,820 --> 00:47:52,830
an aid to get some screenshots but you

00:47:51,300 --> 00:47:57,170
can see here I pointed it at this

00:47:52,830 --> 00:47:57,170
project that we've been working on and

00:47:57,320 --> 00:48:05,310
all had to do with with this multi

00:48:00,599 --> 00:48:06,900
branch setup is tell it I want to look

00:48:05,310 --> 00:48:10,170
at this organization and then I had to

00:48:06,900 --> 00:48:12,150
give it repo and then with those two

00:48:10,170 --> 00:48:15,390
pieces of information I think I left

00:48:12,150 --> 00:48:17,490
pretty much everything else default with

00:48:15,390 --> 00:48:19,450
that and the Jenkins file in the repo

00:48:17,490 --> 00:48:23,980
that's enough to get it to

00:48:19,450 --> 00:48:26,980
go out and examine the branches that are

00:48:23,980 --> 00:48:31,539
out there and it will also examine the

00:48:26,980 --> 00:48:33,490
PRS and then like I said it will execute

00:48:31,539 --> 00:48:37,119
the the pipeline for each of the

00:48:33,490 --> 00:48:38,859
branches in each of the PRS with the

00:48:37,119 --> 00:48:41,500
cavity being that you know it will take

00:48:38,859 --> 00:48:42,579
into account any rules that you've said

00:48:41,500 --> 00:48:50,799
I don't want branches they should look

00:48:42,579 --> 00:48:53,049
at the Freestyle job that one's also

00:48:50,799 --> 00:48:55,349
pipeline but freestyle job I can I can

00:48:53,049 --> 00:49:04,779
spin one up right now

00:48:55,349 --> 00:49:08,619
you know because why not so it can be as

00:49:04,779 --> 00:49:11,740
simple as I've got a shell script that I

00:49:08,619 --> 00:49:14,260
want to run and I can skip all these

00:49:11,740 --> 00:49:21,220
other options and just say let me run a

00:49:14,260 --> 00:49:24,069
shell and I want to I'm not gonna do

00:49:21,220 --> 00:49:25,539
anything fancy I just like date there so

00:49:24,069 --> 00:49:29,170
what's gonna do is they're on the date

00:49:25,539 --> 00:49:31,420
command and then the output of the job

00:49:29,170 --> 00:49:36,220
will just be the date so if I hadn't

00:49:31,420 --> 00:49:41,079
build now I can then go in and you can

00:49:36,220 --> 00:49:43,809
see I'll blow it up anyways you can see

00:49:41,079 --> 00:49:47,440
I've got this date command that's been

00:49:43,809 --> 00:49:50,460
executed I like I mentioned before you

00:49:47,440 --> 00:49:53,170
know you can sit you can take this link

00:49:50,460 --> 00:49:54,460
kind of hard to see there but you can

00:49:53,170 --> 00:49:58,240
take this link and you can send it to

00:49:54,460 --> 00:50:00,460
anyone else who you know can reach that

00:49:58,240 --> 00:50:03,190
Jenkins server and they can they can see

00:50:00,460 --> 00:50:07,359
the same logs you can send them the job

00:50:03,190 --> 00:50:10,059
and if you have authorized them to

00:50:07,359 --> 00:50:11,529
access Jenkins they can hit that build

00:50:10,059 --> 00:50:13,359
now button and do the same thing that

00:50:11,529 --> 00:50:15,549
you just did so you can start to imagine

00:50:13,359 --> 00:50:18,549
you know you put some scripts in there

00:50:15,549 --> 00:50:21,190
that perform some processes and you've

00:50:18,549 --> 00:50:22,900
you're you don't have to necessarily run

00:50:21,190 --> 00:50:25,960
those scripts anymore you know you can

00:50:22,900 --> 00:50:28,240
have you know even a manager who doesn't

00:50:25,960 --> 00:50:29,829
want to or can't it doesn't feel

00:50:28,240 --> 00:50:32,019
comfortable with writing code they could

00:50:29,829 --> 00:50:34,329
they can then you know run those same

00:50:32,019 --> 00:50:36,410
scripts

00:50:34,329 --> 00:50:38,390
another quick thing I can show I

00:50:36,410 --> 00:50:45,519
mentioned parameters if you have a

00:50:38,390 --> 00:50:45,519
script that say I'll just throw in

00:50:45,759 --> 00:51:03,289
parameter called foo and I'll say echo

00:50:56,919 --> 00:51:06,169
food for some simplicity so now when I

00:51:03,289 --> 00:51:08,689
hit build I get a page that asks me to

00:51:06,169 --> 00:51:12,729
put in some parameters so now I have a

00:51:08,689 --> 00:51:12,729
parameter for foo and if I put in

00:51:14,890 --> 00:51:25,279
hello self and then hit build on that

00:51:17,809 --> 00:51:31,309
now I'm executing you know script with

00:51:25,279 --> 00:51:33,709
with an argument to it and yep so they

00:51:31,309 --> 00:51:41,179
become environment variables again yeah

00:51:33,709 --> 00:51:43,669
that yeah so so yeah I think the

00:51:41,179 --> 00:51:45,949
Freestyle job is actually much more

00:51:43,669 --> 00:51:49,609
approachable than pipelines just to kind

00:51:45,949 --> 00:51:51,979
of get started with but like I said

00:51:49,609 --> 00:51:54,499
before if you're starting like a new

00:51:51,979 --> 00:51:55,999
automation project you should have

00:51:54,499 --> 00:51:59,869
definitely consider starting with

00:51:55,999 --> 00:52:02,659
pipelines because that is the strategy

00:51:59,869 --> 00:52:05,049
the syntax that the community is pushing

00:52:02,659 --> 00:52:05,049
forward

00:52:13,069 --> 00:52:18,959
yeah so question for anyone either

00:52:16,589 --> 00:52:20,069
watching later streaming was do I have

00:52:18,959 --> 00:52:25,199
any recommendations for setting up

00:52:20,069 --> 00:52:28,140
Jenkins securely so I would say the the

00:52:25,199 --> 00:52:29,789
biggest thing is don't if you can help

00:52:28,140 --> 00:52:34,549
it run Jenkins and a publicly accessible

00:52:29,789 --> 00:52:36,979
location there are folks that do and I

00:52:34,549 --> 00:52:39,779
cringe when I hear about it because

00:52:36,979 --> 00:52:43,109
basically you know your Jenkins server

00:52:39,779 --> 00:52:45,449
is is a machine that has some sort of

00:52:43,109 --> 00:52:47,609
shell access that as you've seen is

00:52:45,449 --> 00:52:52,589
pretty you know pretty easy to go in

00:52:47,609 --> 00:52:55,769
there and just play with and so so

00:52:52,589 --> 00:52:58,499
there's that first second thing is you

00:52:55,769 --> 00:53:00,809
know and it's gonna kind of depend on

00:52:58,499 --> 00:53:04,499
your use case but if you can use an

00:53:00,809 --> 00:53:06,269
existing you know LDAP for example if

00:53:04,499 --> 00:53:09,869
you can use LDAP in your organization

00:53:06,269 --> 00:53:12,989
you can then restrict that Jenkins

00:53:09,869 --> 00:53:16,289
server to say perhaps an LDAP group or

00:53:12,989 --> 00:53:21,689
maybe a few individuals it really starts

00:53:16,289 --> 00:53:23,459
there the the other thing is that like

00:53:21,689 --> 00:53:25,880
like like you do generally for an

00:53:23,459 --> 00:53:25,880
application

00:53:26,869 --> 00:53:33,150
don't create over privileged processes

00:53:30,599 --> 00:53:36,179
if you can help it so if you can avoid

00:53:33,150 --> 00:53:40,519
having your your Jenkins master being

00:53:36,179 --> 00:53:44,130
able to sudo on nodes that's helpful

00:53:40,519 --> 00:53:46,380
running inside of ephemeral compute

00:53:44,130 --> 00:53:48,150
resources is nice because you don't have

00:53:46,380 --> 00:53:50,069
a box that's just sitting out there that

00:53:48,150 --> 00:53:54,599
someone can just SSH into at any time of

00:53:50,069 --> 00:53:58,380
the day but I to be honest I think you

00:53:54,599 --> 00:54:01,619
know someone with I think that that

00:53:58,380 --> 00:54:03,449
could be its own presentation and I do

00:54:01,619 --> 00:54:09,659
have some thoughts but I'm by no means

00:54:03,449 --> 00:54:10,769
an expert on hardening Jenkins yeah any

00:54:09,659 --> 00:54:13,309
other questions

00:54:10,769 --> 00:54:13,309
or anybody

00:54:20,439 --> 00:54:25,819
okay so the question was is there an

00:54:22,939 --> 00:54:28,819
interactive shell within Jenkins yes but

00:54:25,819 --> 00:54:34,009
not what you're thinking about so if you

00:54:28,819 --> 00:54:37,039
go to manage Jenkins there is a script

00:54:34,009 --> 00:54:41,479
console this script console runs groovy

00:54:37,039 --> 00:54:45,619
scripts and these run in the context of

00:54:41,479 --> 00:54:47,419
the Jenkins master so you can introspect

00:54:45,619 --> 00:54:49,279
things in Jenkins and anybody that has

00:54:47,419 --> 00:54:52,759
administrative access is a lot of power

00:54:49,279 --> 00:54:55,609
through this basically you know going

00:54:52,759 --> 00:54:57,049
back to security point giving someone

00:54:55,609 --> 00:54:58,849
administrative access is very scary

00:54:57,049 --> 00:55:01,339
because they you know you can do things

00:54:58,849 --> 00:55:03,319
like go into the credential store and

00:55:01,339 --> 00:55:06,380
extract credentials and just type them

00:55:03,319 --> 00:55:08,509
out somewhere you can do things like I

00:55:06,380 --> 00:55:11,319
had a little fun with this once we had

00:55:08,509 --> 00:55:14,630
some IRC notifications you can you know

00:55:11,319 --> 00:55:17,380
send it by our C messages as Jenkins you

00:55:14,630 --> 00:55:17,380
know things like that

00:55:29,160 --> 00:55:39,089
so everything gets run as what what you

00:55:34,569 --> 00:55:41,680
set up to SSH NS so I would suggest

00:55:39,089 --> 00:55:45,130
creating a Jenkins user that has some

00:55:41,680 --> 00:55:46,569
limited privileges and then if you you

00:55:45,130 --> 00:55:50,789
need to run in the context of another

00:55:46,569 --> 00:55:54,970
user you know you can use sudo for that

00:55:50,789 --> 00:55:56,380
you could also define different users

00:55:54,970 --> 00:56:02,710
there's nothing stopping you from saying

00:55:56,380 --> 00:56:05,079
I want to run as a user you know as some

00:56:02,710 --> 00:56:06,880
other user with less privileges there's

00:56:05,079 --> 00:56:10,900
a lot of freedom in how you actually set

00:56:06,880 --> 00:56:12,009
up Jenkins so yeah it's it's it's the

00:56:10,900 --> 00:56:13,809
kind of thing you could definitely think

00:56:12,009 --> 00:56:20,559
of a million ways to accomplish what

00:56:13,809 --> 00:56:21,249
you're what you're trying to do yeah all

00:56:20,559 --> 00:56:25,630
right

00:56:21,249 --> 00:56:27,009
well thanks again everyone as I said any

00:56:25,630 --> 00:56:28,299
feedback you have for me is much

00:56:27,009 --> 00:56:30,759
appreciated

00:56:28,299 --> 00:56:34,180
this presentation is actually as of this

00:56:30,759 --> 00:56:38,200
morning available online I've got a QR

00:56:34,180 --> 00:56:40,480
code and link there but you can also

00:56:38,200 --> 00:56:42,549
just go to Kay a house and go to

00:56:40,480 --> 00:56:45,779
presentations and it'll be there if

00:56:42,549 --> 00:56:45,779
you'd like to view later

00:56:47,940 --> 00:56:53,539
[Applause]

00:57:15,350 --> 00:57:20,120
actually have a vagrant image that we

00:57:18,470 --> 00:57:22,910
spin up a Jenkins server and we do our

00:57:20,120 --> 00:57:24,320
development of new jobs or pipelines

00:57:22,910 --> 00:57:25,670
against that rather than running them

00:57:24,320 --> 00:57:28,400
against you know the production of

00:57:25,670 --> 00:57:29,540
Jenkins server and that's a good pattern

00:57:28,400 --> 00:57:33,770
because then you know you don't have

00:57:29,540 --> 00:57:36,250
people having you know bad mistakes on

00:57:33,770 --> 00:57:36,250

YouTube URL: https://www.youtube.com/watch?v=_kwZqlLZrUo


