Title: Wes Widner - DIY Jarvis - Building your own open source voice assistant
Publication date: 2019-06-18
Playlist: 2019 SouthEast LinuxFest
Description: 
	SouthEast Linux Fest 2019
Audio assistants are a fascinating way to interact with computers. They've been in our science fiction for decades and they've been the focus of computer scientists for just as long. In this talk I'll walk you through how you can go about building your own voice assistant using Raspberry Pi's. We'll cover everything from the hardware to the machine learning needed to build your own voice recognition models. By the end you should have everything you need to go build your own voice assistant.
Captions: 
	00:00:00,000 --> 00:00:03,770
spend a whole lot of time for many of

00:00:01,560 --> 00:00:06,509
you justifying like why this whole

00:00:03,770 --> 00:00:09,809
having a voice assistant is like a

00:00:06,509 --> 00:00:13,320
really like near and dear topic to my

00:00:09,809 --> 00:00:15,630
heart there's there's a long history of

00:00:13,320 --> 00:00:18,869
voice assistance it goes all the way

00:00:15,630 --> 00:00:20,039
back to to the 50s or so but in

00:00:18,869 --> 00:00:23,580
particular I wanted to highlight a few

00:00:20,039 --> 00:00:25,710
things here one like the the Knight

00:00:23,580 --> 00:00:27,689
Rider logo there it's in our science

00:00:25,710 --> 00:00:29,220
fiction all over the place like

00:00:27,689 --> 00:00:30,090
interacting with the computer just by

00:00:29,220 --> 00:00:32,669
talking with it

00:00:30,090 --> 00:00:35,070
it's been there forever it's also been

00:00:32,669 --> 00:00:38,670
portrayed as as evil as Hal's their

00:00:35,070 --> 00:00:40,800
point of trivia the creator of Tetris

00:00:38,670 --> 00:00:43,379
was actually working when he was in

00:00:40,800 --> 00:00:45,270
Russia working with the KGB because

00:00:43,379 --> 00:00:47,879
everybody had to work in that capacity

00:00:45,270 --> 00:00:49,289
at some point he pointed out or at least

00:00:47,879 --> 00:00:53,730
it's a legend that he was working on

00:00:49,289 --> 00:00:55,649
voice a voice assistant technology for

00:00:53,730 --> 00:00:57,870
the MIG fighter jets which I thought was

00:00:55,649 --> 00:01:01,500
kind of interesting and later on went to

00:00:57,870 --> 00:01:04,949
create Tetris and never look back so the

00:01:01,500 --> 00:01:07,170
whole point of this is that you know the

00:01:04,949 --> 00:01:09,150
Jarvis just a rather a very intelligent

00:01:07,170 --> 00:01:12,180
system I didn't realize what Jarvis

00:01:09,150 --> 00:01:14,760
stood for until recently I would argue

00:01:12,180 --> 00:01:16,619
that the the one of the most interesting

00:01:14,760 --> 00:01:18,060
things about Iron Man is that he had

00:01:16,619 --> 00:01:20,390
this assistant that he could just talk

00:01:18,060 --> 00:01:24,869
to and it would do things on his behalf

00:01:20,390 --> 00:01:26,610
so that's why about two years ago when

00:01:24,869 --> 00:01:28,880
the voice assistant explosion came out

00:01:26,610 --> 00:01:32,549
we ended up buying like four different

00:01:28,880 --> 00:01:35,130
Amazon Alexis and we even have an Alexa

00:01:32,549 --> 00:01:36,600
in our car it's hooked up through this

00:01:35,130 --> 00:01:39,780
weird process that I could get into

00:01:36,600 --> 00:01:41,400
later if you're interested but my whole

00:01:39,780 --> 00:01:43,439
thing is I want to just be able to tell

00:01:41,400 --> 00:01:44,490
it to play a song when I'm thinking

00:01:43,439 --> 00:01:47,189
about it now I don't want to have to go

00:01:44,490 --> 00:01:48,329
digging through like clicking through a

00:01:47,189 --> 00:01:49,950
bunch of different windows or whatever

00:01:48,329 --> 00:01:52,770
else and all this other stuff

00:01:49,950 --> 00:01:55,439
I just want to naturally speak to well

00:01:52,770 --> 00:01:57,899
that led off having that many voice

00:01:55,439 --> 00:01:58,969
assistants kind of led into how do they

00:01:57,899 --> 00:02:02,369
work

00:01:58,969 --> 00:02:04,110
coming from an info sex side what are

00:02:02,369 --> 00:02:06,119
there ways that they can be attacked and

00:02:04,110 --> 00:02:08,039
I have a whole other like talk on how to

00:02:06,119 --> 00:02:10,020
attack voice assistants and and their

00:02:08,039 --> 00:02:13,090
their surface area their attack surface

00:02:10,020 --> 00:02:15,370
area but this it kind of was born

00:02:13,090 --> 00:02:16,379
of that interest as well like how could

00:02:15,370 --> 00:02:19,030
I make it my own

00:02:16,379 --> 00:02:20,980
how could how could I build my own what

00:02:19,030 --> 00:02:25,300
are the basic building blocks and all

00:02:20,980 --> 00:02:27,400
this other stuff so the very first piece

00:02:25,300 --> 00:02:29,560
of a voice assistant is just getting

00:02:27,400 --> 00:02:32,500
access to the audio how many of you ever

00:02:29,560 --> 00:02:35,590
wrestled with pulseaudio or any of the

00:02:32,500 --> 00:02:37,480
audio subsystem in your your system how

00:02:35,590 --> 00:02:39,010
many of you have ever like actually dug

00:02:37,480 --> 00:02:42,580
into it to figure out what it's doing

00:02:39,010 --> 00:02:44,200
that's another question now for those of

00:02:42,580 --> 00:02:46,000
you who haven't because I hadn't until I

00:02:44,200 --> 00:02:49,329
started wrestling with this like how can

00:02:46,000 --> 00:02:52,030
I even get started developing an

00:02:49,329 --> 00:02:55,209
application that works with a microphone

00:02:52,030 --> 00:02:58,030
and a speaker and the the nutshell here

00:02:55,209 --> 00:03:00,190
is on a Linux system because we are at

00:02:58,030 --> 00:03:04,060
the southeast Lenox fest I figure I need

00:03:00,190 --> 00:03:06,280
to to point that out the the hardware

00:03:04,060 --> 00:03:08,349
layer is the advanced linux sound

00:03:06,280 --> 00:03:10,299
architecture that is the driver layer

00:03:08,349 --> 00:03:12,819
that's the part that actually deals with

00:03:10,299 --> 00:03:14,920
with the the kernel modules for the

00:03:12,819 --> 00:03:17,200
scissor for whatever sound card or

00:03:14,920 --> 00:03:20,260
whatever else you have on top of that

00:03:17,200 --> 00:03:22,180
you have pulse audio pulse audio as an

00:03:20,260 --> 00:03:25,389
abstraction over the earth sound layer

00:03:22,180 --> 00:03:26,889
pulse audio is usually run as as the

00:03:25,389 --> 00:03:29,560
user that's running the system in fact

00:03:26,889 --> 00:03:31,090
they have a lot of built-in checks to

00:03:29,560 --> 00:03:33,280
say you can't run it as route as a

00:03:31,090 --> 00:03:35,859
system service the reason that comes

00:03:33,280 --> 00:03:38,859
into play is when you go to him

00:03:35,859 --> 00:03:40,180
implement this on Raspberry Pi you're

00:03:38,859 --> 00:03:41,889
going to want to run it as a system

00:03:40,180 --> 00:03:44,079
Damon and pulseaudio will fight you for

00:03:41,889 --> 00:03:45,609
it there's there's ways around that but

00:03:44,079 --> 00:03:48,459
the great thing about pulseaudio

00:03:45,609 --> 00:03:51,010
is that it has connectors to almost

00:03:48,459 --> 00:03:55,180
every system that that you would want to

00:03:51,010 --> 00:03:56,739
run it on so it has a savants linux

00:03:55,180 --> 00:03:57,010
sound architecture that's one of the

00:03:56,739 --> 00:04:00,280
ones

00:03:57,010 --> 00:04:01,840
it'll also hook into core audio and I'm

00:04:00,280 --> 00:04:04,090
not supposed to say this but at a Linux

00:04:01,840 --> 00:04:06,849
conference I run everything on a Macs a

00:04:04,090 --> 00:04:09,849
MacBook that's what Core Audio is does

00:04:06,849 --> 00:04:13,510
anybody know what opensl es is what

00:04:09,849 --> 00:04:15,760
system runs that that's Android so

00:04:13,510 --> 00:04:17,979
pulseaudio will run on android or on a

00:04:15,760 --> 00:04:19,660
Mac it'll run on Windows and Linux it'll

00:04:17,979 --> 00:04:21,370
run everywhere and this is really

00:04:19,660 --> 00:04:23,349
interesting to me because that means

00:04:21,370 --> 00:04:25,270
that I can I can actually hook into the

00:04:23,349 --> 00:04:26,919
sound system anywhere now the other

00:04:25,270 --> 00:04:30,039
interesting thing about pulsar

00:04:26,919 --> 00:04:34,180
is that you it has the ability to pipe

00:04:30,039 --> 00:04:36,849
all of your sound like an entire view of

00:04:34,180 --> 00:04:39,039
your sound architecture over TCP to

00:04:36,849 --> 00:04:43,990
something else which is really cool

00:04:39,039 --> 00:04:45,460
because now I can take we could actually

00:04:43,990 --> 00:04:49,240
go into this whole other thing I can

00:04:45,460 --> 00:04:52,090
create a sono system a free sono system

00:04:49,240 --> 00:04:53,770
just using pulse audio and I probably

00:04:52,090 --> 00:04:55,599
should put an entire talk together just

00:04:53,770 --> 00:04:58,919
for that because you can take the output

00:04:55,599 --> 00:05:01,029
of your your desktop and pipe it into

00:04:58,919 --> 00:05:02,289
several different sinks several

00:05:01,029 --> 00:05:05,439
different raspberries all around your

00:05:02,289 --> 00:05:08,469
house and have a whole house audio

00:05:05,439 --> 00:05:11,469
playing system or you could become

00:05:08,469 --> 00:05:13,479
Batman remember I said that opensl es is

00:05:11,469 --> 00:05:16,210
your android phone you could hook into

00:05:13,479 --> 00:05:17,889
the the mic and the and the speakers on

00:05:16,210 --> 00:05:19,990
your phone and pipe that back to your

00:05:17,889 --> 00:05:23,860
main system all kinds of interesting

00:05:19,990 --> 00:05:25,180
things just to play with on this but one

00:05:23,860 --> 00:05:27,639
thing that I'll point out here is when

00:05:25,180 --> 00:05:32,020
it comes to an open source voice

00:05:27,639 --> 00:05:34,419
assistant you can't it pays off to be

00:05:32,020 --> 00:05:37,659
very very familiar with with pulseaudio

00:05:34,419 --> 00:05:39,550
because that's where all of your your

00:05:37,659 --> 00:05:43,089
interaction with this the microphone

00:05:39,550 --> 00:05:45,460
speaker and all that comes from the

00:05:43,089 --> 00:05:50,560
second thing that pays to know is the

00:05:45,460 --> 00:05:52,479
the audio format in in pretty much every

00:05:50,560 --> 00:05:56,469
system today it's a pulse code

00:05:52,479 --> 00:05:58,120
modulation PCM is how you map the raw

00:05:56,469 --> 00:06:01,599
data frames that are coming out of your

00:05:58,120 --> 00:06:03,069
microphone or your your raw data frames

00:06:01,599 --> 00:06:05,199
coming out of your microphone to

00:06:03,069 --> 00:06:06,610
something that you can actually use on

00:06:05,199 --> 00:06:10,479
the computer it's basically just an

00:06:06,610 --> 00:06:13,719
array of numbers there's for creating a

00:06:10,479 --> 00:06:15,580
voice assistant this is the the text or

00:06:13,719 --> 00:06:19,529
the entry this is the command line of

00:06:15,580 --> 00:06:22,180
your application is this PCM waveform at

00:06:19,529 --> 00:06:25,029
where it becomes interesting because I'm

00:06:22,180 --> 00:06:26,860
not like I'm still scratching the

00:06:25,029 --> 00:06:28,270
surface on audio engineering but there's

00:06:26,860 --> 00:06:31,509
two pieces where it becomes really

00:06:28,270 --> 00:06:34,000
really important one is the the sampling

00:06:31,509 --> 00:06:37,479
rate and bit depth what you sample it

00:06:34,000 --> 00:06:39,430
from what you used is to sample from

00:06:37,479 --> 00:06:40,510
your microphone that's what you need to

00:06:39,430 --> 00:06:44,290
use throughout your

00:06:40,510 --> 00:06:46,510
system otherwise you lose a whole lot of

00:06:44,290 --> 00:06:48,250
data you lose a lot of granularity

00:06:46,510 --> 00:06:50,200
that's going to come in very important

00:06:48,250 --> 00:06:53,320
later another thing that's interesting

00:06:50,200 --> 00:06:55,150
is the the human vocal range is between

00:06:53,320 --> 00:06:58,960
three hundred and thirty four hundred

00:06:55,150 --> 00:07:00,790
Hertz now that means that in an audio

00:06:58,960 --> 00:07:02,170
space we'll see in a little bit there's

00:07:00,790 --> 00:07:04,240
a lot of other stuff going on

00:07:02,170 --> 00:07:06,430
but if we can define the range that

00:07:04,240 --> 00:07:08,830
we're looking at and we can kind of cut

00:07:06,430 --> 00:07:11,500
down just to those frequency and like

00:07:08,830 --> 00:07:13,450
throw out a whole bunch of noise last

00:07:11,500 --> 00:07:16,240
little bit of interesting trivia the

00:07:13,450 --> 00:07:20,140
Nyquist Shannon theorem tells us that we

00:07:16,240 --> 00:07:22,360
we lose information if we throw out

00:07:20,140 --> 00:07:24,430
things that are twice whatever our top

00:07:22,360 --> 00:07:27,340
frequency is so if those of you have

00:07:24,430 --> 00:07:30,220
been looking at mp3s and you wonder why

00:07:27,340 --> 00:07:32,440
is that sample rate at 4,400 Hertz we

00:07:30,220 --> 00:07:36,610
can't hear things that high this is part

00:07:32,440 --> 00:07:39,460
of the reason why now combining that

00:07:36,610 --> 00:07:41,050
together we're taking the data that's

00:07:39,460 --> 00:07:44,200
coming out of the microphone and we're

00:07:41,050 --> 00:07:47,200
trying to look for phonemes you invite

00:07:44,200 --> 00:07:48,730
anybody remember on Phonics that's

00:07:47,200 --> 00:07:51,370
basically what we're trying to do with

00:07:48,730 --> 00:07:54,160
the computer we're trying to so there's

00:07:51,370 --> 00:07:56,260
there's some this is what we need to do

00:07:54,160 --> 00:07:59,320
we need to take the signals that are

00:07:56,260 --> 00:08:01,060
coming through the microphone apply this

00:07:59,320 --> 00:08:03,310
magical math formula that actually

00:08:01,060 --> 00:08:05,680
applies to almost everything that I get

00:08:03,310 --> 00:08:07,990
nerd sniped by on its own the fast

00:08:05,680 --> 00:08:10,810
Fourier transformation which did pulls

00:08:07,990 --> 00:08:12,820
out in a data frame these signals are

00:08:10,810 --> 00:08:15,700
the ones that are the most prevalent now

00:08:12,820 --> 00:08:17,440
if you take those then you can match

00:08:15,700 --> 00:08:19,630
them together over time and say these

00:08:17,440 --> 00:08:23,530
are the groupings of signals that map to

00:08:19,630 --> 00:08:24,820
a phoning the way that they will get

00:08:23,530 --> 00:08:28,960
into how they work in just a little bit

00:08:24,820 --> 00:08:30,430
but so a phoneme since I've run over

00:08:28,960 --> 00:08:32,160
that several times I didn't know what

00:08:30,430 --> 00:08:35,099
that was until I start working on my own

00:08:32,160 --> 00:08:38,500
Alexus system a phoneme is a

00:08:35,099 --> 00:08:40,630
perceptually distinct unit of sound of a

00:08:38,500 --> 00:08:42,250
specified language that distinguishes

00:08:40,630 --> 00:08:45,220
one word from another actually one

00:08:42,250 --> 00:08:47,590
syllable from another so a phoneme is

00:08:45,220 --> 00:08:49,150
the the basic unit of input it would

00:08:47,590 --> 00:08:51,760
like it would be like the it would be

00:08:49,150 --> 00:08:53,700
analogous to a key or a character that

00:08:51,760 --> 00:08:55,980
you've entered okay

00:08:53,700 --> 00:08:59,040
one interesting thing about that every

00:08:55,980 --> 00:09:00,930
language has its own set of phonemes so

00:08:59,040 --> 00:09:02,370
this is the English language phonemes

00:09:00,930 --> 00:09:05,100
and I'm not even sure that this is the

00:09:02,370 --> 00:09:08,310
entire phenomics art of English

00:09:05,100 --> 00:09:11,100
pronunciation and the other thing is it

00:09:08,310 --> 00:09:13,560
doesn't take into account the accents

00:09:11,100 --> 00:09:16,680
accents or something totally different

00:09:13,560 --> 00:09:18,300
but in general we're trying to take the

00:09:16,680 --> 00:09:20,040
sounds that are coming out we're trying

00:09:18,300 --> 00:09:21,680
to map them to these phonemes that's

00:09:20,040 --> 00:09:25,940
what it's all about

00:09:21,680 --> 00:09:28,250
so other interesting like bits of trivia

00:09:25,940 --> 00:09:33,390
consonants and vowels occupy different

00:09:28,250 --> 00:09:35,070
frequency ranges so if you're when

00:09:33,390 --> 00:09:37,740
you're when you can't hear somebody very

00:09:35,070 --> 00:09:39,180
well and maybe this is the case here I

00:09:37,740 --> 00:09:40,920
don't know but if you can't hear

00:09:39,180 --> 00:09:43,380
somebody very well it's more than likely

00:09:40,920 --> 00:09:45,180
because the audio equipment or the audio

00:09:43,380 --> 00:09:47,250
space is cutting out the higher

00:09:45,180 --> 00:09:50,340
frequency ranges it's muddying that up

00:09:47,250 --> 00:09:52,590
that's where the consonants T s and

00:09:50,340 --> 00:09:57,450
stuff like that comes from okay

00:09:52,590 --> 00:09:59,610
and vowels occupy a more I think it's

00:09:57,450 --> 00:10:01,200
deeper in the frequency range so you can

00:09:59,610 --> 00:10:03,930
hear the vowels but you can't hear the

00:10:01,200 --> 00:10:06,120
consonants that will so now you know why

00:10:03,930 --> 00:10:08,100
certain songs you start interpreting the

00:10:06,120 --> 00:10:10,470
words it's not what the artist was

00:10:08,100 --> 00:10:12,930
singing it's because the the song was

00:10:10,470 --> 00:10:14,310
like mashed up compressed and all that

00:10:12,930 --> 00:10:16,560
other stuff and then the high frequency

00:10:14,310 --> 00:10:17,940
ranges were lost and so you heard a T

00:10:16,560 --> 00:10:20,550
where there should have been an S or

00:10:17,940 --> 00:10:22,950
something like that all right

00:10:20,550 --> 00:10:24,840
that's important because picking out

00:10:22,950 --> 00:10:27,420
these consonants remember I said that

00:10:24,840 --> 00:10:29,700
you're the frame rate or the frame rate

00:10:27,420 --> 00:10:32,420
or the sample rate matters when you go

00:10:29,700 --> 00:10:34,740
to like feed it through a voice-to-text

00:10:32,420 --> 00:10:36,960
system you're going to come up with

00:10:34,740 --> 00:10:39,420
really weird things and it's all because

00:10:36,960 --> 00:10:42,110
the quality of the signal coming in is a

00:10:39,420 --> 00:10:42,110
isn't good enough

00:10:42,860 --> 00:10:49,890
last piece of this theoretical puzzle

00:10:46,530 --> 00:10:52,440
maybe not last piece silence it's weird

00:10:49,890 --> 00:10:54,270
that we we know it when we hear it sort

00:10:52,440 --> 00:10:57,210
of like porn right we know when we see

00:10:54,270 --> 00:10:59,040
it we know we hear it but from a math

00:10:57,210 --> 00:11:01,200
perspective from like looking at the

00:10:59,040 --> 00:11:03,390
microphone there's really no such thing

00:11:01,200 --> 00:11:06,150
of silence there's always something

00:11:03,390 --> 00:11:07,139
going on in the acoustical space on the

00:11:06,150 --> 00:11:09,299
lower

00:11:07,139 --> 00:11:11,569
right from your perspective the lower

00:11:09,299 --> 00:11:15,359
left-hand side over there that is

00:11:11,569 --> 00:11:18,239
Microsoft's quiet room it's the quietest

00:11:15,359 --> 00:11:21,839
room on the planet negative 33 decibels

00:11:18,239 --> 00:11:25,049
and even so decibels is just a measure

00:11:21,839 --> 00:11:28,109
of the power in the sound space around

00:11:25,049 --> 00:11:29,879
you anyway the sound room over there at

00:11:28,109 --> 00:11:31,139
negative 33 decibels from what I

00:11:29,879 --> 00:11:33,359
understand people can't stay in that

00:11:31,139 --> 00:11:35,939
room very long because your ears start a

00:11:33,359 --> 00:11:37,859
tuning to whatever the base level of

00:11:35,939 --> 00:11:39,509
sound is around you remember I said

00:11:37,859 --> 00:11:43,019
there's always sound there's always

00:11:39,509 --> 00:11:44,399
something going on so in that room ends

00:11:43,019 --> 00:11:46,259
up being that it's like your own body

00:11:44,399 --> 00:11:48,269
that's making the sound which is really

00:11:46,259 --> 00:11:50,040
cool by itself and also creepy like

00:11:48,269 --> 00:11:53,309
bones grinding on bones and stuff like

00:11:50,040 --> 00:11:55,079
that so it's important to understand

00:11:53,309 --> 00:11:57,389
that sound from a systems perspective

00:11:55,079 --> 00:12:00,419
ISM is a unit of power that's what

00:11:57,389 --> 00:12:02,189
decibel measures so that you can set

00:12:00,419 --> 00:12:05,459
your thresholds so that you can throw

00:12:02,189 --> 00:12:07,949
away work on noise that you don't care

00:12:05,459 --> 00:12:10,379
about and that's a that's an important

00:12:07,949 --> 00:12:13,410
distinction there silence is noise that

00:12:10,379 --> 00:12:13,999
you don't care about weird sidetrack

00:12:13,410 --> 00:12:16,919
here

00:12:13,999 --> 00:12:18,989
your brain is attuned to throw out

00:12:16,919 --> 00:12:21,839
noises that you don't care about anyway

00:12:18,989 --> 00:12:23,279
you just do it automatically especially

00:12:21,839 --> 00:12:26,699
those of us who are parents we know this

00:12:23,279 --> 00:12:28,739
like really well but you have to teach

00:12:26,699 --> 00:12:32,220
the computer to do that because it

00:12:28,739 --> 00:12:34,290
doesn't do it automatically so how do we

00:12:32,220 --> 00:12:36,389
take all the things going on in the

00:12:34,290 --> 00:12:38,790
acoustical space and separate them out I

00:12:36,389 --> 00:12:40,949
kind of hinted at it earlier it's this

00:12:38,790 --> 00:12:42,299
fast Fourier transformation but it's a

00:12:40,949 --> 00:12:45,419
little bit more than that we need to

00:12:42,299 --> 00:12:47,459
take a sample of sound and we need to

00:12:45,419 --> 00:12:49,139
divide it up a lot of times and there's

00:12:47,459 --> 00:12:52,139
different methods for dividing it up and

00:12:49,139 --> 00:12:54,569
if you've studied how to work with sound

00:12:52,139 --> 00:12:57,029
the methods that I'm using are a little

00:12:54,569 --> 00:13:00,269
bit dated they're not the latest but

00:12:57,029 --> 00:13:02,699
they do work and we'll get into the the

00:13:00,269 --> 00:13:05,220
hamming and a little bit but we're going

00:13:02,699 --> 00:13:07,109
to take yeah we're gonna take the

00:13:05,220 --> 00:13:08,459
handing or raised cosine and what that

00:13:07,109 --> 00:13:10,589
means is like let's say we've got a

00:13:08,459 --> 00:13:12,959
second of sound we're gonna slice it up

00:13:10,589 --> 00:13:14,579
into little bits of like maybe 10

00:13:12,959 --> 00:13:16,919
milliseconds each and they're going to

00:13:14,579 --> 00:13:19,199
overlap across that whole frame or the

00:13:16,919 --> 00:13:21,059
that whole range and we're going to take

00:13:19,199 --> 00:13:22,379
a Fourier transform a

00:13:21,059 --> 00:13:26,669
which is one of the most prevalent

00:13:22,379 --> 00:13:29,129
signals at that time in that space then

00:13:26,669 --> 00:13:31,859
we take the range of Windows and we say

00:13:29,129 --> 00:13:33,779
out of all of these windows which are

00:13:31,859 --> 00:13:36,899
the dominant signals that we've seen

00:13:33,779 --> 00:13:39,229
through this time and it's basically

00:13:36,899 --> 00:13:41,759
just an array of numbers the frequency

00:13:39,229 --> 00:13:44,819
was it the dominant frequency and the

00:13:41,759 --> 00:13:46,849
power amplitude and that's what we're

00:13:44,819 --> 00:13:49,769
using to feed into to the system

00:13:46,849 --> 00:13:51,449
underneath and the reason I put spec

00:13:49,769 --> 00:13:54,049
spirograph here does anybody remember

00:13:51,449 --> 00:13:57,029
playing with that when you're a kid

00:13:54,049 --> 00:13:59,219
unbeknownst to me it actually had a mat

00:13:57,029 --> 00:14:02,789
a strong mathematical basis to it a

00:13:59,219 --> 00:14:04,489
spirograph is you doing the work of a

00:14:02,789 --> 00:14:09,989
Fourier transformation in Reverse

00:14:04,489 --> 00:14:12,319
whereas sorry anyway so it's it's doing

00:14:09,989 --> 00:14:14,569
the the transformation in Reverse

00:14:12,319 --> 00:14:17,159
basically you're you're trying to take

00:14:14,569 --> 00:14:20,479
samples in time and come up with a

00:14:17,159 --> 00:14:23,549
rhythm that would make that sample

00:14:20,479 --> 00:14:26,429
there's a lot more to it but you're

00:14:23,549 --> 00:14:27,659
going from analog and trying to

00:14:26,429 --> 00:14:29,729
digitally represent it with a

00:14:27,659 --> 00:14:31,159
mathematical formula how about that and

00:14:29,729 --> 00:14:33,769
it turns out you can mathematically

00:14:31,159 --> 00:14:36,629
represent almost everything as a wave

00:14:33,769 --> 00:14:39,869
another weird physics thing that you can

00:14:36,629 --> 00:14:42,749
go off into you can do video that way

00:14:39,869 --> 00:14:48,989
you can do images audio like it's all

00:14:42,749 --> 00:14:49,559
the same method so how many of you have

00:14:48,989 --> 00:14:52,199
ever

00:14:49,559 --> 00:14:55,369
so the Mic Check one two one two it

00:14:52,199 --> 00:14:58,409
turns out there's a better way to to

00:14:55,369 --> 00:15:01,259
like test a microphone and this came out

00:14:58,409 --> 00:15:03,029
of the nineteen I think was 40s or so

00:15:01,259 --> 00:15:05,039
when they were testing microphones that

00:15:03,029 --> 00:15:06,719
they were making for the the bombers and

00:15:05,039 --> 00:15:08,759
stuff that they were like coming out

00:15:06,719 --> 00:15:11,999
with and they had to come up with a way

00:15:08,759 --> 00:15:15,059
to actually test microphones to make

00:15:11,999 --> 00:15:17,309
sure that you could hear every part of

00:15:15,059 --> 00:15:19,769
speech correctly and that that is

00:15:17,309 --> 00:15:21,479
testing the entire range so there's

00:15:19,769 --> 00:15:23,999
something called the Harvard sentences

00:15:21,479 --> 00:15:25,499
and I I wanted to put this in so that

00:15:23,999 --> 00:15:27,239
people would stop saying Mic Check one

00:15:25,499 --> 00:15:29,519
two one two because it doesn't really

00:15:27,239 --> 00:15:32,099
test anything now the picture here is

00:15:29,519 --> 00:15:34,180
from there so the Harvard sentences

00:15:32,099 --> 00:15:37,950
there are 72 stanzas of ten

00:15:34,180 --> 00:15:40,300
sentences apiece and they're designed to

00:15:37,950 --> 00:15:42,910
what is their phonetically balanced

00:15:40,300 --> 00:15:46,540
they're designed to test every bit of

00:15:42,910 --> 00:15:50,560
the range of human speech so the picture

00:15:46,540 --> 00:15:53,110
over here is so here's the the Harvard

00:15:50,560 --> 00:15:55,600
sentence T served from the Brown Jug is

00:15:53,110 --> 00:15:57,910
tasty now if you don't have a properly

00:15:55,600 --> 00:16:01,390
calibrated mic what you might hear is t

00:15:57,910 --> 00:16:02,860
soaked and LeBron James is tasty the

00:16:01,390 --> 00:16:05,770
reason I bring this up for a voice

00:16:02,860 --> 00:16:08,100
system is you're gonna get false

00:16:05,770 --> 00:16:10,870
positives it's a biometric system and

00:16:08,100 --> 00:16:11,680
most always the problem is your

00:16:10,870 --> 00:16:14,200
microphone

00:16:11,680 --> 00:16:17,290
I have spent an embarrassing amount of

00:16:14,200 --> 00:16:20,110
money on microphones and there is a huge

00:16:17,290 --> 00:16:21,550
quality variance for those of you who

00:16:20,110 --> 00:16:23,680
are used to buying computers and you

00:16:21,550 --> 00:16:25,209
have like every spec that spelled out

00:16:23,680 --> 00:16:28,540
you don't have that four microphones

00:16:25,209 --> 00:16:30,610
which is weird but here's a way to go

00:16:28,540 --> 00:16:33,670
around you can test and you can test it

00:16:30,610 --> 00:16:35,950
from a more deterministic standpoint

00:16:33,670 --> 00:16:39,820
than just blowing into the mic or god

00:16:35,950 --> 00:16:42,910
forbid tapping the mic so what comes

00:16:39,820 --> 00:16:44,920
next if we can pull if we can sample the

00:16:42,910 --> 00:16:47,020
audio space and if we can pull out the

00:16:44,920 --> 00:16:49,240
dominant frequencies the next thing we

00:16:47,020 --> 00:16:51,820
need to do is take these dominant

00:16:49,240 --> 00:16:56,830
frequencies and map them onto what we've

00:16:51,820 --> 00:16:59,560
come up with constitutes a phoneme okay

00:16:56,830 --> 00:17:02,500
the way that we do that is something

00:16:59,560 --> 00:17:04,630
called a hidden Markov model or actually

00:17:02,500 --> 00:17:06,309
a Markov model and the hidden part means

00:17:04,630 --> 00:17:08,709
that we don't know what the Markov model

00:17:06,309 --> 00:17:11,410
looks like until we train it with some

00:17:08,709 --> 00:17:13,780
data so a hidden Markov model is where

00:17:11,410 --> 00:17:18,040
we're training it we have there's a

00:17:13,780 --> 00:17:19,870
process to to say this phoneme looks

00:17:18,040 --> 00:17:22,720
like like it has these frequencies or

00:17:19,870 --> 00:17:25,390
whatever else so the the very basic

00:17:22,720 --> 00:17:30,400
markov model is up in the the top left

00:17:25,390 --> 00:17:34,179
or up there it's up at the top so it's a

00:17:30,400 --> 00:17:37,710
coin flip a Markov model is 50% one side

00:17:34,179 --> 00:17:40,330
or the other okay it could go either way

00:17:37,710 --> 00:17:46,030
the hidden Markov model at the bottom

00:17:40,330 --> 00:17:47,640
maps the saying one and two one and you

00:17:46,030 --> 00:17:50,799
also get a little bit of

00:17:47,640 --> 00:17:52,600
of an introduction to the phonetic

00:17:50,799 --> 00:17:56,169
alphabet or how do you spell a word

00:17:52,600 --> 00:17:59,169
phonetically so if you start with a wah

00:17:56,169 --> 00:18:02,350
sound it's immediately going to go to

00:17:59,169 --> 00:18:04,419
the top portion and I apologize I don't

00:18:02,350 --> 00:18:06,280
have the percentages there just yet but

00:18:04,419 --> 00:18:08,380
if you were to say a what sound then

00:18:06,280 --> 00:18:10,360
it's probably a 90% probability that

00:18:08,380 --> 00:18:12,580
it's going to the top so it would start

00:18:10,360 --> 00:18:15,520
looking in that side of the tree and if

00:18:12,580 --> 00:18:17,380
you started saying ah then it's going to

00:18:15,520 --> 00:18:19,000
say you know it's at research we're

00:18:17,380 --> 00:18:21,280
going through and we're trying to map

00:18:19,000 --> 00:18:24,520
what you're saying to the pieces of

00:18:21,280 --> 00:18:26,970
speech it's also important because when

00:18:24,520 --> 00:18:29,850
you're working on these systems you're

00:18:26,970 --> 00:18:32,830
how lazy you are in pronouncing the word

00:18:29,850 --> 00:18:34,510
like directly translates to the model

00:18:32,830 --> 00:18:38,080
like not knowing what you're saying and

00:18:34,510 --> 00:18:40,090
so if you've ever spoken to a alexa or

00:18:38,080 --> 00:18:43,270
siri and it didn't really get what you

00:18:40,090 --> 00:18:44,770
were saying then it's it's hunting the

00:18:43,270 --> 00:18:46,840
Markov model and it didn't have a good

00:18:44,770 --> 00:18:48,669
match another interesting thing that

00:18:46,840 --> 00:18:51,309
could come into effect here since we're

00:18:48,669 --> 00:18:54,070
on that subject is aliasing if you're

00:18:51,309 --> 00:18:56,350
trying to talk to a device and somebody

00:18:54,070 --> 00:18:57,360
else is talking or other stuff is going

00:18:56,350 --> 00:18:59,470
on behind you

00:18:57,360 --> 00:19:02,289
whatever's going on behind you could

00:18:59,470 --> 00:19:04,570
come in as part of a vowel that it's

00:19:02,289 --> 00:19:06,580
hearing so that's why you have to repeat

00:19:04,570 --> 00:19:08,620
yourself sometimes to your device we

00:19:06,580 --> 00:19:10,419
find this a lot when we're talking or

00:19:08,620 --> 00:19:11,620
yelling at the device in the car because

00:19:10,419 --> 00:19:15,789
there's all kinds of other things going

00:19:11,620 --> 00:19:18,610
around this so those things

00:19:15,789 --> 00:19:20,500
basic building blocks the hard problems

00:19:18,610 --> 00:19:22,809
here we're not going to do far field

00:19:20,500 --> 00:19:24,940
processing I'm not going to try to solve

00:19:22,809 --> 00:19:27,190
that right now part of the reason is

00:19:24,940 --> 00:19:30,539
because far field processing requires

00:19:27,190 --> 00:19:34,090
really finely tuned models weird

00:19:30,539 --> 00:19:35,679
anecdote here when the Alexus first came

00:19:34,090 --> 00:19:37,419
out they could hear you all the way

00:19:35,679 --> 00:19:39,190
across the room because the models were

00:19:37,419 --> 00:19:42,900
tightly trained does anybody know why

00:19:39,190 --> 00:19:47,110
they don't do that anymore you know what

00:19:42,900 --> 00:19:51,610
because because somebody because it

00:19:47,110 --> 00:19:54,220
picked up it was too fine or hair hair

00:19:51,610 --> 00:19:57,010
triggered because it would pick up Alexa

00:19:54,220 --> 00:19:59,409
call so-and-so and then somebody's like

00:19:57,010 --> 00:20:01,450
dinner conversation got recorded and

00:19:59,409 --> 00:20:02,590
sent out and Amazon got in bear

00:20:01,450 --> 00:20:03,970
so what they did was they said nope

00:20:02,590 --> 00:20:06,600
we're gonna raise the thresholds now you

00:20:03,970 --> 00:20:09,130
have to basically yell at the device I

00:20:06,600 --> 00:20:11,560
mean it's possible but the problem is

00:20:09,130 --> 00:20:15,100
the model becomes really loose as far as

00:20:11,560 --> 00:20:16,380
what a trigger on part of the reason

00:20:15,100 --> 00:20:19,750
we're not going to do far-field voice

00:20:16,380 --> 00:20:21,760
processing is because it's a it falls

00:20:19,750 --> 00:20:24,430
prey to the inverse-square law which

00:20:21,760 --> 00:20:26,170
means that a microphone there's a lot of

00:20:24,430 --> 00:20:29,560
things that that kind of fall prey to

00:20:26,170 --> 00:20:33,850
this but the amount of signal that that

00:20:29,560 --> 00:20:36,010
is that is inherent in an audio degrades

00:20:33,850 --> 00:20:38,350
by half over time or actually more

00:20:36,010 --> 00:20:39,760
exponentially so if you're a sound

00:20:38,350 --> 00:20:41,440
engineer one of the reasons why there's

00:20:39,760 --> 00:20:44,430
a mic right here rather than right here

00:20:41,440 --> 00:20:47,710
or here is that the audio quality

00:20:44,430 --> 00:20:50,050
degrades by by a square of the distance

00:20:47,710 --> 00:20:52,480
which means that the best mic is going

00:20:50,050 --> 00:20:54,220
to be one that's right on your lips and

00:20:52,480 --> 00:20:56,680
we need all the help we can get for

00:20:54,220 --> 00:20:58,900
building this thing on our own other

00:20:56,680 --> 00:21:01,720
interesting trivia there echo dots

00:20:58,900 --> 00:21:03,900
generation 1 & 2 had seven mics because

00:21:01,720 --> 00:21:07,960
they really wanted to pick up the voice

00:21:03,900 --> 00:21:10,120
now they only have four I think

00:21:07,960 --> 00:21:11,380
and then they packed more speakers into

00:21:10,120 --> 00:21:13,060
it so the ones that are out now the

00:21:11,380 --> 00:21:18,160
latest generation are actually worse

00:21:13,060 --> 00:21:19,840
than the ones before phoney models

00:21:18,160 --> 00:21:23,380
depend heavily on the training equipment

00:21:19,840 --> 00:21:26,080
that is a model that came from you won't

00:21:23,380 --> 00:21:27,820
work exactly on your system or won't

00:21:26,080 --> 00:21:29,080
work exactly the same on your system if

00:21:27,820 --> 00:21:31,840
you're using different mics and

00:21:29,080 --> 00:21:33,550
different setup the other part of that

00:21:31,840 --> 00:21:35,530
or theirs

00:21:33,550 --> 00:21:36,820
so that means that our off-the-shelf

00:21:35,530 --> 00:21:38,740
results I'm gonna go ahead and like

00:21:36,820 --> 00:21:40,570
break it to you it's not going to be the

00:21:38,740 --> 00:21:43,180
best it's not going to be anywhere near

00:21:40,570 --> 00:21:44,860
the quality of a Google or an Amazon but

00:21:43,180 --> 00:21:46,120
it should at least get us to where we're

00:21:44,860 --> 00:21:48,160
going

00:21:46,120 --> 00:21:50,890
last there there's more efficient

00:21:48,160 --> 00:21:51,730
mathematical models and technologies if

00:21:50,890 --> 00:21:54,100
you're taking notes

00:21:51,730 --> 00:21:57,550
tako Tron is a really in fashion a ting

00:21:54,100 --> 00:21:59,470
Taco Tron trained on wavenet data that's

00:21:57,550 --> 00:22:03,490
actually the basis of where we get a lot

00:21:59,470 --> 00:22:05,710
of deep fakes but that's that's a whole

00:22:03,490 --> 00:22:06,430
nother realm I wanted to work on off the

00:22:05,710 --> 00:22:08,620
shelf

00:22:06,430 --> 00:22:10,780
type especially old off-the-shelf

00:22:08,620 --> 00:22:11,330
technology that I can use in a Linux

00:22:10,780 --> 00:22:14,269
system

00:22:11,330 --> 00:22:15,739
so we're gonna sidestep all of the great

00:22:14,269 --> 00:22:17,629
like latest and greatest and we're gonna

00:22:15,739 --> 00:22:20,860
go back to things that were developed a

00:22:17,629 --> 00:22:24,950
couple of years ago or a little bit more

00:22:20,860 --> 00:22:28,700
so the heart of our speech-to-text is a

00:22:24,950 --> 00:22:31,039
system called CMU sphinx it was

00:22:28,700 --> 00:22:32,840
originally written in java by an

00:22:31,039 --> 00:22:37,009
open-source by the carnegie mellon

00:22:32,840 --> 00:22:38,989
university in 2000 the latest one or the

00:22:37,009 --> 00:22:41,330
latest version is five pre-alpha

00:22:38,989 --> 00:22:43,989
which still cracks me up because it's

00:22:41,330 --> 00:22:48,619
been in pre-alpha for three years now

00:22:43,989 --> 00:22:50,419
this is also it's a university project

00:22:48,619 --> 00:22:54,019
and there's a lot of papers that depend

00:22:50,419 --> 00:22:55,190
on on CMU sphinx and because of that it

00:22:54,019 --> 00:22:57,799
comes with a lot of different models

00:22:55,190 --> 00:23:00,559
weirdly enough latest are the latest

00:22:57,799 --> 00:23:02,389
models are Korean models so you've got

00:23:00,559 --> 00:23:04,789
pretty good amount of English

00:23:02,389 --> 00:23:07,609
I think Spanish Korean and I'm not sure

00:23:04,789 --> 00:23:10,850
what other ones they have pockets Fink's

00:23:07,609 --> 00:23:14,119
is a sea implementation of the Sphinx

00:23:10,850 --> 00:23:17,269
library the Sphinx system it's written

00:23:14,119 --> 00:23:19,789
for embedded systems especially ARM

00:23:17,269 --> 00:23:21,590
based systems you see where I'm headed

00:23:19,789 --> 00:23:24,379
with this it's all gonna go to the the

00:23:21,590 --> 00:23:26,210
Raspberry Pi there's lots of lots of

00:23:24,379 --> 00:23:29,169
knobs and settings there's power

00:23:26,210 --> 00:23:33,080
settings and syllabus like like how to

00:23:29,169 --> 00:23:34,940
how to treat the different how to treat

00:23:33,080 --> 00:23:37,580
different words and the power the

00:23:34,940 --> 00:23:39,830
emphasis on the words like detecting

00:23:37,580 --> 00:23:43,039
those there's entire projects that's

00:23:39,830 --> 00:23:46,039
just for tuning than the the different

00:23:43,039 --> 00:23:52,429
settings within this project just to get

00:23:46,039 --> 00:23:54,350
the best results so along with CMU

00:23:52,429 --> 00:23:56,690
Sphinx you could use it as just a

00:23:54,350 --> 00:23:59,090
general like give it a in glitch

00:23:56,690 --> 00:24:02,149
language model and have it just try to

00:23:59,090 --> 00:24:04,309
detect words all English words that it

00:24:02,149 --> 00:24:06,259
knows about that's very compute

00:24:04,309 --> 00:24:09,379
intensive because remember I said a

00:24:06,259 --> 00:24:11,440
minute ago that you have the the Markov

00:24:09,379 --> 00:24:14,090
models your first of all sampling

00:24:11,440 --> 00:24:16,999
sampling audio space and creating these

00:24:14,090 --> 00:24:19,879
windows is not cheap it takes a lot of

00:24:16,999 --> 00:24:22,039
computing power searching through the

00:24:19,879 --> 00:24:24,509
phonetic database the the Markov models

00:24:22,039 --> 00:24:27,059
for every syllabus that spoken or every

00:24:24,509 --> 00:24:29,820
the sound event that comes through is

00:24:27,059 --> 00:24:31,139
also very expensive so we're gonna cheat

00:24:29,820 --> 00:24:32,999
here we're also not going to get into

00:24:31,139 --> 00:24:35,039
natural language processing but we're

00:24:32,999 --> 00:24:38,699
gonna cheat we're gonna say give it a

00:24:35,039 --> 00:24:40,769
list of key words and from that list of

00:24:38,699 --> 00:24:46,799
key words it knows to do certain things

00:24:40,769 --> 00:24:48,419
like play Pandora or do you know do

00:24:46,799 --> 00:24:49,919
something there's another project that

00:24:48,419 --> 00:24:53,039
somebody has out there for commanding a

00:24:49,919 --> 00:24:56,219
robot forward back left right speed up

00:24:53,039 --> 00:24:59,789
slow down the reason for this is because

00:24:56,219 --> 00:25:02,249
it especially on an embedded system it

00:24:59,789 --> 00:25:03,779
becomes not very performant at all now

00:25:02,249 --> 00:25:05,459
you can get around this remember I said

00:25:03,779 --> 00:25:08,219
earlier where pulseaudio can take the

00:25:05,459 --> 00:25:10,739
audio sample and send it to a more beefy

00:25:08,219 --> 00:25:13,049
system to do this searching it's not

00:25:10,739 --> 00:25:15,299
going to be as real-time and that's why

00:25:13,049 --> 00:25:17,329
your Alexa does what it does or Syria or

00:25:15,299 --> 00:25:19,709
whatever else it takes the samples

00:25:17,329 --> 00:25:22,019
performs the Fourier transformation and

00:25:19,709 --> 00:25:25,169
just streams that to a central server

00:25:22,019 --> 00:25:27,629
and that's where the the real processing

00:25:25,169 --> 00:25:30,719
comes in it's effectively like a Google

00:25:27,629 --> 00:25:32,909
search with voice but for our print for

00:25:30,719 --> 00:25:36,809
our purposes everything's done on the

00:25:32,909 --> 00:25:42,299
same device so it needs to be we need to

00:25:36,809 --> 00:25:44,759
cut down the search space this was

00:25:42,299 --> 00:25:48,059
actually I need to go back this is the

00:25:44,759 --> 00:25:50,639
Audrey system from 1950s or so it was

00:25:48,059 --> 00:25:56,639
one of the first voice-to-text systems

00:25:50,639 --> 00:25:59,009
it was from from from ma belle just

00:25:56,639 --> 00:26:01,559
detecting numbers and this one is the

00:25:59,009 --> 00:26:03,509
first text-to-speech system and there's

00:26:01,559 --> 00:26:06,089
a video on YouTube it's it's really

00:26:03,509 --> 00:26:08,129
hilarious because you like reach into

00:26:06,089 --> 00:26:10,709
the device and you like choke a goose

00:26:08,129 --> 00:26:13,309
while you're like doing the organ on it

00:26:10,709 --> 00:26:13,309
but anyway

00:26:14,249 --> 00:26:19,349
so the the text is speech part because

00:26:17,219 --> 00:26:22,019
the natural way to get or the natural

00:26:19,349 --> 00:26:23,789
user experience for a voice assistant is

00:26:22,019 --> 00:26:26,399
going to be something that speaks back

00:26:23,789 --> 00:26:29,699
to you and basically this is the reverse

00:26:26,399 --> 00:26:32,009
of what we had before the I would argue

00:26:29,699 --> 00:26:34,589
the hard part is detecting like going

00:26:32,009 --> 00:26:37,349
from speech to text going from text to

00:26:34,589 --> 00:26:38,490
speech is a lot easier because all

00:26:37,349 --> 00:26:40,590
you're doing saying

00:26:38,490 --> 00:26:42,360
here's the word and then it has to parse

00:26:40,590 --> 00:26:44,190
that word into the phonemes and then say

00:26:42,360 --> 00:26:45,690
here's the the phonemes that I found in

00:26:44,190 --> 00:26:46,380
the database let me play these audio

00:26:45,690 --> 00:26:49,950
samples

00:26:46,380 --> 00:26:52,440
the real trick though is is what's

00:26:49,950 --> 00:26:54,120
called prosody and i may be saying this

00:26:52,440 --> 00:26:55,350
wrong so if there's someone who knows

00:26:54,120 --> 00:26:58,340
how to say it better than i do i've just

00:26:55,350 --> 00:27:01,140
been reading it in my head um so anyway

00:26:58,340 --> 00:27:03,570
espeak is the library or the open source

00:27:01,140 --> 00:27:06,450
program that that i'll recommend for

00:27:03,570 --> 00:27:08,880
this and the ng part is adding this

00:27:06,450 --> 00:27:11,940
prosody so prosody is taking the

00:27:08,880 --> 00:27:14,310
phonemes and the word it's basically the

00:27:11,940 --> 00:27:18,330
accent how you emphasize a word how you

00:27:14,310 --> 00:27:20,700
it's prosody is like the prose or like

00:27:18,330 --> 00:27:25,890
you know your flourish on the on the

00:27:20,700 --> 00:27:28,200
word accents come from this all that so

00:27:25,890 --> 00:27:30,540
last part of the text-to-speech we could

00:27:28,200 --> 00:27:33,450
either feed at raw text or speech

00:27:30,540 --> 00:27:36,300
synthesis markup language which the

00:27:33,450 --> 00:27:40,050
latest version of that is 1.1 and this

00:27:36,300 --> 00:27:42,660
is the this is basically the HTML of

00:27:40,050 --> 00:27:44,910
voice because you can say in the speech

00:27:42,660 --> 00:27:48,180
since the synthesis markup language and

00:27:44,910 --> 00:27:51,780
if you develop any alexa skills this is

00:27:48,180 --> 00:27:54,720
part of the alexa skills to is take this

00:27:51,780 --> 00:27:58,770
number and pronounce it as digits or

00:27:54,720 --> 00:28:02,070
pronounce it as a numerical set based in

00:27:58,770 --> 00:28:04,020
or whatever else and i have down at the

00:28:02,070 --> 00:28:07,770
bottom here amazon for the MS ie a voice

00:28:04,020 --> 00:28:11,520
because if you look at the SS SS ml

00:28:07,770 --> 00:28:12,900
standard amazon's added their own thing

00:28:11,520 --> 00:28:14,940
that i don't really blame them because

00:28:12,900 --> 00:28:17,100
theirs is the dominant player in the

00:28:14,940 --> 00:28:19,320
market but they have their own special

00:28:17,100 --> 00:28:23,340
tags that no that's not part of the SS

00:28:19,320 --> 00:28:24,870
ml standard so just like how to like

00:28:23,340 --> 00:28:26,700
playing background music or like

00:28:24,870 --> 00:28:29,280
background tones or something like that

00:28:26,700 --> 00:28:30,600
while you're saying something the other

00:28:29,280 --> 00:28:33,660
thing that's interesting with this is

00:28:30,600 --> 00:28:36,360
that there's no SS ml and all these

00:28:33,660 --> 00:28:38,880
other pieces don't really have security

00:28:36,360 --> 00:28:42,570
baked in again whole nother talk but

00:28:38,880 --> 00:28:46,710
just thought I'd throw that out there so

00:28:42,570 --> 00:28:48,990
to tie it all together pulseaudio for

00:28:46,710 --> 00:28:52,429
the mic access pocket Sphinx for

00:28:48,990 --> 00:28:54,900
text-to-speech East Inc

00:28:52,429 --> 00:28:58,230
espeak ng to deliver our responses to

00:28:54,900 --> 00:28:59,850
the user and some other projects worth

00:28:58,230 --> 00:29:02,250
mentioning before I go into this demo to

00:28:59,850 --> 00:29:05,130
show you like how it all ties together

00:29:02,250 --> 00:29:06,630
there's the Jasper project which tries

00:29:05,130 --> 00:29:08,880
to do all this like tie it all together

00:29:06,630 --> 00:29:10,950
and then there's the robot operating

00:29:08,880 --> 00:29:13,230
system which is kind of interesting it's

00:29:10,950 --> 00:29:15,780
not just for voice assistant it goes way

00:29:13,230 --> 00:29:18,000
beyond that I looked at both of these

00:29:15,780 --> 00:29:20,490
and there were a little bit more complex

00:29:18,000 --> 00:29:25,049
for my taste than I wanted so that's why

00:29:20,490 --> 00:29:29,669
I ended up developing my own so with

00:29:25,049 --> 00:29:38,100
that in mind let's go in and see if we

00:29:29,669 --> 00:29:43,760
can do this first of all I have to make

00:29:38,100 --> 00:29:43,760
sure that I'm on the right Wi-Fi

00:29:45,669 --> 00:29:53,799
all right I'm going to cheat and look at

00:29:50,320 --> 00:29:56,200
my notes and I have this all in a github

00:29:53,799 --> 00:29:58,570
later for you guys if you want so the

00:29:56,200 --> 00:30:02,259
first thing is make sure that pulse the

00:29:58,570 --> 00:30:06,519
pulse audio daemon is running it was so

00:30:02,259 --> 00:30:08,709
if it wasn't running sorry about that

00:30:06,519 --> 00:30:13,899
if it wasn't running then I would run

00:30:08,709 --> 00:30:17,679
this command this command is to run

00:30:13,899 --> 00:30:20,529
pulseaudio as a daemon load the native

00:30:17,679 --> 00:30:22,719
TCP driver that's already built in you

00:30:20,529 --> 00:30:25,259
find that everywhere and the other

00:30:22,719 --> 00:30:29,200
interesting part is I'm going to allow

00:30:25,259 --> 00:30:31,749
these this like localhost and also this

00:30:29,200 --> 00:30:33,909
specific IP range they might know where

00:30:31,749 --> 00:30:35,469
I'm heading with this I actually already

00:30:33,909 --> 00:30:37,749
wrote it in there anyway this is the

00:30:35,469 --> 00:30:40,089
docker IP range that I have and I'm

00:30:37,749 --> 00:30:43,769
going to allow anonymous access there is

00:30:40,089 --> 00:30:46,690
a cookie cookie based access but it's um

00:30:43,769 --> 00:30:48,879
it's more than I want right now now I'm

00:30:46,690 --> 00:30:51,429
not gonna suggest subject you guys to

00:30:48,879 --> 00:30:53,619
this but actually no since we've got it

00:30:51,429 --> 00:30:57,219
tied in and I just really want to play

00:30:53,619 --> 00:31:00,399
this no not yet so I'm going to run

00:30:57,219 --> 00:31:05,579
docker and one interesting thing about

00:31:00,399 --> 00:31:05,579
pulseaudio is if I've got pulse running

00:31:07,950 --> 00:31:12,239
if I've got pulse running on the host

00:31:15,429 --> 00:31:22,539
then I can share my pulse audio from the

00:31:20,469 --> 00:31:24,700
host through to the docker container

00:31:22,539 --> 00:31:26,440
that means that I can develop in the way

00:31:24,700 --> 00:31:28,419
that I usually like to develop which is

00:31:26,440 --> 00:31:32,969
self-contained and in this case it ends

00:31:28,419 --> 00:31:32,969
up technically being a Linux system so

00:31:33,539 --> 00:31:41,440
the other parts of this I'm telling it

00:31:37,929 --> 00:31:43,929
that my my pulse server is this docker

00:31:41,440 --> 00:31:46,869
for Mac localhost which always resolves

00:31:43,929 --> 00:31:48,999
to the host IP address I'm giving it my

00:31:46,869 --> 00:31:50,830
pulse configuration here same thing

00:31:48,999 --> 00:31:52,779
mounting that into the container and I'm

00:31:50,830 --> 00:31:54,359
mounting a chunk of code which is the

00:31:52,779 --> 00:32:00,009
very beginnings of this do-it-yourself

00:31:54,359 --> 00:32:04,089
Jarvis process and then I'm using this

00:32:00,009 --> 00:32:06,869
magical pocket Sphinx go image and this

00:32:04,089 --> 00:32:10,839
is available on github - all it is is

00:32:06,869 --> 00:32:13,269
the pocket Sphinx library with go

00:32:10,839 --> 00:32:16,029
bindings because I do go goaling

00:32:13,269 --> 00:32:19,089
development there's also Python bindings

00:32:16,029 --> 00:32:21,969
there's the Rossi live C bindings if

00:32:19,089 --> 00:32:24,609
you're interested in that probably if

00:32:21,969 --> 00:32:26,529
you're I mean I encourage you to take a

00:32:24,609 --> 00:32:28,239
look at the go bindings because I like

00:32:26,529 --> 00:32:30,190
go as a language but if you're more

00:32:28,239 --> 00:32:34,259
comfortable in Python there's a lot of

00:32:30,190 --> 00:32:39,999
write-ups on that too so we come into

00:32:34,259 --> 00:32:42,009
docker container and then we can I said

00:32:39,999 --> 00:32:47,820
earlier that it's it's useful to know

00:32:42,009 --> 00:32:51,249
the PA CTL commands so list sources and

00:32:47,820 --> 00:32:54,639
so we've get all this data back and I

00:32:51,249 --> 00:32:56,139
have some other weird audio components

00:32:54,639 --> 00:32:58,419
going on so I have to hunt through this

00:32:56,139 --> 00:33:02,739
and most systems you only have like one

00:32:58,419 --> 00:33:04,899
default in and out so anyway it pays to

00:33:02,739 --> 00:33:06,879
make sure that these are set to the

00:33:04,899 --> 00:33:08,169
right defaults otherwise it'll be

00:33:06,879 --> 00:33:10,029
playing on something that you're not

00:33:08,169 --> 00:33:13,649
actually listening to but I'm pretty

00:33:10,029 --> 00:33:13,649
sure that my defaults are set properly

00:33:17,259 --> 00:33:21,379
and just to make sure that it's set

00:33:19,940 --> 00:33:23,629
properly I'm gonna scroll back up and

00:33:21,379 --> 00:33:27,230
make sure I said it seems listing

00:33:23,629 --> 00:33:28,999
sources a source is the audio coming in

00:33:27,230 --> 00:33:34,850
so I'm gonna say the built-in microphone

00:33:28,999 --> 00:33:39,740
which is source 0 and then I'm going to

00:33:34,850 --> 00:33:41,960
PA CTL list sinks and this is the things

00:33:39,740 --> 00:33:47,869
that I can play audio out through and

00:33:41,960 --> 00:33:51,350
I'm going to set the default sync to to

00:33:47,869 --> 00:33:57,529
the system out which will probably be 1

00:33:51,350 --> 00:33:59,269
or 0 looks like it's 0 so the great

00:33:57,529 --> 00:34:01,159
thing about pulse audio is now that I've

00:33:59,269 --> 00:34:04,399
got that set every other application

00:34:01,159 --> 00:34:08,139
that just uses the default will use what

00:34:04,399 --> 00:34:12,530
I just set as the default here so just

00:34:08,139 --> 00:34:15,040
FYI so what I'm going to do now is I'm

00:34:12,530 --> 00:34:15,040
going to run

00:34:16,540 --> 00:34:23,260
I'm gonna run pocket Sphinx and at first

00:34:20,210 --> 00:34:27,319
I'm just going to run Park it sinks with

00:34:23,260 --> 00:34:29,780
without key words there we go that's why

00:34:27,319 --> 00:34:32,450
that looked weird so the pocket Sphinx

00:34:29,780 --> 00:34:36,349
without key words looks like this as it

00:34:32,450 --> 00:34:39,829
starts up and I don't know if you saw

00:34:36,349 --> 00:34:41,960
that earlier I'm going to talk to it a

00:34:39,829 --> 00:34:43,940
little bit more here just so that you

00:34:41,960 --> 00:34:47,299
see that it is like not at all

00:34:43,940 --> 00:34:49,429
calibrated okay that was enough but you

00:34:47,299 --> 00:34:53,179
see that it's looking through a search

00:34:49,429 --> 00:34:57,260
space of over 20,000 actually I think it

00:34:53,179 --> 00:34:58,549
was 40,000 words that it loads here and

00:34:57,260 --> 00:35:02,569
the problem the reason why it's

00:34:58,549 --> 00:35:05,900
inaccurate this lattice is basically the

00:35:02,569 --> 00:35:07,700
search space there or the way that it's

00:35:05,900 --> 00:35:09,940
searching through all those nodes there

00:35:07,700 --> 00:35:09,940
it is

00:35:11,079 --> 00:35:17,410
27,000 Oh 278 thousand words and like

00:35:14,990 --> 00:35:21,559
all this like a massive search space and

00:35:17,410 --> 00:35:23,660
it's not getting like there's also noise

00:35:21,559 --> 00:35:25,250
in the room and other stuff but it's not

00:35:23,660 --> 00:35:26,690
picking up my voice properly so what

00:35:25,250 --> 00:35:29,900
we're going to do we're going to take

00:35:26,690 --> 00:35:33,880
these keywords now the keywords

00:35:29,900 --> 00:35:36,799
come from this command text here and

00:35:33,880 --> 00:35:39,559
this these are the commands that I want

00:35:36,799 --> 00:35:42,499
it to specifically recognize I don't

00:35:39,559 --> 00:35:44,960
want it to just like broadly interpret

00:35:42,499 --> 00:35:46,279
whatever English is spoken because I'm

00:35:44,960 --> 00:35:50,690
gonna get a bunch of gibberish out

00:35:46,279 --> 00:35:52,099
unless I have a highly tuned model does

00:35:50,690 --> 00:35:54,200
anybody remember Dragon

00:35:52,099 --> 00:35:56,779
NaturallySpeaking preferred like that

00:35:54,200 --> 00:36:00,819
was so dragon was all about getting that

00:35:56,779 --> 00:36:04,849
model like super fitted to your voice

00:36:00,819 --> 00:36:08,240
this is not that so anyway I'm going to

00:36:04,849 --> 00:36:18,440
take these these phrases and I'm going

00:36:08,240 --> 00:36:21,400
to feed them in to think I'm gonna feed

00:36:18,440 --> 00:36:21,400
these phrases

00:36:22,490 --> 00:36:25,610
[Music]

00:36:32,739 --> 00:36:37,400
there's a handy program and I'll have to

00:36:35,479 --> 00:36:44,779
find it on the website later it's in my

00:36:37,400 --> 00:36:47,179
notes but I feed the phrases into there

00:36:44,779 --> 00:36:51,559
the the website to get out the

00:36:47,179 --> 00:36:52,669
pronunciations and the different well

00:36:51,559 --> 00:36:54,079
that the different vowel or the

00:36:52,669 --> 00:36:58,569
different parts of speech that we're

00:36:54,079 --> 00:36:58,569
looking for so what that looks like is

00:36:59,109 --> 00:37:03,729
each one that comes out is numbered

00:37:03,880 --> 00:37:08,599
there we go

00:37:05,329 --> 00:37:11,140
so I've fed in these commands and what I

00:37:08,599 --> 00:37:14,479
get out are these sentences and these

00:37:11,140 --> 00:37:18,499
language models so basically what I'm

00:37:14,479 --> 00:37:21,469
giving pulseaudio or not and what I'm

00:37:18,499 --> 00:37:23,449
giving pocket Sphinx is a custom

00:37:21,469 --> 00:37:25,699
language model and it's not the entire

00:37:23,449 --> 00:37:26,900
English English language model it's just

00:37:25,699 --> 00:37:29,869
the language model that I want it to

00:37:26,900 --> 00:37:31,640
detect from my own commands and this

00:37:29,869 --> 00:37:33,829
also means that if I want to expand the

00:37:31,640 --> 00:37:37,219
command set then I'll just send it

00:37:33,829 --> 00:37:39,289
another set of commands to recognize

00:37:37,219 --> 00:37:42,459
feed that back through get this language

00:37:39,289 --> 00:37:46,699
model too I also said there was a lot of

00:37:42,459 --> 00:37:49,309
a lot of tuning that can be done that

00:37:46,699 --> 00:37:51,439
comes from the pronunciation or know it

00:37:49,309 --> 00:37:54,709
comes from the dictionary here if you

00:37:51,439 --> 00:37:56,809
have a speech impediment or if you want

00:37:54,709 --> 00:38:00,289
just say words in a really weird fashion

00:37:56,809 --> 00:38:04,369
you can hand edit this to match what

00:38:00,289 --> 00:38:09,949
you're actually saying interesting note

00:38:04,369 --> 00:38:11,179
so moving on from that I've got so the

00:38:09,949 --> 00:38:13,219
first one I showed you was without

00:38:11,179 --> 00:38:20,449
keywords and now I'm going to show you

00:38:13,219 --> 00:38:22,659
the one with keywords now this one

00:38:20,449 --> 00:38:30,759
should only listen for things like

00:38:22,659 --> 00:38:30,759
Jarvis Jarvis play Pandora

00:38:31,080 --> 00:38:39,420
and there should be raging applaud yeah

00:38:34,040 --> 00:38:41,250
cuz cuz really like getting to that

00:38:39,420 --> 00:38:43,200
point just from the like getting to the

00:38:41,250 --> 00:38:45,270
point where you can now get words that

00:38:43,200 --> 00:38:47,220
are triggered and then you can I mean

00:38:45,270 --> 00:38:50,100
now you guys know it's pretty trivial

00:38:47,220 --> 00:38:53,580
now now we just go do an action like go

00:38:50,100 --> 00:38:58,760
get a command-line interface to Pandora

00:38:53,580 --> 00:39:01,380
a piano bar and go play it right yeah

00:38:58,760 --> 00:39:02,880
this guy knows what I'm talking about so

00:39:01,380 --> 00:39:05,070
you just hook in a bunch of different

00:39:02,880 --> 00:39:07,860
programs now it's just a giant switch

00:39:05,070 --> 00:39:10,350
statement now what you could do is you

00:39:07,860 --> 00:39:12,890
could also combine and cheat a little

00:39:10,350 --> 00:39:15,750
bit to say if you hear this key word

00:39:12,890 --> 00:39:17,880
start recording audio and then either

00:39:15,750 --> 00:39:21,300
shift that audio off to a more beefy

00:39:17,880 --> 00:39:23,010
system to do something with or one of

00:39:21,300 --> 00:39:27,030
the directions I was starting to take

00:39:23,010 --> 00:39:30,720
this was I like I like the idea of

00:39:27,030 --> 00:39:33,420
building a like a programming language

00:39:30,720 --> 00:39:35,850
on my own to be able to tell my systems

00:39:33,420 --> 00:39:38,340
to do different things so taking notes

00:39:35,850 --> 00:39:40,920
and then like basically formatting those

00:39:38,340 --> 00:39:45,600
notes with text and that's what this

00:39:40,920 --> 00:39:48,540
whole system is building up to so with

00:39:45,600 --> 00:39:51,570
the keywords here and then just because

00:39:48,540 --> 00:39:53,220
like you're probably thinking well you

00:39:51,570 --> 00:39:55,170
know you got the pocket you know the

00:39:53,220 --> 00:39:58,080
pockets Fink's continuous thing to work

00:39:55,170 --> 00:40:00,330
but how do you actually like grab the

00:39:58,080 --> 00:40:02,750
output of that and do something with it

00:40:00,330 --> 00:40:08,030
well I'm glad you asked my hypothetical

00:40:02,750 --> 00:40:08,030
interloper so we're going to go into

00:40:08,360 --> 00:40:13,830
into this program and my apologies if

00:40:12,060 --> 00:40:16,190
you're not a native go programmer I

00:40:13,830 --> 00:40:20,250
don't think it should be that that

00:40:16,190 --> 00:40:27,210
outside to learn about what we're doing

00:40:20,250 --> 00:40:30,360
is we're starting in the let me compress

00:40:27,210 --> 00:40:34,800
all of this because what you have is

00:40:30,360 --> 00:40:38,630
effectively the okay so the main main

00:40:34,800 --> 00:40:40,800
function and we're going to do app run

00:40:38,630 --> 00:40:43,650
first thing we're going to do is start

00:40:40,800 --> 00:40:44,760
up the port audio system and the port

00:40:43,650 --> 00:40:46,980
audio system

00:40:44,760 --> 00:40:49,830
is going to just use the defaults it

00:40:46,980 --> 00:40:51,780
initializes that comes with the defaults

00:40:49,830 --> 00:40:53,730
that's why I was talking about PA CTL

00:40:51,780 --> 00:40:56,780
earlier then we're going to initialize

00:40:53,730 --> 00:40:59,220
things and we're going to give it our

00:40:56,780 --> 00:41:01,980
hidden Markov model now you know what

00:40:59,220 --> 00:41:04,830
hmm stands for the dictionary of the

00:41:01,980 --> 00:41:07,950
language model and just to point out too

00:41:04,830 --> 00:41:09,840
we're not when I gave it its own custom

00:41:07,950 --> 00:41:12,120
commands I didn't change the hidden

00:41:09,840 --> 00:41:15,120
Markov model for that pocket Sphinx is

00:41:12,120 --> 00:41:17,850
using I just told it only actually care

00:41:15,120 --> 00:41:19,650
about this subset you could change the

00:41:17,850 --> 00:41:31,860
hmm out there's an entire learning

00:41:19,650 --> 00:41:34,590
section yes sir that's a great question

00:41:31,860 --> 00:41:37,560
there is actually a standard I'm not

00:41:34,590 --> 00:41:39,930
sure exactly what the what that standard

00:41:37,560 --> 00:41:41,550
is called right now but it does use the

00:41:39,930 --> 00:41:49,260
the standard because it's used in a lot

00:41:41,550 --> 00:41:56,190
of academic journals so yeah yes sir not

00:41:49,260 --> 00:41:58,640
the internet well it no yeah well yeah

00:41:56,190 --> 00:41:58,640
there's less

00:42:03,860 --> 00:42:11,040
there so there is a transliteration not

00:42:09,060 --> 00:42:14,520
sure what the name of it is right now

00:42:11,040 --> 00:42:16,080
but it's a yeah sorry no it is a

00:42:14,520 --> 00:42:17,370
standard I'm not really sure what the

00:42:16,080 --> 00:42:19,230
standard is right now because I haven't

00:42:17,370 --> 00:42:21,570
gone into like modifying the phonemes

00:42:19,230 --> 00:42:24,660
yet I just used the stock stuff that

00:42:21,570 --> 00:42:29,220
comes with a system do you know what the

00:42:24,660 --> 00:42:31,080
standard is there's like a it's a

00:42:29,220 --> 00:42:33,030
linguistic standard because it's not

00:42:31,080 --> 00:42:36,450
just used in computational it's actually

00:42:33,030 --> 00:42:39,840
used to like to study systematically

00:42:36,450 --> 00:42:42,210
other languages or and English too but

00:42:39,840 --> 00:42:44,280
and it's also used in like the medical

00:42:42,210 --> 00:42:46,410
literature like you can hear these

00:42:44,280 --> 00:42:48,240
vowels but not these and and like it

00:42:46,410 --> 00:42:51,930
really you could really get into the

00:42:48,240 --> 00:42:54,120
weeds on that anyway last less

00:42:51,930 --> 00:42:58,620
interesting bit on this we set the

00:42:54,120 --> 00:43:00,240
sample rate and starting the system the

00:42:58,620 --> 00:43:04,680
only thing we're going to do is we're

00:43:00,240 --> 00:43:09,450
going to open the stream from port audio

00:43:04,680 --> 00:43:12,330
and we're going to give it a callback

00:43:09,450 --> 00:43:15,360
here which is every time you get some

00:43:12,330 --> 00:43:17,820
data basically feed that data into

00:43:15,360 --> 00:43:21,090
Sphinx and see if Sphinx will make a

00:43:17,820 --> 00:43:24,840
prediction okay and then once it comes

00:43:21,090 --> 00:43:28,890
back with a prediction this hypothesis

00:43:24,840 --> 00:43:31,890
here which hypothesis is called here and

00:43:28,890 --> 00:43:33,930
this is the specifics of the code is

00:43:31,890 --> 00:43:37,020
different of course in Python but the

00:43:33,930 --> 00:43:38,670
overall is the same in Python it looks

00:43:37,020 --> 00:43:41,190
like this we're opening up port audio

00:43:38,670 --> 00:43:44,010
we're opening up Sphinx and we're taking

00:43:41,190 --> 00:43:46,380
the audio from port audio and we're

00:43:44,010 --> 00:43:48,090
sending it over to Fink's one

00:43:46,380 --> 00:43:50,550
optimization like I was saying with

00:43:48,090 --> 00:43:52,680
silence in order to make the system not

00:43:50,550 --> 00:43:54,930
run hot all the time you probably want

00:43:52,680 --> 00:43:56,930
to calibrate like what's your notion of

00:43:54,930 --> 00:44:00,060
silence is so that it's not just

00:43:56,930 --> 00:44:02,160
continually shoving data into two sinks

00:44:00,060 --> 00:44:03,930
audio this is an optimization I haven't

00:44:02,160 --> 00:44:05,970
made yet but I was thinking about it

00:44:03,930 --> 00:44:08,370
this morning doesn't need to be made but

00:44:05,970 --> 00:44:10,620
at the end of it once you get a detected

00:44:08,370 --> 00:44:13,200
keyword that's where you go off to the

00:44:10,620 --> 00:44:15,590
races so to show you this piece in

00:44:13,200 --> 00:44:15,590
action

00:44:18,810 --> 00:44:25,660
for those who are native go programmers

00:44:22,860 --> 00:44:27,190
running it as go run treats it as a

00:44:25,660 --> 00:44:30,730
script and that's not really the way

00:44:27,190 --> 00:44:40,660
that people suggest but let's see

00:44:30,730 --> 00:44:47,950
running in okay all right Jarvis Jarvis

00:44:40,660 --> 00:44:50,730
play Pandora so that's it that's the

00:44:47,950 --> 00:44:58,960
beginnings and the end of your entire

00:44:50,730 --> 00:45:01,360
system but wait there's more so that is

00:44:58,960 --> 00:45:04,300
the the system itself like the framework

00:45:01,360 --> 00:45:07,900
of the system now how do we take that

00:45:04,300 --> 00:45:10,840
system and miniaturize it and use it

00:45:07,900 --> 00:45:14,700
everywhere so like I said I like running

00:45:10,840 --> 00:45:18,310
Raspberry Pi in my car or I like running

00:45:14,700 --> 00:45:20,200
the Alexa voice assistant in my car I'd

00:45:18,310 --> 00:45:23,500
like to be able to run this in my car

00:45:20,200 --> 00:45:26,140
and use piano bar on that to just play

00:45:23,500 --> 00:45:28,840
or like extended however I want because

00:45:26,140 --> 00:45:30,880
one of the sad things about Amazon Alexa

00:45:28,840 --> 00:45:32,800
is that it has no location awareness by

00:45:30,880 --> 00:45:34,510
itself so when we're driving down the

00:45:32,800 --> 00:45:36,850
road like on the way here we can't just

00:45:34,510 --> 00:45:38,500
tell it halex so where's the next gas

00:45:36,850 --> 00:45:39,070
station along the route or something

00:45:38,500 --> 00:45:40,570
like that

00:45:39,070 --> 00:45:43,240
now other voice assistance especially

00:45:40,570 --> 00:45:45,550
Google's can do that but I'd like to be

00:45:43,240 --> 00:45:48,850
able to do that so if I have the key

00:45:45,550 --> 00:45:51,340
words and I can just hook into here then

00:45:48,850 --> 00:45:55,450
I can extend it and actually make it

00:45:51,340 --> 00:45:56,950
super useful for a life on the road so

00:45:55,450 --> 00:45:58,240
what you do is you start with a

00:45:56,950 --> 00:46:01,690
Raspberry Pi nano

00:45:58,240 --> 00:46:04,360
wh which stands for wireless with a hat

00:46:01,690 --> 00:46:08,170
if you can solder these things on your

00:46:04,360 --> 00:46:10,330
own be my guest but I can't so and then

00:46:08,170 --> 00:46:15,040
add to it one other piece which is the

00:46:10,330 --> 00:46:18,100
raspy audio mic plus hat that has two

00:46:15,040 --> 00:46:20,260
onboard speakers a breakaway mic and it

00:46:18,100 --> 00:46:23,200
has post on it where you can connect

00:46:20,260 --> 00:46:25,660
speakers to it like external speakers it

00:46:23,200 --> 00:46:27,070
also has a really big red button anybody

00:46:25,660 --> 00:46:28,089
know what I would use the big red button

00:46:27,070 --> 00:46:30,189
for

00:46:28,089 --> 00:46:32,109
to have it not continually record all

00:46:30,189 --> 00:46:34,479
the time since it's right there in the

00:46:32,109 --> 00:46:39,539
console I can just press hey likes that

00:46:34,479 --> 00:46:41,650
that cuts down a lot of processing the

00:46:39,539 --> 00:46:44,529
one thing I'll note about it is the

00:46:41,650 --> 00:46:45,759
arrangement is novel but the the mic on

00:46:44,529 --> 00:46:49,269
it isn't that great

00:46:45,759 --> 00:46:51,219
so probably want to add your own another

00:46:49,269 --> 00:46:53,140
another valid option is a Bluetooth

00:46:51,219 --> 00:46:55,989
headset the great thing about box audio

00:46:53,140 --> 00:47:00,219
is bluetooth is also supported out of

00:46:55,989 --> 00:47:02,829
the box you can actually have your own

00:47:00,219 --> 00:47:05,199
that's playing through the device and

00:47:02,829 --> 00:47:09,519
you know all kinds of crazy stuff of

00:47:05,199 --> 00:47:13,180
Anadyr the Raspberry Pi nano is half I

00:47:09,519 --> 00:47:15,459
think it's a 500 megahertz like not very

00:47:13,180 --> 00:47:18,699
powerful at all it's very easy to swamp

00:47:15,459 --> 00:47:20,920
this system the Raspberry Pi A+ has the

00:47:18,699 --> 00:47:23,019
same processing power as a B I believe

00:47:20,920 --> 00:47:26,259
and so that's where you'll see a lot of

00:47:23,019 --> 00:47:28,479
people I'm switching to it whatever

00:47:26,259 --> 00:47:32,319
floats your boat so start with the

00:47:28,479 --> 00:47:36,849
Raspberry Pi w that H the posts there or

00:47:32,319 --> 00:47:39,699
the H at the hat to peace and add this

00:47:36,849 --> 00:47:41,019
Raspberry Pi Mike plus now I check their

00:47:39,699 --> 00:47:43,630
website right before I came to the

00:47:41,019 --> 00:47:46,569
conference and they have a link on there

00:47:43,630 --> 00:47:48,759
to go buy it from Amazon I clicked on

00:47:46,569 --> 00:47:51,609
the link and it took me to the Raspberry

00:47:48,759 --> 00:47:53,289
Pi all yo+ which is not the same thing

00:47:51,609 --> 00:47:54,999
and I was getting really depressed about

00:47:53,289 --> 00:47:55,959
that so I wrote the guys and I asked him

00:47:54,999 --> 00:47:58,239
like what are you gonna have the mod

00:47:55,959 --> 00:47:59,890
pluses back in in stock because I

00:47:58,239 --> 00:48:01,479
figured you guys would want to know and

00:47:59,890 --> 00:48:05,469
they said that it's gonna be back in

00:48:01,479 --> 00:48:07,420
stock June 23rd just FYI I love this

00:48:05,469 --> 00:48:09,729
this piece here it has everything built

00:48:07,420 --> 00:48:11,769
in it means that you don't have a whole

00:48:09,729 --> 00:48:14,439
lot of cables and everything else going

00:48:11,769 --> 00:48:16,749
everywhere and so that's what it looks

00:48:14,439 --> 00:48:21,999
like all assembled and put together and

00:48:16,749 --> 00:48:23,890
it's about yay big so if anybody wants

00:48:21,999 --> 00:48:26,079
to get a closer look at it although that

00:48:23,890 --> 00:48:30,670
one's pretty big do so the two onboard

00:48:26,079 --> 00:48:32,499
mics yeah two onboard mics post to

00:48:30,670 --> 00:48:34,209
connect if you if you're really like

00:48:32,499 --> 00:48:35,920
hard audio file or something like that

00:48:34,209 --> 00:48:39,459
you want to hardwire it into your car or

00:48:35,920 --> 00:48:41,559
something one piece that's interesting

00:48:39,459 --> 00:48:42,070
in the middle there is the mic is

00:48:41,559 --> 00:48:44,020
designed

00:48:42,070 --> 00:48:46,090
to be broken off and there's a ribbon

00:48:44,020 --> 00:48:48,010
that it comes with and the reason that

00:48:46,090 --> 00:48:51,280
it comes with a ribbon is because the

00:48:48,010 --> 00:48:53,860
raspy audio people have this this really

00:48:51,280 --> 00:48:55,840
cool video online of taking the the mic

00:48:53,860 --> 00:48:57,910
and basically just doing a hard

00:48:55,840 --> 00:48:59,530
transformation on the audio coming out

00:48:57,910 --> 00:49:02,050
of the mic and the audio being played

00:48:59,530 --> 00:49:05,260
through the speakers just a simple

00:49:02,050 --> 00:49:08,380
vocoder or voice translator they put it

00:49:05,260 --> 00:49:13,660
in a they put it in a Halloween mask

00:49:08,380 --> 00:49:16,120
which I thought was kind of funny so as

00:49:13,660 --> 00:49:18,340
if anybody have any uh any questions

00:49:16,120 --> 00:49:20,200
this is also where the code examples

00:49:18,340 --> 00:49:23,740
that I was showing earlier are gonna be

00:49:20,200 --> 00:49:26,890
at oh and I really do need to point this

00:49:23,740 --> 00:49:30,370
out we are hiring so if you want to work

00:49:26,890 --> 00:49:34,350
with smart people doing big data reach

00:49:30,370 --> 00:49:34,350
out to me yes sir in the back

00:49:36,270 --> 00:49:40,600
yes I actually have a subscription to

00:49:38,710 --> 00:49:42,820
Mycroft sir there's actually several so

00:49:40,600 --> 00:49:45,760
for those who aren't familiar there's

00:49:42,820 --> 00:49:48,820
several other like semi-open places that

00:49:45,760 --> 00:49:50,290
try to get the model they're what

00:49:48,820 --> 00:49:52,300
they're bringing to the table is they

00:49:50,290 --> 00:49:56,500
will do a much better job of detecting

00:49:52,300 --> 00:49:59,590
the words than pockets things will

00:49:56,500 --> 00:50:02,160
pocket Sphinx is in all honesty it's not

00:49:59,590 --> 00:50:04,330
the best it's better than nothing and

00:50:02,160 --> 00:50:06,610
that's pretty much what we have in the

00:50:04,330 --> 00:50:09,030
Linux the open source space so we have a

00:50:06,610 --> 00:50:12,490
lot of other people that are semi free

00:50:09,030 --> 00:50:14,970
snowboy is another one pretty decent

00:50:12,490 --> 00:50:18,670
company but it's not entirely free

00:50:14,970 --> 00:50:21,100
Mycroft is one Mycroft actually has yeah

00:50:18,670 --> 00:50:23,880
there's our interesting those of you who

00:50:21,100 --> 00:50:26,590
are interested in cloning voices

00:50:23,880 --> 00:50:29,260
Lyrebird is really interesting they have

00:50:26,590 --> 00:50:31,060
an API that's available the first thing

00:50:29,260 --> 00:50:34,210
you do is clone your own voice to make

00:50:31,060 --> 00:50:36,370
your own voice like the speaking back

00:50:34,210 --> 00:50:38,380
which comes in really handy if you want

00:50:36,370 --> 00:50:42,310
to like attend a bunch of meetings and

00:50:38,380 --> 00:50:44,020
just say things like yeah mmhmm not that

00:50:42,310 --> 00:50:46,270
not that I would have recommend you

00:50:44,020 --> 00:50:49,570
doing that but it does help you

00:50:46,270 --> 00:50:51,430
multiplex yourself so yeah there's a lot

00:50:49,570 --> 00:50:53,560
of semi-free things and if you're if

00:50:51,430 --> 00:50:56,049
you're going to go that route I'll also

00:50:53,560 --> 00:50:59,079
throw in there Amazon has

00:50:56,049 --> 00:51:01,959
an API Google has an AI Y project which

00:50:59,079 --> 00:51:05,170
is actually what the what this is tied

00:51:01,959 --> 00:51:07,150
to the Google AI Y which is basically a

00:51:05,170 --> 00:51:09,099
do it your it's another do it yourself

00:51:07,150 --> 00:51:12,039
voice assistant and they have an entire

00:51:09,099 --> 00:51:13,569
kit but it's not entirely open-source

00:51:12,039 --> 00:51:15,699
that was one of my constraints for this

00:51:13,569 --> 00:51:17,039
project is that every piece of it I

00:51:15,699 --> 00:51:19,390
wanted to make sure it was open-source

00:51:17,039 --> 00:51:22,920
but if you're open for the semi open

00:51:19,390 --> 00:51:26,289
source Google's open Amazon we see

00:51:22,920 --> 00:51:29,259
you're gonna laugh but ibm's watson has

00:51:26,289 --> 00:51:33,039
its own api and in all honesty watson is

00:51:29,259 --> 00:51:35,289
cheaper per minute of recording than any

00:51:33,039 --> 00:51:36,999
other service out there they're also a

00:51:35,289 --> 00:51:39,369
lot more flaky than every other service

00:51:36,999 --> 00:51:40,869
out there so your mileage may vary but

00:51:39,369 --> 00:51:45,369
there's there's tons of options like

00:51:40,869 --> 00:51:54,539
that yeah in fact a hybrid system might

00:51:45,369 --> 00:51:59,769
be really useful - yes sir oh yeah oh

00:51:54,539 --> 00:52:02,009
yeah absolutely in fact not only myself

00:51:59,769 --> 00:52:04,119
pronouncing them different but

00:52:02,009 --> 00:52:06,160
correcting my kids when they're trying

00:52:04,119 --> 00:52:07,809
to talk to Alexa Alexa like I don't know

00:52:06,160 --> 00:52:17,619
what you're saying it's because you're

00:52:07,809 --> 00:52:21,749
talking like a southerner yes sir Mary

00:52:17,619 --> 00:52:21,749
TTS no

00:52:25,480 --> 00:52:28,480
okay

00:52:31,190 --> 00:52:36,690
okay cool no I haven't yeah I haven't

00:52:34,799 --> 00:52:38,609
encountered that like I was saying for

00:52:36,690 --> 00:52:42,209
the TT text-to-speech

00:52:38,609 --> 00:52:44,640
I think the taco Tron project it's also

00:52:42,209 --> 00:52:48,359
by Google is one that shows the most

00:52:44,640 --> 00:52:51,239
promise mostly because they get a little

00:52:48,359 --> 00:52:53,400
bit of way from just just thinking about

00:52:51,239 --> 00:52:56,339
it in terms of phonemes and you can

00:52:53,400 --> 00:52:58,140
actually overlay other voices like human

00:52:56,339 --> 00:53:02,069
voice that's where Lyrebird and those

00:52:58,140 --> 00:53:08,029
are coming into play but yeah I'll take

00:53:02,069 --> 00:53:08,029
a look at that one anybody else yes sir

00:53:11,999 --> 00:53:20,130
best in terms of the Raspberry Pi about

00:53:16,640 --> 00:53:22,079
44,000 the higher you get though on any

00:53:20,130 --> 00:53:24,390
other device the more resolution you'll

00:53:22,079 --> 00:53:26,400
get so I mean it's like anything else

00:53:24,390 --> 00:53:28,249
right but there's only so much that the

00:53:26,400 --> 00:53:31,950
Raspberry Pi especially its onboard

00:53:28,249 --> 00:53:43,079
digital audio converter can handle so

00:53:31,950 --> 00:53:53,989
the standard 44,000 does it work yeah I

00:53:43,079 --> 00:53:59,059
did bring it live demo man it's true and

00:53:53,989 --> 00:53:59,059
especially since I had it connected to I

00:53:59,719 --> 00:54:04,739
had it connected out in the lobby and

00:54:02,239 --> 00:54:09,299
I'm pretty sure that my Raspberry Pi

00:54:04,739 --> 00:54:12,319
changed where it was while I'm looking

00:54:09,299 --> 00:54:12,319
at this joke question

00:54:16,109 --> 00:54:27,309
of access oh yeah

00:54:25,210 --> 00:54:30,839
interesting weird fact - your voice

00:54:27,309 --> 00:54:33,400
changes over time do you know that so

00:54:30,839 --> 00:54:35,380
kind of getting into the security talk

00:54:33,400 --> 00:54:37,710
don't ever use your voice as a password

00:54:35,380 --> 00:54:44,619
for something but so it's not just

00:54:37,710 --> 00:54:46,660
accents it's some like biometrics well

00:54:44,619 --> 00:54:48,130
almost everything about us changes over

00:54:46,660 --> 00:54:51,190
time so so one thing that I've noticed

00:54:48,130 --> 00:54:55,150
is that the models have to be looser to

00:54:51,190 --> 00:54:57,609
be more useful so the reason why was

00:54:55,150 --> 00:54:59,799
anybody here a customer of Grand Central

00:54:57,609 --> 00:55:03,250
Station before it became Google Voice

00:54:59,799 --> 00:55:06,059
anybody use Google Voice they may

00:55:03,250 --> 00:55:09,519
remember the initial voice or the

00:55:06,059 --> 00:55:17,079
voicemail to text system as it came out

00:55:09,519 --> 00:55:18,339
I had yeah I had a really southern

00:55:17,079 --> 00:55:20,220
friend of mine that would always call

00:55:18,339 --> 00:55:22,630
and leave voice messages and it was

00:55:20,220 --> 00:55:25,660
hilarious I still have some of them

00:55:22,630 --> 00:55:28,089
listed I did well so they added this

00:55:25,660 --> 00:55:29,470
editor so that you could fix it and what

00:55:28,089 --> 00:55:34,410
they were doing was trying to correct

00:55:29,470 --> 00:55:34,410
for accents right so

00:55:41,880 --> 00:55:48,070
yeah but that kind of goes to show that

00:55:44,700 --> 00:55:50,230
just to get from hot garbage to lukewarm

00:55:48,070 --> 00:55:53,890
garbage there's something in the machine

00:55:50,230 --> 00:55:57,190
learning community that 90% is barely

00:55:53,890 --> 00:55:59,320
usable to get to that note it's 98

00:55:57,190 --> 00:56:01,840
percent to get to 99 percent where it's

00:55:59,320 --> 00:56:03,670
actually natural takes an enormous like

00:56:01,840 --> 00:56:08,200
an exponential amount of computing and

00:56:03,670 --> 00:56:15,240
training and all that so it's a yeah so

00:56:08,200 --> 00:56:18,340
you were asking about this thing and

00:56:15,240 --> 00:56:27,550
trying to remember where I where I

00:56:18,340 --> 00:56:29,140
stuffed it that's true so here's the the

00:56:27,550 --> 00:56:32,080
Python version that I'm going to admit

00:56:29,140 --> 00:56:33,880
is probably hot garbage as well because

00:56:32,080 --> 00:56:35,530
I hadn't tuned it at all I've been

00:56:33,880 --> 00:56:39,280
trying to get more towards the at the go

00:56:35,530 --> 00:56:42,190
side but this was the the Python side

00:56:39,280 --> 00:56:46,930
that I was showing earlier which opens

00:56:42,190 --> 00:56:49,180
it up same model of the the golang let's

00:56:46,930 --> 00:56:54,490
see detecting key words and the key

00:56:49,180 --> 00:56:58,030
words that it's detecting are is this

00:56:54,490 --> 00:57:00,730
this piece right here so it's a an array

00:56:58,030 --> 00:57:04,780
a slice here and I'm not exactly sure

00:57:00,730 --> 00:57:07,300
what all it's giving Oh word probability

00:57:04,780 --> 00:57:08,650
start frame and end frame which the

00:57:07,300 --> 00:57:10,630
start frame and end frame are probably

00:57:08,650 --> 00:57:13,060
not important for you guys right now but

00:57:10,630 --> 00:57:15,250
basically you could use it to detect on

00:57:13,060 --> 00:57:16,650
keywords and then do something else with

00:57:15,250 --> 00:57:20,940
the data afterwards

00:57:16,650 --> 00:57:25,120
one other note here is that the the

00:57:20,940 --> 00:57:27,490
bindings for port audio are the

00:57:25,120 --> 00:57:28,990
libraries are even though the library

00:57:27,490 --> 00:57:32,770
has been out there for three years for

00:57:28,990 --> 00:57:35,590
some somehow the distros still have an

00:57:32,770 --> 00:57:40,960
older library still so in many cases

00:57:35,590 --> 00:57:43,530
that it pays to to build it yourself is

00:57:40,960 --> 00:57:45,440
the flashing light there means something

00:57:43,530 --> 00:57:49,340
right there

00:57:45,440 --> 00:57:51,890
okay so I guess a couple of questions

00:57:49,340 --> 00:58:00,860
well one more question then I'll head

00:57:51,890 --> 00:58:04,300
out anybody else yes sir from probably

00:58:00,860 --> 00:58:06,530
more than the Alexa be honest yeah

00:58:04,300 --> 00:58:08,120
alright well thank you guys for coming

00:58:06,530 --> 00:58:18,010
out I hope you got something out of it

00:58:08,120 --> 00:58:18,010

YouTube URL: https://www.youtube.com/watch?v=HU2JyJ2pF94


