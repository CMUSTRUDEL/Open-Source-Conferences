Title: Jason Edgecombe  - Marshall Mark Hamrick - Evangelizing open source by getting things done
Publication date: 2019-06-18
Playlist: 2019 SouthEast LinuxFest
Description: 
	SouthEast Linux Fest 2019

Getting people to work and play with penguins, camels, snakes and other animals:  
Telling people it is free, and that paid software is the evil doesnâ€™t get people to use open source, especially when things have to get done.   The pain, fun, and lessons of two system administrators that have spread the use of open source software for more than 35 years between them.  We cover the way we have taught individuals and groups.  Discussion of when to start using a open source software, and when to let the package go will be discussed.
Captions: 
	00:00:02,110 --> 00:00:19,690
right and green so we record this red

00:00:16,670 --> 00:00:19,690
green flash again we were recording

00:00:22,900 --> 00:00:29,420
we're going to assume we're recording

00:00:25,039 --> 00:00:34,809
our talk today is on evangelizing open

00:00:29,420 --> 00:00:38,420
source by getting things done basically

00:00:34,809 --> 00:00:42,019
telling people it's free and the pace

00:00:38,420 --> 00:00:43,969
source paid software is evil doesn't get

00:00:42,019 --> 00:00:49,190
you anywhere it actually usually makes

00:00:43,969 --> 00:00:53,089
management upset with you now general

00:00:49,190 --> 00:00:54,649
disclaimer our opinions are our own and

00:00:53,089 --> 00:00:58,429
they do not reflect that of our employer

00:00:54,649 --> 00:01:00,799
I am mark Hamrick I am a system

00:00:58,429 --> 00:01:02,510
administrator at the Department of

00:01:00,799 --> 00:01:07,130
Mathematics and statistics at UNC

00:01:02,510 --> 00:01:11,000
Charlotte started using Linux back in

00:01:07,130 --> 00:01:13,640
nineteen a camera was 96 or 97 I was too

00:01:11,000 --> 00:01:15,860
lazy in the hot Summer Sun to walk to

00:01:13,640 --> 00:01:17,150
the computer lab at NC State so I

00:01:15,860 --> 00:01:18,350
grabbed a copy a Red Hat and did

00:01:17,150 --> 00:01:22,130
everything in my dorm room because it

00:01:18,350 --> 00:01:25,130
was air-conditioned hello my name is

00:01:22,130 --> 00:01:26,210
Jason Edgecombe I am the senior Linux

00:01:25,130 --> 00:01:27,800
administrator for the College

00:01:26,210 --> 00:01:31,550
engineering at UNC Charlotte

00:01:27,800 --> 00:01:33,290
I do Linux admin stuff at work and I'd

00:01:31,550 --> 00:01:35,750
also do some open source stuff at home

00:01:33,290 --> 00:01:38,630
including a puppet module and just some

00:01:35,750 --> 00:01:43,790
other random stuff I've been doing Linux

00:01:38,630 --> 00:01:48,520
since I installed slack we're back in 94

00:01:43,790 --> 00:01:48,520
ish so yeah

00:01:50,649 --> 00:01:55,880
okay quick overview first of all we're

00:01:54,619 --> 00:02:00,289
gonna start off with the things that

00:01:55,880 --> 00:02:01,420
shall not be mentioned to users first of

00:02:00,289 --> 00:02:04,009
all is the name of this presentation

00:02:01,420 --> 00:02:06,679
evangelization never mention that to

00:02:04,009 --> 00:02:09,799
users and secondly will be what we have

00:02:06,679 --> 00:02:12,970
Joe Cleese nicknamed slurp security

00:02:09,799 --> 00:02:16,790
licensing upgrades revision control

00:02:12,970 --> 00:02:19,459
reproducibility and portability and then

00:02:16,790 --> 00:02:23,620
a bunch of examples and where we have

00:02:19,459 --> 00:02:23,620
failed in ways we have succeeded

00:02:24,280 --> 00:02:29,930
evangelization this please never mention

00:02:27,530 --> 00:02:32,030
it to users Jason are both work with

00:02:29,930 --> 00:02:35,420
people from all over the world this

00:02:32,030 --> 00:02:38,150
summer I'm working across at last count

00:02:35,420 --> 00:02:40,599
I think seven time zones on people I

00:02:38,150 --> 00:02:42,290
communicate with regularly

00:02:40,599 --> 00:02:44,709
evangelization means many different

00:02:42,290 --> 00:02:48,349
things to many different people just

00:02:44,709 --> 00:02:50,769
don't mention it at the end of the day

00:02:48,349 --> 00:02:55,760
the users do not care about an ideology

00:02:50,769 --> 00:02:56,959
they simply want to get things done the

00:02:55,760 --> 00:02:59,120
next thing they should have a mission to

00:02:56,959 --> 00:03:01,639
users and this is something that those

00:02:59,120 --> 00:03:04,370
of us tonight II hear every day security

00:03:01,639 --> 00:03:06,859
licensing upgrades can we reproduce this

00:03:04,370 --> 00:03:16,579
as this you know under revision control

00:03:06,859 --> 00:03:19,579
is this portable security this slide can

00:03:16,579 --> 00:03:21,139
be summed up very simply as is this

00:03:19,579 --> 00:03:24,500
upgrade you're doing in the name of

00:03:21,139 --> 00:03:27,530
security actually for security I have

00:03:24,500 --> 00:03:29,349
been burned and so is Jason many times

00:03:27,530 --> 00:03:33,709
because we did an update that was

00:03:29,349 --> 00:03:35,660
security required because someone told

00:03:33,709 --> 00:03:40,569
us to do the update we never bothered to

00:03:35,660 --> 00:03:45,799
ask is this just a standard update or a

00:03:40,569 --> 00:03:49,099
function release and brilliance or

00:03:45,799 --> 00:03:51,250
really a security update in a lot of

00:03:49,099 --> 00:03:53,660
times we have done security updates

00:03:51,250 --> 00:03:56,810
without them being security updates

00:03:53,660 --> 00:03:59,590
we've broken workflow and we've also

00:03:56,810 --> 00:04:01,989
discovered management wasn't in the loop

00:03:59,590 --> 00:04:09,340
so and that has happened to me in

00:04:01,989 --> 00:04:10,120
several areas licensing what licenses do

00:04:09,340 --> 00:04:13,780
you have

00:04:10,120 --> 00:04:17,350
I thought the license provided that tool

00:04:13,780 --> 00:04:19,870
kit or AB edition users generally do not

00:04:17,350 --> 00:04:22,050
know their licenses most the time we

00:04:19,870 --> 00:04:28,030
don't either

00:04:22,050 --> 00:04:30,820
yeah upgrades users don't even love to

00:04:28,030 --> 00:04:34,350
mention the mentioning the word upgrades

00:04:30,820 --> 00:04:38,979
to users in lot case will get them upset

00:04:34,350 --> 00:04:41,110
your power users are the worst they know

00:04:38,979 --> 00:04:45,360
how to use the system you're using they

00:04:41,110 --> 00:04:48,400
love it they don't want any changes also

00:04:45,360 --> 00:04:49,840
the system hidden in the corner it seems

00:04:48,400 --> 00:04:51,880
every time you get rid of the system in

00:04:49,840 --> 00:04:58,210
the corner system under somebody's desk

00:04:51,880 --> 00:05:00,550
it comes back a bunch of matei the front

00:04:58,210 --> 00:05:04,380
end never changes I love that fact of it

00:05:00,550 --> 00:05:06,880
but Ubuntu Matei is based off a bun to

00:05:04,380 --> 00:05:08,580
most the time you can get away with

00:05:06,880 --> 00:05:11,530
having updates in the background

00:05:08,580 --> 00:05:15,460
perfectly and you'll never see any

00:05:11,530 --> 00:05:17,680
changes however the front end may not

00:05:15,460 --> 00:05:19,690
change it's based off a bun - you've got

00:05:17,680 --> 00:05:22,990
to make sure your critical changes are

00:05:19,690 --> 00:05:26,729
tested and secondly if it's not a

00:05:22,990 --> 00:05:30,130
security upgrade is the upgrade worth it

00:05:26,729 --> 00:05:31,410
this is far too often what upgrades look

00:05:30,130 --> 00:05:34,260
like to most users

00:05:31,410 --> 00:05:39,789
there's boards missing along this path

00:05:34,260 --> 00:05:43,539
if you fall this walkway is located 30

00:05:39,789 --> 00:05:46,840
miles from Beaufort North Carolina by

00:05:43,539 --> 00:05:50,289
boat so in this case if you miss a step

00:05:46,840 --> 00:05:53,410
and break your ankle there is going to

00:05:50,289 --> 00:05:55,210
be a long wait for support most of your

00:05:53,410 --> 00:05:58,690
users will look down step right over

00:05:55,210 --> 00:06:00,729
that missing plank they're going to be

00:05:58,690 --> 00:06:03,700
users who aren't going to catch it and

00:06:00,729 --> 00:06:07,110
fall and that unfortunately is what

00:06:03,700 --> 00:06:07,110
upgrades look like the most users

00:06:07,650 --> 00:06:12,520
reproducibility revision control in our

00:06:11,349 --> 00:06:14,650
field

00:06:12,520 --> 00:06:17,620
used to be a major problem this one

00:06:14,650 --> 00:06:18,310
actually in the six months that I had

00:06:17,620 --> 00:06:21,130
this talk

00:06:18,310 --> 00:06:24,699
percolating in the back of my head has

00:06:21,130 --> 00:06:26,620
really changed in academia revision

00:06:24,699 --> 00:06:30,819
control and reproducibility is becoming

00:06:26,620 --> 00:06:31,270
a serious concern but you know this is

00:06:30,819 --> 00:06:35,069
hard

00:06:31,270 --> 00:06:37,780
revision control I'm not a programmer I

00:06:35,069 --> 00:06:39,460
always loved this because I just cringe

00:06:37,780 --> 00:06:42,310
when I am told this when we're working

00:06:39,460 --> 00:06:46,930
with people we'll never need this code

00:06:42,310 --> 00:06:49,150
again that almost pretty much sets up

00:06:46,930 --> 00:06:51,669
started in about six months after the

00:06:49,150 --> 00:06:53,530
papers been published so we're between

00:06:51,669 --> 00:06:55,060
six months to three years

00:06:53,530 --> 00:07:00,580
somebody's gonna be asking for the code

00:06:55,060 --> 00:07:03,610
again portability the number one

00:07:00,580 --> 00:07:06,849
question I get on this is how is this

00:07:03,610 --> 00:07:08,919
getting things done what does this bring

00:07:06,849 --> 00:07:12,849
to the table I don't care that I can use

00:07:08,919 --> 00:07:17,830
this free across multiple systems this

00:07:12,849 --> 00:07:21,520
is changing thankfully I've had code in

00:07:17,830 --> 00:07:25,409
the past three years run everywhere from

00:07:21,520 --> 00:07:27,130
all parts of Asia including Mongolia

00:07:25,409 --> 00:07:31,180
South America

00:07:27,130 --> 00:07:33,070
I don't nambia so Africa so having code

00:07:31,180 --> 00:07:37,259
that can be portable is now critical a

00:07:33,070 --> 00:07:37,259
lot of times code is not portable

00:07:38,610 --> 00:07:47,409
support this slide could be summed up

00:07:42,550 --> 00:07:48,969
basically as users hate forms and I will

00:07:47,409 --> 00:07:50,530
not go into it those of you in the room

00:07:48,969 --> 00:07:56,639
have probably been into open source

00:07:50,530 --> 00:08:00,490
forums they can be toxic confusing

00:07:56,639 --> 00:08:04,300
condescending to some users for abusers

00:08:00,490 --> 00:08:08,620
generally hate them online guides are

00:08:04,300 --> 00:08:10,300
often out of date in my field because

00:08:08,620 --> 00:08:14,139
the fact you were working with a lot of

00:08:10,300 --> 00:08:16,690
people who were across the globe the

00:08:14,139 --> 00:08:18,930
latest and greatest code we received may

00:08:16,690 --> 00:08:21,940
not have documentation in English or

00:08:18,930 --> 00:08:24,279
often the documentation has been run

00:08:21,940 --> 00:08:26,350
through Google Translate and as we know

00:08:24,279 --> 00:08:35,020
Google Translate always gives very

00:08:26,350 --> 00:08:36,760
accurate translations some of you in the

00:08:35,020 --> 00:08:39,370
room may remember this term of a fear

00:08:36,760 --> 00:08:41,260
uncertainty and doubt it was a term used

00:08:39,370 --> 00:08:44,580
a lot back in the 90s describing a

00:08:41,260 --> 00:08:48,340
certain company and we called it Fudd

00:08:44,580 --> 00:08:51,850
this really applies to small projects

00:08:48,340 --> 00:08:53,890
small projects who have a lot of people

00:08:51,850 --> 00:08:57,580
yelling and screaming back and forth in

00:08:53,890 --> 00:09:00,250
their forums it is very hard for us to

00:08:57,580 --> 00:09:03,280
go we think this will work for you we've

00:09:00,250 --> 00:09:06,610
done some initial testing take a look at

00:09:03,280 --> 00:09:08,050
it people go into the forums and all

00:09:06,610 --> 00:09:13,090
they see is people arguing back and

00:09:08,050 --> 00:09:16,750
forth over minutiae and normally very

00:09:13,090 --> 00:09:18,820
scientific details and I've become to be

00:09:16,750 --> 00:09:22,780
a believer that sometimes a separate

00:09:18,820 --> 00:09:29,080
developers forum is a great idea because

00:09:22,780 --> 00:09:30,820
of this so one of the things you need to

00:09:29,080 --> 00:09:33,700
be concerned about is how user-friendly

00:09:30,820 --> 00:09:36,250
is something first off new users are

00:09:33,700 --> 00:09:37,720
scared of command-line because it

00:09:36,250 --> 00:09:39,760
doesn't get you know you're looking at

00:09:37,720 --> 00:09:42,120
this prompt that doesn't give you any

00:09:39,760 --> 00:09:44,860
clues about what you can actually do

00:09:42,120 --> 00:09:46,930
it's just it's waiting for you in it

00:09:44,860 --> 00:09:50,020
there's no hints there's no clues and

00:09:46,930 --> 00:09:51,730
you do have to realize that maybe your

00:09:50,020 --> 00:09:55,480
favorite language or tool might not be

00:09:51,730 --> 00:09:57,310
the best in this situation mark likes

00:09:55,480 --> 00:09:59,590
Python I'm actually trying to learn

00:09:57,310 --> 00:10:02,920
Python R is better for many

00:09:59,590 --> 00:10:07,960
statisticians it's kind of a joke that

00:10:02,920 --> 00:10:11,140
the you know R is great because it's

00:10:07,960 --> 00:10:12,430
written by statisticians it's also not

00:10:11,140 --> 00:10:14,500
so great because it was written by

00:10:12,430 --> 00:10:18,600
statisticians not programmers who

00:10:14,500 --> 00:10:21,300
understand software development and

00:10:18,600 --> 00:10:24,280
another thing is is it easily learned

00:10:21,300 --> 00:10:27,810
Perl Mark and I both miss pearl

00:10:24,280 --> 00:10:27,810
we like the camel

00:10:28,890 --> 00:10:35,320
also long user-friendly lines is you

00:10:33,100 --> 00:10:37,990
know this program or tool may be the

00:10:35,320 --> 00:10:40,120
best at doing one thing it may be the

00:10:37,990 --> 00:10:42,820
best but it's also extremely hard to

00:10:40,120 --> 00:10:45,430
learn and users won't remember how to

00:10:42,820 --> 00:10:47,970
use it I had this problem of you know I

00:10:45,430 --> 00:10:50,620
maybe I made of some reports and

00:10:47,970 --> 00:10:53,080
somebody wants me to tweak them this

00:10:50,620 --> 00:10:56,260
tool I wrote happened happens to be our

00:10:53,080 --> 00:10:59,500
and you know I I might touch it once

00:10:56,260 --> 00:11:02,200
every year or two and I every time I go

00:10:59,500 --> 00:11:04,600
I don't use it enough to remember how to

00:11:02,200 --> 00:11:07,840
use enough to go learn how to do

00:11:04,600 --> 00:11:09,700
whatever the thing is every time and the

00:11:07,840 --> 00:11:16,380
interface may be confusing the Union to

00:11:09,700 --> 00:11:19,170
new users so another concern is

00:11:16,380 --> 00:11:21,580
maintainability and also the community

00:11:19,170 --> 00:11:23,670
once something's in use it's not going

00:11:21,580 --> 00:11:23,670
anywhere

00:11:23,980 --> 00:11:28,960
and this can be a problem even once the

00:11:26,140 --> 00:11:31,870
project's died it's it's hard to move

00:11:28,960 --> 00:11:33,460
the users away and sometimes projects

00:11:31,870 --> 00:11:34,930
come back to life that your open source

00:11:33,460 --> 00:11:36,340
is never truly dead because you can

00:11:34,930 --> 00:11:38,340
always find the code and you can

00:11:36,340 --> 00:11:45,970
resurrect it yourself if you want but

00:11:38,340 --> 00:11:48,190
this can also be an issue class example

00:11:45,970 --> 00:11:49,780
this is one called X fake any users in

00:11:48,190 --> 00:11:51,880
here it's heavily used in the

00:11:49,780 --> 00:11:54,280
mathematical statistical world and it

00:11:51,880 --> 00:11:59,680
was used heavily years ago this is a

00:11:54,280 --> 00:12:01,630
vector graphics editor how many of you

00:11:59,680 --> 00:12:05,680
were alive in 1981 quite a few of us

00:12:01,630 --> 00:12:08,620
probably in this room the problem with

00:12:05,680 --> 00:12:11,800
the tool is it actually died for about

00:12:08,620 --> 00:12:13,150
five years you'd see a fix but there

00:12:11,800 --> 00:12:16,500
really was no movement for it in the

00:12:13,150 --> 00:12:21,000
community and then there the problem was

00:12:16,500 --> 00:12:23,620
anybody who grew up passed the early 90s

00:12:21,000 --> 00:12:26,170
could not figure out how to use this

00:12:23,620 --> 00:12:27,870
interface it literally looks like

00:12:26,170 --> 00:12:31,290
something that we would have seen

00:12:27,870 --> 00:12:34,750
alongside of mosaic if you remember it

00:12:31,290 --> 00:12:39,550
back in the day when we were all running

00:12:34,750 --> 00:12:41,290
deck stations or Solaris now fortunately

00:12:39,550 --> 00:12:41,710
this project is actually resurrected

00:12:41,290 --> 00:12:45,250
itself

00:12:41,710 --> 00:12:48,820
I was in the middle of starting to ban

00:12:45,250 --> 00:12:51,760
it on our systems because I was getting

00:12:48,820 --> 00:12:54,460
concerned because it had not been really

00:12:51,760 --> 00:12:56,680
touched in five years and the project

00:12:54,460 --> 00:12:59,560
actually took some major updates came

00:12:56,680 --> 00:13:03,220
back to life and is really heavily in

00:12:59,560 --> 00:13:05,110
use again my older users and when I say

00:13:03,220 --> 00:13:08,710
older above 30 or have been trained in

00:13:05,110 --> 00:13:13,570
it love this application my newer users

00:13:08,710 --> 00:13:15,130
are really heavily concerned and the

00:13:13,570 --> 00:13:16,180
bigger the biggest competitor some of

00:13:15,130 --> 00:13:18,400
you may have heard of this is actually

00:13:16,180 --> 00:13:23,200
Inkscape and that is the one that's

00:13:18,400 --> 00:13:28,800
really heavily used now now ways we've

00:13:23,200 --> 00:13:31,600
succeeded configuration management

00:13:28,800 --> 00:13:34,390
you're gonna see this a lot in our

00:13:31,600 --> 00:13:35,980
presentation the ability to keep

00:13:34,390 --> 00:13:38,500
multiple machines and installs

00:13:35,980 --> 00:13:42,400
configured to the same thing is critical

00:13:38,500 --> 00:13:50,200
and keep your slurp documented supported

00:13:42,400 --> 00:13:52,590
and updated security first of all work

00:13:50,200 --> 00:13:55,000
with security teams and management I

00:13:52,590 --> 00:13:56,890
have dealt with far too many people who

00:13:55,000 --> 00:14:00,880
are like oh it's got to be updated it

00:13:56,890 --> 00:14:02,890
says the word security sometimes it's

00:14:00,880 --> 00:14:07,420
better to let management make that

00:14:02,890 --> 00:14:09,840
decision if it is something minor it may

00:14:07,420 --> 00:14:13,630
not be worth it

00:14:09,840 --> 00:14:16,330
and some of the multi named executions

00:14:13,630 --> 00:14:17,800
and the Intel chips recently they've had

00:14:16,330 --> 00:14:19,870
to have serious discussions do we want

00:14:17,800 --> 00:14:22,570
to plow these patches which are going to

00:14:19,870 --> 00:14:26,530
cut support by 10 to 15%

00:14:22,570 --> 00:14:28,510
sorry not support speed by 10 to 15% or

00:14:26,530 --> 00:14:31,150
if it doesn't matter are we willing to

00:14:28,510 --> 00:14:35,280
assume the risk that is above my

00:14:31,150 --> 00:14:38,260
paygrade let someone else decide that is

00:14:35,280 --> 00:14:39,940
the upgrade needed right now for

00:14:38,260 --> 00:14:41,980
security can it wait a month until a

00:14:39,940 --> 00:14:45,480
project has ended that has saved a lot

00:14:41,980 --> 00:14:49,670
of problems and most importantly

00:14:45,480 --> 00:14:53,370
configuration management critical

00:14:49,670 --> 00:14:55,890
keep track of what you're using the

00:14:53,370 --> 00:14:57,510
number of times that I've worked with

00:14:55,890 --> 00:15:00,240
other system administrators for mine of

00:14:57,510 --> 00:15:03,810
this step keep a spreadsheet of what's

00:15:00,240 --> 00:15:08,720
being used in your area and also who was

00:15:03,810 --> 00:15:11,880
actually using it you will be amazed you

00:15:08,720 --> 00:15:15,240
find out there's that one guy who uses

00:15:11,880 --> 00:15:18,540
it twice a year and you're maintaining

00:15:15,240 --> 00:15:19,920
10 licenses for him or her do you need

00:15:18,540 --> 00:15:24,089
those can you move that person to the

00:15:19,920 --> 00:15:26,490
other tool it also helps when management

00:15:24,089 --> 00:15:29,459
sees this because magic can go is this

00:15:26,490 --> 00:15:33,209
critical enough for you for you to lose

00:15:29,459 --> 00:15:35,430
support X or Y in exchange this license

00:15:33,209 --> 00:15:39,839
it's amazing how fast these one-off

00:15:35,430 --> 00:15:42,779
licenses go away consult was legal when

00:15:39,839 --> 00:15:44,070
releasing software I don't know if how

00:15:42,779 --> 00:15:46,890
many of you were in a previous talk here

00:15:44,070 --> 00:15:48,240
that um Eric gave and he mentioned you

00:15:46,890 --> 00:15:51,510
know open-source licensing can be

00:15:48,240 --> 00:15:52,950
confusing I will say a step further a

00:15:51,510 --> 00:15:56,339
lot of large entities today actually

00:15:52,950 --> 00:16:02,300
have someone you can call who handles

00:15:56,339 --> 00:16:06,660
that use them upgrades

00:16:02,300 --> 00:16:08,820
once again this is if done correctly 90%

00:16:06,660 --> 00:16:10,820
configuration management puppet or

00:16:08,820 --> 00:16:15,810
ansible or the ones Jason I prefer

00:16:10,820 --> 00:16:21,480
always test I see far too often somebody

00:16:15,810 --> 00:16:23,520
roles an upgrade never tests it this one

00:16:21,480 --> 00:16:26,839
is a fun one this one has really become

00:16:23,520 --> 00:16:30,050
a hot topic in academia in science

00:16:26,839 --> 00:16:32,880
revision control and reproducibility

00:16:30,050 --> 00:16:35,190
fortunately for me today most of the

00:16:32,880 --> 00:16:39,959
stuff I deal with is our Python Fortran

00:16:35,190 --> 00:16:41,070
a little bit of C++ we all know as I

00:16:39,959 --> 00:16:45,450
look around this room most of your NIT

00:16:41,070 --> 00:16:48,230
this is easy to revision control it's

00:16:45,450 --> 00:16:51,329
part of the software development process

00:16:48,230 --> 00:16:55,970
today we make code available a lot with

00:16:51,329 --> 00:16:59,129
papers people get questions back

00:16:55,970 --> 00:17:01,439
believe it or not a lot of times those

00:16:59,129 --> 00:17:04,409
questions are actually answered in the

00:17:01,439 --> 00:17:06,059
check-in and check-out comments when you

00:17:04,409 --> 00:17:09,149
go through a personal question be asked

00:17:06,059 --> 00:17:10,740
like why in this loop did you decide to

00:17:09,149 --> 00:17:12,779
do the if statement here and run this

00:17:10,740 --> 00:17:16,500
calculation instead of this other

00:17:12,779 --> 00:17:17,850
calculation most the time the person who

00:17:16,500 --> 00:17:20,370
wrote the code doesn't remember that

00:17:17,850 --> 00:17:21,839
anymore they can look in the

00:17:20,370 --> 00:17:23,819
check-in/check-out comments and actually

00:17:21,839 --> 00:17:25,799
see it and because the fact we're

00:17:23,819 --> 00:17:27,950
starting to actually get users who were

00:17:25,799 --> 00:17:30,149
used to revision control in other places

00:17:27,950 --> 00:17:32,940
we're actually starting to see github

00:17:30,149 --> 00:17:35,610
and get lab repos used for some code

00:17:32,940 --> 00:17:36,630
releases and papers because the person

00:17:35,610 --> 00:17:38,070
on the other end could probably answer

00:17:36,630 --> 00:17:46,860
the question for themselves they have

00:17:38,070 --> 00:17:49,909
access all right so another concern

00:17:46,860 --> 00:17:52,620
about revision control reproducibility

00:17:49,909 --> 00:17:54,899
faculty and management want to be able

00:17:52,620 --> 00:17:57,330
to see who did what and when so they

00:17:54,899 --> 00:17:59,669
essentially they want an audit trail now

00:17:57,330 --> 00:18:02,549
this is one of the significant drivers

00:17:59,669 --> 00:18:05,940
of revision revision control so you have

00:18:02,549 --> 00:18:08,610
the audit trail and this this can be

00:18:05,940 --> 00:18:10,919
used to assign blame but another way you

00:18:08,610 --> 00:18:13,500
can use this is to just better

00:18:10,919 --> 00:18:15,600
understand who needs more training so if

00:18:13,500 --> 00:18:18,240
you know that someone messed something

00:18:15,600 --> 00:18:19,909
up then you can say all right don't do

00:18:18,240 --> 00:18:22,590
don't do it that way do it this way

00:18:19,909 --> 00:18:27,350
let's move on it's not always about

00:18:22,590 --> 00:18:27,350
blame but the audit trail is king

00:18:30,679 --> 00:18:34,919
configuration management if you're using

00:18:32,760 --> 00:18:38,640
it properly you'll already know how to

00:18:34,919 --> 00:18:43,280
use revision control and you can teach

00:18:38,640 --> 00:18:43,280
it a lot easily more easily and faster

00:18:47,030 --> 00:18:52,740
should be easy for revision control we

00:18:50,250 --> 00:18:55,679
all think that most of us have software

00:18:52,740 --> 00:18:58,230
backgrounds most of my users are

00:18:55,679 --> 00:19:03,990
mathematicians statisticians criminal

00:18:58,230 --> 00:19:07,830
justice sociologists psychologists they

00:19:03,990 --> 00:19:08,970
don't they know how to do their job very

00:19:07,830 --> 00:19:13,830
well using the tools they know how to

00:19:08,970 --> 00:19:15,480
use Python and are in most cases it's

00:19:13,830 --> 00:19:17,880
very easily just to do a small training

00:19:15,480 --> 00:19:20,429
group teach everyone on the team at once

00:19:17,880 --> 00:19:23,520
or an individual training stuff get them

00:19:20,429 --> 00:19:27,780
started I've always been amazed revision

00:19:23,520 --> 00:19:28,970
control is almost like Legos you teach

00:19:27,780 --> 00:19:30,750
them how to put a few blocks together

00:19:28,970 --> 00:19:33,559
it's more complicated than I

00:19:30,750 --> 00:19:35,780
unfortunately you leave them to it and

00:19:33,559 --> 00:19:38,669
within a few months you typically find

00:19:35,780 --> 00:19:40,860
they start picking it up and then you

00:19:38,669 --> 00:19:43,620
get into the chain that the real strange

00:19:40,860 --> 00:19:45,540
questions of okay how do I merge a check

00:19:43,620 --> 00:19:50,390
out into his code and what's this Fort

00:19:45,540 --> 00:19:50,390
thing but you've got to get them started

00:19:51,860 --> 00:19:58,820
this one is always a fun one that we

00:19:54,270 --> 00:20:01,049
don't like discuss bit rot it's real

00:19:58,820 --> 00:20:04,290
especially in my area of math and

00:20:01,049 --> 00:20:07,140
science papers from the nineteen

00:20:04,290 --> 00:20:11,720
seventies and eighties can still be very

00:20:07,140 --> 00:20:15,179
relevant and needed I have actually

00:20:11,720 --> 00:20:18,720
converted latex files that were used in

00:20:15,179 --> 00:20:21,390
the 1980s I've helped clean them up and

00:20:18,720 --> 00:20:23,429
get bring them in to a modern latex

00:20:21,390 --> 00:20:25,830
compiler because the paper was still

00:20:23,429 --> 00:20:29,730
relevant and other papers were going to

00:20:25,830 --> 00:20:33,059
be written based off of this paper and I

00:20:29,730 --> 00:20:36,240
can also say I have partially gotten

00:20:33,059 --> 00:20:40,110
WordPerfect files open from the late 80s

00:20:36,240 --> 00:20:44,059
I got data out of some Lotus 1-2-3 files

00:20:40,110 --> 00:20:48,059
I did not get the whole

00:20:44,059 --> 00:20:50,669
set up out of them latex I have gotten

00:20:48,059 --> 00:20:52,890
tons of stuff out and this is the reason

00:20:50,669 --> 00:20:56,100
that in academia today you're seeing

00:20:52,890 --> 00:20:59,490
more of a push for latex markdown and

00:20:56,100 --> 00:21:01,530
other text-based tools we're dealing

00:20:59,490 --> 00:21:05,580
with another thing recently called PDF a

00:21:01,530 --> 00:21:07,650
PDF archive which is basically clothes

00:21:05,580 --> 00:21:10,350
have been around it's roughly the first

00:21:07,650 --> 00:21:14,160
version of PDF that ever came out it's

00:21:10,350 --> 00:21:17,190
kind of basic no videos no @ hyperlinks

00:21:14,160 --> 00:21:19,710
out it's just a basic PDF that can be

00:21:17,190 --> 00:21:22,650
opened and examined and it's very nice

00:21:19,710 --> 00:21:25,500
very simple this is all because the fact

00:21:22,650 --> 00:21:27,390
there's too much stuff out there that 20

00:21:25,500 --> 00:21:35,280
years from now no one's gonna be able to

00:21:27,390 --> 00:21:36,480
open portability a lot of times for

00:21:35,280 --> 00:21:40,080
debilities actually hampered by

00:21:36,480 --> 00:21:42,150
licensing does that overseas entity that

00:21:40,080 --> 00:21:46,230
wants to run your code have a license to

00:21:42,150 --> 00:21:49,770
use it the second one is one that a few

00:21:46,230 --> 00:21:52,200
years ago was pretty important to me

00:21:49,770 --> 00:21:56,010
which was we were using proprietary

00:21:52,200 --> 00:21:58,890
compilers so for the application we were

00:21:56,010 --> 00:22:04,400
able to get 15% performance increase in

00:21:58,890 --> 00:22:08,370
GCC 40 to 50% performance increase using

00:22:04,400 --> 00:22:11,610
proprietary compilers unfortunately for

00:22:08,370 --> 00:22:15,540
us we did all the later testing in the

00:22:11,610 --> 00:22:19,080
proprietary compilers almost nobody who

00:22:15,540 --> 00:22:20,730
used the code externally to us asked for

00:22:19,080 --> 00:22:23,750
the code to be compiled against

00:22:20,730 --> 00:22:26,910
proprietary everybody wanted GCC the

00:22:23,750 --> 00:22:29,070
person we gave the code to who paid for

00:22:26,910 --> 00:22:29,820
the project had access to the

00:22:29,070 --> 00:22:33,210
proprietary

00:22:29,820 --> 00:22:34,620
compilers they were happy it would have

00:22:33,210 --> 00:22:37,260
saved us a lot of time if we had

00:22:34,620 --> 00:22:39,690
maintained a separate compile structure

00:22:37,260 --> 00:22:42,360
and today we would probably use Jenkins

00:22:39,690 --> 00:22:46,169
CI or something else - you know compile

00:22:42,360 --> 00:22:48,570
both at the same time because yes the

00:22:46,169 --> 00:22:50,760
initial project was a success but the

00:22:48,570 --> 00:22:54,000
people who used it later needed

00:22:50,760 --> 00:22:55,559
everything done in GCC and a second one

00:22:54,000 --> 00:22:57,370
which I actually consider very fun is

00:22:55,559 --> 00:22:58,990
we're also starting to see

00:22:57,370 --> 00:23:00,820
the rise of different processor

00:22:58,990 --> 00:23:04,960
architectures you can run Python

00:23:00,820 --> 00:23:07,809
anywhere just to this conference I found

00:23:04,960 --> 00:23:11,320
out that you could actually get a $100

00:23:07,809 --> 00:23:13,110
board that's three by three inches that

00:23:11,320 --> 00:23:16,120
has CUDA cores on it

00:23:13,110 --> 00:23:18,789
I've got code written right now that

00:23:16,120 --> 00:23:21,370
muses CUDA cores heavily we've never run

00:23:18,789 --> 00:23:23,529
that thing on anything under a large

00:23:21,370 --> 00:23:25,090
workstation that might be something

00:23:23,529 --> 00:23:27,249
we're doing the next a little bit but I

00:23:25,090 --> 00:23:29,350
actually have had projects for data

00:23:27,249 --> 00:23:31,899
analysis run on small boards in the

00:23:29,350 --> 00:23:33,970
field not by us but we have found out

00:23:31,899 --> 00:23:36,759
that the code we wrote is being used

00:23:33,970 --> 00:23:39,850
these projects so in that case we did

00:23:36,759 --> 00:23:42,399
everything on Intel hardware they're

00:23:39,850 --> 00:23:44,049
using arm hardware so having it written

00:23:42,399 --> 00:23:46,090
in something that can be ported quickly

00:23:44,049 --> 00:23:51,820
and easily is starting to be more

00:23:46,090 --> 00:23:55,779
important I wish there was a real easy

00:23:51,820 --> 00:24:00,669
answer to portability back again online

00:23:55,779 --> 00:24:04,119
support is often not great making guides

00:24:00,669 --> 00:24:06,519
for usage always important actually have

00:24:04,119 --> 00:24:09,070
on someone test your guides it's very

00:24:06,519 --> 00:24:12,429
important the number of times we have

00:24:09,070 --> 00:24:14,860
found out when we're reviewing papers or

00:24:12,429 --> 00:24:17,320
running code that we're actually the

00:24:14,860 --> 00:24:19,149
first person to outside of whatever

00:24:17,320 --> 00:24:22,210
entity it came from to actually test it

00:24:19,149 --> 00:24:24,009
we're the first if you're handing out

00:24:22,210 --> 00:24:26,740
code to someone it's better to have

00:24:24,009 --> 00:24:27,820
other people test it I enjoy using

00:24:26,740 --> 00:24:29,320
graduate students for this because

00:24:27,820 --> 00:24:32,139
they're available and it's always fun to

00:24:29,320 --> 00:24:40,240
watch how bad the documentation can

00:24:32,139 --> 00:24:44,259
really be this one at first was

00:24:40,240 --> 00:24:47,919
difficult for me recognize opportunities

00:24:44,259 --> 00:24:50,320
as a system administrator you always

00:24:47,919 --> 00:24:54,220
cringe naturally I want to try my

00:24:50,320 --> 00:24:57,749
favorite project X well don't always say

00:24:54,220 --> 00:25:02,820
no especially if it's a tool that's very

00:24:57,749 --> 00:25:05,619
tuned to a specific field look at it in

00:25:02,820 --> 00:25:08,980
the case the one I'm about to mention at

00:25:05,619 --> 00:25:11,150
the time all of our commercial tools and

00:25:08,980 --> 00:25:14,870
some of the other open-source tools

00:25:11,150 --> 00:25:19,730
ran faster and in my opinion not as

00:25:14,870 --> 00:25:22,550
maybe a little bit simpler but this next

00:25:19,730 --> 00:25:23,690
tool actually did things very well so

00:25:22,550 --> 00:25:25,820
make sure you don't have a competitor

00:25:23,690 --> 00:25:28,580
and give it a run but I'm referring to

00:25:25,820 --> 00:25:31,240
is singular I doubt many of you do

00:25:28,580 --> 00:25:35,450
linear algebra heavily night and day

00:25:31,240 --> 00:25:38,540
this tool is a German project very well

00:25:35,450 --> 00:25:42,080
documented day at the time it wasn't but

00:25:38,540 --> 00:25:44,510
we had to do twenty runs of an applique

00:25:42,080 --> 00:25:46,429
of a calculation the commercial tools

00:25:44,510 --> 00:25:50,929
were taking anywhere from ten to twenty

00:25:46,429 --> 00:25:53,929
hours to do each run singular was doing

00:25:50,929 --> 00:25:58,910
it in about thirty minutes so this

00:25:53,929 --> 00:26:00,559
really sped things up yes I'm gonna

00:25:58,910 --> 00:26:03,040
refrain from naming any commercial tools

00:26:00,559 --> 00:26:05,630
I'll happily tell you offline but I I

00:26:03,040 --> 00:26:08,000
still work all these vendors they're all

00:26:05,630 --> 00:26:10,640
great tools one of the things you

00:26:08,000 --> 00:26:13,220
discover is in the sciences a lot of

00:26:10,640 --> 00:26:16,220
times especially in mathematical

00:26:13,220 --> 00:26:20,200
statistics for PhD projects you will a

00:26:16,220 --> 00:26:22,960
lot of times are ahead of the curve I

00:26:20,200 --> 00:26:25,130
imagine if you did this experiment today

00:26:22,960 --> 00:26:30,500
you would probably find the commercial

00:26:25,130 --> 00:26:33,080
tools have caught up yes believe it or

00:26:30,500 --> 00:26:35,750
not that was yes the question was do we

00:26:33,080 --> 00:26:38,559
get the same answer of both tools the

00:26:35,750 --> 00:26:40,550
sad part was the paper was written

00:26:38,559 --> 00:26:42,770
submitted to be reviewed

00:26:40,550 --> 00:26:45,350
while my automatic scripts were still

00:26:42,770 --> 00:26:48,380
running the check mechanism and they

00:26:45,350 --> 00:26:50,570
actually did not submit the tools until

00:26:48,380 --> 00:26:53,990
the first sorry they the paper did not

00:26:50,570 --> 00:26:56,270
go out till after the first five test

00:26:53,990 --> 00:26:57,920
runs had completed so we had a really

00:26:56,270 --> 00:27:00,230
good idea that the tool was working and

00:26:57,920 --> 00:27:03,800
working well and by being an open source

00:27:00,230 --> 00:27:05,450
community we had a very good feel the

00:27:03,800 --> 00:27:07,760
people behind this project are very

00:27:05,450 --> 00:27:09,200
knowledgeable in their field then we had

00:27:07,760 --> 00:27:13,880
a really good idea that it was going to

00:27:09,200 --> 00:27:19,270
work and we had trusted the tool and yes

00:27:13,880 --> 00:27:19,270
they we but we did trust but verify so

00:27:19,460 --> 00:27:25,429
and also recognize the next one's a

00:27:24,019 --> 00:27:30,200
little bit of a personal story against

00:27:25,429 --> 00:27:31,759
me I grew up with the Red Hat and I had

00:27:30,200 --> 00:27:35,389
just gotten drugged through something

00:27:31,759 --> 00:27:37,099
called the novella Linux desktop when

00:27:35,389 --> 00:27:39,259
that was huge I doubt if anybody

00:27:37,099 --> 00:27:42,169
remembers that Jason does he suffered

00:27:39,259 --> 00:27:45,499
through it also it was based off of Susa

00:27:42,169 --> 00:27:47,149
at the time where I worked was using

00:27:45,499 --> 00:27:48,109
Novell which I can mention since it

00:27:47,149 --> 00:27:51,649
doesn't exist anymore

00:27:48,109 --> 00:27:54,200
and we were a little bit leery of

00:27:51,649 --> 00:27:57,229
changing to another operating system we

00:27:54,200 --> 00:28:01,820
had our Red Hat's workstations working

00:27:57,229 --> 00:28:04,460
great everything was wonderful and then

00:28:01,820 --> 00:28:06,969
my users start coming and going yes I'm

00:28:04,460 --> 00:28:10,849
doing this at home I'm using a bun too

00:28:06,969 --> 00:28:14,419
and a really hard decision for me was I

00:28:10,849 --> 00:28:17,570
had to recognize that for the end user

00:28:14,419 --> 00:28:20,149
do you want to train them to your setup

00:28:17,570 --> 00:28:25,159
or do you want to take the training they

00:28:20,149 --> 00:28:27,589
know and by the time the 10th or 15th

00:28:25,159 --> 00:28:31,219
person had come through my door saying

00:28:27,589 --> 00:28:33,429
they were using a bun - that's when we

00:28:31,219 --> 00:28:35,749
started testing a bun - and deployed it

00:28:33,429 --> 00:28:38,269
if you look at this laptop you'll notice

00:28:35,749 --> 00:28:39,889
I have a fedora sticker at the moment

00:28:38,269 --> 00:28:41,419
it's running a bun tube because I'm

00:28:39,889 --> 00:28:43,729
testing out the newer release of Ubuntu

00:28:41,419 --> 00:28:46,399
in preparation for what we'll see in the

00:28:43,729 --> 00:28:50,029
next LTS released next year it's just

00:28:46,399 --> 00:28:53,149
easier for me and saves training time to

00:28:50,029 --> 00:28:55,820
run a bun - almost every person I have

00:28:53,149 --> 00:28:57,190
walking to the door is at least familiar

00:28:55,820 --> 00:29:00,769
with it a bunch of flavor

00:28:57,190 --> 00:29:04,129
some of them use matei some of them use

00:29:00,769 --> 00:29:05,839
most of them are using mainline but do I

00:29:04,129 --> 00:29:07,339
want to train them to use the

00:29:05,839 --> 00:29:09,109
applications they had to use or do I

00:29:07,339 --> 00:29:12,940
want to also train them and how to use

00:29:09,109 --> 00:29:15,349
Linux it's easier to go with the flow

00:29:12,940 --> 00:29:17,179
the other thing I love is recognize the

00:29:15,349 --> 00:29:20,210
gyms that are worth utilizing and can be

00:29:17,179 --> 00:29:23,539
used everywhere text maker in the

00:29:20,210 --> 00:29:25,999
mathematic world is amazing it's a latex

00:29:23,539 --> 00:29:29,979
edger that works across Windows Linux

00:29:25,999 --> 00:29:29,979
and Mac exactly the same

00:29:30,260 --> 00:29:34,940
same thing goes with Microsoft vs Co

00:29:32,420 --> 00:29:36,770
relatively new player in the market it's

00:29:34,940 --> 00:29:39,560
amazingly wonderful because it works the

00:29:36,770 --> 00:29:41,950
same everywhere it also has a great get

00:29:39,560 --> 00:29:45,800
integration for covering up that last

00:29:41,950 --> 00:29:47,300
mile of users who they're not quite

00:29:45,800 --> 00:29:49,670
comfy with the command line they can

00:29:47,300 --> 00:29:52,840
code they can do Python but the end the

00:29:49,670 --> 00:29:52,840
day it's just easier for them to click

00:29:54,400 --> 00:29:59,900
business conditions this one was another

00:29:58,010 --> 00:30:02,960
one that really changed my career and

00:29:59,900 --> 00:30:06,080
Jason's career to a certain extent the

00:30:02,960 --> 00:30:08,920
Great Recession hit us when proprietary

00:30:06,080 --> 00:30:11,210
software becomes cost prohibitive that

00:30:08,920 --> 00:30:13,400
open-source software that I keep hearing

00:30:11,210 --> 00:30:16,100
just as this just as good they're

00:30:13,400 --> 00:30:18,140
actually gonna take a look at I had a

00:30:16,100 --> 00:30:21,260
lot more proprietary pieces of software

00:30:18,140 --> 00:30:24,320
in use earlier in my career in

00:30:21,260 --> 00:30:26,810
Mathematica statistic support today

00:30:24,320 --> 00:30:33,230
almost all of them are gone and are in

00:30:26,810 --> 00:30:34,490
Python our King I actually had quite a

00:30:33,230 --> 00:30:35,540
few graduate students I would keep up

00:30:34,490 --> 00:30:39,050
with him and talk to them as they went

00:30:35,540 --> 00:30:41,000
in the job market 5-10 years ago and it

00:30:39,050 --> 00:30:43,400
was amazing because almost everything

00:30:41,000 --> 00:30:45,050
was a commercial piece of software a lot

00:30:43,400 --> 00:30:48,260
of them are in this town so it's bank

00:30:45,050 --> 00:30:49,550
related software and then it's recession

00:30:48,260 --> 00:30:52,970
hit a lot of them start going to small

00:30:49,550 --> 00:30:56,210
midsize businesses and suddenly they're

00:30:52,970 --> 00:30:59,120
being handed here is your package this

00:30:56,210 --> 00:31:04,370
includes every software license you need

00:30:59,120 --> 00:31:05,690
and your pay have a nice day started

00:31:04,370 --> 00:31:07,610
hearing a lot more about pen source

00:31:05,690 --> 00:31:11,060
software when people had to pay for the

00:31:07,610 --> 00:31:13,910
licenses the other thing we have found

00:31:11,060 --> 00:31:18,250
is yearly software subscriptions get

00:31:13,910 --> 00:31:20,510
expensive therefore they get cancelled

00:31:18,250 --> 00:31:23,540
then you turn around and you've lost

00:31:20,510 --> 00:31:26,270
support for the code or tool and it goes

00:31:23,540 --> 00:31:30,110
back to portability because you suddenly

00:31:26,270 --> 00:31:31,550
can't run the code you have that was

00:31:30,110 --> 00:31:38,120
another painful lesson for quite a few

00:31:31,550 --> 00:31:39,270
people I deal with Python I was a Perl

00:31:38,120 --> 00:31:42,660
guy

00:31:39,270 --> 00:31:44,190
I wrote probably Alice be honest

00:31:42,660 --> 00:31:47,100
probably over a hundred thousand lines

00:31:44,190 --> 00:31:52,640
of code for various things in the 90s

00:31:47,100 --> 00:31:52,640
into the early 2000s I loved it

00:31:52,790 --> 00:31:56,340
there was a personal issue with the fact

00:31:54,930 --> 00:31:57,780
that I think this applies to many Perl

00:31:56,340 --> 00:32:00,420
users I would go back and look at my

00:31:57,780 --> 00:32:03,450
Perl code and not really figure out what

00:32:00,420 --> 00:32:05,760
it was doing it's a great language but

00:32:03,450 --> 00:32:11,820
she can do the same thing 50 different

00:32:05,760 --> 00:32:16,020
ways the bigger thing was Python I could

00:32:11,820 --> 00:32:18,390
find a student a lot of times even as

00:32:16,020 --> 00:32:21,720
freshman or sophomore who had at least

00:32:18,390 --> 00:32:23,960
seen Python knew the basics and I could

00:32:21,720 --> 00:32:28,410
bring up in a week to two weeks to

00:32:23,960 --> 00:32:31,080
having them useful Perl they'd never

00:32:28,410 --> 00:32:32,760
heard of it they definitely didn't know

00:32:31,080 --> 00:32:35,640
what the camel meant nor do they love

00:32:32,760 --> 00:32:38,940
the camel which is the mascot for Perl

00:32:35,640 --> 00:32:39,990
and then finally the real final death

00:32:38,940 --> 00:32:44,670
knell for Perl

00:32:39,990 --> 00:32:47,580
and our space was pythons usage in data

00:32:44,670 --> 00:32:50,430
science python is heavily used for data

00:32:47,580 --> 00:32:52,410
analytics today you let the old tool go

00:32:50,430 --> 00:32:55,290
when the old tool is no longer working

00:32:52,410 --> 00:32:57,420
for you and another big thing that's

00:32:55,290 --> 00:32:58,860
been occurring recently is parallel

00:32:57,420 --> 00:33:01,740
processing I don't know if many of you

00:32:58,860 --> 00:33:04,010
have done it pythons ability to do

00:33:01,740 --> 00:33:06,630
simple parallel processing is amazing

00:33:04,010 --> 00:33:09,960
I've had several projects past year

00:33:06,630 --> 00:33:11,940
people come in I received 2,000 data

00:33:09,960 --> 00:33:15,330
files and I've got to open every one of

00:33:11,940 --> 00:33:18,270
them this is gonna take a month throw it

00:33:15,330 --> 00:33:21,720
onto a 48 core machine and have it open

00:33:18,270 --> 00:33:23,840
47 to 48 files at one time suck them in

00:33:21,720 --> 00:33:25,830
process them all at the same time

00:33:23,840 --> 00:33:26,990
especially when you have machines laying

00:33:25,830 --> 00:33:30,030
around that have a hundred and

00:33:26,990 --> 00:33:32,730
ninety-six gigs of memory and each text

00:33:30,030 --> 00:33:35,580
files only two Meg's you can pretty much

00:33:32,730 --> 00:33:38,280
pull those files in quickly get them

00:33:35,580 --> 00:33:40,220
into a data set into a Python we

00:33:38,280 --> 00:33:43,110
generally use pandas dataframes

00:33:40,220 --> 00:33:45,630
get to paint a data frame generated save

00:33:43,110 --> 00:33:48,150
it back out as one CSV file you have

00:33:45,630 --> 00:33:50,160
saved a lot of time because what what

00:33:48,150 --> 00:33:53,240
could be done one of the time can now be

00:33:50,160 --> 00:33:53,240
done 48 at a time

00:33:54,010 --> 00:33:58,789
there's a good thing is once something's

00:33:56,539 --> 00:34:00,860
in use and like I said earlier this was

00:33:58,789 --> 00:34:01,820
a bad thing but once it's in use it's

00:34:00,860 --> 00:34:05,510
not going anywhere

00:34:01,820 --> 00:34:07,190
Python is heavily being used now I hate

00:34:05,510 --> 00:34:10,339
to say it but I am expecting Perl to

00:34:07,190 --> 00:34:17,119
return I'm expecting something to get

00:34:10,339 --> 00:34:19,970
help with Perl and return again this

00:34:17,119 --> 00:34:21,169
next one is something that really has

00:34:19,970 --> 00:34:23,300
been important business condition how

00:34:21,169 --> 00:34:26,270
many of you remember when PC when Steve

00:34:23,300 --> 00:34:29,260
Jobs said pcs are going to be like

00:34:26,270 --> 00:34:31,070
trucks they are still going to be around

00:34:29,260 --> 00:34:33,889
they're still going to have a lot of

00:34:31,070 --> 00:34:41,240
value but they're gonna be used by one

00:34:33,889 --> 00:34:44,000
of X people well people still need to

00:34:41,240 --> 00:34:46,909
use the PCs and they're gonna have

00:34:44,000 --> 00:34:48,379
specialized needs and we everyone in

00:34:46,909 --> 00:34:52,250
this room is dealing with those

00:34:48,379 --> 00:34:58,780
specialized needs so the PC is not going

00:34:52,250 --> 00:34:58,780
away at least not from our perspective

00:35:00,490 --> 00:35:06,640
workflow this is another one that has

00:35:02,960 --> 00:35:09,230
become really really heavily in my area

00:35:06,640 --> 00:35:11,150
workflow is the sequence of steps

00:35:09,230 --> 00:35:12,920
involved in moving from the beginning to

00:35:11,150 --> 00:35:17,599
the end of a working process and that's

00:35:12,920 --> 00:35:19,520
the Merriam Webster's definition simple

00:35:17,599 --> 00:35:23,030
automation that speeds up business

00:35:19,520 --> 00:35:25,760
processes can save hours of the course

00:35:23,030 --> 00:35:30,700
of a year open source software is great

00:35:25,760 --> 00:35:33,820
for this it reduces mistake by users and

00:35:30,700 --> 00:35:37,550
in my case many of my administrative

00:35:33,820 --> 00:35:40,099
non-technical lecturers actually use

00:35:37,550 --> 00:35:42,710
Python regularly now but they don't

00:35:40,099 --> 00:35:44,630
realize it and some of them are actually

00:35:42,710 --> 00:35:47,480
have started to learn to code Python

00:35:44,630 --> 00:35:49,970
because this merging CSV files an

00:35:47,480 --> 00:35:53,720
administrative assistant receives 10 CSV

00:35:49,970 --> 00:35:59,990
files once a semester do X Y or Z with

00:35:53,720 --> 00:36:02,390
it list of users from websites a big

00:35:59,990 --> 00:36:05,600
thing in our area now is you get a data

00:36:02,390 --> 00:36:07,770
set in you open it up

00:36:05,600 --> 00:36:10,650
the first thing you do is you drop

00:36:07,770 --> 00:36:13,080
columns out of it because this data set

00:36:10,650 --> 00:36:15,240
was mailed to five people you only need

00:36:13,080 --> 00:36:17,790
a subset of those columns and due to

00:36:15,240 --> 00:36:20,550
security reasons in our areas now if we

00:36:17,790 --> 00:36:23,100
don't need it we get rid of it you can't

00:36:20,550 --> 00:36:26,130
lose something you never had but all

00:36:23,100 --> 00:36:28,110
this stuff is very easily done with

00:36:26,130 --> 00:36:31,050
python or other open-source technologies

00:36:28,110 --> 00:36:34,140
and these have really started picking up

00:36:31,050 --> 00:36:36,240
speed in areas I actually am very

00:36:34,140 --> 00:36:39,390
excited to see that Microsoft is

00:36:36,240 --> 00:36:44,490
deploying Python now makes it a lot

00:36:39,390 --> 00:36:46,680
easier for us other simple tools text

00:36:44,490 --> 00:36:51,930
expander is a very simple script on

00:36:46,680 --> 00:36:54,240
github it's just a basic bash script you

00:36:51,930 --> 00:36:55,620
hit a shortcut key you setup it gives

00:36:54,240 --> 00:36:58,230
you a list of things to paste into the

00:36:55,620 --> 00:36:59,790
document you select which piece of text

00:36:58,230 --> 00:37:03,240
you want it pastes it into whatever

00:36:59,790 --> 00:37:06,150
document you have up for a lot of

00:37:03,240 --> 00:37:08,220
professors and lecturers who run our

00:37:06,150 --> 00:37:10,710
Lynx desktops or researchers have to

00:37:08,220 --> 00:37:14,250
teach you get the same question from

00:37:10,710 --> 00:37:16,920
student 15-times or the same type

00:37:14,250 --> 00:37:18,510
assignment notes have to go out you can

00:37:16,920 --> 00:37:21,260
save the snippets of text and just paste

00:37:18,510 --> 00:37:24,260
them these tools have been available in

00:37:21,260 --> 00:37:26,360
the Apple world for quite a while

00:37:24,260 --> 00:37:30,270
another one that everybody forgets about

00:37:26,360 --> 00:37:33,440
bash aliases these have been around for

00:37:30,270 --> 00:37:37,740
since bash began before that's sea shell

00:37:33,440 --> 00:37:39,990
people forget about them the next one is

00:37:37,740 --> 00:37:41,460
a little more controversial irie highly

00:37:39,990 --> 00:37:42,390
recommend you consult with your security

00:37:41,460 --> 00:37:46,200
teams before you use it

00:37:42,390 --> 00:37:49,320
cron at the number of times I hear I

00:37:46,200 --> 00:37:52,260
need to push this out to a cluster run

00:37:49,320 --> 00:37:55,080
this job overnight remotely and we're

00:37:52,260 --> 00:37:57,210
like you have a high-end workstation for

00:37:55,080 --> 00:38:00,210
your work how about you just at

00:37:57,210 --> 00:38:04,080
scheduled this job to start at 9:00 p.m.

00:38:00,210 --> 00:38:05,510
tonight it'll be done by 4:00 a.m. when

00:38:04,080 --> 00:38:07,220
you get in your office you can do it I

00:38:05,510 --> 00:38:09,510
will warn you

00:38:07,220 --> 00:38:12,750
cron jobs have also gotten me dirty

00:38:09,510 --> 00:38:16,680
looks because we've automated the jobs

00:38:12,750 --> 00:38:17,880
to run at 3:00 a.m. to 4:30 in the

00:38:16,680 --> 00:38:20,850
morning

00:38:17,880 --> 00:38:22,380
so the workers when they get in give me

00:38:20,850 --> 00:38:24,630
dirty looks because they used to get

00:38:22,380 --> 00:38:26,520
basically a 20 to 30 minute coffee break

00:38:24,630 --> 00:38:28,830
when they started their code off in the

00:38:26,520 --> 00:38:31,320
morning because they had to run well

00:38:28,830 --> 00:38:34,170
we've automated all that overnight very

00:38:31,320 --> 00:38:36,420
simple people tend to overlook the

00:38:34,170 --> 00:38:38,100
simple because they're focused on the

00:38:36,420 --> 00:38:40,590
bigger things do you have that docker

00:38:38,100 --> 00:38:42,390
container deployed have you checked on

00:38:40,590 --> 00:38:45,210
the current security settings have you

00:38:42,390 --> 00:38:46,740
run the s cap tests your configuration

00:38:45,210 --> 00:38:50,280
management a lot of times system

00:38:46,740 --> 00:38:52,860
administrators forget that what your

00:38:50,280 --> 00:38:58,170
user does day to day is a lot of times

00:38:52,860 --> 00:39:03,050
more important once again users remember

00:38:58,170 --> 00:39:08,460
of the simples automations I set up a

00:39:03,050 --> 00:39:11,280
ZFS system using FreeBSD to suck in 50

00:39:08,460 --> 00:39:15,060
gig datasets repetitively when we did

00:39:11,280 --> 00:39:17,310
this it was an amazing project does the

00:39:15,060 --> 00:39:19,860
user to remember that no the user

00:39:17,310 --> 00:39:22,980
remembers the one hour I spent on a

00:39:19,860 --> 00:39:25,610
simple automation which takes in a bunch

00:39:22,980 --> 00:39:28,430
of CSV files for something he has to do

00:39:25,610 --> 00:39:30,720
ten times a year that he hates doing

00:39:28,430 --> 00:39:34,020
basically he clicks on a script what

00:39:30,720 --> 00:39:37,350
used to take him five hours a day is now

00:39:34,020 --> 00:39:41,130
done in less than 20 minutes the ZFS

00:39:37,350 --> 00:39:42,300
system setup took a couple weeks that's

00:39:41,130 --> 00:39:44,190
when the most enjoyable projects have

00:39:42,300 --> 00:39:47,010
ever done all into Xia deep dive into

00:39:44,190 --> 00:39:54,330
ZFS he remembers the very simple

00:39:47,010 --> 00:39:56,040
automation so things you need to worry

00:39:54,330 --> 00:39:58,620
about when you're looking at a community

00:39:56,040 --> 00:40:01,260
first off is is there a vibrant

00:39:58,620 --> 00:40:03,180
community around an open-source tool has

00:40:01,260 --> 00:40:05,870
there been in a release in the past year

00:40:03,180 --> 00:40:08,610
that's a good test who here remembers

00:40:05,870 --> 00:40:11,190
Perl five you know there was not a major

00:40:08,610 --> 00:40:12,690
your Perl five was was you'd like that

00:40:11,190 --> 00:40:15,030
was the version for like five years

00:40:12,690 --> 00:40:18,210
you know Perl six took forever to come

00:40:15,030 --> 00:40:20,400
out and if the community is vibrant

00:40:18,210 --> 00:40:22,230
then your users will be bugging you they

00:40:20,400 --> 00:40:24,900
will be saying we want the latest and we

00:40:22,230 --> 00:40:27,210
want the latest version and also

00:40:24,900 --> 00:40:29,510
successful usage will cause the tool to

00:40:27,210 --> 00:40:29,510
spread

00:40:30,210 --> 00:40:35,610
and talking about support outside

00:40:33,720 --> 00:40:39,570
support or paid support could be a good

00:40:35,610 --> 00:40:41,550
thing you need you probably you're

00:40:39,570 --> 00:40:43,260
probably gonna have to accept that there

00:40:41,550 --> 00:40:45,330
are some paid apps that are going to be

00:40:43,260 --> 00:40:48,180
better or a better alternative than open

00:40:45,330 --> 00:40:52,590
source I know this word open source

00:40:48,180 --> 00:40:54,630
conference but basically use what is the

00:40:52,590 --> 00:40:57,060
best tool and what makes the most sense

00:40:54,630 --> 00:40:59,360
don't push open source just because it's

00:40:57,060 --> 00:40:59,360
open

00:41:01,520 --> 00:41:11,100
next one eat your own dog food actually

00:41:05,820 --> 00:41:12,840
use the tools you're supporting you

00:41:11,100 --> 00:41:18,030
really can't push an application if you

00:41:12,840 --> 00:41:19,650
don't use it and people are not going to

00:41:18,030 --> 00:41:21,030
be willing to use an application if they

00:41:19,650 --> 00:41:25,740
don't see using it first or see a

00:41:21,030 --> 00:41:27,720
co-worker using it first Jason I for

00:41:25,740 --> 00:41:30,480
instance have both done a lot of small

00:41:27,720 --> 00:41:34,020
data analysis projects to answer

00:41:30,480 --> 00:41:37,520
management questions everything from the

00:41:34,020 --> 00:41:38,940
number of users connecting to a server

00:41:37,520 --> 00:41:40,590
puppet ansible

00:41:38,940 --> 00:41:42,600
you get a lot of data puppet and ansible

00:41:40,590 --> 00:41:46,680
the number of machines that are picking

00:41:42,600 --> 00:41:50,910
up data I'm picking up updates quickly

00:41:46,680 --> 00:41:53,040
and on-time those type things and once

00:41:50,910 --> 00:41:54,810
again Python for those who are so simple

00:41:53,040 --> 00:41:58,910
or who those of us who are system

00:41:54,810 --> 00:41:58,910
administrators is an excellent tool

00:41:59,060 --> 00:42:05,910
actually use the systems you support the

00:42:03,660 --> 00:42:08,760
number of times I visit other places and

00:42:05,910 --> 00:42:10,620
done things where I've walked into a

00:42:08,760 --> 00:42:14,640
room and seen the local Linux

00:42:10,620 --> 00:42:16,410
administrator using a Windows box as his

00:42:14,640 --> 00:42:19,470
primary machine with the Linux box in

00:42:16,410 --> 00:42:23,790
the corner maybe a test machine your

00:42:19,470 --> 00:42:28,140
users pick up on that and as you're

00:42:23,790 --> 00:42:31,020
using the boxes find the annoyances in

00:42:28,140 --> 00:42:34,530
our case we had a situation a couple

00:42:31,020 --> 00:42:36,920
years ago after a migration where users

00:42:34,530 --> 00:42:39,540
instead of experiencing a 3-second login

00:42:36,920 --> 00:42:42,300
we're experiencing a 15 to 20 second

00:42:39,540 --> 00:42:43,240
login it was just a simple change

00:42:42,300 --> 00:42:45,160
affected

00:42:43,240 --> 00:42:47,800
I ad with the way Kerberos was doing

00:42:45,160 --> 00:42:51,660
some authentication pretty easy to pick

00:42:47,800 --> 00:42:54,010
up the logs but users don't complain

00:42:51,660 --> 00:42:56,080
until it annoys them enough to come find

00:42:54,010 --> 00:42:56,950
you and if it annoys them enough to come

00:42:56,080 --> 00:43:02,470
find you

00:42:56,950 --> 00:43:05,500
it's probably too late and now the

00:43:02,470 --> 00:43:12,900
question answer I'm mark Hamrick he's

00:43:05,500 --> 00:43:12,900
Jason again any questions or answers yes

00:43:16,650 --> 00:43:24,520
the question is our text maker Alixe

00:43:19,869 --> 00:43:27,520
anywhere comparable yes and no I like

00:43:24,520 --> 00:43:30,780
licks it is I forget the exact

00:43:27,520 --> 00:43:33,940
terminology licks shows you more

00:43:30,780 --> 00:43:35,470
on-screen what is happening with your

00:43:33,940 --> 00:43:39,670
document it actually shows you some of

00:43:35,470 --> 00:43:41,680
the long-term formatting whereas any of

00:43:39,670 --> 00:43:44,980
the tech editors are basically going to

00:43:41,680 --> 00:43:48,910
show you the stuff you've typed in in

00:43:44,980 --> 00:43:53,560
the less use of my in the latech or the

00:43:48,910 --> 00:43:57,490
markdown esque language also lick licks

00:43:53,560 --> 00:43:59,470
can dump out latech but sometimes that

00:43:57,490 --> 00:44:00,480
latech may not be quite what you

00:43:59,470 --> 00:44:05,440
expected

00:44:00,480 --> 00:44:06,580
so with if I'm involved the process for

00:44:05,440 --> 00:44:09,270
a lot of the research teams I'll work

00:44:06,580 --> 00:44:12,490
with I basically forced down the use of

00:44:09,270 --> 00:44:17,410
either text maker or al a text tool

00:44:12,490 --> 00:44:19,330
directly because the mantra that sort of

00:44:17,410 --> 00:44:21,400
enforces is you were interested in the

00:44:19,330 --> 00:44:22,420
content on the page make sure your

00:44:21,400 --> 00:44:25,080
equations are correct

00:44:22,420 --> 00:44:27,609
make sure your language is correct and

00:44:25,080 --> 00:44:30,040
you worry about the formatting after you

00:44:27,609 --> 00:44:32,800
do the compile at the end of the compile

00:44:30,040 --> 00:44:33,940
of the latex at the end whereas those

00:44:32,800 --> 00:44:38,440
looked you're sort of worried about that

00:44:33,940 --> 00:44:41,170
formatting earlier on and we typically

00:44:38,440 --> 00:44:45,070
steer away from Lex I have quite a few

00:44:41,170 --> 00:44:48,550
users using it years ago you could find

00:44:45,070 --> 00:44:50,800
actual paid tools that would provide

00:44:48,550 --> 00:44:56,130
support and actually give you a word

00:44:50,800 --> 00:44:57,930
like environment for lay tech

00:44:56,130 --> 00:44:59,789
those have basically gone by the wayside

00:44:57,930 --> 00:45:02,039
except for one which is extremely

00:44:59,789 --> 00:45:04,259
expensive because it is meant basically

00:45:02,039 --> 00:45:07,499
for final fit and finish for publishing

00:45:04,259 --> 00:45:10,680
in other words if you have 50 people

00:45:07,499 --> 00:45:12,239
running latech the administrator or an

00:45:10,680 --> 00:45:17,160
office manager type position we'll have

00:45:12,239 --> 00:45:18,479
that tool before they send out to the

00:45:17,160 --> 00:45:22,109
publisher to make sure everything looks

00:45:18,479 --> 00:45:25,380
good but generally we just run straight

00:45:22,109 --> 00:45:27,089
latech because that's the process lick

00:45:25,380 --> 00:45:29,279
sort of hides that from you and shows

00:45:27,089 --> 00:45:31,349
you on this on the screen you know this

00:45:29,279 --> 00:45:34,559
is highlighted this more looks like a

00:45:31,349 --> 00:45:36,539
article format whereas text maker and

00:45:34,559 --> 00:45:38,999
the other latex tools are just going to

00:45:36,539 --> 00:45:42,959
show you the code and maybe a preview on

00:45:38,999 --> 00:45:44,519
the side the preview features of most of

00:45:42,959 --> 00:45:46,949
the modern latex editors are good enough

00:45:44,519 --> 00:45:50,759
now though to where they'll do it on the

00:45:46,949 --> 00:45:52,349
fly except you have to click on it to

00:45:50,759 --> 00:45:53,670
get back in the code where you want to

00:45:52,349 --> 00:45:55,380
go you just can't click on it and tight

00:45:53,670 --> 00:45:57,690
start typing on the actual generation

00:45:55,380 --> 00:45:59,180
code it doesn't work so well on a

00:45:57,690 --> 00:46:01,640
Raspberry Pi I discovered recently

00:45:59,180 --> 00:46:03,839
graduate students complaining that their

00:46:01,640 --> 00:46:05,969
code typing at home was running a little

00:46:03,839 --> 00:46:07,289
bit slow with the editor and then I

00:46:05,969 --> 00:46:10,049
discovered they were doing it on a

00:46:07,289 --> 00:46:11,549
Raspberry Pi but once we turn the

00:46:10,049 --> 00:46:13,319
preview off it actually worked great

00:46:11,549 --> 00:46:18,410
doing the preview generational slower

00:46:13,319 --> 00:46:18,410
processor doesn't always work well yes

00:46:22,380 --> 00:46:26,200
we'll start with that first first

00:46:24,670 --> 00:46:28,839
question is what Python library were

00:46:26,200 --> 00:46:32,830
using for parallelization we're using

00:46:28,839 --> 00:46:34,320
several I've got a bunch of them the

00:46:32,830 --> 00:46:37,230
simplest one I always teach first

00:46:34,320 --> 00:46:40,750
because it's the easiest to grok is I

00:46:37,230 --> 00:46:43,270
believe the parallel for loop r4 comes

00:46:40,750 --> 00:46:45,430
out of it I don't remove the exactly in

00:46:43,270 --> 00:46:47,400
the library but just do Python parallel

00:46:45,430 --> 00:46:50,410
for loop it'll pop right up in Google

00:46:47,400 --> 00:46:52,410
that is always the easiest route at

00:46:50,410 --> 00:46:55,150
first because it's easiest to grok

00:46:52,410 --> 00:46:56,800
instead of doing one thing you're doing

00:46:55,150 --> 00:46:59,470
up to the number of processors on the

00:46:56,800 --> 00:47:01,540
machine at a time and if you have a

00:46:59,470 --> 00:47:04,180
matrix for instance a lot of times what

00:47:01,540 --> 00:47:09,099
I deal with is a person needs to

00:47:04,180 --> 00:47:11,380
initialize a matrix one to a hundred

00:47:09,099 --> 00:47:14,200
thousand well they have to do a

00:47:11,380 --> 00:47:18,760
calculation for each cell but if the

00:47:14,200 --> 00:47:21,130
first cell is I and I plus one are not

00:47:18,760 --> 00:47:22,570
depending on each other you can then

00:47:21,130 --> 00:47:26,980
come back and do you know that

00:47:22,570 --> 00:47:31,060
calculation in all most desktops eight

00:47:26,980 --> 00:47:33,700
at once so that is the easiest they can

00:47:31,060 --> 00:47:36,550
grok that quickly understand it that's

00:47:33,700 --> 00:47:38,680
the general take off a lot of times that

00:47:36,550 --> 00:47:41,320
actually will knock off a quarter to a

00:47:38,680 --> 00:47:42,900
half the code run so they're happy and

00:47:41,320 --> 00:47:45,369
they leave and they don't come back

00:47:42,900 --> 00:47:46,900
another one is not really a library it's

00:47:45,369 --> 00:47:48,849
a tool I've been playing around with

00:47:46,900 --> 00:47:49,810
we've got a couple projects they're

00:47:48,849 --> 00:47:53,290
starting to use it

00:47:49,810 --> 00:47:57,040
it's called desk and that is basically a

00:47:53,290 --> 00:47:59,710
version of pandas and numpy that is

00:47:57,040 --> 00:48:02,380
built to do parallel up front so for

00:47:59,710 --> 00:48:04,230
instance when you open a data set you

00:48:02,380 --> 00:48:06,190
actually think it's write data frame

00:48:04,230 --> 00:48:08,710
another problem with jumping between r

00:48:06,190 --> 00:48:10,839
and python is the terms are too similar

00:48:08,710 --> 00:48:14,440
and you get confused it uses a panda's

00:48:10,839 --> 00:48:17,890
data frame and it basically opens what

00:48:14,440 --> 00:48:19,930
you think is one data frame and ask but

00:48:17,890 --> 00:48:22,690
it's actually multiple pandas data

00:48:19,930 --> 00:48:25,480
frames underneath underneath so they can

00:48:22,690 --> 00:48:27,670
do multiple things at once quietly we're

00:48:25,480 --> 00:48:30,640
also seeing a lot of mathematical

00:48:27,670 --> 00:48:34,160
statistical libraries now in numpy for

00:48:30,640 --> 00:48:37,220
instance where a function will have an

00:48:34,160 --> 00:48:40,000
equivalent call one is for single core

00:48:37,220 --> 00:48:44,300
the other function call is for parallel

00:48:40,000 --> 00:48:46,580
those on thus familiar with because I

00:48:44,300 --> 00:48:49,580
get into those in the specific projects

00:48:46,580 --> 00:48:52,040
I work on and there's to me them of them

00:48:49,580 --> 00:48:55,280
to remember because every function you

00:48:52,040 --> 00:48:56,450
use is in a different area so I could

00:48:55,280 --> 00:48:58,880
put you in contact some of the area

00:48:56,450 --> 00:49:10,700
specific people for if you have a weird

00:48:58,880 --> 00:49:14,050
calculation to run next question I am at

00:49:10,700 --> 00:49:17,810
I believe mmm HTM Ric at Twitter and

00:49:14,050 --> 00:49:19,040
since you're the fourth or fifth person

00:49:17,810 --> 00:49:23,240
has asked about it I guess I'll start

00:49:19,040 --> 00:49:25,010
looking at my Twitter again I gave it up

00:49:23,240 --> 00:49:26,210
for a while and but I've been asked

00:49:25,010 --> 00:49:28,010
multiple times in this conference I can

00:49:26,210 --> 00:49:32,260
look at it again but it's essentially

00:49:28,010 --> 00:49:32,260
the first part of my email address I

00:49:37,780 --> 00:49:44,030
there is the my understanding there is a

00:49:40,430 --> 00:49:47,780
BS code extension for lay tech I do not

00:49:44,030 --> 00:49:50,840
encourage it I've heard it's great we

00:49:47,780 --> 00:49:53,360
have a large knowledge base in the

00:49:50,840 --> 00:49:56,600
department's of users of Tech's maker

00:49:53,360 --> 00:50:00,290
it's very simple if a person can't find

00:49:56,600 --> 00:50:02,420
me or I'm too busy to stop and help them

00:50:00,290 --> 00:50:05,840
right now they can quickly find someone

00:50:02,420 --> 00:50:07,640
else who knows text maker it's I'm not

00:50:05,840 --> 00:50:08,270
even gonna say text base text makers the

00:50:07,640 --> 00:50:10,670
best-of-breed

00:50:08,270 --> 00:50:12,970
but because the fact it works across all

00:50:10,670 --> 00:50:14,750
three major operating systems we use

00:50:12,970 --> 00:50:16,820
generally there's always someone

00:50:14,750 --> 00:50:20,660
available who can help a person to

00:50:16,820 --> 00:50:22,550
answer it and most of the SPECIAL of

00:50:20,660 --> 00:50:24,470
text makers gotten so simple now once

00:50:22,550 --> 00:50:25,790
you're familiar with it but the

00:50:24,470 --> 00:50:28,790
questions that come in a lot of times

00:50:25,790 --> 00:50:31,820
I'm having to send them to professors or

00:50:28,790 --> 00:50:35,330
other people who were more familiar with

00:50:31,820 --> 00:50:37,730
the academic question they're asking you

00:50:35,330 --> 00:50:41,330
know that weird linear algebra symbol or

00:50:37,730 --> 00:50:44,630
weird not Theory notation that's only

00:50:41,330 --> 00:50:47,690
used by less than 500 people worldwide

00:50:44,630 --> 00:50:49,280
I'm not that familiar with so

00:50:47,690 --> 00:50:53,000
and honestly most latex questions I get

00:50:49,280 --> 00:50:55,640
today I am referring own because after

00:50:53,000 --> 00:50:57,470
just to some initial work text maker has

00:50:55,640 --> 00:50:59,180
gotten to the point it works well that

00:50:57,470 --> 00:51:02,869
being said I I know I have one person

00:50:59,180 --> 00:51:06,980
using BS code we won't even go into the

00:51:02,869 --> 00:51:09,099
VI and Emacs users who you know if you

00:51:06,980 --> 00:51:11,630
do not install the specific version of

00:51:09,099 --> 00:51:12,740
VI for them on their machine you will

00:51:11,630 --> 00:51:15,290
hear about it and they will make you

00:51:12,740 --> 00:51:16,730
think it is the worst configuration

00:51:15,290 --> 00:51:20,839
management error you've had in six

00:51:16,730 --> 00:51:22,160
months so yeah it's kind of funny you

00:51:20,839 --> 00:51:24,319
look at my configuration management

00:51:22,160 --> 00:51:25,819
scripts for puppet and you'll see a

00:51:24,319 --> 00:51:29,210
comment some times on certain machine

00:51:25,819 --> 00:51:31,400
configurations of warning non-standard

00:51:29,210 --> 00:51:33,020
make sure you know usually we install I

00:51:31,400 --> 00:51:35,000
think I forget which one of them

00:51:33,020 --> 00:51:37,460
packages but you'll see on cert machine

00:51:35,000 --> 00:51:40,069
show vim improved or whatever version of

00:51:37,460 --> 00:51:41,780
them they prefer or Emacs they prefer on

00:51:40,069 --> 00:51:43,460
their machines and the machines they

00:51:41,780 --> 00:51:45,849
regularly use we just go ahead and add

00:51:43,460 --> 00:51:47,660
that so we don't have to hear about it

00:51:45,849 --> 00:51:49,520
and that's another nice thing about

00:51:47,660 --> 00:51:52,490
configuration management is it allows

00:51:49,520 --> 00:51:55,490
you those options so that when you hand

00:51:52,490 --> 00:51:56,930
them a new machine because they ran a

00:51:55,490 --> 00:52:00,109
calculation you told them not to run

00:51:56,930 --> 00:52:02,000
because it was on a small form factor

00:52:00,109 --> 00:52:05,030
and they ran a calculation for six weeks

00:52:02,000 --> 00:52:06,770
and a hard drive died and you're having

00:52:05,030 --> 00:52:08,420
to give them a spare you can quickly

00:52:06,770 --> 00:52:11,660
just set the configuration settings the

00:52:08,420 --> 00:52:12,980
same and reproduce the machine so and

00:52:11,660 --> 00:52:15,530
that's that's great because it does

00:52:12,980 --> 00:52:18,710
allow for an ax configuration allows you

00:52:15,530 --> 00:52:21,530
to give more custom a ssin customization

00:52:18,710 --> 00:52:23,599
to end-users to allow them to do what

00:52:21,530 --> 00:52:29,530
they want to do and the tools sets they

00:52:23,599 --> 00:52:29,530
want to use yes

00:52:47,349 --> 00:52:51,740
Jason I both most of the things in the

00:52:49,670 --> 00:52:53,330
eunuch side are also very similar and

00:52:51,740 --> 00:52:57,170
are in the sciences it's usually based

00:52:53,330 --> 00:52:59,500
off a flex licensing flex the name has

00:52:57,170 --> 00:53:02,180
changed a few times over the years and

00:52:59,500 --> 00:53:03,500
exactly right that's some of my data

00:53:02,180 --> 00:53:05,720
analysis tools are actually going into

00:53:03,500 --> 00:53:09,050
those logs and actually generating the

00:53:05,720 --> 00:53:10,430
usage because what people tell you

00:53:09,050 --> 00:53:13,430
they're doing and they're doing or two

00:53:10,430 --> 00:53:16,310
different things often and often they

00:53:13,430 --> 00:53:19,400
don't realize with especially certain

00:53:16,310 --> 00:53:21,200
proprietary applications they come at

00:53:19,400 --> 00:53:22,760
you like I need five more users and you

00:53:21,200 --> 00:53:27,130
look at them and pull up the log and say

00:53:22,760 --> 00:53:29,030
your team members Tom Dick and Jane

00:53:27,130 --> 00:53:31,430
here's a list think of all the times

00:53:29,030 --> 00:53:32,840
they've been using it like they haven't

00:53:31,430 --> 00:53:34,010
even been at the country that during

00:53:32,840 --> 00:53:36,200
this time period I know they're not

00:53:34,010 --> 00:53:37,970
working and you just gently smile them

00:53:36,200 --> 00:53:41,240
and go you may want to ask them they can

00:53:37,970 --> 00:53:43,700
close their copy out that has literally

00:53:41,240 --> 00:53:46,460
resolved probably 95% of my licensing

00:53:43,700 --> 00:53:48,619
issues just having them close it so

00:53:46,460 --> 00:53:52,849
that's the typical stuff we use some of

00:53:48,619 --> 00:53:54,440
them actually integrate into we have a

00:53:52,849 --> 00:53:56,000
couple license servers that actually had

00:53:54,440 --> 00:53:58,790
been moved over to integrate directly

00:53:56,000 --> 00:54:00,770
into SCCM for monitoring but the real

00:53:58,790 --> 00:54:04,160
specific to our areas we typically

00:54:00,770 --> 00:54:08,690
monitor ourselves so that you can start

00:54:04,160 --> 00:54:10,640
to see things going on I have quietly

00:54:08,690 --> 00:54:14,180
notified a few professors over the years

00:54:10,640 --> 00:54:15,710
hey you know this person's doing work

00:54:14,180 --> 00:54:19,510
for you you specifically said you did

00:54:15,710 --> 00:54:21,650
not want to use Product X in the meeting

00:54:19,510 --> 00:54:24,820
you've got three students you know

00:54:21,650 --> 00:54:27,830
you've got somebody using Product X and

00:54:24,820 --> 00:54:29,480
you may want to address that and often

00:54:27,830 --> 00:54:32,300
what we find in those cases is that's a

00:54:29,480 --> 00:54:34,599
sign you know hey it's not a sign of

00:54:32,300 --> 00:54:37,040
license abuse is a sign of the person is

00:54:34,599 --> 00:54:39,560
holding on to a crutch instead of moving

00:54:37,040 --> 00:54:42,080
over to the newer tool being used and

00:54:39,560 --> 00:54:43,970
it's good to let people know the first

00:54:42,080 --> 00:54:46,520
two weeks of a project

00:54:43,970 --> 00:54:48,980
that's a minor annoyance when your one

00:54:46,520 --> 00:54:50,540
week from a deadline that's critical so

00:54:48,980 --> 00:54:53,030
it's better to get that cleaned up early

00:54:50,540 --> 00:54:54,680
and the issue trained out early a lot of

00:54:53,030 --> 00:55:01,310
times getting some of that data in early

00:54:54,680 --> 00:55:02,920
is a good tool any other questions well

00:55:01,310 --> 00:55:06,430
in that case thank you for coming and

00:55:02,920 --> 00:55:06,430

YouTube URL: https://www.youtube.com/watch?v=BkS_fkgPfl8


