Title: Jim Salter - Converged Infrastructure with Sanoid
Publication date: 2017-01-25
Playlist: 2015 SouthEast LinuxFest
Description: 
	
Captions: 
	00:00:02,070 --> 00:00:08,590
cool welcome everybody we're going to

00:00:05,830 --> 00:00:10,480
talk about san toy today san toy diz my

00:00:08,590 --> 00:00:11,949
own platform if you're a venture

00:00:10,480 --> 00:00:14,139
capitalist you would understand it as

00:00:11,949 --> 00:00:16,840
hyper converged infrastructure if you

00:00:14,139 --> 00:00:18,490
are not a venture capitalist of what

00:00:16,840 --> 00:00:20,920
we're actually looking at is condensing

00:00:18,490 --> 00:00:23,530
enterprise virtualization into a single

00:00:20,920 --> 00:00:25,810
machine using open-source software and

00:00:23,530 --> 00:00:28,869
commodity hardware my name is Jim Salter

00:00:25,810 --> 00:00:32,680
i live in columbia south carolina and i

00:00:28,869 --> 00:00:34,450
own a consulting firm there I developed

00:00:32,680 --> 00:00:36,790
this platform for my own private

00:00:34,450 --> 00:00:39,340
day-to-day consulting firm but the new

00:00:36,790 --> 00:00:41,710
company open oyed is a startup devoted

00:00:39,340 --> 00:00:45,250
specifically to to make this platform

00:00:41,710 --> 00:00:49,390
available elsewhere so before we talk

00:00:45,250 --> 00:00:51,790
about the actual platform itself way

00:00:49,390 --> 00:00:54,309
back in 2002 this guy said something to

00:00:51,790 --> 00:00:56,829
me that just blew my mind Tim Anderson

00:00:54,309 --> 00:01:00,430
is director of IT at an insurance firm

00:00:56,829 --> 00:01:03,730
in Portland and back in 2002 he told me

00:01:00,430 --> 00:01:05,829
that the IT hero is dead he said you

00:01:03,730 --> 00:01:07,270
know the days of the guy who like you

00:01:05,829 --> 00:01:09,369
know went back in the closet and did the

00:01:07,270 --> 00:01:10,959
crazy things nobody could understand to

00:01:09,369 --> 00:01:12,429
resurrect the server that was down at

00:01:10,959 --> 00:01:14,289
the last minute like that was all over

00:01:12,429 --> 00:01:16,600
with said we have policies and

00:01:14,289 --> 00:01:18,520
procedures now we never have issues like

00:01:16,600 --> 00:01:19,719
that if something goes down you have

00:01:18,520 --> 00:01:21,729
backup and you follow all your

00:01:19,719 --> 00:01:24,219
procedures and everything's golden and

00:01:21,729 --> 00:01:26,740
you know nothing's ever weird and I told

00:01:24,219 --> 00:01:28,209
him he was insane because as a small

00:01:26,740 --> 00:01:29,829
business as a consultant small

00:01:28,209 --> 00:01:31,299
businesses I knew that my usual client

00:01:29,829 --> 00:01:35,200
acquisition process looks something like

00:01:31,299 --> 00:01:37,119
this it blows up I get a phone call and

00:01:35,200 --> 00:01:38,920
I come in and I do exactly the IT

00:01:37,119 --> 00:01:41,319
superhero crap that he said that nobody

00:01:38,920 --> 00:01:43,179
ever had to do anymore now what I didn't

00:01:41,319 --> 00:01:45,039
really realize back then was the

00:01:43,179 --> 00:01:47,679
difference between small business and

00:01:45,039 --> 00:01:48,909
enterprise you know in my world as a

00:01:47,679 --> 00:01:51,819
consultant to small and medium

00:01:48,909 --> 00:01:52,869
businesses um keep in mind this was back

00:01:51,819 --> 00:01:55,359
in two thousand two before

00:01:52,869 --> 00:01:56,979
virtualization got big so if you were an

00:01:55,359 --> 00:01:59,829
enterprise you didn't really buy a

00:01:56,979 --> 00:02:01,239
server when you bought a new server you

00:01:59,829 --> 00:02:02,739
bought two or three of those things and

00:02:01,239 --> 00:02:04,869
probably enough parts to build another

00:02:02,739 --> 00:02:06,669
one they got stuffed in a closet and you

00:02:04,869 --> 00:02:08,890
had next day service and blah blah blah

00:02:06,669 --> 00:02:11,470
and all this kind of stuff so that you

00:02:08,890 --> 00:02:12,700
know when any of these kinds of what any

00:02:11,470 --> 00:02:13,890
of these kinds of catastrophes happen

00:02:12,700 --> 00:02:15,569
that could only be

00:02:13,890 --> 00:02:17,340
resolved by having another nuts and

00:02:15,569 --> 00:02:20,190
bolts identical to the last screw server

00:02:17,340 --> 00:02:22,380
available if you've ever used Windows NT

00:02:20,190 --> 00:02:23,850
backup or semantic enterprise backup or

00:02:22,380 --> 00:02:25,140
anything else you will of course realize

00:02:23,850 --> 00:02:27,600
that you can back up the whole machine

00:02:25,140 --> 00:02:28,890
including system state but if you don't

00:02:27,600 --> 00:02:30,600
have physically identical hardware

00:02:28,890 --> 00:02:32,700
Microsoft will tell you quite clearly

00:02:30,600 --> 00:02:34,440
although in very small print system

00:02:32,700 --> 00:02:36,720
state restoration is only supported on

00:02:34,440 --> 00:02:38,190
identical hardware so in the enterprise

00:02:36,720 --> 00:02:39,750
like I said you just have a closet full

00:02:38,190 --> 00:02:41,760
of the exact same thing and it's no big

00:02:39,750 --> 00:02:43,230
deal in small business what usually

00:02:41,760 --> 00:02:45,120
happens is the machine dies and it's

00:02:43,230 --> 00:02:47,070
five years old and it was probably an

00:02:45,120 --> 00:02:49,170
old design five years ago and it hasn't

00:02:47,070 --> 00:02:51,420
been made for a long time and you're

00:02:49,170 --> 00:02:52,800
hunting on ebay for you know replacement

00:02:51,420 --> 00:02:54,959
motherboard at the same part and hoping

00:02:52,800 --> 00:02:56,220
for the best everything sucks which is

00:02:54,959 --> 00:02:57,959
why I end up in the back you know doing

00:02:56,220 --> 00:02:59,310
the IT superhero crap and hacking the

00:02:57,959 --> 00:03:02,730
registry and you know performing some

00:02:59,310 --> 00:03:04,410
kind of miracle at the end so after you

00:03:02,730 --> 00:03:05,970
get through all of your IT superhero

00:03:04,410 --> 00:03:07,260
garbage and you've done the black magic

00:03:05,970 --> 00:03:08,940
and sacrifice the chicken and the

00:03:07,260 --> 00:03:10,769
server's up and limping along again the

00:03:08,940 --> 00:03:12,239
first thing that the business owner was

00:03:10,769 --> 00:03:13,830
to ask you as well you know I don't ever

00:03:12,239 --> 00:03:15,930
want to go through this again what is

00:03:13,830 --> 00:03:19,260
the fortune 500 it what's IBM doing

00:03:15,930 --> 00:03:20,790
what's Microsoft doing and you know the

00:03:19,260 --> 00:03:22,110
answer of that is it doesn't matter

00:03:20,790 --> 00:03:24,120
because you can't afford to do what they

00:03:22,110 --> 00:03:25,290
do again you know all the way on the low

00:03:24,120 --> 00:03:27,690
end you're talking about you know having

00:03:25,290 --> 00:03:29,459
literally three or four physical copies

00:03:27,690 --> 00:03:30,810
of every server you buy and if you tell

00:03:29,459 --> 00:03:32,400
a small business owner that that's what

00:03:30,810 --> 00:03:34,160
you want them to do they will throw you

00:03:32,400 --> 00:03:39,000
out and get a quote from somebody else

00:03:34,160 --> 00:03:41,190
so I mentioned that you know what we're

00:03:39,000 --> 00:03:42,590
doing is enterprise virtualization but

00:03:41,190 --> 00:03:44,640
we're doing it on a much smaller scale

00:03:42,590 --> 00:03:46,500
smaller in terms of the amount of

00:03:44,640 --> 00:03:48,150
hardware required in terms of the amount

00:03:46,500 --> 00:03:50,430
of dollars you have to throw out there

00:03:48,150 --> 00:03:51,630
so we want these enterprise features we

00:03:50,430 --> 00:03:53,430
want the stuff you know when the small

00:03:51,630 --> 00:03:55,500
business owner said what's the fortune

00:03:53,430 --> 00:03:56,700
500 doing what he really meant is you

00:03:55,500 --> 00:03:59,370
know I want the kind of predictability

00:03:56,700 --> 00:04:00,930
and reliability that those guys have so

00:03:59,370 --> 00:04:02,250
when I say that we have enterprise

00:04:00,930 --> 00:04:03,690
features in a small business budget

00:04:02,250 --> 00:04:06,720
which features am I talking about

00:04:03,690 --> 00:04:09,480
predictability minimal downtime rapid

00:04:06,720 --> 00:04:10,410
recovery no I feel like it's important

00:04:09,480 --> 00:04:12,299
to talk about the minimal downtime

00:04:10,410 --> 00:04:14,489
because a lot of people want to go nuts

00:04:12,299 --> 00:04:16,229
about saying oh well you know I've got

00:04:14,489 --> 00:04:17,789
true high availability and I've got

00:04:16,229 --> 00:04:20,579
automatic failover and I've got all

00:04:17,789 --> 00:04:22,080
these awesome things and yeah those

00:04:20,579 --> 00:04:23,940
things are great but if you've got

00:04:22,080 --> 00:04:25,530
automatic failover the thing that comes

00:04:23,940 --> 00:04:27,630
along with that is the possibility that

00:04:25,530 --> 00:04:29,220
both of your redundant devices the

00:04:27,630 --> 00:04:30,570
side that the other one is down and that

00:04:29,220 --> 00:04:32,880
they're the real device and they both

00:04:30,570 --> 00:04:35,070
come online at the same time and half of

00:04:32,880 --> 00:04:36,690
your firm is doing you know work on one

00:04:35,070 --> 00:04:38,640
machine and a half is doing work on the

00:04:36,690 --> 00:04:39,810
other and then two days later you figure

00:04:38,640 --> 00:04:41,400
that out you have to figure out how to

00:04:39,810 --> 00:04:44,220
merge all that stuff from two different

00:04:41,400 --> 00:04:46,080
boxes when nothing works I don't like

00:04:44,220 --> 00:04:50,040
all that so I'm actually okay with

00:04:46,080 --> 00:04:51,480
downtime in small chunks if it boxes

00:04:50,040 --> 00:04:53,420
down for five minutes or 10 minutes or

00:04:51,480 --> 00:04:55,740
15 minutes generally in my experience

00:04:53,420 --> 00:04:57,750
most people are okay with that even a

00:04:55,740 --> 00:05:00,930
fairly big organizations if it's up

00:04:57,750 --> 00:05:01,890
again no questions after 10 minutes dude

00:05:00,930 --> 00:05:03,780
you can deal with 10 minutes of downtime

00:05:01,890 --> 00:05:05,730
something like it's important to clear

00:05:03,780 --> 00:05:07,560
that up and finally a rapid recovery

00:05:05,730 --> 00:05:09,180
that kind of goes again with you know

00:05:07,560 --> 00:05:11,940
yes it needs to be back up after 10

00:05:09,180 --> 00:05:13,230
minutes if there's an emergency you need

00:05:11,940 --> 00:05:15,180
to be able to come back up from it

00:05:13,230 --> 00:05:17,100
quickly one of the things that sucks

00:05:15,180 --> 00:05:18,600
about being the IT hero is you know yes

00:05:17,100 --> 00:05:21,330
you're doing this crazy black magic

00:05:18,600 --> 00:05:23,850
stuff and yes you're pulling off insane

00:05:21,330 --> 00:05:25,470
miracles but half the time your closeted

00:05:23,850 --> 00:05:27,030
in the back with a server for six hours

00:05:25,470 --> 00:05:28,740
with no guarantee at the end of the six

00:05:27,030 --> 00:05:31,350
hours whether everything will be fine or

00:05:28,740 --> 00:05:32,280
mostly fine or sort of kind of limping

00:05:31,350 --> 00:05:33,510
but you're really gonna have to do

00:05:32,280 --> 00:05:34,590
something else the next couple of days

00:05:33,510 --> 00:05:36,360
to get it all the way back up and

00:05:34,590 --> 00:05:38,730
running or just you haven't accomplished

00:05:36,360 --> 00:05:40,980
a thing I'll let you know when i'm done

00:05:38,730 --> 00:05:44,610
doing my magic that sucks nobody wants

00:05:40,980 --> 00:05:47,610
that so how does the enterprise

00:05:44,610 --> 00:05:49,440
accomplish these things well there's a

00:05:47,610 --> 00:05:51,180
diagram you got a storage area network

00:05:49,440 --> 00:05:53,250
preferably two storage area networks

00:05:51,180 --> 00:05:55,680
because if you don't have a backup then

00:05:53,250 --> 00:05:57,120
your data is very temporary so you need

00:05:55,680 --> 00:05:59,670
to sands for replicate between the two

00:05:57,120 --> 00:06:01,980
of them which nobody actually has by the

00:05:59,670 --> 00:06:03,990
way but you need that and then you've

00:06:01,980 --> 00:06:06,090
got you know linux boxes over here and

00:06:03,990 --> 00:06:08,190
storage raised over here probably get a

00:06:06,090 --> 00:06:10,020
tape library and you've got some windows

00:06:08,190 --> 00:06:12,510
boxes and you've got a compute stack and

00:06:10,020 --> 00:06:14,130
all this complicated stuff um one of my

00:06:12,510 --> 00:06:15,690
favorite parts to hate on on that though

00:06:14,130 --> 00:06:17,070
you know the bit down there in the

00:06:15,690 --> 00:06:18,810
middle on the bottom you know your nice

00:06:17,070 --> 00:06:21,030
10 gig fiber transport because you've

00:06:18,810 --> 00:06:22,950
got this tall storage silo and you need

00:06:21,030 --> 00:06:24,600
a separate private network that your

00:06:22,950 --> 00:06:26,820
users can't touch to get all that from

00:06:24,600 --> 00:06:28,740
your storage stack to your compute stack

00:06:26,820 --> 00:06:30,930
this is this is a bunch of complicated

00:06:28,740 --> 00:06:32,330
stuff to set up and manage complicated

00:06:30,930 --> 00:06:33,889
expensive

00:06:32,330 --> 00:06:36,830
that's the other way that the

00:06:33,889 --> 00:06:38,060
enterprise's manage all this and we

00:06:36,830 --> 00:06:40,819
can't really handle that either in the

00:06:38,060 --> 00:06:42,020
small business world so how are we going

00:06:40,819 --> 00:06:43,250
to do it well we're going to use open

00:06:42,020 --> 00:06:45,020
source software and where you use

00:06:43,250 --> 00:06:48,650
commodity hardware there's no

00:06:45,020 --> 00:06:50,509
unobtainium here all of the software is

00:06:48,650 --> 00:06:52,099
either available from your distributions

00:06:50,509 --> 00:06:54,289
repositories or it's available from

00:06:52,099 --> 00:06:56,960
github because the parts of that I wrote

00:06:54,289 --> 00:06:59,330
our gplv3 they're up on github they're

00:06:56,960 --> 00:07:01,099
available I would love for you to be my

00:06:59,330 --> 00:07:03,469
customer and hand me actual money cash

00:07:01,099 --> 00:07:05,030
dollars I like those but i'm a firm

00:07:03,469 --> 00:07:06,590
believer that your customers are your

00:07:05,030 --> 00:07:07,789
customers because they want to do

00:07:06,590 --> 00:07:11,270
business with you not because they're

00:07:07,789 --> 00:07:13,639
locked into it getting down to the

00:07:11,270 --> 00:07:15,349
nitty-gritty enterprise features this is

00:07:13,639 --> 00:07:18,050
the first and the most awesome thing to

00:07:15,349 --> 00:07:19,849
me rolling hourly snapshots what that

00:07:18,050 --> 00:07:22,400
means is that every hour on the hour

00:07:19,849 --> 00:07:24,949
every single block of data on every

00:07:22,400 --> 00:07:26,840
single VM that you have is frozen in

00:07:24,949 --> 00:07:29,810
time and you can jump back to that

00:07:26,840 --> 00:07:30,919
instantaneously later if you need to the

00:07:29,810 --> 00:07:33,529
little bit of text that we're looking at

00:07:30,919 --> 00:07:36,889
off to the right there is a chunk of an

00:07:33,529 --> 00:07:41,629
actual san toy con fig file the format

00:07:36,889 --> 00:07:43,819
is called tamil pardon me it's pretty

00:07:41,629 --> 00:07:46,520
human readable you can see we've got a

00:07:43,819 --> 00:07:47,960
storage pool and a data set and we say

00:07:46,520 --> 00:07:49,430
we use the production template well

00:07:47,960 --> 00:07:51,050
what's the production template we define

00:07:49,430 --> 00:07:53,509
it right there you can define your own

00:07:51,050 --> 00:07:55,849
tablets and apply them and that one says

00:07:53,509 --> 00:07:58,550
we're going to keep 36 hourly snapshots

00:07:55,849 --> 00:08:01,039
30 dailies three monthlies one yearly

00:07:58,550 --> 00:08:03,770
we're gonna automatically take snapshots

00:08:01,039 --> 00:08:05,120
and thin them that's all you have to do

00:08:03,770 --> 00:08:07,219
to set all that up you create your

00:08:05,120 --> 00:08:09,110
policy there and san toy does it all for

00:08:07,219 --> 00:08:10,669
you you don't have to have a giant

00:08:09,110 --> 00:08:12,469
laundry list of things in a crontab

00:08:10,669 --> 00:08:13,969
trying to take all the snapshots at the

00:08:12,469 --> 00:08:16,039
right times and figure out when to thin

00:08:13,969 --> 00:08:19,159
them and get rid of them set your policy

00:08:16,039 --> 00:08:20,779
there you're done now since I actually

00:08:19,159 --> 00:08:23,060
wrote this presentation I actually

00:08:20,779 --> 00:08:24,979
improve things a little bit if I rewrote

00:08:23,060 --> 00:08:27,020
that slide right now the next line on

00:08:24,979 --> 00:08:29,690
that pool data set module would be

00:08:27,020 --> 00:08:31,250
recursive equals yes you can now set

00:08:29,690 --> 00:08:33,380
your data set definitions recursively

00:08:31,250 --> 00:08:35,570
which means as you create more VMs

00:08:33,380 --> 00:08:37,010
underneath pool data set is a very

00:08:35,570 --> 00:08:38,870
generic name lets you know say it was

00:08:37,010 --> 00:08:41,300
data images instead you could have data

00:08:38,870 --> 00:08:42,680
images windows server data images domain

00:08:41,300 --> 00:08:44,690
controller data images have been too

00:08:42,680 --> 00:08:46,140
trusty on down the line you might have

00:08:44,690 --> 00:08:47,850
nine or ten VMs on the one

00:08:46,140 --> 00:08:49,500
sucks but you could just have the one

00:08:47,850 --> 00:08:54,180
policy definition that covers all of

00:08:49,500 --> 00:08:57,300
them under the one template automated

00:08:54,180 --> 00:08:59,670
monitoring this one is huge again as a

00:08:57,300 --> 00:09:01,700
small business consultant I can tell you

00:08:59,670 --> 00:09:03,960
that in the small business world and

00:09:01,700 --> 00:09:05,190
sadly in the mid-market world and

00:09:03,960 --> 00:09:06,900
frequently the enterprise were all the

00:09:05,190 --> 00:09:08,760
way back ups frequently work is that you

00:09:06,900 --> 00:09:10,200
have this awesome procedure you have

00:09:08,760 --> 00:09:11,490
this policy that everybody follows with

00:09:10,200 --> 00:09:14,070
the tapes and they do the thing every

00:09:11,490 --> 00:09:16,670
single day without fail well maybe but

00:09:14,070 --> 00:09:19,590
even if they do the thing without fail

00:09:16,670 --> 00:09:21,330
it's never actually tested so they've

00:09:19,590 --> 00:09:22,680
been doing this thing for three years

00:09:21,330 --> 00:09:24,390
then you actually need to restore from

00:09:22,680 --> 00:09:26,220
tape and you go to the tapes you find

00:09:24,390 --> 00:09:27,570
out that nothing has worked for like a

00:09:26,220 --> 00:09:28,920
year and a half and nobody knew it

00:09:27,570 --> 00:09:31,290
because they didn't test it why did they

00:09:28,920 --> 00:09:33,150
test it because you know to test backups

00:09:31,290 --> 00:09:34,890
from tape on one server is usually going

00:09:33,150 --> 00:09:36,810
to take you a minimum of half a man day

00:09:34,890 --> 00:09:38,460
plus all the alternate equipment to

00:09:36,810 --> 00:09:41,630
actually do the restoration on a bobble

00:09:38,460 --> 00:09:44,250
Bobble Bonnie no I get time for that so

00:09:41,630 --> 00:09:45,840
the automated monitoring we actually

00:09:44,250 --> 00:09:47,220
monitor our backups we'll talk a little

00:09:45,840 --> 00:09:50,040
bit more about this later but when we

00:09:47,220 --> 00:09:52,170
replicate VMs from a production machine

00:09:50,040 --> 00:09:55,140
to a backup machine the nice thing about

00:09:52,170 --> 00:09:57,060
block level replication with ZFS which

00:09:55,140 --> 00:09:59,280
what's a noid uses for storage is you

00:09:57,060 --> 00:10:01,380
can't replicate half a snapshot you

00:09:59,280 --> 00:10:03,150
can't real play a partial snapshot you

00:10:01,380 --> 00:10:04,860
can't replicate a corrupt snapshot

00:10:03,150 --> 00:10:06,660
because every single block of it as

00:10:04,860 --> 00:10:08,640
checksum and the checksum is validated

00:10:06,660 --> 00:10:10,920
on both ends so if you've got a new

00:10:08,640 --> 00:10:12,990
snapshot on the back up in that means

00:10:10,920 --> 00:10:14,520
you backed up all your data yes really

00:10:12,990 --> 00:10:17,760
you didn't just wave the chicken it

00:10:14,520 --> 00:10:20,070
happened so if you monitor how new are

00:10:17,760 --> 00:10:21,750
your snapshots on your backup box you

00:10:20,070 --> 00:10:24,540
are guaranteeing that you have backed up

00:10:21,750 --> 00:10:26,700
all the stuff on your server and because

00:10:24,540 --> 00:10:29,520
this is a block level backup of a VM

00:10:26,700 --> 00:10:31,350
image is not a case of well I backed up

00:10:29,520 --> 00:10:32,820
the data on this one shared drive but I

00:10:31,350 --> 00:10:34,560
forgot about the other one or I forgot

00:10:32,820 --> 00:10:36,840
about the sequel server i forgot about

00:10:34,560 --> 00:10:38,340
no sequel thing that the devs installed

00:10:36,840 --> 00:10:41,190
and didn't tell anybody about last night

00:10:38,340 --> 00:10:45,260
no no it's the whole image backed up no

00:10:41,190 --> 00:10:48,510
problems so asynchronous incremental

00:10:45,260 --> 00:10:51,570
replication rapid granular reliable

00:10:48,510 --> 00:10:53,010
disaster recovery which we just talked

00:10:51,570 --> 00:10:55,560
about strong hardware decoupling I

00:10:53,010 --> 00:10:57,690
mentioned this earlier uh you know when

00:10:55,560 --> 00:10:59,280
you do wind and a lot of the things that

00:10:57,690 --> 00:11:00,060
I'm going to talk about here involve how

00:10:59,280 --> 00:11:01,770
much windows

00:11:00,060 --> 00:11:02,970
and I apologize for that I know this is

00:11:01,770 --> 00:11:04,950
an open source conference and we don't

00:11:02,970 --> 00:11:06,570
want to talk about Windows but a lot of

00:11:04,950 --> 00:11:09,270
us have to manage that crap whether we

00:11:06,570 --> 00:11:11,250
like it or not a lot of my goal behind

00:11:09,270 --> 00:11:13,050
building this platform to begin with was

00:11:11,250 --> 00:11:15,420
basically turning windows into a

00:11:13,050 --> 00:11:17,400
self-contained little module in

00:11:15,420 --> 00:11:19,500
container that I could really finely

00:11:17,400 --> 00:11:21,300
treat as cattle and not a pet and not

00:11:19,500 --> 00:11:23,250
care about because I could just you know

00:11:21,300 --> 00:11:25,200
roll it back in time replicate it from A

00:11:23,250 --> 00:11:26,550
to B and basically not have to worry

00:11:25,200 --> 00:11:29,220
about fixing it and hacking it and all

00:11:26,550 --> 00:11:31,350
that other kind of crap anymore so I

00:11:29,220 --> 00:11:33,120
mentioned before that you know microsoft

00:11:31,350 --> 00:11:35,730
says pretty clearly although in very

00:11:33,120 --> 00:11:37,380
tiny print system state restoration is

00:11:35,730 --> 00:11:39,930
only supported on two identical hardware

00:11:37,380 --> 00:11:41,700
so one fix to that is you have an entire

00:11:39,930 --> 00:11:44,700
closet full of the exact same model of

00:11:41,700 --> 00:11:46,140
dell server a better fix for that is you

00:11:44,700 --> 00:11:47,730
just d couple it from the hardware and

00:11:46,140 --> 00:11:49,740
you lie to it you give a virtual

00:11:47,730 --> 00:11:51,800
hardware it's identical no matter what

00:11:49,740 --> 00:11:56,010
the real Hardware underneath the box is

00:11:51,800 --> 00:11:58,170
my very first technically san toy doll

00:11:56,010 --> 00:12:00,840
of the name didn't actually exist yet

00:11:58,170 --> 00:12:03,270
platform for client was a CPA firm that

00:12:00,840 --> 00:12:04,950
had a shouldn't say hat they have a

00:12:03,270 --> 00:12:07,440
really bad habit of doing things like

00:12:04,950 --> 00:12:09,800
losing five thousand dollar install

00:12:07,440 --> 00:12:12,330
disks for Windows enterprise server and

00:12:09,800 --> 00:12:13,740
so when they tend to destroy their

00:12:12,330 --> 00:12:15,510
machine which they do with distressing

00:12:13,740 --> 00:12:17,610
frequency it's always a giant pain in

00:12:15,510 --> 00:12:19,980
the butt dealing with it well I deployed

00:12:17,610 --> 00:12:22,860
the baby version of this platform for

00:12:19,980 --> 00:12:24,630
them and six months later they had hired

00:12:22,860 --> 00:12:27,900
about half again as many people as they

00:12:24,630 --> 00:12:30,510
had originally the the hardware was an

00:12:27,900 --> 00:12:32,460
old until Q 6600 if you remember those

00:12:30,510 --> 00:12:34,200
which they maxed out at eight gigs ram

00:12:32,460 --> 00:12:36,360
well that was fun with their original

00:12:34,200 --> 00:12:38,580
number of employees with half again you

00:12:36,360 --> 00:12:39,810
know or double the employees the thing

00:12:38,580 --> 00:12:41,100
was blue screening for lack of memory

00:12:39,810 --> 00:12:44,010
and there was nothing to do you can add

00:12:41,100 --> 00:12:45,300
more RAM so the fix here luckily since

00:12:44,010 --> 00:12:47,550
they were virtualized since they were on

00:12:45,300 --> 00:12:49,920
this platform I brought in a dual

00:12:47,550 --> 00:12:51,420
opteron box with 32 gigs of RAM I pulled

00:12:49,920 --> 00:12:53,490
the hard drives and the old one stuck it

00:12:51,420 --> 00:12:55,140
into the new wind booted it edited one

00:12:53,490 --> 00:12:57,840
text file so the nick would come back up

00:12:55,140 --> 00:13:00,240
and poof all done no restoration

00:12:57,840 --> 00:13:03,660
everything is just golden so strong

00:13:00,240 --> 00:13:06,660
hardware decoupling important how do we

00:13:03,660 --> 00:13:09,150
do all this so the actual virtualization

00:13:06,660 --> 00:13:10,800
part we it's built right into the Linux

00:13:09,150 --> 00:13:13,530
kernel we use the Linux kernel virtual

00:13:10,800 --> 00:13:16,270
machine I am a huge fan of caving

00:13:13,530 --> 00:13:18,490
there are a lot of urban legends rolling

00:13:16,270 --> 00:13:22,000
around about what kvm is or isn't or

00:13:18,490 --> 00:13:23,560
what sin is or isn't and the fact of the

00:13:22,000 --> 00:13:25,570
matter is that the the Linux kernel

00:13:23,560 --> 00:13:28,930
virtual machine although it's usually

00:13:25,570 --> 00:13:30,900
used running in a full Linux host OS in

00:13:28,930 --> 00:13:33,810
fact that's the way it runs in san toy

00:13:30,900 --> 00:13:37,450
performance bare metal type 0 hypervisor

00:13:33,810 --> 00:13:38,770
type 0 hypervisor does not actually mean

00:13:37,450 --> 00:13:40,480
that there's no host operating system

00:13:38,770 --> 00:13:42,490
that there's just this little itty-bitty

00:13:40,480 --> 00:13:45,760
hypervisor nothing else it's not what

00:13:42,490 --> 00:13:49,290
that means and kvm also comes with some

00:13:45,760 --> 00:13:54,750
very useful usage for managing BMS

00:13:49,290 --> 00:13:57,490
storage ZFS and really seriously at I

00:13:54,750 --> 00:14:00,130
don't know what I'd do if there wasn't

00:13:57,490 --> 00:14:02,350
ZFS that went away ZFS was complete

00:14:00,130 --> 00:14:05,560
magic to me when I first started using

00:14:02,350 --> 00:14:07,000
it six or seven years ago on bsd ZFS is

00:14:05,560 --> 00:14:09,790
what makes almost all of the really

00:14:07,000 --> 00:14:11,500
awesome features here possible the

00:14:09,790 --> 00:14:14,500
hourly rolling snapshots well those are

00:14:11,500 --> 00:14:16,540
ZFS snapshots the off-site replication

00:14:14,500 --> 00:14:18,730
well that's a ZFS replication although

00:14:16,540 --> 00:14:20,920
greatly simplified and what we've got

00:14:18,730 --> 00:14:23,080
here is an image I'm trying to sum up

00:14:20,920 --> 00:14:25,930
how awesome snapshots are and one single

00:14:23,080 --> 00:14:28,330
screenshot and if you can actually read

00:14:25,930 --> 00:14:30,370
it we're looking at a bun to file

00:14:28,330 --> 00:14:33,280
manager and we've got under the

00:14:30,370 --> 00:14:36,010
bookmarks we've got a bunch of snapshots

00:14:33,280 --> 00:14:38,290
on production and we have an SFTP link

00:14:36,010 --> 00:14:40,690
to a bunch of snapshots on the backup

00:14:38,290 --> 00:14:42,310
box and we look and it really kind of

00:14:40,690 --> 00:14:44,970
brings home what the snapshot really is

00:14:42,310 --> 00:14:48,250
we've got automatic snapshot from

00:14:44,970 --> 00:14:51,460
October 19th at 9am at ten a.m. at 11am

00:14:48,250 --> 00:14:52,900
at 12am and on down the line and inside

00:14:51,460 --> 00:14:54,400
each of those snapshots if you look at

00:14:52,900 --> 00:14:56,890
the contents there's a cute cow to file

00:14:54,400 --> 00:14:58,330
well that Q cow to file is the entire

00:14:56,890 --> 00:15:00,430
storage for that event to trustee

00:14:58,330 --> 00:15:01,960
virtual machine so that kind of sums up

00:15:00,430 --> 00:15:05,380
in one image that you are literally

00:15:01,960 --> 00:15:07,210
backing up everything every single hour

00:15:05,380 --> 00:15:09,520
and it's in two places at once which is

00:15:07,210 --> 00:15:11,230
awesome so you like either one of those

00:15:09,520 --> 00:15:13,390
machines on fire and it does not matter

00:15:11,230 --> 00:15:18,250
because you have everything on the other

00:15:13,390 --> 00:15:20,080
one so the best way to demonstrate all

00:15:18,250 --> 00:15:22,690
this is to murder something let's do

00:15:20,080 --> 00:15:24,920
that we're looking at the video here of

00:15:22,690 --> 00:15:27,380
a

00:15:24,920 --> 00:15:30,560
virtual machine a Windows Server 2012

00:15:27,380 --> 00:15:32,570
and we start out firing that sucker up

00:15:30,560 --> 00:15:33,680
and you can see it fired up pretty

00:15:32,570 --> 00:15:35,060
quickly just to demonstrate the

00:15:33,680 --> 00:15:38,240
performance is not an issue on this

00:15:35,060 --> 00:15:40,279
platform we've logged into it now we're

00:15:38,240 --> 00:15:41,690
about to restart it I don't actually

00:15:40,279 --> 00:15:43,070
really like to talk about performance

00:15:41,690 --> 00:15:44,600
because performance isn't really all

00:15:43,070 --> 00:15:47,000
that important although it grabs a lot

00:15:44,600 --> 00:15:49,250
of all I by balls and people might have

00:15:47,000 --> 00:15:50,779
questions about performance on commodity

00:15:49,250 --> 00:15:53,899
hardware we'll look at the windows

00:15:50,779 --> 00:15:55,610
server 2012 reboot and one and a half

00:15:53,899 --> 00:15:57,920
seconds later we've gone from desktop to

00:15:55,610 --> 00:15:59,449
desktop so there were any questions

00:15:57,920 --> 00:16:06,139
about performance let's just go ahead

00:15:59,449 --> 00:16:07,459
and put that to bed now all right I hate

00:16:06,139 --> 00:16:09,440
waiting on videos I like doing these

00:16:07,459 --> 00:16:11,570
damn it so I actually have demo hardware

00:16:09,440 --> 00:16:12,769
out out there at my vendor booth by the

00:16:11,570 --> 00:16:14,420
way so if anybody wants to see any this

00:16:12,769 --> 00:16:16,519
stuff in person on the real Hardware you

00:16:14,420 --> 00:16:17,899
can come by later for that what we're

00:16:16,519 --> 00:16:20,660
doing right now is we're actually

00:16:17,899 --> 00:16:28,250
overriding the storage for that Windows

00:16:20,660 --> 00:16:29,870
Server 2012 vm with zeros really what

00:16:28,250 --> 00:16:33,320
we're doing is watching me painfully try

00:16:29,870 --> 00:16:36,170
to remember the syntax for for DD & pv

00:16:33,320 --> 00:16:38,750
and yada yada etc and eventually i'll

00:16:36,170 --> 00:16:42,399
remember how to type this gets harder to

00:16:38,750 --> 00:16:44,839
watch every time i do this presentation

00:16:42,399 --> 00:16:46,699
the problem is though it's not as hard

00:16:44,839 --> 00:16:51,370
to watch is watching somebody depend on

00:16:46,699 --> 00:16:51,370
conference wireless to do a live demo so

00:16:56,980 --> 00:17:00,290
well technically we're living kind of

00:16:59,029 --> 00:17:02,930
dangerously right here because I'm

00:17:00,290 --> 00:17:05,110
overriding about 16 gigs worth of store

00:17:02,930 --> 00:17:07,189
or if zeros manually one by one and

00:17:05,110 --> 00:17:09,559
because i'm a smartass there's a clip

00:17:07,189 --> 00:17:11,809
from 2001 a Space Odyssey you don't

00:17:09,559 --> 00:17:13,939
remember that particular scene dave is

00:17:11,809 --> 00:17:16,520
pulling memory memory modules the owl

00:17:13,939 --> 00:17:21,890
the computer and asking how to sing to

00:17:16,520 --> 00:17:23,360
him while he does it now George yeah so

00:17:21,890 --> 00:17:24,740
it's going to take our VM a minute to

00:17:23,360 --> 00:17:26,419
realize that I've murdered it because

00:17:24,740 --> 00:17:27,829
although I've actually overwritten every

00:17:26,419 --> 00:17:30,080
single bite of its storage underneath of

00:17:27,829 --> 00:17:31,370
it a lot of its cached so it's going to

00:17:30,080 --> 00:17:33,380
take a second before it actually tries

00:17:31,370 --> 00:17:34,700
to access something that's not in ZFS is

00:17:33,380 --> 00:17:36,880
cash at which point it will promptly

00:17:34,700 --> 00:17:45,430
blue screen for us

00:17:36,880 --> 00:17:49,000
oh there goes yeah pretty much pretty

00:17:45,430 --> 00:17:50,380
much so the idea here really was just to

00:17:49,000 --> 00:17:52,390
demonstrate the fact that I mean we

00:17:50,380 --> 00:17:54,190
didn't just delete that file like we

00:17:52,390 --> 00:17:57,010
seriously over wrote that thing with

00:17:54,190 --> 00:17:59,200
zeros every single byte of data in that

00:17:57,010 --> 00:18:01,540
vm was manually overridden with zeros

00:17:59,200 --> 00:18:03,520
and the reason that we waited through

00:18:01,540 --> 00:18:05,500
that process was so that you could see

00:18:03,520 --> 00:18:08,140
that like seriously doing a rollback is

00:18:05,500 --> 00:18:11,020
no kidding instantaneous we just undid

00:18:08,140 --> 00:18:13,420
16 gigs worth of damage right there in

00:18:11,020 --> 00:18:18,490
that split second and we are firing our

00:18:13,420 --> 00:18:21,280
vm back up and we have unmerged it

00:18:18,490 --> 00:18:22,900
that's it now imagine instead of me

00:18:21,280 --> 00:18:24,640
doing some flashy trick up here and

00:18:22,900 --> 00:18:26,170
overriding it all the zeros imagine that

00:18:24,640 --> 00:18:28,210
one of your users click the wrong link

00:18:26,170 --> 00:18:30,040
and the wrong email and found a lovely

00:18:28,210 --> 00:18:31,870
little thing called crypto wall and by

00:18:30,040 --> 00:18:33,970
the time you get called half of your

00:18:31,870 --> 00:18:35,770
server you don't know which half has

00:18:33,970 --> 00:18:39,520
been encrypted with a key that you don't

00:18:35,770 --> 00:18:45,310
have this is your procedure rollback all

00:18:39,520 --> 00:18:48,400
done all right so replication

00:18:45,310 --> 00:18:49,930
replication is awesome one of the things

00:18:48,400 --> 00:18:51,640
that we have so we talked about the

00:18:49,930 --> 00:18:53,050
backup when we talk about the snapshots

00:18:51,640 --> 00:18:55,240
and we talked about all this good stuff

00:18:53,050 --> 00:18:58,030
but we haven't covered as you know what

00:18:55,240 --> 00:18:59,590
if the building burns down and a lot of

00:18:58,030 --> 00:19:01,030
organizations will talk about okay well

00:18:59,590 --> 00:19:03,730
it's just absolutely mandatory we've got

00:19:01,030 --> 00:19:05,140
to have off-site backup and that's about

00:19:03,730 --> 00:19:07,870
as far as that goes because it's just

00:19:05,140 --> 00:19:09,520
not really practical for them or maybe

00:19:07,870 --> 00:19:10,990
you know you do something we're like you

00:19:09,520 --> 00:19:12,580
need contract with Iron Mountain to come

00:19:10,990 --> 00:19:14,170
get tapes and mean of course you haven't

00:19:12,580 --> 00:19:18,130
verified the tapes and blah blah blah

00:19:14,170 --> 00:19:20,800
blah I like automated Network backup and

00:19:18,130 --> 00:19:22,510
that is what we're doing here so ZFS all

00:19:20,800 --> 00:19:23,980
by itself has the replication that you

00:19:22,510 --> 00:19:25,660
need the problem is that you pretty much

00:19:23,980 --> 00:19:28,000
need a master's degree to figure out how

00:19:25,660 --> 00:19:29,800
to use it so I wrote a tool called sing

00:19:28,000 --> 00:19:32,110
Coit to make it very very easy to

00:19:29,800 --> 00:19:34,330
replicate using ZFS is asynchronous

00:19:32,110 --> 00:19:37,690
incremental replication and what we're

00:19:34,330 --> 00:19:39,550
looking at is a demo here this is actual

00:19:37,690 --> 00:19:40,750
production data this is one of my

00:19:39,550 --> 00:19:43,210
favorite clients there a civil

00:19:40,750 --> 00:19:44,530
engineering firm they have as you can

00:19:43,210 --> 00:19:45,670
see there if you look they've got two

00:19:44,530 --> 00:19:48,520
and a half terabytes worth of data

00:19:45,670 --> 00:19:49,870
that's actually seven VMs five Linux and

00:19:48,520 --> 00:19:50,840
two windows with the two and a half

00:19:49,870 --> 00:19:53,090
terabytes data annum

00:19:50,840 --> 00:19:54,950
they have as at the top you see an eye

00:19:53,090 --> 00:19:58,790
perf command right there they have a

00:19:54,950 --> 00:20:01,340
whopping 1.15 megabits going off site to

00:19:58,790 --> 00:20:03,380
their dr so the next thing you see down

00:20:01,340 --> 00:20:06,110
there is me actually doing a replication

00:20:03,380 --> 00:20:08,420
from from on-site to off-site using the

00:20:06,110 --> 00:20:10,250
sink Lloyd command Singh coit rooted

00:20:08,420 --> 00:20:13,490
on-site images file server to backup

00:20:10,250 --> 00:20:17,210
file server and it took a whopping let's

00:20:13,490 --> 00:20:19,220
see here 13 minutes and 36 seconds which

00:20:17,210 --> 00:20:21,260
is about how long it usually takes so

00:20:19,220 --> 00:20:23,330
their off-site box is actually in the

00:20:21,260 --> 00:20:25,010
upstairs den of one of the owners tucked

00:20:23,330 --> 00:20:28,190
behind the TV where the kids won't see

00:20:25,010 --> 00:20:29,810
it and as you can see he did not go hog

00:20:28,190 --> 00:20:31,610
wild when he was purchasing his

00:20:29,810 --> 00:20:33,800
residential internet connection but

00:20:31,610 --> 00:20:37,510
that's okay two and a half terabytes of

00:20:33,800 --> 00:20:39,740
data every night in less than an hour

00:20:37,510 --> 00:20:42,200
all right so putting all this together

00:20:39,740 --> 00:20:43,640
talking about topology how do we do all

00:20:42,200 --> 00:20:44,960
this stuff you know what does it look

00:20:43,640 --> 00:20:52,640
like what kind of equipment do we put in

00:20:44,960 --> 00:20:55,970
place I'm sorry go ahead is that any

00:20:52,640 --> 00:20:57,260
better the problem is that sounds great

00:20:55,970 --> 00:20:58,910
here but i don't think i'm actually on

00:20:57,260 --> 00:21:02,480
the mic hardly at all i'm just super

00:20:58,910 --> 00:21:05,510
loud okay all right if you can't hear me

00:21:02,480 --> 00:21:07,340
on the internet i apologize so let's

00:21:05,510 --> 00:21:08,510
talk about actual topology you know what

00:21:07,340 --> 00:21:11,030
kind of equipment we actually put in

00:21:08,510 --> 00:21:12,230
place to make all this stuff happen on

00:21:11,030 --> 00:21:14,030
our production network we have a

00:21:12,230 --> 00:21:15,920
production host that runs all of our VMs

00:21:14,030 --> 00:21:17,420
itself containing the storage the

00:21:15,920 --> 00:21:20,570
hypervisor everything is all one box

00:21:17,420 --> 00:21:22,070
plug it in done no separate storage

00:21:20,570 --> 00:21:24,290
transport network needed or any of all

00:21:22,070 --> 00:21:25,910
that it's a box plug it in plug in your

00:21:24,290 --> 00:21:28,340
network plug in your power you're done

00:21:25,910 --> 00:21:30,080
with off-site you have another host

00:21:28,340 --> 00:21:32,350
ideally one that's identical to

00:21:30,080 --> 00:21:35,150
production host it doesn't have to be

00:21:32,350 --> 00:21:36,530
you can get crazy and decide that oh

00:21:35,150 --> 00:21:38,960
well I would have put in a slower cpu

00:21:36,530 --> 00:21:40,940
and less ram but more drives to keep

00:21:38,960 --> 00:21:42,970
more snapshots that can on the one you

00:21:40,940 --> 00:21:44,720
can do all that if you want to in

00:21:42,970 --> 00:21:45,980
practice you're usually probably

00:21:44,720 --> 00:21:47,720
screwing yourself if you try to get

00:21:45,980 --> 00:21:49,280
fancy like that it's a whole lot better

00:21:47,720 --> 00:21:52,370
idea to just get everything identical

00:21:49,280 --> 00:21:54,200
and be done with it so anyway but you're

00:21:52,370 --> 00:21:56,720
you're replicating from on-site to

00:21:54,200 --> 00:21:57,950
off-site daily possibly more depends on

00:21:56,720 --> 00:21:59,450
the bandwidth you have available in the

00:21:57,950 --> 00:22:02,180
amount of data you actually change every

00:21:59,450 --> 00:22:03,920
day pretty simple but it's not really my

00:22:02,180 --> 00:22:04,720
preferred topology that's like two

00:22:03,920 --> 00:22:08,440
thirds of it

00:22:04,720 --> 00:22:10,150
we can do better so here this is what I

00:22:08,440 --> 00:22:11,890
really like to do we've got production

00:22:10,150 --> 00:22:13,809
we've got a hot spare that's in the same

00:22:11,890 --> 00:22:16,000
site on the same network and we've got

00:22:13,809 --> 00:22:18,490
off site dr now why would we want to

00:22:16,000 --> 00:22:20,289
have an on-site hot spot a hot spare if

00:22:18,490 --> 00:22:22,360
we've got off site dr we've got

00:22:20,289 --> 00:22:24,580
snapshots so you know for anything

00:22:22,360 --> 00:22:26,020
that's just like the data got corrupt we

00:22:24,580 --> 00:22:28,390
can already roll back on the production

00:22:26,020 --> 00:22:30,309
host and undo the damage and we've got

00:22:28,390 --> 00:22:31,870
off site dr you know for in case you

00:22:30,309 --> 00:22:33,460
know the the whole building catches on

00:22:31,870 --> 00:22:35,320
fire or whatever what do we want an

00:22:33,460 --> 00:22:37,390
on-site hot spare for well the reason

00:22:35,320 --> 00:22:39,280
for that is let's say that you know one

00:22:37,390 --> 00:22:40,929
of my least favorite hardware failures

00:22:39,280 --> 00:22:42,909
is the motherboard getting lunched if

00:22:40,929 --> 00:22:45,909
the motherboard goes away on your

00:22:42,909 --> 00:22:48,159
production host everything's down um and

00:22:45,909 --> 00:22:49,360
then you get to figure out ok where am I

00:22:48,159 --> 00:22:50,740
going to source the replacement

00:22:49,360 --> 00:22:53,409
motherboard is it the motherboard or the

00:22:50,740 --> 00:22:55,330
cpu yada yada yada let me go run down to

00:22:53,409 --> 00:22:57,280
the store grab the stuff unplug

00:22:55,330 --> 00:22:58,840
everything I'm both everything put

00:22:57,280 --> 00:23:00,669
everything back in plug all the wires

00:22:58,840 --> 00:23:02,830
back in suck it all back up blah blah

00:23:00,669 --> 00:23:04,929
blah blah blah blah real world you've

00:23:02,830 --> 00:23:06,400
probably burned half a day and fixing

00:23:04,929 --> 00:23:08,860
that even if you jump on it right away

00:23:06,400 --> 00:23:11,590
like you are in the office right there

00:23:08,860 --> 00:23:13,510
on it in five minutes so in a 20-person

00:23:11,590 --> 00:23:16,780
firm if you're down for half a day you

00:23:13,510 --> 00:23:19,120
just blew a team an hour's if that's for

00:23:16,780 --> 00:23:21,549
example an engineering firm then you

00:23:19,120 --> 00:23:23,470
probably just blew you know many many

00:23:21,549 --> 00:23:25,960
thousands of dollars on those missing a

00:23:23,470 --> 00:23:28,240
team an hour's that stinks so instead

00:23:25,960 --> 00:23:29,530
you have your on-site hot spare well now

00:23:28,240 --> 00:23:31,929
you lose the motherboard in your

00:23:29,530 --> 00:23:33,669
production host you fire up your VMs

00:23:31,929 --> 00:23:36,190
from the most recent hourly replication

00:23:33,669 --> 00:23:38,440
on your hot spare your absolute worst

00:23:36,190 --> 00:23:40,270
case scenario is you have to recreate 59

00:23:38,440 --> 00:23:42,820
minutes worth of work so that's you know

00:23:40,270 --> 00:23:44,110
one hour times however many men you get

00:23:42,820 --> 00:23:46,230
but it's still going to be a quarter

00:23:44,110 --> 00:23:48,400
should say how many staff you've got um

00:23:46,230 --> 00:23:49,480
but that's still you know a quarter of

00:23:48,400 --> 00:23:50,830
the damage that you would have done

00:23:49,480 --> 00:23:52,510
actually trying to replace that

00:23:50,830 --> 00:23:55,000
motherboard live everybody's down while

00:23:52,510 --> 00:23:56,860
the wait um more likely you're going to

00:23:55,000 --> 00:23:59,020
have less than a half an hour you know

00:23:56,860 --> 00:24:00,760
so obviously averages out like a half an

00:23:59,020 --> 00:24:02,260
hour so you figure gonna be you know

00:24:00,760 --> 00:24:04,270
half times twenty you're gonna be down

00:24:02,260 --> 00:24:06,760
for 10 min hours instead of 80 it's a

00:24:04,270 --> 00:24:08,080
huge win and a huge one about that is

00:24:06,760 --> 00:24:10,240
let's say that you're oh I don't know

00:24:08,080 --> 00:24:11,679
maybe you're itself in another state

00:24:10,240 --> 00:24:14,049
doing a presentation up on the podium

00:24:11,679 --> 00:24:16,000
and you get a call holy crap servers

00:24:14,049 --> 00:24:17,649
down and you see oh man the production

00:24:16,000 --> 00:24:18,490
host is gone turn it off from the back

00:24:17,649 --> 00:24:19,750
on that didn't work

00:24:18,490 --> 00:24:22,780
crap what do you do with you got a hot

00:24:19,750 --> 00:24:24,850
spare I can shell in from my phone and

00:24:22,780 --> 00:24:26,020
do verse start on each one of those VMs

00:24:24,850 --> 00:24:28,179
on the hot spare it's up and running

00:24:26,020 --> 00:24:30,610
it's on the same collision domain same

00:24:28,179 --> 00:24:32,050
broadcast domain so it's just up all the

00:24:30,610 --> 00:24:33,150
same IP addresses all the same

00:24:32,050 --> 00:24:35,530
everything from the users perspective

00:24:33,150 --> 00:24:36,880
they're just up and running it works you

00:24:35,530 --> 00:24:38,500
did in five minutes didn't have to drive

00:24:36,880 --> 00:24:40,179
anywhere everybody loves you it's great

00:24:38,500 --> 00:24:43,030
and you can go back to doing what you're

00:24:40,179 --> 00:24:46,750
trying to do not you know drive off to

00:24:43,030 --> 00:24:48,850
go save the day so if you're a Latin

00:24:46,750 --> 00:24:50,920
geek I probably got the grammar

00:24:48,850 --> 00:24:56,110
completely wrong on that but that should

00:24:50,920 --> 00:24:58,090
be who watches the Watchers right right

00:24:56,110 --> 00:25:00,640
so that should be who watches the

00:24:58,090 --> 00:25:02,860
Watchers and the answer is not gifts and

00:25:00,640 --> 00:25:04,540
we use openvpn for an activity and

00:25:02,860 --> 00:25:06,429
nagios actually watches all this stuff

00:25:04,540 --> 00:25:07,960
so I mentioned before my experience with

00:25:06,429 --> 00:25:09,580
backups has usually been that you know

00:25:07,960 --> 00:25:11,860
we waive chicken feathers every day or

00:25:09,580 --> 00:25:13,240
maybe we don't we forget to but we at

00:25:11,860 --> 00:25:14,590
least plan to waive chicken feather the

00:25:13,240 --> 00:25:15,550
feathers every day you don't really know

00:25:14,590 --> 00:25:18,100
if anything's going to be any good until

00:25:15,550 --> 00:25:19,120
you need it and so then you sweat for a

00:25:18,100 --> 00:25:20,830
few hours while you try to do your

00:25:19,120 --> 00:25:22,300
poorly documented restore procedure and

00:25:20,830 --> 00:25:25,690
hope at the end of the day that you have

00:25:22,300 --> 00:25:27,130
what you need it screw all that so we

00:25:25,690 --> 00:25:28,929
already know that our procedure is a lot

00:25:27,130 --> 00:25:30,820
simpler than that right it's easier to

00:25:28,929 --> 00:25:31,990
implement we know that it just happens

00:25:30,820 --> 00:25:33,309
automatically over the network every

00:25:31,990 --> 00:25:36,360
night and it's everything and yada yada

00:25:33,309 --> 00:25:38,679
yada but i don't know maybe uh maybe

00:25:36,360 --> 00:25:40,600
your isp i won't name any names but

00:25:38,679 --> 00:25:43,690
maybe your isp that goes in between your

00:25:40,600 --> 00:25:45,940
on-site your offsite maybe it goes down

00:25:43,690 --> 00:25:47,980
every night for like you know half an

00:25:45,940 --> 00:25:49,929
hour in between midnight and one o'clock

00:25:47,980 --> 00:25:51,640
and that's enough to disrupt your

00:25:49,929 --> 00:25:54,429
replication job every night which is

00:25:51,640 --> 00:25:56,080
supposed to happen at 1am and so you're

00:25:54,429 --> 00:25:57,610
not getting replication maybe that

00:25:56,080 --> 00:25:59,620
happens every single night and you know

00:25:57,610 --> 00:26:01,059
like six weeks go by and you haven't had

00:25:59,620 --> 00:26:03,040
off-site replication and in the building

00:26:01,059 --> 00:26:04,960
burns down you're screwed right well no

00:26:03,040 --> 00:26:06,130
that's what nagios is for because not

00:26:04,960 --> 00:26:07,510
yes you see we've got to plug in there

00:26:06,130 --> 00:26:11,380
this is Samuel I'd check snapshot

00:26:07,510 --> 00:26:14,559
freshness if you have it if your newest

00:26:11,380 --> 00:26:16,210
daily snapshot off site is not under 28

00:26:14,559 --> 00:26:18,610
hours old you're going to get a warning

00:26:16,210 --> 00:26:20,350
if it's not under two days old you're

00:26:18,610 --> 00:26:22,929
going to get a crit if you're a smart

00:26:20,350 --> 00:26:25,900
person when you get a credit your phone

00:26:22,929 --> 00:26:27,910
is going to start going in your pocket

00:26:25,900 --> 00:26:29,380
so the minute you aren't getting your

00:26:27,910 --> 00:26:31,600
backups you're going to know about it

00:26:29,380 --> 00:26:32,380
you're going to fix it right then nagios

00:26:31,600 --> 00:26:34,030
has your back

00:26:32,380 --> 00:26:35,920
so instead of finding out when you need

00:26:34,030 --> 00:26:38,380
it and you don't got it you find out as

00:26:35,920 --> 00:26:39,640
soon as it stops happening similarly

00:26:38,380 --> 00:26:42,070
underneath that you'll see we've got to

00:26:39,640 --> 00:26:44,340
plug in San ohx torch pool health you

00:26:42,070 --> 00:26:47,620
throw a disc out of your redundant array

00:26:44,340 --> 00:26:49,120
just time to go fix it now not when the

00:26:47,620 --> 00:26:52,240
second disk fails and you actually have

00:26:49,120 --> 00:26:54,550
a problem another cool thing about this

00:26:52,240 --> 00:26:56,440
you know I mentioned openvpn if you

00:26:54,550 --> 00:26:59,380
notice the host name on here demo back

00:26:56,440 --> 00:27:01,330
up VPN so obviously you know that's a

00:26:59,380 --> 00:27:04,360
private that's private domain name

00:27:01,330 --> 00:27:07,690
private TLD VPN it's not publicly

00:27:04,360 --> 00:27:10,180
resolvable however that is a true actual

00:27:07,690 --> 00:27:12,490
resolvable I have a zone for that if I

00:27:10,180 --> 00:27:14,620
want to ssh to demo dot back up that VPN

00:27:12,490 --> 00:27:17,200
and I'm on my monitoring network that

00:27:14,620 --> 00:27:19,720
resolves and i go there i also have all

00:27:17,200 --> 00:27:20,770
my guests to find the same way so at the

00:27:19,720 --> 00:27:23,490
end of the day rather than having to

00:27:20,770 --> 00:27:27,010
remember okay well it's like 1038 that

00:27:23,490 --> 00:27:29,800
142 no no you have all you have like

00:27:27,010 --> 00:27:31,210
company name dot machine named VPN and

00:27:29,800 --> 00:27:33,190
it's resolvable for your monitoring

00:27:31,210 --> 00:27:34,810
network even if all these various

00:27:33,190 --> 00:27:36,310
machines are all over town or all over

00:27:34,810 --> 00:27:38,770
the world as long as you're connected

00:27:36,310 --> 00:27:40,930
you're monitoring network boom shell in

00:27:38,770 --> 00:27:51,670
our DPN whatever you need to do give a

00:27:40,930 --> 00:27:54,070
question so actually um your check

00:27:51,670 --> 00:27:56,020
storage pool health right there every

00:27:54,070 --> 00:27:58,750
single block on a ZFS filesystem is

00:27:56,020 --> 00:28:00,640
checksums on every single block at the

00:27:58,750 --> 00:28:03,340
block level is check summed every time

00:28:00,640 --> 00:28:06,130
you touch a block it's it's validated

00:28:03,340 --> 00:28:08,070
versus that check sum one answer to your

00:28:06,130 --> 00:28:10,470
question right there is you should have

00:28:08,070 --> 00:28:13,510
you should have frequent scrubs

00:28:10,470 --> 00:28:14,620
scheduled a ZFS scrub literally just

00:28:13,510 --> 00:28:17,140
goes through and checks all the blocks

00:28:14,620 --> 00:28:19,030
versus the the check sums and if

00:28:17,140 --> 00:28:21,490
anything doesn't match then it rebuilds

00:28:19,030 --> 00:28:24,430
it from parody or redundancy also any

00:28:21,490 --> 00:28:26,350
time you read it for any reason every

00:28:24,430 --> 00:28:33,220
single time you touch any block it's

00:28:26,350 --> 00:28:35,710
validated and unusually for me I think

00:28:33,220 --> 00:28:38,950
we actually got through with time to

00:28:35,710 --> 00:28:41,020
spare we got through with a lot of time

00:28:38,950 --> 00:28:43,300
to spare we have lots time for questions

00:28:41,020 --> 00:28:44,620
so either I'm walking off the stage

00:28:43,300 --> 00:28:47,100
looking like a scrub or you guys are

00:28:44,620 --> 00:28:47,100
talking to me

00:28:51,230 --> 00:28:58,100
so wow that really didn't like being

00:28:55,950 --> 00:29:00,840
placed next to my phone in my pocket

00:28:58,100 --> 00:29:04,680
okay so basically the the answer for

00:29:00,840 --> 00:29:06,180
that is if you're a my platform itself

00:29:04,680 --> 00:29:08,040
will let you do anything you want to do

00:29:06,180 --> 00:29:10,110
it's commodity hardware now what you

00:29:08,040 --> 00:29:13,290
should not do is you should not use like

00:29:10,110 --> 00:29:14,910
a what you'll typically find and like

00:29:13,290 --> 00:29:20,160
you know Dell or lenovo or whatever

00:29:14,910 --> 00:29:22,430
small business servers gotcha I'm sorry

00:29:20,160 --> 00:29:25,350
so the question was what kind of storage

00:29:22,430 --> 00:29:28,530
adapters adapters am i using in front of

00:29:25,350 --> 00:29:29,820
the disks and the answer is one that

00:29:28,530 --> 00:29:31,500
it's your box it's come out of hardware

00:29:29,820 --> 00:29:33,030
you do whatever you want the second

00:29:31,500 --> 00:29:36,030
answer is what you should not use is you

00:29:33,030 --> 00:29:38,100
should not use cheap rate adapters or

00:29:36,030 --> 00:29:40,320
idea you don't want hardware right at

00:29:38,100 --> 00:29:42,300
all you really just want simple storage

00:29:40,320 --> 00:29:45,510
adapters the SATA ports that come on

00:29:42,300 --> 00:29:47,880
your motherboard awesome cheap host

00:29:45,510 --> 00:29:50,520
adapters that are better j-bot mode or

00:29:47,880 --> 00:29:52,410
IT mode awesome what you don't want to

00:29:50,520 --> 00:29:54,060
do is do like oh I have this you know

00:29:52,410 --> 00:29:56,040
super awesome like hardware RAID

00:29:54,060 --> 00:29:57,750
controller I'll do raid 6 on that

00:29:56,040 --> 00:30:01,800
hardware and then i'll do the FS on top

00:29:57,750 --> 00:30:04,050
of that I mean you can do it but do

00:30:01,800 --> 00:30:06,120
don't do that ZFS is better if you do

00:30:04,050 --> 00:30:07,710
that ZFS can't guarantee integrity

00:30:06,120 --> 00:30:10,080
because although it will still check

00:30:07,710 --> 00:30:11,700
some every block it can't compare it

00:30:10,080 --> 00:30:13,320
versus other discs because it's not

00:30:11,700 --> 00:30:14,940
managing the array your hardware RAID

00:30:13,320 --> 00:30:16,560
controller as in your hardware RAID

00:30:14,940 --> 00:30:20,520
controller will cheerfully feed you bad

00:30:16,560 --> 00:30:27,960
copies of data so that answer your

00:30:20,520 --> 00:30:30,540
question cool so my favorite topology is

00:30:27,960 --> 00:30:32,640
a pool of mirrors yeah the question was

00:30:30,540 --> 00:30:35,250
what kind of storage topology am I using

00:30:32,640 --> 00:30:38,880
am I using raids II am I using mirrors

00:30:35,250 --> 00:30:40,800
what so ZFS the way ZFS storage in

00:30:38,880 --> 00:30:43,800
general works is you have towards pull

00:30:40,800 --> 00:30:46,140
your storage pool contains V devs which

00:30:43,800 --> 00:30:48,480
is short for virtual devices aveda of

00:30:46,140 --> 00:30:52,230
can be anything from a single disk to a

00:30:48,480 --> 00:30:55,380
mirror 2-way 3-way 4-way etc to an

00:30:52,230 --> 00:30:57,710
entire stripe with uh with the single

00:30:55,380 --> 00:30:59,220
disk to disk or three disc parity levels

00:30:57,710 --> 00:31:00,870
you can do

00:30:59,220 --> 00:31:03,270
any of those things my personal

00:31:00,870 --> 00:31:05,220
preference is for a pool of mirrors a

00:31:03,270 --> 00:31:07,770
pool of mirrors is kind of like a RAID

00:31:05,220 --> 00:31:09,419
10 for you old-school storage guys but

00:31:07,770 --> 00:31:11,429
the difference is that the rights are

00:31:09,419 --> 00:31:13,650
distributed across your pool of mirrors

00:31:11,429 --> 00:31:15,480
they're not striped across it which is

00:31:13,650 --> 00:31:17,309
much much better because that means that

00:31:15,480 --> 00:31:19,080
a single read isn't going to hammer

00:31:17,309 --> 00:31:21,000
every disc in your entire array to fetch

00:31:19,080 --> 00:31:23,490
a single block it will only hit the

00:31:21,000 --> 00:31:26,340
mirror that that block is on your

00:31:23,490 --> 00:31:28,710
rebuilds are way faster your eye ops

00:31:26,340 --> 00:31:31,530
threshold is much higher for pool of

00:31:28,710 --> 00:31:34,169
mirrors than it is for stripe in general

00:31:31,530 --> 00:31:36,480
what you want is you want as many videos

00:31:34,169 --> 00:31:49,860
as possible and still achieve your Perry

00:31:36,480 --> 00:31:51,900
goals correct the the not Gio's plugins

00:31:49,860 --> 00:31:54,419
that I wrote they're just there Perl

00:31:51,900 --> 00:31:56,760
code and they exit 0 1 or 2 to say okay

00:31:54,419 --> 00:32:14,909
Warner crit does that answer your

00:31:56,760 --> 00:32:17,130
question fair enough sure so the the

00:32:14,909 --> 00:32:18,720
open source part is everything there is

00:32:17,130 --> 00:32:22,080
no proprietary code involved in this at

00:32:18,720 --> 00:32:24,210
all period are nine if your goal in life

00:32:22,080 --> 00:32:26,070
is just to go grab the code and download

00:32:24,210 --> 00:32:27,720
it and install it and put it together to

00:32:26,070 --> 00:32:30,210
your liking and run it and you build a

00:32:27,720 --> 00:32:33,059
hardware and you manage everything you

00:32:30,210 --> 00:32:35,130
are welcome to that I am a big believer

00:32:33,059 --> 00:32:36,780
in the concept that your customers are

00:32:35,130 --> 00:32:39,150
people who want to do business with you

00:32:36,780 --> 00:32:41,669
and find value and giving you money in

00:32:39,150 --> 00:32:43,830
exchange for goods and services so the

00:32:41,669 --> 00:32:45,720
the business part of it for me is there

00:32:43,830 --> 00:32:47,429
are a lot of folks who don't want to

00:32:45,720 --> 00:32:48,390
manage all that themselves they don't

00:32:47,429 --> 00:32:50,490
want to have to make those decisions

00:32:48,390 --> 00:32:52,020
they want to leverage the fact that I've

00:32:50,490 --> 00:32:53,309
literally been doing this for six years

00:32:52,020 --> 00:32:55,890
longer than anybody else on the planet

00:32:53,309 --> 00:32:58,320
since it's my platform and get vendor

00:32:55,890 --> 00:32:59,909
certified hardware gets support get

00:32:58,320 --> 00:33:02,549
monitoring all built in at a decent

00:32:59,909 --> 00:33:04,559
price point um if that's you you are my

00:33:02,549 --> 00:33:05,909
potential customer if you're like I

00:33:04,559 --> 00:33:07,080
don't want to give that guy money for

00:33:05,909 --> 00:33:08,700
all that stuff I just want to do the

00:33:07,080 --> 00:33:11,149
thing do the thing you're your own

00:33:08,700 --> 00:33:11,149
customer

00:33:19,460 --> 00:33:24,779
that is different for every application

00:33:22,020 --> 00:33:26,700
my personal preference is it okay is

00:33:24,779 --> 00:33:29,399
there a sweet spot for solid-state

00:33:26,700 --> 00:33:30,659
storage versus rust and the answer for

00:33:29,399 --> 00:33:33,929
that is it's different for every

00:33:30,659 --> 00:33:35,460
application if you can afford to all of

00:33:33,929 --> 00:33:36,539
your storage should be solid state which

00:33:35,460 --> 00:33:39,179
really doesn't have anything to do this

00:33:36,539 --> 00:33:41,130
platform that's just a fact if you have

00:33:39,179 --> 00:33:43,590
a few hundred gigabytes of data and it's

00:33:41,130 --> 00:33:45,960
on rust you're doing it wrong stop that

00:33:43,590 --> 00:33:47,610
go by solid-state drives on the other

00:33:45,960 --> 00:33:49,200
hand if you have 96 terabytes of data

00:33:47,610 --> 00:33:51,990
and you're not made of money you're

00:33:49,200 --> 00:33:54,779
probably going to need some rust in that

00:33:51,990 --> 00:33:56,610
case usually my answer for that is going

00:33:54,779 --> 00:33:58,529
to be to have mccools you have solid

00:33:56,610 --> 00:34:00,059
state and you have a rust pool put your

00:33:58,529 --> 00:34:02,220
boot disks on solid state put your

00:34:00,059 --> 00:34:39,480
databases on solid state and your bulk

00:34:02,220 --> 00:34:40,950
storage should go on the rust let me let

00:34:39,480 --> 00:34:43,109
me let me take over for you real quick

00:34:40,950 --> 00:34:45,960
on that one if you want to do like an

00:34:43,109 --> 00:34:47,669
actual tiered storage kind of a thing so

00:34:45,960 --> 00:34:48,960
ZFS has built in something called the

00:34:47,669 --> 00:34:50,849
art which stands for adaptive

00:34:48,960 --> 00:34:52,950
replacement cash which is a very

00:34:50,849 --> 00:34:55,679
advanced caching mechanism much more so

00:34:52,950 --> 00:34:58,589
than linux kernel's io cash or windows I

00:34:55,679 --> 00:35:00,599
o cash both of those are FIFO first in

00:34:58,589 --> 00:35:02,490
first out so if you read 10 gigs of data

00:35:00,599 --> 00:35:04,890
and then you hit that 10 gigs of data in

00:35:02,490 --> 00:35:06,930
your cash 500 times in 5 minutes and

00:35:04,890 --> 00:35:08,880
then you read 10 new gigs of data it

00:35:06,930 --> 00:35:10,230
will push that first 10 gigs out you got

00:35:08,880 --> 00:35:11,670
to breathe it all again from the

00:35:10,230 --> 00:35:13,890
platters as soon as you want to access

00:35:11,670 --> 00:35:16,170
again because it's just by fo the arc is

00:35:13,890 --> 00:35:17,849
not FIFO the arc waits the blocks in the

00:35:16,170 --> 00:35:19,800
cache by how many times they've been hit

00:35:17,849 --> 00:35:21,210
so if you read a block and it's in cash

00:35:19,800 --> 00:35:23,760
but you never asked for it again it's

00:35:21,210 --> 00:35:25,680
the first one to go that already

00:35:23,760 --> 00:35:27,360
is super duper awesome and is a lot of

00:35:25,680 --> 00:35:30,590
the reason why we see things like 1.5

00:35:27,360 --> 00:35:32,910
second reboots on server 2012 r2 VMs

00:35:30,590 --> 00:35:35,220
while that demo was done on solid-state

00:35:32,910 --> 00:35:37,200
honestly it would look just as fast on

00:35:35,220 --> 00:35:38,940
rust because really it wasn't that fast

00:35:37,200 --> 00:35:40,590
because solid-state it was that fast

00:35:38,940 --> 00:35:43,500
because every single block of that was

00:35:40,590 --> 00:35:44,760
coming out of cash now if you're I'm at

00:35:43,500 --> 00:35:47,970
the amount of RAM you have available to

00:35:44,760 --> 00:35:50,070
you isn't sufficient in your opinion you

00:35:47,970 --> 00:35:52,380
can do something called an l2 Ark that's

00:35:50,070 --> 00:35:55,050
level to adaptive replacement cash which

00:35:52,380 --> 00:35:57,750
will build more cash on to a solid-state

00:35:55,050 --> 00:36:00,300
here however that is very much a

00:35:57,750 --> 00:36:02,910
specialty topology don't get crazy with

00:36:00,300 --> 00:36:04,920
that it usually isn't what you want you

00:36:02,910 --> 00:36:06,810
need a lot more RAM to actually index

00:36:04,920 --> 00:36:09,210
and manage the l2 arc but then isn't

00:36:06,810 --> 00:36:10,620
available for the real art and you're

00:36:09,210 --> 00:36:12,150
usually much better off doing I was

00:36:10,620 --> 00:36:14,610
talking about and split up your storage

00:36:12,150 --> 00:36:16,830
in multiple pools do your high I up

00:36:14,610 --> 00:36:19,620
stuff on a solid-state pool your low I

00:36:16,830 --> 00:36:21,630
ops bulk stuff on a rust pool there is

00:36:19,620 --> 00:36:25,560
also there's something called the slog

00:36:21,630 --> 00:36:27,630
which is so there's the zs intent log

00:36:25,560 --> 00:36:30,240
which is in RAM much like the Ark is and

00:36:27,630 --> 00:36:32,610
that's a right cash you can do a slog

00:36:30,240 --> 00:36:34,350
which is a separate log device which

00:36:32,610 --> 00:36:36,530
also can be solid state and you can

00:36:34,350 --> 00:36:39,000
buffer your rights to a slog again if

00:36:36,530 --> 00:36:41,100
you have a really special tea

00:36:39,000 --> 00:36:44,220
application that can do good stuff for

00:36:41,100 --> 00:36:46,920
you in practice 99.999 percent of the

00:36:44,220 --> 00:36:52,490
time it's a boondoggle don't bother keep

00:36:46,920 --> 00:36:52,490
it simple anybody else yes sir

00:37:13,619 --> 00:37:20,319
okay so the question is is it are we

00:37:17,109 --> 00:37:21,880
managing or managing compute intense

00:37:20,319 --> 00:37:24,069
workloads versus storage in tents

00:37:21,880 --> 00:37:28,270
workloads versus memory intense

00:37:24,069 --> 00:37:30,910
workloads and the answer to that is well

00:37:28,270 --> 00:37:34,150
too to paraphrase the the late Steve

00:37:30,910 --> 00:37:36,640
Jobs managed differently scaled

00:37:34,150 --> 00:37:37,869
differently the idea here is that rather

00:37:36,640 --> 00:37:39,520
than you know your traditional

00:37:37,869 --> 00:37:41,890
enterprise virtualization stack you have

00:37:39,520 --> 00:37:45,040
an extremely tall storage silo you have

00:37:41,890 --> 00:37:46,480
an extremely tall compute silo and you

00:37:45,040 --> 00:37:48,069
try to just kind of cram everything on

00:37:46,480 --> 00:37:50,170
there and then you don't have policies

00:37:48,069 --> 00:37:52,359
to manage them all differently the way

00:37:50,170 --> 00:37:53,619
that you scale with this platform is you

00:37:52,359 --> 00:37:55,660
just you're never going to have more

00:37:53,619 --> 00:37:57,309
than 10 or 20 bm's per box typically and

00:37:55,660 --> 00:37:59,349
that's a good thing you could in theory

00:37:57,309 --> 00:38:00,970
build a really crazy box that would run

00:37:59,349 --> 00:38:02,589
more things than that but you're

00:38:00,970 --> 00:38:04,990
probably doing it wrong the way that you

00:38:02,589 --> 00:38:07,660
scale is you just stack more things on

00:38:04,990 --> 00:38:09,609
top so in general if you have some

00:38:07,660 --> 00:38:12,130
storage intent stuff and some ramen tent

00:38:09,609 --> 00:38:13,420
stuff and some compute intense stuff you

00:38:12,130 --> 00:38:15,339
put them on different hosts and you

00:38:13,420 --> 00:38:16,569
manage those hosts differently I'm you

00:38:15,339 --> 00:38:18,400
treat the whole thing as a building

00:38:16,569 --> 00:38:20,530
block if you buy into my three way to

00:38:18,400 --> 00:38:22,299
pology where you've got an on-site

00:38:20,530 --> 00:38:24,790
production and on-site hot spare an

00:38:22,299 --> 00:38:26,200
off-site PR well that's three boxes that

00:38:24,790 --> 00:38:28,180
are a unit that's all your replication

00:38:26,200 --> 00:38:30,549
that's all your hypervisor that's all

00:38:28,180 --> 00:38:32,230
your storage in one unit you throw some

00:38:30,549 --> 00:38:34,630
VMS on there they're managed like that

00:38:32,230 --> 00:38:36,280
if you need more VMs then you get

00:38:34,630 --> 00:38:38,319
another bunch of three and you put your

00:38:36,280 --> 00:38:40,750
more VMs on those and you manage those

00:38:38,319 --> 00:38:42,790
however you need to kind of building on

00:38:40,750 --> 00:38:44,140
that I frequently get the question okay

00:38:42,790 --> 00:38:46,059
well that's great for small business but

00:38:44,140 --> 00:38:47,440
how does it scale I work in a data

00:38:46,059 --> 00:38:49,660
center you know what if I want to manage

00:38:47,440 --> 00:38:51,549
hundreds or even thousands of VMs and

00:38:49,660 --> 00:38:53,049
the answer is well how do you do it now

00:38:51,549 --> 00:38:54,880
which the answer to that is usually

00:38:53,049 --> 00:38:56,680
CloudStack or OpenStack or you know

00:38:54,880 --> 00:38:58,150
whatever maybe I deploy with solder and

00:38:56,680 --> 00:39:00,520
sabor chef or puppet or blah blah blah

00:38:58,150 --> 00:39:02,079
blah blah don't change any of that you

00:39:00,520 --> 00:39:04,480
already know how you manage hundreds of

00:39:02,079 --> 00:39:06,849
VMs or thousands of VMs keep doing that

00:39:04,480 --> 00:39:08,920
you put this stuff underneath it and it

00:39:06,849 --> 00:39:11,260
gives you the replication part and the

00:39:08,920 --> 00:39:13,299
snapshot part that you very likely don't

00:39:11,260 --> 00:39:14,859
have on the underlying hosts that you're

00:39:13,299 --> 00:39:17,140
using underneath your stack management

00:39:14,859 --> 00:39:19,540
software right now this is actually a

00:39:17,140 --> 00:39:21,970
pretty hot topic not with my platforms

00:39:19,540 --> 00:39:23,950
typically but if you want to geek out on

00:39:21,970 --> 00:39:25,780
all this stuff the Lex said the industry

00:39:23,950 --> 00:39:28,120
buzz word is hyper converged

00:39:25,780 --> 00:39:29,770
infrastructure um a little bit of

00:39:28,120 --> 00:39:31,540
history on that converged infrastructure

00:39:29,770 --> 00:39:33,160
you would think would be fine why do we

00:39:31,540 --> 00:39:34,840
need to throw hyper in there that's

00:39:33,160 --> 00:39:37,270
because some vendors started selling

00:39:34,840 --> 00:39:39,580
hitachi sands and 10 gig fiber switches

00:39:37,270 --> 00:39:41,530
and blah blah and whatever just selling

00:39:39,580 --> 00:39:43,120
it all on one invoice and calling that

00:39:41,530 --> 00:39:44,920
converged infrastructure even it was the

00:39:43,120 --> 00:39:46,450
same old crap so now i say a hyper

00:39:44,920 --> 00:39:48,330
converts to let you know no no no we're

00:39:46,450 --> 00:39:50,980
actually condensing this onto a single

00:39:48,330 --> 00:39:52,180
self-contained box the big player in

00:39:50,980 --> 00:39:54,850
this space is an outfit called

00:39:52,180 --> 00:39:56,530
simplicity and they basically do the

00:39:54,850 --> 00:39:58,330
same thing that we just looked at but

00:39:56,530 --> 00:40:00,070
every single bit evidence proprietary

00:39:58,330 --> 00:40:01,660
and pretty high dollar and they're

00:40:00,070 --> 00:40:03,190
they're not focusing on small business

00:40:01,660 --> 00:40:05,650
they are focusing on the data center and

00:40:03,190 --> 00:40:08,110
the big pitch is just like what I said

00:40:05,650 --> 00:40:10,120
you scale by just adding more boxes and

00:40:08,110 --> 00:40:12,460
putting stuff on the more boxes which is

00:40:10,120 --> 00:40:14,470
much simpler to manage and also you're

00:40:12,460 --> 00:40:16,960
very much compartmentalizing the damage

00:40:14,470 --> 00:40:18,370
that a rock vm can do yeah if you have

00:40:16,960 --> 00:40:19,780
the traditional really tall storage

00:40:18,370 --> 00:40:21,820
stack and compute stack and whatever

00:40:19,780 --> 00:40:23,650
okay well I set policies to limit the I

00:40:21,820 --> 00:40:26,740
ops from this VM or that vm or whatever

00:40:23,650 --> 00:40:28,900
but you still got one big complex web of

00:40:26,740 --> 00:40:30,340
crap that can go south on you whereas if

00:40:28,900 --> 00:40:33,430
you've got all these self-contained

00:40:30,340 --> 00:40:35,470
boxes with ten beams or 20 VMs apiece on

00:40:33,430 --> 00:40:37,390
them you've limited your damage if a

00:40:35,470 --> 00:40:38,710
rogue vm starts really thrashing your

00:40:37,390 --> 00:40:40,990
eye ops and does it in a way that you

00:40:38,710 --> 00:40:42,190
haven't maybe you didn't see a way

00:40:40,990 --> 00:40:43,690
through to limiting that I have because

00:40:42,190 --> 00:40:44,950
I mean you can still manage that kind of

00:40:43,690 --> 00:40:47,410
stuff with you know the tools built into

00:40:44,950 --> 00:40:48,670
the kernel but if you didn't do that in

00:40:47,410 --> 00:40:50,410
every way that you might have needed to

00:40:48,670 --> 00:40:52,330
to contain the one person who did a

00:40:50,410 --> 00:40:54,460
really stupid thing it's only going to

00:40:52,330 --> 00:40:58,410
impact those other VMS on that one box

00:40:54,460 --> 00:40:58,410
not your whole data center

00:41:18,720 --> 00:41:22,930
gentleman said he believes that cisco

00:41:21,010 --> 00:41:25,060
ucs is the biggest player in hyper

00:41:22,930 --> 00:41:27,310
converged infrastructure what you just

00:41:25,060 --> 00:41:29,080
described is actually the old converged

00:41:27,310 --> 00:41:31,360
infrastructure or basically one vendor

00:41:29,080 --> 00:41:33,580
sells you all the crap in one um it's

00:41:31,360 --> 00:41:35,500
not hyper converged because it's it's

00:41:33,580 --> 00:41:37,540
not individual self-contained small

00:41:35,500 --> 00:41:39,370
scale things like this it is the old

00:41:37,540 --> 00:41:41,320
school like we have a whole rack full of

00:41:39,370 --> 00:41:43,600
crap and lots of stuff depending on a

00:41:41,320 --> 00:41:45,490
fairly tall silo that's converged

00:41:43,600 --> 00:41:47,350
infrastructure it's being sold as one

00:41:45,490 --> 00:41:48,670
piece but you still got a pretty tall

00:41:47,350 --> 00:41:50,410
silo and you've got a fair amount of

00:41:48,670 --> 00:41:52,000
complexity managing all of it even

00:41:50,410 --> 00:41:54,670
though it's sold as one piece and it's

00:41:52,000 --> 00:41:55,860
maybe in one rack it's not down to what

00:41:54,670 --> 00:41:58,690
we're talking about which is just

00:41:55,860 --> 00:42:00,510
self-contained individual boxes that buy

00:41:58,690 --> 00:42:04,000
more boxes and that's all there is to it

00:42:00,510 --> 00:42:06,840
it's a I'll grant it's it's it's a it's

00:42:04,000 --> 00:42:10,870
a little bit of a fine distinction but

00:42:06,840 --> 00:42:13,090
if you if you actually go looking at you

00:42:10,870 --> 00:42:14,350
know the VC stuff that's where they draw

00:42:13,090 --> 00:42:22,560
the line between converged and hyper

00:42:14,350 --> 00:42:26,160
converged anybody else anyone Bueller

00:42:22,560 --> 00:42:26,160
thanks for coming out folks

00:43:09,990 --> 00:43:12,050
you

00:43:15,869 --> 00:43:17,930
you

00:44:42,800 --> 00:44:47,070
your customers rely on your website or

00:44:45,540 --> 00:44:49,470
application if it's slower

00:44:47,070 --> 00:44:52,410
non-responsive it infuriates your users

00:44:49,470 --> 00:44:54,210
and costs you money keeping your

00:44:52,410 --> 00:44:57,800
business critical systems humming along

00:44:54,210 --> 00:45:00,050
requires insight into what they're doing

00:44:57,800 --> 00:45:01,940
your system metrics tells stories

00:45:00,050 --> 00:45:03,950
stories that can reveal performance

00:45:01,940 --> 00:45:06,260
bottlenecks resource limitations and

00:45:03,950 --> 00:45:07,940
other problems but how do you keep an

00:45:06,260 --> 00:45:10,550
eye on all of your systems performance

00:45:07,940 --> 00:45:13,580
metrics in real-time and record this

00:45:10,550 --> 00:45:15,350
data for later analysis enter longview

00:45:13,580 --> 00:45:17,360
the new way to see what's really going

00:45:15,350 --> 00:45:19,520
on under the hood the long view

00:45:17,360 --> 00:45:21,590
dashboard lets you visualize the status

00:45:19,520 --> 00:45:24,020
of all your systems providing you with a

00:45:21,590 --> 00:45:27,410
bird's-eye view of your entire fleet you

00:45:24,020 --> 00:45:29,990
can sort by cpu memory swap processes

00:45:27,410 --> 00:45:32,450
load and network usage click a specific

00:45:29,990 --> 00:45:34,310
system to access it individual dashboard

00:45:32,450 --> 00:45:36,730
then click and drag to zoom in on

00:45:34,310 --> 00:45:39,170
chokepoints and get more detail

00:45:36,730 --> 00:45:41,120
comprehensive network data including

00:45:39,170 --> 00:45:43,280
inbound and outbound traffic is

00:45:41,120 --> 00:45:44,750
available on the network tab and disk

00:45:43,280 --> 00:45:46,610
rights and free space on the disk

00:45:44,750 --> 00:45:49,460
stabbed while the process Explorer

00:45:46,610 --> 00:45:51,920
displays usage statistics for individual

00:45:49,460 --> 00:45:54,020
processes the system info tab shows

00:45:51,920 --> 00:45:56,270
listening services active connections

00:45:54,020 --> 00:45:58,760
and available updates adding long view

00:45:56,270 --> 00:46:00,350
to a system is easy just click the

00:45:58,760 --> 00:46:02,390
button copy the one line installation

00:46:00,350 --> 00:46:04,820
command then run the command on your

00:46:02,390 --> 00:46:06,530
linux system to complete the process the

00:46:04,820 --> 00:46:08,690
agent will begin collecting data and

00:46:06,530 --> 00:46:10,550
sending it to longview then the graph

00:46:08,690 --> 00:46:13,070
start rolling

00:46:10,550 --> 00:46:15,440
use longview to gain visibility into

00:46:13,070 --> 00:46:50,030
your servers so when your website or app

00:46:15,440 --> 00:46:51,440
heats up it stays up citrix xenserver

00:46:50,030 --> 00:46:54,320
gives you everything you need to

00:46:51,440 --> 00:46:56,660
integrate manage and automate a virtual

00:46:54,320 --> 00:46:59,720
data center all on an enterprise-class

00:46:56,660 --> 00:47:02,300
cloud proven virtual platform and at a

00:46:59,720 --> 00:47:04,250
third of the cost of other solutions but

00:47:02,300 --> 00:47:05,900
why even bother with virtualizing your

00:47:04,250 --> 00:47:08,150
server infrastructure in the first place

00:47:05,900 --> 00:47:09,850
well let's say you have a traditional

00:47:08,150 --> 00:47:11,990
one server to one application

00:47:09,850 --> 00:47:14,260
architecture but you're running out of

00:47:11,990 --> 00:47:16,400
resources and performance is suffering

00:47:14,260 --> 00:47:19,780
once you order new server hardware

00:47:16,400 --> 00:47:22,970
you'll wait for delivery configure it

00:47:19,780 --> 00:47:26,360
install your business application stage

00:47:22,970 --> 00:47:28,550
and test the server and finally add it

00:47:26,360 --> 00:47:31,070
to your production farm if you've been

00:47:28,550 --> 00:47:33,800
through this process before you can take

00:47:31,070 --> 00:47:35,720
weeks or even months you also know it's

00:47:33,800 --> 00:47:37,700
a manually intensive process that will

00:47:35,720 --> 00:47:41,030
burden your team every time you outgrow

00:47:37,700 --> 00:47:42,800
your current setup with a virtual server

00:47:41,030 --> 00:47:45,590
solution you could accomplish all of

00:47:42,800 --> 00:47:48,080
that in less than half a day server

00:47:45,590 --> 00:47:49,910
virtualization software separates the OS

00:47:48,080 --> 00:47:52,340
and application from the underlying

00:47:49,910 --> 00:47:54,500
server hardware and with multiple

00:47:52,340 --> 00:47:56,210
virtual machines on a single server you

00:47:54,500 --> 00:47:59,240
can use each of them to run different

00:47:56,210 --> 00:48:00,950
os's and applications this makes it

00:47:59,240 --> 00:48:02,750
possible to move your virtual machines

00:48:00,950 --> 00:48:04,820
from one piece of hardware to another

00:48:02,750 --> 00:48:07,070
whenever you want to maximize

00:48:04,820 --> 00:48:09,020
utilization simplify maintenance or

00:48:07,070 --> 00:48:11,330
recover from a hardware failure and

00:48:09,020 --> 00:48:14,720
without slowing down your applications

00:48:11,330 --> 00:48:17,360
or users clearly server virtualization

00:48:14,720 --> 00:48:19,790
provides big benefits and Citrix

00:48:17,360 --> 00:48:21,580
XenServer provides even more

00:48:19,790 --> 00:48:23,810
since it's built on an open platform

00:48:21,580 --> 00:48:26,240
xenserver plays well with your existing

00:48:23,810 --> 00:48:28,520
hardware storage systems and IT

00:48:26,240 --> 00:48:30,110
management software as well as with the

00:48:28,520 --> 00:48:32,630
industry's leading cloud service

00:48:30,110 --> 00:48:34,190
providers best of all you can get

00:48:32,630 --> 00:48:36,170
started by downloading a fully

00:48:34,190 --> 00:48:39,170
functional production ready version of

00:48:36,170 --> 00:48:41,390
xenserver for free after a 10-minute

00:48:39,170 --> 00:48:43,220
installation process you'll see how easy

00:48:41,390 --> 00:48:45,140
it is to start virtualizing your

00:48:43,220 --> 00:48:47,570
workloads and automating your IT

00:48:45,140 --> 00:48:49,160
management processes and when you're

00:48:47,570 --> 00:48:51,110
ready for a richer set of management

00:48:49,160 --> 00:48:53,600
tools just upgrade to one of the premium

00:48:51,110 --> 00:48:55,370
editions of xenserver so whether you're

00:48:53,600 --> 00:48:57,350
interested in virtualizing servers for

00:48:55,370 --> 00:48:59,630
the first time expanding your server

00:48:57,350 --> 00:49:02,180
virtualization footprint or moving

00:48:59,630 --> 00:49:04,520
server workloads to the cloud download

00:49:02,180 --> 00:49:06,470
and install zend server today and see

00:49:04,520 --> 00:49:10,010
how it can help you simplify your IT

00:49:06,470 --> 00:49:13,450
environment citrix xenserver do more

00:49:10,010 --> 00:49:13,450
don't spend more

00:49:49,299 --> 00:49:52,299
member

00:50:00,150 --> 00:50:02,210

YouTube URL: https://www.youtube.com/watch?v=moGJoIdWPFU


