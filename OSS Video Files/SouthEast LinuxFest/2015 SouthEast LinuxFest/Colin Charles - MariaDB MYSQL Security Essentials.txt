Title: Colin Charles - MariaDB MYSQL Security Essentials
Publication date: 2017-01-25
Playlist: 2015 SouthEast LinuxFest
Description: 
	
Captions: 
	00:00:00,050 --> 00:00:09,420
okay good evening I'm here to talk to

00:00:06,569 --> 00:00:16,020
you about Marie DB and mysql security

00:00:09,420 --> 00:00:25,350
essentials I'm not the angry noob there

00:00:16,020 --> 00:00:27,449
is feedback okay and I I have been in

00:00:25,350 --> 00:00:30,150
the MySQL world for a long time and the

00:00:27,449 --> 00:00:31,949
reason i have bad understanding of us

00:00:30,150 --> 00:00:39,210
geographies because I don't come from

00:00:31,949 --> 00:00:42,270
the US I come from Malaysia I've worked

00:00:39,210 --> 00:00:46,140
in many of the MySQL companies from

00:00:42,270 --> 00:00:48,030
MySQL to Sun to money program to Maria

00:00:46,140 --> 00:00:50,250
DB Corp and before that I used to work

00:00:48,030 --> 00:00:55,890
on the federal project as well and open

00:00:50,250 --> 00:00:58,980
office so since all of you use MySQL I

00:00:55,890 --> 00:01:02,329
guess you probably already know that the

00:00:58,980 --> 00:01:04,799
defaults are pretty poor out of the box

00:01:02,329 --> 00:01:07,380
for example that there there is no

00:01:04,799 --> 00:01:09,750
password for the root user the super

00:01:07,380 --> 00:01:12,630
user has no password by default you can

00:01:09,750 --> 00:01:16,580
start mysql with mysql dash you root and

00:01:12,630 --> 00:01:19,799
you can do whatever you feel like doing

00:01:16,580 --> 00:01:22,650
that makes it easy to start because one

00:01:19,799 --> 00:01:25,290
of the mysql selling points is get up

00:01:22,650 --> 00:01:27,689
and running in like five minutes however

00:01:25,290 --> 00:01:31,950
this is not the best of course this gets

00:01:27,689 --> 00:01:34,530
improved over time there is also a

00:01:31,950 --> 00:01:37,140
default test database which you probably

00:01:34,530 --> 00:01:40,170
want to remove the other thing that is

00:01:37,140 --> 00:01:42,180
interesting is that you can actually

00:01:40,170 --> 00:01:44,100
find passwords if you have access to

00:01:42,180 --> 00:01:47,220
config files if you have a wordpress

00:01:44,100 --> 00:01:48,570
blog and you can read say WP config you

00:01:47,220 --> 00:01:52,740
can actually see the passwords in plain

00:01:48,570 --> 00:01:57,659
text or even Drupal or any app this is a

00:01:52,740 --> 00:01:59,369
issue also if you've entered the

00:01:57,659 --> 00:02:02,729
password on the shell like you typed

00:01:59,369 --> 00:02:04,950
mysql bash you username Dash P password

00:02:02,729 --> 00:02:10,170
it saves it in your like bash history

00:02:04,950 --> 00:02:13,360
your history files also when you decide

00:02:10,170 --> 00:02:16,240
to grant a user password

00:02:13,360 --> 00:02:19,330
that also saves it in the MySQL history

00:02:16,240 --> 00:02:22,570
in your home directory so you can

00:02:19,330 --> 00:02:24,550
actually like use a salt and password if

00:02:22,570 --> 00:02:26,830
you wanted to but all this is worth

00:02:24,550 --> 00:02:29,110
noting if people somehow get access to

00:02:26,830 --> 00:02:34,510
your history files they can actually see

00:02:29,110 --> 00:02:38,310
stuff also if I can access your data

00:02:34,510 --> 00:02:42,550
directory I can run say strings on the

00:02:38,310 --> 00:02:46,720
mysql user user file and i can also get

00:02:42,550 --> 00:02:48,490
passwords out of it presumably if you

00:02:46,720 --> 00:02:50,830
install this through a linux

00:02:48,490 --> 00:02:54,550
distribution or used a sane packaging

00:02:50,830 --> 00:02:56,320
format you are running mysqld as the

00:02:54,550 --> 00:02:58,900
mysql user but if you're compiling

00:02:56,320 --> 00:03:01,680
things by yourself you may be running

00:02:58,900 --> 00:03:04,570
this as root and that is not recommended

00:03:01,680 --> 00:03:07,450
like you should never run the service as

00:03:04,570 --> 00:03:13,690
root you should run it as mysql or a

00:03:07,450 --> 00:03:16,390
user specifically for mysql there are

00:03:13,690 --> 00:03:19,390
also other ways like if I can access the

00:03:16,390 --> 00:03:21,940
mysql user table I can now decide if i

00:03:19,390 --> 00:03:23,590
could get which kind of user has root

00:03:21,940 --> 00:03:30,340
privileges and how can I escalate

00:03:23,590 --> 00:03:32,410
privileges myself later on I also think

00:03:30,340 --> 00:03:34,959
it's pretty important that you probably

00:03:32,410 --> 00:03:37,930
want to think about replication you

00:03:34,959 --> 00:03:40,480
don't usually run mysql on one server

00:03:37,930 --> 00:03:42,850
and your application user if it has

00:03:40,480 --> 00:03:47,110
global permissions could also lead to

00:03:42,850 --> 00:03:49,420
problems for you if you can start and

00:03:47,110 --> 00:03:51,250
stop the mysqld process like root you

00:03:49,420 --> 00:03:53,620
can reset passwords because you can do

00:03:51,250 --> 00:03:56,980
skip Grand tables you can now login as

00:03:53,620 --> 00:04:01,490
root update the password and start mysql

00:03:56,980 --> 00:04:05,120
again with the grand tables

00:04:01,490 --> 00:04:08,570
if you can edit the minus CNF you can

00:04:05,120 --> 00:04:10,610
also use the init file option and run

00:04:08,570 --> 00:04:15,680
SQL file which you can also do things

00:04:10,610 --> 00:04:19,880
like you know change change the password

00:04:15,680 --> 00:04:21,110
and so forth so overall you're going to

00:04:19,880 --> 00:04:24,470
make sure your permissions are set

00:04:21,110 --> 00:04:27,290
correctly for your system again if you

00:04:24,470 --> 00:04:29,960
use a sensible packaging format this

00:04:27,290 --> 00:04:31,280
should not be the case and today there

00:04:29,960 --> 00:04:33,100
should be next to no reason why you

00:04:31,280 --> 00:04:37,220
don't use a sensible packaging format

00:04:33,100 --> 00:04:42,890
because everyone provides some form of a

00:04:37,220 --> 00:04:45,530
play yum repository the only time you

00:04:42,890 --> 00:04:47,720
probably have to compile yourself is if

00:04:45,530 --> 00:04:49,310
you're running I don't know Jen too but

00:04:47,720 --> 00:04:52,430
even the poor change system if you

00:04:49,310 --> 00:04:57,190
happen to use it is also sensible who

00:04:52,430 --> 00:05:01,880
here compiles MySQL to run nobody okay

00:04:57,190 --> 00:05:08,210
good so you trust your distributor to

00:05:01,880 --> 00:05:10,460
give you sensible defaults the good part

00:05:08,210 --> 00:05:13,370
about all of this is that as time goes

00:05:10,460 --> 00:05:17,120
by things also start improving for

00:05:13,370 --> 00:05:19,460
example in 5.6 the defaults get better

00:05:17,120 --> 00:05:22,460
like no engine substitution is turned on

00:05:19,460 --> 00:05:24,050
by default for SQL mode and that

00:05:22,460 --> 00:05:27,440
basically means when you try to do a

00:05:24,050 --> 00:05:30,110
create table you get the default engine

00:05:27,440 --> 00:05:32,720
which is in ODB but if you try to use

00:05:30,110 --> 00:05:34,670
some other engine you'll get a you know

00:05:32,720 --> 00:05:37,610
like a warning it'll actually just say

00:05:34,670 --> 00:05:39,440
it's not not doable any longer and this

00:05:37,610 --> 00:05:43,580
is also true when you are going to do an

00:05:39,440 --> 00:05:44,720
ultra table and you can basically last

00:05:43,580 --> 00:05:46,370
time you'd see a warning and the

00:05:44,720 --> 00:05:47,930
operation may happen but now if you have

00:05:46,370 --> 00:05:49,940
no engine substitution the error will

00:05:47,930 --> 00:05:52,090
occur and the table is not created or

00:05:49,940 --> 00:05:55,910
altered if the engine is not available

00:05:52,090 --> 00:05:58,310
that's good also you can run you know

00:05:55,910 --> 00:06:00,770
SQL mode with something like strict all

00:05:58,310 --> 00:06:02,660
tables at no engine substitution which

00:06:00,770 --> 00:06:05,300
which will help preserve your data

00:06:02,660 --> 00:06:09,620
integrity and I think it also keeps on

00:06:05,300 --> 00:06:11,600
improving for example previously in 55

00:06:09,620 --> 00:06:14,330
or 56 you probably would run with no

00:06:11,600 --> 00:06:19,580
zero date and no zero in date

00:06:14,330 --> 00:06:22,879
but in 56 17 they deprecated it and made

00:06:19,580 --> 00:06:26,930
it part a strict mode and come 57 this

00:06:22,879 --> 00:06:29,750
will just be ignored so the sequel boats

00:06:26,930 --> 00:06:33,020
are getting stronger getting stronger

00:06:29,750 --> 00:06:34,580
for data integrity purposes now why why

00:06:33,020 --> 00:06:36,889
you deprecated something in the middle

00:06:34,580 --> 00:06:38,810
of release I'm not so sure that's not

00:06:36,889 --> 00:06:43,400
really good release practice so you have

00:06:38,810 --> 00:06:45,409
to read release notes but it's it's it's

00:06:43,400 --> 00:06:50,780
worth noting that this actually improves

00:06:45,409 --> 00:06:53,659
for everybody now for the longest time

00:06:50,780 --> 00:06:55,729
there is this tool called MySQL secure

00:06:53,659 --> 00:06:57,740
installation that you should probably

00:06:55,729 --> 00:07:01,580
always run after you installed MySQL

00:06:57,740 --> 00:07:04,550
because it removes anonymous users test

00:07:01,580 --> 00:07:05,990
databases and so forth and you know if

00:07:04,550 --> 00:07:09,469
you could get like anonymous login

00:07:05,990 --> 00:07:11,599
somehow you could potentially just run

00:07:09,469 --> 00:07:13,669
annoying things on the test database

00:07:11,599 --> 00:07:17,300
like would that we take up space on disk

00:07:13,669 --> 00:07:20,330
or maybe run like lots of md5 hashes to

00:07:17,300 --> 00:07:22,940
use up cpu so you really want to remove

00:07:20,330 --> 00:07:24,469
all this remove non-local Oh screwed

00:07:22,940 --> 00:07:27,979
users you don't want to be logging in as

00:07:24,469 --> 00:07:30,199
root over the network it's just not good

00:07:27,979 --> 00:07:32,360
practice also to have a root password

00:07:30,199 --> 00:07:35,889
makes sense how many here run mysql

00:07:32,360 --> 00:07:43,639
secure installation after and install

00:07:35,889 --> 00:07:50,360
okay not all of you why ah didn't know

00:07:43,639 --> 00:07:52,879
about it ok so the lazy way to create

00:07:50,360 --> 00:07:55,069
users and you know most open source

00:07:52,879 --> 00:07:57,139
projects don't recommend this anymore is

00:07:55,069 --> 00:08:00,110
to create a user and then grant

00:07:57,139 --> 00:08:03,259
everything basically grant all on a

00:08:00,110 --> 00:08:04,789
strict on a stick to send user and that

00:08:03,259 --> 00:08:06,589
basically gives you access to all the

00:08:04,789 --> 00:08:08,930
tables in the database as well as access

00:08:06,589 --> 00:08:10,789
from any external location so the %

00:08:08,930 --> 00:08:13,370
gives you access from a from a location

00:08:10,789 --> 00:08:17,659
and the access to all the database is

00:08:13,370 --> 00:08:20,750
the a string dot asterisk that's kind of

00:08:17,659 --> 00:08:23,539
bad because you now have access to

00:08:20,750 --> 00:08:25,099
shutting down the server you could you

00:08:23,539 --> 00:08:28,959
also have super privileges you have

00:08:25,099 --> 00:08:33,259
access to change master scale usage etc

00:08:28,959 --> 00:08:38,629
show all databases even so you don't

00:08:33,259 --> 00:08:41,209
really want to do this and why because

00:08:38,629 --> 00:08:44,420
if you have super privileges you can

00:08:41,209 --> 00:08:45,920
bypass if servers let's start it up in

00:08:44,420 --> 00:08:48,529
read-only mode so you can actually set

00:08:45,920 --> 00:08:50,509
up mysqld dash dash read-only but if you

00:08:48,529 --> 00:08:52,879
have super access you actually can

00:08:50,509 --> 00:08:55,519
continue writing the database it can

00:08:52,879 --> 00:08:59,240
also bypass in it connect which you said

00:08:55,519 --> 00:09:03,439
say in minot CNF so maybe you've set in

00:08:59,240 --> 00:09:06,740
my love CNF in it connect equals set

00:09:03,439 --> 00:09:09,559
names utf8 but then if you super you can

00:09:06,740 --> 00:09:11,449
log on look at the collision tables and

00:09:09,559 --> 00:09:13,759
actually see things are still things are

00:09:11,449 --> 00:09:18,259
like the default that's in one that's

00:09:13,759 --> 00:09:21,069
not good you can also disable been

00:09:18,259 --> 00:09:23,720
logging you can change the configuration

00:09:21,069 --> 00:09:25,699
if you reach max connections and you can

00:09:23,720 --> 00:09:28,129
try this like set max connections to two

00:09:25,699 --> 00:09:29,720
and then you should normally see that

00:09:28,129 --> 00:09:32,149
you are not allowed to connect if you're

00:09:29,720 --> 00:09:33,439
the third user but if you have super

00:09:32,149 --> 00:09:37,550
privileges you can actually make

00:09:33,439 --> 00:09:45,500
connection so super privileges are best

00:09:37,550 --> 00:09:47,180
limited to localhost only and the best

00:09:45,500 --> 00:09:50,240
way to do do things is to only give

00:09:47,180 --> 00:09:53,449
users what they really need so you

00:09:50,240 --> 00:09:56,420
create a user like foo at local Lowe's

00:09:53,449 --> 00:09:58,730
identified by password and actually is

00:09:56,420 --> 00:10:00,470
good because now you have a password it

00:09:58,730 --> 00:10:03,550
also shows the accessibility which is

00:10:00,470 --> 00:10:05,569
localhost it also switch database or

00:10:03,550 --> 00:10:10,189
schema you can get and that's down here

00:10:05,569 --> 00:10:12,379
actually DB gastric basically shows the

00:10:10,189 --> 00:10:14,149
database schema you can access i'll use

00:10:12,379 --> 00:10:17,209
i'll use the term interchangeably

00:10:14,149 --> 00:10:22,339
because it is really a schema but we say

00:10:17,209 --> 00:10:24,920
create database name and it also says

00:10:22,339 --> 00:10:27,110
look I'm only going to grant the ability

00:10:24,920 --> 00:10:30,620
to create select insert update delete so

00:10:27,110 --> 00:10:34,790
simple crowd operations for said user

00:10:30,620 --> 00:10:37,480
and this is important Oh obviously after

00:10:34,790 --> 00:10:40,519
that you have to run flush privileges

00:10:37,480 --> 00:10:41,990
now when it comes to applications if you

00:10:40,519 --> 00:10:44,300
happen to just need

00:10:41,990 --> 00:10:46,370
you privileges you just have to say

00:10:44,300 --> 00:10:51,290
you'd like to have selects you know

00:10:46,370 --> 00:10:54,680
grant run for selects if it's a regular

00:10:51,290 --> 00:10:57,800
user so typically this is your WordPress

00:10:54,680 --> 00:11:00,110
mediawiki whatever install that you have

00:10:57,800 --> 00:11:02,089
you just need to select insert update

00:11:00,110 --> 00:11:03,950
and delete you don't actually need much

00:11:02,089 --> 00:11:05,930
more than that and of course if you're

00:11:03,950 --> 00:11:07,820
the DBA you can provide a whole bunch

00:11:05,930 --> 00:11:15,520
other things right you can even give

00:11:07,820 --> 00:11:19,190
them super privileges if need be now

00:11:15,520 --> 00:11:20,390
when it comes to installing today most

00:11:19,190 --> 00:11:23,420
of your linux distributions give you

00:11:20,390 --> 00:11:26,779
ready be when you ask for mysql server

00:11:23,420 --> 00:11:28,660
so getting more a DB for free and you're

00:11:26,779 --> 00:11:31,190
not getting my SQL server now this

00:11:28,660 --> 00:11:34,520
becomes this could be a problem for you

00:11:31,190 --> 00:11:38,330
because you may suddenly realize that if

00:11:34,520 --> 00:11:40,279
you've read the mysql docs about certain

00:11:38,330 --> 00:11:42,589
things things are could be different in

00:11:40,279 --> 00:11:47,440
really be they're not necessarily

00:11:42,589 --> 00:11:50,360
different but they could be different so

00:11:47,440 --> 00:11:51,800
the other thing that you probably want

00:11:50,360 --> 00:11:53,270
to remember when it comes to linux

00:11:51,800 --> 00:11:55,610
distributions is that they tend to ship

00:11:53,270 --> 00:11:57,860
pretty old releases of my skull and

00:11:55,610 --> 00:12:00,260
Maria you be like the latest Debian

00:11:57,860 --> 00:12:02,779
stable came out with MySQL 55 as a

00:12:00,260 --> 00:12:05,570
default 56 is like in the testing

00:12:02,779 --> 00:12:08,060
repositories it does however come with

00:12:05,570 --> 00:12:12,200
Marie to be dead but if you've got my

00:12:08,060 --> 00:12:14,899
Krell 7 or Center 7 you got like Maury

00:12:12,200 --> 00:12:17,360
to be 55 which is now considered to be

00:12:14,899 --> 00:12:19,790
you know pretty old so MySQL 55 and

00:12:17,360 --> 00:12:26,000
ready to be 55 probably been around now

00:12:19,790 --> 00:12:31,850
for three-plus years so if you happen to

00:12:26,000 --> 00:12:34,010
use debit in ubuntu there you don't

00:12:31,850 --> 00:12:36,200
actually have to set a root password if

00:12:34,010 --> 00:12:37,730
you use maria DB server because it makes

00:12:36,200 --> 00:12:39,020
you something called the odd socket

00:12:37,730 --> 00:12:40,940
plugin that allows you to log in

00:12:39,020 --> 00:12:45,800
automatically which I'll talk about

00:12:40,940 --> 00:12:48,500
later however Deb helper is actually

00:12:45,800 --> 00:12:50,810
quite a good tool because it actually

00:12:48,500 --> 00:12:52,880
allows you to do interactive installs

00:12:50,810 --> 00:12:55,990
and will actually insist that you

00:12:52,880 --> 00:12:55,990
provide a root password

00:12:56,530 --> 00:13:03,080
the bonus of all of this is that every

00:13:00,260 --> 00:13:05,720
vendor that being Oracle MySQL Percona

00:13:03,080 --> 00:13:08,360
all Maria DB offer apt and yum

00:13:05,720 --> 00:13:11,090
repositories for pretty much all major

00:13:08,360 --> 00:13:14,720
distributions today so if you happen to

00:13:11,090 --> 00:13:17,510
be using say opensuse maybe they don't

00:13:14,720 --> 00:13:22,840
exist for everyone but I think Brady be

00:13:17,510 --> 00:13:25,570
still actually gives away opensuse rpms

00:13:22,840 --> 00:13:28,490
another thing to probably note is that

00:13:25,570 --> 00:13:32,270
you should use selinux like don't

00:13:28,490 --> 00:13:35,390
disable it I know if you run into

00:13:32,270 --> 00:13:38,120
problems and you feel like oh it must be

00:13:35,390 --> 00:13:40,610
an sc the next issue it really isn't you

00:13:38,120 --> 00:13:42,770
should just write contacts for it there

00:13:40,610 --> 00:13:45,380
is a complex associated with the mysqld

00:13:42,770 --> 00:13:48,080
process you need to know the you know

00:13:45,380 --> 00:13:51,050
the context but the type of the context

00:13:48,080 --> 00:13:56,270
as well as the domain for the type of

00:13:51,050 --> 00:13:58,190
the contacts and again if you use things

00:13:56,270 --> 00:14:00,140
that come from a provider they usually

00:13:58,190 --> 00:14:02,420
have all these selinux contacts there

00:14:00,140 --> 00:14:04,850
and it actually gives you an added layer

00:14:02,420 --> 00:14:08,000
of security on the lease from the file

00:14:04,850 --> 00:14:11,540
system standpoint so I suggest not

00:14:08,000 --> 00:14:17,960
disabling selinux who here disables

00:14:11,540 --> 00:14:23,930
selinux hmm for fun or you don't like it

00:14:17,960 --> 00:14:26,240
oh okay so they insist they don't want

00:14:23,930 --> 00:14:29,530
it baby or your it's your own personal

00:14:26,240 --> 00:14:29,530
machine and you don't want it

00:14:38,680 --> 00:14:47,540
okay yeah so again I would disable it

00:14:44,950 --> 00:14:50,300
now remember the part where I said we

00:14:47,540 --> 00:14:52,430
were going to talk about how Maury DB

00:14:50,300 --> 00:14:55,880
may have you know some minor differences

00:14:52,430 --> 00:15:00,649
to mysql and one that actually is around

00:14:55,880 --> 00:15:03,110
the warnings enabling vlog warnings can

00:15:00,649 --> 00:15:06,410
actually give you access denied messages

00:15:03,110 --> 00:15:09,470
but Lord warnings equals one in maury DB

00:15:06,410 --> 00:15:11,720
will give you access denied messages but

00:15:09,470 --> 00:15:15,399
log warnings equals to it mysql will

00:15:11,720 --> 00:15:17,899
give you access denied messages in fact

00:15:15,399 --> 00:15:19,610
from the access denied standpoint you

00:15:17,899 --> 00:15:22,220
actually get the same stuff in the log

00:15:19,610 --> 00:15:24,380
files but inside of Maury DB when you

00:15:22,220 --> 00:15:26,060
put two for example you also get to see

00:15:24,380 --> 00:15:28,190
statements that are logged that were

00:15:26,060 --> 00:15:30,980
like basically unsafe to log as just a

00:15:28,190 --> 00:15:34,610
statement based replication it will also

00:15:30,980 --> 00:15:37,820
be logged inside the logs so subtle

00:15:34,610 --> 00:15:41,180
differences for the same command and

00:15:37,820 --> 00:15:44,060
you're going to encounter probably a lot

00:15:41,180 --> 00:15:48,170
of this when you're playing around with

00:15:44,060 --> 00:15:52,339
the various mysql distributions in the

00:15:48,170 --> 00:15:53,930
ecosystem this obviously makes for a lot

00:15:52,339 --> 00:15:56,600
of business for consultants i guess

00:15:53,930 --> 00:16:04,220
because you have lots of individual

00:15:56,600 --> 00:16:08,209
unique changes so my skill as i said is

00:16:04,220 --> 00:16:10,160
improving and that's why here is to hit

00:16:08,209 --> 00:16:13,750
I guess hear about the improvements for

00:16:10,160 --> 00:16:17,199
one password expiry has come to mysql 56

00:16:13,750 --> 00:16:20,120
which is nice you can actually just say

00:16:17,199 --> 00:16:21,860
password expire for a user and then when

00:16:20,120 --> 00:16:23,420
the user logs in again well they will be

00:16:21,860 --> 00:16:25,720
told that they can't login because they

00:16:23,420 --> 00:16:28,279
now need to change their password

00:16:25,720 --> 00:16:31,070
there's also been a password validation

00:16:28,279 --> 00:16:34,100
plugin that's been around since 5 6 and

00:16:31,070 --> 00:16:35,690
this basically will add will look for

00:16:34,100 --> 00:16:37,910
the strength of the potential password

00:16:35,690 --> 00:16:40,760
using validate password strength of

00:16:37,910 --> 00:16:43,070
sequel function take an argument and

00:16:40,760 --> 00:16:46,579
return the into integer anywhere between

00:16:43,070 --> 00:16:48,629
0 to 100 0 being weak hundred being very

00:16:46,579 --> 00:16:58,800
strong

00:16:48,629 --> 00:17:07,140
did you hear that oh okay so oh ok I

00:16:58,800 --> 00:17:10,870
thought I was hearing things yeah so

00:17:07,140 --> 00:17:12,970
5656 gets better and that's not the only

00:17:10,870 --> 00:17:15,520
thing right 56 keeps on getting better

00:17:12,970 --> 00:17:17,770
like they also there's also my scale

00:17:15,520 --> 00:17:21,669
configure editor which basically allows

00:17:17,770 --> 00:17:24,909
you to star on credentials in an

00:17:21,669 --> 00:17:27,939
encrypted login pass file and it

00:17:24,909 --> 00:17:29,710
encrypts teed don't my login dub CNF so

00:17:27,939 --> 00:17:31,390
you cannot be read as clear text and the

00:17:29,710 --> 00:17:33,909
contents will only be decrypted by the

00:17:31,390 --> 00:17:36,340
client programs when it's used in memory

00:17:33,909 --> 00:17:38,080
this is handy because you know some

00:17:36,340 --> 00:17:42,159
people just don't want their passwords

00:17:38,080 --> 00:17:44,980
stored on disk this is a common request

00:17:42,159 --> 00:17:47,620
for compliance for like data privacy

00:17:44,980 --> 00:17:52,330
especially in parts of Asia like Korea

00:17:47,620 --> 00:17:54,520
and stuff also 56 gives you this random

00:17:52,330 --> 00:17:57,220
root password on installed basically it

00:17:54,520 --> 00:17:59,289
runs my SQL install DB with dash dash

00:17:57,220 --> 00:18:02,669
brand and passwords and installs it in

00:17:59,289 --> 00:18:06,370
your home directory in dot mysql secret

00:18:02,669 --> 00:18:08,650
this is good this means that you

00:18:06,370 --> 00:18:13,200
actually by default have a password and

00:18:08,650 --> 00:18:17,289
it is by default something random so

00:18:13,200 --> 00:18:30,940
pi/6 improves it how many here use mysql

00:18:17,289 --> 00:18:40,080
56 Wow 555 1 plus the rest of you don't

00:18:30,940 --> 00:18:46,780
use my skill ok who doesn't use my skill

00:18:40,080 --> 00:18:48,580
yet oh wow I love you oh yeah of course

00:18:46,780 --> 00:18:51,549
that's what I meant so some some form of

00:18:48,580 --> 00:18:54,460
the MySQL ecosystem Brady be dead kudos

00:18:51,549 --> 00:18:58,390
ok I was just wondering if that will

00:18:54,460 --> 00:19:00,539
folk that never used my skill so they

00:18:58,390 --> 00:19:00,539
are

00:19:12,190 --> 00:19:20,180
in my case I support some commercial

00:19:16,250 --> 00:19:22,610
products you know for my company and and

00:19:20,180 --> 00:19:25,820
those products get installed but then

00:19:22,610 --> 00:19:28,250
you know I don't know that the vendor in

00:19:25,820 --> 00:19:30,260
their installation actually took care of

00:19:28,250 --> 00:19:32,990
those things and also on some of the

00:19:30,260 --> 00:19:35,390
appliances that we have yep so I'm here

00:19:32,990 --> 00:19:38,150
definitely to understand you know what

00:19:35,390 --> 00:19:40,790
are some of the best practices and then

00:19:38,150 --> 00:19:44,170
I can go in and see if they've done

00:19:40,790 --> 00:19:52,880
those things right fair enough okay cool

00:19:44,170 --> 00:19:55,850
thank you so 57 is coming it's in

00:19:52,880 --> 00:19:57,680
release candidates test status so it's

00:19:55,850 --> 00:19:59,630
also worth noting that they've improved

00:19:57,680 --> 00:20:04,130
password expiry because now you can

00:19:59,630 --> 00:20:06,130
actually set automatic pass at expiry

00:20:04,130 --> 00:20:10,010
time frame so if you basically say

00:20:06,130 --> 00:20:13,880
default password lifetime equals say 90

00:20:10,010 --> 00:20:15,740
that's three months so every you put

00:20:13,880 --> 00:20:17,630
that in your mind at CNF and basically

00:20:15,740 --> 00:20:20,720
every three months the password will

00:20:17,630 --> 00:20:22,760
expire for all the users you can also

00:20:20,720 --> 00:20:26,180
require the password to be changed every

00:20:22,760 --> 00:20:28,820
end days by just saying password expire

00:20:26,180 --> 00:20:32,300
interval where n is a number so n can be

00:20:28,820 --> 00:20:37,010
10 don't do that i'm sure you'll annoy

00:20:32,300 --> 00:20:39,260
people though there's also the option to

00:20:37,010 --> 00:20:41,330
now account lock and unlock where the

00:20:39,260 --> 00:20:43,730
basically if you look at the mysql user

00:20:41,330 --> 00:20:45,380
table for each and every accounts it

00:20:43,730 --> 00:20:46,490
look you can see when the password was

00:20:45,380 --> 00:20:48,110
last changed and the server

00:20:46,490 --> 00:20:52,220
automatically treat d password has

00:20:48,110 --> 00:20:54,770
expired at client connection time and

00:20:52,220 --> 00:20:58,600
the account lock and unlock will work

00:20:54,770 --> 00:21:02,240
alongside either create user alter user

00:20:58,600 --> 00:21:09,350
so 57 seems to have more improvements

00:21:02,240 --> 00:21:11,450
for around security also i think it's

00:21:09,350 --> 00:21:13,480
worth noting that we talked about a self

00:21:11,450 --> 00:21:16,100
a little bit

00:21:13,480 --> 00:21:18,799
if you are using replication across

00:21:16,100 --> 00:21:22,909
public networks you probably want to

00:21:18,799 --> 00:21:24,830
turn on as a cell note that nasal and

00:21:22,909 --> 00:21:26,210
open SSL can cause issues if you're

00:21:24,830 --> 00:21:28,190
using two different types of that cell

00:21:26,210 --> 00:21:31,809
they're our compatibility libraries for

00:21:28,190 --> 00:21:34,279
this or just make sure using the same SL

00:21:31,809 --> 00:21:37,070
why why is there a problem between you

00:21:34,279 --> 00:21:39,230
as my opener cell if you use mysql

00:21:37,070 --> 00:21:41,360
enterprise you get open itself use mysql

00:21:39,230 --> 00:21:43,909
community you got ya so they're two

00:21:41,360 --> 00:21:46,370
different cell libraries but the reason

00:21:43,909 --> 00:21:49,669
why lung dis in with 57 is because

00:21:46,370 --> 00:21:51,769
there's also my ssl RSA set up to which

00:21:49,669 --> 00:21:54,440
basically creates ssl certs and key

00:21:51,769 --> 00:21:56,899
files as well as the RSA key pair files

00:21:54,440 --> 00:21:58,669
they'll support secure connections for a

00:21:56,899 --> 00:22:00,679
cell and secure passo changes it

00:21:58,669 --> 00:22:02,179
basically makes life easy the other

00:22:00,679 --> 00:22:06,860
option for you is to actually learn how

00:22:02,179 --> 00:22:09,110
to use the openssl command so making it

00:22:06,860 --> 00:22:11,870
easy is again good because the easier it

00:22:09,110 --> 00:22:17,360
is the better you're going to want to do

00:22:11,870 --> 00:22:29,710
more things with security now oh yeah

00:22:17,360 --> 00:22:31,940
yes hmm a question on SSL a

00:22:29,710 --> 00:22:34,580
configuration question yeah is it

00:22:31,940 --> 00:22:36,470
possible to tell to only use sslv3 or to

00:22:34,580 --> 00:22:38,299
limit ciphers giving some of the

00:22:36,470 --> 00:22:42,830
security issues have gone the past 18

00:22:38,299 --> 00:22:48,139
months it is from what I gather it is

00:22:42,830 --> 00:22:50,500
not possible to force sippers but does

00:22:48,139 --> 00:22:53,779
anybody know any different Dave Peter

00:22:50,500 --> 00:22:55,340
Daniel I think you just said you just

00:22:53,779 --> 00:22:57,100
get to turn on as you have to just turn

00:22:55,340 --> 00:22:59,629
on a cell or off you can't actually

00:22:57,100 --> 00:23:09,769
cherry-pick but do you know of any way

00:22:59,629 --> 00:23:14,809
to cherry-pick yeah from what I remember

00:23:09,769 --> 00:23:18,139
it should be v2 it should be against

00:23:14,809 --> 00:23:21,830
whatever ssl library that is that is

00:23:18,139 --> 00:23:24,140
linked against so by default I think

00:23:21,830 --> 00:23:29,600
Bochy has a line open a cell

00:23:24,140 --> 00:23:31,490
have me to library on all fours in the

00:23:29,600 --> 00:23:35,360
website again I haven't done this

00:23:31,490 --> 00:23:37,640
because like system i run say is broken

00:23:35,360 --> 00:23:38,990
security holes what your shady let me

00:23:37,640 --> 00:23:41,570
try to seal it off that's why I'm here

00:23:38,990 --> 00:23:44,840
okay so I just wondering sitting on my

00:23:41,570 --> 00:23:47,240
mail server on my web server I had to

00:23:44,840 --> 00:23:49,430
turn off EG compliance on his

00:23:47,240 --> 00:23:52,610
configuration option j clients couldn't

00:23:49,430 --> 00:23:55,070
connect clicking connect is it offers

00:23:52,610 --> 00:23:58,160
all filtered water yeah it will offer

00:23:55,070 --> 00:24:00,020
all that I I'm not sure if you can

00:23:58,160 --> 00:24:01,670
actually configure it from the ssl side

00:24:00,020 --> 00:24:03,800
to actually disable it because it

00:24:01,670 --> 00:24:06,620
actually just uses system as cell

00:24:03,800 --> 00:24:08,360
libraries anyway like it's compiled

00:24:06,620 --> 00:24:11,150
against estimates are libraries in most

00:24:08,360 --> 00:24:16,450
cases so if you can disable it from the

00:24:11,150 --> 00:24:16,450
system then I guess it should be okay

00:24:18,380 --> 00:24:23,510
but from what I gather you can't like

00:24:21,080 --> 00:24:26,900
cherry pick it's it's either have SSL

00:24:23,510 --> 00:24:29,690
are or don't have us so do you know it

00:24:26,900 --> 00:24:45,350
do you know any different Peter can you

00:24:29,690 --> 00:24:51,950
pick Daniel Dave okay so uh hmm I think

00:24:45,350 --> 00:25:06,340
you fall asleep know who's making you

00:24:51,950 --> 00:25:11,570
fall asleep rap rude you want me to wrap

00:25:06,340 --> 00:25:14,420
no no that I will not be rapping hey ok

00:25:11,570 --> 00:25:16,610
anyway I will get back to you if we if

00:25:14,420 --> 00:25:24,890
we figure this out like later you'll be

00:25:16,610 --> 00:25:27,530
here till tomorrow ok so we talked about

00:25:24,890 --> 00:25:30,440
my skull in cell dbr there and that is

00:25:27,530 --> 00:25:32,600
actually going away in 57 because now

00:25:30,440 --> 00:25:35,450
they've made mysqld itself handling

00:25:32,600 --> 00:25:36,920
initialization the insecure option

00:25:35,450 --> 00:25:39,380
basically says you set up a root

00:25:36,920 --> 00:25:43,030
password later the regular initialize

00:25:39,380 --> 00:25:46,450
will set up the root password for you

00:25:43,030 --> 00:25:49,910
this is a new way to do things now will

00:25:46,450 --> 00:25:52,760
this is the way that percona 057 will

00:25:49,910 --> 00:25:56,240
also end up doing things but this is not

00:25:52,760 --> 00:25:58,460
the way Maria db10 one or ten to will do

00:25:56,240 --> 00:26:01,460
things so it's well worth noting that

00:25:58,460 --> 00:26:07,520
going forward you will have different

00:26:01,460 --> 00:26:11,900
ways of managing arm passwords like even

00:26:07,520 --> 00:26:15,680
in Maria DB past validation only k

00:26:11,900 --> 00:26:18,110
basically only came very recently where

00:26:15,680 --> 00:26:20,180
you get past validation via two

00:26:18,110 --> 00:26:22,070
different plugins one being the simple

00:26:20,180 --> 00:26:25,880
simple password check plug-in which

00:26:22,070 --> 00:26:29,960
works very very much like the other

00:26:25,880 --> 00:26:31,400
password plugin then my SQL provides so

00:26:29,960 --> 00:26:32,050
you can actually basically make sure it

00:26:31,400 --> 00:26:33,790
you know

00:26:32,050 --> 00:26:36,790
it's it's got good enough uppercase

00:26:33,790 --> 00:26:39,820
lowercase enough punctuation and so

00:26:36,790 --> 00:26:41,950
forth based on what you said and then in

00:26:39,820 --> 00:26:44,020
addition of that there's also the crack

00:26:41,950 --> 00:26:46,870
lib password check so if you installed

00:26:44,020 --> 00:26:50,560
Pam and most likely if your Linux you

00:26:46,870 --> 00:26:53,530
have Pam you can also install Pam crack

00:26:50,560 --> 00:26:55,360
lib which will actually run against

00:26:53,530 --> 00:26:57,310
crack lib to see if this password is

00:26:55,360 --> 00:27:02,640
insecure and if it is it will actually

00:26:57,310 --> 00:27:04,810
reject the password as well so two

00:27:02,640 --> 00:27:06,730
different ways of doing password

00:27:04,810 --> 00:27:08,680
validation doesn't tell you from you

00:27:06,730 --> 00:27:11,320
know 0 to 100 if this password is good

00:27:08,680 --> 00:27:13,780
it's not a strength indicator but it

00:27:11,320 --> 00:27:20,320
will actually give you a bit more finer

00:27:13,780 --> 00:27:23,470
grained options so to speak then there

00:27:20,320 --> 00:27:25,180
are also indications plugins and there

00:27:23,470 --> 00:27:28,450
are a whole bunch of sonication plugins

00:27:25,180 --> 00:27:31,720
God will before we down the right into

00:27:28,450 --> 00:27:35,830
them we should talk about how you today

00:27:31,720 --> 00:27:38,980
actually creates a user as I mentioned

00:27:35,830 --> 00:27:40,360
you can identify by a password and this

00:27:38,980 --> 00:27:43,900
will actually store the accounts in the

00:27:40,360 --> 00:27:45,310
user table of the MySQL database all my

00:27:43,900 --> 00:27:47,740
is content occasion for what it's worth

00:27:45,310 --> 00:27:51,100
since 55 has been delegated to plugins

00:27:47,740 --> 00:27:53,710
this does not happen without without the

00:27:51,100 --> 00:27:56,800
plugin interface marini beast since 52

00:27:53,710 --> 00:28:00,070
has also been focusing on plug-in

00:27:56,800 --> 00:28:02,260
authentication interface so when you run

00:28:00,070 --> 00:28:04,240
something like that you should always

00:28:02,260 --> 00:28:09,130
see the mysql native password and the

00:28:04,240 --> 00:28:12,730
old password options available so you

00:28:09,130 --> 00:28:15,850
can actually say create user foo

00:28:12,730 --> 00:28:19,030
identified by not password but I on

00:28:15,850 --> 00:28:22,420
defied by via mysql native password so

00:28:19,030 --> 00:28:25,320
identified by password via mysql made a

00:28:22,420 --> 00:28:28,260
password or via mysql old password i

00:28:25,320 --> 00:28:34,090
don't recommend you using mysql password

00:28:28,260 --> 00:28:37,020
at all anymore ever so it's there but

00:28:34,090 --> 00:28:37,020
you shouldn't use it

00:28:37,030 --> 00:28:41,920
and to make matters more fun there are

00:28:40,420 --> 00:28:55,330
also some more subtle differences

00:28:41,920 --> 00:28:58,270
between ah yes I have a question when

00:28:55,330 --> 00:29:01,720
you create a my sequel user using

00:28:58,270 --> 00:29:03,670
identified by password is that by

00:29:01,720 --> 00:29:05,590
default going to use the native password

00:29:03,670 --> 00:29:07,990
yes at least native roster more secure

00:29:05,590 --> 00:29:10,270
option yes by default will use my skull

00:29:07,990 --> 00:29:12,130
and a password okay so you don't

00:29:10,270 --> 00:29:14,250
actually have to specify at the after

00:29:12,130 --> 00:29:19,540
the password via mysql and a password

00:29:14,250 --> 00:29:23,680
it'll do it by default unless you change

00:29:19,540 --> 00:29:28,180
your config file a tur this is the lead

00:29:23,680 --> 00:29:32,460
on too that's it okay but it will not

00:29:28,180 --> 00:29:32,460
use the old password format by default

00:29:32,580 --> 00:29:39,160
so now comes the other subtle difference

00:29:36,040 --> 00:29:43,950
portion in where mysql and really be

00:29:39,160 --> 00:29:47,200
have different limits on user name sighs

00:29:43,950 --> 00:29:50,500
MariaDB basically gives you a 80

00:29:47,200 --> 00:29:53,020
character limit for a username whereas

00:29:50,500 --> 00:29:59,230
mysql gives you a 16 character limit and

00:29:53,020 --> 00:30:02,980
this is true even up to 57 and obviously

00:29:59,230 --> 00:30:05,410
to make matters fun in marais DB 55

00:30:02,980 --> 00:30:08,440
which you you know may get from red

00:30:05,410 --> 00:30:10,030
enterprise the next seven or sent OS you

00:30:08,440 --> 00:30:12,160
actually still have a 16 character limit

00:30:10,030 --> 00:30:14,860
but you can enable it and reload it

00:30:12,160 --> 00:30:17,530
manually to get up to 80 characters but

00:30:14,860 --> 00:30:20,640
in ready to be 10 onwards it becomes the

00:30:17,530 --> 00:30:23,740
default so you can have up to 80

00:30:20,640 --> 00:30:25,450
character usernames why you may want to

00:30:23,740 --> 00:30:28,320
do this maybe because you are

00:30:25,450 --> 00:30:32,680
automatically generating usernames I

00:30:28,320 --> 00:30:35,230
don't know but the option is there and

00:30:32,680 --> 00:30:40,000
people did use to say that 16 was not

00:30:35,230 --> 00:30:44,410
enough also when it comes to installing

00:30:40,000 --> 00:30:46,300
plugins it's worth noting that you

00:30:44,410 --> 00:30:49,390
normally have to type install plugin

00:30:46,300 --> 00:30:50,800
plugin name so name surname is the

00:30:49,390 --> 00:30:53,380
library

00:30:50,800 --> 00:30:57,490
and then you need to point to the name

00:30:53,380 --> 00:30:59,920
of the shadow object however in Moorea

00:30:57,490 --> 00:31:02,110
DB because we love playing around with

00:30:59,920 --> 00:31:03,910
plugins we have a shortcut you just say

00:31:02,110 --> 00:31:05,110
install so name and the and the plug-in

00:31:03,910 --> 00:31:08,770
and it'll actually loaded if it's in the

00:31:05,110 --> 00:31:11,350
plug-in directory so that's a Maria DB

00:31:08,770 --> 00:31:24,160
ism to save typing of maybe ten

00:31:11,350 --> 00:31:27,460
characters or so yes question yes it

00:31:24,160 --> 00:31:29,380
does support boats in Texas but if you

00:31:27,460 --> 00:31:31,360
don't want to use the long syntax I

00:31:29,380 --> 00:31:33,580
personally don't use the long syntax

00:31:31,360 --> 00:31:35,380
then it always trips me up when I go and

00:31:33,580 --> 00:31:38,380
test on MySQL because then I have to

00:31:35,380 --> 00:31:44,710
remember the long syntax I like

00:31:38,380 --> 00:31:47,140
shortcuts and all that introduction was

00:31:44,710 --> 00:31:49,420
to bring me to add socket so I mentioned

00:31:47,140 --> 00:31:51,430
I'll talk about this a little later

00:31:49,420 --> 00:31:52,510
earlier now if you use debian now you

00:31:51,430 --> 00:31:58,180
don't have to take photos by the way

00:31:52,510 --> 00:32:00,250
this all be on SlideShare now I'll

00:31:58,180 --> 00:32:02,830
socket basically authenticates against

00:32:00,250 --> 00:32:05,980
the unique socket file and it uses the

00:32:02,830 --> 00:32:09,130
soapy red sock adoption so basically

00:32:05,980 --> 00:32:11,290
when you install on debian now because

00:32:09,130 --> 00:32:14,650
it enables all socket by default if

00:32:11,290 --> 00:32:18,190
you're any user can in theory start up

00:32:14,650 --> 00:32:24,190
mysql and have have it be granted

00:32:18,190 --> 00:32:25,720
against that users username we're not

00:32:24,190 --> 00:32:28,510
really sure why the debian package has

00:32:25,720 --> 00:32:30,310
done that but it's so it's worth noting

00:32:28,510 --> 00:32:34,440
that this is a little different from

00:32:30,310 --> 00:32:36,820
everything else basically then you

00:32:34,440 --> 00:32:39,700
enough to actually even do create user

00:32:36,820 --> 00:32:41,860
foo at local certified without socket

00:32:39,700 --> 00:32:46,300
and that is why I was saying you need to

00:32:41,860 --> 00:32:48,460
be identified with because that's again

00:32:46,300 --> 00:32:51,270
where you know either my skill and a

00:32:48,460 --> 00:32:56,200
password or socket or you know ah spam

00:32:51,270 --> 00:32:58,330
so yeah if you end up using maury DB on

00:32:56,200 --> 00:33:01,090
debian ubuntu it needs no password

00:32:58,330 --> 00:33:03,550
because it basically goes in via sockets

00:33:01,090 --> 00:33:05,710
and obviously authentication wire

00:33:03,550 --> 00:33:10,570
sockets is supposed to be the fastest

00:33:05,710 --> 00:33:12,430
option this is obviously not loaded by

00:33:10,570 --> 00:33:17,020
default so you have to know this if you

00:33:12,430 --> 00:33:20,500
want as well and if I'm not mistaken

00:33:17,020 --> 00:33:24,460
this also does exist inside of MySQL 56

00:33:20,500 --> 00:33:28,060
this is not just a morir DB ism now what

00:33:24,460 --> 00:33:32,260
is a MySQL only ISM is sha-256 password

00:33:28,060 --> 00:33:36,100
which is available in 56 it will need an

00:33:32,260 --> 00:33:40,030
SSL built mysql and you also need to

00:33:36,100 --> 00:33:45,310
have the password key pass as well as

00:33:40,030 --> 00:33:48,100
the public key pass you the default is

00:33:45,310 --> 00:33:51,880
again using yazoo which is available in

00:33:48,100 --> 00:33:53,680
the mysql community version but if you

00:33:51,880 --> 00:33:56,110
end up using MySQL enterprise which

00:33:53,680 --> 00:33:58,690
which compiles against openssl you

00:33:56,110 --> 00:34:01,210
actually get RSA encryption and you can

00:33:58,690 --> 00:34:05,590
also be able to expose the RSA key

00:34:01,210 --> 00:34:10,620
values now the client will transmit the

00:34:05,590 --> 00:34:12,940
passwords during the connection and I

00:34:10,620 --> 00:34:16,870
don't know of anyone actually using this

00:34:12,940 --> 00:34:18,820
in production yet is anybody here have

00:34:16,870 --> 00:34:24,700
examples of people using this in

00:34:18,820 --> 00:34:28,210
production no so it's worth noting that

00:34:24,700 --> 00:34:30,910
with a sell used password it will be

00:34:28,210 --> 00:34:32,560
sent over you know clear text but over

00:34:30,910 --> 00:34:35,140
in a Cell encrypted connection but if

00:34:32,560 --> 00:34:37,570
the SLS is not used an RSA is available

00:34:35,140 --> 00:34:39,490
password will be sent with unencrypted

00:34:37,570 --> 00:34:42,520
connection but the password itself is

00:34:39,490 --> 00:34:44,950
our essay encrypted and if you detects

00:34:42,520 --> 00:34:50,260
no ssl RSA the connection will actually

00:34:44,950 --> 00:34:52,210
fail I've asked at various places if

00:34:50,260 --> 00:34:54,820
this gets used or I've not seen any of

00:34:52,210 --> 00:34:57,760
our customers that ready to be car

00:34:54,820 --> 00:34:59,590
business so again I'd be curious to know

00:34:57,760 --> 00:35:03,420
if people are using this and if we need

00:34:59,590 --> 00:35:03,420
this for ready be

00:35:06,269 --> 00:35:12,759
now we get to talk about the fun stuff

00:35:08,730 --> 00:35:16,150
like Pam there are three different time

00:35:12,759 --> 00:35:19,509
with education plugins available one

00:35:16,150 --> 00:35:22,869
from MySQL enterprise one from percona

00:35:19,509 --> 00:35:26,859
and one from Maria DB I've listed them

00:35:22,869 --> 00:35:28,509
only in order of release I'll work my

00:35:26,859 --> 00:35:32,220
scale came out with it first followed by

00:35:28,509 --> 00:35:34,900
percona and then really be awesome is

00:35:32,220 --> 00:35:37,420
full-featured uses the dialogue plug-in

00:35:34,900 --> 00:35:39,940
so dialogue the esso and can be loaded

00:35:37,420 --> 00:35:43,509
it'll be loaded automatically whereas

00:35:39,940 --> 00:35:45,160
off Pam compat uses the mysql clearpass

00:35:43,509 --> 00:35:49,210
a plug-in to remain compatible with an

00:35:45,160 --> 00:35:53,380
Oracle installation how many here you

00:35:49,210 --> 00:35:56,819
spam or want to use fam you probably

00:35:53,380 --> 00:36:01,900
already use pam if you use linux right

00:35:56,819 --> 00:36:04,390
so you can with pam do this that are

00:36:01,900 --> 00:36:05,859
pretty interesting like you spam ldap to

00:36:04,390 --> 00:36:08,559
authenticate against an ldap server

00:36:05,859 --> 00:36:10,359
again you configure this using time ldap

00:36:08,559 --> 00:36:13,650
and on debian you install things like

00:36:10,359 --> 00:36:15,880
limp am dash ldap and openldap as well

00:36:13,650 --> 00:36:21,269
of course the simplest way to get

00:36:15,880 --> 00:36:21,269
started is use EGC shadow authentication

00:36:21,720 --> 00:36:27,819
now if you have a conas server this is

00:36:26,289 --> 00:36:29,799
basically how you end up doing it you

00:36:27,819 --> 00:36:31,960
install the plug-in you create a user

00:36:29,799 --> 00:36:37,690
identified with off Pam and then you

00:36:31,960 --> 00:36:39,940
make sure in md / mysqld you have these

00:36:37,690 --> 00:36:43,029
few lines here about how you'd like to

00:36:39,940 --> 00:36:45,609
have Pam also working then you gotta

00:36:43,029 --> 00:36:48,489
change group so that MySQL can also

00:36:45,609 --> 00:36:57,759
actually read EGC shadow the mysql user

00:36:48,489 --> 00:36:59,859
ah yes question and before we go to the

00:36:57,759 --> 00:37:01,420
question percona spam plugin also as a

00:36:59,859 --> 00:37:02,859
supplementary group support which is

00:37:01,420 --> 00:37:04,480
something that no other Pam plugin

00:37:02,859 --> 00:37:07,660
authors so you can actually check

00:37:04,480 --> 00:37:10,690
against EGC group as well so we

00:37:07,660 --> 00:37:12,970
previously prototype them off or minus

00:37:10,690 --> 00:37:15,760
rise and got it all working and

00:37:12,970 --> 00:37:19,000
everything but the one issue we had was

00:37:15,760 --> 00:37:20,890
you know to do Pam off it appeared that

00:37:19,000 --> 00:37:23,650
you had I mean it has to send the

00:37:20,890 --> 00:37:25,569
password in clear text so we had to do

00:37:23,650 --> 00:37:28,450
the ssl that still trapped true or can

00:37:25,569 --> 00:37:32,650
it hatch you should still use a cell

00:37:28,450 --> 00:37:36,040
still using that yep that's like a mysql

00:37:32,650 --> 00:37:42,579
protocol thing yeah say I used to lose

00:37:36,040 --> 00:37:45,430
yourself and so that's how you do it in

00:37:42,579 --> 00:37:47,740
pagoda server well worth noting the

00:37:45,430 --> 00:37:51,069
group support exists but then if you're

00:37:47,740 --> 00:37:53,430
doing it in in Moorea DB it's again a

00:37:51,069 --> 00:37:56,440
little different so you'll notice

00:37:53,430 --> 00:37:59,400
installing plugins is now done by a

00:37:56,440 --> 00:38:02,470
little bit of a shortcut and it also

00:37:59,400 --> 00:38:04,660
even creating the user is identify do

00:38:02,470 --> 00:38:08,020
differently and the configuration inside

00:38:04,660 --> 00:38:10,270
of em is also different but the

00:38:08,020 --> 00:38:14,230
alternative is that you can also have

00:38:10,270 --> 00:38:16,150
service name so you can say it can be

00:38:14,230 --> 00:38:18,790
using the service name as well so using

00:38:16,150 --> 00:38:22,750
Maria DB Pam's you can have Pam service

00:38:18,790 --> 00:38:25,270
names in the marais DB plug-in so all

00:38:22,750 --> 00:38:31,390
again subtle differences between the

00:38:25,270 --> 00:38:34,060
plugins you need to use pam use clear

00:38:31,390 --> 00:38:38,619
text plugin for mysql so your question

00:38:34,060 --> 00:38:40,869
is kind of getting answered possible

00:38:38,619 --> 00:38:43,990
errors include connectors not supporting

00:38:40,869 --> 00:38:46,480
it because the client does not support

00:38:43,990 --> 00:38:48,880
authentication so maybe your connectors

00:38:46,480 --> 00:38:50,829
weren't built against the correct

00:38:48,880 --> 00:38:53,829
version of lib mysql client that has

00:38:50,829 --> 00:38:56,230
said support again if you use stuff from

00:38:53,829 --> 00:38:59,650
a linux distribution you should have now

00:38:56,230 --> 00:39:03,819
these problems but if you don't then you

00:38:59,650 --> 00:39:07,390
may have to recompile and lib mysql

00:39:03,819 --> 00:39:10,869
client is now provided by three

00:39:07,390 --> 00:39:13,569
different vendors and can cause some

00:39:10,869 --> 00:39:16,390
unpleasantness like if you were in dave

00:39:13,569 --> 00:39:18,220
talked earlier about workbench someone

00:39:16,390 --> 00:39:19,660
linked against a lib mysql client that

00:39:18,220 --> 00:39:23,450
would make workbench crash and he wrote

00:39:19,660 --> 00:39:25,370
the most colorful bug report ever

00:39:23,450 --> 00:39:38,050
made as ascii art with a middle finger

00:39:25,370 --> 00:39:41,270
and it wasn't even a bug now Cobras

00:39:38,050 --> 00:39:45,680
cross is basically industry-standard us

00:39:41,270 --> 00:39:49,880
for large client server systems the

00:39:45,680 --> 00:39:54,080
network off protocol using tickets if

00:39:49,880 --> 00:39:56,450
you are bored you can read all that if

00:39:54,080 --> 00:39:58,670
you interested to follow the progress of

00:39:56,450 --> 00:40:01,810
cobra sauce you can look at em bell for

00:39:58,670 --> 00:40:04,610
691 in maury davido org slash JIRA

00:40:01,810 --> 00:40:07,250
basically you have a principal username

00:40:04,610 --> 00:40:10,340
at cross realm so an example of that

00:40:07,250 --> 00:40:13,310
happening is that again I've now set

00:40:10,340 --> 00:40:20,030
identified by a Cobra's as user name at

00:40:13,310 --> 00:40:24,260
my car boss realm now this is Jess I

00:40:20,030 --> 00:40:27,290
api-based supported on Linux this

00:40:24,260 --> 00:40:29,360
plug-in will eventually support Windows

00:40:27,290 --> 00:40:32,180
sspi authentication as well at the

00:40:29,360 --> 00:40:34,250
moment it doesn't it only works

00:40:32,180 --> 00:40:37,910
currently with the maury DB Java client

00:40:34,250 --> 00:40:43,730
library so again this will not work with

00:40:37,910 --> 00:40:47,060
any regular connector and and if you're

00:40:43,730 --> 00:40:52,550
interested you can try it now yes

00:40:47,060 --> 00:40:55,520
question will this also requires oh well

00:40:52,550 --> 00:41:01,580
this also require ssl I haven't gotten

00:40:55,520 --> 00:41:07,940
that far to testing it yet so we'll make

00:41:01,580 --> 00:41:09,380
a note on but most likely yes it's

00:41:07,940 --> 00:41:12,020
notable that kerberos authentication

00:41:09,380 --> 00:41:14,150
typically doesn't well actually if

00:41:12,020 --> 00:41:16,010
you're doing true kerberos

00:41:14,150 --> 00:41:18,650
authentication is in single sign-on it

00:41:16,010 --> 00:41:21,890
does not Kerberos handle the encryption

00:41:18,650 --> 00:41:25,000
the craggy doesn't so yes so we're going

00:41:21,890 --> 00:41:28,550
to take this into two parts of making it

00:41:25,000 --> 00:41:29,780
making it available so to do to cabos

00:41:28,550 --> 00:41:31,820
author education will actually have to

00:41:29,780 --> 00:41:34,220
spend even more time and that's again

00:41:31,820 --> 00:41:37,390
why we don't have full sspi out support

00:41:34,220 --> 00:41:39,450
yet so I expect that that will come

00:41:37,390 --> 00:41:42,160
later release you're saying that

00:41:39,450 --> 00:41:47,770
currently corporates passwords is

00:41:42,160 --> 00:41:51,970
supported but not single sign-on yes it

00:41:47,770 --> 00:41:55,660
will it'll come in time and apparently i

00:41:51,970 --> 00:41:59,440
think the postgres team also spent a

00:41:55,660 --> 00:42:00,940
long time doing this and we are going to

00:41:59,440 --> 00:42:03,250
probably take the same amount of time

00:42:00,940 --> 00:42:05,530
and so far this only works like on maury

00:42:03,250 --> 00:42:09,310
DB we haven't even tested it on mysql

00:42:05,530 --> 00:42:15,040
it's just a tree in launchpad at the

00:42:09,310 --> 00:42:17,080
moment so hopefully it'll be out sooner

00:42:15,040 --> 00:42:19,690
rather than later and you can just test

00:42:17,080 --> 00:42:28,120
it in 10 watt against n1 if you download

00:42:19,690 --> 00:42:32,260
it from launch pad mysql 57 also has the

00:42:28,120 --> 00:42:34,990
no login plug in preventing all call

00:42:32,260 --> 00:42:39,550
client connections this started as an

00:42:34,990 --> 00:42:41,910
idea on mysql support guy Todd farmer

00:42:39,550 --> 00:42:44,950
but I don't think it's for anymore

00:42:41,910 --> 00:42:46,570
basically you can use this for accounts

00:42:44,950 --> 00:42:49,270
that need to be you know executing

00:42:46,570 --> 00:42:53,320
stored procedures or views with elevated

00:42:49,270 --> 00:42:56,530
privileges or even proxy accounts that

00:42:53,320 --> 00:42:58,750
you don't want direct plug in if you

00:42:56,530 --> 00:43:01,030
want examples of how to use that check

00:42:58,750 --> 00:43:03,790
out the docs as well okay we're going to

00:43:01,030 --> 00:43:06,640
move faster now I'm going to talk a

00:43:03,790 --> 00:43:09,910
little bit about audit plugins so that's

00:43:06,640 --> 00:43:13,330
authentication so far we've got pam pam

00:43:09,910 --> 00:43:14,950
gives you ssh passphrases time can also

00:43:13,330 --> 00:43:16,570
give you access to two factor

00:43:14,950 --> 00:43:19,150
authentication with Google Authenticator

00:43:16,570 --> 00:43:21,520
if you wanted you can also do it with

00:43:19,150 --> 00:43:25,840
Aussie which is a like a twilio company

00:43:21,520 --> 00:43:28,420
and all bunch other things so we're

00:43:25,840 --> 00:43:29,650
pretty square square square and Pam code

00:43:28,420 --> 00:43:34,450
well should be the next thing that we

00:43:29,650 --> 00:43:36,280
get people do also like Active Directory

00:43:34,450 --> 00:43:39,130
to some extent and that's only available

00:43:36,280 --> 00:43:43,440
in my skull enterprise there is no like

00:43:39,130 --> 00:43:43,440
open version of that

00:43:44,350 --> 00:43:49,910
other plugins a simple error logging

00:43:47,780 --> 00:43:52,400
plug-in exists that basically going to

00:43:49,910 --> 00:43:55,970
log all errors that are sent to a client

00:43:52,400 --> 00:43:59,600
into a log file this plug-in comes

00:43:55,970 --> 00:44:02,090
shipping inside of a DB but this plug-in

00:43:59,600 --> 00:44:04,360
also will work with anything that

00:44:02,090 --> 00:44:07,010
supposed to the mysql audit plug-in API

00:44:04,360 --> 00:44:11,600
which basically means it also work on

00:44:07,010 --> 00:44:14,360
percona server as well as mysql this is

00:44:11,600 --> 00:44:17,030
a pretty simple plugin which leads us to

00:44:14,360 --> 00:44:20,780
the more complex plugin which is the

00:44:17,030 --> 00:44:23,540
audit plugin there are now four

00:44:20,780 --> 00:44:27,950
different types of audit plugins one by

00:44:23,540 --> 00:44:30,590
my high school enterprise one by mcafee

00:44:27,950 --> 00:44:33,860
so McAfee has the other plugin that is

00:44:30,590 --> 00:44:39,710
probably the oldest one by percona and

00:44:33,860 --> 00:44:42,350
one by Maria DB they all offer different

00:44:39,710 --> 00:44:46,790
sets of features and also all four

00:44:42,350 --> 00:44:51,860
different sets of compatibility yes i

00:44:46,790 --> 00:44:53,570
know this is cringe-worthy you basically

00:44:51,860 --> 00:44:55,910
can see you connects to the server what

00:44:53,570 --> 00:44:58,100
queries are being run what tables being

00:44:55,910 --> 00:44:59,930
touched as long as all of these are not

00:44:58,100 --> 00:45:01,580
served by the query cache because even

00:44:59,930 --> 00:45:05,240
served by the query cache no tables are

00:45:01,580 --> 00:45:07,880
open Petronas audit plugin offers you

00:45:05,240 --> 00:45:09,980
multiple output formats you can get xml

00:45:07,880 --> 00:45:13,520
you can get json see it you're even

00:45:09,980 --> 00:45:15,560
logged to syslog and it has something

00:45:13,520 --> 00:45:17,780
very similar to what my scale

00:45:15,560 --> 00:45:19,700
enterprises audit log plugin has call

00:45:17,780 --> 00:45:22,700
the audit log strategy because auditing

00:45:19,700 --> 00:45:26,210
can be expensive may want to have maybe

00:45:22,700 --> 00:45:30,610
auditing performed basic or you know

00:45:26,210 --> 00:45:30,610
fully sync or semi sync and so forth

00:45:32,020 --> 00:45:38,090
mcafee is audit plugin very mature but

00:45:36,560 --> 00:45:40,250
actually does something known as server

00:45:38,090 --> 00:45:41,810
offsets so you can't upgrade immediately

00:45:40,250 --> 00:45:43,730
if you end up using the mcafee or a

00:45:41,810 --> 00:45:45,770
plug-in unless you run your own offsets

00:45:43,730 --> 00:45:49,550
against the server but they do update

00:45:45,770 --> 00:45:51,590
the offsets pretty quickly on github and

00:45:49,550 --> 00:45:54,470
then there's the Marini be on it plugin

00:45:51,590 --> 00:45:56,150
which is extended the audit API which

00:45:54,470 --> 00:45:56,690
will then allow you to do user filtering

00:45:56,150 --> 00:46:00,050
in

00:45:56,690 --> 00:46:02,630
I are using the audit plugin now there

00:46:00,050 --> 00:46:04,910
are tools that actually can look at

00:46:02,630 --> 00:46:06,950
these audit plugins so if you use MySQL

00:46:04,910 --> 00:46:12,079
utilities there's a I believe it's

00:46:06,950 --> 00:46:15,200
called MySQL grab on it and that can

00:46:12,079 --> 00:46:16,880
grab the audit files of enterprise

00:46:15,200 --> 00:46:19,369
server and Percona but it can't actually

00:46:16,880 --> 00:46:23,390
grab the audit files of the Maria DB on

00:46:19,369 --> 00:46:25,700
a plugin now the marina be on a plug-in

00:46:23,390 --> 00:46:27,589
used to actually write passwords to the

00:46:25,700 --> 00:46:31,430
audit file too because those auditing

00:46:27,589 --> 00:46:33,829
fully so now in masks passwords and 1.2

00:46:31,430 --> 00:46:38,720
release also allows you to track

00:46:33,829 --> 00:46:41,960
password changes so for audit plugins

00:46:38,720 --> 00:46:48,680
all doing various various different

00:46:41,960 --> 00:46:50,569
things SQL roles mysql doesn't do SQL

00:46:48,680 --> 00:46:52,130
roles though I learned something new at

00:46:50,569 --> 00:46:54,050
the workbench talk I didn't realize you

00:46:52,130 --> 00:46:56,930
could actually have visual roles in

00:46:54,050 --> 00:46:58,790
workbench that was kind of handy but he

00:46:56,930 --> 00:47:03,230
doesn't get exported to the server layer

00:46:58,790 --> 00:47:05,480
now nothing really fancy this has been

00:47:03,230 --> 00:47:07,990
around since Maury DB 10 it was a google

00:47:05,480 --> 00:47:10,940
summer of code project it brought roles

00:47:07,990 --> 00:47:13,609
tumor a DB so if you haven't used Maury

00:47:10,940 --> 00:47:17,180
DB you have a scale row row support and

00:47:13,609 --> 00:47:19,280
in 10.1 there also be default assigned

00:47:17,180 --> 00:47:21,700
to users so everyone starts off with the

00:47:19,280 --> 00:47:25,400
default role and then you create roles

00:47:21,700 --> 00:47:31,369
so we're making it more standards

00:47:25,400 --> 00:47:34,900
compliant now what is cool that's also

00:47:31,369 --> 00:47:37,310
available in only Maria DB is encryption

00:47:34,900 --> 00:47:39,170
now again you can't use this in

00:47:37,310 --> 00:47:41,500
production today you should download 10

00:47:39,170 --> 00:47:44,569
15 which is a beta release and

00:47:41,500 --> 00:47:47,089
encryption allows you to now encrypt not

00:47:44,569 --> 00:47:49,849
just the whole table space but also can

00:47:47,089 --> 00:47:53,089
encrypt tables there is support for

00:47:49,849 --> 00:47:54,680
rolling keys previously you may have you

00:47:53,089 --> 00:47:56,839
may see documentation on the internet

00:47:54,680 --> 00:47:59,030
that says you should set page underscore

00:47:56,839 --> 00:48:04,150
encryption equals 1 this works up to

00:47:59,030 --> 00:48:06,740
maury DB 10 13 in 10 14 disco torn out

00:48:04,150 --> 00:48:09,650
now everything basically you use this

00:48:06,740 --> 00:48:10,640
table space encryption but also extended

00:48:09,650 --> 00:48:12,619
to do table encryption

00:48:10,640 --> 00:48:14,299
it's worth noting that this is not a

00:48:12,619 --> 00:48:16,880
feature we wrote this is a feature that

00:48:14,299 --> 00:48:20,059
google wrote Google is using this in

00:48:16,880 --> 00:48:24,829
production google has graciously donated

00:48:20,059 --> 00:48:27,079
the code we've done benchmarks around

00:48:24,829 --> 00:48:31,250
the 10 13 days where we saw the over it

00:48:27,079 --> 00:48:34,460
to be around ten percent no more google

00:48:31,250 --> 00:48:36,049
says this is absolutely untrue it is

00:48:34,460 --> 00:48:38,390
much lower than that for them in

00:48:36,049 --> 00:48:40,549
production and we probably need to run

00:48:38,390 --> 00:48:43,730
benchmarks again because now we have a

00:48:40,549 --> 00:48:46,519
much more compliant lineage of code that

00:48:43,730 --> 00:48:49,609
google has it works for extra debian

00:48:46,519 --> 00:48:52,819
innodb it works alongside compression

00:48:49,609 --> 00:48:54,349
the work we've done with fusion io it

00:48:52,819 --> 00:48:58,640
also works for temporary tables we

00:48:54,349 --> 00:49:00,289
handle thumri tables using Aria and you

00:48:58,640 --> 00:49:02,930
use this thing called e-file key

00:49:00,289 --> 00:49:05,000
management plugin we're here you have

00:49:02,930 --> 00:49:08,029
things like a file name where the file

00:49:05,000 --> 00:49:11,869
is located you also need an optional key

00:49:08,029 --> 00:49:15,099
to decrypt the key file and also the

00:49:11,869 --> 00:49:18,319
algorithm which is a es now you don't

00:49:15,099 --> 00:49:20,150
realistically want to do this on a file

00:49:18,319 --> 00:49:22,609
you don't want to store your decryption

00:49:20,150 --> 00:49:26,029
stuff on like a on a thumb drive that's

00:49:22,609 --> 00:49:27,799
just crazy you need to have a key server

00:49:26,029 --> 00:49:30,500
so Google has their own little key

00:49:27,799 --> 00:49:35,119
server that's not open source Ebury

00:49:30,500 --> 00:49:38,059
sells a key server eper IDE they sell a

00:49:35,119 --> 00:49:39,230
key server it's currently free because I

00:49:38,059 --> 00:49:43,569
think you have to ask for an evaluation

00:49:39,230 --> 00:49:47,269
license and you can evaluate it forever

00:49:43,569 --> 00:49:49,190
however I'm sure that eventually there

00:49:47,269 --> 00:49:51,559
will be some kind of key server that

00:49:49,190 --> 00:49:53,509
even we end up writing I don't know if

00:49:51,559 --> 00:49:56,150
that will be open source or that'll be a

00:49:53,509 --> 00:49:58,900
Maria DB enterprise product or whatever

00:49:56,150 --> 00:50:03,019
I can't predict that that kind of future

00:49:58,900 --> 00:50:04,849
but you don't want to be starring your

00:50:03,019 --> 00:50:09,259
keys on like a thumb drive or the file

00:50:04,849 --> 00:50:11,420
system that's this doesn't work today

00:50:09,259 --> 00:50:14,119
the key file will have encryption key

00:50:11,420 --> 00:50:17,750
identifiers you can go anywhere between

00:50:14,119 --> 00:50:21,710
1 and 28 to run 256-bit keys you have to

00:50:17,750 --> 00:50:23,450
create keys using openssl so it's for

00:50:21,710 --> 00:50:24,549
you to try this it should be relatively

00:50:23,450 --> 00:50:26,709
simple

00:50:24,549 --> 00:50:28,420
you need to configure this in my dad CNF

00:50:26,709 --> 00:50:32,650
you've got to add a whole bunch of new

00:50:28,420 --> 00:50:35,170
options don't bother reading that then

00:50:32,650 --> 00:50:36,880
when you decide that you want to have an

00:50:35,170 --> 00:50:39,069
encryption now if you just if you don't

00:50:36,880 --> 00:50:40,420
want to have the entire table space at

00:50:39,069 --> 00:50:42,339
cryptid and you just want on a table

00:50:40,420 --> 00:50:45,160
bases to be encrypted you need to say

00:50:42,339 --> 00:50:48,640
yes please a crypt said table and also

00:50:45,160 --> 00:50:52,630
provide a key ID that was basically kept

00:50:48,640 --> 00:50:54,819
inside the key file this is again why

00:50:52,630 --> 00:51:02,049
you need to have external key management

00:50:54,819 --> 00:51:05,890
somehow now you need to pick an

00:51:02,049 --> 00:51:07,660
encryption algorithm you also need to

00:51:05,890 --> 00:51:09,849
specify if you'd like to you know

00:51:07,660 --> 00:51:12,400
encrypt all innodb tables encrypt all

00:51:09,849 --> 00:51:16,179
Aria tables and crypt temporary dish

00:51:12,400 --> 00:51:19,209
tables also you can encrypt logs it's

00:51:16,179 --> 00:51:20,949
worth noting that the inner DB

00:51:19,209 --> 00:51:22,299
encryption threads equals four basically

00:51:20,949 --> 00:51:24,160
says that's the number of threads

00:51:22,299 --> 00:51:26,259
providing background key rotation and

00:51:24,160 --> 00:51:29,039
scrubbing you can increase this if you

00:51:26,259 --> 00:51:31,209
like also the rotation of the key age

00:51:29,039 --> 00:51:33,279
basically what that does is it rien

00:51:31,209 --> 00:51:35,650
crypts in the background all pages that

00:51:33,279 --> 00:51:38,829
were encrypted with a key at least that

00:51:35,650 --> 00:51:41,529
many versions old I've already mentioned

00:51:38,829 --> 00:51:44,339
the Maria DB uses RAF on temporary

00:51:41,529 --> 00:51:48,099
tables that don't fit into memory itself

00:51:44,339 --> 00:51:50,499
you can int n1 obviously change the

00:51:48,099 --> 00:51:52,949
temporary table as well by doing default

00:51:50,499 --> 00:51:56,739
m storage engine just like you can in 56

00:51:52,949 --> 00:51:59,920
but if you don't use in a DB actually be

00:51:56,739 --> 00:52:03,309
aria you don't get any encryption we

00:51:59,920 --> 00:52:07,359
also provide a tablespace scrubbing so

00:52:03,309 --> 00:52:09,130
that basically means that the data that

00:52:07,359 --> 00:52:11,019
is deleted is actually really gone

00:52:09,130 --> 00:52:13,949
because if you stall personal

00:52:11,019 --> 00:52:16,420
information maybe a credit card number

00:52:13,949 --> 00:52:18,279
what actually happens is when the row is

00:52:16,420 --> 00:52:20,529
deleted the page is marked is free but

00:52:18,279 --> 00:52:23,380
if you want to scrub it scrubbing will

00:52:20,529 --> 00:52:25,630
actually insure it over ice the data but

00:52:23,380 --> 00:52:27,809
if you don't have tablespace scrubbing

00:52:25,630 --> 00:52:30,939
the data may eventually get overwritten

00:52:27,809 --> 00:52:33,489
so make sure make sure you also

00:52:30,939 --> 00:52:35,559
obviously running with scrubbing and we

00:52:33,489 --> 00:52:38,320
made a whole bunch changes so 10 13 to

00:52:35,559 --> 00:52:40,240
10 14 made some incompatible

00:52:38,320 --> 00:52:43,570
on these changes but hey this is why

00:52:40,240 --> 00:52:45,760
we're in beta right 10 15 introduced the

00:52:43,570 --> 00:52:48,490
concept that you can now also encrypt

00:52:45,760 --> 00:52:56,620
temporary files that includes binary La

00:52:48,490 --> 00:52:58,330
Cage caches file sorts and so forth we

00:52:56,620 --> 00:53:01,600
have not gotten the code to encrypt

00:52:58,330 --> 00:53:04,570
binary logs from google yet we expect

00:53:01,600 --> 00:53:06,190
that to come soon but yeah that they

00:53:04,570 --> 00:53:12,100
have said they will open source that but

00:53:06,190 --> 00:53:14,590
it hasn't come yet I apparently they run

00:53:12,100 --> 00:53:21,580
fully and encrypted including with they

00:53:14,590 --> 00:53:23,950
have been logs encrypted so a whole

00:53:21,580 --> 00:53:28,740
bunch of changes we expect things will

00:53:23,950 --> 00:53:35,110
actually improve it is still very much

00:53:28,740 --> 00:53:37,210
in beta try it setting it up is not very

00:53:35,110 --> 00:53:39,730
complex it'll take you maybe 15-20

00:53:37,210 --> 00:53:42,010
minutes but once you set it up you can

00:53:39,730 --> 00:53:44,410
play with it feel free to break it in

00:53:42,010 --> 00:53:46,870
fact 10 13 when we released was actually

00:53:44,410 --> 00:53:50,380
broken it wasn't encrypting stuff it was

00:53:46,870 --> 00:53:55,870
encrypting it but it was easy geek rip

00:53:50,380 --> 00:53:59,260
tible preventing SQL injections I also

00:53:55,870 --> 00:54:00,880
mentioned I'll talk about that I don't

00:53:59,260 --> 00:54:02,650
have much experience with the MySQL

00:54:00,880 --> 00:54:05,170
enterprise firewall which is released at

00:54:02,650 --> 00:54:08,410
the end of april of this year it works

00:54:05,170 --> 00:54:11,230
against 56 but by default it now

00:54:08,410 --> 00:54:14,020
apparently comes the server side it can

00:54:11,230 --> 00:54:15,850
it's an application-level firewall that

00:54:14,020 --> 00:54:19,270
can you know permit or deny sequel

00:54:15,850 --> 00:54:23,230
statements based on pattern matching it

00:54:19,270 --> 00:54:30,660
looks for whitelists it also works on a

00:54:23,230 --> 00:54:36,280
per account basis you have to pay for it

00:54:30,660 --> 00:54:38,500
so the other option is max scale which

00:54:36,280 --> 00:54:42,790
has a database firewall filter which

00:54:38,500 --> 00:54:45,820
also became GA like sometime last year

00:54:42,790 --> 00:54:48,610
and the firewall filter probably like at

00:54:45,820 --> 00:54:50,800
the end of January this year if you can

00:54:48,610 --> 00:54:52,059
write regular expressions you can

00:54:50,800 --> 00:54:53,920
actually look a lot

00:54:52,059 --> 00:54:58,630
use the database firewall filter for

00:54:53,920 --> 00:55:01,150
this exact purpose so the obviously the

00:54:58,630 --> 00:55:02,529
caveat is that max scale is like it's

00:55:01,150 --> 00:55:04,959
not in the server it's actually

00:55:02,529 --> 00:55:07,180
happening as a proxy layer so it's

00:55:04,959 --> 00:55:09,400
either it can also be your load balancer

00:55:07,180 --> 00:55:11,920
it can be a connection router but it can

00:55:09,400 --> 00:55:13,630
also be your database firewall filter

00:55:11,920 --> 00:55:16,479
because it has something called the

00:55:13,630 --> 00:55:19,539
database firewall filter as a plug-in

00:55:16,479 --> 00:55:22,869
and the plugin is is fully baked and you

00:55:19,539 --> 00:55:24,729
just have to write rules for it and the

00:55:22,869 --> 00:55:27,759
rules are also fairly easy if you know

00:55:24,729 --> 00:55:29,769
if you can read and write reg ex and you

00:55:27,759 --> 00:55:31,539
can't there's this wonderful book called

00:55:29,769 --> 00:55:34,199
mastering regular expressions that

00:55:31,539 --> 00:55:41,439
O'Reilly makes I highly recommend

00:55:34,199 --> 00:55:44,079
reading it besides man regex so two

00:55:41,439 --> 00:55:45,729
options one open one not there also a

00:55:44,079 --> 00:55:48,130
whole bunch other like commercial

00:55:45,729 --> 00:55:49,359
products greensql and so forth which I

00:55:48,130 --> 00:56:00,099
have no interest in talking about

00:55:49,359 --> 00:56:04,619
question a more of a statement i guess a

00:56:00,099 --> 00:56:08,650
caveat to the proxy solution obviously

00:56:04,619 --> 00:56:11,679
creates a problem for the requirement of

00:56:08,650 --> 00:56:13,449
SSL connections from the client yes and

00:56:11,679 --> 00:56:17,979
hence the ability reason why we could go

00:56:13,449 --> 00:56:19,599
to pam yes so that the whole a cell

00:56:17,979 --> 00:56:21,849
issue has also been brought up with

00:56:19,599 --> 00:56:24,969
regards to mexico and mexico does not

00:56:21,849 --> 00:56:26,619
have native SL support yet I wonder if

00:56:24,969 --> 00:56:30,670
you open that issue up or something

00:56:26,619 --> 00:56:31,809
because actually it was the MySQL proxy

00:56:30,670 --> 00:56:32,890
that we're using from my school

00:56:31,809 --> 00:56:34,529
enterprise we're still on that we

00:56:32,890 --> 00:56:37,390
haven't moved at all performance yeah I

00:56:34,529 --> 00:56:39,130
yeah and I don't even think mysql is my

00:56:37,390 --> 00:56:40,929
skill now yeah I've been trying to get

00:56:39,130 --> 00:56:43,329
us off for a while but I mean if they'd

00:56:40,929 --> 00:56:45,910
met 11-3 doesn't even use my skill

00:56:43,329 --> 00:56:53,369
brooksie so I know is that products

00:56:45,910 --> 00:56:53,369
alive Dave that was a release last year

00:56:54,940 --> 00:57:02,420
okay yeah so yeah I wouldn't yeah but

00:57:00,260 --> 00:57:04,390
Mexico will actually get client-side a

00:57:02,420 --> 00:57:07,850
cell support as well so that should be

00:57:04,390 --> 00:57:12,200
kinda useful but that's not that yet

00:57:07,850 --> 00:57:14,560
either so these are the current options

00:57:12,200 --> 00:57:17,000
you have for preventing SQL injections

00:57:14,560 --> 00:57:18,920
they're also whole bunch of resources

00:57:17,000 --> 00:57:22,130
that are probably well worth looking at

00:57:18,920 --> 00:57:26,120
one of them is oak security audit which

00:57:22,130 --> 00:57:29,390
you can get from alam ii know who wrote

00:57:26,120 --> 00:57:32,210
these oak tools a while back he now

00:57:29,390 --> 00:57:35,660
works at booking.com that Darren says

00:57:32,210 --> 00:57:37,550
ours got a pretty has not been a new

00:57:35,660 --> 00:57:40,370
release of security but it's not too bad

00:57:37,550 --> 00:57:43,580
like it still works and if you want to

00:57:40,370 --> 00:57:47,690
read how Google actually encrypts all

00:57:43,580 --> 00:57:51,200
why SQL data there's a wonderful talk by

00:57:47,690 --> 00:57:53,000
jeremy cole and yanez orland at the

00:57:51,200 --> 00:57:55,970
pro/con alive santa clara conference

00:57:53,000 --> 00:57:59,300
earlier this year if you go to bit ly

00:57:55,970 --> 00:58:01,580
dot well bit ly / google in a DB

00:57:59,300 --> 00:58:04,940
encryption you can see wonderful

00:58:01,580 --> 00:58:06,470
diagrams as to how this happens but for

00:58:04,940 --> 00:58:09,950
you to understand it you have to know

00:58:06,470 --> 00:58:13,550
inner DB internals pretty well or look

00:58:09,950 --> 00:58:16,730
at the inner DV rupee to set available

00:58:13,550 --> 00:58:20,210
also from Jeremy Cole on github which

00:58:16,730 --> 00:58:24,680
will help you visualize what innodb does

00:58:20,210 --> 00:58:32,180
on disk so those are a few resources

00:58:24,680 --> 00:58:36,380
that could be handy with that I have

00:58:32,180 --> 00:58:38,000
less than a minute I'm open to questions

00:58:36,380 --> 00:58:40,400
though I'm glad you asked questions

00:58:38,000 --> 00:58:45,520
during the talk as well so you have any

00:58:40,400 --> 00:58:50,900
questions I'm care to try to answer them

00:58:45,520 --> 00:58:55,720
it does anybody have a question that

00:58:50,900 --> 00:58:55,720
wasn't already asked okay

00:59:00,210 --> 00:59:06,400
I was also at your mysql ecosystem one

00:59:03,790 --> 00:59:11,140
um covering the percona my school

00:59:06,400 --> 00:59:13,900
variety be environment and it seems to

00:59:11,140 --> 00:59:16,930
me that this talk it's even more evident

00:59:13,900 --> 00:59:20,770
the virgin divergent circuit Parcher of

00:59:16,930 --> 00:59:23,260
variety be from the other two and or you

00:59:20,770 --> 00:59:27,780
know do you have any comment on you know

00:59:23,260 --> 00:59:31,060
where that's going or how you know

00:59:27,780 --> 00:59:32,890
probably know we're considering whether

00:59:31,060 --> 00:59:35,350
we not we need to stick with MySQL

00:59:32,890 --> 00:59:37,150
enterprise or we should be looking more

00:59:35,350 --> 00:59:41,500
seriously Mariah DB but questions of

00:59:37,150 --> 00:59:45,730
divergence or concerning to us yeah so

00:59:41,500 --> 00:59:49,980
really be has been diverging for quite

00:59:45,730 --> 00:59:53,800
some time it has nuances it has

00:59:49,980 --> 00:59:56,310
sometimes more features than shipping

00:59:53,800 --> 00:59:59,050
mysql sometimes it has less features

00:59:56,310 --> 01:00:05,440
like say the mysql and a password option

00:59:59,050 --> 01:00:07,690
wasn't there until recently now should

01:00:05,440 --> 01:00:10,660
you stick to mysql enterprise or more a

01:00:07,690 --> 01:00:13,060
DB it's hard for me to tell you which

01:00:10,660 --> 01:00:15,640
one to pick objectively naturally i'm

01:00:13,060 --> 01:00:17,650
going to say switch to maria DB because

01:00:15,640 --> 01:00:20,380
i have mime already be hats on but at

01:00:17,650 --> 01:00:22,570
the same time to be very fair the other

01:00:20,380 --> 01:00:37,570
ecosystem players are doing a good job

01:00:22,570 --> 01:00:40,600
to now no this is this is we recorded

01:00:37,570 --> 01:00:44,650
our marketing people might see it they

01:00:40,600 --> 01:00:48,400
might get angry with me so yes there is

01:00:44,650 --> 01:00:50,230
divergence the question is do you do you

01:00:48,400 --> 01:00:53,380
foresee yourself using a feature that's

01:00:50,230 --> 01:00:55,570
available in maria DB now do you foresee

01:00:53,380 --> 01:00:58,450
yourself working with the maria DB team

01:00:55,570 --> 01:01:01,150
to get you on set said roadmap to get

01:00:58,450 --> 01:01:04,480
you know a feature in in the next 12

01:01:01,150 --> 01:01:07,450
months where the roadmaps maybe are more

01:01:04,480 --> 01:01:08,650
public do you you know have a reason to

01:01:07,450 --> 01:01:10,480
switch

01:01:08,650 --> 01:01:13,089
are you finding your Oracle Enterprise

01:01:10,480 --> 01:01:15,490
bills to be too expensive that you know

01:01:13,089 --> 01:01:18,160
you could get a good discount that same

01:01:15,490 --> 01:01:21,309
rainy be cooperation or even Percona for

01:01:18,160 --> 01:01:23,500
that matter that that all these things

01:01:21,309 --> 01:01:26,619
should help you know you figure out a

01:01:23,500 --> 01:01:29,250
choice who is who's got the more helpful

01:01:26,619 --> 01:01:34,240
consultant more more entertaining

01:01:29,250 --> 01:01:37,150
salesperson but beyond that I think the

01:01:34,240 --> 01:01:39,250
technical features are such that really

01:01:37,150 --> 01:01:42,640
be the team does not really depend on

01:01:39,250 --> 01:01:46,260
Oracle to release mysql we've been

01:01:42,640 --> 01:01:49,779
making releases in parallel without

01:01:46,260 --> 01:01:52,180
features being there in mysql sometimes

01:01:49,779 --> 01:01:54,220
there's innovation today so if you you

01:01:52,180 --> 01:01:58,960
know what maybe multi-source replication

01:01:54,220 --> 01:02:03,039
or you want virtual columns AK generated

01:01:58,960 --> 01:02:06,609
columns you want random other features

01:02:03,039 --> 01:02:09,549
that exist you want GT ID that does not

01:02:06,609 --> 01:02:14,140
require to restart topologies today you

01:02:09,549 --> 01:02:16,599
can use Maria DB but my scale 57 I will

01:02:14,140 --> 01:02:20,770
introduce some of those features too but

01:02:16,599 --> 01:02:24,670
Maury db10 had them GA since the last

01:02:20,770 --> 01:02:29,559
April they are no last March so giving

01:02:24,670 --> 01:02:32,680
you the answer objectively is obviously

01:02:29,559 --> 01:02:35,319
hard but you should obviously look at

01:02:32,680 --> 01:02:38,230
your technical requirements your

01:02:35,319 --> 01:02:40,869
abilities you should evaluate all but as

01:02:38,230 --> 01:02:44,319
a consumer I think the good thing for

01:02:40,869 --> 01:02:46,299
you is if you're paying money now you

01:02:44,319 --> 01:02:49,000
can still pay money to all the other

01:02:46,299 --> 01:02:51,609
vendors and most likely you can drive

01:02:49,000 --> 01:02:53,349
the cost of your paying money's down now

01:02:51,609 --> 01:02:56,799
because they're there is a lot of

01:02:53,349 --> 01:03:00,099
competition I a lot of people would use

01:02:56,799 --> 01:03:01,869
the card very large companies use the

01:03:00,099 --> 01:03:04,089
card saying oh you know we're going to

01:03:01,869 --> 01:03:06,220
split our work between all vendors

01:03:04,089 --> 01:03:09,130
because that means one vendor won't

01:03:06,220 --> 01:03:11,410
charge us n million dollars all vendors

01:03:09,130 --> 01:03:16,210
together will charges 1 million dollars

01:03:11,410 --> 01:03:19,150
and that is your benefit today yes we

01:03:16,210 --> 01:03:21,490
will diverge yes we have diverged but

01:03:19,150 --> 01:03:22,360
that doesn't mean there isn't you know

01:03:21,490 --> 01:03:23,770
good good

01:03:22,360 --> 01:03:27,430
features going in there is in good

01:03:23,770 --> 01:03:29,700
quality they aren't users there's a lot

01:03:27,430 --> 01:03:29,700
of users

01:04:12,369 --> 01:04:16,880
Citrix XenServer gives you everything

01:04:14,660 --> 01:04:19,849
you need to integrate manage and

01:04:16,880 --> 01:04:21,979
automate a virtual data center all on an

01:04:19,849 --> 01:04:24,380
enterprise-class cloud proven virtual

01:04:21,979 --> 01:04:27,109
platform and at a third of the cost of

01:04:24,380 --> 01:04:28,849
other solutions but why even bother with

01:04:27,109 --> 01:04:31,009
virtualizing your server infrastructure

01:04:28,849 --> 01:04:32,959
in the first place well let's say you

01:04:31,009 --> 01:04:35,269
have a traditional one server to one

01:04:32,959 --> 01:04:37,279
application architecture but you're

01:04:35,269 --> 01:04:39,829
running out of resources and performance

01:04:37,279 --> 01:04:42,130
is suffering once you order new server

01:04:39,829 --> 01:04:45,019
hardware you'll wait for delivery

01:04:42,130 --> 01:04:47,959
configure it install your business

01:04:45,019 --> 01:04:50,719
application stage and test the server

01:04:47,959 --> 01:04:53,029
and finally add it to your production

01:04:50,719 --> 01:04:55,249
farm if you've been through this process

01:04:53,029 --> 01:04:57,829
before you know it can take weeks or

01:04:55,249 --> 01:04:59,569
even months you also know it's a

01:04:57,829 --> 01:05:01,579
manually intensive process that will

01:04:59,569 --> 01:05:03,740
burden your team every time you outgrow

01:05:01,579 --> 01:05:06,050
your current setup

01:05:03,740 --> 01:05:07,880
with a virtual server solution you could

01:05:06,050 --> 01:05:10,670
accomplish all of that in less than half

01:05:07,880 --> 01:05:13,369
a day server virtualization software

01:05:10,670 --> 01:05:15,770
separates the OS and application from

01:05:13,369 --> 01:05:17,660
the underlying server hardware and with

01:05:15,770 --> 01:05:19,730
multiple virtual machines on a single

01:05:17,660 --> 01:05:22,700
server you can use each of them to run

01:05:19,730 --> 01:05:24,440
different os's and applications this

01:05:22,700 --> 01:05:26,330
makes it possible to move your virtual

01:05:24,440 --> 01:05:28,730
machines from one piece of hardware to

01:05:26,330 --> 01:05:30,980
another whenever you want to maximize

01:05:28,730 --> 01:05:32,960
utilization simplify maintenance or

01:05:30,980 --> 01:05:35,270
recover from a hardware failure and

01:05:32,960 --> 01:05:38,150
without slowing down your applications

01:05:35,270 --> 01:05:41,210
or users clearly server virtualization

01:05:38,150 --> 01:05:44,270
provides big benefits and Citrix

01:05:41,210 --> 01:05:46,520
XenServer provides even more since it's

01:05:44,270 --> 01:05:48,320
built on an open platform xenserver

01:05:46,520 --> 01:05:50,480
plays well with your existing hardware

01:05:48,320 --> 01:05:52,790
storage systems and IT management

01:05:50,480 --> 01:05:55,550
software as well as with the industry's

01:05:52,790 --> 01:05:57,560
leading cloud service providers best of

01:05:55,550 --> 01:05:59,270
all you can get started by downloading a

01:05:57,560 --> 01:06:02,510
fully functional production ready

01:05:59,270 --> 01:06:04,730
version of xenserver for free after a

01:06:02,510 --> 01:06:06,830
10-minute installation process you'll

01:06:04,730 --> 01:06:08,869
see how easy it is to start virtualizing

01:06:06,830 --> 01:06:11,330
your workloads and automating your IT

01:06:08,869 --> 01:06:12,920
management processes and when you're

01:06:11,330 --> 01:06:14,840
ready for a richer set of management

01:06:12,920 --> 01:06:17,330
tools just upgrade to one of the premium

01:06:14,840 --> 01:06:19,160
editions of xenserver so whether you're

01:06:17,330 --> 01:06:21,109
interested in virtualizing servers for

01:06:19,160 --> 01:06:23,390
the first time expanding your server

01:06:21,109 --> 01:06:25,940
virtualization footprint or moving

01:06:23,390 --> 01:06:28,400
server workloads to the cloud download

01:06:25,940 --> 01:06:30,230
and install xenserver today and see how

01:06:28,400 --> 01:06:33,740
it can help you simplify your IT

01:06:30,230 --> 01:06:37,180
environment citrix xenserver do more

01:06:33,740 --> 01:06:37,180
don't spend more

01:06:42,249 --> 01:06:46,519
your customers rely on your website or

01:06:45,019 --> 01:06:48,890
application if it's slower

01:06:46,519 --> 01:06:51,920
non-responsive it infuriates your users

01:06:48,890 --> 01:06:53,839
and costs you money keeping your

01:06:51,920 --> 01:06:57,470
business critical systems humming along

01:06:53,839 --> 01:06:59,780
requires insight into what they're doing

01:06:57,470 --> 01:07:01,760
your system metrics tells stories

01:06:59,780 --> 01:07:03,770
stories that can reveal performance

01:07:01,760 --> 01:07:06,080
bottlenecks resource limitations and

01:07:03,770 --> 01:07:07,640
other problems but how do you keep an

01:07:06,080 --> 01:07:10,010
eye on all of your systems performance

01:07:07,640 --> 01:07:13,010
metrics in real-time and record this

01:07:10,010 --> 01:07:14,780
data for later analysis enter longview

01:07:13,010 --> 01:07:16,790
the new way to see what's really going

01:07:14,780 --> 01:07:18,980
on under the hood the long view

01:07:16,790 --> 01:07:21,050
dashboard lets you visualize the status

01:07:18,980 --> 01:07:23,540
of all your systems providing you with a

01:07:21,050 --> 01:07:26,960
bird's-eye view of your entire fleet you

01:07:23,540 --> 01:07:29,570
can sort by cpu memory swap processes

01:07:26,960 --> 01:07:31,400
load and network usage click a specific

01:07:29,570 --> 01:07:33,859
system to access its individual

01:07:31,400 --> 01:07:36,430
dashboard then click and drag to zoom in

01:07:33,859 --> 01:07:38,810
on chokepoints and get more detail

01:07:36,430 --> 01:07:40,400
comprehensive network data including

01:07:38,810 --> 01:07:42,650
inbound and outbound traffic is

01:07:40,400 --> 01:07:44,270
available on the network tab and disk

01:07:42,650 --> 01:07:46,220
rights and free space on the disk

01:07:44,270 --> 01:07:49,040
stabbed while the process Explorer

01:07:46,220 --> 01:07:51,590
displays usage statistics for individual

01:07:49,040 --> 01:07:53,780
processes the system info tab shows

01:07:51,590 --> 01:07:55,760
listening services active connections

01:07:53,780 --> 01:07:57,920
and available updates adding long view

01:07:55,760 --> 01:07:59,630
to a system is easy just click the

01:07:57,920 --> 01:08:01,820
button copy the one line installation

01:07:59,630 --> 01:08:04,250
command then run the command on your

01:08:01,820 --> 01:08:05,960
linux system to complete the process the

01:08:04,250 --> 01:08:08,150
agent will begin collecting data and

01:08:05,960 --> 01:08:09,970
sending it to longview then the graphs

01:08:08,150 --> 01:08:12,490
start rolling

01:08:09,970 --> 01:08:14,859
use longview to gain visibility into

01:08:12,490 --> 01:08:18,600
your servers so when your website or app

01:08:14,859 --> 01:08:18,600
heats up it stays up

01:10:13,720 --> 01:10:15,780

YouTube URL: https://www.youtube.com/watch?v=Gg-C6YJL5y4


