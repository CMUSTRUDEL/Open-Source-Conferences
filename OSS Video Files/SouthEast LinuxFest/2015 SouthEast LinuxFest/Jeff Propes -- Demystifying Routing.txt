Title: Jeff Propes -- Demystifying Routing
Publication date: 2017-01-25
Playlist: 2015 SouthEast LinuxFest
Description: 
	
Captions: 
	00:00:01,970 --> 00:00:10,080
yes my name is Jeff Probst indeed and I

00:00:07,890 --> 00:00:13,040
know there was two names on the

00:00:10,080 --> 00:00:16,049
presentation we decided to split it up

00:00:13,040 --> 00:00:18,000
my dad is kin probes he's the other name

00:00:16,049 --> 00:00:20,910
it's on the presentation he'll be going

00:00:18,000 --> 00:00:23,340
next session and talking about bgp this

00:00:20,910 --> 00:00:25,199
session is about routing and the two are

00:00:23,340 --> 00:00:26,699
made to go together hopefully by going

00:00:25,199 --> 00:00:28,019
through this session first we'll all

00:00:26,699 --> 00:00:29,580
have a little bit understanding for the

00:00:28,019 --> 00:00:33,570
next one which is the really harder of

00:00:29,580 --> 00:00:38,390
the two in fact routing is really very

00:00:33,570 --> 00:00:39,960
quite simple um deceptively simple so

00:00:38,390 --> 00:00:42,000
here's what we're going to talk about

00:00:39,960 --> 00:00:43,860
today in order to talk about routing we

00:00:42,000 --> 00:00:47,370
have to have at least a basic vocabulary

00:00:43,860 --> 00:00:48,600
of some pieces of IP so we need to know

00:00:47,370 --> 00:00:51,870
a little bit of the functions we need to

00:00:48,600 --> 00:00:53,460
know about subnetting unfortunately once

00:00:51,870 --> 00:00:56,940
we get to a quick review will actually

00:00:53,460 --> 00:00:58,829
go into an example we'll talk about the

00:00:56,940 --> 00:01:01,530
routing table what it looks like what's

00:00:58,829 --> 00:01:03,149
in it and then walk through a routing

00:01:01,530 --> 00:01:05,129
decision and then there's some other

00:01:03,149 --> 00:01:07,710
clean up items on the far side again

00:01:05,129 --> 00:01:10,080
this is how really simple deceptively

00:01:07,710 --> 00:01:12,780
simple I think will not have many

00:01:10,080 --> 00:01:15,210
problems with this so before we again

00:01:12,780 --> 00:01:18,150
let's set some expectations on what

00:01:15,210 --> 00:01:21,750
we're here for we want to take away the

00:01:18,150 --> 00:01:23,670
stigma that routing is hard it's

00:01:21,750 --> 00:01:28,470
complicated they can't be understood

00:01:23,670 --> 00:01:30,210
none of those are true really all

00:01:28,470 --> 00:01:32,070
routing is straightforward it doesn't

00:01:30,210 --> 00:01:33,630
matter if we're talking about a laptop

00:01:32,070 --> 00:01:35,369
that you happen to throw up on your

00:01:33,630 --> 00:01:40,320
network or if we're talking about an

00:01:35,369 --> 00:01:43,350
enormous 12 slot chassis router the

00:01:40,320 --> 00:01:45,930
kinds of things like my dad sells all of

00:01:43,350 --> 00:01:48,990
it is the same thing doesn't matter the

00:01:45,930 --> 00:01:51,090
scale and hopefully after going through

00:01:48,990 --> 00:01:52,619
this talk and my dad talk afterwards

00:01:51,090 --> 00:01:54,630
you'll have enough to be able to go

00:01:52,619 --> 00:01:56,369
further on some of these things that we

00:01:54,630 --> 00:01:58,380
are deliberately not going to cover

00:01:56,369 --> 00:02:01,770
today there's a lot of depth in the

00:01:58,380 --> 00:02:03,090
topic and we can easily get caught in

00:02:01,770 --> 00:02:06,030
the weeds we're going to do our best to

00:02:03,090 --> 00:02:09,270
avoid that too that in there are some

00:02:06,030 --> 00:02:10,679
things we are not going to cover we're

00:02:09,270 --> 00:02:12,930
not going to compare a router Brad's

00:02:10,679 --> 00:02:13,800
we're not going to have a holy war in

00:02:12,930 --> 00:02:15,690
this room let's just

00:02:13,800 --> 00:02:18,420
go ahead and get that out now no holy

00:02:15,690 --> 00:02:20,340
war we are completely vendor agnostic in

00:02:18,420 --> 00:02:23,970
fact I don't even mention any vendors

00:02:20,340 --> 00:02:25,710
here we're not going to help you prep

00:02:23,970 --> 00:02:26,970
for your certification courses you are

00:02:25,710 --> 00:02:28,470
not going to come here and then go be

00:02:26,970 --> 00:02:30,120
able to pass the CCNA it's just not

00:02:28,470 --> 00:02:32,820
going to happen sorry guys we are

00:02:30,120 --> 00:02:35,160
demystifying a topic and those

00:02:32,820 --> 00:02:36,390
certifications are getting into the guts

00:02:35,160 --> 00:02:38,640
of a topic so we're gonna be skimming

00:02:36,390 --> 00:02:40,410
across the top and peeling back the

00:02:38,640 --> 00:02:41,970
curtain on it we're not going to have

00:02:40,410 --> 00:02:44,340
enough knowledge after this talk to be

00:02:41,970 --> 00:02:45,810
able to go take a certification so don't

00:02:44,340 --> 00:02:48,360
come up to me and get angry in a couple

00:02:45,810 --> 00:02:53,550
weeks ago I failed because of you no no

00:02:48,360 --> 00:02:55,380
no no no no we're also not going to talk

00:02:53,550 --> 00:02:57,090
about IP subnetting which is intrinsic

00:02:55,380 --> 00:02:59,370
to routing I recognize but it's a whole

00:02:57,090 --> 00:03:00,600
lot of math and math and hangovers don't

00:02:59,370 --> 00:03:03,000
go together well so we're not going to

00:03:00,600 --> 00:03:05,610
do that easier so we're just gonna put a

00:03:03,000 --> 00:03:07,260
walker way around it I think maybe not

00:03:05,610 --> 00:03:10,230
this year but last year there was a talk

00:03:07,260 --> 00:03:12,660
on IP subnetting and it's one of those

00:03:10,230 --> 00:03:14,760
third rail topics like regular

00:03:12,660 --> 00:03:17,280
expressions which everybody knows they

00:03:14,760 --> 00:03:20,190
need and nobody really wants to learn so

00:03:17,280 --> 00:03:21,780
we're just going to step around it but

00:03:20,190 --> 00:03:24,660
we will have to touch in and because

00:03:21,780 --> 00:03:27,239
that's a part of routing so with all

00:03:24,660 --> 00:03:31,550
those caveats out of the way let's talk

00:03:27,239 --> 00:03:33,930
about IP and this is a big long text I

00:03:31,550 --> 00:03:36,390
got this straight off of Wikipedia I

00:03:33,930 --> 00:03:38,209
couldn't find a better place to go to

00:03:36,390 --> 00:03:40,560
than Wikipedia for this because this is

00:03:38,209 --> 00:03:42,239
succinct the Internet Protocol is a

00:03:40,560 --> 00:03:45,030
principal communications protocol in the

00:03:42,239 --> 00:03:47,100
Internet sweet as it is for relaying

00:03:45,030 --> 00:03:49,800
data grams it also insert the word

00:03:47,100 --> 00:03:51,780
packets across network boundaries it's

00:03:49,800 --> 00:03:54,150
routing function enables network

00:03:51,780 --> 00:03:56,550
internet working and essentially

00:03:54,150 --> 00:04:01,140
establishes the internet so just from

00:03:56,550 --> 00:04:03,090
this one little to lion sentence to

00:04:01,140 --> 00:04:07,709
sentence paragraph we can understand

00:04:03,090 --> 00:04:09,420
routing and internet working are what's

00:04:07,709 --> 00:04:11,250
this end bethought simpatico i believe

00:04:09,420 --> 00:04:13,440
is the word you can't have one without

00:04:11,250 --> 00:04:17,549
the other all of IP is based upon

00:04:13,440 --> 00:04:20,910
routing if you guys are familiar with

00:04:17,549 --> 00:04:24,240
the OSI model it is layer three it is

00:04:20,910 --> 00:04:27,199
right above things like Ethernet or from

00:04:24,240 --> 00:04:30,479
the old days frame relay

00:04:27,199 --> 00:04:32,900
more modern things a lot of things are

00:04:30,479 --> 00:04:38,250
Ethernet these days it is right below

00:04:32,900 --> 00:04:41,629
such other protocols like TCP UDP ICMP

00:04:38,250 --> 00:04:45,300
all of those sit piggyback on top of IP

00:04:41,629 --> 00:04:49,349
it is a connectionless protocol which

00:04:45,300 --> 00:04:51,659
means every time an IP packet is routed

00:04:49,349 --> 00:04:54,030
it is routed in isolation and it is a

00:04:51,659 --> 00:04:57,270
best effort only we are not forming a

00:04:54,030 --> 00:04:59,940
channel between two endpoints writing

00:04:57,270 --> 00:05:02,190
crusted network or not pre arranging

00:04:59,940 --> 00:05:04,139
anything it is just at the moment in

00:05:02,190 --> 00:05:06,780
time a packet arrives at a router a

00:05:04,139 --> 00:05:10,530
decision is made and that's that so

00:05:06,780 --> 00:05:13,680
let's compare this to see TCP which is

00:05:10,530 --> 00:05:15,569
very clearly connection-oriented there a

00:05:13,680 --> 00:05:17,190
channel is established you have the syn

00:05:15,569 --> 00:05:19,050
ack and they actually establish a

00:05:17,190 --> 00:05:21,569
connection they have windows they have

00:05:19,050 --> 00:05:23,969
to be communicating within a certain

00:05:21,569 --> 00:05:26,370
amount of time keep-alive and all this

00:05:23,969 --> 00:05:29,189
very heavy minutiae to keep the

00:05:26,370 --> 00:05:30,990
connection or the channel open IP does

00:05:29,189 --> 00:05:34,050
none of that so it's actually kind of an

00:05:30,990 --> 00:05:35,729
interesting dichotomy IP the lower layer

00:05:34,050 --> 00:05:39,210
just makes the best effort to deliver

00:05:35,729 --> 00:05:41,849
and TCP does its best to maintain a

00:05:39,210 --> 00:05:45,029
channel knowing that IP can sometimes

00:05:41,849 --> 00:05:47,370
fail so it's an interesting way of doing

00:05:45,029 --> 00:05:50,279
things it's a very powerful way of doing

00:05:47,370 --> 00:05:52,949
things because you get both making sure

00:05:50,279 --> 00:05:56,849
your packets get there and it's fault

00:05:52,949 --> 00:05:59,250
tolerant IP is very fault tolerant so I

00:05:56,849 --> 00:06:01,650
said earlier it is agnostic to happens

00:05:59,250 --> 00:06:03,930
at what layer to there is one caveat to

00:06:01,650 --> 00:06:05,520
that in the fact that we have to talk

00:06:03,930 --> 00:06:08,550
actually not going to talk about this

00:06:05,520 --> 00:06:10,139
today IP fragmentation this is a case

00:06:08,550 --> 00:06:13,710
where your IP packet which can be as

00:06:10,139 --> 00:06:16,469
many as 65 k bytes is too large to go

00:06:13,710 --> 00:06:18,509
into a single frame at layer 2 and so

00:06:16,469 --> 00:06:21,300
the router has to break up your packet

00:06:18,509 --> 00:06:23,969
into many individual frames we call that

00:06:21,300 --> 00:06:26,069
fragmentation at the other side all the

00:06:23,969 --> 00:06:27,240
fragments have to be reassembled so that

00:06:26,069 --> 00:06:28,949
is the only point at which we really

00:06:27,240 --> 00:06:30,900
care what happens at layer 2 and that's

00:06:28,949 --> 00:06:34,409
only because layer 2 gives us a number

00:06:30,900 --> 00:06:37,210
called an MTU but I mentioned that just

00:06:34,409 --> 00:06:40,190
so you can go look it up later

00:06:37,210 --> 00:06:42,020
this is what an IP packet actually looks

00:06:40,190 --> 00:06:43,730
like at least the headers there's a

00:06:42,020 --> 00:06:46,850
whole bunch of information in here and

00:06:43,730 --> 00:06:49,010
I'm going to 0 us in on three particular

00:06:46,850 --> 00:06:52,430
items can you guys read what's on is it

00:06:49,010 --> 00:06:55,040
big enough ok if you're following along

00:06:52,430 --> 00:06:58,400
this is also online so you can come back

00:06:55,040 --> 00:07:00,500
later on the website check it out I want

00:06:58,400 --> 00:07:03,020
to zero in on three particular items

00:07:00,500 --> 00:07:05,390
here we're going to zero in on the

00:07:03,020 --> 00:07:06,920
time-to-live the header checksum and the

00:07:05,390 --> 00:07:10,670
destination address these are the three

00:07:06,920 --> 00:07:12,080
things the router is checking for every

00:07:10,670 --> 00:07:13,760
packet that comes to and there are some

00:07:12,080 --> 00:07:16,820
other pieces that it may check it may

00:07:13,760 --> 00:07:19,370
choose to look at the this is labeled to

00:07:16,820 --> 00:07:22,190
us ecn field for quality of service

00:07:19,370 --> 00:07:24,350
stuff it's probably going to need to do

00:07:22,190 --> 00:07:26,300
some kind of fragmentation at some point

00:07:24,350 --> 00:07:28,640
so the fragmentation offset comes into

00:07:26,300 --> 00:07:30,530
play those are all special cases but for

00:07:28,640 --> 00:07:33,710
every routing decision do these three

00:07:30,530 --> 00:07:36,470
things you checked the time to live is a

00:07:33,710 --> 00:07:38,750
bit of a misnomer it's actually a hop

00:07:36,470 --> 00:07:41,230
count it's a better way to put it so

00:07:38,750 --> 00:07:43,820
when I send a packet across the internet

00:07:41,230 --> 00:07:45,590
some measure of its reliability is how

00:07:43,820 --> 00:07:48,500
many hops does it have to go through to

00:07:45,590 --> 00:07:51,230
arrive at its end point and we keep

00:07:48,500 --> 00:07:52,820
track of that with the time to live for

00:07:51,230 --> 00:07:54,860
a packet that is expected to be

00:07:52,820 --> 00:07:59,690
reasonably short-lived we may put a low

00:07:54,860 --> 00:08:02,090
time to live like 10 and if it gets if

00:07:59,690 --> 00:08:03,560
it gets too many hops between where I'm

00:08:02,090 --> 00:08:05,930
supposed to be going and where I'm

00:08:03,560 --> 00:08:08,210
starting from time to live may expire

00:08:05,930 --> 00:08:10,730
and we'll talk about that later time to

00:08:08,210 --> 00:08:14,120
live is just a metric that we use as

00:08:10,730 --> 00:08:16,400
we're routing at every step we also have

00:08:14,120 --> 00:08:17,900
a header checksum for some reason buried

00:08:16,400 --> 00:08:21,440
in the middle of the header not at the

00:08:17,900 --> 00:08:24,020
end oh it's calculated over the entirety

00:08:21,440 --> 00:08:25,940
of the header and this is how we know

00:08:24,020 --> 00:08:30,470
that the packet hasn't been garbled in

00:08:25,940 --> 00:08:31,910
transit so the router when it receives a

00:08:30,470 --> 00:08:34,479
packet one of the first things it does

00:08:31,910 --> 00:08:37,310
is it quickly calculate to check some of

00:08:34,479 --> 00:08:39,680
how it received and the checksum fails

00:08:37,310 --> 00:08:41,060
it says this packet is garbage I don't

00:08:39,680 --> 00:08:43,640
have to do with it it just tosses it

00:08:41,060 --> 00:08:45,950
away again this is a connectionless it's

00:08:43,640 --> 00:08:48,710
making no guarantees your packet will

00:08:45,950 --> 00:08:54,320
get where it's supposed to be sir

00:08:48,710 --> 00:08:56,660
I check some of the IP header so the

00:08:54,320 --> 00:08:58,700
question is what is it a checksum of yes

00:08:56,660 --> 00:09:05,470
so it's it's the IP headers all the

00:08:58,700 --> 00:09:08,540
information in there okay is that better

00:09:05,470 --> 00:09:11,060
is it can i still be heard I'll just

00:09:08,540 --> 00:09:14,720
talk really loud I'm a loud guy in

00:09:11,060 --> 00:09:16,430
general the third and probably them the

00:09:14,720 --> 00:09:17,960
most important piece of information is

00:09:16,430 --> 00:09:19,910
this one towards the bottom of the

00:09:17,960 --> 00:09:21,320
diagram it's the destination address you

00:09:19,910 --> 00:09:24,650
have to know where you're sending your

00:09:21,320 --> 00:09:27,680
packet to now it's pretty

00:09:24,650 --> 00:09:30,410
straightforward i hope so here's some

00:09:27,680 --> 00:09:31,730
example ipv4 and ipv6 addresses i'm not

00:09:30,410 --> 00:09:33,710
really touching on the difference

00:09:31,730 --> 00:09:36,290
between the two here but i wanted to

00:09:33,710 --> 00:09:39,230
make sure that we understand that the

00:09:36,290 --> 00:09:41,990
same routing decisions can be made on

00:09:39,230 --> 00:09:46,130
both packets in the same fashion it's

00:09:41,990 --> 00:09:48,710
just that ipv6 is at a larger scale RPV

00:09:46,130 --> 00:09:53,420
for dresses are four bytes long we've

00:09:48,710 --> 00:09:57,380
also heard the term dotted quad is a

00:09:53,420 --> 00:10:04,520
term for an ipv4 address four bytes an

00:09:57,380 --> 00:10:06,800
ipv6 address is 16 bytes a lot but the

00:10:04,520 --> 00:10:09,950
same exact principles so if we go back

00:10:06,800 --> 00:10:11,660
to this here an ipv6 header is going to

00:10:09,950 --> 00:10:14,030
have a lot more bites for the

00:10:11,660 --> 00:10:15,770
destination and source addresses by

00:10:14,030 --> 00:10:18,380
necessity and the head are slightly

00:10:15,770 --> 00:10:19,790
different but still these are the things

00:10:18,380 --> 00:10:24,950
we're looking for when we're routing

00:10:19,790 --> 00:10:27,200
packets so we have to talk about the

00:10:24,950 --> 00:10:29,830
subnet mask this is the last part of IP

00:10:27,200 --> 00:10:32,990
we have to get into a subnet mask

00:10:29,830 --> 00:10:35,510
divides the IP address into a network

00:10:32,990 --> 00:10:37,940
portion in a host portion and it's what

00:10:35,510 --> 00:10:41,000
allows us to make very quick routing

00:10:37,940 --> 00:10:43,280
decisions so it's very common you have a

00:10:41,000 --> 00:10:46,580
router in your home you'll probably have

00:10:43,280 --> 00:10:50,440
a local network 192 dot one sixty eight

00:10:46,580 --> 00:10:53,030
dot wide and dot something and so

00:10:50,440 --> 00:10:58,160
typically our subnet mask and a home

00:10:53,030 --> 00:11:01,460
environment would be 255 255 255 dot 0

00:10:58,160 --> 00:11:02,410
like this so we have a specific notation

00:11:01,460 --> 00:11:05,620
for this

00:11:02,410 --> 00:11:08,620
compact notation in this case I have

00:11:05,620 --> 00:11:11,500
used the IP address of the web server

00:11:08,620 --> 00:11:14,740
that I'm hosting the presentation on for

00:11:11,500 --> 00:11:17,730
some reason just for the example I have

00:11:14,740 --> 00:11:24,370
arbitrarily decided that the netmask is

00:11:17,730 --> 00:11:25,329
255 255 to 250 that translates to a / 24

00:11:24,370 --> 00:11:27,339
on the end of the address we're

00:11:25,329 --> 00:11:31,420
basically counting the number of binary

00:11:27,339 --> 00:11:33,730
ones in the netmask address and this

00:11:31,420 --> 00:11:35,019
comes into play later on because when

00:11:33,730 --> 00:11:39,040
we're doing routing we preferentially

00:11:35,019 --> 00:11:41,680
would choose routes that have longer net

00:11:39,040 --> 00:11:43,839
masks because they are more specific and

00:11:41,680 --> 00:11:47,740
we would like to work our way from more

00:11:43,839 --> 00:11:52,089
specific to less specific so in this

00:11:47,740 --> 00:11:54,810
example the network portion we apply the

00:11:52,089 --> 00:11:59,079
net mass to the IP address and we get

00:11:54,810 --> 00:12:01,120
5116 dot 28 those are the three bytes

00:11:59,079 --> 00:12:03,250
that will pop out now it's important to

00:12:01,120 --> 00:12:06,639
note that just for our example here we

00:12:03,250 --> 00:12:08,139
have used three bites of one's is our

00:12:06,639 --> 00:12:10,209
netmask we don't have to do that it

00:12:08,139 --> 00:12:12,100
could be a slash between to give you /

00:12:10,209 --> 00:12:14,370
18 this is the whole IP subnetting thing

00:12:12,100 --> 00:12:22,360
that we're not going to do the math on

00:12:14,370 --> 00:12:27,699
sir um no it is not is just the address

00:12:22,360 --> 00:12:29,889
the netmask is important to the

00:12:27,699 --> 00:12:32,139
interface at which it exists in but

00:12:29,889 --> 00:12:35,649
while an IP packet is in transit the

00:12:32,139 --> 00:12:37,899
mask is meaningless so it's solely for

00:12:35,649 --> 00:12:41,920
routing and logical partitioning of

00:12:37,899 --> 00:12:50,589
networks so in this example our host is

00:12:41,920 --> 00:12:52,389
number 118 on the 51 1628 subnet like I

00:12:50,589 --> 00:12:54,730
said for routing Lee close to focus

00:12:52,389 --> 00:12:56,620
exclusively on the network portion and

00:12:54,730 --> 00:13:00,699
we'll see an example of that here soon

00:12:56,620 --> 00:13:04,449
so with all the IP review out of the way

00:13:00,699 --> 00:13:06,100
we can get on to routing and as I stated

00:13:04,449 --> 00:13:08,529
at the beginning it's an intrinsic part

00:13:06,100 --> 00:13:12,759
of the IP protocol you can't have one

00:13:08,529 --> 00:13:16,209
without the other in fact every single I

00:13:12,759 --> 00:13:19,269
pay IP based device that you own an

00:13:16,209 --> 00:13:21,790
operate has a router in it so we're not

00:13:19,269 --> 00:13:23,319
just talking about the big routing tons

00:13:21,790 --> 00:13:25,990
of packets across the Internet backbone

00:13:23,319 --> 00:13:29,110
kinds of thing we're talking about every

00:13:25,990 --> 00:13:33,059
single device every computer tablet

00:13:29,110 --> 00:13:40,899
phone vm anything that's IP packet based

00:13:33,059 --> 00:13:43,689
everything as a router in it so maybe

00:13:40,899 --> 00:13:44,740
it's not so scary after all if it's in

00:13:43,689 --> 00:13:47,410
everything it can't be that complicated

00:13:44,740 --> 00:13:49,839
right and really it's not because quite

00:13:47,410 --> 00:13:52,420
simply routing is just simply making a

00:13:49,839 --> 00:13:55,529
decision on where a packet should go to

00:13:52,420 --> 00:13:58,679
get to its destination that's all it is

00:13:55,529 --> 00:14:00,970
so we're going to use an example here of

00:13:58,679 --> 00:14:04,149
delivering a letter it's a classic

00:14:00,970 --> 00:14:06,100
canonical example to explain routing if

00:14:04,149 --> 00:14:09,490
I need to send a letter to my neighbor

00:14:06,100 --> 00:14:11,319
next door I don't really need to use my

00:14:09,490 --> 00:14:13,569
mailbox for that fact I can probably

00:14:11,319 --> 00:14:15,699
just go over if I know the person and

00:14:13,569 --> 00:14:18,339
knock on their door and introduced

00:14:15,699 --> 00:14:20,350
myself and hand them my letter but then

00:14:18,339 --> 00:14:22,569
you might say why don't you just tell

00:14:20,350 --> 00:14:24,519
them what you had to say anyway just for

00:14:22,569 --> 00:14:26,529
our example imagine that everything I

00:14:24,519 --> 00:14:28,389
have to say to my neighbor is in the

00:14:26,529 --> 00:14:30,819
letter it has to be in the letter that's

00:14:28,389 --> 00:14:33,490
the agreed-upon format think of the

00:14:30,819 --> 00:14:34,990
letter as an IP packet so I can just

00:14:33,490 --> 00:14:37,299
walk over there I could walk down the

00:14:34,990 --> 00:14:38,829
street I could walk across the

00:14:37,299 --> 00:14:40,269
neighborhood a couple streets to my

00:14:38,829 --> 00:14:42,279
friend over there but I really don't

00:14:40,269 --> 00:14:45,009
want to walk across town that's a long

00:14:42,279 --> 00:14:47,110
walk I've got too much to do and there's

00:14:45,009 --> 00:14:48,100
a highway between there in here and I

00:14:47,110 --> 00:14:49,899
don't really feel like crossing the

00:14:48,100 --> 00:14:52,689
highway i'm not very good at Frogger so

00:14:49,899 --> 00:14:55,449
I would rather use the US Postal Service

00:14:52,689 --> 00:14:57,549
to deliver my letter across town great

00:14:55,449 --> 00:15:01,299
takes a day gets there they get my

00:14:57,549 --> 00:15:03,189
letter fantastic would I prefer to use

00:15:01,299 --> 00:15:06,490
the US Postal Service if I have to send

00:15:03,189 --> 00:15:08,230
my letter to Japan now we're talking

00:15:06,490 --> 00:15:09,699
something different it may take them two

00:15:08,230 --> 00:15:12,879
weeks to get my letter there I mean

00:15:09,699 --> 00:15:14,470
it'll get there it's kinda slow what

00:15:12,879 --> 00:15:17,829
happens if I need my letter there in

00:15:14,470 --> 00:15:19,449
three days well I may choose to use a

00:15:17,829 --> 00:15:23,589
different service I may choose to use

00:15:19,449 --> 00:15:26,169
UPS and their best service now this cost

00:15:23,589 --> 00:15:30,130
me more money to do so i can mail a

00:15:26,169 --> 00:15:32,200
letter for what is it now 46 cents 48

00:15:30,130 --> 00:15:33,970
sense it's going up every year something

00:15:32,200 --> 00:15:35,650
like that i can send a letter for 46

00:15:33,970 --> 00:15:38,280
cents it's going to cost me eight

00:15:35,650 --> 00:15:40,720
dollars to overnight a letter to Japan

00:15:38,280 --> 00:15:42,310
but side note I think it's really cool

00:15:40,720 --> 00:15:44,020
we can overnight things to Japan I'd

00:15:42,310 --> 00:15:44,830
never had a need for that I just think

00:15:44,020 --> 00:15:47,950
it's really cool that were that

00:15:44,830 --> 00:15:50,350
connected but for our example we're

00:15:47,950 --> 00:15:53,710
going to make some analogies between our

00:15:50,350 --> 00:15:57,040
decision to use UPS versus the postal

00:15:53,710 --> 00:16:03,250
service versus walking to an analogy of

00:15:57,040 --> 00:16:05,620
IP so the analogy is if I am talking to

00:16:03,250 --> 00:16:06,940
someone in my local subnet that's as if

00:16:05,620 --> 00:16:09,070
they are in my neighborhood and I'm

00:16:06,940 --> 00:16:11,320
going to walk over to them and give them

00:16:09,070 --> 00:16:13,780
my letter directly I can do that it's

00:16:11,320 --> 00:16:15,760
easy it's local that's the definition of

00:16:13,780 --> 00:16:19,450
the subnet everything within the subnet

00:16:15,760 --> 00:16:21,400
is considered like a neighborhood for

00:16:19,450 --> 00:16:25,150
anything past that I'm probably going to

00:16:21,400 --> 00:16:26,530
go need to talk to the router and the

00:16:25,150 --> 00:16:29,380
router is going to have to do the packet

00:16:26,530 --> 00:16:32,890
delivery on my behalf now I made a

00:16:29,380 --> 00:16:36,010
decision to go with UPS for a longer

00:16:32,890 --> 00:16:38,530
range letter because they can get there

00:16:36,010 --> 00:16:41,890
faster that's a routing decision both

00:16:38,530 --> 00:16:44,440
the usps and UPS will get my letter

00:16:41,890 --> 00:16:46,390
there one gets it there faster and

00:16:44,440 --> 00:16:49,720
that's a routing decision that I just

00:16:46,390 --> 00:16:51,700
made to use one versus the other so I

00:16:49,720 --> 00:16:53,980
hope that clarifies what we're doing

00:16:51,700 --> 00:16:56,770
when we decide when we make our routing

00:16:53,980 --> 00:16:58,570
decision I can explore this further is

00:16:56,770 --> 00:17:02,020
anybody unclear and what we just went

00:16:58,570 --> 00:17:07,720
over hey good I'm going to take the

00:17:02,020 --> 00:17:09,250
general lack of a scent is okay so let's

00:17:07,720 --> 00:17:12,010
talk about some facts about routing

00:17:09,250 --> 00:17:14,319
there's a decision it happens for every

00:17:12,010 --> 00:17:18,770
single IP packet that passes through a

00:17:14,319 --> 00:17:20,900
router because I p is connectionless

00:17:18,770 --> 00:17:23,330
at the time the packet is there an

00:17:20,900 --> 00:17:25,820
arousing decision is being made we make

00:17:23,330 --> 00:17:27,830
the best possible decision we can at

00:17:25,820 --> 00:17:29,660
that point in time even if we had

00:17:27,830 --> 00:17:32,030
different information five minutes

00:17:29,660 --> 00:17:34,760
before or we're about to get new

00:17:32,030 --> 00:17:36,530
information we can't wait we need to

00:17:34,760 --> 00:17:38,300
deliver the IP packet as quickly as

00:17:36,530 --> 00:17:42,830
possible it's efficiently as possible

00:17:38,300 --> 00:17:44,180
that is always our goal in routing so we

00:17:42,830 --> 00:17:48,350
make the decision we can at the moment

00:17:44,180 --> 00:17:50,600
in time that we have it and since lots

00:17:48,350 --> 00:17:52,520
of packets are coming in all the time we

00:17:50,600 --> 00:17:54,380
buffer them and we try to answer them in

00:17:52,520 --> 00:17:56,660
the order in which they are received now

00:17:54,380 --> 00:18:00,140
in more modern times we're doing quality

00:17:56,660 --> 00:18:03,770
of service we may at larger scales

00:18:00,140 --> 00:18:06,320
choose to prioritize say voice traffic

00:18:03,770 --> 00:18:10,040
over something else because it's a

00:18:06,320 --> 00:18:11,660
little bit more latency sensitive but

00:18:10,040 --> 00:18:13,430
for our example here we're going to

00:18:11,660 --> 00:18:14,480
ignore quality of service I only mention

00:18:13,430 --> 00:18:16,670
it so that you can go look it up later

00:18:14,480 --> 00:18:21,050
if you want that's a rabbit hole we

00:18:16,670 --> 00:18:23,630
could spend hours on that so once a

00:18:21,050 --> 00:18:25,490
packet is forwarded by the router it

00:18:23,630 --> 00:18:27,290
doesn't care what happens to it it has a

00:18:25,490 --> 00:18:28,970
queue full of packets that it has to go

00:18:27,290 --> 00:18:30,560
through so it literally is throwing it

00:18:28,970 --> 00:18:32,540
out the door in the direction it's

00:18:30,560 --> 00:18:34,280
supposed to go as fast as possible and

00:18:32,540 --> 00:18:38,440
getting on to the next packet over and

00:18:34,280 --> 00:18:40,730
over and over again that's all it does

00:18:38,440 --> 00:18:42,680
so let's look at a routing table for

00:18:40,730 --> 00:18:45,290
that ended up really tiny I'm sorry I

00:18:42,680 --> 00:18:47,510
pulled this routing table from the web

00:18:45,290 --> 00:18:50,360
server I'm taking on my web server today

00:18:47,510 --> 00:18:52,670
web server where this site is far this

00:18:50,360 --> 00:18:54,560
presentation so stood I have both the

00:18:52,670 --> 00:18:56,180
new flavor and the old flavor of

00:18:54,560 --> 00:19:00,350
invoking the routing table so I don't

00:18:56,180 --> 00:19:02,690
offend anybody but what I want to point

00:19:00,350 --> 00:19:08,690
out here it's a very simple routing

00:19:02,690 --> 00:19:11,000
table I have one device named eth0 and

00:19:08,690 --> 00:19:12,800
I'm going to use the laser pointer I

00:19:11,000 --> 00:19:16,610
recognize the video will not be able to

00:19:12,800 --> 00:19:22,010
pick this up but right here you see dev

00:19:16,610 --> 00:19:24,260
eth0 I have two different subnets are

00:19:22,010 --> 00:19:26,900
two different router with subnet each

00:19:24,260 --> 00:19:29,720
and that's because I have two addresses

00:19:26,900 --> 00:19:31,879
on this one interface which makes it an

00:19:29,720 --> 00:19:34,309
interesting case study for us to look at

00:19:31,879 --> 00:19:37,489
so for as far as routing is concerned

00:19:34,309 --> 00:19:39,199
they don't care how many IP addresses is

00:19:37,489 --> 00:19:40,940
are listening on a particular interface

00:19:39,199 --> 00:19:43,609
they don't care about any of that

00:19:40,940 --> 00:19:48,679
they're only concerned with the network

00:19:43,609 --> 00:19:51,349
portion of this address and they're

00:19:48,679 --> 00:19:55,249
concerned with the device that it should

00:19:51,349 --> 00:19:56,629
go out so some and we'll come back to

00:19:55,249 --> 00:20:00,289
some of the interesting information in

00:19:56,629 --> 00:20:03,079
here but well the things we care the

00:20:00,289 --> 00:20:08,389
most about the netmask either the subnet

00:20:03,079 --> 00:20:10,069
excuse me the device and I guess there's

00:20:08,389 --> 00:20:13,519
no metric listed here there's no metric

00:20:10,069 --> 00:20:15,349
it's assumed to a zero so there's a

00:20:13,519 --> 00:20:16,819
compact form so you see in the second

00:20:15,349 --> 00:20:19,069
form down here there's explicitly

00:20:16,819 --> 00:20:22,190
declared a metric here this one is 100

00:20:19,069 --> 00:20:23,749
these are zero so those are the three

00:20:22,190 --> 00:20:25,879
pieces of information we need to make a

00:20:23,749 --> 00:20:27,679
key routing decision the rest of this is

00:20:25,879 --> 00:20:29,179
window dressing and useful information

00:20:27,679 --> 00:20:30,469
for us we're trying to interpret what

00:20:29,179 --> 00:20:31,879
the routing table is doing but those are

00:20:30,469 --> 00:20:34,190
the three pieces of information we need

00:20:31,879 --> 00:20:36,979
the most that I think I have a slide

00:20:34,190 --> 00:20:38,929
about that right here there we go yes

00:20:36,979 --> 00:20:43,299
the network address we compare this

00:20:38,929 --> 00:20:45,859
against the packet destinations address

00:20:43,299 --> 00:20:47,349
the metric a positive integer

00:20:45,859 --> 00:20:50,239
represented the value of the route and

00:20:47,349 --> 00:20:53,229
the device which is the layer 2 device

00:20:50,239 --> 00:20:56,719
we need to be sending the packet out to

00:20:53,229 --> 00:20:58,819
so this right here this one slide this

00:20:56,719 --> 00:21:00,440
is routing everything we've talked about

00:20:58,819 --> 00:21:04,129
is leading up to this one slide this is

00:21:00,440 --> 00:21:05,690
all it is it's five simple steps the

00:21:04,129 --> 00:21:08,029
first two are just checking to make sure

00:21:05,690 --> 00:21:10,219
the packet is still valid the first one

00:21:08,029 --> 00:21:12,919
checks that the check some of the header

00:21:10,219 --> 00:21:14,929
and the payload are is ok if it's not

00:21:12,919 --> 00:21:16,249
the packet obviously got garbled and

00:21:14,929 --> 00:21:19,039
communication and we need to throw it

00:21:16,249 --> 00:21:22,549
away we check the TTL that I mentioned

00:21:19,039 --> 00:21:24,979
earlier if it's greater than one we're

00:21:22,549 --> 00:21:28,009
fine means we can afford to send it on

00:21:24,979 --> 00:21:30,349
another hop if not we need to throw it

00:21:28,009 --> 00:21:33,139
away once we've done that a little

00:21:30,349 --> 00:21:35,959
cleanup steps there then we're going to

00:21:33,139 --> 00:21:37,969
compare the destination address against

00:21:35,959 --> 00:21:40,699
all the prefixes in our routing table

00:21:37,969 --> 00:21:43,249
starting with the most specific we're

00:21:40,699 --> 00:21:45,320
going to work our way down the routing

00:21:43,249 --> 00:21:47,120
table from most specific to least

00:21:45,320 --> 00:21:51,110
specific we're hoping for a most

00:21:47,120 --> 00:21:53,809
specific route match and we are using

00:21:51,110 --> 00:21:54,830
that assumption that clearly we need to

00:21:53,809 --> 00:21:58,970
do something special with that

00:21:54,830 --> 00:22:01,720
particular subnet so a match quite

00:21:58,970 --> 00:22:05,960
literally is just using the netmask

00:22:01,720 --> 00:22:10,730
let's go back let's go back to here

00:22:05,960 --> 00:22:12,980
using this netmask here on the end of

00:22:10,730 --> 00:22:15,860
the address use that netmask on the

00:22:12,980 --> 00:22:19,460
destination address of the packet if the

00:22:15,860 --> 00:22:21,679
resulting bite bits here match what you

00:22:19,460 --> 00:22:25,009
see after you've done that mask then

00:22:21,679 --> 00:22:27,679
that's a match very simple it would also

00:22:25,009 --> 00:22:30,230
be helpful to write down the ones and

00:22:27,679 --> 00:22:32,210
zeros sometimes I'm opting to do that

00:22:30,230 --> 00:22:35,259
here because we still have a lot to

00:22:32,210 --> 00:22:39,500
cover so let's go back to where we were

00:22:35,259 --> 00:22:42,169
so we find the closest match we can if

00:22:39,500 --> 00:22:46,370
you recall from the table we had two

00:22:42,169 --> 00:22:47,690
routes with the same length of netmask I

00:22:46,370 --> 00:22:50,870
believe they were both specially for I

00:22:47,690 --> 00:22:52,940
think maybe they weren't let's pretend

00:22:50,870 --> 00:22:55,940
that we had two routes ahead the same

00:22:52,940 --> 00:22:58,820
length of netmask so then if you have a

00:22:55,940 --> 00:23:01,850
mat they both match for some reason then

00:22:58,820 --> 00:23:04,490
you go to the next part which is using

00:23:01,850 --> 00:23:05,779
the metric so if we have two matches do

00:23:04,490 --> 00:23:07,370
matching routes than we compare the

00:23:05,779 --> 00:23:10,399
metric we want the metric that is lower

00:23:07,370 --> 00:23:13,580
we consider that to be a better route

00:23:10,399 --> 00:23:15,860
and then once we've made the decision

00:23:13,580 --> 00:23:18,200
this is the actual route i'm going to

00:23:15,860 --> 00:23:20,419
use for this packet then we decrement

00:23:18,200 --> 00:23:22,389
the TT on the packet that forces us to

00:23:20,419 --> 00:23:25,279
recalculate the checksum on the header

00:23:22,389 --> 00:23:27,559
we recalculate that we write it in then

00:23:25,279 --> 00:23:30,679
we send it on its merry way to the next

00:23:27,559 --> 00:23:32,000
stop and that's it that's all routing is

00:23:30,679 --> 00:23:36,500
right there we've just talked about

00:23:32,000 --> 00:23:37,909
everything routing is except one piece

00:23:36,500 --> 00:23:39,860
then this is the piece that everybody

00:23:37,909 --> 00:23:42,350
gets hung up on and that's the routing

00:23:39,860 --> 00:23:44,419
table so right we really haven't touched

00:23:42,350 --> 00:23:46,580
on how did the values go to the routing

00:23:44,419 --> 00:23:48,470
table and this is where the complex part

00:23:46,580 --> 00:23:50,029
of routing comes about this is where

00:23:48,470 --> 00:23:52,399
everybody gets hung up this is where you

00:23:50,029 --> 00:23:54,590
hear the big scary words like bgp and

00:23:52,399 --> 00:23:58,940
it's really not that scary he'll help

00:23:54,590 --> 00:24:01,820
you understand it or ospf or

00:23:58,940 --> 00:24:03,500
is is which is the same thing as ospf

00:24:01,820 --> 00:24:05,600
roughly and just we have a different

00:24:03,500 --> 00:24:09,020
name for it I don't know why or our IP

00:24:05,600 --> 00:24:14,150
or all these different ways of filling

00:24:09,020 --> 00:24:15,950
our routing table and sometimes we have

00:24:14,150 --> 00:24:18,260
automated routes like from the operating

00:24:15,950 --> 00:24:20,480
system that's what in the routing table

00:24:18,260 --> 00:24:24,140
that I showed you those were all auto

00:24:20,480 --> 00:24:26,600
populated so when I give it an address

00:24:24,140 --> 00:24:30,050
with a subnet mask it is assumed that

00:24:26,600 --> 00:24:32,300
everything inside that subnet belongs in

00:24:30,050 --> 00:24:33,590
the same neighborhood and so there's an

00:24:32,300 --> 00:24:35,480
automatic route that's put into my

00:24:33,590 --> 00:24:37,100
routing table that says if I'm trying to

00:24:35,480 --> 00:24:38,920
hit an address in that neighborhood I

00:24:37,100 --> 00:24:41,180
can go ahead and deliver that letter and

00:24:38,920 --> 00:24:42,530
here's the route to go do it here's the

00:24:41,180 --> 00:24:45,020
interface we need to go out so the

00:24:42,530 --> 00:24:47,360
operating system does that for us there

00:24:45,020 --> 00:24:50,540
are also static routes I happen to know

00:24:47,360 --> 00:24:52,670
that this person lives at this spot and

00:24:50,540 --> 00:24:54,350
I have to walk down that road then take

00:24:52,670 --> 00:24:56,450
a left of the light and go walk to the

00:24:54,350 --> 00:24:59,090
jack-in-the-box not get tacos take a

00:24:56,450 --> 00:25:02,030
right there and go to his house that's a

00:24:59,090 --> 00:25:05,570
static route and there's no tacos

00:25:02,030 --> 00:25:07,640
involved in static routes there are also

00:25:05,570 --> 00:25:10,220
dynamic routes which are usually popular

00:25:07,640 --> 00:25:12,740
by your routing protocol of choice for a

00:25:10,220 --> 00:25:15,320
very small setup like your laptop on a

00:25:12,740 --> 00:25:18,080
local area network at home you don't

00:25:15,320 --> 00:25:20,990
need a routing protocol you're talking

00:25:18,080 --> 00:25:23,030
an ISP you probably need a routing

00:25:20,990 --> 00:25:25,190
protocol of some kind and depending on

00:25:23,030 --> 00:25:27,530
what you have you may make a choice on

00:25:25,190 --> 00:25:29,450
one routing protocol versus another we

00:25:27,530 --> 00:25:32,030
are not going to touch on that because

00:25:29,450 --> 00:25:35,300
that is yet another holy war and we're

00:25:32,030 --> 00:25:38,090
just not interested in that I do mention

00:25:35,300 --> 00:25:42,710
though these are things that you can go

00:25:38,090 --> 00:25:44,300
study further and you will probably lose

00:25:42,710 --> 00:25:47,840
some hair in learning some of these

00:25:44,300 --> 00:25:49,490
things if we boil them down like bgp

00:25:47,840 --> 00:25:52,150
will be boiled down there easier to

00:25:49,490 --> 00:25:54,290
understand but there's still a lot of

00:25:52,150 --> 00:25:56,030
intrinsic knowledge one has to know to

00:25:54,290 --> 00:25:59,540
understand how the routing protocols

00:25:56,030 --> 00:26:00,950
work but we can set all that aside and

00:25:59,540 --> 00:26:03,500
kind of say we'll deal with that later

00:26:00,950 --> 00:26:05,480
the net result of those routing

00:26:03,500 --> 00:26:07,880
protocols is to populate our routing

00:26:05,480 --> 00:26:09,800
table once the routing table is

00:26:07,880 --> 00:26:12,470
populated we can make our routing

00:26:09,800 --> 00:26:12,920
decisions and go on our merry way so

00:26:12,470 --> 00:26:14,990
we're not

00:26:12,920 --> 00:26:18,770
going to touch those today we're just

00:26:14,990 --> 00:26:22,970
trying to demystify the topic so there's

00:26:18,770 --> 00:26:25,670
all very commonly a gateway route also

00:26:22,970 --> 00:26:27,770
called the route of last resort so you

00:26:25,670 --> 00:26:33,320
saw it in the routing table it was

00:26:27,770 --> 00:26:38,000
labeled default so this route says if I

00:26:33,320 --> 00:26:39,700
don't know where to send a packet I'm

00:26:38,000 --> 00:26:42,440
going to send it to this route instead

00:26:39,700 --> 00:26:43,910
so if you're sitting at a home and

00:26:42,440 --> 00:26:48,010
you're looking at your home network this

00:26:43,910 --> 00:26:50,210
would be your isp like verizon fios or

00:26:48,010 --> 00:26:53,510
god bless you if you have this comcast

00:26:50,210 --> 00:26:54,800
or something like that is your ISPs if

00:26:53,510 --> 00:26:56,210
you don't know where to route it and you

00:26:54,800 --> 00:26:58,490
have a very small network in your home

00:26:56,210 --> 00:27:01,400
so odds are all of your packets are

00:26:58,490 --> 00:27:04,550
going to be going out you're going to

00:27:01,400 --> 00:27:06,530
hand it to your gateway with the

00:27:04,550 --> 00:27:08,990
assumption that the Gateway knows what

00:27:06,530 --> 00:27:11,960
it's doing that may or may not be a good

00:27:08,990 --> 00:27:13,820
assumption let an IP every routing

00:27:11,960 --> 00:27:15,440
decision is connectionless and stand

00:27:13,820 --> 00:27:17,540
alone so we make the assumption that oh

00:27:15,440 --> 00:27:19,580
that's my gateway I can just go hand the

00:27:17,540 --> 00:27:21,380
pack up to that person and he can handle

00:27:19,580 --> 00:27:23,960
it this is equivalent to handing your

00:27:21,380 --> 00:27:25,460
letter to the postman I don't know what

00:27:23,960 --> 00:27:30,770
it takes to get a letter to Minnesota

00:27:25,460 --> 00:27:32,270
but they do so I hand it to them usually

00:27:30,770 --> 00:27:35,180
we give it a very high metric if you

00:27:32,270 --> 00:27:37,400
recall from the diagram the default

00:27:35,180 --> 00:27:39,980
route had a metric of a hundred and the

00:27:37,400 --> 00:27:43,940
other routes have metrics of zero so we

00:27:39,980 --> 00:27:45,500
only land on the Gateway route if you if

00:27:43,940 --> 00:27:48,260
you also saw the net mass for the

00:27:45,500 --> 00:27:50,300
Gateway around is 0 so it will be

00:27:48,260 --> 00:27:52,520
matched to last no matter what you do it

00:27:50,300 --> 00:27:56,050
has the highest metric so it's literally

00:27:52,520 --> 00:27:58,460
the very last route you will ever get to

00:27:56,050 --> 00:28:00,680
so any packets not matching the other

00:27:58,460 --> 00:28:02,510
routes are sent to the Gateway now there

00:28:00,680 --> 00:28:06,400
are some situations where you won't have

00:28:02,510 --> 00:28:09,260
a gateway route like your ISPs down I

00:28:06,400 --> 00:28:12,110
feel bad for you if your ISPs down but

00:28:09,260 --> 00:28:13,850
at that point your gateway route may

00:28:12,110 --> 00:28:15,260
disappear because the assumption that

00:28:13,850 --> 00:28:16,850
you have somewhere to send your packet

00:28:15,260 --> 00:28:20,270
is no longer valid you're disconnected

00:28:16,850 --> 00:28:23,180
from your ISP or you're in an embedded

00:28:20,270 --> 00:28:25,100
set up or you're in a zero comp plan or

00:28:23,180 --> 00:28:26,780
something like that then you may not

00:28:25,100 --> 00:28:30,170
have a gateway but almost

00:28:26,780 --> 00:28:31,990
every situation you find yourself in

00:28:30,170 --> 00:28:34,700
you're going to have a gateway route

00:28:31,990 --> 00:28:38,570
except when you're talking about the

00:28:34,700 --> 00:28:41,200
really biggest ISPs what we find is that

00:28:38,570 --> 00:28:46,190
our gateway routes end up building a

00:28:41,200 --> 00:28:49,730
tree so I have verizon fios as my isp my

00:28:46,190 --> 00:28:52,640
gateway pointed them they have a gateway

00:28:49,730 --> 00:28:54,470
that points at somebody larger there are

00:28:52,640 --> 00:28:56,300
they one of the big dear ones okay so

00:28:54,470 --> 00:29:01,250
verizon probably handles my traffic for

00:28:56,300 --> 00:29:02,960
me but if i'm a small local isp if i'm

00:29:01,250 --> 00:29:06,680
using housing out like a small wireless

00:29:02,960 --> 00:29:11,000
isp like clear they're not a big i tier

00:29:06,680 --> 00:29:13,610
is p so they are client are there yeah

00:29:11,000 --> 00:29:16,220
they're clients of i get larger is be so

00:29:13,610 --> 00:29:19,640
my packet would go to them they have a

00:29:16,220 --> 00:29:22,190
gateway route up to their isp and so on

00:29:19,640 --> 00:29:24,590
and so on until we get to the backbone

00:29:22,190 --> 00:29:27,380
up at the backbone layer which is where

00:29:24,590 --> 00:29:29,080
bgp reigns supreme you don't generally

00:29:27,380 --> 00:29:31,610
have a gateway route because you know

00:29:29,080 --> 00:29:32,930
where everything generally should go and

00:29:31,610 --> 00:29:37,730
again we're going to cover that in the

00:29:32,930 --> 00:29:40,810
next hour so what this forms into is a

00:29:37,730 --> 00:29:44,630
tree structure and we call this tiering

00:29:40,810 --> 00:29:46,490
it's not a hard and fast rule like we

00:29:44,630 --> 00:29:48,770
just learned that verizon can wrap my

00:29:46,490 --> 00:29:51,320
packet entirely by itself it doesn't

00:29:48,770 --> 00:29:56,960
need tiering to figure out where to send

00:29:51,320 --> 00:29:59,120
it but in general most of our SPS most

00:29:56,960 --> 00:30:00,680
of our no experience are going to go

00:29:59,120 --> 00:30:01,880
through some level of tiering and then

00:30:00,680 --> 00:30:09,590
again it's going to be covered in the

00:30:01,880 --> 00:30:11,510
bgp top so there we go so all the stuff

00:30:09,590 --> 00:30:13,130
we talked about we've largely covered

00:30:11,510 --> 00:30:15,530
routing and it just kind of seems too

00:30:13,130 --> 00:30:17,600
easy like I thought there was more when

00:30:15,530 --> 00:30:18,860
i first started starting this in depth

00:30:17,600 --> 00:30:20,000
because i thought oh gosh think about

00:30:18,860 --> 00:30:23,270
all the stuff i'm gonna have to put in

00:30:20,000 --> 00:30:25,580
this presentation it's really not this

00:30:23,270 --> 00:30:27,440
is routing distill this is all routing

00:30:25,580 --> 00:30:32,030
is it's all there is to it it's not

00:30:27,440 --> 00:30:34,010
difficult it's not complicated it's just

00:30:32,030 --> 00:30:36,470
a couple things you need to remember but

00:30:34,010 --> 00:30:38,870
there are some gotchas so the routing

00:30:36,470 --> 00:30:40,429
protocols we talked about those are very

00:30:38,870 --> 00:30:43,039
complicated

00:30:40,429 --> 00:30:44,330
and methods that they decide how should

00:30:43,039 --> 00:30:45,980
we fill the routing table what are our

00:30:44,330 --> 00:30:48,230
metrics they're adding things they've

00:30:45,980 --> 00:30:50,480
got they've got to talk to other servers

00:30:48,230 --> 00:30:52,970
and other routers and so they have very

00:30:50,480 --> 00:30:54,169
complicated orchestrated dance to get

00:30:52,970 --> 00:30:56,539
all them working together those are

00:30:54,169 --> 00:30:57,799
complicated but if you think just about

00:30:56,539 --> 00:31:01,850
the routing table itself it's very

00:30:57,799 --> 00:31:03,590
simple what order should i do my route

00:31:01,850 --> 00:31:07,460
comparisons for the highest efficiency

00:31:03,590 --> 00:31:09,789
we said we started with the most the

00:31:07,460 --> 00:31:12,649
longest subnet mask for our comparison

00:31:09,789 --> 00:31:14,240
well what if we know that the longest

00:31:12,649 --> 00:31:18,919
subnet mask is a route that's going to

00:31:14,240 --> 00:31:21,409
be used infrequently so we may want to

00:31:18,919 --> 00:31:23,570
break that paradigm instead compare a

00:31:21,409 --> 00:31:25,429
couple other routes first so that way

00:31:23,570 --> 00:31:27,649
we're not always making a comparison

00:31:25,429 --> 00:31:29,869
that we know 99 times out of 100 or

00:31:27,649 --> 00:31:32,509
going it's going to fail so there are

00:31:29,869 --> 00:31:34,460
some complications you can adjust the

00:31:32,509 --> 00:31:36,769
order in which your routes are compared

00:31:34,460 --> 00:31:38,240
you can make that adjustment with your

00:31:36,769 --> 00:31:41,119
metric you can actually go monkey with

00:31:38,240 --> 00:31:44,240
your routing table some of the protocols

00:31:41,119 --> 00:31:46,100
will do that so there's some

00:31:44,240 --> 00:31:48,590
complication there again we're trying to

00:31:46,100 --> 00:31:54,200
seek a high efficient highly efficient

00:31:48,590 --> 00:31:56,600
router how fast can I go so I have a

00:31:54,200 --> 00:31:59,360
routing table I'm assuming it's in

00:31:56,600 --> 00:32:03,379
memory somewhere what can I do to make

00:31:59,360 --> 00:32:06,379
this faster so we're talking about a big

00:32:03,379 --> 00:32:07,940
boy router running many mega bits or

00:32:06,379 --> 00:32:09,649
gigabits of traffic running through it

00:32:07,940 --> 00:32:11,149
we want to make our comparisons as

00:32:09,649 --> 00:32:12,740
efficiently as quickly as possible we

00:32:11,149 --> 00:32:14,119
have a lot of traffic to get to so we're

00:32:12,740 --> 00:32:17,299
going to do things like look aside

00:32:14,119 --> 00:32:19,159
buffer zand we're going to do as the

00:32:17,299 --> 00:32:20,629
packet is coming in it used to be you

00:32:19,159 --> 00:32:22,009
would wait for the entire packet to come

00:32:20,629 --> 00:32:24,049
in and then you would do your work on it

00:32:22,009 --> 00:32:25,519
but as the packet is coming in before we

00:32:24,049 --> 00:32:26,749
even calculate the checksum let's go

00:32:25,519 --> 00:32:28,580
ahead and start comparing the routing

00:32:26,749 --> 00:32:30,559
table over here and it will do the

00:32:28,580 --> 00:32:33,110
checksum over here so hopefully by the

00:32:30,559 --> 00:32:34,909
time both of those it'll be faster as

00:32:33,110 --> 00:32:36,740
opposed to doing the checksum and then

00:32:34,909 --> 00:32:40,639
the lookups so there's things that can

00:32:36,740 --> 00:32:42,679
be done on a big boy router scale to

00:32:40,639 --> 00:32:44,119
help things go faster then we're

00:32:42,679 --> 00:32:46,940
probably not going to run into on our

00:32:44,119 --> 00:32:49,100
small scale but these add complication

00:32:46,940 --> 00:32:52,190
into the routing decision if you take

00:32:49,100 --> 00:32:55,220
all that away routing is just this

00:32:52,190 --> 00:32:57,899
simple you can just build pieces on

00:32:55,220 --> 00:33:00,539
and that's really all we have to talk

00:32:57,899 --> 00:33:10,619
about to demystify routers so does

00:33:00,539 --> 00:33:13,499
anybody have any questions yes sir so

00:33:10,619 --> 00:33:14,999
the question was a packets are dropped

00:33:13,499 --> 00:33:18,269
that there's an error and what role does

00:33:14,999 --> 00:33:20,669
ICMP play in all of this so ICMP is a

00:33:18,269 --> 00:33:24,419
layer for protocol it sits on top of IP

00:33:20,669 --> 00:33:26,009
and the goal is if something systemic is

00:33:24,419 --> 00:33:27,840
happening then we want to send messages

00:33:26,009 --> 00:33:29,820
back to the source that hey your packet

00:33:27,840 --> 00:33:32,549
was garbled you're probably going to

00:33:29,820 --> 00:33:34,649
need to resend this or flow congestion

00:33:32,549 --> 00:33:36,090
hey things our way to congestion for me

00:33:34,649 --> 00:33:38,340
to send your packet right now sorry you

00:33:36,090 --> 00:33:41,580
got selected for reaping this is the

00:33:38,340 --> 00:33:43,559
role ICMP plays it's purely a messaging

00:33:41,580 --> 00:33:47,070
I don't know what the C stands for the

00:33:43,559 --> 00:33:49,200
MP is messaging protocol it's basically

00:33:47,070 --> 00:33:50,789
for connection and flow control so

00:33:49,200 --> 00:33:53,159
everybody probably is heard of the ping

00:33:50,789 --> 00:33:54,299
and that's just a simple flow control

00:33:53,159 --> 00:33:56,460
mechanism to make sure that the path

00:33:54,299 --> 00:33:58,980
between me and there is clear and we can

00:33:56,460 --> 00:34:11,129
reach it and that's all it is so that's

00:33:58,980 --> 00:34:13,139
the role SNP place yes thank you for

00:34:11,129 --> 00:34:15,119
reminding me about that so the question

00:34:13,139 --> 00:34:16,980
was is there some standard some

00:34:15,119 --> 00:34:18,839
requirements at the standard for icmp

00:34:16,980 --> 00:34:22,049
the two that he mentioned was a

00:34:18,839 --> 00:34:24,839
destination unreachable time exceeded

00:34:22,049 --> 00:34:26,700
and again time to live and time exceeded

00:34:24,839 --> 00:34:28,950
is kind of a misnomer it's more like hot

00:34:26,700 --> 00:34:32,159
count exceeded but both of those are

00:34:28,950 --> 00:34:35,010
messages if your TTL dies if you run out

00:34:32,159 --> 00:34:36,569
of TTL then the router at which you ran

00:34:35,010 --> 00:34:38,909
out of TTL will send a message back to

00:34:36,569 --> 00:34:41,490
the source to say hey you ran out time

00:34:38,909 --> 00:34:43,290
exceeded and it's a specific ICMP

00:34:41,490 --> 00:34:45,899
message of this specific format with a

00:34:43,290 --> 00:34:48,569
little bit of information in it likewise

00:34:45,899 --> 00:34:50,220
if there's no way so let's say you're at

00:34:48,569 --> 00:34:54,270
home and your connection to your RSP

00:34:50,220 --> 00:34:56,010
dies then your local computer which has

00:34:54,270 --> 00:34:58,559
the router in it is going to try and

00:34:56,010 --> 00:35:00,299
reach google com and it can't and so

00:34:58,559 --> 00:35:01,829
it's going to return to you hey I can't

00:35:00,299 --> 00:35:03,089
possibly get to what you're telling me I

00:35:01,829 --> 00:35:05,819
don't have a route to get there my

00:35:03,089 --> 00:35:07,619
gateways down nothing's working so it

00:35:05,819 --> 00:35:08,310
will return an ICMP destination

00:35:07,619 --> 00:35:09,720
unreachable

00:35:08,310 --> 00:35:12,930
it's really infuriating when that

00:35:09,720 --> 00:35:27,840
happens but uh yes there are other

00:35:12,930 --> 00:35:30,480
questions yes sir so more of a statement

00:35:27,840 --> 00:35:32,730
a suggestion I guess talking about a

00:35:30,480 --> 00:35:33,870
laptop that has multiple interfaces on

00:35:32,730 --> 00:35:35,880
it or a device that has multiple

00:35:33,870 --> 00:35:39,180
interfaces on it and how that would come

00:35:35,880 --> 00:35:42,690
into the router decision well that let's

00:35:39,180 --> 00:35:46,320
say that both of them are connected to a

00:35:42,690 --> 00:35:49,500
way out we call that multi-homing and a

00:35:46,320 --> 00:35:50,610
simple setup like this and that skiff

00:35:49,500 --> 00:35:52,800
starts to get into some of the more

00:35:50,610 --> 00:35:55,200
complicated things what you do in

00:35:52,800 --> 00:35:57,450
routing is one of those would be

00:35:55,200 --> 00:35:59,670
considered the better of the two even if

00:35:57,450 --> 00:36:01,620
they're technically equal I think my

00:35:59,670 --> 00:36:03,090
personal preference is the wired

00:36:01,620 --> 00:36:04,200
connection is better than the wireless

00:36:03,090 --> 00:36:06,120
there's going to be some latency and

00:36:04,200 --> 00:36:07,500
let's say the guy next door is making

00:36:06,120 --> 00:36:09,420
nachos and your packets are going to be

00:36:07,500 --> 00:36:11,040
dropped in wireless so we prefer the

00:36:09,420 --> 00:36:13,710
wired connection so we're going to say

00:36:11,040 --> 00:36:16,380
we have two valid routes out of our

00:36:13,710 --> 00:36:18,750
network here the wired connection is

00:36:16,380 --> 00:36:21,300
going to have a lower metric so if the

00:36:18,750 --> 00:36:22,830
wired connection is working and even

00:36:21,300 --> 00:36:24,330
though they have the same subnet mask in

00:36:22,830 --> 00:36:25,620
the same route and everything the metric

00:36:24,330 --> 00:36:27,150
is lower for the wire so we're going to

00:36:25,620 --> 00:36:28,890
preferentially select the wired

00:36:27,150 --> 00:36:30,720
connection over the wireless and if

00:36:28,890 --> 00:36:32,850
someone steps on my cable and breaks it

00:36:30,720 --> 00:36:34,440
or the cat Yanks it out or something I

00:36:32,850 --> 00:36:35,670
don't know what's what's going on the

00:36:34,440 --> 00:36:36,780
wired connection disappears for any

00:36:35,670 --> 00:36:40,010
reason we still have the wireless

00:36:36,780 --> 00:36:43,170
connection so as the wired connection

00:36:40,010 --> 00:36:44,400
gets lost the system update and say hey

00:36:43,170 --> 00:36:46,500
that's no longer my routing table i'm

00:36:44,400 --> 00:36:48,630
going to delete that route and so the

00:36:46,500 --> 00:36:51,150
route is gone now we have the wireless

00:36:48,630 --> 00:36:52,590
connection yes it has a higher metric

00:36:51,150 --> 00:36:55,530
than what the wired connection was but

00:36:52,590 --> 00:36:58,380
with the wire drought gone then the

00:36:55,530 --> 00:36:59,790
wireless route wins because there's

00:36:58,380 --> 00:37:02,430
nothing competing against it as far as

00:36:59,790 --> 00:37:04,950
the metric goes this is a simple like a

00:37:02,430 --> 00:37:08,310
laptop style case we're talking on a

00:37:04,950 --> 00:37:12,170
bigger router like your office is very

00:37:08,310 --> 00:37:14,400
likely that you have more than one isp

00:37:12,170 --> 00:37:17,250
now you start getting into some of the

00:37:14,400 --> 00:37:19,590
Harrier decisions on well both of them I

00:37:17,250 --> 00:37:21,660
have like a three megabit backup pipe to

00:37:19,590 --> 00:37:21,960
this is be over here and then I have my

00:37:21,660 --> 00:37:24,510
main

00:37:21,960 --> 00:37:26,280
30 megabit over here I would

00:37:24,510 --> 00:37:29,520
preferentially send off my packets this

00:37:26,280 --> 00:37:31,589
way but if that goes down then I can use

00:37:29,520 --> 00:37:34,140
this and that's a pretty easy decision

00:37:31,589 --> 00:37:36,720
make let's say you have two relatively

00:37:34,140 --> 00:37:38,849
equal 30 megabit pipes and you want to

00:37:36,720 --> 00:37:44,130
use both of them now you're starting to

00:37:38,849 --> 00:37:45,510
get into something that's let's say that

00:37:44,130 --> 00:37:48,060
it's a little bit outside the scale of

00:37:45,510 --> 00:37:50,400
routing we would make in that such a

00:37:48,060 --> 00:37:52,140
case where we don't care which of the

00:37:50,400 --> 00:37:53,940
two so like a load-balanced isp

00:37:52,140 --> 00:37:57,690
connection we would create an

00:37:53,940 --> 00:38:00,210
equivalence class whereby the two routes

00:37:57,690 --> 00:38:02,760
are combined into one the decision is

00:38:00,210 --> 00:38:04,740
made to go that way and then something

00:38:02,760 --> 00:38:07,200
after the routing decisions made you

00:38:04,740 --> 00:38:10,349
decide which of the two links happens I

00:38:07,200 --> 00:38:13,800
think there's software built in the Winx

00:38:10,349 --> 00:38:15,420
called zebra I think that doesn't and

00:38:13,800 --> 00:38:17,910
you can do equivalence classes on routes

00:38:15,420 --> 00:38:21,869
that's a that's getting really advanced

00:38:17,910 --> 00:38:23,880
stuff but it's all possible it's not

00:38:21,869 --> 00:38:25,770
technically part of the base routing

00:38:23,880 --> 00:38:29,760
element but it's something more of a

00:38:25,770 --> 00:38:41,790
system level thing any other questions

00:38:29,760 --> 00:38:43,830
yes sir so the question is when I run

00:38:41,790 --> 00:38:46,290
traceroute what is actually going on so

00:38:43,830 --> 00:38:54,770
I can see all the hops what it's doing

00:38:46,290 --> 00:38:57,540
is it sends a series of ICMP pings to

00:38:54,770 --> 00:39:00,540
every hop in the chain and it starts off

00:38:57,540 --> 00:39:02,430
the first with a TTL set to one and then

00:39:00,540 --> 00:39:05,430
the second packet sets with the TTL set

00:39:02,430 --> 00:39:08,820
to the third pack of TTL set 2 3 and the

00:39:05,430 --> 00:39:11,849
idea is as long as the channel that is

00:39:08,820 --> 00:39:13,170
formed I please forgive the usage of the

00:39:11,849 --> 00:39:15,080
channel is formed between you and your

00:39:13,170 --> 00:39:17,280
destination is reasonably static you're

00:39:15,080 --> 00:39:19,230
probably going to get the same routers

00:39:17,280 --> 00:39:22,050
and the chain all the way along allows

00:39:19,230 --> 00:39:23,730
you to map every single step in your way

00:39:22,050 --> 00:39:25,770
all the way until you get to your

00:39:23,730 --> 00:39:27,300
endpoint which maybe three hops away 10

00:39:25,770 --> 00:39:29,609
hops away or whatever but it's sending

00:39:27,300 --> 00:39:32,250
those series and then you might do that

00:39:29,609 --> 00:39:33,060
over time with something like NTR so

00:39:32,250 --> 00:39:34,619
once you have all the information

00:39:33,060 --> 00:39:36,409
collected you can work on it but it's

00:39:34,619 --> 00:39:57,359
using the TTL neck

00:39:36,409 --> 00:39:58,739
any other questions sir a statement

00:39:57,359 --> 00:40:04,079
that's true the statement was that

00:39:58,739 --> 00:40:05,339
traceroute can be useless because well

00:40:04,079 --> 00:40:07,199
for many reasons you're staying because

00:40:05,339 --> 00:40:09,329
we it increments the port number it's

00:40:07,199 --> 00:40:12,149
using for every time I'd sending it out

00:40:09,329 --> 00:40:14,189
so you're blasting through this is Scout

00:40:12,149 --> 00:40:20,339
now we're talking about a layer above IP

00:40:14,189 --> 00:40:21,899
here we're talking I think it's a if

00:40:20,339 --> 00:40:29,880
it's ICMP there's no port number

00:40:21,899 --> 00:40:31,319
involved isn't there yeah so right and

00:40:29,880 --> 00:40:46,019
that's the trace out it's just a series

00:40:31,319 --> 00:40:47,969
of icmp packets okay so he says that a

00:40:46,019 --> 00:40:51,419
lot of the ISPs are denying traceroute

00:40:47,969 --> 00:40:54,449
or we think of a traceroute our entire

00:40:51,419 --> 00:40:56,099
IP ICMP traffic is less qualities and

00:40:54,449 --> 00:40:57,359
other traffic if I've got music

00:40:56,099 --> 00:40:59,309
streaming and a download and all this

00:40:57,359 --> 00:41:01,199
stuff going on and I'm struggling to

00:40:59,309 --> 00:41:02,699
keep up all this I'm going to ignore the

00:41:01,199 --> 00:41:04,019
guy who's just asking for a pig you

00:41:02,699 --> 00:41:06,179
don't screw that guy we don't need it

00:41:04,019 --> 00:41:07,949
it's less valuable data and I'll deal

00:41:06,179 --> 00:41:09,569
with it what I can't so there are times

00:41:07,949 --> 00:41:10,799
when you're doing your traceroute if

00:41:09,569 --> 00:41:13,829
you're doing at MTR you're measuring

00:41:10,799 --> 00:41:15,179
what your packet loss is over time and

00:41:13,829 --> 00:41:17,219
you keep seeing a consistent amount of

00:41:15,179 --> 00:41:19,199
packet loss at a particular router it

00:41:17,219 --> 00:41:22,799
could mean the router is congested and

00:41:19,199 --> 00:41:24,209
is not able to handle your ICMP request

00:41:22,799 --> 00:41:25,859
or it could mean that the router says

00:41:24,209 --> 00:41:28,559
screw you we're not going to hail you

00:41:25,859 --> 00:41:30,359
right now so and that's you don't know

00:41:28,559 --> 00:41:32,279
the routers you're going to use on the

00:41:30,359 --> 00:41:34,259
route between you and your endpoint and

00:41:32,279 --> 00:41:37,429
that's just whoever's maintain the

00:41:34,259 --> 00:41:37,429
router may make a choice like that

00:41:56,040 --> 00:42:04,990
okay really I don't fully understand

00:42:02,290 --> 00:42:09,010
Trace right than I thought I did I

00:42:04,990 --> 00:42:19,420
thought it was just pure the ICMP oh I

00:42:09,010 --> 00:42:27,329
have some reading to do no question okay

00:42:19,420 --> 00:42:32,650
so that's what I'm misunderstanding okay

00:42:27,329 --> 00:42:33,940
okay so there's multiple versions of

00:42:32,650 --> 00:42:36,910
trace routers what are you saying want

00:42:33,940 --> 00:42:39,430
some with UDP some TCP depending on what

00:42:36,910 --> 00:42:40,480
you end up with I it submitted

00:42:39,430 --> 00:42:47,470
differently with different operating

00:42:40,480 --> 00:42:59,260
systems I feel so right question to the

00:42:47,470 --> 00:43:02,349
back correct we can't modify that the

00:42:59,260 --> 00:43:03,609
question is if I p is connectionless how

00:43:02,349 --> 00:43:06,339
does it impact this one we're doing like

00:43:03,609 --> 00:43:08,710
a VPN or something like that so the VPN

00:43:06,339 --> 00:43:10,690
what it's doing on the fly it's adding

00:43:08,710 --> 00:43:13,990
some routes into your routing table such

00:43:10,690 --> 00:43:16,780
that we know so it's usually two parts

00:43:13,990 --> 00:43:18,520
the VPN is setting up a new device a

00:43:16,780 --> 00:43:20,349
virtual device for sending our network

00:43:18,520 --> 00:43:22,720
traffic it's usually a user space device

00:43:20,349 --> 00:43:25,480
and it's adding routes to the routing

00:43:22,720 --> 00:43:26,950
table such that all traffic designed for

00:43:25,480 --> 00:43:29,170
these IP should go over this new virtual

00:43:26,950 --> 00:43:32,980
device that's VPN in a nutshell right

00:43:29,170 --> 00:43:35,170
there so still it's connectionless

00:43:32,980 --> 00:43:37,510
there's no guarantee that it's going to

00:43:35,170 --> 00:43:39,609
survive especially since it's a usually

00:43:37,510 --> 00:43:41,770
it's a user space device and it may be

00:43:39,609 --> 00:43:43,329
tied up in the processor somewhere you

00:43:41,770 --> 00:43:44,109
still have no promise that your packets

00:43:43,329 --> 00:43:46,630
are going to get where they're supposed

00:43:44,109 --> 00:43:47,859
to go but the routing decision as long

00:43:46,630 --> 00:43:51,010
as the routing table is being cultivated

00:43:47,859 --> 00:43:52,990
properly by the VPN client then it

00:43:51,010 --> 00:43:57,550
should arrive where it's supposed to

00:43:52,990 --> 00:44:05,560
and that all the normal rules apply does

00:43:57,550 --> 00:44:07,240
answer your question the question is

00:44:05,560 --> 00:44:09,670
going to have multiple routes of VPN and

00:44:07,240 --> 00:44:12,970
the answer is absolutely whatever VPN

00:44:09,670 --> 00:44:16,000
you're using its wherever you connecting

00:44:12,970 --> 00:44:17,560
to that determines what alterations are

00:44:16,000 --> 00:44:18,700
going to happen to your routing table

00:44:17,560 --> 00:44:21,490
and it's entirely

00:44:18,700 --> 00:44:23,560
implementation-specific so it's quite

00:44:21,490 --> 00:44:26,920
common that a company will deliver VPN

00:44:23,560 --> 00:44:29,110
clients to their workers that have the

00:44:26,920 --> 00:44:31,720
routes baked into the software and

00:44:29,110 --> 00:44:33,220
that's they know this is the IP space

00:44:31,720 --> 00:44:34,990
we're using inside our company network

00:44:33,220 --> 00:44:37,330
here's what you're going to need there's

00:44:34,990 --> 00:44:39,220
also depending on the VPN solution you

00:44:37,330 --> 00:44:41,200
use you could negotiate for the rights

00:44:39,220 --> 00:44:42,790
it could be told to you by the server at

00:44:41,200 --> 00:44:45,970
the time in which you're negotiating for

00:44:42,790 --> 00:44:48,930
the VPN connection those are out to be

00:44:45,970 --> 00:44:50,920
relayed down to you the net result is

00:44:48,930 --> 00:44:53,230
it's really hard to know ahead of time

00:44:50,920 --> 00:44:56,230
what your VPN is going to do unless you

00:44:53,230 --> 00:45:01,920
know what's your view painting into so

00:44:56,230 --> 00:45:16,750
explicitly we have any other questions

00:45:01,920 --> 00:45:19,390
yes sir so the question was if you have

00:45:16,750 --> 00:45:21,310
two interfaces with the same subnet how

00:45:19,390 --> 00:45:22,810
can i specify I want some traffic to go

00:45:21,310 --> 00:45:25,780
to one and some traffic to go the other

00:45:22,810 --> 00:45:28,180
are you subdividing the subnet you could

00:45:25,780 --> 00:45:30,760
do that you could say let's say it's a /

00:45:28,180 --> 00:45:32,410
24 everything in this half of this last

00:45:30,760 --> 00:45:34,210
24 we're going to modify a writing table

00:45:32,410 --> 00:45:36,340
and all this this half should go there

00:45:34,210 --> 00:45:37,240
and that have should go there or you

00:45:36,340 --> 00:45:38,590
could do something a little more

00:45:37,240 --> 00:45:41,230
complicated like we're talking to

00:45:38,590 --> 00:45:42,910
multi-homing example where you create an

00:45:41,230 --> 00:45:45,130
equivalence class for both of those

00:45:42,910 --> 00:45:47,920
devices and then something after the

00:45:45,130 --> 00:45:50,320
routing decision to go to that virtual

00:45:47,920 --> 00:45:52,780
of equivalence class device something

00:45:50,320 --> 00:45:55,869
decides which of the two I think it's a

00:45:52,780 --> 00:45:57,430
QA BBA that's what it is and Linux has

00:45:55,869 --> 00:45:59,260
this service I don't know how to say it

00:45:57,430 --> 00:46:01,060
kwabba cava I don't know what it is but

00:45:59,260 --> 00:46:04,840
it actually can handle multi-homing

00:46:01,060 --> 00:46:06,799
using this service and we do that the

00:46:04,840 --> 00:46:08,599
routing decision has to go to a

00:46:06,799 --> 00:46:11,239
a device we can invent devices on the

00:46:08,599 --> 00:46:12,890
fly if we need to and so we just invent

00:46:11,239 --> 00:46:16,459
a new device for this particular use

00:46:12,890 --> 00:46:27,319
case and that's how we handle it so any

00:46:16,459 --> 00:46:29,329
other questions sir um my the cookie

00:46:27,319 --> 00:46:30,799
said I was bringing to him question is

00:46:29,329 --> 00:46:36,859
what does the guy next door looking at I

00:46:30,799 --> 00:46:40,219
brought him cookies oh he was making

00:46:36,859 --> 00:46:42,229
nachos so uh microwaves the microwaves

00:46:40,219 --> 00:46:44,989
are in the fog gigahertz band the same

00:46:42,229 --> 00:46:46,400
hat place is where all of our wireless

00:46:44,989 --> 00:46:48,259
internet is and so when the guy next

00:46:46,400 --> 00:46:51,589
door starts microwaving is not jose i

00:46:48,259 --> 00:46:53,660
lose my my gameplay it just loop it goes

00:46:51,589 --> 00:46:54,920
bye-bye it actually happens quite

00:46:53,660 --> 00:46:57,259
frequently when i'm watching a movie

00:46:54,920 --> 00:46:59,089
it's really irritating and so when we're

00:46:57,259 --> 00:47:00,709
watching a movie i comment to my wife

00:46:59,089 --> 00:47:06,170
hey the guy next door is making nachos

00:47:00,709 --> 00:47:08,390
so change excuse me yeah they're very

00:47:06,170 --> 00:47:09,769
hungry and they're young strapping lads

00:47:08,390 --> 00:47:16,420
they're probably eating lots of nachos

00:47:09,769 --> 00:47:16,420
or popcorn anyway any other questions

00:47:16,809 --> 00:47:20,089
all right guys well thank you very much

00:47:19,009 --> 00:47:22,729
for hanging out with me i hope we

00:47:20,089 --> 00:47:25,519
demystified routing for you guys stick

00:47:22,729 --> 00:47:28,299
around for bgp is coming up immediately

00:47:25,519 --> 00:47:28,299
after this session

00:48:18,790 --> 00:48:23,270
Citrix XenServer gives you everything

00:48:21,080 --> 00:48:26,240
you need to integrate manage and

00:48:23,270 --> 00:48:28,400
automate a virtual data center all on an

00:48:26,240 --> 00:48:30,800
enterprise-class cloud proven virtual

00:48:28,400 --> 00:48:33,410
platform and at a third of the cost of

00:48:30,800 --> 00:48:35,240
other solutions but why even bother with

00:48:33,410 --> 00:48:37,430
virtualizing your server infrastructure

00:48:35,240 --> 00:48:39,380
in the first place well let's say you

00:48:37,430 --> 00:48:41,690
have a traditional one server to one

00:48:39,380 --> 00:48:43,700
application architecture but you're

00:48:41,690 --> 00:48:46,220
running out of resources and performance

00:48:43,700 --> 00:48:48,550
is suffering once you order new server

00:48:46,220 --> 00:48:51,440
hardware you'll wait for delivery

00:48:48,550 --> 00:48:54,320
configure it install your business

00:48:51,440 --> 00:48:57,080
application stage and test the server

00:48:54,320 --> 00:48:59,270
and finally add it to your production

00:48:57,080 --> 00:49:01,460
farm if you've been through this process

00:48:59,270 --> 00:49:04,010
before you know it can take weeks or

00:49:01,460 --> 00:49:05,840
even months you also know it's a

00:49:04,010 --> 00:49:07,790
manually intensive process that will

00:49:05,840 --> 00:49:11,120
burden your team every time you outgrow

00:49:07,790 --> 00:49:12,890
your current setup with a virtual server

00:49:11,120 --> 00:49:16,570
solution you could accomplish all of

00:49:12,890 --> 00:49:16,570
that in less than half a day

00:49:22,130 --> 00:49:24,190
you

00:51:57,600 --> 00:52:01,870
your customers rely on your website or

00:52:00,340 --> 00:52:04,270
application if it's slower

00:52:01,870 --> 00:52:07,210
non-responsive it infuriates your users

00:52:04,270 --> 00:52:09,010
and costs you money keeping your

00:52:07,210 --> 00:52:12,210
business critical systems humming along

00:52:09,010 --> 00:52:14,830
requires insight into what they're doing

00:52:12,210 --> 00:52:16,780
your system metrics tells stories

00:52:14,830 --> 00:52:18,790
stories that can reveal performance

00:52:16,780 --> 00:52:21,130
bottlenecks resource limitations and

00:52:18,790 --> 00:52:22,720
other problems but how do you keep an

00:52:21,130 --> 00:52:25,360
eye on all of your systems performance

00:52:22,720 --> 00:52:28,360
metrics in real-time and record this

00:52:25,360 --> 00:52:30,370
data for later analysis enter longview

00:52:28,360 --> 00:52:32,170
the new way to see what's really going

00:52:30,370 --> 00:52:34,330
on under the hood the long view

00:52:32,170 --> 00:52:36,370
dashboard lets you visualize the status

00:52:34,330 --> 00:52:38,830
of all your systems providing you with a

00:52:36,370 --> 00:52:42,220
bird's-eye view of your entire fleet you

00:52:38,830 --> 00:52:44,800
can sort by cpu memory swap processes

00:52:42,220 --> 00:52:46,540
load and network usage click a specific

00:52:44,800 --> 00:52:48,940
system to access its individual

00:52:46,540 --> 00:52:51,480
dashboard then click and drag to zoom in

00:52:48,940 --> 00:52:53,860
on chokepoints and get more detail

00:52:51,480 --> 00:52:55,540
comprehensive network data including

00:52:53,860 --> 00:52:57,850
inbound and outbound traffic is

00:52:55,540 --> 00:52:59,830
available on the network tab and disk

00:52:57,850 --> 00:53:01,990
rights and free space on a disk stabbed

00:52:59,830 --> 00:53:04,180
while the process explorer displays

00:53:01,990 --> 00:53:06,700
usage statistics for individual

00:53:04,180 --> 00:53:08,890
processes the system info tab shows

00:53:06,700 --> 00:53:11,110
listening services active connections

00:53:08,890 --> 00:53:13,270
and available updates adding long view

00:53:11,110 --> 00:53:14,950
to a system is easy just click the

00:53:13,270 --> 00:53:17,080
button copy the one line installation

00:53:14,950 --> 00:53:19,540
command then run the command on your

00:53:17,080 --> 00:53:21,250
linux system to complete the process the

00:53:19,540 --> 00:53:23,440
agent will begin collecting data and

00:53:21,250 --> 00:53:26,920
sending it to longview then the graphs

00:53:23,440 --> 00:53:29,200
start rolling use long view to gain

00:53:26,920 --> 00:53:33,280
visibility into your servers so when

00:53:29,200 --> 00:53:35,200
your website or app heats up it stays up

00:53:33,280 --> 00:53:37,420
Citrix XenServer gives you everything

00:53:35,200 --> 00:53:40,390
you need to integrate manage and

00:53:37,420 --> 00:53:42,550
automate a virtual data center all on an

00:53:40,390 --> 00:53:44,950
enterprise-class cloud proven virtual

00:53:42,550 --> 00:53:47,680
platform and at a third of the cost of

00:53:44,950 --> 00:53:49,390
other solutions but why even bother with

00:53:47,680 --> 00:53:51,550
virtualizing your server infrastructure

00:53:49,390 --> 00:53:53,530
in the first place well let's say you

00:53:51,550 --> 00:53:55,840
have a traditional one server to one

00:53:53,530 --> 00:53:57,820
application architecture but you're

00:53:55,840 --> 00:54:00,370
running out of resources and performance

00:53:57,820 --> 00:54:02,700
is suffering once you order new server

00:54:00,370 --> 00:54:05,590
hardware you'll wait for delivery

00:54:02,700 --> 00:54:08,500
configure it install your business

00:54:05,590 --> 00:54:11,230
application stage and test the server

00:54:08,500 --> 00:54:13,420
and finally add it to your production

00:54:11,230 --> 00:54:15,610
farm if you've been through this process

00:54:13,420 --> 00:54:18,160
before you know it can take weeks or

00:54:15,610 --> 00:54:19,990
even months you also know it's a

00:54:18,160 --> 00:54:21,940
manually intensive process that will

00:54:19,990 --> 00:54:25,270
burden your team every time you outgrow

00:54:21,940 --> 00:54:27,040
your current setup with a virtual server

00:54:25,270 --> 00:54:29,830
solution you could accomplish all of

00:54:27,040 --> 00:54:32,380
that in less than half a day server

00:54:29,830 --> 00:54:34,240
virtualization software separates the OS

00:54:32,380 --> 00:54:36,640
and application from the underlying

00:54:34,240 --> 00:54:38,800
server hardware and with multiple

00:54:36,640 --> 00:54:40,510
virtual machines on a single server you

00:54:38,800 --> 00:54:43,480
can use each of them to run different

00:54:40,510 --> 00:54:45,250
os's and applications this makes it

00:54:43,480 --> 00:54:47,050
possible to move your virtual machines

00:54:45,250 --> 00:54:49,120
from one piece of hardware to another

00:54:47,050 --> 00:54:51,370
whenever you want to maximize

00:54:49,120 --> 00:54:53,350
utilization simplify maintenance or

00:54:51,370 --> 00:54:55,660
recover from a hardware failure and

00:54:53,350 --> 00:54:58,600
without slowing down your applications

00:54:55,660 --> 00:55:01,660
or users clearly server virtualization

00:54:58,600 --> 00:55:04,660
provides big benefits and Citrix

00:55:01,660 --> 00:55:06,910
XenServer provides even more since it's

00:55:04,660 --> 00:55:08,740
built on an open platform xenserver

00:55:06,910 --> 00:55:11,050
plays well with your existing hardware

00:55:08,740 --> 00:55:13,360
storage systems and IT management

00:55:11,050 --> 00:55:16,090
software as well as with the industry's

00:55:13,360 --> 00:55:18,100
leading cloud service providers best of

00:55:16,090 --> 00:55:19,810
all you can get started by downloading a

00:55:18,100 --> 00:55:23,080
fully functional production-ready

00:55:19,810 --> 00:55:25,300
version of xenserver for free after a

00:55:23,080 --> 00:55:27,400
10-minute installation process you'll

00:55:25,300 --> 00:55:29,440
see how easy it is to start virtualizing

00:55:27,400 --> 00:55:31,870
your workloads and automating your IT

00:55:29,440 --> 00:55:33,460
management processes and when you're

00:55:31,870 --> 00:55:35,410
ready for a richer set of management

00:55:33,460 --> 00:55:37,900
tools just upgrade to one of the premium

00:55:35,410 --> 00:55:39,730
editions of xenserver so whether you're

00:55:37,900 --> 00:55:41,680
interested in virtualizing servers for

00:55:39,730 --> 00:55:43,930
the first time expanding your server

00:55:41,680 --> 00:55:46,480
virtualization footprint or moving

00:55:43,930 --> 00:55:47,230
server workloads to the cloud download

00:55:46,480 --> 00:55:49,359
and install

00:55:47,230 --> 00:55:52,390
and server today and see how it can help

00:55:49,359 --> 00:55:57,750
you simplify your IT environment citrix

00:55:52,390 --> 00:55:57,750
xenserver do more don't spend more

00:56:02,910 --> 00:56:04,970
you

00:57:44,120 --> 00:57:46,180

YouTube URL: https://www.youtube.com/watch?v=_UE9brp_3LU


