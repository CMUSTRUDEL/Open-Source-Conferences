Title: Colin Charles -- The MySQL Ecosystem
Publication date: 2017-01-25
Playlist: 2015 SouthEast LinuxFest
Description: 
	
Captions: 
	00:00:01,070 --> 00:00:06,899
I'm guessing all of you mysql users who

00:00:04,529 --> 00:00:19,439
who doesn't use mysql here really what

00:00:06,899 --> 00:00:21,810
do you use he okay excel there is a book

00:00:19,439 --> 00:00:23,820
actually by I think packet publishing

00:00:21,810 --> 00:00:27,140
this is using excel as your database

00:00:23,820 --> 00:00:31,289
which allows you to export CSV s into

00:00:27,140 --> 00:00:34,320
mysql maria TV i remember seeing this

00:00:31,289 --> 00:00:35,850
book about 10 years ago i don't know if

00:00:34,320 --> 00:00:41,070
it's still available you can go to

00:00:35,850 --> 00:00:45,059
amazon and check it out anyway I I'm

00:00:41,070 --> 00:00:49,170
Colin I've worked in the MySQL ecosystem

00:00:45,059 --> 00:00:53,539
for more than 10 years maybe 12 or 15

00:00:49,170 --> 00:00:57,690
years I've been a user since 2000 I

00:00:53,539 --> 00:01:00,239
worked at various companies all of the

00:00:57,690 --> 00:01:02,850
MySQL related companies accept our co-op

00:01:00,239 --> 00:01:04,880
Roberta I also on the community

00:01:02,850 --> 00:01:07,860
contributor award of the year last year

00:01:04,880 --> 00:01:09,750
I'm not as animated as I usually am

00:01:07,860 --> 00:01:14,610
because I just came here half an hour

00:01:09,750 --> 00:01:21,860
ago I came from Tokyo to and all the way

00:01:14,610 --> 00:01:24,810
to here via a very convoluted route so

00:01:21,860 --> 00:01:29,490
bear with me I'll be better tomorrow for

00:01:24,810 --> 00:01:33,390
the other top mysql is a really mature

00:01:29,490 --> 00:01:37,290
ecosystem it's been around for 20 years

00:01:33,390 --> 00:01:39,509
now percona server has been around for

00:01:37,290 --> 00:01:42,740
seven years they actually started

00:01:39,509 --> 00:01:44,909
patching for about that long Maria DB

00:01:42,740 --> 00:01:47,399
officially has been around for five

00:01:44,909 --> 00:01:49,530
years a little longer if you count the

00:01:47,399 --> 00:01:52,890
fact that we obviously made a beta

00:01:49,530 --> 00:01:55,710
release a little bit before drizzle was

00:01:52,890 --> 00:01:59,820
around for a couple years but it's

00:01:55,710 --> 00:02:02,070
currently dead web-scale SQL looks

00:01:59,820 --> 00:02:04,229
really interesting and has been around

00:02:02,070 --> 00:02:07,950
for about a year and has got a lot of

00:02:04,229 --> 00:02:10,560
users backing it now out of curiosity

00:02:07,950 --> 00:02:13,800
how many of you have not heard of

00:02:10,560 --> 00:02:19,350
drizzle okay

00:02:13,800 --> 00:02:25,260
how many not a web-scale SQL okay Maria

00:02:19,350 --> 00:02:35,250
TB we're gonna server and you obviously

00:02:25,260 --> 00:02:36,540
haven't heard of my skill okay so we

00:02:35,250 --> 00:02:41,610
start off obviously with a history

00:02:36,540 --> 00:02:46,200
lesson it started in 1979 long before I

00:02:41,610 --> 00:02:48,930
existed it was a text you I to Isom data

00:02:46,200 --> 00:02:51,030
store called uni reg where Rose written

00:02:48,930 --> 00:02:55,080
to disk and indexes were available on

00:02:51,030 --> 00:02:57,540
top of that and then in 86 that was uni

00:02:55,080 --> 00:03:01,230
rag on unix and this is basically forms

00:02:57,540 --> 00:03:03,480
to enter data and if you use MySQL often

00:03:01,230 --> 00:03:05,730
you will realize that in the data

00:03:03,480 --> 00:03:09,660
directory is invalid mysql you will see

00:03:05,730 --> 00:03:12,150
something called dot frm files and frm

00:03:09,660 --> 00:03:17,280
files are basically form files they came

00:03:12,150 --> 00:03:19,380
from there m SQL kind of was a freely

00:03:17,280 --> 00:03:21,720
available and not open source and came

00:03:19,380 --> 00:03:24,660
around that time and monty the creator

00:03:21,720 --> 00:03:26,910
of both mysql and really be Michael

00:03:24,660 --> 00:03:31,530
Monty villainous decided to actually

00:03:26,910 --> 00:03:34,770
write a plug-in for Isaac I am data

00:03:31,530 --> 00:03:36,660
storage m SQL and when he realized that

00:03:34,770 --> 00:03:40,110
was actually not going to work out too

00:03:36,660 --> 00:03:45,420
well he decided that MySQL would make a

00:03:40,110 --> 00:03:48,750
lot more sense and in 1995 around may

00:03:45,420 --> 00:03:52,709
actually like late May mysql 1 was

00:03:48,750 --> 00:03:55,350
released and this is now not run by

00:03:52,709 --> 00:03:58,590
Monty's old company now Monty had a

00:03:55,350 --> 00:04:01,920
couple old companies tech something and

00:03:58,590 --> 00:04:04,320
Monty program maybe but this is also

00:04:01,920 --> 00:04:10,200
when mysql a B was incorporated in

00:04:04,320 --> 00:04:12,780
sweden 96 brought along 319 but I'm

00:04:10,200 --> 00:04:14,640
guessing a lot of the early internet

00:04:12,780 --> 00:04:18,870
started using that so sites like

00:04:14,640 --> 00:04:21,720
slashdot people Soviet / not know oh yes

00:04:18,870 --> 00:04:22,979
one person excellent everybody else

00:04:21,720 --> 00:04:25,200
probably moved to I don't know hacker

00:04:22,979 --> 00:04:27,710
news on me but / not used to used to run

00:04:25,200 --> 00:04:30,650
a lot of early mysql with

00:04:27,710 --> 00:04:32,539
and in two thousand is probably when

00:04:30,650 --> 00:04:34,940
more and more people start using it

00:04:32,539 --> 00:04:38,479
because that's when you got a GPL mysql

00:04:34,940 --> 00:04:40,490
server not only did you get a GPL mysql

00:04:38,479 --> 00:04:43,460
server it was also the basically the

00:04:40,490 --> 00:04:46,370
creation of what is currently known as a

00:04:43,460 --> 00:04:48,319
dual license piece of software mysql was

00:04:46,370 --> 00:04:51,440
probably the first one to come up with a

00:04:48,319 --> 00:04:54,160
doer license piece of software and you

00:04:51,440 --> 00:04:57,020
know for a company that was pretty small

00:04:54,160 --> 00:04:59,389
GP elling the entire server back then

00:04:57,020 --> 00:05:04,400
was actually a pretty risky thing to do

00:04:59,389 --> 00:05:08,210
because how do you make money so as I

00:05:04,400 --> 00:05:13,370
said dual licensing came along and lib

00:05:08,210 --> 00:05:15,590
mysql was also GPL it and this actually

00:05:13,370 --> 00:05:17,570
had a point of contention where many

00:05:15,590 --> 00:05:20,479
linux distributions were occasionally

00:05:17,570 --> 00:05:22,580
shipping mysql back then and they would

00:05:20,479 --> 00:05:25,310
not want to switch client libraries from

00:05:22,580 --> 00:05:27,680
the lgpl client library to the GPL

00:05:25,310 --> 00:05:30,289
client library and this obviously is

00:05:27,680 --> 00:05:34,039
important because protocols change over

00:05:30,289 --> 00:05:36,470
time and we needed people to start

00:05:34,039 --> 00:05:40,099
shipping more modern releases the GPL

00:05:36,470 --> 00:05:42,380
lib mysql and that's short and a few

00:05:40,099 --> 00:05:44,570
years later that was this thing known as

00:05:42,380 --> 00:05:47,750
the false exception so that is how

00:05:44,570 --> 00:05:50,300
distributions ended up moving to a GPL

00:05:47,750 --> 00:05:53,780
lib mysql as opposed to sticking with

00:05:50,300 --> 00:05:56,270
the old lgpl live mysql false exception

00:05:53,780 --> 00:05:57,830
basically says look if you're using this

00:05:56,270 --> 00:06:01,490
for free and open source software you

00:05:57,830 --> 00:06:05,000
link to it no worries if you'd like very

00:06:01,490 --> 00:06:08,000
much to have commercial software please

00:06:05,000 --> 00:06:11,090
call mysql for a license and when we

00:06:08,000 --> 00:06:12,620
started selling licenses we were easily

00:06:11,090 --> 00:06:16,099
getting about sixty percent of revenue

00:06:12,620 --> 00:06:18,530
from OEM license fees this revenue

00:06:16,099 --> 00:06:19,849
obviously declined over the years but

00:06:18,530 --> 00:06:21,740
there were many many products that

00:06:19,849 --> 00:06:24,130
shipped lib mysql including cisco

00:06:21,740 --> 00:06:28,009
routers where you know the federated x

00:06:24,130 --> 00:06:29,870
engine was written for adobe digital

00:06:28,009 --> 00:06:33,229
asset management for photoshop and other

00:06:29,870 --> 00:06:34,460
software we're using this and in fact if

00:06:33,229 --> 00:06:37,159
you want to know how to actually make

00:06:34,460 --> 00:06:38,719
use of live mysql there's a there's a

00:06:37,159 --> 00:06:40,969
pretty good book by a press called

00:06:38,719 --> 00:06:41,420
expert mysql and the author Chuck bell

00:06:40,969 --> 00:06:44,120
is

00:06:41,420 --> 00:06:47,660
in the audience probably start date the

00:06:44,120 --> 00:06:51,740
book but there's a second edition coming

00:06:47,660 --> 00:06:53,750
out okay already out ok so I'm gratz

00:06:51,740 --> 00:06:56,210
today to second edition site I learned

00:06:53,750 --> 00:06:57,650
about this is this is brilliant so that

00:06:56,210 --> 00:07:02,270
was actually pretty good book on using

00:06:57,650 --> 00:07:05,450
the client libraries and then and then

00:07:02,270 --> 00:07:07,790
came may 2000 where 323 came out and you

00:07:05,450 --> 00:07:09,200
know 323 is actually a pretty important

00:07:07,790 --> 00:07:11,360
release for us we will never forget this

00:07:09,200 --> 00:07:14,270
release because many people said this

00:07:11,360 --> 00:07:16,490
was what made MySQL we got statement

00:07:14,270 --> 00:07:20,810
based replication and that was actually

00:07:16,490 --> 00:07:22,580
pretty cool the rumor has it it took a

00:07:20,810 --> 00:07:24,080
couple weeks to write statement based

00:07:22,580 --> 00:07:26,270
application where you actually have

00:07:24,080 --> 00:07:27,980
statements being wrapped being written

00:07:26,270 --> 00:07:30,740
to a log and then replayed on a slave

00:07:27,980 --> 00:07:37,610
but this gave you read replicas just

00:07:30,740 --> 00:07:40,550
kind of handy now I know Bruce from

00:07:37,610 --> 00:07:42,890
earlier very well not to diss postgres

00:07:40,550 --> 00:07:46,400
in any way shape or form but they only

00:07:42,890 --> 00:07:49,040
got replication out of the box in about

00:07:46,400 --> 00:07:51,250
September 2010 before that you had to

00:07:49,040 --> 00:07:54,950
hack up things like slowly and stuff so

00:07:51,250 --> 00:07:56,630
my skill had a good tenure gap in terms

00:07:54,950 --> 00:08:03,650
of replication which is what made it

00:07:56,630 --> 00:08:05,390
spread everywhere 323 is probably one of

00:08:03,650 --> 00:08:07,760
the most famous releases it's been

00:08:05,390 --> 00:08:10,310
around for a long time funnily enough I

00:08:07,760 --> 00:08:11,750
hear people still run it it's not

00:08:10,310 --> 00:08:14,240
supported in any way shape or form

00:08:11,750 --> 00:08:19,250
except from a few support companies but

00:08:14,240 --> 00:08:21,320
yes it still does get run and then you

00:08:19,250 --> 00:08:22,790
probably realized that we had this my

00:08:21,320 --> 00:08:25,970
eyes I'm engine that did not do

00:08:22,790 --> 00:08:27,530
transactions so a third party company

00:08:25,970 --> 00:08:30,170
called inner base actually created the

00:08:27,530 --> 00:08:31,970
innodb storage engine that brought along

00:08:30,170 --> 00:08:35,840
transactions multi version could

00:08:31,970 --> 00:08:39,170
guarantee control it made my SQL kind of

00:08:35,840 --> 00:08:41,240
a real database previously people used

00:08:39,170 --> 00:08:43,130
to say this was a toy database in fact

00:08:41,240 --> 00:08:45,890
if you go read the old docs on atomic

00:08:43,130 --> 00:08:48,230
operations today you might actually get

00:08:45,890 --> 00:08:50,750
a good laugh because today we support

00:08:48,230 --> 00:08:54,050
Tomic operations we didn't back then and

00:08:50,750 --> 00:08:55,010
we wrote wonderful marketing messages to

00:08:54,050 --> 00:08:58,910
work around

00:08:55,010 --> 00:09:00,640
thomas city in 2001 it also brought the

00:08:58,910 --> 00:09:04,100
first round of venture capital money and

00:09:00,640 --> 00:09:07,240
a formal CEO in the form of Martin

00:09:04,100 --> 00:09:16,430
Miko's whom took the company from

00:09:07,240 --> 00:09:19,490
basically GPL to an exit 2002 is when my

00:09:16,430 --> 00:09:22,070
MySQL actually sued progress noosphere

00:09:19,490 --> 00:09:23,630
over this Gemini storage engine and if

00:09:22,070 --> 00:09:25,880
you're interested in this Gemini engine

00:09:23,630 --> 00:09:29,060
there's actually still a launchpad tree

00:09:25,880 --> 00:09:30,170
called Amira that's kind of a rebase of

00:09:29,060 --> 00:09:32,150
this engine it never really went

00:09:30,170 --> 00:09:34,940
anywhere it was also one of the first

00:09:32,150 --> 00:09:36,530
test of the GPL in the courts and the

00:09:34,940 --> 00:09:38,960
courts prove that the GPL is actually

00:09:36,530 --> 00:09:41,480
enforceable so Jim and I became open

00:09:38,960 --> 00:09:47,000
source but was eventually abandoned by

00:09:41,480 --> 00:09:50,480
these folk atmosphere we took on series

00:09:47,000 --> 00:09:53,630
be in 2003 and that actually helped us

00:09:50,480 --> 00:09:55,820
ramp up engineering quite a bit in fact

00:09:53,630 --> 00:09:57,260
that was a good thing with a series be

00:09:55,820 --> 00:09:59,510
money that came is that engineering

00:09:57,260 --> 00:10:01,910
started growing and I say engineering

00:09:59,510 --> 00:10:03,560
started growing I literally mean like if

00:10:01,910 --> 00:10:06,350
you contributed code like you wrote a

00:10:03,560 --> 00:10:09,830
connector you wrote any remote patch

00:10:06,350 --> 00:10:11,030
you'd most likely get a MySQL person

00:10:09,830 --> 00:10:14,000
contacting you saying hi would you like

00:10:11,030 --> 00:10:16,880
a job this also happen if you hung out

00:10:14,000 --> 00:10:18,380
on hash MySQL IRC helping people that's

00:10:16,880 --> 00:10:20,810
how we got a lot of our early support

00:10:18,380 --> 00:10:23,330
stuff and so forth so we were just

00:10:20,810 --> 00:10:29,180
expanding the company by hiring any

00:10:23,330 --> 00:10:32,660
contributor to mysql and then we

00:10:29,180 --> 00:10:34,190
released 4.0 GA but at the same time we

00:10:32,660 --> 00:10:36,050
were very ambitious by releasing two

00:10:34,190 --> 00:10:39,110
alpha releases we said look for ones

00:10:36,050 --> 00:10:40,820
coming and there is the next release why

00:10:39,110 --> 00:10:42,920
do we do that because we also have this

00:10:40,820 --> 00:10:46,220
essay p partnership and essay p said

00:10:42,920 --> 00:10:48,890
look we're enterprise software we don't

00:10:46,220 --> 00:10:53,210
want people to buy oracle licenses we

00:10:48,890 --> 00:10:55,130
wanted to be bootstrapped with mysql now

00:10:53,210 --> 00:10:58,460
mysql doesn't have all these wonderful

00:10:55,130 --> 00:11:00,230
features like triggers and views and so

00:10:58,460 --> 00:11:03,650
far or explains for inserts updates

00:11:00,230 --> 00:11:07,700
denis for DML ops which SI p actually

00:11:03,650 --> 00:11:08,690
needed this is also when we toyed around

00:11:07,700 --> 00:11:10,640
with this

00:11:08,690 --> 00:11:16,580
XD v database which is actually entirely

00:11:10,640 --> 00:11:22,700
written in Pascal Max is Monty's second

00:11:16,580 --> 00:11:29,650
child is only son mu the my is his first

00:11:22,700 --> 00:11:34,520
daughter so we tried very hard to make a

00:11:29,650 --> 00:11:36,890
MySQL enterprise-ready and around the

00:11:34,520 --> 00:11:38,210
same time we also acquired a lot of'em

00:11:36,890 --> 00:11:41,720
ericsson and these are the people that

00:11:38,210 --> 00:11:43,400
made NDB cluster and they and pretty in

00:11:41,720 --> 00:11:45,470
it's pretty hard today to find a single

00:11:43,400 --> 00:11:48,740
source where you know your cell phone

00:11:45,470 --> 00:11:52,450
doesn't contact a home location recorder

00:11:48,740 --> 00:11:54,980
and actually connect to a NDB cluster

00:11:52,450 --> 00:11:57,200
most most of the operators do they

00:11:54,980 --> 00:11:59,660
actually end up using that and NDB

00:11:57,200 --> 00:12:03,260
cluster actually gives you basically 590

00:11:59,660 --> 00:12:05,630
the lap time funnily enough many people

00:12:03,260 --> 00:12:11,270
were talking about no SQL databases for

00:12:05,630 --> 00:12:13,790
a very long time after 2009 but any be

00:12:11,270 --> 00:12:17,270
was actually already a no SQL database

00:12:13,790 --> 00:12:18,770
in 2003 it didn't have a sequel

00:12:17,270 --> 00:12:20,620
interface you actually wrote you could

00:12:18,770 --> 00:12:22,940
actually write directly to the NDB API

00:12:20,620 --> 00:12:30,560
the sequel interface was actually tacked

00:12:22,940 --> 00:12:33,530
on to it later so october two thousand

00:12:30,560 --> 00:12:35,420
four brought us a 4-1 GA including NDB

00:12:33,530 --> 00:12:37,870
cluster so this was a very good selling

00:12:35,420 --> 00:12:42,260
point because now we could no sell it to

00:12:37,870 --> 00:12:43,640
lots of telcos and formerly the name of

00:12:42,260 --> 00:12:51,220
the product became known as mysql

00:12:43,640 --> 00:12:51,220
cluster 2005 brought on the 50 tree and

00:12:51,910 --> 00:12:56,510
it was currently the focus of

00:12:54,410 --> 00:12:58,520
development lots of rapid changes were

00:12:56,510 --> 00:13:02,830
going through it it was nowhere near

00:12:58,520 --> 00:13:06,620
ready but we had to release it why

00:13:02,830 --> 00:13:10,220
because in October of 2005 Oracle

00:13:06,620 --> 00:13:12,140
acquired in a vase this was this can be

00:13:10,220 --> 00:13:15,650
viewed today as one of Martin's biggest

00:13:12,140 --> 00:13:18,440
failures not acquiring in a base in fact

00:13:15,650 --> 00:13:20,360
heike always wanted to work at Oracle

00:13:18,440 --> 00:13:22,040
that was his main goal hockey Tori was

00:13:20,360 --> 00:13:25,610
the author of

00:13:22,040 --> 00:13:29,600
you know DB and he shortly said look I

00:13:25,610 --> 00:13:32,060
can now buy myself a nice Porsche and I

00:13:29,600 --> 00:13:34,639
get a VP title at Oracle and he's I've

00:13:32,060 --> 00:13:36,709
been very happy since I believe he still

00:13:34,639 --> 00:13:42,199
is at Oracle and occasion teaches at the

00:13:36,709 --> 00:13:44,870
University so after innodb Friday which

00:13:42,199 --> 00:13:46,149
is a very dark day for everyone at MySQL

00:13:44,870 --> 00:13:49,730
we were very worried what would happen

00:13:46,149 --> 00:13:52,279
we released 50 SGA we said aha we must

00:13:49,730 --> 00:13:56,560
release a ga it was unfortunately a

00:13:52,279 --> 00:13:59,300
terrible release it had a broken ABI the

00:13:56,560 --> 00:14:01,819
application binary interface linux

00:13:59,300 --> 00:14:03,319
distributions are complaining it had a

00:14:01,819 --> 00:14:04,790
lot of enterprise features though we you

00:14:03,319 --> 00:14:08,540
know finally got things like stalled

00:14:04,790 --> 00:14:10,310
procedures views triggers and it turns

00:14:08,540 --> 00:14:12,560
out that this release was you know very

00:14:10,310 --> 00:14:16,279
marketing driven over actually being

00:14:12,560 --> 00:14:18,980
market driven in fact internally I think

00:14:16,279 --> 00:14:20,660
it took nearly a year for the bugs and

00:14:18,980 --> 00:14:25,009
the support event him system to actually

00:14:20,660 --> 00:14:32,089
move from Fall 1250 so it took a while

00:14:25,009 --> 00:14:35,529
before 50 stabilized so we were growing

00:14:32,089 --> 00:14:37,760
but naturally we had problems shipping

00:14:35,529 --> 00:14:39,949
quality GA code which is why people

00:14:37,760 --> 00:14:41,779
always say oh if you've got a MySQL

00:14:39,949 --> 00:14:44,209
release wait like nine months before you

00:14:41,779 --> 00:14:47,720
actually use it in production and it

00:14:44,209 --> 00:14:51,279
kind of started around this time to make

00:14:47,720 --> 00:14:55,519
matters worse all the best engineers

00:14:51,279 --> 00:14:57,790
best the architects of MySQL kind

00:14:55,519 --> 00:15:00,740
decided to go start this maria project

00:14:57,790 --> 00:15:03,560
so not work on actually making vice ql

00:15:00,740 --> 00:15:05,569
better go go and make an engine call

00:15:03,560 --> 00:15:07,760
maria because they needed to actually

00:15:05,569 --> 00:15:10,399
you know kind of make it fully

00:15:07,760 --> 00:15:17,089
transactional take a make it crash safe

00:15:10,399 --> 00:15:22,220
and basically replace nodb now maria has

00:15:17,089 --> 00:15:27,279
now become aria the name of the project

00:15:22,220 --> 00:15:31,250
is maria DB till today we have up to a

00:15:27,279 --> 00:15:32,899
basically a crash safe area but we don't

00:15:31,250 --> 00:15:33,880
actually have it fully transaction ii

00:15:32,899 --> 00:15:38,100
aware

00:15:33,880 --> 00:15:38,100
so innodb is still the engine of choice

00:15:40,710 --> 00:15:45,780
taking on Cirie see men that it wouldn't

00:15:44,200 --> 00:15:50,710
be very long before we would like to

00:15:45,780 --> 00:15:52,690
probably IPO and that also allowed us to

00:15:50,710 --> 00:15:54,580
acquire netra structure that

00:15:52,690 --> 00:15:56,170
infrastructure was basically a company

00:15:54,580 --> 00:15:57,850
of two people Jim Starkey and an

00:15:56,170 --> 00:15:59,890
Harrison and Jim Stark yes some of you

00:15:57,850 --> 00:16:03,270
may know was the guy that invented the

00:15:59,890 --> 00:16:07,180
blob concept the mvcc concepts and

00:16:03,270 --> 00:16:09,730
Falcon was the engine that was acquired

00:16:07,180 --> 00:16:11,650
spotted the metastructure position and

00:16:09,730 --> 00:16:14,290
he was really there to solve the inner

00:16:11,650 --> 00:16:15,970
TV problem now what is the inner DB

00:16:14,290 --> 00:16:18,040
problem mainly problem is the fact that

00:16:15,970 --> 00:16:21,610
we we used to get this contract with

00:16:18,040 --> 00:16:24,190
Oracle or like but was it 18 months 24

00:16:21,610 --> 00:16:26,920
months and then every month Oracle would

00:16:24,190 --> 00:16:30,760
give us a code drop of a no DB which one

00:16:26,920 --> 00:16:33,040
engineer would integrate and that meant

00:16:30,760 --> 00:16:35,490
we could not actually work on innodb the

00:16:33,040 --> 00:16:40,750
inner TV development was done elsewhere

00:16:35,490 --> 00:16:42,940
at the same time we thought hmm why

00:16:40,750 --> 00:16:44,860
don't we open up the engine interface we

00:16:42,940 --> 00:16:46,930
since we want more competition in this

00:16:44,860 --> 00:16:49,090
space let's make the pluggable storage

00:16:46,930 --> 00:16:50,770
architecture available and at that point

00:16:49,090 --> 00:16:54,550
in time we were about the only database

00:16:50,770 --> 00:16:56,560
that supports it today you have another

00:16:54,550 --> 00:16:57,970
database called MongoDB that is a

00:16:56,560 --> 00:16:59,470
pluggable storage engine and a lot of

00:16:57,970 --> 00:17:02,080
people that have written star Jenkins

00:16:59,470 --> 00:17:05,439
for MySQL also are writing storage

00:17:02,080 --> 00:17:08,079
engines for mongodb around the same time

00:17:05,439 --> 00:17:10,120
the cluster team realized that they

00:17:08,079 --> 00:17:12,430
needed to actually move development

00:17:10,120 --> 00:17:14,650
forward so they actually they actually

00:17:12,430 --> 00:17:17,140
forked mysql they had the own little

00:17:14,650 --> 00:17:19,689
tree where they would include things

00:17:17,140 --> 00:17:22,060
like row based application online GDL

00:17:19,689 --> 00:17:25,540
operations and all of this was in the

00:17:22,060 --> 00:17:27,910
cluster fork Buster eventually merged

00:17:25,540 --> 00:17:31,420
back into the trees under Oracle

00:17:27,910 --> 00:17:35,140
stewardship so kudos but before that it

00:17:31,420 --> 00:17:39,660
was actually a fog tree and there's also

00:17:35,140 --> 00:17:43,420
p v xt another engine by a third party

00:17:39,660 --> 00:17:45,730
mostly a guy called Paul McCullough hmm

00:17:43,420 --> 00:17:47,040
it's creeping after we shed it I don't

00:17:45,730 --> 00:17:53,490
know why

00:17:47,040 --> 00:17:55,020
and it was basically log based and he

00:17:53,490 --> 00:17:56,480
had a lot of promise because it was

00:17:55,020 --> 00:17:58,860
actually doing a lot of operations

00:17:56,480 --> 00:18:01,830
potentially fast at ntb because it was

00:17:58,860 --> 00:18:03,810
written in 2006 not 2001 he had a lot

00:18:01,830 --> 00:18:06,810
more modern hardware there was a lot

00:18:03,810 --> 00:18:09,510
more 64 bit hard way around and I you

00:18:06,810 --> 00:18:11,130
know argue that it pushed in a DB

00:18:09,510 --> 00:18:13,950
forward because the next couple he has

00:18:11,130 --> 00:18:16,080
already be improved tremendously largely

00:18:13,950 --> 00:18:18,060
because many people thought that you

00:18:16,080 --> 00:18:20,090
know maybe we'd pick up pbx t along the

00:18:18,060 --> 00:18:24,630
way and innodb improved tremendously

00:18:20,090 --> 00:18:26,520
under Oracle stewardship and if we

00:18:24,630 --> 00:18:28,140
digress a little what really does make

00:18:26,520 --> 00:18:30,150
engine is different and i thought i'll

00:18:28,140 --> 00:18:33,630
list down like pretty much everything

00:18:30,150 --> 00:18:35,910
that makes it engine different it could

00:18:33,630 --> 00:18:38,910
be how the data is stored on disk or in

00:18:35,910 --> 00:18:41,340
memory it could be the types of indexes

00:18:38,910 --> 00:18:44,850
it uses some use B b-plus tree some use

00:18:41,340 --> 00:18:48,120
hash indexes and so forth it could be

00:18:44,850 --> 00:18:49,740
how it uses memory not all engines come

00:18:48,120 --> 00:18:51,000
with transactions though today really

00:18:49,740 --> 00:18:54,780
you probably only want to use a

00:18:51,000 --> 00:18:57,390
transactional store locking levels there

00:18:54,780 --> 00:19:00,750
were table locks in a DBS rowlocks and

00:18:57,390 --> 00:19:03,150
we used to ship this engine up to 50

00:19:00,750 --> 00:19:07,310
called the bdb storage engine and that

00:19:03,150 --> 00:19:10,320
used to you have page locks data types

00:19:07,310 --> 00:19:12,780
caching so my eyes I makes active use of

00:19:10,320 --> 00:19:15,330
the operating system cache whereas in 0

00:19:12,780 --> 00:19:17,820
DB has its own buffer pool full tax

00:19:15,330 --> 00:19:20,460
search capability my son was the only

00:19:17,820 --> 00:19:24,720
engine that had it then innodb in 56

00:19:20,460 --> 00:19:26,550
brought it along as well GIS support so

00:19:24,720 --> 00:19:28,710
if you want archery index support only

00:19:26,550 --> 00:19:31,530
my seminar iya could actually have our

00:19:28,710 --> 00:19:34,170
tree index support and need to be 57 has

00:19:31,530 --> 00:19:39,450
this as well so in DB is getting better

00:19:34,170 --> 00:19:41,190
in a way to replace my eyes am also not

00:19:39,450 --> 00:19:45,090
listed on this slide are two other

00:19:41,190 --> 00:19:46,890
things and if you can guess I will buy

00:19:45,090 --> 00:19:52,440
you a beer or a beverage of your choice

00:19:46,890 --> 00:19:55,650
at the bar later one of the two other

00:19:52,440 --> 00:19:57,340
things that are not on this slide I know

00:19:55,650 --> 00:20:03,270
it's small

00:19:57,340 --> 00:20:09,670
there was no other way to cram it in I

00:20:03,270 --> 00:20:11,020
hate well it involves the fact that some

00:20:09,670 --> 00:20:13,210
things are done in the server not

00:20:11,020 --> 00:20:19,060
exposed to and not done in the server

00:20:13,210 --> 00:20:26,370
and should be done in the engine anybody

00:20:19,060 --> 00:20:32,800
free beer okay no free beer I save money

00:20:26,370 --> 00:20:34,660
backups are different so innodb you have

00:20:32,800 --> 00:20:38,110
things like extra backup and online

00:20:34,660 --> 00:20:40,800
backup my eyes I'm you have used dump

00:20:38,110 --> 00:20:44,140
and you know talking to be as the own

00:20:40,800 --> 00:20:45,940
sort of backup solution you can use lvm

00:20:44,140 --> 00:20:49,150
snapshots backups are not handled in the

00:20:45,940 --> 00:20:50,770
server that was a plan for mysql 6 which

00:20:49,150 --> 00:20:52,720
never really saw the light of day and

00:20:50,770 --> 00:20:54,130
the other thing that's different is the

00:20:52,720 --> 00:20:56,620
fact that foreign keys are also

00:20:54,130 --> 00:20:59,710
implemented within the engine not in the

00:20:56,620 --> 00:21:02,170
server layer so Angie's like innodb

00:20:59,710 --> 00:21:03,580
support foreign keys talk EDB even

00:21:02,170 --> 00:21:11,920
though written today does not support

00:21:03,580 --> 00:21:23,080
foreign keys two beers back of his

00:21:11,920 --> 00:21:24,880
shitty what why online backups and you

00:21:23,080 --> 00:21:26,680
know the reason I bring out back up is

00:21:24,880 --> 00:21:31,180
because you know we actually did release

00:21:26,680 --> 00:21:33,850
a 60 tree you can find a 60 tree with

00:21:31,180 --> 00:21:38,500
online backup capability or at least

00:21:33,850 --> 00:21:40,120
wise am somewhere on bizarre or maybe

00:21:38,500 --> 00:21:41,650
someone it's not it's on in the office

00:21:40,120 --> 00:21:46,900
show trees anymore but people have

00:21:41,650 --> 00:21:49,060
backed it up exactly so and it's a shame

00:21:46,900 --> 00:21:50,710
that you know we never really saw the

00:21:49,060 --> 00:21:53,830
light of day was ripped out and it

00:21:50,710 --> 00:21:56,080
actually mostly worked another guy

00:21:53,830 --> 00:21:59,730
called Greg Lee wrote a lot of the

00:21:56,080 --> 00:22:05,590
design docs behind it as well and yeah

00:21:59,730 --> 00:22:08,970
sad so at that point in time we also

00:22:05,590 --> 00:22:14,770
started working on the 51 tree

00:22:08,970 --> 00:22:18,820
51 was not you know ga during 2007

00:22:14,770 --> 00:22:20,860
largely also because we were 2007 kind

00:22:18,820 --> 00:22:22,960
of a quiet period here for us when you

00:22:20,860 --> 00:22:25,600
want to file for IPO you can't really go

00:22:22,960 --> 00:22:31,720
rawr rawr I we're doing all this cool

00:22:25,600 --> 00:22:36,580
stuff and due diligence for son started

00:22:31,720 --> 00:22:39,039
around late November and by think

00:22:36,580 --> 00:22:45,820
january 18th they bought us for 1

00:22:39,039 --> 00:22:48,190
billion dollars only the VCS and some

00:22:45,820 --> 00:22:51,039
executive Scott Ritch the rest of the

00:22:48,190 --> 00:22:55,330
developers don't think really got

00:22:51,039 --> 00:22:58,000
usually rich yes we got some money we

00:22:55,330 --> 00:22:59,919
did get a shot glass and you know some

00:22:58,000 --> 00:23:06,100
some of us got money depending on when

00:22:59,919 --> 00:23:08,320
you join you join a little later but yes

00:23:06,100 --> 00:23:11,470
1 billion dollars one of the largest

00:23:08,320 --> 00:23:14,230
open source exits of its time which also

00:23:11,470 --> 00:23:17,230
probably spurred like the next 60 other

00:23:14,230 --> 00:23:23,529
no SQL databases to get funding if my

00:23:17,230 --> 00:23:28,330
scale could do it why can't we yeah also

00:23:23,529 --> 00:23:29,890
after son bought us a group of people

00:23:28,330 --> 00:23:32,169
decided to start this thing called the

00:23:29,890 --> 00:23:35,350
drizzle project they said look the 60

00:23:32,169 --> 00:23:36,820
tree has got some cool stuff but we need

00:23:35,350 --> 00:23:39,820
to actually make it a lot more modular

00:23:36,820 --> 00:23:41,679
need to make it faster we need to learn

00:23:39,820 --> 00:23:44,200
about continuous integration so we don't

00:23:41,679 --> 00:23:46,299
include features that are actually not

00:23:44,200 --> 00:23:48,640
going to make it or break when we

00:23:46,299 --> 00:23:50,559
release it in one of the microkernel

00:23:48,640 --> 00:23:55,149
architecture it was led by Brian acre

00:23:50,559 --> 00:23:57,549
the venn CTO of mysql and he decided to

00:23:55,149 --> 00:23:59,289
announce this at all is gone like it was

00:23:57,549 --> 00:24:01,630
supposed to be a surprise like hey we're

00:23:59,289 --> 00:24:03,669
doing this like and son doesn't even

00:24:01,630 --> 00:24:05,770
know and but it turns out son didn't

00:24:03,669 --> 00:24:07,779
like want to fire them some said oh we

00:24:05,770 --> 00:24:09,760
think this might be a good idea let's

00:24:07,779 --> 00:24:12,279
bring you all under the CTO office and

00:24:09,760 --> 00:24:14,549
work on drizzle Martin who was the SVP

00:24:12,279 --> 00:24:19,400
back at Sun then was obviously very

00:24:14,549 --> 00:24:22,650
pissed and then

00:24:19,400 --> 00:24:25,020
he decided a smart thing for us to do

00:24:22,650 --> 00:24:29,010
was to release in november two thousand

00:24:25,020 --> 00:24:31,799
eight of 51 GA and monty made a famous

00:24:29,010 --> 00:24:36,150
blog post about this like it was a long

00:24:31,799 --> 00:24:38,100
list of why 51 should not be GA and then

00:24:36,150 --> 00:24:39,900
he listed all the bugs in it so can you

00:24:38,100 --> 00:24:44,580
imagine how the marketing people felt

00:24:39,900 --> 00:24:46,679
like like what is wrong with you yeah he

00:24:44,580 --> 00:24:50,970
did not approve of the release but you

00:24:46,679 --> 00:24:53,370
can kind of tell why if you follow the

00:24:50,970 --> 00:24:54,690
timeline carefully also late two

00:24:53,370 --> 00:24:57,390
thousand eight we started seeing our

00:24:54,690 --> 00:24:59,900
Delta at Australia arion lens was

00:24:57,390 --> 00:25:02,490
running this started making binaries and

00:24:59,900 --> 00:25:04,710
precocious server came along as well and

00:25:02,490 --> 00:25:06,780
this is largely to do with the fact that

00:25:04,710 --> 00:25:08,789
we had this flawed idea that we would

00:25:06,780 --> 00:25:11,760
make these Enterprise binaries I did not

00:25:08,789 --> 00:25:13,440
mention proven scaling but they're

00:25:11,760 --> 00:25:15,990
they're a company that also came and

00:25:13,440 --> 00:25:17,730
went in between they would actually

00:25:15,990 --> 00:25:19,740
these enterprise wineries would be

00:25:17,730 --> 00:25:21,179
behind a paywall and they would actually

00:25:19,740 --> 00:25:24,240
subscribe download the enterprise

00:25:21,179 --> 00:25:26,220
binaries that give them with free proven

00:25:24,240 --> 00:25:28,830
scaling was Jeremy Cole and Erich Bergen

00:25:26,220 --> 00:25:32,280
Erik now works at Facebook Jeremy now

00:25:28,830 --> 00:25:34,919
works at Google but I'd like to bring

00:25:32,280 --> 00:25:36,390
you to this graph yeah I don't think the

00:25:34,919 --> 00:25:39,570
marketing people like Edwin like me very

00:25:36,390 --> 00:25:43,260
much for blogging about it either but it

00:25:39,570 --> 00:25:45,150
turns out that percona was they did

00:25:43,260 --> 00:25:47,549
release many servers that they're called

00:25:45,150 --> 00:25:49,950
a Percona SQL release they'd then called

00:25:47,549 --> 00:25:52,980
it the Percona hyper feliz and he also

00:25:49,950 --> 00:25:54,390
had a Percona server and in 2009 this

00:25:52,980 --> 00:25:57,330
graph is actually from Flicka Flicka

00:25:54,390 --> 00:25:59,909
actually upgraded to the Percona hyper

00:25:57,330 --> 00:26:02,789
bills and you will see that they were

00:25:59,909 --> 00:26:07,020
starting to get a lot more lower usage

00:26:02,789 --> 00:26:08,250
of i/o when it migrated and i also point

00:26:07,020 --> 00:26:10,169
to that blog post because you'll

00:26:08,250 --> 00:26:12,120
actually notice that there were many

00:26:10,169 --> 00:26:14,460
patch sets already Wikipedia was running

00:26:12,120 --> 00:26:17,909
a 40 40 pack set and don't ask me to

00:26:14,460 --> 00:26:19,919
zeus who was back then a mysql support

00:26:17,909 --> 00:26:23,490
engineer who also now works at facebook

00:26:19,919 --> 00:26:25,260
had a wikipedia patchset and you'd see a

00:26:23,490 --> 00:26:27,570
comments from people like Mark Allen

00:26:25,260 --> 00:26:29,220
which also talked about the 104 innodb

00:26:27,570 --> 00:26:31,340
plugin you know to be used to have a

00:26:29,220 --> 00:26:33,210
built-in engine and a plug-in and

00:26:31,340 --> 00:26:35,789
basically there were mouth

00:26:33,210 --> 00:26:40,320
background threads available for Native

00:26:35,789 --> 00:26:42,000
aio and you know Google and Facebook

00:26:40,320 --> 00:26:44,460
really pushed my skill development

00:26:42,000 --> 00:26:46,020
forward as well and poor gonna put a lot

00:26:44,460 --> 00:26:47,700
of those patches in so you could

00:26:46,020 --> 00:26:49,200
actually make the number of threads for

00:26:47,700 --> 00:26:53,070
the readers and the writers configurable

00:26:49,200 --> 00:26:58,799
as well so lots of improvements pushed

00:26:53,070 --> 00:27:02,760
by web-scale companies so remember that

00:26:58,799 --> 00:27:06,120
timeline november two thousand 851

00:27:02,760 --> 00:27:13,289
becomes GA februari 2009 multi-leaf sad

00:27:06,120 --> 00:27:16,110
mmm suspicious he leaves son not with

00:27:13,289 --> 00:27:19,200
much of the plan to do much besides work

00:27:16,110 --> 00:27:21,779
on the Maria engine in his spare time at

00:27:19,200 --> 00:27:24,090
this point in time he made at least one

00:27:21,779 --> 00:27:27,480
fault of the same amount of money David

00:27:24,090 --> 00:27:33,529
made y1 forth because he had a ex wife

00:27:27,480 --> 00:27:33,529
and two kids who got the rest of money

00:27:34,370 --> 00:27:44,610
so also in March 2009 we had the final

00:27:41,610 --> 00:27:45,960
alpha release and why why do things

00:27:44,610 --> 00:27:47,460
always get released around March or

00:27:45,960 --> 00:27:49,230
April um because we have this

00:27:47,460 --> 00:27:51,510
traditional conference call the MySQL

00:27:49,230 --> 00:27:54,750
users conference that happens in april

00:27:51,510 --> 00:27:57,539
in santa clara and it's being

00:27:54,750 --> 00:28:00,510
reincarnated as the Percona live mysql

00:27:57,539 --> 00:28:03,450
santa clara conference then in april

00:28:00,510 --> 00:28:04,740
2009 the day of the conference oracle

00:28:03,450 --> 00:28:06,149
actually releases a public statement

00:28:04,740 --> 00:28:09,570
saying they're going to acquire sun

00:28:06,149 --> 00:28:11,580
microsystems we're all sitting there in

00:28:09,570 --> 00:28:16,130
the hotel going language this is this a

00:28:11,580 --> 00:28:18,630
joke but it's not because the next day

00:28:16,130 --> 00:28:21,990
this chat from oracle ken jacobs

00:28:18,630 --> 00:28:24,140
actually comes to talk about how you

00:28:21,990 --> 00:28:26,700
know they would like to integrate mysql

00:28:24,140 --> 00:28:32,360
but this doesn't happen for quite some

00:28:26,700 --> 00:28:34,620
time because the EU gets involved Monte

00:28:32,360 --> 00:28:36,690
informs to you that this might be an

00:28:34,620 --> 00:28:38,909
anticompetitive move so it takes many

00:28:36,690 --> 00:28:42,240
many months before the sale actually

00:28:38,909 --> 00:28:44,909
completes in January 2010 but in the

00:28:42,240 --> 00:28:47,190
meantime Monte program maybe actually

00:28:44,909 --> 00:28:49,230
starts and really be

00:28:47,190 --> 00:28:51,510
is being actively worked on so i'd say

00:28:49,230 --> 00:28:53,550
around april so that same time i

00:28:51,510 --> 00:28:56,190
remember a guy called hakan basically

00:28:53,550 --> 00:28:58,740
said hey i'm leaving this company i need

00:28:56,190 --> 00:29:00,990
to go do something he he joined money

00:28:58,740 --> 00:29:04,680
programs new benchmarks and Daniel was

00:29:00,990 --> 00:29:06,990
also early multi program employee I had

00:29:04,680 --> 00:29:12,450
some handcuffs that I had to wait on for

00:29:06,990 --> 00:29:16,290
then I got the chicken pox also at this

00:29:12,450 --> 00:29:18,170
point in time Falcon is dead drizzle is

00:29:16,290 --> 00:29:22,380
generally not looking too promising

00:29:18,170 --> 00:29:26,490
because you know Oracle has nodb don't

00:29:22,380 --> 00:29:27,930
need drizzle and oh yeah another good

00:29:26,490 --> 00:29:29,550
thing to actually mention about multi

00:29:27,930 --> 00:29:30,960
program is that it had this idea of the

00:29:29,550 --> 00:29:35,040
hacking business model in where

00:29:30,960 --> 00:29:36,540
everybody were equal you are given a VIP

00:29:35,040 --> 00:29:38,640
number and the amount of hours you

00:29:36,540 --> 00:29:40,290
worked basically times to your VIP

00:29:38,640 --> 00:29:41,790
number would equal the amount of

00:29:40,290 --> 00:29:44,850
ownership of the company you actually

00:29:41,790 --> 00:29:48,360
ended up having it's a very egalitarian

00:29:44,850 --> 00:29:50,700
business model and it's kind of nice

00:29:48,360 --> 00:29:52,530
because all the employees are now not

00:29:50,700 --> 00:29:55,530
really employees but they're co-owners

00:29:52,530 --> 00:29:58,710
of the company and this kind of makes a

00:29:55,530 --> 00:30:01,410
difference later on as Monty actually

00:29:58,710 --> 00:30:10,080
want to do right by the developers who

00:30:01,410 --> 00:30:14,450
did not get money from the sale 2009

00:30:10,080 --> 00:30:17,490
October valla beta release of Maria d be

00:30:14,450 --> 00:30:20,700
largely a lot of time was spent working

00:30:17,490 --> 00:30:22,890
on the build system improving test cases

00:30:20,700 --> 00:30:24,600
and learning from bristle actually we

00:30:22,890 --> 00:30:27,510
know removing compiler errors and so

00:30:24,600 --> 00:30:32,610
forth so there was not this is like a

00:30:27,510 --> 00:30:36,750
5-1 clean up working on upgrades from 50

00:30:32,610 --> 00:30:41,660
to 51 was important too and then a ga

00:30:36,750 --> 00:30:44,970
release came on in february2014 time

00:30:41,660 --> 00:30:49,250
oracle had you know just acquired Sun

00:30:44,970 --> 00:30:51,780
and were integrating ingesting mysql and

00:30:49,250 --> 00:30:54,180
marietv was kind of on fire november

00:30:51,780 --> 00:30:55,610
2010 we had our first ever community

00:30:54,180 --> 00:30:59,880
release where we included things like

00:30:55,610 --> 00:31:01,020
virtual columns authentication plugins

00:30:59,880 --> 00:31:02,430
and so forth

00:31:01,020 --> 00:31:04,110
we done two releases that year and we

00:31:02,430 --> 00:31:06,540
had goals that said we would like to

00:31:04,110 --> 00:31:09,410
release every nine months six to nine

00:31:06,540 --> 00:31:11,940
months following linux distributions

00:31:09,410 --> 00:31:18,300
those are good goals have when you start

00:31:11,940 --> 00:31:20,370
out then December 2010 came along and 55

00:31:18,300 --> 00:31:22,800
GA came and that at that point in time

00:31:20,370 --> 00:31:24,240
was actually a really good release it

00:31:22,800 --> 00:31:26,340
had huge Indonesia performance

00:31:24,240 --> 00:31:29,490
improvements lots of improvements in the

00:31:26,340 --> 00:31:32,640
code base and it was starting to look

00:31:29,490 --> 00:31:34,500
really good of course people live in my

00:31:32,640 --> 00:31:38,250
grade immediately he took them again a

00:31:34,500 --> 00:31:41,400
few months but it was a hugely huge

00:31:38,250 --> 00:31:44,040
release and the next release that came

00:31:41,400 --> 00:31:47,160
on in this ecosystem would be the Maria

00:31:44,040 --> 00:31:49,890
to be 53 GA and this was still based on

00:31:47,160 --> 00:31:52,050
the 51 tree that we had or should I say

00:31:49,890 --> 00:31:54,060
the 52 tree because Maria he follows the

00:31:52,050 --> 00:31:59,610
let's merge everything we had in the

00:31:54,060 --> 00:32:01,560
previous release so it was 52 plus G is

00:31:59,610 --> 00:32:03,630
functionality lots of replication

00:32:01,560 --> 00:32:06,960
improvements lots of improvements to the

00:32:03,630 --> 00:32:09,690
optimizer and in parallel we had to work

00:32:06,960 --> 00:32:11,910
on the 55 tree because 55 was also you

00:32:09,690 --> 00:32:15,030
know as I said already released in 2010

00:32:11,910 --> 00:32:19,890
and it took you know April 2012 before

00:32:15,030 --> 00:32:24,390
we had a 55 GA it was a 16 month gap to

00:32:19,890 --> 00:32:26,910
get all the patches rebased into the

00:32:24,390 --> 00:32:30,780
tree and you know at that point in time

00:32:26,910 --> 00:32:32,970
he was still easy to measure if you look

00:32:30,780 --> 00:32:34,650
at the significant lines of code we had

00:32:32,970 --> 00:32:38,490
about one and a half million extra lines

00:32:34,650 --> 00:32:42,020
of code compared to stock mysql this is

00:32:38,490 --> 00:32:46,110
not not including engines or test cases

00:32:42,020 --> 00:32:53,390
that meant quite a additional amount of

00:32:46,110 --> 00:32:55,770
features I guess then in November 2012

00:32:53,390 --> 00:32:58,980
Monte announced the formation of the

00:32:55,770 --> 00:33:02,070
Maria DB foundation again to be the

00:32:58,980 --> 00:33:04,790
custodian of the code so that in the

00:33:02,070 --> 00:33:11,660
event that Monte program got acquired

00:33:04,790 --> 00:33:15,330
decode would so be safe in February

00:33:11,660 --> 00:33:17,940
mysql 56 became GA and that was about

00:33:15,330 --> 00:33:20,520
two plus years to get GA and this was

00:33:17,940 --> 00:33:22,650
actually a complete refactor i would say

00:33:20,520 --> 00:33:24,930
a lot of history was removed a lot of

00:33:22,650 --> 00:33:27,870
you know a lot of the code became a lot

00:33:24,930 --> 00:33:29,970
more modular which actually many was

00:33:27,870 --> 00:33:34,260
easy for new people to start hacking on

00:33:29,970 --> 00:33:36,750
56 but this also meant that a lot of the

00:33:34,260 --> 00:33:38,910
changes would be very different to go

00:33:36,750 --> 00:33:41,160
back into merger merging with maria DB

00:33:38,910 --> 00:33:42,750
so at this point in time Maria DB

00:33:41,160 --> 00:33:45,510
decided that the next release would not

00:33:42,750 --> 00:33:47,270
be a 56 but would be a 10 actually we'd

00:33:45,510 --> 00:33:50,910
already decided it was going to be a 10

00:33:47,270 --> 00:33:54,000
before five six became GA I'd say

00:33:50,910 --> 00:33:56,490
sometime in 2012 we'd already said look

00:33:54,000 --> 00:34:01,290
we want to make 10 0 because there's no

00:33:56,490 --> 00:34:02,970
number between 55 and 56 however however

00:34:01,290 --> 00:34:06,060
we did not expect it would take very

00:34:02,970 --> 00:34:11,870
long for at least 10 + pi/6 came out in

00:34:06,060 --> 00:34:15,810
between then in april 2013 sky SQL AV

00:34:11,870 --> 00:34:17,700
acquired money program maybe and this

00:34:15,810 --> 00:34:20,490
basically made me really be a cop earn

00:34:17,700 --> 00:34:22,530
back my skill variant however that was

00:34:20,490 --> 00:34:29,870
still that foundation think hanging

00:34:22,530 --> 00:34:34,050
around today the foundation employees

00:34:29,870 --> 00:34:36,270
hackers as does the corporation and the

00:34:34,050 --> 00:34:40,760
community also has comet right so I'd

00:34:36,270 --> 00:34:40,760
say that overall it's not not a bad deal

00:34:41,419 --> 00:34:49,440
March 2014 run alongside maria b 10 0 GA

00:34:45,929 --> 00:34:51,510
and with marina be 55 we started seeing

00:34:49,440 --> 00:34:53,390
some people like wikipedia announced

00:34:51,510 --> 00:34:57,149
that they would they would move and

00:34:53,390 --> 00:34:58,980
marie to be 10 i think pretty much

00:34:57,149 --> 00:35:02,820
sealed most of the Linux distributions

00:34:58,980 --> 00:35:05,700
except debian and ubuntu in getting it

00:35:02,820 --> 00:35:07,860
as the default shift mysql and again

00:35:05,700 --> 00:35:09,120
kudos to oracle because they've put a

00:35:07,860 --> 00:35:11,430
lot of effort i think they're at least

00:35:09,120 --> 00:35:15,180
three engineers who work on the debian

00:35:11,430 --> 00:35:18,990
and ubuntu efforts on the debian mysql

00:35:15,180 --> 00:35:21,350
team that is like at least two more than

00:35:18,990 --> 00:35:21,350
we have

00:35:23,870 --> 00:35:30,290
so another thing that came out in March

00:35:26,840 --> 00:35:34,170
besides Maury to be 10 being GA is the

00:35:30,290 --> 00:35:37,140
fact that web scale was announced

00:35:34,170 --> 00:35:38,640
web-scale SQL days no GA are shipping

00:35:37,140 --> 00:35:40,710
release a web-scale web scale is meant

00:35:38,640 --> 00:35:43,410
to be a base you meant to check it out a

00:35:40,710 --> 00:35:45,660
github compile it add your own stuff to

00:35:43,410 --> 00:35:48,120
it though there are bills available by a

00:35:45,660 --> 00:35:50,460
company called PSC a whole bunch x for

00:35:48,120 --> 00:35:52,620
kona people left they left percona and a

00:35:50,460 --> 00:35:59,100
standard PSC calm and they make web

00:35:52,620 --> 00:36:01,410
scale SQL binaries also on the topic of

00:35:59,100 --> 00:36:03,360
the next attributions the moment Oracle

00:36:01,410 --> 00:36:05,370
got very interested in the debian and

00:36:03,360 --> 00:36:06,420
ubuntu efforts percona also got very

00:36:05,370 --> 00:36:08,430
interesting the dive into boon to

00:36:06,420 --> 00:36:10,770
efforts so you'd actually start seeing

00:36:08,430 --> 00:36:12,180
that it's also shipped inside debian

00:36:10,770 --> 00:36:17,310
ubuntu but not in the other

00:36:12,180 --> 00:36:20,070
distributions as often now somewhere

00:36:17,310 --> 00:36:22,350
along the way one has to mention coder

00:36:20,070 --> 00:36:25,890
ship it's been open source now for about

00:36:22,350 --> 00:36:30,680
six years they tend to make about three

00:36:25,890 --> 00:36:34,740
releases say yeah but they tend to have

00:36:30,680 --> 00:36:37,830
two very popular distributions and what

00:36:34,740 --> 00:36:40,380
does galera cluster really do mysql

00:36:37,830 --> 00:36:42,990
replication either statement based a row

00:36:40,380 --> 00:36:44,760
based is asynchronous there is a semi

00:36:42,990 --> 00:36:49,490
synchronous plugin and that gets better

00:36:44,760 --> 00:36:52,080
in 57 and even Maria db10 one however

00:36:49,490 --> 00:36:54,480
galera cluster promises the idea that

00:36:52,080 --> 00:37:00,620
you have fully synchronous replication

00:36:54,480 --> 00:37:03,150
so all nodes are equal or they roll back

00:37:00,620 --> 00:37:06,270
Oracle's got another take on this called

00:37:03,150 --> 00:37:08,670
parallel replication and I don't think

00:37:06,270 --> 00:37:13,800
that's in the 57 RC so it still allows

00:37:08,670 --> 00:37:15,300
release is it in the 57 RZ yeah I think

00:37:13,800 --> 00:37:17,900
I think it's in the labs release and I

00:37:15,300 --> 00:37:25,770
don't know if you'll make the ga but

00:37:17,900 --> 00:37:27,120
we'll see so pxe is pretty popular Marie

00:37:25,770 --> 00:37:31,080
to be gala cluster is also pretty

00:37:27,120 --> 00:37:32,790
popular now the reasons why you choose

00:37:31,080 --> 00:37:34,410
one over the other maybe you'd like to

00:37:32,790 --> 00:37:36,210
use galera alongside

00:37:34,410 --> 00:37:38,940
something like multi-source replication

00:37:36,210 --> 00:37:40,740
that Maury db10 has and there are a lot

00:37:38,940 --> 00:37:43,920
of people that are using galera today

00:37:40,740 --> 00:37:45,950
including HP's dns service you read the

00:37:43,920 --> 00:37:49,010
OpenStack docs they recommended

00:37:45,950 --> 00:37:52,440
mercadolibre pagerduty avg greets

00:37:49,010 --> 00:37:55,049
greeting card company in the in Europe

00:37:52,440 --> 00:38:02,880
migrated from oracle RAC to gallery

00:37:55,049 --> 00:38:05,069
cluster and if you follow a plant mysql

00:38:02,880 --> 00:38:07,319
as you should probably all do you see

00:38:05,069 --> 00:38:11,339
Morgan Tucker always talk about each and

00:38:07,319 --> 00:38:14,430
every release and how individual members

00:38:11,339 --> 00:38:17,160
reported bugs and you know things got

00:38:14,430 --> 00:38:19,020
better we made in the marais DB team a

00:38:17,160 --> 00:38:21,240
community release in 52 we log

00:38:19,020 --> 00:38:24,359
contributions on the knowledge base but

00:38:21,240 --> 00:38:25,770
in 10 1 we also are in kind of at least

00:38:24,359 --> 00:38:27,720
the engineers are referring to it as a

00:38:25,770 --> 00:38:29,849
community released as well in where we

00:38:27,720 --> 00:38:33,210
got a whole bunch of new features from a

00:38:29,849 --> 00:38:35,789
whole bunch of companies and now on that

00:38:33,210 --> 00:38:37,319
slide include people like ownership IBM

00:38:35,789 --> 00:38:40,230
for the powerade work that they've

00:38:37,319 --> 00:38:42,119
contributed and also or oracle for

00:38:40,230 --> 00:38:46,890
things like default em storage engine

00:38:42,119 --> 00:38:48,750
union all in the optimizer the ecosystem

00:38:46,890 --> 00:38:52,260
is really really vibrant that you know

00:38:48,750 --> 00:38:55,549
sending features back to us what about

00:38:52,260 --> 00:38:59,579
the open source community as a whole

00:38:55,549 --> 00:39:01,140
external committees now mysql has

00:38:59,579 --> 00:39:04,710
traditionally never really had external

00:39:01,140 --> 00:39:09,230
committers because mice ql hired every

00:39:04,710 --> 00:39:12,660
external computer that was available and

00:39:09,230 --> 00:39:14,819
i say that oracle didn't really make any

00:39:12,660 --> 00:39:16,770
difference i mean neither did son you

00:39:14,819 --> 00:39:19,079
know generally i believe there are

00:39:16,770 --> 00:39:21,809
security reasons why external companies

00:39:19,079 --> 00:39:23,670
don't exist though I think 57 had a

00:39:21,809 --> 00:39:26,329
pretty good good thing in the fall

00:39:23,670 --> 00:39:29,849
generated columns from an array sykov

00:39:26,329 --> 00:39:32,279
Murray to be also have does the state

00:39:29,849 --> 00:39:35,940
contributors but the way it does it is

00:39:32,279 --> 00:39:37,619
not via commits you can't just you know

00:39:35,940 --> 00:39:39,839
have a bizarre branch and we won't merge

00:39:37,619 --> 00:39:41,970
the bizarre branch we are looking to do

00:39:39,839 --> 00:39:44,430
that when we since now we move to github

00:39:41,970 --> 00:39:45,779
so if you fork the tree and submit a

00:39:44,430 --> 00:39:47,970
pull request we are looking to bring

00:39:45,779 --> 00:39:49,800
pull request back in Britt

00:39:47,970 --> 00:39:51,390
previously we've done it by you having a

00:39:49,800 --> 00:39:52,230
tree and then we do a manual merge and

00:39:51,390 --> 00:39:54,330
then we'll put you in the log of

00:39:52,230 --> 00:39:56,400
contributions but the people that can

00:39:54,330 --> 00:39:59,220
contribute to more adb today if you go

00:39:56,400 --> 00:40:01,290
to launch pad ah 25 members of the

00:39:59,220 --> 00:40:05,240
community 18 from the cooperation and

00:40:01,290 --> 00:40:10,320
five from the foundation just not bad

00:40:05,240 --> 00:40:13,140
web scale web scale as ali baba facebook

00:40:10,320 --> 00:40:15,330
google linkedin and twitter with also

00:40:13,140 --> 00:40:18,240
percona and really be working on it so

00:40:15,330 --> 00:40:22,080
from amer Adib standpoint we work on the

00:40:18,240 --> 00:40:23,910
my rock stars engine for rocks DB Arkona

00:40:22,080 --> 00:40:27,599
handles love the merge work for web

00:40:23,910 --> 00:40:32,330
scale and we've all agreed to you know

00:40:27,599 --> 00:40:32,330
work on web scale for the greater good

00:40:33,380 --> 00:40:41,760
we've also got google Summer of Code

00:40:38,160 --> 00:40:43,619
participation in Moorea DB now we used

00:40:41,760 --> 00:40:46,470
to have this in the MySQL world as well

00:40:43,619 --> 00:40:50,580
we had several projects right up until i

00:40:46,470 --> 00:40:52,440
would say son owned us once oracle took

00:40:50,580 --> 00:40:54,869
over i think google and Oracle have some

00:40:52,440 --> 00:40:58,170
kind of animosity so no more google

00:40:54,869 --> 00:41:00,330
summer of code but the problem was at

00:40:58,170 --> 00:41:01,380
the mine in the mine scale world nothing

00:41:00,330 --> 00:41:04,770
actually ever made into a shipping

00:41:01,380 --> 00:41:06,180
release we had a 5-2 community tree

00:41:04,770 --> 00:41:08,369
which i did not talk about we had

00:41:06,180 --> 00:41:13,740
actually one engineer called chad miller

00:41:08,369 --> 00:41:15,270
working on it it had one feature not

00:41:13,740 --> 00:41:17,940
such and that feature has been

00:41:15,270 --> 00:41:22,680
deprecated in mysql but it's actually

00:41:17,940 --> 00:41:27,359
still available inside of marina be we

00:41:22,680 --> 00:41:30,000
had a 5-4 tree even which not many

00:41:27,359 --> 00:41:31,500
people would probably remember and we

00:41:30,000 --> 00:41:35,490
actually had some useful features like

00:41:31,500 --> 00:41:37,760
google summer of code back in 2007 a

00:41:35,490 --> 00:41:41,070
student actually wrote per query

00:41:37,760 --> 00:41:42,660
variables as a feature it was it's been

00:41:41,070 --> 00:41:44,940
sitting on launch pad for a long time

00:41:42,660 --> 00:41:47,070
and it took web-scale to actually

00:41:44,940 --> 00:41:50,220
integrate it then Percona integrated it

00:41:47,070 --> 00:41:53,790
then or i believe mysql 57 has it and

00:41:50,220 --> 00:41:55,530
then Maria DB has it but it took such a

00:41:53,790 --> 00:41:59,700
long gap before this student actually

00:41:55,530 --> 00:42:01,260
saw shipping code is not not good for

00:41:59,700 --> 00:42:03,570
students overall

00:42:01,260 --> 00:42:05,130
or anybody you don't want to write code

00:42:03,570 --> 00:42:07,140
and then have it shipping in like you

00:42:05,130 --> 00:42:09,690
know 10 years you want to write code

00:42:07,140 --> 00:42:12,330
neva shipping in like a year and I'm

00:42:09,690 --> 00:42:15,240
kind of happy to say that for Maria bees

00:42:12,330 --> 00:42:16,980
g-shock we've had people ship we've

00:42:15,240 --> 00:42:21,030
hired people we've got eight

00:42:16,980 --> 00:42:23,130
contributors this time and I think seven

00:42:21,030 --> 00:42:26,610
out of eight will pass the midterm at

00:42:23,130 --> 00:42:32,550
the end of this month but maybe eight

00:42:26,610 --> 00:42:34,640
out of eight we'll we'll see Oracle when

00:42:32,550 --> 00:42:39,390
it comes to security and this is largely

00:42:34,640 --> 00:42:41,340
policy there is corporate policy what

00:42:39,390 --> 00:42:43,650
send out these critical patch updates

00:42:41,340 --> 00:42:46,320
once every three months or they make

00:42:43,650 --> 00:42:48,000
releases so that was an open SSL blog

00:42:46,320 --> 00:42:50,580
that only affected the enterprise

00:42:48,000 --> 00:42:55,170
release that got that bump the released

00:42:50,580 --> 00:42:57,480
version up very quickly the mem compare

00:42:55,170 --> 00:43:03,000
issue that i mentioned down there took

00:42:57,480 --> 00:43:05,850
maybe about a month or so to fix you

00:43:03,000 --> 00:43:07,590
don't you see CVEs you don't really see

00:43:05,850 --> 00:43:09,060
test cases against TV is that largely

00:43:07,590 --> 00:43:11,310
this is this is to do with the fact that

00:43:09,060 --> 00:43:15,150
the idea is that you should not let the

00:43:11,310 --> 00:43:19,350
hackers actually run against unpatched

00:43:15,150 --> 00:43:23,370
mysql however it doesn't help the maria

00:43:19,350 --> 00:43:25,230
DB and percona server folk as much we're

00:43:23,370 --> 00:43:26,850
gonna also roughly follows the oracle

00:43:25,230 --> 00:43:29,790
release schedule but does take security

00:43:26,850 --> 00:43:31,620
fixes from maria DB and as an example

00:43:29,790 --> 00:43:35,460
that they've taken and i believe that

00:43:31,620 --> 00:43:45,180
was for the run up to three hundred

00:43:35,460 --> 00:43:47,820
times get root access bogs humans so um

00:43:45,180 --> 00:43:50,040
I really hope Oracle would improve but I

00:43:47,820 --> 00:43:51,810
don't think they can because they have a

00:43:50,040 --> 00:43:53,910
huge org and this is the our security

00:43:51,810 --> 00:43:59,100
policy to not let other people you know

00:43:53,910 --> 00:44:03,200
run test Suites against unpatch servers

00:43:59,100 --> 00:44:07,200
a common question I get is MySQL dying

00:44:03,200 --> 00:44:11,610
no development is really at its most

00:44:07,200 --> 00:44:13,620
vibrant today honestly speaking people

00:44:11,610 --> 00:44:15,180
were afraid that Oracle would kill mysql

00:44:13,620 --> 00:44:19,020
at the end of 2014

00:44:15,180 --> 00:44:20,550
honestly oracle isn't bad i think

00:44:19,020 --> 00:44:22,050
they've been putting in a lot of effort

00:44:20,550 --> 00:44:26,250
the beginning of our young developers

00:44:22,050 --> 00:44:29,940
hike on mysql we're getting a better

00:44:26,250 --> 00:44:32,130
mysql with every release in fact we get

00:44:29,940 --> 00:44:34,680
energy from Oracle's every time you know

00:44:32,130 --> 00:44:37,619
TV gets better we get a better and

00:44:34,680 --> 00:44:39,510
actual storage engine external

00:44:37,619 --> 00:44:41,250
contributors are increasing just look at

00:44:39,510 --> 00:44:44,250
the web scale SQL effort the people

00:44:41,250 --> 00:44:45,930
using it as much as the no SQL is you

00:44:44,250 --> 00:44:47,700
know famous it doesn't really mean much

00:44:45,930 --> 00:44:50,160
if you look at the Gartner Magic

00:44:47,700 --> 00:44:52,530
Quadrant if that's our thing floats your

00:44:50,160 --> 00:44:54,450
boat you'd see oracle all over the top

00:44:52,530 --> 00:44:56,220
with mysql in the leaders quadrant and

00:44:54,450 --> 00:44:57,839
last year marini be made its leaders

00:44:56,220 --> 00:44:59,730
quadrant as well but if you're looking

00:44:57,839 --> 00:45:01,619
for all the other no SQL solutions

00:44:59,730 --> 00:45:02,579
enterprisedb is also in the leaders

00:45:01,619 --> 00:45:04,530
quadrant but if you're looking for the

00:45:02,579 --> 00:45:07,260
no SQL solutions they're all in the

00:45:04,530 --> 00:45:11,040
visionary potential competitor sections

00:45:07,260 --> 00:45:15,180
and so forth so MySQL is not dying in

00:45:11,040 --> 00:45:21,480
fact now bet you can't really see that

00:45:15,180 --> 00:45:24,780
very well huh in fact that's the Alexa

00:45:21,480 --> 00:45:28,319
top 20 websites and the sites in blue

00:45:24,780 --> 00:45:32,730
run Maria DB the sites in pink Ron

00:45:28,319 --> 00:45:34,890
web-scale the red the soul red site runs

00:45:32,730 --> 00:45:36,480
you know probably sequel server it's a

00:45:34,890 --> 00:45:43,549
Microsoft side I don't know what they're

00:45:36,480 --> 00:45:47,099
on and the rest actually run mysql so

00:45:43,549 --> 00:45:52,940
it's a pretty good list of companies

00:45:47,099 --> 00:45:56,309
that are running mysql or at ecosystem

00:45:52,940 --> 00:45:59,040
taobao and the alibaba group even though

00:45:56,309 --> 00:46:01,319
they run web scale bass also gave us

00:45:59,040 --> 00:46:02,819
marini be multi social application which

00:46:01,319 --> 00:46:05,220
were also you know which we've been

00:46:02,819 --> 00:46:06,869
shipping since ready to be ten are also

00:46:05,220 --> 00:46:11,520
happy to see oracle come up with the

00:46:06,869 --> 00:46:13,619
release in 57 and there's been work with

00:46:11,520 --> 00:46:16,020
amazon amazon probably makes the most

00:46:13,619 --> 00:46:18,809
money from mysql probably more money

00:46:16,020 --> 00:46:25,109
than oracle percona hanmer ad be

00:46:18,809 --> 00:46:26,640
combined through RDS and they also have

00:46:25,109 --> 00:46:29,070
Aurora I don't know if you've tried it

00:46:26,640 --> 00:46:30,990
we can't talk much about it in public

00:46:29,070 --> 00:46:34,650
but it's now open to everyone in public

00:46:30,990 --> 00:46:37,020
so but you slept sign NDA what is public

00:46:34,650 --> 00:46:40,380
though is the fact that the Java and

00:46:37,020 --> 00:46:43,140
odbc connectors for from marine DVR

00:46:40,380 --> 00:46:48,060
actually certified to run on Aurora that

00:46:43,140 --> 00:46:51,360
was announced sometime in April when we

00:46:48,060 --> 00:46:54,780
look at mysql adoption we can actually

00:46:51,360 --> 00:46:57,630
look closely at Popcaan in debian and

00:46:54,780 --> 00:46:59,430
you'll see that MySQL server is like the

00:46:57,630 --> 00:47:01,890
number one if we do if we draw a graph

00:46:59,430 --> 00:47:04,320
will eclipse everything else but it's

00:47:01,890 --> 00:47:06,720
then followed very closely by marine DB

00:47:04,320 --> 00:47:09,780
server as well as percona cela however

00:47:06,720 --> 00:47:12,090
in the gallery cluster space pxe seems

00:47:09,780 --> 00:47:13,920
to be doing a little bit better than mgc

00:47:12,090 --> 00:47:17,100
and I think it's largely got to do with

00:47:13,920 --> 00:47:19,080
the fact that it is first to market pxe

00:47:17,100 --> 00:47:21,360
came out at least nine months before mgc

00:47:19,080 --> 00:47:22,860
but today you can also gather your own

00:47:21,360 --> 00:47:27,030
stats from things like the docker hub

00:47:22,860 --> 00:47:30,120
juju charms puppet and so forth many

00:47:27,030 --> 00:47:32,010
many systems give you statistics

00:47:30,120 --> 00:47:33,780
nowadays they're not like the most

00:47:32,010 --> 00:47:35,430
accurate statistics but it's well worth

00:47:33,780 --> 00:47:37,530
looking and like the doctor registry and

00:47:35,430 --> 00:47:42,450
stuff to see what adoption kind of looks

00:47:37,530 --> 00:47:45,420
like what about the external ecosystem

00:47:42,450 --> 00:47:46,980
Yahoo just announced a monitoring to

00:47:45,420 --> 00:47:50,670
where they actually make extensive use

00:47:46,980 --> 00:47:52,230
of performance schema open source Yelp

00:47:50,670 --> 00:47:56,160
is open sauce a lot of replication

00:47:52,230 --> 00:47:58,740
monitoring boxes tools Dropbox booking

00:47:56,160 --> 00:48:00,060
as max scale in place Dropbox has been

00:47:58,740 --> 00:48:03,180
playing around with fabric for at least

00:48:00,060 --> 00:48:05,940
the air people are using all the tools

00:48:03,180 --> 00:48:08,550
in the ecosystem this is not like a

00:48:05,940 --> 00:48:09,960
dying you system as much as anyone would

00:48:08,550 --> 00:48:11,760
like to tell you it's dying or you

00:48:09,960 --> 00:48:14,040
should go on you know some no SQL

00:48:11,760 --> 00:48:17,040
bandwagon in fact if you if you need it

00:48:14,040 --> 00:48:19,410
you know big data you wanted to do

00:48:17,040 --> 00:48:21,750
queries in long running queries over

00:48:19,410 --> 00:48:23,460
HDFS you know there's a Hadoop applier

00:48:21,750 --> 00:48:24,980
that's available in the labs release

00:48:23,460 --> 00:48:29,820
that streams data in real time from

00:48:24,980 --> 00:48:35,220
MySQL to HDFS and what about the non

00:48:29,820 --> 00:48:39,000
server excellent ecosystem we're gonna

00:48:35,220 --> 00:48:41,490
toolkit extra backup max scale my dumper

00:48:39,000 --> 00:48:42,870
you know second parallel dump dump and

00:48:41,490 --> 00:48:45,210
restore mha for high

00:48:42,870 --> 00:48:47,550
ability used written at DNA currently

00:48:45,210 --> 00:48:51,360
used at Facebook tungsten replicator

00:48:47,550 --> 00:48:53,490
acquired by VMware vitesse so Google has

00:48:51,360 --> 00:48:55,590
a shouting solution automatic shouting

00:48:53,490 --> 00:48:57,030
solution that they've launched that they

00:48:55,590 --> 00:48:59,160
use they've been using for YouTube for

00:48:57,030 --> 00:49:00,990
some time they wrote this in go and now

00:48:59,160 --> 00:49:02,610
if you go to vitesse that I owe you can

00:49:00,990 --> 00:49:05,220
actually launched this in Coober

00:49:02,610 --> 00:49:08,460
Nettie's and have your own shard shard

00:49:05,220 --> 00:49:10,760
at mysql instances there's also

00:49:08,460 --> 00:49:13,920
companies like scale DB and scale bass

00:49:10,760 --> 00:49:15,750
the people that first made sharding easy

00:49:13,920 --> 00:49:17,550
worse tumblr they have named a solution

00:49:15,750 --> 00:49:19,950
called jetpens they run percona server

00:49:17,550 --> 00:49:22,830
for everything and maria db10 for an

00:49:19,950 --> 00:49:26,460
aggregation node to make new aggregator

00:49:22,830 --> 00:49:29,970
notes for charting the mysql utilities

00:49:26,460 --> 00:49:33,810
packs like my store RPL admin my skill

00:49:29,970 --> 00:49:37,380
failover they're well worth using fabric

00:49:33,810 --> 00:49:40,380
I honestly don't know production users

00:49:37,380 --> 00:49:43,980
yet besides roblox playing with it but

00:49:40,380 --> 00:49:45,810
maybe we will find out more soon return

00:49:43,980 --> 00:49:48,930
our application manager has users in

00:49:45,810 --> 00:49:50,940
fact if I'm mistaken github runs PRM and

00:49:48,930 --> 00:49:52,350
they had an outage sometime last year

00:49:50,940 --> 00:49:54,120
and it's because an automatic failover

00:49:52,350 --> 00:49:57,240
which is why automatic failover is not

00:49:54,120 --> 00:49:59,640
always the best thing for you several

00:49:57,240 --> 00:50:02,040
lines cluster control now Oracle cells

00:49:59,640 --> 00:50:03,810
are wonderful too in the in in the

00:50:02,040 --> 00:50:06,600
monitor and if you ever try to use any

00:50:03,810 --> 00:50:10,380
be cluster try to upgrade it you know

00:50:06,600 --> 00:50:13,560
you you get bawled pretty quickly unless

00:50:10,380 --> 00:50:15,600
that's a solid going for cluster control

00:50:13,560 --> 00:50:19,440
makes it easy so does the tool Oracle

00:50:15,600 --> 00:50:21,990
cells or some amount of money and then

00:50:19,440 --> 00:50:23,820
don't use it anymore there's also things

00:50:21,990 --> 00:50:25,320
like shard query and flex news to

00:50:23,820 --> 00:50:29,160
actually run parallel queries across

00:50:25,320 --> 00:50:33,570
multiple shards sandbox huge chunks of

00:50:29,160 --> 00:50:36,870
GUI tools um seriously the Eckstein on

00:50:33,570 --> 00:50:42,180
server XL ecosystem is doing well people

00:50:36,870 --> 00:50:43,830
are happy where are they now drizzle

00:50:42,180 --> 00:50:45,750
kind of died because of the fact that

00:50:43,830 --> 00:50:48,900
Rackspace employed posts the drizzle fog

00:50:45,750 --> 00:50:50,310
and then they kind of lost interest and

00:50:48,900 --> 00:50:52,230
say hey this OpenStack thing is pretty

00:50:50,310 --> 00:50:55,920
cool you should all work on that this

00:50:52,230 --> 00:50:56,760
what kind of died pv XD turns out it's

00:50:55,920 --> 00:51:00,000
really hard to make

00:50:56,760 --> 00:51:02,190
selling a storage engine so prime base

00:51:00,000 --> 00:51:03,900
the competent made PB XD they do team

00:51:02,190 --> 00:51:08,610
drive now it's kind of like Dropbox for

00:51:03,900 --> 00:51:10,650
teams very popular in Germany info bride

00:51:08,610 --> 00:51:13,200
they still make a storage engine they're

00:51:10,650 --> 00:51:16,200
kind of pivot at multiple times I think

00:51:13,200 --> 00:51:17,580
through indirect indirectly Oracle

00:51:16,200 --> 00:51:20,220
actually has shares in them because son

00:51:17,580 --> 00:51:23,960
actually invested in for Bryan in Philly

00:51:20,220 --> 00:51:27,300
to be they kind of fizzled out last year

00:51:23,960 --> 00:51:30,360
there's a lot a que getting bankrupt so

00:51:27,300 --> 00:51:32,910
Miranda me cooperation got them talking

00:51:30,360 --> 00:51:36,570
to be percona acquired them this year as

00:51:32,910 --> 00:51:39,150
well also in a tough situation engines

00:51:36,570 --> 00:51:40,770
like nitro which are kind of popular in

00:51:39,150 --> 00:51:45,750
the 51 days for data warehousing

00:51:40,770 --> 00:51:47,370
purposes did pig fire schooner SQL these

00:51:45,750 --> 00:51:50,070
are all hardware manufacturers who

00:51:47,370 --> 00:51:54,500
extend you know in a DB to run with like

00:51:50,070 --> 00:51:58,470
SQL chips chips basically optimizer SQL

00:51:54,500 --> 00:52:01,860
basically acquisitions what is the

00:51:58,470 --> 00:52:06,180
future going to look like I'm gonna bet

00:52:01,860 --> 00:52:11,820
57 will be GN open all this year who's

00:52:06,180 --> 00:52:13,500
who's with me percona server is clear it

00:52:11,820 --> 00:52:16,110
aims to never be big on before he'll

00:52:13,500 --> 00:52:17,940
actually work closely with Oracle it's

00:52:16,110 --> 00:52:19,710
also worth noting that like in the 56

00:52:17,940 --> 00:52:21,990
release they'd lagged about eight months

00:52:19,710 --> 00:52:23,940
behind the ga they've already started

00:52:21,990 --> 00:52:25,500
working on 57 from what I can see from

00:52:23,940 --> 00:52:28,880
the public trees but that doesn't mean

00:52:25,500 --> 00:52:32,570
you'll go ga straight after 57 goes GA

00:52:28,880 --> 00:52:35,370
Murray db10 has a lot of rapid changes

00:52:32,570 --> 00:52:37,680
especially things like GT ID starting

00:52:35,370 --> 00:52:40,590
look a lot more like a fork it will

00:52:37,680 --> 00:52:43,380
still remain application compatible I

00:52:40,590 --> 00:52:44,670
highly recommend that you try out marini

00:52:43,380 --> 00:52:46,350
be ten one because it comes with cool

00:52:44,670 --> 00:52:48,030
features like encryption and so forth

00:52:46,350 --> 00:52:51,210
some of which I'll talk about tomorrow

00:52:48,030 --> 00:52:53,580
in my security talk but I also recommend

00:52:51,210 --> 00:52:55,560
you to try out my SQL 57 which is an RC

00:52:53,580 --> 00:52:57,450
because you know you kind of want to

00:52:55,560 --> 00:52:58,830
report the bugs now not offer its GA

00:52:57,450 --> 00:53:00,540
because you report the boss of this J

00:52:58,830 --> 00:53:06,510
this is why he takes nine months to get

00:53:00,540 --> 00:53:08,730
ready so use it try it break it also

00:53:06,510 --> 00:53:10,170
it's interesting to note that web-scale

00:53:08,730 --> 00:53:10,650
announced that they're gonna they're

00:53:10,170 --> 00:53:12,690
gonna

00:53:10,650 --> 00:53:14,130
keep my SQL 57 they're going to be

00:53:12,690 --> 00:53:17,190
basically back politic interesting

00:53:14,130 --> 00:53:20,150
peaches from 5-7 back into their 563 and

00:53:17,190 --> 00:53:22,620
it'll look closely at my scale 58 and

00:53:20,150 --> 00:53:24,630
they're also willing to give away all

00:53:22,620 --> 00:53:28,460
your changes under the Apache ccla

00:53:24,630 --> 00:53:31,830
Oracle will accept it not under the OCA

00:53:28,460 --> 00:53:34,020
you can ask me what should you use and I

00:53:31,830 --> 00:53:36,150
am going to tell you to think about

00:53:34,020 --> 00:53:37,350
innovation that happens today don't

00:53:36,150 --> 00:53:39,090
think about innovation that's coming in

00:53:37,350 --> 00:53:40,110
two years time or one year's time think

00:53:39,090 --> 00:53:42,510
about elimination that you can I have

00:53:40,110 --> 00:53:44,640
today think about the features you need

00:53:42,510 --> 00:53:46,380
today but also look at the roadmaps

00:53:44,640 --> 00:53:48,780
closely because roadmaps will help you

00:53:46,380 --> 00:53:52,140
plan to you know push the vendor to say

00:53:48,780 --> 00:53:54,540
I want X happening in yeah it could be

00:53:52,140 --> 00:53:56,250
as simple as like look we're a bank we

00:53:54,540 --> 00:53:57,990
need TLS authentication for everything

00:53:56,250 --> 00:53:59,550
you need to start making this happen in

00:53:57,990 --> 00:54:01,950
one year we're going to migrate and this

00:53:59,550 --> 00:54:03,540
needs to happen also you really want

00:54:01,950 --> 00:54:05,700
freedom of vendor-independent so always

00:54:03,540 --> 00:54:07,500
generally beware of a vendor lock-in

00:54:05,700 --> 00:54:10,470
that can be vendor lock-in an open

00:54:07,500 --> 00:54:12,600
source to now Michael stonebraker said

00:54:10,470 --> 00:54:15,060
that for facebook mysql was a fate worse

00:54:12,600 --> 00:54:18,480
than death so they made these funny

00:54:15,060 --> 00:54:19,890
t-shirts now mastering the MySQL

00:54:18,480 --> 00:54:24,060
ecosystem is going to take you a long

00:54:19,890 --> 00:54:25,470
time it 20 years it's been around so

00:54:24,060 --> 00:54:27,810
there are lots of wide and varied

00:54:25,470 --> 00:54:30,720
solutions there's no one way to do it

00:54:27,810 --> 00:54:32,820
right but there are a lot of good

00:54:30,720 --> 00:54:35,820
resources to help make you get things

00:54:32,820 --> 00:54:38,640
right for one there a couple of good

00:54:35,820 --> 00:54:40,500
books high performance mysql it's a

00:54:38,640 --> 00:54:42,900
little outdated now it comes up to 55

00:54:40,500 --> 00:54:45,150
but it's so really a very good book my

00:54:42,900 --> 00:54:49,710
skill high availability i believe chuck

00:54:45,150 --> 00:54:51,390
did right co-write that so it's also in

00:54:49,710 --> 00:54:54,090
the second edition i think i'm one of

00:54:51,390 --> 00:54:56,070
you in tech reviewed that book i did ok

00:54:54,090 --> 00:54:57,240
so that's another good book and if

00:54:56,070 --> 00:54:59,370
you're actually looking to play around

00:54:57,240 --> 00:55:01,080
with fabric i highly recommend you

00:54:59,370 --> 00:55:02,880
getting that book i think the book has a

00:55:01,080 --> 00:55:07,440
lot of good examples around fabric

00:55:02,880 --> 00:55:08,850
compared to what you can find online not

00:55:07,440 --> 00:55:11,280
the latest book that's come out is

00:55:08,850 --> 00:55:14,490
learning mice comer a DB by russell dire

00:55:11,280 --> 00:55:17,100
it its most card because it came out

00:55:14,490 --> 00:55:20,790
like in april so it covers up to marie

00:55:17,100 --> 00:55:24,069
to be 10 my scale 56 so another book

00:55:20,790 --> 00:55:26,109
worth buying and with that I

00:55:24,069 --> 00:55:30,150
thank you and do you have any questions

00:55:26,109 --> 00:55:39,130
so thank you for listening any questions

00:55:30,150 --> 00:55:41,440
yes this thing is gonna be earlier yeah

00:55:39,130 --> 00:55:43,509
I would totally better beer for the 57

00:55:41,440 --> 00:55:45,400
gee I think you'll come out right before

00:55:43,509 --> 00:55:49,690
open world or an open world what do you

00:55:45,400 --> 00:55:53,709
what do you think I I don't think you

00:55:49,690 --> 00:55:55,420
can come out much later I mean I i was

00:55:53,709 --> 00:55:57,369
thinking in money even come on likes em

00:55:55,420 --> 00:56:01,329
you know like this year like this is

00:55:57,369 --> 00:56:04,089
kind of a two year mark but i think open

00:56:01,329 --> 00:56:05,890
was a good time for it so yeah i would

00:56:04,089 --> 00:56:08,559
totally better beer and if we don't see

00:56:05,890 --> 00:56:10,119
each other until next year here then

00:56:08,559 --> 00:56:13,839
that's what that's what the beer would

00:56:10,119 --> 00:56:15,130
be we could ask the Oracle employees

00:56:13,839 --> 00:56:20,529
sitting here but they can't comment I

00:56:15,130 --> 00:56:24,959
bet as well yes it's G when it's ready

00:56:20,529 --> 00:56:29,309
oh I'm really be 10 10 GA like

00:56:24,959 --> 00:56:29,309
august-september realistically September

00:56:30,359 --> 00:56:39,039
right before / el dia yeah exactly so

00:56:35,380 --> 00:56:46,059
and petronas server is you know when

00:56:39,039 --> 00:56:49,619
they deem it you know 57 is GA okay then

00:56:46,059 --> 00:56:49,619
thank you very much for listening

00:56:52,539 --> 00:56:54,599
you

00:57:00,460 --> 00:57:02,520
you

00:57:04,829 --> 00:57:06,890
you

00:57:08,720 --> 00:57:10,780
you

00:58:38,190 --> 00:58:42,490
your customers rely on your website or

00:58:40,960 --> 00:58:44,860
application if it's slower

00:58:42,490 --> 00:58:47,770
non-responsive it infuriates your users

00:58:44,860 --> 00:58:49,600
and costs you money keeping your

00:58:47,770 --> 00:58:53,220
business critical systems humming along

00:58:49,600 --> 00:58:55,440
requires insight into what they're doing

00:58:53,220 --> 00:58:57,390
your system metrics tells stories

00:58:55,440 --> 00:58:59,400
stories that can reveal performance

00:58:57,390 --> 00:59:01,740
bottlenecks resource limitations and

00:58:59,400 --> 00:59:03,300
other problems but how do you keep an

00:59:01,740 --> 00:59:05,940
eye on all of your systems performance

00:59:03,300 --> 00:59:08,970
metrics in real-time and record this

00:59:05,940 --> 00:59:10,740
data for leader analysis enter long view

00:59:08,970 --> 00:59:12,750
the new way to see what's really going

00:59:10,740 --> 00:59:14,940
on under the hood the long view

00:59:12,750 --> 00:59:16,980
dashboard lets you visualize the status

00:59:14,940 --> 00:59:19,440
of all your systems providing you with a

00:59:16,980 --> 00:59:22,830
bird's-eye view of your entire fleet you

00:59:19,440 --> 00:59:25,380
can sort by cpu memory swap processes

00:59:22,830 --> 00:59:27,150
load and network usage click a specific

00:59:25,380 --> 00:59:29,580
system to access its individual

00:59:27,150 --> 00:59:32,210
dashboard then click and drag to zoom in

00:59:29,580 --> 00:59:34,650
on chokepoints and get more detail

00:59:32,210 --> 00:59:36,359
comprehensive network data including

00:59:34,650 --> 00:59:38,700
inbound and outbound traffic is

00:59:36,359 --> 00:59:40,680
available on the network tab and disk

00:59:38,700 --> 00:59:42,810
rights and free space on a disk stabbed

00:59:40,680 --> 00:59:45,000
while the process explorer displays

00:59:42,810 --> 00:59:47,550
usage statistics for individual

00:59:45,000 --> 00:59:49,740
processes the system info tab shows

00:59:47,550 --> 00:59:51,840
listening services active connections

00:59:49,740 --> 00:59:53,849
and available updates adding long view

00:59:51,840 --> 00:59:55,560
to a system is easy just click the

00:59:53,849 --> 00:59:57,690
button copy the one line installation

00:59:55,560 --> 01:00:00,150
command then run the command on your

00:59:57,690 --> 01:00:01,830
linux system to complete the process the

01:00:00,150 --> 01:00:04,050
agent will begin collecting data and

01:00:01,830 --> 01:00:07,530
sending it to longview then the graphs

01:00:04,050 --> 01:00:09,780
start rolling use long view to gain

01:00:07,530 --> 01:00:13,740
visibility into your servers so when

01:00:09,780 --> 01:00:15,869
your website or app heats up it stays up

01:00:13,740 --> 01:00:17,910
Citrix XenServer gives you everything

01:00:15,869 --> 01:00:20,910
you need to integrate manage and

01:00:17,910 --> 01:00:23,040
automate a virtual data center all on an

01:00:20,910 --> 01:00:25,440
enterprise-class cloud proven virtual

01:00:23,040 --> 01:00:28,170
platform and at a third of the cost of

01:00:25,440 --> 01:00:29,880
other solutions but why even bother with

01:00:28,170 --> 01:00:32,040
virtualizing your server infrastructure

01:00:29,880 --> 01:00:34,020
in the first place well let's say you

01:00:32,040 --> 01:00:36,330
have a traditional one server to one

01:00:34,020 --> 01:00:38,340
application architecture but you're

01:00:36,330 --> 01:00:40,860
running out of resources and performance

01:00:38,340 --> 01:00:43,190
is suffering once you order new server

01:00:40,860 --> 01:00:46,080
hardware you'll wait for delivery

01:00:43,190 --> 01:00:48,960
configure it install your business

01:00:46,080 --> 01:00:51,720
application stage and test the server

01:00:48,960 --> 01:00:53,940
and finally add it to your production

01:00:51,720 --> 01:00:56,130
farm if you've been through this process

01:00:53,940 --> 01:00:58,650
before you know it can take weeks or

01:00:56,130 --> 01:01:00,480
even months you also know it's a

01:00:58,650 --> 01:01:02,430
manually intensive process that will

01:01:00,480 --> 01:01:04,420
burden your team every time you outgrow

01:01:02,430 --> 01:01:06,850
your current setup

01:01:04,420 --> 01:01:08,740
with a virtual server solution you could

01:01:06,850 --> 01:01:11,500
accomplish all of that in less than half

01:01:08,740 --> 01:01:14,140
a day server virtualization software

01:01:11,500 --> 01:01:16,660
separates the OS and application from

01:01:14,140 --> 01:01:18,550
the underlying server hardware and with

01:01:16,660 --> 01:01:20,620
multiple virtual machines on a single

01:01:18,550 --> 01:01:23,590
server you can use each of them to run

01:01:20,620 --> 01:01:25,330
different os's and applications this

01:01:23,590 --> 01:01:27,190
makes it possible to move your virtual

01:01:25,330 --> 01:01:29,590
machines from one piece of hardware to

01:01:27,190 --> 01:01:31,870
another whenever you want to maximize

01:01:29,590 --> 01:01:33,850
utilization simplify maintenance or

01:01:31,870 --> 01:01:36,130
recover from a hardware failure and

01:01:33,850 --> 01:01:39,100
without slowing down your applications

01:01:36,130 --> 01:01:42,160
or users clearly server virtualization

01:01:39,100 --> 01:01:45,160
provides big benefits and Citrix

01:01:42,160 --> 01:01:47,380
XenServer provides even more since it's

01:01:45,160 --> 01:01:49,240
built on an open platform xenserver

01:01:47,380 --> 01:01:51,550
plays well with your existing hardware

01:01:49,240 --> 01:01:53,830
storage systems and IT management

01:01:51,550 --> 01:01:56,590
software as well as with the industry's

01:01:53,830 --> 01:01:58,630
leading cloud service providers best of

01:01:56,590 --> 01:02:00,340
all you can get started by downloading a

01:01:58,630 --> 01:02:03,550
fully functional production ready

01:02:00,340 --> 01:02:05,770
version of xenserver for free after a

01:02:03,550 --> 01:02:07,900
10-minute installation process you'll

01:02:05,770 --> 01:02:09,940
see how easy it is to start virtualizing

01:02:07,900 --> 01:02:12,370
your workloads and automating your IT

01:02:09,940 --> 01:02:13,990
management processes and when you're

01:02:12,370 --> 01:02:15,940
ready for a richer set of management

01:02:13,990 --> 01:02:18,490
tools just upgrade to one of the premium

01:02:15,940 --> 01:02:20,380
editions of xenserver so whether you're

01:02:18,490 --> 01:02:22,360
interested in virtualizing servers for

01:02:20,380 --> 01:02:24,670
the first time expanding your server

01:02:22,360 --> 01:02:27,220
virtualization footprint or moving

01:02:24,670 --> 01:02:29,620
server workloads to the cloud download

01:02:27,220 --> 01:02:31,480
and install xenserver today and see how

01:02:29,620 --> 01:02:35,050
it can help you simplify your IT

01:02:31,480 --> 01:02:38,490
environment citrix xenserver do more

01:02:35,050 --> 01:02:38,490
don't spend more

01:03:55,140 --> 01:03:57,200

YouTube URL: https://www.youtube.com/watch?v=TQuPLVsUJ10


