Title: Michael Hall - Developing Apps and Scopes for Ubuntu
Publication date: 2017-01-25
Playlist: 2015 SouthEast LinuxFest
Description: 
	
Captions: 
	00:00:52,500 --> 00:00:58,440
alright welcome back everybody i hope

00:00:54,450 --> 00:01:00,180
everyone had a good lunch um next talk

00:00:58,440 --> 00:01:01,800
is going to be about a bun to app and

00:01:00,180 --> 00:01:03,570
scope development I'm not going to go

00:01:01,800 --> 00:01:05,700
too deep into code here because we're

00:01:03,570 --> 00:01:06,870
not really set up to do a workshop so

00:01:05,700 --> 00:01:08,970
I'm going to kind of hit on the

00:01:06,870 --> 00:01:10,440
high-level topics and talked about where

00:01:08,970 --> 00:01:15,830
you can get more information if you

00:01:10,440 --> 00:01:18,720
actually want to start developing so

00:01:15,830 --> 00:01:21,030
first things first we have in a bunch of

00:01:18,720 --> 00:01:23,670
developer portal it is developer ubuntu

00:01:21,030 --> 00:01:24,869
com and it is going to be your very best

00:01:23,670 --> 00:01:29,119
friend if you are going to be developing

00:01:24,869 --> 00:01:32,130
anything at all for a bun to it will

00:01:29,119 --> 00:01:34,860
cover app development scope development

00:01:32,130 --> 00:01:38,340
web app development we've got this core

00:01:34,860 --> 00:01:39,780
session section now which covers snappy

00:01:38,340 --> 00:01:42,210
Ubuntu core and that's going to be

00:01:39,780 --> 00:01:43,979
expanded to cover the new snappy

00:01:42,210 --> 00:01:45,300
personal that Rick talked about earlier

00:01:43,979 --> 00:01:47,820
which is going to cover phones and

00:01:45,300 --> 00:01:49,500
tablets and desktops moving forward so

00:01:47,820 --> 00:01:51,090
if you're a third-party developer that

00:01:49,500 --> 00:01:52,800
wants to target a bun to everything that

00:01:51,090 --> 00:01:54,300
you need everything you're going to want

00:01:52,800 --> 00:01:56,549
is going to be on this website right

00:01:54,300 --> 00:01:58,530
here so bookmark that come back to that

00:01:56,549 --> 00:02:01,020
frequently we post a lot of blog

00:01:58,530 --> 00:02:02,640
articles on there it's going to be

00:02:01,020 --> 00:02:06,360
somewhere you're going to be coming back

00:02:02,640 --> 00:02:08,040
to quite a bit um first thing it you're

00:02:06,360 --> 00:02:10,229
going to get there as instructions for

00:02:08,040 --> 00:02:14,510
getting started that includes learning

00:02:10,229 --> 00:02:16,440
about the platform getting the SDK

00:02:14,510 --> 00:02:18,540
everything that you need to get set up

00:02:16,440 --> 00:02:20,880
on a bun to right now we only support

00:02:18,540 --> 00:02:23,250
development on a bun to as a host so if

00:02:20,880 --> 00:02:25,230
you're running Windows or Mac or even

00:02:23,250 --> 00:02:28,049
like fedora you're going to want to get

00:02:25,230 --> 00:02:29,730
a virtual machine set up for that and we

00:02:28,049 --> 00:02:34,230
do provide virtual machine images also

00:02:29,730 --> 00:02:35,250
here on developer guangzhou com so once

00:02:34,230 --> 00:02:37,680
you get set up its going to talk a

00:02:35,250 --> 00:02:39,480
little bit about the platform the Batu

00:02:37,680 --> 00:02:40,920
platform is a little bit unique because

00:02:39,480 --> 00:02:43,560
we've added some features in there to

00:02:40,920 --> 00:02:46,019
make development easier for you and also

00:02:43,560 --> 00:02:47,910
make things safer for the user when they

00:02:46,019 --> 00:02:48,690
start running your applications so

00:02:47,910 --> 00:02:51,290
you're going to want to familiarize

00:02:48,690 --> 00:02:54,750
yourself with the differences between

00:02:51,290 --> 00:02:56,459
that and traditional Linux development

00:02:54,750 --> 00:02:58,769
if you've done a desktop app in gtk

00:02:56,459 --> 00:03:01,319
before things are going to be different

00:02:58,769 --> 00:03:02,910
in some really important ways that's so

00:03:01,319 --> 00:03:04,590
you can the need to learn about that we

00:03:02,910 --> 00:03:06,450
have all kinds of tutorials on there

00:03:04,590 --> 00:03:09,030
that will walk you through your

00:03:06,450 --> 00:03:10,500
first app or your first scope and these

00:03:09,030 --> 00:03:11,459
are designed to take you from having no

00:03:10,500 --> 00:03:14,040
knowledge at all of what you're doing

00:03:11,459 --> 00:03:15,420
all the way through to having a finished

00:03:14,040 --> 00:03:18,360
product at the end that you can actually

00:03:15,420 --> 00:03:20,910
upload to the store they generally cover

00:03:18,360 --> 00:03:22,860
one specific use case just to get you

00:03:20,910 --> 00:03:25,349
familiar with the tools and the workflow

00:03:22,860 --> 00:03:27,239
in the process on that in addition to

00:03:25,349 --> 00:03:29,840
tutorials we also have a set of guides

00:03:27,239 --> 00:03:32,099
which are more targeted to specific

00:03:29,840 --> 00:03:33,810
features or use cases that you might

00:03:32,099 --> 00:03:35,580
want to do these aren't going to start

00:03:33,810 --> 00:03:36,720
you from the very beginning setting up a

00:03:35,580 --> 00:03:37,640
new project and they're not going to

00:03:36,720 --> 00:03:39,660
walk you all the way through to

00:03:37,640 --> 00:03:42,120
publishing it in the store it's going to

00:03:39,660 --> 00:03:46,560
be specific to I want to do this one

00:03:42,120 --> 00:03:48,840
thing here's how you do it we also have

00:03:46,560 --> 00:03:55,380
all of our API Doc's published on here

00:03:48,840 --> 00:03:58,440
that's for qml for html5 for C++ for

00:03:55,380 --> 00:04:00,599
scopes development and Python for

00:03:58,440 --> 00:04:03,120
autopilot so all of those are on there

00:04:00,599 --> 00:04:05,819
they're all searchable that is the

00:04:03,120 --> 00:04:08,069
primary reference for any of our api's

00:04:05,819 --> 00:04:10,290
even if you're using the cute AP is that

00:04:08,069 --> 00:04:12,420
we get from upstream we encourage you to

00:04:10,290 --> 00:04:14,970
use this because it will link to the

00:04:12,420 --> 00:04:16,769
ubuntu specific docs as well and also

00:04:14,970 --> 00:04:19,229
because not everything from upstream is

00:04:16,769 --> 00:04:22,380
going to be available by default on a

00:04:19,229 --> 00:04:23,490
bun to so use the API Doc's here and

00:04:22,380 --> 00:04:24,960
you'll know that if they're on this web

00:04:23,490 --> 00:04:26,160
page then they're on the phone they're

00:04:24,960 --> 00:04:31,560
on the tablet they're going to be on the

00:04:26,160 --> 00:04:32,550
desktop all right so getting started the

00:04:31,560 --> 00:04:34,530
first thing you're going to do is you're

00:04:32,550 --> 00:04:36,450
going to get the bunt to SDK and this is

00:04:34,530 --> 00:04:38,310
what it looks like is built on cute

00:04:36,450 --> 00:04:40,919
creator so it's a very powerful I ve

00:04:38,310 --> 00:04:44,160
it's got all kinds of great development

00:04:40,919 --> 00:04:46,520
tools built into it already syntax

00:04:44,160 --> 00:04:48,750
highlighting project management the

00:04:46,520 --> 00:04:51,090
class overviews everything you would

00:04:48,750 --> 00:04:55,200
expect in a modern IDE is going to be

00:04:51,090 --> 00:04:56,550
there once you get that installed and

00:04:55,200 --> 00:04:57,510
setup the first thing you're going to

00:04:56,550 --> 00:04:59,490
want to do is you're going to want to

00:04:57,510 --> 00:05:01,919
tell it about your devices and create a

00:04:59,490 --> 00:05:03,479
kit so to do that you plug in your a

00:05:01,919 --> 00:05:06,810
buncha phone or your bunch of tablet

00:05:03,479 --> 00:05:08,460
into your USB um you need to make sure

00:05:06,810 --> 00:05:10,950
that it's got developer mode enabled and

00:05:08,460 --> 00:05:12,960
then it is unlocked and then Q Creator

00:05:10,950 --> 00:05:16,800
will automatically detect it you can see

00:05:12,960 --> 00:05:18,419
here it's detective my my nexus 4 it's

00:05:16,800 --> 00:05:19,950
called the information it needs about it

00:05:18,419 --> 00:05:21,810
and then here at the

00:05:19,950 --> 00:05:23,610
you're going to see something about kits

00:05:21,810 --> 00:05:24,870
and kids are important when you're

00:05:23,610 --> 00:05:29,060
developing for a bun too because that

00:05:24,870 --> 00:05:31,890
defines your target device and os set up

00:05:29,060 --> 00:05:33,510
you can target something different from

00:05:31,890 --> 00:05:35,340
what you're running on your desktop and

00:05:33,510 --> 00:05:38,070
you do that using a kid so you can

00:05:35,340 --> 00:05:39,420
target an older version of a bunch of on

00:05:38,070 --> 00:05:42,150
the phone if you're running like the

00:05:39,420 --> 00:05:44,640
latest Wiley on your desktop or you can

00:05:42,150 --> 00:05:47,700
target vivid on the phone if you're

00:05:44,640 --> 00:05:48,750
running precise on your desktop so

00:05:47,700 --> 00:05:50,640
you're going to want to set up your kit

00:05:48,750 --> 00:05:52,560
you can tell it what version of a bunch

00:05:50,640 --> 00:05:54,810
of you're going to target and also what

00:05:52,560 --> 00:05:57,690
architecture you're going to use so if

00:05:54,810 --> 00:05:58,920
you want to build something for a phone

00:05:57,690 --> 00:06:01,590
or a tablet you're going to want to use

00:05:58,920 --> 00:06:03,030
an armed hf kit and that's going to

00:06:01,590 --> 00:06:04,020
create the change route for you also and

00:06:03,030 --> 00:06:06,750
it's going to do all your building

00:06:04,020 --> 00:06:08,610
locally on your host machine instead of

00:06:06,750 --> 00:06:09,720
on the actual device but that's going to

00:06:08,610 --> 00:06:13,470
make sure that it's going to build

00:06:09,720 --> 00:06:15,330
properly for that device if you don't

00:06:13,470 --> 00:06:17,490
have a phone or a tablet you can use the

00:06:15,330 --> 00:06:19,620
bunt to emulator and that's also easy to

00:06:17,490 --> 00:06:21,300
create so right here under the list of

00:06:19,620 --> 00:06:23,460
devices is a big plus button you click

00:06:21,300 --> 00:06:24,300
on that and it will pop this up and

00:06:23,460 --> 00:06:26,040
that's where you can define your

00:06:24,300 --> 00:06:27,810
emulator all you have to do is give it a

00:06:26,040 --> 00:06:31,080
name tell it what architecture you want

00:06:27,810 --> 00:06:33,390
to use what release channel of a bunch

00:06:31,080 --> 00:06:36,480
you want to use I've got devel proposed

00:06:33,390 --> 00:06:37,650
right here which is currently Wiley so

00:06:36,480 --> 00:06:39,780
that'll get you the latest and greatest

00:06:37,650 --> 00:06:41,300
you create that and it takes a few

00:06:39,780 --> 00:06:43,620
minutes and it'll pull in all of the

00:06:41,300 --> 00:06:45,870
packages and stuff out of the archives

00:06:43,620 --> 00:06:47,280
that you need to set up this emulator it

00:06:45,870 --> 00:06:48,660
creates the emulator it'll create a

00:06:47,280 --> 00:06:50,400
change route for building packages

00:06:48,660 --> 00:06:52,380
specifically for it and then it will

00:06:50,400 --> 00:06:53,970
list it on your devices here and make it

00:06:52,380 --> 00:06:56,160
available for use it will also

00:06:53,970 --> 00:06:58,230
automatically create you a kit for the

00:06:56,160 --> 00:07:00,690
specific emulator setup that you defined

00:06:58,230 --> 00:07:02,850
so you're as soon as you hit create and

00:07:00,690 --> 00:07:05,880
you wait for all finish you're ready to

00:07:02,850 --> 00:07:07,350
start developing for that so once that's

00:07:05,880 --> 00:07:09,150
all set up and you've got an environment

00:07:07,350 --> 00:07:11,460
that you can target you need to choose

00:07:09,150 --> 00:07:13,680
your project so when you go to file and

00:07:11,460 --> 00:07:15,960
new and you create new project this is

00:07:13,680 --> 00:07:17,220
what you're going to get to creator

00:07:15,960 --> 00:07:19,230
provides a whole bunch of different

00:07:17,220 --> 00:07:21,090
classes and projects you can choose from

00:07:19,230 --> 00:07:24,020
the ones in there a bun two are the

00:07:21,090 --> 00:07:26,910
specific ones you're going to care about

00:07:24,020 --> 00:07:28,830
we have different build environments we

00:07:26,910 --> 00:07:30,390
started out with CMake we now have

00:07:28,830 --> 00:07:32,190
support for cumec so you'll see a lot of

00:07:30,390 --> 00:07:33,080
duplicates in here for SEMA kink you

00:07:32,190 --> 00:07:35,580
make

00:07:33,080 --> 00:07:37,890
for most people it doesn't really matter

00:07:35,580 --> 00:07:40,980
to you q Mick is going to make cross

00:07:37,890 --> 00:07:42,750
compiling a little bit easier and fat

00:07:40,980 --> 00:07:44,880
packages I think are working in queue

00:07:42,750 --> 00:07:46,590
make and not in C make but if you don't

00:07:44,880 --> 00:07:48,510
want to do something in C++ you just

00:07:46,590 --> 00:07:50,550
want to use qml which I do because I

00:07:48,510 --> 00:07:51,660
like qml it's really easy to use you

00:07:50,550 --> 00:07:54,120
don't have to worry about compiling

00:07:51,660 --> 00:07:55,560
anything anyway so you can use this qml

00:07:54,120 --> 00:07:57,080
project right up here at the top and

00:07:55,560 --> 00:07:59,670
that makes things easier for you if

00:07:57,080 --> 00:08:01,050
you're wanting to make a scope instead

00:07:59,670 --> 00:08:03,150
of an app we've got a template for that

00:08:01,050 --> 00:08:04,830
if you want to make an HTML app instead

00:08:03,150 --> 00:08:06,420
of qml there's a template for that and

00:08:04,830 --> 00:08:07,920
there's a template also for creating a

00:08:06,420 --> 00:08:09,990
web app so if you've got a remote

00:08:07,920 --> 00:08:11,760
website and you want to create a app

00:08:09,990 --> 00:08:14,010
package for it that just kind of wraps

00:08:11,760 --> 00:08:17,420
the browser around it and add some extra

00:08:14,010 --> 00:08:17,420
features you can do that through here

00:08:17,840 --> 00:08:21,960
the big question for developers is

00:08:20,640 --> 00:08:23,850
whether or not they should write an app

00:08:21,960 --> 00:08:25,530
or a scope and there's a lot of

00:08:23,850 --> 00:08:28,080
confusion sometimes about what the

00:08:25,530 --> 00:08:30,480
difference is for these here I've got

00:08:28,080 --> 00:08:32,880
examples of a reddit app and the reddit

00:08:30,480 --> 00:08:34,860
scope so you can kind of see them scopes

00:08:32,880 --> 00:08:37,290
are really good for delivering content

00:08:34,860 --> 00:08:39,060
so if your primary goal is to get

00:08:37,290 --> 00:08:42,210
content to the user make it searchable

00:08:39,060 --> 00:08:44,400
on and then have it open it up somewhere

00:08:42,210 --> 00:08:45,870
else like a browser then scopes are

00:08:44,400 --> 00:08:47,070
really ideal for you you don't need to

00:08:45,870 --> 00:08:50,010
write a whole app you don't need to

00:08:47,070 --> 00:08:53,460
build a UI for it you just want to say

00:08:50,010 --> 00:08:55,260
okay here's a JSON string of results

00:08:53,460 --> 00:08:57,300
show it to the user and let them do

00:08:55,260 --> 00:08:59,130
something with it that's what scopes are

00:08:57,300 --> 00:09:01,740
ideally used for there is some

00:08:59,130 --> 00:09:03,390
interaction available with scopes if you

00:09:01,740 --> 00:09:05,040
look at the app scope you'll see that

00:09:03,390 --> 00:09:07,590
you can leave like ratings and reviews

00:09:05,040 --> 00:09:10,380
for apps so there's a little bit of back

00:09:07,590 --> 00:09:12,660
and forth available um but not as much

00:09:10,380 --> 00:09:15,480
as a full-blown app if you really care

00:09:12,660 --> 00:09:18,840
about the user experience and you want

00:09:15,480 --> 00:09:21,150
to make something specific to what you

00:09:18,840 --> 00:09:22,470
want to deliver then a nap is going to

00:09:21,150 --> 00:09:24,150
be the best choice for you because then

00:09:22,470 --> 00:09:25,800
you do have full control over everything

00:09:24,150 --> 00:09:27,450
that gets displayed and how its

00:09:25,800 --> 00:09:29,490
displayed and how the user interacts

00:09:27,450 --> 00:09:30,870
with it but that also requires that you

00:09:29,490 --> 00:09:33,000
do all the extra work of actually

00:09:30,870 --> 00:09:34,830
building this so it's a trade often you

00:09:33,000 --> 00:09:36,750
have to decide which direction you want

00:09:34,830 --> 00:09:39,340
to go depending on what your actual

00:09:36,750 --> 00:09:41,500
goals are in doing this

00:09:39,340 --> 00:09:46,120
so let's say that you want to build an

00:09:41,500 --> 00:09:48,340
app you have two choices for building an

00:09:46,120 --> 00:09:49,870
app you can go with qml which is

00:09:48,340 --> 00:09:52,690
provided by cute or you can go with

00:09:49,870 --> 00:09:55,630
html5 we consider both of them first

00:09:52,690 --> 00:09:58,030
class toolkits for a bunt too so we

00:09:55,630 --> 00:10:01,210
don't we try not to say you know native

00:09:58,030 --> 00:10:04,570
and html5 or native and web because we

00:10:01,210 --> 00:10:06,700
consider html5 to be native just as well

00:10:04,570 --> 00:10:09,310
as cute but they do take different

00:10:06,700 --> 00:10:11,140
approaches and they have different skill

00:10:09,310 --> 00:10:14,110
requirements if you already are familiar

00:10:11,140 --> 00:10:16,270
with html5 and CSS and JavaScript and

00:10:14,110 --> 00:10:17,740
you're comfortable with that then html5

00:10:16,270 --> 00:10:21,370
is probably going to be a better choice

00:10:17,740 --> 00:10:24,700
for you if you're familiar with C++ or

00:10:21,370 --> 00:10:26,530
you want it's a really simple way of

00:10:24,700 --> 00:10:29,230
building an app then qml is a really

00:10:26,530 --> 00:10:30,580
good choice for that as well both of

00:10:29,230 --> 00:10:33,700
them are going to have access to the

00:10:30,580 --> 00:10:35,950
same platform level features so you

00:10:33,700 --> 00:10:38,410
really it's not so much a question of

00:10:35,950 --> 00:10:39,820
what features you want to do it's just a

00:10:38,410 --> 00:10:43,510
question of what language are you most

00:10:39,820 --> 00:10:45,190
comfortable doing it in there's some

00:10:43,510 --> 00:10:47,380
main components in an app that you'll

00:10:45,190 --> 00:10:48,820
notice if you look at one of our bun two

00:10:47,380 --> 00:10:50,830
phones that we've got at our table out

00:10:48,820 --> 00:10:54,130
there you'll notice they all share the

00:10:50,830 --> 00:10:56,680
same primary features there are going to

00:10:54,130 --> 00:10:58,150
have this header area at the top that

00:10:56,680 --> 00:11:01,630
comes from the main view component that

00:10:58,150 --> 00:11:06,190
you use that's going to give you page

00:11:01,630 --> 00:11:07,660
title if you use tabs or a page stack

00:11:06,190 --> 00:11:10,540
for navigation you're going to get an

00:11:07,660 --> 00:11:12,070
icon here at the left automatically for

00:11:10,540 --> 00:11:14,200
you on that and then any actions that

00:11:12,070 --> 00:11:16,420
you add on there it's going to come up

00:11:14,200 --> 00:11:18,640
with icons in the right you can see here

00:11:16,420 --> 00:11:21,250
I've got the one envelope icon and then

00:11:18,640 --> 00:11:22,840
I've got another three daikon there the

00:11:21,250 --> 00:11:24,520
toolkit is going to put that three dot

00:11:22,840 --> 00:11:26,830
icon on there for you so you just say

00:11:24,520 --> 00:11:28,240
here all my actions and if we can fit

00:11:26,830 --> 00:11:29,740
them all on the screen it will fit them

00:11:28,240 --> 00:11:32,050
all on the screen and if it can't it's

00:11:29,740 --> 00:11:35,620
going to set this drop-down menu for you

00:11:32,050 --> 00:11:38,620
there and this is important because you

00:11:35,620 --> 00:11:40,360
have to think beyond just developing for

00:11:38,620 --> 00:11:42,040
a phone or just developing for a nap

00:11:40,360 --> 00:11:44,560
when you're writing in a bun to app you

00:11:42,040 --> 00:11:45,730
need to think about convergence and that

00:11:44,560 --> 00:11:47,830
means you need to think about how is

00:11:45,730 --> 00:11:50,260
this going to work on a larger screen or

00:11:47,830 --> 00:11:51,940
a different form factor screen so by

00:11:50,260 --> 00:11:53,200
doing it this way if you just say okay

00:11:51,940 --> 00:11:55,330
here's all the actions that

00:11:53,200 --> 00:11:56,800
want to make available to the user then

00:11:55,330 --> 00:11:58,150
when it's on the desktop and they can

00:11:56,800 --> 00:12:00,040
all fit on screen that'll all be on

00:11:58,150 --> 00:12:02,500
there like a toolbar but when they're on

00:12:00,040 --> 00:12:04,990
a phone it'll you don't put the hoodie

00:12:02,500 --> 00:12:07,750
allen as many as it can and put the rest

00:12:04,990 --> 00:12:10,330
in a drop-down menu and then here below

00:12:07,750 --> 00:12:12,040
that we've got these new sections which

00:12:10,330 --> 00:12:14,410
let you change the content that are in

00:12:12,040 --> 00:12:16,390
the app based on the user selection

00:12:14,410 --> 00:12:18,610
there and again these are components

00:12:16,390 --> 00:12:21,340
that are available in both qml and then

00:12:18,610 --> 00:12:22,780
html5 so you shouldn't actually be able

00:12:21,340 --> 00:12:25,060
to tell the difference between the qml

00:12:22,780 --> 00:12:28,060
app and an html5 app we've created a

00:12:25,060 --> 00:12:29,890
whole new UI toolkit for html5

00:12:28,060 --> 00:12:32,110
specifically to make it look and work

00:12:29,890 --> 00:12:34,120
exactly the same as the UI toolkit that

00:12:32,110 --> 00:12:37,930
we made for qml so all of those

00:12:34,120 --> 00:12:39,160
components are on there for both we've

00:12:37,930 --> 00:12:41,980
introduced something called conditional

00:12:39,160 --> 00:12:44,110
layouts this is something we added into

00:12:41,980 --> 00:12:46,390
qml it's not really needed in html5

00:12:44,110 --> 00:12:48,730
because responsive designs are pretty

00:12:46,390 --> 00:12:51,700
much a solved problem there but for qml

00:12:48,730 --> 00:12:53,800
they weren't so we came up with this set

00:12:51,700 --> 00:12:55,750
of api's that let you define different

00:12:53,800 --> 00:12:57,730
layouts for your app depending on

00:12:55,750 --> 00:12:59,470
different conditions it's not just

00:12:57,730 --> 00:13:01,720
screen size but that's you know a

00:12:59,470 --> 00:13:03,460
primary one so as you get more screen

00:13:01,720 --> 00:13:05,190
size you can change from being a page

00:13:03,460 --> 00:13:07,510
stack view to being multiple columns

00:13:05,190 --> 00:13:10,300
we've got some other apps that actually

00:13:07,510 --> 00:13:12,400
nest layout condition conditional

00:13:10,300 --> 00:13:14,920
layouts inside each other so one

00:13:12,400 --> 00:13:16,780
specific component will have its own set

00:13:14,920 --> 00:13:18,490
of conditional layouts that are

00:13:16,780 --> 00:13:21,400
independent of the rest of the app and

00:13:18,490 --> 00:13:23,980
so I wish I should have put a screenshot

00:13:21,400 --> 00:13:26,410
of this a guy named Nicholas made a

00:13:23,980 --> 00:13:27,640
program that really showed this off

00:13:26,410 --> 00:13:29,920
beautifully because he dragged the

00:13:27,640 --> 00:13:31,660
window open and everything was animated

00:13:29,920 --> 00:13:34,020
and it would slide into place and new

00:13:31,660 --> 00:13:36,250
layouts I was really fantastic to watch

00:13:34,020 --> 00:13:38,290
from conditional layouts I would let you

00:13:36,250 --> 00:13:40,750
do that these are really an important

00:13:38,290 --> 00:13:42,790
thing for convergence because we don't

00:13:40,750 --> 00:13:44,560
want to stick the same layout on

00:13:42,790 --> 00:13:46,750
different form factors because what

00:13:44,560 --> 00:13:49,270
works well on a phone doesn't work well

00:13:46,750 --> 00:13:51,370
on a desktop so you want it to be able

00:13:49,270 --> 00:13:54,130
to change and adapt to the actual form

00:13:51,370 --> 00:13:56,080
factor that you're running it on and our

00:13:54,130 --> 00:13:58,570
goal of having phones that actually

00:13:56,080 --> 00:14:00,760
become desktops it's not just that it

00:13:58,570 --> 00:14:02,770
has to do this at compile time or at

00:14:00,760 --> 00:14:04,240
startup plan but it actually has to be

00:14:02,770 --> 00:14:06,590
able to switch live when you dock or

00:14:04,240 --> 00:14:09,120
undock your phone

00:14:06,590 --> 00:14:12,360
we also introduced something called grit

00:14:09,120 --> 00:14:14,760
units which are our display independent

00:14:12,360 --> 00:14:17,370
sized units if you're an Android

00:14:14,760 --> 00:14:19,110
developer you've probably experienced I

00:14:17,370 --> 00:14:21,720
think they call it display independent

00:14:19,110 --> 00:14:24,600
pixels it's a little bit different from

00:14:21,720 --> 00:14:28,050
that but same general idea so whether

00:14:24,600 --> 00:14:31,020
you're on a high a high definition

00:14:28,050 --> 00:14:32,610
screen or not if you use grid units to

00:14:31,020 --> 00:14:34,080
set the size of your components they're

00:14:32,610 --> 00:14:37,740
always going to be the same size whether

00:14:34,080 --> 00:14:40,110
it's you know 1024 x 768 or whether it's

00:14:37,740 --> 00:14:42,920
a 4k screen your your components are

00:14:40,110 --> 00:14:45,630
always going to be the same size an

00:14:42,920 --> 00:14:47,460
important difference between grid units

00:14:45,630 --> 00:14:49,680
and what Android does is our grid units

00:14:47,460 --> 00:14:55,620
are actually independent of form factor

00:14:49,680 --> 00:14:58,290
also so if you say up button is good at

00:14:55,620 --> 00:15:01,980
10 grid 10 grid units wide that's the

00:14:58,290 --> 00:15:04,380
ideal size for a button we want that to

00:15:01,980 --> 00:15:08,480
be an ideal size on the phone on the

00:15:04,380 --> 00:15:11,640
desktop or on the TV so on the desktop

00:15:08,480 --> 00:15:13,410
even if the the screen pixel ratio is

00:15:11,640 --> 00:15:14,880
the same a button is going to be a

00:15:13,410 --> 00:15:16,770
different size than it is on the phone

00:15:14,880 --> 00:15:19,680
just because it's a different user

00:15:16,770 --> 00:15:20,850
interface you're not right here few

00:15:19,680 --> 00:15:23,370
inches in front of you you might be a

00:15:20,850 --> 00:15:25,170
couple feet away and a TV when you're 20

00:15:23,370 --> 00:15:27,630
feet away from the TV you're going to

00:15:25,170 --> 00:15:28,980
want to be a different size also but as

00:15:27,630 --> 00:15:31,860
a developer all you have to do is say

00:15:28,980 --> 00:15:34,410
you know what in terms of grid unit so a

00:15:31,860 --> 00:15:35,790
good button sighs defining grid units is

00:15:34,410 --> 00:15:39,300
going to be a good button size on the

00:15:35,790 --> 00:15:40,260
phone on tablet on desktop or on TV so

00:15:39,300 --> 00:15:44,820
that you don't have to worry about

00:15:40,260 --> 00:15:46,290
making those calculation changes in your

00:15:44,820 --> 00:15:50,130
app we do that all in the toolkit for

00:15:46,290 --> 00:15:51,870
you now I mentioned some of the

00:15:50,130 --> 00:15:54,150
differences that a bun two apps have to

00:15:51,870 --> 00:15:56,430
face some of them are really good

00:15:54,150 --> 00:15:58,110
opportunities some of them make things a

00:15:56,430 --> 00:16:00,270
little bit harder for you but better for

00:15:58,110 --> 00:16:02,460
the user and you need to think about

00:16:00,270 --> 00:16:05,670
them one of the biggest of those is app

00:16:02,460 --> 00:16:07,800
confinement all of the apps that run on

00:16:05,670 --> 00:16:10,740
a bun two phones and tablets and soon on

00:16:07,800 --> 00:16:12,420
snappy based desktops are going to be

00:16:10,740 --> 00:16:14,070
confined so that they don't have access

00:16:12,420 --> 00:16:15,379
to everything that the user has access

00:16:14,070 --> 00:16:18,259
to

00:16:15,379 --> 00:16:21,289
Rick mentioned earlier we had the

00:16:18,259 --> 00:16:23,539
desktop store that we tried to get a

00:16:21,289 --> 00:16:25,729
bunch of third-party developers to put

00:16:23,539 --> 00:16:27,169
their apps into and sell them and we did

00:16:25,729 --> 00:16:29,539
have to strike this balance between

00:16:27,169 --> 00:16:31,970
making it easy for the developer to get

00:16:29,539 --> 00:16:34,279
their app in and making sure that their

00:16:31,970 --> 00:16:37,099
app was actually safe for users to

00:16:34,279 --> 00:16:39,229
install and run and in order to protect

00:16:37,099 --> 00:16:41,689
our users with the desktop store all of

00:16:39,229 --> 00:16:43,999
these apps had to be reviewed by an

00:16:41,689 --> 00:16:45,589
actual human which meant they had to go

00:16:43,999 --> 00:16:47,470
look at the code and make sure that the

00:16:45,589 --> 00:16:49,729
code wasn't doing anything bad and

00:16:47,470 --> 00:16:52,599
recompile it and rebuild the package

00:16:49,729 --> 00:16:55,819
themselves and that was just a huge huge

00:16:52,599 --> 00:16:58,549
time sink for us we even we brought in

00:16:55,819 --> 00:17:00,559
groups of volunteers and train them up

00:16:58,549 --> 00:17:02,539
on how to do this and let them loose on

00:17:00,559 --> 00:17:06,500
the review queue and even they weren't

00:17:02,539 --> 00:17:07,759
able to keep up with this in the 2012

00:17:06,500 --> 00:17:12,049
time frame we did an app developer

00:17:07,759 --> 00:17:14,929
competition using quickly and gtk and we

00:17:12,049 --> 00:17:16,610
got about 300 apps and I think only

00:17:14,929 --> 00:17:19,159
about a hundred of those actually made

00:17:16,610 --> 00:17:20,750
it into the store just because either

00:17:19,159 --> 00:17:22,129
they were stuck waiting on reviews or

00:17:20,750 --> 00:17:24,679
they got reviews and there was something

00:17:22,129 --> 00:17:27,379
wrong with their packaging because deb

00:17:24,679 --> 00:17:29,389
packaging in a way that is acceptable by

00:17:27,379 --> 00:17:31,850
archive admins is a really hard thing to

00:17:29,389 --> 00:17:33,350
do so only about a third of those apps

00:17:31,850 --> 00:17:35,360
and that contest actually ever made it

00:17:33,350 --> 00:17:38,120
into the store and not long after that

00:17:35,360 --> 00:17:39,590
that the reviewers got bogged down and

00:17:38,120 --> 00:17:41,330
they got tired of doing the same thing

00:17:39,590 --> 00:17:44,240
over and over again and so it all just

00:17:41,330 --> 00:17:46,399
kind of fell apart with reviews so after

00:17:44,240 --> 00:17:48,019
that we came back and we said ok we need

00:17:46,399 --> 00:17:50,509
a way for app developers to get apps in

00:17:48,019 --> 00:17:51,769
without having to go through review and

00:17:50,509 --> 00:17:53,870
we came up with a set of restrictions

00:17:51,769 --> 00:17:55,850
that had to be placed in order to let

00:17:53,870 --> 00:17:58,250
that happen and that's what eventually

00:17:55,850 --> 00:18:02,090
became our app confinement story on the

00:17:58,250 --> 00:18:04,309
phone and Ken's going to talk a little

00:18:02,090 --> 00:18:05,330
bit more about this in his talk later on

00:18:04,309 --> 00:18:07,279
but i'm going to give kind of a

00:18:05,330 --> 00:18:08,720
high-level view just because apps are

00:18:07,279 --> 00:18:11,090
confined doesn't mean that they can't

00:18:08,720 --> 00:18:13,070
share data between them but in order to

00:18:11,090 --> 00:18:15,679
share data we need to provide us

00:18:13,070 --> 00:18:17,419
third-party service that we trusted that

00:18:15,679 --> 00:18:19,549
would let them do that in a safe way so

00:18:17,419 --> 00:18:21,200
that they can't you know still user data

00:18:19,549 --> 00:18:23,509
without the user giving them permission

00:18:21,200 --> 00:18:24,980
to do that the primary way we do that is

00:18:23,509 --> 00:18:28,129
through something called the content hub

00:18:24,980 --> 00:18:28,740
the content hub lets one app say I want

00:18:28,129 --> 00:18:31,040
a

00:18:28,740 --> 00:18:33,210
of this type and then it will pop up

00:18:31,040 --> 00:18:36,059
this chooser here where they can say

00:18:33,210 --> 00:18:38,550
okay ask the user what app you want to

00:18:36,059 --> 00:18:40,230
get this content type from and then the

00:18:38,550 --> 00:18:42,240
user has to say okay I'm going to give

00:18:40,230 --> 00:18:44,730
you access to this picture and then the

00:18:42,240 --> 00:18:46,920
content hub takes care of the plumbing

00:18:44,730 --> 00:18:48,929
to give the requesting app access to

00:18:46,920 --> 00:18:50,580
that picture the app itself is never

00:18:48,929 --> 00:18:53,309
going to have direct access to that and

00:18:50,580 --> 00:18:54,750
it could go the other way too so if you

00:18:53,309 --> 00:18:56,309
have a picture that you want to share

00:18:54,750 --> 00:18:58,650
with something then you should go to the

00:18:56,309 --> 00:19:01,230
content tub and say okay I want to share

00:18:58,650 --> 00:19:02,580
this picture with somebody if you know

00:19:01,230 --> 00:19:05,309
which somebody you can tell it exactly

00:19:02,580 --> 00:19:08,580
what or you can pop up this chooser here

00:19:05,309 --> 00:19:10,200
and say okay let the user pic pic where

00:19:08,580 --> 00:19:12,059
they want to share it too so you can

00:19:10,200 --> 00:19:14,429
share pictures you can share music you

00:19:12,059 --> 00:19:17,929
can share videos files you can share

00:19:14,429 --> 00:19:22,740
even links now which is really nice and

00:19:17,929 --> 00:19:24,300
text does that work it yes suit so text

00:19:22,740 --> 00:19:27,900
snippets now to you can share through

00:19:24,300 --> 00:19:32,190
the content hub another thing that you

00:19:27,900 --> 00:19:34,590
can do to escape the app confinement is

00:19:32,190 --> 00:19:36,150
with the URL dispatcher and what this

00:19:34,590 --> 00:19:38,730
does is it lets your app claim a

00:19:36,150 --> 00:19:40,850
specific domain or URL pattern and say

00:19:38,730 --> 00:19:44,580
okay this is mine I want to respond to

00:19:40,850 --> 00:19:47,790
requests for this URL so i wrote a

00:19:44,580 --> 00:19:50,280
reddit app i told you our URL dispatcher

00:19:47,790 --> 00:19:52,110
i want to respond to any urls to read it

00:19:50,280 --> 00:19:54,480
so now if somebody clicks on a reddit

00:19:52,110 --> 00:19:56,130
link in the browser it can pop up in my

00:19:54,480 --> 00:19:58,650
red adapt and my reddit app can then

00:19:56,130 --> 00:20:01,200
show the actual content of that page in

00:19:58,650 --> 00:20:03,720
its own way and if my app is already

00:20:01,200 --> 00:20:05,220
running it will get a signal from the

00:20:03,720 --> 00:20:07,740
system that says hey somebody wants to

00:20:05,220 --> 00:20:09,090
open this URL you need to handle it so

00:20:07,740 --> 00:20:11,309
whether the apps running or not I'll be

00:20:09,090 --> 00:20:13,620
able to get that if the app isn't

00:20:11,309 --> 00:20:15,390
running and somebody does this then

00:20:13,620 --> 00:20:16,920
it'll open the app let me do my stuff

00:20:15,390 --> 00:20:18,420
and when I'm done it'll close the app

00:20:16,920 --> 00:20:21,320
for me automatically so it cleans up

00:20:18,420 --> 00:20:21,320
after itself also

00:20:21,720 --> 00:20:27,250
we provide something called online

00:20:23,980 --> 00:20:29,560
accounts this is a central credential

00:20:27,250 --> 00:20:31,150
management system that we provide so

00:20:29,560 --> 00:20:34,360
that your app doesn't have to store user

00:20:31,150 --> 00:20:36,370
names and passwords it's all done on the

00:20:34,360 --> 00:20:40,630
system it's all handled for you you just

00:20:36,370 --> 00:20:42,160
have to request the token or whatever it

00:20:40,630 --> 00:20:44,470
is that there's different providers is

00:20:42,160 --> 00:20:46,960
uh-oh auth providers and there's a few

00:20:44,470 --> 00:20:48,460
others so whatever they give you in

00:20:46,960 --> 00:20:51,100
terms of auth token you can get out of

00:20:48,460 --> 00:20:54,940
that and again the user has to approve

00:20:51,100 --> 00:20:56,230
this for each app and you can toggle it

00:20:54,940 --> 00:20:58,180
on and off which apps you want to have

00:20:56,230 --> 00:21:00,370
access to it the nice thing about that

00:20:58,180 --> 00:21:03,060
is on the phone I can enter in my google

00:21:00,370 --> 00:21:05,950
account one time into the system and

00:21:03,060 --> 00:21:08,800
google+ app can use it a gmail app can

00:21:05,950 --> 00:21:10,720
use it the gmail scope can use it and

00:21:08,800 --> 00:21:12,280
i'm not having to enter in the same

00:21:10,720 --> 00:21:14,140
username and password multiple different

00:21:12,280 --> 00:21:15,370
places and best of all those don't have

00:21:14,140 --> 00:21:19,620
to actually store the username and

00:21:15,370 --> 00:21:22,630
password anymore either in addition to

00:21:19,620 --> 00:21:25,330
app confinement on the phone we've

00:21:22,630 --> 00:21:27,070
introduced in life cycle management and

00:21:25,330 --> 00:21:28,930
this was something that we introduced to

00:21:27,070 --> 00:21:31,540
save the battery on the phone and it

00:21:28,930 --> 00:21:33,340
prevents apps from continuing to execute

00:21:31,540 --> 00:21:35,260
in the background when you flip away

00:21:33,340 --> 00:21:36,940
from a nap on the phone that process is

00:21:35,260 --> 00:21:39,430
going to get suspended it's not going to

00:21:36,940 --> 00:21:42,430
run anymore so it's not eating up your

00:21:39,430 --> 00:21:43,840
battery or your CPU and if you start

00:21:42,430 --> 00:21:45,400
opening a bunch of apps and you're using

00:21:43,840 --> 00:21:47,500
up all your RAM and the system needs to

00:21:45,400 --> 00:21:50,860
free up some ram it'll go back through

00:21:47,500 --> 00:21:53,380
and it'll kill those those frozen apps

00:21:50,860 --> 00:21:55,480
to free up some ram we have something

00:21:53,380 --> 00:21:58,120
called state saver which will let you

00:21:55,480 --> 00:22:00,580
save your app state at any point going

00:21:58,120 --> 00:22:02,380
along the way and if the system kills

00:22:00,580 --> 00:22:04,480
your app the free up memory when it

00:22:02,380 --> 00:22:06,430
restores it when you user switches back

00:22:04,480 --> 00:22:08,170
to it it'll use that states aver

00:22:06,430 --> 00:22:11,950
information to restore your app to where

00:22:08,170 --> 00:22:14,050
it was before um but that that

00:22:11,950 --> 00:22:17,020
introduces some problems if you've got

00:22:14,050 --> 00:22:18,340
some long running processes that you

00:22:17,020 --> 00:22:20,050
want to keep running you weren't able to

00:22:18,340 --> 00:22:21,850
do that anymore so we've introduced some

00:22:20,050 --> 00:22:23,770
additional services to help you with

00:22:21,850 --> 00:22:25,870
that one of them is the download manager

00:22:23,770 --> 00:22:27,580
which will let you set long-running

00:22:25,870 --> 00:22:29,770
downloads to happen in the background

00:22:27,580 --> 00:22:31,270
and then your app will get notified when

00:22:29,770 --> 00:22:33,130
those are done and your app doesn't even

00:22:31,270 --> 00:22:34,230
actually has to have to keep running

00:22:33,130 --> 00:22:35,760
during that so that you

00:22:34,230 --> 00:22:37,530
you can say okay start downloading this

00:22:35,760 --> 00:22:39,120
and the user can close your app and

00:22:37,530 --> 00:22:40,919
it'll keep downloading in the background

00:22:39,120 --> 00:22:42,840
and when it's done they'll get a

00:22:40,919 --> 00:22:44,250
notification pop-up that says the

00:22:42,840 --> 00:22:45,540
download is complete and if they had

00:22:44,250 --> 00:22:47,910
okay I want to do something with that

00:22:45,540 --> 00:22:50,010
Italy open it back up in the app that

00:22:47,910 --> 00:22:54,090
started it and it'll pick up from where

00:22:50,010 --> 00:22:56,760
it left off we've got a podcast app that

00:22:54,090 --> 00:22:58,830
uses that really well it'll download all

00:22:56,760 --> 00:23:00,270
of your podcasts in the background and

00:22:58,830 --> 00:23:03,210
you don't need to keep the app running

00:23:00,270 --> 00:23:05,520
several others use that too we also

00:23:03,210 --> 00:23:08,130
introduced the media hub this will let

00:23:05,520 --> 00:23:11,549
sound and video continue to run even

00:23:08,130 --> 00:23:13,260
when the app doesn't have focus we

00:23:11,549 --> 00:23:15,150
didn't actually have to introduce any

00:23:13,260 --> 00:23:17,280
new api's for this either because cute

00:23:15,150 --> 00:23:19,679
provides a set of AP is for playing

00:23:17,280 --> 00:23:21,090
audio and we just tapped into those so

00:23:19,679 --> 00:23:24,660
anything that you can play through the

00:23:21,090 --> 00:23:26,490
cute Audio API s we'll go get passed off

00:23:24,660 --> 00:23:27,900
the to the media hub and it'll keep

00:23:26,490 --> 00:23:30,990
playing that even when your app process

00:23:27,900 --> 00:23:32,850
is suspended so i can actually i can get

00:23:30,990 --> 00:23:34,980
my podcast client i can set a few things

00:23:32,850 --> 00:23:36,900
to download i can set something to start

00:23:34,980 --> 00:23:39,750
playing and then if i flip to something

00:23:36,900 --> 00:23:41,370
else the podcast app stops running but

00:23:39,750 --> 00:23:46,500
the music keeps playing in the downloads

00:23:41,370 --> 00:23:49,200
keep going so that's apps again it's the

00:23:46,500 --> 00:23:51,330
same for both qml and html5 all of those

00:23:49,200 --> 00:23:55,230
api's and stuff i talked about is

00:23:51,330 --> 00:23:57,660
available for html5 just as much as 40

00:23:55,230 --> 00:23:59,309
ml with the exception of conditional

00:23:57,660 --> 00:24:01,980
layouts and grid units because there was

00:23:59,309 --> 00:24:04,710
already existing solutions html5 for

00:24:01,980 --> 00:24:08,640
those so now moving on to building a

00:24:04,710 --> 00:24:10,350
scope you have a couple choices to make

00:24:08,640 --> 00:24:12,419
again if you're developing a scope we've

00:24:10,350 --> 00:24:15,690
got two primary kinds we have sources

00:24:12,419 --> 00:24:17,850
and we have aggregators if anyone's used

00:24:15,690 --> 00:24:19,740
the phone before if you've seen the

00:24:17,850 --> 00:24:21,360
today's scope that's an example of an

00:24:19,740 --> 00:24:24,059
aggregating scope it doesn't provide

00:24:21,360 --> 00:24:26,460
data itself it uses other source scopes

00:24:24,059 --> 00:24:29,840
to provide that data so you need to

00:24:26,460 --> 00:24:33,090
decide which one you want to be on if

00:24:29,840 --> 00:24:35,460
you have a source that you want to add

00:24:33,090 --> 00:24:37,980
to an aggregator you can do that with

00:24:35,460 --> 00:24:39,450
something with the keywords keywords are

00:24:37,980 --> 00:24:40,919
something that we just introduced within

00:24:39,450 --> 00:24:44,159
like the last couple months or so but

00:24:40,919 --> 00:24:46,860
it's a really neat addition because now

00:24:44,159 --> 00:24:47,860
I can say I've got a source scope and

00:24:46,860 --> 00:24:50,049
I'm providing

00:24:47,860 --> 00:24:51,880
music and all I have to do is add this

00:24:50,049 --> 00:24:54,250
music keyword in there and it'll show up

00:24:51,880 --> 00:24:56,440
in the music aggregating scope if I am

00:24:54,250 --> 00:24:58,570
providing some local restaurant data I

00:24:56,440 --> 00:25:01,059
can tag it with the nearby keyword and

00:24:58,570 --> 00:25:02,290
it will show up in the nearby scope so

00:25:01,059 --> 00:25:04,059
the aggregator doesn't need to know

00:25:02,290 --> 00:25:06,070
about what source scopes are around

00:25:04,059 --> 00:25:08,650
anymore it just needs to know about what

00:25:06,070 --> 00:25:10,260
keyword it needs to listen for and the

00:25:08,650 --> 00:25:12,580
system is going to tie those together

00:25:10,260 --> 00:25:14,049
you can go the other way if you wanted

00:25:12,580 --> 00:25:16,809
if you wanted to build an aggregating

00:25:14,049 --> 00:25:18,940
scope that targeted only specific source

00:25:16,809 --> 00:25:22,020
scopes you can do that also and you can

00:25:18,940 --> 00:25:24,429
define which ones that you want to use

00:25:22,020 --> 00:25:26,380
the second choice you have to make with

00:25:24,429 --> 00:25:28,929
scopes is whether it's going to use

00:25:26,380 --> 00:25:30,820
local data or remote data one of the

00:25:28,929 --> 00:25:32,559
security features that we've built into

00:25:30,820 --> 00:25:35,140
this is the fact that your scope cannot

00:25:32,559 --> 00:25:37,240
do both at the same time so if you have

00:25:35,140 --> 00:25:39,370
access to the users files you do not get

00:25:37,240 --> 00:25:42,220
access to the network to upload them to

00:25:39,370 --> 00:25:43,390
God knows where so you have to choose is

00:25:42,220 --> 00:25:45,130
it going to be local or is it going to

00:25:43,390 --> 00:25:46,660
be remote if you're going to access the

00:25:45,130 --> 00:25:50,830
network then you can't access the system

00:25:46,660 --> 00:25:52,330
and vice versa just like with apps

00:25:50,830 --> 00:25:55,720
you've got some primary components with

00:25:52,330 --> 00:25:57,790
scopes because scopes are search centric

00:25:55,720 --> 00:25:58,870
they're all going to have a query the

00:25:57,790 --> 00:26:00,520
user is going to be able to provide

00:25:58,870 --> 00:26:02,440
search terms to your scope so you're

00:26:00,520 --> 00:26:05,230
going to need to do something with those

00:26:02,440 --> 00:26:08,350
on and then your scope is going to

00:26:05,230 --> 00:26:10,059
return a bunch of different results and

00:26:08,350 --> 00:26:11,799
it's going to be able to tell what

00:26:10,059 --> 00:26:14,040
categories are available and what

00:26:11,799 --> 00:26:16,360
categories a specific result goes into

00:26:14,040 --> 00:26:17,890
you can't see it in the screenshot but

00:26:16,360 --> 00:26:19,990
some of them also have a filter section

00:26:17,890 --> 00:26:21,520
at the top and the scopes also

00:26:19,990 --> 00:26:24,250
responsible for saying what filters are

00:26:21,520 --> 00:26:26,650
available we can also optionally use

00:26:24,250 --> 00:26:29,440
previews where they can show larger

00:26:26,650 --> 00:26:33,040
versions of the content and add one or

00:26:29,440 --> 00:26:34,390
more actions of what to do with that

00:26:33,040 --> 00:26:35,740
because sometimes you've got one set of

00:26:34,390 --> 00:26:38,169
content and there's multiple things you

00:26:35,740 --> 00:26:39,370
want to do besides just open it so we

00:26:38,169 --> 00:26:43,450
provide the ability to add different

00:26:39,370 --> 00:26:46,600
actions on there now scopes you don't

00:26:43,450 --> 00:26:49,480
actually build the UI yourself on the

00:26:46,600 --> 00:26:51,850
the dash handles that for you but we do

00:26:49,480 --> 00:26:54,700
provide a declarative UI format where

00:26:51,850 --> 00:26:58,050
you can define some customizations so

00:26:54,700 --> 00:27:00,040
you can tell a specific logo to use

00:26:58,050 --> 00:27:00,690
specific colors to use for the

00:27:00,040 --> 00:27:03,240
background

00:27:00,690 --> 00:27:05,520
header or behind the content you get to

00:27:03,240 --> 00:27:07,110
define what card layouts that you use

00:27:05,520 --> 00:27:09,450
with the results if you look at a phone

00:27:07,110 --> 00:27:11,070
you'll see some are big squares some are

00:27:09,450 --> 00:27:12,870
small squares in the list some are small

00:27:11,070 --> 00:27:14,670
squares and a grid some are a nice

00:27:12,870 --> 00:27:16,950
carousel that you can scroll through all

00:27:14,670 --> 00:27:19,170
that's done through declarative UI so

00:27:16,950 --> 00:27:21,780
you don't need to worry about layout and

00:27:19,170 --> 00:27:24,480
placement or you know how'd it had a

00:27:21,780 --> 00:27:26,940
pack widgets together you just say okay

00:27:24,480 --> 00:27:30,240
this is the set of categories i have

00:27:26,940 --> 00:27:32,550
this is how I want them displayed here's

00:27:30,240 --> 00:27:34,920
the results and then the the dash takes

00:27:32,550 --> 00:27:36,510
care of building it for you so you as a

00:27:34,920 --> 00:27:37,950
developer you don't need to be a UI

00:27:36,510 --> 00:27:42,210
expert you don't need to think about

00:27:37,950 --> 00:27:43,920
user experience or a user interface or

00:27:42,210 --> 00:27:45,420
anything like that all you have to do is

00:27:43,920 --> 00:27:46,710
give it a little bit of customization to

00:27:45,420 --> 00:27:50,540
make it look like what you want it to be

00:27:46,710 --> 00:27:52,440
in the dash takes care that for you

00:27:50,540 --> 00:27:54,980
previews are another option that you

00:27:52,440 --> 00:27:58,980
have to give some additional information

00:27:54,980 --> 00:28:01,080
now you can also preview music and video

00:27:58,980 --> 00:28:03,600
in the scope itself so they're tied into

00:28:01,080 --> 00:28:05,730
content hub now if you've got like a

00:28:03,600 --> 00:28:07,410
music sample you want to show or you

00:28:05,730 --> 00:28:09,420
want to play youtube videos directly in

00:28:07,410 --> 00:28:11,940
the scope without opening up a browser a

00:28:09,420 --> 00:28:16,230
separate app you can do that now also

00:28:11,940 --> 00:28:18,120
three years ago location awareness is

00:28:16,230 --> 00:28:23,100
also available to all scopes if they

00:28:18,120 --> 00:28:24,480
want it that's a flag that the developer

00:28:23,100 --> 00:28:27,600
has to put on there and when they do

00:28:24,480 --> 00:28:30,960
that the dash is going to add an option

00:28:27,600 --> 00:28:32,490
to disable that for the user so the

00:28:30,960 --> 00:28:35,190
scope developer doesn't have a choice if

00:28:32,490 --> 00:28:36,390
they want location awareness the user is

00:28:35,190 --> 00:28:37,530
going to be able to disable it and

00:28:36,390 --> 00:28:39,480
they're going to need to know what to do

00:28:37,530 --> 00:28:40,950
with that but that's a really useful

00:28:39,480 --> 00:28:42,600
thing to have for a lot of them

00:28:40,950 --> 00:28:44,640
especially things like the nearby scope

00:28:42,600 --> 00:28:46,350
where you want to present only local

00:28:44,640 --> 00:28:48,030
restaurants and you don't want to have

00:28:46,350 --> 00:28:50,910
that prompt the user to enter their

00:28:48,030 --> 00:28:53,640
actual location you know the phones got

00:28:50,910 --> 00:28:57,510
GPS for a reason it wants it should be

00:28:53,640 --> 00:28:59,430
able to do that for the user just like

00:28:57,510 --> 00:29:02,640
apps you can use the online accounts

00:28:59,430 --> 00:29:04,230
same interfaces and everything so again

00:29:02,640 --> 00:29:06,150
if you have your google account in there

00:29:04,230 --> 00:29:08,490
and your scope needs to access something

00:29:06,150 --> 00:29:10,320
from the users Google account it can say

00:29:08,490 --> 00:29:12,330
I'd like to use that account data and

00:29:10,320 --> 00:29:13,740
the user once they prove it then it can

00:29:12,330 --> 00:29:16,200
go out and it can

00:29:13,740 --> 00:29:17,790
get their information I've got a gmail

00:29:16,200 --> 00:29:21,900
scope which is really nice that works

00:29:17,790 --> 00:29:23,700
that way alright so now you built your

00:29:21,900 --> 00:29:27,090
app or you fill your scope everything's

00:29:23,700 --> 00:29:28,080
looking good but you want to test it you

00:29:27,090 --> 00:29:31,950
want to make sure that it's going to

00:29:28,080 --> 00:29:33,630
keep looking good unit test everybody

00:29:31,950 --> 00:29:35,490
should probably be familiar with if

00:29:33,630 --> 00:29:37,050
you've written anything of any amount of

00:29:35,490 --> 00:29:39,120
complexity you should be writing unit

00:29:37,050 --> 00:29:41,550
tests for it to make sure that works you

00:29:39,120 --> 00:29:44,790
can do that with scopes and with apps

00:29:41,550 --> 00:29:48,570
using on with the the languages provide

00:29:44,790 --> 00:29:50,160
so there's C++ there's qml amor html5

00:29:48,570 --> 00:29:52,500
you can use whatever existing unit test

00:29:50,160 --> 00:29:53,490
frameworks there are for that but we

00:29:52,500 --> 00:29:55,500
also introduced something called

00:29:53,490 --> 00:29:57,390
autopilot this was something that was

00:29:55,500 --> 00:30:00,059
developed several years back initially

00:29:57,390 --> 00:30:03,150
to test unity and it's been expanded now

00:30:00,059 --> 00:30:05,490
to test scopes and apps as well an

00:30:03,150 --> 00:30:07,559
autopilot does integration testing it

00:30:05,490 --> 00:30:09,900
doesn't test just individual pieces of

00:30:07,559 --> 00:30:12,360
code in isolation it tests everything

00:30:09,900 --> 00:30:15,270
working together so you write a script

00:30:12,360 --> 00:30:17,670
that says something like go press this

00:30:15,270 --> 00:30:19,620
button make sure this pop-up comes up go

00:30:17,670 --> 00:30:21,480
press the setup button in the pop-up and

00:30:19,620 --> 00:30:23,130
make sure this other thing happens so

00:30:21,480 --> 00:30:24,720
you build these big complicated scripts

00:30:23,130 --> 00:30:27,360
that has multiple pieces of code

00:30:24,720 --> 00:30:30,300
interacting together to make sure that

00:30:27,360 --> 00:30:32,429
all works auto pilot is written in

00:30:30,300 --> 00:30:35,040
Python and again it'll work for apps and

00:30:32,429 --> 00:30:38,280
scopes alike it's a really important

00:30:35,040 --> 00:30:42,000
thing auto pilot has been key to getting

00:30:38,280 --> 00:30:44,559
our quality up on the desktop like Rick

00:30:42,000 --> 00:30:46,339
was talking about earlier

00:30:44,559 --> 00:30:47,749
alright so now you've got it written

00:30:46,339 --> 00:30:49,849
you've got a test everything's looking

00:30:47,749 --> 00:30:52,429
good you want to package it this has

00:30:49,849 --> 00:30:54,889
always been where things got hard for a

00:30:52,429 --> 00:30:56,899
bunt too or any linux distro really when

00:30:54,889 --> 00:31:00,709
it was time to package it and get it

00:30:56,899 --> 00:31:02,269
published now with the click packages

00:31:00,709 --> 00:31:04,399
and soon with snappy packages that's

00:31:02,269 --> 00:31:05,419
gotten a lot easier so the first thing

00:31:04,399 --> 00:31:07,909
you're going to have is you can have a

00:31:05,419 --> 00:31:09,649
cliq manifest that's manifest JSON right

00:31:07,909 --> 00:31:10,999
there and if you open that in cute

00:31:09,649 --> 00:31:15,349
creator it's going to give you this nice

00:31:10,999 --> 00:31:17,119
interface to edit that in you need to

00:31:15,349 --> 00:31:20,509
give it a name they're all going to be

00:31:17,119 --> 00:31:22,009
named spaced with something on mines got

00:31:20,509 --> 00:31:24,109
this long combat a bunch of that

00:31:22,009 --> 00:31:26,509
developer thing in there that you're not

00:31:24,109 --> 00:31:28,579
going to use anymore we switched to a

00:31:26,509 --> 00:31:30,139
shorter version of that but apps that

00:31:28,579 --> 00:31:32,239
we're already using the long version are

00:31:30,139 --> 00:31:34,070
stuck using the long version so that's

00:31:32,239 --> 00:31:35,570
mine now if you write something new it's

00:31:34,070 --> 00:31:37,879
going to be your app name dot your

00:31:35,570 --> 00:31:40,249
developer name so you give it the name

00:31:37,879 --> 00:31:42,499
you give it your name and email

00:31:40,249 --> 00:31:44,989
addresses the maintainer give it a

00:31:42,499 --> 00:31:46,549
version number the framework here is

00:31:44,989 --> 00:31:48,799
going to be the important one so

00:31:46,549 --> 00:31:51,289
frameworks define what is available to

00:31:48,799 --> 00:31:56,899
your app what the system is guaranteed

00:31:51,289 --> 00:32:00,229
to be there um I've got on here I've got

00:31:56,899 --> 00:32:02,690
14 10 it's not really actually tied to

00:32:00,229 --> 00:32:04,369
the release of ubuntu it's just kind of

00:32:02,690 --> 00:32:07,279
happened to coincide that way recently

00:32:04,369 --> 00:32:08,479
um and when you go to the api docs

00:32:07,279 --> 00:32:10,549
online they're all broken up by

00:32:08,479 --> 00:32:13,700
framework also so you know if you're

00:32:10,549 --> 00:32:15,979
looking at the 14 10 api docs that

00:32:13,700 --> 00:32:18,529
they're going to be available to the 14

00:32:15,979 --> 00:32:21,169
10 framework and this is going to let

00:32:18,529 --> 00:32:23,749
the app and the device know that they

00:32:21,169 --> 00:32:25,969
both have the same expectations about

00:32:23,749 --> 00:32:27,889
what's available and the nice thing

00:32:25,969 --> 00:32:30,289
about this is it's going to provide you

00:32:27,889 --> 00:32:33,139
some backwards compatibility too so if

00:32:30,289 --> 00:32:34,489
you write an app you can target an older

00:32:33,139 --> 00:32:36,320
version of the framework and it's still

00:32:34,489 --> 00:32:39,649
going to run on newer versions of ubuntu

00:32:36,320 --> 00:32:43,279
so if you've got a device running 1504

00:32:39,649 --> 00:32:44,779
or even 15 10 it still has that 1410

00:32:43,279 --> 00:32:47,059
framework on there because we have

00:32:44,779 --> 00:32:49,609
maintained backwards compatibility for

00:32:47,059 --> 00:32:53,119
that so any app that said that it worked

00:32:49,609 --> 00:32:56,089
with 1410 is guaranteed to work on 1504

00:32:53,119 --> 00:32:57,910
and 15 10 which is it sounds like a

00:32:56,089 --> 00:32:59,710
really obvious easy thing

00:32:57,910 --> 00:33:03,340
but traditionally that hasn't worked

00:32:59,710 --> 00:33:05,380
that way on linux desktops people you

00:33:03,340 --> 00:33:07,660
know we updated versions of the distro

00:33:05,380 --> 00:33:09,910
we get updated versions of dependencies

00:33:07,660 --> 00:33:12,970
things wouldn't work anymore you have to

00:33:09,910 --> 00:33:14,590
rebuild and repackage your app for each

00:33:12,970 --> 00:33:16,240
new release that comes out which if

00:33:14,590 --> 00:33:18,580
we're doing it every six months is quite

00:33:16,240 --> 00:33:21,310
often so this way you don't have to do

00:33:18,580 --> 00:33:22,870
that anymore and takes care that if for

00:33:21,310 --> 00:33:25,660
some reason we ever had to break

00:33:22,870 --> 00:33:27,250
compatibility with this framework then

00:33:25,660 --> 00:33:29,200
devices would just not ship with that

00:33:27,250 --> 00:33:31,180
framework anymore and apps that need it

00:33:29,200 --> 00:33:33,070
would not be displayed in the store to

00:33:31,180 --> 00:33:35,140
be able to download so that takes care

00:33:33,070 --> 00:33:38,560
of one of one of the biggest headaches

00:33:35,140 --> 00:33:42,010
with packaging and distributing apps on

00:33:38,560 --> 00:33:44,050
the necks the next thing is going to be

00:33:42,010 --> 00:33:45,970
the app armor profile app armor is what

00:33:44,050 --> 00:33:47,830
we use to provide app confinement and

00:33:45,970 --> 00:33:51,040
this is going to define the things that

00:33:47,830 --> 00:33:53,560
my app is allowed to do so it needs to

00:33:51,040 --> 00:33:57,850
access networking it uses web view

00:33:53,560 --> 00:34:00,520
because I embed websites inside it it

00:33:57,850 --> 00:34:01,870
wants to be able to use the content hub

00:34:00,520 --> 00:34:03,990
so I need to tell it that it's going to

00:34:01,870 --> 00:34:06,700
use the content exchange api's for that

00:34:03,990 --> 00:34:08,020
and again this is all really easy just

00:34:06,700 --> 00:34:11,710
click the plus button there and add

00:34:08,020 --> 00:34:13,419
whatever you need there to be if you are

00:34:11,710 --> 00:34:16,210
using content hub you have to provide a

00:34:13,419 --> 00:34:18,400
content type manifest file this is all

00:34:16,210 --> 00:34:19,510
documented on developer ubuntu com but

00:34:18,400 --> 00:34:21,850
you just have to make sure that files

00:34:19,510 --> 00:34:23,620
there and it says I am a source for this

00:34:21,850 --> 00:34:25,929
kind of content or I am a destination

00:34:23,620 --> 00:34:28,480
for this kind of content and that will

00:34:25,929 --> 00:34:31,000
help that picker when it prompts the

00:34:28,480 --> 00:34:33,640
user what app to use that's how you get

00:34:31,000 --> 00:34:35,560
your app added in there and if you're

00:34:33,640 --> 00:34:37,060
using the URL dispatcher you need to

00:34:35,560 --> 00:34:39,880
give it a manifest file that tells it

00:34:37,060 --> 00:34:44,690
the domain name and the URL pattern that

00:34:39,880 --> 00:34:46,650
you want your app to be responsible for

00:34:44,690 --> 00:34:48,870
alright so once you have all of those

00:34:46,650 --> 00:34:50,430
files it's time to build it and instead

00:34:48,870 --> 00:34:54,090
of going to the command line and typing

00:34:50,430 --> 00:34:55,500
d build or s filled or p builder or dep

00:34:54,090 --> 00:34:57,300
helper or whatever there's like a dozen

00:34:55,500 --> 00:35:00,810
different commands to build bit packages

00:34:57,300 --> 00:35:03,270
on a bun too yeah instead of that you go

00:35:00,810 --> 00:35:05,550
to the publish tab and cute creator and

00:35:03,270 --> 00:35:08,370
you've got buttons here you click build

00:35:05,550 --> 00:35:12,120
and validate click package and if it is

00:35:08,370 --> 00:35:14,160
a compiled app if you got C++ in there

00:35:12,120 --> 00:35:17,700
it'll go to the change route and it will

00:35:14,160 --> 00:35:20,040
compile your code it will take

00:35:17,700 --> 00:35:21,540
everything compiled or not and it will

00:35:20,040 --> 00:35:23,100
put it together into a click package

00:35:21,540 --> 00:35:24,630
with all of your manifest information

00:35:23,100 --> 00:35:26,820
and then it'll run a series of

00:35:24,630 --> 00:35:28,110
validation checks on it and these are

00:35:26,820 --> 00:35:30,030
the same checks that are being run on

00:35:28,110 --> 00:35:32,160
the store so if something comes up

00:35:30,030 --> 00:35:34,770
saying hey this your desktop file isn't

00:35:32,160 --> 00:35:36,420
right or you didn't provide an icon or

00:35:34,770 --> 00:35:38,310
something like that it's going to tell

00:35:36,420 --> 00:35:41,070
you right now what the problem is and

00:35:38,310 --> 00:35:43,290
how to fix it so once all of those pass

00:35:41,070 --> 00:35:46,370
and you've got green checkmarks all the

00:35:43,290 --> 00:35:48,870
way down now you're ready to actually

00:35:46,370 --> 00:35:50,520
publish it in the store or install it on

00:35:48,870 --> 00:35:52,710
the device right here you can click the

00:35:50,520 --> 00:35:54,180
install on device button it'll copy that

00:35:52,710 --> 00:35:58,320
click package over to your phone or

00:35:54,180 --> 00:35:59,460
tablet and install it for you so now

00:35:58,320 --> 00:36:01,200
you've got everything done and you're

00:35:59,460 --> 00:36:03,450
ready to publish it so this is where the

00:36:01,200 --> 00:36:05,520
second worst part of getting apps out

00:36:03,450 --> 00:36:08,580
into a bunch who came in before you

00:36:05,520 --> 00:36:11,880
would stick you're actually you put a

00:36:08,580 --> 00:36:13,770
link to a PPA in the old desktop store

00:36:11,880 --> 00:36:16,230
and then somebody would have to come

00:36:13,770 --> 00:36:19,020
along and look get the source package

00:36:16,230 --> 00:36:20,430
from your PPE a look through every line

00:36:19,020 --> 00:36:23,610
of code to make sure you weren't doing

00:36:20,430 --> 00:36:25,320
anything malicious reupload that source

00:36:23,610 --> 00:36:27,560
package with their own signature to

00:36:25,320 --> 00:36:29,520
another PPA where it would build and

00:36:27,560 --> 00:36:32,040
only after all that and everything

00:36:29,520 --> 00:36:33,750
passed would it get into the Ubuntu

00:36:32,040 --> 00:36:36,990
store and that would take anywhere

00:36:33,750 --> 00:36:39,780
between a few days to a few months or

00:36:36,990 --> 00:36:41,370
longer sometimes you know if something

00:36:39,780 --> 00:36:42,810
was wrong with a package and a developer

00:36:41,370 --> 00:36:45,270
didn't get back to it it would just sit

00:36:42,810 --> 00:36:46,740
there waiting for an update for four

00:36:45,270 --> 00:36:49,080
months or even years without ever

00:36:46,740 --> 00:36:51,060
getting in so we've changed all that now

00:36:49,080 --> 00:36:54,060
now you take your click package that the

00:36:51,060 --> 00:36:55,950
SDK built and you upload it and you give

00:36:54,060 --> 00:36:57,270
it a little bit of information not much

00:36:55,950 --> 00:36:57,780
you'll notice you don't even have to

00:36:57,270 --> 00:37:01,470
give it the

00:36:57,780 --> 00:37:03,240
name or your name or anything else you

00:37:01,470 --> 00:37:04,800
put it in there you hit upload and it's

00:37:03,240 --> 00:37:07,020
going to extract the manifest

00:37:04,800 --> 00:37:08,970
information out of your cliq package to

00:37:07,020 --> 00:37:12,420
get the name and the description and the

00:37:08,970 --> 00:37:15,840
icon and then it's going to the edge the

00:37:12,420 --> 00:37:19,680
same set of reviews that the let the sdk

00:37:15,840 --> 00:37:22,770
ran it through once it's all in there

00:37:19,680 --> 00:37:24,720
and it's happy with the package you get

00:37:22,770 --> 00:37:26,430
the opportunity to add some metadata so

00:37:24,720 --> 00:37:28,230
in addition to the title and description

00:37:26,430 --> 00:37:30,030
that it got from your manifest file

00:37:28,230 --> 00:37:31,650
you're going to want to give it

00:37:30,030 --> 00:37:33,390
information about what category to put

00:37:31,650 --> 00:37:36,030
it in the store you're going to want to

00:37:33,390 --> 00:37:37,620
upload screenshots or example videos so

00:37:36,030 --> 00:37:40,470
that users know what to expect that of

00:37:37,620 --> 00:37:41,700
the app someone's browsing through the

00:37:40,470 --> 00:37:43,110
store and they see a nap without a

00:37:41,700 --> 00:37:45,870
screenshot they're going to be less

00:37:43,110 --> 00:37:46,920
likely to download and try that so it's

00:37:45,870 --> 00:37:49,110
important to go through and make sure

00:37:46,920 --> 00:37:52,170
that you get all of that right otherwise

00:37:49,110 --> 00:37:55,820
your apps not going to get found you can

00:37:52,170 --> 00:37:57,840
also translate all of that metadata so

00:37:55,820 --> 00:37:59,490
instead of having it just in one

00:37:57,840 --> 00:38:01,650
language which shield desktop store was

00:37:59,490 --> 00:38:03,720
now you can translate all of that into

00:38:01,650 --> 00:38:05,970
whatever languages you want to support

00:38:03,720 --> 00:38:07,500
and then if the user comes to the store

00:38:05,970 --> 00:38:09,240
and their phone is set to use that

00:38:07,500 --> 00:38:11,040
language that's the version they're

00:38:09,240 --> 00:38:14,070
going to get and that's not just the

00:38:11,040 --> 00:38:15,330
name and the descriptions but you can

00:38:14,070 --> 00:38:17,100
even upload different sets of

00:38:15,330 --> 00:38:18,300
screenshots for different languages too

00:38:17,100 --> 00:38:22,380
so that your screenshots are all

00:38:18,300 --> 00:38:24,450
localized as well now the best part

00:38:22,380 --> 00:38:27,050
about the new store is that there are no

00:38:24,450 --> 00:38:30,150
humans doing reviews of it between

00:38:27,050 --> 00:38:31,980
simplifying the package and running apps

00:38:30,150 --> 00:38:33,900
under confinement we can now run it

00:38:31,980 --> 00:38:35,670
through a series of scripts that will

00:38:33,900 --> 00:38:37,650
make sure that everything in that

00:38:35,670 --> 00:38:41,460
package is safe for the user to install

00:38:37,650 --> 00:38:44,400
and safe for the user to run so the

00:38:41,460 --> 00:38:46,740
average time now from my personal

00:38:44,400 --> 00:38:48,870
experience between uploading a new

00:38:46,740 --> 00:38:51,120
version and getting that new version in

00:38:48,870 --> 00:38:55,080
the store is about two and a half three

00:38:51,120 --> 00:38:57,240
seconds I will upload a new version and

00:38:55,080 --> 00:38:59,340
it'll say okay I'm processing it and

00:38:57,240 --> 00:39:01,140
I'll flip over to Twitter or Google+ and

00:38:59,340 --> 00:39:03,300
i'll type new versions out and by the

00:39:01,140 --> 00:39:07,239
time i hit enter on google+ or twitter

00:39:03,300 --> 00:39:10,640
it's already published in the store

00:39:07,239 --> 00:39:13,249
you also get a set of download stats so

00:39:10,640 --> 00:39:15,920
you can see not only how many people

00:39:13,249 --> 00:39:17,480
have been downloading over time and it's

00:39:15,920 --> 00:39:19,130
separated between users and actual

00:39:17,480 --> 00:39:21,259
downloads so if one user downloads it

00:39:19,130 --> 00:39:22,640
three or four times it'll count towards

00:39:21,259 --> 00:39:25,069
the download stats but not towards the

00:39:22,640 --> 00:39:26,329
user stats so those are broken out you

00:39:25,069 --> 00:39:28,249
get to see how many people downloaded

00:39:26,329 --> 00:39:29,989
each version of your app so you can see

00:39:28,249 --> 00:39:32,480
our people keeping up and updating are

00:39:29,989 --> 00:39:34,279
we losing loot users over time and it

00:39:32,480 --> 00:39:36,410
will give you a breakdown by country

00:39:34,279 --> 00:39:38,390
also so you can see which countries your

00:39:36,410 --> 00:39:40,369
users are coming from which you can use

00:39:38,390 --> 00:39:43,489
to then go add more translations for

00:39:40,369 --> 00:39:45,019
your app the store also now has ratings

00:39:43,489 --> 00:39:47,779
and reviews this is also something new

00:39:45,019 --> 00:39:49,910
that's landed in past few months when

00:39:47,779 --> 00:39:51,619
users add ratings or reviews through the

00:39:49,910 --> 00:39:54,109
phone you will now be able to see them

00:39:51,619 --> 00:39:56,599
in the store and it's tagged with what

00:39:54,109 --> 00:39:59,420
version at it so if somebody's gotta a

00:39:56,599 --> 00:40:01,609
bug going on and they leave a review

00:39:59,420 --> 00:40:02,989
saying you know this is broken it'll say

00:40:01,609 --> 00:40:05,319
what version of the app they had

00:40:02,989 --> 00:40:07,970
installed when they left that review and

00:40:05,319 --> 00:40:10,160
that's it you're done you've got a nap

00:40:07,970 --> 00:40:12,349
or a scope it's in the store users can

00:40:10,160 --> 00:40:15,319
download it or buy it or whatever you

00:40:12,349 --> 00:40:19,430
are now in a bun to app developer time

00:40:15,319 --> 00:40:21,200
to do it all over again I've got half a

00:40:19,430 --> 00:40:25,549
dozen apps in the store we've got people

00:40:21,200 --> 00:40:28,460
who have got 20 30 i think okra has 50

00:40:25,549 --> 00:40:30,170
apps in the store now it really it

00:40:28,460 --> 00:40:32,029
becomes addictive and because the

00:40:30,170 --> 00:40:35,480
languages that we chose perhaps

00:40:32,029 --> 00:40:37,519
especially are so easy on you'll find

00:40:35,480 --> 00:40:39,410
yourself you know you have an idea like

00:40:37,519 --> 00:40:40,910
oh I'm gonna I've got a free evening

00:40:39,410 --> 00:40:42,349
tonight let me build an app for that and

00:40:40,910 --> 00:40:46,039
that's really all the time that it takes

00:40:42,349 --> 00:40:47,749
so once you get your first app in your

00:40:46,039 --> 00:40:50,210
very likely gonna want to keep going in

00:40:47,749 --> 00:40:52,640
add more all right that's seemed of my

00:40:50,210 --> 00:40:56,869
presentation uh we got some questions

00:40:52,640 --> 00:40:58,940
already how did okay so when we first

00:40:56,869 --> 00:41:01,960
yeah ken ken knows the answer because

00:40:58,940 --> 00:41:04,940
he's got one so when we first started

00:41:01,960 --> 00:41:08,779
back in I think we've kicked this off

00:41:04,940 --> 00:41:12,049
late in 2013 we had a new UI toolkit in

00:41:08,779 --> 00:41:13,700
a new SDK and in theory we had a new

00:41:12,049 --> 00:41:16,640
phone platform but there wasn't actually

00:41:13,700 --> 00:41:19,460
any phone on the market so we wanted a

00:41:16,640 --> 00:41:21,950
way to encourage developers to take

00:41:19,460 --> 00:41:24,470
plunge and write apps for a phone that

00:41:21,950 --> 00:41:27,440
didn't exist so we came up with this a

00:41:24,470 --> 00:41:30,080
bun two pioneers program if you go to

00:41:27,440 --> 00:41:32,360
developer a bunch of calm / pioneers

00:41:30,080 --> 00:41:34,640
you'll see everybody on there the first

00:41:32,360 --> 00:41:36,920
200 people to write an app and get it

00:41:34,640 --> 00:41:39,140
published in the store got one of these

00:41:36,920 --> 00:41:40,970
shirts so you'll see a couple of us ever

00:41:39,140 --> 00:41:44,450
if you have one Rick's got one that he's

00:41:40,970 --> 00:41:46,280
not wearing today Aaron's got one so

00:41:44,450 --> 00:41:47,990
these were limited edition shirts there

00:41:46,280 --> 00:41:50,600
are no more of those that is too late to

00:41:47,990 --> 00:41:52,670
get yourself one on but you can go to

00:41:50,600 --> 00:41:56,710
that web page and you can see all 200

00:41:52,670 --> 00:42:00,800
people who did get one right yes oh

00:41:56,710 --> 00:42:05,480
let's get the microphone you said that

00:42:00,800 --> 00:42:09,290
you've got an OAuth account management

00:42:05,480 --> 00:42:11,870
system how do you handle the all the

00:42:09,290 --> 00:42:15,230
browser redirect stuff and I'm looking

00:42:11,870 --> 00:42:19,130
for Tecna very very carefully um so we

00:42:15,230 --> 00:42:23,150
embed we've got a browser component that

00:42:19,130 --> 00:42:25,850
I showed you the auth port it's based on

00:42:23,150 --> 00:42:28,100
chromium the components called all oxide

00:42:25,850 --> 00:42:32,360
it uses whatever the new rendering

00:42:28,100 --> 00:42:34,280
engine is blink yeah yeah so you can

00:42:32,360 --> 00:42:36,560
basically you can embed this chromium

00:42:34,280 --> 00:42:39,140
window into any app and we've done that

00:42:36,560 --> 00:42:41,120
in the system settings and so it handles

00:42:39,140 --> 00:42:45,020
all of the browser redirects and stuff

00:42:41,120 --> 00:42:48,470
for the auth providers then how do you

00:42:45,020 --> 00:42:51,070
get the the token out I don't know sir

00:42:48,470 --> 00:42:53,060
black magic something Kim might now I

00:42:51,070 --> 00:42:54,770
haven't just that good a very long time

00:42:53,060 --> 00:42:58,160
but I know who does know and I can point

00:42:54,770 --> 00:43:05,810
you to this I don't know how it works

00:42:58,160 --> 00:43:09,200
but it does all right in the back any

00:43:05,810 --> 00:43:13,040
app can provide an off provider we don't

00:43:09,200 --> 00:43:14,660
have just the 10 auth every service has

00:43:13,040 --> 00:43:16,070
its own provider so you've got a google

00:43:14,660 --> 00:43:20,090
one you've got a facebook one you've got

00:43:16,070 --> 00:43:21,710
a twitter one okay you have your own you

00:43:20,090 --> 00:43:23,720
can ship that with your app and it will

00:43:21,710 --> 00:43:25,790
get installed into the system settings

00:43:23,720 --> 00:43:28,520
where not only your app but now other

00:43:25,790 --> 00:43:31,120
apps that the user allows can access

00:43:28,520 --> 00:43:31,120
those credentials

00:43:34,770 --> 00:44:03,670
what do you mean going out okay so sorry

00:44:02,500 --> 00:44:06,190
I think he's saying he has like a

00:44:03,670 --> 00:44:10,930
vertical application in the sense that

00:44:06,190 --> 00:44:12,640
like within some enterprise they want a

00:44:10,930 --> 00:44:14,770
phone but they want it to be locked down

00:44:12,640 --> 00:44:19,360
probably with like one or two custom

00:44:14,770 --> 00:44:21,370
apps a boon to but 20 custom apps yeah

00:44:19,360 --> 00:44:24,010
so bunch is really popular actually for

00:44:21,370 --> 00:44:26,470
that on tablets and phones because we do

00:44:24,010 --> 00:44:31,140
have tools where you can go in and nuke

00:44:26,470 --> 00:44:33,700
the parts that you don't like we have a

00:44:31,140 --> 00:44:36,070
the way it's laid out the phone is laid

00:44:33,700 --> 00:44:37,630
out is a little bit different than

00:44:36,070 --> 00:44:39,760
snappies laid out we have something

00:44:37,630 --> 00:44:41,980
called the OEM partition where you can

00:44:39,760 --> 00:44:44,050
go in and customize and some of the

00:44:41,980 --> 00:44:46,060
customizations are like don't show this

00:44:44,050 --> 00:44:47,860
don't show that so it's and then we have

00:44:46,060 --> 00:44:49,810
tools where you can author an image so

00:44:47,860 --> 00:44:55,630
you could just roll your own if you want

00:44:49,810 --> 00:45:01,000
it that answer your question all right

00:44:55,630 --> 00:45:02,470
at one over here you know when you were

00:45:01,000 --> 00:45:04,960
showing scopes you had mentioned that

00:45:02,470 --> 00:45:07,180
there's a declarative UI so that you can

00:45:04,960 --> 00:45:09,190
show how the results are displayed yeah

00:45:07,180 --> 00:45:11,620
is that something that at at runtime I

00:45:09,190 --> 00:45:13,810
could have a setting for the user that

00:45:11,620 --> 00:45:15,460
they could switch between those or is it

00:45:13,810 --> 00:45:18,100
something you hard code either yeah it's

00:45:15,460 --> 00:45:20,710
um it's just a json string but i think

00:45:18,100 --> 00:45:22,300
it's only evaluated when the scope is

00:45:20,710 --> 00:45:23,800
first launched so i don't think you can

00:45:22,300 --> 00:45:25,710
change that run I'm you can provide

00:45:23,800 --> 00:45:27,970
different ones for different categories

00:45:25,710 --> 00:45:30,810
but I don't think you can live switch

00:45:27,970 --> 00:45:30,810
back and forth between

00:45:33,930 --> 00:45:43,530
all right any other questions nope all

00:45:40,470 --> 00:45:46,559
right well thank you everybody um I do

00:45:43,530 --> 00:45:48,180
have a shirt to give away and i'm going

00:45:46,559 --> 00:45:51,510
to give it to the gentleman in the back

00:45:48,180 --> 00:45:55,559
there who asked about corporate lockdown

00:45:51,510 --> 00:45:59,180
so i have i have 12 x and the rest or XL

00:45:55,559 --> 00:45:59,180

YouTube URL: https://www.youtube.com/watch?v=QsrCRpdY_yU


