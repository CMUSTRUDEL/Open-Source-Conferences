Title: Robert Marshall -- The Python Padawan
Publication date: 2017-01-25
Playlist: 2015 SouthEast LinuxFest
Description: 
	
Captions: 
	00:04:49,930 --> 00:04:57,729
but I love having to try and look over

00:04:52,720 --> 00:05:01,120
my shoulder and well just to show that

00:04:57,729 --> 00:05:02,770
hello right that works that's the code

00:05:01,120 --> 00:05:11,620
from before so we'll do that as a

00:05:02,770 --> 00:05:12,940
society where we go so we'll go with my

00:05:11,620 --> 00:05:14,050
online handle because that's how most

00:05:12,940 --> 00:05:18,160
people are going to look me up later I'm

00:05:14,050 --> 00:05:21,220
sure it says hello and howdy exactly

00:05:18,160 --> 00:05:24,250
what we'd expect right so let's go back

00:05:21,220 --> 00:05:26,710
to our examples and notice how this is

00:05:24,250 --> 00:05:29,169
written just take a quick note right

00:05:26,710 --> 00:05:35,710
print hello caller person named print

00:05:29,169 --> 00:05:37,960
howdy present s person named right now

00:05:35,710 --> 00:05:40,360
we're going to go to this next one same

00:05:37,960 --> 00:05:43,389
thing does anybody see the difference

00:05:40,360 --> 00:05:44,740
between this and this if you have I

00:05:43,389 --> 00:05:50,740
glasses i'm sure this sounds all too

00:05:44,740 --> 00:05:53,380
familiar right this and this number two

00:05:50,740 --> 00:05:54,639
very good this is number the number two

00:05:53,380 --> 00:05:56,710
because if you look at the top the

00:05:54,639 --> 00:06:00,550
little magic line says just as Python

00:05:56,710 --> 00:06:03,250
this says Python 3 now the thing with

00:06:00,550 --> 00:06:04,659
Python they've been moving the Python 3

00:06:03,250 --> 00:06:07,000
for a long time but not everyone

00:06:04,659 --> 00:06:09,789
converted so they keep back porting or

00:06:07,000 --> 00:06:11,139
bringing back features from 3 into 2 but

00:06:09,789 --> 00:06:13,570
there are little differences and we're

00:06:11,139 --> 00:06:24,970
going to see some of these so if we do

00:06:13,570 --> 00:06:27,039
this again II right well it's the same

00:06:24,970 --> 00:06:29,560
everything else but the front one didn't

00:06:27,039 --> 00:06:32,380
do the same thing did it it's a minor

00:06:29,560 --> 00:06:36,580
change between how those functions are

00:06:32,380 --> 00:06:40,150
used right so we're gonna come back here

00:06:36,580 --> 00:06:41,530
look at this code again again and this

00:06:40,150 --> 00:06:43,419
is something that's unique in Python

00:06:41,530 --> 00:06:45,970
right i mean in ruby things change a

00:06:43,419 --> 00:06:49,599
little bit and pearl well we've been on

00:06:45,970 --> 00:06:52,930
Perl 5 for a long time and things like

00:06:49,599 --> 00:06:54,400
this aren't as typical but in Python

00:06:52,930 --> 00:06:55,470
we're going to find there's a couple of

00:06:54,400 --> 00:06:57,820
these and you have to be careful because

00:06:55,470 --> 00:07:00,250
later in the talk we're going to go talk

00:06:57,820 --> 00:07:02,979
about projects not all projects are

00:07:00,250 --> 00:07:03,790
either our Python 2 or 3 right they're

00:07:02,979 --> 00:07:06,250
not

00:07:03,790 --> 00:07:08,140
codified so when you start in a project

00:07:06,250 --> 00:07:09,580
and you want to contribute you got to

00:07:08,140 --> 00:07:12,370
ask this question upfront what am I

00:07:09,580 --> 00:07:13,660
writing in is the answer can make a big

00:07:12,370 --> 00:07:16,120
difference in whether your code is going

00:07:13,660 --> 00:07:19,390
to work or make some committer upstream

00:07:16,120 --> 00:07:25,240
absolutely hate your guts ok so again

00:07:19,390 --> 00:07:27,550
we're going to go from here and I miss

00:07:25,240 --> 00:07:29,800
one no that's it also i just want to

00:07:27,550 --> 00:07:32,890
point out one thing here this percent

00:07:29,800 --> 00:07:34,060
symbol if i say modulus everybody in the

00:07:32,890 --> 00:07:35,590
room i kept most of them raised their

00:07:34,060 --> 00:07:38,830
hands they've stayed scripted before

00:07:35,590 --> 00:07:42,070
modulus everybody knows special case

00:07:38,830 --> 00:07:44,080
here in Python that is actually an

00:07:42,070 --> 00:07:45,400
operator that it's like it's an operator

00:07:44,080 --> 00:07:47,020
for the string specifically so you don't

00:07:45,400 --> 00:07:50,410
have to use this in a print statement I

00:07:47,020 --> 00:07:52,660
could go howdy % s present this and

00:07:50,410 --> 00:07:54,190
assign that to a variable so just a

00:07:52,660 --> 00:07:56,950
little aside it's a little trick that

00:07:54,190 --> 00:07:58,720
you can use for using they call it

00:07:56,950 --> 00:08:01,120
variable interpolation right it's where

00:07:58,720 --> 00:08:03,070
you have position holders inside of a

00:08:01,120 --> 00:08:05,860
string and you interpolate the men or

00:08:03,070 --> 00:08:08,470
bring them in and substitute is this to

00:08:05,860 --> 00:08:10,420
go on I could have five or six percent

00:08:08,470 --> 00:08:12,520
esas and then five or six different

00:08:10,420 --> 00:08:15,640
variables I'm popping in there this is

00:08:12,520 --> 00:08:17,880
just a very simple example keep this

00:08:15,640 --> 00:08:19,750
easy for us now this is of course

00:08:17,880 --> 00:08:23,320
variables with a string it's great to

00:08:19,750 --> 00:08:25,780
have one but we have containers we call

00:08:23,320 --> 00:08:28,180
them lists right and this is a list in

00:08:25,780 --> 00:08:29,560
Python 3 you notice that there is an

00:08:28,180 --> 00:08:32,830
apple and orange and a banana and a

00:08:29,560 --> 00:08:34,990
strawberry in my fruit basket not a big

00:08:32,830 --> 00:08:36,880
deal and simple way to go through and

00:08:34,990 --> 00:08:39,460
print it little Johnny ate whatever from

00:08:36,880 --> 00:08:44,770
the basket easy enough we're going to do

00:08:39,460 --> 00:08:50,560
that here right now again we are just

00:08:44,770 --> 00:08:54,340
going to go with list 0 1 easy enough

00:08:50,560 --> 00:08:56,200
right that's exactly what we think take

00:08:54,340 --> 00:09:00,580
to our list which we've built out of

00:08:56,200 --> 00:09:01,780
strings prints them out no problem now

00:09:00,580 --> 00:09:05,040
here's the thing we're going to do this

00:09:01,780 --> 00:09:06,570
again and I'm going to

00:09:05,040 --> 00:09:08,970
the part of a bad eye doctor again and

00:09:06,570 --> 00:09:11,759
say look right only one thing changed

00:09:08,970 --> 00:09:19,519
here anybody tell me what it is and they

00:09:11,759 --> 00:09:21,980
see off the bat python3 up but it's also

00:09:19,519 --> 00:09:32,870
take a look at what's around this list

00:09:21,980 --> 00:09:35,339
right square brace parenthesis now what

00:09:32,870 --> 00:09:38,819
that's what i get for copy pasting this

00:09:35,339 --> 00:09:43,740
slide from the actual source code so yet

00:09:38,819 --> 00:09:48,720
caught me yeah caught me so i will show

00:09:43,740 --> 00:09:53,060
you see there it is it'll work so we're

00:09:48,720 --> 00:09:58,110
going to do list too same thing right

00:09:53,060 --> 00:10:01,610
just what we expect no loss of sanity no

00:09:58,110 --> 00:10:03,870
weirdness so we're going to change it up

00:10:01,610 --> 00:10:06,360
I've got someone who restocks they

00:10:03,870 --> 00:10:08,850
decide to put a plant in my basket so

00:10:06,360 --> 00:10:13,079
lists you can append right again square

00:10:08,850 --> 00:10:17,040
braces and append the platen so when you

00:10:13,079 --> 00:10:18,480
come back when do the same thing I know

00:10:17,040 --> 00:10:19,620
everybody here is probably wondering why

00:10:18,480 --> 00:10:23,130
do we keep doing the same thing over and

00:10:19,620 --> 00:10:26,130
over again there we go right we appended

00:10:23,130 --> 00:10:28,529
now I have a plant in my basket not a

00:10:26,130 --> 00:10:35,069
big deal so we're gonna do it one more

00:10:28,529 --> 00:10:38,880
time with feeling and I'm going to

00:10:35,069 --> 00:10:40,920
alt-tab come back but I balance it on

00:10:38,880 --> 00:10:42,149
this i balance it on this screen I don't

00:10:40,920 --> 00:10:44,880
know what I was thinking when I put that

00:10:42,149 --> 00:10:47,699
last slide together again parenthesis

00:10:44,880 --> 00:10:49,980
right same thing it's going to work

00:10:47,699 --> 00:10:53,279
right it's going to work who here

00:10:49,980 --> 00:10:58,800
believes is going to work not a soul my

00:10:53,279 --> 00:11:06,470
jokes are old so and my typing is even

00:10:58,800 --> 00:11:06,470
worse place though for thank you Oh

00:11:06,560 --> 00:11:13,500
wait a minute to pool what's this we'll

00:11:11,040 --> 00:11:15,080
see I was lying before when it's a

00:11:13,500 --> 00:11:17,610
parenthesis it's not actually a list

00:11:15,080 --> 00:11:21,360
it's actually this contract called tuple

00:11:17,610 --> 00:11:22,800
any old C programmers in here anybody so

00:11:21,360 --> 00:11:26,010
the difference between right between a a

00:11:22,800 --> 00:11:28,800
vector array and instruct right same

00:11:26,010 --> 00:11:29,910
same thing going on here think of it

00:11:28,800 --> 00:11:31,350
this way for if about any

00:11:29,910 --> 00:11:33,120
non-programmers I know that I'm talking

00:11:31,350 --> 00:11:35,520
to hang out so I don't know how many

00:11:33,120 --> 00:11:36,899
more out there do this for a living but

00:11:35,520 --> 00:11:39,690
the difference here is think like a

00:11:36,899 --> 00:11:41,339
chain and let's say a chain length is 12

00:11:39,690 --> 00:11:43,050
links long and you know it's twelve

00:11:41,339 --> 00:11:44,339
links long then you can do things with

00:11:43,050 --> 00:11:45,690
that because you always know where

00:11:44,339 --> 00:11:47,700
things are in the position you know what

00:11:45,690 --> 00:11:49,740
they're named you can give it its a

00:11:47,700 --> 00:11:54,529
disposition it's whatever its it's set

00:11:49,740 --> 00:11:57,480
it never moves that's a tuple a list is

00:11:54,529 --> 00:11:59,430
more like a chain you can add to or a

00:11:57,480 --> 00:12:02,399
bag you can keep popping things into it

00:11:59,430 --> 00:12:04,050
can be longer it can be shorter so when

00:12:02,399 --> 00:12:07,140
you deal with lists one thing to keep in

00:12:04,050 --> 00:12:09,060
mind is your list to be empty your list

00:12:07,140 --> 00:12:10,260
can be longer than you think that's

00:12:09,060 --> 00:12:12,450
actually the source of more bugs than

00:12:10,260 --> 00:12:15,240
people want to care to admit you know

00:12:12,450 --> 00:12:17,790
they forget to when they're 0 to handle

00:12:15,240 --> 00:12:19,680
that and not error out or they iterate

00:12:17,790 --> 00:12:21,209
something out and the last to get lost

00:12:19,680 --> 00:12:22,980
because they set a fixed number say oh

00:12:21,209 --> 00:12:25,140
no it'll never be more than this and

00:12:22,980 --> 00:12:27,990
somebody decide to use that module and

00:12:25,140 --> 00:12:29,510
have 14 thesis instead of 12 and now

00:12:27,990 --> 00:12:32,370
those last two pieces are always missed

00:12:29,510 --> 00:12:34,380
so again important thing to remember

00:12:32,370 --> 00:12:36,240
right because square braces and

00:12:34,380 --> 00:12:38,910
parentheses are different in this case

00:12:36,240 --> 00:12:42,420
different constructs and we're going to

00:12:38,910 --> 00:12:44,220
come back here right one of the nice

00:12:42,420 --> 00:12:45,839
things with Python it's a glue language

00:12:44,220 --> 00:12:47,910
which means there's a lot of different

00:12:45,839 --> 00:12:49,860
libraries we can use we're going to use

00:12:47,910 --> 00:12:51,810
one of the simplest ones I used to be a

00:12:49,860 --> 00:12:53,790
data analyst so mathematics is important

00:12:51,810 --> 00:12:57,450
to me we're going to look at the math

00:12:53,790 --> 00:12:59,850
function real simple right Python import

00:12:57,450 --> 00:13:01,950
math all that little magic says is we

00:12:59,850 --> 00:13:04,829
are importing the math library exactly

00:13:01,950 --> 00:13:07,350
as it looks we're going to print the

00:13:04,829 --> 00:13:08,610
ceiling we're going to come back here

00:13:07,350 --> 00:13:11,100
for a second we're just going to go

00:13:08,610 --> 00:13:14,370
through the slide we're right I can also

00:13:11,100 --> 00:13:16,980
say from math import seal I will notice

00:13:14,370 --> 00:13:19,070
the difference here is when I say that I

00:13:16,980 --> 00:13:22,820
can actually do print

00:13:19,070 --> 00:13:26,900
seal 8.3 I don't have to call the math

00:13:22,820 --> 00:13:28,910
in front like I did here I can just call

00:13:26,900 --> 00:13:31,130
it by its name because what this is a

00:13:28,910 --> 00:13:33,830
call to name space for those of you who

00:13:31,130 --> 00:13:38,810
came from C++ or Java namespaces are not

00:13:33,830 --> 00:13:40,520
anything new you just put the name out

00:13:38,810 --> 00:13:43,670
in front this way if you have

00:13:40,520 --> 00:13:45,020
conflicting aims you can keep them

00:13:43,670 --> 00:13:47,000
separate and know what they are in the

00:13:45,020 --> 00:13:50,270
code for code readability reusability

00:13:47,000 --> 00:13:52,910
now when I come here and say okay well

00:13:50,270 --> 00:13:55,880
this is the only library I have can I

00:13:52,910 --> 00:14:00,290
just do that anybody think this is going

00:13:55,880 --> 00:14:01,850
to work yeah exactly you can't get away

00:14:00,290 --> 00:14:03,500
with this some languages I've seen you

00:14:01,850 --> 00:14:05,150
can you can actually do this if it's the

00:14:03,500 --> 00:14:06,920
only thing in the namespace but there's

00:14:05,150 --> 00:14:09,230
not that concept here of a default

00:14:06,920 --> 00:14:11,000
namespace so even though it's there it's

00:14:09,230 --> 00:14:13,340
not going to show up and we will demo

00:14:11,000 --> 00:14:24,680
that in code well I'm going to demo the

00:14:13,340 --> 00:14:29,630
two right that's easy enough Oh will do

00:14:24,680 --> 00:14:36,920
03 did i do three or did I typo that I

00:14:29,630 --> 00:14:39,680
can't see I did too okay three and there

00:14:36,920 --> 00:14:41,570
you go right so exactly what we expect

00:14:39,680 --> 00:14:42,710
my Jedi mind tricks don't work on this

00:14:41,570 --> 00:14:44,630
audience there were no one is going to

00:14:42,710 --> 00:14:49,520
buy it when I try and catch you which is

00:14:44,630 --> 00:14:53,000
good so we're going to move on we're

00:14:49,520 --> 00:14:54,230
talk about I chthonic ritual now call it

00:14:53,000 --> 00:14:56,450
this because I was trying to go with the

00:14:54,230 --> 00:14:58,640
Star Wars gag it didn't work and so I

00:14:56,450 --> 00:15:00,860
apologize i'm not that inventive however

00:14:58,640 --> 00:15:03,200
python has these things called pep right

00:15:00,860 --> 00:15:04,520
python and enhancement proposal that's

00:15:03,200 --> 00:15:05,990
where the community talks about how to

00:15:04,520 --> 00:15:09,530
improve things how to do things better

00:15:05,990 --> 00:15:13,990
if you've been around thank RFC requests

00:15:09,530 --> 00:15:17,600
for comment same idea okay big one is

00:15:13,990 --> 00:15:19,610
Pepe have to know this one I'm going to

00:15:17,600 --> 00:15:22,970
get some highlights here it's things

00:15:19,610 --> 00:15:24,170
like for space indentation things like

00:15:22,970 --> 00:15:27,230
variables and functions are lowercase

00:15:24,170 --> 00:15:30,080
with underscores instance methods are

00:15:27,230 --> 00:15:31,410
cap case you know that every word is

00:15:30,080 --> 00:15:33,750
capitalized

00:15:31,410 --> 00:15:36,000
and private class instance methods begin

00:15:33,750 --> 00:15:38,279
with a leading underscore basic stuff

00:15:36,000 --> 00:15:40,259
there's a lot more in there but again

00:15:38,279 --> 00:15:42,740
it's hits an RFC so there's a lot in

00:15:40,259 --> 00:15:45,300
there for you to consume and look at if

00:15:42,740 --> 00:15:46,860
you're learning the language right this

00:15:45,300 --> 00:15:50,040
is the building blocks we've looked at

00:15:46,860 --> 00:15:52,319
this you learn the language they're just

00:15:50,040 --> 00:15:53,970
lovely thing called pie doc it's the

00:15:52,319 --> 00:15:56,910
equivalent if you came from Ruby our doc

00:15:53,970 --> 00:15:58,410
from Java Java doc I haven't used job in

00:15:56,910 --> 00:15:59,879
a long while do they still have those

00:15:58,410 --> 00:16:01,500
web pages where you can just download

00:15:59,879 --> 00:16:04,970
the source and view the HTML and search

00:16:01,500 --> 00:16:07,589
it just locally that's still there yeah

00:16:04,970 --> 00:16:08,759
so it's the same idea here's some

00:16:07,589 --> 00:16:11,040
interesting things though you can use it

00:16:08,759 --> 00:16:12,990
on the command line with a keyword

00:16:11,040 --> 00:16:15,149
search so for those of you who have been

00:16:12,990 --> 00:16:17,819
using Linux for a long time you know the

00:16:15,149 --> 00:16:19,410
old apropos command a propos some random

00:16:17,819 --> 00:16:22,019
keyword you can go find what man pages

00:16:19,410 --> 00:16:25,040
are related same idea here little

00:16:22,019 --> 00:16:27,930
keyword search but the interesting thing

00:16:25,040 --> 00:16:31,410
you can also pipe it to a local port and

00:16:27,930 --> 00:16:35,100
have it with HTML viewing which is kind

00:16:31,410 --> 00:16:37,920
of interesting because while doing this

00:16:35,100 --> 00:16:48,000
today found something that I didn't

00:16:37,920 --> 00:16:54,089
expect so let's go over here that local

00:16:48,000 --> 00:16:55,560
host right so there we go now I have to

00:16:54,089 --> 00:16:58,920
try and see this from across the screen

00:16:55,560 --> 00:17:02,459
because this is in front of me so can we

00:16:58,920 --> 00:17:10,510
see anti-gravity on here anybody see

00:17:02,459 --> 00:17:13,750
that try this there we go now

00:17:10,510 --> 00:17:14,949
see it I'm not sure why this is here but

00:17:13,750 --> 00:17:18,370
this was a little easter egg that I

00:17:14,949 --> 00:17:21,400
found it I open this up it brings you

00:17:18,370 --> 00:17:22,870
the xkcd comic about Python so this

00:17:21,400 --> 00:17:26,440
gives you an idea of the geek sense of

00:17:22,870 --> 00:17:28,810
humor right I just sorry I find this

00:17:26,440 --> 00:17:30,730
amusing and again all of us here have

00:17:28,810 --> 00:17:32,200
the sense of humor so and this is one of

00:17:30,730 --> 00:17:35,620
the best comics if you haven't seen this

00:17:32,200 --> 00:17:37,180
comic get on there now it's also there's

00:17:35,620 --> 00:17:38,920
another one about about saving the world

00:17:37,180 --> 00:17:40,240
with pearl and that was near and dear to

00:17:38,920 --> 00:17:43,920
my heart because I get made fun of a lot

00:17:40,240 --> 00:17:46,630
for being a pearler so that being said

00:17:43,920 --> 00:17:53,020
we're gonna come back did I just closed

00:17:46,630 --> 00:17:58,570
hang out sorry google a joint hang out

00:17:53,020 --> 00:18:00,280
and see if I can see that you're about

00:17:58,570 --> 00:18:03,970
going to hangout on air and yes I have

00:18:00,280 --> 00:18:05,380
agreed to the terms and i standing here

00:18:03,970 --> 00:18:09,400
because no one wants to see an up-close

00:18:05,380 --> 00:18:16,780
of my mug and joining joining am i

00:18:09,400 --> 00:18:23,980
getting there all we have to do that

00:18:16,780 --> 00:18:27,360
whole screen share thing again well i

00:18:23,980 --> 00:18:27,360
had the camera muted is that better

00:18:29,940 --> 00:18:36,450
there is no no such thing i'm actually

00:18:33,940 --> 00:18:40,060
didn't let me join so much try again

00:18:36,450 --> 00:18:41,290
down there that's weird i see myself

00:18:40,060 --> 00:18:44,920
it's kind of like one of those things in

00:18:41,290 --> 00:18:48,610
the mirror on TV right so all right go

00:18:44,920 --> 00:18:52,210
well use the camera to stop that and i

00:18:48,610 --> 00:18:53,590
will let this gentleman do that so do we

00:18:52,210 --> 00:18:55,140
have any questions looks like this quick

00:18:53,590 --> 00:18:57,460
minute while we're looking at XKCD

00:18:55,140 --> 00:19:00,280
relaxed right we're waiting for it to

00:18:57,460 --> 00:19:07,660
compile right the old joke any questions

00:19:00,280 --> 00:19:09,400
so far go ahead move it up so you can

00:19:07,660 --> 00:19:17,700
see on the top half i'm going to differ

00:19:09,400 --> 00:19:17,700
oh the scroll the page get over here

00:19:20,250 --> 00:19:33,120
to come back to this this is the there

00:19:25,320 --> 00:19:38,970
it is you did we do the screen share

00:19:33,120 --> 00:19:47,690
back where's the screen sharks we had to

00:19:38,970 --> 00:19:47,690
go that second page this guy right here

00:19:50,600 --> 00:19:56,490
I'm off again yeah we got the page

00:19:54,260 --> 00:19:58,710
alright so we have solved technical

00:19:56,490 --> 00:20:00,210
difficulties this is the great thing I

00:19:58,710 --> 00:20:01,530
going to a tech conference were never at

00:20:00,210 --> 00:20:08,430
a loss for solving matter how many

00:20:01,530 --> 00:20:11,220
problems pop up right yeah so again this

00:20:08,430 --> 00:20:12,900
was just this struck my funny bone while

00:20:11,220 --> 00:20:14,700
I was doing while I was exploring and

00:20:12,900 --> 00:20:16,590
looking at things making sure I had some

00:20:14,700 --> 00:20:18,720
cool stuff and this popped out popped

00:20:16,590 --> 00:20:21,600
out there no I am NOT going to start

00:20:18,720 --> 00:20:27,270
flying I don't have that power so I'm

00:20:21,600 --> 00:20:31,680
going to come back to hear over this

00:20:27,270 --> 00:20:32,670
window u- enter that bar I don't want to

00:20:31,680 --> 00:20:36,330
call my presentation because that would

00:20:32,670 --> 00:20:38,490
be fun alright so pie doc again we can

00:20:36,330 --> 00:20:39,900
explore so all the libraries that are

00:20:38,490 --> 00:20:42,120
available in standard libraries are on

00:20:39,900 --> 00:20:43,980
there all the different functions so if

00:20:42,120 --> 00:20:45,690
you just want to explore and go looking

00:20:43,980 --> 00:20:48,630
and you're not really you're not really

00:20:45,690 --> 00:20:51,000
keen on going with the command line go

00:20:48,630 --> 00:20:52,950
through the web page there's also of

00:20:51,000 --> 00:20:55,410
course python org has stuff we'll get to

00:20:52,950 --> 00:20:56,760
that here in a second now where do we go

00:20:55,410 --> 00:20:59,850
for two from here right this is all very

00:20:56,760 --> 00:21:01,230
simple stuff so we're not going much for

00:20:59,850 --> 00:21:04,380
this we're at eighty thousand foot view

00:21:01,230 --> 00:21:05,970
today because geared this towards true

00:21:04,380 --> 00:21:08,550
beginners in Python who've never seen it

00:21:05,970 --> 00:21:10,830
people who were like me about oh eight

00:21:08,550 --> 00:21:13,980
months ago when i started my job because

00:21:10,830 --> 00:21:15,690
I had never really touched it and that's

00:21:13,980 --> 00:21:18,060
why this is the Python Padawan so I had

00:21:15,690 --> 00:21:19,740
to come up to speed immediately because

00:21:18,060 --> 00:21:21,810
if my first day was jumping into a

00:21:19,740 --> 00:21:24,450
couple of small projects you know I

00:21:21,810 --> 00:21:26,640
started using speed test CLI which isn't

00:21:24,450 --> 00:21:28,590
the project at work but how many people

00:21:26,640 --> 00:21:31,429
run a little headless router at their

00:21:28,590 --> 00:21:33,870
house with linux or bsd some variant

00:21:31,429 --> 00:21:35,520
okay so if you ever get

00:21:33,870 --> 00:21:37,770
ask that question well can't you just

00:21:35,520 --> 00:21:41,190
unplug and plug your computer directly

00:21:37,770 --> 00:21:42,300
in and check the speed right none of us

00:21:41,190 --> 00:21:45,059
want to do that and they won't actually

00:21:42,300 --> 00:21:47,010
check it check it for you this is a

00:21:45,059 --> 00:21:48,420
Python application written for the

00:21:47,010 --> 00:21:50,550
command line that will do the speed test

00:21:48,420 --> 00:21:52,680
through Klah your typical standard going

00:21:50,550 --> 00:21:54,809
to your speedtest net so if you need a

00:21:52,680 --> 00:21:58,110
speed test here you go i have run this

00:21:54,809 --> 00:22:00,510
on an edge router light in viata i have

00:21:58,110 --> 00:22:02,640
run this on OS 10 i have run it on

00:22:00,510 --> 00:22:04,760
fedora it works pretty much anywhere

00:22:02,640 --> 00:22:08,280
where you have a python environment so

00:22:04,760 --> 00:22:10,110
this is a handy little tool and that's

00:22:08,280 --> 00:22:11,940
actually a link so when you go online

00:22:10,110 --> 00:22:13,890
later and look at my presentation to the

00:22:11,940 --> 00:22:19,050
self website all of these taking to

00:22:13,890 --> 00:22:21,030
these projects yes no it's just the

00:22:19,050 --> 00:22:23,010
Python script if you have a PI a working

00:22:21,030 --> 00:22:24,840
pot all this requires is a working

00:22:23,010 --> 00:22:29,280
Python environment you get that you're

00:22:24,840 --> 00:22:33,480
done matter of fact I go back to my

00:22:29,280 --> 00:22:40,650
thing here I tried believe an example up

00:22:33,480 --> 00:22:43,440
no presentation itself yes sir remember

00:22:40,650 --> 00:22:48,900
to repeat the questions so the question

00:22:43,440 --> 00:22:51,000
was do you need to have a open firm or

00:22:48,900 --> 00:22:53,100
firmware that will run that speed test

00:22:51,000 --> 00:22:56,730
answers no you only need a working

00:22:53,100 --> 00:22:58,920
Python environment and we're going to go

00:22:56,730 --> 00:23:01,410
ahead and kill this off by the way if

00:22:58,920 --> 00:23:04,350
you're working in Python 3 just be aware

00:23:01,410 --> 00:23:06,690
that you have to do Python hi doc 3

00:23:04,350 --> 00:23:09,030
forgot to mention that almost everything

00:23:06,690 --> 00:23:11,100
you see with Python it's any Python the

00:23:09,030 --> 00:23:13,460
regular this is for right now I believe

00:23:11,100 --> 00:23:17,010
its is a fedora 23 that we're taking

00:23:13,460 --> 00:23:19,050
native Python curry maybe I'm not going

00:23:17,010 --> 00:23:21,240
to speak speak to that but the

00:23:19,050 --> 00:23:23,070
distributions are slowly upgrading so

00:23:21,240 --> 00:23:25,650
Python 3 is available and once everybody

00:23:23,070 --> 00:23:27,780
has moved up Python 3 will be your

00:23:25,650 --> 00:23:30,120
default is this actually what this is

00:23:27,780 --> 00:23:38,030
when you type Python it's actually just

00:23:30,120 --> 00:23:38,030
a symlink so right

00:23:41,049 --> 00:23:45,279
you should see yep the Python too so

00:23:43,659 --> 00:23:47,590
Python 3 goes to your most recent

00:23:45,279 --> 00:23:50,230
version of Python 3 and you'll see that

00:23:47,590 --> 00:23:52,119
a lot in libraries to I kind of started

00:23:50,230 --> 00:23:53,980
chuckle to myself when I first started

00:23:52,119 --> 00:23:56,440
this because there were libraries that

00:23:53,980 --> 00:23:58,929
were something dashed Python dash

00:23:56,440 --> 00:24:01,419
something dash python3 Python dash

00:23:58,929 --> 00:24:03,580
something dash Python because people are

00:24:01,419 --> 00:24:05,649
trying to maintain both and it's

00:24:03,580 --> 00:24:09,330
confusing so this this naming convention

00:24:05,649 --> 00:24:11,379
is kind of stuck as you go through

00:24:09,330 --> 00:24:13,690
obviously if your environment the false

00:24:11,379 --> 00:24:16,539
the Python 3 pythons going to work for

00:24:13,690 --> 00:24:18,070
you so just be careful if you see weird

00:24:16,539 --> 00:24:19,869
things don't make any sense when you're

00:24:18,070 --> 00:24:21,369
trying to run your script just check

00:24:19,869 --> 00:24:24,840
what your default environment is I see a

00:24:21,369 --> 00:24:24,840
question in the back we'll stop for that

00:24:41,030 --> 00:24:43,090
you

00:24:48,360 --> 00:24:59,490
I think the question is when do I think

00:24:57,809 --> 00:25:01,470
that we're going to move from Python

00:24:59,490 --> 00:25:02,940
through the Python 3 and I think one of

00:25:01,470 --> 00:25:06,000
the one of the comments in their collars

00:25:02,940 --> 00:25:08,220
kind of apropos I'm not personally sure

00:25:06,000 --> 00:25:10,950
because it's been out for quite a while

00:25:08,220 --> 00:25:14,820
the big change is there are changes to

00:25:10,950 --> 00:25:17,130
lists editor's house string and input is

00:25:14,820 --> 00:25:18,510
taken there's actually I've got a link

00:25:17,130 --> 00:25:20,280
at the end of presentation to all the

00:25:18,510 --> 00:25:22,650
different changes between Python 2 and 3

00:25:20,280 --> 00:25:25,679
I think the big challenge to adoption is

00:25:22,650 --> 00:25:28,260
a lot of the big projects are still on

00:25:25,679 --> 00:25:30,390
Python 2 so if you default bundle

00:25:28,260 --> 00:25:32,460
python3 those projects are going to be a

00:25:30,390 --> 00:25:36,210
pedal out of the box and they're working

00:25:32,460 --> 00:25:37,559
toward it I know that the bugzilla

00:25:36,210 --> 00:25:40,740
project is working toward that as well

00:25:37,559 --> 00:25:42,840
I've seen that I know anaconda which is

00:25:40,740 --> 00:25:45,150
the specific project I work on we're

00:25:42,840 --> 00:25:47,490
working on the port to python 3 so

00:25:45,150 --> 00:25:49,320
that's happening so you have to see all

00:25:47,490 --> 00:25:51,480
these projects that are part of every

00:25:49,320 --> 00:25:53,340
major distribution line up and move the

00:25:51,480 --> 00:25:54,750
Python 3 so the adoption is going to be

00:25:53,340 --> 00:25:56,820
a pain point for the person using the

00:25:54,750 --> 00:25:58,620
computer to get the side I think that's

00:25:56,820 --> 00:26:01,020
more when it's going to change like your

00:25:58,620 --> 00:26:03,809
personal project you put that magic in

00:26:01,020 --> 00:26:05,400
there you know shebang python3 you're

00:26:03,809 --> 00:26:07,410
going to get Python 3 in your project

00:26:05,400 --> 00:26:10,110
you can use it just fine the real

00:26:07,410 --> 00:26:11,520
concern is an old code so if you say I

00:26:10,110 --> 00:26:13,650
want to start working on this project

00:26:11,520 --> 00:26:16,200
that I love it I want to contribute to

00:26:13,650 --> 00:26:17,700
it I want to make it better then you

00:26:16,200 --> 00:26:19,950
have to become make yourself aware is

00:26:17,700 --> 00:26:22,530
that a Python 2 or Python 3 project and

00:26:19,950 --> 00:26:24,660
if you're really a masochist you can say

00:26:22,530 --> 00:26:25,590
you know what I'm a new programmer but

00:26:24,660 --> 00:26:27,419
i'm going to go figure out the

00:26:25,590 --> 00:26:28,860
differences and help them port it that's

00:26:27,419 --> 00:26:30,240
a great way to learn actually if they're

00:26:28,860 --> 00:26:31,440
trying to figure out where things broke

00:26:30,240 --> 00:26:32,940
because you will never spend so much

00:26:31,440 --> 00:26:34,350
time reading the manual is trying to

00:26:32,940 --> 00:26:38,160
figure out the upgrade from one language

00:26:34,350 --> 00:26:39,840
version to another so it's not really an

00:26:38,160 --> 00:26:41,250
answer I think you wanted but that's

00:26:39,840 --> 00:26:43,559
kind of where we're at as developers

00:26:41,250 --> 00:26:46,799
we're waiting to see when that's going

00:26:43,559 --> 00:26:49,260
to take mass effect anyone else here

00:26:46,799 --> 00:26:50,400
have a better answer for that cuz I know

00:26:49,260 --> 00:26:52,290
there's a few people in here who I know

00:26:50,400 --> 00:26:58,080
have been doing this for a long time

00:26:52,290 --> 00:26:58,509
specific with Python here is that the

00:26:58,080 --> 00:27:11,979
pearl

00:26:58,509 --> 00:27:14,919
yeah yeah yeah well you know you know

00:27:11,979 --> 00:27:22,149
Duke Nukem did come out so let's keep

00:27:14,919 --> 00:27:23,919
going oh but the conversation so someone

00:27:22,149 --> 00:27:26,199
was teasing me again on my perler ways

00:27:23,919 --> 00:27:27,999
saying that Perl 6 asposed is never

00:27:26,199 --> 00:27:30,009
going to come out when pearl 6 happens

00:27:27,999 --> 00:27:33,089
and someone pointed out that supposedly

00:27:30,009 --> 00:27:35,199
in December Perl 6 will be out so I

00:27:33,089 --> 00:27:47,289
haven't seen that because I've had my

00:27:35,199 --> 00:27:48,940
head buried with Python Oh at least yeah

00:27:47,289 --> 00:27:50,259
well basically for my understanding its

00:27:48,940 --> 00:27:52,359
security back porch and some of the

00:27:50,259 --> 00:27:54,159
better features just like I mean / 05

00:27:52,359 --> 00:27:56,379
has so many pro 6 features at this point

00:27:54,159 --> 00:27:57,759
it's the same idea they're not going to

00:27:56,379 --> 00:27:59,589
leave developers out in the cold because

00:27:57,759 --> 00:28:03,129
there are projects that use it that are

00:27:59,589 --> 00:28:04,449
major projects and they need it so

00:28:03,129 --> 00:28:07,199
anaconda installer again that's what I

00:28:04,449 --> 00:28:11,859
work on so every time you install fedora

00:28:07,199 --> 00:28:13,299
rel sent OS scientific linux any of the

00:28:11,859 --> 00:28:16,209
variants that are any of the RPM

00:28:13,299 --> 00:28:17,679
variants that are based on those that's

00:28:16,209 --> 00:28:20,709
what I work on and that's all written in

00:28:17,679 --> 00:28:22,929
Python there are some bindings to to see

00:28:20,709 --> 00:28:24,190
what we need to use see for efficiency's

00:28:22,929 --> 00:28:26,829
sake or for sake of the hardware is

00:28:24,190 --> 00:28:29,859
going on but it's pretty much pure

00:28:26,829 --> 00:28:30,999
python so and there's a side library to

00:28:29,859 --> 00:28:33,369
this that I didn't include on the slide

00:28:30,999 --> 00:28:35,879
called blip-it which is all a device

00:28:33,369 --> 00:28:38,649
handling library that talks to live life

00:28:35,879 --> 00:28:39,969
now for those of you who are artists any

00:28:38,649 --> 00:28:43,419
artist in the room digital artists

00:28:39,969 --> 00:28:45,309
anybody anybody know well out there on

00:28:43,419 --> 00:28:46,989
google hangouts you can write your

00:28:45,309 --> 00:28:48,849
scripts for blender this way if you want

00:28:46,989 --> 00:28:54,070
to automate your scenes your text

00:28:48,849 --> 00:28:58,130
replies and do it in Python if

00:28:54,070 --> 00:29:00,650
you are a small-time sysadmin like I

00:28:58,130 --> 00:29:02,000
have been for a long time duplicity is a

00:29:00,650 --> 00:29:04,700
simple Python shell script that wraps

00:29:02,000 --> 00:29:07,240
around our sink that lets you do backups

00:29:04,700 --> 00:29:09,620
so it's not very high-tech it's not

00:29:07,240 --> 00:29:11,530
extreme but it gets the job done it's

00:29:09,620 --> 00:29:14,750
efficient and it's easy to use again

00:29:11,530 --> 00:29:17,570
simple things that Python writers have

00:29:14,750 --> 00:29:19,100
come up with ansible if you really need

00:29:17,570 --> 00:29:21,970
a lot more in terms of or assistant

00:29:19,100 --> 00:29:25,610
orchestration ansibles pure python

00:29:21,970 --> 00:29:26,930
there's not a Python project again just

00:29:25,610 --> 00:29:29,480
a couple of things just to give an idea

00:29:26,930 --> 00:29:33,460
of what you contribute to boat oh this

00:29:29,480 --> 00:29:35,810
is one that my friend David recommends

00:29:33,460 --> 00:29:37,130
amazon web services API I used to

00:29:35,810 --> 00:29:38,930
actually write a lot of Amazon Web

00:29:37,130 --> 00:29:41,020
Services back when I was doing web

00:29:38,930 --> 00:29:43,430
development if I was doing Python

00:29:41,020 --> 00:29:45,500
there's a pretty solid API for doing

00:29:43,430 --> 00:29:47,630
that and there are api's for everything

00:29:45,500 --> 00:29:49,100
you can think of I can't I could have

00:29:47,630 --> 00:29:51,170
stood here with slides for a while with

00:29:49,100 --> 00:29:52,640
all the cool stuff that's out there but

00:29:51,170 --> 00:29:55,520
if you can imagine it it's out there I

00:29:52,640 --> 00:29:58,340
mean there are books on data science

00:29:55,520 --> 00:30:00,440
there are books on scientific uses you

00:29:58,340 --> 00:30:02,450
want some more reading Python men what

00:30:00,440 --> 00:30:05,210
Python main website is an awesome place

00:30:02,450 --> 00:30:08,930
they had documentation and tutorials for

00:30:05,210 --> 00:30:11,090
both Python 2 & 3 so if you have deeper

00:30:08,930 --> 00:30:13,250
questions as you dig into this great

00:30:11,090 --> 00:30:17,120
place to go obviously on IRC there's

00:30:13,250 --> 00:30:18,770
also the Python Channel right this is a

00:30:17,120 --> 00:30:20,150
link just for people at home they won't

00:30:18,770 --> 00:30:22,550
go directly to the pivot the pep eight

00:30:20,150 --> 00:30:25,240
that's your pythonic convite on

00:30:22,550 --> 00:30:27,200
conventions things like spacing which

00:30:25,240 --> 00:30:28,850
you know we haven't addressed an

00:30:27,200 --> 00:30:31,190
elephant in the room how many people

00:30:28,850 --> 00:30:35,360
here have heard this python is terrible

00:30:31,190 --> 00:30:36,800
because white space is significant all

00:30:35,360 --> 00:30:38,570
right so we're going to address the

00:30:36,800 --> 00:30:42,230
elephant in the room because i think i

00:30:38,570 --> 00:30:43,940
have maybe a little more time well i

00:30:42,230 --> 00:30:49,790
keep hearing clapping in the background

00:30:43,940 --> 00:30:52,160
and going am I really that far over it's

00:30:49,790 --> 00:30:55,060
next door this clapping okay so I

00:30:52,160 --> 00:30:59,860
actually prep the little demo for this

00:30:55,060 --> 00:31:06,760
right so we're a new white space 01 I

00:30:59,860 --> 00:31:09,980
can see right is it 0 1 0 1 2 3 or ABC

00:31:06,760 --> 00:31:11,540
okay and this is why you need standard

00:31:09,980 --> 00:31:12,560
nomenclature so you don't do this to

00:31:11,540 --> 00:31:17,110
yourself up in front of a group of

00:31:12,560 --> 00:31:17,110
people so we're going to go ahead and do

00:31:17,290 --> 00:31:27,620
without the caps but one a right same

00:31:24,890 --> 00:31:30,130
thing we're used to this is taken from

00:31:27,620 --> 00:31:33,590
another thing we did earlier with names

00:31:30,130 --> 00:31:38,630
simple enough right there it is two

00:31:33,590 --> 00:31:49,520
lines in our function not a big deal be

00:31:38,630 --> 00:31:52,880
the same thing so when I look at this

00:31:49,520 --> 00:31:55,790
again that's actually got a bad spacing

00:31:52,880 --> 00:32:02,060
on it because my system corrects for it

00:31:55,790 --> 00:32:04,220
but you can see there's a tab there it's

00:32:02,060 --> 00:32:07,330
going to freak out this is in Python 2

00:32:04,220 --> 00:32:09,590
indentation error unexpected indent

00:32:07,330 --> 00:32:11,090
somewhat useful if you've never written

00:32:09,590 --> 00:32:15,200
in Python before that might confuse you

00:32:11,090 --> 00:32:16,430
but that's it now another difference so

00:32:15,200 --> 00:32:19,010
I said I was going to show you some more

00:32:16,430 --> 00:32:23,150
things in Python 2 and 3 some error

00:32:19,010 --> 00:32:25,520
handling stuff got improved so now when

00:32:23,150 --> 00:32:27,470
you're a first-timer you're going to see

00:32:25,520 --> 00:32:28,580
in consistent use of tabs and spaces

00:32:27,470 --> 00:32:31,100
actually have a clue of what you just

00:32:28,580 --> 00:32:32,450
did to yourself if you don't know so

00:32:31,100 --> 00:32:34,090
again this is one of the benefits if

00:32:32,450 --> 00:32:37,550
you're going to start a new project

00:32:34,090 --> 00:32:39,170
start at Python 3 right because this is

00:32:37,550 --> 00:32:42,200
one of the other benefits we get is a

00:32:39,170 --> 00:32:43,610
much better error system and I saw this

00:32:42,200 --> 00:32:46,130
and test as we're testing and testing

00:32:43,610 --> 00:32:51,610
our upgrade to python 3 4 anaconda at

00:32:46,130 --> 00:32:53,630
work so that's the pep we're also

00:32:51,610 --> 00:32:56,720
there's a direct length there's a whole

00:32:53,630 --> 00:33:00,350
page of changes so again we've hit a

00:32:56,720 --> 00:33:02,690
couple of them right lists are sorry the

00:33:00,350 --> 00:33:04,850
way we print out strings some of the

00:33:02,690 --> 00:33:05,930
error handling there's another cute

00:33:04,850 --> 00:33:07,610
little thing that we're not going to go

00:33:05,930 --> 00:33:10,490
into because those examples get a little

00:33:07,610 --> 00:33:13,130
in-depth the map function which lets you

00:33:10,490 --> 00:33:15,140
map values to a function and then print

00:33:13,130 --> 00:33:17,990
them out as a list it used to be a list

00:33:15,140 --> 00:33:20,120
right we defined a list statically we

00:33:17,990 --> 00:33:22,580
said square bracket list

00:33:20,120 --> 00:33:25,970
vitam swear bracket map would do that

00:33:22,580 --> 00:33:27,320
for you in Python 3 it's an iterator so

00:33:25,970 --> 00:33:29,060
it's no longer a list if you had

00:33:27,320 --> 00:33:31,640
something using lists in Python 2 and

00:33:29,060 --> 00:33:33,350
you convert Python 3 you have to go find

00:33:31,640 --> 00:33:35,570
every single spot where you had that

00:33:33,350 --> 00:33:37,820
list and change it to use an iterator

00:33:35,570 --> 00:33:40,910
instead so when you it right over the

00:33:37,820 --> 00:33:45,680
loop and just little differences we've

00:33:40,910 --> 00:33:47,630
got and then here's the thing i actually

00:33:45,680 --> 00:33:49,970
got started programming with python to

00:33:47,630 --> 00:33:52,160
teach my ten-year-old so if you have

00:33:49,970 --> 00:33:53,990
kids and you want to figure out a good

00:33:52,160 --> 00:33:55,370
book to get them started on because i

00:33:53,990 --> 00:33:57,740
don't know about you but I don't let my

00:33:55,370 --> 00:33:59,620
ten-year-old go on the web by himself so

00:33:57,740 --> 00:34:02,720
this is a great way to get them started

00:33:59,620 --> 00:34:04,790
and I will test to that there's a link

00:34:02,720 --> 00:34:07,070
to it and the isbin that's on the no

00:34:04,790 --> 00:34:09,260
starch press website but whatever vendor

00:34:07,070 --> 00:34:10,730
you like I know that's a hot there's a

00:34:09,260 --> 00:34:12,050
hot topic last year I had some folks

00:34:10,730 --> 00:34:13,250
asking why i bought from certain vendors

00:34:12,050 --> 00:34:16,460
and so i'm not going to go there this

00:34:13,250 --> 00:34:18,710
year now do we have any more questions

00:34:16,460 --> 00:34:20,120
this was kind of 80,000 foot and I

00:34:18,710 --> 00:34:25,330
didn't see very many beginners so this

00:34:20,120 --> 00:34:25,330
is probably all base stuff right

00:34:25,510 --> 00:34:32,930
questions comments no I know there's

00:34:31,640 --> 00:34:34,810
probably somebody sitting out there and

00:34:32,930 --> 00:34:38,900
the Hangout going but I have questions

00:34:34,810 --> 00:34:41,030
so all right well I'm going to leave

00:34:38,900 --> 00:34:43,640
this with the last thing I always say

00:34:41,030 --> 00:34:45,620
always code is if the person who ends up

00:34:43,640 --> 00:34:47,300
maintaining your code is a violent

00:34:45,620 --> 00:34:49,430
psychopath who knows where you live and

00:34:47,300 --> 00:34:52,880
that's the beauty of Python right it

00:34:49,430 --> 00:34:55,310
enforces us to write with proper

00:34:52,880 --> 00:34:57,080
indentation proper spacing and this

00:34:55,310 --> 00:34:59,660
isn't as apropos but it's my favorite

00:34:57,080 --> 00:35:01,790
quote this is an oldie but a goodie from

00:34:59,660 --> 00:35:05,320
John F woods on conf lang C++ from the

00:35:01,790 --> 00:35:08,750
90s so when I got started long time ago

00:35:05,320 --> 00:35:13,850
I've kept it forever because my roommate

00:35:08,750 --> 00:35:16,580
was that psychopath so so thank you

00:35:13,850 --> 00:35:18,650
everybody and if you any questions other

00:35:16,580 --> 00:35:20,000
stuff more advanced to come on up again

00:35:18,650 --> 00:35:22,280
this was supposed to be an 80 thousand

00:35:20,000 --> 00:35:24,500
foot view of the language and I promise

00:35:22,280 --> 00:35:25,520
next year I will try and do something a

00:35:24,500 --> 00:35:28,430
little more advanced with Ruby and

00:35:25,520 --> 00:35:30,170
possibly Python so thank you for coming

00:35:28,430 --> 00:35:32,680
i hope everybody has a great wrestler

00:35:30,170 --> 00:35:32,680
conference

00:35:49,809 --> 00:35:51,869
you

00:36:19,610 --> 00:36:21,670
you

00:36:34,500 --> 00:36:38,850
Citrix XenServer gives you everything

00:36:36,600 --> 00:36:41,790
you need to integrate manage and

00:36:38,850 --> 00:36:43,920
automate a virtual data center all on an

00:36:41,790 --> 00:36:46,320
enterprise-class cloud proven virtual

00:36:43,920 --> 00:36:49,080
platform and at a third of the cost of

00:36:46,320 --> 00:36:50,790
other solutions but why even bother with

00:36:49,080 --> 00:36:52,950
virtualizing your server infrastructure

00:36:50,790 --> 00:36:54,900
in the first place well let's say you

00:36:52,950 --> 00:36:57,210
have a traditional one server to one

00:36:54,900 --> 00:36:59,220
application architecture but you're

00:36:57,210 --> 00:37:01,770
running out of resources and performance

00:36:59,220 --> 00:37:04,100
is suffering once you order new server

00:37:01,770 --> 00:37:06,960
hardware you'll wait for delivery

00:37:04,100 --> 00:37:09,870
configure it install your business

00:37:06,960 --> 00:37:12,630
application stage and test the server

00:37:09,870 --> 00:37:14,820
and finally add it to your production

00:37:12,630 --> 00:37:17,040
farm if you've been through this process

00:37:14,820 --> 00:37:19,530
before you know it can take weeks or

00:37:17,040 --> 00:37:22,220
even months you also know it's a

00:37:19,530 --> 00:37:22,220
manually intensive

00:37:25,070 --> 00:37:27,130
you

00:37:27,960 --> 00:37:30,020
you

00:37:33,290 --> 00:37:35,350
you

00:37:51,569 --> 00:37:53,630
you

00:39:03,000 --> 00:39:05,060
you

00:39:47,140 --> 00:39:51,440
your customers rely on your website or

00:39:49,880 --> 00:39:53,780
application if it's slower

00:39:51,440 --> 00:39:56,690
non-responsive it infuriates your users

00:39:53,780 --> 00:39:58,550
and costs you money keeping your

00:39:56,690 --> 00:40:01,720
business critical systems humming along

00:39:58,550 --> 00:40:04,370
requires insight into what they're doing

00:40:01,720 --> 00:40:06,470
your system metrics tells stories

00:40:04,370 --> 00:40:08,360
stories that can reveal performance

00:40:06,470 --> 00:40:10,670
bottlenecks resource limitations and

00:40:08,360 --> 00:40:12,260
other problems but how do you keep an

00:40:10,670 --> 00:40:14,900
eye on all of your systems performance

00:40:12,260 --> 00:40:17,900
metrics in real-time and record this

00:40:14,900 --> 00:40:19,910
data for later analysis enter longview

00:40:17,900 --> 00:40:21,680
the new way to see what's really going

00:40:19,910 --> 00:40:23,870
on under the hood the long view

00:40:21,680 --> 00:40:25,910
dashboard lets you visualize the status

00:40:23,870 --> 00:40:28,370
of all your systems providing you with a

00:40:25,910 --> 00:40:30,580
bird's-eye view of your entire fleet you

00:40:28,370 --> 00:40:30,580
can

00:40:36,510 --> 00:40:38,570
you

00:40:42,060 --> 00:40:44,120
you

00:41:28,890 --> 00:41:30,950
you

00:41:40,069 --> 00:41:42,130
you

00:42:24,510 --> 00:42:28,810
Citrix XenServer gives you everything

00:42:26,770 --> 00:42:31,750
you need to integrate manage and

00:42:28,810 --> 00:42:33,880
automate a virtual data center all on an

00:42:31,750 --> 00:42:36,280
enterprise-class cloud proven virtual

00:42:33,880 --> 00:42:39,010
platform and at a third of the cost of

00:42:36,280 --> 00:42:40,720
other solutions but why even bother with

00:42:39,010 --> 00:42:42,880
virtualizing your server infrastructure

00:42:40,720 --> 00:42:44,830
in the first place well let's say you

00:42:42,880 --> 00:42:47,170
have a traditional one server to one

00:42:44,830 --> 00:42:49,150
application architecture but you're

00:42:47,170 --> 00:42:51,700
running out of resources and performance

00:42:49,150 --> 00:42:54,030
is suffering once you order new server

00:42:51,700 --> 00:42:56,920
hardware you'll wait for delivery

00:42:54,030 --> 00:42:59,830
configure it install your business

00:42:56,920 --> 00:43:02,560
application stage and test the server

00:42:59,830 --> 00:43:04,750
and finally add it to your production

00:43:02,560 --> 00:43:06,970
farm if you've been through this process

00:43:04,750 --> 00:43:09,490
before you know it can take weeks or

00:43:06,970 --> 00:43:11,320
even months you also know it's a

00:43:09,490 --> 00:43:13,270
manually intensive process that will

00:43:11,320 --> 00:43:16,600
burden your team every time you outgrow

00:43:13,270 --> 00:43:18,370
your current setup with a virtual server

00:43:16,600 --> 00:43:21,160
solution you could accomplish all of

00:43:18,370 --> 00:43:23,710
that in less than half a day server

00:43:21,160 --> 00:43:25,540
virtualization software separates the OS

00:43:23,710 --> 00:43:27,970
and application from the underlying

00:43:25,540 --> 00:43:30,130
server hardware and with multiple

00:43:27,970 --> 00:43:31,810
virtual machines on a single server you

00:43:30,130 --> 00:43:34,810
can use each of them to run different

00:43:31,810 --> 00:43:36,580
os's and applications this makes it

00:43:34,810 --> 00:43:38,350
possible to move your virtual machines

00:43:36,580 --> 00:43:40,450
from one piece of hardware to another

00:43:38,350 --> 00:43:42,700
whenever you want to maximize

00:43:40,450 --> 00:43:44,680
utilization simplify maintenance or

00:43:42,700 --> 00:43:46,990
recover from a hardware failure and

00:43:44,680 --> 00:43:50,320
without slowing down your applications

00:43:46,990 --> 00:43:52,990
or users clearly server virtualization

00:43:50,320 --> 00:43:55,990
provides big benefits and Citrix

00:43:52,990 --> 00:43:58,240
XenServer provides even more since it's

00:43:55,990 --> 00:44:00,100
built on an open platform xenserver

00:43:58,240 --> 00:44:02,500
plates well with your existing hardware

00:44:00,100 --> 00:44:04,690
storage systems and IT management

00:44:02,500 --> 00:44:07,390
software as well as with the industry's

00:44:04,690 --> 00:44:09,460
leading cloud service providers best of

00:44:07,390 --> 00:44:11,170
all you can get started by downloading a

00:44:09,460 --> 00:44:14,380
fully functional production ready

00:44:11,170 --> 00:44:16,630
version of xenserver for free after a

00:44:14,380 --> 00:44:18,730
10-minute installation process you'll

00:44:16,630 --> 00:44:20,740
see how easy it is to start virtualizing

00:44:18,730 --> 00:44:23,200
your workloads and automating your IT

00:44:20,740 --> 00:44:24,790
management processes and when you're

00:44:23,200 --> 00:44:26,710
ready for a richer set of management

00:44:24,790 --> 00:44:29,230
tools just upgrade to one of the premium

00:44:26,710 --> 00:44:31,060
editions of xenserver so whether you're

00:44:29,230 --> 00:44:31,900
interested in virtualizing servers for

00:44:31,060 --> 00:44:33,490
the first time

00:44:31,900 --> 00:44:36,309
expanding your server virtualization

00:44:33,490 --> 00:44:39,039
footprint or moving server workloads to

00:44:36,309 --> 00:44:40,809
the cloud download and install xenserver

00:44:39,039 --> 00:44:43,720
today and see how it can help you

00:44:40,809 --> 00:44:49,109
simplify your IT environment citrix

00:44:43,720 --> 00:44:49,109
xenserver do more don't spend more

00:46:47,690 --> 00:46:52,050
your customers rely on your website or

00:46:50,490 --> 00:46:54,480
application if it's slower

00:46:52,050 --> 00:46:57,450
non-responsive it infuriates your users

00:46:54,480 --> 00:46:59,280
and costs you money keeping your

00:46:57,450 --> 00:47:02,740
business critical systems humming along

00:46:59,280 --> 00:47:05,110
requires insight into what they're doing

00:47:02,740 --> 00:47:07,060
your system metrics tells stories

00:47:05,110 --> 00:47:09,040
stories that can reveal performance

00:47:07,060 --> 00:47:11,350
bottlenecks resource limitations and

00:47:09,040 --> 00:47:12,940
other problems but how do you keep an

00:47:11,350 --> 00:47:15,580
eye on all of your systems performance

00:47:12,940 --> 00:47:18,610
metrics in real-time and record this

00:47:15,580 --> 00:47:20,350
data for leader analysis enter long view

00:47:18,610 --> 00:47:22,390
the new way to see what's really going

00:47:20,350 --> 00:47:24,550
on under the hood the long view

00:47:22,390 --> 00:47:26,590
dashboard lets you visualize the status

00:47:24,550 --> 00:47:29,050
of all your systems providing you with a

00:47:26,590 --> 00:47:32,440
bird's-eye view of your entire fleet you

00:47:29,050 --> 00:47:35,020
can sort by cpu memory swap processes

00:47:32,440 --> 00:47:36,760
load and network usage click a specific

00:47:35,020 --> 00:47:39,160
system to access its individual

00:47:36,760 --> 00:47:41,700
dashboard then click and drag to zoom in

00:47:39,160 --> 00:47:44,080
on chokepoints and get more detail

00:47:41,700 --> 00:47:45,700
comprehensive network data including

00:47:44,080 --> 00:47:48,010
inbound and outbound traffic is

00:47:45,700 --> 00:47:49,990
available on the network tab and disk

00:47:48,010 --> 00:47:52,119
rights and free space on a disk stabbed

00:47:49,990 --> 00:47:54,340
while the process explorer displays

00:47:52,119 --> 00:47:56,860
usage statistics for individual

00:47:54,340 --> 00:47:59,050
processes the system info tab shows

00:47:56,860 --> 00:48:01,270
listening services active connections

00:47:59,050 --> 00:48:03,400
and available updates adding long view

00:48:01,270 --> 00:48:05,110
to a system is easy just click the

00:48:03,400 --> 00:48:07,270
button copy the one line installation

00:48:05,110 --> 00:48:09,700
command then run the command on your

00:48:07,270 --> 00:48:11,380
linux system to complete the process the

00:48:09,700 --> 00:48:13,600
agent will begin collecting data and

00:48:11,380 --> 00:48:15,400
sending it to longview then the graphs

00:48:13,600 --> 00:48:17,980
start rolling

00:48:15,400 --> 00:48:20,380
use longview to gain visibility into

00:48:17,980 --> 00:48:24,119
your servers so when your website or app

00:48:20,380 --> 00:48:24,119
heats up it stays up

00:48:29,900 --> 00:48:31,960

YouTube URL: https://www.youtube.com/watch?v=9T7vbXDsh3Y


