Title: Mary Cochran - Lessons Learned in Using IoT Devices in Industry
Publication date: 2018-04-21
Playlist: 2017 SouthEast LinuxFest
Description: 
	2017 SouthEast LinuxFest
Mary Cochran
Lessons Learned in Using IoT Devices in Industry
Captions: 
	00:00:00,020 --> 00:00:04,650
the following presentations were

00:00:02,520 --> 00:00:07,620
supported at the southeast Linux Fest in

00:00:04,650 --> 00:00:10,469
Charlotte North Carolina it is licensed

00:00:07,620 --> 00:00:12,240
under a Creative Commons license for

00:00:10,469 --> 00:00:18,049
more information about the south east

00:00:12,240 --> 00:00:18,049
linux fest please visit www.flexsim.com

00:00:18,199 --> 00:00:22,500
in expense would like to thank the

00:00:20,580 --> 00:00:28,949
following diamond sponsors for helping

00:00:22,500 --> 00:00:31,050
make these videos possible so we can go

00:00:28,949 --> 00:00:31,850
ahead and get started if you guys good

00:00:31,050 --> 00:00:35,579
with that

00:00:31,850 --> 00:00:36,149
so my name's Mary coffee and I work for

00:00:35,579 --> 00:00:38,280
Red Hat

00:00:36,149 --> 00:00:40,829
so hopefully success hopefully you're

00:00:38,280 --> 00:00:43,620
familiar a little bit with Red Hat and I

00:00:40,829 --> 00:00:47,309
work on the middleware side kind of the

00:00:43,620 --> 00:00:49,890
opposite side of the operating system so

00:00:47,309 --> 00:00:51,750
I've been there for three years and

00:00:49,890 --> 00:00:54,120
today I'll be talking about lessons

00:00:51,750 --> 00:00:56,539
learned from using IOT devices and

00:00:54,120 --> 00:00:56,539
Industry

00:01:06,549 --> 00:01:11,409
okay so a little bit about my experience

00:01:09,310 --> 00:01:14,500
and where these lessons are coming from

00:01:11,409 --> 00:01:16,899
I was on a long term engagements and a

00:01:14,500 --> 00:01:19,689
consistent so I worked with various

00:01:16,899 --> 00:01:24,460
clients one of my clients was putting

00:01:19,689 --> 00:01:28,719
together a bunch of revamp of a system

00:01:24,460 --> 00:01:31,780
so the company had mostly been focused

00:01:28,719 --> 00:01:34,209
on the hardware the fare box is where

00:01:31,780 --> 00:01:36,130
you top your past to get on the bus or

00:01:34,209 --> 00:01:38,140
train as well as the gerontology

00:01:36,130 --> 00:01:40,179
walkthrough and then also the

00:01:38,140 --> 00:01:42,459
point-of-sale systems so our goal was to

00:01:40,179 --> 00:01:45,909
get them more into the software side of

00:01:42,459 --> 00:01:48,220
things and also update those devices so

00:01:45,909 --> 00:01:50,619
in turn a lot of those devices the fare

00:01:48,220 --> 00:01:55,289
boxes the point of sales ended up being

00:01:50,619 --> 00:01:59,649
modeled as those Internet of Things

00:01:55,289 --> 00:02:01,659
so what is your thing we're gonna go

00:01:59,649 --> 00:02:03,729
over a little bit of what that is what

00:02:01,659 --> 00:02:05,110
the use cases then I'll jump into the

00:02:03,729 --> 00:02:07,209
lessons which will be the ball for the

00:02:05,110 --> 00:02:08,170
presentation a little conclusion and

00:02:07,209 --> 00:02:14,470
then there should be some time for

00:02:08,170 --> 00:02:16,480
questions so I would say use case so the

00:02:14,470 --> 00:02:18,819
other day I was watching Silicon Valley

00:02:16,480 --> 00:02:22,930
the little spoiler alert for anyone who

00:02:18,819 --> 00:02:25,380
watches that so Danny ain't got a smart

00:02:22,930 --> 00:02:28,799
fridge so that's a classic example of

00:02:25,380 --> 00:02:30,910
area things taking an appliance and

00:02:28,799 --> 00:02:34,389
making it connected to some sort of

00:02:30,910 --> 00:02:37,510
larger system and you can leverage the

00:02:34,389 --> 00:02:39,579
data to improve the efficiency so the

00:02:37,510 --> 00:02:42,250
guys were rocked by and someone said

00:02:39,579 --> 00:02:43,120
something to the effect of something

00:02:42,250 --> 00:02:46,540
about Wheat Thins

00:02:43,120 --> 00:02:48,489
and the Fitch says oh we don't have any

00:02:46,540 --> 00:02:53,079
we thing would you like to add those to

00:02:48,489 --> 00:02:54,669
your shopping list they sure so that's

00:02:53,079 --> 00:02:57,400
one of the main purposes of internet

00:02:54,669 --> 00:02:59,500
things is to have a device that can

00:02:57,400 --> 00:03:03,519
leverage some sort of data with a

00:02:59,500 --> 00:03:05,950
consumer and use it in some way so in my

00:03:03,519 --> 00:03:08,410
case with these fare boxes and point of

00:03:05,950 --> 00:03:11,370
sale systems they were taking the rider

00:03:08,410 --> 00:03:14,500
data and sending it back up to the cloud

00:03:11,370 --> 00:03:17,380
so that the user could then see their

00:03:14,500 --> 00:03:20,250
history see their activity and have some

00:03:17,380 --> 00:03:24,069
more up-to-date information and a user

00:03:20,250 --> 00:03:25,870
and so with things the devices are

00:03:24,069 --> 00:03:28,420
connected to some sort of larger network

00:03:25,870 --> 00:03:31,510
and they communicate with the cloud that

00:03:28,420 --> 00:03:33,700
communication goes back and forth for

00:03:31,510 --> 00:03:38,170
this more up-to-date data and also to

00:03:33,700 --> 00:03:40,180
leverage that data so some examples I

00:03:38,170 --> 00:03:44,140
mentioned the smart fridge another

00:03:40,180 --> 00:03:46,870
example that has a lot of use today is

00:03:44,140 --> 00:03:48,849
if it you think about wearing a Fitbit I

00:03:46,870 --> 00:03:50,859
keep track of all your steps and then it

00:03:48,849 --> 00:03:53,379
sends that up for some sort of larger

00:03:50,859 --> 00:03:56,290
system and then you can view that in

00:03:53,379 --> 00:03:59,230
your mobile application so it's a good

00:03:56,290 --> 00:04:06,700
example of sensors and so it's something

00:03:59,230 --> 00:04:09,189
that you're walking so less than one

00:04:06,700 --> 00:04:13,090
start small

00:04:09,189 --> 00:04:15,340
starting small is something that makes

00:04:13,090 --> 00:04:18,310
sense to do when developing pretty much

00:04:15,340 --> 00:04:20,470
any enterprise application but I found

00:04:18,310 --> 00:04:25,000
it to be particularly true with working

00:04:20,470 --> 00:04:27,070
with devices and in those things the

00:04:25,000 --> 00:04:30,070
devices in general or at least the ones

00:04:27,070 --> 00:04:33,130
that I was working with were a lot more

00:04:30,070 --> 00:04:35,169
difficult to have their software updated

00:04:33,130 --> 00:04:37,570
so it was really important to make sure

00:04:35,169 --> 00:04:39,669
that whatever we did was right to begin

00:04:37,570 --> 00:04:43,770
with and that's easier to do if you're

00:04:39,669 --> 00:04:46,599
starting small so how do you start small

00:04:43,770 --> 00:04:48,610
first get your devices connected to the

00:04:46,599 --> 00:04:49,840
network so that way they can the

00:04:48,610 --> 00:04:52,630
Internet of Things and you ensure that

00:04:49,840 --> 00:04:55,260
that communication it's back and forth

00:04:52,630 --> 00:04:58,720
immediately

00:04:55,260 --> 00:05:01,479
don't rush so start with just some sort

00:04:58,720 --> 00:05:05,650
of simple mock service where your device

00:05:01,479 --> 00:05:07,449
can say hello world and that's

00:05:05,650 --> 00:05:10,139
everything back and forth to the cloud

00:05:07,449 --> 00:05:13,630
and you can log it further that's there

00:05:10,139 --> 00:05:16,620
if you don't have proper direction start

00:05:13,630 --> 00:05:19,960
and to plan for that growth and change

00:05:16,620 --> 00:05:22,330
agile is you know form of development

00:05:19,960 --> 00:05:24,699
that's very popular right now to do that

00:05:22,330 --> 00:05:26,560
iterative development so definitely plan

00:05:24,699 --> 00:05:30,279
for that you're gonna have change you're

00:05:26,560 --> 00:05:33,060
gonna have growth but essentially just

00:05:30,279 --> 00:05:36,980
try and do the right thing first

00:05:33,060 --> 00:05:38,850
use the old adage measure twice cut once

00:05:36,980 --> 00:05:41,850
I'm straight enough to add the

00:05:38,850 --> 00:05:43,650
complexity right away and with this

00:05:41,850 --> 00:05:46,500
starting small you can plan for life

00:05:43,650 --> 00:05:48,440
growth and that flexibility and choose

00:05:46,500 --> 00:05:50,400
the right chewing I mention this because

00:05:48,440 --> 00:05:54,480
recently I've been on an engagement

00:05:50,400 --> 00:05:57,450
where we initially were using github and

00:05:54,480 --> 00:06:00,590
get and then the client needs us to

00:05:57,450 --> 00:06:03,000
remember to RTC which was a very painful

00:06:00,590 --> 00:06:08,370
transition if you're familiar with RTC

00:06:03,000 --> 00:06:10,410
it's people yeah yep so if you can

00:06:08,370 --> 00:06:12,810
choose right tooling to begin with then

00:06:10,410 --> 00:06:17,639
that will help with ensuring that your

00:06:12,810 --> 00:06:20,639
development more smoothly overall so

00:06:17,639 --> 00:06:26,880
some other benefits that you get from

00:06:20,639 --> 00:06:29,790
this starting small testing and error

00:06:26,880 --> 00:06:31,470
handling so a lot of times these are

00:06:29,790 --> 00:06:33,510
things to get skipped at the beginning

00:06:31,470 --> 00:06:35,400
but if you're starting small with your

00:06:33,510 --> 00:06:37,020
actual implementation then maybe you

00:06:35,400 --> 00:06:39,120
have more time to do that testing and

00:06:37,020 --> 00:06:41,970
error handling I found this to be

00:06:39,120 --> 00:06:43,320
visually Shariff devices just because as

00:06:41,970 --> 00:06:46,050
I mentioned the devices we were working

00:06:43,320 --> 00:06:47,880
with could only be changed every six

00:06:46,050 --> 00:06:51,630
months they're soft perfect get updated

00:06:47,880 --> 00:06:54,450
it wasn't some to do on a very quick

00:06:51,630 --> 00:06:58,169
basis so being able to testing

00:06:54,450 --> 00:07:00,240
especially setup right away a lot of for

00:06:58,169 --> 00:07:03,389
us to ensure that any development done

00:07:00,240 --> 00:07:05,610
on the software side we could ensure

00:07:03,389 --> 00:07:10,410
that that was good and consistent

00:07:05,610 --> 00:07:12,690
throughout our development process so

00:07:10,410 --> 00:07:14,900
everything doing that's another thing as

00:07:12,690 --> 00:07:18,450
a says they get skipped a lot and

00:07:14,900 --> 00:07:20,280
without exception handling you can

00:07:18,450 --> 00:07:22,889
decide if the device is going to handle

00:07:20,280 --> 00:07:24,090
it if the application is going to handle

00:07:22,889 --> 00:07:27,330
it

00:07:24,090 --> 00:07:30,510
and it allows you to see what errors are

00:07:27,330 --> 00:07:33,180
going to happen even at that small level

00:07:30,510 --> 00:07:35,430
so that way you can see okay this

00:07:33,180 --> 00:07:37,590
specific exception might come up here's

00:07:35,430 --> 00:07:39,180
how we might want to handle it versus

00:07:37,590 --> 00:07:41,400
when you know you have all this

00:07:39,180 --> 00:07:43,110
development done then something comes up

00:07:41,400 --> 00:07:44,940
you might have to search to figure out

00:07:43,110 --> 00:07:46,830
where it's coming from so if you can

00:07:44,940 --> 00:07:49,380
know those things at the base level

00:07:46,830 --> 00:07:55,470
they'll help with the rest of the

00:07:49,380 --> 00:07:57,360
development so security I mentioned

00:07:55,470 --> 00:07:59,610
getting the devices connected with some

00:07:57,360 --> 00:08:01,590
sort of mock service right away but

00:07:59,610 --> 00:08:05,250
security doing our right away is just as

00:08:01,590 --> 00:08:06,690
important could you learn with devices

00:08:05,250 --> 00:08:08,460
you want to ensure that you're not

00:08:06,690 --> 00:08:10,890
getting any bad information and that you

00:08:08,460 --> 00:08:13,830
can trust whatever it is Sunday you know

00:08:10,890 --> 00:08:16,620
so ensure that that's done before he

00:08:13,830 --> 00:08:20,160
MoveOn that's one thing that gets

00:08:16,620 --> 00:08:22,380
skipped a lot and when I was doing the

00:08:20,160 --> 00:08:24,150
development with this these fare boxes

00:08:22,380 --> 00:08:28,980
and point-of-sales it was completely

00:08:24,150 --> 00:08:30,900
stripped to begin with so having dual to

00:08:28,980 --> 00:08:32,850
just call a plane rest end point to

00:08:30,900 --> 00:08:35,940
having to actually secure them was a

00:08:32,850 --> 00:08:38,760
very great situation and required a

00:08:35,940 --> 00:08:40,230
decent amount of refactor versus had

00:08:38,760 --> 00:08:42,000
just been done in the beginning when we

00:08:40,230 --> 00:08:45,210
had a mock service so what if I'm really

00:08:42,000 --> 00:08:49,320
simple to set up so ensure that you get

00:08:45,210 --> 00:08:51,900
that set up before you move on um class

00:08:49,320 --> 00:08:56,790
loading I mentioned this because we were

00:08:51,900 --> 00:08:59,400
using an OS GI platform with gave us

00:08:56,790 --> 00:09:03,750
views funny ones familiar with that so

00:08:59,400 --> 00:09:05,700
OSGi is very good at showing you class

00:09:03,750 --> 00:09:09,150
loading issues but if you try and start

00:09:05,700 --> 00:09:10,800
too big you will run into a lot of them

00:09:09,150 --> 00:09:12,300
and not know exactly what's going on

00:09:10,800 --> 00:09:14,850
especially for people that are new with

00:09:12,300 --> 00:09:19,140
it so starting small it tends to prevent

00:09:14,850 --> 00:09:20,430
that with je you can all enjoy some of

00:09:19,140 --> 00:09:22,920
the same issues there just might be a

00:09:20,430 --> 00:09:24,330
little bit more hidden because maven

00:09:22,920 --> 00:09:27,720
might be picking and choosing what

00:09:24,330 --> 00:09:30,630
version you're using through those

00:09:27,720 --> 00:09:32,310
dependence issues so these are small you

00:09:30,630 --> 00:09:34,790
can ensure that you're using the right

00:09:32,310 --> 00:09:38,430
versions and everything to begin with

00:09:34,790 --> 00:09:41,310
huh PCI compliance this is something

00:09:38,430 --> 00:09:43,110
that has come up at multiple clients of

00:09:41,310 --> 00:09:47,150
mine any time you have credit cards

00:09:43,110 --> 00:09:48,930
involved something to consider so

00:09:47,150 --> 00:09:51,000
something to think about when you're

00:09:48,930 --> 00:09:53,070
starting small is personal information

00:09:51,000 --> 00:09:55,700
and that kind of goes back in with the

00:09:53,070 --> 00:09:58,680
security aspect and ensuring that

00:09:55,700 --> 00:10:00,819
everything that you're storing is secure

00:09:58,680 --> 00:10:03,549
to the point that it needs to be

00:10:00,819 --> 00:10:04,779
and that you know any transmissions are

00:10:03,549 --> 00:10:08,350
secret to the points that they need to

00:10:04,779 --> 00:10:10,629
be so check those informations and

00:10:08,350 --> 00:10:11,859
you'll the time and bandwidth to do that

00:10:10,629 --> 00:10:14,850
when you're starting small that you

00:10:11,859 --> 00:10:14,850
might not otherwise have

00:10:16,379 --> 00:10:21,609
so some benefits of sardis log touch

00:10:19,600 --> 00:10:25,509
Tommy's a little bit but this should

00:10:21,609 --> 00:10:27,609
hopefully give a good overview so you

00:10:25,509 --> 00:10:29,829
know strong foundation you mentioned

00:10:27,609 --> 00:10:32,109
those known errors that maybe you'll see

00:10:29,829 --> 00:10:34,299
you from starting small so give that

00:10:32,109 --> 00:10:36,819
strong foundation that once you have all

00:10:34,299 --> 00:10:38,619
that figured out and you know okay this

00:10:36,819 --> 00:10:41,919
communication with these devices goes

00:10:38,619 --> 00:10:44,079
back and forth and does well doing that

00:10:41,919 --> 00:10:49,720
you can know that any issues run into

00:10:44,079 --> 00:10:51,489
art in that layer useful documentation

00:10:49,720 --> 00:10:52,929
so another thing with starting small

00:10:51,489 --> 00:10:54,819
along with the testing and error

00:10:52,929 --> 00:10:58,479
handling is you'll have the time to

00:10:54,819 --> 00:11:00,669
document so with that things become more

00:10:58,479 --> 00:11:02,109
maintainable if you have people roll off

00:11:00,669 --> 00:11:03,999
the project roll onto the project

00:11:02,109 --> 00:11:06,970
they'll be able to ramp up quicker

00:11:03,999 --> 00:11:09,699
because of that documentation that's

00:11:06,970 --> 00:11:11,829
definitely something that I see get

00:11:09,699 --> 00:11:15,669
postponed until the very end of projects

00:11:11,829 --> 00:11:19,600
a lot of the time so quality code

00:11:15,669 --> 00:11:22,929
reviews no one likes doing code reviews

00:11:19,600 --> 00:11:24,970
that are ten thousand five code so if

00:11:22,929 --> 00:11:27,129
you start off with the code review that

00:11:24,970 --> 00:11:30,039
is massive and far less likely to

00:11:27,129 --> 00:11:32,559
thoroughly rip it if you start off with

00:11:30,039 --> 00:11:34,149
something small then they'll have the

00:11:32,559 --> 00:11:38,220
time to actually go through and do that

00:11:34,149 --> 00:11:43,569
so you're setting up this pattern of

00:11:38,220 --> 00:11:45,970
rigidly and then you can ensure that you

00:11:43,569 --> 00:11:48,579
have a high degree of maintainability

00:11:45,970 --> 00:11:49,659
throughout the project so that'll be

00:11:48,579 --> 00:11:51,759
true with your development on the

00:11:49,659 --> 00:11:57,729
devices development on the software all

00:11:51,759 --> 00:11:59,859
across your project development so

00:11:57,729 --> 00:12:04,299
security shortcuts this is one of the

00:11:59,859 --> 00:12:08,319
areas I mentioned that we had not really

00:12:04,299 --> 00:12:11,709
implemented before with the devices and

00:12:08,319 --> 00:12:13,710
then it led to a lot of refactor down

00:12:11,709 --> 00:12:16,740
the line so

00:12:13,710 --> 00:12:19,920
things like hard coding passwords you

00:12:16,740 --> 00:12:23,100
know my save some time it's gonna you

00:12:19,920 --> 00:12:26,430
know lead to more work overall later to

00:12:23,100 --> 00:12:28,830
adjust those things think about

00:12:26,430 --> 00:12:30,030
encrypting data that needs to be secured

00:12:28,830 --> 00:12:32,040
try and do this thing in your

00:12:30,030 --> 00:12:33,900
foundational level so you don't have to

00:12:32,040 --> 00:12:39,390
worry about them down the line be much

00:12:33,900 --> 00:12:42,690
simpler so lesson two is it finally you

00:12:39,390 --> 00:12:44,910
can this all goes into requirements so

00:12:42,690 --> 00:12:47,220
things all tomatoes these requirements

00:12:44,910 --> 00:12:50,760
sometimes and sometimes are difficult

00:12:47,220 --> 00:12:54,600
together agile can be great for that to

00:12:50,760 --> 00:12:57,870
try and get some iteration going of okay

00:12:54,600 --> 00:13:00,540
we have these requirements now go with

00:12:57,870 --> 00:13:03,270
that until we have the rest of their

00:13:00,540 --> 00:13:05,790
requirements but getting what you can

00:13:03,270 --> 00:13:08,010
can definitely help to avoid any changes

00:13:05,790 --> 00:13:11,610
down the road that may be put it been

00:13:08,010 --> 00:13:14,550
avoided so where to start with those

00:13:11,610 --> 00:13:16,770
requirements device requirements how

00:13:14,550 --> 00:13:18,420
often do the devices you need to be

00:13:16,770 --> 00:13:20,910
connected to the system are they

00:13:18,420 --> 00:13:22,320
connected constantly are they because

00:13:20,910 --> 00:13:26,220
you communicate in with the overall

00:13:22,320 --> 00:13:29,040
system find out that type of thing if

00:13:26,220 --> 00:13:31,560
they do go offline are they allowed to

00:13:29,040 --> 00:13:33,720
work offline and for example our

00:13:31,560 --> 00:13:36,480
point-of-sale systems they were allowed

00:13:33,720 --> 00:13:38,190
to work offline for an hour and after

00:13:36,480 --> 00:13:40,710
that hour they weren't back online

00:13:38,190 --> 00:13:44,160
they had to go out of service until they

00:13:40,710 --> 00:13:46,500
were online which is a lot to do with

00:13:44,160 --> 00:13:48,810
more some of that storage capability of

00:13:46,500 --> 00:13:52,890
the device but sometimes there might be

00:13:48,810 --> 00:13:55,530
a requirement so that you don't end up

00:13:52,890 --> 00:13:59,850
with a mismatch between your devices and

00:13:55,530 --> 00:14:01,770
your cloud system so how secure distance

00:13:59,850 --> 00:14:05,040
would need to be talked about security

00:14:01,770 --> 00:14:08,190
so he's kind of this goes hand-in-hand

00:14:05,040 --> 00:14:10,050
with that first lesson with the security

00:14:08,190 --> 00:14:13,560
aspect find out how secure it needs to

00:14:10,050 --> 00:14:16,170
be and sometimes Haitians enough for

00:14:13,560 --> 00:14:18,510
your doing sometimes you want everything

00:14:16,170 --> 00:14:23,490
to be encrypted and figure across the

00:14:18,510 --> 00:14:27,120
board so find out how secure things need

00:14:23,490 --> 00:14:27,550
to be and also very important define and

00:14:27,120 --> 00:14:31,000
odd

00:14:27,550 --> 00:14:32,470
so I mentioned 50 earlier what would

00:14:31,000 --> 00:14:33,790
happen if they had never defied the

00:14:32,470 --> 00:14:37,899
audience they probably wouldn't have a

00:14:33,790 --> 00:14:40,000
device cuz I said okay we're gonna make

00:14:37,899 --> 00:14:42,220
this bracelet tech thing so that people

00:14:40,000 --> 00:14:45,579
can keep track of their steps and get

00:14:42,220 --> 00:14:47,709
more in shape some smart appliances like

00:14:45,579 --> 00:14:50,110
I've enough to help where the mess was

00:14:47,709 --> 00:14:53,740
made for people that are homeowners if

00:14:50,110 --> 00:14:56,649
they designed it for people that had a

00:14:53,740 --> 00:15:01,089
camper or we're renting it probably

00:14:56,649 --> 00:15:03,970
wouldn't have been as popular so with

00:15:01,089 --> 00:15:05,980
the public transit system one thing we

00:15:03,970 --> 00:15:07,480
didn't know was how secure the devices

00:15:05,980 --> 00:15:10,120
need to be which is one of the things

00:15:07,480 --> 00:15:12,550
that light therapy is implemented

00:15:10,120 --> 00:15:14,130
initially without that security see if

00:15:12,550 --> 00:15:16,690
you can find out those things upfront

00:15:14,130 --> 00:15:17,620
then you can avoid a lot of those issues

00:15:16,690 --> 00:15:23,260
down the line

00:15:17,620 --> 00:15:27,459
Oh other things to consider who is going

00:15:23,260 --> 00:15:30,220
to manage what so with devices there's

00:15:27,459 --> 00:15:33,220
got to be some set up thinking about

00:15:30,220 --> 00:15:34,930
okay who's in charge of how this device

00:15:33,220 --> 00:15:36,850
is going to be set up what software is

00:15:34,930 --> 00:15:38,110
going to be installed on it is that

00:15:36,850 --> 00:15:40,750
something that it's by the cloud is that

00:15:38,110 --> 00:15:43,300
something managed by a person that they

00:15:40,750 --> 00:15:46,000
install it in person where is that

00:15:43,300 --> 00:15:49,839
information stored those are all things

00:15:46,000 --> 00:15:51,610
to think about with the devices also who

00:15:49,839 --> 00:15:54,910
handles airs I'll talk more on this a

00:15:51,610 --> 00:15:57,459
little bit later of my opinion and

00:15:54,910 --> 00:16:02,230
lesson on handling errors but

00:15:57,459 --> 00:16:05,649
determining who your client wants to

00:16:02,230 --> 00:16:07,180
handle those areas is important is it in

00:16:05,649 --> 00:16:09,520
this application that application the

00:16:07,180 --> 00:16:12,040
device the embedded software and the

00:16:09,520 --> 00:16:15,070
device and who's going to hold that

00:16:12,040 --> 00:16:17,860
responsibility and will depend on how

00:16:15,070 --> 00:16:19,390
you implement those errantly situations

00:16:17,860 --> 00:16:21,760
done

00:16:19,390 --> 00:16:25,269
versioning find out what version the

00:16:21,760 --> 00:16:29,740
frameworks you can use and find out what

00:16:25,269 --> 00:16:31,149
the device can support so this also goes

00:16:29,740 --> 00:16:33,190
back a little bit to those cross-cutting

00:16:31,149 --> 00:16:35,350
issues I know conversions first you can

00:16:33,190 --> 00:16:36,640
avoid some of those cost loading issues

00:16:35,350 --> 00:16:40,959
because you can make sure that the

00:16:36,640 --> 00:16:41,379
version thing is right to begin with one

00:16:40,959 --> 00:16:44,139
thing if you

00:16:41,379 --> 00:16:46,749
Boyd stop version code choice version

00:16:44,139 --> 00:16:48,729
your code it's going to change hopefully

00:16:46,749 --> 00:16:51,729
over the quest time reverses your code

00:16:48,729 --> 00:16:54,039
will change so try to get that

00:16:51,729 --> 00:16:55,479
implemented right away and define some

00:16:54,039 --> 00:16:57,309
sort of process as to how you're going

00:16:55,479 --> 00:17:00,849
to version it are there we snapshots

00:16:57,309 --> 00:17:02,889
releases every gelatin version going to

00:17:00,849 --> 00:17:10,269
change and reprint get that process

00:17:02,889 --> 00:17:11,519
defined so messaging requirements with

00:17:10,269 --> 00:17:13,990
talking about Internet of Things

00:17:11,519 --> 00:17:16,629
typically a lot of messaging going on

00:17:13,990 --> 00:17:18,759
the communication between the device and

00:17:16,629 --> 00:17:21,519
the network so some things to consider

00:17:18,759 --> 00:17:25,209
with messaging acquirements is does the

00:17:21,519 --> 00:17:28,779
order of your messages matter the order

00:17:25,209 --> 00:17:30,190
does matter what happens if the messages

00:17:28,779 --> 00:17:33,220
come out of order is a something that

00:17:30,190 --> 00:17:36,730
can be handled and you can reorder them

00:17:33,220 --> 00:17:39,610
or does it cause the system to fail in

00:17:36,730 --> 00:17:42,730
some sort of way implications that each

00:17:39,610 --> 00:17:45,639
of these as well is just important as

00:17:42,730 --> 00:17:46,870
thinking about if you want them two

00:17:45,639 --> 00:17:49,539
different types of messages have

00:17:46,870 --> 00:17:52,120
priority over others so a client in that

00:17:49,539 --> 00:17:53,799
now they have credit cards and there's

00:17:52,120 --> 00:17:57,159
lots of sewing and then there's also

00:17:53,799 --> 00:17:59,409
switching from MasterCard to visa so if

00:17:57,159 --> 00:18:01,750
someone has a message going in to start

00:17:59,409 --> 00:18:03,970
off their card to be transferred from

00:18:01,750 --> 00:18:07,389
MasterCard Visa and then their car gets

00:18:03,970 --> 00:18:09,190
stolen that transaction or message that

00:18:07,389 --> 00:18:11,740
said their card stolen has a higher

00:18:09,190 --> 00:18:13,659
priority than the transfer because

00:18:11,740 --> 00:18:16,090
there's no point in transferring isn't

00:18:13,659 --> 00:18:20,580
lost a completely different process

00:18:16,090 --> 00:18:25,240
anyway so think about those things

00:18:20,580 --> 00:18:28,360
duplicates and zero loss are two very

00:18:25,240 --> 00:18:30,789
common requirements so think about what

00:18:28,360 --> 00:18:33,309
happens if there is a duplicate if

00:18:30,789 --> 00:18:36,639
you're having messages just for some

00:18:33,309 --> 00:18:38,110
sort of logging then a duplicate it

00:18:36,639 --> 00:18:40,120
might look funny but it's really not

00:18:38,110 --> 00:18:42,759
going to have high impact on the system

00:18:40,120 --> 00:18:44,919
versus if you're doing messaging with

00:18:42,759 --> 00:18:46,240
some sort of money transaction like with

00:18:44,919 --> 00:18:48,009
a train that's assuming you've a balance

00:18:46,240 --> 00:18:50,019
on your card that's going to have pretty

00:18:48,009 --> 00:18:52,379
high impact it's gonna influence

00:18:50,019 --> 00:18:55,750
someone's balance on their coordinate

00:18:52,379 --> 00:18:59,230
zero loss as well someone he losing that

00:18:55,750 --> 00:19:00,639
and someone had added money then maybe

00:18:59,230 --> 00:19:04,529
the money doesn't show up on their card

00:19:00,639 --> 00:19:07,509
so that would have pretty high impact

00:19:04,529 --> 00:19:11,740
bad messages goes back a little bit to

00:19:07,509 --> 00:19:13,330
be who handles what situation life sends

00:19:11,740 --> 00:19:16,120
a bad message to the clouds is Claude

00:19:13,330 --> 00:19:17,710
NIDA handling it or put it in some sort

00:19:16,120 --> 00:19:20,110
of folder and someone manually given

00:19:17,710 --> 00:19:21,700
changes it or does it get rejected and

00:19:20,110 --> 00:19:25,409
then someone has to figure out the

00:19:21,700 --> 00:19:27,990
device figuring out that type of thing

00:19:25,409 --> 00:19:30,009
first with your messaging requirements

00:19:27,990 --> 00:19:33,309
some of these things you might have an

00:19:30,009 --> 00:19:35,769
answer to right away but definitely

00:19:33,309 --> 00:19:39,309
keeping in mind a human impact they have

00:19:35,769 --> 00:19:41,830
on your system will influence the next

00:19:39,309 --> 00:19:51,129
lesson a little bit and how you're

00:19:41,830 --> 00:19:53,679
picking your frameworks one situation

00:19:51,129 --> 00:19:55,960
where we didn't get requirements that

00:19:53,679 --> 00:19:58,690
caused issues was the situation of

00:19:55,960 --> 00:20:01,059
negative account balances so these are

00:19:58,690 --> 00:20:03,970
some parents out of where you might

00:20:01,059 --> 00:20:07,480
slide or tap a card to get on a train or

00:20:03,970 --> 00:20:10,570
bus in this case probably a train and so

00:20:07,480 --> 00:20:14,259
what we didn't define was what happens

00:20:10,570 --> 00:20:16,929
is this is 50 cent and the ride cost a

00:20:14,259 --> 00:20:20,710
dollar is my card allowed to go to

00:20:16,929 --> 00:20:25,149
negative 50 cents isn't gonna get

00:20:20,710 --> 00:20:27,279
rejected what happens so in our case

00:20:25,149 --> 00:20:29,049
luckily the fare box store something's

00:20:27,279 --> 00:20:31,330
up throwing exceptions and then we were

00:20:29,049 --> 00:20:33,820
able to see it but had we not defined it

00:20:31,330 --> 00:20:37,659
we didn't even know what to expect in

00:20:33,820 --> 00:20:40,600
that situation so then you define it you

00:20:37,659 --> 00:20:43,600
can adjust to say okay you're allowed to

00:20:40,600 --> 00:20:46,509
go negative up to you know $2 negative

00:20:43,600 --> 00:20:49,029
or you say something card needs to be

00:20:46,509 --> 00:20:51,970
rejected but in our situation it didn't

00:20:49,029 --> 00:20:54,429
do either it just threw an error and

00:20:51,970 --> 00:21:03,909
didn't give a real response to the user

00:20:54,429 --> 00:21:05,529
so another example with credit cards so

00:21:03,909 --> 00:21:08,990
I mentioned that a little bit with

00:21:05,529 --> 00:21:13,240
priority but another situation

00:21:08,990 --> 00:21:15,860
wasn't defined was something recurring

00:21:13,240 --> 00:21:17,929
transactions so some cards weren't

00:21:15,860 --> 00:21:21,710
allowed to have reoccurring transactions

00:21:17,929 --> 00:21:23,510
somewhere some thanks AMX working

00:21:21,710 --> 00:21:26,690
allowed to have reoccurring transaction

00:21:23,510 --> 00:21:28,850
so you guys can find fun this was

00:21:26,690 --> 00:21:31,850
important because we had a process for

00:21:28,850 --> 00:21:34,520
if your balance falls below whatever you

00:21:31,850 --> 00:21:37,429
flush hold you set say $10 then it would

00:21:34,520 --> 00:21:40,570
auto reel owed your card so finding out

00:21:37,429 --> 00:21:44,600
requirements for different credit cards

00:21:40,570 --> 00:21:46,850
or various payment information is

00:21:44,600 --> 00:21:49,070
important to be going if they can happen

00:21:46,850 --> 00:21:52,700
and mention PCI compliant to what

00:21:49,070 --> 00:21:53,840
information can be stored at how and

00:21:52,700 --> 00:21:55,970
once again if you don't know something

00:21:53,840 --> 00:21:58,490
yet didn't thank you vote write it down

00:21:55,970 --> 00:22:00,860
and then I figured that out throughout

00:21:58,490 --> 00:22:05,179
your Sprint's or whatever type of

00:22:00,860 --> 00:22:08,900
development process that you're doing so

00:22:05,179 --> 00:22:11,390
the next lesson is check capabilities so

00:22:08,900 --> 00:22:14,150
this is checking account bilities of

00:22:11,390 --> 00:22:16,940
your device as well as whatever

00:22:14,150 --> 00:22:18,590
frameworks you are using so I mentioned

00:22:16,940 --> 00:22:22,490
some of those messaging requirements

00:22:18,590 --> 00:22:25,429
might implement how you decide to choose

00:22:22,490 --> 00:22:28,730
your frameworks um well it's a little

00:22:25,429 --> 00:22:31,700
bit about ice capabilities first so

00:22:28,730 --> 00:22:33,860
thank you for your devices can connect

00:22:31,700 --> 00:22:36,110
internet since that is one thing that is

00:22:33,860 --> 00:22:40,280
very important if you're modeling them

00:22:36,110 --> 00:22:43,100
as IOT devices if they can connect is it

00:22:40,280 --> 00:22:47,929
Wireless wired can they connect to a

00:22:43,100 --> 00:22:50,480
mobile network that type of stuff with

00:22:47,929 --> 00:22:53,570
talking about messaging rest or so

00:22:50,480 --> 00:22:55,429
capability could also go JMS capability

00:22:53,570 --> 00:22:58,510
in their track how they're going to be

00:22:55,429 --> 00:23:01,280
communicating essentially our devices

00:22:58,510 --> 00:23:05,210
already had so capability but they were

00:23:01,280 --> 00:23:09,070
able to update to use rest capability as

00:23:05,210 --> 00:23:13,670
well however they were unable to use a

00:23:09,070 --> 00:23:15,050
HTTP connection so that was one issue to

00:23:13,670 --> 00:23:18,530
work through to ensure that it was

00:23:15,050 --> 00:23:22,130
secure without using that so finding out

00:23:18,530 --> 00:23:22,610
those capabilities will influence for us

00:23:22,130 --> 00:23:24,200
here

00:23:22,610 --> 00:23:28,520
with the requirements and everything

00:23:24,200 --> 00:23:33,020
else but in some using use cases I meant

00:23:28,520 --> 00:23:34,190
it was just because if you have a fare

00:23:33,020 --> 00:23:37,240
box or something it needs to have that

00:23:34,190 --> 00:23:39,710
sensor to read the card it needs to have

00:23:37,240 --> 00:23:44,740
those components same thing if you need

00:23:39,710 --> 00:23:48,140
buttons for whatever use case you need

00:23:44,740 --> 00:23:50,420
so other things on the device inventions

00:23:48,140 --> 00:23:53,360
that our corning sales could only work

00:23:50,420 --> 00:23:57,160
offline for about an hour and that was

00:23:53,360 --> 00:24:00,530
mainly due to storage so check what

00:23:57,160 --> 00:24:02,090
amount of storage your devices have so

00:24:00,530 --> 00:24:05,030
that if since you really say and such as

00:24:02,090 --> 00:24:08,330
it going offline does occur then you

00:24:05,030 --> 00:24:11,030
know how long it can be offline and

00:24:08,330 --> 00:24:15,559
still do whatever functions and used to

00:24:11,030 --> 00:24:17,660
do payload size with messaging you might

00:24:15,559 --> 00:24:21,710
have a threshold on how large of a

00:24:17,660 --> 00:24:23,809
payload there's a handle which makes epu

00:24:21,710 --> 00:24:27,799
and memory maybe you can only process

00:24:23,809 --> 00:24:30,169
messages that are a few Meg's and you're

00:24:27,799 --> 00:24:31,970
anticipating messages that are a gig

00:24:30,169 --> 00:24:33,770
then you're obviously going to have to

00:24:31,970 --> 00:24:38,140
do some development figure out that size

00:24:33,770 --> 00:24:41,809
job so finding those things out first

00:24:38,140 --> 00:24:45,290
what this is referring to whether a

00:24:41,809 --> 00:24:49,520
device so there's one one point of sale

00:24:45,290 --> 00:24:51,020
at a Walgreens and five miles away

00:24:49,520 --> 00:24:54,020
there's another device to the Walgreens

00:24:51,020 --> 00:24:56,960
and so on versus if you have multiple in

00:24:54,020 --> 00:25:00,080
one location so that kind of plays into

00:24:56,960 --> 00:25:02,720
the internet connectivity and what

00:25:00,080 --> 00:25:04,429
happens if the network goes down you're

00:25:02,720 --> 00:25:06,620
going to lose more devices if they're in

00:25:04,429 --> 00:25:09,890
one place and if you know that then

00:25:06,620 --> 00:25:11,990
maybe you put in some sort of backup for

00:25:09,890 --> 00:25:14,030
various networks so that if this network

00:25:11,990 --> 00:25:16,130
goes down another network is still

00:25:14,030 --> 00:25:18,200
available for those devices versus if

00:25:16,130 --> 00:25:22,309
you're just losing one device and might

00:25:18,200 --> 00:25:25,370
not be as critical play Mart

00:25:22,309 --> 00:25:28,460
capabilities this is an area that we

00:25:25,370 --> 00:25:31,760
definitely had some learning we were

00:25:28,460 --> 00:25:32,900
using the integration from our camel if

00:25:31,760 --> 00:25:34,940
anyone is feeling I thought its

00:25:32,900 --> 00:25:36,020
implementation of enterprise integration

00:25:34,940 --> 00:25:40,010
patterns

00:25:36,020 --> 00:25:42,440
and has something he do rest tons of

00:25:40,010 --> 00:25:46,010
components that can work with camels but

00:25:42,440 --> 00:25:49,520
our team at the time was new to it so

00:25:46,010 --> 00:25:51,830
some basic things like basic c4 encoding

00:25:49,520 --> 00:25:54,530
and decoding we had used a different

00:25:51,830 --> 00:25:57,530
Java library and processor to do that

00:25:54,530 --> 00:26:01,490
but KML has it built in so we ended up

00:25:57,530 --> 00:26:04,700
wasting this time implementing things in

00:26:01,490 --> 00:26:06,100
the code that we already had a framework

00:26:04,700 --> 00:26:11,570
that did it for us

00:26:06,100 --> 00:26:14,390
it also be true for XML JSON so check

00:26:11,570 --> 00:26:16,520
that with primary school in the cloud

00:26:14,390 --> 00:26:20,360
application and also whatever's running

00:26:16,520 --> 00:26:23,120
on your device so they'll increase your

00:26:20,360 --> 00:26:27,080
maintainability and you know avoid that

00:26:23,120 --> 00:26:29,090
duplicate work security and error

00:26:27,080 --> 00:26:31,100
handling a lot of times frameworks are

00:26:29,090 --> 00:26:33,380
held built-in components for that as

00:26:31,100 --> 00:26:39,550
well just to make sure you check for

00:26:33,380 --> 00:26:42,380
those things check exact version so with

00:26:39,550 --> 00:26:44,630
rest for example with camel there's

00:26:42,380 --> 00:26:47,559
various different implementations and

00:26:44,630 --> 00:26:49,429
components you can use with that so

00:26:47,559 --> 00:26:51,830
we're trying to avoid the situation

00:26:49,429 --> 00:26:53,900
where you get really excited about a

00:26:51,830 --> 00:26:56,390
particular component and then realize

00:26:53,900 --> 00:26:58,370
that whatever version you're using that

00:26:56,390 --> 00:27:01,429
is you know decided to be the supported

00:26:58,370 --> 00:27:02,929
version of that frame where it doesn't

00:27:01,429 --> 00:27:05,380
have it so make sure you check the

00:27:02,929 --> 00:27:07,730
specific version to ensure that whatever

00:27:05,380 --> 00:27:11,660
capability you're interested in does

00:27:07,730 --> 00:27:14,809
exist there so messaging options and

00:27:11,660 --> 00:27:17,980
capabilities to check for persistence

00:27:14,809 --> 00:27:20,360
what happens if you have a Heuer topic

00:27:17,980 --> 00:27:23,000
with your message and then the server

00:27:20,360 --> 00:27:27,110
goes down do you get that message back

00:27:23,000 --> 00:27:29,450
or is it lost checking that capability

00:27:27,110 --> 00:27:32,630
and whatever type of messaging framework

00:27:29,450 --> 00:27:34,309
you're using avoid a lot of issues down

00:27:32,630 --> 00:27:37,970
the road same way it's durable

00:27:34,309 --> 00:27:40,160
subscriptions so what happens if you

00:27:37,970 --> 00:27:41,830
have if you subscribe to a topic and it

00:27:40,160 --> 00:27:43,940
disconnects for some reason and

00:27:41,830 --> 00:27:45,860
reconnect is it going to get any

00:27:43,940 --> 00:27:49,539
messages that were in that topic before

00:27:45,860 --> 00:27:52,629
hand there are those messages lost just

00:27:49,539 --> 00:27:54,940
lost for that key priority queue

00:27:52,629 --> 00:27:57,639
submissions checking priority with

00:27:54,940 --> 00:28:00,429
messaging so do you does your framework

00:27:57,639 --> 00:28:01,600
actually support that so check those

00:28:00,429 --> 00:28:04,059
things first

00:28:01,600 --> 00:28:07,989
the framework or messaging

00:28:04,059 --> 00:28:10,629
implementation that we ended up using we

00:28:07,989 --> 00:28:12,070
realized not initially but during

00:28:10,629 --> 00:28:14,679
development that it didn't support

00:28:12,070 --> 00:28:18,159
durable subscriptions support priority

00:28:14,679 --> 00:28:22,330
queue and by default only had one

00:28:18,159 --> 00:28:25,299
consumer on the queue so we could have

00:28:22,330 --> 00:28:26,799
avoided a lot of these issues have you

00:28:25,299 --> 00:28:28,359
just looked at those capabilities of

00:28:26,799 --> 00:28:30,879
that messaging framework to begin with

00:28:28,359 --> 00:28:33,909
and maybe gone with a different one that

00:28:30,879 --> 00:28:37,929
is important more of the components that

00:28:33,909 --> 00:28:40,330
we really needed another issue to check

00:28:37,929 --> 00:28:42,970
with messaging framework specifically is

00:28:40,330 --> 00:28:46,330
whether it's I wants an only one filling

00:28:42,970 --> 00:28:47,979
or once and more once more delivery is

00:28:46,330 --> 00:28:50,710
actually more common than I would have

00:28:47,979 --> 00:28:54,190
thought but it means that you have to

00:28:50,710 --> 00:28:57,419
handle duplicates not just from sending

00:28:54,190 --> 00:29:00,070
messages and vice versa but also from

00:28:57,419 --> 00:29:03,429
duplicates coming from your actual queue

00:29:00,070 --> 00:29:06,309
topic so that can cause definitely some

00:29:03,429 --> 00:29:08,049
more issues than if you were planning

00:29:06,309 --> 00:29:10,539
produced bits from the device that might

00:29:08,049 --> 00:29:12,190
be a few seconds apart versus coming

00:29:10,539 --> 00:29:17,049
from your queue where they might come in

00:29:12,190 --> 00:29:21,070
at the same exact time some multiple

00:29:17,049 --> 00:29:22,509
consumers I mentioned that our framework

00:29:21,070 --> 00:29:25,179
to begin with that we were using

00:29:22,509 --> 00:29:27,849
by default was using a single consumer

00:29:25,179 --> 00:29:33,309
so one issue that we ran into with this

00:29:27,849 --> 00:29:36,129
was that in our error handling basically

00:29:33,309 --> 00:29:38,529
if a message came in too early for one

00:29:36,129 --> 00:29:39,639
reason or another before another message

00:29:38,529 --> 00:29:42,849
that we needed to know that information

00:29:39,639 --> 00:29:45,159
first like if someone had bought a card

00:29:42,849 --> 00:29:46,659
and then went and rode the bus right

00:29:45,159 --> 00:29:48,220
away if we got the message that they

00:29:46,659 --> 00:29:50,679
rode the bus but didn't know they had

00:29:48,220 --> 00:29:53,799
bought a card we would try and just wait

00:29:50,679 --> 00:29:57,220
to process up message later exposed to

00:29:53,799 --> 00:30:00,190
Simplot way to handle that situation for

00:29:57,220 --> 00:30:02,019
the client requested so at that time

00:30:00,190 --> 00:30:03,340
though we decided to wait 10 minutes and

00:30:02,019 --> 00:30:06,070
then we try

00:30:03,340 --> 00:30:08,650
out to3 retries but with a single

00:30:06,070 --> 00:30:11,070
consumer that consumer was then blocked

00:30:08,650 --> 00:30:13,390
for that 30 minutes that it was retrying

00:30:11,070 --> 00:30:15,700
something he was getting all clogged up

00:30:13,390 --> 00:30:17,110
with hundreds of messages that easily

00:30:15,700 --> 00:30:20,320
could have been processed during that

00:30:17,110 --> 00:30:24,130
time so just needed to add multiple

00:30:20,320 --> 00:30:26,190
consumers worked easily enough um but

00:30:24,130 --> 00:30:28,390
think about those things beforehand and

00:30:26,190 --> 00:30:30,610
whether you need trailer processing

00:30:28,390 --> 00:30:32,980
whether you need multiple consumers and

00:30:30,610 --> 00:30:37,240
the impact that multiple consumers might

00:30:32,980 --> 00:30:39,280
have on order or priority just thinking

00:30:37,240 --> 00:30:42,250
about those things first size

00:30:39,280 --> 00:30:43,870
limitations our messaging framework we

00:30:42,250 --> 00:30:48,280
found out did also have a size

00:30:43,870 --> 00:30:51,250
limitation so we knew net threats but we

00:30:48,280 --> 00:30:53,320
also thought that the payload size we're

00:30:51,250 --> 00:30:55,480
working with we're going to be small

00:30:53,320 --> 00:30:57,520
enough that it would not matter so if it

00:30:55,480 --> 00:30:59,650
does have some sort of size limitation

00:30:57,520 --> 00:31:06,100
just make sure you handle it in some way

00:30:59,650 --> 00:31:08,770
even if you don't happen so one good

00:31:06,100 --> 00:31:11,260
example of device capabilities that I

00:31:08,770 --> 00:31:14,790
came across is the fare boxes that we

00:31:11,260 --> 00:31:17,620
were using had a time set on them and

00:31:14,790 --> 00:31:20,890
when daylight savings rolled around RT

00:31:17,620 --> 00:31:22,360
noticing that the time would change

00:31:20,890 --> 00:31:24,940
automatically just the way it does on

00:31:22,360 --> 00:31:28,840
your cell phone that was not the case

00:31:24,940 --> 00:31:31,240
and but these fare boxes had to have

00:31:28,840 --> 00:31:35,200
their time manually change fear during

00:31:31,240 --> 00:31:38,830
these daylight even times so before that

00:31:35,200 --> 00:31:41,620
was done messages coming in and because

00:31:38,830 --> 00:31:43,060
of the time and our time zones were

00:31:41,620 --> 00:31:45,310
defining the gene change so it looked

00:31:43,060 --> 00:31:48,760
like it was a different time zone than

00:31:45,310 --> 00:31:52,030
what the club is using which results in

00:31:48,760 --> 00:31:54,970
a lot of weird time calculations that

00:31:52,030 --> 00:31:57,340
could have been avoided so using

00:31:54,970 --> 00:32:00,250
something standard for times like James

00:31:57,340 --> 00:32:02,890
you can help that a little bit but

00:32:00,250 --> 00:32:05,770
checking things that maybe you might be

00:32:02,890 --> 00:32:07,960
considered little quirks of a device and

00:32:05,770 --> 00:32:13,630
finding those up first can avoid some of

00:32:07,960 --> 00:32:17,040
these issues so backup cameras this is

00:32:13,630 --> 00:32:19,500
not really very closely but one

00:32:17,040 --> 00:32:21,570
sample of checking device capabilities

00:32:19,500 --> 00:32:25,700
that I think is everyone in Stockholm

00:32:21,570 --> 00:32:28,920
thermos if you were developing a

00:32:25,700 --> 00:32:32,550
software for backup cameras to show this

00:32:28,920 --> 00:32:37,290
output and you develop a camera but then

00:32:32,550 --> 00:32:40,290
you had a pretty old like 99 car that

00:32:37,290 --> 00:32:42,420
didn't have a place to mount it or you

00:32:40,290 --> 00:32:45,090
couldn't install the software then

00:32:42,420 --> 00:32:46,760
there'd be no point so making sure that

00:32:45,090 --> 00:32:49,260
whatever software you're going to have

00:32:46,760 --> 00:32:54,570
actually work with whatever device you

00:32:49,260 --> 00:32:57,330
have location similarly um smartphones

00:32:54,570 --> 00:32:59,220
are being updated pretty often these

00:32:57,330 --> 00:33:00,990
days one of the newer things is

00:32:59,220 --> 00:33:02,760
fingerprint beginning if you're

00:33:00,990 --> 00:33:04,170
developing an app that has fingerprint

00:33:02,760 --> 00:33:06,510
scanning you want to make sure that

00:33:04,170 --> 00:33:07,830
whatever your target audiences will be

00:33:06,510 --> 00:33:10,200
using phones that have a fingerprint

00:33:07,830 --> 00:33:13,620
skin otherwise you will miss your target

00:33:10,200 --> 00:33:19,050
audience and your devices won't have the

00:33:13,620 --> 00:33:21,750
capabilities of you need so the last

00:33:19,050 --> 00:33:23,610
lesson is trust your device I talked

00:33:21,750 --> 00:33:27,780
about security and the importance of

00:33:23,610 --> 00:33:29,070
that without security you might not want

00:33:27,780 --> 00:33:32,420
to trust your device because you don't

00:33:29,070 --> 00:33:35,130
know exactly what is coming from it so

00:33:32,420 --> 00:33:36,780
what does your device is pretty

00:33:35,130 --> 00:33:39,570
essential if you aren't going to trust

00:33:36,780 --> 00:33:44,480
it what you're connecting it to your

00:33:39,570 --> 00:33:47,940
larger system so in order to justify

00:33:44,480 --> 00:33:49,710
you're going to need that security so

00:33:47,940 --> 00:33:52,440
that goes back to starting small kazakh

00:33:49,710 --> 00:33:57,000
checking acute abilities basically all

00:33:52,440 --> 00:33:58,680
stem from the other lessons so with that

00:33:57,000 --> 00:34:00,570
security ensure there is secure enough

00:33:58,680 --> 00:34:04,260
fit you're going to be able to take what

00:34:00,570 --> 00:34:07,530
the device does and it and go from there

00:34:04,260 --> 00:34:11,280
and use that information to build a

00:34:07,530 --> 00:34:13,410
better system when you're trusting the

00:34:11,280 --> 00:34:16,710
device we talked about who's going to

00:34:13,410 --> 00:34:18,450
handle exceptions I definitely take the

00:34:16,710 --> 00:34:20,550
position of minimal error handling

00:34:18,450 --> 00:34:22,080
responsibilities on your device if you

00:34:20,550 --> 00:34:24,030
think about who's going to be using

00:34:22,080 --> 00:34:26,550
these devices yeah they're going to be

00:34:24,030 --> 00:34:29,669
the most technical people if I had to

00:34:26,550 --> 00:34:30,659
troubleshoot a Fitbit but I probably

00:34:29,669 --> 00:34:32,849
wouldn't know it

00:34:30,659 --> 00:34:35,909
what to do other than maybe turning it

00:34:32,849 --> 00:34:38,159
off and on and for anyone that's worked

00:34:35,909 --> 00:34:40,589
in some sort of tech support you know

00:34:38,159 --> 00:34:42,119
how many calls come in where that's the

00:34:40,589 --> 00:34:44,089
only thing someone needs to do and they

00:34:42,119 --> 00:34:46,409
still haven't done it

00:34:44,089 --> 00:34:49,980
so assume that your users are

00:34:46,409 --> 00:34:52,700
non-technical and the device should have

00:34:49,980 --> 00:34:55,260
many more air handling responsibilities

00:34:52,700 --> 00:34:57,980
if you put the responsibility on the

00:34:55,260 --> 00:35:01,619
device then you need to make sure that

00:34:57,980 --> 00:35:04,680
you retry and it can do software updates

00:35:01,619 --> 00:35:07,950
frequently all these things but probably

00:35:04,680 --> 00:35:14,460
a little more devices than software on

00:35:07,950 --> 00:35:16,589
some sort of cloud so trusting the

00:35:14,460 --> 00:35:23,039
device one thing that can help with it

00:35:16,589 --> 00:35:25,829
and help with any differentiation would

00:35:23,039 --> 00:35:29,210
be some sort of checking requirement so

00:35:25,829 --> 00:35:33,930
with our system the device configuration

00:35:29,210 --> 00:35:37,260
was actually managed by a cloud website

00:35:33,930 --> 00:35:39,180
that users could log into and say ok

00:35:37,260 --> 00:35:41,880
we're going to sell these passes at this

00:35:39,180 --> 00:35:45,210
price and the fare box will deduct this

00:35:41,880 --> 00:35:47,220
much money for one tap and you know they

00:35:45,210 --> 00:35:52,200
cap with you next hour this much money

00:35:47,220 --> 00:35:55,470
those types of configuration but in

00:35:52,200 --> 00:35:58,200
order to ensure that that configuration

00:35:55,470 --> 00:35:59,549
on the cloud and the device match there

00:35:58,200 --> 00:36:01,890
needs to be some sort of checking

00:35:59,549 --> 00:36:05,940
requirement so there's a max length of

00:36:01,890 --> 00:36:08,900
time that they might not match so we

00:36:05,940 --> 00:36:13,099
implemented that it needs to check for

00:36:08,900 --> 00:36:16,609
configuration changes every 10 minutes

00:36:13,099 --> 00:36:18,839
sooner you could have it push the device

00:36:16,609 --> 00:36:20,700
for our particular use case with the

00:36:18,839 --> 00:36:22,799
devices it made more sense to have the

00:36:20,700 --> 00:36:27,089
device make requests than to try and

00:36:22,799 --> 00:36:29,549
push it to them backwards compatibility

00:36:27,089 --> 00:36:31,289
voice devices again this is something

00:36:29,549 --> 00:36:34,200
that tends to be a little bit more

00:36:31,289 --> 00:36:36,299
important depending on how often you are

00:36:34,200 --> 00:36:40,799
allowed to service the devices update

00:36:36,299 --> 00:36:43,960
the software etc you want to ensure that

00:36:40,799 --> 00:36:46,780
you can accept and process

00:36:43,960 --> 00:36:49,180
just from the device that might have an

00:36:46,780 --> 00:36:51,099
updated software version that the pod

00:36:49,180 --> 00:36:52,960
software has updated and vice versa

00:36:51,099 --> 00:36:56,680
because it's more likely to happen than

00:36:52,960 --> 00:36:59,890
if you have just a cloud system you can

00:36:56,680 --> 00:37:01,750
update that all once typically with the

00:36:59,890 --> 00:37:04,000
devices since you might have to service

00:37:01,750 --> 00:37:09,339
them it's more likely to be on the sort

00:37:04,000 --> 00:37:12,520
of rolling basis so no error in the

00:37:09,339 --> 00:37:14,080
final result one of the situation's so

00:37:12,520 --> 00:37:18,520
we had to decide if we were going to

00:37:14,080 --> 00:37:20,410
track the device or not was with tapping

00:37:18,520 --> 00:37:22,690
card and some of those out of order

00:37:20,410 --> 00:37:25,800
messages so we just said our messages

00:37:22,690 --> 00:37:30,640
could come in out of order or ridership

00:37:25,800 --> 00:37:33,670
so imagine that my passage is on it and

00:37:30,640 --> 00:37:37,540
I went I tapped it he took $1 off her

00:37:33,670 --> 00:37:40,359
plus the balance is now $19 I go and do

00:37:37,540 --> 00:37:43,720
that again to come home the same day my

00:37:40,359 --> 00:37:47,380
balance is now 18 so what if the message

00:37:43,720 --> 00:37:50,830
that says my balance is 18 gets to the

00:37:47,380 --> 00:37:54,130
cloud first so if the cloud perk could

00:37:50,830 --> 00:37:58,180
say okay this message shows the initial

00:37:54,130 --> 00:38:00,369
balance is 19 the final ops 18 is gonna

00:37:58,180 --> 00:38:03,640
say wait I have an initial balance of 20

00:38:00,369 --> 00:38:06,310
so if it were to do math cause why I say

00:38:03,640 --> 00:38:10,180
avoid math it would say okay 21 explains

00:38:06,310 --> 00:38:12,220
19 ounces now 19 and then it would get

00:38:10,180 --> 00:38:14,380
the second message later and say well

00:38:12,220 --> 00:38:17,920
this message trans actually happened

00:38:14,380 --> 00:38:20,470
first so I'm not gonna do any math for

00:38:17,920 --> 00:38:22,960
that since showing your balance is 19

00:38:20,470 --> 00:38:25,660
instead of 18 it should be so if you get

00:38:22,960 --> 00:38:28,270
enough time you might be okay but then

00:38:25,660 --> 00:38:31,510
what if the second message never came in

00:38:28,270 --> 00:38:33,099
what if you lost the message first if

00:38:31,510 --> 00:38:36,400
you just trust the device and say okay

00:38:33,099 --> 00:38:39,040
this is the fare box that sounds not 18

00:38:36,400 --> 00:38:40,599
and that was at this time we were going

00:38:39,040 --> 00:38:42,460
to test that and then if we get a

00:38:40,599 --> 00:38:44,859
different balance at a different times

00:38:42,460 --> 00:38:48,250
than you will take that that if that is

00:38:44,859 --> 00:38:50,290
more up-to-date so intended to be a

00:38:48,250 --> 00:38:54,430
safer approach then trying to do that

00:38:50,290 --> 00:38:56,440
math which maybe you're able to figure

00:38:54,430 --> 00:38:58,080
out all your message is in order and no

00:38:56,440 --> 00:39:01,960
duplicates and no loss

00:38:58,080 --> 00:39:06,040
but she became great but it seems a

00:39:01,960 --> 00:39:09,040
little less likely so just try and trust

00:39:06,040 --> 00:39:15,730
what the device is sending if there's

00:39:09,040 --> 00:39:21,280
ever any mismatches so in relation to

00:39:15,730 --> 00:39:27,280
this if I I'm using the server cup then

00:39:21,280 --> 00:39:29,350
maybe my balance is showing as one thing

00:39:27,280 --> 00:39:32,020
on my phone another thing on the website

00:39:29,350 --> 00:39:35,140
I should be able to trust both on my

00:39:32,020 --> 00:39:36,910
phone because this is what I literally

00:39:35,140 --> 00:39:39,730
scans to get my drink

00:39:36,910 --> 00:39:42,250
most recently maybe it hasn't updated

00:39:39,730 --> 00:39:45,850
the card completely yet or my own

00:39:42,250 --> 00:39:49,360
account some I can't do that and they

00:39:45,850 --> 00:39:52,390
show a $15.00 balance on their app and a

00:39:49,360 --> 00:39:53,320
$20.00 balance online and then they call

00:39:52,390 --> 00:39:55,810
it Starbucks they're going to be

00:39:53,320 --> 00:40:00,430
confused and want some sort of

00:39:55,810 --> 00:40:02,710
explanation so they should be able to

00:40:00,430 --> 00:40:05,740
trust the app and sure that that's the

00:40:02,710 --> 00:40:09,240
person truth and if they can't there's

00:40:05,740 --> 00:40:12,730
going to be a lot of confusion I

00:40:09,240 --> 00:40:16,660
mentioned this bit once again really

00:40:12,730 --> 00:40:18,760
good I or two example so what would be

00:40:16,660 --> 00:40:20,800
the point in someone buying this sort of

00:40:18,760 --> 00:40:23,110
device if they weren't going to trust

00:40:20,800 --> 00:40:25,000
that it was keeping track at least

00:40:23,110 --> 00:40:26,680
really something accurately how far

00:40:25,000 --> 00:40:32,500
they're walking every day how many steps

00:40:26,680 --> 00:40:34,270
they're taking so consumers should be

00:40:32,500 --> 00:40:36,580
able to trust it and typically won't

00:40:34,270 --> 00:40:40,390
even purchase something like that if

00:40:36,580 --> 00:40:43,660
they won't be able to trust it we all

00:40:40,390 --> 00:40:45,850
talk about use GPS it's pretty common

00:40:43,660 --> 00:40:48,730
that is and we wouldn't continue using

00:40:45,850 --> 00:40:50,680
them if they didn't take us in the right

00:40:48,730 --> 00:40:53,640
place the majority of the time if we

00:40:50,680 --> 00:40:55,570
didn't trust them to do that obviously

00:40:53,640 --> 00:40:59,200
most of us have probably had a situation

00:40:55,570 --> 00:41:01,240
where we end up on some dirt road that

00:40:59,200 --> 00:41:07,300
doesn't lead anywhere because of the GPS

00:41:01,240 --> 00:41:09,130
but in general we trusted farming

00:41:07,300 --> 00:41:11,150
innovation so this is an interesting

00:41:09,130 --> 00:41:13,250
example of chest

00:41:11,150 --> 00:41:16,790
the device and being able to use that

00:41:13,250 --> 00:41:20,900
information to better some sort of

00:41:16,790 --> 00:41:22,940
application so before I was tractors

00:41:20,900 --> 00:41:27,200
would go and they'd plant their seeds

00:41:22,940 --> 00:41:28,610
and then they'd get harvested but once

00:41:27,200 --> 00:41:31,280
internet things started to come into

00:41:28,610 --> 00:41:33,800
play they were to use gps's and other

00:41:31,280 --> 00:41:37,490
their things technologies to keep track

00:41:33,800 --> 00:41:40,850
of exactly where they were planting and

00:41:37,490 --> 00:41:42,760
then use that data to then make plans to

00:41:40,850 --> 00:41:46,460
plant and harvest more efficiently

00:41:42,760 --> 00:41:49,910
that's been able to lower costs and has

00:41:46,460 --> 00:41:52,880
led to more abundant crops and really

00:41:49,910 --> 00:41:55,190
has led to a lot of conversation so if

00:41:52,880 --> 00:41:57,410
they hadn't trusted the information that

00:41:55,190 --> 00:42:00,940
was being gathered by these devices that

00:41:57,410 --> 00:42:00,940
innovation would have never happened

00:42:01,120 --> 00:42:09,580
Tesla another one that has definitely

00:42:04,160 --> 00:42:13,970
blown up sorry how does everyone blue

00:42:09,580 --> 00:42:16,790
cheese sector recently you think about

00:42:13,970 --> 00:42:18,680
autopilot and the self-driving car one

00:42:16,790 --> 00:42:20,360
of the best ways that it learns and

00:42:18,680 --> 00:42:23,570
works is by gathering that information

00:42:20,360 --> 00:42:27,230
and then using it to make that function

00:42:23,570 --> 00:42:29,510
better I don't know the wrath of point

00:42:27,230 --> 00:42:32,600
where most of us would completely trust

00:42:29,510 --> 00:42:35,420
a self-driving car but the application

00:42:32,600 --> 00:42:37,790
and the cloud system for Tesla is

00:42:35,420 --> 00:42:41,210
trusting that information to use it to

00:42:37,790 --> 00:42:45,200
improve so you want to keep an eye out

00:42:41,210 --> 00:42:47,000
or you know some sort of messages that

00:42:45,200 --> 00:42:49,970
may seem a little weird

00:42:47,000 --> 00:42:51,980
maybe flag I'm not someone go check and

00:42:49,970 --> 00:42:54,140
something things off that you might not

00:42:51,980 --> 00:42:56,360
want to trust but in general you want to

00:42:54,140 --> 00:42:59,860
be able to trust your devices to use the

00:42:56,360 --> 00:43:04,100
information to leads that innovation we

00:42:59,860 --> 00:43:05,840
put our applications so hopefully these

00:43:04,100 --> 00:43:07,940
lessons have been useful and can help

00:43:05,840 --> 00:43:11,690
you avoid some of the issues so I ran

00:43:07,940 --> 00:43:16,630
into on the first IOT long term project

00:43:11,690 --> 00:43:16,630
and we have plenty time for questions

00:43:29,350 --> 00:44:04,780
yeah yeah right yeah right

00:44:20,220 --> 00:44:26,099
yeah yeah I think one of the most useful

00:44:23,790 --> 00:44:27,810
things is refuted by skin or the app can

00:44:26,099 --> 00:44:30,420
work offline to be able to do that

00:44:27,810 --> 00:44:32,819
update and then send it back up when it

00:44:30,420 --> 00:44:35,369
gets that connectivity but I also

00:44:32,819 --> 00:44:38,369
suggest you know if it can't do that

00:44:35,369 --> 00:44:40,230
maybe some sort of message to say hey

00:44:38,369 --> 00:44:42,990
you're offline things might be out of

00:44:40,230 --> 00:44:46,470
date until you're back online you know

00:44:42,990 --> 00:44:50,670
pop ups cuz you're right that something

00:44:46,470 --> 00:44:52,260
that is going to happen so I mean

00:44:50,670 --> 00:44:55,640
ideally you want stuff to be able to

00:44:52,260 --> 00:44:55,640
work offline at least a little bit

00:45:07,330 --> 00:45:16,720
yeah so we actually had a UUID so that

00:45:13,120 --> 00:45:20,380
was the main way before we had that

00:45:16,720 --> 00:45:23,470
implemented it was one of the reasons

00:45:20,380 --> 00:45:27,370
that led to the unity was there was

00:45:23,470 --> 00:45:30,880
timestamp comparison and you know the

00:45:27,370 --> 00:45:33,100
account ID plus the timestamp plus the

00:45:30,880 --> 00:45:35,440
device that it would use that basically

00:45:33,100 --> 00:45:39,550
something that in theory should be

00:45:35,440 --> 00:45:44,410
unique but with time growing things like

00:45:39,550 --> 00:45:46,960
that I try to avoid comparing time at

00:45:44,410 --> 00:45:48,640
any point just because there seems to be

00:45:46,960 --> 00:45:51,040
so many issues with that and you have to

00:45:48,640 --> 00:45:54,100
make sure that if you are comparing

00:45:51,040 --> 00:45:55,930
times that the time on the constitutive

00:45:54,100 --> 00:45:57,880
matches the time on the fare box smushed

00:45:55,930 --> 00:46:00,100
the time on some phone if they're using

00:45:57,880 --> 00:46:02,110
that and that everything is consistent

00:46:00,100 --> 00:46:15,910
and that you're comparing accurately the

00:46:02,110 --> 00:46:20,740
Eddie gear ID the best solution um no

00:46:15,910 --> 00:46:25,300
actually it was an interesting system

00:46:20,740 --> 00:46:28,840
and the most bust

00:46:25,300 --> 00:46:32,190
I wouldn't say obviously there were a

00:46:28,840 --> 00:46:32,190
lot of lessons learned from there

00:46:37,920 --> 00:46:42,210
I'm sitting there just going with basic

00:46:40,319 --> 00:46:44,369
off because they couldn't support us as

00:46:42,210 --> 00:46:47,010
well with the devices so we pushed for

00:46:44,369 --> 00:46:48,780
it and we're told basically all right

00:46:47,010 --> 00:46:51,329
these devices aren't going to be able to

00:46:48,780 --> 00:46:56,880
update over two and a half years even

00:46:51,329 --> 00:46:58,380
please yeah probably could have happened

00:46:56,880 --> 00:47:02,309
if they it started it from the beginning

00:46:58,380 --> 00:47:05,990
but it definitely showed how out of date

00:47:02,309 --> 00:47:05,990
some of these software they're using

00:47:15,060 --> 00:47:17,120
ah

00:47:19,109 --> 00:47:31,910
yeah I would say that would have been

00:47:21,239 --> 00:47:31,910
more ideal yeah

00:47:37,340 --> 00:47:45,760
correct yeah yes yeah so they had to go

00:47:49,510 --> 00:47:56,410
right so that's why we implemented the

00:47:52,330 --> 00:47:58,910
check-in requirement redundants for the

00:47:56,410 --> 00:48:01,910
configuration because they could be

00:47:58,910 --> 00:48:04,100
offline see about a fare boxes on a bus

00:48:01,910 --> 00:48:06,050
and it's traveling around the city so

00:48:04,100 --> 00:48:08,120
that was allowed to be offline for the

00:48:06,050 --> 00:48:09,860
year as three days before it had to

00:48:08,120 --> 00:48:11,510
check-in yeah breakfast the

00:48:09,860 --> 00:48:13,280
point-of-sale had that check-in

00:48:11,510 --> 00:48:15,110
requirement so the point of cells pretty

00:48:13,280 --> 00:48:17,110
consistently online and they were only

00:48:15,110 --> 00:48:19,580
allowed to be online for an hour or so

00:48:17,110 --> 00:48:23,360
which mostly was because of storage

00:48:19,580 --> 00:48:25,430
constraints and ensuring that that data

00:48:23,360 --> 00:48:27,890
of people buying passes really

00:48:25,430 --> 00:48:29,810
up-to-date as far as ridership it

00:48:27,890 --> 00:48:33,940
definitely there was a three day window

00:48:29,810 --> 00:48:33,940
of which stuff could still come in with

00:48:54,000 --> 00:48:59,460
um so someone would take that and if

00:48:56,280 --> 00:49:01,770
you'll take it offline the data would be

00:48:59,460 --> 00:49:05,580
probed off of it and then they would

00:49:01,770 --> 00:49:08,609
have to probably in the web UI mark that

00:49:05,580 --> 00:49:19,410
device is out of service and then put in

00:49:08,609 --> 00:49:21,930
the new one I mean they were not only

00:49:19,410 --> 00:49:26,040
monitoring in place if it started

00:49:21,930 --> 00:49:30,540
sending up some sort of junk that good

00:49:26,040 --> 00:49:32,520
messages but if it just say was broken

00:49:30,540 --> 00:49:33,300
and was still technically functioning

00:49:32,520 --> 00:49:35,280
properly

00:49:33,300 --> 00:49:47,820
someone probably wouldn't know and so

00:49:35,280 --> 00:49:49,530
something physically saw that and there

00:49:47,820 --> 00:49:51,810
was there was some on the point of sale

00:49:49,530 --> 00:49:54,830
devices I knew that the fare box is

00:49:51,810 --> 00:49:54,830
probably not

00:50:06,920 --> 00:50:11,269
yes so our our primary development was

00:50:09,890 --> 00:50:13,250
definitely more the cloud applications

00:50:11,269 --> 00:50:15,260
and the integrations with the devices

00:50:13,250 --> 00:50:18,230
and then the client had their own

00:50:15,260 --> 00:50:20,150
farebox team which they had been working

00:50:18,230 --> 00:50:22,220
at the fare boxes you know forever and

00:50:20,150 --> 00:50:24,160
ever and then there was another brought

00:50:22,220 --> 00:50:27,200
in for the point of sale devices

00:50:24,160 --> 00:50:29,660
development so the point is so device

00:50:27,200 --> 00:50:31,940
development had been done maybe five

00:50:29,660 --> 00:50:35,539
years ago what was at least relatively

00:50:31,940 --> 00:50:39,049
recent and they were able to update most

00:50:35,539 --> 00:50:42,710
of it but then the fare boxes were put

00:50:39,049 --> 00:50:44,960
in a date so the key the client was more

00:50:42,710 --> 00:50:47,660
concerned about the website looking

00:50:44,960 --> 00:50:54,920
pretty you know functioning properly

00:50:47,660 --> 00:50:58,420
which so yeah because I worked mainly on

00:50:54,920 --> 00:50:58,420
the integrations between this

00:51:05,230 --> 00:51:07,860
yeah

00:51:08,200 --> 00:51:14,030
yeah yeah so they had to go and request

00:51:11,660 --> 00:51:16,340
it so came with you know one ton of

00:51:14,030 --> 00:51:19,580
potential get that back and then use

00:51:16,340 --> 00:51:22,840
that to request other things in my

00:51:19,580 --> 00:51:25,280
reasoning aim was long to some that um

00:51:22,840 --> 00:51:26,840
they could go and request access to

00:51:25,280 --> 00:51:29,000
names on resource so then they had to

00:51:26,840 --> 00:51:30,950
request the Amazon cocaine from our

00:51:29,000 --> 00:51:33,230
system we'd give it to them and then

00:51:30,950 --> 00:51:36,350
they would I think we should spacing

00:51:33,230 --> 00:51:46,520
before encoded that plus some other keys

00:51:36,350 --> 00:51:47,960
to get the Amazon resource well if

00:51:46,520 --> 00:51:51,790
there's any more questions I'll be

00:51:47,960 --> 00:51:51,790

YouTube URL: https://www.youtube.com/watch?v=HtWASRRNxto


