Title: 2012 SouthEast LinuxFest - DrupalCamp CLT - Erik Webb - Performance For Site Builders
Publication date: 2014-02-18
Playlist: 2012 SouthEast LinuxFest - DrupalCamp CLT - Hot Drupal Track
Description: 
	2012 SouthEast LinuxFest
DrupalCamp Charlotte
Erik Webb
Performance For Site Builders
Captions: 
	00:00:00,000 --> 00:00:05,279
the following presentation was recorded

00:00:02,490 --> 00:00:08,040
the 2012 southeast linux fest in

00:00:05,279 --> 00:00:10,410
charlotte north carolina it is licensed

00:00:08,040 --> 00:00:12,090
under a creative commons license for

00:00:10,410 --> 00:00:16,859
more information about the southeast

00:00:12,090 --> 00:00:19,230
linux fest visit www.lend expense org

00:00:16,859 --> 00:00:21,320
the southeast linux fest would like to

00:00:19,230 --> 00:00:23,279
thank the following diamond sponsors in

00:00:21,320 --> 00:00:34,669
2012 for helping make these videos

00:00:23,279 --> 00:00:34,669
possible so good morning everyone thank

00:00:35,660 --> 00:00:43,110
you so my name is Eric weblog 40 quia

00:00:40,760 --> 00:00:45,239
this presentation just give you a little

00:00:43,110 --> 00:00:46,920
bit of background I'm sure for how many

00:00:45,239 --> 00:00:52,530
of you guys this your first camp or

00:00:46,920 --> 00:00:53,820
first Drupal event so maybe half 30 the

00:00:52,530 --> 00:00:55,710
biggest thing I've always noticed in

00:00:53,820 --> 00:00:57,420
Drupal events is there's kind of two

00:00:55,710 --> 00:00:59,100
different roles everything's catered

00:00:57,420 --> 00:01:00,960
towards there's the site builders which

00:00:59,100 --> 00:01:03,449
is all about getting a site up out the

00:01:00,960 --> 00:01:05,129
door finished and then there's the

00:01:03,449 --> 00:01:07,200
developers where the talk about servers

00:01:05,129 --> 00:01:10,170
and coding and performance and all that

00:01:07,200 --> 00:01:12,990
there's a big middle ground there where

00:01:10,170 --> 00:01:14,909
site builders for some reason don't seem

00:01:12,990 --> 00:01:18,000
to be expected to do performance work

00:01:14,909 --> 00:01:21,270
and I think that's kind of a big big

00:01:18,000 --> 00:01:23,610
mistake so this presentation is really

00:01:21,270 --> 00:01:25,259
geared towards that middle ground of you

00:01:23,610 --> 00:01:27,630
don't know code you don't know command

00:01:25,259 --> 00:01:29,159
line stuff you don't need to you know

00:01:27,630 --> 00:01:31,920
there's no reason for you to know that

00:01:29,159 --> 00:01:37,020
necessarily but you still should be able

00:01:31,920 --> 00:01:38,790
to create a high-performing fast site so

00:01:37,020 --> 00:01:40,619
the couple of things were in cover first

00:01:38,790 --> 00:01:43,590
of all obviously I'll introduce kind of

00:01:40,619 --> 00:01:44,729
my background in my perspective and then

00:01:43,590 --> 00:01:47,220
we'll talk about really the most

00:01:44,729 --> 00:01:49,020
important thing I see to having a

00:01:47,220 --> 00:01:51,329
high-performance size of site builders

00:01:49,020 --> 00:01:54,030
just look looking at modules knowing

00:01:51,329 --> 00:01:56,219
what could possibly impact your site and

00:01:54,030 --> 00:01:58,860
once you have those what to look for

00:01:56,219 --> 00:02:00,570
after that and then we'll get a little

00:01:58,860 --> 00:02:03,270
bit more technical and talk about what

00:02:00,570 --> 00:02:04,590
are the types of caching and Drupal and

00:02:03,270 --> 00:02:07,649
I think this is really beneficial

00:02:04,590 --> 00:02:09,899
because if you aren't a developer that

00:02:07,649 --> 00:02:12,000
seems like a real big black box right

00:02:09,899 --> 00:02:12,870
you put stuff in you get a web page out

00:02:12,000 --> 00:02:15,569
you don't really know

00:02:12,870 --> 00:02:17,400
what happens in between so we'll talk

00:02:15,569 --> 00:02:19,470
about the types of caching and I think

00:02:17,400 --> 00:02:21,000
that will help you understand where you

00:02:19,470 --> 00:02:23,909
can get the biggest gain where

00:02:21,000 --> 00:02:25,489
improvements can actually be made and

00:02:23,909 --> 00:02:28,019
then we'll talk a little bit more about

00:02:25,489 --> 00:02:30,120
Drupal itself on the performance so if

00:02:28,019 --> 00:02:32,340
you configuration tricks and tools that

00:02:30,120 --> 00:02:35,610
are out there both in terms of Drupal

00:02:32,340 --> 00:02:38,190
and outside of Drupal and lastly if we

00:02:35,610 --> 00:02:40,440
have time we'll just talk about kind of

00:02:38,190 --> 00:02:42,239
the big names on the server side just so

00:02:40,440 --> 00:02:45,030
that as a site builder you kind of know

00:02:42,239 --> 00:02:48,540
what plugs into what and what oh the

00:02:45,030 --> 00:02:50,730
names are so first of all a little bit

00:02:48,540 --> 00:02:52,730
about myself I'm a senior technical

00:02:50,730 --> 00:02:56,269
consultant a talk we have been there

00:02:52,730 --> 00:02:58,920
almost two and a half years now I

00:02:56,269 --> 00:03:01,650
focused almost entirely on performance

00:02:58,920 --> 00:03:04,560
and structures scalability so I'm one of

00:03:01,650 --> 00:03:06,750
those back in nerdy server guys but I

00:03:04,560 --> 00:03:09,390
try to get up here on on a stage this

00:03:06,750 --> 00:03:11,400
time so I've been with Drupal for a

00:03:09,390 --> 00:03:13,500
little over five years now it's been a

00:03:11,400 --> 00:03:16,049
good healthy relationship so I know big

00:03:13,500 --> 00:03:18,030
fights or anything and I have about 10

00:03:16,049 --> 00:03:19,530
years of experience with linux and PHP

00:03:18,030 --> 00:03:21,389
and all this stuff so I have a little

00:03:19,530 --> 00:03:26,489
bit more perspective outside of just the

00:03:21,389 --> 00:03:28,680
Drupal PHP kind of area a little bit

00:03:26,489 --> 00:03:31,889
about my background on what gives me

00:03:28,680 --> 00:03:33,780
perspective here since i started with

00:03:31,889 --> 00:03:38,060
doc we have been to about 5 dozen

00:03:33,780 --> 00:03:40,440
clients across 25 states a little over

00:03:38,060 --> 00:03:43,139
125,000 miles flown three hundred nights

00:03:40,440 --> 00:03:45,299
in hotels a very supportive wife that

00:03:43,139 --> 00:03:50,310
helps me make all this happen well round

00:03:45,299 --> 00:03:52,620
of applause for so all these blue dots

00:03:50,310 --> 00:03:55,400
are all the different clients I've had

00:03:52,620 --> 00:03:59,250
so you can see all over the place from

00:03:55,400 --> 00:04:02,699
you know small town Gulf Mississippi to

00:03:59,250 --> 00:04:06,810
Iowa to Manhattan to every single range

00:04:02,699 --> 00:04:10,349
of small budget high budget you know 300

00:04:06,810 --> 00:04:11,970
million hits a month to 30,000 or 3000

00:04:10,349 --> 00:04:14,579
hits a month you know the full real

00:04:11,970 --> 00:04:16,019
range and everyone's worried about

00:04:14,579 --> 00:04:17,340
performance but one of the most

00:04:16,019 --> 00:04:19,229
important things is what's your

00:04:17,340 --> 00:04:21,269
definition right what does that actually

00:04:19,229 --> 00:04:26,280
mean to you what is a well-performing

00:04:21,269 --> 00:04:26,580
site so a couple of bad advice I'm sure

00:04:26,280 --> 00:04:29,490
you've

00:04:26,580 --> 00:04:30,900
heard at points Drupal is slow right

00:04:29,490 --> 00:04:34,110
everyone how many of you guys have heard

00:04:30,900 --> 00:04:37,949
that right I'm sure the rest of you have

00:04:34,110 --> 00:04:40,199
be honest drupal's big I mean it's a

00:04:37,949 --> 00:04:42,659
complex piece software but that doesn't

00:04:40,199 --> 00:04:46,409
mean it's slow right that has nothing to

00:04:42,659 --> 00:04:48,180
do is the speed of the system if it runs

00:04:46,409 --> 00:04:50,729
out of memory give it more right just

00:04:48,180 --> 00:04:53,550
make put up more servers just solve the

00:04:50,729 --> 00:04:54,930
problem that way if you have that kind

00:04:53,550 --> 00:04:57,539
of luxury and you can just buy more

00:04:54,930 --> 00:05:00,210
servers and put them in I am very happy

00:04:57,539 --> 00:05:02,280
and very jealous most people don't have

00:05:00,210 --> 00:05:05,789
that luxury to go just buy more servers

00:05:02,280 --> 00:05:08,819
whenever they're needed don't use CC k

00:05:05,789 --> 00:05:11,520
views panels whatever module you want to

00:05:08,819 --> 00:05:14,129
put in there all of these molecules work

00:05:11,520 --> 00:05:16,199
fine there you just have to know how to

00:05:14,129 --> 00:05:17,759
configure them and when to use them and

00:05:16,199 --> 00:05:19,830
when not to use them there's very few

00:05:17,759 --> 00:05:21,960
modules that I would look at when i'm

00:05:19,830 --> 00:05:25,379
auditing a site and say you should just

00:05:21,960 --> 00:05:27,509
take that out flat out very very few

00:05:25,379 --> 00:05:31,620
cases that that actually exist even for

00:05:27,509 --> 00:05:33,060
large modules like the user panels this

00:05:31,620 --> 00:05:35,370
last one I have a little asterisk next

00:05:33,060 --> 00:05:37,560
to varnish will solve all your problems

00:05:35,370 --> 00:05:39,949
you'll probably hear that at some point

00:05:37,560 --> 00:05:44,069
maybe today maybe in the near future

00:05:39,949 --> 00:05:45,659
it's kind of true so you'll hear it it's

00:05:44,069 --> 00:05:48,539
it's not really going to solve the

00:05:45,659 --> 00:05:50,520
Drupal problem but it tends to make your

00:05:48,539 --> 00:05:52,710
boss is very happy and make your end

00:05:50,520 --> 00:05:57,389
users not really notice what's going on

00:05:52,710 --> 00:06:00,150
behind the scenes so so let's talk about

00:05:57,389 --> 00:06:02,099
the first set of tips so evaluating

00:06:00,150 --> 00:06:03,629
modules I'm glad this is kind of the

00:06:02,099 --> 00:06:05,789
first presentation of the day I love

00:06:03,629 --> 00:06:07,440
doing the morning sessions because you

00:06:05,789 --> 00:06:09,810
guys are still awake and I see most you

00:06:07,440 --> 00:06:12,629
guys stuff coffee no one's lunch them

00:06:09,810 --> 00:06:15,810
back in their chair already asleep so I

00:06:12,629 --> 00:06:18,300
think I have you guys attention so

00:06:15,810 --> 00:06:20,460
valuing modules is in my opinion one of

00:06:18,300 --> 00:06:24,120
the top skills you can have in Drupal I

00:06:20,460 --> 00:06:25,139
mean there's what 9000 modules don't

00:06:24,120 --> 00:06:27,690
know something somewhere on that

00:06:25,139 --> 00:06:29,610
ballpark right now you can't really go

00:06:27,690 --> 00:06:31,650
through them one by one and read what

00:06:29,610 --> 00:06:34,259
each one does look at the code install

00:06:31,650 --> 00:06:36,449
it it just doesn't make sense so these

00:06:34,259 --> 00:06:39,209
are the top five things that I look at

00:06:36,449 --> 00:06:40,090
in order so the most important thing to

00:06:39,209 --> 00:06:42,400
me is obviously

00:06:40,090 --> 00:06:44,380
supported versions you know that's kind

00:06:42,400 --> 00:06:46,360
of a yes no pretty easy check your on

00:06:44,380 --> 00:06:50,680
Drupal 7 there's not a Drupal 7 version

00:06:46,360 --> 00:06:52,870
probably want to move along the second

00:06:50,680 --> 00:06:55,510
thing to me is actually maintain a

00:06:52,870 --> 00:06:57,460
reputation this is a little harder to

00:06:55,510 --> 00:06:59,080
figure out as a beginner just because

00:06:57,460 --> 00:07:01,690
you're you don't really know these names

00:06:59,080 --> 00:07:04,270
yet but to me it's the most important

00:07:01,690 --> 00:07:07,060
thing about a module itself so you know

00:07:04,270 --> 00:07:08,770
that some particular contributor writes

00:07:07,060 --> 00:07:11,229
really good code you've used other

00:07:08,770 --> 00:07:13,030
modules they've created I feel like

00:07:11,229 --> 00:07:15,790
that's more important than necessarily

00:07:13,030 --> 00:07:18,610
just number of mod number of sites using

00:07:15,790 --> 00:07:20,410
it primarily like kin that gave the

00:07:18,610 --> 00:07:21,970
keynote you know those are the type of

00:07:20,410 --> 00:07:24,400
people that I would look in a module and

00:07:21,970 --> 00:07:26,979
say you know it may have less users but

00:07:24,400 --> 00:07:29,710
I trust this person more than this code

00:07:26,979 --> 00:07:31,660
necessarily so I think that's a really

00:07:29,710 --> 00:07:33,550
valuable thing to keep an eye on is as

00:07:31,660 --> 00:07:35,530
you're building out more and more sites

00:07:33,550 --> 00:07:37,840
and you start seeing names over and over

00:07:35,530 --> 00:07:39,639
just kind of take note of that take note

00:07:37,840 --> 00:07:41,560
of who maintains a modules who's helping

00:07:39,639 --> 00:07:44,169
you out who's you know who's really

00:07:41,560 --> 00:07:47,530
trying to benefit Drupal your site the

00:07:44,169 --> 00:07:50,710
whole community and then there's total

00:07:47,530 --> 00:07:53,260
usage I think just looking at this big

00:07:50,710 --> 00:07:56,950
number here that says like this is for

00:07:53,260 --> 00:07:58,810
view so I think it's a couple hundred

00:07:56,950 --> 00:08:02,919
thousand four hundred thousand something

00:07:58,810 --> 00:08:05,200
like that that's obviously the single

00:08:02,919 --> 00:08:09,130
easiest thing to check for one has

00:08:05,200 --> 00:08:11,530
40,000 one has four even 4,000 right

00:08:09,130 --> 00:08:13,479
that's a huge difference once your time

00:08:11,530 --> 00:08:17,770
to order of magnitude differences that's

00:08:13,479 --> 00:08:19,539
actually significant the fourth thing I

00:08:17,770 --> 00:08:21,970
look for which is kind of tricky is

00:08:19,539 --> 00:08:23,500
number of open issues so this doesn't

00:08:21,970 --> 00:08:25,539
really say anything about the module

00:08:23,500 --> 00:08:27,940
itself but it could say that the

00:08:25,539 --> 00:08:30,250
maintainer 'he's abandon it it may not

00:08:27,940 --> 00:08:32,520
be active there may be a lot of people

00:08:30,250 --> 00:08:34,870
they're just confused about how it works

00:08:32,520 --> 00:08:36,459
so it's really important to look at that

00:08:34,870 --> 00:08:38,200
and just kind of see is this something

00:08:36,459 --> 00:08:39,729
that there's actually bigger problems

00:08:38,200 --> 00:08:41,560
out there that there's a lot of people

00:08:39,729 --> 00:08:45,220
like me trying to get questions answered

00:08:41,560 --> 00:08:47,740
and can't get answered and the last

00:08:45,220 --> 00:08:50,709
thing that I think very few people look

00:08:47,740 --> 00:08:51,540
at is most people see this big number

00:08:50,709 --> 00:08:53,519
here how many

00:08:51,540 --> 00:08:56,009
I to use it there's a little link next

00:08:53,519 --> 00:08:57,810
so it says view usage statistics it

00:08:56,009 --> 00:08:59,790
gives you this nice big colorful graph

00:08:57,810 --> 00:09:02,730
of how the usage is actually changed

00:08:59,790 --> 00:09:05,070
over time and this is really cool

00:09:02,730 --> 00:09:08,639
because especially for like the whole

00:09:05,070 --> 00:09:10,800
life span of Drupal 7 if a module is the

00:09:08,639 --> 00:09:13,019
only option at the beginning a lot of

00:09:10,800 --> 00:09:14,850
people are going to use it but later on

00:09:13,019 --> 00:09:17,069
if there's a better option that comes

00:09:14,850 --> 00:09:18,690
out of it that you're going to see that

00:09:17,069 --> 00:09:22,230
one kind of upswing and the other either

00:09:18,690 --> 00:09:25,259
stay flat or go down so this raw number

00:09:22,230 --> 00:09:27,930
here is very important but this is maybe

00:09:25,259 --> 00:09:29,790
just as important to see is this getting

00:09:27,930 --> 00:09:31,740
better as it's getting worse is there a

00:09:29,790 --> 00:09:34,500
better option out there kind of look at

00:09:31,740 --> 00:09:36,269
how that charts actually trending it's

00:09:34,500 --> 00:09:42,420
really useful and I think a lot of

00:09:36,269 --> 00:09:44,160
people just don't realize it's there so

00:09:42,420 --> 00:09:45,870
when we're evaluating these modules for

00:09:44,160 --> 00:09:48,120
performance once we've already decide

00:09:45,870 --> 00:09:50,790
and say sure the samaja looks good I can

00:09:48,120 --> 00:09:52,620
trust it I'm not concerned what do we

00:09:50,790 --> 00:09:55,829
actually do to say is this module going

00:09:52,620 --> 00:09:57,540
to perform well or what's possible the

00:09:55,829 --> 00:09:59,730
first thing I look at is any time before

00:09:57,540 --> 00:10:01,470
you install a module you should get a

00:09:59,730 --> 00:10:04,620
good sense of how your site's behaving

00:10:01,470 --> 00:10:06,389
whether that's a raw number or even it's

00:10:04,620 --> 00:10:08,220
just a feeling of browsing around the

00:10:06,389 --> 00:10:10,290
site before you enable and work on that

00:10:08,220 --> 00:10:12,300
new module it's really helpful to know

00:10:10,290 --> 00:10:13,889
where you came from right it's really

00:10:12,300 --> 00:10:16,680
helpful to do that so that when you add

00:10:13,889 --> 00:10:19,079
that new module you're not just lost and

00:10:16,680 --> 00:10:21,029
no was it the module just added was

00:10:19,079 --> 00:10:22,620
something I did a week ago was it

00:10:21,029 --> 00:10:25,860
someone some thoughts was this something

00:10:22,620 --> 00:10:27,510
someone else did two days ago you know

00:10:25,860 --> 00:10:29,730
the theme that you'll probably hear over

00:10:27,510 --> 00:10:31,980
and over for me is if you're really

00:10:29,730 --> 00:10:34,500
worried about performance you can't

00:10:31,980 --> 00:10:38,790
think about performance in terms of this

00:10:34,500 --> 00:10:40,860
feel slow or this feels fast it's really

00:10:38,790 --> 00:10:42,510
hard to deal with performance if you're

00:10:40,860 --> 00:10:44,730
not actually quantifying or at least

00:10:42,510 --> 00:10:45,930
doing some sort of basic numbers to

00:10:44,730 --> 00:10:49,920
actually figure out how your site's

00:10:45,930 --> 00:10:52,199
working one nice trick also for

00:10:49,920 --> 00:10:54,870
performance is in the issue queues

00:10:52,199 --> 00:10:56,970
there's actually a tag that especially

00:10:54,870 --> 00:10:59,639
bigger modules will use the performance

00:10:56,970 --> 00:11:02,760
tag and this is to signify any kind of

00:10:59,639 --> 00:11:04,870
issue that relates directly to improving

00:11:02,760 --> 00:11:07,000
the performance of a module

00:11:04,870 --> 00:11:09,130
if you search for performance you'll get

00:11:07,000 --> 00:11:11,500
a lot of these my slide my site is slow

00:11:09,130 --> 00:11:15,070
please try and help me kind of messages

00:11:11,500 --> 00:11:17,140
if you use a performance tag most of

00:11:15,070 --> 00:11:18,970
that will actually relate to really

00:11:17,140 --> 00:11:20,830
fixing the module so that's a nice

00:11:18,970 --> 00:11:22,839
little trick to don't search for

00:11:20,830 --> 00:11:28,570
performance look at the performance tag

00:11:22,839 --> 00:11:30,190
instead so here's some other questions

00:11:28,570 --> 00:11:32,170
asked when you're actually evaluating

00:11:30,190 --> 00:11:34,510
these modules and these are I think some

00:11:32,170 --> 00:11:37,930
of the most important ones that again I

00:11:34,510 --> 00:11:40,540
think people get the how many of you

00:11:37,930 --> 00:11:42,010
guys heard the term module buffet can't

00:11:40,540 --> 00:11:43,750
remember where I heard that from but you

00:11:42,010 --> 00:11:46,420
know you have all these thousands of

00:11:43,750 --> 00:11:48,130
modules out there it's all one cost free

00:11:46,420 --> 00:11:50,230
which is great so you just can go out

00:11:48,130 --> 00:11:52,600
there get three or four hundred modules

00:11:50,230 --> 00:11:54,400
put on your site and now you have no

00:11:52,600 --> 00:11:57,010
idea what's happened I actually worked

00:11:54,400 --> 00:11:59,170
on a site no joke that over 500 modules

00:11:57,010 --> 00:12:02,320
installed and they couldn't tell me what

00:11:59,170 --> 00:12:04,750
two-thirds of them did so it's really

00:12:02,320 --> 00:12:06,339
easy to buy into that and say it's you

00:12:04,750 --> 00:12:08,620
know you download it you install it and

00:12:06,339 --> 00:12:10,300
you can forget about next six months so

00:12:08,620 --> 00:12:12,490
these are really key questions that kind

00:12:10,300 --> 00:12:14,230
of ask yourself first of all when does

00:12:12,490 --> 00:12:16,209
this module run this is the most

00:12:14,230 --> 00:12:18,610
important thing when you're evaluating a

00:12:16,209 --> 00:12:21,400
module for performance is this something

00:12:18,610 --> 00:12:23,350
that's going to run selectively like on

00:12:21,400 --> 00:12:25,510
cron or something in the background is

00:12:23,350 --> 00:12:27,970
this something that's going to run every

00:12:25,510 --> 00:12:30,610
time contents updated every time I users

00:12:27,970 --> 00:12:31,900
updated every single page load and

00:12:30,610 --> 00:12:34,120
that's something you can really

00:12:31,900 --> 00:12:36,370
conceptualize without knowing too much

00:12:34,120 --> 00:12:38,290
about the module right you think about

00:12:36,370 --> 00:12:40,630
something like views or panels that's

00:12:38,290 --> 00:12:42,850
controlling one page right if you go to

00:12:40,630 --> 00:12:45,459
that page it could slow down if you get

00:12:42,850 --> 00:12:47,560
a different page maybe not if you

00:12:45,459 --> 00:12:49,839
download a module that changes how users

00:12:47,560 --> 00:12:51,370
login again that's kind of obvious it's

00:12:49,839 --> 00:12:54,400
you know when that's going to affect

00:12:51,370 --> 00:12:56,170
your site so definitely that's the first

00:12:54,400 --> 00:13:01,570
question I ask yourself when looking at

00:12:56,170 --> 00:13:03,160
modules how does a scale meaning is this

00:13:01,570 --> 00:13:05,920
something that sweeps across all of your

00:13:03,160 --> 00:13:08,380
content all of your users or one user

00:13:05,920 --> 00:13:11,320
one piece of content at a time really

00:13:08,380 --> 00:13:15,610
simple question is this once per person

00:13:11,320 --> 00:13:18,790
or is this once per everything

00:13:15,610 --> 00:13:19,959
what happens if it fails this is a

00:13:18,790 --> 00:13:21,760
question that even goes beyond

00:13:19,959 --> 00:13:24,550
performance this is question that really

00:13:21,760 --> 00:13:26,170
goes us stability of a site if you see

00:13:24,550 --> 00:13:28,810
this Great Mall job thing that not many

00:13:26,170 --> 00:13:32,079
people are using and you use it for one

00:13:28,810 --> 00:13:34,420
cool little JavaScript e-type effect on

00:13:32,079 --> 00:13:36,279
your site and it fails the site still

00:13:34,420 --> 00:13:39,160
works doesn't affect performance nothing

00:13:36,279 --> 00:13:42,130
happens if you put in some new module

00:13:39,160 --> 00:13:44,140
that tries to do some external web

00:13:42,130 --> 00:13:46,390
services or something weird when users

00:13:44,140 --> 00:13:48,820
login and it fails guess what no one can

00:13:46,390 --> 00:13:52,029
login and if they could it's going to be

00:13:48,820 --> 00:13:53,320
really slow so you have to look at if it

00:13:52,029 --> 00:13:57,310
fails how is that actually going to

00:13:53,320 --> 00:13:59,230
impact my site does my site care about

00:13:57,310 --> 00:14:01,839
performance this may sound a little

00:13:59,230 --> 00:14:03,670
weird but if you really think about how

00:14:01,839 --> 00:14:05,890
all the different sites you guys

00:14:03,670 --> 00:14:07,810
probably work on if you have some sort

00:14:05,890 --> 00:14:09,610
of internal site for a group of ten

00:14:07,810 --> 00:14:12,610
people do you really want to spend the

00:14:09,610 --> 00:14:14,709
time trying to get it down to two

00:14:12,610 --> 00:14:16,779
seconds a page or half a second a page

00:14:14,709 --> 00:14:18,700
it doesn't make a lot of sense that's

00:14:16,779 --> 00:14:20,800
all anonymous doesn't make much sense

00:14:18,700 --> 00:14:23,470
either but if it's something that people

00:14:20,800 --> 00:14:26,050
are logging in or its high traffic you

00:14:23,470 --> 00:14:28,839
actually want to keep in mind what type

00:14:26,050 --> 00:14:30,790
of time do I want to spend on this you

00:14:28,839 --> 00:14:33,550
know I see a lot of internal sites that

00:14:30,790 --> 00:14:35,350
may be 10-15 people use and people spend

00:14:33,550 --> 00:14:37,720
all kinds of time and money trying to

00:14:35,350 --> 00:14:40,089
optimize it in their public site that

00:14:37,720 --> 00:14:42,540
has two million hits a month they say oh

00:14:40,089 --> 00:14:45,579
well we haven't gotten to that yet

00:14:42,540 --> 00:14:46,870
doesn't make a lot of sense to me so

00:14:45,579 --> 00:14:49,570
definitely look at it in terms of

00:14:46,870 --> 00:14:51,730
priority slow is not always bad it could

00:14:49,570 --> 00:14:55,000
just be farther down than that never

00:14:51,730 --> 00:14:57,040
ending to do list and last do I really

00:14:55,000 --> 00:14:59,380
need this module this is how you end up

00:14:57,040 --> 00:15:01,149
with 500 modules on your site is I

00:14:59,380 --> 00:15:03,699
enable this module because I thought I

00:15:01,149 --> 00:15:07,140
needed at some point I never revisit it

00:15:03,699 --> 00:15:07,140
now it's just sitting around

00:15:14,190 --> 00:15:18,790
so when you have a MOT when you have a

00:15:16,630 --> 00:15:20,050
performance problem what are you

00:15:18,790 --> 00:15:22,450
actually looking for how are you

00:15:20,050 --> 00:15:24,130
actually going to solve this problem so

00:15:22,450 --> 00:15:26,770
the first thing is when does it occur

00:15:24,130 --> 00:15:29,350
right similar to evaluating modules same

00:15:26,770 --> 00:15:33,190
concept is my site slow and very

00:15:29,350 --> 00:15:35,500
particular times of day certain actions

00:15:33,190 --> 00:15:37,720
are being performed you know when it is

00:15:35,500 --> 00:15:39,070
that slowness happen if someone emails

00:15:37,720 --> 00:15:41,320
you and say hey the site seems slow

00:15:39,070 --> 00:15:43,810
right now are they logged in are they

00:15:41,320 --> 00:15:46,480
creating content are they looking at

00:15:43,810 --> 00:15:49,690
reports you know what does that mean so

00:15:46,480 --> 00:15:52,180
that's the number one thing when did it

00:15:49,690 --> 00:15:55,120
start so we'll kind of come back to this

00:15:52,180 --> 00:15:57,040
in a minute but if you can look at your

00:15:55,120 --> 00:16:00,340
site and say the home page 2 months ago

00:15:57,040 --> 00:16:04,120
took one second a month ago it took 1.2

00:16:00,340 --> 00:16:05,740
seconds now it's taking 1.5 you know and

00:16:04,120 --> 00:16:08,260
you can see is that slowed down didn't

00:16:05,740 --> 00:16:11,560
start yesterday it started progressively

00:16:08,260 --> 00:16:13,540
over time so it's really key that even

00:16:11,560 --> 00:16:16,000
if it's just an Excel document that you

00:16:13,540 --> 00:16:18,820
go in once a week right home page two

00:16:16,000 --> 00:16:21,340
seconds homepage 1.1 seconds whatever it

00:16:18,820 --> 00:16:23,350
is that's immensely useful once a

00:16:21,340 --> 00:16:24,970
problem happens because you can narrow

00:16:23,350 --> 00:16:26,380
it down to what modules could have

00:16:24,970 --> 00:16:31,660
caused and what issues could have

00:16:26,380 --> 00:16:33,700
happened and also who's to blame so one

00:16:31,660 --> 00:16:35,680
thing here that I think is really key

00:16:33,700 --> 00:16:38,620
about especially when you're working a

00:16:35,680 --> 00:16:40,180
development team is when you get a bug

00:16:38,620 --> 00:16:42,070
and you kind of put the bug back out

00:16:40,180 --> 00:16:45,310
right or there's a performance feature

00:16:42,070 --> 00:16:48,790
that goes back out it's really easy to

00:16:45,310 --> 00:16:52,150
just say you know I I ran to an issue

00:16:48,790 --> 00:16:53,860
this page is slow but if you have some

00:16:52,150 --> 00:16:56,260
sort of accountability to know who to go

00:16:53,860 --> 00:16:59,200
back to they can tell you a lot more

00:16:56,260 --> 00:17:01,360
about what they did what was actually

00:16:59,200 --> 00:17:04,480
configured so this is more of kind of a

00:17:01,360 --> 00:17:06,790
personal way to manage the problem but

00:17:04,480 --> 00:17:09,190
if you know who did it there's some sort

00:17:06,790 --> 00:17:11,740
of mark on the page or marking code that

00:17:09,190 --> 00:17:13,900
tells you what happened that's just as

00:17:11,740 --> 00:17:15,790
useful as when did it start because

00:17:13,900 --> 00:17:17,320
ultimately it's going to be harder for

00:17:15,790 --> 00:17:19,810
you to figure out the problem then go to

00:17:17,320 --> 00:17:22,170
the person that in some way cause the

00:17:19,810 --> 00:17:22,170
problem

00:17:23,329 --> 00:17:29,430
so from my experience these are kind of

00:17:26,400 --> 00:17:32,940
the four main areas where performance

00:17:29,430 --> 00:17:35,550
issues actually happen number one or

00:17:32,940 --> 00:17:39,450
what I call Paige building modules so

00:17:35,550 --> 00:17:41,070
views panels display sleep I'm sure you

00:17:39,450 --> 00:17:43,050
guys can name plenty of others similar

00:17:41,070 --> 00:17:45,780
to that if it's taking over the whole

00:17:43,050 --> 00:17:47,670
execution of the page guess what that's

00:17:45,780 --> 00:17:50,040
going to stop everything while it's

00:17:47,670 --> 00:17:53,250
working so if it's complicated or not

00:17:50,040 --> 00:17:54,840
not implemented correctly it's just

00:17:53,250 --> 00:17:57,180
going to sit there and spin until that's

00:17:54,840 --> 00:18:00,390
done that's the number one biggest thing

00:17:57,180 --> 00:18:03,930
performance number one problem or

00:18:00,390 --> 00:18:06,060
performance issues occur external web

00:18:03,930 --> 00:18:08,460
services if people are logging in via

00:18:06,060 --> 00:18:11,970
Facebook people are logging in via some

00:18:08,460 --> 00:18:14,580
internal single sign-on tool or every

00:18:11,970 --> 00:18:17,430
time someone logs in your noting that in

00:18:14,580 --> 00:18:21,330
some other system definitely the next

00:18:17,430 --> 00:18:24,240
biggest thing because anything that's

00:18:21,330 --> 00:18:27,030
external you're not just talking about

00:18:24,240 --> 00:18:29,640
those really quick web server to

00:18:27,030 --> 00:18:31,380
database chatting back and forth it

00:18:29,640 --> 00:18:36,150
could be something that takes half a

00:18:31,380 --> 00:18:39,420
second just to get a result back overall

00:18:36,150 --> 00:18:40,800
complexity so you know this is the one I

00:18:39,420 --> 00:18:43,530
see a lot you know a number of modules

00:18:40,800 --> 00:18:45,390
everyone's saying this one you'd be

00:18:43,530 --> 00:18:47,880
amazed how many times I see that where

00:18:45,390 --> 00:18:49,230
someone built a panel someone else came

00:18:47,880 --> 00:18:50,910
along and said well I need that same

00:18:49,230 --> 00:18:52,680
thing and they put the panel in there

00:18:50,910 --> 00:18:54,300
and then someone else need a view so

00:18:52,680 --> 00:18:57,240
they put that in the panel and by the

00:18:54,300 --> 00:19:00,240
time you end up you have like 15 views

00:18:57,240 --> 00:19:04,290
and four panels on one page even if

00:19:00,240 --> 00:19:06,000
that's cached to the high heavens the

00:19:04,290 --> 00:19:09,360
site's still that's a lot of stuff

00:19:06,000 --> 00:19:11,400
happening so that's or just looking at

00:19:09,360 --> 00:19:13,470
how a page is built in terms of the

00:19:11,400 --> 00:19:20,370
number of layers is also a really big

00:19:13,470 --> 00:19:22,560
key important and just miss configure

00:19:20,370 --> 00:19:24,810
components so you know this is kind of

00:19:22,560 --> 00:19:27,090
that big miscellaneous category of I

00:19:24,810 --> 00:19:29,970
could list 40 more things but I'll be

00:19:27,090 --> 00:19:32,310
lazy list one more just simple things

00:19:29,970 --> 00:19:34,400
like I forgot to turn on page caching I

00:19:32,310 --> 00:19:35,990
forgot to turn on block caching

00:19:34,400 --> 00:19:39,080
you know these are the kind of things

00:19:35,990 --> 00:19:40,940
that as you're a newer site builder you

00:19:39,080 --> 00:19:43,850
just kind of forget from time to time as

00:19:40,940 --> 00:19:46,250
you get used to site building this last

00:19:43,850 --> 00:19:48,530
eighty percent just kind of falls in

00:19:46,250 --> 00:19:50,210
where you know Anonymous is slow oh wait

00:19:48,530 --> 00:19:52,310
I forgot page caching you know you just

00:19:50,210 --> 00:19:58,520
kind of pick the rest is eighty percent

00:19:52,310 --> 00:20:00,410
up and it so managing performance this

00:19:58,520 --> 00:20:02,510
if there's nothing else you take from

00:20:00,410 --> 00:20:06,740
this whole presentation this is a slide

00:20:02,510 --> 00:20:08,480
I want everyone to focus on is what does

00:20:06,740 --> 00:20:11,270
performance mean to you and how is that

00:20:08,480 --> 00:20:13,580
actually fixing your problem right keep

00:20:11,270 --> 00:20:16,010
records of performance over time this

00:20:13,580 --> 00:20:17,960
one I said Excel documents something

00:20:16,010 --> 00:20:20,720
simple emails you know it doesn't matter

00:20:17,960 --> 00:20:23,360
how you do it but if you can just look

00:20:20,720 --> 00:20:25,640
at month by month how fast are pages

00:20:23,360 --> 00:20:27,620
you'd be amazed how much easier that

00:20:25,640 --> 00:20:30,800
makes troubleshooting I mean it just

00:20:27,620 --> 00:20:32,630
changes completely night and day when

00:20:30,800 --> 00:20:35,180
our modules enabled winner modules

00:20:32,630 --> 00:20:37,460
disabled when did was there a huge spike

00:20:35,180 --> 00:20:39,350
and user traffic you guys are already

00:20:37,460 --> 00:20:41,480
exchanging these emails with people just

00:20:39,350 --> 00:20:43,970
write it down somewhere we can actually

00:20:41,480 --> 00:20:46,210
keep a record of it it's just amazing

00:20:43,970 --> 00:20:49,730
what kind of difference that makes

00:20:46,210 --> 00:20:52,340
establish a performance metric this is

00:20:49,730 --> 00:20:54,560
something i'd say almost no client ever

00:20:52,340 --> 00:20:57,140
had actually had something they could

00:20:54,560 --> 00:20:59,810
point to and say this is fast for us

00:20:57,140 --> 00:21:01,760
this is our definition of fast I mean

00:20:59,810 --> 00:21:04,250
you should be able to say with pretty

00:21:01,760 --> 00:21:06,620
good certainty eighty percent of pages

00:21:04,250 --> 00:21:08,720
to come back from droop one half a

00:21:06,620 --> 00:21:10,550
second or completely render in three

00:21:08,720 --> 00:21:13,310
seconds whatever the numbers are its

00:21:10,550 --> 00:21:16,100
unique every project that's really

00:21:13,310 --> 00:21:18,620
important because it shows you if you're

00:21:16,100 --> 00:21:20,660
within that metric yes you're good if

00:21:18,620 --> 00:21:23,660
you're not no you're you know you need

00:21:20,660 --> 00:21:25,670
to work on it so much of performances

00:21:23,660 --> 00:21:27,860
people fighting back and forth though it

00:21:25,670 --> 00:21:29,900
feels slow it feels fast and if

00:21:27,860 --> 00:21:31,640
ninety-five percent of the users are

00:21:29,900 --> 00:21:33,740
seeing it in less than two seconds or

00:21:31,640 --> 00:21:37,430
you know there's some number there to

00:21:33,740 --> 00:21:40,250
shoot for if there's one off page it

00:21:37,430 --> 00:21:41,810
happens to be slow you really can't do

00:21:40,250 --> 00:21:44,720
anything about that you know at a

00:21:41,810 --> 00:21:47,360
certain point so you know I think

00:21:44,720 --> 00:21:48,140
everyone for your site you should have

00:21:47,360 --> 00:21:50,810
some sort

00:21:48,140 --> 00:21:54,100
of definition like this some percentage

00:21:50,810 --> 00:21:56,990
of pages should return from Drupal in X

00:21:54,100 --> 00:21:58,910
milliseconds and render in X seconds

00:21:56,990 --> 00:22:00,560
that's something you guys should just be

00:21:58,910 --> 00:22:02,240
able to tell if you ever have an

00:22:00,560 --> 00:22:04,310
external person work on the site or a

00:22:02,240 --> 00:22:06,110
new person come into the project that

00:22:04,310 --> 00:22:10,700
should be front and center on your whole

00:22:06,110 --> 00:22:12,590
performance plan adopted definition of

00:22:10,700 --> 00:22:14,110
done this is actually some things change

00:22:12,590 --> 00:22:16,220
a lot in the Drupal community that

00:22:14,110 --> 00:22:18,860
connects they touched on a little bit

00:22:16,220 --> 00:22:21,070
with user tests or unit testing and some

00:22:18,860 --> 00:22:23,120
of the other QA work that's going on if

00:22:21,070 --> 00:22:26,030
someone implements of you and it's

00:22:23,120 --> 00:22:28,070
performing slowly it's not done right it

00:22:26,030 --> 00:22:31,040
may work but they're not done with that

00:22:28,070 --> 00:22:33,170
work so this is more of a little bit

00:22:31,040 --> 00:22:36,350
more of a project management sort of

00:22:33,170 --> 00:22:37,940
aspect to throw in there but looking at

00:22:36,350 --> 00:22:40,820
performance is just part of the

00:22:37,940 --> 00:22:43,370
development helps from building a site

00:22:40,820 --> 00:22:44,900
for months get that fourth month and

00:22:43,370 --> 00:22:47,660
realize you have to go back and change a

00:22:44,900 --> 00:22:49,670
lot of stuff you know it's really easy

00:22:47,660 --> 00:22:52,580
to just say during QA when you're

00:22:49,670 --> 00:22:55,270
testing something if it's slow it's not

00:22:52,580 --> 00:22:58,490
done push it back get it redeveloped and

00:22:55,270 --> 00:23:01,060
finally get it fixed later so really

00:22:58,490 --> 00:23:03,230
sticking to that makes a huge difference

00:23:01,060 --> 00:23:07,820
don't behind behind infrastructure

00:23:03,230 --> 00:23:15,320
that's you know common and again if you

00:23:07,820 --> 00:23:18,440
have the money bless you so this section

00:23:15,320 --> 00:23:21,410
I want to throw in for so actually let

00:23:18,440 --> 00:23:23,150
me take a step back I have a lot of

00:23:21,410 --> 00:23:24,800
stuff in these slides it's all on

00:23:23,150 --> 00:23:28,010
SlideShare if you guys are taking notes

00:23:24,800 --> 00:23:29,690
you know I appreciate it but I'd rather

00:23:28,010 --> 00:23:33,050
you guys be thinking about questions and

00:23:29,690 --> 00:23:34,580
kind of coming up with questions I'd

00:23:33,050 --> 00:23:36,410
rather kind of overload you guys with

00:23:34,580 --> 00:23:38,540
this session and then if you have any

00:23:36,410 --> 00:23:39,890
questions you can feel free to reach out

00:23:38,540 --> 00:23:42,860
to me on Twitter or something like that

00:23:39,890 --> 00:23:48,770
so there's a lot of stuff in here that I

00:23:42,860 --> 00:23:51,290
think's good hopefully you guys do so

00:23:48,770 --> 00:23:52,850
types of caches if you're a site builder

00:23:51,290 --> 00:23:55,280
you probably don't think about caching

00:23:52,850 --> 00:23:56,270
outside of what page and blog right

00:23:55,280 --> 00:23:59,690
those are probably the only two you've

00:23:56,270 --> 00:24:01,680
ever considered but when you're talking

00:23:59,690 --> 00:24:02,940
about performance and Drupal it's

00:24:01,680 --> 00:24:05,280
really key to understand that if

00:24:02,940 --> 00:24:08,190
something's cached it's fast if

00:24:05,280 --> 00:24:10,160
something's not cached it's slow pretty

00:24:08,190 --> 00:24:14,310
easy to make those kind of comparisons

00:24:10,160 --> 00:24:16,530
so what are the types of caches there's

00:24:14,310 --> 00:24:17,970
what I call application level caching so

00:24:16,530 --> 00:24:20,970
these this is the kashem you don't

00:24:17,970 --> 00:24:22,920
really see right this is the you know

00:24:20,970 --> 00:24:26,550
something's not showing up clear the

00:24:22,920 --> 00:24:28,760
cache it's that sort of exchange you

00:24:26,550 --> 00:24:32,300
know menu items not showing up a

00:24:28,760 --> 00:24:36,000
filtered output a particular path I

00:24:32,300 --> 00:24:37,200
filter in there twice that's awesome you

00:24:36,000 --> 00:24:39,750
know these are the kind of things really

00:24:37,200 --> 00:24:41,580
core to Drupal that you probably don't

00:24:39,750 --> 00:24:43,950
touch other than just clearing it out

00:24:41,580 --> 00:24:45,960
completely and these are also the you

00:24:43,950 --> 00:24:48,360
can't really configure these you can't

00:24:45,960 --> 00:24:51,420
really add performance to this so this

00:24:48,360 --> 00:24:55,310
is that baseline levels of caches it

00:24:51,420 --> 00:24:57,930
probably doesn't affect you day to day

00:24:55,310 --> 00:25:00,060
the next level up from that kind of

00:24:57,930 --> 00:25:02,460
closer to the visual part of the size

00:25:00,060 --> 00:25:05,460
what I call component level caching so

00:25:02,460 --> 00:25:06,960
this is views panels blocks parts of a

00:25:05,460 --> 00:25:09,060
page that you're actually seeing and

00:25:06,960 --> 00:25:11,310
working on and this is really the

00:25:09,060 --> 00:25:13,320
biggest key for authenticated users if

00:25:11,310 --> 00:25:15,930
someone's anonymous they're going to get

00:25:13,320 --> 00:25:18,240
the whole page rendered anyways if

00:25:15,930 --> 00:25:20,460
they're authenticated this is the place

00:25:18,240 --> 00:25:22,770
where they're going to see slowness slow

00:25:20,460 --> 00:25:26,100
view slow panels slow blocks whatever it

00:25:22,770 --> 00:25:28,590
is so this is really key because if

00:25:26,100 --> 00:25:30,720
someone if a page hasn't been rendered

00:25:28,590 --> 00:25:32,580
or their authenticated and you haven't

00:25:30,720 --> 00:25:34,950
optimized views and panels and whatever

00:25:32,580 --> 00:25:36,540
else there's nothing below that that's

00:25:34,950 --> 00:25:38,810
going to save you right each one of

00:25:36,540 --> 00:25:42,270
these levels is kind of independent

00:25:38,810 --> 00:25:44,760
another key is how are these actually

00:25:42,270 --> 00:25:47,280
cached so just to point out a couple

00:25:44,760 --> 00:25:50,100
things like blocks are cached as actual

00:25:47,280 --> 00:25:53,100
text there's nothing being rear-ender

00:25:50,100 --> 00:25:55,200
Drupal just goes a database gets a chunk

00:25:53,100 --> 00:25:57,510
of HTML sticks it in the page it's

00:25:55,200 --> 00:26:00,930
extremely efficient something like a

00:25:57,510 --> 00:26:03,360
view or a panel it's still this big PHP

00:26:00,930 --> 00:26:06,930
object thing that it has to unwrap

00:26:03,360 --> 00:26:08,100
actually work on and put on the page so

00:26:06,930 --> 00:26:11,010
there's different levels of

00:26:08,100 --> 00:26:14,540
effectiveness but the key is component

00:26:11,010 --> 00:26:19,210
level authenticated users that's the

00:26:14,540 --> 00:26:22,580
same purpose now of course page level is

00:26:19,210 --> 00:26:25,880
for anonymous users its pages that are

00:26:22,580 --> 00:26:27,650
the same for everyone as long as

00:26:25,880 --> 00:26:29,570
everything's cached and they're all

00:26:27,650 --> 00:26:31,490
anonymous you shouldn't ever really run

00:26:29,570 --> 00:26:33,260
into performance issues if you are

00:26:31,490 --> 00:26:36,980
there's probably something pretty

00:26:33,260 --> 00:26:39,020
serious going on one nice little trick

00:26:36,980 --> 00:26:42,260
that I think a lot of people don't know

00:26:39,020 --> 00:26:47,150
about Drupal 6 is what's called fast

00:26:42,260 --> 00:26:50,060
path caching you can't do this with the

00:26:47,150 --> 00:26:51,710
regular Drupal database easily but what

00:26:50,060 --> 00:26:53,660
this basically does is if an anonymous

00:26:51,710 --> 00:26:56,000
user comes into your site comes into

00:26:53,660 --> 00:26:58,490
Drupal this will actually send the page

00:26:56,000 --> 00:27:01,550
out before much happens in Drupal so

00:26:58,490 --> 00:27:04,370
it's literally just a method of caching

00:27:01,550 --> 00:27:08,600
so it's a lot faster than usual this

00:27:04,370 --> 00:27:11,750
exists also in Drupal 7 but in Drupal

00:27:08,600 --> 00:27:13,640
and there's really other ways to cache

00:27:11,750 --> 00:27:15,590
pages to make them more efficient but

00:27:13,640 --> 00:27:17,450
this is a nice little trick that I think

00:27:15,590 --> 00:27:19,640
most people don't know about so like the

00:27:17,450 --> 00:27:22,790
memcache module I think supports it and

00:27:19,640 --> 00:27:30,830
a lot of other tools but fast path is

00:27:22,790 --> 00:27:32,690
the term to kind of look into it so

00:27:30,830 --> 00:27:35,510
configuring Drupal so what are some of

00:27:32,690 --> 00:27:37,640
the top things you can do physically on

00:27:35,510 --> 00:27:41,570
your site to actually change how Drupal

00:27:37,640 --> 00:27:43,760
is performing the number one thing is I

00:27:41,570 --> 00:27:46,430
think page caching goes without saying

00:27:43,760 --> 00:27:48,110
I'm not sure it's even on here there's

00:27:46,430 --> 00:27:50,300
no real reason not to use that if

00:27:48,110 --> 00:27:52,580
they're anonymous you're not displaying

00:27:50,300 --> 00:27:55,910
anything special for them there's no

00:27:52,580 --> 00:27:59,150
real reason not to cash pages caching

00:27:55,910 --> 00:28:01,220
blocks is really key because of

00:27:59,150 --> 00:28:02,990
authenticate users this is one of the

00:28:01,220 --> 00:28:06,650
best things you can do for your site for

00:28:02,990 --> 00:28:08,780
performance out of the box it gets

00:28:06,650 --> 00:28:11,690
disabled by note access so by note

00:28:08,780 --> 00:28:15,950
access I mean organic groups taxonomy

00:28:11,690 --> 00:28:18,260
access control content access all those

00:28:15,950 --> 00:28:21,590
types of modules those are turned on you

00:28:18,260 --> 00:28:23,240
can't use block caching it's not it's

00:28:21,590 --> 00:28:25,070
not something to say don't use those

00:28:23,240 --> 00:28:25,929
modules but if you don't really need

00:28:25,070 --> 00:28:28,149
them

00:28:25,929 --> 00:28:31,899
you're losing a big performance game

00:28:28,149 --> 00:28:33,820
that's possible so you know if you need

00:28:31,899 --> 00:28:35,289
it you need it if you don't make sure

00:28:33,820 --> 00:28:36,940
those aren't abled and not in use

00:28:35,289 --> 00:28:42,039
because it's actually affecting your

00:28:36,940 --> 00:28:45,610
site content changes this is one that

00:28:42,039 --> 00:28:47,350
I'm always amazed that you know I'll run

00:28:45,610 --> 00:28:49,269
to some big site that's doing all kinds

00:28:47,350 --> 00:28:51,269
of crazy stuff and this is one of the

00:28:49,269 --> 00:28:54,279
kind of deep dark secrets of Drupal is

00:28:51,269 --> 00:28:56,169
every time you update content if you

00:28:54,279 --> 00:28:58,330
have nothing specially configured the

00:28:56,169 --> 00:29:01,929
block cash and the page cache disappears

00:28:58,330 --> 00:29:04,480
it gets completely wiped out so to

00:29:01,929 --> 00:29:06,730
prevent that just looking at droop was a

00:29:04,480 --> 00:29:09,340
web server database no other tools

00:29:06,730 --> 00:29:12,639
involved this little minimum cash

00:29:09,340 --> 00:29:13,629
lifetime saves that from happening so if

00:29:12,639 --> 00:29:16,090
you're on a site where people are

00:29:13,629 --> 00:29:18,220
updating content every few minutes block

00:29:16,090 --> 00:29:21,490
cash and page cache are basically doing

00:29:18,220 --> 00:29:23,529
nothing for you this minimum cash

00:29:21,490 --> 00:29:25,990
lifetime basically says if I create this

00:29:23,529 --> 00:29:28,720
paid i created this block five minutes

00:29:25,990 --> 00:29:30,490
ago I don't want anyone to clear this

00:29:28,720 --> 00:29:32,559
out for the next 15 minutes no matter

00:29:30,490 --> 00:29:35,230
what happens that's basically what this

00:29:32,559 --> 00:29:37,899
means so it's really helpful so that you

00:29:35,230 --> 00:29:40,330
don't get these mass wipes that happen

00:29:37,899 --> 00:29:43,899
when you update content so it even goes

00:29:40,330 --> 00:29:46,240
down to I think one minute which if you

00:29:43,899 --> 00:29:50,590
have a lot of content updates that's

00:29:46,240 --> 00:29:52,749
that's pretty big difference so using

00:29:50,590 --> 00:29:58,539
reverse proxy so how many guys know what

00:29:52,749 --> 00:30:00,879
that is I'm not sure okay quarterly this

00:29:58,539 --> 00:30:03,100
option right here is pretty much only

00:30:00,879 --> 00:30:04,269
important if you have a reverse proxy if

00:30:03,100 --> 00:30:06,429
you don't know what it is and you're not

00:30:04,269 --> 00:30:09,399
using it you can completely ignore it if

00:30:06,429 --> 00:30:13,090
you do know what it is this is the

00:30:09,399 --> 00:30:15,820
longest that that external service can

00:30:13,090 --> 00:30:18,639
hold your page whether that's a CDN or

00:30:15,820 --> 00:30:22,029
varnish or some tool if you set this to

00:30:18,639 --> 00:30:23,830
30 minutes it'll it won't check back for

00:30:22,029 --> 00:30:27,549
you for 30 minutes unless you've done

00:30:23,830 --> 00:30:30,610
sort of some sort of integration so the

00:30:27,549 --> 00:30:32,830
minimum cash lifetime is really designed

00:30:30,610 --> 00:30:34,539
so that to prevent anything from

00:30:32,830 --> 00:30:37,269
happening in this amount of time and

00:30:34,539 --> 00:30:38,300
applies primarily to using your database

00:30:37,269 --> 00:30:40,640
is kind of sore

00:30:38,300 --> 00:30:43,730
of everything one trip to this level

00:30:40,640 --> 00:30:47,180
you're sort of assuming there's external

00:30:43,730 --> 00:30:48,740
stuff involved so the definition of

00:30:47,180 --> 00:30:51,410
these two I think the help text in here

00:30:48,740 --> 00:30:53,630
is a little tricky if you're not sure

00:30:51,410 --> 00:30:57,500
exactly what everything's actually means

00:30:53,630 --> 00:31:00,110
in there but first one primarily think

00:30:57,500 --> 00:31:02,150
about for Drupal cat for database

00:31:00,110 --> 00:31:04,940
caching the next one if you're using

00:31:02,150 --> 00:31:06,170
something else it's there's a little

00:31:04,940 --> 00:31:10,280
more to it but that's really the easiest

00:31:06,170 --> 00:31:13,970
way to think about the two bandwidth

00:31:10,280 --> 00:31:16,220
optimization this is one that is a huge

00:31:13,970 --> 00:31:17,810
difference on the front end side so

00:31:16,220 --> 00:31:21,590
everyone's seen in Drupal you install a

00:31:17,810 --> 00:31:23,930
site and you see what let's say 40 CSS

00:31:21,590 --> 00:31:25,010
and JavaScript files it's great for

00:31:23,930 --> 00:31:26,810
development cuz you have all these

00:31:25,010 --> 00:31:29,360
little tiny snippets you can just change

00:31:26,810 --> 00:31:32,200
all over the place but it's horrible for

00:31:29,360 --> 00:31:36,380
a browser because they only download

00:31:32,200 --> 00:31:38,210
usually two to four files at a time if

00:31:36,380 --> 00:31:39,470
you have 50 60 files the download

00:31:38,210 --> 00:31:42,920
they're going to spend a lot of time

00:31:39,470 --> 00:31:44,570
just waiting getting new files so just

00:31:42,920 --> 00:31:46,370
these little checkboxes will get it all

00:31:44,570 --> 00:31:51,080
the way down to usually three or four

00:31:46,370 --> 00:31:53,810
and Drupal 7 one trick is it says only

00:31:51,080 --> 00:31:56,300
on production good luck trying to debug

00:31:53,810 --> 00:31:58,130
that if you have that turned on in your

00:31:56,300 --> 00:32:00,290
local environment because you're going

00:31:58,130 --> 00:32:03,050
to get all one giant file and it's just

00:32:00,290 --> 00:32:04,940
me hard to work through so a nice thing

00:32:03,050 --> 00:32:07,330
you can do is in your settings PHP file

00:32:04,940 --> 00:32:09,110
where all those database settings go if

00:32:07,330 --> 00:32:12,890
you're on your production environment

00:32:09,110 --> 00:32:14,660
you can just set this so rather than

00:32:12,890 --> 00:32:17,390
worrying about features or any sort of

00:32:14,660 --> 00:32:19,490
complicated way to pass variables back

00:32:17,390 --> 00:32:21,470
and forth you can put that into your

00:32:19,490 --> 00:32:25,130
settings PHP file and it'll just turn it

00:32:21,470 --> 00:32:28,760
on so same thing you can replace CSS

00:32:25,130 --> 00:32:31,270
with jas and works the same way so just

00:32:28,760 --> 00:32:33,080
a really helpful little tip instead of

00:32:31,270 --> 00:32:35,180
so that you can have a just some

00:32:33,080 --> 00:32:37,840
production and not disrupt your other

00:32:35,180 --> 00:32:37,840
environments

00:32:39,369 --> 00:32:45,799
fast 404 is a good is really really

00:32:42,830 --> 00:32:49,039
important for a lot of reasons if you

00:32:45,799 --> 00:32:50,840
have a Drupal 7 or Drupal 6 site and you

00:32:49,039 --> 00:32:54,489
don't have anything kind of specially

00:32:50,840 --> 00:32:57,470
set up every single 404 goes into Drupal

00:32:54,489 --> 00:32:59,299
so if you have an old site that has a

00:32:57,470 --> 00:33:01,519
whole bunch of old URLs are still linked

00:32:59,299 --> 00:33:03,350
to from elsewhere Drupal's trying to

00:33:01,519 --> 00:33:06,379
serve every single one of those whether

00:33:03,350 --> 00:33:09,019
they're images or pages or CSS files or

00:33:06,379 --> 00:33:12,529
whatever it is it makes a huge

00:33:09,019 --> 00:33:15,830
performance issue for Drupal this was

00:33:12,529 --> 00:33:19,100
added in Drupal 7 9 and there there's a

00:33:15,830 --> 00:33:21,799
patch for Drupal 6 i'm not positive it

00:33:19,100 --> 00:33:23,239
in yet or what the status of it is but

00:33:21,799 --> 00:33:25,549
it basically says if someone tries to

00:33:23,239 --> 00:33:28,340
request a javascript file that i don't

00:33:25,549 --> 00:33:30,289
think i own just send a 404 like don't

00:33:28,340 --> 00:33:33,169
try to regenerate it don't do anything

00:33:30,289 --> 00:33:34,909
to try and access that it's on by

00:33:33,169 --> 00:33:37,489
default but I think this is another

00:33:34,909 --> 00:33:39,289
thing that we're looking at code but

00:33:37,489 --> 00:33:42,590
it's an important concept to understand

00:33:39,289 --> 00:33:45,109
if you're sitting on Drupal 7 7 7 8 7 6

00:33:42,590 --> 00:33:49,720
something like that this is a pretty

00:33:45,109 --> 00:33:49,720
good reason to jump up a few versions

00:34:00,169 --> 00:34:04,519
so a couple other drupal notes

00:34:01,999 --> 00:34:07,279
specifically understand what Drupal does

00:34:04,519 --> 00:34:09,379
and does not cash so it helps you

00:34:07,279 --> 00:34:12,139
understand when things when to

00:34:09,379 --> 00:34:15,349
troubleshoot certain issues so Drupal

00:34:12,139 --> 00:34:17,210
will cash you have the menu system right

00:34:15,349 --> 00:34:19,309
unless you tell it to get rid of it it's

00:34:17,210 --> 00:34:21,619
going to be there whereas something like

00:34:19,309 --> 00:34:24,290
a view if you haven't done anything to

00:34:21,619 --> 00:34:26,540
actively cash that it's not going to

00:34:24,290 --> 00:34:28,339
cash at all so you kind of have to know

00:34:26,540 --> 00:34:30,679
what's Drupal going to do for you what's

00:34:28,339 --> 00:34:32,389
your responsibility and way those two

00:34:30,679 --> 00:34:35,750
and know where you're actually going to

00:34:32,389 --> 00:34:38,000
fix the problem don't enable you I

00:34:35,750 --> 00:34:41,270
modules on production there's so many

00:34:38,000 --> 00:34:43,429
reasons why this is true but there's a

00:34:41,270 --> 00:34:46,730
lot of code in there that gets loaded up

00:34:43,429 --> 00:34:49,460
and just sits but there's plenty of

00:34:46,730 --> 00:34:51,649
other reasons like if the UI modules not

00:34:49,460 --> 00:34:54,049
enabled no one can go mess it up on

00:34:51,649 --> 00:34:57,230
production like no one can go edit views

00:34:54,049 --> 00:34:59,180
no one can go edit rules or fields or

00:34:57,230 --> 00:35:04,010
whatever so there's plenty of like

00:34:59,180 --> 00:35:05,510
management reasons to do it but just

00:35:04,010 --> 00:35:08,089
looking at from performance standpoint

00:35:05,510 --> 00:35:09,890
for this talk it just it's a lot of

00:35:08,089 --> 00:35:12,440
files to just not have to worry about

00:35:09,890 --> 00:35:17,089
loading it's just a nice thing to just

00:35:12,440 --> 00:35:19,910
take away some strain avoid database

00:35:17,089 --> 00:35:25,730
logging how many you guys have heard

00:35:19,910 --> 00:35:28,819
this before this one some people I don't

00:35:25,730 --> 00:35:32,329
controversial is kind of a little bit of

00:35:28,819 --> 00:35:34,400
a grave word to put here but the reason

00:35:32,329 --> 00:35:36,260
database logging exists in Drupal is

00:35:34,400 --> 00:35:37,880
because it's designed to be a web server

00:35:36,260 --> 00:35:40,640
and a database and that's all you ever

00:35:37,880 --> 00:35:44,329
need so the database login built into

00:35:40,640 --> 00:35:46,760
Drupal is really efficient because you

00:35:44,329 --> 00:35:48,290
create the log you go to the backend you

00:35:46,760 --> 00:35:52,160
look at all the logs it's really

00:35:48,290 --> 00:35:54,650
straightforward to get there but if you

00:35:52,160 --> 00:35:56,170
have bad PHP code if you have weird

00:35:54,650 --> 00:35:59,150
stuff that's happening on your site

00:35:56,170 --> 00:36:01,540
that's pounding your database writing

00:35:59,150 --> 00:36:04,880
those errors writing those warnings out

00:36:01,540 --> 00:36:07,849
that's that's one of the biggest things

00:36:04,880 --> 00:36:10,579
if you have like a dev module or

00:36:07,849 --> 00:36:12,109
something's really misbehaving it can be

00:36:10,579 --> 00:36:12,770
writing hundreds of things to your

00:36:12,109 --> 00:36:15,680
database

00:36:12,770 --> 00:36:18,320
every request a dozens probably more

00:36:15,680 --> 00:36:21,710
realistic I've seen hundreds and that's

00:36:18,320 --> 00:36:23,450
a huge performance slow down so if you

00:36:21,710 --> 00:36:26,060
have a larger infrastructure if you have

00:36:23,450 --> 00:36:29,060
a good infrastructure ops team to work

00:36:26,060 --> 00:36:32,200
with using something else to log like

00:36:29,060 --> 00:36:36,080
syslog or log for PHP which is a

00:36:32,200 --> 00:36:39,290
shout-out for my own module is a way to

00:36:36,080 --> 00:36:41,660
maintain you have all the logs in one

00:36:39,290 --> 00:36:44,060
place to look at it and get to it and

00:36:41,660 --> 00:36:45,320
view it but it's happening outside of

00:36:44,060 --> 00:36:48,100
the scope of Drupal so it's going to be

00:36:45,320 --> 00:36:51,020
much more efficient much faster and the

00:36:48,100 --> 00:36:54,170
last thing this is really one of the

00:36:51,020 --> 00:36:56,330
issues in PHP that makes it kind of a

00:36:54,170 --> 00:36:58,220
joke to other languages which I'm sure

00:36:56,330 --> 00:37:01,760
everyone's heard jokes about how bad PHP

00:36:58,220 --> 00:37:03,320
is if there's an error in PHP it

00:37:01,760 --> 00:37:04,900
actually still slows down the site

00:37:03,320 --> 00:37:07,460
whether it's being printed or not

00:37:04,900 --> 00:37:09,080
because if you think about it it's going

00:37:07,460 --> 00:37:11,180
through the code saying oh you shouldn't

00:37:09,080 --> 00:37:13,190
be doing this should I be printing this

00:37:11,180 --> 00:37:15,470
out or just let it go you know there's

00:37:13,190 --> 00:37:17,870
still like execution there's still weird

00:37:15,470 --> 00:37:20,630
stuff going on there so if you have bad

00:37:17,870 --> 00:37:22,130
code that could actually be affecting

00:37:20,630 --> 00:37:24,830
the performance of your site whether you

00:37:22,130 --> 00:37:26,830
see it or not so if you're doing custom

00:37:24,830 --> 00:37:29,690
code it's really important to follow

00:37:26,830 --> 00:37:32,810
PHP's coding standards Drupal's coding

00:37:29,690 --> 00:37:36,350
standards turn errors all the way up on

00:37:32,810 --> 00:37:39,260
your development / QA or non production

00:37:36,350 --> 00:37:41,840
environments it actually causes a

00:37:39,260 --> 00:37:44,510
significant slowdown and it's really

00:37:41,840 --> 00:37:47,270
hard to troubleshoot because it's so

00:37:44,510 --> 00:37:48,800
corded route to PHP it looks like

00:37:47,270 --> 00:37:51,680
nothing's happening it just looks like

00:37:48,800 --> 00:37:54,200
something slow so that's a really key

00:37:51,680 --> 00:37:56,240
tip for us especially if you have custom

00:37:54,200 --> 00:38:00,980
development from other developers or

00:37:56,240 --> 00:38:02,540
you've done some yourself so let's talk

00:38:00,980 --> 00:38:04,850
about a couple performance related tools

00:38:02,540 --> 00:38:08,960
a couple for Drupal a couple more

00:38:04,850 --> 00:38:11,330
service oriented so these first three

00:38:08,960 --> 00:38:15,200
are kind of high level modules for

00:38:11,330 --> 00:38:17,090
drupal developer stone i'm sure most you

00:38:15,200 --> 00:38:20,420
guys have heard of it at least whether

00:38:17,090 --> 00:38:22,190
you use it or not from a site builders

00:38:20,420 --> 00:38:23,460
perspective it gives you three key

00:38:22,190 --> 00:38:25,380
pieces of information

00:38:23,460 --> 00:38:27,870
how long it took the page to render

00:38:25,380 --> 00:38:30,270
which goes in your spreadsheet how much

00:38:27,870 --> 00:38:32,850
memory was used goes in your spreadsheet

00:38:30,270 --> 00:38:35,550
it's two numbers how many queries are

00:38:32,850 --> 00:38:36,780
run that's your third number it just

00:38:35,550 --> 00:38:38,730
prints it out right at the bottom of

00:38:36,780 --> 00:38:40,110
screen take it put in your spreadsheet

00:38:38,730 --> 00:38:42,570
you don't have to think about it for

00:38:40,110 --> 00:38:46,050
another week or month it just puts it

00:38:42,570 --> 00:38:48,120
right there for you really great for

00:38:46,050 --> 00:38:50,190
getting those sort of really basic

00:38:48,120 --> 00:38:52,110
diagnostics and seeing how things change

00:38:50,190 --> 00:38:53,850
over time so early on in the

00:38:52,110 --> 00:38:55,680
presentation if I said Oh we'll figure

00:38:53,850 --> 00:38:58,410
how much memory it's using figure out

00:38:55,680 --> 00:39:01,680
how long it's taking these Drupal it's

00:38:58,410 --> 00:39:03,810
easy to do I want to scare you off the

00:39:01,680 --> 00:39:05,340
develop module just prints it bottom of

00:39:03,810 --> 00:39:08,280
the page scroll down it's right there

00:39:05,340 --> 00:39:13,440
for you it's all you need the boost

00:39:08,280 --> 00:39:16,800
module this does page caching in the

00:39:13,440 --> 00:39:19,320
file system the reason this was designed

00:39:16,800 --> 00:39:21,000
and part of why I want to bring it out

00:39:19,320 --> 00:39:22,290
here is just because it's a common

00:39:21,000 --> 00:39:24,960
enough module that people are going to

00:39:22,290 --> 00:39:28,110
run into the reason it was designed is

00:39:24,960 --> 00:39:31,670
so that people can have a really

00:39:28,110 --> 00:39:33,870
efficient page caching on shared hosting

00:39:31,670 --> 00:39:36,780
so if you have your own infrastructure

00:39:33,870 --> 00:39:39,420
you have really good Ops guys

00:39:36,780 --> 00:39:42,210
infrastructure guys boost is probably

00:39:39,420 --> 00:39:44,550
not actually for you boost is if you

00:39:42,210 --> 00:39:47,130
don't have access to other services it's

00:39:44,550 --> 00:39:49,710
primarily if you're on shared hosting or

00:39:47,130 --> 00:39:52,980
you don't have control over that server

00:39:49,710 --> 00:39:55,590
if that is the case it's much better

00:39:52,980 --> 00:39:59,430
than Drupal Drupal's built-in page

00:39:55,590 --> 00:40:01,050
caching it's good but just key I just

00:39:59,430 --> 00:40:04,290
want to the reason I bring it up is just

00:40:01,050 --> 00:40:06,690
that real easy distinction of if you see

00:40:04,290 --> 00:40:08,850
it it's good if you have shared hosting

00:40:06,690 --> 00:40:12,120
if you have control there's much better

00:40:08,850 --> 00:40:15,690
options min caches and other one will

00:40:12,120 --> 00:40:18,690
talk about in another minute but the

00:40:15,690 --> 00:40:21,690
drupal module the key is the second

00:40:18,690 --> 00:40:23,370
bullet point it stores it in memory not

00:40:21,690 --> 00:40:27,030
in the database so your database is

00:40:23,370 --> 00:40:29,100
doing less work that's its transparent

00:40:27,030 --> 00:40:30,690
that's the key thing you need to know

00:40:29,100 --> 00:40:33,290
that's all you really need to know about

00:40:30,690 --> 00:40:33,290
how it works

00:40:33,550 --> 00:40:38,560
so a couple of Drupal modules that

00:40:35,620 --> 00:40:39,730
actually work with Drupal just kind of

00:40:38,560 --> 00:40:41,140
highlights there are obviously other

00:40:39,730 --> 00:40:43,770
ones but these are the ones that I

00:40:41,140 --> 00:40:47,760
really look for and used most often

00:40:43,770 --> 00:40:50,500
entity cash is fantastic for Drupal 7 I

00:40:47,760 --> 00:40:53,800
hope this is just in core and Drupal 8

00:40:50,500 --> 00:40:56,290
so the idea here is if you have big

00:40:53,800 --> 00:40:59,560
complicated nodes you know let's say you

00:40:56,290 --> 00:41:02,140
have 15 fields 20 fields entity cash

00:40:59,560 --> 00:41:04,720
we'll save that as one object so that

00:41:02,140 --> 00:41:06,340
you can just reload it rather than going

00:41:04,720 --> 00:41:08,680
to the database and picking out every

00:41:06,340 --> 00:41:11,290
little field again and loading all that

00:41:08,680 --> 00:41:12,610
up it just saves is one little bundle

00:41:11,290 --> 00:41:16,270
that you can just go and retrieve

00:41:12,610 --> 00:41:17,980
quickly you literally turn it on zero

00:41:16,270 --> 00:41:20,350
configuration you'll never see it in

00:41:17,980 --> 00:41:24,490
your Drupal site it doesn't there's

00:41:20,350 --> 00:41:26,680
nothing there you just turn it on I run

00:41:24,490 --> 00:41:29,200
it on every site i touch on Drupal 7

00:41:26,680 --> 00:41:31,570
I've never run into an issue if that

00:41:29,200 --> 00:41:34,030
piece of content gets updated the cache

00:41:31,570 --> 00:41:38,590
entry gets cleared out completely

00:41:34,030 --> 00:41:41,170
transparent no still data I don't see

00:41:38,590 --> 00:41:44,140
any reason not to use it especially if

00:41:41,170 --> 00:41:47,340
you have 12 15 20 fields on a content

00:41:44,140 --> 00:41:50,560
type you know big complex content types

00:41:47,340 --> 00:41:54,040
path cash is great for Drupal 6 Drupal 7

00:41:50,560 --> 00:41:56,140
s and the works when you go to a Drupal

00:41:54,040 --> 00:41:58,450
page you see tons of little menu links

00:41:56,140 --> 00:42:00,550
in Drupal's menu in the footer and the

00:41:58,450 --> 00:42:03,130
header and the sidebar those are

00:42:00,550 --> 00:42:05,020
actually not just links every one of

00:42:03,130 --> 00:42:07,150
those is looking up permissions looking

00:42:05,020 --> 00:42:09,610
up aliases looking up all kinds of stuff

00:42:07,150 --> 00:42:12,100
that's not cached in a very efficient

00:42:09,610 --> 00:42:14,290
way this module just makes that more

00:42:12,100 --> 00:42:16,900
efficient again it works the same way

00:42:14,290 --> 00:42:21,120
Xindi cash you turn it on it's just kind

00:42:16,900 --> 00:42:25,240
of there real quick win block cash altar

00:42:21,120 --> 00:42:27,100
this is a really really clever module so

00:42:25,240 --> 00:42:30,040
when I say block castings the best thing

00:42:27,100 --> 00:42:33,310
you can do for authenticated users it's

00:42:30,040 --> 00:42:34,900
accurate but what will really frustrate

00:42:33,310 --> 00:42:37,390
you is there's a lot of blocks that

00:42:34,900 --> 00:42:40,720
aren't cached by default like some of

00:42:37,390 --> 00:42:42,670
the user blocks like that user block you

00:42:40,720 --> 00:42:45,370
see this as my account and log out and

00:42:42,670 --> 00:42:46,910
that that little one that's not actually

00:42:45,370 --> 00:42:51,179
cached

00:42:46,910 --> 00:42:53,509
because well for whatever reasons so a

00:42:51,179 --> 00:42:56,519
block cash altar does is it just takes

00:42:53,509 --> 00:42:57,959
your block page you already have and it

00:42:56,519 --> 00:43:01,529
just adds one little drop down at the

00:42:57,959 --> 00:43:03,799
bottom again really simple you put it on

00:43:01,529 --> 00:43:06,779
it's as effective as you want it to be

00:43:03,799 --> 00:43:09,059
so if someone has that little user block

00:43:06,779 --> 00:43:12,169
and you know that's always the same for

00:43:09,059 --> 00:43:15,349
that user regardless of where they are

00:43:12,169 --> 00:43:17,849
there's an option to cash that per user

00:43:15,349 --> 00:43:21,509
it's a whole lot better than not cashing

00:43:17,849 --> 00:43:23,219
it at all so all that does is gives you

00:43:21,509 --> 00:43:27,599
that extra little drop down to set that

00:43:23,219 --> 00:43:29,069
value really simple there are just as a

00:43:27,599 --> 00:43:30,989
side note I know there are issues with

00:43:29,069 --> 00:43:33,809
block I Salter and like certain versions

00:43:30,989 --> 00:43:37,859
of Drupal core it's all on that project

00:43:33,809 --> 00:43:41,640
page but yeah that's a that's a really

00:43:37,859 --> 00:43:43,559
good one for block cash heavy pages but

00:43:41,640 --> 00:43:48,089
you know authenticated pages that sort

00:43:43,559 --> 00:43:51,209
of thing a couple other Drupal modules

00:43:48,089 --> 00:43:53,699
views light pager if you have really big

00:43:51,209 --> 00:43:55,890
views or really big content tables and

00:43:53,699 --> 00:43:59,159
your view is slow and you just can't

00:43:55,890 --> 00:44:03,059
figure out why turn off the pager if it

00:43:59,159 --> 00:44:05,640
gets a lot faster use light pager that's

00:44:03,059 --> 00:44:08,640
the troubleshooting there it goes into

00:44:05,640 --> 00:44:11,069
how the database is stored and how the

00:44:08,640 --> 00:44:13,559
rows are calculating everything it's not

00:44:11,069 --> 00:44:15,449
really that important really big data

00:44:13,559 --> 00:44:18,749
turn it off the page or see if it's

00:44:15,449 --> 00:44:21,929
faster if it is like a light pager three

00:44:18,749 --> 00:44:24,239
steps views content cash and cash

00:44:21,929 --> 00:44:26,849
actions are great for this reason right

00:44:24,239 --> 00:44:29,699
here clear view display when a new

00:44:26,849 --> 00:44:32,249
article node is created so rather than

00:44:29,699 --> 00:44:34,319
saying 15 minutes that's a completely

00:44:32,249 --> 00:44:37,380
arbitrary time and really kind of

00:44:34,319 --> 00:44:39,749
worthless so between 9 p.m. at night and

00:44:37,380 --> 00:44:42,799
5am it's still regenerating every 15

00:44:39,749 --> 00:44:45,779
minutes that really make sense to anyone

00:44:42,799 --> 00:44:48,019
so I've use content cash does is only

00:44:45,779 --> 00:44:50,939
cash this when something else happens

00:44:48,019 --> 00:44:53,429
like this content type someone creates a

00:44:50,939 --> 00:44:56,449
new one or someone posts a comment or a

00:44:53,429 --> 00:44:59,729
new users created that sort of thing

00:44:56,449 --> 00:45:00,180
really great to do it's basically doing

00:44:59,729 --> 00:45:02,400
real

00:45:00,180 --> 00:45:05,609
of caching and so proactive that makes

00:45:02,400 --> 00:45:08,400
sense cash actions same thing but not

00:45:05,609 --> 00:45:11,130
view specific it's only real difference

00:45:08,400 --> 00:45:13,859
it uses the rules module which is I

00:45:11,130 --> 00:45:16,760
think one of my favorite modules but is

00:45:13,859 --> 00:45:19,200
really confusing like the UI there's

00:45:16,760 --> 00:45:25,829
it's a rules engine how hard could it be

00:45:19,200 --> 00:45:29,760
right a couple of third-party tools so

00:45:25,829 --> 00:45:30,930
web optimization tools Yahoo's no matter

00:45:29,760 --> 00:45:33,359
what you want to say about the company

00:45:30,930 --> 00:45:36,270
and all that has incredible developer

00:45:33,359 --> 00:45:39,180
tools smush it is a really cool tool

00:45:36,270 --> 00:45:41,730
that you upload an image to it and it

00:45:39,180 --> 00:45:43,829
gives you back an optimized image it

00:45:41,730 --> 00:45:46,020
doesn't take away it doesn't make it

00:45:43,829 --> 00:45:49,349
more grainy it doesn't create more loss

00:45:46,020 --> 00:45:52,200
in the photo it takes out stuff like the

00:45:49,349 --> 00:45:54,210
metadata of when it was created or it

00:45:52,200 --> 00:45:56,790
takes out anything having to is just

00:45:54,210 --> 00:45:59,550
solid white or solid black and optimizes

00:45:56,790 --> 00:46:02,940
that it can really get you legitimately

00:45:59,550 --> 00:46:07,290
twenty to thirty percent less file size

00:46:02,940 --> 00:46:10,200
on images up to i've seen 60 or 70 so

00:46:07,290 --> 00:46:11,520
really that's all it is upload it gives

00:46:10,200 --> 00:46:15,960
you a new one use that one instead

00:46:11,520 --> 00:46:20,819
period sprite me how many guys know CSS

00:46:15,960 --> 00:46:21,990
sprites are so ok good amount this is a

00:46:20,819 --> 00:46:26,490
really cool tool how many guys have

00:46:21,990 --> 00:46:28,260
heard of this okay so less of you you

00:46:26,490 --> 00:46:29,970
basically it's a little bookmarklet you

00:46:28,260 --> 00:46:32,130
install in your browser you click it and

00:46:29,970 --> 00:46:33,720
it goes here's your site these are the

00:46:32,130 --> 00:46:35,670
sprites you should create would you like

00:46:33,720 --> 00:46:39,319
me to create them for you okay here's

00:46:35,670 --> 00:46:41,849
the CSS geez it's really really cool

00:46:39,319 --> 00:46:45,030
it's not completely foolproof they'll

00:46:41,849 --> 00:46:46,829
need a test but it gets you from eighty

00:46:45,030 --> 00:46:49,980
ninety percent of the way there and then

00:46:46,829 --> 00:46:51,990
you just trick after that if you don't

00:46:49,980 --> 00:46:55,079
know a CSS sprites are and you're really

00:46:51,990 --> 00:46:57,690
keen on CSS and JavaScript in front end

00:46:55,079 --> 00:47:01,170
performance it's gonna it's really

00:46:57,690 --> 00:47:03,540
really cool and really beneficial if you

00:47:01,170 --> 00:47:05,369
look like Google's homepage there's

00:47:03,540 --> 00:47:07,049
really only one image that makes up

00:47:05,369 --> 00:47:10,790
every single one of the icons on the

00:47:07,049 --> 00:47:13,980
page makes a huge performance difference

00:47:10,790 --> 00:47:16,890
web testing tools so web page test is

00:47:13,980 --> 00:47:18,840
rate for how slow is a site another way

00:47:16,890 --> 00:47:21,720
to get that simple metric of what's that

00:47:18,840 --> 00:47:25,230
number of how slow my site is Google

00:47:21,720 --> 00:47:29,030
PageSpeed online same idea on the

00:47:25,230 --> 00:47:31,740
browser side Firebug why slow PageSpeed

00:47:29,030 --> 00:47:34,290
Firebug more the developer side why slow

00:47:31,740 --> 00:47:35,940
and page speed you look at a site you

00:47:34,290 --> 00:47:38,010
run the test and it tells you what you

00:47:35,940 --> 00:47:41,400
should do to optimize that page you

00:47:38,010 --> 00:47:44,160
combine images combined CSS whatever it

00:47:41,400 --> 00:47:45,960
is the whole purpose is all these tools

00:47:44,160 --> 00:47:48,690
are pretty much hands off until you need

00:47:45,960 --> 00:47:51,900
them and then these last two sasse

00:47:48,690 --> 00:47:55,470
products are pretty cool new relic is an

00:47:51,900 --> 00:47:57,990
amazing tool new relic is it monitors

00:47:55,470 --> 00:48:00,180
not just the end user performance but

00:47:57,990 --> 00:48:02,880
actually the drupal performance as well

00:48:00,180 --> 00:48:06,300
so it can actually tell you if your site

00:48:02,880 --> 00:48:08,970
took 400 milliseconds to load it'll say

00:48:06,300 --> 00:48:11,450
200 to spend the database 100 was spent

00:48:08,970 --> 00:48:14,490
in PHP 100 was spent on this particular

00:48:11,450 --> 00:48:16,560
external web service this much was spent

00:48:14,490 --> 00:48:20,190
memcache like it breaks out the whole

00:48:16,560 --> 00:48:22,140
execution this nice graphical way the

00:48:20,190 --> 00:48:26,190
free plan is more than enough for most

00:48:22,140 --> 00:48:27,420
sites so and it goes up to like 50 bucks

00:48:26,190 --> 00:48:29,640
a server or something it's not

00:48:27,420 --> 00:48:33,119
exorbitant but the free plan is more

00:48:29,640 --> 00:48:37,410
than enough for most people fantastic

00:48:33,119 --> 00:48:40,590
service Yoda is more of a front-end

00:48:37,410 --> 00:48:43,830
performance test you can kind of think

00:48:40,590 --> 00:48:45,990
of it if you look at web page test or if

00:48:43,830 --> 00:48:48,030
you know what that is already Yoda is

00:48:45,990 --> 00:48:51,750
just a way to monitor that performance

00:48:48,030 --> 00:48:55,590
over time it's a simpler tool to be

00:48:51,750 --> 00:48:59,040
honest it's good but if you had to pick

00:48:55,590 --> 00:49:00,869
new relics really the place to go for if

00:48:59,040 --> 00:49:02,730
you want external service the other

00:49:00,869 --> 00:49:06,180
great thing about something new relic is

00:49:02,730 --> 00:49:08,460
it has this cool index that says if my

00:49:06,180 --> 00:49:10,830
site is going above this number it's

00:49:08,460 --> 00:49:12,720
performing well if it's not it's doing

00:49:10,830 --> 00:49:14,820
poorly something you can just show your

00:49:12,720 --> 00:49:17,210
managers be like see it's good you told

00:49:14,820 --> 00:49:20,240
me this was the number so it's good now

00:49:17,210 --> 00:49:22,560
it's really graphical really simple for

00:49:20,240 --> 00:49:26,000
quantifying performance and actually

00:49:22,560 --> 00:49:26,000
understanding what's good what's not

00:49:26,339 --> 00:49:37,900
okay what time do we have okay so let's

00:49:35,829 --> 00:49:40,180
make this interactive let's take a vote

00:49:37,900 --> 00:49:43,780
who wants to know what varnish and

00:49:40,180 --> 00:49:47,710
memcache and all that is who once asked

00:49:43,780 --> 00:49:52,089
questions so infrastructure no one all

00:49:47,710 --> 00:49:54,849
right questions oh come on I can't

00:49:52,089 --> 00:50:03,369
that's not quorum people let's try this

00:49:54,849 --> 00:50:04,780
again infrastructure ok questions every

00:50:03,369 --> 00:50:07,319
person with a coffee in front of them

00:50:04,780 --> 00:50:10,750
should be raising their hand no excuses

00:50:07,319 --> 00:50:12,160
all right i'll spend a couple minutes

00:50:10,750 --> 00:50:15,400
just talk through infrastructure and

00:50:12,160 --> 00:50:18,190
then we'll go to questions so web server

00:50:15,400 --> 00:50:23,589
most important part least you can

00:50:18,190 --> 00:50:24,849
actually optimize ok apache 90 plus

00:50:23,589 --> 00:50:29,040
percent of what you guys are going to

00:50:24,849 --> 00:50:31,780
deal with engine X watch for the future

00:50:29,040 --> 00:50:34,960
so it scales horizontally and vertically

00:50:31,780 --> 00:50:39,780
meaning more web servers good bigger web

00:50:34,960 --> 00:50:42,220
servers good both of those PHP or

00:50:39,780 --> 00:50:45,640
application servers Java people like to

00:50:42,220 --> 00:50:48,520
call it it usually runs within Apache

00:50:45,640 --> 00:50:50,650
itself which is not the most efficient

00:50:48,520 --> 00:50:53,970
way but again that's how most people do

00:50:50,650 --> 00:50:56,349
it works perfectly fine always use a PC

00:50:53,970 --> 00:51:00,640
ten twenty percent right out of the box

00:50:56,349 --> 00:51:03,280
really slick and recently it can

00:51:00,640 --> 00:51:05,680
actually run for you java asp types out

00:51:03,280 --> 00:51:07,809
there it can actually run as a

00:51:05,680 --> 00:51:09,970
completely separate process now so you

00:51:07,809 --> 00:51:14,619
can scale it independently of the web

00:51:09,970 --> 00:51:17,130
servers just cool little trick my sequel

00:51:14,619 --> 00:51:19,359
database server everyone knows my sequel

00:51:17,130 --> 00:51:22,599
how many you guys know either of these

00:51:19,359 --> 00:51:24,700
two okay

00:51:22,599 --> 00:51:26,470
both of those are alternatives to my

00:51:24,700 --> 00:51:30,640
sequel they're compatible they're

00:51:26,470 --> 00:51:32,499
arguably faster this is a new project by

00:51:30,640 --> 00:51:37,660
the guy that originally started this I

00:51:32,499 --> 00:51:40,630
trust that Drupal itself is actually

00:51:37,660 --> 00:51:42,759
tested against Maria DB so if you're

00:51:40,630 --> 00:51:43,930
using Maria DB or my sequel Drupal

00:51:42,759 --> 00:51:46,630
doesn't care both then we're going to

00:51:43,930 --> 00:51:47,890
work just as well if you have my seek

00:51:46,630 --> 00:51:49,900
when you don't have any reason to look

00:51:47,890 --> 00:51:51,369
elsewhere stick with it if you're

00:51:49,900 --> 00:51:53,650
curious you just want to know what's out

00:51:51,369 --> 00:51:55,779
there both of these have really kind of

00:51:53,650 --> 00:51:59,170
interesting stories and why they are

00:51:55,779 --> 00:52:01,779
what they are if it helps these are the

00:51:59,170 --> 00:52:05,019
press flows of my sequel if that analogy

00:52:01,779 --> 00:52:11,279
helps it's my sequel plus some

00:52:05,019 --> 00:52:15,970
performance stuff caching server now

00:52:11,279 --> 00:52:18,789
later memcache what everyone uses now

00:52:15,970 --> 00:52:22,630
it's great does this job redis has so

00:52:18,789 --> 00:52:26,549
many more benefits and it's going to be

00:52:22,630 --> 00:52:26,549
the popular one before too awfully long

00:52:27,119 --> 00:52:33,069
memcache works it works it works you

00:52:29,680 --> 00:52:34,479
know leave it furnace reverse proxy

00:52:33,069 --> 00:52:37,859
makes all your makes all the magic

00:52:34,479 --> 00:52:40,809
happens makes all the bad things go away

00:52:37,859 --> 00:52:43,390
user comes the reverse proxy that has

00:52:40,809 --> 00:52:46,089
the page sends it that never talks to

00:52:43,390 --> 00:52:47,979
Drupal never slows anything down if it

00:52:46,089 --> 00:52:49,749
doesn't have the page goes to Drupal

00:52:47,979 --> 00:52:52,119
stores it there so it doesn't have to

00:52:49,749 --> 00:52:54,279
talk to Drupal again they're like it's

00:52:52,119 --> 00:52:56,319
like a love hate relationship it's glad

00:52:54,279 --> 00:52:57,819
it has Drupal but it doesn't really need

00:52:56,319 --> 00:53:01,719
it it's perfectly fine on its own it's

00:52:57,819 --> 00:53:05,229
independent doesn't need Drupal it's

00:53:01,719 --> 00:53:07,660
great varnish can handle well upwards

00:53:05,229 --> 00:53:09,789
three four thousand requests a second if

00:53:07,660 --> 00:53:12,369
you can do that at a Drupal I am very

00:53:09,789 --> 00:53:17,289
impressed with you varnish is very

00:53:12,369 --> 00:53:20,279
killer for huge sites in five minutes

00:53:17,289 --> 00:53:23,799
all right questions where do you find me

00:53:20,279 --> 00:53:25,690
Eric web everything Twitter Linkedin

00:53:23,799 --> 00:53:28,869
this is already on slideshares you can

00:53:25,690 --> 00:53:30,759
get back to it later like I said I have

00:53:28,869 --> 00:53:32,700
a few minutes for questions and I'll go

00:53:30,759 --> 00:53:35,620
outside for anyone else ask questions

00:53:32,700 --> 00:53:38,140
the key thing is I want you

00:53:35,620 --> 00:53:39,790
to look at this on SlideShare these

00:53:38,140 --> 00:53:42,010
slides are up there right this second if

00:53:39,790 --> 00:53:43,660
you go look at it if you have questions

00:53:42,010 --> 00:53:46,120
reach out to me on Twitter I don't mind

00:53:43,660 --> 00:53:48,820
clarifying answering questions whatever

00:53:46,120 --> 00:53:51,100
it is I try to do that for all my

00:53:48,820 --> 00:53:54,010
presentation it's the best way to kind

00:53:51,100 --> 00:53:56,110
of communicate with people long term if

00:53:54,010 --> 00:54:00,160
you email me it will get lost just

00:53:56,110 --> 00:54:02,830
saying but I have other presentations on

00:54:00,160 --> 00:54:08,770
SlideShare I'm happy to provide any

00:54:02,830 --> 00:54:11,620
feedback information so I talk a lot in

00:54:08,770 --> 00:54:13,990
an hour I don't even have coffee like

00:54:11,620 --> 00:54:18,820
this it's not alcohol either code of

00:54:13,990 --> 00:54:26,670
conduct so any questions while I still

00:54:18,820 --> 00:54:26,670
have my voice no no questions right

00:54:40,400 --> 00:54:51,660
I'd say the as a whole something like

00:54:44,460 --> 00:54:53,310
content axis what oh sorry of the

00:54:51,660 --> 00:54:55,710
content access modules because I

00:54:53,310 --> 00:54:58,079
disabled block caching what's the best

00:54:55,710 --> 00:54:59,520
for performance I think that goes to

00:54:58,079 --> 00:55:01,770
those other questions we asked about how

00:54:59,520 --> 00:55:03,569
to evaluate a module like content access

00:55:01,770 --> 00:55:05,819
is pretty lightweight because it applies

00:55:03,569 --> 00:55:07,349
an individual piece of content something

00:55:05,819 --> 00:55:09,329
like organic groups is going to check

00:55:07,349 --> 00:55:11,220
are you a member of this group is this

00:55:09,329 --> 00:55:13,170
content in this group is this content

00:55:11,220 --> 00:55:15,329
private is like it checks a lot more

00:55:13,170 --> 00:55:16,950
things so I would say it falls in

00:55:15,329 --> 00:55:29,660
perfectly in line with all those other

00:55:16,950 --> 00:55:32,400
questions you'd be thinking about no I

00:55:29,660 --> 00:55:35,040
it's similar New Relic right same idea

00:55:32,400 --> 00:55:39,290
kind of tracks it just kind of tracks a

00:55:35,040 --> 00:55:39,290
performance or is a page speed online

00:55:42,200 --> 00:55:48,820
okay it's actually the same as the

00:55:44,460 --> 00:55:56,920
browser test yeah it

00:55:48,820 --> 00:56:01,840
oh okay so using the PageSpeed service

00:55:56,920 --> 00:56:02,740
on Google it's there's a couple of

00:56:01,840 --> 00:56:04,240
different services that do that

00:56:02,740 --> 00:56:06,610
somewhere kind of thing and if I

00:56:04,240 --> 00:56:10,660
remember correctly how Google's works it

00:56:06,610 --> 00:56:12,580
basically either optimize it you traffic

00:56:10,660 --> 00:56:15,240
goes through google to your site and it

00:56:12,580 --> 00:56:19,000
optimizes kind of as it comes back out

00:56:15,240 --> 00:56:20,740
most way most ways websites are set up

00:56:19,000 --> 00:56:24,580
they do their own cashing in their own

00:56:20,740 --> 00:56:27,910
thing that Google's doing personally if

00:56:24,580 --> 00:56:29,980
I had if I wanted all of my traffic go

00:56:27,910 --> 00:56:33,130
back and forth between Google I would

00:56:29,980 --> 00:56:37,170
just work on the page itself being

00:56:33,130 --> 00:56:39,370
optimized so I I mean it's helpful but

00:56:37,170 --> 00:56:41,860
I'm not sure it's something I wouldn't

00:56:39,370 --> 00:56:46,170
really depend on my site doing well for

00:56:41,860 --> 00:56:49,780
the sake of Google doing it for me so

00:56:46,170 --> 00:56:52,930
all right so that's actually time so I

00:56:49,780 --> 00:56:58,830
guess we can keep asking questions until

00:56:52,930 --> 00:56:58,830
the next presenters up here so good Oh

00:56:59,760 --> 00:57:08,440
with eight in DC right okay okay where

00:57:04,120 --> 00:57:11,590
these outside okay there's an attendee

00:57:08,440 --> 00:57:13,030
survey about the linux fest you know

00:57:11,590 --> 00:57:15,220
what you thought about the event is a

00:57:13,030 --> 00:57:17,530
whole some demographics information

00:57:15,220 --> 00:57:19,030
they're right outside if you guys would

00:57:17,530 --> 00:57:21,370
wouldn't mind completing those after

00:57:19,030 --> 00:57:27,300
this talk before the next rousing drupal

00:57:21,370 --> 00:57:29,710
talk in 15 minutes or so looks like this

00:57:27,300 --> 00:57:31,900
so just pick one of those up outside

00:57:29,710 --> 00:57:34,180
it's always beneficial for a camp like

00:57:31,900 --> 00:57:37,000
this to know what people actually think

00:57:34,180 --> 00:57:38,800
about to know how to make it better so

00:57:37,000 --> 00:57:42,750
that's really important so any other

00:57:38,800 --> 00:57:42,750
questions before everyone runs good

00:57:50,400 --> 00:58:01,900
for I'm sorry yeah so so the question is

00:58:00,010 --> 00:58:04,869
when someone updates piece of content

00:58:01,900 --> 00:58:07,600
does all the cash and clear by default

00:58:04,869 --> 00:58:10,300
it does because droop wants make sure

00:58:07,600 --> 00:58:12,310
there's no stale content so it's

00:58:10,300 --> 00:58:14,619
designed for a smaller site where that's

00:58:12,310 --> 00:58:16,990
not happening all the time that one

00:58:14,619 --> 00:58:19,359
setting changes that whole behavior so

00:58:16,990 --> 00:58:21,700
it's really easy to to mitigate that and

00:58:19,359 --> 00:58:25,660
fix that issue just by default it leans

00:58:21,700 --> 00:58:27,640
towards nostale content versus forcing

00:58:25,660 --> 00:58:30,220
people to do some sort of configuration

00:58:27,640 --> 00:58:32,590
to make it work differently so by

00:58:30,220 --> 00:58:35,590
default yes it clears everything that

00:58:32,590 --> 00:58:41,460
one little drop down changes that entire

00:58:35,590 --> 00:58:41,460
behavior I've been waiting on you so

00:58:59,520 --> 00:59:04,710
usually yeah I think the big thing is if

00:59:01,890 --> 00:59:06,270
you have a site that I think the big

00:59:04,710 --> 00:59:09,090
difference probably between the type

00:59:06,270 --> 00:59:11,250
sites you're working on is those are the

00:59:09,090 --> 00:59:14,310
company or those are like a main product

00:59:11,250 --> 00:59:18,270
of the company most sites where the site

00:59:14,310 --> 00:59:19,890
is kind of a it's a marketing purpose or

00:59:18,270 --> 00:59:21,710
it's kind of a different function within

00:59:19,890 --> 00:59:24,120
the company that's usually where the

00:59:21,710 --> 00:59:27,330
database is kind of a lot simpler and

00:59:24,120 --> 00:59:28,980
easier to work on so I say that I always

00:59:27,330 --> 00:59:31,590
tell people my sequel is a natural

00:59:28,980 --> 00:59:33,570
bottleneck meaning if that's that issue

00:59:31,590 --> 00:59:36,270
you've probably done all the rest of

00:59:33,570 --> 00:59:37,740
stuff correctly more or less but the web

00:59:36,270 --> 00:59:41,070
server is the one that you'll probably

00:59:37,740 --> 00:59:43,100
reach before anything else so yeah no I

00:59:41,070 --> 00:59:46,460
think definitely for larger sites that

00:59:43,100 --> 00:59:46,460
changes a little bit

00:59:54,430 --> 01:00:06,619
speed comparison between wordpress and

00:59:57,079 --> 01:00:08,839
drupal that's a big question well I mean

01:00:06,619 --> 01:00:11,500
the hard thing is the way wordpress

01:00:08,839 --> 01:00:13,790
wordpress fits kind of less use cases

01:00:11,500 --> 01:00:16,309
but some of those use case that does

01:00:13,790 --> 01:00:19,760
extremely well drupal is more of a

01:00:16,309 --> 01:00:21,740
general-purpose framework so we're I

01:00:19,760 --> 01:00:25,130
think usually if you benchmark WordPress

01:00:21,740 --> 01:00:27,859
your benchmarking a blog or a basic CMS

01:00:25,130 --> 01:00:30,170
system if you benchmark Drupal you could

01:00:27,859 --> 01:00:33,200
be benchmarking a mapping application I

01:00:30,170 --> 01:00:35,569
mean it's like core decor WordPress is

01:00:33,200 --> 01:00:37,910
faster because it's a smaller core but

01:00:35,569 --> 01:00:40,460
once you look at a Drupal project versus

01:00:37,910 --> 01:00:43,400
a wordpress project I think the range is

01:00:40,460 --> 01:00:46,329
it really becomes apples oranges once

01:00:43,400 --> 01:00:50,450
you go outside of a basic CMS

01:00:46,329 --> 01:01:02,780
implementation so last question who gets

01:00:50,450 --> 01:01:05,869
it someone there you go any tips for a

01:01:02,780 --> 01:01:08,150
large Drupal common sight I think

01:01:05,869 --> 01:01:09,920
looking at memcache is a huge benefit

01:01:08,150 --> 01:01:13,520
for that whole authenticated user

01:01:09,920 --> 01:01:18,470
traffic issue block cash altar makes a

01:01:13,520 --> 01:01:22,790
big difference because on or actually

01:01:18,470 --> 01:01:24,950
block because they're all groups let's

01:01:22,790 --> 01:01:27,079
see I think definitely memcache is the

01:01:24,950 --> 01:01:28,900
biggest one and the other thing with

01:01:27,079 --> 01:01:32,180
Commons i think is really neat to

01:01:28,900 --> 01:01:35,599
commons versus just organic groups based

01:01:32,180 --> 01:01:37,339
sites which it essentially is is Commons

01:01:35,599 --> 01:01:39,770
comes with a lot of functionality out of

01:01:37,339 --> 01:01:42,349
the box it's designed to be you install

01:01:39,770 --> 01:01:43,730
it and you're pretty much good to go I'd

01:01:42,349 --> 01:01:46,040
say that's similar to most other

01:01:43,730 --> 01:01:48,530
distributions where there's a lot of

01:01:46,040 --> 01:01:49,849
stuff to start with and a lot of times

01:01:48,530 --> 01:01:52,400
you have to pare it back down to

01:01:49,849 --> 01:01:54,559
actually get to what you want Commons is

01:01:52,400 --> 01:01:58,760
a big one like open publish those kind

01:01:54,559 --> 01:02:02,359
of the same ideas where they're huge

01:01:58,760 --> 01:02:03,890
sites to start with by design and often

01:02:02,359 --> 01:02:05,430
to do performance you scale it back a

01:02:03,890 --> 01:02:08,040
little bit but I'd

01:02:05,430 --> 01:02:10,200
a you know the memcache is the making

01:02:08,040 --> 01:02:12,300
sure views and panels are cached making

01:02:10,200 --> 01:02:13,980
sure you know you really have to focus

01:02:12,300 --> 01:02:17,849
on a component level because the page

01:02:13,980 --> 01:02:19,290
level doesn't exist so I would say views

01:02:17,849 --> 01:02:21,780
caching is one of the biggest things you

01:02:19,290 --> 01:02:31,460
can do for that sort of that sort of a

01:02:21,780 --> 01:02:31,460
site last question all right good thanks

01:03:11,740 --> 01:03:18,560
how's that sigh every way this is the

01:03:15,230 --> 01:03:20,720
way to better utilize all your resources

01:03:18,560 --> 01:03:24,170
and it makes managing all your resources

01:03:20,720 --> 01:03:28,000
pretty easy all of the innovation is

01:03:24,170 --> 01:03:31,520
happening in open source the

01:03:28,000 --> 01:03:33,320
collaborative nature and of the you know

01:03:31,520 --> 01:03:35,240
of the community and the speed at which

01:03:33,320 --> 01:03:37,430
these are these you know these

01:03:35,240 --> 01:03:39,740
deficiencies these bugs are getting

01:03:37,430 --> 01:03:42,320
discovered and then fixed is it like

01:03:39,740 --> 01:03:45,050
that really shows the power of the you

01:03:42,320 --> 01:03:46,670
know of the open source community it is

01:03:45,050 --> 01:03:50,870
global and it's definitely because of

01:03:46,670 --> 01:03:57,200
the users community people are extremely

01:03:50,870 --> 01:03:59,120
friendly and always ready to help if you

01:03:57,200 --> 01:04:01,370
go on tire see any day you'll see these

01:03:59,120 --> 01:04:03,100
guys helping each other out and they're

01:04:01,370 --> 01:04:05,810
all doing it like in a selfless manner

01:04:03,100 --> 01:04:08,800
the product is transparent for everyone

01:04:05,810 --> 01:04:12,020
everyone can look at the code base

01:04:08,800 --> 01:04:14,230
everyone can see how close that is being

01:04:12,020 --> 01:04:19,730
built nothing nothing is proprietary

01:04:14,230 --> 01:04:22,400
everything is open in many ways it's

01:04:19,730 --> 01:04:26,810
absolutely vital to the the ongoing

01:04:22,400 --> 01:04:31,010
health cloudstack the most exciting

01:04:26,810 --> 01:04:33,840
event in recent memory for me was our

01:04:31,010 --> 01:04:36,510
first developer boot camp

01:04:33,840 --> 01:04:39,150
and our call gave people a gave me two

01:04:36,510 --> 01:04:43,110
weeks notice to come attend I was

01:04:39,150 --> 01:04:47,280
expecting 25 or 30 people so we ended up

01:04:43,110 --> 01:04:50,130
with 87 people and had to go get more

01:04:47,280 --> 01:04:52,650
chairs in the room twice everything

01:04:50,130 --> 01:04:55,920
within cloud computing is commodity and

01:04:52,650 --> 01:04:58,980
is open source and so I don't think that

01:04:55,920 --> 01:05:00,720
you will you'll see anywhere where open

01:04:58,980 --> 01:05:03,750
source is not pervasive in cloud

01:05:00,720 --> 01:05:06,300
computing and so i think it's i think

01:05:03,750 --> 01:05:07,830
it's an assumption i think when you talk

01:05:06,300 --> 01:05:08,940
about cloud computing you're really

01:05:07,830 --> 01:05:14,490
talking about open source cloud

01:05:08,940 --> 01:05:17,640
computing cloud sac is a robust solution

01:05:14,490 --> 01:05:20,040
for large deployments you have dozens of

01:05:17,640 --> 01:05:23,970
data centers and thousands of servers in

01:05:20,040 --> 01:05:26,610
each data centers these hardware is

01:05:23,970 --> 01:05:30,120
going to fail and CloudStack is designed

01:05:26,610 --> 01:05:32,820
to handle number one that mass scale

01:05:30,120 --> 01:05:35,970
number two it's designed to handle the

01:05:32,820 --> 01:05:38,520
failure that inevitably happens in large

01:05:35,970 --> 01:05:43,050
deployments we started working on pod

01:05:38,520 --> 01:05:46,320
tech over four years ago and it was the

01:05:43,050 --> 01:05:48,090
original set of people working on it had

01:05:46,320 --> 01:05:52,200
a background of delivering software

01:05:48,090 --> 01:05:56,430
telcos and service providers lots of QA

01:05:52,200 --> 01:06:00,060
lots of users actually using it high

01:05:56,430 --> 01:06:03,120
availability is the key feature multiple

01:06:00,060 --> 01:06:05,310
hypervisors support different network

01:06:03,120 --> 01:06:08,310
models we can pick up whatever suits you

01:06:05,310 --> 01:06:10,080
better well step management server can

01:06:08,310 --> 01:06:13,770
be deployed in different physical

01:06:10,080 --> 01:06:15,420
machines it definitely has a huge

01:06:13,770 --> 01:06:20,400
footprint it's being deployed everywhere

01:06:15,420 --> 01:06:23,010
there's a major movie studio that they

01:06:20,400 --> 01:06:26,310
were using cloudstack they were using it

01:06:23,010 --> 01:06:28,290
to transcode video and i thought that

01:06:26,310 --> 01:06:29,910
was terribly fascinating what i found

01:06:28,290 --> 01:06:33,180
more fascinating is what they did during

01:06:29,910 --> 01:06:35,970
lunch where they would spin up you know

01:06:33,180 --> 01:06:37,350
50 or 60 game servers then as soon as

01:06:35,970 --> 01:06:40,050
lunch was over they would destroy all

01:06:37,350 --> 01:06:43,450
the instances and get back to doing

01:06:40,050 --> 01:06:44,980
cloudstack is vast it touches so many

01:06:43,450 --> 01:06:46,840
different aspects and there's no one

01:06:44,980 --> 01:06:49,800
person that's kind of like a master of

01:06:46,840 --> 01:06:53,290
all those realms I think CloudStack as a

01:06:49,800 --> 01:06:55,540
project is going to be one of the

01:06:53,290 --> 01:06:59,590
leaders simply because it's some of the

01:06:55,540 --> 01:07:05,140
most feature Poland and and robust

01:06:59,590 --> 01:07:07,920
platforms out favor Adam senior living

01:07:05,140 --> 01:07:07,920
through the clouds dag

01:07:20,750 --> 01:07:22,810
you

01:07:26,119 --> 01:07:31,200
when we created asterisk over a decade

01:07:28,830 --> 01:07:33,150
ago we could not have imagined that

01:07:31,200 --> 01:07:35,340
asterisk would not only become the most

01:07:33,150 --> 01:07:37,500
widely adopted open source communication

01:07:35,340 --> 01:07:39,540
software on the planet but that it would

01:07:37,500 --> 01:07:42,060
impact the entire industry in the way

01:07:39,540 --> 01:07:44,010
that it has today asterisk has found its

01:07:42,060 --> 01:07:46,650
way in the more than 170 countries and

01:07:44,010 --> 01:07:48,630
virtually every fortune 1000 company the

01:07:46,650 --> 01:07:50,730
success of asterisk has enabled a

01:07:48,630 --> 01:07:52,109
transition of power from the hands of

01:07:50,730 --> 01:07:54,390
the traditional proprietary phone

01:07:52,109 --> 01:07:56,790
vendors into the hands of the users and

01:07:54,390 --> 01:07:58,710
administrators of phone systems using

01:07:56,790 --> 01:07:59,940
this power our customers have created

01:07:58,710 --> 01:08:01,890
all sorts of business changing

01:07:59,940 --> 01:08:03,750
applications from small office phone

01:08:01,890 --> 01:08:06,240
systems to mission-critical call centers

01:08:03,750 --> 01:08:07,859
the international carrier networks in

01:08:06,240 --> 01:08:09,660
fact there's even an entire country

01:08:07,859 --> 01:08:12,240
those communications infrastructure runs

01:08:09,660 --> 01:08:14,160
on esters the gym has always been about

01:08:12,240 --> 01:08:15,869
creating technology that expands

01:08:14,160 --> 01:08:18,060
communications capabilities in ways that

01:08:15,869 --> 01:08:19,259
we could never have imagined and that's

01:08:18,060 --> 01:08:21,630
part of what's game-changing about

01:08:19,259 --> 01:08:24,330
Digium today we're doing it again this

01:08:21,630 --> 01:08:26,430
time by introducing a new family of HD

01:08:24,330 --> 01:08:28,560
IP phones that extends control of the

01:08:26,430 --> 01:08:30,299
user all the way to the desktop the

01:08:28,560 --> 01:08:32,009
launch of these new products represents

01:08:30,299 --> 01:08:33,989
the next phase indigenous history of

01:08:32,009 --> 01:08:36,509
innovation these are the first and only

01:08:33,989 --> 01:08:38,220
IP phones designed to fully leverage the

01:08:36,509 --> 01:08:39,779
power of esters when we first discussed

01:08:38,220 --> 01:08:41,790
our expectations for building a family

01:08:39,779 --> 01:08:43,950
of phones for use with asterisk our

01:08:41,790 --> 01:08:45,690
requirements were pretty simple we asked

01:08:43,950 --> 01:08:47,339
the team to build the phones such that

01:08:45,690 --> 01:08:49,529
they were easy to install integrate

01:08:47,339 --> 01:08:51,390
provision and use I think you'll soon

01:08:49,529 --> 01:08:53,940
agree our engineers have delivered on

01:08:51,390 --> 01:08:55,799
that goal user feedback is validating

01:08:53,940 --> 01:08:57,690
that when it comes to operation with a

01:08:55,799 --> 01:09:00,120
through space systems including our own

01:08:57,690 --> 01:09:02,700
Switchvox based product these are the

01:09:00,120 --> 01:09:03,989
easiest to use best integrated most

01:09:02,700 --> 01:09:06,600
interoperable products on the market

01:09:03,989 --> 01:09:08,580
today the digitally of phones will

01:09:06,600 --> 01:09:10,620
initially include three IP desk phones

01:09:08,580 --> 01:09:12,569
uniquely designed to complement any

01:09:10,620 --> 01:09:14,430
asterisk or Switchvox based solution

01:09:12,569 --> 01:09:17,100
these phones are different for a number

01:09:14,430 --> 01:09:19,770
of reasons first there is clue sively

01:09:17,100 --> 01:09:21,180
designed for use with asterisks secondly

01:09:19,770 --> 01:09:22,819
we've made it really easy to

01:09:21,180 --> 01:09:25,200
autodiscover and provision the phones

01:09:22,819 --> 01:09:26,880
next we've made it easy for the phones

01:09:25,200 --> 01:09:28,589
to access information inside of

01:09:26,880 --> 01:09:29,799
asterisks allowing tight coupling

01:09:28,589 --> 01:09:32,619
between an application

01:09:29,799 --> 01:09:34,960
and the phone additionally we've created

01:09:32,619 --> 01:09:37,089
an applications engine that allows users

01:09:34,960 --> 01:09:40,329
and developers to create and run their

01:09:37,089 --> 01:09:42,099
own apps on the phone and finally we've

01:09:40,329 --> 01:09:44,049
done all of this at a very compelling

01:09:42,099 --> 01:09:45,730
price point at Digium we're always

01:09:44,049 --> 01:09:47,829
thinking of ways to give our customers

01:09:45,730 --> 01:09:50,409
the best value in business phone systems

01:09:47,829 --> 01:09:52,059
and also give them the power to create

01:09:50,409 --> 01:09:54,099
their own solutions or eating

01:09:52,059 --> 01:09:55,809
communications challenge will continue

01:09:54,099 --> 01:09:57,250
to push the boundaries not only to make

01:09:55,809 --> 01:09:59,290
Astra's cooler faster and more

01:09:57,250 --> 01:10:00,909
technologically feature-rich but to make

01:09:59,290 --> 01:10:03,400
asterisk and what communications even

01:10:00,909 --> 01:10:07,110
easier and together we'll change the way

01:10:03,400 --> 01:10:07,110

YouTube URL: https://www.youtube.com/watch?v=X7OwVrApKQs


