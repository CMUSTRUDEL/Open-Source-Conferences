Title: 2012 SouthEast LinuxFest - DrupalCamp CLT - Zach Seifts - Continuous Drupal Deployment
Publication date: 2014-02-20
Playlist: 2012 SouthEast LinuxFest - DrupalCamp CLT - Hot Drupal Track
Description: 
	2012 SouthEast LinuxFest
DrupalCamp Charlotte
Zach Seifts
Continuous Drupal Deployment with Aegir, Git, Fabric, and Jenkins
Captions: 
	00:00:00,000 --> 00:00:05,279
the following presentation was recorded

00:00:02,490 --> 00:00:08,040
the 2012 southeast linux fest in

00:00:05,279 --> 00:00:10,410
charlotte north carolina it is licensed

00:00:08,040 --> 00:00:12,090
under a creative commons license for

00:00:10,410 --> 00:00:16,859
more information about the southeast

00:00:12,090 --> 00:00:19,230
linux fest visit www.lend expense org

00:00:16,859 --> 00:00:21,320
the southeast linux fest would like to

00:00:19,230 --> 00:00:23,279
thank the following diamond sponsors in

00:00:21,320 --> 00:00:27,990
2012 for helping make these videos

00:00:23,279 --> 00:00:30,300
possible hi everyone i am a zach safes I

00:00:27,990 --> 00:00:32,070
work at appalachian state university I'm

00:00:30,300 --> 00:00:34,050
a software developer there I do a lot of

00:00:32,070 --> 00:00:36,270
drupal stuff I do a lot of no jus a lot

00:00:34,050 --> 00:00:38,910
of Python a lot of bash scripting a lot

00:00:36,270 --> 00:00:40,410
of pretty much everything and today I'm

00:00:38,910 --> 00:00:41,879
going to talk about continuous

00:00:40,410 --> 00:00:45,059
deployment or as you might know it

00:00:41,879 --> 00:00:48,629
continuous integration with Drupal eager

00:00:45,059 --> 00:00:51,210
get fabric and Jenkins fabric isn't in

00:00:48,629 --> 00:00:53,460
my original description for my talk but

00:00:51,210 --> 00:00:55,199
it was they took it out and added it

00:00:53,460 --> 00:00:56,640
back in because I wrote this really cool

00:00:55,199 --> 00:01:00,530
little thing with it which we'll talk

00:00:56,640 --> 00:01:02,969
about later but um yeah that's me so

00:01:00,530 --> 00:01:05,700
about me i work at appalachian like i

00:01:02,969 --> 00:01:08,729
said we have over 300 instances of

00:01:05,700 --> 00:01:11,159
drupal that makes up our most of our web

00:01:08,729 --> 00:01:13,110
presence most of it is in a single

00:01:11,159 --> 00:01:15,750
single egger instance where we have

00:01:13,110 --> 00:01:17,310
multi-server split off so we'll have our

00:01:15,750 --> 00:01:19,380
development instance over here with a

00:01:17,310 --> 00:01:20,400
remote egger instance and we'll do

00:01:19,380 --> 00:01:22,310
everything they're just move it around

00:01:20,400 --> 00:01:25,650
it makes it really super cool to do that

00:01:22,310 --> 00:01:27,060
I write a lot of Drupal Django nodejs I

00:01:25,650 --> 00:01:29,549
have a project called the open blog

00:01:27,060 --> 00:01:31,560
project which shop talked about and a

00:01:29,549 --> 00:01:33,930
bunch of people really dig so it's kind

00:01:31,560 --> 00:01:37,560
of cool actually be demoing some stuff

00:01:33,930 --> 00:01:40,380
on that too so overview why is

00:01:37,560 --> 00:01:41,700
continuous integration important what

00:01:40,380 --> 00:01:43,860
are some of the tools we can use and

00:01:41,700 --> 00:01:46,500
what are some example workflows we can

00:01:43,860 --> 00:01:50,130
do and a little live demo because why

00:01:46,500 --> 00:01:52,530
not should be able to push some code so

00:01:50,130 --> 00:01:55,020
what will continuous integration do for

00:01:52,530 --> 00:01:57,509
me why is it important well it's really

00:01:55,020 --> 00:02:00,090
important because every time you run

00:01:57,509 --> 00:02:01,619
every time you make a commit whatever

00:02:00,090 --> 00:02:03,719
service you're using to watch your repo

00:02:01,619 --> 00:02:05,490
and go and build the instance you have

00:02:03,719 --> 00:02:07,110
the ability to run your unit test so you

00:02:05,490 --> 00:02:08,879
have the ability to run selenium tests

00:02:07,110 --> 00:02:11,610
and you have the ability to make sure

00:02:08,879 --> 00:02:13,600
that the code you're pushing out will

00:02:11,610 --> 00:02:15,040
work and it will be

00:02:13,600 --> 00:02:17,260
able enough so you don't have any weird

00:02:15,040 --> 00:02:19,210
bugs creeping up on you you'll find that

00:02:17,260 --> 00:02:22,450
you could normally find with continuing

00:02:19,210 --> 00:02:25,570
continual integration lets you automate

00:02:22,450 --> 00:02:29,230
everything and basically all I do now is

00:02:25,570 --> 00:02:31,360
push to a repo a branch in my my repo

00:02:29,230 --> 00:02:33,670
and all the changes and to change it

00:02:31,360 --> 00:02:36,010
just happen because i have jenkins and

00:02:33,670 --> 00:02:37,870
everything else in place doing this and

00:02:36,010 --> 00:02:40,060
it helps keep your production code base

00:02:37,870 --> 00:02:45,910
current so you're not worried about you

00:02:40,060 --> 00:02:48,040
know oh I'm running 625 and develop it

00:02:45,910 --> 00:02:48,880
and I'm running 622 in production you

00:02:48,040 --> 00:02:51,010
don't have to worry about that because

00:02:48,880 --> 00:02:51,910
everything is synced up because you know

00:02:51,010 --> 00:02:53,680
you're building everything off

00:02:51,910 --> 00:02:55,000
distributions your building you know

00:02:53,680 --> 00:02:56,560
everything is based on a make file so

00:02:55,000 --> 00:02:58,060
it's all kind of the same an acre

00:02:56,560 --> 00:03:01,750
manages a lot of this stuff for you it's

00:02:58,060 --> 00:03:04,390
really cool so I don't remember what my

00:03:01,750 --> 00:03:06,370
next slide is ok so now let's start

00:03:04,390 --> 00:03:08,110
talking about the tools we need so I

00:03:06,370 --> 00:03:10,420
don't know how many you guys use get but

00:03:08,110 --> 00:03:12,340
get is a really awesome distributed

00:03:10,420 --> 00:03:14,560
version control system and it makes

00:03:12,340 --> 00:03:17,050
branching and merging and and you know

00:03:14,560 --> 00:03:18,970
rebasing using remote origins using sub

00:03:17,050 --> 00:03:20,950
trees or sub modules if you're still

00:03:18,970 --> 00:03:23,590
using an older version to get and it

00:03:20,950 --> 00:03:25,810
makes doing this stuff really cool it

00:03:23,590 --> 00:03:28,060
lets you use workflows I don't know how

00:03:25,810 --> 00:03:29,830
many you guys have seen um there's

00:03:28,060 --> 00:03:31,810
something called the successful git

00:03:29,830 --> 00:03:33,190
workflow I always talk about this if you

00:03:31,810 --> 00:03:36,220
google it you'll find it it's a really

00:03:33,190 --> 00:03:38,200
cool way of managing your your source

00:03:36,220 --> 00:03:40,210
tree and breaking up everything into

00:03:38,200 --> 00:03:43,180
logical groups so you know for instance

00:03:40,210 --> 00:03:44,770
you have your main develop branch which

00:03:43,180 --> 00:03:47,860
is where you do all your changes to your

00:03:44,770 --> 00:03:49,390
code base and you would never you always

00:03:47,860 --> 00:03:50,890
commit to there and you always break off

00:03:49,390 --> 00:03:53,200
feature branches or bug branches from

00:03:50,890 --> 00:03:55,210
that and then you merge that into stuff

00:03:53,200 --> 00:03:57,130
so you have your master branch which

00:03:55,210 --> 00:03:58,240
you've never committed to accept the

00:03:57,130 --> 00:04:01,210
first commit because you kind of have to

00:03:58,240 --> 00:04:03,220
and you just keep merging stuff in so

00:04:01,210 --> 00:04:04,720
you end up with this tree that I wish I

00:04:03,220 --> 00:04:06,040
would have took a picture of this but

00:04:04,720 --> 00:04:07,150
it's like all these different lines

00:04:06,040 --> 00:04:09,220
going up everything's merging into one

00:04:07,150 --> 00:04:12,040
and you kind of build out this thing

00:04:09,220 --> 00:04:14,620
where you can you can say you know only

00:04:12,040 --> 00:04:16,660
stable code only tested code lives in

00:04:14,620 --> 00:04:18,310
the master branch and you can also make

00:04:16,660 --> 00:04:19,870
Jenkins do this you can make any kind of

00:04:18,310 --> 00:04:21,940
continuous integration server do this

00:04:19,870 --> 00:04:24,490
you can have it automatically commit

00:04:21,940 --> 00:04:25,840
after tests or ran or whatever if you

00:04:24,490 --> 00:04:26,670
don't want to do it on your own but we

00:04:25,840 --> 00:04:30,660
kind of do it

00:04:26,670 --> 00:04:32,480
our own there and you have all kinds of

00:04:30,660 --> 00:04:35,520
great tools and all that good stuff so

00:04:32,480 --> 00:04:37,020
the next thing Jenkins I don't know how

00:04:35,520 --> 00:04:40,860
many you guys know this but it's a it's

00:04:37,020 --> 00:04:44,040
amazing it's a java-based continuous

00:04:40,860 --> 00:04:46,380
integration server I know Java is kind

00:04:44,040 --> 00:04:48,960
of scary but this one actually works and

00:04:46,380 --> 00:04:50,640
it's a it works really well it's just

00:04:48,960 --> 00:04:53,480
kind of a memory hog sometimes because

00:04:50,640 --> 00:04:55,890
it's Java and all that good stuff

00:04:53,480 --> 00:04:57,270
there's a large selection of plugins and

00:04:55,890 --> 00:05:01,110
i'll be talking about couple them that i

00:04:57,270 --> 00:05:05,730
use here you could have remote jenkins

00:05:01,110 --> 00:05:07,920
instances so we have our master instance

00:05:05,730 --> 00:05:10,350
right here we have ned and we have net

00:05:07,920 --> 00:05:12,600
too so both of our remote instances do

00:05:10,350 --> 00:05:14,190
different things this one does all the

00:05:12,600 --> 00:05:16,200
building this one does a lot of testing

00:05:14,190 --> 00:05:18,990
so you can kind of split up your tasks

00:05:16,200 --> 00:05:21,300
and then once the task is ran it doesn't

00:05:18,990 --> 00:05:22,680
have to run on the the master server

00:05:21,300 --> 00:05:25,950
anymore so it can run on one of the

00:05:22,680 --> 00:05:27,630
slaves so then it's just awesome it's

00:05:25,950 --> 00:05:31,050
it's just like cron I mean basically

00:05:27,630 --> 00:05:34,160
it's it's light cron but you have a lot

00:05:31,050 --> 00:05:37,320
more options and a lot more awesomeness

00:05:34,160 --> 00:05:41,280
so acre I don't know how many you guys

00:05:37,320 --> 00:05:43,230
use this but it is super cool the basics

00:05:41,280 --> 00:05:44,940
Part the basics of acre is two things

00:05:43,230 --> 00:05:47,610
you have the back end in the front end

00:05:44,940 --> 00:05:49,830
the back end is called provision it is

00:05:47,610 --> 00:05:53,420
what handles all of the all of the tasks

00:05:49,830 --> 00:05:57,780
you know creating vioz files creating a

00:05:53,420 --> 00:06:00,570
managing where apache does stuff where

00:05:57,780 --> 00:06:02,880
your site's live here building stuff all

00:06:00,570 --> 00:06:04,200
kinds of cool stuff and you have host

00:06:02,880 --> 00:06:05,550
master which is our front end which is

00:06:04,200 --> 00:06:08,040
the drupal side so if you ever see a

00:06:05,550 --> 00:06:09,780
acre site that's hostmaster you could

00:06:08,040 --> 00:06:11,880
have multiple egger sites pointing at

00:06:09,780 --> 00:06:14,940
one provision I found which seems pretty

00:06:11,880 --> 00:06:19,290
cool and the one thing in between them

00:06:14,940 --> 00:06:22,590
all is drush so eager is basically built

00:06:19,290 --> 00:06:24,630
around drush commands it uses drush

00:06:22,590 --> 00:06:29,340
aliases to store contextual information

00:06:24,630 --> 00:06:32,460
about the site it uses I mean how many

00:06:29,340 --> 00:06:35,660
you guys have used rush update DB that's

00:06:32,460 --> 00:06:37,800
that's a command that came from acre

00:06:35,660 --> 00:06:38,940
it's one of the coolest things they've

00:06:37,800 --> 00:06:41,210
done and they've then they're starting

00:06:38,940 --> 00:06:44,550
to push in a lot of other stuff

00:06:41,210 --> 00:06:46,590
it's built around drush and drupal

00:06:44,550 --> 00:06:48,930
multi-site now the thing that differs

00:06:46,590 --> 00:06:52,290
between an acre site and a regular site

00:06:48,930 --> 00:06:54,210
is an acre site as a multi-site you have

00:06:52,290 --> 00:06:56,940
your site's default and normally you

00:06:54,210 --> 00:06:58,890
have your site's default whatever this

00:06:56,940 --> 00:07:01,560
time it cites your URL and then

00:06:58,890 --> 00:07:02,940
everything else so you have this long

00:07:01,560 --> 00:07:04,380
thing and I'll kind of show it to you in

00:07:02,940 --> 00:07:07,200
a little while too I should have put a

00:07:04,380 --> 00:07:10,890
demo up there but um it's pretty cool um

00:07:07,200 --> 00:07:14,100
and it actually it stores information

00:07:10,890 --> 00:07:16,380
about each different kind of a kind of

00:07:14,100 --> 00:07:19,620
content kind of entity in the in the

00:07:16,380 --> 00:07:20,940
application through through the context

00:07:19,620 --> 00:07:24,660
and there's only a certain number of

00:07:20,940 --> 00:07:27,300
entities there's sites platforms servers

00:07:24,660 --> 00:07:29,760
packages installed packages there's a

00:07:27,300 --> 00:07:30,870
bunch and they're all nodes so you can

00:07:29,760 --> 00:07:33,510
do whatever you want you can use the

00:07:30,870 --> 00:07:35,520
node API to kind of mess with stuff and

00:07:33,510 --> 00:07:39,420
do kind of cool stuff so it's crazy it's

00:07:35,520 --> 00:07:40,530
really just crazy extendable so let's

00:07:39,420 --> 00:07:43,130
talk a bit a little bit more about

00:07:40,530 --> 00:07:45,780
provision provision is the backend and

00:07:43,130 --> 00:07:47,070
it's really just super simple it just

00:07:45,780 --> 00:07:50,190
kind of hangs out does all your

00:07:47,070 --> 00:07:51,450
configuration stuff the way you interact

00:07:50,190 --> 00:07:52,680
with it is the same way you would

00:07:51,450 --> 00:07:54,540
interact with any kind of rush command

00:07:52,680 --> 00:07:56,730
and you can even write aliases on your

00:07:54,540 --> 00:07:58,470
own system and then have that interact

00:07:56,730 --> 00:08:02,790
with your remote one but basically I

00:07:58,470 --> 00:08:04,770
mean you say drush you're the name of

00:08:02,790 --> 00:08:07,050
your context and the command you want to

00:08:04,770 --> 00:08:10,920
run and it'll do it so if you used rush

00:08:07,050 --> 00:08:12,990
and then grep for provision or host

00:08:10,920 --> 00:08:15,180
master either one it'll show you all the

00:08:12,990 --> 00:08:17,780
options that has in your acre instance

00:08:15,180 --> 00:08:19,800
and you can do you know you can do

00:08:17,780 --> 00:08:24,900
subcommands with the dollar sign thing

00:08:19,800 --> 00:08:28,740
and all that good stuff okay and this is

00:08:24,900 --> 00:08:33,870
an example of a of a context which

00:08:28,740 --> 00:08:36,210
essentially is a more structured drush

00:08:33,870 --> 00:08:38,070
alias address site site alias for a site

00:08:36,210 --> 00:08:40,380
so you have your basic you know your

00:08:38,070 --> 00:08:41,940
name your site it's a key to Ray so what

00:08:40,380 --> 00:08:44,370
kind of context it is the platform it

00:08:41,940 --> 00:08:46,800
lives on the cool thing about servers is

00:08:44,370 --> 00:08:50,670
that it represents servers the same way

00:08:46,800 --> 00:08:53,400
represents sites so a server is a server

00:08:50,670 --> 00:08:53,800
has a context site has a context a

00:08:53,400 --> 00:08:55,779
platform

00:08:53,800 --> 00:08:57,040
context everything has these little

00:08:55,779 --> 00:08:59,500
things describing each other and you can

00:08:57,040 --> 00:09:01,360
reference them in it with different

00:08:59,500 --> 00:09:03,610
things so I could say the DB server is

00:09:01,360 --> 00:09:07,180
at server low post or I could say the DV

00:09:03,610 --> 00:09:10,329
server is at server you know my sequel

00:09:07,180 --> 00:09:11,470
one dot whatever where it is and it can

00:09:10,329 --> 00:09:13,420
do that it automatically figures this

00:09:11,470 --> 00:09:14,800
out and this is all done without the

00:09:13,420 --> 00:09:16,600
front ends involvement this is all in

00:09:14,800 --> 00:09:18,130
the back end I mean you can host in a

00:09:16,600 --> 00:09:21,279
full & Eggar infrastructure without

00:09:18,130 --> 00:09:23,829
hostmaster it's it's completely

00:09:21,279 --> 00:09:25,660
decoupled as long as you can write or I

00:09:23,829 --> 00:09:30,370
mean yeah you can just run commands like

00:09:25,660 --> 00:09:32,170
drush I think it's just save alias will

00:09:30,370 --> 00:09:33,670
do this or no that's the name I can I

00:09:32,170 --> 00:09:35,140
show that good I'll show that to you

00:09:33,670 --> 00:09:37,000
guys later but this is all created by

00:09:35,140 --> 00:09:41,920
drush just run like three or four

00:09:37,000 --> 00:09:43,440
commands and boom done so next thing

00:09:41,920 --> 00:09:46,149
talk a little bit more about host master

00:09:43,440 --> 00:09:48,100
hostmaster is what you're what people

00:09:46,149 --> 00:09:50,890
who are using your acre instance we'll

00:09:48,100 --> 00:09:52,420
see you know what someone who you know

00:09:50,890 --> 00:09:53,740
if you have a client you give access to

00:09:52,420 --> 00:09:55,420
you won't them be able to back up their

00:09:53,740 --> 00:09:57,310
stuff or do whatever if you would ever

00:09:55,420 --> 00:10:00,250
give clients a access to host master I

00:09:57,310 --> 00:10:02,320
wouldn't but if you have like for

00:10:00,250 --> 00:10:04,870
instance we have the designer I work

00:10:02,320 --> 00:10:06,820
with she is the one who builds most of

00:10:04,870 --> 00:10:08,620
our sites she's the one she goes in

00:10:06,820 --> 00:10:11,950
there creates a site does all this stuff

00:10:08,620 --> 00:10:13,450
and it's so easy and this is what host

00:10:11,950 --> 00:10:16,480
master does it lets you do this and let

00:10:13,450 --> 00:10:17,740
you let people manage their own stuff so

00:10:16,480 --> 00:10:19,360
I'm not the one who has to go and create

00:10:17,740 --> 00:10:20,680
a site every day you know I don't have

00:10:19,360 --> 00:10:22,029
to go through my read mine tick and say

00:10:20,680 --> 00:10:24,250
oh ok I got to create this this and this

00:10:22,029 --> 00:10:26,709
I could say okay here here's how you do

00:10:24,250 --> 00:10:29,950
it and you know you're you're dealing

00:10:26,709 --> 00:10:31,899
with normal drupal users too so you have

00:10:29,950 --> 00:10:34,149
roles you have permissions you have all

00:10:31,899 --> 00:10:35,740
kinds of cool stuff it's it's a Drupal

00:10:34,149 --> 00:10:39,399
site that you're using to manage

00:10:35,740 --> 00:10:40,630
everything else super cool and it's

00:10:39,399 --> 00:10:42,699
extendable because you're just writing

00:10:40,630 --> 00:10:44,770
modules and all you have to do is like

00:10:42,699 --> 00:10:47,740
right add rush I and see something and

00:10:44,770 --> 00:10:50,649
then you can expose it to the to the

00:10:47,740 --> 00:10:52,540
back end and then grab all the data so

00:10:50,649 --> 00:10:54,550
next thing I don't know how many you

00:10:52,540 --> 00:10:57,790
guys are really into like Python and

00:10:54,550 --> 00:11:01,199
pythonic stuff but fabric is one of the

00:10:57,790 --> 00:11:04,120
coolest things in the world for doing

00:11:01,199 --> 00:11:06,190
system admin tasks it's it's basically a

00:11:04,120 --> 00:11:08,260
library that

00:11:06,190 --> 00:11:12,010
apps openssl and a bunch of other stuff

00:11:08,260 --> 00:11:19,570
and lets you run commands either locally

00:11:12,010 --> 00:11:21,820
or on an external service that do stuff

00:11:19,570 --> 00:11:23,650
like so if I have something that goes in

00:11:21,820 --> 00:11:26,350
and starts restarts Apache I say you

00:11:23,650 --> 00:11:31,060
know SSH whatever add whatever app say

00:11:26,350 --> 00:11:34,690
to a tu and then sudo / services all

00:11:31,060 --> 00:11:39,040
that good stuff this I can just say well

00:11:34,690 --> 00:11:41,230
I can import the run or the pseudo from

00:11:39,040 --> 00:11:43,780
the ape from the fabric ABI and then say

00:11:41,230 --> 00:11:46,840
sudo restart apache and it will do it

00:11:43,780 --> 00:11:48,790
it's super cool and you can run it on

00:11:46,840 --> 00:11:50,710
multiple hosts you can run one task on

00:11:48,790 --> 00:11:53,860
multiple hosts like I'm doing here you

00:11:50,710 --> 00:11:56,320
say fabric dash H and you can just it's

00:11:53,860 --> 00:11:57,940
common delimited so you say localhost

00:11:56,320 --> 00:12:00,430
prod one prod to and it'll go through

00:11:57,940 --> 00:12:03,940
and it will run the tasks out on it is

00:12:00,430 --> 00:12:07,660
really super neat and I wrote a little a

00:12:03,940 --> 00:12:11,440
kind of a little a rapper thing for

00:12:07,660 --> 00:12:12,730
dealing with agri for dealing with agar

00:12:11,440 --> 00:12:14,200
sites I'll show that in a second it's

00:12:12,730 --> 00:12:17,050
kind of based on big Five's thing which

00:12:14,200 --> 00:12:20,440
is just amazingly cool but fabric is

00:12:17,050 --> 00:12:22,660
really it's it's pretty much what ties

00:12:20,440 --> 00:12:25,960
the room together it's just amazing it

00:12:22,660 --> 00:12:27,130
makes life so much easier so now let's

00:12:25,960 --> 00:12:29,440
talk about workflow what is actually

00:12:27,130 --> 00:12:32,260
going to happen when we when we start

00:12:29,440 --> 00:12:34,480
our site so the main thing you're

00:12:32,260 --> 00:12:37,570
looking at is the developer the

00:12:34,480 --> 00:12:39,100
developer is the key to this one person

00:12:37,570 --> 00:12:41,920
doing one thing and then pushing their

00:12:39,100 --> 00:12:43,410
code out so the developer here makes

00:12:41,920 --> 00:12:45,940
their changes on the develop branch

00:12:43,410 --> 00:12:48,490
mergers their changes in the master runs

00:12:45,940 --> 00:12:50,230
and unit tests and pushes it up and if

00:12:48,490 --> 00:12:52,270
they before you know if they don't run

00:12:50,230 --> 00:12:56,470
it before they barge into master so they

00:12:52,270 --> 00:12:59,620
push it up to the gate repo then Jenkins

00:12:56,470 --> 00:13:01,240
comes in Jenkins will pull the repo it's

00:12:59,620 --> 00:13:03,070
it's I wish it had like a pub sub

00:13:01,240 --> 00:13:05,320
capability but it doesn't so you have to

00:13:03,070 --> 00:13:07,839
use polling to go look for changes and

00:13:05,320 --> 00:13:10,330
when it sees a change Jenkins will

00:13:07,839 --> 00:13:13,710
automatically start building jobs it

00:13:10,330 --> 00:13:17,380
just does this all on its own super cool

00:13:13,710 --> 00:13:19,600
then if it succeeds it fires off the

00:13:17,380 --> 00:13:19,870
next jobs because you can have jobs that

00:13:19,600 --> 00:13:21,790
are

00:13:19,870 --> 00:13:24,460
parameter eyes and you can have jobs

00:13:21,790 --> 00:13:25,810
that are parametrized that trigger other

00:13:24,460 --> 00:13:27,700
jobs that are parametrized and pass

00:13:25,810 --> 00:13:29,080
parameters around super cool kind of

00:13:27,700 --> 00:13:32,470
cool thing that I figured out about two

00:13:29,080 --> 00:13:35,500
days ago but you basically start doing

00:13:32,470 --> 00:13:36,730
that and if it fails you can make

00:13:35,500 --> 00:13:39,130
Jenkins harass whoever broke the build

00:13:36,730 --> 00:13:40,529
that's what I do sends emails hops and I

00:13:39,130 --> 00:13:44,920
our sages starts making fun of people

00:13:40,529 --> 00:13:47,890
but uh you have it fails and it tells

00:13:44,920 --> 00:13:49,330
you it emails everyone and it doesn't

00:13:47,890 --> 00:13:50,529
trigger any of these other jobs or you

00:13:49,330 --> 00:13:53,260
can make it trigger jobs that would

00:13:50,529 --> 00:13:55,390
happen on a failure say you have build

00:13:53,260 --> 00:13:58,180
job here failed but you have another job

00:13:55,390 --> 00:13:59,380
that emails all the devs and one that

00:13:58,180 --> 00:14:01,510
goes through and tries to do something

00:13:59,380 --> 00:14:04,779
else so you can do all kinds of cool

00:14:01,510 --> 00:14:08,110
stuff with chaining jobs and okay and

00:14:04,779 --> 00:14:11,170
that kind of fun stuff and that's the

00:14:08,110 --> 00:14:14,350
end of my presentation part so now let's

00:14:11,170 --> 00:14:17,190
actually make this happen what I what I

00:14:14,350 --> 00:14:22,089
got here what are what I have here is

00:14:17,190 --> 00:14:23,680
let's minimize this is a change to I i

00:14:22,089 --> 00:14:27,610
don't know i mentioned open blog earlier

00:14:23,680 --> 00:14:30,070
but I run my my site in it and I run a

00:14:27,610 --> 00:14:32,470
couple of other things and I have a

00:14:30,070 --> 00:14:34,930
change that I want to push up actually

00:14:32,470 --> 00:14:37,120
first let's do this so this is my

00:14:34,930 --> 00:14:40,089
Jenkins instance this is hanging out I

00:14:37,120 --> 00:14:44,529
have four jobs in here i have my build

00:14:40,089 --> 00:14:46,720
my deploy for open blog us in my site

00:14:44,529 --> 00:14:48,070
and i have a github mirror which I just

00:14:46,720 --> 00:14:49,839
kind of like to do because i don't

00:14:48,070 --> 00:14:52,260
really like leaving my coat in one place

00:14:49,839 --> 00:14:56,770
i just want to want to mirror it around

00:14:52,260 --> 00:14:58,570
but what I have with this job and I have

00:14:56,770 --> 00:15:03,910
a couple plugins enable and I'll show

00:14:58,570 --> 00:15:05,830
you is there's one call is one plug-in

00:15:03,910 --> 00:15:07,839
called parameterised builds which lets

00:15:05,830 --> 00:15:11,050
you have different parameters you can

00:15:07,839 --> 00:15:13,209
pass to your to your job when you're

00:15:11,050 --> 00:15:14,740
trying to run it so I'm grabbing the

00:15:13,209 --> 00:15:18,910
site name I have a default value you can

00:15:14,740 --> 00:15:22,570
leave that out I'm grabbing an agar

00:15:18,910 --> 00:15:24,339
which is the server name for the ager

00:15:22,570 --> 00:15:26,950
instance that I am managing all the

00:15:24,339 --> 00:15:28,780
sights on I am grabbing the build name

00:15:26,950 --> 00:15:33,670
which is pretty cool because you can

00:15:28,780 --> 00:15:35,290
also include variables jenkins variables

00:15:33,670 --> 00:15:37,150
and say you know I want to have this

00:15:35,290 --> 00:15:40,090
called open blog and this will be billed

00:15:37,150 --> 00:15:42,420
like 33 or 34 but you can have that and

00:15:40,090 --> 00:15:45,910
you can come down here to the bottom and

00:15:42,420 --> 00:15:50,950
you can trigger other jobs see I have

00:15:45,910 --> 00:15:53,620
one I have this one triggering my deploy

00:15:50,950 --> 00:15:55,210
and for my deployed for my site and you

00:15:53,620 --> 00:15:56,620
can also pass that parameters and you

00:15:55,210 --> 00:15:58,720
could pass it parameters that you passed

00:15:56,620 --> 00:15:59,920
the original job so you can keep just

00:15:58,720 --> 00:16:02,440
sending this whole line of parameter

00:15:59,920 --> 00:16:04,690
down and you can actually pass there's a

00:16:02,440 --> 00:16:07,060
whole bunch of other options so you can

00:16:04,690 --> 00:16:08,590
actually pass current build parameters

00:16:07,060 --> 00:16:09,640
so if you just want to leave that in

00:16:08,590 --> 00:16:11,110
there and just pass them all down

00:16:09,640 --> 00:16:13,450
through the thing if you don't want to

00:16:11,110 --> 00:16:16,570
change anything you have a properties

00:16:13,450 --> 00:16:19,630
file you can pass through stuff about

00:16:16,570 --> 00:16:22,360
the git commit I don't know what the

00:16:19,630 --> 00:16:24,010
restricted matrix execution to a subset

00:16:22,360 --> 00:16:26,890
is but you can do that if you wanted

00:16:24,010 --> 00:16:29,860
there's all kinds of cool stuff and you

00:16:26,890 --> 00:16:32,170
can also oh yeah and I'm also triggering

00:16:29,860 --> 00:16:35,710
the github built on a stable stable

00:16:32,170 --> 00:16:39,400
release and the other thing about

00:16:35,710 --> 00:16:42,190
Jenkins is these are all shell scripts

00:16:39,400 --> 00:16:43,750
this is all bash pretty much and

00:16:42,190 --> 00:16:48,970
actually yeah because I'm just I'm

00:16:43,750 --> 00:16:51,190
telling it to run it bash and it's just

00:16:48,970 --> 00:16:53,200
super-easy I mean all you do is point a

00:16:51,190 --> 00:16:59,950
point where you want to go and then BAM

00:16:53,200 --> 00:17:02,020
it runs so what it runs is this this is

00:16:59,950 --> 00:17:04,710
a project I've sort of been working on

00:17:02,020 --> 00:17:07,240
it's sort it's really like Meg fives

00:17:04,710 --> 00:17:09,100
deployment scripts if any of you guys

00:17:07,240 --> 00:17:12,250
have played with that it's basically

00:17:09,100 --> 00:17:14,170
continuous integration but it's sort of

00:17:12,250 --> 00:17:17,470
it's weird because it sort of depends on

00:17:14,170 --> 00:17:20,740
the build number to determine if your

00:17:17,470 --> 00:17:23,830
site exists or not well what I want to

00:17:20,740 --> 00:17:25,180
do is say if it doesn't exist create it

00:17:23,830 --> 00:17:27,490
or if it does just migrated to it

00:17:25,180 --> 00:17:30,400
because you can what you should be able

00:17:27,490 --> 00:17:32,410
to do here and which is why this code

00:17:30,400 --> 00:17:34,060
block right here exists which is hacky

00:17:32,410 --> 00:17:35,890
very happy if you're doing this in

00:17:34,060 --> 00:17:38,350
Python what you should be doing is

00:17:35,890 --> 00:17:40,360
listening for a system exit exception

00:17:38,350 --> 00:17:42,580
and then catching that and then doing

00:17:40,360 --> 00:17:45,700
something on there but because fabric

00:17:42,580 --> 00:17:47,070
doesn't it doesn't return values

00:17:45,700 --> 00:17:49,540
properly

00:17:47,070 --> 00:17:51,700
it doesn't actually doesn't return the

00:17:49,540 --> 00:17:53,920
exit code proper the victim system error

00:17:51,700 --> 00:17:55,330
just throws it out there and you can't

00:17:53,920 --> 00:17:56,590
really catch the proper one in newer

00:17:55,330 --> 00:17:59,200
versions they're working on fixing this

00:17:56,590 --> 00:18:03,010
but you can just say you know if the

00:17:59,200 --> 00:18:05,050
result failed do this so this is

00:18:03,010 --> 00:18:06,910
basically a lot of fabric it's really

00:18:05,050 --> 00:18:11,429
super simple and if you come down here

00:18:06,910 --> 00:18:14,140
like the build platform task these are

00:18:11,429 --> 00:18:16,390
these are show these are commands that

00:18:14,140 --> 00:18:19,540
you would run in a shell I mean really

00:18:16,390 --> 00:18:21,880
you say make the directory drush make

00:18:19,540 --> 00:18:23,800
you tell drush where it is provision

00:18:21,880 --> 00:18:26,620
save all this good stuff and this runs

00:18:23,800 --> 00:18:27,910
runs through and build your platform

00:18:26,620 --> 00:18:29,880
migrates all that good stuff so you can

00:18:27,910 --> 00:18:32,800
kind of build these commands out and

00:18:29,880 --> 00:18:37,809
just do all kinds of cool stuff would

00:18:32,800 --> 00:18:39,760
with this so and then we have our our

00:18:37,809 --> 00:18:45,940
acre instance with all of our sights on

00:18:39,760 --> 00:18:48,429
it so pretty simple so let's see first

00:18:45,940 --> 00:18:50,470
thing we're going to do with the Jenkins

00:18:48,429 --> 00:18:52,030
you also have the ability to pull git

00:18:50,470 --> 00:18:53,290
repositories so what I was talking about

00:18:52,030 --> 00:18:55,270
earlier about looking for changes and

00:18:53,290 --> 00:18:58,960
then grabbing them so what we can do

00:18:55,270 --> 00:19:01,740
here we can change the schedule this is

00:18:58,960 --> 00:19:05,140
really kind of bad for drupal.org but I

00:19:01,740 --> 00:19:06,730
don't care and I mean every minute so

00:19:05,140 --> 00:19:09,580
what this will do it'll start pulling

00:19:06,730 --> 00:19:12,190
for changes every minute so and what we

00:19:09,580 --> 00:19:13,900
can do we can make a change so I'm going

00:19:12,190 --> 00:19:20,200
to make a change to the 70 decks branch

00:19:13,900 --> 00:19:22,300
i have i have this change what I did I'm

00:19:20,200 --> 00:19:24,510
a big fan of consistency with my layout

00:19:22,300 --> 00:19:27,250
and stuff right here where it says

00:19:24,510 --> 00:19:30,580
monthly archive its capital letter

00:19:27,250 --> 00:19:32,320
lowercase letter right here capital

00:19:30,580 --> 00:19:35,010
letter capital letter I don't like that

00:19:32,320 --> 00:19:36,910
that needs to change so what we can do

00:19:35,010 --> 00:19:38,890
because this is all built out and

00:19:36,910 --> 00:19:40,360
features and everything we can just

00:19:38,890 --> 00:19:43,330
change it in the feature and what I've

00:19:40,360 --> 00:19:44,860
done here is I have one little change in

00:19:43,330 --> 00:19:51,070
you guys can't read that I just change

00:19:44,860 --> 00:19:54,520
the let the letter so let's make sure

00:19:51,070 --> 00:20:04,760
I'm the right user first cool

00:19:54,520 --> 00:20:06,230
so make it commits and hopefully ooh i

00:20:04,760 --> 00:20:08,570
spelled that wrong too i'm sorry about

00:20:06,230 --> 00:20:12,080
my spelling i'm not great so it should

00:20:08,570 --> 00:20:13,940
have pushed the change-up so now let's

00:20:12,080 --> 00:20:16,370
take a look over here now if we wait a

00:20:13,940 --> 00:20:19,580
minute it runs every minute it has the

00:20:16,370 --> 00:20:22,640
same kind of same kind of limitation as

00:20:19,580 --> 00:20:24,920
Kron we it's not a Damien and you just

00:20:22,640 --> 00:20:29,680
run it whenever it wants to run so it

00:20:24,920 --> 00:20:29,680
should pick it up soon I don't have

00:20:30,880 --> 00:20:35,150
eventually when it decides actually this

00:20:33,740 --> 00:20:36,170
would be a cool time you guys have any

00:20:35,150 --> 00:20:38,990
questions or anything because I know

00:20:36,170 --> 00:20:44,500
I've been talking a lot and any kind of

00:20:38,990 --> 00:20:44,500
questions all right

00:20:47,990 --> 00:20:53,280
Appalachian we run our own hardware we

00:20:49,950 --> 00:20:54,960
have to physical boxes and we use VMs

00:20:53,280 --> 00:20:56,850
for our development and staging servers

00:20:54,960 --> 00:20:58,380
but for the most part we do all of our

00:20:56,850 --> 00:21:01,650
own hardware we don't really virtualize

00:20:58,380 --> 00:21:05,640
yet we're looking at it for maybe

00:21:01,650 --> 00:21:07,500
building clustered like like behind a

00:21:05,640 --> 00:21:09,270
load balancer acre instances and then

00:21:07,500 --> 00:21:12,270
have them all connect to NFS share and

00:21:09,270 --> 00:21:13,980
share data that way or maybe something

00:21:12,270 --> 00:21:16,620
cool like that but for the most part

00:21:13,980 --> 00:21:21,000
it's all oh look it's building okay cool

00:21:16,620 --> 00:21:22,440
it is started building on tone so but

00:21:21,000 --> 00:21:24,150
yeah hardware school you do need a lot

00:21:22,440 --> 00:21:25,380
of hardware with this and I'm just

00:21:24,150 --> 00:21:26,640
saying you probably shouldn't run this

00:21:25,380 --> 00:21:29,670
like I'm running it now because I'm

00:21:26,640 --> 00:21:33,870
running it all in one linode 787 68

00:21:29,670 --> 00:21:38,010
thing and I'm running varnish acre my

00:21:33,870 --> 00:21:41,400
sequel Apache Jenkins all that fun stuff

00:21:38,010 --> 00:21:44,670
so this might might crash we don't know

00:21:41,400 --> 00:21:48,210
so the fun thing about this and where it

00:21:44,670 --> 00:21:49,800
gets to the point about continuous

00:21:48,210 --> 00:21:51,840
integration so what we have here is you

00:21:49,800 --> 00:21:55,140
can see what's running you can see that

00:21:51,840 --> 00:21:57,180
it didn't see the platform it failed so

00:21:55,140 --> 00:22:00,390
we're going to start running the dress

00:21:57,180 --> 00:22:03,570
make so here it's building out the

00:22:00,390 --> 00:22:05,670
platform downloading everything and this

00:22:03,570 --> 00:22:07,830
is all done like this is all pretty much

00:22:05,670 --> 00:22:10,620
out of the box Jenkins all i have is the

00:22:07,830 --> 00:22:13,740
perimeter as bills i have a plug-in that

00:22:10,620 --> 00:22:15,270
lets me name the name the builds and i

00:22:13,740 --> 00:22:18,540
have one that changed change is the

00:22:15,270 --> 00:22:20,280
little green balls right here they're

00:22:18,540 --> 00:22:22,290
normally blue but i don't think that's a

00:22:20,280 --> 00:22:27,690
really great color for this because why

00:22:22,290 --> 00:22:30,690
green is good red is bad so this thing

00:22:27,690 --> 00:22:32,460
is going out building okay it's done so

00:22:30,690 --> 00:22:33,960
the first thing it does it runs the

00:22:32,460 --> 00:22:37,560
simple tests on this because we have

00:22:33,960 --> 00:22:39,600
I've got a couple hundred there's 166

00:22:37,560 --> 00:22:41,730
tests at the end it takes a little while

00:22:39,600 --> 00:22:43,110
because it goes through and bootstrap

00:22:41,730 --> 00:22:44,880
Drupal 7 and does all that good stuff

00:22:43,110 --> 00:22:48,450
but right now it's going through and

00:22:44,880 --> 00:22:49,710
running all the tests so that should it

00:22:48,450 --> 00:22:52,290
actually takes like two minutes to do

00:22:49,710 --> 00:22:53,580
this but it's one of those things that

00:22:52,290 --> 00:22:55,680
you kind of watch and you're like okay

00:22:53,580 --> 00:22:58,559
it's building thats hanging out it's

00:22:55,680 --> 00:22:59,879
doing its thing and you can see all

00:22:58,559 --> 00:23:02,009
the output from the drudge commands

00:22:59,879 --> 00:23:04,860
normally you would see this in the 8th &

00:23:02,009 --> 00:23:12,269
Eggar where you have where you would

00:23:04,860 --> 00:23:14,249
have let's see in this view oh it's slow

00:23:12,269 --> 00:23:16,559
because stuffs happening yeah all the

00:23:14,249 --> 00:23:18,299
output here is displayed in Jenkins real

00:23:16,559 --> 00:23:21,059
time well it's actually not as robust as

00:23:18,299 --> 00:23:23,820
this but and actually we should be able

00:23:21,059 --> 00:23:27,330
to see our new platform has been created

00:23:23,820 --> 00:23:30,360
and our first sight our testing site has

00:23:27,330 --> 00:23:32,399
been moved into it so let's go back over

00:23:30,360 --> 00:23:34,499
here to Jenkins it's still working it's

00:23:32,399 --> 00:23:41,220
still testing hanging out doing its

00:23:34,499 --> 00:23:42,840
thing being Jenkins but then this is one

00:23:41,220 --> 00:23:51,929
of the big things it's it's a lot of

00:23:42,840 --> 00:23:54,509
hurry up and wait and stuff but it's

00:23:51,929 --> 00:23:56,940
just easier yeah it's the same thing I

00:23:54,509 --> 00:23:58,169
have I have another one another one of

00:23:56,940 --> 00:24:00,179
these scripts that I used to use at

00:23:58,169 --> 00:24:01,710
Appalachian that would let me do this at

00:24:00,179 --> 00:24:02,850
all in bash it was just a lot more to

00:24:01,710 --> 00:24:04,919
write you have to do a lot more error

00:24:02,850 --> 00:24:07,799
checking and you have to there's stuff

00:24:04,919 --> 00:24:09,360
you can't do over you know SSH you have

00:24:07,799 --> 00:24:12,119
to go actually go on the box and run it

00:24:09,360 --> 00:24:15,779
as a certain user it's kind of weird so

00:24:12,119 --> 00:24:17,399
this this lets us who they finished so

00:24:15,779 --> 00:24:20,399
this lets us do all this stuff really

00:24:17,399 --> 00:24:22,289
simply so it looks like all the tests

00:24:20,399 --> 00:24:24,720
that pass we have 166 passes zero

00:24:22,289 --> 00:24:26,369
failures it's cleaned up and it's

00:24:24,720 --> 00:24:28,740
actually and it's already started the

00:24:26,369 --> 00:24:31,799
other builds so we're changing open blog

00:24:28,740 --> 00:24:34,649
and we're changing my site so if we come

00:24:31,799 --> 00:24:37,139
over here it's already building and

00:24:34,649 --> 00:24:39,259
Twitter should have already updated so

00:24:37,139 --> 00:24:42,090
it's now building these two jobs and

00:24:39,259 --> 00:24:43,919
because we passed the name of the

00:24:42,090 --> 00:24:47,369
platform along in an argument or in a

00:24:43,919 --> 00:24:50,940
parameter we're going to have hopefully

00:24:47,369 --> 00:24:52,919
this will go to the right thing and yes

00:24:50,940 --> 00:24:54,830
it did so it noticed that the platform

00:24:52,919 --> 00:24:57,149
there and there we go so we have

00:24:54,830 --> 00:25:00,860
deployed code and let's see if this

00:24:57,149 --> 00:25:00,860
changes hopefully it will

00:25:02,360 --> 00:25:07,430
cool so they're here the P is now lower

00:25:04,940 --> 00:25:09,560
case boom that's that's continuous

00:25:07,430 --> 00:25:11,930
integration and that's it's going

00:25:09,560 --> 00:25:13,220
through making a change checking your

00:25:11,930 --> 00:25:15,230
work making sure it still works with

00:25:13,220 --> 00:25:20,390
everything else and then deploying it if

00:25:15,230 --> 00:25:24,950
needs to be two BAM no I lowercase them

00:25:20,390 --> 00:25:27,560
I lowercase the P because I first let

00:25:24,950 --> 00:25:31,330
her yeah it's one of those things but

00:25:27,560 --> 00:25:33,890
yeah so that's that's that that is basic

00:25:31,330 --> 00:25:36,770
basically how to build a continuously

00:25:33,890 --> 00:25:38,240
integrated environment and if you want I

00:25:36,770 --> 00:25:41,300
would please feel free to go grab these

00:25:38,240 --> 00:25:43,090
scripts i'll put a link i'll probably

00:25:41,300 --> 00:25:46,690
tweet it and i'll probably put it on my

00:25:43,090 --> 00:25:48,830
page for the talk and everything and

00:25:46,690 --> 00:25:54,910
let's see what else i have my

00:25:48,830 --> 00:25:56,840
presentation so learning more about this

00:25:54,910 --> 00:25:59,510
these are the basic sites you know

00:25:56,840 --> 00:26:02,210
community eager project jenkins docks at

00:25:59,510 --> 00:26:04,340
fab file get sem but there's like you

00:26:02,210 --> 00:26:06,950
can go to google there's a couple really

00:26:04,340 --> 00:26:08,930
cool reddit some subreddits about you

00:26:06,950 --> 00:26:11,540
know there's programming there's drupal

00:26:08,930 --> 00:26:15,590
and there's all kinds of stuff about you

00:26:11,540 --> 00:26:20,030
know this sort of thing so and googling

00:26:15,590 --> 00:26:21,770
you know IRC on freenode we hang out in

00:26:20,030 --> 00:26:25,370
drupal NC so if you have any questions

00:26:21,770 --> 00:26:26,840
i'll talk about it we're there but yeah

00:26:25,370 --> 00:26:29,090
if you guys have Jerris have any

00:26:26,840 --> 00:26:32,210
questions or anything about what i just

00:26:29,090 --> 00:26:34,720
did and how to do it I know I talk fast

00:26:32,210 --> 00:26:34,720
what's up man

00:26:39,810 --> 00:26:53,290
yes um if in let's see yep so we have a

00:26:51,100 --> 00:26:54,940
full array of test suite or full test

00:26:53,290 --> 00:26:57,610
suite that's going through and checking

00:26:54,940 --> 00:27:00,700
for all this stuff so you have all the

00:26:57,610 --> 00:27:06,760
assertions you have you know making sure

00:27:00,700 --> 00:27:10,030
that the toggle logo is off and yes yeah

00:27:06,760 --> 00:27:18,460
yeah because I'm in let's see where is

00:27:10,030 --> 00:27:20,110
this on this script and the build I'm

00:27:18,460 --> 00:27:22,780
actually passing a variable to the

00:27:20,110 --> 00:27:24,970
fabric command telling it what tests to

00:27:22,780 --> 00:27:27,550
run and you can actually run multiple

00:27:24,970 --> 00:27:31,210
ones and you have options is there's

00:27:27,550 --> 00:27:32,500
like a dash dash all and there's

00:27:31,210 --> 00:27:34,690
something else where you can say you

00:27:32,500 --> 00:27:41,200
know which module do you want to run so

00:27:34,690 --> 00:27:43,750
i can say i have let's say test open

00:27:41,200 --> 00:27:47,890
blog content default settings i could

00:27:43,750 --> 00:27:50,890
say drush run tests dash dash you are i

00:27:47,890 --> 00:27:54,820
give it give it a valid no valid name

00:27:50,890 --> 00:27:56,920
and then I think it's dash dash module

00:27:54,820 --> 00:27:58,480
something and then just say I want to

00:27:56,920 --> 00:28:00,460
run tests open blog content of all

00:27:58,480 --> 00:28:03,610
settings or instead of running all the

00:28:00,460 --> 00:28:05,920
tests on your application so it's pretty

00:28:03,610 --> 00:28:08,020
cool and simple tests because it's built

00:28:05,920 --> 00:28:10,420
in Drupal 7 so much easier than dealing

00:28:08,020 --> 00:28:12,820
with Drupal 6 because Drupal 6 you have

00:28:10,420 --> 00:28:15,280
to build a build a platform then patch

00:28:12,820 --> 00:28:20,080
it and do all this other awful stuff and

00:28:15,280 --> 00:28:23,430
it's just so much easier so yep it's

00:28:20,080 --> 00:28:23,430
that so anything else

00:28:31,740 --> 00:28:36,299
yes

00:28:33,779 --> 00:28:37,919
no I tend to leave those around for at

00:28:36,299 --> 00:28:39,029
least a couple days just in case

00:28:37,919 --> 00:28:41,909
something happens I need to go back

00:28:39,029 --> 00:28:43,979
because we we try at Appalachian we

00:28:41,909 --> 00:28:45,509
leave it around for a week just so we

00:28:43,979 --> 00:28:49,109
have the time to go back and fix any

00:28:45,509 --> 00:28:50,669
changes so if like when they updated

00:28:49,109 --> 00:28:52,349
services to 3x and we have stuff that

00:28:50,669 --> 00:28:54,570
depends on 2x I didn't realize it at the

00:28:52,349 --> 00:28:57,840
time so I updated everything broke all

00:28:54,570 --> 00:28:59,429
the stuff rolled back and it lets you do

00:28:57,840 --> 00:29:01,830
that very easily agar is super cool

00:28:59,429 --> 00:29:04,889
about that it generates a backup before

00:29:01,830 --> 00:29:07,499
it does anything it goes through and

00:29:04,889 --> 00:29:10,979
make sure all the modules match because

00:29:07,499 --> 00:29:13,169
so I can go let's break something let's

00:29:10,979 --> 00:29:17,129
see what happens let's try migrating

00:29:13,169 --> 00:29:21,029
this to a platform that may not be able

00:29:17,129 --> 00:29:24,899
to migrate to Oh another thing drush

00:29:21,029 --> 00:29:26,700
lets you lets you lock your platforms so

00:29:24,899 --> 00:29:28,979
walking is a good way to make sure no

00:29:26,700 --> 00:29:31,259
one breaks stuff no one adds or delete

00:29:28,979 --> 00:29:34,080
stuff while you're while it's running so

00:29:31,259 --> 00:29:35,789
we lock everything but it's going to go

00:29:34,080 --> 00:29:37,349
through and unlock this end you can try

00:29:35,789 --> 00:29:39,359
to migrate stuff to different platforms

00:29:37,349 --> 00:29:41,309
and if this one doesn't match what it is

00:29:39,359 --> 00:29:43,259
it'll tell you give you warnings it'll

00:29:41,309 --> 00:29:45,739
say you know this module and this module

00:29:43,259 --> 00:29:50,460
aren't compatible you need to fix that

00:29:45,739 --> 00:29:55,129
sometimes in later versions so as soon

00:29:50,460 --> 00:29:55,129
as this runs just take a minute

00:30:02,719 --> 00:30:10,710
yeah we have I have let's see I I

00:30:08,219 --> 00:30:14,369
basically use find and then say for

00:30:10,710 --> 00:30:16,469
every thing in the the backups folder

00:30:14,369 --> 00:30:17,789
older than eight days because we have on

00:30:16,469 --> 00:30:20,879
our servers we keep a day's worth of

00:30:17,789 --> 00:30:22,080
stuff we keep 30 days on tape so i just

00:30:20,879 --> 00:30:23,429
have a fine script that goes into late

00:30:22,080 --> 00:30:25,259
so all the back all the stuff that's old

00:30:23,429 --> 00:30:26,879
that doesn't need to be there a

00:30:25,259 --> 00:30:28,950
goes through and cleans up the platforms

00:30:26,879 --> 00:30:31,529
to so if i delete one from inside of a

00:30:28,950 --> 00:30:34,169
gir it should go through the file system

00:30:31,529 --> 00:30:36,539
and clean all that up so let's should

00:30:34,169 --> 00:30:40,049
yeah sometimes if you don't if you

00:30:36,539 --> 00:30:41,549
create custom custom platforms and give

00:30:40,049 --> 00:30:43,979
it a different name so if you use like

00:30:41,549 --> 00:30:45,960
dashes instead of underscores it will

00:30:43,979 --> 00:30:47,190
create two different contexts for it it

00:30:45,960 --> 00:30:48,839
only reference the one that's right and

00:30:47,190 --> 00:30:50,099
it's just a mess when you try to clean

00:30:48,839 --> 00:30:51,539
it up because that's the first thing I

00:30:50,099 --> 00:30:54,629
ran into when I was first playing around

00:30:51,539 --> 00:30:58,859
with a gir let's see if we can migrate

00:30:54,629 --> 00:31:02,009
this no it still won't okay so it's

00:30:58,859 --> 00:31:05,039
pretty good at realizing you know this

00:31:02,009 --> 00:31:06,719
doesn't have the open blog profile

00:31:05,039 --> 00:31:08,190
available to it so I'm not going to

00:31:06,719 --> 00:31:12,139
build it so eager is pretty smart about

00:31:08,190 --> 00:31:21,019
that so it's all kinds of cool stuff

00:31:12,139 --> 00:31:21,019
anything else yeah

00:31:26,820 --> 00:31:31,870
we have we have implemented something we

00:31:29,440 --> 00:31:35,490
call update Tuesday every Tuesday

00:31:31,870 --> 00:31:38,110
updates go out automatically so we have

00:31:35,490 --> 00:31:40,390
we do a code freeze on either thursday

00:31:38,110 --> 00:31:42,540
or friday that's when we start testing

00:31:40,390 --> 00:31:45,250
and then monday we do a final test

00:31:42,540 --> 00:31:46,660
tuesday we launched it live and then it

00:31:45,250 --> 00:31:48,850
kind of psycho kind of we have a couple

00:31:46,660 --> 00:31:50,710
days to fix stuff and then the cycle

00:31:48,850 --> 00:31:55,750
starts all over again it's pretty cool

00:31:50,710 --> 00:31:57,790
it's sort of the way that a long a while

00:31:55,750 --> 00:31:59,920
ago i read a blog post that it either

00:31:57,790 --> 00:32:01,780
facebook or Etsy did where they were

00:31:59,920 --> 00:32:03,670
talking about their deployment process

00:32:01,780 --> 00:32:05,350
and they're talking about how you know

00:32:03,670 --> 00:32:08,050
they have this full on schedule thing

00:32:05,350 --> 00:32:09,400
that you know every Tuesday all the

00:32:08,050 --> 00:32:13,140
updates are all the updates are

00:32:09,400 --> 00:32:15,250
scheduled to go out some sites some

00:32:13,140 --> 00:32:16,990
apparently like Facebook is individual

00:32:15,250 --> 00:32:19,900
instances of a profile I don't know how

00:32:16,990 --> 00:32:22,060
they built it but it's just the way that

00:32:19,900 --> 00:32:23,530
they push their stuff out it's better to

00:32:22,060 --> 00:32:24,850
schedule it and I think that if you're

00:32:23,530 --> 00:32:26,950
going to do this in any kind of major

00:32:24,850 --> 00:32:28,450
production environment you do need to

00:32:26,950 --> 00:32:30,880
schedule it you need to need to say you

00:32:28,450 --> 00:32:32,260
know this is when the code this is when

00:32:30,880 --> 00:32:33,580
we're going to freeze our code base and

00:32:32,260 --> 00:32:35,890
this is when it's going to go out and

00:32:33,580 --> 00:32:38,260
then anything made after this date is

00:32:35,890 --> 00:32:41,200
going to go out the next week so a lot

00:32:38,260 --> 00:32:46,060
of it's a lot of it some managing how

00:32:41,200 --> 00:32:51,030
you how people work with your stuff it's

00:32:46,060 --> 00:32:51,030
pretty cool concept so yeah

00:32:51,620 --> 00:32:56,809
anything else I know I've kind of went

00:32:54,110 --> 00:32:59,470
through this really fast and it's like

00:32:56,809 --> 00:32:59,470
20 minutes ago

00:33:04,700 --> 00:33:10,889
well the main the main thing you have to

00:33:07,950 --> 00:33:12,749
worry about is separating Jenkins in

00:33:10,889 --> 00:33:14,190
your front ends you don't want to run

00:33:12,749 --> 00:33:18,029
them on the same box because Jenkins is

00:33:14,190 --> 00:33:21,840
pretty memory intensive I mean I'm

00:33:18,029 --> 00:33:23,460
viewing this on a 512 Lin node and it

00:33:21,840 --> 00:33:25,649
works perfectly I host a couple Drupal 7

00:33:23,460 --> 00:33:29,039
sites and a couple Drupal 6 which are

00:33:25,649 --> 00:33:31,139
kind of weird I know the the VPS is that

00:33:29,039 --> 00:33:32,129
the hot Drupal do does can support it

00:33:31,139 --> 00:33:36,029
really well he does a lot of cool stuff

00:33:32,129 --> 00:33:38,429
I mean as long as you're splitting up

00:33:36,029 --> 00:33:41,879
your main processes I mean ideally you

00:33:38,429 --> 00:33:43,830
would have Jenkins box a varnish front

00:33:41,879 --> 00:33:46,830
end or whatever whatever caching server

00:33:43,830 --> 00:33:48,629
using apache and then another box for

00:33:46,830 --> 00:33:49,979
your my sequel so all of your major

00:33:48,629 --> 00:33:52,019
processes are split up so you're not

00:33:49,979 --> 00:33:53,129
worrying about disk i/o collision and

00:33:52,019 --> 00:33:56,639
not worrying about you know having to

00:33:53,129 --> 00:33:57,989
share resources on a single box now some

00:33:56,639 --> 00:34:00,149
things the way things are set up where I

00:33:57,989 --> 00:34:03,149
work it's not conducive to that

00:34:00,149 --> 00:34:04,529
environment but ideally you would really

00:34:03,149 --> 00:34:06,210
want to kind of split those things up

00:34:04,529 --> 00:34:09,089
because then you can start you could

00:34:06,210 --> 00:34:11,159
have your front ends all attached to NFS

00:34:09,089 --> 00:34:13,139
share or something and then you can

00:34:11,159 --> 00:34:14,159
start load balancing them and you can

00:34:13,139 --> 00:34:17,369
kind of build out this in this

00:34:14,159 --> 00:34:19,500
environment and I know in like eager to

00:34:17,369 --> 00:34:22,290
and later versions they're working on

00:34:19,500 --> 00:34:23,369
making multi-sim multi like server

00:34:22,290 --> 00:34:25,109
clusters or what I think what they're

00:34:23,369 --> 00:34:26,909
called they're making that a lot more

00:34:25,109 --> 00:34:29,879
easier to do so you basically just point

00:34:26,909 --> 00:34:32,040
a bunch of machines I mean this way it's

00:34:29,879 --> 00:34:33,659
just awesome but you can just basically

00:34:32,040 --> 00:34:35,190
point it at a machine and then it goes

00:34:33,659 --> 00:34:38,010
off and does its own same way the remote

00:34:35,190 --> 00:34:39,629
egger servers like you have one instance

00:34:38,010 --> 00:34:41,700
and then you just say you know as long

00:34:39,629 --> 00:34:44,849
as it can ssh and you open up a firewall

00:34:41,700 --> 00:34:47,520
a firewall hole and you open up my

00:34:44,849 --> 00:34:49,049
sequel to be able to connect to it you

00:34:47,520 --> 00:34:50,790
can do anything it's super cool it's

00:34:49,049 --> 00:34:53,730
super fast and you can manage multiple

00:34:50,790 --> 00:34:58,770
servers from one so let me see I can

00:34:53,730 --> 00:35:01,440
just kind of show you so let's see if

00:34:58,770 --> 00:35:05,130
this is I may not be able to get to this

00:35:01,440 --> 00:35:08,670
not on if I'm not oh I can so this is

00:35:05,130 --> 00:35:09,780
our main production instance for ASU and

00:35:08,670 --> 00:35:10,799
there's going to be a bunch of stuff in

00:35:09,780 --> 00:35:14,829
here because I haven't cleaned it out in

00:35:10,799 --> 00:35:16,989
a while but as you can see 264

00:35:14,829 --> 00:35:20,289
so this sort of whole thing runs on that

00:35:16,989 --> 00:35:22,660
but with remote servers we have our dev

00:35:20,289 --> 00:35:26,410
environment which is separate from

00:35:22,660 --> 00:35:29,380
everything else and what you can do is

00:35:26,410 --> 00:35:31,599
just say you know what IP address what

00:35:29,380 --> 00:35:34,539
port is it running you know n in here I

00:35:31,599 --> 00:35:37,779
believe you give it a hostname in an IP

00:35:34,539 --> 00:35:40,239
address so that's as simple as it is to

00:35:37,779 --> 00:35:42,430
build these things and they kind of have

00:35:40,239 --> 00:35:43,779
a fully clustered environment and it's

00:35:42,430 --> 00:35:50,009
all controlled from this one acre

00:35:43,779 --> 00:35:52,059
instance so that's that and that's um

00:35:50,009 --> 00:36:05,380
it's pretty pretty much my gotten you

00:35:52,059 --> 00:36:07,359
had a question didn't you you really

00:36:05,380 --> 00:36:09,099
don't experience any downtime I mean

00:36:07,359 --> 00:36:10,900
there's a couple seconds when it puts

00:36:09,099 --> 00:36:13,390
the site into maintenance mode and you

00:36:10,900 --> 00:36:14,319
can tell it not to but it's your normal

00:36:13,390 --> 00:36:16,749
amount of downtime when you're running

00:36:14,319 --> 00:36:19,299
updates and stuff but the thing is it

00:36:16,749 --> 00:36:21,549
takes time and I have seen my servers

00:36:19,299 --> 00:36:23,650
just the load average this is like 30

00:36:21,549 --> 00:36:26,469
but I'm doing these big massive

00:36:23,650 --> 00:36:28,630
migrations I mean we have 185 sites on

00:36:26,469 --> 00:36:30,569
one platform so you're trying to move

00:36:28,630 --> 00:36:33,309
all those around and it gets kind of

00:36:30,569 --> 00:36:35,650
kind of takes a while and it took like I

00:36:33,309 --> 00:36:37,420
took like six hours one day to do it

00:36:35,650 --> 00:36:39,819
just sitting there watching is like okay

00:36:37,420 --> 00:36:41,829
and occasionally stuff will fail like

00:36:39,819 --> 00:36:43,269
you'll have really big sites that are

00:36:41,829 --> 00:36:44,440
just be like oh I'm gonna want to do

00:36:43,269 --> 00:36:46,989
this right now we have a couple that are

00:36:44,440 --> 00:36:49,299
about two or three gigs and you know

00:36:46,989 --> 00:36:51,249
that's because other stuff and people

00:36:49,299 --> 00:36:52,749
want to put files everywhere because

00:36:51,249 --> 00:36:55,119
it's an academic institution you have to

00:36:52,749 --> 00:36:56,529
be able to you know put your work up and

00:36:55,119 --> 00:36:57,969
share it so we deal with that we deal

00:36:56,529 --> 00:37:00,459
with a lot of really large sites and it

00:36:57,969 --> 00:37:03,039
takes a while and some fail and the best

00:37:00,459 --> 00:37:04,779
part about this if it fails it doesn't

00:37:03,039 --> 00:37:07,660
stop serving the original site so it'll

00:37:04,779 --> 00:37:12,690
try to migrate but it'll go back super

00:37:07,660 --> 00:37:15,809
cool makes life so much easier so yeah

00:37:12,690 --> 00:37:15,809
anything else

00:37:16,359 --> 00:37:23,660
awesome thank you guys it's been great

00:37:20,290 --> 00:37:27,410
if you have any questions I'm on I'm on

00:37:23,660 --> 00:37:29,059
twitter I'm not Zach and i'm in i'm on

00:37:27,410 --> 00:37:31,339
Drupal is not Zach Drupal at organs not

00:37:29,059 --> 00:37:32,750
Zach and if you want to try open blog or

00:37:31,339 --> 00:37:36,589
commit anything let me know and i'll be

00:37:32,750 --> 00:37:39,220
happy to take some patches and such so i

00:37:36,589 --> 00:37:39,220
appreciate it guys

00:38:09,550 --> 00:38:11,610
you

00:38:14,790 --> 00:38:19,869
when we created asterisk over a decade

00:38:17,500 --> 00:38:21,819
ago we could not have imagined that

00:38:19,869 --> 00:38:24,040
asterisk would not only become the most

00:38:21,819 --> 00:38:26,170
widely adopted open source communication

00:38:24,040 --> 00:38:28,210
software on the planet but that it would

00:38:26,170 --> 00:38:30,730
impact the entire industry in the way

00:38:28,210 --> 00:38:32,710
that it has today asterisk has found its

00:38:30,730 --> 00:38:35,349
way in the more than 170 countries and

00:38:32,710 --> 00:38:37,300
virtually every fortune 1000 company the

00:38:35,349 --> 00:38:39,400
success of asterisk has enabled a

00:38:37,300 --> 00:38:40,780
transition of power from the hands of

00:38:39,400 --> 00:38:43,059
the traditional proprietary phone

00:38:40,780 --> 00:38:45,460
vendors into the hands of the users and

00:38:43,059 --> 00:38:47,380
administrators of phone systems using

00:38:45,460 --> 00:38:48,609
this power our customers have created

00:38:47,380 --> 00:38:50,559
all sorts of business changing

00:38:48,609 --> 00:38:52,420
applications from small office phone

00:38:50,559 --> 00:38:54,940
systems to mission-critical call centres

00:38:52,420 --> 00:38:56,530
to international carrier networks in

00:38:54,940 --> 00:38:58,329
fact there's even an entire country

00:38:56,530 --> 00:39:00,910
those communications infrastructure runs

00:38:58,329 --> 00:39:02,829
on esters the gym has always been about

00:39:00,910 --> 00:39:04,569
creating technology that expands

00:39:02,829 --> 00:39:06,730
communications capabilities in ways that

00:39:04,569 --> 00:39:07,930
we could never have imagined and that's

00:39:06,730 --> 00:39:10,300
part of what's game-changing about

00:39:07,930 --> 00:39:13,000
Digium today we're doing it again this

00:39:10,300 --> 00:39:15,099
time by introducing a new family of HD

00:39:13,000 --> 00:39:17,230
IP phones that extends control of the

00:39:15,099 --> 00:39:18,970
user all the way to the desktop the

00:39:17,230 --> 00:39:20,680
launch of these new products represents

00:39:18,970 --> 00:39:22,690
the next phase indigenous history of

00:39:20,680 --> 00:39:25,180
innovation these are the first and only

00:39:22,690 --> 00:39:26,890
IP phones designed to fully leverage the

00:39:25,180 --> 00:39:28,450
power of esters when we first discussed

00:39:26,890 --> 00:39:30,490
our expectations for building a family

00:39:28,450 --> 00:39:32,650
of phones for use with asterisk our

00:39:30,490 --> 00:39:34,390
requirements were pretty simple we asked

00:39:32,650 --> 00:39:36,010
the team to build the phones such that

00:39:34,390 --> 00:39:38,200
they were easy to install integrate

00:39:36,010 --> 00:39:40,059
provision and use I think you'll soon

00:39:38,200 --> 00:39:42,609
agree our engineers have delivered on

00:39:40,059 --> 00:39:44,260
that goal user feedback is validating

00:39:42,609 --> 00:39:46,359
that when it comes to operation with

00:39:44,260 --> 00:39:48,790
astro space systems including our own

00:39:46,359 --> 00:39:51,369
Switchvox based product these are the

00:39:48,790 --> 00:39:52,660
easiest to use best integrated most

00:39:51,369 --> 00:39:55,270
interoperable products on the market

00:39:52,660 --> 00:39:57,240
today the digitally of phones will

00:39:55,270 --> 00:39:59,349
initially include three IP des hommes

00:39:57,240 --> 00:40:01,240
uniquely designed to complement any

00:39:59,349 --> 00:40:03,130
asterisk or Switchvox based solution

00:40:01,240 --> 00:40:05,799
these phones are different for a number

00:40:03,130 --> 00:40:08,440
of reasons first there is clue sively

00:40:05,799 --> 00:40:09,880
designed for use with esters secondly

00:40:08,440 --> 00:40:11,490
we've made it really easy to

00:40:09,880 --> 00:40:13,869
autodiscover and provision the phones

00:40:11,490 --> 00:40:15,970
next we've made it easy for the phones

00:40:13,869 --> 00:40:17,920
to access information inside of asterisk

00:40:15,970 --> 00:40:18,800
allowing tight coupling between an

00:40:17,920 --> 00:40:21,470
application

00:40:18,800 --> 00:40:23,660
the phone additionally we've created an

00:40:21,470 --> 00:40:25,760
applications engine that allows users

00:40:23,660 --> 00:40:29,000
and developers to create and run their

00:40:25,760 --> 00:40:30,770
own apps on the phone and finally we've

00:40:29,000 --> 00:40:32,720
done all of this at a very compelling

00:40:30,770 --> 00:40:34,400
price point at Digium we're always

00:40:32,720 --> 00:40:36,500
thinking of ways to give our customers

00:40:34,400 --> 00:40:39,080
the best value in business phone systems

00:40:36,500 --> 00:40:40,610
and also give them the power to create

00:40:39,080 --> 00:40:42,770
their own solutions or any

00:40:40,610 --> 00:40:44,510
communications challenge well continue

00:40:42,770 --> 00:40:45,950
to push the boundaries not only to make

00:40:44,510 --> 00:40:47,990
Astra's cooler bastard more

00:40:45,950 --> 00:40:49,730
technologically feature-rich but to make

00:40:47,990 --> 00:40:52,250
asterisk and communications even easier

00:40:49,730 --> 00:40:55,780
and together we'll change the way the

00:40:52,250 --> 00:40:55,780
world communicates again

00:41:06,180 --> 00:41:13,000
how's that sigh every way this is the

00:41:09,790 --> 00:41:15,160
way to better utilize all your resources

00:41:13,000 --> 00:41:18,610
and it makes managing all your resources

00:41:15,160 --> 00:41:22,440
pretty easy all of the innovation is

00:41:18,610 --> 00:41:25,960
happening in open source the

00:41:22,440 --> 00:41:27,790
collaborative nature and of the you know

00:41:25,960 --> 00:41:29,890
of the community and the speed at which

00:41:27,790 --> 00:41:31,869
these are these you know these these

00:41:29,890 --> 00:41:34,180
deficiencies these bugs are getting

00:41:31,869 --> 00:41:37,030
discovered and then fixed is everything

00:41:34,180 --> 00:41:40,030
that really shows the power of the of

00:41:37,030 --> 00:41:42,480
the open source community it is global

00:41:40,030 --> 00:41:46,030
and it's definitely because of the users

00:41:42,480 --> 00:41:51,910
community people are extremely friendly

00:41:46,030 --> 00:41:53,740
and always ready to help if you go an

00:41:51,910 --> 00:41:55,869
entire see any day you'll see these guys

00:41:53,740 --> 00:41:58,570
helping each other out and they're all

00:41:55,869 --> 00:42:00,250
doing it like in a selfless manner the

00:41:58,570 --> 00:42:03,270
product is transparent for everyone

00:42:00,250 --> 00:42:06,460
everyone can look at the code base

00:42:03,270 --> 00:42:08,670
everyone can see how CloudStack is being

00:42:06,460 --> 00:42:14,200
built nothing nothing is proprietary

00:42:08,670 --> 00:42:16,780
everything is open in many ways it's

00:42:14,200 --> 00:42:21,280
absolutely vital to the the unborn

00:42:16,780 --> 00:42:25,480
health card stack the most exciting

00:42:21,280 --> 00:42:28,300
event in recent memory for me was our

00:42:25,480 --> 00:42:30,970
first developer boot camp

00:42:28,300 --> 00:42:33,610
and our call gave people I gave me two

00:42:30,970 --> 00:42:37,570
weeks notice to come attend I was

00:42:33,610 --> 00:42:41,740
expecting 25 or 30 people so we ended up

00:42:37,570 --> 00:42:44,590
with 87 people and had to go get more

00:42:41,740 --> 00:42:47,110
chairs in the room twice everything

00:42:44,590 --> 00:42:50,350
within cloud computing is commodity and

00:42:47,110 --> 00:42:53,440
is open source and so I don't think that

00:42:50,350 --> 00:42:55,180
you will you'll see anywhere where open

00:42:53,440 --> 00:42:58,210
source is not pervasive in cloud

00:42:55,180 --> 00:43:00,940
computing and so i think it's i think

00:42:58,210 --> 00:43:02,290
it's an assumption i think when you talk

00:43:00,940 --> 00:43:06,000
about cloud computing you're really

00:43:02,290 --> 00:43:06,000
talking about a source cloud computing

00:43:06,300 --> 00:43:12,340
cloud sac is a robust solution for large

00:43:09,580 --> 00:43:14,740
deployments you'll have dozens of data

00:43:12,340 --> 00:43:18,760
centers and thousands of servers in each

00:43:14,740 --> 00:43:22,030
data centers these hardware is going to

00:43:18,760 --> 00:43:25,240
fail and CloudStack is designed to

00:43:22,030 --> 00:43:27,700
handle number one that mass scale number

00:43:25,240 --> 00:43:30,430
two it's designed to handle the failure

00:43:27,700 --> 00:43:32,980
that inevitably happens in large

00:43:30,430 --> 00:43:36,520
deployments started working on college

00:43:32,980 --> 00:43:39,850
attack over four years ago and it was

00:43:36,520 --> 00:43:42,550
the original set of people working on it

00:43:39,850 --> 00:43:46,660
had a background of delivering software

00:43:42,550 --> 00:43:50,890
telcos and service providers lots of QA

00:43:46,660 --> 00:43:54,490
lots of users actually using it high

00:43:50,890 --> 00:43:57,580
availability is the key feature multiple

00:43:54,490 --> 00:43:59,590
hypervisors support different network

00:43:57,580 --> 00:44:02,290
models you can pick up whatever suits

00:43:59,590 --> 00:44:04,540
you better while step management server

00:44:02,290 --> 00:44:08,230
can be deployed in different physical

00:44:04,540 --> 00:44:09,880
machines it definitely has a huge

00:44:08,230 --> 00:44:14,890
footprint it's being deployed everywhere

00:44:09,880 --> 00:44:17,470
there's a major movie studio that they

00:44:14,890 --> 00:44:20,770
were using cloudstack they were using it

00:44:17,470 --> 00:44:22,720
to transcode video and i thought that

00:44:20,770 --> 00:44:24,370
was terribly fascinating what i found

00:44:22,720 --> 00:44:27,640
more fascinating is what they did during

00:44:24,370 --> 00:44:30,430
lunch where they would spin up you know

00:44:27,640 --> 00:44:31,810
50 or 60 game servers then as soon as

00:44:30,430 --> 00:44:33,730
lunch was over they would destroy all

00:44:31,810 --> 00:44:37,870
the instances and go back to doing real

00:44:33,730 --> 00:44:39,190
work CloudStack is vast it touches so

00:44:37,870 --> 00:44:41,260
many different aspects and there's no

00:44:39,190 --> 00:44:43,660
one person that's kind of like a master

00:44:41,260 --> 00:44:47,770
of all those realms I think clouds stack

00:44:43,660 --> 00:44:49,990
as a project is going to be one of the

00:44:47,770 --> 00:44:54,040
leaders simply because it's some of the

00:44:49,990 --> 00:44:59,470
most feature fallen and and robust

00:44:54,040 --> 00:45:02,370
platforms out they were Adam senior

00:44:59,470 --> 00:45:02,370
living through the clouds dag

00:45:15,190 --> 00:45:17,250

YouTube URL: https://www.youtube.com/watch?v=hcQ8EaPMolI


