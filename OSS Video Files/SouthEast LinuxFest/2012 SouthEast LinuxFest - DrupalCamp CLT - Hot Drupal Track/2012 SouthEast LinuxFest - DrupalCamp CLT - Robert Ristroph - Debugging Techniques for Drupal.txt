Title: 2012 SouthEast LinuxFest - DrupalCamp CLT - Robert Ristroph - Debugging Techniques for Drupal
Publication date: 2014-02-20
Playlist: 2012 SouthEast LinuxFest - DrupalCamp CLT - Hot Drupal Track
Description: 
	2012 SouthEast LinuxFest
DrupalCamp Charlotte
Robert Ristroph
Debugging Techniques for Drupal
Captions: 
	00:00:00,000 --> 00:00:05,279
the following presentation was recorded

00:00:02,490 --> 00:00:08,040
the 2012 southeast linux fest in

00:00:05,279 --> 00:00:10,410
charlotte north carolina it is licensed

00:00:08,040 --> 00:00:12,090
under a creative commons license for

00:00:10,410 --> 00:00:16,859
more information about the southeast

00:00:12,090 --> 00:00:19,230
linux fest visit www.lend expense org

00:00:16,859 --> 00:00:21,320
the southeast linux fest would like to

00:00:19,230 --> 00:00:23,279
thank the following diamond sponsors in

00:00:21,320 --> 00:00:28,050
2012 for helping make these videos

00:00:23,279 --> 00:00:29,849
possible so my name is robert rest Rafa

00:00:28,050 --> 00:00:34,530
I work for four kitchens from Austin

00:00:29,849 --> 00:00:37,440
Texas I have a lot of experience and

00:00:34,530 --> 00:00:38,790
finding bugs most of them my own not

00:00:37,440 --> 00:00:42,890
just in Drupal but in lots of other

00:00:38,790 --> 00:00:45,600
systems i accumulated a good decade of

00:00:42,890 --> 00:00:49,460
programming and debugging my own

00:00:45,600 --> 00:00:52,350
problems before getting into Drupal

00:00:49,460 --> 00:00:53,879
these slides are I already put them

00:00:52,350 --> 00:00:56,789
online if you go to the drupalcamp

00:00:53,879 --> 00:01:00,059
charlotte website and just find my

00:00:56,789 --> 00:01:03,780
session they're attached there if i put

00:01:00,059 --> 00:01:04,890
both the PDF and no DP and if you want

00:01:03,780 --> 00:01:06,680
to borrow some of these slides for your

00:01:04,890 --> 00:01:10,140
own presentations that's cool if you

00:01:06,680 --> 00:01:12,450
want to email me for the source of

00:01:10,140 --> 00:01:19,080
anything in them or challenge me any

00:01:12,450 --> 00:01:20,880
point in them that's fine too so here's

00:01:19,080 --> 00:01:23,430
here's roughly what I want to cover in

00:01:20,880 --> 00:01:26,460
this talk I'm going to talk a little bit

00:01:23,430 --> 00:01:28,500
about why debugging is important why

00:01:26,460 --> 00:01:30,210
like it's kind of worthy of your

00:01:28,500 --> 00:01:33,360
attention as like a separate subject

00:01:30,210 --> 00:01:37,439
from just development and so on and then

00:01:33,360 --> 00:01:40,049
and then I'm going to kind of kind of

00:01:37,439 --> 00:01:41,790
repeatedly beat this point that you can

00:01:40,049 --> 00:01:44,430
follow this sort of process of debugging

00:01:41,790 --> 00:01:46,829
of sort of dividing and conquering by

00:01:44,430 --> 00:01:49,409
thinking up little tests that and

00:01:46,829 --> 00:01:53,520
thinking ahead of time when you when you

00:01:49,409 --> 00:01:55,770
imagine the test like what the to what

00:01:53,520 --> 00:01:57,600
different results would mean it and then

00:01:55,770 --> 00:02:01,409
looking for doing the test looking for

00:01:57,600 --> 00:02:03,030
the results and then sort of making sure

00:02:01,409 --> 00:02:04,829
you undo anything you did to your

00:02:03,030 --> 00:02:07,290
environment like kind of start clean and

00:02:04,829 --> 00:02:09,239
do another test and then in particularly

00:02:07,290 --> 00:02:12,739
if you sort of try to divide and conquer

00:02:09,239 --> 00:02:12,739
so you narrow down where the bug maybe

00:02:12,790 --> 00:02:17,950
and that's that's kind of roughly what

00:02:15,420 --> 00:02:19,689
they sometimes put in high school

00:02:17,950 --> 00:02:22,780
science textbooks and so on as the

00:02:19,689 --> 00:02:24,189
scientific method which is kind of where

00:02:22,780 --> 00:02:26,709
I stole the terminology from with

00:02:24,189 --> 00:02:29,200
hypothesize and test repeat and so on

00:02:26,709 --> 00:02:32,950
and then I'm going to run through sort

00:02:29,200 --> 00:02:35,349
of like some initial quick things to

00:02:32,950 --> 00:02:38,409
check sort of like debugging tips I find

00:02:35,349 --> 00:02:40,870
that this is less useful like the the

00:02:38,409 --> 00:02:44,349
ideas of what are the common bugs tends

00:02:40,870 --> 00:02:46,599
to change over time and so just like

00:02:44,349 --> 00:02:48,989
memorizing the ten most common bugs

00:02:46,599 --> 00:02:53,079
doesn't like help you vary as much as

00:02:48,989 --> 00:02:55,689
you might hope this is a quote that is

00:02:53,079 --> 00:02:57,790
from Maurice Wilkes who was one of the

00:02:55,689 --> 00:02:59,950
first people to do any stored-program

00:02:57,790 --> 00:03:01,480
computing at all he was working on

00:02:59,950 --> 00:03:04,720
machines that have been used to break

00:03:01,480 --> 00:03:06,669
German codes in World War two that were

00:03:04,720 --> 00:03:09,609
then sort of made into paper tape based

00:03:06,669 --> 00:03:11,349
computers and he would punch these tapes

00:03:09,609 --> 00:03:13,000
in his office and have to run down this

00:03:11,349 --> 00:03:15,340
long set of stairs to the basement where

00:03:13,000 --> 00:03:17,379
the machine was and in one of his

00:03:15,340 --> 00:03:19,569
autobiographies I think has more than

00:03:17,379 --> 00:03:21,489
one he says as soon as we started

00:03:19,569 --> 00:03:23,680
programming we found to our surprise it

00:03:21,489 --> 00:03:26,319
wasn't as easy to get programs right as

00:03:23,680 --> 00:03:28,720
we had thought debugging had to be

00:03:26,319 --> 00:03:30,459
discovered I can remember the exact

00:03:28,720 --> 00:03:32,290
instant when I realized that a large

00:03:30,459 --> 00:03:34,599
part of my life from then on who's going

00:03:32,290 --> 00:03:38,709
to be spent in finding mistakes in my

00:03:34,599 --> 00:03:41,169
own programs and I think that if you

00:03:38,709 --> 00:03:42,760
could like set up one of those little

00:03:41,169 --> 00:03:44,260
things we like to take a screenshot of

00:03:42,760 --> 00:03:45,489
your computer every five minutes and

00:03:44,260 --> 00:03:47,530
then reviewed at the end of the day or

00:03:45,489 --> 00:03:50,290
watch yourself on a video tape and look

00:03:47,530 --> 00:03:54,190
at what you actually do you actually

00:03:50,290 --> 00:03:55,329
spend a lot of of your time we probably

00:03:54,190 --> 00:03:56,979
find you spend a lot of more your time

00:03:55,329 --> 00:03:59,799
doing stuff as project management type

00:03:56,979 --> 00:04:01,329
stuff than you really believe but out of

00:03:59,799 --> 00:04:03,579
development and stuff you spend a lot of

00:04:01,329 --> 00:04:05,260
your time just sort of figuring

00:04:03,579 --> 00:04:07,659
something out and narrowing it down and

00:04:05,260 --> 00:04:11,049
and essentially debugging something and

00:04:07,659 --> 00:04:12,400
then once you get in where you sort of

00:04:11,049 --> 00:04:15,370
know what you're developing and writing

00:04:12,400 --> 00:04:17,979
that process is often much more much

00:04:15,370 --> 00:04:19,269
more painless compared to debugging I

00:04:17,979 --> 00:04:20,859
think if you could sort of watch

00:04:19,269 --> 00:04:23,080
yourself for a week you realize that I

00:04:20,859 --> 00:04:24,880
spend a lot of my time debugging if I

00:04:23,080 --> 00:04:27,450
was twice as good at it I get a lot of

00:04:24,880 --> 00:04:27,450
hours back

00:04:28,170 --> 00:04:33,670
I'd like to sort of emphasize like what

00:04:30,610 --> 00:04:35,260
i mean by debugging a lot of times if

00:04:33,670 --> 00:04:37,270
you look up like guides to debugging or

00:04:35,260 --> 00:04:39,460
whatever they tell you things like use

00:04:37,270 --> 00:04:42,400
an IDE that has syntax highlighting and

00:04:39,460 --> 00:04:46,120
things like that and I don't mean just

00:04:42,400 --> 00:04:48,820
sort of better development practices and

00:04:46,120 --> 00:04:51,400
I I don't mean that oh we made the

00:04:48,820 --> 00:04:53,680
website and the customer came back and

00:04:51,400 --> 00:04:56,080
said well actually we want this page to

00:04:53,680 --> 00:04:57,940
be viewable by anonymous users that's

00:04:56,080 --> 00:04:59,560
just the customer changing things are

00:04:57,940 --> 00:05:03,940
you getting a clearer specification

00:04:59,560 --> 00:05:05,500
making changes right and even like once

00:05:03,940 --> 00:05:08,650
you've track down a bug and you know

00:05:05,500 --> 00:05:10,300
what it is when you when you fix it sort

00:05:08,650 --> 00:05:12,730
of that last step when you fix the bug

00:05:10,300 --> 00:05:14,380
that's more just ordinary development

00:05:12,730 --> 00:05:16,420
that's like sort of a it's a different

00:05:14,380 --> 00:05:18,630
mental process but there's this very

00:05:16,420 --> 00:05:22,480
specific mental process you go through

00:05:18,630 --> 00:05:25,180
where you have an idea of what this code

00:05:22,480 --> 00:05:27,160
should do what colors and pixels that

00:05:25,180 --> 00:05:29,230
should put up on your screen and it's

00:05:27,160 --> 00:05:32,140
not doing that and you look at the code

00:05:29,230 --> 00:05:33,850
and you sort of adjust your model into

00:05:32,140 --> 00:05:35,560
the model of the code running in your

00:05:33,850 --> 00:05:37,540
head until the model of the code running

00:05:35,560 --> 00:05:39,610
the head on your computer kind of

00:05:37,540 --> 00:05:43,660
matched and say oh I understand why it

00:05:39,610 --> 00:05:46,690
did that now and that process of getting

00:05:43,660 --> 00:05:51,100
this model to a line is is what I think

00:05:46,690 --> 00:05:52,960
of as debugging and it is it is like

00:05:51,100 --> 00:05:55,510
kind of a separate mental groove it

00:05:52,960 --> 00:05:56,740
really is and if you realize that it's a

00:05:55,510 --> 00:05:59,020
middle middle groove and just think

00:05:56,740 --> 00:06:01,030
about it that way you you'll naturally

00:05:59,020 --> 00:06:08,530
get get much better at it just by paying

00:06:01,030 --> 00:06:10,090
attention to it um and and and there's a

00:06:08,530 --> 00:06:11,590
few people who are sort of naturally

00:06:10,090 --> 00:06:13,090
very good at it if you've ever been on a

00:06:11,590 --> 00:06:15,490
big team of programmers sometimes

00:06:13,090 --> 00:06:18,760
there's kind of one guy who is the

00:06:15,490 --> 00:06:21,370
debugging guy because from for whatever

00:06:18,760 --> 00:06:25,360
reason you know he can find these little

00:06:21,370 --> 00:06:28,690
quirks but but I think those people are

00:06:25,360 --> 00:06:30,640
very few but I also think that anybody

00:06:28,690 --> 00:06:33,850
who sort of pays attention to it can

00:06:30,640 --> 00:06:35,740
easily become you know ten times they

00:06:33,850 --> 00:06:39,270
are not as good as they are naturally

00:06:35,740 --> 00:06:39,270
like it it is something you can learn

00:06:39,860 --> 00:06:45,420
and one thing I'd like to I kind of

00:06:43,080 --> 00:06:47,130
separate out debugging from what you

00:06:45,420 --> 00:06:50,700
might call separately as troubleshooting

00:06:47,130 --> 00:06:52,470
right I say you know remember i would

00:06:50,700 --> 00:06:54,630
advise you to remember that that bugs

00:06:52,470 --> 00:06:57,750
are actually errors that somebody made

00:06:54,630 --> 00:07:01,080
and in my case it's almost always me

00:06:57,750 --> 00:07:03,210
thunda i'm the one you know making these

00:07:01,080 --> 00:07:04,620
things or trying to hook together two

00:07:03,210 --> 00:07:07,290
modules I shouldn't hook together and

00:07:04,620 --> 00:07:09,630
that kind of stuff and remember that

00:07:07,290 --> 00:07:11,580
that bugs aren't something like a cosmic

00:07:09,630 --> 00:07:13,590
ray that came from outer space and

00:07:11,580 --> 00:07:15,540
changed a bit on the hard drive and then

00:07:13,590 --> 00:07:18,090
you reloaded the operating system is

00:07:15,540 --> 00:07:20,160
fine that falls under the category my

00:07:18,090 --> 00:07:23,160
mind of troubleshooting right it's like

00:07:20,160 --> 00:07:26,190
something that just broke by itself bugs

00:07:23,160 --> 00:07:29,190
are mistakes you know they came out of

00:07:26,190 --> 00:07:31,920
my fingers and into the project i typed

00:07:29,190 --> 00:07:33,510
them in and and when when you're

00:07:31,920 --> 00:07:35,760
debugging if you kind of at the end of

00:07:33,510 --> 00:07:37,110
the process kind of make a mental

00:07:35,760 --> 00:07:39,720
practice of always thinking back like

00:07:37,110 --> 00:07:41,550
how did i do this in my case a lot of

00:07:39,720 --> 00:07:43,470
it's because i didn't really read

00:07:41,550 --> 00:07:44,910
everything about what this module or

00:07:43,470 --> 00:07:48,770
this piece of code was supposed to do

00:07:44,910 --> 00:07:52,500
right even if it's as simple as that

00:07:48,770 --> 00:07:56,340
then then over time you'll quit making

00:07:52,500 --> 00:07:58,020
those mistakes and you'll become much

00:07:56,340 --> 00:07:59,790
more productive you'll probably still

00:07:58,020 --> 00:08:03,810
make mistakes but they'll just be

00:07:59,790 --> 00:08:05,490
different and more interesting this I

00:08:03,810 --> 00:08:08,730
think is kind of a bit of programming

00:08:05,490 --> 00:08:11,750
more I like to have the slide in in

00:08:08,730 --> 00:08:14,340
there this is a piece of notebook paper

00:08:11,750 --> 00:08:17,370
that's generally quoted as you know the

00:08:14,340 --> 00:08:19,770
first bug it's a notebook paper from the

00:08:17,370 --> 00:08:24,600
you that's in the computer museum in

00:08:19,770 --> 00:08:29,610
Boston it's from think the ENIAC system

00:08:24,600 --> 00:08:31,790
and it's an engineer's logbook and so up

00:08:29,610 --> 00:08:36,870
near the top it says oh eight hundred

00:08:31,790 --> 00:08:38,850
something started ten o'clock stopped

00:08:36,870 --> 00:08:41,580
something and he has like some numbers

00:08:38,850 --> 00:08:45,810
some notes and he has some some words

00:08:41,580 --> 00:08:47,490
about relays failing and then that

00:08:45,810 --> 00:08:49,620
eleven o'clock he says started cosine

00:08:47,490 --> 00:08:50,410
tape and then he says started multi at

00:08:49,620 --> 00:08:53,889
her test

00:08:50,410 --> 00:08:57,160
and then at 1545 had 3 45 p.m. he says

00:08:53,889 --> 00:08:59,230
relay 70 in panel f moth in relay and

00:08:57,160 --> 00:09:02,860
there's a yellowed ancient piece of

00:08:59,230 --> 00:09:05,529
scotch tape with a bug there underneath

00:09:02,860 --> 00:09:09,100
this line it says first actual case of

00:09:05,529 --> 00:09:10,899
bub being found which is kind of

00:09:09,100 --> 00:09:14,319
interesting because in terms of the

00:09:10,899 --> 00:09:16,480
history of the language because he he

00:09:14,319 --> 00:09:17,920
bothered to say first actual case of bug

00:09:16,480 --> 00:09:20,410
that means they obviously must have been

00:09:17,920 --> 00:09:22,689
using the word bug to mean mistakes

00:09:20,410 --> 00:09:24,939
before that and most people say it

00:09:22,689 --> 00:09:27,189
probably appeared sometime during World

00:09:24,939 --> 00:09:29,470
War two on people working on maybe

00:09:27,189 --> 00:09:30,730
complex mechanical systems like airplane

00:09:29,470 --> 00:09:32,860
engines or something but no one actually

00:09:30,730 --> 00:09:35,589
knows like when that bit of slang

00:09:32,860 --> 00:09:38,290
entered the lexicon if if any of you

00:09:35,589 --> 00:09:40,209
ever happen to see a like anything any

00:09:38,290 --> 00:09:42,939
citation of early uses of bug you know

00:09:40,209 --> 00:09:44,290
I'd be interested in hearing about that

00:09:42,939 --> 00:09:53,079
and putting a link in this presentation

00:09:44,290 --> 00:09:58,000
so email me so getting into getting into

00:09:53,079 --> 00:10:01,800
just the the basic kind of loop type

00:09:58,000 --> 00:10:04,569
thing that I follow when when debugging

00:10:01,800 --> 00:10:06,339
there's sort of this initial phase where

00:10:04,569 --> 00:10:08,529
you sort of vacuum up all the

00:10:06,339 --> 00:10:11,139
information you can you try to get a lot

00:10:08,529 --> 00:10:13,990
of background information you even try

00:10:11,139 --> 00:10:15,850
to pick up things like just the

00:10:13,990 --> 00:10:17,259
technical background and knowledge of

00:10:15,850 --> 00:10:19,930
the person who's telling you is this a

00:10:17,259 --> 00:10:21,430
bug like you know are they do they deal

00:10:19,930 --> 00:10:22,810
with this website all the time or they

00:10:21,430 --> 00:10:25,209
used to dealing with computers you know

00:10:22,810 --> 00:10:28,420
that kind of stuff you kind of vacuum up

00:10:25,209 --> 00:10:31,000
all this information log screenshots etc

00:10:28,420 --> 00:10:33,550
and you you make a guess and you know

00:10:31,000 --> 00:10:36,220
your guests maybe that oh when we rolled

00:10:33,550 --> 00:10:37,720
out the code last Friday somehow someone

00:10:36,220 --> 00:10:40,480
turned off this feature and that's why

00:10:37,720 --> 00:10:43,899
the about page is no over there or or

00:10:40,480 --> 00:10:45,309
something like that and then you you

00:10:43,899 --> 00:10:47,529
make some sort of test and you get

00:10:45,309 --> 00:10:49,209
results and so in that case like your

00:10:47,529 --> 00:10:51,399
your test maybe I'll go on my

00:10:49,209 --> 00:10:54,639
development environment look to see if

00:10:51,399 --> 00:10:59,399
that if that feature is unchecked right

00:10:54,639 --> 00:11:01,680
if it is unchecked I'm going to check it

00:10:59,399 --> 00:11:05,790
reload and see if the page appeared

00:11:01,680 --> 00:11:08,790
that's like a concrete test and then and

00:11:05,790 --> 00:11:11,070
then you and then you sort of refine it

00:11:08,790 --> 00:11:12,600
like if that didn't fix it or the

00:11:11,070 --> 00:11:14,430
feature was there but the page is still

00:11:12,600 --> 00:11:17,610
not there then you have to kind of start

00:11:14,430 --> 00:11:19,050
again but you've you know at each point

00:11:17,610 --> 00:11:21,089
through this you sort of eliminate

00:11:19,050 --> 00:11:23,459
something so there's like this big vast

00:11:21,089 --> 00:11:24,990
space of problems and like your tests

00:11:23,459 --> 00:11:27,050
should should be cutting off little

00:11:24,990 --> 00:11:29,640
chunks of it and whittling it down and

00:11:27,050 --> 00:11:33,270
ideally for you to get really efficient

00:11:29,640 --> 00:11:35,160
and good at being a debugger you want to

00:11:33,270 --> 00:11:38,190
sort of split it and cut off like huge

00:11:35,160 --> 00:11:39,779
chunks and and and be able to narrow

00:11:38,190 --> 00:11:42,480
down much more quickly at the beginning

00:11:39,779 --> 00:11:45,420
and it's similar to what people describe

00:11:42,480 --> 00:11:47,430
as a scientific method and it's similar

00:11:45,420 --> 00:11:50,550
to the scientific method that it's um

00:11:47,430 --> 00:11:52,110
kind of an art you can't really just

00:11:50,550 --> 00:11:54,810
give someone instructions on how to do

00:11:52,110 --> 00:11:56,880
it you have to pay attention to what

00:11:54,810 --> 00:12:00,920
you're doing observe yourself making

00:11:56,880 --> 00:12:03,360
mistakes and and kind of figure it out

00:12:00,920 --> 00:12:05,700
but it definitely can be learned there

00:12:03,360 --> 00:12:09,540
are different people who are very very

00:12:05,700 --> 00:12:10,740
poor at it to start out and and people

00:12:09,540 --> 00:12:14,490
usually learn it from working with

00:12:10,740 --> 00:12:17,240
someone else is very good I think a

00:12:14,490 --> 00:12:19,470
typical kind of path as someone who's a

00:12:17,240 --> 00:12:21,029
relatively new development works on a

00:12:19,470 --> 00:12:24,480
team with someone who's much older and

00:12:21,029 --> 00:12:26,490
they and they kind of observed this

00:12:24,480 --> 00:12:28,320
person following this process and they

00:12:26,490 --> 00:12:31,260
they pick it up and get much better at

00:12:28,320 --> 00:12:34,529
it a key is sort of picking these

00:12:31,260 --> 00:12:35,730
hypotheses such that they're quick to

00:12:34,529 --> 00:12:37,380
test you don't want to pick out a

00:12:35,730 --> 00:12:39,089
hypothesis that's like I'm going to

00:12:37,380 --> 00:12:40,500
reload my operating system and not bring

00:12:39,089 --> 00:12:43,740
some server and everything and see if it

00:12:40,500 --> 00:12:45,600
goes away because it's unlikely to be

00:12:43,740 --> 00:12:49,500
the problem and it takes a long time

00:12:45,600 --> 00:12:51,990
right whereas a test that is say clear

00:12:49,500 --> 00:12:55,200
the cache that and see if it's still

00:12:51,990 --> 00:12:57,120
there that may also be very unlikely to

00:12:55,200 --> 00:12:58,890
be the problem but it's really quick to

00:12:57,120 --> 00:13:00,959
run so you may go ahead and do it first

00:12:58,890 --> 00:13:03,329
anyway right so you have this sort of

00:13:00,959 --> 00:13:05,790
evaluation like how much information is

00:13:03,329 --> 00:13:08,940
this test going to give me versus how

00:13:05,790 --> 00:13:12,550
hard is it for me to run it and there's

00:13:08,940 --> 00:13:17,410
um it's kind of just a art to that

00:13:12,550 --> 00:13:19,120
um with that first stage when you're

00:13:17,410 --> 00:13:22,480
sort of vacuuming up all the information

00:13:19,120 --> 00:13:25,810
I think I think there's a lot of common

00:13:22,480 --> 00:13:27,250
things people miss and depending on what

00:13:25,810 --> 00:13:29,620
your environment is and whether you're

00:13:27,250 --> 00:13:31,930
always working on the same website are

00:13:29,620 --> 00:13:33,730
you working as a shop that's continually

00:13:31,930 --> 00:13:35,529
rolling out projects or whatever you

00:13:33,730 --> 00:13:38,380
might want to even develop your own

00:13:35,529 --> 00:13:40,480
little checklist of like kind of things

00:13:38,380 --> 00:13:43,829
to to remember to look at when you're

00:13:40,480 --> 00:13:46,690
vacuuming out problems in in my case um

00:13:43,829 --> 00:13:49,959
one of the common things that that I

00:13:46,690 --> 00:13:53,440
overlooked is a MySQL slow query log to

00:13:49,959 --> 00:13:55,690
see if a lot of the sites i work on the

00:13:53,440 --> 00:13:59,440
problems end up being database related

00:13:55,690 --> 00:14:00,850
and I seem to like forget that every

00:13:59,440 --> 00:14:02,350
couple of weeks and then somebody will

00:14:00,850 --> 00:14:05,529
report a problem and I'll do a lot of

00:14:02,350 --> 00:14:06,940
debugging before I think oh maybe you

00:14:05,529 --> 00:14:11,440
know the database is causing it to

00:14:06,940 --> 00:14:13,300
timeout or something like that and so

00:14:11,440 --> 00:14:15,459
there's there's the Drupal watchdog

00:14:13,300 --> 00:14:17,620
which normally on production should be

00:14:15,459 --> 00:14:20,380
sent to a syslog or the vore log

00:14:17,620 --> 00:14:21,880
messages file and and you know you

00:14:20,380 --> 00:14:23,320
should know about that and how to find

00:14:21,880 --> 00:14:25,630
it and you know if you don't have access

00:14:23,320 --> 00:14:27,940
to production you should get your guys

00:14:25,630 --> 00:14:29,529
to set up some type of cron job that

00:14:27,940 --> 00:14:31,120
copies the for log messages to where you

00:14:29,529 --> 00:14:37,870
can get it so you can check these things

00:14:31,120 --> 00:14:39,820
um these last two points I actually kind

00:14:37,870 --> 00:14:43,870
of aimed at the people may not be so

00:14:39,820 --> 00:14:46,149
much developers but if you um if you

00:14:43,870 --> 00:14:48,880
interact directly with customers and the

00:14:46,149 --> 00:14:50,800
people or clients or whoever the people

00:14:48,880 --> 00:14:52,209
are reporting problems are in your

00:14:50,800 --> 00:14:54,130
organization like you're an account

00:14:52,209 --> 00:14:56,199
manager whatever and you may not be a

00:14:54,130 --> 00:14:57,520
developer at all you may be in a small

00:14:56,199 --> 00:14:59,290
organization where you're everything but

00:14:57,520 --> 00:15:02,410
if you're that person who's talking to

00:14:59,290 --> 00:15:05,110
the initial reporter of problems like

00:15:02,410 --> 00:15:07,720
you can you know really earn your salary

00:15:05,110 --> 00:15:11,790
by getting good at collecting

00:15:07,720 --> 00:15:13,930
information one of the things that um

00:15:11,790 --> 00:15:16,570
for example one of the things you can do

00:15:13,930 --> 00:15:18,519
is is teach people how to take a

00:15:16,570 --> 00:15:20,380
screenshot like ask them you know what

00:15:18,519 --> 00:15:22,660
version of windows are you on XP you

00:15:20,380 --> 00:15:23,820
know just Google XP screenshot and tell

00:15:22,660 --> 00:15:26,250
them how to

00:15:23,820 --> 00:15:27,660
snap a screenshot sometimes you have to

00:15:26,250 --> 00:15:29,010
teach them how to attach it to an email

00:15:27,660 --> 00:15:32,070
instead of two depending on who you're

00:15:29,010 --> 00:15:34,080
working with because a screenshot of

00:15:32,070 --> 00:15:36,960
what they're seeing sometimes comes with

00:15:34,080 --> 00:15:38,850
comes with a lot of extraneous

00:15:36,960 --> 00:15:40,860
information that they neglected to

00:15:38,850 --> 00:15:42,090
mention like the fact that they're on a

00:15:40,860 --> 00:15:45,780
different computer that they've never

00:15:42,090 --> 00:15:48,570
used before or are you see the in the

00:15:45,780 --> 00:15:51,330
URL title that they're actually going to

00:15:48,570 --> 00:15:53,310
the staging machine because you gave a

00:15:51,330 --> 00:15:54,930
demo to them earlier and they still have

00:15:53,310 --> 00:15:57,990
that URL in there and that's why they're

00:15:54,930 --> 00:16:02,370
confused are all sorts of things like

00:15:57,990 --> 00:16:04,110
that and if if you just sort of teach

00:16:02,370 --> 00:16:06,750
your client and make sure they know how

00:16:04,110 --> 00:16:08,910
to take a screenshot um you know it's

00:16:06,750 --> 00:16:10,740
it's kind of impossible to add up how

00:16:08,910 --> 00:16:13,500
much money that might save you over a

00:16:10,740 --> 00:16:16,110
couple of months but I'm pretty sure it

00:16:13,500 --> 00:16:18,570
pays off like a hundred times in some of

00:16:16,110 --> 00:16:20,400
the projects I have worked on and I've

00:16:18,570 --> 00:16:23,700
worked with some project in account

00:16:20,400 --> 00:16:25,560
manager people who I'm pretty sure we're

00:16:23,700 --> 00:16:27,000
like kind of the difference between a

00:16:25,560 --> 00:16:29,640
project that was having problems

00:16:27,000 --> 00:16:32,460
completely failing and ultimately being

00:16:29,640 --> 00:16:34,280
okay just because they kind of kept tabs

00:16:32,460 --> 00:16:37,080
unlike oh this person is reporting that

00:16:34,280 --> 00:16:38,670
but they're kind of always confused i'm

00:16:37,080 --> 00:16:40,260
going to call them directly and just

00:16:38,670 --> 00:16:41,550
talk to them for a while or or this

00:16:40,260 --> 00:16:43,410
person is reporting that they're

00:16:41,550 --> 00:16:44,400
probably right i'm going to go get a

00:16:43,410 --> 00:16:45,450
develop right now we're going to read

00:16:44,400 --> 00:16:53,040
this email together and figure it out

00:16:45,450 --> 00:16:55,620
and that sort of thing and then the next

00:16:53,040 --> 00:16:57,630
step in the process and you kind of have

00:16:55,620 --> 00:17:00,210
to do this in order to be able to start

00:16:57,630 --> 00:17:04,980
testing your hypotheses is you need to

00:17:00,210 --> 00:17:06,360
be able to replicate the bug you if you

00:17:04,980 --> 00:17:09,120
can't replicate the bugs and you're

00:17:06,360 --> 00:17:10,829
stuck in this this area of making

00:17:09,120 --> 00:17:12,780
changes pushing it out to live and

00:17:10,829 --> 00:17:15,750
hoping people quit complaining and

00:17:12,780 --> 00:17:18,720
that's that's the worst case problem and

00:17:15,750 --> 00:17:20,939
that's often what people get caught in

00:17:18,720 --> 00:17:23,250
with really weird performance bugs is

00:17:20,939 --> 00:17:25,800
they don't know how to replicate the

00:17:23,250 --> 00:17:28,020
performance problem and so and so they

00:17:25,800 --> 00:17:30,720
kind of like make a few changes they say

00:17:28,020 --> 00:17:32,280
that should make things faster and they

00:17:30,720 --> 00:17:35,500
wait to see if the complaints to keep

00:17:32,280 --> 00:17:37,870
coming and that's that's usually on

00:17:35,500 --> 00:17:39,880
uh it's usually pretty hard and so

00:17:37,870 --> 00:17:42,220
normally you know what I do is I get the

00:17:39,880 --> 00:17:44,260
latest copy of of the development

00:17:42,220 --> 00:17:46,180
including the sites all files in the

00:17:44,260 --> 00:17:49,510
database see if I can make it happen on

00:17:46,180 --> 00:17:51,910
on my development machine and as soon as

00:17:49,510 --> 00:17:53,800
as soon as i can i'm kind of like off to

00:17:51,910 --> 00:17:55,840
the races in debugging because i can go

00:17:53,800 --> 00:17:58,240
through some process get something to

00:17:55,840 --> 00:18:00,070
show up that doesn't fit my idea of what

00:17:58,240 --> 00:18:02,530
you'd be happening and i can start

00:18:00,070 --> 00:18:04,990
looking into that sometimes you get bug

00:18:02,530 --> 00:18:06,850
reports where it's it's not clear what

00:18:04,990 --> 00:18:08,080
is confusing the person or it's

00:18:06,850 --> 00:18:12,280
something that's intermittent or

00:18:08,080 --> 00:18:17,440
something like that and there are some

00:18:12,280 --> 00:18:19,180
sort of war story type bugs that you

00:18:17,440 --> 00:18:23,230
know only happen every once in a while

00:18:19,180 --> 00:18:24,790
or are only after something weird or

00:18:23,230 --> 00:18:26,260
unusual has happened like a certain

00:18:24,790 --> 00:18:29,040
number of people have creating new

00:18:26,260 --> 00:18:31,330
accounts or something like that and and

00:18:29,040 --> 00:18:32,200
sort of the whole process of the whole

00:18:31,330 --> 00:18:34,900
thing is just figure out how to

00:18:32,200 --> 00:18:36,640
replicate it often often for those kind

00:18:34,900 --> 00:18:38,200
of bugs like once you realize the exact

00:18:36,640 --> 00:18:40,720
series of steps to go through to

00:18:38,200 --> 00:18:42,610
replicate a bug like your you're kind of

00:18:40,720 --> 00:18:44,080
like that makes it all obvious and all

00:18:42,610 --> 00:18:45,790
of a sudden it's it's done it takes a

00:18:44,080 --> 00:18:52,990
few minutes just to figure out what's

00:18:45,790 --> 00:18:55,090
going on and so and so once you can

00:18:52,990 --> 00:19:00,730
replicate the bug you can sort of do all

00:18:55,090 --> 00:19:02,290
the quick and easy test first and you

00:19:00,730 --> 00:19:05,640
know probably most people in here are

00:19:02,290 --> 00:19:07,750
pretty familiar with them but sometimes

00:19:05,640 --> 00:19:09,910
depending on what sort of work you do it

00:19:07,750 --> 00:19:12,610
can be good to actually keep some sort

00:19:09,910 --> 00:19:15,880
of little list or something I kind of

00:19:12,610 --> 00:19:18,370
put all these under the phrase check the

00:19:15,880 --> 00:19:19,570
plug from the you know IT support days

00:19:18,370 --> 00:19:22,810
where they would always ask use your

00:19:19,570 --> 00:19:25,210
computer plugged in and you're always

00:19:22,810 --> 00:19:28,770
felt irritating but you know it probably

00:19:25,210 --> 00:19:32,230
occasionally saved them a lot of time I

00:19:28,770 --> 00:19:36,340
mean in a typical Drupal thing we have a

00:19:32,230 --> 00:19:38,710
whole chain of caches that can be

00:19:36,340 --> 00:19:40,720
cleared and then retested right one

00:19:38,710 --> 00:19:45,040
thing I want to emphasize that is

00:19:40,720 --> 00:19:47,870
usually if well often if clearing a

00:19:45,040 --> 00:19:50,150
cache quote-unquote fixes the problem

00:19:47,870 --> 00:19:51,590
it you might not have solved it we think

00:19:50,150 --> 00:19:54,800
you have cut because you cleared the

00:19:51,590 --> 00:19:57,650
cache but on on many Drupal setups you

00:19:54,800 --> 00:19:59,360
know there's something wrong going on

00:19:57,650 --> 00:20:01,610
and that the cash wasn't automatically

00:19:59,360 --> 00:20:02,630
cleared when something happened and all

00:20:01,610 --> 00:20:03,800
that's going to happen is you're

00:20:02,630 --> 00:20:06,650
eventually going to get another bug

00:20:03,800 --> 00:20:09,740
report of the same thing when it when

00:20:06,650 --> 00:20:13,070
the caches get out of syncing and valid

00:20:09,740 --> 00:20:14,360
again and so it's important to remember

00:20:13,070 --> 00:20:17,270
that just because you cleared the cache

00:20:14,360 --> 00:20:19,460
and it went away you know sometimes you

00:20:17,270 --> 00:20:21,020
have to stop and think you know why did

00:20:19,460 --> 00:20:23,300
that happen can I make it happen again

00:20:21,020 --> 00:20:24,620
if I edit this node and then from

00:20:23,300 --> 00:20:27,140
another computer coming in as anonymous

00:20:24,620 --> 00:20:29,179
do I still see the wrong thing you know

00:20:27,140 --> 00:20:31,190
is there something deeper that needs to

00:20:29,179 --> 00:20:36,740
be fixed here as to why the cash was not

00:20:31,190 --> 00:20:38,330
right and you know checking things like

00:20:36,740 --> 00:20:40,130
the right version of the code is on the

00:20:38,330 --> 00:20:41,990
server that like they're not deploying a

00:20:40,130 --> 00:20:46,940
different branch because of you know

00:20:41,990 --> 00:20:49,820
some special circumstance one that I

00:20:46,940 --> 00:20:52,250
used to kind of use a lot haven't used

00:20:49,820 --> 00:20:55,429
recently as I would also have bugs that

00:20:52,250 --> 00:20:58,460
were in some and some essence they were

00:20:55,429 --> 00:21:00,520
summed up by there's it's right in the

00:20:58,460 --> 00:21:03,500
database and wrong on the web page and

00:21:00,520 --> 00:21:05,330
to kind of split we're in the process

00:21:03,500 --> 00:21:07,580
something was going wrong I would switch

00:21:05,330 --> 00:21:10,280
to the default theme in order to

00:21:07,580 --> 00:21:12,110
eliminate our custom theme as the source

00:21:10,280 --> 00:21:15,050
of something being hidden or covered up

00:21:12,110 --> 00:21:18,770
and then I would know whether to focus

00:21:15,050 --> 00:21:24,730
on looking in theme code our focus on

00:21:18,770 --> 00:21:24,730
Drupal configuration and Drupal code and

00:21:25,360 --> 00:21:29,750
Anna quick course you know you can

00:21:28,070 --> 00:21:33,110
another thing that happens with some of

00:21:29,750 --> 00:21:34,550
the sites is is old versions of CSS or

00:21:33,110 --> 00:21:36,890
something made somehow not have been

00:21:34,550 --> 00:21:45,260
refreshed on their CDN system if you use

00:21:36,890 --> 00:21:48,950
a CDN system kind of a kind of meta

00:21:45,260 --> 00:21:50,420
comment on on all of these is notice

00:21:48,950 --> 00:21:52,790
that a lot of them deal with the fact

00:21:50,420 --> 00:21:54,290
that Drupal has accreted a lot of

00:21:52,790 --> 00:21:57,500
different caching systems and some of

00:21:54,290 --> 00:22:00,260
them are complicated that's like one of

00:21:57,500 --> 00:22:04,490
the reasons why Drupal sites some

00:22:00,260 --> 00:22:08,120
bugs once you kind of check the things

00:22:04,490 --> 00:22:09,770
that are easy to check it's usually a

00:22:08,120 --> 00:22:11,240
good idea not to like you know sort of

00:22:09,770 --> 00:22:13,310
keep your head down and keep plowing on

00:22:11,240 --> 00:22:15,440
weird usually that usually once you

00:22:13,310 --> 00:22:17,660
realize I've done everything that's a

00:22:15,440 --> 00:22:19,610
one minute check that's usually a good

00:22:17,660 --> 00:22:21,440
point to sort of step away from the

00:22:19,610 --> 00:22:25,700
keyboard and think for a minute and

00:22:21,440 --> 00:22:28,700
that's usually when I I start doing some

00:22:25,700 --> 00:22:31,130
Google searches and depending on the

00:22:28,700 --> 00:22:34,880
nature of the problem I go on IRC and I

00:22:31,130 --> 00:22:37,310
go in Drupal support often when I'm

00:22:34,880 --> 00:22:39,830
going into Drupal support and looking

00:22:37,310 --> 00:22:42,320
for a problem I don't expect anyone to

00:22:39,830 --> 00:22:44,870
be able to solve it for me because you

00:22:42,320 --> 00:22:46,760
know my problem is almost too complex to

00:22:44,870 --> 00:22:48,890
explain to them right they can't log

00:22:46,760 --> 00:22:51,920
into my code base and look at my custom

00:22:48,890 --> 00:22:53,840
module and things but um one of the good

00:22:51,920 --> 00:22:56,150
things that happens is in the process of

00:22:53,840 --> 00:22:58,070
talking about it on Drupal support

00:22:56,150 --> 00:23:01,910
asking if they've seen ever seen other

00:22:58,070 --> 00:23:05,090
things they'll use different words to

00:23:01,910 --> 00:23:07,330
describe something right like maybe I

00:23:05,090 --> 00:23:10,070
was using the word template and

00:23:07,330 --> 00:23:13,880
everybody else uses the word token for

00:23:10,070 --> 00:23:15,560
for some particular thing and and once

00:23:13,880 --> 00:23:17,420
you see what they're using what the

00:23:15,560 --> 00:23:19,180
words they're using is often that helps

00:23:17,420 --> 00:23:21,650
you google search it keeps you from

00:23:19,180 --> 00:23:22,790
looking for their arcane term for

00:23:21,650 --> 00:23:24,350
something when there's actually a more

00:23:22,790 --> 00:23:30,740
common term out there where you can find

00:23:24,350 --> 00:23:32,810
the result much much more quickly 11

00:23:30,740 --> 00:23:35,360
sort of portion of this is sometimes at

00:23:32,810 --> 00:23:39,170
this stage I start as like the next

00:23:35,360 --> 00:23:41,090
level of harder problems I start I start

00:23:39,170 --> 00:23:42,380
trying the dev version of different

00:23:41,090 --> 00:23:45,980
modules to see if the problem goes away

00:23:42,380 --> 00:23:48,850
and at this point you really have to

00:23:45,980 --> 00:23:52,760
sort of focus on the sort of scientific

00:23:48,850 --> 00:23:55,250
hypothesis style of testing because you

00:23:52,760 --> 00:23:56,600
don't want to you don't want to try the

00:23:55,250 --> 00:23:59,000
dev version of modules that you have a

00:23:56,600 --> 00:24:02,420
reason to suspect that the problem is in

00:23:59,000 --> 00:24:04,040
that module and you also want to once

00:24:02,420 --> 00:24:06,410
you've put the development version down

00:24:04,040 --> 00:24:09,110
on their done the update and tested it

00:24:06,410 --> 00:24:11,210
you want to undo that if that was not

00:24:09,110 --> 00:24:12,970
the problem you don't want to let your

00:24:11,210 --> 00:24:15,750
development copy just sort of

00:24:12,970 --> 00:24:20,140
creat a bunch of little changes that

00:24:15,750 --> 00:24:22,299
were like little experiments you did and

00:24:20,140 --> 00:24:24,159
are sort of causing your stuff to

00:24:22,299 --> 00:24:27,429
diverge more and more from the

00:24:24,159 --> 00:24:30,299
production system as a problem and and

00:24:27,429 --> 00:24:32,500
just kind of confuse and hide this you

00:24:30,299 --> 00:24:34,539
so if you're going to try the

00:24:32,500 --> 00:24:35,980
development version of something you you

00:24:34,539 --> 00:24:38,260
want to do it you want to try it and

00:24:35,980 --> 00:24:40,000
then you want to go back to the old

00:24:38,260 --> 00:24:41,500
version of the code grab a copy of the

00:24:40,000 --> 00:24:43,539
database and go back to that copy of the

00:24:41,500 --> 00:24:50,289
database and sort of undo the effects of

00:24:43,539 --> 00:24:51,730
that experiment and of course this kind

00:24:50,289 --> 00:24:55,780
of goes hand in hand with the searching

00:24:51,730 --> 00:24:58,330
or whatever you know try to post

00:24:55,780 --> 00:25:00,970
wherever if you find a good description

00:24:58,330 --> 00:25:03,010
of the problem somewhere that matches

00:25:00,970 --> 00:25:08,490
your searches try to post their and

00:25:03,010 --> 00:25:08,490
describe your solution when you're done

00:25:09,510 --> 00:25:14,169
this is a this is kind of a list of

00:25:12,549 --> 00:25:16,120
common problems it's a little bit more

00:25:14,169 --> 00:25:20,169
oriented toward Drupal 6 because it's

00:25:16,120 --> 00:25:23,980
kind of old but um but these are sort of

00:25:20,169 --> 00:25:32,409
in in my mental list of common problems

00:25:23,980 --> 00:25:34,480
that I that I run into and and I think

00:25:32,409 --> 00:25:36,100
it's a good idea not to sort of use

00:25:34,480 --> 00:25:38,260
other people's lists of common problems

00:25:36,100 --> 00:25:40,270
you're the common problems you will run

00:25:38,260 --> 00:25:42,010
into a probably dependent on how you

00:25:40,270 --> 00:25:45,460
work and the types of sites you work on

00:25:42,010 --> 00:25:47,289
and so on but I think it is good to sort

00:25:45,460 --> 00:25:49,390
of mentally keep a list of what the

00:25:47,289 --> 00:25:50,799
common problems are because you know you

00:25:49,390 --> 00:25:51,909
really kind of feel bad when you spend

00:25:50,799 --> 00:25:53,770
half a day hunting down something

00:25:51,909 --> 00:25:57,340
realize oh yeah this is what I did last

00:25:53,770 --> 00:26:01,659
Friday afternoon to you know I'm you

00:25:57,340 --> 00:26:03,490
know so um so I have a list of bullet

00:26:01,659 --> 00:26:04,960
points here there's permissions on an

00:26:03,490 --> 00:26:06,370
input filter sometimes when you're

00:26:04,960 --> 00:26:08,679
getting like the user is not allowed to

00:26:06,370 --> 00:26:10,510
do something it's not about permissions

00:26:08,679 --> 00:26:12,760
on the node it's about permissions on

00:26:10,510 --> 00:26:15,789
the input filter that the node needs in

00:26:12,760 --> 00:26:18,429
order to be able to edit it there's no

00:26:15,789 --> 00:26:21,190
Dax s-type related things which are all

00:26:18,429 --> 00:26:22,780
which are like cash clearing things and

00:26:21,190 --> 00:26:25,750
that if you have to rebuild that table

00:26:22,780 --> 00:26:26,950
there's a reason why it wasn't rebuilt

00:26:25,750 --> 00:26:29,110
by itself correctly

00:26:26,950 --> 00:26:31,059
and you still have to keep going just

00:26:29,110 --> 00:26:33,429
because you found that winning that one

00:26:31,059 --> 00:26:36,120
thing you can do to undo it you still

00:26:33,429 --> 00:26:42,039
have to figure out why it's happening

00:26:36,120 --> 00:26:44,019
and you know permissions on files

00:26:42,039 --> 00:26:45,880
generated by the web server versus file

00:26:44,019 --> 00:26:47,260
is generated by Josh in your version

00:26:45,880 --> 00:26:50,019
control system and so on or like a

00:26:47,260 --> 00:26:53,230
source of a lot of little little little

00:26:50,019 --> 00:26:55,510
tweaky things sometimes you can have

00:26:53,230 --> 00:26:57,279
content permissions and you think you

00:26:55,510 --> 00:26:59,110
should be able to do everything because

00:26:57,279 --> 00:27:00,429
you have the right node permissions but

00:26:59,110 --> 00:27:04,929
there's actually permissions applying to

00:27:00,429 --> 00:27:07,659
specific fields the crime related cron

00:27:04,929 --> 00:27:10,240
some before checking the cron some

00:27:07,659 --> 00:27:12,070
before variable and seeing if cron is

00:27:10,240 --> 00:27:13,600
like not finishing it and that kind of

00:27:12,070 --> 00:27:16,779
stuff is also related to a lot of stuff

00:27:13,600 --> 00:27:18,970
usually we search the search results not

00:27:16,779 --> 00:27:24,789
updating and things like that or our

00:27:18,970 --> 00:27:26,889
feeds not updating one kind of a kind of

00:27:24,789 --> 00:27:30,610
global comment on this whole list which

00:27:26,889 --> 00:27:33,940
I think does kind of apply to Drupal and

00:27:30,610 --> 00:27:35,350
even to just complex website web systems

00:27:33,940 --> 00:27:37,090
in general or kind of like the systems

00:27:35,350 --> 00:27:39,399
in general look at how many of these

00:27:37,090 --> 00:27:40,990
involve permissions of some type you

00:27:39,399 --> 00:27:43,330
know the node access input filter

00:27:40,990 --> 00:27:46,059
permissions file system permissions

00:27:43,330 --> 00:27:49,179
content permissions and so on in general

00:27:46,059 --> 00:27:51,340
big complex systems tend to have lots of

00:27:49,179 --> 00:27:54,700
different layers of permission type

00:27:51,340 --> 00:27:56,860
systems and and sometimes figuring out

00:27:54,700 --> 00:27:59,350
which is what is blocking you at the

00:27:56,860 --> 00:28:01,740
right light layer is it's kind of a key

00:27:59,350 --> 00:28:04,990
and that's sort of like a source of the

00:28:01,740 --> 00:28:07,529
complexity that can make things like

00:28:04,990 --> 00:28:14,669
drupal are any other complex system

00:28:07,529 --> 00:28:17,700
buggy and my main point on this slide is

00:28:14,669 --> 00:28:21,070
don't go looking for uncommon problems

00:28:17,700 --> 00:28:22,899
like if some guy told you this long

00:28:21,070 --> 00:28:24,700
story about how you spent a week

00:28:22,899 --> 00:28:28,179
tracking down this problem that ended up

00:28:24,700 --> 00:28:29,649
to be you know I missing semicolon in

00:28:28,179 --> 00:28:33,039
his custom module or something like that

00:28:29,649 --> 00:28:34,299
and you have a bug the next day don't go

00:28:33,039 --> 00:28:37,149
look through all your code looking for

00:28:34,299 --> 00:28:38,470
missing semicolons you know start the

00:28:37,149 --> 00:28:39,580
debugging process look through the

00:28:38,470 --> 00:28:42,070
normal things

00:28:39,580 --> 00:28:44,140
make a guess as to what part of the

00:28:42,070 --> 00:28:45,580
system is causing this you know try to

00:28:44,140 --> 00:28:48,910
think of a test that would narrow it

00:28:45,580 --> 00:28:51,730
down to that and and go through that

00:28:48,910 --> 00:28:53,920
that process I think listening to other

00:28:51,730 --> 00:28:56,680
peoples you know war stories about bugs

00:28:53,920 --> 00:28:59,500
is its kind of instructive it's kind of

00:28:56,680 --> 00:29:01,570
how you learn to debug in in in a

00:28:59,500 --> 00:29:04,270
certain way and I like to kind of

00:29:01,570 --> 00:29:06,400
collect those from from people if you

00:29:04,270 --> 00:29:08,770
have any if you have any good ones maybe

00:29:06,400 --> 00:29:13,270
we can share some at the at the end of

00:29:08,770 --> 00:29:16,330
this um but it's it's not a good way to

00:29:13,270 --> 00:29:17,590
like you know use as a way to start

00:29:16,330 --> 00:29:21,610
finding whatever problem you're facing

00:29:17,590 --> 00:29:24,790
today it's much better to kind of do

00:29:21,610 --> 00:29:26,980
your quick tests and then get into you

00:29:24,790 --> 00:29:29,050
know the thinking mode and like you know

00:29:26,980 --> 00:29:35,080
sort of the organized structural track

00:29:29,050 --> 00:29:37,360
download so I mean a key part of doing

00:29:35,080 --> 00:29:39,550
these hypotheses is the test part which

00:29:37,360 --> 00:29:41,230
is like being able to look into the

00:29:39,550 --> 00:29:43,060
system at a particular place you know

00:29:41,230 --> 00:29:44,950
this is equivalent of like the

00:29:43,060 --> 00:29:46,570
scientists instruments or microscope

00:29:44,950 --> 00:29:49,150
this is like how you look into different

00:29:46,570 --> 00:29:51,280
things and if you have better tools to

00:29:49,150 --> 00:29:54,280
look into different things then you can

00:29:51,280 --> 00:29:58,900
do more you know little experiments and

00:29:54,280 --> 00:30:00,820
tests um I tend to actually do a lot of

00:29:58,900 --> 00:30:03,640
debugging though without using special

00:30:00,820 --> 00:30:07,180
tools um you know I insert lines like

00:30:03,640 --> 00:30:09,880
these two and in various parts of the

00:30:07,180 --> 00:30:13,450
code you know printing out various

00:30:09,880 --> 00:30:16,030
variables or arrays are dropping the

00:30:13,450 --> 00:30:17,440
same output into watchdog if it's

00:30:16,030 --> 00:30:21,010
something that's not going to make it

00:30:17,440 --> 00:30:24,760
all the way out to the page and that

00:30:21,010 --> 00:30:28,060
sort of thing I think um I think in

00:30:24,760 --> 00:30:30,550
general that you know if you're going to

00:30:28,060 --> 00:30:32,890
make a profession of developing getting

00:30:30,550 --> 00:30:34,720
a good setup with things like X debug

00:30:32,890 --> 00:30:38,320
and good debuggers and all those kinds

00:30:34,720 --> 00:30:40,630
of tools is it's very important but it's

00:30:38,320 --> 00:30:43,630
it's not kind of like automatically mean

00:30:40,630 --> 00:30:46,840
you find bugs faster you can I mean I've

00:30:43,630 --> 00:30:49,900
I've traced through a hold paid page

00:30:46,840 --> 00:30:52,020
request in Drupal and you know watched a

00:30:49,900 --> 00:30:54,420
bug that I must have put in there at

00:30:52,020 --> 00:30:55,800
he happened in front of my eyes and got

00:30:54,420 --> 00:30:57,780
to the end and seen the page print out

00:30:55,800 --> 00:31:00,930
and you know still been no wiser because

00:30:57,780 --> 00:31:02,460
I wasn't in the mode of sort of thinking

00:31:00,930 --> 00:31:05,790
about my model of what should be

00:31:02,460 --> 00:31:11,910
happening versus what what was was

00:31:05,790 --> 00:31:14,010
really happening so um it's also the

00:31:11,910 --> 00:31:15,900
case that usually when you have someone

00:31:14,010 --> 00:31:17,070
complaining to you about a bug they're

00:31:15,900 --> 00:31:18,360
kind of like checking on you every hour

00:31:17,070 --> 00:31:20,100
I think if you fixed it yet and that

00:31:18,360 --> 00:31:21,600
kind of thing it's usually like a very

00:31:20,100 --> 00:31:23,910
inconvenient time to try to figure out

00:31:21,600 --> 00:31:25,770
how to set up XD bug and so on so if you

00:31:23,910 --> 00:31:27,180
want to have good development tools you

00:31:25,770 --> 00:31:28,920
want to think of X debug as really as a

00:31:27,180 --> 00:31:30,570
development tool you want to set up

00:31:28,920 --> 00:31:33,420
beforehand and know how to turn it on

00:31:30,570 --> 00:31:35,700
and off and use it and so on when you're

00:31:33,420 --> 00:31:37,050
in the middle of debugging don't don't

00:31:35,700 --> 00:31:38,670
try to learn the new tool that's like a

00:31:37,050 --> 00:31:40,200
new thing to debug you know focus on

00:31:38,670 --> 00:31:46,050
debugging you can use all the standard

00:31:40,200 --> 00:31:47,970
things like to make an analogy to two

00:31:46,050 --> 00:31:50,370
golfers you know they say the average

00:31:47,970 --> 00:31:52,410
person who's a amateur golfer if you

00:31:50,370 --> 00:31:54,450
want to spend a few hundred dollars

00:31:52,410 --> 00:31:56,790
improving your score and you have the

00:31:54,450 --> 00:31:58,230
choice of getting a couple of Saturday

00:31:56,790 --> 00:32:01,410
afternoon lessons from from a

00:31:58,230 --> 00:32:03,750
professional are buying you know the

00:32:01,410 --> 00:32:05,850
most expensive carbon fiber clubs online

00:32:03,750 --> 00:32:07,830
or whatever you'll generally improve

00:32:05,850 --> 00:32:11,400
your score a lot more by keeping your

00:32:07,830 --> 00:32:14,280
old crappy deemed clubs and just getting

00:32:11,400 --> 00:32:18,240
some really good lessons and similarly

00:32:14,280 --> 00:32:19,890
for debugging if you if you most of us

00:32:18,240 --> 00:32:21,540
can get a lot further down the road just

00:32:19,890 --> 00:32:24,930
by thinking about what we're doing and

00:32:21,540 --> 00:32:28,230
being smart about it then we can by

00:32:24,930 --> 00:32:29,850
getting you know these fancy tools it is

00:32:28,230 --> 00:32:31,590
true if you have these tools all the

00:32:29,850 --> 00:32:33,900
things being equal you can go faster

00:32:31,590 --> 00:32:36,720
because you can run the page and check

00:32:33,900 --> 00:32:38,280
on results faster and then so you you

00:32:36,720 --> 00:32:42,270
have a slightly more sophisticated way

00:32:38,280 --> 00:32:45,840
of peering into the system and and and

00:32:42,270 --> 00:32:48,690
and that does help but it's really more

00:32:45,840 --> 00:32:50,490
the overall kind of thought structure

00:32:48,690 --> 00:32:52,650
that's that's going to really make the

00:32:50,490 --> 00:32:54,690
difference between you can between

00:32:52,650 --> 00:32:57,390
thrashing wildly and finding the problem

00:32:54,690 --> 00:32:59,320
I mean you can still spend days making

00:32:57,390 --> 00:33:07,480
random changes and pray even if

00:32:59,320 --> 00:33:08,680
you have x debug if if you're looking

00:33:07,480 --> 00:33:10,750
for kind of a development environment

00:33:08,680 --> 00:33:12,580
with like everything all kind of tweaked

00:33:10,750 --> 00:33:14,590
and put together a little bit you might

00:33:12,580 --> 00:33:17,290
look into the QuickStart project there's

00:33:14,590 --> 00:33:19,510
a it's a drupal.org / project slice

00:33:17,290 --> 00:33:23,260
quick start there they have a link to a

00:33:19,510 --> 00:33:25,840
torrent file of a of a virtual box that

00:33:23,260 --> 00:33:30,010
is there's any bun to kind of set up to

00:33:25,840 --> 00:33:31,930
run multiple drupal instances for a far

00:33:30,010 --> 00:33:34,000
drupal developer and has some icons on

00:33:31,930 --> 00:33:36,160
the desktop to like you know start up a

00:33:34,000 --> 00:33:38,110
new test instance and you you type in a

00:33:36,160 --> 00:33:43,030
name and it does everything for you and

00:33:38,110 --> 00:33:46,930
it has x debug and XH prof set up on it

00:33:43,030 --> 00:33:49,830
and it has a nice IDE set up if you

00:33:46,930 --> 00:33:52,060
don't to spend a lot of time you know

00:33:49,830 --> 00:33:53,980
looking in forums for the coolest

00:33:52,060 --> 00:33:55,750
Eclipse plugins and stuff like that you

00:33:53,980 --> 00:33:58,720
might try looking at this you know it

00:33:55,750 --> 00:34:00,280
might get you you know where you want to

00:33:58,720 --> 00:34:02,170
be just for that I know that there are

00:34:00,280 --> 00:34:03,580
some Drupal development shops that have

00:34:02,170 --> 00:34:05,740
sort of standardized on it like

00:34:03,580 --> 00:34:09,040
everybody runs that that's how they how

00:34:05,740 --> 00:34:10,690
they work their code another part of

00:34:09,040 --> 00:34:12,490
inspecting is not just like looking at

00:34:10,690 --> 00:34:15,370
the state of variables and the code is

00:34:12,490 --> 00:34:20,830
it executes but sort of comparing

00:34:15,370 --> 00:34:22,810
database states and and this is tricky

00:34:20,830 --> 00:34:24,970
because you can't just take two mice ql

00:34:22,810 --> 00:34:27,790
dumps and if them and get very good

00:34:24,970 --> 00:34:29,080
results I mean you're you're going to

00:34:27,790 --> 00:34:32,770
kind of have to know what you're looking

00:34:29,080 --> 00:34:34,960
for it's also important that when you're

00:34:32,770 --> 00:34:38,680
working you could you have a starting

00:34:34,960 --> 00:34:41,740
point database copy that you know has

00:34:38,680 --> 00:34:43,450
the bug in it and as you do each little

00:34:41,740 --> 00:34:45,100
experiment you wipe out your database

00:34:43,450 --> 00:34:47,980
you put that back and kind of start

00:34:45,100 --> 00:34:49,690
fresh so you don't have all your little

00:34:47,980 --> 00:34:52,120
experiments growing like warts on this

00:34:49,690 --> 00:34:53,620
and and the thing is getting more and

00:34:52,120 --> 00:34:55,360
more out of sync so that you kind of

00:34:53,620 --> 00:34:57,790
start clean and try something else and

00:34:55,360 --> 00:34:59,560
start cleaning try something else and to

00:34:57,790 --> 00:35:01,240
really be able to do that you you kind

00:34:59,560 --> 00:35:02,920
of need a script that blows away your

00:35:01,240 --> 00:35:04,750
database whatever or just a couple of

00:35:02,920 --> 00:35:06,190
commands in your history maybe all

00:35:04,750 --> 00:35:08,050
separated by semicolons so you can just

00:35:06,190 --> 00:35:10,360
do a power o and find it and enter in

00:35:08,050 --> 00:35:10,589
your clean you log in again and you keep

00:35:10,360 --> 00:35:15,869
going

00:35:10,589 --> 00:35:17,849
um if you do things like you know used

00:35:15,869 --> 00:35:19,410
rush to dump all the variables and pipe

00:35:17,849 --> 00:35:21,930
them to files and different summon and

00:35:19,410 --> 00:35:23,190
so on that can be useful as long as you

00:35:21,930 --> 00:35:24,930
you're kind of looking for a specific

00:35:23,190 --> 00:35:27,569
thing you're going to say hey I wonder

00:35:24,930 --> 00:35:29,489
if they're more WYSIWYG filter variables

00:35:27,569 --> 00:35:31,229
set in the buggy database and then on by

00:35:29,489 --> 00:35:34,619
your database then you're looking for a

00:35:31,229 --> 00:35:36,299
specific thing if um if you're just like

00:35:34,619 --> 00:35:37,380
Oh what if their differences here and

00:35:36,299 --> 00:35:38,369
there's a bunch of difference is you're

00:35:37,380 --> 00:35:40,140
like one of these differences matter

00:35:38,369 --> 00:35:42,059
when you're really just thrashing around

00:35:40,140 --> 00:35:44,339
at that point you need to step back and

00:35:42,059 --> 00:35:48,380
think about what might be causing the

00:35:44,339 --> 00:35:48,380
problem any specific thing to look for

00:35:50,660 --> 00:35:57,690
and so I don't mention this in my slide

00:35:54,390 --> 00:36:00,630
I actually meant to add it but on larger

00:35:57,690 --> 00:36:04,469
websites where you have memcache and

00:36:00,630 --> 00:36:06,359
maybe a Drupal read askew thing running

00:36:04,469 --> 00:36:08,819
and other things there's often other

00:36:06,359 --> 00:36:11,969
places where information is stored that

00:36:08,819 --> 00:36:14,249
you need to be kind of looking at and if

00:36:11,969 --> 00:36:16,710
you have a site like that's aggregating

00:36:14,249 --> 00:36:18,779
a ton of feeds or whatever may be your

00:36:16,710 --> 00:36:20,430
bugs or some behavior that's changed

00:36:18,779 --> 00:36:22,019
about the upstream feeds like they're

00:36:20,430 --> 00:36:23,219
not keeping as long a history as they

00:36:22,019 --> 00:36:26,160
used to or something like that so

00:36:23,219 --> 00:36:28,529
sometimes under this whole sort of

00:36:26,160 --> 00:36:32,069
inspecting the database type thing you

00:36:28,529 --> 00:36:37,170
also have to inspect other non database

00:36:32,069 --> 00:36:38,969
like things and you know it is possible

00:36:37,170 --> 00:36:41,489
to you know tell not into memcache and

00:36:38,969 --> 00:36:43,469
print out cash variables or whatever or

00:36:41,489 --> 00:36:44,640
I think there's a memcache PHP inspector

00:36:43,469 --> 00:36:48,660
where you can kind of browse through it

00:36:44,640 --> 00:36:50,219
and see see what's in there and you know

00:36:48,660 --> 00:36:51,930
there are ways there are ways to look

00:36:50,219 --> 00:36:53,430
into all these things all these things

00:36:51,930 --> 00:36:57,509
were made by people who also had to

00:36:53,430 --> 00:37:00,839
debug them at some point and so you know

00:36:57,509 --> 00:37:02,489
if you in our open source world if you

00:37:00,839 --> 00:37:04,469
have to look into a black box it's

00:37:02,489 --> 00:37:10,289
usually some tool out there that

00:37:04,469 --> 00:37:13,049
somebody made for you to do that this is

00:37:10,289 --> 00:37:16,170
a kind of a plug for the devel module I

00:37:13,049 --> 00:37:17,999
think one of the interesting things you

00:37:16,170 --> 00:37:19,579
go in the devel module look at all the

00:37:17,999 --> 00:37:22,770
different options and stuff that it has

00:37:19,579 --> 00:37:27,000
that access kind of like a

00:37:22,770 --> 00:37:29,490
a you know a tribal memory of all the

00:37:27,000 --> 00:37:31,650
things that are hard to debug because if

00:37:29,490 --> 00:37:33,240
they worked perfectly they never would

00:37:31,650 --> 00:37:37,050
have had a special option in the toe

00:37:33,240 --> 00:37:39,390
module and and I think it's a useful

00:37:37,050 --> 00:37:41,130
exercise just kind of going there and

00:37:39,390 --> 00:37:43,260
look through you know you notice that

00:37:41,130 --> 00:37:45,480
like a lot of them deal with permission

00:37:43,260 --> 00:37:47,790
stuff like there's a little access

00:37:45,480 --> 00:37:50,190
permissions block you can turn on that

00:37:47,790 --> 00:37:52,860
says okay for your current user here's

00:37:50,190 --> 00:37:54,810
why he can access the note here's why he

00:37:52,860 --> 00:37:56,520
can't edit it because of an input filter

00:37:54,810 --> 00:37:58,290
and it like lists out all those things

00:37:56,520 --> 00:38:00,450
right and you know that wouldn't be

00:37:58,290 --> 00:38:02,280
there if a lot of us hadn't pulled out

00:38:00,450 --> 00:38:04,350
hair somewhere along the way probably

00:38:02,280 --> 00:38:08,640
you know mostly dave reid and marcus on

00:38:04,350 --> 00:38:10,500
the ball of them all the user switcher

00:38:08,640 --> 00:38:12,120
is nice if you have a site with a lot of

00:38:10,500 --> 00:38:14,160
user roles and permissions because you

00:38:12,120 --> 00:38:17,010
can you can switch to different users

00:38:14,160 --> 00:38:20,340
quickly and and kind of rerun little

00:38:17,010 --> 00:38:22,920
test i find for some of a lot of the

00:38:20,340 --> 00:38:24,720
performance related stuff that often

00:38:22,920 --> 00:38:26,220
kind of a first thing almost kind of

00:38:24,720 --> 00:38:28,620
more first step in vacuuming up the

00:38:26,220 --> 00:38:30,810
information stage is i look at the

00:38:28,620 --> 00:38:33,210
queries that are being generated by some

00:38:30,810 --> 00:38:36,060
particular feature or page or action on

00:38:33,210 --> 00:38:37,830
the website and kind of use that to

00:38:36,060 --> 00:38:39,030
ground me like what's what's going on

00:38:37,830 --> 00:38:41,040
here is it something that's highly

00:38:39,030 --> 00:38:47,670
cached is it something that should be in

00:38:41,040 --> 00:38:49,320
isn't or or what's going on and also i

00:38:47,670 --> 00:38:52,200
don't know i think sometimes maybe I

00:38:49,320 --> 00:38:54,510
should take this out about the devel PHP

00:38:52,200 --> 00:38:56,670
block but it's a way to simply run a

00:38:54,510 --> 00:39:00,270
snippet of PHP inside the Drupal

00:38:56,670 --> 00:39:02,580
bootstrap environment and so I developed

00:39:00,270 --> 00:39:04,470
a habit of doing it to look for like

00:39:02,580 --> 00:39:07,290
particular PHP extensions being

00:39:04,470 --> 00:39:09,540
installed or some other other types of

00:39:07,290 --> 00:39:10,980
things I would even use it like if I had

00:39:09,540 --> 00:39:13,740
something from a cache table those a

00:39:10,980 --> 00:39:15,180
bunch of serialize PHP I wanted to unsee

00:39:13,740 --> 00:39:17,550
relies it so I can see what it actually

00:39:15,180 --> 00:39:21,350
was Anna nested structure like I would

00:39:17,550 --> 00:39:24,090
paste it into there and so on arm but

00:39:21,350 --> 00:39:26,450
you know never leave that turned on on

00:39:24,090 --> 00:39:30,000
development it's it's pretty insecure

00:39:26,450 --> 00:39:31,210
and there's probably most of the things

00:39:30,000 --> 00:39:33,369
that that you

00:39:31,210 --> 00:39:36,520
far there are other better ways to use

00:39:33,369 --> 00:39:39,550
it far to do it like even just running

00:39:36,520 --> 00:39:42,849
quick snippets of PHP you can do the the

00:39:39,550 --> 00:39:46,030
drudge PHP foul stuff and that you can

00:39:42,849 --> 00:39:48,160
run a a snippet of PHP inside the Drupal

00:39:46,030 --> 00:39:49,990
bootstrapped environment that way it's

00:39:48,160 --> 00:39:57,130
probably a much better way to go about

00:39:49,990 --> 00:39:59,109
it usually when i'm debugging once i

00:39:57,130 --> 00:40:00,430
narrow it down and I could like say this

00:39:59,109 --> 00:40:02,500
is definitely a problem in the theme

00:40:00,430 --> 00:40:04,900
like if I use this other theme it's not

00:40:02,500 --> 00:40:06,250
there you know that's usually the point

00:40:04,900 --> 00:40:08,320
which I can blame someone else and pass

00:40:06,250 --> 00:40:10,869
it off so I don't have as much

00:40:08,320 --> 00:40:15,550
experience you know debugging theme and

00:40:10,869 --> 00:40:19,060
and an apparent stuff but I stuck a few

00:40:15,550 --> 00:40:21,369
things in here that um that have bugged

00:40:19,060 --> 00:40:25,089
me and I think a couple of them may not

00:40:21,369 --> 00:40:27,280
apply this top one about the default

00:40:25,089 --> 00:40:29,710
template file and like you have that

00:40:27,280 --> 00:40:31,510
hierarchy of template files that that

00:40:29,710 --> 00:40:34,270
are applied and like greater and greater

00:40:31,510 --> 00:40:35,910
specificity and you've skipped one one

00:40:34,270 --> 00:40:38,710
doesn't exist somewhere down the chain

00:40:35,910 --> 00:40:40,720
Drupal used to like not not grab the

00:40:38,710 --> 00:40:42,790
lower one but i think i think that

00:40:40,720 --> 00:40:44,320
started i think they fixed that even

00:40:42,790 --> 00:40:48,700
like in the latest Drupal 6 I should

00:40:44,320 --> 00:40:51,099
probably take that out and then some of

00:40:48,700 --> 00:40:54,250
these things are really kind of browsing

00:40:51,099 --> 00:40:56,800
and web type things in general like

00:40:54,250 --> 00:41:00,250
limits on the number of CSS files in IE

00:40:56,800 --> 00:41:05,140
and typography and an appearance

00:41:00,250 --> 00:41:09,310
problems like that I would make kind of

00:41:05,140 --> 00:41:12,160
a general observation that you know the

00:41:09,310 --> 00:41:14,550
web with JavaScript and other types of

00:41:12,160 --> 00:41:17,380
very interactive type things as sort of

00:41:14,550 --> 00:41:19,240
becoming a very distributed system and

00:41:17,380 --> 00:41:21,760
distributed systems are notoriously hard

00:41:19,240 --> 00:41:24,190
to debug and to replicate problems in

00:41:21,760 --> 00:41:26,290
and you know as we start doing things

00:41:24,190 --> 00:41:28,750
like having features on Drupal websites

00:41:26,290 --> 00:41:31,119
that are really just a JavaScript that

00:41:28,750 --> 00:41:33,040
drag grabs a bit of JSON somewhere and

00:41:31,119 --> 00:41:36,400
uses its own template files to display

00:41:33,040 --> 00:41:38,140
it and crazy things like that there's

00:41:36,400 --> 00:41:39,780
like it's like the front end of the

00:41:38,140 --> 00:41:42,540
system is growing out and complex

00:41:39,780 --> 00:41:44,070
and eventually we're going to spend a

00:41:42,540 --> 00:41:52,020
lot of our time out there chasing bugs

00:41:44,070 --> 00:41:56,130
as well put a separate slide on

00:41:52,020 --> 00:41:58,260
performance and one thing and I thought

00:41:56,130 --> 00:42:00,320
of this slide when Eric was giving his

00:41:58,260 --> 00:42:03,750
talk on performance and site-building

00:42:00,320 --> 00:42:05,490
and particularly like the one thing that

00:42:03,750 --> 00:42:07,860
he said that really clicked with me so

00:42:05,490 --> 00:42:10,440
when he said keep a record of your

00:42:07,860 --> 00:42:13,020
performance numbers that you know when

00:42:10,440 --> 00:42:14,370
they got bad versus when like the

00:42:13,020 --> 00:42:20,280
customer just decided to have higher

00:42:14,370 --> 00:42:22,320
standards you know and i think you know

00:42:20,280 --> 00:42:24,650
most developers are a little bit leery

00:42:22,320 --> 00:42:27,660
of any kind of performance debugging and

00:42:24,650 --> 00:42:30,000
I think when it comes down to like the

00:42:27,660 --> 00:42:31,770
core reason why they have bad

00:42:30,000 --> 00:42:35,700
experiences debugging performance is

00:42:31,770 --> 00:42:37,470
they they don't have a very good way of

00:42:35,700 --> 00:42:39,320
replicating the problem so their

00:42:37,470 --> 00:42:41,850
experience of performance debugging is

00:42:39,320 --> 00:42:45,780
change something and hope people quit

00:42:41,850 --> 00:42:48,090
complaining right and so key parts of

00:42:45,780 --> 00:42:50,720
performance debugging is you know when

00:42:48,090 --> 00:42:52,980
you're debugging normal code you can

00:42:50,720 --> 00:42:56,040
replicate the problem by clicking the

00:42:52,980 --> 00:42:57,150
link and you can you know test to see if

00:42:56,040 --> 00:42:59,700
the problem is still there with your

00:42:57,150 --> 00:43:01,440
eyes right so you have to realize you

00:42:59,700 --> 00:43:04,790
can do the same thing in performance but

00:43:01,440 --> 00:43:08,060
you replicate the problem by running a

00:43:04,790 --> 00:43:10,290
something that loads a lot of URLs or

00:43:08,060 --> 00:43:14,670
something like load storm that kind of

00:43:10,290 --> 00:43:16,230
you can set up that to use a lot of

00:43:14,670 --> 00:43:17,610
different logged in users at wants to

00:43:16,230 --> 00:43:19,470
log into your site or something like

00:43:17,610 --> 00:43:22,530
that that's the equivalent of just

00:43:19,470 --> 00:43:24,420
clicking the link right and then the

00:43:22,530 --> 00:43:27,750
equivalent of seeing the problem there

00:43:24,420 --> 00:43:30,240
is sometimes looking at my scale logs or

00:43:27,750 --> 00:43:34,230
top or some other metric that's kind of

00:43:30,240 --> 00:43:35,250
like hidden in the system maybe maybe

00:43:34,230 --> 00:43:40,280
you need to look a little bit further

00:43:35,250 --> 00:43:46,470
than just like measuring load times but

00:43:40,280 --> 00:43:47,910
um but the key point is that the reason

00:43:46,470 --> 00:43:50,309
why people are leery of that just

00:43:47,910 --> 00:43:52,769
because they don't realize that you can

00:43:50,309 --> 00:43:56,339
back into the same did the same

00:43:52,769 --> 00:43:58,769
debugging mode of change something test

00:43:56,339 --> 00:44:00,630
change something tests you know undo it

00:43:58,769 --> 00:44:02,189
try something else as long as you can

00:44:00,630 --> 00:44:04,109
replicate the problem and what's most

00:44:02,189 --> 00:44:05,969
frustrating about performance things is

00:44:04,109 --> 00:44:07,829
people don't know how to do it and so

00:44:05,969 --> 00:44:09,809
they're kind of sitting here throw that

00:44:07,829 --> 00:44:14,519
over the fence and see if they they

00:44:09,809 --> 00:44:17,430
still keep complaining and I recently

00:44:14,519 --> 00:44:19,759
did some stuff using lodestar which has

00:44:17,430 --> 00:44:22,109
kind of a nice simple web interface for

00:44:19,759 --> 00:44:23,549
you know putting in the URLs you want it

00:44:22,109 --> 00:44:25,229
to hit and specifying how many

00:44:23,549 --> 00:44:28,380
concurrent users you can do logged in

00:44:25,229 --> 00:44:31,890
users and so on for a certain amount of

00:44:28,380 --> 00:44:34,380
stuff it's it's free and then but you

00:44:31,890 --> 00:44:35,910
can like buy just one month of the

00:44:34,380 --> 00:44:37,650
service if you need to pound something

00:44:35,910 --> 00:44:39,689
more for something like on the order of

00:44:37,650 --> 00:44:43,920
30 bucks 200 bucks or something

00:44:39,689 --> 00:44:46,709
depending on how how much you want and

00:44:43,920 --> 00:44:49,979
so that's that's that's well within like

00:44:46,709 --> 00:44:57,449
the you know the ability if you have to

00:44:49,979 --> 00:45:01,319
do that for performance testing I really

00:44:57,449 --> 00:45:04,410
like that the XH prof module in Drupal

00:45:01,319 --> 00:45:06,989
and as a way of like looking at specific

00:45:04,410 --> 00:45:08,609
problems in code I think everybody

00:45:06,989 --> 00:45:10,380
should like check it out at least once

00:45:08,609 --> 00:45:12,719
it's a really great thing put together

00:45:10,380 --> 00:45:15,749
mostly by marks on a bomb that actually

00:45:12,719 --> 00:45:17,549
up and essentially you can you can have

00:45:15,749 --> 00:45:19,140
a URL so it goes to a view that's slow

00:45:17,549 --> 00:45:20,670
and it gives you a link down at the

00:45:19,140 --> 00:45:22,799
bottom which automatically gives you

00:45:20,670 --> 00:45:25,380
like the PHP call tree of which

00:45:22,799 --> 00:45:27,089
functions took the most time and you can

00:45:25,380 --> 00:45:29,609
click and browse through that and sort

00:45:27,089 --> 00:45:31,859
of a javascript ajax e-way and focus

00:45:29,609 --> 00:45:34,920
down upon particular functions that are

00:45:31,859 --> 00:45:38,009
taking a long time or realize like hey

00:45:34,920 --> 00:45:40,709
why is there no cache get function in

00:45:38,009 --> 00:45:42,809
here ever or something like that and

00:45:40,709 --> 00:45:45,390
it's it's really slick it's worth

00:45:42,809 --> 00:45:48,569
checking out another thing that I've

00:45:45,390 --> 00:45:51,150
sometimes done is some of the debugging

00:45:48,569 --> 00:45:53,880
I do is often figuring out why varnish

00:45:51,150 --> 00:45:56,670
isn't caching something and I end up you

00:45:53,880 --> 00:45:58,289
know instead of doing my print are in

00:45:56,670 --> 00:45:58,910
the code that throws out some bit of

00:45:58,289 --> 00:46:01,339
debugging

00:45:58,910 --> 00:46:04,880
what I do is I do a Drupal set header

00:46:01,339 --> 00:46:07,970
and like there's an if-then somewhere

00:46:04,880 --> 00:46:10,670
this is like if something exists deliver

00:46:07,970 --> 00:46:12,559
the cache copy else you know compute the

00:46:10,670 --> 00:46:15,049
copy and put it in cash and deliver that

00:46:12,559 --> 00:46:17,329
copy and then I can put different things

00:46:15,049 --> 00:46:20,569
in each one so I can sit here and reload

00:46:17,329 --> 00:46:22,069
something and and confirm whether the

00:46:20,569 --> 00:46:25,670
second time it's getting it from the

00:46:22,069 --> 00:46:28,339
cache and by putting that in the header

00:46:25,670 --> 00:46:31,819
and then using like the live HTTP

00:46:28,339 --> 00:46:33,859
headers thing in Firefox yeah I'm not

00:46:31,819 --> 00:46:40,789
I'm not throwing stuff out on the page

00:46:33,859 --> 00:46:42,710
it's a little bit easier yeah so I think

00:46:40,789 --> 00:46:44,059
the takeaway message there is is that

00:46:42,710 --> 00:46:45,319
performance debugging can be like any

00:46:44,059 --> 00:46:47,270
other debugging you just have to realize

00:46:45,319 --> 00:46:50,650
that if to be a little bit more

00:46:47,270 --> 00:46:54,190
sophisticated how you replicate things

00:46:50,650 --> 00:46:57,020
and this is something I think you will

00:46:54,190 --> 00:47:01,339
kind of gather if you listen to a lot of

00:46:57,020 --> 00:47:03,799
war stories about bad bugs the ones that

00:47:01,339 --> 00:47:05,390
that soak up the most ridiculous amounts

00:47:03,799 --> 00:47:07,220
of time and produce the most immense

00:47:05,390 --> 00:47:09,589
amounts of frustration or when you have

00:47:07,220 --> 00:47:11,690
two components of the system that you or

00:47:09,589 --> 00:47:13,789
each quote unquote bug free but somehow

00:47:11,690 --> 00:47:16,190
working together they don't work right

00:47:13,789 --> 00:47:18,410
and what happens here is you're trying

00:47:16,190 --> 00:47:19,430
to to do the divide and conquer right

00:47:18,410 --> 00:47:22,490
you're trying to split this into two

00:47:19,430 --> 00:47:24,020
different things and the bug is somehow

00:47:22,490 --> 00:47:27,020
like straddling where you're trying to

00:47:24,020 --> 00:47:33,010
cut it right and it won't get in there

00:47:27,020 --> 00:47:36,559
and so a lot of a lot of these deal with

00:47:33,010 --> 00:47:39,500
external service requests or buggy api's

00:47:36,559 --> 00:47:42,890
are just miss using the API because you

00:47:39,500 --> 00:47:44,690
didn't read the API very much the api

00:47:42,890 --> 00:47:47,180
specification very much or it wasn't

00:47:44,690 --> 00:47:49,460
documented at all and that type of thing

00:47:47,180 --> 00:47:51,710
i think a pattern is that more and more

00:47:49,460 --> 00:47:55,400
of the websites i work on seem to be

00:47:51,710 --> 00:47:58,760
using a lot of external services and and

00:47:55,400 --> 00:48:00,440
that's like a ripe area for hard to

00:47:58,760 --> 00:48:02,960
reproduce bugs because sometimes you

00:48:00,440 --> 00:48:05,150
can't control the other end and sort of

00:48:02,960 --> 00:48:07,549
replicate it over and over again so i

00:48:05,150 --> 00:48:09,260
can be very frustrating theme and module

00:48:07,549 --> 00:48:11,930
interactions are kind of a classic one

00:48:09,260 --> 00:48:12,290
another classic one is module Wade's you

00:48:11,930 --> 00:48:15,380
have

00:48:12,290 --> 00:48:17,660
thing where one hook kind of overwrites

00:48:15,380 --> 00:48:19,820
what another hook was supposed to do and

00:48:17,660 --> 00:48:21,410
if you like swap the order that the

00:48:19,820 --> 00:48:24,380
hooks are run in then then it works

00:48:21,410 --> 00:48:29,750
right and night that can be very tedious

00:48:24,380 --> 00:48:32,780
to track down there is a scene there is

00:48:29,750 --> 00:48:34,280
a develop module thing again that will

00:48:32,780 --> 00:48:36,140
show you all the weights on the model on

00:48:34,280 --> 00:48:37,730
the the modules page that all the

00:48:36,140 --> 00:48:39,830
modules have so sometimes that can help

00:48:37,730 --> 00:48:41,570
you and checking things out and

00:48:39,830 --> 00:48:46,250
adjusting the weights up or down to kind

00:48:41,570 --> 00:48:49,100
of do little tests another kind of

00:48:46,250 --> 00:48:52,280
performance related thing that that is

00:48:49,100 --> 00:48:53,960
an interaction type bug is something

00:48:52,280 --> 00:48:56,030
that looks completely innocuous that

00:48:53,960 --> 00:48:58,840
someone does clears all the caches and

00:48:56,030 --> 00:49:01,100
causes this other thing to become

00:48:58,840 --> 00:49:04,160
unreasonably slow or cause some big

00:49:01,100 --> 00:49:06,200
problem right so so so people are saying

00:49:04,160 --> 00:49:07,700
that oh you know everyone comes in the

00:49:06,200 --> 00:49:10,370
morning and loads their calendars and

00:49:07,700 --> 00:49:11,420
and then it seems to crash and you're

00:49:10,370 --> 00:49:13,370
trying to figure out what why aren't

00:49:11,420 --> 00:49:15,440
those all Christ or whatever and it's

00:49:13,370 --> 00:49:17,810
like actually one person who comes in

00:49:15,440 --> 00:49:19,790
every morning like you know changes

00:49:17,810 --> 00:49:21,200
something on their calendar like adds an

00:49:19,790 --> 00:49:25,010
appointment if they have it or whatever

00:49:21,200 --> 00:49:26,870
and and it's that one little innocuous

00:49:25,010 --> 00:49:29,660
you know Oh point one percent of the

00:49:26,870 --> 00:49:31,820
traffic is doing something that that

00:49:29,660 --> 00:49:33,680
through the interaction of caches

00:49:31,820 --> 00:49:36,920
between different parts of the system

00:49:33,680 --> 00:49:46,760
you know causes an effect to to spread

00:49:36,920 --> 00:49:49,040
you hadn't expected um

00:49:46,760 --> 00:49:51,290
when I've given this talk a bunch of

00:49:49,040 --> 00:49:53,720
times and kind of as i did it i would

00:49:51,290 --> 00:49:58,100
like looking and get various books on

00:49:53,720 --> 00:49:59,360
debugging and so on if you most of the

00:49:58,100 --> 00:50:02,030
books that are supposedly about

00:49:59,360 --> 00:50:03,380
debugging aren't actually that good a

00:50:02,030 --> 00:50:05,300
lot of them are about just good

00:50:03,380 --> 00:50:06,470
development practices and and they're

00:50:05,300 --> 00:50:09,020
they're pretty good but they're not

00:50:06,470 --> 00:50:14,210
about debugging really and this one's

00:50:09,020 --> 00:50:16,160
sort of a very informal like like almost

00:50:14,210 --> 00:50:18,080
cheesy type book like I said it's got a

00:50:16,160 --> 00:50:20,540
lot of cartoon pictures in it and it's

00:50:18,080 --> 00:50:22,220
written in a very anecdotal way but it's

00:50:20,540 --> 00:50:25,040
it's actually one of the best ones I

00:50:22,220 --> 00:50:27,770
think and and it it kind of distills

00:50:25,040 --> 00:50:28,880
down that hypothesis and testing kind of

00:50:27,770 --> 00:50:31,870
breaks it down a little bit differently

00:50:28,880 --> 00:50:35,570
into these nine rules or whatever it's a

00:50:31,870 --> 00:50:37,190
relatively cheap book um it's like I

00:50:35,570 --> 00:50:40,970
don't know like 20 bucks or something on

00:50:37,190 --> 00:50:42,680
amazon or maybe 30 where's a lot of the

00:50:40,970 --> 00:50:45,650
other books that I've purchased on on

00:50:42,680 --> 00:50:48,020
this or like you know sort of computer

00:50:45,650 --> 00:50:49,940
science type text books which costs 110

00:50:48,020 --> 00:50:51,740
dollars and so on and when I get into

00:50:49,940 --> 00:50:54,290
them like they're not really that useful

00:50:51,740 --> 00:50:55,790
they have like academic ideas about

00:50:54,290 --> 00:50:59,660
automatically finding bugs and stuff

00:50:55,790 --> 00:51:01,880
like that if you look down through these

00:50:59,660 --> 00:51:03,440
there's you know the understand the

00:51:01,880 --> 00:51:07,370
system is sort of the hypothesis thing

00:51:03,440 --> 00:51:08,900
make it fails being able to replicate it

00:51:07,370 --> 00:51:11,120
has quit thinking and look the whole

00:51:08,900 --> 00:51:12,920
divide and conquer thing and the

00:51:11,120 --> 00:51:15,110
changing only one thing at a time and

00:51:12,920 --> 00:51:16,130
then undoing it and keeping an audit

00:51:15,110 --> 00:51:18,200
trail so you know what you've done

00:51:16,130 --> 00:51:19,310
that's sort of like keeping track in the

00:51:18,200 --> 00:51:21,860
system and making sure you're always

00:51:19,310 --> 00:51:23,720
looking on at a fresh thing that's where

00:51:21,860 --> 00:51:27,200
I got the phrase check the plug from for

00:51:23,720 --> 00:51:29,420
doing like the the cheap test and I

00:51:27,200 --> 00:51:32,630
think the final one you know if you

00:51:29,420 --> 00:51:35,210
didn't fix it it ain't fixed is its kind

00:51:32,630 --> 00:51:37,430
of key like if you just clear the cache

00:51:35,210 --> 00:51:39,740
and people quit complaining you probably

00:51:37,430 --> 00:51:41,330
didn't fix a bug something's going to

00:51:39,740 --> 00:51:43,250
cause the cash to get out of sync again

00:51:41,330 --> 00:51:46,550
and people will be complaining again at

00:51:43,250 --> 00:51:47,900
some point at the end of a debugging

00:51:46,550 --> 00:51:50,630
process you should really sort of

00:51:47,900 --> 00:51:53,240
understand why the code put what it did

00:51:50,630 --> 00:51:54,980
on the screen and if you don't really

00:51:53,240 --> 00:51:57,230
understand that then you're probably

00:51:54,980 --> 00:51:59,560
didn't fully under it and make it make

00:51:57,230 --> 00:51:59,560
it right

00:52:00,210 --> 00:52:06,550
so normally i bring a couple copies this

00:52:04,060 --> 00:52:08,320
book and give them out and my copies are

00:52:06,550 --> 00:52:13,900
sitting on my desk at home unfortunately

00:52:08,320 --> 00:52:16,510
but but I will send you a copy of that

00:52:13,900 --> 00:52:18,130
book if you send me a story of a really

00:52:16,510 --> 00:52:20,170
interesting bug hunt in Drupal

00:52:18,130 --> 00:52:23,230
especially if I can use it in the talk

00:52:20,170 --> 00:52:24,400
like as an example of how like different

00:52:23,230 --> 00:52:26,320
things were checked that turned out to

00:52:24,400 --> 00:52:29,109
be wrong and how you got on the right

00:52:26,320 --> 00:52:30,970
path and violent and found it I'm kind

00:52:29,109 --> 00:52:33,369
of collecting such anecdotes to see if I

00:52:30,970 --> 00:52:38,109
can you know put together some more

00:52:33,369 --> 00:52:40,930
interesting material and so kind of the

00:52:38,109 --> 00:52:42,820
takeaway points here are you know

00:52:40,930 --> 00:52:45,220
there's a strategy to coming up with the

00:52:42,820 --> 00:52:47,890
right guesses and tests and that's more

00:52:45,220 --> 00:52:50,410
important than you know being blazing

00:52:47,890 --> 00:52:53,410
fast and bi or knowing having X debug

00:52:50,410 --> 00:52:57,460
set up or any other trick is sort of the

00:52:53,410 --> 00:52:58,900
thought process the if you've been

00:52:57,460 --> 00:53:01,800
working on a bog for more than a day

00:52:58,900 --> 00:53:04,570
it's probably a weird interaction bug

00:53:01,800 --> 00:53:07,359
between two things that by themselves or

00:53:04,570 --> 00:53:08,470
bug free and and at some point you

00:53:07,359 --> 00:53:10,720
realize hey been working on this for a

00:53:08,470 --> 00:53:13,150
while I should probably be thinking

00:53:10,720 --> 00:53:16,020
about things talking to each other or

00:53:13,150 --> 00:53:19,589
something like that or API type stuff

00:53:16,020 --> 00:53:22,510
and finally if you just sort of

00:53:19,589 --> 00:53:23,830
consciously remember that debugging is

00:53:22,510 --> 00:53:26,800
sort of a different process and pay

00:53:23,830 --> 00:53:28,540
attention to how you do it you'll get

00:53:26,800 --> 00:53:29,710
you'll get better at it very quickly I

00:53:28,540 --> 00:53:32,140
think a lot of people don't get better

00:53:29,710 --> 00:53:35,230
at it because they don't really view it

00:53:32,140 --> 00:53:37,330
as they don't really think of it as any

00:53:35,230 --> 00:53:39,130
different than like having bad traffic

00:53:37,330 --> 00:53:40,510
on the way to work it's like you know a

00:53:39,130 --> 00:53:44,980
bunch of stuff happened that stopped me

00:53:40,510 --> 00:53:46,810
from writing code today but if that

00:53:44,980 --> 00:53:49,270
stuff was that you were trying to debug

00:53:46,810 --> 00:53:51,339
some problem and you remember that and

00:53:49,270 --> 00:53:53,710
you think of particular ways to debug

00:53:51,339 --> 00:53:55,720
problems then you'll be able to get

00:53:53,710 --> 00:53:59,410
through those things much quicker it's

00:53:55,720 --> 00:54:01,930
um it's not hard to learn it is hard to

00:53:59,410 --> 00:54:03,970
teach though I mean you can't just give

00:54:01,930 --> 00:54:06,790
someone a list of steps you know those

00:54:03,970 --> 00:54:08,500
that little hypothesized test and repeat

00:54:06,790 --> 00:54:10,940
loop or whatever like it isn't a

00:54:08,500 --> 00:54:14,240
computer program you can just follow

00:54:10,940 --> 00:54:15,710
um but you can but you definitely can

00:54:14,240 --> 00:54:16,970
get better at it I mean I've seen many

00:54:15,710 --> 00:54:20,000
people I've got much better at it myself

00:54:16,970 --> 00:54:22,790
just from thinking about it and you know

00:54:20,000 --> 00:54:24,290
if you work with other programmers you

00:54:22,790 --> 00:54:27,470
know you'll realize as a group you get

00:54:24,290 --> 00:54:29,810
better at it so it's it's definitely

00:54:27,470 --> 00:54:34,040
something that you can save a lot of

00:54:29,810 --> 00:54:37,940
hours out of your week with also I put

00:54:34,040 --> 00:54:39,680
down a link to the camp survey here that

00:54:37,940 --> 00:54:41,359
goes to a web form where they're like

00:54:39,680 --> 00:54:43,550
asking for feedback on all sorts of

00:54:41,359 --> 00:54:48,470
various things so at some point today

00:54:43,550 --> 00:54:50,900
you should get around to that are there

00:54:48,470 --> 00:54:58,630
any questions particularly like stories

00:54:50,900 --> 00:54:58,630
of interesting bugs yes

00:55:06,760 --> 00:55:11,900
the question is really good what do you

00:55:09,560 --> 00:55:15,650
do at this point if you find a score

00:55:11,900 --> 00:55:18,079
Drupal 6 bug do you just fix it locally

00:55:15,650 --> 00:55:20,660
and move on I think the question is is

00:55:18,079 --> 00:55:23,599
no definitely not for Drupal 6 you can

00:55:20,660 --> 00:55:25,430
report bugs for Drupal 6 that people

00:55:23,599 --> 00:55:28,400
will look at them and fix them that is

00:55:25,430 --> 00:55:31,640
like actively being supported i would

00:55:28,400 --> 00:55:34,790
say that even for even if for some

00:55:31,640 --> 00:55:37,069
reason you have a drupal 4.7 site that

00:55:34,790 --> 00:55:39,670
for some reason will never be migrated

00:55:37,069 --> 00:55:43,910
or whatever they exist out there

00:55:39,670 --> 00:55:46,490
hundreds of them may be more hip and you

00:55:43,910 --> 00:55:48,319
find something in it and you figure it's

00:55:46,490 --> 00:55:50,839
actually a Drupal core whatever you

00:55:48,319 --> 00:55:54,290
should at least in some way get that on

00:55:50,839 --> 00:55:59,230
drupal org or on the web in general that

00:55:54,290 --> 00:56:02,380
you did that with the patch file because

00:55:59,230 --> 00:56:04,970
not only will it help other people but

00:56:02,380 --> 00:56:06,349
you may at least get some feedback that

00:56:04,970 --> 00:56:07,910
says like no actually that isn't a bug

00:56:06,349 --> 00:56:09,290
that's an option you didn't know about

00:56:07,910 --> 00:56:12,589
you need to change somewhere else or

00:56:09,290 --> 00:56:15,349
something like that so I would even far

00:56:12,589 --> 00:56:17,780
you know relatively Drupal 6 is

00:56:15,349 --> 00:56:20,839
supported right now but even for

00:56:17,780 --> 00:56:22,940
unsupported versus a Drupal i would i

00:56:20,839 --> 00:56:25,940
would very much avoid ever like kind of

00:56:22,940 --> 00:56:28,040
making changes and you know a box you

00:56:25,940 --> 00:56:30,109
know in a basement without communication

00:56:28,040 --> 00:56:32,690
out there at least throw it over the

00:56:30,109 --> 00:56:35,359
fence and see if a couple of weeks later

00:56:32,690 --> 00:56:37,609
like someone you know they'll mark that

00:56:35,359 --> 00:56:39,410
issue as won't fix because it applies

00:56:37,609 --> 00:56:41,329
the wrong version and then like sometime

00:56:39,410 --> 00:56:43,250
down the road someone may post a comment

00:56:41,329 --> 00:56:44,750
that says like yeah this always used to

00:56:43,250 --> 00:56:49,849
happen on Drupal 7 what you do is this

00:56:44,750 --> 00:56:52,750
you know or something like that right so

00:56:49,849 --> 00:56:54,410
I would definitely not give up the

00:56:52,750 --> 00:56:58,190
communication with the development

00:56:54,410 --> 00:57:00,530
community aspect of it I think unless

00:56:58,190 --> 00:57:02,450
you're in the process of ripping all the

00:57:00,530 --> 00:57:07,550
data about that out of that and about to

00:57:02,450 --> 00:57:10,670
shut it down then maybe but yeah Drupal

00:57:07,550 --> 00:57:14,230
6 is still supported and having you know

00:57:10,670 --> 00:57:14,230
we're the releases and everything and

00:57:14,650 --> 00:57:18,099
there are people starting new sights on

00:57:17,510 --> 00:57:21,160
Drupal sick

00:57:18,099 --> 00:57:25,229
all the time which might not be a good

00:57:21,160 --> 00:57:25,229
idea in some cases but it's happening

00:57:30,509 --> 00:57:33,509
yeah

00:57:43,060 --> 00:57:46,060
right

00:58:01,819 --> 00:58:07,249
yeah that that was a good tip what he

00:58:04,459 --> 00:58:11,089
was saying is that if your arm if if

00:58:07,249 --> 00:58:12,920
you're tracking down CSS and JavaScript

00:58:11,089 --> 00:58:14,869
problems and you're trying to figure out

00:58:12,920 --> 00:58:17,239
if they're old versions are being

00:58:14,869 --> 00:58:20,299
improperly cached on the CDN one thing

00:58:17,239 --> 00:58:23,089
you can do is just add a URL query of

00:58:20,299 --> 00:58:26,329
some type 2 to the in that so you do

00:58:23,089 --> 00:58:27,469
like ? you know V equals and some

00:58:26,329 --> 00:58:29,839
version number or something like that

00:58:27,469 --> 00:58:32,660
and what that'll do is that will cause

00:58:29,839 --> 00:58:34,670
the CDN to see that as a new file not

00:58:32,660 --> 00:58:37,039
cash it and then it will go through back

00:58:34,670 --> 00:58:39,140
to your Drupal site and you'll be

00:58:37,039 --> 00:58:42,709
getting this the version from the Drupal

00:58:39,140 --> 00:58:44,029
site and then you know and then you can

00:58:42,709 --> 00:58:47,630
see if the problem is still there and

00:58:44,029 --> 00:58:49,459
then if it is still there I would you

00:58:47,630 --> 00:58:52,279
know further do the test I've actually

00:58:49,459 --> 00:58:54,650
download the two files to the desktop

00:58:52,279 --> 00:58:56,779
and compare them with death and say yes

00:58:54,650 --> 00:59:00,739
you know if I go just straight to the

00:58:56,779 --> 00:59:03,559
CDN for you know views underscore

00:59:00,739 --> 00:59:06,829
whatever that CSS I get this and if I

00:59:03,559 --> 00:59:11,329
pull it off my drupal site I get bad so

00:59:06,829 --> 00:59:14,690
I know that's why the problem is another

00:59:11,329 --> 00:59:16,999
similar thing is sometimes people mess

00:59:14,690 --> 00:59:21,199
around with their hosts file to make it

00:59:16,999 --> 00:59:25,190
take the CDN IP and just send it back to

00:59:21,199 --> 00:59:26,779
their development thing that's one of

00:59:25,190 --> 00:59:31,039
those changes that people tend to do and

00:59:26,779 --> 00:59:34,009
leave on and forget which can cannot be

00:59:31,039 --> 00:59:36,940
good so yeah that's it that's a very

00:59:34,009 --> 00:59:36,940
good that's very good tip

00:59:41,130 --> 00:59:44,280
anyone else

00:59:46,520 --> 00:59:52,550
I will you know be around for another

00:59:49,190 --> 00:59:55,250
hour so if you have any ideas come and

00:59:52,550 --> 00:59:57,490
tell me are you know send me Twitter or

00:59:55,250 --> 01:00:00,620
email or whatever I do kind of you know

00:59:57,490 --> 01:00:05,720
collect debugging nightmare stories so

01:00:00,620 --> 01:00:08,510
yes it's some at Rob gr let me see if

01:00:05,720 --> 01:00:15,190
it's on the next slide I'll just go back

01:00:08,510 --> 01:00:15,190
to the first one there it is

01:00:19,100 --> 01:00:26,190
say I think they're there is a lot of

01:00:22,910 --> 01:00:28,200
kind of mental benefit in trading

01:00:26,190 --> 01:00:30,900
stories and if you work with a team of

01:00:28,200 --> 01:00:34,980
programmers you should sort of trade

01:00:30,900 --> 01:00:36,300
those stories and and also trade them

01:00:34,980 --> 01:00:37,980
with the people who aren't actually

01:00:36,300 --> 01:00:40,200
programmers like those people who talk

01:00:37,980 --> 01:00:41,700
to the customers who collect that

01:00:40,200 --> 01:00:44,190
initial bug report and stuff like that

01:00:41,700 --> 01:00:45,900
because having some one of the points I

01:00:44,190 --> 01:00:47,880
made is I having smart people there can

01:00:45,900 --> 01:00:50,670
sometimes really save you a lot of

01:00:47,880 --> 01:00:53,700
timing it's hard to tell how much but

01:00:50,670 --> 01:00:55,890
you know I I suspect certain people I've

01:00:53,700 --> 01:00:58,230
worked with were it probably you know

01:00:55,890 --> 01:01:01,080
what worth several developers just to

01:00:58,230 --> 01:01:02,910
the fact that they were very kind of

01:01:01,080 --> 01:01:05,790
meticulous without overburdening the

01:01:02,910 --> 01:01:11,850
customer or pissing them off and we're

01:01:05,790 --> 01:01:14,780
really good at that alright thanks I

01:01:11,850 --> 01:01:14,780
will be around

01:01:26,000 --> 01:01:31,049
when we created asterisk over a decade

01:01:28,710 --> 01:01:33,029
ago we could not have imagined that

01:01:31,049 --> 01:01:35,220
asterisk would not only become the most

01:01:33,029 --> 01:01:37,349
widely adopted open source communication

01:01:35,220 --> 01:01:39,390
software on the planet but that it would

01:01:37,349 --> 01:01:41,910
impact the entire industry in the way

01:01:39,390 --> 01:01:43,890
that it has today asterisk has found its

01:01:41,910 --> 01:01:46,529
way in the more than 170 countries and

01:01:43,890 --> 01:01:48,480
virtually every fortune 1000 company the

01:01:46,529 --> 01:01:50,549
success of asterisk has enabled a

01:01:48,480 --> 01:01:51,990
transition of power from the hands of

01:01:50,549 --> 01:01:54,240
the traditional proprietary phone

01:01:51,990 --> 01:01:56,640
vendors into the hands of the users and

01:01:54,240 --> 01:01:58,589
administrators of phone systems using

01:01:56,640 --> 01:01:59,819
this power our customers have created

01:01:58,589 --> 01:02:01,769
all sorts of business changing

01:01:59,819 --> 01:02:03,599
applications from small office phone

01:02:01,769 --> 01:02:06,119
systems to mission-critical call centers

01:02:03,599 --> 01:02:07,740
the international carrier networks in

01:02:06,119 --> 01:02:09,510
fact there's even an entire country

01:02:07,740 --> 01:02:11,910
those communications of a structure runs

01:02:09,510 --> 01:02:14,039
on esters the gym has always been about

01:02:11,910 --> 01:02:15,750
creating technology that expands

01:02:14,039 --> 01:02:17,910
communications capabilities in ways that

01:02:15,750 --> 01:02:19,109
we could never have imagined and that's

01:02:17,910 --> 01:02:21,869
part of what's game-changing about

01:02:19,109 --> 01:02:24,210
Digium today we're doing it again this

01:02:21,869 --> 01:02:26,309
time by introducing a new family of HD

01:02:24,210 --> 01:02:28,410
IP phones that extends control of the

01:02:26,309 --> 01:02:30,180
user all the way to the desktop the

01:02:28,410 --> 01:02:31,890
launch of these new products represents

01:02:30,180 --> 01:02:33,990
the next phase indigenous history of

01:02:31,890 --> 01:02:36,390
innovation these are the first and only

01:02:33,990 --> 01:02:38,099
IP phones designed to fully leverage the

01:02:36,390 --> 01:02:39,630
power of estrus when we first discussed

01:02:38,099 --> 01:02:41,670
our expectations for building a family

01:02:39,630 --> 01:02:43,829
of phones for use with asterisk our

01:02:41,670 --> 01:02:45,569
requirements were pretty simple we asked

01:02:43,829 --> 01:02:47,220
the team to build the phones such that

01:02:45,569 --> 01:02:49,410
they were easy to install integrate

01:02:47,220 --> 01:02:51,240
provision and use I think you'll soon

01:02:49,410 --> 01:02:53,819
agree our engineers have delivered on

01:02:51,240 --> 01:02:55,440
that goal user feedback is validating

01:02:53,819 --> 01:02:57,569
that when it comes to operation with

01:02:55,440 --> 01:03:00,000
Pastor space systems including our own

01:02:57,569 --> 01:03:02,549
Switchvox based product these are the

01:03:00,000 --> 01:03:03,869
easiest to use best integrated most

01:03:02,549 --> 01:03:06,450
interoperable products on the market

01:03:03,869 --> 01:03:08,450
today the digitally phones will

01:03:06,450 --> 01:03:10,500
initially include three IP des hommes

01:03:08,450 --> 01:03:12,450
uniquely designed to complement any

01:03:10,500 --> 01:03:14,309
asterisk or switch box based solution

01:03:12,450 --> 01:03:16,980
these phones are different for a number

01:03:14,309 --> 01:03:19,619
of reasons first there is clue sively

01:03:16,980 --> 01:03:21,059
designed for use with esters secondly

01:03:19,619 --> 01:03:22,670
we've made it really easy to

01:03:21,059 --> 01:03:25,049
autodiscover and provision the phones

01:03:22,670 --> 01:03:26,759
next we've made it easy for the phones

01:03:25,049 --> 01:03:28,470
to access information inside of

01:03:26,759 --> 01:03:29,180
asterisks allowing tight coupling

01:03:28,470 --> 01:03:31,700
between the

01:03:29,180 --> 01:03:33,589
application and the phone additionally

01:03:31,700 --> 01:03:35,900
we've created an applications engine

01:03:33,589 --> 01:03:38,089
that allows users and developers to

01:03:35,900 --> 01:03:40,819
create and run their own apps on the

01:03:38,089 --> 01:03:42,920
phone and finally we've done all of this

01:03:40,819 --> 01:03:44,630
at a very compelling price point at

01:03:42,920 --> 01:03:46,849
Digium we're always thinking of ways to

01:03:44,630 --> 01:03:49,220
give our customers the best value in

01:03:46,849 --> 01:03:50,510
business phone systems and also give

01:03:49,220 --> 01:03:52,609
them the power to create their own

01:03:50,510 --> 01:03:54,410
solutions or eating communications

01:03:52,609 --> 01:03:56,089
challenge will continue to push the

01:03:54,410 --> 01:03:57,859
boundaries not only to make Astra's

01:03:56,089 --> 01:03:59,720
cooler faster and more technologically

01:03:57,859 --> 01:04:02,180
feature-rich but to make asterisk and

01:03:59,720 --> 01:04:03,500
communications even easier and together

01:04:02,180 --> 01:04:06,400
we'll change the way the world

01:04:03,500 --> 01:04:06,400
communication again

01:04:17,390 --> 01:04:24,210
how's that sigh every way this is the

01:04:20,970 --> 01:04:26,369
way to better utilize all your resources

01:04:24,210 --> 01:04:29,820
and it makes managing all your resources

01:04:26,369 --> 01:04:33,650
pretty easy all of the innovation is

01:04:29,820 --> 01:04:37,170
happening in open source the

01:04:33,650 --> 01:04:38,970
collaborative nature and of the you know

01:04:37,170 --> 01:04:40,890
of the community and the speed at which

01:04:38,970 --> 01:04:43,079
these are these you know these

01:04:40,890 --> 01:04:45,420
deficiencies these bugs are getting

01:04:43,079 --> 01:04:47,970
discovered and then fixed is it I think

01:04:45,420 --> 01:04:50,670
that really shows the power of the you

01:04:47,970 --> 01:04:52,320
know of the open source community it is

01:04:50,670 --> 01:04:56,520
global and it's definitely because of

01:04:52,320 --> 01:05:02,849
the users community people are extremely

01:04:56,520 --> 01:05:04,740
friendly and always ready to help if you

01:05:02,849 --> 01:05:07,020
go on tire see any day you'll see these

01:05:04,740 --> 01:05:08,750
guys helping each other out and they're

01:05:07,020 --> 01:05:11,460
all doing it like in a selfless manner

01:05:08,750 --> 01:05:14,450
the product is transparent for everyone

01:05:11,460 --> 01:05:17,099
everyone can look at the code base

01:05:14,450 --> 01:05:19,109
everyone can see how growth dark is

01:05:17,099 --> 01:05:24,990
being built nothing nothing is

01:05:19,109 --> 01:05:27,630
proprietary everything is open in many

01:05:24,990 --> 01:05:31,829
ways it's absolutely vital to the the

01:05:27,630 --> 01:05:35,609
ongoing health CloudStack the most

01:05:31,829 --> 01:05:39,430
exciting event in recent memory for me

01:05:35,609 --> 01:05:42,160
was our first developer boot camp

01:05:39,430 --> 01:05:44,800
and our call gave people I gave you two

01:05:42,160 --> 01:05:48,760
weeks notice to come attend I was

01:05:44,800 --> 01:05:52,930
expecting 25 or 30 people so we ended up

01:05:48,760 --> 01:05:55,780
with 87 people and had to go get more

01:05:52,930 --> 01:05:58,300
chairs into the room twice everything

01:05:55,780 --> 01:06:01,630
within cloud computing is commodity and

01:05:58,300 --> 01:06:04,630
is open source and so I don't think that

01:06:01,630 --> 01:06:06,369
you will you'll see anywhere where open

01:06:04,630 --> 01:06:09,400
source is not pervasive in cloud

01:06:06,369 --> 01:06:11,950
computing and so i think it's i think

01:06:09,400 --> 01:06:13,480
it's an assumption i think when you talk

01:06:11,950 --> 01:06:14,589
about cloud computing you're really

01:06:13,480 --> 01:06:20,140
talking about open source cloud

01:06:14,589 --> 01:06:23,290
computing cloud sac is a robust solution

01:06:20,140 --> 01:06:25,690
for large deployments you have dozens of

01:06:23,290 --> 01:06:29,589
data centers and thousands of servers in

01:06:25,690 --> 01:06:32,260
each data centers these hardware is

01:06:29,589 --> 01:06:35,740
going to fail and CloudStack is designed

01:06:32,260 --> 01:06:38,470
to handle number one that mass scale

01:06:35,740 --> 01:06:41,619
number two it's designed to handle the

01:06:38,470 --> 01:06:44,170
failure that inevitably happens in large

01:06:41,619 --> 01:06:47,710
deployments started working on college

01:06:44,170 --> 01:06:51,069
attack over four years ago and it was

01:06:47,710 --> 01:06:53,740
the original set of people working on it

01:06:51,069 --> 01:06:57,849
had a background of delivering software

01:06:53,740 --> 01:07:02,079
telcos and service providers lots of QA

01:06:57,849 --> 01:07:05,710
lots of users actually using it high

01:07:02,079 --> 01:07:08,770
availability is a key feature multiple

01:07:05,710 --> 01:07:10,960
hypervisors support different network

01:07:08,770 --> 01:07:13,960
models we can pick up whatever suits you

01:07:10,960 --> 01:07:15,730
better while step management server can

01:07:13,960 --> 01:07:19,420
be deployed in different physical

01:07:15,730 --> 01:07:21,069
machines it definitely has a huge

01:07:19,420 --> 01:07:26,079
footprint it's being deployed everywhere

01:07:21,069 --> 01:07:28,630
there's a major movie studio that they

01:07:26,079 --> 01:07:31,960
were using cloudstack they were using it

01:07:28,630 --> 01:07:33,940
to transcode video and i thought that

01:07:31,960 --> 01:07:35,559
was terribly fascinating what i found

01:07:33,940 --> 01:07:38,829
more fascinating is what they did during

01:07:35,559 --> 01:07:41,619
lunch where they would spin up you know

01:07:38,829 --> 01:07:42,789
50 or 60 game servers then as soon as

01:07:41,619 --> 01:07:44,619
lunch was over they would this

01:07:42,789 --> 01:07:48,880
all the instances and go back to doing

01:07:44,619 --> 01:07:50,380
real work CloudStack is vast it touches

01:07:48,880 --> 01:07:52,449
so many different aspects and there's no

01:07:50,380 --> 01:07:54,849
one person that's kind of like a master

01:07:52,449 --> 01:07:58,959
of all those realms I think cloudstack

01:07:54,849 --> 01:08:01,179
as a project is going to be one of the

01:07:58,959 --> 01:08:05,229
leaders simply because it's some of the

01:08:01,179 --> 01:08:10,660
most feature fallen and and robust

01:08:05,229 --> 01:08:13,559
platforms out they were I don't senior

01:08:10,660 --> 01:08:13,559
living through the clouds dag

01:08:22,609 --> 01:08:24,670

YouTube URL: https://www.youtube.com/watch?v=kCP65aVGgkU


