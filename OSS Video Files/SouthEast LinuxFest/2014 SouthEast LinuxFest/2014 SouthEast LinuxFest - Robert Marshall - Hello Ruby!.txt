Title: 2014 SouthEast LinuxFest - Robert Marshall - Hello Ruby!
Publication date: 2015-04-26
Playlist: 2014 SouthEast LinuxFest
Description: 
	2014 SouthEast LinuxFest
Robert Marshall
Hello Ruby!
Captions: 
	00:00:00,000 --> 00:00:05,339
the following presentation was recorded

00:00:02,490 --> 00:00:08,189
the 2014 southeast linux fest in

00:00:05,339 --> 00:00:11,070
charlotte north carolina it is licensed

00:00:08,189 --> 00:00:14,880
under a creative commons license for

00:00:11,070 --> 00:00:18,180
more information visit www selfies linux

00:00:14,880 --> 00:00:19,710
pc org the southeast linux fest would

00:00:18,180 --> 00:00:22,740
like to thank the following diamond

00:00:19,710 --> 00:00:27,029
sponsors in 2014 for helping make these

00:00:22,740 --> 00:00:29,880
videos possible I think we've got

00:00:27,029 --> 00:00:32,099
everybody about time to start so we'll

00:00:29,880 --> 00:00:33,630
go ahead and get rolling so before we

00:00:32,099 --> 00:00:37,350
can start how many folks in here have

00:00:33,630 --> 00:00:40,140
never programmed for targeted one in the

00:00:37,350 --> 00:00:44,370
back ok how many folks are ever touched

00:00:40,140 --> 00:00:45,719
Ruby before ok couple so for you guys

00:00:44,370 --> 00:00:48,960
the first part of this is going to be

00:00:45,719 --> 00:00:51,750
review so I merely started my name is

00:00:48,960 --> 00:00:54,420
Robert Marshall I am a data architect by

00:00:51,750 --> 00:00:56,250
day and by night I am is he leads this

00:00:54,420 --> 00:00:58,590
is administrator for an online game

00:00:56,250 --> 00:01:01,100
called retro much so I have been doing a

00:00:58,590 --> 00:01:04,739
lot of scripting spend about 20 years

00:01:01,100 --> 00:01:06,770
and of course when you script you start

00:01:04,739 --> 00:01:09,180
off solving problems in my first problem

00:01:06,770 --> 00:01:12,090
was this lovely thing called matrix math

00:01:09,180 --> 00:01:14,520
started in college I hated them had to

00:01:12,090 --> 00:01:16,380
figure out a way to get by Fortran was

00:01:14,520 --> 00:01:19,650
the best thing but you can't be happy

00:01:16,380 --> 00:01:23,640
with one I got into another online game

00:01:19,650 --> 00:01:25,290
started 4th moved on a little bit one

00:01:23,640 --> 00:01:29,009
tweet my system and the base system for

00:01:25,290 --> 00:01:30,390
that moved on to c and c++ and you know

00:01:29,009 --> 00:01:32,490
kept going to the web because you have

00:01:30,390 --> 00:01:34,530
to have a website and my life kind of

00:01:32,490 --> 00:01:37,470
went on and there's this thing that you

00:01:34,530 --> 00:01:39,960
learn as you go that there's lots of

00:01:37,470 --> 00:01:41,880
languages to solve lots of problems but

00:01:39,960 --> 00:01:44,650
there's one problem it's how difficult

00:01:41,880 --> 00:01:46,960
to solve and that is

00:01:44,650 --> 00:01:48,400
and was it fun again you know you start

00:01:46,960 --> 00:01:51,250
off in that first problem that you solve

00:01:48,400 --> 00:01:52,810
its it's like magic you get through it

00:01:51,250 --> 00:01:54,610
and you figure it out and after a while

00:01:52,810 --> 00:01:58,960
everything starts to look the same but

00:01:54,610 --> 00:02:01,150
you go well do I use pearl oh wait I

00:01:58,960 --> 00:02:03,250
have to bolt on object orientation and I

00:02:01,150 --> 00:02:06,490
want to model something so I want to use

00:02:03,250 --> 00:02:10,810
Java I don't want to have the overhead

00:02:06,490 --> 00:02:12,550
with tomcat or whatever server you're

00:02:10,810 --> 00:02:15,250
going to put in there to run it so what

00:02:12,550 --> 00:02:17,860
are you going to do and that's why I ran

00:02:15,250 --> 00:02:19,420
into an article by this guy it was back

00:02:17,860 --> 00:02:22,680
about two thousand three was an old

00:02:19,420 --> 00:02:25,660
article he'd written for informant and

00:02:22,680 --> 00:02:27,430
he basically said that he looked all

00:02:25,660 --> 00:02:32,940
languages are out there he wasn't happy

00:02:27,430 --> 00:02:35,890
with them so he came up with a

00:02:32,940 --> 00:02:37,060
philosophy of conciseness that is he

00:02:35,890 --> 00:02:40,209
wanted a language that would do

00:02:37,060 --> 00:02:42,580
everything in his compact a manner as

00:02:40,209 --> 00:02:45,250
possible interview have written stuff a

00:02:42,580 --> 00:02:46,720
deal with text in see you know you end

00:02:45,250 --> 00:02:48,370
up with something about the size of this

00:02:46,720 --> 00:02:50,950
wall to get through a simple strength

00:02:48,370 --> 00:02:53,340
whereas in Perl it's a one-liner easy

00:02:50,950 --> 00:02:53,340
enough

00:02:56,260 --> 00:03:01,989
I stand right here apparently I have no

00:02:58,180 --> 00:03:03,250
range motion so you want consistency it

00:03:01,989 --> 00:03:05,379
should be like other languages you

00:03:03,250 --> 00:03:07,329
should be able to jump in for free if

00:03:05,379 --> 00:03:10,090
you know another language shouldn't be

00:03:07,329 --> 00:03:12,159
too hard to pick it up in flexibility

00:03:10,090 --> 00:03:14,709
you know a lot of languages you can only

00:03:12,159 --> 00:03:16,599
do things in a very certain way you know

00:03:14,709 --> 00:03:18,730
pearl is not pearl is there's more than

00:03:16,599 --> 00:03:20,349
one way to do everything so he wanted to

00:03:18,730 --> 00:03:23,400
get some of that into a language that

00:03:20,349 --> 00:03:25,659
had a bit more up storing patient and

00:03:23,400 --> 00:03:28,599
really the big thing for me was he

00:03:25,659 --> 00:03:30,340
solved my problem which is this you know

00:03:28,599 --> 00:03:32,530
if you'll join we can concentrate on the

00:03:30,340 --> 00:03:35,230
creative side of programming so he

00:03:32,530 --> 00:03:37,359
designed to make me happy the programmer

00:03:35,230 --> 00:03:39,040
and that's something that you know all

00:03:37,359 --> 00:03:41,349
languages don't start out here and

00:03:39,040 --> 00:03:43,720
that's what really attracted me to Ruby

00:03:41,349 --> 00:03:48,670
because it was designed to make my life

00:03:43,720 --> 00:03:50,230
easier so there are three ways you can

00:03:48,670 --> 00:03:52,599
start with Ruby once you have it

00:03:50,230 --> 00:03:54,579
installed there's the command line just

00:03:52,599 --> 00:03:56,319
Ruby whatever your script file is easy

00:03:54,579 --> 00:03:59,769
enough just like anything else the

00:03:56,319 --> 00:04:02,459
scripting language you can do it through

00:03:59,769 --> 00:04:04,329
the interactive Ruby interpreter IRB

00:04:02,459 --> 00:04:05,829
this is where you can kind of go through

00:04:04,329 --> 00:04:09,579
and watch we're going to use both of

00:04:05,829 --> 00:04:12,040
these as we go and then also there's our

00:04:09,579 --> 00:04:13,359
I that is your documentation for those

00:04:12,040 --> 00:04:15,669
of you have come from pearl this is

00:04:13,359 --> 00:04:17,979
prologue okay so anything you want to

00:04:15,669 --> 00:04:19,479
know internal libraries classes you can

00:04:17,979 --> 00:04:21,280
even generate your own so when you

00:04:19,479 --> 00:04:23,010
distribute it this works for your own

00:04:21,280 --> 00:04:25,560
classes when you distribute your codes

00:04:23,010 --> 00:04:28,810
so that's kind of your point of entry

00:04:25,560 --> 00:04:30,580
now of course you start off with hello

00:04:28,810 --> 00:04:34,090
world because where else do you start in

00:04:30,580 --> 00:04:37,599
programming and that's it puts hello

00:04:34,090 --> 00:04:38,280
Ruby so we're going to go to a demo this

00:04:37,599 --> 00:04:44,810
is going to be

00:04:38,280 --> 00:04:44,810
easy come over here

00:04:56,910 --> 00:04:59,750
that's it

00:05:00,340 --> 00:05:04,860
and it's just like you saw your kitten

00:05:02,560 --> 00:05:04,860
totally

00:05:12,710 --> 00:05:15,820
at you hard to see

00:05:16,990 --> 00:05:24,360
hurt

00:05:19,260 --> 00:05:27,330
ok so again that's it so very similar to

00:05:24,360 --> 00:05:28,970
pearl obviously it's just a one liner so

00:05:27,330 --> 00:05:32,720
we're going to move on to something

00:05:28,970 --> 00:05:32,720
possibly a little more complex

00:05:38,139 --> 00:05:42,650
math

00:05:40,020 --> 00:05:42,650
so

00:05:43,000 --> 00:05:46,320
you guys do foil on it

00:05:46,910 --> 00:05:50,150
they said to make it dark so the camera

00:05:48,860 --> 00:05:53,420
could see it so maybe the camera has

00:05:50,150 --> 00:05:56,380
better eyes in meetings so we're going

00:05:53,420 --> 00:05:56,380
to go ahead and go with some math

00:05:59,050 --> 00:06:06,300
thank you there we go see that's what I

00:06:03,759 --> 00:06:08,319
get for listening to instructions huh so

00:06:06,300 --> 00:06:10,180
obviously we got a couple mathematical

00:06:08,319 --> 00:06:13,180
operations up there and their

00:06:10,180 --> 00:06:15,639
expressions and this is basic math right

00:06:13,180 --> 00:06:18,930
so 4 plus 2 just call it out where we

00:06:15,639 --> 00:06:28,870
think that's going to come out 5 minus

00:06:18,930 --> 00:06:31,090
36 times 2999 / 37 / 2 we've got some

00:06:28,870 --> 00:06:36,699
programmers in the room awesome and then

00:06:31,090 --> 00:06:38,289
seven percent to or modulus yep how many

00:06:36,699 --> 00:06:49,930
folks didn't know that will come out to

00:06:38,289 --> 00:06:51,580
be 3 47 / to anybody okay so we're going

00:06:49,930 --> 00:06:53,610
to go ahead and fire up the Ruby

00:06:51,580 --> 00:06:53,610
interpreter

00:06:57,460 --> 00:07:02,199
that's what you get just drops you into

00:06:59,259 --> 00:07:03,490
the command line and the nice thing with

00:07:02,199 --> 00:07:06,009
this is you can just literally get

00:07:03,490 --> 00:07:08,530
feedback so what you see here is you

00:07:06,009 --> 00:07:10,120
type in and this is an expression and it

00:07:08,530 --> 00:07:11,680
just tells you what the value is now I'm

00:07:10,120 --> 00:07:14,050
not assigning into a variable I'm just

00:07:11,680 --> 00:07:17,080
saying does it work and this is kind of

00:07:14,050 --> 00:07:18,250
your bootstrap to figure out is what i'm

00:07:17,080 --> 00:07:20,319
thinking is going to happen going to

00:07:18,250 --> 00:07:21,370
happen a great way to just play with it

00:07:20,319 --> 00:07:23,530
when you're getting started there are

00:07:21,370 --> 00:07:24,729
actually a couple websites if you don't

00:07:23,530 --> 00:07:26,169
have a machine where you can install

00:07:24,729 --> 00:07:28,419
ruby so you don't have administrative

00:07:26,169 --> 00:07:31,150
privileges you can't get in websites

00:07:28,419 --> 00:07:34,150
give you this for free so go ahead ruby

00:07:31,150 --> 00:07:37,060
ruby languor and you can find a couple

00:07:34,150 --> 00:07:40,000
of them there so again everything is

00:07:37,060 --> 00:07:43,960
going to as we expect so let's just do

00:07:40,000 --> 00:07:48,340
that fun one all right we expect that

00:07:43,960 --> 00:07:49,840
now the interesting thing here is Ruby

00:07:48,340 --> 00:07:52,710
Hans's interest has something going on

00:07:49,840 --> 00:07:52,710
under the covers

00:07:54,830 --> 00:07:59,780
everything is an object from a simple

00:07:57,470 --> 00:08:04,400
integer without even firing as an object

00:07:59,780 --> 00:08:07,400
to a string everything every method is

00:08:04,400 --> 00:08:09,640
an object every single line you write in

00:08:07,400 --> 00:08:11,900
Ruby under the covers is an object

00:08:09,640 --> 00:08:14,960
period object-oriented from top to

00:08:11,900 --> 00:08:16,220
bottom all the way through and both a

00:08:14,960 --> 00:08:18,770
blessing and a curse because doesn't

00:08:16,220 --> 00:08:20,450
curl look more overhead but you get a

00:08:18,770 --> 00:08:22,940
lot of things for free that don't exist

00:08:20,450 --> 00:08:25,790
now their programming languages we're

00:08:22,940 --> 00:08:30,130
going to see more of that as we go on so

00:08:25,790 --> 00:08:30,130
I mean that over here

00:08:36,940 --> 00:08:43,419
okay all right

00:08:40,570 --> 00:08:45,130
we've done math now again we just to

00:08:43,419 --> 00:08:48,510
talk about there are two kinds of base

00:08:45,130 --> 00:08:52,210
we saw fixed num that's your integer

00:08:48,510 --> 00:08:54,190
writes all whole numbers 1 2 3 or 42

00:08:52,210 --> 00:08:58,600
because 42 has to appear in every slide

00:08:54,190 --> 00:08:59,740
ever in technology and a float which is

00:08:58,600 --> 00:09:04,300
just simply a number expressed in

00:08:59,740 --> 00:09:06,760
decimal form such as high so that being

00:09:04,300 --> 00:09:08,020
said you can go through those now I'm

00:09:06,760 --> 00:09:10,210
going to go ahead and do a few decent

00:09:08,020 --> 00:09:13,930
interpreter but just to show you some of

00:09:10,210 --> 00:09:16,210
the object orientation here 7f give to

00:09:13,930 --> 00:09:17,830
that is a float divided right there's

00:09:16,210 --> 00:09:19,960
the first line we know we've we've seen

00:09:17,830 --> 00:09:21,910
before if you program you force it into

00:09:19,960 --> 00:09:23,650
a floating point by put making one of

00:09:21,910 --> 00:09:26,680
your arguments one of your expression

00:09:23,650 --> 00:09:29,050
pieces in the left hand side afloat easy

00:09:26,680 --> 00:09:30,670
enough if you don't want to go to that

00:09:29,050 --> 00:09:32,470
trouble or you don't know if it's going

00:09:30,670 --> 00:09:36,490
to be come in as an integer or float you

00:09:32,470 --> 00:09:38,920
can do this active too and it will say

00:09:36,490 --> 00:09:44,380
whatever it is give me the outcome that

00:09:38,920 --> 00:09:46,660
is a float for / 3.0 that's going to

00:09:44,380 --> 00:09:50,380
give us a number will look at round two

00:09:46,660 --> 00:09:52,000
and then two are again something you get

00:09:50,380 --> 00:09:53,950
for free so we're going to go and take a

00:09:52,000 --> 00:09:56,350
look at that is the two are is the one

00:09:53,950 --> 00:10:01,330
that kind of made my day when I got

00:09:56,350 --> 00:10:04,470
started so obviously we know that we do

00:10:01,330 --> 00:10:08,520
seven / PLO

00:10:04,470 --> 00:10:10,980
right we're going to get fat and then

00:10:08,520 --> 00:10:14,130
we're going to go seven divided by

00:10:10,980 --> 00:10:18,020
Giotto and we are going to round it to

00:10:14,130 --> 00:10:23,610
two that's exactly thing right we can do

00:10:18,020 --> 00:10:27,890
fog / 3 which gives us that sorry 5/2

00:10:23,610 --> 00:10:27,890
point 0 which gives us this

00:10:29,290 --> 00:10:41,459
I've divided by Q point or I can do this

00:10:34,470 --> 00:10:41,459
sometimes you just want to see a mistake

00:10:48,070 --> 00:10:54,480
go no what am i typing wrong Oh dash

00:11:00,529 --> 00:11:03,730
is that in under school

00:11:09,260 --> 00:11:12,640
two point oh

00:11:12,780 --> 00:11:18,880
thank you it boy

00:11:15,610 --> 00:11:21,250
I think I just lost my microphone am i

00:11:18,880 --> 00:11:27,250
right and you guys still hear me we're

00:11:21,250 --> 00:11:29,550
still good no idea what I lost okay from

00:11:27,250 --> 00:11:29,550
the floor

00:11:30,590 --> 00:11:38,650
okay so we get our lovely friend the

00:11:35,920 --> 00:11:41,570
rational number turn it into a fraction

00:11:38,650 --> 00:11:44,150
so you don't have to figure out what's

00:11:41,570 --> 00:11:45,200
my fraction I'm going to make some

00:11:44,150 --> 00:11:50,360
sounds in the video they're going to

00:11:45,200 --> 00:11:52,400
hate me on youtube so you get your

00:11:50,360 --> 00:11:54,950
actual fraction for free because of the

00:11:52,400 --> 00:11:57,230
object now this gets a little weird when

00:11:54,950 --> 00:11:59,240
you do thirds because you get some crazy

00:11:57,230 --> 00:12:02,810
number like six million over 5 million

00:11:59,240 --> 00:12:09,120
something so but four halves is pretty

00:12:02,810 --> 00:12:12,029
useful head back here

00:12:09,120 --> 00:12:13,850
this going to stay tied to the lectern

00:12:12,029 --> 00:12:17,550
because now I can actually see my screen

00:12:13,850 --> 00:12:20,520
so we've done the float now some string

00:12:17,550 --> 00:12:22,500
stuff Karen strings are objects so we

00:12:20,520 --> 00:12:23,850
should be used to this we have a cat we

00:12:22,500 --> 00:12:26,400
have a rat I'll just give us a string

00:12:23,850 --> 00:12:28,200
object we can capitalize the whole

00:12:26,400 --> 00:12:31,020
string I mean if you do this on a web

00:12:28,200 --> 00:12:32,550
form we start looking at rails you get

00:12:31,020 --> 00:12:34,529
people it like to be funny and put stuff

00:12:32,550 --> 00:12:37,110
into your database I see this all the

00:12:34,529 --> 00:12:38,820
time my day job where you have no idea

00:12:37,110 --> 00:12:40,080
what the person was doing when they put

00:12:38,820 --> 00:12:42,210
into the form but nothing makes sense

00:12:40,080 --> 00:12:43,560
when you're doing a mail merge the mail

00:12:42,210 --> 00:12:44,960
people will get really angry with you

00:12:43,560 --> 00:12:47,430
when you get strange stuff like this

00:12:44,960 --> 00:12:52,290
because it fails the postal sort believe

00:12:47,430 --> 00:12:55,680
or not so capitalize does that pause

00:12:52,290 --> 00:12:57,180
reverse and become swamp tour sponsoring

00:12:55,680 --> 00:13:00,150
encourages right

00:12:57,180 --> 00:13:03,090
okay bad pun I know I had to throw one

00:13:00,150 --> 00:13:05,670
in my slide where somewhere cat goes

00:13:03,090 --> 00:13:07,320
meow there's string concatenation cow

00:13:05,670 --> 00:13:10,530
goes Moo this is also a string

00:13:07,320 --> 00:13:13,440
concatenation and hello dot length again

00:13:10,530 --> 00:13:16,320
a string is the plane out string not the

00:13:13,440 --> 00:13:18,690
third is a variable has length is an

00:13:16,320 --> 00:13:20,250
operator it's an object but you don't

00:13:18,690 --> 00:13:22,320
have to sit and put it into into a

00:13:20,250 --> 00:13:24,990
variable or do anything else so on the

00:13:22,320 --> 00:13:29,910
way in you can check it so we're going

00:13:24,990 --> 00:13:32,560
to go ahead and let's pull out the next

00:13:29,910 --> 00:13:35,610
slide you want to

00:13:32,560 --> 00:13:35,610
strengthen thing

00:13:35,840 --> 00:13:39,410
you know we're going to go ahead and

00:13:37,160 --> 00:13:40,730
skip that is everybody good with this do

00:13:39,410 --> 00:13:42,050
we have a lot of programmers room and I

00:13:40,730 --> 00:13:44,060
really don't I want to get to the stuff

00:13:42,050 --> 00:13:46,190
at the end is there some better stuff as

00:13:44,060 --> 00:13:50,840
we go through everybody good with this

00:13:46,190 --> 00:13:56,020
anybody want to see these no class call

00:13:50,840 --> 00:13:59,510
okay so we'll skip that so mix and match

00:13:56,020 --> 00:14:04,529
so first line anybody think that two

00:13:59,510 --> 00:14:07,110
times cats going to work anybody

00:14:04,529 --> 00:14:12,180
anybody think that ho times three is

00:14:07,110 --> 00:14:15,240
going to work anybody know okay

00:14:12,180 --> 00:14:17,670
this right here this five times as

00:14:15,240 --> 00:14:20,490
taking integer giving it time this is a

00:14:17,670 --> 00:14:22,890
built-in enumeration numeration is where

00:14:20,490 --> 00:14:25,710
you can go over an object to reach peace

00:14:22,890 --> 00:14:27,930
and get more things out of it so this is

00:14:25,710 --> 00:14:29,970
really simple we have the block notation

00:14:27,930 --> 00:14:33,630
here with the braces and it's when you

00:14:29,970 --> 00:14:35,430
print hello five times that's it no for

00:14:33,630 --> 00:14:40,110
loop know anything you get that to free

00:14:35,430 --> 00:14:43,290
and then here you have an integer to

00:14:40,110 --> 00:14:45,000
underscore s change it to a string so

00:14:43,290 --> 00:14:47,600
you can do that there's a couple other

00:14:45,000 --> 00:14:49,920
way to do that we'll see them as we go

00:14:47,600 --> 00:14:55,279
but again one of the interesting things

00:14:49,920 --> 00:15:01,230
is with Ruby is what you get for free so

00:14:55,279 --> 00:15:04,370
we're going to go to x cat okay you're

00:15:01,230 --> 00:15:04,370
getting there we understand that

00:15:06,450 --> 00:15:11,569
now wait a minute

00:15:08,899 --> 00:15:13,610
so that works that's actually a shortcut

00:15:11,569 --> 00:15:16,309
in Ruby so if you ever had those

00:15:13,610 --> 00:15:18,259
annoying things like I need a padded

00:15:16,309 --> 00:15:20,869
string that's a divider bar on an output

00:15:18,259 --> 00:15:23,360
file or I need to put a little box

00:15:20,869 --> 00:15:24,649
around something take your character

00:15:23,360 --> 00:15:28,309
multiply it by whatever and there you go

00:15:24,649 --> 00:15:31,399
for free from the string object nothing

00:15:28,309 --> 00:15:33,519
more needed so again there's just little

00:15:31,399 --> 00:15:36,559
things in Ruby that as you dig into it

00:15:33,519 --> 00:15:37,910
makes your life easier silly things

00:15:36,559 --> 00:15:40,220
there just for productivity and that's

00:15:37,910 --> 00:15:43,490
again that's one of your bet less well

00:15:40,220 --> 00:15:48,519
as one of the main benefits you get it's

00:15:43,490 --> 00:15:48,519
built for RC getting work done so

00:15:50,040 --> 00:15:56,160
interaction I oh I know you've seen put

00:15:52,310 --> 00:15:57,300
literally just put string syntactically

00:15:56,160 --> 00:16:01,759
one of the things that we're working

00:15:57,300 --> 00:16:05,339
what we work for in ruby is conciseness

00:16:01,759 --> 00:16:07,889
things to make sense yet says get

00:16:05,339 --> 00:16:10,529
straight black easy

00:16:07,889 --> 00:16:15,029
we've got a standard library for file

00:16:10,529 --> 00:16:16,980
i/o and one for cs4 CSP going look at

00:16:15,029 --> 00:16:22,079
the first three right now CSV will come

00:16:16,980 --> 00:16:27,029
a little bit later so now of course in

00:16:22,079 --> 00:16:29,480
my day job I work with data lots and

00:16:27,029 --> 00:16:29,480
lots of data

00:16:31,200 --> 00:16:33,910
go

00:16:32,710 --> 00:16:39,330
we're gonna get out of the ruby

00:16:33,910 --> 00:16:39,330
interpreter and we're going to look at

00:16:46,870 --> 00:16:51,550
have fun no color I can see it so we're

00:16:50,050 --> 00:16:52,990
going to look at some names now this is

00:16:51,550 --> 00:16:56,589
from a social security administration

00:16:52,990 --> 00:16:59,140
they publish a set of data that is every

00:16:56,589 --> 00:17:03,160
single name that was made in each year

00:16:59,140 --> 00:17:04,780
going from 1882 2013 right and it gives

00:17:03,160 --> 00:17:08,520
you the name how many things are in

00:17:04,780 --> 00:17:11,380
there so we're just going to look at

00:17:08,520 --> 00:17:13,699
this

00:17:11,380 --> 00:17:16,549
smallest 200 names

00:17:13,699 --> 00:17:20,260
I'm just reading it in putting it out

00:17:16,549 --> 00:17:20,260
let's look at the code does this

00:17:22,819 --> 00:17:25,449
ok

00:17:26,370 --> 00:17:31,110
so I'm using file which is just a flash

00:17:29,180 --> 00:17:32,370
required as part of your standard

00:17:31,110 --> 00:17:36,050
package so you don't have to require

00:17:32,370 --> 00:17:39,450
include anything you open your data list

00:17:36,050 --> 00:17:41,370
read it now again you're that block we

00:17:39,450 --> 00:17:44,040
talked about with the two braces there's

00:17:41,370 --> 00:17:46,290
two ways you can write a block you can

00:17:44,040 --> 00:17:47,640
do the braces on a single line in this

00:17:46,290 --> 00:17:49,860
case it's a little bit easier to read

00:17:47,640 --> 00:17:53,010
when it's on two lines so we use the do

00:17:49,860 --> 00:17:55,470
and and this is nested so there to do

00:17:53,010 --> 00:17:57,180
and block two of them one that's in the

00:17:55,470 --> 00:17:59,610
other and all we're doing is just taking

00:17:57,180 --> 00:18:02,130
in the line and adding it to a big

00:17:59,610 --> 00:18:03,360
string this is a pretty common operation

00:18:02,130 --> 00:18:05,460
when you're wanting to do a file output

00:18:03,360 --> 00:18:07,590
I have large amount of data I need to

00:18:05,460 --> 00:18:11,450
make a file on the fly and transport it

00:18:07,590 --> 00:18:14,580
out do this on websites all the time so

00:18:11,450 --> 00:18:17,429
that'll work that's a very small set but

00:18:14,580 --> 00:18:23,789
you know here's the thing

00:18:17,429 --> 00:18:23,789
that can get pretty big so let's do

00:18:27,520 --> 00:18:33,520
fit now this is a little bit different

00:18:30,280 --> 00:18:34,750
let's open this one relative we talked

00:18:33,520 --> 00:18:37,540
about there were a couple different way

00:18:34,750 --> 00:18:40,750
through string concatenation there's the

00:18:37,540 --> 00:18:43,870
plus which we all know and love there is

00:18:40,750 --> 00:18:45,970
the double arrow right which is a

00:18:43,870 --> 00:18:47,320
pending and there's also something

00:18:45,970 --> 00:18:49,690
called string interpolation which when

00:18:47,320 --> 00:18:52,030
you look at down here now if you've seen

00:18:49,690 --> 00:18:53,980
pearl this is going to be a pretty

00:18:52,030 --> 00:18:56,680
normal concept for something you're

00:18:53,980 --> 00:19:01,150
familiar with so we want to interpolate

00:18:56,680 --> 00:19:03,490
we use the pound and then put our

00:19:01,150 --> 00:19:05,350
variable name in here now that can be a

00:19:03,490 --> 00:19:07,660
variable name it can be an extreme

00:19:05,350 --> 00:19:09,520
expression you can put a string

00:19:07,660 --> 00:19:11,080
literally the string dot capitalize do

00:19:09,520 --> 00:19:12,550
you want in there this will act just

00:19:11,080 --> 00:19:15,820
like the function but just goes all in

00:19:12,550 --> 00:19:18,610
line so it's easier to read write all

00:19:15,820 --> 00:19:20,650
those things do the exact same thing but

00:19:18,610 --> 00:19:22,030
you'll notice it's wrapped up in extra

00:19:20,650 --> 00:19:25,300
port which is a method inside of

00:19:22,030 --> 00:19:28,630
benchmark now here's the thing every day

00:19:25,300 --> 00:19:29,950
I'm dealing with about 20 gig file so I

00:19:28,630 --> 00:19:32,110
don't have time to sit there and wait

00:19:29,950 --> 00:19:34,060
for front I'm because i usually get the

00:19:32,110 --> 00:19:36,640
file and have an hour to present it and

00:19:34,060 --> 00:19:39,990
that's all you get so you get real

00:19:36,640 --> 00:19:43,270
concerned with things like speed and

00:19:39,990 --> 00:19:44,890
this shows me speed now this is

00:19:43,270 --> 00:19:48,550
operating on the short list of names and

00:19:44,890 --> 00:19:50,770
you can see here you have your the user

00:19:48,550 --> 00:19:52,150
system total and real so you're real me

00:19:50,770 --> 00:19:53,920
it's not that much different right it's

00:19:52,150 --> 00:19:58,060
only a couple thousand names you know

00:19:53,920 --> 00:20:01,450
point zero seven point 0 2.21 okay

00:19:58,060 --> 00:20:03,490
that's fine so what happens when we use

00:20:01,450 --> 00:20:05,580
a slightly bigger file

00:20:03,490 --> 00:20:05,580
Oh

00:20:07,950 --> 00:20:15,510
well good old string plus is failing

00:20:10,440 --> 00:20:19,620
isn't because that's only about 70,000

00:20:15,510 --> 00:20:21,690
90,000 record dropping not good right

00:20:19,620 --> 00:20:23,909
but look can cat came right back that's

00:20:21,690 --> 00:20:25,429
the double arrow so you can see here

00:20:23,909 --> 00:20:28,110
you're starting to get orders of

00:20:25,429 --> 00:20:29,820
magnitude difference so these are things

00:20:28,110 --> 00:20:32,100
that benchmark is really really useful

00:20:29,820 --> 00:20:34,110
for anything you do can be wrapped in a

00:20:32,100 --> 00:20:36,870
benchmark and this is going to tell you

00:20:34,110 --> 00:20:38,100
how fast it is so this is your bread and

00:20:36,870 --> 00:20:40,080
butter tool when you're getting started

00:20:38,100 --> 00:20:42,120
you're trying to figure out how do I

00:20:40,080 --> 00:20:44,399
make this run better what is it's not

00:20:42,120 --> 00:20:46,110
performing is one of the things I've

00:20:44,399 --> 00:20:49,230
seen you know all over the blogs well

00:20:46,110 --> 00:20:52,529
Ruby isn't performance well it's like a

00:20:49,230 --> 00:20:54,779
guy it might work at my office says it's

00:20:52,529 --> 00:20:55,980
not that the languages and perform it it

00:20:54,779 --> 00:20:57,990
was the programmer that wasn't

00:20:55,980 --> 00:21:00,000
performing I mean that's ninety percent

00:20:57,990 --> 00:21:01,230
of your problems come from having the

00:21:00,000 --> 00:21:05,840
wrong construct and this is how you

00:21:01,230 --> 00:21:05,840
catch it right and again

00:21:07,389 --> 00:21:10,320
same thing

00:21:11,730 --> 00:21:16,870
394 enough

00:21:14,410 --> 00:21:18,640
I've done a really really big one just

00:21:16,870 --> 00:21:20,290
kind of show you I only they can cat it

00:21:18,640 --> 00:21:21,940
took nine seconds for the regular can

00:21:20,290 --> 00:21:24,190
cat the other one I let it sit at home

00:21:21,940 --> 00:21:25,630
for about a day and a half after a day

00:21:24,190 --> 00:21:27,910
and a half i decided i was done waiting

00:21:25,630 --> 00:21:29,590
for word to finish so orders of

00:21:27,910 --> 00:21:31,000
magnitude this really does make a

00:21:29,590 --> 00:21:32,710
difference and this is something that

00:21:31,000 --> 00:21:37,590
you really want to think about

00:21:32,710 --> 00:21:37,590
thankfully ruby has a tool baked in so

00:21:38,040 --> 00:21:41,040
here

00:21:45,110 --> 00:21:51,700
symbols all right food here who's

00:21:48,799 --> 00:21:55,970
program has come up with something like

00:21:51,700 --> 00:21:58,370
north is one south is to East is three

00:21:55,970 --> 00:21:59,630
West is for and to find that it's a

00:21:58,370 --> 00:22:02,780
constant so you can carry that through

00:21:59,630 --> 00:22:05,390
all the rest of your toes anybody bunch

00:22:02,780 --> 00:22:07,190
right so it's kind of a waste isn't it

00:22:05,390 --> 00:22:08,570
all those lines to set up something that

00:22:07,190 --> 00:22:10,400
you visually are just going to use north

00:22:08,570 --> 00:22:12,950
and never care about the value I mean

00:22:10,400 --> 00:22:14,480
you get said to be North is cat South is

00:22:12,950 --> 00:22:16,720
dog and no one would care cuz all

00:22:14,480 --> 00:22:19,220
they're going to see you snored right

00:22:16,720 --> 00:22:21,850
Ruby gives these for free it's an app

00:22:19,220 --> 00:22:23,809
it's an abstract for a constant dodge

00:22:21,850 --> 00:22:27,080
maintained globally and we'll see that

00:22:23,809 --> 00:22:33,309
here in a second and it's guaranteed to

00:22:27,080 --> 00:22:33,309
be unique so let's take a look at some

00:22:36,380 --> 00:22:39,100
alright

00:22:41,870 --> 00:22:49,410
so hi

00:22:45,630 --> 00:22:51,420
right so you are moving north I do work

00:22:49,410 --> 00:22:53,940
for online games so my examples are very

00:22:51,420 --> 00:22:56,840
heavily tilted for game I apologize so

00:22:53,940 --> 00:22:56,840
we're going to go ahead and look at this

00:22:58,020 --> 00:23:05,850
easy enough this little colon now notice

00:23:03,200 --> 00:23:07,320
test now it's working mission p.m. if

00:23:05,850 --> 00:23:10,860
you couldn't tell the city few the

00:23:07,320 --> 00:23:12,750
comment some direction north if

00:23:10,860 --> 00:23:14,580
direction is South this colon

00:23:12,750 --> 00:23:16,950
maintenance symbol and that's it our

00:23:14,580 --> 00:23:19,530
declaration puts removing South

00:23:16,950 --> 00:23:22,350
otherwise of its north print we are

00:23:19,530 --> 00:23:23,730
moving north that's it you don't have to

00:23:22,350 --> 00:23:25,530
worry about so what values contained

00:23:23,730 --> 00:23:27,480
therein you don't have to worry about

00:23:25,530 --> 00:23:31,320
where is it going to be just there it's

00:23:27,480 --> 00:23:37,810
free and it works now the question

00:23:31,320 --> 00:23:40,100
becomes scope so let's look at this

00:23:37,810 --> 00:23:43,970
so

00:23:40,100 --> 00:23:45,860
I have a moving people and its defining

00:23:43,970 --> 00:23:49,100
a symbol wet inside the scope of this

00:23:45,860 --> 00:23:52,520
method this little death and end this is

00:23:49,100 --> 00:23:54,679
a method construct all right so you can

00:23:52,520 --> 00:23:56,030
define methods outside of classes or

00:23:54,679 --> 00:23:59,870
inside will get the classes here in a

00:23:56,030 --> 00:24:02,270
bit think of this like a function now

00:23:59,870 --> 00:24:04,730
i'm defining another function scope

00:24:02,270 --> 00:24:06,830
checker howdy is happy i'm only doing

00:24:04,730 --> 00:24:09,289
that to kind of show something here my

00:24:06,830 --> 00:24:11,660
direction north some direction north

00:24:09,289 --> 00:24:18,740
anything we have before and we get to

00:24:11,660 --> 00:24:21,980
the bottom and i expect that this if

00:24:18,740 --> 00:24:24,169
howdy i expect that to fail I'm sure

00:24:21,980 --> 00:24:25,460
it's going to fail right out of scope

00:24:24,169 --> 00:24:28,210
and that's something that we worry about

00:24:25,460 --> 00:24:29,980
a lot passing variables around

00:24:28,210 --> 00:24:32,020
but I'm going to do the same thing with

00:24:29,980 --> 00:24:35,470
the symbol down here where my direction

00:24:32,020 --> 00:24:39,760
is west now West was only to find in the

00:24:35,470 --> 00:24:41,290
scope of the method above people but yet

00:24:39,760 --> 00:24:47,879
here i'm going to try and use it anyway

00:24:41,290 --> 00:24:51,059
so symbol for two

00:24:47,879 --> 00:24:54,659
right I get to fail exactly what I

00:24:51,059 --> 00:24:58,379
thought it is dying on howdy apparently

00:24:54,659 --> 00:25:00,899
it's by the Texas can't say howdy so

00:24:58,379 --> 00:25:04,459
we're going to do this again where I

00:25:00,899 --> 00:25:04,459
have commented it out

00:25:06,460 --> 00:25:13,180
West work globally guaranteed you set

00:25:10,510 --> 00:25:14,650
the symbol and a message somewhere it's

00:25:13,180 --> 00:25:17,370
available everywhere else you want to

00:25:14,650 --> 00:25:20,260
use it everywhere else you want to

00:25:17,370 --> 00:25:22,300
simple it's a feature that unique to

00:25:20,260 --> 00:25:23,350
Ruby and it's kind of nice because it

00:25:22,300 --> 00:25:25,660
gets you away from have you or about

00:25:23,350 --> 00:25:27,340
numbers and the fines and I define this

00:25:25,660 --> 00:25:31,360
is one and is this going to fail nope

00:25:27,340 --> 00:25:36,150
hip name symbol with global guarantee

00:25:31,360 --> 00:25:36,150
you need again you get it for free

00:25:38,480 --> 00:25:42,620
you can't tell I like three as I have I

00:25:40,970 --> 00:25:45,140
like lots of free code now I don't have

00:25:42,620 --> 00:25:47,299
out the free time so anything the

00:25:45,140 --> 00:25:50,980
language can do to help us out is a

00:25:47,299 --> 00:25:53,090
benefit and blessing so that symbol

00:25:50,980 --> 00:25:55,970
classes and blocks right we already kind

00:25:53,090 --> 00:25:57,919
of seen these classes represent objects

00:25:55,970 --> 00:26:00,559
this is classic aura of object

00:25:57,919 --> 00:26:02,809
orientation we can do another whole day

00:26:00,559 --> 00:26:04,070
long talk on up going to programming so

00:26:02,809 --> 00:26:06,410
we're not going to do that here today

00:26:04,070 --> 00:26:07,970
but essentially you take things in real

00:26:06,410 --> 00:26:11,870
world and you represent them as objects

00:26:07,970 --> 00:26:14,090
a ball a car all cars have wheels all

00:26:11,870 --> 00:26:16,490
cards have a color all cars have a max

00:26:14,090 --> 00:26:18,530
speed so you make one class that

00:26:16,490 --> 00:26:20,270
represents all cars and then you're

00:26:18,530 --> 00:26:24,260
defining those attributes or something

00:26:20,270 --> 00:26:27,169
inside easy enough now your standard

00:26:24,260 --> 00:26:29,840
Ruby classes are open what does that

00:26:27,169 --> 00:26:32,450
mean well you know in other languages

00:26:29,840 --> 00:26:34,370
you have to inherit and then you use

00:26:32,450 --> 00:26:37,280
that inherited class to do other items

00:26:34,370 --> 00:26:38,390
sometimes you can emerge but Ruby lasses

00:26:37,280 --> 00:26:40,640
you don't and we're going to see this

00:26:38,390 --> 00:26:42,860
more in just a second

00:26:40,640 --> 00:26:47,630
and blocks are just chunks of code again

00:26:42,860 --> 00:26:52,570
in the curly brace or and your doo-doo

00:26:47,630 --> 00:26:52,570
and syntax and really it's going

00:26:56,790 --> 00:27:03,090
it will be I'm going um I'm going to

00:27:01,350 --> 00:27:05,280
give it to the self staff and they're

00:27:03,090 --> 00:27:07,260
going perfect i'm also going to give you

00:27:05,280 --> 00:27:12,440
guys my email address after the cameras

00:27:07,260 --> 00:27:12,440
off so you guys can ask me for alpha so

00:27:12,650 --> 00:27:18,360
so happening set blocks are chunks of

00:27:16,080 --> 00:27:21,120
code with the do and the race

00:27:18,360 --> 00:27:22,680
methodology and by the way that what

00:27:21,120 --> 00:27:25,200
when you choose to use one versus the

00:27:22,680 --> 00:27:26,850
other when it makes the most sense ruby

00:27:25,200 --> 00:27:29,010
is very flexible so they want you to use

00:27:26,850 --> 00:27:31,260
what's most readable so if it's a

00:27:29,010 --> 00:27:32,970
one-liner it's about this long put on

00:27:31,260 --> 00:27:34,860
one line use your brakes in tax move on

00:27:32,970 --> 00:27:36,570
if it's going to be four or five lines

00:27:34,860 --> 00:27:40,110
like that example with the reading in

00:27:36,570 --> 00:27:42,540
the file use your do n again readability

00:27:40,110 --> 00:27:45,960
we'll talk we'll have something

00:27:42,540 --> 00:27:46,980
interesting with that later Wow okay so

00:27:45,960 --> 00:27:49,500
we're going to get to the advanced

00:27:46,980 --> 00:27:51,180
examples I over preps a little bit so I

00:27:49,500 --> 00:27:53,310
wasn't sure if we'd have beginners or

00:27:51,180 --> 00:27:56,160
lots of folks who already know it's the

00:27:53,310 --> 00:27:59,310
first set was for well from my for wife

00:27:56,160 --> 00:28:02,169
in the back I know I'm going to get it

00:27:59,310 --> 00:28:05,559
later so

00:28:02,169 --> 00:28:10,080
alright so we've got a couple other

00:28:05,559 --> 00:28:10,080
things in here we're going to start with

00:28:10,809 --> 00:28:14,909
let's got read symbol

00:28:15,450 --> 00:28:18,380
interactive

00:28:21,960 --> 00:28:28,489
hmm

00:28:24,169 --> 00:28:31,840
that's the last one CSP there it is you

00:28:28,489 --> 00:28:31,840
want to talk about CS

00:28:37,900 --> 00:28:42,490
there we go

00:28:39,700 --> 00:28:45,429
alright so

00:28:42,490 --> 00:28:47,380
CSPI want to count how many people's

00:28:45,429 --> 00:28:50,020
first name have the condition for how

00:28:47,380 --> 00:28:51,940
many times that initial is there so I

00:28:50,020 --> 00:28:56,440
could just go ahead and use a string on

00:28:51,940 --> 00:29:00,570
each one and say this self 01 but I do

00:28:56,440 --> 00:29:03,730
this a lot and by a lot i mean a lot so

00:29:00,570 --> 00:29:05,800
to find a little faster but notice is

00:29:03,730 --> 00:29:09,010
class string well string is already a

00:29:05,800 --> 00:29:11,260
ruby class and this is well open I'm not

00:29:09,010 --> 00:29:15,010
inheriting I'm just saying class string

00:29:11,260 --> 00:29:18,400
mix it in but right there boom now any

00:29:15,010 --> 00:29:23,340
string of any type will have initial

00:29:18,400 --> 00:29:23,340
I'll you prefer character L done it

00:29:25,710 --> 00:29:30,360
correct just tie you on to it so the

00:29:29,279 --> 00:29:32,669
rest of the stuff and string will be

00:29:30,360 --> 00:29:35,700
available which you'll see down here I'm

00:29:32,669 --> 00:29:39,720
string hasn't changed and I did the same

00:29:35,700 --> 00:29:41,520
thing for integer so this is essentially

00:29:39,720 --> 00:29:43,980
a prop function if we have a lot of

00:29:41,520 --> 00:29:46,020
programmers in here they have closures

00:29:43,980 --> 00:29:48,299
and lambdas and ominous functions so I'm

00:29:46,020 --> 00:29:49,649
sending this to join because I want to

00:29:48,299 --> 00:29:51,809
pretty the string up you know if I get a

00:29:49,649 --> 00:29:52,919
string and i say i have 1 million three

00:29:51,809 --> 00:29:55,500
hundred forty-seven thousand eight

00:29:52,919 --> 00:29:57,059
hundred thirteen people when I hand that

00:29:55,500 --> 00:29:58,860
off to my business user and they see a

00:29:57,059 --> 00:30:03,390
number this long with no commas they

00:29:58,860 --> 00:30:04,380
look at me and go what so it happens I

00:30:03,390 --> 00:30:07,470
mean these are things you have to think

00:30:04,380 --> 00:30:10,590
about so this just takes it and it's

00:30:07,470 --> 00:30:12,710
like says I patted if the integer class

00:30:10,590 --> 00:30:15,570
so it's going to get an integer self

00:30:12,710 --> 00:30:18,390
change it to a string make that

00:30:15,570 --> 00:30:21,049
individual characters reverse make it

00:30:18,390 --> 00:30:25,740
through to underscore a make it on array

00:30:21,049 --> 00:30:27,179
reverse the array slice it by threes map

00:30:25,740 --> 00:30:29,399
it to a join and join it with a comma

00:30:27,179 --> 00:30:34,230
done oh and reverse it back so it's

00:30:29,399 --> 00:30:35,610
going forward done that's it yeah but

00:30:34,230 --> 00:30:38,039
thing is you can literally read right

00:30:35,610 --> 00:30:40,289
through this right take my number make

00:30:38,039 --> 00:30:42,899
it a string put the characters make it

00:30:40,289 --> 00:30:45,830
an array reverse it slice it join it by

00:30:42,899 --> 00:30:48,150
comma and reverse it done

00:30:45,830 --> 00:30:50,730
I've done that same thing in a couple

00:30:48,150 --> 00:30:52,440
other languages and trust me to do that

00:30:50,730 --> 00:30:56,460
by the time we're done explaining it

00:30:52,440 --> 00:30:59,309
you're retired so I'm looking at you c

00:30:56,460 --> 00:31:03,510
and c++ I mean really just things happen

00:30:59,309 --> 00:31:06,900
so again you get stuff for free built-in

00:31:03,510 --> 00:31:09,419
it's an object and we're going to do

00:31:06,900 --> 00:31:12,360
some stuff with a hash now hashes and

00:31:09,419 --> 00:31:13,890
arrange again objects you don't have joy

00:31:12,360 --> 00:31:16,980
define this is some of the flexibility

00:31:13,890 --> 00:31:19,320
of pearl coming into play so I'm looking

00:31:16,980 --> 00:31:24,120
at your birth 2013 maths most recent

00:31:19,320 --> 00:31:29,490
file and I'm going to get my account put

00:31:24,120 --> 00:31:30,809
things in and then I sort it I notice

00:31:29,490 --> 00:31:32,620
you can sort the hash by the cues I

00:31:30,809 --> 00:31:34,270
you're right in line

00:31:32,620 --> 00:31:36,520
and now I'm going to reverse the order

00:31:34,270 --> 00:31:37,600
so we see it because if it goes in

00:31:36,520 --> 00:31:40,000
ascending you're going to see the least

00:31:37,600 --> 00:31:42,820
count for the most count well we want to

00:31:40,000 --> 00:31:44,950
see it the other way and then of course

00:31:42,820 --> 00:31:50,170
I'm calling my function here right too

00:31:44,950 --> 00:31:52,450
pretty so making it easy to read but all

00:31:50,170 --> 00:31:58,530
that is done and what fits on that

00:31:52,450 --> 00:31:58,530
screen so we're going to go back to you

00:31:58,730 --> 00:32:05,360
nada q

00:32:01,380 --> 00:32:05,360
again this is just reading us GFE

00:32:06,530 --> 00:32:10,780
so off yeah I know it's waffle cookies

00:32:10,919 --> 00:32:19,379
so again go through the file and this is

00:32:16,169 --> 00:32:20,850
reading line by line ok so again and

00:32:19,379 --> 00:32:24,029
it's adding up each name taking the

00:32:20,850 --> 00:32:26,519
initial doing all that work and giving

00:32:24,029 --> 00:32:27,869
us a nice pretty output now obviously if

00:32:26,519 --> 00:32:30,119
I was doing reporting I do a lot more

00:32:27,869 --> 00:32:33,409
with it but we don't want to get that

00:32:30,119 --> 00:32:38,879
complicated because we beat her all day

00:32:33,409 --> 00:32:39,779
but again just really quick so now we

00:32:38,879 --> 00:32:43,190
don't want to go there we're done with

00:32:39,779 --> 00:32:43,190
that right now so

00:32:43,200 --> 00:32:47,899
so let's move on to something year and

00:32:45,450 --> 00:32:47,899
get my heart

00:32:48,230 --> 00:32:55,040
so I'm going to make a character because

00:32:53,120 --> 00:32:59,059
we like playing games and this is what I

00:32:55,040 --> 00:33:01,190
do my spare time so for those of you who

00:32:59,059 --> 00:33:03,380
know HP Lovecraft and the whole elder

00:33:01,190 --> 00:33:06,280
ones and call to Zulu we're setting up

00:33:03,380 --> 00:33:09,110
characters that have some of those steps

00:33:06,280 --> 00:33:11,929
so this is their name and they have a

00:33:09,110 --> 00:33:13,250
profession and they have valor right

00:33:11,929 --> 00:33:14,330
because when you're charging to the pace

00:33:13,250 --> 00:33:17,690
of Darkness you have to have a little

00:33:14,330 --> 00:33:20,480
bit of courage so we set up a character

00:33:17,690 --> 00:33:22,700
again this is a class so unlike the open

00:33:20,480 --> 00:33:25,070
class before they had a strength what

00:33:22,700 --> 00:33:27,950
we're looking at here is a completely

00:33:25,070 --> 00:33:30,710
custom class now some things we can talk

00:33:27,950 --> 00:33:32,540
about real briefly you see there's a

00:33:30,710 --> 00:33:33,919
Schrute leaders name you can't change

00:33:32,540 --> 00:33:36,950
your name so I'm only going to let you

00:33:33,919 --> 00:33:39,530
read it I have an attribute accessor now

00:33:36,950 --> 00:33:40,850
that's we don't see the other thing

00:33:39,530 --> 00:33:43,130
there's normally when you set up

00:33:40,850 --> 00:33:46,040
yourself I get in a set method you get

00:33:43,130 --> 00:33:49,490
the value out and set the method well

00:33:46,040 --> 00:33:51,950
with this much like in when your key and

00:33:49,490 --> 00:33:55,179
mano with with C sharp I know evil I'm

00:33:51,950 --> 00:33:57,679
sorry but you can set up a single line

00:33:55,179 --> 00:34:01,460
accessor that now has to get in set

00:33:57,679 --> 00:34:03,200
method no more code needed just there so

00:34:01,460 --> 00:34:05,720
it saves you dozens of lines of code

00:34:03,200 --> 00:34:07,160
that this there's only the one but when

00:34:05,720 --> 00:34:11,090
you're making an object and you have 30

00:34:07,160 --> 00:34:13,250
of these set of 30 30 gets message and

00:34:11,090 --> 00:34:19,899
30 set methods you have 30 lines that

00:34:13,250 --> 00:34:22,280
done so again we get our initialized

00:34:19,899 --> 00:34:23,840
we've got 10 minutes so we're in time

00:34:22,280 --> 00:34:26,720
start moving along and get some

00:34:23,840 --> 00:34:29,359
questions too young and we define are

00:34:26,720 --> 00:34:30,619
you a character because in any game are

00:34:29,359 --> 00:34:33,109
you a character are you a non-player

00:34:30,619 --> 00:34:36,040
character important question to know so

00:34:33,109 --> 00:34:39,320
put that in our standard first iteration

00:34:36,040 --> 00:34:41,869
make a new hash again hash is an object

00:34:39,320 --> 00:34:43,850
so we just make a new hash we're not

00:34:41,869 --> 00:34:45,889
going to set its default you saw on the

00:34:43,850 --> 00:34:48,109
other file why should hash new gave it

00:34:45,889 --> 00:34:49,940
an argument of 0 you can set a default

00:34:48,109 --> 00:34:52,159
value to your hash so when you make a

00:34:49,940 --> 00:34:53,990
new hash it has a value that way if you

00:34:52,159 --> 00:34:55,879
want to do something where you're adding

00:34:53,990 --> 00:34:58,040
up what I did before you can't start

00:34:55,879 --> 00:35:01,940
with mill which is their version of

00:34:58,040 --> 00:35:05,030
nothing mil plus 2 will fail so you said

00:35:01,940 --> 00:35:08,540
a default value and I said some players

00:35:05,030 --> 00:35:11,930
John Calvin and Liza and I go through

00:35:08,540 --> 00:35:16,400
and I just list them out now here's the

00:35:11,930 --> 00:35:18,170
thing well I list them out I'd like to

00:35:16,400 --> 00:35:21,880
know their name profession stuff about

00:35:18,170 --> 00:35:25,040
them but again this is just a rough pass

00:35:21,880 --> 00:35:26,480
well I know their name and I know they

00:35:25,040 --> 00:35:29,080
have an object somewhere that I made and

00:35:26,480 --> 00:35:31,250
defined at the class that's useful right

00:35:29,080 --> 00:35:33,740
I'm sure that people playing this game

00:35:31,250 --> 00:35:36,530
remember you really really thrilled to

00:35:33,740 --> 00:35:43,390
know that their object you know zero by

00:35:36,530 --> 00:35:47,030
seven FC 4-0 yeah that's useful so let's

00:35:43,390 --> 00:35:51,430
improve this little bit shall we so same

00:35:47,030 --> 00:35:55,100
thing right we have valor now put-put

00:35:51,430 --> 00:35:57,350
strength all it's doing is every

00:35:55,100 --> 00:35:59,320
argument on the other side it's calling

00:35:57,350 --> 00:36:01,550
it to underscore s two string method

00:35:59,320 --> 00:36:05,030
right everything is an object when you

00:36:01,550 --> 00:36:06,710
say puts and a double quoted string well

00:36:05,030 --> 00:36:10,220
you're not just sending a string you're

00:36:06,710 --> 00:36:13,190
saying an object right the receiver puts

00:36:10,220 --> 00:36:17,500
is getting your message string object so

00:36:13,190 --> 00:36:17,500
we're going to find this

00:36:17,609 --> 00:36:22,420
define us

00:36:20,320 --> 00:36:26,290
now anything that has a to s which is

00:36:22,420 --> 00:36:30,490
put in print and other objects to talk

00:36:26,290 --> 00:36:34,570
to the screen or to output put the

00:36:30,490 --> 00:36:36,160
player in a min put in spaces to make a

00:36:34,570 --> 00:36:38,370
little prettier putting their valor

00:36:36,160 --> 00:36:41,140
there valorous current valor score and

00:36:38,370 --> 00:36:42,760
put that in a string player info you

00:36:41,140 --> 00:36:46,240
know one of the things about methods is

00:36:42,760 --> 00:36:48,280
there's a couple ways you can return it

00:36:46,240 --> 00:36:50,800
will always turn the last value so if

00:36:48,280 --> 00:36:52,930
you do a calculation you can explicitly

00:36:50,800 --> 00:36:54,820
named it like that but if you put two

00:36:52,930 --> 00:36:58,240
times for your method will return eight

00:36:54,820 --> 00:37:01,210
if it's the last line in there it's a

00:36:58,240 --> 00:37:02,260
boolean operation return true be a

00:37:01,210 --> 00:37:04,090
little careful with that because

00:37:02,260 --> 00:37:07,360
sometimes or return values you don't

00:37:04,090 --> 00:37:12,330
expect so for readability go ahead and

00:37:07,360 --> 00:37:12,330
be split but again

00:37:15,610 --> 00:37:21,670
there we go basic stats that's awesome

00:37:18,990 --> 00:37:23,620
we have valor we have Tara truce great

00:37:21,670 --> 00:37:26,470
we have characters now what in the world

00:37:23,620 --> 00:37:28,870
are they going to do well we don't

00:37:26,470 --> 00:37:31,450
really have NPCs yet we're not that far

00:37:28,870 --> 00:37:34,030
along in game development so we're going

00:37:31,450 --> 00:37:39,190
to look at doing what players do best

00:37:34,030 --> 00:37:41,740
mess with each other so I'm killing yarn

00:37:39,190 --> 00:37:43,990
I Jack guy in the front row work for

00:37:41,740 --> 00:37:45,310
three years he knows my morbid sense of

00:37:43,990 --> 00:37:48,970
humor when it comes to doing things like

00:37:45,310 --> 00:37:51,070
this so again we have our standard we've

00:37:48,970 --> 00:37:54,610
already to find it right we have our

00:37:51,070 --> 00:37:58,570
class methods his character add a little

00:37:54,610 --> 00:38:00,460
thing add skill may affect a skill to

00:37:58,570 --> 00:38:02,380
the skill array I need to find it up to

00:38:00,460 --> 00:38:04,030
our skill hatch others we define a new

00:38:02,380 --> 00:38:07,060
hash up there to get last line and we

00:38:04,030 --> 00:38:10,330
gave them a perception stat they have a

00:38:07,060 --> 00:38:14,280
new stat and we define our to string and

00:38:10,330 --> 00:38:16,450
again we go through the two stats here

00:38:14,280 --> 00:38:18,730
if I wanted to look up I put them into

00:38:16,450 --> 00:38:22,020
an array and iterate I don't but I do do

00:38:18,730 --> 00:38:24,940
this with skills so i take my hash again

00:38:22,020 --> 00:38:28,549
enumeration going through each object in

00:38:24,940 --> 00:38:32,900
the hash it's free each do

00:38:28,549 --> 00:38:36,009
the key and the value and it outputs

00:38:32,900 --> 00:38:39,199
just the skill name because the value is

00:38:36,009 --> 00:38:42,439
anonymous function so when we come down

00:38:39,199 --> 00:38:45,229
here right we have do skill take the

00:38:42,439 --> 00:38:47,059
skill name in the target we check for if

00:38:45,229 --> 00:38:48,559
it's nil we obviously is if they try and

00:38:47,059 --> 00:38:52,130
type something in this exists we don't

00:38:48,559 --> 00:38:55,729
want to do it that's bad facing for them

00:38:52,130 --> 00:38:57,439
and we make sure that the targets of

00:38:55,729 --> 00:38:59,329
character because you don't have NPCs

00:38:57,439 --> 00:39:02,959
yet if we don't want to try and do this

00:38:59,329 --> 00:39:05,719
on Fox and we run through and we have a

00:39:02,959 --> 00:39:08,049
little error message right as no such

00:39:05,719 --> 00:39:10,699
skill shows them if they couldn't do it

00:39:08,049 --> 00:39:13,549
right goes through and notice we have

00:39:10,699 --> 00:39:16,759
the call syntax we take the hash using

00:39:13,549 --> 00:39:19,969
the key which gives us the value we call

00:39:16,759 --> 00:39:22,869
using our target we passed it now this

00:39:19,969 --> 00:39:24,829
is called a call or its proximity and

00:39:22,869 --> 00:39:30,789
prox are simply where you take an

00:39:24,829 --> 00:39:30,789
anonymous function you call it you go

00:39:31,190 --> 00:39:36,349
so typical characters game is afoot so

00:39:35,300 --> 00:39:37,280
we're going to call out we're going to

00:39:36,349 --> 00:39:39,800
see what they're at what they're

00:39:37,280 --> 00:39:42,530
starting stats are slots and skills

00:39:39,800 --> 00:39:44,060
right Liza is a mystic so she has

00:39:42,530 --> 00:39:46,970
terrified it's a good magical kind of

00:39:44,060 --> 00:39:50,270
skill and we have Calvin who has boost

00:39:46,970 --> 00:39:54,200
morale and we have John who gathered

00:39:50,270 --> 00:39:56,839
clues he's an investigator right so they

00:39:54,200 --> 00:39:58,880
each get none notice literally sample

00:39:56,839 --> 00:40:01,040
lambda write it explicitly gives you the

00:39:58,880 --> 00:40:04,069
word so here's your cut here's your

00:40:01,040 --> 00:40:05,390
block of code your chunk now the nice

00:40:04,069 --> 00:40:07,400
thing with this is that we don't have to

00:40:05,390 --> 00:40:10,369
find all these somewhere we can just say

00:40:07,400 --> 00:40:11,569
hey I'm going to pass it on the fly so

00:40:10,369 --> 00:40:12,859
if you have something you want to design

00:40:11,569 --> 00:40:14,599
in later where you just want to pass it

00:40:12,859 --> 00:40:16,579
give them the skill that's not anywhere

00:40:14,599 --> 00:40:18,800
else or defined anywhere else there you

00:40:16,579 --> 00:40:22,310
go as long as it's a ballot and works in

00:40:18,800 --> 00:40:23,540
your game syntax you got it done we're

00:40:22,310 --> 00:40:26,000
going to go through and show all the

00:40:23,540 --> 00:40:30,560
players which is going to show the skill

00:40:26,000 --> 00:40:34,599
to got and we're going to have lies a

00:40:30,560 --> 00:40:34,599
user skill terrified for John

00:40:34,779 --> 00:40:41,729
yes for John and we're going to see what

00:40:39,189 --> 00:40:47,349
happens after they're going to respond

00:40:41,729 --> 00:40:51,209
again using their skills we're in see

00:40:47,349 --> 00:40:51,209
what happens after that so again

00:40:52,940 --> 00:41:00,980
I should be that was less b is less is

00:40:55,700 --> 00:41:03,310
more so game is afoot starting data be a

00:41:00,980 --> 00:41:06,050
ten-dollar five perception easy enough

00:41:03,310 --> 00:41:07,819
we add the skills and we print out okay

00:41:06,050 --> 00:41:09,859
so we see they have their stats in their

00:41:07,819 --> 00:41:14,480
skill each has one we can add as many

00:41:09,859 --> 00:41:15,710
some wants so Liza tries to use your

00:41:14,480 --> 00:41:17,300
skills one goes through there's no

00:41:15,710 --> 00:41:19,040
success message that's just something we

00:41:17,300 --> 00:41:22,310
want to add later right but we do have

00:41:19,040 --> 00:41:24,470
the no such skill afterwards well we see

00:41:22,310 --> 00:41:28,339
that John's dollar is jump has dropped

00:41:24,470 --> 00:41:29,750
down to seventh so Johnny Calvin respond

00:41:28,339 --> 00:41:31,880
they don't fail any their skills they

00:41:29,750 --> 00:41:35,569
put that one typo they get in you've got

00:41:31,880 --> 00:41:38,630
again power 10 perception five because

00:41:35,569 --> 00:41:40,880
for for Calvin nothing happened to him

00:41:38,630 --> 00:41:42,319
John went back up a ten-dollar he added

00:41:40,880 --> 00:41:44,060
five perception he's not going to get

00:41:42,319 --> 00:41:47,750
caught again he'll see it coming and

00:41:44,060 --> 00:41:50,569
avoid it right and Liza stays the same

00:41:47,750 --> 00:41:53,810
still has her terrified skill now again

00:41:50,569 --> 00:41:55,460
all that for free there's a lot of

00:41:53,810 --> 00:41:56,530
overhead that we're not seeing if you've

00:41:55,460 --> 00:41:58,819
worked on other languages you know

00:41:56,530 --> 00:42:00,210
exactly how much we did with about this

00:41:58,819 --> 00:42:08,099
much code

00:42:00,210 --> 00:42:13,640
for free so that being said that is

00:42:08,099 --> 00:42:13,640
concludes the demo part of the pieces

00:42:14,740 --> 00:42:17,850
I'm going to open it up to

00:42:18,280 --> 00:42:23,650
in fact we were questions I might even

00:42:21,160 --> 00:42:26,340
have answer no guarantee

00:42:23,650 --> 00:42:26,340
anyone

00:42:35,500 --> 00:42:40,090
so if you were modifying those skill

00:42:37,870 --> 00:42:41,500
functions to be a little more

00:42:40,090 --> 00:42:42,970
comprehensive would you still use

00:42:41,500 --> 00:42:44,950
lambdas or would you choose to make them

00:42:42,970 --> 00:42:48,280
first-class citizens or how would you do

00:42:44,950 --> 00:42:49,750
that instead well it depends on how

00:42:48,280 --> 00:42:51,430
we're doing it I might have a set

00:42:49,750 --> 00:42:54,610
definition of classes we can associate

00:42:51,430 --> 00:42:56,050
them to say player classes guild you

00:42:54,610 --> 00:42:57,790
know the set fix things we all know

00:42:56,050 --> 00:43:01,360
priests cleric investigate or whatever

00:42:57,790 --> 00:43:03,670
and then have special special items that

00:43:01,360 --> 00:43:04,900
are add-on skills right uniques and have

00:43:03,670 --> 00:43:06,730
those we landed so we might have a

00:43:04,900 --> 00:43:09,370
different skill tree a fixed skill tree

00:43:06,730 --> 00:43:11,020
and then your lambda basic skill tree

00:43:09,370 --> 00:43:13,660
which is things get from quest awards

00:43:11,020 --> 00:43:16,750
are totally unique to you that's a

00:43:13,660 --> 00:43:17,890
design decision we get there we you get

00:43:16,750 --> 00:43:22,660
we make those decisions when you cross

00:43:17,890 --> 00:43:24,070
that bridge but both words just running

00:43:22,660 --> 00:43:25,900
off a server with an interpreter out

00:43:24,070 --> 00:43:27,490
there and then coming down to a client

00:43:25,900 --> 00:43:29,950
or do you download an interpreter

00:43:27,490 --> 00:43:32,140
locally and run this locally Ruby comes

00:43:29,950 --> 00:43:34,570
by default with OS 10 which is what I'm

00:43:32,140 --> 00:43:36,970
running here on my linode I have it

00:43:34,570 --> 00:43:40,120
installed it comes in your package

00:43:36,970 --> 00:43:43,720
management so it on a debian guy so ask

00:43:40,120 --> 00:43:46,480
it Ruby and you get they have 1.9 point

00:43:43,720 --> 00:43:49,690
3 this is Ruby 2 point 0 either works

00:43:46,480 --> 00:43:52,210
both are supported so they have a

00:43:49,690 --> 00:43:53,730
windows installer as well they have

00:43:52,210 --> 00:43:55,720
source code if you want to compile it

00:43:53,730 --> 00:43:59,060
show you up to you so you can put this

00:43:55,720 --> 00:44:00,980
anywhere so

00:43:59,060 --> 00:44:02,750
including embedded devices by the way

00:44:00,980 --> 00:44:03,950
they're branching into that the next

00:44:02,750 --> 00:44:06,470
couple iterations of Ruby are getting

00:44:03,950 --> 00:44:08,780
much more efficient because Matt's the

00:44:06,470 --> 00:44:10,040
guy that came up with this language he

00:44:08,780 --> 00:44:11,510
wants to get it more into embedded works

00:44:10,040 --> 00:44:13,550
i'm gonna start playing with the arduino

00:44:11,510 --> 00:44:16,370
suit maybe make sure i'll have something

00:44:13,550 --> 00:44:19,700
with that we'll see you said that all

00:44:16,370 --> 00:44:22,130
classes are open does that ever does an

00:44:19,700 --> 00:44:24,230
issue ever come in to come into

00:44:22,130 --> 00:44:27,580
consideration of security of certain

00:44:24,230 --> 00:44:30,620
classes like in java if you don't want a

00:44:27,580 --> 00:44:32,990
certain classes to access you make them

00:44:30,620 --> 00:44:34,550
private or not yes you didn't get into

00:44:32,990 --> 00:44:37,130
those keywords but you do have just like

00:44:34,550 --> 00:44:39,500
in java private protected public so you

00:44:37,130 --> 00:44:42,980
can you can protect your methods okay

00:44:39,500 --> 00:44:45,160
and hide them encapsulation okay any

00:44:42,980 --> 00:44:45,160
other questions

00:44:45,650 --> 00:44:50,880
anybody

00:44:47,980 --> 00:44:53,530
so I'm going to leave you with this and

00:44:50,880 --> 00:44:55,510
again we talked about readability all

00:44:53,530 --> 00:44:58,300
throughout this there's an old thing

00:44:55,510 --> 00:45:00,790
from Tom playing C++ from when I was

00:44:58,300 --> 00:45:02,170
growing up always code is if the person

00:45:00,790 --> 00:45:04,240
who ends up maintain your code is a

00:45:02,170 --> 00:45:06,340
violent psychopath who knows where you

00:45:04,240 --> 00:45:07,720
live and for those of you who've been

00:45:06,340 --> 00:45:09,810
any kind of code maintenance job you

00:45:07,720 --> 00:45:14,050
know exactly how important this is

00:45:09,810 --> 00:45:15,340
because you never know and sometimes the

00:45:14,050 --> 00:45:17,730
guy that maintains your code gets

00:45:15,340 --> 00:45:21,190
promoted and suddenly they're your boss

00:45:17,730 --> 00:45:23,770
been there done that so thankfully I was

00:45:21,190 --> 00:45:27,760
on the receiving end of that one but

00:45:23,770 --> 00:45:29,040
again just be careful out there and

00:45:27,760 --> 00:45:32,050
we'll leave you with some more stuff

00:45:29,040 --> 00:45:35,290
right if you want to learn more the

00:45:32,050 --> 00:45:37,480
pickaxe is the seminal work Dave Thomas

00:45:35,290 --> 00:45:42,520
wrote it no not the guy that used to be

00:45:37,480 --> 00:45:44,859
lead Wendy's and that is the book in the

00:45:42,520 --> 00:45:47,890
back it has to complete ruby da ruby dot

00:45:44,859 --> 00:45:49,570
org just like pro-lok you can get all of

00:45:47,890 --> 00:45:50,950
your information classes it's also

00:45:49,570 --> 00:45:52,150
available with our eye on the command

00:45:50,950 --> 00:45:54,790
line actually i'll show you guys that

00:45:52,150 --> 00:45:56,170
right before we leave and Ruby Lang is

00:45:54,790 --> 00:45:57,990
the language you can download the

00:45:56,170 --> 00:46:01,180
interpreter and everything else there

00:45:57,990 --> 00:46:05,020
find some web-sites go do stuff cool

00:46:01,180 --> 00:46:07,270
projects oh yes yes i use a mac and i

00:46:05,020 --> 00:46:09,070
want a package manager homebrew gives me

00:46:07,270 --> 00:46:12,070
that i can install all of my linux stuff

00:46:09,070 --> 00:46:13,060
right there rails is web framework

00:46:12,070 --> 00:46:15,190
that's what i'm going to be learning

00:46:13,060 --> 00:46:16,300
right now that's why i started on rosie

00:46:15,190 --> 00:46:18,460
was getting to this i was a web

00:46:16,300 --> 00:46:20,380
developer few years so it's one of the

00:46:18,460 --> 00:46:22,630
most popular frameworks out there and

00:46:20,380 --> 00:46:24,130
then discourse who here knows named Jeff

00:46:22,630 --> 00:46:27,020
Atwood

00:46:24,130 --> 00:46:29,180
who here weeds coding a horror blog or a

00:46:27,020 --> 00:46:31,970
scene encoding horror yeah this course

00:46:29,180 --> 00:46:34,310
is his new project and it's taking if

00:46:31,970 --> 00:46:36,680
we've all seen PHP Bolton board jpg d

00:46:34,310 --> 00:46:38,300
yeah go look at a site and wait in the

00:46:36,680 --> 00:46:41,120
way back engine from 10 years ago and

00:46:38,300 --> 00:46:43,040
look at things like today nothing

00:46:41,120 --> 00:46:44,450
different so this course is trying to

00:46:43,040 --> 00:46:46,550
change it for the new way we interact

00:46:44,450 --> 00:46:49,490
with our devices with mobile streaming

00:46:46,550 --> 00:46:51,500
in as we talk it's really cool and it's

00:46:49,490 --> 00:46:53,330
just about come out of beta they're now

00:46:51,500 --> 00:46:56,840
saying it's stable been out for about a

00:46:53,330 --> 00:46:58,610
year and a half now so again some really

00:46:56,840 --> 00:47:01,070
cool stuff going on we didn't even get

00:46:58,610 --> 00:47:03,170
the gems so maybe next year and

00:47:01,070 --> 00:47:07,210
intermediate talk and thanks much

00:47:03,170 --> 00:47:07,210
everybody have a great time itself okay

00:47:45,259 --> 00:47:49,529
your customers rely on your website or

00:47:47,999 --> 00:47:51,929
application if it's slower

00:47:49,529 --> 00:47:54,869
non-responsive it infuriates your users

00:47:51,929 --> 00:47:56,669
and costs you money keeping your

00:47:54,869 --> 00:48:00,180
business critical systems humming along

00:47:56,669 --> 00:48:02,490
requires insight into what they're doing

00:48:00,180 --> 00:48:04,470
your system metrics tells stories

00:48:02,490 --> 00:48:06,480
stories that can reveal performance

00:48:04,470 --> 00:48:08,790
bottlenecks resource limitations and

00:48:06,480 --> 00:48:10,380
other problems but how do you keep an

00:48:08,790 --> 00:48:13,020
eye on all of your systems performance

00:48:10,380 --> 00:48:16,020
metrics in real-time and record this

00:48:13,020 --> 00:48:17,790
data for later analysis enter longview

00:48:16,020 --> 00:48:19,829
the new way to see what's really going

00:48:17,790 --> 00:48:21,990
on under the hood the long view

00:48:19,829 --> 00:48:24,030
dashboard lets you visualize the status

00:48:21,990 --> 00:48:26,490
of all your systems providing you with a

00:48:24,030 --> 00:48:29,880
bird's-eye view of your entire fleet you

00:48:26,490 --> 00:48:32,460
can sort by cpu memory swap processes

00:48:29,880 --> 00:48:34,200
load and network usage click a specific

00:48:32,460 --> 00:48:36,599
system to access its individual

00:48:34,200 --> 00:48:39,140
dashboard then click and drag to zoom in

00:48:36,599 --> 00:48:41,520
on chokepoints and get more detail

00:48:39,140 --> 00:48:43,200
comprehensive network data including

00:48:41,520 --> 00:48:45,510
inbound and outbound traffic is

00:48:43,200 --> 00:48:47,069
available on the network tab and disk

00:48:45,510 --> 00:48:48,990
rights and free space on the disk

00:48:47,069 --> 00:48:51,839
stabbed while the process Explorer

00:48:48,990 --> 00:48:54,359
displays usage statistics for individual

00:48:51,839 --> 00:48:56,550
processes the system info tab shows

00:48:54,359 --> 00:48:58,800
listening services active connections

00:48:56,550 --> 00:49:00,930
and available updates adding long view

00:48:58,800 --> 00:49:02,609
to a system is easy just click the

00:49:00,930 --> 00:49:04,770
button copy the one line installation

00:49:02,609 --> 00:49:07,200
command then run the command on your

00:49:04,770 --> 00:49:08,910
linux system to complete the process the

00:49:07,200 --> 00:49:11,099
agent will begin collecting data and

00:49:08,910 --> 00:49:12,940
sending it to longview then the graphs

00:49:11,099 --> 00:49:15,490
start rolling

00:49:12,940 --> 00:49:17,859
use longview to gain visibility into

00:49:15,490 --> 00:49:21,599
your servers so when your website or app

00:49:17,859 --> 00:49:21,599

YouTube URL: https://www.youtube.com/watch?v=scxPS4uPyBI


