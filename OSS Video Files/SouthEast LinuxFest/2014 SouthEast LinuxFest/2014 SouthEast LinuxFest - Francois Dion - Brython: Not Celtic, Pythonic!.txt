Title: 2014 SouthEast LinuxFest - Francois Dion - Brython: Not Celtic, Pythonic!
Publication date: 2015-05-02
Playlist: 2014 SouthEast LinuxFest
Description: 
	2014 SouthEast LinuxFest
Francois Dion
Bryton: Not Celtic, Pythonic!
Captions: 
	00:00:00,060 --> 00:00:05,339
the following presentation was recorded

00:00:02,100 --> 00:00:08,189
the 2014 southeast Linux Fest in

00:00:05,339 --> 00:00:11,070
Charlotte North Carolina it is licensed

00:00:08,189 --> 00:00:16,890
under a Creative Commons license for

00:00:11,070 --> 00:00:18,480
more information visit www.mchcp.org the

00:00:16,890 --> 00:00:20,750
south east linux fest would like to

00:00:18,480 --> 00:00:23,820
thank the following diamond sponsors in

00:00:20,750 --> 00:00:27,300
2014 for helping make these videos pasta

00:00:23,820 --> 00:00:32,279
my twitter address right there if you

00:00:27,300 --> 00:00:36,540
want to make some comments referencing

00:00:32,279 --> 00:00:44,219
this talk obviously using the hashtag

00:00:36,540 --> 00:00:49,620
self 2014 also so welcome to this talk

00:00:44,219 --> 00:00:52,289
on bright on in first before we start

00:00:49,620 --> 00:00:58,739
i'd like to get a feel a little bit for

00:00:52,289 --> 00:01:05,129
the audience developers people that do

00:00:58,739 --> 00:01:09,020
programming okay um system people i'm

00:01:05,129 --> 00:01:15,380
miss traders and small so forth okay

00:01:09,020 --> 00:01:17,700
people in education alright very good

00:01:15,380 --> 00:01:21,180
just it gives me a little bit of a

00:01:17,700 --> 00:01:22,830
background so let's let's go treat the

00:01:21,180 --> 00:01:25,170
information first of all about me since

00:01:22,830 --> 00:01:29,400
i've asked a little bit about you your

00:01:25,170 --> 00:01:32,280
are a few points about myself so from

00:01:29,400 --> 00:01:34,320
the accident you probably can tell I was

00:01:32,280 --> 00:01:36,570
born elsewhere so I'm french-canadian

00:01:34,320 --> 00:01:40,799
and currently living in the p.m. on

00:01:36,570 --> 00:01:44,340
trial in winston-salem I founded two

00:01:40,799 --> 00:01:48,360
years ago the Python user group for to

00:01:44,340 --> 00:01:54,930
try and the main reason for me starting

00:01:48,360 --> 00:01:59,909
that was to provide a way to help in the

00:01:54,930 --> 00:02:04,590
community particularly younger ones to

00:01:59,909 --> 00:02:08,670
learn programming not making it look as

00:02:04,590 --> 00:02:11,340
boring as it could be and Python was

00:02:08,670 --> 00:02:13,680
just a good language to do that so I

00:02:11,340 --> 00:02:18,799
started that two years ago

00:02:13,680 --> 00:02:21,959
I do a lot of embedded development

00:02:18,799 --> 00:02:24,540
programming and design hardware true

00:02:21,959 --> 00:02:26,359
Deon research for the past six months

00:02:24,540 --> 00:02:30,680
I've been doing a lot of Python

00:02:26,359 --> 00:02:37,739
programming at in Marr in winston-salem

00:02:30,680 --> 00:02:41,540
and also I write a blog on the Raspberry

00:02:37,739 --> 00:02:43,709
Pi and the Python programming language

00:02:41,540 --> 00:02:44,609
some of the stuff you might have seen

00:02:43,709 --> 00:02:47,159
before

00:02:44,609 --> 00:02:49,200
I designed a sketch that was controlled

00:02:47,159 --> 00:02:54,299
by a Raspberry Pi that was a fairly

00:02:49,200 --> 00:02:57,000
popular project and as far as the talk

00:02:54,299 --> 00:03:03,569
today Brighton I'm one of the main

00:02:57,000 --> 00:03:06,959
contributors early on we actually were

00:03:03,569 --> 00:03:08,879
doing that fairly informally as far as

00:03:06,959 --> 00:03:12,239
the development and we'll get into that

00:03:08,879 --> 00:03:18,449
and what it what it is and what it means

00:03:12,239 --> 00:03:21,239
so Brighton was designed to basically if

00:03:18,449 --> 00:03:22,729
I say you're gonna write code for a web

00:03:21,239 --> 00:03:27,599
page on the client side

00:03:22,729 --> 00:03:31,470
your answer would be JavaScript right so

00:03:27,599 --> 00:03:34,169
it's been like that for a long amount of

00:03:31,470 --> 00:03:37,019
time but there's nothing that says that

00:03:34,169 --> 00:03:40,139
that should be the status quo after all

00:03:37,019 --> 00:03:41,939
if I told you that on your new computer

00:03:40,139 --> 00:03:48,449
the only programming language you can

00:03:41,939 --> 00:03:50,159
use is assembly language or basic you'd

00:03:48,449 --> 00:03:53,069
say hey wait a second what about C what

00:03:50,159 --> 00:03:54,540
about C++ Pascal Java what about all

00:03:53,069 --> 00:03:55,280
these other languages why can't I do

00:03:54,540 --> 00:03:57,930
that

00:03:55,280 --> 00:04:00,120
well that's curiously enough we've never

00:03:57,930 --> 00:04:03,720
asked that question when it came to the

00:04:00,120 --> 00:04:08,370
web browser there's been some attempts

00:04:03,720 --> 00:04:10,439
over the years but Python also has been

00:04:08,370 --> 00:04:12,989
through different iterations as far as

00:04:10,439 --> 00:04:15,479
the language itself Python 3 is the

00:04:12,989 --> 00:04:18,539
latest implementation although Python

00:04:15,479 --> 00:04:23,969
2.7 is very popular as far as bright on

00:04:18,539 --> 00:04:26,710
it is trying to be as complete in terms

00:04:23,969 --> 00:04:31,100
of compatibility with Python tree

00:04:26,710 --> 00:04:32,990
so what it is where to get it and some

00:04:31,100 --> 00:04:36,889
of its features and we'll do some

00:04:32,990 --> 00:04:44,289
demonstrations today and where did that

00:04:36,889 --> 00:04:48,849
name come from well it is a Welsh word

00:04:44,289 --> 00:04:52,099
for begotten and the designer of

00:04:48,849 --> 00:04:53,960
Brighton is P at content and beyond

00:04:52,099 --> 00:04:57,020
today is not only French but he's Berto

00:04:53,960 --> 00:05:00,099
so that was his motivation behind the

00:04:57,020 --> 00:05:03,680
name and also of course it had a

00:05:00,099 --> 00:05:07,009
similarity with Python itself and it's

00:05:03,680 --> 00:05:10,759
trying to be a full implementation of

00:05:07,009 --> 00:05:14,419
Python so it was a toward the end of

00:05:10,759 --> 00:05:19,729
2012 that an announcement was made on a

00:05:14,419 --> 00:05:23,449
French mailing list Python France and as

00:05:19,729 --> 00:05:26,810
I saw that I was like this guy is making

00:05:23,449 --> 00:05:29,720
stories up I read that that can that be

00:05:26,810 --> 00:05:31,880
true can you actually run Python and in

00:05:29,720 --> 00:05:35,990
the web browser so I started looking

00:05:31,880 --> 00:05:38,810
into dad and I saw in the page there was

00:05:35,990 --> 00:05:41,000
a script type equal text slash Python

00:05:38,810 --> 00:05:44,750
and below of course there was some

00:05:41,000 --> 00:05:46,520
actual Python code in the page and the

00:05:44,750 --> 00:05:49,699
moment I saw that I was like okay I have

00:05:46,520 --> 00:05:53,750
to participate in that endeavor and this

00:05:49,699 --> 00:05:56,930
project and do something with it so

00:05:53,750 --> 00:06:00,320
again why Python in the browser well as

00:05:56,930 --> 00:06:02,960
I mentioned on a computer when you buy a

00:06:00,320 --> 00:06:07,130
computer if I told you you can only run

00:06:02,960 --> 00:06:09,639
this one programming language you ask

00:06:07,130 --> 00:06:12,349
why can't I install that one or this one

00:06:09,639 --> 00:06:14,449
right so that was one of the reason

00:06:12,349 --> 00:06:18,139
another reason is that some of the

00:06:14,449 --> 00:06:22,969
devices some of the laptops for example

00:06:18,139 --> 00:06:26,270
our web browser only pretty much if we

00:06:22,969 --> 00:06:29,150
thought think about Chromebooks and

00:06:26,270 --> 00:06:32,449
things like that we are starting to see

00:06:29,150 --> 00:06:34,610
a shift away from full operating system

00:06:32,449 --> 00:06:36,979
on some devices or an operating system

00:06:34,610 --> 00:06:39,120
that we don't have direct access to so

00:06:36,979 --> 00:06:42,590
it would be nice to be able to do

00:06:39,120 --> 00:06:45,510
to write some code on these things

00:06:42,590 --> 00:06:49,530
another reason that it's interesting is

00:06:45,510 --> 00:06:53,400
that let's say you have a server and you

00:06:49,530 --> 00:06:58,380
want to scale it across hundreds of

00:06:53,400 --> 00:07:00,150
clients thousands of clients if you have

00:06:58,380 --> 00:07:02,940
all your code running on the server

00:07:00,150 --> 00:07:06,150
obviously she's gonna have to add more

00:07:02,940 --> 00:07:07,949
and more servers or increase the size

00:07:06,150 --> 00:07:10,970
the capacity of the server things like

00:07:07,949 --> 00:07:13,949
that if you can offload some of this

00:07:10,970 --> 00:07:16,560
processing on the client side then

00:07:13,949 --> 00:07:19,220
suddenly you have increased your scaling

00:07:16,560 --> 00:07:21,510
and that's the whole reason for

00:07:19,220 --> 00:07:24,330
applications that are using JavaScript

00:07:21,510 --> 00:07:27,750
obviously so the the thinking is similar

00:07:24,330 --> 00:07:31,889
from that angle where it defers or where

00:07:27,750 --> 00:07:33,479
there's a divergence is that for those

00:07:31,889 --> 00:07:36,060
in education you've probably noticed

00:07:33,479 --> 00:07:39,690
that JavaScript is a little harder to

00:07:36,060 --> 00:07:42,240
teach then Python if you have not tried

00:07:39,690 --> 00:07:47,580
Python you'll you'll see that that is

00:07:42,240 --> 00:07:49,680
the case and it it's not a slam against

00:07:47,580 --> 00:07:52,500
JavaScript it's just that that was not

00:07:49,680 --> 00:07:55,470
one of the design goals whereas in the

00:07:52,500 --> 00:07:57,750
case of Python that was the case so

00:07:55,470 --> 00:07:59,310
these are some of the it gives us a

00:07:57,750 --> 00:08:02,940
little bit of a background as to the

00:07:59,310 --> 00:08:05,190
reason for that and well there's a good

00:08:02,940 --> 00:08:07,310
amount of documentation and that's

00:08:05,190 --> 00:08:10,919
important

00:08:07,310 --> 00:08:14,930
obviously one would like to learn about

00:08:10,919 --> 00:08:18,900
a programming language and in this case

00:08:14,930 --> 00:08:20,880
there's the documentation of advance of

00:08:18,900 --> 00:08:23,449
things that are expected in a web

00:08:20,880 --> 00:08:25,949
browser and there's also just a plain

00:08:23,449 --> 00:08:30,030
frequently asked questions the syntax

00:08:25,949 --> 00:08:32,459
keywords and so that's very important

00:08:30,030 --> 00:08:35,640
and from that angle Brighton is fairly

00:08:32,459 --> 00:08:38,760
well documented the documentation is

00:08:35,640 --> 00:08:41,669
available in a variety of natural

00:08:38,760 --> 00:08:47,700
languages French English Spanish

00:08:41,669 --> 00:08:49,450
Portuguese and so it gives people not

00:08:47,700 --> 00:08:52,840
just in the US but around

00:08:49,450 --> 00:08:54,550
globe and access to the documentation to

00:08:52,840 --> 00:08:57,490
the language and that's something that's

00:08:54,550 --> 00:09:01,620
important obviously and of course I

00:08:57,490 --> 00:09:01,620
clicked there you go

00:09:01,710 --> 00:09:10,260
so in 2012 was version point 1.0 version

00:09:06,660 --> 00:09:14,860
2.0 earlier this year and that

00:09:10,260 --> 00:09:16,780
introduced really some of the features

00:09:14,860 --> 00:09:22,450
it's all small and the font size I'll

00:09:16,780 --> 00:09:27,160
see if I can increase some of the

00:09:22,450 --> 00:09:30,480
features that were added were - and some

00:09:27,160 --> 00:09:33,040
of the last pieces of functionality that

00:09:30,480 --> 00:09:37,600
we're missing to have a real

00:09:33,040 --> 00:09:40,620
implementation of Python 3 now python 3

00:09:37,600 --> 00:09:43,510
or python in general is not just the

00:09:40,620 --> 00:09:45,550
Python language itself there's also all

00:09:43,510 --> 00:09:48,910
the libraries and that's where some of

00:09:45,550 --> 00:09:52,360
the work has now shifted to support all

00:09:48,910 --> 00:09:54,430
these different libraries and again

00:09:52,360 --> 00:09:56,620
since this presentation will be

00:09:54,430 --> 00:09:58,890
available you can follow at your leisure

00:09:56,620 --> 00:10:03,130
I'm not going to go into the detail

00:09:58,890 --> 00:10:08,560
right now so where to get it

00:10:03,130 --> 00:10:11,110
you can go to Brighton that info or

00:10:08,560 --> 00:10:12,880
bitbucket there's also a link on the

00:10:11,110 --> 00:10:15,070
Brighton side to downloaded from

00:10:12,880 --> 00:10:17,230
bitbucket either in source form or an

00:10:15,070 --> 00:10:21,100
archive so you can download it on your

00:10:17,230 --> 00:10:23,970
local machine or you as I mentioned or

00:10:21,100 --> 00:10:27,130
not perhaps you don't want to install it

00:10:23,970 --> 00:10:31,060
and we'll see how we can do that so how

00:10:27,130 --> 00:10:35,020
does it work if we think about dad web

00:10:31,060 --> 00:10:37,300
browser only understands natively

00:10:35,020 --> 00:10:39,760
JavaScript so how does that work

00:10:37,300 --> 00:10:43,240
so Brian is an engine that's actually

00:10:39,760 --> 00:10:46,270
written in JavaScript and it what it

00:10:43,240 --> 00:10:49,720
does is it scans the HTML document and

00:10:46,270 --> 00:10:52,840
it looks for Python code oh I got some

00:10:49,720 --> 00:10:54,670
Python code when it finds some it will

00:10:52,840 --> 00:10:57,460
actually build a tree representing that

00:10:54,670 --> 00:11:00,010
Python code will translate that to

00:10:57,460 --> 00:11:01,370
JavaScript and then will execute the

00:11:00,010 --> 00:11:04,430
JavaScript code that is

00:11:01,370 --> 00:11:07,190
rated from death so obviously there's a

00:11:04,430 --> 00:11:12,500
lot more to it than then that but that's

00:11:07,190 --> 00:11:14,750
a high-level view so just I figure out

00:11:12,500 --> 00:11:20,589
pause for a second if anybody has any

00:11:14,750 --> 00:11:20,589
questions up to now no oh go ahead

00:11:23,860 --> 00:11:30,050
why in your language

00:11:25,640 --> 00:11:32,960
okay so Python just to put things in

00:11:30,050 --> 00:11:36,860
perspective has been around for quite a

00:11:32,960 --> 00:11:38,510
while so if you look on rosetta code for

00:11:36,860 --> 00:11:41,450
example which is a comparison of all the

00:11:38,510 --> 00:11:42,440
languages currently you'll find over 450

00:11:41,450 --> 00:11:45,920
good question

00:11:42,440 --> 00:11:49,970
Apple just introduced a new language and

00:11:45,920 --> 00:11:53,690
so so I mean that's a good question why

00:11:49,970 --> 00:11:55,730
another one I mean there's been new

00:11:53,690 --> 00:11:57,770
languages introduced over the years in

00:11:55,730 --> 00:11:59,660
the case of Python has been around for a

00:11:57,770 --> 00:12:03,310
lot longer than people realized it

00:11:59,660 --> 00:12:07,130
actually started gaining momentum in the

00:12:03,310 --> 00:12:09,880
educational part scale universities at

00:12:07,130 --> 00:12:14,680
least in Canada and in Europe in the

00:12:09,880 --> 00:12:19,220
1990s and mid nineties I was developing

00:12:14,680 --> 00:12:21,380
web sites using Python technology at

00:12:19,220 --> 00:12:25,550
that point so it's been around for a

00:12:21,380 --> 00:12:28,160
good while it's just that now people are

00:12:25,550 --> 00:12:34,540
looking at this oh I can now run this on

00:12:28,160 --> 00:12:37,700
my web browser which is this is the new

00:12:34,540 --> 00:12:40,660
realm for it and really there's

00:12:37,700 --> 00:12:45,279
something that's I would call Python

00:12:40,660 --> 00:12:47,360
anywhere so you can buy a teensy

00:12:45,279 --> 00:12:50,529
microcontroller anybody familiar with

00:12:47,360 --> 00:12:54,370
those it's a little bit like an Arduino

00:12:50,529 --> 00:12:58,580
it uses a Atmel or an arm

00:12:54,370 --> 00:13:00,010
microcontroller or microprocessor and so

00:12:58,580 --> 00:13:05,900
it's a board that's about this size

00:13:00,010 --> 00:13:08,900
where you can run natively Python

00:13:05,900 --> 00:13:11,829
applications on on that small device so

00:13:08,900 --> 00:13:14,420
it scales from dad all the way to

00:13:11,829 --> 00:13:20,269
supercomputing clusters with

00:13:14,420 --> 00:13:22,820
Vidia acceleration of numerical

00:13:20,269 --> 00:13:27,019
computations true the kuda engine and

00:13:22,820 --> 00:13:30,649
that's all done with Python syntax so it

00:13:27,019 --> 00:13:36,040
scales ton so it was just the next step

00:13:30,649 --> 00:13:36,040
to see it appear on the web browser

00:13:44,019 --> 00:13:50,240
right so in the case of Python when you

00:13:47,120 --> 00:13:52,760
oh yes I will definitely repeat the

00:13:50,240 --> 00:13:55,639
question so the question was will you

00:13:52,760 --> 00:13:59,420
get a JavaScript or an actual Python

00:13:55,639 --> 00:14:01,670
error trace on this so what you'll

00:13:59,420 --> 00:14:03,740
actually get is a python trace it'll

00:14:01,670 --> 00:14:08,329
tell you where in the code you've made

00:14:03,740 --> 00:14:12,560
your mistake and so that that's the goal

00:14:08,329 --> 00:14:14,720
really that you should know that there's

00:14:12,560 --> 00:14:16,639
really JavaScript behind the scene just

00:14:14,720 --> 00:14:19,670
like maybe you have a program that

00:14:16,639 --> 00:14:21,290
you're running it's compiled might have

00:14:19,670 --> 00:14:25,130
been written in assembly language for

00:14:21,290 --> 00:14:28,790
all we know but I shouldn't give you hex

00:14:25,130 --> 00:14:31,899
dumps of the stack in that case I should

00:14:28,790 --> 00:14:35,660
give you errors that are significant so

00:14:31,899 --> 00:14:42,470
again yeah it would be a a Python type

00:14:35,660 --> 00:14:45,140
of error that you would get okay so as

00:14:42,470 --> 00:14:47,600
far as deploying this perhaps you don't

00:14:45,140 --> 00:14:50,829
want to install it right you might have

00:14:47,600 --> 00:14:53,630
a laptop where you don't have access to

00:14:50,829 --> 00:14:56,690
and in writes or something like that

00:14:53,630 --> 00:14:59,810
well you can go directly on the bright

00:14:56,690 --> 00:15:02,870
on site and get a console and this will

00:14:59,810 --> 00:15:06,260
allow you to put a command directly so

00:15:02,870 --> 00:15:11,420
the simplest thing is a print statement

00:15:06,260 --> 00:15:16,579
in Python and if I do hello well that's

00:15:11,420 --> 00:15:19,339
the most basic form of interaction with

00:15:16,579 --> 00:15:21,410
a console it returned exactly what I

00:15:19,339 --> 00:15:24,620
asked it to return

00:15:21,410 --> 00:15:29,720
so already at this level this could be

00:15:24,620 --> 00:15:31,250
used to learn the language directly but

00:15:29,720 --> 00:15:33,940
again since is this compatible with

00:15:31,250 --> 00:15:42,200
Python you can also use a Python

00:15:33,940 --> 00:15:48,380
interpreter and if we go back there's

00:15:42,200 --> 00:15:53,600
also an editor if we look at the editor

00:15:48,380 --> 00:15:55,100
it allows us to choose our colors and so

00:15:53,600 --> 00:15:58,340
on so forth the eye lighting we can

00:15:55,100 --> 00:16:01,250
write in the code and as we run it then

00:15:58,340 --> 00:16:04,880
in this case it's a test that was added

00:16:01,250 --> 00:16:10,670
but I can also remove this again the

00:16:04,880 --> 00:16:12,830
same thing that I did earlier so that be

00:16:10,670 --> 00:16:14,900
the first step and then in this case I

00:16:12,830 --> 00:16:19,760
can't just hit enter I'd have to run it

00:16:14,900 --> 00:16:21,890
and it tells me hello on this side but

00:16:19,760 --> 00:16:23,810
further than that I can actually say

00:16:21,890 --> 00:16:26,740
well show me the JavaScript code that

00:16:23,810 --> 00:16:30,650
corresponds to that and it'll show me

00:16:26,740 --> 00:16:32,480
right there so again up to now I've not

00:16:30,650 --> 00:16:36,710
installed anything I'm just running it

00:16:32,480 --> 00:16:39,830
directly in my browser there's also a

00:16:36,710 --> 00:16:43,010
bright on playground in pi fiddle both

00:16:39,830 --> 00:16:48,580
are going into the same area that

00:16:43,010 --> 00:16:54,680
jsfiddle goes into for JavaScript

00:16:48,580 --> 00:16:58,310
there's another one the little robot got

00:16:54,680 --> 00:17:03,350
lost here reball reborg swirled so

00:16:58,310 --> 00:17:05,270
Andreja Bell Canadian created some years

00:17:03,350 --> 00:17:08,839
back an educational program that was

00:17:05,270 --> 00:17:13,640
called rupal it's actually currently

00:17:08,839 --> 00:17:18,680
distributed by a South Korean company as

00:17:13,640 --> 00:17:21,470
with a book to teach programming so he

00:17:18,680 --> 00:17:25,130
decided to port this application that he

00:17:21,470 --> 00:17:28,990
had written in Python for the desktop

00:17:25,130 --> 00:17:32,780
and get that running on a computer

00:17:28,990 --> 00:17:33,679
through a web browser and so reborns

00:17:32,780 --> 00:17:38,940
were

00:17:33,679 --> 00:17:40,950
came upon him to fruition and the way it

00:17:38,940 --> 00:17:45,110
works is if you've never seen any of

00:17:40,950 --> 00:17:48,899
these type of interfaces for teaching

00:17:45,110 --> 00:17:51,840
kids in school basically on one side you

00:17:48,899 --> 00:17:53,700
have a grid with a little robot and on

00:17:51,840 --> 00:17:57,570
this side you have a way to enter

00:17:53,700 --> 00:17:59,899
commands so it's another way to teach

00:17:57,570 --> 00:18:03,090
the language to learn about the language

00:17:59,899 --> 00:18:05,639
so in this case there's a few commands

00:18:03,090 --> 00:18:07,889
that are already entered when it's move

00:18:05,639 --> 00:18:11,759
when it's turned left and when is move

00:18:07,889 --> 00:18:16,289
so if we run it step by step we'll see

00:18:11,759 --> 00:18:18,929
it you move by one you turn left and

00:18:16,289 --> 00:18:23,239
then click move again and so we continue

00:18:18,929 --> 00:18:25,590
to move so this is akin to scratch or

00:18:23,239 --> 00:18:28,139
turtle graphics or some of these

00:18:25,590 --> 00:18:30,690
applications that allow a visual

00:18:28,139 --> 00:18:35,489
representation of actual programming

00:18:30,690 --> 00:18:42,600
commands so this is effective for

00:18:35,489 --> 00:18:48,499
younger kids obviously but the point is

00:18:42,600 --> 00:18:48,499
that it again it uses bright on for

00:18:48,889 --> 00:18:59,940
evaluating the Python code here so all

00:18:54,299 --> 00:19:03,139
of these different modules or

00:18:59,940 --> 00:19:06,119
applications that are using the Brighton

00:19:03,139 --> 00:19:08,489
interpreter in its modules allow for

00:19:06,119 --> 00:19:11,940
zero install so this can run on anything

00:19:08,489 --> 00:19:14,489
ranging from a Chromebook to whatever

00:19:11,940 --> 00:19:16,230
any problem any computer that has a web

00:19:14,489 --> 00:19:20,429
browser will be able to execute these

00:19:16,230 --> 00:19:22,830
things so the next step is that you can

00:19:20,429 --> 00:19:26,940
actually get the code and run it locally

00:19:22,830 --> 00:19:29,159
on your computer and so you'll still

00:19:26,940 --> 00:19:30,989
access it through your web browser but

00:19:29,159 --> 00:19:33,769
it will no longer be hosted on the

00:19:30,989 --> 00:19:36,509
Brighton site or any of the other sites

00:19:33,769 --> 00:19:38,549
it'll be a hosted local and that's

00:19:36,509 --> 00:19:41,690
interesting and important that it is

00:19:38,549 --> 00:19:45,760
available like that because it allows a

00:19:41,690 --> 00:19:48,580
wide range of other applications beside

00:19:45,760 --> 00:19:51,640
what I've mentioned up to now now I've

00:19:48,580 --> 00:19:55,240
mentioned the in this list here the ABC

00:19:51,640 --> 00:20:02,920
of the local instance I'm gonna change

00:19:55,240 --> 00:20:11,980
this font size here so we can see that's

00:20:02,920 --> 00:20:15,690
readable okay it's a yeah so it's a

00:20:11,980 --> 00:20:19,420
little hard so but basically it includes

00:20:15,690 --> 00:20:22,690
the JavaScript engine which is bright on

00:20:19,420 --> 00:20:25,450
itself and it it mentions source equal

00:20:22,690 --> 00:20:29,500
Cody wine this is where the code will be

00:20:25,450 --> 00:20:31,600
residing and it says body on loan equals

00:20:29,500 --> 00:20:32,800
bright on so what it says to the web

00:20:31,600 --> 00:20:36,250
browser is the moment you're done

00:20:32,800 --> 00:20:38,710
loading the page execute the bright on

00:20:36,250 --> 00:20:40,900
engine so bright on can look for Python

00:20:38,710 --> 00:20:43,150
code and do it sting and that's

00:20:40,900 --> 00:20:47,080
basically all that is really needed on a

00:20:43,150 --> 00:20:49,300
web page any web page be it a blog or a

00:20:47,080 --> 00:20:51,580
full-fledged application that's owned

00:20:49,300 --> 00:20:54,550
the only amount of code that one needs

00:20:51,580 --> 00:21:01,680
to write from that perspective to be

00:20:54,550 --> 00:21:04,150
able to link to actual Python code since

00:21:01,680 --> 00:21:05,890
we have a limited amount of time I won't

00:21:04,150 --> 00:21:09,340
go into all the details of the different

00:21:05,890 --> 00:21:13,000
local instances and I'll mention also

00:21:09,340 --> 00:21:15,340
that one can run that from a server so

00:21:13,000 --> 00:21:18,160
perhaps you have your own server or you

00:21:15,340 --> 00:21:23,110
could have a blog what I've done in my

00:21:18,160 --> 00:21:34,840
case is I've included in my raspberry pi

00:21:23,110 --> 00:21:38,800
raspberry pi Python blog a way to have

00:21:34,840 --> 00:21:41,020
some interaction on creating an

00:21:38,800 --> 00:21:42,550
application well in this case it's not

00:21:41,020 --> 00:21:45,520
just an application it's actually

00:21:42,550 --> 00:21:46,120
hardware electronics so it's a

00:21:45,520 --> 00:21:49,990
breadboard

00:21:46,120 --> 00:21:51,700
if you've ever seen if you go to

00:21:49,990 --> 00:21:55,210
RadioShack you'll probably see one of

00:21:51,700 --> 00:21:56,860
those it's a little plate that allows

00:21:55,210 --> 00:21:59,380
you to put components electronic

00:21:56,860 --> 00:22:02,290
components and that's use in school also

00:21:59,380 --> 00:22:06,160
to teach basic electronics in this case

00:22:02,290 --> 00:22:08,500
it's explaining how to make a bridge for

00:22:06,160 --> 00:22:13,030
a motor to be able to reverse directions

00:22:08,500 --> 00:22:16,120
and instead of just reading the textual

00:22:13,030 --> 00:22:20,110
description of how to do that if I click

00:22:16,120 --> 00:22:24,220
assess put four resistors of value 660

00:22:20,110 --> 00:22:27,790
ohms in specific position and if you

00:22:24,220 --> 00:22:31,840
click show me then they are applied to

00:22:27,790 --> 00:22:34,030
the breadboard in this case and all of

00:22:31,840 --> 00:22:36,070
that is written in Python which is

00:22:34,030 --> 00:22:38,710
really bright on that's running that in

00:22:36,070 --> 00:22:44,110
the browser and so if I continue up with

00:22:38,710 --> 00:22:48,150
transistors wires wires and the motor

00:22:44,110 --> 00:22:51,520
and I would have a functional

00:22:48,150 --> 00:22:55,810
application for controlling a motor to

00:22:51,520 --> 00:22:57,970
go in two directions so these are some

00:22:55,810 --> 00:23:04,110
of the applications that can be done on

00:22:57,970 --> 00:23:04,110
a server like that if I go back here

00:23:10,260 --> 00:23:17,790
it can be hosted and even on Dropbox or

00:23:13,230 --> 00:23:20,760
github or bitbucket or any host that

00:23:17,790 --> 00:23:23,160
will allow running Python or a full

00:23:20,760 --> 00:23:24,990
shell account you could have an Amazon

00:23:23,160 --> 00:23:27,150
Web service account or something like

00:23:24,990 --> 00:23:31,380
that and then the last one I wanted to

00:23:27,150 --> 00:23:36,330
mention is a different type of

00:23:31,380 --> 00:23:40,080
application that is a server but at the

00:23:36,330 --> 00:23:43,950
same time it's not the server that you

00:23:40,080 --> 00:23:47,670
that's situated in the data center it's

00:23:43,950 --> 00:23:51,660
called boss Melissa is a project that I

00:23:47,670 --> 00:23:55,050
started some months back to provide in

00:23:51,660 --> 00:23:58,410
remote locations a way to have

00:23:55,050 --> 00:24:00,360
infrastructures to hold a classroom so a

00:23:58,410 --> 00:24:05,610
portable classroom infrastructure in

00:24:00,360 --> 00:24:08,550
other words and so that is what it looks

00:24:05,610 --> 00:24:10,200
like it's if you've been to an earlier

00:24:08,550 --> 00:24:12,330
presentation today on the Raspberry Pi

00:24:10,200 --> 00:24:16,080
you'll recognize that there's a little

00:24:12,330 --> 00:24:19,740
Raspberry Pi computer here an antenna

00:24:16,080 --> 00:24:22,860
for the wireless network and a big

00:24:19,740 --> 00:24:25,550
battery pack that will allow me to run

00:24:22,860 --> 00:24:28,290
this from early morning to late at night

00:24:25,550 --> 00:24:31,290
without skipping a beat and that's

00:24:28,290 --> 00:24:35,850
fairly important if you're in remote

00:24:31,290 --> 00:24:40,830
areas that have fluctuating power that

00:24:35,850 --> 00:24:42,840
have perhaps dirty power power that

00:24:40,830 --> 00:24:50,460
actually can damage computer equipment

00:24:42,840 --> 00:24:56,280
and so one of these is used in and near

00:24:50,460 --> 00:24:59,400
by or rio de janeiro in brazil in order

00:24:56,280 --> 00:25:03,960
to provide a portable classroom access

00:24:59,400 --> 00:25:06,410
so if I go here briefly to my wireless

00:25:03,960 --> 00:25:06,410
access

00:25:19,310 --> 00:25:23,070
and there you go it just showed up boss

00:25:21,990 --> 00:25:26,610
here

00:25:23,070 --> 00:25:29,940
which is French by the way for bush or

00:25:26,610 --> 00:25:33,770
field so as you can imagine a classroom

00:25:29,940 --> 00:25:38,340
out in a remote location hence the name

00:25:33,770 --> 00:25:43,290
so I just connected to this instance

00:25:38,340 --> 00:25:46,980
just the access point so my laptop is

00:25:43,290 --> 00:25:49,050
now accessing the portable

00:25:46,980 --> 00:25:53,900
infrastructure and then if I go to free

00:25:49,050 --> 00:26:02,610
class well of course I don't have a

00:25:53,900 --> 00:26:06,690
login but if I do this so I'm bypassing

00:26:02,610 --> 00:26:09,210
to login here right now but I'm actually

00:26:06,690 --> 00:26:12,000
getting a portable copy of the whole

00:26:09,210 --> 00:26:17,610
bright on site and I can do that also

00:26:12,000 --> 00:26:20,010
with the reborg robot or whatever

00:26:17,610 --> 00:26:24,240
there's different applications that can

00:26:20,010 --> 00:26:26,220
be put into a local portable instance

00:26:24,240 --> 00:26:27,990
like that the advantage of that is that

00:26:26,220 --> 00:26:29,850
you're self-contained you don't need

00:26:27,990 --> 00:26:31,410
internet access so if you're in there

00:26:29,850 --> 00:26:35,610
and there there's no internet access you

00:26:31,410 --> 00:26:38,690
can still have your classroom going in

00:26:35,610 --> 00:26:38,690
that regard

00:26:43,670 --> 00:27:00,660
okay so let me just go back to the

00:26:51,200 --> 00:27:02,730
wireless network for dis facility so it

00:27:00,660 --> 00:27:07,190
can also be used with frameworks for

00:27:02,730 --> 00:27:11,580
those that do development with actual

00:27:07,190 --> 00:27:13,710
Python frameworks or not just Python

00:27:11,580 --> 00:27:15,990
framework it could be web development

00:27:13,710 --> 00:27:21,780
frameworks it's fairly easy to interact

00:27:15,990 --> 00:27:24,960
with Brighton in this manner so okay and

00:27:21,780 --> 00:27:30,000
secondary pause at this point for a few

00:27:24,960 --> 00:27:34,640
quick questions if there are any no

00:27:30,000 --> 00:27:34,640
you're good following along oh go ahead

00:27:38,990 --> 00:27:48,840
yes so how to handle imports so in

00:27:43,500 --> 00:27:52,470
Python there's this concept of you have

00:27:48,840 --> 00:27:55,950
this set of keywords that you can use

00:27:52,470 --> 00:27:58,140
and it does a lot of stuff but sometimes

00:27:55,950 --> 00:28:02,610
you need a little bit more and these are

00:27:58,140 --> 00:28:04,950
with are called modules in Python akin

00:28:02,610 --> 00:28:07,590
to libraries basically collection of

00:28:04,950 --> 00:28:11,310
functions or methods or classes and so

00:28:07,590 --> 00:28:14,760
on and so forth that are important to be

00:28:11,310 --> 00:28:17,130
used by the program now it's a good

00:28:14,760 --> 00:28:21,300
question because if you think about it

00:28:17,130 --> 00:28:25,010
I'm running on the browser so if I'm

00:28:21,300 --> 00:28:27,660
importing where is it coming from right

00:28:25,010 --> 00:28:32,270
it would have to come from another

00:28:27,660 --> 00:28:37,530
source and the problem there is that

00:28:32,270 --> 00:28:40,560
browsers are by default blocking access

00:28:37,530 --> 00:28:42,930
to other than the main site that you're

00:28:40,560 --> 00:28:45,600
accessing when it comes to JavaScript so

00:28:42,930 --> 00:28:48,840
it creates some challenges one of one of

00:28:45,600 --> 00:28:51,180
the way to work around that is to host

00:28:48,840 --> 00:28:53,230
on the server like for example on this

00:28:51,180 --> 00:28:57,010
little device here that I have

00:28:53,230 --> 00:28:59,590
I have not only the Brighton interpreter

00:28:57,010 --> 00:29:04,840
but I got all the libraries that I will

00:28:59,590 --> 00:29:08,830
need on here there's also a way to use a

00:29:04,840 --> 00:29:11,919
distribution so there's a build that is

00:29:08,830 --> 00:29:14,730
done regularly of right on and it

00:29:11,919 --> 00:29:18,040
actually collects all the different

00:29:14,730 --> 00:29:20,580
modules and create one file so you have

00:29:18,040 --> 00:29:25,150
only one JavaScript file to import

00:29:20,580 --> 00:29:27,120
initially to include in your HTML and it

00:29:25,150 --> 00:29:30,309
will load all the stuff that you need

00:29:27,120 --> 00:29:34,240
obviously that will be a fairly heavy

00:29:30,309 --> 00:29:38,400
file at that level but again it's a

00:29:34,240 --> 00:29:41,860
question of ease of use versus

00:29:38,400 --> 00:29:43,559
complexity as far as that but this was a

00:29:41,860 --> 00:29:52,330
pretty good question

00:29:43,559 --> 00:29:55,450
alrighty so now if we look at delving

00:29:52,330 --> 00:29:59,500
deeper so any our front-end web

00:29:55,450 --> 00:30:05,799
developers here okay well I guess we're

00:29:59,500 --> 00:30:09,700
a little bit so I'll just do a quick

00:30:05,799 --> 00:30:15,910
mention that actually as of the current

00:30:09,700 --> 00:30:17,710
version there's a very nice interaction

00:30:15,910 --> 00:30:19,450
between Brighton and JavaScript

00:30:17,710 --> 00:30:22,320
libraries and that's important because

00:30:19,450 --> 00:30:24,580
the JavaScript ecosystem is

00:30:22,320 --> 00:30:26,500
well-established it's been there for a

00:30:24,580 --> 00:30:29,410
long time and many people are used to

00:30:26,500 --> 00:30:31,480
diesel libraries so it would be nice to

00:30:29,410 --> 00:30:34,750
be able to play along with these and it

00:30:31,480 --> 00:30:37,470
is the case so that helps in many ways

00:30:34,750 --> 00:30:41,200
and it was not the case initially

00:30:37,470 --> 00:30:43,470
initially you have to such a priority as

00:30:41,200 --> 00:30:47,740
to where the development goes and

00:30:43,470 --> 00:30:50,049
initially the core was to support Python

00:30:47,740 --> 00:30:52,870
3 and then all these other things would

00:30:50,049 --> 00:30:55,419
come later and so now it's a it's

00:30:52,870 --> 00:30:58,240
actually fairly easy to interact between

00:30:55,419 --> 00:31:00,250
JavaScript library and Brighton and it

00:30:58,240 --> 00:31:03,500
doesn't pollute the whole namespace and

00:31:00,250 --> 00:31:07,610
so on and so forth so you can do that

00:31:03,500 --> 00:31:10,850
for those that are just curious or would

00:31:07,610 --> 00:31:14,390
like to contribute there's a bit bucket

00:31:10,850 --> 00:31:20,539
sight if you search for bright on and

00:31:14,390 --> 00:31:22,640
it's under ol ms / bright on on the bit

00:31:20,539 --> 00:31:25,929
bucket site and the source code is

00:31:22,640 --> 00:31:29,289
available there again since this

00:31:25,929 --> 00:31:31,940
presentation will be made available

00:31:29,289 --> 00:31:37,309
you'll be able to do that at a later

00:31:31,940 --> 00:31:40,070
time it talks about also on that bit

00:31:37,309 --> 00:31:44,630
bucket site that mit has a links to how

00:31:40,070 --> 00:31:47,960
to make web apps for Firefox OS also for

00:31:44,630 --> 00:31:49,580
some of the videos that are on Brighton

00:31:47,960 --> 00:31:54,279
and so on so forth so there's training

00:31:49,580 --> 00:31:54,279
material also on that web site

00:32:00,789 --> 00:32:10,279
8 when that happens okay so some of the

00:32:06,559 --> 00:32:17,600
possibilities if we look at the gallery

00:32:10,279 --> 00:32:25,460
first of the bright let's do it in

00:32:17,600 --> 00:32:31,360
English so some of the things that you

00:32:25,460 --> 00:32:33,710
can do for example obviously you can do

00:32:31,360 --> 00:32:35,630
fairly easily pie charts and if you

00:32:33,710 --> 00:32:37,789
right-click on any of the pages when you

00:32:35,630 --> 00:32:39,679
go through the demos a gallery and all

00:32:37,789 --> 00:32:45,710
that you'll see the whole source code

00:32:39,679 --> 00:32:49,309
and in clear so but if we look let us

00:32:45,710 --> 00:32:51,830
see if we have some there's some that

00:32:49,309 --> 00:32:54,140
are actually designed to run on mobile

00:32:51,830 --> 00:32:58,340
apps this is actually a compass that you

00:32:54,140 --> 00:33:01,570
can run on your portable device and it

00:32:58,340 --> 00:33:01,570
uses the actual

00:33:03,690 --> 00:33:12,070
pointing off the device so if you're on

00:33:07,690 --> 00:33:14,650
an iPhone or a galaxy phone or whatever

00:33:12,070 --> 00:33:16,270
you could actually move around and

00:33:14,650 --> 00:33:19,440
you'll see it'll always point to the

00:33:16,270 --> 00:33:22,570
north so and it's all done in Python

00:33:19,440 --> 00:33:25,720
thanks to Brighton in its integration

00:33:22,570 --> 00:33:35,140
with the Dom or the domain of object

00:33:25,720 --> 00:33:37,930
model of the web browser see you can do

00:33:35,140 --> 00:33:41,130
very different things

00:33:37,930 --> 00:33:44,890
how about Russian or serial ik

00:33:41,130 --> 00:33:57,310
characters you can do that interacting

00:33:44,890 --> 00:34:01,180
here even the old treaty applications

00:33:57,310 --> 00:34:04,750
where you can actually go and navigate

00:34:01,180 --> 00:34:06,490
the maze and so on so forth we won't go

00:34:04,750 --> 00:34:09,220
through all of them but there's quite a

00:34:06,490 --> 00:34:12,550
bit of example and code that you can

00:34:09,220 --> 00:34:20,340
look at to get a good feel for how to do

00:34:12,550 --> 00:34:20,340
these things all right and

00:34:36,450 --> 00:34:43,049
yes something okay sometimes external

00:34:39,539 --> 00:34:46,309
links or so there's even a little

00:34:43,049 --> 00:34:49,049
platform for creating educational games

00:34:46,309 --> 00:34:52,769
there's a basically a framework there

00:34:49,049 --> 00:34:56,930
and you can get that on your local

00:34:52,769 --> 00:35:03,359
machine and modify it to suit your own

00:34:56,930 --> 00:35:06,119
application no so there's a lot of these

00:35:03,359 --> 00:35:09,029
modules that are fairly involved fairly

00:35:06,119 --> 00:35:14,849
complex a lot of them require actual

00:35:09,029 --> 00:35:18,240
native C libraries to run so if you're

00:35:14,849 --> 00:35:20,460
thinking like numpy and sci-fi and by

00:35:18,240 --> 00:35:24,750
game are some of those that require

00:35:20,460 --> 00:35:28,460
compiling code to be able to give Python

00:35:24,750 --> 00:35:31,230
access to some of the acceleration or

00:35:28,460 --> 00:35:34,049
features of the hardware from that

00:35:31,230 --> 00:35:37,680
perspective so that at this point is not

00:35:34,049 --> 00:35:42,710
available it doesn't mean that it will

00:35:37,680 --> 00:35:45,539
never be but short term I don't see that

00:35:42,710 --> 00:35:50,039
happening from that perspective however

00:35:45,539 --> 00:35:53,250
there's a lot of it's very easy to

00:35:50,039 --> 00:35:55,200
manipulate SVG's which are vector

00:35:53,250 --> 00:35:58,049
graphics on your web browser which

00:35:55,200 --> 00:36:00,900
allows you to do games fairly easily

00:35:58,049 --> 00:36:04,250
that allows you to do charting graphs

00:36:00,900 --> 00:36:06,950
and things of that nature

00:36:04,250 --> 00:36:15,059
there's also a good support for all the

00:36:06,950 --> 00:36:19,259
html5 tags again it makes for a fairly

00:36:15,059 --> 00:36:22,859
easy process to migrate from if you've

00:36:19,259 --> 00:36:25,589
had experience doing webpages with

00:36:22,859 --> 00:36:27,750
JavaScript to doing them with Python

00:36:25,589 --> 00:36:30,299
again it's not necessarily the main

00:36:27,750 --> 00:36:33,569
focus of the project the project is to

00:36:30,299 --> 00:36:35,910
give an option and sometimes it makes

00:36:33,569 --> 00:36:38,599
sense sometime it doesn't however as far

00:36:35,910 --> 00:36:43,039
as games are concerned there was a good

00:36:38,599 --> 00:36:47,309
article that was posted not too long ago

00:36:43,039 --> 00:36:49,119
that mentioned that a lot of the games

00:36:47,309 --> 00:36:55,829
are

00:36:49,119 --> 00:37:00,069
moving toward a web-based scenario and

00:36:55,829 --> 00:37:04,799
python has been historically used quite

00:37:00,069 --> 00:37:04,799
a bit to do a lot of these massively

00:37:07,710 --> 00:37:13,619
basically large environments where you

00:37:09,970 --> 00:37:16,660
can have many players at the same time

00:37:13,619 --> 00:37:18,430
so it's I think it's a good fit from

00:37:16,660 --> 00:37:21,190
that perspective so it's not just in the

00:37:18,430 --> 00:37:25,630
education field in the game field I

00:37:21,190 --> 00:37:28,210
think we'll see a bit more of that in

00:37:25,630 --> 00:37:37,329
technical fields also there's quite a

00:37:28,210 --> 00:37:39,519
bit of potential there alright so again

00:37:37,329 --> 00:37:43,539
as far as on what's on the radar in the

00:37:39,519 --> 00:37:46,240
near future adding more modules and so

00:37:43,539 --> 00:37:55,299
and so forth if we go back to for

00:37:46,240 --> 00:38:02,019
example the Brighton website and if I go

00:37:55,299 --> 00:38:06,430
on the console and that will hint as to

00:38:02,019 --> 00:38:13,599
also what happens when it comes to doing

00:38:06,430 --> 00:38:16,140
imports so I can do import actually that

00:38:13,599 --> 00:38:22,059
was one of the first external modules

00:38:16,140 --> 00:38:25,839
that I implemented and mostly for talks

00:38:22,059 --> 00:38:29,589
like this one or in the classroom import

00:38:25,839 --> 00:38:31,720
the antigravity and just like in Python

00:38:29,589 --> 00:38:35,739
if you type that you end up on this web

00:38:31,720 --> 00:38:41,440
page of xkcd about Python where it's

00:38:35,739 --> 00:38:43,869
asking you're flying how Python and it

00:38:41,440 --> 00:38:46,329
continues on to say I learned it last

00:38:43,869 --> 00:38:49,690
night everything is so simple hello

00:38:46,329 --> 00:38:54,150
world is just print hello world the

00:38:49,690 --> 00:38:57,039
reply back I don't know dynamic typing

00:38:54,150 --> 00:38:59,079
whitespace the reply

00:38:57,039 --> 00:39:02,049
come join us programming is fun again

00:38:59,079 --> 00:39:02,440
it's a whole new world up here but how

00:39:02,049 --> 00:39:05,650
are you

00:39:02,440 --> 00:39:07,030
flying I just typed import anti-gravity

00:39:05,650 --> 00:39:09,069
that's it

00:39:07,030 --> 00:39:11,050
I also sampled everything in the mid

00:39:09,069 --> 00:39:15,550
sand cabinet for comparison but I think

00:39:11,050 --> 00:39:18,760
it is the Python so so it's one of those

00:39:15,550 --> 00:39:21,490
hidden things in Python there's quite a

00:39:18,760 --> 00:39:24,520
few of those but I thought it would be

00:39:21,490 --> 00:39:28,510
kind of fun to just do that so I've

00:39:24,520 --> 00:39:31,420
implemented a few of these basic modules

00:39:28,510 --> 00:39:37,290
that some are functional and very useful

00:39:31,420 --> 00:39:41,109
and some are I guess at least useful for

00:39:37,290 --> 00:39:47,760
presentations such as this one all right

00:39:41,109 --> 00:39:51,220
so as far as in conclusion bright on

00:39:47,760 --> 00:39:53,530
it's fast enough it's not the fastest I

00:39:51,220 --> 00:39:55,990
mean if you write your javascript is

00:39:53,530 --> 00:40:00,250
going to be faster but the same has been

00:39:55,990 --> 00:40:04,240
said about Python itself from the early

00:40:00,250 --> 00:40:06,310
days people were saying python is way

00:40:04,240 --> 00:40:08,589
too slow I can write this an assembly

00:40:06,310 --> 00:40:11,140
language and it's going to be x times

00:40:08,589 --> 00:40:14,140
faster I can write this in pure C is

00:40:11,140 --> 00:40:15,160
going to be y times faster why bother

00:40:14,140 --> 00:40:18,069
with Python

00:40:15,160 --> 00:40:24,609
well Python allows you to write code

00:40:18,069 --> 00:40:29,859
that is more concise more to the point

00:40:24,609 --> 00:40:33,119
and more readable now if you've ever had

00:40:29,859 --> 00:40:36,069
to read somebody else's code before and

00:40:33,119 --> 00:40:37,210
wondering why they did this or dad this

00:40:36,069 --> 00:40:43,089
way and that way

00:40:37,210 --> 00:40:45,130
Python dictates some of this will force

00:40:43,089 --> 00:40:48,369
you to do certain things a certain way

00:40:45,130 --> 00:40:49,450
which is good because I'm gonna write

00:40:48,369 --> 00:40:52,780
the code like this

00:40:49,450 --> 00:40:54,819
you will write the code like that if I

00:40:52,780 --> 00:40:57,099
don't give you any direction but if we

00:40:54,819 --> 00:41:00,490
all are following the same thing we will

00:40:57,099 --> 00:41:02,200
all have the same approach roughly or at

00:41:00,490 --> 00:41:04,540
least it looked the same the alignment

00:41:02,200 --> 00:41:06,579
will be the same the paranthesis will be

00:41:04,540 --> 00:41:09,940
where you'd expect them to be so on and

00:41:06,579 --> 00:41:12,310
so forth this allows for visually an

00:41:09,940 --> 00:41:15,339
easier time to read the code and that's

00:41:12,310 --> 00:41:16,420
what makes Python in general easier to

00:41:15,339 --> 00:41:19,269
use

00:41:16,420 --> 00:41:22,539
well that's what makes bright nan also

00:41:19,269 --> 00:41:25,660
easier to use in certain areas again the

00:41:22,539 --> 00:41:27,400
speed it's not just a speed of execution

00:41:25,660 --> 00:41:29,440
the speed of coding the speed of

00:41:27,400 --> 00:41:35,769
debugging that's all has to be factored

00:41:29,440 --> 00:41:38,130
in into the whole approach so mobile

00:41:35,769 --> 00:41:41,730
support I mentioned for example

00:41:38,130 --> 00:41:46,200
accelerometers and battery levels and

00:41:41,730 --> 00:41:48,640
GPS and so on and so forth I wrote a few

00:41:46,200 --> 00:41:53,710
little applications that run on my

00:41:48,640 --> 00:41:56,049
iPhone that allows me to track GPS I

00:41:53,710 --> 00:41:58,000
wrote the code put it on my blog so

00:41:56,049 --> 00:42:01,960
people could see how do you do that it's

00:41:58,000 --> 00:42:04,390
not very difficult at all it's a few

00:42:01,960 --> 00:42:05,859
lines of code and people are like okay

00:42:04,390 --> 00:42:10,539
where's the rest of the code no that's

00:42:05,859 --> 00:42:13,450
it and so that that's really the target

00:42:10,539 --> 00:42:16,119
audience for this as people that want to

00:42:13,450 --> 00:42:18,819
write applications that are not too

00:42:16,119 --> 00:42:21,420
complicated not too simple but they want

00:42:18,819 --> 00:42:26,670
to be able to code that fairly quickly

00:42:21,420 --> 00:42:31,809
in in a language that's easy to read so

00:42:26,670 --> 00:42:33,579
and I think my last point was an

00:42:31,809 --> 00:42:37,119
up-and-coming community so there's

00:42:33,579 --> 00:42:41,170
support in many languages the form is

00:42:37,119 --> 00:42:48,789
fairly responsive even during the World

00:42:41,170 --> 00:42:52,299
Cup Wow well Brazil was playing Mexico

00:42:48,789 --> 00:42:57,789
and we had the bug report from a

00:42:52,299 --> 00:43:02,819
Brazilian I was like wow and so we we

00:42:57,789 --> 00:43:06,069
address that but so it just shows that

00:43:02,819 --> 00:43:09,009
again the community is is there to

00:43:06,069 --> 00:43:11,740
support it and it's international which

00:43:09,009 --> 00:43:14,069
is important when it comes to projects

00:43:11,740 --> 00:43:18,970
like that and again I'm really excited

00:43:14,069 --> 00:43:20,490
excited to see that used and in the

00:43:18,970 --> 00:43:25,040
field then

00:43:20,490 --> 00:43:28,619
in Africa and Cote d'Ivoire and also in

00:43:25,040 --> 00:43:32,670
Brazil in areas where they don't have

00:43:28,619 --> 00:43:35,400
easy access to power or internet so so

00:43:32,670 --> 00:43:38,040
that's pretty much it unless somebody

00:43:35,400 --> 00:43:44,490
has a another question to conclude on

00:43:38,040 --> 00:43:47,790
this here all right well appreciate your

00:43:44,490 --> 00:43:50,550
time if you have any other questions my

00:43:47,790 --> 00:43:54,570
email and my Twitter handle right there

00:43:50,550 --> 00:43:58,580
and if you're interested in knowing

00:43:54,570 --> 00:44:02,970
about your local python user group also

00:43:58,580 --> 00:44:05,849
just let me know I'll find one that's

00:44:02,970 --> 00:44:09,050
close to you to help you getting started

00:44:05,849 --> 00:44:09,050
all right thank you

00:44:48,609 --> 00:44:52,880
your customers rely on your website or

00:44:51,349 --> 00:44:55,249
application if it's slower

00:44:52,880 --> 00:44:58,190
non-responsive it infuriates your users

00:44:55,249 --> 00:45:00,019
and costs you money keeping your

00:44:58,190 --> 00:45:03,540
business critical systems humming along

00:45:00,019 --> 00:45:06,360
requires insight into what they're doing

00:45:03,540 --> 00:45:08,340
your system metrics tell stories stories

00:45:06,360 --> 00:45:10,590
that can reveal performance bottlenecks

00:45:08,340 --> 00:45:12,900
resource limitations and other problems

00:45:10,590 --> 00:45:15,000
but how do you keep an eye on all of

00:45:12,900 --> 00:45:17,280
your systems performance metrics in real

00:45:15,000 --> 00:45:20,130
time and record this data for leader

00:45:17,280 --> 00:45:22,110
analysis enter long view the new way to

00:45:20,130 --> 00:45:24,150
see what's really going on under the

00:45:22,110 --> 00:45:26,340
hood the long view dashboard lets you

00:45:24,150 --> 00:45:28,260
visualize the status of all your systems

00:45:26,340 --> 00:45:31,170
providing you with a bird's-eye view of

00:45:28,260 --> 00:45:34,110
your entire fleet you can sort by CPU

00:45:31,170 --> 00:45:36,570
memory swap processes load and network

00:45:34,110 --> 00:45:39,120
usage click a specific system to access

00:45:36,570 --> 00:45:41,160
its individual dashboard then click and

00:45:39,120 --> 00:45:44,160
drag to zoom in on chokepoints and get

00:45:41,160 --> 00:45:46,140
more detail comprehensive network data

00:45:44,160 --> 00:45:48,840
including inbound and outbound traffic

00:45:46,140 --> 00:45:50,820
is available on the network tab and disk

00:45:48,840 --> 00:45:52,980
rights and free space on the disk stab

00:45:50,820 --> 00:45:55,170
while the process Explorer displays

00:45:52,980 --> 00:45:57,750
usage statistics for individual

00:45:55,170 --> 00:45:59,880
processes the system info tab shows

00:45:57,750 --> 00:46:02,280
listening services active connections

00:45:59,880 --> 00:46:04,410
and available updates adding longview to

00:46:02,280 --> 00:46:06,660
a system is easy just click the button

00:46:04,410 --> 00:46:08,310
copy the one-line installation command

00:46:06,660 --> 00:46:10,980
then run the command on your Linux

00:46:08,310 --> 00:46:12,840
system to complete the process the agent

00:46:10,980 --> 00:46:14,760
will begin collecting data and sending

00:46:12,840 --> 00:46:16,300
it to long view then the graphs start

00:46:14,760 --> 00:46:18,850
rolling

00:46:16,300 --> 00:46:21,010
use Longview to gain visibility into

00:46:18,850 --> 00:46:24,930
your servers so when your website or app

00:46:21,010 --> 00:46:24,930

YouTube URL: https://www.youtube.com/watch?v=w7Ag61tfeuQ


