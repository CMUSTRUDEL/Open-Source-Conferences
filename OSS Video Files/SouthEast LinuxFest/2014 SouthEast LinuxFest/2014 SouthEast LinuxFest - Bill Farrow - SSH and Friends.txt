Title: 2014 SouthEast LinuxFest - Bill Farrow - SSH and Friends
Publication date: 2015-05-17
Playlist: 2014 SouthEast LinuxFest
Description: 
	2014 SouthEast LinuxFest
Bill Farrow
SSH and Friends
Captions: 
	00:00:00,000 --> 00:00:05,339
the following presentation was recorded

00:00:02,490 --> 00:00:08,250
the 2014 southeast linux fest in

00:00:05,339 --> 00:00:11,070
charlotte north carolina it is licensed

00:00:08,250 --> 00:00:14,880
under a creative commons license for

00:00:11,070 --> 00:00:18,180
more information visit www selfies linux

00:00:14,880 --> 00:00:19,710
pc org the southeast linux fest would

00:00:18,180 --> 00:00:22,740
like to thank the following diamond

00:00:19,710 --> 00:00:25,580
sponsors in 2014 for helping make these

00:00:22,740 --> 00:00:25,580
videos possible

00:00:26,220 --> 00:00:31,289
all right everyone thank you for coming

00:00:27,810 --> 00:00:33,390
to ssh and Friends your speaker is bill

00:00:31,289 --> 00:00:40,079
Pharaoh senior embedded Linux engineer

00:00:33,390 --> 00:00:42,660
beyond electronics court welcome yeah as

00:00:40,079 --> 00:00:44,699
my name is Bill Pharaoh I work at a

00:00:42,660 --> 00:00:48,659
small startup company we do embedded

00:00:44,699 --> 00:00:51,750
devices and I'm the guy writes the linux

00:00:48,659 --> 00:00:54,530
device drivers and the rest of the stack

00:00:51,750 --> 00:00:58,460
if necessary generally our customers

00:00:54,530 --> 00:00:58,460
right the rest of the sack but

00:00:58,760 --> 00:01:03,470
that's what we're doing so this is just

00:01:00,620 --> 00:01:06,909
to give you the background of that

00:01:03,470 --> 00:01:11,370
why I use SSH

00:01:06,909 --> 00:01:16,230
my company builds boards like this

00:01:11,370 --> 00:01:18,810
car pc chips or arm generally a pci bus

00:01:16,230 --> 00:01:22,260
of some sort in this case we've got

00:01:18,810 --> 00:01:25,110
fiber optics its conduction cool so

00:01:22,260 --> 00:01:27,960
there's no fans there's no no airflow

00:01:25,110 --> 00:01:31,230
over this device at all everything all

00:01:27,960 --> 00:01:33,510
the heat is sucked out through metal

00:01:31,230 --> 00:01:37,620
clamps out to the outside k snap to an

00:01:33,510 --> 00:01:40,200
external cooling system we shock and

00:01:37,620 --> 00:01:42,390
vibrate this device to make sure that

00:01:40,200 --> 00:01:44,990
nothing pops off so you've got a big

00:01:42,390 --> 00:01:46,890
shaker that shakes the hell out of it

00:01:44,990 --> 00:01:50,070
you want to make sure that your chips

00:01:46,890 --> 00:01:52,200
don't fly off when you know when you're

00:01:50,070 --> 00:01:54,450
going to present what this goes into a

00:01:52,200 --> 00:01:56,160
train system and the trains going along

00:01:54,450 --> 00:02:03,410
the tracks you don't want your processor

00:01:56,160 --> 00:02:06,750
to shake off eventually not good sorry

00:02:03,410 --> 00:02:09,090
now we also do high temperature testing

00:02:06,750 --> 00:02:11,040
so my software has to work well the

00:02:09,090 --> 00:02:15,360
board has to work over high temperature

00:02:11,040 --> 00:02:20,060
ranges so 80 plus degrees down to minus

00:02:15,360 --> 00:02:20,060
40 good fun stuff

00:02:21,790 --> 00:02:31,819
all right go back got my notes i started

00:02:28,430 --> 00:02:34,220
in using linux back in the night early

00:02:31,819 --> 00:02:38,180
90s roundabout time in doom came out if

00:02:34,220 --> 00:02:40,640
anyone remembers doing right back then

00:02:38,180 --> 00:02:45,410
we loaded linux like we're linux up on

00:02:40,640 --> 00:02:47,180
30 floppy disks and that took quite a

00:02:45,410 --> 00:02:50,269
while and then if you wanted a queen

00:02:47,180 --> 00:02:52,760
days that was another 30 discs i don't

00:02:50,269 --> 00:02:56,140
know if anyone remembers that but Sir

00:02:52,760 --> 00:02:56,140
we've come a long way

00:02:57,470 --> 00:03:03,700
okay so

00:02:59,440 --> 00:03:05,890
SSH is used at home I use it at home

00:03:03,700 --> 00:03:09,690
every day I don't know about you anyone

00:03:05,890 --> 00:03:15,160
else use ssh at home yeah good at work

00:03:09,690 --> 00:03:21,070
yeah okay cloud cloud cloud cloud cloud

00:03:15,160 --> 00:03:23,470
cloud we know midnight and then it's

00:03:21,070 --> 00:03:28,660
also used in embedded devices everything

00:03:23,470 --> 00:03:32,350
from what I do too smart grid your TV

00:03:28,660 --> 00:03:35,830
has an ssh server in it it's probably

00:03:32,350 --> 00:03:37,930
blocked but it's there my clock radio

00:03:35,830 --> 00:03:41,100
has ssh i can ssh into my clock radio

00:03:37,930 --> 00:03:41,100
and change the time

00:03:43,480 --> 00:03:50,620
it's good to be SSH

00:03:46,540 --> 00:03:53,859
alright so an overview of the talk we're

00:03:50,620 --> 00:03:56,349
going to cover today how to use as a ssh

00:03:53,859 --> 00:04:00,010
i'm not going to go into the type of

00:03:56,349 --> 00:04:01,959
encryption that's used i'm not going to

00:04:00,010 --> 00:04:04,000
go into the details of how SH is written

00:04:01,959 --> 00:04:06,790
I'm going to go into how you guys can

00:04:04,000 --> 00:04:08,739
get more out of using s section your

00:04:06,790 --> 00:04:11,500
data they work because I bet you're not

00:04:08,739 --> 00:04:14,950
using it to its full extent and I bet

00:04:11,500 --> 00:04:16,389
you're not using it efficiently so I'll

00:04:14,950 --> 00:04:19,599
cover basic usage for anybody who hasn't

00:04:16,389 --> 00:04:22,870
used it before I'll cover some of the

00:04:19,599 --> 00:04:26,470
other tools like secure copy we'll do

00:04:22,870 --> 00:04:28,960
some key key generation and tell you a

00:04:26,470 --> 00:04:30,970
bit more about how to use keys config

00:04:28,960 --> 00:04:34,930
file is to be time-saver for everyone

00:04:30,970 --> 00:04:38,020
who uses a config file for ssh okay

00:04:34,930 --> 00:04:40,410
about fifty percent fuses x windows

00:04:38,020 --> 00:04:40,410
tunneling

00:04:40,480 --> 00:04:50,469
okay good and authentication forwarding

00:04:45,969 --> 00:04:52,509
less and less all right all right so

00:04:50,469 --> 00:04:56,259
history it's been around for a while

00:04:52,509 --> 00:05:00,759
1995 it was a open source project back

00:04:56,259 --> 00:05:03,069
then written by this finish guy I'm not

00:05:00,759 --> 00:05:06,579
going to pronounce his name tattoo yeah

00:05:03,069 --> 00:05:09,909
anyway he he started up he got about

00:05:06,579 --> 00:05:13,389
20,000 people using it and then he went

00:05:09,909 --> 00:05:17,889
to a proprietary model and made it close

00:05:13,389 --> 00:05:19,959
sauce so in 1998 there was a the BSD

00:05:17,889 --> 00:05:23,469
that guy's forked the old open source

00:05:19,959 --> 00:05:26,339
version and created openssh and that's

00:05:23,469 --> 00:05:33,819
generally what most people use today in

00:05:26,339 --> 00:05:35,949
2006 we they approved the protocol if SH

00:05:33,819 --> 00:05:45,689
version 2 is not compatible with version

00:05:35,949 --> 00:05:50,769
1 it became an eye ietf standard and

00:05:45,689 --> 00:05:53,259
there was an RFC RFC for 253 and I can

00:05:50,769 --> 00:05:55,419
read the intro to that it says the

00:05:53,259 --> 00:05:57,639
secure shell is a protocol for secure

00:05:55,419 --> 00:06:00,939
remote login and other secure network

00:05:57,639 --> 00:06:02,649
services over an insecure network now

00:06:00,939 --> 00:06:04,329
everyone raised their hand over using

00:06:02,649 --> 00:06:07,269
piece of work and at home do you

00:06:04,329 --> 00:06:09,399
consider those networks in secure your

00:06:07,269 --> 00:06:16,979
home network insecure you trust your

00:06:09,399 --> 00:06:16,979
work network yeah haha few hands so

00:06:17,280 --> 00:06:23,410
who uses drop their or busy box

00:06:20,740 --> 00:06:26,889
okay so it's another variant of the ssh

00:06:23,410 --> 00:06:28,449
server and client tools it's Dropbox is

00:06:26,889 --> 00:06:31,720
a slimmed down version it doesn't

00:06:28,449 --> 00:06:34,300
support all the features but you can fit

00:06:31,720 --> 00:06:37,599
it on your TV you can fit it on embedded

00:06:34,300 --> 00:06:39,930
devices and Internet of Things type

00:06:37,599 --> 00:06:39,930
devices

00:06:42,540 --> 00:06:46,850
all right tell me that's what came

00:06:45,090 --> 00:06:50,180
before SSH that's what everyone used

00:06:46,850 --> 00:06:54,270
back in nineteen sixty-nine onwards

00:06:50,180 --> 00:06:59,370
who's is telling it one two three well

00:06:54,270 --> 00:07:02,690
bit more okay good tell its old very old

00:06:59,370 --> 00:07:02,690
stop using it

00:07:04,860 --> 00:07:09,319
what do you use it for travel treaty

00:07:06,750 --> 00:07:09,319
mills herbs

00:07:12,100 --> 00:07:18,610
yes and no should you be really doing

00:07:14,590 --> 00:07:25,470
mouth server on port 25 / you know clear

00:07:18,610 --> 00:07:25,470
over the wire no all right

00:07:26,500 --> 00:07:30,640
there's no encryption it's clear text

00:07:28,840 --> 00:07:35,500
everything over the network is just

00:07:30,640 --> 00:07:36,750
there for anybody to sniff tell it

00:07:35,500 --> 00:07:38,980
didn't provide any authentication

00:07:36,750 --> 00:07:42,190
mechanism so when you tell it to a box

00:07:38,980 --> 00:07:43,450
and it asks you for a password that's

00:07:42,190 --> 00:07:46,950
not telling it asking for the password

00:07:43,450 --> 00:07:52,780
that's some other program logging d or

00:07:46,950 --> 00:07:58,060
some other custom log in process SSH

00:07:52,780 --> 00:08:01,600
provides more than that who's used our

00:07:58,060 --> 00:08:03,730
SH or those remote shell services okay

00:08:01,600 --> 00:08:08,350
so that was the next step up from telnet

00:08:03,730 --> 00:08:10,660
and that again was an attempt to get

00:08:08,350 --> 00:08:13,630
better security but not really it

00:08:10,660 --> 00:08:16,000
provided authentication mechanisms you

00:08:13,630 --> 00:08:21,490
could say which hosts could connect over

00:08:16,000 --> 00:08:25,740
our SH not good so I'm going to demo

00:08:21,490 --> 00:08:25,740
this because why shark is my friend

00:08:27,289 --> 00:08:30,279
and it's bring up wash

00:08:33,180 --> 00:08:37,710
okay so this is a wire shot capture a

00:08:35,190 --> 00:08:40,890
dude at work and I use telnet at work we

00:08:37,710 --> 00:08:44,730
have some old cereal concentrators that

00:08:40,890 --> 00:08:46,500
only work over telnet here is a is

00:08:44,730 --> 00:08:49,560
anyone use Y Shack before I'm assuming

00:08:46,500 --> 00:08:52,320
some people have this is a packet dump

00:08:49,560 --> 00:08:53,790
so I ran a program called TCP dump and I

00:08:52,320 --> 00:08:57,810
collected everything that went across

00:08:53,790 --> 00:09:03,480
the network in the lab and displayed

00:08:57,810 --> 00:09:07,200
here the my desktop is 17 dot 5 and the

00:09:03,480 --> 00:09:09,540
serial server is 17 8 and you can see

00:09:07,200 --> 00:09:11,250
I've got ssh sessions running like this

00:09:09,540 --> 00:09:15,990
one is an ssh session and it's encrypted

00:09:11,250 --> 00:09:19,980
I can't read that then there's a telnet

00:09:15,990 --> 00:09:21,690
session opening up right here and if we

00:09:19,980 --> 00:09:24,570
look down in the down here in the

00:09:21,690 --> 00:09:26,610
hexadecimal down the bottom this junk if

00:09:24,570 --> 00:09:30,310
we go down through a few telnet packets

00:09:26,610 --> 00:09:33,420
well we start to see some ascii text

00:09:30,310 --> 00:09:33,420
look username

00:09:33,810 --> 00:09:38,390
somewhere in here is going to be

00:09:35,970 --> 00:09:38,390
password

00:09:39,120 --> 00:09:46,500
all right I'll cut cut this short if you

00:09:42,150 --> 00:09:49,260
go up to or is it analyzed follow tcp

00:09:46,500 --> 00:09:52,529
stream this will just pull out just the

00:09:49,260 --> 00:09:55,200
telnet traffic between my desktop and

00:09:52,529 --> 00:09:59,190
the serial server and show you what the

00:09:55,200 --> 00:10:00,810
text is everyone see that it's a bit

00:09:59,190 --> 00:10:05,450
small I don't know how to make this

00:10:00,810 --> 00:10:10,230
larger but we basically have here a

00:10:05,450 --> 00:10:12,270
username prompt my username going in

00:10:10,230 --> 00:10:15,560
admin and you're getting double

00:10:12,270 --> 00:10:15,560
characters but you can work that up

00:10:16,700 --> 00:10:24,240
password look at the password is default

00:10:21,150 --> 00:10:26,190
password is admin yay and we're into the

00:10:24,240 --> 00:10:28,740
serial server at this point and you can

00:10:26,190 --> 00:10:31,350
capture if you if I did more on this

00:10:28,740 --> 00:10:37,059
talonnet system you'd see all that

00:10:31,350 --> 00:10:40,029
output and all my characters so not good

00:10:37,059 --> 00:10:42,089
don't use it but that he said if you're

00:10:40,029 --> 00:10:44,430
not happening

00:10:42,089 --> 00:10:47,779
alright so it's just quickly run through

00:10:44,430 --> 00:10:51,709
basic usage you're all been here ssh2

00:10:47,779 --> 00:10:51,709
somewhere right

00:10:56,279 --> 00:11:04,240
ok I go talking to password and bring

00:11:01,670 --> 00:11:04,240
ok

00:11:06,870 --> 00:11:11,279
okay so if you want to log in to

00:11:08,640 --> 00:11:13,290
somebody else so you probably didn't

00:11:11,279 --> 00:11:16,710
notice in that previous example when I

00:11:13,290 --> 00:11:19,830
logged in to the remote system right

00:11:16,710 --> 00:11:22,620
here it shows me my username so it

00:11:19,830 --> 00:11:26,610
logged me into example calm as bill

00:11:22,620 --> 00:11:28,890
which is my username on my laptop if you

00:11:26,610 --> 00:11:34,260
want to login as somebody else you type

00:11:28,890 --> 00:11:40,640
in Fred asks for Fred password and we're

00:11:34,260 --> 00:11:40,640
now logged in as Fred got it good

00:11:43,089 --> 00:11:46,550
alright

00:11:44,690 --> 00:11:48,110
some people want to be able to script

00:11:46,550 --> 00:11:51,020
stuff or they just want to run a single

00:11:48,110 --> 00:11:56,930
command on the remote server so again

00:11:51,020 --> 00:11:59,470
we'll do those Fred will run up time it

00:11:56,930 --> 00:12:01,730
runs up time on the remote server

00:11:59,470 --> 00:12:05,060
standard output is brought back across

00:12:01,730 --> 00:12:06,620
the ssh connection on to my you know and

00:12:05,060 --> 00:12:10,130
displayed on my channel and I'm back in

00:12:06,620 --> 00:12:12,650
my laptop she'll simple so you can use

00:12:10,130 --> 00:12:13,940
that to write scripts if you want to

00:12:12,650 --> 00:12:15,350
script it goes out fetch or something

00:12:13,940 --> 00:12:19,840
from another machine it comes back and

00:12:15,350 --> 00:12:19,840
its uses input into something else great

00:12:21,730 --> 00:12:26,970
SCP everyone's used SCP I think

00:12:28,910 --> 00:12:34,490
do I need to demo it probably not so top

00:12:32,300 --> 00:12:37,340
example i'm i'm sending a file from my

00:12:34,490 --> 00:12:42,110
desktop or my laptop to the remote

00:12:37,340 --> 00:12:43,760
server and the other one is copping back

00:12:42,110 --> 00:12:45,529
the other way so i want to fetch a file

00:12:43,760 --> 00:12:51,499
from the other side

00:12:45,529 --> 00:12:53,449
yeah all right recursively so SCP minus

00:12:51,499 --> 00:12:57,139
R I will pull that's probably not a good

00:12:53,449 --> 00:13:00,589
example I will pull a folder from the

00:12:57,139 --> 00:13:02,749
other site from example com I can pull a

00:13:00,589 --> 00:13:04,670
whole directory tree across to my

00:13:02,749 --> 00:13:07,459
machine and there's other tools you can

00:13:04,670 --> 00:13:10,610
use to do do that as well but scps there

00:13:07,459 --> 00:13:14,439
so people use it you can put in command

00:13:10,610 --> 00:13:18,920
line options here to preserve the file

00:13:14,439 --> 00:13:21,010
file modification times that's everyone

00:13:18,920 --> 00:13:24,090
knows that

00:13:21,010 --> 00:13:24,090
I love this font

00:13:24,620 --> 00:13:28,030
oops okay

00:13:28,100 --> 00:13:33,620
back up some people don't know that you

00:13:31,130 --> 00:13:37,610
can limit the bandwidth of your secure

00:13:33,620 --> 00:13:40,160
copy transfers if you're at home and

00:13:37,610 --> 00:13:42,199
your wife's watching Netflix you don't

00:13:40,160 --> 00:13:44,870
really want to make her buffer because

00:13:42,199 --> 00:13:48,889
she gets angry or he gets angry

00:13:44,870 --> 00:13:52,459
whichever so in this example I've got

00:13:48,889 --> 00:13:57,589
the minus L I'm limiting into 10 should

00:13:52,459 --> 00:14:00,699
be 10 kilobits a second and everyone in

00:13:57,589 --> 00:14:00,699
the household is happy

00:14:05,730 --> 00:14:15,269
ssh file system who's used it sshfs well

00:14:10,829 --> 00:14:17,279
less than half okay who finds they want

00:14:15,269 --> 00:14:21,449
to access their files on another machine

00:14:17,279 --> 00:14:24,990
and they want to open up libera office

00:14:21,449 --> 00:14:26,970
or some other application and access

00:14:24,990 --> 00:14:29,820
that file and not have to worry about

00:14:26,970 --> 00:14:31,410
copying it to you you know to your

00:14:29,820 --> 00:14:35,190
current machine and then copying it back

00:14:31,410 --> 00:14:39,600
when you're finished SSH FS is the way

00:14:35,190 --> 00:14:41,100
to go this will mount your credit

00:14:39,600 --> 00:14:43,949
directory on your local machine and then

00:14:41,100 --> 00:14:46,079
you mount your remote directory on your

00:14:43,949 --> 00:14:48,769
local directory and you can change

00:14:46,079 --> 00:14:51,899
directory into it you can do an LS and

00:14:48,769 --> 00:14:55,560
list all the files in that directory you

00:14:51,899 --> 00:14:56,670
can copy from our documents in this case

00:14:55,560 --> 00:14:57,959
you can copy everything from our

00:14:56,670 --> 00:15:00,540
documents to your local machine if you

00:14:57,959 --> 00:15:03,690
wanted to or you can open up your file

00:15:00,540 --> 00:15:06,990
explorer whatever while exploring

00:15:03,690 --> 00:15:08,670
tool-using and just wander down through

00:15:06,990 --> 00:15:12,750
the directory structure

00:15:08,670 --> 00:15:14,300
and it'll work from here to work or here

00:15:12,750 --> 00:15:17,300
to the other side of the country

00:15:14,300 --> 00:15:17,300
question

00:15:19,800 --> 00:15:26,070
this is encrypted so you know you know

00:15:23,339 --> 00:15:28,080
that the host that you're talking to is

00:15:26,070 --> 00:15:30,660
correct because it authenticates the

00:15:28,080 --> 00:15:35,570
host and it authenticates you as a user

00:15:30,660 --> 00:15:35,570
and encrypts everything yeah

00:15:38,200 --> 00:15:43,120
I don't know I don't know you might be

00:15:40,810 --> 00:15:45,940
able to this is a user space file system

00:15:43,120 --> 00:15:51,330
as opposed to a kernel space file system

00:15:45,940 --> 00:15:51,330
so I don't

00:15:57,059 --> 00:16:01,949
not part of open as such but it's one of

00:15:59,519 --> 00:16:06,539
the tools that I always install when i

00:16:01,949 --> 00:16:07,859
install openssh so yeah it's not one of

00:16:06,539 --> 00:16:09,749
the normal tools to unmount the

00:16:07,859 --> 00:16:12,059
directory again you have to use F user

00:16:09,749 --> 00:16:13,529
amount instead of mounts you have to use

00:16:12,059 --> 00:16:16,799
F use amount because it's a user space

00:16:13,529 --> 00:16:18,569
file system and then you can delete the

00:16:16,799 --> 00:16:23,809
directory that the local directory stub

00:16:18,569 --> 00:16:23,809
the our documents dub when you're done

00:16:23,810 --> 00:16:30,410
post keys all right this is one of the

00:16:27,080 --> 00:16:32,060
advantages I think SSH has over most

00:16:30,410 --> 00:16:35,960
other things is you've got full host

00:16:32,060 --> 00:16:40,730
authentication when you connect to

00:16:35,960 --> 00:16:43,279
remote site and that site has changed

00:16:40,730 --> 00:16:45,350
somehow it will warn you it will say you

00:16:43,279 --> 00:16:50,360
are trying to connect to a machine that

00:16:45,350 --> 00:16:53,089
is no longer what it used to be so when

00:16:50,360 --> 00:16:55,400
you install openssh on a machine it will

00:16:53,089 --> 00:17:02,290
generate a host key for that machine a

00:16:55,400 --> 00:17:04,809
unique key that identifies that machine

00:17:02,290 --> 00:17:07,179
so that when you connect to it when when

00:17:04,809 --> 00:17:09,130
SH opens a connection to that host it

00:17:07,179 --> 00:17:11,829
asks it gets it asked to the host key

00:17:09,130 --> 00:17:15,540
gets the host key back and compares it

00:17:11,829 --> 00:17:18,189
with the host key that it has for that

00:17:15,540 --> 00:17:22,589
for that domain name or that IP address

00:17:18,189 --> 00:17:24,669
and if they're different it tells you so

00:17:22,589 --> 00:17:26,470
the first time you connect to a remote

00:17:24,669 --> 00:17:28,690
system it's going to say this is the

00:17:26,470 --> 00:17:31,500
host keys fingerprint do you want to

00:17:28,690 --> 00:17:33,400
accept it most people just go yes

00:17:31,500 --> 00:17:34,600
without thinking about it but if

00:17:33,400 --> 00:17:37,840
somebody was doing a man-in-the-middle

00:17:34,600 --> 00:17:39,610
attack on you they would be prepared for

00:17:37,840 --> 00:17:42,700
that and they would be giving you back

00:17:39,610 --> 00:17:45,340
their host key and transparently

00:17:42,700 --> 00:17:48,690
connecting to your actual remote host

00:17:45,340 --> 00:17:48,690
that you're trying to get to Nancy

00:17:53,830 --> 00:17:59,600
okay so the question was if the site is

00:17:56,149 --> 00:18:04,490
moving from ipv4 to ipv6 will this

00:17:59,600 --> 00:18:07,250
change and it shouldn't change the host

00:18:04,490 --> 00:18:08,840
key will remain the same but the IP

00:18:07,250 --> 00:18:11,330
address that you're connecting to may

00:18:08,840 --> 00:18:14,500
change so if your SS a Qing to an IP

00:18:11,330 --> 00:18:18,639
address and you ssh to an ipv6 address

00:18:14,500 --> 00:18:22,190
you know in New ipv6 address the local

00:18:18,639 --> 00:18:23,899
known hosts file is indexed by IP

00:18:22,190 --> 00:18:27,080
address so it'll say oh this is a new IP

00:18:23,899 --> 00:18:29,269
address let's go fetch that it treats us

00:18:27,080 --> 00:18:32,570
as a new host if you use the domain name

00:18:29,269 --> 00:18:34,399
and it connected by ipv4 in the old way

00:18:32,570 --> 00:18:36,590
and then it connected by OPB 6 in the

00:18:34,399 --> 00:18:38,960
new way it would still matched as the

00:18:36,590 --> 00:18:42,769
host name and you wouldn't see any

00:18:38,960 --> 00:18:44,720
change yeah so if you don't know what

00:18:42,769 --> 00:18:46,179
the host key fingerprint is of the

00:18:44,720 --> 00:18:49,820
highest server that you're connecting to

00:18:46,179 --> 00:18:51,259
you can print it out and here's the

00:18:49,820 --> 00:18:56,840
command at the bottom to print out that

00:18:51,259 --> 00:18:58,129
I ski so when you spin up a new vm so

00:18:56,840 --> 00:19:00,500
you're spinning up a linode vm i'm

00:18:58,129 --> 00:19:02,350
assuming there some way for linode to

00:19:00,500 --> 00:19:04,789
rue tell you what the host key is

00:19:02,350 --> 00:19:05,770
otherwise you're just blindly trusting

00:19:04,789 --> 00:19:07,570
that

00:19:05,770 --> 00:19:13,470
your first connection is going to be

00:19:07,570 --> 00:19:13,470
okay and everything else is good but

00:19:14,900 --> 00:19:21,180
alright so let's move on to your keys so

00:19:18,900 --> 00:19:23,610
your keys are associated with your

00:19:21,180 --> 00:19:26,720
account and your authorization to access

00:19:23,610 --> 00:19:26,720
that remote system

00:19:29,680 --> 00:19:36,850
keys are replacing the key replaces the

00:19:32,920 --> 00:19:38,710
password so when you normally when you

00:19:36,850 --> 00:19:40,180
connect to do an ssh connection to a

00:19:38,710 --> 00:19:43,120
remote system and a task to your

00:19:40,180 --> 00:19:45,760
password it's an encrypted link at that

00:19:43,120 --> 00:19:47,880
stage you type in your password it seems

00:19:45,760 --> 00:19:50,980
your password over to the other side and

00:19:47,880 --> 00:19:52,270
uses the authentication mechanism on the

00:19:50,980 --> 00:19:55,150
other system whether it spam or

00:19:52,270 --> 00:19:57,540
something else to make sure that

00:19:55,150 --> 00:19:59,970
password gives you access to the system

00:19:57,540 --> 00:20:04,750
your password is going somewhere else

00:19:59,970 --> 00:20:09,160
you may not trust it so user key instead

00:20:04,750 --> 00:20:11,350
so using a public/private key and your

00:20:09,160 --> 00:20:15,280
key your private key is never

00:20:11,350 --> 00:20:17,760
transmitted over the network that make

00:20:15,280 --> 00:20:17,760
sense to everybody

00:20:18,029 --> 00:20:24,090
it's safer your private key can be

00:20:21,960 --> 00:20:27,960
locked with a pass phrase which is like

00:20:24,090 --> 00:20:30,450
a password but it can be longer you can

00:20:27,960 --> 00:20:32,820
also create a private key without a

00:20:30,450 --> 00:20:34,379
passphrase so when you want to use that

00:20:32,820 --> 00:20:39,080
key you don't have to type anything in

00:20:34,379 --> 00:20:42,080
and I'll get to that soon the command is

00:20:39,080 --> 00:20:44,609
ssh-keygen and that will generate that's

00:20:42,080 --> 00:20:47,609
just by itself that will generate a new

00:20:44,609 --> 00:20:52,080
key by default it's going to call it ID

00:20:47,609 --> 00:20:54,659
RSA you can specify where you want that

00:20:52,080 --> 00:21:00,839
what you want to call that key you can

00:20:54,659 --> 00:21:03,239
put comments inside that key and it will

00:21:00,839 --> 00:21:05,509
store it under your SSH directory by

00:21:03,239 --> 00:21:05,509
default

00:21:07,240 --> 00:21:15,640
okay so who remembers the days of hand

00:21:10,630 --> 00:21:17,770
copying SSH keys to other hosts yeah so

00:21:15,640 --> 00:21:20,140
access and access to remote host using a

00:21:17,770 --> 00:21:22,960
public/private key you need to have the

00:21:20,140 --> 00:21:26,530
private key on your host on your desktop

00:21:22,960 --> 00:21:29,890
and you need your public key to be on

00:21:26,530 --> 00:21:33,550
the remote system so you need a

00:21:29,890 --> 00:21:36,910
mechanism to get it there if you're

00:21:33,550 --> 00:21:39,400
using a cloud service they usually give

00:21:36,910 --> 00:21:41,650
you a way of when you when you create a

00:21:39,400 --> 00:21:47,290
new vm they give you a way of pasting

00:21:41,650 --> 00:21:48,940
your public key into a dialog box put on

00:21:47,290 --> 00:21:51,670
their web console and it puts it into

00:21:48,940 --> 00:21:53,080
your account and sets it up for you if

00:21:51,670 --> 00:21:56,890
you're building your own systems or you

00:21:53,080 --> 00:21:58,120
want to do it if you've got you know a

00:21:56,890 --> 00:22:00,250
linux server that you've brought up at

00:21:58,120 --> 00:22:03,760
work and you just want to push your key

00:22:00,250 --> 00:22:05,880
across to it SSH copy ID or send it

00:22:03,760 --> 00:22:05,880
across

00:22:07,200 --> 00:22:13,200
you like to type it and password to do

00:22:09,899 --> 00:22:17,880
it but one password is better than every

00:22:13,200 --> 00:22:19,649
time if you have if you have a way of

00:22:17,880 --> 00:22:23,580
getting onto the console you could go

00:22:19,649 --> 00:22:25,139
across and copy the key in by hand so if

00:22:23,580 --> 00:22:28,889
you're really paranoid yeah you could do

00:22:25,139 --> 00:22:32,929
that you can also copy over you can you

00:22:28,889 --> 00:22:32,929
can with the key system you can start to

00:22:33,049 --> 00:22:38,460
you can start to compartmentalize

00:22:36,500 --> 00:22:40,799
authentication between different servers

00:22:38,460 --> 00:22:43,080
so you can say i'm going to use this key

00:22:40,799 --> 00:22:45,269
with this passphrase to talk to my work

00:22:43,080 --> 00:22:50,760
service and i'm going to use this key to

00:22:45,269 --> 00:22:51,960
talk to my my personal website and you

00:22:50,760 --> 00:22:53,610
don't have to use the same key for

00:22:51,960 --> 00:22:55,529
everything you can break it up and use

00:22:53,610 --> 00:22:57,269
separate keys you can have a separate

00:22:55,529 --> 00:22:59,370
key for every single host that you want

00:22:57,269 --> 00:23:02,210
to talk to which would be really cool

00:22:59,370 --> 00:23:05,220
because then if one key gets compromised

00:23:02,210 --> 00:23:07,019
you don't lose access to everything all

00:23:05,220 --> 00:23:08,130
they don't gain access somebody

00:23:07,019 --> 00:23:10,820
compromises your key they don't gain

00:23:08,130 --> 00:23:10,820
access to everything

00:23:13,920 --> 00:23:19,980
right so the comment there is that if

00:23:17,130 --> 00:23:23,880
you have too many keys the default in

00:23:19,980 --> 00:23:26,850
ssh server is after four key after four

00:23:23,880 --> 00:23:31,200
failed key attempts it kicks you out of

00:23:26,850 --> 00:23:35,040
the connection so if you've got ten keys

00:23:31,200 --> 00:23:37,680
in your key file and your key directory

00:23:35,040 --> 00:23:40,050
it will try each key first and then

00:23:37,680 --> 00:23:42,210
it'll try the password but if it's tried

00:23:40,050 --> 00:23:44,100
before and they've failed it will never

00:23:42,210 --> 00:23:47,400
actually ask you for your password to

00:23:44,100 --> 00:23:49,970
login it kicks you out and I've got a

00:23:47,400 --> 00:23:49,970
solution to that

00:23:52,230 --> 00:23:57,290
okay so let's go create a key

00:23:58,860 --> 00:24:03,049
here so as such

00:24:09,730 --> 00:24:13,780
okay so it's going to say we all want to

00:24:12,130 --> 00:24:16,260
save the key file and I'm going to

00:24:13,780 --> 00:24:16,260
create one

00:24:24,559 --> 00:24:28,549
oh okay I've already created it so I'm

00:24:26,629 --> 00:24:30,820
not going to create it again but you get

00:24:28,549 --> 00:24:30,820
the picture

00:24:32,210 --> 00:24:37,510
okay so if you want to use that

00:24:33,890 --> 00:24:37,510
particular key file that you've created

00:24:44,780 --> 00:24:49,370
inside the ssh directory there's

00:24:46,700 --> 00:24:52,040
actually two files there's an example

00:24:49,370 --> 00:24:54,470
our essay which i created an example RSA

00:24:52,040 --> 00:24:56,090
pub which is your public key you

00:24:54,470 --> 00:24:58,910
publicly you can spread around on

00:24:56,090 --> 00:25:03,590
insecure hosts without too much hassle

00:24:58,910 --> 00:25:06,110
or too much worry now i'm going to use

00:25:03,590 --> 00:25:07,340
that key to try and connect to example

00:25:06,110 --> 00:25:10,550
calm it's not going to work i don't

00:25:07,340 --> 00:25:13,730
think because okay so it tried to use

00:25:10,550 --> 00:25:16,040
the key but example.com didn't recognize

00:25:13,730 --> 00:25:20,980
it so it's asking me for a password so

00:25:16,040 --> 00:25:20,980
kill that ssh copy ID

00:25:22,720 --> 00:25:28,539
if you don't specify the particular key

00:25:26,200 --> 00:25:33,210
you want to copy with ssh copy ID it'll

00:25:28,539 --> 00:25:33,210
copy all of them could be bad

00:25:36,940 --> 00:25:42,550
yeah this will only transfer the pub

00:25:39,430 --> 00:25:46,060
because it knows what it's doing it will

00:25:42,550 --> 00:25:48,910
also set up the it will also set up the

00:25:46,060 --> 00:25:52,060
directory permissions correctly on

00:25:48,910 --> 00:25:54,420
example com to make sure this works and

00:25:52,060 --> 00:25:54,420
it didn't work

00:25:56,240 --> 00:26:00,010
my bad fail

00:26:08,540 --> 00:26:11,350
trust me

00:26:13,570 --> 00:26:16,960
why didn't that work

00:26:23,520 --> 00:26:28,640
no I didn't specify the key that I

00:26:26,190 --> 00:26:31,410
wanted to use to authenticate and

00:26:28,640 --> 00:26:33,930
because it's a because I created this

00:26:31,410 --> 00:26:36,450
key and call it the example that RSA

00:26:33,930 --> 00:26:38,910
it's not the default name and it will

00:26:36,450 --> 00:26:41,010
try the default password so the default

00:26:38,910 --> 00:26:43,950
key and if that doesn't work it'll then

00:26:41,010 --> 00:26:45,000
just try the default it looks like it's

00:26:43,950 --> 00:26:49,510
just going to try the default password

00:26:45,000 --> 00:26:51,910
after that okay

00:26:49,510 --> 00:26:54,340
so if you notice there I had to type in

00:26:51,910 --> 00:26:56,140
my passphrase for the key and its

00:26:54,340 --> 00:27:00,390
password because that's the most common

00:26:56,140 --> 00:27:02,169
password ever used and we're in

00:27:00,390 --> 00:27:05,100
but

00:27:02,169 --> 00:27:05,100
let's go yeah

00:27:05,960 --> 00:27:10,370
ok

00:27:07,610 --> 00:27:12,590
notice how every time I try to log in

00:27:10,370 --> 00:27:15,020
with that key it asked me for my

00:27:12,590 --> 00:27:17,990
passphrase and that gets repetitive that

00:27:15,020 --> 00:27:20,450
gets really repetitive so this is where

00:27:17,990 --> 00:27:22,309
the key agent comes in handy the key

00:27:20,450 --> 00:27:26,240
agent runs on your laptop or your

00:27:22,309 --> 00:27:28,160
desktop and it keeps the keys you unlock

00:27:26,240 --> 00:27:31,460
a key and you stick it in that key agent

00:27:28,160 --> 00:27:36,140
and it will manage them so when you make

00:27:31,460 --> 00:27:38,299
an ssh connection out it will ssh will

00:27:36,140 --> 00:27:40,309
last a key agent do you have this key is

00:27:38,299 --> 00:27:42,919
also say yes it's unlocked here it is

00:27:40,309 --> 00:27:48,320
and you don't have to type of your

00:27:42,919 --> 00:27:50,809
passphrase in over and over again so SSH

00:27:48,320 --> 00:27:55,730
add SSH and I'm just going to add

00:27:50,809 --> 00:28:01,419
example of RS a password to open markets

00:27:55,730 --> 00:28:01,419
and it's now in the ssh agent

00:28:03,360 --> 00:28:08,250
so if I list I'm just listing the keys

00:28:06,059 --> 00:28:10,500
that are in the agent on my laptop and

00:28:08,250 --> 00:28:14,240
there's one key there's the fingerprint

00:28:10,500 --> 00:28:18,300
and now if I do in ssh to example.com

00:28:14,240 --> 00:28:21,779
Thank marine simple

00:28:18,300 --> 00:28:23,729
but wait there's mom

00:28:21,779 --> 00:28:27,160
all right things are starting to get

00:28:23,729 --> 00:28:30,029
complicated right no yes

00:28:27,160 --> 00:28:32,489
feedback

00:28:30,029 --> 00:28:37,639
less typing more work that's what

00:28:32,489 --> 00:28:37,639
everyone likes right so sh can feet

00:28:38,050 --> 00:28:42,460
for each host that you want to connect

00:28:40,090 --> 00:28:44,980
to you can create a post entry in the

00:28:42,460 --> 00:28:47,140
config file and you can specify all the

00:28:44,980 --> 00:28:50,280
options that we were specifying on the

00:28:47,140 --> 00:28:52,840
command line so you can say that when I

00:28:50,280 --> 00:28:54,580
for example when i connect to example

00:28:52,840 --> 00:28:56,860
com I don't want to log in as my

00:28:54,580 --> 00:29:03,580
username I want to log in and spread and

00:28:56,860 --> 00:29:07,150
I want to use my example at RSA key so

00:29:03,580 --> 00:29:10,110
less typing let's demo that let me get

00:29:07,150 --> 00:29:10,110
rid of wyshak again

00:29:14,010 --> 00:29:18,150
because who wants to remember what key

00:29:16,020 --> 00:29:23,360
you need to use to access what host and

00:29:18,150 --> 00:29:23,360
who wants to type in ssh every time

00:29:27,340 --> 00:29:32,920
okay so

00:29:29,810 --> 00:29:32,920
while I prepared earlier

00:29:34,260 --> 00:29:40,520
now I think I need to copy the idea

00:29:36,330 --> 00:29:40,520
across to Fred

00:29:47,140 --> 00:29:52,780
should just be able to do example come

00:29:48,670 --> 00:29:55,100
so at this point it should should copy

00:29:52,780 --> 00:29:58,480
the crosses Fred

00:29:55,100 --> 00:29:58,480
yeah good

00:29:58,970 --> 00:30:06,380
okay so now I've gone and told SH copy

00:30:02,960 --> 00:30:08,630
ID to move my key across to Fred to

00:30:06,380 --> 00:30:13,780
count so it's now in Fred's account it's

00:30:08,630 --> 00:30:19,730
also in my bill account SSH example.com

00:30:13,780 --> 00:30:25,390
bang I'm now in as Fred using keys that

00:30:19,730 --> 00:30:25,390
are in my key agent now

00:30:26,140 --> 00:30:29,790
I think my next slide is going to say

00:30:30,119 --> 00:30:34,949
so instead of writing out this whole

00:30:33,299 --> 00:30:37,319
full command line with your key

00:30:34,949 --> 00:30:41,399
specifying your key and specifying the

00:30:37,319 --> 00:30:44,119
username at example.com it's just SSH

00:30:41,399 --> 00:30:44,119
example to come

00:30:45,309 --> 00:30:49,379
but wait there's more type completion

00:30:50,700 --> 00:30:55,160
nothing come on

00:30:53,100 --> 00:30:55,160
I

00:31:01,690 --> 00:31:10,590
so exactly but oh come on work

00:31:07,779 --> 00:31:10,590
thank you

00:31:10,820 --> 00:31:19,519
so see that typing exi press the tab key

00:31:14,679 --> 00:31:23,710
I'm done so tab completion for ssh will

00:31:19,519 --> 00:31:26,360
use your host you're at sea hosts file

00:31:23,710 --> 00:31:29,919
but it'll also use anything you create

00:31:26,360 --> 00:31:29,919
in your config file

00:31:31,130 --> 00:31:35,120
so if you don't like typing in if you

00:31:33,500 --> 00:31:40,690
don't like example come but you want to

00:31:35,120 --> 00:31:40,690
call it yeah auntie pants

00:31:41,080 --> 00:31:45,430
right now created the same house for

00:31:43,600 --> 00:31:49,750
example.com and fancy pants and I think

00:31:45,430 --> 00:31:53,130
the saw it going off script here nope

00:31:49,750 --> 00:31:53,130
okay I'm wrong

00:31:55,430 --> 00:31:58,970
no it's probably kiss fancy-pants

00:31:57,080 --> 00:32:01,270
doesn't resolve to example a comfy what

00:31:58,970 --> 00:32:01,270
it was

00:32:04,360 --> 00:32:08,760
okay so you're saying down here how its

00:32:06,610 --> 00:32:08,760
name

00:32:11,750 --> 00:32:18,700
mmm I learned something great whoo thank

00:32:16,520 --> 00:32:18,700
you

00:32:25,230 --> 00:32:33,580
yeah yeah who doesn't use bash here

00:32:30,580 --> 00:32:33,580
ok

00:32:35,620 --> 00:32:40,230
I mean I grew up with T shell and

00:32:37,660 --> 00:32:48,180
seashell and then bash came along and

00:32:40,230 --> 00:32:48,180
I'm good alright extra noise tunneling

00:32:50,260 --> 00:32:57,610
who wants to run an X Windows program on

00:32:53,830 --> 00:33:00,460
your remote machine and display it on

00:32:57,610 --> 00:33:04,990
your local machine who's done it without

00:33:00,460 --> 00:33:07,360
SSH before using X hosts yeah okay now

00:33:04,990 --> 00:33:11,500
imagine trying to use so X hosts does

00:33:07,360 --> 00:33:13,750
unencrypted the X Windows TCP

00:33:11,500 --> 00:33:17,230
communication which is built in it 2x

00:33:13,750 --> 00:33:18,880
windows and has been forever but if

00:33:17,230 --> 00:33:20,320
you're going through a firewall or maybe

00:33:18,880 --> 00:33:21,850
through an added system you'd have to

00:33:20,320 --> 00:33:24,550
open up ports all the way along the way

00:33:21,850 --> 00:33:30,360
to get it to work and then using X hosts

00:33:24,550 --> 00:33:30,360
which is not really secure yuck that

00:33:32,710 --> 00:33:38,340
it was mine what was my example it was

00:33:34,809 --> 00:33:38,340
minus X they're thinking

00:33:40,330 --> 00:33:46,769
okay so will log into example at

00:33:42,070 --> 00:33:46,769
calm-eze Fred and run x i's

00:33:47,610 --> 00:33:52,590
so this is an extra notes application

00:33:49,230 --> 00:33:54,179
running on Fred and you can see it's

00:33:52,590 --> 00:33:56,700
getting

00:33:54,179 --> 00:34:00,450
it's got transparency X has had that for

00:33:56,700 --> 00:34:04,139
a long time there's no in this case

00:34:00,450 --> 00:34:06,629
there's no window bordering or anything

00:34:04,139 --> 00:34:12,000
like that because exercise doesn't have

00:34:06,629 --> 00:34:14,399
it and this is running over a low

00:34:12,000 --> 00:34:17,710
bandwidth link low ish bandwidth it's

00:34:14,399 --> 00:34:21,849
probably one megabit link

00:34:17,710 --> 00:34:24,010
and it works it's not the best once you

00:34:21,849 --> 00:34:26,050
get the latencies once the latencies of

00:34:24,010 --> 00:34:28,000
your network connection go up it starts

00:34:26,050 --> 00:34:31,109
to suck and then you want to use

00:34:28,000 --> 00:34:31,109
something else like BNC

00:34:32,560 --> 00:34:41,070
but you can run you know X calc

00:34:36,040 --> 00:34:45,000
you can type type in stuff yeah plus 35

00:34:41,070 --> 00:34:45,000
equals it works

00:34:47,210 --> 00:34:54,070
is that is just so much simpler than the

00:34:50,480 --> 00:34:54,070
old way of doing things question

00:35:00,620 --> 00:35:10,760
no i'm running linux on my on my laptop

00:35:05,330 --> 00:35:13,370
that's got the ok x server running and

00:35:10,760 --> 00:35:15,610
that is the client displaying on the

00:35:13,370 --> 00:35:15,610
server

00:35:20,430 --> 00:35:26,089
all right for tunneling

00:35:23,930 --> 00:35:30,319
people put up firewalls and then they

00:35:26,089 --> 00:35:34,640
open up special gaps to let certain

00:35:30,319 --> 00:35:37,300
traffic through like this one that's my

00:35:34,640 --> 00:35:37,300
mum by the way

00:35:37,700 --> 00:35:40,300
so

00:35:41,250 --> 00:35:47,610
firewalls are there to protect your

00:35:43,980 --> 00:35:52,350
network but they shouldn't get in the

00:35:47,610 --> 00:35:56,130
way of doing work and depending on your

00:35:52,350 --> 00:35:57,900
IT department you may or may not be

00:35:56,130 --> 00:35:59,880
allowed to do this stuff if it's your

00:35:57,900 --> 00:36:07,440
home rally you can do whatever you like

00:35:59,880 --> 00:36:09,270
because you run it your home it's

00:36:07,440 --> 00:36:12,390
generally on your home router you can

00:36:09,270 --> 00:36:16,069
open up a port for ssh you can open up

00:36:12,390 --> 00:36:16,069
for tween to let stuff through

00:36:16,230 --> 00:36:22,050
but you may want to tunnel through your

00:36:19,320 --> 00:36:23,880
router through your net and get access

00:36:22,050 --> 00:36:27,900
to services that are running inside

00:36:23,880 --> 00:36:31,200
you're inside your network from outside

00:36:27,900 --> 00:36:35,490
a good example is if you want to access

00:36:31,200 --> 00:36:36,900
your internal web server from work you

00:36:35,490 --> 00:36:40,530
might run on internal web server at home

00:36:36,900 --> 00:36:44,250
I run mythtv so I have mythtv running

00:36:40,530 --> 00:36:46,619
inside my network it has myth web so it

00:36:44,250 --> 00:36:48,660
displays a web page internally which

00:36:46,619 --> 00:36:52,140
lets me set what pro what TV shows to

00:36:48,660 --> 00:36:55,020
record or you know who's currently

00:36:52,140 --> 00:36:56,580
watching TV that sort of stuff I don't

00:36:55,020 --> 00:37:01,280
let that out through the firewall so I

00:36:56,580 --> 00:37:01,280
create an SSH tunnel through my router

00:37:01,730 --> 00:37:08,160
into my home network and then I can fire

00:37:05,190 --> 00:37:10,560
up my web browser at work point it at a

00:37:08,160 --> 00:37:12,650
local port at work on my local machine

00:37:10,560 --> 00:37:15,119
and it will tunnel all the traffic

00:37:12,650 --> 00:37:17,520
through the network through my encrypted

00:37:15,119 --> 00:37:22,170
SSH tunnel so the IT guys can't see what

00:37:17,520 --> 00:37:26,480
I'm doing and access my home web server

00:37:22,170 --> 00:37:29,100
nice so this command here we're doing a

00:37:26,480 --> 00:37:34,770
forwarding a port forwarding system

00:37:29,100 --> 00:37:37,320
where anything on my laptop if i connect

00:37:34,770 --> 00:37:41,040
to port 8080 on my laptop it will

00:37:37,320 --> 00:37:44,609
forward it to the local host port 80 at

00:37:41,040 --> 00:37:46,170
the remote end localhost just means that

00:37:44,609 --> 00:37:47,880
the box that the remote system that

00:37:46,170 --> 00:37:50,540
you've logged into it's going to connect

00:37:47,880 --> 00:37:54,000
to it to that port 80 on that machine

00:37:50,540 --> 00:37:57,390
you can specify an IP address here so if

00:37:54,000 --> 00:38:00,119
you ssh into your home router if you're

00:37:57,390 --> 00:38:01,710
running open wrt you can SH in and then

00:38:00,119 --> 00:38:04,890
you could say port forward it not to

00:38:01,710 --> 00:38:08,130
localhost but put forward it to 192 168

00:38:04,890 --> 00:38:10,430
0 dot 15 which could be your media

00:38:08,130 --> 00:38:10,430
center

00:38:11,160 --> 00:38:16,870
great who does that anyone do it yeah

00:38:15,040 --> 00:38:19,360
we've got a few okay reverse port

00:38:16,870 --> 00:38:21,850
forwarding anyone do that it's a little

00:38:19,360 --> 00:38:24,550
bit more conceptually tricky but

00:38:21,850 --> 00:38:27,070
basically you're opening a ssh tunnel

00:38:24,550 --> 00:38:28,690
through to the remote machine and then

00:38:27,070 --> 00:38:31,000
you are listening telling that remote

00:38:28,690 --> 00:38:32,980
machine to listen on a port any

00:38:31,000 --> 00:38:35,760
connections to that port bring it back

00:38:32,980 --> 00:38:38,020
up the tunnel and send it off to the

00:38:35,760 --> 00:38:41,560
machine that you specify so in this case

00:38:38,020 --> 00:38:44,890
I've specified localhost bought 22 so

00:38:41,560 --> 00:38:47,920
I'll run this of work on my desktop I

00:38:44,890 --> 00:38:52,240
will SSH into home and open a port in

00:38:47,920 --> 00:38:57,100
this case 2022 at home and then when i

00:38:52,240 --> 00:39:00,340
get home at night i type ssh port 22 so

00:38:57,100 --> 00:39:02,590
20 22 and it will forward my ssh

00:39:00,340 --> 00:39:05,440
connection back up the tunnel and let me

00:39:02,590 --> 00:39:10,170
log into my work machine without having

00:39:05,440 --> 00:39:10,170
to open up ports on the firewall at work

00:39:11,119 --> 00:39:13,720
fun

00:39:14,740 --> 00:39:17,550
exactly

00:39:31,780 --> 00:39:37,840
you can write a script you could use any

00:39:34,900 --> 00:39:39,520
of numerous tools to keep something

00:39:37,840 --> 00:39:41,920
alive like that

00:39:39,520 --> 00:39:44,490
yeah you can put in a while do loop if

00:39:41,920 --> 00:39:44,490
you really wanted to

00:39:46,060 --> 00:39:50,620
yeah and I'm not in this talk I'm not

00:39:49,120 --> 00:39:53,710
trying to give you all the answers I'm

00:39:50,620 --> 00:39:55,990
trying to excite you and say go home try

00:39:53,710 --> 00:39:58,930
this use some of the other command line

00:39:55,990 --> 00:40:02,110
options there's other options like TCP

00:39:58,930 --> 00:40:03,580
keep alive which means it will send a

00:40:02,110 --> 00:40:06,850
packet occasionally down the link to

00:40:03,580 --> 00:40:13,560
make sure that nobody drops that link on

00:40:06,850 --> 00:40:13,560
you I didn't cover that remote browsing

00:40:13,950 --> 00:40:22,060
socks proxy anyone heard of socks proxy

00:40:16,960 --> 00:40:25,000
year okay good SSH has the dynamic pork

00:40:22,060 --> 00:40:29,920
boarding for socks proxy built in so you

00:40:25,000 --> 00:40:33,760
can connect socks proxies is a described

00:40:29,920 --> 00:40:36,040
it basically use it if you are deployed

00:40:33,760 --> 00:40:37,720
overseas or you're trying to access yeah

00:40:36,040 --> 00:40:42,130
so you're deployed overseas and you want

00:40:37,720 --> 00:40:45,370
to access Netflix but netflix says no no

00:40:42,130 --> 00:40:47,260
you can't access me from Iraq because

00:40:45,370 --> 00:40:48,820
it's geo locked if they don't want to

00:40:47,260 --> 00:40:52,290
share the media they want to stream the

00:40:48,820 --> 00:40:55,180
media outside of their copyright region

00:40:52,290 --> 00:40:59,110
so you can do a socks proxy connection

00:40:55,180 --> 00:41:00,850
to a server in the US and then you

00:40:59,110 --> 00:41:03,190
configure your web browser to use the

00:41:00,850 --> 00:41:06,820
proxy server and everything goes across

00:41:03,190 --> 00:41:09,970
an SSH encrypted tunnel and your web

00:41:06,820 --> 00:41:12,450
browser in Iraq appears to be located in

00:41:09,970 --> 00:41:12,450
America

00:41:14,410 --> 00:41:19,499
poor man's VPN

00:41:16,839 --> 00:41:19,499
yes

00:41:27,109 --> 00:41:30,320
right

00:41:28,580 --> 00:41:32,090
so I'll repeat that the only the

00:41:30,320 --> 00:41:34,580
downside of using socks proxy is your

00:41:32,090 --> 00:41:39,350
application needs to support socks

00:41:34,580 --> 00:41:41,660
protocol or socks facility and if you

00:41:39,350 --> 00:41:43,120
use a VPN then there is no restriction

00:41:41,660 --> 00:41:46,120
any application will work with a

00:41:43,120 --> 00:41:46,120
question

00:41:52,140 --> 00:41:58,089
does it

00:41:54,890 --> 00:42:00,529
so I'll repeat that apparently the user

00:41:58,089 --> 00:42:03,410
at your remote site needs to be

00:42:00,529 --> 00:42:08,230
authorized or it has the access to set

00:42:03,410 --> 00:42:08,230
up the socks proxy on that box so you

00:42:08,310 --> 00:42:15,290
yeah if it's your home machine your fine

00:42:12,290 --> 00:42:15,290
question

00:42:17,870 --> 00:42:19,930
ah

00:42:20,010 --> 00:42:26,670
alright so this does not forward you're

00:42:22,980 --> 00:42:28,470
it you're a DNS queries over the over

00:42:26,670 --> 00:42:30,990
the ssh tunnel so your DNS is still

00:42:28,470 --> 00:42:32,850
going to go out unencrypted to the DNS

00:42:30,990 --> 00:42:35,310
server that you've got on your local

00:42:32,850 --> 00:42:40,260
network or before that you've chosen to

00:42:35,310 --> 00:42:42,870
use if your application doesn't have

00:42:40,260 --> 00:42:46,110
socks built in and Firefox and chromium

00:42:42,870 --> 00:42:50,880
do there are tools that attempt to wrap

00:42:46,110 --> 00:42:53,940
up the application so there's basically

00:42:50,880 --> 00:42:56,700
you run this tool and then the

00:42:53,940 --> 00:42:58,890
application that you want to run and it

00:42:56,700 --> 00:43:01,410
will need a sep two all of the network

00:42:58,890 --> 00:43:06,140
communication and push it across the

00:43:01,410 --> 00:43:06,140
socks socks proxy connection

00:43:06,280 --> 00:43:10,820
that's me to do at home

00:43:08,790 --> 00:43:14,460
alright

00:43:10,820 --> 00:43:16,830
control master whose use control masters

00:43:14,460 --> 00:43:19,880
okay so we've got about four people he

00:43:16,830 --> 00:43:19,880
reviews control master

00:43:20,120 --> 00:43:25,340
this basically as I said multiplex is

00:43:22,850 --> 00:43:27,500
your ssh connection you create when you

00:43:25,340 --> 00:43:32,870
do a when you do your first ssh

00:43:27,500 --> 00:43:34,670
connection to remote machine and any any

00:43:32,870 --> 00:43:37,340
future SSH connections to that machine

00:43:34,670 --> 00:43:40,370
will get pushed through your original

00:43:37,340 --> 00:43:43,520
tunnel and you don't have to spend the

00:43:40,370 --> 00:43:45,950
time setting up sh doesn't have to waste

00:43:43,520 --> 00:43:49,010
its time doing a key exchange and

00:43:45,950 --> 00:43:52,460
authenticating the host so it's really

00:43:49,010 --> 00:43:54,320
quick you fire up your initial one it's

00:43:52,460 --> 00:43:58,280
going to be slow to initiate the

00:43:54,320 --> 00:44:01,130
connection every subsequent SSH

00:43:58,280 --> 00:44:03,430
connection to that machine is quick

00:44:01,130 --> 00:44:03,430
quick quick

00:44:04,170 --> 00:44:07,079
I don't know how to do it on the command

00:44:05,520 --> 00:44:09,030
line I haven't even looked I stick all

00:44:07,079 --> 00:44:13,380
this in my config file and forget about

00:44:09,030 --> 00:44:16,049
it the real advantage is if you are

00:44:13,380 --> 00:44:17,940
running a script that goes out to the

00:44:16,049 --> 00:44:19,950
remote machine and grabs you know runs a

00:44:17,940 --> 00:44:21,480
command and gets the result and does

00:44:19,950 --> 00:44:24,119
something with it then sends off another

00:44:21,480 --> 00:44:27,869
command you can issue them as separate

00:44:24,119 --> 00:44:30,180
SSH commands in your bash script or your

00:44:27,869 --> 00:44:31,799
perl script or whatever and as long as

00:44:30,180 --> 00:44:33,720
you've got that initial connection that

00:44:31,799 --> 00:44:36,809
initial tunnel established between the

00:44:33,720 --> 00:44:40,309
two sites that script is going to just

00:44:36,809 --> 00:44:40,309
run run run really quick

00:44:41,580 --> 00:44:47,220
caveat if you closed the first

00:44:44,610 --> 00:44:51,770
connection the master connection while

00:44:47,220 --> 00:44:54,150
your slaves are going to die joseph

00:44:51,770 --> 00:44:58,500
control persists so there's a way to

00:44:54,150 --> 00:45:03,600
make the control channel stay alive even

00:44:58,500 --> 00:45:07,680
if you close it ok again another another

00:45:03,600 --> 00:45:09,480
useful config file option so i have this

00:45:07,680 --> 00:45:11,310
in my config file and i don't even think

00:45:09,480 --> 00:45:12,870
about it now I just leave it in there

00:45:11,310 --> 00:45:18,950
and whenever i connect it creates a

00:45:12,870 --> 00:45:18,950
master channel and yeah question

00:45:27,250 --> 00:45:32,200
right so the question girl the statement

00:45:30,250 --> 00:45:34,780
is that if you do everything you can fit

00:45:32,200 --> 00:45:37,870
file and you use it some of the options

00:45:34,780 --> 00:45:42,700
other options will be ignored and one of

00:45:37,870 --> 00:45:45,190
them is for example if you set up a port

00:45:42,700 --> 00:45:49,420
forward in your config file or you use a

00:45:45,190 --> 00:45:52,360
port forward on the command line and you

00:45:49,420 --> 00:45:54,100
try to do that on a slave connection the

00:45:52,360 --> 00:45:55,930
mast has already set up port forwards

00:45:54,100 --> 00:45:58,330
it's already doing that it won't it'll

00:45:55,930 --> 00:46:02,280
just ignore that that new port forward

00:45:58,330 --> 00:46:02,280
it won't establish another port forward

00:46:06,130 --> 00:46:12,190
okay I said before you can create a key

00:46:09,190 --> 00:46:15,910
without a pass phrase to unlock it just

00:46:12,190 --> 00:46:17,589
dangerous very dangerous if you have a

00:46:15,910 --> 00:46:19,900
key that doesn't have a puff pass phrase

00:46:17,589 --> 00:46:22,329
and it's on your work machine your SS

00:46:19,900 --> 00:46:25,210
admin can come along log into your work

00:46:22,329 --> 00:46:28,990
machine he's got root access he can grab

00:46:25,210 --> 00:46:33,309
your private key file and connect to

00:46:28,990 --> 00:46:35,890
your remote machines right so you've now

00:46:33,309 --> 00:46:38,920
given your admin access to your home

00:46:35,890 --> 00:46:44,650
server or to stuff he probably shouldn't

00:46:38,920 --> 00:46:48,160
have access to but if you're writing a

00:46:44,650 --> 00:46:50,200
script that you put in a cron job your

00:46:48,160 --> 00:46:51,579
cron job can't ask you train during the

00:46:50,200 --> 00:46:55,809
passphrase every time it tries to

00:46:51,579 --> 00:46:57,369
connect to the remote machine so that's

00:46:55,809 --> 00:46:59,799
where and you don't want to have you

00:46:57,369 --> 00:47:04,569
I've seen people do this they do an echo

00:46:59,799 --> 00:47:07,869
of the password into ssh to get the ssh

00:47:04,569 --> 00:47:10,299
connection to unlock and now there's

00:47:07,869 --> 00:47:17,349
wrong right that's defeating the purpose

00:47:10,299 --> 00:47:19,720
use telnet at that point so SSH has a

00:47:17,349 --> 00:47:22,450
authorized Keys file on the remote

00:47:19,720 --> 00:47:25,089
system and inside there that's usually

00:47:22,450 --> 00:47:27,160
just containing your public key that

00:47:25,089 --> 00:47:31,240
says when somebody connects with this

00:47:27,160 --> 00:47:33,880
key let them in you can specify that

00:47:31,240 --> 00:47:37,059
when they connect they cannot do x11

00:47:33,880 --> 00:47:39,549
forwarding they can't do other and no

00:47:37,059 --> 00:47:42,400
port forwarding for example but you can

00:47:39,549 --> 00:47:44,980
also specify command and if you specify

00:47:42,400 --> 00:47:47,019
a command they can't run anything else

00:47:44,980 --> 00:47:49,720
they don't get a shell whenever they

00:47:47,019 --> 00:47:53,200
connect it runs that command and i'm

00:47:49,720 --> 00:47:57,130
doing a an email you know connect to the

00:47:53,200 --> 00:47:59,259
SNMP t sm smtp server to send email but

00:47:57,130 --> 00:48:02,079
you could specify up time as the command

00:47:59,259 --> 00:48:03,700
and every time they hit hit that you

00:48:02,079 --> 00:48:07,390
make that connection they get back up

00:48:03,700 --> 00:48:08,769
time and that's all I get so if you're

00:48:07,390 --> 00:48:11,530
running if you're writing a script

00:48:08,769 --> 00:48:13,660
that's going to connect and get up time

00:48:11,530 --> 00:48:16,270
just put it on their remotes you know on

00:48:13,660 --> 00:48:19,870
the remote system just save this key

00:48:16,270 --> 00:48:22,180
connects they get up time and that's it

00:48:19,870 --> 00:48:24,810
you could run something more complicated

00:48:22,180 --> 00:48:24,810
than that but

00:48:29,880 --> 00:48:36,359
hey I did Kurt intro master

00:48:33,150 --> 00:48:38,130
all right keyboard tricks question what

00:48:36,359 --> 00:48:41,270
I'm understanding that is if you have

00:48:38,130 --> 00:48:41,270
one cron job

00:48:42,010 --> 00:48:46,950
you can go through a machine with what

00:48:47,099 --> 00:48:52,710
yeah the cron job can just do SSH

00:48:49,690 --> 00:48:54,910
example calm and or actually you have to

00:48:52,710 --> 00:48:58,270
you probably have to specifying the con

00:48:54,910 --> 00:49:00,609
job you'd have to specify the key file

00:48:58,270 --> 00:49:03,369
to use and the username and stuff like

00:49:00,609 --> 00:49:05,470
that but yeah when it does he sh it'll

00:49:03,369 --> 00:49:10,420
just run that command and get that back

00:49:05,470 --> 00:49:11,800
as standard input I'd have to get access

00:49:10,420 --> 00:49:14,619
to the other machine and actually change

00:49:11,800 --> 00:49:17,170
the scripture or change change this

00:49:14,619 --> 00:49:18,940
authorized key file and everything

00:49:17,170 --> 00:49:23,290
inside the ssh directory on the remote

00:49:18,940 --> 00:49:27,369
machine is read read read writable only

00:49:23,290 --> 00:49:29,380
by the user if it's if ssh server looks

00:49:27,369 --> 00:49:31,930
at your SSH directory in your home

00:49:29,380 --> 00:49:35,770
directory and sees that there you've

00:49:31,930 --> 00:49:39,880
given access to group or other it won't

00:49:35,770 --> 00:49:41,550
use it it'll it'll to say no not like

00:49:39,880 --> 00:49:44,970
and let anyone he connect at this point

00:49:41,550 --> 00:49:44,970
it's not secure

00:49:52,650 --> 00:50:02,689
I don't like pretty sir

00:49:57,019 --> 00:50:04,039
okay so so the statement is if it

00:50:02,689 --> 00:50:09,529
doesn't match the beginning of the

00:50:04,039 --> 00:50:12,009
command it may let me write whatever you

00:50:09,529 --> 00:50:12,009
use

00:50:13,270 --> 00:50:16,270
ok

00:50:18,630 --> 00:50:27,240
so if you if you have a command like NC

00:50:23,039 --> 00:50:30,089
specified you will what we're seeing is

00:50:27,240 --> 00:50:32,460
it will let you specify command line

00:50:30,089 --> 00:50:37,950
options for NC but you're only going to

00:50:32,460 --> 00:50:41,099
be able to run n see in this example all

00:50:37,950 --> 00:50:43,170
right ctrl D log out everyone should

00:50:41,099 --> 00:50:44,490
know that because everyone's mistyped at

00:50:43,170 --> 00:50:47,130
some point and logged out of your

00:50:44,490 --> 00:50:48,980
current shell control D works over ssh

00:50:47,130 --> 00:50:52,470
at a log you out of your current shell

00:50:48,980 --> 00:50:58,589
if your ssh connection gets stuck for

00:50:52,470 --> 00:51:01,259
whatever reason tilde dot enter and that

00:50:58,589 --> 00:51:05,509
will kill your ssh connection so that's

00:51:01,259 --> 00:51:05,509
like the escape character christian

00:51:05,539 --> 00:51:11,880
answer to lit up thank you i just keep

00:51:09,779 --> 00:51:16,559
pressing into tilde dot n tilde dot

00:51:11,880 --> 00:51:20,430
enter bang it's out alright this one got

00:51:16,559 --> 00:51:24,990
me for a while i use other applications

00:51:20,430 --> 00:51:27,150
that use ctrl s to save and so finger

00:51:24,990 --> 00:51:30,900
memory i do ctrl s by accident in the

00:51:27,150 --> 00:51:33,000
ssh session and then i type and nothing

00:51:30,900 --> 00:51:38,849
happens and it's basically it's really

00:51:33,000 --> 00:51:40,799
just locked the TDY so and at that point

00:51:38,849 --> 00:51:43,160
i go till the doc to ladakh try and kill

00:51:40,799 --> 00:51:45,900
ya safe session and have to re-establish

00:51:43,160 --> 00:51:48,809
it's actually easy to fix you just to

00:51:45,900 --> 00:51:55,259
control q it unlocks the TDY session and

00:51:48,809 --> 00:51:56,440
everything's good an example example of

00:51:55,259 --> 00:52:02,030
come

00:51:56,440 --> 00:52:05,140
ctrl s now I can't type control q and

00:52:02,030 --> 00:52:05,140
locks and there's on my typing

00:52:09,450 --> 00:52:16,109
let's get tricky I've got a few minutes

00:52:12,359 --> 00:52:19,650
left just you want to clone your hard

00:52:16,109 --> 00:52:26,130
drive on your limo machine you can use

00:52:19,650 --> 00:52:29,700
ssh to run DD on your limo machine-type

00:52:26,130 --> 00:52:33,329
the standard output back to your your

00:52:29,700 --> 00:52:35,670
machine I run it through Peavy because

00:52:33,329 --> 00:52:37,170
Peavy gives you process or pipe viewer

00:52:35,670 --> 00:52:39,839
it shows you the progress of your

00:52:37,170 --> 00:52:43,500
transfer and then you can write it to a

00:52:39,839 --> 00:52:46,730
file or you can write it to gzip and

00:52:43,500 --> 00:52:46,730
tire or whatever else you like

00:52:50,420 --> 00:52:55,579
the caveat is if you're trying to do

00:52:53,410 --> 00:52:57,829
trying to do something as root on the

00:52:55,579 --> 00:53:02,210
other system you need to do sudo su do

00:52:57,829 --> 00:53:06,290
is going to ask you for a password so in

00:53:02,210 --> 00:53:08,900
this example I've told it to use sudo

00:53:06,290 --> 00:53:13,010
ask pass so when sudo needs to use a

00:53:08,900 --> 00:53:16,280
password it runs that program in this

00:53:13,010 --> 00:53:18,559
case it's x11 SSH ask pass and it pops

00:53:16,280 --> 00:53:20,089
up a dialog but that's running on the

00:53:18,559 --> 00:53:22,190
right machine so you need to forward X

00:53:20,089 --> 00:53:23,930
connection back to your local machine so

00:53:22,190 --> 00:53:28,270
that that password dialog appears on

00:53:23,930 --> 00:53:28,270
your local machine and then we're good

00:53:30,250 --> 00:53:38,150
yes because I stand out is being piped

00:53:35,030 --> 00:53:41,390
and you don't see it so because its

00:53:38,150 --> 00:53:48,530
standard error I think I'm not sure but

00:53:41,390 --> 00:53:51,799
it didn't work so yes okay so statement

00:53:48,530 --> 00:53:54,170
is the bt y is locked because of what

00:53:51,799 --> 00:53:56,630
we're doing and you can't enter a

00:53:54,170 --> 00:53:59,630
standard password I don't think you can

00:53:56,630 --> 00:54:02,079
even echo 1 through to triumph with

00:53:59,630 --> 00:54:02,079
that'll be bad

00:54:03,830 --> 00:54:14,060
okay so you can force it but it doesn't

00:54:07,250 --> 00:54:17,240
always work okay um B&C losses VNC yeah

00:54:14,060 --> 00:54:22,520
it's better not using your side desktop

00:54:17,240 --> 00:54:26,030
thing good BNC has ssh the ability to

00:54:22,520 --> 00:54:28,310
use ssh built in but you need to set up

00:54:26,030 --> 00:54:31,820
an environment variable that tells b and

00:54:28,310 --> 00:54:36,760
c how to wear to push its its network

00:54:31,820 --> 00:54:41,240
traffic through so in this case I am

00:54:36,760 --> 00:54:43,760
connecting is Fred so going to run SSH

00:54:41,240 --> 00:54:46,930
I'm gonna connect just Fred I'm going to

00:54:43,760 --> 00:54:50,810
do a port forward with the minus L and

00:54:46,930 --> 00:54:53,170
SH will fill in these variables with the

00:54:50,810 --> 00:54:55,130
correct port that wants to use the

00:54:53,170 --> 00:54:58,460
hostname that you're going to connect to

00:54:55,130 --> 00:55:00,500
and then I run sleep on the other end

00:54:58,460 --> 00:55:02,300
just to keep the connection alive long

00:55:00,500 --> 00:55:04,130
enough for you to establish a VNC

00:55:02,300 --> 00:55:07,310
connection and then the traffic will

00:55:04,130 --> 00:55:11,450
keep the tunnel alive and in VNC viewer

00:55:07,310 --> 00:55:13,220
you just say do it by example calm so

00:55:11,450 --> 00:55:17,660
this creates an ssh tunnel to your moat

00:55:13,220 --> 00:55:20,800
machine and then connects to the VNC

00:55:17,660 --> 00:55:24,560
server running on that local machine and

00:55:20,800 --> 00:55:28,480
i use that to admin my parents machine

00:55:24,560 --> 00:55:28,480
in australia great

00:55:29,590 --> 00:55:34,660
all right we're at the end go home

00:55:32,370 --> 00:55:38,880
before you go home there's some extra

00:55:34,660 --> 00:55:44,950
things that you want to know SSH LF L h

00:55:38,880 --> 00:55:47,410
le I think it's LH but you can if your

00:55:44,950 --> 00:55:50,680
firewall see at the University blocks

00:55:47,410 --> 00:55:55,840
all connections except port 80 and port

00:55:50,680 --> 00:55:59,950
443 so https connections you can run SSH

00:55:55,840 --> 00:56:02,260
LF on your server and it will interpret

00:55:59,950 --> 00:56:04,600
the traffic coming in and say this is

00:56:02,260 --> 00:56:06,790
SSL i'm going to send that to the web

00:56:04,600 --> 00:56:08,500
browser the side of the web server or

00:56:06,790 --> 00:56:11,950
this is an ssh connection i'm going to

00:56:08,500 --> 00:56:15,340
send it to openssh so now you can

00:56:11,950 --> 00:56:17,140
connect with your web browser to your

00:56:15,340 --> 00:56:19,710
home machine and you'll over it over

00:56:17,140 --> 00:56:27,640
https and you'll get your web page or

00:56:19,710 --> 00:56:32,260
ssh to home machine and you're in SSH

00:56:27,640 --> 00:56:35,860
arts class pops up a nice pretty GUI for

00:56:32,260 --> 00:56:38,470
you to enter in your passphrase because

00:56:35,860 --> 00:56:39,910
you might be setting up a machine for

00:56:38,470 --> 00:56:42,310
somebody who is not a command line

00:56:39,910 --> 00:56:44,770
person you can create a icon on the

00:56:42,310 --> 00:56:48,820
desktop shortcut icon you double click

00:56:44,770 --> 00:56:52,000
it it runs an SSH command sure yea to

00:56:48,820 --> 00:56:55,150
another machine don't say fire up an X X

00:56:52,000 --> 00:56:57,580
11 program but how do you get the pass

00:56:55,150 --> 00:57:00,790
phrase in how do you unlock the key so

00:56:57,580 --> 00:57:06,480
you can specify a program that pops up

00:57:00,790 --> 00:57:09,340
to ask you for that passphrase KDE has a

00:57:06,480 --> 00:57:12,460
ki o plug-in they call it it's called

00:57:09,340 --> 00:57:15,610
fish so anywhere in KDE that you specify

00:57:12,460 --> 00:57:20,830
a file path or a URL you can type in

00:57:15,610 --> 00:57:23,290
fish and username at example calm and it

00:57:20,830 --> 00:57:27,130
will make an ssh connection and give you

00:57:23,290 --> 00:57:31,260
seamless as if you're talking to a file

00:57:27,130 --> 00:57:36,040
on the local system read/write just like

00:57:31,260 --> 00:57:39,580
sshfs file system but built-in de que te

00:57:36,040 --> 00:57:43,200
boot manager who is kvm boot manager

00:57:39,580 --> 00:57:50,200
okay that has ssh connection built in

00:57:43,200 --> 00:57:53,350
quick let's do it advantage go file add

00:57:50,200 --> 00:57:56,080
connection connect to remote host still

00:57:53,350 --> 00:57:59,830
look I can specify siege I'm not going

00:57:56,080 --> 00:58:03,490
to do it but but if this will create a

00:57:59,830 --> 00:58:05,620
new entry it'll connect various Sh it'll

00:58:03,490 --> 00:58:09,190
period like this one here quad is my

00:58:05,620 --> 00:58:10,420
other machine and in you can double

00:58:09,190 --> 00:58:13,390
click on that and it will connect to

00:58:10,420 --> 00:58:15,220
that remote server running k vm server

00:58:13,390 --> 00:58:17,020
and it will display all the clients

00:58:15,220 --> 00:58:20,140
whether they are running or not running

00:58:17,020 --> 00:58:23,170
you can click on a client and it will

00:58:20,140 --> 00:58:26,730
display the clients console over V and

00:58:23,170 --> 00:58:28,570
see over the ssh tunnel on your desktop

00:58:26,730 --> 00:58:32,490
but you'll have to think about it you

00:58:28,570 --> 00:58:32,490
just configure it once and forget about

00:58:35,720 --> 00:58:39,880
that's it any questions

00:58:40,290 --> 00:58:43,460
just paste that for

00:58:45,150 --> 00:58:53,480
I have a lab full of those boards full

00:58:48,059 --> 00:58:56,789
of test machines jtag programmers I have

00:58:53,480 --> 00:58:59,549
remote power switching so I can power

00:58:56,789 --> 00:59:01,710
cycle those boards all the boards have

00:58:59,549 --> 00:59:07,589
got serial ports some of them have got

00:59:01,710 --> 00:59:10,920
ethernet so I ssh into a test server and

00:59:07,589 --> 00:59:13,500
I can run tests on that against that

00:59:10,920 --> 00:59:17,010
board I can ssh into that board that

00:59:13,500 --> 00:59:22,049
boards running linux so i can ssh into

00:59:17,010 --> 00:59:24,119
it over ethernet run tests commands you

00:59:22,049 --> 00:59:26,910
know run a load can run some sort of

00:59:24,119 --> 00:59:29,279
burning load program make sure the

00:59:26,910 --> 00:59:30,779
boards working have other linux test

00:59:29,279 --> 00:59:34,200
servers and you know checking the

00:59:30,779 --> 00:59:36,390
temperatures doing whatever else and i

00:59:34,200 --> 00:59:38,130
do all that in the lab at work I don't

00:59:36,390 --> 00:59:39,599
want to walk from my office to the lab

00:59:38,130 --> 00:59:41,730
every five minutes every time I need

00:59:39,599 --> 00:59:45,000
type you know run a new test I just do

00:59:41,730 --> 00:59:49,410
it all from my desktop and then when we

00:59:45,000 --> 00:59:51,839
have a snow day hey I'm again I don't go

00:59:49,410 --> 00:59:54,000
into work I just stayed home and I just

00:59:51,839 --> 00:59:57,660
remote controller SSH into my work

00:59:54,000 --> 01:00:00,240
machine and remote control everything

00:59:57,660 --> 01:00:01,529
from that and I don't need anything

01:00:00,240 --> 01:00:07,799
special on the firewall to do so

01:00:01,529 --> 01:00:09,480
question yeah i'm going to i believe i

01:00:07,799 --> 01:00:13,799
need to send these to the conference

01:00:09,480 --> 01:00:16,049
organizers and they will put them up so

01:00:13,799 --> 01:00:19,140
these slides will become available at

01:00:16,049 --> 01:00:22,650
the end of the conference any more

01:00:19,140 --> 01:00:24,980
questions alright well that's time thank

01:00:22,650 --> 01:00:24,980
you very much

01:00:33,820 --> 01:00:38,090
your customers rely on your website or

01:00:36,560 --> 01:00:40,460
application if it's slower

01:00:38,090 --> 01:00:43,430
non-responsive it infuriates your users

01:00:40,460 --> 01:00:45,230
and costs you money keeping your

01:00:43,430 --> 01:00:48,730
business critical systems humming along

01:00:45,230 --> 01:00:51,580
requires insight into what they're doing

01:00:48,730 --> 01:00:53,560
your system metrics tell stories stories

01:00:51,580 --> 01:00:55,810
that can reveal performance bottlenecks

01:00:53,560 --> 01:00:58,120
resource limitations and other problems

01:00:55,810 --> 01:00:59,890
but how do you keep an eye on all of

01:00:58,120 --> 01:01:02,500
your systems performance metrics in

01:00:59,890 --> 01:01:05,350
real-time and record this data for later

01:01:02,500 --> 01:01:07,330
analysis enter longview the new way to

01:01:05,350 --> 01:01:09,370
see what's really going on under the

01:01:07,330 --> 01:01:11,470
hood the longview dashboard lets you

01:01:09,370 --> 01:01:13,480
visualize the status of all your systems

01:01:11,470 --> 01:01:16,210
providing you with a bird's-eye view of

01:01:13,480 --> 01:01:19,330
your entire fleet you can sort by cpu

01:01:16,210 --> 01:01:22,030
memory swap processes load and network

01:01:19,330 --> 01:01:24,370
usage click a specific system to access

01:01:22,030 --> 01:01:26,380
its individual dashboard then click and

01:01:24,370 --> 01:01:29,350
drag to zoom in on chokepoints and get

01:01:26,380 --> 01:01:31,360
more detail comprehensive network data

01:01:29,350 --> 01:01:34,060
including inbound and outbound traffic

01:01:31,360 --> 01:01:35,650
is available on the network tab and disk

01:01:34,060 --> 01:01:37,540
rights and free space on the disk

01:01:35,650 --> 01:01:40,390
stabbed while the process Explorer

01:01:37,540 --> 01:01:42,940
displays usage statistics for individual

01:01:40,390 --> 01:01:45,100
processes the system info tab shows

01:01:42,940 --> 01:01:47,350
listening services active connections

01:01:45,100 --> 01:01:49,480
and available updates adding long view

01:01:47,350 --> 01:01:51,160
to a system is easy just click the

01:01:49,480 --> 01:01:53,320
button copy the one line installation

01:01:51,160 --> 01:01:55,750
command then run the command on your

01:01:53,320 --> 01:01:57,460
linux system to complete the process the

01:01:55,750 --> 01:01:59,620
agent will begin collecting data and

01:01:57,460 --> 01:02:01,480
sending it to longview then the graph

01:01:59,620 --> 01:02:04,060
start rolling

01:02:01,480 --> 01:02:06,430
use longview to gain visibility into

01:02:04,060 --> 01:02:10,170
your servers so when your website or app

01:02:06,430 --> 01:02:10,170
heats up it stays up

01:02:19,310 --> 01:02:21,370

YouTube URL: https://www.youtube.com/watch?v=aM0wFYugkSg


