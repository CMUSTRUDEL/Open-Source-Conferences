Title: 2014 SouthEast LinuxFest - Ken Moore - PBI v10: Application Management Made Easy
Publication date: 2015-05-02
Playlist: 2014 SouthEast LinuxFest
Description: 
	2014 SouthEast LinuxFest
Ken Moore
PBI v10: Application Management Made Easy
Captions: 
	00:00:00,000 --> 00:00:05,339
the following presentation was recorded

00:00:02,490 --> 00:00:08,189
the 2014 southeast linux fest in

00:00:05,339 --> 00:00:11,070
charlotte north carolina it is licensed

00:00:08,189 --> 00:00:14,519
under a creative commons license for

00:00:11,070 --> 00:00:17,910
more information visit www so I see

00:00:14,519 --> 00:00:18,990
Linux PC org the southeast linux fest

00:00:17,910 --> 00:00:22,350
would like to thank the following

00:00:18,990 --> 00:00:27,090
diamond sponsors in 2014 for helping

00:00:22,350 --> 00:00:28,710
make these videos possible ok well thank

00:00:27,090 --> 00:00:30,359
you all for coming as I was just

00:00:28,710 --> 00:00:33,120
explaining to some of you want my name

00:00:30,359 --> 00:00:35,550
is Ken more I work on the pc-bsd project

00:00:33,120 --> 00:00:39,000
and we are sponsored by Iook systems

00:00:35,550 --> 00:00:42,719
there are corporate sponsor pc-bsd is a

00:00:39,000 --> 00:00:45,329
project to make freebsd easy to make it

00:00:42,719 --> 00:00:47,910
easy to install easy to run easy to do

00:00:45,329 --> 00:00:50,570
whatever it is you need to do with it

00:00:47,910 --> 00:00:54,390
that's the best way to describe it

00:00:50,570 --> 00:00:56,520
primarily designed as a desktop system

00:00:54,390 --> 00:00:58,410
so that you have a graphical interface

00:00:56,520 --> 00:01:00,840
with graphical tools for running your

00:00:58,410 --> 00:01:04,080
ministry in your system it also has a

00:01:00,840 --> 00:01:06,600
server side called true OS which is

00:01:04,080 --> 00:01:07,860
exactly the same as CBS d it's just the

00:01:06,600 --> 00:01:09,650
command-line versions of all of our

00:01:07,860 --> 00:01:13,560
tools instead of the graphical versions

00:01:09,650 --> 00:01:16,229
so all of our graphical versions really

00:01:13,560 --> 00:01:23,369
are just front ends to those see a lot

00:01:16,229 --> 00:01:25,950
factoids so just so you know there's no

00:01:23,369 --> 00:01:27,780
difference between pc-bsd and true OS at

00:01:25,950 --> 00:01:30,060
that respect if the tool exists in

00:01:27,780 --> 00:01:32,939
pc-bsd the exact same tool is available

00:01:30,060 --> 00:01:35,450
in true OS they're just a different

00:01:32,939 --> 00:01:38,460
interface command line or graphical

00:01:35,450 --> 00:01:40,619
today however I want to talk about the

00:01:38,460 --> 00:01:42,720
pbi system this is something that has

00:01:40,619 --> 00:01:44,460
been unique to pc-bsd in quite a while

00:01:42,720 --> 00:01:46,860
specifically I want to talk about the

00:01:44,460 --> 00:01:49,979
new version version 10 that just came

00:01:46,860 --> 00:01:52,500
out recently it's a quite a radical

00:01:49,979 --> 00:01:54,450
departure from our old versions and I

00:01:52,500 --> 00:01:56,670
want to go through show the differences

00:01:54,450 --> 00:01:58,110
between them and how useful and

00:01:56,670 --> 00:02:00,630
important this is for the future of

00:01:58,110 --> 00:02:03,960
pc-bsd and application management in

00:02:00,630 --> 00:02:07,770
general so first off let me define what

00:02:03,960 --> 00:02:11,790
a PDI is pbi is short for a push button

00:02:07,770 --> 00:02:13,150
installer this was initially designed by

00:02:11,790 --> 00:02:15,129
chris moore when

00:02:13,150 --> 00:02:18,189
he first founded the pc-bsd project

00:02:15,129 --> 00:02:20,140
because at the time in freebsd you only

00:02:18,189 --> 00:02:22,180
had the port's tree and the port's

00:02:20,140 --> 00:02:25,780
treatment that you had to fetch all the

00:02:22,180 --> 00:02:27,879
sources compile them all yourself clean

00:02:25,780 --> 00:02:29,530
up afterwards and then it would you know

00:02:27,879 --> 00:02:31,720
have it all installed and it just took a

00:02:29,530 --> 00:02:35,319
long time to get anything on your system

00:02:31,720 --> 00:02:37,750
so he designed TB is to be pre-built

00:02:35,319 --> 00:02:41,040
binaries that you can download and

00:02:37,750 --> 00:02:43,780
install on to your FreeBSD system easily

00:02:41,040 --> 00:02:46,120
without having to worry about doing all

00:02:43,780 --> 00:02:48,099
the compilation stuff or having a strong

00:02:46,120 --> 00:02:50,500
powerful system you could just get a

00:02:48,099 --> 00:02:52,239
single file stick it on a USB stick if

00:02:50,500 --> 00:02:54,430
you needed to and move it over to your

00:02:52,239 --> 00:02:56,739
low powered system and install it there

00:02:54,430 --> 00:03:04,269
very nice and simple easy push-button

00:02:56,739 --> 00:03:06,370
installer that is the premise for it so

00:03:04,269 --> 00:03:08,349
for an example tool chain for what I

00:03:06,370 --> 00:03:10,299
have here to create a push button

00:03:08,349 --> 00:03:11,639
installer or really you know let's just

00:03:10,299 --> 00:03:14,500
say application management in general

00:03:11,639 --> 00:03:16,840
you always have to start with building

00:03:14,500 --> 00:03:19,180
the application from some kind of source

00:03:16,840 --> 00:03:20,980
be this by a proprietary you know

00:03:19,180 --> 00:03:22,540
distributor they compile it themselves

00:03:20,980 --> 00:03:24,730
and then they just release the binaries

00:03:22,540 --> 00:03:26,560
so you wouldn't see this step but in the

00:03:24,730 --> 00:03:29,609
open source world most often you do see

00:03:26,560 --> 00:03:31,750
this step fetch the sources compile it

00:03:29,609 --> 00:03:33,549
after that you package up that

00:03:31,750 --> 00:03:35,709
application so all those binaries that

00:03:33,549 --> 00:03:37,629
that application needs all the extra

00:03:35,709 --> 00:03:39,909
files configuration files whatever it

00:03:37,629 --> 00:03:42,040
might be you want to package them

00:03:39,909 --> 00:03:44,290
together into some kind of format so

00:03:42,040 --> 00:03:46,599
that they can be distributed and then

00:03:44,290 --> 00:03:49,449
finally and this is usually the end user

00:03:46,599 --> 00:03:51,340
step downloading that package installing

00:03:49,449 --> 00:03:53,590
and using it that's kind of the whole

00:03:51,340 --> 00:03:56,109
point of having the application so you

00:03:53,590 --> 00:03:59,139
want to try and make this as easy of a

00:03:56,109 --> 00:04:01,060
process as possible and PBIS or designs

00:03:59,139 --> 00:04:03,970
specifically for that to try and make

00:04:01,060 --> 00:04:06,819
the entire process easy not just focus

00:04:03,970 --> 00:04:08,229
on one of the little pieces but so let's

00:04:06,819 --> 00:04:10,720
go through each of these three pieces

00:04:08,229 --> 00:04:12,310
individually first and then we'll get

00:04:10,720 --> 00:04:15,669
into more the graphical stuff and

00:04:12,310 --> 00:04:19,690
end-user stuff that will be a lot more

00:04:15,669 --> 00:04:21,820
easy to see so first off for source

00:04:19,690 --> 00:04:23,979
builds the old PPI system and the new

00:04:21,820 --> 00:04:27,099
pbi system they're both again still

00:04:23,979 --> 00:04:27,460
based off of freebsd ports on freebsd

00:04:27,099 --> 00:04:29,560
the

00:04:27,460 --> 00:04:31,660
it's tree is the de facto standard if

00:04:29,560 --> 00:04:33,970
you want to have applications on FreeBSD

00:04:31,660 --> 00:04:36,430
make sure there is a port in the port's

00:04:33,970 --> 00:04:38,740
tree that is the way to register that

00:04:36,430 --> 00:04:40,569
hey this application works on FreeBSD

00:04:38,740 --> 00:04:42,099
it's not just some little Linux thing

00:04:40,569 --> 00:04:43,750
that was over here that requires Linux

00:04:42,099 --> 00:04:47,380
kernel calls and stuff like that it

00:04:43,750 --> 00:04:50,169
actually runs okay the old system

00:04:47,380 --> 00:04:52,780
however used a very special system base

00:04:50,169 --> 00:04:54,819
it did not compile things assuming that

00:04:52,780 --> 00:04:56,860
they that they would be installed into

00:04:54,819 --> 00:04:59,800
use or local instead it used a special

00:04:56,860 --> 00:05:02,470
variant of user pbi and then the

00:04:59,800 --> 00:05:05,530
application dash architecture for

00:05:02,470 --> 00:05:07,690
instance this was to keep applications

00:05:05,530 --> 00:05:09,789
separate from the main system because

00:05:07,690 --> 00:05:12,520
the I premise was that you keep your

00:05:09,789 --> 00:05:14,380
main system since it rarely changes on

00:05:12,520 --> 00:05:16,840
FreeBSD you wanted as stable as secure

00:05:14,380 --> 00:05:19,990
as possible so they would install a

00:05:16,840 --> 00:05:22,419
release let's say seven point 0 and you

00:05:19,990 --> 00:05:24,880
had FreeBSD 7.0 with a small collection

00:05:22,419 --> 00:05:26,949
of packages that was stable and never

00:05:24,880 --> 00:05:28,360
touched it would never break on you

00:05:26,949 --> 00:05:30,340
because you never touched it all your

00:05:28,360 --> 00:05:34,360
end user applications would be installed

00:05:30,340 --> 00:05:36,639
into this custom location user pbi to be

00:05:34,360 --> 00:05:38,830
kept separately and be able to updated

00:05:36,639 --> 00:05:40,659
regularly again without touching or

00:05:38,830 --> 00:05:43,210
breaking your main system that was the

00:05:40,659 --> 00:05:45,430
idea behind it with the new system

00:05:43,210 --> 00:05:47,650
however we don't have to worry about

00:05:45,430 --> 00:05:50,440
breaking the main system so much the

00:05:47,650 --> 00:05:53,020
freebsd packaging methods have come such

00:05:50,440 --> 00:05:55,210
a long ways that people want to be able

00:05:53,020 --> 00:05:57,639
to keep their main system up to date all

00:05:55,210 --> 00:05:59,349
the time as well as just a couple

00:05:57,639 --> 00:06:02,080
third-party applications that you use

00:05:59,349 --> 00:06:04,539
and people want that type of integration

00:06:02,080 --> 00:06:07,840
so we've now gone to the standard user

00:06:04,539 --> 00:06:09,490
local system base this is incredibly

00:06:07,840 --> 00:06:13,389
important because it means that all of

00:06:09,490 --> 00:06:16,210
your applications are built and compiled

00:06:13,389 --> 00:06:18,310
to run within the exact same environment

00:06:16,210 --> 00:06:21,310
depending on each other so there you

00:06:18,310 --> 00:06:22,840
have the dependency soup and I'll talk

00:06:21,310 --> 00:06:24,759
about the packages in a moment and how

00:06:22,840 --> 00:06:27,130
that deals with it the other main

00:06:24,759 --> 00:06:30,009
difference to point out here though is

00:06:27,130 --> 00:06:31,780
that the compilation options in the old

00:06:30,009 --> 00:06:34,840
system were set on an individual

00:06:31,780 --> 00:06:37,690
application basis this meant if you

00:06:34,840 --> 00:06:40,560
installed say Firefox and it needed

00:06:37,690 --> 00:06:43,050
pearl with some particular dependency

00:06:40,560 --> 00:06:45,060
that particular parole dependency would

00:06:43,050 --> 00:06:47,730
only be included with the Firefox

00:06:45,060 --> 00:06:50,460
application if you needed pearl with

00:06:47,730 --> 00:06:52,380
some other application you might not

00:06:50,460 --> 00:06:54,840
have that same dependency or that same

00:06:52,380 --> 00:06:56,070
option set for Pearl with that other

00:06:54,840 --> 00:06:58,470
application they were completely

00:06:56,070 --> 00:07:00,210
separate and independent entities so

00:06:58,470 --> 00:07:02,070
each application and all its

00:07:00,210 --> 00:07:04,410
dependencies was independent than this

00:07:02,070 --> 00:07:05,940
application in all its dependencies they

00:07:04,410 --> 00:07:08,520
had their own dependency trees is the

00:07:05,940 --> 00:07:10,770
best way to think about it now however

00:07:08,520 --> 00:07:12,600
all the compilation options are set for

00:07:10,770 --> 00:07:16,050
individual applications on a system-wide

00:07:12,600 --> 00:07:18,450
basis so if you set an option for Pearl

00:07:16,050 --> 00:07:20,880
to have some particular bit turned on

00:07:18,450 --> 00:07:23,040
then that particular bit is assumed to

00:07:20,880 --> 00:07:25,169
be turned on for every application on

00:07:23,040 --> 00:07:27,630
the system not just that one individual

00:07:25,169 --> 00:07:29,070
end user application so it's just a

00:07:27,630 --> 00:07:30,600
slightly different way of thinking about

00:07:29,070 --> 00:07:32,610
it but it does bite people occasionally

00:07:30,600 --> 00:07:36,270
if they're not familiar aware of the

00:07:32,610 --> 00:07:38,940
differences next step the packaging

00:07:36,270 --> 00:07:42,720
again in the old system there was a

00:07:38,940 --> 00:07:45,660
freebsd package system if you could call

00:07:42,720 --> 00:07:49,310
it that it was very kind of unmaintained

00:07:45,660 --> 00:07:53,130
very old it wasn't it wasn't very useful

00:07:49,310 --> 00:07:54,840
so the pbi system provided the packages

00:07:53,130 --> 00:07:57,030
it did all the packaging itself with its

00:07:54,840 --> 00:07:59,010
own special format where it compiled

00:07:57,030 --> 00:08:02,190
everything the application and the files

00:07:59,010 --> 00:08:05,130
into a single file to be distributed

00:08:02,190 --> 00:08:06,479
called a dot pbi this is why if you look

00:08:05,130 --> 00:08:10,320
on our forums and stuff you'll see lots

00:08:06,479 --> 00:08:12,690
of people that refer to PB is this is

00:08:10,320 --> 00:08:14,460
where the name came from a PB I was a

00:08:12,690 --> 00:08:18,419
application and it was distributed as

00:08:14,460 --> 00:08:20,490
one file this meant that you had a large

00:08:18,419 --> 00:08:26,070
file size for instance the Firefox pbi

00:08:20,490 --> 00:08:28,590
it was roughly 250 megabytes because it

00:08:26,070 --> 00:08:32,669
wasn't just Firefox in that pbi it was

00:08:28,590 --> 00:08:34,919
firefox and gtk and you know all these

00:08:32,669 --> 00:08:36,659
other dependencies that firefox needed

00:08:34,919 --> 00:08:41,130
in order to run it was all of it

00:08:36,659 --> 00:08:43,260
compacted into one file this meant that

00:08:41,130 --> 00:08:46,170
when you had to go download it you were

00:08:43,260 --> 00:08:49,170
always downloading a massive file for

00:08:46,170 --> 00:08:51,150
applications in the old pbi format all

00:08:49,170 --> 00:08:52,980
right not a problem for people with

00:08:51,150 --> 00:08:54,150
really fast internet access but a lot of

00:08:52,980 --> 00:08:57,240
our users are overseas

00:08:54,150 --> 00:09:00,870
in places with dial-up speeds and large

00:08:57,240 --> 00:09:02,790
file sizes are incredibly bad for them

00:09:00,870 --> 00:09:04,200
especially if they're facing like rate

00:09:02,790 --> 00:09:06,750
limits and stuff like that so with

00:09:04,200 --> 00:09:08,520
version 10 we've shifted things around a

00:09:06,750 --> 00:09:11,340
little bit we're using the new freebsd

00:09:08,520 --> 00:09:13,350
package ng system for packaging it's a

00:09:11,340 --> 00:09:15,840
standardized system it works on all of

00:09:13,350 --> 00:09:18,090
freebsd and they have a number of really

00:09:15,840 --> 00:09:20,220
good and efficient tools now for

00:09:18,090 --> 00:09:23,610
producing these packages on a mass level

00:09:20,220 --> 00:09:25,200
so we run our own packaging servers so

00:09:23,610 --> 00:09:27,210
we do the packaging and sign the

00:09:25,200 --> 00:09:29,340
packages and all of that for the pc-bsd

00:09:27,210 --> 00:09:32,790
project exclusively and we have our own

00:09:29,340 --> 00:09:35,160
package repository of the entire freebsd

00:09:32,790 --> 00:09:36,570
ports tree with our own special options

00:09:35,160 --> 00:09:38,700
which are probably different from the

00:09:36,570 --> 00:09:41,100
FreeBSD ports tree or the official

00:09:38,700 --> 00:09:43,140
FreeBSD package repository usually

00:09:41,100 --> 00:09:45,720
because we just like to turn on most

00:09:43,140 --> 00:09:47,850
everything since we're talking about end

00:09:45,720 --> 00:09:50,340
user applications you don't worry about

00:09:47,850 --> 00:09:52,560
oh I need this application but oh that

00:09:50,340 --> 00:09:57,990
bit wasn't flipped in some dependency so

00:09:52,560 --> 00:09:59,670
I can't use this graphic that's what

00:09:57,990 --> 00:10:01,440
often happens in the freebsd package

00:09:59,670 --> 00:10:03,360
repository and the pc-bsd package

00:10:01,440 --> 00:10:05,070
repository we just turn on a lot of the

00:10:03,360 --> 00:10:06,870
options by default so that everything

00:10:05,070 --> 00:10:12,120
has access to it at all times if it

00:10:06,870 --> 00:10:14,610
needs it what this gains us is one we

00:10:12,120 --> 00:10:16,860
have a really small file sizes now each

00:10:14,610 --> 00:10:19,110
package instead of being application and

00:10:16,860 --> 00:10:22,860
all its dependencies is now just the

00:10:19,110 --> 00:10:26,220
application so the Firefox pbi from 250

00:10:22,860 --> 00:10:29,040
megabytes now is a Firefox package of

00:10:26,220 --> 00:10:32,280
what 15 20 megabytes or something like

00:10:29,040 --> 00:10:34,260
that much smaller chunks but you now

00:10:32,280 --> 00:10:35,940
require an internet connection because

00:10:34,260 --> 00:10:38,070
you have to then after you get that

00:10:35,940 --> 00:10:40,020
package see what dependencies it needs

00:10:38,070 --> 00:10:42,510
and download whatever ones you don't

00:10:40,020 --> 00:10:44,490
already have installed on your system so

00:10:42,510 --> 00:10:46,770
it's it's another step it distributes it

00:10:44,490 --> 00:10:48,480
out but it means usually that you don't

00:10:46,770 --> 00:10:50,580
end up downloading as much as the

00:10:48,480 --> 00:10:51,900
original PB is because you might have a

00:10:50,580 --> 00:10:53,220
number of the dependencies already

00:10:51,900 --> 00:10:54,930
installed on your system you don't need

00:10:53,220 --> 00:10:57,420
to redownload or reinstall those ones

00:10:54,930 --> 00:10:58,680
they're already there so it just helps

00:10:57,420 --> 00:11:00,780
clean things up a little bit it's a

00:10:58,680 --> 00:11:02,970
little bit Messier in the back end but

00:11:00,780 --> 00:11:05,750
the end user experience is a lot cleaner

00:11:02,970 --> 00:11:05,750
and more streamlined

00:11:06,020 --> 00:11:10,470
now what about installation in the old

00:11:08,940 --> 00:11:12,089
pbi system not only were the

00:11:10,470 --> 00:11:14,970
applications and dependencies in a

00:11:12,089 --> 00:11:16,470
single file they were installed into a

00:11:14,970 --> 00:11:18,000
separate area on the system again

00:11:16,470 --> 00:11:24,149
keeping that distinction from

00:11:18,000 --> 00:11:25,920
applications to system now we have a few

00:11:24,149 --> 00:11:27,990
different methods we support a few of

00:11:25,920 --> 00:11:29,550
them first is sent a system integrator

00:11:27,990 --> 00:11:31,410
this is standard to what you would have

00:11:29,550 --> 00:11:34,470
on like your Linux or standard UNIX

00:11:31,410 --> 00:11:37,050
systems where I install application a it

00:11:34,470 --> 00:11:38,310
can see applications BCD you know

00:11:37,050 --> 00:11:42,149
everything else on the system they all

00:11:38,310 --> 00:11:44,250
coexist in the same soup that is that is

00:11:42,149 --> 00:11:47,480
the default method now for the new PBIS

00:11:44,250 --> 00:11:50,040
and the other one is also FreeBSD jails

00:11:47,480 --> 00:11:52,550
freebsd I'll talk more about FreeBSD

00:11:50,040 --> 00:11:55,950
jails later but they're basically

00:11:52,550 --> 00:11:57,839
containers that you can now install and

00:11:55,950 --> 00:11:59,610
run applications from they've been

00:11:57,839 --> 00:12:02,339
around in freebsd for a long long time

00:11:59,610 --> 00:12:05,610
but the app cafe can now manage and use

00:12:02,339 --> 00:12:08,070
them in a very very smart way and then

00:12:05,610 --> 00:12:12,450
other containers because it's an

00:12:08,070 --> 00:12:14,160
overarching a system now we can add

00:12:12,450 --> 00:12:15,660
multiple or different types of

00:12:14,160 --> 00:12:17,640
installation methods if we were going to

00:12:15,660 --> 00:12:20,040
reinstitute some other type of container

00:12:17,640 --> 00:12:22,380
we could do that easily without having

00:12:20,040 --> 00:12:24,480
to change the entire pbi system again it

00:12:22,380 --> 00:12:26,370
makes it a lot more pluggable so people

00:12:24,480 --> 00:12:29,550
can just say oh I want this application

00:12:26,370 --> 00:12:31,140
and I want to install it this way make

00:12:29,550 --> 00:12:35,060
it nice and simple as simple as possible

00:12:31,140 --> 00:12:37,670
for the end user a push button installer

00:12:35,060 --> 00:12:39,839
so here's just to summarize all the

00:12:37,670 --> 00:12:41,040
technical stuff that we just had to go

00:12:39,839 --> 00:12:43,980
over and then we'll get to the nice

00:12:41,040 --> 00:12:45,690
stuff that end user actually sees so in

00:12:43,980 --> 00:12:47,970
the old PBI system you can see kind of

00:12:45,690 --> 00:12:49,770
how it was graphically laid out you had

00:12:47,970 --> 00:12:51,839
the PBIS you have the systems you have

00:12:49,770 --> 00:12:53,670
the jails they were all independent of

00:12:51,839 --> 00:12:57,990
each other they all did not interact

00:12:53,670 --> 00:13:00,420
very well with each other and while they

00:12:57,990 --> 00:13:02,730
were all based on FreeBSD they quite

00:13:00,420 --> 00:13:04,740
often had a lot of duplication between

00:13:02,730 --> 00:13:06,390
them between different methods either

00:13:04,740 --> 00:13:08,130
packaging methods or installation

00:13:06,390 --> 00:13:09,959
methods or libraries that were being

00:13:08,130 --> 00:13:13,520
loaded into memory or whatnot there was

00:13:09,959 --> 00:13:16,620
often duplication with pbi version 10

00:13:13,520 --> 00:13:19,350
excuse me

00:13:16,620 --> 00:13:21,670
the pbi system is now an overarching

00:13:19,350 --> 00:13:24,190
methodology for the entire system it

00:13:21,670 --> 00:13:26,320
runs the jails it runs the system it

00:13:24,190 --> 00:13:28,360
runs other types of application

00:13:26,320 --> 00:13:30,730
installations so it helps to minimize

00:13:28,360 --> 00:13:33,180
all the duplication and streamline the

00:13:30,730 --> 00:13:39,760
process for anybody to use the system

00:13:33,180 --> 00:13:42,160
however they see fit all right now how

00:13:39,760 --> 00:13:44,740
does the user interact with that new pbi

00:13:42,160 --> 00:13:46,270
system PBIS with package ng is what

00:13:44,740 --> 00:13:47,880
we're calling them or internally we've

00:13:46,270 --> 00:13:50,110
referred to them as PB ing

00:13:47,880 --> 00:13:53,710
next-generation PB is because we're

00:13:50,110 --> 00:13:55,360
imaginative like that so here is the

00:13:53,710 --> 00:13:58,750
graphical interface that you get on

00:13:55,360 --> 00:14:01,810
pc-bsd it is called the app cafe it is

00:13:58,750 --> 00:14:04,839
the graphical interface for users to

00:14:01,810 --> 00:14:06,430
interact with it it allows simple access

00:14:04,839 --> 00:14:08,920
to different installation methods or

00:14:06,430 --> 00:14:11,170
locations let me see how well can you

00:14:08,920 --> 00:14:12,970
see there at the top of the screen shot

00:14:11,170 --> 00:14:16,990
how you have the system you have the

00:14:12,970 --> 00:14:18,670
jail options up there at the top system

00:14:16,990 --> 00:14:19,900
is selected by default and that would

00:14:18,670 --> 00:14:22,779
mean that you are going to be installing

00:14:19,900 --> 00:14:26,010
or you are looking at what is installed

00:14:22,779 --> 00:14:28,600
into the general system at large and

00:14:26,010 --> 00:14:30,070
then if you wanted to install into a

00:14:28,600 --> 00:14:32,380
jail you could just hit the little jail

00:14:30,070 --> 00:14:40,690
button and select whatever jail you

00:14:32,380 --> 00:14:42,970
needed no thank you so that's that's how

00:14:40,690 --> 00:14:44,560
it's easy to select what installation

00:14:42,970 --> 00:14:46,270
options you want when we add more

00:14:44,560 --> 00:14:48,010
installation options so you can just add

00:14:46,270 --> 00:14:49,870
more to the toolbar so just a couple

00:14:48,010 --> 00:14:52,300
more options you can select and choose

00:14:49,870 --> 00:14:54,550
whatever you want this is just the

00:14:52,300 --> 00:14:55,959
homepage I mean it's it's very generic

00:14:54,550 --> 00:14:57,430
but you know just some different

00:14:55,959 --> 00:14:59,500
applications that were highlighted these

00:14:57,430 --> 00:15:01,420
are completely randomized applications

00:14:59,500 --> 00:15:03,820
pulled out of the repository saying hey

00:15:01,420 --> 00:15:05,230
this might be useful for you and then at

00:15:03,820 --> 00:15:07,120
the bottom we have these are

00:15:05,230 --> 00:15:09,130
recommendations that the pc-bsd dev team

00:15:07,120 --> 00:15:11,260
recommend we use these on a regular

00:15:09,130 --> 00:15:14,040
basis they work really well these are

00:15:11,260 --> 00:15:17,620
the ones that we like for particular

00:15:14,040 --> 00:15:21,310
aspects and then some new applications

00:15:17,620 --> 00:15:24,700
and stuff on the right well if we keep

00:15:21,310 --> 00:15:27,820
going how do we manage them if you go to

00:15:24,700 --> 00:15:29,350
the installed tab you can easily see all

00:15:27,820 --> 00:15:29,649
the different applications that you have

00:15:29,350 --> 00:15:32,079
in

00:15:29,649 --> 00:15:34,089
stalled in this case again I'm looking

00:15:32,079 --> 00:15:36,389
at the general system so you can see I

00:15:34,089 --> 00:15:39,309
have Firefox there I have I have

00:15:36,389 --> 00:15:44,800
LibreOffice I have all sorts of stuff I

00:15:39,309 --> 00:15:47,350
can easily see select and remove options

00:15:44,800 --> 00:15:50,050
as well none of this is dependent upon

00:15:47,350 --> 00:15:52,179
the sisters required for the system

00:15:50,050 --> 00:15:54,100
these are all third-party things i can

00:15:52,179 --> 00:15:56,439
add remove at will without worrying

00:15:54,100 --> 00:15:59,279
about breaking my system or destroying

00:15:56,439 --> 00:16:01,660
system stability or anything like that

00:15:59,279 --> 00:16:03,459
so some of the options that you have

00:16:01,660 --> 00:16:05,889
here is one you can show just

00:16:03,459 --> 00:16:07,119
applications that's kind of what's on by

00:16:05,889 --> 00:16:08,499
default and that's what you're seeing

00:16:07,119 --> 00:16:12,369
here there are also a couple other

00:16:08,499 --> 00:16:14,499
options orphan packages these are what

00:16:12,369 --> 00:16:16,300
if you installed application a but some

00:16:14,499 --> 00:16:17,800
dependency got left behind which is just

00:16:16,300 --> 00:16:19,929
sitting there that nothing's using that

00:16:17,800 --> 00:16:21,459
would be an orphan so you can go through

00:16:19,929 --> 00:16:23,470
and filter those those should be getting

00:16:21,459 --> 00:16:25,389
removed automatically but just in case

00:16:23,470 --> 00:16:28,119
we give you the option to see if there's

00:16:25,389 --> 00:16:30,040
any around base packages that will show

00:16:28,119 --> 00:16:31,869
you other ones which are required by the

00:16:30,040 --> 00:16:34,209
base system they won't let you remove

00:16:31,869 --> 00:16:35,980
them but they will let you see all sorts

00:16:34,209 --> 00:16:37,959
of general of information about those

00:16:35,980 --> 00:16:39,819
based system packages like what version

00:16:37,959 --> 00:16:41,050
they are who they were developed by when

00:16:39,819 --> 00:16:44,910
they were installed you know stuff like

00:16:41,050 --> 00:16:51,189
that and then what we call raw packages

00:16:44,910 --> 00:16:54,069
PB is our package ng packages plus a lot

00:16:51,189 --> 00:16:55,420
of extra information so if it has that

00:16:54,069 --> 00:16:57,879
extra information is what we're

00:16:55,420 --> 00:16:59,470
referring to it as a PB I if it doesn't

00:16:57,879 --> 00:17:01,779
have that extra bit of information we

00:16:59,470 --> 00:17:05,079
refer to it as a raw package a raw

00:17:01,779 --> 00:17:06,880
package ng package for freebsd and you

00:17:05,079 --> 00:17:08,350
can trigger those as well that's where

00:17:06,880 --> 00:17:09,730
if you look at the bottom of the screen

00:17:08,350 --> 00:17:14,709
shot you'll see applications available

00:17:09,730 --> 00:17:16,870
what is it 2,175 total packages however

00:17:14,709 --> 00:17:20,289
is twenty-three thousand three hundred

00:17:16,870 --> 00:17:22,000
and fifty again pc-bsd tries to make

00:17:20,289 --> 00:17:24,309
sure the applications are the focus

00:17:22,000 --> 00:17:26,289
those are the ones that get PBIS may is

00:17:24,309 --> 00:17:28,480
so you can easily search and add and

00:17:26,289 --> 00:17:30,399
install whatever you're looking for well

00:17:28,480 --> 00:17:32,590
there's still all the other thousands

00:17:30,399 --> 00:17:34,659
upon thousands of packages which you

00:17:32,590 --> 00:17:36,370
could install for special uses like

00:17:34,659 --> 00:17:38,950
certain libraries or stuff that you

00:17:36,370 --> 00:17:41,110
might not want as an end user just

00:17:38,950 --> 00:17:42,970
installing you know a web browser but as

00:17:41,110 --> 00:17:44,559
a developer say you need a particular

00:17:42,970 --> 00:17:46,450
a library for something then you'd go

00:17:44,559 --> 00:17:48,940
into the raw package view and say I need

00:17:46,450 --> 00:17:50,919
lib whatever and then you could find it

00:17:48,940 --> 00:17:52,840
and install it that way just again

00:17:50,919 --> 00:17:55,570
helping to distinguish what's useful for

00:17:52,840 --> 00:17:57,760
the end user you know for mom and dad

00:17:55,570 --> 00:17:59,500
out back who need to install one thing

00:17:57,760 --> 00:18:01,419
they don't want to be able to see lib

00:17:59,500 --> 00:18:03,010
foo or whatever they don't want all

00:18:01,419 --> 00:18:05,610
their searches cluttered up by that they

00:18:03,010 --> 00:18:08,080
just want to see the applications a

00:18:05,610 --> 00:18:09,130
couple of the other apps actions you can

00:18:08,080 --> 00:18:11,380
do from here you can uninstall

00:18:09,130 --> 00:18:13,630
applications you can add and remove

00:18:11,380 --> 00:18:14,950
desktop shortcuts so if you want a

00:18:13,630 --> 00:18:16,390
shortcut to that application on the

00:18:14,950 --> 00:18:19,330
desktop you can do all that right from

00:18:16,390 --> 00:18:23,650
here and you can also lock an

00:18:19,330 --> 00:18:25,929
application say you have firefox 23 dot

00:18:23,650 --> 00:18:28,390
whatever it is and you really like it

00:18:25,929 --> 00:18:30,789
and you heard that version 24 dot

00:18:28,390 --> 00:18:33,280
whatever breaks something that you need

00:18:30,789 --> 00:18:34,809
well you can just come in here and lock

00:18:33,280 --> 00:18:37,630
the version so whenever you perform

00:18:34,809 --> 00:18:40,240
updates of your system it will never

00:18:37,630 --> 00:18:42,370
update Firefox that one is locked it

00:18:40,240 --> 00:18:43,990
will keep that that application at that

00:18:42,370 --> 00:18:46,570
particular version for the entire time

00:18:43,990 --> 00:18:48,730
so it lets you customize your system and

00:18:46,570 --> 00:18:53,980
make sure to keep particular older

00:18:48,730 --> 00:18:55,390
versions if you need it all right so

00:18:53,980 --> 00:18:57,460
that's all the installed tab well what

00:18:55,390 --> 00:18:59,200
about looking for apps there are

00:18:57,460 --> 00:19:01,530
thousands of apps available how do you

00:18:59,200 --> 00:19:03,580
go through and find them first option is

00:19:01,530 --> 00:19:05,380
simple you browse through the categories

00:19:03,580 --> 00:19:09,010
and see what's there there might be a

00:19:05,380 --> 00:19:11,500
lot there but at a glance we try to make

00:19:09,010 --> 00:19:13,510
this as easy as possible so you have

00:19:11,500 --> 00:19:14,950
your summaries of all the apps whenever

00:19:13,510 --> 00:19:17,320
you're browsing so you can easily see

00:19:14,950 --> 00:19:20,110
its name what kind of rating it has by

00:19:17,320 --> 00:19:21,429
the pc-bsd users is it recommend is it

00:19:20,110 --> 00:19:24,549
one of the ones recommended by the

00:19:21,429 --> 00:19:26,830
pc-bsd team is it currently installed

00:19:24,549 --> 00:19:28,450
what type of application is is it a

00:19:26,830 --> 00:19:30,549
graphical application is it a command

00:19:28,450 --> 00:19:33,070
line application is it a server you know

00:19:30,549 --> 00:19:35,320
utility it just trying to add all those

00:19:33,070 --> 00:19:38,140
filtering options so if you look at the

00:19:35,320 --> 00:19:40,169
screenshot for QT creator for instance

00:19:38,140 --> 00:19:43,390
you can see that one's got five stars

00:19:40,169 --> 00:19:46,150
the little red metal there means it's

00:19:43,390 --> 00:19:47,740
got a pc-bsd stamp of recommendation

00:19:46,150 --> 00:19:50,440
that is something that is recommended by

00:19:47,740 --> 00:19:52,539
the pc-bsd team the little white box

00:19:50,440 --> 00:19:54,220
means it's a graphical application and

00:19:52,539 --> 00:19:56,140
it's got a green check box it's already

00:19:54,220 --> 00:19:58,060
installed

00:19:56,140 --> 00:19:59,350
so at a glance I can see oh I don't need

00:19:58,060 --> 00:20:02,410
to click on that because I've already

00:19:59,350 --> 00:20:03,550
got it installed but I like it so what

00:20:02,410 --> 00:20:06,010
if I only want graphical applications

00:20:03,550 --> 00:20:07,720
well there are tons of filtering options

00:20:06,010 --> 00:20:10,330
at the very top there's what we call a

00:20:07,720 --> 00:20:12,070
browser view and you could say I only

00:20:10,330 --> 00:20:14,170
want to see graphical applications I

00:20:12,070 --> 00:20:17,350
only want to see text based applications

00:20:14,170 --> 00:20:19,270
I only want to see servers I only want

00:20:17,350 --> 00:20:22,120
to see you know other packages the raw

00:20:19,270 --> 00:20:23,800
packages and stuff like that so it makes

00:20:22,120 --> 00:20:25,660
we're trying to make it as simple as

00:20:23,800 --> 00:20:29,010
possible for people to go through these

00:20:25,660 --> 00:20:31,750
massive databases of applications and

00:20:29,010 --> 00:20:33,630
libraries that are available to find the

00:20:31,750 --> 00:20:35,890
particular one that you're looking for

00:20:33,630 --> 00:20:38,800
one of the other ways that we can do

00:20:35,890 --> 00:20:41,440
this is by searching if in the upper

00:20:38,800 --> 00:20:44,380
right corner of the browser we have a

00:20:41,440 --> 00:20:46,360
search option where you can search for a

00:20:44,380 --> 00:20:47,740
particular term it's actually a live

00:20:46,360 --> 00:20:50,620
search so as soon as you hit three

00:20:47,740 --> 00:20:52,810
characters or more it'll start searching

00:20:50,620 --> 00:20:54,250
if you stop typing for half a second and

00:20:52,810 --> 00:20:55,570
it'll do the search for you really

00:20:54,250 --> 00:20:58,540
quickly and it'll just keep it updated

00:20:55,570 --> 00:21:01,120
while you're typing and it searches by

00:20:58,540 --> 00:21:03,250
name so for instance say I think here i

00:21:01,120 --> 00:21:05,200
typed in desktop so the first thing it

00:21:03,250 --> 00:21:08,110
finds and lists as best matches are

00:21:05,200 --> 00:21:10,420
things with desktop in the name if there

00:21:08,110 --> 00:21:12,400
was an application just called desktop

00:21:10,420 --> 00:21:15,070
and that's it exactly desktop that would

00:21:12,400 --> 00:21:17,410
always be at the top of the list what I

00:21:15,070 --> 00:21:19,890
always use as an example is when I was

00:21:17,410 --> 00:21:23,170
in grad school I had a professor

00:21:19,890 --> 00:21:25,240
absolutely loved our if you have you

00:21:23,170 --> 00:21:28,000
ever you know about our it's a numerical

00:21:25,240 --> 00:21:29,500
sweet calculation sweet and stuff it's

00:21:28,000 --> 00:21:31,510
incredibly difficult to search for

00:21:29,500 --> 00:21:34,870
anywhere you go because it's one letter

00:21:31,510 --> 00:21:37,150
it's just our well in the app cafe if

00:21:34,870 --> 00:21:38,470
you just type in our and hit enter it

00:21:37,150 --> 00:21:40,450
might take a little bit longer because

00:21:38,470 --> 00:21:44,200
it's finding a whole lot more matches

00:21:40,450 --> 00:21:46,300
but the application are since it's an

00:21:44,200 --> 00:21:48,730
exact match of the name will always show

00:21:46,300 --> 00:21:50,500
up right at the top of the list it makes

00:21:48,730 --> 00:21:52,210
it very easy to find it if you know the

00:21:50,500 --> 00:21:55,390
name of the application you're looking

00:21:52,210 --> 00:21:57,820
for but say it's not in the name if it's

00:21:55,390 --> 00:21:59,620
in like the description or tags you know

00:21:57,820 --> 00:22:03,100
because we add additional tags to

00:21:59,620 --> 00:22:05,440
applications saying oh let's say hex

00:22:03,100 --> 00:22:08,320
chat it's an IRC client so we'll give it

00:22:05,440 --> 00:22:11,029
tags of IRC chat

00:22:08,320 --> 00:22:12,889
and you know what other other tags

00:22:11,029 --> 00:22:14,809
common search tags that people might

00:22:12,889 --> 00:22:17,359
look for to help make this application

00:22:14,809 --> 00:22:18,409
show up and then those will be listed in

00:22:17,359 --> 00:22:21,529
other results you can browse through

00:22:18,409 --> 00:22:24,320
those again again making it easy to see

00:22:21,529 --> 00:22:26,330
the applications as well as if it's

00:22:24,320 --> 00:22:28,249
installed as it recommended is it a good

00:22:26,330 --> 00:22:29,869
application just to have five stars you

00:22:28,249 --> 00:22:34,549
know things like that now all everything

00:22:29,869 --> 00:22:36,950
to make it easy for the user to use now

00:22:34,549 --> 00:22:39,919
what if you click on an application here

00:22:36,950 --> 00:22:41,239
I've got inkscape all right you have

00:22:39,919 --> 00:22:43,940
many options you have the big button

00:22:41,239 --> 00:22:46,099
that says install now it is a pbi you

00:22:43,940 --> 00:22:48,349
can hit one big red button well it's not

00:22:46,099 --> 00:22:50,539
red but you can hit one button to

00:22:48,349 --> 00:22:52,759
install the application onto your system

00:22:50,539 --> 00:22:54,409
and have it done in relatively little

00:22:52,759 --> 00:22:55,789
time it really depends on how fast your

00:22:54,409 --> 00:22:59,389
internet access is to download the

00:22:55,789 --> 00:23:01,309
necessary packages it needs and then you

00:22:59,389 --> 00:23:03,079
also have all sorts of stuff there it'll

00:23:01,309 --> 00:23:04,700
list the description of the application

00:23:03,079 --> 00:23:06,709
the full description if there are

00:23:04,700 --> 00:23:08,269
screenshots listed for it will open up

00:23:06,709 --> 00:23:11,239
that tab and say hey there's screenshots

00:23:08,269 --> 00:23:12,769
for it too or plugins if there are known

00:23:11,239 --> 00:23:14,479
plugins for this application it will

00:23:12,769 --> 00:23:18,259
give you links to all the other packages

00:23:14,479 --> 00:23:19,639
which act as plugins for this similar

00:23:18,259 --> 00:23:21,109
applications other ones that might be

00:23:19,639 --> 00:23:24,409
similar to this would be drawing

00:23:21,109 --> 00:23:26,239
applications like X paint or or you

00:23:24,409 --> 00:23:28,369
know things like that and then if there

00:23:26,239 --> 00:23:29,570
were any custom build options you won't

00:23:28,369 --> 00:23:31,820
be able to change them but you can at

00:23:29,570 --> 00:23:33,289
least see them from here so all those

00:23:31,820 --> 00:23:35,239
compilation options that I talked about

00:23:33,289 --> 00:23:36,859
earlier there static they were already

00:23:35,239 --> 00:23:38,450
compiled with a specific set of build

00:23:36,859 --> 00:23:41,299
options so at least you can see what it

00:23:38,450 --> 00:23:42,889
is for this particular application plus

00:23:41,299 --> 00:23:45,259
all the other things you know download

00:23:42,889 --> 00:23:46,879
size version stuff like that all the all

00:23:45,259 --> 00:23:49,969
the important stuff for the user and

00:23:46,879 --> 00:23:52,579
this is all before its installed what if

00:23:49,969 --> 00:23:54,859
it is installed then they look very

00:23:52,579 --> 00:23:57,799
similar but there's a number of other

00:23:54,859 --> 00:23:59,719
options available you'll see for one the

00:23:57,799 --> 00:24:01,639
install install button is grayed out cuz

00:23:59,719 --> 00:24:03,859
it's already installed but you gain a

00:24:01,639 --> 00:24:06,019
few other buttons one the ability for

00:24:03,859 --> 00:24:08,119
the app cafe to actually run that

00:24:06,019 --> 00:24:09,440
application you don't need desktop icons

00:24:08,119 --> 00:24:11,719
you don't need a special desktop

00:24:09,440 --> 00:24:13,009
environment or menu system you can just

00:24:11,719 --> 00:24:16,399
use the app cafe to launch your

00:24:13,009 --> 00:24:17,929
applications to you can contact your

00:24:16,399 --> 00:24:20,970
maintainer say you run into a problem

00:24:17,929 --> 00:24:22,830
with that particular application or that

00:24:20,970 --> 00:24:24,840
version of that application if there's a

00:24:22,830 --> 00:24:26,880
bug in it you can always send an email

00:24:24,840 --> 00:24:29,610
to the maintainer say hey i noticed this

00:24:26,880 --> 00:24:31,289
and in the maintainer that the app cafe

00:24:29,610 --> 00:24:33,659
generates it'll automatically list the

00:24:31,289 --> 00:24:35,880
stats of that pbi of that application

00:24:33,659 --> 00:24:37,470
for the maintainer so you don't have to

00:24:35,880 --> 00:24:40,080
manually remember oh yeah this was

00:24:37,470 --> 00:24:41,610
application one dot for three dot what

00:24:40,080 --> 00:24:43,350
you know you don't have to do that the

00:24:41,610 --> 00:24:45,510
PPI will add it all to the end of your

00:24:43,350 --> 00:24:48,120
email really quick when it generates

00:24:45,510 --> 00:24:49,679
that for you and then finally again

00:24:48,120 --> 00:24:51,690
another link to shortcuts if you want to

00:24:49,679 --> 00:24:54,419
install or remove desktop shortcuts for

00:24:51,690 --> 00:24:57,120
this again everything we can think of to

00:24:54,419 --> 00:24:59,640
make it easy for the user to use

00:24:57,120 --> 00:25:02,159
applications on a freebsd system and

00:24:59,640 --> 00:25:05,250
here again i showed showed an example of

00:25:02,159 --> 00:25:06,870
screenshots as well since i could so

00:25:05,250 --> 00:25:08,760
we've got a full screen shot there

00:25:06,870 --> 00:25:11,789
there's only one listed for inkscape

00:25:08,760 --> 00:25:12,900
right here or sorry this is for

00:25:11,789 --> 00:25:14,610
 here there's only one screenshot

00:25:12,900 --> 00:25:16,500
but if there were more the arrows would

00:25:14,610 --> 00:25:18,210
light up and you can cycle between them

00:25:16,500 --> 00:25:20,220
and if you actually hit the one over one

00:25:18,210 --> 00:25:21,929
button you can make it fullscreen if you

00:25:20,220 --> 00:25:23,850
want to if it's a little small for you

00:25:21,929 --> 00:25:26,130
you can always make it larger so you

00:25:23,850 --> 00:25:27,750
just see what it looks like again giving

00:25:26,130 --> 00:25:29,580
you all sorts of options before you

00:25:27,750 --> 00:25:31,320
install an application rather than

00:25:29,580 --> 00:25:37,890
requiring you to install it to see if

00:25:31,320 --> 00:25:39,720
you like it all right now I've talked a

00:25:37,890 --> 00:25:42,150
lot about the system stuff now I wanted

00:25:39,720 --> 00:25:45,720
to focus a little bit on the jails that

00:25:42,150 --> 00:25:48,299
I mentioned earlier freebsd jails have

00:25:45,720 --> 00:25:50,460
been around for quite a number of years

00:25:48,299 --> 00:25:54,809
what is it ten years thank you twelve

00:25:50,460 --> 00:25:56,159
years so they are basically well let's

00:25:54,809 --> 00:25:57,780
look at the tip this is the easiest way

00:25:56,159 --> 00:25:59,940
to think about it think of it as a full

00:25:57,780 --> 00:26:01,770
virtual machine but with such low

00:25:59,940 --> 00:26:05,190
overhead that you can run hundreds of

00:26:01,770 --> 00:26:06,600
them at the same time alright I believe

00:26:05,190 --> 00:26:08,309
there's something new and Linux called

00:26:06,600 --> 00:26:10,650
container some kind of containers or

00:26:08,309 --> 00:26:12,690
whatever it would be those are trying to

00:26:10,650 --> 00:26:13,980
clone the freebsd jails or copy the

00:26:12,690 --> 00:26:16,710
freebsd jails that's the best way to

00:26:13,980 --> 00:26:18,350
think about it but so what is it it's a

00:26:16,710 --> 00:26:21,900
self-contained system environment

00:26:18,350 --> 00:26:24,659
freebsd system environment it has its

00:26:21,900 --> 00:26:26,730
own independent route and users so if

00:26:24,659 --> 00:26:29,190
you log into a jail it can have a

00:26:26,730 --> 00:26:31,260
completely different root user than the

00:26:29,190 --> 00:26:33,899
root on the main system it is completely

00:26:31,260 --> 00:26:34,210
independent it is a completely secure

00:26:33,899 --> 00:26:36,400
and

00:26:34,210 --> 00:26:39,490
environment systems and processes and

00:26:36,400 --> 00:26:42,280
users that are within the jail cannot

00:26:39,490 --> 00:26:44,760
break out of the jail to see the main

00:26:42,280 --> 00:26:47,680
system they cannot get out whatsoever

00:26:44,760 --> 00:26:50,740
this is actually resulted in many people

00:26:47,680 --> 00:26:53,710
using freebsd specifically freebsd jails

00:26:50,740 --> 00:26:56,830
as honey pots they put a web server in

00:26:53,710 --> 00:26:59,260
na jale make it deliberately insecure in

00:26:56,830 --> 00:27:01,360
some way and then they sit back and they

00:26:59,260 --> 00:27:02,950
watch people as they hack into it to see

00:27:01,360 --> 00:27:04,690
what they're going after what they're

00:27:02,950 --> 00:27:06,730
going to break how they broke into it

00:27:04,690 --> 00:27:08,560
you know things like that because hey

00:27:06,730 --> 00:27:10,600
it's a jail I can just delete it

00:27:08,560 --> 00:27:12,310
recreate it roll it back you know it's

00:27:10,600 --> 00:27:17,290
it's it's throw away its is temporary

00:27:12,310 --> 00:27:19,210
and it also has a distinct IP and

00:27:17,290 --> 00:27:21,190
hostname to so it gets its own IP

00:27:19,210 --> 00:27:23,350
address it gets its own hostname it is

00:27:21,190 --> 00:27:25,000
not identified on the network as the

00:27:23,350 --> 00:27:27,220
exact same system as the host system

00:27:25,000 --> 00:27:28,750
either so again there are many many

00:27:27,220 --> 00:27:31,210
different things about jails which are

00:27:28,750 --> 00:27:33,130
very nice some of the big features about

00:27:31,210 --> 00:27:34,890
it though one it has an extremely low

00:27:33,130 --> 00:27:37,500
overhead as I mentioned you can run many

00:27:34,890 --> 00:27:40,000
hundreds of these on a decent system

00:27:37,500 --> 00:27:43,120
simultaneously you cannot say the same

00:27:40,000 --> 00:27:45,400
thing about VirtualBox VMs usually if I

00:27:43,120 --> 00:27:47,770
run one maybe two of those at the same

00:27:45,400 --> 00:27:51,400
time I'll start slowing my systems to a

00:27:47,770 --> 00:27:53,650
crawl or crashing it all right you can

00:27:51,400 --> 00:27:55,330
start and stop jails so you can either

00:27:53,650 --> 00:27:57,550
have it running with all of its services

00:27:55,330 --> 00:27:59,200
and stuff or you can have it be stopped

00:27:57,550 --> 00:28:02,620
and just be a collection of files on

00:27:59,200 --> 00:28:04,570
your main system and finally invisible

00:28:02,620 --> 00:28:06,130
oversight again with the honeypot aspect

00:28:04,570 --> 00:28:07,510
you don't need to be logged into the

00:28:06,130 --> 00:28:10,360
jail in order to see what's going on

00:28:07,510 --> 00:28:13,660
with it on a freebsd system if you're an

00:28:10,360 --> 00:28:15,430
access your user on the main system you

00:28:13,660 --> 00:28:17,380
can actually look into the jail and

00:28:15,430 --> 00:28:18,730
visibly without peep users inside the

00:28:17,380 --> 00:28:20,860
jail knowing that you're viewing them

00:28:18,730 --> 00:28:22,780
this again makes it useful for things

00:28:20,860 --> 00:28:26,700
like network security analysis and

00:28:22,780 --> 00:28:29,470
threat detection and stuff like that so

00:28:26,700 --> 00:28:31,720
pc-bsd provides a utility called the

00:28:29,470 --> 00:28:35,080
warden in order to help manage and

00:28:31,720 --> 00:28:40,510
facilitate jails let's see what we did

00:28:35,080 --> 00:28:43,180
there so what we can do is again it has

00:28:40,510 --> 00:28:44,920
all the standard freebsd jails but it

00:28:43,180 --> 00:28:46,029
adds a few a nice little benefits to it

00:28:44,920 --> 00:28:47,889
as well one of them

00:28:46,029 --> 00:28:51,099
being the ability to import and export

00:28:47,889 --> 00:28:53,379
jails so if you set up a jail that you

00:28:51,099 --> 00:28:56,919
really really like it's got everything

00:28:53,379 --> 00:28:59,169
that you need you can stop it export it

00:28:56,919 --> 00:29:01,710
which turns it into a single file dot

00:28:59,169 --> 00:29:04,239
with a dot WD an extension for warden

00:29:01,710 --> 00:29:06,549
take that file throw it on a USB stick

00:29:04,239 --> 00:29:11,049
and move to some other systems running

00:29:06,549 --> 00:29:13,210
freebsd or pc-bsd specifically and then

00:29:11,049 --> 00:29:15,070
just say Oh warden I want you to import

00:29:13,210 --> 00:29:16,779
that and you'll have a brand-new jail on

00:29:15,070 --> 00:29:19,899
that system completely configured as you

00:29:16,779 --> 00:29:22,929
had it's just identical so if you've got

00:29:19,899 --> 00:29:25,179
a commercial system where you've got say

00:29:22,929 --> 00:29:28,029
50 different systems all needing to run

00:29:25,179 --> 00:29:29,979
identical jails you can just set up one

00:29:28,029 --> 00:29:31,779
template put it on a USB stick and there

00:29:29,979 --> 00:29:33,489
you go there's your copy for every

00:29:31,779 --> 00:29:36,729
single other system very easy to

00:29:33,489 --> 00:29:38,679
duplicate very easy to send and get set

00:29:36,729 --> 00:29:41,669
up on all your other systems and it's

00:29:38,679 --> 00:29:45,249
very nice jail management utility in

00:29:41,669 --> 00:29:48,549
addition warden has ZFS integration so

00:29:45,249 --> 00:29:51,929
that went not only do you have jails you

00:29:48,549 --> 00:29:55,809
have jails on ZFS you can schedule or

00:29:51,929 --> 00:29:58,599
manually take ZFS snapshots of a jail

00:29:55,809 --> 00:30:00,700
and then if for instance let's say it's

00:29:58,599 --> 00:30:02,559
a web server that does get hacked it

00:30:00,700 --> 00:30:04,690
does get destroyed somebody got in there

00:30:02,559 --> 00:30:06,909
and two faced your favorite dogs website

00:30:04,690 --> 00:30:09,099
or something like that you could just

00:30:06,909 --> 00:30:11,109
say oh I don't like that but I don't

00:30:09,099 --> 00:30:13,299
want to take four hours trying to track

00:30:11,109 --> 00:30:15,039
down every single change that they made

00:30:13,299 --> 00:30:17,429
in there I'm just going to take the

00:30:15,039 --> 00:30:20,019
entire jail roll it back to yesterday

00:30:17,429 --> 00:30:21,369
there we go problem solved and then

00:30:20,019 --> 00:30:22,899
maybe I'll go in there and you know

00:30:21,369 --> 00:30:25,659
change whatever it was that they use to

00:30:22,899 --> 00:30:29,399
hack into it but it gives you a very

00:30:25,659 --> 00:30:31,809
easy method to roll back and fix jails

00:30:29,399 --> 00:30:34,269
whenever you would need and you can set

00:30:31,809 --> 00:30:36,549
up snapshot schedules however you want

00:30:34,269 --> 00:30:38,679
on a daily regular basis or just

00:30:36,549 --> 00:30:39,909
manually whenever you say okay I think

00:30:38,679 --> 00:30:42,719
it now would be a good time for a

00:30:39,909 --> 00:30:45,549
snapshot it's completely up to you and

00:30:42,719 --> 00:30:47,799
finally the warden had gives you a few

00:30:45,549 --> 00:30:50,320
different types of jails as well you

00:30:47,799 --> 00:30:53,529
have the traditional jail which is pure

00:30:50,320 --> 00:30:56,739
freebsd extremely secure but really only

00:30:53,529 --> 00:30:59,900
works with text based applications with

00:30:56,739 --> 00:31:03,420
command line applications

00:30:59,900 --> 00:31:04,890
pc-bsd also adds ports jails this is a

00:31:03,420 --> 00:31:06,720
regular jail but it is designed

00:31:04,890 --> 00:31:09,420
specifically for running graphical

00:31:06,720 --> 00:31:11,280
applications it is a little less secure

00:31:09,420 --> 00:31:14,190
than the traditional jail because it

00:31:11,280 --> 00:31:16,710
does let the jail get out a little bit

00:31:14,190 --> 00:31:20,370
to talk to the graphical server on your

00:31:16,710 --> 00:31:24,600
main system to display graphics it also

00:31:20,370 --> 00:31:26,370
makes no lo FS of the user's home

00:31:24,600 --> 00:31:29,850
directory into it so if you're going to

00:31:26,370 --> 00:31:31,470
run say a web browser in a ports jail

00:31:29,850 --> 00:31:33,390
you want to make sure that it can see

00:31:31,470 --> 00:31:36,240
your home directory so that you can save

00:31:33,390 --> 00:31:38,520
files to my downloads or things like

00:31:36,240 --> 00:31:40,380
that so you still have that layer of

00:31:38,520 --> 00:31:42,570
compatibility between your system and

00:31:40,380 --> 00:31:46,110
graphical applications while keeping

00:31:42,570 --> 00:31:47,940
them separate and then finally there's

00:31:46,110 --> 00:31:51,110
Linux jails this is an experimental

00:31:47,940 --> 00:31:55,350
feature but it's running Linux on

00:31:51,110 --> 00:31:57,720
freebsd with the freebsd kernel and in

00:31:55,350 --> 00:32:00,350
the few tests that we've done with

00:31:57,720 --> 00:32:02,790
installing i believe it as gen 2 and

00:32:00,350 --> 00:32:04,950
there's one other script we have to

00:32:02,790 --> 00:32:07,830
install linux distro in there it

00:32:04,950 --> 00:32:09,690
actually works quite well you'd be

00:32:07,830 --> 00:32:11,970
impressed freebsd for those of you that

00:32:09,690 --> 00:32:15,480
don't know has a linux compatibility

00:32:11,970 --> 00:32:18,900
layer built in the lets it run linux

00:32:15,480 --> 00:32:20,880
binaries pretty much out of box as long

00:32:18,900 --> 00:32:22,380
as it adheres to you know whatever layer

00:32:20,880 --> 00:32:25,590
of compatibility you're talking about

00:32:22,380 --> 00:32:27,150
Fedora 10 is for dork or 10 is the

00:32:25,590 --> 00:32:32,430
default at the moment they're working on

00:32:27,150 --> 00:32:36,810
a centos 6 compatibility as well so

00:32:32,430 --> 00:32:39,690
again options pc-bsd via the warden

00:32:36,810 --> 00:32:43,050
gives you options for jails in addition

00:32:39,690 --> 00:32:45,240
to the standard tried and true freebsd

00:32:43,050 --> 00:32:49,560
jail system that's been around for many

00:32:45,240 --> 00:32:53,700
many years so what how does the app cafe

00:32:49,560 --> 00:32:55,920
use them app cafe just has a couple

00:32:53,700 --> 00:32:57,660
notes about jails one the jail's has to

00:32:55,920 --> 00:32:59,580
be running for the app cafe to be able

00:32:57,660 --> 00:33:01,050
to see it otherwise it's just a

00:32:59,580 --> 00:33:03,840
collection of files on the system and it

00:33:01,050 --> 00:33:05,790
doesn't know it's there so you can tell

00:33:03,840 --> 00:33:07,560
the warden to say oh every time I start

00:33:05,790 --> 00:33:10,200
up my system I want you to start jails

00:33:07,560 --> 00:33:11,360
XYZ that that's easy so just make sure

00:33:10,200 --> 00:33:36,080
that there

00:33:11,360 --> 00:33:37,520
running okay question yes the the

00:33:36,080 --> 00:33:39,770
question was whether you can get as do

00:33:37,520 --> 00:33:42,710
ZFS send and receive on the jail's as

00:33:39,770 --> 00:33:44,870
well and I believe you can yes and that

00:33:42,710 --> 00:33:47,750
is actually ZFS send and receive is the

00:33:44,870 --> 00:33:50,150
way that pc-bsd uses four replications

00:33:47,750 --> 00:33:51,830
for data backups and stuff like that so

00:33:50,150 --> 00:33:54,590
you might not want to use it with the

00:33:51,830 --> 00:33:57,080
jail's itself although you could if you

00:33:54,590 --> 00:33:59,419
do it manually we have a utility called

00:33:57,080 --> 00:34:04,720
life preserver in pc-bsd that does all

00:33:59,419 --> 00:34:09,770
sorts of this for you but yes you could

00:34:04,720 --> 00:34:13,100
all right here we go f cafe jails this

00:34:09,770 --> 00:34:14,480
is the big big thing red flag warning

00:34:13,100 --> 00:34:16,159
that you have to know about whenever

00:34:14,480 --> 00:34:19,129
you're managing jails from within the

00:34:16,159 --> 00:34:22,700
app cafe if you install an application

00:34:19,129 --> 00:34:25,480
into a jail with the app cafe it will

00:34:22,700 --> 00:34:28,340
change the package repository

00:34:25,480 --> 00:34:32,690
configuration in the jail to match that

00:34:28,340 --> 00:34:34,820
of the main system the gap cafe is using

00:34:32,690 --> 00:34:36,830
the repo configuration on the main

00:34:34,820 --> 00:34:38,950
system for everything to how to read the

00:34:36,830 --> 00:34:41,510
database what applications are available

00:34:38,950 --> 00:34:43,550
everything like that so in order to

00:34:41,510 --> 00:34:44,960
install things into the jail as well it

00:34:43,550 --> 00:34:47,210
needs to make sure that the jail sees

00:34:44,960 --> 00:34:49,159
the same thing with the app cafe see so

00:34:47,210 --> 00:34:51,230
it will synchronize those two package

00:34:49,159 --> 00:34:53,659
configurations that's kind of a big red

00:34:51,230 --> 00:34:55,369
flag warning so if you have a special

00:34:53,659 --> 00:34:57,830
jail it points to a different package

00:34:55,369 --> 00:34:59,720
repository somewhere in Australia or

00:34:57,830 --> 00:35:01,280
whatever you don't want to use the app

00:34:59,720 --> 00:35:04,750
cafe to install things into their

00:35:01,280 --> 00:35:07,910
however you can update those jails

00:35:04,750 --> 00:35:11,119
safely without touching the existing

00:35:07,910 --> 00:35:12,650
package repository so you can open up

00:35:11,119 --> 00:35:14,119
the app cafe and at the top of the

00:35:12,650 --> 00:35:15,440
screen you'll say hey updates are

00:35:14,119 --> 00:35:16,850
available you can just click the button

00:35:15,440 --> 00:35:19,880
and it'll update everything for you and

00:35:16,850 --> 00:35:21,950
before doing any update on a pc bsd

00:35:19,880 --> 00:35:23,810
system it will actually create a boot

00:35:21,950 --> 00:35:24,490
environment for you as well so if

00:35:23,810 --> 00:35:26,910
anything

00:35:24,490 --> 00:35:29,590
goes wrong with that update if

00:35:26,910 --> 00:35:32,110
application x became completely broken

00:35:29,590 --> 00:35:35,920
and that was essential for my workflow

00:35:32,110 --> 00:35:37,900
at company why all you have to do is

00:35:35,920 --> 00:35:40,180
restart your computer and say I want to

00:35:37,900 --> 00:35:42,010
go to the previous boot environment and

00:35:40,180 --> 00:35:43,810
you're back to your system the way it

00:35:42,010 --> 00:35:47,350
was five minutes before the update or

00:35:43,810 --> 00:35:50,290
whenever it was makes it very nice and

00:35:47,350 --> 00:35:52,210
simple and safe to perform updates of

00:35:50,290 --> 00:35:53,800
your pc-bsd systems without worrying

00:35:52,210 --> 00:35:59,050
about losing your weekend because

00:35:53,800 --> 00:36:01,270
applica map lakay shin broke and you can

00:35:59,050 --> 00:36:02,790
do jail updates not just on the main

00:36:01,270 --> 00:36:07,119
system but also in each of the jails

00:36:02,790 --> 00:36:08,500
through here as well alright so here's

00:36:07,119 --> 00:36:09,790
just a summary of some of the

00:36:08,500 --> 00:36:11,860
improvements and some of the new

00:36:09,790 --> 00:36:15,040
features that the new system with the

00:36:11,860 --> 00:36:18,790
app cafe brings to the table for pc-bsd

00:36:15,040 --> 00:36:20,560
systems one stability you no longer have

00:36:18,790 --> 00:36:23,260
applications installed and running their

00:36:20,560 --> 00:36:25,060
own custom local base when there might

00:36:23,260 --> 00:36:27,220
be hard-coded things within the

00:36:25,060 --> 00:36:28,720
application expecting user local and

00:36:27,220 --> 00:36:31,330
causing all sorts of system and

00:36:28,720 --> 00:36:32,770
stability and just general messiness

00:36:31,330 --> 00:36:34,960
that was one of the main things

00:36:32,770 --> 00:36:36,790
preventing us from getting above a few

00:36:34,960 --> 00:36:39,130
hundred applications in the old pbi

00:36:36,790 --> 00:36:42,070
system because so many of them have

00:36:39,130 --> 00:36:43,900
hard-coded links to specific areas of

00:36:42,070 --> 00:36:46,660
the filesystem assuming they're going to

00:36:43,900 --> 00:36:51,910
be installed in particular ways that we

00:36:46,660 --> 00:36:55,230
were not doing second one simplicity one

00:36:51,910 --> 00:36:58,930
system to manage the entire entire

00:36:55,230 --> 00:37:00,730
package application management no more

00:36:58,930 --> 00:37:02,410
worrying about the app cafe here the

00:37:00,730 --> 00:37:04,240
system package manager here the system

00:37:02,410 --> 00:37:05,440
updater over here and all you know

00:37:04,240 --> 00:37:06,880
figuring out how all these tools

00:37:05,440 --> 00:37:08,440
interact with each other you just have

00:37:06,880 --> 00:37:10,930
one place to go for everything on the

00:37:08,440 --> 00:37:13,119
system and then it adheres more to

00:37:10,930 --> 00:37:17,440
standards to its using the underlying

00:37:13,119 --> 00:37:19,660
FreeBSD package ng system so whenever

00:37:17,440 --> 00:37:22,600
package ng gets updated with some brand

00:37:19,660 --> 00:37:26,710
new snazzy feature hey we got it too

00:37:22,600 --> 00:37:28,720
it's all pulled in at the same time so

00:37:26,710 --> 00:37:30,070
some of the new features one I mentioned

00:37:28,720 --> 00:37:31,690
this before support for multiple

00:37:30,070 --> 00:37:33,880
installation methods you're no longer

00:37:31,690 --> 00:37:35,920
forced to assume that every single

00:37:33,880 --> 00:37:37,840
application is installed into a separate

00:37:35,920 --> 00:37:40,840
container like with the old PBIS

00:37:37,840 --> 00:37:44,710
now it will behave in a more traditional

00:37:40,840 --> 00:37:47,260
UNIX fashion of the system slush as i

00:37:44,710 --> 00:37:49,420
like to call it that is the default if

00:37:47,260 --> 00:37:51,280
you want to have containers install it

00:37:49,420 --> 00:37:53,050
into a jail install it into a port jail

00:37:51,280 --> 00:37:55,120
not only will you get better security

00:37:53,050 --> 00:37:58,140
and better reliability of the

00:37:55,120 --> 00:38:00,970
application but you're also deliberately

00:37:58,140 --> 00:38:03,700
knowing that it will not be integrated

00:38:00,970 --> 00:38:05,890
into the base system like you know

00:38:03,700 --> 00:38:09,520
something installed the other way it is

00:38:05,890 --> 00:38:11,740
kept separate application plugins

00:38:09,520 --> 00:38:13,330
support before with that epic single

00:38:11,740 --> 00:38:15,790
file you couldn't add additional

00:38:13,330 --> 00:38:18,280
packages and plugins to them because it

00:38:15,790 --> 00:38:19,960
was a standalone file you couldn't add

00:38:18,280 --> 00:38:23,080
to it you couldn't remove from it it was

00:38:19,960 --> 00:38:25,840
self contained now you can actually say

00:38:23,080 --> 00:38:27,430
oh I've got Ruby here but I need a ruby

00:38:25,840 --> 00:38:28,930
module well now you can just go install

00:38:27,430 --> 00:38:31,540
the module instead of having to rebuild

00:38:28,930 --> 00:38:36,010
the entire pbi oh and throw that module

00:38:31,540 --> 00:38:38,050
into version locking if you want to keep

00:38:36,010 --> 00:38:40,270
old versions and then all sorts of

00:38:38,050 --> 00:38:43,360
application info that is not available

00:38:40,270 --> 00:38:46,540
on general freebsd packages ratings tip

00:38:43,360 --> 00:38:49,270
user tips screenshots all sorts of stuff

00:38:46,540 --> 00:38:50,890
like that so it's just just some of the

00:38:49,270 --> 00:38:52,600
new features and improvements that come

00:38:50,890 --> 00:38:55,870
with the new pbi system and why we are

00:38:52,600 --> 00:38:58,120
so excited here at the pc-bsd team to be

00:38:55,870 --> 00:39:02,640
able to do this and make a much more

00:38:58,120 --> 00:39:02,640
reliable much easier system to manage

00:39:03,870 --> 00:39:08,290
what if you want to get involved well

00:39:06,490 --> 00:39:11,200
there's a couple ways for that say you

00:39:08,290 --> 00:39:13,840
see an icon that's wrong for an

00:39:11,200 --> 00:39:15,970
application or something hey all of our

00:39:13,840 --> 00:39:17,890
modules the information the extra

00:39:15,970 --> 00:39:19,840
information for an application it's

00:39:17,890 --> 00:39:21,640
available on our github page you can

00:39:19,840 --> 00:39:23,800
just go there and say oh make a change

00:39:21,640 --> 00:39:25,150
submit it to us and we'll see ok let's

00:39:23,800 --> 00:39:26,590
look at that Oh yep that looks good and

00:39:25,150 --> 00:39:28,420
will apply it and it'll go out you know

00:39:26,590 --> 00:39:32,200
the next time the package packages get

00:39:28,420 --> 00:39:35,350
built so lets you very easily make

00:39:32,200 --> 00:39:37,840
changes and submit and do help stuff

00:39:35,350 --> 00:39:40,660
without ever having to get out of a web

00:39:37,840 --> 00:39:42,370
browser everything on github you can

00:39:40,660 --> 00:39:45,010
actually do in there in text editor or

00:39:42,370 --> 00:39:46,840
in what in page editor and then what if

00:39:45,010 --> 00:39:48,790
the app cafe is missing an application

00:39:46,840 --> 00:39:50,440
that you particularly want well add it

00:39:48,790 --> 00:39:51,400
to the freebsd forestry we build

00:39:50,440 --> 00:39:53,319
everything from the port

00:39:51,400 --> 00:39:55,869
tree so if you add it there we'll get it

00:39:53,319 --> 00:39:57,730
and then maybe we'll just throw together

00:39:55,869 --> 00:39:59,470
a module to give it all that nice extra

00:39:57,730 --> 00:40:02,890
little information an icon a screenshot

00:39:59,470 --> 00:40:05,109
you know all the dice cities but those

00:40:02,890 --> 00:40:07,630
are very easy ways to get involved in

00:40:05,109 --> 00:40:12,329
system application distribution for

00:40:07,630 --> 00:40:25,660
everybody no do you have any questions

00:40:12,329 --> 00:40:28,299
yes we are actually running package

00:40:25,660 --> 00:40:31,869
commands within wrappers to do all the

00:40:28,299 --> 00:40:34,240
other things and keep package ng sane we

00:40:31,869 --> 00:40:36,250
have actually been one of the earliest

00:40:34,240 --> 00:40:38,289
adopters of package ng and have been

00:40:36,250 --> 00:40:40,180
doing most of the bug testing for it

00:40:38,289 --> 00:40:42,099
when it was in its infancy before it hit

00:40:40,180 --> 00:40:44,230
the main freebsd ports tree and we work

00:40:42,099 --> 00:40:47,170
very closely with bapt the guy who

00:40:44,230 --> 00:40:50,160
developed package ng to keep things sane

00:40:47,170 --> 00:40:52,539
and some of the things that we do is

00:40:50,160 --> 00:40:54,369
making sure that it doesn't delete

00:40:52,539 --> 00:40:56,260
something required by the base system

00:40:54,369 --> 00:40:58,450
we've seen that issue before and it

00:40:56,260 --> 00:41:01,450
causes an absolute mess so we have all

00:40:58,450 --> 00:41:03,940
sorts of sanity checks and safeguards in

00:41:01,450 --> 00:41:07,260
place to make sure that again using

00:41:03,940 --> 00:41:10,000
package through the app cafe is safe

00:41:07,260 --> 00:41:16,720
that's just one of the things but at its

00:41:10,000 --> 00:41:18,880
core though we are running package any

00:41:16,720 --> 00:41:30,369
other questions first okay I'll go back

00:41:18,880 --> 00:41:33,160
to you okay the ratings are actually

00:41:30,369 --> 00:41:35,349
done through the pc-bsd wiki if you

00:41:33,160 --> 00:41:37,210
click on those pages in the App cafe it

00:41:35,349 --> 00:41:39,970
will simply launch your web your

00:41:37,210 --> 00:41:41,829
favorite web browser to our wiki URL so

00:41:39,970 --> 00:41:44,200
if you create an account on the wiki you

00:41:41,829 --> 00:41:46,779
can rate applications you can write down

00:41:44,200 --> 00:41:49,480
tips for things and it will all be right

00:41:46,779 --> 00:41:52,329
there on our wiki what our build server

00:41:49,480 --> 00:41:54,750
does then is it goes through and it

00:41:52,329 --> 00:41:57,190
pulls specific things from the wiki

00:41:54,750 --> 00:41:59,650
regarding ratings and then compiles them

00:41:57,190 --> 00:42:03,569
all into collective numbers and stuff

00:41:59,650 --> 00:42:03,569
for the app cafe to be able to use later

00:42:07,140 --> 00:42:12,160
you can access it directly from the wiki

00:42:09,640 --> 00:42:13,539
as well yeah this is just an interface

00:42:12,160 --> 00:42:15,670
to send you to the wiki and saying hey

00:42:13,539 --> 00:42:17,380
you can do all that over here but the

00:42:15,670 --> 00:42:19,180
information of what was on the wiki at

00:42:17,380 --> 00:42:23,970
the time that the packages were made can

00:42:19,180 --> 00:42:23,970
be seen in the App cafe yes sir

00:42:35,019 --> 00:42:57,799
automation of what installing packages

00:42:37,900 --> 00:43:01,069
removing packages yeah it's exactly the

00:42:57,799 --> 00:43:03,319
same actually if you want to install a

00:43:01,069 --> 00:43:05,299
ppi it simply does a little bit more in

00:43:03,319 --> 00:43:06,799
the back end it keeps track of all those

00:43:05,299 --> 00:43:08,059
dependencies checks against what's

00:43:06,799 --> 00:43:11,529
already installed in the system and

00:43:08,059 --> 00:43:11,529
installs any of them that are missing

00:43:24,999 --> 00:43:28,940
yeah there was the version locking

00:43:27,229 --> 00:43:31,039
method if there's something that you

00:43:28,940 --> 00:43:33,079
particularly want on the system that you

00:43:31,039 --> 00:43:35,029
want locked at a particular version so

00:43:33,079 --> 00:43:37,309
that other stuff can change but that one

00:43:35,029 --> 00:43:39,229
thing cannot you can go ahead and lock

00:43:37,309 --> 00:43:40,609
it and you can do that with tons of them

00:43:39,229 --> 00:43:42,589
I haven't tried to see what will happen

00:43:40,609 --> 00:43:44,059
if you go through and lock every single

00:43:42,589 --> 00:43:49,880
application on your system and then try

00:43:44,059 --> 00:43:51,680
to update but I mean we'll see I assume

00:43:49,880 --> 00:43:55,819
it worked just fine because the base

00:43:51,680 --> 00:43:57,440
system will always keep upgrading one

00:43:55,819 --> 00:43:59,299
thing I did neglect the dimension in the

00:43:57,440 --> 00:44:00,979
app cafe which is actually a holdover

00:43:59,299 --> 00:44:04,700
from the old days which is still valid

00:44:00,979 --> 00:44:07,130
is that there was the ability to export

00:44:04,700 --> 00:44:08,809
a list of all the current pbis you have

00:44:07,130 --> 00:44:11,119
installed on your system and then just

00:44:08,809 --> 00:44:13,279
take that list and import it on another

00:44:11,119 --> 00:44:15,200
pc-bsd system and so it will

00:44:13,279 --> 00:44:18,319
automatically cue up the installation of

00:44:15,200 --> 00:44:21,170
all the applications missing on that

00:44:18,319 --> 00:44:23,269
system that still exists in this you can

00:44:21,170 --> 00:44:25,729
still sa get your system set up exactly

00:44:23,269 --> 00:44:27,319
as you want export that list of

00:44:25,729 --> 00:44:29,690
applications and then just take that

00:44:27,319 --> 00:44:31,789
simple text file import it into the app

00:44:29,690 --> 00:44:34,609
cafe on another system and it will say

00:44:31,789 --> 00:44:37,819
ok you want applications you know a

00:44:34,609 --> 00:44:38,960
through z I see that you have five of

00:44:37,819 --> 00:44:40,400
these already installed so I'll skip

00:44:38,960 --> 00:44:41,779
those but I'll queue up and start

00:44:40,400 --> 00:44:43,460
installing the rest of them for you and

00:44:41,779 --> 00:44:45,349
it'll all be seen there I'll say pending

00:44:43,460 --> 00:44:46,460
pending installation pending

00:44:45,349 --> 00:44:48,050
installation then I'll go

00:44:46,460 --> 00:44:49,940
their own install a mall for you so that

00:44:48,050 --> 00:44:53,570
all can be automated just through that

00:44:49,940 --> 00:44:56,119
mechanism if you like similarly the pbi

00:44:53,570 --> 00:44:58,130
underscore add command line utility that

00:44:56,119 --> 00:44:59,839
we have had in the past is still there

00:44:58,130 --> 00:45:01,430
in the back end if you want to run it

00:44:59,839 --> 00:45:04,070
from command line and script your own

00:45:01,430 --> 00:45:06,320
PDI installations you can do that the

00:45:04,070 --> 00:45:24,320
interface to the pbi system via command

00:45:06,320 --> 00:45:27,920
line is exactly the same yes sir binary

00:45:24,320 --> 00:45:31,190
files for freebsd are locked only to the

00:45:27,920 --> 00:45:34,820
particular major version of freebsd so

00:45:31,190 --> 00:45:38,119
binary files compiled on FreeBSD 10 Oh

00:45:34,820 --> 00:45:41,589
we'll work on FreeBSD 10 dot 1 and 10

00:45:38,119 --> 00:45:44,599
dot 2 and 10 dot 3 and n eat n dot X

00:45:41,589 --> 00:45:47,089
FreeBSD s there are it's only as soon as

00:45:44,599 --> 00:45:49,820
you go to a different major version

00:45:47,089 --> 00:45:52,880
number like FreeBSD nine or FreeBSD 11

00:45:49,820 --> 00:45:54,500
that those will no longer be compatible

00:45:52,880 --> 00:45:57,530
without installing some kind of special

00:45:54,500 --> 00:45:59,720
compatibility layer similarly if you go

00:45:57,530 --> 00:46:02,330
to architecture there are obviously

00:45:59,720 --> 00:46:03,980
32-bit 64-bit I think there's a few arm

00:46:02,330 --> 00:46:05,750
architectures and there's a bunch of

00:46:03,980 --> 00:46:08,570
other architectures that FreeBSD also

00:46:05,750 --> 00:46:10,940
supports as well pc-bsd is 64-bit

00:46:08,570 --> 00:46:14,960
exclusive we don't build anything that's

00:46:10,940 --> 00:46:17,570
not 64 bit but the 64-bit systems have

00:46:14,960 --> 00:46:20,660
complete compatibility for 32-bit

00:46:17,570 --> 00:46:22,940
applications as well so if you've

00:46:20,660 --> 00:46:25,339
compiled a 32-bit buying it FreeBSD

00:46:22,940 --> 00:46:31,849
binary for freebsd 10 it will run on a

00:46:25,339 --> 00:46:34,359
64-bit FreeBSD 10 no problem any other

00:46:31,849 --> 00:46:34,359
questions

00:46:38,280 --> 00:46:46,380
alright going once going twice thank you

00:46:44,400 --> 00:46:48,690
very much for coming and I hope you have

00:46:46,380 --> 00:46:51,450
strop by the booth later we have tons of

00:46:48,690 --> 00:46:52,980
dvds of pc-bsd available as well as

00:46:51,450 --> 00:46:55,470
FreeNAS and we'll take your questions

00:46:52,980 --> 00:46:57,560
there and answer anything we can thank

00:46:55,470 --> 00:46:57,560
you

00:47:14,280 --> 00:47:16,340
you

00:47:36,230 --> 00:47:40,500
your customers rely on your website or

00:47:39,000 --> 00:47:42,900
application if it's slower

00:47:40,500 --> 00:47:45,840
non-responsive it infuriates your users

00:47:42,900 --> 00:47:47,640
and costs you money keeping your

00:47:45,840 --> 00:47:51,170
business critical systems humming along

00:47:47,640 --> 00:47:53,480
requires insight into what they're doing

00:47:51,170 --> 00:47:55,430
your system metrics tells stories

00:47:53,480 --> 00:47:57,440
stories that can reveal performance

00:47:55,430 --> 00:47:59,780
bottlenecks resource limitations and

00:47:57,440 --> 00:48:01,339
other problems but how do you keep an

00:47:59,780 --> 00:48:03,980
eye on all of your systems performance

00:48:01,339 --> 00:48:07,010
metrics in real-time and record this

00:48:03,980 --> 00:48:08,780
data for later analysis enter longview

00:48:07,010 --> 00:48:10,790
the new way to see what's really going

00:48:08,780 --> 00:48:12,950
on under the hood the long view

00:48:10,790 --> 00:48:15,020
dashboard lets you visualize the status

00:48:12,950 --> 00:48:17,480
of all your systems providing you with a

00:48:15,020 --> 00:48:20,839
bird's-eye view of your entire fleet you

00:48:17,480 --> 00:48:23,420
can sort by cpu memory swap processes

00:48:20,839 --> 00:48:25,190
load and network usage click a specific

00:48:23,420 --> 00:48:27,589
system to access its individual

00:48:25,190 --> 00:48:30,099
dashboard then click and drag to zoom in

00:48:27,589 --> 00:48:32,510
on chokepoints and get more detail

00:48:30,099 --> 00:48:34,160
comprehensive network data including

00:48:32,510 --> 00:48:36,470
inbound and outbound traffic is

00:48:34,160 --> 00:48:38,059
available on the network tab and disk

00:48:36,470 --> 00:48:39,980
rights and free space on the disk

00:48:38,059 --> 00:48:42,799
stabbed while the process Explorer

00:48:39,980 --> 00:48:45,349
displays usage statistics for individual

00:48:42,799 --> 00:48:47,510
processes the system info tab shows

00:48:45,349 --> 00:48:49,760
listening services active connections

00:48:47,510 --> 00:48:51,890
and available updates adding long view

00:48:49,760 --> 00:48:53,599
to a system is easy just click the

00:48:51,890 --> 00:48:55,730
button copy the one line installation

00:48:53,599 --> 00:48:58,190
command then run the command on your

00:48:55,730 --> 00:48:59,869
linux system to complete the process the

00:48:58,190 --> 00:49:02,059
agent will begin collecting data and

00:48:59,869 --> 00:49:03,900
sending it to longview then the graph

00:49:02,059 --> 00:49:06,480
start rolling

00:49:03,900 --> 00:49:08,849
use longview to gain visibility into

00:49:06,480 --> 00:49:12,589
your servers so when your website or app

00:49:08,849 --> 00:49:12,589

YouTube URL: https://www.youtube.com/watch?v=B-DTNBurLSw


