Title: 2014 SouthEast LinuxFest - JT Pennington - Puppy Linux Deconstructed
Publication date: 2015-05-17
Playlist: 2014 SouthEast LinuxFest
Description: 
	2014 SouthEast LinuxFest
JT Pennington
Puppy Linux Deconstructed
Captions: 
	00:00:00,060 --> 00:00:05,339
the following presentation was recorded

00:00:02,100 --> 00:00:08,189
the 2014 southeast linux fest in

00:00:05,339 --> 00:00:10,320
charlotte north carolina it is licensed

00:00:08,189 --> 00:00:13,490
under a Creative Commons license

00:00:10,320 --> 00:00:17,970
for more information visit

00:00:13,490 --> 00:00:18,990
www.ccltss.org the south east linux fest

00:00:17,970 --> 00:00:22,380
would like to thank the following

00:00:18,990 --> 00:00:25,350
diamond sponsors in 2014 for helping

00:00:22,380 --> 00:00:28,010
make these videos possible obviously

00:00:25,350 --> 00:00:29,910
this is a talk about popular necks

00:00:28,010 --> 00:00:31,940
before I start off has anyone here

00:00:29,910 --> 00:00:33,090
actually ever used Puppy Linux before

00:00:31,940 --> 00:00:34,649
okay

00:00:33,090 --> 00:00:36,149
now the follow-up question which I'm

00:00:34,649 --> 00:00:37,590
gonna have I'm gonna predicate that with

00:00:36,149 --> 00:00:38,820
a statement is most people when I tell

00:00:37,590 --> 00:00:40,350
them that I'm a popular Knicks developer

00:00:38,820 --> 00:00:42,210
their usual response to something along

00:00:40,350 --> 00:00:44,280
the lines of oh I love puppy is such a

00:00:42,210 --> 00:00:47,850
great system followed quickly by the

00:00:44,280 --> 00:00:50,420
next statement up I used it once so has

00:00:47,850 --> 00:00:52,469
anyone used Puppy Linux more than once

00:00:50,420 --> 00:00:54,210
okay like I thought some hands went down

00:00:52,469 --> 00:00:55,739
that's perfectly fine a lot of people

00:00:54,210 --> 00:00:58,170
use it to restore systems get data off

00:00:55,739 --> 00:01:01,350
another system that OS bad dead whatever

00:00:58,170 --> 00:01:03,059
that's fine as a developer if I can

00:01:01,350 --> 00:01:04,860
provide a product that you guys can use

00:01:03,059 --> 00:01:07,140
even if it's only once then I've helped

00:01:04,860 --> 00:01:08,640
you out I'm happy

00:01:07,140 --> 00:01:09,750
so with this talk I'm going to be

00:01:08,640 --> 00:01:12,180
talking about some of the different

00:01:09,750 --> 00:01:14,220
things with puppy how it's made how it

00:01:12,180 --> 00:01:16,409
works it's not going to be too technical

00:01:14,220 --> 00:01:17,790
I'm going to explain some things but

00:01:16,409 --> 00:01:18,990
we're not gonna get digging deep into

00:01:17,790 --> 00:01:22,110
the code it's gonna be an overview of

00:01:18,990 --> 00:01:23,220
how the system runs this is a little bit

00:01:22,110 --> 00:01:26,009
different than probably some of the

00:01:23,220 --> 00:01:28,860
other talks that you've heard my hope is

00:01:26,009 --> 00:01:32,070
that this will obviously be the best so

00:01:28,860 --> 00:01:33,509
to take the line from the IT Crowd put

00:01:32,070 --> 00:01:35,780
seat belts on your ears cuz I'm gonna

00:01:33,509 --> 00:01:38,909
take them for the ride of their lives

00:01:35,780 --> 00:01:40,560
okay Who I am my name is JT Pennington

00:01:38,909 --> 00:01:42,329
I'm a security consultant by day I'm

00:01:40,560 --> 00:01:44,070
also one of the producers of Linux

00:01:42,329 --> 00:01:45,329
action show and Linux unplugged with

00:01:44,070 --> 00:01:47,340
Jupiter broadcasting I don't know if any

00:01:45,329 --> 00:01:49,140
of you've ever watched that podcast if

00:01:47,340 --> 00:01:51,030
you have thank you welcome continue to

00:01:49,140 --> 00:01:53,610
watching if you haven't feel free to

00:01:51,030 --> 00:01:56,520
check it out I'm a puppy Linux developer

00:01:53,610 --> 00:01:59,430
I go by the name of q5 cysts and these

00:01:56,520 --> 00:02:02,280
are the versions that I've put out all

00:01:59,430 --> 00:02:04,740
of them have been x64 or armed attack

00:02:02,280 --> 00:02:06,899
pup is a pentesting distribution of

00:02:04,740 --> 00:02:08,069
puppy slack bones actually came up

00:02:06,899 --> 00:02:10,289
because there were a bunch of people who

00:02:08,069 --> 00:02:12,510
wanted a 64-bit distribution and there

00:02:10,289 --> 00:02:13,800
were only two options so me and one of

00:02:12,510 --> 00:02:16,800
the other developers put one together

00:02:13,800 --> 00:02:20,760
that is literally bare-bones it's based

00:02:16,800 --> 00:02:23,310
on Slackware 6414 u-boot 2x and that's

00:02:20,760 --> 00:02:24,990
it you have no other applications if you

00:02:23,310 --> 00:02:26,280
want an application you're gonna have to

00:02:24,990 --> 00:02:27,690
use W get from the command line to

00:02:26,280 --> 00:02:31,890
actually pull it down and then manually

00:02:27,690 --> 00:02:34,020
install it it was bare-bones excuse me

00:02:31,890 --> 00:02:35,310
yes it does have a C compiler it has all

00:02:34,020 --> 00:02:37,500
the built tools so you can compile all

00:02:35,310 --> 00:02:39,570
you want it was designed for other

00:02:37,500 --> 00:02:41,130
people who wanted a specific system but

00:02:39,570 --> 00:02:43,110
didn't have the actual skill level to go

00:02:41,130 --> 00:02:45,960
in and actually build the system how we

00:02:43,110 --> 00:02:49,740
build it which I will describe later RP

00:02:45,960 --> 00:02:52,050
2 is random pup Raspberry Pi the

00:02:49,740 --> 00:02:54,690
Raspberry Pi has a hardware random

00:02:52,050 --> 00:02:56,220
number generator built into it I was

00:02:54,690 --> 00:02:58,020
looking to get one for my network but

00:02:56,220 --> 00:03:00,500
unfortunately hardware random number

00:02:58,020 --> 00:03:03,270
generators are extraordinarily expensive

00:03:00,500 --> 00:03:06,060
well the Raspberry Pi has one so I built

00:03:03,270 --> 00:03:08,040
a headless system of puppy that

00:03:06,060 --> 00:03:09,990
basically allows you to access the

00:03:08,040 --> 00:03:11,640
hardware random number generator over a

00:03:09,990 --> 00:03:13,250
network on your land it's a single

00:03:11,640 --> 00:03:16,020
purpose unit that's what it was for

00:03:13,250 --> 00:03:19,350
cloud pup was me working to put own

00:03:16,020 --> 00:03:20,640
cloud on a Raspberry Pi quite honestly I

00:03:19,350 --> 00:03:22,380
wouldn't recommend it the Raspberry Pi

00:03:20,640 --> 00:03:25,020
does not have the strength to actually

00:03:22,380 --> 00:03:27,150
push the hardware requirements that

00:03:25,020 --> 00:03:30,120
ownCloud needs it works but it works

00:03:27,150 --> 00:03:32,580
kind of slow lighthouse pup is the

00:03:30,120 --> 00:03:34,620
64-bit version of Puppy Linux that I

00:03:32,580 --> 00:03:37,530
help Co develop I'm a support developer

00:03:34,620 --> 00:03:38,820
for it same with fat dog 64 I'm also one

00:03:37,530 --> 00:03:41,010
of the IFI developers it was a

00:03:38,820 --> 00:03:42,420
Kickstarter project to take the gassi

00:03:41,010 --> 00:03:44,160
search engine which is a distributed

00:03:42,420 --> 00:03:45,390
peer-to-peer search engine so that

00:03:44,160 --> 00:03:47,340
Google can't track what you're actually

00:03:45,390 --> 00:03:48,720
searching and put it on a standalone

00:03:47,340 --> 00:03:50,730
Raspberry Pi so you can plug it into

00:03:48,720 --> 00:03:53,160
your network and do anonymous searching

00:03:50,730 --> 00:03:54,989
I also am possibly going to become a

00:03:53,160 --> 00:03:58,290
sailfish developer I used to do

00:03:54,989 --> 00:04:00,180
development with palm OS I'm sick and

00:03:58,290 --> 00:04:02,550
tired of Android so if I get time in my

00:04:00,180 --> 00:04:04,709
day I will eventually start working on

00:04:02,550 --> 00:04:07,950
sailfish that's kind of still up for

00:04:04,709 --> 00:04:09,239
debate though if I'm gonna have time ok

00:04:07,950 --> 00:04:11,670
about Puppy Linux it was originally

00:04:09,239 --> 00:04:14,700
created in 2003 the first official

00:04:11,670 --> 00:04:16,859
release was actually in 2006 berrykin

00:04:14,700 --> 00:04:18,870
hour or collapse hour I always say his

00:04:16,859 --> 00:04:21,209
name wrong he was the chief developer up

00:04:18,870 --> 00:04:22,440
until September 2013 where he retired he

00:04:21,209 --> 00:04:25,020
just kind of wanted to focus on his own

00:04:22,440 --> 00:04:26,789
things originally he started working on

00:04:25,020 --> 00:04:27,750
puppy because it was fun it was

00:04:26,789 --> 00:04:29,310
something he wanted to work on

00:04:27,750 --> 00:04:32,580
the community developed around him and

00:04:29,310 --> 00:04:33,930
he continued working now he just wants

00:04:32,580 --> 00:04:35,400
to take a back seat and just play around

00:04:33,930 --> 00:04:36,960
again do some fun little projects of his

00:04:35,400 --> 00:04:38,720
own they're still based on puppy but

00:04:36,960 --> 00:04:40,950
he's not leading the main development

00:04:38,720 --> 00:04:42,600
the community is kind of stepped up and

00:04:40,950 --> 00:04:43,830
has continued the development the main

00:04:42,600 --> 00:04:45,510
project that we're working on is what's

00:04:43,830 --> 00:04:47,730
called wolf and that is our build system

00:04:45,510 --> 00:04:49,010
for how we build Puppy Linux and I will

00:04:47,730 --> 00:04:51,360
get into that in a moment

00:04:49,010 --> 00:04:53,670
from the beginning puppy's design goals

00:04:51,360 --> 00:04:55,860
were to be extraordinarily easy to use

00:04:53,670 --> 00:04:59,310
and install it on pretty much any medium

00:04:55,860 --> 00:05:02,220
that you have USB zip drive you can put

00:04:59,310 --> 00:05:05,040
it on SD cards it should run entirely in

00:05:02,220 --> 00:05:07,560
RAM you can boot it from a CD and DVD

00:05:05,040 --> 00:05:09,600
and any changes you make can be saved

00:05:07,560 --> 00:05:12,600
back to that disk so you can actually

00:05:09,600 --> 00:05:14,610
have a persistent CD or a persistent DVD

00:05:12,600 --> 00:05:17,010
now obviously that will only work until

00:05:14,610 --> 00:05:18,870
you fill up the drive unless you have an

00:05:17,010 --> 00:05:21,090
RW and then you can try to erase I've

00:05:18,870 --> 00:05:22,880
never personally done it success rate I

00:05:21,090 --> 00:05:25,770
don't really know how else going to be

00:05:22,880 --> 00:05:28,020
puppy was designed to be very friendly

00:05:25,770 --> 00:05:28,980
you have an old system or someone has an

00:05:28,020 --> 00:05:31,470
old system and they just want to get

00:05:28,980 --> 00:05:32,700
online you plug it in you get online you

00:05:31,470 --> 00:05:35,400
can browse the web you can send the

00:05:32,700 --> 00:05:36,930
emails it's meant to be very very simple

00:05:35,400 --> 00:05:38,460
to use now if you want to get in and dig

00:05:36,930 --> 00:05:41,340
into it you're gonna need some skill

00:05:38,460 --> 00:05:43,530
levels above just a random user because

00:05:41,340 --> 00:05:46,830
of how everything is actually done but

00:05:43,530 --> 00:05:49,100
for just standard user computer actions

00:05:46,830 --> 00:05:51,000
we want it to be as easy as possible

00:05:49,100 --> 00:05:53,040
like I said it will run extraordinarily

00:05:51,000 --> 00:05:55,020
fast the primary reason from this is

00:05:53,040 --> 00:05:57,270
because it runs from RAM and I will

00:05:55,020 --> 00:05:58,830
touch on that in just a moment I will

00:05:57,270 --> 00:06:00,630
have all the applications for needed for

00:05:58,830 --> 00:06:03,750
daily use these are the typical things

00:06:00,630 --> 00:06:05,550
like a document writer a spreadsheet so

00:06:03,750 --> 00:06:07,650
you can send emails you can play music

00:06:05,550 --> 00:06:09,390
you can watch movies the versions of the

00:06:07,650 --> 00:06:12,930
programs that we use and the actual

00:06:09,390 --> 00:06:14,729
versions of programs that we use are

00:06:12,930 --> 00:06:16,620
sometimes not the ones you're familiar

00:06:14,729 --> 00:06:17,910
with the reason we've chosen those is

00:06:16,620 --> 00:06:20,550
because we're looking to keep the size

00:06:17,910 --> 00:06:22,290
as minimal as possible right now the

00:06:20,550 --> 00:06:24,390
latest official release of puppy the

00:06:22,290 --> 00:06:26,150
entire OS gooey and all applications is

00:06:24,390 --> 00:06:28,740
about 140 megabytes

00:06:26,150 --> 00:06:30,150
compared to a distribution like fedora

00:06:28,740 --> 00:06:32,400
where you're talking multiple gigabytes

00:06:30,150 --> 00:06:33,810
we want to keep puppy as minimal as

00:06:32,400 --> 00:06:36,390
possible so we have to choose

00:06:33,810 --> 00:06:39,680
applications that have the smallest size

00:06:36,390 --> 00:06:41,700
and will run on the most efficient code

00:06:39,680 --> 00:06:43,410
again it will just work we

00:06:41,700 --> 00:06:45,480
you'd be able to take the USB install to

00:06:43,410 --> 00:06:47,910
a USB stick it in any computer and it

00:06:45,480 --> 00:06:49,530
run we don't want you to have to spend

00:06:47,910 --> 00:06:50,880
time figuring out how to boot your

00:06:49,530 --> 00:06:54,810
system so you can do whatever you need

00:06:50,880 --> 00:06:56,460
to do and because our focus is on being

00:06:54,810 --> 00:06:58,440
as lightweight as possible and using the

00:06:56,460 --> 00:07:01,440
minimum resources we want to be able to

00:06:58,440 --> 00:07:03,740
breathe life into old PCs and for an

00:07:01,440 --> 00:07:07,670
example of that well I'll hold there

00:07:03,740 --> 00:07:09,270
this is one of the first pictures

00:07:07,670 --> 00:07:12,870
releases of puppy

00:07:09,270 --> 00:07:13,980
it's 2003 one of the things we hear and

00:07:12,870 --> 00:07:15,840
I'll touch on later is that puppy is

00:07:13,980 --> 00:07:18,900
kind of ugly as you can see it's not

00:07:15,840 --> 00:07:19,980
really that attractive there are some

00:07:18,900 --> 00:07:23,610
things that we're working on to make

00:07:19,980 --> 00:07:24,810
that better but when you want to have a

00:07:23,610 --> 00:07:27,680
lightweight system you're gonna have to

00:07:24,810 --> 00:07:28,890
sacrifice some of the bells and whistles

00:07:27,680 --> 00:07:30,330
okay

00:07:28,890 --> 00:07:33,660
example of old hardware that I can run

00:07:30,330 --> 00:07:36,510
puppy on Toshiba Protege this system I

00:07:33,660 --> 00:07:38,670
still use today as a matter of fact the

00:07:36,510 --> 00:07:42,030
latest version of puppy which official

00:07:38,670 --> 00:07:43,860
version is slack Oh 5.7 I believe still

00:07:42,030 --> 00:07:45,840
runs on that system runs perfectly fine

00:07:43,860 --> 00:07:47,700
I can boot it up I can browse YouTube I

00:07:45,840 --> 00:07:50,070
can send emails I can write letters I

00:07:47,700 --> 00:07:52,590
can watch movies all perfectly fine on a

00:07:50,070 --> 00:07:54,420
600 megahertz Pentium 3 now if you take

00:07:52,590 --> 00:07:56,370
a normal Linux distribution and you try

00:07:54,420 --> 00:07:57,750
to load it on that system you might as

00:07:56,370 --> 00:07:59,070
well start it up go wash your car and

00:07:57,750 --> 00:08:03,330
cut your lawn and then come back and you

00:07:59,070 --> 00:08:06,620
might have arrives at your GUI but puppy

00:08:03,330 --> 00:08:09,390
is not limited to just minimal hardware

00:08:06,620 --> 00:08:11,960
my development rig right here is a dual

00:08:09,390 --> 00:08:14,730
hexa core Xeon it's 24 thread processors

00:08:11,960 --> 00:08:15,990
56 gig ram and 24 terabytes you know a

00:08:14,730 --> 00:08:17,610
lot of people immediately when I say

00:08:15,990 --> 00:08:19,290
that say there's no way puppies going to

00:08:17,610 --> 00:08:22,980
run on that that's impossible

00:08:19,290 --> 00:08:25,410
well that's the system puppy does in

00:08:22,980 --> 00:08:27,200
fact run on it and obviously it runs

00:08:25,410 --> 00:08:29,850
lightning-fast

00:08:27,200 --> 00:08:31,440
now the Mariner right here that's the

00:08:29,850 --> 00:08:34,080
version that I use which is the

00:08:31,440 --> 00:08:38,880
lighthouse we are using a slightly older

00:08:34,080 --> 00:08:41,550
kernel it's a 3.7 open box 3 5 but puppy

00:08:38,880 --> 00:08:43,560
will run on virtually anything that's

00:08:41,550 --> 00:08:45,120
one of our goals if it runs fast on a

00:08:43,560 --> 00:08:46,140
600 megahertz you can guarantee it's

00:08:45,120 --> 00:08:47,370
going to run fast on your modern

00:08:46,140 --> 00:08:49,730
hardware it's just one of the added

00:08:47,370 --> 00:08:49,730
benefits

00:08:51,450 --> 00:08:57,400
yes it is there you go

00:08:55,170 --> 00:08:58,840
forgive me there's Samsung's and I know

00:08:57,400 --> 00:09:00,040
a lot of people think Samsung's are crap

00:08:58,840 --> 00:09:01,780
but when you're buying six of them you

00:09:00,040 --> 00:09:07,960
really don't want to spend three hours a

00:09:01,780 --> 00:09:09,460
monitor yes this one this one up here

00:09:07,960 --> 00:09:12,900
that's actually my Toshiba that still

00:09:09,460 --> 00:09:15,850
runs the Pentium that is a 200 or the

00:09:12,900 --> 00:09:17,320
286 that's not running puppy and then a

00:09:15,850 --> 00:09:25,260
Pentium and a 386 so they're not either

00:09:17,320 --> 00:09:30,150
but yeah that thing does yes it well I

00:09:25,260 --> 00:09:34,240
have right now I'm running to nvidia gtx

00:09:30,150 --> 00:09:37,420
6660 TI's and with Xena Rama puppy will

00:09:34,240 --> 00:09:39,220
span to all six screens people have

00:09:37,420 --> 00:09:40,540
reported with ATI being able to go to

00:09:39,220 --> 00:09:42,280
three screens I don't know anyone else

00:09:40,540 --> 00:09:45,130
who's insane enough to try to go higher

00:09:42,280 --> 00:09:49,990
than that I'm kind of the loony oddball

00:09:45,130 --> 00:09:54,850
in the community yeah well you know I'm

00:09:49,990 --> 00:09:56,770
not going for four pretty looks all

00:09:54,850 --> 00:09:58,480
righty so the main things we're going to

00:09:56,770 --> 00:10:01,030
focus on running from RAM how we do it

00:09:58,480 --> 00:10:02,110
why we do it layered file system most

00:10:01,030 --> 00:10:03,540
people don't know what it is I'm going

00:10:02,110 --> 00:10:05,920
to try to explain it as simply as I can

00:10:03,540 --> 00:10:07,030
squash file system also something most

00:10:05,920 --> 00:10:08,950
people don't know what it is I will try

00:10:07,030 --> 00:10:10,930
to explain it save files whoo wolf which

00:10:08,950 --> 00:10:12,640
is our build system the benefits and the

00:10:10,930 --> 00:10:14,860
downsides of running puppy if you want

00:10:12,640 --> 00:10:16,330
to get involved how you can and then

00:10:14,860 --> 00:10:18,790
some sources which we'll get to in a

00:10:16,330 --> 00:10:21,370
second so running from Ram why do we do

00:10:18,790 --> 00:10:22,750
it well we do it because disk i/o is

00:10:21,370 --> 00:10:25,450
dumb

00:10:22,750 --> 00:10:26,860
this guy Oh for most things is the

00:10:25,450 --> 00:10:28,660
slowest part of your system now

00:10:26,860 --> 00:10:30,040
thankfully the Linux kernel is kind of

00:10:28,660 --> 00:10:32,530
smart with caching so you don't notice

00:10:30,040 --> 00:10:36,210
it as much but when you are on older

00:10:32,530 --> 00:10:38,800
hardware you do not have the benefits of

00:10:36,210 --> 00:10:41,830
SATA drives you can still be using old

00:10:38,800 --> 00:10:45,640
pata drives old IDE drives and the i/o

00:10:41,830 --> 00:10:47,860
on those is horrible so running from RAM

00:10:45,640 --> 00:10:49,780
means your system when you need to load

00:10:47,860 --> 00:10:51,310
something does not have to reach down to

00:10:49,780 --> 00:10:52,750
an extremely low drive to try to pull

00:10:51,310 --> 00:10:56,220
data off of it because it's already

00:10:52,750 --> 00:10:56,220
sitting in RAM it's already ready to go

00:10:56,760 --> 00:11:01,390
au FS

00:10:59,320 --> 00:11:04,120
the name is the same the what it

00:11:01,390 --> 00:11:06,220
actually defines as has changed three

00:11:04,120 --> 00:11:08,050
times I don't know why but it does um

00:11:06,220 --> 00:11:10,900
it's basically another version of Union

00:11:08,050 --> 00:11:12,970
FS which the easiest way to describe it

00:11:10,900 --> 00:11:14,290
is who here remembers old school

00:11:12,970 --> 00:11:15,490
transparency sheets at school where you

00:11:14,290 --> 00:11:17,350
had the overhead projector and teacher

00:11:15,490 --> 00:11:18,820
head for transparency sheets the

00:11:17,350 --> 00:11:20,980
simplest way to explain a layered file

00:11:18,820 --> 00:11:22,840
system is like that take a whole bunch

00:11:20,980 --> 00:11:24,400
of transparency sheets take one of them

00:11:22,840 --> 00:11:26,770
and put your GUI on it

00:11:24,400 --> 00:11:28,200
take another and put KDE on it take

00:11:26,770 --> 00:11:30,160
another and put your browser on it

00:11:28,200 --> 00:11:32,260
individually they exist as separate

00:11:30,160 --> 00:11:33,490
layers when you put them together and

00:11:32,260 --> 00:11:35,170
stick them on the transparency sheet

00:11:33,490 --> 00:11:40,180
what you see on the screen on the wall

00:11:35,170 --> 00:11:41,410
is all of them in your file system this

00:11:40,180 --> 00:11:43,300
was how I felt the first time I tried to

00:11:41,410 --> 00:11:46,540
understand exactly the technical ways of

00:11:43,300 --> 00:11:47,710
how it works because even today I cannot

00:11:46,540 --> 00:11:49,810
wrap my brains around the

00:11:47,710 --> 00:11:51,970
extraordinarily technical ways of how

00:11:49,810 --> 00:11:55,510
the layered file system works I know how

00:11:51,970 --> 00:11:57,640
it works I don't know how it works I

00:11:55,510 --> 00:12:00,070
just kind of accept that it does and

00:11:57,640 --> 00:12:01,660
appreciate what it does and just kind of

00:12:00,070 --> 00:12:03,160
let the guy who's developing it kind of

00:12:01,660 --> 00:12:07,900
do his own thing because it is way above

00:12:03,160 --> 00:12:10,240
my level so when puppy boots you have

00:12:07,900 --> 00:12:11,680
your base system and like I said you

00:12:10,240 --> 00:12:13,330
have layers that will go on top of it

00:12:11,680 --> 00:12:14,680
now in this situation I just kind of

00:12:13,330 --> 00:12:17,860
threw things in to identify different

00:12:14,680 --> 00:12:19,600
layers it's important to realize that

00:12:17,860 --> 00:12:21,010
these layers here except for the top one

00:12:19,600 --> 00:12:23,500
are all read-only and I'll get to that

00:12:21,010 --> 00:12:24,930
in a second but as you load in layers as

00:12:23,500 --> 00:12:26,920
the layered file system is layered in

00:12:24,930 --> 00:12:28,300
everything was laid on just like a new

00:12:26,920 --> 00:12:30,850
transparency sheet with new files in it

00:12:28,300 --> 00:12:33,700
that you as the user you don't notice

00:12:30,850 --> 00:12:39,160
anything different the system one itself

00:12:33,700 --> 00:12:40,510
does okay right here we have DF output

00:12:39,160 --> 00:12:42,970
and we see all these different loop

00:12:40,510 --> 00:12:44,620
devices all these different loop devices

00:12:42,970 --> 00:12:46,450
are actually different layers that are

00:12:44,620 --> 00:12:47,800
layered into the file system here and

00:12:46,450 --> 00:12:49,960
there I'll put it under the subdirectory

00:12:47,800 --> 00:12:52,390
init Rd because again remember we're

00:12:49,960 --> 00:12:53,620
running entirely from ramp so once the

00:12:52,390 --> 00:12:55,780
kernel loads and it loads the init

00:12:53,620 --> 00:12:57,100
script it then creates the in Rd

00:12:55,780 --> 00:12:59,680
directory and it starts layering

00:12:57,100 --> 00:13:02,260
everything in the ramp from the system

00:12:59,680 --> 00:13:05,800
side this is what it sees from the user

00:13:02,260 --> 00:13:07,360
side you don't see that obviously you

00:13:05,800 --> 00:13:10,000
can go into the actual directory and see

00:13:07,360 --> 00:13:11,380
with the individual layers but if you

00:13:10,000 --> 00:13:13,090
just go to the root directory you're

00:13:11,380 --> 00:13:14,080
gonna see the file system like you

00:13:13,090 --> 00:13:15,280
you're gonna see your user directory

00:13:14,080 --> 00:13:16,630
you're going to your Lib directory here

00:13:15,280 --> 00:13:20,650
and see your Etsy you're going to see

00:13:16,630 --> 00:13:23,530
all of those the different layers are

00:13:20,650 --> 00:13:26,980
titled for the order that they are in

00:13:23,530 --> 00:13:28,420
your system pup ro to is an important

00:13:26,980 --> 00:13:29,950
layer which I'll get to in a second the

00:13:28,420 --> 00:13:32,440
rest of them are just additional layers

00:13:29,950 --> 00:13:33,940
that you can add in as you want while

00:13:32,440 --> 00:13:37,300
you're using your system you can load

00:13:33,940 --> 00:13:38,260
and unload different layers at will and

00:13:37,300 --> 00:13:40,590
I'll get to why you might want to do

00:13:38,260 --> 00:13:40,590
that later

00:13:41,700 --> 00:13:46,420
here's an example of one of the actual

00:13:44,530 --> 00:13:48,400
layers now here we are in the ARD

00:13:46,420 --> 00:13:50,770
directory we're looking specifically at

00:13:48,400 --> 00:13:53,020
the pup ro 14 layer and as you see

00:13:50,770 --> 00:13:54,070
inside that layer is your standard file

00:13:53,020 --> 00:13:56,440
system that you would normally see you

00:13:54,070 --> 00:14:00,100
had as the directory user directory and

00:13:56,440 --> 00:14:03,160
of our directory this I believe is

00:14:00,100 --> 00:14:07,990
actually kept Zilla or its queue MMP I

00:14:03,160 --> 00:14:10,300
forget which one I use for this but the

00:14:07,990 --> 00:14:12,280
layer itself is that so if you look at

00:14:10,300 --> 00:14:14,290
the individual layer you will only see

00:14:12,280 --> 00:14:16,210
the files from that application you will

00:14:14,290 --> 00:14:17,110
see nothing else if you step back to

00:14:16,210 --> 00:14:18,550
your root filesystem

00:14:17,110 --> 00:14:20,440
you will see these files in these

00:14:18,550 --> 00:14:24,010
directories in your filesystem like you

00:14:20,440 --> 00:14:26,620
would normally want to see them now we

00:14:24,010 --> 00:14:29,380
accomplish this by using what's called a

00:14:26,620 --> 00:14:31,570
squash FS we take this layer and we

00:14:29,380 --> 00:14:35,320
compress it down into a single file so

00:14:31,570 --> 00:14:37,570
that it's easy to use that allows us to

00:14:35,320 --> 00:14:40,530
take our separate layers and work with

00:14:37,570 --> 00:14:42,760
them individually so I can take Q MMP I

00:14:40,530 --> 00:14:44,080
can take that layer and I can load it

00:14:42,760 --> 00:14:46,180
when I need a media player if I want to

00:14:44,080 --> 00:14:49,630
now I have Q MMP in my system I can play

00:14:46,180 --> 00:14:51,430
mp3s whatever if I don't want to use it

00:14:49,630 --> 00:14:53,290
anymore I can now unload that layer out

00:14:51,430 --> 00:14:56,680
of memory now again it's just a single

00:14:53,290 --> 00:15:00,130
file on the hard disk that contains all

00:14:56,680 --> 00:15:02,110
this the layered file system understands

00:15:00,130 --> 00:15:05,410
that and when you load it it then

00:15:02,110 --> 00:15:08,980
extracts that those files puts them in

00:15:05,410 --> 00:15:11,260
memory and then layers them in now when

00:15:08,980 --> 00:15:14,590
I say compression I'll get to that

00:15:11,260 --> 00:15:16,450
second this is yes it was Q MMP this is

00:15:14,590 --> 00:15:18,070
actually the files that are inside the

00:15:16,450 --> 00:15:19,870
user bin directory now if you went out

00:15:18,070 --> 00:15:21,190
to root and you went to user bin you

00:15:19,870 --> 00:15:22,960
would see all the other files in your

00:15:21,190 --> 00:15:24,670
system but since we are specifically

00:15:22,960 --> 00:15:25,790
within this layer all we're going to see

00:15:24,670 --> 00:15:27,290
is that layer

00:15:25,790 --> 00:15:29,120
again with the old transparency analogy

00:15:27,290 --> 00:15:30,890
if you took one of those transparency

00:15:29,120 --> 00:15:32,450
sheets out and looked at it you wouldn't

00:15:30,890 --> 00:15:34,370
see everything else that was on the wall

00:15:32,450 --> 00:15:39,740
that was projected you would only see

00:15:34,370 --> 00:15:43,340
the layers in that file and these layers

00:15:39,740 --> 00:15:45,380
are read-only as you see here I cannot

00:15:43,340 --> 00:15:47,570
create anything I can't create a file or

00:15:45,380 --> 00:15:50,230
a folder now this has an added security

00:15:47,570 --> 00:15:54,140
benefit which I'll get to in a second

00:15:50,230 --> 00:15:56,510
but the individual s FS layers in the

00:15:54,140 --> 00:15:58,220
layered file system are read-only this

00:15:56,510 --> 00:15:59,590
is very important to realize because

00:15:58,220 --> 00:16:05,150
this also gives us a couple benefits

00:15:59,590 --> 00:16:06,860
which we will get to in a second as I

00:16:05,150 --> 00:16:08,240
said we were using these via what's

00:16:06,860 --> 00:16:10,370
called a squash file system which is a

00:16:08,240 --> 00:16:12,500
compressed read-only file system for

00:16:10,370 --> 00:16:15,020
Linux that is how we contain our layers

00:16:12,500 --> 00:16:19,130
on the physical hard disk to load in

00:16:15,020 --> 00:16:20,900
different layers into the OS here's an

00:16:19,130 --> 00:16:25,100
example of the compression that it has

00:16:20,900 --> 00:16:27,260
the extracted uncompressed system is 69

00:16:25,100 --> 00:16:28,820
mega players yeah 69 megabytes but the

00:16:27,260 --> 00:16:30,890
actual compressed file that resides on

00:16:28,820 --> 00:16:35,390
my hard drive that I'm loading into Ram

00:16:30,890 --> 00:16:37,370
is actually only 14 MEK I'm not sure the

00:16:35,390 --> 00:16:40,430
exact compression format I think it's

00:16:37,370 --> 00:16:43,160
lzma but we are able to save a lot of

00:16:40,430 --> 00:16:45,110
actual disk space while still having all

00:16:43,160 --> 00:16:47,300
the files that we need again on older

00:16:45,110 --> 00:16:48,470
hardware this is benefit because a lot

00:16:47,300 --> 00:16:51,670
of older things don't have the larger

00:16:48,470 --> 00:16:51,670
hard drives that we do nowadays

00:16:53,680 --> 00:16:58,940
ok so taking a OFS and our squash file

00:16:57,170 --> 00:17:01,550
systems together we can load and unload

00:16:58,940 --> 00:17:03,860
layers from our file system whenever we

00:17:01,550 --> 00:17:06,110
desire what this means is I can boot up

00:17:03,860 --> 00:17:07,970
my system and I can have open box

00:17:06,110 --> 00:17:09,650
running I can have Firefox running I can

00:17:07,970 --> 00:17:11,780
have LibreOffice running I can have all

00:17:09,650 --> 00:17:13,100
these layers loaded in and halfway

00:17:11,780 --> 00:17:14,870
through I can decide you know what I

00:17:13,100 --> 00:17:17,210
need to load a server because I need

00:17:14,870 --> 00:17:19,310
someone else to download files off of my

00:17:17,210 --> 00:17:21,380
system so I load my Apache server in my

00:17:19,310 --> 00:17:23,270
lamp stack they connect they get what

00:17:21,380 --> 00:17:25,400
they need at that point I can unload

00:17:23,270 --> 00:17:27,500
that layer and Apache is gone it's no

00:17:25,400 --> 00:17:29,660
longer in my file system I can allow

00:17:27,500 --> 00:17:32,960
people to connect to my system because I

00:17:29,660 --> 00:17:35,330
can load and unload a server at will and

00:17:32,960 --> 00:17:39,130
when it's unloaded it does not exist at

00:17:35,330 --> 00:17:39,130
all the file system it's not there

00:17:39,169 --> 00:17:44,509
it also allows us to completely change

00:17:41,059 --> 00:17:46,249
the way our system is set up so if I

00:17:44,509 --> 00:17:47,419
prefer one browser and someone else

00:17:46,249 --> 00:17:50,059
prefers another browser we use the same

00:17:47,419 --> 00:17:52,309
system I can use Chrome they can sit

00:17:50,059 --> 00:17:54,679
down without rebooting if they want to

00:17:52,309 --> 00:17:56,899
unload Chrome load Firefox and there we

00:17:54,679 --> 00:17:58,609
go now some people don't understand why

00:17:56,899 --> 00:18:00,289
why why don't you just leave them all

00:17:58,609 --> 00:18:02,029
loaded well again because we're focusing

00:18:00,289 --> 00:18:04,489
on older hardware we're talking about

00:18:02,029 --> 00:18:06,259
limited resources if I'm only using one

00:18:04,489 --> 00:18:08,149
browser I don't need to have two or

00:18:06,259 --> 00:18:13,249
three browsers loaded into Ram taking up

00:18:08,149 --> 00:18:16,129
memory it allows you to adapt your

00:18:13,249 --> 00:18:17,869
system as you need it we kind of have

00:18:16,129 --> 00:18:19,369
the attitude in the general Linux

00:18:17,869 --> 00:18:21,320
community of an everything in the

00:18:19,369 --> 00:18:22,850
kitchen sink you install your distro you

00:18:21,320 --> 00:18:25,369
grab every piece of software you might

00:18:22,850 --> 00:18:27,470
possibly want throw it on there and when

00:18:25,369 --> 00:18:28,700
you have a 2 terabyte drive that's fine

00:18:27,470 --> 00:18:29,840
because it's just going to sit there

00:18:28,700 --> 00:18:31,639
it's going to take up space it's not

00:18:29,840 --> 00:18:33,379
going to do anything else from a

00:18:31,639 --> 00:18:35,720
security standpoint though you do have

00:18:33,379 --> 00:18:37,399
the problem that you are loading tons of

00:18:35,720 --> 00:18:38,690
potential attack vectors on your system

00:18:37,399 --> 00:18:41,210
that are doing nothing but sitting there

00:18:38,690 --> 00:18:43,609
now for most people that's not a concern

00:18:41,210 --> 00:18:45,679
for some though that are a little extra

00:18:43,609 --> 00:18:47,149
paranoid they don't want to have

00:18:45,679 --> 00:18:51,320
different things sitting on their drive

00:18:47,149 --> 00:18:53,539
potentially able to be exploited now as

00:18:51,320 --> 00:18:56,330
I said all of these layers are read-only

00:18:53,539 --> 00:18:59,749
you cannot change them so what happens

00:18:56,330 --> 00:19:01,009
if I load a layer like a browser and I

00:18:59,749 --> 00:19:03,109
go in and change my browser convicts

00:19:01,009 --> 00:19:05,629
well what happens because those files in

00:19:03,109 --> 00:19:06,590
that layer I can't change well what

00:19:05,629 --> 00:19:08,929
happens is there's a special

00:19:06,590 --> 00:19:11,149
subdirectory which is the pup RW

00:19:08,929 --> 00:19:14,330
directory and every change in the system

00:19:11,149 --> 00:19:17,899
goes into that directory so if I go in

00:19:14,330 --> 00:19:20,029
and I change my configs I will have a

00:19:17,899 --> 00:19:23,600
file that will be created in that layer

00:19:20,029 --> 00:19:25,489
the original files are still there my

00:19:23,600 --> 00:19:27,649
changed file is going to exist in this

00:19:25,489 --> 00:19:30,169
fresh new layer that I can read to and

00:19:27,649 --> 00:19:32,559
write anytime I need now this has

00:19:30,169 --> 00:19:32,559
several benefits

00:19:36,580 --> 00:19:41,630
okay here's an example

00:19:38,740 --> 00:19:43,549
inside this readwrite layer these are

00:19:41,630 --> 00:19:45,470
all the changes that I have made to the

00:19:43,549 --> 00:19:50,360
system I have stuff in bin because I've

00:19:45,470 --> 00:19:52,429
installed programs in my root directory

00:19:50,360 --> 00:19:56,750
I'm gonna have all my contacts and my

00:19:52,429 --> 00:19:59,120
dot config directory now when I like him

00:19:56,750 --> 00:20:01,820
again browser web browser if I go in and

00:19:59,120 --> 00:20:03,139
I edit the configs I'm gonna have a file

00:20:01,820 --> 00:20:05,299
that's created in here

00:20:03,139 --> 00:20:07,220
my original file is still going to be in

00:20:05,299 --> 00:20:09,049
the system so if I go in and I added a

00:20:07,220 --> 00:20:10,639
file and I totally mess everything up

00:20:09,049 --> 00:20:13,039
all I have to do is go into my lair

00:20:10,639 --> 00:20:14,690
delete my file that I tried to edit and

00:20:13,039 --> 00:20:17,090
instantly the filesystem is smart enough

00:20:14,690 --> 00:20:19,190
to realize hey I have an older copy of

00:20:17,090 --> 00:20:20,720
that file in a lower layer and instantly

00:20:19,190 --> 00:20:24,169
the system will revert back to the

00:20:20,720 --> 00:20:25,970
original copy seamlessly so if you want

00:20:24,169 --> 00:20:27,230
to tinker this is a very good system to

00:20:25,970 --> 00:20:29,120
be able to learn how to tinker with

00:20:27,230 --> 00:20:30,799
because you don't have to worry about

00:20:29,120 --> 00:20:32,750
totally screwing up your system and then

00:20:30,799 --> 00:20:35,809
having to reinstall because any change

00:20:32,750 --> 00:20:38,450
you make is in that directory so worst

00:20:35,809 --> 00:20:39,649
case scenario you dropped a shell you CD

00:20:38,450 --> 00:20:41,450
into this directory and you delete

00:20:39,649 --> 00:20:45,980
whatever file you were working on you

00:20:41,450 --> 00:20:49,279
start X and you're back this again also

00:20:45,980 --> 00:20:50,419
has an added security benefit of there

00:20:49,279 --> 00:20:52,309
are certain files which should never

00:20:50,419 --> 00:20:54,559
exist in this directory unless you have

00:20:52,309 --> 00:20:57,169
done it for instance the ANSI directory

00:20:54,559 --> 00:20:59,000
I should never have any changes going

00:20:57,169 --> 00:21:01,070
into any of certain files in my se

00:20:59,000 --> 00:21:03,830
directory unless I'm doing so if one day

00:21:01,070 --> 00:21:06,440
I noticed that hey wait a second my LD

00:21:03,830 --> 00:21:07,879
socom file in my sd directory why do I

00:21:06,440 --> 00:21:09,710
have that my save layer I've never

00:21:07,879 --> 00:21:11,179
changed that well that means somebody

00:21:09,710 --> 00:21:13,220
else has changed or something else has

00:21:11,179 --> 00:21:16,940
changed it I can go in and look at see

00:21:13,220 --> 00:21:18,889
exactly what's going on and if I'm not

00:21:16,940 --> 00:21:21,019
sure and I'm not what's going on why is

00:21:18,889 --> 00:21:24,320
this file here no problem delete it

00:21:21,019 --> 00:21:26,690
problem solved I actually have a cron

00:21:24,320 --> 00:21:28,940
job that runs continually that compares

00:21:26,690 --> 00:21:32,539
the contents of this directory of Etsy

00:21:28,940 --> 00:21:34,370
and then with my base layer so every ten

00:21:32,539 --> 00:21:35,899
minutes it will run and it will look to

00:21:34,370 --> 00:21:37,279
see if there is a file difference

00:21:35,899 --> 00:21:39,889
between this directory and that

00:21:37,279 --> 00:21:41,090
directory if it's finally one it runs a

00:21:39,889 --> 00:21:44,510
difference it takes the original file

00:21:41,090 --> 00:21:45,919
the edited file the difference tax them

00:21:44,510 --> 00:21:46,429
all panda Tarbell and then e mails it

00:21:45,919 --> 00:21:48,559
out to me

00:21:46,429 --> 00:21:49,759
so if somebody sits down at my sister

00:21:48,559 --> 00:21:51,529
it starts tinkering and doing whatever

00:21:49,759 --> 00:21:54,139
within ten minutes I'm gonna get an

00:21:51,529 --> 00:21:57,679
email saying hey somebody edited this

00:21:54,139 --> 00:21:59,570
file in your SD directory of course all

00:21:57,679 --> 00:22:01,700
I have to do is go see exactly what

00:21:59,570 --> 00:22:03,799
changes because they can't edit the base

00:22:01,700 --> 00:22:05,570
layer they can only edit this top layer

00:22:03,799 --> 00:22:07,759
which is editable so I can go in and see

00:22:05,570 --> 00:22:09,080
exactly what's changed and I can just

00:22:07,759 --> 00:22:14,139
delete it and instantly my system

00:22:09,080 --> 00:22:17,179
reverts back to its original copy now

00:22:14,139 --> 00:22:19,249
these files right here these are what's

00:22:17,179 --> 00:22:21,499
called a whiteout file these are very

00:22:19,249 --> 00:22:23,600
important because this is how a layered

00:22:21,499 --> 00:22:25,820
file system works when you delete a

00:22:23,600 --> 00:22:28,669
layer that's technically on a lower

00:22:25,820 --> 00:22:31,100
layer which is read-only if I have a

00:22:28,669 --> 00:22:32,360
file say my host name file and I decide

00:22:31,100 --> 00:22:33,409
I don't want a host name at all I'm not

00:22:32,360 --> 00:22:35,509
even gonna have the host name file in

00:22:33,409 --> 00:22:37,580
the SD directory well I can't actually

00:22:35,509 --> 00:22:39,679
edit it so I have to be able to tell my

00:22:37,580 --> 00:22:41,659
system some way that that file doesn't

00:22:39,679 --> 00:22:44,269
exist anymore and what it does is I

00:22:41,659 --> 00:22:47,299
create a whiteout file of the host name

00:22:44,269 --> 00:22:50,480
file in the ft subdirectory the au FS

00:22:47,299 --> 00:22:52,460
file system will see that and just like

00:22:50,480 --> 00:22:54,799
whiteout does on a piece of paper we'll

00:22:52,460 --> 00:22:56,210
place that over so the actual original

00:22:54,799 --> 00:22:58,070
file on the base layer is no longer

00:22:56,210 --> 00:23:00,289
accessible now if I wanted to become

00:22:58,070 --> 00:23:02,059
accessible again I jump into this

00:23:00,289 --> 00:23:04,100
directory delete out my whiteout file

00:23:02,059 --> 00:23:06,279
and the base files back and visible

00:23:04,100 --> 00:23:06,279
again

00:23:11,960 --> 00:23:16,100
and again this is another example this

00:23:14,840 --> 00:23:19,249
is when I install may nvidia drivers

00:23:16,100 --> 00:23:21,200
this is the user bin directory and you

00:23:19,249 --> 00:23:23,059
can see that the only programs that have

00:23:21,200 --> 00:23:26,840
been installed since i booted the system

00:23:23,059 --> 00:23:29,659
I installed G FTP I installed Nvidia and

00:23:26,840 --> 00:23:31,909
I installed the tree program that's it

00:23:29,659 --> 00:23:33,440
so no other binaries have been put on my

00:23:31,909 --> 00:23:35,269
system so I don't have to worry that

00:23:33,440 --> 00:23:36,470
somebody stuck something on there my

00:23:35,269 --> 00:23:37,820
sisters decided to play a prank on me

00:23:36,470 --> 00:23:39,169
and install things on my system because

00:23:37,820 --> 00:23:40,820
I can look right there and see ok that's

00:23:39,169 --> 00:23:42,710
all I've got I've got my base system

00:23:40,820 --> 00:23:52,570
which I know what it has and I've got

00:23:42,710 --> 00:23:55,190
that now this folder my editable layer

00:23:52,570 --> 00:23:57,409
when I shut down my system live made

00:23:55,190 --> 00:23:59,450
changes I don't want those to go away I

00:23:57,409 --> 00:24:01,100
want to save those changes so what we do

00:23:59,450 --> 00:24:03,139
is we create a very special type of

00:24:01,100 --> 00:24:05,749
squash file system which is this layer

00:24:03,139 --> 00:24:06,860
in one file so all the changes that

00:24:05,749 --> 00:24:08,779
you've made to your system all your

00:24:06,860 --> 00:24:10,820
config files all your edits if you've

00:24:08,779 --> 00:24:13,279
downloaded some documents that are in

00:24:10,820 --> 00:24:14,480
this directory get saved into one file

00:24:13,279 --> 00:24:15,590
that's in place on your hard drive and

00:24:14,480 --> 00:24:17,059
you can choose wherever you want to save

00:24:15,590 --> 00:24:18,710
it if you want to save it to a USB stick

00:24:17,059 --> 00:24:20,179
you can do that you want to save it to

00:24:18,710 --> 00:24:21,679
your internal Drive you can do that you

00:24:20,179 --> 00:24:24,470
want to save it to a CD you can do that

00:24:21,679 --> 00:24:28,159
you're gonna save that save file on any

00:24:24,470 --> 00:24:30,740
media that you want this file can be

00:24:28,159 --> 00:24:33,200
encrypted if you choose currently we use

00:24:30,740 --> 00:24:34,669
I think it's a EES I think the other

00:24:33,200 --> 00:24:36,249
option is actually des I don't know why

00:24:34,669 --> 00:24:39,440
we still have that in the code but we do

00:24:36,249 --> 00:24:41,629
as I said it can be saved at any at any

00:24:39,440 --> 00:24:43,249
device and when you create a save file

00:24:41,629 --> 00:24:45,230
you just choose a random size you can

00:24:43,249 --> 00:24:47,119
choose ok 512 Meg you can choose a gig

00:24:45,230 --> 00:24:48,230
if later you decide you know what I want

00:24:47,119 --> 00:24:50,149
to throw more stuff in there I want to

00:24:48,230 --> 00:24:53,840
add more to my system you can simply

00:24:50,149 --> 00:24:56,720
make it larger you can have multiple

00:24:53,840 --> 00:24:57,740
save files on your system what this

00:24:56,720 --> 00:25:00,440
allows you to do is when you boot the

00:24:57,740 --> 00:25:02,029
system is puppy will recognize hey

00:25:00,440 --> 00:25:03,679
you've got two different types of save

00:25:02,029 --> 00:25:05,649
files on your system with different

00:25:03,679 --> 00:25:08,749
names which one do you want to load

00:25:05,649 --> 00:25:11,389
puppy by design does not have multi-user

00:25:08,749 --> 00:25:11,629
capability it is one user that's all you

00:25:11,389 --> 00:25:14,509
are

00:25:11,629 --> 00:25:16,610
this allows you to sort of have a

00:25:14,509 --> 00:25:18,710
multi-user system unfortunately you have

00:25:16,610 --> 00:25:20,090
to reboot so you can have a system where

00:25:18,710 --> 00:25:24,520
you've got all your changes saved in

00:25:20,090 --> 00:25:27,700
your safe file someone else wife friend

00:25:24,520 --> 00:25:29,740
girlfriend brother sister can also use

00:25:27,700 --> 00:25:33,730
the same system and all their changes

00:25:29,740 --> 00:25:34,780
can be in their own safe file again

00:25:33,730 --> 00:25:37,900
that's why you would want encryption so

00:25:34,780 --> 00:25:40,780
nobody messes with your stuff now these

00:25:37,900 --> 00:25:44,830
changes this directory the pop ro

00:25:40,780 --> 00:25:47,050
directory as a user by default it will

00:25:44,830 --> 00:25:48,940
save every 30 minutes so this directory

00:25:47,050 --> 00:25:50,800
any changes you make will be saved back

00:25:48,940 --> 00:25:52,840
to your safe file you can change that if

00:25:50,800 --> 00:25:54,160
you like you can change it to every

00:25:52,840 --> 00:25:55,750
minute although I wouldn't suggest it

00:25:54,160 --> 00:25:57,070
because you're gonna waste a lot of time

00:25:55,750 --> 00:25:59,170
and a lot of CPU power just writing

00:25:57,070 --> 00:26:00,790
layers or you can set it to every hour

00:25:59,170 --> 00:26:02,950
every three hours or you can set it to

00:26:00,790 --> 00:26:04,870
never if you want to just use your

00:26:02,950 --> 00:26:05,890
system and you don't care what happens

00:26:04,870 --> 00:26:07,600
you want to be able to shut down your

00:26:05,890 --> 00:26:09,220
system and blow everything out so the

00:26:07,600 --> 00:26:12,280
next day you start it it's clean and

00:26:09,220 --> 00:26:14,410
fresh you just choose never save and it

00:26:12,280 --> 00:26:16,900
won't so you can set up your system and

00:26:14,410 --> 00:26:17,980
then never change it again so nothing

00:26:16,900 --> 00:26:20,020
that happens on your system is ever

00:26:17,980 --> 00:26:22,120
gonna be saved no browser history no

00:26:20,020 --> 00:26:24,370
nothing and because we're writing always

00:26:22,120 --> 00:26:26,380
to ram nothing is getting saved into any

00:26:24,370 --> 00:26:28,000
cache on your hard disk so you don't

00:26:26,380 --> 00:26:30,340
have to worry about someone coming along

00:26:28,000 --> 00:26:31,929
later and going I think this guy's up to

00:26:30,340 --> 00:26:34,360
no good Noah you've been being a naughty

00:26:31,929 --> 00:26:35,559
boy I can't take his hard drive and try

00:26:34,360 --> 00:26:38,320
to see what he's been doing

00:26:35,559 --> 00:26:40,540
because after all that layer is in RAM

00:26:38,320 --> 00:26:42,790
and when he shuts down his system it's

00:26:40,540 --> 00:26:43,929
gone yes I understand there are cold

00:26:42,790 --> 00:26:46,390
boot attacks where you can take an

00:26:43,929 --> 00:26:47,679
aerosol can and stick it upside down but

00:26:46,390 --> 00:26:49,300
if you're that paranoid you've got

00:26:47,679 --> 00:26:51,510
bigger problems than what puppy is gonna

00:26:49,300 --> 00:26:51,510
soften

00:26:55,490 --> 00:27:01,820
now added benefit as I said this is

00:26:59,899 --> 00:27:04,250
saved to a single file on your system I

00:27:01,820 --> 00:27:07,130
have a cron job that once a day will

00:27:04,250 --> 00:27:09,950
make a backup copy of that save file all

00:27:07,130 --> 00:27:12,950
it does is copy it from the main disk to

00:27:09,950 --> 00:27:15,470
an external removable disk so my system

00:27:12,950 --> 00:27:18,799
to back it up all I have to do is make a

00:27:15,470 --> 00:27:21,200
copy of that save file if my drive dies

00:27:18,799 --> 00:27:23,059
put a new drive in I take that backup

00:27:21,200 --> 00:27:24,830
copy the save file put it back on my

00:27:23,059 --> 00:27:29,390
main drive and instantly my system is

00:27:24,830 --> 00:27:31,880
back up and running that I'm aware of no

00:27:29,390 --> 00:27:34,909
other Linux system allows you to be able

00:27:31,880 --> 00:27:36,020
to backup and restore that quickly most

00:27:34,909 --> 00:27:37,490
of the time you have to reinstall your

00:27:36,020 --> 00:27:38,899
whole s and you have to go in and

00:27:37,490 --> 00:27:40,130
download all your programs again then

00:27:38,899 --> 00:27:41,809
you have to go in and reconfigure all

00:27:40,130 --> 00:27:43,460
your programs again because everything

00:27:41,809 --> 00:27:45,380
is contained within that save file as

00:27:43,460 --> 00:27:47,659
long as you have a copy of it you can

00:27:45,380 --> 00:27:48,260
restore your system by simply dragging

00:27:47,659 --> 00:27:50,149
and dropping

00:27:48,260 --> 00:27:51,409
I wouldn't recommend dragging and

00:27:50,149 --> 00:27:53,270
dropping because that means you have to

00:27:51,409 --> 00:27:55,039
remember to do it it's easiest you write

00:27:53,270 --> 00:27:59,750
a simple cron job just to make a copy of

00:27:55,039 --> 00:28:02,120
it every once in a while I tell people

00:27:59,750 --> 00:28:03,470
this and usually most people initially

00:28:02,120 --> 00:28:05,779
don't believe me they're like no you

00:28:03,470 --> 00:28:07,789
can't do that it's not possible because

00:28:05,779 --> 00:28:10,010
of the way the different layers work it

00:28:07,789 --> 00:28:12,890
is possible it makes it very easy and

00:28:10,010 --> 00:28:14,480
very seamless it's also really

00:28:12,890 --> 00:28:16,340
convenient when I want to move from one

00:28:14,480 --> 00:28:18,260
system to another if I put a new Drive

00:28:16,340 --> 00:28:21,080
in my system I don't have to worry about

00:28:18,260 --> 00:28:23,450
doing a whole image of my drive again

00:28:21,080 --> 00:28:26,140
one file you're copying it's about as

00:28:23,450 --> 00:28:26,140
simple as it can get

00:28:30,550 --> 00:28:37,340
okay moving along wolf wolf is how we

00:28:34,670 --> 00:28:41,390
actually build puppy it is a shell

00:28:37,340 --> 00:28:43,520
script you can build puppy out of many

00:28:41,390 --> 00:28:45,620
distributions puppy at its core is more

00:28:43,520 --> 00:28:47,870
of a design philosophy of how to build a

00:28:45,620 --> 00:28:49,630
Linux distribution right now we

00:28:47,870 --> 00:28:51,620
currently support those distributions

00:28:49,630 --> 00:28:53,240
there are people that are working on

00:28:51,620 --> 00:28:56,150
others

00:28:53,240 --> 00:28:59,360
what puppy does is we use the binaries

00:28:56,150 --> 00:29:01,160
from other distributions we do this for

00:28:59,360 --> 00:29:02,810
several reasons one it means it has less

00:29:01,160 --> 00:29:05,030
work for us to do because we don't have

00:29:02,810 --> 00:29:06,860
to compile every package - it means you

00:29:05,030 --> 00:29:09,320
as the users have the added benefit of

00:29:06,860 --> 00:29:11,060
having the entire software catalog that

00:29:09,320 --> 00:29:13,190
another distribution has already put

00:29:11,060 --> 00:29:15,410
forth the effort on we there's no reason

00:29:13,190 --> 00:29:17,450
for us to spend our time duplicating the

00:29:15,410 --> 00:29:19,070
effort that someone else has done so if

00:29:17,450 --> 00:29:21,470
you build a puppy or someone builds a

00:29:19,070 --> 00:29:23,090
puppy out of Debian and you want to

00:29:21,470 --> 00:29:24,740
install a package all you have to do is

00:29:23,090 --> 00:29:27,520
go to Debian org download the package

00:29:24,740 --> 00:29:30,440
install it and it's going to run now

00:29:27,520 --> 00:29:32,330
because puppy is minimal you will

00:29:30,440 --> 00:29:34,010
probably have to install more than just

00:29:32,330 --> 00:29:36,890
a package because we probably do not

00:29:34,010 --> 00:29:40,700
have these libraries that it's going to

00:29:36,890 --> 00:29:42,620
be needing because we strip out anything

00:29:40,700 --> 00:29:45,530
that you don't need to run your system

00:29:42,620 --> 00:29:48,080
so if you go grab I don't give me a

00:29:45,530 --> 00:29:50,090
program no okay you want to go grab

00:29:48,080 --> 00:29:51,860
 is going to rely on a lot of

00:29:50,090 --> 00:29:54,200
different image libraries that may or

00:29:51,860 --> 00:29:56,030
may not be on installed in the actual

00:29:54,200 --> 00:29:57,650
puppy version that you're using so you

00:29:56,030 --> 00:29:59,270
may have to actually download the Debian

00:29:57,650 --> 00:30:00,890
packages for those libraries as well

00:29:59,270 --> 00:30:02,920
it's kind of one of the sticking points

00:30:00,890 --> 00:30:04,850
we're working on dependency resolution

00:30:02,920 --> 00:30:06,950
but we kind of have the fun because

00:30:04,850 --> 00:30:08,150
every distribution kind of does packages

00:30:06,950 --> 00:30:10,430
in their libraries a little differently

00:30:08,150 --> 00:30:13,780
and we're operating off of a one script

00:30:10,430 --> 00:30:13,780
to do all these different distributions

00:30:13,840 --> 00:30:18,320
like I said you will you can build it

00:30:16,610 --> 00:30:21,050
out of all these so all of the binaries

00:30:18,320 --> 00:30:23,210
in this system right here this is

00:30:21,050 --> 00:30:24,230
actually the alpha version of the next

00:30:23,210 --> 00:30:28,010
version that we're coming out with which

00:30:24,230 --> 00:30:29,930
is based on Slackware 14:1 so this is

00:30:28,010 --> 00:30:31,880
binary compatible with every package

00:30:29,930 --> 00:30:33,410
with Slackware 14:1 so if i want to

00:30:31,880 --> 00:30:35,660
install package and we don't have a

00:30:33,410 --> 00:30:37,460
native Puppy Linux package for it I can

00:30:35,660 --> 00:30:39,290
go to any slot Slackware repo I can grab

00:30:37,460 --> 00:30:41,980
the slack build script and I can build

00:30:39,290 --> 00:30:41,980
it and it will run

00:30:42,529 --> 00:30:46,820
live CDs used to be around 100 to 130

00:30:45,320 --> 00:30:49,730
meg right now we're kind of pushing

00:30:46,820 --> 00:30:50,990
around 150 meg we actually have some

00:30:49,730 --> 00:30:52,220
people in our community which are very

00:30:50,990 --> 00:30:54,159
upset that we're getting to that level

00:30:52,220 --> 00:30:56,299
they want to kind of bring it back down

00:30:54,159 --> 00:31:00,309
personally I don't think it's that much

00:30:56,299 --> 00:31:00,309
of an issue an extra 20 Meg on an ISL

00:31:01,389 --> 00:31:10,850
so yeah well if we ever get to a DVD we

00:31:06,169 --> 00:31:14,120
have failed horribly this is actually

00:31:10,850 --> 00:31:16,610
just a picture of wolf running and you

00:31:14,120 --> 00:31:18,889
can see here we choose what you know

00:31:16,610 --> 00:31:20,210
binary what we're going to call it where

00:31:18,889 --> 00:31:21,500
we're gonna pull our packages from what

00:31:20,210 --> 00:31:23,690
compatible district we're gonna be and

00:31:21,500 --> 00:31:25,490
this script will go out grab the

00:31:23,690 --> 00:31:27,830
packages that it needs from whatever

00:31:25,490 --> 00:31:29,600
distribution and then take that along

00:31:27,830 --> 00:31:33,740
with all of the scripts that actually

00:31:29,600 --> 00:31:35,480
make puppy work puppy works off of shell

00:31:33,740 --> 00:31:39,769
scripts that is the heart and soul of

00:31:35,480 --> 00:31:41,509
puppy because of that and I'll touch on

00:31:39,769 --> 00:31:43,179
this if you want to get involved in

00:31:41,509 --> 00:31:45,320
puppy all you need to know is bash

00:31:43,179 --> 00:31:46,909
because we do not have complicated

00:31:45,320 --> 00:31:48,559
system everything with how puppy works

00:31:46,909 --> 00:31:50,179
is controlled through shell scripts the

00:31:48,559 --> 00:31:51,679
layering of different layers in the file

00:31:50,179 --> 00:31:53,539
system the saving of the different

00:31:51,679 --> 00:31:55,730
layers the loading in the RAM all of

00:31:53,539 --> 00:31:58,009
that is done specifically through shell

00:31:55,730 --> 00:32:00,830
scripts now those of you that are

00:31:58,009 --> 00:32:03,139
systemd fans will hate this because we

00:32:00,830 --> 00:32:05,299
use the older sis V in it and I don't

00:32:03,139 --> 00:32:06,799
see us moving anytime soon because we

00:32:05,299 --> 00:32:08,509
want to do everything by shell script we

00:32:06,799 --> 00:32:09,889
want it to be easier to use and easier

00:32:08,509 --> 00:32:13,610
to edit if you want to hack around with

00:32:09,889 --> 00:32:17,509
it okay

00:32:13,610 --> 00:32:19,549
benefits again you're running from RAM I

00:32:17,509 --> 00:32:22,639
don't care how would your RAM is it's

00:32:19,549 --> 00:32:24,559
faster whatever Drive you have even if

00:32:22,639 --> 00:32:28,370
you have an SSD your RAM is faster

00:32:24,559 --> 00:32:29,690
there's just no way around it flexible

00:32:28,370 --> 00:32:31,759
due to installation options again you

00:32:29,690 --> 00:32:34,580
can install it to anything you want if

00:32:31,759 --> 00:32:38,570
you have a medium lying around go for it

00:32:34,580 --> 00:32:40,429
USB Drive somewhere go for it I have

00:32:38,570 --> 00:32:41,360
actually installed puppy on a zip disk

00:32:40,429 --> 00:32:42,799
just because I didn't believe it would

00:32:41,360 --> 00:32:46,789
actually work and someone told me that

00:32:42,799 --> 00:32:48,679
it would and I lost the bet it did not

00:32:46,789 --> 00:32:51,500
load very fast because it's are not

00:32:48,679 --> 00:32:53,090
exactly fast medium but it did work so

00:32:51,500 --> 00:32:54,169
if you know someone that lives in a

00:32:53,090 --> 00:32:55,860
third-world country and they have an

00:32:54,169 --> 00:33:00,480
overabundance supply of zip disks

00:32:55,860 --> 00:33:02,040
this is the distro for them as I

00:33:00,480 --> 00:33:04,440
mentioned compromise and corruption

00:33:02,040 --> 00:33:06,870
protection because any change to the

00:33:04,440 --> 00:33:10,700
system occurs in that one special layer

00:33:06,870 --> 00:33:12,900
you can see when something changes if I

00:33:10,700 --> 00:33:15,090
download a bad package I install a bad

00:33:12,900 --> 00:33:17,130
package it is contained within that

00:33:15,090 --> 00:33:19,860
layer I don't have to go hunting through

00:33:17,130 --> 00:33:22,620
my file system and pull the actual file

00:33:19,860 --> 00:33:24,090
list off of a web server to find out

00:33:22,620 --> 00:33:25,740
what files I need to go in and try to

00:33:24,090 --> 00:33:28,350
delete they're all there they're all

00:33:25,740 --> 00:33:30,570
self-contained if my system is

00:33:28,350 --> 00:33:32,400
compromised well any change is going to

00:33:30,570 --> 00:33:38,179
be isolated to that directory so I can

00:33:32,400 --> 00:33:41,250
go in and I can take it out yes you can

00:33:38,179 --> 00:33:42,690
making layers is actually very CPU

00:33:41,250 --> 00:33:44,370
intensive because of the compression the

00:33:42,690 --> 00:33:46,049
way it works but you can create layers

00:33:44,370 --> 00:33:48,030
what a lot of the developers will

00:33:46,049 --> 00:33:51,600
actually do is will take the stock

00:33:48,030 --> 00:33:52,710
system will install it we will then take

00:33:51,600 --> 00:33:55,020
all the different programs that we

00:33:52,710 --> 00:33:57,360
personally want to use we'll then add

00:33:55,020 --> 00:33:58,890
them into one light will then take that

00:33:57,360 --> 00:34:01,220
layer and bundle that with our base

00:33:58,890 --> 00:34:04,230
layer and make a brand new base layer

00:34:01,220 --> 00:34:05,549
for the average user it is possible we

00:34:04,230 --> 00:34:07,260
actually have a script which will help

00:34:05,549 --> 00:34:09,570
you do that

00:34:07,260 --> 00:34:13,080
it's simply called edit s FS we're

00:34:09,570 --> 00:34:14,669
really good with names and it will take

00:34:13,080 --> 00:34:16,710
your s FS file and it will allow you to

00:34:14,669 --> 00:34:19,409
edit it other than that that is the only

00:34:16,710 --> 00:34:21,679
way to edit an s FS layer because what

00:34:19,409 --> 00:34:24,359
it does is it creates an even higher

00:34:21,679 --> 00:34:25,470
layer in RAM which is standalone and

00:34:24,359 --> 00:34:26,970
kind of locked off its kind of like a

00:34:25,470 --> 00:34:29,190
sandbox for your style file system in a

00:34:26,970 --> 00:34:30,780
way you can make any changes you want

00:34:29,190 --> 00:34:33,570
there and then save it and it will then

00:34:30,780 --> 00:34:34,710
create a new version of that s FS

00:34:33,570 --> 00:34:36,480
package which then you can do whatever

00:34:34,710 --> 00:34:38,820
you want with so you can go in and tweak

00:34:36,480 --> 00:34:40,919
them and change them so you know if you

00:34:38,820 --> 00:34:42,510
have custom setup that you want and you

00:34:40,919 --> 00:34:43,859
don't want to deal with a save file you

00:34:42,510 --> 00:34:46,490
can kind of bundle that all the way in

00:34:43,859 --> 00:34:46,490
with your base layer

00:34:52,240 --> 00:34:56,899
yes that is actually how we build the

00:34:54,710 --> 00:34:59,690
Puppy Linux versions forearm is we just

00:34:56,899 --> 00:35:02,089
do cross compiling because has anybody

00:34:59,690 --> 00:35:04,220
tried to compile on a Raspberry Pi ok

00:35:02,089 --> 00:35:06,109
don't waste your time you have I feel

00:35:04,220 --> 00:35:10,220
sorry for you you should not have done

00:35:06,109 --> 00:35:13,990
that yes we can't cross compile you just

00:35:10,220 --> 00:35:17,119
have to load all the appropriate stuff

00:35:13,990 --> 00:35:20,029
all right okay so these are all our

00:35:17,119 --> 00:35:27,529
benefits now downside there's a big one

00:35:20,029 --> 00:35:31,579
that everyone likes to bring up puppy

00:35:27,529 --> 00:35:34,279
runs as route this is getting better we

00:35:31,579 --> 00:35:35,630
now have it so when you start up all of

00:35:34,279 --> 00:35:38,089
your internet applications will run as a

00:35:35,630 --> 00:35:40,880
non privilege user called spot you can

00:35:38,089 --> 00:35:44,059
manually start any program you want as a

00:35:40,880 --> 00:35:45,529
non privileged user but by default puppy

00:35:44,059 --> 00:35:48,619
runs his route this comes from its

00:35:45,529 --> 00:35:50,240
original purpose of single user single

00:35:48,619 --> 00:35:53,420
purpose let's get old hardware back up

00:35:50,240 --> 00:35:54,859
and running you know it was designed for

00:35:53,420 --> 00:35:56,150
the guy who wants to get his grandmother

00:35:54,859 --> 00:35:58,010
on linux because he really doesn't like

00:35:56,150 --> 00:35:59,150
that she's on Windows and she's not

00:35:58,010 --> 00:36:00,829
really gonna be doing much other than

00:35:59,150 --> 00:36:03,319
watching cat videos on YouTube and

00:36:00,829 --> 00:36:04,460
sending emails around so it doesn't

00:36:03,319 --> 00:36:06,770
matter if she has root because she's

00:36:04,460 --> 00:36:09,049
been running Windows is root for ever so

00:36:06,770 --> 00:36:10,490
there's no real difference for us Linux

00:36:09,049 --> 00:36:12,170
guys obviously we hear that you're

00:36:10,490 --> 00:36:13,700
running is root and you know grab the

00:36:12,170 --> 00:36:16,460
pitchforks to start the bonfires because

00:36:13,700 --> 00:36:19,250
we're going after some people so we're

00:36:16,460 --> 00:36:22,190
working on getting to this the latest

00:36:19,250 --> 00:36:25,160
version of fat dog 64 all the user

00:36:22,190 --> 00:36:28,160
applications start a spot especially all

00:36:25,160 --> 00:36:31,309
your internet applications the downside

00:36:28,160 --> 00:36:32,420
is if you are running puppy and you have

00:36:31,309 --> 00:36:33,740
a normal index to de-stress say you're

00:36:32,420 --> 00:36:35,150
running arch of a door on your system

00:36:33,740 --> 00:36:36,920
and you're you know playing around with

00:36:35,150 --> 00:36:38,450
a puppy on the side if you're writing

00:36:36,920 --> 00:36:40,400
files to any of your removable media

00:36:38,450 --> 00:36:42,410
realize that the permissions on those

00:36:40,400 --> 00:36:43,670
files are all going to be root so when

00:36:42,410 --> 00:36:45,349
you jump back to your normal

00:36:43,670 --> 00:36:47,329
distribution and you then let's say

00:36:45,349 --> 00:36:48,589
you've you know save some music and

00:36:47,329 --> 00:36:49,789
you're the okay I'm you know my art

00:36:48,589 --> 00:36:51,170
system let me go play that music that I

00:36:49,789 --> 00:36:52,520
got the other day oh wait I can't

00:36:51,170 --> 00:36:54,049
because the permissions on those music

00:36:52,520 --> 00:36:59,089
files are root so you'd have to go in

00:36:54,049 --> 00:37:00,260
and bring them back to modem so yeah run

00:36:59,089 --> 00:37:02,550
as root that's the biggest complaint we

00:37:00,260 --> 00:37:05,400
get the second biggest complaint is

00:37:02,550 --> 00:37:08,070
package management we do have a native

00:37:05,400 --> 00:37:10,530
package management system personally I

00:37:08,070 --> 00:37:11,640
think it's horrible and even pop you

00:37:10,530 --> 00:37:14,340
guys can see this later do not yell at

00:37:11,640 --> 00:37:16,050
me because you know that's how I feel we

00:37:14,340 --> 00:37:18,330
have what's called a dot pet file again

00:37:16,050 --> 00:37:21,180
we're really good with names it's

00:37:18,330 --> 00:37:22,680
basically just a compressed tar.gz file

00:37:21,180 --> 00:37:25,130
with the necessary information of where

00:37:22,680 --> 00:37:27,240
it's going to get saved

00:37:25,130 --> 00:37:29,430
we don't really address this issue

00:37:27,240 --> 00:37:30,270
because we're basing puppy off of other

00:37:29,430 --> 00:37:31,800
distributions

00:37:30,270 --> 00:37:33,660
you can grab packages from other

00:37:31,800 --> 00:37:35,760
distributions if you need it in the

00:37:33,660 --> 00:37:37,110
official release slack oh if you open up

00:37:35,760 --> 00:37:39,660
the package manager you actually have

00:37:37,110 --> 00:37:41,130
the option of searching the official

00:37:39,660 --> 00:37:44,130
Slackware repositories for whatever you

00:37:41,130 --> 00:37:45,480
want so it's kind of a problem that we

00:37:44,130 --> 00:37:47,310
address we're like yeah it's a problem

00:37:45,480 --> 00:37:48,360
but it's not really that much of a

00:37:47,310 --> 00:37:49,530
problem because you're just going to

00:37:48,360 --> 00:37:53,400
offering Slackware anyway so we're not

00:37:49,530 --> 00:37:54,840
going to waste the time no central

00:37:53,400 --> 00:37:57,930
location for information and packages

00:37:54,840 --> 00:37:59,940
etc this is my personal beef puppy stuff

00:37:57,930 --> 00:38:01,290
is scattered all over the web and you

00:37:59,940 --> 00:38:02,720
will see this when I get to where the

00:38:01,290 --> 00:38:05,040
sources are if you want more information

00:38:02,720 --> 00:38:06,390
there is stuff every we have official

00:38:05,040 --> 00:38:10,170
packages that are all rapidshare right

00:38:06,390 --> 00:38:12,180
now yeah it's it's a bone of contention

00:38:10,170 --> 00:38:13,800
with me there are a few of us that are

00:38:12,180 --> 00:38:15,810
working at trying to kind of bring

00:38:13,800 --> 00:38:17,220
everything under one umbrella to create

00:38:15,810 --> 00:38:20,520
a CDN where we can distribute everything

00:38:17,220 --> 00:38:22,350
seamlessly but a lot of the people that

00:38:20,520 --> 00:38:24,060
are developers like myself I originally

00:38:22,350 --> 00:38:26,070
got into it because it was fun it's a

00:38:24,060 --> 00:38:27,660
fun hobby for me this is not a job this

00:38:26,070 --> 00:38:29,460
is something I do because I enjoy it so

00:38:27,660 --> 00:38:30,900
when you're doing something strictly

00:38:29,460 --> 00:38:31,800
because it's enjoyable and then someone

00:38:30,900 --> 00:38:33,390
comes up to you and goes hey I know

00:38:31,800 --> 00:38:34,500
you're having fun but I want you to have

00:38:33,390 --> 00:38:36,330
fun I want you to do what I think you

00:38:34,500 --> 00:38:38,070
want to do you're not really as likely

00:38:36,330 --> 00:38:40,680
to jump on that

00:38:38,070 --> 00:38:43,500
so advancement is it's a little bit on

00:38:40,680 --> 00:38:46,560
the slow slow side the coding style

00:38:43,500 --> 00:38:48,570
again most of us that work in puppy we

00:38:46,560 --> 00:38:51,030
are not professional coders we are

00:38:48,570 --> 00:38:52,800
amateurs as a result if you go and look

00:38:51,030 --> 00:38:58,040
through our shell scripts you will be

00:38:52,800 --> 00:39:00,180
horrified then there was it was a

00:38:58,040 --> 00:39:01,500
probably bout a year ago I was going

00:39:00,180 --> 00:39:03,660
through one of them and someone had

00:39:01,500 --> 00:39:05,730
actually in the comments made notes to

00:39:03,660 --> 00:39:07,500
themselves about things they needed to

00:39:05,730 --> 00:39:09,090
get from the grocery store because

00:39:07,500 --> 00:39:10,140
apparently they were on their system and

00:39:09,090 --> 00:39:11,700
they were doing this and they had all I

00:39:10,140 --> 00:39:12,810
got to remember to do that so they saved

00:39:11,700 --> 00:39:14,130
it there is no notes because it was on

00:39:12,810 --> 00:39:15,540
their screen so they can go to it later

00:39:14,130 --> 00:39:18,830
they forgot this

00:39:15,540 --> 00:39:21,870
and it got saved in and it got shipped

00:39:18,830 --> 00:39:23,730
of course in other cases certain shell

00:39:21,870 --> 00:39:25,650
scripts you have no comments whatsoever

00:39:23,730 --> 00:39:26,730
so you just see the code in the less you

00:39:25,650 --> 00:39:28,740
can step through it in your head you're

00:39:26,730 --> 00:39:30,120
gonna go okay that does I don't know

00:39:28,740 --> 00:39:32,420
what that does but that's probably

00:39:30,120 --> 00:39:36,150
important I'm not gonna mess with it

00:39:32,420 --> 00:39:39,840
we are working at getting that better

00:39:36,150 --> 00:39:43,380
we just recently finally got on git so

00:39:39,840 --> 00:39:46,410
we now actually yes I'm so happy we now

00:39:43,380 --> 00:39:48,000
actually can do real development with

00:39:46,410 --> 00:39:49,500
multiple people instead of hey here's a

00:39:48,000 --> 00:39:50,940
new file the script that I wrote I'm

00:39:49,500 --> 00:39:52,470
gonna upload it to the forum so you guys

00:39:50,940 --> 00:39:56,970
can download it and maybe somebody will

00:39:52,470 --> 00:39:58,470
use it and maybe not as I said a lot of

00:39:56,970 --> 00:40:01,770
people say puppy is ugly and I gotta

00:39:58,470 --> 00:40:03,540
confess out-of-the-box JWM is not the

00:40:01,770 --> 00:40:05,280
most beautiful thing in the world we

00:40:03,540 --> 00:40:07,560
have kind of gotten spoiled with gnome

00:40:05,280 --> 00:40:10,200
and KDE and you kind of expect there to

00:40:07,560 --> 00:40:11,070
be some flair well because we're trying

00:40:10,200 --> 00:40:12,900
to keep it simple

00:40:11,070 --> 00:40:14,670
you're gonna sacrifice flair now there

00:40:12,900 --> 00:40:17,550
are some things you can do to make puppy

00:40:14,670 --> 00:40:19,950
a lot more attractive with it not too

00:40:17,550 --> 00:40:22,170
much effort this is actually the newest

00:40:19,950 --> 00:40:24,180
version and this is what I am running

00:40:22,170 --> 00:40:27,480
this is the six Oh alpha and personally

00:40:24,180 --> 00:40:30,120
I don't think that looks too bad the

00:40:27,480 --> 00:40:35,100
icon set okay maybe it's a little cheesy

00:40:30,120 --> 00:40:37,320
but it's simple in that way I like it if

00:40:35,100 --> 00:40:40,050
you want kind of a little more Flair

00:40:37,320 --> 00:40:41,640
that is JWM you can go with an open box

00:40:40,050 --> 00:40:43,950
set up this is a set up a mine a while

00:40:41,640 --> 00:40:47,670
ago I just kind of went crazy with kind

00:40:43,950 --> 00:40:48,870
of having icons everywhere but it's JD

00:40:47,670 --> 00:40:50,520
I'm Evan with attempt to panel down at

00:40:48,870 --> 00:40:54,900
the bottom this is G column on the side

00:40:50,520 --> 00:40:57,510
LX panel those are W bar it's basically

00:40:54,900 --> 00:41:00,870
a launch bar for drives attached and

00:40:57,510 --> 00:41:04,770
quick applications and a DeLorean

00:41:00,870 --> 00:41:05,180
because we don't need roads we do it our

00:41:04,770 --> 00:41:09,300
own way

00:41:05,180 --> 00:41:12,860
screw roads we're doing that way yes and

00:41:09,300 --> 00:41:12,860
mr. fusion don't forget mr. fusion

00:41:14,260 --> 00:41:19,820
this is actually it scales very very

00:41:17,300 --> 00:41:21,290
badly and it's very very dark and you

00:41:19,820 --> 00:41:24,550
can't really see what the lights on this

00:41:21,290 --> 00:41:26,780
is actually off of my six screen setup

00:41:24,550 --> 00:41:30,440
but again it doesn't scale very well but

00:41:26,780 --> 00:41:34,790
that is that is it nice empty not much

00:41:30,440 --> 00:41:39,860
there the full resolution on that system

00:41:34,790 --> 00:41:42,500
is 57 60 by 2160 which then when I jump

00:41:39,860 --> 00:41:47,450
to this netbook which is 1024 by 600 it

00:41:42,500 --> 00:41:48,710
works so bad because everything is right

00:41:47,450 --> 00:41:56,810
there and I'm like wait I need I need

00:41:48,710 --> 00:42:00,020
another screen over here alright so

00:41:56,810 --> 00:42:01,370
getting involved like I said if you're

00:42:00,020 --> 00:42:02,660
interested in getting to you know

00:42:01,370 --> 00:42:04,310
involved or you just want to poke around

00:42:02,660 --> 00:42:05,360
all you need to know is bash you don't

00:42:04,310 --> 00:42:07,820
need to know Perl you don't need to know

00:42:05,360 --> 00:42:10,550
Python it's bash it's about as simple as

00:42:07,820 --> 00:42:12,650
you can get here is an example of our

00:42:10,550 --> 00:42:14,690
wonderful resources we have our official

00:42:12,650 --> 00:42:17,060
site which is puppyland XCOM we have an

00:42:14,690 --> 00:42:18,650
official community site which is org we

00:42:17,060 --> 00:42:21,350
have the developers blog who's now

00:42:18,650 --> 00:42:23,720
retired which is BK home org we have an

00:42:21,350 --> 00:42:27,020
official forum on murga linux we have a

00:42:23,720 --> 00:42:29,930
backup forum on dot info we have a wiki

00:42:27,020 --> 00:42:31,250
on org we have an official search page I

00:42:29,930 --> 00:42:32,960
don't really know why we have an

00:42:31,250 --> 00:42:34,640
official search page but all it is is it

00:42:32,960 --> 00:42:37,670
just searches with the Google tag of

00:42:34,640 --> 00:42:41,000
site dot from Burger Linux calm so

00:42:37,670 --> 00:42:43,010
really it's just a Google search we have

00:42:41,000 --> 00:42:46,460
our github official repo and we have our

00:42:43,010 --> 00:42:48,980
wolf community edition mailing list as

00:42:46,460 --> 00:42:50,300
far as IRC born Puppy Linux there's

00:42:48,980 --> 00:42:52,910
really nobody there I think there's

00:42:50,300 --> 00:42:54,350
maybe like 20 people because it's kind

00:42:52,910 --> 00:42:56,510
of a hobby for most people they're not

00:42:54,350 --> 00:42:58,460
sitting at their computer all day so you

00:42:56,510 --> 00:43:01,000
can leave people messages and they'll

00:42:58,460 --> 00:43:05,900
get back to you when you're not around

00:43:01,000 --> 00:43:08,750
me this is my site q56 sh all of these

00:43:05,900 --> 00:43:11,090
slides will be uploaded there probably

00:43:08,750 --> 00:43:12,710
by the end of this weekend it depends

00:43:11,090 --> 00:43:15,020
how good the internet connection is here

00:43:12,710 --> 00:43:16,820
at the hotel I will try to upload them

00:43:15,020 --> 00:43:17,780
and now I have a post on the main page

00:43:16,820 --> 00:43:20,870
so you can get him so all these will be

00:43:17,780 --> 00:43:22,310
available email address you're gonna

00:43:20,870 --> 00:43:23,990
notice the star there that's because you

00:43:22,310 --> 00:43:26,270
can put anything in from the @ sign and

00:43:23,990 --> 00:43:27,170
I will get it you can put hey you you

00:43:26,270 --> 00:43:29,270
can put that guy

00:43:27,170 --> 00:43:31,640
you can put I think you are a bad

00:43:29,270 --> 00:43:34,730
speaker and I will get it

00:43:31,640 --> 00:43:36,680
Twitter handles q5 sis shameless plug as

00:43:34,730 --> 00:43:38,089
I said I am one of the producers with a

00:43:36,680 --> 00:43:40,910
Jupiter Broadcasting for the Linux

00:43:38,089 --> 00:43:43,400
action show and felonious unplugged if

00:43:40,910 --> 00:43:46,190
any of you are involved with or know any

00:43:43,400 --> 00:43:48,890
projects that you think should get some

00:43:46,190 --> 00:43:52,280
attention have them contact me at that

00:43:48,890 --> 00:43:54,230
email address we desperately want to

00:43:52,280 --> 00:43:55,819
actually reach out and get to know some

00:43:54,230 --> 00:43:59,869
of the smaller projects that don't get

00:43:55,819 --> 00:44:03,680
the attention so send me a message so

00:43:59,869 --> 00:44:17,000
that is that's the talk I believe yep

00:44:03,680 --> 00:44:18,950
that's it so any questions yes well the

00:44:17,000 --> 00:44:23,420
version that I put out with own cloud

00:44:18,950 --> 00:44:25,490
own cloud runs as an on root user so

00:44:23,420 --> 00:44:27,470
that wasn't as much of an issue I would

00:44:25,490 --> 00:44:29,990
not personally use puppy as a server

00:44:27,470 --> 00:44:33,650
unless you're just hosting something for

00:44:29,990 --> 00:44:35,569
somebody that you know this is more of a

00:44:33,650 --> 00:44:50,630
desktop use only I wouldn't recommend it

00:44:35,569 --> 00:44:51,530
for anything outside that well okay I'm

00:44:50,630 --> 00:44:54,140
gonna answer that question another

00:44:51,530 --> 00:44:57,369
question a ufs comes configured by

00:44:54,140 --> 00:44:59,540
default in puppy the question was you

00:44:57,369 --> 00:45:02,000
know with the au FS with the layered

00:44:59,540 --> 00:45:04,970
file system how does that work with

00:45:02,000 --> 00:45:08,420
puppy we set it up for you now if you

00:45:04,970 --> 00:45:10,069
want to compile your own kernel a newer

00:45:08,420 --> 00:45:13,040
version you're going to have to patch

00:45:10,069 --> 00:45:14,809
your kernel for the layered file system

00:45:13,040 --> 00:45:17,480
it does not come in mainline kernel

00:45:14,809 --> 00:45:20,780
there has been discussion about working

00:45:17,480 --> 00:45:24,280
that in when that's gonna happen I don't

00:45:20,780 --> 00:45:26,420
know send leanness a question and ask

00:45:24,280 --> 00:45:28,760
but yes as far as the layered file

00:45:26,420 --> 00:45:30,950
system goes we have coordinated all of

00:45:28,760 --> 00:45:32,809
that for you it's already in there it's

00:45:30,950 --> 00:45:34,220
already ready to go any time you need to

00:45:32,809 --> 00:45:36,500
mess with that is if you want to compile

00:45:34,220 --> 00:45:38,950
a custom kernel you want to upgrade so

00:45:36,500 --> 00:45:38,950
on and so forth

00:45:44,150 --> 00:45:50,700
okay the question was about overlay FS

00:45:46,620 --> 00:45:52,950
or butter FS butter FS nao FS do not

00:45:50,700 --> 00:45:54,600
work together there have been reports

00:45:52,950 --> 00:45:57,480
that everything just goes horribly awry

00:45:54,600 --> 00:46:00,480
I've never personally tried it overlay

00:45:57,480 --> 00:46:02,520
FS I don't have any familiarity with the

00:46:00,480 --> 00:46:03,750
actual the one version of a layered file

00:46:02,520 --> 00:46:09,200
system that is in the kernel is the

00:46:03,750 --> 00:46:11,850
older Union file system a lot of the

00:46:09,200 --> 00:46:15,300
version au FS when it was developed have

00:46:11,850 --> 00:46:18,540
been rolled into the original Union FS

00:46:15,300 --> 00:46:20,670
with the Union FS version 2 au FS were

00:46:18,540 --> 00:46:24,270
on version 3 now has more features than

00:46:20,670 --> 00:46:25,860
the current version of Union FS there's

00:46:24,270 --> 00:46:29,100
been dialogue of maybe kind of rolling

00:46:25,860 --> 00:46:31,320
them all together it hasn't happened yet

00:46:29,100 --> 00:46:34,170
could you use another layered file

00:46:31,320 --> 00:46:35,520
system yes how you would be able to work

00:46:34,170 --> 00:46:37,290
that I'm not quite sure because that

00:46:35,520 --> 00:46:39,990
would depend on the intricacies of

00:46:37,290 --> 00:46:42,480
what's different between Union file

00:46:39,990 --> 00:46:45,060
system and a o FS I know off the top of

00:46:42,480 --> 00:46:46,380
my head I believe actually that the

00:46:45,060 --> 00:46:48,660
whiteout files that I was talking about

00:46:46,380 --> 00:46:50,910
are handled differently with a o FS than

00:46:48,660 --> 00:46:53,250
they are with Union FS so any other

00:46:50,910 --> 00:46:54,690
layered file systems it could work yes

00:46:53,250 --> 00:46:55,890
how it could work

00:46:54,690 --> 00:46:58,220
don't really know because never looked

00:46:55,890 --> 00:46:58,220
into it

00:47:10,360 --> 00:47:14,050
you know Etsy and just deleted the

00:47:12,670 --> 00:47:15,400
hostname part will the file system

00:47:14,050 --> 00:47:17,320
automatically do that wait let's change

00:47:15,400 --> 00:47:18,730
form years yes if you are deleting if

00:47:17,320 --> 00:47:20,350
the question was you know if you wanted

00:47:18,730 --> 00:47:22,540
my example of deleting the hostname file

00:47:20,350 --> 00:47:24,280
if you want to delete a file that's in

00:47:22,540 --> 00:47:25,660
your base layer now obviously it's

00:47:24,280 --> 00:47:27,880
read-only you can't actually touch that

00:47:25,660 --> 00:47:29,530
file but when you go into your file

00:47:27,880 --> 00:47:32,380
manager or you drop to the shell and you

00:47:29,530 --> 00:47:34,030
delete that file the file system itself

00:47:32,380 --> 00:47:36,490
will take care of all the technical work

00:47:34,030 --> 00:47:38,530
it will go this user wants to delete

00:47:36,490 --> 00:47:40,750
this file this files in a read-only

00:47:38,530 --> 00:47:42,250
layer I can't touch it so I'm going to

00:47:40,750 --> 00:47:44,410
create the whiteout file in the

00:47:42,250 --> 00:47:46,060
readwrite layer which I will then cover

00:47:44,410 --> 00:47:47,620
up that file so when the users looking

00:47:46,060 --> 00:47:50,770
at their system and programs are looking

00:47:47,620 --> 00:47:52,330
they don't see it

00:47:50,770 --> 00:47:54,120
so yes you don't actually have to do

00:47:52,330 --> 00:47:56,440
that a ofs handles all that on your own

00:47:54,120 --> 00:47:58,330
that's why I said there's some things I

00:47:56,440 --> 00:47:59,950
know how it works I don't know the

00:47:58,330 --> 00:48:02,170
specifics of exactly how that

00:47:59,950 --> 00:48:05,950
implementation is carried out at that

00:48:02,170 --> 00:48:19,000
level but yes that does happen any other

00:48:05,950 --> 00:48:20,170
questions ok the question was on my home

00:48:19,000 --> 00:48:22,420
you know what kind of development stuff

00:48:20,170 --> 00:48:24,630
I'm doing right now specifically just

00:48:22,420 --> 00:48:26,740
puppy stuff I do a lot of VM work

00:48:24,630 --> 00:48:28,840
because it allows me to you know

00:48:26,740 --> 00:48:30,520
implement a change spin up a VM and see

00:48:28,840 --> 00:48:32,620
oh wow that didn't work my system won't

00:48:30,520 --> 00:48:34,120
boot now instead of actually having to

00:48:32,620 --> 00:48:37,120
sit there and reboot the system so I can

00:48:34,120 --> 00:48:38,290
have 5 or 6 different VMs loaded and of

00:48:37,120 --> 00:48:41,410
course because it's puppy the VM is

00:48:38,290 --> 00:48:43,930
actually don't require much memory so I

00:48:41,410 --> 00:48:46,180
can have multiple changes running and

00:48:43,930 --> 00:48:49,300
then see ok which change actually makes

00:48:46,180 --> 00:48:51,400
things faster one of the the scripts

00:48:49,300 --> 00:48:54,130
that we use for saving the changes in

00:48:51,400 --> 00:48:55,750
that read/write layer to your save file

00:48:54,130 --> 00:48:57,310
is called the snap merge script and

00:48:55,750 --> 00:49:00,640
we've been working on trying to make

00:48:57,310 --> 00:49:02,110
that script faster well for me it's easy

00:49:00,640 --> 00:49:04,180
because I can make multiple different

00:49:02,110 --> 00:49:06,460
changes that people recommend spin up

00:49:04,180 --> 00:49:07,690
three or four different VMs institute of

00:49:06,460 --> 00:49:08,890
command at the same time across all

00:49:07,690 --> 00:49:10,660
three of them and see which one actually

00:49:08,890 --> 00:49:13,180
finishes first and if I'm looking at my

00:49:10,660 --> 00:49:14,950
actual system I can say ok you know I

00:49:13,180 --> 00:49:16,480
don't have a one VM that's just hung up

00:49:14,950 --> 00:49:19,810
because VirtualBox is going out for

00:49:16,480 --> 00:49:22,180
lunch right now so for me it allows me

00:49:19,810 --> 00:49:23,470
to do rapid testing a whole lot easier

00:49:22,180 --> 00:49:25,450
and a whole lot quicker

00:49:23,470 --> 00:49:33,700
then constantly having to reboot to see

00:49:25,450 --> 00:49:35,109
what it changed us yes yes for for

00:49:33,700 --> 00:49:38,470
virtualization mostly I'm using just

00:49:35,109 --> 00:49:40,210
VirtualBox to Oracle I have VMware I'm

00:49:38,470 --> 00:49:42,750
not really using it just because for my

00:49:40,210 --> 00:49:44,680
purposes VirtualBox works it's simple

00:49:42,750 --> 00:49:46,480
there's no reason to go for all the

00:49:44,680 --> 00:49:51,420
extra features for you know what I'm

00:49:46,480 --> 00:49:51,420
doing no did you have another question

00:49:56,400 --> 00:50:11,740
is that correct yeah the question was

00:50:09,550 --> 00:50:13,990
okay if I since it's running in RAM and

00:50:11,740 --> 00:50:15,760
I load puppy off of a disk or whatever

00:50:13,990 --> 00:50:17,020
can I then remove that disk and this is

00:50:15,760 --> 00:50:18,700
actually what some people will do with

00:50:17,020 --> 00:50:21,040
USB sticks cuz they'll take the USB

00:50:18,700 --> 00:50:23,290
stick stick another system booted up

00:50:21,040 --> 00:50:24,670
remove the USB stick their system is

00:50:23,290 --> 00:50:26,560
running entirely in RAM now because

00:50:24,670 --> 00:50:28,330
they've removed the media well obviously

00:50:26,560 --> 00:50:30,700
they can't save any changes to a save

00:50:28,330 --> 00:50:32,050
file anywhere but yes you can continue

00:50:30,700 --> 00:50:33,880
to still use your system because your

00:50:32,050 --> 00:50:37,150
system is residing in the file system

00:50:33,880 --> 00:50:39,099
that is actually in RAM so whatever

00:50:37,150 --> 00:50:40,380
device you're booting from doesn't

00:50:39,099 --> 00:50:43,599
matter anymore

00:50:40,380 --> 00:50:45,040
with booting from a CD or DVD one of the

00:50:43,599 --> 00:50:47,140
reasons we do that is because somebody

00:50:45,040 --> 00:50:48,640
can boot off a CD pull that CD out of

00:50:47,140 --> 00:50:49,960
their system and then take a CD of music

00:50:48,640 --> 00:50:52,119
stick it in their system and play music

00:50:49,960 --> 00:50:53,109
off of it or take a DVD stick it in

00:50:52,119 --> 00:50:56,890
there and watch a movie because they

00:50:53,109 --> 00:50:59,140
don't need the OS on the live CD if

00:50:56,890 --> 00:51:01,000
you've used a live CD from most other

00:50:59,140 --> 00:51:03,040
distributions you stick it in you boot

00:51:01,000 --> 00:51:04,540
up everything's fine you then go to load

00:51:03,040 --> 00:51:06,640
an application and you have to sit there

00:51:04,540 --> 00:51:08,200
and wait while your CD spools up and it

00:51:06,640 --> 00:51:10,750
actually copies that information into

00:51:08,200 --> 00:51:12,099
memory and then loads it because we're

00:51:10,750 --> 00:51:13,839
running entirely from Ram puppy doesn't

00:51:12,099 --> 00:51:15,940
have that problem everything you've got

00:51:13,839 --> 00:51:17,950
all your applications from boot are

00:51:15,940 --> 00:51:20,290
there and ready to go you can pull out

00:51:17,950 --> 00:51:26,650
your disk your USB whatever you want and

00:51:20,290 --> 00:51:28,270
you can still run the late well huh hold

00:51:26,650 --> 00:51:29,130
on let me see if I can pull up on this

00:51:28,270 --> 00:51:31,170
one

00:51:29,130 --> 00:51:32,970
I could have done a lot of changes on

00:51:31,170 --> 00:51:37,319
this one so that might not be an

00:51:32,970 --> 00:51:40,980
adequate total ram the toshiba that I'm

00:51:37,319 --> 00:51:46,170
running has 320 Meg Ram total when I

00:51:40,980 --> 00:51:48,329
boot slack o57 off of it I have around a

00:51:46,170 --> 00:51:55,799
hundred and some Meg left so it's used

00:51:48,329 --> 00:51:56,970
about 200 any others all right well

00:51:55,799 --> 00:51:59,190
that's kind of popular Nick's in a

00:51:56,970 --> 00:52:00,509
nutshell we kind of do everything

00:51:59,190 --> 00:52:02,579
different but that's because we have

00:52:00,509 --> 00:52:05,930
different goals and we like the way it

00:52:02,579 --> 00:52:05,930
is so thank you

00:52:44,530 --> 00:52:48,830
your customers rely on your website or

00:52:47,270 --> 00:52:51,200
application if it's slower

00:52:48,830 --> 00:52:54,140
non-responsive it infuriates your users

00:52:51,200 --> 00:52:55,970
and costs you money keeping your

00:52:54,140 --> 00:52:59,420
business critical systems humming along

00:52:55,970 --> 00:53:02,299
requires insight into what they're doing

00:52:59,420 --> 00:53:04,280
your system metrics tell stories stories

00:53:02,299 --> 00:53:06,530
that can reveal performance bottlenecks

00:53:04,280 --> 00:53:08,839
resource limitations and other problems

00:53:06,530 --> 00:53:10,940
but how do you keep an eye on all of

00:53:08,839 --> 00:53:13,220
your systems performance metrics in real

00:53:10,940 --> 00:53:16,040
time and record this data for a liter

00:53:13,220 --> 00:53:18,049
analysis enter long view the new way to

00:53:16,040 --> 00:53:20,089
see what's really going on under the

00:53:18,049 --> 00:53:22,250
hood the long view dashboard lets you

00:53:20,089 --> 00:53:24,200
visualize the status of all your systems

00:53:22,250 --> 00:53:27,109
providing you with a bird's-eye view of

00:53:24,200 --> 00:53:30,049
your entire fleet you can sort by CPU

00:53:27,109 --> 00:53:32,510
memory swap processes load and network

00:53:30,049 --> 00:53:35,059
usage click a specific system to access

00:53:32,510 --> 00:53:37,099
its individual dashboard then click and

00:53:35,059 --> 00:53:40,069
drag to zoom in on chokepoints and get

00:53:37,099 --> 00:53:42,079
more detail comprehensive network data

00:53:40,069 --> 00:53:44,780
including inbound and outbound traffic

00:53:42,079 --> 00:53:46,760
is available on the network tab and disk

00:53:44,780 --> 00:53:48,920
rights and free space on the disk stab

00:53:46,760 --> 00:53:51,109
while the process Explorer displays

00:53:48,920 --> 00:53:53,690
usage statistics for individual

00:53:51,109 --> 00:53:55,819
processes the system info tab shows

00:53:53,690 --> 00:53:58,220
listening services active connections

00:53:55,819 --> 00:54:00,349
and available updates adding longview to

00:53:58,220 --> 00:54:02,599
a system is easy just click the button

00:54:00,349 --> 00:54:04,220
copy the one-line installation command

00:54:02,599 --> 00:54:06,890
then run the command on your Linux

00:54:04,220 --> 00:54:08,750
system to complete the process the agent

00:54:06,890 --> 00:54:10,700
will begin collecting data and sending

00:54:08,750 --> 00:54:12,240
it to long view then the graphs start

00:54:10,700 --> 00:54:14,760
rolling

00:54:12,240 --> 00:54:16,950
use Longview to gain visibility into

00:54:14,760 --> 00:54:20,869
your servers so when your website or app

00:54:16,950 --> 00:54:20,869

YouTube URL: https://www.youtube.com/watch?v=ymBQPBEVgQI


