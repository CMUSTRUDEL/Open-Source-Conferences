Title: 2014 SouthEast LinuxFest - Scott Suehle - Baby You Can Drive My Cloud
Publication date: 2015-05-17
Playlist: 2014 SouthEast LinuxFest
Description: 
	2014 SouthEast LinuxFest
Scott Suehle
Baby You Can Drive My Cloud
Captions: 
	00:00:00,000 --> 00:00:05,339
the following presentation was recorded

00:00:02,490 --> 00:00:08,189
the 2014 southeast linux fest in

00:00:05,339 --> 00:00:11,070
charlotte north carolina it is licensed

00:00:08,189 --> 00:00:15,150
under a creative commons license for

00:00:11,070 --> 00:00:18,330
more information visit www.fcn expense

00:00:15,150 --> 00:00:20,310
org the southeast linux fest would like

00:00:18,330 --> 00:00:22,859
to thank the following diamond sponsors

00:00:20,310 --> 00:00:25,920
in 2014 for helping make these videos

00:00:22,859 --> 00:00:29,939
possible welcome everyone to baby you

00:00:25,920 --> 00:00:34,020
can drive my cloud and maybe you'll 4get

00:00:29,939 --> 00:00:38,460
so I work for eucalyptus systems we are

00:00:34,020 --> 00:00:41,219
a private and hybrid cloud provider that

00:00:38,460 --> 00:00:45,210
works pretty much seamlessly with amazon

00:00:41,219 --> 00:00:46,850
web services you can run amazon commands

00:00:45,210 --> 00:00:49,649
against our clouds you can run our

00:00:46,850 --> 00:00:51,649
commands against amazon's clouds as long

00:00:49,649 --> 00:00:55,559
as the creds are sourced the proper way

00:00:51,649 --> 00:00:58,410
I am Scott Seeley I am a cloud support

00:00:55,559 --> 00:01:00,149
engineer we are based out of Santa

00:00:58,410 --> 00:01:04,290
Barbara but I work in Cary North

00:01:00,149 --> 00:01:06,210
Carolina here so let's go ahead and jump

00:01:04,290 --> 00:01:09,510
right in you can put a private cloud

00:01:06,210 --> 00:01:12,030
where is a good question and I'm going

00:01:09,510 --> 00:01:14,070
to show you hopefully as long as the y

00:01:12,030 --> 00:01:16,409
or though my connection here help pulls

00:01:14,070 --> 00:01:20,009
out I can show you how to put it on a vm

00:01:16,409 --> 00:01:21,840
on your laptop a small computer in a

00:01:20,009 --> 00:01:25,020
corner an old machine under a desk or

00:01:21,840 --> 00:01:29,520
the usual rack in a data center and as

00:01:25,020 --> 00:01:32,130
we were just chatting easily even on my

00:01:29,520 --> 00:01:35,030
back even though it does mess up with

00:01:32,130 --> 00:01:35,030
some people spectrum

00:01:36,400 --> 00:01:43,420
but anyway so how can you accomplish

00:01:40,150 --> 00:01:45,550
this on your laptop so we have a couple

00:01:43,420 --> 00:01:48,370
different ways this is just three of

00:01:45,550 --> 00:01:49,930
them here we have our Yuka development

00:01:48,370 --> 00:01:51,640
environment and that's hopefully what

00:01:49,930 --> 00:01:54,310
I'm going to be able to show you it

00:01:51,640 --> 00:01:59,560
started on my laptop basically what it

00:01:54,310 --> 00:02:02,200
is is it's a script that goes and sets

00:01:59,560 --> 00:02:04,510
up a chef server in a vm environment and

00:02:02,200 --> 00:02:06,490
then it provisions out a cloud gives it

00:02:04,510 --> 00:02:08,890
credentials gives it space gives it the

00:02:06,490 --> 00:02:10,179
ability to spin up instances right on

00:02:08,890 --> 00:02:13,660
your laptop you don't have to be

00:02:10,179 --> 00:02:16,780
connected to any Internet once you've

00:02:13,660 --> 00:02:18,280
got it installed we have our fast start

00:02:16,780 --> 00:02:22,750
scripts which I'm also going to show you

00:02:18,280 --> 00:02:26,200
as well these are one line curl scripts

00:02:22,750 --> 00:02:28,390
that will go out and you run it on your

00:02:26,200 --> 00:02:31,690
server and it completely sets up an

00:02:28,390 --> 00:02:33,310
entire clouds that set up or from source

00:02:31,690 --> 00:02:35,410
if you're the kind of person who likes

00:02:33,310 --> 00:02:37,600
to tackle the challenge of pulling down

00:02:35,410 --> 00:02:40,989
source code and building out the the

00:02:37,600 --> 00:02:45,700
packages we can we have that out on our

00:02:40,989 --> 00:02:48,930
side as well github site as well so

00:02:45,700 --> 00:02:51,340
anyway let's jump over here real quick

00:02:48,930 --> 00:02:56,350
so this is the script running for the

00:02:51,340 --> 00:02:58,450
yuca dev environment it's basically as I

00:02:56,350 --> 00:03:01,080
said it just a bunch of chef scripts

00:02:58,450 --> 00:03:03,910
that go out sets up a chef server

00:03:01,080 --> 00:03:07,000
provisions out the vm on your laptop and

00:03:03,910 --> 00:03:09,650
it's currently running trying to get the

00:03:07,000 --> 00:03:14,030
chef server setup on my laptop

00:03:09,650 --> 00:03:15,980
someone should show you the so our

00:03:14,030 --> 00:03:18,019
github here we are completely open

00:03:15,980 --> 00:03:20,269
source all of our code is sitting on

00:03:18,019 --> 00:03:22,909
github you can go out there you can grab

00:03:20,269 --> 00:03:27,560
it you can pork it you can contribute to

00:03:22,909 --> 00:03:32,530
it pull requests whole nine yards we are

00:03:27,560 --> 00:03:34,670
out there for you to use and abuse the

00:03:32,530 --> 00:03:37,430
you could dev environment that i'm

00:03:34,670 --> 00:03:40,549
setting up currently is right here under

00:03:37,430 --> 00:03:41,659
the eucalyptus cookbooks and you can go

00:03:40,549 --> 00:03:45,170
and you can see all the different

00:03:41,659 --> 00:03:49,120
vagrant files and stuff that set up our

00:03:45,170 --> 00:03:52,930
chef server and it has you know basic

00:03:49,120 --> 00:03:52,930
instructions on how to set it up

00:03:53,980 --> 00:03:56,760
Shh

00:04:02,450 --> 00:04:07,410
but basically you just install

00:04:05,490 --> 00:04:11,100
virtualbox on your laptop install a

00:04:07,410 --> 00:04:14,100
vagrant install get a couple plugins for

00:04:11,100 --> 00:04:17,430
vagrant and once you've done that you

00:04:14,100 --> 00:04:19,530
pull down the eucalyptus to github

00:04:17,430 --> 00:04:21,750
repository for the cookbook and then you

00:04:19,530 --> 00:04:23,550
just run the vagrant up and it runs

00:04:21,750 --> 00:04:28,050
through the script and that's what we're

00:04:23,550 --> 00:04:29,910
what I'm running here on my laptop while

00:04:28,050 --> 00:04:34,740
this is running I'd like to show you as

00:04:29,910 --> 00:04:36,750
the quick starts fast start script this

00:04:34,740 --> 00:04:39,570
is a new thing that we've launched with

00:04:36,750 --> 00:04:41,940
our floor bordado version of our product

00:04:39,570 --> 00:04:43,710
and it's just a one line script as I was

00:04:41,940 --> 00:04:45,540
saying earlier you run this one script

00:04:43,710 --> 00:04:48,930
on your machine and it goes through

00:04:45,540 --> 00:04:52,250
enable provision up a system for you so

00:04:48,930 --> 00:04:52,250
let's go ahead and grab that

00:04:58,310 --> 00:05:01,540
and then it will take you and guide you

00:05:00,110 --> 00:05:05,180
through it'll ask you a couple questions

00:05:01,540 --> 00:05:07,490
make sure your BIOS doesn't go sleep it

00:05:05,180 --> 00:05:09,940
will go out grab the chef's client and

00:05:07,490 --> 00:05:09,940
install that

00:05:19,279 --> 00:05:22,769
it goes through and installs the chef

00:05:21,419 --> 00:05:23,819
pine then it's going to come back and is

00:05:22,769 --> 00:05:26,779
going to ask us a couple more questions

00:05:23,819 --> 00:05:26,779
about our environment

00:05:55,370 --> 00:05:59,300
while we wait for that for a second i'll

00:05:57,050 --> 00:06:00,620
go ahead and show you the script again

00:05:59,300 --> 00:06:03,169
this is out there on our github

00:06:00,620 --> 00:06:06,560
environment as well and basically it

00:06:03,169 --> 00:06:08,060
just shows you how it goes out and talks

00:06:06,560 --> 00:06:10,460
to your server has a bunch of questions

00:06:08,060 --> 00:06:12,650
it wants to make sure that you have dhcp

00:06:10,460 --> 00:06:16,130
turned off you want a static IP on the

00:06:12,650 --> 00:06:18,110
server it will make sure that none of

00:06:16,130 --> 00:06:19,820
thing none of our components are

00:06:18,110 --> 00:06:23,540
installed or running on the machine as

00:06:19,820 --> 00:06:24,710
well it does a couple pre checks as I

00:06:23,540 --> 00:06:27,250
said it wants make sure you're running

00:06:24,710 --> 00:06:30,650
his route make sure chefs not installed

00:06:27,250 --> 00:06:33,490
and then it proceeds to go through the

00:06:30,650 --> 00:06:33,490
fast start installation

00:06:35,480 --> 00:06:39,620
now the chef service coming up bringing

00:06:37,670 --> 00:06:42,460
up questions I asked you what's your it

00:06:39,620 --> 00:06:47,380
would make you want to bridge to the IP

00:06:42,460 --> 00:06:50,660
gateway knit mask and then the subnet

00:06:47,380 --> 00:06:53,800
then it will ask you for IP range you

00:06:50,660 --> 00:06:53,800
give it a list of range

00:07:04,790 --> 00:07:08,630
and then it tells you this will take

00:07:07,010 --> 00:07:10,490
about 15 minutes go grab a cup of coffee

00:07:08,630 --> 00:07:14,720
and it proceeds to go through and

00:07:10,490 --> 00:07:17,750
running this setup for you it also gives

00:07:14,720 --> 00:07:19,150
you a log that you can tail that will

00:07:17,750 --> 00:07:22,690
show you all the different processes

00:07:19,150 --> 00:07:22,690
that are running on

00:07:39,950 --> 00:07:43,460
in the NISS coat just goes through

00:07:41,780 --> 00:07:45,890
showing you two different steps that

00:07:43,460 --> 00:07:48,680
they running as it's installing the

00:07:45,890 --> 00:07:50,690
cloud and setting it up as you can see

00:07:48,680 --> 00:07:52,370
now it's installing lyptus cloud 40

00:07:50,690 --> 00:07:54,760
which is the backbone of the cloud

00:07:52,370 --> 00:07:54,760
system

00:07:57,790 --> 00:08:00,779
while this is running let's go check on

00:07:59,590 --> 00:08:03,430
our other one

00:08:00,779 --> 00:08:06,749
and then it's still trying to set up the

00:08:03,430 --> 00:08:06,749
chef server on that side

00:08:08,940 --> 00:08:14,240
while we're doing that we'll wait up we

00:08:10,770 --> 00:08:14,240
don't know there's the ship script again

00:08:16,090 --> 00:08:22,300
this is a another project that we have

00:08:19,389 --> 00:08:23,740
out there is called micro QA what this

00:08:22,300 --> 00:08:26,350
does is it combines both our

00:08:23,740 --> 00:08:28,449
provisioning system and our testing

00:08:26,350 --> 00:08:31,810
system which is you tester which is a

00:08:28,449 --> 00:08:34,300
Python driven test language our test

00:08:31,810 --> 00:08:35,890
testing scripts that we have and it puts

00:08:34,300 --> 00:08:38,229
a web front end on it so you can go to

00:08:35,890 --> 00:08:40,240
this web front end and say you know I

00:08:38,229 --> 00:08:42,760
want to provision a cloud you send it to

00:08:40,240 --> 00:08:44,890
credentials you send the servers and IPS

00:08:42,760 --> 00:08:46,029
it'll go stand up the cloud and then you

00:08:44,890 --> 00:08:49,230
have a different tabs that have

00:08:46,029 --> 00:08:51,610
different tests and you can go and grab

00:08:49,230 --> 00:08:53,740
you know the test once you've got the

00:08:51,610 --> 00:08:55,839
cloud stood up you take your creds you

00:08:53,740 --> 00:08:58,390
can drop of it into this QA tester and

00:08:55,839 --> 00:09:01,839
say you know I'd like you to run a suite

00:08:58,390 --> 00:09:03,730
of JavaScript testing against it and

00:09:01,839 --> 00:09:08,490
it'll go out and it'll test it and it

00:09:03,730 --> 00:09:08,490
will produce the console report for you

00:09:11,690 --> 00:09:16,100
just show you so we also have ansible

00:09:14,720 --> 00:09:19,010
playbooks that run against our clouds

00:09:16,100 --> 00:09:22,490
that help you to set up provision and we

00:09:19,010 --> 00:09:24,140
also have puppet chef we have a bunch of

00:09:22,490 --> 00:09:27,260
these different projects available on

00:09:24,140 --> 00:09:29,330
our github that I'll work with our

00:09:27,260 --> 00:09:30,860
system we have people who are inside of

00:09:29,330 --> 00:09:32,630
our organization that are writing these

00:09:30,860 --> 00:09:33,770
scripts we also have community members

00:09:32,630 --> 00:09:37,370
of they've been helping us with them as

00:09:33,770 --> 00:09:38,920
well whether they be clients or just

00:09:37,370 --> 00:09:42,550
standard community members that are

00:09:38,920 --> 00:09:42,550
working on this as well

00:09:43,450 --> 00:09:47,779
um

00:09:45,110 --> 00:09:50,120
this is the yuca dev on my local laptop

00:09:47,779 --> 00:09:52,459
you can see once it's got past the chef

00:09:50,120 --> 00:09:56,089
server it's now starting to build out

00:09:52,459 --> 00:09:57,290
the VM and it started to go through all

00:09:56,089 --> 00:09:59,660
the services and things that need to be

00:09:57,290 --> 00:10:01,990
done to install eucalyptus on my local

00:09:59,660 --> 00:10:01,990
laptop

00:10:05,170 --> 00:10:11,290
back over here we can take a look and

00:10:07,769 --> 00:10:12,910
again the same thing with the fast start

00:10:11,290 --> 00:10:14,440
script it's already started going

00:10:12,910 --> 00:10:16,089
through installing eucalyptus it's

00:10:14,440 --> 00:10:18,910
bringing the system up and now it's

00:10:16,089 --> 00:10:20,589
registering things together to set up

00:10:18,910 --> 00:10:24,029
the cloud environment on that server

00:10:20,589 --> 00:10:24,029
that I have access to as well

00:10:24,790 --> 00:10:29,630
so in just a few minutes we should have

00:10:27,350 --> 00:10:31,580
at least one of these two clouds up and

00:10:29,630 --> 00:10:33,530
running so we can see the console I

00:10:31,580 --> 00:10:35,510
don't know if anybody came and saw the

00:10:33,530 --> 00:10:39,290
cloud backpack as I was wearing it

00:10:35,510 --> 00:10:42,710
yesterday that was to Intel nukes

00:10:39,290 --> 00:10:44,540
running with a small wireless bridge

00:10:42,710 --> 00:10:47,630
between the two of them too loud talk

00:10:44,540 --> 00:10:51,020
talk to one another and it I had a

00:10:47,630 --> 00:10:53,210
kindle fire that was running the console

00:10:51,020 --> 00:10:56,900
that you could come up to it and spin up

00:10:53,210 --> 00:10:58,700
instances check volumes run commands

00:10:56,900 --> 00:11:00,620
against it all from the Kindle Fire

00:10:58,700 --> 00:11:03,910
interface right there to the two little

00:11:00,620 --> 00:11:03,910
Intel looks on my back

00:11:09,920 --> 00:11:14,819
we are still running through the

00:11:11,480 --> 00:11:17,399
provision script setting up the vm and

00:11:14,819 --> 00:11:19,259
you can also see the you know in

00:11:17,399 --> 00:11:21,709
virtualbox there's the two VMs right

00:11:19,259 --> 00:11:21,709
there running

00:11:32,720 --> 00:11:37,800
one thing we've added to our fast start

00:11:35,220 --> 00:11:39,630
script recently so this like I said this

00:11:37,800 --> 00:11:44,250
was just launched with our 40 version of

00:11:39,630 --> 00:11:47,670
our software it just came out the basic

00:11:44,250 --> 00:11:49,620
install on a minimal 65 server gives a

00:11:47,670 --> 00:11:51,620
cup only gives a small availability sign

00:11:49,620 --> 00:11:55,770
that allow to run up roll up a couple

00:11:51,620 --> 00:11:58,320
instances we added a new script which is

00:11:55,770 --> 00:12:00,870
this next script down here which allows

00:11:58,320 --> 00:12:03,930
you to spin up just the node controller

00:12:00,870 --> 00:12:05,280
piece of our software so if you have the

00:12:03,930 --> 00:12:07,110
fast start and you installed it on a

00:12:05,280 --> 00:12:09,180
server and you started playing with it

00:12:07,110 --> 00:12:12,000
and running instances but you've run out

00:12:09,180 --> 00:12:16,470
of computing space you run this on a

00:12:12,000 --> 00:12:18,150
separate minimal instance of CentOS it

00:12:16,470 --> 00:12:21,180
spins up a new node controller and it

00:12:18,150 --> 00:12:23,280
gives you the command to attach to the

00:12:21,180 --> 00:12:27,180
initial fast start cloud that you've set

00:12:23,280 --> 00:12:30,200
up so we can run that real quick while

00:12:27,180 --> 00:12:30,200
the other ones running as well

00:12:35,610 --> 00:12:39,240
this does pretty much the same stuff

00:12:37,589 --> 00:12:41,910
that the original fast start script does

00:12:39,240 --> 00:12:44,880
except you don't have to worry about

00:12:41,910 --> 00:12:46,800
adding in the IP address range because

00:12:44,880 --> 00:12:48,660
it pulls that from the initial fast

00:12:46,800 --> 00:12:51,060
start cloud set up because that works as

00:12:48,660 --> 00:12:53,279
your cloud controller and once you've

00:12:51,060 --> 00:12:54,990
connected the two it provisions and

00:12:53,279 --> 00:12:57,149
sends that information over to it save

00:12:54,990 --> 00:12:58,950
and says you know these are the IPS that

00:12:57,149 --> 00:13:00,750
we have available to us this is where

00:12:58,950 --> 00:13:02,399
you're going to be accessing the console

00:13:00,750 --> 00:13:04,579
this is where your commands are coming

00:13:02,399 --> 00:13:04,579
from

00:13:25,580 --> 00:13:32,030
and again it's asked for the just two

00:13:27,680 --> 00:13:33,950
basic setups for the internet and where

00:13:32,030 --> 00:13:35,210
the other one said it takes 15 to 20

00:13:33,950 --> 00:13:37,850
minutes this one doesn't give you a time

00:13:35,210 --> 00:13:40,310
frame because this one I've seen run as

00:13:37,850 --> 00:13:42,410
fast as two minutes to completely

00:13:40,310 --> 00:13:43,880
provision out a node controller and give

00:13:42,410 --> 00:13:46,930
you the command to register it against

00:13:43,880 --> 00:13:46,930
the the COC

00:13:47,720 --> 00:13:50,620
so I'm still running

00:13:57,400 --> 00:14:00,550
it's working on setting up the clouds

00:13:58,720 --> 00:14:03,090
going through the restart of the cluster

00:14:00,550 --> 00:14:03,090
controller now

00:14:11,050 --> 00:14:14,830
this is the environment that's

00:14:13,180 --> 00:14:15,970
installing on my laptop it's currently

00:14:14,830 --> 00:14:19,410
trying to run through the installation

00:14:15,970 --> 00:14:19,410
of the cloud product itself

00:14:50,259 --> 00:14:55,209
and this has the same log feature that

00:14:52,720 --> 00:14:57,609
the other script has as well so if i

00:14:55,209 --> 00:15:00,839
wanted to see where it was at this point

00:14:57,609 --> 00:15:00,839
in time I can do

00:15:14,600 --> 00:15:18,860
and again I can see this exactly where

00:15:16,970 --> 00:15:21,910
it is at any point at this point in time

00:15:18,860 --> 00:15:21,910
as it's running through the logs

00:15:25,820 --> 00:15:29,330
and so that one was actually completed

00:15:27,530 --> 00:15:32,120
it took as you can see there two minutes

00:15:29,330 --> 00:15:34,720
and 45 seconds to finish setting up

00:15:32,120 --> 00:15:36,530
complete node controller on our server

00:15:34,720 --> 00:15:39,100
where this one is still running

00:15:36,530 --> 00:15:39,100
obviously

00:15:46,329 --> 00:15:49,720
and that one currently is sitting at the

00:15:48,249 --> 00:15:54,089
stage where it's installing the node

00:15:49,720 --> 00:15:54,089
controller on them this server itself

00:16:43,939 --> 00:16:47,539
so while we wait for that how many

00:16:46,069 --> 00:16:49,689
people actually use cloud products right

00:16:47,539 --> 00:16:49,689
now

00:16:52,259 --> 00:17:00,049
ok how many people use Amazon OpenStack

00:16:57,049 --> 00:17:00,049
eucalyptus

00:17:00,270 --> 00:17:03,020
two and a half

00:17:04,329 --> 00:17:11,220
you run a cluster in house what do you

00:17:06,699 --> 00:17:14,400
use VMR 50 you said

00:17:11,220 --> 00:17:16,620
virtual machines the three that raise

00:17:14,400 --> 00:17:20,970
their hands do you use Amazon i'm going

00:17:16,620 --> 00:17:24,419
to assume now what do you use

00:17:20,970 --> 00:17:28,500
openstack okay as I was mentioning

00:17:24,419 --> 00:17:30,210
before the eucalyptus environment works

00:17:28,500 --> 00:17:32,789
pretty seamlessly with them with amazon

00:17:30,210 --> 00:17:34,620
so it is a as I said it's a private or

00:17:32,789 --> 00:17:37,340
hybrid solution you can run eucalypts

00:17:34,620 --> 00:17:39,240
servers on your on your in-house servers

00:17:37,340 --> 00:17:41,280
provision things do your development

00:17:39,240 --> 00:17:42,539
against it spin up instances then you

00:17:41,280 --> 00:17:44,130
can take those instances pulling down

00:17:42,539 --> 00:17:47,909
into a conversion on them and you can

00:17:44,130 --> 00:17:50,100
send them straight up to Amazon so what

00:17:47,909 --> 00:17:51,960
it helps it is you know the development

00:17:50,100 --> 00:17:53,850
work is not being spun up on Amazon

00:17:51,960 --> 00:17:57,480
instances you're not having to to pay

00:17:53,850 --> 00:17:58,919
amazon for development time whereas you

00:17:57,480 --> 00:18:01,470
know you depending on how long that

00:17:58,919 --> 00:18:08,490
takes you know it could end up getting

00:18:01,470 --> 00:18:10,820
kind of costly all right so this is now

00:18:08,490 --> 00:18:10,820
finished

00:18:19,030 --> 00:18:22,380
I should now be able to

00:18:37,560 --> 00:18:42,150
and now i have a cloud this is the

00:18:40,020 --> 00:18:43,890
server that I was connecting to so it's

00:18:42,150 --> 00:18:45,840
not my laptop yet that one's still

00:18:43,890 --> 00:18:48,390
running but as you can see you have the

00:18:45,840 --> 00:18:51,510
ability to log into eucalyptus or log in

00:18:48,390 --> 00:18:53,130
to AWS from our console as long as you

00:18:51,510 --> 00:18:56,150
have your credentials for Amazon you can

00:18:53,130 --> 00:18:56,150
log into it from here

00:19:29,350 --> 00:19:35,010
and here's our new console as you can

00:19:32,320 --> 00:19:37,750
see there's already an instance running

00:19:35,010 --> 00:19:39,580
part of the script is that it stands up

00:19:37,750 --> 00:19:42,520
once it stands up to cloud it launches

00:19:39,580 --> 00:19:43,780
an instance so that it has the shows so

00:19:42,520 --> 00:19:46,539
you have the ability to see that it's

00:19:43,780 --> 00:19:48,309
actually running and it's basically just

00:19:46,539 --> 00:19:52,559
a little small syros image we can come

00:19:48,309 --> 00:19:52,559
back over here to the cloud and do

00:20:09,580 --> 00:20:12,630
so on

00:20:41,779 --> 00:20:46,059
so this is all the services that are

00:20:43,789 --> 00:20:49,249
started once you've installed the cloud

00:20:46,059 --> 00:20:51,049
you've got you know the standard cluster

00:20:49,249 --> 00:20:56,749
controller Cloud Controller no

00:20:51,049 --> 00:20:59,830
controllers you know object storage all

00:20:56,749 --> 00:20:59,830
that stuff set up there

00:21:05,140 --> 00:21:09,750
and there's the running instance that it

00:21:07,300 --> 00:21:09,750
starts up

00:21:12,580 --> 00:21:17,850
as I said earlier we spun up the NC

00:21:25,170 --> 00:21:29,790
and it gives me a command here that I

00:21:27,300 --> 00:21:31,670
can take this and add it to my other

00:21:29,790 --> 00:21:33,950
server basically you just take that

00:21:31,670 --> 00:21:36,950
control

00:21:33,950 --> 00:21:40,429
run that it says you want to connect yes

00:21:36,950 --> 00:21:43,870
done and now I have to note controllers

00:21:40,429 --> 00:21:43,870
running on this so I do

00:21:51,360 --> 00:21:54,990
and there have the two different no

00:21:53,400 --> 00:21:56,429
controllers it's initializing the

00:21:54,990 --> 00:21:58,820
connection to the second one that I just

00:21:56,429 --> 00:21:58,820
added

00:22:52,800 --> 00:22:56,410
and now i'm logged into the instance

00:22:54,510 --> 00:22:58,330
that's there

00:22:56,410 --> 00:23:00,660
it's just a small little see Ross test

00:22:58,330 --> 00:23:00,660
image

00:23:11,220 --> 00:23:15,179
from the dashboard here we can launch

00:23:12,870 --> 00:23:18,120
instances we can look at key pairs we

00:23:15,179 --> 00:23:21,140
can add volumes I'll call the stuff that

00:23:18,120 --> 00:23:21,140
you need to do with your clouds

00:23:24,130 --> 00:23:28,750
and this is still going through the

00:23:25,990 --> 00:23:29,950
stuff on the UK dev environment so

00:23:28,750 --> 00:23:33,150
anyway while we wait for that to finish

00:23:29,950 --> 00:23:33,150
is are there any questions

00:23:45,530 --> 00:23:48,790
yeah so

00:23:49,870 --> 00:23:56,500
the question is what is the definition

00:23:51,850 --> 00:23:59,080
of a cloud yet so what what it is is it

00:23:56,500 --> 00:24:01,120
standing up a server and on that server

00:23:59,080 --> 00:24:04,420
you can spin up instances of different

00:24:01,120 --> 00:24:08,559
types whether it be a bun to windows see

00:24:04,420 --> 00:24:10,390
ross santos but it's basically giving

00:24:08,559 --> 00:24:12,850
you this space to spin up these these

00:24:10,390 --> 00:24:14,860
instances and they can be easily spun up

00:24:12,850 --> 00:24:16,720
or put torn down you can provision them

00:24:14,860 --> 00:24:19,120
with the scripting the puppet with

00:24:16,720 --> 00:24:21,490
ansible all that kind of stuff and it's

00:24:19,120 --> 00:24:23,140
the same as if you were using Amazon's

00:24:21,490 --> 00:24:25,330
Cloud Services you can spin up an

00:24:23,140 --> 00:24:27,250
instance in amazon cloud services do

00:24:25,330 --> 00:24:29,200
what you need two against and then you

00:24:27,250 --> 00:24:34,630
can pull that instance right back down

00:24:29,200 --> 00:24:37,030
as well I mean if the eucalyptus cloud

00:24:34,630 --> 00:24:39,610
is it is a saint is set it essentially

00:24:37,030 --> 00:24:42,270
set up the same way as those those cloud

00:24:39,610 --> 00:24:42,270
services are

00:24:45,490 --> 00:24:50,440
yes I mean so the cloud services

00:24:48,730 --> 00:24:52,750
themselves run on the hardware and then

00:24:50,440 --> 00:24:56,800
it allows you to spin up essentially VMs

00:24:52,750 --> 00:24:58,570
on those those servers that allow you to

00:24:56,800 --> 00:25:02,320
know you can connect you control those

00:24:58,570 --> 00:25:03,970
with with service groups with policies

00:25:02,320 --> 00:25:09,429
and allow people to do specific things

00:25:03,970 --> 00:25:11,350
on those that's so earlier you were

00:25:09,429 --> 00:25:13,090
saying you could take a instance that

00:25:11,350 --> 00:25:15,429
spun up on your cloud stay in house and

00:25:13,090 --> 00:25:18,280
migrate it to Amazon yes can you go

00:25:15,429 --> 00:25:20,350
through that process I don't have an

00:25:18,280 --> 00:25:22,870
excellent amazon account right now set

00:25:20,350 --> 00:25:25,380
up for myself so i can't actually run

00:25:22,870 --> 00:25:29,559
through that myself we do have that in

00:25:25,380 --> 00:25:31,210
our documentation and it's just a

00:25:29,559 --> 00:25:33,450
process of pulling it pulling down the

00:25:31,210 --> 00:25:36,520
instance running the amazon commands

00:25:33,450 --> 00:25:43,240
against it and pulling that image into

00:25:36,520 --> 00:25:44,920
it it's usually not more than about 30

00:25:43,240 --> 00:25:46,600
minutes to an hour depending on how the

00:25:44,920 --> 00:25:49,480
size of the image if it's a larger image

00:25:46,600 --> 00:25:51,309
obviously it takes a lot longer but just

00:25:49,480 --> 00:25:53,740
a standard you know working image it can

00:25:51,309 --> 00:25:55,510
be done pretty quickly it means it's a

00:25:53,740 --> 00:25:57,670
simple question but maybe give me a

00:25:55,510 --> 00:25:59,020
ballpark maybe you already said during

00:25:57,670 --> 00:26:01,360
the beginning and missed it but you have

00:25:59,020 --> 00:26:03,850
like what kind of system specs should we

00:26:01,360 --> 00:26:06,490
need for a basic cloud besides like a

00:26:03,850 --> 00:26:07,960
basic laptop machine set it up like is

00:26:06,490 --> 00:26:10,090
there like a core server it's good to

00:26:07,960 --> 00:26:12,010
have another so the you could dev

00:26:10,090 --> 00:26:15,640
environment that I'm running right here

00:26:12,010 --> 00:26:18,340
it spins up a vm on my laptop it spends

00:26:15,640 --> 00:26:23,350
it up and it's three cores 20 gigabytes

00:26:18,340 --> 00:26:27,820
of space just a simple centos baseline

00:26:23,350 --> 00:26:29,710
in image it's a minimal install so it

00:26:27,820 --> 00:26:32,200
doesn't take up a lot of power doesn't

00:26:29,710 --> 00:26:34,929
take a lot a lot of hard drive space a

00:26:32,200 --> 00:26:38,950
lot of RAM excuse me actually two cores

00:26:34,929 --> 00:26:41,020
three gigs of RAM 20 gigs of space as

00:26:38,950 --> 00:26:45,250
far as the server goes again the dual

00:26:41,020 --> 00:26:47,550
core we recommend at least two gigs of

00:26:45,250 --> 00:26:51,040
RAM probably four if it's easy

00:26:47,550 --> 00:26:53,110
accessible and again 20 gigs of space is

00:26:51,040 --> 00:26:54,150
all you need to spin up a small cloud

00:26:53,110 --> 00:26:56,880
instance

00:26:54,150 --> 00:26:59,430
we're spinning up like a platform on the

00:26:56,880 --> 00:27:00,909
service or several instances where

00:26:59,430 --> 00:27:02,769
everyone can have their own plan

00:27:00,909 --> 00:27:05,820
you can spin up several instances where

00:27:02,769 --> 00:27:05,820
people have their own platform

00:27:09,059 --> 00:27:14,470
your questions

00:27:12,059 --> 00:27:16,059
so this is still processing through

00:27:14,470 --> 00:27:18,370
again this one like I said this one

00:27:16,059 --> 00:27:21,700
takes a little bit longer than the this

00:27:18,370 --> 00:27:24,070
curl code does on the vase server you

00:27:21,700 --> 00:27:28,870
know whereas this one took give or take

00:27:24,070 --> 00:27:31,179
15 to 20 minutes to do everything on the

00:27:28,870 --> 00:27:32,910
laptop it takes between 30 to 45 minutes

00:27:31,179 --> 00:27:35,740
to spin up the development environment

00:27:32,910 --> 00:27:37,510
and as I said once it spun up though it

00:27:35,740 --> 00:27:38,650
sits on your laptop it's running you

00:27:37,510 --> 00:27:40,570
don't have to have connection to the

00:27:38,650 --> 00:27:42,250
Internet to be able to use it it's

00:27:40,570 --> 00:27:46,020
running as localhost and it's running

00:27:42,250 --> 00:27:46,020
through ports an IP tables on them

00:27:53,160 --> 00:27:57,850
but anyway eyes are saying so you can

00:27:55,240 --> 00:27:59,530
you can come the console and it and this

00:27:57,850 --> 00:28:03,240
is the same thing as I was wrong with

00:27:59,530 --> 00:28:06,040
the cloud backpack yesterday you can

00:28:03,240 --> 00:28:11,110
install images we've only got the one

00:28:06,040 --> 00:28:15,730
image installed in here obviously you

00:28:11,110 --> 00:28:18,220
can give it the size of space this shows

00:28:15,730 --> 00:28:20,350
the different sizes of instances that

00:28:18,220 --> 00:28:22,180
can be run in eucalyptus given if you

00:28:20,350 --> 00:28:25,330
have the hardware and the power to

00:28:22,180 --> 00:28:28,120
support it but we're just going to spin

00:28:25,330 --> 00:28:29,770
up a quick em one instance default

00:28:28,120 --> 00:28:34,180
availability zone which is what it's set

00:28:29,770 --> 00:28:35,950
up as our first key pair default

00:28:34,180 --> 00:28:39,790
security group which has access to port

00:28:35,950 --> 00:28:44,770
80 20 21 we're going to launch that

00:28:39,790 --> 00:28:48,310
instance and in a matter of couple

00:28:44,770 --> 00:28:50,470
that will come to two running and that's

00:28:48,310 --> 00:28:56,820
just a small instance in this default

00:28:50,470 --> 00:28:56,820
cloud we do have

00:29:04,090 --> 00:29:12,960
don't have it open

00:29:06,850 --> 00:29:12,960
we've been using docker or not dr. um

00:29:15,920 --> 00:29:18,490
sorry

00:29:40,630 --> 00:29:46,550
packer and what that what that is given

00:29:44,720 --> 00:29:51,050
us the ability to do is weave he's

00:29:46,550 --> 00:29:53,809
thickest run this new cloud images repo

00:29:51,050 --> 00:29:58,730
on github and what it does is it uses

00:29:53,809 --> 00:30:01,220
packer to take down a raw image put in

00:29:58,730 --> 00:30:03,290
some information that we want to be spun

00:30:01,220 --> 00:30:06,590
into the instance or spun into the image

00:30:03,290 --> 00:30:08,150
for our eucalyptus use and then prepare

00:30:06,590 --> 00:30:10,880
it and send it straight into our

00:30:08,150 --> 00:30:15,140
eucalyptus system all in a matter of

00:30:10,880 --> 00:30:17,510
nine steps there this is a very simple

00:30:15,140 --> 00:30:22,730
and easy way to get instances into our

00:30:17,510 --> 00:30:24,500
clouds and it has been very well

00:30:22,730 --> 00:30:29,030
received within internally within the

00:30:24,500 --> 00:30:31,270
company as far as ease of use to try and

00:30:29,030 --> 00:30:35,110
get newer instant newer images in there

00:30:31,270 --> 00:30:38,320
we've currently got sent us six CentOS 7

00:30:35,110 --> 00:30:38,320
abun to

00:30:50,720 --> 00:30:59,539
debian 7 open suse 13 and fedora 20 so

00:30:57,140 --> 00:31:04,220
those are all set up within this pack

00:30:59,539 --> 00:31:05,840
this cloud images set up and it what it

00:31:04,220 --> 00:31:09,919
does is it goes out and it grabs the raw

00:31:05,840 --> 00:31:14,890
iso pulls it down hits it with a system

00:31:09,919 --> 00:31:14,890
prep file that's in in these files here

00:31:17,720 --> 00:31:21,410
and basically you know it says hey we

00:31:19,760 --> 00:31:24,980
want to use the root user this is the

00:31:21,410 --> 00:31:26,930
base password and it has a post install

00:31:24,980 --> 00:31:29,270
script that you can add things to the

00:31:26,930 --> 00:31:31,820
post install script currently is just a

00:31:29,270 --> 00:31:34,250
base just setup for basic stuff right

00:31:31,820 --> 00:31:35,840
now but you come into these files and

00:31:34,250 --> 00:31:37,550
edit it and you say hey I want to spin

00:31:35,840 --> 00:31:40,640
up an instance this has got that's got

00:31:37,550 --> 00:31:43,820
engine X on it you put that in here yum

00:31:40,640 --> 00:31:45,860
install y engine X check config on and

00:31:43,820 --> 00:31:48,080
it when it builds the image it installs

00:31:45,860 --> 00:31:49,190
that right away and then when you spin

00:31:48,080 --> 00:31:50,570
up the instance it's already

00:31:49,190 --> 00:31:53,900
automatically on and there you have a

00:31:50,570 --> 00:31:55,250
web server in an instance as soon as

00:31:53,900 --> 00:31:57,460
that as soon as it's spun up in your

00:31:55,250 --> 00:31:57,460
cloud

00:32:03,700 --> 00:32:07,049
this is still running so

00:32:11,570 --> 00:32:15,520
as I said with our my slot here we are

00:32:14,150 --> 00:32:18,310
currently hiring we've got a couple

00:32:15,520 --> 00:32:22,790
positions in our engineering team

00:32:18,310 --> 00:32:25,370
sustaining system release sales if you

00:32:22,790 --> 00:32:27,740
want to move to San Francisco but the

00:32:25,370 --> 00:32:29,720
other other positions actually are

00:32:27,740 --> 00:32:33,500
available any part of the country you

00:32:29,720 --> 00:32:34,640
can be here west coast east coast as

00:32:33,500 --> 00:32:36,470
long as you have connection to the

00:32:34,640 --> 00:32:39,040
internet you can pretty much do the jobs

00:32:36,470 --> 00:32:39,040
we have available

00:32:44,730 --> 00:32:48,320
just running through the last couple

00:32:46,169 --> 00:32:51,429
processes of setting up

00:32:48,320 --> 00:32:51,429
security groups

00:32:51,690 --> 00:32:57,720
so in a nutshell the eucalyptus will let

00:32:55,500 --> 00:32:59,610
me experiment with what i want to do

00:32:57,720 --> 00:33:02,009
with the cloud before moving to amazon

00:32:59,610 --> 00:33:05,580
or will this replace my need to move to

00:33:02,009 --> 00:33:09,000
amazon both as i said i want to in-house

00:33:05,580 --> 00:33:11,779
my servers if you want to Amazon type

00:33:09,000 --> 00:33:14,519
functionality at home this would be it

00:33:11,779 --> 00:33:17,250
we as I said we are a private and hybrid

00:33:14,519 --> 00:33:19,769
cloud the private side of it is you you

00:33:17,250 --> 00:33:22,230
run up eucalyptus on your and your

00:33:19,769 --> 00:33:24,059
metals servers in your data center you

00:33:22,230 --> 00:33:26,610
have fully functional cloud right there

00:33:24,059 --> 00:33:28,710
and it's it operates just the same as

00:33:26,610 --> 00:33:30,899
Amazon does just the same as the other

00:33:28,710 --> 00:33:32,669
Bob let it do it's running on your

00:33:30,899 --> 00:33:35,100
servers you have total control over it

00:33:32,669 --> 00:33:36,389
if you use the hybrid option so you want

00:33:35,100 --> 00:33:37,830
to develop on it and then you can push

00:33:36,389 --> 00:33:40,110
that to amazon so that you're not using

00:33:37,830 --> 00:33:43,200
amazon instances for development or or

00:33:40,110 --> 00:33:45,830
testing and things like that so it works

00:33:43,200 --> 00:33:45,830
for both ways

00:33:49,280 --> 00:33:52,680
yeah question here

00:33:51,180 --> 00:33:55,260
with this software would this be

00:33:52,680 --> 00:33:56,910
considered as a sophomore layer to give

00:33:55,260 --> 00:33:58,830
you a cloud as compared to others

00:33:56,910 --> 00:34:00,450
possibly running a bare metal without

00:33:58,830 --> 00:34:02,720
its own length operating system in the

00:34:00,450 --> 00:34:02,720
middle

00:34:04,060 --> 00:34:07,630
so this is this doesn't run on bare

00:34:05,950 --> 00:34:12,040
metal you have to have an operating

00:34:07,630 --> 00:34:14,440
system obviously right repeat part of

00:34:12,040 --> 00:34:16,510
the question I'm sorry so would this be

00:34:14,440 --> 00:34:17,790
just a software layer for a cloud rather

00:34:16,510 --> 00:34:20,310
than it running on

00:34:17,790 --> 00:34:22,530
yeah it's a software layer so would

00:34:20,310 --> 00:34:24,030
there be like a performance impact or is

00:34:22,530 --> 00:34:25,270
there none of powers for certain

00:34:24,030 --> 00:34:28,270
features

00:34:25,270 --> 00:34:29,530
is the power which like maybe you

00:34:28,270 --> 00:34:31,179
wouldn't have access to certain system

00:34:29,530 --> 00:34:32,890
resources as well as you would if you're

00:34:31,179 --> 00:34:34,570
running a bare metal ore than any

00:34:32,890 --> 00:34:36,540
problems are advantages to being a

00:34:34,570 --> 00:34:39,660
software layer

00:34:36,540 --> 00:34:42,300
you'd have access to the tire system I

00:34:39,660 --> 00:34:43,740
mean once the system spends up you can

00:34:42,300 --> 00:34:46,020
pull all the ram you can do the

00:34:43,740 --> 00:34:48,690
configuration and say you know you can

00:34:46,020 --> 00:34:52,419
even actually overcommit memory and

00:34:48,690 --> 00:34:55,389
processing on it as far as that goes

00:34:52,419 --> 00:34:57,250
is that what you're asking

00:34:55,389 --> 00:34:59,700
I guess is their overhead from

00:34:57,250 --> 00:35:03,140
allocating resources redundantly

00:34:59,700 --> 00:35:03,140
so I didn't just

00:35:05,940 --> 00:35:11,089
but I don't but they we didn't have the

00:35:08,609 --> 00:35:11,089
sales bi

00:35:16,760 --> 00:35:21,830
yeah it's using kvm management on zan

00:35:19,370 --> 00:35:25,280
yet we're using kvn as far as our

00:35:21,830 --> 00:35:28,010
hypervisor management so it's running

00:35:25,280 --> 00:35:31,270
completely there alright so now though

00:35:28,010 --> 00:35:31,270
you could dev environments finally up

00:35:44,790 --> 00:35:48,960
and now this is the one that's currently

00:35:46,350 --> 00:35:52,460
running on my laptop come back over here

00:35:48,960 --> 00:35:52,460
and do vagrant

00:36:01,580 --> 00:36:06,740
and now I'm logged into the cloud

00:36:04,370 --> 00:36:09,370
instance that's running in the in the vm

00:36:06,740 --> 00:36:09,370
on my machine

00:36:10,510 --> 00:36:14,010
can come back over here to do the same

00:36:11,800 --> 00:36:14,010
thing

00:36:44,839 --> 00:36:49,489
and again it starts up the same way as

00:36:47,390 --> 00:36:53,019
the script did on the server it's

00:36:49,489 --> 00:36:55,969
already running an instance got your

00:36:53,019 --> 00:36:57,200
same control security groups already set

00:36:55,969 --> 00:37:02,690
up there there's already a key pair this

00:36:57,200 --> 00:37:05,170
ODI and user come back over to server

00:37:02,690 --> 00:37:05,170
itself

00:37:12,950 --> 00:37:16,119
yeah you can

00:37:16,760 --> 00:37:21,110
both yeah I mean there's definitely

00:37:18,800 --> 00:37:22,910
admin concepts to it but as far as a

00:37:21,110 --> 00:37:24,320
user goes you can create this volumes

00:37:22,910 --> 00:37:26,330
can create snapshots of those volumes

00:37:24,320 --> 00:37:28,760
you can move information back and forth

00:37:26,330 --> 00:37:33,050
with with relative ease you can create

00:37:28,760 --> 00:37:34,760
instance back storage as well you can

00:37:33,050 --> 00:37:37,460
create instances that have volumes

00:37:34,760 --> 00:37:40,360
already attached to them and be able to

00:37:37,460 --> 00:37:40,360
do all of that kind of stuff

00:38:00,190 --> 00:38:04,060
and then here's you know this is the

00:38:01,930 --> 00:38:05,859
what this cloud that's running on my

00:38:04,060 --> 00:38:09,250
laptop I've got the ability to run to in

00:38:05,859 --> 00:38:10,839
smaller instances even to the medium and

00:38:09,250 --> 00:38:12,940
extra-large instances right there on my

00:38:10,839 --> 00:38:16,000
laptop if the testing instance isn't

00:38:12,940 --> 00:38:17,170
launched so this is you know the like I

00:38:16,000 --> 00:38:19,540
said this is the ability to do this

00:38:17,170 --> 00:38:21,160
right there on your laptop you can give

00:38:19,540 --> 00:38:24,130
it more power obviously if you want to

00:38:21,160 --> 00:38:25,960
give that vm more access to more the CPU

00:38:24,130 --> 00:38:27,069
on your machine you want to give it

00:38:25,960 --> 00:38:28,300
access to more hard drive on your

00:38:27,069 --> 00:38:29,740
machine you want to give to access to

00:38:28,300 --> 00:38:31,329
more memory on your machine you can even

00:38:29,740 --> 00:38:35,170
pumped up the volumes that you want to

00:38:31,329 --> 00:38:37,000
be able to run in your laptop itself but

00:38:35,170 --> 00:38:38,950
like I said what the beauty of this

00:38:37,000 --> 00:38:40,750
piece are here is I can disconnect it

00:38:38,950 --> 00:38:42,760
from the internet I can have my laptop

00:38:40,750 --> 00:38:44,319
completely disconnected wireless as well

00:38:42,760 --> 00:38:46,089
and I still have access to this

00:38:44,319 --> 00:38:51,550
environment there's a cloud running on

00:38:46,089 --> 00:38:53,079
my laptop at all times and so that's

00:38:51,550 --> 00:38:58,210
basically what the yuca dev environment

00:38:53,079 --> 00:39:00,119
is yes or an airplane or an airport we

00:38:58,210 --> 00:39:02,200
don't have power you know Wi-Fi

00:39:00,119 --> 00:39:05,700
regardless of what you are you have that

00:39:02,200 --> 00:39:09,900
you have access to a development

00:39:05,700 --> 00:39:09,900
environment at any time

00:39:11,089 --> 00:39:17,029
alright well that is the one thing I

00:39:14,089 --> 00:39:19,039
wanted to show that as far as the being

00:39:17,029 --> 00:39:21,200
able to drive the cloud and do it you

00:39:19,039 --> 00:39:26,390
know anywhere you want it to do I have

00:39:21,200 --> 00:39:28,369
any more questions if you have other

00:39:26,390 --> 00:39:30,140
questions and you want to get a deeper

00:39:28,369 --> 00:39:31,460
knowledge about it you know please see

00:39:30,140 --> 00:39:32,779
me afterwards I can at least point you

00:39:31,460 --> 00:39:34,460
in the right direction to people who can

00:39:32,779 --> 00:39:36,410
answer the the deeper and heavier

00:39:34,460 --> 00:39:41,529
questions that I have not been able to

00:39:36,410 --> 00:39:41,529
answer fully that's it

00:40:20,740 --> 00:40:25,040
your customers rely on your website or

00:40:23,540 --> 00:40:27,410
application if it's slower

00:40:25,040 --> 00:40:30,350
non-responsive it infuriates your users

00:40:27,410 --> 00:40:32,180
and costs you money keeping your

00:40:30,350 --> 00:40:35,670
business critical systems humming along

00:40:32,180 --> 00:40:38,490
requires insight into what they're doing

00:40:35,670 --> 00:40:40,500
your system metrics tell stories stories

00:40:38,490 --> 00:40:42,990
that can reveal performance bottlenecks

00:40:40,500 --> 00:40:45,059
resource limitations and other problems

00:40:42,990 --> 00:40:46,829
but how do you keep an eye on all of

00:40:45,059 --> 00:40:49,440
your systems performance metrics in

00:40:46,829 --> 00:40:52,290
real-time and record this data for later

00:40:49,440 --> 00:40:54,270
analysis enter longview the new way to

00:40:52,290 --> 00:40:56,280
see what's really going on under the

00:40:54,270 --> 00:40:58,410
hood the longview dashboard lets you

00:40:56,280 --> 00:41:00,420
visualize the status of all your systems

00:40:58,410 --> 00:41:03,150
providing you with a bird's-eye view of

00:41:00,420 --> 00:41:06,270
your entire fleet you can sort by cpu

00:41:03,150 --> 00:41:08,730
memory swap processes load and network

00:41:06,270 --> 00:41:11,309
usage click a specific system to access

00:41:08,730 --> 00:41:13,290
its individual dashboard then click and

00:41:11,309 --> 00:41:16,290
drag to zoom in on chokepoints and get

00:41:13,290 --> 00:41:18,299
more detail comprehensive network data

00:41:16,290 --> 00:41:21,000
including inbound and outbound traffic

00:41:18,299 --> 00:41:22,559
is available on the network tab and disk

00:41:21,000 --> 00:41:24,480
rights and free space on the disk

00:41:22,559 --> 00:41:27,329
stabbed while the process Explorer

00:41:24,480 --> 00:41:29,849
displays usage statistics for individual

00:41:27,329 --> 00:41:32,040
processes the system info tab shows

00:41:29,849 --> 00:41:34,260
listening services active connections

00:41:32,040 --> 00:41:36,420
and available updates adding long view

00:41:34,260 --> 00:41:38,099
to a system is easy just click the

00:41:36,420 --> 00:41:40,260
button copy the one line installation

00:41:38,099 --> 00:41:42,690
command then run the command on your

00:41:40,260 --> 00:41:44,400
linux system to complete the process the

00:41:42,690 --> 00:41:46,589
agent will begin collecting data and

00:41:44,400 --> 00:41:48,440
sending it to longview then the graphs

00:41:46,589 --> 00:41:50,990
start rolling

00:41:48,440 --> 00:41:53,359
use longview to gain visibility into

00:41:50,990 --> 00:41:57,099
your servers so when your website or app

00:41:53,359 --> 00:41:57,099

YouTube URL: https://www.youtube.com/watch?v=ASpsBYCLfCA


