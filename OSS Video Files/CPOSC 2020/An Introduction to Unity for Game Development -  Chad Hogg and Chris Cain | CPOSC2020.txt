Title: An Introduction to Unity for Game Development -  Chad Hogg and Chris Cain | CPOSC2020
Publication date: 2021-01-18
Playlist: CPOSC 2020 Recorded Sessions
Description: 
	Session Page: https://cposc.org/sessions/introduction-unity-game-development/
Chat Log: https://cposc.org/chat-log-introduction-unity-game-development/

The Central Pennsylvania Open Source Conference (CPOSC) is a one-day technical conference for open source users and developers. Presentations and sessions cover all aspects of open source, with talks ranging from novice to expert skill levels and featuring case studies, best practices, code-alongs and more. Join us in 2021! https://cposc.org
Captions: 
	00:00:04,960 --> 00:00:08,880
so with that i'm going to turn

00:00:06,399 --> 00:00:11,120
this over to chris kane and chad hogue

00:00:08,880 --> 00:00:14,719
for unity for game development

00:00:11,120 --> 00:00:16,320
chris kane has uh you probably heard us

00:00:14,719 --> 00:00:18,160
talking just a few moments ago he is a

00:00:16,320 --> 00:00:20,000
new assistant professor of compsci at

00:00:18,160 --> 00:00:21,680
millersville university

00:00:20,000 --> 00:00:24,400
chris's research interests include

00:00:21,680 --> 00:00:26,880
designing games for classroom motivation

00:00:24,400 --> 00:00:30,240
and he will be teaching game programming

00:00:26,880 --> 00:00:32,880
in the spring semester of 2021.

00:00:30,240 --> 00:00:33,680
chad hogue is a lancaster county native

00:00:32,880 --> 00:00:35,360
assistant

00:00:33,680 --> 00:00:37,200
professor of computer science also at

00:00:35,360 --> 00:00:39,360
millersville university

00:00:37,200 --> 00:00:41,280
he has been interested in game design

00:00:39,360 --> 00:00:43,680
development since childhood

00:00:41,280 --> 00:00:44,719
i taught a course on the topic for the

00:00:43,680 --> 00:00:47,280
first time in fall

00:00:44,719 --> 00:00:48,320
2019 so we're thrilled to have chris and

00:00:47,280 --> 00:00:50,879
chad here

00:00:48,320 --> 00:00:52,079
uh from mu to tell us all about unity

00:00:50,879 --> 00:00:53,680
for game development

00:00:52,079 --> 00:00:54,960
so take it away gentlemen i'll be in the

00:00:53,680 --> 00:00:56,000
background if you need anything

00:00:54,960 --> 00:00:58,160
moderating and

00:00:56,000 --> 00:00:59,120
we're looking forward to your talk all

00:00:58,160 --> 00:01:01,840
right thank you

00:00:59,120 --> 00:01:02,480
thank you charlie said that i've been

00:01:01,840 --> 00:01:04,159
interested

00:01:02,480 --> 00:01:06,159
in game design development since

00:01:04,159 --> 00:01:07,040
childhood which maybe is overstating the

00:01:06,159 --> 00:01:09,119
thing

00:01:07,040 --> 00:01:11,119
definitely be interested in playing

00:01:09,119 --> 00:01:13,200
games since childhood

00:01:11,119 --> 00:01:14,240
and really became a computer science

00:01:13,200 --> 00:01:16,080
major because

00:01:14,240 --> 00:01:17,439
i wanted to learn how they worked and

00:01:16,080 --> 00:01:19,280
built my own

00:01:17,439 --> 00:01:20,799
but then never really got into it never

00:01:19,280 --> 00:01:22,240
had any time to spend on game

00:01:20,799 --> 00:01:24,159
development

00:01:22,240 --> 00:01:26,720
and as he said a year and a half ago i

00:01:24,159 --> 00:01:28,799
was asked could you please develop a new

00:01:26,720 --> 00:01:31,280
course in game development for us

00:01:28,799 --> 00:01:32,560
and having absolutely zero experience in

00:01:31,280 --> 00:01:34,479
it whatsoever

00:01:32,560 --> 00:01:36,079
i did a mad scramble through trying to

00:01:34,479 --> 00:01:38,400
find books that i could read

00:01:36,079 --> 00:01:39,280
um looking at what seemed to be popular

00:01:38,400 --> 00:01:42,560
and when i came

00:01:39,280 --> 00:01:44,159
uh to conclusion was that at least

00:01:42,560 --> 00:01:46,159
the start would be to use the unity

00:01:44,159 --> 00:01:48,159
engine um

00:01:46,159 --> 00:01:50,000
so if you were watching the talk that

00:01:48,159 --> 00:01:51,680
just ended on game jams

00:01:50,000 --> 00:01:53,200
you saw that there are a great many of

00:01:51,680 --> 00:01:54,479
other options um

00:01:53,200 --> 00:01:55,920
and i can't tell you that unity is

00:01:54,479 --> 00:01:57,520
necessarily the best one it's simply the

00:01:55,920 --> 00:02:00,640
one that i chose to learn for the

00:01:57,520 --> 00:02:03,040
purpose of teaching that course

00:02:00,640 --> 00:02:04,479
and as you also heard in charlie's talk

00:02:03,040 --> 00:02:06,079
that course that i developed a year and

00:02:04,479 --> 00:02:08,879
a half ago chris is going to be teaching

00:02:06,079 --> 00:02:09,679
next semester so that's why we are doing

00:02:08,879 --> 00:02:12,080
this together

00:02:09,679 --> 00:02:13,520
it's sort of my way of passing on the

00:02:12,080 --> 00:02:16,879
knowledge that i gained

00:02:13,520 --> 00:02:19,040
through teaching the course to him

00:02:16,879 --> 00:02:21,200
rather than take a very broad approach

00:02:19,040 --> 00:02:24,000
like that game jam

00:02:21,200 --> 00:02:26,480
talk was we're going to actually build a

00:02:24,000 --> 00:02:27,599
very simple game piece by piece

00:02:26,480 --> 00:02:29,040
so that we can show you all the

00:02:27,599 --> 00:02:30,800
different kinds of things that you might

00:02:29,040 --> 00:02:32,239
want to use when building a game

00:02:30,800 --> 00:02:34,480
and get a sense of what's available and

00:02:32,239 --> 00:02:36,080
how it all works

00:02:34,480 --> 00:02:37,599
the kind of game we're going to build is

00:02:36,080 --> 00:02:40,000
a two former

00:02:37,599 --> 00:02:40,640
because 2d is generally much easier than

00:02:40,000 --> 00:02:43,120
3d

00:02:40,640 --> 00:02:44,720
um more straightforward you can easily

00:02:43,120 --> 00:02:47,599
see what's going on

00:02:44,720 --> 00:02:49,440
um and a platformer is a game type that

00:02:47,599 --> 00:02:52,959
i'm guessing all of us are familiar with

00:02:49,440 --> 00:02:52,959
have experienced at some point

00:02:54,000 --> 00:02:57,440
so unity

00:02:56,120 --> 00:03:00,720
[Music]

00:02:57,440 --> 00:03:04,560
a system of libraries that you can call

00:03:00,720 --> 00:03:06,400
in code it's also an editor program

00:03:04,560 --> 00:03:08,239
that allows you to do an awful lot

00:03:06,400 --> 00:03:09,519
without actually ever even touching any

00:03:08,239 --> 00:03:11,360
code

00:03:09,519 --> 00:03:13,440
we're looking at the unity editor on our

00:03:11,360 --> 00:03:14,959
screen right now

00:03:13,440 --> 00:03:17,040
it's divided up into several different

00:03:14,959 --> 00:03:18,480
sections over here we have a window

00:03:17,040 --> 00:03:20,720
called the hierarchy window

00:03:18,480 --> 00:03:22,400
where we can see all of the game objects

00:03:20,720 --> 00:03:25,440
that exist in our game

00:03:22,400 --> 00:03:27,280
a game object is simply a thing that has

00:03:25,440 --> 00:03:28,799
a position in the world

00:03:27,280 --> 00:03:30,640
and perhaps lots of other things

00:03:28,799 --> 00:03:32,720
associated with it

00:03:30,640 --> 00:03:34,720
each object can have a variety of

00:03:32,720 --> 00:03:36,159
components of both types that are built

00:03:34,720 --> 00:03:39,360
into the system

00:03:36,159 --> 00:03:41,519
types that you create yourself uh

00:03:39,360 --> 00:03:42,400
here we can actually see the objects in

00:03:41,519 --> 00:03:43,920
the world

00:03:42,400 --> 00:03:45,760
currently we can't really see anything

00:03:43,920 --> 00:03:48,239
except a camera that's by design we'll

00:03:45,760 --> 00:03:49,760
be adding things later

00:03:48,239 --> 00:03:51,760
over here is a window called the

00:03:49,760 --> 00:03:53,360
inspector it's actually tabbed we'll see

00:03:51,760 --> 00:03:54,319
there will be several things there over

00:03:53,360 --> 00:03:56,319
time

00:03:54,319 --> 00:03:58,640
but the main use of it is the inspector

00:03:56,319 --> 00:03:59,360
where you can look at an object in your

00:03:58,640 --> 00:04:01,120
world

00:03:59,360 --> 00:04:03,439
add components remove components and

00:04:01,120 --> 00:04:05,120
configure components from it

00:04:03,439 --> 00:04:06,480
so for example if we were to select the

00:04:05,120 --> 00:04:08,080
main camera

00:04:06,480 --> 00:04:10,080
we would see in the inspector that it

00:04:08,080 --> 00:04:12,080
has a transform component

00:04:10,080 --> 00:04:14,239
this is a required element that every

00:04:12,080 --> 00:04:14,720
game object automatically has basically

00:04:14,239 --> 00:04:17,040
says

00:04:14,720 --> 00:04:20,079
where the object exists its size and its

00:04:17,040 --> 00:04:21,919
orientation in the world

00:04:20,079 --> 00:04:23,919
this also has two additional components

00:04:21,919 --> 00:04:25,040
a camera component and audio listener

00:04:23,919 --> 00:04:26,800
component

00:04:25,040 --> 00:04:29,120
the camera component is what allows us

00:04:26,800 --> 00:04:30,880
to say the world is infinitely large but

00:04:29,120 --> 00:04:33,280
we are looking at it

00:04:30,880 --> 00:04:34,720
right now and we can change what part

00:04:33,280 --> 00:04:38,160
we're looking at by changing

00:04:34,720 --> 00:04:40,479
uh the position the

00:04:38,160 --> 00:04:41,520
listener is what allows us to if we had

00:04:40,479 --> 00:04:43,840
sound effects

00:04:41,520 --> 00:04:45,759
which we won't be doing today determine

00:04:43,840 --> 00:04:48,080
how far the source of the sound is

00:04:45,759 --> 00:04:48,800
from the listener of the sound as we

00:04:48,080 --> 00:04:50,639
might

00:04:48,800 --> 00:04:52,800
modify the volume in some way based on

00:04:50,639 --> 00:04:56,000
that or the

00:04:52,800 --> 00:04:57,600
panning of it right or left the

00:04:56,000 --> 00:04:59,199
other object that currently exists is

00:04:57,600 --> 00:05:00,560
called a grid with a tile map

00:04:59,199 --> 00:05:02,560
um we'll be talking about that a little

00:05:00,560 --> 00:05:03,680
bit later we created that in advance

00:05:02,560 --> 00:05:06,479
because we wanted to

00:05:03,680 --> 00:05:08,000
not have to show you some of the fiddly

00:05:06,479 --> 00:05:11,440
take a bunch of times to build

00:05:08,000 --> 00:05:12,800
um phases of this uh and then down here

00:05:11,440 --> 00:05:14,400
finally there's one more window where

00:05:12,800 --> 00:05:16,160
you can see all the assets that are

00:05:14,400 --> 00:05:18,560
available for you using your game

00:05:16,160 --> 00:05:20,080
um we've pre-built a bunch of assets um

00:05:18,560 --> 00:05:23,440
that we'll be using

00:05:20,080 --> 00:05:26,160
um so much of what you might do in here

00:05:23,440 --> 00:05:27,440
is creating stuff using built-in things

00:05:26,160 --> 00:05:29,440
that unity already has

00:05:27,440 --> 00:05:31,120
adding components that they already have

00:05:29,440 --> 00:05:32,639
and configuring them

00:05:31,120 --> 00:05:34,560
but eventually you're probably going to

00:05:32,639 --> 00:05:36,160
want something to do something that you

00:05:34,560 --> 00:05:37,440
have designed

00:05:36,160 --> 00:05:39,680
and this is where you actually write

00:05:37,440 --> 00:05:41,039
your own code in scripts that are built

00:05:39,680 --> 00:05:42,479
in c-sharp

00:05:41,039 --> 00:05:44,240
um so most of the stuff that we have

00:05:42,479 --> 00:05:44,880
pre-built in scripts that when we get to

00:05:44,240 --> 00:05:46,000
them

00:05:44,880 --> 00:05:49,280
we'll go through and explain what

00:05:46,000 --> 00:05:51,840
they're doing um to start out

00:05:49,280 --> 00:05:52,320
uh we're probably going to need a player

00:05:51,840 --> 00:05:54,400
object

00:05:52,320 --> 00:05:58,240
something's going to represent us as we

00:05:54,400 --> 00:05:58,240
move about on this platformer game

00:05:58,319 --> 00:06:01,600
you heard in the previous talk about

00:06:00,080 --> 00:06:04,160
game engines that

00:06:01,600 --> 00:06:05,840
images in a game are called sprites so

00:06:04,160 --> 00:06:07,440
we're going to need a sprite that will

00:06:05,840 --> 00:06:09,280
represent our player

00:06:07,440 --> 00:06:11,440
if we had some artistic skill we might

00:06:09,280 --> 00:06:14,800
create an image to use as our sprite

00:06:11,440 --> 00:06:17,600
in some external um image editor

00:06:14,800 --> 00:06:18,240
or we might go find one that we could

00:06:17,600 --> 00:06:19,919
use

00:06:18,240 --> 00:06:21,600
but because i don't want to do either of

00:06:19,919 --> 00:06:23,280
those things i'm just going to create an

00:06:21,600 --> 00:06:26,800
extremely basic thing that can represent

00:06:23,280 --> 00:06:26,800
our player and it will just be a square

00:06:26,880 --> 00:06:31,759
i will do that by creating in our assets

00:06:30,639 --> 00:06:33,280
collection here

00:06:31,759 --> 00:06:35,360
one of a variety of different options of

00:06:33,280 --> 00:06:38,560
things that are available

00:06:35,360 --> 00:06:40,160
i'd like to create a sprite

00:06:38,560 --> 00:06:42,800
which is a sub menu here and

00:06:40,160 --> 00:06:48,319
specifically a square sprite

00:06:42,800 --> 00:06:51,680
and give it some kind of name

00:06:48,319 --> 00:06:52,639
like character spray then i'm going to

00:06:51,680 --> 00:06:54,639
create something

00:06:52,639 --> 00:06:56,240
in the world i'm actually going to

00:06:54,639 --> 00:06:57,680
create an empty object

00:06:56,240 --> 00:07:00,400
that will have nothing except the

00:06:57,680 --> 00:07:02,639
required components which is a transform

00:07:00,400 --> 00:07:04,240
saying where it is and how it's oriented

00:07:02,639 --> 00:07:07,039
and then we'll add components as we need

00:07:04,240 --> 00:07:08,960
them so this empty object

00:07:07,039 --> 00:07:11,360
i'm going to rename to be called our

00:07:08,960 --> 00:07:11,360
player

00:07:13,759 --> 00:07:17,759
and we can see over here the only

00:07:15,280 --> 00:07:19,199
component it has right now is a position

00:07:17,759 --> 00:07:21,440
i'm going to change that position to put

00:07:19,199 --> 00:07:26,080
it at it exactly

00:07:21,440 --> 00:07:27,599
0 0 0 the center of the world

00:07:26,080 --> 00:07:30,060
and then i'm going to add a component to

00:07:27,599 --> 00:07:31,199
it i would like to be able to see

00:07:30,060 --> 00:07:32,560
[Music]

00:07:31,199 --> 00:07:34,240
something that represents our player

00:07:32,560 --> 00:07:36,080
specifically i'd like to be able to see

00:07:34,240 --> 00:07:37,919
the sprite that we've created so i'm

00:07:36,080 --> 00:07:40,400
going to use a component called a sprite

00:07:37,919 --> 00:07:40,400
renderer

00:07:42,400 --> 00:07:46,319
a sprite renderer allows me to specify a

00:07:44,720 --> 00:07:49,360
sprite that i want to appear

00:07:46,319 --> 00:07:49,919
at the location um in the world where my

00:07:49,360 --> 00:07:52,479
object

00:07:49,919 --> 00:07:55,280
is and i can specify what sprite i want

00:07:52,479 --> 00:07:58,639
to use by dragging the sprite i created

00:07:55,280 --> 00:08:00,000
into here so i now have

00:07:58,639 --> 00:08:02,080
a little white square in the center of

00:08:00,000 --> 00:08:04,560
my world that is my player

00:08:02,080 --> 00:08:06,000
but perhaps i don't want my player to be

00:08:04,560 --> 00:08:06,879
white perhaps i wanted to be some other

00:08:06,000 --> 00:08:09,199
color

00:08:06,879 --> 00:08:11,919
i can accomplish that by double clicking

00:08:09,199 --> 00:08:14,720
this and choosing some other color

00:08:11,919 --> 00:08:17,280
let's make our player what i've been

00:08:14,720 --> 00:08:17,280
doing green

00:08:20,800 --> 00:08:24,240
all right so now we can play our game

00:08:23,120 --> 00:08:27,759
and see that it will be

00:08:24,240 --> 00:08:28,960
incredibly uninteresting if i press this

00:08:27,759 --> 00:08:30,960
play button up here

00:08:28,960 --> 00:08:32,159
we'll get the game to get compiled and

00:08:30,960 --> 00:08:34,880
run and

00:08:32,159 --> 00:08:36,640
here's our game we have my player he's

00:08:34,880 --> 00:08:39,120
just sitting there

00:08:36,640 --> 00:08:40,000
among a background of blue that comes

00:08:39,120 --> 00:08:42,240
from our camera

00:08:40,000 --> 00:08:44,000
and nothing happens here i can't

00:08:42,240 --> 00:08:47,040
interact in any way

00:08:44,000 --> 00:08:48,399
our player is just sitting there so we

00:08:47,040 --> 00:08:50,399
don't have a very interesting game yet

00:08:48,399 --> 00:08:52,320
but we're going to get there

00:08:50,399 --> 00:08:54,480
the next thing that might be helpful is

00:08:52,320 --> 00:08:55,360
if our player responded in some way to

00:08:54,480 --> 00:08:57,440
physics

00:08:55,360 --> 00:08:58,560
in particular in a platformer game if

00:08:57,440 --> 00:09:00,080
your player doesn't have anything

00:08:58,560 --> 00:09:01,200
underneath them they should be falling

00:09:00,080 --> 00:09:03,760
toward the ground

00:09:01,200 --> 00:09:05,600
uh following the rules of gravity so

00:09:03,760 --> 00:09:07,200
we'd like to make our player

00:09:05,600 --> 00:09:08,880
follow those rules we want to

00:09:07,200 --> 00:09:10,320
incorporate the physics engine that's

00:09:08,880 --> 00:09:13,680
built into unity

00:09:10,320 --> 00:09:15,120
and apply it to our object to accomplish

00:09:13,680 --> 00:09:16,240
that we're going to add another type of

00:09:15,120 --> 00:09:18,320
component

00:09:16,240 --> 00:09:20,240
this type of component is called a rigid

00:09:18,320 --> 00:09:22,080
body

00:09:20,240 --> 00:09:23,920
because we're working in 2d we're always

00:09:22,080 --> 00:09:24,640
going to grab the 2d versions of these

00:09:23,920 --> 00:09:27,200
things

00:09:24,640 --> 00:09:29,279
um they're also 3d versions but we want

00:09:27,200 --> 00:09:30,720
a rigid body 2d

00:09:29,279 --> 00:09:32,560
it's got a bunch of things that we can

00:09:30,720 --> 00:09:34,560
configure here but for now at least

00:09:32,560 --> 00:09:35,839
we're not going to

00:09:34,560 --> 00:09:38,800
we're just going gonna play our game and

00:09:35,839 --> 00:09:38,800
see if anything's different

00:09:42,240 --> 00:09:45,760
that's better our player is now

00:09:44,160 --> 00:09:47,279
controlled by gravity

00:09:45,760 --> 00:09:50,560
and if there's nothing stopping him from

00:09:47,279 --> 00:09:52,480
falling he falls

00:09:50,560 --> 00:09:53,920
unfortunately for now he falls forever

00:09:52,480 --> 00:09:56,800
and ever and ever um

00:09:53,920 --> 00:09:58,800
but we'll fix that later anything i've

00:09:56,800 --> 00:10:01,760
forgotten to discuss yet chris

00:09:58,800 --> 00:10:02,800
did we want to make a quick reference to

00:10:01,760 --> 00:10:05,040
licensing

00:10:02,800 --> 00:10:07,279
i did um so this is the central

00:10:05,040 --> 00:10:09,600
pennsylvania open source conference

00:10:07,279 --> 00:10:11,120
um the unity engine the thing that we

00:10:09,600 --> 00:10:11,519
are currently working in to build our

00:10:11,120 --> 00:10:14,240
game

00:10:11,519 --> 00:10:14,800
is not open source it is closed source

00:10:14,240 --> 00:10:16,720
however

00:10:14,800 --> 00:10:18,160
many of the components that we're adding

00:10:16,720 --> 00:10:20,800
are open source and

00:10:18,160 --> 00:10:22,320
anybody can create components and make

00:10:20,800 --> 00:10:24,720
them open source themselves and share

00:10:22,320 --> 00:10:26,560
them with the community to use

00:10:24,720 --> 00:10:28,720
in addition to being closed source it is

00:10:26,560 --> 00:10:29,760
not free software is proprietary

00:10:28,720 --> 00:10:32,720
software

00:10:29,760 --> 00:10:33,200
however it is free as in beer for most

00:10:32,720 --> 00:10:36,800
people

00:10:33,200 --> 00:10:39,120
it has extremely um generous licensing

00:10:36,800 --> 00:10:40,160
if you want to use unity for educational

00:10:39,120 --> 00:10:42,160
purposes

00:10:40,160 --> 00:10:44,000
for hobby purposes or even for

00:10:42,160 --> 00:10:46,160
commercial purposes

00:10:44,000 --> 00:10:47,760
you can get a license that uh gives you

00:10:46,160 --> 00:10:50,320
the right to do so for free

00:10:47,760 --> 00:10:51,040
as long as you do not make more than 500

00:10:50,320 --> 00:10:52,800
00:10:51,040 --> 00:10:55,519
off of the things that you create in

00:10:52,800 --> 00:10:56,160
unity um and if you do you'll easily be

00:10:55,519 --> 00:10:59,440
able to

00:10:56,160 --> 00:11:02,240
uh afford the licenses that um

00:10:59,440 --> 00:11:02,240
you have to pay for

00:11:02,480 --> 00:11:05,680
all right so our player falls down it

00:11:04,640 --> 00:11:07,360
would be helpful for them to have

00:11:05,680 --> 00:11:09,519
something to fall onto

00:11:07,360 --> 00:11:10,880
and need to move around jump from one to

00:11:09,519 --> 00:11:13,920
the others etc

00:11:10,880 --> 00:11:15,680
so we need to create some platforms in

00:11:13,920 --> 00:11:17,519
order to do so

00:11:15,680 --> 00:11:19,200
we need something to make our platforms

00:11:17,519 --> 00:11:20,800
out of

00:11:19,200 --> 00:11:22,800
this is also something that you might

00:11:20,800 --> 00:11:25,600
have heard already

00:11:22,800 --> 00:11:27,600
in the talk previously about game menus

00:11:25,600 --> 00:11:29,519
we're going to use a sprite sheet

00:11:27,600 --> 00:11:32,480
which contains a whole bunch of little

00:11:29,519 --> 00:11:34,959
images connected in a larger picture

00:11:32,480 --> 00:11:36,560
that is this if we open up this drawer

00:11:34,959 --> 00:11:38,800
we can see all the individual images

00:11:36,560 --> 00:11:40,399
within this sprite sheet

00:11:38,800 --> 00:11:42,320
we need to convert that sprite sheet

00:11:40,399 --> 00:11:45,200
into a series of tiles

00:11:42,320 --> 00:11:47,120
and i have pre-done that before we

00:11:45,200 --> 00:11:49,680
started the lecture

00:11:47,120 --> 00:11:51,760
or the presentation and in fact even

00:11:49,680 --> 00:11:54,399
started painting this grid with them

00:11:51,760 --> 00:11:54,959
this grid allows me to put tile maps on

00:11:54,399 --> 00:11:58,079
it and

00:11:54,959 --> 00:11:59,839
tile maps allow me to paint with tiles

00:11:58,079 --> 00:12:01,680
which are just images taken from a

00:11:59,839 --> 00:12:03,440
sprite sheet

00:12:01,680 --> 00:12:05,920
so we've been using the inspector here

00:12:03,440 --> 00:12:08,000
the other tab here is a tile palette

00:12:05,920 --> 00:12:10,399
where i can grab tiles and paint them

00:12:08,000 --> 00:12:13,600
onto my tile map

00:12:10,399 --> 00:12:15,360
let's see if i can manage to do that and

00:12:13,600 --> 00:12:17,839
make a little platform here underneath

00:12:15,360 --> 00:12:17,839
our player

00:12:22,800 --> 00:12:26,320
and perhaps make an additional platform

00:12:24,959 --> 00:12:28,639
that the player could jump to in the

00:12:26,320 --> 00:12:28,639
future

00:12:35,200 --> 00:12:40,480
now we can play our game and we should

00:12:36,880 --> 00:12:40,480
be able to see the platforms there

00:12:41,360 --> 00:12:44,560
unfortunately as you noticed our player

00:12:43,839 --> 00:12:46,480
still falls

00:12:44,560 --> 00:12:47,920
straight through our platforms so

00:12:46,480 --> 00:12:50,240
they're not really serving their purpose

00:12:47,920 --> 00:12:51,760
they're just

00:12:50,240 --> 00:12:53,200
just being displayed there but they're

00:12:51,760 --> 00:12:55,600
not actually doing anything they don't

00:12:53,200 --> 00:12:58,399
interact with physics in any way

00:12:55,600 --> 00:13:00,240
um so it would also be nice if when our

00:12:58,399 --> 00:13:02,880
player was on a platform they would not

00:13:00,240 --> 00:13:04,639
fall through it but instead stop

00:13:02,880 --> 00:13:06,000
uh in order to accomplish this we need

00:13:04,639 --> 00:13:07,519
another kind of component

00:13:06,000 --> 00:13:09,279
another one that is built into unity

00:13:07,519 --> 00:13:11,279
because virtually all

00:13:09,279 --> 00:13:14,639
types of games need this we need some

00:13:11,279 --> 00:13:17,040
way to detect collisions between objects

00:13:14,639 --> 00:13:18,000
to do so we're going to add a collider

00:13:17,040 --> 00:13:20,959
component

00:13:18,000 --> 00:13:22,320
to both our platforms and our player um

00:13:20,959 --> 00:13:23,839
there are a variety of different types

00:13:22,320 --> 00:13:25,839
of colliders and we want to choose the

00:13:23,839 --> 00:13:28,160
type that matches the shape of the

00:13:25,839 --> 00:13:29,920
object that we're dealing with

00:13:28,160 --> 00:13:32,839
so our tile map is going to have a

00:13:29,920 --> 00:13:35,839
component edge to it called a tile map

00:13:32,839 --> 00:13:35,839
collider

00:13:41,360 --> 00:13:48,399
3d of course and we'll leave all of its

00:13:45,519 --> 00:13:50,000
options at their defaults we're also

00:13:48,399 --> 00:13:50,800
going to add to our player a type of

00:13:50,000 --> 00:13:52,720
collider

00:13:50,800 --> 00:13:54,959
in this case it'll be a box collider

00:13:52,720 --> 00:13:56,240
because our player is square shaped

00:13:54,959 --> 00:13:59,680
if it was different shape we could

00:13:56,240 --> 00:13:59,680
choose some other kind of collider

00:14:00,480 --> 00:14:04,399
and without having to configure those in

00:14:02,320 --> 00:14:06,480
any way we should be able to see that

00:14:04,399 --> 00:14:09,920
now our player when it hits the platform

00:14:06,480 --> 00:14:12,079
stops because by default if we are

00:14:09,920 --> 00:14:12,959
detecting collisions when two things

00:14:12,079 --> 00:14:16,160
collide

00:14:12,959 --> 00:14:17,920
um they can't move through each other

00:14:16,160 --> 00:14:19,440
so our player is sitting there on the

00:14:17,920 --> 00:14:22,000
platform and he is stuck

00:14:19,440 --> 00:14:24,720
because we currently have no input no

00:14:22,000 --> 00:14:26,880
way to control our character at all

00:14:24,720 --> 00:14:28,320
it would be nice if we did so and to get

00:14:26,880 --> 00:14:29,199
to that point we're finally going to be

00:14:28,320 --> 00:14:31,360
writing some code

00:14:29,199 --> 00:14:33,199
doing something that feels like we are

00:14:31,360 --> 00:14:36,399
developers doing computer

00:14:33,199 --> 00:14:37,680
some computer science um so i'll let

00:14:36,399 --> 00:14:39,920
chris tell you about how that's going to

00:14:37,680 --> 00:14:39,920
work

00:14:41,440 --> 00:14:46,480
hello everyone so

00:14:45,040 --> 00:14:48,079
the first thing we think about when

00:14:46,480 --> 00:14:49,279
we're looking at this and saying all

00:14:48,079 --> 00:14:51,680
right what do we need to do at this

00:14:49,279 --> 00:14:52,720
point it'd be nice if we could get some

00:14:51,680 --> 00:14:55,120
kind of

00:14:52,720 --> 00:14:57,279
input and use that to control the player

00:14:55,120 --> 00:15:00,480
character

00:14:57,279 --> 00:15:03,920
so that is what we will do first

00:15:00,480 --> 00:15:07,519
we want to add a script to the player

00:15:03,920 --> 00:15:10,560
that will control the player's movement

00:15:07,519 --> 00:15:13,839
so we will go to this

00:15:10,560 --> 00:15:13,839
step we will

00:15:13,920 --> 00:15:18,560
select the player and we want to now add

00:15:16,800 --> 00:15:20,639
to the player a component

00:15:18,560 --> 00:15:21,839
that is this script that we have already

00:15:20,639 --> 00:15:24,240
written here

00:15:21,839 --> 00:15:24,959
and i will first attach it and then i

00:15:24,240 --> 00:15:27,839
will open it

00:15:24,959 --> 00:15:28,959
and describe what it does so you just

00:15:27,839 --> 00:15:31,839
drag and drop

00:15:28,959 --> 00:15:33,199
over the add component enough we have

00:15:31,839 --> 00:15:36,000
now attached this

00:15:33,199 --> 00:15:36,720
player movement script but let's quickly

00:15:36,000 --> 00:15:39,440
open it up

00:15:36,720 --> 00:15:41,360
and take a deeper look it's into what it

00:15:39,440 --> 00:15:43,120
does

00:15:41,360 --> 00:15:46,000
is that font size working or do we need

00:15:43,120 --> 00:15:46,000
to make it larger

00:15:46,560 --> 00:15:50,639
if you could increase it that would be

00:15:52,839 --> 00:15:57,519
helpful

00:15:54,079 --> 00:16:00,959
see here's a faster way to do this

00:15:57,519 --> 00:16:03,600
yeah about now uh that's uh for my over

00:16:00,959 --> 00:16:05,360
um 40 eyes that's looking better thank

00:16:03,600 --> 00:16:08,560
you

00:16:05,360 --> 00:16:12,240
all right excellent so

00:16:08,560 --> 00:16:13,040
here we have a class that describes the

00:16:12,240 --> 00:16:17,040
behavior

00:16:13,040 --> 00:16:18,240
of this we have a couple fields the

00:16:17,040 --> 00:16:21,360
private rigid body

00:16:18,240 --> 00:16:22,240
and a public horizontal force that will

00:16:21,360 --> 00:16:25,600
be applied

00:16:22,240 --> 00:16:28,320
when we press the appropriate button

00:16:25,600 --> 00:16:30,000
scripts in unity use c-sharp and there

00:16:28,320 --> 00:16:32,959
are two methods that you get

00:16:30,000 --> 00:16:33,839
by default when you make a new script

00:16:32,959 --> 00:16:36,800
you get start

00:16:33,839 --> 00:16:38,399
and update we have turned update into

00:16:36,800 --> 00:16:39,920
fixed update and i will describe what

00:16:38,399 --> 00:16:43,440
that does in a second

00:16:39,920 --> 00:16:46,639
start is a script is a method that runs

00:16:43,440 --> 00:16:49,600
when you begin the game so we of course

00:16:46,639 --> 00:16:50,000
want to get our rigidbody component and

00:16:49,600 --> 00:16:52,000
store

00:16:50,000 --> 00:16:53,279
that as a variable that we can

00:16:52,000 --> 00:16:56,480
manipulate

00:16:53,279 --> 00:16:57,360
fixed update is a slightly different

00:16:56,480 --> 00:17:00,880
version of

00:16:57,360 --> 00:17:04,640
update update would run once per frame

00:17:00,880 --> 00:17:06,000
however we want to run a constant number

00:17:04,640 --> 00:17:07,760
of times just in case

00:17:06,000 --> 00:17:09,839
the number of frames vary we don't

00:17:07,760 --> 00:17:12,640
necessarily want that to affect

00:17:09,839 --> 00:17:15,039
our movement so we're going to call

00:17:12,640 --> 00:17:18,160
fixed update

00:17:15,039 --> 00:17:20,400
and when we get the appropriate

00:17:18,160 --> 00:17:23,280
input for horizontal movement that has

00:17:20,400 --> 00:17:25,280
been pre-mapped in unity to be

00:17:23,280 --> 00:17:27,520
for the case of this demo it is the

00:17:25,280 --> 00:17:30,559
right arrow key

00:17:27,520 --> 00:17:32,080
we will transform in the right direction

00:17:30,559 --> 00:17:35,360
by the amount that we press

00:17:32,080 --> 00:17:38,240
either right or left we will scale that

00:17:35,360 --> 00:17:39,600
by horizontal force which we have

00:17:38,240 --> 00:17:42,880
determined to be

00:17:39,600 --> 00:17:46,720
7.0 this is just a number that we tested

00:17:42,880 --> 00:17:49,919
and it works for the scope of our

00:17:46,720 --> 00:18:01,120
project are there any questions about

00:17:49,919 --> 00:18:04,480
what is going on in this script

00:18:01,120 --> 00:18:06,080
not vegan so i

00:18:04,480 --> 00:18:08,000
dragged and dropped this over the player

00:18:06,080 --> 00:18:09,360
it has been applied we can see

00:18:08,000 --> 00:18:11,440
that the text is probably a bit too

00:18:09,360 --> 00:18:13,440
small to see but here is an editable

00:18:11,440 --> 00:18:15,520
field now for horizontal force we can

00:18:13,440 --> 00:18:19,039
actually change this here

00:18:15,520 --> 00:18:22,080
but the public field from our

00:18:19,039 --> 00:18:25,760
script is now an editable field in

00:18:22,080 --> 00:18:28,400
the ui we can now play the game and see

00:18:25,760 --> 00:18:29,919
what happens

00:18:28,400 --> 00:18:31,600
and here's where you hope there are no

00:18:29,919 --> 00:18:32,080
bugs because this occasionally does get

00:18:31,600 --> 00:18:36,160
stuck

00:18:32,080 --> 00:18:39,200
and it looks like sure enough i can move

00:18:36,160 --> 00:18:43,840
left and right as i press and hold

00:18:39,200 --> 00:18:43,840
the left and right arrow keys

00:18:44,320 --> 00:18:50,720
unfortunately there are a couple of

00:18:47,520 --> 00:18:52,000
unintended consequences as i move off

00:18:50,720 --> 00:18:54,600
the ledge you'll see that

00:18:52,000 --> 00:18:55,760
in fact our player character actually

00:18:54,600 --> 00:18:58,559
rotates

00:18:55,760 --> 00:18:59,360
and this can be a bit of a problem if we

00:18:58,559 --> 00:19:02,559
actually

00:18:59,360 --> 00:19:04,559
rotate our character the force that we

00:19:02,559 --> 00:19:05,679
see may be applied in directions that we

00:19:04,559 --> 00:19:07,360
don't intend

00:19:05,679 --> 00:19:09,280
when we press the left and right arrow

00:19:07,360 --> 00:19:11,760
key we want

00:19:09,280 --> 00:19:13,760
the object to move left and right and if

00:19:11,760 --> 00:19:16,720
we find ourselves having rotated

00:19:13,760 --> 00:19:18,000
the force that gets applied is to is

00:19:16,720 --> 00:19:20,640
based on the local

00:19:18,000 --> 00:19:22,000
object so we may end up not quite moving

00:19:20,640 --> 00:19:24,640
left and right

00:19:22,000 --> 00:19:25,600
so we want to do something about that

00:19:24,640 --> 00:19:28,720
which we can do

00:19:25,600 --> 00:19:30,320
if we move if we find ourselves back in

00:19:28,720 --> 00:19:32,960
the inspector here we can

00:19:30,320 --> 00:19:34,400
freeze z rotation it's just this check

00:19:32,960 --> 00:19:38,240
box right here

00:19:34,400 --> 00:19:41,200
and now when we play we note that

00:19:38,240 --> 00:19:42,960
when we move off of our platform we do

00:19:41,200 --> 00:19:45,679
not we no longer rotate

00:19:42,960 --> 00:19:47,679
and this means that any force that is

00:19:45,679 --> 00:19:50,799
applied will continuously be applied

00:19:47,679 --> 00:19:50,799
left or right

00:19:51,520 --> 00:19:57,440
all right success

00:19:55,600 --> 00:19:59,520
we want to move onwards the next thing

00:19:57,440 --> 00:20:01,120
that we might reasonably want to do in a

00:19:59,520 --> 00:20:03,600
platform game it's not much of a

00:20:01,120 --> 00:20:06,400
platform game if we can't jump

00:20:03,600 --> 00:20:07,360
so let's talk about how we might

00:20:06,400 --> 00:20:09,760
implement

00:20:07,360 --> 00:20:09,760
jumping

00:20:10,799 --> 00:20:14,000
for this we're going to update our

00:20:12,960 --> 00:20:17,120
player movement

00:20:14,000 --> 00:20:17,520
script so rather than write this where

00:20:17,120 --> 00:20:20,080
we've

00:20:17,520 --> 00:20:20,880
pre-written it so we will you can delete

00:20:20,080 --> 00:20:23,760
a script

00:20:20,880 --> 00:20:25,440
off of an object by right clicking and

00:20:23,760 --> 00:20:27,760
removing the component

00:20:25,440 --> 00:20:28,799
i will remove this component and i will

00:20:27,760 --> 00:20:35,840
attach

00:20:28,799 --> 00:20:35,840
the new player movement script

00:20:37,039 --> 00:20:42,080
i will open up this player movement

00:20:38,400 --> 00:20:45,520
script and let's see what has changed

00:20:42,080 --> 00:20:48,880
in addition to a horizontal force

00:20:45,520 --> 00:20:50,960
we have a vertical force this is useful

00:20:48,880 --> 00:20:53,120
for when we press the appropriate button

00:20:50,960 --> 00:20:53,440
in this case the pre-mapped unity button

00:20:53,120 --> 00:20:57,760
for

00:20:53,440 --> 00:21:01,440
jump which is the space bar we will

00:20:57,760 --> 00:21:04,159
transform in the up direction our player

00:21:01,440 --> 00:21:06,080
when we press the jump key scaled by the

00:21:04,159 --> 00:21:08,559
vertical force that we've defined to be

00:21:06,080 --> 00:21:09,840
18 again this is just a tested value

00:21:08,559 --> 00:21:13,039
that displays

00:21:09,840 --> 00:21:14,960
something like we might expect

00:21:13,039 --> 00:21:17,840
so let's see what happens when we play

00:21:14,960 --> 00:21:17,840
the game

00:21:18,240 --> 00:21:21,360
in addition to being able to continue to

00:21:20,000 --> 00:21:24,400
move left and right

00:21:21,360 --> 00:21:27,520
we can now press our key and jump

00:21:24,400 --> 00:21:30,320
except what's going on here

00:21:27,520 --> 00:21:32,400
this doesn't follow the rules that we

00:21:30,320 --> 00:21:33,280
might anticipate with jumping we more so

00:21:32,400 --> 00:21:36,320
have a

00:21:33,280 --> 00:21:38,080
rocket pack than we have legs which

00:21:36,320 --> 00:21:39,760
may be fun for some game but we want to

00:21:38,080 --> 00:21:42,840
build a platformer

00:21:39,760 --> 00:21:45,039
and we want something that will look

00:21:42,840 --> 00:21:48,799
like an actual

00:21:45,039 --> 00:21:51,679
jump so let's take a look

00:21:48,799 --> 00:21:51,679
at that

00:21:53,360 --> 00:21:58,159
i will again repeat the prior step of

00:21:56,000 --> 00:22:01,679
moving to our player object

00:21:58,159 --> 00:22:13,840
removing the old script

00:22:01,679 --> 00:22:13,840
and we will attach our new script

00:22:15,919 --> 00:22:20,480
okay let's open up this script and see

00:22:17,520 --> 00:22:20,480
what changes we've made

00:22:21,039 --> 00:22:25,039
note that we have immensely scaled this

00:22:23,280 --> 00:22:26,080
vertical force because if we think about

00:22:25,039 --> 00:22:28,640
how jumping is going

00:22:26,080 --> 00:22:29,840
to work we want to apply an immense

00:22:28,640 --> 00:22:31,440
amount of pressure

00:22:29,840 --> 00:22:34,159
while we are on the ground and then we

00:22:31,440 --> 00:22:36,480
want the ability to do that to stop

00:22:34,159 --> 00:22:40,320
until we are back on the ground we call

00:22:36,480 --> 00:22:43,360
this the concept of grounding

00:22:40,320 --> 00:22:44,640
so the start method looks the same but

00:22:43,360 --> 00:22:47,760
we have a couple

00:22:44,640 --> 00:22:48,799
new methods here we have on collision

00:22:47,760 --> 00:22:51,520
enter 2d

00:22:48,799 --> 00:22:52,799
on collision stay 2d and on collision

00:22:51,520 --> 00:22:55,440
exit 2d

00:22:52,799 --> 00:22:56,960
these will identify when we collide and

00:22:55,440 --> 00:23:00,080
or when we are

00:22:56,960 --> 00:23:04,320
attached to the ground

00:23:00,080 --> 00:23:07,360
so let's start with on collision enter

00:23:04,320 --> 00:23:08,480
we first need to see and identify when a

00:23:07,360 --> 00:23:10,799
collision occurs

00:23:08,480 --> 00:23:11,760
so the parameter to this method is a

00:23:10,799 --> 00:23:13,679
collision

00:23:11,760 --> 00:23:17,840
we need to check what did we collide

00:23:13,679 --> 00:23:20,799
with if we collided with the tile map

00:23:17,840 --> 00:23:22,640
then we want to check the normal vector

00:23:20,799 --> 00:23:23,440
if the normal vector for that collision

00:23:22,640 --> 00:23:26,799
is in the up

00:23:23,440 --> 00:23:30,640
direction then we're going to set this

00:23:26,799 --> 00:23:34,400
ground field equal to

00:23:30,640 --> 00:23:34,400
the game object that we collided with

00:23:34,480 --> 00:23:37,520
this has the potential to introduce a

00:23:36,720 --> 00:23:39,679
bug

00:23:37,520 --> 00:23:41,039
in that if it doesn't quite work when we

00:23:39,679 --> 00:23:43,679
collide

00:23:41,039 --> 00:23:44,960
it will not stay so we wrote this on

00:23:43,679 --> 00:23:48,000
collision stay

00:23:44,960 --> 00:23:50,159
method to ensure that this is

00:23:48,000 --> 00:23:52,400
true as long as we are attached to the

00:23:50,159 --> 00:23:55,760
game object and not just when we collide

00:23:52,400 --> 00:23:59,440
with the game object we also

00:23:55,760 --> 00:24:01,360
check when we cease to be

00:23:59,440 --> 00:24:05,200
on the ground we will set the ground

00:24:01,360 --> 00:24:09,039
object to know

00:24:05,200 --> 00:24:12,320
and now we only want to allow

00:24:09,039 --> 00:24:14,720
the upward force if the ground is not

00:24:12,320 --> 00:24:18,000
null so if we are on the ground

00:24:14,720 --> 00:24:19,919
then the space bar will apply much more

00:24:18,000 --> 00:24:22,240
force than we had in the last script

00:24:19,919 --> 00:24:23,520
and if we are in the air we cannot apply

00:24:22,240 --> 00:24:28,880
additional vertical

00:24:23,520 --> 00:24:33,840
force questions about this script before

00:24:28,880 --> 00:24:33,840
i showcase it in action

00:24:38,080 --> 00:24:43,120
i will switch back if you have a

00:24:40,159 --> 00:24:47,840
question which i will gladly answer

00:24:43,120 --> 00:24:47,840
so let's actually see how this works

00:24:49,360 --> 00:24:52,400
all right i can still move left and

00:24:51,120 --> 00:24:56,640
right but now when i

00:24:52,400 --> 00:24:57,840
jump even if i'm holding down the space

00:24:56,640 --> 00:25:00,559
bar and matching it

00:24:57,840 --> 00:25:01,600
it only works and only applies the force

00:25:00,559 --> 00:25:05,200
if

00:25:01,600 --> 00:25:06,960
i'm on the ground it's exciting and it

00:25:05,200 --> 00:25:11,039
allows us to do fun things

00:25:06,960 --> 00:25:14,240
like jump to the next platform

00:25:11,039 --> 00:25:16,960
exciting however we note

00:25:14,240 --> 00:25:18,640
that in order to move to what might be

00:25:16,960 --> 00:25:20,159
some additional platforms we want the

00:25:18,640 --> 00:25:22,799
camera to follow the player

00:25:20,159 --> 00:25:25,279
and not to stay centered in the world so

00:25:22,799 --> 00:25:29,840
to do this

00:25:25,279 --> 00:25:29,840
by player we are going to

00:25:32,320 --> 00:25:38,000
take the camera and make the camera a

00:25:35,600 --> 00:25:38,960
child object of our player object and we

00:25:38,000 --> 00:25:42,880
can do this

00:25:38,960 --> 00:25:45,919
by dragging our camera onto our player

00:25:42,880 --> 00:25:47,840
and this makes it a child of the player

00:25:45,919 --> 00:25:49,600
now if we were to run the game again

00:25:47,840 --> 00:25:51,200
with everything the way that has been

00:25:49,600 --> 00:25:54,720
set up

00:25:51,200 --> 00:25:57,200
what we see is that sure enough a camera

00:25:54,720 --> 00:25:58,000
follows the player at all times and sure

00:25:57,200 --> 00:25:59,440
enough

00:25:58,000 --> 00:26:01,360
now it seems like we might have a bit

00:25:59,440 --> 00:26:02,640
more playable game as we discover these

00:26:01,360 --> 00:26:07,200
other platforms

00:26:02,640 --> 00:26:07,200
that we made prior to our presentation

00:26:08,000 --> 00:26:11,440
all right i will hand this back to chad

00:26:10,720 --> 00:26:14,640
for the

00:26:11,440 --> 00:26:14,640
next section

00:26:16,000 --> 00:26:20,080
all right so we're getting somewhere um

00:26:18,559 --> 00:26:22,240
but if we play the game again

00:26:20,080 --> 00:26:24,000
we'll notice something that's not super

00:26:22,240 --> 00:26:26,720
fun is that if i attempt

00:26:24,000 --> 00:26:28,400
to make some jumps here and i fail to do

00:26:26,720 --> 00:26:30,880
so

00:26:28,400 --> 00:26:32,640
i fall to my death but i don't really

00:26:30,880 --> 00:26:35,840
fall to my death i just fall

00:26:32,640 --> 00:26:37,760
forever and ever and ever if you were

00:26:35,840 --> 00:26:39,360
much nicer if i actually did fall to my

00:26:37,760 --> 00:26:40,640
death so that i could restart the game

00:26:39,360 --> 00:26:44,400
without having to literally

00:26:40,640 --> 00:26:46,000
exit it and recreate it

00:26:44,400 --> 00:26:48,320
in order to do this we're going to do a

00:26:46,000 --> 00:26:50,320
bunch of steps when the player has died

00:26:48,320 --> 00:26:51,760
we want to notify them

00:26:50,320 --> 00:26:53,520
in some way that they have died and the

00:26:51,760 --> 00:26:54,880
game is going to be restarted

00:26:53,520 --> 00:26:56,559
uh there are a couple ways we could do

00:26:54,880 --> 00:26:58,480
that but in order to notify them we're

00:26:56,559 --> 00:26:59,600
just going to overlay some text on top

00:26:58,480 --> 00:27:01,760
of the window

00:26:59,600 --> 00:27:03,039
to do that we need a few more objects in

00:27:01,760 --> 00:27:05,279
our game

00:27:03,039 --> 00:27:06,640
first we're going to create under the ui

00:27:05,279 --> 00:27:08,240
menu a canvas

00:27:06,640 --> 00:27:11,679
a canvas is a thing that we can put

00:27:08,240 --> 00:27:13,120
other ui objects onto

00:27:11,679 --> 00:27:14,880
it automatically comes with another

00:27:13,120 --> 00:27:16,880
thing called an event system

00:27:14,880 --> 00:27:18,080
we won't be using that at all but if we

00:27:16,880 --> 00:27:20,320
were to put things like

00:27:18,080 --> 00:27:22,320
buttons or drop downs or other

00:27:20,320 --> 00:27:23,840
interactive things on our canvas

00:27:22,320 --> 00:27:26,240
the event system would cause them to

00:27:23,840 --> 00:27:28,640
fire the only thing that we want to put

00:27:26,240 --> 00:27:31,760
on our canvas

00:27:28,640 --> 00:27:33,120
is some text you'll note that the text

00:27:31,760 --> 00:27:35,120
automatically became a child of the

00:27:33,120 --> 00:27:36,960
canvas because i created it

00:27:35,120 --> 00:27:38,640
not by right clicking down here in an

00:27:36,960 --> 00:27:41,440
empty spot by right-clicking on the

00:27:38,640 --> 00:27:42,799
thing that i wanted to become apparent

00:27:41,440 --> 00:27:46,799
i'm going to rename this because we'll

00:27:42,799 --> 00:27:46,799
eventually have multiple text areas

00:27:47,679 --> 00:27:51,840
and then i'm going to edit some of the

00:27:49,919 --> 00:27:53,520
properties of the components that a text

00:27:51,840 --> 00:27:57,360
automatically has

00:27:53,520 --> 00:28:01,120
quite a few of them in fact i recall

00:27:57,360 --> 00:28:02,720
during the discussion in

00:28:01,120 --> 00:28:05,360
the last one of these presentations on

00:28:02,720 --> 00:28:08,399
game jams you were given a suggestion

00:28:05,360 --> 00:28:10,240
which was build everything and have at

00:28:08,399 --> 00:28:13,360
least your minimal working product

00:28:10,240 --> 00:28:15,919
done very quickly um because it takes a

00:28:13,360 --> 00:28:16,880
long time to adjust parameters and tweak

00:28:15,919 --> 00:28:19,360
things

00:28:16,880 --> 00:28:20,880
which is very much true um we're able to

00:28:19,360 --> 00:28:22,000
know this is exactly the size i want

00:28:20,880 --> 00:28:23,520
this to be

00:28:22,000 --> 00:28:25,120
because we spent a lot of time figuring

00:28:23,520 --> 00:28:26,240
that out

00:28:25,120 --> 00:28:28,880
but if we were building this from

00:28:26,240 --> 00:28:30,320
scratch we would need to spend quite a

00:28:28,880 --> 00:28:31,600
lot of time trying numbers

00:28:30,320 --> 00:28:34,000
seeing that they didn't work trying

00:28:31,600 --> 00:28:35,600
other numbers

00:28:34,000 --> 00:28:37,520
so we're changing the text here to be

00:28:35,600 --> 00:28:39,360
you died restarting

00:28:37,520 --> 00:28:41,039
i changed the width and height to be

00:28:39,360 --> 00:28:42,840
large enough to hold that

00:28:41,039 --> 00:28:44,399
with the new font size that i'm going to

00:28:42,840 --> 00:28:45,600
set

00:28:44,399 --> 00:28:48,000
and i'm going to change the color of

00:28:45,600 --> 00:28:49,600
this text from black to

00:28:48,000 --> 00:28:51,440
since we are telling the user some

00:28:49,600 --> 00:28:54,240
unfortunate information

00:28:51,440 --> 00:28:54,240
a bright red

00:28:55,200 --> 00:28:59,279
the other thing i'm going to do which is

00:28:57,600 --> 00:29:01,039
pretty weird is i'm going to uncheck

00:28:59,279 --> 00:29:02,880
this box up here

00:29:01,039 --> 00:29:05,440
and i'll show you why if i play the game

00:29:02,880 --> 00:29:08,640
right now it will tell me all the time

00:29:05,440 --> 00:29:10,240
that i died and the game is restarting

00:29:08,640 --> 00:29:11,919
but of course i haven't died yet and the

00:29:10,240 --> 00:29:13,919
game isn't restarting so i shouldn't see

00:29:11,919 --> 00:29:16,640
that text

00:29:13,919 --> 00:29:19,360
by unchecking this box i'm saying this

00:29:16,640 --> 00:29:21,360
component exists but it's not currently

00:29:19,360 --> 00:29:22,799
active i'll have to do something later

00:29:21,360 --> 00:29:24,159
to enable it

00:29:22,799 --> 00:29:25,760
and i'll be doing that in my scripts

00:29:24,159 --> 00:29:28,080
turning it on and off at appropriate

00:29:25,760 --> 00:29:31,120
times

00:29:28,080 --> 00:29:32,720
so let's go back to our player

00:29:31,120 --> 00:29:35,360
remove the version of the script that

00:29:32,720 --> 00:29:38,840
we've been using

00:29:35,360 --> 00:29:41,840
and find the new one that we'd like to

00:29:38,840 --> 00:29:41,840
add

00:29:47,440 --> 00:29:51,520
in here we'll find all of the code that

00:29:49,039 --> 00:29:53,600
we've seen before plus some new things

00:29:51,520 --> 00:29:56,159
we've added a new field that will allow

00:29:53,600 --> 00:29:57,679
us to refer to that text box that i just

00:29:56,159 --> 00:29:59,840
created

00:29:57,679 --> 00:30:01,600
and in our start method we go find that

00:29:59,840 --> 00:30:03,679
text box

00:30:01,600 --> 00:30:04,960
so so far all the things we've

00:30:03,679 --> 00:30:06,880
interacted with would have been

00:30:04,960 --> 00:30:08,799
components of the same object

00:30:06,880 --> 00:30:10,640
but now we're able to go grab some other

00:30:08,799 --> 00:30:12,559
object that's unrelated to the one the

00:30:10,640 --> 00:30:14,559
script is attached to

00:30:12,559 --> 00:30:16,320
uh it's important if possible to do that

00:30:14,559 --> 00:30:17,840
in the start method as we're doing here

00:30:16,320 --> 00:30:19,600
because it's kind of expensive we don't

00:30:17,840 --> 00:30:22,559
want to be doing it on every frame or

00:30:19,600 --> 00:30:24,159
every physics update

00:30:22,559 --> 00:30:27,600
and then i've added a couple of new

00:30:24,159 --> 00:30:29,600
methods of the restart one first

00:30:27,600 --> 00:30:31,360
the goal of this method is that can be

00:30:29,600 --> 00:30:33,840
called whenever i have died

00:30:31,360 --> 00:30:34,880
to restart the game so the first thing

00:30:33,840 --> 00:30:37,440
it does is change

00:30:34,880 --> 00:30:38,480
where the player is by affecting its

00:30:37,440 --> 00:30:41,039
transforms

00:30:38,480 --> 00:30:41,840
position that determines the location of

00:30:41,039 --> 00:30:43,360
our object

00:30:41,840 --> 00:30:46,399
and we want to reset it back to where it

00:30:43,360 --> 00:30:48,159
started at zero zero

00:30:46,399 --> 00:30:50,320
the second thing i do is change the

00:30:48,159 --> 00:30:51,279
velocity of the rigid body associated

00:30:50,320 --> 00:30:53,120
with our player

00:30:51,279 --> 00:30:54,880
because if i've been falling to my death

00:30:53,120 --> 00:30:57,039
and gravity has been accelerating me

00:30:54,880 --> 00:30:58,799
faster and faster and faster and faster

00:30:57,039 --> 00:31:00,720
when i restart the game i don't want to

00:30:58,799 --> 00:31:01,919
have that super high velocity i want to

00:31:00,720 --> 00:31:04,320
start at almost

00:31:01,919 --> 00:31:06,159
nothing so i set my velocity back to

00:31:04,320 --> 00:31:08,240
zero in the x direction zero in the y

00:31:06,159 --> 00:31:10,960
direction

00:31:08,240 --> 00:31:12,559
then i call the built-in invoke method

00:31:10,960 --> 00:31:13,760
which allows me to tell some other

00:31:12,559 --> 00:31:15,519
method to be run

00:31:13,760 --> 00:31:17,200
not currently but at some point in the

00:31:15,519 --> 00:31:19,039
future

00:31:17,200 --> 00:31:20,799
so i'm telling it uh to call the

00:31:19,039 --> 00:31:22,640
unfreeze method which is right up here

00:31:20,799 --> 00:31:26,159
we'll talk about it in a second

00:31:22,640 --> 00:31:28,080
um after some small amount of time 0.05

00:31:26,159 --> 00:31:30,559
seconds

00:31:28,080 --> 00:31:32,799
and then i'm changing the time scale of

00:31:30,559 --> 00:31:35,760
my game what this is saying

00:31:32,799 --> 00:31:37,519
is that i want to slow things down so

00:31:35,760 --> 00:31:38,000
that what normally would have taken one

00:31:37,519 --> 00:31:40,640
second

00:31:38,000 --> 00:31:41,679
will now take 1 100th or sorry i guess

00:31:40,640 --> 00:31:43,360
the other way around

00:31:41,679 --> 00:31:46,159
what would have taken 1 100th of a

00:31:43,360 --> 00:31:49,279
second will now take an entire second so

00:31:46,159 --> 00:31:50,240
time is passing um 100 times slower than

00:31:49,279 --> 00:31:52,159
normal

00:31:50,240 --> 00:31:54,080
which is why actually i set this to a

00:31:52,159 --> 00:31:56,000
very low number

00:31:54,080 --> 00:31:58,080
the reason why i do that is so that when

00:31:56,000 --> 00:31:58,480
the game restarts we will sort of hover

00:31:58,080 --> 00:32:01,679
for

00:31:58,480 --> 00:32:03,679
a second or so be able to read the

00:32:01,679 --> 00:32:05,840
message that we died in a restarting and

00:32:03,679 --> 00:32:07,360
then the game will pick up

00:32:05,840 --> 00:32:09,760
so this method that i'm calling in the

00:32:07,360 --> 00:32:10,320
future simply resets the time scale back

00:32:09,760 --> 00:32:12,000
to one

00:32:10,320 --> 00:32:15,120
so that we will no longer be going slow

00:32:12,000 --> 00:32:16,640
we'll be back to normal

00:32:15,120 --> 00:32:18,559
so i need some way to trigger this

00:32:16,640 --> 00:32:20,320
restart method to recognize

00:32:18,559 --> 00:32:22,399
that i'm falling to my death and i want

00:32:20,320 --> 00:32:25,279
to restart the game

00:32:22,399 --> 00:32:26,559
we do that down in our fixed update

00:32:25,279 --> 00:32:28,159
method

00:32:26,559 --> 00:32:30,480
where we're just going to look what is

00:32:28,159 --> 00:32:32,000
my current y position my y position

00:32:30,480 --> 00:32:34,559
started at zero

00:32:32,000 --> 00:32:35,200
all of my platforms are higher than that

00:32:34,559 --> 00:32:37,279
um

00:32:35,200 --> 00:32:38,640
so if i were to fall to a y position of

00:32:37,279 --> 00:32:40,559
say negative 15

00:32:38,640 --> 00:32:41,919
i could be assured that there's no

00:32:40,559 --> 00:32:44,159
recovering from that i'm just going to

00:32:41,919 --> 00:32:46,320
be falling forever and ever

00:32:44,159 --> 00:32:47,360
so at this point i will enable my

00:32:46,320 --> 00:32:49,360
restart text

00:32:47,360 --> 00:32:51,760
recall that we unchecked the box so that

00:32:49,360 --> 00:32:53,840
it was not enabled originally

00:32:51,760 --> 00:32:56,320
uh and then i will restart the game by

00:32:53,840 --> 00:32:57,919
calling the method we were looking at

00:32:56,320 --> 00:32:59,440
which puts us back at our original

00:32:57,919 --> 00:33:01,120
position original velocity

00:32:59,440 --> 00:33:02,559
and slows things down so that i have a

00:33:01,120 --> 00:33:06,080
chance to read

00:33:02,559 --> 00:33:08,240
that restart method message excuse me

00:33:06,080 --> 00:33:10,000
i also like to have that restart message

00:33:08,240 --> 00:33:11,279
go away at some point

00:33:10,000 --> 00:33:13,200
and there are a variety of ways i could

00:33:11,279 --> 00:33:15,120
have done that but what we decided

00:33:13,200 --> 00:33:16,880
was to make it go away when we touched

00:33:15,120 --> 00:33:18,880
the ground

00:33:16,880 --> 00:33:19,919
so back up here where we are discovering

00:33:18,880 --> 00:33:23,120
collisions

00:33:19,919 --> 00:33:25,039
um if i'm colliding with a platform

00:33:23,120 --> 00:33:26,960
and i'm colliding with the top of it in

00:33:25,039 --> 00:33:29,200
addition to saying i am grounded

00:33:26,960 --> 00:33:30,960
so i can jump i'm also going to tell the

00:33:29,200 --> 00:33:33,440
restart text to turn itself off

00:33:30,960 --> 00:33:34,640
if it was on um so that our error

00:33:33,440 --> 00:33:36,880
message will go away

00:33:34,640 --> 00:33:38,000
or not error message but our dying

00:33:36,880 --> 00:33:41,440
message

00:33:38,000 --> 00:33:41,440
so let's see if this works

00:33:42,159 --> 00:33:47,360
i'm on my platform i make a couple jumps

00:33:49,200 --> 00:33:52,960
and i jump too far and i miss a platform

00:33:51,440 --> 00:33:55,679
and i'm falling

00:33:52,960 --> 00:33:56,000
and the game restarts it tells me i died

00:33:55,679 --> 00:33:57,840
and

00:33:56,000 --> 00:33:59,760
then it's restarting it restored me to

00:33:57,840 --> 00:34:01,919
my original position

00:33:59,760 --> 00:34:03,440
and as i fall and the game actually

00:34:01,919 --> 00:34:05,519
gives me control again

00:34:03,440 --> 00:34:07,919
their message goes away and now i can

00:34:05,519 --> 00:34:11,119
play the game again

00:34:07,919 --> 00:34:13,440
pretty cool so

00:34:11,119 --> 00:34:15,520
we have the ability to die now it would

00:34:13,440 --> 00:34:17,280
also be nice to be able to succeed in

00:34:15,520 --> 00:34:19,599
some meaningful way i should have some

00:34:17,280 --> 00:34:21,280
goal and some way of recognizing that

00:34:19,599 --> 00:34:22,800
the player achieved the goal and

00:34:21,280 --> 00:34:24,879
rewarding them

00:34:22,800 --> 00:34:26,399
uh so our goal for now is just going to

00:34:24,879 --> 00:34:30,159
be that we've reached the top

00:34:26,399 --> 00:34:31,760
platform and in order to

00:34:30,159 --> 00:34:33,440
note that we've done that we're going to

00:34:31,760 --> 00:34:36,560
put a new object

00:34:33,440 --> 00:34:38,079
on top of the very top platform

00:34:36,560 --> 00:34:40,159
when we reach it we'll be able to say we

00:34:38,079 --> 00:34:49,839
won the game so we're just going to make

00:34:40,159 --> 00:34:49,839
another sprite for that

00:34:54,159 --> 00:34:59,040
we will pull that sprite into the world

00:34:57,359 --> 00:35:00,960
uh and then we'll make some changes it

00:34:59,040 --> 00:35:02,079
shouldn't be white it should be some

00:35:00,960 --> 00:35:05,200
other color

00:35:02,079 --> 00:35:08,800
um if i recall our player is green so

00:35:05,200 --> 00:35:08,800
let's make this blue perhaps

00:35:09,200 --> 00:35:12,480
and i'm going to change the position to

00:35:10,960 --> 00:35:13,520
be a position that i previously

00:35:12,480 --> 00:35:16,160
determined

00:35:13,520 --> 00:35:16,880
um should put it directly above the top

00:35:16,160 --> 00:35:19,040
platform

00:35:16,880 --> 00:35:21,280
at least hopefully if not we can

00:35:19,040 --> 00:35:23,839
reposition it later

00:35:21,280 --> 00:35:24,880
all right so that object exists but it's

00:35:23,839 --> 00:35:26,720
just going to sit there it's not going

00:35:24,880 --> 00:35:28,480
to do anything

00:35:26,720 --> 00:35:30,880
the first thing i'd like is to be able

00:35:28,480 --> 00:35:32,480
to know when i am touching it

00:35:30,880 --> 00:35:34,400
that means i need a component we're

00:35:32,480 --> 00:35:36,160
already familiar uh with this component

00:35:34,400 --> 00:35:37,599
it's a box collider

00:35:36,160 --> 00:35:40,079
however we're going to use it in a

00:35:37,599 --> 00:35:42,320
different way from before

00:35:40,079 --> 00:35:44,240
our box collider that is on our sprite

00:35:42,320 --> 00:35:45,680
is a normal unconfigured one

00:35:44,240 --> 00:35:47,520
which means that when we collide with

00:35:45,680 --> 00:35:49,599
something the physics engine prevents us

00:35:47,520 --> 00:35:51,200
from moving through it with this

00:35:49,599 --> 00:35:52,800
collider we don't want that to happen

00:35:51,200 --> 00:35:54,640
we should be able to move through the

00:35:52,800 --> 00:35:57,040
victory object

00:35:54,640 --> 00:35:58,640
we just want to be able to be notified

00:35:57,040 --> 00:36:00,160
when that collision occurs

00:35:58,640 --> 00:36:02,160
so i'm going to check a box here in the

00:36:00,160 --> 00:36:04,480
inspector called is trigger

00:36:02,160 --> 00:36:06,480
to turn this into a trigger collider so

00:36:04,480 --> 00:36:07,520
the physics will not apply to it i'll

00:36:06,480 --> 00:36:11,280
simply be able to

00:36:07,520 --> 00:36:13,200
recognize have i collided or not

00:36:11,280 --> 00:36:15,440
uh i also want to have some way to

00:36:13,200 --> 00:36:17,920
notify the user that they have won

00:36:15,440 --> 00:36:19,599
and to restart the game so just like

00:36:17,920 --> 00:36:21,760
we've got a restart text i'm going to

00:36:19,599 --> 00:36:27,839
create a separate text

00:36:21,760 --> 00:36:27,839
that our victory

00:36:33,440 --> 00:36:38,240
like the other one we're going to change

00:36:34,640 --> 00:36:38,240
the text to a custom message

00:36:39,440 --> 00:36:42,960
we're going to adjust the width and

00:36:40,720 --> 00:36:42,960
height

00:36:44,720 --> 00:36:47,680
and the font size

00:36:49,440 --> 00:36:52,160
and the color

00:36:52,880 --> 00:36:57,839
we'll make it blue to match the victory

00:36:55,359 --> 00:36:57,839
object

00:36:59,680 --> 00:37:02,560
and of course we're going to need a

00:37:01,040 --> 00:37:04,000
script which is going to allow us to

00:37:02,560 --> 00:37:05,119
notice that we have collided with the

00:37:04,000 --> 00:37:07,680
victory object

00:37:05,119 --> 00:37:10,079
and thus turn on the victory text which

00:37:07,680 --> 00:37:11,680
should not be on automatically

00:37:10,079 --> 00:37:13,920
and then restart the game just like it

00:37:11,680 --> 00:37:15,760
restarts the game when we die

00:37:13,920 --> 00:37:18,160
so that means we need a new player

00:37:15,760 --> 00:37:18,160
script

00:37:19,119 --> 00:37:23,839
so we will remove this one

00:37:24,720 --> 00:37:28,000
and we will add the new one

00:37:28,880 --> 00:37:32,560
and then we can go look at it and see

00:37:30,079 --> 00:37:32,560
what it does

00:37:32,640 --> 00:37:36,400
so we've added another game object for

00:37:34,560 --> 00:37:38,480
the victory text

00:37:36,400 --> 00:37:40,079
we when the game starts go find the

00:37:38,480 --> 00:37:42,720
victory text so that we'll be able to do

00:37:40,079 --> 00:37:42,720
stuff with it

00:37:44,480 --> 00:37:47,680
we now have a new method here called on

00:37:46,560 --> 00:37:49,760
trigger enter

00:37:47,680 --> 00:37:51,280
this is like on collision enter but it

00:37:49,760 --> 00:37:54,800
works for colliders that are

00:37:51,280 --> 00:37:56,400
triggers so when i encounter a collider

00:37:54,800 --> 00:37:58,400
on some other object that is a trigger

00:37:56,400 --> 00:38:00,240
collider this will be called

00:37:58,400 --> 00:38:02,960
i want to check to see what i collided

00:38:00,240 --> 00:38:06,079
with hopefully it's the victory object

00:38:02,960 --> 00:38:09,359
and if so i can turn on the victory text

00:38:06,079 --> 00:38:11,280
component and i can restart the game

00:38:09,359 --> 00:38:14,079
i'll also need to turn off the victory

00:38:11,280 --> 00:38:14,079
text component

00:38:15,280 --> 00:38:18,800
down here when i collide with the ground

00:38:17,520 --> 00:38:21,839
the same way that i was doing

00:38:18,800 --> 00:38:24,560
with the restart text and i

00:38:21,839 --> 00:38:25,839
am when i collide calling the same

00:38:24,560 --> 00:38:28,400
restart method that we were already

00:38:25,839 --> 00:38:29,440
using for restarting when we died

00:38:28,400 --> 00:38:31,200
regardless of the reason you're

00:38:29,440 --> 00:38:33,839
restarting the process of restarting is

00:38:31,200 --> 00:38:33,839
the same

00:38:34,079 --> 00:38:37,599
so we can see if this works though it's

00:38:35,680 --> 00:38:38,960
going to require me to win my own game

00:38:37,599 --> 00:38:41,520
which may be more of a challenge than

00:38:38,960 --> 00:38:41,520
you'd imagine

00:38:42,720 --> 00:38:47,839
climb up some platforms

00:38:50,960 --> 00:38:54,320
hopefully not fall to our death

00:38:55,920 --> 00:38:59,760
there's our final platform and we can

00:38:57,760 --> 00:39:01,920
see uh on top of it

00:38:59,760 --> 00:39:03,200
the thing that recognizes our victory

00:39:01,920 --> 00:39:04,240
like a door that we're walking through

00:39:03,200 --> 00:39:06,880
to get us to the next

00:39:04,240 --> 00:39:08,240
level perhaps i touched it um you can

00:39:06,880 --> 00:39:09,839
see you made it perhaps

00:39:08,240 --> 00:39:11,760
blue on a blue background was not the

00:39:09,839 --> 00:39:13,280
best choice um

00:39:11,760 --> 00:39:17,119
and then we've restarted the game and we

00:39:13,280 --> 00:39:19,359
can play again or stop as we'd like

00:39:17,119 --> 00:39:21,280
so we're getting to a complete game um

00:39:19,359 --> 00:39:24,400
we can move around we can jump

00:39:21,280 --> 00:39:26,400
we can die we can succeed um but it's

00:39:24,400 --> 00:39:28,240
still a fairly boring game

00:39:26,400 --> 00:39:30,320
so let chris talk briefly about how we

00:39:28,240 --> 00:39:34,800
might make it more interesting

00:39:30,320 --> 00:39:38,079
yes so to make this a little bit more

00:39:34,800 --> 00:39:40,160
interesting we would like to possibly

00:39:38,079 --> 00:39:42,000
make some collectibles that we could

00:39:40,160 --> 00:39:45,200
collect on the way to the victory

00:39:42,000 --> 00:39:47,200
object so we are going to showcase a

00:39:45,200 --> 00:39:51,359
little bit about how to do that

00:39:47,200 --> 00:39:55,119
the first thing we want to do

00:39:51,359 --> 00:39:58,880
is to make the collectible object

00:39:55,119 --> 00:40:02,800
so we're going to make a

00:39:58,880 --> 00:40:04,319
new sprite in this case that is a circle

00:40:02,800 --> 00:40:08,839
it's going to represent a

00:40:04,319 --> 00:40:11,119
coin we'll call this a

00:40:08,839 --> 00:40:12,000
coin we're going to rather than just

00:40:11,119 --> 00:40:14,480
make this

00:40:12,000 --> 00:40:15,920
an object we want to make this a what we

00:40:14,480 --> 00:40:18,640
call a prefab

00:40:15,920 --> 00:40:22,720
meaning that it is about to be fab but

00:40:18,640 --> 00:40:22,720
we need to modify it before it is fab

00:40:22,800 --> 00:40:26,560
so the first thing we can do is we can

00:40:24,480 --> 00:40:29,440
drag this coin and its generic

00:40:26,560 --> 00:40:30,000
state onto the hierarchy where we can

00:40:29,440 --> 00:40:32,960
now

00:40:30,000 --> 00:40:34,079
edit its properties we want to change

00:40:32,960 --> 00:40:37,359
its color

00:40:34,079 --> 00:40:38,160
coins are usually somewhat yellow so we

00:40:37,359 --> 00:40:41,760
will make this

00:40:38,160 --> 00:40:42,319
yellow we want to change the name of the

00:40:41,760 --> 00:40:45,040
tag

00:40:42,319 --> 00:40:45,760
here rather than be untagged we have

00:40:45,040 --> 00:40:48,079
pre-made

00:40:45,760 --> 00:40:50,160
this tag of a coin so we're going to tag

00:40:48,079 --> 00:40:50,800
our coin object with this tag this will

00:40:50,160 --> 00:40:52,880
be useful

00:40:50,800 --> 00:40:54,079
later when we collide with something we

00:40:52,880 --> 00:40:56,800
want to know

00:40:54,079 --> 00:40:58,640
if that contains the tag coin because we

00:40:56,800 --> 00:41:01,920
don't want there to just be one coin

00:40:58,640 --> 00:41:02,720
we want there to be lots of coins before

00:41:01,920 --> 00:41:04,480
we do

00:41:02,720 --> 00:41:06,400
anything else i want to quickly change

00:41:04,480 --> 00:41:08,800
the position of this coin

00:41:06,400 --> 00:41:10,640
so that it is a little bit out of the

00:41:08,800 --> 00:41:14,640
way actually

00:41:10,640 --> 00:41:18,160
let's do that

00:41:14,640 --> 00:41:18,160
let's zoom out a little bit

00:41:18,400 --> 00:41:23,280
which is it down yes

00:41:23,520 --> 00:41:27,359
we'll zoom out so we can see a little

00:41:25,040 --> 00:41:30,720
bit more of the world

00:41:27,359 --> 00:41:35,680
and let's start

00:41:30,720 --> 00:41:37,359
placing some coins so before i do this

00:41:35,680 --> 00:41:39,359
yes before i do this i have one more

00:41:37,359 --> 00:41:42,319
thing i want to do

00:41:39,359 --> 00:41:44,160
i want to add a component to this i want

00:41:42,319 --> 00:41:46,480
to make sure that there is a collider

00:41:44,160 --> 00:41:52,319
with this particular object

00:41:46,480 --> 00:41:52,319
so i will make this a circle collider

00:41:53,280 --> 00:41:56,720
we'll add this circle collider we want

00:41:55,760 --> 00:41:59,119
to check

00:41:56,720 --> 00:42:01,200
the is trigger checkbox because this

00:41:59,119 --> 00:42:02,160
will be a trigger collider again we want

00:42:01,200 --> 00:42:06,079
to see when we run

00:42:02,160 --> 00:42:07,920
into the object we then

00:42:06,079 --> 00:42:09,599
rather than just leave the coin in the

00:42:07,920 --> 00:42:14,480
hierarchy if we drag

00:42:09,599 --> 00:42:14,480
this back into our project

00:42:14,720 --> 00:42:18,400
it becomes the copy of all of the

00:42:17,359 --> 00:42:21,040
changes that we made

00:42:18,400 --> 00:42:22,319
such that we don't have to make lots of

00:42:21,040 --> 00:42:26,240
copies of this

00:42:22,319 --> 00:42:28,880
original coin and change all of those

00:42:26,240 --> 00:42:29,520
in each one of those now we have this

00:42:28,880 --> 00:42:32,160
new

00:42:29,520 --> 00:42:32,960
coin object that we can drag multiple

00:42:32,160 --> 00:42:35,920
times

00:42:32,960 --> 00:42:37,599
onto the hierarchy and make multiple

00:42:35,920 --> 00:42:39,920
coins

00:42:37,599 --> 00:42:42,319
for each of these coins we can select

00:42:39,920 --> 00:42:45,280
them we can drag them

00:42:42,319 --> 00:42:46,000
around and we can place them in

00:42:45,280 --> 00:42:48,079
different

00:42:46,000 --> 00:42:49,839
places such that we can collect them if

00:42:48,079 --> 00:42:51,680
i can actually select i think i zoomed

00:42:49,839 --> 00:42:52,000
out just a little bit too far and put

00:42:51,680 --> 00:42:56,079
this

00:42:52,000 --> 00:42:59,520
right on the other line but now we could

00:42:56,079 --> 00:43:01,760
select create and drag

00:42:59,520 --> 00:43:03,040
but i think we are just about out of

00:43:01,760 --> 00:43:05,040
time

00:43:03,040 --> 00:43:06,640
perhaps we can switch scripts and just

00:43:05,040 --> 00:43:10,000
play the game to observe what happens

00:43:06,640 --> 00:43:11,119
yes yeah we are uh

00:43:10,000 --> 00:43:12,640
we are running up to the end of the

00:43:11,119 --> 00:43:14,400
session gentlemen but yeah definitely

00:43:12,640 --> 00:43:16,640
playing through would be fantastic

00:43:14,400 --> 00:43:19,760
and we may have a minute or two for for

00:43:16,640 --> 00:43:19,760
open questions as well

00:43:20,160 --> 00:43:25,040
sure while he's doing that i'm sure you

00:43:22,240 --> 00:43:27,920
can imagine what that script does

00:43:25,040 --> 00:43:28,880
much like when we collide with the

00:43:27,920 --> 00:43:31,280
victory object

00:43:28,880 --> 00:43:32,079
we can check for collisions with coins

00:43:31,280 --> 00:43:34,800
um

00:43:32,079 --> 00:43:36,560
using on trigger enter uh and then we

00:43:34,800 --> 00:43:38,079
want to make those coins disappear

00:43:36,560 --> 00:43:40,079
so we disable several of their

00:43:38,079 --> 00:43:42,960
components so we can't see them and we

00:43:40,079 --> 00:43:44,640
can't collide with them anymore

00:43:42,960 --> 00:43:46,160
we haven't implemented this yet in this

00:43:44,640 --> 00:43:46,880
step and won't have time for future

00:43:46,160 --> 00:43:48,800
steps

00:43:46,880 --> 00:43:50,640
um you can also increment a score

00:43:48,800 --> 00:43:52,640
counter when you do so

00:43:50,640 --> 00:43:54,000
uh and then whenever we restart we have

00:43:52,640 --> 00:43:57,280
to go find all the coins and

00:43:54,000 --> 00:43:59,119
enable the things that let them be seen

00:43:57,280 --> 00:44:02,480
and collided with so the game can

00:43:59,119 --> 00:44:02,480
restart and the coins will be there

00:44:06,839 --> 00:44:11,839
again

00:44:09,440 --> 00:44:13,520
uh kevin had a question is there a git

00:44:11,839 --> 00:44:15,200
repository of the game

00:44:13,520 --> 00:44:18,480
maybe with commits in the same order as

00:44:15,200 --> 00:44:20,640
the presentation by any chance

00:44:18,480 --> 00:44:24,000
um there certainly can be there's not at

00:44:20,640 --> 00:44:24,000
the moment okay great

00:44:24,640 --> 00:44:28,160
thank you i assume there will be some

00:44:27,680 --> 00:44:30,240
way

00:44:28,160 --> 00:44:32,560
uh that we can make a url of that

00:44:30,240 --> 00:44:35,440
available after the company's over

00:44:32,560 --> 00:44:36,160
yes absolutely we will uh yeah the cpos

00:44:35,440 --> 00:44:38,160
team will be

00:44:36,160 --> 00:44:39,520
making links available as well so if you

00:44:38,160 --> 00:44:41,200
have something you can just share it out

00:44:39,520 --> 00:44:45,599
with us

00:44:41,200 --> 00:44:47,280
all right great um so thanks very much

00:44:45,599 --> 00:44:48,880
for your time and attention you can

00:44:47,280 --> 00:44:50,560
probably imagine many other things you

00:44:48,880 --> 00:44:52,000
could add to this the ability to keep

00:44:50,560 --> 00:44:54,319
score

00:44:52,000 --> 00:44:55,280
and display that score on the screen the

00:44:54,319 --> 00:44:57,680
ability to create

00:44:55,280 --> 00:44:58,960
uh enemies that walk around and when you

00:44:57,680 --> 00:45:00,480
collide with them it depends whether

00:44:58,960 --> 00:45:00,960
you're jumping on them or they'll jump

00:45:00,480 --> 00:45:04,079
about

00:45:00,960 --> 00:45:06,880
you nasty who dies uh and various other

00:45:04,079 --> 00:45:10,079
things all of which can be accomplished

00:45:06,880 --> 00:45:13,200
by using these built-in components

00:45:10,079 --> 00:45:13,760
sprite renderers for graphics colliders

00:45:13,200 --> 00:45:15,839
for

00:45:13,760 --> 00:45:17,680
noticing when you run into things rigid

00:45:15,839 --> 00:45:21,280
bodies for movement and physics

00:45:17,680 --> 00:45:21,280
and scripts on your own

00:45:21,599 --> 00:45:26,400
anybody have any questions we can answer

00:45:23,520 --> 00:45:26,400
other than kevin's

00:45:31,040 --> 00:45:35,839
all right great uh chad chris

00:45:34,160 --> 00:45:37,839
seriously good work i was i was

00:45:35,839 --> 00:45:39,839
wondering how far you would get in uh

00:45:37,839 --> 00:45:42,240
you know roughly 45 minutes but

00:45:39,839 --> 00:45:44,160
uh you know as an introduction uh you

00:45:42,240 --> 00:45:44,800
got very very far so terrific work on

00:45:44,160 --> 00:45:46,720
this

00:45:44,800 --> 00:45:48,720
you know we all thank you very much for

00:45:46,720 --> 00:45:50,240
you know your time and your work to

00:45:48,720 --> 00:45:51,760
build this talk first this afternoon

00:45:50,240 --> 00:45:53,760
really really great work

00:45:51,760 --> 00:45:56,960
uh so thank you again for presenting

00:45:53,760 --> 00:45:58,720
unity uh for all of us this afternoon

00:45:56,960 --> 00:46:00,800
thank you yeah thank you for moderating

00:45:58,720 --> 00:46:09,200
and thank you to everybody who joined us

00:46:00,800 --> 00:46:09,200

YouTube URL: https://www.youtube.com/watch?v=Jd1jE6L8vnE


