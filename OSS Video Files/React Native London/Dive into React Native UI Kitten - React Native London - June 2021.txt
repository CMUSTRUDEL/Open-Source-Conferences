Title: Dive into React Native UI Kitten - React Native London - June 2021
Publication date: 2021-07-02
Playlist: React Native London
Description: 
	@RNLmeetup
Dive into React Native UI Kitten
Artur Yorsh

What it actually is and how it can boost the development process?
Letâ€™s talk about the Design system, scalability, existing integrations, and customization options.
Live Coding and Showcases are also included!

Introduction & About Me [00:00:00] 
React Native UI Kitten [00:00:57]
Back in Time [00:02:32] 
Eva Design Family [00:03:41] 
Product Hunt Achievements [00:05:58] 
Getting Started & Demo [00:06:48] 
Recap [00:16:24] 
Summary & why do we need this? [00:20:50] 


_________________________________________________________________

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_________________________________________________________________

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:01,520 --> 00:00:06,879
i'm really glad to meet you

00:00:03,520 --> 00:00:09,040
all guys and i also want to stand

00:00:06,879 --> 00:00:11,280
all of you especially the company for

00:00:09,040 --> 00:00:13,599
having me here

00:00:11,280 --> 00:00:14,480
and thank you for the invitation i'm

00:00:13,599 --> 00:00:16,720
really

00:00:14,480 --> 00:00:19,039
always wanted to talk about today's

00:00:16,720 --> 00:00:22,320
topic but i never had a chance to

00:00:19,039 --> 00:00:25,039
so here i am and my name is arthur

00:00:22,320 --> 00:00:26,560
i'm working for a company called accu as

00:00:25,039 --> 00:00:28,720
a software engineer

00:00:26,560 --> 00:00:29,679
building high scale mobile applications

00:00:28,720 --> 00:00:32,399
with

00:00:29,679 --> 00:00:33,200
react native my previous experience is

00:00:32,399 --> 00:00:35,520
also based

00:00:33,200 --> 00:00:36,960
building native applications with speak

00:00:35,520 --> 00:00:38,559
java kotlin

00:00:36,960 --> 00:00:40,320
and everything rest that you could just

00:00:38,559 --> 00:00:43,360
imagine so

00:00:40,320 --> 00:00:44,320
at our company we do lots of front and

00:00:43,360 --> 00:00:47,120
related stuff

00:00:44,320 --> 00:00:48,480
bringing our work to open source and we

00:00:47,120 --> 00:00:51,840
really enjoyed that

00:00:48,480 --> 00:00:53,840
so yeah once i opened the world of open

00:00:51,840 --> 00:00:56,239
source also for me

00:00:53,840 --> 00:00:57,600
i just felt in love with react native

00:00:56,239 --> 00:01:00,239
and its community so

00:00:57,600 --> 00:01:00,800
that's why we are here today talking

00:01:00,239 --> 00:01:02,879
about

00:01:00,800 --> 00:01:04,080
one of the most exciting ui libraries

00:01:02,879 --> 00:01:06,400
that we have

00:01:04,080 --> 00:01:07,600
built and i have had a chance to

00:01:06,400 --> 00:01:10,640
contribute to

00:01:07,600 --> 00:01:14,000
its ui kitten and evo design system

00:01:10,640 --> 00:01:17,200
the title of my talk is dive into

00:01:14,000 --> 00:01:20,000
react native ui kitten but

00:01:17,200 --> 00:01:20,560
because ui kit in itself is actually a

00:01:20,000 --> 00:01:23,040
part

00:01:20,560 --> 00:01:24,240
of a bigger project it's a part of

00:01:23,040 --> 00:01:26,560
design system

00:01:24,240 --> 00:01:28,479
we are actually going to cover uh street

00:01:26,560 --> 00:01:30,320
topics today

00:01:28,479 --> 00:01:32,079
and by the way please drop a plus sign

00:01:30,320 --> 00:01:34,079
if you're already using

00:01:32,079 --> 00:01:36,479
those libraries in your app so that i

00:01:34,079 --> 00:01:37,040
can have some analytics and be happy

00:01:36,479 --> 00:01:40,400
that

00:01:37,040 --> 00:01:43,920
you listeners are here here's

00:01:40,400 --> 00:01:46,880
listen to me so first thing first

00:01:43,920 --> 00:01:47,280
we're going to dive into the ecosystem

00:01:46,880 --> 00:01:51,040
of

00:01:47,280 --> 00:01:54,720
eva design and talking about

00:01:51,040 --> 00:01:57,759
eva related products and how we actually

00:01:54,720 --> 00:01:59,360
can use them in our app because i'm

00:01:57,759 --> 00:02:01,360
actually pretty sure that most of you

00:01:59,360 --> 00:02:04,159
guys have heard about

00:02:01,360 --> 00:02:05,920
ui kitten but a lot of the other cool

00:02:04,159 --> 00:02:08,160
stuff that eva can provide

00:02:05,920 --> 00:02:10,560
i'm going to show you how we can

00:02:08,160 --> 00:02:13,760
actually use those products in our app

00:02:10,560 --> 00:02:16,560
to build more exciting

00:02:13,760 --> 00:02:17,200
and also move in user interfaces by

00:02:16,560 --> 00:02:20,000
making

00:02:17,200 --> 00:02:22,000
making it more branded and customized

00:02:20,000 --> 00:02:25,360
for the needs of our customers

00:02:22,000 --> 00:02:28,400
and lastly i also show you

00:02:25,360 --> 00:02:30,000
some of the great examples of how we can

00:02:28,400 --> 00:02:31,680
integrate some of the third party

00:02:30,000 --> 00:02:35,120
libraries with

00:02:31,680 --> 00:02:37,680
our products but before we start

00:02:35,120 --> 00:02:39,280
let me tell you a quick story so in this

00:02:37,680 --> 00:02:42,080
story i would like to cover

00:02:39,280 --> 00:02:42,720
the knowledge how had actually

00:02:42,080 --> 00:02:44,959
everything

00:02:42,720 --> 00:02:47,120
started so i will be talking about how

00:02:44,959 --> 00:02:50,239
your design system was burned

00:02:47,120 --> 00:02:51,200
so back in 2018 acquired the company i'm

00:02:50,239 --> 00:02:53,440
working for

00:02:51,200 --> 00:02:54,480
had already had several open source

00:02:53,440 --> 00:02:57,120
products and

00:02:54,480 --> 00:02:58,640
its demo applications and that was

00:02:57,120 --> 00:03:01,840
actually great because

00:02:58,640 --> 00:03:05,120
we could use our own ui libraries

00:03:01,840 --> 00:03:06,239
to boost up our development process of

00:03:05,120 --> 00:03:09,120
frontend apps

00:03:06,239 --> 00:03:10,159
and by the way those libraries were also

00:03:09,120 --> 00:03:12,640
used by

00:03:10,159 --> 00:03:13,440
other thousands developers worldwide so

00:03:12,640 --> 00:03:15,519
thank you

00:03:13,440 --> 00:03:16,959
there was actually one global issue that

00:03:15,519 --> 00:03:20,319
we really wanted to solve

00:03:16,959 --> 00:03:20,879
and it was about like we didn't really

00:03:20,319 --> 00:03:24,000
have

00:03:20,879 --> 00:03:26,239
any single source of truth for our

00:03:24,000 --> 00:03:27,680
web and mobile applications because on

00:03:26,239 --> 00:03:30,400
them to look different

00:03:27,680 --> 00:03:32,879
and inconsistent so that's why we really

00:03:30,400 --> 00:03:36,720
started to look into possible solutions

00:03:32,879 --> 00:03:39,440
and the only one really so was that we

00:03:36,720 --> 00:03:41,840
really should to integrate any sort of

00:03:39,440 --> 00:03:45,040
design system to our products

00:03:41,840 --> 00:03:47,200
but we really didn't wanted to integrate

00:03:45,040 --> 00:03:48,799
any existing solutions like material

00:03:47,200 --> 00:03:50,959
design because we

00:03:48,799 --> 00:03:52,480
also wanted to create something new and

00:03:50,959 --> 00:03:55,360
fresh and also

00:03:52,480 --> 00:03:56,400
share it to the open source community we

00:03:55,360 --> 00:03:59,439
ended with

00:03:56,400 --> 00:04:03,840
a new layer of

00:03:59,439 --> 00:04:05,920
products and so far

00:04:03,840 --> 00:04:08,000
this was an eva design family which

00:04:05,920 --> 00:04:11,280
actually consists of

00:04:08,000 --> 00:04:14,959
three products so first one is

00:04:11,280 --> 00:04:18,560
a design system itself available in both

00:04:14,959 --> 00:04:21,840
sketch sigma files

00:04:18,560 --> 00:04:24,960
and to actually use it you should just

00:04:21,840 --> 00:04:28,160
go to event.design

00:04:24,960 --> 00:04:32,639
webpage find that and

00:04:28,160 --> 00:04:34,720
be able to download this for zero price

00:04:32,639 --> 00:04:37,600
by the way there are lots of other

00:04:34,720 --> 00:04:40,840
products that we also share

00:04:37,600 --> 00:04:45,520
well yeah so may actually find it here

00:04:40,840 --> 00:04:48,560
well yeah that was about design system

00:04:45,520 --> 00:04:49,120
it actually consists of a structured

00:04:48,560 --> 00:04:51,680
view

00:04:49,120 --> 00:04:52,639
of the components that we use in our ui

00:04:51,680 --> 00:04:55,040
libraries

00:04:52,639 --> 00:04:56,560
and by knowing how it's important to

00:04:55,040 --> 00:04:57,520
follow the design rules in your

00:04:56,560 --> 00:04:59,840
applications

00:04:57,520 --> 00:05:01,039
this was actually the reason why we made

00:04:59,840 --> 00:05:04,000
that for free

00:05:01,039 --> 00:05:06,400
the second the color generator it's

00:05:04,000 --> 00:05:09,440
actually a tool

00:05:06,400 --> 00:05:12,720
where you can create an awesome

00:05:09,440 --> 00:05:13,759
color palette for for your app so being

00:05:12,720 --> 00:05:17,280
a developer

00:05:13,759 --> 00:05:20,240
i always know how it's painful to pick

00:05:17,280 --> 00:05:23,199
the right colors for your application

00:05:20,240 --> 00:05:24,080
and well the color generator doesn't

00:05:23,199 --> 00:05:26,400
care about it

00:05:24,080 --> 00:05:27,600
at all so it only wants you to pick one

00:05:26,400 --> 00:05:30,080
primary color

00:05:27,600 --> 00:05:30,720
and do the rest of the things for you

00:05:30,080 --> 00:05:33,919
just

00:05:30,720 --> 00:05:35,360
ensure 100 sure of the graceful color

00:05:33,919 --> 00:05:38,080
selection for your app

00:05:35,360 --> 00:05:38,479
because it's actually a deep learning

00:05:38,080 --> 00:05:41,120
tool

00:05:38,479 --> 00:05:43,280
so the last one and it's an icon package

00:05:41,120 --> 00:05:47,360
you actually share

00:05:43,280 --> 00:05:49,680
up to i guess there are around 500

00:05:47,360 --> 00:05:50,960
open source icons created specifically

00:05:49,680 --> 00:05:53,440
for eva

00:05:50,960 --> 00:05:54,320
don't keep on using them in your app

00:05:53,440 --> 00:05:56,319
just because

00:05:54,320 --> 00:05:57,600
it will make your app much more

00:05:56,319 --> 00:06:00,720
beautiful and

00:05:57,600 --> 00:06:02,319
user friendly so by the way those

00:06:00,720 --> 00:06:05,680
products were given

00:06:02,319 --> 00:06:07,039
on its start a product hand achievements

00:06:05,680 --> 00:06:09,039
on this platform

00:06:07,039 --> 00:06:12,560
so be sure of the quality we share for

00:06:09,039 --> 00:06:15,360
you i will not bore you anymore with

00:06:12,560 --> 00:06:16,479
product descriptions and all the markets

00:06:15,360 --> 00:06:19,120
and stuff so

00:06:16,479 --> 00:06:20,160
let's just jump into the code and see

00:06:19,120 --> 00:06:23,759
how can it work

00:06:20,160 --> 00:06:25,280
all together but how do we start so

00:06:23,759 --> 00:06:26,960
yeah with your kitten we actually

00:06:25,280 --> 00:06:29,680
provide

00:06:26,960 --> 00:06:31,680
two template packages available for

00:06:29,680 --> 00:06:32,319
react native command line interface to

00:06:31,680 --> 00:06:35,759
start

00:06:32,319 --> 00:06:38,000
your project you may use both typescript

00:06:35,759 --> 00:06:39,680
and javascript template packages based

00:06:38,000 --> 00:06:42,240
on your preferences

00:06:39,680 --> 00:06:42,960
but use typescript for better

00:06:42,240 --> 00:06:44,880
development

00:06:42,960 --> 00:06:46,319
experience but we will not start the

00:06:44,880 --> 00:06:50,560
hollywood thread here

00:06:46,319 --> 00:06:53,680
but okay so to start your

00:06:50,560 --> 00:06:56,800
ui kitten project you should just

00:06:53,680 --> 00:06:59,599
copy and paste this simple comment like

00:06:56,800 --> 00:07:00,160
to your terminal and run it and that

00:06:59,599 --> 00:07:02,800
would be

00:07:00,160 --> 00:07:04,080
it once we initialize the project we'll

00:07:02,800 --> 00:07:07,280
see somewhat like

00:07:04,080 --> 00:07:07,840
this and this is actually my demo

00:07:07,280 --> 00:07:10,560
project

00:07:07,840 --> 00:07:12,240
we can also interact with the slides

00:07:10,560 --> 00:07:14,880
like that

00:07:12,240 --> 00:07:17,120
be sure that for example here we can

00:07:14,880 --> 00:07:20,400
just switch our

00:07:17,120 --> 00:07:22,720
theme to from light to dark well

00:07:20,400 --> 00:07:23,520
yeah so let's jump to the code and see

00:07:22,720 --> 00:07:27,599
what happens

00:07:23,520 --> 00:07:27,599
there okay

00:07:28,080 --> 00:07:31,199
so one of the most important things to

00:07:30,479 --> 00:07:35,520
understand

00:07:31,199 --> 00:07:38,639
in ur kitten is that we wrap our entire

00:07:35,520 --> 00:07:40,400
application provider component which is

00:07:38,639 --> 00:07:44,160
actually here

00:07:40,400 --> 00:07:44,879
and we use that to pass through evo

00:07:44,160 --> 00:07:46,560
styles

00:07:44,879 --> 00:07:49,199
for all of the nested components

00:07:46,560 --> 00:07:51,360
rendered within our app

00:07:49,199 --> 00:07:52,479
specifically for ui ketone components

00:07:51,360 --> 00:07:55,599
such as buttons

00:07:52,479 --> 00:07:57,520
inputs and so on another

00:07:55,599 --> 00:07:58,800
cool thing here is that we can also

00:07:57,520 --> 00:08:02,000
define a

00:07:58,800 --> 00:08:03,199
theme for our app so by default it's

00:08:02,000 --> 00:08:06,479
light

00:08:03,199 --> 00:08:06,879
with standard blue colors of eva but we

00:08:06,479 --> 00:08:10,560
also

00:08:06,879 --> 00:08:12,879
may change it to dark like this

00:08:10,560 --> 00:08:14,879
so let's see what happens here yeah it

00:08:12,879 --> 00:08:18,240
works it's really cool

00:08:14,879 --> 00:08:20,960
and yeah but let's say

00:08:18,240 --> 00:08:21,840
it's cool but let's see what happens if

00:08:20,960 --> 00:08:25,120
we want to

00:08:21,840 --> 00:08:28,160
define more complex ui here

00:08:25,120 --> 00:08:30,479
so here we see a

00:08:28,160 --> 00:08:32,000
signup form which actually consists of

00:08:30,479 --> 00:08:35,279
two

00:08:32,000 --> 00:08:39,039
input fields here

00:08:35,279 --> 00:08:42,320
let me change it to light back

00:08:39,039 --> 00:08:42,800
we also see in my example a header image

00:08:42,320 --> 00:08:46,160
which is

00:08:42,800 --> 00:08:49,279
actually kinda pinky colors

00:08:46,160 --> 00:08:52,839
so let's try to build uh something

00:08:49,279 --> 00:08:56,480
custom for our app let's go back to

00:08:52,839 --> 00:08:59,839
our color generator tool

00:08:56,480 --> 00:09:02,959
let me find that you

00:08:59,839 --> 00:09:02,959
want colors

00:09:03,200 --> 00:09:07,120
yeah so as i mentioned before we could

00:09:06,240 --> 00:09:10,720
just

00:09:07,120 --> 00:09:11,279
pick our branded color download our

00:09:10,720 --> 00:09:15,040
theme

00:09:11,279 --> 00:09:18,320
with this export button as json

00:09:15,040 --> 00:09:19,200
copy it to our code base and that would

00:09:18,320 --> 00:09:22,880
be it

00:09:19,200 --> 00:09:25,839
but actually since i have already

00:09:22,880 --> 00:09:28,240
everything prepared for this demo app

00:09:25,839 --> 00:09:32,080
let's just see how it works

00:09:28,240 --> 00:09:37,120
so yeah we just spread

00:09:32,080 --> 00:09:40,399
eva live theme

00:09:37,120 --> 00:09:40,959
and we add our sweet theme with plenty

00:09:40,399 --> 00:09:44,399
colors

00:09:40,959 --> 00:09:46,800
here to combine both

00:09:44,399 --> 00:09:46,800
teams

00:09:48,800 --> 00:09:52,320
oh it didn't work

00:09:52,399 --> 00:09:55,839
yeah you should also apply spread

00:09:54,640 --> 00:09:59,040
operator

00:09:55,839 --> 00:10:02,399
yeah this is how it will look like quite

00:09:59,040 --> 00:10:05,519
awesome i guess so let's jump to our

00:10:02,399 --> 00:10:08,640
demo view to see what

00:10:05,519 --> 00:10:12,240
happens here i believe

00:10:08,640 --> 00:10:15,279
it's i could make it readable because i

00:10:12,240 --> 00:10:16,240
tried to place as less components as i

00:10:15,279 --> 00:10:18,399
could here

00:10:16,240 --> 00:10:20,640
so it actually consists of inputs and

00:10:18,399 --> 00:10:26,480
checkbox and button here

00:10:20,640 --> 00:10:30,240
but cool feature of ui kitten is that we

00:10:26,480 --> 00:10:32,800
don't really need to create separate

00:10:30,240 --> 00:10:34,480
text components just to define a label

00:10:32,800 --> 00:10:37,680
for our

00:10:34,480 --> 00:10:41,040
input so canada also

00:10:37,680 --> 00:10:43,440
can create

00:10:41,040 --> 00:10:44,560
bottom line for this input just by

00:10:43,440 --> 00:10:47,680
creating

00:10:44,560 --> 00:10:50,399
just by passing the caption pro so how

00:10:47,680 --> 00:10:50,399
it works here

00:10:55,920 --> 00:11:01,839
no why

00:11:04,240 --> 00:11:18,560
oh well it didn't work for a reason

00:11:15,440 --> 00:11:18,560
okay caption

00:11:20,000 --> 00:11:26,959
let's try yeah it worked

00:11:23,120 --> 00:11:28,560
cool thanks so well we also can place

00:11:26,959 --> 00:11:32,160
our captions labels

00:11:28,560 --> 00:11:32,160
that's really cool but

00:11:32,480 --> 00:11:35,839
i hope that most of you guys are already

00:11:34,640 --> 00:11:39,440
familiar with

00:11:35,839 --> 00:11:42,560
such cool frameworks as formic which

00:11:39,440 --> 00:11:45,920
help us a lot for building validatable

00:11:42,560 --> 00:11:46,640
forms in react and react native so i use

00:11:45,920 --> 00:11:49,519
that here

00:11:46,640 --> 00:11:50,240
to demonstrate how can we actually

00:11:49,519 --> 00:11:53,519
integrate

00:11:50,240 --> 00:11:57,680
that with ui kitten and

00:11:53,519 --> 00:12:01,279
validate our apps and present some maybe

00:11:57,680 --> 00:12:03,600
validation errors during the

00:12:01,279 --> 00:12:04,399
sign up flow so let's see how it works

00:12:03,600 --> 00:12:06,959
so now

00:12:04,399 --> 00:12:07,920
we don't use any state specific logic

00:12:06,959 --> 00:12:10,959
here so

00:12:07,920 --> 00:12:13,839
we can just input our

00:12:10,959 --> 00:12:15,200
email and password here but the checkbox

00:12:13,839 --> 00:12:18,079
is not pressable itself

00:12:15,200 --> 00:12:19,760
i don't really want to use this react

00:12:18,079 --> 00:12:22,880
use state hooks here

00:12:19,760 --> 00:12:26,880
so i built

00:12:22,880 --> 00:12:26,880
a hooks specifically for formic

00:12:26,959 --> 00:12:33,200
well so here we may notice that

00:12:30,079 --> 00:12:36,639
we use formic context and

00:12:33,200 --> 00:12:40,079
the form of context provides us values

00:12:36,639 --> 00:12:40,800
that user has has right now on the

00:12:40,079 --> 00:12:44,480
screen

00:12:40,800 --> 00:12:47,680
so in this example when we for example

00:12:44,480 --> 00:12:48,560
will use our input the value will be

00:12:47,680 --> 00:12:52,959
controlled

00:12:48,560 --> 00:12:55,920
fully by

00:12:52,959 --> 00:12:56,320
we also can provide the status group to

00:12:55,920 --> 00:12:59,200
our

00:12:56,320 --> 00:12:59,920
input field to make this let me show you

00:12:59,200 --> 00:13:02,480
actually

00:12:59,920 --> 00:13:04,639
to make it uh interactable presenting

00:13:02,480 --> 00:13:07,839
the current status of our input

00:13:04,639 --> 00:13:09,839
to let our users know whether it is

00:13:07,839 --> 00:13:12,320
it was failed to validate or something

00:13:09,839 --> 00:13:16,720
like that so

00:13:12,320 --> 00:13:16,720
basically it works like this you can say

00:13:17,120 --> 00:13:23,200
the validation was successful

00:13:20,240 --> 00:13:23,200
but it didn't work

00:13:25,519 --> 00:13:30,320
well let's try using them

00:13:31,360 --> 00:13:37,839
so we define our group

00:13:34,720 --> 00:13:38,800
which use in which stocks use input and

00:13:37,839 --> 00:13:40,880
here we pass

00:13:38,800 --> 00:13:43,360
identifier for that field so let's say

00:13:40,880 --> 00:13:43,360
it would be

00:13:43,440 --> 00:13:46,880
because we actually want to input an

00:13:45,199 --> 00:13:52,079
email and

00:13:46,880 --> 00:13:52,079
you name it let's say email input

00:13:52,240 --> 00:13:55,920
and say we actually will do for the

00:13:57,440 --> 00:14:04,800
password and we also do the same for

00:14:01,680 --> 00:14:04,800
our chat box

00:14:06,560 --> 00:14:13,040
which which asks us to

00:14:11,120 --> 00:14:17,199
accept the terms and conditions so we

00:14:13,040 --> 00:14:19,440
call terms

00:14:17,199 --> 00:14:19,440
and

00:14:20,399 --> 00:14:24,720
terms checkbooks so what happens here is

00:14:23,199 --> 00:14:28,000
that our books

00:14:24,720 --> 00:14:31,040
returns as a configuration for

00:14:28,000 --> 00:14:32,240
our input fields and checkboxes so this

00:14:31,040 --> 00:14:35,760
is actually a props

00:14:32,240 --> 00:14:36,240
so we can use our email inputted

00:14:35,760 --> 00:14:38,959
password

00:14:36,240 --> 00:14:41,360
input by spreading beams and those to

00:14:38,959 --> 00:14:45,120
our inputs

00:14:41,360 --> 00:14:47,839
email inputs and

00:14:45,120 --> 00:14:47,839
replace that

00:14:50,399 --> 00:14:52,800
password

00:14:56,160 --> 00:15:01,680
terms checkbox and we also want

00:14:59,279 --> 00:15:03,199
user not being able to press sign up

00:15:01,680 --> 00:15:06,880
button so we

00:15:03,199 --> 00:15:06,880
say that it's not pressable

00:15:07,519 --> 00:15:14,480
disabled while

00:15:11,120 --> 00:15:17,600
our form is not yeah doesn't contain

00:15:14,480 --> 00:15:21,440
any welded values

00:15:17,600 --> 00:15:24,800
perhaps i just

00:15:21,440 --> 00:15:25,440
work like that well the button is

00:15:24,800 --> 00:15:28,240
disabled

00:15:25,440 --> 00:15:28,880
of course because we didn't input any

00:15:28,240 --> 00:15:30,880
email

00:15:28,880 --> 00:15:31,920
and which is required by your package

00:15:30,880 --> 00:15:34,320
which provides

00:15:31,920 --> 00:15:34,320
actually

00:15:36,880 --> 00:15:40,720
expression for our email and constantly

00:15:39,920 --> 00:15:43,839
checking it

00:15:40,720 --> 00:15:45,279
for for the value so that we can see the

00:15:43,839 --> 00:15:48,399
input field changes

00:15:45,279 --> 00:15:51,519
its status to a red one

00:15:48,399 --> 00:15:54,480
until we enter a valid email so

00:15:51,519 --> 00:15:55,199
right now it's valid it's cool but we

00:15:54,480 --> 00:15:59,199
also

00:15:55,199 --> 00:15:59,199
require to input

00:15:59,600 --> 00:16:06,079
a minimum of eight symbols password

00:16:03,600 --> 00:16:06,880
so one two three one two three one two

00:16:06,079 --> 00:16:09,519
eight okay

00:16:06,880 --> 00:16:11,120
that's cool the buttons still be uh

00:16:09,519 --> 00:16:13,680
still disabled because

00:16:11,120 --> 00:16:14,560
we don't accept the terms and conditions

00:16:13,680 --> 00:16:17,839
we press that

00:16:14,560 --> 00:16:19,120
and boom so here we got our phone fully

00:16:17,839 --> 00:16:22,160
validated

00:16:19,120 --> 00:16:24,720
and that's actually how we can integrate

00:16:22,160 --> 00:16:25,279
our ui kitchen components with former so

00:16:24,720 --> 00:16:27,519
just to

00:16:25,279 --> 00:16:29,440
go through all of the steps one more

00:16:27,519 --> 00:16:31,199
time

00:16:29,440 --> 00:16:32,480
we are actually able to use formic

00:16:31,199 --> 00:16:36,959
context

00:16:32,480 --> 00:16:40,000
which defines our forum values

00:16:36,959 --> 00:16:42,399
provided with uh forming

00:16:40,000 --> 00:16:44,000
so why do we need an identifier for a

00:16:42,399 --> 00:16:47,040
field here

00:16:44,000 --> 00:16:49,279
this is because we can accept

00:16:47,040 --> 00:16:51,120
a proper field name through the format

00:16:49,279 --> 00:16:54,880
values because the form of payload

00:16:51,120 --> 00:16:58,000
is actually an object and we let's say

00:16:54,880 --> 00:17:00,320
can accept the email field like this

00:16:58,000 --> 00:17:01,120
but since javascript provided us another

00:17:00,320 --> 00:17:04,400
way we can

00:17:01,120 --> 00:17:08,160
accept that through the end date and

00:17:04,400 --> 00:17:08,799
what we say is that our input field

00:17:08,160 --> 00:17:12,160
should have

00:17:08,799 --> 00:17:15,039
a dangerous status until

00:17:12,160 --> 00:17:16,079
it's swelled so if formic has some

00:17:15,039 --> 00:17:19,039
errors

00:17:16,079 --> 00:17:21,679
and it errors doesn't apply for a

00:17:19,039 --> 00:17:24,160
current value which is not defined

00:17:21,679 --> 00:17:25,039
then we should make it danger and then

00:17:24,160 --> 00:17:28,319
we should also

00:17:25,039 --> 00:17:32,000
display a caption here wait a second in

00:17:28,319 --> 00:17:35,039
this example

00:17:32,000 --> 00:17:38,240
we manually passed it

00:17:35,039 --> 00:17:41,280
to input so to clarify yeah

00:17:38,240 --> 00:17:45,039
formic also uses a caption of

00:17:41,280 --> 00:17:48,000
our ui kit and input field and pass

00:17:45,039 --> 00:17:49,360
the validation error to our caption so

00:17:48,000 --> 00:17:52,799
that's really cool

00:17:49,360 --> 00:17:56,400
and of course we define our own change

00:17:52,799 --> 00:17:59,280
text property to set the current value

00:17:56,400 --> 00:18:00,480
to formula and to make it able to

00:17:59,280 --> 00:18:05,679
validate everything

00:18:00,480 --> 00:18:05,679
once again same applies to our checkbox

00:18:05,760 --> 00:18:12,240
and finally we can make our form

00:18:09,039 --> 00:18:13,520
validated so that's really cool i really

00:18:12,240 --> 00:18:17,600
like this pattern of

00:18:13,520 --> 00:18:19,520
integrating components to formic i

00:18:17,600 --> 00:18:21,679
actually use

00:18:19,520 --> 00:18:24,000
in the production app that i am

00:18:21,679 --> 00:18:26,160
currently working for

00:18:24,000 --> 00:18:29,280
but let me show you another cool feature

00:18:26,160 --> 00:18:32,400
of ui

00:18:29,280 --> 00:18:33,200
so since we are able to use a theme for

00:18:32,400 --> 00:18:37,120
that

00:18:33,200 --> 00:18:42,320
to define the colors but what if we can

00:18:37,120 --> 00:18:45,360
we actually want to define the same way

00:18:42,320 --> 00:18:48,480
font family for all of the text displays

00:18:45,360 --> 00:18:51,280
in our app it's just

00:18:48,480 --> 00:18:52,720
quite simple we should just need to

00:18:51,280 --> 00:18:56,320
define

00:18:52,720 --> 00:19:01,919
our mapping and say hey my thing

00:18:56,320 --> 00:19:01,919
please use text for family for that

00:19:02,240 --> 00:19:08,400
family and

00:19:05,840 --> 00:19:09,440
i actually have a special form for that

00:19:08,400 --> 00:19:14,799
which i really love

00:19:09,440 --> 00:19:14,799
sarah and

00:19:17,520 --> 00:19:24,559
yeah so by refreshing our app we see

00:19:20,960 --> 00:19:28,400
that it was applied which is cool

00:19:24,559 --> 00:19:31,600
and how it actually works is

00:19:28,400 --> 00:19:32,559
that our ui kitten connects to metro

00:19:31,600 --> 00:19:35,520
bundler

00:19:32,559 --> 00:19:37,440
and with a simple configuration of our

00:19:35,520 --> 00:19:40,480
app we define the path

00:19:37,440 --> 00:19:42,400
to custom mapping.json which is

00:19:40,480 --> 00:19:44,720
which was actually used during this

00:19:42,400 --> 00:19:47,200
presentation

00:19:44,720 --> 00:19:47,840
and it's constantly watching for changes

00:19:47,200 --> 00:19:50,960
in

00:19:47,840 --> 00:19:54,080
this magnet.json

00:19:50,960 --> 00:19:57,280
and once it sees that we defined

00:19:54,080 --> 00:20:01,120
our text from family it will apply it

00:19:57,280 --> 00:20:05,760
for all the components used in our app

00:20:01,120 --> 00:20:08,799
of course if we use text from ui

00:20:05,760 --> 00:20:11,200
so another great example would be

00:20:08,799 --> 00:20:12,880
a border radius such as we can also

00:20:11,200 --> 00:20:15,520
define

00:20:12,880 --> 00:20:17,120
a border radius that should be used

00:20:15,520 --> 00:20:20,640
globally

00:20:17,120 --> 00:20:24,159
in our app let's say

00:20:20,640 --> 00:20:24,159
let's try and make it eight

00:20:24,880 --> 00:20:29,840
everything is quite rounded let's say

00:20:28,640 --> 00:20:34,960
but let's try magic

00:20:29,840 --> 00:20:38,640
here yeah and we also

00:20:34,960 --> 00:20:41,520
can make this square by passing one

00:20:38,640 --> 00:20:43,440
well this is something that i really

00:20:41,520 --> 00:20:47,440
like

00:20:43,440 --> 00:20:51,039
well yeah that was about

00:20:47,440 --> 00:20:55,520
an example of usage ui kitten

00:20:51,039 --> 00:20:58,240
so just to summarize all of that

00:20:55,520 --> 00:20:59,360
let me explain why do we actually need

00:20:58,240 --> 00:21:02,400
to rely

00:20:59,360 --> 00:21:04,480
in ui keys in our app

00:21:02,400 --> 00:21:05,840
so to answer this question let me show

00:21:04,480 --> 00:21:08,240
you one scription

00:21:05,840 --> 00:21:09,200
of the app that i had the chance to

00:21:08,240 --> 00:21:12,159
build

00:21:09,200 --> 00:21:13,679
for a starter company which specializes

00:21:12,159 --> 00:21:16,960
in medical services

00:21:13,679 --> 00:21:18,320
and veterinary so this is the screenshot

00:21:16,960 --> 00:21:21,360
of our first phase

00:21:18,320 --> 00:21:24,799
when the app get actually released

00:21:21,360 --> 00:21:26,000
and this is how it looks now so i had a

00:21:24,799 --> 00:21:28,320
chance to build that

00:21:26,000 --> 00:21:30,080
for less than two months of course for

00:21:28,320 --> 00:21:33,760
its first iteration

00:21:30,080 --> 00:21:35,760
and now the entire code base contains

00:21:33,760 --> 00:21:36,960
more than 50 screens which is actually

00:21:35,760 --> 00:21:40,400
really cool

00:21:36,960 --> 00:21:42,720
and what did it make it so profitable

00:21:40,400 --> 00:21:44,000
and successful for business to grow is

00:21:42,720 --> 00:21:46,400
that the customer actually

00:21:44,000 --> 00:21:48,000
didn't realize that much from building

00:21:46,400 --> 00:21:51,919
user interfaces

00:21:48,000 --> 00:21:51,919
and it helps us a lot

00:21:52,480 --> 00:21:57,760
to not focus on building user interface

00:21:55,600 --> 00:22:01,039
but

00:21:57,760 --> 00:22:02,880
and try to build as much business logic

00:22:01,039 --> 00:22:06,240
as we could that time

00:22:02,880 --> 00:22:08,960
the usage of ui kits and relying

00:22:06,240 --> 00:22:09,840
heavily relying on the design rules

00:22:08,960 --> 00:22:13,520
gives us

00:22:09,840 --> 00:22:16,159
first of all consistent user interfaces

00:22:13,520 --> 00:22:17,039
the second by reducing our development

00:22:16,159 --> 00:22:19,200
efforts

00:22:17,039 --> 00:22:21,600
we also reduce the cost of frontal

00:22:19,200 --> 00:22:24,400
development for our customers

00:22:21,600 --> 00:22:26,640
and the last one it gives us a

00:22:24,400 --> 00:22:28,320
possibility to focus on the important

00:22:26,640 --> 00:22:31,760
things on

00:22:28,320 --> 00:22:35,039
not just building ui blocks yeah

00:22:31,760 --> 00:22:39,440
so well that was

00:22:35,039 --> 00:22:42,159
it i guess thank you for watching i hope

00:22:39,440 --> 00:22:43,039
you will build awesome user interfaces

00:22:42,159 --> 00:22:45,210
and i hope you

00:22:43,039 --> 00:22:47,440
really enjoyed the talk and

00:22:45,210 --> 00:22:49,840
[Music]

00:22:47,440 --> 00:22:51,840
i could share you much uh as much

00:22:49,840 --> 00:22:52,840
information about e-related products as

00:22:51,840 --> 00:22:55,840
i could

00:22:52,840 --> 00:22:56,240
so you can find me on twitter if you

00:22:55,840 --> 00:23:00,480
want

00:22:56,240 --> 00:23:02,799
it's presented at the slide below

00:23:00,480 --> 00:23:04,159
at the bottom of the slide so please

00:23:02,799 --> 00:23:07,200
approach me if you want

00:23:04,159 --> 00:23:10,400
and yeah if you have any questions

00:23:07,200 --> 00:23:11,840
please write them in our chat so i can

00:23:10,400 --> 00:23:21,360
answer them

00:23:11,840 --> 00:23:21,360

YouTube URL: https://www.youtube.com/watch?v=S8DHAEy22Jo


