Title: React Native London   Design Systems & Components   June 2021
Publication date: 2021-06-08
Playlist: React Native London
Description: 
	@RNLmeetup
https://www.meetup.com/React-Native-London

1. Dive into React Native UI Kitten by Artur Yorsh

What it actually is and how it can boost the development process?
Let’s talk about the Design system, scalability, existing integrations, and customization options.
Live Coding and Showcases are also included!

2. Building intuitive components for an interactive fitness app by Arohan Subramonia

A look through the product and developer lens at how we built a unique UI component from scratch, for a specific use case in an UX-first fitness app

00:00 Pre-Roll
3:04 Introduction
6:33 Dive into React Native UI Kitten
31:00 Q&A
42:05 Building intuitive components for an interactive fitness app
59:00 Q&A

___________________
🍷 The sponsor – Theodo (https://www.theodo.co.uk/)

Our team of 50+ agile web, mobile and software experts are based in Soho Square, London with offices in Paris and New York.

Over the last 10 years and across over 500 projects, we have partnered with non-technical founders to launch their first product, FTSE 100 companies to increase market share through launching internal startups & spearheading digital transformation initiatives, and SME CTOs to build and scale their technical teams.

Theodo projects start fast, and progress even faster, with our unique methodology combining agile, lean and DevOps allowing us to build more efficiently as the project progresses. We are experts at React Native, Serverless, React, Django/Python, Node.js and Symfony, with experience in many other frameworks.

_________________________________________________________________

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_________________________________________________________________

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,220 --> 00:00:38,020
[Music]

00:00:43,250 --> 00:00:58,250
[Music]

00:00:56,840 --> 00:01:30,760
foreign

00:00:58,250 --> 00:01:30,760
[Music]

00:01:35,060 --> 00:02:27,449
[Music]

00:02:24,350 --> 00:02:27,449
[Applause]

00:02:27,470 --> 00:02:50,020
[Music]

00:02:48,840 --> 00:02:56,099
then

00:02:50,020 --> 00:02:56,099
[Music]

00:03:05,120 --> 00:03:09,440
hi guys um welcome to riot native london

00:03:08,560 --> 00:03:11,599
um

00:03:09,440 --> 00:03:13,200
it's obviously june uh last time you saw

00:03:11,599 --> 00:03:14,640
us was a little while ago but uh it's

00:03:13,200 --> 00:03:16,560
really good to be back

00:03:14,640 --> 00:03:18,879
um and yeah we got some really cool

00:03:16,560 --> 00:03:22,480
talks to present you this evening

00:03:18,879 --> 00:03:24,480
um so first up you might notice that uh

00:03:22,480 --> 00:03:25,599
i'm i'm not alex as the previous

00:03:24,480 --> 00:03:26,879
organizer um

00:03:25,599 --> 00:03:28,640
so yeah i've been a bit of change of

00:03:26,879 --> 00:03:30,319
personnel here so

00:03:28,640 --> 00:03:31,680
me and arahan who you'll hear quite a

00:03:30,319 --> 00:03:33,840
lot from later

00:03:31,680 --> 00:03:34,959
i've taken over the running and yeah

00:03:33,840 --> 00:03:38,000
we're really looking forward to

00:03:34,959 --> 00:03:39,360
getting engaged with you guys and um

00:03:38,000 --> 00:03:41,120
continuing to make this awesome

00:03:39,360 --> 00:03:45,280
community like grow

00:03:41,120 --> 00:03:47,920
and achieve cool things um

00:03:45,280 --> 00:03:49,200
so yeah a quick bit about who we are as

00:03:47,920 --> 00:03:52,239
like a company of running this

00:03:49,200 --> 00:03:54,640
uh so with yeono um we're full sag so

00:03:52,239 --> 00:03:56,159
we're consultants we run in agile and

00:03:54,640 --> 00:03:58,319
lean we work with

00:03:56,159 --> 00:03:59,519
basically everybody from the first stage

00:03:58,319 --> 00:04:01,360
of startup to

00:03:59,519 --> 00:04:03,040
the biggest corporate you can think of

00:04:01,360 --> 00:04:04,640
obviously we love react native

00:04:03,040 --> 00:04:07,360
otherwise we wouldn't be here but we

00:04:04,640 --> 00:04:10,159
also love react serverless django

00:04:07,360 --> 00:04:11,519
and lots of other cool technologies um

00:04:10,159 --> 00:04:12,799
reason why i mention this

00:04:11,519 --> 00:04:14,560
partly because it's good to know who

00:04:12,799 --> 00:04:16,639
you're talking to but also because

00:04:14,560 --> 00:04:17,600
we're hiring predictably a meet up talk

00:04:16,639 --> 00:04:20,160
you hear this

00:04:17,600 --> 00:04:20,959
um but yeah if you like who we are and

00:04:20,160 --> 00:04:22,560
what we're doing

00:04:20,959 --> 00:04:25,040
um and particularly particularly like

00:04:22,560 --> 00:04:27,280
iran's talk come and chat to us

00:04:25,040 --> 00:04:28,720
we're a friendly bunch and yeah we'll be

00:04:27,280 --> 00:04:31,440
more than happy to

00:04:28,720 --> 00:04:32,800
tell you more about what we do and how

00:04:31,440 --> 00:04:38,160
we how we are

00:04:32,800 --> 00:04:40,479
um also uh just as a side note we're um

00:04:38,160 --> 00:04:41,199
obviously still looking to improve and

00:04:40,479 --> 00:04:43,199
change

00:04:41,199 --> 00:04:45,120
and develop what we what we've already

00:04:43,199 --> 00:04:47,120
got and we think it's good formula but

00:04:45,120 --> 00:04:49,360
obviously there's always room to improve

00:04:47,120 --> 00:04:52,800
um so we've got a qr code there

00:04:49,360 --> 00:04:54,560
for basically we've got questions about

00:04:52,800 --> 00:04:56,479
you know whether you'd like us to be in

00:04:54,560 --> 00:04:58,400
person whether um

00:04:56,479 --> 00:05:00,160
what talks you want to hear we've also

00:04:58,400 --> 00:05:02,639
got bits there if you want to sponsor

00:05:00,160 --> 00:05:03,440
a speaker and meet up um we'd love to

00:05:02,639 --> 00:05:06,960
hear some more

00:05:03,440 --> 00:05:08,639
feedback from you guys and yeah really

00:05:06,960 --> 00:05:10,000
just want to know more about what

00:05:08,639 --> 00:05:12,960
community's thinking and

00:05:10,000 --> 00:05:13,440
how we can best represent you as a meet

00:05:12,960 --> 00:05:15,680
up

00:05:13,440 --> 00:05:16,960
um i'll chuck this back up at the end so

00:05:15,680 --> 00:05:19,360
if you've not had a chance to

00:05:16,960 --> 00:05:21,280
to scan it then obviously we can we can

00:05:19,360 --> 00:05:24,560
get you then

00:05:21,280 --> 00:05:25,360
um so yeah obviously first up this

00:05:24,560 --> 00:05:28,560
evening we have

00:05:25,360 --> 00:05:29,120
arta talking about his uh really cool ui

00:05:28,560 --> 00:05:32,560
library

00:05:29,120 --> 00:05:35,840
uh ui kitten um looking into

00:05:32,560 --> 00:05:37,759
you know it's nexus and how it started

00:05:35,840 --> 00:05:39,440
and yeah i'm really looking forward to

00:05:37,759 --> 00:05:53,840
it if nothing else

00:05:39,440 --> 00:05:53,840
so yeah i think i'll pass you across

00:05:54,700 --> 00:05:57,910
[Music]

00:06:03,660 --> 00:06:07,840
[Music]

00:06:04,840 --> 00:06:07,840
so

00:06:10,300 --> 00:06:21,840
[Music]

00:06:18,840 --> 00:06:21,840
so

00:06:23,590 --> 00:06:26,830
[Music]

00:06:31,919 --> 00:06:35,280
deeper today here i'm really glad to

00:06:34,319 --> 00:06:38,800
meet you

00:06:35,280 --> 00:06:39,280
all guys and i also want to stand uh all

00:06:38,800 --> 00:06:41,120
of you

00:06:39,280 --> 00:06:43,039
especially the other company for having

00:06:41,120 --> 00:06:45,360
me here uh

00:06:43,039 --> 00:06:46,160
and thank you for the invitation i'm

00:06:45,360 --> 00:06:48,479
really

00:06:46,160 --> 00:06:50,880
always wanted to talk about today's

00:06:48,479 --> 00:06:54,160
topic but i never had a chance to

00:06:50,880 --> 00:06:56,720
so here i am and my name is arthur

00:06:54,160 --> 00:06:57,520
i'm working for a company called acura

00:06:56,720 --> 00:06:59,759
as a software

00:06:57,520 --> 00:07:01,440
engineer building high scale mobile

00:06:59,759 --> 00:07:04,160
applications with

00:07:01,440 --> 00:07:04,960
react native my previous experience is

00:07:04,160 --> 00:07:07,360
also based

00:07:04,960 --> 00:07:08,000
building native applications with speak

00:07:07,360 --> 00:07:10,000
java

00:07:08,000 --> 00:07:11,599
kotlin and everything that you could

00:07:10,000 --> 00:07:14,960
just imagine

00:07:11,599 --> 00:07:16,080
so at our company we do lots of front

00:07:14,960 --> 00:07:18,880
and related stuff

00:07:16,080 --> 00:07:20,319
bringing our work to open source and we

00:07:18,880 --> 00:07:23,599
really enjoyed that

00:07:20,319 --> 00:07:25,280
so yeah once i opened the world of open

00:07:23,599 --> 00:07:28,000
source also for me

00:07:25,280 --> 00:07:29,360
uh i just felt in love with react native

00:07:28,000 --> 00:07:32,080
and its community so

00:07:29,360 --> 00:07:32,560
that's why we are here today talking

00:07:32,080 --> 00:07:34,639
about

00:07:32,560 --> 00:07:35,840
one of the most exciting ui libraries

00:07:34,639 --> 00:07:38,160
that we have

00:07:35,840 --> 00:07:39,440
built and i have had a chance to

00:07:38,160 --> 00:07:43,039
contribute to

00:07:39,440 --> 00:07:46,319
its ui kitten and evo design system

00:07:43,039 --> 00:07:50,400
so the title of my talk

00:07:46,319 --> 00:07:53,840
is dive into react native ui kitten

00:07:50,400 --> 00:07:54,479
but because ui kit in itself is actually

00:07:53,840 --> 00:07:56,960
a part

00:07:54,479 --> 00:07:58,160
of a bigger project it's a part of

00:07:56,960 --> 00:08:00,560
design system

00:07:58,160 --> 00:08:02,400
we are actually going to cover uh street

00:08:00,560 --> 00:08:04,319
topics today

00:08:02,400 --> 00:08:06,080
and by the way please drop a plus sign

00:08:04,319 --> 00:08:08,080
if you're already using

00:08:06,080 --> 00:08:09,759
those libraries in your app so that i

00:08:08,080 --> 00:08:12,960
can have some analytics

00:08:09,759 --> 00:08:16,160
and be happy that you listeners

00:08:12,960 --> 00:08:19,520
are here here's listen to me so

00:08:16,160 --> 00:08:20,879
first thing first uh we're going to dive

00:08:19,520 --> 00:08:24,960
into the ecosystem

00:08:20,879 --> 00:08:28,080
of eva design and talking about

00:08:24,960 --> 00:08:28,639
evo eva-related products and how we

00:08:28,080 --> 00:08:31,680
actually

00:08:28,639 --> 00:08:32,159
can use them in our app because i'm

00:08:31,680 --> 00:08:34,000
actually

00:08:32,159 --> 00:08:35,279
pretty sure that most of you guys have

00:08:34,000 --> 00:08:38,080
heard about

00:08:35,279 --> 00:08:40,800
ui kitten but a lot of the other cool

00:08:38,080 --> 00:08:43,919
stuff that eva can provide

00:08:40,800 --> 00:08:44,800
next we are going to uh i'm going to

00:08:43,919 --> 00:08:47,040
show you

00:08:44,800 --> 00:08:47,920
how we can actually use those products

00:08:47,040 --> 00:08:51,120
in our app

00:08:47,920 --> 00:08:53,920
to build um more exciting

00:08:51,120 --> 00:08:54,560
and also moved in user interfaces by

00:08:53,920 --> 00:08:57,440
making

00:08:54,560 --> 00:09:00,320
making it more branded and customized

00:08:57,440 --> 00:09:03,760
for the needs of our customers

00:09:00,320 --> 00:09:06,720
and lastly i also show you uh

00:09:03,760 --> 00:09:08,320
some of the great examples of how we can

00:09:06,720 --> 00:09:09,519
integrate some of the third party

00:09:08,320 --> 00:09:12,800
libraries

00:09:09,519 --> 00:09:16,320
with our products

00:09:12,800 --> 00:09:18,320
but before we start let me tell you

00:09:16,320 --> 00:09:20,880
a quick story so in this story i would

00:09:18,320 --> 00:09:24,080
like to cover the knowledge

00:09:20,880 --> 00:09:26,000
how had actually everything started

00:09:24,080 --> 00:09:27,839
so i will be talking about how your

00:09:26,000 --> 00:09:30,880
design system was burned

00:09:27,839 --> 00:09:31,920
so back in 2018 uh acquired the company

00:09:30,880 --> 00:09:34,160
i'm working for

00:09:31,920 --> 00:09:35,120
had already had several open source

00:09:34,160 --> 00:09:37,839
products and

00:09:35,120 --> 00:09:39,360
its demo applications and that was

00:09:37,839 --> 00:09:42,560
actually great because

00:09:39,360 --> 00:09:46,240
we could use our own ui libraries

00:09:42,560 --> 00:09:50,080
to boost up our development process of

00:09:46,240 --> 00:09:52,880
uh of like front-end tabs

00:09:50,080 --> 00:09:54,000
and by the way those libraries were also

00:09:52,880 --> 00:09:56,480
used by

00:09:54,000 --> 00:09:57,760
other thousands developers worldwide so

00:09:56,480 --> 00:10:00,640
thank you

00:09:57,760 --> 00:10:02,839
and but there was actually one global

00:10:00,640 --> 00:10:05,839
issue that we really wanted to solve

00:10:02,839 --> 00:10:08,720
um and it was about

00:10:05,839 --> 00:10:10,959
like we didn't really have any single

00:10:08,720 --> 00:10:13,200
source of truth for our

00:10:10,959 --> 00:10:14,640
web and mobile applications because on

00:10:13,200 --> 00:10:17,360
them to look different

00:10:14,640 --> 00:10:19,839
and inconsistent so that's why we really

00:10:17,360 --> 00:10:23,279
started to look into possible solutions

00:10:19,839 --> 00:10:26,240
and the only one really so uh was that

00:10:23,279 --> 00:10:29,600
we really should to integrate any sort

00:10:26,240 --> 00:10:32,800
of design system to our products

00:10:29,600 --> 00:10:34,959
but we really didn't wanted to integrate

00:10:32,800 --> 00:10:36,560
any existing solutions like material

00:10:34,959 --> 00:10:38,720
design because we

00:10:36,560 --> 00:10:40,240
also wanted to create something new and

00:10:38,720 --> 00:10:44,320
fresh and also

00:10:40,240 --> 00:10:48,000
share it to the open source community

00:10:44,320 --> 00:10:52,079
well yeah uh we ended with

00:10:48,000 --> 00:10:56,320
a new layer of uh products

00:10:52,079 --> 00:10:58,320
and so far uh

00:10:56,320 --> 00:11:00,480
this was an evo design family which

00:10:58,320 --> 00:11:03,760
actually consists of

00:11:00,480 --> 00:11:07,200
three products so first one

00:11:03,760 --> 00:11:11,519
is a design system itself available

00:11:07,200 --> 00:11:14,800
in both sketch and sigma files

00:11:11,519 --> 00:11:17,920
and to actually use it you should just

00:11:14,800 --> 00:11:21,120
go to event that design

00:11:17,920 --> 00:11:25,600
web page find that and

00:11:21,120 --> 00:11:27,680
be able to download this for zero price

00:11:25,600 --> 00:11:30,560
by the way there are lots of other

00:11:27,680 --> 00:11:35,200
products that we also share

00:11:30,560 --> 00:11:38,560
well yeah so may actually find it here

00:11:35,200 --> 00:11:41,760
so well yeah

00:11:38,560 --> 00:11:44,800
that was about design system and

00:11:41,760 --> 00:11:47,279
it actually consists of a structured

00:11:44,800 --> 00:11:48,880
view of the components that we use in

00:11:47,279 --> 00:11:51,200
our ui libraries

00:11:48,880 --> 00:11:52,800
and by knowing how it's important to

00:11:51,200 --> 00:11:54,800
follow the design rules in your

00:11:52,800 --> 00:11:57,120
applications

00:11:54,800 --> 00:11:59,680
this was actually the reason why we made

00:11:57,120 --> 00:12:02,720
that for free

00:11:59,680 --> 00:12:05,920
the second the color generator it's

00:12:02,720 --> 00:12:09,680
actually a tool uh where you

00:12:05,920 --> 00:12:12,959
can create an awesome um

00:12:09,680 --> 00:12:14,000
color palettes for for your app so being

00:12:12,959 --> 00:12:17,440
a developer

00:12:14,000 --> 00:12:20,480
i always know how it's painful to pick

00:12:17,440 --> 00:12:23,440
the right colors for your application

00:12:20,480 --> 00:12:24,079
and well the color generator doesn't

00:12:23,440 --> 00:12:26,240
care about

00:12:24,079 --> 00:12:27,839
it at all so it only wants you to pick

00:12:26,240 --> 00:12:31,839
one primary color

00:12:27,839 --> 00:12:35,519
and do the rest of the things for you so

00:12:31,839 --> 00:12:37,680
yeah be just sure 100

00:12:35,519 --> 00:12:38,560
sure of the graceful color selection for

00:12:37,680 --> 00:12:41,279
your app

00:12:38,560 --> 00:12:43,279
because uh it's actually a deep learning

00:12:41,279 --> 00:12:46,160
tool

00:12:43,279 --> 00:12:47,440
so the last one it's an icon package we

00:12:46,160 --> 00:12:50,959
actually share

00:12:47,440 --> 00:12:53,920
uh up to i guess there are around

00:12:50,959 --> 00:12:54,959
500 open source icons created

00:12:53,920 --> 00:12:58,000
specifically for

00:12:54,959 --> 00:13:00,399
eva and

00:12:58,000 --> 00:13:02,160
don't keep on using them in your app

00:13:00,399 --> 00:13:04,560
just because it will

00:13:02,160 --> 00:13:07,040
make your app much more beautiful and

00:13:04,560 --> 00:13:09,680
user friendly

00:13:07,040 --> 00:13:10,560
so by the way uh those products were

00:13:09,680 --> 00:13:13,200
given

00:13:10,560 --> 00:13:13,920
on its start uh a product hand

00:13:13,200 --> 00:13:16,240
achievements

00:13:13,920 --> 00:13:18,560
on this platform so be sure of the

00:13:16,240 --> 00:13:20,959
quality we share free

00:13:18,560 --> 00:13:22,639
all right i will not bore you anymore

00:13:20,959 --> 00:13:25,440
with uh

00:13:22,639 --> 00:13:26,079
product descriptions and all the markets

00:13:25,440 --> 00:13:29,200
and stuff

00:13:26,079 --> 00:13:30,240
so let's just jump into the code and see

00:13:29,200 --> 00:13:34,160
how can it work

00:13:30,240 --> 00:13:36,560
all together but how do we start so yeah

00:13:34,160 --> 00:13:39,839
with your kitten we actually provide

00:13:36,560 --> 00:13:41,839
uh two template packages available for

00:13:39,839 --> 00:13:44,160
react native command line interface to

00:13:41,839 --> 00:13:48,079
start your project

00:13:44,160 --> 00:13:50,399
uh yeah you may use both typescript

00:13:48,079 --> 00:13:52,079
and javascript template packages based

00:13:50,399 --> 00:13:55,519
on your preferences

00:13:52,079 --> 00:13:57,760
but yeah

00:13:55,519 --> 00:13:58,880
use typescript for better development

00:13:57,760 --> 00:14:00,560
experience but

00:13:58,880 --> 00:14:02,880
we will not start a hollywood thread

00:14:00,560 --> 00:14:06,959
here but okay

00:14:02,880 --> 00:14:09,519
so to start your uh ui kitten project

00:14:06,959 --> 00:14:11,199
you should just copy and paste this

00:14:09,519 --> 00:14:14,320
simple command line

00:14:11,199 --> 00:14:14,959
uh to your terminal and run it and that

00:14:14,320 --> 00:14:18,959
would be

00:14:14,959 --> 00:14:19,600
it so yeah once we initialize the

00:14:18,959 --> 00:14:23,040
project

00:14:19,600 --> 00:14:23,680
we'll see somewhat like this and this is

00:14:23,040 --> 00:14:26,000
actually

00:14:23,680 --> 00:14:27,360
my demo project we can also interact

00:14:26,000 --> 00:14:30,480
with the slides

00:14:27,360 --> 00:14:33,519
like that to be sure that

00:14:30,480 --> 00:14:34,240
for example here we can just uh switch

00:14:33,519 --> 00:14:37,519
our

00:14:34,240 --> 00:14:39,839
theme to from light to dark well

00:14:37,519 --> 00:14:40,639
yeah so let's jump to the code and see

00:14:39,839 --> 00:14:45,199
what happens

00:14:40,639 --> 00:14:47,600
there okay

00:14:45,199 --> 00:14:48,320
so one of the most important things to

00:14:47,600 --> 00:14:51,519
understand

00:14:48,320 --> 00:14:52,320
in ur kitten is that we wrap our entire

00:14:51,519 --> 00:14:55,279
application

00:14:52,320 --> 00:14:57,519
with application provider component

00:14:55,279 --> 00:15:00,880
which is actually here

00:14:57,519 --> 00:15:03,040
and we use that to pass through

00:15:00,880 --> 00:15:04,720
evo styles for all of the nested

00:15:03,040 --> 00:15:07,760
components rendered

00:15:04,720 --> 00:15:09,600
within our app specifically for ui

00:15:07,760 --> 00:15:12,720
ketone components such as buttons

00:15:09,600 --> 00:15:14,639
inputs and so on another

00:15:12,720 --> 00:15:15,920
cool thing here is that we can also

00:15:14,639 --> 00:15:19,120
define a

00:15:15,920 --> 00:15:20,399
theme for our app so by default it's

00:15:19,120 --> 00:15:23,600
light

00:15:20,399 --> 00:15:24,000
with standard blue colors of eva but we

00:15:23,600 --> 00:15:27,680
also

00:15:24,000 --> 00:15:30,000
may change it to dark like this

00:15:27,680 --> 00:15:32,000
so let's see what happens here yeah it

00:15:30,000 --> 00:15:35,120
works it's really cool

00:15:32,000 --> 00:15:38,079
and yeah but let's say

00:15:35,120 --> 00:15:38,959
it's cool but let's see what happens if

00:15:38,079 --> 00:15:42,240
we want to

00:15:38,959 --> 00:15:45,279
define more complex ui here

00:15:42,240 --> 00:15:47,600
so here we see a

00:15:45,279 --> 00:15:48,560
signup form which actually consists of

00:15:47,600 --> 00:15:51,600
two

00:15:48,560 --> 00:15:56,160
uh input fields and

00:15:51,600 --> 00:15:59,440
here let me change it to light back

00:15:56,160 --> 00:15:59,920
we also see in my example a header image

00:15:59,440 --> 00:16:03,279
which is

00:15:59,920 --> 00:16:06,399
actually kinda pinky colors

00:16:03,279 --> 00:16:09,600
so let's try to build uh something

00:16:06,399 --> 00:16:13,600
custom for our app let's go back to

00:16:09,600 --> 00:16:17,600
our uh color generator tool

00:16:13,600 --> 00:16:21,040
let me find that new

00:16:17,600 --> 00:16:24,240
colors yeah

00:16:21,040 --> 00:16:27,839
so as i mentioned before we could just

00:16:24,240 --> 00:16:28,399
pick our branded color download our

00:16:27,839 --> 00:16:32,160
theme

00:16:28,399 --> 00:16:35,440
with this export button as json

00:16:32,160 --> 00:16:36,320
copy it to our code base and that would

00:16:35,440 --> 00:16:39,600
be it

00:16:36,320 --> 00:16:42,959
but actually since i have already

00:16:39,600 --> 00:16:46,240
uh everything prepared for this demo app

00:16:42,959 --> 00:16:52,639
let's just see how it works so

00:16:46,240 --> 00:16:52,639
yeah we just spread eva white theme

00:16:54,240 --> 00:16:58,079
and we add our sweet theme with plenty

00:16:57,519 --> 00:17:02,839
colors

00:16:58,079 --> 00:17:05,839
here to combine both

00:17:02,839 --> 00:17:05,839
teams

00:17:05,919 --> 00:17:09,439
oh it didn't work

00:17:09,520 --> 00:17:12,959
yeah you should also apply spread

00:17:11,760 --> 00:17:16,160
operator

00:17:12,959 --> 00:17:19,520
yeah this is how it will look like quite

00:17:16,160 --> 00:17:22,640
awesome i guess so let's jump to our

00:17:19,520 --> 00:17:25,760
demo view to see what

00:17:22,640 --> 00:17:29,360
happens here i believe

00:17:25,760 --> 00:17:32,400
it's i could make it readable because i

00:17:29,360 --> 00:17:33,360
tried to place as less components as i

00:17:32,400 --> 00:17:35,520
could here

00:17:33,360 --> 00:17:37,760
so it actually consists of inputs and

00:17:35,520 --> 00:17:41,840
checkbox and button here

00:17:37,760 --> 00:17:43,600
but what is critical feature of ui

00:17:41,840 --> 00:17:47,360
kitten is that we

00:17:43,600 --> 00:17:49,919
don't really need to create separate

00:17:47,360 --> 00:17:50,960
text components just to define a label

00:17:49,919 --> 00:17:54,799
for our

00:17:50,960 --> 00:17:58,160
uh input so canada also

00:17:54,799 --> 00:18:00,559
can create a

00:17:58,160 --> 00:18:01,679
bottom line for this input just by

00:18:00,559 --> 00:18:04,400
creating

00:18:01,679 --> 00:18:07,520
just by passing the caption pro so let's

00:18:04,400 --> 00:18:07,520
see how it works here

00:18:09,679 --> 00:18:12,000
test

00:18:13,039 --> 00:18:17,600
no why

00:18:21,360 --> 00:18:29,840
oh well it didn't work for a reason

00:18:32,559 --> 00:18:35,679
okay caption

00:18:37,120 --> 00:18:44,160
let's try yeah it worked

00:18:40,240 --> 00:18:45,039
cool thanks so well we also can place

00:18:44,160 --> 00:18:49,600
our captions

00:18:45,039 --> 00:18:51,840
labels that's really cool but um

00:18:49,600 --> 00:18:53,039
i hope that most of you guys are already

00:18:51,840 --> 00:18:56,559
familiar with

00:18:53,039 --> 00:18:59,679
such cool frameworks as formic which

00:18:56,559 --> 00:19:03,039
help us a lot for building validatable

00:18:59,679 --> 00:19:04,480
forms in react and react native so i use

00:19:03,039 --> 00:19:06,640
that here to

00:19:04,480 --> 00:19:07,840
demonstrate how can we actually

00:19:06,640 --> 00:19:12,000
integrate that

00:19:07,840 --> 00:19:14,799
with uikiton and validate our apps and

00:19:12,000 --> 00:19:18,400
present some maybe

00:19:14,799 --> 00:19:20,720
validation errors during the

00:19:18,400 --> 00:19:22,480
sign up flow so let's see how it works

00:19:20,720 --> 00:19:25,440
so now we don't use

00:19:22,480 --> 00:19:26,080
any state specific logic here so we can

00:19:25,440 --> 00:19:29,919
just

00:19:26,080 --> 00:19:32,320
input our uh email and password here

00:19:29,919 --> 00:19:34,000
but the checkbox is not pressable itself

00:19:32,320 --> 00:19:37,679
i don't really want to

00:19:34,000 --> 00:19:40,720
use this react use state books here so i

00:19:37,679 --> 00:19:44,080
built um a hooks

00:19:40,720 --> 00:19:47,200
specifically for formic use uh

00:19:44,080 --> 00:19:50,320
well so here we may notice that

00:19:47,200 --> 00:19:53,760
we use formic context and

00:19:50,320 --> 00:19:57,200
the form of context provides us values

00:19:53,760 --> 00:19:57,919
that user head has right now on the

00:19:57,200 --> 00:20:01,600
screen

00:19:57,919 --> 00:20:04,799
so in this example when we for example

00:20:01,600 --> 00:20:05,679
will use our input the value will be

00:20:04,799 --> 00:20:10,080
controlled

00:20:05,679 --> 00:20:13,039
fully by uh by forming

00:20:10,080 --> 00:20:14,400
we also can provide the status group to

00:20:13,039 --> 00:20:17,039
our input field

00:20:14,400 --> 00:20:18,000
to make this uh let me show you actually

00:20:17,039 --> 00:20:20,159
to make it

00:20:18,000 --> 00:20:21,760
uh interactable presenting the current

00:20:20,159 --> 00:20:24,960
status of our input

00:20:21,760 --> 00:20:26,960
to let our users know whether it is

00:20:24,960 --> 00:20:28,640
it was failed to validate or something

00:20:26,960 --> 00:20:32,840
like that so

00:20:28,640 --> 00:20:34,320
uh basically it works like this you can

00:20:32,840 --> 00:20:37,360
say

00:20:34,320 --> 00:20:40,320
the validation was successful

00:20:37,360 --> 00:20:40,320
but it didn't work

00:20:40,720 --> 00:20:48,480
um well

00:20:44,080 --> 00:20:51,840
let's try is improve that

00:20:48,480 --> 00:20:54,960
so we define our group uh

00:20:51,840 --> 00:20:55,919
which use in which stocks use input and

00:20:54,960 --> 00:20:58,000
here we pass

00:20:55,919 --> 00:21:00,640
identifier for that field so let's say

00:20:58,000 --> 00:21:02,320
it would be email

00:21:00,640 --> 00:21:04,000
because we actually want to input an

00:21:02,320 --> 00:21:09,200
email and

00:21:04,000 --> 00:21:09,200
you name it let's say email input

00:21:09,360 --> 00:21:13,520
and say we actually will do for the

00:21:11,039 --> 00:21:13,520
password

00:21:14,080 --> 00:21:21,919
choose passwords

00:21:17,280 --> 00:21:21,919
and we also do the same for our chat box

00:21:23,679 --> 00:21:30,159
which which asks us to

00:21:28,320 --> 00:21:32,960
accept the terms and conditions so it

00:21:30,159 --> 00:21:36,480
called terms

00:21:32,960 --> 00:21:36,480
terms and

00:21:37,520 --> 00:21:41,840
terms so what happens here is that our

00:21:40,880 --> 00:21:45,120
books

00:21:41,840 --> 00:21:48,159
returns as a configuration for

00:21:45,120 --> 00:21:49,360
our input fields and checkboxes so this

00:21:48,159 --> 00:21:52,880
is actually a props

00:21:49,360 --> 00:21:53,919
so we can use our email input and

00:21:52,880 --> 00:21:56,840
password input

00:21:53,919 --> 00:21:58,559
by spreading beams and those to our

00:21:56,840 --> 00:22:02,240
inputs

00:21:58,559 --> 00:22:04,960
the mail inputs and

00:22:02,240 --> 00:22:04,960
replace that

00:22:10,840 --> 00:22:16,400
password

00:22:13,280 --> 00:22:18,799
terms checkbox and we also want

00:22:16,400 --> 00:22:20,320
user not being able to press sign up

00:22:18,799 --> 00:22:24,840
button so we

00:22:20,320 --> 00:22:28,000
say that it's not pressable uh

00:22:24,840 --> 00:22:31,600
disabled while

00:22:28,000 --> 00:22:34,720
uh our form is not yeah doesn't contain

00:22:31,600 --> 00:22:41,039
any valid values

00:22:34,720 --> 00:22:43,120
props is

00:22:41,039 --> 00:22:44,559
well the button is disabled of course

00:22:43,120 --> 00:22:47,440
because we didn't

00:22:44,559 --> 00:22:49,120
input any email and which is required by

00:22:47,440 --> 00:22:51,440
your package which provides

00:22:49,120 --> 00:22:51,440
actually

00:22:52,440 --> 00:22:58,799
a regular expression for our email

00:22:55,600 --> 00:23:00,720
and it's constantly checking it for for

00:22:58,799 --> 00:23:03,919
the value input so that we can see

00:23:00,720 --> 00:23:05,039
the input field change its status to a

00:23:03,919 --> 00:23:08,640
red one

00:23:05,039 --> 00:23:11,600
uh until we enter a valid email so

00:23:08,640 --> 00:23:12,320
right now it's valid it's cool but we

00:23:11,600 --> 00:23:16,320
also

00:23:12,320 --> 00:23:16,320
require to input

00:23:16,799 --> 00:23:23,280
a minimum of eight simple password

00:23:20,720 --> 00:23:24,000
so one two three one two three one two

00:23:23,280 --> 00:23:26,640
eight okay

00:23:24,000 --> 00:23:28,240
that's cool the buttons still be uh

00:23:26,640 --> 00:23:30,799
still disabled because

00:23:28,240 --> 00:23:31,679
we don't accept the terms and conditions

00:23:30,799 --> 00:23:34,960
we press that

00:23:31,679 --> 00:23:36,240
and boom so here we got our phone fully

00:23:34,960 --> 00:23:39,280
validated

00:23:36,240 --> 00:23:41,840
and that's actually how we can integrate

00:23:39,280 --> 00:23:42,400
our ui kitchen components with former so

00:23:41,840 --> 00:23:44,640
just to

00:23:42,400 --> 00:23:46,559
go through all of the steps one more

00:23:44,640 --> 00:23:48,320
time

00:23:46,559 --> 00:23:49,600
we are actually able to use formic

00:23:48,320 --> 00:23:53,039
context

00:23:49,600 --> 00:23:57,120
which defines our

00:23:53,039 --> 00:23:59,520
form values provided with forming

00:23:57,120 --> 00:24:01,120
so why do we need an identifier for a

00:23:59,520 --> 00:24:04,159
field here

00:24:01,120 --> 00:24:06,400
this is because we can accept

00:24:04,159 --> 00:24:08,240
a proper field name through the format

00:24:06,400 --> 00:24:12,000
values because the form of values

00:24:08,240 --> 00:24:15,120
is actually an object and we let's say

00:24:12,000 --> 00:24:17,440
can accept the email field like this

00:24:15,120 --> 00:24:18,240
but since javascript provided us another

00:24:17,440 --> 00:24:21,520
way we can

00:24:18,240 --> 00:24:24,559
accept that through the identifier and

00:24:21,520 --> 00:24:26,559
what we say is uh that our

00:24:24,559 --> 00:24:28,000
input field should have a dangerous

00:24:26,559 --> 00:24:31,520
status

00:24:28,000 --> 00:24:34,640
uh until it's twelve so if formic

00:24:31,520 --> 00:24:36,559
has some errors and

00:24:34,640 --> 00:24:38,799
it errors doesn't apply for a current

00:24:36,559 --> 00:24:41,039
value which is not defined

00:24:38,799 --> 00:24:42,159
then we should make it dangerous and

00:24:41,039 --> 00:24:45,440
then we should also

00:24:42,159 --> 00:24:46,000
display a caption here wait a second in

00:24:45,440 --> 00:24:49,120
this example

00:24:46,000 --> 00:24:52,159
it didn't work because uh

00:24:49,120 --> 00:24:55,360
we manually passed it

00:24:52,159 --> 00:24:58,400
to input so to verify yeah

00:24:55,360 --> 00:25:02,159
formic also uses a caption of

00:24:58,400 --> 00:25:05,120
our ui kitten input field and pass

00:25:02,159 --> 00:25:06,480
the validation error to our caption so

00:25:05,120 --> 00:25:09,919
that's really cool

00:25:06,480 --> 00:25:13,520
and of course we define our own change

00:25:09,919 --> 00:25:16,400
text property to set the current value

00:25:13,520 --> 00:25:17,600
to forming and to make it able to

00:25:16,400 --> 00:25:22,799
validate everything

00:25:17,600 --> 00:25:22,799
once again same applies to our checkbox

00:25:22,880 --> 00:25:27,520
and finally we can make our

00:25:27,840 --> 00:25:31,600
so that's really cool i really like this

00:25:29,919 --> 00:25:34,720
pattern of integrating

00:25:31,600 --> 00:25:35,840
uh ui kitten components to formic i

00:25:34,720 --> 00:25:38,799
actually use this

00:25:35,840 --> 00:25:41,120
in in the production app that i am

00:25:38,799 --> 00:25:43,279
currently working for

00:25:41,120 --> 00:25:45,279
but let me show you another cool feature

00:25:43,279 --> 00:25:48,559
of ui kitten

00:25:45,279 --> 00:25:52,000
uh so since we are able to use

00:25:48,559 --> 00:25:55,200
a theme for that to define the colors

00:25:52,000 --> 00:25:56,559
but what if we can uh we actually want

00:25:55,200 --> 00:26:00,480
to

00:25:56,559 --> 00:26:04,880
define the same way um font family for

00:26:00,480 --> 00:26:08,080
all of the text displays in our app

00:26:04,880 --> 00:26:09,840
it's just quite simple uh we should just

00:26:08,080 --> 00:26:12,960
need to define

00:26:09,840 --> 00:26:16,559
our mapping and say hey

00:26:12,960 --> 00:26:19,039
my thing please use text or font family

00:26:16,559 --> 00:26:19,039
for that

00:26:19,360 --> 00:26:25,520
family and

00:26:22,960 --> 00:26:26,559
i actually have a special phone for that

00:26:25,520 --> 00:26:30,320
which i really love

00:26:26,559 --> 00:26:33,039
sarah and

00:26:30,320 --> 00:26:33,039
yeah just

00:26:34,720 --> 00:26:41,679
yeah so by refreshing our app we see

00:26:38,080 --> 00:26:45,520
that it was applied which is cool

00:26:41,679 --> 00:26:48,720
and how it actually works is

00:26:45,520 --> 00:26:49,679
that our ui kitten connects to metro

00:26:48,720 --> 00:26:52,640
bundler

00:26:49,679 --> 00:26:54,400
and with a simple configuration of our

00:26:52,640 --> 00:26:57,600
app we define the path

00:26:54,400 --> 00:26:59,520
to a custom mapping.json which is

00:26:57,600 --> 00:27:01,840
which was actually used during this

00:26:59,520 --> 00:27:04,320
presentation

00:27:01,840 --> 00:27:04,960
and it's constantly watching for changes

00:27:04,320 --> 00:27:08,080
in

00:27:04,960 --> 00:27:11,200
this magnet.json

00:27:08,080 --> 00:27:14,400
and once it sees that we defined

00:27:11,200 --> 00:27:18,240
our text from family it will apply it

00:27:14,400 --> 00:27:22,880
for all the components used in our app

00:27:18,240 --> 00:27:25,919
of course if we use text from ui

00:27:22,880 --> 00:27:28,320
so another great example would be

00:27:25,919 --> 00:27:30,320
a border radius such as we can also

00:27:28,320 --> 00:27:32,840
define

00:27:30,320 --> 00:27:34,240
border radius that should be used

00:27:32,840 --> 00:27:37,760
globally

00:27:34,240 --> 00:27:41,279
in our app let's say

00:27:37,760 --> 00:27:41,279
let's try and make it eight

00:27:42,000 --> 00:27:49,520
everything is quite grounded let's see

00:27:45,760 --> 00:27:52,640
but let's try magic bigger

00:27:49,520 --> 00:27:53,520
yeah and we also can we can make it

00:27:52,640 --> 00:27:57,279
square

00:27:53,520 --> 00:28:00,559
by passing one well this is

00:27:57,279 --> 00:28:04,559
something that i really like

00:28:00,559 --> 00:28:08,159
well yeah that was about uh

00:28:04,559 --> 00:28:13,039
an example of usage ui kitten

00:28:08,159 --> 00:28:13,039
still yeah

00:28:13,200 --> 00:28:19,039
just to summarize all of that and

00:28:16,320 --> 00:28:20,159
let me explain why do we actually need

00:28:19,039 --> 00:28:23,200
to rely

00:28:20,159 --> 00:28:25,279
in ui keys in our app

00:28:23,200 --> 00:28:26,720
so to answer this question let me show

00:28:25,279 --> 00:28:29,039
you one scription

00:28:26,720 --> 00:28:30,000
of the app that i had the chance to

00:28:29,039 --> 00:28:33,039
build

00:28:30,000 --> 00:28:36,480
for a starter company which specializes

00:28:33,039 --> 00:28:38,640
in medical services and veterinary

00:28:36,480 --> 00:28:40,159
so this is the screenshot of our first

00:28:38,640 --> 00:28:43,919
phase when the app

00:28:40,159 --> 00:28:44,960
get actually released and this is how it

00:28:43,919 --> 00:28:47,440
looks now

00:28:44,960 --> 00:28:48,480
so i had a chance to build that for less

00:28:47,440 --> 00:28:52,399
than two months

00:28:48,480 --> 00:28:54,880
of course for its first iteration and

00:28:52,399 --> 00:28:56,960
now the entire code base contains more

00:28:54,880 --> 00:28:58,960
than 50 screens which is actually really

00:28:56,960 --> 00:29:01,360
cool and

00:28:58,960 --> 00:29:03,360
what did it make it so profitable and

00:29:01,360 --> 00:29:05,520
successful for business to grow

00:29:03,360 --> 00:29:07,520
is that the customer actually didn't

00:29:05,520 --> 00:29:08,799
realize that much from building user

00:29:07,520 --> 00:29:12,799
interfaces

00:29:08,799 --> 00:29:12,799
and it helps us a lot

00:29:13,279 --> 00:29:17,520
to not focus on building user interface

00:29:16,399 --> 00:29:21,200
but

00:29:17,520 --> 00:29:24,880
rely and try to build as much

00:29:21,200 --> 00:29:24,880
business logic as we could that time

00:29:25,039 --> 00:29:31,760
so to summarize

00:29:28,159 --> 00:29:34,399
uh the usage of ui kits and

00:29:31,760 --> 00:29:35,120
relying heavily relying on the design

00:29:34,399 --> 00:29:37,440
rules

00:29:35,120 --> 00:29:39,600
gives us first of all consistent user

00:29:37,440 --> 00:29:42,320
interfaces

00:29:39,600 --> 00:29:43,279
the second by reducing our development

00:29:42,320 --> 00:29:46,399
efforts

00:29:43,279 --> 00:29:48,799
uh we also reduce the cost of frontal

00:29:46,399 --> 00:29:51,600
development for our customers

00:29:48,799 --> 00:29:53,840
and the last one it gives us a

00:29:51,600 --> 00:29:54,320
possibility to focus on the important

00:29:53,840 --> 00:29:57,130
things

00:29:54,320 --> 00:29:58,480
or not just and not just building

00:29:57,130 --> 00:30:02,000
[Music]

00:29:58,480 --> 00:30:05,120
ui blocks yeah so

00:30:02,000 --> 00:30:08,559
well that was it i guess

00:30:05,120 --> 00:30:11,279
thank you for watching i hope uh

00:30:08,559 --> 00:30:12,159
you will build awesome user interfaces

00:30:11,279 --> 00:30:15,919
and i hope you

00:30:12,159 --> 00:30:18,960
really enjoyed the talk and i

00:30:15,919 --> 00:30:20,799
i i could share you much uh as much

00:30:18,960 --> 00:30:22,960
information about every related products

00:30:20,799 --> 00:30:25,360
as i could so

00:30:22,960 --> 00:30:26,720
you can find me on twitter if you want

00:30:25,360 --> 00:30:30,240
it's presented

00:30:26,720 --> 00:30:31,360
and at the slide below at the bottom of

00:30:30,240 --> 00:30:34,240
the slide

00:30:31,360 --> 00:30:34,880
so please approach me if you want and

00:30:34,240 --> 00:30:37,679
yeah

00:30:34,880 --> 00:30:39,039
if you have any questions please write

00:30:37,679 --> 00:30:51,690
them in our chat

00:30:39,039 --> 00:30:57,980
so i can answer them so thank you

00:30:51,690 --> 00:30:57,980
[Music]

00:30:58,480 --> 00:31:02,080
um so yeah thank you arthur that was

00:31:00,640 --> 00:31:04,000
that was great i

00:31:02,080 --> 00:31:05,120
really enjoyed learning more about ui

00:31:04,000 --> 00:31:07,440
kitten uh

00:31:05,120 --> 00:31:08,159
we like especially haven't used it but

00:31:07,440 --> 00:31:10,720
before and

00:31:08,159 --> 00:31:13,039
it's really like i agree that it really

00:31:10,720 --> 00:31:15,039
does speed up things um

00:31:13,039 --> 00:31:17,039
i actually had a quick question from

00:31:15,039 --> 00:31:18,559
myself actually which was um

00:31:17,039 --> 00:31:20,799
what was your favorite component to

00:31:18,559 --> 00:31:23,600
build

00:31:20,799 --> 00:31:25,600
uh you mean the components that we could

00:31:23,600 --> 00:31:27,360
actually import from ui kitten or human

00:31:25,600 --> 00:31:31,519
custom components

00:31:27,360 --> 00:31:33,360
from ui kit well

00:31:31,519 --> 00:31:34,640
i don't really know i prefer building

00:31:33,360 --> 00:31:37,760
really samsung custom

00:31:34,640 --> 00:31:38,480
relying on influence because i just uh

00:31:37,760 --> 00:31:42,080
recently

00:31:38,480 --> 00:31:43,919
realized that at the face of development

00:31:42,080 --> 00:31:47,279
of ui library itself

00:31:43,919 --> 00:31:50,399
we focused that much on making it

00:31:47,279 --> 00:31:51,360
uh making it uh compatible with web

00:31:50,399 --> 00:31:53,840
platform

00:31:51,360 --> 00:31:56,159
so but on the mobile platform it didn't

00:31:53,840 --> 00:31:59,360
really look so nice for example when you

00:31:56,159 --> 00:32:01,039
try to build a complex poll from let's

00:31:59,360 --> 00:32:04,080
say select fields

00:32:01,039 --> 00:32:08,399
uh popovers and things like that because

00:32:04,080 --> 00:32:11,039
it's it's built like with web in mind

00:32:08,399 --> 00:32:11,760
i really prefer this bottom sheet stuff

00:32:11,039 --> 00:32:15,039
you know

00:32:11,760 --> 00:32:16,000
uh when it's much more easier to

00:32:15,039 --> 00:32:19,440
interact with

00:32:16,000 --> 00:32:20,960
on especially on mobile so to answer

00:32:19,440 --> 00:32:24,799
your question

00:32:20,960 --> 00:32:28,080
uh i really like to interact with inputs

00:32:24,799 --> 00:32:30,559
because it's so much configurable and we

00:32:28,080 --> 00:32:32,240
can build so much with that especially

00:32:30,559 --> 00:32:35,200
like auto complete fields

00:32:32,240 --> 00:32:35,919
uh by the way i had uh recently a chance

00:32:35,200 --> 00:32:39,600
to

00:32:35,919 --> 00:32:43,039
make a proper uh field for that so yeah

00:32:39,600 --> 00:32:45,200
i hope i answered that yeah 100

00:32:43,039 --> 00:32:46,080
i i think thank you for the auto

00:32:45,200 --> 00:32:49,519
completes as well

00:32:46,080 --> 00:32:51,600
um i'm sure they'll be very useful um

00:32:49,519 --> 00:32:52,880
i had a question as well if you don't

00:32:51,600 --> 00:32:55,279
mind archer

00:32:52,880 --> 00:32:56,159
um thanks so much for your talk uh is

00:32:55,279 --> 00:32:57,840
really really

00:32:56,159 --> 00:33:00,399
interesting and i'm sure there's a lot

00:32:57,840 --> 00:33:04,080
of people who've learned a lot of stuff

00:33:00,399 --> 00:33:07,279
um the question i had is if i've

00:33:04,080 --> 00:33:08,399
started a project already and i haven't

00:33:07,279 --> 00:33:11,039
used

00:33:08,399 --> 00:33:12,559
eva or ui kitten and suddenly i want to

00:33:11,039 --> 00:33:14,559
use it now

00:33:12,559 --> 00:33:15,840
what's the first thing that i should try

00:33:14,559 --> 00:33:18,159
and implement

00:33:15,840 --> 00:33:20,080
is it the colors is it text is it

00:33:18,159 --> 00:33:23,200
something else

00:33:20,080 --> 00:33:26,159
well the first thing would be actually

00:33:23,200 --> 00:33:27,600
pretty the same so you should go through

00:33:26,159 --> 00:33:29,760
the steps of

00:33:27,600 --> 00:33:32,399
like entertainment style scripts to

00:33:29,760 --> 00:33:34,320
download our ui kitten and evo packages

00:33:32,399 --> 00:33:35,840
the second and most important that you

00:33:34,320 --> 00:33:38,000
should actually wrap

00:33:35,840 --> 00:33:41,840
your entire code base in our application

00:33:38,000 --> 00:33:44,799
provider so that you are able to use

00:33:41,840 --> 00:33:46,080
ui kits and components and styles from

00:33:44,799 --> 00:33:49,760
e1

00:33:46,080 --> 00:33:52,000
and if you want to go next is

00:33:49,760 --> 00:33:53,600
like using your custom branded colors

00:33:52,000 --> 00:33:56,640
you should just define your

00:33:53,600 --> 00:33:59,440
theme like i explained explaining

00:33:56,640 --> 00:34:00,960
in my slice so yeah i would say the

00:33:59,440 --> 00:34:03,519
steps are pretty

00:34:00,960 --> 00:34:05,679
similar for both cases so for both

00:34:03,519 --> 00:34:09,040
scenarios

00:34:05,679 --> 00:34:11,200
amazing thank you um so yeah

00:34:09,040 --> 00:34:12,639
we had a couple of questions from from

00:34:11,200 --> 00:34:14,720
youtube um

00:34:12,639 --> 00:34:16,079
so we could keep firing them in uh we'll

00:34:14,720 --> 00:34:17,200
get to them um

00:34:16,079 --> 00:34:20,000
after we've answered these ones so we've

00:34:17,200 --> 00:34:22,159
got from elias um

00:34:20,000 --> 00:34:23,280
what would be the best way of making the

00:34:22,159 --> 00:34:25,839
theme changeable

00:34:23,280 --> 00:34:26,720
by the user um from i think your

00:34:25,839 --> 00:34:30,000
approach with

00:34:26,720 --> 00:34:32,240
the different themes well

00:34:30,000 --> 00:34:33,119
uh i can be sure accurately purpose so

00:34:32,240 --> 00:34:36,240
could you maybe

00:34:33,119 --> 00:34:39,359
just repeat the question yes sure so

00:34:36,240 --> 00:34:39,839
um with the uh approach you were taking

00:34:39,359 --> 00:34:42,879
with

00:34:39,839 --> 00:34:44,320
the pink colors coming through um what

00:34:42,879 --> 00:34:46,399
would be the best way of making that

00:34:44,320 --> 00:34:49,599
theme changeable by a user

00:34:46,399 --> 00:34:51,440
um like within their application ah yeah

00:34:49,599 --> 00:34:52,720
the run time timing is also of course

00:34:51,440 --> 00:34:55,760
supported so

00:34:52,720 --> 00:34:58,880
once uh of course if you are able to

00:34:55,760 --> 00:35:00,560
like pass the props manually by defining

00:34:58,880 --> 00:35:02,000
by switching like and dark scenes and

00:35:00,560 --> 00:35:06,160
playing around with that

00:35:02,000 --> 00:35:08,079
uh you for sure are able to do that um

00:35:06,160 --> 00:35:09,920
by pressing a button on or things like

00:35:08,079 --> 00:35:13,040
that so for example we

00:35:09,920 --> 00:35:16,079
we can just rely on a hooks logic

00:35:13,040 --> 00:35:19,599
or or things like that so

00:35:16,079 --> 00:35:22,400
basically the way uh you should do that

00:35:19,599 --> 00:35:23,440
or you can you can do that so you should

00:35:22,400 --> 00:35:27,040
just handle

00:35:23,440 --> 00:35:29,280
of course obviously a button press event

00:35:27,040 --> 00:35:31,040
and maybe the second step would be

00:35:29,280 --> 00:35:33,839
savings under

00:35:31,040 --> 00:35:34,960
somewhere or storing the value of a

00:35:33,839 --> 00:35:37,210
currency

00:35:34,960 --> 00:35:38,320
i don't actually prefer um

00:35:37,210 --> 00:35:41,920
[Music]

00:35:38,320 --> 00:35:44,720
like storing the whole uh like

00:35:41,920 --> 00:35:46,880
the entire object of a theme so you

00:35:44,720 --> 00:35:48,640
shouldn't should do that

00:35:46,880 --> 00:35:51,200
but you might actually store an

00:35:48,640 --> 00:35:54,320
identifier for instance saying like

00:35:51,200 --> 00:35:56,320
it's light for now okay but once we

00:35:54,320 --> 00:35:58,240
press the button we could just compare

00:35:56,320 --> 00:36:00,320
this identifier to

00:35:58,240 --> 00:36:02,640
other identifiers so let's say we

00:36:00,320 --> 00:36:07,440
support both black and dark seams

00:36:02,640 --> 00:36:08,400
we just compare our light to dark and if

00:36:07,440 --> 00:36:12,160
it's not dark

00:36:08,400 --> 00:36:15,520
we should just store the dark value

00:36:12,160 --> 00:36:18,640
and yeah and

00:36:15,520 --> 00:36:22,079
other logic is just uh of the it's just

00:36:18,640 --> 00:36:25,040
a question of how you manage the state

00:36:22,079 --> 00:36:25,520
cool yeah that makes a lot of sense um

00:36:25,040 --> 00:36:27,520
so

00:36:25,520 --> 00:36:29,119
the next question is from mobile

00:36:27,520 --> 00:36:32,400
management loyalty platform

00:36:29,119 --> 00:36:34,400
um it's an interesting name but uh um

00:36:32,400 --> 00:36:36,640
how can you add gradient colors to

00:36:34,400 --> 00:36:39,440
patterns

00:36:36,640 --> 00:36:39,680
how can i upgrade the colors of buttons

00:36:39,440 --> 00:36:43,040
to

00:36:39,680 --> 00:36:43,599
gradient cuddle gradients to buttons oh

00:36:43,040 --> 00:36:46,720
yeah

00:36:43,599 --> 00:36:49,280
that's a complex one um to answer that

00:36:46,720 --> 00:36:50,400
i should honestly say that i never had a

00:36:49,280 --> 00:36:54,480
chance to

00:36:50,400 --> 00:36:56,960
like to try it but i guess there is a

00:36:54,480 --> 00:36:58,079
npm package on github called react

00:36:56,960 --> 00:37:01,280
native linear

00:36:58,079 --> 00:37:03,839
gradient or so uh so

00:37:01,280 --> 00:37:05,040
i i really hope that it should work for

00:37:03,839 --> 00:37:08,240
ui kittens so

00:37:05,040 --> 00:37:11,839
to answer this question uh there are two

00:37:08,240 --> 00:37:15,040
ways of how you can like uh change the

00:37:11,839 --> 00:37:15,839
properties of and colors of your arches

00:37:15,040 --> 00:37:18,720
and components

00:37:15,839 --> 00:37:19,280
so for example in this case with button

00:37:18,720 --> 00:37:21,359
uh

00:37:19,280 --> 00:37:23,520
i guess linear guidance could provide

00:37:21,359 --> 00:37:26,640
you something like a hash value or

00:37:23,520 --> 00:37:29,520
sim like this and

00:37:26,640 --> 00:37:31,119
you could actually pass this probe to

00:37:29,520 --> 00:37:32,240
our your kitchen components so for

00:37:31,119 --> 00:37:35,280
example if we

00:37:32,240 --> 00:37:38,800
pass a red car or hashtag color

00:37:35,280 --> 00:37:39,599
so hex color to background property of a

00:37:38,800 --> 00:37:41,920
style

00:37:39,599 --> 00:37:43,760
it will be applied with ui kitten it

00:37:41,920 --> 00:37:46,079
will ignore completing the theme

00:37:43,760 --> 00:37:47,599
of course because we like because the

00:37:46,079 --> 00:37:51,200
user value is more

00:37:47,599 --> 00:37:54,000
important than than team so

00:37:51,200 --> 00:37:56,560
i guess it all will also work with uh

00:37:54,000 --> 00:37:56,560
gradient

00:37:57,200 --> 00:38:00,400
oh yeah yeah i think that would be cool

00:37:59,839 --> 00:38:04,480
to see as

00:38:00,400 --> 00:38:08,160
well um so the next one

00:38:04,480 --> 00:38:10,240
is uh how can you compare

00:38:08,160 --> 00:38:11,680
sorry this is from dante um can you

00:38:10,240 --> 00:38:14,240
compare this ui

00:38:11,680 --> 00:38:17,839
library with the most popular uh native

00:38:14,240 --> 00:38:20,560
uis like native bass and other uis

00:38:17,839 --> 00:38:23,200
network base this is an interesting

00:38:20,560 --> 00:38:26,079
question cell

00:38:23,200 --> 00:38:28,320
well what i would like say to say being

00:38:26,079 --> 00:38:31,359
a maintainer of ui kitten

00:38:28,320 --> 00:38:33,760
is that when i went to

00:38:31,359 --> 00:38:35,839
when i had to build a specific component

00:38:33,760 --> 00:38:40,000
let's say let's go with the simplest one

00:38:35,839 --> 00:38:40,640
a button i of course try to do a basic

00:38:40,000 --> 00:38:43,280
research

00:38:40,640 --> 00:38:44,720
and go through all of the libraries that

00:38:43,280 --> 00:38:47,839
i could find

00:38:44,720 --> 00:38:48,480
and what i dislike about um other

00:38:47,839 --> 00:38:51,520
libraries

00:38:48,480 --> 00:38:54,640
is is that they actually provide

00:38:51,520 --> 00:38:57,200
lots of properties uh for a developer

00:38:54,640 --> 00:39:00,000
and you basically need to go through the

00:38:57,200 --> 00:39:03,200
documentation to find a way that

00:39:00,000 --> 00:39:05,839
to find a way you could actually pass an

00:39:03,200 --> 00:39:06,960
icon to a button or things like that

00:39:05,839 --> 00:39:10,960
because there

00:39:06,960 --> 00:39:13,200
could be a set of properties and

00:39:10,960 --> 00:39:14,079
and they are actually really mixed

00:39:13,200 --> 00:39:17,200
together

00:39:14,079 --> 00:39:20,720
so with ui kits and comparing those uh

00:39:17,200 --> 00:39:24,720
i i actually really like the

00:39:20,720 --> 00:39:27,119
uh the api we provide so in most cases

00:39:24,720 --> 00:39:28,240
for example to pass any component any

00:39:27,119 --> 00:39:30,560
nested component to

00:39:28,240 --> 00:39:32,240
specifically a button you should just

00:39:30,560 --> 00:39:34,800
actually type something like

00:39:32,240 --> 00:39:35,680
accessory accessory left or accessory

00:39:34,800 --> 00:39:38,960
right

00:39:35,680 --> 00:39:40,160
and this logic applies this api applies

00:39:38,960 --> 00:39:42,480
for

00:39:40,160 --> 00:39:43,280
most of our components that we have

00:39:42,480 --> 00:39:46,079
built

00:39:43,280 --> 00:39:48,000
so this is actually what i really like

00:39:46,079 --> 00:39:51,200
uh comparing to

00:39:48,000 --> 00:39:54,720
our api to to libraries

00:39:51,200 --> 00:39:56,880
to other apis from other riders yeah

00:39:54,720 --> 00:39:59,040
so it's the consistencies of your apis

00:39:56,880 --> 00:40:01,040
that really yeah

00:39:59,040 --> 00:40:02,079
and of course that we rely on the design

00:40:01,040 --> 00:40:05,440
system and

00:40:02,079 --> 00:40:06,880
yeah i i know that also react native

00:40:05,440 --> 00:40:10,319
paper is built really cool

00:40:06,880 --> 00:40:12,560
i also like their apis and

00:40:10,319 --> 00:40:14,000
of course they rely on material design

00:40:12,560 --> 00:40:16,480
so yeah

00:40:14,000 --> 00:40:18,160
we could compete with them of course but

00:40:16,480 --> 00:40:19,839
i will not compare that

00:40:18,160 --> 00:40:21,359
because we are running complete

00:40:19,839 --> 00:40:24,880
different design systems

00:40:21,359 --> 00:40:27,760
and i like both actually so uh as i

00:40:24,880 --> 00:40:28,160
mentioned before um i had a chance to

00:40:27,760 --> 00:40:31,280
build

00:40:28,160 --> 00:40:34,800
native mobile applications before and

00:40:31,280 --> 00:40:39,839
i also felt in love with material design

00:40:34,800 --> 00:40:39,839
building android applications so yeah

00:40:39,920 --> 00:40:45,599
yeah i i i'm too a fan of material by

00:40:43,680 --> 00:40:48,800
the way yeah

00:40:45,599 --> 00:40:50,880
and you open them of course yeah yeah

00:40:48,800 --> 00:40:53,280
[Music]

00:40:50,880 --> 00:40:53,920
the the last question that i've got um

00:40:53,280 --> 00:40:55,599
which is

00:40:53,920 --> 00:40:59,520
maybe maybe the most important of the

00:40:55,599 --> 00:41:02,640
evening is can we see the cat

00:40:59,520 --> 00:41:07,680
the cat does

00:41:02,640 --> 00:41:10,160
the yeah do you like it in itself

00:41:07,680 --> 00:41:11,200
yeah sure it's running like in corners

00:41:10,160 --> 00:41:15,760
right here so

00:41:11,200 --> 00:41:15,760
what was it providing sounds yeah so

00:41:16,400 --> 00:41:20,880
sure you can see where you get your

00:41:27,280 --> 00:41:32,880
yeah well yeah thank you asa

00:41:30,800 --> 00:41:35,040
um i think that's all the questions we

00:41:32,880 --> 00:41:37,200
have um but yeah thank you again for the

00:41:35,040 --> 00:41:39,040
great talk and um super interesting like

00:41:37,200 --> 00:41:42,240
journey

00:41:39,040 --> 00:41:44,960
um so yeah now now

00:41:42,240 --> 00:41:47,119
uh we'll go over to arahan speaking

00:41:44,960 --> 00:41:50,319
about his fitness up and

00:41:47,119 --> 00:41:52,480
how he created a better ux

00:41:50,319 --> 00:41:53,839
for his users in a very particular use

00:41:52,480 --> 00:42:02,450
case that

00:41:53,839 --> 00:42:07,520
i know he'll definitely dive into

00:42:02,450 --> 00:42:09,599
[Music]

00:42:07,520 --> 00:42:11,440
hey guys uh thanks for coming to the

00:42:09,599 --> 00:42:13,200
react native meetup today

00:42:11,440 --> 00:42:14,960
my name is arahan and i'd like to talk

00:42:13,200 --> 00:42:15,680
to you guys about building intuitive

00:42:14,960 --> 00:42:18,640
components

00:42:15,680 --> 00:42:19,680
for an interactive fitness app and first

00:42:18,640 --> 00:42:22,160
a little bit about me

00:42:19,680 --> 00:42:23,760
i'm a full stack developer at theater uk

00:42:22,160 --> 00:42:25,599
and we are hiring so if you're watching

00:42:23,760 --> 00:42:27,359
this live or you know remote

00:42:25,599 --> 00:42:29,440
online later at some point on youtube

00:42:27,359 --> 00:42:31,520
maybe i do get in touch

00:42:29,440 --> 00:42:34,079
and i specialize mostly in react react

00:42:31,520 --> 00:42:35,359
native and django as well

00:42:34,079 --> 00:42:37,119
the product that i want to talk to you

00:42:35,359 --> 00:42:38,400
guys about today is slightly different

00:42:37,119 --> 00:42:39,599
from most of the projects that we

00:42:38,400 --> 00:42:41,680
usually do

00:42:39,599 --> 00:42:43,040
and so i'm super excited to get started

00:42:41,680 --> 00:42:45,920
the app in question

00:42:43,040 --> 00:42:47,839
is the my arc fitness app so mark

00:42:45,920 --> 00:42:50,319
fitness is an app for

00:42:47,839 --> 00:42:52,480
fitness content creators or influencers

00:42:50,319 --> 00:42:54,400
and their followers to essentially train

00:42:52,480 --> 00:42:56,720
together in one place

00:42:54,400 --> 00:42:58,079
so as a fitness content creator i can go

00:42:56,720 --> 00:42:59,920
on to the mayak website

00:42:58,079 --> 00:43:02,319
sign up and then create different

00:42:59,920 --> 00:43:04,560
workouts and work out plans for my

00:43:02,319 --> 00:43:06,319
followers and then my followers can then

00:43:04,560 --> 00:43:08,800
download the myoc app

00:43:06,319 --> 00:43:09,839
uh go on go through their select me as

00:43:08,800 --> 00:43:12,560
their favorite trainer

00:43:09,839 --> 00:43:13,599
and then complete workouts in the app

00:43:12,560 --> 00:43:15,520
there's quite a lot of different

00:43:13,599 --> 00:43:17,280
features as well in this app so you know

00:43:15,520 --> 00:43:18,319
a dashboard to track your progress and

00:43:17,280 --> 00:43:20,400
your stats

00:43:18,319 --> 00:43:22,720
there's video tutorials notes and

00:43:20,400 --> 00:43:25,839
there's also a nifty sort of

00:43:22,720 --> 00:43:27,599
rewards based gamified system so that

00:43:25,839 --> 00:43:29,680
premium subscribers can get

00:43:27,599 --> 00:43:31,040
discounts on real world products as they

00:43:29,680 --> 00:43:33,520
complete workouts

00:43:31,040 --> 00:43:35,200
so it's a pretty feature heavy

00:43:33,520 --> 00:43:36,240
feature-rich app with a lot of different

00:43:35,200 --> 00:43:38,560
sort of things

00:43:36,240 --> 00:43:41,040
but the most important part of the app

00:43:38,560 --> 00:43:42,960
is the workout now feature

00:43:41,040 --> 00:43:44,640
so the workout now feature is

00:43:42,960 --> 00:43:46,960
essentially the

00:43:44,640 --> 00:43:48,000
place on the app where users spend most

00:43:46,960 --> 00:43:49,680
of their time

00:43:48,000 --> 00:43:52,319
and this is where they go to to complete

00:43:49,680 --> 00:43:54,640
workouts that the influencer has sort of

00:43:52,319 --> 00:43:57,440
set them so

00:43:54,640 --> 00:43:59,280
here for every sort of uh exercise in a

00:43:57,440 --> 00:44:01,119
workout we have a different screen

00:43:59,280 --> 00:44:03,280
um as you can see on this this video

00:44:01,119 --> 00:44:05,359
that i've just got from their instagram

00:44:03,280 --> 00:44:06,800
and we have the exercise name the number

00:44:05,359 --> 00:44:07,920
of reps and the number of weight

00:44:06,800 --> 00:44:10,720
the amount of weight that you need to

00:44:07,920 --> 00:44:11,520
lift if any and you can have exercises

00:44:10,720 --> 00:44:13,760
that are either

00:44:11,520 --> 00:44:14,640
rep-based or time-based as you can see

00:44:13,760 --> 00:44:16,480
here

00:44:14,640 --> 00:44:18,560
we also take into account any rest time

00:44:16,480 --> 00:44:21,040
that users need to have in between

00:44:18,560 --> 00:44:22,640
exercises or different sets and

00:44:21,040 --> 00:44:23,920
everything is essentially taken care of

00:44:22,640 --> 00:44:26,000
so that you can follow along even if

00:44:23,920 --> 00:44:27,839
you're a complete novice

00:44:26,000 --> 00:44:29,359
when we initially designed the section

00:44:27,839 --> 00:44:31,599
uh this is what it looked like so we

00:44:29,359 --> 00:44:33,839
have the you know exercise name

00:44:31,599 --> 00:44:35,040
reps weight and then the section towards

00:44:33,839 --> 00:44:36,000
the bottom where you can sort of

00:44:35,040 --> 00:44:38,240
navigate and edit

00:44:36,000 --> 00:44:40,319
what you've done and the initial

00:44:38,240 --> 00:44:42,079
feedback wasn't great

00:44:40,319 --> 00:44:43,440
users said that the bottom section

00:44:42,079 --> 00:44:46,480
especially was a little bit

00:44:43,440 --> 00:44:48,319
cluttered the previous button was not

00:44:46,480 --> 00:44:50,560
used very often which kind of

00:44:48,319 --> 00:44:52,079
makes sense in hindsight because you

00:44:50,560 --> 00:44:53,839
wouldn't go back to an exercise that

00:44:52,079 --> 00:44:56,240
you've just done

00:44:53,839 --> 00:44:58,319
it was also prone to accidental taps

00:44:56,240 --> 00:44:58,800
because of the way that users interact

00:44:58,319 --> 00:45:01,440
with the

00:44:58,800 --> 00:45:03,040
with the app so often they'd sort of

00:45:01,440 --> 00:45:04,079
pick up the apps see what they need to

00:45:03,040 --> 00:45:05,680
do

00:45:04,079 --> 00:45:07,119
put down their phone complete the

00:45:05,680 --> 00:45:07,920
exercise and then pick up their phone

00:45:07,119 --> 00:45:10,000
again

00:45:07,920 --> 00:45:12,079
so in between you know successive

00:45:10,000 --> 00:45:14,079
picking up and putting down on the phone

00:45:12,079 --> 00:45:16,000
their fingers could often accidentally

00:45:14,079 --> 00:45:17,280
touch one of these buttons and then sort

00:45:16,000 --> 00:45:19,200
of trigger things that they didn't want

00:45:17,280 --> 00:45:21,760
to be triggered

00:45:19,200 --> 00:45:23,119
so that was another issue the edit mode

00:45:21,760 --> 00:45:25,359
is also pretty unclear

00:45:23,119 --> 00:45:26,720
and it wasn't very intuitive and in fact

00:45:25,359 --> 00:45:29,359
um 40

00:45:26,720 --> 00:45:29,920
of users did not describe the workout in

00:45:29,359 --> 00:45:33,119
our section

00:45:29,920 --> 00:45:34,720
as intuitive and easy to use so this was

00:45:33,119 --> 00:45:36,880
a real problem that we faced

00:45:34,720 --> 00:45:37,839
we knew that other fitness apps did

00:45:36,880 --> 00:45:39,119
something similar

00:45:37,839 --> 00:45:41,119
and had a lot of the same sort of

00:45:39,119 --> 00:45:42,480
buttons of editing and next

00:45:41,119 --> 00:45:44,720
and we really wanted to do something

00:45:42,480 --> 00:45:46,720
different so you know even though we

00:45:44,720 --> 00:45:48,480
took on the feedback and you know we got

00:45:46,720 --> 00:45:50,560
rid of the previous button we

00:45:48,480 --> 00:45:51,839
replaced it with an edit button we got

00:45:50,560 --> 00:45:53,200
rid of the icons

00:45:51,839 --> 00:45:55,200
and before that tried a bunch of

00:45:53,200 --> 00:45:57,599
different icons for edit mode

00:45:55,200 --> 00:45:58,319
we really wanted something quite you

00:45:57,599 --> 00:46:00,079
know stock

00:45:58,319 --> 00:46:01,680
starkly different to what was the

00:46:00,079 --> 00:46:04,000
current state of the art and what we see

00:46:01,680 --> 00:46:05,440
in a lot of a lot of fitness apps

00:46:04,000 --> 00:46:07,680
and to the product team it was super

00:46:05,440 --> 00:46:08,800
important that the myark app was known

00:46:07,680 --> 00:46:12,800
for its intuitive

00:46:08,800 --> 00:46:15,520
easy to use design so for inspiration

00:46:12,800 --> 00:46:17,280
we looked to the principle of

00:46:15,520 --> 00:46:19,520
skeuomorphic design

00:46:17,280 --> 00:46:22,079
so skeuomorphic design is essentially

00:46:19,520 --> 00:46:25,200
the idea of designing ui components

00:46:22,079 --> 00:46:26,319
to mimic the real world so you know a

00:46:25,200 --> 00:46:29,599
great example of this

00:46:26,319 --> 00:46:32,160
is the ui that came out the very first

00:46:29,599 --> 00:46:34,560
iphone and first few iphones as you can

00:46:32,160 --> 00:46:37,200
see all the icons on the left

00:46:34,560 --> 00:46:38,000
have shadows and reflections and look

00:46:37,200 --> 00:46:41,119
beveled

00:46:38,000 --> 00:46:43,119
and kind of replicate real life buttons

00:46:41,119 --> 00:46:44,960
and i think in addition to this as you

00:46:43,119 --> 00:46:47,040
clicked on these the phone could

00:46:44,960 --> 00:46:48,880
you know maybe vibrate or have a sort of

00:46:47,040 --> 00:46:50,560
click or a different kind of sound

00:46:48,880 --> 00:46:52,319
to basically feed back to users that

00:46:50,560 --> 00:46:55,040
they were actually clicking on buttons

00:46:52,319 --> 00:46:55,440
and this was super useful because during

00:46:55,040 --> 00:46:56,960
the time

00:46:55,440 --> 00:46:59,040
the first you know iphone and

00:46:56,960 --> 00:46:59,440
smartphones came out people were moving

00:46:59,040 --> 00:47:01,440
from

00:46:59,440 --> 00:47:03,040
having a lot of buttons and having that

00:47:01,440 --> 00:47:05,680
sort of tactile feedback

00:47:03,040 --> 00:47:07,359
to just tapping things on a glass screen

00:47:05,680 --> 00:47:09,440
so this is where you know skeuomorphic

00:47:07,359 --> 00:47:12,720
design really helped people

00:47:09,440 --> 00:47:15,119
to navigate ios devices especially

00:47:12,720 --> 00:47:16,960
and of course over time as people got

00:47:15,119 --> 00:47:18,319
used to you know tapping buttons and

00:47:16,960 --> 00:47:20,400
using

00:47:18,319 --> 00:47:21,839
smartphones we moved back to a sort of

00:47:20,400 --> 00:47:23,520
flat design that you see on the right

00:47:21,839 --> 00:47:26,000
hand side where there's a lot less

00:47:23,520 --> 00:47:26,559
you know shine and bevel and things like

00:47:26,000 --> 00:47:28,000
that

00:47:26,559 --> 00:47:30,079
and i think you know a particular

00:47:28,000 --> 00:47:30,880
example of this is the well i think that

00:47:30,079 --> 00:47:32,319
the biggest

00:47:30,880 --> 00:47:34,240
you know difference between the two

00:47:32,319 --> 00:47:36,800
sides is probably the instagram app

00:47:34,240 --> 00:47:38,480
if anybody remembers what the instagram

00:47:36,800 --> 00:47:40,160
icon used to look like

00:47:38,480 --> 00:47:42,160
on the left we literally have you know a

00:47:40,160 --> 00:47:44,559
3d logo of a sort of

00:47:42,160 --> 00:47:46,480
camera and then on the right it's just

00:47:44,559 --> 00:47:48,400
completely abstracted away

00:47:46,480 --> 00:47:50,400
and i think you know for for the time i

00:47:48,400 --> 00:47:53,119
think both these logos are pretty good

00:47:50,400 --> 00:47:56,079
for what they wanted to achieve another

00:47:53,119 --> 00:47:57,520
example of skeuomorphic design which i

00:47:56,079 --> 00:47:59,760
having talked about i absolutely

00:47:57,520 --> 00:48:02,000
couldn't pass up on describing

00:47:59,760 --> 00:48:03,040
is logic pro x's interface for

00:48:02,000 --> 00:48:06,240
instruments

00:48:03,040 --> 00:48:08,079
so logic pro is a software that

00:48:06,240 --> 00:48:09,599
musicians can use to produce music

00:48:08,079 --> 00:48:11,119
and of course you can select a range of

00:48:09,599 --> 00:48:11,920
different instruments on there and the

00:48:11,119 --> 00:48:13,839
amazing thing is

00:48:11,920 --> 00:48:15,680
if you select an organ and you know this

00:48:13,839 --> 00:48:17,040
this works with a few other instruments

00:48:15,680 --> 00:48:18,800
on there and you want to change the

00:48:17,040 --> 00:48:19,359
settings of this device you actually

00:48:18,800 --> 00:48:21,520
come up

00:48:19,359 --> 00:48:23,200
with an interface that looks like an

00:48:21,520 --> 00:48:24,240
actual organ that you can sort of change

00:48:23,200 --> 00:48:26,079
things on

00:48:24,240 --> 00:48:27,760
and i have an example of it here which

00:48:26,079 --> 00:48:29,680
is pretty cool so as you can see

00:48:27,760 --> 00:48:32,000
i can change the dial up and down as i

00:48:29,680 --> 00:48:34,000
want you know toggle switches

00:48:32,000 --> 00:48:35,839
and you know changed a lot of the other

00:48:34,000 --> 00:48:37,760
settings uh as i wish

00:48:35,839 --> 00:48:39,520
and i'm not a professional organ player

00:48:37,760 --> 00:48:40,880
at all um so i don't really know what

00:48:39,520 --> 00:48:43,520
i'm doing here but

00:48:40,880 --> 00:48:45,040
you can see how if you were a organ

00:48:43,520 --> 00:48:46,400
player who had played for quite a while

00:48:45,040 --> 00:48:47,119
and wanted to move into the digital

00:48:46,400 --> 00:48:48,880
space

00:48:47,119 --> 00:48:50,720
this would be incredibly easy and

00:48:48,880 --> 00:48:52,559
intuitive for you to pick up

00:48:50,720 --> 00:48:54,240
and so this is the kind of thing that we

00:48:52,559 --> 00:48:56,160
really wanted to replicate

00:48:54,240 --> 00:48:57,280
going forward for our specific

00:48:56,160 --> 00:49:00,319
application

00:48:57,280 --> 00:49:01,440
what we looked at was the very very

00:49:00,319 --> 00:49:04,160
original

00:49:01,440 --> 00:49:05,760
ios lock screen where we have this slide

00:49:04,160 --> 00:49:06,559
to unlock feature which i think is you

00:49:05,760 --> 00:49:08,720
know one

00:49:06,559 --> 00:49:10,079
one of the you know original iconic

00:49:08,720 --> 00:49:10,880
designs that i think we all probably

00:49:10,079 --> 00:49:13,359
remember

00:49:10,880 --> 00:49:14,880
so with this slide to unlock feature you

00:49:13,359 --> 00:49:16,960
have the text that tells you to

00:49:14,880 --> 00:49:18,960
slide to unlock something and you also

00:49:16,960 --> 00:49:20,319
have the lovely sort of springy feel

00:49:18,960 --> 00:49:22,160
because if you don't unlock

00:49:20,319 --> 00:49:24,000
you know if you don't slide all the way

00:49:22,160 --> 00:49:24,960
it springs back and if you get to a

00:49:24,000 --> 00:49:27,040
certain point

00:49:24,960 --> 00:49:29,359
then we have the click sound if people

00:49:27,040 --> 00:49:31,839
remember that then unlocks the iphone

00:49:29,359 --> 00:49:33,119
and then you can get in so we wanted to

00:49:31,839 --> 00:49:34,559
implement something like this

00:49:33,119 --> 00:49:36,400
that would give users the field that

00:49:34,559 --> 00:49:38,000
they were unlocking each exercise as

00:49:36,400 --> 00:49:40,240
they went on to the next

00:49:38,000 --> 00:49:42,240
but it was also super important to the

00:49:40,240 --> 00:49:43,119
product team that users could just as

00:49:42,240 --> 00:49:45,680
easily edit

00:49:43,119 --> 00:49:46,640
any exercises that they were currently

00:49:45,680 --> 00:49:48,000
doing

00:49:46,640 --> 00:49:49,680
because it was super important to them

00:49:48,000 --> 00:49:51,440
to have you know accurate data and have

00:49:49,680 --> 00:49:53,359
users be able to accurately track

00:49:51,440 --> 00:49:55,680
their own progress what we essentially

00:49:53,359 --> 00:49:57,920
wanted was a slider that slid

00:49:55,680 --> 00:50:00,240
both ways and that's where the double

00:49:57,920 --> 00:50:02,000
slider component sort of came in

00:50:00,240 --> 00:50:03,760
so you can slide to the left to then

00:50:02,000 --> 00:50:05,440
toggle edit mode and change things

00:50:03,760 --> 00:50:07,359
on the app and then you can slide to the

00:50:05,440 --> 00:50:10,079
right um to you know

00:50:07,359 --> 00:50:11,920
go on to the next next exercise and you

00:50:10,079 --> 00:50:13,359
know what was great about this is it had

00:50:11,920 --> 00:50:15,359
an intuitive design

00:50:13,359 --> 00:50:16,960
it had the helper text as well that you

00:50:15,359 --> 00:50:17,920
can see with the save and the next or

00:50:16,960 --> 00:50:19,599
the edit

00:50:17,920 --> 00:50:21,200
it followed the principles of

00:50:19,599 --> 00:50:23,040
skeuomorphic design

00:50:21,200 --> 00:50:24,720
and my personal favorite it didn't

00:50:23,040 --> 00:50:26,400
involve any buttons

00:50:24,720 --> 00:50:28,160
so there was not the classic you know

00:50:26,400 --> 00:50:30,000
edit button or the next button that we

00:50:28,160 --> 00:50:32,000
see on a lot of other fitness apps

00:50:30,000 --> 00:50:33,839
once the design was initially done and

00:50:32,000 --> 00:50:35,599
we agreed on it we started to look

00:50:33,839 --> 00:50:37,280
online to see if we could find anything

00:50:35,599 --> 00:50:38,079
in terms of pre-built components that

00:50:37,280 --> 00:50:39,760
existed

00:50:38,079 --> 00:50:41,760
and we couldn't find anything uh for

00:50:39,760 --> 00:50:44,960
this double slider specifically

00:50:41,760 --> 00:50:45,359
so we decided to make our own now on top

00:50:44,960 --> 00:50:48,240
of this

00:50:45,359 --> 00:50:49,200
uh speed was a priority we were you know

00:50:48,240 --> 00:50:51,440
really

00:50:49,200 --> 00:50:53,040
prioritizing getting quick feedback and

00:50:51,440 --> 00:50:55,440
iterating in

00:50:53,040 --> 00:50:56,480
feedback circles kind of quickly so the

00:50:55,440 --> 00:50:59,760
team went

00:50:56,480 --> 00:51:01,760
to use a library that they were very

00:50:59,760 --> 00:51:04,079
familiar with which is the react native

00:51:01,760 --> 00:51:05,680
animated library which is inbuilt and

00:51:04,079 --> 00:51:09,119
comes out of the package with

00:51:05,680 --> 00:51:09,920
react native have a look at some code

00:51:09,119 --> 00:51:12,160
examples

00:51:09,920 --> 00:51:14,480
to start off with we just needed to set

00:51:12,160 --> 00:51:17,040
up our container and our toggles so

00:51:14,480 --> 00:51:18,000
the container i'll refer to as this sort

00:51:17,040 --> 00:51:19,839
of gray pill

00:51:18,000 --> 00:51:22,079
that you see in the background and then

00:51:19,839 --> 00:51:23,440
the toggle is this purple circular item

00:51:22,079 --> 00:51:24,240
that you can you know scroll back and

00:51:23,440 --> 00:51:26,559
forth

00:51:24,240 --> 00:51:27,680
um there's not too much special going on

00:51:26,559 --> 00:51:29,040
in terms of code here

00:51:27,680 --> 00:51:31,359
but it's just there so that you guys

00:51:29,040 --> 00:51:33,520
know as i refer to the container and the

00:51:31,359 --> 00:51:35,359
toggle that's what i'm referring to

00:51:33,520 --> 00:51:38,319
the next step is when we start to get

00:51:35,359 --> 00:51:40,400
the animations in

00:51:38,319 --> 00:51:41,760
with the react natives animated library

00:51:40,400 --> 00:51:42,640
there's two things that you need to set

00:51:41,760 --> 00:51:45,280
up

00:51:42,640 --> 00:51:47,200
you know generically for any animation

00:51:45,280 --> 00:51:49,200
one is an animated value

00:51:47,200 --> 00:51:50,880
some sort of value that changes as the

00:51:49,200 --> 00:51:55,119
ui thread renders

00:51:50,880 --> 00:51:57,359
and two is a panhandler or some sort of

00:51:55,119 --> 00:51:58,960
gesture responder so something that

00:51:57,359 --> 00:52:02,400
essentially can

00:51:58,960 --> 00:52:05,520
you know track taps or can trigger

00:52:02,400 --> 00:52:06,240
handlers that can track as you tap on a

00:52:05,520 --> 00:52:07,760
screen

00:52:06,240 --> 00:52:09,599
and then feed that back to you know

00:52:07,760 --> 00:52:11,520
whatever component you need to

00:52:09,599 --> 00:52:13,119
so we have the animation setup for this

00:52:11,520 --> 00:52:14,400
and then we sort of implement it in the

00:52:13,119 --> 00:52:15,760
component

00:52:14,400 --> 00:52:18,240
so let's have a look at the animation

00:52:15,760 --> 00:52:19,680
setup first so as i mentioned you set up

00:52:18,240 --> 00:52:21,359
an animated value

00:52:19,680 --> 00:52:23,440
and then you set up this pan responder

00:52:21,359 --> 00:52:25,200
as well and you know most interesting

00:52:23,440 --> 00:52:27,200
part this pan responder here

00:52:25,200 --> 00:52:29,520
is the on pan responder move and the on

00:52:27,200 --> 00:52:31,520
pan respond to release functions

00:52:29,520 --> 00:52:32,960
so as the pan responder moves we have

00:52:31,520 --> 00:52:35,280
access to this gesture state which

00:52:32,960 --> 00:52:37,440
essentially tells us how far the

00:52:35,280 --> 00:52:39,280
thumb or finger press travels in all

00:52:37,440 --> 00:52:39,839
directions and we've taken the dx value

00:52:39,280 --> 00:52:41,839
here

00:52:39,839 --> 00:52:43,760
and we set it to this animation value

00:52:41,839 --> 00:52:45,839
every time the pan responder moves

00:52:43,760 --> 00:52:47,520
so so for every frame that it moves and

00:52:45,839 --> 00:52:48,079
then we have the onpan responder release

00:52:47,520 --> 00:52:49,440
function

00:52:48,079 --> 00:52:51,200
which is triggered you know as you

00:52:49,440 --> 00:52:52,880
guessed when you let go of the pan

00:52:51,200 --> 00:52:55,440
responder and your thumb press

00:52:52,880 --> 00:52:56,880
or finger press uh comes off the screen

00:52:55,440 --> 00:52:58,640
when this happens we want to set this

00:52:56,880 --> 00:53:00,559
value back to zero which is where we

00:52:58,640 --> 00:53:02,880
initialized it as

00:53:00,559 --> 00:53:04,000
plan is to use this value to replicate

00:53:02,880 --> 00:53:05,599
the x position

00:53:04,000 --> 00:53:07,839
of the toggle as you move it left and

00:53:05,599 --> 00:53:09,280
right we also have this use native

00:53:07,839 --> 00:53:11,920
driver true

00:53:09,280 --> 00:53:13,200
option that we pass into the config as

00:53:11,920 --> 00:53:15,040
some of you probably know

00:53:13,200 --> 00:53:16,800
react native runs on two different

00:53:15,040 --> 00:53:20,000
threads the javascript thread

00:53:16,800 --> 00:53:21,920
and ui thread the javascript thread is

00:53:20,000 --> 00:53:23,280
usually used for all the main vendors

00:53:21,920 --> 00:53:23,760
and the sort of logic that you have in

00:53:23,280 --> 00:53:25,440
the app

00:53:23,760 --> 00:53:27,119
and the ui thread is used for the

00:53:25,440 --> 00:53:29,280
animations mostly i mean

00:53:27,119 --> 00:53:30,480
i'm abstracting here but generally

00:53:29,280 --> 00:53:33,040
that's what it is

00:53:30,480 --> 00:53:34,160
and um using use native driver equals

00:53:33,040 --> 00:53:36,240
true means that

00:53:34,160 --> 00:53:37,520
all the animation logic can be run on

00:53:36,240 --> 00:53:38,800
this ui thread so it makes your

00:53:37,520 --> 00:53:40,960
animations performant

00:53:38,800 --> 00:53:42,160
essentially and one of the drawbacks of

00:53:40,960 --> 00:53:44,559
this is you can't always

00:53:42,160 --> 00:53:46,240
have use native driver true for

00:53:44,559 --> 00:53:47,440
everything and i think you can for this

00:53:46,240 --> 00:53:50,319
animated spring function

00:53:47,440 --> 00:53:51,839
but not for pan responder functions um

00:53:50,319 --> 00:53:53,599
and so you know that's a whole different

00:53:51,839 --> 00:53:54,319
talk as to which animation library is

00:53:53,599 --> 00:53:56,400
the best

00:53:54,319 --> 00:53:57,359
but um for now that's what use native

00:53:56,400 --> 00:53:59,359
driver does

00:53:57,359 --> 00:54:00,720
next we have the component setup for

00:53:59,359 --> 00:54:03,280
this interactive toggle

00:54:00,720 --> 00:54:03,920
we essentially take the pan responders

00:54:03,280 --> 00:54:05,680
handlers

00:54:03,920 --> 00:54:07,359
and we pass it into this animated view

00:54:05,680 --> 00:54:09,680
object that we can wrap around

00:54:07,359 --> 00:54:11,839
our toggle component and then we take

00:54:09,680 --> 00:54:13,839
the animation value that we had defined

00:54:11,839 --> 00:54:15,119
and pass it into the translate x

00:54:13,839 --> 00:54:18,400
attribute

00:54:15,119 --> 00:54:19,359
which then transforms the toggle to move

00:54:18,400 --> 00:54:21,599
left and right

00:54:19,359 --> 00:54:22,960
as you press left and right and drag

00:54:21,599 --> 00:54:25,119
left and right i should say

00:54:22,960 --> 00:54:27,599
on the screen so that's how we get the

00:54:25,119 --> 00:54:31,839
basic animation of the double sliding

00:54:27,599 --> 00:54:33,520
spring next we have the text opacity

00:54:31,839 --> 00:54:35,440
as you can see there's this edit and

00:54:33,520 --> 00:54:37,599
next text that we have

00:54:35,440 --> 00:54:38,960
that obviously tells users how to slide

00:54:37,599 --> 00:54:42,160
in terms of editing and

00:54:38,960 --> 00:54:44,240
going to the next and what we wanted was

00:54:42,160 --> 00:54:45,760
uh as you scrolled that this text

00:54:44,240 --> 00:54:46,559
disappeared because we didn't think it

00:54:45,760 --> 00:54:50,160
would be a great

00:54:46,559 --> 00:54:52,799
ui sort of functionality to have

00:54:50,160 --> 00:54:53,839
toggles sliding over some text that you

00:54:52,799 --> 00:54:56,400
could still see and

00:54:53,839 --> 00:54:58,160
still read so once again we first set up

00:54:56,400 --> 00:54:59,680
the animation and then we implement it

00:54:58,160 --> 00:55:01,839
in a component

00:54:59,680 --> 00:55:03,680
this time the animation setup again

00:55:01,839 --> 00:55:05,359
involves an animated value

00:55:03,680 --> 00:55:07,680
but the functions are slightly different

00:55:05,359 --> 00:55:09,359
we have this on-pan responder grant

00:55:07,680 --> 00:55:11,119
so this is triggered every time you tap

00:55:09,359 --> 00:55:12,079
on the pan responder or the toggle in

00:55:11,119 --> 00:55:13,680
this instance

00:55:12,079 --> 00:55:15,839
and we want to set this value of label

00:55:13,680 --> 00:55:17,440
opacity to zero and then

00:55:15,839 --> 00:55:19,520
when we release the pan responder we

00:55:17,440 --> 00:55:21,440
want to set the value back to one

00:55:19,520 --> 00:55:23,440
and as you can see with these functions

00:55:21,440 --> 00:55:25,200
we couldn't use the native driver which

00:55:23,440 --> 00:55:26,559
is why the native driver has been set to

00:55:25,200 --> 00:55:30,079
false

00:55:26,559 --> 00:55:31,839
it's just a a gotcha of the library

00:55:30,079 --> 00:55:34,000
then we've got the component setup where

00:55:31,839 --> 00:55:35,520
we use this animated text

00:55:34,000 --> 00:55:37,599
component that you can again get from

00:55:35,520 --> 00:55:39,119
the react native animated library

00:55:37,599 --> 00:55:41,280
and this time we pass in the label

00:55:39,119 --> 00:55:44,240
opacity to the opacity attribute

00:55:41,280 --> 00:55:46,079
of the text so then as we tap on the

00:55:44,240 --> 00:55:47,040
toggle the text becomes transparent and

00:55:46,079 --> 00:55:48,960
then as we release

00:55:47,040 --> 00:55:50,079
our hand the text becomes opaque once

00:55:48,960 --> 00:55:52,000
again and you can see it

00:55:50,079 --> 00:55:53,599
finally we've got this extra descriptive

00:55:52,000 --> 00:55:55,680
text that we also wanted

00:55:53,599 --> 00:55:57,040
so you can see it says next exercise or

00:55:55,680 --> 00:55:58,640
edit exercise

00:55:57,040 --> 00:56:01,359
and essentially what we want to do with

00:55:58,640 --> 00:56:03,920
this is couple the transparency of the

00:56:01,359 --> 00:56:05,680
text to the x position of the toggle as

00:56:03,920 --> 00:56:07,839
you slid it back and forth

00:56:05,680 --> 00:56:09,760
so for this we needed to use the

00:56:07,839 --> 00:56:13,040
interplay function provided by

00:56:09,760 --> 00:56:15,119
react natives animation library and this

00:56:13,040 --> 00:56:18,079
interplay function here as you can see

00:56:15,119 --> 00:56:19,440
essentially takes one animated value

00:56:18,079 --> 00:56:21,359
takes the

00:56:19,440 --> 00:56:22,880
current value that it is and maps it to

00:56:21,359 --> 00:56:24,799
another animated value

00:56:22,880 --> 00:56:27,280
so here we're mapping the animation

00:56:24,799 --> 00:56:29,520
value to the left text opacity

00:56:27,280 --> 00:56:31,040
and here we're mapping the you know same

00:56:29,520 --> 00:56:32,160
animation value to the right text

00:56:31,040 --> 00:56:34,079
opacity

00:56:32,160 --> 00:56:35,599
what we're essentially saying is as this

00:56:34,079 --> 00:56:39,040
value goes between 0

00:56:35,599 --> 00:56:41,359
and 75 of half the slider width so that

00:56:39,040 --> 00:56:43,280
would be at the rightmost position

00:56:41,359 --> 00:56:44,559
we want the left text opacity to go from

00:56:43,280 --> 00:56:46,319
zero to one

00:56:44,559 --> 00:56:47,920
which essentially means as we slide to

00:56:46,319 --> 00:56:49,440
the right we make sure that we can see

00:56:47,920 --> 00:56:51,200
the text on the left

00:56:49,440 --> 00:56:52,880
and then we have the exact opposite here

00:56:51,200 --> 00:56:54,319
which is as we slide to the left

00:56:52,880 --> 00:56:56,640
make sure that we can see the text on

00:56:54,319 --> 00:56:58,240
the right once we've got that we can

00:56:56,640 --> 00:56:59,359
take the left and right text opacity

00:56:58,240 --> 00:57:01,359
values and again

00:56:59,359 --> 00:57:03,280
as we've just done before pass it into

00:57:01,359 --> 00:57:04,079
the opacity attribute of an animated

00:57:03,280 --> 00:57:05,599
text

00:57:04,079 --> 00:57:07,599
style it accordingly so that it's in the

00:57:05,599 --> 00:57:10,240
right position and then we've got this

00:57:07,599 --> 00:57:11,040
ready to go there's also a few other

00:57:10,240 --> 00:57:12,880
things that we

00:57:11,040 --> 00:57:14,400
did and we chose to implement so there

00:57:12,880 --> 00:57:15,839
were toasts at the top that let you know

00:57:14,400 --> 00:57:18,480
when edit mode is on

00:57:15,839 --> 00:57:20,559
obviously toggling edit mode itself and

00:57:18,480 --> 00:57:22,720
also some circles that let you know

00:57:20,559 --> 00:57:24,160
where to swipe to because obviously if

00:57:22,720 --> 00:57:26,480
you don't swipe all the way

00:57:24,160 --> 00:57:28,160
then you don't get uh you don't get to

00:57:26,480 --> 00:57:30,319
you know toggle each

00:57:28,160 --> 00:57:31,280
trigger putting this all together we

00:57:30,319 --> 00:57:32,880
finally had

00:57:31,280 --> 00:57:34,480
the final component which looks

00:57:32,880 --> 00:57:36,160
something like this um

00:57:34,480 --> 00:57:38,079
so you swipe to the left and you can

00:57:36,160 --> 00:57:39,520
edit the exercise you have the toast

00:57:38,079 --> 00:57:40,960
that comes up at the top that tells you

00:57:39,520 --> 00:57:42,720
the edit mode is on

00:57:40,960 --> 00:57:44,240
you can toggle uh so you can use the

00:57:42,720 --> 00:57:45,680
plus and minus buttons to change how

00:57:44,240 --> 00:57:46,799
much weight you lifted and then once

00:57:45,680 --> 00:57:48,880
you're done click next

00:57:46,799 --> 00:57:50,640
to go on to the next exercise and your

00:57:48,880 --> 00:57:53,040
changes are saved as well

00:57:50,640 --> 00:57:54,400
once we implemented all of this as

00:57:53,040 --> 00:57:55,599
required i think over the course of a

00:57:54,400 --> 00:57:57,599
few days

00:57:55,599 --> 00:57:58,720
we went out and did beta testing with

00:57:57,599 --> 00:58:01,920
the same users

00:57:58,720 --> 00:58:03,760
and it was great to see that 90 of the

00:58:01,920 --> 00:58:05,359
users now actually reported the workout

00:58:03,760 --> 00:58:08,079
now section as intuitive

00:58:05,359 --> 00:58:10,000
and super easy to use and i think every

00:58:08,079 --> 00:58:12,799
user even those who didn't list

00:58:10,000 --> 00:58:14,480
uh the workout now is super intuitive uh

00:58:12,799 --> 00:58:15,760
said that they really really like slider

00:58:14,480 --> 00:58:17,119
and it's one of the main attractions

00:58:15,760 --> 00:58:19,599
that they had at the app

00:58:17,119 --> 00:58:21,200
and to be honest i i kind of see why

00:58:19,599 --> 00:58:22,319
that might be and you know maybe i'm a

00:58:21,200 --> 00:58:24,480
little bit biased

00:58:22,319 --> 00:58:26,480
but um swiping left and right as you

00:58:24,480 --> 00:58:27,760
complete exercises or as you you know

00:58:26,480 --> 00:58:29,760
want to track your progress more

00:58:27,760 --> 00:58:31,359
accurately uh is a is a really good

00:58:29,760 --> 00:58:33,280
feeling for users to be able to sort of

00:58:31,359 --> 00:58:35,119
unlock the next exercise

00:58:33,280 --> 00:58:36,480
so that was the reason behind it and

00:58:35,119 --> 00:58:38,000
that's what we did

00:58:36,480 --> 00:58:39,760
and that's how we essentially tackled

00:58:38,000 --> 00:58:40,240
the problem of making the workout now

00:58:39,760 --> 00:58:42,559
section

00:58:40,240 --> 00:58:44,240
of the myofitness app intuitive and easy

00:58:42,559 --> 00:58:45,920
to use thank you so much for listening

00:58:44,240 --> 00:58:51,839
and i'd be happy to take any questions

00:58:45,920 --> 00:58:51,839
that you might have

00:59:00,240 --> 00:59:03,440
um yeah thank you thank you for that

00:59:02,799 --> 00:59:05,760
great

00:59:03,440 --> 00:59:06,559
um particularly enjoyed like the story

00:59:05,760 --> 00:59:08,640
of

00:59:06,559 --> 00:59:10,079
not only that you improved it but you

00:59:08,640 --> 00:59:13,599
noticed there was a problem with how

00:59:10,079 --> 00:59:16,000
you how you found um like probably areas

00:59:13,599 --> 00:59:20,240
in your application that you could

00:59:16,000 --> 00:59:23,280
actually help users to use your app

00:59:20,240 --> 00:59:26,559
they're one of a better word um i

00:59:23,280 --> 00:59:28,160
uh particularly um

00:59:26,559 --> 00:59:30,319
i wanted to ask one question which was

00:59:28,160 --> 00:59:32,000
like um are there any refinements you'd

00:59:30,319 --> 00:59:35,280
be looking to make in the future

00:59:32,000 --> 00:59:38,319
for your for your slider sure

00:59:35,280 --> 00:59:39,200
um not at all thank you thank you for

00:59:38,319 --> 00:59:42,240
having me

00:59:39,200 --> 00:59:44,400
um so uh yeah

00:59:42,240 --> 00:59:46,160
obviously as i mentioned during the talk

00:59:44,400 --> 00:59:48,400
we had some time constraints

00:59:46,160 --> 00:59:49,760
and we really wanted to build things you

00:59:48,400 --> 00:59:51,920
know quickly

00:59:49,760 --> 00:59:53,200
get user feedback build the next part

00:59:51,920 --> 00:59:56,240
and move on

00:59:53,200 --> 00:59:58,480
um but in terms of improvements

00:59:56,240 --> 01:00:00,400
probably the first thing that we could

00:59:58,480 --> 01:00:01,200
do is in terms of the animation

01:00:00,400 --> 01:00:04,799
libraries

01:00:01,200 --> 01:00:07,040
used so we used the animated

01:00:04,799 --> 01:00:08,000
library the name of the library is

01:00:07,040 --> 01:00:09,280
animated

01:00:08,000 --> 01:00:12,160
and it's come straight from the

01:00:09,280 --> 01:00:14,880
activated and it's great

01:00:12,160 --> 01:00:15,839
for most things and getting things built

01:00:14,880 --> 01:00:19,280
fast

01:00:15,839 --> 01:00:21,920
but um if you want to have

01:00:19,280 --> 01:00:23,680
a few more high-performing animations

01:00:21,920 --> 01:00:25,440
and a lot of them especially

01:00:23,680 --> 01:00:26,799
then there's a great library called

01:00:25,440 --> 01:00:28,480
reanimated

01:00:26,799 --> 01:00:30,880
it's a little bit confusing because it

01:00:28,480 --> 01:00:32,799
sounds almost exactly the same

01:00:30,880 --> 01:00:34,799
um but there's a library called

01:00:32,799 --> 01:00:38,480
reanimated and i think they have a

01:00:34,799 --> 01:00:41,200
version two of it out now reanimated too

01:00:38,480 --> 01:00:43,359
the syntax is a little difficult to

01:00:41,200 --> 01:00:45,359
understand at first but after you've

01:00:43,359 --> 01:00:46,400
you know had a go at their examples and

01:00:45,359 --> 01:00:48,880
tutorials

01:00:46,400 --> 01:00:49,920
uh you can build pretty much the exact

01:00:48,880 --> 01:00:53,280
same thing

01:00:49,920 --> 01:00:54,720
uh but far more formal performance

01:00:53,280 --> 01:00:56,680
which obviously means once you start

01:00:54,720 --> 01:00:57,839
scaling once you start having more

01:00:56,680 --> 01:01:01,200
complicated

01:00:57,839 --> 01:01:02,640
animations uh you can still kind of run

01:01:01,200 --> 01:01:04,799
everything alongside your

01:01:02,640 --> 01:01:06,319
your logic without really having any

01:01:04,799 --> 01:01:08,640
issues

01:01:06,319 --> 01:01:09,680
so yeah that's you know where we'd go

01:01:08,640 --> 01:01:12,079
next is probably

01:01:09,680 --> 01:01:13,920
you know apart from building out new

01:01:12,079 --> 01:01:17,280
features and maybe making

01:01:13,920 --> 01:01:19,920
uh implementing uh ui kitten maybe

01:01:17,280 --> 01:01:20,480
uh apart from that i think we'd go for a

01:01:19,920 --> 01:01:22,640
for

01:01:20,480 --> 01:01:23,680
uh rebuilding the the entire feature and

01:01:22,640 --> 01:01:26,960
reanimated

01:01:23,680 --> 01:01:26,960
which would make it more performant

01:01:27,839 --> 01:01:31,680
hope that answers your question yeah

01:01:30,000 --> 01:01:34,240
absolutely um

01:01:31,680 --> 01:01:34,799
we could also maybe see how text as well

01:01:34,240 --> 01:01:37,520
um

01:01:34,799 --> 01:01:39,359
actually it's part of the skill morphic

01:01:37,520 --> 01:01:42,880
design you were talking about

01:01:39,359 --> 01:01:43,680
um but yeah performances performance is

01:01:42,880 --> 01:01:45,599
always the

01:01:43,680 --> 01:01:47,359
key especially when you're out native

01:01:45,599 --> 01:01:50,559
because you're doing so much

01:01:47,359 --> 01:01:51,440
um so i've got a few questions uh from

01:01:50,559 --> 01:01:55,039
the audience

01:01:51,440 --> 01:01:58,559
so um we've got one from harshall uh

01:01:55,039 --> 01:02:00,640
saying he love you yeah god words

01:01:58,559 --> 01:02:02,400
he loved the iterative approach and he

01:02:00,640 --> 01:02:04,000
was asking how long does it take to uh

01:02:02,400 --> 01:02:07,039
build it

01:02:04,000 --> 01:02:09,200
sure um so i mean if you have

01:02:07,039 --> 01:02:11,359
knowledge of the library uh you can

01:02:09,200 --> 01:02:13,680
probably build this in in a few hours

01:02:11,359 --> 01:02:15,520
uh and i think for beginners who haven't

01:02:13,680 --> 01:02:19,119
touched animations before

01:02:15,520 --> 01:02:22,160
uh you'd probably take

01:02:19,119 --> 01:02:23,119
maybe you know a couple of hours to get

01:02:22,160 --> 01:02:26,400
used to

01:02:23,119 --> 01:02:29,359
the concepts of a gesture responder

01:02:26,400 --> 01:02:30,160
and an animated value um there's you

01:02:29,359 --> 01:02:31,760
know

01:02:30,160 --> 01:02:33,760
tutorials online and there's dots and

01:02:31,760 --> 01:02:35,359
things like that but uh once you have

01:02:33,760 --> 01:02:37,760
your head around those concepts

01:02:35,359 --> 01:02:39,200
uh yeah it will take a few hours and you

01:02:37,760 --> 01:02:42,240
know out at most

01:02:39,200 --> 01:02:43,839
a day or so um to build this out

01:02:42,240 --> 01:02:45,039
and once you've you know built it up you

01:02:43,839 --> 01:02:47,200
can you can go ahead and make

01:02:45,039 --> 01:02:50,880
performance improvements as well

01:02:47,200 --> 01:02:55,039
so yeah it's good to hear

01:02:50,880 --> 01:02:56,559
um so uh karina was also asking um

01:02:55,039 --> 01:02:57,920
which other animation libraries could

01:02:56,559 --> 01:03:01,440
you use obviously you mentioned

01:02:57,920 --> 01:03:04,880
reanimated or any others come to mind

01:03:01,440 --> 01:03:08,720
not so much uh reanimated is really the

01:03:04,880 --> 01:03:12,079
the main one um but maybe i can you know

01:03:08,720 --> 01:03:15,520
explain a bit more about why it's it's

01:03:12,079 --> 01:03:18,160
better in terms of performance so

01:03:15,520 --> 01:03:18,799
to explain the the situation very simply

01:03:18,160 --> 01:03:21,280
uh there's

01:03:18,799 --> 01:03:22,079
two main threads that react native runs

01:03:21,280 --> 01:03:24,559
on which

01:03:22,079 --> 01:03:25,920
i think people will be aware of uh one

01:03:24,559 --> 01:03:28,960
is the javascript thread

01:03:25,920 --> 01:03:30,160
which runs all your business logic and

01:03:28,960 --> 01:03:32,400
your screens and

01:03:30,160 --> 01:03:34,559
everything else in the app and then the

01:03:32,400 --> 01:03:36,720
other is the ui thread

01:03:34,559 --> 01:03:38,720
which runs all your animations or is

01:03:36,720 --> 01:03:42,480
supposed to run all your animations

01:03:38,720 --> 01:03:44,559
so with uh the javascript thread

01:03:42,480 --> 01:03:46,799
every time it runs you have a re-render

01:03:44,559 --> 01:03:48,160
of the app um so you know if you console

01:03:46,799 --> 01:03:50,480
log something

01:03:48,160 --> 01:03:51,200
and you run it on the javascript thread

01:03:50,480 --> 01:03:53,039
every time

01:03:51,200 --> 01:03:55,039
you change something in your animation

01:03:53,039 --> 01:03:57,680
that thing will get console logged

01:03:55,039 --> 01:03:58,559
um but the ui thread runs independently

01:03:57,680 --> 01:04:01,920
of this

01:03:58,559 --> 01:04:02,480
which means if you try and console log

01:04:01,920 --> 01:04:04,160
something

01:04:02,480 --> 01:04:06,079
and you have an animated component and

01:04:04,160 --> 01:04:08,640
you move it around

01:04:06,079 --> 01:04:09,119
even though the component is moving left

01:04:08,640 --> 01:04:11,359
to right

01:04:09,119 --> 01:04:13,200
the console logs won't come through

01:04:11,359 --> 01:04:13,839
because that's running on the javascript

01:04:13,200 --> 01:04:17,119
thread

01:04:13,839 --> 01:04:19,039
so because of that uh the ui thread

01:04:17,119 --> 01:04:21,119
handles all the processing if you use

01:04:19,039 --> 01:04:23,200
the reanimated library that i mentioned

01:04:21,119 --> 01:04:24,880
and so it's a lot more performant and

01:04:23,200 --> 01:04:27,839
you're not limited by how many renders

01:04:24,880 --> 01:04:29,599
you can do essentially

01:04:27,839 --> 01:04:31,440
i've definitely been caught out with the

01:04:29,599 --> 01:04:34,799
console problem before

01:04:31,440 --> 01:04:36,480
um so i've got another one

01:04:34,799 --> 01:04:38,559
from the uh mobile membership and

01:04:36,480 --> 01:04:40,319
multi-platform um

01:04:38,559 --> 01:04:42,160
could couldn't you use interpolation for

01:04:40,319 --> 01:04:43,680
the labels opacity in the first place

01:04:42,160 --> 01:04:47,039
and only have one end

01:04:43,680 --> 01:04:51,039
animated value instead of two sure uh

01:04:47,039 --> 01:04:53,440
so that's a good good question and

01:04:51,039 --> 01:04:54,640
if we had done that uh the result that

01:04:53,440 --> 01:04:57,599
we would have had

01:04:54,640 --> 01:04:58,799
is as you slide the slider to the right

01:04:57,599 --> 01:05:01,839
and left

01:04:58,799 --> 01:05:05,200
um you would have the

01:05:01,839 --> 01:05:07,680
label opacity for the next and edit text

01:05:05,200 --> 01:05:08,559
slowly diminishing from fully

01:05:07,680 --> 01:05:10,720
transparent

01:05:08,559 --> 01:05:11,760
uh you know as a gradient and we'll go

01:05:10,720 --> 01:05:13,760
to

01:05:11,760 --> 01:05:15,039
fully opaque and it'll slowly go down to

01:05:13,760 --> 01:05:18,079
transparent

01:05:15,039 --> 01:05:19,359
but uh what we exactly wanted was an

01:05:18,079 --> 01:05:22,799
immediate switch

01:05:19,359 --> 01:05:25,839
from you know opaque to transparent

01:05:22,799 --> 01:05:27,680
for that specific text uh there is a way

01:05:25,839 --> 01:05:29,440
around it i guess with interpolation we

01:05:27,680 --> 01:05:30,960
could have set limits but interpolation

01:05:29,440 --> 01:05:33,680
is generally used

01:05:30,960 --> 01:05:34,640
uh when you want to go you know from one

01:05:33,680 --> 01:05:37,359
value to the next

01:05:34,640 --> 01:05:38,559
in a smooth way uh we generally just

01:05:37,359 --> 01:05:41,680
wanted to go

01:05:38,559 --> 01:05:42,240
you know spend 25 milliseconds and just

01:05:41,680 --> 01:05:44,799
go from

01:05:42,240 --> 01:05:46,319
zero to one or one to zero uh

01:05:44,799 --> 01:05:48,000
transparently

01:05:46,319 --> 01:05:50,319
so it didn't make sense for that use

01:05:48,000 --> 01:05:53,920
case but it is possible of course

01:05:50,319 --> 01:05:55,440
to do that cool um

01:05:53,920 --> 01:05:57,599
so i think the last one we've got is

01:05:55,440 --> 01:06:00,000
from uh vihagen um

01:05:57,599 --> 01:06:01,039
saying how to manage font sizes on both

01:06:00,000 --> 01:06:03,039
android and ios

01:06:01,039 --> 01:06:04,079
and do we need to think about pixel

01:06:03,039 --> 01:06:05,839
density

01:06:04,079 --> 01:06:09,760
um before defining a font size you

01:06:05,839 --> 01:06:12,000
mentioned particularly font sizes 23.

01:06:09,760 --> 01:06:13,359
cool is that in relation to any of the

01:06:12,000 --> 01:06:15,440
font sizes mentioned

01:06:13,359 --> 01:06:17,280
during the talk i'm not sure if i

01:06:15,440 --> 01:06:18,640
mentioned something

01:06:17,280 --> 01:06:20,720
i would imagine it could be about

01:06:18,640 --> 01:06:23,839
styling okay

01:06:20,720 --> 01:06:26,799
well uh i'd say

01:06:23,839 --> 01:06:28,000
in terms of managing font sizes on both

01:06:26,799 --> 01:06:30,319
platforms

01:06:28,000 --> 01:06:31,280
um i think it varies from device to

01:06:30,319 --> 01:06:33,440
device

01:06:31,280 --> 01:06:34,559
and i think the best that you can have

01:06:33,440 --> 01:06:37,680
is make sure that you

01:06:34,559 --> 01:06:39,359
test on a lot of devices your app um

01:06:37,680 --> 01:06:40,720
and always take accessibility into

01:06:39,359 --> 01:06:42,720
consideration

01:06:40,720 --> 01:06:44,400
it's something that we forget a lot to

01:06:42,720 --> 01:06:45,280
do because you know we test on our

01:06:44,400 --> 01:06:47,200
device when we're

01:06:45,280 --> 01:06:49,119
doing developing or we test on a

01:06:47,200 --> 01:06:50,720
simulator and it looks fine

01:06:49,119 --> 01:06:52,240
great let me move on to the next thing

01:06:50,720 --> 01:06:55,039
to build right

01:06:52,240 --> 01:06:56,319
um but i think it's brings to light a

01:06:55,039 --> 01:06:58,160
better

01:06:56,319 --> 01:07:00,720
a more important point to make sure you

01:06:58,160 --> 01:07:02,480
test on a lot of different devices

01:07:00,720 --> 01:07:04,880
and if you do then i think you should be

01:07:02,480 --> 01:07:07,119
able to account for all of those

01:07:04,880 --> 01:07:09,200
and then not have certain problems with

01:07:07,119 --> 01:07:12,000
sort of pixel density and ratio

01:07:09,200 --> 01:07:12,559
um after i wonder if you have any

01:07:12,000 --> 01:07:16,559
thoughts

01:07:12,559 --> 01:07:19,680
on that um

01:07:16,559 --> 01:07:22,319
well in terms in terms of reanimated

01:07:19,680 --> 01:07:23,680
and what i like uh too much about it

01:07:22,319 --> 01:07:26,400
it's that is that it's

01:07:23,680 --> 01:07:28,799
backward compatible to default animated

01:07:26,400 --> 01:07:28,799
package

01:07:29,359 --> 01:07:36,079
from react native and i don't

01:07:33,039 --> 01:07:39,599
i don't really use reanimated that much

01:07:36,079 --> 01:07:39,599
in our production app but

01:07:40,559 --> 01:07:43,920
but yeah all i could say is just i i

01:07:42,960 --> 01:07:47,680
rely mostly

01:07:43,920 --> 01:07:49,520
on the standard apis on it so

01:07:47,680 --> 01:07:51,599
could you pierce repeat the question

01:07:49,520 --> 01:07:54,000
about the phone scaling or something

01:07:51,599 --> 01:07:56,960
we have been talking about because i i

01:07:54,000 --> 01:08:00,960
i'm not sure i get the point

01:07:56,960 --> 01:08:01,680
um so when you start set a static font

01:08:00,960 --> 01:08:05,520
size

01:08:01,680 --> 01:08:09,680
on uh native obviously pixel density

01:08:05,520 --> 01:08:11,039
between devices changes um so

01:08:09,680 --> 01:08:12,400
obviously then the text will be bigger

01:08:11,039 --> 01:08:13,200
or smaller depending on the pixel

01:08:12,400 --> 01:08:16,319
density

01:08:13,200 --> 01:08:18,159
of the device so how

01:08:16,319 --> 01:08:20,239
do you handle that in a like graceful

01:08:18,159 --> 01:08:24,799
way um

01:08:20,239 --> 01:08:27,600
particularly with the view of ui kit um

01:08:24,799 --> 01:08:28,159
to be completely honest about this uh we

01:08:27,600 --> 01:08:31,839
didn't

01:08:28,159 --> 01:08:34,000
care that much in our framework

01:08:31,839 --> 01:08:35,839
but uh this is actually i think we

01:08:34,000 --> 01:08:38,880
already started talking about internally

01:08:35,839 --> 01:08:40,640
in our team and

01:08:38,880 --> 01:08:42,880
i did some basic research on that and

01:08:40,640 --> 01:08:45,199
they found a great ui library called

01:08:42,880 --> 01:08:46,880
uh size matters or something like that

01:08:45,199 --> 01:08:49,440
so it's heavily used right now

01:08:46,880 --> 01:08:50,799
and we are really really looking to

01:08:49,440 --> 01:08:53,279
implement some

01:08:50,799 --> 01:08:54,080
some logic for for this also in ui

01:08:53,279 --> 01:08:56,480
kitten

01:08:54,080 --> 01:08:58,640
so to answer this question i would say

01:08:56,480 --> 01:08:59,440
it's not perfect our ui library is not

01:08:58,640 --> 01:09:02,400
perfect in this

01:08:59,440 --> 01:09:03,920
case so if it does really matter for

01:09:02,400 --> 01:09:06,319
your app

01:09:03,920 --> 01:09:08,560
we should just go through this topic

01:09:06,319 --> 01:09:08,560
again

01:09:10,480 --> 01:09:16,640
well i think i think that's all

01:09:13,839 --> 01:09:17,759
we we've got um and thank you both for

01:09:16,640 --> 01:09:19,120
joining me

01:09:17,759 --> 01:09:20,719
it's been it's been really really

01:09:19,120 --> 01:09:21,199
interesting i really enjoyed making

01:09:20,719 --> 01:09:24,159
talks

01:09:21,199 --> 01:09:24,719
um yeah thank you everyone for joining

01:09:24,159 --> 01:09:26,799
as well

01:09:24,719 --> 01:09:27,759
um it's been you know it's been a while

01:09:26,799 --> 01:09:29,520
as i say

01:09:27,759 --> 01:09:31,279
um yeah we're really looking forward to

01:09:29,520 --> 01:09:33,199
doing more of these and perhaps even in

01:09:31,279 --> 01:09:36,640
person at some point in the future

01:09:33,199 --> 01:09:38,480
um thank you leo for hosting yourself

01:09:36,640 --> 01:09:40,080
you are you're such a great host that uh

01:09:38,480 --> 01:09:41,839
i think i'm gonna come next time as well

01:09:40,080 --> 01:09:44,400
and i'll be here every time you you've

01:09:41,839 --> 01:09:44,400
convinced me

01:09:44,880 --> 01:09:48,159
yeah thank you for the invitation i hope

01:09:46,880 --> 01:09:51,120
to join uh

01:09:48,159 --> 01:09:52,960
another uh conference next time to talk

01:09:51,120 --> 01:09:56,000
about your kids maybe even

01:09:52,960 --> 01:09:57,040
more detailed uh to provide some details

01:09:56,000 --> 01:09:59,600
in it of course

01:09:57,040 --> 01:10:00,800
so yeah thank you for having your time

01:09:59,600 --> 01:10:03,520
and having me here

01:10:00,800 --> 01:10:17,840
and yeah hope to see you next time i'm

01:10:03,520 --> 01:10:17,840
looking forward to it

01:10:22,050 --> 01:10:31,160
[Music]

01:10:28,840 --> 01:10:36,520
me

01:10:31,160 --> 01:10:39,659
[Music]

01:10:36,520 --> 01:10:39,659
[Applause]

01:10:45,720 --> 01:10:51,520
[Music]

01:10:46,670 --> 01:11:07,989
[Applause]

01:10:51,520 --> 01:11:07,989
[Music]

01:11:10,840 --> 01:11:15,649
so

01:11:12,580 --> 01:11:15,649
[Music]

01:11:23,540 --> 01:11:28,480
[Music]

01:11:27,580 --> 01:11:35,550
[Applause]

01:11:28,480 --> 01:11:35,550
[Music]

01:11:38,840 --> 01:11:46,880
hey

01:11:40,790 --> 01:11:52,840
[Music]

01:11:46,880 --> 01:11:55,840
[Applause]

01:11:52,840 --> 01:11:55,840
me

01:12:00,540 --> 01:12:18,249
[Music]

01:12:20,840 --> 01:12:28,690
so

01:12:23,750 --> 01:12:29,140
[Music]

01:12:28,690 --> 01:12:38,750
[Applause]

01:12:29,140 --> 01:12:41,829
[Music]

01:12:38,750 --> 01:12:41,829
[Applause]

01:12:48,840 --> 01:12:51,840
more

01:13:02,840 --> 01:13:09,680
so

01:13:05,510 --> 01:13:14,620
[Music]

01:13:09,680 --> 01:13:17,750
[Applause]

01:13:14,620 --> 01:13:17,750
[Music]

01:13:19,870 --> 01:13:23,120
[Music]

01:13:19,980 --> 01:13:23,120
[Applause]

01:13:29,170 --> 01:13:34,980
[Music]

01:13:30,130 --> 01:13:51,449
[Applause]

01:13:34,980 --> 01:13:51,449
[Music]

01:13:56,030 --> 01:13:59,100
[Music]

01:14:07,000 --> 01:14:14,300
[Music]

01:14:12,840 --> 01:14:25,420
huh

01:14:14,300 --> 01:14:25,420
[Music]

01:14:26,840 --> 01:14:30,340
me

01:14:28,180 --> 01:14:36,150
[Music]

01:14:30,340 --> 01:14:40,840
[Applause]

01:14:36,150 --> 01:14:43,840
[Music]

01:14:40,840 --> 01:14:43,840
me

01:14:44,010 --> 01:14:57,050
[Music]

01:14:54,840 --> 01:15:01,709
so

01:14:57,050 --> 01:15:01,709
[Music]

01:15:07,260 --> 01:15:12,600
[Music]

01:15:12,150 --> 01:15:22,380
[Applause]

01:15:12,600 --> 01:15:22,380
[Music]

01:15:22,840 --> 01:15:25,840
a

01:15:30,830 --> 01:15:39,840
[Music]

01:15:36,840 --> 01:15:39,840
me

01:15:48,960 --> 01:15:53,130
[Music]

01:15:50,840 --> 01:15:58,080
so

01:15:53,130 --> 01:16:03,430
[Applause]

01:15:58,080 --> 01:16:06,569
[Music]

01:16:03,430 --> 01:16:06,569
[Applause]

01:16:12,630 --> 01:16:18,840
[Music]

01:16:13,590 --> 01:16:21,050
[Applause]

01:16:18,840 --> 01:16:23,840
so

01:16:21,050 --> 01:16:25,920
[Music]

01:16:23,840 --> 01:16:25,920

YouTube URL: https://www.youtube.com/watch?v=2eFN0AVlTLY


