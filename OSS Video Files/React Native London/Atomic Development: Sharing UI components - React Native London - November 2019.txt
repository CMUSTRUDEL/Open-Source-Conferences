Title: Atomic Development: Sharing UI components - React Native London - November 2019
Publication date: 2019-12-21
Playlist: React Native London
Description: 
	Atomic Development - Sharing UI components across platforms by Joe Purnell

A quick look at Atomic Design and how it can be utilised to maximise shared code.

Twitter: @joepurnell8
Github: https://github.com/joepurnell1

_________________________________________________________________

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_________________________________________________________________

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,030 --> 00:00:09,960
Tomic development nice that did not work

00:00:06,569 --> 00:00:13,200
space fire don't use it I'm Joe I'm a

00:00:09,960 --> 00:00:14,309
software engineer at ovo energy and I'm

00:00:13,200 --> 00:00:16,410
gonna be talk about two things today the

00:00:14,309 --> 00:00:17,760
first one is atomic design and the

00:00:16,410 --> 00:00:19,890
second one is how we can use it to share

00:00:17,760 --> 00:00:23,070
UI components across different platforms

00:00:19,890 --> 00:00:27,630
primarily react and react native cool so

00:00:23,070 --> 00:00:29,910
atomic design is a design methodology it

00:00:27,630 --> 00:00:31,380
was kraid by Brad Frost and I'm not

00:00:29,910 --> 00:00:33,780
gonna go fully in depth with it today

00:00:31,380 --> 00:00:38,219
because that would probably take up the

00:00:33,780 --> 00:00:39,780
whole of my time but it I if you want to

00:00:38,219 --> 00:00:41,730
have a bit more of a read into it check

00:00:39,780 --> 00:00:45,660
out that blog post it's on Brad first

00:00:41,730 --> 00:00:48,239
blog blog Brad Frost's blog or you just

00:00:45,660 --> 00:00:51,510
google atomic design its first wing but

00:00:48,239 --> 00:00:54,300
the initially what it does is it is a

00:00:51,510 --> 00:00:57,360
way of structuring your UI code into

00:00:54,300 --> 00:00:59,940
five layers so you your first layer is

00:00:57,360 --> 00:01:02,280
atoms and it'll be your dumb elements

00:00:59,940 --> 00:01:05,220
this is your buttons or your images

00:01:02,280 --> 00:01:07,830
whatever here I'm gonna signify in an

00:01:05,220 --> 00:01:09,479
image which is an album cover which is

00:01:07,830 --> 00:01:12,000
really small on the screen and a real

00:01:09,479 --> 00:01:13,170
resolution so high and then you have

00:01:12,000 --> 00:01:14,430
your molecules this is where you're

00:01:13,170 --> 00:01:16,860
going to start combining your atoms

00:01:14,430 --> 00:01:19,290
together to be a bit more interesting so

00:01:16,860 --> 00:01:21,150
here I'm making a song listing I'm

00:01:19,290 --> 00:01:22,830
combining an image with some text and

00:01:21,150 --> 00:01:26,220
it's going to look nice and swanky like

00:01:22,830 --> 00:01:27,689
this and then we get to organisms and

00:01:26,220 --> 00:01:30,090
this is where you start combining your

00:01:27,689 --> 00:01:32,369
molecules together with other atoms and

00:01:30,090 --> 00:01:33,900
you you're essentially forming up the

00:01:32,369 --> 00:01:37,229
bigger components bigger portions of

00:01:33,900 --> 00:01:39,150
your screen and these are the probably

00:01:37,229 --> 00:01:40,680
the most important sections because you

00:01:39,150 --> 00:01:42,990
can start then using these in multiple

00:01:40,680 --> 00:01:45,630
areas of your of your code and in this

00:01:42,990 --> 00:01:47,130
sense I've got two album two song

00:01:45,630 --> 00:01:48,659
listings and some text the box saying

00:01:47,130 --> 00:01:52,110
you've reached the end of the album the

00:01:48,659 --> 00:01:54,829
album is longer than that honest so then

00:01:52,110 --> 00:01:58,020
we get into the ream of templates and

00:01:54,829 --> 00:02:01,350
pages so the thing to think about here

00:01:58,020 --> 00:02:03,420
is so far and including templates you

00:02:01,350 --> 00:02:05,310
don't have any data and you also you're

00:02:03,420 --> 00:02:06,899
not controlling the state you're not

00:02:05,310 --> 00:02:11,629
controlling what happens when things are

00:02:06,899 --> 00:02:13,650
clicked on your app so your template is

00:02:11,629 --> 00:02:15,689
essentially that it's a template of your

00:02:13,650 --> 00:02:17,010
entire page at this point but you still

00:02:15,689 --> 00:02:19,170
don't know what's gonna be filling any

00:02:17,010 --> 00:02:21,030
of these areas you're just mapping out

00:02:19,170 --> 00:02:22,739
where everything should live so that's

00:02:21,030 --> 00:02:24,900
what a page is all about the page is

00:02:22,739 --> 00:02:27,180
where you link your data in with your

00:02:24,900 --> 00:02:30,480
template and everything magically works

00:02:27,180 --> 00:02:32,430
it looks great and so you're probably

00:02:30,480 --> 00:02:35,700
thinking show some code because talking

00:02:32,430 --> 00:02:38,549
too much already I do have a warning I'm

00:02:35,700 --> 00:02:39,840
using style components and yes I know

00:02:38,549 --> 00:02:42,390
that there are other styling libraries

00:02:39,840 --> 00:02:44,220
out there and I know react native comes

00:02:42,390 --> 00:02:46,739
built-in with style sheets

00:02:44,220 --> 00:02:48,930
I like style components and also there

00:02:46,739 --> 00:02:51,000
is another use for style components I'm

00:02:48,930 --> 00:02:55,260
really sorry about the text size on the

00:02:51,000 --> 00:02:59,909
screen hey there we go

00:02:55,260 --> 00:03:03,720
cool so let's look at some code I have a

00:02:59,909 --> 00:03:06,569
nice swanky project and it's got two

00:03:03,720 --> 00:03:11,250
directories in it this for the I have a

00:03:06,569 --> 00:03:13,439
basic react native init app nothing

00:03:11,250 --> 00:03:17,340
special happening here all I'm really

00:03:13,439 --> 00:03:19,109
doing is importing my custom component

00:03:17,340 --> 00:03:23,639
library which I called stylish because

00:03:19,109 --> 00:03:25,019
it's really stylish and I'm also I've

00:03:23,639 --> 00:03:27,840
got style components installed here

00:03:25,019 --> 00:03:32,060
because I'm using style components and

00:03:27,840 --> 00:03:32,060
then if you look at some actual app code

00:03:32,299 --> 00:03:37,620
what I'm doing here is I'm just using

00:03:35,060 --> 00:03:43,729
organism's straight from myself my style

00:03:37,620 --> 00:03:46,500
components my component library even and

00:03:43,729 --> 00:03:48,060
so I'm actually combining both templates

00:03:46,500 --> 00:03:50,340
and pages into one page for a bit of

00:03:48,060 --> 00:03:53,190
simplicity here but all I'm doing is I'm

00:03:50,340 --> 00:03:55,349
importing my organism's I'm creating

00:03:53,190 --> 00:03:58,349
some fake data which is a track listing

00:03:55,349 --> 00:04:00,299
and then I'm forming up my page so I've

00:03:58,349 --> 00:04:03,329
got my state defined here and I've got a

00:04:00,299 --> 00:04:06,019
handler for the button clicks and then

00:04:03,329 --> 00:04:10,290
I've also got my organisms being

00:04:06,019 --> 00:04:14,430
displayed on screen nothing too swanky

00:04:10,290 --> 00:04:17,579
happening there and using so those all

00:04:14,430 --> 00:04:19,079
come from this stylish library and I'm

00:04:17,579 --> 00:04:22,529
following the structure of that atomic

00:04:19,079 --> 00:04:24,599
design just for for ease sorry for atoms

00:04:22,529 --> 00:04:26,520
molecules and organisms accompanied with

00:04:24,599 --> 00:04:27,630
other things like assets and some sort

00:04:26,520 --> 00:04:30,240
of shared utilities which my

00:04:27,630 --> 00:04:32,160
users across projects nothing nothing

00:04:30,240 --> 00:04:35,030
special really happening any in any of

00:04:32,160 --> 00:04:38,280
this my my organisms have an album list

00:04:35,030 --> 00:04:43,380
which you'll see is importing song

00:04:38,280 --> 00:04:44,790
listing and it's then mapping over or

00:04:43,380 --> 00:04:47,910
the song songs that it's given

00:04:44,790 --> 00:04:49,530
displaying song listing molecules said

00:04:47,910 --> 00:04:51,900
if you can we can step down a level and

00:04:49,530 --> 00:04:55,170
look at the song list in molecule all

00:04:51,900 --> 00:04:57,650
I'm doing here is I'm using images and

00:04:55,170 --> 00:05:00,900
some text I got out of a typography

00:04:57,650 --> 00:05:03,030
component that I made and you guessed it

00:05:00,900 --> 00:05:05,040
I'm just rendering it together alongside

00:05:03,030 --> 00:05:09,120
a nice Clear button so I can actually

00:05:05,040 --> 00:05:13,680
control the the on press so atoms is

00:05:09,120 --> 00:05:15,720
where it's at here I'm defining my base

00:05:13,680 --> 00:05:16,370
level elements so I'm defining some text

00:05:15,720 --> 00:05:20,220
here

00:05:16,370 --> 00:05:23,880
nothing special happening it's just font

00:05:20,220 --> 00:05:25,380
size and font an image is there enough

00:05:23,880 --> 00:05:26,880
the same I'm giving some sort of styling

00:05:25,380 --> 00:05:29,250
here I'm giving it some sort of shadow

00:05:26,880 --> 00:05:30,960
and whatnot and then I'm just rendering

00:05:29,250 --> 00:05:32,940
it with interview and then feeding it

00:05:30,960 --> 00:05:34,490
back out the door so not a lot happening

00:05:32,940 --> 00:05:39,930
here but it's the structure that's key

00:05:34,490 --> 00:05:43,830
so if we quickly look at the app it

00:05:39,930 --> 00:05:45,660
looks great right the the thing to take

00:05:43,830 --> 00:05:49,020
away if I want to update something say I

00:05:45,660 --> 00:05:51,210
want to update the color of the text I

00:05:49,020 --> 00:05:53,790
only really need to update it one place

00:05:51,210 --> 00:05:58,710
I can come into typography and then I

00:05:53,790 --> 00:06:00,630
can add a new color size and then if I'd

00:05:58,710 --> 00:06:02,430
give that quick save hop over to my

00:06:00,630 --> 00:06:06,510
terminal which is also everything's

00:06:02,430 --> 00:06:07,800
really small there are a couple steps so

00:06:06,510 --> 00:06:09,960
I'll need to do here is I'll need to

00:06:07,800 --> 00:06:11,550
build my component library there are

00:06:09,960 --> 00:06:12,630
ways of making this easier there's ways

00:06:11,550 --> 00:06:14,430
that you can get this to mimic

00:06:12,630 --> 00:06:16,230
straightway if I built this you'd be

00:06:14,430 --> 00:06:19,230
able to get it to display straightaway

00:06:16,230 --> 00:06:22,680
within the app there are resource at

00:06:19,230 --> 00:06:24,500
which I can touch on in a bit but for

00:06:22,680 --> 00:06:26,880
simplicity sake I've just built it and

00:06:24,500 --> 00:06:30,600
here I've got my metro bundler already

00:06:26,880 --> 00:06:32,580
running and all I need to do is remove

00:06:30,600 --> 00:06:35,280
the old version of that library and then

00:06:32,580 --> 00:06:37,710
add a that new compiled version that I

00:06:35,280 --> 00:06:40,620
just made which will take two seconds

00:06:37,710 --> 00:06:41,370
there we go and if I give it a quick

00:06:40,620 --> 00:06:44,010
refresh the

00:06:41,370 --> 00:06:45,060
color change has happened I realized on

00:06:44,010 --> 00:06:48,960
the screen it's really hard to say it

00:06:45,060 --> 00:06:51,600
was black announce Brown didn't really

00:06:48,960 --> 00:06:53,250
think that were through you know I come

00:06:51,600 --> 00:06:59,220
back and prove it so let's just make it

00:06:53,250 --> 00:07:01,949
Orange semicolons and I'll do that again

00:06:59,220 --> 00:07:03,930
I do apologize that's alright I feel

00:07:01,949 --> 00:07:07,080
some more time

00:07:03,930 --> 00:07:09,240
so again built the library removing it

00:07:07,080 --> 00:07:13,560
from the app and then gonna reinstall it

00:07:09,240 --> 00:07:15,800
and now with free refresh its re ins we

00:07:13,560 --> 00:07:19,289
can actually see the color change great

00:07:15,800 --> 00:07:20,820
it's as easy as that but I made one code

00:07:19,289 --> 00:07:23,910
change and it's happened across a whole

00:07:20,820 --> 00:07:26,490
app which is great before I continue on

00:07:23,910 --> 00:07:27,990
and remove that because otherwise the

00:07:26,490 --> 00:07:34,500
rest of everything else will look really

00:07:27,990 --> 00:07:36,270
really bad cool back to this you're

00:07:34,500 --> 00:07:37,770
probably thinking big whoop nothing

00:07:36,270 --> 00:07:39,419
really special happening here it's just

00:07:37,770 --> 00:07:42,770
sharing components and things have been

00:07:39,419 --> 00:07:44,789
updated so what does this actually solve

00:07:42,770 --> 00:07:46,229
because we're define our lower-level

00:07:44,789 --> 00:07:47,669
components there's a lot more code that

00:07:46,229 --> 00:07:49,830
shared even just within the one app

00:07:47,669 --> 00:07:51,510
which is great which means that we can

00:07:49,830 --> 00:07:52,979
share our components across different

00:07:51,510 --> 00:07:54,510
areas which share styling and keep

00:07:52,979 --> 00:07:57,750
everything looking consistent but it's

00:07:54,510 --> 00:08:00,360
great and we can also couple this with

00:07:57,750 --> 00:08:02,130
theming so we can release theme so I've

00:08:00,360 --> 00:08:03,930
done a github release like a Halloween

00:08:02,130 --> 00:08:05,820
sort of theme on there on the website

00:08:03,930 --> 00:08:07,380
you can do that easily with earth with

00:08:05,820 --> 00:08:13,530
the theming file and then be adopted

00:08:07,380 --> 00:08:15,030
across everything which is great yeah I

00:08:13,530 --> 00:08:16,470
guess that's all the pluses just makes

00:08:15,030 --> 00:08:21,240
it easier anyway I want to talk about

00:08:16,470 --> 00:08:22,949
molecular bonds in the physics world I'm

00:08:21,240 --> 00:08:25,349
a killer bond holds atoms together and

00:08:22,949 --> 00:08:27,690
keeps their structure and in my head

00:08:25,349 --> 00:08:29,370
this is how I vision our view elements

00:08:27,690 --> 00:08:31,199
this is essentially defining the

00:08:29,370 --> 00:08:33,630
structure of our components and keeping

00:08:31,199 --> 00:08:35,520
things looking as we expect them to in

00:08:33,630 --> 00:08:38,400
the right order so here

00:08:35,520 --> 00:08:41,520
simple view element and it's got itself

00:08:38,400 --> 00:08:43,380
a nice column Direction beautiful but I

00:08:41,520 --> 00:08:46,350
can then go and use that across the

00:08:43,380 --> 00:08:49,170
entirety of the structure which is quite

00:08:46,350 --> 00:08:50,610
handy and this is a good way of

00:08:49,170 --> 00:08:53,700
visualizing it if we look at a song

00:08:50,610 --> 00:08:54,900
listing with a horizontal view we can we

00:08:53,700 --> 00:08:55,230
can then make sure that's always going

00:08:54,900 --> 00:08:56,790
to be hard

00:08:55,230 --> 00:08:58,020
on to where for that that's used and

00:08:56,790 --> 00:09:00,210
we're not defining it within the app so

00:08:58,020 --> 00:09:03,000
their next app comes along it uses it a

00:09:00,210 --> 00:09:04,950
little bit differently so why am i

00:09:03,000 --> 00:09:07,110
extracting a black ting things so in

00:09:04,950 --> 00:09:08,730
such a low level and how does it

00:09:07,110 --> 00:09:11,370
actually relate to sharing your white

00:09:08,730 --> 00:09:15,090
components I'm trying to get there

00:09:11,370 --> 00:09:18,570
honestly but I need to talk about what

00:09:15,090 --> 00:09:21,690
composes the our builds and if you come

00:09:18,570 --> 00:09:24,500
from the web life that's web pack which

00:09:21,690 --> 00:09:26,820
is a giant black hole of confusion which

00:09:24,500 --> 00:09:28,830
very rarely people find their way out of

00:09:26,820 --> 00:09:30,630
but what it does essentially at the box

00:09:28,830 --> 00:09:32,160
is it looks for an index dot JSP and

00:09:30,630 --> 00:09:35,190
brings them all together and serves up

00:09:32,160 --> 00:09:37,910
which is great and what about react

00:09:35,190 --> 00:09:41,160
native we have metro bundler which is

00:09:37,910 --> 00:09:42,420
another lot of confusion for me but this

00:09:41,160 --> 00:09:45,480
folks highly differently it looks for a

00:09:42,420 --> 00:09:47,190
platform specific file and if it can't

00:09:45,480 --> 00:09:48,960
find one of these in iOS or an Android

00:09:47,190 --> 00:09:51,710
file it will then look for a dot native

00:09:48,960 --> 00:09:53,730
file and if it can't find a native file

00:09:51,710 --> 00:09:55,290
its then that's going to resort to

00:09:53,730 --> 00:09:57,150
whatever JavaScript file it can find and

00:09:55,290 --> 00:09:58,710
this is what's really key you're

00:09:57,150 --> 00:09:59,850
probably thinking get to some sort of

00:09:58,710 --> 00:10:02,720
point that we've not seen before

00:09:59,850 --> 00:10:04,920
but again our platforms are going to

00:10:02,720 --> 00:10:09,060
pick their file that they need to use

00:10:04,920 --> 00:10:11,340
and that is really important so if we go

00:10:09,060 --> 00:10:12,900
and define every element like like this

00:10:11,340 --> 00:10:16,110
one we've got one version for web and

00:10:12,900 --> 00:10:17,640
one button for native we can then go and

00:10:16,110 --> 00:10:20,790
define a component and the component

00:10:17,640 --> 00:10:24,960
only needs if you see because what you

00:10:20,790 --> 00:10:26,460
you can see we've got ourselves a we're

00:10:24,960 --> 00:10:28,650
just importing the components from the

00:10:26,460 --> 00:10:31,830
component library but this file will

00:10:28,650 --> 00:10:33,720
work on both app and web because further

00:10:31,830 --> 00:10:37,470
on down the tree we're abstracting out

00:10:33,720 --> 00:10:40,230
between different platforms so this is

00:10:37,470 --> 00:10:41,910
what it would look like for iOS for that

00:10:40,230 --> 00:10:44,430
full component that we're showing with

00:10:41,910 --> 00:10:46,790
our layout in there if we were then

00:10:44,430 --> 00:10:49,500
going to take this and use this for web

00:10:46,790 --> 00:10:51,990
just to take away all of not natives and

00:10:49,500 --> 00:10:53,490
take away all of the other iOS and it

00:10:51,990 --> 00:10:55,380
would and that's what the component

00:10:53,490 --> 00:10:58,110
structure is actually doing which is

00:10:55,380 --> 00:11:00,210
really handy so we finally got in

00:10:58,110 --> 00:11:01,680
somewhere it's great it's spent ages

00:11:00,210 --> 00:11:04,800
making that gif I really wanted to leave

00:11:01,680 --> 00:11:07,040
it in so I want to go back to style

00:11:04,800 --> 00:11:08,920
components and why I chose it

00:11:07,040 --> 00:11:12,920
so I'll come

00:11:08,920 --> 00:11:15,440
is really like it's quite dandy this is

00:11:12,920 --> 00:11:17,300
what the import looks like for web it's

00:11:15,440 --> 00:11:19,850
just import style from style components

00:11:17,300 --> 00:11:21,350
then you can use it as as as if that's

00:11:19,850 --> 00:11:24,350
what it looks like for native the only

00:11:21,350 --> 00:11:25,760
difference is a slash native and then

00:11:24,350 --> 00:11:27,829
even the styling looks the same this is

00:11:25,760 --> 00:11:29,779
a styling for for that view component

00:11:27,829 --> 00:11:32,449
that we had earlier if I then look at

00:11:29,779 --> 00:11:34,639
web is just one line an extra added

00:11:32,449 --> 00:11:38,149
which is display flex because everything

00:11:34,639 --> 00:11:39,350
is a flex container in native but in web

00:11:38,149 --> 00:11:43,790
we actually need to tell it it's a flex

00:11:39,350 --> 00:11:46,279
container so sorry right side again

00:11:43,790 --> 00:11:49,430
I know the slide proving the same point

00:11:46,279 --> 00:11:51,380
I guess but there are key thing to take

00:11:49,430 --> 00:11:53,930
ways that if we look at our container

00:11:51,380 --> 00:11:55,310
here because it's all going to be the

00:11:53,930 --> 00:11:58,010
same we can even use style components

00:11:55,310 --> 00:12:00,260
here to override the styling and that

00:11:58,010 --> 00:12:02,149
override because the styling system is

00:12:00,260 --> 00:12:03,740
the same across the different platforms

00:12:02,149 --> 00:12:04,970
to the reason stock components that

00:12:03,740 --> 00:12:08,449
styling is then going to be adopted

00:12:04,970 --> 00:12:09,920
across all platforms so any one line of

00:12:08,449 --> 00:12:12,529
change that background color is going to

00:12:09,920 --> 00:12:18,920
change everywhere and I'll prove it

00:12:12,529 --> 00:12:20,810
hopefully first what I'll do is in the

00:12:18,920 --> 00:12:24,529
same file in the same project sorry that

00:12:20,810 --> 00:12:28,699
I had before actually exists some more

00:12:24,529 --> 00:12:32,390
files I've also got a basic create react

00:12:28,699 --> 00:12:36,010
app and following the same structures

00:12:32,390 --> 00:12:38,329
you react native app all it's doing is

00:12:36,010 --> 00:12:41,480
important to start this stylish library

00:12:38,329 --> 00:12:43,010
and adding style components that's it

00:12:41,480 --> 00:12:46,550
that's all the changes are really made

00:12:43,010 --> 00:12:47,990
in it and even the app dot J's file is

00:12:46,550 --> 00:12:51,260
remarkably the same this is where

00:12:47,990 --> 00:12:53,149
templates really kick in just importing

00:12:51,260 --> 00:12:58,490
the music player and I'm importing the

00:12:53,149 --> 00:13:00,140
album list and then they're styling

00:12:58,490 --> 00:13:02,329
again looks the same we could have you I

00:13:00,140 --> 00:13:04,670
could have even shared that but I'm lazy

00:13:02,329 --> 00:13:05,870
we've defined in our data and then

00:13:04,670 --> 00:13:08,269
defining the same state and then

00:13:05,870 --> 00:13:09,470
defining actions but these actions might

00:13:08,269 --> 00:13:13,310
be slightly different because this is

00:13:09,470 --> 00:13:15,050
for where this is at the native and the

00:13:13,310 --> 00:13:17,089
structure of the component is even the

00:13:15,050 --> 00:13:18,740
same this is why this would usually be

00:13:17,089 --> 00:13:19,790
in a template because everything's going

00:13:18,740 --> 00:13:22,529
to look the same I could have just

00:13:19,790 --> 00:13:24,930
passed it the extra data

00:13:22,529 --> 00:13:28,470
and if we look in our stylish component

00:13:24,930 --> 00:13:30,060
library you'll actually see don't know

00:13:28,470 --> 00:13:31,949
if anybody spotted it earlier so if I go

00:13:30,060 --> 00:13:34,709
back to image I've also got an image j/s

00:13:31,949 --> 00:13:37,139
file and a new Native Jas file

00:13:34,709 --> 00:13:39,509
Oh Jas files for the web it's actually

00:13:37,139 --> 00:13:41,339
just fine an image component and then

00:13:39,509 --> 00:13:44,220
dot native which we saw earlier is to

00:13:41,339 --> 00:13:46,019
find an image component and we do need

00:13:44,220 --> 00:13:48,089
the index dot J's file in there because

00:13:46,019 --> 00:13:49,649
index or trace file just points to

00:13:48,089 --> 00:13:52,440
whatever it needs to but without that

00:13:49,649 --> 00:13:56,190
link our apps aren't gonna know what to

00:13:52,440 --> 00:13:58,410
compile into the build so everything

00:13:56,190 --> 00:14:00,720
else actually stays the same our

00:13:58,410 --> 00:14:01,920
molecules I didn't actually hide any

00:14:00,720 --> 00:14:04,889
files from there there's just the one

00:14:01,920 --> 00:14:07,709
file something listing and then again

00:14:04,889 --> 00:14:10,380
index took as files and it's the same

00:14:07,709 --> 00:14:11,940
for literally all at the chain only the

00:14:10,380 --> 00:14:15,329
only thing that is different is the

00:14:11,940 --> 00:14:18,990
atoms so if I come into the song listing

00:14:15,329 --> 00:14:24,990
and oh I can prove it is running by the

00:14:18,990 --> 00:14:29,370
way that's not all a lie this is the

00:14:24,990 --> 00:14:33,569
same the same app that's running as this

00:14:29,370 --> 00:14:35,699
one is using the same components looking

00:14:33,569 --> 00:14:38,759
they're still really really swanky so if

00:14:35,699 --> 00:14:40,100
I go into the the project itself and I

00:14:38,759 --> 00:14:42,899
change the background color that

00:14:40,100 --> 00:14:45,569
shouldn't have been that of the song

00:14:42,899 --> 00:14:48,329
listing component so reminder the song

00:14:45,569 --> 00:14:49,709
listing component is these are realized

00:14:48,329 --> 00:14:51,029
no if I point out my screen no one's

00:14:49,709 --> 00:14:53,009
gonna notice it sees these song these

00:14:51,029 --> 00:14:54,689
components all I'm doing is changing the

00:14:53,009 --> 00:14:57,120
background color I'm not gonna go fully

00:14:54,689 --> 00:14:59,040
in-depth I just need to follow the same

00:14:57,120 --> 00:15:03,120
pattern I did before rebuild the stylish

00:14:59,040 --> 00:15:04,410
library take a minut second for the web

00:15:03,120 --> 00:15:07,459
one that's running this is the red wall

00:15:04,410 --> 00:15:09,420
one will find out of my nose web cool

00:15:07,459 --> 00:15:11,370
but let's go do the same thing that I do

00:15:09,420 --> 00:15:13,560
for the app remove the old library at

00:15:11,370 --> 00:15:15,360
the new one and then just run a yarn

00:15:13,560 --> 00:15:16,380
start just to get things going again so

00:15:15,360 --> 00:15:20,189
I saw that now it takes a little bit

00:15:16,380 --> 00:15:21,360
longer and for native again exactly the

00:15:20,189 --> 00:15:25,350
same command that I did earlier remove

00:15:21,360 --> 00:15:28,079
the library we had it cool cool cool and

00:15:25,350 --> 00:15:32,069
we see donat remove the I did remove the

00:15:28,079 --> 00:15:34,320
brown hold on if i refresh there we go

00:15:32,069 --> 00:15:35,670
so we see the every Lee

00:15:34,320 --> 00:15:37,830
every component here for a song listen

00:15:35,670 --> 00:15:39,420
has actually updated and if I then go

00:15:37,830 --> 00:15:41,280
and look at the web version it's also

00:15:39,420 --> 00:15:44,460
updated I only changed one line of code

00:15:41,280 --> 00:15:45,780
but I've affected both app and web so

00:15:44,460 --> 00:15:47,760
that's really where the power is here if

00:15:45,780 --> 00:15:51,380
we abstract everything actually makes

00:15:47,760 --> 00:15:51,380
our dev process a lot quicker

00:15:52,320 --> 00:15:57,570
again spacebar doesn't work does it so

00:15:55,530 --> 00:15:59,400
there's a few things extra to add for a

00:15:57,570 --> 00:16:00,960
workflow on this some tools to make your

00:15:59,400 --> 00:16:03,450
life easier if you are sharing

00:16:00,960 --> 00:16:04,980
everything I'm not going to go through

00:16:03,450 --> 00:16:08,310
the list the only one I really want to

00:16:04,980 --> 00:16:09,840
point out is storybook if you've not

00:16:08,310 --> 00:16:13,710
used it before it essentially allows you

00:16:09,840 --> 00:16:14,850
to run your components outside of the

00:16:13,710 --> 00:16:18,510
project that they're meant to be running

00:16:14,850 --> 00:16:20,340
in because you define your see you run

00:16:18,510 --> 00:16:21,510
the story book as if it as if it was an

00:16:20,340 --> 00:16:23,520
app and you run it as if it was a

00:16:21,510 --> 00:16:25,650
website and just gives it in a state

00:16:23,520 --> 00:16:27,570
that you that you the state that you

00:16:25,650 --> 00:16:36,380
want to run the component in you can

00:16:27,570 --> 00:16:38,760
define a storybook cool oh god damn and

00:16:36,380 --> 00:16:41,130
also this way of working does work

00:16:38,760 --> 00:16:44,790
better if the same devs are doing both

00:16:41,130 --> 00:16:45,960
web and app this is purely because if

00:16:44,790 --> 00:16:47,730
you're in the flow of all I'm updating

00:16:45,960 --> 00:16:49,050
this component you know what to look for

00:16:47,730 --> 00:16:50,880
when you're doing the changes if you if

00:16:49,050 --> 00:16:51,960
I'm a handing off somebody else they

00:16:50,880 --> 00:16:54,780
might miss something which I actually

00:16:51,960 --> 00:16:59,750
needed to add in it's just makes things

00:16:54,780 --> 00:17:01,890
a bit easier it's not vital granted but

00:16:59,750 --> 00:17:03,450
just want to highlight just cuz you can

00:17:01,890 --> 00:17:04,320
share a lot of code doing this way

00:17:03,450 --> 00:17:06,589
doesn't mean you should share everything

00:17:04,320 --> 00:17:09,240
just because you're defining something

00:17:06,589 --> 00:17:10,680
for an app doesn't mean you have to go

00:17:09,240 --> 00:17:13,199
and do it on the web unless you need it

00:17:10,680 --> 00:17:17,459
so don't go and abstract everything

00:17:13,199 --> 00:17:17,820
because you do add someone that's it

00:17:17,459 --> 00:17:20,480
really

00:17:17,820 --> 00:17:23,160
that's all I wanted to really talk about

00:17:20,480 --> 00:17:25,230
that whole project that I had and the

00:17:23,160 --> 00:17:27,720
presentation all on my github to open a

00:17:25,230 --> 00:17:30,960
1 slash show and components talk and I'm

00:17:27,720 --> 00:17:33,050
also on Twitter at Joe Pennell 8 thank

00:17:30,960 --> 00:17:33,050

YouTube URL: https://www.youtube.com/watch?v=JbgjgHO-qMM


