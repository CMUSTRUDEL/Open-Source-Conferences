Title: Changing technology and culture @ Qudini - React Native London - March 2019
Publication date: 2019-04-02
Playlist: React Native London
Description: 
	David Murphy (@David_c_Murphy) from Qudini

Changing a process or a technology stack within a company is never easy and there is always a lot to consider.
Journey with us as we reflect on the last 18 months where we identified a problem and resolved to fix it outweighing the long terms benefits over short term gains.
From discovery to research and proposal all the way to completion across 3 different products. We put language and platform biases aside and choose react-native to drive our business forward and it worked.
We think we learned a lot along the way and would love to share it with you.

_

About Pusher Sessions:

We're bringing the meetup to you. With Sessions, you can watch recordings of top-notch talks from developer meetups -- wherever and whenever you want.

Meetups are a great way to learn from our peers and to keep up with the latest trends and technologies. As developers ourselves, we at Pusher wanted to bring this great content to more people... So we built Sessions. On Sessions, you can watch talks that interest you and subscribe to be notified when new content gets added.

If you run a meetup and want to get involved, kindly get in touch.

_

About Pusher:

Pusher is a hosted service with APIs, developer tools and open source libraries that greatly simplify integrating real-time functionality into web and mobile applications. 

Pusher will automatically scale when required, removing all the pain of setting up and maintaining a secure, real-time infrastructure. 

Pusher is already trusted to do so by thousands of developers and companies like GitHub, MailChimp, the Financial Times, Buffer and many more. 

Getting started takes just a few seconds: simply go to pusher.com and create a free account. Happy hacking!
Captions: 
	00:00:00,329 --> 00:00:05,790
welcome to our talk about the last 18

00:00:03,270 --> 00:00:07,080
months singing Cody me like this is my

00:00:05,790 --> 00:00:11,790
first talk in front of a crowd this big

00:00:07,080 --> 00:00:14,099
so it's a big first for me this is less

00:00:11,790 --> 00:00:17,100
of a guide and more case study I think

00:00:14,099 --> 00:00:19,380
we did a lot of things really well few

00:00:17,100 --> 00:00:21,500
things maybe less well but the journey

00:00:19,380 --> 00:00:23,580
is almost the fun part

00:00:21,500 --> 00:00:25,439
we'll go over how the journey started

00:00:23,580 --> 00:00:27,029
and then jump ahead to the results and

00:00:25,439 --> 00:00:29,699
get a little give it a little overview

00:00:27,029 --> 00:00:32,719
of the results technologies we use in

00:00:29,699 --> 00:00:36,239
between yeah so a little bit about us

00:00:32,719 --> 00:00:38,399
were an online customer experience

00:00:36,239 --> 00:00:42,450
platform specialized in hue management

00:00:38,399 --> 00:00:43,739
and booking we are used to help a wide

00:00:42,450 --> 00:00:46,410
array of stores to better help their

00:00:43,739 --> 00:00:47,789
customers and manage their teams and if

00:00:46,410 --> 00:00:50,070
you've ever visited anyone who used

00:00:47,789 --> 00:00:53,340
stores here you probably interacted with

00:00:50,070 --> 00:00:56,039
our systems at some level a little bit

00:00:53,340 --> 00:00:58,199
about me oh because it's like context

00:00:56,039 --> 00:00:59,910
matters and I think where I was coming

00:00:58,199 --> 00:01:02,940
from when entering the company was one

00:00:59,910 --> 00:01:05,460
more unique aspects of this journey I'm

00:01:02,940 --> 00:01:08,610
an iOS developer for over seven years I

00:01:05,460 --> 00:01:12,180
started with iOS 3.0 and objective-c

00:01:08,610 --> 00:01:16,439
through Swift one two and three I joined

00:01:12,180 --> 00:01:19,490
Kodi in August 2017 and I have no prior

00:01:16,439 --> 00:01:22,650
commercial JavaScript experience at all

00:01:19,490 --> 00:01:23,070
but because every journey is a team

00:01:22,650 --> 00:01:25,070
effort

00:01:23,070 --> 00:01:26,250
I'm going to choose my partner here

00:01:25,070 --> 00:01:28,890
Daniel

00:01:26,250 --> 00:01:31,740
hey I'm done I've been at kdeeny Fanelli

00:01:28,890 --> 00:01:34,409
a year now I previously worked at spy as

00:01:31,740 --> 00:01:36,240
a full psycho engineer I started in 2014

00:01:34,409 --> 00:01:39,509
and I was introduced to record us on the

00:01:36,240 --> 00:01:46,470
web in 2015 so I joined the CDE a quite

00:01:39,509 --> 00:01:49,140
extensive knowledge on the web so you

00:01:46,470 --> 00:01:50,579
might have seen this before every

00:01:49,140 --> 00:01:52,979
business is unique unique in their

00:01:50,579 --> 00:01:56,640
product their culture their resources

00:01:52,979 --> 00:01:59,040
and their customers but he needs very

00:01:56,640 --> 00:02:00,780
much a b2b business a lot of what we

00:01:59,040 --> 00:02:03,450
produce is dictated by the businesses we

00:02:00,780 --> 00:02:04,950
interact with saying that a lot of what

00:02:03,450 --> 00:02:10,200
coding is struggle with in the past may

00:02:04,950 --> 00:02:12,500
be familiar to you this is our front end

00:02:10,200 --> 00:02:15,080
sack basically a

00:02:12,500 --> 00:02:19,130
three pillars the TV app a really light

00:02:15,080 --> 00:02:21,770
front-end app - that allows people to

00:02:19,130 --> 00:02:23,750
get into a queue and be displayed within

00:02:21,770 --> 00:02:25,730
the store we have a kiosk to allow

00:02:23,750 --> 00:02:27,800
customers to be added into a queue once

00:02:25,730 --> 00:02:30,170
they enter the store and we have a heavy

00:02:27,800 --> 00:02:31,850
queue management solution to allow the

00:02:30,170 --> 00:02:34,610
management of customers and the advisors

00:02:31,850 --> 00:02:37,010
who are managing them as you can see

00:02:34,610 --> 00:02:39,709
there is some fragmentation happening

00:02:37,010 --> 00:02:43,310
here we have a lot of different

00:02:39,709 --> 00:02:45,050
technologies in play multiple variants

00:02:43,310 --> 00:02:47,780
of the same solution some rewriting

00:02:45,050 --> 00:02:50,450
multiple times many of the kiosks for

00:02:47,780 --> 00:02:54,290
multiple times even for different

00:02:50,450 --> 00:02:56,600
customers and there's gaps in features

00:02:54,290 --> 00:02:58,220
everywhere unfortunately having to

00:02:56,600 --> 00:03:01,160
maintain these so many different

00:02:58,220 --> 00:03:02,900
products no continues delivery or

00:03:01,160 --> 00:03:04,959
continuous integration system setup

00:03:02,900 --> 00:03:09,080
sadly so it was a lot to take in

00:03:04,959 --> 00:03:11,780
starting out we also were quite dated

00:03:09,080 --> 00:03:14,120
visually and structurally at least from

00:03:11,780 --> 00:03:18,110
the iOS end the apps are built in

00:03:14,120 --> 00:03:20,600
derivations of MVC or MVP with heavy

00:03:18,110 --> 00:03:23,540
activities and heavy controllers and no

00:03:20,600 --> 00:03:24,500
real test coverage to speak up there

00:03:23,540 --> 00:03:27,019
were also a little bit dull and

00:03:24,500 --> 00:03:28,430
inconsistent in design and they were

00:03:27,019 --> 00:03:30,140
increasingly out of sync with what was

00:03:28,430 --> 00:03:32,269
happening on the web experience as we

00:03:30,140 --> 00:03:33,860
moved forward which didn't really do as

00:03:32,269 --> 00:03:36,790
many favors when we went out and demoed

00:03:33,860 --> 00:03:40,190
the products to prospective buyers so

00:03:36,790 --> 00:03:43,100
that was an issue as well as the

00:03:40,190 --> 00:03:46,310
front-end team was quite small it was me

00:03:43,100 --> 00:03:49,640
as the iOS developer when I joined one

00:03:46,310 --> 00:03:52,310
Android developer and two web developers

00:03:49,640 --> 00:03:58,820
so mom offload feed on the grounds I was

00:03:52,310 --> 00:04:02,060
the de facto leader on my platform so we

00:03:58,820 --> 00:04:04,100
have a lot of issues predominantly code

00:04:02,060 --> 00:04:08,570
review so we didn't really have much

00:04:04,100 --> 00:04:09,980
code review going on across teams I mean

00:04:08,570 --> 00:04:12,620
some of the teams would speak some of

00:04:09,980 --> 00:04:14,480
the languages some new Java or Swift's

00:04:12,620 --> 00:04:17,840
but nothing really new the domain or the

00:04:14,480 --> 00:04:19,250
platform iOS and Android code bases kind

00:04:17,840 --> 00:04:21,109
of reflected this anyone who's where

00:04:19,250 --> 00:04:23,360
on an app of any scale can see where

00:04:21,109 --> 00:04:25,100
this becomes a problem with wildly

00:04:23,360 --> 00:04:27,800
different styles and approaches skip

00:04:25,100 --> 00:04:30,350
from feature of the feature we had a

00:04:27,800 --> 00:04:33,430
high level of coat application we would

00:04:30,350 --> 00:04:36,800
be solving the same problems every week

00:04:33,430 --> 00:04:38,870
in different ways some solutions could

00:04:36,800 --> 00:04:41,200
be transpiled between platforms others

00:04:38,870 --> 00:04:43,640
were incredibly platform dependent and

00:04:41,200 --> 00:04:46,970
and I'll see we were wasting an awful

00:04:43,640 --> 00:04:49,190
lot of time here we had very few code

00:04:46,970 --> 00:04:51,260
owners so when a front-end developer

00:04:49,190 --> 00:04:53,930
left he would usually take with him

00:04:51,260 --> 00:04:55,640
almost domain-specific knowledge as a

00:04:53,930 --> 00:04:57,830
result we had a lot of dark areas in the

00:04:55,640 --> 00:04:59,480
applications and when a bug happened you

00:04:57,830 --> 00:05:03,440
were pretty much had to figure it out

00:04:59,480 --> 00:05:05,300
yourself and feature parody was probably

00:05:03,440 --> 00:05:08,930
the biggest problem across all of our

00:05:05,300 --> 00:05:11,780
platforms we were out of sync frequently

00:05:08,930 --> 00:05:13,160
the web was usually ahead of most of the

00:05:11,780 --> 00:05:15,440
native platforms just by virtue of

00:05:13,160 --> 00:05:17,090
having a larger team but the features

00:05:15,440 --> 00:05:20,570
unfortunately would be presented to

00:05:17,090 --> 00:05:23,390
prospective businesses as platform

00:05:20,570 --> 00:05:29,090
agnostic which was a little bit far from

00:05:23,390 --> 00:05:30,740
the truth I think this this quote kind

00:05:29,090 --> 00:05:33,860
of applies to a lot of developers with

00:05:30,740 --> 00:05:36,380
my kind of backgrounds and I think a lot

00:05:33,860 --> 00:05:39,470
of work was done with dealing with this

00:05:36,380 --> 00:05:41,780
- Evan in mind it's a common cognitive

00:05:39,470 --> 00:05:43,250
bias where I suppose it's tempting if

00:05:41,780 --> 00:05:47,690
the only tool you have is a hammer to

00:05:43,250 --> 00:05:49,010
treat everything as a nail developers

00:05:47,690 --> 00:05:50,630
use the tools that were comfortable with

00:05:49,010 --> 00:05:53,750
to try and improve efficiency where they

00:05:50,630 --> 00:05:56,090
could we did a lot of rewrites we

00:05:53,750 --> 00:05:58,940
refactor code bases multiple times we

00:05:56,090 --> 00:06:00,979
did common SDK libraries for Android and

00:05:58,940 --> 00:06:04,310
iOS to try and improve efficiency and

00:06:00,979 --> 00:06:08,450
code reuse but this actually provide

00:06:04,310 --> 00:06:09,350
value to the business I've always

00:06:08,450 --> 00:06:10,910
believed that you should use the

00:06:09,350 --> 00:06:13,070
appropriate tool but give a problem I no

00:06:10,910 --> 00:06:14,930
longer believe that a native single

00:06:13,070 --> 00:06:18,590
platform approach applied could you use

00:06:14,930 --> 00:06:21,919
case so I don't really need to sell

00:06:18,590 --> 00:06:23,900
react native to this room as you know

00:06:21,919 --> 00:06:26,870
it's a not so new at the stage framework

00:06:23,900 --> 00:06:28,520
that Souls a lot of these problems I've

00:06:26,870 --> 00:06:30,210
known about for a lot of quite a while

00:06:28,520 --> 00:06:32,160
and I

00:06:30,210 --> 00:06:35,250
a lot of approaches before it PhoneGap

00:06:32,160 --> 00:06:37,230
Cordova as I'm Renton it got the

00:06:35,250 --> 00:06:39,600
abstraction and performance just right

00:06:37,230 --> 00:06:42,090
Houdini didn't really have a complex UI

00:06:39,600 --> 00:06:44,610
or requirements for a bespoke platform

00:06:42,090 --> 00:06:46,050
experience so I feel even if we did it

00:06:44,610 --> 00:06:47,730
really poorly we'd still get it out

00:06:46,050 --> 00:06:52,170
solution that was better than what we

00:06:47,730 --> 00:06:54,720
were doing at the moment so yeah you

00:06:52,170 --> 00:06:56,160
really great idea you think it's gonna

00:06:54,720 --> 00:06:58,800
do a really great job in the business

00:06:56,160 --> 00:07:01,800
how do you convince them to use

00:06:58,800 --> 00:07:03,540
something really great so I don't really

00:07:01,800 --> 00:07:05,070
practice hike driven development I

00:07:03,540 --> 00:07:08,370
wasn't going to tell them this is

00:07:05,070 --> 00:07:09,780
awesome and then walk away I would have

00:07:08,370 --> 00:07:11,640
had to I realize I had to do a lot of

00:07:09,780 --> 00:07:14,250
work to validate this assumption and get

00:07:11,640 --> 00:07:17,610
buy-in from the business I had to really

00:07:14,250 --> 00:07:22,290
become a champion for this approach so

00:07:17,610 --> 00:07:24,530
what I do I did my research I had to

00:07:22,290 --> 00:07:28,380
read up on a lot of best practices and

00:07:24,530 --> 00:07:30,240
it took a lot of time I had to learn a

00:07:28,380 --> 00:07:32,070
lot of new languages and approaches I

00:07:30,240 --> 00:07:34,590
really dealt with before professionally

00:07:32,070 --> 00:07:37,350
but you know I like to learn so I gave

00:07:34,590 --> 00:07:40,230
it a shot from everything I had learned

00:07:37,350 --> 00:07:42,060
I everything I had read stopping the

00:07:40,230 --> 00:07:44,550
most simple instance of react native

00:07:42,060 --> 00:07:46,590
with vanilla Jas wasn't really gonna cut

00:07:44,550 --> 00:07:48,810
it at the scale we were using in our

00:07:46,590 --> 00:07:52,620
current applications so I had to pick up

00:07:48,810 --> 00:07:57,090
a lot es6 reacts react native type

00:07:52,620 --> 00:08:00,710
scripts flux state management with Redux

00:07:57,090 --> 00:08:02,760
and reacts observable the middleware I

00:08:00,710 --> 00:08:04,710
watched a lot of presentations very

00:08:02,760 --> 00:08:06,810
similar to this one on how react native

00:08:04,710 --> 00:08:09,750
had benefited very similar teams to mine

00:08:06,810 --> 00:08:13,590
in the past so what I do next

00:08:09,750 --> 00:08:15,660
I talked to my team I feel like it's

00:08:13,590 --> 00:08:17,220
hard to get backing from management and

00:08:15,660 --> 00:08:19,200
you haven't discussed the problem with

00:08:17,220 --> 00:08:21,510
your colleagues and they might have

00:08:19,200 --> 00:08:24,270
views or perspectives you might might

00:08:21,510 --> 00:08:26,100
not consider before so over drinks and

00:08:24,270 --> 00:08:29,310
over lunch I talked with my develop

00:08:26,100 --> 00:08:30,690
develop developers and found that a lot

00:08:29,310 --> 00:08:31,890
of the problems that I saw they were

00:08:30,690 --> 00:08:33,270
already aware of and they were

00:08:31,890 --> 00:08:35,220
incredibly excited about the per

00:08:33,270 --> 00:08:36,860
approach I was proposing and they were

00:08:35,220 --> 00:08:39,620
actually really helpful

00:08:36,860 --> 00:08:42,260
in abeyance so that was that was one of

00:08:39,620 --> 00:08:45,800
the biggest things I'd advocate build a

00:08:42,260 --> 00:08:47,149
slide deck be professional put some

00:08:45,800 --> 00:08:49,160
slides together highlighting all the

00:08:47,149 --> 00:08:51,320
amazing things that this platform can do

00:08:49,160 --> 00:08:53,420
and all the things that you hope it will

00:08:51,320 --> 00:08:55,820
do for your team very similar to this

00:08:53,420 --> 00:08:58,060
and schedule meeting with your manager

00:08:55,820 --> 00:09:02,630
formalize it to get it on the books and

00:08:58,060 --> 00:09:05,390
and go from there be pragmatic and

00:09:02,630 --> 00:09:07,279
honest don't promise the moon the be

00:09:05,390 --> 00:09:10,010
honest that no matter where this goes

00:09:07,279 --> 00:09:12,079
and how well you do it you will give up

00:09:10,010 --> 00:09:13,519
some level of feature developments and

00:09:12,079 --> 00:09:17,060
velocity in order to make this

00:09:13,519 --> 00:09:19,459
transition and it's a long-term

00:09:17,060 --> 00:09:21,050
investment versus a short-term cost in

00:09:19,459 --> 00:09:24,560
the business and in your development

00:09:21,050 --> 00:09:27,740
culture and then build a prototype you

00:09:24,560 --> 00:09:29,060
can really speak the moon and but until

00:09:27,740 --> 00:09:31,310
you actually put something out there

00:09:29,060 --> 00:09:33,769
that showcases how amazing this is that

00:09:31,310 --> 00:09:35,779
they can see and use and feel it's

00:09:33,769 --> 00:09:37,430
really not gonna it's really not gonna

00:09:35,779 --> 00:09:38,390
pick up a traction and I don't think

00:09:37,430 --> 00:09:41,420
anyone's gonna believe that you can

00:09:38,390 --> 00:09:44,240
actually execute on it so the first step

00:09:41,420 --> 00:09:46,010
was to find a prototype that would

00:09:44,240 --> 00:09:48,350
actually showcase something we were

00:09:46,010 --> 00:09:50,510
struggling with and demo it and

00:09:48,350 --> 00:09:52,519
something that wasn't gonna take months

00:09:50,510 --> 00:09:57,440
and months to get ready in this case it

00:09:52,519 --> 00:09:59,750
was the TV app which is this which is a

00:09:57,440 --> 00:10:01,279
gift that's on repeat at the moment as

00:09:59,750 --> 00:10:03,019
you can see it's probably the most

00:10:01,279 --> 00:10:04,699
simple UI you can imagine we have

00:10:03,019 --> 00:10:06,740
customers waiting to be served on the

00:10:04,699 --> 00:10:08,540
lefts and customers being served in the

00:10:06,740 --> 00:10:10,519
right kind of events that basically

00:10:08,540 --> 00:10:13,940
happens periodically to move a customer

00:10:10,519 --> 00:10:16,149
from the left to the right and this is

00:10:13,940 --> 00:10:18,410
just following the API periodically and

00:10:16,149 --> 00:10:21,050
taking stage changes into accounts it's

00:10:18,410 --> 00:10:23,779
got only one screen doesn't really have

00:10:21,050 --> 00:10:26,180
any animations a big primary animation

00:10:23,779 --> 00:10:28,399
at the bottom but this is pretty much

00:10:26,180 --> 00:10:32,329
what we demoed it took about two weeks

00:10:28,399 --> 00:10:34,339
to produce and I was really happy with

00:10:32,329 --> 00:10:36,949
it I wrapped it with react native web

00:10:34,339 --> 00:10:39,290
and put in an electron container so we

00:10:36,949 --> 00:10:40,410
could actually deploy it on web and on

00:10:39,290 --> 00:10:42,870
Windows and

00:10:40,410 --> 00:10:46,200
Mac OS and all native iOS and Android

00:10:42,870 --> 00:10:47,880
and it was something I truly give to the

00:10:46,200 --> 00:10:50,370
business and say this can be deployed

00:10:47,880 --> 00:10:52,400
anywhere on whatever technology your

00:10:50,370 --> 00:10:55,560
clients are using and this will replace

00:10:52,400 --> 00:11:03,720
pretty much all the tdap repos and do so

00:10:55,560 --> 00:11:04,980
much more so naturally they liked it the

00:11:03,720 --> 00:11:06,990
business ended up loving what we were

00:11:04,980 --> 00:11:09,450
promising they really saw the potential

00:11:06,990 --> 00:11:11,760
in building a more unified development

00:11:09,450 --> 00:11:13,440
team more than anything because culture

00:11:11,760 --> 00:11:15,210
is important and communication is

00:11:13,440 --> 00:11:17,670
important in any way we can foster and

00:11:15,210 --> 00:11:19,680
improve that that's awesome so they

00:11:17,670 --> 00:11:22,500
really got really got behind the idea

00:11:19,680 --> 00:11:25,500
and gave me some time to build out more

00:11:22,500 --> 00:11:28,260
of their systems the only question left

00:11:25,500 --> 00:11:30,990
was whether it would be green fields or

00:11:28,260 --> 00:11:32,580
brown fields I was honestly scared on

00:11:30,990 --> 00:11:34,590
the previous presentation whether he'd

00:11:32,580 --> 00:11:36,450
actually say there's no reason to do

00:11:34,590 --> 00:11:38,460
green field Brown field is amazing but

00:11:36,450 --> 00:11:40,950
as I think you most of you saw it's

00:11:38,460 --> 00:11:44,190
quite complicated once you start doing

00:11:40,950 --> 00:11:47,690
various things with it my biggest my

00:11:44,190 --> 00:11:51,090
biggest question my biggest thing was

00:11:47,690 --> 00:11:53,280
basically diluting the benefits of react

00:11:51,090 --> 00:11:55,290
native by having a poor a while to

00:11:53,280 --> 00:11:59,460
support three platforms instead of just

00:11:55,290 --> 00:12:01,170
one and I feel it's it's a this question

00:11:59,460 --> 00:12:03,450
is very personal question to the company

00:12:01,170 --> 00:12:05,220
and what they expect out of the product

00:12:03,450 --> 00:12:10,170
and how how you going to disrupt your

00:12:05,220 --> 00:12:11,760
customers in doing this transition so in

00:12:10,170 --> 00:12:13,230
our case the existing iOS and Android

00:12:11,760 --> 00:12:14,790
versions of quick on the Kissimmee

00:12:13,230 --> 00:12:18,020
mobile app were both out of sync with

00:12:14,790 --> 00:12:20,190
web on a functionality and visual level

00:12:18,020 --> 00:12:22,320
they didn't really have solid test

00:12:20,190 --> 00:12:25,020
coverage and the teams didn't really

00:12:22,320 --> 00:12:27,090
enjoy interacting with them I helped

00:12:25,020 --> 00:12:28,860
multiple native module bridges with just

00:12:27,090 --> 00:12:31,920
increased complexity in both projects

00:12:28,860 --> 00:12:34,830
projects and I think the benefit will be

00:12:31,920 --> 00:12:38,150
somewhat diluted but in the end a would

00:12:34,830 --> 00:12:38,150
still be able to ship features right

00:12:38,450 --> 00:12:42,960
thankfully in retrospect they they kind

00:12:41,490 --> 00:12:48,210
of agreed that greenfield would be the

00:12:42,960 --> 00:12:49,440
way to go for simplicity sake and iOS

00:12:48,210 --> 00:12:51,810
would effectively go into maintenance

00:12:49,440 --> 00:12:52,940
mode and Android would continue shipping

00:12:51,810 --> 00:12:55,880
features but as

00:12:52,940 --> 00:12:58,640
our base over time we would open hiring

00:12:55,880 --> 00:13:01,490
for new jazz roles and hopefully ramp up

00:12:58,640 --> 00:13:04,820
products quickly and at this point I

00:13:01,490 --> 00:13:07,400
hand you over to Daniel who will tell

00:13:04,820 --> 00:13:10,490
you what happened next and whether we

00:13:07,400 --> 00:13:14,390
succeeded or failed 18 months later I'm

00:13:10,490 --> 00:13:17,510
stayin up so how can you have adopted

00:13:14,390 --> 00:13:19,940
react native I joined Feeny later on

00:13:17,510 --> 00:13:21,650
after their adoption and one thing which

00:13:19,940 --> 00:13:23,690
really attracted me to CUNY was the

00:13:21,650 --> 00:13:25,220
technologies that they chose and I feel

00:13:23,690 --> 00:13:27,560
this is like a major benefit which has

00:13:25,220 --> 00:13:31,310
helped them deliver the products David

00:13:27,560 --> 00:13:33,140
has talked about so I feel by Kadena

00:13:31,310 --> 00:13:35,410
utilizing rep native it's really allowed

00:13:33,140 --> 00:13:37,460
them to rapidly develop the products

00:13:35,410 --> 00:13:41,570
they must thought about and get them

00:13:37,460 --> 00:13:44,000
delivered to the clients currently our

00:13:41,570 --> 00:13:45,740
products are deployed globally so we

00:13:44,000 --> 00:13:48,290
utilize the specialization like quite

00:13:45,740 --> 00:13:55,900
heavily our products deployed in Latin

00:13:48,290 --> 00:13:55,900
America India in Asia and also in Europe

00:13:55,960 --> 00:14:00,290
so we were able to deploy our TV

00:13:58,790 --> 00:14:02,570
application within three months of

00:14:00,290 --> 00:14:05,480
development giving giving it to our

00:14:02,570 --> 00:14:08,780
clients and learning their feedback

00:14:05,480 --> 00:14:11,350
really in addition to this Arceus was

00:14:08,780 --> 00:14:14,180
deployed a few months off there

00:14:11,350 --> 00:14:16,130
one major benefit of being able to get

00:14:14,180 --> 00:14:18,710
this technology out to the client so it

00:14:16,130 --> 00:14:20,120
was it gave gave our business a lot of

00:14:18,710 --> 00:14:22,580
confidence in rehab natives the

00:14:20,120 --> 00:14:24,440
technology they saw it work they start

00:14:22,580 --> 00:14:28,340
using they saw clients using it at a

00:14:24,440 --> 00:14:30,830
scale from hiring perspective as well it

00:14:28,340 --> 00:14:33,560
really allowed kidding me to hire we're

00:14:30,830 --> 00:14:36,320
kind of broaden the horizon for the hire

00:14:33,560 --> 00:14:39,020
people with different backgrounds myself

00:14:36,320 --> 00:14:41,800
I came as a full stack web developer

00:14:39,020 --> 00:14:47,390
didn't have much experience on mobile

00:14:41,800 --> 00:14:50,120
but I was easily product so as I said

00:14:47,390 --> 00:14:52,940
react native was a major benefit in

00:14:50,120 --> 00:14:54,530
terms of rapidly develop their

00:14:52,940 --> 00:14:57,339
applications get them on to their

00:14:54,530 --> 00:14:59,720
clients and then get feedback in

00:14:57,339 --> 00:15:01,250
addition to that place Rick was used I

00:14:59,720 --> 00:15:03,140
fell touch brick was amazing when I

00:15:01,250 --> 00:15:04,850
first joined uni the fact that they were

00:15:03,140 --> 00:15:06,600
using code for it's the fact that they

00:15:04,850 --> 00:15:08,490
hoped everything allowed me to come from

00:15:06,600 --> 00:15:10,829
Basin just learn it I could learn the

00:15:08,490 --> 00:15:15,899
main objects the ubiquitous language was

00:15:10,829 --> 00:15:17,519
used all over the place so I easily in

00:15:15,899 --> 00:15:19,170
addition to that I was able to make key

00:15:17,519 --> 00:15:23,519
changes like I could I could rename

00:15:19,170 --> 00:15:25,680
things I could refactor stuff early

00:15:23,519 --> 00:15:27,420
feedback and stuff broke and this gives

00:15:25,680 --> 00:15:32,399
me confidence as an engineer that my

00:15:27,420 --> 00:15:34,319
changes are working in addition to that

00:15:32,399 --> 00:15:36,860
it allows you to write less tests so I

00:15:34,319 --> 00:15:39,720
found myself write us tests which would

00:15:36,860 --> 00:15:41,579
test us certainly the shape of objects

00:15:39,720 --> 00:15:44,940
which I would probably have to do just

00:15:41,579 --> 00:15:46,079
vanilla JavaScript so typescript gives

00:15:44,940 --> 00:15:49,620
me this confidence that the shape of

00:15:46,079 --> 00:15:51,480
things are intact and on top of that not

00:15:49,620 --> 00:15:57,899
sir not forget the inspiration with like

00:15:51,480 --> 00:16:01,399
BS code and other episodes so adopting

00:15:57,899 --> 00:16:06,600
react and in addition to that reacts has

00:16:01,399 --> 00:16:12,959
implicitly implicitly allowed us to

00:16:06,600 --> 00:16:14,519
inherit programming and I feel these two

00:16:12,959 --> 00:16:16,769
programming paradigms have really

00:16:14,519 --> 00:16:17,759
allowed our code base to become a lot

00:16:16,769 --> 00:16:20,699
more easy to reason about

00:16:17,759 --> 00:16:22,399
I definitely feel the learning codes of

00:16:20,699 --> 00:16:24,870
a lot harder but when you're describing

00:16:22,399 --> 00:16:27,810
your code your code in a decorative

00:16:24,870 --> 00:16:29,550
former describing what the things should

00:16:27,810 --> 00:16:32,339
do rather than how it should do it makes

00:16:29,550 --> 00:16:34,500
things a lot easier to maintain in

00:16:32,339 --> 00:16:36,420
addition to that testing is like super

00:16:34,500 --> 00:16:38,100
easy with pure functions the literally

00:16:36,420 --> 00:16:39,689
all we're doing is testing the inputs

00:16:38,100 --> 00:16:41,910
and outputs of things we don't have to

00:16:39,689 --> 00:16:44,730
worry about setting up the context of

00:16:41,910 --> 00:16:47,630
the text side-effects really get pushed

00:16:44,730 --> 00:16:47,630
to the side of your application

00:16:49,100 --> 00:16:55,290
continuous integration and continuous

00:16:50,730 --> 00:16:57,959
deployment we have decided to area marks

00:16:55,290 --> 00:16:59,430
off App Center we were originally bit

00:16:57,959 --> 00:17:02,209
right but we found the offering from

00:16:59,430 --> 00:17:04,589
Microsoft was a lot more centralized

00:17:02,209 --> 00:17:06,089
utilizing accent so perfectly give us a

00:17:04,589 --> 00:17:09,209
lot more than just continuous

00:17:06,089 --> 00:17:10,650
integration and continuous deployment it

00:17:09,209 --> 00:17:12,750
allows us to you to monitor our

00:17:10,650 --> 00:17:16,020
application and production along with

00:17:12,750 --> 00:17:17,909
getting an analytics back our continuous

00:17:16,020 --> 00:17:19,830
integration set up actually consists of

00:17:17,909 --> 00:17:21,930
two CR cycles

00:17:19,830 --> 00:17:24,180
we have 1ci cycle which runs on the dead

00:17:21,930 --> 00:17:26,340
bucket and bucket pipelines this gives

00:17:24,180 --> 00:17:27,900
us really early immediate feedback on

00:17:26,340 --> 00:17:30,030
the touch crypt and my JavaScript

00:17:27,900 --> 00:17:31,920
context in the application so we execute

00:17:30,030 --> 00:17:34,440
the typescript compiler we execute a

00:17:31,920 --> 00:17:35,790
soda cube or lilt err along with just

00:17:34,440 --> 00:17:37,620
and this gives us like really early

00:17:35,790 --> 00:17:39,390
feedback that everything within the

00:17:37,620 --> 00:17:41,850
context is good

00:17:39,390 --> 00:17:44,130
later on App Center will then kick off

00:17:41,850 --> 00:17:46,080
that gives us our slower feedback in

00:17:44,130 --> 00:17:49,140
terms of the platform specific bills

00:17:46,080 --> 00:17:57,180
which like sometimes takes up to 20

00:17:49,140 --> 00:17:59,220
minutes so with the higher ability by

00:17:57,180 --> 00:18:02,820
adopting by adopting wrap native michael

00:17:59,220 --> 00:18:04,470
z AA higher ability is has improved and

00:18:02,820 --> 00:18:06,690
with this we've been able to grow the

00:18:04,470 --> 00:18:08,220
capacity of RT none of this would have

00:18:06,690 --> 00:18:14,270
been possible with the previous slide

00:18:08,220 --> 00:18:16,320
which they've demonstrated cool so

00:18:14,270 --> 00:18:18,680
touching on state management our

00:18:16,320 --> 00:18:23,160
application is super complex

00:18:18,680 --> 00:18:26,850
we utilize the ups to manage state we

00:18:23,160 --> 00:18:28,500
fill Redux is amazing it centralizes our

00:18:26,850 --> 00:18:31,410
application state it makes things super

00:18:28,500 --> 00:18:34,470
deterministic when it comes to debugging

00:18:31,410 --> 00:18:39,030
and essentially it's a source of truth

00:18:34,470 --> 00:18:42,030
for everything some really cool features

00:18:39,030 --> 00:18:43,500
you can perform over adapters you can

00:18:42,030 --> 00:18:46,080
like serialize your entire application

00:18:43,500 --> 00:18:48,060
state and install that you might local

00:18:46,080 --> 00:18:49,500
storage and then you can rehydrate your

00:18:48,060 --> 00:18:51,600
application say for example we need a

00:18:49,500 --> 00:18:52,980
restart you can close down the

00:18:51,600 --> 00:18:54,060
implication restart it and just

00:18:52,980 --> 00:18:58,680
rehydrate you're safe

00:18:54,060 --> 00:19:01,770
as it was previously prior to close in

00:18:58,680 --> 00:19:04,490
addition to this you get my debugging so

00:19:01,770 --> 00:19:06,600
the develop developer experience of

00:19:04,490 --> 00:19:08,610
debugging is where you wake up and

00:19:06,600 --> 00:19:14,250
things are way more deterministic it's a

00:19:08,610 --> 00:19:16,560
reason for handling of side effects we

00:19:14,250 --> 00:19:18,180
use Redux observable and with this we

00:19:16,560 --> 00:19:20,070
implicitly inherit Borak with the

00:19:18,180 --> 00:19:24,120
aurochs yes library which is incredibly

00:19:20,070 --> 00:19:26,550
powerful we found that when it comes to

00:19:24,120 --> 00:19:29,580
implementing it just like debouncing and

00:19:26,550 --> 00:19:34,139
retry mechanisms or X give us a sign

00:19:29,580 --> 00:19:36,119
about us having to do much and the fact

00:19:34,139 --> 00:19:39,059
that we treat treat our relapse actions

00:19:36,119 --> 00:19:40,679
as a stream as an observable stream this

00:19:39,059 --> 00:19:46,169
allows us to utilize like a higher

00:19:40,679 --> 00:19:48,239
functions which come out of rxjs so if I

00:19:46,169 --> 00:19:50,639
was to ask you to write a function to

00:19:48,239 --> 00:19:53,460
polar them or an interval we've reached

00:19:50,639 --> 00:19:55,619
our logic with a certain set of actions

00:19:53,460 --> 00:19:57,509
and constant when a certain set of

00:19:55,619 --> 00:19:59,039
actions dispatch like how many lines of

00:19:57,509 --> 00:20:00,179
code do you think that is like how much

00:19:59,039 --> 00:20:03,149
can you go do you think you'd have to

00:20:00,179 --> 00:20:08,039
write there so we we quite heavily

00:20:03,149 --> 00:20:11,369
depend upon like polling love it so so

00:20:08,039 --> 00:20:12,149
this is effectively like we this epic

00:20:11,369 --> 00:20:14,369
lip

00:20:12,149 --> 00:20:15,989
listens for actions of type Q stop and

00:20:14,369 --> 00:20:18,869
then we make piece of the switch map

00:20:15,989 --> 00:20:21,419
which is like a council effect and then

00:20:18,869 --> 00:20:24,960
we function which returns an observable

00:20:21,419 --> 00:20:28,409
also it takes in an observable which

00:20:24,960 --> 00:20:30,929
effectively calls the endpoint we have

00:20:28,409 --> 00:20:32,820
the ability to retry and also perform

00:20:30,929 --> 00:20:35,309
additional actions on that and then we

00:20:32,820 --> 00:20:36,840
have the ability to take until which

00:20:35,309 --> 00:20:41,850
will which will which will cancel the

00:20:36,840 --> 00:20:44,009
street testing so now that we've got got

00:20:41,850 --> 00:20:45,869
a bigger team we have more capacity to

00:20:44,009 --> 00:20:47,220
do really cool things like testing we

00:20:45,869 --> 00:20:48,629
can grow the components on our

00:20:47,220 --> 00:20:51,389
application we can have confidence that

00:20:48,629 --> 00:20:54,059
things worked one thing which we've

00:20:51,389 --> 00:20:55,440
adopted is the testing pyramid I don't

00:20:54,059 --> 00:20:57,450
know if anyone's really researched into

00:20:55,440 --> 00:20:59,789
this but actually what the testing

00:20:57,450 --> 00:21:02,279
increment does is it divides up your

00:20:59,789 --> 00:21:05,909
different categories of tests into this

00:21:02,279 --> 00:21:07,889
pyramid things the recipes on the bottom

00:21:05,909 --> 00:21:10,379
effectively are a lot more cheaper to

00:21:07,889 --> 00:21:11,609
write them up faster to run whereas

00:21:10,379 --> 00:21:13,230
things at the top are a lot more

00:21:11,609 --> 00:21:15,509
expensive to create and they're they're

00:21:13,230 --> 00:21:17,249
a lot more flaky here so effectively

00:21:15,509 --> 00:21:18,629
what we try to learn on code base is we

00:21:17,249 --> 00:21:23,609
try to keep the ratio in unit tests

00:21:18,629 --> 00:21:26,249
higher than protests in addition to that

00:21:23,609 --> 00:21:28,289
I mentioned we use deaths we try to use

00:21:26,249 --> 00:21:30,590
kind of like BDD star language so we try

00:21:28,289 --> 00:21:33,179
to utilize the first language within

00:21:30,590 --> 00:21:36,710
we've got our tests so you can see it's

00:21:33,179 --> 00:21:39,600
like super high high level English so

00:21:36,710 --> 00:21:41,190
we're using the main the main language

00:21:39,600 --> 00:21:43,620
the main words

00:21:41,190 --> 00:21:45,420
and we tried structural tests using like

00:21:43,620 --> 00:21:47,460
different when them so given we have

00:21:45,420 --> 00:21:51,900
some context when we execute an action

00:21:47,460 --> 00:21:53,790
then we expect this result and as you

00:21:51,900 --> 00:21:54,660
see this is testing a reducer so this is

00:21:53,790 --> 00:21:57,000
a keel function

00:21:54,660 --> 00:21:59,580
all it is is inputs and outputs there's

00:21:57,000 --> 00:22:04,800
no more like crazy side effect the stuff

00:21:59,580 --> 00:22:06,980
we have to setup cool so happy goodbyes

00:22:04,800 --> 00:22:10,650
so we have no more heart disease on

00:22:06,980 --> 00:22:11,970
different platforms this is enabled

00:22:10,650 --> 00:22:14,250
engineers who have experience with

00:22:11,970 --> 00:22:16,260
JavaScript to jump on board and start

00:22:14,250 --> 00:22:19,620
contributing in addition setup they can

00:22:16,260 --> 00:22:21,870
they can start craving reviews so he got

00:22:19,620 --> 00:22:26,190
instead of just having one develop on

00:22:21,870 --> 00:22:28,170
like Iowa or Swift we're now getting

00:22:26,190 --> 00:22:29,760
more engineers contributing back to poor

00:22:28,170 --> 00:22:34,620
questions or code base effectively

00:22:29,760 --> 00:22:38,340
making them more healthy so with this

00:22:34,620 --> 00:22:40,380
like a pool of engineers we can jump on

00:22:38,340 --> 00:22:44,480
to doing more cool things such as

00:22:40,380 --> 00:22:44,480
testing implementing analytics which is

00:22:47,420 --> 00:22:53,370
so this is kind of our technologies like

00:22:50,820 --> 00:22:55,080
now it's a lot more consolidated you can

00:22:53,370 --> 00:22:57,390
see the TDI from the kiosk both make use

00:22:55,080 --> 00:23:00,900
of read native they also use write

00:22:57,390 --> 00:23:02,250
native web the humanity product consists

00:23:00,900 --> 00:23:04,440
of a web application on a mobile

00:23:02,250 --> 00:23:06,690
application on the web application it

00:23:04,440 --> 00:23:09,150
uses a hybrid approach of angular and

00:23:06,690 --> 00:23:15,330
react in addition to the mobile

00:23:09,150 --> 00:23:16,620
application using just react so I tell

00:23:15,330 --> 00:23:19,320
you what the team looked like before so

00:23:16,620 --> 00:23:20,760
this is what we look like now so we're

00:23:19,320 --> 00:23:25,800
eight developers who can all contribute

00:23:20,760 --> 00:23:27,660
to this product so what it's also

00:23:25,800 --> 00:23:29,670
allowed to do is it allowed us to

00:23:27,660 --> 00:23:32,160
structure our teams to be more product

00:23:29,670 --> 00:23:34,260
and feature focused as opposed to just

00:23:32,160 --> 00:23:39,480
being a team specializing there's a

00:23:34,260 --> 00:23:40,830
platform possibly our team really loved

00:23:39,480 --> 00:23:43,170
working over at native and the associate

00:23:40,830 --> 00:23:44,550
associated technologies the experience

00:23:43,170 --> 00:23:46,500
has improved and the tons of

00:23:44,550 --> 00:23:47,670
implementing features getting features

00:23:46,500 --> 00:23:51,060
up the box such as hot module

00:23:47,670 --> 00:23:51,840
replacement is like amazing time travel

00:23:51,060 --> 00:23:54,840
with you bugging you as I've mentioned

00:23:51,840 --> 00:23:56,670
before cool so I'm going

00:23:54,840 --> 00:23:58,200
to give you a demo of the application

00:23:56,670 --> 00:24:00,720
when you've literally just released

00:23:58,200 --> 00:24:02,910
today I have to do a kind of transition

00:24:00,720 --> 00:24:07,160
over onto the iPad said okay it was

00:24:02,910 --> 00:24:09,780
really bad okay cool so this is DVD so

00:24:07,160 --> 00:24:13,460
what this product does is it will get

00:24:09,780 --> 00:24:17,130
deployed into spores around the world

00:24:13,460 --> 00:24:21,120
who deal with customers those spores

00:24:17,130 --> 00:24:23,580
will consist of a concierge we were

00:24:21,120 --> 00:24:26,790
there to greet their customers the

00:24:23,580 --> 00:24:29,400
advisers and the concierge will be using

00:24:26,790 --> 00:24:30,840
this application so you can see where

00:24:29,400 --> 00:24:32,070
we're currently on the login screen so

00:24:30,840 --> 00:24:36,050
you've got kind of like an overview of

00:24:32,070 --> 00:24:38,400
what what what Melissa's the product has

00:24:36,050 --> 00:24:40,920
mean but I can remember the option which

00:24:38,400 --> 00:24:42,930
makes use of relapse persist so it's

00:24:40,920 --> 00:24:47,400
like super easy to tell like the stall

00:24:42,930 --> 00:24:48,900
that state in my local storage so this

00:24:47,400 --> 00:24:51,300
is effectively the key screen the

00:24:48,900 --> 00:24:53,370
concierge war advisor can make use of

00:24:51,300 --> 00:24:54,960
this screen when customers are coming

00:24:53,370 --> 00:24:57,090
into that store so how the customer

00:24:54,960 --> 00:24:59,340
comes into that store they can either

00:24:57,090 --> 00:25:00,810
add a customer to a key or they can

00:24:59,340 --> 00:25:03,840
create booking so for example if I

00:25:00,810 --> 00:25:04,830
create a booking they are presented with

00:25:03,840 --> 00:25:06,330
a list of products

00:25:04,830 --> 00:25:09,120
I can then go ahead and select the

00:25:06,330 --> 00:25:15,030
product and book this customer in for a

00:25:09,120 --> 00:25:17,160
booking so if I look can the select

00:25:15,030 --> 00:25:19,860
 spot and then the advisor I want

00:25:17,160 --> 00:25:22,820
to assignment II I think I just become

00:25:19,860 --> 00:25:25,710
unavailable in the phone to someone else

00:25:22,820 --> 00:25:30,060
and so now I'm presented with a form so

00:25:25,710 --> 00:25:33,360
I can input some customer data and then

00:25:30,060 --> 00:25:35,970
go ahead and so all of the navigation

00:25:33,360 --> 00:25:38,430
you're seeing here is utilizing react

00:25:35,970 --> 00:25:40,950
navigation so we decided to go made a

00:25:38,430 --> 00:25:42,450
platform agnostic navigation library we

00:25:40,950 --> 00:25:42,900
were pretty cruisy using a library from

00:25:42,450 --> 00:25:45,020
Wix

00:25:42,900 --> 00:25:49,740
but we found that how to many kind of

00:25:45,020 --> 00:25:51,360
platform inconsistencies so effectively

00:25:49,740 --> 00:25:53,820
the key screen you're presented with a

00:25:51,360 --> 00:25:55,170
human left you can select a customer and

00:25:53,820 --> 00:25:56,880
this will give you a more detailed view

00:25:55,170 --> 00:25:59,130
in regards to the service you're

00:25:56,880 --> 00:26:00,900
offering them you can be the profile

00:25:59,130 --> 00:26:04,290
about them you can want to fight their

00:26:00,900 --> 00:26:07,290
details and then you can go ahead and

00:26:04,290 --> 00:26:09,770
perform like another action on them such

00:26:07,290 --> 00:26:09,770
as something

00:26:10,700 --> 00:26:14,880
okay so another screen we've got is so

00:26:13,740 --> 00:26:16,350
we've got the key screen which is kind

00:26:14,880 --> 00:26:17,820
of like what's happening right now in

00:26:16,350 --> 00:26:18,929
your store and the difference is that

00:26:17,820 --> 00:26:20,850
you can go ahead and view like the

00:26:18,929 --> 00:26:23,309
history so you can take a look at

00:26:20,850 --> 00:26:25,169
customers who've previously been set you

00:26:23,309 --> 00:26:29,880
can view details above them you can go

00:26:25,169 --> 00:26:31,470
ahead and perform actions such as great

00:26:29,880 --> 00:26:34,950
working for them or assigning them to

00:26:31,470 --> 00:26:36,720
another key so yeah this is effective

00:26:34,950 --> 00:26:38,100
yet we've been like working really hard

00:26:36,720 --> 00:26:40,740
to stabilize the application and get

00:26:38,100 --> 00:26:43,320
ready for Reese today we've managed to

00:26:40,740 --> 00:26:54,690
get to that point hopefully it's a good

00:26:43,320 --> 00:26:57,260
illustration okay so I've got anything

00:26:54,690 --> 00:27:02,360
like what worked for us now I'm gonna

00:26:57,260 --> 00:27:05,669
say that what didn't work so this thing

00:27:02,360 --> 00:27:07,710
no per se we didn't turn this on and

00:27:05,669 --> 00:27:09,390
this really is slowing us down

00:27:07,710 --> 00:27:12,539
it led to a lot of gaps within our code

00:27:09,390 --> 00:27:13,860
base and just openly it's hard for your

00:27:12,539 --> 00:27:15,840
some for reason about what things are

00:27:13,860 --> 00:27:21,059
when the compiler is implicitly

00:27:15,840 --> 00:27:22,289
inferring things as anything because I

00:27:21,059 --> 00:27:23,700
mentioned South characters effectively

00:27:22,289 --> 00:27:27,870
living documentation of the code base

00:27:23,700 --> 00:27:28,950
this is super important I'm shipping we

00:27:27,870 --> 00:27:30,150
find it really hard to ship the

00:27:28,950 --> 00:27:31,890
application we should have done this

00:27:30,150 --> 00:27:34,679
really early so he get early find

00:27:31,890 --> 00:27:35,970
feedback because we didn't do this we

00:27:34,679 --> 00:27:37,980
left it though quite an amount of time

00:27:35,970 --> 00:27:39,600
sent it's my clients they came back to

00:27:37,980 --> 00:27:44,730
us and said this has to change this has

00:27:39,600 --> 00:27:46,590
to change in addition to that growing

00:27:44,730 --> 00:27:48,330
our team would have helped them we would

00:27:46,590 --> 00:27:54,000
have been able to ship partner which

00:27:48,330 --> 00:27:56,909
obviously ultimately hiring as hard we

00:27:54,000 --> 00:28:00,809
find that the corrected programming

00:27:56,909 --> 00:28:03,600
paradigms of see how about a highly

00:28:00,809 --> 00:28:06,059
learning learning curve so it's it's

00:28:03,600 --> 00:28:08,400
hard for people to adopt these skills on

00:28:06,059 --> 00:28:10,289
that we are hiring we are using react

00:28:08,400 --> 00:28:11,230
native at scale and we're something

00:28:10,289 --> 00:28:13,720
really

00:28:11,230 --> 00:28:16,809
if you're interested in working for us

00:28:13,720 --> 00:28:19,450
you said well you know Tom's got

00:28:16,809 --> 00:28:20,529
watchable mellow calm and you can also

00:28:19,450 --> 00:28:24,630
these are all way forward to see the

00:28:20,529 --> 00:28:29,669
other drum rolls available thank you

00:28:24,630 --> 00:28:29,669

YouTube URL: https://www.youtube.com/watch?v=tzKNPloewOA


