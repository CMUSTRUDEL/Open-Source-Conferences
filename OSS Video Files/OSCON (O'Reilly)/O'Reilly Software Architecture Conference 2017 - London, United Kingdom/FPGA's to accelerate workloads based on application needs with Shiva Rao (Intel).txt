Title: FPGA's to accelerate workloads based on application needs with Shiva Rao (Intel)
Publication date: 2017-10-18
Playlist: O'Reilly Software Architecture Conference 2017 - London, United Kingdom
Description: 
	Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:00,060 --> 00:00:03,120
hi this is Mike Hendrickson from

00:00:01,650 --> 00:00:04,500
software architecture in London I'm here

00:00:03,120 --> 00:00:06,359
with Shiva from Intel Shiva how you

00:00:04,500 --> 00:00:08,490
doing pretty good glad to be here

00:00:06,359 --> 00:00:11,580
good so Intel's been talking a lot about

00:00:08,490 --> 00:00:13,820
FPGAs field programmable gate arrays can

00:00:11,580 --> 00:00:15,509
you tell me a little bit what those are

00:00:13,820 --> 00:00:17,580
yeah sure

00:00:15,509 --> 00:00:18,840
so FPGA is I've actually been around for

00:00:17,580 --> 00:00:20,850
a while

00:00:18,840 --> 00:00:23,340
the idea with FPGA is are you can

00:00:20,850 --> 00:00:25,949
describe any hardware system you can

00:00:23,340 --> 00:00:28,590
imagine in this language called HDL a

00:00:25,949 --> 00:00:30,840
hardware description language a couple

00:00:28,590 --> 00:00:33,360
examples are very long and VHDL you can

00:00:30,840 --> 00:00:34,760
describe it in this language and much

00:00:33,360 --> 00:00:37,710
like the way you would write software

00:00:34,760 --> 00:00:39,149
you can write this in this specialized

00:00:37,710 --> 00:00:41,309
language and you can use our tools to

00:00:39,149 --> 00:00:43,800
synthesize that description into a

00:00:41,309 --> 00:00:46,739
binary which you can then program our

00:00:43,800 --> 00:00:49,289
FPGA is with and our FPGA to act like

00:00:46,739 --> 00:00:52,199
that hardware system so this is in

00:00:49,289 --> 00:00:53,879
contrast to a CPU where it's also

00:00:52,199 --> 00:00:56,039
programmable hardware but it's a

00:00:53,879 --> 00:00:59,879
specialized instruction set so when you

00:00:56,039 --> 00:01:01,379
program a CPU all you all it's doing is

00:00:59,879 --> 00:01:03,989
wearing this predefined instruction set

00:01:01,379 --> 00:01:06,750
but the FPGA is the very nature of the

00:01:03,989 --> 00:01:08,880
chip is flexible so that it can be act

00:01:06,750 --> 00:01:10,320
like any possible hardware system so

00:01:08,880 --> 00:01:14,100
there isn't an instruction set on the

00:01:10,320 --> 00:01:16,500
FPGA s not so much okay it's basically a

00:01:14,100 --> 00:01:18,060
regular fabric that can it's fully

00:01:16,500 --> 00:01:20,009
customizable based on what your needs

00:01:18,060 --> 00:01:22,080
are and now what why it was just

00:01:20,009 --> 00:01:24,540
appealing to an architect or a software

00:01:22,080 --> 00:01:27,390
architect why what would their interest

00:01:24,540 --> 00:01:30,020
be in an FPGA yeah so FPGA is have

00:01:27,390 --> 00:01:32,790
definitely had an issue on leading up to

00:01:30,020 --> 00:01:34,290
the present times they have been around

00:01:32,790 --> 00:01:35,700
for a while and using a lot of different

00:01:34,290 --> 00:01:37,979
applications which I won't go into

00:01:35,700 --> 00:01:39,299
what's really exciting is now there's a

00:01:37,979 --> 00:01:43,170
push to get these things into the data

00:01:39,299 --> 00:01:44,790
center so to give an example wire a

00:01:43,170 --> 00:01:47,790
software architect might want to use

00:01:44,790 --> 00:01:49,860
this imagine you have an application

00:01:47,790 --> 00:01:52,439
that does let's say a lot of compression

00:01:49,860 --> 00:01:54,479
and your application let's say it's

00:01:52,439 --> 00:01:55,710
running across thousands of servers and

00:01:54,479 --> 00:01:58,229
let's say you're not profiling your

00:01:55,710 --> 00:02:00,030
application and what do you see you see

00:01:58,229 --> 00:02:02,909
that your application which is doing

00:02:00,030 --> 00:02:05,070
compression you're saying that most of

00:02:02,909 --> 00:02:07,020
time is spent in compression and it's

00:02:05,070 --> 00:02:08,520
really pegging your processor you're

00:02:07,020 --> 00:02:10,379
like walnut I want to view these

00:02:08,520 --> 00:02:11,080
processors do other things but most of

00:02:10,379 --> 00:02:12,820
time they're just doing

00:02:11,080 --> 00:02:14,200
oppression so what you might think to

00:02:12,820 --> 00:02:15,790
yourself there's okay let me create a

00:02:14,200 --> 00:02:17,140
specialized chip let me spend tens of

00:02:15,790 --> 00:02:19,120
millions of dollars and create a

00:02:17,140 --> 00:02:20,920
compression chip so you go and do that

00:02:19,120 --> 00:02:23,230
and you put it in your server and now

00:02:20,920 --> 00:02:24,430
you have a performance increase from

00:02:23,230 --> 00:02:25,930
that go for a specialized compression

00:02:24,430 --> 00:02:27,700
chip now let's say you want to do

00:02:25,930 --> 00:02:29,200
encryption instead so you go buy a

00:02:27,700 --> 00:02:31,630
second chip that does encryption you

00:02:29,200 --> 00:02:32,710
plug that into your system then another

00:02:31,630 --> 00:02:34,300
ten million dollars

00:02:32,710 --> 00:02:36,490
well now let's say you want to move to

00:02:34,300 --> 00:02:38,250
the next processor generation you want

00:02:36,490 --> 00:02:40,720
to you know shrink your transistor size

00:02:38,250 --> 00:02:44,140
well now you spend ten million dollars

00:02:40,720 --> 00:02:45,610
creating a new chip compression ship and

00:02:44,140 --> 00:02:47,500
now clearly if you wanted

00:02:45,610 --> 00:02:48,880
now clearly maybe you're willing to do

00:02:47,500 --> 00:02:49,870
that but throw a doesn't scale to

00:02:48,880 --> 00:02:52,209
hundreds of different types of

00:02:49,870 --> 00:02:54,930
accelerations now with an FPGA you can

00:02:52,209 --> 00:02:57,220
put a single FPGA in your server and

00:02:54,930 --> 00:02:58,990
with that single FPGA you can run any

00:02:57,220 --> 00:03:01,209
number of workloads depending on your

00:02:58,990 --> 00:03:03,340
needs you can on-the-fly switch in an

00:03:01,209 --> 00:03:04,660
accelerator based on your needs do you

00:03:03,340 --> 00:03:06,370
want to do compression you program any

00:03:04,660 --> 00:03:08,709
compression you want to do encryption

00:03:06,370 --> 00:03:12,220
nicely so we switch in a compression

00:03:08,709 --> 00:03:15,160
encryption accelerator and that way it's

00:03:12,220 --> 00:03:16,120
purely it's totally flexible and then

00:03:15,160 --> 00:03:19,360
when you actually want to move to the

00:03:16,120 --> 00:03:21,400
next generation of technology you can

00:03:19,360 --> 00:03:22,690
just pour it over to the next generation

00:03:21,400 --> 00:03:24,640
FPGA you'll have to create a whole new

00:03:22,690 --> 00:03:26,950
chip yourself you just move it to the

00:03:24,640 --> 00:03:27,820
next FPGA and then that way it'll be you

00:03:26,950 --> 00:03:29,860
know very similar to what you

00:03:27,820 --> 00:03:31,840
experienced with upgrading a processor

00:03:29,860 --> 00:03:34,690
you know expect to rewrite your entire

00:03:31,840 --> 00:03:37,150
software you just move it over so for

00:03:34,690 --> 00:03:38,680
the the typical Software Architect do

00:03:37,150 --> 00:03:40,090
they have to understand hardware to be

00:03:38,680 --> 00:03:41,500
able to use these or to be able to think

00:03:40,090 --> 00:03:45,370
about how they would design a system

00:03:41,500 --> 00:03:47,080
that uses these and yeah it depends what

00:03:45,370 --> 00:03:49,600
kind of software architects you are so

00:03:47,080 --> 00:03:50,739
we typically think of two types of users

00:03:49,600 --> 00:03:52,269
that people who want to develop their

00:03:50,739 --> 00:03:54,250
own accelerator and the people who just

00:03:52,269 --> 00:03:56,769
want to use this stuff so the people

00:03:54,250 --> 00:03:58,120
want to develop their accelerator let's

00:03:56,769 --> 00:04:00,700
say they have some special sauce and

00:03:58,120 --> 00:04:02,830
they they really just and and they need

00:04:00,700 --> 00:04:04,330
to capture that we have a couple options

00:04:02,830 --> 00:04:05,680
one they can do traditional FPGA

00:04:04,330 --> 00:04:09,220
development which case you really know

00:04:05,680 --> 00:04:10,510
you to understand your hardware and the

00:04:09,220 --> 00:04:11,920
case where you don't want to learn that

00:04:10,510 --> 00:04:13,600
traditional FPGA development we have

00:04:11,920 --> 00:04:16,989
higher level abstractions like Oakland

00:04:13,600 --> 00:04:19,900
CO and you describe your accelerator and

00:04:16,989 --> 00:04:21,640
OpenCL and then create an accelerator

00:04:19,900 --> 00:04:24,490
design that way and OpenCL is the same

00:04:21,640 --> 00:04:26,050
language that's used for GPUs for AMD

00:04:24,490 --> 00:04:27,789
so it's a familiar a paradigm for

00:04:26,050 --> 00:04:30,100
software developers so that's if you

00:04:27,789 --> 00:04:31,720
want to create your own accelerator now

00:04:30,100 --> 00:04:33,190
let's say you just want to get a PG

00:04:31,720 --> 00:04:35,860
acceleration you don't want to do a lot

00:04:33,190 --> 00:04:37,000
of work for it and let's imagine for

00:04:35,860 --> 00:04:38,860
example going back to the compression

00:04:37,000 --> 00:04:39,910
exit example let's say you're just doing

00:04:38,860 --> 00:04:41,169
compression not really doing a

00:04:39,910 --> 00:04:43,599
specialized compression you're doing

00:04:41,169 --> 00:04:45,729
compression well then the idea is we're

00:04:43,599 --> 00:04:49,539
gonna enable you with a whole ecosystem

00:04:45,729 --> 00:04:51,220
of IP partners and you'll have ten

00:04:49,539 --> 00:04:52,740
compression accelerations choose from

00:04:51,220 --> 00:04:56,740
with different levels of performance and

00:04:52,740 --> 00:04:59,139
loss enos so and then you just pick the

00:04:56,740 --> 00:05:01,419
one that matches your needs so in that

00:04:59,139 --> 00:05:03,370
way depending on what kind of person you

00:05:01,419 --> 00:05:07,090
know you are how specialized your case

00:05:03,370 --> 00:05:09,970
is what your comfort level is and where

00:05:07,090 --> 00:05:11,770
you want to spend your time will have a

00:05:09,970 --> 00:05:13,210
variety of options to support you so the

00:05:11,770 --> 00:05:15,490
architect needs to know what his system

00:05:13,210 --> 00:05:17,800
is intending to do and that's a perfect

00:05:15,490 --> 00:05:20,620
example of where a software architect

00:05:17,800 --> 00:05:23,680
would pick the right components to make

00:05:20,620 --> 00:05:27,789
these FPGAs work most effectively with

00:05:23,680 --> 00:05:30,310
their software and is it a big leap for

00:05:27,789 --> 00:05:32,710
them to to be able to use FP I mean is

00:05:30,310 --> 00:05:35,430
it is our FPGA is gonna be tough for

00:05:32,710 --> 00:05:38,349
companies to start using or you have a

00:05:35,430 --> 00:05:43,210
on-ramp kit or some way that people get

00:05:38,349 --> 00:05:46,210
started with this yeah so there's a lot

00:05:43,210 --> 00:05:47,800
of ways to get involved so we actually

00:05:46,210 --> 00:05:51,490
just announced the programmable

00:05:47,800 --> 00:05:53,050
acceleration card it's a an FPGA on a

00:05:51,490 --> 00:05:54,940
PCI card that you'll be able to plug

00:05:53,050 --> 00:05:58,060
into your system this will be available

00:05:54,940 --> 00:05:59,590
in the first half of 2018 so just the

00:05:58,060 --> 00:06:01,419
same way you plug the graphics card into

00:05:59,590 --> 00:06:05,560
your system you can get this PCI card

00:06:01,419 --> 00:06:07,630
plug it in it'll have the base design on

00:06:05,560 --> 00:06:10,990
it and I mean all you'll need to do is

00:06:07,630 --> 00:06:12,849
install the software stack and the

00:06:10,990 --> 00:06:14,710
software stack just to let you know a

00:06:12,849 --> 00:06:17,590
little bit about it is it has a driver

00:06:14,710 --> 00:06:19,300
component which is a Linux driver

00:06:17,590 --> 00:06:20,440
component which is being upstreams you

00:06:19,300 --> 00:06:21,370
can go on the millet Linux mailing list

00:06:20,440 --> 00:06:23,919
and look at it right now

00:06:21,370 --> 00:06:27,389
and it hasn't used space API that's also

00:06:23,919 --> 00:06:29,469
open source and that's on github so

00:06:27,389 --> 00:06:30,880
you'll have you can actually start

00:06:29,469 --> 00:06:32,469
engaging with this right now if you want

00:06:30,880 --> 00:06:34,120
to and go online and start playing with

00:06:32,469 --> 00:06:35,050
it and playing with things and

00:06:34,120 --> 00:06:38,919
simulation

00:06:35,050 --> 00:06:39,849
or emulation and then when you're with

00:06:38,919 --> 00:06:42,250
the air of the actual hardware in the

00:06:39,849 --> 00:06:44,860
first half of 2018 you can start playing

00:06:42,250 --> 00:06:47,800
with it now there are this stuff has

00:06:44,860 --> 00:06:51,250
also been deployed this Pacific stack

00:06:47,800 --> 00:06:52,810
has been deployed by Alibaba and we're

00:06:51,250 --> 00:06:55,930
engaging with pretty much all the dead

00:06:52,810 --> 00:06:58,870
big data center operators so is this the

00:06:55,930 --> 00:07:02,229
FPGAs have come to kind of a point in

00:06:58,870 --> 00:07:03,819
time where we need them because with the

00:07:02,229 --> 00:07:06,190
massive amounts of data and machine

00:07:03,819 --> 00:07:08,889
learning that we want to do to feed our

00:07:06,190 --> 00:07:11,650
AI applications so that they can bring

00:07:08,889 --> 00:07:13,509
back useful material or information or

00:07:11,650 --> 00:07:14,409
actions or whatever we're bringing back

00:07:13,509 --> 00:07:16,419
through them

00:07:14,409 --> 00:07:18,039
is that where we are in this world right

00:07:16,419 --> 00:07:20,050
now is that we actually have to have

00:07:18,039 --> 00:07:22,150
these sort of things is because we're

00:07:20,050 --> 00:07:24,400
coming to yeah where that's that's

00:07:22,150 --> 00:07:26,770
really getting into more of Intel's you

00:07:24,400 --> 00:07:28,599
know broader basically the broader

00:07:26,770 --> 00:07:29,740
things that are kind of driving by Intel

00:07:28,599 --> 00:07:32,710
right now and that's really you know

00:07:29,740 --> 00:07:34,900
they talk about the data revolution you

00:07:32,710 --> 00:07:36,310
know the virtuous cycle of growth it's a

00:07:34,900 --> 00:07:38,229
buzzy we're and I like using it

00:07:36,310 --> 00:07:42,009
my manager loves loves that when I use

00:07:38,229 --> 00:07:45,099
it so I'm using it it's this is this

00:07:42,009 --> 00:07:46,780
general sense that there's all these all

00:07:45,099 --> 00:07:48,280
these nodes coming online

00:07:46,780 --> 00:07:51,909
I go generate a massive amount of data

00:07:48,280 --> 00:07:53,560
so that and the very network itself has

00:07:51,909 --> 00:07:55,479
to improve to be able to handle this

00:07:53,560 --> 00:07:57,430
data and then data centers needed

00:07:55,479 --> 00:07:59,560
improved I mean a scale out to handle

00:07:57,430 --> 00:08:02,710
all this additional data and that's not

00:07:59,560 --> 00:08:06,159
all on FPGAs you look at the way until

00:08:02,710 --> 00:08:07,719
it is investing in their investing and

00:08:06,159 --> 00:08:09,569
improving their the core processors

00:08:07,719 --> 00:08:12,490
they're invested they're investing in

00:08:09,569 --> 00:08:14,710
various a6 like Nirvana and mobile I and

00:08:12,490 --> 00:08:16,750
they're also investing in FPGAs and all

00:08:14,710 --> 00:08:19,270
these things play a part in you know

00:08:16,750 --> 00:08:21,639
beta revolution they able to scale out

00:08:19,270 --> 00:08:25,210
all our systems everything from the end

00:08:21,639 --> 00:08:26,889
nodes to the fabric to the data centers

00:08:25,210 --> 00:08:29,680
to be able to support all this

00:08:26,889 --> 00:08:31,930
additional data so is Intel becoming a

00:08:29,680 --> 00:08:33,820
software company or an AI company I mean

00:08:31,930 --> 00:08:38,440
I think I think Intel's been a software

00:08:33,820 --> 00:08:41,349
company for a while I mean obviously our

00:08:38,440 --> 00:08:42,670
goals it's also looking but and your

00:08:41,349 --> 00:08:45,400
heritage is in

00:08:42,670 --> 00:08:46,630
heritage in the hardware but you know

00:08:45,400 --> 00:08:49,840
they've always did some extent being a

00:08:46,630 --> 00:08:50,950
been a software company you know I think

00:08:49,840 --> 00:08:52,420
you'd be surprised by the number of

00:08:50,950 --> 00:08:57,070
software developers ever actually had

00:08:52,420 --> 00:08:58,180
Intel I believe were the number one con

00:08:57,070 --> 00:09:02,020
we're either number one or two

00:08:58,180 --> 00:09:05,650
contributions we do tons of open source

00:09:02,020 --> 00:09:08,070
development specifically an optimizing

00:09:05,650 --> 00:09:10,600
the performance and that sort of thing

00:09:08,070 --> 00:09:11,800
so I think Intel's a business offered a

00:09:10,600 --> 00:09:15,310
company for a while and I think that

00:09:11,800 --> 00:09:16,300
will just continue to grow I think one

00:09:15,310 --> 00:09:18,460
of the ways they describe it until

00:09:16,300 --> 00:09:19,510
nowadays is as a data company you know

00:09:18,460 --> 00:09:22,270
just kind of align it with this a little

00:09:19,510 --> 00:09:25,810
idea of a data revolution and how we're

00:09:22,270 --> 00:09:28,000
trying to support that excellent so

00:09:25,810 --> 00:09:30,460
Shiva if you and I sit down twelve

00:09:28,000 --> 00:09:32,980
months from now what would you like to

00:09:30,460 --> 00:09:35,260
see happening in the market that you

00:09:32,980 --> 00:09:37,980
guys are in right now in and when I say

00:09:35,260 --> 00:09:40,560
you guys are in Intel in general and

00:09:37,980 --> 00:09:45,850
specifically towards FPGAs

00:09:40,560 --> 00:09:50,050
yessuh specifically towards FPGAs I'd

00:09:45,850 --> 00:09:52,060
like to see every every one of the super

00:09:50,050 --> 00:09:53,620
seven data center operators you know I

00:09:52,060 --> 00:09:57,790
could name those a you know Google

00:09:53,620 --> 00:10:00,850
Microsoft Amazon I bought a 10 cent but

00:09:57,790 --> 00:10:04,300
I do Facebook I like to them all to have

00:10:00,850 --> 00:10:07,180
seen them all have these FPGA offerings

00:10:04,300 --> 00:10:09,790
is the the key to getting adoption is to

00:10:07,180 --> 00:10:11,080
make it available and I think while it's

00:10:09,790 --> 00:10:12,280
nice having your own however a lot of

00:10:11,080 --> 00:10:15,160
times that people just want to be able

00:10:12,280 --> 00:10:17,620
to you know get easy access to this so I

00:10:15,160 --> 00:10:20,920
think in the next year the key thing for

00:10:17,620 --> 00:10:22,450
me would be one availability so having

00:10:20,920 --> 00:10:25,660
all these different people having their

00:10:22,450 --> 00:10:29,590
hip hop having offerings and the second

00:10:25,660 --> 00:10:32,740
would be the ecosystem I would like to

00:10:29,590 --> 00:10:35,830
see a lot of offerings about third-party

00:10:32,740 --> 00:10:38,260
IP developers and a saint a rich

00:10:35,830 --> 00:10:39,910
ecosystem that the end user can pick

00:10:38,260 --> 00:10:43,780
from is that if the end user has

00:10:39,910 --> 00:10:46,150
availability on and a lot of rich

00:10:43,780 --> 00:10:48,160
ecosystem I think if I find it very

00:10:46,150 --> 00:10:50,890
engaging because the performance is

00:10:48,160 --> 00:10:52,360
there we know FPGAs can kill it with

00:10:50,890 --> 00:10:52,850
performance we know that they work in a

00:10:52,360 --> 00:10:55,100
lot of differ

00:10:52,850 --> 00:10:58,940
areas it's really going to come down to

00:10:55,100 --> 00:11:00,019
availability and usability and I think

00:10:58,940 --> 00:11:02,180
in the next year we'll see some pretty

00:11:00,019 --> 00:11:03,440
significant gains excellent Shiva we

00:11:02,180 --> 00:11:06,579
look forward to that conversation and

00:11:03,440 --> 00:11:06,579
then I thank you

00:11:12,270 --> 00:11:14,330

YouTube URL: https://www.youtube.com/watch?v=ZYLugP_f4B8


