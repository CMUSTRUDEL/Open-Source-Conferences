Title: Function as a service for agility with Michael Hausenblas (Red Hat)
Publication date: 2017-10-18
Playlist: O'Reilly Software Architecture Conference 2017 - London, United Kingdom
Description: 
	Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:00,060 --> 00:00:03,060
hi this is Mike Hendrickson from

00:00:01,500 --> 00:00:04,470
software architecture in London I'm here

00:00:03,060 --> 00:00:07,140
with Michael Hudson bust Michael how you

00:00:04,470 --> 00:00:09,179
doing I think you're very good it's

00:00:07,140 --> 00:00:10,830
great conference here I'm really happy

00:00:09,179 --> 00:00:13,019
to be here and a lot of interesting

00:00:10,830 --> 00:00:14,730
discussions and yeah so quite a few

00:00:13,019 --> 00:00:16,350
things have changed with you since the

00:00:14,730 --> 00:00:18,990
last time we spoke you're with red hat

00:00:16,350 --> 00:00:20,990
now that's right and you guys have from

00:00:18,990 --> 00:00:23,250
the metal all the way through the cloud

00:00:20,990 --> 00:00:26,010
can you explain a little bit about what

00:00:23,250 --> 00:00:29,130
hat offers there are many things that

00:00:26,010 --> 00:00:31,529
are available from vectorization layers

00:00:29,130 --> 00:00:33,390
such as OpenStack over over ship that's

00:00:31,529 --> 00:00:36,120
the platform I'm working on that's based

00:00:33,390 --> 00:00:38,489
on on communities you have ansible to

00:00:36,120 --> 00:00:40,260
provision stuff there are service or

00:00:38,489 --> 00:00:44,250
functions to service offerings around

00:00:40,260 --> 00:00:47,370
that even mobile solutions I think the

00:00:44,250 --> 00:00:48,960
main part is that you know we work with

00:00:47,370 --> 00:00:50,579
open source and in open source so

00:00:48,960 --> 00:00:52,170
contributing to open source to take an

00:00:50,579 --> 00:00:54,149
open source making it enterprise great

00:00:52,170 --> 00:00:56,219
and providing that our customers so

00:00:54,149 --> 00:00:58,379
function as a service and you like that

00:00:56,219 --> 00:00:59,940
term because there really is Hardware

00:00:58,379 --> 00:01:02,190
somewhere it's not this there's no

00:00:59,940 --> 00:01:04,290
server this is yeah it's a little

00:01:02,190 --> 00:01:06,510
different I regret a little bit that I

00:01:04,290 --> 00:01:08,310
wrote an O'Reilly book on servers off so

00:01:06,510 --> 00:01:10,680
I should've called it functions the

00:01:08,310 --> 00:01:13,260
service ops but back then it was a

00:01:10,680 --> 00:01:15,060
little bit more catchy I guess and the

00:01:13,260 --> 00:01:17,250
main point there really is on the one

00:01:15,060 --> 00:01:19,049
hand obviously the huge benefits to

00:01:17,250 --> 00:01:20,610
really be very a child being able to

00:01:19,049 --> 00:01:21,990
deploy that and we had some very

00:01:20,610 --> 00:01:24,090
interesting discussions yesterday as

00:01:21,990 --> 00:01:26,220
well I gave a talk here that software

00:01:24,090 --> 00:01:27,659
architecture people asking you know when

00:01:26,220 --> 00:01:29,909
it's the right time and for what should

00:01:27,659 --> 00:01:31,770
we deploy functions to service and the

00:01:29,909 --> 00:01:33,930
thing there is there are all these

00:01:31,770 --> 00:01:36,329
implications that for example you don't

00:01:33,930 --> 00:01:38,520
have ops folks pushing something there

00:01:36,329 --> 00:01:40,560
is no server or something for the

00:01:38,520 --> 00:01:42,210
developer which means also that at the

00:01:40,560 --> 00:01:44,610
end of the day the developer is the one

00:01:42,210 --> 00:01:46,350
who is operating that function so you

00:01:44,610 --> 00:01:49,680
know kind of like developers on-call or

00:01:46,350 --> 00:01:51,689
develop for some patron and that has

00:01:49,680 --> 00:01:53,340
certain implications also on the

00:01:51,689 --> 00:01:55,439
organizational aspects and that's that's

00:01:53,340 --> 00:01:57,000
a quite interesting so but even cloud

00:01:55,439 --> 00:02:00,840
infrastructures there's hardware

00:01:57,000 --> 00:02:02,549
somewhere right so there is a box or

00:02:00,840 --> 00:02:05,610
some piece of hardware somewhere and

00:02:02,549 --> 00:02:07,469
where were kind of maybe missing that so

00:02:05,610 --> 00:02:09,539
talk to me a little bit about the DevOps

00:02:07,469 --> 00:02:11,990
role in today's world because I think

00:02:09,539 --> 00:02:15,380
you know DevOps was

00:02:11,990 --> 00:02:18,230
a huge promise six seven years ago and

00:02:15,380 --> 00:02:20,090
still is right but and I think a lot of

00:02:18,230 --> 00:02:21,590
large enterprises think that if they

00:02:20,090 --> 00:02:22,520
move to DevOps they're gonna become

00:02:21,590 --> 00:02:25,160
agile right

00:02:22,520 --> 00:02:28,280
is that true so I strongly believe in

00:02:25,160 --> 00:02:30,440
the basic idea of DevOps which means

00:02:28,280 --> 00:02:32,690
essentially developers and operation

00:02:30,440 --> 00:02:35,380
folks have a mutual understanding and

00:02:32,690 --> 00:02:38,690
respect for the work that they're doing

00:02:35,380 --> 00:02:42,140
what I'm slightly concerned is that you

00:02:38,690 --> 00:02:43,850
know people trying to sell DevOps as

00:02:42,140 --> 00:02:45,740
something that you can you know buy in

00:02:43,850 --> 00:02:47,600
the box or whatever that's not it it's

00:02:45,740 --> 00:02:49,280
like DevOps to me is kind of like the

00:02:47,600 --> 00:02:52,010
religion and then there are people that

00:02:49,280 --> 00:02:54,200
actually have roles I prefer to call

00:02:52,010 --> 00:02:57,110
them a Bob's term the granules from

00:02:54,200 --> 00:02:59,810
formerly digitalocean know I had a pops

00:02:57,110 --> 00:03:02,480
so application yeah yeah so the person

00:02:59,810 --> 00:03:04,160
who is actually responsible and

00:03:02,480 --> 00:03:05,810
functions the service takes that to the

00:03:04,160 --> 00:03:08,570
extreme where you really have developers

00:03:05,810 --> 00:03:12,290
or need developers own compatriots so to

00:03:08,570 --> 00:03:14,750
me this mutual respect and and and being

00:03:12,290 --> 00:03:19,610
aware of what what the other side does

00:03:14,750 --> 00:03:22,970
is fundamental but I fear that a lot of

00:03:19,610 --> 00:03:24,650
the uptake if the organization's are not

00:03:22,970 --> 00:03:28,010
ready to really tear down these walls

00:03:24,650 --> 00:03:29,780
between operations and development will

00:03:28,010 --> 00:03:32,660
not be that successful so that's that's

00:03:29,780 --> 00:03:35,150
my main worry is agile are always

00:03:32,660 --> 00:03:37,550
associated with DevOps because I do hear

00:03:35,150 --> 00:03:39,440
from some large enterprises that they

00:03:37,550 --> 00:03:43,070
want to become a more agile organization

00:03:39,440 --> 00:03:46,280
therefore we want to adopt DevOps is

00:03:43,070 --> 00:03:49,100
that are they synonymous so not

00:03:46,280 --> 00:03:52,700
necessary to me I can perfectly imagine

00:03:49,100 --> 00:03:54,380
having a more separated you know people

00:03:52,700 --> 00:03:56,150
looking after an environment like

00:03:54,380 --> 00:03:58,370
communities open shift or whatever and

00:03:56,150 --> 00:04:00,620
people writing the the applications and

00:03:58,370 --> 00:04:03,820
deploying that on top and it can be very

00:04:00,620 --> 00:04:06,530
agile with that set up it's really

00:04:03,820 --> 00:04:09,440
depending on the unit of deployment for

00:04:06,530 --> 00:04:11,330
example take a VM versus a container

00:04:09,440 --> 00:04:14,390
versus a function and in fact as a

00:04:11,330 --> 00:04:15,950
service set of the responsibilities who

00:04:14,390 --> 00:04:19,180
is taking care of operating them who is

00:04:15,950 --> 00:04:21,470
actually fixing a park or whatever

00:04:19,180 --> 00:04:23,479
depending on that unit of deployment

00:04:21,470 --> 00:04:25,250
shift to the one side or the other and

00:04:23,479 --> 00:04:27,080
that's to me is it's more like

00:04:25,250 --> 00:04:29,590
for what use kiss am i using what tool

00:04:27,080 --> 00:04:32,860
and then you will have this you know

00:04:29,590 --> 00:04:35,570
split between operations and development

00:04:32,860 --> 00:04:37,940
agility is all about in my understanding

00:04:35,570 --> 00:04:40,880
being able to ship the features that

00:04:37,940 --> 00:04:43,880
business needs faster and now we have a

00:04:40,880 --> 00:04:46,310
kind of tool set of things at our

00:04:43,880 --> 00:04:47,870
disposal that we can use and we can kind

00:04:46,310 --> 00:04:50,000
of like choose to itch it heated with

00:04:47,870 --> 00:04:51,200
one depending on the use case and and I

00:04:50,000 --> 00:04:53,030
think that's that's a great thing but

00:04:51,200 --> 00:04:54,830
organizations still need to learn a lot

00:04:53,030 --> 00:04:57,200
so shipping features and also maybe

00:04:54,830 --> 00:04:59,030
scaling like if it's Christmastime or

00:04:57,200 --> 00:05:02,450
right holiday time and people need to

00:04:59,030 --> 00:05:04,700
scale quickly right so are we getting to

00:05:02,450 --> 00:05:09,110
a point where a DevOps person can push a

00:05:04,700 --> 00:05:10,790
button and scale is it that easy yet so

00:05:09,110 --> 00:05:12,530
this this is funny that did you say a

00:05:10,790 --> 00:05:15,290
DevOps person because this is exactly

00:05:12,530 --> 00:05:17,419
the thing that I against there is no

00:05:15,290 --> 00:05:20,270
like DevOps is really this kind of thing

00:05:17,419 --> 00:05:22,430
that I believe that in that that makes

00:05:20,270 --> 00:05:24,080
us a real education right yeah yeah yeah

00:05:22,430 --> 00:05:26,180
and and then you have certain roles you

00:05:24,080 --> 00:05:28,419
have you know developers you have a pops

00:05:26,180 --> 00:05:30,620
or whatever you want to call them and

00:05:28,419 --> 00:05:33,310
many many environments for example

00:05:30,620 --> 00:05:37,190
communities with the horizontal

00:05:33,310 --> 00:05:38,930
autoscaler for example provide that auto

00:05:37,190 --> 00:05:40,130
scalability both on the application

00:05:38,930 --> 00:05:43,130
level and and the infrastructure level

00:05:40,130 --> 00:05:46,280
you can say add new nodes if I if I'm if

00:05:43,130 --> 00:05:49,250
I you know need new new or more capacity

00:05:46,280 --> 00:05:50,930
or function so services is a prime

00:05:49,250 --> 00:05:52,520
example for that it you know you don't

00:05:50,930 --> 00:05:55,040
need to worry at all it automatically

00:05:52,520 --> 00:05:56,870
scales there which is great for a

00:05:55,040 --> 00:05:59,630
stateless stuff for stateful stuff we

00:05:56,870 --> 00:06:01,790
are still early days so automatically

00:05:59,630 --> 00:06:03,740
scaling and data has gravity right so

00:06:01,790 --> 00:06:06,919
it's not had a lot of discussions of

00:06:03,740 --> 00:06:08,810
past day where people ask like should we

00:06:06,919 --> 00:06:10,820
start on premises and then move to the

00:06:08,810 --> 00:06:12,919
cloud directly in the cloud and the main

00:06:10,820 --> 00:06:14,810
thing there to me is always think about

00:06:12,919 --> 00:06:16,880
where your data is if your data lives on

00:06:14,810 --> 00:06:18,260
premises currently well you can't burst

00:06:16,880 --> 00:06:20,900
out to the cloud for a stateless stuff

00:06:18,260 --> 00:06:22,850
but how quickly can you get a couple of

00:06:20,900 --> 00:06:24,919
terabytes or petabytes or whatever into

00:06:22,850 --> 00:06:26,630
the cloud or back if you need to so that

00:06:24,919 --> 00:06:29,780
is to me that the main decision factor

00:06:26,630 --> 00:06:32,410
to decide are we at all nearing a point

00:06:29,780 --> 00:06:35,510
in time where we almost have too much

00:06:32,410 --> 00:06:38,000
history with us I mean are we ever going

00:06:35,510 --> 00:06:38,540
to say we need to we need to deep

00:06:38,000 --> 00:06:41,150
archive

00:06:38,540 --> 00:06:43,130
a bunch of history because the the

00:06:41,150 --> 00:06:45,050
legacy that we bring with us right may

00:06:43,130 --> 00:06:47,780
not be all that useful right is there a

00:06:45,050 --> 00:06:49,460
point where infrastructure grows so much

00:06:47,780 --> 00:06:51,440
and the day that we can produce because

00:06:49,460 --> 00:06:54,920
of it and the people that consume it

00:06:51,440 --> 00:06:57,230
right are we are we nearing that I

00:06:54,920 --> 00:06:59,450
strongly believe the legacy what

00:06:57,230 --> 00:07:01,250
typically people call legacy is actually

00:06:59,450 --> 00:07:03,140
the thing that makes you money right

00:07:01,250 --> 00:07:05,750
that's the thing that you actually care

00:07:03,140 --> 00:07:07,970
about all the new things that promise

00:07:05,750 --> 00:07:11,420
you you know be more agile whatever

00:07:07,970 --> 00:07:12,890
that's great we we should adopt them but

00:07:11,420 --> 00:07:15,650
also make sure that we have the the

00:07:12,890 --> 00:07:17,390
success around that so just purely

00:07:15,650 --> 00:07:19,610
adopting everything that comes out

00:07:17,390 --> 00:07:21,730
because it's it's trendy or whatever is

00:07:19,610 --> 00:07:24,830
probably not the best way to success and

00:07:21,730 --> 00:07:27,200
yeah we do have more options but I also

00:07:24,830 --> 00:07:29,450
think that having more options is a

00:07:27,200 --> 00:07:31,340
great thing because you can now more you

00:07:29,450 --> 00:07:33,260
know you don't have just that one option

00:07:31,340 --> 00:07:35,870
of um or whatever you have for this

00:07:33,260 --> 00:07:38,330
workload the best way might actually be

00:07:35,870 --> 00:07:40,430
function service for this workload or

00:07:38,330 --> 00:07:41,990
this use case container based system

00:07:40,430 --> 00:07:43,880
might be the best so I I like this

00:07:41,990 --> 00:07:45,710
approach of really seeing that as a

00:07:43,880 --> 00:07:47,240
toolbox where you have to be aware of

00:07:45,710 --> 00:07:48,410
all these things in your toolbox and

00:07:47,240 --> 00:07:49,010
then picking the right tool for the

00:07:48,410 --> 00:07:51,200
right job

00:07:49,010 --> 00:07:54,020
and so Red Hat you guys offer that sort

00:07:51,200 --> 00:07:56,720
of like your choice opportunity it's not

00:07:54,020 --> 00:07:59,110
you know one size fits all right and do

00:07:56,720 --> 00:08:01,940
you look at organizations to figure out

00:07:59,110 --> 00:08:04,400
what fits them best or do they have to

00:08:01,940 --> 00:08:07,400
figure out what fits them best or it is

00:08:04,400 --> 00:08:08,930
one of the parts so I'm not in in sales

00:08:07,400 --> 00:08:10,820
or whatever but it's one of the parts

00:08:08,930 --> 00:08:12,860
that especially my colleagues in

00:08:10,820 --> 00:08:14,600
solution architects do sitting together

00:08:12,860 --> 00:08:16,430
with the customer and looking through

00:08:14,600 --> 00:08:18,970
the options that are there what makes

00:08:16,430 --> 00:08:23,270
most sense and at the end of the day

00:08:18,970 --> 00:08:25,610
companies prefer you know having one one

00:08:23,270 --> 00:08:27,380
source having essentially rather than

00:08:25,610 --> 00:08:28,550
having to four different systems and

00:08:27,380 --> 00:08:30,170
they then need to integrate having

00:08:28,550 --> 00:08:31,880
everything from one platform whatever

00:08:30,170 --> 00:08:34,099
you want to call that and if that

00:08:31,880 --> 00:08:36,590
platform is rich enough and for example

00:08:34,099 --> 00:08:38,990
in communities land that is now getting

00:08:36,590 --> 00:08:40,610
more and more traction around to Service

00:08:38,990 --> 00:08:42,260
Catalog where you then can integrate

00:08:40,610 --> 00:08:44,990
with you know things like I don't know

00:08:42,260 --> 00:08:47,390
from AWS s3 or whatever so that it can

00:08:44,990 --> 00:08:51,060
bring things that the platform itself

00:08:47,390 --> 00:08:52,950
not natively offers into the platforms

00:08:51,060 --> 00:08:56,220
through that integration so we see that

00:08:52,950 --> 00:08:57,600
you know there is demand for that and

00:08:56,220 --> 00:08:59,940
and it that is certainly something that

00:08:57,600 --> 00:09:02,040
will end very soon so Michael if you and

00:08:59,940 --> 00:09:03,960
I sit down twelve months from now in

00:09:02,040 --> 00:09:06,300
London and have this conversation next

00:09:03,960 --> 00:09:08,250
year what's going to change in the

00:09:06,300 --> 00:09:09,660
market in general and what would you

00:09:08,250 --> 00:09:12,630
like to see change for red hat as well

00:09:09,660 --> 00:09:14,820
right so we one trend that I think it's

00:09:12,630 --> 00:09:17,520
gonna continue pretty much today with

00:09:14,820 --> 00:09:19,770
the announcement came out that docker

00:09:17,520 --> 00:09:21,600
also supports communities is that Kuna

00:09:19,770 --> 00:09:23,160
this is more or less the de facto

00:09:21,600 --> 00:09:24,720
standard for container orchestration so

00:09:23,160 --> 00:09:27,600
no matter if you have it on top or below

00:09:24,720 --> 00:09:29,820
or whatever that is kind of like in the

00:09:27,600 --> 00:09:33,300
same way that Linux is more or less the

00:09:29,820 --> 00:09:35,690
de facto standard in that you know being

00:09:33,300 --> 00:09:38,790
an operating system for a single machine

00:09:35,690 --> 00:09:42,360
communities increasingly will be the

00:09:38,790 --> 00:09:44,070
standard for how you actually manage a

00:09:42,360 --> 00:09:46,320
couple of machines and on the

00:09:44,070 --> 00:09:47,840
application level other things that I

00:09:46,320 --> 00:09:50,160
expect would be everything around

00:09:47,840 --> 00:09:52,320
surveillance or function as a service so

00:09:50,160 --> 00:09:56,280
that that matures and and more and more

00:09:52,320 --> 00:09:59,610
people jumping on that train and I also

00:09:56,280 --> 00:10:02,670
expect much more like again it's early

00:09:59,610 --> 00:10:05,010
days nowadays but much more in this edge

00:10:02,670 --> 00:10:07,140
computing so you have much more IOT

00:10:05,010 --> 00:10:09,150
devices whatever that takes certain

00:10:07,140 --> 00:10:12,270
workloads off directly at the edge and

00:10:09,150 --> 00:10:14,070
and you see that already you know going

00:10:12,270 --> 00:10:15,990
mainstream nowadays and in twelve months

00:10:14,070 --> 00:10:17,130
I'm pretty sure we would be more less

00:10:15,990 --> 00:10:18,810
there and then what do you see

00:10:17,130 --> 00:10:21,660
differently for Red Hat in twelve months

00:10:18,810 --> 00:10:24,390
from now I'm very positive that we

00:10:21,660 --> 00:10:27,230
continue to grow and hopefully make our

00:10:24,390 --> 00:10:30,560
customers successful and the rest is

00:10:27,230 --> 00:10:32,640
[Laughter]

00:10:30,560 --> 00:10:35,540
excellent Michael will occur that thank

00:10:32,640 --> 00:10:35,540
you thank yous

00:10:41,769 --> 00:10:43,829

YouTube URL: https://www.youtube.com/watch?v=Qc4AF0MiaZA


