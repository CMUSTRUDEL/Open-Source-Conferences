Title: Developing a Chaos Architecture Mindset - Adrian Cockcroft (AWS)
Publication date: 2018-02-28
Playlist: O'Reilly Software Architecture Conference 2018 - New York, New York
Description: 
	Adrian Cockcroft outlines the architectural principles of chaos engineering and shares methods engineers can use to exercise failure modes in safety and business-critical systems

Join us in person at the O'Reilly Software Architecture Conference to learn the tools, techniques, and leadership skills needed in the evolving discipline of software architecture. Learn more: https://oreil.ly/2NNTQQK

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:00,329 --> 00:00:06,240
so I'm talking about chaos architecture

00:00:02,340 --> 00:00:08,189
and then wrap up and get Nora on to tell

00:00:06,240 --> 00:00:10,500
you how it really works in practice the

00:00:08,189 --> 00:00:13,230
way I think about chaos architecture is

00:00:10,500 --> 00:00:15,599
about four layers two teams and an

00:00:13,230 --> 00:00:17,580
attitude on the bottom layer is

00:00:15,599 --> 00:00:19,410
infrastructure this is all you observe

00:00:17,580 --> 00:00:20,880
some regions and data centers and the

00:00:19,410 --> 00:00:22,650
machines and things you've got you want

00:00:20,880 --> 00:00:24,570
to make sure you have enough redundancy

00:00:22,650 --> 00:00:26,550
here that if something goes wrong

00:00:24,570 --> 00:00:28,380
there's enough stuff left to get the

00:00:26,550 --> 00:00:30,090
work done right that's the basic

00:00:28,380 --> 00:00:32,550
principle of redundancy in the

00:00:30,090 --> 00:00:34,410
infrastructure level above that you've

00:00:32,550 --> 00:00:36,899
got a switching layer and the problem

00:00:34,410 --> 00:00:37,980
with the switching layer is that it's

00:00:36,899 --> 00:00:39,660
the thing that has to route around

00:00:37,980 --> 00:00:41,640
failures and it's probably the least

00:00:39,660 --> 00:00:43,920
well tested code in your entire system

00:00:41,640 --> 00:00:45,960
right because it only gets exercised

00:00:43,920 --> 00:00:47,820
when something goes wrong and its job is

00:00:45,960 --> 00:00:49,680
to avoid the broken thing and use

00:00:47,820 --> 00:00:51,570
something else maybe scale up some extra

00:00:49,680 --> 00:00:53,610
sources this is the code that gets

00:00:51,570 --> 00:00:56,460
executed when you failover to another

00:00:53,610 --> 00:00:59,520
data center or a zone or a region and

00:00:56,460 --> 00:01:01,890
you know how do you exercise that code

00:00:59,520 --> 00:01:03,750
it's really critical how do you switch

00:01:01,890 --> 00:01:05,489
customers so that they always can see a

00:01:03,750 --> 00:01:07,320
working system and then we have these

00:01:05,489 --> 00:01:08,760
applications what's your application do

00:01:07,320 --> 00:01:11,130
when something goes wrong is it just

00:01:08,760 --> 00:01:13,400
crash fall over go into infinite loops

00:01:11,130 --> 00:01:17,850
or does it actually have some graceful

00:01:13,400 --> 00:01:20,880
some algorithms in it that sort of get

00:01:17,850 --> 00:01:24,360
some graceful degradation in them and

00:01:20,880 --> 00:01:28,140
the top level is these pesky people the

00:01:24,360 --> 00:01:30,180
users and the operators and you can get

00:01:28,140 --> 00:01:32,880
a perfectly working incredibly reliable

00:01:30,180 --> 00:01:34,710
robust system and the users were all

00:01:32,880 --> 00:01:36,869
screwed up right there's lots and lots

00:01:34,710 --> 00:01:39,299
of examples of outages caused by

00:01:36,869 --> 00:01:41,070
confused operators when the system was

00:01:39,299 --> 00:01:42,720
trying to cope with some underlying

00:01:41,070 --> 00:01:45,630
failure or they were running through

00:01:42,720 --> 00:01:46,950
test processes and the output was like

00:01:45,630 --> 00:01:49,439
just got confused and you broke

00:01:46,950 --> 00:01:51,420
everything rebooting is usually the

00:01:49,439 --> 00:01:54,479
wrong thing so how do we train people to

00:01:51,420 --> 00:01:56,369
get through this fire drills right

00:01:54,479 --> 00:01:57,899
everyone here has been in a fire drill

00:01:56,369 --> 00:01:59,579
you've all stood in the parking lot and

00:01:57,899 --> 00:02:01,170
taking you're taking the elevator not

00:01:59,579 --> 00:02:03,390
taking the elevator go down they exit

00:02:01,170 --> 00:02:05,250
stairs and sit in the parking lot it's a

00:02:03,390 --> 00:02:07,500
bit a universal thing everyone in the

00:02:05,250 --> 00:02:08,849
world has been through for the same fire

00:02:07,500 --> 00:02:12,690
training it's one of the most universal

00:02:08,849 --> 00:02:14,040
safety codes that you can find and it's

00:02:12,690 --> 00:02:15,959
boring until I had the building

00:02:14,040 --> 00:02:17,969
is actually on fire and then lots of

00:02:15,959 --> 00:02:20,219
people get out safely because they can

00:02:17,969 --> 00:02:21,930
and they know what to do and they know

00:02:20,219 --> 00:02:23,219
not to try and go down the elevator you

00:02:21,930 --> 00:02:25,109
know take the elevators and they know

00:02:23,219 --> 00:02:26,879
where to meet in the parking lot and you

00:02:25,109 --> 00:02:30,060
know that everyone got out of life right

00:02:26,879 --> 00:02:32,519
so here's the question who runs the fire

00:02:30,060 --> 00:02:35,159
drill for IT for your systems when your

00:02:32,519 --> 00:02:37,439
computers are on fire or broken right

00:02:35,159 --> 00:02:39,780
what is that fire drill and that is what

00:02:37,439 --> 00:02:41,340
I think is the core idea behind the

00:02:39,780 --> 00:02:42,750
chaos engineering team if you're trying

00:02:41,340 --> 00:02:44,340
to explain this to management well this

00:02:42,750 --> 00:02:47,010
what is this thing about it's like

00:02:44,340 --> 00:02:48,180
running fire drills and really testing

00:02:47,010 --> 00:02:50,730
that you have the disaster recovery

00:02:48,180 --> 00:02:53,010
processors and exercising all of the

00:02:50,730 --> 00:02:56,359
error handling code paths that you have

00:02:53,010 --> 00:02:56,359
in your recovery systems

00:03:02,490 --> 00:03:04,550

YouTube URL: https://www.youtube.com/watch?v=4VleTKY0QAM


