Title: Aditya Sharma (Crosscode) interviewed at O'Reilly Software Architecture Conference NY 2018
Publication date: 2018-03-13
Playlist: O'Reilly Software Architecture Conference 2018 - New York, New York
Description: 
	Join us in person at the O'Reilly Software Architecture Conference to learn the tools, techniques, and leadership skills needed in the evolving discipline of software architecture. Learn more: https://oreil.ly/2NNTQQK

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:00,000 --> 00:00:03,840
hi this is Mike Henderson software

00:00:02,429 --> 00:00:05,879
architecture in New York City

00:00:03,840 --> 00:00:07,859
I'm here with Adi from cross-code audio

00:00:05,879 --> 00:00:09,570
you doing very well thanks so much

00:00:07,859 --> 00:00:11,910
so how was this event been for you guys

00:00:09,570 --> 00:00:13,410
so far so far so good great we have got

00:00:11,910 --> 00:00:15,540
a fantastic traction coming out of this

00:00:13,410 --> 00:00:18,869
event and we already have a lot of

00:00:15,540 --> 00:00:21,119
interest and customers asking us to sign

00:00:18,869 --> 00:00:22,800
them up for PLC's and trials so wait

00:00:21,119 --> 00:00:23,970
wait what do you guys do because I mean

00:00:22,800 --> 00:00:25,140
are they coming up here and saying what

00:00:23,970 --> 00:00:26,160
do you guys do and then they're sending

00:00:25,140 --> 00:00:28,260
it but that is how the conversation

00:00:26,160 --> 00:00:30,750
starts so the catch phrase here is

00:00:28,260 --> 00:00:32,880
dependency mapping so that catches the

00:00:30,750 --> 00:00:35,460
intention and customers will come up to

00:00:32,880 --> 00:00:37,110
us and ask us help us understand what

00:00:35,460 --> 00:00:38,809
your point of view is around dependency

00:00:37,110 --> 00:00:41,610
mapping and how it would be applicable

00:00:38,809 --> 00:00:43,829
into our enterprise so what inspired you

00:00:41,610 --> 00:00:45,809
to go after dependency mapping great

00:00:43,829 --> 00:00:47,820
question so it all actually started with

00:00:45,809 --> 00:00:50,190
my own personal experiences and my own

00:00:47,820 --> 00:00:51,930
personal frustrations I had the good

00:00:50,190 --> 00:00:54,690
fortune to work with large organizations

00:00:51,930 --> 00:00:57,570
like Philipp Packard and Cisco and IBM

00:00:54,690 --> 00:00:59,309
and with these large companies when you

00:00:57,570 --> 00:01:00,719
have tens of thousands of applications

00:00:59,309 --> 00:01:02,789
and tens of thousands of databases

00:01:00,719 --> 00:01:05,060
running it is virtually impossible for

00:01:02,789 --> 00:01:06,750
anybody to figure out exactly how each

00:01:05,060 --> 00:01:08,670
applications and their various

00:01:06,750 --> 00:01:10,409
components within interact with each

00:01:08,670 --> 00:01:13,680
other so whenever you have to make a

00:01:10,409 --> 00:01:16,049
change it becomes almost impossible to

00:01:13,680 --> 00:01:18,090
execute it seamlessly and effortlessly

00:01:16,049 --> 00:01:19,560
because nobody understands if by

00:01:18,090 --> 00:01:20,790
touching an application what else would

00:01:19,560 --> 00:01:23,130
you be breaking the rest of the

00:01:20,790 --> 00:01:25,439
enterprise so what types of

00:01:23,130 --> 00:01:28,290
organizations is this for everyone it is

00:01:25,439 --> 00:01:30,930
for everyone it could be for the fortune

00:01:28,290 --> 00:01:33,060
top five all the way down to the small

00:01:30,930 --> 00:01:34,619
and medium enterprises so there's an

00:01:33,060 --> 00:01:37,170
architect built this in at the very

00:01:34,619 --> 00:01:39,869
front when they're when they're building

00:01:37,170 --> 00:01:42,210
their application or is this a at the

00:01:39,869 --> 00:01:44,340
end of your building you put this on to

00:01:42,210 --> 00:01:47,340
find out what's gone wrong or no it is

00:01:44,340 --> 00:01:49,439
right there the beginning actually even

00:01:47,340 --> 00:01:50,970
before you start making any changes it

00:01:49,439 --> 00:01:53,070
is important for you to understand how

00:01:50,970 --> 00:01:55,229
the various idea applications in your

00:01:53,070 --> 00:01:57,509
organization they work together to

00:01:55,229 --> 00:02:00,930
support the business capabilities that

00:01:57,509 --> 00:02:02,340
you are driving so it starts with giving

00:02:00,930 --> 00:02:05,280
you that fundamental knowledge that

00:02:02,340 --> 00:02:07,130
fundamental piece of information of how

00:02:05,280 --> 00:02:09,890
the various applications are

00:02:07,130 --> 00:02:11,800
together and now you have the capability

00:02:09,890 --> 00:02:13,849
to go down and see if you were to make

00:02:11,800 --> 00:02:16,489
changes to an application or database

00:02:13,849 --> 00:02:19,550
what else in your organization would get

00:02:16,489 --> 00:02:21,140
impacted you are sure that you won't end

00:02:19,550 --> 00:02:22,370
up breaking things so you take out the

00:02:21,140 --> 00:02:24,260
business and IT risks out of the

00:02:22,370 --> 00:02:25,640
equation of making changes in your

00:02:24,260 --> 00:02:27,200
enterprise and this is work with

00:02:25,640 --> 00:02:29,239
containers and micro services is

00:02:27,200 --> 00:02:31,099
everything everything we support all

00:02:29,239 --> 00:02:32,959
modern languages we support containers

00:02:31,099 --> 00:02:34,880
micro services you name it is supported

00:02:32,959 --> 00:02:36,200
so you can look inside of a container

00:02:34,880 --> 00:02:39,410
that might be deployed on a machine

00:02:36,200 --> 00:02:40,970
mm-hmm in another country and know that

00:02:39,410 --> 00:02:43,069
something's dependent on that if it goes

00:02:40,970 --> 00:02:44,650
down absolutely it doesn't matter where

00:02:43,069 --> 00:02:46,970
the containers are sitting they could be

00:02:44,650 --> 00:02:48,470
anywhere on the planet on the cloud on

00:02:46,970 --> 00:02:51,709
Prem really doesn't matter so Claude

00:02:48,470 --> 00:02:54,830
cross boat is really optimized for all

00:02:51,709 --> 00:02:55,970
platforms technology agonistic really

00:02:54,830 --> 00:02:58,760
doesn't matter what technology you're

00:02:55,970 --> 00:02:59,870
running and really doesn't care whether

00:02:58,760 --> 00:03:01,970
they're sitting on the Primo on the

00:02:59,870 --> 00:03:05,000
cloud and so in an organization what

00:03:01,970 --> 00:03:07,370
type of individual is going to probably

00:03:05,000 --> 00:03:10,700
bring cross-code into the organization

00:03:07,370 --> 00:03:14,060
is it a developer is an architect is it

00:03:10,700 --> 00:03:16,819
the CIO who is that person that you're

00:03:14,060 --> 00:03:18,019
the magic holder so I'll ask the

00:03:16,819 --> 00:03:20,390
question a little bit differently I

00:03:18,019 --> 00:03:22,310
would say Cross code is applicable to

00:03:20,390 --> 00:03:23,900
everybody in an organization right from

00:03:22,310 --> 00:03:27,019
a developer all the way up to the CIO

00:03:23,900 --> 00:03:29,540
the CIO needs to know what the makeup in

00:03:27,019 --> 00:03:32,389
the breakup of his enterprise is and how

00:03:29,540 --> 00:03:35,480
complexes environment is and if he were

00:03:32,389 --> 00:03:37,700
to make a change or support a new

00:03:35,480 --> 00:03:39,319
business model he needs to understand

00:03:37,700 --> 00:03:41,269
you know what would be total impact for

00:03:39,319 --> 00:03:43,760
the organization that is from a CIOs

00:03:41,269 --> 00:03:46,299
perspective so big changes like cloud

00:03:43,760 --> 00:03:48,500
migration digital transformation

00:03:46,299 --> 00:03:50,750
modernization moving your monolithic

00:03:48,500 --> 00:03:52,989
legacy quotes now over to micro services

00:03:50,750 --> 00:03:56,030
if a CIO needs to undertake those

00:03:52,989 --> 00:03:58,340
transformative initiatives within the

00:03:56,030 --> 00:04:01,010
organization cross-code will help him or

00:03:58,340 --> 00:04:02,630
her and get that view as to how easy or

00:04:01,010 --> 00:04:04,639
how difficult it would be and all the

00:04:02,630 --> 00:04:06,560
way down to the developers it is their

00:04:04,639 --> 00:04:10,819
fundamental tool it is their

00:04:06,560 --> 00:04:12,260
you know not to be you know mmm but it

00:04:10,819 --> 00:04:14,120
would be the Bible or the Holy Grail

00:04:12,260 --> 00:04:16,940
that they can refer to to figure out

00:04:14,120 --> 00:04:19,040
exactly where the dependencies lie and

00:04:16,940 --> 00:04:20,600
you know what all considerations they

00:04:19,040 --> 00:04:22,190
need to be cognizant about before making

00:04:20,600 --> 00:04:23,870
those changes sounds like a girl's to be

00:04:22,190 --> 00:04:26,300
an insurance policy for large companies

00:04:23,870 --> 00:04:28,100
do in their transformation where if

00:04:26,300 --> 00:04:30,200
they're gonna break something you're

00:04:28,100 --> 00:04:31,400
gonna know about it pretty quickly or if

00:04:30,200 --> 00:04:33,500
something doesn't work and it's

00:04:31,400 --> 00:04:35,720
dependent on something else sounds like

00:04:33,500 --> 00:04:39,139
like a lot of these large companies are

00:04:35,720 --> 00:04:41,120
doing transformation are too slow

00:04:39,139 --> 00:04:44,780
because they're not sure what's going to

00:04:41,120 --> 00:04:46,880
break absolutely so it takes those

00:04:44,780 --> 00:04:48,830
business and IT risks completely out of

00:04:46,880 --> 00:04:51,919
the equation and not to mention it

00:04:48,830 --> 00:04:54,590
speeds up the go to market for your key

00:04:51,919 --> 00:04:56,660
initiatives by over 50% so we have run

00:04:54,590 --> 00:04:58,850
some simulations and the simulations

00:04:56,660 --> 00:05:02,000
came back and actually you know real

00:04:58,850 --> 00:05:03,050
customers have also validated this that

00:05:02,000 --> 00:05:05,300
using cross code

00:05:03,050 --> 00:05:07,370
effectively speeds up the go-to-market

00:05:05,300 --> 00:05:10,520
of their key engagements but up to 50%

00:05:07,370 --> 00:05:13,460
and reduces their costs also by up to

00:05:10,520 --> 00:05:16,130
50% I look at the market is kind of two

00:05:13,460 --> 00:05:18,560
things disruptors and transformers and

00:05:16,130 --> 00:05:19,880
the transformers are staying ahead of

00:05:18,560 --> 00:05:23,000
the disruptors or they're going to be

00:05:19,880 --> 00:05:25,640
gobbled up you're helping both we're

00:05:23,000 --> 00:05:26,840
helping both we're helping so we don't

00:05:25,640 --> 00:05:28,250
want to be caught into the battle

00:05:26,840 --> 00:05:30,650
between the transformers or the

00:05:28,250 --> 00:05:32,660
disruptors but what I would say that you

00:05:30,650 --> 00:05:35,120
know we have really brought out a true

00:05:32,660 --> 00:05:36,889
value product which is addressing a very

00:05:35,120 --> 00:05:39,200
very fundamental problem in the industry

00:05:36,889 --> 00:05:42,139
which even you know in to this day and

00:05:39,200 --> 00:05:44,270
age still exists so what's on your

00:05:42,139 --> 00:05:45,979
roadmap for six to twelve months from

00:05:44,270 --> 00:05:48,140
now what would you like cross code to be

00:05:45,979 --> 00:05:50,600
doing differently than than you are

00:05:48,140 --> 00:05:53,570
well we have a fantastic roadmap so

00:05:50,600 --> 00:05:55,370
right now the emphasis is to cover

00:05:53,570 --> 00:05:57,230
almost every major technology that

00:05:55,370 --> 00:05:58,760
exists out there today crosscut is

00:05:57,230 --> 00:06:00,980
supporting all the major and all the

00:05:58,760 --> 00:06:03,470
modern technologies that exist on the

00:06:00,980 --> 00:06:05,030
roadmap we also want to support the IBM

00:06:03,470 --> 00:06:08,090
z stack the mainframes are the mid

00:06:05,030 --> 00:06:11,120
ranges nobody out there today supports

00:06:08,090 --> 00:06:12,830
the architectural decompositions and

00:06:11,120 --> 00:06:15,560
those dependency mappings when it comes

00:06:12,830 --> 00:06:16,910
to those legacy applications like the

00:06:15,560 --> 00:06:19,400
mainframes and mid-range so that is a

00:06:16,910 --> 00:06:20,780
priority for us the COBOL absolutely we

00:06:19,400 --> 00:06:22,790
will be supporting COBOL also in about

00:06:20,780 --> 00:06:25,310
another six months and look out for the

00:06:22,790 --> 00:06:27,710
version 3.0 four across code a version

00:06:25,310 --> 00:06:30,470
1.0 and 2.0 were in game changers enough

00:06:27,710 --> 00:06:32,660
3.2 is gonna be explosive I can't give

00:06:30,470 --> 00:06:35,240
you much more details about what the

00:06:32,660 --> 00:06:37,760
timeframe like bigger than your

00:06:35,240 --> 00:06:39,230
breadbasket this year next year no no

00:06:37,760 --> 00:06:40,790
three dot o would be coming out towards

00:06:39,230 --> 00:06:45,080
the end of this year or the first part

00:06:40,790 --> 00:06:47,360
of next year but 2.0 is coming out in

00:06:45,080 --> 00:06:49,430
the May time frame and we also have two

00:06:47,360 --> 00:06:52,010
dot one and two doc twos planned out

00:06:49,430 --> 00:06:55,610
which would be all completed by the June

00:06:52,010 --> 00:06:57,680
timeframe so if if everything goes right

00:06:55,610 --> 00:07:00,170
what would you like to say cross-code

00:06:57,680 --> 00:07:01,430
will be doing differently if we sit down

00:07:00,170 --> 00:07:03,350
next year at this time and have a

00:07:01,430 --> 00:07:06,020
conversation what do you want to say you

00:07:03,350 --> 00:07:07,730
accomplished in that time period well I

00:07:06,020 --> 00:07:11,270
would say that God that crossword has

00:07:07,730 --> 00:07:13,580
been that has proven to be that

00:07:11,270 --> 00:07:15,770
fundamental Holy Grail or the single

00:07:13,580 --> 00:07:18,320
source of truth that organizations would

00:07:15,770 --> 00:07:20,150
look deep inside to refer to when they

00:07:18,320 --> 00:07:22,730
have to understand their applications

00:07:20,150 --> 00:07:25,100
and their IT architectures a little bit

00:07:22,730 --> 00:07:27,129
how do we look for thank you so much

00:07:25,100 --> 00:07:29,189
here thank you so much

00:07:27,129 --> 00:07:29,189

YouTube URL: https://www.youtube.com/watch?v=O5v0QNVjuo8


