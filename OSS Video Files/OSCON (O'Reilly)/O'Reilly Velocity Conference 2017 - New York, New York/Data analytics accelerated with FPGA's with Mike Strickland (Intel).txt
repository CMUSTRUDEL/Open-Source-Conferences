Title: Data analytics accelerated with FPGA's with Mike Strickland (Intel)
Publication date: 2017-10-11
Playlist: O'Reilly Velocity Conference 2017 - New York, New York
Description: 
	Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:00,000 --> 00:00:03,149
hi this is Mike Hendrickson from

00:00:01,500 --> 00:00:05,370
velocity in New York City I'm here with

00:00:03,149 --> 00:00:07,470
Mike Strickland from Intel Mike how you

00:00:05,370 --> 00:00:09,269
doing I'm good thanks how is this Ben

00:00:07,470 --> 00:00:12,769
event been for you so far

00:00:09,269 --> 00:00:14,910
fairly good this is a new area for

00:00:12,769 --> 00:00:17,460
programmable solutions group of Intel

00:00:14,910 --> 00:00:18,770
FPGA is the data analytics area but we

00:00:17,460 --> 00:00:21,480
have a lot to talk about at the show

00:00:18,770 --> 00:00:25,769
FPGAs can you unpack that a little bit

00:00:21,480 --> 00:00:27,990
it's an acronym it is it is so FPGA

00:00:25,769 --> 00:00:29,929
stands for field programmable gate array

00:00:27,990 --> 00:00:32,820
they've been around for decades but

00:00:29,929 --> 00:00:35,880
hidden away in communication devices and

00:00:32,820 --> 00:00:37,829
our challenge now is to have them play a

00:00:35,880 --> 00:00:41,340
role and data analytics and still keep

00:00:37,829 --> 00:00:43,379
them hidden so keep that keep them

00:00:41,340 --> 00:00:45,510
available for like devil why would a

00:00:43,379 --> 00:00:47,070
DevOps person or someone in an

00:00:45,510 --> 00:00:49,980
organization that's concerned about

00:00:47,070 --> 00:00:52,980
performance want to use an FPGA to help

00:00:49,980 --> 00:00:55,260
their IT transform or people come better

00:00:52,980 --> 00:00:56,760
what what is the play there sure so as

00:00:55,260 --> 00:00:58,770
you know I mean the struggle and Big

00:00:56,760 --> 00:01:00,510
Data it just increases every year the

00:00:58,770 --> 00:01:02,760
massive amount of data that challenge do

00:01:00,510 --> 00:01:05,010
data analytics an FPGA is complete quite

00:01:02,760 --> 00:01:07,110
a role to accelerate many of the data

00:01:05,010 --> 00:01:09,090
analytics workloads all the way from

00:01:07,110 --> 00:01:12,479
traditional relational database - you

00:01:09,090 --> 00:01:15,180
know sequel into flat files so we have

00:01:12,479 --> 00:01:17,909
opportunities to have the FPGA do that

00:01:15,180 --> 00:01:21,810
type of acceleration in again hiding the

00:01:17,909 --> 00:01:24,470
fpga with intel frameworks that the fpga

00:01:21,810 --> 00:01:28,200
can integrate - such as spark frameworks

00:01:24,470 --> 00:01:31,650
or partners just coming in as a storage

00:01:28,200 --> 00:01:35,520
plug-in to a database like maria DB so

00:01:31,650 --> 00:01:37,619
we have a number of opportunities now to

00:01:35,520 --> 00:01:40,350
help these data centers that are

00:01:37,619 --> 00:01:42,180
struggling with increasing demands to

00:01:40,350 --> 00:01:44,549
accelerate their workloads using FPGA

00:01:42,180 --> 00:01:46,290
and so a lot of the data centers are

00:01:44,549 --> 00:01:48,659
struggling they may have a data team

00:01:46,290 --> 00:01:50,340
that's trying to help that but then if

00:01:48,659 --> 00:01:52,110
you look at it organizationally does

00:01:50,340 --> 00:01:54,360
that roll up to a devops type person

00:01:52,110 --> 00:01:56,549
that has to deploy all these systems and

00:01:54,360 --> 00:01:57,899
deploy the technologies are they the

00:01:56,549 --> 00:02:00,630
ones that are going to be involved with

00:01:57,899 --> 00:02:02,340
the FPGAs as well yes absolutely so

00:02:00,630 --> 00:02:04,770
they're probably being charged with

00:02:02,340 --> 00:02:06,000
trying to manage the IT budget to a

00:02:04,770 --> 00:02:08,119
reasonable amount while meaning

00:02:06,000 --> 00:02:10,430
everyone's service level agreement

00:02:08,119 --> 00:02:13,109
requirements and new applications and

00:02:10,430 --> 00:02:16,859
FPGAs can play quite a role to make that

00:02:13,109 --> 00:02:21,239
job easier to implement so as an example

00:02:16,859 --> 00:02:23,459
we have a partner swarm 64 who can take

00:02:21,239 --> 00:02:27,120
real-time data analytics and accelerate

00:02:23,459 --> 00:02:29,609
it by 10x so imagine being able to with

00:02:27,120 --> 00:02:32,939
one server do the job that normally

00:02:29,609 --> 00:02:36,169
takes a 10 server so as one example that

00:02:32,939 --> 00:02:38,870
could be a great help to someone in the

00:02:36,169 --> 00:02:41,159
operations side trying to deal with

00:02:38,870 --> 00:02:42,419
increasing inquiring requirements for

00:02:41,159 --> 00:02:45,030
real-time data analytics

00:02:42,419 --> 00:02:47,280
rique Reis increasing requirements also

00:02:45,030 --> 00:02:49,109
there is there a security play here as

00:02:47,280 --> 00:02:53,159
well does it make things a little bit

00:02:49,109 --> 00:02:56,579
more safe for yeah absolutely so FPGAs

00:02:53,159 --> 00:02:59,040
can also encrypt data quite easily FPGAs

00:02:56,579 --> 00:03:01,079
can appear as a plug-in card in some

00:02:59,040 --> 00:03:03,359
cases a PCI Express plug-in card and

00:03:01,079 --> 00:03:05,010
other cases they can take data directly

00:03:03,359 --> 00:03:08,340
from a network and do inline

00:03:05,010 --> 00:03:12,090
acceleration so FPGA is play a role in

00:03:08,340 --> 00:03:14,129
compression encryption fast look ups so

00:03:12,090 --> 00:03:16,590
these are all strategies to accelerate

00:03:14,129 --> 00:03:19,139
data analytics and again keeping it BJ

00:03:16,590 --> 00:03:21,090
hidden underneath a framework so that

00:03:19,139 --> 00:03:23,069
nobody has to ever rewrite their

00:03:21,090 --> 00:03:25,290
application code so keep it hidden

00:03:23,069 --> 00:03:27,269
is there an architecture or a best

00:03:25,290 --> 00:03:30,060
practice or is there some way that a

00:03:27,269 --> 00:03:33,209
DevOps engineer can get going with this

00:03:30,060 --> 00:03:34,979
and understand what to do so being Intel

00:03:33,209 --> 00:03:37,229
of course we always have some frameworks

00:03:34,979 --> 00:03:39,540
for people a lot to ease the

00:03:37,229 --> 00:03:41,549
implementation of things and for the

00:03:39,540 --> 00:03:43,859
DevOps person they'll probably be aware

00:03:41,549 --> 00:03:45,569
of these frameworks but for word the end

00:03:43,859 --> 00:03:49,109
user they won't but for the DevOps

00:03:45,569 --> 00:03:53,009
person Intel has announced yesterday the

00:03:49,109 --> 00:03:55,560
first ever Intel programmable card it's

00:03:53,009 --> 00:03:56,669
a piece expressed low profile card with

00:03:55,560 --> 00:03:59,819
an FPGA on it

00:03:56,669 --> 00:04:02,250
Intel branded generally available in the

00:03:59,819 --> 00:04:05,340
first half of this coming year as well

00:04:02,250 --> 00:04:07,560
Intel has announced a framework to aid

00:04:05,340 --> 00:04:09,959
with developing applications for this

00:04:07,560 --> 00:04:14,069
card to make it easier to move to new

00:04:09,959 --> 00:04:16,500
generations of FPGA cards and in fact

00:04:14,069 --> 00:04:19,220
even the host driver interface is open

00:04:16,500 --> 00:04:20,690
sourced on github so what

00:04:19,220 --> 00:04:24,050
what customers like to see in terms of

00:04:20,690 --> 00:04:25,490
some stability and then as well as I

00:04:24,050 --> 00:04:27,440
mentioned at the higher level we could

00:04:25,490 --> 00:04:30,650
put this card underneath for instance a

00:04:27,440 --> 00:04:33,830
spark implementation doing compression

00:04:30,650 --> 00:04:35,750
again completely hiding the FPGA so this

00:04:33,830 --> 00:04:37,670
is going to play well for people doing

00:04:35,750 --> 00:04:40,490
CI and CD continuous integration

00:04:37,670 --> 00:04:43,160
continuous deployment is that can be

00:04:40,490 --> 00:04:45,290
make it easy to almost like change the

00:04:43,160 --> 00:04:47,210
wheels on a moving vehicle I mean is

00:04:45,290 --> 00:04:50,240
that where we're going here absolutely

00:04:47,210 --> 00:04:54,230
so the the the cloud service providers

00:04:50,240 --> 00:04:55,520
have been very good adopters of that

00:04:54,230 --> 00:04:57,290
PGA's because they're an environment

00:04:55,520 --> 00:04:59,510
that's constantly changing so Microsoft

00:04:57,290 --> 00:05:01,550
for instance has shared that they like

00:04:59,510 --> 00:05:03,500
at BJ's because as our rhythms change

00:05:01,550 --> 00:05:06,740
quickly they can accelerate them with

00:05:03,500 --> 00:05:08,930
the FPGA Aware's with a traditional ASIC

00:05:06,740 --> 00:05:11,120
approach it might take a couple of years

00:05:08,930 --> 00:05:14,180
to design a chip and a test and bring it

00:05:11,120 --> 00:05:16,070
up so absolutely for new algorithms that

00:05:14,180 --> 00:05:18,560
are constantly preparing for flexibility

00:05:16,070 --> 00:05:20,840
you can't match what the FPGA can

00:05:18,560 --> 00:05:23,570
provide so Mike if you and I sat down

00:05:20,840 --> 00:05:26,600
twelve months from now here in New York

00:05:23,570 --> 00:05:28,580
City again next year mm-hmm what would

00:05:26,600 --> 00:05:33,460
you like to say it's different with

00:05:28,580 --> 00:05:36,680
Intel your FPGAs and your your your

00:05:33,460 --> 00:05:38,180
offerings to a DevOps engineer what what

00:05:36,680 --> 00:05:39,770
would you like to see different so I

00:05:38,180 --> 00:05:41,330
think they here from today I think one

00:05:39,770 --> 00:05:44,510
of the big differences is we'll have

00:05:41,330 --> 00:05:47,270
some really nice customer use cases to

00:05:44,510 --> 00:05:49,370
share so this card as I mentioned is

00:05:47,270 --> 00:05:51,650
launching in volume first half of this

00:05:49,370 --> 00:05:55,090
coming year a year from now we'll have

00:05:51,650 --> 00:05:57,710
some real nice quantified acceleration

00:05:55,090 --> 00:06:00,010
results and some enthusiastic supporters

00:05:57,710 --> 00:06:02,600
talking about how it really helped them

00:06:00,010 --> 00:06:04,040
increase the the workloads within your

00:06:02,600 --> 00:06:06,530
data centers and move things along

00:06:04,040 --> 00:06:08,479
faster so I would say a year from now I

00:06:06,530 --> 00:06:10,700
hope to be talking to you sharing some

00:06:08,479 --> 00:06:12,650
of these exciting and customer case

00:06:10,700 --> 00:06:15,880
studies and so when you say release

00:06:12,650 --> 00:06:20,540
first half of 2018 worldwide release

00:06:15,880 --> 00:06:22,010
absolutely okay absolutely so I like to

00:06:20,540 --> 00:06:23,600
say that Intel is usually only approved

00:06:22,010 --> 00:06:25,100
vendor list so it should be pretty easy

00:06:23,600 --> 00:06:27,830
for a customer to be able to order one

00:06:25,100 --> 00:06:30,020
of these cards get a prototype going and

00:06:27,830 --> 00:06:30,500
then hopefully go from pilot to

00:06:30,020 --> 00:06:30,969
production

00:06:30,500 --> 00:06:32,559
X

00:06:30,969 --> 00:06:36,239
Mike wheeler forward that conversation

00:06:32,559 --> 00:06:36,239
in 12 months likewise thank you

00:06:42,360 --> 00:06:44,419

YouTube URL: https://www.youtube.com/watch?v=sleP6BK_UQU


