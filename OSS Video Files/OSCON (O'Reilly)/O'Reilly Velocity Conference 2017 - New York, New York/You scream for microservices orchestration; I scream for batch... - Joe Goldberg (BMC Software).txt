Title: You scream for microservices orchestration; I scream for batch... - Joe Goldberg (BMC Software)
Publication date: 2017-10-03
Playlist: O'Reilly Velocity Conference 2017 - New York, New York
Description: 
	View the full set of keynotes, sessions, and tutorials from Velocity New York 2017:
https://www.safaribooksonline.com/library/view/velocity-conference-2017/9781491976340/

Business transformation has led us to adopt new technologies (containers, the cloud, big data, and everything as code) and process and cultural changes (Agile, CI/CD, and DevOps). How batch application automation is built, tested, and run must evolve to keep pace. Joe Goldberg explores jobs as code, which looks at batch application automation from an SDLC perspectiveâ€”an approach that embeds expectations within a modern automation platform.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:00,810 --> 00:00:06,210
hi everyone good morning great to be in

00:00:03,330 --> 00:00:08,910
New York again used to live here but I

00:00:06,210 --> 00:00:12,290
don't anymore I'm gonna talk about

00:00:08,910 --> 00:00:16,080
everyone's favorite topic batch

00:00:12,290 --> 00:00:19,369
scheduling workflow management you know

00:00:16,080 --> 00:00:21,990
the stuff that the automation that runs

00:00:19,369 --> 00:00:24,029
applications in production as you can

00:00:21,990 --> 00:00:25,890
see from the title I think that there

00:00:24,029 --> 00:00:27,359
are a variety of different ways people

00:00:25,890 --> 00:00:30,239
describe this kind of automation

00:00:27,359 --> 00:00:32,610
nowadays certainly for those who've been

00:00:30,239 --> 00:00:35,580
around for a while batch or scheduling

00:00:32,610 --> 00:00:38,820
is a very common term but in more modern

00:00:35,580 --> 00:00:41,040
context orchestrating micro services and

00:00:38,820 --> 00:00:43,350
running containers on the cloud and

00:00:41,040 --> 00:00:45,000
modern infrastructure but I think the

00:00:43,350 --> 00:00:47,310
key here that I want to talk about is

00:00:45,000 --> 00:00:50,670
that in a modern application delivery

00:00:47,310 --> 00:00:53,310
environment we believe that this kind of

00:00:50,670 --> 00:00:55,140
automation is a logical part of the

00:00:53,310 --> 00:00:58,430
application and should be treated as

00:00:55,140 --> 00:01:02,850
such and hence the idea of jobs is code

00:00:58,430 --> 00:01:06,090
now Forrester in a survey just a few

00:01:02,850 --> 00:01:07,950
weeks ago discovered that although batch

00:01:06,090 --> 00:01:11,280
may be shifting in terms of how it's

00:01:07,950 --> 00:01:14,429
being used it is still massively

00:01:11,280 --> 00:01:17,369
important and practitioners as you can

00:01:14,429 --> 00:01:19,829
see by the numbers in massive majority

00:01:17,369 --> 00:01:22,590
agree that it is a key element of an

00:01:19,829 --> 00:01:25,350
application and this approach to be able

00:01:22,590 --> 00:01:27,030
to manage it in the same way that you

00:01:25,350 --> 00:01:29,549
manage any other part of your

00:01:27,030 --> 00:01:31,619
application using an as code kind of

00:01:29,549 --> 00:01:34,139
approach I'll now a guest who may be

00:01:31,619 --> 00:01:37,020
infrastructure is code is an important

00:01:34,139 --> 00:01:40,259
thing to do now from our perspective of

00:01:37,020 --> 00:01:42,749
course we believe that you have to take

00:01:40,259 --> 00:01:44,759
a platform approach to batch and there's

00:01:42,749 --> 00:01:47,249
a number of characteristics that are

00:01:44,759 --> 00:01:49,979
absolutely critical of how you want to

00:01:47,249 --> 00:01:51,479
be able to solve or address this kind of

00:01:49,979 --> 00:01:54,829
automation challenge in your

00:01:51,479 --> 00:01:57,179
organization so if we look at what

00:01:54,829 --> 00:01:59,969
automation requirements are in the

00:01:57,179 --> 00:02:01,499
enterprise first of all you know we were

00:01:59,969 --> 00:02:03,229
just having a conversation actually in

00:02:01,499 --> 00:02:06,029
the back before I came on stage

00:02:03,229 --> 00:02:07,889
technology and IT are kind of an

00:02:06,029 --> 00:02:10,229
architectural kind of undertaking

00:02:07,889 --> 00:02:13,110
nothing ever goes away so no matter how

00:02:10,229 --> 00:02:13,940
modern your enterprise might be except

00:02:13,110 --> 00:02:17,000
for perhaps a

00:02:13,940 --> 00:02:20,090
few exceptions everybody has massive

00:02:17,000 --> 00:02:21,920
what I would call hyper heterogeneity so

00:02:20,090 --> 00:02:25,400
not only do you have containers and

00:02:21,920 --> 00:02:27,350
cloud and meso sand you know Hadoop

00:02:25,400 --> 00:02:31,700
clusters but you also have mainframes

00:02:27,350 --> 00:02:34,520
and as400 and CRM systems and you really

00:02:31,700 --> 00:02:37,280
need to be able to manage all of them in

00:02:34,520 --> 00:02:39,560
this kind of fashion but you don't want

00:02:37,280 --> 00:02:41,150
to have to spend a tremendous amount of

00:02:39,560 --> 00:02:42,740
time and effort on each individual

00:02:41,150 --> 00:02:45,230
component you really want to kind of

00:02:42,740 --> 00:02:48,920
elevate an abstract all that complexity

00:02:45,230 --> 00:02:52,130
and be able to consistently build and

00:02:48,920 --> 00:02:54,740
manage these application components in

00:02:52,130 --> 00:02:57,470
an automated fashion across the entire

00:02:54,740 --> 00:02:59,120
enterprise you want something to Center

00:02:57,470 --> 00:03:01,400
prize great that means it's got to be

00:02:59,120 --> 00:03:03,200
reliable and scalable and Security's got

00:03:01,400 --> 00:03:06,080
to be built-in you got to have auditing

00:03:03,200 --> 00:03:08,720
and just a variety of other components

00:03:06,080 --> 00:03:12,050
that nowadays everybody expects from an

00:03:08,720 --> 00:03:13,850
enterprise solution you also have to

00:03:12,050 --> 00:03:17,030
address the diversity of users that

00:03:13,850 --> 00:03:19,340
exist in an enterprise so it's not

00:03:17,030 --> 00:03:21,200
enough to have a tool or a solution that

00:03:19,340 --> 00:03:23,300
is going to be well-suited for highly

00:03:21,200 --> 00:03:24,980
technical audiences once you get out

00:03:23,300 --> 00:03:28,070
into the enterprise you have business

00:03:24,980 --> 00:03:29,630
users you may have transient students

00:03:28,070 --> 00:03:32,630
and in turn you know sort of interns

00:03:29,630 --> 00:03:34,840
that neither want nor can have the

00:03:32,630 --> 00:03:38,209
luxury of learning complex solutions of

00:03:34,840 --> 00:03:39,680
course you have to support the most

00:03:38,209 --> 00:03:42,470
modern environment

00:03:39,680 --> 00:03:44,900
excuse me environment so there's no

00:03:42,470 --> 00:03:47,660
option nowadays you must have support

00:03:44,900 --> 00:03:49,480
for cloud and that's cloud and every

00:03:47,660 --> 00:03:52,160
kind of flavor that you can encounter

00:03:49,480 --> 00:03:55,190
public cloud across the various cloud

00:03:52,160 --> 00:03:58,010
providers Pub a private cloud maybe

00:03:55,190 --> 00:04:00,950
that's built internally as well as

00:03:58,010 --> 00:04:03,950
support for new architecture like

00:04:00,950 --> 00:04:06,709
microservices containers and position

00:04:03,950 --> 00:04:08,930
yourself not just to support the

00:04:06,709 --> 00:04:11,450
technologies today but have this

00:04:08,930 --> 00:04:14,450
extensible platform that will allow you

00:04:11,450 --> 00:04:16,760
to grow and as new technologies come on

00:04:14,450 --> 00:04:18,080
stream and become popular you can absorb

00:04:16,760 --> 00:04:21,470
and integrate them into your environment

00:04:18,080 --> 00:04:23,419
and finally again in a modern

00:04:21,470 --> 00:04:26,360
application delivery context whether you

00:04:23,419 --> 00:04:27,949
refer to this as CI CD or DevOps you

00:04:26,360 --> 00:04:30,949
have got to be able

00:04:27,949 --> 00:04:33,440
to embed all of this automation into the

00:04:30,949 --> 00:04:35,150
sdlc which means keeping it in your SCM

00:04:33,440 --> 00:04:37,340
together with all your other application

00:04:35,150 --> 00:04:40,400
components being able to automatically

00:04:37,340 --> 00:04:43,880
build tests and move through the entire

00:04:40,400 --> 00:04:45,979
sdlc in an automated fashion so this is

00:04:43,880 --> 00:04:49,039
the concepts that we talked about that

00:04:45,979 --> 00:04:51,650
is jobs as code again applying in an AZ

00:04:49,039 --> 00:04:53,900
code or a Software Defined which may be

00:04:51,650 --> 00:04:56,300
funny to say for software but you know

00:04:53,900 --> 00:04:59,680
in the ass code kind of a paradigm for

00:04:56,300 --> 00:05:03,259
how you build and manage these workflows

00:04:59,680 --> 00:05:05,060
we are in booth 406 and we'd love to

00:05:03,259 --> 00:05:07,880
talk to you about control-m and jobs as

00:05:05,060 --> 00:05:10,050
code so come by and see us get a great

00:05:07,880 --> 00:05:15,339
t-shirt thank you very much

00:05:10,050 --> 00:05:15,339
[Applause]

00:05:20,380 --> 00:05:22,440

YouTube URL: https://www.youtube.com/watch?v=8hAKPl4QrtM


