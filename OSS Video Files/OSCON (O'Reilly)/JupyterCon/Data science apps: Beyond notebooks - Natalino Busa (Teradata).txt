Title: Data science apps: Beyond notebooks - Natalino Busa (Teradata)
Publication date: 2017-09-22
Playlist: JupyterCon
Description: 
	Jupyter notebooks are transforming the way we look at computing, coding, and science. But is this the only "data scientist experience" that this technology can provide? Natalino Busa explains how you can create interactive web applications for data exploration and analysis that in the background are still powered by the well-understood and well-documented Jupyter Notebook.



Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:01,589 --> 00:00:09,599
okay let's go let's get started so this

00:00:06,210 --> 00:00:12,990
is not let's say a presentation with

00:00:09,599 --> 00:00:15,900
many slides but I hope that it's gonna

00:00:12,990 --> 00:00:18,450
be let's say an interesting talk where I

00:00:15,900 --> 00:00:23,010
can give you as much as possible and

00:00:18,450 --> 00:00:25,470
hands-on about this fairly obscure

00:00:23,010 --> 00:00:28,320
feature of Jupiter called the Jupiter

00:00:25,470 --> 00:00:31,350
gateway and and I'm gonna tell you why I

00:00:28,320 --> 00:00:38,879
think this is an important feature for

00:00:31,350 --> 00:00:43,890
your next project in coming up so this

00:00:38,879 --> 00:00:46,710
is my handle not boosah and before

00:00:43,890 --> 00:00:51,179
jumping in into the the technology and

00:00:46,710 --> 00:00:56,249
the techniques of and the code let's

00:00:51,179 --> 00:00:58,620
first let's say we reach state and

00:00:56,249 --> 00:01:02,069
highlight the fact that we are doing

00:00:58,620 --> 00:01:04,080
science with with notebooks we can do

00:01:02,069 --> 00:01:08,759
many things but it seems that that

00:01:04,080 --> 00:01:10,770
science is one of the main tasks for

00:01:08,759 --> 00:01:14,729
which the notebooks are actually so

00:01:10,770 --> 00:01:20,060
great and we've seen that in the day in

00:01:14,729 --> 00:01:24,180
the keynote yesterday that education

00:01:20,060 --> 00:01:28,439
experimentation research these are

00:01:24,180 --> 00:01:31,770
topics were actually the notebook where

00:01:28,439 --> 00:01:35,009
Jupiter were the this ecosystem as it

00:01:31,770 --> 00:01:38,509
was defined is actually so important and

00:01:35,009 --> 00:01:41,719
every face of the scientific methods

00:01:38,509 --> 00:01:44,909
observation hypothesis deduction

00:01:41,719 --> 00:01:48,560
experimentation and synthesis is now

00:01:44,909 --> 00:01:53,579
really making use of this collabora

00:01:48,560 --> 00:01:57,740
collaboration between tools machines and

00:01:53,579 --> 00:02:02,219
and experts and people and therefore

00:01:57,740 --> 00:02:05,789
what I want to talk to you today is what

00:02:02,219 --> 00:02:09,869
is the data scientist experience so

00:02:05,789 --> 00:02:12,550
other data scientist Azhar as a as a

00:02:09,869 --> 00:02:15,040
scientist when you approach

00:02:12,550 --> 00:02:18,160
a problem and you are confronted with an

00:02:15,040 --> 00:02:21,120
interface in this case a notebook what

00:02:18,160 --> 00:02:24,880
is the experience that we are actually

00:02:21,120 --> 00:02:28,720
proposing to this person is this

00:02:24,880 --> 00:02:30,220
something which is enjoyable what is the

00:02:28,720 --> 00:02:34,180
learning curve

00:02:30,220 --> 00:02:36,040
are there some some high and what are

00:02:34,180 --> 00:02:39,610
the high what are the laws of this

00:02:36,040 --> 00:02:42,220
experience and so forth how this

00:02:39,610 --> 00:02:46,900
experience can be iterated and and

00:02:42,220 --> 00:02:51,340
transferred to others and this

00:02:46,900 --> 00:02:54,970
experiences based on the fact that to to

00:02:51,340 --> 00:03:01,470
produce science these days we are using

00:02:54,970 --> 00:03:07,510
a large collection of let's say things

00:03:01,470 --> 00:03:12,610
the cloud mathematics tools software and

00:03:07,510 --> 00:03:15,000
our own intuition and expertise so if we

00:03:12,610 --> 00:03:18,190
put it all together I think that's

00:03:15,000 --> 00:03:22,540
really fascinating that a project like

00:03:18,190 --> 00:03:24,880
Jupiter is is coming up at exact the

00:03:22,540 --> 00:03:27,730
right point in time where all these

00:03:24,880 --> 00:03:32,920
technologies are coming together the

00:03:27,730 --> 00:03:35,340
cloud machine learning the some new

00:03:32,920 --> 00:03:37,630
mathematics around for instance

00:03:35,340 --> 00:03:43,239
distributed learning methods and so

00:03:37,630 --> 00:03:45,400
forth so the the the notebook for it was

00:03:43,239 --> 00:03:48,459
yesterday was in the in the keynote an

00:03:45,400 --> 00:03:52,870
interesting remark about the fact that

00:03:48,459 --> 00:03:54,940
for those which are not early adopters

00:03:52,870 --> 00:03:58,989
of the technology

00:03:54,940 --> 00:04:02,590
Jupiter is a notebook they do not see

00:03:58,989 --> 00:04:07,450
what maybe some of you already see in

00:04:02,590 --> 00:04:11,070
terms of stratified layers of software

00:04:07,450 --> 00:04:14,440
and communicating protocols the see a

00:04:11,070 --> 00:04:18,180
tool an honor on a web browser that

00:04:14,440 --> 00:04:21,489
allows them to do data cleaning

00:04:18,180 --> 00:04:23,919
transformation simulation statistical

00:04:21,489 --> 00:04:25,870
modeling machine learning that's what

00:04:23,919 --> 00:04:28,150
most of those people will

00:04:25,870 --> 00:04:33,729
see and that's why I call it the data

00:04:28,150 --> 00:04:38,169
scientist experience and I believe that

00:04:33,729 --> 00:04:42,790
the notebook in particular is probably

00:04:38,169 --> 00:04:46,470
the pinnacle of all possible apps that

00:04:42,790 --> 00:04:50,410
we can today have on top of Jupiter

00:04:46,470 --> 00:04:53,500
because it provides integration with Big

00:04:50,410 --> 00:04:58,330
Data frameworks there are widgets of all

00:04:53,500 --> 00:05:02,350
kinds you can choose a language of out

00:04:58,330 --> 00:05:05,199
of hundreds and you can share those

00:05:02,350 --> 00:05:10,090
notebooks using for instance a version

00:05:05,199 --> 00:05:15,729
control system and of course we are

00:05:10,090 --> 00:05:23,590
familiar with the notebook as it is

00:05:15,729 --> 00:05:28,570
today with some some code in cells and

00:05:23,590 --> 00:05:32,110
some text in other cells we have a bar

00:05:28,570 --> 00:05:35,800
with a number of let's say actions that

00:05:32,110 --> 00:05:39,610
you can execute we can identify the

00:05:35,800 --> 00:05:44,020
kernel and we can combine text and

00:05:39,610 --> 00:05:46,419
pictures and HTML with our own input

00:05:44,020 --> 00:05:51,580
which is the code and the text that we

00:05:46,419 --> 00:05:55,870
provide so as such it is a pretty nice

00:05:51,580 --> 00:06:03,010
app and I used to work with Mathematica

00:05:55,870 --> 00:06:08,199
like 30 years ago about 25 knots I'm not

00:06:03,010 --> 00:06:12,070
that old and back then I was really

00:06:08,199 --> 00:06:14,740
taken away by that too and seen actually

00:06:12,070 --> 00:06:18,789
the tool now being the same idea being

00:06:14,740 --> 00:06:22,830
converted in a number of let's say very

00:06:18,789 --> 00:06:25,710
scalable and and will structure

00:06:22,830 --> 00:06:28,690
technologies I think it's a great

00:06:25,710 --> 00:06:31,690
revolution

00:06:28,690 --> 00:06:35,020
so in short basically when we talk about

00:06:31,690 --> 00:06:38,050
Jupiter we talk about normally three

00:06:35,020 --> 00:06:41,860
things we talked about the

00:06:38,050 --> 00:06:45,729
the app that we see on a browser we talk

00:06:41,860 --> 00:06:50,470
about the so called server so that that

00:06:45,729 --> 00:06:54,120
sort of middle software in the middle

00:06:50,470 --> 00:06:57,580
that orchestrates between kernels and

00:06:54,120 --> 00:07:04,870
applications and we talked about kernels

00:06:57,580 --> 00:07:06,970
so the architecture today is becoming

00:07:04,870 --> 00:07:08,830
even more modular than it was in the

00:07:06,970 --> 00:07:12,340
past and that's really a good thing so

00:07:08,830 --> 00:07:18,039
we were actually having more interwined

00:07:12,340 --> 00:07:21,699
that's a kernel to middleware to to

00:07:18,039 --> 00:07:25,259
client application now we see that we

00:07:21,699 --> 00:07:27,930
have more a more modular architecture

00:07:25,259 --> 00:07:32,169
you can actually plug and play different

00:07:27,930 --> 00:07:34,960
components there most typically you plug

00:07:32,169 --> 00:07:37,650
and play kernels but you we also seen

00:07:34,960 --> 00:07:40,810
that we can plug and play front ends

00:07:37,650 --> 00:07:44,789
Jupiter lab and Jupiter notebooks are

00:07:40,810 --> 00:07:50,470
two examples of those and it's quite

00:07:44,789 --> 00:07:54,750
rich in terms of both communication and

00:07:50,470 --> 00:07:58,060
in also in terms of let's say

00:07:54,750 --> 00:08:00,099
application wise there are all sorts of

00:07:58,060 --> 00:08:02,440
ideas which are coming up in terms of

00:08:00,099 --> 00:08:05,650
widget and six syntax islands of world

00:08:02,440 --> 00:08:09,340
so so definitely it's it's an

00:08:05,650 --> 00:08:12,479
interesting tool but what really

00:08:09,340 --> 00:08:16,300
fascinates me most of all these

00:08:12,479 --> 00:08:19,240
technology features is the fact that our

00:08:16,300 --> 00:08:21,669
notebook tells a story and I believe

00:08:19,240 --> 00:08:24,490
that the story is actually central in

00:08:21,669 --> 00:08:29,020
why this tool is becoming so popular

00:08:24,490 --> 00:08:33,930
this ecosystem of Jupiter because we as

00:08:29,020 --> 00:08:38,250
our as human we learn and understand by

00:08:33,930 --> 00:08:43,649
listening and telling stories and

00:08:38,250 --> 00:08:46,990
storytelling is is not just auxiliary to

00:08:43,649 --> 00:08:49,900
to education and to learning is actually

00:08:46,990 --> 00:08:51,760
in my opinion a fundamental component of

00:08:49,900 --> 00:08:55,149
the way we learn

00:08:51,760 --> 00:08:59,199
because the connection that we create

00:08:55,149 --> 00:09:03,459
while we are we listen to a story these

00:08:59,199 --> 00:09:08,050
connections are what the points that

00:09:03,459 --> 00:09:12,550
allow us to connect and understand the

00:09:08,050 --> 00:09:15,399
the content and and since the content is

00:09:12,550 --> 00:09:17,949
brought us in stories we need stories

00:09:15,399 --> 00:09:20,920
and that's why I believe that the

00:09:17,949 --> 00:09:26,440
notebook and narratives in general are

00:09:20,920 --> 00:09:29,410
so important so now what if I told you

00:09:26,440 --> 00:09:31,810
that the notebook is not the only sort

00:09:29,410 --> 00:09:37,180
of narrative that you can create with

00:09:31,810 --> 00:09:40,920
Jupiter projects and we already seen

00:09:37,180 --> 00:09:42,790
actually a few other narratives around

00:09:40,920 --> 00:09:44,920
notebooks

00:09:42,790 --> 00:09:50,800
sorry around Jupiter which are not

00:09:44,920 --> 00:09:53,350
notebooks and I'm gonna provide you a

00:09:50,800 --> 00:09:55,899
few examples and but first of all I

00:09:53,350 --> 00:09:59,910
would say one of the one that I really

00:09:55,899 --> 00:10:05,040
like is the one of our ally Orioles

00:09:59,910 --> 00:10:08,949
because actually it's there that you see

00:10:05,040 --> 00:10:13,899
some educational narrative where you see

00:10:08,949 --> 00:10:19,839
code images text together with videos

00:10:13,899 --> 00:10:22,360
that's actually one of mine and we have

00:10:19,839 --> 00:10:24,970
your park of course which set up the

00:10:22,360 --> 00:10:30,399
Orioles and so it's a great honor to be

00:10:24,970 --> 00:10:37,420
here and to present the story and the

00:10:30,399 --> 00:10:41,079
those narratives are are there to to

00:10:37,420 --> 00:10:44,500
facilitate a task of learning and this

00:10:41,079 --> 00:10:49,500
is not an odd book but in fact we could

00:10:44,500 --> 00:10:55,500
consider that as another Jupiter app and

00:10:49,500 --> 00:10:59,290
us we have Orioles us let's say

00:10:55,500 --> 00:11:02,410
notebooks with a twist we could depart

00:10:59,290 --> 00:11:04,649
from that point and create a large

00:11:02,410 --> 00:11:10,050
number of

00:11:04,649 --> 00:11:13,589
of applications so we can build our own

00:11:10,050 --> 00:11:16,619
narratives and of course the point there

00:11:13,589 --> 00:11:21,269
is not to duplicate or to reinvent the

00:11:16,619 --> 00:11:26,970
wheel and create Jupiter lab version

00:11:21,269 --> 00:11:30,209
version different but is to create

00:11:26,970 --> 00:11:33,059
something which is unique and special

00:11:30,209 --> 00:11:35,309
for you in particular the only thing

00:11:33,059 --> 00:11:37,709
that you need to do in this case is to

00:11:35,309 --> 00:11:40,679
understand how the Jupiter server

00:11:37,709 --> 00:11:44,490
communicates with the client and there

00:11:40,679 --> 00:11:49,470
are two ways the WebSockets and HTTP

00:11:44,490 --> 00:11:54,119
endpoints and then decide how much you

00:11:49,470 --> 00:11:58,670
want to go in the realm of let's say

00:11:54,119 --> 00:12:02,939
front-end development and decide whether

00:11:58,670 --> 00:12:07,019
jQuery is sufficient with handlebars das

00:12:02,939 --> 00:12:11,819
or you prefer angular one angular two

00:12:07,019 --> 00:12:15,839
now called angular polymer Dart view now

00:12:11,819 --> 00:12:21,350
there are many frameworks but the point

00:12:15,839 --> 00:12:26,329
here is that by having a new narrative

00:12:21,350 --> 00:12:31,730
you can actually create a very fast

00:12:26,329 --> 00:12:35,790
inter interaction loop between the your

00:12:31,730 --> 00:12:39,209
data scientists your engineers and your

00:12:35,790 --> 00:12:42,089
business developers because this in fact

00:12:39,209 --> 00:12:45,870
is all about productivity I've seen in

00:12:42,089 --> 00:12:49,889
the past many front-end developers many

00:12:45,870 --> 00:12:53,639
designers mocking up let's say some app

00:12:49,889 --> 00:12:56,579
with fake data science because they

00:12:53,639 --> 00:13:01,189
didn't have data so the only thing they

00:12:56,579 --> 00:13:04,350
could do was actually to to look at some

00:13:01,189 --> 00:13:06,509
to come cut some pictures and some data

00:13:04,350 --> 00:13:11,249
and and print it on the screen but what

00:13:06,509 --> 00:13:15,809
if actually from the day one we could

00:13:11,249 --> 00:13:17,350
connect those endpoints straight from

00:13:15,809 --> 00:13:21,880
the notebook

00:13:17,350 --> 00:13:26,740
and expose them as let's say other

00:13:21,880 --> 00:13:30,250
service as a server as a JSON server for

00:13:26,740 --> 00:13:32,410
our front-end developers and maybe there

00:13:30,250 --> 00:13:34,540
is a bit of a front-end developers in

00:13:32,410 --> 00:13:38,350
all of us so a little bit of JavaScript

00:13:34,540 --> 00:13:44,680
and HTML I think it's today also a

00:13:38,350 --> 00:13:47,080
pretty good fit to experiment with so I

00:13:44,680 --> 00:13:51,360
wanted to give you a bit of an overview

00:13:47,080 --> 00:13:56,560
how this works and and this works

00:13:51,360 --> 00:14:02,260
basically using a feature called the

00:13:56,560 --> 00:14:07,150
Jupiter gateway the Jupiter gateway you

00:14:02,260 --> 00:14:10,510
can simply install by either Condor or

00:14:07,150 --> 00:14:14,800
pip install and it's Jupiter underscore

00:14:10,510 --> 00:14:19,150
kernel underscore gateway and I believe

00:14:14,800 --> 00:14:23,970
that the Creator original creator a so

00:14:19,150 --> 00:14:26,590
seen in the room near Peter perentie and

00:14:23,970 --> 00:14:30,940
it's a nice piece of software because

00:14:26,590 --> 00:14:33,910
it's it's compact but it reuses a lot of

00:14:30,940 --> 00:14:38,020
the code which has been developed for

00:14:33,910 --> 00:14:45,850
for Jupiter so in fact is a sort of an

00:14:38,020 --> 00:14:49,180
headless Jupiter server that can connect

00:14:45,850 --> 00:14:54,220
to any sort of notebooks so in fact you

00:14:49,180 --> 00:14:59,490
could run Python or or Scala or or R or

00:14:54,220 --> 00:15:03,160
whatever you want so the way it works is

00:14:59,490 --> 00:15:05,160
it's quite simple and I'm trying to show

00:15:03,160 --> 00:15:11,110
you in in a second

00:15:05,160 --> 00:15:15,370
you actually bright a notebook so that's

00:15:11,110 --> 00:15:17,530
the idea so you stay with a notebook but

00:15:15,370 --> 00:15:20,050
the thing that happens in the notebook

00:15:17,530 --> 00:15:23,170
is that now you get a little bit of a

00:15:20,050 --> 00:15:27,940
notation on top saying how you want to

00:15:23,170 --> 00:15:29,310
expose the particular cell in

00:15:27,940 --> 00:15:33,910
[Music]

00:15:29,310 --> 00:15:37,870
to the server or or via the server - to

00:15:33,910 --> 00:15:41,980
your clients and in this case I'm not

00:15:37,870 --> 00:15:46,930
sure if let me see if if this is running

00:15:41,980 --> 00:15:59,970
I would like to give you a demo of of

00:15:46,930 --> 00:15:59,970
this one and yeah

00:16:24,450 --> 00:16:32,519
so I have two demos here hello world and

00:16:27,389 --> 00:16:34,560
iris classifier the the demo the hello

00:16:32,519 --> 00:16:36,930
world one as a make file and the only

00:16:34,560 --> 00:16:40,860
thing that they need to do is is write

00:16:36,930 --> 00:16:49,920
make and if I remember correctly there

00:16:40,860 --> 00:16:53,880
was make gateway okay so this one starts

00:16:49,920 --> 00:16:58,980
on ports 9000 so you see it actually

00:16:53,880 --> 00:17:02,399
what would actually this does see if

00:16:58,980 --> 00:17:05,220
yeah it actually runs the entire

00:17:02,399 --> 00:17:08,760
notebook and then anytime that this is

00:17:05,220 --> 00:17:14,220
that particular header that we have just

00:17:08,760 --> 00:17:17,429
saw here it will expose that dead cell

00:17:14,220 --> 00:17:20,669
as an endpoint so it's like that cell is

00:17:17,429 --> 00:17:25,980
can be replayed as many times as you

00:17:20,669 --> 00:17:31,650
want by simply accessing that that

00:17:25,980 --> 00:17:34,140
endpoint so in in this case if the

00:17:31,650 --> 00:17:37,140
server is actually running and working I

00:17:34,140 --> 00:17:42,870
would expect that if favorite here local

00:17:37,140 --> 00:17:47,730
los 9000 and I and I write slash text I

00:17:42,870 --> 00:17:50,710
should get hello world here and of

00:17:47,730 --> 00:17:52,040
course it doesn't

00:17:50,710 --> 00:17:57,950
[Music]

00:17:52,040 --> 00:17:57,950
ha thank you

00:18:03,230 --> 00:18:09,520
[Applause]

00:18:05,590 --> 00:18:13,810
so what you can do with it is a number

00:18:09,520 --> 00:18:18,430
of other things so you can for instance

00:18:13,810 --> 00:18:20,050
export JSON endpoints it and the thing

00:18:18,430 --> 00:18:24,940
that you need to do that is you actually

00:18:20,050 --> 00:18:27,340
you need to provide your response info

00:18:24,940 --> 00:18:29,230
in terms of headers and status so you

00:18:27,340 --> 00:18:34,450
could say for instance that the content

00:18:29,230 --> 00:18:36,430
type is application slash JSON and what

00:18:34,450 --> 00:18:42,250
we'll do is if you're running on a

00:18:36,430 --> 00:18:45,370
browser since some browser recognize for

00:18:42,250 --> 00:18:48,460
instance JSON this will automatically be

00:18:45,370 --> 00:18:53,350
lets say converted by the plug-in into

00:18:48,460 --> 00:18:58,510
JSON code or a JSON representation what

00:18:53,350 --> 00:19:02,640
you can also do is you can actually use

00:18:58,510 --> 00:19:06,850
the notebook as on in memory sort of

00:19:02,640 --> 00:19:11,620
between quotes let's say database or or

00:19:06,850 --> 00:19:14,920
a storage place why because the kernel

00:19:11,620 --> 00:19:18,370
is actually storing in memory all the

00:19:14,920 --> 00:19:24,010
variables so what happens now is that I

00:19:18,370 --> 00:19:27,700
can create let's say a dynamic let's say

00:19:24,010 --> 00:19:31,450
set of counters by saying that I want to

00:19:27,700 --> 00:19:36,370
delete a counter I want to create a new

00:19:31,450 --> 00:19:39,430
counter with the given name or or

00:19:36,370 --> 00:19:42,910
extract the values of certain counters

00:19:39,430 --> 00:19:45,550
now because a counter in this case is a

00:19:42,910 --> 00:19:48,640
variable in my notebook hands in my

00:19:45,550 --> 00:19:52,960
kernel that variable which will be

00:19:48,640 --> 00:19:57,960
updated with as a dictionary in my in my

00:19:52,960 --> 00:20:02,740
kernel and I can actually in that way

00:19:57,960 --> 00:20:06,820
create a sort of a state as a sort of a

00:20:02,740 --> 00:20:11,230
basically storage place without even

00:20:06,820 --> 00:20:15,970
having to use a database or or anything

00:20:11,230 --> 00:20:17,369
else at all what else you can do you can

00:20:15,970 --> 00:20:21,799
also

00:20:17,369 --> 00:20:24,690
you can also post or produce pictures

00:20:21,799 --> 00:20:27,330
pictures can be produced in many ways

00:20:24,690 --> 00:20:30,859
but the best way that I figured out so

00:20:27,330 --> 00:20:34,859
far is actually to stay a stick with the

00:20:30,859 --> 00:20:37,909
textual representation which definitely

00:20:34,859 --> 00:20:39,809
will not break anything in the json

00:20:37,909 --> 00:20:42,779
communication in the protocols

00:20:39,809 --> 00:20:49,220
underneath so you could actually pass

00:20:42,779 --> 00:20:52,950
just the base64 data this this is the

00:20:49,220 --> 00:20:58,169
base64 binary representation of this

00:20:52,950 --> 00:21:03,629
small red dot here so if that's why so

00:20:58,169 --> 00:21:08,249
small it's it's about 80 car 80 bytes or

00:21:03,629 --> 00:21:12,059
I can just export it as HTML and have a

00:21:08,249 --> 00:21:20,729
browser producing it so if I go and I

00:21:12,059 --> 00:21:23,609
and I produce and I get my image HTML I

00:21:20,729 --> 00:21:29,639
get a red dot for those of you with good

00:21:23,609 --> 00:21:33,450
eyes on the left top corner but I can

00:21:29,639 --> 00:21:37,619
also get the data and and therefore I

00:21:33,450 --> 00:21:41,399
can use the data for any sort of let's

00:21:37,619 --> 00:21:46,769
say framework in JavaScript and so forth

00:21:41,399 --> 00:21:51,659
now that is all of course fascinating

00:21:46,769 --> 00:21:53,970
but what can we do with data science so

00:21:51,659 --> 00:21:58,649
with data science we normally work with

00:21:53,970 --> 00:22:01,590
a bit more complicated code and I want

00:21:58,649 --> 00:22:04,229
to show you in terms of this data

00:22:01,590 --> 00:22:07,559
scientist experience what is the

00:22:04,229 --> 00:22:10,649
overhead and and the tweaks that you

00:22:07,559 --> 00:22:14,190
need to produce in order to have this

00:22:10,649 --> 00:22:18,479
sort of interfaces exposed or the sort

00:22:14,190 --> 00:22:19,619
of cells exposed to let's say to

00:22:18,479 --> 00:22:25,889
JavaScript

00:22:19,619 --> 00:22:29,020
front ends the good a good let's say way

00:22:25,889 --> 00:22:32,440
of working is to check if there is

00:22:29,020 --> 00:22:34,960
Colonel gateway environment variables

00:22:32,440 --> 00:22:38,890
set or not because basically you can use

00:22:34,960 --> 00:22:41,110
your your notebook in two ways you can

00:22:38,890 --> 00:22:45,640
use it natively in this case you are

00:22:41,110 --> 00:22:49,330
looking at making some classification

00:22:45,640 --> 00:22:54,550
from the iris data set and it would be

00:22:49,330 --> 00:22:57,790
great indeed if I can do that in the

00:22:54,550 --> 00:23:01,780
notebook even without knowing that there

00:22:57,790 --> 00:23:05,560
is a gateway waiting for with endpoints

00:23:01,780 --> 00:23:10,270
so the first experience of course that I

00:23:05,560 --> 00:23:14,470
want to set up is am I able to for

00:23:10,270 --> 00:23:17,050
instance explore my data right now let's

00:23:14,470 --> 00:23:20,950
take this typical example that many of

00:23:17,050 --> 00:23:24,580
you might have tried so you set up you

00:23:20,950 --> 00:23:28,300
write your few lines of matplotlib you

00:23:24,580 --> 00:23:31,030
generate a static picture of your data

00:23:28,300 --> 00:23:34,420
set and maybe use a little bit of pandas

00:23:31,030 --> 00:23:36,730
and numpy and so forth what do you need

00:23:34,420 --> 00:23:41,680
to add if you want to expose this

00:23:36,730 --> 00:23:44,140
picture as a as an endpoint well it's

00:23:41,680 --> 00:23:48,250
actually not too bad so what you need to

00:23:44,140 --> 00:23:50,470
do is you define your your endpoint in

00:23:48,250 --> 00:23:53,830
this case I decided to call it plots

00:23:50,470 --> 00:23:56,650
cutter and where x and y are two

00:23:53,830 --> 00:24:00,430
placeholders for the variables out of

00:23:56,650 --> 00:24:01,930
the four that are present in the data

00:24:00,430 --> 00:24:07,300
set

00:24:01,930 --> 00:24:09,850
and basically what they do is here is an

00:24:07,300 --> 00:24:11,080
example and feel free to experiment with

00:24:09,850 --> 00:24:14,800
it

00:24:11,080 --> 00:24:17,740
I make sure that when I'm not running in

00:24:14,800 --> 00:24:22,390
the gateway mode actually this the code

00:24:17,740 --> 00:24:28,120
looks like as if it's coming from the

00:24:22,390 --> 00:24:30,220
from the endpoint and so forth I I read

00:24:28,120 --> 00:24:36,160
those two variables in this case I

00:24:30,220 --> 00:24:41,940
called my index and an X index and for

00:24:36,160 --> 00:24:43,299
those of you who recognize it let's say

00:24:41,940 --> 00:24:47,610
it's

00:24:43,299 --> 00:24:50,350
in here so yeah this is the ours cutter

00:24:47,610 --> 00:24:57,519
hours cutter plot where we actually

00:24:50,350 --> 00:25:01,840
extract let's say the three sets of iris

00:24:57,519 --> 00:25:06,039
types of flowers according to that those

00:25:01,840 --> 00:25:12,070
particular variables so this one is

00:25:06,039 --> 00:25:14,860
running actually using docker and there

00:25:12,070 --> 00:25:19,419
is a thing that you might not know that

00:25:14,860 --> 00:25:26,200
if you use actually the the docker

00:25:19,419 --> 00:25:29,139
stacks from Jupiter the the the Gateway

00:25:26,200 --> 00:25:31,450
actually is already integrated in it and

00:25:29,139 --> 00:25:33,549
you don't even need to set up the

00:25:31,450 --> 00:25:36,429
environment variable it's actually

00:25:33,549 --> 00:25:39,389
running straight from that code so the

00:25:36,429 --> 00:25:42,429
only thing and and I'm gonna show you

00:25:39,389 --> 00:25:44,200
actually the how the how much docker

00:25:42,429 --> 00:25:47,940
file you need to write that's all you

00:25:44,200 --> 00:25:53,499
need to write it simply need to say

00:25:47,940 --> 00:25:56,679
where is your your file your your your

00:25:53,499 --> 00:25:59,230
notebook which port to expose and

00:25:56,679 --> 00:26:02,799
actually this is all the rest is all

00:25:59,230 --> 00:26:07,889
contained inside so I PI dot notebook

00:26:02,799 --> 00:26:10,809
and I think even a few let's say docker

00:26:07,889 --> 00:26:15,389
containers before that day I think it

00:26:10,809 --> 00:26:19,570
start from base yeah I seen someone

00:26:15,389 --> 00:26:23,470
Peter loading so yeah so starts from

00:26:19,570 --> 00:26:26,249
base and that means that the only thing

00:26:23,470 --> 00:26:30,309
I need to do is to copy my own files and

00:26:26,249 --> 00:26:32,559
exposed of course there are a few extra

00:26:30,309 --> 00:26:35,230
tricks for so for instance you could do

00:26:32,559 --> 00:26:39,129
the command here but you could also do

00:26:35,230 --> 00:26:44,889
the command in line by using the start

00:26:39,129 --> 00:26:48,489
shell script of the Jupiter docker

00:26:44,889 --> 00:26:53,109
stacks and so forth so what would you

00:26:48,489 --> 00:26:55,990
get out of it well and let's see if the

00:26:53,109 --> 00:26:59,470
magic kind of still works

00:26:55,990 --> 00:27:03,580
if I take the port 9000 which is the one

00:26:59,470 --> 00:27:12,240
that I had set up for this one and I go

00:27:03,580 --> 00:27:15,909
on plots cutter I should be able to see

00:27:12,240 --> 00:27:21,309
let's say my I could shovel to explore

00:27:15,909 --> 00:27:23,769
my data yeah so it works so this is one

00:27:21,309 --> 00:27:27,759
is actually coming from the docker

00:27:23,769 --> 00:27:32,499
container running the notebook using

00:27:27,759 --> 00:27:38,649
actually the and the preloaded or

00:27:32,499 --> 00:27:43,419
pre-installed Jupiter gateway has been

00:27:38,649 --> 00:27:46,200
done by the by the Jupiter team there is

00:27:43,419 --> 00:27:51,480
actually quite some work which has been

00:27:46,200 --> 00:27:56,049
which has happened actually around this

00:27:51,480 --> 00:27:59,799
docker containers which maybe is not

00:27:56,049 --> 00:28:02,889
used so extensively as the notebook

00:27:59,799 --> 00:28:05,940
itself but I can tell you that things

00:28:02,889 --> 00:28:14,070
around for instance the the gateway and

00:28:05,940 --> 00:28:14,070
and Jupiter hub so support for let's say

00:28:14,789 --> 00:28:25,090
docker iced containers with with hubs

00:28:20,610 --> 00:28:27,610
spawning let's say other containers with

00:28:25,090 --> 00:28:28,929
servers and so forth there are here and

00:28:27,610 --> 00:28:32,320
there already

00:28:28,929 --> 00:28:34,960
let's say hooks and the predefined set

00:28:32,320 --> 00:28:38,289
of solid English containers so I would

00:28:34,960 --> 00:28:42,399
really recommend you instead of creating

00:28:38,289 --> 00:28:47,490
your own Jupiter container to always

00:28:42,399 --> 00:28:52,590
start from the from the Jupiter Jupiter

00:28:47,490 --> 00:28:56,649
stacks as provided by the Jupiter team

00:28:52,590 --> 00:28:59,769
so this is of course let's say just one

00:28:56,649 --> 00:29:05,619
picture but now I guess that you get the

00:28:59,769 --> 00:29:09,040
idea and the idea is now that in fact we

00:29:05,619 --> 00:29:16,570
can train data and we can actually ex

00:29:09,040 --> 00:29:21,460
our model on via API so if I actually go

00:29:16,570 --> 00:29:24,940
and for simplicity here I went for the

00:29:21,460 --> 00:29:29,530
get verbs most of the places although

00:29:24,940 --> 00:29:32,980
actually to be more precise if you

00:29:29,530 --> 00:29:36,010
retrain a model that's most likely to be

00:29:32,980 --> 00:29:38,980
a post because you are in fact every

00:29:36,010 --> 00:29:41,890
time creating a new iteration on the

00:29:38,980 --> 00:29:46,030
model which allows you if you think in

00:29:41,890 --> 00:29:50,110
terms of HTTP verbs to actually create

00:29:46,030 --> 00:29:54,490
an history of models as post commands on

00:29:50,110 --> 00:29:57,670
an on on a client which is not too

00:29:54,490 --> 00:30:01,930
dissimilar from what we are used to do

00:29:57,670 --> 00:30:04,960
for instance with with the Roku or with

00:30:01,930 --> 00:30:09,670
Amazon for other sort of application but

00:30:04,960 --> 00:30:12,250
this would be more for data science so

00:30:09,670 --> 00:30:15,970
once it the model is there the model

00:30:12,250 --> 00:30:20,140
stays in the kernel therefore I can run

00:30:15,970 --> 00:30:26,950
independently other other calls again

00:30:20,140 --> 00:30:30,490
exposed us let's say let's say API

00:30:26,950 --> 00:30:33,280
endpoints in this case slash model slash

00:30:30,490 --> 00:30:37,240
predict now the prediction here is

00:30:33,280 --> 00:30:41,100
taking two parameters I want these

00:30:37,240 --> 00:30:45,760
parameters to coming out from variables

00:30:41,100 --> 00:30:52,150
or basically from not from the path of

00:30:45,760 --> 00:30:53,830
my URL and I already know what the model

00:30:52,150 --> 00:30:57,250
is so the only thing that they need to

00:30:53,830 --> 00:31:03,790
do is actually calling my single line

00:30:57,250 --> 00:31:06,820
saying predict on those variables so if

00:31:03,790 --> 00:31:10,030
I run it on the notebook I actually get

00:31:06,820 --> 00:31:13,060
here my output in this case versicolor

00:31:10,030 --> 00:31:19,660
is one of the three types of iris

00:31:13,060 --> 00:31:22,040
flowers and I can also do some more data

00:31:19,660 --> 00:31:26,060
science and create

00:31:22,040 --> 00:31:29,150
confusion matrix for my classifier to

00:31:26,060 --> 00:31:32,960
see if it's actually working well if

00:31:29,150 --> 00:31:33,830
it's let's say overfitting my data or

00:31:32,960 --> 00:31:38,390
not

00:31:33,830 --> 00:31:44,300
and do all the data science tasks that

00:31:38,390 --> 00:31:49,520
we are used to do and I could also for

00:31:44,300 --> 00:31:53,150
reasons scan them my myspace my

00:31:49,520 --> 00:31:56,680
two-dimensional space and predict for

00:31:53,150 --> 00:32:01,730
every single let's say cell in this mesh

00:31:56,680 --> 00:32:04,700
what is the actually the value produced

00:32:01,730 --> 00:32:08,510
by the prediction what is the prediction

00:32:04,700 --> 00:32:13,790
produced by my classifier and and do

00:32:08,510 --> 00:32:16,730
some form of let's say analysis about

00:32:13,790 --> 00:32:21,680
whether the prediction is satisfactory

00:32:16,730 --> 00:32:25,520
for what I would like to see or whether

00:32:21,680 --> 00:32:28,750
I would should I change model and use

00:32:25,520 --> 00:32:32,690
some other parameters may be indifferent

00:32:28,750 --> 00:32:35,480
classifier and so forth now this of

00:32:32,690 --> 00:32:40,610
course if you work with a notebook

00:32:35,480 --> 00:32:43,160
becomes a bit of a trial and error

00:32:40,610 --> 00:32:45,410
exercise where you go up and down the

00:32:43,160 --> 00:32:48,590
notebook you start trying different

00:32:45,410 --> 00:32:52,760
models different parameters you run it

00:32:48,590 --> 00:32:55,340
again and so forth but now we have here

00:32:52,760 --> 00:32:58,330
are different we have another

00:32:55,340 --> 00:33:02,740
alternative basically what we can do is

00:32:58,330 --> 00:33:10,790
we can go and create a little page and

00:33:02,740 --> 00:33:14,660
actually expose all those those

00:33:10,790 --> 00:33:17,930
endpoints and let me reload the page for

00:33:14,660 --> 00:33:21,320
you so starts as an almost an empty page

00:33:17,930 --> 00:33:24,920
where I say okay I would like to to look

00:33:21,320 --> 00:33:29,450
at a sample length and the sepal width

00:33:24,920 --> 00:33:34,120
and let's have a look at the decision

00:33:29,450 --> 00:33:35,180
tree I train the model this one is

00:33:34,120 --> 00:33:39,680
everything

00:33:35,180 --> 00:33:42,380
produced deer is actually as is in the

00:33:39,680 --> 00:33:45,980
notebook there is nothing on this page

00:33:42,380 --> 00:33:49,610
which is a dog he's all coming from the

00:33:45,980 --> 00:33:54,320
notebook so I have my confusion matrix I

00:33:49,610 --> 00:33:57,170
have my let's say two-dimensional mesh

00:33:54,320 --> 00:34:01,490
with the possible prediction and I can

00:33:57,170 --> 00:34:04,880
already see how a decision tree works in

00:34:01,490 --> 00:34:09,980
terms of classification and I also have

00:34:04,880 --> 00:34:12,350
down here a little box now where hence

00:34:09,980 --> 00:34:15,170
now that the model is being produced I

00:34:12,350 --> 00:34:18,580
actually can click on the predict button

00:34:15,170 --> 00:34:23,210
and see what sort of class is generated

00:34:18,580 --> 00:34:26,920
and if I'm not happy with this one I can

00:34:23,210 --> 00:34:30,980
go and have a look at the polynomial

00:34:26,920 --> 00:34:34,070
support vector classifier and see that

00:34:30,980 --> 00:34:40,250
this one is more rounded let's say

00:34:34,070 --> 00:34:43,210
boundaries and and this now becomes also

00:34:40,250 --> 00:34:45,830
an experience which is not the original

00:34:43,210 --> 00:34:50,420
experience of the notebook which

00:34:45,830 --> 00:34:54,760
requires some more let's say advanced

00:34:50,420 --> 00:34:59,600
skills in terms of coding and so forth

00:34:54,760 --> 00:35:03,620
as well as data science because you need

00:34:59,600 --> 00:35:07,910
to understand more in depth the reason

00:35:03,620 --> 00:35:11,360
of it but this is also an experience and

00:35:07,910 --> 00:35:16,700
I would like to reconnect it to the

00:35:11,360 --> 00:35:24,200
story of that wonderful story of that

00:35:16,700 --> 00:35:27,380
young woman from first AI Rachel

00:35:24,200 --> 00:35:31,940
so Rachel actually said why not let's

00:35:27,380 --> 00:35:35,210
say experience data science first and

00:35:31,940 --> 00:35:37,270
then learn the details later well I'm

00:35:35,210 --> 00:35:43,850
telling you that actually even myself

00:35:37,270 --> 00:35:46,880
after some years of science by looking

00:35:43,850 --> 00:35:52,490
at this sort of pictures and being able

00:35:46,880 --> 00:35:55,549
to click and and and validate the

00:35:52,490 --> 00:35:58,910
findings of the classifiers I'm actually

00:35:55,549 --> 00:36:03,440
gaining very quickly some new insight

00:35:58,910 --> 00:36:08,119
and and it's more intuitive in a way so

00:36:03,440 --> 00:36:11,059
now you might say ok that's great but

00:36:08,119 --> 00:36:17,480
probably this requires a lot of

00:36:11,059 --> 00:36:23,589
JavaScript behind the hood and am I

00:36:17,480 --> 00:36:27,589
actually going to ask so much JavaScript

00:36:23,589 --> 00:36:32,630
skills and so forth by my data scientist

00:36:27,589 --> 00:36:35,809
and yes there is let's say heavy lifting

00:36:32,630 --> 00:36:39,769
that JavaScript that can be done but

00:36:35,809 --> 00:36:44,599
what fascinates me about this example

00:36:39,769 --> 00:36:52,250
here is that the all all the JavaScript

00:36:44,599 --> 00:36:55,579
required for for this exercise is this

00:36:52,250 --> 00:36:57,769
one for the Train button this one

00:36:55,579 --> 00:37:02,420
actually generates all the pictures

00:36:57,769 --> 00:37:06,289
calls the Train routine the Train cell

00:37:02,420 --> 00:37:08,750
in the in notebook and this one for the

00:37:06,289 --> 00:37:13,819
prediction so we are talking about

00:37:08,750 --> 00:37:18,650
thirty three lines of jQuery to run the

00:37:13,819 --> 00:37:21,319
entire the entire application here and

00:37:18,650 --> 00:37:25,730
where is the trick well the trick is

00:37:21,319 --> 00:37:30,200
that we are using the Jupiter gateway so

00:37:25,730 --> 00:37:33,140
the notebooks are exposed by AP ice by

00:37:30,200 --> 00:37:36,589
by endpoints and now the only thing that

00:37:33,140 --> 00:37:39,650
we need to do is to expose the things

00:37:36,589 --> 00:37:42,259
that we believe are interesting and so

00:37:39,650 --> 00:37:47,680
it's a cool it's a complete closed loop

00:37:42,259 --> 00:37:52,150
between let's say data science front-end

00:37:47,680 --> 00:37:55,670
experience as a data scientist let's say

00:37:52,150 --> 00:37:58,730
senior together with the data scientist

00:37:55,670 --> 00:38:01,400
jr. or why not maybe Abby

00:37:58,730 --> 00:38:07,520
this developer that wants to gain some

00:38:01,400 --> 00:38:13,580
insight about his intuitions and that's

00:38:07,520 --> 00:38:17,510
all I have for you today and I would

00:38:13,580 --> 00:38:22,880
really like to to thank the Jupiter

00:38:17,510 --> 00:38:26,900
community for without this community

00:38:22,880 --> 00:38:32,859
without the the work of of many great

00:38:26,900 --> 00:38:36,350
developers and again Peter is one of my

00:38:32,859 --> 00:38:39,170
my example in this community I wouldn't

00:38:36,350 --> 00:38:42,920
stand here today and I hope that this

00:38:39,170 --> 00:38:47,050
let's say exchange of ideas can help you

00:38:42,920 --> 00:38:50,270
farther to develop even greater

00:38:47,050 --> 00:38:52,110
application around the Jupiter ecosystem

00:38:50,270 --> 00:38:57,489
so thank you very much

00:38:52,110 --> 00:38:57,489

YouTube URL: https://www.youtube.com/watch?v=Jh__N9zH47Y


