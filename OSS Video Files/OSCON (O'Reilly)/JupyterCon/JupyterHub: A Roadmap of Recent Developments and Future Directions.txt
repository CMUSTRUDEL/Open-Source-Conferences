Title: JupyterHub: A Roadmap of Recent Developments and Future Directions
Publication date: 2017-11-08
Playlist: JupyterCon
Description: 
	Min Ragan-Kelley (Simula Research Laboratory), Carol Willing (Cal Poly San Luis Obispo) 

JupyterHub is a multiuser server for Jupyter notebooks. Min Ragan-Kelley and Carol Willing discuss exciting recent additions and future plans for the project, including the ability to share notebooks with students and collaborators.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:01,609 --> 00:00:07,519
welcome everybody we are very pleased to

00:00:04,729 --> 00:00:10,070
be here to speak with you about Jupiter

00:00:07,519 --> 00:00:12,380
hub some of you had been at the tutorial

00:00:10,070 --> 00:00:15,230
and heard other things throughout the

00:00:12,380 --> 00:00:17,779
past couple days about Jupiter hub but

00:00:15,230 --> 00:00:20,029
we're gonna briefly go through where we

00:00:17,779 --> 00:00:22,189
are with Jupiter hub where we're going

00:00:20,029 --> 00:00:24,289
and some of the cool developments that

00:00:22,189 --> 00:00:27,439
are happening around us

00:00:24,289 --> 00:00:31,489
i'm carol willing and min regan Kelly

00:00:27,439 --> 00:00:34,390
and UV Panda we all work on the Jupiter

00:00:31,489 --> 00:00:38,930
hub team within project Jupiter and

00:00:34,390 --> 00:00:41,449
because Jupiter hub lets us serve groups

00:00:38,930 --> 00:00:44,300
of users I wanted to take a moment and

00:00:41,449 --> 00:00:47,510
recognize some student interns from Cal

00:00:44,300 --> 00:00:51,019
Poly San Luis Obispo where I am and ask

00:00:47,510 --> 00:00:55,190
your help to make Jupiter and Jupiter

00:00:51,019 --> 00:00:57,800
hub and Jupiter lab better and they are

00:00:55,190 --> 00:01:03,019
doing user testing on different elements

00:00:57,800 --> 00:01:04,760
of the project and there are signups for

00:01:03,019 --> 00:01:07,790
slots available for the rest of the day

00:01:04,760 --> 00:01:10,130
as well as tomorrow if you go to that

00:01:07,790 --> 00:01:12,560
bitly link we would really appreciate

00:01:10,130 --> 00:01:20,020
your help how long are these testing

00:01:12,560 --> 00:01:23,930
slots okay

00:01:20,020 --> 00:01:26,780
so short amount of time big benefits for

00:01:23,930 --> 00:01:31,070
the whole entire project so 15 10 15

00:01:26,780 --> 00:01:34,190
minutes okay great so back to Jupiter

00:01:31,070 --> 00:01:37,310
welcome to Jupiter Khan and we are

00:01:34,190 --> 00:01:39,170
really pleased to share with you what

00:01:37,310 --> 00:01:43,760
Jupiter hub can do for groups of people

00:01:39,170 --> 00:01:46,820
whether it's researchers students user

00:01:43,760 --> 00:01:52,220
groups any place where groups of users

00:01:46,820 --> 00:01:57,740
gather Jupiter hub can help you serve

00:01:52,220 --> 00:02:00,710
notebooks to folks so we have a couple

00:01:57,740 --> 00:02:04,130
of examples of Jupiter hub being used

00:02:00,710 --> 00:02:05,990
out in the wild if you will and one of

00:02:04,130 --> 00:02:09,560
those places it's used as a gateway for

00:02:05,990 --> 00:02:13,760
science at CERN they use a docker

00:02:09,560 --> 00:02:14,460
spawner which allows users to have their

00:02:13,760 --> 00:02:16,260
single you

00:02:14,460 --> 00:02:19,050
notebook servers running within a docker

00:02:16,260 --> 00:02:24,690
container it allows a single site

00:02:19,050 --> 00:02:28,020
sign-on and also uses Jupiter hub with

00:02:24,690 --> 00:02:31,950
root and ipython and also integrates

00:02:28,020 --> 00:02:34,080
with Stern's box a file sharing service

00:02:31,950 --> 00:02:36,840
which enables sharing notebooks among

00:02:34,080 --> 00:02:40,290
colleagues they're similar deployments

00:02:36,840 --> 00:02:43,890
exist at nurse at UCSD and at compute

00:02:40,290 --> 00:02:46,620
Canada some of you may have seen Scott's

00:02:43,890 --> 00:02:49,920
Anderson's talk earlier today from

00:02:46,620 --> 00:02:51,660
quanto peon they have extensively used

00:02:49,920 --> 00:02:55,410
Jupiter hub for a number of years now

00:02:51,660 --> 00:02:58,530
and they use it to deploy an analysis

00:02:55,410 --> 00:03:01,950
environment for testing trading

00:02:58,530 --> 00:03:07,440
algorithms and also it has scaled up to

00:03:01,950 --> 00:03:09,510
large numbers of users and then the

00:03:07,440 --> 00:03:12,720
final example which we are very proud of

00:03:09,510 --> 00:03:15,600
and it is very timely is the current

00:03:12,720 --> 00:03:19,110
deployment at UC Berkeley fernando

00:03:15,600 --> 00:03:21,360
mentioned this earlier today we are

00:03:19,110 --> 00:03:23,940
really proud that yesterday 1200

00:03:21,360 --> 00:03:27,900
students were attending a class using

00:03:23,940 --> 00:03:31,740
jupiter hub and the notebooks and UV and

00:03:27,900 --> 00:03:35,360
his team at berkeley really have done an

00:03:31,740 --> 00:03:40,640
outstanding job of making this possible

00:03:35,360 --> 00:03:42,780
so some fundamentals of jupiter hub and

00:03:40,640 --> 00:03:46,290
we're gonna start with that and then

00:03:42,780 --> 00:03:49,880
we'll move into what's new with jupiter

00:03:46,290 --> 00:03:51,960
hub 0.8 then we'll cover that as well as

00:03:49,880 --> 00:03:54,870
other things that are out there on the

00:03:51,960 --> 00:03:58,620
horizon and then UV is going to come up

00:03:54,870 --> 00:04:00,960
here and do a talk about 0 to jupiter

00:03:58,620 --> 00:04:03,300
hub and how you can set up your own

00:04:00,960 --> 00:04:07,740
jupiter hub instance using kubernetes

00:04:03,300 --> 00:04:11,510
and then uva will wrap it up and we'll

00:04:07,740 --> 00:04:14,880
take questions so where are we now

00:04:11,510 --> 00:04:19,080
Jupiter hub 0.7 was released at the end

00:04:14,880 --> 00:04:27,040
of this past year we just released beta

00:04:19,080 --> 00:04:32,730
4 0.8 and Jupiter hub in general is a

00:04:27,040 --> 00:04:36,430
huh based project that allows an

00:04:32,730 --> 00:04:38,470
Authenticator a user database and a

00:04:36,430 --> 00:04:44,070
spawner that spawns single user

00:04:38,470 --> 00:04:48,070
notebooks to exist on a server and then

00:04:44,070 --> 00:04:51,850
a proxy that communicates with the hub

00:04:48,070 --> 00:04:57,040
or the single user notebooks and out to

00:04:51,850 --> 00:05:00,430
the browser some key pieces of Jupiter

00:04:57,040 --> 00:05:02,500
hub are the proxy the Authenticator the

00:05:00,430 --> 00:05:05,320
spawner the hub connects everything

00:05:02,500 --> 00:05:07,870
together and obviously the notebooks are

00:05:05,320 --> 00:05:11,620
something that the users want to use to

00:05:07,870 --> 00:05:14,920
common pieces that people will configure

00:05:11,620 --> 00:05:22,630
and/or customize our the Authenticator

00:05:14,920 --> 00:05:24,700
and the spawner and the authenticators

00:05:22,630 --> 00:05:27,280
are sort of the first extension point

00:05:24,700 --> 00:05:30,220
for Jupiter hub you can write your own

00:05:27,280 --> 00:05:35,100
Authenticator to authenticate users the

00:05:30,220 --> 00:05:38,260
default uses Pam but there are many

00:05:35,100 --> 00:05:41,440
authenticators that we or other members

00:05:38,260 --> 00:05:43,830
of the community have written to satisfy

00:05:41,440 --> 00:05:48,760
a number of different environments and

00:05:43,830 --> 00:05:51,940
including you know OAuth remote users

00:05:48,760 --> 00:05:54,190
for Shibboleth LDAP and a temp

00:05:51,940 --> 00:05:56,560
Authenticator which allows you to do a

00:05:54,190 --> 00:06:01,630
first-time auto log-in and then you can

00:05:56,560 --> 00:06:05,170
change your password in addition the

00:06:01,630 --> 00:06:08,200
spawners are what allows you to start a

00:06:05,170 --> 00:06:11,220
single user notebook server for each

00:06:08,200 --> 00:06:14,530
individual user on the system and

00:06:11,220 --> 00:06:17,410
basically it consists of three main

00:06:14,530 --> 00:06:21,640
methods a start method which starts the

00:06:17,410 --> 00:06:24,940
server a polling method that checks if

00:06:21,640 --> 00:06:28,720
the server is running and another method

00:06:24,940 --> 00:06:30,610
to stop the running server and again

00:06:28,720 --> 00:06:32,320
since people have a lot of different

00:06:30,610 --> 00:06:34,530
environments and configurations there's

00:06:32,320 --> 00:06:38,379
a number of different spawners and

00:06:34,530 --> 00:06:42,189
people have written for their different

00:06:38,379 --> 00:06:45,250
environments and I think at this point

00:06:42,189 --> 00:07:41,590
I'm going to turn it over to min to talk

00:06:45,250 --> 00:07:43,240
about services each with user is their

00:07:41,590 --> 00:07:45,490
own environment to run their own codes

00:07:43,240 --> 00:07:48,340
get thrown files maybe you've got some

00:07:45,490 --> 00:07:50,349
sharing functionality or some additional

00:07:48,340 --> 00:07:52,370
functionality that you want to integrate

00:07:50,349 --> 00:07:54,650
with with do

00:07:52,370 --> 00:07:58,850
visual application services make that

00:07:54,650 --> 00:08:01,850
integration a little bit easier and each

00:07:58,850 --> 00:08:04,880
service gets the ability to talk to the

00:08:01,850 --> 00:08:08,090
drive by these big advocates you can

00:08:04,880 --> 00:08:12,020
have services that take operations to

00:08:08,090 --> 00:08:14,430
manage users being users and the

00:08:12,020 --> 00:08:17,210
effector

00:08:14,430 --> 00:08:20,460
one of the reasons of this is the class

00:08:17,210 --> 00:08:23,009
the way that you pair up authentication

00:08:20,460 --> 00:08:26,039
works with the signature servers is by

00:08:23,009 --> 00:08:28,410
these classes the notebook identity for

00:08:26,039 --> 00:08:30,590
our application is based on the tornado

00:08:28,410 --> 00:08:32,580
web framework so if you have a tornado

00:08:30,590 --> 00:08:34,229
web application that you wanted to play

00:08:32,580 --> 00:08:38,039
about my to bear cub you can import the

00:08:34,229 --> 00:08:39,860
same authentication that we use in the

00:08:38,039 --> 00:08:42,960
single user server and you can

00:08:39,860 --> 00:08:44,970
authenticate your own application with

00:08:42,960 --> 00:08:47,940
the same code so this isn't actually a

00:08:44,970 --> 00:08:50,430
functional for NATO service you can use

00:08:47,940 --> 00:08:52,740
with to pair up and it just mixes in

00:08:50,430 --> 00:08:56,130
this table authenticated class that adds

00:08:52,740 --> 00:08:59,220
the tornado some distinguished indicated

00:08:56,130 --> 00:09:00,750
that greater whenever a user visits this

00:08:59,220 --> 00:09:02,670
it will authenticate with the hub and

00:09:00,750 --> 00:09:04,320
then we've asked for the standard for

00:09:02,670 --> 00:09:08,670
NATO gave guy what user is this it will

00:09:04,320 --> 00:09:11,610
tell you that is correct to the hub and

00:09:08,670 --> 00:09:15,600
it will in this case this service just

00:09:11,610 --> 00:09:20,339
shows the user the model from sugar

00:09:15,600 --> 00:09:22,170
popovers they are so what are services

00:09:20,339 --> 00:09:23,940
for they're really for anything you want

00:09:22,170 --> 00:09:26,790
to interact the thought would want to do

00:09:23,940 --> 00:09:30,060
additional things with so one of the

00:09:26,790 --> 00:09:32,310
primary use cases for Jupiter hub is for

00:09:30,060 --> 00:09:36,020
classes and integrating a tool called

00:09:32,310 --> 00:09:36,020
env breeder for automatic grading

00:09:36,860 --> 00:09:41,550
notebooks that part over and the greater

00:09:39,840 --> 00:09:45,450
is a sustainable form greater which runs

00:09:41,550 --> 00:09:46,710
as a service so that it runs it's an

00:09:45,450 --> 00:09:48,600
additional service that's part of Duke

00:09:46,710 --> 00:09:51,420
where heaven greeters log into this and

00:09:48,600 --> 00:09:54,480
can do their grading format and

00:09:51,420 --> 00:09:56,820
additional services of you calling Idol

00:09:54,480 --> 00:09:58,980
server servers so finding all those

00:09:56,820 --> 00:10:00,570
servers that are idle for a while I'll

00:09:58,980 --> 00:10:04,080
show you what else we know is too many

00:10:00,570 --> 00:10:07,530
resources you can also do additional

00:10:04,080 --> 00:10:08,760
file sharing services or setting up a

00:10:07,530 --> 00:10:13,730
notebook server for people to use

00:10:08,760 --> 00:10:13,730
together or are any viewer application

00:10:18,740 --> 00:10:27,420
so 0.8 you just we're going to talk

00:10:23,970 --> 00:10:30,900
about what's what's new in the latest

00:10:27,420 --> 00:10:33,000
release that is currently in beta so we

00:10:30,900 --> 00:10:36,060
released the first beta a couple weeks

00:10:33,000 --> 00:10:37,980
ago we've done a second one and it's a

00:10:36,060 --> 00:10:40,440
lot of our attention has been on

00:10:37,980 --> 00:10:43,140
spilling and one part of that scaling is

00:10:40,440 --> 00:10:45,780
performance scaling for use cases like

00:10:43,140 --> 00:10:49,830
the perfect appointments with a lot of

00:10:45,780 --> 00:10:53,250
users but also scaling a horrible sense

00:10:49,830 --> 00:10:55,830
of expanding the relevant applications

00:10:53,250 --> 00:10:58,110
for which to using Jupiter how it might

00:10:55,830 --> 00:11:00,330
be appropriate so if you put are

00:10:58,110 --> 00:11:02,880
probably started out with the goal of

00:11:00,330 --> 00:11:05,430
solving B I have a single shared server

00:11:02,880 --> 00:11:06,630
and I want to grant the users who

00:11:05,430 --> 00:11:10,830
already have accounts on that system

00:11:06,630 --> 00:11:13,860
access to it didn't entirely intend

00:11:10,830 --> 00:11:15,510
you have to go beyond serving small

00:11:13,860 --> 00:11:17,700
groups on a single shared machine

00:11:15,510 --> 00:11:19,320
because we thought it was not super

00:11:17,700 --> 00:11:22,350
reasonable of us to commit to supporting

00:11:19,320 --> 00:11:26,070
that kind of deployment but as it went

00:11:22,350 --> 00:11:30,450
from Berkeley that we you know start

00:11:26,070 --> 00:11:32,850
small and grow slowly or not so slowly

00:11:30,450 --> 00:11:35,550
and now it makes this some performance

00:11:32,850 --> 00:11:38,190
testing that that you he's done for

00:11:35,550 --> 00:11:42,630
we know that super hot with the current

00:11:38,190 --> 00:11:44,190
beta run reasonably well with 4,000

00:11:42,630 --> 00:11:46,140
active users not forth out of the total

00:11:44,190 --> 00:11:47,460
users before thousand users lucky and

00:11:46,140 --> 00:11:54,390
then starting our servers at the same

00:11:47,460 --> 00:11:57,810
time we're also looking at different

00:11:54,390 --> 00:12:01,100
applications that we can do so using any

00:11:57,810 --> 00:12:01,100
kind of to clear deployment

00:12:02,790 --> 00:12:10,959
one piece of that skin lesion is the

00:12:08,130 --> 00:12:13,480
proximity on so we do bear-hug has

00:12:10,959 --> 00:12:15,480
always used approximate called configure

00:12:13,480 --> 00:12:18,699
ablation proxy which is a single simple

00:12:15,480 --> 00:12:21,009
node a service that is a proxy that sits

00:12:18,699 --> 00:12:23,889
in front of Duke revenants how we

00:12:21,009 --> 00:12:25,480
managed to be when a user walks in they

00:12:23,889 --> 00:12:27,279
get out into the proxy and then selects

00:12:25,480 --> 00:12:29,589
users watch their name gets routed to

00:12:27,279 --> 00:12:34,269
their server is that's kind of how the

00:12:29,589 --> 00:12:36,519
whole application works but because

00:12:34,269 --> 00:12:38,139
that's a single process most potential

00:12:36,519 --> 00:12:40,389
single point of failure you're thinking

00:12:38,139 --> 00:12:41,410
of scaling Jupiter out of that's one of

00:12:40,389 --> 00:12:45,310
the things you might want to eliminate

00:12:41,410 --> 00:12:48,970
and so we we worked to make make that an

00:12:45,310 --> 00:12:50,889
API so that you can define you can

00:12:48,970 --> 00:12:53,680
implement the simple API of adding and

00:12:50,889 --> 00:12:56,829
removing routes and hook that up to any

00:12:53,680 --> 00:12:58,839
proxy the patient man can provide the

00:12:56,829 --> 00:13:01,389
appropriate logic and the goal of this

00:12:58,839 --> 00:13:03,009
is for supporting things like convert

00:13:01,389 --> 00:13:04,240
any employments with air ingress

00:13:03,009 --> 00:13:07,630
functionality and

00:13:04,240 --> 00:13:10,200
proxy's you can use to eliminate a

00:13:07,630 --> 00:13:10,200
single point

00:13:14,300 --> 00:13:21,270
so that adds in our super diagram of all

00:13:19,560 --> 00:13:23,340
of these pieces we started out with the

00:13:21,270 --> 00:13:25,740
authenticator and the spawner being the

00:13:23,340 --> 00:13:27,510
primary axes where you can configure how

00:13:25,740 --> 00:13:30,060
your doober above the planet must work

00:13:27,510 --> 00:13:32,070
and now we've added another axis of now

00:13:30,060 --> 00:13:36,260
the proxy's is a place that you can swap

00:13:32,070 --> 00:13:36,260
out ultimate implementations as well

00:13:36,920 --> 00:13:41,340
another place where we're adding a

00:13:39,030 --> 00:13:44,730
functionality that this was contributed

00:13:41,340 --> 00:13:47,670
primarily by Christian viral contributor

00:13:44,730 --> 00:13:50,610
to the project the ability had multiple

00:13:47,670 --> 00:13:52,440
servers for the user so the basic model

00:13:50,610 --> 00:13:54,420
of jupiter hub is that these are logged

00:13:52,440 --> 00:13:57,270
in they get a server that's their space

00:13:54,420 --> 00:14:00,570
and then they can log out and their

00:13:57,270 --> 00:14:05,790
sugar can shut down but what we've seen

00:14:00,570 --> 00:14:08,700
a number of cases like HPC circumstances

00:14:05,790 --> 00:14:10,440
where users can fake a lot of other GPU

00:14:08,700 --> 00:14:12,720
job or I want to run a job with these

00:14:10,440 --> 00:14:14,760
notes this this kind of resource

00:14:12,720 --> 00:14:16,800
allocation and you can have a form that

00:14:14,760 --> 00:14:18,300
says where the users are supplying their

00:14:16,800 --> 00:14:19,650
server they say I would like to set

00:14:18,300 --> 00:14:21,570
these parameters we can get the

00:14:19,650 --> 00:14:25,710
allocation and run their server in that

00:14:21,570 --> 00:14:27,510
context and when you have that you often

00:14:25,710 --> 00:14:30,300
have users who want to say ok I started

00:14:27,510 --> 00:14:31,800
the job and I'm running now but I would

00:14:30,300 --> 00:14:34,110
like to start a different one and I

00:14:31,800 --> 00:14:35,610
don't want to have to tear down what I

00:14:34,110 --> 00:14:35,910
was already running in order to start a

00:14:35,610 --> 00:14:37,410
new one

00:14:35,910 --> 00:14:41,160
and so we've added that functionality

00:14:37,410 --> 00:14:43,170
now and it's your 0.8 it's it's a very

00:14:41,160 --> 00:14:45,120
let's say preliminary support for it

00:14:43,170 --> 00:14:48,090
it's only an antiquated apap obvious

00:14:45,120 --> 00:14:50,280
there's no really management for it but

00:14:48,090 --> 00:14:52,140
as we saw it here what's that like the

00:14:50,280 --> 00:14:55,260
services you could write a service that

00:14:52,140 --> 00:15:00,120
provided that you might know the name

00:14:55,260 --> 00:15:04,800
servers so in looking at our diagram

00:15:00,120 --> 00:15:06,510
we've got our proxy now for a single

00:15:04,800 --> 00:15:10,010
user they instead of just having one

00:15:06,510 --> 00:15:12,350
notebook we can actually have several

00:15:10,010 --> 00:15:18,320
set up do you know

00:15:12,350 --> 00:15:23,000
hooks it up with a gas cluster etc next

00:15:18,320 --> 00:15:25,100
main confusion 0.8 is the way singular

00:15:23,000 --> 00:15:26,420
servers authenticate miss the hub so

00:15:25,100 --> 00:15:27,680
this is this month main things that you

00:15:26,420 --> 00:15:29,840
worry about dozens when you access the

00:15:27,680 --> 00:15:31,610
singer to show just server asks

00:15:29,840 --> 00:15:35,390
interacts with the hub in some way to

00:15:31,610 --> 00:15:38,830
say to is this person and we switched

00:15:35,390 --> 00:15:42,770
from a custom slightly brittle cookie

00:15:38,830 --> 00:15:45,200
base system to be using more standard a

00:15:42,770 --> 00:15:48,770
lot and this is with the night for

00:15:45,200 --> 00:15:51,650
stealing two things like the name

00:15:48,770 --> 00:15:53,270
servers and additional services because

00:15:51,650 --> 00:15:55,190
coop is the standard there are a lot

00:15:53,270 --> 00:15:58,190
were there lots of implementations is

00:15:55,190 --> 00:16:01,520
now easier to authenticate with the hub

00:15:58,190 --> 00:16:03,650
because it's a standard implementation

00:16:01,520 --> 00:16:05,240
then standing on the service everything

00:16:03,650 --> 00:16:13,840
is a new server all medicate with the

00:16:05,240 --> 00:16:16,520
hub just needs to the last piece is

00:16:13,840 --> 00:16:20,740
awesome eight so now there's an

00:16:16,520 --> 00:16:24,170
additional field store no databases for

00:16:20,740 --> 00:16:26,590
authenticators such as I did how about

00:16:24,170 --> 00:16:28,850
that here any of educator that is

00:16:26,590 --> 00:16:32,360
talking to an external authentication

00:16:28,850 --> 00:16:34,220
system such as the gift of Allah or

00:16:32,360 --> 00:16:37,160
you're using Globus which has these

00:16:34,220 --> 00:16:39,260
client certificates or see a log on or

00:16:37,160 --> 00:16:41,870
all these things that there are logging

00:16:39,260 --> 00:16:43,580
in produces some credentials you don't

00:16:41,870 --> 00:16:45,710
want to store it you want to store those

00:16:43,580 --> 00:16:47,690
in a state way and so there's off state

00:16:45,710 --> 00:16:49,460
is something that the Authenticator and

00:16:47,690 --> 00:16:52,060
return and Jupiter help restore that

00:16:49,460 --> 00:16:52,060
safely

00:16:52,089 --> 00:16:58,050
so you don't have to deal with versus

00:16:54,760 --> 00:17:00,130
name that carefully and securely

00:16:58,050 --> 00:17:02,620
chuckles for that encrypted in the

00:17:00,130 --> 00:17:04,419
database and once you have that that

00:17:02,620 --> 00:17:05,949
lets me say okay I logged in with github

00:17:04,419 --> 00:17:09,640
as a part of that process

00:17:05,949 --> 00:17:12,819
I got an API token up to now

00:17:09,640 --> 00:17:15,069
that's mostly just been discarded by the

00:17:12,819 --> 00:17:16,660
authentication process but now you can

00:17:15,069 --> 00:17:18,280
see that in law state and then the

00:17:16,660 --> 00:17:20,110
Authenticator can pass that as an

00:17:18,280 --> 00:17:21,910
environment variable so that when they

00:17:20,110 --> 00:17:24,040
use their blogs in they get Paris and

00:17:21,910 --> 00:17:34,270
view the server and they have their big

00:17:24,040 --> 00:17:36,309
rock token that lets them where it's

00:17:34,270 --> 00:17:37,720
just thing your your github API token is

00:17:36,309 --> 00:17:40,120
in its environment variable there was a

00:17:37,720 --> 00:17:45,549
bit of Python code asked maybe I'm a guy

00:17:40,120 --> 00:17:49,419
who in life and back to performance a

00:17:45,549 --> 00:17:52,750
lot of the work we did this summer NEP

00:17:49,419 --> 00:17:56,860
was putting together stress tests before

00:17:52,750 --> 00:17:58,540
seeing how what scale is reasonable for

00:17:56,860 --> 00:18:01,000
a single issue probably so if you were

00:17:58,540 --> 00:18:03,370
at Scott's Anderson spot earlier you can

00:18:01,000 --> 00:18:05,799
see that you can scale your hub pretty

00:18:03,370 --> 00:18:07,990
large as long as you have many distances

00:18:05,799 --> 00:18:10,720
of Jupiter hub and grab your users

00:18:07,990 --> 00:18:13,929
appropriately but we one of the things

00:18:10,720 --> 00:18:17,380
that we've been asked a lot is so yeah I

00:18:13,929 --> 00:18:18,090
know I can do that but how many users my

00:18:17,380 --> 00:18:31,980
reasonably

00:18:18,090 --> 00:18:35,250
Evans's we said yeah probably and so

00:18:31,980 --> 00:18:36,990
quantification of these metrics so that

00:18:35,250 --> 00:18:55,890
you can have better answers for how many

00:18:36,990 --> 00:18:57,950
people you can reasonably serve and part

00:18:55,890 --> 00:19:00,090
of this process what seeing things

00:18:57,950 --> 00:19:02,810
profiling tools you know the receiver

00:19:00,090 --> 00:19:05,700
butts in there is the flame graph of

00:19:02,810 --> 00:19:09,360
profiling Jupiter of saying where are we

00:19:05,700 --> 00:19:11,880
spending our time and this is when the

00:19:09,360 --> 00:19:13,890
in profiler from from pipe I'm so ready

00:19:11,880 --> 00:19:16,170
to recover your fire fire get this

00:19:13,890 --> 00:19:17,490
information and we can see that we're

00:19:16,170 --> 00:19:21,840
actually spending a significant fraction

00:19:17,490 --> 00:19:23,250
of our time doing some validation of the

00:19:21,840 --> 00:19:27,000
database that we really didn't actually

00:19:23,250 --> 00:19:28,440
have to do there was a mistake in our

00:19:27,000 --> 00:19:29,570
database code that we were able to fix

00:19:28,440 --> 00:19:32,090
and

00:19:29,570 --> 00:19:37,250
we found several places we're going to

00:19:32,090 --> 00:19:55,100
get pretty big winds to work finding

00:19:37,250 --> 00:19:56,780
weary so now so sharing is something

00:19:55,100 --> 00:19:59,360
that a lot of people want you perhaps

00:19:56,780 --> 00:20:02,270
mostly about taking giving everybody

00:19:59,360 --> 00:20:04,190
their own place to do their work but

00:20:02,270 --> 00:20:05,630
sometimes you want to say I am doing

00:20:04,190 --> 00:20:09,560
this work I need to collaborate with

00:20:05,630 --> 00:20:12,230
somebody so hug share is is meant to be

00:20:09,560 --> 00:20:14,780
a service or being able to say okay I've

00:20:12,230 --> 00:20:17,030
got these files in in my own little silo

00:20:14,780 --> 00:20:18,170
and I want to take that out and publish

00:20:17,030 --> 00:20:24,590
it into a place and share it with

00:20:18,170 --> 00:20:27,470
specific individuals and one of the

00:20:24,590 --> 00:20:31,400
target applications again is a me crater

00:20:27,470 --> 00:20:36,170
which does its own moving files around

00:20:31,400 --> 00:20:38,480
this distributing assignments and one of

00:20:36,170 --> 00:20:43,260
the difficulties in that right now is

00:20:38,480 --> 00:20:45,900
that is awaiting permission

00:20:43,260 --> 00:20:48,840
give it a higher level a guy that it can

00:20:45,900 --> 00:20:51,929
do this they can interact with the wider

00:20:48,840 --> 00:20:54,840
variety and this is very early it

00:20:51,929 --> 00:20:57,179
doesn't exist yet to repose this but it

00:20:54,840 --> 00:21:00,530
doesn't do anything

00:20:57,179 --> 00:21:00,530
we're on our network

00:21:00,650 --> 00:21:05,700
and more more work in the future is also

00:21:03,360 --> 00:21:07,950
related to the performance so we found a

00:21:05,700 --> 00:21:09,630
lot of issues and race conditions and

00:21:07,950 --> 00:21:13,530
things under high load with these stress

00:21:09,630 --> 00:21:14,970
tests but we also found that after

00:21:13,530 --> 00:21:16,170
running these stress tests that I

00:21:14,970 --> 00:21:18,750
reintroduce some of those race

00:21:16,170 --> 00:21:21,780
conditions that we didn't notice because

00:21:18,750 --> 00:21:26,190
we weren't running these stress tests as

00:21:21,780 --> 00:21:28,110
part of our communication and testing to

00:21:26,190 --> 00:21:32,070
is think the stress testing machine TVs

00:21:28,110 --> 00:21:33,750
build and actually bring it into itself

00:21:32,070 --> 00:21:36,390
so we can find when we're introducing

00:21:33,750 --> 00:21:37,890
our aggression was in this stuff as part

00:21:36,390 --> 00:21:58,250
of our regular testing process rather

00:21:37,890 --> 00:21:58,250
than me being and we also diagram adding

00:21:59,660 --> 00:22:07,170
accessibility with with superhub it's

00:22:04,860 --> 00:22:10,530
really officially it's all about

00:22:07,170 --> 00:22:12,450
deploying notebooks but in reality all

00:22:10,530 --> 00:22:15,059
we really care about is that it gets the

00:22:12,450 --> 00:22:16,410
web server on an IP important and so if

00:22:15,059 --> 00:22:19,770
your probes technically a tool that you

00:22:16,410 --> 00:22:24,120
could use to deploy our material web

00:22:19,770 --> 00:22:25,770
applications on behalf of users and in

00:22:24,120 --> 00:22:28,200
this data science community that we

00:22:25,770 --> 00:22:30,420
largely serve one of those applications

00:22:28,200 --> 00:22:33,179
that people are interested in is our

00:22:30,420 --> 00:22:35,429
studio and so we'll be working in in the

00:22:33,179 --> 00:22:38,760
future on being able to serve

00:22:35,429 --> 00:22:42,980
applications other than the believer has

00:22:38,760 --> 00:22:42,980
books as what is orchestrated by two

00:22:52,810 --> 00:23:01,070
hello mr. Zhan yes hello

00:22:57,830 --> 00:23:04,420
I'm UV and I'm gonna talk about more

00:23:01,070 --> 00:23:06,140
Berkeley I hope you are tired afterward

00:23:04,420 --> 00:23:08,590
actually I'm gonna talk about the zero

00:23:06,140 --> 00:23:11,210
to Jupiter hub guide which is a a

00:23:08,590 --> 00:23:12,680
Jupiter hub distribution is how I like

00:23:11,210 --> 00:23:15,530
to think of it where we make some

00:23:12,680 --> 00:23:17,150
choices for you to make it easier for

00:23:15,530 --> 00:23:19,610
you to install but also more importantly

00:23:17,150 --> 00:23:21,740
operate this over a long period of time

00:23:19,610 --> 00:23:23,900
so it's a scalable jibra of deployments

00:23:21,740 --> 00:23:25,700
for you know it's not just like

00:23:23,900 --> 00:23:27,230
obviously we uses at Berkeley for like

00:23:25,700 --> 00:23:29,270
really large class the picture of which

00:23:27,230 --> 00:23:30,890
you have seen earlier but you can also

00:23:29,270 --> 00:23:32,690
use it for like research as an

00:23:30,890 --> 00:23:35,990
installation of this at Wikimedia for

00:23:32,690 --> 00:23:38,780
example for for the research cluster and

00:23:35,990 --> 00:23:41,600
you can use it for other things too so

00:23:38,780 --> 00:23:43,730
what does scalable mean it works for

00:23:41,600 --> 00:23:45,290
large users like obviously this is we

00:23:43,730 --> 00:23:48,290
have it for the thousand 200 user class

00:23:45,290 --> 00:23:51,050
at Berkeley and we've tested it for up

00:23:48,290 --> 00:23:52,640
to four thousand users but also it

00:23:51,050 --> 00:23:55,070
doesn't need constant human operator

00:23:52,640 --> 00:23:56,870
intervention there's basically like two

00:23:55,070 --> 00:23:58,430
people dealing with the berkeley class

00:23:56,870 --> 00:24:01,460
and eventually will become just one and

00:23:58,430 --> 00:24:02,750
i don't want to the operator to actually

00:24:01,460 --> 00:24:04,340
constantly look at the screen and be

00:24:02,750 --> 00:24:06,230
like oh i need to restart that or like

00:24:04,340 --> 00:24:08,390
this person is having problems it needs

00:24:06,230 --> 00:24:10,280
to be as self-healing as possible you

00:24:08,390 --> 00:24:11,840
need to you know like i need to be able

00:24:10,280 --> 00:24:13,790
to like how one person deal with a

00:24:11,840 --> 00:24:15,980
thousand users or a 10,000 users or

00:24:13,790 --> 00:24:17,960
hundred thousand users without basically

00:24:15,980 --> 00:24:20,210
going crazy and needing to be at a

00:24:17,960 --> 00:24:22,040
computer constantly and it also lets you

00:24:20,210 --> 00:24:23,690
automatically scale cloud resources up

00:24:22,040 --> 00:24:25,280
and down because you know students

00:24:23,690 --> 00:24:27,650
hopefully go to sleep at night and then

00:24:25,280 --> 00:24:30,980
you don't need to spend as much money on

00:24:27,650 --> 00:24:32,330
resources so this is like like these are

00:24:30,980 --> 00:24:35,330
some of the design principles we keep in

00:24:32,330 --> 00:24:37,250
mind when we set this up and the other

00:24:35,330 --> 00:24:38,780
thing i want to point out is that this

00:24:37,250 --> 00:24:41,270
means that you don't actually need to be

00:24:38,780 --> 00:24:43,010
a sysadmin or consider yourself a

00:24:41,270 --> 00:24:44,810
sysadmin to set this up and maintain

00:24:43,010 --> 00:24:46,280
this in the long run which i think is an

00:24:44,810 --> 00:24:49,370
important part of what it means to be a

00:24:46,280 --> 00:24:51,620
distribution this is the architecture

00:24:49,370 --> 00:24:53,960
we've come up with so we want to be

00:24:51,620 --> 00:24:55,670
cloud agnostic and Hardware agnostic so

00:24:53,960 --> 00:24:57,680
last semesters working deployment was a

00:24:55,670 --> 00:24:59,360
new cloud the summer smoking deployment

00:24:57,680 --> 00:25:01,010
was on our own hardware and this

00:24:59,360 --> 00:25:03,800
semester I was on Azure and we've used

00:25:01,010 --> 00:25:04,370
to kubernetes as our abstraction layer

00:25:03,800 --> 00:25:06,440
that

00:25:04,370 --> 00:25:09,080
tracks over you know wherever you might

00:25:06,440 --> 00:25:10,880
be running on and you know you can

00:25:09,080 --> 00:25:12,110
install Jupiter hubs you can install

00:25:10,880 --> 00:25:13,550
multiple Jupiter hubs on the same

00:25:12,110 --> 00:25:16,370
cluster but you can also insert other

00:25:13,550 --> 00:25:19,430
software you can because you know github

00:25:16,370 --> 00:25:21,050
for example runs on kubernetes and you

00:25:19,430 --> 00:25:24,230
know you can install like MediaWiki or

00:25:21,050 --> 00:25:25,790
Drupal or dusk or spark or whatever you

00:25:24,230 --> 00:25:31,880
want on the same cluster and like

00:25:25,790 --> 00:25:33,530
utilize all of your resources so why

00:25:31,880 --> 00:25:36,890
Kuban it is this is just my slide

00:25:33,530 --> 00:25:38,540
justifying why we picked it it abstracts

00:25:36,890 --> 00:25:40,370
away claude provided hardware details so

00:25:38,540 --> 00:25:43,580
you don't actually have to worry or am i

00:25:40,370 --> 00:25:44,960
on AWS am i on Azure which is really

00:25:43,580 --> 00:25:46,820
nice in fact when we got this running on

00:25:44,960 --> 00:25:48,020
AWS as soon as we got accumulates

00:25:46,820 --> 00:25:50,059
cluster on AWS we didn't actually have

00:25:48,020 --> 00:25:53,510
to make any changes it worked exactly

00:25:50,059 --> 00:25:54,830
how it did our new route on AWS without

00:25:53,510 --> 00:25:57,500
us having to do anything and that's

00:25:54,830 --> 00:25:58,910
great it has a level high level API so

00:25:57,500 --> 00:26:00,710
you can say things like you know make

00:25:58,910 --> 00:26:01,640
sure there is a hub process running in

00:26:00,710 --> 00:26:03,860
the cluster at all times

00:26:01,640 --> 00:26:05,630
so if the machine that's that the hub

00:26:03,860 --> 00:26:06,650
process running on dies humanist knows

00:26:05,630 --> 00:26:08,120
that it should just like you know

00:26:06,650 --> 00:26:09,440
started somewhere else and you don't

00:26:08,120 --> 00:26:11,630
have to do that but also gives you

00:26:09,440 --> 00:26:13,429
access to lower level primitives so you

00:26:11,630 --> 00:26:14,809
can actually go and say actually you

00:26:13,429 --> 00:26:16,730
know I just swallowed on a container or

00:26:14,809 --> 00:26:18,800
you can say I want to run this container

00:26:16,730 --> 00:26:20,929
and before you start the container

00:26:18,800 --> 00:26:22,550
actually run this gate command that

00:26:20,929 --> 00:26:24,320
pulls files inside the container before

00:26:22,550 --> 00:26:26,030
you start the process or you can say

00:26:24,320 --> 00:26:28,130
before you start the container run this

00:26:26,030 --> 00:26:31,100
iptables command that blocks you know

00:26:28,130 --> 00:26:33,980
like outgoing traffic to anywhere except

00:26:31,100 --> 00:26:35,929
Google so it lets you go up and down the

00:26:33,980 --> 00:26:38,179
stack as you see fit so that's given us

00:26:35,929 --> 00:26:41,540
a lot of flexibility in designing this

00:26:38,179 --> 00:26:44,840
set up so that you know we could do what

00:26:41,540 --> 00:26:45,950
we need to do and you know you can still

00:26:44,840 --> 00:26:47,900
even though it gives you an abstraction

00:26:45,950 --> 00:26:49,309
you can still use the underlying

00:26:47,900 --> 00:26:51,140
features of your hardware cuz you paid

00:26:49,309 --> 00:26:53,000
for it and there's like GPUs

00:26:51,140 --> 00:26:55,100
support that if you have like a fast SSD

00:26:53,000 --> 00:26:56,210
can deal with that so even though you

00:26:55,100 --> 00:26:58,280
know it's an abstraction it's not a

00:26:56,210 --> 00:27:00,110
lowest-common-denominator problem where

00:26:58,280 --> 00:27:01,960
you know you can only use like a CPU and

00:27:00,110 --> 00:27:04,040
memory and nothing else

00:27:01,960 --> 00:27:05,510
the other thing is you know the

00:27:04,040 --> 00:27:07,990
community of qubits is somewhat similar

00:27:05,510 --> 00:27:10,220
to Jupiter but like a bit larger it's

00:27:07,990 --> 00:27:12,050
not controlled by any single commercial

00:27:10,220 --> 00:27:14,540
entity it's which solves a lot of

00:27:12,050 --> 00:27:16,250
problems with trace other ones it has

00:27:14,540 --> 00:27:17,660
very fast-paced releases lots of times

00:27:16,250 --> 00:27:19,310
we were like we really want this feature

00:27:17,660 --> 00:27:20,660
but I don't know if you want to build it

00:27:19,310 --> 00:27:21,950
and then you find out that you know

00:27:20,660 --> 00:27:23,900
someone somewhere has three full-time

00:27:21,950 --> 00:27:25,780
really good engineers working on it and

00:27:23,900 --> 00:27:28,610
then it's in a release in three months

00:27:25,780 --> 00:27:30,050
and they have done a really good job on

00:27:28,610 --> 00:27:32,030
fostering a really warm and welcoming

00:27:30,050 --> 00:27:33,650
environment for contributors and users

00:27:32,030 --> 00:27:36,770
every interaction we've had with them

00:27:33,650 --> 00:27:38,120
it's been great and whenever they had to

00:27:36,770 --> 00:27:39,710
do the right thing with the community

00:27:38,120 --> 00:27:41,930
shoot they have so far so that's great

00:27:39,710 --> 00:27:43,810
so what are we gonna do from now it's

00:27:41,930 --> 00:27:47,620
like I'm gonna do a really quick demo of

00:27:43,810 --> 00:27:50,150
installing a Jupiter hub on Google Cloud

00:27:47,620 --> 00:27:51,710
it's going to be a live issue demo which

00:27:50,150 --> 00:27:54,110
is which means I did this yesterday and

00:27:51,710 --> 00:27:56,600
made videos of this so we can actually

00:27:54,110 --> 00:27:57,740
do this right now and towards the end of

00:27:56,600 --> 00:27:59,450
this what we want to have is we would

00:27:57,740 --> 00:28:01,400
have a cube in this cluster that you can

00:27:59,450 --> 00:28:05,450
go to and like click and you know how it

00:28:01,400 --> 00:28:07,130
work so step one is I'm gonna create a

00:28:05,450 --> 00:28:08,780
cube minis cluster what this means is

00:28:07,130 --> 00:28:11,630
we're gonna ask the cloud provider and

00:28:08,780 --> 00:28:13,910
say hey give us I'm gonna start playing

00:28:11,630 --> 00:28:16,610
this now right we're gonna say give us

00:28:13,910 --> 00:28:19,670
three machines maybe with say seven gigs

00:28:16,610 --> 00:28:21,230
of RAM each and two cores each and you

00:28:19,670 --> 00:28:23,720
know in somewhere in the middle of the

00:28:21,230 --> 00:28:25,670
u.s. that you know that is that has

00:28:23,720 --> 00:28:27,740
Cuban it is running on it so we can then

00:28:25,670 --> 00:28:29,450
treat it like a QP DS cluster and play

00:28:27,740 --> 00:28:31,460
with it we don't actually have to care

00:28:29,450 --> 00:28:34,010
you know like where these machines are

00:28:31,460 --> 00:28:37,730
we just care like yeah they have some

00:28:34,010 --> 00:28:41,120
amount of resources that we want right

00:28:37,730 --> 00:28:43,190
and that should create very soon

00:28:41,120 --> 00:28:47,660
it usually takes a few minutes either to

00:28:43,190 --> 00:28:49,430
that video and then we use this thing

00:28:47,660 --> 00:28:52,280
called helm so helm is the package

00:28:49,430 --> 00:28:54,050
manager for kubernetes so you can think

00:28:52,280 --> 00:28:55,880
of it like something like an app store

00:28:54,050 --> 00:28:58,280
so a nice when I mentioned earlier that

00:28:55,880 --> 00:29:00,080
you know you can you know install random

00:28:58,280 --> 00:29:01,520
apps like whatever like like different

00:29:00,080 --> 00:29:03,340
applications including Jabra hub that's

00:29:01,520 --> 00:29:05,060
all using helm and this is an upstream

00:29:03,340 --> 00:29:07,460
package manager that's part of the

00:29:05,060 --> 00:29:09,020
Cubase community is very active and here

00:29:07,460 --> 00:29:10,610
we're just setting it up and we're

00:29:09,020 --> 00:29:12,260
saying you know we want to use the

00:29:10,610 --> 00:29:14,390
dripper hub repo this is the repo that

00:29:12,260 --> 00:29:16,190
we as a Jupiter hub team publish which

00:29:14,390 --> 00:29:18,530
contains you know like stable versions

00:29:16,190 --> 00:29:19,970
of the jib chart but also more

00:29:18,530 --> 00:29:22,250
cutting-edge versions for people who

00:29:19,970 --> 00:29:23,330
like to live on the leading edge and so

00:29:22,250 --> 00:29:26,990
that's it so just like a couple of

00:29:23,330 --> 00:29:29,330
commands then we create a config Yama

00:29:26,990 --> 00:29:30,909
file so how this works is I don't know

00:29:29,330 --> 00:29:32,950
if you were being at

00:29:30,909 --> 00:29:34,659
let's talk a couple of hours ago he

00:29:32,950 --> 00:29:35,859
talks about how we manage such a large

00:29:34,659 --> 00:29:37,720
installation and part of that is

00:29:35,859 --> 00:29:40,299
reproducibility we want to make sure

00:29:37,720 --> 00:29:42,429
that we can capture the state of our

00:29:40,299 --> 00:29:43,720
cluster how we configure it in some way

00:29:42,429 --> 00:29:44,769
that is reproducible at the way we do is

00:29:43,720 --> 00:29:46,629
it's yama files

00:29:44,769 --> 00:29:47,590
so this yama file basically says you

00:29:46,629 --> 00:29:50,379
know like yeah we have a couple of

00:29:47,590 --> 00:29:53,710
secrets that we need to secure the

00:29:50,379 --> 00:29:56,049
system and then we say for each user I

00:29:53,710 --> 00:29:59,440
want them to use the Jupiter or notebook

00:29:56,049 --> 00:30:02,349
image which has you know Conda Python 3

00:29:59,440 --> 00:30:04,479
and our kernels installed and I want

00:30:02,349 --> 00:30:05,859
them all to have one gig of ram but no

00:30:04,479 --> 00:30:07,419
more so if they try to use more than one

00:30:05,859 --> 00:30:10,059
gig of ram you know the kernels will get

00:30:07,419 --> 00:30:11,739
killed but they will be guaranteed that

00:30:10,059 --> 00:30:13,330
you know that they will have one gig of

00:30:11,739 --> 00:30:16,559
ram so for our three machines with sound

00:30:13,330 --> 00:30:20,470
gigs of ram that's about 21 users and

00:30:16,559 --> 00:30:22,299
then I install it which is just very

00:30:20,470 --> 00:30:24,820
simply you know like you have a hallam

00:30:22,299 --> 00:30:26,559
install command there is a GUI version

00:30:24,820 --> 00:30:28,450
of all of this of course I haven't

00:30:26,559 --> 00:30:30,909
demoed it it's not as complete and as

00:30:28,450 --> 00:30:32,440
bug free as the command line version so

00:30:30,909 --> 00:30:34,210
here I just say how to install Jupiter

00:30:32,440 --> 00:30:36,039
hub slash Jupiter hub name it goes to

00:30:34,210 --> 00:30:38,049
Jupiter Khan and namespace so that lets

00:30:36,039 --> 00:30:40,779
that's how we can install you know

00:30:38,049 --> 00:30:43,059
multiple Jupiter hubs on the same

00:30:40,779 --> 00:30:45,460
cluster so you can have a Jupiter output

00:30:43,059 --> 00:30:46,989
class a Jupiter hover Department or like

00:30:45,460 --> 00:30:49,239
you know just a Jupiter per person

00:30:46,989 --> 00:30:51,369
whatever you want and then we pin the

00:30:49,239 --> 00:30:53,440
version oops there went away too fast

00:30:51,369 --> 00:30:56,109
but we say you know we spin the version

00:30:53,440 --> 00:30:58,029
and say we want V zero point 4.0 because

00:30:56,109 --> 00:30:59,220
as we talked about a pretty somebody you

00:30:58,029 --> 00:31:02,200
know everything should have a version

00:30:59,220 --> 00:31:03,820
and that's how that works and then we

00:31:02,200 --> 00:31:05,979
just follow the commands here and one of

00:31:03,820 --> 00:31:08,049
it just says you know get the public IP

00:31:05,979 --> 00:31:09,849
of the proxy and it should probably say

00:31:08,049 --> 00:31:12,279
spending pending yeah because it takes a

00:31:09,849 --> 00:31:15,190
few minutes to get the IP and then we

00:31:12,279 --> 00:31:17,649
just copy the IP and now if I actually

00:31:15,190 --> 00:31:19,809
went to the IP I would actually see this

00:31:17,649 --> 00:31:21,039
so the default Authenticator is a dummy

00:31:19,809 --> 00:31:22,989
Authenticator

00:31:21,039 --> 00:31:25,450
it just has you know just lets you in

00:31:22,989 --> 00:31:27,369
whatever username and password as you

00:31:25,450 --> 00:31:29,080
want and I'm just going to type in

00:31:27,369 --> 00:31:30,849
random username and password and it will

00:31:29,080 --> 00:31:33,849
show up so what this means is we

00:31:30,849 --> 00:31:36,129
actually have a scalable reproducible

00:31:33,849 --> 00:31:39,519
Jupiter hub within a few minutes and a

00:31:36,129 --> 00:31:40,839
few commands just following the zero to

00:31:39,519 --> 00:31:43,029
Jupiter blocks like I haven't done

00:31:40,839 --> 00:31:44,920
anything here that's not just like step

00:31:43,029 --> 00:31:46,780
by step in the

00:31:44,920 --> 00:31:48,970
and yeah so this is it's given as the

00:31:46,780 --> 00:31:51,760
colonel is using an image that has both

00:31:48,970 --> 00:31:53,500
Python and R and as min mentioned we're

00:31:51,760 --> 00:31:56,860
working on adding our studios to portals

00:31:53,500 --> 00:32:00,340
as well and that's it so that's that's

00:31:56,860 --> 00:32:01,690
that's how simple that is and this also

00:32:00,340 --> 00:32:03,580
is like so you know a lot of times you

00:32:01,690 --> 00:32:05,020
have like super simple easy to install

00:32:03,580 --> 00:32:07,030
things and then there's like no upgrade

00:32:05,020 --> 00:32:09,010
path zero to Jupiter but has an upgrade

00:32:07,030 --> 00:32:10,960
path you can edit the or conflict or the

00:32:09,010 --> 00:32:12,760
Amal file and say you know like I want

00:32:10,960 --> 00:32:14,200
actually two gigs of RAM and then you

00:32:12,760 --> 00:32:16,270
can upgrade it and I'll do that in a

00:32:14,200 --> 00:32:18,100
fashion that doesn't disrupt users so

00:32:16,270 --> 00:32:19,540
you currently running users will

00:32:18,100 --> 00:32:22,510
continue to like be able to do the

00:32:19,540 --> 00:32:24,670
things they are doing and new users will

00:32:22,510 --> 00:32:25,750
be able to log in after your upgrade so

00:32:24,670 --> 00:32:27,700
that's how when we are running our

00:32:25,750 --> 00:32:29,530
classes if someone comes up and like a

00:32:27,700 --> 00:32:31,870
actually if we need a Fortran compiler

00:32:29,530 --> 00:32:34,750
on the cluster right now we're actually

00:32:31,870 --> 00:32:36,850
able to you know build that in the image

00:32:34,750 --> 00:32:38,020
and then push it out while the classes

00:32:36,850 --> 00:32:39,820
are running so we don't actually have to

00:32:38,020 --> 00:32:41,320
like you know stay up til Sunday morning

00:32:39,820 --> 00:32:42,940
while the class is down to actually

00:32:41,320 --> 00:32:45,280
deploy so we do multiple deploys a day

00:32:42,940 --> 00:32:48,040
when we need to without running into any

00:32:45,280 --> 00:32:50,110
problems and a lot of these other

00:32:48,040 --> 00:32:51,700
options are in the guide I'm not going

00:32:50,110 --> 00:32:53,950
to mention them all here because I don't

00:32:51,700 --> 00:32:55,180
have too much time but I'm going to show

00:32:53,950 --> 00:32:58,390
you one of them one of them which is

00:32:55,180 --> 00:32:59,830
resizing the cluster so we asked for

00:32:58,390 --> 00:33:01,540
three machines so that gives us about 20

00:32:59,830 --> 00:33:05,560
users but if you are like actually I

00:33:01,540 --> 00:33:07,960
have 30 users or 27 users then you can

00:33:05,560 --> 00:33:08,890
just resize it and that's it it just

00:33:07,960 --> 00:33:10,750
works you don't actually ever do

00:33:08,890 --> 00:33:14,260
anything else so in this case I've

00:33:10,750 --> 00:33:16,570
resize it to 4 and then I just have 4

00:33:14,260 --> 00:33:18,640
nodes with 7 gigs of RAM instead of 3

00:33:16,570 --> 00:33:20,740
nodes and more users can log in and I

00:33:18,640 --> 00:33:24,340
can like add capacity remove capacity

00:33:20,740 --> 00:33:25,930
pretty easily and there is also multiple

00:33:24,340 --> 00:33:27,310
auto scalars we wrote our own version

00:33:25,930 --> 00:33:29,320
but there is an upstream version from

00:33:27,310 --> 00:33:30,790
Cuban ities that's missing one feature

00:33:29,320 --> 00:33:32,230
for it to be useful for us but they are

00:33:30,790 --> 00:33:33,550
working on it and you know it's one of

00:33:32,230 --> 00:33:35,410
those like oh yeah we'll just wait for

00:33:33,550 --> 00:33:37,570
three months and then they've solved it

00:33:35,410 --> 00:33:39,700
for a situation that like helps us

00:33:37,570 --> 00:33:41,140
reduce cost a lot and we also found that

00:33:39,700 --> 00:33:43,750
if you're running a workshop a really

00:33:41,140 --> 00:33:45,970
good thing to do is to set up your hub a

00:33:43,750 --> 00:33:47,140
week before your workshop and then scale

00:33:45,970 --> 00:33:49,000
it down to zero nodes so you're not

00:33:47,140 --> 00:33:51,400
paying any money and then scale it back

00:33:49,000 --> 00:33:52,900
up the day of your workshop so you have

00:33:51,400 --> 00:33:56,790
you know you know it works well but

00:33:52,900 --> 00:33:59,490
you're not like paying too much money

00:33:56,790 --> 00:34:01,710
and that's it 4-0 superhub it's better

00:33:59,490 --> 00:34:03,419
quality but as I said this is what we

00:34:01,710 --> 00:34:05,370
are using right now for our class so

00:34:03,419 --> 00:34:06,809
that's a pretty good beater and a class

00:34:05,370 --> 00:34:09,540
has started yesterday day before

00:34:06,809 --> 00:34:11,100
yesterday and every single person with

00:34:09,540 --> 00:34:13,139
deployment access has been at Jupiter

00:34:11,100 --> 00:34:16,080
Khan in a different time zone and we

00:34:13,139 --> 00:34:17,639
have not died yet and so that's actually

00:34:16,080 --> 00:34:19,350
pretty good so this is a pretty good

00:34:17,639 --> 00:34:21,960
beta so I would highly recommend you try

00:34:19,350 --> 00:34:23,550
it out tell us what do you think come to

00:34:21,960 --> 00:34:27,750
the dealer channel talk to us on the

00:34:23,550 --> 00:34:29,879
mailing list and you know we we we want

00:34:27,750 --> 00:34:32,580
to have more people with veered use

00:34:29,879 --> 00:34:35,609
cases or just normal use cases try it

00:34:32,580 --> 00:34:41,909
out and help us with bugs and whatnot

00:34:35,609 --> 00:34:43,050
right next steps is you know just share

00:34:41,909 --> 00:34:44,820
your knowledge and experience with

00:34:43,050 --> 00:34:46,560
Jupiter community you know if you think

00:34:44,820 --> 00:34:48,659
you've done something cool or even if

00:34:46,560 --> 00:34:50,639
you if you have done something and you

00:34:48,659 --> 00:34:53,250
might not think it's cool please share

00:34:50,639 --> 00:34:55,109
it with us because I bet other people

00:34:53,250 --> 00:34:56,879
will think it's cool don't understand

00:34:55,109 --> 00:35:00,330
yourself there's the Gator Channel

00:34:56,879 --> 00:35:02,280
there's the Jupiter forums mailing list

00:35:00,330 --> 00:35:03,990
please reach out to us and share it with

00:35:02,280 --> 00:35:07,109
like the other people who were doing

00:35:03,990 --> 00:35:08,490
stuff there is lots of work to do with

00:35:07,109 --> 00:35:10,320
authenticators if you have an

00:35:08,490 --> 00:35:12,600
authenticator consider adding odd state

00:35:10,320 --> 00:35:14,760
support to it we already added it to the

00:35:12,600 --> 00:35:16,560
media because indicator and I think

00:35:14,760 --> 00:35:19,109
Adams hardened and added to the get up

00:35:16,560 --> 00:35:20,190
so he so he showed up and added to the

00:35:19,109 --> 00:35:21,359
get up Authenticator because you need to

00:35:20,190 --> 00:35:23,430
use it but there's lots of our art

00:35:21,359 --> 00:35:24,480
educators that would be great to add

00:35:23,430 --> 00:35:26,220
them so if you have an Authenticator

00:35:24,480 --> 00:35:29,130
consider adding out state implementation

00:35:26,220 --> 00:35:30,720
and tell us what we did wrong because

00:35:29,130 --> 00:35:32,040
you know you'll find that out only when

00:35:30,720 --> 00:35:34,020
you have multiple implementations and

00:35:32,040 --> 00:35:35,400
try out zero superhub you might not

00:35:34,020 --> 00:35:37,920
consider yourself as a sad man you might

00:35:35,400 --> 00:35:39,330
not think that's fine it's like it needs

00:35:37,920 --> 00:35:40,890
like I don't need to have thousand two

00:35:39,330 --> 00:35:42,630
hundred uses that's fine

00:35:40,890 --> 00:35:45,240
this works for like a class of 10 users

00:35:42,630 --> 00:35:46,740
20 users it doesn't matter in fact it

00:35:45,240 --> 00:35:48,480
might even be better for a small class

00:35:46,740 --> 00:35:50,250
because you can get away with like you

00:35:48,480 --> 00:35:51,990
know three small machines instead of one

00:35:50,250 --> 00:35:55,020
big machines and then scale it up and

00:35:51,990 --> 00:35:57,330
down as you need so try it out let us

00:35:55,020 --> 00:35:59,400
know what you think the documentation is

00:35:57,330 --> 00:36:00,810
improving constantly it's a guided dock

00:35:59,400 --> 00:36:03,210
we also are working on reference

00:36:00,810 --> 00:36:05,520
documentation so reach out and test it

00:36:03,210 --> 00:36:06,720
out and see how it is and to repeat the

00:36:05,520 --> 00:36:08,640
announcement that Karen made earlier

00:36:06,720 --> 00:36:10,579
there we are doing user testing at the

00:36:08,640 --> 00:36:13,259
Gramercy

00:36:10,579 --> 00:36:15,809
not building it's the room in one of

00:36:13,259 --> 00:36:18,509
these directions that direction please

00:36:15,809 --> 00:36:21,690
go there and you can sign up at the link

00:36:18,509 --> 00:36:22,920
it's 15 minutes for each of those things

00:36:21,690 --> 00:36:25,709
but you don't have to do all of them so

00:36:22,920 --> 00:36:27,599
as little as much time as you have and I

00:36:25,709 --> 00:36:44,609
think now we have five minutes for

00:36:27,599 --> 00:36:46,319
questions the question was how are we

00:36:44,609 --> 00:36:48,900
handling notebooks for a class so last

00:36:46,319 --> 00:36:51,239
semester what we did was we created a

00:36:48,900 --> 00:36:52,890
Google Cloud persistent disk for each

00:36:51,239 --> 00:36:54,329
user and that was great

00:36:52,890 --> 00:36:56,069
there was no isolation problems we are

00:36:54,329 --> 00:36:58,709
not using NFS or life is good but

00:36:56,069 --> 00:37:04,640
unfortunately this semester we have to

00:36:58,709 --> 00:37:04,640
use NFS so we are using NFS right now

00:37:10,150 --> 00:37:13,330
the question was Jupiter lab been

00:37:11,920 --> 00:37:28,720
renovated live this and the answer is

00:37:13,330 --> 00:37:29,980
yes I think the question was what amount

00:37:28,720 --> 00:37:32,080
of resources do you need for support

00:37:29,980 --> 00:37:34,240
four thousand users and so when we were

00:37:32,080 --> 00:37:35,920
doing this test testing so when you're

00:37:34,240 --> 00:37:38,260
doing capacity planning it's mostly a

00:37:35,920 --> 00:37:41,260
question of how much RAM or CPU do you

00:37:38,260 --> 00:37:43,870
want per user and then you multiply that

00:37:41,260 --> 00:37:47,260
by the amount of like the your machine

00:37:43,870 --> 00:37:49,780
size so in the example we had we had a

00:37:47,260 --> 00:37:56,110
user with one gig of ram and machines

00:37:49,780 --> 00:37:57,190
with seven is that Nadia question on the

00:37:56,110 --> 00:37:59,320
hub side on the hub side we didn't

00:37:57,190 --> 00:38:01,270
actually see any difference the hub

00:37:59,320 --> 00:38:05,110
process never really went over like half

00:38:01,270 --> 00:38:06,400
a CPU or six hundred Meg's 400 500 Meg's

00:38:05,110 --> 00:38:08,340
of RAM it was not an issue that we ran

00:38:06,400 --> 00:38:11,080
into but to complete my previous

00:38:08,340 --> 00:38:12,610
sentence yeah you just do capacity

00:38:11,080 --> 00:38:17,100
planning with simple multiplication and

00:38:12,610 --> 00:38:17,100
it works on okay yes

00:38:27,180 --> 00:38:38,970
yes you do need its your pointy there is

00:38:36,320 --> 00:38:43,560
there and in the UI there's actually

00:38:38,970 --> 00:38:56,610
just a button like but and that just

00:38:43,560 --> 00:39:02,280
calls the rest eaten up by spray chick

00:38:56,610 --> 00:39:04,620
number by URL it's a little bit mean by

00:39:02,280 --> 00:39:10,950
that so one of the things that can very

00:39:04,620 --> 00:39:12,030
vital provide employment is what how

00:39:10,950 --> 00:39:13,650
your notebooks are stored

00:39:12,030 --> 00:39:15,810
so if using Huck's here yeah they'll be

00:39:13,650 --> 00:39:16,260
URL for every rainy day look at you put

00:39:15,810 --> 00:39:20,010
it there

00:39:16,260 --> 00:39:21,990
once exists but if you're using an

00:39:20,010 --> 00:39:23,700
underlying storage that is otherwise

00:39:21,990 --> 00:39:25,850
cheered you can take that URL in the

00:39:23,700 --> 00:39:25,850
past

00:39:38,370 --> 00:39:43,210
- grant somebody else access to your hub

00:39:41,320 --> 00:39:46,540
so that's actually part of part of why

00:39:43,210 --> 00:39:48,310
we did the switch to co-op is that it's

00:39:46,540 --> 00:39:51,880
now not technically possible but

00:39:48,310 --> 00:39:53,590
extremely easy to add and so we that's

00:39:51,880 --> 00:39:55,720
part of why why we didn't switch them

00:39:53,590 --> 00:39:57,670
out now you can access somebody else's

00:39:55,720 --> 00:39:59,410
server and their server will say oh this

00:39:57,670 --> 00:40:01,270
is that other person and there currently

00:39:59,410 --> 00:40:04,960
isn't an option to say they should be

00:40:01,270 --> 00:40:07,330
allowed but that information is

00:40:04,960 --> 00:40:10,330
available it's free to make a different

00:40:07,330 --> 00:40:12,550
decision and in general with these kind

00:40:10,330 --> 00:40:13,810
of features the great thing is to just

00:40:12,550 --> 00:40:15,850
show up on the github and then like

00:40:13,810 --> 00:40:17,530
explain your use case and then that

00:40:15,850 --> 00:40:18,760
helps us design these better and then

00:40:17,530 --> 00:40:20,850
helps you also get involved with the

00:40:18,760 --> 00:40:20,850
community

00:40:38,620 --> 00:40:41,770
so what's involved in deploying

00:40:40,630 --> 00:40:44,730
something other than the notebook

00:40:41,770 --> 00:40:47,230
basically it has to use the toggle off

00:40:44,730 --> 00:40:48,550
scheme so it's a tornado application and

00:40:47,230 --> 00:40:54,150
that's just importing a class and

00:40:48,550 --> 00:40:57,190
inherit from it when you're done and for

00:40:54,150 --> 00:40:58,390
if you're there's a spec for how that

00:40:57,190 --> 00:41:00,730
works basically all you have to

00:40:58,390 --> 00:41:02,410
implement is the authentication

00:41:00,730 --> 00:41:04,030
mechanism and then we'll tell you a few

00:41:02,410 --> 00:41:05,320
environment variables that will ask you

00:41:04,030 --> 00:41:06,490
to tell you about what reports you

00:41:05,320 --> 00:41:09,610
should buy to you and stuff like that

00:41:06,490 --> 00:41:12,010
there is one feature that doesn't work

00:41:09,610 --> 00:41:13,600
that we need probably figure out a way

00:41:12,010 --> 00:41:17,110
around this is that you do need to

00:41:13,600 --> 00:41:18,970
support running on a base URL so your

00:41:17,110 --> 00:41:21,070
service will get requests sent like

00:41:18,970 --> 00:41:22,930
slash users slash remain and your

00:41:21,070 --> 00:41:25,180
application does them to support running

00:41:22,930 --> 00:41:28,960
on arbitrary fix that's the only teacher

00:41:25,180 --> 00:41:30,310
that Ryan lohit who's sitting next to

00:41:28,960 --> 00:41:32,470
you wrote the are through your support

00:41:30,310 --> 00:41:37,810
that we currently is so you should ask

00:41:32,470 --> 00:41:39,850
him all right I think that's it yeah

00:41:37,810 --> 00:41:45,219
thank you very much Oh

00:41:39,850 --> 00:41:45,219

YouTube URL: https://www.youtube.com/watch?v=hgkYbb6aEP4


