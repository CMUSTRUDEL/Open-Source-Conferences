Title: GenePattern Notebook: Jupyter for integrative genomics - Thorin Tabor (University of California)
Publication date: 2017-09-22
Playlist: JupyterCon
Description: 
	Thorin Tabor offers an overview of the GenePattern Notebook, which allows Jupyter to communicate with the open source GenePattern environment for integrative genomics analysis. It wraps hundreds of software tools for analyzing omics data types, as well as general machine learning methods, and makes them available through a user-friendly interface.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:01,569 --> 00:00:07,600
my name is Lauren Taber I'm a computer

00:00:05,319 --> 00:00:09,880
scientist and software engineer by

00:00:07,600 --> 00:00:12,550
training but in the last few years I

00:00:09,880 --> 00:00:14,500
have fallen into the world where I work

00:00:12,550 --> 00:00:16,820
with bioinformaticians and various

00:00:14,500 --> 00:00:20,180
bioinformatics tools

00:00:16,820 --> 00:00:22,220
I'm part of the Mesirow lab which is

00:00:20,180 --> 00:00:24,170
currently a collaboration between the

00:00:22,220 --> 00:00:27,039
University of California San Diego and

00:00:24,170 --> 00:00:30,529
the Broad Institute of MIT and Harvard

00:00:27,039 --> 00:00:32,540
today I'm going to be talking about gene

00:00:30,529 --> 00:00:34,610
pattern notebook which is a tool that

00:00:32,540 --> 00:00:39,080
we've developed for using Jupiter

00:00:34,610 --> 00:00:41,890
notebooks in biomedical research in

00:00:39,080 --> 00:00:44,540
particular we use it with cancer data

00:00:41,890 --> 00:00:47,120
looking into the gene expression from

00:00:44,540 --> 00:00:49,520
different tumor samples but the tool is

00:00:47,120 --> 00:00:52,010
also more broadly applicable to other

00:00:49,520 --> 00:00:55,610
areas of bioinformatics and scientific

00:00:52,010 --> 00:00:56,420
computing so for the sake of my own

00:00:55,610 --> 00:00:58,480
curiosity

00:00:56,420 --> 00:01:01,820
before I launch too far into my talk

00:00:58,480 --> 00:01:05,840
let's do a show of hands who here uses

00:01:01,820 --> 00:01:08,660
Jupiter in some sort of data science all

00:01:05,840 --> 00:01:10,190
right who here does development for the

00:01:08,660 --> 00:01:12,560
framework itself coding your own

00:01:10,190 --> 00:01:15,830
extension and B extension custom kernel

00:01:12,560 --> 00:01:17,270
or something of that nature all right is

00:01:15,830 --> 00:01:20,210
there anyone in the room who's not a

00:01:17,270 --> 00:01:22,250
coder at all all right

00:01:20,210 --> 00:01:25,950
that's an interesting mix thank you

00:01:22,250 --> 00:01:28,409
[Music]

00:01:25,950 --> 00:01:30,479
so by way of introducing this let me

00:01:28,409 --> 00:01:33,540
tell you this story of how I came to

00:01:30,479 --> 00:01:35,400
work with Jupiter as I said I'm a

00:01:33,540 --> 00:01:38,040
software engineer and I work in another

00:01:35,400 --> 00:01:40,830
open-source project which is called gene

00:01:38,040 --> 00:01:42,780
pattern it's a long-standing staple in

00:01:40,830 --> 00:01:44,670
the bioinformatics world but perhaps not

00:01:42,780 --> 00:01:47,150
so well known outside that sphere and

00:01:44,670 --> 00:01:50,009
I'll talk some more about it in a minute

00:01:47,150 --> 00:01:52,530
so a few years ago

00:01:50,009 --> 00:01:54,479
Chet who is my boss at the time comes up

00:01:52,530 --> 00:01:56,400
to me and says that I should check out

00:01:54,479 --> 00:01:58,860
these ipython notebooks which are now

00:01:56,400 --> 00:02:01,380
called Jupiter and I did and they were

00:01:58,860 --> 00:02:04,020
pretty slick in particular what

00:02:01,380 --> 00:02:07,380
impressed me was the ability to annotate

00:02:04,020 --> 00:02:09,090
your work in a linear narrative and then

00:02:07,380 --> 00:02:11,730
quickly iterate through code calls as

00:02:09,090 --> 00:02:13,709
you develop it and to give some context

00:02:11,730 --> 00:02:15,570
at the time we're working on gene

00:02:13,709 --> 00:02:17,100
pattern which does some great tracking

00:02:15,570 --> 00:02:19,650
of data provenance and makes it easy to

00:02:17,100 --> 00:02:21,420
run a bunch of different analyses but at

00:02:19,650 --> 00:02:23,640
that time it didn't have that same

00:02:21,420 --> 00:02:25,290
narrative structure that you would if

00:02:23,640 --> 00:02:27,239
you were to say publish a paper and

00:02:25,290 --> 00:02:30,750
that's the sort of thing that jupiter

00:02:27,239 --> 00:02:33,239
notebooks are really good at so from

00:02:30,750 --> 00:02:35,730
there we begin to delve into Jupiter

00:02:33,239 --> 00:02:37,920
development chet began putting together

00:02:35,730 --> 00:02:40,799
a notebook for working with RNA seek

00:02:37,920 --> 00:02:43,380
methods and I began prototyping a way to

00:02:40,799 --> 00:02:44,519
integrate our gene pattern services and

00:02:43,380 --> 00:02:47,040
make them available on the Jupiter

00:02:44,519 --> 00:02:48,329
environment we flew to Berkeley met with

00:02:47,040 --> 00:02:50,250
the cords you put her team and there's

00:02:48,329 --> 00:02:53,150
been a lot develop been a lot of

00:02:50,250 --> 00:02:53,150
development through there

00:02:54,060 --> 00:03:00,480
what we've created is an environment for

00:02:57,239 --> 00:03:03,120
performing genomic analyses which

00:03:00,480 --> 00:03:05,160
integrates hundreds of programmatic and

00:03:03,120 --> 00:03:07,890
command-line tools as well as a

00:03:05,160 --> 00:03:10,110
multitude of visualizations it's

00:03:07,890 --> 00:03:12,300
designed to accompany your research

00:03:10,110 --> 00:03:16,140
every step of the way from its

00:03:12,300 --> 00:03:18,360
conception to its dissemination gene

00:03:16,140 --> 00:03:21,000
pattern notebook extends the familiar

00:03:18,360 --> 00:03:23,790
Jupiter interface and makes analyses

00:03:21,000 --> 00:03:26,310
accessible to both programming and non

00:03:23,790 --> 00:03:29,850
programming users through user-friendly

00:03:26,310 --> 00:03:32,850
interactive widgets it also provides a

00:03:29,850 --> 00:03:35,220
suite of useful tools and utilities for

00:03:32,850 --> 00:03:37,650
programmatic users both those looking to

00:03:35,220 --> 00:03:40,120
perform their own analyses and those

00:03:37,650 --> 00:03:45,110
authoring their own bioinformatic tools

00:03:40,120 --> 00:03:45,110
[Music]

00:03:45,330 --> 00:03:50,190
in essence what I hope the show is that

00:03:47,730 --> 00:03:52,050
these two open-source projects Jupiter

00:03:50,190 --> 00:03:53,850
and gene pattern go together like

00:03:52,050 --> 00:03:57,000
chocolate and peanut butter

00:03:53,850 --> 00:03:57,000
[Music]

00:03:58,450 --> 00:04:02,769
all right so before I launch into the

00:04:00,670 --> 00:04:04,840
Jupiter side of things I want to take

00:04:02,769 --> 00:04:06,879
just a few minutes to talk about gene

00:04:04,840 --> 00:04:09,670
pattern what it does and what its aims

00:04:06,879 --> 00:04:11,050
are this is important context to have

00:04:09,670 --> 00:04:13,209
before getting into how we've integrated

00:04:11,050 --> 00:04:14,830
it with the Jupiter environment and how

00:04:13,209 --> 00:04:17,799
that integration is paving the way to

00:04:14,830 --> 00:04:22,560
more narrative collaborative and faster

00:04:17,799 --> 00:04:22,560
genomic research so what is gene pattern

00:04:22,800 --> 00:04:28,470
the short answer is that gene pattern is

00:04:26,410 --> 00:04:30,280
a platform for a reproducible

00:04:28,470 --> 00:04:33,190
bioinformatic research

00:04:30,280 --> 00:04:36,220
it's a long-established project the

00:04:33,190 --> 00:04:38,710
first release was back in 2004 and it's

00:04:36,220 --> 00:04:40,810
been going strong ever since that puts

00:04:38,710 --> 00:04:43,389
it on similar footing to ipython the

00:04:40,810 --> 00:04:46,680
parent the project Jupiter gene pattern

00:04:43,389 --> 00:04:50,590
is open source under a bsd-style license

00:04:46,680 --> 00:04:52,750
it's got some 50,000 registered users

00:04:50,590 --> 00:04:54,580
and the gene pattern public server

00:04:52,750 --> 00:04:58,380
usually runs somewhere in the ballpark

00:04:54,580 --> 00:05:01,210
of four thousand analyses each week and

00:04:58,380 --> 00:05:03,910
finally I want to note that it's an open

00:05:01,210 --> 00:05:06,460
platform there's a repository of

00:05:03,910 --> 00:05:08,940
community contributed methods that cover

00:05:06,460 --> 00:05:12,149
a wide range of bio tramatic techniques

00:05:08,940 --> 00:05:12,149
[Music]

00:05:12,380 --> 00:05:16,910
speaking of those community contributed

00:05:14,390 --> 00:05:20,180
methods we currently have somewhere in

00:05:16,910 --> 00:05:23,600
the range of 250 to 300 analytic modules

00:05:20,180 --> 00:05:26,090
and repositories these modules wrap

00:05:23,600 --> 00:05:28,220
methods in many of the most popular

00:05:26,090 --> 00:05:31,190
open-source by automatic machine

00:05:28,220 --> 00:05:34,820
learning and statistical computing

00:05:31,190 --> 00:05:36,350
libraries for example we have modules

00:05:34,820 --> 00:05:39,410
that wrap popular methods in

00:05:36,350 --> 00:05:41,390
bioconductor ones that analyse gene

00:05:39,410 --> 00:05:44,360
expression data both RNA seek and

00:05:41,390 --> 00:05:47,090
microarray sequence variation and copy

00:05:44,360 --> 00:05:48,080
number analysis ones that work with

00:05:47,090 --> 00:05:52,610
proteomic data

00:05:48,080 --> 00:05:55,300
flow cytometry network analysis k-means

00:05:52,610 --> 00:05:59,930
clustering and the list goes on

00:05:55,300 --> 00:06:02,690
[Music]

00:05:59,930 --> 00:06:05,150
of course you can also use gene pattern

00:06:02,690 --> 00:06:07,850
to create your own analytic modules or

00:06:05,150 --> 00:06:10,310
even full analysis pipelines gene

00:06:07,850 --> 00:06:13,070
pattern itself is strictly language

00:06:10,310 --> 00:06:17,480
agnostic so analytic modules can be

00:06:13,070 --> 00:06:20,920
written in Python or MATLAB Java Scala

00:06:17,480 --> 00:06:23,360
or even Perl after that perverse

00:06:20,920 --> 00:06:25,370
essentially a gene pattern module can

00:06:23,360 --> 00:06:27,610
wrap anything that can be called from

00:06:25,370 --> 00:06:30,590
the command line or a language console

00:06:27,610 --> 00:06:32,930
moreover since gene pattern modules

00:06:30,590 --> 00:06:35,420
provide so moreover since G pattern

00:06:32,930 --> 00:06:37,730
provides these modular wrappers you can

00:06:35,420 --> 00:06:40,640
interact with each of these methods in a

00:06:37,730 --> 00:06:42,290
clear standardized manner despite any

00:06:40,640 --> 00:06:44,630
underlying language or library

00:06:42,290 --> 00:06:46,400
differences this is good for

00:06:44,630 --> 00:06:48,530
coordinating the inputs and outputs of

00:06:46,400 --> 00:06:50,420
disparate tools they're aligned

00:06:48,530 --> 00:06:53,330
integrating different languages or

00:06:50,420 --> 00:06:54,800
requirements finally you can also share

00:06:53,330 --> 00:06:58,660
your modules with others through the

00:06:54,800 --> 00:06:58,660
g-park community repository

00:06:58,960 --> 00:07:03,729
outside of having repositories of

00:07:01,060 --> 00:07:06,220
analysis modules gene pattern has a web

00:07:03,729 --> 00:07:07,930
server architecture either you can

00:07:06,220 --> 00:07:09,220
download it and run it yourself and

00:07:07,930 --> 00:07:11,410
you're a machine just like you might

00:07:09,220 --> 00:07:14,319
with Jupiter or you can connect to one

00:07:11,410 --> 00:07:16,060
of our public servers these public

00:07:14,319 --> 00:07:17,740
servers are backed by large compute

00:07:16,060 --> 00:07:20,500
clusters so they can handle a lot of

00:07:17,740 --> 00:07:22,509
analyses we currently have a public

00:07:20,500 --> 00:07:24,849
server available hosted at the Broad

00:07:22,509 --> 00:07:27,940
Institute and one at the National Center

00:07:24,849 --> 00:07:30,490
for genome analysis support NC GA s at

00:07:27,940 --> 00:07:32,250
Indiana University o we also have

00:07:30,490 --> 00:07:34,810
several more that are in the works and

00:07:32,250 --> 00:07:36,370
finally we have some images that are

00:07:34,810 --> 00:07:38,889
available in case you want to set up

00:07:36,370 --> 00:07:42,610
your own server for your lab or business

00:07:38,889 --> 00:07:45,630
and Amazon ec2 OpenStack or a similar

00:07:42,610 --> 00:07:45,630
cloud environment

00:07:49,050 --> 00:07:53,400
having a web server architecture allows

00:07:51,599 --> 00:07:56,039
gene pattern to provide a restful web

00:07:53,400 --> 00:07:59,159
service within distribute programmatic

00:07:56,039 --> 00:08:03,680
wrappers for this REST API and these are

00:07:59,159 --> 00:08:06,690
available in Python our MATLAB and Java

00:08:03,680 --> 00:08:08,370
the gene pattern API has been used in

00:08:06,690 --> 00:08:10,169
the past to back various academic

00:08:08,370 --> 00:08:12,000
portals and other web applications and

00:08:10,169 --> 00:08:16,710
we continue to develop that into the

00:08:12,000 --> 00:08:18,330
future finally having a web server

00:08:16,710 --> 00:08:21,000
architecture helped gene pattern to

00:08:18,330 --> 00:08:22,650
provide a user-friendly interface and I

00:08:21,000 --> 00:08:24,990
know from the show of hands earlier that

00:08:22,650 --> 00:08:26,880
uh this is a largely programmer audience

00:08:24,990 --> 00:08:30,419
so you might be asking yourself why does

00:08:26,880 --> 00:08:33,690
that matter and here's why frequently in

00:08:30,419 --> 00:08:36,570
bio labs there is a wide disparity and

00:08:33,690 --> 00:08:38,520
the ability of individuals to code so

00:08:36,570 --> 00:08:40,500
why there may be a bioinformatician or

00:08:38,520 --> 00:08:42,149
data scientist in lab who like eats up

00:08:40,500 --> 00:08:44,820
clustering algorithms for breakfast

00:08:42,149 --> 00:08:46,829
there may be three bench biologists who

00:08:44,820 --> 00:08:48,450
while they are great at working with the

00:08:46,829 --> 00:08:51,600
numbers or underlying biological

00:08:48,450 --> 00:08:54,060
concepts lack prowess so to speak of the

00:08:51,600 --> 00:08:56,910
command line having a user-friendly

00:08:54,060 --> 00:09:00,029
interface is good for mixed labs like

00:08:56,910 --> 00:09:02,250
this because it allows biologists of all

00:09:00,029 --> 00:09:05,310
levels of technical sophistication to

00:09:02,250 --> 00:09:07,920
run complex analyses it helps keep the

00:09:05,310 --> 00:09:09,510
technically inclined lab members from

00:09:07,920 --> 00:09:13,200
becoming bottlenecks for this sort of

00:09:09,510 --> 00:09:14,690
work similarly this is also one of the

00:09:13,200 --> 00:09:16,890
big appeals of jupiter notebooks

00:09:14,690 --> 00:09:20,040
user-friendly interface in front of an

00:09:16,890 --> 00:09:22,170
interactive shell alright alright so

00:09:20,040 --> 00:09:25,190
enough about gene pattern you have your

00:09:22,170 --> 00:09:27,890
context let's go back to Jupiter

00:09:25,190 --> 00:09:30,470
as I mentioned near the very start of my

00:09:27,890 --> 00:09:32,900
talk gene pattern has a lot of powerful

00:09:30,470 --> 00:09:35,180
features but at the time it didn't have

00:09:32,900 --> 00:09:37,190
the ability to present ones research in

00:09:35,180 --> 00:09:39,800
the same narrative manner that you would

00:09:37,190 --> 00:09:41,570
see in a jupiter notebook and that

00:09:39,800 --> 00:09:43,880
narrative structure is really intuitive

00:09:41,570 --> 00:09:46,370
it's a lot like how a researcher might

00:09:43,880 --> 00:09:48,410
conceive of their research and it's not

00:09:46,370 --> 00:09:50,270
like how an academic paper might be

00:09:48,410 --> 00:09:52,490
structured and in and in the academic

00:09:50,270 --> 00:09:56,000
world published papers really are the

00:09:52,490 --> 00:09:59,120
golden standard so with that in mind we

00:09:56,000 --> 00:10:00,740
begin developing our integration gene

00:09:59,120 --> 00:10:03,050
pattern notebook is a suite of

00:10:00,740 --> 00:10:05,030
extensions and other tools using

00:10:03,050 --> 00:10:07,910
Jupiter's extensions framework and

00:10:05,030 --> 00:10:09,260
associated api's you load it up just

00:10:07,910 --> 00:10:11,960
like you would any other jupiter

00:10:09,260 --> 00:10:15,110
extension and then provides a variety of

00:10:11,960 --> 00:10:17,020
features both programmatic and graphical

00:10:15,110 --> 00:10:20,040
features on the web front-end

00:10:17,020 --> 00:10:22,470
[Music]

00:10:20,040 --> 00:10:24,600
one of gene pattern notebooks underlying

00:10:22,470 --> 00:10:27,390
goals is to encapsulate a complete

00:10:24,600 --> 00:10:30,900
research narrative from its conception

00:10:27,390 --> 00:10:32,520
to its dissemination another goal is to

00:10:30,900 --> 00:10:33,810
make all of the powerful gene pattern

00:10:32,520 --> 00:10:36,270
features available on the Jupiter

00:10:33,810 --> 00:10:38,130
environment this way a researcher can

00:10:36,270 --> 00:10:39,810
leverage the best of what Jupiter and

00:10:38,130 --> 00:10:43,170
gene pattern have to offer

00:10:39,810 --> 00:10:46,230
interleaving text graphics interactive

00:10:43,170 --> 00:10:48,900
widgets visualizations and analytic

00:10:46,230 --> 00:10:50,610
aspects so before I get too far into the

00:10:48,900 --> 00:10:53,130
details however I want to first take a

00:10:50,610 --> 00:10:58,530
look at a real world example of these

00:10:53,130 --> 00:11:01,260
tools in action all right so what you

00:10:58,530 --> 00:11:04,490
see here is a screenshot of a fairly

00:11:01,260 --> 00:11:08,760
typical Jupiter notebook I had hoped to

00:11:04,490 --> 00:11:11,850
demo these live but the conference Wi-Fi

00:11:08,760 --> 00:11:13,560
gods have not been benevolent so you'll

00:11:11,850 --> 00:11:17,760
have to settle for a screenshot I

00:11:13,560 --> 00:11:20,790
apologize anyway what this notebook is

00:11:17,760 --> 00:11:23,880
doing is it's loading gene expression

00:11:20,790 --> 00:11:26,520
data from various tumor samples and then

00:11:23,880 --> 00:11:28,950
performing support vector machine SVM

00:11:26,520 --> 00:11:32,190
analysis to divide those samples in the

00:11:28,950 --> 00:11:35,520
different classes these classes should

00:11:32,190 --> 00:11:37,260
align the different tumor types this is

00:11:35,520 --> 00:11:39,780
first performed on a set of training

00:11:37,260 --> 00:11:41,670
data where SVM attempts to find an

00:11:39,780 --> 00:11:46,050
optimal hyperplane for dividing the

00:11:41,670 --> 00:11:48,000
samples it's then given a set of samples

00:11:46,050 --> 00:11:50,040
of unknown tumor type and the hope is

00:11:48,000 --> 00:11:52,290
that it will be able to predict the

00:11:50,040 --> 00:11:54,050
tumor type of these samples based on the

00:11:52,290 --> 00:11:56,400
hyperplane chosen with the training data

00:11:54,050 --> 00:11:58,770
okay so if you didn't follow that that's

00:11:56,400 --> 00:12:00,870
fine I'm not gonna quiz you later but I

00:11:58,770 --> 00:12:02,130
do want to note that SVM is pretty

00:12:00,870 --> 00:12:05,580
common and machine learning these days

00:12:02,130 --> 00:12:06,960
and this particular note notebook uses

00:12:05,580 --> 00:12:10,800
the implementation that send the

00:12:06,960 --> 00:12:13,680
scikit-learn package anyway this example

00:12:10,800 --> 00:12:15,840
works but it's about 70 lines of code

00:12:13,680 --> 00:12:17,430
and if we're going to reuse this

00:12:15,840 --> 00:12:18,320
notebook that code needs to be

00:12:17,430 --> 00:12:20,970
maintained

00:12:18,320 --> 00:12:22,830
furthermore if I'm saving the notebook

00:12:20,970 --> 00:12:24,750
and sharing it with my less coding

00:12:22,830 --> 00:12:26,970
inclined colleagues it would be a

00:12:24,750 --> 00:12:29,160
challenge to explain to them how to

00:12:26,970 --> 00:12:32,080
modify it to use their own data or to

00:12:29,160 --> 00:12:34,449
set different SVM

00:12:32,080 --> 00:12:38,060
[Music]

00:12:34,449 --> 00:12:41,480
so here is another notebook it's also

00:12:38,060 --> 00:12:43,870
doing doing SVM analysis only it's using

00:12:41,480 --> 00:12:46,189
one of gene patterns interactive widgets

00:12:43,870 --> 00:12:47,990
analytically these two notebooks are

00:12:46,189 --> 00:12:50,209
identical that is they're both

00:12:47,990 --> 00:12:53,059
performing SVM analysis on the same

00:12:50,209 --> 00:12:55,309
training data using the same test data

00:12:53,059 --> 00:12:59,149
and we'll reproducibly yield the same

00:12:55,309 --> 00:13:00,920
results in this notebook however there

00:12:59,149 --> 00:13:02,779
isn't seventy lines of code to maintain

00:13:00,920 --> 00:13:04,610
and if I shared it with my less

00:13:02,779 --> 00:13:06,980
programming inclined colleagues it's a

00:13:04,610 --> 00:13:08,420
lot easier to explain just click the

00:13:06,980 --> 00:13:11,420
upload button select the data you want

00:13:08,420 --> 00:13:13,220
to use and click run even as a

00:13:11,420 --> 00:13:15,259
programmer I like to use these widgets

00:13:13,220 --> 00:13:17,809
if nothing else they help to reduce

00:13:15,259 --> 00:13:20,600
stupid all but time-consuming mistakes

00:13:17,809 --> 00:13:22,550
that I might make in the code and all

00:13:20,600 --> 00:13:28,040
this makes for faster research it's the

00:13:22,550 --> 00:13:30,410
quicker picker-upper all right so you

00:13:28,040 --> 00:13:32,660
just saw an example one of the key

00:13:30,410 --> 00:13:35,389
features that the extension provides is

00:13:32,660 --> 00:13:38,149
gene pattern cells these cells are

00:13:35,389 --> 00:13:40,579
rendered as interactive widgets that

00:13:38,149 --> 00:13:43,519
enable the functionality of gene pattern

00:13:40,579 --> 00:13:45,259
inside the Jupiter environment and there

00:13:43,519 --> 00:13:50,779
are three types of cells that provide

00:13:45,259 --> 00:13:52,670
gene Patterson the first and probably

00:13:50,779 --> 00:13:55,699
least interesting of these types are

00:13:52,670 --> 00:13:57,709
authentication cells these cells allow

00:13:55,699 --> 00:13:59,990
our researcher to authenticate with a

00:13:57,709 --> 00:14:02,300
gene pattern server doing this allows

00:13:59,990 --> 00:14:04,579
data sent data sent to the server to be

00:14:02,300 --> 00:14:06,939
kept private or even selectively shared

00:14:04,579 --> 00:14:06,939
with other users

00:14:07,459 --> 00:14:13,139
next our analysis cells and each of

00:14:11,070 --> 00:14:15,360
these cells represent a particular

00:14:13,139 --> 00:14:18,120
analysis in the gene pattern environment

00:14:15,360 --> 00:14:19,320
and they each provide a simple form with

00:14:18,120 --> 00:14:21,660
the different input settings available

00:14:19,320 --> 00:14:24,060
for that analysis these allow a

00:14:21,660 --> 00:14:26,130
researcher to upload data and through it

00:14:24,060 --> 00:14:28,740
a set of the parameters and the widget

00:14:26,130 --> 00:14:30,779
you saw earlier in the SVM example was

00:14:28,740 --> 00:14:32,790
one of these and this particular one in

00:14:30,779 --> 00:14:34,800
this screen right now represents a

00:14:32,790 --> 00:14:36,899
module which filters results of

00:14:34,800 --> 00:14:39,649
differential expression analysis for

00:14:36,899 --> 00:14:39,649
significant values

00:14:42,290 --> 00:14:47,059
finally jobs cells are created to

00:14:45,199 --> 00:14:50,119
display the results of these submitted

00:14:47,059 --> 00:14:52,309
analyses these results can be in the

00:14:50,119 --> 00:14:55,069
form of outputted files like you see on

00:14:52,309 --> 00:14:57,470
the top screenshot or in the form of

00:14:55,069 --> 00:15:01,279
interactive visualizations as with the

00:14:57,470 --> 00:15:03,319
bottom screenshot for example what you

00:15:01,279 --> 00:15:05,259
see here is an interactive heat map of

00:15:03,319 --> 00:15:07,519
various tumor samples of the columns

00:15:05,259 --> 00:15:10,160
where the expression of different genes

00:15:07,519 --> 00:15:14,209
of the rows are either upregulated or

00:15:10,160 --> 00:15:16,339
downregulated in each sample and i also

00:15:14,209 --> 00:15:19,100
want to reiterate that all gene pattern

00:15:16,339 --> 00:15:21,949
cells have this graphic interface or

00:15:19,100 --> 00:15:23,850
even a non coder in a bio lab can launch

00:15:21,949 --> 00:15:27,879
an analysis and get the results

00:15:23,850 --> 00:15:27,879
[Music]

00:15:29,840 --> 00:15:34,940
the form-based interface you saw earlier

00:15:32,390 --> 00:15:38,540
isn't limited to functionality provided

00:15:34,940 --> 00:15:40,700
by jean pattern in fact the extension

00:15:38,540 --> 00:15:43,130
allows you to take any arbitrary Python

00:15:40,700 --> 00:15:46,279
function Anna render it is an input form

00:15:43,130 --> 00:15:48,350
in a Jupiter cell this means that if

00:15:46,279 --> 00:15:50,930
you're a programmer you can write your

00:15:48,350 --> 00:15:52,940
own code then use gene pattern notebook

00:15:50,930 --> 00:15:55,040
to render a form based interface to your

00:15:52,940 --> 00:15:57,710
function calls in a manner that even a

00:15:55,040 --> 00:15:59,300
non programmer can understand and I want

00:15:57,710 --> 00:16:01,730
to note that it is fairly smart about

00:15:59,300 --> 00:16:03,800
how it does all this you will infer

00:16:01,730 --> 00:16:06,350
expected parameter types from default

00:16:03,800 --> 00:16:08,690
values it will display description based

00:16:06,350 --> 00:16:10,580
off the functions dot string and it will

00:16:08,690 --> 00:16:11,500
use parameter annotations to provide

00:16:10,580 --> 00:16:15,710
descriptive text

00:16:11,500 --> 00:16:18,110
[Music]

00:16:15,710 --> 00:16:19,940
along a similar vein of making things

00:16:18,110 --> 00:16:23,080
more accessible we have we have

00:16:19,940 --> 00:16:24,830
developed an extension that provides

00:16:23,080 --> 00:16:27,860
what-you-see-is-what-you-get WYSIWYG

00:16:24,830 --> 00:16:30,380
style editing from markdown sales this

00:16:27,860 --> 00:16:32,870
means that if you don't know markdown or

00:16:30,380 --> 00:16:34,279
if you just want to see a more graphic

00:16:32,870 --> 00:16:36,200
representation of the cell you're

00:16:34,279 --> 00:16:38,690
currently editing you have that option

00:16:36,200 --> 00:16:45,730
available it's presented in a familiar

00:16:38,690 --> 00:16:48,589
word processing style interface finally

00:16:45,730 --> 00:16:51,440
the gene pattern notebook provides an

00:16:48,589 --> 00:16:53,930
easy interface for adding new gene

00:16:51,440 --> 00:16:57,050
pattern analyses or other content to

00:16:53,930 --> 00:16:59,480
your notebook document this interface

00:16:57,050 --> 00:17:02,060
allows you to browse or search through

00:16:59,480 --> 00:17:04,069
the available analyses and adds the

00:17:02,060 --> 00:17:06,589
appropriate cell with the click of a

00:17:04,069 --> 00:17:09,439
button we call this interface the

00:17:06,589 --> 00:17:12,050
notebook tool manager it has its own

00:17:09,439 --> 00:17:16,610
simple API and in fact anyone can use it

00:17:12,050 --> 00:17:19,880
hook in their own Jupiter tools to be

00:17:16,610 --> 00:17:20,990
graphically bootstrapped right now we're

00:17:19,880 --> 00:17:23,089
working with a number of other groups

00:17:20,990 --> 00:17:24,890
integrating their Jupiter offerings into

00:17:23,089 --> 00:17:26,170
the manager and I'll come back around to

00:17:24,890 --> 00:17:29,999
that in a few minutes

00:17:26,170 --> 00:17:29,999
[Music]

00:17:30,260 --> 00:17:34,310
all right so based on the show of hands

00:17:32,060 --> 00:17:36,050
earlier most of our programmers you may

00:17:34,310 --> 00:17:39,440
be wondering how all this functionality

00:17:36,050 --> 00:17:41,030
works behind the scenes so far I have

00:17:39,440 --> 00:17:43,220
mostly talked about gene pattern

00:17:41,030 --> 00:17:44,840
notebooks graphic offerings so here's

00:17:43,220 --> 00:17:46,640
where I'm going to pivot and talk about

00:17:44,840 --> 00:17:47,620
the programmatic functionality that it

00:17:46,640 --> 00:17:51,400
also provides

00:17:47,620 --> 00:17:54,670
[Music]

00:17:51,400 --> 00:17:56,920
here goes a jean pattern cell is

00:17:54,670 --> 00:17:59,020
essentially just a code cell that

00:17:56,920 --> 00:18:00,730
renders as its output one of those

00:17:59,020 --> 00:18:03,730
interactive widgets you saw screenshots

00:18:00,730 --> 00:18:06,160
of earlier this uses the I pi widgets

00:18:03,730 --> 00:18:07,600
framework and the trail it's packaged to

00:18:06,160 --> 00:18:09,970
keep the state of the widgets

00:18:07,600 --> 00:18:12,010
synchronized between the JavaScript in

00:18:09,970 --> 00:18:15,670
the client and the Python code in the

00:18:12,010 --> 00:18:17,890
kernel this also means that any analysis

00:18:15,670 --> 00:18:20,620
or job that you launched using those

00:18:17,890 --> 00:18:22,540
widgets is automatically accessible on

00:18:20,620 --> 00:18:24,970
the Python kernel and can be referenced

00:18:22,540 --> 00:18:27,400
programmatically and the reverse is also

00:18:24,970 --> 00:18:29,530
true for example you can use Python

00:18:27,400 --> 00:18:31,600
variables as input to those widgets you

00:18:29,530 --> 00:18:33,940
saw earlier this lets you seamlessly

00:18:31,600 --> 00:18:36,310
integrate the functionality performed by

00:18:33,940 --> 00:18:37,140
widgets with functionality performed by

00:18:36,310 --> 00:18:42,219
custom code

00:18:37,140 --> 00:18:42,219
[Music]

00:18:44,620 --> 00:18:50,960
behind-the-scenes analyses and jobs use

00:18:48,170 --> 00:18:53,630
the gene pattern Python library as I

00:18:50,960 --> 00:18:56,420
mentioned earlier this library wraps to

00:18:53,630 --> 00:18:58,880
the gene pattern REST API and allows for

00:18:56,420 --> 00:19:02,870
programmatic access to any of the

00:18:58,880 --> 00:19:05,600
methods or results for example I can run

00:19:02,870 --> 00:19:08,300
an analysis in gene pattern retrieve the

00:19:05,600 --> 00:19:10,640
results and then use that data with

00:19:08,300 --> 00:19:15,040
popular Python libraries such as

00:19:10,640 --> 00:19:18,440
scikit-learn plotly matplotlib or pandas

00:19:15,040 --> 00:19:20,540
this also means that you are not limited

00:19:18,440 --> 00:19:23,450
by what's available through gene pattern

00:19:20,540 --> 00:19:24,680
using the provided analyses encoding

00:19:23,450 --> 00:19:27,230
your own programmatic and math

00:19:24,680 --> 00:19:34,220
programmatic analyses can be integrated

00:19:27,230 --> 00:19:36,590
rather seamlessly and in fact we provide

00:19:34,220 --> 00:19:38,800
data tools in our Python library from

00:19:36,590 --> 00:19:41,240
many common by ultramatic data types

00:19:38,800 --> 00:19:43,850
these will recognize the type of data

00:19:41,240 --> 00:19:46,550
being read and automatically import it

00:19:43,850 --> 00:19:49,870
including row and column headers into a

00:19:46,550 --> 00:19:52,580
panda's data frame this is available

00:19:49,870 --> 00:19:55,580
both for files output by gene pattern

00:19:52,580 --> 00:19:57,860
analyses and for any other file the user

00:19:55,580 --> 00:20:01,430
possesses so long as it is in a

00:19:57,860 --> 00:20:03,680
supported format once the data has been

00:20:01,430 --> 00:20:06,560
imported into a data frame it can be

00:20:03,680 --> 00:20:10,750
viewed filtered or used in conjunction

00:20:06,560 --> 00:20:10,750
with numerous other Python libraries

00:20:18,930 --> 00:20:24,360
all right so this sounds good where do I

00:20:21,690 --> 00:20:25,530
go to use this functionality if you

00:20:24,360 --> 00:20:28,050
don't want to install the extension

00:20:25,530 --> 00:20:30,390
yourself or if you just want to try it

00:20:28,050 --> 00:20:33,330
out and see how you like it we host the

00:20:30,390 --> 00:20:36,030
gene pattern notebook repository this is

00:20:33,330 --> 00:20:38,250
a free and public Jupiter hub instance

00:20:36,030 --> 00:20:41,790
that we host for a biologic and

00:20:38,250 --> 00:20:44,070
bioinformatic Research it comes with the

00:20:41,790 --> 00:20:46,320
gene pattern notebook extensions as well

00:20:44,070 --> 00:20:48,690
as many open source bioinformatics and

00:20:46,320 --> 00:20:51,510
machine learning packages it's available

00:20:48,690 --> 00:20:58,560
to the public at gene pattern - notebook

00:20:51,510 --> 00:21:01,080
org I also want to note that the gene

00:20:58,560 --> 00:21:03,000
pattern notebook repository is more than

00:21:01,080 --> 00:21:05,970
just a vanilla Jupiter hub deployment

00:21:03,000 --> 00:21:09,150
we've extended it to provide notebook

00:21:05,970 --> 00:21:12,120
sharing and publishing capabilities this

00:21:09,150 --> 00:21:14,400
means you can use it both for research

00:21:12,120 --> 00:21:17,370
and development and to share your own

00:21:14,400 --> 00:21:19,770
bioinformatics notebooks with others for

00:21:17,370 --> 00:21:21,840
example you might publicly share a

00:21:19,770 --> 00:21:25,470
notebook to a company to a company of

00:21:21,840 --> 00:21:26,910
paper you've published alternatively you

00:21:25,470 --> 00:21:29,490
can browse the list of available

00:21:26,910 --> 00:21:31,320
notebooks developed by others and run

00:21:29,490 --> 00:21:34,830
them yourself thereby reproducing their

00:21:31,320 --> 00:21:37,680
methods now I will admit the list of

00:21:34,830 --> 00:21:39,690
available notebooks up there the public

00:21:37,680 --> 00:21:41,100
ones is a bit sparse at the moment the

00:21:39,690 --> 00:21:43,140
paper for this and the corresponding

00:21:41,100 --> 00:21:45,530
press release just went out in the winds

00:21:43,140 --> 00:21:48,150
a day so this is still in its infancy

00:21:45,530 --> 00:21:49,740
but we're actively working with a number

00:21:48,150 --> 00:21:51,540
of collaborators and this going forward

00:21:49,740 --> 00:21:54,830
so you should see a lot more shared

00:21:51,540 --> 00:21:54,830
notebooks in near future

00:21:57,240 --> 00:22:01,740
so alternatively if you would prefer to

00:21:59,370 --> 00:22:03,690
install the extensions yourself we've

00:22:01,740 --> 00:22:06,779
made them available through the PIP and

00:22:03,690 --> 00:22:07,740
Conda package managers if you install

00:22:06,779 --> 00:22:09,419
the gene pattern

00:22:07,740 --> 00:22:14,250
- notebook package you'll get the entire

00:22:09,419 --> 00:22:16,110
suite we also have a docker image with

00:22:14,250 --> 00:22:18,929
the whole stack set up and available and

00:22:16,110 --> 00:22:21,510
that's up on docker hub this image has

00:22:18,929 --> 00:22:24,539
been built for use either as a single

00:22:21,510 --> 00:22:26,820
user Jupiter instance or in a multi-user

00:22:24,539 --> 00:22:30,779
environment in conjunction with Jupiter

00:22:26,820 --> 00:22:32,460
hub and duck or spotter finally I want

00:22:30,779 --> 00:22:35,010
to reiterate that all of this is open

00:22:32,460 --> 00:22:37,350
source we have a github repository and

00:22:35,010 --> 00:22:39,059
anyone as welcome to check that out we

00:22:37,350 --> 00:22:41,210
love poor requests I mean I mean who

00:22:39,059 --> 00:22:41,210
does

00:22:46,050 --> 00:22:52,320
so to close I want to take a look at the

00:22:49,560 --> 00:22:53,930
larger Jupiter ecosystem and where

00:22:52,320 --> 00:22:56,220
things are going

00:22:53,930 --> 00:22:58,560
Jupiter has some great tools and a lot

00:22:56,220 --> 00:23:00,420
of pretty cool integrations in

00:22:58,560 --> 00:23:02,700
particular we know that real time

00:23:00,420 --> 00:23:04,730
collaboration is in the works and are

00:23:02,700 --> 00:23:06,900
keeping an eye on that as it progresses

00:23:04,730 --> 00:23:09,030
we've also been experimenting with

00:23:06,900 --> 00:23:13,140
Jupiter lab which is the next big

00:23:09,030 --> 00:23:15,390
Jupiter interface finally we've been

00:23:13,140 --> 00:23:17,280
investigating Jupiter's new bundler API

00:23:15,390 --> 00:23:19,590
and how that might allow us to

00:23:17,280 --> 00:23:22,110
encapsulate a notebook and its

00:23:19,590 --> 00:23:25,370
dependencies together so they can be

00:23:22,110 --> 00:23:28,080
made portable and transferred as a unit

00:23:25,370 --> 00:23:29,940
we're committed to making sure that gene

00:23:28,080 --> 00:23:32,190
pattern notebook plays well with others

00:23:29,940 --> 00:23:37,470
and contributes to the greater Jupiter

00:23:32,190 --> 00:23:38,880
community so before I move on to Q&A let

00:23:37,470 --> 00:23:40,410
me give a few acknowledgments to people

00:23:38,880 --> 00:23:42,660
who have contributed the gene pattern

00:23:40,410 --> 00:23:44,340
and gene pattern notebook you can see

00:23:42,660 --> 00:23:46,650
the gene pattern team on the left there

00:23:44,340 --> 00:23:48,750
jill Mesirow is our pi

00:23:46,650 --> 00:23:50,100
on the right you can see we've gotten

00:23:48,750 --> 00:23:53,880
funding from those wonderful

00:23:50,100 --> 00:23:56,550
institutions I would also like to put up

00:23:53,880 --> 00:23:57,810
a few resources from the net which you

00:23:56,550 --> 00:24:00,360
can visit if you want more information

00:23:57,810 --> 00:24:03,620
these include the notebook repository

00:24:00,360 --> 00:24:07,920
our website our github organization

00:24:03,620 --> 00:24:09,960
docker hub etc finally I want to thank

00:24:07,920 --> 00:24:11,790
everyone for attending the talk so if

00:24:09,960 --> 00:24:15,970
all that being said I am happy to take

00:24:11,790 --> 00:24:21,420
questions do we have any questions

00:24:15,970 --> 00:24:21,420
[Applause]

00:24:24,330 --> 00:24:30,720
so it's essentially implemented it as a

00:24:27,780 --> 00:24:32,580
Jupiter extension that called resources

00:24:30,720 --> 00:24:34,050
to gene patter which is a fentanyl

00:24:32,580 --> 00:24:36,240
application which is a standalone

00:24:34,050 --> 00:24:38,460
application so you could run it yourself

00:24:36,240 --> 00:24:40,200
and whichever one of us say our docker

00:24:38,460 --> 00:24:41,460
container for example and you get the

00:24:40,200 --> 00:24:43,320
whole stack that's kind of set up and

00:24:41,460 --> 00:24:44,580
ready to go or you can use the public

00:24:43,320 --> 00:24:47,030
server and don't have to install

00:24:44,580 --> 00:24:47,030
anything

00:24:47,930 --> 00:24:52,190
yeah we're just kind of beginning to

00:24:50,280 --> 00:24:56,310
look into that and see how we might

00:24:52,190 --> 00:24:57,870
integrate or are you know like use case

00:24:56,310 --> 00:24:59,250
in her face into their interface they've

00:24:57,870 --> 00:25:01,050
got a much more structure and kind of

00:24:59,250 --> 00:25:03,780
standard way of doing things there's a

00:25:01,050 --> 00:25:05,340
bit of a learning curve there yeah it's

00:25:03,780 --> 00:25:07,590
not it's not even a DES doesn't even a

00:25:05,340 --> 00:25:09,540
fad doesn't even have a final release

00:25:07,590 --> 00:25:11,700
yet so but we've been playing with it

00:25:09,540 --> 00:25:13,860
keeping kind of keeping abreast of

00:25:11,700 --> 00:25:15,980
what's what's available where things are

00:25:13,860 --> 00:25:15,980
going

00:25:17,960 --> 00:25:21,140
[Music]

00:25:27,560 --> 00:25:32,360
yes so gene pattern has got its own

00:25:30,320 --> 00:25:33,950
built-in pipeline engine where you can

00:25:32,360 --> 00:25:36,620
say like take the output of this step

00:25:33,950 --> 00:25:42,500
and send it to this other step and so I

00:25:36,620 --> 00:25:44,930
know we've you we also like sorry uh and

00:25:42,500 --> 00:25:47,090
in the notebook environment right you

00:25:44,930 --> 00:25:49,640
can launch one of these analyses in a

00:25:47,090 --> 00:25:51,530
single cell and then kind of like log

00:25:49,640 --> 00:25:53,120
out and come back later and then check

00:25:51,530 --> 00:25:54,910
to see when it's done gene pattern also

00:25:53,120 --> 00:25:57,590
has a feature where when a particular

00:25:54,910 --> 00:25:59,000
analysis is finished will email you so

00:25:57,590 --> 00:26:02,570
you can get the email and then go back

00:25:59,000 --> 00:26:04,100
and look at your results you know maybe

00:26:02,570 --> 00:26:06,260
visualize it maybe send it to the next

00:26:04,100 --> 00:26:09,490
step depending on depending on where you

00:26:06,260 --> 00:26:09,490
are your data exploration

00:26:11,070 --> 00:26:16,340
yeah by all means it has has animation

00:26:14,070 --> 00:26:16,340
in there

00:26:16,550 --> 00:26:20,960
[Music]

00:26:23,340 --> 00:26:30,500
[Music]

00:26:40,710 --> 00:26:46,590
so the answer to that question is that

00:26:43,049 --> 00:26:49,889
really depends on who you are in this

00:26:46,590 --> 00:26:52,619
setup gene pattern largely you use this

00:26:49,889 --> 00:26:54,539
data exchange it writes rights that

00:26:52,619 --> 00:26:56,159
writes the output of these different

00:26:54,539 --> 00:26:58,200
modules to disk and we've got several

00:26:56,159 --> 00:27:02,399
standard formats we do that and then we

00:26:58,200 --> 00:27:04,019
the next module will you know have its

00:27:02,399 --> 00:27:05,970
recognizable formats and we'll read that

00:27:04,019 --> 00:27:07,499
in and it will suggest ones modules

00:27:05,970 --> 00:27:09,240
available to you that read that format

00:27:07,499 --> 00:27:11,070
that might be appropriate so if you're

00:27:09,240 --> 00:27:12,990
just a user that's mostly handled for

00:27:11,070 --> 00:27:16,019
you behind the scenes if you are

00:27:12,990 --> 00:27:18,090
developing you know your own you know

00:27:16,019 --> 00:27:20,129
sort of plugin here in the in the gene

00:27:18,090 --> 00:27:22,169
pattern or you know you're wrapping

00:27:20,129 --> 00:27:26,190
something yourself then you need to know

00:27:22,169 --> 00:27:27,990
a bit about looks or data and outputs if

00:27:26,190 --> 00:27:29,460
you're just you know just a user you're

00:27:27,990 --> 00:27:31,860
not editing you know not really the

00:27:29,460 --> 00:27:34,249
developer there then it mostly handles

00:27:31,860 --> 00:27:34,249
it for you

00:27:38,490 --> 00:27:44,760
so each gene pattern widget essentially

00:27:40,860 --> 00:27:46,529
has its own version number and you can

00:27:44,760 --> 00:27:47,669
run the most crib I D fall that will

00:27:46,529 --> 00:27:50,070
give you a most current version but you

00:27:47,669 --> 00:27:51,750
can also select from bacon basically a

00:27:50,070 --> 00:27:52,980
drop-down shows you the list of previous

00:27:51,750 --> 00:27:55,230
versions and go back to the older

00:27:52,980 --> 00:27:57,500
versions as well and we continue to host

00:27:55,230 --> 00:27:57,500
those

00:27:58,380 --> 00:28:01,070
the latest

00:28:04,210 --> 00:28:07,839
[Music]

00:28:08,340 --> 00:28:10,970
yeah

00:28:12,380 --> 00:28:16,309
yeah so the format's that say that's

00:28:13,820 --> 00:28:18,350
their IIP ymb files in terms of NB

00:28:16,309 --> 00:28:20,990
viewer unfortunately it doesn't like

00:28:18,350 --> 00:28:22,760
rendering the new idiots very well and

00:28:20,990 --> 00:28:25,520
that's just I think a basic limitation

00:28:22,760 --> 00:28:28,539
of the IP widgets package that we use as

00:28:25,520 --> 00:28:28,539
the basis for our widgets

00:28:29,080 --> 00:28:35,499
oh well if that's the case then it might

00:28:32,139 --> 00:28:38,259
be able to I I looked at it I met

00:28:35,499 --> 00:28:39,970
probably two or three years ago now the

00:28:38,259 --> 00:28:43,259
time had sent issues with that but it

00:28:39,970 --> 00:28:43,259
might be able just to render him

00:28:43,630 --> 00:28:46,819
[Music]

00:28:49,050 --> 00:28:53,840
okay well that that is awesome news off

00:28:51,030 --> 00:28:53,840
that take a look at that again

00:28:57,929 --> 00:29:00,710
all right

00:29:03,100 --> 00:29:08,089
[Music]

00:29:09,890 --> 00:29:14,560
I apologize I didn't really hear the

00:29:12,230 --> 00:29:14,560
question

00:29:19,960 --> 00:29:22,590
yeah

00:29:27,510 --> 00:29:30,640
[Music]

00:29:33,420 --> 00:29:39,970
[Music]

00:29:36,460 --> 00:29:44,529
so I guess the market here is really

00:29:39,970 --> 00:29:50,429
it's a reproducible research platform

00:29:44,529 --> 00:29:50,429
that the whole lab can use and we

00:29:50,940 --> 00:29:55,659
there's really basically used to focus

00:29:53,409 --> 00:29:57,850
on reproducibility and usability there a

00:29:55,659 --> 00:30:00,759
lot of a lot of the other tools that

00:29:57,850 --> 00:30:02,350
come out do very honestly very similar

00:30:00,759 --> 00:30:04,119
sort of like a pipelining functionality

00:30:02,350 --> 00:30:09,179
but they require much more technical

00:30:04,119 --> 00:30:11,619
expertise to use and sometimes they are

00:30:09,179 --> 00:30:13,960
very good for you know the latest and

00:30:11,619 --> 00:30:15,249
greatest but they don't go back and have

00:30:13,960 --> 00:30:18,840
the ability to support something that

00:30:15,249 --> 00:30:18,840
came out several years ago

00:30:22,550 --> 00:30:28,470
[Music]

00:30:24,840 --> 00:30:31,190
yeah I was an employee therefore before

00:30:28,470 --> 00:30:33,690
I went to UCSD for many many years and

00:30:31,190 --> 00:30:34,950
it's just it's kind of very sort of like

00:30:33,690 --> 00:30:36,690
siloed structure where they don't want

00:30:34,950 --> 00:30:37,919
to like tell people what to do you know

00:30:36,690 --> 00:30:40,080
it's kind of like let them go off and do

00:30:37,919 --> 00:30:42,779
science and that's great in terms of

00:30:40,080 --> 00:30:44,249
like exploring new frontiers but you

00:30:42,779 --> 00:30:47,779
know they you do end up doing lots of

00:30:44,249 --> 00:30:47,779
things in parallel over again

00:30:53,940 --> 00:31:02,940
any other questions all right well thank

00:30:57,900 --> 00:31:04,590
you for attending the talk I guess I

00:31:02,940 --> 00:31:08,940
will conclude

00:31:04,590 --> 00:31:08,940

YouTube URL: https://www.youtube.com/watch?v=yNk7JoDaL4c


