Title: Reproducible Dashboards and other great things to do with Jupyter - Mac Rogers (Domino Data Lab)
Publication date: 2017-11-08
Playlist: JupyterCon
Description: 
	Mac Rogers shares best practices for creating Jupyter dashboards and some lesser-known tricks for making Jupyter dashboards interactive and attractive.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:01,589 --> 00:00:07,109
my name is Mike Rogers I mentioned I

00:00:04,080 --> 00:00:08,910
work with Domino data lab and forgive me

00:00:07,109 --> 00:00:11,190
I've got a bit of a cold so I will try

00:00:08,910 --> 00:00:12,299
to not call too much and if you can't

00:00:11,190 --> 00:00:15,809
hear me just let me know and I'll try to

00:00:12,299 --> 00:00:16,860
speak more into the mic so the thing

00:00:15,809 --> 00:00:18,720
we're gonna talk about today is

00:00:16,860 --> 00:00:21,690
reproducible dashboards in Jupiter and

00:00:18,720 --> 00:00:22,920
Domino and so there's a different few

00:00:21,690 --> 00:00:23,850
different ways we can take this and I

00:00:22,920 --> 00:00:27,390
want to make sure that this is useful

00:00:23,850 --> 00:00:29,520
for you guys it's useful for us and so

00:00:27,390 --> 00:00:31,110
from how does everyone in the audience

00:00:29,520 --> 00:00:33,329
what's the level of experience with

00:00:31,110 --> 00:00:34,859
Jupiter would you guys say you're sort

00:00:33,329 --> 00:00:36,269
of Jupiter curious and are interested in

00:00:34,859 --> 00:00:38,280
using it in the work that you guys do

00:00:36,269 --> 00:00:40,710
today or are you data scientists who use

00:00:38,280 --> 00:00:42,149
it heavily or so first group interested

00:00:40,710 --> 00:00:43,440
maybe it's useful come as you were to

00:00:42,149 --> 00:00:46,890
kinda learn more about what Jupiter is

00:00:43,440 --> 00:00:48,719
used for few people and then like heavy

00:00:46,890 --> 00:00:50,730
Jupiter users use it part of your data

00:00:48,719 --> 00:00:52,019
science day-to-day most of these tips

00:00:50,730 --> 00:00:56,039
and tricks will probably be things you

00:00:52,019 --> 00:00:58,170
already know good and then is there

00:00:56,039 --> 00:01:01,440
anyone who's used Jupiter like in a more

00:00:58,170 --> 00:01:02,760
abnormal setting like in terms of like

00:01:01,440 --> 00:01:04,379
making heavy extensions on our

00:01:02,760 --> 00:01:06,479
modifications and how Dieker works are

00:01:04,379 --> 00:01:08,600
used to some flavor of a version to some

00:01:06,479 --> 00:01:11,969
companies like build things on top of

00:01:08,600 --> 00:01:12,750
okay a little bit good that's good

00:01:11,969 --> 00:01:16,170
context for me

00:01:12,750 --> 00:01:19,229
so as we jump in brief introduction on

00:01:16,170 --> 00:01:21,090
myself I worked at a drink degree in

00:01:19,229 --> 00:01:22,740
chemical engineering and then went to

00:01:21,090 --> 00:01:25,860
work for a quantitative hedge fund doing

00:01:22,740 --> 00:01:27,180
equities research not really related and

00:01:25,860 --> 00:01:29,430
then our cat Domino helping data

00:01:27,180 --> 00:01:31,979
scientists do more better data science

00:01:29,430 --> 00:01:33,240
also not really related so a bit all

00:01:31,979 --> 00:01:35,070
over the place which has been exciting

00:01:33,240 --> 00:01:36,420
one of the things that's really neat

00:01:35,070 --> 00:01:38,700
about Jupiter is that it's very related

00:01:36,420 --> 00:01:41,369
to not being related to things so you

00:01:38,700 --> 00:01:43,170
can do lots of different things inside

00:01:41,369 --> 00:01:45,420
of a consistent kernel or inside of a

00:01:43,170 --> 00:01:47,520
consistent platform and really make

00:01:45,420 --> 00:01:53,579
great use of all the different tools

00:01:47,520 --> 00:01:55,380
whatever you're accustomed to so these

00:01:53,579 --> 00:01:56,820
we want to talk about are both like tips

00:01:55,380 --> 00:01:58,079
and tricks about how to be like a little

00:01:56,820 --> 00:02:00,329
more efficient with Jupiter so things

00:01:58,079 --> 00:02:04,229
you may not know of but also how to make

00:02:00,329 --> 00:02:06,030
the best use of how to make the best use

00:02:04,229 --> 00:02:07,920
of dashboards in your work or what is a

00:02:06,030 --> 00:02:09,720
reproducible dashboard so what does

00:02:07,920 --> 00:02:12,690
reproducibility mean in the context of a

00:02:09,720 --> 00:02:15,600
dashboard for the type of work that

00:02:12,690 --> 00:02:17,940
doing whether it's looking at just like

00:02:15,600 --> 00:02:24,060
executing scripts or analyzing data or

00:02:17,940 --> 00:02:26,850
sharing your work so see silg well with

00:02:24,060 --> 00:02:29,700
the ACM made this sort of like analysis

00:02:26,850 --> 00:02:32,400
of what is the data science lifecycle as

00:02:29,700 --> 00:02:34,290
a part of his PhD dissertation Tom Witt

00:02:32,400 --> 00:02:36,930
Domino like really like this framework

00:02:34,290 --> 00:02:39,140
of how the data science process works so

00:02:36,930 --> 00:02:42,090
if you ask a data scientist like you all

00:02:39,140 --> 00:02:43,770
they'll say that like the amount of work

00:02:42,090 --> 00:02:45,980
that I spent actually doing data science

00:02:43,770 --> 00:02:48,270
is like ten to fifteen percent of my day

00:02:45,980 --> 00:02:50,070
most of the rest of it is spent either

00:02:48,270 --> 00:02:51,810
acquiring or cleaning data designing

00:02:50,070 --> 00:02:53,820
experiments or working with business

00:02:51,810 --> 00:02:55,410
leaders and figuring out how to make the

00:02:53,820 --> 00:02:57,060
work that they're doing impact their

00:02:55,410 --> 00:03:00,240
business or just getting their code to

00:02:57,060 --> 00:03:03,570
run which isn't really the exciting sexy

00:03:00,240 --> 00:03:06,570
parts of data science and so dashboards

00:03:03,570 --> 00:03:08,460
in this context are useful when you're

00:03:06,570 --> 00:03:11,340
analyzing the actual data that you're

00:03:08,460 --> 00:03:13,470
using so like if you think what is the

00:03:11,340 --> 00:03:15,660
goal of a dashboard ultimately the thing

00:03:13,470 --> 00:03:18,300
that you want to do is synthesize some

00:03:15,660 --> 00:03:20,070
large amount of information or like just

00:03:18,300 --> 00:03:22,020
some targeted amount of information in a

00:03:20,070 --> 00:03:25,110
way that conveys a point as concisely

00:03:22,020 --> 00:03:27,780
and succinctly as possible and so this

00:03:25,110 --> 00:03:29,430
can either be like bringing together

00:03:27,780 --> 00:03:31,530
like very disparate data sources and

00:03:29,430 --> 00:03:33,570
showing some common theme or trend or

00:03:31,530 --> 00:03:35,610
highlighting some unique occurrence

00:03:33,570 --> 00:03:37,010
inside of large data sets this is

00:03:35,610 --> 00:03:38,940
relevant or just like a regular ongoing

00:03:37,010 --> 00:03:41,430
update on something that you're familiar

00:03:38,940 --> 00:03:42,750
with so I won't take credit for this

00:03:41,430 --> 00:03:44,700
lifecycle but if you think about how a

00:03:42,750 --> 00:03:46,769
dashboard is relevant here it's gonna

00:03:44,700 --> 00:03:48,180
fall into the realm of how you're

00:03:46,769 --> 00:03:50,970
disseminating the work that you've done

00:03:48,180 --> 00:03:52,709
so how you're when you think about what

00:03:50,970 --> 00:03:55,050
is relevant inside of a project how you

00:03:52,709 --> 00:03:57,300
organize a dashboard is really relevant

00:03:55,050 --> 00:03:58,860
for what you think about what is really

00:03:57,300 --> 00:04:00,390
important and how the people who are

00:03:58,860 --> 00:04:03,930
consuming your results are going to

00:04:00,390 --> 00:04:06,209
evaluate your thought process it's also

00:04:03,930 --> 00:04:08,340
really useful for just like inspecting

00:04:06,209 --> 00:04:10,670
and exploring that's where Jupiter comes

00:04:08,340 --> 00:04:10,670
in hand

00:04:13,640 --> 00:04:18,739
so I have a bit of a diverse background

00:04:15,200 --> 00:04:20,930
when it comes to applications of data

00:04:18,739 --> 00:04:22,340
science in different industries so from

00:04:20,930 --> 00:04:23,600
my time in finance one of the things

00:04:22,340 --> 00:04:25,130
that were most concerned about when it

00:04:23,600 --> 00:04:28,070
comes so like reproducing the work that

00:04:25,130 --> 00:04:29,810
we've done is back testing so if we have

00:04:28,070 --> 00:04:32,330
a trading strategy how can we produce

00:04:29,810 --> 00:04:33,770
there was reproduce the results that it

00:04:32,330 --> 00:04:35,419
generated through this chunk of time in

00:04:33,770 --> 00:04:37,669
the future we don't know what the

00:04:35,419 --> 00:04:39,530
landscape is going to look like and how

00:04:37,669 --> 00:04:41,360
do we do it backwards through time to

00:04:39,530 --> 00:04:44,150
ensure that what we're seeing now is

00:04:41,360 --> 00:04:48,470
what is what is representative of the

00:04:44,150 --> 00:04:49,490
circumstances at that time this is a

00:04:48,470 --> 00:04:51,349
little different from how

00:04:49,490 --> 00:04:53,720
reproducibility is thought about and

00:04:51,349 --> 00:04:54,979
insurance for example where one of the

00:04:53,720 --> 00:04:58,039
things that customers care a lot about

00:04:54,979 --> 00:05:00,289
is making sure that they can contain

00:04:58,039 --> 00:05:02,180
convey to either an auditor or to a

00:05:00,289 --> 00:05:04,460
regulator the reason we made this

00:05:02,180 --> 00:05:06,050
decision is because we had these

00:05:04,460 --> 00:05:08,000
principles or these thought this thought

00:05:06,050 --> 00:05:10,009
about how this works we put it into this

00:05:08,000 --> 00:05:11,900
model and it produced that result then

00:05:10,009 --> 00:05:13,310
and it produces that result now because

00:05:11,900 --> 00:05:19,370
there's no bias and what we're the

00:05:13,310 --> 00:05:22,250
decisions were making and then in the

00:05:19,370 --> 00:05:24,020
context of scientific research this is a

00:05:22,250 --> 00:05:25,789
little different because the Reeb the

00:05:24,020 --> 00:05:28,430
word reproducibility does actually have

00:05:25,789 --> 00:05:32,650
a distinct meaning and it is distinct

00:05:28,430 --> 00:05:37,729
from from repeatable as well as

00:05:32,650 --> 00:05:39,050
reproducible and replicable and this is

00:05:37,729 --> 00:05:40,370
like can be a little confusing because

00:05:39,050 --> 00:05:41,720
when I was in high school learning about

00:05:40,370 --> 00:05:43,960
like science and how you design

00:05:41,720 --> 00:05:47,570
experiments the distinction between

00:05:43,960 --> 00:05:49,280
repeat replicable and reproducible is

00:05:47,570 --> 00:05:52,220
relatively easy to understand the actual

00:05:49,280 --> 00:05:53,389
terminology can be a little confusing in

00:05:52,220 --> 00:05:55,039
the last few years there have been

00:05:53,389 --> 00:05:58,460
papers that have sort of like swapped

00:05:55,039 --> 00:05:59,300
the two so if your start going around

00:05:58,460 --> 00:06:01,190
for what's the difference between

00:05:59,300 --> 00:06:03,110
reproducible versus replicable there's a

00:06:01,190 --> 00:06:06,349
great blog by UPenn professor that sort

00:06:03,110 --> 00:06:07,909
of outlines how people who bizarrely in

00:06:06,349 --> 00:06:10,009
the last like 5 to 6 years started

00:06:07,909 --> 00:06:11,659
swimming swatch every gotta swatch

00:06:10,009 --> 00:06:13,940
switching up the meaning to mean the

00:06:11,659 --> 00:06:15,729
other one for the other

00:06:13,940 --> 00:06:17,599
where the key distinction is

00:06:15,729 --> 00:06:19,430
repeatability is something that you can

00:06:17,599 --> 00:06:20,950
repeat so if you like run a function it

00:06:19,430 --> 00:06:23,080
runs the same way this time as it does

00:06:20,950 --> 00:06:25,300
that time or if you measure the

00:06:23,080 --> 00:06:27,400
temperature of a of an element of a

00:06:25,300 --> 00:06:30,760
solution it is the same every time you

00:06:27,400 --> 00:06:32,470
measure it replicability traditionally

00:06:30,760 --> 00:06:34,060
is along the lines of if you see the

00:06:32,470 --> 00:06:35,770
results that someone has generated all

00:06:34,060 --> 00:06:37,570
of the same data using the same

00:06:35,770 --> 00:06:39,490
methodologies can you come to the same

00:06:37,570 --> 00:06:40,840
conclusion and that's along the lines of

00:06:39,490 --> 00:06:42,670
does this individual the person

00:06:40,840 --> 00:06:45,040
producing the results in the first place

00:06:42,670 --> 00:06:47,560
have any inherent biases so if you can

00:06:45,040 --> 00:06:49,320
do the exact same thing they do can you

00:06:47,560 --> 00:06:51,460
come to the same conclusion

00:06:49,320 --> 00:06:53,410
reproducibility is a little different in

00:06:51,460 --> 00:06:55,210
that it's not just using the same

00:06:53,410 --> 00:06:57,070
information and tools that they use to

00:06:55,210 --> 00:06:59,140
draw the same conclusion but to

00:06:57,070 --> 00:07:01,060
regenerate that information and come up

00:06:59,140 --> 00:07:03,940
with new methodologies of showing the

00:07:01,060 --> 00:07:06,940
same thing as true in both scenarios and

00:07:03,940 --> 00:07:08,140
this is where this is something that at

00:07:06,940 --> 00:07:09,430
least a domino we think this is much

00:07:08,140 --> 00:07:12,280
more powerful because now you're not

00:07:09,430 --> 00:07:15,220
just proving that the conclusion that

00:07:12,280 --> 00:07:16,750
one person came to is reasonable or that

00:07:15,220 --> 00:07:18,910
it's true but that the fundamental

00:07:16,750 --> 00:07:21,610
principles behind it are true and so now

00:07:18,910 --> 00:07:23,470
you're coming up with you get into the

00:07:21,610 --> 00:07:26,050
realm of like what is the the scientific

00:07:23,470 --> 00:07:28,270
method for coming up with truth and if

00:07:26,050 --> 00:07:29,920
you can do that come to the same

00:07:28,270 --> 00:07:31,390
conclusion from disparate ways you can

00:07:29,920 --> 00:07:33,160
prove like hey this is actually real

00:07:31,390 --> 00:07:34,390
even if you use a different experiment

00:07:33,160 --> 00:07:36,310
with a different population with a

00:07:34,390 --> 00:07:37,330
different methodology the conclusion is

00:07:36,310 --> 00:07:39,340
the same when you're telling the same

00:07:37,330 --> 00:07:42,580
story not a more convincing argument

00:07:39,340 --> 00:07:46,090
that this is the way things work so

00:07:42,580 --> 00:07:51,240
that's a somewhat wordy equation of the

00:07:46,090 --> 00:07:53,470
difference but the point here is that

00:07:51,240 --> 00:07:55,630
reproducibility is more than just making

00:07:53,470 --> 00:07:57,640
sure that when you run something it runs

00:07:55,630 --> 00:08:00,070
again the same way it did before it's

00:07:57,640 --> 00:08:03,420
about leading a leading that's all

00:08:00,070 --> 00:08:03,420
behind white is the way it is

00:08:08,389 --> 00:08:14,940
and so how do you do this in data

00:08:10,860 --> 00:08:16,800
science data science is a little tricky

00:08:14,940 --> 00:08:19,139
because you might be able to run the

00:08:16,800 --> 00:08:22,290
same notebook that you ran this morning

00:08:19,139 --> 00:08:24,060
in the afternoon and it should hopefully

00:08:22,290 --> 00:08:24,960
produce the same results but what if you

00:08:24,060 --> 00:08:26,970
try to run it on someone else's

00:08:24,960 --> 00:08:28,050
computers it's still gonna produce the

00:08:26,970 --> 00:08:30,120
same results is there gonna be a

00:08:28,050 --> 00:08:31,470
distinction between the version of one

00:08:30,120 --> 00:08:33,659
package that you're using versus the

00:08:31,470 --> 00:08:35,310
other computer and is that actually

00:08:33,659 --> 00:08:36,839
going to materially change the

00:08:35,310 --> 00:08:39,510
conclusions that you draw from the work

00:08:36,839 --> 00:08:40,650
that you've done or does that mean that

00:08:39,510 --> 00:08:43,169
your entire conclusion isn't always

00:08:40,650 --> 00:08:49,800
because of random outlier significantly

00:08:43,169 --> 00:08:51,270
change the result that you drew the way

00:08:49,800 --> 00:08:53,580
that the way that we've seen

00:08:51,270 --> 00:08:55,440
reproducibility versus replicability

00:08:53,580 --> 00:08:57,690
work incredibly well and teams or

00:08:55,440 --> 00:08:59,160
organizations is the idea that you have

00:08:57,690 --> 00:09:01,589
to be able to do more than just

00:08:59,160 --> 00:09:04,290
replicate the versions of the code that

00:09:01,589 --> 00:09:07,170
you're running or the experiments that

00:09:04,290 --> 00:09:08,640
you're running or or just like the

00:09:07,170 --> 00:09:10,290
hardware that you're using it's more

00:09:08,640 --> 00:09:12,180
than any one of those it's the

00:09:10,290 --> 00:09:14,250
consolidated source of record or source

00:09:12,180 --> 00:09:17,220
of truthful the reasons why you're doing

00:09:14,250 --> 00:09:22,140
your work so it's the combined github

00:09:17,220 --> 00:09:23,970
plus plus JIRA Plus confluence all of

00:09:22,140 --> 00:09:25,970
those types of environments put together

00:09:23,970 --> 00:09:28,440
give you the ability to not just

00:09:25,970 --> 00:09:30,600
replicate the the outcome of a

00:09:28,440 --> 00:09:34,190
calculation but have a team generate

00:09:30,600 --> 00:09:38,760
consistent results and do it efficiently

00:09:34,190 --> 00:09:40,290
so that's sort of what we think about

00:09:38,760 --> 00:09:41,730
when we consider reproducibility it's

00:09:40,290 --> 00:09:44,130
more than just generating something

00:09:41,730 --> 00:09:49,230
again but having a conversation that can

00:09:44,130 --> 00:09:51,780
happen through time and so in the

00:09:49,230 --> 00:09:55,080
context of dashboards most of this

00:09:51,780 --> 00:09:57,209
presentation consists of running or

00:09:55,080 --> 00:09:59,310
showing dashboards inside of Domino or

00:09:57,209 --> 00:10:01,860
Jupiter dashboards in the context of

00:09:59,310 --> 00:10:04,080
Domino because at least as it is now we

00:10:01,860 --> 00:10:06,360
don't really feel like it's possible to

00:10:04,080 --> 00:10:08,370
have a truly reproducible reproducible

00:10:06,360 --> 00:10:11,220
scientific process without something

00:10:08,370 --> 00:10:14,570
like Domino or one of the other ways of

00:10:11,220 --> 00:10:16,770
doing this powering it behind the scenes

00:10:14,570 --> 00:10:17,910
so basically I'm gonna take a brief

00:10:16,770 --> 00:10:19,830
aside and sort of give some background

00:10:17,910 --> 00:10:20,630
context into what Domino is and how it

00:10:19,830 --> 00:10:23,810
works

00:10:20,630 --> 00:10:25,070
so we can have some basically a frame of

00:10:23,810 --> 00:10:26,590
reference when we talk talking about the

00:10:25,070 --> 00:10:31,100
actual notebook so we're gonna work on

00:10:26,590 --> 00:10:32,420
so Domino is it's a combination of lots

00:10:31,100 --> 00:10:34,310
of different features which ultimately

00:10:32,420 --> 00:10:36,200
let you do the things that are used to

00:10:34,310 --> 00:10:38,680
as a data scientist but more efficiently

00:10:36,200 --> 00:10:40,640
jump back into the slides for one second

00:10:38,680 --> 00:10:44,090
to give you like the high-level overview

00:10:40,640 --> 00:10:45,830
of you can use the code the tools the

00:10:44,090 --> 00:10:47,150
data that you know and love you don't

00:10:45,830 --> 00:10:49,700
have to relearn a new language you don't

00:10:47,150 --> 00:10:51,050
have to learn a new IDE I don't think

00:10:49,700 --> 00:10:55,100
we've updated this to include Jupiter

00:10:51,050 --> 00:10:58,970
lab yet but it does work and inside of

00:10:55,100 --> 00:11:00,770
the context of if you think of Domino as

00:10:58,970 --> 00:11:02,540
the connective mesh that binds all of

00:11:00,770 --> 00:11:05,780
these together in the same way that you

00:11:02,540 --> 00:11:07,820
don't code in JIRA and sales for sales

00:11:05,780 --> 00:11:09,110
folks don't sell their product through

00:11:07,820 --> 00:11:11,390
Salesforce

00:11:09,110 --> 00:11:13,340
but it is the system of record that lets

00:11:11,390 --> 00:11:16,100
you do work efficiently and collectively

00:11:13,340 --> 00:11:17,570
as an organization you end up getting

00:11:16,100 --> 00:11:19,610
faster experimentation you can

00:11:17,570 --> 00:11:21,530
collaborate more you can audit the work

00:11:19,610 --> 00:11:23,120
of your peers and then also learn from

00:11:21,530 --> 00:11:23,510
it so just the process of doing your

00:11:23,120 --> 00:11:26,780
work

00:11:23,510 --> 00:11:28,820
in the shared environment lets you let

00:11:26,780 --> 00:11:29,960
you share and compound best practices in

00:11:28,820 --> 00:11:32,750
a way that you can't get if you're

00:11:29,960 --> 00:11:35,240
working locally and all the way you

00:11:32,750 --> 00:11:36,830
spend more time doing data science so

00:11:35,240 --> 00:11:39,170
with that in mind there are a few

00:11:36,830 --> 00:11:40,790
different things that we leverage inside

00:11:39,170 --> 00:11:43,070
of Domino to make like what we consider

00:11:40,790 --> 00:11:44,540
a truly reproducible dashboard so I'm

00:11:43,070 --> 00:11:52,130
gonna jump into my Jupiter dashboard

00:11:44,540 --> 00:11:53,060
project and the first thing I'm do is

00:11:52,130 --> 00:11:55,190
jump straight into minutes at the

00:11:53,060 --> 00:11:57,260
settings of this project so have some

00:11:55,190 --> 00:11:58,250
Jupiter dashboards or some Jupiter

00:11:57,260 --> 00:12:00,650
notebooks running in here that I'm

00:11:58,250 --> 00:12:01,820
treating his dashboards but one of the

00:12:00,650 --> 00:12:04,310
things they unique about this is that I

00:12:01,820 --> 00:12:06,440
can run these any of these notebooks on

00:12:04,310 --> 00:12:08,810
whatever Hardware here provided by

00:12:06,440 --> 00:12:10,460
Amazon that I'd like with a drop-down so

00:12:08,810 --> 00:12:12,230
if I find that the work that I'm doing

00:12:10,460 --> 00:12:14,600
just isn't cutting it on my current

00:12:12,230 --> 00:12:17,210
machine I can spin up to a massive like

00:12:14,600 --> 00:12:18,830
two terabyte X one instance that can

00:12:17,210 --> 00:12:20,860
pretty much take whatever I can throw at

00:12:18,830 --> 00:12:20,860
it

00:12:30,370 --> 00:12:35,839
there we go and so with the simple drop

00:12:34,459 --> 00:12:38,300
down the same notebook that's running

00:12:35,839 --> 00:12:40,490
right now on a two core eight gigabyte

00:12:38,300 --> 00:12:44,420
machine can run on 128 cores with two

00:12:40,490 --> 00:12:45,649
terabytes of RAM which is not crazy but

00:12:44,420 --> 00:12:47,450
the other thing that we've astrak-- did

00:12:45,649 --> 00:12:48,560
away is in addition to the hardware that

00:12:47,450 --> 00:12:50,300
goes along with the work that you're

00:12:48,560 --> 00:12:52,190
doing also the computer environment that

00:12:50,300 --> 00:12:54,920
it runs in so you could have like a

00:12:52,190 --> 00:12:57,890
specific point release of jupiter python

00:12:54,920 --> 00:12:59,329
of our number cuda any of like the

00:12:57,890 --> 00:13:00,890
specific packages that you want or

00:12:59,329 --> 00:13:03,769
preset up and configured in an

00:13:00,890 --> 00:13:07,070
environment this is also versioned and

00:13:03,769 --> 00:13:08,360
so now you're in the realm of not just

00:13:07,070 --> 00:13:10,430
the environment that i'm working on now

00:13:08,360 --> 00:13:11,870
is the one that works but the one that i

00:13:10,430 --> 00:13:14,000
was working on last week the one that I

00:13:11,870 --> 00:13:18,920
was working on six months ago I can see

00:13:14,000 --> 00:13:20,420
the history of how that came about and I

00:13:18,920 --> 00:13:21,920
can see the provenance of how this was

00:13:20,420 --> 00:13:23,690
developed and the revisions that have

00:13:21,920 --> 00:13:25,820
been made and if I need to I can go back

00:13:23,690 --> 00:13:27,800
to an older version of this environment

00:13:25,820 --> 00:13:30,339
and know that my work will run as it did

00:13:27,800 --> 00:13:30,339
at that point in time

00:13:30,550 --> 00:13:39,529
lastly we so jumping back into the

00:13:35,300 --> 00:13:43,220
dashboard so we've got a few tips and

00:13:39,529 --> 00:13:45,529
tricks for using dashboards it's in a

00:13:43,220 --> 00:13:47,120
way just general for using dashboards

00:13:45,529 --> 00:13:49,519
these are sort of the tips and tricks

00:13:47,120 --> 00:13:51,050
which all of you Jupiter power users may

00:13:49,519 --> 00:13:53,060
already be familiar with so apologies if

00:13:51,050 --> 00:13:54,800
they're not that interesting but the

00:13:53,060 --> 00:13:56,959
first is magics you can use magics to

00:13:54,800 --> 00:13:58,390
basically bounce outside of the realm of

00:13:56,959 --> 00:14:00,920
what is normal inside of a notebook

00:13:58,390 --> 00:14:02,480
while you can have different notebooks

00:14:00,920 --> 00:14:04,640
running different kernels you can use

00:14:02,480 --> 00:14:05,959
our Python Scala whatever you'd like you

00:14:04,640 --> 00:14:08,060
can also do that directly inside of the

00:14:05,959 --> 00:14:09,649
notebook so the easy way to use magics

00:14:08,060 --> 00:14:11,300
is to get the list of all of the magic

00:14:09,649 --> 00:14:16,880
commands that you have available with

00:14:11,300 --> 00:14:18,290
the % LS magic brief aside if you want

00:14:16,880 --> 00:14:20,120
to have an entire cell run something

00:14:18,290 --> 00:14:21,470
differently you can do two percents and

00:14:20,120 --> 00:14:30,730
it'll run and whatever however you

00:14:21,470 --> 00:14:30,730
specify it for example what's up

00:14:30,790 --> 00:14:33,790
No

00:14:48,079 --> 00:14:51,079
great

00:14:55,190 --> 00:15:00,150
awesome yeah sorry about that

00:14:57,840 --> 00:15:04,500
yeah feel free to jump out this is or to

00:15:00,150 --> 00:15:05,870
shout how this is interactive so one of

00:15:04,500 --> 00:15:10,710
the most useful ones that I found is a

00:15:05,870 --> 00:15:12,450
time and so you can time a specific line

00:15:10,710 --> 00:15:14,100
inside of your code so it's gonna tell

00:15:12,450 --> 00:15:16,500
you specifically how long this is taking

00:15:14,100 --> 00:15:17,640
and how long it took and also time it so

00:15:16,500 --> 00:15:19,050
you can actually break down a function

00:15:17,640 --> 00:15:22,350
that you're writing into specific chunks

00:15:19,050 --> 00:15:23,760
and start talking about the and what

00:15:22,350 --> 00:15:26,250
time its gonna do is it's gonna run it a

00:15:23,760 --> 00:15:28,740
million times and it's gonna tell you

00:15:26,250 --> 00:15:30,300
which took longer which took shorter and

00:15:28,740 --> 00:15:32,190
also it's gonna try and take a guess at

00:15:30,300 --> 00:15:34,080
how long what's actually happening

00:15:32,190 --> 00:15:36,690
behind the scenes so because one was

00:15:34,080 --> 00:15:38,210
substantially substantially longer than

00:15:36,690 --> 00:15:40,110
the others or than the fastest one

00:15:38,210 --> 00:15:42,420
suggest that there's some caching going

00:15:40,110 --> 00:15:43,950
on which is super helpful and you see

00:15:42,420 --> 00:15:45,990
like as you start breaking this down you

00:15:43,950 --> 00:15:47,460
can start to figure out where inside of

00:15:45,990 --> 00:15:51,000
your code things are going slowly or

00:15:47,460 --> 00:15:52,110
quickly to start optimizing this one's

00:15:51,000 --> 00:15:53,610
pretty well-known if you have an

00:15:52,110 --> 00:15:56,090
exclamation point it's gonna basically

00:15:53,610 --> 00:15:59,700
run a bash command outside of the kernel

00:15:56,090 --> 00:16:01,890
you can do see how recent your pandas is

00:15:59,700 --> 00:16:04,020
but you can also do bash commands as the

00:16:01,890 --> 00:16:06,060
entire cell so as I mentioned before the

00:16:04,020 --> 00:16:07,680
double percents will let you change how

00:16:06,060 --> 00:16:09,660
entire cell operates so if you wanted

00:16:07,680 --> 00:16:12,270
your entire cell to run as a bash

00:16:09,660 --> 00:16:15,290
command you can do that like this but it

00:16:12,270 --> 00:16:18,180
also applies to something like latex or

00:16:15,290 --> 00:16:20,070
HTML and so you can have this entire

00:16:18,180 --> 00:16:24,060
cell operate as HTML and the results

00:16:20,070 --> 00:16:27,000
will be rendered as such another popular

00:16:24,060 --> 00:16:30,120
use for another like really convenient

00:16:27,000 --> 00:16:31,710
way the notebooks make it easy to do

00:16:30,120 --> 00:16:33,570
exploratory data work is that if you

00:16:31,710 --> 00:16:35,310
have a command at the end of a cell it's

00:16:33,570 --> 00:16:36,930
gonna automatically take a guess at how

00:16:35,310 --> 00:16:39,060
it should render it so as opposed to in

00:16:36,930 --> 00:16:41,190
your Python terminal rendering columns

00:16:39,060 --> 00:16:43,760
and rows with dashes and mines it's

00:16:41,190 --> 00:16:46,410
gonna automatically render it with HTML

00:16:43,760 --> 00:16:47,640
but I personally find this a little

00:16:46,410 --> 00:16:48,810
annoying because if I'm working with

00:16:47,640 --> 00:16:50,280
things I might want to see more than one

00:16:48,810 --> 00:16:51,870
thing rendered I don't want a unique

00:16:50,280 --> 00:16:54,270
cell but this can also be entirely

00:16:51,870 --> 00:16:56,130
customized using the interactive shell

00:16:54,270 --> 00:16:58,470
so if I set this to render everything

00:16:56,130 --> 00:17:00,090
I've got a nice list of whiskey's here

00:16:58,470 --> 00:17:01,500
and some different metadata about them I

00:17:00,090 --> 00:17:03,810
can check out the head tail and the

00:17:01,500 --> 00:17:06,230
description on one cell all gets

00:17:03,810 --> 00:17:06,230
rendered nice

00:17:06,240 --> 00:17:11,290
if there are some other basic the basic

00:17:09,610 --> 00:17:14,980
tips and tricks for making Jupiter a

00:17:11,290 --> 00:17:17,500
little more useful with one more that I

00:17:14,980 --> 00:17:18,910
always like to show I didn't know this

00:17:17,500 --> 00:17:21,430
until relatively recently actually but

00:17:18,910 --> 00:17:23,920
if you hit alt and select you can get

00:17:21,430 --> 00:17:28,320
sublime level multi-line editing and

00:17:23,920 --> 00:17:28,320
that's something that it's pretty useful

00:17:36,180 --> 00:17:45,400
nice that's one of the basically sublime

00:17:41,170 --> 00:17:46,750
hiding out inside of Jupiter and so

00:17:45,400 --> 00:17:48,070
that's sort of like some ways that you

00:17:46,750 --> 00:17:49,270
can leverage the different functionality

00:17:48,070 --> 00:17:51,100
of Jupiter in order to be a little more

00:17:49,270 --> 00:17:52,720
efficient one of the more interesting

00:17:51,100 --> 00:17:55,120
things is when you start getting into

00:17:52,720 --> 00:17:56,620
actually building dashboards so remember

00:17:55,120 --> 00:17:58,420
dashboard we're thinking is like a way

00:17:56,620 --> 00:18:01,510
to synthesize information in order to

00:17:58,420 --> 00:18:03,610
tell a story in a way that you might not

00:18:01,510 --> 00:18:08,350
be able to do with just some written

00:18:03,610 --> 00:18:09,970
analysis or just a new report so I've

00:18:08,350 --> 00:18:11,590
got this batch demo this is gonna go

00:18:09,970 --> 00:18:14,920
scrape some earthquake data from the

00:18:11,590 --> 00:18:16,510
USGS and render an HTML map of

00:18:14,920 --> 00:18:19,980
earthquakes that have happened around

00:18:16,510 --> 00:18:21,940
the world in the last I think 24 hours

00:18:19,980 --> 00:18:25,840
so that's pretty neat looks like

00:18:21,940 --> 00:18:31,360
something's going on down in Mexico for

00:18:25,840 --> 00:18:32,440
valpariso is collapsing and so we're

00:18:31,360 --> 00:18:34,390
importing some things I've got this

00:18:32,440 --> 00:18:35,950
little toggle code button up here and

00:18:34,390 --> 00:18:39,430
that's pretty useful because a lot of

00:18:35,950 --> 00:18:41,740
one thing that people really don't like

00:18:39,430 --> 00:18:43,090
about when using Jupiter notebooks as a

00:18:41,740 --> 00:18:44,950
way to disseminate information is that

00:18:43,090 --> 00:18:46,720
there's no will not a really easy way to

00:18:44,950 --> 00:18:48,640
hide all the code that went into it like

00:18:46,720 --> 00:18:50,530
what no one really cares that you're

00:18:48,640 --> 00:18:52,840
importing pandas as PD and no one really

00:18:50,530 --> 00:18:55,090
cares that much we're how you're looping

00:18:52,840 --> 00:18:58,180
through the JSON that's coming back they

00:18:55,090 --> 00:19:00,660
just want to see this map and so we go

00:18:58,180 --> 00:19:00,660
ahead and run

00:19:03,240 --> 00:19:05,910
we've got a little toggle code button

00:19:04,680 --> 00:19:08,310
where we can turn the code on and off

00:19:05,910 --> 00:19:11,340
but as soon as we click it it goes away

00:19:08,310 --> 00:19:13,500
and so what we're left with is all that

00:19:11,340 --> 00:19:15,210
we care about and this alone is like

00:19:13,500 --> 00:19:16,380
somewhat useful because now we can hide

00:19:15,210 --> 00:19:19,170
the code and just highlight the things

00:19:16,380 --> 00:19:21,300
that are is most interesting to us this

00:19:19,170 --> 00:19:23,250
is sort of a hack around what the

00:19:21,300 --> 00:19:24,780
Jupiter dashboards project is trying to

00:19:23,250 --> 00:19:26,640
overcome and so we went ahead and

00:19:24,780 --> 00:19:29,160
installed that into our compute

00:19:26,640 --> 00:19:30,810
environment in Domino so we can jump

00:19:29,160 --> 00:19:33,120
into the Jupiter dashboards layout which

00:19:30,810 --> 00:19:37,860
is in itself really useful if we jump

00:19:33,120 --> 00:19:39,600
into the grid we can see that the

00:19:37,860 --> 00:19:40,680
Jupiter dashboards project is gonna give

00:19:39,600 --> 00:19:42,540
us the ability to click and drag

00:19:40,680 --> 00:19:44,550
individual cells around to lay them out

00:19:42,540 --> 00:19:46,470
in a way that's useful for disseminating

00:19:44,550 --> 00:19:48,330
whatever information we care about so I

00:19:46,470 --> 00:19:51,870
can move this walk around I can move

00:19:48,330 --> 00:19:55,110
this one but because this is relatively

00:19:51,870 --> 00:19:57,300
simple we don't have to do too much

00:19:55,110 --> 00:19:59,460
modifications the downside of this of

00:19:57,300 --> 00:20:01,260
course is that the only way to view the

00:19:59,460 --> 00:20:03,120
results that you've generated in the

00:20:01,260 --> 00:20:06,360
Jupiter dashboard layout unless you have

00:20:03,120 --> 00:20:07,710
a Jupiter dashboard server is that you

00:20:06,360 --> 00:20:09,240
have to have someone have all of the

00:20:07,710 --> 00:20:11,130
right packages and extensions installed

00:20:09,240 --> 00:20:13,710
and they have to have Jupiter dashboards

00:20:11,130 --> 00:20:15,840
running on their computer in order to

00:20:13,710 --> 00:20:18,720
see the format you set your notebook to

00:20:15,840 --> 00:20:22,050
so by toggling the code with this little

00:20:18,720 --> 00:20:24,150
bit of HTML script we now have something

00:20:22,050 --> 00:20:28,320
that can be converted to itself entirely

00:20:24,150 --> 00:20:33,720
HTML and jumping back into the plugging

00:20:28,320 --> 00:20:35,190
Domino if we run into the project itself

00:20:33,720 --> 00:20:36,540
now we can start to use some of the

00:20:35,190 --> 00:20:37,920
other features that are really important

00:20:36,540 --> 00:20:40,230
for reproducibility in terms of

00:20:37,920 --> 00:20:42,170
dashboards like we can set up scheduled

00:20:40,230 --> 00:20:43,980
runs to go run this notebook

00:20:42,170 --> 00:20:45,960
automatically without having to convert

00:20:43,980 --> 00:20:47,580
it into a Python file so that every

00:20:45,960 --> 00:20:49,200
morning it updates and we have a list of

00:20:47,580 --> 00:20:50,310
all of the recent earthquakes that have

00:20:49,200 --> 00:20:53,310
happened if that's something we're

00:20:50,310 --> 00:20:57,440
really interested in so I can do a batch

00:20:53,310 --> 00:20:57,440
run of this batch notebook I pyb

00:21:12,490 --> 00:21:17,890
but I can also easily set this up to

00:21:14,290 --> 00:21:20,410
wrong some schedules so I've got this

00:21:17,890 --> 00:21:22,570
past one which I go into the details of

00:21:20,410 --> 00:21:24,970
what was run I can schedule this to

00:21:22,570 --> 00:21:26,620
repeat and some regular cadence and I

00:21:24,970 --> 00:21:27,610
can also email this around so like I say

00:21:26,620 --> 00:21:29,020
I have a report that I've got to

00:21:27,610 --> 00:21:30,520
generate or I have a notebook that not

00:21:29,020 --> 00:21:31,900
taking the work to build out this

00:21:30,520 --> 00:21:33,550
notebook that explains my thoughts

00:21:31,900 --> 00:21:34,750
around this data sort of set what's

00:21:33,550 --> 00:21:36,190
happening in the world and I've

00:21:34,750 --> 00:21:37,480
rearranged it in a way I've hidden the

00:21:36,190 --> 00:21:39,580
code I've got something nice and pretty

00:21:37,480 --> 00:21:41,800
now I can schedule this to repeat at a

00:21:39,580 --> 00:21:43,540
regular cadence with like incredible

00:21:41,800 --> 00:21:45,730
customization and I can email this

00:21:43,540 --> 00:21:49,360
around and when you do that the thing

00:21:45,730 --> 00:21:52,960
that you're gonna see is gonna be a

00:21:49,360 --> 00:21:54,970
pre-rendered notebook so it's gonna look

00:21:52,960 --> 00:21:56,500
exactly like what we want and that it's

00:21:54,970 --> 00:21:58,059
gonna have the interactive dashboard

00:21:56,500 --> 00:22:00,790
that we can play around with and use

00:21:58,059 --> 00:22:06,160
either delivered to your inbox via email

00:22:00,790 --> 00:22:10,090
or directly inside of a web browser and

00:22:06,160 --> 00:22:11,950
in terms of how you use this with

00:22:10,090 --> 00:22:14,460
respect to reproducibility if I jump

00:22:11,950 --> 00:22:17,770
into this specific run you can say

00:22:14,460 --> 00:22:19,690
what's going on in Oklahoma there I dig

00:22:17,770 --> 00:22:21,460
into the actual map of us and see where

00:22:19,690 --> 00:22:23,410
all these earthquakes are happening and

00:22:21,460 --> 00:22:25,300
I can like leave comments about exactly

00:22:23,410 --> 00:22:26,740
this version of this dashboard on this

00:22:25,300 --> 00:22:30,490
day there was lots of stuff happening

00:22:26,740 --> 00:22:32,860
here rendered all of course in markdown

00:22:30,490 --> 00:22:37,690
so you can embed images have fonts all

00:22:32,860 --> 00:22:39,010
that sort of fun stuff but again to go

00:22:37,690 --> 00:22:40,720
back to the reproducibility it's one

00:22:39,010 --> 00:22:42,730
thing to be able to show the result as

00:22:40,720 --> 00:22:44,740
it happened once or to reproduce it

00:22:42,730 --> 00:22:46,929
again in the future but to completely

00:22:44,740 --> 00:22:49,720
transfer that body of understanding that

00:22:46,929 --> 00:22:51,220
you put into this work one of the things

00:22:49,720 --> 00:22:55,179
you have to be able to do in addition to

00:22:51,220 --> 00:22:57,070
sharing it is the ability to go back in

00:22:55,179 --> 00:22:58,990
time and see how this is evolved so I

00:22:57,070 --> 00:23:00,550
can actually go back and see like this

00:22:58,990 --> 00:23:04,510
is what the map looked like three hours

00:23:00,550 --> 00:23:07,330
ago when I last ran this and that can

00:23:04,510 --> 00:23:09,250
have an entire discussion but the

00:23:07,330 --> 00:23:10,450
notebook itself didn't have the code

00:23:09,250 --> 00:23:14,020
that we've added to collapse the cells

00:23:10,450 --> 00:23:15,429
it is just the actual contents and so

00:23:14,020 --> 00:23:19,960
this is a way to make the actual work

00:23:15,429 --> 00:23:22,730
that you're doing more than just one-off

00:23:19,960 --> 00:23:25,460
pieces of research but like live

00:23:22,730 --> 00:23:32,090
live artifacts that update over time and

00:23:25,460 --> 00:23:33,440
which others can build upon so lastly I

00:23:32,090 --> 00:23:36,049
wanted to show a slightly more

00:23:33,440 --> 00:23:46,220
complicated example of the Jupiter

00:23:36,049 --> 00:23:47,840
dashboards project so this is the

00:23:46,220 --> 00:23:49,850
default example that ships with Jupiter

00:23:47,840 --> 00:23:52,280
dashboards it's pretty cool it's a

00:23:49,850 --> 00:23:59,090
scotch recommendation engine I'm gonna

00:23:52,280 --> 00:24:01,340
go ahead and run all these cells and

00:23:59,090 --> 00:24:03,220
when it's complete I'll be able to jump

00:24:01,340 --> 00:24:06,340
into a pre-configured dashboard layout

00:24:03,220 --> 00:24:12,500
where I pick a scotch that I like I

00:24:06,340 --> 00:24:15,020
prefer kaolin I'll go with this one

00:24:12,500 --> 00:24:16,520
and I can see what's similar based on an

00:24:15,020 --> 00:24:17,540
aggregate score and then why it's

00:24:16,520 --> 00:24:20,090
different based on many different

00:24:17,540 --> 00:24:23,030
attributes of scotch but all this work

00:24:20,090 --> 00:24:25,340
lives in one place it's been done once

00:24:23,030 --> 00:24:27,799
it's been presented in a way that's easy

00:24:25,340 --> 00:24:29,299
to consume so I can see exactly what the

00:24:27,799 --> 00:24:31,040
relevant but if information is and take

00:24:29,299 --> 00:24:33,580
advantage other work that's been done to

00:24:31,040 --> 00:24:33,580
organize it

00:24:38,720 --> 00:24:45,590
so mm-hmm so it's sort of the idea of

00:24:42,800 --> 00:24:49,100
reproducibility within dashboards and

00:24:45,590 --> 00:24:51,230
Domino to not read it at the point too

00:24:49,100 --> 00:24:51,800
hard Domino is a place to do a lot of

00:24:51,230 --> 00:24:54,170
this type of work

00:24:51,800 --> 00:24:55,790
scalable compute we add the

00:24:54,170 --> 00:24:57,590
infrastructure around the work that you

00:24:55,790 --> 00:25:00,350
all right you are already doing in order

00:24:57,590 --> 00:25:02,660
to make it reproducible so going beyond

00:25:00,350 --> 00:25:04,190
just the ability to do something once on

00:25:02,660 --> 00:25:05,810
your computer or twice on your computer

00:25:04,190 --> 00:25:07,310
- the ability to do it on your

00:25:05,810 --> 00:25:10,040
competitor your colleagues computer or

00:25:07,310 --> 00:25:11,540
in groups collectively - the ability to

00:25:10,040 --> 00:25:13,070
actually convey that information indeed

00:25:11,540 --> 00:25:16,630
these system or record for the work your

00:25:13,070 --> 00:25:16,630
data science team is doing through time

00:25:24,210 --> 00:25:30,039
and so lastly before we before I finish

00:25:27,610 --> 00:25:32,110
up I did want to show off something that

00:25:30,039 --> 00:25:35,289
we've been working on in tandem with the

00:25:32,110 --> 00:25:36,820
Jupiter labs group and I know there's

00:25:35,289 --> 00:25:39,309
been a lot of talk of Jupiter labs today

00:25:36,820 --> 00:25:40,299
but this is one of the more exciting

00:25:39,309 --> 00:25:41,620
things that I've been learning about a

00:25:40,299 --> 00:25:44,500
Jupiter con but just the basic

00:25:41,620 --> 00:25:46,659
functionality cheaper labs and again a

00:25:44,500 --> 00:25:48,159
bit of a shameless plug for Domino this

00:25:46,659 --> 00:25:50,200
is all like default out of the box how

00:25:48,159 --> 00:25:52,390
do peer labs work works but we're able

00:25:50,200 --> 00:25:54,340
to run it inside of our environments

00:25:52,390 --> 00:25:55,659
because they're incredibly extensible so

00:25:54,340 --> 00:25:57,760
all the cool things that you get with

00:25:55,659 --> 00:25:59,260
Jupiter Labs the ability to look at a

00:25:57,760 --> 00:26:03,549
director of all of your files see what's

00:25:59,260 --> 00:26:10,929
running run command cell to Mars as well

00:26:03,549 --> 00:26:12,669
as pop open new sessions can all be done

00:26:10,929 --> 00:26:14,559
inside of a domino like environment

00:26:12,669 --> 00:26:17,919
using jupiter lab functionality which is

00:26:14,559 --> 00:26:19,780
pretty cool all right so in the context

00:26:17,919 --> 00:26:31,030
of reproducible dashboards Domino

00:26:19,780 --> 00:26:32,590
jupiter lab any questions great well

00:26:31,030 --> 00:26:34,179
thanks a bunch guys I'm happy to stick

00:26:32,590 --> 00:26:36,490
around and talk more about Jupiter

00:26:34,179 --> 00:26:40,720
dashboards anything else anything else

00:26:36,490 --> 00:26:42,520
want to talk about question yes so these

00:26:40,720 --> 00:26:44,049
are publicly available I don't know if

00:26:42,520 --> 00:26:46,480
we've posted them yet but we will send

00:26:44,049 --> 00:26:48,730
them out through O'Reilly these are all

00:26:46,480 --> 00:26:51,900
public Domino projects so what that

00:26:48,730 --> 00:26:55,390
means is you can jump into this project

00:26:51,900 --> 00:26:56,650
as anyone on the web you can jump in you

00:26:55,390 --> 00:26:59,850
can spin up your notebook and you can

00:26:56,650 --> 00:26:59,850
start clicking around to play with it

00:27:02,370 --> 00:27:06,250
these will be put we'll post some links

00:27:04,630 --> 00:27:09,789
somewhere these are hosted on our cloud

00:27:06,250 --> 00:27:11,049
environment so dear you would need to

00:27:09,789 --> 00:27:12,789
sign up for an accountant like bio

00:27:11,049 --> 00:27:14,679
license but because of this they will be

00:27:12,789 --> 00:27:16,570
open and freely available so as long as

00:27:14,679 --> 00:27:19,750
you go to link believe it's app Domino

00:27:16,570 --> 00:27:22,059
data app Domino data lab com well that

00:27:19,750 --> 00:27:23,710
we hosted and then it's a very long ugly

00:27:22,059 --> 00:27:26,220
URL to get to them specifically but I'll

00:27:23,710 --> 00:27:26,220
share that with y'all

00:27:30,330 --> 00:27:36,400
[Applause]

00:27:49,929 --> 00:27:55,520
now you can download them and run them

00:27:51,890 --> 00:27:57,559
locally so they're hosted there and

00:27:55,520 --> 00:27:58,789
that's where how you can access them but

00:27:57,559 --> 00:28:05,960
from there you can download them and run

00:27:58,789 --> 00:28:11,720
them on your local computer I'm not sure

00:28:05,960 --> 00:28:13,549
oh yes so if you have the Jupiter

00:28:11,720 --> 00:28:16,370
dashboards extension installed which is

00:28:13,549 --> 00:28:17,809
basically these you'll be able to see

00:28:16,370 --> 00:28:19,330
the notebook arranged in the way that

00:28:17,809 --> 00:28:26,090
whoever designed the notebook

00:28:19,330 --> 00:28:28,549
prearranged them as a dashboard no it's

00:28:26,090 --> 00:28:31,309
a project for Jupiter that they've been

00:28:28,549 --> 00:28:35,270
working on it for like a year and a half

00:28:31,309 --> 00:28:36,890
maybe it's not incredibly well known but

00:28:35,270 --> 00:28:38,299
it's it's pretty useful yeah you

00:28:36,890 --> 00:28:39,440
basically build a Jupiter dashboards and

00:28:38,299 --> 00:28:46,490
like start clicking and dragging things

00:28:39,440 --> 00:28:48,470
around it's really cool I don't believe

00:28:46,490 --> 00:28:50,510
a render Zen github because you have to

00:28:48,470 --> 00:28:52,220
run you have to open the notebook and

00:28:50,510 --> 00:28:53,899
then tell it to run the cells so it's

00:28:52,220 --> 00:28:55,309
not just in the way the same way that

00:28:53,899 --> 00:28:57,470
github renders they do put your notebook

00:28:55,309 --> 00:28:59,000
I have to actually activate the notebook

00:28:57,470 --> 00:29:00,110
extension we've played around with it

00:28:59,000 --> 00:29:01,850
cause like ideally we'd want to have

00:29:00,110 --> 00:29:03,669
like a URL you can just share and like

00:29:01,850 --> 00:29:12,590
here's a notebook in a dashboard format

00:29:03,669 --> 00:29:14,630
but it it's not there yet if we were to

00:29:12,590 --> 00:29:17,929
figure out how the Jupiter dashboards

00:29:14,630 --> 00:29:19,820
project is going yes we actually have a

00:29:17,929 --> 00:29:21,590
whole like area of our product or on app

00:29:19,820 --> 00:29:23,149
publishing so making like flask or shiny

00:29:21,590 --> 00:29:27,289
apps publicly available without having

00:29:23,149 --> 00:29:29,600
to spin up a server but in terms of like

00:29:27,289 --> 00:29:31,850
we try not to heavily modify open source

00:29:29,600 --> 00:29:33,529
software unless we're like contributing

00:29:31,850 --> 00:29:35,179
to the body of work it's because we

00:29:33,529 --> 00:29:38,110
don't like some Domino custom version of

00:29:35,179 --> 00:29:38,110
Jupiter or something like that

00:29:42,639 --> 00:29:50,299
to Jupiter in general or within Domino

00:29:46,690 --> 00:29:52,820
yes so there's an entire collection of

00:29:50,299 --> 00:29:55,580
third-party extensions for using the

00:29:52,820 --> 00:29:57,200
magics when I think that I've seen

00:29:55,580 --> 00:29:59,869
before its paste bin you can do like

00:29:57,200 --> 00:30:01,519
percent percent paste bin variable and

00:29:59,869 --> 00:30:03,019
it'll get instantly put on paste bin and

00:30:01,519 --> 00:30:05,289
you can develop these yourself they're

00:30:03,019 --> 00:30:05,289
pretty cool

00:30:11,460 --> 00:30:16,229

YouTube URL: https://www.youtube.com/watch?v=2jKW5Gfpb_E


