Title: From Beaker to Beaker - Matt Greenwood (Two Sigma Investments)
Publication date: 2017-11-08
Playlist: JupyterCon
Description: 
	Matt Greenwood introduces BeakerX, a set of Jupyter Notebook extensions that enable polyglot data science, time series plotting and processing, research publication, and integration with Apache Spark. Matt reviews the Jupyter extension architecture and how BeakerX plugs into it, covers the current set of BeakerX capabilities, and discusses the pivot from Beaker, a standalone notebook, to BeakerX.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:01,569 --> 00:00:04,660
so before we get into the story of

00:00:03,460 --> 00:00:06,190
beaker let me kind of give you a little

00:00:04,660 --> 00:00:09,100
bit of context about myself

00:00:06,190 --> 00:00:11,080
I've spent the last 14 years at two

00:00:09,100 --> 00:00:14,740
similar investments where I really focus

00:00:11,080 --> 00:00:17,349
on two things one is solving really what

00:00:14,740 --> 00:00:19,300
we think are very hard problems in data

00:00:17,349 --> 00:00:21,759
science and maybe perhaps more

00:00:19,300 --> 00:00:23,680
interesting identifying the next set of

00:00:21,759 --> 00:00:26,700
next generation of problems that we're

00:00:23,680 --> 00:00:28,989
gonna need to solve in order to be a

00:00:26,700 --> 00:00:31,239
convincing quantitative investment

00:00:28,989 --> 00:00:33,160
manager for the 21st century and that's

00:00:31,239 --> 00:00:35,560
in my role as chief innovation officer

00:00:33,160 --> 00:00:37,660
which is not chief inspiration officer

00:00:35,560 --> 00:00:39,430
which is what was noted in the speaker

00:00:37,660 --> 00:00:41,080
notes here but I think I actually like

00:00:39,430 --> 00:00:42,910
that better than chief innovation

00:00:41,080 --> 00:00:45,370
officer so we'll go with that one

00:00:42,910 --> 00:00:47,620
so two Sigma is a data-driven investment

00:00:45,370 --> 00:00:49,960
manager what we do is we form hypotheses

00:00:47,620 --> 00:00:52,270
about tradable instruments and then we

00:00:49,960 --> 00:00:55,030
apply the scientific method to those

00:00:52,270 --> 00:00:58,390
hypotheses we add lots of data we stir

00:00:55,030 --> 00:01:01,239
in a splash of algorithms a lot of human

00:00:58,390 --> 00:01:03,160
ingenuity and we do that to understand

00:01:01,239 --> 00:01:04,449
trends and to forecast the future that's

00:01:03,160 --> 00:01:08,320
basically what we do

00:01:04,449 --> 00:01:08,890
I am a gypsy fortune-teller for the 21st

00:01:08,320 --> 00:01:11,260
century

00:01:08,890 --> 00:01:14,140
my background is nothing to do with

00:01:11,260 --> 00:01:14,860
Finance it's as a trained physicist and

00:01:14,140 --> 00:01:17,979
a mathematician

00:01:14,860 --> 00:01:20,830
turned computer scientist and really my

00:01:17,979 --> 00:01:23,020
problems began right there as a

00:01:20,830 --> 00:01:25,390
physicist about 30 years ago I was doing

00:01:23,020 --> 00:01:27,070
my master's thesis and I was reading a

00:01:25,390 --> 00:01:29,530
paper I'm sure like many people have

00:01:27,070 --> 00:01:32,500
read papers and there was an error in

00:01:29,530 --> 00:01:33,790
the paper and first of all you spend a

00:01:32,500 --> 00:01:36,850
week figuring out whether it's you or

00:01:33,790 --> 00:01:39,340
the paper and then you're like wow this

00:01:36,850 --> 00:01:42,460
is publishable I can publish that

00:01:39,340 --> 00:01:44,799
someone else made an error and so I did

00:01:42,460 --> 00:01:48,369
and it was it got me you know it got me

00:01:44,799 --> 00:01:51,960
a a fair mileage out of it for my own

00:01:48,369 --> 00:01:54,970
research but mathematics is by design a

00:01:51,960 --> 00:01:56,710
solitary occupation and some of the

00:01:54,970 --> 00:01:59,409
ramifications of that are that errors

00:01:56,710 --> 00:02:02,080
can lie undetected for years before

00:01:59,409 --> 00:02:04,299
being picked up and that really bothered

00:02:02,080 --> 00:02:07,119
me but I never really understood what to

00:02:04,299 --> 00:02:09,099
do about it and really you know the

00:02:07,119 --> 00:02:11,019
whole thrust of beaker is me thinking

00:02:09,099 --> 00:02:12,609
about this problem for about 30 years

00:02:11,019 --> 00:02:15,220
and trying to understand how we can

00:02:12,609 --> 00:02:17,620
solve it so my default method of

00:02:15,220 --> 00:02:20,320
standing the world probably like most of

00:02:17,620 --> 00:02:22,120
you is as a Bayesian a Bayesian

00:02:20,320 --> 00:02:24,910
statistician so that is like this

00:02:22,120 --> 00:02:27,340
process of taking recent observations

00:02:24,910 --> 00:02:29,410
incorporating them to a model of the

00:02:27,340 --> 00:02:31,600
world we have now updating that model

00:02:29,410 --> 00:02:33,700
and using that model to to predict the

00:02:31,600 --> 00:02:36,940
future and we do this all of time all

00:02:33,700 --> 00:02:40,660
the time if I asked you what the next

00:02:36,940 --> 00:02:42,580
thing to come through that door is my

00:02:40,660 --> 00:02:46,570
guess is that everyone in the room says

00:02:42,580 --> 00:02:50,200
a human being right not for example a

00:02:46,570 --> 00:02:53,500
dog or a cat but in the US the

00:02:50,200 --> 00:02:55,240
population of dogs and cats is about 1/3

00:02:53,500 --> 00:02:58,120
of the total population of dogs and cats

00:02:55,240 --> 00:03:00,490
and humans so as a frequentist I would

00:02:58,120 --> 00:03:02,440
say there's a 30% chance for the dog

00:03:00,490 --> 00:03:04,270
walks through the door but we know

00:03:02,440 --> 00:03:06,730
that's not true because we're implicitly

00:03:04,270 --> 00:03:08,260
Bayesian we kind of understand from our

00:03:06,730 --> 00:03:10,600
model of the world that dogs and cats

00:03:08,260 --> 00:03:14,560
don't wander around the halls of this

00:03:10,600 --> 00:03:17,320
hotel and even in New York dogs and cats

00:03:14,560 --> 00:03:18,459
form about 10% of the population so it's

00:03:17,320 --> 00:03:23,769
a pretty good chance where I come from

00:03:18,459 --> 00:03:25,989
so over the years this Bayesian in me

00:03:23,769 --> 00:03:28,269
gathered enough evidence to take a stab

00:03:25,989 --> 00:03:29,800
at how to begin solving the problem the

00:03:28,269 --> 00:03:32,560
dice first or 30 years ago and I

00:03:29,800 --> 00:03:36,750
developed with my colleagues our two

00:03:32,560 --> 00:03:40,030
Sigma into a larger vision for for for a

00:03:36,750 --> 00:03:41,680
for collaborative data science and we

00:03:40,030 --> 00:03:43,690
call this larger initiative internally

00:03:41,680 --> 00:03:45,940
bunsen and I'll come back to that in a

00:03:43,690 --> 00:03:47,500
minute but that's the German chemist

00:03:45,940 --> 00:03:49,060
Robert Bunsen who invented the Bunsen

00:03:47,500 --> 00:03:51,610
burner that I had so much fun with when

00:03:49,060 --> 00:03:54,070
I was a kid so the process of data

00:03:51,610 --> 00:03:56,739
science is still today incredibly

00:03:54,070 --> 00:04:01,030
compartmentalized right but if you break

00:03:56,739 --> 00:04:04,090
it down into its kind of core components

00:04:01,030 --> 00:04:05,530
then you can spot a process that

00:04:04,090 --> 00:04:08,049
everyone goes through the first thing

00:04:05,530 --> 00:04:10,239
you have to do is get a hypothesis right

00:04:08,049 --> 00:04:11,920
so that's kind of fairly straightforward

00:04:10,239 --> 00:04:13,480
and that's where your problems begin

00:04:11,920 --> 00:04:15,519
because once you have a hypothesis of

00:04:13,480 --> 00:04:17,470
the data science what you then need to

00:04:15,519 --> 00:04:21,640
do is find data to prove or disprove

00:04:17,470 --> 00:04:23,680
that hypothesis and maybe you work on

00:04:21,640 --> 00:04:25,539
your hypotheses given a data set but if

00:04:23,680 --> 00:04:28,820
you don't you have to find a data set

00:04:25,539 --> 00:04:31,910
for that and that is complicated

00:04:28,820 --> 00:04:33,590
let's assume you find the data set then

00:04:31,910 --> 00:04:35,360
you overcome the technical problems that

00:04:33,590 --> 00:04:38,180
we all have of ingesting that data set

00:04:35,360 --> 00:04:41,300
of downloading it and a to Sigma we've

00:04:38,180 --> 00:04:43,130
taken delivery of servers of data we're

00:04:41,300 --> 00:04:44,780
not just FTP but of servers of hard

00:04:43,130 --> 00:04:46,970
drives if you know any way you can get

00:04:44,780 --> 00:04:48,320
it to me even paper I'll take the data

00:04:46,970 --> 00:04:50,030
if you can get it to me that way

00:04:48,320 --> 00:04:52,450
and so you have to ingest that data and

00:04:50,030 --> 00:04:54,680
normalize it and once you've done that

00:04:52,450 --> 00:04:56,630
then you get the juicy part there are

00:04:54,680 --> 00:05:00,260
like loads and loads of this great

00:04:56,630 --> 00:05:03,740
analysis tools many of which now run in

00:05:00,260 --> 00:05:07,100
in Jupiter the collaboration is really

00:05:03,740 --> 00:05:07,520
complicated so you might speak Python I

00:05:07,100 --> 00:05:11,270
don't

00:05:07,520 --> 00:05:13,430
I speak kind of Perl I'm kind of old a

00:05:11,270 --> 00:05:15,710
bit of groovy now I don't really speak

00:05:13,430 --> 00:05:17,450
Python and I have colleagues who speak R

00:05:15,710 --> 00:05:19,010
or MATLAB and the only way to

00:05:17,450 --> 00:05:20,480
collaborate with someone who speaks a

00:05:19,010 --> 00:05:23,810
fundamentally different language than

00:05:20,480 --> 00:05:27,500
you is to either believe what they're

00:05:23,810 --> 00:05:28,850
telling you to be true or to just redo

00:05:27,500 --> 00:05:30,440
the whole thing yourself and that's what

00:05:28,850 --> 00:05:31,850
we do right so we'll take your R code

00:05:30,440 --> 00:05:33,440
I'll rewrite it in Python just to make

00:05:31,850 --> 00:05:36,080
sure that it works and like okay that's

00:05:33,440 --> 00:05:40,370
good but it's a tremendous waste of time

00:05:36,080 --> 00:05:41,720
and it's not real collaboration and when

00:05:40,370 --> 00:05:44,740
you do that you introduce the

00:05:41,720 --> 00:05:47,810
possibility of more bugs and a lot more

00:05:44,740 --> 00:05:49,430
time in the process but suppose that we

00:05:47,810 --> 00:05:51,890
can actually collaborate effectively so

00:05:49,430 --> 00:05:54,620
we both speak Python and we can kind of

00:05:51,890 --> 00:05:56,390
collaborate effectively then as datasets

00:05:54,620 --> 00:05:58,310
kind of grow in size we're going to need

00:05:56,390 --> 00:06:00,710
computing power so we need access to

00:05:58,310 --> 00:06:03,110
computing power that is greater than we

00:06:00,710 --> 00:06:05,000
have on your typical laptop and so you

00:06:03,110 --> 00:06:07,460
need access to a variety of different

00:06:05,000 --> 00:06:09,830
compute resources in the cloud which is

00:06:07,460 --> 00:06:12,680
available but kind of non-trivial if you

00:06:09,830 --> 00:06:15,530
want to spin up even today say a spark

00:06:12,680 --> 00:06:17,660
cluster in Google Cloud like these

00:06:15,530 --> 00:06:20,960
aren't trivial they will one day but

00:06:17,660 --> 00:06:22,310
they're not trivial yet and so you know

00:06:20,960 --> 00:06:23,750
you're all sitting here so you're on

00:06:22,310 --> 00:06:25,940
kind of this leading edge of technology

00:06:23,750 --> 00:06:28,850
and data science but the vast majority

00:06:25,940 --> 00:06:31,160
of scientists are like way in your

00:06:28,850 --> 00:06:33,260
rear-view mirror but let's assume that

00:06:31,160 --> 00:06:35,060
you can do that you can do the analysis

00:06:33,260 --> 00:06:39,080
you can do the collaboration you can get

00:06:35,060 --> 00:06:40,520
things done then the results look good

00:06:39,080 --> 00:06:41,500
then what do you do you have to actually

00:06:40,520 --> 00:06:43,660
publish

00:06:41,500 --> 00:06:45,730
right and here in case you didn't

00:06:43,660 --> 00:06:49,120
noticed publishing hasn't actually

00:06:45,730 --> 00:06:51,550
changed since kind of movable type about

00:06:49,120 --> 00:06:54,250
a thousand years ago right what we see

00:06:51,550 --> 00:06:56,860
today even on the web the publishing is

00:06:54,250 --> 00:06:58,450
kind of fairly boring it's static when

00:06:56,860 --> 00:07:01,000
you publish in a journal or even if you

00:06:58,450 --> 00:07:03,490
publish online what you get is a static

00:07:01,000 --> 00:07:05,830
snapshot of the science that you did but

00:07:03,490 --> 00:07:08,500
worse than that your scientists refer

00:07:05,830 --> 00:07:10,930
your researchers effectively not just

00:07:08,500 --> 00:07:12,430
ended but kind of dead right anyone

00:07:10,930 --> 00:07:13,450
who's ever tried to reproduce the paper

00:07:12,430 --> 00:07:15,220
will know that right

00:07:13,450 --> 00:07:17,650
you scratch your head I just can't get

00:07:15,220 --> 00:07:19,600
why because the data is not contained

00:07:17,650 --> 00:07:21,070
with the paper and even if you've got

00:07:19,600 --> 00:07:23,110
the data with the paper the code that

00:07:21,070 --> 00:07:25,180
they use to analyze the data is not with

00:07:23,110 --> 00:07:27,190
the paper either so we have a really big

00:07:25,180 --> 00:07:29,710
problem and we need to fix that and

00:07:27,190 --> 00:07:31,360
that's what really Bunsen is this is the

00:07:29,710 --> 00:07:33,280
vision that we have for data science

00:07:31,360 --> 00:07:34,900
well that we had for data science when

00:07:33,280 --> 00:07:37,030
we introduced Bunsen the first thing is

00:07:34,900 --> 00:07:39,460
discoverable data data should just be

00:07:37,030 --> 00:07:41,110
easily discoverable and by that I mean

00:07:39,460 --> 00:07:43,570
not just kind of typing into Google

00:07:41,110 --> 00:07:45,669
where can I get cargo manifests but

00:07:43,570 --> 00:07:48,280
being able to ingest them in a fairly

00:07:45,669 --> 00:07:49,570
straightforward way into something where

00:07:48,280 --> 00:07:52,290
you do your data analysis and modeling

00:07:49,570 --> 00:07:54,370
in this case a notebook Jupiter or

00:07:52,290 --> 00:07:57,669
beaker and hopefully be corrects as

00:07:54,370 --> 00:07:59,110
we'll see later on once you're doing

00:07:57,669 --> 00:08:01,720
that data analysis is a modeling you

00:07:59,110 --> 00:08:04,120
need access straightforward access to

00:08:01,720 --> 00:08:06,190
scalable distributed computing in a way

00:08:04,120 --> 00:08:08,710
that you don't need to think as a data

00:08:06,190 --> 00:08:10,570
scientists how many cause do I actually

00:08:08,710 --> 00:08:15,040
need for this do I need to be running on

00:08:10,570 --> 00:08:20,830
a GPU you know what kind of framework am

00:08:15,040 --> 00:08:23,020
I going to be using so at two sigma

00:08:20,830 --> 00:08:28,000
we've been kind of doing this for about

00:08:23,020 --> 00:08:29,860
a decade we have a fairly

00:08:28,000 --> 00:08:31,810
straightforward notion of data at two

00:08:29,860 --> 00:08:33,669
Sigma if you can name the data somehow

00:08:31,810 --> 00:08:35,800
then you can use it and you can use it

00:08:33,669 --> 00:08:39,820
in any of the analysis tools that we

00:08:35,800 --> 00:08:41,650
provide the data analysis and modeling

00:08:39,820 --> 00:08:43,960
portion of the research process has been

00:08:41,650 --> 00:08:46,210
enshrined in a notebook and that

00:08:43,960 --> 00:08:48,400
notebook we call beaker that is what

00:08:46,210 --> 00:08:50,380
beaker is and analysis is in this

00:08:48,400 --> 00:08:51,940
notebook are very very tightly a to

00:08:50,380 --> 00:08:54,100
Sigma very tightly and invisibly

00:08:51,940 --> 00:08:55,340
integrated with scalable distributed but

00:08:54,100 --> 00:08:57,860
with scaleable

00:08:55,340 --> 00:08:59,930
Trivedi's compute of multiple types and

00:08:57,860 --> 00:09:01,730
finally critical is the ability to

00:08:59,930 --> 00:09:04,190
publish and have ongoing collaboration

00:09:01,730 --> 00:09:05,870
with your peers so basically a research

00:09:04,190 --> 00:09:06,470
and publishing platform for the 21st

00:09:05,870 --> 00:09:09,500
century

00:09:06,470 --> 00:09:11,060
so in any scientific venture you know

00:09:09,500 --> 00:09:12,560
that the key to success is actually

00:09:11,060 --> 00:09:14,990
writing things down right it's about

00:09:12,560 --> 00:09:16,700
publish or perish and we record so we

00:09:14,990 --> 00:09:18,740
can understand our own thought processes

00:09:16,700 --> 00:09:21,740
and eventually find a clear line of

00:09:18,740 --> 00:09:23,930
research among the very different full

00:09:21,740 --> 00:09:26,030
starts that you might take and we share

00:09:23,930 --> 00:09:28,810
our thoughts and our ideas with others

00:09:26,030 --> 00:09:31,190
in order to build this body of knowledge

00:09:28,810 --> 00:09:33,230
the more accurately describes the world

00:09:31,190 --> 00:09:34,850
we live in we build on the work of

00:09:33,230 --> 00:09:36,500
others we stand on the shoulders of

00:09:34,850 --> 00:09:38,720
giants and move the community of

00:09:36,500 --> 00:09:40,580
scientific research forward and so

00:09:38,720 --> 00:09:42,200
though we hadn't actually met and we

00:09:40,580 --> 00:09:44,480
were separated by the entire width of

00:09:42,200 --> 00:09:47,900
the United States it's kind of amazing

00:09:44,480 --> 00:09:51,410
that back in 2013 so well before Jupiter

00:09:47,900 --> 00:09:53,630
this was a kind of ipython days Fernando

00:09:51,410 --> 00:09:55,340
and I had very very similar ideas about

00:09:53,630 --> 00:09:56,060
how notebooks can be used to exchange

00:09:55,340 --> 00:09:59,090
ideas

00:09:56,060 --> 00:10:02,060
I was admirer of ipython but I had other

00:09:59,090 --> 00:10:04,310
ideas of my own see I love using

00:10:02,060 --> 00:10:07,940
physical notebooks I'm a bit of a

00:10:04,310 --> 00:10:10,010
notebook hoarder and for me that kind of

00:10:07,940 --> 00:10:11,450
ability to go back to have a look at

00:10:10,010 --> 00:10:13,010
what you've done to look at the

00:10:11,450 --> 00:10:15,110
arbitrary doodles that you did on the

00:10:13,010 --> 00:10:17,120
page the computations didn't quite work

00:10:15,110 --> 00:10:20,150
there's something quite magical about

00:10:17,120 --> 00:10:22,400
that but take a little good look at the

00:10:20,150 --> 00:10:24,770
notebook in this picture and what you'll

00:10:22,400 --> 00:10:27,170
see is come some kind of nonlinear

00:10:24,770 --> 00:10:28,850
amount of consisting of multiple

00:10:27,170 --> 00:10:31,040
different kinds of visualizations on

00:10:28,850 --> 00:10:33,620
language spend a few seconds just

00:10:31,040 --> 00:10:36,020
looking the image and imagine what you

00:10:33,620 --> 00:10:41,420
could do marrying this paradigm with

00:10:36,020 --> 00:10:43,490
digital notebooks so a key observation

00:10:41,420 --> 00:10:46,640
from looking at the notebooks is that

00:10:43,490 --> 00:10:48,440
language actually really really matters

00:10:46,640 --> 00:10:49,840
so it's said of my firm one of my

00:10:48,440 --> 00:10:53,390
favorite quotes of Charles the fifth

00:10:49,840 --> 00:10:55,250
that if it was necessary to talk with

00:10:53,390 --> 00:10:57,170
God he were talking Spanish which

00:10:55,250 --> 00:10:59,240
language suggests itself for the

00:10:57,170 --> 00:11:02,030
graveness and Madison Madison of the

00:10:59,240 --> 00:11:03,590
Spaniards if with friends in Italian for

00:11:02,030 --> 00:11:06,260
the dialect of the Italians as one of

00:11:03,590 --> 00:11:07,150
familiarity if to caress someone in

00:11:06,260 --> 00:11:09,610
French

00:11:07,150 --> 00:11:11,560
for no languages tenderer than theirs

00:11:09,610 --> 00:11:14,140
and if to threaten someone or to speak

00:11:11,560 --> 00:11:16,180
harshly to them in German for their

00:11:14,140 --> 00:11:18,339
entire languages threatening rough and

00:11:16,180 --> 00:11:19,900
vehement I'm not a German speaker I

00:11:18,339 --> 00:11:22,480
don't know but this is Charles the fifth

00:11:19,900 --> 00:11:24,480
but the quote really enshrines this idea

00:11:22,480 --> 00:11:26,880
the languages they're not isomorphic

00:11:24,480 --> 00:11:29,020
like that's a kind of a key point

00:11:26,880 --> 00:11:31,660
different languages are particularly

00:11:29,020 --> 00:11:33,850
good at conveying certain ideas and

00:11:31,660 --> 00:11:36,310
computer languages are no different than

00:11:33,850 --> 00:11:38,529
human languages so knowing a single

00:11:36,310 --> 00:11:40,570
language today is just insufficient to

00:11:38,529 --> 00:11:42,400
be a data scientist right you've got to

00:11:40,570 --> 00:11:44,710
know Python say to talk to your data

00:11:42,400 --> 00:11:47,589
spark to talk your distributed clusters

00:11:44,710 --> 00:11:49,660
they Tek if you want to kind of bring up

00:11:47,589 --> 00:11:51,640
some mathematics let's not forget

00:11:49,660 --> 00:11:54,220
English and markdown and all of the

00:11:51,640 --> 00:11:55,510
various different languages that you're

00:11:54,220 --> 00:11:59,200
going to actually use to compute your

00:11:55,510 --> 00:12:01,150
ideas so it was clear that any notebook

00:11:59,200 --> 00:12:04,300
experience would require what we call a

00:12:01,150 --> 00:12:06,520
polyglot solution in order to be truly

00:12:04,300 --> 00:12:08,290
collaborative and I want to distinguish

00:12:06,520 --> 00:12:09,700
polyglot from multilingual it's

00:12:08,290 --> 00:12:11,400
something there are two sigma people

00:12:09,700 --> 00:12:13,360
tease me about no end

00:12:11,400 --> 00:12:15,820
multilingual which is what we have

00:12:13,360 --> 00:12:18,550
currently in Juba is the ability to have

00:12:15,820 --> 00:12:20,230
multiple notebooks each one in a

00:12:18,550 --> 00:12:23,290
different language that's a multilingual

00:12:20,230 --> 00:12:25,600
platform a polygon Pat form allows you

00:12:23,290 --> 00:12:27,580
to change languages in the middle of the

00:12:25,600 --> 00:12:29,350
notebook and that's what really the key

00:12:27,580 --> 00:12:32,140
tobiko was the one cell could be in

00:12:29,350 --> 00:12:34,150
Python the next cell could be in closure

00:12:32,140 --> 00:12:35,950
and you can transfer data seamlessly

00:12:34,150 --> 00:12:41,680
between them so you can really

00:12:35,950 --> 00:12:43,510
collaborate on a granular scale so the

00:12:41,680 --> 00:12:45,400
beaker notebook was kind of core to this

00:12:43,510 --> 00:12:47,740
vision of collaborative open data

00:12:45,400 --> 00:12:50,470
science and it was our first release our

00:12:47,740 --> 00:12:53,230
first step towards sponson so it's been

00:12:50,470 --> 00:12:55,330
very successful inside to Sigma many

00:12:53,230 --> 00:12:57,580
most of our modelers use it to

00:12:55,330 --> 00:12:59,160
collaborate on their research it's

00:12:57,580 --> 00:13:01,660
really collaborative and at last count

00:12:59,160 --> 00:13:02,920
supports more than ten at least ten

00:13:01,660 --> 00:13:05,860
writes got ten twelve different

00:13:02,920 --> 00:13:08,620
languages Python are scaler closure as

00:13:05,860 --> 00:13:11,350
well as markdown lay tag HTML rich text

00:13:08,620 --> 00:13:13,240
lots of stuff but it was much much more

00:13:11,350 --> 00:13:15,850
for two Sigma as I said than just kind

00:13:13,240 --> 00:13:19,660
of this stepping stone towards open data

00:13:15,850 --> 00:13:20,560
science for us it was a major step into

00:13:19,660 --> 00:13:23,950
the community

00:13:20,560 --> 00:13:25,750
first open-source project a major step

00:13:23,950 --> 00:13:28,690
coming from a secretive financial firm

00:13:25,750 --> 00:13:30,880
we had literally to create a new way of

00:13:28,690 --> 00:13:33,910
interaction in order to effectively

00:13:30,880 --> 00:13:35,529
engage with the outside world and engage

00:13:33,910 --> 00:13:38,170
further with the wider open-source

00:13:35,529 --> 00:13:43,150
community so we release the beta in May

00:13:38,170 --> 00:13:45,640
2014 when we spoke at in New York and

00:13:43,150 --> 00:13:49,710
then a year later we released the B

00:13:45,640 --> 00:13:52,360
collab alpha which is a small step

00:13:49,710 --> 00:13:54,850
towards bunsen but we were really

00:13:52,360 --> 00:13:58,750
learning all the time and struggling to

00:13:54,850 --> 00:14:00,760
keep pace so I'm going to talk a little

00:13:58,750 --> 00:14:04,690
bit about what I've learned in the last

00:14:00,760 --> 00:14:07,060
couple of years so from our users so

00:14:04,690 --> 00:14:11,520
this is this is actually about the size

00:14:07,060 --> 00:14:13,839
of the bika team and it's small and

00:14:11,520 --> 00:14:15,880
usually Scott jumps between different

00:14:13,839 --> 00:14:17,800
things pulling pulling with wherever he

00:14:15,880 --> 00:14:19,300
can we've had many bigger fans at -

00:14:17,800 --> 00:14:21,790
cigarette outside but we've also had

00:14:19,300 --> 00:14:24,250
critics right attempting to satisfy this

00:14:21,790 --> 00:14:27,070
decade of kind of internal tools on than

00:14:24,250 --> 00:14:28,839
that and analytics along with all of the

00:14:27,070 --> 00:14:31,120
new innovation especially from within

00:14:28,839 --> 00:14:33,040
the Python community was really hard and

00:14:31,120 --> 00:14:34,800
a bigger team found it just difficult to

00:14:33,040 --> 00:14:37,120
keep up with the pace of innovation on

00:14:34,800 --> 00:14:39,250
ipython and then on later Jupiter it

00:14:37,120 --> 00:14:41,110
seemed everyday there's this kind of new

00:14:39,250 --> 00:14:45,670
feature that our internal and external

00:14:41,110 --> 00:14:48,150
users really really wanted and to take

00:14:45,670 --> 00:14:51,190
advantage of but it wasn't available so

00:14:48,150 --> 00:14:53,830
we saw the internal use of ipython just

00:14:51,190 --> 00:14:56,470
keep growing and then Jupiter came along

00:14:53,830 --> 00:14:58,120
and like everything just blew up we

00:14:56,470 --> 00:15:02,650
began to doubt whether we could really

00:14:58,120 --> 00:15:04,990
keep up you see ok so from our open

00:15:02,650 --> 00:15:06,310
source world we learned a huge amount it

00:15:04,990 --> 00:15:10,420
was the first open source project that

00:15:06,310 --> 00:15:13,690
we've done that we now done 20 less more

00:15:10,420 --> 00:15:15,610
well 15 something like that including

00:15:13,690 --> 00:15:16,750
some really great analytics one of the

00:15:15,610 --> 00:15:19,089
things that we've learned from the open

00:15:16,750 --> 00:15:20,950
sourcing was it's actually very

00:15:19,089 --> 00:15:22,990
difficult to build a community around a

00:15:20,950 --> 00:15:25,300
project developed by a single entity

00:15:22,990 --> 00:15:28,120
right we all have day jobs it's actually

00:15:25,300 --> 00:15:30,400
really really hard now we go where's at

00:15:28,120 --> 00:15:31,690
2 Sigma I you know my hat goes off to

00:15:30,400 --> 00:15:33,740
him to be able to build a panas

00:15:31,690 --> 00:15:36,350
community it's a stunning you

00:15:33,740 --> 00:15:38,750
it's stunningly difficult to do that and

00:15:36,350 --> 00:15:40,520
while a number of beaker users did grow

00:15:38,750 --> 00:15:43,090
over its three-year life that growth

00:15:40,520 --> 00:15:48,500
just paled into comparison with Jupiter

00:15:43,090 --> 00:15:51,350
because we were Bayesian we assumed that

00:15:48,500 --> 00:15:53,990
the for the future looks a little bit

00:15:51,350 --> 00:15:57,350
like the past and if you look at ipython

00:15:53,990 --> 00:15:59,750
and Jupiter before 2014 there's a

00:15:57,350 --> 00:16:02,540
beautiful straight line going up a

00:15:59,750 --> 00:16:05,780
little bit it's great if you look at the

00:16:02,540 --> 00:16:08,180
adoption of Jupiter after 2014 it just

00:16:05,780 --> 00:16:09,860
takes a right turn and go straight up to

00:16:08,180 --> 00:16:12,740
the roof there's an exponential and so

00:16:09,860 --> 00:16:14,060
we completely miss that so building a

00:16:12,740 --> 00:16:16,250
community is difficult and more

00:16:14,060 --> 00:16:18,560
difficult once a large community forms

00:16:16,250 --> 00:16:23,920
around a single great idea it's just

00:16:18,560 --> 00:16:23,920
hard to for a single entity to keep pace

00:16:24,460 --> 00:16:30,050
so so while the implementation wasn't

00:16:28,610 --> 00:16:32,000
growing this we imagined the vision was

00:16:30,050 --> 00:16:34,070
right so you everyone in this room and

00:16:32,000 --> 00:16:36,080
everyone in this building has affirmed

00:16:34,070 --> 00:16:38,150
that the power of this original idea for

00:16:36,080 --> 00:16:40,370
an integrated environment there was

00:16:38,150 --> 00:16:41,900
language agnostic and in fact looking at

00:16:40,370 --> 00:16:44,720
the talks featured here in Jupiter con

00:16:41,900 --> 00:16:47,510
most implicitly or explicitly support

00:16:44,720 --> 00:16:49,880
part of this vision that Bunsen was so

00:16:47,510 --> 00:16:54,230
as I said that good Bayesian updates

00:16:49,880 --> 00:16:56,090
their priors and once that is done you

00:16:54,230 --> 00:16:58,100
know exactly where you're meant to go

00:16:56,090 --> 00:17:01,130
next so if you don't like statistics

00:16:58,100 --> 00:17:03,260
let's talk about compute if the original

00:17:01,130 --> 00:17:05,600
idea of beaker was kind of a fork from

00:17:03,260 --> 00:17:07,520
the early days of Python it became

00:17:05,600 --> 00:17:10,610
fairly clear that it was time to merge

00:17:07,520 --> 00:17:16,040
and join back with the original

00:17:10,610 --> 00:17:18,020
community and so somewhere late last

00:17:16,040 --> 00:17:19,520
year we realized that really to succeed

00:17:18,020 --> 00:17:21,200
in delivering the vision which is what

00:17:19,520 --> 00:17:23,420
we wanted to do we have to kind of roll

00:17:21,200 --> 00:17:25,100
back into into the mainstream and so

00:17:23,420 --> 00:17:28,120
there we go that was the pivot it was

00:17:25,100 --> 00:17:30,680
really hard for many many many reasons

00:17:28,120 --> 00:17:33,050
you know but as with any scientific

00:17:30,680 --> 00:17:35,030
theory the idea is to take the best of

00:17:33,050 --> 00:17:36,950
what you've got and apply that to the

00:17:35,030 --> 00:17:38,870
future we knew the beaker was good and

00:17:36,950 --> 00:17:41,300
so the next thing to do was to bring

00:17:38,870 --> 00:17:43,700
that goodness to the Jupiter community

00:17:41,300 --> 00:17:45,680
and when Jupiter lab was announced we

00:17:43,700 --> 00:17:47,270
saw the opportunity to jump on board and

00:17:45,680 --> 00:17:50,180
present beaker

00:17:47,270 --> 00:17:53,750
not as a standalone editor but as a set

00:17:50,180 --> 00:17:56,150
of extensions to the to Jupiter lab in a

00:17:53,750 --> 00:17:58,040
much larger community but you know it's

00:17:56,150 --> 00:18:00,650
pretty scary to take three years of work

00:17:58,040 --> 00:18:03,380
and just pivot into a completely new

00:18:00,650 --> 00:18:06,350
direction however I guess I'm standing

00:18:03,380 --> 00:18:08,150
here to tell you that we did it and not

00:18:06,350 --> 00:18:11,690
only we did it did we do it but it's

00:18:08,150 --> 00:18:13,310
kind of fairly impressive number so this

00:18:11,690 --> 00:18:15,860
number which is one of my favorite

00:18:13,310 --> 00:18:19,970
numbers in the whole talk ninety-four

00:18:15,860 --> 00:18:24,230
percent of the code that's in the bkx

00:18:19,970 --> 00:18:26,360
extension comes from beaker so we had to

00:18:24,230 --> 00:18:28,400
add six week I say we every time I say

00:18:26,360 --> 00:18:31,370
we it scott and TZ who are sitting in

00:18:28,400 --> 00:18:34,340
the front room had to add about six six

00:18:31,370 --> 00:18:35,960
percent of what currently is in the bkx

00:18:34,340 --> 00:18:37,640
extension is the glue that we needed to

00:18:35,960 --> 00:18:39,140
roll this into Jupiter lab and that's

00:18:37,640 --> 00:18:40,790
really a testament to the a prize that

00:18:39,140 --> 00:18:43,070
super lab presents for its extension and

00:18:40,790 --> 00:18:45,440
the way that we built the original

00:18:43,070 --> 00:18:47,090
beaker in terms of the original beaker

00:18:45,440 --> 00:18:49,130
code we actually lifted that 94%

00:18:47,090 --> 00:18:51,290
represents about 50% of the original

00:18:49,130 --> 00:18:52,820
code what we threw out were actually the

00:18:51,290 --> 00:18:54,980
things that were just actually not that

00:18:52,820 --> 00:18:57,020
good at which is all of the UI and the

00:18:54,980 --> 00:18:58,730
infrastructure around the UI to present

00:18:57,020 --> 00:19:01,610
what we really wanted to present which

00:18:58,730 --> 00:19:03,590
was actually the cells so the pivot we

00:19:01,610 --> 00:19:04,820
believe it's great for our product that

00:19:03,590 --> 00:19:07,280
we can get introduced to a much wider

00:19:04,820 --> 00:19:09,170
audience and we hope it's good for the

00:19:07,280 --> 00:19:11,330
Jupiter community - so what do we have

00:19:09,170 --> 00:19:14,600
in beaker X a few things from bumps and

00:19:11,330 --> 00:19:16,910
data discovery a java kernel true

00:19:14,600 --> 00:19:18,770
polyglot analysis some great time series

00:19:16,910 --> 00:19:20,990
visualizations and some of the

00:19:18,770 --> 00:19:26,030
collaborative publication that we talked

00:19:20,990 --> 00:19:28,310
about but we get so much more because we

00:19:26,030 --> 00:19:30,200
get you we get the Jupiter community and

00:19:28,310 --> 00:19:31,880
that's a unique addition to our

00:19:30,200 --> 00:19:34,760
strengths of 2 Sigma we want to leverage

00:19:31,880 --> 00:19:36,320
the expertise that you bring while bring

00:19:34,760 --> 00:19:38,510
our own expertise in this case our

00:19:36,320 --> 00:19:42,590
polyglot support and widgets for data

00:19:38,510 --> 00:19:45,020
discovery and time series plotting but

00:19:42,590 --> 00:19:48,380
in addition to the features that we

00:19:45,020 --> 00:19:50,870
bring with beaker eggs the project is

00:19:48,380 --> 00:19:53,000
about continuing to to grow on the path

00:19:50,870 --> 00:19:55,730
the two sigma set out which is to

00:19:53,000 --> 00:19:57,410
continue to meaningfully engage and grow

00:19:55,730 --> 00:19:59,060
with the open source community at large

00:19:57,410 --> 00:20:01,190
and more specifically with the jupiter

00:19:59,060 --> 00:20:02,690
community so we formed partnership

00:20:01,190 --> 00:20:04,760
to that in with continuing with none

00:20:02,690 --> 00:20:07,280
focus and the Jupiter core community and

00:20:04,760 --> 00:20:10,490
we consider that to all be part of bkx

00:20:07,280 --> 00:20:11,810
this February for example Brian Granger

00:20:10,490 --> 00:20:13,400
and Jason grant and Chris Cole but

00:20:11,810 --> 00:20:15,800
joined us a to Sigma for a hackathon

00:20:13,400 --> 00:20:18,530
where we had about 30 or 40 of our

00:20:15,800 --> 00:20:20,570
developers hacking on projects and

00:20:18,530 --> 00:20:24,140
ipython Jupiter lab and some of the I PI

00:20:20,570 --> 00:20:26,810
widgets so that was pretty cool but the

00:20:24,140 --> 00:20:29,150
challenge is actually much much larger

00:20:26,810 --> 00:20:31,220
than bouncing or Jupiter to Sigma or the

00:20:29,150 --> 00:20:32,960
community because the challenge here is

00:20:31,220 --> 00:20:35,420
to bring the research methodology of

00:20:32,960 --> 00:20:37,010
science into the 21st century we have

00:20:35,420 --> 00:20:39,140
this unique opportunity not only to

00:20:37,010 --> 00:20:41,690
contribute to this ecosystem but to

00:20:39,140 --> 00:20:43,190
actually shape it not all scientists or

00:20:41,690 --> 00:20:44,570
engineers I had this conversation with

00:20:43,190 --> 00:20:47,330
my brother an or a couple of years ago

00:20:44,570 --> 00:20:50,030
he is a professor of neuroscience in

00:20:47,330 --> 00:20:51,770
Minnesota who had a 10 gigabyte data set

00:20:50,030 --> 00:20:53,600
that's small by anyone's standards and

00:20:51,770 --> 00:20:56,300
he wanted to do some alysus on it but it

00:20:53,600 --> 00:20:59,090
didn't fit on his MacBook so I said

00:20:56,300 --> 00:21:04,310
that's easy just you know grab a couple

00:20:59,090 --> 00:21:06,080
of instances from ec2 put up an HDFS

00:21:04,310 --> 00:21:08,210
cluster you know you can write some Pig

00:21:06,080 --> 00:21:11,750
and like Bob's your uncle and he looked

00:21:08,210 --> 00:21:15,590
at me and he said goddamnit I'm a

00:21:11,750 --> 00:21:17,480
scientist not an engineer he had no idea

00:21:15,590 --> 00:21:20,120
he's like I don't want to deal with all

00:21:17,480 --> 00:21:22,850
of that stuff we need we can do that we

00:21:20,120 --> 00:21:24,890
can provide it for them we want to help

00:21:22,850 --> 00:21:26,870
create this open science publishing

00:21:24,890 --> 00:21:28,970
platform of the 21st century that will

00:21:26,870 --> 00:21:31,940
be interactive and will be complete

00:21:28,970 --> 00:21:34,010
something that will genuinely let

00:21:31,940 --> 00:21:36,620
scientists of today collaborate with

00:21:34,010 --> 00:21:39,620
each other not just across space but

00:21:36,620 --> 00:21:42,170
also across time imagine being able to

00:21:39,620 --> 00:21:45,020
kind of fork a copy of Ramanujan's know

00:21:42,170 --> 00:21:49,640
books in the 21st century and kind of

00:21:45,020 --> 00:21:51,290
work on them that's pretty cool so we've

00:21:49,640 --> 00:21:53,690
got about 10 minutes left 10 minutes

00:21:51,290 --> 00:21:55,250
left 15 excellent awesome

00:21:53,690 --> 00:21:56,900
you might even get chance for a couple

00:21:55,250 --> 00:21:58,550
of questions at the end just do a quick

00:21:56,900 --> 00:22:00,860
dive on be correct and I'm gonna ask TZ

00:21:58,550 --> 00:22:02,390
to come up and do some demos with me so

00:22:00,860 --> 00:22:06,320
the Jupiter architecture that may or may

00:22:02,390 --> 00:22:07,520
not be familiar to you all is it's

00:22:06,320 --> 00:22:09,140
fairly straightforward

00:22:07,520 --> 00:22:11,720
you have your JavaScript web clients and

00:22:09,140 --> 00:22:14,060
widgets that speak via HTTP or

00:22:11,720 --> 00:22:14,809
WebSockets to the the Python web server

00:22:14,060 --> 00:22:18,679
which

00:22:14,809 --> 00:22:20,149
then talks to its colonel 0 mq or or sig

00:22:18,679 --> 00:22:22,249
in to interrupt it and some of the

00:22:20,149 --> 00:22:24,379
widgets you know also work on the back

00:22:22,249 --> 00:22:27,320
end what we've done is extend this just

00:22:24,379 --> 00:22:30,110
a little bit so we have added our own

00:22:27,320 --> 00:22:31,639
widgets tables and plots and then on the

00:22:30,110 --> 00:22:34,669
front end we've added this notion of

00:22:31,639 --> 00:22:36,769
Auto translation and publish and then on

00:22:34,669 --> 00:22:38,389
the on the back end at the back we have

00:22:36,769 --> 00:22:43,970
multiple kernels and we do that with

00:22:38,389 --> 00:22:45,559
this kind of two to two pieces of

00:22:43,970 --> 00:22:48,350
architecture a base kernel which

00:22:45,559 --> 00:22:49,700
contains about 90% of code that you

00:22:48,350 --> 00:22:51,950
would need to do a kernel in any

00:22:49,700 --> 00:22:54,409
language and in a little bit for

00:22:51,950 --> 00:22:58,249
language specific stuff in this case the

00:22:54,409 --> 00:23:01,249
example there is groovy so so let's hit

00:22:58,249 --> 00:23:05,029
the demo right let me see if I can bring

00:23:01,249 --> 00:23:09,700
up the demo ok so we're going to do

00:23:05,029 --> 00:23:09,700
three demos very quickly the first one

00:23:09,909 --> 00:23:15,499
the first one is going to demonstrate

00:23:13,369 --> 00:23:17,179
really the whole process finding data

00:23:15,499 --> 00:23:19,999
doing the analysis and then publishing

00:23:17,179 --> 00:23:22,369
in kind of one fell swoop the second one

00:23:19,999 --> 00:23:23,659
is going to demonstrate some of this

00:23:22,369 --> 00:23:26,720
polyglot nurse in this particular

00:23:23,659 --> 00:23:30,070
instance between Python and JavaScript

00:23:26,720 --> 00:23:32,840
and the third one will demonstrate a new

00:23:30,070 --> 00:23:34,549
a new kernel in this case the groovy

00:23:32,840 --> 00:23:36,710
kernel all right so let's hit hit hit

00:23:34,549 --> 00:23:39,499
the first one this is data catalog demo

00:23:36,710 --> 00:23:42,200
so what you can see is that up where

00:23:39,499 --> 00:23:44,539
where the the the mouse is pointing

00:23:42,200 --> 00:23:46,100
we've added really three buttons the

00:23:44,539 --> 00:23:48,200
first one is the common share button

00:23:46,100 --> 00:23:50,480
that will allow you to share this the

00:23:48,200 --> 00:23:52,519
second one is the data browser and the

00:23:50,480 --> 00:23:55,309
third one which is more technical allows

00:23:52,519 --> 00:23:58,429
you to run the initialization cells so

00:23:55,309 --> 00:24:00,980
let's let's pull up the data catalog so

00:23:58,429 --> 00:24:02,869
so this is a standard we have to go back

00:24:00,980 --> 00:24:04,730
right so this is a standard catalog you

00:24:02,869 --> 00:24:07,669
can search and you can have multiple

00:24:04,730 --> 00:24:09,169
providers in in each one of these tiles

00:24:07,669 --> 00:24:10,970
it's just a little bit about the data

00:24:09,169 --> 00:24:12,619
sets that are currently loaded along

00:24:10,970 --> 00:24:15,159
with any unique identifiers so a lot of

00:24:12,619 --> 00:24:18,950
these are from quantal but we found one

00:24:15,159 --> 00:24:20,690
from a company called an enigma that

00:24:18,950 --> 00:24:23,299
provides public data sets in this case

00:24:20,690 --> 00:24:24,649
the global food prices database and when

00:24:23,299 --> 00:24:26,990
you click through on a data set you get

00:24:24,649 --> 00:24:28,370
to see some metadata about the data set

00:24:26,990 --> 00:24:30,440
there may be a link

00:24:28,370 --> 00:24:33,050
to the public website it's so you can

00:24:30,440 --> 00:24:37,520
kind of click back through and see what

00:24:33,050 --> 00:24:39,080
the data look like originally my

00:24:37,520 --> 00:24:41,270
favorite part here is though at the

00:24:39,080 --> 00:24:42,710
bottom there's a Python code example and

00:24:41,270 --> 00:24:45,920
one of the nice things about this is you

00:24:42,710 --> 00:24:49,730
can literally drag and drop this into

00:24:45,920 --> 00:24:51,800
your into your demo and then you can

00:24:49,730 --> 00:24:54,620
just execute it and if we do it and it

00:24:51,800 --> 00:24:58,150
works then we might get there you go you

00:24:54,620 --> 00:25:01,580
get the data pulled from the provider so

00:24:58,150 --> 00:25:04,550
so that's a way of using data inline

00:25:01,580 --> 00:25:06,620
into your into your notebook we're going

00:25:04,550 --> 00:25:09,170
to pull from quando the rupee dollar

00:25:06,620 --> 00:25:11,090
exchange rate so let's do that it's a

00:25:09,170 --> 00:25:12,740
straightforward exchange rate it has an

00:25:11,090 --> 00:25:16,220
open and a closed price so we can plot

00:25:12,740 --> 00:25:18,620
those with matplotlib and that's fine

00:25:16,220 --> 00:25:20,300
the standard matplotlib it's very static

00:25:18,620 --> 00:25:23,660
you can kind of drag it but you kind of

00:25:20,300 --> 00:25:25,460
end up just dragging the the image and

00:25:23,660 --> 00:25:27,470
so this is the beaker plot libraries

00:25:25,460 --> 00:25:29,150
their programmatic pot libraries they're

00:25:27,470 --> 00:25:30,950
fairly simple to use they're pretty

00:25:29,150 --> 00:25:34,160
straightforward and the API is available

00:25:30,950 --> 00:25:36,950
in every kernel that we actually provide

00:25:34,160 --> 00:25:39,800
and if you this one just does the same

00:25:36,950 --> 00:25:42,830
kind of thing and it's a fully

00:25:39,800 --> 00:25:46,520
interactive chart so you have crosshairs

00:25:42,830 --> 00:25:47,809
you get tooltips if you hover over if

00:25:46,520 --> 00:25:49,910
you hover over one of the data points

00:25:47,809 --> 00:25:52,309
there are some tooltips there you can

00:25:49,910 --> 00:25:54,350
zoom in and zoom out and you can drag

00:25:52,309 --> 00:25:56,480
double clicking on the image pulls you

00:25:54,350 --> 00:25:58,130
back to where you where you started from

00:25:56,480 --> 00:26:00,110
and then you can also filter and

00:25:58,130 --> 00:26:01,700
highlight very easily the various

00:26:00,110 --> 00:26:03,830
different data sets and then if you

00:26:01,700 --> 00:26:06,920
really want hitting a right

00:26:03,830 --> 00:26:09,980
right-clicking on this image will allow

00:26:06,920 --> 00:26:14,950
you to save this as a PNG and so fairly

00:26:09,980 --> 00:26:17,390
straightforward nice kind of stuff so

00:26:14,950 --> 00:26:18,650
let's keep going now we want to publish

00:26:17,390 --> 00:26:20,000
this we've done the analysis we want to

00:26:18,650 --> 00:26:26,540
publish this we can push the buttons at

00:26:20,000 --> 00:26:28,610
the top mmm let's see there you go so it

00:26:26,540 --> 00:26:31,280
talks in the backend to github standard

00:26:28,610 --> 00:26:33,860
gist that you see except we've changed

00:26:31,280 --> 00:26:36,380
NB viewer a little bit to allow you full

00:26:33,860 --> 00:26:39,920
access to the widgets that we have in

00:26:36,380 --> 00:26:41,780
the plotting library so that's a kind of

00:26:39,920 --> 00:26:42,169
a rough-and-ready very quick let's do

00:26:41,780 --> 00:26:44,509
the now

00:26:42,169 --> 00:26:45,649
and publish and grab the data let's have

00:26:44,509 --> 00:26:48,109
a look at the second one this is the

00:26:45,649 --> 00:26:50,119
polyglot demo so here what we're going

00:26:48,109 --> 00:26:52,039
to do is we're going to use pandas we're

00:26:50,119 --> 00:26:53,629
going to use the Python kernel to pull

00:26:52,039 --> 00:26:55,549
in data in this case the data that we're

00:26:53,629 --> 00:26:57,710
going to pull in happens to be someone's

00:26:55,549 --> 00:27:00,499
sleep resources and we want to plot this

00:26:57,710 --> 00:27:04,909
but we want to plot this say using d3 so

00:27:00,499 --> 00:27:08,119
if I'm using d3 I need some magic to be

00:27:04,909 --> 00:27:09,859
able to get data into the JavaScript and

00:27:08,119 --> 00:27:11,509
we do that by having this global

00:27:09,859 --> 00:27:12,590
variable that we call BK X and we're so

00:27:11,509 --> 00:27:15,590
we're putting the sleep and weight

00:27:12,590 --> 00:27:17,899
values into there and then using the

00:27:15,590 --> 00:27:21,499
standard Jupiter magic we can we can

00:27:17,899 --> 00:27:23,330
both get HTML but here in the d3 portion

00:27:21,499 --> 00:27:25,639
you'll note there you go where is it BK

00:27:23,330 --> 00:27:28,039
x to sleep and BK x awake we can just

00:27:25,639 --> 00:27:29,960
refer directly to them and again these

00:27:28,039 --> 00:27:33,289
appear naturally in whatever language

00:27:29,960 --> 00:27:34,730
you are using so the kind of the global

00:27:33,289 --> 00:27:37,009
variable can be accessed the way would

00:27:34,730 --> 00:27:38,690
and hey it's a fairly static d3 image of

00:27:37,009 --> 00:27:41,419
someone who clearly gets a lot more

00:27:38,690 --> 00:27:43,759
sleep and I do there you go all right

00:27:41,419 --> 00:27:47,090
but d3 is a little bit more exciting

00:27:43,759 --> 00:27:49,489
than that so we can write some Python

00:27:47,090 --> 00:27:51,139
here that will just create an arbitrary

00:27:49,489 --> 00:27:52,909
graph like a social network or something

00:27:51,139 --> 00:27:55,519
like that and then when we run that

00:27:52,909 --> 00:27:57,679
through d3 and by the way these come

00:27:55,519 --> 00:27:59,509
straight out of the d3 tutorial you end

00:27:57,679 --> 00:28:02,389
up with a lovely d3 widget that you can

00:27:59,509 --> 00:28:06,980
kind of drag around the way you would

00:28:02,389 --> 00:28:09,950
Jack anything around finally the third

00:28:06,980 --> 00:28:11,690
demo here is the groovy kernel demo so

00:28:09,950 --> 00:28:13,999
it's just one of the kernels you can see

00:28:11,690 --> 00:28:17,029
it's groovy but we also have closure

00:28:13,999 --> 00:28:20,960
Java Kotlin Python and sequel that you

00:28:17,029 --> 00:28:22,999
can just start notebooks in we talked

00:28:20,960 --> 00:28:25,369
about plotting this is the table display

00:28:22,999 --> 00:28:27,980
this table display I am told is also now

00:28:25,369 --> 00:28:30,440
available in Python right awesome python

00:28:27,980 --> 00:28:32,330
and all of the jvm languages so it's a

00:28:30,440 --> 00:28:34,269
fairly straightforward table display but

00:28:32,330 --> 00:28:37,039
this one also allows for some

00:28:34,269 --> 00:28:39,200
programmatic interaction so in this

00:28:37,039 --> 00:28:41,450
example we just set some string formats

00:28:39,200 --> 00:28:43,330
column orders and they may be shrink

00:28:41,450 --> 00:28:46,460
down the number of columns that we want

00:28:43,330 --> 00:28:47,779
but it's interactive right so that the

00:28:46,460 --> 00:28:50,029
first thing that you can do is you can

00:28:47,779 --> 00:28:51,950
kind of move columns around you can

00:28:50,029 --> 00:28:54,590
click on any column and then sort it up

00:28:51,950 --> 00:28:55,940
and down and if you click on the left

00:28:54,590 --> 00:28:58,220
hand side of each column

00:28:55,940 --> 00:29:00,320
this large menu of things you can do the

00:28:58,220 --> 00:29:03,289
most exciting one being the filter by

00:29:00,320 --> 00:29:04,909
expression and their $1 refers to the

00:29:03,289 --> 00:29:07,879
value in this column so you can just

00:29:04,909 --> 00:29:10,789
filter for I was it Bala greater than 8

00:29:07,879 --> 00:29:14,090
okay there you go and you can reference

00:29:10,789 --> 00:29:16,100
other columns by name as well so you can

00:29:14,090 --> 00:29:23,509
look for values in this column greater

00:29:16,100 --> 00:29:24,860
than the values in the m3 call the other

00:29:23,509 --> 00:29:26,870
thing that you can do with this one is

00:29:24,860 --> 00:29:28,940
you can do what you always do with

00:29:26,870 --> 00:29:31,850
tables which is select and copy so if

00:29:28,940 --> 00:29:34,879
you select it you can then copy using

00:29:31,850 --> 00:29:37,100
the menu up there table menu to the

00:29:34,879 --> 00:29:41,299
clipboard and then pull up your favorite

00:29:37,100 --> 00:29:43,370
spreadsheet and paste and if you pace

00:29:41,299 --> 00:29:46,519
you'll notice that why we swiped just

00:29:43,370 --> 00:29:48,230
the values we copied over also the names

00:29:46,519 --> 00:29:53,320
of the columns which is kind of fairly

00:29:48,230 --> 00:29:56,480
useful you can also download to to CSV

00:29:53,320 --> 00:29:58,129
the tables also allow visual indications

00:29:56,480 --> 00:29:58,970
so you can just do straightforward

00:29:58,129 --> 00:30:01,039
heatmaps

00:29:58,970 --> 00:30:04,370
but we've also built in the ability to

00:30:01,039 --> 00:30:05,750
do data paths just hit B on any column

00:30:04,370 --> 00:30:09,649
and it will bring up the data bar for

00:30:05,750 --> 00:30:11,990
that column so more bkx plotting this is

00:30:09,649 --> 00:30:16,190
side-by-side histograms always very

00:30:11,990 --> 00:30:18,289
useful and finally are kind of one of

00:30:16,190 --> 00:30:20,149
the exciting things is adding custom

00:30:18,289 --> 00:30:22,970
actions so Jupiter allows you to add

00:30:20,149 --> 00:30:25,519
tags to different cells and what you can

00:30:22,970 --> 00:30:27,649
do in the plotting library so in this

00:30:25,519 --> 00:30:30,289
case run tag it's being associated with

00:30:27,649 --> 00:30:31,879
a cell below is you can associate the

00:30:30,289 --> 00:30:34,190
onclick with different tags so you can

00:30:31,879 --> 00:30:35,899
run code in a different cell by clicking

00:30:34,190 --> 00:30:37,879
on a graph so in this particular

00:30:35,899 --> 00:30:39,379
instance let's see if you click on one

00:30:37,879 --> 00:30:42,350
of the yellow ones what happens boom

00:30:39,379 --> 00:30:46,429
orange ok I see yellow maybe it's orange

00:30:42,350 --> 00:30:47,960
and so this allows you to kind of build

00:30:46,429 --> 00:30:52,370
really interesting apps on your

00:30:47,960 --> 00:30:56,500
notebooks so thank you very much TZ core

00:30:52,370 --> 00:30:56,500
developer in in in beaker X

00:30:58,910 --> 00:31:09,710
okay so we're in get up and we have a

00:31:07,280 --> 00:31:11,360
release candidate on github so we're

00:31:09,710 --> 00:31:12,680
kind of ready to rock I guess that's the

00:31:11,360 --> 00:31:14,540
announcement that we're making here is

00:31:12,680 --> 00:31:16,400
that the bigger X extensions are

00:31:14,540 --> 00:31:23,240
available for Jupiter today and for

00:31:16,400 --> 00:31:27,020
Jupiter lab pip install pip install soon

00:31:23,240 --> 00:31:29,300
so you know we've pivoted from our

00:31:27,020 --> 00:31:31,940
original plan for bika into these

00:31:29,300 --> 00:31:36,020
extensions for Jupiter but there is one

00:31:31,940 --> 00:31:37,790
thing that I didn't explain and that is

00:31:36,020 --> 00:31:40,850
the original choice of the name of

00:31:37,790 --> 00:31:42,920
bunsen for our project so Robert Bunsen

00:31:40,850 --> 00:31:44,180
besides you know I was a bit of a

00:31:42,920 --> 00:31:47,180
chemist blowing things up when I was a

00:31:44,180 --> 00:31:50,570
kid besides inventing a fair amount of

00:31:47,180 --> 00:31:52,940
science is renowned maybe not renowned

00:31:50,570 --> 00:31:56,180
but he is actually one of the few

00:31:52,940 --> 00:31:58,960
scientists that I ever found who never

00:31:56,180 --> 00:32:01,340
never booked a patent in his whole life

00:31:58,960 --> 00:32:03,080
because he believed that all science

00:32:01,340 --> 00:32:05,180
should be free and so when we were

00:32:03,080 --> 00:32:08,210
looking around for a kind of a name for

00:32:05,180 --> 00:32:09,620
this project I felt that kind of echoed

00:32:08,210 --> 00:32:12,140
with everything that we wanted to do

00:32:09,620 --> 00:32:14,090
that science science research open

00:32:12,140 --> 00:32:16,790
science should just be available and

00:32:14,090 --> 00:32:22,510
free for all of humanity to kind of move

00:32:16,790 --> 00:32:22,510
forward together so thank you very much

00:32:27,029 --> 00:32:31,360
so I have like two and a half minutes

00:32:29,289 --> 00:32:32,590
for questions yeah like four three four

00:32:31,360 --> 00:32:34,570
minutes for questions but the good thing

00:32:32,590 --> 00:32:37,389
is that we're sponsoring the coffee

00:32:34,570 --> 00:32:38,169
break so we're gonna be around so if we

00:32:37,389 --> 00:32:43,389
don't get a chance to answer your

00:32:38,169 --> 00:32:45,570
questions come and find us you get to

00:32:43,389 --> 00:32:45,570
choose

00:32:59,670 --> 00:33:07,650
right right so I will sew on one foot

00:33:06,180 --> 00:33:10,050
and then Scott's going to jump in if he

00:33:07,650 --> 00:33:12,120
if he thinks that I've misrepresented

00:33:10,050 --> 00:33:14,820
but on one foot we have a go there is a

00:33:12,120 --> 00:33:18,000
global variable that allows you to pass

00:33:14,820 --> 00:33:20,160
data from one cell to another but the

00:33:18,000 --> 00:33:22,500
way we have cells in different languages

00:33:20,160 --> 00:33:24,560
using the magic because that is the way

00:33:22,500 --> 00:33:26,790
jupiter allows you to effectively

00:33:24,560 --> 00:33:30,030
override the language of the cell is

00:33:26,790 --> 00:33:36,060
speaking the data is through the big x

00:33:30,030 --> 00:33:40,470
that's correct not yet not yet and it

00:33:36,060 --> 00:33:42,480
will likely do so because you can

00:33:40,470 --> 00:33:45,810
imagine that if i'm trying to pass data

00:33:42,480 --> 00:33:48,030
from a python to an r i I don't want to

00:33:45,810 --> 00:33:50,760
do in a data frame I want to do it in a

00:33:48,030 --> 00:33:53,030
you know format that is agnostic to the

00:33:50,760 --> 00:33:53,030
data

00:34:16,220 --> 00:34:26,309
right now a simpler version Jesus JSON

00:34:22,879 --> 00:34:28,669
so that that part is still pretty much

00:34:26,309 --> 00:34:28,669
in progress

00:34:41,159 --> 00:34:44,159
yeah

00:34:46,089 --> 00:34:49,089
sorry

00:35:33,170 --> 00:35:36,820
yeah everything is open Souls

00:36:14,060 --> 00:36:22,950
so yeah I gave the whole talk in in

00:36:20,280 --> 00:36:26,490
English right so we generally tend to

00:36:22,950 --> 00:36:30,630
use one language and I would expect that

00:36:26,490 --> 00:36:35,670
and I don't expect multiple cells sorry

00:36:30,630 --> 00:36:38,010
I guess my 40 minutes around however you

00:36:35,670 --> 00:36:40,290
know there is a real use case for this

00:36:38,010 --> 00:36:44,400
that we talked about at length of the

00:36:40,290 --> 00:36:45,930
beginning which is education so if you

00:36:44,400 --> 00:36:47,940
do your first data science course in

00:36:45,930 --> 00:36:50,130
Python where you learn all of your file

00:36:47,940 --> 00:36:51,480
manipulation and then you move to take

00:36:50,130 --> 00:36:54,210
an advanced data science source in

00:36:51,480 --> 00:36:56,610
MATLAB why would you want to learn file

00:36:54,210 --> 00:36:57,780
manipulation in Mather why wouldn't you

00:36:56,610 --> 00:37:00,240
want to just do everything you did in

00:36:57,780 --> 00:37:01,860
Python and then use MATLAB for for the

00:37:00,240 --> 00:37:04,020
stuff that it's good at because it's you

00:37:01,860 --> 00:37:07,440
know or are like I'm not gonna go there

00:37:04,020 --> 00:37:09,270
but so I think there are valid use cases

00:37:07,440 --> 00:37:13,230
where you would write some significant

00:37:09,270 --> 00:37:15,840
portion in one language before moving to

00:37:13,230 --> 00:37:17,400
another okay I want to stop there it

00:37:15,840 --> 00:37:19,920
sounds like Matt and his colleagues will

00:37:17,400 --> 00:37:21,300
be around if you have more questions but

00:37:19,920 --> 00:37:23,280
I want to thank them and let you know

00:37:21,300 --> 00:37:26,580
that we're having a break coffee and

00:37:23,280 --> 00:37:28,520
things upstairs and talks will resume at

00:37:26,580 --> 00:37:33,010
4:10 thank you Matt thank you

00:37:28,520 --> 00:37:33,010

YouTube URL: https://www.youtube.com/watch?v=dtPGwooNH28


