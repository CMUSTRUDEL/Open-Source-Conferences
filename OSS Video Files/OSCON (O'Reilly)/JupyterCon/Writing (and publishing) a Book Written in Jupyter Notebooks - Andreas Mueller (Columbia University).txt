Title: Writing (and publishing) a Book Written in Jupyter Notebooks - Andreas Mueller (Columbia University)
Publication date: 2017-11-08
Playlist: JupyterCon
Description: 
	The Jupyter Notebook can combine narrative, code, and graphics—the ideal combination for teaching anything programming related. That's why Andreas Müller chose to write his book, Introduction to Machine Learning with Python, in a Jupyter notebook. However, going from notebook to book was not easy. Andreas shares challenges and tricks for converting notebooks for print.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:01,579 --> 00:00:05,870
today's a little bit more of a rant than

00:00:03,860 --> 00:00:07,790
an instruction I have to admit but so

00:00:05,870 --> 00:00:11,240
this is about my experience in writing a

00:00:07,790 --> 00:00:13,010
book using Jupiter notebooks for some

00:00:11,240 --> 00:00:14,420
reason I didn't make it on Fernando's

00:00:13,010 --> 00:00:16,100
slides even though this was one of the

00:00:14,420 --> 00:00:20,540
first ones I think it's earlier than any

00:00:16,100 --> 00:00:22,670
of the ones that he had up there so yeah

00:00:20,540 --> 00:00:26,950
I wrote this book and if you want one

00:00:22,670 --> 00:00:30,500
well if 25 of you want one they can come

00:00:26,950 --> 00:00:35,239
today at 3:20 to do really booth because

00:00:30,500 --> 00:00:37,840
I'm going to sign them so this thing is

00:00:35,239 --> 00:00:40,970
completely written in Jupiter notebooks

00:00:37,840 --> 00:00:42,950
and somewhere talk about how did I do

00:00:40,970 --> 00:00:45,230
that what was the process of this this

00:00:42,950 --> 00:00:48,860
is obviously published with O'Reilly and

00:00:45,230 --> 00:00:50,570
so a couple of the things that I'm

00:00:48,860 --> 00:00:52,730
talking about will be specific to do

00:00:50,570 --> 00:00:53,690
Riley workflow in a sense but most of

00:00:52,730 --> 00:00:56,450
what I'm talking about

00:00:53,690 --> 00:00:58,670
will be pretty general and generalizable

00:00:56,450 --> 00:01:02,020
to other like just generally writing a

00:00:58,670 --> 00:01:04,699
book so this is not about book book

00:01:02,020 --> 00:01:09,469
because book book didn't exist book book

00:01:04,699 --> 00:01:12,679
is a new alpha version library to write

00:01:09,469 --> 00:01:15,499
a book with notebooks by Thomas and

00:01:12,679 --> 00:01:18,829
clover I hope I don't miss Francis last

00:01:15,499 --> 00:01:20,359
name so that it was now at them so this

00:01:18,829 --> 00:01:23,600
is his solution to writing a book and

00:01:20,359 --> 00:01:25,219
it's probably better than my rant so you

00:01:23,600 --> 00:01:29,359
should check it out if you actually plan

00:01:25,219 --> 00:01:30,829
on writing a book but I want to talk to

00:01:29,359 --> 00:01:35,689
you through what the process was for me

00:01:30,829 --> 00:01:38,599
and things you will run into so the

00:01:35,689 --> 00:01:41,599
general outline of how does happen and

00:01:38,599 --> 00:01:45,619
and how the book was created is I

00:01:41,599 --> 00:01:47,329
started writing notebooks then the main

00:01:45,619 --> 00:01:50,179
tool to get a notebook into any other

00:01:47,329 --> 00:01:52,779
format is Mb convert and I'm gonna talk

00:01:50,179 --> 00:01:56,990
a bit more about how and B convert works

00:01:52,779 --> 00:01:59,630
then the format that O'Reilly uses

00:01:56,990 --> 00:02:03,560
internally is called ASCII doc which is

00:01:59,630 --> 00:02:05,599
like a layout editing language which is

00:02:03,560 --> 00:02:08,360
served intermediate and then from that

00:02:05,599 --> 00:02:09,680
they have their compilation publishing

00:02:08,360 --> 00:02:14,090
system which is called Atlas which

00:02:09,680 --> 00:02:15,410
creates a PDF and epub from that you can

00:02:14,090 --> 00:02:17,630
also think of that

00:02:15,410 --> 00:02:19,790
like could have do similar things with

00:02:17,630 --> 00:02:21,470
instead of going from a notebook to sq

00:02:19,790 --> 00:02:24,980
doc you could go from a notebook to lay

00:02:21,470 --> 00:02:28,160
tech and then create a PDF or anything

00:02:24,980 --> 00:02:29,720
else you could create from lay tech so

00:02:28,160 --> 00:02:31,700
basically you want to have some

00:02:29,720 --> 00:02:34,040
intermediate format that you then render

00:02:31,700 --> 00:02:36,740
to something publishable and this

00:02:34,040 --> 00:02:38,180
asciidoc is sort of I mean it wasn't

00:02:36,740 --> 00:02:39,440
familiar with it before but it's what

00:02:38,180 --> 00:02:43,520
all our Riley books are written in as

00:02:39,440 --> 00:02:46,580
far so now so and really core to this

00:02:43,520 --> 00:02:48,980
process is Mb converge and you might

00:02:46,580 --> 00:02:52,970
have used MB convert before it's a

00:02:48,980 --> 00:02:54,620
really great tool so what it does is it

00:02:52,970 --> 00:02:56,960
helps you to convert notebooks into

00:02:54,620 --> 00:02:59,240
something else and it can convert

00:02:56,960 --> 00:03:01,630
notebooks to notebooks and run some

00:02:59,240 --> 00:03:04,160
pre-processing on em which is like

00:03:01,630 --> 00:03:06,980
clearing the output doing some

00:03:04,160 --> 00:03:08,900
conversions or running all the cells you

00:03:06,980 --> 00:03:12,650
can use it actually for to do continuous

00:03:08,900 --> 00:03:14,390
integration on notebooks because you can

00:03:12,650 --> 00:03:19,460
just use it to run notebooks without

00:03:14,390 --> 00:03:21,530
having like any front for hand you can

00:03:19,460 --> 00:03:24,800
also use it to convert to plain Python

00:03:21,530 --> 00:03:27,350
and the other thing you can do is you

00:03:24,800 --> 00:03:30,740
can convert to many other formats via

00:03:27,350 --> 00:03:33,530
pan doc so pen doc is this great library

00:03:30,740 --> 00:03:37,100
written in Haskell so that no one else

00:03:33,530 --> 00:03:40,340
can edit it and today's it has a track

00:03:37,100 --> 00:03:42,530
factor of 1 and it's the sole author I

00:03:40,340 --> 00:03:44,810
forgot his name but I don't think anyone

00:03:42,530 --> 00:03:48,050
else really contributes and I think

00:03:44,810 --> 00:03:49,520
Pascal is one of the reasons but this is

00:03:48,050 --> 00:03:53,990
really at the core of and become work

00:03:49,520 --> 00:03:56,510
because this is basically a document

00:03:53,990 --> 00:03:58,370
conversion but built on top of markdown

00:03:56,510 --> 00:04:02,360
so the internal format of this is

00:03:58,370 --> 00:04:04,160
markdown and it can go from a whole

00:04:02,360 --> 00:04:06,140
bunch of different formats to a whole

00:04:04,160 --> 00:04:09,110
bunch of different formats and so this

00:04:06,140 --> 00:04:13,370
is used by and B convert to create HTML

00:04:09,110 --> 00:04:17,420
or latex or restructure text or any

00:04:13,370 --> 00:04:19,489
other output format and so this is sort

00:04:17,420 --> 00:04:23,750
of what pen doc is under the hood what

00:04:19,489 --> 00:04:26,479
does the actual conversions another very

00:04:23,750 --> 00:04:29,080
critical component is ginger ginger is

00:04:26,479 --> 00:04:31,270
way too small well this is the

00:04:29,080 --> 00:04:33,970
template for converting to markdown so

00:04:31,270 --> 00:04:37,270
Jinja is a templating engine in python

00:04:33,970 --> 00:04:42,490
that allows you to create documents from

00:04:37,270 --> 00:04:46,300
templates and so apart from so Pam doc

00:04:42,490 --> 00:04:48,719
what it does is it converts like say an

00:04:46,300 --> 00:04:52,960
image tag in latex to an image in

00:04:48,719 --> 00:04:54,219
markdown or an HTML so this converts

00:04:52,960 --> 00:04:57,819
actual chunks of code

00:04:54,219 --> 00:05:01,150
what Jinja is used for is doing a

00:04:57,819 --> 00:05:03,340
semantic layout so you say okay this is

00:05:01,150 --> 00:05:04,750
what I want my inputs out to be

00:05:03,340 --> 00:05:07,270
represented s this is what I want my

00:05:04,750 --> 00:05:09,310
output cell to be my output to your each

00:05:07,270 --> 00:05:11,169
presented s this is what you should do

00:05:09,310 --> 00:05:12,520
with the code I should format it this is

00:05:11,169 --> 00:05:15,849
what you should do with the numbering

00:05:12,520 --> 00:05:18,819
and so on this is the preamble so this

00:05:15,849 --> 00:05:27,550
really is used to put together the whole

00:05:18,819 --> 00:05:28,419
structure of the document so - I want to

00:05:27,550 --> 00:05:34,960
do it give you a little bit more of an

00:05:28,419 --> 00:05:37,389
overview of what how and be convert puts

00:05:34,960 --> 00:05:43,860
these together so this is a simplified

00:05:37,389 --> 00:05:46,509
version of the and B convert workflow so

00:05:43,860 --> 00:05:48,759
actually when I started on this I really

00:05:46,509 --> 00:05:50,710
had no idea about and B convert and so I

00:05:48,759 --> 00:05:51,639
asked you and we convert folks how the

00:05:50,710 --> 00:05:53,830
hell does this work

00:05:51,639 --> 00:05:55,539
and so min was very helpful and put

00:05:53,830 --> 00:05:57,279
together an academic chair document it

00:05:55,539 --> 00:05:58,990
explains everything in a lot of detail

00:05:57,279 --> 00:06:01,599
so if you want to get started with MB

00:05:58,990 --> 00:06:04,180
convert which is a lot of fun check out

00:06:01,599 --> 00:06:09,779
the document on the architecture of my

00:06:04,180 --> 00:06:13,719
covert but so a very sort of high-level

00:06:09,779 --> 00:06:16,240
overview of how it works is if you want

00:06:13,719 --> 00:06:18,789
to convert to some format like you want

00:06:16,240 --> 00:06:21,400
you to convert your notebook to HTML or

00:06:18,789 --> 00:06:23,889
latex you write an exporter

00:06:21,400 --> 00:06:26,229
there's many exporters already for all

00:06:23,889 --> 00:06:29,379
the formats that you can go to the

00:06:26,229 --> 00:06:33,789
exporter takes in a notebook so the JSON

00:06:29,379 --> 00:06:35,949
I PI and B file then it applies a bunch

00:06:33,789 --> 00:06:38,919
of pre-processors pre-processors are

00:06:35,949 --> 00:06:40,899
something that upright on a notebook and

00:06:38,919 --> 00:06:42,370
basically output something that a

00:06:40,899 --> 00:06:42,520
similar to a notebook like a collection

00:06:42,370 --> 00:06:44,740
of

00:06:42,520 --> 00:06:46,419
cells and these preprocessors are

00:06:44,740 --> 00:06:48,849
something like clearing the output or

00:06:46,419 --> 00:06:50,169
executing it or converting the images or

00:06:48,849 --> 00:06:55,360
doing something else that has a notebook

00:06:50,169 --> 00:06:57,490
again as the output and then the main

00:06:55,360 --> 00:07:00,490
conversion actually happens with the

00:06:57,490 --> 00:07:04,389
ginger template so the template gives

00:07:00,490 --> 00:07:06,300
you the layout and the styling of the

00:07:04,389 --> 00:07:09,449
document that you want to create and

00:07:06,300 --> 00:07:13,210
then it could also contains filters and

00:07:09,449 --> 00:07:15,159
so filters are just functions that are

00:07:13,210 --> 00:07:18,610
applied to the things that are filled

00:07:15,159 --> 00:07:21,460
into a template and the filters are what

00:07:18,610 --> 00:07:23,319
actually does the conversion so if you

00:07:21,460 --> 00:07:25,030
write stuff in a notebook you write it

00:07:23,319 --> 00:07:27,849
in markdown usually that's sort of the

00:07:25,030 --> 00:07:31,990
standard thing to write in a notebook

00:07:27,849 --> 00:07:34,569
and so if you write a template for latex

00:07:31,990 --> 00:07:37,449
for example you say okay I want to have

00:07:34,569 --> 00:07:40,690
the input be represent in this way take

00:07:37,449 --> 00:07:42,490
the input in markdown and then apply a

00:07:40,690 --> 00:07:45,009
filter that's the markdown to latech

00:07:42,490 --> 00:07:47,139
conversion and this market related

00:07:45,009 --> 00:07:48,819
conversion will happen within pan doc

00:07:47,139 --> 00:07:51,969
and this will do the actual conversion

00:07:48,819 --> 00:07:53,440
of the content so this is the template

00:07:51,969 --> 00:07:54,940
and the filters in the template are

00:07:53,440 --> 00:07:57,130
basically where all the magic happens

00:07:54,940 --> 00:07:59,710
and then you get some output document

00:07:57,130 --> 00:08:02,409
and there's a couple more parts there's

00:07:59,710 --> 00:08:04,240
like post processors and writers but

00:08:02,409 --> 00:08:06,039
they're usually you can just do the

00:08:04,240 --> 00:08:09,310
defaults for this the thing where you

00:08:06,039 --> 00:08:11,789
really want to work on our the exporter

00:08:09,310 --> 00:08:15,159
which is sort of a class that

00:08:11,789 --> 00:08:17,860
orchestrates everything for for any

00:08:15,159 --> 00:08:19,750
conversion and the templates which gives

00:08:17,860 --> 00:08:21,580
you the layout the styling and the

00:08:19,750 --> 00:08:25,330
filters that help you to create the

00:08:21,580 --> 00:08:26,949
content all right so all this was in

00:08:25,330 --> 00:08:29,650
place if I like oh my god this is

00:08:26,949 --> 00:08:35,079
amazing I can just do this I just do and

00:08:29,650 --> 00:08:38,649
be convert to convert my my duper

00:08:35,079 --> 00:08:41,709
notebook to markdown sorry to ask you

00:08:38,649 --> 00:08:44,410
doc because asciidoc is what Riley wants

00:08:41,709 --> 00:08:48,339
unfortunately there's no and be

00:08:44,410 --> 00:08:50,920
converted to ASCII dog so first thing I

00:08:48,339 --> 00:08:54,010
need you to do is at asciidoc as an

00:08:50,920 --> 00:08:56,140
output format for and be convert so now

00:08:54,010 --> 00:08:58,300
you can do and be convert

00:08:56,140 --> 00:09:01,320
- - - Eska doc and you get an esky duck

00:08:58,300 --> 00:09:05,490
if you want to write in or write a book

00:09:01,320 --> 00:09:09,010
this was actually pretty easy because

00:09:05,490 --> 00:09:11,830
pan doc already has conversion to

00:09:09,010 --> 00:09:13,660
asciidoc so the thing that under the

00:09:11,830 --> 00:09:16,060
hood does the actual conversion supports

00:09:13,660 --> 00:09:18,970
asciidoc so I basically had my work cut

00:09:16,060 --> 00:09:22,480
out for me the only things that I needed

00:09:18,970 --> 00:09:25,990
to do was write a class it says okay I

00:09:22,480 --> 00:09:27,550
want to export to ask you doc I want me

00:09:25,990 --> 00:09:30,430
to write a template that has like the

00:09:27,550 --> 00:09:34,870
boilerplate for the sq doc and sort of

00:09:30,430 --> 00:09:37,890
some of the layouting and then I in the

00:09:34,870 --> 00:09:40,540
template I need to put the filters that

00:09:37,890 --> 00:09:42,640
convert the markdown that's in a

00:09:40,540 --> 00:09:44,020
notebook to the ASCII doc but I can do

00:09:42,640 --> 00:09:47,980
this by a panic which already has

00:09:44,020 --> 00:09:50,350
everything built in alright so that was

00:09:47,980 --> 00:09:51,850
actually really easy that I mean never

00:09:50,350 --> 00:09:53,980
like some pickups because I wasn't so

00:09:51,850 --> 00:09:55,720
familiar with a big convert but it took

00:09:53,980 --> 00:09:57,520
me like three days or something it's

00:09:55,720 --> 00:10:00,250
like oh my god now I have a converter

00:09:57,520 --> 00:10:02,530
from duper notebooks to ask you doc I

00:10:00,250 --> 00:10:05,520
can now write Riley books intrapreneur

00:10:02,530 --> 00:10:05,520
it's amazing

00:10:05,910 --> 00:10:11,890
unfortunately this was the easy part

00:10:07,990 --> 00:10:13,630
and this ya didn't really solve most of

00:10:11,890 --> 00:10:19,780
the problems in writing a book

00:10:13,630 --> 00:10:25,780
interpreter so let's step back a little

00:10:19,780 --> 00:10:28,240
bit so what we're doing is ironed hood

00:10:25,780 --> 00:10:31,180
we have a notebook and we use pan doc

00:10:28,240 --> 00:10:35,620
that processes it and outputs an ASCII

00:10:31,180 --> 00:10:38,500
dog the problem with this is that panda

00:10:35,620 --> 00:10:40,420
is really built on markdown so the

00:10:38,500 --> 00:10:44,860
internal representation of the date of

00:10:40,420 --> 00:10:46,720
your document is in markdown markdown of

00:10:44,860 --> 00:10:49,870
all of the formats that I talked about

00:10:46,720 --> 00:10:54,490
like latex asciidoc restructure text

00:10:49,870 --> 00:10:57,820
HTML is the one that has it's like the

00:10:54,490 --> 00:11:00,850
poorest by far markdown cannot express

00:10:57,820 --> 00:11:04,780
anything basically and so that means I

00:11:00,850 --> 00:11:06,850
run a conversion from my notebook to a

00:11:04,780 --> 00:11:08,410
sea dog through something that cannot

00:11:06,850 --> 00:11:09,620
express many of the concepts that I

00:11:08,410 --> 00:11:11,930
actually need

00:11:09,620 --> 00:11:15,470
and this is a fundamental limitation of

00:11:11,930 --> 00:11:17,390
how and be converts currently done or a

00:11:15,470 --> 00:11:21,020
fundamental limitation of what panned

00:11:17,390 --> 00:11:25,520
out des in a way so and I want to point

00:11:21,020 --> 00:11:27,290
out a couple of these so I mean there's

00:11:25,520 --> 00:11:29,060
some extensions to markdown but there's

00:11:27,290 --> 00:11:33,500
like a standard core markdown that

00:11:29,060 --> 00:11:35,320
basically is what pan doc implements so

00:11:33,500 --> 00:11:38,089
one that really get me by surprise

00:11:35,320 --> 00:11:42,320
there's no role spam or call spamming

00:11:38,089 --> 00:11:43,760
tables in markdown so that I learnt I

00:11:42,320 --> 00:11:45,470
didn't have time to put an image but I

00:11:43,760 --> 00:11:48,710
think you know what it is you want a

00:11:45,470 --> 00:11:51,220
cell in a column in a table to spend

00:11:48,710 --> 00:11:54,830
like two rows or two columns that

00:11:51,220 --> 00:11:56,870
doesn't exist in markdown that exists in

00:11:54,830 --> 00:12:00,650
all of the other formats but it doesn't

00:11:56,870 --> 00:12:03,860
exist in markdown so I can't have it in

00:12:00,650 --> 00:12:05,690
my book basically that seems a pretty

00:12:03,860 --> 00:12:07,790
strong limitation I'm so I'm used to

00:12:05,690 --> 00:12:09,920
writing Stephan lay tech I like road

00:12:07,790 --> 00:12:11,240
like a PhD seasonal a tech like Tech has

00:12:09,920 --> 00:12:14,270
like all the bells and whistles you can

00:12:11,240 --> 00:12:15,860
imagine and now I can't do a colspan in

00:12:14,270 --> 00:12:18,589
my book I was a little bit sad about

00:12:15,860 --> 00:12:22,280
that this is actually one but I didn't

00:12:18,589 --> 00:12:25,580
find a good solution for another real

00:12:22,280 --> 00:12:28,390
problem with markdown is there's no

00:12:25,580 --> 00:12:30,920
concept of internal referencing and

00:12:28,390 --> 00:12:34,220
there's no concept of like auto

00:12:30,920 --> 00:12:36,589
numbering and latex you have like it

00:12:34,220 --> 00:12:38,120
numbers two chapters for you and numbers

00:12:36,589 --> 00:12:40,010
or figures for you numbers or equations

00:12:38,120 --> 00:12:43,940
for you then you can reference them from

00:12:40,010 --> 00:12:45,230
anywhere in document and in researcher

00:12:43,940 --> 00:12:47,300
text you have something similar you can

00:12:45,230 --> 00:12:49,600
put a tag somewhere name can say see

00:12:47,300 --> 00:12:52,850
section X you can't do that in markdown

00:12:49,600 --> 00:12:55,310
in HTML you have links you can't really

00:12:52,850 --> 00:12:57,890
do that markdown markdown has links but

00:12:55,310 --> 00:13:01,250
it doesn't have a way to tag anything so

00:12:57,890 --> 00:13:04,490
there's no way to say see section X in

00:13:01,250 --> 00:13:12,500
markdown which is pretty fundamental to

00:13:04,490 --> 00:13:15,950
book I would say and then very related

00:13:12,500 --> 00:13:18,380
to this is you can't reference across

00:13:15,950 --> 00:13:21,500
documents because in markdown there's

00:13:18,380 --> 00:13:22,680
really no concept of documents you can

00:13:21,500 --> 00:13:24,990
have like hyperlink space

00:13:22,680 --> 00:13:27,860
Stickley but there's no tags inside

00:13:24,990 --> 00:13:30,870
documents anything that you can refer to

00:13:27,860 --> 00:13:33,600
so it's like markdown is like really

00:13:30,870 --> 00:13:37,080
actually really poor it's really nice to

00:13:33,600 --> 00:13:39,899
like writes a little couple of headers

00:13:37,080 --> 00:13:47,000
in your notebook but it's really bad for

00:13:39,899 --> 00:13:47,000
writing a book and the last thing that

00:13:47,360 --> 00:13:51,390
that was actually one of my biggest

00:13:49,230 --> 00:13:56,190
problems is there are no figure captions

00:13:51,390 --> 00:13:57,779
in markdown it's also very hard to

00:13:56,190 --> 00:14:00,260
express figures captions in a notebook

00:13:57,779 --> 00:14:02,970
actually so you could I thought about

00:14:00,260 --> 00:14:05,459
writing a notebook plugin that allows me

00:14:02,970 --> 00:14:06,959
to add captions to figures with them

00:14:05,459 --> 00:14:08,310
because I couldn't translate it through

00:14:06,959 --> 00:14:10,770
markdown and I didn't do that

00:14:08,310 --> 00:14:13,080
but think about it how if you write a

00:14:10,770 --> 00:14:15,120
book how would you add a caption to a

00:14:13,080 --> 00:14:17,430
figure usually if you use Metford lip

00:14:15,120 --> 00:14:20,430
usually have a title and then the title

00:14:17,430 --> 00:14:22,649
is part of your PNG and how the hell do

00:14:20,430 --> 00:14:28,050
you get that out of there if you want to

00:14:22,649 --> 00:14:32,940
what have it as like in the same font as

00:14:28,050 --> 00:14:36,270
all the stuff around it and I mean in

00:14:32,940 --> 00:14:37,709
your document so I mean if you do latex

00:14:36,270 --> 00:14:39,839
you could probably use ticks for this

00:14:37,709 --> 00:14:42,089
but if you want to have like a real

00:14:39,839 --> 00:14:43,560
caption explaining the figure there's

00:14:42,089 --> 00:14:46,770
not really any way to do this in a

00:14:43,560 --> 00:14:47,910
notebook and anyway to know off so here

00:14:46,770 --> 00:14:51,120
there's actually two problems the

00:14:47,910 --> 00:14:53,310
notebook can't express it and researcher

00:14:51,120 --> 00:14:57,930
text sorry and markdown can't express it

00:14:53,310 --> 00:15:00,720
so now you might say oh but if I write a

00:14:57,930 --> 00:15:02,640
notebook I can just use HTML everywhere

00:15:00,720 --> 00:15:04,470
like most people if they're Raja

00:15:02,640 --> 00:15:06,930
notebook they use mark 9 on some places

00:15:04,470 --> 00:15:10,650
then HTML and then light acts at another

00:15:06,930 --> 00:15:12,420
place and sure HTML has like I can put

00:15:10,650 --> 00:15:14,640
links to anything anywhere I can have

00:15:12,420 --> 00:15:19,140
nice table so I can format a lot I can

00:15:14,640 --> 00:15:23,120
put latex it around but the problem is

00:15:19,140 --> 00:15:25,940
that the duper notebooks are

00:15:23,120 --> 00:15:28,680
fundamentally a markdown

00:15:25,940 --> 00:15:31,160
document you can mix stuff in but sort

00:15:28,680 --> 00:15:34,800
of in general it's a markdown thing and

00:15:31,160 --> 00:15:36,240
so if you do and be convert and convert

00:15:34,800 --> 00:15:39,960
to a HTML page

00:15:36,240 --> 00:15:42,300
which is what and be viewer does and

00:15:39,960 --> 00:15:44,070
what many people do for like publishing

00:15:42,300 --> 00:15:46,860
a notebook on a blog or something like

00:15:44,070 --> 00:15:51,150
that it just passes through all the HTML

00:15:46,860 --> 00:15:53,580
and so you get a nice HTML render if you

00:15:51,150 --> 00:15:56,070
convert to anything else all the HTML

00:15:53,580 --> 00:15:58,320
gets just stripped out like if you have

00:15:56,070 --> 00:16:03,110
an HTML table in your notebook and you

00:15:58,320 --> 00:16:05,160
convert this to latex it's just gone

00:16:03,110 --> 00:16:06,990
that was quite surprising to me there's

00:16:05,160 --> 00:16:10,670
no warning there's no anything it's just

00:16:06,990 --> 00:16:14,670
any HTML context just gets stripped out

00:16:10,670 --> 00:16:16,470
and that's in a way it's a limitation of

00:16:14,670 --> 00:16:19,440
pan doc but also it's a reasonable

00:16:16,470 --> 00:16:23,040
limitation it meant I mean in I think in

00:16:19,440 --> 00:16:24,990
principle you could nest HTML inside

00:16:23,040 --> 00:16:29,250
markdown inside HTML inside markdown in

00:16:24,990 --> 00:16:33,480
the in a notebook which is like really

00:16:29,250 --> 00:16:34,980
hard to parse so it's okay to render I

00:16:33,480 --> 00:16:38,190
guess I mean they found some way to

00:16:34,980 --> 00:16:39,600
render it but trying to parse this and

00:16:38,190 --> 00:16:46,100
convert it to any other format is really

00:16:39,600 --> 00:16:49,350
hard so okay so that means actually

00:16:46,100 --> 00:16:52,020
rocking the book I can only use real

00:16:49,350 --> 00:16:53,460
like pure markdown because otherwise

00:16:52,020 --> 00:17:01,410
it's just gonna get stripped out if I

00:16:53,460 --> 00:17:04,740
convert it alright so a lot of barriers

00:17:01,410 --> 00:17:07,860
there some of them are relatively easy

00:17:04,740 --> 00:17:09,690
to overcome because of the power of the

00:17:07,860 --> 00:17:13,710
templating engine and power of the

00:17:09,690 --> 00:17:15,420
filters basically filters are where

00:17:13,710 --> 00:17:17,310
conversion happens as I mentioned and

00:17:15,420 --> 00:17:21,480
you can add your own filters which means

00:17:17,310 --> 00:17:24,750
you can add arbitrary new syntax to the

00:17:21,480 --> 00:17:27,600
notebook so this is how a credit

00:17:24,750 --> 00:17:31,290
internal references basically I said

00:17:27,600 --> 00:17:33,620
that this is the filter to create

00:17:31,290 --> 00:17:38,610
internal references when converting from

00:17:33,620 --> 00:17:40,290
markdown to ask you doc because I was

00:17:38,610 --> 00:17:44,940
concerned about converting to asciidoc

00:17:40,290 --> 00:17:46,650
and basically whenever this is like one

00:17:44,940 --> 00:17:50,100
extension of markdown that exists out

00:17:46,650 --> 00:17:53,470
there and basically it says if the

00:17:50,100 --> 00:17:56,140
target and the reference starts with the

00:17:53,470 --> 00:18:00,520
hash it's an internal reference and then

00:17:56,140 --> 00:18:02,440
it will replace that in the sq duck with

00:18:00,520 --> 00:18:04,480
an internal reference so you can do it

00:18:02,440 --> 00:18:06,700
any up basically you can create language

00:18:04,480 --> 00:18:11,500
exemptions like this just by replacing

00:18:06,700 --> 00:18:13,390
during the conversion but then this

00:18:11,500 --> 00:18:16,870
means I created my custom flavor of

00:18:13,390 --> 00:18:20,320
markdown which is maybe not not great

00:18:16,870 --> 00:18:23,050
from like a portability standpoint but

00:18:20,320 --> 00:18:26,080
still I didn't have any way to insert

00:18:23,050 --> 00:18:28,120
reference points I could have added

00:18:26,080 --> 00:18:30,070
another new syntax to add reference

00:18:28,120 --> 00:18:32,830
points but my reference points were

00:18:30,070 --> 00:18:34,690
already added put in there by my editors

00:18:32,830 --> 00:18:39,790
so I didn't really need to worry about

00:18:34,690 --> 00:18:42,520
that so the all kinds of references are

00:18:39,790 --> 00:18:47,910
pretty easy to do by just extending the

00:18:42,520 --> 00:18:50,830
syntax I could have tried to do this for

00:18:47,910 --> 00:18:55,120
tables but I would mean I would need to

00:18:50,830 --> 00:18:57,420
create a new syntax for tables with row

00:18:55,120 --> 00:19:00,640
spans and call spans in markdown and

00:18:57,420 --> 00:19:05,860
then I need to write a filter that

00:19:00,640 --> 00:19:07,990
actually converts it to the table in SQL

00:19:05,860 --> 00:19:10,600
and I didn't really want to write

00:19:07,990 --> 00:19:12,820
something that actually part parts is

00:19:10,600 --> 00:19:14,850
marked down to asciidoc so I didn't do

00:19:12,820 --> 00:19:14,850
that

00:19:15,060 --> 00:19:18,910
yeah and similarly for the for a figure

00:19:17,650 --> 00:19:21,490
captions I didn't really have a

00:19:18,910 --> 00:19:23,860
workaround so if you have any idea of

00:19:21,490 --> 00:19:27,190
how to add figures captions to figures

00:19:23,860 --> 00:19:28,020
in a notebook in a reasonable way I'm

00:19:27,190 --> 00:19:30,880
all yours

00:19:28,020 --> 00:19:33,270
if anyone for anyone that wants to write

00:19:30,880 --> 00:19:33,270
a new book

00:19:37,129 --> 00:19:44,909
so but I think most of the books that

00:19:40,019 --> 00:19:46,889
for them to put up on a slide in the

00:19:44,909 --> 00:19:51,539
morning where actually they didn't go

00:19:46,889 --> 00:19:54,749
notebook to asciidoc to to book they

00:19:51,539 --> 00:19:57,960
went notebook to markdown then there's a

00:19:54,749 --> 00:20:00,960
markdown to ask you doc like proprietary

00:19:57,960 --> 00:20:05,789
script that already uses and then from

00:20:00,960 --> 00:20:08,909
asciidoc to to the published book I

00:20:05,789 --> 00:20:11,460
basically cut out the going through

00:20:08,909 --> 00:20:13,109
actual markdown in between and which

00:20:11,460 --> 00:20:14,940
allowed me to do like some other things

00:20:13,109 --> 00:20:19,169
by having this adding the Esqueda

00:20:14,940 --> 00:20:24,359
converter to and be converge but so yeah

00:20:19,169 --> 00:20:26,489
there's all these issues so a couple of

00:20:24,359 --> 00:20:28,229
lessons are learned in this so for first

00:20:26,489 --> 00:20:30,629
lessons was MB convert is really great

00:20:28,229 --> 00:20:32,580
and I love and be convert and it's

00:20:30,629 --> 00:20:34,320
really easy to write your own exporters

00:20:32,580 --> 00:20:37,109
it's really easy to write your own

00:20:34,320 --> 00:20:38,519
filters and it's really easy to write

00:20:37,109 --> 00:20:41,219
your own templates and you can configure

00:20:38,519 --> 00:20:42,539
so many things and now because I asked

00:20:41,219 --> 00:20:46,619
them they've created a lot of really

00:20:42,539 --> 00:20:48,599
great documentation about it though

00:20:46,619 --> 00:20:50,759
writing and good a great exporter is

00:20:48,599 --> 00:20:53,489
really hard because it's really hard to

00:20:50,759 --> 00:20:56,519
map all the different concepts in the

00:20:53,489 --> 00:20:58,440
input file format to the output file

00:20:56,519 --> 00:21:00,389
format in particular if there's no

00:20:58,440 --> 00:21:06,299
representation for it in markdown it's

00:21:00,389 --> 00:21:08,309
really tricky the other lessons that I

00:21:06,299 --> 00:21:10,289
find pandava is really not expressive

00:21:08,309 --> 00:21:12,599
enough to write a book it's probably a

00:21:10,289 --> 00:21:14,429
good choice for doing conversion for

00:21:12,599 --> 00:21:16,830
jupiter notebooks because they are

00:21:14,429 --> 00:21:20,429
mostly relatively simple documents in a

00:21:16,830 --> 00:21:23,339
sense from a layout perspective but and

00:21:20,429 --> 00:21:26,879
so i guess we have to live with the fact

00:21:23,339 --> 00:21:31,649
and it's not great for writing books so

00:21:26,879 --> 00:21:33,599
I don't I don't really see how to like

00:21:31,649 --> 00:21:35,129
overcome this issue unless you want to

00:21:33,599 --> 00:21:38,820
write something like pen lock that has a

00:21:35,129 --> 00:21:42,779
richer internal representation but that

00:21:38,820 --> 00:21:44,460
means like writing parsers for like 10

00:21:42,779 --> 00:21:46,499
different document formats and

00:21:44,460 --> 00:21:49,339
conversions between them I don't see

00:21:46,499 --> 00:21:49,339
that happening any time soon

00:21:50,180 --> 00:21:55,980
and so yeah really I'm a really big fan

00:21:54,180 --> 00:21:57,450
of how the preprocessor energy and jet

00:21:55,980 --> 00:21:59,850
templates and the filters allow you to

00:21:57,450 --> 00:22:01,650
basically do anything you want with the

00:21:59,850 --> 00:22:03,480
notebooks and it's like really really

00:22:01,650 --> 00:22:04,890
simple as you solve maybe with my

00:22:03,480 --> 00:22:06,710
regular expression you can extend to

00:22:04,890 --> 00:22:09,630
syntax and what's possible in a notebook

00:22:06,710 --> 00:22:15,830
just by writing like one two line Python

00:22:09,630 --> 00:22:19,170
functions and another thing that I

00:22:15,830 --> 00:22:21,930
learned after I wrote everything is that

00:22:19,170 --> 00:22:25,560
so I I wrote one notebook per chapter

00:22:21,930 --> 00:22:28,650
and now opening one of my notebooks

00:22:25,560 --> 00:22:33,540
takes like two minutes and that's

00:22:28,650 --> 00:22:35,730
obviously not great so definitely you

00:22:33,540 --> 00:22:38,460
want to split up notebooks into very

00:22:35,730 --> 00:22:40,920
small parts that makes a little bit

00:22:38,460 --> 00:22:45,090
harder with the interdependencies but it

00:22:40,920 --> 00:22:46,320
makes it much easier to load so I don't

00:22:45,090 --> 00:22:48,990
want someone and looked at my notebook

00:22:46,320 --> 00:22:55,470
to like have to wait for two minutes

00:22:48,990 --> 00:22:58,500
before they can interact with it another

00:22:55,470 --> 00:23:01,920
thing that's basically afterwards I

00:22:58,500 --> 00:23:03,270
found out is a problem is that this is a

00:23:01,920 --> 00:23:05,430
like writing a books a collaborative

00:23:03,270 --> 00:23:07,730
effort with your editors and your

00:23:05,430 --> 00:23:11,520
publishers and so on and none of them

00:23:07,730 --> 00:23:13,980
used to promote books they all use

00:23:11,520 --> 00:23:15,810
asciidoc or whatever intermediate format

00:23:13,980 --> 00:23:17,280
there is so now I have it

00:23:15,810 --> 00:23:19,590
I created a ski Docs from my notebook

00:23:17,280 --> 00:23:22,020
and then they edited it and now it

00:23:19,590 --> 00:23:25,800
sounds much better than my like German

00:23:22,020 --> 00:23:28,730
English makes writing but now the

00:23:25,800 --> 00:23:31,530
notebook if I change the notebooks then

00:23:28,730 --> 00:23:34,140
they mismatch with the edits so what I

00:23:31,530 --> 00:23:37,890
need to do is upstream the edits from

00:23:34,140 --> 00:23:40,410
the asked dock to do notebooks and I

00:23:37,890 --> 00:23:44,160
think it's possible but I haven't

00:23:40,410 --> 00:23:45,480
written anything to do it yet so

00:23:44,160 --> 00:23:48,240
basically you would need to have

00:23:45,480 --> 00:23:51,680
something that goes back from one of it

00:23:48,240 --> 00:23:54,720
from document to create a notebook and

00:23:51,680 --> 00:23:56,310
and be convert can only work with

00:23:54,720 --> 00:23:58,980
notebooks as inputs and not with

00:23:56,310 --> 00:24:01,470
anything else so theoretically I should

00:23:58,980 --> 00:24:02,250
be able to take an ASCII doc and create

00:24:01,470 --> 00:24:03,780
a notebook

00:24:02,250 --> 00:24:12,000
so I can incorporate the edits that I

00:24:03,780 --> 00:24:14,159
made all right so I think that's all I

00:24:12,000 --> 00:24:16,200
had a little bit early but so this was

00:24:14,159 --> 00:24:21,299
my rant about why I don't like panda

00:24:16,200 --> 00:24:55,789
anymore and so I'm happy to take any

00:24:21,299 --> 00:24:58,320
questions yes no I mean basically I

00:24:55,789 --> 00:25:01,919
mostly use markdown but basically I a

00:24:58,320 --> 00:25:03,919
this is so this line is extending

00:25:01,919 --> 00:25:07,980
markdown to support internal links or

00:25:03,919 --> 00:25:09,900
extending my format of markdown to this

00:25:07,980 --> 00:25:12,679
bike when I convert it to ASCII dark

00:25:09,900 --> 00:25:17,549
it'll have internal links in asciidoc

00:25:12,679 --> 00:25:18,690
and so most of my stuff was text but

00:25:17,549 --> 00:25:21,840
like the paint pointed I said like

00:25:18,690 --> 00:25:24,299
references and figure captions and

00:25:21,840 --> 00:25:26,039
basically the references I kind of

00:25:24,299 --> 00:25:28,080
solved by extending the markdown the

00:25:26,039 --> 00:25:29,190
figure references I didn't solve the

00:25:28,080 --> 00:25:31,169
course I don't know how to do it really

00:25:29,190 --> 00:25:35,450
I mean it would be possible but it was

00:25:31,169 --> 00:25:35,450
too much work I think

00:25:50,530 --> 00:25:56,950
I have no idea how epub works I mean I

00:25:55,300 --> 00:26:02,160
know that if it's anything like Kiev

00:25:56,950 --> 00:26:06,850
then no if it's anything more like a

00:26:02,160 --> 00:26:08,500
actual text format like HTML then I mean

00:26:06,850 --> 00:26:10,510
that's sort of this similar to the

00:26:08,500 --> 00:26:13,870
problem at the end going back and I

00:26:10,510 --> 00:26:17,620
think this should be possible but I

00:26:13,870 --> 00:26:20,830
don't think there's any like ready-made

00:26:17,620 --> 00:26:25,000
software for that I think there are some

00:26:20,830 --> 00:26:26,920
things that allow you to go from Python

00:26:25,000 --> 00:26:28,840
scripts to notebooks to split up a

00:26:26,920 --> 00:26:31,360
Python script into multiple cells but

00:26:28,840 --> 00:26:35,000
I'm not aware of like anything that goes

00:26:31,360 --> 00:26:36,270
from any document type to a notebook

00:26:35,000 --> 00:26:38,890
[Music]

00:26:36,270 --> 00:26:42,310
yeah I mean I think it should be

00:26:38,890 --> 00:26:43,960
possible depending on how you mark the

00:26:42,310 --> 00:26:45,280
code cells I mean the main thing that

00:26:43,960 --> 00:26:47,230
you want a notebook is to distinguish

00:26:45,280 --> 00:26:50,500
the code cells from the text cells right

00:26:47,230 --> 00:26:53,560
and if you have a consistent way to mark

00:26:50,500 --> 00:26:55,420
the code cells as code cells in your

00:26:53,560 --> 00:26:57,880
format then you're good in asciidoc

00:26:55,420 --> 00:27:01,600
there's just it says code and then the

00:26:57,880 --> 00:27:03,520
language around the code block so I know

00:27:01,600 --> 00:27:08,790
all the code blocks are Python and so I

00:27:03,520 --> 00:27:08,790
can just put in in a Python notebook

00:27:15,250 --> 00:27:19,630
Oh what's my background how was the idea

00:27:17,409 --> 00:27:23,919
started should write this book I mean

00:27:19,630 --> 00:27:24,970
this this book is about like doing

00:27:23,919 --> 00:27:25,510
machine learning with pison and

00:27:24,970 --> 00:27:27,640
scikit-learn

00:27:25,510 --> 00:27:31,150
and I've been working on scikit-learn

00:27:27,640 --> 00:27:33,520
since like 2011 or something and I have

00:27:31,150 --> 00:27:35,409
a PhD in machine learning and most books

00:27:33,520 --> 00:27:38,350
on machine learning when I started

00:27:35,409 --> 00:27:40,780
writing this at least were all basically

00:27:38,350 --> 00:27:43,750
great level CS books with a lot of

00:27:40,780 --> 00:27:46,299
formulas and this book doesn't very has

00:27:43,750 --> 00:27:49,289
no math it was like intentionally

00:27:46,299 --> 00:27:52,659
written to have no math so that it's

00:27:49,289 --> 00:27:54,159
aimed at people that have like a little

00:27:52,659 --> 00:27:56,130
bit of Python experience but nothing

00:27:54,159 --> 00:27:58,450
else so you can do machine learning

00:27:56,130 --> 00:27:59,620
whereas like most of the machine

00:27:58,450 --> 00:28:02,200
learning books require you much more

00:27:59,620 --> 00:28:04,390
there's I think now there's like there's

00:28:02,200 --> 00:28:06,400
one by a friend Sebastian RushCard it's

00:28:04,390 --> 00:28:09,760
like Python machine learning and there's

00:28:06,400 --> 00:28:11,970
and there's like one or two more Reilly

00:28:09,760 --> 00:28:15,730
books that also do a similar approach

00:28:11,970 --> 00:28:18,309
but yeah and just covers a lot of the

00:28:15,730 --> 00:28:20,440
second learn stuff without any math that

00:28:18,309 --> 00:28:23,380
was the idea and be Kurt is very coding

00:28:20,440 --> 00:28:26,549
heavy and it makes sense to have it in

00:28:23,380 --> 00:28:26,549
inside a notebook

00:28:47,650 --> 00:28:53,910
okay okay

00:28:59,080 --> 00:29:04,980
image is actually yes

00:29:09,610 --> 00:29:14,260
yes I was talking about figures say I'm

00:29:12,370 --> 00:29:15,790
generating yes I was mostly talking

00:29:14,260 --> 00:29:20,370
about figures I'm generating yes I saw

00:29:15,790 --> 00:29:20,370
the other one yeah

00:29:28,560 --> 00:29:39,170
really III think I asked the author but

00:29:31,440 --> 00:29:39,170
huh cool thank you okay

00:30:01,700 --> 00:30:04,360
cool

00:30:06,100 --> 00:30:09,640
yeah well thank you for your help with

00:30:07,810 --> 00:30:11,560
all of us I mean I think you like

00:30:09,640 --> 00:30:15,570
reviewed a couple of my stuff and answer

00:30:11,560 --> 00:30:15,570
to a bunch of my issues so thanks

00:30:27,860 --> 00:30:32,750
I think it's more common to convert to

00:30:30,200 --> 00:30:34,220
HTML which is much easier and because it

00:30:32,750 --> 00:30:36,080
allows you to use HTML inside the

00:30:34,220 --> 00:30:38,690
notebook and which is much more powerful

00:30:36,080 --> 00:30:41,450
and it's much more common that people

00:30:38,690 --> 00:30:46,120
share stuff by our web page then why are

00:30:41,450 --> 00:30:46,120
printed out book so

00:30:49,710 --> 00:30:53,890
my second slide was this is not about

00:30:52,120 --> 00:30:54,220
the book book package which I think will

00:30:53,890 --> 00:30:56,530
be great

00:30:54,220 --> 00:31:01,690
or is great I haven't really looked it's

00:30:56,530 --> 00:31:04,090
still pretty alpha at home record yeah

00:31:01,690 --> 00:31:06,600
that's so that's the one main problem it

00:31:04,090 --> 00:31:06,600
solves right

00:31:22,990 --> 00:31:27,839
structured for a

00:31:24,780 --> 00:31:27,839
[Music]

00:31:42,009 --> 00:31:50,690
so there's one book book written and

00:31:44,570 --> 00:31:52,459
book book right yes yeah and there's one

00:31:50,690 --> 00:31:56,200
book written with my ugly hacks which is

00:31:52,459 --> 00:31:59,679
mine and hopefully we can all converge

00:31:56,200 --> 00:31:59,679

YouTube URL: https://www.youtube.com/watch?v=DvEP3A-CzTQ


