Title: A Billion Stars in the Jupyter Notebook - Maarten Breddels
Publication date: 2017-11-08
Playlist: JupyterCon
Description: 
	Maarten Breddels (Kapteyn Astronomical Institute, University of Groningen) offers an overview of vaex, a Python library that enables calculating statistics for a billion samples per second on a regular n-dimensional grid, and ipyvolume, a library that enables volume and glyph rendering in Jupyter notebooks. Together, these libraries allow the interactive visualization and exploration of large, high-dimensional datasets in the Jupyter Notebook.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:01,619 --> 00:00:06,779
imagine diddles and so I worked at the

00:00:05,100 --> 00:00:10,110
I'm an astronomer working at T

00:00:06,779 --> 00:00:12,539
astronomical Institute and what they're

00:00:10,110 --> 00:00:14,369
seeing here are actually a billion stars

00:00:12,539 --> 00:00:15,840
from the Milky Way so I want to tell you

00:00:14,369 --> 00:00:19,769
how to work with the billion stars in

00:00:15,840 --> 00:00:22,900
the Jupiter node so my agenda is today

00:00:19,769 --> 00:00:25,580
to show you how to deal with the

00:00:22,900 --> 00:00:27,290
of a billion rows

00:00:25,580 --> 00:00:29,450
and secondly I want to show you how you

00:00:27,290 --> 00:00:31,920
can work with 3d feeling actually the

00:00:29,450 --> 00:00:33,930
interactive 3d

00:00:31,920 --> 00:00:36,420
so let me give you some some background

00:00:33,930 --> 00:00:38,309
why we were actually doing

00:00:36,420 --> 00:00:41,489
so I'm involved in the Gaia mission a

00:00:38,309 --> 00:00:43,920
Gaia satellite that was launched a few

00:00:41,489 --> 00:00:45,700
years ago and its mission is to really

00:00:43,920 --> 00:00:47,860
accurately measure the

00:00:45,700 --> 00:00:50,220
positions and velocities of stars in the

00:00:47,860 --> 00:00:50,220
Milky Way

00:00:50,230 --> 00:00:54,399
and it will do that for more than a

00:00:51,820 --> 00:00:57,629
billion billion stars we now have the

00:00:54,399 --> 00:01:00,059
first get a lot so we can do some

00:00:57,629 --> 00:01:03,090
we want to actually see this data

00:01:00,059 --> 00:01:05,339
to see if actually the data is okay for

00:01:03,090 --> 00:01:07,260
some quality checks so the the first

00:01:05,339 --> 00:01:09,930
thing you want to do is say make a plot

00:01:07,260 --> 00:01:11,700
so let's in the top then on let's make a

00:01:09,930 --> 00:01:14,130
scatterplot we'll start with a thousand

00:01:11,700 --> 00:01:16,320
stars I'll put all the sky positions of

00:01:14,130 --> 00:01:18,270
the stars you

00:01:16,320 --> 00:01:20,250
and actually you don't see

00:01:18,270 --> 00:01:23,750
so basically over plotting all the data

00:01:20,250 --> 00:01:26,369
so a better way would be to instead

00:01:23,750 --> 00:01:27,850
count on a grid how many stars there our

00:01:26,369 --> 00:01:30,340
needs

00:01:27,850 --> 00:01:32,970
of the grid cells and say cola rates

00:01:30,340 --> 00:01:35,280
according

00:01:32,970 --> 00:01:37,440
here to the logarithm of the number of

00:01:35,280 --> 00:01:38,980
stars and now you start to see much more

00:01:37,440 --> 00:01:42,660
features

00:01:38,980 --> 00:01:42,660
you see that we live in a dis key

00:01:43,250 --> 00:01:47,690
now galaxy you see some dust features

00:01:45,710 --> 00:01:49,580
blocking the light of the stars and you

00:01:47,690 --> 00:01:52,270
see the neighboring galaxies the LMC

00:01:49,580 --> 00:01:52,270
Large Magellanic

00:01:53,439 --> 00:01:56,890
but what's also important to what we're

00:01:55,210 --> 00:01:58,899
doing is phone in with some quality

00:01:56,890 --> 00:02:00,510
checks of the data you see that these

00:01:58,899 --> 00:02:02,280
artifacts you today

00:02:00,510 --> 00:02:04,030
you understand this this is because of

00:02:02,280 --> 00:02:06,040
the scanning nature of

00:02:04,030 --> 00:02:08,000
of the satellite but just being able to

00:02:06,040 --> 00:02:09,710
visualize this

00:02:08,000 --> 00:02:11,960
it's really helpful

00:02:09,710 --> 00:02:15,280
but can you do this interactively can be

00:02:11,960 --> 00:02:15,280
zoom in to the LMC

00:02:17,840 --> 00:02:22,340
so basically the question is how fast

00:02:20,360 --> 00:02:24,410
can you do this so let's do a really

00:02:22,340 --> 00:02:26,540
simple calculation so we have a billion

00:02:24,410 --> 00:02:29,780
objects and we want to

00:02:26,540 --> 00:02:32,000
use two columns we're using double

00:02:29,780 --> 00:02:34,879
precision that gives you a amount of

00:02:32,000 --> 00:02:36,409
data 15 gigabytes so let's look at the

00:02:34,879 --> 00:02:38,629
memory bandwidth of a reasonable

00:02:36,409 --> 00:02:40,430
computer that's enough to transfer this

00:02:38,629 --> 00:02:42,010
to the CPU and about

00:02:40,430 --> 00:02:44,440
so that shouldn't be a

00:02:42,010 --> 00:02:47,379
if you look at the CPU you only have a

00:02:44,440 --> 00:02:50,030
few cycles per object to do this

00:02:47,379 --> 00:02:51,470
intersect so you can't like

00:02:50,030 --> 00:02:54,340
complicated things you have to

00:02:51,470 --> 00:02:54,340
and really simple

00:02:56,090 --> 00:03:00,920
so what I show you here are

00:02:58,340 --> 00:03:02,630
and so density good still

00:03:00,920 --> 00:03:05,620
and if you can do this thing you can

00:03:02,630 --> 00:03:05,620
like zoom into the date

00:03:06,400 --> 00:03:09,640
but one important thing is how do you

00:03:08,049 --> 00:03:11,799
store the data if you're gonna do this

00:03:09,640 --> 00:03:14,909
in commerce seperated files it can take

00:03:11,799 --> 00:03:14,909
up to an hour to load

00:03:15,150 --> 00:03:20,250
to the most actually the best way I

00:03:17,519 --> 00:03:24,250
think to do this is to have it the data

00:03:20,250 --> 00:03:27,120
stored on this natively so it's the same

00:03:24,250 --> 00:03:27,120
as you would store it

00:03:27,500 --> 00:03:31,910
and we're using hdf5 for it but let's go

00:03:30,410 --> 00:03:33,440
over if you just

00:03:31,910 --> 00:03:35,930
normally read in the data so what

00:03:33,440 --> 00:03:38,099
happened to say this is your memory you

00:03:35,930 --> 00:03:40,409
allocate a piece of memory

00:03:38,099 --> 00:03:42,810
and then you're going to read from this

00:03:40,409 --> 00:03:43,760
to the actually the operating system

00:03:42,810 --> 00:03:47,569
cash

00:03:43,760 --> 00:03:49,230
the CPU gets a message accomplishes this

00:03:47,569 --> 00:03:51,030
to your

00:03:49,230 --> 00:03:53,160
it's actually not so smart you're

00:03:51,030 --> 00:03:55,209
wasting memory or cash and you're doing

00:03:53,160 --> 00:03:56,920
a memory copy that's not necessary

00:03:55,209 --> 00:03:59,370
so instead why can't we do it this way

00:03:56,920 --> 00:04:01,900
council came into like access the

00:03:59,370 --> 00:04:03,849
operating systems

00:04:01,900 --> 00:04:05,890
and that's something you get when you do

00:04:03,849 --> 00:04:08,170
memory mapping which is actually a

00:04:05,890 --> 00:04:10,390
pretty old technique but it can be

00:04:08,170 --> 00:04:13,730
really efficient and in this way we skip

00:04:10,390 --> 00:04:16,919
the copying of this 50 gigabytes of data

00:04:13,730 --> 00:04:19,310
and take up to a second

00:04:16,919 --> 00:04:23,130
it's okay now we can

00:04:19,310 --> 00:04:25,440
generate these 2d densities

00:04:23,130 --> 00:04:28,160
but let's generalize this we can also do

00:04:25,440 --> 00:04:28,160
one Minister

00:04:28,360 --> 00:04:31,819
more familiar actually with that

00:04:30,080 --> 00:04:34,130
but you can also go to higher dimensions

00:04:31,819 --> 00:04:35,960
let's analyze this even further

00:04:34,130 --> 00:04:39,790
and then you can use a rendering

00:04:35,960 --> 00:04:39,790
techniques as fully rendering

00:04:40,070 --> 00:04:43,540
and why not include zero-dimensional

00:04:41,540 --> 00:04:46,380
just

00:04:43,540 --> 00:04:46,380
objects are

00:04:46,500 --> 00:04:51,090
or generalize even further like can't we

00:04:49,140 --> 00:04:52,710
do like in this example on the right

00:04:51,090 --> 00:04:54,120
here we have the correlation coefficient

00:04:52,710 --> 00:04:56,110
between two

00:04:54,120 --> 00:04:59,580
columns crates

00:04:56,110 --> 00:04:59,580
you can also do it for one day

00:05:00,180 --> 00:05:05,150
show dimension

00:05:02,960 --> 00:05:07,040
Konan

00:05:05,150 --> 00:05:11,260
and for 3d you can think of going

00:05:07,040 --> 00:05:11,260
through slices instead of doing a 3d

00:05:11,420 --> 00:05:16,360
and in that sense you could also go to

00:05:13,160 --> 00:05:16,360
higher dimensions

00:05:17,150 --> 00:05:22,120
so that's what effects goes which is a

00:05:19,639 --> 00:05:22,120
bike

00:05:22,600 --> 00:05:28,170
you can think of it as Ponder's like not

00:05:25,510 --> 00:05:28,170
so advanced

00:05:29,849 --> 00:05:36,099
constraints but for a really large data

00:05:33,699 --> 00:05:40,599
sets and it's focused mostly on

00:05:36,099 --> 00:05:45,849
statistics in n-dimensional grits counts

00:05:40,599 --> 00:05:47,259
mean maximum standard deviation etc to

00:05:45,849 --> 00:05:49,090
get an idea on the performance so it

00:05:47,259 --> 00:05:54,340
does over a billion rows per second on a

00:05:49,090 --> 00:05:58,030
decent desktop computer and that's about

00:05:54,340 --> 00:06:00,939
50 times faster as Syfy's bin statistics

00:05:58,030 --> 00:06:03,460
and I see the data shade the people here

00:06:00,939 --> 00:06:06,729
I think it now has a data shade maybe

00:06:03,460 --> 00:06:10,930
slightly faster now than facts which is

00:06:06,729 --> 00:06:13,599
an alternative quite similar to fish but

00:06:10,930 --> 00:06:16,479
this is in a two year old MacBook Air so

00:06:13,599 --> 00:06:20,020
it's not so fast or for the demo we're

00:06:16,479 --> 00:06:21,759
not getting that performance but you

00:06:20,020 --> 00:06:24,069
also want visualization just having an

00:06:21,759 --> 00:06:26,500
umpire array but with values not so

00:06:24,069 --> 00:06:29,229
useful so there are some wrapping for

00:06:26,500 --> 00:06:31,569
some visualization libraries what kind

00:06:29,229 --> 00:06:34,810
of data can you think think of well I

00:06:31,569 --> 00:06:37,150
showed you astronomical data also dark

00:06:34,810 --> 00:06:41,680
metal simulations can be used same type

00:06:37,150 --> 00:06:45,129
of of data New York taxi dataset is one

00:06:41,680 --> 00:06:49,000
of the common examples of a large data

00:06:45,129 --> 00:06:52,379
set so let's continue with something you

00:06:49,000 --> 00:06:54,969
shouldn't do which is a live demo so

00:06:52,379 --> 00:06:59,319
I'll just show you how you can use the

00:06:54,969 --> 00:07:03,310
library so we'll import it will import

00:06:59,319 --> 00:07:04,930
facts numpy map lot lip and i want to

00:07:03,310 --> 00:07:07,839
say something about the reading of the

00:07:04,930 --> 00:07:10,240
data it's pretty flexible with what it

00:07:07,839 --> 00:07:11,069
can read but the best is would be to use

00:07:10,240 --> 00:07:13,930
hdf5

00:07:11,069 --> 00:07:17,020
there also other options can convert

00:07:13,930 --> 00:07:20,349
from pandas or SEO pie tables ascii

00:07:17,020 --> 00:07:22,479
comma separated file so let's open the

00:07:20,349 --> 00:07:23,469
New York taxi data set so this is for

00:07:22,479 --> 00:07:26,349
one year of data

00:07:23,469 --> 00:07:28,870
she said takes three seconds but it's

00:07:26,349 --> 00:07:31,029
just a loading of the library actually

00:07:28,870 --> 00:07:33,400
you see that it doesn't take any time at

00:07:31,029 --> 00:07:37,419
all to read a twenty three or open a

00:07:33,400 --> 00:07:42,639
twenty three gigabyte file so let's look

00:07:37,419 --> 00:07:43,169
at this other 146 million rows these are

00:07:42,639 --> 00:07:46,169
the column

00:07:43,169 --> 00:07:51,330
and what we'll focus on is the pickup

00:07:46,169 --> 00:07:53,310
latitude and longitude these are samples

00:07:51,330 --> 00:07:58,199
of their data let's start your

00:07:53,310 --> 00:08:00,270
dimensional and at 64 46 million but we

00:07:58,199 --> 00:08:02,849
can also count on a column like how many

00:08:00,270 --> 00:08:05,069
non missing values are there so you see

00:08:02,849 --> 00:08:06,749
that there are a few missing values so

00:08:05,069 --> 00:08:08,610
this took three seconds because it had

00:08:06,749 --> 00:08:12,029
to read from from hard drive the first

00:08:08,610 --> 00:08:14,430
time after that it's much faster other

00:08:12,029 --> 00:08:18,960
statistics is just a mean so this is the

00:08:14,430 --> 00:08:20,939
mean latitude of I guess Manhattan so if

00:08:18,960 --> 00:08:24,509
you want to go to higher dimensions you

00:08:20,939 --> 00:08:27,330
add a argument bin by like similar to

00:08:24,509 --> 00:08:31,080
SQL group by but well now we're doing it

00:08:27,330 --> 00:08:33,419
in regular bins and in by and you just

00:08:31,080 --> 00:08:37,110
get a numpy array and you can feed it

00:08:33,419 --> 00:08:39,329
into same upload lip if you want to go

00:08:37,110 --> 00:08:42,599
high dimension you give it a list of the

00:08:39,329 --> 00:08:45,860
columns or expressions and you get a 2d

00:08:42,599 --> 00:08:53,010
numpy array which you can then feed into

00:08:45,860 --> 00:08:54,779
m shell and you see New York so what

00:08:53,010 --> 00:08:59,519
better way would be to use the plot

00:08:54,779 --> 00:09:02,579
command which gives you labels etc on a

00:08:59,519 --> 00:09:05,279
color bar for for free so let's see what

00:09:02,579 --> 00:09:08,640
you can this is just visualizing but but

00:09:05,279 --> 00:09:10,290
we want to do more with the data so what

00:09:08,640 --> 00:09:11,790
I'm doing now is saying what what do you

00:09:10,290 --> 00:09:14,730
actually want to plot not just account

00:09:11,790 --> 00:09:16,410
but now we're plotting like the mean of

00:09:14,730 --> 00:09:20,100
something the total amount it's how much

00:09:16,410 --> 00:09:24,209
people paid so what's the best place to

00:09:20,100 --> 00:09:26,940
pick up a customer well black is high so

00:09:24,209 --> 00:09:29,250
you can you can run like $50 if you pick

00:09:26,940 --> 00:09:31,769
up people from the airport which makes

00:09:29,250 --> 00:09:33,180
sense but maybe it's not the best place

00:09:31,769 --> 00:09:35,490
to pick up people because I mean these

00:09:33,180 --> 00:09:37,529
are long long trip so it may take a long

00:09:35,490 --> 00:09:39,930
time so we want to divide by the trip

00:09:37,529 --> 00:09:42,779
distance but there's actually a problem

00:09:39,930 --> 00:09:46,170
with the trip distance so these are in

00:09:42,779 --> 00:09:49,199
Mouse so some of them are like way too

00:09:46,170 --> 00:09:52,740
large and they're negative distances so

00:09:49,199 --> 00:09:56,310
let's take a look at this so I think if

00:09:52,740 --> 00:09:56,990
we clip it between 0 and 40 then we'll

00:09:56,310 --> 00:09:58,430
have mouse

00:09:56,990 --> 00:10:00,860
of the data and we don't worry about the

00:09:58,430 --> 00:10:03,020
rest so you can execute select which

00:10:00,860 --> 00:10:04,820
makes it doesn't make a copy of the data

00:10:03,020 --> 00:10:06,800
which is important because you can't

00:10:04,820 --> 00:10:10,250
copy this large data set so it just

00:10:06,800 --> 00:10:14,120
keeps a record of say a boolean mask of

00:10:10,250 --> 00:10:16,730
what what is or is not in this selection

00:10:14,120 --> 00:10:18,860
and then instead we say we take the mean

00:10:16,730 --> 00:10:21,260
of total amount over trip distance and

00:10:18,860 --> 00:10:23,360
we say use the selection and then you

00:10:21,260 --> 00:10:28,790
get a different picture actually so here

00:10:23,360 --> 00:10:39,890
now here are the dark spots okay let me

00:10:28,790 --> 00:10:42,830
check if this is up so I just want to

00:10:39,890 --> 00:10:44,990
show you that you can also connect to a

00:10:42,830 --> 00:10:47,390
different server so it doesn't have to

00:10:44,990 --> 00:10:50,149
be on your disk so now I'm opening the

00:10:47,390 --> 00:10:54,680
Gaia data set which is one point 14

00:10:50,149 --> 00:11:01,880
billion rows and now we can I forgot to

00:10:54,680 --> 00:11:05,600
so I'm on Wi-Fi so this is WebSocket so

00:11:01,880 --> 00:11:07,190
it's it's a WebSocket connection maybe

00:11:05,600 --> 00:11:09,680
it's you and that's probably on the same

00:11:07,190 --> 00:11:11,180
connection so the most of the time is

00:11:09,680 --> 00:11:15,890
now spent on the download and you'll see

00:11:11,180 --> 00:11:18,649
later that it's a bit faster so can we

00:11:15,890 --> 00:11:20,420
now zoom into the NMC so this is my plot

00:11:18,649 --> 00:11:22,339
lip so it's not interactive so we want

00:11:20,420 --> 00:11:27,290
to have this interactive so that brings

00:11:22,339 --> 00:11:29,480
me to the second tutorial or demo which

00:11:27,290 --> 00:11:32,149
is start with a really small

00:11:29,480 --> 00:11:35,230
introduction in I buy widgets so I buy

00:11:32,149 --> 00:11:38,450
widgets is a library that can give you

00:11:35,230 --> 00:11:42,620
like widget in the notebook so this is a

00:11:38,450 --> 00:11:45,320
float slider and this is text and you

00:11:42,620 --> 00:11:48,230
can edit these and they're reflected on

00:11:45,320 --> 00:11:50,120
the Python side so they're synchronized

00:11:48,230 --> 00:11:51,260
and if you set them from the patient's

00:11:50,120 --> 00:11:54,079
Python side

00:11:51,260 --> 00:11:57,920
they're also reflected in the GUI you

00:11:54,079 --> 00:12:00,560
can link these for instance and then you

00:11:57,920 --> 00:12:02,120
see that these are connected so on top

00:12:00,560 --> 00:12:04,850
of these you can build your own library

00:12:02,120 --> 00:12:08,270
one of those is that's developed at

00:12:04,850 --> 00:12:11,770
Bloomberg is a BQ plot which is a like a

00:12:08,270 --> 00:12:11,770
mudblood lip like API

00:12:14,260 --> 00:12:23,150
but instead it's now interactive so you

00:12:19,940 --> 00:12:24,530
can change change these plots and

00:12:23,150 --> 00:12:26,690
actually you don't have to re execute

00:12:24,530 --> 00:12:28,580
the code if you want to change some

00:12:26,690 --> 00:12:31,540
properties because it's a it's a widget

00:12:28,580 --> 00:12:36,220
if you change something it's directly

00:12:31,540 --> 00:12:38,840
directly reflected in the the interface

00:12:36,220 --> 00:12:42,200
you can do interactive things like

00:12:38,840 --> 00:12:45,070
selections and they're also reflected in

00:12:42,200 --> 00:12:48,530
the Python side and the other way around

00:12:45,070 --> 00:12:52,160
another widget that I buy leaflet that

00:12:48,530 --> 00:12:54,770
gives you the leaflet in the notebook

00:12:52,160 --> 00:12:55,630
and you can add an image to this so then

00:12:54,770 --> 00:12:58,070
the next step

00:12:55,630 --> 00:13:00,440
logical step is to take again the New

00:12:58,070 --> 00:13:01,850
York taxi data set and it doesn't matter

00:13:00,440 --> 00:13:03,320
that we open it again from a different

00:13:01,850 --> 00:13:05,660
kernel because we're using memory

00:13:03,320 --> 00:13:07,310
mapping we're using the same memory that

00:13:05,660 --> 00:13:15,830
the other kernel was using so we're not

00:13:07,310 --> 00:13:19,670
wasting memory here and now we can offer

00:13:15,830 --> 00:13:26,450
plot this on on iPad leaflet and then

00:13:19,670 --> 00:13:29,270
zoom in so there's some extra built in

00:13:26,450 --> 00:13:32,870
tool so now I'm not plotting the just

00:13:29,270 --> 00:13:34,940
the counts I'm doing it and giving it a

00:13:32,870 --> 00:13:37,660
third axis which is the drop-off hours

00:13:34,940 --> 00:13:40,640
I'm going to show it per hour and then

00:13:37,660 --> 00:13:42,170
slice through these cubes so it's one

00:13:40,640 --> 00:13:46,400
calculation which is a bit heavy

00:13:42,170 --> 00:13:50,870
especially for this laptop so then this

00:13:46,400 --> 00:13:55,430
is midnight there's something that I

00:13:50,870 --> 00:13:57,320
that that that I noticed which is at

00:13:55,430 --> 00:14:00,980
later times there's this really dark

00:13:57,320 --> 00:14:02,720
spot which is basically no drop-off so I

00:14:00,980 --> 00:14:06,440
thought this must be the worst region in

00:14:02,720 --> 00:14:10,450
New York I'm not going there but if you

00:14:06,440 --> 00:14:13,550
zoom in it's actually not that bad oh

00:14:10,450 --> 00:14:14,900
one more it's a convention center I mean

00:14:13,550 --> 00:14:17,930
nobody goes there in the evenings

00:14:14,900 --> 00:14:22,550
something you go go to in the in the

00:14:17,930 --> 00:14:25,610
morning so these are the early birds

00:14:22,550 --> 00:14:28,190
so you can actually like build with

00:14:25,610 --> 00:14:31,010
these widgets also your own your own IDs

00:14:28,190 --> 00:14:33,410
so for the next demo I'm using a

00:14:31,010 --> 00:14:35,750
simulation but this is similar what we

00:14:33,410 --> 00:14:36,890
expect from the from the Gaia mission so

00:14:35,750 --> 00:14:41,120
what you're looking at now is a

00:14:36,890 --> 00:14:43,460
simulation of our Milky Way halo so we

00:14:41,120 --> 00:14:44,690
have a disc so the stars in at this but

00:14:43,460 --> 00:14:46,700
there are also many stars that are in

00:14:44,690 --> 00:14:49,880
the most like spherical distribution and

00:14:46,700 --> 00:14:52,370
we believe many of these stars come from

00:14:49,880 --> 00:14:55,670
actually smaller satellites such as LMC

00:14:52,370 --> 00:14:57,080
and SMC that are merged and emerged such

00:14:55,670 --> 00:14:58,930
that you don't see the individual

00:14:57,080 --> 00:15:01,790
galaxies anymore and actually in this

00:14:58,930 --> 00:15:03,950
simulation there are 33 satellites that

00:15:01,790 --> 00:15:05,990
are merged but you can't see see them

00:15:03,950 --> 00:15:09,650
individually they're really like mixed

00:15:05,990 --> 00:15:11,810
but if you look at other spaces which is

00:15:09,650 --> 00:15:14,690
all set angular momentum around the z

00:15:11,810 --> 00:15:16,730
axis and the energy of the stars then

00:15:14,690 --> 00:15:19,370
you see actually that there are 33

00:15:16,730 --> 00:15:21,650
clumsy these are conserved quantities

00:15:19,370 --> 00:15:24,050
what we now call them and now we can do

00:15:21,650 --> 00:15:26,360
a selection here I see that actually

00:15:24,050 --> 00:15:28,520
this stream is not fully phase mixed and

00:15:26,360 --> 00:15:30,500
that's what we hope to see these clumps

00:15:28,520 --> 00:15:32,270
in energy and angular momentum to prove

00:15:30,500 --> 00:15:36,050
that actually our Milky Way was formed

00:15:32,270 --> 00:15:37,070
from this way but the Milky Way is three

00:15:36,050 --> 00:15:38,660
dimensional we live in a

00:15:37,070 --> 00:15:41,660
three-dimensional space and we're

00:15:38,660 --> 00:15:44,750
looking at the 2d projection and we

00:15:41,660 --> 00:15:47,420
actually want to look at this in 3d but

00:15:44,750 --> 00:15:49,700
there was no 3d visualization that that

00:15:47,420 --> 00:15:53,230
was interactive in the in the browser so

00:15:49,700 --> 00:15:56,060
what do you do you write it yourself so

00:15:53,230 --> 00:15:59,830
that that's what I did and I wrote a pie

00:15:56,060 --> 00:16:02,690
volume which I'll show you show you now

00:15:59,830 --> 00:16:08,860
so it's a 3d plotting library for the

00:16:02,690 --> 00:16:08,860
notebook based on WebGL this should be

00:16:10,030 --> 00:16:14,960
it's less than a year old

00:16:11,990 --> 00:16:17,540
not now a month not that fast does glyph

00:16:14,960 --> 00:16:23,930
rendering volume rendering surfaces

00:16:17,540 --> 00:16:27,340
meshes lines and it open already if you

00:16:23,930 --> 00:16:27,340
go to the documentation

00:16:30,069 --> 00:16:34,249
there

00:16:31,279 --> 00:16:37,399
so here are some examples it also

00:16:34,249 --> 00:16:40,660
renders in the documentation so you can

00:16:37,399 --> 00:16:43,579
play with these this is a scatter plot

00:16:40,660 --> 00:16:46,100
let me make it a bit bigger a quiver

00:16:43,579 --> 00:16:50,959
plot so these give like a direction like

00:16:46,100 --> 00:16:53,569
a velocity meshes so you can directly

00:16:50,959 --> 00:16:55,929
see what the what the output is because

00:16:53,569 --> 00:17:00,589
it's built on I buy weed i buy widget

00:16:55,929 --> 00:17:03,170
you can say well let's make a slider a

00:17:00,589 --> 00:17:06,140
color picker and connect these to some

00:17:03,170 --> 00:17:08,890
of the properties of these plots so you

00:17:06,140 --> 00:17:12,130
can connect the slider to the size and

00:17:08,890 --> 00:17:17,839
control use even outside the notebook

00:17:12,130 --> 00:17:21,350
maybe you think the color is not OK and

00:17:17,839 --> 00:17:23,929
you can also this is HTML you can open

00:17:21,350 --> 00:17:26,419
this on your mobile phone on your tablet

00:17:23,929 --> 00:17:30,049
bring this to a meeting explore this

00:17:26,419 --> 00:17:32,210
show show others but because you can do

00:17:30,049 --> 00:17:35,960
this on your phone I just had to do this

00:17:32,210 --> 00:17:39,409
which is so you can do stereo rendering

00:17:35,960 --> 00:17:41,870
and then if you if you buy one of these

00:17:39,409 --> 00:17:45,649
like five euros dollars you can do free

00:17:41,870 --> 00:17:52,279
our visualization of these so it's a bit

00:17:45,649 --> 00:17:53,630
cheaper than an oculus rift okay so let

00:17:52,279 --> 00:17:58,220
me show you how you use it in the

00:17:53,630 --> 00:18:02,110
notebook and what's possible so these

00:17:58,220 --> 00:18:10,130
are just a demo for a spherical harmonic

00:18:02,110 --> 00:18:13,070
showing a volume rendering can do a

00:18:10,130 --> 00:18:15,679
scatter plot so these are just boxes and

00:18:13,070 --> 00:18:17,510
everything is animated or interpolated

00:18:15,679 --> 00:18:19,549
so if you change something it doesn't

00:18:17,510 --> 00:18:21,020
change abruptly so you see if you make a

00:18:19,549 --> 00:18:23,149
change on the plot you see what's

00:18:21,020 --> 00:18:25,340
changing and everything all the

00:18:23,149 --> 00:18:27,770
properties are Terp lated so that sits

00:18:25,340 --> 00:18:33,920
at the color so you can set a random

00:18:27,770 --> 00:18:35,630
color or you can set the sizes etc

00:18:33,920 --> 00:18:41,540
and because everything is interpolated

00:18:35,630 --> 00:18:45,800
if you now include a series a series of

00:18:41,540 --> 00:18:50,630
data so this let me show you the first

00:18:45,800 --> 00:18:53,960
two keyframes and it interpolates you

00:18:50,630 --> 00:18:58,220
can feed it animations but with a really

00:18:53,960 --> 00:19:00,380
coarse time step so if I now run this so

00:18:58,220 --> 00:19:02,830
this is actually a simulation of one of

00:19:00,380 --> 00:19:07,880
these galaxies around the Milky Way

00:19:02,830 --> 00:19:09,470
that's being torn apart so this is not a

00:19:07,880 --> 00:19:12,440
lot of data so because of the

00:19:09,470 --> 00:19:14,510
interpolation it looks really smooth and

00:19:12,440 --> 00:19:18,140
everything can be changed on the fly so

00:19:14,510 --> 00:19:22,780
maybe this looks a bit better with the

00:19:18,140 --> 00:19:22,780
light or maybe you prefer to render cats

00:19:23,200 --> 00:19:33,170
but I think arrows are more useful so

00:19:25,730 --> 00:19:35,600
these arrows represent the velocities so

00:19:33,170 --> 00:19:38,600
since I by which at seven we can

00:19:35,600 --> 00:19:43,820
transfer the data and binary so if I

00:19:38,600 --> 00:19:46,790
have my empire raised here X Y Z and so

00:19:43,820 --> 00:19:49,460
I have a million points it goes really

00:19:46,790 --> 00:19:52,370
quickly to the browser so it's sent over

00:19:49,460 --> 00:19:54,410
the WebSocket s s binary and on the

00:19:52,370 --> 00:19:56,360
front end in the browser it's also a

00:19:54,410 --> 00:19:58,550
typed array so there's no json

00:19:56,360 --> 00:20:01,610
serialization going on and you can

00:19:58,550 --> 00:20:06,980
actually do visualization of a million

00:20:01,610 --> 00:20:09,950
particles but the underlying goal was to

00:20:06,980 --> 00:20:11,450
have a 3d visualization for this data

00:20:09,950 --> 00:20:17,090
set so let's take a look at this stream

00:20:11,450 --> 00:20:18,800
in 3d what does it look like so I'm

00:20:17,090 --> 00:20:20,750
plotting here the positions and the

00:20:18,800 --> 00:20:22,990
velocities which you see it's a bit

00:20:20,750 --> 00:20:25,010
cluttered because it also plots the

00:20:22,990 --> 00:20:27,920
velocities for the low-density regions

00:20:25,010 --> 00:20:32,390
so instead of changing the arguments you

00:20:27,920 --> 00:20:35,540
can play around a bit and say ok on this

00:20:32,390 --> 00:20:37,580
a bit better maybe it should be 50 you

00:20:35,540 --> 00:20:42,080
could also make make a slider for this

00:20:37,580 --> 00:20:44,990
but I think this is ok let's change

00:20:42,080 --> 00:20:47,860
these parameters a bit and now you get a

00:20:44,990 --> 00:20:50,350
really a 3d view of what is 3

00:20:47,860 --> 00:20:52,000
like and with the velocities on top of

00:20:50,350 --> 00:20:58,210
it you really see that the stream is

00:20:52,000 --> 00:21:00,309
going in this direction so maybe you

00:20:58,210 --> 00:21:01,390
want to change the color while red is

00:21:00,309 --> 00:21:03,790
maybe not so smart

00:21:01,390 --> 00:21:08,080
let's connect a color picker just two

00:21:03,790 --> 00:21:10,720
lines and you can change the color and

00:21:08,080 --> 00:21:13,360
just because it's built on I by widget

00:21:10,720 --> 00:21:16,840
you get this I get this for free

00:21:13,360 --> 00:21:22,890
basically if you want to save it you can

00:21:16,840 --> 00:21:32,530
just save and open it put it on your

00:21:22,890 --> 00:21:34,809
mobile phone or tablet just another demo

00:21:32,530 --> 00:21:38,350
someone to show so this is in a notebook

00:21:34,809 --> 00:21:41,110
that's right so if you if you embed it

00:21:38,350 --> 00:21:43,240
in your notebook on em be fewer these

00:21:41,110 --> 00:21:48,870
things like a medical medical scan can

00:21:43,240 --> 00:21:53,320
be used another example of showing an

00:21:48,870 --> 00:21:56,200
animation so this is a cortex and are

00:21:53,320 --> 00:21:58,299
different stages so you can visualize

00:21:56,200 --> 00:22:01,380
some data on top of it but then this may

00:21:58,299 --> 00:22:04,630
be used and more useful to see or this

00:22:01,380 --> 00:22:08,790
and this can be animated as well so it's

00:22:04,630 --> 00:22:08,790
quite flexible in what in what it can do

00:22:11,010 --> 00:22:17,350
let me show you another library that's

00:22:13,840 --> 00:22:23,040
also a widget it's a bit of topic but it

00:22:17,350 --> 00:22:26,020
let me let me show you so let's imported

00:22:23,040 --> 00:22:29,380
so this is I buy WebRTC which is also a

00:22:26,020 --> 00:22:35,160
Bridgette and you can take a video

00:22:29,380 --> 00:22:38,330
stream so just a video or camera stream

00:22:35,160 --> 00:22:41,720
so either

00:22:38,330 --> 00:22:43,700
and because it's a widget and the

00:22:41,720 --> 00:22:47,570
support for this you can actually put it

00:22:43,700 --> 00:22:49,730
in a pie volume and that's the advantage

00:22:47,570 --> 00:22:52,309
of widget so we have a library that that

00:22:49,730 --> 00:22:54,980
can do this and for free you can mix

00:22:52,309 --> 00:22:58,700
this in and actually I buy volume itself

00:22:54,980 --> 00:23:00,830
is also what's called a media stream so

00:22:58,700 --> 00:23:05,870
it can render on itself so you get these

00:23:00,830 --> 00:23:09,260
really strange things but maybe let's

00:23:05,870 --> 00:23:12,080
start practical Hey

00:23:09,260 --> 00:23:15,740
hi that's Silva in the in room next door

00:23:12,080 --> 00:23:23,049
so you basically have video conferencing

00:23:15,740 --> 00:23:23,049
for free so let's show Silva a nice plot

00:23:24,159 --> 00:23:33,289
so you see you can join again so you can

00:23:28,190 --> 00:23:39,190
stream all of these using the web RTC ID

00:23:33,289 --> 00:23:39,190
so by Silva by Silva

00:23:43,430 --> 00:23:49,590
so just to show you that because it's

00:23:47,880 --> 00:23:51,570
all widget they can connect to each

00:23:49,590 --> 00:23:53,670
other talk to each other and you can do

00:23:51,570 --> 00:23:56,910
things that you could not have imagined

00:23:53,670 --> 00:24:00,020
I mean I just found out yesterday that

00:23:56,910 --> 00:24:03,540
you could do these like crazy things of

00:24:00,020 --> 00:24:06,900
visualizing itself in itself so let's

00:24:03,540 --> 00:24:10,530
get to the to the final part this is

00:24:06,900 --> 00:24:13,790
still fine we change the combination of

00:24:10,530 --> 00:24:18,770
visualizing these large data sets

00:24:13,790 --> 00:24:26,310
interactively so we again connect to the

00:24:18,770 --> 00:24:27,870
to this server that's our Institute so

00:24:26,310 --> 00:24:30,780
now it's downloading the connection is

00:24:27,870 --> 00:24:33,710
not so so it's there so now we can

00:24:30,780 --> 00:24:36,480
actually zoom into the LMC

00:24:33,710 --> 00:24:38,220
so after the progress bar is done it's

00:24:36,480 --> 00:24:41,850
downloading so that's taking most of

00:24:38,220 --> 00:24:44,100
that or so it takes about one second to

00:24:41,850 --> 00:24:46,980
go through these through the billion

00:24:44,100 --> 00:24:53,820
stars and actually I want to select one

00:24:46,980 --> 00:24:55,710
of these clusters let's take this one so

00:24:53,820 --> 00:24:59,250
even though it's there are a billion

00:24:55,710 --> 00:25:01,260
objects you can do a selection and the

00:24:59,250 --> 00:25:03,030
selection doesn't make a copy again so

00:25:01,260 --> 00:25:05,480
it's really efficient in doing that and

00:25:03,030 --> 00:25:08,910
with the selection you can again

00:25:05,480 --> 00:25:14,100
calculate statistics for instance the

00:25:08,910 --> 00:25:17,490
mean or do plots for instance here I'm

00:25:14,100 --> 00:25:20,280
showing what's called a magnitude I'm

00:25:17,490 --> 00:25:22,460
not gonna explain this for the selection

00:25:20,280 --> 00:25:28,680
and for all the data just to compare

00:25:22,460 --> 00:25:35,280
with a billion stars so we survived that

00:25:28,680 --> 00:25:37,260
good so so these are my two answers so

00:25:35,280 --> 00:25:41,580
how do you deal with the billion objects

00:25:37,260 --> 00:25:44,160
rows or stars I think the best way to do

00:25:41,580 --> 00:25:48,540
that is using statistics with n

00:25:44,160 --> 00:25:50,340
dimensional grids facts is one of the

00:25:48,540 --> 00:25:54,810
libraries the dough stick I should also

00:25:50,340 --> 00:25:57,910
mention data shader and

00:25:54,810 --> 00:26:00,820
the the second thing is how can you do

00:25:57,910 --> 00:26:04,120
fish 3d visualization in the notebook

00:26:00,820 --> 00:26:07,390
and I think I by volume is a good

00:26:04,120 --> 00:26:09,700
solution to do this so let me leave you

00:26:07,390 --> 00:26:10,760
with the resources and thank you for

00:26:09,700 --> 00:26:20,880
your attention

00:26:10,760 --> 00:26:20,880
[Applause]

00:26:34,840 --> 00:26:41,140
so actually one thing I could do what

00:26:39,430 --> 00:26:44,260
you could do is just connect to a

00:26:41,140 --> 00:26:47,320
notebook server on our Institute for a

00:26:44,260 --> 00:26:48,550
demo I find that a bit risky but there's

00:26:47,320 --> 00:26:49,960
also an option to connect over

00:26:48,550 --> 00:26:51,940
WebSockets so that's completely

00:26:49,960 --> 00:26:53,950
different so everything except for this

00:26:51,940 --> 00:26:57,100
billion stars so what I showed here is

00:26:53,950 --> 00:27:01,080
was local so this was not the data here

00:26:57,100 --> 00:27:01,080
was not local for this large data set

00:27:02,040 --> 00:27:07,110
the dip surface on my laptop

00:27:08,490 --> 00:27:16,180
no no so for instance what I'm doing

00:27:13,120 --> 00:27:17,680
here is I say calculate a mean then just

00:27:16,180 --> 00:27:20,050
this number is serialized and

00:27:17,680 --> 00:27:22,930
deserialized if I make this image so i

00:27:20,050 --> 00:27:24,820
zoom in or zoom out only this image or

00:27:22,930 --> 00:27:29,800
the data the numpy array is sent over

00:27:24,820 --> 00:27:39,490
the wire yeah yeah and the other end of

00:27:29,800 --> 00:27:42,520
the WebSocket is no no yeah yeah indeed

00:27:39,490 --> 00:27:44,860
yeah so it's also running facts is a

00:27:42,520 --> 00:27:46,690
really simple WebSocket server and that

00:27:44,860 --> 00:27:49,500
does the serialization and here the D

00:27:46,690 --> 00:27:49,500
serialization

00:27:51,789 --> 00:28:04,850
yeah no nothing is pre-computed yeah

00:28:00,169 --> 00:28:06,409
yeah yeah yeah the the many people

00:28:04,850 --> 00:28:08,679
question like shouldn't you do some pre

00:28:06,409 --> 00:28:12,350
pre computation I think you shouldn't

00:28:08,679 --> 00:28:13,879
well especially astronomers if they they

00:28:12,350 --> 00:28:15,649
like to take the log of something and if

00:28:13,879 --> 00:28:17,509
that's not enough you take another time

00:28:15,649 --> 00:28:19,369
the log so there's all and they make

00:28:17,509 --> 00:28:23,779
strange combinations etc so there's

00:28:19,369 --> 00:28:37,570
nothing never something you can

00:28:23,779 --> 00:28:37,570
pre-compute yeah that is custom yeah

00:28:57,340 --> 00:29:17,690
do you mean on the same computer or so

00:29:15,950 --> 00:29:20,570
so what what fax is doing is just

00:29:17,690 --> 00:29:24,500
working with a local foul so memory

00:29:20,570 --> 00:29:27,440
mapped and the idea behind this is that

00:29:24,500 --> 00:29:29,750
all the optimizations on how to do this

00:29:27,440 --> 00:29:32,179
in a smart way is left to the kernel

00:29:29,750 --> 00:29:34,760
which I mean many people spend lots of

00:29:32,179 --> 00:29:36,440
efforts in in optimizing this so that's

00:29:34,760 --> 00:29:38,350
basically the strategy doing doing

00:29:36,440 --> 00:29:42,620
memory mapping leaving the kernel to the

00:29:38,350 --> 00:29:45,049
difficult work and so you never run out

00:29:42,620 --> 00:29:52,640
of memory it would just slow down if you

00:29:45,049 --> 00:29:58,940
don't have enough memory to do this yeah

00:29:52,640 --> 00:30:00,980
so what I'm doing here that is yeah

00:29:58,940 --> 00:30:03,460
principle I think so yeah with the

00:30:00,980 --> 00:30:08,570
WebSocket you can you can connect to any

00:30:03,460 --> 00:30:12,890
server wherever and maybe also something

00:30:08,570 --> 00:30:14,539
to mention with the because you you're

00:30:12,890 --> 00:30:16,549
doing this in the browser with the 3d

00:30:14,539 --> 00:30:18,049
visualization you can connect to say a

00:30:16,549 --> 00:30:20,510
supercomputer on the other side of the

00:30:18,049 --> 00:30:22,970
world but the visualization is done on

00:30:20,510 --> 00:30:26,210
your laptop I don't know if every anyone

00:30:22,970 --> 00:30:30,020
ever tried to set up remote OpenGL it's

00:30:26,210 --> 00:30:32,690
not fun if it works this works out of

00:30:30,020 --> 00:30:34,309
the box I think that's also for the 3d

00:30:32,690 --> 00:30:38,230
visualization in combination with the

00:30:34,309 --> 00:30:38,230
notebook one of the advantages

00:30:44,970 --> 00:30:49,350
the last one the material I'm gonna do

00:30:46,830 --> 00:30:54,750
this I think tonight I'll upload to the

00:30:49,350 --> 00:30:58,140
notebooks and Andy I should mention the

00:30:54,750 --> 00:31:01,620
iPad WebRTC is running on Conda for it

00:30:58,140 --> 00:31:09,919
so maybe tomorrow it's the new version

00:31:01,620 --> 00:31:09,919
is done yes

00:31:11,639 --> 00:31:22,710
I tried it wasn't really successful

00:31:16,590 --> 00:31:29,759
maybe I should try again or are you one

00:31:22,710 --> 00:31:33,149
of the developers maybe or yeah yeah

00:31:29,759 --> 00:31:38,609
it's I'm keeping an eye on it so it's

00:31:33,149 --> 00:31:40,470
right with the feta format but that was

00:31:38,609 --> 00:31:43,200
slower to open so this is really

00:31:40,470 --> 00:31:46,070
instantly and that we're opening these

00:31:43,200 --> 00:31:48,389
files a lot of times today so that

00:31:46,070 --> 00:31:50,820
didn't make me switch but maybe I should

00:31:48,389 --> 00:31:53,220
open an issue and get up to address this

00:31:50,820 --> 00:31:55,019
this issue because I think the idea

00:31:53,220 --> 00:32:01,369
behind feathers really a feather and

00:31:55,019 --> 00:32:01,369
arrows really good yeah definitely yes

00:32:04,000 --> 00:32:10,400
yeah so when the last one to get up a

00:32:07,340 --> 00:32:30,520
link I'll I'll put the the notebooks

00:32:10,400 --> 00:32:34,070
yeah okay yes sorry is it I PI volume is

00:32:30,520 --> 00:32:38,900
pure Python and pure JavaScript so the

00:32:34,070 --> 00:32:41,390
the front-end is all ah yeah of course

00:32:38,900 --> 00:32:45,020
the shaders yeah this GL shader language

00:32:41,390 --> 00:32:49,130
is also in it yeah it's it's built on

00:32:45,020 --> 00:32:51,110
3GS makes you useful to know which is a

00:32:49,130 --> 00:32:52,580
really great library and there's also

00:32:51,110 --> 00:32:55,900
maybe I should mention it as well

00:32:52,580 --> 00:32:59,390
there's also PI 3 J's which is a widget

00:32:55,900 --> 00:33:01,370
to do basically 3 years in a browser but

00:32:59,390 --> 00:33:03,860
that's more low-level so if you want to

00:33:01,370 --> 00:33:05,960
but it's more flexible but it's not like

00:33:03,860 --> 00:33:15,020
a plotting library I by volume is more

00:33:05,960 --> 00:33:17,560
like a plotting library ok that's it

00:33:15,020 --> 00:33:17,560

YouTube URL: https://www.youtube.com/watch?v=nZ3HQpSXn2U


