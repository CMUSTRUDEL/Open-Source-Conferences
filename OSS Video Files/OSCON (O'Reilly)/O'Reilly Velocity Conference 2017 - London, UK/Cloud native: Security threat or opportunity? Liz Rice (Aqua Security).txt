Title: Cloud native: Security threat or opportunity? Liz Rice (Aqua Security)
Publication date: 2017-10-20
Playlist: O'Reilly Velocity Conference 2017 - London, UK
Description: 
	Your organization wants to go cloud native, but you donâ€™t want to hit the headlines as the victim of the latest hacking scandal. Liz Rice addresses the questions you need answers to: Will your deployments be less secure or more? How do DevOps processes like CI/CD and cluster orchestration affect your security profile? And what can we all do to minimize the risk of exploits?

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:02,790 --> 00:00:09,429
so let's compare with one aspect of

00:00:06,490 --> 00:00:12,549
security in traditional deployments I

00:00:09,429 --> 00:00:14,679
have hugely simplified this model but we

00:00:12,549 --> 00:00:17,950
can think about developers creating

00:00:14,679 --> 00:00:19,510
software operations people provisioning

00:00:17,950 --> 00:00:22,779
servers where that software's going to

00:00:19,510 --> 00:00:24,279
run and then once the servers have been

00:00:22,779 --> 00:00:27,009
installed and the software has been

00:00:24,279 --> 00:00:29,560
deployed security professionals will be

00:00:27,009 --> 00:00:31,900
looking at security tooling to protect

00:00:29,560 --> 00:00:34,379
that deployment and there'll be a

00:00:31,900 --> 00:00:36,910
constant process of looking out for

00:00:34,379 --> 00:00:40,660
vulnerabilities that have applied to

00:00:36,910 --> 00:00:43,030
this particular running code and picking

00:00:40,660 --> 00:00:46,270
patches when they're available so

00:00:43,030 --> 00:00:52,300
constantly updating this server with

00:00:46,270 --> 00:00:54,820
patches to avoid vulnerabilities so if

00:00:52,300 --> 00:00:56,949
we move to a cloud native environment

00:00:54,820 --> 00:00:59,440
how on earth are we supposed to apply

00:00:56,949 --> 00:01:02,079
patches to not just you know a handful

00:00:59,440 --> 00:01:04,870
of machines or virtual machines but to

00:01:02,079 --> 00:01:07,450
all those thousands of containers that

00:01:04,870 --> 00:01:09,909
sounds like a complete nightmare and the

00:01:07,450 --> 00:01:12,729
answer is you don't you don't patch

00:01:09,909 --> 00:01:14,380
container images the whole point of

00:01:12,729 --> 00:01:17,500
container images is that they should be

00:01:14,380 --> 00:01:19,900
immutable so if you need to change the

00:01:17,500 --> 00:01:23,500
software inside a container image you

00:01:19,900 --> 00:01:25,750
need to rebuild it cloud native

00:01:23,500 --> 00:01:27,570
processes go kind of hand-in-hand with

00:01:25,750 --> 00:01:31,840
the ideas of continuous integration

00:01:27,570 --> 00:01:35,409
where when we write software or we want

00:01:31,840 --> 00:01:37,990
to apply software from a patch we

00:01:35,409 --> 00:01:39,579
rebuild our image and then we deploy it

00:01:37,990 --> 00:01:42,520
and we always move in the same direction

00:01:39,579 --> 00:01:46,509
any change we start again at the

00:01:42,520 --> 00:01:48,070
beginning of the pipeline we still have

00:01:46,509 --> 00:01:51,070
the challenge of figuring out which of

00:01:48,070 --> 00:01:53,290
these containers we're running have

00:01:51,070 --> 00:01:56,649
vulnerabilities which container images

00:01:53,290 --> 00:01:59,860
do we need to rebuild and the good news

00:01:56,649 --> 00:02:03,539
is that by having a CI and potentially

00:01:59,860 --> 00:02:07,000
CD pipeline we can automate this process

00:02:03,539 --> 00:02:09,310
so you can introduce image scanning

00:02:07,000 --> 00:02:10,870
tools there are open source ones

00:02:09,310 --> 00:02:13,600
available there are commercial tools

00:02:10,870 --> 00:02:15,750
available and we can introduce them at

00:02:13,600 --> 00:02:20,370
various stages through the CIC

00:02:15,750 --> 00:02:21,840
pipeline you might want to scan as soon

00:02:20,370 --> 00:02:24,140
as you're building images so that you

00:02:21,840 --> 00:02:26,610
can flag up problems as soon as possible

00:02:24,140 --> 00:02:28,440
you want to make sure you're scanning

00:02:26,610 --> 00:02:30,840
images that come from a third party

00:02:28,440 --> 00:02:32,040
before you deploy them again making sure

00:02:30,840 --> 00:02:34,230
there's no vulnerabilities needs to

00:02:32,040 --> 00:02:37,230
worry about and you want to be

00:02:34,230 --> 00:02:39,690
continually scanning the images that are

00:02:37,230 --> 00:02:41,250
running in your deployment in case new

00:02:39,690 --> 00:02:47,459
vulnerabilities are discovered in those

00:02:41,250 --> 00:02:49,440
existing in the existing images we also

00:02:47,459 --> 00:02:52,770
have the opportunity to introduce gates

00:02:49,440 --> 00:02:54,510
in the pipeline to check whether the

00:02:52,770 --> 00:02:58,739
images we're about to deploy meet other

00:02:54,510 --> 00:03:02,370
criteria we might have policies around

00:02:58,739 --> 00:03:04,380
whether an image should be based on a

00:03:02,370 --> 00:03:07,110
base image that's been approved by a

00:03:04,380 --> 00:03:10,410
security team for example you might also

00:03:07,110 --> 00:03:12,090
want to look out for badly configured

00:03:10,410 --> 00:03:14,790
images images that are running as root

00:03:12,090 --> 00:03:16,440
when they don't need to images that

00:03:14,790 --> 00:03:17,880
contain secret information like

00:03:16,440 --> 00:03:21,440
passwords that they really shouldn't

00:03:17,880 --> 00:03:21,440
have built into the container image

00:03:27,380 --> 00:03:29,440

YouTube URL: https://www.youtube.com/watch?v=eB8kzdWWcfA


