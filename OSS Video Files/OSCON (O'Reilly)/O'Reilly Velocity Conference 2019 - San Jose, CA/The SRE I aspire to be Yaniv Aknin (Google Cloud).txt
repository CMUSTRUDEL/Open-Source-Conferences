Title: The SRE I aspire to be Yaniv Aknin (Google Cloud)
Publication date: 2019-06-13
Playlist: O'Reilly Velocity Conference 2019 - San Jose, CA
Description: 
	Yaniv Aknin dives into the secret sauce for a successful SRE organization: high-quality measurements of reliability. He explains why measuring reliability is crucial (and why it’s so hard), shares a couple of tips for getting it right, and explores why it’s the key differentiator between SRE and DevOps.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:02,170 --> 00:00:07,660
so I talked about these ideas with teams

00:00:05,560 --> 00:00:08,890
and sometimes like sometimes they buy in

00:00:07,660 --> 00:00:09,970
sometimes they don't sometimes they tell

00:00:08,890 --> 00:00:11,590
me you need you know you need to get off

00:00:09,970 --> 00:00:13,060
the ivory tower and grab a pager you

00:00:11,590 --> 00:00:15,910
know I get in the trenches with the rest

00:00:13,060 --> 00:00:17,800
of us and and I empathize with that

00:00:15,910 --> 00:00:19,300
right like they feel so overloaded with

00:00:17,800 --> 00:00:20,740
operational work with the rollouts with

00:00:19,300 --> 00:00:25,480
capacity planning like a fire they're

00:00:20,740 --> 00:00:27,669
fine here what do we do and I think even

00:00:25,480 --> 00:00:29,980
though I empathize they may have an

00:00:27,669 --> 00:00:32,619
incorrect perception that the way to

00:00:29,980 --> 00:00:34,780
make users happier is to do more

00:00:32,619 --> 00:00:37,510
operations if the pager is paging if I

00:00:34,780 --> 00:00:40,600
won't you know do something users are

00:00:37,510 --> 00:00:42,219
being hurt and that may be correct but

00:00:40,600 --> 00:00:43,840
it's not always correct you can

00:00:42,219 --> 00:00:45,609
trade-off operations and user happiness

00:00:43,840 --> 00:00:46,989
there is some kind of relationship

00:00:45,609 --> 00:00:48,730
between them maybe this is the curve

00:00:46,989 --> 00:00:50,469
maybe there's a different curve maybe

00:00:48,730 --> 00:00:52,929
one inflection point maybe seven

00:00:50,469 --> 00:00:55,059
inflection points but it's not the only

00:00:52,929 --> 00:00:57,609
thing you can do you can also move the

00:00:55,059 --> 00:00:59,500
curve right it could be that the curve

00:00:57,609 --> 00:01:01,809
wasn't actually the optimal front it

00:00:59,500 --> 00:01:04,089
wasn't Pareto efficient and you could do

00:01:01,809 --> 00:01:07,060
engineering work not in an emergency not

00:01:04,089 --> 00:01:08,770
operations not firefighting to either

00:01:07,060 --> 00:01:11,920
gain user happiness or do less

00:01:08,770 --> 00:01:14,290
operations without rating of the other

00:01:11,920 --> 00:01:16,229
thing okay so this is a bit abstract let

00:01:14,290 --> 00:01:20,380
me give you a couple of examples right

00:01:16,229 --> 00:01:22,360
after months of toiling on you know your

00:01:20,380 --> 00:01:24,369
area of microservices and making sure

00:01:22,360 --> 00:01:25,720
that all of them meet what you thought

00:01:24,369 --> 00:01:27,369
about is the SLO that you've set for

00:01:25,720 --> 00:01:28,570
each and all of them meet the three and

00:01:27,369 --> 00:01:30,549
a half nine that you promised yourself

00:01:28,570 --> 00:01:34,180
or your promise your dibs or you promise

00:01:30,549 --> 00:01:36,100
like the CEO you kind of like really

00:01:34,180 --> 00:01:37,810
think about all the work that you've put

00:01:36,100 --> 00:01:38,979
there and all the pages at night and all

00:01:37,810 --> 00:01:42,369
the capacity planning and all the the

00:01:38,979 --> 00:01:44,590
drama and be like actually how does this

00:01:42,369 --> 00:01:46,840
relate to the business when when this

00:01:44,590 --> 00:01:49,299
service is failing are my users actually

00:01:46,840 --> 00:01:51,460
hurt maybe it can uplift my measurement

00:01:49,299 --> 00:01:53,229
and discover that actually the

00:01:51,460 --> 00:01:56,110
client-side is caching or the client

00:01:53,229 --> 00:01:57,280
side is retrying and actually I don't

00:01:56,110 --> 00:01:58,840
need three and a half nines in that

00:01:57,280 --> 00:02:01,090
service all I need to do is turn down

00:01:58,840 --> 00:02:04,210
the alerts right or tune down the alerts

00:02:01,090 --> 00:02:05,590
to to alert at a much lower like a burn

00:02:04,210 --> 00:02:07,600
rate when we're aiming at a much lower

00:02:05,590 --> 00:02:09,580
level of reliability so you're doing

00:02:07,600 --> 00:02:10,780
less ops now you didn't hurt anyone all

00:02:09,580 --> 00:02:11,920
you're doing is changing the way you're

00:02:10,780 --> 00:02:14,440
thinking about the problem and your

00:02:11,920 --> 00:02:15,730
perception of reliability another thing

00:02:14,440 --> 00:02:17,409
you could be doing is

00:02:15,730 --> 00:02:19,599
after improving measurement and actually

00:02:17,409 --> 00:02:24,390
maybe measuring client-side you discover

00:02:19,599 --> 00:02:27,810
that your your fleet of pristine 99.95%

00:02:24,390 --> 00:02:30,610
micro-services is amazing but actually

00:02:27,810 --> 00:02:33,069
your client-side code has a bunch of

00:02:30,610 --> 00:02:34,629
serial and interdependent requests right

00:02:33,069 --> 00:02:36,370
like you need to make 25 requests in

00:02:34,629 --> 00:02:38,849
order to do a meaningful user

00:02:36,370 --> 00:02:40,870
interaction and if any one of them fails

00:02:38,849 --> 00:02:43,299
that you know the interaction would fail

00:02:40,870 --> 00:02:46,030
and and three nines to the power of 25

00:02:43,299 --> 00:02:47,700
is something like 97.5 suddenly your

00:02:46,030 --> 00:02:49,870
your view of reliability is different

00:02:47,700 --> 00:02:51,280
okay so so I'm discovering that I'm

00:02:49,870 --> 00:02:53,319
ninety seven point five percent

00:02:51,280 --> 00:02:54,700
reliability what do I do now right like

00:02:53,319 --> 00:02:56,079
the I do I page someone do I roll back

00:02:54,700 --> 00:02:57,970
there's nothing to roll back this is

00:02:56,079 --> 00:02:59,049
this is how it's been like for the last

00:02:57,970 --> 00:02:59,920
six months there's nothing to roll back

00:02:59,049 --> 00:03:02,379
there's no one page it's not an

00:02:59,920 --> 00:03:03,970
emergency what you need to do is get

00:03:02,379 --> 00:03:05,739
into the service code get into the

00:03:03,970 --> 00:03:07,450
client code change the way that you're

00:03:05,739 --> 00:03:10,120
sending the Ajax requests make them

00:03:07,450 --> 00:03:12,609
parallel add caching add retries change

00:03:10,120 --> 00:03:15,129
the architecture working on the product

00:03:12,609 --> 00:03:17,489
code changing the service code this is

00:03:15,129 --> 00:03:21,220
totally it's a rework to my mind right

00:03:17,489 --> 00:03:22,930
so this is one way in which or perhaps

00:03:21,220 --> 00:03:24,970
the main way in which a sarakin can

00:03:22,930 --> 00:03:26,620
yield the right kind of value it's by

00:03:24,970 --> 00:03:29,910
changing the front changing the balance

00:03:26,620 --> 00:03:29,910

YouTube URL: https://www.youtube.com/watch?v=K7kD_JfRUY0


