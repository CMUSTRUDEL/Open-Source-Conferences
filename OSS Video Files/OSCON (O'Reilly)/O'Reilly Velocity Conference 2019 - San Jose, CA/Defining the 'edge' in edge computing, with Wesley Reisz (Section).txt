Title: Defining the 'edge' in edge computing, with Wesley Reisz (Section)
Publication date: 2019-06-20
Playlist: O'Reilly Velocity Conference 2019 - San Jose, CA
Description: 
	Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:00,089 --> 00:00:04,290
Wesley thanks for coming in today tell

00:00:02,460 --> 00:00:06,540
us a little bit about section and what

00:00:04,290 --> 00:00:07,890
you guys are doing in the edge computing

00:00:06,540 --> 00:00:11,190
space you bet thanks John thanks for

00:00:07,890 --> 00:00:14,759
having me so section is an edge compute

00:00:11,190 --> 00:00:15,839
platform now if you think about the way

00:00:14,759 --> 00:00:18,420
I like to describe it if you think about

00:00:15,839 --> 00:00:21,900
companies like Facebook Netflix Google

00:00:18,420 --> 00:00:24,090
they have platform teams that help their

00:00:21,900 --> 00:00:25,740
feature developers kind of implement and

00:00:24,090 --> 00:00:27,269
deliver features right you build a

00:00:25,740 --> 00:00:29,880
platform you deliver it to it so that's

00:00:27,269 --> 00:00:31,800
kind of what we do we just do it at the

00:00:29,880 --> 00:00:34,890
edge space so you might be familiar with

00:00:31,800 --> 00:00:37,200
like a CDN workload so what we do is we

00:00:34,890 --> 00:00:38,850
deploy kubernetes based clusters out

00:00:37,200 --> 00:00:40,620
towards the edge locations that are

00:00:38,850 --> 00:00:42,270
globally distributed so if you can

00:00:40,620 --> 00:00:44,160
container I as a workload you can put it

00:00:42,270 --> 00:00:47,039
into this platform and what that gives

00:00:44,160 --> 00:00:49,260
you gives customers is the ability to

00:00:47,039 --> 00:00:53,309
have this module library of different

00:00:49,260 --> 00:00:55,260
laughs maybe varnish cache could be

00:00:53,309 --> 00:00:57,570
bought blockers things like that and

00:00:55,260 --> 00:01:00,059
then what they do is they can use this

00:00:57,570 --> 00:01:03,059
kind of get-ups workflow to be able to

00:01:00,059 --> 00:01:05,400
kind of configure and deploy what their

00:01:03,059 --> 00:01:07,650
edge infrastructure looks like so what

00:01:05,400 --> 00:01:09,299
we kind of do is we build a platform for

00:01:07,650 --> 00:01:12,060
teams to be able to deliver their own

00:01:09,299 --> 00:01:14,280
features on now it's computing is

00:01:12,060 --> 00:01:15,960
garnered a lot of interest in recent

00:01:14,280 --> 00:01:18,810
years but there seems to be like a lack

00:01:15,960 --> 00:01:21,990
of consensus on what it is and where it

00:01:18,810 --> 00:01:24,570
is what how do you define the edge yeah

00:01:21,990 --> 00:01:27,210
it's a really good question so the edge

00:01:24,570 --> 00:01:30,450
is really a continuum the way we like to

00:01:27,210 --> 00:01:32,549
look at it it changes based on the use

00:01:30,450 --> 00:01:35,640
case that you're trying to deliver so if

00:01:32,549 --> 00:01:37,380
you take a look at your local phone that

00:01:35,640 --> 00:01:39,329
is an edge device it's a device where

00:01:37,380 --> 00:01:41,549
you can deploy code it's a device edge

00:01:39,329 --> 00:01:44,520
as is IOT different devices like that

00:01:41,549 --> 00:01:46,770
you also can hear about like Netflix

00:01:44,520 --> 00:01:48,659
talking about an application edge so

00:01:46,770 --> 00:01:50,670
Netflix for example can go all the way

00:01:48,659 --> 00:01:53,100
back to where the customers enter into

00:01:50,670 --> 00:01:54,960
their architecture they call that their

00:01:53,100 --> 00:01:56,490
app edge and so what they do there is

00:01:54,960 --> 00:01:58,560
they have all these individual devices

00:01:56,490 --> 00:02:00,899
that are connecting up to their systems

00:01:58,560 --> 00:02:02,909
they deploy containers use node to talk

00:02:00,899 --> 00:02:05,579
to back-end systems but that's their app

00:02:02,909 --> 00:02:08,190
edge between that app edge and the

00:02:05,579 --> 00:02:11,110
device edge you have like traditional

00:02:08,190 --> 00:02:12,790
CDN edges where you do cache or our

00:02:11,110 --> 00:02:14,950
optimization from JavaScript or for

00:02:12,790 --> 00:02:18,100
images or for HTML kind of that

00:02:14,950 --> 00:02:19,600
traditional CDN space if you back up

00:02:18,100 --> 00:02:22,000
maybe a little bit closer to the user

00:02:19,600 --> 00:02:25,030
you'll see things like an infrastructure

00:02:22,000 --> 00:02:27,760
edge so by gee you're hearing about kind

00:02:25,030 --> 00:02:30,160
of deploying things into a cell phone

00:02:27,760 --> 00:02:33,850
tower for example that's kind of like

00:02:30,160 --> 00:02:37,690
that IOT are that infrastructure edge or

00:02:33,850 --> 00:02:39,250
the telco edge so the answer to that

00:02:37,690 --> 00:02:41,410
question is it depends

00:02:39,250 --> 00:02:43,570
it's what is your use case and what are

00:02:41,410 --> 00:02:45,340
you trying to solve ultimately it's

00:02:43,570 --> 00:02:47,140
trying to get as close to the user with

00:02:45,340 --> 00:02:49,450
your business logic that makes the most

00:02:47,140 --> 00:02:51,910
sense that's what we think edges and

00:02:49,450 --> 00:02:53,530
what are some real-world examples of the

00:02:51,910 --> 00:02:54,880
edge applications sure sure

00:02:53,530 --> 00:02:57,640
so the first one is one I already

00:02:54,880 --> 00:02:59,980
mentioned right CDN a CDN use case so as

00:02:57,640 --> 00:03:02,380
I mentioned what we do at section is we

00:02:59,980 --> 00:03:05,410
deploy kubernetes clusters out to remote

00:03:02,380 --> 00:03:07,030
edge locations so with that any workload

00:03:05,410 --> 00:03:08,950
that you can containerize can be

00:03:07,030 --> 00:03:12,250
deployed to that so for something like a

00:03:08,950 --> 00:03:14,530
CDN what we can do is containerized

00:03:12,250 --> 00:03:16,989
varnish cache for example we can employ

00:03:14,530 --> 00:03:19,900
that out there you can cache javascript

00:03:16,989 --> 00:03:21,790
you can cache the HTML CSS and it's it's

00:03:19,900 --> 00:03:24,070
just a container so it's easy to

00:03:21,790 --> 00:03:26,230
configure easy to deploy so that's an

00:03:24,070 --> 00:03:27,670
edge that is an edge it's a CDN edge

00:03:26,230 --> 00:03:29,620
we've been doing it for many many years

00:03:27,670 --> 00:03:32,980
ones that I'm a little more excited

00:03:29,620 --> 00:03:36,250
about are things like the adaptive

00:03:32,980 --> 00:03:38,709
keyboard that is on mobile devices so

00:03:36,250 --> 00:03:41,950
there's this idea federated learning at

00:03:38,709 --> 00:03:44,590
the edge and what that idea is is you

00:03:41,950 --> 00:03:46,959
can do things to establish and build a

00:03:44,590 --> 00:03:49,690
model at the edge and then what you can

00:03:46,959 --> 00:03:51,280
do is so like the adaptive keyboard as I

00:03:49,690 --> 00:03:52,690
mentioned on your phone on Android

00:03:51,280 --> 00:03:54,549
phones Google published paper a couple

00:03:52,690 --> 00:03:56,350
years ago it talked about federated

00:03:54,549 --> 00:03:58,090
learning and then this adaptive keyboard

00:03:56,350 --> 00:04:00,160
was an instance of it and so what you

00:03:58,090 --> 00:04:01,870
can do is as you're you know using your

00:04:00,160 --> 00:04:02,470
thumb tracing out the words on your

00:04:01,870 --> 00:04:04,989
phone

00:04:02,470 --> 00:04:07,150
it literally builds a model can build a

00:04:04,989 --> 00:04:09,100
model based on your words that you

00:04:07,150 --> 00:04:10,900
select so it gets more accurate as

00:04:09,100 --> 00:04:13,510
you're going and with the idea of

00:04:10,900 --> 00:04:15,760
federated learning what you can then do

00:04:13,510 --> 00:04:18,040
is take the model that comes out of that

00:04:15,760 --> 00:04:19,470
and then bring it back to an origin and

00:04:18,040 --> 00:04:21,940
bring it back to a cloud provider

00:04:19,470 --> 00:04:24,400
aggregate those together create a more

00:04:21,940 --> 00:04:25,900
efficient model deploy them out what's

00:04:24,400 --> 00:04:28,509
really powerful about that though is

00:04:25,900 --> 00:04:31,360
that with this adaptive keyboard there

00:04:28,509 --> 00:04:33,729
is there's security that's put into it

00:04:31,360 --> 00:04:35,680
to respect like privacy to be able to

00:04:33,729 --> 00:04:37,840
make sure that your privacy is respected

00:04:35,680 --> 00:04:40,030
on that device and not shared with the

00:04:37,840 --> 00:04:41,889
provider so this idea of federated

00:04:40,030 --> 00:04:43,570
learning gives you the benefit of using

00:04:41,889 --> 00:04:46,389
machine learning on these like edge

00:04:43,570 --> 00:04:49,210
devices but can do things to respect

00:04:46,389 --> 00:04:50,440
privacy in ways that we haven't done a

00:04:49,210 --> 00:04:53,199
really great job as an industry

00:04:50,440 --> 00:04:55,270
protecting privacy with so how should

00:04:53,199 --> 00:04:57,220
developers think about edge applications

00:04:55,270 --> 00:05:00,460
architecture lis so again it goes back

00:04:57,220 --> 00:05:01,870
to that kind of response before it's it

00:05:00,460 --> 00:05:04,900
depends on your use case what are you

00:05:01,870 --> 00:05:08,830
trying to do we know from past studies

00:05:04,900 --> 00:05:10,150
like Amazon if Amazon sees one second of

00:05:08,830 --> 00:05:12,610
slow downtown on their site that

00:05:10,150 --> 00:05:14,710
literally over a year is billions of

00:05:12,610 --> 00:05:17,710
dollars that translates to if Google

00:05:14,710 --> 00:05:20,289
sees a quarter of a second slow down a

00:05:17,710 --> 00:05:21,490
search speeds that means so many search

00:05:20,289 --> 00:05:24,009
results aren't going to be returned

00:05:21,490 --> 00:05:26,680
which means real ad revenue so you need

00:05:24,009 --> 00:05:28,900
to really understand what it is as a

00:05:26,680 --> 00:05:31,330
business that you need to that you're

00:05:28,900 --> 00:05:33,310
trying to achieve if performance and

00:05:31,330 --> 00:05:34,660
latency or examples of things that

00:05:33,310 --> 00:05:37,360
you're trying to do getting that

00:05:34,660 --> 00:05:39,610
workload closer to users is going to

00:05:37,360 --> 00:05:41,770
have a huge impact one of the things

00:05:39,610 --> 00:05:45,159
that we really try to do with our

00:05:41,770 --> 00:05:47,560
platform is we focus on this idea of any

00:05:45,159 --> 00:05:49,120
workload anyplace which is this idea to

00:05:47,560 --> 00:05:51,820
coin kubernetes clusters and then

00:05:49,120 --> 00:05:54,430
deploying these containers into it and

00:05:51,820 --> 00:05:56,349
then it's this a DevOps mindset that

00:05:54,430 --> 00:05:58,150
removes friction from the development

00:05:56,349 --> 00:06:00,400
process so that developers can actually

00:05:58,150 --> 00:06:02,530
use a git ops workflow to be able to

00:06:00,400 --> 00:06:05,710
push things out and then finally

00:06:02,530 --> 00:06:07,150
bringing all of the log data that's

00:06:05,710 --> 00:06:08,710
together and giving a single pane of

00:06:07,150 --> 00:06:11,380
glass so the developers can see what's

00:06:08,710 --> 00:06:13,510
really happening so if you're trying to

00:06:11,380 --> 00:06:16,810
solve for example that performance that

00:06:13,510 --> 00:06:18,460
latency problem having removing friction

00:06:16,810 --> 00:06:20,919
being able to deploy anywhere being able

00:06:18,460 --> 00:06:23,500
to have insight deep insight into what's

00:06:20,919 --> 00:06:26,139
actually happening at that edge location

00:06:23,500 --> 00:06:27,880
gives developers a tool so that they can

00:06:26,139 --> 00:06:31,300
make decisions and they can drive down

00:06:27,880 --> 00:06:33,880
latency they can do things like be able

00:06:31,300 --> 00:06:35,169
to to remove third-party libraries and

00:06:33,880 --> 00:06:37,200
put them after page load there's a

00:06:35,169 --> 00:06:38,970
variety of things that can be done

00:06:37,200 --> 00:06:40,980
you just have insight of what's actually

00:06:38,970 --> 00:06:42,840
happening at the edge then developers

00:06:40,980 --> 00:06:44,010
can really respond to that and be able

00:06:42,840 --> 00:06:45,330
to make better and better apps

00:06:44,010 --> 00:06:47,550
so the answer your question is it

00:06:45,330 --> 00:06:49,560
depends depends on what your use case is

00:06:47,550 --> 00:06:51,120
what your workloads trying to do we

00:06:49,560 --> 00:06:53,700
often see latency is one of the big ones

00:06:51,120 --> 00:06:56,370
so what are some of the challenges of

00:06:53,700 --> 00:07:00,000
operating software at the edge and how

00:06:56,370 --> 00:07:02,070
are they being solved yeah so that's

00:07:00,000 --> 00:07:03,630
that's a big question there's a lot of

00:07:02,070 --> 00:07:05,820
problems right now with operating

00:07:03,630 --> 00:07:07,830
different software at the edge obviously

00:07:05,820 --> 00:07:10,710
connectivity for different devices is a

00:07:07,830 --> 00:07:12,960
problem storage space can be problems in

00:07:10,710 --> 00:07:14,070
the space that we're working out it kind

00:07:12,960 --> 00:07:16,050
of goes back to those three things

00:07:14,070 --> 00:07:18,210
having insight on what's happening at

00:07:16,050 --> 00:07:19,890
the edge being able to remove that

00:07:18,210 --> 00:07:21,480
developer friction of getting things

00:07:19,890 --> 00:07:23,130
that are deployed out there and then

00:07:21,480 --> 00:07:25,770
really being able to deploy your

00:07:23,130 --> 00:07:28,350
workload to the edges that make the most

00:07:25,770 --> 00:07:30,390
sense for your use case those are the

00:07:28,350 --> 00:07:32,190
things that are the things we're focused

00:07:30,390 --> 00:07:32,580
on there's still a lot of challenges out

00:07:32,190 --> 00:07:35,160
there

00:07:32,580 --> 00:07:37,320
state at the edge there's a variety of

00:07:35,160 --> 00:07:39,720
things that that still continues to

00:07:37,320 --> 00:07:41,130
happen what we're trying to do is kind

00:07:39,720 --> 00:07:43,500
of address those three things first

00:07:41,130 --> 00:07:45,000
though to try to kind of make it easier

00:07:43,500 --> 00:07:47,220
space for developers to be involved with

00:07:45,000 --> 00:07:48,510
Oh Wesley thanks three insights today

00:07:47,220 --> 00:07:50,930
much appreciate you thank you for

00:07:48,510 --> 00:07:50,930

YouTube URL: https://www.youtube.com/watch?v=0syHrsIz61k


