Title: Why cloud-native enterprise security matters, Matt Stine (Pivotal)
Publication date: 2017-10-31
Playlist: O'Reilly Security Conference 2017 - New York, New York
Description: 
	The types of threats facing the enterprise are relatively well understood—malware, advanced persistent threats, and leaked credentials—which are typically addressed by slowing the rate of change, because change is seen as a harbinger of a potential threat. However, these security threats are increasing in volume and speed. In other words, attackers are moving faster, while we are moving slower.

The answer is to create fundamentally different behaviors within security. Matt Stine offers an overview of the three principles of cloud-native security—rotate user credentials frequently, so they are only useful for a short time; repave servers and applications from a known good state often; and repair vulnerable software as soon as updates are available—and explains how this approach helps you deal with the exponentially increasing volume and velocity of threats. By investing in these new behaviors, you bring the power of cloud-native development and operations approaches to enterprise security and prepare your company to face the new wave of attackers.

This keynote is sponsored by Pivotal

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:02,260 --> 00:00:07,900
so before we answer the question why

00:00:06,220 --> 00:00:10,180
cloud native security matters we should

00:00:07,900 --> 00:00:15,400
probably start to ask the question well

00:00:10,180 --> 00:00:17,830
what exactly is cloud native security so

00:00:15,400 --> 00:00:20,230
in the cloud native world we have the

00:00:17,830 --> 00:00:22,990
intersection of conversations like

00:00:20,230 --> 00:00:25,179
DevOps continuous delivery micro

00:00:22,990 --> 00:00:28,599
services and containers there's really

00:00:25,179 --> 00:00:30,910
nothing cloudy per se about any of these

00:00:28,599 --> 00:00:34,030
things in fact I would say that cloud

00:00:30,910 --> 00:00:37,719
native is really primarily about how not

00:00:34,030 --> 00:00:41,829
where but there is a sense in which the

00:00:37,719 --> 00:00:44,500
cloud is in fact a place I defined it in

00:00:41,829 --> 00:00:46,480
my book a couple of years ago as any

00:00:44,500 --> 00:00:49,420
environment in which computing

00:00:46,480 --> 00:00:51,760
networking and storage resources can be

00:00:49,420 --> 00:00:54,190
provisioned and released elastically in

00:00:51,760 --> 00:00:57,280
an on-demand self-service manner and we

00:00:54,190 --> 00:01:00,179
use cloud platforms for the purpose of

00:00:57,280 --> 00:01:07,090
getting to things like speed and

00:01:00,179 --> 00:01:09,100
scalability but then also security the

00:01:07,090 --> 00:01:11,410
goal is that by simply running your

00:01:09,100 --> 00:01:14,440
applications on a platform like this

00:01:11,410 --> 00:01:16,420
they should be secure by default well

00:01:14,440 --> 00:01:20,130
then how do we want to actually shift

00:01:16,420 --> 00:01:23,590
our approach what's our belief that the

00:01:20,130 --> 00:01:24,010
mainstream reactive process driven slow

00:01:23,590 --> 00:01:26,380
it down

00:01:24,010 --> 00:01:28,090
don't touch it approach that tends to

00:01:26,380 --> 00:01:30,370
dominate software security and the

00:01:28,090 --> 00:01:33,160
enterprise's that we see is inherently

00:01:30,370 --> 00:01:35,050
broken if you want to be more secure you

00:01:33,160 --> 00:01:38,530
should actually try to move faster now

00:01:35,050 --> 00:01:40,450
if we look at the seemingly daily IT

00:01:38,530 --> 00:01:43,080
breach reports I'm sure you all know

00:01:40,450 --> 00:01:46,140
that well we've lost the microphone here

00:01:43,080 --> 00:01:49,410
we'll find three persistent themes

00:01:46,140 --> 00:01:55,750
malware advanced persistent threats and

00:01:49,410 --> 00:01:57,610
elite credentials malware you know any

00:01:55,750 --> 00:01:59,740
program obviously that finds a way to my

00:01:57,610 --> 00:02:01,180
computer to act on some malicious intent

00:01:59,740 --> 00:02:02,530
well what makes us vulnerable to that

00:02:01,180 --> 00:02:05,530
well as it turns out it's our own

00:02:02,530 --> 00:02:07,510
software we have thousands of catalog

00:02:05,530 --> 00:02:09,550
vulnerabilities still installed and

00:02:07,510 --> 00:02:12,219
running in our data centers today why

00:02:09,550 --> 00:02:14,019
because well we won't patch we don't

00:02:12,219 --> 00:02:15,459
have the confidence as an organization

00:02:14,019 --> 00:02:15,790
that when we push out a patch we won't

00:02:15,459 --> 00:02:17,530
break

00:02:15,790 --> 00:02:19,780
the world in the process and so rather

00:02:17,530 --> 00:02:21,969
than risk bringing down a system we to

00:02:19,780 --> 00:02:25,870
turn our security posture into a game of

00:02:21,969 --> 00:02:28,599
chance so what's our posture repair it

00:02:25,870 --> 00:02:30,790
you have to patch as soon as it's out

00:02:28,599 --> 00:02:32,470
well how do you deal with that

00:02:30,790 --> 00:02:34,689
confidence problem those testing

00:02:32,470 --> 00:02:36,519
scenarios well part of the deal is that

00:02:34,689 --> 00:02:37,900
you need some standard cache of golden

00:02:36,519 --> 00:02:39,670
images that all your software is going

00:02:37,900 --> 00:02:41,530
to run on and then you need an automated

00:02:39,670 --> 00:02:44,349
way to patch and push those images out

00:02:41,530 --> 00:02:47,650
and if you can get that then you're well

00:02:44,349 --> 00:02:49,090
positioned for the next phase advanced

00:02:47,650 --> 00:02:50,530
persistent threats so attacker

00:02:49,090 --> 00:02:54,340
penetrates the network and hides

00:02:50,530 --> 00:02:55,989
undetected it needs time to mature think

00:02:54,340 --> 00:02:58,950
about cancer cancer doesn't kill in a

00:02:55,989 --> 00:03:02,530
day but it kills as it spreads over time

00:02:58,950 --> 00:03:03,459
time is what an apt feeds on well what

00:03:02,530 --> 00:03:05,859
makes us vulnerable

00:03:03,459 --> 00:03:08,079
our current reactive culture of

00:03:05,859 --> 00:03:09,519
detection even if we find them that's

00:03:08,079 --> 00:03:13,150
very different from fixing and

00:03:09,519 --> 00:03:16,090
remediating them so our posture is to

00:03:13,150 --> 00:03:19,150
repave everything continuously from

00:03:16,090 --> 00:03:20,829
those continuously repaired images every

00:03:19,150 --> 00:03:22,750
time you do it you'll eradicate any

00:03:20,829 --> 00:03:25,090
malware that's already gained access and

00:03:22,750 --> 00:03:26,440
with continuing stronger images that

00:03:25,090 --> 00:03:29,859
malware may not be able to gain access

00:03:26,440 --> 00:03:32,919
again and so we move from a model where

00:03:29,859 --> 00:03:35,979
long up x is what we were rewarded for

00:03:32,919 --> 00:03:37,840
to a model where we ask what's the

00:03:35,979 --> 00:03:42,930
minimum amount of time that a server

00:03:37,840 --> 00:03:45,699
must live which leaves credentials

00:03:42,930 --> 00:03:47,409
imagine all of the unique usernames and

00:03:45,699 --> 00:03:49,209
passwords that you personally managed

00:03:47,409 --> 00:03:52,090
well there are more in the data center

00:03:49,209 --> 00:03:53,979
and we tend to enforce rotation policies

00:03:52,090 --> 00:03:56,079
on humans but we don't do that as much

00:03:53,979 --> 00:03:58,479
in the data center and what this means

00:03:56,079 --> 00:04:00,879
is that again give it enough time you're

00:03:58,479 --> 00:04:02,650
going to spring a leak and when you do

00:04:00,879 --> 00:04:05,459
you're leaking liquid gold in the form

00:04:02,650 --> 00:04:08,500
of those credentials so our posture is

00:04:05,459 --> 00:04:11,349
rotate your credentials all of them as

00:04:08,500 --> 00:04:13,389
frequently as possible on intervals

00:04:11,349 --> 00:04:15,519
measured in minutes if you possibly can

00:04:13,389 --> 00:04:18,280
and by doing that when you eventually

00:04:15,519 --> 00:04:22,509
spring that leak you'll be liking liquid

00:04:18,280 --> 00:04:24,370
zinc instead of liquid gold so for the

00:04:22,509 --> 00:04:25,960
most prevalent threats faced by the

00:04:24,370 --> 00:04:28,150
enterprise the thing that makes us

00:04:25,960 --> 00:04:30,069
vulnerable is reducing the rate of

00:04:28,150 --> 00:04:33,160
change in order to avoid

00:04:30,069 --> 00:04:35,199
and yet reducing the rate of change is

00:04:33,160 --> 00:04:37,720
actually what's increasing our risk and

00:04:35,199 --> 00:04:43,000
so to mitigate we continuously employ

00:04:37,720 --> 00:04:45,009
the 3 R's repair repave and rotate want

00:04:43,000 --> 00:04:47,520
to be more secure go faster

00:04:45,009 --> 00:04:53,589
thank you

00:04:47,520 --> 00:04:53,589
[Applause]

00:04:58,660 --> 00:05:00,720

YouTube URL: https://www.youtube.com/watch?v=3SreWHsmkOc


