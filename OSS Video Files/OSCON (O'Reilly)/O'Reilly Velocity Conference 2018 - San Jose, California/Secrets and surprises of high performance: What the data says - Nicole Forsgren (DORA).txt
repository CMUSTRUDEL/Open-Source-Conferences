Title: Secrets and surprises of high performance: What the data says - Nicole Forsgren (DORA)
Publication date: 2018-07-05
Playlist: O'Reilly Velocity Conference 2018 - San Jose, California
Description: 
	Over the past four years, the State of DevOps Report has shown exactly how high-performing IT teams decisively outperform low-performing peers. So how do you become a high-performing technology organization?

Nicole Forsgren shares results and stories to uncover the secrets and surprises of what really makes high-performing technology-driven teams and organizations, helping you deliver quality software quickly and reliably. The insights include architecture, burnout, leadership, and employee engagement. Youâ€™ll leave with takeaways you can apply immediately to make your team more effective and warning signs to watch out for as you continue to push the envelope in your technology journey.

Join us in person at the O'Reilly Velocity Conference to learn to build and manage performant, distributed, resilient, and highly available websites and applications. Learn more: https://oreil.ly/2LFc8Gw

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:01,550 --> 00:00:06,319
first of all technology matters so let's

00:00:04,729 --> 00:00:09,530
get started okay after building and

00:00:06,319 --> 00:00:11,330
working in tech and building systems for

00:00:09,530 --> 00:00:13,700
so years I've been digging into the data

00:00:11,330 --> 00:00:14,450
and the tech impacts and here's what I

00:00:13,700 --> 00:00:17,119
found

00:00:14,450 --> 00:00:18,740
okay first of all tech matters obviously

00:00:17,119 --> 00:00:20,869
we all know this right we've been doing

00:00:18,740 --> 00:00:23,419
us ok the challenge is that nicholas

00:00:20,869 --> 00:00:25,819
carr sort of had a point but he had a

00:00:23,419 --> 00:00:28,189
point in a very specific way what he

00:00:25,819 --> 00:00:31,460
meant was that if you do tech as a

00:00:28,189 --> 00:00:33,110
commodity right so like if you like buy

00:00:31,460 --> 00:00:35,239
it off the shelf and plug it in and then

00:00:33,110 --> 00:00:37,430
walk away of course it doesn't make a

00:00:35,239 --> 00:00:41,420
difference because any other company can

00:00:37,430 --> 00:00:43,280
do the exact same thing if you buy a

00:00:41,420 --> 00:00:44,750
system plug it in and walk away any

00:00:43,280 --> 00:00:47,300
other competitor can do the exact same

00:00:44,750 --> 00:00:49,640
thing it won't drive value for a

00:00:47,300 --> 00:00:50,960
business or an organization it's the

00:00:49,640 --> 00:00:52,089
same thing with servers it's the same

00:00:50,960 --> 00:00:55,579
thing with software

00:00:52,089 --> 00:00:57,140
well yeah you're doing it wrong for

00:00:55,579 --> 00:00:59,629
decades that's how organizations were

00:00:57,140 --> 00:01:02,809
doing it there's no such thing as DevOps

00:00:59,629 --> 00:01:04,580
in a box so by the way sorry all those

00:01:02,809 --> 00:01:06,890
brand new vendors that are trying to

00:01:04,580 --> 00:01:10,730
sell us stuff UPS in a box the same

00:01:06,890 --> 00:01:13,340
thing won't work now ok for all of us

00:01:10,730 --> 00:01:17,240
here at velocity though we've known this

00:01:13,340 --> 00:01:20,920
for years right I'll spawn Hammond's

00:01:17,240 --> 00:01:25,280
talk 10 deploys per day dev and ops

00:01:20,920 --> 00:01:26,840
cooperation at Flickr we know this ok

00:01:25,280 --> 00:01:28,370
the challenge though is that I was even

00:01:26,840 --> 00:01:30,380
going back to my management and saying

00:01:28,370 --> 00:01:32,060
there's this great story there's this

00:01:30,380 --> 00:01:36,110
great talk and then he would sometimes

00:01:32,060 --> 00:01:38,570
say yeah but it won't work here or yeah

00:01:36,110 --> 00:01:40,100
but I don't believe you or but I'm not

00:01:38,570 --> 00:01:42,800
going to invest in it because I don't

00:01:40,100 --> 00:01:43,750
know which pieces will work or why

00:01:42,800 --> 00:01:46,340
should I care

00:01:43,750 --> 00:01:49,250
ok well this is why and this is what

00:01:46,340 --> 00:01:52,760
will work ok DevOps is technical

00:01:49,250 --> 00:01:56,210
practices and lean processes and culture

00:01:52,760 --> 00:02:01,250
and now we have the data to show that it

00:01:56,210 --> 00:02:03,350
drives performance outcomes right

00:02:01,250 --> 00:02:07,610
because our intuition falls short we

00:02:03,350 --> 00:02:10,789
need data to help verify it here's how

00:02:07,610 --> 00:02:12,470
we can help to make the right smart

00:02:10,789 --> 00:02:14,520
investments so that we don't lose

00:02:12,470 --> 00:02:17,180
opportunities here

00:02:14,520 --> 00:02:19,470
we see DevOps is good for technology and

00:02:17,180 --> 00:02:20,280
it's good for software delivery

00:02:19,470 --> 00:02:22,260
performance

00:02:20,280 --> 00:02:24,300
now when I say software delivery

00:02:22,260 --> 00:02:26,520
performance I mean developing and

00:02:24,300 --> 00:02:29,490
delivering software with both speed and

00:02:26,520 --> 00:02:31,380
stability again we've been seeing this

00:02:29,490 --> 00:02:34,410
but we didn't necessarily have the data

00:02:31,380 --> 00:02:36,210
to back it up and now we do so speed and

00:02:34,410 --> 00:02:38,190
stability when I say speed I mean

00:02:36,210 --> 00:02:39,870
deployment frequency or when the

00:02:38,190 --> 00:02:42,510
business demands this also works for

00:02:39,870 --> 00:02:46,380
packaged software I mean lead time for

00:02:42,510 --> 00:02:48,870
changes code commit to code deploy now

00:02:46,380 --> 00:02:50,670
we focus on that part of the process

00:02:48,870 --> 00:02:52,530
because that's the part that's most

00:02:50,670 --> 00:02:53,790
predictable not looking at the fuzzy

00:02:52,530 --> 00:02:56,430
front end although we know that's

00:02:53,790 --> 00:02:58,050
important too I'm looking at MTTR mean

00:02:56,430 --> 00:03:00,690
time to recover and change fail rate

00:02:58,050 --> 00:03:03,450
those are the stability metrics now

00:03:00,690 --> 00:03:05,070
quickly I'm gonna mention when I do the

00:03:03,450 --> 00:03:07,470
analysis for the last four years I have

00:03:05,070 --> 00:03:09,720
over 23,000 data points around the world

00:03:07,470 --> 00:03:12,030
I put all of those four numbers into a

00:03:09,720 --> 00:03:13,170
hopper right and I say how do they group

00:03:12,030 --> 00:03:15,690
how do they cluster it's called the

00:03:13,170 --> 00:03:18,180
cluster analysis and I see distinct

00:03:15,690 --> 00:03:20,310
patterns where all four of them kind of

00:03:18,180 --> 00:03:22,020
hang out together statistically

00:03:20,310 --> 00:03:23,760
significantly and then there's a gap and

00:03:22,020 --> 00:03:26,190
then there's all four of them hanging

00:03:23,760 --> 00:03:27,690
out together significantly and then a

00:03:26,190 --> 00:03:31,290
gap and then they all hang out together

00:03:27,690 --> 00:03:32,580
like sucking so I'm super creative and I

00:03:31,290 --> 00:03:35,700
call them high performers and medium

00:03:32,580 --> 00:03:37,980
performers and low performers so here's

00:03:35,700 --> 00:03:41,250
what we see when I compare them the data

00:03:37,980 --> 00:03:44,940
shows me high performers are 46 times

00:03:41,250 --> 00:03:47,130
faster in terms sorry 46 times more

00:03:44,940 --> 00:03:50,040
frequent code deployments they can kick

00:03:47,130 --> 00:03:52,560
out code multiple times a day compared

00:03:50,040 --> 00:03:54,930
to once a week or less we see four

00:03:52,560 --> 00:03:57,410
hundred twenty forty times faster lead

00:03:54,930 --> 00:04:00,180
time from code to commit to code deploy

00:03:57,410 --> 00:04:02,700
we can deliver code faster we can

00:04:00,180 --> 00:04:05,310
deliver features faster we can delight

00:04:02,700 --> 00:04:06,930
our customers we can beat competitors to

00:04:05,310 --> 00:04:09,990
market we can keep up with compliance

00:04:06,930 --> 00:04:12,180
and regulatory changes our our intuition

00:04:09,990 --> 00:04:15,750
told us this was true now we have hard

00:04:12,180 --> 00:04:19,020
numbers okay we also see better metrics

00:04:15,750 --> 00:04:23,640
in terms of stability and reliability we

00:04:19,020 --> 00:04:25,380
see 96 times faster MTT our high

00:04:23,640 --> 00:04:27,750
performers recover in less than an hour

00:04:25,380 --> 00:04:28,440
instead of several days by the way

00:04:27,750 --> 00:04:31,470
several

00:04:28,440 --> 00:04:34,590
dey's low performers are still down for

00:04:31,470 --> 00:04:38,000
a while high performers are 1/5 is

00:04:34,590 --> 00:04:38,000

YouTube URL: https://www.youtube.com/watch?v=X7I7Xl1TQkI


