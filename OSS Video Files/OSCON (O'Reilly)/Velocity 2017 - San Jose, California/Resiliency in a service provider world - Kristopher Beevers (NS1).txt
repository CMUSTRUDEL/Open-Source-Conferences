Title: Resiliency in a service provider world - Kristopher Beevers (NS1)
Publication date: 2017-06-21
Playlist: Velocity 2017 - San Jose, California
Description: 
	Today we depend upon service providers (for storage, compute, network, DNS, CDN, and much more) to build and deliver our applications. Even when the most sophisticated service providers on the internet fail—and they do—it’s still possible to build resilient applications. Kristopher Beevers explores how ops teams and developers are thinking about resiliency in a service provider world.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Google: http://plus.google.com/+oreillymedia
Captions: 
	00:00:02,390 --> 00:00:10,259
everybody I'm Chris nice to meet you so

00:00:07,830 --> 00:00:12,839
we've always tried pretty hard to build

00:00:10,259 --> 00:00:16,200
applications that are resilient to

00:00:12,839 --> 00:00:17,820
failures here's a simple application so

00:00:16,200 --> 00:00:19,859
we're going to going to going to look at

00:00:17,820 --> 00:00:21,210
some diagrams here so you've got an app

00:00:19,859 --> 00:00:23,490
server in a database server in the

00:00:21,210 --> 00:00:24,960
moment we look at this we say there's

00:00:23,490 --> 00:00:26,820
some opportunities to do a little bit

00:00:24,960 --> 00:00:29,490
better like what if our database server

00:00:26,820 --> 00:00:31,410
fails so maybe we introduce a standby

00:00:29,490 --> 00:00:34,260
server and we can failover to it in that

00:00:31,410 --> 00:00:36,270
sort of scenario and it's not too hard

00:00:34,260 --> 00:00:38,010
to take this idea and extend it out and

00:00:36,270 --> 00:00:39,840
build a pretty canonical data center

00:00:38,010 --> 00:00:42,000
architecture where we've got you know a

00:00:39,840 --> 00:00:43,559
bunch of different app servers with

00:00:42,000 --> 00:00:45,329
traffic to them managed by a layer of

00:00:43,559 --> 00:00:47,280
load balancers that are redundant and

00:00:45,329 --> 00:00:48,629
you know multiple routers and upstream

00:00:47,280 --> 00:00:50,070
network providers and so on and we're

00:00:48,629 --> 00:00:52,850
pretty confident when we look at this

00:00:50,070 --> 00:00:54,899
that any one thing here can fail and

00:00:52,850 --> 00:00:57,090
we're not going to have too bad of a day

00:00:54,899 --> 00:01:00,510
and then we realize the power might go

00:00:57,090 --> 00:01:02,100
out so now we need two of these if I

00:01:00,510 --> 00:01:04,530
sort of back to square one balancing

00:01:02,100 --> 00:01:06,090
traffic across data centers and this is

00:01:04,530 --> 00:01:08,340
all remedial stuff we've all been doing

00:01:06,090 --> 00:01:11,340
this for a really long time but

00:01:08,340 --> 00:01:12,930
something sort of new is crept in over

00:01:11,340 --> 00:01:14,340
the last decade or so and that's that

00:01:12,930 --> 00:01:16,370
we're introducing new kinds of

00:01:14,340 --> 00:01:19,530
dependencies into our application

00:01:16,370 --> 00:01:21,480
architectures through the use of cloud

00:01:19,530 --> 00:01:23,130
service providers so here's a maybe a

00:01:21,480 --> 00:01:24,920
little bit more modern of an application

00:01:23,130 --> 00:01:28,140
delivery architecture we might have a

00:01:24,920 --> 00:01:31,290
managed DNS Network directing traffic

00:01:28,140 --> 00:01:32,730
for our domain to some content delivery

00:01:31,290 --> 00:01:34,590
network and some of that traffic is

00:01:32,730 --> 00:01:36,170
coming back to origins across a bunch of

00:01:34,590 --> 00:01:38,940
different data centers and even down in

00:01:36,170 --> 00:01:41,550
the application itself for relying on

00:01:38,940 --> 00:01:44,100
services for kind of core function

00:01:41,550 --> 00:01:46,170
storage Message Queuing even AI machine

00:01:44,100 --> 00:01:47,580
learning a million other things and we

00:01:46,170 --> 00:01:48,960
love these services they're great they

00:01:47,580 --> 00:01:50,760
let us focus on the things that were

00:01:48,960 --> 00:01:53,520
best at so we don't want to do without

00:01:50,760 --> 00:01:57,090
them but there's a problem which is that

00:01:53,520 --> 00:01:59,070
they fail sometimes for all kinds of

00:01:57,090 --> 00:02:01,290
reasons right like weird bugs creep in

00:01:59,070 --> 00:02:04,050
and manifested absolutely the wrong time

00:02:01,290 --> 00:02:06,090
or you know some kid on the internet has

00:02:04,050 --> 00:02:07,710
access to a botnet and beats the crap

00:02:06,090 --> 00:02:09,929
out of your service provider some guy

00:02:07,710 --> 00:02:11,520
wakes up in the morning before he's had

00:02:09,929 --> 00:02:14,610
his first cup of coffee makes a typo and

00:02:11,520 --> 00:02:15,690
these are all issues that have harm

00:02:14,610 --> 00:02:18,030
major clouds

00:02:15,690 --> 00:02:20,160
as providers in the application delivery

00:02:18,030 --> 00:02:22,740
ecosystem in the last few months so

00:02:20,160 --> 00:02:24,510
these are real things that happen so a

00:02:22,740 --> 00:02:26,100
pretty natural thing for us to do is say

00:02:24,510 --> 00:02:29,250
hey we should introduce some redundancy

00:02:26,100 --> 00:02:30,660
at the cloud service provider layers in

00:02:29,250 --> 00:02:33,180
our application architectures maybe

00:02:30,660 --> 00:02:34,830
multiple DNS networks managing our

00:02:33,180 --> 00:02:36,660
domains and directing traffic across a

00:02:34,830 --> 00:02:40,260
bunch of different CD ends and on and on

00:02:36,660 --> 00:02:42,030
and that's easy to say how do you

00:02:40,260 --> 00:02:44,580
actually do it and let's just take a

00:02:42,030 --> 00:02:47,070
quick deep dive into how we might do

00:02:44,580 --> 00:02:48,740
this today in the context of managed DNS

00:02:47,070 --> 00:02:53,160
networks because that's an area I have a

00:02:48,740 --> 00:02:55,740
little bit of background in so if you

00:02:53,160 --> 00:02:57,480
did a dig today on linkedin comm for the

00:02:55,740 --> 00:02:59,280
NS record you'd see this or something

00:02:57,480 --> 00:03:01,860
like it right couple different DNS

00:02:59,280 --> 00:03:02,310
networks in play and s1 and Dine and by

00:03:01,860 --> 00:03:04,110
the way

00:03:02,310 --> 00:03:05,520
Sameer from LinkedIn is going to be

00:03:04,110 --> 00:03:07,470
talking about this set up later today so

00:03:05,520 --> 00:03:10,410
if you aren't already planning to go see

00:03:07,470 --> 00:03:12,470
that talk please go do but how do we

00:03:10,410 --> 00:03:15,750
actually do this behind the scenes

00:03:12,470 --> 00:03:18,030
there's a few things we see our

00:03:15,750 --> 00:03:20,640
customers doing with respect to

00:03:18,030 --> 00:03:23,550
introducing redundancy at the the DNS

00:03:20,640 --> 00:03:26,070
layer the first thing is something I

00:03:23,550 --> 00:03:27,989
call active standby setup so the idea

00:03:26,070 --> 00:03:29,850
here is you might have a managed DNS

00:03:27,989 --> 00:03:31,590
provider that's primary for your domain

00:03:29,850 --> 00:03:33,390
you manage your configuration there and

00:03:31,590 --> 00:03:34,680
then maybe you have a standby provider

00:03:33,390 --> 00:03:36,570
you find some way to synchronize your

00:03:34,680 --> 00:03:38,550
zones and your your DNS records over

00:03:36,570 --> 00:03:40,680
there if your primary providers having a

00:03:38,550 --> 00:03:41,940
bad day like some attack or something

00:03:40,680 --> 00:03:43,410
like that you go to your registrar you

00:03:41,940 --> 00:03:46,320
update the name servers you flip the big

00:03:43,410 --> 00:03:47,850
switch and this is a really bad idea you

00:03:46,320 --> 00:03:49,260
should never do this

00:03:47,850 --> 00:03:50,700
but it's the first thing that comes to

00:03:49,260 --> 00:03:51,870
mind for a lot of people the reason you

00:03:50,700 --> 00:03:56,280
should never do this is you have no

00:03:51,870 --> 00:03:58,410
control over the propagation of that

00:03:56,280 --> 00:03:59,610
name server change through the TLDs and

00:03:58,410 --> 00:04:02,220
through all the caches on the internet

00:03:59,610 --> 00:04:04,709
and so on and in fact in real scenarios

00:04:02,220 --> 00:04:07,680
we've seen this kind of setup exacerbate

00:04:04,709 --> 00:04:10,739
outages not mitigate them another

00:04:07,680 --> 00:04:12,750
mechanism for introducing redundancy at

00:04:10,739 --> 00:04:15,030
the DNS layer zone transfers his own

00:04:12,750 --> 00:04:16,799
transfers of kind of a protocol

00:04:15,030 --> 00:04:19,440
alongside DNS that's existed for a

00:04:16,799 --> 00:04:21,120
really long time for transferring domain

00:04:19,440 --> 00:04:23,789
and record information between DNS

00:04:21,120 --> 00:04:25,440
systems some cloud providers support it

00:04:23,789 --> 00:04:27,090
some don't if yours doesn't you should

00:04:25,440 --> 00:04:28,590
really kick and scream about that it's

00:04:27,090 --> 00:04:30,630
very important

00:04:28,590 --> 00:04:33,570
for every cloud provider - in DNS -

00:04:30,630 --> 00:04:36,000
support zone transferred today another

00:04:33,570 --> 00:04:37,740
setup that we're seeing emerge and

00:04:36,000 --> 00:04:39,330
become very prevalent is you know the

00:04:37,740 --> 00:04:42,540
idea of a normalized central

00:04:39,330 --> 00:04:45,120
configuration for your DNS setup this is

00:04:42,540 --> 00:04:47,730
often pretty important and the mechanism

00:04:45,120 --> 00:04:49,320
we see used when our customers are using

00:04:47,730 --> 00:04:51,060
more advanced features of modern DNS

00:04:49,320 --> 00:04:53,760
platforms like traffic management stuff

00:04:51,060 --> 00:04:54,870
or multi CDN setups and the reason is

00:04:53,760 --> 00:04:57,030
those features don't necessarily

00:04:54,870 --> 00:04:59,880
translate directly across some mechanism

00:04:57,030 --> 00:05:01,350
like zone transfer so commonly our

00:04:59,880 --> 00:05:02,970
customers will either build tools of

00:05:01,350 --> 00:05:04,590
their own to synchronize configs across

00:05:02,970 --> 00:05:06,330
the api's of their providers or there's

00:05:04,590 --> 00:05:09,570
some nice tools out there like octo DNS

00:05:06,330 --> 00:05:11,010
from github or terraform from fashion

00:05:09,570 --> 00:05:12,900
corp that have emerged recently that you

00:05:11,010 --> 00:05:16,500
should go check out our last approach

00:05:12,900 --> 00:05:18,180
that we see on occasion is some DNS

00:05:16,500 --> 00:05:20,910
providers are capable of deploying their

00:05:18,180 --> 00:05:23,160
technology and redundant networks

00:05:20,910 --> 00:05:25,080
sometimes dedicated to your use case

00:05:23,160 --> 00:05:27,360
that gets rid of some of the feature

00:05:25,080 --> 00:05:29,610
parity of synchronization challenges so

00:05:27,360 --> 00:05:31,350
there's a bunch of setups out there for

00:05:29,610 --> 00:05:33,840
doing redundant DNS and and the bottom

00:05:31,350 --> 00:05:35,580
line is especially after the attack

00:05:33,840 --> 00:05:38,310
environment that we saw her the DDoS

00:05:35,580 --> 00:05:39,990
threat that we saw last year it's very

00:05:38,310 --> 00:05:41,550
quickly become best practice to deploy

00:05:39,990 --> 00:05:42,810
we're done in DNS setups I strongly

00:05:41,550 --> 00:05:44,460
encourage you to look into doing this

00:05:42,810 --> 00:05:46,680
there's a lot of options as you see it's

00:05:44,460 --> 00:05:48,660
not that hard and sort of a corollary to

00:05:46,680 --> 00:05:51,050
that is elsewhere in your stack as

00:05:48,660 --> 00:05:53,340
you're introducing cloud services

00:05:51,050 --> 00:05:54,900
there's a lot of new tools emerging new

00:05:53,340 --> 00:05:57,930
best practices so you really should be

00:05:54,900 --> 00:05:59,520
seeking to deploy redundancy at these

00:05:57,930 --> 00:06:01,320
layers of your application delivery

00:05:59,520 --> 00:06:02,040
infrastructure as well thank you very

00:06:01,320 --> 00:06:07,269
much

00:06:02,040 --> 00:06:07,269

YouTube URL: https://www.youtube.com/watch?v=yt11_Csg7sY


