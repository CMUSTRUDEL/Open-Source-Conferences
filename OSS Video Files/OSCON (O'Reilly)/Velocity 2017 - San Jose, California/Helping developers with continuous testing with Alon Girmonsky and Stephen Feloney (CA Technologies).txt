Title: Helping developers with continuous testing with Alon Girmonsky and Stephen Feloney (CA Technologies)
Publication date: 2017-06-27
Playlist: Velocity 2017 - San Jose, California
Description: 
	Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Google: http://plus.google.com/+oreillymedia
Captions: 
	00:00:00,000 --> 00:00:04,410
hi this is Mike Henrickson from fluent

00:00:02,429 --> 00:00:06,270
and velocity in San Jose

00:00:04,410 --> 00:00:09,510
I'm here with Steven and along how you

00:00:06,270 --> 00:00:11,639
guys do it good nothing so you're you

00:00:09,510 --> 00:00:13,889
were with blaze meter and I say were

00:00:11,639 --> 00:00:16,619
because that's part of CA now and I

00:00:13,889 --> 00:00:18,300
think we talked last year can you give

00:00:16,619 --> 00:00:21,380
us an update on how that's been going

00:00:18,300 --> 00:00:25,260
for you folks it's funny yes we did

00:00:21,380 --> 00:00:28,080
speak that last year and it was you know

00:00:25,260 --> 00:00:32,040
way before that position cause it's kind

00:00:28,080 --> 00:00:35,940
of going to happen so this is kind of a

00:00:32,040 --> 00:00:39,239
closure in my eyes and it's going Frank

00:00:35,940 --> 00:00:41,160
yeah and as I yes basically love

00:00:39,239 --> 00:00:43,260
I see a company's a technology company

00:00:41,160 --> 00:00:44,820
but I wouldn't say it's a closure it's a

00:00:43,260 --> 00:00:47,550
new beginning you wouldn't call it a

00:00:44,820 --> 00:00:51,329
closure it's a new journey yes yes and

00:00:47,550 --> 00:00:53,039
so in your new beginning problem what

00:00:51,329 --> 00:00:55,050
what is it you guys do for your

00:00:53,039 --> 00:00:57,449
customers now because I know what blaze

00:00:55,050 --> 00:01:00,059
meter did but now being part of this

00:00:57,449 --> 00:01:03,449
large company what is it you bring to

00:01:00,059 --> 00:01:06,229
the market well what we're bringing to

00:01:03,449 --> 00:01:08,760
the market is a continuous delivery and

00:01:06,229 --> 00:01:10,890
with continuous delivery one of the big

00:01:08,760 --> 00:01:13,939
problems in trying to get customers to

00:01:10,890 --> 00:01:16,020
actually deliver software faster is

00:01:13,939 --> 00:01:17,640
testing testings always been a huge

00:01:16,020 --> 00:01:20,420
barrier developments getting better

00:01:17,640 --> 00:01:22,920
people are doing more and more agile but

00:01:20,420 --> 00:01:25,439
one of the barriers is this testing and

00:01:22,920 --> 00:01:27,450
so blades meter was a big part of this

00:01:25,439 --> 00:01:28,829
acquisition was to help us start to

00:01:27,450 --> 00:01:31,979
bring not just continuous delivery but

00:01:28,829 --> 00:01:33,530
continuous testing to the market and so

00:01:31,979 --> 00:01:36,090
with continuous testing we're helping

00:01:33,530 --> 00:01:38,130
developers with a shift left

00:01:36,090 --> 00:01:41,280
we're helping developers do testing for

00:01:38,130 --> 00:01:43,680
helping testers test better test faster

00:01:41,280 --> 00:01:45,689
and we're also enabling testing to be

00:01:43,680 --> 00:01:47,490
done in production so when we talk about

00:01:45,689 --> 00:01:49,710
continuous testing we actually mean

00:01:47,490 --> 00:01:51,840
continuous it's not just faster testing

00:01:49,710 --> 00:01:54,180
but you test throughout the entire cycle

00:01:51,840 --> 00:01:56,579
of software no matter what stage it's in

00:01:54,180 --> 00:01:59,310
and is that automated or is that manual

00:01:56,579 --> 00:02:01,500
or oh you can't you you can't do

00:01:59,310 --> 00:02:04,259
continuous if it's manual ok so that's a

00:02:01,500 --> 00:02:06,329
that was a good tee question nice nice

00:02:04,259 --> 00:02:09,780
softball question I appreciate it it's

00:02:06,329 --> 00:02:12,900
all automated so we actually have the

00:02:09,780 --> 00:02:14,849
ability to automatically create

00:02:12,900 --> 00:02:16,550
the tests so developers and testers

00:02:14,849 --> 00:02:19,230
don't even have to spend the time to

00:02:16,550 --> 00:02:21,450
record or script the test we can

00:02:19,230 --> 00:02:23,670
automatically create functional tests we

00:02:21,450 --> 00:02:25,500
can automatically create API tests we

00:02:23,670 --> 00:02:29,099
can automatically create performance

00:02:25,500 --> 00:02:31,709
tests so we are eliminating Simoes

00:02:29,099 --> 00:02:33,120
barriers of the testing because we're

00:02:31,709 --> 00:02:35,459
able to auto generate the tests

00:02:33,120 --> 00:02:37,650
themselves and we're giving them the

00:02:35,459 --> 00:02:40,890
ability to test whatever they need to

00:02:37,650 --> 00:02:42,090
test cloud or on-premise cloud or AMA -

00:02:40,890 --> 00:02:44,459
yes

00:02:42,090 --> 00:02:46,650
mobile device well we use mobile devices

00:02:44,459 --> 00:02:48,180
for that testing purposes so we do have

00:02:46,650 --> 00:02:49,950
the ability to test with the mobile

00:02:48,180 --> 00:02:51,569
device we have the ability to test the

00:02:49,950 --> 00:02:54,180
backend we have the ability to test the

00:02:51,569 --> 00:02:56,489
UI so we test all different areas of it

00:02:54,180 --> 00:02:58,650
and when you're doing like say

00:02:56,489 --> 00:03:00,629
performance you don't necessarily just

00:02:58,650 --> 00:03:01,829
want to test in-house you want to test

00:03:00,629 --> 00:03:03,390
from different parts of the world

00:03:01,829 --> 00:03:05,579
because you want to make sure that your

00:03:03,390 --> 00:03:07,470
application if it's worldwide depending

00:03:05,579 --> 00:03:09,440
on where it is you want to make sure

00:03:07,470 --> 00:03:11,459
that you can that it's performing

00:03:09,440 --> 00:03:13,319
everywhere that people can access your

00:03:11,459 --> 00:03:16,379
site and so we give you that ability as

00:03:13,319 --> 00:03:19,950
well because like with blades meter SAS

00:03:16,379 --> 00:03:23,250
based and so login you upload your

00:03:19,950 --> 00:03:24,359
open-source testing scripts and now

00:03:23,250 --> 00:03:25,799
you're able to test wherever you want to

00:03:24,359 --> 00:03:27,660
test so are you guys using the

00:03:25,799 --> 00:03:29,540
intelligence in there you said you don't

00:03:27,660 --> 00:03:34,889
even have to like think about it anymore

00:03:29,540 --> 00:03:38,340
so if your platform your framework your

00:03:34,889 --> 00:03:39,930
service knows what to test is it using

00:03:38,340 --> 00:03:42,870
some sort of intelligence to do better

00:03:39,930 --> 00:03:44,700
you're just profiling software that I'm

00:03:42,870 --> 00:03:49,230
building or what how do you do that

00:03:44,700 --> 00:03:53,459
so we do it in a few ways one we have

00:03:49,230 --> 00:03:55,799
the ability to better create and manage

00:03:53,459 --> 00:03:56,910
the requirements and once you have the

00:03:55,799 --> 00:03:58,500
ability to better manage the

00:03:56,910 --> 00:04:01,260
requirements and it's not just a

00:03:58,500 --> 00:04:04,829
sentence that as a developer you do this

00:04:01,260 --> 00:04:06,630
this this right there's workflows now so

00:04:04,829 --> 00:04:08,099
you have a flow of your requirement and

00:04:06,630 --> 00:04:09,750
once you're the flow of the requirement

00:04:08,099 --> 00:04:12,540
we can generate test cases from those

00:04:09,750 --> 00:04:14,430
flows and it's not just one test case we

00:04:12,540 --> 00:04:17,549
can do all different types of test cases

00:04:14,430 --> 00:04:20,340
from that flow so we can give you test

00:04:17,549 --> 00:04:23,099
cases that manage 100% of your

00:04:20,340 --> 00:04:24,840
requirements and from those test cases

00:04:23,099 --> 00:04:25,970
we then have the ability to auto

00:04:24,840 --> 00:04:29,520
generate

00:04:25,970 --> 00:04:30,599
so you give us the we help you create

00:04:29,520 --> 00:04:32,340
the requirement and once you have that

00:04:30,599 --> 00:04:34,530
proper requirement you got the test

00:04:32,340 --> 00:04:37,110
cases you get the tests and once you

00:04:34,530 --> 00:04:39,300
have that when the developers are

00:04:37,110 --> 00:04:41,520
developing code they're developing

00:04:39,300 --> 00:04:41,729
against requirement if they're not they

00:04:41,520 --> 00:04:44,699
should

00:04:41,729 --> 00:04:46,889
I mean sometimes sometimes they don't

00:04:44,699 --> 00:04:47,969
but if they're building against

00:04:46,889 --> 00:04:50,250
requirements we now know what

00:04:47,969 --> 00:04:51,930
requirements are being built against and

00:04:50,250 --> 00:04:54,810
based on that we can tell you what you

00:04:51,930 --> 00:04:56,849
need to test right so instead of having

00:04:54,810 --> 00:04:58,800
a regression suite of a thousand two

00:04:56,849 --> 00:05:00,509
thousand ten thousand tests we're

00:04:58,800 --> 00:05:02,039
telling you exactly what areas you need

00:05:00,509 --> 00:05:04,080
to test based on the requirements and

00:05:02,039 --> 00:05:05,159
based on the connection between the

00:05:04,080 --> 00:05:07,020
requirements so we don't look at a

00:05:05,159 --> 00:05:08,370
requirement just blindly we understand

00:05:07,020 --> 00:05:10,319
how that requirement fits with all the

00:05:08,370 --> 00:05:13,169
other requirements and so based on that

00:05:10,319 --> 00:05:15,330
we can help you guide you as to what

00:05:13,169 --> 00:05:18,779
tests really need to be run the other

00:05:15,330 --> 00:05:20,610
way we do this with AP is so you give me

00:05:18,779 --> 00:05:22,379
an API definition I don't care how you

00:05:20,610 --> 00:05:24,389
give me the API definition you can add

00:05:22,379 --> 00:05:25,909
it manually upload a swagger document

00:05:24,389 --> 00:05:29,189
however you get me the API definition

00:05:25,909 --> 00:05:31,080
I'll test to test your positives your

00:05:29,189 --> 00:05:33,810
negative your edge case even security

00:05:31,080 --> 00:05:36,659
types of systems I'll give you the

00:05:33,810 --> 00:05:38,279
ability to test all those I'll so that

00:05:36,659 --> 00:05:40,440
developers don't have to think about

00:05:38,279 --> 00:05:41,699
what they need to test and I can auto

00:05:40,440 --> 00:05:43,860
generate those before the development

00:05:41,699 --> 00:05:46,039
thing they're done so now the developers

00:05:43,860 --> 00:05:48,029
can really do test-driven development

00:05:46,039 --> 00:05:50,310
because now they have a hundred tests

00:05:48,029 --> 00:05:52,050
two hundred three hundred tests that if

00:05:50,310 --> 00:05:54,120
they're developing Bayes hit a button

00:05:52,050 --> 00:05:55,740
and now they're they're developing

00:05:54,120 --> 00:05:57,240
against not just one test not just two

00:05:55,740 --> 00:05:58,650
tests but all those tests so now they

00:05:57,240 --> 00:06:01,650
know what they're developing is actually

00:05:58,650 --> 00:06:04,169
what needs to be done and is this in

00:06:01,650 --> 00:06:06,690
conjunction with like commit and like a

00:06:04,169 --> 00:06:08,250
repository where you're testing as

00:06:06,690 --> 00:06:10,409
people are checking in their code or are

00:06:08,250 --> 00:06:13,259
they testing before they check in how

00:06:10,409 --> 00:06:14,699
are you built into that process so

00:06:13,259 --> 00:06:16,620
that's actually interesting that's I

00:06:14,699 --> 00:06:18,419
think when we look is continuous testing

00:06:16,620 --> 00:06:21,360
which is part of continuous delivery

00:06:18,419 --> 00:06:24,449
there are certain stages that you want

00:06:21,360 --> 00:06:26,069
to test in the past testing will focus

00:06:24,449 --> 00:06:29,240
on food production the pre-production

00:06:26,069 --> 00:06:32,180
stage right in a waterfall in the water

00:06:29,240 --> 00:06:35,870
in continuous testing exactly you first

00:06:32,180 --> 00:06:38,810
test your code you when you connect your

00:06:35,870 --> 00:06:40,460
code and automated test should run in

00:06:38,810 --> 00:06:44,000
the background to either accept or

00:06:40,460 --> 00:06:47,960
reject your code then in continuous

00:06:44,000 --> 00:06:50,210
integration once every night or every 24

00:06:47,960 --> 00:06:52,840
hours 48 hours there is continuous

00:06:50,210 --> 00:06:55,069
integration test the front

00:06:52,840 --> 00:06:57,440
pre-production there are certain

00:06:55,069 --> 00:06:59,660
accepting test and then obviously load

00:06:57,440 --> 00:07:02,060
test and stuff a little in each and

00:06:59,660 --> 00:07:04,970
every stage where there is testing

00:07:02,060 --> 00:07:07,610
on-demand and usually it's automatic

00:07:04,970 --> 00:07:09,409
testing you need to have a cooking

00:07:07,610 --> 00:07:12,860
setting framework that can facilitate

00:07:09,409 --> 00:07:16,490
all these tests and this is what we do

00:07:12,860 --> 00:07:20,360
like so see ICD is pretty much automated

00:07:16,490 --> 00:07:23,479
yes yes and part of the process now so

00:07:20,360 --> 00:07:25,669
it fits right in with how people should

00:07:23,479 --> 00:07:28,669
be developing software correct we

00:07:25,669 --> 00:07:30,650
actually provide the we link into

00:07:28,669 --> 00:07:33,289
Jenkins we link in a lot of the CI tools

00:07:30,650 --> 00:07:37,340
we provide that framework that automated

00:07:33,289 --> 00:07:39,469
framework to move your application

00:07:37,340 --> 00:07:41,750
reader services from stage to stage to

00:07:39,469 --> 00:07:43,190
automatically run the tests to

00:07:41,750 --> 00:07:45,680
automatically validate the results of

00:07:43,190 --> 00:07:46,880
those tests and as I said to

00:07:45,680 --> 00:07:48,710
automatically create those tests so we

00:07:46,880 --> 00:07:51,080
provide all those and then once you

00:07:48,710 --> 00:07:53,389
analyze the results you can decide does

00:07:51,080 --> 00:07:55,039
this go into either a pre production our

00:07:53,389 --> 00:07:56,539
production phase or does it stay in

00:07:55,039 --> 00:07:59,539
development where the development has

00:07:56,539 --> 00:08:02,659
the issues to result so knowing what you

00:07:59,539 --> 00:08:05,389
know about what you offer and what you

00:08:02,659 --> 00:08:07,310
currently do right now if we sat down

00:08:05,389 --> 00:08:10,699
twelve months from now what would you

00:08:07,310 --> 00:08:14,780
like to be doing differently than you

00:08:10,699 --> 00:08:16,610
are today in 12 months that's a short

00:08:14,780 --> 00:08:18,380
period of time although it's long and

00:08:16,610 --> 00:08:19,880
technology I mean yeah you say twelve

00:08:18,380 --> 00:08:22,310
months short twelve months is a very

00:08:19,880 --> 00:08:24,139
long period I know you know when people

00:08:22,310 --> 00:08:26,270
ask and people ask what's your plan for

00:08:24,139 --> 00:08:28,219
four years from now 20 years what's four

00:08:26,270 --> 00:08:29,030
years yeah but no twelve months does go

00:08:28,219 --> 00:08:31,250
quick I agree

00:08:29,030 --> 00:08:33,320
let me remind you something we just

00:08:31,250 --> 00:08:36,589
stopped close enough I know and a lot of

00:08:33,320 --> 00:08:39,409
 Wow completely different yeah yeah

00:08:36,589 --> 00:08:39,960
so twelve months from now what we will

00:08:39,409 --> 00:08:41,820
be

00:08:39,960 --> 00:08:45,120
your roadmap that's different and today

00:08:41,820 --> 00:08:48,810
I think that continues delivery

00:08:45,120 --> 00:08:51,660
first it's a huge domain right and it's

00:08:48,810 --> 00:08:55,200
a domain that is still developing like

00:08:51,660 --> 00:08:58,200
new technologies new use cases and you

00:08:55,200 --> 00:09:00,420
know while the economy is exploding

00:08:58,200 --> 00:09:02,490
right continues testing and continuous

00:09:00,420 --> 00:09:03,120
delivery and kind of trying to keep up

00:09:02,490 --> 00:09:06,960
the pace

00:09:03,120 --> 00:09:08,100
so first the industry needs solution

00:09:06,960 --> 00:09:11,700
solutions

00:09:08,100 --> 00:09:14,280
it needs smart solutions so when we've

00:09:11,700 --> 00:09:17,160
met places it was about performance

00:09:14,280 --> 00:09:20,300
testing I can load testing currently CA

00:09:17,160 --> 00:09:22,800
and see a parameter is performance load

00:09:20,300 --> 00:09:26,030
functional right and all of the smart

00:09:22,800 --> 00:09:30,930
things that not just that

00:09:26,030 --> 00:09:33,600
stiva discussed earlier and you know we

00:09:30,930 --> 00:09:36,930
still have a long way to go the

00:09:33,600 --> 00:09:38,820
continuous delivery process is not fully

00:09:36,930 --> 00:09:41,880
all to make it yet it's not ok I'm

00:09:38,820 --> 00:09:46,770
coding it and production testing that

00:09:41,880 --> 00:09:50,130
process still has a long way to go and

00:09:46,770 --> 00:09:54,000
this is our path our path is to do with

00:09:50,130 --> 00:09:56,730
every news case that is out there for

00:09:54,000 --> 00:09:58,950
testing and continuous delivery and to

00:09:56,730 --> 00:10:01,950
make the experience the experience as

00:09:58,950 --> 00:10:04,980
seamless as possible for the use of the

00:10:01,950 --> 00:10:07,100
user we develop the developer area they

00:10:04,980 --> 00:10:10,530
need to focus on what they do best right

00:10:07,100 --> 00:10:14,520
they don't need to worry about what's

00:10:10,530 --> 00:10:17,430
happening around them and it's our

00:10:14,520 --> 00:10:19,830
mission to make it happen to make it as

00:10:17,430 --> 00:10:23,400
seamless and you know best of

00:10:19,830 --> 00:10:28,290
integration best of being and to make

00:10:23,400 --> 00:10:29,130
them make their approach so to speak

00:10:28,290 --> 00:10:32,270
excellent

00:10:29,130 --> 00:10:33,480
Stephen thanks so so I agree with that

00:10:32,270 --> 00:10:35,130
thank you

00:10:33,480 --> 00:10:36,600
yeah I think she don't worry sometimes

00:10:35,130 --> 00:10:44,730
you know I sit here and argue with them

00:10:36,600 --> 00:10:49,530
you know but Ron can lesson I would say

00:10:44,730 --> 00:10:51,840
the other thing is is a lot more I'll

00:10:49,530 --> 00:10:53,080
say analytics but analytics is a broad

00:10:51,840 --> 00:10:58,300
is a broad term

00:10:53,080 --> 00:11:00,640
but more ways to understand exactly what

00:10:58,300 --> 00:11:02,760
needs to be test how to test it and to

00:11:00,640 --> 00:11:05,590
give people more guidance as to how

00:11:02,760 --> 00:11:09,220
things should be delivered by

00:11:05,590 --> 00:11:11,050
understanding historically what's been

00:11:09,220 --> 00:11:12,970
out there how they've delivered who's

00:11:11,050 --> 00:11:13,620
delivered it and how things need to be

00:11:12,970 --> 00:11:15,880
changed

00:11:13,620 --> 00:11:17,950
can this does this need a lot more

00:11:15,880 --> 00:11:20,800
testing to go out our canvas go out with

00:11:17,950 --> 00:11:23,620
the lighter testing how well are these

00:11:20,800 --> 00:11:25,270
groups when they're delivering how much

00:11:23,620 --> 00:11:27,400
value did the customer get out of the

00:11:25,270 --> 00:11:28,900
last few does it really need to go out

00:11:27,400 --> 00:11:30,550
this fast are they getting the value

00:11:28,900 --> 00:11:33,790
that they need all those types of

00:11:30,550 --> 00:11:35,560
questions not providing the data but

00:11:33,790 --> 00:11:36,820
providing the auto analytics providing

00:11:35,560 --> 00:11:39,040
actual insights

00:11:36,820 --> 00:11:41,860
yes I'm making the entire process as I

00:11:39,040 --> 00:11:44,980
agreed making the entire process smarter

00:11:41,860 --> 00:11:46,360
for the developers for the business so

00:11:44,980 --> 00:11:48,520
if they can understand what they need to

00:11:46,360 --> 00:11:50,680
do you hear all these businesses say I

00:11:48,520 --> 00:11:52,480
got a really faster I gotta go faster I

00:11:50,680 --> 00:11:54,850
gotta be faster maybe they do maybe they

00:11:52,480 --> 00:11:56,740
don't they don't really know they have

00:11:54,850 --> 00:11:58,150
no idea all my competitions going faster

00:11:56,740 --> 00:12:00,090
I need to go faster while you get in the

00:11:58,150 --> 00:12:02,440
value out of what you have I don't know

00:12:00,090 --> 00:12:04,060
we got a we got to close that loop we

00:12:02,440 --> 00:12:06,550
got to provide better feedback and make

00:12:04,060 --> 00:12:09,310
this whole process off excellent so if

00:12:06,550 --> 00:12:10,600
you hear us both I'm the muscle all

00:12:09,310 --> 00:12:13,390
right I'm running the test needs the

00:12:10,600 --> 00:12:16,180
brain kind of way okay but all right

00:12:13,390 --> 00:12:18,220
that's now on camera except on camera

00:12:16,180 --> 00:12:20,830
I'm going to use this we want to check

00:12:18,220 --> 00:12:23,920
in in 12 months and find out celebrate

00:12:20,830 --> 00:12:26,910
ha ha ha very good thank you gentlemen

00:12:23,920 --> 00:12:26,910
thank you very much

00:12:32,800 --> 00:12:34,860

YouTube URL: https://www.youtube.com/watch?v=O-e7fe1SaEA


