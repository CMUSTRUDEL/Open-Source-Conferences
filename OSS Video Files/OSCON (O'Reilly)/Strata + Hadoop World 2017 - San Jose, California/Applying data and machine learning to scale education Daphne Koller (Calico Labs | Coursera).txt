Title: Applying data and machine learning to scale education Daphne Koller (Calico Labs | Coursera)
Publication date: 2017-03-15
Playlist: Strata + Hadoop World 2017 - San Jose, California
Description: 
	Machine learning and artificial intelligence offer a powerful set of tools to not only build predictive models but also create value from large amounts of data from online learners, from behaviors on the website to discovery/search to applications. Refining these models and truly teaching them how to predict what learners need and want is a significant challenge in edtech—because of the diversity in learner backgrounds and goals, the scale and variance of learning content, and the challenge of correlating content to real-world skills.

Daphne Koller explains how Coursera is using large-scale data processing and machine learning in online education. Building on Coursera’s wealth of online learning data (24 million registered users), Daphne discusses the role of automation in scaling access to education that is personalized and efficient at connecting people with skills and knowledge throughout their lives.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Google: http://plus.google.com/+oreillymedia
Captions: 
	00:00:03,560 --> 00:00:08,879
so in order to do that we need the first

00:00:06,059 --> 00:00:10,799
as I said understand our learners now we

00:00:08,879 --> 00:00:12,509
start to understand their learners as

00:00:10,799 --> 00:00:14,280
soon as they arrive on the platform

00:00:12,509 --> 00:00:16,410
because someone will just you know click

00:00:14,280 --> 00:00:19,320
so you go to get to the Coursera website

00:00:16,410 --> 00:00:21,119
and is in encountering 2,000 courses

00:00:19,320 --> 00:00:22,590
doesn't know when to start and where to

00:00:21,119 --> 00:00:24,720
start and they might get scared and just

00:00:22,590 --> 00:00:26,610
go away so we need to be able to

00:00:24,720 --> 00:00:28,410
recommend a course to someone that we've

00:00:26,610 --> 00:00:31,710
never really interacted with otherwise

00:00:28,410 --> 00:00:34,079
they'll just get lost and so in order to

00:00:31,710 --> 00:00:37,829
do that we need to have what we call the

00:00:34,079 --> 00:00:39,870
cold start onboarding process and in

00:00:37,829 --> 00:00:41,460
order to get people to at least some

00:00:39,870 --> 00:00:43,739
content that might be relevant to them

00:00:41,460 --> 00:00:46,050
so to do that we look at a whole bunch

00:00:43,739 --> 00:00:48,780
of implicit features we get as much as

00:00:46,050 --> 00:00:51,030
we can from just the standard user flow

00:00:48,780 --> 00:00:53,010
the country that they came in which you

00:00:51,030 --> 00:00:54,530
can get from their IP address some

00:00:53,010 --> 00:00:57,960
amount some level of economic

00:00:54,530 --> 00:01:00,449
classification the registration URL the

00:00:57,960 --> 00:01:02,519
refering website and so on so you look

00:01:00,449 --> 00:01:04,379
at this and it sounds great but you can

00:01:02,519 --> 00:01:06,659
tell I'm sure that there's not nearly

00:01:04,379 --> 00:01:09,000
enough information there to really tell

00:01:06,659 --> 00:01:11,310
us what the user is looking for so

00:01:09,000 --> 00:01:14,370
that's the bad news the good news is

00:01:11,310 --> 00:01:15,810
that it turns out that education is not

00:01:14,370 --> 00:01:17,670
the same as a lot of other web

00:01:15,810 --> 00:01:20,760
applications if you go to standard

00:01:17,670 --> 00:01:22,590
wisdom in in web practice they will tell

00:01:20,760 --> 00:01:24,030
you that you should minimize the

00:01:22,590 --> 00:01:25,710
friction in the enrollment process you

00:01:24,030 --> 00:01:27,240
should ask the user the minimum number

00:01:25,710 --> 00:01:30,000
of questions that's their name and their

00:01:27,240 --> 00:01:31,740
email address turns out that might be

00:01:30,000 --> 00:01:34,530
true in other web applications but in

00:01:31,740 --> 00:01:37,020
education users love to be understood

00:01:34,530 --> 00:01:38,880
and so the more questions you ask them

00:01:37,020 --> 00:01:41,130
up to a point the happier they are

00:01:38,880 --> 00:01:43,140
because they feel like you're some was

00:01:41,130 --> 00:01:46,040
actually making the effort to understand

00:01:43,140 --> 00:01:49,020
them and so we've gone away they

00:01:46,040 --> 00:01:51,720
departed from standard practice and had

00:01:49,020 --> 00:01:54,030
a much more in-depth onboarding flow

00:01:51,720 --> 00:01:55,800
where people are asked questions about

00:01:54,030 --> 00:01:58,620
what they actually care about what their

00:01:55,800 --> 00:02:02,340
career goals are and so on and by doing

00:01:58,620 --> 00:02:05,160
that we've been able to create a much

00:02:02,340 --> 00:02:07,170
more informed recommendation system the

00:02:05,160 --> 00:02:09,300
problem though is that even if you ask

00:02:07,170 --> 00:02:11,009
users at a high level what kind of

00:02:09,300 --> 00:02:13,319
categories they might be interested in

00:02:11,009 --> 00:02:16,240
there's still way too many options to

00:02:13,319 --> 00:02:19,260
offer them and so what

00:02:16,240 --> 00:02:21,520
can't just go and classify users into

00:02:19,260 --> 00:02:24,850
2,000 categories corresponding to our

00:02:21,520 --> 00:02:26,200
2000 courses so in order to do that and

00:02:24,850 --> 00:02:27,700
I'm getting a little bit technical which

00:02:26,200 --> 00:02:32,260
in this audience I can do I don't

00:02:27,700 --> 00:02:35,980
usually do that is we train a two layer

00:02:32,260 --> 00:02:38,710
classifier we're at the highest level we

00:02:35,980 --> 00:02:41,110
first crossed our courses into 100

00:02:38,710 --> 00:02:45,810
clusters using a teeny embedding on the

00:02:41,110 --> 00:02:48,700
course co-enrollment matrix and once we

00:02:45,810 --> 00:02:50,950
figure out which cluster the user is

00:02:48,700 --> 00:02:53,440
more likely to belong to we then have a

00:02:50,950 --> 00:02:56,350
second order classifier that allows us

00:02:53,440 --> 00:02:58,420
to recommend a specific course given the

00:02:56,350 --> 00:03:00,940
cluster that we've recommended so it's a

00:02:58,420 --> 00:03:03,250
two-level so it's a two-level hierarchy

00:03:00,940 --> 00:03:06,280
that uses decision trees at each level

00:03:03,250 --> 00:03:08,800
and it turns out that gives a much

00:03:06,280 --> 00:03:10,300
better set of recommendations to the

00:03:08,800 --> 00:03:11,590
learners that gets a much higher

00:03:10,300 --> 00:03:13,740
click-through rate than what we had

00:03:11,590 --> 00:03:13,740

YouTube URL: https://www.youtube.com/watch?v=IAKGm6Nzi6E


