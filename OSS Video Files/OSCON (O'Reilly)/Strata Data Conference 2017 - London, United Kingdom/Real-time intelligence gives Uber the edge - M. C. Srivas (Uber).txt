Title: Real-time intelligence gives Uber the edge - M. C. Srivas (Uber)
Publication date: 2017-05-24
Playlist: Strata Data Conference 2017 - London, United Kingdom
Description: 
	M. C. Srivas covers the technologies underpinning the big data architecture at Uber and explores some of the real-time problems Uber needs to solve to make ride sharing as smooth and ubiquitous as running water, explaining how they are related to real-time big data analytics. Along the way, M. C. looks at some of the big data challenges with autonomous vehicles, especially regarding what it takes for a self-driving car to run on the road safely, and discusses the many applications within Uber that rely on data science and AI technologies.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Google: http://plus.google.com/+oreillymedia
Captions: 
	00:00:01,449 --> 00:00:06,970
we use real-time forecasting almost

00:00:03,730 --> 00:00:08,680
everywhere in inure so for example

00:00:06,970 --> 00:00:11,200
another very extreme example is

00:00:08,680 --> 00:00:14,530
monitoring our own infrastructure where

00:00:11,200 --> 00:00:18,189
we have to detect unusual spikes or

00:00:14,530 --> 00:00:20,410
local lack of activity when the system

00:00:18,189 --> 00:00:22,929
is running and so if you normally just

00:00:20,410 --> 00:00:26,019
set you know flat thresholds to detect

00:00:22,929 --> 00:00:27,999
the peak I mean to detect problems what

00:00:26,019 --> 00:00:30,099
happens is they're not they're not very

00:00:27,999 --> 00:00:32,169
sensitive and the load is variable and

00:00:30,099 --> 00:00:35,739
we have too many false alerts and missed

00:00:32,169 --> 00:00:36,850
alerts and so we try to predict the load

00:00:35,739 --> 00:00:38,920
and we can adjust the threshold

00:00:36,850 --> 00:00:40,359
automatically and so we use machine

00:00:38,920 --> 00:00:41,980
learning to figure out how to place the

00:00:40,359 --> 00:00:43,809
thresholds so that we don't get

00:00:41,980 --> 00:00:45,550
surprised and we don't know we can sleep

00:00:43,809 --> 00:00:47,800
better at night we don't get so that's

00:00:45,550 --> 00:00:50,019
another example and we use machine

00:00:47,800 --> 00:00:51,340
learning so by the way what is

00:00:50,019 --> 00:00:53,769
traditional machine learning let me just

00:00:51,340 --> 00:00:55,359
kind of quickly recap well you have a

00:00:53,769 --> 00:00:57,519
learner which is a program that you

00:00:55,359 --> 00:01:01,839
wrote you provided historic data called

00:00:57,519 --> 00:01:04,300
training data and you create a machine

00:01:01,839 --> 00:01:08,500
program called the model and then you

00:01:04,300 --> 00:01:11,470
execute this on live data and you try to

00:01:08,500 --> 00:01:13,270
predict and usually how do you use these

00:01:11,470 --> 00:01:17,560
predictions is your decision making is

00:01:13,270 --> 00:01:19,119
done based on either a manual query or

00:01:17,560 --> 00:01:23,020
you have some automatic programs that

00:01:19,119 --> 00:01:24,340
run and figure this out now machine

00:01:23,020 --> 00:01:26,290
learning with feedback with real-time

00:01:24,340 --> 00:01:28,479
feedback is a whole different thing and

00:01:26,290 --> 00:01:30,909
so I'll give you an example of this

00:01:28,479 --> 00:01:33,579
Carnegie Mellon snake robot that they

00:01:30,909 --> 00:01:34,719
built it crawls like a snake but their

00:01:33,579 --> 00:01:37,270
challenge was can it to learn new

00:01:34,719 --> 00:01:38,740
movements and the experiments they

00:01:37,270 --> 00:01:40,750
performed were can it

00:01:38,740 --> 00:01:43,180
for example crawl over an obstacle ten

00:01:40,750 --> 00:01:45,369
times its height or crawl on a tree

00:01:43,180 --> 00:01:48,909
branch or crawl up a sand dune

00:01:45,369 --> 00:01:52,090
and even after many trials this

00:01:48,909 --> 00:01:54,490
experiment wasn't successful but when

00:01:52,090 --> 00:01:58,149
they started feeding back successful

00:01:54,490 --> 00:02:00,700
trial data from very low you know with

00:01:58,149 --> 00:02:02,920
much easier barriers the robot learned

00:02:00,700 --> 00:02:05,399
very quickly on its own so give an

00:02:02,920 --> 00:02:08,350
example of what's going on so this is a

00:02:05,399 --> 00:02:10,119
sidewinder snake and it's climbing up a

00:02:08,350 --> 00:02:12,430
sand dune the sand dunes are 30 percent

00:02:10,119 --> 00:02:13,230
incline and most snakes cannot climb

00:02:12,430 --> 00:02:15,720
that

00:02:13,230 --> 00:02:17,519
and what this side wonder snake does is

00:02:15,720 --> 00:02:20,640
that it's both sideways and it's a

00:02:17,519 --> 00:02:23,400
learnt movement it's not it's not usual

00:02:20,640 --> 00:02:25,290
for any snakes so they tried this with a

00:02:23,400 --> 00:02:29,430
snake robot they of course wrap it up

00:02:25,290 --> 00:02:31,830
with enough you know cloth so it doesn't

00:02:29,430 --> 00:02:33,720
get jams of the mechanics don't get

00:02:31,830 --> 00:02:35,400
jammed and you can see it tries and

00:02:33,720 --> 00:02:38,280
tries and it fails and this is on a ten

00:02:35,400 --> 00:02:40,140
percent incline so when they started

00:02:38,280 --> 00:02:42,390
giving it put it on a five percent

00:02:40,140 --> 00:02:43,560
incline and made it successful and you

00:02:42,390 --> 00:02:45,599
can see this is on a five percent

00:02:43,560 --> 00:02:48,870
incline it kind of learned to do that

00:02:45,599 --> 00:02:51,750
from Philly right not very clever but

00:02:48,870 --> 00:02:53,040
then after some trials they put it on a

00:02:51,750 --> 00:02:55,170
twenty percent grade and when you learn

00:02:53,040 --> 00:02:56,640
that you can see now that the movement

00:02:55,170 --> 00:02:58,680
is almost exactly like the snake's

00:02:56,640 --> 00:03:03,390
movement it learns the sonic sonic

00:02:58,680 --> 00:03:05,519
wasn't programmed so what what you know

00:03:03,390 --> 00:03:06,950
machine learning with feedback is here's

00:03:05,519 --> 00:03:10,590
the traditional machine learning model

00:03:06,950 --> 00:03:13,019
but you'll take the outcomes and you

00:03:10,590 --> 00:03:16,620
look at what actions you did and the

00:03:13,019 --> 00:03:18,269
successful ones you feedback so this is

00:03:16,620 --> 00:03:21,359
a very very important technique that we

00:03:18,269 --> 00:03:22,889
are using in Boober and we're using this

00:03:21,359 --> 00:03:24,630
across the board it's become part of our

00:03:22,889 --> 00:03:28,500
core infrastructure so we're talking

00:03:24,630 --> 00:03:30,660
about like trips drivers eat know we are

00:03:28,500 --> 00:03:34,019
building our own maps and the maps

00:03:30,660 --> 00:03:36,239
routes eta you know these things also

00:03:34,019 --> 00:03:37,920
use machine learning but the other place

00:03:36,239 --> 00:03:41,959
where machine learning is very becoming

00:03:37,920 --> 00:03:41,959

YouTube URL: https://www.youtube.com/watch?v=NAyxWeCqNPU


