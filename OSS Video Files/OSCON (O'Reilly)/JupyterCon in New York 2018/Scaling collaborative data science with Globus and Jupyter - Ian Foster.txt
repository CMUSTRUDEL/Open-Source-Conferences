Title: Scaling collaborative data science with Globus and Jupyter - Ian Foster
Publication date: 2018-09-20
Playlist: JupyterCon in New York 2018
Description: 
	Jupyter is rapidly becoming the platform of choice for interactive data science in academic and commercial labs alike. While existing data interfaces are sufficient for modest datasets, users often struggle when they need to deal with the large and increasingly distributed data generated by modern science. The Globus team at the University of Chicago develops and operates software as a service for data management that is used by over 75,000 researchers worldwide. The Globus platform provides high-speed, reliable file transfer, sharing, and data publication as well as a federated identity infrastructure that facilitates collaboration across diverse security domains and organizational boundaries, with all services accessible via browser, command line, and REST APIs.

Ian Foster explains how to use Globus and Jupyter to seamlessly access notebooks using existing institutional credentials, connect notebooks with data residing on disparate storage systems (including GPFS, Lustre, Amazon S3, and Google Drive), and make data securely available to business partners and research collaborators. Ian demonstrates the existing integration and shares plans for expanding the joint solution to utilize JupyterLab and other Globus capabilities that further advance data-driven collaboration at scale.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:01,800 --> 00:00:08,980
good morning everyone it's so good to be

00:00:05,560 --> 00:00:12,429
here so this is as you can see I talk

00:00:08,980 --> 00:00:15,519
about a particular technology called

00:00:12,429 --> 00:00:19,380
Globus and and how we are using it and

00:00:15,519 --> 00:00:23,800
you can use it to address challenges of

00:00:19,380 --> 00:00:26,710
big distributed data science in the

00:00:23,800 --> 00:00:29,320
Drupada environment so it's going to be

00:00:26,710 --> 00:00:32,320
somewhat tutorial and somewhat just sort

00:00:29,320 --> 00:00:34,570
of hand waving in slides so so here's a

00:00:32,320 --> 00:00:36,760
sort of a sort of problem that motivates

00:00:34,570 --> 00:00:38,110
our work so this is quite a wouldn't

00:00:36,760 --> 00:00:42,670
there's a delightful video here which

00:00:38,110 --> 00:00:44,140
hopefully will play we work I work at

00:00:42,670 --> 00:00:45,550
Argonne National Lab where we run some

00:00:44,140 --> 00:00:49,150
of the world's biggest supercomputers

00:00:45,550 --> 00:00:52,000
and this fellow Andre Haifa has been

00:00:49,150 --> 00:00:54,640
using those supercomputers to build very

00:00:52,000 --> 00:00:57,370
computationally expensive very detailed

00:00:54,640 --> 00:00:59,260
and precise simulations of some funny

00:00:57,370 --> 00:01:02,980
property called stopping power which is

00:00:59,260 --> 00:01:04,899
how long it takes for a particle to to

00:01:02,980 --> 00:01:06,759
stop or what resistance it encounters as

00:01:04,899 --> 00:01:11,170
it penetrates through a material so this

00:01:06,759 --> 00:01:14,530
is showing hydrogen in gold and using

00:01:11,170 --> 00:01:16,749
16,000 CPU hours he can simulate what

00:01:14,530 --> 00:01:18,909
happens with that particle as it goes

00:01:16,749 --> 00:01:22,090
through the gold at a particular speed

00:01:18,909 --> 00:01:24,310
and a particular angle and of course as

00:01:22,090 --> 00:01:25,560
you go at different angles as you can

00:01:24,310 --> 00:01:28,719
imagine you get quite different

00:01:25,560 --> 00:01:33,039
resistance as you pass by different gold

00:01:28,719 --> 00:01:37,270
atoms so we would like to be able to do

00:01:33,039 --> 00:01:39,789
the following we'd like to take a set of

00:01:37,270 --> 00:01:42,100
such simulations we've got a few dozen

00:01:39,789 --> 00:01:45,700
of them and then use machine learning

00:01:42,100 --> 00:01:48,700
methods to build a predictive model of

00:01:45,700 --> 00:01:50,889
stopping power that would allow you to

00:01:48,700 --> 00:01:53,770
find out what the swapping power value

00:01:50,889 --> 00:01:55,869
would be for just not just the the

00:01:53,770 --> 00:01:59,560
values that we've actually simulated but

00:01:55,869 --> 00:02:02,799
many other velocities angles perhaps

00:01:59,560 --> 00:02:05,700
ultimately other materials as well and

00:02:02,799 --> 00:02:08,380
turns out that's not too difficult to do

00:02:05,700 --> 00:02:11,349
and of course we do that in Jupiter

00:02:08,380 --> 00:02:12,700
notebooks the only challenges if we're

00:02:11,349 --> 00:02:15,280
going to be doing this using Drupal er

00:02:12,700 --> 00:02:19,090
is that the data we want to work with

00:02:15,280 --> 00:02:22,390
large and distributed so the the data

00:02:19,090 --> 00:02:25,709
itself was taken from the supercomputer

00:02:22,390 --> 00:02:28,569
at Argonne and published into a large

00:02:25,709 --> 00:02:30,400
data repository for a material science

00:02:28,569 --> 00:02:33,700
called the materials data facility which

00:02:30,400 --> 00:02:36,760
contains millions of records about about

00:02:33,700 --> 00:02:39,700
materials the actual that's where the

00:02:36,760 --> 00:02:41,800
indexes is the actual data itself sits

00:02:39,700 --> 00:02:44,170
on a data server at Argonne called

00:02:41,800 --> 00:02:46,569
petrol which has got many petabytes of

00:02:44,170 --> 00:02:48,070
of data and what we want to be able to

00:02:46,569 --> 00:02:50,019
do within our Jupiter notebook is to

00:02:48,070 --> 00:02:53,820
query the materials data facility

00:02:50,019 --> 00:02:57,519
initiate a transfer of the data that

00:02:53,820 --> 00:02:59,170
concerns us to another supercomputer a

00:02:57,519 --> 00:03:02,050
system called Cooley that's designed for

00:02:59,170 --> 00:03:04,180
data analysis run our machine learning

00:03:02,050 --> 00:03:07,000
models on those data they're using

00:03:04,180 --> 00:03:11,519
parallel computing and ultimately share

00:03:07,000 --> 00:03:14,560
the results with with our colleagues so

00:03:11,519 --> 00:03:17,410
in order to do that we need a set of

00:03:14,560 --> 00:03:19,120
things we need multi credential Modi

00:03:17,410 --> 00:03:21,459
service authentication we've got to be

00:03:19,120 --> 00:03:23,410
able to manage within our Jupiter

00:03:21,459 --> 00:03:25,410
notebook we want about our perform

00:03:23,410 --> 00:03:28,030
operations at all these remote places

00:03:25,410 --> 00:03:30,160
with appropriate authentication

00:03:28,030 --> 00:03:31,329
authorization and so forth and we also

00:03:30,160 --> 00:03:34,360
want to be able to manage the movement

00:03:31,329 --> 00:03:35,860
of data from one locale to another and

00:03:34,360 --> 00:03:38,320
these are the things that we are going

00:03:35,860 --> 00:03:40,930
to be addressing using Globus how many

00:03:38,320 --> 00:03:43,660
of you here have heard of Globus oh wow

00:03:40,930 --> 00:03:46,810
ok so I'm not in a total room of

00:03:43,660 --> 00:03:48,100
neophyte so just I'll spend a just a

00:03:46,810 --> 00:03:51,340
minute about it so this is something

00:03:48,100 --> 00:03:53,620
we've been building since 2010 the

00:03:51,340 --> 00:03:56,859
globus group is based at the university

00:03:53,620 --> 00:04:00,269
of chicago it operates this cloud hosted

00:03:56,859 --> 00:04:03,220
service for the research community it's

00:04:00,269 --> 00:04:07,570
it so it's a service that runs on

00:04:03,220 --> 00:04:10,120
actually the Amazon Cloud and provides a

00:04:07,570 --> 00:04:11,950
set of nice api's and associated web

00:04:10,120 --> 00:04:14,019
interfaces and command-line interfaces

00:04:11,950 --> 00:04:16,989
and so forth that let you ask it to do

00:04:14,019 --> 00:04:19,570
things like move data from one storage

00:04:16,989 --> 00:04:22,060
system to another and there's 12,000 or

00:04:19,570 --> 00:04:23,710
more storage systems around the world

00:04:22,060 --> 00:04:25,690
particularly in the u.s. that have got

00:04:23,710 --> 00:04:28,690
Globus connects servers running on them

00:04:25,690 --> 00:04:29,260
it you can use it to you can ask it to

00:04:28,690 --> 00:04:33,390
publish

00:04:29,260 --> 00:04:35,230
data to allow people to access data to

00:04:33,390 --> 00:04:38,970
transfer data from one place to another

00:04:35,230 --> 00:04:42,190
and so on and so forth a whole set of

00:04:38,970 --> 00:04:44,200
powerful capabilities and as you can see

00:04:42,190 --> 00:04:45,880
there's lots of nice steps we've got I

00:04:44,200 --> 00:04:48,040
think a hundred thousand registered

00:04:45,880 --> 00:04:51,160
users tens of thousands of them are

00:04:48,040 --> 00:04:54,460
active at any one time the thousands

00:04:51,160 --> 00:04:56,380
services have been set up to use Globus

00:04:54,460 --> 00:04:59,800
authentication mechanisms and so forth

00:04:56,380 --> 00:05:01,660
so what we want to do is to use these

00:04:59,800 --> 00:05:03,610
what we've what I'm going to talk about

00:05:01,660 --> 00:05:05,650
here is how we can integrate these into

00:05:03,610 --> 00:05:08,680
Jupiter have and then use them within

00:05:05,650 --> 00:05:10,600
the Jupiter environment so it's probably

00:05:08,680 --> 00:05:14,290
most of you know you know Jupiter hub

00:05:10,600 --> 00:05:18,520
itself has got this nice configuration

00:05:14,290 --> 00:05:20,740
now you come in by from your browser you

00:05:18,520 --> 00:05:24,580
get you interact initially you with this

00:05:20,740 --> 00:05:26,740
hub system where you can ask it to

00:05:24,580 --> 00:05:29,680
create notebooks on your behalf and then

00:05:26,740 --> 00:05:31,900
you can run those notebooks and they can

00:05:29,680 --> 00:05:33,670
do various things mostly they can do

00:05:31,900 --> 00:05:36,570
local things what we're going to do is

00:05:33,670 --> 00:05:41,280
talk about how we can allow them to

00:05:36,570 --> 00:05:44,850
access resources anywhere at least any

00:05:41,280 --> 00:05:47,080
resource that is accessible via

00:05:44,850 --> 00:05:49,480
appropriate appropriate author

00:05:47,080 --> 00:05:51,370
operations so your notebook is going to

00:05:49,480 --> 00:05:53,440
be able to sit there and reach out to

00:05:51,370 --> 00:05:55,870
many different places so how do we do

00:05:53,440 --> 00:05:59,680
this well first of all we have

00:05:55,870 --> 00:06:03,910
implemented and committed to the Jupiter

00:05:59,680 --> 00:06:07,150
hub repository a global source plugin so

00:06:03,910 --> 00:06:08,710
that you can set up to use our so-called

00:06:07,150 --> 00:06:11,260
global source authentication that's

00:06:08,710 --> 00:06:13,090
basically ooofff - which is a widely

00:06:11,260 --> 00:06:15,430
used our standard I won't go into more

00:06:13,090 --> 00:06:18,700
details on that but in by using this

00:06:15,430 --> 00:06:22,390
plugin you then get access to actually

00:06:18,700 --> 00:06:24,520
hundreds of identity providers so you

00:06:22,390 --> 00:06:26,830
can authenticate as we'll see in a

00:06:24,520 --> 00:06:30,430
minute - this to your Jupiter hubs

00:06:26,830 --> 00:06:33,070
system with often your orchid ID or

00:06:30,430 --> 00:06:34,570
Google credential your University of

00:06:33,070 --> 00:06:36,730
Chicago credential your Harvard

00:06:34,570 --> 00:06:39,220
University credential many other

00:06:36,730 --> 00:06:42,370
credentials of that sort and then you

00:06:39,220 --> 00:06:43,600
can also immediately connect out to a

00:06:42,370 --> 00:06:46,360
variety of

00:06:43,600 --> 00:06:48,670
current apps that are set up to accept

00:06:46,360 --> 00:06:49,960
global thought authentication and there

00:06:48,670 --> 00:06:54,550
are some more than a thousand of them

00:06:49,960 --> 00:06:56,020
registered so far okay so that's setting

00:06:54,550 --> 00:06:58,540
it up as easy I won't go through the

00:06:56,020 --> 00:07:01,140
direction prove the in through the steps

00:06:58,540 --> 00:07:05,260
but it's described in the Jupiter hub

00:07:01,140 --> 00:07:08,050
documentation once you've done that we

00:07:05,260 --> 00:07:12,700
can then well basically what what doing

00:07:08,050 --> 00:07:15,310
that enables is you can log in just as

00:07:12,700 --> 00:07:18,520
you would to regular Jupiter except now

00:07:15,310 --> 00:07:21,760
you're doing it using Globus auth in so

00:07:18,520 --> 00:07:24,160
doing you're asked to give a set of

00:07:21,760 --> 00:07:26,650
consents which is a I think a familiar

00:07:24,160 --> 00:07:29,260
concept from any websites nowadays which

00:07:26,650 --> 00:07:32,800
get translated into the tokens which are

00:07:29,260 --> 00:07:35,050
then stored inside the Jupiter hub user

00:07:32,800 --> 00:07:38,760
database and then when you create a new

00:07:35,050 --> 00:07:41,680
notebook well you can access those

00:07:38,760 --> 00:07:44,560
consents those are the Associated tokens

00:07:41,680 --> 00:07:46,960
and use them to access various remote

00:07:44,560 --> 00:07:49,510
services and we'll see how that works in

00:07:46,960 --> 00:07:51,490
a minute so what does that let you do

00:07:49,510 --> 00:07:53,470
well it means that you can first of all

00:07:51,490 --> 00:07:55,530
access a whole set of globus services

00:07:53,470 --> 00:07:58,810
for data management so within your

00:07:55,530 --> 00:08:01,750
Jupiter hub Jupiter notebook you can say

00:07:58,810 --> 00:08:06,400
move data from the University of Chicago

00:08:01,750 --> 00:08:07,990
to to Amazon or from Amazon to Harvard

00:08:06,400 --> 00:08:11,590
or from habit to Lawrence Berkeley Lab

00:08:07,990 --> 00:08:13,480
and so forth you can access service

00:08:11,590 --> 00:08:16,030
other services that we provide like

00:08:13,480 --> 00:08:18,480
search and publication and you can also

00:08:16,030 --> 00:08:21,850
access any other application that you've

00:08:18,480 --> 00:08:25,210
chosen to integrate with these Globus

00:08:21,850 --> 00:08:26,770
auth and mechanisms so I'm not going to

00:08:25,210 --> 00:08:28,300
say too much about the globus services

00:08:26,770 --> 00:08:30,640
but let me just spend a moment on these

00:08:28,300 --> 00:08:33,789
so one thing you can do is access our

00:08:30,640 --> 00:08:38,530
transfer service so what does that let

00:08:33,789 --> 00:08:41,380
you do I mentioned 12,000 so-called

00:08:38,530 --> 00:08:44,470
Globus connect servers that are active

00:08:41,380 --> 00:08:48,370
at any one time most universities most

00:08:44,470 --> 00:08:51,130
National Labs a number of companies in

00:08:48,370 --> 00:08:54,130
the US and internationally expose their

00:08:51,130 --> 00:08:56,230
storage systems by Globus worth so

00:08:54,130 --> 00:08:57,100
goodbye Globus connect so you can access

00:08:56,230 --> 00:09:00,690
them

00:08:57,100 --> 00:09:05,470
using our mechanisms and initiate via a

00:09:00,690 --> 00:09:07,660
web interface or a REST API or or a

00:09:05,470 --> 00:09:10,900
command-line interface a transfer of

00:09:07,660 --> 00:09:14,380
data to and from that endpoint and other

00:09:10,900 --> 00:09:17,500
endpoints and we support a very wide

00:09:14,380 --> 00:09:19,210
variety of storage systems so object

00:09:17,500 --> 00:09:21,130
stores of various sorts high performance

00:09:19,210 --> 00:09:24,370
storage systems POSIX file systems and

00:09:21,130 --> 00:09:26,200
so forth you can access data on any of

00:09:24,370 --> 00:09:30,690
these globus connect servers using

00:09:26,200 --> 00:09:32,770
Globus ortho authenticated HTTP HTTPS or

00:09:30,690 --> 00:09:35,140
grid' FTP for high-speed

00:09:32,770 --> 00:09:40,450
transfer this is all hidden behind our

00:09:35,140 --> 00:09:42,580
nice you know api's and cl eyes you can

00:09:40,450 --> 00:09:45,190
also configure so-called shared

00:09:42,580 --> 00:09:48,160
endpoints that let you for example on

00:09:45,190 --> 00:09:50,200
your storage system on Amazon or

00:09:48,160 --> 00:09:53,020
somewhere else manage whose access

00:09:50,200 --> 00:09:54,910
accessing the data that you that you've

00:09:53,020 --> 00:09:57,040
placed there and we'll see that a bit

00:09:54,910 --> 00:09:58,090
later and for those of you who have

00:09:57,040 --> 00:10:00,850
perhaps from the National Cancer

00:09:58,090 --> 00:10:04,090
Institute or elsewhere or work with

00:10:00,850 --> 00:10:05,890
sensitive data these mechanisms are

00:10:04,090 --> 00:10:08,590
HIPAA compliant so weak they can be used

00:10:05,890 --> 00:10:11,020
to transfer sensitive sensitive data

00:10:08,590 --> 00:10:12,760
which is important for many we also

00:10:11,020 --> 00:10:14,770
provide you'll get access to a number of

00:10:12,760 --> 00:10:18,580
other services global search which lets

00:10:14,770 --> 00:10:22,390
you create indexes of data that may be

00:10:18,580 --> 00:10:24,760
distributed over many locales global

00:10:22,390 --> 00:10:29,230
identifiers which lets you I assign

00:10:24,760 --> 00:10:32,200
identities to your data and then track

00:10:29,230 --> 00:10:34,630
whether it where the data is and and

00:10:32,200 --> 00:10:37,150
retrieve a various metadata for it and

00:10:34,630 --> 00:10:38,950
what we call the globus pump publication

00:10:37,150 --> 00:10:41,710
platform which let's just define

00:10:38,950 --> 00:10:44,320
publication platform pipelines for data

00:10:41,710 --> 00:10:48,250
that you may be creating in your work so

00:10:44,320 --> 00:10:50,140
one system that's built on this so so

00:10:48,250 --> 00:10:52,330
these and other mechanisms can be used

00:10:50,140 --> 00:10:54,060
to build a whole variety Jupiter

00:10:52,330 --> 00:10:56,680
notebooks but a whole variety of other

00:10:54,060 --> 00:10:58,950
systems so for example the Canadian

00:10:56,680 --> 00:11:01,290
federated research data repository

00:10:58,950 --> 00:11:05,680
builds on top of this publication

00:11:01,290 --> 00:11:08,350
platform ok so I'm going to do just do a

00:11:05,680 --> 00:11:10,690
quick demonstration now to show how this

00:11:08,350 --> 00:11:13,440
works in practice so let's see if I can

00:11:10,690 --> 00:11:15,970
make that work that's kind of scary I

00:11:13,440 --> 00:11:17,740
think I'm going to reboot things very

00:11:15,970 --> 00:11:19,720
quickly but in the meantime I will

00:11:17,740 --> 00:11:21,640
continue on and tell you what I was

00:11:19,720 --> 00:11:23,980
going to show you and perhaps we will

00:11:21,640 --> 00:11:26,620
not have the live demonstration although

00:11:23,980 --> 00:11:28,080
I will give you the the URL for it in in

00:11:26,620 --> 00:11:31,450
a second

00:11:28,080 --> 00:11:32,980
so what we've done is as we do at a

00:11:31,450 --> 00:11:36,730
number of the the events like this that

00:11:32,980 --> 00:11:43,140
we run we've set up a a kubernetes

00:11:36,730 --> 00:11:47,830
enabled Jupiter cluster at on Amazon and

00:11:43,140 --> 00:11:51,340
I think I'm gonna have to do it I can't

00:11:47,830 --> 00:11:52,900
resist showing it but and set up so that

00:11:51,340 --> 00:11:56,890
you could you authenticate to this using

00:11:52,900 --> 00:11:59,920
Globus so I come on I connect to the

00:11:56,890 --> 00:12:04,810
system I log on using my University of

00:11:59,920 --> 00:12:08,980
Chicago credentials I then start up a

00:12:04,810 --> 00:12:11,050
server connect to it I'm asked as I

00:12:08,980 --> 00:12:13,150
connect what consents I want to grant to

00:12:11,050 --> 00:12:15,430
my this new Jupiter notebook that I'm

00:12:13,150 --> 00:12:18,150
creating and I'll give it the consents

00:12:15,430 --> 00:12:24,040
it needs to to access various remote

00:12:18,150 --> 00:12:25,660
resources and then fire up a Jupiter

00:12:24,040 --> 00:12:27,780
notebook just like you would normally

00:12:25,660 --> 00:12:32,130
and I can go through it and start

00:12:27,780 --> 00:12:34,870
accessing the various identifiers and

00:12:32,130 --> 00:12:37,210
tokens that I have in my environment I

00:12:34,870 --> 00:12:39,190
do that sort of explicitly to show

00:12:37,210 --> 00:12:47,860
what's there although normally we do

00:12:39,190 --> 00:12:50,080
this using various nice Python SDKs and

00:12:47,860 --> 00:12:53,170
then I'll start doing things like

00:12:50,080 --> 00:12:56,370
retrieving data from a data store at

00:12:53,170 --> 00:12:59,260
Argonne National Lab running some local

00:12:56,370 --> 00:13:00,940
computations on that data store training

00:12:59,260 --> 00:13:03,400
a machine Lu model machine learning

00:13:00,940 --> 00:13:05,950
model for example although in this case

00:13:03,400 --> 00:13:08,470
what I actually do is do a very simple

00:13:05,950 --> 00:13:13,120
plotting operation and then put the

00:13:08,470 --> 00:13:16,570
result into another store for grant

00:13:13,120 --> 00:13:19,330
access to my colleagues so they can

00:13:16,570 --> 00:13:22,480
access that that data so it's a pretty

00:13:19,330 --> 00:13:24,490
neat little little thing but I think

00:13:22,480 --> 00:13:27,350
given my

00:13:24,490 --> 00:13:32,029
my magnet my max technical difficulties

00:13:27,350 --> 00:13:38,199
I will not attempt to go further with

00:13:32,029 --> 00:13:38,199
showing it okay let me start up my

00:13:39,910 --> 00:13:45,860
powerpoint again well we're back to

00:13:43,370 --> 00:13:47,750
where we started so this is what I was

00:13:45,860 --> 00:13:50,420
going to show you we use by the way this

00:13:47,750 --> 00:13:52,790
technology you know zero to Jupiter hub

00:13:50,420 --> 00:13:57,290
we really recommend it as a means of

00:13:52,790 --> 00:14:00,399
managing many jupiter notebooks for

00:13:57,290 --> 00:14:02,540
these sorts of tutorial settings and

00:14:00,399 --> 00:14:03,860
this is where i was going to go so if

00:14:02,540 --> 00:14:07,610
you want to actually try some of the

00:14:03,860 --> 00:14:10,819
stuff yourself we do have the kubernetes

00:14:07,610 --> 00:14:14,089
cluster running supposed to be able to

00:14:10,819 --> 00:14:15,319
scale to about a hundred people so you

00:14:14,089 --> 00:14:18,589
probably won't be able to break it but

00:14:15,319 --> 00:14:22,220
give it a go anyway now let me move on

00:14:18,589 --> 00:14:25,930
and say a few other cover a few other

00:14:22,220 --> 00:14:29,689
features that we have underway here so

00:14:25,930 --> 00:14:31,850
what I've shown you I've talked about it

00:14:29,689 --> 00:14:36,980
mostly but if you go to that URL you'll

00:14:31,850 --> 00:14:38,839
see it in action a set of api's that can

00:14:36,980 --> 00:14:41,959
be first of all easily integrated into

00:14:38,839 --> 00:14:44,689
Jupiter hub and then once there they can

00:14:41,959 --> 00:14:51,110
be used within Jupiter notebooks to

00:14:44,689 --> 00:14:53,870
perform authentication to obtain tokens

00:14:51,110 --> 00:14:56,660
that you can then use to access the data

00:14:53,870 --> 00:14:58,370
access data movement data sharing data

00:14:56,660 --> 00:15:01,309
search all the sorts of things you want

00:14:58,370 --> 00:15:03,559
you want to be able to do if you're

00:15:01,309 --> 00:15:07,279
working with data that's bigger than

00:15:03,559 --> 00:15:09,050
will fit on your laptop or even if you

00:15:07,279 --> 00:15:10,519
are working with data that will fit on

00:15:09,050 --> 00:15:15,110
your laptop but you need to fetch it

00:15:10,519 --> 00:15:16,939
from remote locations so as I've

00:15:15,110 --> 00:15:19,670
explained you know these mechanisms can

00:15:16,939 --> 00:15:22,759
be used in your notebooks to access any

00:15:19,670 --> 00:15:26,779
data essentially anywhere and to secure

00:15:22,759 --> 00:15:28,220
any resource I'd like I'd like to now go

00:15:26,779 --> 00:15:31,639
on and talk about a few other things

00:15:28,220 --> 00:15:34,910
that either are and under development

00:15:31,639 --> 00:15:36,449
within the globus team or have been

00:15:34,910 --> 00:15:39,299
experimented with

00:15:36,449 --> 00:15:42,439
so one thing I wanted to touch upon is

00:15:39,299 --> 00:15:45,660
how we actually manage the various

00:15:42,439 --> 00:15:48,869
computational components the notebooks

00:15:45,660 --> 00:15:50,399
and and and programs that were used to

00:15:48,869 --> 00:15:52,470
perform that machine learning

00:15:50,399 --> 00:15:57,299
application that I indicated at the very

00:15:52,470 --> 00:15:58,799
beginning so here's a here's the sort of

00:15:57,299 --> 00:16:02,089
environment that we work with at Argonne

00:15:58,799 --> 00:16:04,860
National Lab so we have Jupiter hub is

00:16:02,089 --> 00:16:08,220
running and its associated notebook

00:16:04,860 --> 00:16:10,290
server is running the various machine

00:16:08,220 --> 00:16:13,499
learning notebooks that we've created to

00:16:10,290 --> 00:16:16,170
analyze underage life there's data weak

00:16:13,499 --> 00:16:18,689
authenticated to it using Globus auth

00:16:16,170 --> 00:16:22,970
and our institutional credentials as I

00:16:18,689 --> 00:16:26,639
indicated and then we have associated

00:16:22,970 --> 00:16:28,980
maintained for you set at Argonne and

00:16:26,639 --> 00:16:31,319
elsewhere a container registry a

00:16:28,980 --> 00:16:34,470
searchable container registry that we

00:16:31,319 --> 00:16:36,319
can use to find containers that meet a

00:16:34,470 --> 00:16:39,629
particular purpose and then we don't

00:16:36,319 --> 00:16:42,089
dynamically deploy these onto things

00:16:39,629 --> 00:16:45,299
like the supercomputer that we use for

00:16:42,089 --> 00:16:47,419
to actually train the models so people

00:16:45,299 --> 00:16:50,429
can come in and work entirely within a

00:16:47,419 --> 00:16:53,189
Drupada environment but with

00:16:50,429 --> 00:16:55,559
computations being deployed on different

00:16:53,189 --> 00:16:59,339
computers depending on the needs of

00:16:55,559 --> 00:17:02,369
their application and we make heavy use

00:16:59,339 --> 00:17:06,120
of this online data store called petrol

00:17:02,369 --> 00:17:10,350
which again is Globus accessible Globus

00:17:06,120 --> 00:17:11,130
auth authenticated and easily accessed

00:17:10,350 --> 00:17:16,679
from within

00:17:11,130 --> 00:17:19,350
Drupada and notebooks one other thing I

00:17:16,679 --> 00:17:22,110
wanted to say a few words about is how

00:17:19,350 --> 00:17:25,889
we incorporate parallel processing into

00:17:22,110 --> 00:17:29,010
our notebooks so if you if you were to

00:17:25,889 --> 00:17:30,690
if someone was to study this piece of

00:17:29,010 --> 00:17:32,610
code that I showed at the very beginning

00:17:30,690 --> 00:17:37,350
and let me explain a bit more about it

00:17:32,610 --> 00:17:41,190
now so this is a your training and then

00:17:37,350 --> 00:17:43,289
running a you know machine learning

00:17:41,190 --> 00:17:47,309
model for stopping power and this is

00:17:43,289 --> 00:17:49,830
here showing the the results we're

00:17:47,309 --> 00:17:51,930
computing were modeling

00:17:49,830 --> 00:17:55,170
machine learning model we in a few

00:17:51,930 --> 00:17:56,760
seconds we can estimate stopping power

00:17:55,170 --> 00:17:58,890
at many different angles through the

00:17:56,760 --> 00:18:01,560
material even though we've only computed

00:17:58,890 --> 00:18:05,360
at a few angles which is a wonderful

00:18:01,560 --> 00:18:07,500
step forward scientifically but this

00:18:05,360 --> 00:18:09,420
modeling process is still somewhat

00:18:07,500 --> 00:18:11,430
computationally intensive even though it

00:18:09,420 --> 00:18:13,890
takes a particularly the training part

00:18:11,430 --> 00:18:16,860
so we want to use parallel processing on

00:18:13,890 --> 00:18:20,430
the supercomputer so we and we do that

00:18:16,860 --> 00:18:23,580
by adding this little piece of pragma

00:18:20,430 --> 00:18:26,880
PSS at Python app so what this does is

00:18:23,580 --> 00:18:29,760
basically allow us to use a system

00:18:26,880 --> 00:18:34,290
called parcel a parallel library for

00:18:29,760 --> 00:18:36,240
Python that lets us specify via the

00:18:34,290 --> 00:18:37,560
notation I've just indicated and here it

00:18:36,240 --> 00:18:40,110
is again

00:18:37,560 --> 00:18:41,880
Python app that a particular function is

00:18:40,110 --> 00:18:44,280
to be viewed as something that we run in

00:18:41,880 --> 00:18:46,410
parallel and that will return a piece of

00:18:44,280 --> 00:18:49,890
data that we should wait on and to

00:18:46,410 --> 00:18:52,650
what's available and so here we're

00:18:49,890 --> 00:18:55,380
writing at the very bottom right a very

00:18:52,650 --> 00:18:58,260
simple parallel loop you know computer

00:18:55,380 --> 00:19:01,260
set of an array of chunks by running

00:18:58,260 --> 00:19:06,300
this thing compute features on each

00:19:01,260 --> 00:19:09,270
chunk in a numpy array and the result is

00:19:06,300 --> 00:19:12,240
a highly parallel computation but in the

00:19:09,270 --> 00:19:14,330
in the this thing here we do the same

00:19:12,240 --> 00:19:16,380
thing but instead we're computing

00:19:14,330 --> 00:19:18,390
stopping power for a whole range of

00:19:16,380 --> 00:19:20,040
different trajectories so we make heavy

00:19:18,390 --> 00:19:22,470
use of this as a means of integrating

00:19:20,040 --> 00:19:24,120
parallel processing into our notebooks

00:19:22,470 --> 00:19:27,410
there's nothing to do with globus but it

00:19:24,120 --> 00:19:29,340
it is a powerful tool for

00:19:27,410 --> 00:19:31,920
high-performance computing in this group

00:19:29,340 --> 00:19:33,210
in these Drupada environments the last

00:19:31,920 --> 00:19:38,030
thing I wanted to say a few words about

00:19:33,210 --> 00:19:41,390
is the work where we've been doing with

00:19:38,030 --> 00:19:46,560
this is much more experimental

00:19:41,390 --> 00:19:48,510
integration of the globus mechanisms

00:19:46,560 --> 00:19:51,590
into jupiter lab so how many people here

00:19:48,510 --> 00:19:55,380
use jupiter lab quite a few of you so

00:19:51,590 --> 00:19:56,580
maybe this will be of interest so so far

00:19:55,380 --> 00:19:59,400
I've been talking about Jupiter hub

00:19:56,580 --> 00:20:03,480
fairly simple you know integration of

00:19:59,400 --> 00:20:06,300
auth and then one uses

00:20:03,480 --> 00:20:09,780
as mechanisms within notebooks but

00:20:06,300 --> 00:20:12,420
there's no particular user interface

00:20:09,780 --> 00:20:14,940
experience we've had a student working

00:20:12,420 --> 00:20:19,350
over the summer smart young fellow Juan

00:20:14,940 --> 00:20:22,800
David Garrido to develop an integration

00:20:19,350 --> 00:20:25,350
of Globus mechanisms into Jupiter

00:20:22,800 --> 00:20:28,470
basically by developing a set of apps

00:20:25,350 --> 00:20:32,750
that will allow you to first of all

00:20:28,470 --> 00:20:36,360
authenticate and and then access remote

00:20:32,750 --> 00:20:38,010
or local data remote data initiate

00:20:36,360 --> 00:20:40,620
transfers from one place to another

00:20:38,010 --> 00:20:42,630
search remote data repositories move

00:20:40,620 --> 00:20:44,340
data into your local Jupiter environment

00:20:42,630 --> 00:20:46,560
and so forth so I'll just show you a few

00:20:44,340 --> 00:20:48,270
bits of it so here we are we're

00:20:46,560 --> 00:20:52,770
authenticating this is a standard

00:20:48,270 --> 00:20:54,480
consent page we want to be able to we

00:20:52,770 --> 00:20:58,770
want to allow the stupider lab

00:20:54,480 --> 00:21:02,030
environment to know who you are know

00:20:58,770 --> 00:21:05,310
some details about you access your

00:21:02,030 --> 00:21:09,660
identities identity information simple

00:21:05,310 --> 00:21:11,610
identity information having done that we

00:21:09,660 --> 00:21:13,680
can then we then have a set of panes and

00:21:11,610 --> 00:21:16,110
the dripper hub environment that can

00:21:13,680 --> 00:21:19,260
allows us to browse our local storage so

00:21:16,110 --> 00:21:21,330
our Jupiter notebook is Jupiter lab

00:21:19,260 --> 00:21:24,570
notebook is running somewhere we have

00:21:21,330 --> 00:21:26,340
some local storage so we can see that

00:21:24,570 --> 00:21:28,260
but also to search remote storage

00:21:26,340 --> 00:21:30,960
systems any remote storage system that

00:21:28,260 --> 00:21:34,110
we might have access to and this these

00:21:30,960 --> 00:21:36,780
could be just a few could be dozens here

00:21:34,110 --> 00:21:38,910
we're browsing a few we're searching one

00:21:36,780 --> 00:21:42,330
we're finding a file on a remote storage

00:21:38,910 --> 00:21:44,940
system we're initiating a transfer its

00:21:42,330 --> 00:21:46,290
appeared and now we've we're opening up

00:21:44,940 --> 00:21:47,400
a notebook that we've just retrieved

00:21:46,290 --> 00:21:50,070
from a remote location

00:21:47,400 --> 00:21:52,980
into our local storage environment so

00:21:50,070 --> 00:21:55,410
this whole notion of all the things that

00:21:52,980 --> 00:21:58,800
you can do within a notebook using API

00:21:55,410 --> 00:22:01,370
calls we can now do using Jupiter hub

00:21:58,800 --> 00:22:04,320
user into user interface components

00:22:01,370 --> 00:22:06,030
another important part of Globus for

00:22:04,320 --> 00:22:08,310
many people is its search capabilities

00:22:06,030 --> 00:22:10,470
this is what its publication and search

00:22:08,310 --> 00:22:12,480
capabilities so these are what underpin

00:22:10,470 --> 00:22:17,160
for example the materials data facility

00:22:12,480 --> 00:22:19,050
that I mentioned briefly earlier so we

00:22:17,160 --> 00:22:21,180
can also go ahead and search remote

00:22:19,050 --> 00:22:24,540
databases so we've got a lot three here

00:22:21,180 --> 00:22:29,730
the materials data facility MDF there's

00:22:24,540 --> 00:22:31,950
a database of neuro imaging data and one

00:22:29,730 --> 00:22:34,440
of parallel computing performance data

00:22:31,950 --> 00:22:37,620
we're going to search the materials data

00:22:34,440 --> 00:22:41,100
facility select a piece of materials

00:22:37,620 --> 00:22:43,620
data and retrievers come it's it's a

00:22:41,100 --> 00:22:45,860
metadata so you may be able to read the

00:22:43,620 --> 00:22:50,820
fine print but basically we've got some

00:22:45,860 --> 00:22:52,890
information about some crystal data and

00:22:50,820 --> 00:22:54,750
we can then go ahead and retrieve that

00:22:52,890 --> 00:22:56,220
locally perhaps we can retrieve a whole

00:22:54,750 --> 00:22:57,750
set and retrieve them locally for

00:22:56,220 --> 00:23:00,240
modeling so this is how we would proceed

00:22:57,750 --> 00:23:02,540
if we wanted to do the stopping power

00:23:00,240 --> 00:23:04,800
calculation in a use user interface

00:23:02,540 --> 00:23:07,230
environment rather than remotely we

00:23:04,800 --> 00:23:09,300
browse the materials data facilities

00:23:07,230 --> 00:23:14,070
select the data we wanted initiate a

00:23:09,300 --> 00:23:16,200
transfer fire up our material our

00:23:14,070 --> 00:23:19,020
stopping power computation and then

00:23:16,200 --> 00:23:21,470
transfer the results perhaps back to the

00:23:19,020 --> 00:23:26,670
materials data facility for further

00:23:21,470 --> 00:23:28,320
publication okay so I think I will have

00:23:26,670 --> 00:23:30,200
time to go quickly through the notebook

00:23:28,320 --> 00:23:32,700
we'll try that again in a minute but

00:23:30,200 --> 00:23:34,680
first of all let me just go through the

00:23:32,700 --> 00:23:36,360
last two slides before we do that so I

00:23:34,680 --> 00:23:37,950
wanted to mention obviously a lot of

00:23:36,360 --> 00:23:39,540
people on the globus team and others are

00:23:37,950 --> 00:23:41,730
involved in this so I do want to mention

00:23:39,540 --> 00:23:44,130
that two of them are here Russian and

00:23:41,730 --> 00:23:45,630
Mantha Krishnan and Mike pepco who's

00:23:44,130 --> 00:23:47,430
director of the Argonne leadership

00:23:45,630 --> 00:23:50,730
computing facility so if you see them

00:23:47,430 --> 00:23:51,660
feel free to ask them questions he knows

00:23:50,730 --> 00:23:53,430
everything about high performance

00:23:51,660 --> 00:23:56,700
computing she knows everything about

00:23:53,430 --> 00:23:58,830
Globus vas for silly artists is here as

00:23:56,700 --> 00:24:00,960
well I didn't know he will be here so I

00:23:58,830 --> 00:24:02,280
didn't put his picture up but hey best

00:24:00,960 --> 00:24:03,930
you want to wave your hand

00:24:02,280 --> 00:24:08,130
you want to know Globus thinks he knows

00:24:03,930 --> 00:24:09,540
everything as well so let me tell you

00:24:08,130 --> 00:24:14,900
where you can go for more information

00:24:09,540 --> 00:24:19,710
so Globus api's lots of online

00:24:14,900 --> 00:24:20,400
documentation use with Jupiter well you

00:24:19,710 --> 00:24:22,590
can try this

00:24:20,400 --> 00:24:27,480
Jupiter demo how many are doing that at

00:24:22,590 --> 00:24:30,050
the moment a few is it working good I

00:24:27,480 --> 00:24:30,050
would hope so

00:24:31,230 --> 00:24:36,490
there's a long blog post with a URL that

00:24:34,810 --> 00:24:40,210
you won't remember but you can probably

00:24:36,490 --> 00:24:43,150
find it and the more future looking

00:24:40,210 --> 00:24:49,540
stuff we can talk more about let me try

00:24:43,150 --> 00:24:51,190
just try see if I can get this this

00:24:49,540 --> 00:24:58,290
thing going okay this is working now so

00:24:51,190 --> 00:25:00,280
good so I'm going to this is my the

00:24:58,290 --> 00:25:02,230
example that I was going to talk you

00:25:00,280 --> 00:25:05,020
through and now I can do it so let's see

00:25:02,230 --> 00:25:08,020
if we can make it a bit bigger so I

00:25:05,020 --> 00:25:10,660
signed in to Globus and I've previously

00:25:08,020 --> 00:25:12,490
signed out it normally keeps my sign in

00:25:10,660 --> 00:25:14,920
information active but I wanted to show

00:25:12,490 --> 00:25:16,810
you this so it's going to ask me to sign

00:25:14,920 --> 00:25:19,330
in so this is what you see in your

00:25:16,810 --> 00:25:22,120
Jupiter hub environment so I could sign

00:25:19,330 --> 00:25:24,400
in with any one of dozens hundreds of

00:25:22,120 --> 00:25:26,140
different credentials here I'm going to

00:25:24,400 --> 00:25:31,020
use my University of Chicago credential

00:25:26,140 --> 00:25:39,120
I could use Google or orchid so using

00:25:31,020 --> 00:25:39,120
OAuth yeah what's up this is not working

00:25:45,279 --> 00:26:09,070
is there a problem anyway we'll continue

00:25:56,470 --> 00:26:11,809
i'm CI logon we can sign in we're now a

00:26:09,070 --> 00:26:16,429
richer set of consents because I want to

00:26:11,809 --> 00:26:20,690
be able to do more things proceed I'll

00:26:16,429 --> 00:26:25,549
grant all those consents and now I can

00:26:20,690 --> 00:26:27,320
start up a server running on Amazon I

00:26:25,549 --> 00:26:30,440
believe although it doesn't really

00:26:27,320 --> 00:26:34,989
matter where it's running once it

00:26:30,440 --> 00:26:34,989
started of course I can then proceed to

00:26:35,320 --> 00:26:41,119
to access my Jupiter notebook Louis

00:26:39,559 --> 00:26:44,570
there we go I'm going to go to the

00:26:41,119 --> 00:26:48,529
Jupiter con one which I think hopefully

00:26:44,570 --> 00:26:51,710
some of you have found and you know at

00:26:48,529 --> 00:26:55,700
this point I've authenticated it's

00:26:51,710 --> 00:26:57,349
requested scopes from me and the we've

00:26:55,700 --> 00:27:01,190
created a Drupa de notebook which has

00:26:57,349 --> 00:27:03,859
access to all of these tokens that allow

00:27:01,190 --> 00:27:05,779
me to access other resources so you can

00:27:03,859 --> 00:27:10,389
see the you know we've got pretty

00:27:05,779 --> 00:27:15,289
standard stuff here we can retrieve

00:27:10,389 --> 00:27:18,859
tokens from the environment we can look

00:27:15,289 --> 00:27:22,609
inside them so here's the tokens I have

00:27:18,859 --> 00:27:26,119
I have my ID token which represents

00:27:22,609 --> 00:27:28,519
information about me a Globus auth token

00:27:26,119 --> 00:27:29,989
that I can use to authenticate to others

00:27:28,519 --> 00:27:32,929
we've got tokens that we can use to

00:27:29,989 --> 00:27:35,690
access the global identifier service the

00:27:32,929 --> 00:27:38,179
petrol storage service the global search

00:27:35,690 --> 00:27:41,239
service that Globus transfer service I

00:27:38,179 --> 00:27:43,489
may or may not want to use those and

00:27:41,239 --> 00:27:45,559
then I can go through and examine the

00:27:43,489 --> 00:27:48,649
credentials which I won't do but I will

00:27:45,559 --> 00:27:52,190
show you how we can immediately within

00:27:48,649 --> 00:27:55,570
this notebook that I just fired up go

00:27:52,190 --> 00:27:57,490
ahead and retrieve data from a remote

00:27:55,570 --> 00:28:00,940
storage storage

00:27:57,490 --> 00:28:05,620
server perform some computation put the

00:28:00,940 --> 00:28:08,290
results on to a mass store and then

00:28:05,620 --> 00:28:12,130
share a link with others so here I'm

00:28:08,290 --> 00:28:14,200
doing you can see a an HTTP GET

00:28:12,130 --> 00:28:17,410
operation pretty straightforward because

00:28:14,200 --> 00:28:20,559
it's public data I plot the result I

00:28:17,410 --> 00:28:23,230
won't do all this and now I'm going to

00:28:20,559 --> 00:28:25,420
initiate a transfer of the new plot that

00:28:23,230 --> 00:28:27,640
I've created to this petrol storage

00:28:25,420 --> 00:28:29,380
service so here I'm constructing a

00:28:27,640 --> 00:28:31,450
header so this stuff is all wrapped

00:28:29,380 --> 00:28:33,580
inside our nice Python API s but we

00:28:31,450 --> 00:28:38,010
wanted to show you how it worked so I'm

00:28:33,580 --> 00:28:38,010
retrieving a token from my environment

00:28:38,040 --> 00:28:47,110
setting up a transfer and moving the

00:28:42,850 --> 00:28:52,270
data from as we show here we're moving

00:28:47,110 --> 00:28:55,630
the data from Amazon to the petrol

00:28:52,270 --> 00:28:59,140
storage service ok

00:28:55,630 --> 00:29:01,510
I think I'll stop at that point so so to

00:28:59,140 --> 00:29:10,590
remind you what we've seen at this point

00:29:01,510 --> 00:29:10,590
I will risk another application movement

00:29:13,500 --> 00:29:19,720
here's the here's where you can go for

00:29:17,620 --> 00:29:24,300
more information and I'm happy to take

00:29:19,720 --> 00:29:27,750
any questions that you might have yeah

00:29:24,300 --> 00:29:30,100
[Applause]

00:29:27,750 --> 00:29:35,110
and I usually left time for questions if

00:29:30,100 --> 00:29:37,980
I calculated correctly yes 8 minutes

00:29:35,110 --> 00:29:37,980
amazing

00:29:42,110 --> 00:29:50,190
yeah now these slides going to be

00:29:47,399 --> 00:29:53,519
available yes well you can get them from

00:29:50,190 --> 00:29:55,110
me will you be sharing them also we

00:29:53,519 --> 00:29:59,549
don't know so you can get them from me

00:29:55,110 --> 00:30:02,340
and and if Jupiter Khan publishes them

00:29:59,549 --> 00:30:03,690
then that we all get them there as well

00:30:02,340 --> 00:30:05,549
but there's my email address at the

00:30:03,690 --> 00:30:19,769
bottom bottom foster at you Chicago

00:30:05,549 --> 00:30:24,539
edu yep yes that's right yeah yeah so

00:30:19,769 --> 00:30:26,159
Globus will so Globus can handle

00:30:24,539 --> 00:30:27,659
two-factor authentication but you will

00:30:26,159 --> 00:30:29,399
have needed to authenticate yourself

00:30:27,659 --> 00:30:36,289
previously to that and then we'll

00:30:29,399 --> 00:30:36,289
generate the appropriate token yep yeah

00:30:42,480 --> 00:30:47,980
yes so mostly the tokens we deal with

00:30:45,720 --> 00:30:50,529
lasts for longer than that you know of

00:30:47,980 --> 00:30:52,990
tour hours also sometimes much longer

00:30:50,529 --> 00:30:58,149
that's obviously a policy decision of

00:30:52,990 --> 00:31:00,419
the of the resource provider so we can

00:30:58,149 --> 00:31:03,549
at that point we can detect that they've

00:31:00,419 --> 00:31:05,289
we detect that they've timed out and

00:31:03,549 --> 00:31:09,279
then we'll tell you where you need to go

00:31:05,289 --> 00:31:10,809
to refresh them typically posting a you

00:31:09,279 --> 00:31:15,490
know a URL that you need to follow to

00:31:10,809 --> 00:31:16,990
refresh them yeah yeah so we don't we

00:31:15,490 --> 00:31:19,299
can't avoid the fact that people like to

00:31:16,990 --> 00:31:21,700
have manners the lifetime of their

00:31:19,299 --> 00:31:33,070
tokens but remember these are so vast

00:31:21,700 --> 00:31:35,320
you want to say something so the

00:31:33,070 --> 00:31:37,000
question was about token timeouts and

00:31:35,320 --> 00:31:39,820
the comment made by vast was you can

00:31:37,000 --> 00:31:41,350
build into your application refresh

00:31:39,820 --> 00:31:44,490
tokens which will automatically

00:31:41,350 --> 00:31:54,510
refreshes as you proceed with your

00:31:44,490 --> 00:31:54,510
computation yes yeah

00:31:56,389 --> 00:32:08,309
yes right right so yeah I have this a

00:32:06,269 --> 00:32:11,309
common question why do you move the data

00:32:08,309 --> 00:32:14,609
and and there well two answers of course

00:32:11,309 --> 00:32:16,649
often if you can move the computation to

00:32:14,609 --> 00:32:20,759
the data that's a that's a wonderful

00:32:16,649 --> 00:32:22,079
thing and we you know you can use globus

00:32:20,759 --> 00:32:24,779
mechanisms for that as well

00:32:22,079 --> 00:32:26,909
but for better or worse data often ends

00:32:24,779 --> 00:32:29,009
up being in the wrong place and we hope

00:32:26,909 --> 00:32:33,179
you put it in the right place so for

00:32:29,009 --> 00:32:36,450
example you know the the the example I

00:32:33,179 --> 00:32:39,239
gave you is sort of illustrates that the

00:32:36,450 --> 00:32:41,609
material's data is stored on this petrel

00:32:39,239 --> 00:32:46,200
server which is designed for high speed

00:32:41,609 --> 00:32:49,049
high speed access long term storage we

00:32:46,200 --> 00:32:51,179
want to move it to this computational

00:32:49,049 --> 00:32:53,700
platform where the amount where the

00:32:51,179 --> 00:32:58,320
storage is intended to be used in a more

00:32:53,700 --> 00:33:00,389
a temporary manner so yeah we often find

00:32:58,320 --> 00:33:03,709
data gets created in one place people

00:33:00,389 --> 00:33:06,479
want to merge data from multiple sources

00:33:03,709 --> 00:33:07,829
they only have a certain allocation on

00:33:06,479 --> 00:33:10,049
one place there all sorts of reasons why

00:33:07,829 --> 00:33:12,059
people end up wanting to move move data

00:33:10,049 --> 00:33:16,499
not to say it if you can avoid it you

00:33:12,059 --> 00:33:20,269
shouldn't yeah so one thing we are busy

00:33:16,499 --> 00:33:23,339
I mean part of our goal with this

00:33:20,269 --> 00:33:24,709
continued yet ever deeper integration

00:33:23,339 --> 00:33:27,179
with Jupiter is to allow people to

00:33:24,709 --> 00:33:29,159
deploy Jupiter notebooks aren't where

00:33:27,179 --> 00:33:32,009
the data is and run the computation

00:33:29,159 --> 00:33:32,729
there and when that works that's going

00:33:32,009 --> 00:33:35,509
to be wonderful

00:33:32,729 --> 00:33:35,509
yeah

00:33:44,270 --> 00:33:52,200
yeah so the so the globus transfer just

00:33:49,410 --> 00:33:53,730
think what it does it lets you move this

00:33:52,200 --> 00:33:57,960
that particular part of it lets you move

00:33:53,730 --> 00:34:00,150
data from A to B a and B are both

00:33:57,960 --> 00:34:03,480
storage systems managed by other people

00:34:00,150 --> 00:34:06,540
so the things that we're concerned about

00:34:03,480 --> 00:34:08,480
in in in in validating that we are

00:34:06,540 --> 00:34:12,149
compliant with these policies that

00:34:08,480 --> 00:34:15,510
prevent revealing of personal health

00:34:12,149 --> 00:34:19,710
information is that the system itself is

00:34:15,510 --> 00:34:21,570
secure that we don't store or transmit

00:34:19,710 --> 00:34:23,370
file names in the clear because they can

00:34:21,570 --> 00:34:25,830
have personal health information that

00:34:23,370 --> 00:34:29,520
all information is encrypted as in when

00:34:25,830 --> 00:34:32,760
it's in motion and a few other things

00:34:29,520 --> 00:34:35,700
around how we manage the actual service

00:34:32,760 --> 00:34:39,600
to ensure that it can't be compromised

00:34:35,700 --> 00:34:42,120
so the main changes we make to the

00:34:39,600 --> 00:34:46,320
service apart from how we operate it to

00:34:42,120 --> 00:34:48,450
be very secure that we absorb the skate

00:34:46,320 --> 00:34:51,560
or encrypt file names and transports and

00:34:48,450 --> 00:34:53,669
we encrypt all the data rez it's moved

00:34:51,560 --> 00:34:55,350
yes our fortunately we're not in the

00:34:53,669 --> 00:34:57,120
business of storing data we're just in

00:34:55,350 --> 00:35:05,570
their business of helping people move it

00:34:57,120 --> 00:35:05,570
and keep track of where it is yeah

00:35:08,109 --> 00:35:18,980
yeah oh yeah no good question no it does

00:35:12,589 --> 00:35:21,740
not know so the a big focus of so you

00:35:18,980 --> 00:35:26,530
can think Globus running in the cloud is

00:35:21,740 --> 00:35:29,420
like you know the FedEx headquarters and

00:35:26,530 --> 00:35:31,609
we're moving data as fast as why the

00:35:29,420 --> 00:35:34,609
fastest possible route from the source

00:35:31,609 --> 00:35:37,790
to destination controlled by this cloud

00:35:34,609 --> 00:35:40,579
logic so and we do that by using a

00:35:37,790 --> 00:35:42,589
feature of the pro underlying protocol

00:35:40,579 --> 00:35:47,210
that we support ridah FTP called third

00:35:42,589 --> 00:35:50,990
party transfer so most big universities

00:35:47,210 --> 00:35:54,619
and labs nowadays have these science DM

00:35:50,990 --> 00:35:57,829
Z's so-called a you know very high

00:35:54,619 --> 00:36:01,220
performance systems data mover systems

00:35:57,829 --> 00:36:02,839
with arrays of data transfer nodes all

00:36:01,220 --> 00:36:06,200
of which have globus installed on them

00:36:02,839 --> 00:36:10,569
so if we want to move data from say have

00:36:06,200 --> 00:36:13,700
it to a GaN you initiate the request

00:36:10,569 --> 00:36:15,980
Globus sits there and negotiates with

00:36:13,700 --> 00:36:19,010
the two endpoints and sets up a high

00:36:15,980 --> 00:36:22,040
speed transfer that may use many streams

00:36:19,010 --> 00:36:24,410
multiple servers on each hand you know

00:36:22,040 --> 00:36:26,119
they can get a large fraction of the

00:36:24,410 --> 00:36:32,900
peak performance of the underlying

00:36:26,119 --> 00:36:34,940
network I think we are we've only got

00:36:32,900 --> 00:36:37,160
like a minute or two left so perhaps we

00:36:34,940 --> 00:36:38,440
can stop at this point thank you very

00:36:37,160 --> 00:36:44,090
much for your attention

00:36:38,440 --> 00:36:44,090

YouTube URL: https://www.youtube.com/watch?v=sqq9rUs3Hsw


