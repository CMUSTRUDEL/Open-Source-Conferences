Title: SWAN: CERN's Jupyter-based interactive data analysis service - Diogo Castro (CERN)
Publication date: 2018-09-20
Playlist: JupyterCon in New York 2018
Description: 
	Both CERN and high energy physics (HEP) in general face unprecedented challenges in data storage, processing, and analysis. The experiments of the Large Hadron Collider (LHC) are expected to reach one exabyte of physics data this year. After processing and filtering this data, interactivity takes particular importance in the last phases of analysis, where the final results are produced, namely in the form of plots.

Jupyter’s ability to provide notebooks that merge a rich narrative made of code, text, and other media materials allows CERN to offer a web-based service that addresses the needs of the community. This service, called SWAN (an acronym for service for web-based analysis), provides the HEP community with an interactive interface to access data analysis tools, such as the ROOT framework. Moreover, SWAN integrates with CERN’s infrastructure more precisely, with users’ synchronized storage (CERNBox), computing resources, and experiments data and software.

Diogo Castro offers an overview of SWAN and explains how the service is being used by researchers and students, both inside and outside CERN. Diogo also discusses the evolution of the service, especially the new SWAN interface, developed on top of Jupyter, which enables both easy sharing among users and connecting to Spark clusters.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:01,020 --> 00:00:06,750
thank you oh good morning it's an honor

00:00:04,560 --> 00:00:10,530
and pleasure for me to be here my name

00:00:06,750 --> 00:00:13,919
is yoke cast and I came from CERN here

00:00:10,530 --> 00:00:16,910
to present you Swan our Jupiter based

00:00:13,919 --> 00:00:19,410
interactive data analysis service and

00:00:16,910 --> 00:00:22,590
given that this is the first time that

00:00:19,410 --> 00:00:24,720
CERN is present here at Jupiter Khan we

00:00:22,590 --> 00:00:27,089
decided that it was important to give a

00:00:24,720 --> 00:00:30,259
broader presentation and so I'd like you

00:00:27,089 --> 00:00:35,100
to give you some context of what CERN is

00:00:30,259 --> 00:00:41,160
what is doing and how Jupiter is helping

00:00:35,100 --> 00:00:42,990
and is helping us do what we do and then

00:00:41,160 --> 00:00:45,060
I'd like to present you Swan how we

00:00:42,990 --> 00:00:47,160
integrated explained you how we

00:00:45,060 --> 00:00:49,410
integrated Jupiter with our

00:00:47,160 --> 00:00:52,410
infrastructure what were the challenges

00:00:49,410 --> 00:00:55,500
what we do what we did to personalize it

00:00:52,410 --> 00:00:58,740
and lastly I'd like to go through the

00:00:55,500 --> 00:01:02,360
future and think about the next steps

00:00:58,740 --> 00:01:06,229
for our platform but let's start with

00:01:02,360 --> 00:01:09,840
the context and explain you what CERN is

00:01:06,229 --> 00:01:14,189
CERN is physics laboratory it was

00:01:09,840 --> 00:01:18,630
founded in 1954 and it's focused on

00:01:14,189 --> 00:01:20,759
research technology education all of

00:01:18,630 --> 00:01:24,299
these in the domain of fundamental

00:01:20,759 --> 00:01:27,539
physics and probably when I mentioned

00:01:24,299 --> 00:01:31,229
the words yes the word CERN you thought

00:01:27,539 --> 00:01:33,390
about this we are home to the largest

00:01:31,229 --> 00:01:35,729
and the most powerful particle

00:01:33,390 --> 00:01:39,270
accelerator in the world it's called

00:01:35,729 --> 00:01:43,909
Large Hadron Collider or LHC for short

00:01:39,270 --> 00:01:48,560
and it's a ring with 27 kilometers or

00:01:43,909 --> 00:01:52,020
almost 17 miles and why is it useful

00:01:48,560 --> 00:01:54,960
it's useful because it is helping us

00:01:52,020 --> 00:01:57,959
discover more about the basic building

00:01:54,960 --> 00:02:01,920
blocks of matter and the forces that

00:01:57,959 --> 00:02:04,829
govern our universe and it was thanks to

00:02:01,920 --> 00:02:09,210
it that we discovered the Higgs boson

00:02:04,829 --> 00:02:12,390
and like it CERN has many other

00:02:09,210 --> 00:02:14,550
accomplishments in physics but what I'd

00:02:12,390 --> 00:02:16,950
like to tell you today is

00:02:14,550 --> 00:02:18,810
we not only have accomplishments in

00:02:16,950 --> 00:02:22,460
physics a lot of innovation that comes

00:02:18,810 --> 00:02:26,100
out of CERN spends multiple areas and

00:02:22,460 --> 00:02:29,310
one that might that I thought is

00:02:26,100 --> 00:02:31,200
interesting for this audience and

00:02:29,310 --> 00:02:35,220
actually it was mentioned this morning

00:02:31,200 --> 00:02:37,500
is the invention of web see Sir Tim

00:02:35,220 --> 00:02:40,170
berners-lee was working at CERN when he

00:02:37,500 --> 00:02:44,310
invented the web and it's something that

00:02:40,170 --> 00:02:48,090
now makes Jupiter possible and like him

00:02:44,310 --> 00:02:51,750
before we are a community nowadays of

00:02:48,090 --> 00:02:54,450
almost 18,000 people working at CERN or

00:02:51,750 --> 00:02:58,410
collaborating with CERN out of these

00:02:54,450 --> 00:03:01,380
18,000 almost 13,000 are international

00:02:58,410 --> 00:03:03,060
collaborations but more than speaking

00:03:01,380 --> 00:03:05,130
about numbers it's important also to

00:03:03,060 --> 00:03:07,380
refer to mention where they are coming

00:03:05,130 --> 00:03:11,130
from which countries take part in this

00:03:07,380 --> 00:03:14,100
massive experiment and as you can see

00:03:11,130 --> 00:03:18,120
almost all countries in the world take

00:03:14,100 --> 00:03:21,240
part with us in the pursuit of new

00:03:18,120 --> 00:03:23,610
discoveries and one community very

00:03:21,240 --> 00:03:26,250
important to us at CERN is the hep

00:03:23,610 --> 00:03:30,930
community or high-energy physics

00:03:26,250 --> 00:03:33,360
community and this is how they work this

00:03:30,930 --> 00:03:38,580
is their pipeline to give you some

00:03:33,360 --> 00:03:41,340
context we at the LHC we have four main

00:03:38,580 --> 00:03:45,330
experiments they are called Atlas Alice

00:03:41,340 --> 00:03:48,840
CMS and LHC be and these experiments

00:03:45,330 --> 00:03:55,590
produce something around 1 petabyte of

00:03:48,840 --> 00:04:00,030
rod data per second but not all of this

00:03:55,590 --> 00:04:03,780
data is relevant and it's such a large

00:04:00,030 --> 00:04:06,450
amount of data that only a few of this

00:04:03,780 --> 00:04:08,850
data is really stored because we do

00:04:06,450 --> 00:04:12,270
event filtering right out of the

00:04:08,850 --> 00:04:15,380
detectors both by hardware and software

00:04:12,270 --> 00:04:18,390
and only then we store this data in our

00:04:15,380 --> 00:04:22,160
storage system which is called cos I

00:04:18,390 --> 00:04:24,810
will mention a bit about it later and

00:04:22,160 --> 00:04:28,139
then it goes through all this pipeline

00:04:24,810 --> 00:04:31,289
it gets reconstructed it's

00:04:28,139 --> 00:04:33,659
sort in what we call root files I also

00:04:31,289 --> 00:04:39,870
going to mention what root is in a bit

00:04:33,659 --> 00:04:43,770
it gets processed skin and in the end we

00:04:39,870 --> 00:04:47,370
have what we call analysis datasets so

00:04:43,770 --> 00:04:49,830
these are much smaller datasets so small

00:04:47,370 --> 00:04:51,810
that many of our users download them

00:04:49,830 --> 00:04:55,560
into their own computers and perform the

00:04:51,810 --> 00:04:57,990
analysis in there and as you can see and

00:04:55,560 --> 00:05:02,069
imagine the last process of the pipeline

00:04:57,990 --> 00:05:04,349
is the analysis itself and it's it's an

00:05:02,069 --> 00:05:10,050
interactive process and usually the

00:05:04,349 --> 00:05:12,210
result is a plots or a graphic this is

00:05:10,050 --> 00:05:14,009
something about the future a challenge

00:05:12,210 --> 00:05:15,270
that we have but I decide to mention it

00:05:14,009 --> 00:05:18,029
right away

00:05:15,270 --> 00:05:22,529
the LHC is already already at its limits

00:05:18,029 --> 00:05:25,439
but we are now building an upgrade to it

00:05:22,529 --> 00:05:27,990
which is called high luminosity and this

00:05:25,439 --> 00:05:31,860
upgrade means that we are producing much

00:05:27,990 --> 00:05:34,889
more collisions in the detectors and it

00:05:31,860 --> 00:05:36,689
also means that because we are also

00:05:34,889 --> 00:05:39,740
improving the resolution of the

00:05:36,689 --> 00:05:43,919
detectors we are getting more data and

00:05:39,740 --> 00:05:48,719
the plan that we are the information

00:05:43,919 --> 00:05:50,789
that we have is that almost 13 13 times

00:05:48,719 --> 00:05:52,740
more data will be produced at these

00:05:50,789 --> 00:05:58,050
experiments and as you can imagine this

00:05:52,740 --> 00:06:00,810
is a lot of data and because it's so

00:05:58,050 --> 00:06:04,889
much our tools need to to get improved

00:06:00,810 --> 00:06:08,000
and we need to face new challenges too

00:06:04,889 --> 00:06:10,610
to be able to cope with so much data and

00:06:08,000 --> 00:06:13,349
for example I mentioned that many of our

00:06:10,610 --> 00:06:15,509
researchers download their data set into

00:06:13,349 --> 00:06:17,810
their computers maybe they won't be

00:06:15,509 --> 00:06:21,930
doing that anymore because it won't fit

00:06:17,810 --> 00:06:24,629
so we need to provide tools that will

00:06:21,930 --> 00:06:26,669
allow them to to analyze their data and

00:06:24,629 --> 00:06:30,479
swan is one of the tools that we think

00:06:26,669 --> 00:06:35,039
can help and I'd like you to present you

00:06:30,479 --> 00:06:37,709
now swan but before I'd like to tell you

00:06:35,039 --> 00:06:39,730
how it came to be and I already

00:06:37,709 --> 00:06:43,810
mentioned this name before and

00:06:39,730 --> 00:06:47,380
there's physics that analysis framework

00:06:43,810 --> 00:06:52,090
at CERN it was built by us and it's

00:06:47,380 --> 00:06:55,870
called root and this is no normal tool

00:06:52,090 --> 00:06:58,330
because this is the deep tool that is

00:06:55,870 --> 00:07:01,930
used by all physicists around the world

00:06:58,330 --> 00:07:04,390
and it has libraries for whatever you

00:07:01,930 --> 00:07:06,400
might imagine it's a very powerful tool

00:07:04,390 --> 00:07:10,000
and it's span across all this pipeline

00:07:06,400 --> 00:07:13,270
of physics research as you mentioned we

00:07:10,000 --> 00:07:16,380
store our files in root formats because

00:07:13,270 --> 00:07:19,240
we provide such a powerful and optimized

00:07:16,380 --> 00:07:21,700
libraries for i/o there are many other

00:07:19,240 --> 00:07:26,470
libraries but one that might interest

00:07:21,700 --> 00:07:30,340
this audience is the analysis library

00:07:26,470 --> 00:07:33,160
that we have and basically what happened

00:07:30,340 --> 00:07:36,190
was that the root team was thinking how

00:07:33,160 --> 00:07:39,250
can we provide an easier way to access

00:07:36,190 --> 00:07:42,520
this tool how can our researchers do

00:07:39,250 --> 00:07:44,740
their analysis in an easier way and so

00:07:42,520 --> 00:07:47,680
they thought let's try to make this

00:07:44,740 --> 00:07:50,320
available as a web service they looked

00:07:47,680 --> 00:07:52,330
for tools to integrate with it and they

00:07:50,320 --> 00:07:57,070
found Jupiter they decided to integrate

00:07:52,330 --> 00:07:59,740
Jupiter in route and vice versa and what

00:07:57,070 --> 00:08:03,160
happened was that the first C++ kernel

00:07:59,740 --> 00:08:07,510
that was created to Jupiter was born so

00:08:03,160 --> 00:08:10,330
now you have others other kernels for

00:08:07,510 --> 00:08:16,150
C++ but the first one came from the root

00:08:10,330 --> 00:08:18,070
team and when the team did this when

00:08:16,150 --> 00:08:20,170
they did this integration they realized

00:08:18,070 --> 00:08:23,500
maybe we can provide this as a service

00:08:20,170 --> 00:08:25,750
for our users so that's what they did

00:08:23,500 --> 00:08:30,580
three years ago and they created Swan

00:08:25,750 --> 00:08:34,090
exactly for doing that and this is

00:08:30,580 --> 00:08:37,570
what's one is Swan is is a service that

00:08:34,090 --> 00:08:40,060
provides access on demand to notebooks

00:08:37,570 --> 00:08:43,090
so it's still powerful you still have

00:08:40,060 --> 00:08:45,670
access to to the root framework for

00:08:43,090 --> 00:08:47,250
analysis but this time you don't need to

00:08:45,670 --> 00:08:49,810
install it you don't need to configure

00:08:47,250 --> 00:08:52,870
because everything is available as a web

00:08:49,810 --> 00:08:55,180
service and since

00:08:52,870 --> 00:08:58,150
jupiter is such a powerful tool to

00:08:55,180 --> 00:09:01,390
provide easily shareable scientific

00:08:58,150 --> 00:09:02,890
results of course Swan is also a tool

00:09:01,390 --> 00:09:07,240
for doing the exact same thing because

00:09:02,890 --> 00:09:09,910
we are integrating Jupiter but as you

00:09:07,240 --> 00:09:15,100
can imagine we needed to provide a

00:09:09,910 --> 00:09:17,440
service that met our researchers needs

00:09:15,100 --> 00:09:20,589
so we had to integrate a lot of other

00:09:17,440 --> 00:09:24,520
tools for for them to access their

00:09:20,589 --> 00:09:26,770
software their data and of course the

00:09:24,520 --> 00:09:30,339
all the power that they need to perform

00:09:26,770 --> 00:09:34,240
their analysis and although this started

00:09:30,339 --> 00:09:37,240
as as a root side project we also

00:09:34,240 --> 00:09:39,960
integrate with other analysis ecosystems

00:09:37,240 --> 00:09:45,490
in our case the ones that matter to

00:09:39,960 --> 00:09:49,180
physics to the hep community getting

00:09:45,490 --> 00:09:53,290
back to the to the pipeline I said that

00:09:49,180 --> 00:09:55,390
the last step is an interactive step and

00:09:53,290 --> 00:09:58,450
as you can imagine this is the perfect

00:09:55,390 --> 00:10:00,850
fit for Jupiter and is actually where

00:09:58,450 --> 00:10:03,490
it's being used by a community so they

00:10:00,850 --> 00:10:09,300
are performing the analysis step with

00:10:03,490 --> 00:10:12,150
the help of Swan and Jupiter these are

00:10:09,300 --> 00:10:14,740
the three pillars of the service of

00:10:12,150 --> 00:10:18,130
course if you wanted to provide access

00:10:14,740 --> 00:10:20,620
to software and storage to to data we

00:10:18,130 --> 00:10:23,709
had to make some choices we looked

00:10:20,620 --> 00:10:27,430
around for tools to integrate in the

00:10:23,709 --> 00:10:30,870
service and what we realized was that we

00:10:27,430 --> 00:10:33,970
had so so much powerful tools in-house

00:10:30,870 --> 00:10:36,930
developed at CERN that were the tools

00:10:33,970 --> 00:10:40,600
already been used by our community so

00:10:36,930 --> 00:10:44,830
there was not a real choice here this

00:10:40,600 --> 00:10:47,920
had to be the the tools integrated in

00:10:44,830 --> 00:10:50,650
this in the service and I like to say

00:10:47,920 --> 00:10:52,029
that Swan is an integrator not only

00:10:50,650 --> 00:10:55,480
because it integrates all of these

00:10:52,029 --> 00:10:57,850
services across multiple departments but

00:10:55,480 --> 00:11:00,220
because it's also integrating teams at

00:10:57,850 --> 00:11:04,270
CERN and actually the storage team is

00:11:00,220 --> 00:11:05,709
one of the is the the team that took

00:11:04,270 --> 00:11:06,320
part in the project since the beginning

00:11:05,709 --> 00:11:10,670
with

00:11:06,320 --> 00:11:13,400
and from these three pillars you don't

00:11:10,670 --> 00:11:16,700
know two of them storage and software so

00:11:13,400 --> 00:11:19,100
I'd like to present them to you just a

00:11:16,700 --> 00:11:20,930
last note here all of these tools are

00:11:19,100 --> 00:11:23,540
open-source so these are our

00:11:20,930 --> 00:11:26,420
contribution to to the community so if

00:11:23,540 --> 00:11:31,100
you can if you want you might be able to

00:11:26,420 --> 00:11:34,670
use it in your own deployments but let's

00:11:31,100 --> 00:11:37,400
start with storage I mentioned that

00:11:34,670 --> 00:11:41,770
concern all the state is sort in what we

00:11:37,400 --> 00:11:44,420
call eros is our disk storage system so

00:11:41,770 --> 00:11:47,360
we decided to integrate it in Swan and

00:11:44,420 --> 00:11:49,970
by doing so all of experiments data are

00:11:47,360 --> 00:11:52,190
is already available to the users once

00:11:49,970 --> 00:11:55,790
they start their their sessions with

00:11:52,190 --> 00:11:59,330
Jupiter and one good thing our fields is

00:11:55,790 --> 00:12:01,490
that it also provides a user space so if

00:11:59,330 --> 00:12:03,230
you have a certain account you have a

00:12:01,490 --> 00:12:06,530
space where you can store all of your

00:12:03,230 --> 00:12:08,570
files usually work related files and

00:12:06,530 --> 00:12:11,630
there's a service called certain box

00:12:08,570 --> 00:12:15,140
which allows you to access this storage

00:12:11,630 --> 00:12:17,480
space and it's kind it's more or less

00:12:15,140 --> 00:12:20,360
like Dropbox okay but it's the one

00:12:17,480 --> 00:12:23,150
developed at CERN and it allows you to

00:12:20,360 --> 00:12:25,160
sync all of these files across devices

00:12:23,150 --> 00:12:28,400
so you can imagine you can start doing

00:12:25,160 --> 00:12:31,370
your analysis locally in your computer

00:12:28,400 --> 00:12:33,620
and then continue in Swan everything is

00:12:31,370 --> 00:12:37,610
synced you don't have to think much

00:12:33,620 --> 00:12:40,160
about it and it also provides a very

00:12:37,610 --> 00:12:42,770
interesting functionality that is

00:12:40,160 --> 00:12:47,090
sharing of course collaborative analysis

00:12:42,770 --> 00:12:53,510
is very important in our community but

00:12:47,090 --> 00:12:57,860
sorry just a second and then there's

00:12:53,510 --> 00:13:01,660
software again we have a tool at CERN

00:12:57,860 --> 00:13:04,430
called C VMFS this is a read-only

00:13:01,660 --> 00:13:06,970
distributed system that we use to

00:13:04,430 --> 00:13:11,510
distribute software across all of our

00:13:06,970 --> 00:13:14,570
equipments across our grid the worldwide

00:13:11,510 --> 00:13:18,050
grid that we have and inside the system

00:13:14,570 --> 00:13:19,730
we have what we call LCG releases what

00:13:18,050 --> 00:13:21,949
an LCD release is

00:13:19,730 --> 00:13:25,010
is basically a package where you put

00:13:21,949 --> 00:13:29,180
some software libraries with specific

00:13:25,010 --> 00:13:32,389
versions and we install them or the team

00:13:29,180 --> 00:13:35,389
that builds this system installs them

00:13:32,389 --> 00:13:37,130
and they guarantee that all of these

00:13:35,389 --> 00:13:40,220
packages are compatible with each other

00:13:37,130 --> 00:13:42,079
so when you select an LCG release when

00:13:40,220 --> 00:13:44,329
you're studying your session you get all

00:13:42,079 --> 00:13:47,649
of these hundreds of packages that come

00:13:44,329 --> 00:13:51,320
along these are the packages that our

00:13:47,649 --> 00:13:53,600
researchers are using so by doing so we

00:13:51,320 --> 00:13:55,699
already gave all the software that they

00:13:53,600 --> 00:13:58,850
need without having to think much about

00:13:55,699 --> 00:14:01,040
it and this also allowed us to reduce

00:13:58,850 --> 00:14:03,050
the docker images that we use because we

00:14:01,040 --> 00:14:06,130
are using docker for users and you can

00:14:03,050 --> 00:14:10,190
imagine that hundreds of packages is

00:14:06,130 --> 00:14:12,410
will produce gigantic docker images but

00:14:10,190 --> 00:14:16,519
we don't need to do it because they came

00:14:12,410 --> 00:14:18,649
they come from this service and it's

00:14:16,519 --> 00:14:20,990
important to mention that this is a lazy

00:14:18,649 --> 00:14:24,319
service so if you need only package a

00:14:20,990 --> 00:14:26,630
and B you only get back package a and B

00:14:24,319 --> 00:14:29,089
even though the stack has hundreds of

00:14:26,630 --> 00:14:31,130
packages but of course we have a lot of

00:14:29,089 --> 00:14:37,370
caching mechanisms to guarantee that

00:14:31,130 --> 00:14:40,160
this works well and so by doing this we

00:14:37,370 --> 00:14:42,769
are providing almost all the packages

00:14:40,160 --> 00:14:46,089
that our researchers need but we have

00:14:42,769 --> 00:14:48,620
multiple users power users that need

00:14:46,089 --> 00:14:52,880
personalization they need other packages

00:14:48,620 --> 00:14:55,190
that are not available so of course we

00:14:52,880 --> 00:14:57,949
provide a way for them to install these

00:14:55,190 --> 00:15:00,110
packages they can configure all of their

00:14:57,949 --> 00:15:02,779
environments they can when they install

00:15:00,110 --> 00:15:05,569
these software packages they get

00:15:02,779 --> 00:15:09,199
installed inside certain box so you even

00:15:05,569 --> 00:15:11,720
get this sync automatically for you so

00:15:09,199 --> 00:15:14,930
you still can't personalize all of this

00:15:11,720 --> 00:15:17,779
environment to your needs and a note

00:15:14,930 --> 00:15:18,970
here we are providing four kernels to

00:15:17,779 --> 00:15:22,550
our users

00:15:18,970 --> 00:15:25,490
peyten in version two or three depending

00:15:22,550 --> 00:15:27,740
on the stack that you choose we have

00:15:25,490 --> 00:15:31,069
also route C++ of course this was the

00:15:27,740 --> 00:15:33,280
the origin of this project then we have

00:15:31,069 --> 00:15:38,770
R and octave all of

00:15:33,280 --> 00:15:43,000
Kame come from c VMFS because that's

00:15:38,770 --> 00:15:46,000
where we install them this is the

00:15:43,000 --> 00:15:48,310
architecture of the service just so that

00:15:46,000 --> 00:15:53,110
you know that we are using jupiter hub

00:15:48,310 --> 00:15:56,230
and we are using docker to start user

00:15:53,110 --> 00:15:57,880
sessions and of course we need to

00:15:56,230 --> 00:16:00,100
integrate with the authentication

00:15:57,880 --> 00:16:03,370
services at CERN everything needs to be

00:16:00,100 --> 00:16:09,250
behind our SSO for security reasons and

00:16:03,370 --> 00:16:10,510
we provide all of these access to the to

00:16:09,250 --> 00:16:16,810
the infrastructure that I already

00:16:10,510 --> 00:16:20,500
mentioned and so we provided the service

00:16:16,810 --> 00:16:23,110
like this we put Jupiter on top of an

00:16:20,500 --> 00:16:26,020
infrastructure but then of course we

00:16:23,110 --> 00:16:28,270
thought we can go further and we can

00:16:26,020 --> 00:16:32,620
provide more functionality to our users

00:16:28,270 --> 00:16:36,430
and so we started by providing a new

00:16:32,620 --> 00:16:39,220
interface to them and we put on top a

00:16:36,430 --> 00:16:41,589
couple of extensions to give more

00:16:39,220 --> 00:16:43,900
functionalities and we have all kinds of

00:16:41,589 --> 00:16:46,300
extensions we have envy extensions

00:16:43,900 --> 00:16:50,820
server extensions and even kernel

00:16:46,300 --> 00:16:56,050
extensions this is how it looks like so

00:16:50,820 --> 00:16:58,120
in Jupiter the menu that you can we need

00:16:56,050 --> 00:17:01,480
to start your session you can select the

00:16:58,120 --> 00:17:03,010
software stacks or the C VMFS LCD

00:17:01,480 --> 00:17:06,550
release that I mentioned you choose it

00:17:03,010 --> 00:17:09,760
here you can also provide a startup

00:17:06,550 --> 00:17:13,480
script so you can do whatever you like

00:17:09,760 --> 00:17:17,290
to your session before Jupiter starts

00:17:13,480 --> 00:17:20,290
and there are other options of course

00:17:17,290 --> 00:17:23,020
but one interesting is that our users

00:17:20,290 --> 00:17:25,360
didn't didn't like to have to do

00:17:23,020 --> 00:17:27,310
multiple clicks so we provided them an

00:17:25,360 --> 00:17:29,710
easy way for them to start automatically

00:17:27,310 --> 00:17:31,480
with the default configuration or the

00:17:29,710 --> 00:17:34,090
previous selected configuration so

00:17:31,480 --> 00:17:39,940
that's what the little checkbox in the

00:17:34,090 --> 00:17:43,420
end is again how it looks like so if

00:17:39,940 --> 00:17:46,200
you're familiar with Jupiter you will

00:17:43,420 --> 00:17:46,200
recognize this

00:17:46,370 --> 00:17:55,850
but all of this personalization had a

00:17:50,380 --> 00:17:58,250
purpose as I mentioned collaborative

00:17:55,850 --> 00:18:01,880
analysis is very important at CERN no

00:17:58,250 --> 00:18:05,720
one works alone so they constantly need

00:18:01,880 --> 00:18:08,660
to share their work with a supervisor

00:18:05,720 --> 00:18:11,750
with a colleague with someone outside of

00:18:08,660 --> 00:18:13,970
CERN and so it was very important for us

00:18:11,750 --> 00:18:18,170
the sharing functionality and so we

00:18:13,970 --> 00:18:20,660
decided to bring it inside the Jupiter

00:18:18,170 --> 00:18:23,540
interface and now the users don't need

00:18:20,660 --> 00:18:26,960
to go and switch between certain box and

00:18:23,540 --> 00:18:29,990
and so on because they can share right

00:18:26,960 --> 00:18:33,890
from within the interface and when we

00:18:29,990 --> 00:18:36,410
did this we thought usually users share

00:18:33,890 --> 00:18:40,160
their notebooks of course but they only

00:18:36,410 --> 00:18:44,840
they also share input data they can

00:18:40,160 --> 00:18:47,990
share some pictures whatever they need

00:18:44,840 --> 00:18:50,600
for the project and so we decided to

00:18:47,990 --> 00:18:54,140
create what we call a project and a

00:18:50,600 --> 00:18:56,300
project is more or less like it's a

00:18:54,140 --> 00:18:58,780
special kind of folder let's say like

00:18:56,300 --> 00:19:02,450
this and it should be self-contained and

00:18:58,780 --> 00:19:05,330
this is the single unit of sharing that

00:19:02,450 --> 00:19:07,490
you can share from Swan so when you

00:19:05,330 --> 00:19:10,750
share something from Swan it needs to be

00:19:07,490 --> 00:19:14,750
inside a project it's a simple way of

00:19:10,750 --> 00:19:18,410
looking at this and it it simplifies the

00:19:14,750 --> 00:19:20,600
process for our researchers and of

00:19:18,410 --> 00:19:24,350
course when you share something with

00:19:20,600 --> 00:19:27,559
someone you can see what others share

00:19:24,350 --> 00:19:29,960
with you you can even open the shared

00:19:27,559 --> 00:19:33,170
projects and look inside look what files

00:19:29,960 --> 00:19:36,740
are there you can see notebooks in

00:19:33,170 --> 00:19:40,490
read-only mode and the idea here is that

00:19:36,740 --> 00:19:44,780
you know what is inside so that you can

00:19:40,490 --> 00:19:47,540
decide does this make sense to me can I

00:19:44,780 --> 00:19:51,140
work with this or do I need to work with

00:19:47,540 --> 00:19:54,710
this and this is because we provide

00:19:51,140 --> 00:19:57,830
users the ability to clone projects into

00:19:54,710 --> 00:20:00,710
their own user space so what they do is

00:19:57,830 --> 00:20:05,270
that they get a copy of this

00:20:00,710 --> 00:20:08,200
inside their own certain box and we we

00:20:05,270 --> 00:20:10,490
do this forcing a simple reason

00:20:08,200 --> 00:20:13,580
currently Jupiter doesn't allow

00:20:10,490 --> 00:20:16,130
concurrent editing so it's much safer

00:20:13,580 --> 00:20:20,000
for us to provide this functionality

00:20:16,130 --> 00:20:23,330
through a cloning mechanism than by

00:20:20,000 --> 00:20:29,480
sharing the folder with two people at

00:20:23,330 --> 00:20:37,280
the same time and again once we provided

00:20:29,480 --> 00:20:41,600
this our users liked it yes yes yes okay

00:20:37,280 --> 00:20:44,390
so we provided these new functionalities

00:20:41,600 --> 00:20:46,970
and of course our users wanted more in a

00:20:44,390 --> 00:20:49,669
particular department at CERN which is

00:20:46,970 --> 00:20:53,179
the beams department they are the ones

00:20:49,669 --> 00:20:56,950
that built the LHC and they are the ones

00:20:53,179 --> 00:21:00,110
that today operate this machine and what

00:20:56,950 --> 00:21:02,150
they do is that they collect logging

00:21:00,110 --> 00:21:06,500
information from all the devices across

00:21:02,150 --> 00:21:08,950
LHC and this is an interesting case

00:21:06,500 --> 00:21:13,010
because we're no longer talking about

00:21:08,950 --> 00:21:15,590
physics data the physics data that come

00:21:13,010 --> 00:21:19,760
out of the LHC but all of these logs

00:21:15,590 --> 00:21:22,340
that come out of the machine and they

00:21:19,760 --> 00:21:25,160
decided to adopt spark to process all of

00:21:22,340 --> 00:21:28,460
this data but they were missing a

00:21:25,160 --> 00:21:31,850
unified platform to do the analysis and

00:21:28,460 --> 00:21:35,360
so they came to us they asked us if we

00:21:31,850 --> 00:21:39,530
could provide such a platform and so we

00:21:35,360 --> 00:21:42,440
decided to integrate spark inside Swan

00:21:39,530 --> 00:21:45,130
so now you can access the the CERN

00:21:42,440 --> 00:21:49,549
cluster that we have right from within

00:21:45,130 --> 00:21:52,760
Swan and a very important thing here is

00:21:49,549 --> 00:21:55,940
that thanks to use and thanks to see

00:21:52,760 --> 00:22:00,080
VMFS you have the exact same environment

00:21:55,940 --> 00:22:03,110
both locally and in the cluster so if

00:22:00,080 --> 00:22:05,480
you have if you are working in your

00:22:03,110 --> 00:22:09,950
notebook you can try it locally and you

00:22:05,480 --> 00:22:12,770
know that it will run in in the spark

00:22:09,950 --> 00:22:14,150
cluster because it's the exact same

00:22:12,770 --> 00:22:17,960
environment even though

00:22:14,150 --> 00:22:19,340
these are completely decoupled but as

00:22:17,960 --> 00:22:22,100
you can imagine

00:22:19,340 --> 00:22:25,550
usually these jobs take a long time to

00:22:22,100 --> 00:22:27,920
to finish to produce results and this

00:22:25,550 --> 00:22:30,980
defeats the purpose of interactivity so

00:22:27,920 --> 00:22:33,440
we had to provide some tools that would

00:22:30,980 --> 00:22:35,870
give the users this interactivity that

00:22:33,440 --> 00:22:39,470
is common with Jupiter and so we

00:22:35,870 --> 00:22:43,430
developed two extensions for this the

00:22:39,470 --> 00:22:45,530
first one is the spark connector so you

00:22:43,430 --> 00:22:48,890
just need to click a button and you can

00:22:45,530 --> 00:22:51,500
configure all of your connection you can

00:22:48,890 --> 00:22:56,030
set all of the the properties that you

00:22:51,500 --> 00:22:59,090
need for spark you hit connect you get

00:22:56,030 --> 00:23:01,160
some animation with with the logs that

00:22:59,090 --> 00:23:03,890
are coming out of the cluster and then

00:23:01,160 --> 00:23:05,720
you are connected you are ready to go we

00:23:03,890 --> 00:23:08,090
export this into the notebook with

00:23:05,720 --> 00:23:10,190
export spark into the notebook and so

00:23:08,090 --> 00:23:13,940
you can start writing your analysis

00:23:10,190 --> 00:23:16,220
without doing anything else and when you

00:23:13,940 --> 00:23:18,500
do so when you write your analysis and

00:23:16,220 --> 00:23:23,270
you submit the analysis to the cluster

00:23:18,500 --> 00:23:26,270
you get this this is a mooring

00:23:23,270 --> 00:23:28,130
monitoring tool that appears

00:23:26,270 --> 00:23:31,490
automatically below the cell that you

00:23:28,130 --> 00:23:34,190
run and it allows you to see all the

00:23:31,490 --> 00:23:36,650
progress bars for the jobs that were

00:23:34,190 --> 00:23:39,440
created and you can even see the task

00:23:36,650 --> 00:23:43,100
timeline and you can see the resources

00:23:39,440 --> 00:23:45,620
that we are using and this last one is

00:23:43,100 --> 00:23:48,470
very important because by looking into

00:23:45,620 --> 00:23:50,270
this you can see if you are taking

00:23:48,470 --> 00:23:55,400
advantage or not of all the resources

00:23:50,270 --> 00:23:58,220
that were allocated to you and an

00:23:55,400 --> 00:24:02,630
interesting thing of this is that this

00:23:58,220 --> 00:24:05,030
became the it started as a google Summer

00:24:02,630 --> 00:24:08,600
of Code project at CERN we are an

00:24:05,030 --> 00:24:11,360
umbrella organization of jisuk and this

00:24:08,600 --> 00:24:16,330
is one of the many successful projects

00:24:11,360 --> 00:24:19,760
that we have each year so successful

00:24:16,330 --> 00:24:22,340
actually that we decided to create

00:24:19,760 --> 00:24:24,620
something similar this year and so we

00:24:22,340 --> 00:24:28,180
thought about providing access to our

00:24:24,620 --> 00:24:28,180
batch servers

00:24:28,280 --> 00:24:34,490
we have what we call the W LCG this is

00:24:31,520 --> 00:24:38,120
the worldwide LHC computing grid it's a

00:24:34,490 --> 00:24:42,140
worldwide grid that gives enormous

00:24:38,120 --> 00:24:46,490
amounts of storage and processing power

00:24:42,140 --> 00:24:50,090
and our users are used to to submit jobs

00:24:46,490 --> 00:24:54,110
here so it made perfect sense that we

00:24:50,090 --> 00:24:56,960
allowed them to submit their jobs from

00:24:54,110 --> 00:24:59,570
Swan just like they submit jobs to spark

00:24:56,960 --> 00:25:02,540
and so this year again as a g-shock

00:24:59,570 --> 00:25:07,370
project we started building the

00:25:02,540 --> 00:25:09,980
integration of of batch inside the the

00:25:07,370 --> 00:25:11,360
Jupiter interface and we did the same

00:25:09,980 --> 00:25:13,760
thing as park and we created some

00:25:11,360 --> 00:25:18,620
monitoring tools for you to see what is

00:25:13,760 --> 00:25:20,510
happening in the background and if you

00:25:18,620 --> 00:25:24,320
look again at the the pipeline that I

00:25:20,510 --> 00:25:27,080
already showed you you can imagine that

00:25:24,320 --> 00:25:29,270
with this new high luminosity LHC it

00:25:27,080 --> 00:25:33,130
will be very important for us to provide

00:25:29,270 --> 00:25:35,960
access to these enormous resources

00:25:33,130 --> 00:25:38,510
because they will need them to to

00:25:35,960 --> 00:25:41,690
provide the analysis that they do but it

00:25:38,510 --> 00:25:45,770
also means that we can can go a bit back

00:25:41,690 --> 00:25:48,590
in the pipeline and use one for the the

00:25:45,770 --> 00:25:50,870
processing stage that we have the stage

00:25:48,590 --> 00:25:56,840
where the research has produced the

00:25:50,870 --> 00:26:00,470
analysis datasets another thing that I

00:25:56,840 --> 00:26:02,980
would like to talk is education it's

00:26:00,470 --> 00:26:07,190
part of certains mission education and

00:26:02,980 --> 00:26:09,200
we have a lot of programs each year we

00:26:07,190 --> 00:26:11,360
just had in the last three months our

00:26:09,200 --> 00:26:14,150
summer students we have them every year

00:26:11,360 --> 00:26:17,270
at CERN but we also have tutorials all

00:26:14,150 --> 00:26:20,480
year both at CERN and spread across the

00:26:17,270 --> 00:26:24,350
world we have a lot of PhD students that

00:26:20,480 --> 00:26:26,630
work at CERN and as you can imagine

00:26:24,350 --> 00:26:29,000
Jupiter is such a powerful tool for this

00:26:26,630 --> 00:26:32,020
that we decide to adopt Jupiter

00:26:29,000 --> 00:26:35,150
extensively for these activities and

00:26:32,020 --> 00:26:37,550
we're even going a bit further and we

00:26:35,150 --> 00:26:39,980
have a new European project European

00:26:37,550 --> 00:26:41,350
funded project that is called up to

00:26:39,980 --> 00:26:44,350
university and

00:26:41,350 --> 00:26:46,299
the idea of this project is to bridge

00:26:44,350 --> 00:26:50,259
the gap between higher education and

00:26:46,299 --> 00:26:53,250
university so we aim to bring the tools

00:26:50,259 --> 00:26:55,809
that we provide researchers and to

00:26:53,250 --> 00:26:57,669
university students back to higher

00:26:55,809 --> 00:27:01,899
education for the students to start

00:26:57,669 --> 00:27:04,480
learning with those tools and when I

00:27:01,899 --> 00:27:06,669
mentioned when I say Swan it's the full

00:27:04,480 --> 00:27:10,960
Swan so all the software packages that

00:27:06,669 --> 00:27:15,549
the researchers have access to Yosi VMFS

00:27:10,960 --> 00:27:18,970
everything comes along just a brief

00:27:15,549 --> 00:27:23,379
mention about our users we have around

00:27:18,970 --> 00:27:25,379
200 daily users it more or less doubled

00:27:23,379 --> 00:27:28,389
since we deployed the new interface

00:27:25,379 --> 00:27:31,929
we're also seeing growing numbers with

00:27:28,389 --> 00:27:34,809
when we start deploying spark which was

00:27:31,929 --> 00:27:38,440
a couple of months ago and we also see

00:27:34,809 --> 00:27:40,750
an enormous increase in India when we

00:27:38,440 --> 00:27:42,549
have courses and tutorials many times

00:27:40,750 --> 00:27:46,450
you don't even know that someone planned

00:27:42,549 --> 00:27:48,100
a tutorial that uses Swan but when we

00:27:46,450 --> 00:27:54,700
look at the numbers we understand what

00:27:48,100 --> 00:27:56,950
is happening and our communities very

00:27:54,700 --> 00:27:59,409
important to us because it's this

00:27:56,950 --> 00:28:03,159
community that is helping us shape what

00:27:59,409 --> 00:28:05,110
Swan is I mentioned the example of the

00:28:03,159 --> 00:28:08,110
beams apartments but there are others

00:28:05,110 --> 00:28:10,299
and they usually come to us they asked

00:28:08,110 --> 00:28:13,450
us for functionality we work with them

00:28:10,299 --> 00:28:16,480
to to make to integrate these

00:28:13,450 --> 00:28:19,360
functionalities inside Swan and in the

00:28:16,480 --> 00:28:22,120
end we have the abbot of creating

00:28:19,360 --> 00:28:24,009
notebooks that exemplify how you can use

00:28:22,120 --> 00:28:27,610
these functionalities so if you go to

00:28:24,009 --> 00:28:30,580
CERN dot C dot CH slash Swan you can see

00:28:27,610 --> 00:28:34,629
almost 50 notebooks that exemplify how

00:28:30,580 --> 00:28:39,279
to use Swan and most of them with

00:28:34,629 --> 00:28:42,460
related to physics but let's look ahead

00:28:39,279 --> 00:28:46,149
and this is what we're planning to do

00:28:42,460 --> 00:28:48,269
with the platform the first thing is to

00:28:46,149 --> 00:28:51,429
move to Jupiter lab as you can imagine

00:28:48,269 --> 00:28:53,580
many of our users need more powerful

00:28:51,429 --> 00:28:55,620
tools than what

00:28:53,580 --> 00:28:58,170
the traditional notebook can provide and

00:28:55,620 --> 00:29:01,440
we think this will be a way for to

00:28:58,170 --> 00:29:06,990
attract these users that don't see Swan

00:29:01,440 --> 00:29:09,630
as a useful tool for them and of course

00:29:06,990 --> 00:29:14,160
this means that we will have to port all

00:29:09,630 --> 00:29:18,360
of our extensions and but it's part of

00:29:14,160 --> 00:29:21,450
the job right and then of course we also

00:29:18,360 --> 00:29:23,840
want to investigate a new architecture

00:29:21,450 --> 00:29:28,170
for the service we are studying the

00:29:23,840 --> 00:29:31,920
adoption of kubernetes we also studying

00:29:28,170 --> 00:29:33,810
the usage of GPUs because the the head

00:29:31,920 --> 00:29:36,360
community is now looking more and more

00:29:33,810 --> 00:29:39,660
to machine learning and we need to

00:29:36,360 --> 00:29:43,650
provide them GPUs because these are the

00:29:39,660 --> 00:29:47,820
what brings some speed to their analysis

00:29:43,650 --> 00:29:50,790
and lastly I already mentioned this we

00:29:47,820 --> 00:29:52,950
are moving ahead with LHC we are

00:29:50,790 --> 00:29:55,410
bringing the new high luminosity and

00:29:52,950 --> 00:29:59,700
this brings a lot of new challenges that

00:29:55,410 --> 00:30:03,480
we need to to solve and I think this one

00:29:59,700 --> 00:30:06,660
is getting ready for for them if you

00:30:03,480 --> 00:30:10,170
want to find us these are our contacts

00:30:06,660 --> 00:30:13,890
our email our websites most of our code

00:30:10,170 --> 00:30:16,560
is public not all of it as of today but

00:30:13,890 --> 00:30:19,410
we are working to make this available

00:30:16,560 --> 00:30:22,230
and we also have what we call science

00:30:19,410 --> 00:30:25,680
box this is what we use in that European

00:30:22,230 --> 00:30:29,760
project call up tube so we containerize

00:30:25,680 --> 00:30:32,760
all of our services and you can access

00:30:29,760 --> 00:30:34,290
and deploy them using communities or

00:30:32,760 --> 00:30:37,650
docker compose in your own

00:30:34,290 --> 00:30:40,440
infrastructure or in your own computer

00:30:37,650 --> 00:30:42,120
to try it but just a heads up here

00:30:40,440 --> 00:30:44,880
all of these new interface and

00:30:42,120 --> 00:30:48,360
functionalities they are still not there

00:30:44,880 --> 00:30:51,120
so this is a bit behind our production

00:30:48,360 --> 00:30:53,790
environment we are working to to bring

00:30:51,120 --> 00:30:58,440
them into this containerized version

00:30:53,790 --> 00:31:03,060
hopefully in the next months just to

00:30:58,440 --> 00:31:06,750
finish what I think you should take from

00:31:03,060 --> 00:31:07,290
this presentation is that we did a lot

00:31:06,750 --> 00:31:10,470
of

00:31:07,290 --> 00:31:14,550
integration with Jupiter we are really

00:31:10,470 --> 00:31:16,680
providing Jupiter notebooks on top of

00:31:14,550 --> 00:31:18,720
our infrastructure and by doing so we

00:31:16,680 --> 00:31:21,450
are boosting the productivity of some of

00:31:18,720 --> 00:31:26,700
our researchers and we're giving them

00:31:21,450 --> 00:31:28,730
access to this sink storage software

00:31:26,700 --> 00:31:32,640
everything without the need of

00:31:28,730 --> 00:31:35,880
configuration and installation I also

00:31:32,640 --> 00:31:38,670
want you to remember that Jupiter is

00:31:35,880 --> 00:31:41,280
very important for us in education we

00:31:38,670 --> 00:31:44,940
have a lot of programs and we use it

00:31:41,280 --> 00:31:47,160
extensively and something that

00:31:44,940 --> 00:31:50,340
summarizes all of this is that Jupiter

00:31:47,160 --> 00:31:53,130
is becoming an entry point for all of

00:31:50,340 --> 00:31:55,950
these massive resources that CERN has so

00:31:53,130 --> 00:31:58,290
they have other entry points as of today

00:31:55,950 --> 00:32:01,830
but Swan is becoming a very important

00:31:58,290 --> 00:32:04,380
entry point for this and lastly of

00:32:01,830 --> 00:32:08,070
course there are things that we need

00:32:04,380 --> 00:32:10,800
that need improvements and one of of it

00:32:08,070 --> 00:32:14,420
is to provide more powerful tools and we

00:32:10,800 --> 00:32:17,670
think that Jupiter lab might help and so

00:32:14,420 --> 00:32:19,590
this ends my presentation I think we

00:32:17,670 --> 00:32:22,720
still have time for some questions I

00:32:19,590 --> 00:32:30,769
hope you're not bored to death

00:32:22,720 --> 00:32:30,769
[Applause]

00:32:54,720 --> 00:33:03,130
so root is mainly C++ but it has

00:32:59,770 --> 00:33:05,890
automatic bindings with button so it

00:33:03,130 --> 00:33:08,770
also you can also do your analysis in

00:33:05,890 --> 00:33:12,970
Python using root and that's how we

00:33:08,770 --> 00:33:52,090
integrated the kernel uses Python to

00:33:12,970 --> 00:33:55,450
connect to the root yes yeah as of today

00:33:52,090 --> 00:33:59,110
it's a very simple service so you share

00:33:55,450 --> 00:34:01,240
it you clone it and if you can't want to

00:33:59,110 --> 00:34:03,970
get back to the original owner you need

00:34:01,240 --> 00:34:09,240
to share it again so for now we don't

00:34:03,970 --> 00:34:09,240
have any other way of doing things

00:34:19,040 --> 00:34:24,770
it's run inside the kernel in part sorry

00:34:22,849 --> 00:34:29,780
it's running inside docker container

00:34:24,770 --> 00:34:33,169
that we spawn we have machines dedicated

00:34:29,780 --> 00:34:42,399
to Swan so they have they provide the

00:34:33,169 --> 00:34:44,960
the compute power to I'm not sure but

00:34:42,399 --> 00:34:48,770
what I imagine is that they submit these

00:34:44,960 --> 00:34:51,290
bad jobs into the grid come into the

00:34:48,770 --> 00:34:53,419
grid there they can submit and do

00:34:51,290 --> 00:34:56,179
whatever they like and actually yes we

00:34:53,419 --> 00:34:59,119
have what we call LX plus it's a you can

00:34:56,179 --> 00:35:01,400
do it's a terminal you can do whatever

00:34:59,119 --> 00:35:12,470
you like and it also provides computing

00:35:01,400 --> 00:35:15,470
power this is something new spark so

00:35:12,470 --> 00:35:17,210
they are not used to use park they are

00:35:15,470 --> 00:35:22,490
starting to use it now but yes they can

00:35:17,210 --> 00:35:25,430
use the command line to submit spark

00:35:22,490 --> 00:35:29,510
jobs and they use this LX plus that I

00:35:25,430 --> 00:35:31,609
mentioned but now they're migrating into

00:35:29,510 --> 00:35:56,630
swarm because it's simple for them to to

00:35:31,609 --> 00:36:00,050
use in our case we do this because it's

00:35:56,630 --> 00:36:02,630
our service it's our machines we know we

00:36:00,050 --> 00:36:05,560
configured them so we control this

00:36:02,630 --> 00:36:08,990
environment if they want to use Jupiter

00:36:05,560 --> 00:36:12,460
they can still use Jupiter but not Swan

00:36:08,990 --> 00:36:12,460
Swan is the service that we provide

00:36:19,579 --> 00:36:26,430
they have that in the best service yes

00:36:22,890 --> 00:36:28,680
and that's what we integrated into Swan

00:36:26,430 --> 00:36:39,900
you submit your job and gets scheduled

00:36:28,680 --> 00:36:43,319
yes sorry I am I assume so I am NOT an

00:36:39,900 --> 00:36:51,569
expert in this batch system but I assume

00:36:43,319 --> 00:36:55,020
they can do it yes everything that is

00:36:51,569 --> 00:36:57,900
producing these batch jobs it's written

00:36:55,020 --> 00:36:59,730
in two years so you can just look at the

00:36:57,900 --> 00:37:02,520
logs that are produced there and

00:36:59,730 --> 00:37:05,760
actually that's a way users get their

00:37:02,520 --> 00:37:08,490
results I look into the files created in

00:37:05,760 --> 00:37:12,480
u.s. to see the results and we are

00:37:08,490 --> 00:37:16,079
trying to bridge it to bridge this gap

00:37:12,480 --> 00:37:36,240
and make them available writing in swamp

00:37:16,079 --> 00:37:39,529
in the notebook yes so basically now

00:37:36,240 --> 00:37:42,240
what we have with kubernetes is this

00:37:39,529 --> 00:37:45,480
docker I'd this version that we have

00:37:42,240 --> 00:37:48,960
this Science Box version and yes we have

00:37:45,480 --> 00:37:50,369
it's a way of spawning user sessions we

00:37:48,960 --> 00:37:52,920
have containers for each of these

00:37:50,369 --> 00:37:55,170
components and we have you can create

00:37:52,920 --> 00:37:56,549
for example in our pilot for up to you

00:37:55,170 --> 00:37:59,880
have two machines where you can start

00:37:56,549 --> 00:38:02,789
your session this is how its it is today

00:37:59,880 --> 00:38:05,339
but we are still investigating what we

00:38:02,789 --> 00:38:10,190
should do next something that we thought

00:38:05,339 --> 00:38:13,260
was to deploy only the kernel itself in

00:38:10,190 --> 00:38:18,920
externally and access it but it's still

00:38:13,260 --> 00:38:18,920
not set in stone as up to date

00:38:42,090 --> 00:38:47,100
okay so as you can imagine CERN has

00:38:44,700 --> 00:38:50,670
massive resources so of course we

00:38:47,100 --> 00:38:53,700
provide centrally logging systems

00:38:50,670 --> 00:38:56,820
centrally IT provides this for us so

00:38:53,700 --> 00:38:59,520
every machine that we run we have an

00:38:56,820 --> 00:39:01,890
orchestration system which is puppet and

00:38:59,520 --> 00:39:05,720
we deploy these services using puppet in

00:39:01,890 --> 00:39:09,780
by doing so all of this functionality

00:39:05,720 --> 00:39:12,360
comes along because it's mandatory for

00:39:09,780 --> 00:39:14,730
services that run at CERN so that's how

00:39:12,360 --> 00:39:16,430
we get all of these information and of

00:39:14,730 --> 00:39:20,700
course we have a system where you can

00:39:16,430 --> 00:39:23,580
set maintenance schedules everything so

00:39:20,700 --> 00:39:26,460
it's a ticketing service so when our

00:39:23,580 --> 00:39:28,200
users created ticket because something

00:39:26,460 --> 00:39:30,420
is not working there is someone that

00:39:28,200 --> 00:39:32,610
will direct them and show them this is

00:39:30,420 --> 00:39:35,580
downtime this is what this was

00:39:32,610 --> 00:39:40,880
programmed so everything is fine you

00:39:35,580 --> 00:39:40,880
just need to to use something else yeah

00:39:43,520 --> 00:40:02,460
yeah maybe yes that's actually we had a

00:39:57,600 --> 00:40:04,860
visit of a person from Jupiter Tim they

00:40:02,460 --> 00:40:07,380
came to CERN and that's that was the

00:40:04,860 --> 00:40:10,020
first question that she made me don't

00:40:07,380 --> 00:40:14,520
you use get for this and the answer is

00:40:10,020 --> 00:40:19,260
no and actually many of our users don't

00:40:14,520 --> 00:40:21,570
even know what it is and also we don't

00:40:19,260 --> 00:40:24,030
have any tool that allows them to do

00:40:21,570 --> 00:40:24,980
this in an in a easy way of course they

00:40:24,030 --> 00:40:27,270
can use it

00:40:24,980 --> 00:40:30,720
Jupiter provides the terminal so they

00:40:27,270 --> 00:40:33,000
can of course use it to do it but we

00:40:30,720 --> 00:40:35,490
don't provide a graphical way of doing

00:40:33,000 --> 00:40:39,240
it but that's one of the features that

00:40:35,490 --> 00:40:41,430
we are looking and that's why i say that

00:40:39,240 --> 00:40:43,740
jupiter loud provides such a more

00:40:41,430 --> 00:40:47,100
powerful environment because all of

00:40:43,740 --> 00:40:49,560
these tools are coming along and it

00:40:47,100 --> 00:40:51,980
enriches the all of the experience for

00:40:49,560 --> 00:40:51,980
the users

00:41:37,710 --> 00:41:44,380
so when the librarians install these

00:41:42,220 --> 00:41:48,450
packages they install four different

00:41:44,380 --> 00:41:52,150
environments and when you want to use

00:41:48,450 --> 00:41:54,730
comf s to load all of these packages you

00:41:52,150 --> 00:41:57,940
need to source a file that installs and

00:41:54,730 --> 00:42:01,810
configures all the environments right

00:41:57,940 --> 00:42:04,119
and if you choose the correct system you

00:42:01,810 --> 00:42:06,310
get all the packages that were solve for

00:42:04,119 --> 00:42:10,600
that system but actually I'm not sure

00:42:06,310 --> 00:42:18,000
that we provide that for Windows but you

00:42:10,600 --> 00:42:18,000
have many options of Linux environments

00:42:33,740 --> 00:42:39,290
so the resources that we provide to each

00:42:36,410 --> 00:42:41,810
user it's actually an option that we

00:42:39,290 --> 00:42:43,880
have in in the setup menu so they can

00:42:41,810 --> 00:42:49,250
choose between 8 and 10 gigs of memory

00:42:43,880 --> 00:42:54,830
and a couple of processor number of

00:42:49,250 --> 00:42:56,180
course options from 2 to 8 I think so

00:42:54,830 --> 00:42:59,480
in the end if they need them more

00:42:56,180 --> 00:43:01,940
powerful environment they use the grid

00:42:59,480 --> 00:43:04,130
and that's why we want to integrate it

00:43:01,940 --> 00:43:06,260
with with which one because we don't

00:43:04,130 --> 00:43:08,480
have resources to provide them all this

00:43:06,260 --> 00:43:10,790
power in our service and they already

00:43:08,480 --> 00:43:16,210
exist so we just give them access to

00:43:10,790 --> 00:43:20,359
these resources and that's it ok and

00:43:16,210 --> 00:43:21,020
it's probably out of time thank you so

00:43:20,359 --> 00:43:25,579
much

00:43:21,020 --> 00:43:25,579

YouTube URL: https://www.youtube.com/watch?v=TDp_XlgtpDA


