Title: How to be API-centric and microservice friendly with Asanka Abeysinghe (WSO2)
Publication date: 2019-02-12
Playlist: O'Reilly Software Architecture Conference 2019 - New York, New York
Description: 
	Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:00,000 --> 00:00:04,589
Roger McGough is here vice-president of

00:00:02,070 --> 00:00:07,589
radar at O'Reilly I'm here at software

00:00:04,589 --> 00:00:09,719
architecture 2019 in New York City and

00:00:07,589 --> 00:00:12,269
I'm here with a sink a base sink huh

00:00:09,719 --> 00:00:15,599
whose VP of architecture at wso -

00:00:12,269 --> 00:00:17,670
welcome hi Roger and we're here to talk

00:00:15,599 --> 00:00:20,070
about your products and specifically

00:00:17,670 --> 00:00:21,900
that what's the motivation behind your

00:00:20,070 --> 00:00:24,330
new reference architecture that you come

00:00:21,900 --> 00:00:26,070
up with yes I just finished my talk and

00:00:24,330 --> 00:00:28,019
then got a really good turnaround as

00:00:26,070 --> 00:00:30,810
well so the motivation behind the

00:00:28,019 --> 00:00:32,340
service architecture Roger like like we

00:00:30,810 --> 00:00:35,070
are there in the industry for a while

00:00:32,340 --> 00:00:37,950
now and personally helping architects

00:00:35,070 --> 00:00:40,230
for more than 20 years so we identify

00:00:37,950 --> 00:00:42,989
there's a gap in between the reference

00:00:40,230 --> 00:00:45,390
architectures available and what market

00:00:42,989 --> 00:00:47,129
is looking at so to fill that gap we

00:00:45,390 --> 00:00:50,370
thought of come up with a more pragmatic

00:00:47,129 --> 00:00:53,610
approach and then propose something for

00:00:50,370 --> 00:00:55,110
the that works for the micro services

00:00:53,610 --> 00:00:57,570
architecture container native

00:00:55,110 --> 00:01:00,329
architecture as well as which can link

00:00:57,570 --> 00:01:03,420
to the legacy systems and data that we

00:01:00,329 --> 00:01:05,309
had for a while and helping us to build

00:01:03,420 --> 00:01:07,130
different systems that's great we

00:01:05,309 --> 00:01:10,460
certainly see at our own data the

00:01:07,130 --> 00:01:13,040
adoption of micro services and

00:01:10,460 --> 00:01:16,860
containers orchestration and all that

00:01:13,040 --> 00:01:19,229
together so what is the the kind of

00:01:16,860 --> 00:01:22,700
evolution of the enterprise architecture

00:01:19,229 --> 00:01:24,750
I mean like layered segmented to

00:01:22,700 --> 00:01:27,390
decentralize approach that you guys do

00:01:24,750 --> 00:01:29,850
yeah so that's what we are finding so

00:01:27,390 --> 00:01:32,610
traditionally we were using layered

00:01:29,850 --> 00:01:34,220
architecture and I think still VI using

00:01:32,610 --> 00:01:37,290
layered architecture in many systems

00:01:34,220 --> 00:01:40,020
with the micro services coming into the

00:01:37,290 --> 00:01:42,810
picture things are moving more towards a

00:01:40,020 --> 00:01:45,509
segmentation but it can't optimize

00:01:42,810 --> 00:01:48,030
the micro services approach as well as

00:01:45,509 --> 00:01:50,430
how you can utilize a containers so and

00:01:48,030 --> 00:01:53,009
so forth so that's where we were looking

00:01:50,430 --> 00:01:55,470
for something properly fit into these

00:01:53,009 --> 00:01:57,240
technologies as well as the architecture

00:01:55,470 --> 00:01:59,790
approach that's where the cell base

00:01:57,240 --> 00:02:02,520
architecture we introduced by using

00:01:59,790 --> 00:02:04,320
different concepts like the

00:02:02,520 --> 00:02:05,969
the sales are coming from the biological

00:02:04,320 --> 00:02:08,039
world and we thought that's a really

00:02:05,969 --> 00:02:10,590
good way to represent the enterprise

00:02:08,039 --> 00:02:14,010
architecture so that's what we see as

00:02:10,590 --> 00:02:16,410
the evolution that the the people are

00:02:14,010 --> 00:02:19,650
moving to more agile approach and then

00:02:16,410 --> 00:02:21,900
small teams and how you can be purely a

00:02:19,650 --> 00:02:25,110
child and utilize these new technologies

00:02:21,900 --> 00:02:28,080
is the key the thing that we see how the

00:02:25,110 --> 00:02:30,750
the architecture is moving I would say

00:02:28,080 --> 00:02:33,360
moving to the right and then helping

00:02:30,750 --> 00:02:35,310
these development teams okay how does

00:02:33,360 --> 00:02:40,590
the cell based architecture connect to

00:02:35,310 --> 00:02:43,110
micro services yeah so the fundamental

00:02:40,590 --> 00:02:45,329
of the the service architecture is a

00:02:43,110 --> 00:02:47,400
component or the atomic unit of the

00:02:45,329 --> 00:02:50,040
service architecture is a component the

00:02:47,400 --> 00:02:52,950
component can be a micro service so a

00:02:50,040 --> 00:02:55,769
cell contains many micro services and

00:02:52,950 --> 00:02:58,799
then the functionality exposed as API

00:02:55,769 --> 00:03:01,530
that we call the cell gateway or the

00:02:58,799 --> 00:03:04,049
edge gateway so it's a API centric and

00:03:01,530 --> 00:03:05,730
micro services friendly so that way the

00:03:04,049 --> 00:03:08,190
architects and the developers they can

00:03:05,730 --> 00:03:10,019
categorize the micro services and then

00:03:08,190 --> 00:03:12,389
have proper governance because now you

00:03:10,019 --> 00:03:14,280
have a standard API to access this

00:03:12,389 --> 00:03:16,889
functionality and then have the

00:03:14,280 --> 00:03:19,620
dependency management observability all

00:03:16,889 --> 00:03:21,269
these necessary Enterprise Architecture

00:03:19,620 --> 00:03:23,190
level features can be can be

00:03:21,269 --> 00:03:24,959
incorporated into the Microsoft Azure

00:03:23,190 --> 00:03:28,230
collection so what are the kind of API

00:03:24,959 --> 00:03:30,000
options is this a grass-based yeah so

00:03:28,230 --> 00:03:34,040
personally I believe there are two types

00:03:30,000 --> 00:03:37,739
of aps push and pull so if it is a pull

00:03:34,040 --> 00:03:41,160
API then you can use restful by using

00:03:37,739 --> 00:03:43,709
HTTP or G RPC then if it is a push API

00:03:41,160 --> 00:03:47,099
then two types like events and streams

00:03:43,709 --> 00:03:49,980
so you can use AMQP and q TT or Kafka

00:03:47,099 --> 00:03:52,290
kind of different protocols to access it

00:03:49,980 --> 00:03:54,810
so that what kind of a variety of APs

00:03:52,290 --> 00:03:57,560
can be there to facilitate the API layer

00:03:54,810 --> 00:03:59,819
depending on the application exactly so

00:03:57,560 --> 00:04:01,470
this new architecture something's

00:03:59,819 --> 00:04:03,269
driving it and I think that what's

00:04:01,470 --> 00:04:04,980
driving it is the kind of digital

00:04:03,269 --> 00:04:07,830
transformation and

00:04:04,980 --> 00:04:10,739
and more digital organizations you can

00:04:07,830 --> 00:04:13,050
talk about what the impact is yeah yeah

00:04:10,739 --> 00:04:14,819
so the business impact is the digital

00:04:13,050 --> 00:04:17,430
transformation and the digital products

00:04:14,819 --> 00:04:19,260
or the business stakeholders they are

00:04:17,430 --> 00:04:21,840
pushing the technical teams to provide

00:04:19,260 --> 00:04:23,970
more and more digital experience for the

00:04:21,840 --> 00:04:25,620
end users so that's we are the rapid

00:04:23,970 --> 00:04:27,479
application development shorter

00:04:25,620 --> 00:04:30,570
development lifecycle coming into the

00:04:27,479 --> 00:04:32,790
picture to facilitate that having a

00:04:30,570 --> 00:04:35,700
proper decentralized architecture helps

00:04:32,790 --> 00:04:38,040
so the development teams can be more

00:04:35,700 --> 00:04:40,290
productive and then provide and release

00:04:38,040 --> 00:04:42,180
whatever the business is expecting in a

00:04:40,290 --> 00:04:43,639
short time period so that's why it

00:04:42,180 --> 00:04:45,960
connects with the digital transformation

00:04:43,639 --> 00:04:47,160
mm-hmm so what does it take for a

00:04:45,960 --> 00:04:49,770
company to make the sell based

00:04:47,160 --> 00:04:52,080
architecture reality yeah so the two

00:04:49,770 --> 00:04:54,720
approaches actually so we are working on

00:04:52,080 --> 00:04:56,669
a framework that you can build in number

00:04:54,720 --> 00:04:59,310
of reference implementation from the

00:04:56,669 --> 00:05:00,960
service architecture but having said

00:04:59,310 --> 00:05:04,800
that you don't need to wait for that

00:05:00,960 --> 00:05:07,740
framework we can script it using no

00:05:04,800 --> 00:05:10,080
infrastructure as a code technique like

00:05:07,740 --> 00:05:12,660
papad share for whatever that we use and

00:05:10,080 --> 00:05:14,520
then based on the target infrastructure

00:05:12,660 --> 00:05:17,520
layer you can implement a base

00:05:14,520 --> 00:05:20,280
architecture and we are here to help as

00:05:17,520 --> 00:05:22,800
well as a consultant so we can provide

00:05:20,280 --> 00:05:24,660
help for the enterprises to build so

00:05:22,800 --> 00:05:25,919
this architecture that's great well

00:05:24,660 --> 00:05:28,669
thanks for your time today

00:05:25,919 --> 00:05:28,669

YouTube URL: https://www.youtube.com/watch?v=myPEzaLxN_M


