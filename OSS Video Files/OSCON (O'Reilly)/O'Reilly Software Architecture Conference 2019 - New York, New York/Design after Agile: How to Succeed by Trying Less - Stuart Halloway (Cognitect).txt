Title: Design after Agile: How to Succeed by Trying Less - Stuart Halloway (Cognitect)
Publication date: 2019-02-06
Playlist: O'Reilly Software Architecture Conference 2019 - New York, New York
Description: 
	Without design, Agile methods will founder when they encounter novel problems. Stuart Halloway explains how to augment agility with some principles for designing systems.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:00,030 --> 00:00:04,110
so what do you do when you're taking

00:00:01,709 --> 00:00:07,350
things apart I'm going to look at

00:00:04,110 --> 00:00:09,090
several examples of activities that are

00:00:07,350 --> 00:00:11,190
helpful in taking apart problems and

00:00:09,090 --> 00:00:16,650
taking apart solutions the first one is

00:00:11,190 --> 00:00:20,490
make diagrams diagrams got a bad name

00:00:16,650 --> 00:00:22,230
because of UML and UML has a lot of

00:00:20,490 --> 00:00:26,699
problems this is the sort of class

00:00:22,230 --> 00:00:28,590
hierarchy for UML so you see behavior

00:00:26,699 --> 00:00:30,720
diagrams on one side and structure

00:00:28,590 --> 00:00:32,340
diagrams on another and inside behavior

00:00:30,720 --> 00:00:35,100
diagrams you could have use cases or

00:00:32,340 --> 00:00:38,070
timing or what-have-you and the problem

00:00:35,100 --> 00:00:40,500
with this siloing is it's like static

00:00:38,070 --> 00:00:43,290
typing for diagrams your diagram can be

00:00:40,500 --> 00:00:45,210
of this or that or the other thing and

00:00:43,290 --> 00:00:47,039
basically what has happened in practice

00:00:45,210 --> 00:00:49,079
is that UML encourages you to take your

00:00:47,039 --> 00:00:51,239
thoughts and chop them into smaller and

00:00:49,079 --> 00:00:52,530
smaller pieces until the pieces that

00:00:51,239 --> 00:00:56,280
you're working with are too small to be

00:00:52,530 --> 00:00:58,230
useful good design is the opposite of

00:00:56,280 --> 00:01:00,030
this when you're taking things apart you

00:00:58,230 --> 00:01:01,649
need to have a visual canvas where you

00:01:00,030 --> 00:01:05,939
can see all the elements that are in

00:01:01,649 --> 00:01:09,299
play so here's an example diagram from

00:01:05,939 --> 00:01:11,760
the work that we did on closure 1.10 the

00:01:09,299 --> 00:01:13,500
feature is called prep 'el although that

00:01:11,760 --> 00:01:15,420
doesn't really matter here but the point

00:01:13,500 --> 00:01:17,070
I want to make about this diagram is it

00:01:15,420 --> 00:01:19,590
combines things that would be in a half

00:01:17,070 --> 00:01:21,030
dozen different UML diagrams it shows

00:01:19,590 --> 00:01:22,890
multiple subsystems it shows

00:01:21,030 --> 00:01:25,200
encapsulation boundaries and seams it

00:01:22,890 --> 00:01:27,150
shows the flow of time and the flow of

00:01:25,200 --> 00:01:29,790
information it shows function in

00:01:27,150 --> 00:01:33,990
vacations it shows data formats it shows

00:01:29,790 --> 00:01:36,840
freeform notes what this is is a

00:01:33,990 --> 00:01:38,790
snapshot of somebody working on a

00:01:36,840 --> 00:01:40,799
problem that captures everything that

00:01:38,790 --> 00:01:42,899
they need to understand how to move

00:01:40,799 --> 00:01:46,350
forward on the problem so it's not

00:01:42,899 --> 00:01:47,579
adhering to some official guideline for

00:01:46,350 --> 00:01:49,350
I'm going to make this kind of diagram

00:01:47,579 --> 00:01:51,299
or I'm going to make that kind of

00:01:49,350 --> 00:01:53,610
diagram and in particular don't copy

00:01:51,299 --> 00:01:54,750
this do not leave this talk and make a

00:01:53,610 --> 00:01:56,219
diagram that looks like this

00:01:54,750 --> 00:01:58,920
unless you're designing prepa that's

00:01:56,219 --> 00:02:00,960
guaranteed to be wrong now every diagram

00:01:58,920 --> 00:02:04,320
can and should be different and this

00:02:00,960 --> 00:02:05,729
kind of work is invaluable when you're

00:02:04,320 --> 00:02:09,149
planning the code you're going to write

00:02:05,729 --> 00:02:10,830
and it's invaluable again five years

00:02:09,149 --> 00:02:12,160
later when you have to pick up the code

00:02:10,830 --> 00:02:14,410
in maintenance

00:02:12,160 --> 00:02:17,970
we don't code on that atomic team

00:02:14,410 --> 00:02:17,970
without pictures like this in play

00:02:24,270 --> 00:02:26,330

YouTube URL: https://www.youtube.com/watch?v=AahpkP3DZhw


