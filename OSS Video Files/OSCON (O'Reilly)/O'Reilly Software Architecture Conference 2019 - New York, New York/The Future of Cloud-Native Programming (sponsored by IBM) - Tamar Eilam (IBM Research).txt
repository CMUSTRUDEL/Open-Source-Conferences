Title: The Future of Cloud-Native Programming (sponsored by IBM) - Tamar Eilam (IBM Research)
Publication date: 2019-02-05
Playlist: O'Reilly Software Architecture Conference 2019 - New York, New York
Description: 
	To view more talks from O'Reilly Software Architecture Conference 2019, visit: http://www.oreilly.com/go/sa-ny19

Today, we are witnessing a great proliferation of cloud-native paradigms such as 12-factor apps, microservices, and serverless. Tamar Eilam discusses an emerging unified cloud platform (based on open source projects such as Kubernetes and Istio) and explains why the new frontier is its evolution to unify multiple programming paradigms for greater simplification with power of expression.

Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:00,089 --> 00:00:06,810
I started my career working in the IBM

00:00:03,179 --> 00:00:08,849
Watson Research Center on desired state

00:00:06,810 --> 00:00:12,300
based techniques to address the gap

00:00:08,849 --> 00:00:16,470
between developers and operators that

00:00:12,300 --> 00:00:18,779
was more than 15 years ago since then I

00:00:16,470 --> 00:00:22,289
was fortunate to be part of an

00:00:18,779 --> 00:00:27,150
extraordinary evolution in this space in

00:00:22,289 --> 00:00:30,359
2009 DevOps was coined and it advocated

00:00:27,150 --> 00:00:32,309
a cultural transformation as well as

00:00:30,359 --> 00:00:36,149
some technological principles where

00:00:32,309 --> 00:00:39,180
everything is treated as code and is put

00:00:36,149 --> 00:00:43,530
together in a unified continuous

00:00:39,180 --> 00:00:46,110
delivery process but software was still

00:00:43,530 --> 00:00:47,789
complicated and this is mainly due to

00:00:46,110 --> 00:00:52,739
the fact that it was written as a big

00:00:47,789 --> 00:00:55,320
monolith in 2011 micro services were

00:00:52,739 --> 00:00:57,660
introduced as a set of software

00:00:55,320 --> 00:01:01,199
engineering principles that advocated

00:00:57,660 --> 00:01:04,019
fine grained loose coupling and designed

00:01:01,199 --> 00:01:05,400
for resiliency applications that were

00:01:04,019 --> 00:01:08,570
written according to these principles

00:01:05,400 --> 00:01:12,659
were termed cloud native applications

00:01:08,570 --> 00:01:15,360
now in the last several years we have

00:01:12,659 --> 00:01:19,770
made tremendous progress coming together

00:01:15,360 --> 00:01:21,810
as a community to build a common cloud

00:01:19,770 --> 00:01:25,140
platform to run cloud native

00:01:21,810 --> 00:01:28,920
applications but first why do we need a

00:01:25,140 --> 00:01:31,799
platform well that's because we want the

00:01:28,920 --> 00:01:35,009
developer to focus on what she knows

00:01:31,799 --> 00:01:37,650
best which is coding we want the

00:01:35,009 --> 00:01:39,720
platform to take care of the rest which

00:01:37,650 --> 00:01:42,150
is the container lifecycle the

00:01:39,720 --> 00:01:44,780
orchestration the networking routing

00:01:42,150 --> 00:01:47,159
telemetry collection and visibility

00:01:44,780 --> 00:01:52,290
building and serving applications and

00:01:47,159 --> 00:01:54,869
all the rest the emerging cloud platform

00:01:52,290 --> 00:01:56,670
is really addressing all these issues so

00:01:54,869 --> 00:01:59,490
at the bottom of course you have

00:01:56,670 --> 00:02:01,500
kubernetes which addresses the container

00:01:59,490 --> 00:02:04,530
lifecycle doja stration and the

00:02:01,500 --> 00:02:08,340
low-level networking the next layer up

00:02:04,530 --> 00:02:11,520
is the SEO service mesh and this

00:02:08,340 --> 00:02:12,760
addresses the routing the security the

00:02:11,520 --> 00:02:16,750
visibility

00:02:12,760 --> 00:02:19,060
the communication and so on and then the

00:02:16,750 --> 00:02:21,790
next layer up is a new project which is

00:02:19,060 --> 00:02:24,269
called K native and is addressing

00:02:21,790 --> 00:02:28,510
unifying the way we're building and

00:02:24,269 --> 00:02:31,120
serving our applications so this is

00:02:28,510 --> 00:02:34,420
great news for us because it allows us

00:02:31,120 --> 00:02:39,579
to write our code and run it the same

00:02:34,420 --> 00:02:41,860
way no matter where it runs and this is

00:02:39,579 --> 00:02:45,610
especially important because we live in

00:02:41,860 --> 00:02:48,310
a multi cluster multi-cloud reality the

00:02:45,610 --> 00:02:51,040
majority of enterprises have a hybrid

00:02:48,310 --> 00:02:54,670
cloud strategy and many of the

00:02:51,040 --> 00:02:58,900
applications are written to run on Prem

00:02:54,670 --> 00:03:04,150
and off Prem and potentially even on

00:02:58,900 --> 00:03:07,060
multiple public cloud environments some

00:03:04,150 --> 00:03:11,590
technologies are emerging to manage

00:03:07,060 --> 00:03:14,709
these multi cloud environments IBM multi

00:03:11,590 --> 00:03:18,459
cloud manager is managing the kubernetes

00:03:14,709 --> 00:03:19,150
cluster lifecycle in multiple different

00:03:18,459 --> 00:03:22,139
clouds

00:03:19,150 --> 00:03:24,880
it checks compliance and it deploys

00:03:22,139 --> 00:03:28,590
applications into these multi cloud

00:03:24,880 --> 00:03:31,599
environments based on placement policy

00:03:28,590 --> 00:03:35,500
all right so what is next

00:03:31,599 --> 00:03:37,599
I believe we made a tremendous progress

00:03:35,500 --> 00:03:39,250
as a community but there's still some

00:03:37,599 --> 00:03:43,239
challenges ahead of us otherwise it

00:03:39,250 --> 00:03:47,590
wouldn't be interesting so when you look

00:03:43,239 --> 00:03:51,040
at the anatomy of cloud native

00:03:47,590 --> 00:03:54,819
applications they are still very diverse

00:03:51,040 --> 00:03:59,160
so they include elements such as event

00:03:54,819 --> 00:04:04,269
based functions request driven web apps

00:03:59,160 --> 00:04:06,849
batch analytics such as AI streaming

00:04:04,269 --> 00:04:11,400
analytics to address large volumes of

00:04:06,849 --> 00:04:15,489
data stateful stateless and so on and

00:04:11,400 --> 00:04:18,310
it's still very hard to write and run

00:04:15,489 --> 00:04:21,340
these types of applications and this is

00:04:18,310 --> 00:04:24,849
mainly due to the fact that the space is

00:04:21,340 --> 00:04:26,260
still very fragmented so if we look for

00:04:24,849 --> 00:04:28,990
example just like if

00:04:26,260 --> 00:04:31,510
event-based functions we have lambda in

00:04:28,990 --> 00:04:34,210
Amazon we have IBM cloud functions

00:04:31,510 --> 00:04:38,470
Google Cloud functions just to mention a

00:04:34,210 --> 00:04:41,980
few I believe what we need to do is to

00:04:38,470 --> 00:04:46,540
continue to work together as a community

00:04:41,980 --> 00:04:49,630
on the next level of abstraction which

00:04:46,540 --> 00:04:53,080
is a service model for running a diverse

00:04:49,630 --> 00:04:56,650
cloud native applications I believe we

00:04:53,080 --> 00:05:00,760
need to do that by building on extending

00:04:56,650 --> 00:05:06,400
and adding to this common cloud platform

00:05:00,760 --> 00:05:09,010
with these three layers iBM is committed

00:05:06,400 --> 00:05:11,020
to open source I invite everyone to join

00:05:09,010 --> 00:05:14,500
us on this journey I also invite you to

00:05:11,020 --> 00:05:17,070
try out this stuff IBM kubernetes cloud

00:05:14,500 --> 00:05:20,380
service includes an easy installation of

00:05:17,070 --> 00:05:23,590
SEO and K native and is running very

00:05:20,380 --> 00:05:28,320
complicated services such as Watson III

00:05:23,590 --> 00:05:28,320
and weather company ok thank you

00:05:37,740 --> 00:05:39,800

YouTube URL: https://www.youtube.com/watch?v=e0-9bQSRqA0


