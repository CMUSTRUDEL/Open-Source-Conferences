Title: Operations for Analytics and the Cloud - Brock Noland (PhData)
Publication date: 2017-10-19
Playlist: Strata Solutions Showcase Theater 2017
Description: 
	Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	                              today I'm gonna talk about really a                               personal story that I had so long story                               short you know I came from Thomson                               Reuters where we were we've been                               building analytics and production Eliza                               analytics for a long time and what I                               found at Thomson Reuters is that there's                               some very specific things that you can                               do to operationalize analytics and be                                successful and they're not the things                                that traditional companies do so that's                                what we're going to talk about today so                                it was an early cloud errand and and                                also co-author of the getting started                                with kudu book co-creator of a patchy                                century and committer on a number of                                projects including hive and parque and                                the incubator and things of that nature                                so I was driving in rural Wisconsin and                                I saw a ad for Marshfield Clinic and                                Marshfield Clinic is is just a clinic in                                the middle of Wisconsin but they're                                building applications so that you know                                you can for example visit the visit the                                doctor without ever leaving your                                smartphone right and it occurred to me                                that traditional companies like                                insurance companies and clinics in the                                middle of Wisconsin and you know finance                                companies are all trying to do the same                                thing that we've been doing that we were                                doing at Thomson Reuters for a very long                                time and that's production alized data                                products so they have data they need to                                create a product and deliver that to                                some internal user or some external user                                and the thing about it is is we learn                                some very specific lessons at Thomson                                Reuters on how to interact with                                distributed system our build distributed                                systems and how to operationalize data                                products and these aren't the things                                that traditional companies are able to                                do so so here's the goal the goal is                                that we're going to build a business                                that can take data can perform data                                science and then can take the models                                that are built from that from a data                                science activity and and provide it as a                                service for other                                parts of the business whether it be I                                phone application or or some internal                                scoring tool or something like that and                                so in order to do that you got to have                                scalable storage and compute and you got                                to have a scalable data science platform                                that allows you to quickly iterate and                                you've got to have this like software                                engineering capability of production                                iliza in the output of that activity and                                in order to do that you've got to do a                                few things now what happens in in                                traditional companies so traditional                                companies are really used to supporting                                monolithic applications a database                                that's vertically integrated and sits on                                server X a web application that runs on                                these three servers that's the kind of                                world that traditional companies live in                                what they typically have is these very                                long dev cycles where a whole bunch of                                work happens and then we promote it to                                production and then honestly what                                typically happens is a manual deployment                                and then chaos okay and the reason that                                it's chaotic is because there's a change                                it breaks things and no one knows was it                                this change or was it the                                          changes that are part of that software                                release so this is a way to fail when                                you're building and production lies in                                data products so what your operations                                teams won't tell you is that distributed                                systems is extremely difficult and the                                reason is distributed systems are not                                monolithic applications they are                                distributed over a number of servers and                                any one of those servers can have a                                problem systems are now built in in more                                of a layered model than a vertically                                integrated model and what that means is                                that you know sure a developer using the                                platform they can you know learn SPARC                                and some HDFS and then you know what                                they can be productive but the operators                                of the system they gonna have a spark                                developer come to them and say you know                                what you configured SPARC wrong and it's                                broken and then they're gonna have an                                 Impala sequel developer coming and                                 saying you know what you have configured                                 Impala wrong cuz my Impala query is not                                 working please help me                                 they need to understand the internals of                                 those systems which is much different                                 than in the past the other thing is                                 there's obviously cloud is out there                                 cloud is both a great opportunity                                 because yes we can spin up servers                                 significantly quicker than we used to in                                 the past but it also has significant                                 challenges because guess what those API                                 is don't always expect they don't always                                 return a server like you expect they                                 don't always have the right number of                                 disks for example and cloud basically                                 introduces the possibility for                                 additional chaos beyond what we're                                 trying to do in building our software                                 product so source control and automation                                 are things that can reduce chaos and                                 make this endeavor that weaving we're in                                 undertaking more sane so what we need to                                 have is configuration and code all need                                 to be a hundred percent source control                                 there needs to be no manual                                 configuration whatsoever because if                                 you're doing manually configuration then                                 we've got to build out a hundred new                                 servers like not going to work                                 artisanal server builds just not                                 possible so source of truth absolutely                                 has to be in source control and you'd be                                 surprised but a lot of customers that I                                 go into ask well what source control the                                 other thing is that we need to have a                                 modern software development approach so                                 no more we take a hundred changes that                                 we're all doing and then we put them in                                 the dev environment and see what happens                                 what needs to happen is that you have to                                 do look you have to have the ability to                                 do local testing which is actually                                 pretty hard for a lot of people and then                                 you also need to have continuous                                 integration so when a developer makes a                                 change and they push it to the source                                 control we need to run tests on that                                 before it gets committed to the master                                 branch okay and there's there's ways to                                 do that there's no more like who broke                                 the build the build should never break                                 because we can run tests before it gets                                 committed to the master branch and then                                 when that when that that check happens                                 and that code review happens and we                                 deploy that that commit to the master                                 branch then we need to automatically                                 that software package and ship it out to                                 the the the testing environment and that                                 should all happen an automated fashion                                 with no manual effort whatsoever if                                 you're not doing those things then                                 honestly you're setting yourself up for                                 significant challenges in this new world                                 all right so I got thank you
YouTube URL: https://www.youtube.com/watch?v=2t87ER5VTIE


