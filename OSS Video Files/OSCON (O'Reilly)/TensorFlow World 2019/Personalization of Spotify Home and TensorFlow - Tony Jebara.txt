Title: Personalization of Spotify Home and TensorFlow - Tony Jebara
Publication date: 2019-11-01
Playlist: TensorFlow World 2019
Description: 
	Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:01,630 --> 00:00:06,640
very excited to be here so my name is

00:00:04,210 --> 00:00:08,410
Tony Jabara today I'm going to be

00:00:06,640 --> 00:00:10,809
talking to you about Spotify where I

00:00:08,410 --> 00:00:12,700
work today and how we've basically taken

00:00:10,809 --> 00:00:15,460
personalization and moved it on to

00:00:12,700 --> 00:00:16,720
tensorflow I'm the VP of engineering and

00:00:15,460 --> 00:00:18,009
also the head of machine learning and

00:00:16,720 --> 00:00:20,680
I'm going to describe our experience

00:00:18,009 --> 00:00:23,050
moving on to tensorflow and to the

00:00:20,680 --> 00:00:24,369
Google cloud platform and cube flow

00:00:23,050 --> 00:00:25,869
which has been really an amazing

00:00:24,369 --> 00:00:28,930
experience for us and really has opened

00:00:25,869 --> 00:00:31,210
up a whole new world of possibilities so

00:00:28,930 --> 00:00:33,640
just a quick note as Ben was saying

00:00:31,210 --> 00:00:36,220
before I started at Spotify I was at

00:00:33,640 --> 00:00:38,140
Netflix and just like today I'm going to

00:00:36,220 --> 00:00:40,420
talk about Spotify his homepage also at

00:00:38,140 --> 00:00:43,150
Netflix I was working on personalization

00:00:40,420 --> 00:00:45,010
algorithms and the homescreen of Netflix

00:00:43,150 --> 00:00:46,990
as well so you may be thinking oh that

00:00:45,010 --> 00:00:49,870
sounds like a similar job they both have

00:00:46,990 --> 00:00:53,230
you know entertainment and streaming and

00:00:49,870 --> 00:00:54,850
home screens and personalization but

00:00:53,230 --> 00:00:55,930
there are fundamental differences and I

00:00:54,850 --> 00:00:58,120
learned about those find them out there

00:00:55,930 --> 00:00:59,380
differences recently I joined a couple

00:00:58,120 --> 00:01:00,790
of months ago but the biggest

00:00:59,380 --> 00:01:03,040
fundamental difference to me is it's a

00:01:00,790 --> 00:01:05,490
difference in volume and scale and I'll

00:01:03,040 --> 00:01:08,860
show you what I mean in just a second so

00:01:05,490 --> 00:01:10,960
if you look at movies versus music or TV

00:01:08,860 --> 00:01:12,640
shows versus podcasts you'll see that

00:01:10,960 --> 00:01:14,590
there's a very different magnitude of

00:01:12,640 --> 00:01:17,560
scale so on the movie side there's about

00:01:14,590 --> 00:01:19,690
158 million Netflix users on the music

00:01:17,560 --> 00:01:23,979
side there's about 230 million Spotify

00:01:19,690 --> 00:01:26,380
users that's also a different scale also

00:01:23,979 --> 00:01:28,360
the content really is a massively

00:01:26,380 --> 00:01:30,729
different scale problem there's only

00:01:28,360 --> 00:01:34,330
about 5,000 movies and TV shows on the

00:01:30,729 --> 00:01:37,330
Netflix service whereas on Spotify we've

00:01:34,330 --> 00:01:40,540
got about 50 million tracks and about

00:01:37,330 --> 00:01:42,790
half a million almost podcasts so if you

00:01:40,540 --> 00:01:44,530
think about the amount of data and

00:01:42,790 --> 00:01:46,060
content you need to index that's a huge

00:01:44,530 --> 00:01:48,580
scale difference

00:01:46,060 --> 00:01:49,720
there's also content duration once you

00:01:48,580 --> 00:01:52,840
make a recommendation off the home

00:01:49,720 --> 00:01:54,700
screen on let's say Netflix the user is

00:01:52,840 --> 00:01:56,799
gonna consume that recommendation for 30

00:01:54,700 --> 00:01:59,229
minutes for a TV show maybe several

00:01:56,799 --> 00:02:01,320
seasons sometimes two hours for a movie

00:01:59,229 --> 00:02:04,000
only three and a half minutes of

00:02:01,320 --> 00:02:06,610
consumption per track let's say on

00:02:04,000 --> 00:02:09,429
Spotify and they don't replay as often

00:02:06,610 --> 00:02:11,529
on let's say movies but you'll replay

00:02:09,429 --> 00:02:14,169
songs very often so it's really a very

00:02:11,529 --> 00:02:15,550
different world of speed and scale and

00:02:14,169 --> 00:02:17,920
we're getting a lot more

00:02:15,550 --> 00:02:19,180
data about the users every three and a

00:02:17,920 --> 00:02:20,140
half minutes they're changing tracks

00:02:19,180 --> 00:02:21,550
listen is something else

00:02:20,140 --> 00:02:25,210
engaging differently with the service

00:02:21,550 --> 00:02:27,100
and they're touching 50 million plus

00:02:25,210 --> 00:02:28,720
pieces of content that's really a very

00:02:27,100 --> 00:02:30,280
granular data and that's one of the

00:02:28,720 --> 00:02:32,020
reasons why we had to move to something

00:02:30,280 --> 00:02:34,770
like 10 turf low to really be able to

00:02:32,020 --> 00:02:37,140
scale and do something

00:02:34,770 --> 00:02:39,030
that's high-speed and in fact real-time

00:02:37,140 --> 00:02:43,020
so this is our Spotify home how many

00:02:39,030 --> 00:02:44,340
people here use Spotify alright so about

00:02:43,020 --> 00:02:46,560
half of you I'm not trying to sell a

00:02:44,340 --> 00:02:47,970
Spotify on anyone I'm just trying to say

00:02:46,560 --> 00:02:50,600
that many of you are familiar with this

00:02:47,970 --> 00:02:53,780
screen this is the home page so this is

00:02:50,600 --> 00:02:55,920
basically driven by machine learning and

00:02:53,780 --> 00:02:58,050
every month hundreds of millions of

00:02:55,920 --> 00:02:59,940
users will see this home screen and

00:02:58,050 --> 00:03:01,710
every day tens of millions of users will

00:02:59,940 --> 00:03:03,300
see this home screen and this is where

00:03:01,710 --> 00:03:06,120
you get to explore what we have to offer

00:03:03,300 --> 00:03:08,580
it's a two dimensional grid every image

00:03:06,120 --> 00:03:11,520
here is we call a card and the cards are

00:03:08,580 --> 00:03:14,400
organized into rows we call shelves and

00:03:11,520 --> 00:03:15,900
what we like to do is move these cards

00:03:14,400 --> 00:03:18,270
and shelves around from a massive

00:03:15,900 --> 00:03:20,280
library of possible choices and place

00:03:18,270 --> 00:03:24,900
the best ones for you at the top of your

00:03:20,280 --> 00:03:28,320
screen and so when we open up Spotify we

00:03:24,900 --> 00:03:30,060
have a user profile the home algorithms

00:03:28,320 --> 00:03:31,740
will score all possible cards in all

00:03:30,060 --> 00:03:33,690
possible shelves and pack your screen

00:03:31,740 --> 00:03:35,940
with the best possible cards and shelf

00:03:33,690 --> 00:03:38,160
combination for you and we're doing this

00:03:35,940 --> 00:03:40,170
in real time based off of your choices

00:03:38,160 --> 00:03:41,760
of music your willingness to recommend

00:03:40,170 --> 00:03:43,500
to accept the recommendation how long

00:03:41,760 --> 00:03:45,450
you play different tracks how long you

00:03:43,500 --> 00:03:47,130
listen to different podcasts and we have

00:03:45,450 --> 00:03:49,440
dozens and dozens of features that are

00:03:47,130 --> 00:03:50,220
updating in real time and every time you

00:03:49,440 --> 00:03:52,500
go back to the home page

00:03:50,220 --> 00:03:54,330
it'll be refreshed with the ideal cards

00:03:52,500 --> 00:03:56,310
and shelves for you and so we like to

00:03:54,330 --> 00:03:59,250
say there isn't a Spotify homepage or

00:03:56,310 --> 00:04:01,050
Spotify experience really there's two

00:03:59,250 --> 00:04:04,050
hundred thirty million Spotify so one

00:04:01,050 --> 00:04:06,450
for each user so how did we do this and

00:04:04,050 --> 00:04:09,390
how did we do this in the past well up

00:04:06,450 --> 00:04:12,240
until our migration to GCP tensorflow

00:04:09,390 --> 00:04:15,510
and NQ flow we wrote a lot of custom

00:04:12,240 --> 00:04:17,040
libraries and api in order to drive the

00:04:15,510 --> 00:04:19,260
machine learning algorithms behind this

00:04:17,040 --> 00:04:20,400
personalization effort so the specific

00:04:19,260 --> 00:04:21,989
machine learning algorithm is a

00:04:20,400 --> 00:04:23,670
multi-armed bandit many of you have

00:04:21,989 --> 00:04:25,950
heard about that it's trying to balance

00:04:23,670 --> 00:04:28,140
exploration and exploitation trying to

00:04:25,950 --> 00:04:30,090
learn which card the shelves are good

00:04:28,140 --> 00:04:31,650
for you and score them but also trying

00:04:30,090 --> 00:04:33,810
out some new cards and shelves it might

00:04:31,650 --> 00:04:36,060
not know if they're kind of hidden gems

00:04:33,810 --> 00:04:38,040
for you or not and we have to employ

00:04:36,060 --> 00:04:40,050
counter factual training and log

00:04:38,040 --> 00:04:41,880
propensity Xand log some small amounts

00:04:40,050 --> 00:04:43,860
of randomization in order to chain these

00:04:41,880 --> 00:04:45,870
systems and in order to avoid

00:04:43,860 --> 00:04:47,599
large-scale a/b tests a large scale

00:04:45,870 --> 00:04:49,129
randomization

00:04:47,599 --> 00:04:51,860
before we move to test for this was all

00:04:49,129 --> 00:04:53,599
done in custom let's say api's and data

00:04:51,860 --> 00:04:56,149
libraries and that had a lot of

00:04:53,599 --> 00:04:58,429
challenges so we'd always have to go

00:04:56,149 --> 00:05:00,199
back and rewrite code and if we want to

00:04:58,429 --> 00:05:01,909
compare different choices of the model

00:05:00,199 --> 00:05:03,889
underneath the multi-armed bandit like

00:05:01,909 --> 00:05:05,749
logistic regression versus trees versus

00:05:03,889 --> 00:05:08,209
deep neural Nets then involved tons of

00:05:05,749 --> 00:05:09,589
custom code rewriting and so that

00:05:08,209 --> 00:05:11,389
wouldn't that would make the system

00:05:09,589 --> 00:05:13,849
really brittle hard to innovate and

00:05:11,389 --> 00:05:15,439
iterate on and then when you finally

00:05:13,849 --> 00:05:17,119
pick something you want to roll out when

00:05:15,439 --> 00:05:18,800
you roll it out you're also worried that

00:05:17,119 --> 00:05:23,059
it may fail because of all this custom

00:05:18,800 --> 00:05:24,619
stitching so then we moved over to the

00:05:23,059 --> 00:05:27,199
tensor flow ecosystem and we said hey

00:05:24,619 --> 00:05:28,639
let's move on to techniques like tensor

00:05:27,199 --> 00:05:30,740
flow estimators intense flood at

00:05:28,639 --> 00:05:33,439
evaluation to avoid having to do all

00:05:30,740 --> 00:05:35,419
this custom work and so for tensor flow

00:05:33,439 --> 00:05:36,770
estimator what we can do is now build

00:05:35,419 --> 00:05:40,430
machine learning pipelines where we get

00:05:36,770 --> 00:05:42,589
to try a variety of models and train and

00:05:40,430 --> 00:05:44,240
evaluate them very quickly some things

00:05:42,589 --> 00:05:47,209
like logistic regression boosted trees

00:05:44,240 --> 00:05:50,119
and deep models and much in a much

00:05:47,209 --> 00:05:52,430
faster kind of iterative process and

00:05:50,119 --> 00:05:53,899
then also migrating out the cube flow as

00:05:52,430 --> 00:05:55,369
well was super valuable because that

00:05:53,899 --> 00:05:57,080
helped us manage the workload and

00:05:55,369 --> 00:05:58,939
accelerate the pace of experimentations

00:05:57,080 --> 00:06:01,459
and rollout and so this has been super

00:05:58,939 --> 00:06:03,409
fast for automatically retraining and

00:06:01,459 --> 00:06:06,349
scaling and speeding up our machine

00:06:03,409 --> 00:06:08,240
learning training algorithms another

00:06:06,349 --> 00:06:09,769
thing that we really rely on heavily is

00:06:08,240 --> 00:06:11,180
tensor flow data validation which is

00:06:09,769 --> 00:06:14,329
another part of the tf-x

00:06:11,180 --> 00:06:16,369
offering one key thing we have to do is

00:06:14,329 --> 00:06:17,689
find bugs in our data pipelines and our

00:06:16,369 --> 00:06:19,699
machine learning pipelines while we're

00:06:17,689 --> 00:06:21,800
developing them and and evaluating them

00:06:19,699 --> 00:06:24,680
and rolling them out for example we want

00:06:21,800 --> 00:06:27,979
to catch data issues as quickly as

00:06:24,680 --> 00:06:29,809
possible and so one thing we can do with

00:06:27,979 --> 00:06:30,769
TF DV is quickly find out if there's

00:06:29,809 --> 00:06:32,930
some missing data or data

00:06:30,769 --> 00:06:34,519
inconsistencies in our pipelines and we

00:06:32,930 --> 00:06:37,399
have this dashboard that quickly plus a

00:06:34,519 --> 00:06:39,289
distribution of any feature and the

00:06:37,399 --> 00:06:42,050
counts of different data sets and so on

00:06:39,289 --> 00:06:44,240
and and also a kind of more granular

00:06:42,050 --> 00:06:46,369
things like how much is the user

00:06:44,240 --> 00:06:47,659
spending on the service what are their

00:06:46,369 --> 00:06:49,550
preferences and so on looking at those

00:06:47,659 --> 00:06:51,349
distributions we caught a bug like this

00:06:49,550 --> 00:06:53,809
one on the left which basically was

00:06:51,349 --> 00:06:57,559
showing us that in our training data the

00:06:53,809 --> 00:06:59,689
premiere tier data samples were missing

00:06:57,559 --> 00:07:01,009
from our training pipelines and then on

00:06:59,689 --> 00:07:03,169
evaluation the

00:07:01,009 --> 00:07:04,999
free shuffle to your data set and

00:07:03,169 --> 00:07:06,199
samples were missing from our violation

00:07:04,999 --> 00:07:07,400
pipeline so this is horrible from

00:07:06,199 --> 00:07:09,110
machine learning perspective what we

00:07:07,400 --> 00:07:10,759
caught it quickly we're able to now

00:07:09,110 --> 00:07:12,259
trigger alarms and alerts and have

00:07:10,759 --> 00:07:14,569
dashboards and look at these

00:07:12,259 --> 00:07:16,219
distributions daily so the the machine

00:07:14,569 --> 00:07:17,899
learning engineers don't have to worry

00:07:16,219 --> 00:07:20,119
about the data pipelines into their

00:07:17,899 --> 00:07:22,639
system so now we have a Spotify paved

00:07:20,119 --> 00:07:24,409
path which is a machine learning

00:07:22,639 --> 00:07:27,080
infrastructure based off of Google Cloud

00:07:24,409 --> 00:07:29,089
cue flow and tensorflow and it has

00:07:27,080 --> 00:07:30,800
achieved significant lists off of

00:07:29,089 --> 00:07:33,259
baseline systems and popularity based

00:07:30,800 --> 00:07:34,610
methods and now we're just scratching

00:07:33,259 --> 00:07:36,229
the surface we want to do many more

00:07:34,610 --> 00:07:38,689
sophisticated machine learning types of

00:07:36,229 --> 00:07:40,669
explorations and we really view this as

00:07:38,689 --> 00:07:42,020
an investment it's an investment in

00:07:40,669 --> 00:07:42,740
machine learning engineers in their

00:07:42,020 --> 00:07:44,180
productivity

00:07:42,740 --> 00:07:46,759
we don't want machine learning engineers

00:07:44,180 --> 00:07:48,919
to spend tons of time fixing custom

00:07:46,759 --> 00:07:51,559
infrastructure and Catchings kind of

00:07:48,919 --> 00:07:54,399
silly bugs and and updating libraries

00:07:51,559 --> 00:07:56,509
and having to learn bespoke types of

00:07:54,399 --> 00:07:59,180
platforms instead we want to have them

00:07:56,509 --> 00:08:02,449
go on to a great and of lingua franca

00:07:59,180 --> 00:08:04,939
platform like GCP cube flow and tensor

00:08:02,449 --> 00:08:06,709
flow and really think about machine

00:08:04,939 --> 00:08:08,209
learning and the user experience and

00:08:06,709 --> 00:08:09,979
building better entertainment for the

00:08:08,209 --> 00:08:15,050
world that's what we want to enable not

00:08:09,979 --> 00:08:16,699
necessarily building custom custom let's

00:08:15,050 --> 00:08:18,469
say machine learning infrastructure and

00:08:16,699 --> 00:08:20,629
so if you're excited about working in a

00:08:18,469 --> 00:08:23,419
great platform that's got kind of a

00:08:20,629 --> 00:08:26,029
great future ahead of it like T FX and

00:08:23,419 --> 00:08:28,309
Google Cloud and cube flow but also

00:08:26,029 --> 00:08:29,959
working on really deep problems around

00:08:28,309 --> 00:08:32,690
entertainment and what makes people

00:08:29,959 --> 00:08:35,419
excited and engage with a service and

00:08:32,690 --> 00:08:37,190
music and audio and podcasts then you

00:08:35,419 --> 00:08:39,680
could get this best of both worlds

00:08:37,190 --> 00:08:43,870
we're hiring please look at these links

00:08:39,680 --> 00:08:47,100
and come work with us thank you so much

00:08:43,870 --> 00:08:47,100

YouTube URL: https://www.youtube.com/watch?v=NCuhjfSc2WY


