Title: Leveraging Eclipse Che for developers, Dave Neary and Venkat Balabhadrapatruni (Red Hat, Broadcom)
Publication date: 2019-07-23
Playlist: OSCON 2019 - Portland, OR
Description: 
	Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:00,060 --> 00:00:07,740
what is eclipse j.k is basically an ID

00:00:03,780 --> 00:00:10,860
is a service so we run your IDE as a

00:00:07,740 --> 00:00:13,320
container application running on code

00:00:10,860 --> 00:00:15,389
and the web browser is your interface to

00:00:13,320 --> 00:00:17,039
access your developer workspace and in

00:00:15,389 --> 00:00:18,510
that developer workspace it's a mini

00:00:17,039 --> 00:00:19,859
container application itself it's going

00:00:18,510 --> 00:00:21,420
to have the runtime that you're going to

00:00:19,859 --> 00:00:22,680
develop your application on and you

00:00:21,420 --> 00:00:25,350
developer tools you're using and the

00:00:22,680 --> 00:00:27,269
source code is also provisioned on the

00:00:25,350 --> 00:00:30,090
coding containers what are some

00:00:27,269 --> 00:00:30,929
real-world applications of Eclipse J we

00:00:30,090 --> 00:00:32,700
have a number of vendors who are

00:00:30,929 --> 00:00:34,320
building products red-hot my employer is

00:00:32,700 --> 00:00:35,550
a has a product called called ready

00:00:34,320 --> 00:00:37,050
workspaces which is essentially

00:00:35,550 --> 00:00:38,430
targeting making it easier for

00:00:37,050 --> 00:00:41,340
developers to develop container

00:00:38,430 --> 00:00:42,989
applications for kubernetes but we have

00:00:41,340 --> 00:00:45,059
a number of other vendors that are

00:00:42,989 --> 00:00:46,320
building products on top of che for a

00:00:45,059 --> 00:00:49,289
range of use cases some of the

00:00:46,320 --> 00:00:51,420
interesting ones are Bosch has included

00:00:49,289 --> 00:00:53,730
Eclipse J as part of its automotive IOT

00:00:51,420 --> 00:00:55,920
platform we have a company called

00:00:53,730 --> 00:00:57,059
progress software is using Eclipse J to

00:00:55,920 --> 00:00:58,680
make it easier for people to develop

00:00:57,059 --> 00:01:02,280
applications for their middleware and

00:00:58,680 --> 00:01:03,780
database and Broadcom is one of the most

00:01:02,280 --> 00:01:05,850
interesting use cases I've seen to date

00:01:03,780 --> 00:01:07,650
is they're providing develop modern

00:01:05,850 --> 00:01:10,200
developer tooling for a COBOL

00:01:07,650 --> 00:01:11,340
development on mainframe and can you

00:01:10,200 --> 00:01:15,180
talk a little bit more about that

00:01:11,340 --> 00:01:17,640
project absolutely so before before I

00:01:15,180 --> 00:01:18,960
actually answer you know how we are

00:01:17,640 --> 00:01:21,330
actually leveraging and extending

00:01:18,960 --> 00:01:23,130
eclipse Shea let me give you some

00:01:21,330 --> 00:01:25,020
context based on the conversation that I

00:01:23,130 --> 00:01:27,299
had this morning during the the

00:01:25,020 --> 00:01:29,759
impromptu networking that event that we

00:01:27,299 --> 00:01:31,860
were that we had so a gentleman was

00:01:29,759 --> 00:01:33,299
asking me you know why am I here so I

00:01:31,860 --> 00:01:34,950
told them you know the purpose and where

00:01:33,299 --> 00:01:38,880
we are from it's like his first question

00:01:34,950 --> 00:01:41,340
was half jokingly mainframes hmm do they

00:01:38,880 --> 00:01:43,740
still exist and I want to hear you date

00:01:41,340 --> 00:01:45,770
this will exist and so are the

00:01:43,740 --> 00:01:48,149
applications that are actually running

00:01:45,770 --> 00:01:52,350
pretty much the

00:01:48,149 --> 00:01:55,920
key financial insurance retail payment a

00:01:52,350 --> 00:01:57,750
V Asian industries out there with that

00:01:55,920 --> 00:01:59,399
reality there are a lot of new

00:01:57,750 --> 00:02:01,500
application developers coming to the

00:01:59,399 --> 00:02:04,829
platform to manage maintain modernize

00:02:01,500 --> 00:02:10,049
those applications so what we are doing

00:02:04,829 --> 00:02:11,640
is leveraging open source tools you know

00:02:10,049 --> 00:02:13,590
the tools that these application

00:02:11,640 --> 00:02:15,269
developers are familiar with that they

00:02:13,590 --> 00:02:18,629
understand that they can wrap their head

00:02:15,269 --> 00:02:20,700
around very easily and welcome them to

00:02:18,629 --> 00:02:23,459
the mainframe application development

00:02:20,700 --> 00:02:25,440
platform so that they can use those

00:02:23,459 --> 00:02:28,890
familiar tools to do their day-to-day

00:02:25,440 --> 00:02:31,890
job without actually going through a

00:02:28,890 --> 00:02:34,769
significant learning curve so that's the

00:02:31,890 --> 00:02:36,959
the key thing that we are trying to

00:02:34,769 --> 00:02:39,090
solve with this now coming to the

00:02:36,959 --> 00:02:40,920
question of what exactly are we doing we

00:02:39,090 --> 00:02:43,140
are extending a clip shade to provide

00:02:40,920 --> 00:02:44,660
you know access to the mainframe so the

00:02:43,140 --> 00:02:47,790
users can actually get to the mainframe

00:02:44,660 --> 00:02:52,579
you know to get to their artifacts and

00:02:47,790 --> 00:02:56,730
also edit their COBOL programs using

00:02:52,579 --> 00:02:58,980
intelligent editor capabilities from the

00:02:56,730 --> 00:03:01,590
same environment so essentially we want

00:02:58,980 --> 00:03:03,599
to make mainframe appear as any other

00:03:01,590 --> 00:03:06,180
platform and he helped love Eclipse Shea

00:03:03,599 --> 00:03:08,160
you talked a little bit about this but

00:03:06,180 --> 00:03:10,799
why would you say Eclipse chains

00:03:08,160 --> 00:03:14,489
particularly good fit for the mainframe

00:03:10,799 --> 00:03:16,230
developer great question so all of the

00:03:14,489 --> 00:03:17,910
things that they was talking about in

00:03:16,230 --> 00:03:20,910
terms of the problems that I could say

00:03:17,910 --> 00:03:23,370
is trying to solve ease of access you

00:03:20,910 --> 00:03:26,310
know faster onboarding of application

00:03:23,370 --> 00:03:27,780
developers are something that the New

00:03:26,310 --> 00:03:29,760
Age application developers a new

00:03:27,780 --> 00:03:32,489
generation application developers really

00:03:29,760 --> 00:03:34,950
like and can relate to in addition to

00:03:32,489 --> 00:03:37,739
that in the mainframe world you know

00:03:34,950 --> 00:03:40,739
which is more conservative risk-averse

00:03:37,739 --> 00:03:43,500
having a centralized environment for the

00:03:40,739 --> 00:03:45,630
ID shops where they can really manage

00:03:43,500 --> 00:03:47,099
you know a single instance of the

00:03:45,630 --> 00:03:49,019
development environment and ensure

00:03:47,099 --> 00:03:51,299
consistency auditability across the

00:03:49,019 --> 00:03:52,859
board I think is really really key and

00:03:51,299 --> 00:03:55,200
Eclipse Shea is an environment that

00:03:52,859 --> 00:04:01,900
actually provides us with that

00:03:55,200 --> 00:04:03,190
so what we are trying to do is we see

00:04:01,900 --> 00:04:04,840
the relevance not just to the

00:04:03,190 --> 00:04:08,290
application developers but to the entire

00:04:04,840 --> 00:04:11,290
mainframe organization to adopt and

00:04:08,290 --> 00:04:12,700
continue and embark on the modernization

00:04:11,290 --> 00:04:16,510
journey for the mainframe application

00:04:12,700 --> 00:04:19,450
development and since we believe you

00:04:16,510 --> 00:04:21,850
know in that vision and goal what we are

00:04:19,450 --> 00:04:24,160
doing is actually we are open sourcing

00:04:21,850 --> 00:04:25,630
we are creating a sub project for all

00:04:24,160 --> 00:04:27,430
the world that we are actually doing a

00:04:25,630 --> 00:04:30,520
sub project under Eclipse Shae and

00:04:27,430 --> 00:04:33,280
donating it to open source to build a

00:04:30,520 --> 00:04:35,830
modernization community around the

00:04:33,280 --> 00:04:37,630
mainframe application development and

00:04:35,830 --> 00:04:39,550
going forward what excites you most

00:04:37,630 --> 00:04:42,340
about you right now we're working

00:04:39,550 --> 00:04:44,350
towards the the next release of jj7

00:04:42,340 --> 00:04:47,050
which which brings some of the things

00:04:44,350 --> 00:04:48,430
that that Venkat mentioned very fast

00:04:47,050 --> 00:04:50,080
onboarding with new product of new

00:04:48,430 --> 00:04:51,280
developers for a project and one of the

00:04:50,080 --> 00:04:52,960
ways we do that is we've got something

00:04:51,280 --> 00:04:54,310
called a dev file it's kind of a script

00:04:52,960 --> 00:04:56,140
that describes what goes into a

00:04:54,310 --> 00:04:58,000
developer made a developer workspace

00:04:56,140 --> 00:05:00,970
which containers what tools and so on

00:04:58,000 --> 00:05:03,550
and one of the things that's really

00:05:00,970 --> 00:05:05,710
exciting to me is the if you add a dev

00:05:03,550 --> 00:05:08,110
file for your open source project to

00:05:05,710 --> 00:05:10,240
your repository we can then pick up that

00:05:08,110 --> 00:05:12,520
repository direct from github and start

00:05:10,240 --> 00:05:15,460
a developer workspace direct from your

00:05:12,520 --> 00:05:18,010
github page in a hosted Eclipse J

00:05:15,460 --> 00:05:19,300
instance so it's it's the ability one of

00:05:18,010 --> 00:05:20,890
the things that's really exciting for me

00:05:19,300 --> 00:05:23,229
is the ability to get new open source

00:05:20,890 --> 00:05:27,090
contributors for any open source project

00:05:23,229 --> 00:05:29,110
out there through adopting eclipse J and

00:05:27,090 --> 00:05:31,090
another thing that I think is really

00:05:29,110 --> 00:05:35,440
exciting is is one of the things that

00:05:31,090 --> 00:05:36,820
we've done in Eclipse j7 is to use a lot

00:05:35,440 --> 00:05:39,820
of the same standards that are used by

00:05:36,820 --> 00:05:41,560
vs code so we use the same plug-in api's

00:05:39,820 --> 00:05:43,570
we use the language server protocol and

00:05:41,560 --> 00:05:45,970
debug adapter protocol to integrate with

00:05:43,570 --> 00:05:49,690
third-party tools and so we can now in

00:05:45,970 --> 00:05:52,950
j7 run the s code plugins as extensions

00:05:49,690 --> 00:05:55,270
in a developer workspace in containers

00:05:52,950 --> 00:05:57,430
unchanged I think that's really really

00:05:55,270 --> 00:05:59,620
exciting in terms of giving access to

00:05:57,430 --> 00:06:01,570
this whole ecosystem of developer tools

00:05:59,620 --> 00:06:04,470
it's out there in a cloud IDE

00:06:01,570 --> 00:06:08,180
environment thank you very much

00:06:04,470 --> 00:06:08,180

YouTube URL: https://www.youtube.com/watch?v=vhwrs_3aSls


