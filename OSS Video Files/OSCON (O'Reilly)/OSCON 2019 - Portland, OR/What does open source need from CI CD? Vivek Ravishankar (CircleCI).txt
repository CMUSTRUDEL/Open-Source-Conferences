Title: What does open source need from CI CD? Vivek Ravishankar (CircleCI)
Publication date: 2019-07-23
Playlist: OSCON 2019 - Portland, OR
Description: 
	Subscribe to O'Reilly on YouTube: http://goo.gl/n3QSYi

Follow O'Reilly on: 
Twitter: http://twitter.com/oreillymedia
Facebook: http://facebook.com/OReilly
Instagram: https://www.instagram.com/oreillymedia
LinkedIn: https://www.linkedin.com/company-beta/8459/
Captions: 
	00:00:00,030 --> 00:00:05,040
why is continuous integration important

00:00:02,520 --> 00:00:06,779
for open source sure so I think that

00:00:05,040 --> 00:00:08,880
continuation continuous integration

00:00:06,779 --> 00:00:11,969
excuse me is really important for open

00:00:08,880 --> 00:00:15,000
source because for two big reasons one

00:00:11,969 --> 00:00:16,680
is speed and reliability and it's really

00:00:15,000 --> 00:00:19,100
important that when you're building an

00:00:16,680 --> 00:00:22,380
open source project because like most

00:00:19,100 --> 00:00:24,269
big applications are built on open

00:00:22,380 --> 00:00:25,890
source software that those projects are

00:00:24,269 --> 00:00:28,980
going to be very reliable you don't want

00:00:25,890 --> 00:00:30,359
that software to go down and so it's

00:00:28,980 --> 00:00:32,040
really important that you're using CI to

00:00:30,359 --> 00:00:34,649
make sure that you're continuously

00:00:32,040 --> 00:00:37,020
testing those projects making sure that

00:00:34,649 --> 00:00:38,280
there's no bugs in them because if they

00:00:37,020 --> 00:00:40,260
go down then there's all of these other

00:00:38,280 --> 00:00:41,840
applications that are dependent on them

00:00:40,260 --> 00:00:44,489
that are also probably going to go down

00:00:41,840 --> 00:00:47,129
and then the second reason is that you

00:00:44,489 --> 00:00:48,870
really want to create a lot of you

00:00:47,129 --> 00:00:51,719
really want to connect your contributors

00:00:48,870 --> 00:00:55,110
as much as possible and so tools like

00:00:51,719 --> 00:00:56,730
github and get lab do that for your

00:00:55,110 --> 00:00:57,629
source code but then you also need to

00:00:56,730 --> 00:00:59,100
make sure that they're going to be

00:00:57,629 --> 00:01:01,140
aligned on all the tests that you're

00:00:59,100 --> 00:01:02,789
running as well so that's kind of that

00:01:01,140 --> 00:01:04,379
second step in the process and so it's

00:01:02,789 --> 00:01:07,500
it's important that you're using a tool

00:01:04,379 --> 00:01:10,530
like circle CI like something else that

00:01:07,500 --> 00:01:12,210
will provide that alignment among among

00:01:10,530 --> 00:01:15,270
your contributors for your test that

00:01:12,210 --> 00:01:18,030
you're running and how should CI and

00:01:15,270 --> 00:01:20,939
continuous delivery work for open source

00:01:18,030 --> 00:01:22,290
yeah so I think the the main thing is

00:01:20,939 --> 00:01:23,970
that you know it's going to be really

00:01:22,290 --> 00:01:25,470
fast you don't want people to be waiting

00:01:23,970 --> 00:01:26,790
around for their builds to run you don't

00:01:25,470 --> 00:01:29,369
want to deal with queuing and things

00:01:26,790 --> 00:01:30,810
like that and then secondly you want to

00:01:29,369 --> 00:01:32,729
make sure that it's really easy and

00:01:30,810 --> 00:01:34,979
that's both for maintainer Xand for

00:01:32,729 --> 00:01:38,009
contributors so you really want it to be

00:01:34,979 --> 00:01:39,509
easy and simple for maintainer x' to set

00:01:38,009 --> 00:01:40,860
it up so that they're not spending a

00:01:39,509 --> 00:01:42,780
bunch of time doing it and then it needs

00:01:40,860 --> 00:01:45,869
to be automatic for contributors so it

00:01:42,780 --> 00:01:47,700
just needs to work no one wants to go in

00:01:45,869 --> 00:01:49,799
and think about CI configuration when

00:01:47,700 --> 00:01:51,420
you're just trying to ship a feature and

00:01:49,799 --> 00:01:54,990
doing pull requests and things like that

00:01:51,420 --> 00:01:56,790
and to the CI NCD development practices

00:01:54,990 --> 00:01:59,610
help in maintaining an open source

00:01:56,790 --> 00:02:02,759
project they definitely do so Circle C I

00:01:59,610 --> 00:02:04,950
recently ran a an interview are sorry

00:02:02,759 --> 00:02:07,409
not in every we were in a survey with

00:02:04,950 --> 00:02:10,920
about 900 of our open source developers

00:02:07,409 --> 00:02:12,470
who use circle CI and of those 81

00:02:10,920 --> 00:02:14,840
percent said

00:02:12,470 --> 00:02:16,700
it would be very difficult or completely

00:02:14,840 --> 00:02:19,280
impossible to maintain an open-source

00:02:16,700 --> 00:02:20,810
project without CI so it definitely

00:02:19,280 --> 00:02:23,150
shows that like people are seeing the

00:02:20,810 --> 00:02:25,850
value of CI who are using it already for

00:02:23,150 --> 00:02:27,980
their open-source projects so I think

00:02:25,850 --> 00:02:29,780
that like the more we can expand that so

00:02:27,980 --> 00:02:31,220
they're open-source projects the better

00:02:29,780 --> 00:02:34,850
because you know people are seeing the

00:02:31,220 --> 00:02:37,880
value of it for sure and so what should

00:02:34,850 --> 00:02:41,000
open-source software User's look for in

00:02:37,880 --> 00:02:43,130
a CI tool yeah so you know like I was

00:02:41,000 --> 00:02:44,660
saying before speeds very important and

00:02:43,130 --> 00:02:46,970
so there's a few things you can look for

00:02:44,660 --> 00:02:49,610
like you know when you're researching CI

00:02:46,970 --> 00:02:53,480
tools to to see if they're going to be

00:02:49,610 --> 00:02:55,190
fast tools like that so one of the main

00:02:53,480 --> 00:02:57,350
things is just you kind of want to go

00:02:55,190 --> 00:02:59,960
with a SAS solution so someone that's

00:02:57,350 --> 00:03:00,980
going to host your builds for you and

00:02:59,960 --> 00:03:02,570
that's just because you're gonna save

00:03:00,980 --> 00:03:06,440
all of the time of setting up your own

00:03:02,570 --> 00:03:07,880
machines to run your builds and because

00:03:06,440 --> 00:03:09,260
you're using a vendor that's hosting

00:03:07,880 --> 00:03:11,120
those machines those machines are gonna

00:03:09,260 --> 00:03:12,650
be optimized for running CI build so

00:03:11,120 --> 00:03:14,810
they're likely going to like just run

00:03:12,650 --> 00:03:16,550
the build faster you don't have to deal

00:03:14,810 --> 00:03:18,170
with things like dependency sitting on

00:03:16,550 --> 00:03:20,450
those machines all that's going to be

00:03:18,170 --> 00:03:22,220
managed for you so that would be like

00:03:20,450 --> 00:03:24,410
the main one I would say will save

00:03:22,220 --> 00:03:26,540
maintain errs especially a lot of time

00:03:24,410 --> 00:03:29,180
and then you can also just like all

00:03:26,540 --> 00:03:31,640
these CI tools that our SAS solutions

00:03:29,180 --> 00:03:32,810
have three tiers available for

00:03:31,640 --> 00:03:35,209
open-source and they usually have a very

00:03:32,810 --> 00:03:37,610
good free offering for open-source so I

00:03:35,209 --> 00:03:39,260
would just suggest going and just trying

00:03:37,610 --> 00:03:41,330
out a few different solutions like do

00:03:39,260 --> 00:03:42,950
some research and then try them out try

00:03:41,330 --> 00:03:44,870
to optimize your builds on a few

00:03:42,950 --> 00:03:49,160
different tools and see which one is the

00:03:44,870 --> 00:03:52,190
fastest for your project and then I

00:03:49,160 --> 00:03:53,510
think for making it easy for maintainer

00:03:52,190 --> 00:03:56,180
--zz there's a few things you want to

00:03:53,510 --> 00:03:58,310
look at as well so configuration is code

00:03:56,180 --> 00:04:00,290
is one of the big ones that's just like

00:03:58,310 --> 00:04:03,170
it provides you all of the benefits of

00:04:00,290 --> 00:04:06,500
you know she's having code in a VCS like

00:04:03,170 --> 00:04:08,750
github or git lab so it's going to give

00:04:06,500 --> 00:04:10,070
you like traceability and the changes

00:04:08,750 --> 00:04:12,230
that are being made it's going to be

00:04:10,070 --> 00:04:14,030
open for all of your contributors to see

00:04:12,230 --> 00:04:15,739
so if anyone's like confused about what

00:04:14,030 --> 00:04:19,630
tests are being run you can see it in

00:04:15,739 --> 00:04:22,250
there things like that another one is

00:04:19,630 --> 00:04:24,289
security so you really want a tool

00:04:22,250 --> 00:04:25,460
that's going to manage security in your

00:04:24,289 --> 00:04:28,729
environment variable

00:04:25,460 --> 00:04:30,229
for you because you have all of these

00:04:28,729 --> 00:04:31,639
people around the world contributing

00:04:30,229 --> 00:04:33,530
this project you want to make sure that

00:04:31,639 --> 00:04:36,740
those things are locked down like AWS

00:04:33,530 --> 00:04:38,840
you know secrets and things like that

00:04:36,740 --> 00:04:40,970
right and you touched on this a little

00:04:38,840 --> 00:04:43,669
bit so far but what are some of the best

00:04:40,970 --> 00:04:45,919
practices for setting up CI an open

00:04:43,669 --> 00:04:48,110
source project yeah definitely um so

00:04:45,919 --> 00:04:49,970
secrets like I said that's a that's a

00:04:48,110 --> 00:04:52,160
huge one you want to make sure that all

00:04:49,970 --> 00:04:54,050
your secrets are managed well by your CI

00:04:52,160 --> 00:04:55,419
tool so that you're not storing them in

00:04:54,050 --> 00:04:58,960
your source code things like that

00:04:55,419 --> 00:05:01,880
another one would be to really leverage

00:04:58,960 --> 00:05:04,010
caching and we we see a lot of people

00:05:01,880 --> 00:05:06,380
who are using CI for open source who

00:05:04,010 --> 00:05:08,210
aren't thinking about optimizing those

00:05:06,380 --> 00:05:09,560
builds you because like they're mostly

00:05:08,210 --> 00:05:10,880
thinking about just saving time let's

00:05:09,560 --> 00:05:13,310
get it set up as quickly as we possibly

00:05:10,880 --> 00:05:15,050
can and then they don't really spend the

00:05:13,310 --> 00:05:17,630
time talking then go back and optimize

00:05:15,050 --> 00:05:19,729
those builds with caching and tools like

00:05:17,630 --> 00:05:22,190
circle CI we pretty much give you all

00:05:19,729 --> 00:05:25,280
the freedom you want to set up caching

00:05:22,190 --> 00:05:27,259
however you want so it's not optimized

00:05:25,280 --> 00:05:29,120
when you originally start because we

00:05:27,259 --> 00:05:30,560
want to give you that freedom to do

00:05:29,120 --> 00:05:32,570
whatever it is that you need to do to

00:05:30,560 --> 00:05:35,389
make it work perfectly for your project

00:05:32,570 --> 00:05:37,250
so definitely for anyone who's using CI

00:05:35,389 --> 00:05:39,349
for an open-source project make that

00:05:37,250 --> 00:05:41,210
initial investment of the time to go and

00:05:39,349 --> 00:05:43,909
like set up caching set up other

00:05:41,210 --> 00:05:47,090
optimizations that that tool provides

00:05:43,909 --> 00:05:49,699
for you and then also would just be

00:05:47,090 --> 00:05:53,780
providing documentation to maintainer

00:05:49,699 --> 00:05:56,060
Zoar and two contributors about the

00:05:53,780 --> 00:05:58,909
practices that you have in your CI

00:05:56,060 --> 00:06:00,919
configuration so you really don't want

00:05:58,909 --> 00:06:02,720
to just be a black box to anyone who's

00:06:00,919 --> 00:06:04,970
coming and contributing to your project

00:06:02,720 --> 00:06:07,039
you want to have their in the readme

00:06:04,970 --> 00:06:08,539
like let's tell the contributors about

00:06:07,039 --> 00:06:09,919
you know what kind of tests you're

00:06:08,539 --> 00:06:11,630
running things like that so that when

00:06:09,919 --> 00:06:14,000
they come they know exactly what's going

00:06:11,630 --> 00:06:15,770
to happen and also even providing them

00:06:14,000 --> 00:06:17,300
some instructions on if you want to

00:06:15,770 --> 00:06:20,060
contribute to that contribute to this

00:06:17,300 --> 00:06:22,010
project maybe set up circle CI or

00:06:20,060 --> 00:06:25,370
another tool for your fork of that

00:06:22,010 --> 00:06:27,710
project as well so that before you do a

00:06:25,370 --> 00:06:29,630
pull request and like you know try to

00:06:27,710 --> 00:06:31,789
get your changes integrated into the

00:06:29,630 --> 00:06:33,169
main project like run those tests that

00:06:31,789 --> 00:06:35,500
are going to be run on it so that you're

00:06:33,169 --> 00:06:37,660
not like wasting a whole bunch of time

00:06:35,500 --> 00:06:40,950
and right well thank you very much for

00:06:37,660 --> 00:06:40,950

YouTube URL: https://www.youtube.com/watch?v=cRtDrdlgdiQ


