Title: DrupalCon London 2011: BUILDING AND MAINTAINING A DISTRIBUTION IN DRUPAL 7
Publication date: 2013-03-23
Playlist: DrupalCon London - August 2011
Description: 
	Presented by
Antonio De Marco
Andrea Pescetti
Drupal 7 allows to easily build and maintain distributions, i.e. repeatable website templates; you can benefit from this in all cases, whether you aim at large-scale deployments or even at maintaining a single website.

We will show how to package core and contributed modules in a distribution by using a Makefile and a profile and keeping them up-to-date during the whole development cycle.

Then you will learn how to use Code-Driven Development to store all settings in a sustainable way: use the Features module to easily describe configuration in code, a proper separation between Features to make your code reusable and extendible, a well-thought design of Features to create easier development patterns, CTools and Exportables to put your configuration in code even when a module does not support it natively.

Last, we will see how the distributions update mechanism allows you to create a new version of your distribution for easy and painless configuration updates of a live site.

Intended audience
All developers who wish to benefit from a clean development workflow allowing collaboration, code reuse and safe updates. The distributions workflow can be applied to single sites too, with similar benefits.

Questions answered by this session
How do I design my Features properly?

How can I create a Drupal distribution?

How does the distributions approach allow a cleaner workflow in general?

How can I have a safe upgrade path for my sites?

How can I easily maintain a Drupal distribution?
Captions: 
	                              welcome we will be speaking about how to                               build and maintain a distribution in                               Drupal                                                              DeMarco will speak later both of us are                               from nuvola                                                            the in belgium in browsers and in italy                               in parma novalee by the way means clouds                               in Italian if you are just curious about                               our name our clients are in Europe and                                in the US and we work with the                                distributed team we don't maintain a                                distribution ourselves but we work a lot                                with existing Drupal distributions and                                actually as you will see later we build                                every project as if it were a                                distribution our work is mostly with                                international organizations especially                                in Brussels this one for example is a                                screenshot of a customized open atrium                                installation that we built for a                                European project as you can see we built                                mapping integration there and they are                                using it for a network of the experts of                                International Education for storing rich                                user profiles and interacting in private                                groups this is another project we just                                started for another international                                organization this time it is a                                cooperation between Europe and Latin                                America again in the education sector                                and                                they are sharing techniques that were                                customized the open atrium platform so                                to come to the presentation we are first                                introducing what a Drupal distribution                                is it is not immediately clear I mean                                for us the Drupal distribution is what                                you see here a prepackaged the Drupal                                installation that is meant to address a                                specific use case this does not include                                all cases of distributions and we are                                getting to it in a couple of minutes                                popular distributions in this sense are                                open a tomb that is currently maintained                                by Phase two it is a well known it is a                                platform for a collaboration                                collaboration tool for four groups and                                it is also very sweet able for                                customization and advanced customization                                and this is what we mostly do it is                                still on Drupal                                                        in these examples managing news is an                                aggregator of news and feeds from                                different sources and with all different                                standards again maintained by a phase                                two currently then Cod is a very popular                                distribution is a conference organizing                                distribution everything you need to                                organize a conference based on Drupal                                video 'la is a platform for a video                                solution streaming                                open publish is again another well-known                                distribution meant to manage a new                                society with everything already ready                                for a application of news and open                                public is currently the only one in this                                set of examples that has a stable                                release for Drupal                                                      a governmental organization so again you                                see that all of these are Drupal but in                                each case Drupal has been heavily                                customised umbra configured to turn it                                into a product not something to work on                                but a prepackaged product with a set of                                standard characteristics that are for                                example that a product must be                                pre-configured completely pre-configured                                I mean it must come as an out-of-the-box                                solution so this is our idea of                                distributions something that is heavily                                pre-configured at the point that you                                just need to install it and it will be                                pre-configured out of the box it is                                repeatable you can install it as many                                times as you wish it's a really                                completely packaged and repeatable                                exactly on multiple instances and then                                of course if you have a product then                                there is a product life cycle so you                                have to maintain this product because                                people will be installing it and needing                                the future upgrades or new features and                                you will need to design an upgrade path                                people will be installing open atrium                                                                                                        to provide them with the open atrium one                                point one or something that they can                                upgrade and this is a burden for the                                developer in the idea of packaging a                                 full product                                 now some of these features apply tool                                 installation profiles too but in the                                 sense we will use in this presentation                                 we are distinguishing the installation                                 profiles and distributions for us an                                 installation profile is something that                                 is repeatable of course in a u-shaped                                 Drupal with a set of models with a                                 minimal reconfiguration but how much                                 configuration you put there is really                                 the difference for us because one could                                 well say that from a syntactical point                                 of view this is the standard Drupal                                 installation this is a distribution just                                 a distribution with nothing more than                                 triple core but syntactically here you                                 have everything that is needed to to                                 call it a distribution of course what                                 forbids to call it a distribution in our                                 interpretation is that you're left alone                                 just when you have installed Drupal you                                 don't have something that is working out                                 of the box is something you are supposed                                 to work on so syntactically there is no                                 difference between an installation                                 profile even the default installation                                 profile and the distribution but here is                                 the key difference when you are shipping                                 a distribution profile your focus is                                 developers people who will be able to                                 work on on this profile you just provide                                 them tools and then it's up to them to                                 builder stuff with it and it's a                                 platform they can build upon while the                                 distribution is ready to use someone                                 with say very little Drupal knowledge or                                 adjust with site building standard side                                 building knowledge will find something                                 that is working out of the box and he                                 can start immediately and then maybe                                 customize it but focuses on final use                                 all of this of course it perfectly                                 standard Drupal it is a triple core a                                 set of modules themes in general what we                                 call code and configuration and again                                 what we are focusing on to call it a                                 distribution is this last part                                 configuration configuration is hard to                                 store it's not natural to store in in                                 Drupal because the point of view through                                 pal is that traditionally configuration                                 is stored in database but here is the                                 main obstacle where when you are trying                                 to ship something that contains                                 configuration                                 you cannot ship a configuration as a                                 database dumper not conveniently if you                                 need huge list of drawbacks you can find                                 them here we can review them quickly but                                 it should be rather obvious I mean first                                 you have severe limits or repeatability                                 our product is meant to be repeatable we                                 want to be able to install it anywhere                                 where or Drupal supports it and if we                                 are shipping with a dump                                 we are hard-coding a choice of database                                 engine possible we are hard coding table                                 prefixes and our user that wants a                                 different table prefix must work around                                 it or we can find weird ways to adapt                                 our database and if you wish if with the                                 database dump we don't start clean we                                 start from a dirty State from something                                 that is something we have been working                                 on and that at a certain point we dump                                 the for everybody to get an exact copy                                 of                                 we have and then of course especially                                 since we are talking about products here                                 it will be extremely difficult to                                 upgrade if the newer version of our                                 distributions carries a database dump we                                 are going to destroy everything the user                                 created in between to completely break                                 the upgrade part for our users because                                 in database now they will have a mix of                                 configuration and content also for                                 developers it is very hard to maintain                                 because especially for us we work in a                                 distributed team so we need a workflow                                 that does not assume that people are                                 just close to each other they can work                                 freely and that they cannot lock                                 database and tell each other please do                                 not touch have anything while I'm                                 working on on this feature of course a                                 database is a problem in this case and                                 it is very easy to to lose control                                 ultimately so the idea is that the                                 distribution must and we will see how                                 store all configuration in code we have                                 to there is no way we can ship with the                                 database dump and still call it a                                 product in a proper way                                 storing configuration in code has                                 benefits that of course corresponds to                                 to the drawbacks we've seen before for a                                 database dumps and moreover we have                                 everything that is contaminated by PHP                                 code that is database agnostic so we are                                 not making any assumptions on on what                                 users are doing we have a clean                                 installation procedure and we can                                 define a clear a parade path so we will                                 be able to guide our users to an upgrade                                 of our distribution without interfering                                 with the existing content and also for                                 developers this is much easier to to                                 maintain because when everything is                                 engaged P code it's much easier to                                 inspect for developers so I can see very                                 quickly what a colleague is working on                                 or what he changed when he changed it                                 and if there is a conflict we can solve                                 it by simple comparison standard the                                 source file way and content and settings                                 this way are completely separated so                                 after this introduction to distributions                                 at products as products we we can go on                                 and look at how to build the                                 distribution so let's start to build in                                 a distribution distribution and I said                                 this product so you must think about the                                 name for it give it maybe a logo and                                 they start to package content together                                 so let's meet our distribution the                                 policy so there is a it's just not                                 actual distribution just suppose we are                                 going to use it for our example student                                 our presentation so I would strap the                                 project then I need to think I need to                                 get my code from different locations put                                 it together to make then the code base                                 for our distribution and then I need an                                 installation profile to manage my                                 installation process so the first one                                 we're going to do using a make file make                                 file so the distributions buildings                                 blocks are the call of course then you                                 have different modules you can have                                 contributed modules custom elicits you                                 would write for your distribution or                                 even patched modules so when you apply                                 some patches to fix some problems then                                 themes several themes somebody depending                                 on something and somebody else and then                                 external libraries all this                                 building blocks comes from different                                 locations they may come from deposit org                                 from get up for example or from other                                 sources like external library like open                                 layers or jQuery so we need to                                 convenient to a to then fetch all this                                 code automatically coming from different                                 locations and these were - may come                                 comes into play so the best way to                                 package code is to use - make what is -                                 make its - extensions that allows you to                                 describe the code you are going to use                                 for your project using just a simple dot                                 info syntax so a syntax we are all                                 familiar with as duper developers and                                 allows you to do it just with one line                                 command line of - so single info file to                                 describe the modules the dependencies                                 and then also the patches that you would                                 apply to the modules you download it can                                 download it all you can build for you                                 all the distribution on just with one                                 line comment and then it's also a really                                 nice way to keep an index of your                                 projects so to see which modules are                                 using etc especially useful when you                                 work with with a disability for example                                 so let's have a close up for a                                 distribution we usually need to make                                 file the district file which will pack                                 the called a liqueur and a profile and                                 then the police will make file which is                                 the make file of the our distribution                                 specifically so the dist to make project                                 package then the core and the profile so                                 let's see how it looks like as you see                                 it's a typical info file simple here's                                 some directives for simply specify the                                 core of all that you're working on the                                 Drupal core then you say ok download for                                 me                                 Drupal project the the core of it is and                                 then the version in seven point seven as                                 you can see then you can also apply                                 patches to Drupal core this is actually                                 a real life example taken from Vic heat                                 and these patches are to make the some                                 elements some components in Drupal core                                 exporter like for example book                                 very names or input filters etc so then                                 you can download the Drupal core and                                 apply some patches suite direct and this                                 is the common line that the command that                                 does it so you have like - make this dot                                 make and then the directory where the                                 distribution will be stored as you can                                 see the result of this command is the                                 Drupal project is downloaded and then                                 patches are applied and you also get a                                 report in patch                                                      patch that you apply                                 so where is my installation profile now                                 because so far we just patched the                                 Drupal core so there it is you have to                                 also specify of course the location of                                 your installation profile the solution                                 profile is another element that make                                 file would download so it needs a                                 specific declaration in the into the                                 make file so there it is the first                                 bracket here like the name of the                                 installation profile which is the police                                 him in our case the type is a profile so                                 Drupal we know that it will store the                                 code downloaded by by this directive                                 inside the profile directory then you                                 have also the different type of the lot                                 you can download the profile from the                                 drupal.org or for a sample in this case                                 you can download it from a git                                 repository stored on get up                                 so let's see what what we get when we                                 get this installation profile the                                 installation profile will have a dist                                 Romaic so its own file and then also                                 another make file Drupal is not me which                                 is the installation of the make file of                                 the distribution one interesting feature                                 of - make is that it act                                 recursively so when it unloads a package                                 when it finds another make file you will                                 also execute that's one so in this way                                 you just need to call brush make distro                                 make and name of the directory and then                                 it will also download all the components                                 specified into the true policy make file                                 which is then your distribution                                 so let's have a way a little close-up of                                 the distribution make fine so it looks                                 like again an info file so you have like                                 the models of your distribution with the                                 version you would like to download you                                 can specify themes libraries patches to                                 models and then also of course the                                 features of your distribution so the                                 main components that you may download                                 from git repositories for example in                                 this case in this example I have wanted                                 to do feature so the Dubarry smoker                                 which is the core features of our                                 project which stores all the project                                 wide configuration let's say and then                                 the do bodies from blog which is a blog                                 feature that you like to enable in our                                 project so there is a project in                                 repository called beef get milk it is a                                 startup distribution which basically                                 package all the modules and themes from                                 configuration that you may need when you                                 start a new project but it also gives                                 you the possibility to reuse its make                                 file in your distribution as a starting                                 point this is possible because it's a                                 page this is possible because the brush                                 make actually allows you to include                                 order make file inside your distribution                                 this can keep your make files really                                 clean for example your district now                                 would look like this you just include                                 the big kid this drum egg which has the                                 core download and the patches to the                                 core that we saw before                                 and then basically just add your profile                                 your deposition profile where to get it                                 and that's the your dysthymic file same                                 thing goes for the Drupal is not make so                                 for your distribution make file you can                                 include the distribution make off big                                 hit and then you can just extend it with                                 the features or even other modules or                                 the patches etc so this helps also to                                 keep to also start up a distribution                                 really easily without copy pasting for a                                 mother make fights and possibly making                                 mistakes either so the second part now                                 the installation profile because so far                                 we just patched the content                                 we just get got the code base for our                                 project we need to install now the our                                 Drupal distribution so we need an                                 installation profile installation                                 profiles are made of three files one                                 info file which lists the dependency of                                 your distribution which means that the                                 profile will enable all these                                 dependencies for you then an installer                                 file that behaves exactly like the                                 install of your modules so it's a                                 performance installation tasks tasks and                                 also parades it's also very important                                 point for Drupal                                                     then there is also a dot profile file                                 that's it's fully customizable makes the                                 your installation profile form fully                                 customisable exposing some api's so                                 let's have a look to do policy modeling                                 phone it's a normal info file really the                                 same as any models so you can specify                                 your core dependencies your contribute                                 engine sees and then your features as                                 well this means that after you have run                                 the brush make so the loading all this                                 code then you are now ready to install                                 this code using your installation                                 profile thanks to the info file or the                                 Drupal will enable all these                                 dependencies so you'll have all your                                 modest enable now let's have a look how                                 to customize your the installation                                 profile procedure for the for the final                                 user to really go smoothly through it                                 you may want to add some new steps order                                 to reveal some forms or to add some                                 interaction forms with the users for                                 your specific use case so for doing                                 these installation profiles espacio                                 api's like for example normal form alter                                 so you can really like behave like you                                 are in a module even though you are in a                                 profile so you can alter for example the                                 instant figuration form in this example                                 we just pre feed some some some form                                 input fields to help the user to go                                 quicker through the installation process                                 and this is the result basically have                                 the site name prefilled Rupali schema                                 then you have a site email addresses                                 Excel a user name admin so you can a bit                                 speed up the                                 the process then what you can do also is                                 to add installation tasks to the                                 installation profile which are the                                 osmotics use on the on the sidebar here                                 we are two tasks created so nimi terms                                 which will obviously create some terms                                 for our distribution and then also the                                 configuration tasks that will configure                                 our site features this task end up there                                 on the on the sidebar so the user will                                 go also through these steps in these                                 steps you can also put you can also add                                 forms for user interaction to ask users                                 some some information about specific                                 features of your distribution for                                 example they create the term creation                                 and task performs simpleton creation so                                 just fetch the vocabulary and then I                                 creates like the default terms that you                                 may need then into the entry or                                 distribution this is also specifically                                 useful when you need to make assumption                                 about a term that is already present in                                 your distribution in order to configure                                 it for example as a to use it use it as                                 a context reaction or something like                                 that so this is a way to do it so when                                 the profile installation profile will                                 come through this step and it will                                 create your starting taxonomy term and                                 the same you go for the site features                                 configuration here you you want to add                                 for example in a user role like editor                                 you make some operation on your features                                 you revert some components like                                 variables so user permission and you                                 enable also the custom team you want to                                 ship already with the team not with                                 garland probably so you have your Drupal                                 estimate image at your distribution so                                 you want also to enable the team and                                 that's the place to do so as a                                 installation tasks you may enable also                                 also anything                                 so so far we've seen how to get                                 basically to an installation profile                                 even if you have seen features popping                                 around times but we haven't introduced                                 it completely and this section is                                 actually about again having a full                                 configure product so how to ship with                                 full configuration using this very nice                                 tool that is a model called the features                                 and is the best way to do package                                 configuration so if we want to have                                 content types and views and context with                                 ship with our distribution we will                                 generate features that package this                                 information a feature itself can be                                 defined as a collection of elements that                                 satisfy a certain use case and actually                                 features produces models that the output                                 of a feature is producing a model that                                 will store configuration for your                                 website so you can see it as a way to                                 export configuration into PHP code so                                 this is the missing link from earlier to                                 except that links how to have                                 configuration in database and how to                                 have it in a PHP code configuration in                                 database is organized in a very                                 unconvincing                                 one who would like to package it in in a                                 logical way by features because in                                 database you have all views together in                                 using the same tables more or less                                 contacts are together image styles are                                 together and this is exactly the                                 opposite of what we would like to obtain                                 what we would like to obtain is our                                 distribution                                 we'll have a feature called news that                                 will contain everything necessary for it                                 is this modular functionality it is it                                 will contain the definition content type                                 contexts that are related to news views                                 that are related to news and image                                 styles that are related to news so we                                 just need to to put things together in                                 another way creating a feature is a                                 rather simple there is a graphical user                                 interface in the model that you can use                                 for for a start you just define basic                                 fields on the right you can see there's                                 a the right hand side there's an edit                                 components select but you just select                                 what components you would like to put in                                 a feature so if you are building a                                 feature for news everything related to                                 news will go there there's also a nice                                 auto detection mechanism for                                 dependencies that will try to guess                                 what's needed for your feature to be                                 enabled and install them and then you                                 just get that the button to download                                 your feature at the end you will get                                 something like this so a set of PHP                                 files that store configured in that                                 story information about a certain piece                                 of functionality for your site                                 it has an info file because features are                                 modules let's have a look this info file                                 again you see the dependencies that are                                 models that need to be enabled when                                 enabling the feature or need to be in                                 enable just just before enabling it and                                 then a set of exportable things that are                                 put in you can see here permission                                 variables and this is not their values                                 just what we are putting in code so the                                 next question is once we know how to                                 create feature how to fetch                                 configuration from database and put it                                 in PHP code what's the most logical way                                 to package it the most logical way is                                 not the three real one that is I will                                 just try to find everything in my                                 website all content types views and                                 context and put it in one feature I will                                 just create a big features that a big                                 feature that I will call drew bellissimo                                 all with everything in it this is not                                 working this is not working because the                                 idea behind features is to be as modular                                 as possible so while it may work it is                                 not the way to do it so we want to                                 divide the site functionality into                                 independent pieces just think about it                                 and then we will put the several                                 features together to build a site there                                 is another option that is building a                                 transversal features but we do not                                 support it the idea is that one could                                 imagine having a feature that is called                                 site permissions and dump all site                                 permissions there                                 see mmm this is not right because it is                                 not modular of course it is a                                 transversal feature where you have all                                 side permission across all content types                                 for instance and it's better to bundle                                 permissions with the functionality they                                 belong to so if I have feature News the                                 permission related to the news content                                 type who can edit news who can create                                 new news items should be packaged with                                 that feature and not in a transversal                                 feature and if you have miscellaneous                                 permissions like access content in                                 general you can have a site-specific                                 features for this very generic                                 permissions that do not belong to any                                 modular piece or function right so here                                 is an example of an info file for an                                 hour                                 Drupal is my blog feature and as you can                                 see everything related to blogs is there                                 so here you find all fields all images                                 that image styles that we are going to                                 use in a blog all permissions that are                                 related to blog posts and everything                                 that is part of this functionality you                                 enable it and it's there you disable it                                 and everything disappears so it's                                 completely modular it helps a lot when                                 building features to use naming                                 conventions this will allow you to use                                 features very effectively you might have                                 noticed it before but we are seeing it                                 in a minute again there's a kit the                                 specification called kit that will guide                                 you in choosing proper names for all                                 elements you are exporting into features                                 the idea is to build the compatible                                 features and interoperable features you                                 need a lot of conventions                                 in this world and conventions are very                                 good when you are programming this                                 styler you will still have a lot of                                 flexibility but if you adhere to certain                                 naming conventions your life will be                                 much easier for instance you have a                                 codename space when I build a feature I                                 will generate a unique identifier for                                 that feature I'm creating a blog feature                                 for Drupal ASIMO I will call it through                                 policy my blog meaning that the module                                 file will be will have this name and                                 then internally I can shorten it to just                                 blog because at this point it is just                                 the functionality of my website so not                                 this particular new police smaug log but                                 the blog functionality of my website I'm                                 supposed to use one blog functionality                                 in my website and for example the                                 listing view for for my blog posts would                                 be called blog listing say again use                                 this name as a prefix for everything                                 belonging to it so it will make things                                 much easier to find if you are using the                                 recent blog posts as a name of a view                                 you are getting lost very soon it's much                                 easier to to prefix everything with the                                 code name space of what we were using                                 just use it as a name space                                 so far we've seen how to create a                                 feature and how to design it in abstract                                 but we are missing the point that is how                                 to develop a feature once we have                                 created it while developing we will be                                 changing it and the feature has a nice                                 standard mechanism for it it supports                                 two operations that are very handy                                 during development that is update it                                 will export the current configuration                                 into PHP code so everything you put in a                                 feature will be regenerated when you                                 update that feature you get new where                                 PHP code corresponding to the current                                 configuration and the revert operation                                 is more or less the opposite and it will                                 enforce the configuration that is stored                                 in your PHP code so whatever you have                                 done after the PHP code and the database                                 were synchronized that will be in a way                                 overridden by this Roberta will be                                 reverted actually go back to the status                                 that was stored in PHP code                                 and every component of the feature like                                 if you context can live in the database                                 in code or both so your blog listing                                 view will be described in code somewhere                                 will or will not depending on technical                                 differences live in database or will be                                 involved and will be possibly different                                 in both so features needs to keep track                                 of everything and it uses this concept                                 of component state component state is                                 default if the object hasn't is not in                                 database or if the database entry is                                 matching perfectly the state of                                 component in code so what your real                                 configuration is what is stored in code                                 this is perfect this is the stable                                 situation not changed anything if if I                                 have something different in database                                 then encode the state is overridden to                                 be more precise this means that the                                 database object was changed and the code                                 is unchanged to the latest from the                                 latest check that features did so                                 features know that something has changed                                 and it knows that what has changed is                                 the database so I have overridden what I                                 have in PHP code here it would be                                 natural to update the feature to enforce                                 the current configuration say I edited a                                 view and I wanted the modified view to                                 go in my feature then it will update it                                 and the new code will match my current                                 configuration or a we revert it and go                                 back there is a third state in its                                 review that means that feature detected                                 that                                 changed both the database and the code                                 and this means I have to manually review                                 it because both states are different                                 from that the latest state it has seen                                 and it does not know who must win                                 between changes I've made in database                                 and changes I made in encode someone                                 wonders how can features keep track of                                 it it's with md                                                     current code for the component the most                                 recent prior code state differing from                                 the current code state so the last thing                                 I saw that is different from what I have                                 now and this will detect an SDN update                                 or any operation that changed code and                                 then the normal component state that is                                 just what's in database or what that is                                 effective in in this moment to be more                                 precise with these md                                                  can know what's changed and can propose                                 me to to work properly not to lose what                                 I did another distinction we need to                                 make is between hard and soft                                 configuration there is some stuff that                                 will have to go into feature in some                                 configuration that we will not put into                                 features for example a viewer context is                                 part of the hard configuration meaning                                 if the site administrators changes it he                                 will consciously be overriding my                                 feature his configuration will be                                 different from the product ID shift and                                 then he knows that he might be at risk                                 in upgrades because I will assume that                                 we are starting from my unmodified                                 features on the other hand there is a                                 soft configuration                                 stuff that is meant to be overridden say                                 the default team I can have a product                                 and ship three teams with it then it's                                 up to the site administrator to choose                                 one and the upgrade process should not                                 be broken by this and the trick is not                                 to store these in features but to store                                 it in the installation profile so that                                 altering it will not change the future                                 state and when the site administrator                                 checks his features they will not be                                 overwritten because we are allowing this                                 to be overridden it's a so-called soft                                 configuration this is a great safe look                                 here                                 you have already seen this slide the                                 part of this slide we are doing it as                                 part of the installation profile now                                 this explains why we embedded some                                 configuration in the installation                                 profile it is meant to be overwritten                                 and then there is something that goes                                 beyond configuration like taxonomy terms                                 and other stuff that we still want to to                                 distribute in our product and again you                                 can do it in the installation profile                                 already seen this so basically these two                                 slides explain what you have seen before                                 of installation profile using for                                 carrying some configuration we do it                                 this way because it's configuration that                                 applies in in a different way than than                                 the configuration we store in pictures                                 an interesting thing is that the feature                                 can have its own make file to in in the                                 set of files defining the features there                                 can be a make file and this make file                                 can make the future truly modular by                                 specifying everything that is needed to                                 build this feature so all modules that                                 are needed to build these features                                 libraries and I can really package                                 functionality here not only in terms of                                 configuration but also in terms of                                 dependencies and these dependencies                                 should be chosen in a way that allows to                                 export everything                                 not all contrib modules are ready for                                 this even though it's getting better and                                 better and you should prefer modules                                 that can export their configuration in                                 code otherwise it is possible with                                 tricks or standard tools like strongarm                                 or C tools to make a module                                 configuration exportable so you are not                                 completely limited you can do something                                 to do expert configuration and we've                                 seen I think all the process of getting                                 to build a distribution and how to                                 package everything in a distribution                                 from make file to to contribute to the                                 configuration and possibly some initial                                 content                                 so so far exactly we saw how to package                                 and to be the distribution let's see how                                 we are going to arrive to our first                                     release so how to develop actual and                                 maintain distribution so the main                                 problem in that is upgrading process a                                 distribution must be upgradable means                                 that if a user downloads                                                release is out there like                                                                                                                    upgrade path so of course we cannot do                                 it with migrating content because it is                                 wrong is report s exposes hooks to do                                 that which are the updates books and for                                 example you can upgrade your features so                                 since features are modules then you can                                 use the update n where n is the number                                 of scheme of the feature and you can                                 place it in the in the install file of                                 the other feature this is to manage the                                 future supply applet process and also to                                 share changes with your development team                                 as we see same goes for the profiles                                 profiles drives distillation profile                                 dies the life of your distribution so                                 everything that is an structure update                                 of the old platform must go into the                                 book update end of the install a file of                                 the installation profile is exactly                                 again to manage distributions upgrade                                 process as well as to enable new                                 features for example you have added to                                 your distributions or to endow structure                                 update or to share changes with your                                 development team so now we go to the                                 core of the way we developed with                                 features which is also very really bound                                 to the way distributions work which is                                 the code driven development workflow                                 your Manta must be keep everything in                                 call so everything must be in called you                                 never have to assume the state of the                                 database that belongs to other                                 developers for example let's see you                                 have two developers working on undo                                 policing distribution so we have                                 developer a and developer B they are not                                 necessarily on the same place so they                                 have really bad way to communicate                                 because they can only communicate online                                 excel so this brings them to not be able                                 to make any assumption on the state over                                 the database or of the platform itself                                 so they have really to work                                 independently from each other so the                                 first first thing they both run the                                 installation process so they install the                                 platform from scratch so they start from                                 the same state of the distribution then                                 the developer a enables the block                                 features he develops the bug features                                 and enables it while the developer base                                 does something else                                 so since profile provides behave like                                 modules means that they can run up to                                   weeks so the developer can actually                                 share the change of enabling the new                                 feature in the platform with the                                 developer being just writing an upgrade                                 path using the hook update and this                                 means that then the developer B will                                 then download ok developer a will commit                                 the block feature of course and the                                 upgrade pass he just work on and then                                 the developer B will download the latest                                 code base it will run and update a tuple                                 update and then the states of his                                 database will then now include also the                                 blog features that was enabled by by                                 developer a this is a way to share                                 changes without sharing actually the                                 database so the two database tests they                                 can run in parallel they there is no                                 content overlapping or a problem of                                 synchronization etc if developer a can                                 have his own content test content                                 developer can have his own test content                                 tool and then just share that meaningful                                 content writing a plate pass for them                                 so for example now the developer be many                                 mistakes okay was working on an editor                                 role and then I wants to remove it so                                 what it does it removes the editor role                                 in the upgrade path sharing this change                                 with a developer a this way this is why                                 it's because you can never assume the                                 state of the other developers database                                 so maybe the developer a downloaded                                 database dump where the editor role was                                 there or they the role was put in place                                 since the installation profile as we see                                 so now we decided to not have ate the                                 role anymore in our distribution so                                 that's the way how to share this change                                 so always work with a pupil api's never                                 rely on database dumps of course so now                                 the developer be convinced this removing                                 editor role change and then they develop                                 will be just continues to work he wants                                 to patch a model first and put admin                                 modules because he found the back so it                                 unloads the patch from the Drupal issue                                 it just goes ahead and patch the model                                 then it continues to work then wants to                                 add an open ID account for further                                 administrator to be able to log in with                                 his open ID so the way to do it it's                                 again writing an upgrade path in order                                 to share this change also we developer a                                 so it writes deprecated past seven zero                                 and zero three and then just using the                                 Drupal seven api's in this case the API                                 serve open ID modules then enables them                                 open any account for the user one which                                 is that mean user another thing it just                                 patched the module touched admin mode                                 this is a very important thing because                                 now the code of the admin module is not                                 any more in line with the main                                 master branch of the Drupal development                                 so we must keep a track of this change                                 of dispatching in also in order for the                                 other developers to know that that model                                 was actually patched so if they need to                                 upgrade that mode is to a newer version                                 they need to mind that patch so they                                 rule that they both developer agreeing                                 on was to always check the brush make                                 file when we want to operate model for                                 example or simply they can check also                                 the logs of the SVN update or a version                                 control system they use to see that the                                 file changed so we need to record this                                 patch in our make file is also as                                 twofold so you can it's useful to share                                 this information with your development                                 team but it's also useful when a third                                 developer will join then the make file                                 will patch that module according to that                                 patch so the code base will be                                 consistent with a code base of the other                                 two developers so now the developer will                                 be commits his changes as you can see                                 the marker of this upgrade is a bit                                 different from the other one why because                                 it's a bit more important that way it is                                 not a development upgrade the structural                                 plate some field must be part of the                                 installation profile as well something                                 that you must ship with for example now                                 when the developers he joins then he                                 gets the the admin module patched                                 because it's in the make file and also                                 gets the all the models and upgrades                                 paths that were of course the appellate                                 n is not enough because exactly when the                                 developer C will install is a copy of                                 list of the distribution all the                                 upgrades and loops will not be run by                                  Drupal because Drupal at a fresh install                                  moment Drupal assumes that all the                                  upgrade path all the great update n                                  loops are old books are not something                                  must be applied so you need to store the                                  meaningful changes that you want to                                  store in                                  your dissolution need to place them into                                  the instil hook and this is what we call                                  the structural upgrade so structure                                  updates are the one who goes were                                  pardoned front of the installation                                  profiles so zero one zero two were just                                  development updates                                  so between developer and developer be                                  while geo three becomes a very important                                  structure updates which goes into the                                  installation profile now the developers                                  when the developer severe on an                                  installation from scratch he will also                                  get the open idea associated with the                                  admin account so the states of developer                                  sees exactly the same as the state of                                  the very developed be to start from from                                  scratch so you can install the project                                  and then start to develop so you can                                  redo a lot of stuff with the parade path                                  pre-processing near distribution for                                  example let's have a look to one of the                                  most popular distribution of their which                                  is opening through what they actually                                  did in the in the upgrade paths they                                  were for example altering common stable                                  so really hardcore altering to suite the                                  needs of the distribution or even the                                  node table adding a key node type for                                  example for optimizing surgeons kind of                                  stuff or they've also start new features                                  so when they enable the first time the                                  adren groups or it remembers features                                  they were they were sharing this change                                  in this way these are all not starts to                                  update while for example the                                              start late sunset must be replicated                                  also a distillation process because you                                  want always the system table to be to be                                  updated or in this way so now we also                                  prepared actually a quick reference                                  sheet that you can be downloaded by from                                  our blog also can be handed out we have                                  fifteen here so the first who comes                                  after presentation we get a free copy of                                  it you have like the most like it's a                                  quick reference for the most beautiful                                  trash comments that you may run when you                                  work in across the river development                                  workflow or also naming convention tips                                  are you'd work with a standing and                                  overriding your your features etc and                                  also artwork                                  other features and other tips that we                                  find useful during our work phone you                                  want to share with all of you if don't                                  if you are not able to get one here you                                  can always download it from our blog you                                  cannot reach the word blog to know where                                  that Olga slash blog or you can check                                  also our trainings in strings we have a                                  training about top management                                  customization and the quadrant                                  development workflow so thank you very                                  much if you want to take a survey just                                  cause we see this link and then thank                                  you                                  so if you have any questions yep have a                                  microphone here but so if you wish to                                  come down                                  okay so the question is if I can put own                                  code ohm custom code in the module file                                  of a feature right if I do that what                                  happens okay if it is our practice to do                                  it or not yes yeah we always do I mean                                  consider features as models so we really                                  develop the feature and not in a sense                                  of only storing the configuration but                                  also developing a new functionality                                  inside the features                                  okay so briefly the question is using                                  the quadrivium development is is harder                                  it needs that you look at the Drupal API                                  you study functions and it is lower and                                  at least it is as deeper learning curve                                  and the question is if that is a                                  effective or not I'd say yes in the long                                  term it is going to be absolutely                                  effective and it may happen that in some                                  install projects you employ a mix of                                  code driven development and in existing                                  database to make things quicker I mean                                  when you have a stable structure and you                                  export it into code the fundamental                                  function you can carry a development                                  database with you as long as it is                                  controlled and we do it in a few                                  projects so in the end this is a                                  solution that is quite effective and                                  invest okay so thank you for the other                                  questions you can ask us a privately                                  because it's lunchtime now and just come                                  here and come here for the code ribbon
YouTube URL: https://www.youtube.com/watch?v=5qnKd3tJY1Y


