Title: DrupalCon London 2011: THE ECONOMIST: AN INFORMAL TECHNICAL CASE STUDY
Publication date: 2013-03-23
Playlist: DrupalCon London - August 2011
Description: 
	Presented by
Diana Montalion Dupuis
For people interested in big websites and their unique challenges, this panel offers a behind the scenes look at The Economist site. A team of experienced Economist developers will talk about the complicated challenges, the innovative solutions, and the still-to-be-solved issues of this popular website. There will also be a (lively, no doubt) Q&A.

The presentation aspect of this session will focus on workflow challenges, testing, performance issues, necessary custom-coded solutions, and 3rd party integration. Sprinkled in, there will be tales of the complex migration from the legacy site to Drupal. The panel will then answer questions and discuss the issues attendees want to delve more deeply into.

Note: There will be at least four team members on this panel.

Intended audience
Developers and business people interested in the technical aspect of The Economist website and the big-website solutions the team has developed.

Questions answered by this session
How does The Economist handle workflow and quality control?

How does The Economist handle testing?

What performance solutions has The Economist developed?

What aspects of The Economist site are custom-coded in innovative ways?

What's the status on The Economist migration to Drupal?
Captions: 
	                              hmm so let's start so today we're going                               to have a relatively informal discussion                               about how the Economist site which I'm                               sure you all know runs on Drupal how the                               Economist site works we're going to talk                               about things like how the teams work                               together how the scrum process happens                               we're going to talk about how DevOps                               works we'll talk about performance will                                talk about infrastructure so what we're                                going to do is we're going to kind of go                                through the general architecture you                                kind of created a framework that                                describes the major aspects of the site                                and then different members of the team                                will talk about different pieces and                                then when we're done we'll take                                questions from most of you I will take                                questions from you about what you're                                particularly interested in and to say                                again that you know we had predominantly                                development team but we also but the UX                                team is here and so feel free to ask                                questions about anything that you're                                interested in and when we're done even                                if it wasn't a topic that we touched on                                that we touched on here so I'm Diana                                Monta Leon Dupuis I am a developer at                                four kitchens and I worked on the                                Economist project as part of the four                                kitchens team which was also known as                                the Janus team which was also known as                                the Austin team and I think Austin team                                is where we're going to where we're                                going to stay and let me want to                                introduce yourselves or we want me to                                introduce you you want to introduce                                yourself okay all right so um and this                                is John Johnson he's a developer and an                                overall harassment major from the lenten                                with the London team and Ernest Barry                                who's from a developer on the New York                                team and this is Rebecca Moss who is the                                scrum master for both the Austin and the                                New York team I have no idea how she                                manages how she manages that and Angelo                                repalle did I say repalle right Angelo                                repalle who is                                the user interface developer he is our                                front-end guru I mean he's he's the yes                                the God of all things of all things and                                and Juna Anthony is a developer in New                                York and Dominic lacock a developer in                                London and Caillou sax who is the one                                who keeps the entire infrastructure                                going single-handedly again I really                                have no idea how how how but he does or                                as eric says we're just that good and                                this is char taranto developer from New                                York and as you saw Eric the CTO snuck                                in the back we weren't sure he was going                                to be able to make it and Anna Anna can                                you say your last name for me no I i                                would have butchered that and Owens I                                can say right Brian right ryan owens and                                from London and New York team yeah mmm                                so we'll when i'll explain how the                                team's work a little bit more let me                                just give you a brief introduction to                                the economist online so the economist                                was first published in September septemb                                ear hmm must be almost end of the day in                                September                                                              contest between intelligence which                                presses forward and an unworthy timid                                ignorance obstructing our progress which                                I would say we need more of in the u.s.                                in May                                                                  million four hundred and twenty                                     unique visitors and                                                                                                                     though I'd been working on the site for                                over a year those numbers still seemed I                                really had no idea and then this does                                not include the iphone and ipad app                                download which two million plus but                                that's an older number what do you guys                                think it is now and is it it's a lot                                more than that now I'm probably not                                twice maybe three and a Nana I'm sorry                                I'm Android I'm an iphone exclusivist                                so the way that development works is                                there's um there's an economist team in                                London mostly represented here and                                there's economist team in New York and                                then for kitchens also has a team the                                Austin team and all three teams a                                somewhat coordinate and somewhat work                                you know on their own to make the                                 development team also recently was added                                 what we've called the continental team                                 the continental team who come in to work                                 on a new feature that's going to get                                 built and so they've been they've been                                 deep in the code review process for the                                 for the last month or so and they're                                 still saying so that's good and we keep                                 in touch by Skype by IRC there's a                                 google groups that we call the dev list                                 that has all kinds of has two hours                                 worth of emails to read every day and                                 also while the code review part goes to                                 that we also actually speak to each                                 other but that's less common yeah her                                 and then in there'll be the develop you                                 know the the literal developers on the                                 team but also like for the Austin teen                                 Danny in New York is the designer and he                                 will be the one that gives to us exactly                                 what the look and feel of any                                 functionality that we're adding or in                                 the case of newsletter integration                                 there's someone for production that                                 comes into the team so other non                                 strictly developer people will come in                                 and out of the team's depending on the                                 kind of work that the team that the team                                 is focused on is there any other role                                 that usually gets mixed in designer UX                                 production it's about right occasionally                                 editorial people ok and then ok and so                                 Rebecca Moss she's going to talk about                                 about the agile scrum process sure um at                                 economist online we use scrum with which                                 if you're not familiar with that is an                                 agile project development framework it                                 does come from the rugby term and                                 basically the analogy is that we're                                 moving the ball forward together as a                                 team and essentially we work in two week                                 iterations at the beginning of every two                                 weeks the team gets together with with                                 the product donor which I'll talk about                                 a little bit to look at what are the top                                 priorities in the backlog list of                                 features that we want to accomplish                                 within a project and then the team meets                                 daily for                                                            coordinate with each other for what                                 they're going to do for that day and                                 also very important and that is to raise                                 anything that is slowing down or                                 blocking the team that can be hey                                 nobody's code reviewed my stuff I need                                 somebody from one of the other teams                                 look at it or it might be my development                                 environment as busted and so we look at                                 problem solving either within that that                                 that daily call or we have an action                                 list of things to follow up that day to                                 keep things moving forward so that's one                                 of the very important things to moving                                 forward at the end of every two weeks                                 the team does a public demonstration                                 which the other people in our our group                                 not just the developers but but                                 editorial production marketing anyone's                                 invited to come watch where the team                                 demonstrates completely working software                                 that is ready to release and that is the                                 the big piece of what we're trying to do                                 with with iterations is that we're                                 getting high value work chunking it into                                 very small vertical slices with all the                                 pieces the back in the front end and                                 database all pieces so that at the end                                 of the two weeks we have something that                                 we can say this is done this is ready to                                 release and the roles within the team we                                 have as Diana was saying we have a                                 cross-functional team so it's not just                                 developers we have UX designers and                                 occasionally some of the roles come in                                 another important piece of this is that                                 the QA is done all within the team it's                                 not that the developers just do coding                                 and that's it throw it over the wall to                                 to a separate testing Department or                                 someone who is separate who's does the                                 testing the team themselves and I think                                 somebody else is going to be talking                                 more about our automated testing we                                 think about that from the beginning and                                 and it's the team's responsibility not                                 to deliver code but to deliver working                                 product so that means that that is                                 tested just enough documentation and and                                 that there's nothing else that would                                 hold it up from actually going through                                 the release process to live the second                                 role within our team is a product owner                                 and this is one of the key features of                                 agile and scrum which is that you have                                 someone who is a representative from the                                 business who is working with developers                                 day-to-day on to make sure that what's                                 being developed really does match with                                 what the business needs are so so that                                 product owner is attending the daily                                 scrums the team is showing things work                                 in progress so that can quickly get                                 feedback and ultimately at the end of                                 the sprint that the product owner is is                                 the decider is the one who says okay                                 this looks good I accept this and and                                 and and it's done so so that's a very                                 key piece that it's not development                                 working in isolation from the business                                 but you have someone who's the voice of                                 the business and the voice of the                                 customer who is working with them every                                 day and actually that's one of the                                 challenges a lot of organizations have                                 when they try to move to agile is that                                 that's a big commitment to have to have                                 that kind of integration with the                                 business and then the the third role is                                 the scrum master which is which is my                                 job and the scrum masters role is it's a                                 little bit different than a project                                 manager it's more a combination between                                 a coach and a referee I facilitate all                                 of the planning's and the dailies to                                 help keep things moving along but then                                 as I said in the daily one of the                                 important things as the team raises any                                 issues or things that are blocking them                                 and and the scrum masters job is to                                 remove impediments so that's a big part                                 of what I do on a day-to-day basis is                                 going to the daily meeting hearing what                                 what's working and not working with the                                 team that day                                 and identifying what are things that are                                 keeping us from meeting our goals and                                 then I take that and try to move things                                 forward get the right people talking to                                 each other and so that we can continue                                 on with her work and then just one                                 little one last bullet about business                                 value there's there's a slight                                 misconception sometimes that agile agile                                 processes are about getting things done                                 faster and where that might be a side                                 effect if you have everything going                                 smoothly really the focus is on                                 delivering the highest value of features                                 sooner so if you compare this to                                 waterfall where you might spend a couple                                 of months in Discovery a couple of                                 months in writing up a whole big                                 technical spec doc and then giving it to                                 giving it to a development team who                                 works on it for three six nine months                                 before it's it's released out to live in                                 this we're we're working with a product                                 owner who has you because they're from                                 the business side they have a good                                 conception of what are things that are                                 going to be valuable what of this big                                 mass of features that different maybe                                 different stakeholders are asking for                                 prioritize it and and we look for how we                                 can chunk it into smaller bits that we                                 can completely release and get out and                                 not wait six months for the whole thing                                 to be released at once so that's really                                 an overview of what we do so yeah yeah I                                 think that's great and we'll come back                                 to questions at the end so which I'm                                 sure they'll that's always something                                 people have lots of questions with so                                 questions about so that that works right                                 we can you will you be able to hold your                                 questions do you think or do you want to                                 stop in between each piece for a few                                 minutes all those who can wait till the                                 end raise your hand okay let's wait till                                 the end okay so so DevOps and i would                                 say that in terms of development                                 operations and also in terms of                                 infrastructure that the economist                                 project has four                                 the most part now set the standard for                                 the way big drupal websites operate you                                 know and it's being repeated now again                                 and again on on other large sites as                                 they as they adopt Drupal so that's                                 that's gratifying in terms of that the                                 work has was successful it's been tested                                 and also means that to a great extent                                 the team got to figure out all of the                                 problems involved in the system to get                                 the system good the system working so I                                 was thinking do you want me to put do                                 you want me to show all of the bullets                                 and you can go one and rather than Q me                                 when it's done okay okay alright so                                 those a few of the things that were                                 going to talk about and Rebecca's and                                 gone through how things work from my                                 scrum point of view and this is going to                                 be slightly how things work forward                                 developer what's it like for the                                 development team that works at the                                 economist and we'll start off by saying                                 that we use bizarre as a source control                                 system how many people in here use                                 bizarre bizarre kind of a minority                                 people don't the economist people anyone                                 using it yeah lots of people using get                                 good and svn sorry yeah so we used to                                 use svn and we decided to move to                                 bizarre and one of the things that we                                 really liked about bizarre was the fact                                 that using bizarre we also have access                                 to a tool that goes with it called                                 launchpad so a basic workflow as Rebecca                                 said we break things into stories and                                 stories are chunks of work so the first                                 thing that we would do would be to                                 create a feature branch that's going to                                 contain all the code that we're going to                                 do as part that feature so that means I                                 can work on my branch and not affect                                 anyone else which is a good thing at                                 some point we need to actually get that                                 branch proof and one of the things that                                 might be slightly unusual about the                                 economist is that no single piece of                                 code will get made live without being                                 reviewed at least twice                                 so what Launchpad allows us to do is                                 when we're ready one when I'm happy with                                 my code in my branch I basically                                 proposed merge it and it appears on                                 launch pad with a diff and everyone can                                 log on and have a look at it see what                                 code I've produced and leave their                                 comments about whether they think it's                                 good whether they think it's ropey                                 whether they think it's a really bad                                 idea and I shouldn't have done it that                                 way at all so um our coding standards                                 internally are exactly the same as                                 Drupal core so for people that join our                                 team and we always say don't be                                 surprised if you put your first branch                                 up for review and someone says hey you                                 missed a full stock from the end of that                                 comment that's normal for us we expect                                 that and and to be honest it it works                                 for us so the process is that i will get                                 someone within my team to review my code                                 and when they're happy with it i will                                 seek one of the other teams because as                                 we mentioned we have three different                                 teams so i will seek the review from                                 someone from one of the other team so                                 that maybe someone like Judah and the                                 New York team I go hey can you have a                                 look at this code let me know what you                                 think and we have a dialogue via                                 launchpad discussing the code what's                                 good about it what's bad about it what                                 we might have done better why did you                                 consider this approach that kind of                                 thing and it allows us as a development                                 team to learn from each other and to                                 make sure that the code that we produce                                 is of kind of the maximum quality that                                 the whole team got to as a collective so                                 it's a really important and quite                                 powerful tool                                 and testament to that is is the fact                                 that we we produce code that generally                                 does not have bugs does not need                                 releases to fix and it tends to be Reba                                 robust code so it's a it's a really good                                 model if you haven't had a look at                                 launchpad I'm sure they maybe get                                 equivalent I strongly recommend having a                                 look at and checking the app so trunk                                 stage and life trunk is basically what                                 we take our feature branch branches off                                 from trunk is pristine there is no bad                                 code in trunk at any given moment at the                                 drop of a hat we can release trunk to                                 live and be confident that is going to                                 work there's going to be no problems and                                 that's kind of important it means if                                 something comes up that's really                                 critical and the site is has a problem                                 we can release probably within I'd say                                 about                                                                    out because we have that knowledge and                                 we have that certainty that trunk is                                 good and chunk is always good so stage                                 stage is a kahlua system ops guy we'll                                 talk later about our environment but                                 stage is basically identical to our live                                 site so we have a lot of testing                                 environments on the way to stage that we                                 can test things in there mainly                                 cloud-based and they're not                                 representative of our live site because                                 they can't be because they're in the                                 cloud so stage is really critical for                                 picking up those tiny little bugs and                                 glitches that might come in from a very                                 very specific environmental                                 configuration so basically how it works                                 is every Thursday we will take a cut of                                 trunk and we will push that to our stage                                 environment and then every developer                                 that worked on a bit of code that's in                                 that release will go on to stage and                                 test and make sure that that works and                                 of obviously anyone else in the business                                 can also see that environment and test                                 and make sure they are happy with it and                                 on the Tuesday following their Thursday                                 release we will actually push that code                                 to live so that's pretty much how that                                 worked testing every developer is                                 responsible for identifying the best                                 type of testing for his code so um I                                 believe judo will be talking a bit later                                 right testing earnest sorry so earnest                                 will take you through various testing                                 tools that we have but basically the the                                 choice of which tool is most appropriate                                 for that particular bit of functionality                                 comes down to the individual developer                                 and finally a vendor branching but does                                 vendor branching really really well so                                 any module that we use on the site sits                                 in its own branch in source control so                                 if we need to upgrade a module it's very                                 simple for us to take the latest release                                 or even like a check out of source                                 control and basically merge that into                                 trunk and bizarre remembers where that                                 module sits what directory it was in all                                 those kind of things it becomes a very                                 very simple operation to just merge it                                 in and that's pretty much all i have for                                 the moment so if anyone has any                                 questions like Dana said let's wait till                                 the end and that's it for me hey awesome                                 I get does you I'm just starting to work                                 on a project using using it get has a                                 review process abused github rank github                                 has a review you can do code review                                 through github yeah yeah get users                                 anyone using it that has a code review                                 process the github process yeah okay                                 okay so we'll let's talk about the the                                 theme layer the                                 The Economist theme is it's certainly                                 the most complicated theme I've ever                                 personally interacted with I try and say                                 we try and leave the theme to the actual                                 people who know so a quick overview                                 allure our team layer it's quite basic                                 actually we have two main themes one for                                 the public face website and one for the                                 admin to face actually we use garland                                 for the admin section and for the public                                 face we use a version of the                                             an abdication of it because when we                                 implemented it we do want to redesign                                 most of the components so in order to                                 prevent some issue that we adapt the                                    and we made it a little bit wider so                                 it's not that big difference and it's                                 it's working quite quite well for us to                                 be honest and everyone is quite happy                                 with it in terms of the structure of the                                 thin layer we haven't changed much it's                                 quite the default behavior so most of                                 the template files are seat or in the                                 theme folder together with the CSS and                                 the javascript files when it comes to                                 modules and announced modules we change                                 a bit the approach and all the template                                 files CSS and JavaScript files needs to                                 be placed inside module that will help                                 us to prevent having CS files that live                                 forever in our website whether when we                                 decide to disable these modules and of                                 course the downside of debt is that we                                 have a long list of CSS files as well as                                 JavaScript files but then they get                                 aggregated so it's not a big deal it's                                 also it helps us to find the specific                                 sec door styles when we need to and                                 sometimes this actually has another                                 downside that is that we have to                                 duplicate some of the styles                                 because some modules use tiles that are                                 the same as other modules and this is an                                 issue that we will try to solve and try                                 to solve in some way that is not giving                                 us a lot of repetition basically and                                 this is what it says about the modular                                 CSS about the future we are we started                                 in november two thousand ten to                                 implement html                                                        change the doctype and then with with                                 our first project about the user                                 registration we started to implement the                                 new input types new attributes for the                                 forum section of the registration and in                                 the next month we are going to start                                 changing the structure and implement the                                 new semantic tags and also try to focus                                 on them on the responsive design so that                                 will help us to deal with different                                 screen size desktop mobile and so on I                                 think that's pretty much it about the                                 same layer and how it works the                                 economists today oh okay it takes a                                 minute to do this Thank You Angelo so                                 now we're going to talk about testing so                                 part of the challenge has been                                 organizing the right kinds of tools to                                 be able to meet the needs of meet the                                 the systemic needs and also to make sure                                 that we're finding things as we go along                                 so there's been kind of a creative                                 creative bringing together of different                                 kinds of tools to try and match all of                                 the different possibilities so earnest                                 still                                 about that um yeah I'm gonna try and go                                 through the tools first and then talk                                 about how the tools work together so we                                 use selenium for our functional testing                                 is everyone here familiar with selenium                                 and we use simple test for our unit                                 testing as far as like Dom said it's                                 kind of up to each developer as opposed                                 to which tool to use for which case i'll                                 go into hand testing after i talk about                                 the tools we use grindr for our load                                 testing who here is not familiar with                                 brightener it's a grinder is a java load                                 testing framework and you write your                                 tests and Jai thon so every developer                                 has to be able to write a test and Jai                                 thon it's pretty straightforward and                                 then I'll talk about the team's sign-off                                 and for each release so those are the                                 tools we use for testing and the weight                                 and the way we use them obviously is                                 when you branch off you decide which                                 tool is going to be best to test this                                 piece of piece of functionality or piece                                 of code or whichever feature you're                                 working on and then so the hand testing                                 goes in terms of a you know you as                                 yourself as a developer tested and then                                 when it goes into your proposal on                                 launch pad obviously the tester then                                 takes in your code and runs a test to                                 make sure it runs is okay on their                                 environment and then we have the stage                                 release and so the third hand test that                                 goes on is that each developer then goes                                 in the stage environment and kind of                                 test different features are you yourself                                 go on the stage stage environment                                 because that's where all the code kind                                 of interact as a whole to see if it's                                 still working there so that kind of goes                                 unto the team sign off before each                                 release we in Hudson we have all of our                                 tests automated when you when                                 something's merged the trunk it fires                                 off a bill which then runs every single                                 selenium tests that we have in the                                 system and they all must be green before                                 we actually sign off that that that that                                 is ready to go you should be doing that                                 yourself but so that's kind of our team                                 sign-off is that you then run your tests                                 and I'll test selenium tests and unit                                 tests all run now the grinder test is a                                 little different everyone writes a                                 grinder test and we run them and we get                                 results back from them if you're not                                 familiar with grindr gives you results                                 of the mean                                 times for each of your test and how how                                 its performing that gets us kind of a                                 KPI and then we might get a message from                                 Cal you or sis ops guy who actually gets                                 that graph and he might be you might say                                 something like there's a spike you know                                 in one of the tests you know you might                                 want to look at that to see what's going                                 on there so that's a grinder helped us                                 to do is to kind of keep a baseline of                                 how the system should perform and also                                 come to help look for spikes before we                                 actually release its trunk so I think                                 that covers most of our testing I wrote                                 down some notes because I always forget                                 things so pardon me while I go over them                                 to make sure i covered everything we use                                 phpunit to fire off our selenium tests                                 that's our interface which is kind of                                 the only way to do it and also we've                                 written our own kind of internal custom                                 framework to help you know kind of                                 encapsulate the dinner functionality                                 that we want to do with our selenium                                 tests and we've also set it up such that                                 every test has a video attached to it so                                 if something does go wrong we can go                                 straight to Hudson and we can look at                                 the video to see what happened during                                 the test to try and diagnose why it                                 failed I think that's it for testing i                                 believe and i'll answer questions at the                                 end we also use it's a slightly modified                                 version of grindr which if someone's                                 curious i can go into later but that's                                 about it yeah II Judah next day so and I                                 want to reiterate one of the things I                                 know why I'm beeping here is that when                                 if I'm working on a feature branch and                                 then I merge that into trunk and then                                 the selenium tests are not all green or                                 this nor green it's my responsibility                                 it's each individual's developers                                 responsibility to figure out why the                                 tests are no longer passing and to fix                                 them so that it's a collective                                 responsibility of all of us working on                                 the code that you know that every time                                 we're adding code all of the tests are                                 still passing so which is a dance mm-hmm                                 it's a dance that's a damn it was a                                 brief period of Hell where we queued up                                 a bunch of branches but never actually                                 ran selenium tests against them and then                                 when we merge that in a trunk every                                 single test failed and so for a week                                 we're trying to screw around all fixing                                 tests and not getting a thing done                                 because                                 we have this policy that nothing gets                                 deployed unless all the selenium tests                                 are green that's why dumb has such                                 confidence that our Trump can be                                 deployed so yeah just kind of a a note                                 to keep your eye on those automated                                 tests and a warning for new developers                                 when Elliot joined our team he spent the                                 first two sprints working on anytime                                 anytime the selenium tests stopped                                 working we're like Elliot can you look                                 at the test but it's good to then you                                 know you know you know yeah okay so                                 automated automated oh this is uh yeah                                 so speaking of um selenium tests and                                 those other kind of things uh if ever                                 you guys worked in large environments                                 you know that there tends to be a whole                                 lot of scripts that you tend to run to                                 try to automate deploy all those kind of                                 things and you get your little toolkit                                 of scripts well sometimes it's a lot                                 easier and a lot more transparent to                                 have a GUI and a logging interface and                                 what ultimately what you're looking for                                 is an integrated development environment                                 and are not an integrated development                                 environment ed continuous thank you                                 continuous integration system and that                                 is what our Hudson / Jenkins / hudkins                                 is hudkins is our nice name for the                                 distribution that is Jenkins but used to                                 be hudkins regardless um basically what                                 it does is it allows you to run code on                                 your on the command line ultimately that                                 is what it boils down to you can run                                 arbitrary code you can run drush                                 commands any of you guys that don't know                                 about drush i recommend you looking it                                 up very great very good you can run a                                 lot of things that would have ultimately                                 be run on cron when we started putting                                 things into cron we found that it wasn't                                 at least in Drupal                                                    the most elegant solution at least at                                 the time we're doing things                                 everything is run in a single process so                                 if something actually like killed the                                 process everything just died behind it                                 and if you didn't fix what was killing                                 it at whatever was behind it didn't                                 actually get run and there wasn't a                                 whole lot of visibility behind it so one                                 of the things that hunkins provides us                                 is you can create jobs for each one of                                 these processes you don't have to worry                                 about handling scheduling within the                                 code because Hudkins jenkins handles all                                 of this scheduling it handles all of the                                 workers it'll make sure that none of the                                 processes run in concurrency so if you                                 have a long process that every once in a                                 while let's say it's indexing your site                                 and it goes beyond let's say the hour                                 long it'll make sure that it doesn't run                                 that process twice which is really                                 important because you'll end up indexing                                 things twice and doing even more work                                 and it'll start to build up so like I                                 said I it allows us to be able to run                                 jobs independently so for example one of                                 the things that we do is our content                                 producers create content in there you                                 know proprietary economist branded                                 application and then and then we pull it                                 down through from cci into our website                                 well all we had to do is simply create                                 ad rush command for running the import                                 into our system we've done other things                                 where we we index our search we can even                                 deploy the deploy process will probably                                 be talked more by our sysadmin but we                                 have things for every step of the                                 process the deploy that can all be done                                 using a GUI so that we can see the                                 output we can compare it against what                                 we're expecting there to be emails get                                 sent out if things fail I mean in                                 general having this system is a great                                 idea should I talk more when you see                                 tasks custom dress commands drush is a                                 great thing                                 one of the things everyone loves dress                                 up DB it allows you to be able to                                 upgrade your modules and if you deploy a                                 lot of times the deploy process will                                 update modules but one of the things we                                 did find was we don't always want to                                 take down the site when we want to run                                 these long running processes so usually                                 when you're you're doing an FD be you                                 have to take down the site and then you                                 run the update be check everything out                                 take the site back up well one of the                                 things that we found out is all you have                                 to do is really run or create a custom                                 drush command so if you want to run                                 something in the background just created                                 rush command you can even throttle it if                                 you want if you're worried about the                                 performance and that gives you an                                 opportunity to run the command to let's                                 say import something or update some data                                 may be poured it from a legacy system                                 all while the site remains running so                                 yeah drush has been in an integral part                                 of our system thank you it takes a                                 minute from my microphone to come back                                 on again yeah one of the awesome team                                 the first time that this weekend huge                                 for us is that we were integrating                                 topics so that when you enter the                                 Economist you could look at a topic and                                 then see articles related to that topic                                 but that meant every article had to be                                 sent to a third party vendor who then                                 you know gave us back the topics that                                 were related to it and then that had to                                 be saved and that's not something that                                 could be done every time an article is                                 saved that had to be a whole back end                                 process and by using a custom drush                                 command I'm getting it out of chron                                 meant we had control and using a custom                                 drush command is if for some reason we                                 needed to send just one article we could                                 just put in the node ID of that article                                 or we can send them all you know so                                 that's an example of back-end processes                                 as Judah was saying like anytime you                                 have to run one instead of putting it in                                 the whole cron task thing and you can                                 also add selectors right to make it to                                 make it different and you can stop it if                                 it's broken not necessary thing else up                                 yeah um also in addition to like just                                 writing josh commands                                 like that we we run our our test                                 environments through Hudson as well so                                 dumb i believe mentioned we have test                                 environments we have our local                                 environments we have our trunk                                 environments we also have what we call                                 our HT eyes which are human tests inter                                 instances where we can take any of our                                 feature branches and create a version of                                 our website with it with a database with                                 the the source code of that branch and                                 then pull it up on a web browser and                                 have our product owners look at it sign                                 off on it have our UX sign off on it and                                 make sure that all the CSS is showing up                                 correctly in in addition to that if we                                 want we can run any automated tests                                 against it so all of our selenium tests                                 and simple tests can run against the                                 environments as well yeah so we'll talk                                 about the infrastructure now which Cal                                 you will who keeps us up and running and                                 reminds us when a query is wreaking                                 havoc and we all he'll he'll send the                                 email to everyone it says you know we've                                 come across a query that's starting to                                 back up and all of the developers they                                 scroll down very slowly because you're                                 just really hoping that it's not the                                 table that you added last sprint so                                 right so um I'm going to give a very                                 brief overview of the infrastructure                                 that we have to run our production                                 production system so coming from the                                 customer side we we use the CDN to                                 deliver all the static content like the                                 images JavaScript and then CSS files                                 then we have a hardware our load                                 balanced solution and we then have to                                 varnish reverse proxy servers to cache                                 the content then the request goes back                                 to the alert bouncer and is balanced                                 across                                                                                                        do have a memcache layer and the                                 database layer just to go over the                                 numbers we have to varnish servers um                                    web heads and four database nodes so one                                 master database server and three slave                                 servers um so it's a pretty pretty                                 actually standard set up we also have a                                 similar setup for the i cannot again                                 smaller amount of servers but the                                 structure is the same for the staging                                 environment and we also have my dr                                 environment that we replicate our data                                 to and that in case of a disaster we can                                 then switch to this is a disaster                                 recovery site um and that's pretty much                                 it we use arm Jenkins then to automate                                 all the building and deployment so                                 deploying to our staging and production                                 environment is basically just pressing                                 arm couple of buttons in the Jenkins                                 user interface and then that's pretty                                 much it okay and performance and so                                 we're at                                                             another                                                                 we're doing good in terms of times                                 dude are you talking performance I love                                 the spotlight yeah okay so let me first                                 read my notes real quick okay so um I                                 this is that near the end of the the                                 drupal week so many of you guys probably                                 already heard a lot of sessions about                                 how to scale Drupal and how to make it                                 perform like a rockstar basically most                                 if not all the things that you heard in                                 those sessions we were also figuring out                                 the hard way at the same time so um you                                 know normal drupal install it's fine                                 it's great it's great for shared                                 environments we started building our                                 site on Drupal                                                           improvement one of the things you figure                                 out really quickly is you need things                                 like memcache and you need things like                                 master slave database so immediately we                                 knew right off the bat that we needed to                                 go with a different distribution of                                 Drupal                                                                  called press flow basically it's                                 actually has some patches similar to                                 Drupal                                                                and it offers things right out of box                                 like the master slave replication and                                 also patches for mem cache of course                                 anyone who runs a server a pc is kind of                                 a de op cash there's no need to actually                                 compile your PHP for every single                                 request it's just something that if you                                 haven't looked up do it it's no loss                                 very easy to set up so basically yeah                                 the key to any kind of an environment is                                 any kind of scaling is layers of caching                                 so as we said there's the CDN and then                                 you go back down and you hit the varnish                                 and almost all of our anonymous is                                 served directly out of varnish and                                 varnish can scale it can go thousands                                 millions requests we haven't even begun                                 to get to tipping over varnish but                                 there are times where you need to let                                 people through their authenticated or                                 they've done some kind of action which                                 potentially they need something                                 different about the page so let's say                                 you get through that page you have                                 beautiful things like drupal page cache                                 and the block cash and those kind of                                 things that that was built into Drupal                                 and you know you got to take advantage                                 of sometimes things don't always follow                                 that doesn't hit a view so you can't use                                 view cash perhaps the person has logged                                 in so they need to see things                                 immediately so Drupal has its own API of                                 cash layer you know you can just use                                 cash get cash set and make sure that any                                 specific query any specific rendering of                                 HTML can also be wrapped in a in a in a                                 cash set basically one of the problems                                 that we found though in addition to what                                 came just out of the box is we needed                                 something in between the node cash which                                 kind of caches the structure of a node                                 and the content of a node and the actual                                 page cache which caches everything so we                                 actually came up with this and i think                                 is praying novel it's we call it AC cash                                 but basically it's kind of like the                                 rendering of the node cash and we've                                 actually extended it so it can render                                 any end points if you will so all of you                                 guys who have built a menu hook you set                                 up an in point and that endpoint                                 basically outputs something so we hook                                 into that menu hook and we basically                                 cash whatever would have rendered and                                 the great thing about this is you can                                 tweak it for how you cash it so in the                                 same way you can cash based off of a                                 role you can cash it for the page the                                 URL or you can cash it globally so this                                 allows us to possibly even cash some of                                 our are highly hit pages out like we                                 have our our sub-indexes we call them                                 channel pages and our home pages that we                                 just want a cash like we don't care if                                 you're logged in we don't care                                 if you're not logged in we want that                                 cash because we can't afford to recreate                                 that that node millions of times in a                                 day so so that that provide us an                                 opportunity and and they're given takes                                 of that that we we had to stumble                                 through and figure out you know if                                 you're not actually rendering a node you                                 got to kind of jump through some hoops                                 to make sure you're also storing with                                 that node not just the HTML but any                                 other components of the page that is                                 being injected into it but it has been a                                 great help it has helped us to be able                                 to scale the site up one of the things                                 that we have played with and we are                                 going to continue to implement is edge                                 site includes it is part of the Akamai                                 network and also part of varnish that                                 you can cash the page and not a portion                                 of the page or don't pass a page maybe                                 the page has to be an authenticated so                                 you can't cash it but you know maybe the                                 header or the footer or something                                 doesn't change this allows us to kind of                                 handle the caching differently for                                 portions of the page so yeah some of                                 this stuff we found out the hard way but                                 in the end drupal can scale it's just                                  how you do it and you have to do it                                  smartly and you have to make sure to use                                  a layer of caching yeah the one of the                                  things that I was saying is going from                                  working on smaller sites to working on                                  the Drupal site was that caching used to                                  be did you clear your cache in your                                  browser that's why you're not seeing the                                  change to every at every level from code                                  writing to page you you're always                                  thinking caching always always always so                                  so we're we're two minutes from where I                                  wanted to stop for questions but we're                                  going to go into that a little bit                                  because of course one of the questions                                  that comes up all the time in talking                                  about the Economist was it was migrated                                  from from cold fusion site                                  and it took a bit longer than it was                                  originally intended to take and this                                  question comes up all the time which is                                  how come it took you so long and part of                                  the answer is because and I think this                                  was very smart that the attic adding                                  business value constantly during the                                  migration process integrated together                                  right so that both new feature                                  development and migration were going on                                  at the same time and recently the                                  migration has been completed so JJ is                                  going to walk us through the steps to                                  how the migration to how the migration                                  happened yeah ok so I've got two minutes                                  to do this so we started to migration we                                  finished and done ok now and what we                                  actually did is instead of going for the                                  full Big Bang everything all at once we                                  did it in steps so we took the comments                                  and things like the recommends and move                                  them to migrate to Drupal then we did                                  things like the articles so on The                                  Economist websites all article pages so                                  what you're actually hitting for about                                  two years was a cold fusion site but                                  then every time you went down to an                                  article you hid in a Drupal site so it's                                  a bit confusing for the end person but                                  they didn't notice because we've got                                  everything styled the same way then for                                  the final part we did the users that was                                  quite a large system for the economies                                  because we have subscribed details which                                  come from various the parties we have                                  two or three different third parties                                  which can do subscribers we also had                                  things like coming along like the iPhone                                  the Android apps all of them wanted                                  details and access and subscribers                                  various other third parties that also                                  feed off the Economist user database so                                  that was the largest one hence why                                  that's now done we've shut down the old                                  system and willfully on Drupal as we                                  were doing this though what you actually                                  notice is we did the articles two years                                  ago people are still editing the                                  articles up until about six months ago                                  on the old system so though the end                                  users were viewing the articles in                                  Drupal editors were still automating                                  changing                                  in the old system so we have to have a                                  continual synchronization process which                                  took any changes from the old system and                                  migrated em across and how we did this                                  was we wrote our own custom modules to                                  get the data out of the Oracle database                                  and move them across but we also use the                                  migrated and the table Wizards so we                                  could just pull various data across from                                  our Oracle tables which we pulled into                                  the my sequel and translate them                                  straight into them my sequel tables for                                  Drupal so the actual articles were and                                  now we're talking about the Denver mount                                  and this is very nice if you want to go                                  skiing here okay so um from a this kind                                  of throws you doesn't it he did                                  deliberately just for me so when we were                                  migrated and tools were using with the                                  Drupal my great tool vote by I think                                  curve motion CO and the table wizards                                  once we then migrated we turned off our                                  synchronization process because we were                                  only on Drupal for articles we kept it                                  going though for the users because the                                  users were still coming across so when                                  you went and subscribe to The Economist                                  we're going to the old system pulling it                                  across when we were getting towards the                                  end it was case of all teams come                                  together so as you noticed early we have                                  three teams geologically located around                                  the world for the last probably three                                  months everybody was working on the one                                  thing to kill our old system so                                  everybody took a different part be it                                  creating in next page creating a job                                  site everything got moved across to the                                  new system and that's kind of why it                                  take took three years about three years                                  so now we are two three weeks into the                                  about three weeks four weeks we've been                                  pure leavening on solely Drupal the on                                  the morning when we actually did our                                  code release which was a Tuesday we                                  released the code about nine o'clock and                                  by about half nine all of the old                                  servers were turned off decommissioned                                  completely nuked so there was no game                                  back we were going forward and that's                                  where we are yeah that was a boring day                                  wasn't it a boy yeah yeah not so much                                  because it's a geological location the                                  guys in the States came in and it was                                  all done dusty no panics there's a                                  boring day for us it was good for you                                  yeah so now I think we're about to open                                  for questions okay yeah so we're open                                  for questions eric is there anything                                  that you want to add before we do                                  questions he's good okay all right I                                  think questions are probably more more                                  what we want to do so let's see                                  questions questions I will hear you know                                  what we'll do we'll go like that well                                  it's a very easy question how many                                  models are using on the economist side                                  and what yeah I've contributed modules                                  or custom modules oh ok yeah so how many                                  modules is what seven million four                                  hundred ninety two thousand does anyone                                  know the exact number i believe about                                     or                                                                      both together both together I think                                  contributed around                                                     I'm doing that reorganization folder                                  right yep yeah okay on that order                                  probably fit about                                                        half our custom halfer contributed it is                                  I said about                                                        contribute it                                                           there there's a lot of custom a lot of                                  custom code a lot a lot that's yeah a                                  lot yeah so you have subscriber only                                  content on your site yeah yeah I'm so                                  you have to have athletic AC juice or                                  logged in subscriber roles how does that                                  affect your performance when they come                                  to look at articles that only that they                                  have to be checked on against the                                  database basically so you're asking                                  about authenticated users who come                                  through who have a subscription we yeah                                  they're really just authenticated users                                  because they have a role and that role                                  allows them to subscription if you                                  actually probably the paywall                                  I will probably talk more to this but we                                  have a paywall also but so yeah so there                                  are there authenticated users oh we have                                  a fairly small percentage of people on a                                  regular basis that are coming in a login                                  state a lot the bulk of our traffic is                                  anonymous if that shifts dramatically                                  we'll probably have to take some                                  different views including you know some                                  of the es is and the way we cache                                  different parts of pages but right now                                  it's a low percentage of people view the                                  site in an authenticated state you know                                  maybe using varnish a different way or                                  ES is particularly ya so now it's                                     minutes right a varnish the expiry time                                                                                                            question is are do you too it's a team                                  uses some project management system and                                  how do you meet the worker assignment                                  thank you ok the when Rebecca we were                                  you Rebecca is our scrum master and we                                  use agile do you want to say a little                                  bit um was it question about the tools                                  that we use ok um like I said we we use                                  a we use his scrum which is an agile                                  project our product development                                  framework as far as the actual tools                                  we've gone very low Phi and we mostly                                  use Google Docs to we have a backlog of                                  what are all the features and that's                                  that's in a Google spreadsheet we do                                  burn down charts with with spreadsheets                                  and Google and basically we also use                                  that as a wiki for for documentation                                  we've looked at it and we've tried a few                                  different tools for for organizing and                                  we found that the time it took to update                                  them often wasn't worth it as far as                                  the day to day of the team of who's what                                  we're working on with the teams in in                                  New York for instance we just use a task                                  board a physical task board with post-it                                  notes so we just list out what are the                                  what are the user stories are the                                  features that we've committed to for it                                  for that two-week iteration and and and                                  it's very low Phi it makes it we do the                                                                                                          that boards updated and move things                                  across so it means that we don't spend a                                  lot of time updating updating a tool and                                  more time just everyone talking together                                  and and it's very transparent where                                  things are it also helps because then                                  other people in the office can walk                                  around and and they can see exactly                                  what's being worked on for the Austin                                  team because some of them were remote in                                  Austin and some in New York we do that                                  task board on google docs as well we                                  just make a very very simple spreadsheet                                  of stuff that hasn't been started not                                  started in progress and done and very                                  very simple yeah Eric um we use one                                  photo for but for bug management yeah                                  okay okay I think how we do two more                                  yeah um how do you work with estimations                                  as too hot you plan your job how do you                                  reach an estimate that you trust sure                                  this is something that we do with agile                                  scrum we use the concept of story points                                  which is rather than getting into the                                  trap of trying to estimate exactly how                                  many hours or how many days something's                                  going to take the the product owner will                                  put together here's here's a description                                  of what we want we work with the team to                                  make sure that's clear have some                                  conversation about it and also come up                                  with a what we call how the demo                                  description of like this is how if you                                  went through these steps basically it's                                  like the uit steps of what a user would                                  do                                  and we get together with the team to do                                  a session of what we call planning poker                                  and we sighs it basically it's relative                                  sizes on the Fibonacci sequence so it's                                  like                                                                      them we give them relative sizes for for                                  each slice of functionality that we're                                  looking at and with that we we take into                                  each two weeks what we think we're going                                  to get done and after you've done a                                  couple of Sprint's you get an idea of                                  like how much you can get done and and                                  you only take in that number of points                                  it gets us out of the game of like what                                  exactly how many hours but more of                                  what's the relative the relative effort                                  and the commitment is then at in the                                  planning of the team says okay based on                                  this whole conversation we've had and                                  what we understand the relative size of                                  these things then we commit to getting                                  these things done in the next two weeks                                  and that's that's the commute for                                  planning and forecasting I mean when you                                  go with an agile approach you can manage                                  to time where you can manage to feature                                  set so if the feature set is a minimum                                  feature set you want then you have to be                                  flexible in the amount of time it takes                                  to deliver if you want to time box it                                  then you have to be flexible in what                                  you're going to deliver so for the past                                  couple years we've we've kind of                                  delivered on a minimum feature set and                                  then said oh ok it looks about done for                                  our next round of development we're                                  going to be looking at more tightly time                                  boxing it and the idea is to really get                                  the teams and the product owners to                                  really think about those bits of                                  functionality that's that are going to                                  deliver the most you're the biggest bang                                  for the buck in our experience you know                                  the Pareto principle actually works we                                  get through about you know when we've                                  gone and done these extensive huge                                  backlogs of everything we can think of                                  to do we usually get through around                                  twenty percent of it and we wind up                                  chucking the rest away so the thing                                  about that is there's there was time and                                  effort in that bottom twenty percent so                                  we're                                  to try and approach this time where we                                  say okay you know you've got a budget of                                  four Sprint's or eight weeks you know                                  what are the really high value features                                  that we can do and can we get a viable                                  product out and kind of challenge                                  ourselves that way and that's how we try                                  to manage expectations upward as well                                  okay unfortunately we're at we've                                  actually used extra time right we're out                                  of time you know an hour yeah so                                     great because we started at                                               is when we're supposed to end for coffee                                  we're keeping you from coffee and look                                  you have stayed with us so thank you                                  very much you know this they found out                                  yesterday afternoon at like four in the                                  afternoon that they were going to be                                  doing this today and I think they did a                                  phenomenal job and the great man you for                                  coming
YouTube URL: https://www.youtube.com/watch?v=eekiXy9fBD4


