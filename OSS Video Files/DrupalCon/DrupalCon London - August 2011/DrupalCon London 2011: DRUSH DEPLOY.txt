Title: DrupalCon London 2011: DRUSH DEPLOY
Publication date: 2013-03-23
Playlist: DrupalCon London - August 2011
Description: 
	Presented by
Mark Sonnabaum
Moshe Weitzman
From small sites to large, drush is an essential tool in a drupal deployment strategy. Many of us are already using commands like rsync, sql-sync, features-revert, and updatedb as steps in our deployment workflow.

Tools to manage deployments however are often varied (capistrano, fabric, puppet, chef, hudson, etc), and foreign (ruby/python). In this session, the maintainers of drush will introduce a new tool for managing deployments: drush deploy. This tool does some of what those tools do, all in a comfortable drush and PHP environment.

Intended audience
All developers and sysadmins.

Questions answered by this session
How can drush help automate tasks during deployment?

Why should I be using a deployment tool?

What is drush deploy?

How can drush deploy simplify drupal deployments?

Who is drush deploy best suited for compared to other deployment tools?
Captions: 
	                              I'm marks on Obama technical consultant                               that aquia dreko maintainer and this is                               most Weitzman also a Takuya and deep                               brush maintainer that's today we're                               going to talk about a framework recently                               built called rush deploy that should                               help you to deploy Drupal apps the first                               not a lot of people especially in the                               Drupal community use deployment tools                                there are many that exists already but                                basically it deploys your code and also                                does some other stuff but really the                                focus is it deploys you code there's a                                lot of different things that go along                                with deployments and I'll get to how you                                do those later but the important thing                                is this get your code on the server                                three popular frameworks Capistrano                                capistrano is definitely the probably                                the most popular fabric and the Python                                community lots of Django people use that                                pantheon actually uses that Vlad the                                deployer is another Ruby one is anybody                                here using any of these three okay some                                very few all copies run or anybody not                                Capistrano                                okay cool                                so more importantly what doesn't the                                deployment framework do it doesn't                                employ content if you were here a couple                                sessions ago for the deploy a model                                session that deploys content so that's                                where you'd want to look for that                                doesn't install packages or manage comps                                there's a lot of overlap here with say                                configuration management tools like                                puppet chef be config some of them will                                allow you to also deploy applications                                some people do that it's a little more                                overhead than a lot of people need for                                deploying applications i personally like                                to keep those two things separate                                doesn't manage sub modules I say that                                because there's also a little bit of                                overlap here with dog there's an                                asterisk on that one but it doesn't do                                anything automatically to say any of                                your sub modules for you yeah I say sort                                of because you can kind of do all of                                these things in the framework if you                                want but it's not really the main focus                                so why you use a deployment tool                                using the using the techniques here you                                can get near instant no downtime deploys                                I put a big a strict on that because and                                especially as a near instant because                                it's possible to do instant right but                                the idea is you do a new deploy and you                                switch over from the old one to the new                                one as the site's live some sites can do                                that not all can you might be in a                                situation where you have some tasks that                                need to run that are going to take a                                while and you might need to go into                                maintenance mode I do that as I need to                                but if you don't need to do that like if                                you know you're pushing a deploy out it                                doesn't have you don't have to run                                update DB or you don't revert features                                anything most of my deploys happen live                                with no maintenance mode no rollback is                                another really important feature and i                                should say first a lot of these concepts                                are in all the other deployment tools i                                talked about before but having the                                ability to instantly rollback a                                deployment if anything fails is very                                valuable and version control is not a                                deployment tool so that may seem like a                                silly statement but right now if you if                                you say clone your git repository into                                your doc root and then your deployment                                is git pull that's not I wouldn't                                suggest that as the deployment strategy                                it's not made for deployment so things                                can happen because it's a version                                control system it can do its job and say                                show you merge conflicts and then you                                can end up with a broken site there are                                probably some asterisks around that but                                in general I would just say it's not                                really a good idea and you shouldn't do                                it now a little bit about Capistrano                                this is actually what I use most of the                                time it's awesome I don't really have                                anything bad to say about it there are                                some Ruby on Rails assumptions it was                                made specifically for rails by one of                                the guys                                                                 with a with using it with an on Rails                                 application you just have to override                                 some of their tasks so that it doesn't                                 they try to one of the tasks is restart                                 so after you deploy your code you                                 restart the web server but that isn't                                 really relevant for us right so we have                                 to then override those so they don't do                                 anything which is a little silly and                                 it's the hard system to get going for                                 non rails app sometimes because those                                 things aren't obvious there is a gem                                 called rails list deploy that does that                                 stuff for you but it's a it still                                 doesn't exactly make it that much better                                 it's a dreadful play                                 to deployment framework built on brush                                 as address extension I say it's heavily                                 influenced by cops Toronto I definitely                                 mean it basically all of the                                 functionality that I thought was                                 relevant from Capistrano I built into                                 this using all nearly identical method                                 because like I said I don't really have                                 a problem with Capistrano it's really                                 nice and I think the default merge                                 strategy that it uses is really smart                                 and works for the vast majority of sites                                 out there now you might ask if                                 Capistrano so great why should we do                                 this the number of hands that went up                                 when asked about deployment tools were                                 pretty low and so although Capistrano                                 has been out there forever and it's                                 stable and it works none of you are                                 using it so I think there's something                                 there and we have a lot of tools                                 nowadays if you have to know Apache                                 varnish memcache solar the list sort of                                 goes on and on and on adding one more                                 like Capistrano is sort of the breaking                                 point for a lot of people so we already                                 used rush and also a lot of the concepts                                 within Capistrano we already have in                                 brush so we get a lot of things for free                                 we just have to build the deployment                                 part on top of it also what what a                                 deployment framework does is actually                                 really simple and right now I mean it's                                 not that hard to deploy a Drupal site                                 but everyone pretty much does whatever                                 they do from scratch they come up with                                 their own bash scripts and it's not                                 something that you should have to                                 stumble over and then find all the                                 problems with yourself it's there are                                 definitely a couple different ways to                                 deploy a site that worked for many many                                 people and so we should have a way to                                 simply do that                                 now little on how it's built its PHP                                     only is anybody here still on                                        unable to move                                 alright that's a surprisingly small                                 number if everyone's being honest yeah                                 it's                                                                  Drupal so we don't really have to adhere                                 to the the PHP version we're using and                                 we use a lot of kind of neat                                             that helped along the way he's                                 converting converting a lot of the what                                 was in capture on oh and Ruby to PHP was                                 hard enough and some of the things in                                    made it a little bit easier right now                                 it's only get I did that in the                                 beginning just to make things simpler                                 but in hindsight that was probably not                                 that smart because that I'm sure many of                                 you are still deploying from non get                                 sources so that's something that's not                                 in there now but the source control will                                 be swappable soon and I would love help                                 once I make it swappable I would just                                 have to have some help would say like                                 subversion backends if anyone is still                                 doing that and society Elias groups who                                 uses site aliases right now okay great                                 how many of you know about side alias                                 groups then you are yeah fewer so this                                 is another one of those features and                                 rush that no one uses that's really cool                                 you can actually have multiple aliases                                 in the same file and then when you                                 specify that alias you actually are                                 calling all of them at once and that's                                 sort of an essential feature here                                 because when we're deploying we could do                                 be deploying across multiple servers it                                 also makes heavy use of dress options so                                 if you haven't used it yet there's this                                 really really handy file called drew                                 char see if you haven't copied the                                 example in its in home brush brush RC                                 PHP deploy uses its own so you need to                                 make a deployed rush hour c dot PHP and                                 you put all of your deployment                                 configuration in there or you can                                 actually put some of it in your side                                 laces file in the command specific part                                 that you've used up                                 now this is the basic idea of how this                                 deployment strategy works here's the the                                 you set where it actually deploys to you                                 on your server and right here it's                                 saying it deploys to deploy right it                                 sets up releases and shared shared is                                 where you put things like your you put                                 your files directory there you can put                                 settings up PHP that's where it's going                                 to that's where you have resources that                                 are going to apply to every release that                                 don't necessarily change releases you                                 can see has time-stamped directories of                                 every release right so when you deploy                                 it creates a new copy of your site in a                                 timestamp directory and you can see                                 current is pointed to the last one now                                 the idea is you point your Apache TV                                 host or whatever V host to current all                                 the time so then when we deploy if                                 everything goes okay we change that                                 symlink to point into the next one so it                                 flips over automatically and you don't                                 have to do anything and then it's still                                 there if you need to actually revert                                 back to the old one so in the interest                                 of showing things actually happen let's                                 demo this                                 so just to give you an example if you                                 have not used rush aliases before this                                 is all the information I need in my                                 alias so just pay attention the first                                 one basically I'm just saying there's                                 two here this is where a Drupal is                                 deployed to this is the user to ssh in                                 as and that's the host and this is                                 identical I just changed the host so to                                 point it to ec                                                      so first I would you'd rush                                 deploy set up and then you tell it at is                                 the name of that aliases file see you                                 right there and that references both at                                 once if I wanted to do one I would do a                                 cf                                                        and so you can see the commands Iran and                                 just set up those directories that I                                 showed you before and there's also a                                 brush check or I mean deploy check and                                 that'll go through the go through the                                 current dependencies to make sure that                                 everything is in place so that you can                                 deploy so check that those directories                                 existed it check that they were writable                                 and it checked that gate exists the get                                 check was done by the strategy the                                 deployment strategy which is a class                                 that is swappable the one I'm using uses                                 get and so it added the dependency to                                 check for that so whatever strategy you                                 use you can add your own dependencies to                                 check to make sure that everything will                                 work and let's do a deploy deploy                                 that's right now it should the poi here                                 and there's obviously nothing there                                 and hopefully there will be a website                                 here now yay                                 okay and so now actually let's take                                 parking lot machine                                 okay so this is what I've shown you                                 before current is now pointing to that                                 and there's releases and there's one                                 thing in releases there's actually                                 nothing in shared but let's go ahead and                                 do it one more time so we have another                                 one                                 okay so say something went wrong with                                 that one and you want to actually go                                 back to the other one you can do deploy                                 roll back                                 and now current is pointing to the                                 previous deploy so that you would use if                                 if something happened after I actually                                 explained the you can have tasks that                                 run before or after different events in                                 the deploy one of the events is the                                 symlink when you tell something to run                                 after symlink that means run it after                                 the deploy successful so at that point                                 the drudge deploy cannot roll back for                                 you it went into text an error because                                 you've already actually deployed it out                                 there and so if you say ran update DB or                                 something after that that failed that's                                 when you probably just want to manually                                 rollback but if anything happened before                                 symlink and if any of that failed it                                 would actually automatically roll that                                 back and never finish the deploy which                                 is kind of a nice feature                                 oh and also after a while you can end up                                 with a lot of these releases in here                                 I'll show the configuration file                                 one of the configs here is keep releases                                 and so change that to one and then after                                 a while you can do cleanup                                 and that will basically get rid of                                 however many releases are in there that                                 ya know old releases to clean up because                                 we already rolled that back it'll get                                 rid of however me and where you only                                 have whatever number you specified there                                 at current at a given time it's unlikely                                 you'll want to have all of them there                                 forever and if for the few capistrano                                 users in here this probably looks very                                 very familiar all of those commands are                                 directly from cops from so a little bit                                 about how this works as a dress                                 extension how many people here have                                 written custom drush commands not                                 necessarily like contribs so part of                                 doing this was it was an idea i've had                                 for a while and i wanted to wanted to                                 see how we could do this in rush i had                                 it but i also need there was a couple                                 things that we needed for it that we're                                 going to potentially require changes to                                 dress for the things that we could send                                 upstream that would make writing                                 extensions easier so it's a bit of an                                 experiment and how to how to write this                                 kind of an extension and what we can do                                 to drush to make it better so one                                 example is the idea of an alias as an                                 argument so for those of you who have                                 used aliases the first way there is how                                 you'd normally do it it's rush alias                                 than a command what that does that ssh                                 is into that machine and then calls                                 drush CC all there's no way with how                                 those aliases work to just send it a                                 command and so in my case most the time                                 i'm making directories i'm checking if                                 the right a bowl i'm doing get clones I                                 don't want to have to use brush to do                                 those things on the other end that                                 doesn't really make sense really all I                                 want to do is get the information from                                 the site alias so then I know how to SSH                                 into that machine then do whatever I                                 need to do so the second example is how                                 that works the only example of this in                                 core is sequel sink right                                 yes yeah and so if you've ever used                                 sequel sync it's like drush sequel singh                                 alias alias that's an example of a alias                                 as an argument but right now when you                                 when you have a command that takes an                                 alias as an argument you sort of have to                                 do a lot yourself you have to do the                                 parsing of the aliases yourself and then                                 you have to figure out what to do with                                 them and in deploy there's a there's                                 sort of a framework built inside to take                                 all those aliases and then whatever                                 commands were given to it it just runs                                 them on all of them unless it's                                 specified to run on only one of them                                 another issue is as I explained before                                 you have group aliases and then you can                                 execute something across a bunch of                                 Group A laces but we do them can right                                 now we do them one after another so                                 that's a bit of an issue in the                                 deployment because if you have say                                                                                                           triple conference application servers                                 and patching servers whatever when he                                 gets to the last step to flip the                                 symlink you have to essentially ssh into                                 all of those machines one after another                                 and then you have this weird rolling                                 deploy thing going on so one of the                                 things we had to do was add concurrent                                 command execution and if any of you guys                                 were in the dress session in Chicago you                                 some people I demoed this there and we                                 had a patch that was going to go in we                                 did a lot in the in the back end part of                                 drush especially with now we have the                                 ability to see command output as it                                 happens so that patch doesn't really                                 apply anymore so I recently refactored                                 into this so it exists in deploy and                                 then that's intended to go upstream but                                 they does do this now it actually keeps                                 all these commands in parallel                                 now here's what the configuration file                                 looks like so the application name all                                 that really does is specify a directory                                 to deploy it to so that you could                                 potentially have more than one deploy on                                 the same box deploy a repository you                                 just tell it where your repository is                                 keep releasing so I was showing branch                                 branch master just beans no matter what                                 you or every deploy is just going to                                 take whatever is in master right so for                                 every group of aliases you'd have it                                 gives QA production you just change that                                 to whatever it is you can also put a tag                                 in there if you ate two although there                                 will probably be an option seemed to                                 just specify a tag on the command line                                 since you're more likely to do that in                                 production deploy via is the is which                                 strategy you want to use right now the                                 only strategies are remote cash and                                 check out which the only difference                                 really there's no functional difference                                 it's just one's faster because it                                 catches the git repository I'll talk                                 about the Eleanor's a little bit more                                 like a second deploy to tells it where                                 to deploy the application to this after                                 stuff I'll show you how that actually                                 works in a second but what that's                                 telling it to do is after deploy sibling                                 it runs the task called sibling shared                                 and then after deploy setup setup files                                 this is the way that you can attach your                                 own custom functionality to the existing                                 deploys since what deploy actually does                                 by default is very very simple and                                 everyone's going to have different                                 things they need to do so this is the                                 way you attach advanced to this and                                 here's an example of a task now this is                                 a concept very familiar to people who                                 have used rake or especially fabric it's                                 not in rush right now and I developed                                 this in a in a bubble and without the                                 other trash containers input so this                                 isn't exactly like going to go into rush                                 but if we can convince motion maybe it                                 will it's sort of in between a rush                                 command and say just a script that you                                 use with rush                                 scr any function you do you put in your                                 RC file and you put task in the block                                 above it i parse those and then make                                 those available as tasks it may seem                                 really dirty to put say meta information                                 like that in the doc block but we're                                 using PHP so if you haven't except the                                 dirtiness yet you should this concept                                 comes pretty directly from languages                                 like Python that actually you can have                                 that at whatever and it's decorator it's                                 a really elegant way of doing this and                                 in PHP we just have to do it and get                                 away and I'm okay with that you should                                 be too and so you can see each one of                                 these gets an actual copy of the deploy                                 object and then you just run whatever                                 you need to on that and so this is an                                 example all setup files as an exciting                                 but similarly shared so you can see                                 after the after the deploy happens after                                 the same link happens this now also                                 symlinks the settings dot PHP file and                                 then symlinks the files since those are                                 likely if you have multiple Apache                                 servers you're going to want to have a                                 shared files directories that's probably                                 on NFS or something or some kind of                                 mount and then that's where you you                                 symlink it and I have on the one I just                                 showed I also have some link doc rude in                                 there yeah because my my current are                                 actually my repo actually has doc fruit                                 the sources and dr. not in the root of                                 the repository basically that doesn't                                 matter but the point is you can do                                 whatever you need to do in these so if                                 you do say want to install some packages                                 I guess you could do that you can do                                 whatever you could do normally over ssh                                 and now before I showed like the before                                 after stuff in dresher RC you can also                                 do it in the back buck there which makes                                 a little bit easier                                 and so                                 aside from custom tasks you can also do                                 you'd rush tasks right so it's really                                 common to do say like update DB or                                 features revert all after a deployment                                 and so deploy will come with a bunch of                                 default tasks since you shouldn't have                                 to then make a custom tasks for all of                                 the typical drush commands you have so                                 this makes                                                               also says run one's any task or any part                                 of the deployment you do is going to run                                 on all the servers you don't want to run                                 up DB on all the servers right or if you                                 have features of raw raw raw lore                                 basically anything that touches the                                 database you only want it to run on one                                 and so if you specify run once it'll                                 only run on the first of the set of                                 servers Capistrano if you know does                                 support actually specifying like roles                                 of servers or like a specific host there                                 I met I'm a support that if if there is                                 need for it I've never really had a need                                 for that so I briefly mentioned                                 strategies before so the check out in                                 remote cash for their remote cash just                                 keeps a cached copy of the repository so                                 every time it you do a deploy it doesn't                                 get pull on that and then it just copies                                 that into that new directory which is                                 way way faster than just cloning every                                 single time especially if you have a big                                 repository that's what check out does                                 now those are all they essentially do                                 the exact same thing right but because                                 that's completely swappable and without                                 the strategy class deployed does very                                 very little almost nothing right so we                                 do have the potential of having like a                                 make a dress make strategy or ager a dog                                 and then even devcloud and pantheon once                                 they have API is to say do what you                                 normally do in their UI to do                                 deployments you could also plug it into                                 here so you could have a command-line                                 way to do those the deployment on those                                 platforms since you may want to script                                 that anyways                                 and if you just wanted to have if you're                                 doing something would get or you just                                 really didn't like what deploy was doing                                 you could just make your own they're                                 relatively simple so any questions                                 yes                                 question is does it only deploy full                                 sites or is also deployed multi sites                                 right so that's something that you would                                 set up you'd set up in your custom tasks                                 like it depends what your repository                                 looked like right so say one example                                 would be you might have if is a typical                                 multi-site setup say you have your                                 repository is just that sites directory                                 for that other site then you would just                                 change the deployed to directory to                                 deploy within the site's directory of                                 your parent repo and then you'd have it                                 make the symlink for that in a in a task                                 so you can actually have the like sites                                 sites sitename be a symlink back to the                                 deploy directories so that you could                                 deploy one side at a time that way I                                 think that                                 anything else yes                                 great great question so yeah how does                                 this integrate with continuous                                 integration servers like Hudson so as I                                 said there's a lot of overlap here with                                 like configuration management there's                                 also some overlap with tools like cuts                                 and a lot of people use tools I cut some                                 Jenkins to do things like this I                                 personally like I mean I use Jenkins for                                 many many many things I like to keep my                                 Jenkins configurations as dumb as simple                                 as possible and so what I do is I                                 actually run Capistrano I have Hudson                                 run Capistrano and so because Hudson                                 just runs tasks you can essentially do                                 whatever you would do normally in there                                 and then you could even have I mean say                                 the tasks that I showed is like                                 attaching before and after in the deploy                                 framework you could actually just have                                 those separate Hudson tasks that run if                                 the main deploy command exited zero so                                 you could totally bypass it with Hudson                                 if you want cool                                 it's a no question this just perfectly                                 fits everybody's needs                                 schedule it                                 that's definitely not there now the                                 interesting idea I hadn't necessarily                                 have that need but yeah this that's                                 worthwhile                                 yeah something to look at happy to look                                 at a feature request                                 with                                 okay yeah good question i could think i                                 just assumed that everybody uses code oh                                 sorry how do you do database updates and                                 configuration changes I made the                                 assumption that everybody updates their                                 configuration with through code because                                 everybody should so when I said after                                 you do the ploy you do say like update                                 DP features revert all generally anytime                                 I need to make a change on a Drupal site                                 and that's say with a modules                                 configuration that doesn't support                                 features I put that in an update hook I                                 have a actually I make an install file                                 in one of my main features and then I                                 put up eight hooks in there so that when                                 i run update DB that gets executed if                                 you're doing that then all you have to                                 do is then just attach the update TB                                 task to run after assembling go in and                                 if and if you're not doing it in code I                                 mean there's there's really nothing you                                 can do just think that up yeah okay yeah                                 so that introduces some some complexity                                 and now it's that sort what repeat the                                 question what do you do if you have to                                 roll back in that situation so that's                                 the situation I was talking about                                 earlier where there are cases where your                                 you do want to go into maintenance mode                                 so ideally you've tested things I                                 generally like before this happens bring                                 in the database in the QA and then run                                 all these uh pitch to make sure they'll                                 all work they're definitely our                                 situation so that you can run into where                                 this will happen what I would do I was I                                 would put the site in maintenance mode I                                 would make a task for that which really                                 there will be a test for that soon I                                 would then make another task that                                 doesn't rush sequel dump and I would put                                 that to run before deploy so that that's                                 the first thing that happens and then I                                 would in the rollback hook i would say                                 on rollback restore that so and that's                                 the idea it's like everyone's situation                                 is going to be different everyone's                                 going to have different needs they're so                                 pretty much any customization you do you                                 do in tasks                                 except for the crazy schedule anything                                 you can't do that anything else yes                                 you could maybe add checks for that as a                                 dependency that would run and that maybe                                 are you saying this would be after a                                 deployment ran                                 so in that situation I think I would                                 deploy to not the whole group say like                                 one and then i would comment out like                                 the the after tasks i had to do the                                 updates i would check those things and                                 then if that was okay i would do the                                 whole thing does that not work or am i                                 missing something                                 yeah i'm not sure who we should talk                                 about that                                 any other questions                                 if we have a few more minutes so if                                 there's like more generic dress                                 questions we can probably take a few of                                 those                                 I didn't really hear                                 it was hard to hear keep speak up of it                                 sorry that was a long question                                 so this was a question about so let's                                 see if I got it right you want to                                 execute a set of dress commands against                                 a set of sites in a multi-site and right                                 now all that drush provides is you                                 execute one command and you say against                                 a target of sites and you want to                                 execute a series of commands against                                 each site in a row the solution the                                 dress provides for that right now is to                                 make your own command that encompasses                                 the three or four or five commands that                                 you want to run and then target that                                 against a site alias list one other                                 thing though in dress                                                 the concept of shell aliases and so                                 instead of having to go through the                                 trouble of making your own command you                                 can actually just in your options file                                 do a shell alias that has those three                                 commands together I often do that for                                 like up a DB features revert CCL                                 yeah I'm having trouble hearing the                                 question could you speak up                                 is it possible to publish multiple                                 database servers so we can publish it to                                 multiple servers updating to melton                                 multiple database servers yes I know                                 what's happening on the multiple daily                                 servers i miss the second part if you                                 have reserved for user data and service                                 for content to                                 yeah so yeah Update source code not data                                 unless you do the data in your tasks                                 which in that case you can do anything                                 you need to do so I guess I'll answer a                                 generic version of what I think that                                 question is and that say if you're using                                 press flow and you have masters and                                 slaves set up actually yes so say you                                 want to do the sequel dump off the slave                                 you would just do that in your tasks                                 like you normally wouldn't rush question                                 alright let's wait for the mic I can                                 hear you said you said it was very easy                                 to write your own strategy like remote                                 cash or check out could you share the                                 gospel and quickly outline how to do                                 that sure                                 yes and if you'll notice                                 jeff's employee uses the PSR                                             autoloader if you're familiar with that                                 see the checkout is really simple                                 all it implements is command which then                                 yeah which then calls the get class                                 which would later be just the SCM class                                 and the checkout method so the method of                                 actually checking out is abstract it                                 into that and then you just give it the                                 config revision which deploy                                 automatically generates for you and then                                 the release path which is going to be                                 the time stamped directory that deploy                                 gives you so that's that's a very simple                                 example remote cash                                 is a bit more actually the all a                                 strategy class has to do is implement                                 the deploy method the other one didn't                                 have a deploy method because the classic                                 extended had one so the deployment that                                 here all it is is update repository cash                                 and then copy it and then it adds a                                 check like I said before remote or                                 strategies can add their own                                 dependencies so that checks that the get                                 binary exists that gives you the path of                                 repository gasps so update all it is is                                 basically seeing that directory and then                                 doing a get hole or did I lie about that                                 oh yeah so get sink sink is a generic                                 term that means pull in this context and                                 then it does the yeah and then it checks                                 out the tag or whatever actually                                 whatever the tip is right whatever                                 you're going to deploy and their checks                                 that out before the copy happens and it                                 just copies it into the directory I                                 think that's relatively simple                                 another quick fashion I was thinking                                 about writing a deploy model for ftp I                                 know it's not the most used hosting                                 environment but it happens to come up                                 again and again and I would like to have                                 wonderful solution of all is it possible                                 now and rush to run command rush                                 commands via PHP instead of the command                                 line like remote execution I saying                                 drush runned rush commands through the                                 browser yes no short answers no longer                                 answer is drush needs to do things that                                 your web server shouldn't have access to                                 do so if that works in your web browser                                 then you have a misconfigured and                                 insecure web server so i would say the                                 the best answer is no judge you don't                                 want to do that and the point isn't it                                 the files could be deployed me ftp but                                 SQL but app DB and for example features                                 revert could still run directly from a                                 web server you wouldn't need to shell                                 access from that i missed that something                                 about features revert many features                                 revert isn't actually doing anything to                                 the file system it's just update the                                 database yes that's what i meant i could                                 run this trash comment to a web server                                 without it having excess it shouldn't                                 have well it's over you so okay take                                 those examples so feature revert you                                 don't even need address command for                                 because the features module provides you                                 that functionality within the UI and                                 then up ATP is up a PHP so any of those                                 things there already is a UI component                                 for anything else the dresser is doing                                 like downloading or whatever else you                                 you can't really do through a web server                                 so was there another question there                                 yep                                 I did deployments for a long for a year                                 with examiner and I wish we had this                                 this looks very good the only thing that                                 I think that I'm not sure that you can                                 solve is frequently one of the post                                 deployment tasks we have to write a rust                                 dress script that might run for                                          talking you know for a long time and so                                 we'd start that in a screen session and                                 that's the root of Kevin's question                                 right yeah okay so it's already been                                 asking you well know what I think but I                                 could use more explanation it is you                                 might have a long-running post deploy                                 tasks that you want to see status                                 updates on so you might have a task that                                 you know somehow through the UI you get                                 responses I'm one percent done on                                      done on two percent done and it's going                                 to run forever you know and I'm not sure                                 how you would handle that through this                                 may be somewhat related but one of the                                 things we did fix in core and five is as                                 you run remote commands you actually see                                 the output live so while the deploy was                                 running you would see the output from                                 that task I don't know if that would                                 help and then you could the percentage                                 is hard to do but if you implemented the                                 percentage logic yourself you could just                                 print that to standard out and then                                 you'd see it maybe that's good enough                                 otherwise yeah I mean I'd love to look                                 at look at that more and see if it can                                 be accommodated any other questions                                 yes                                 right now it's actually not only for                                 dress fine the question was is this only                                 for dress                                                              or five mainly because the things that I                                 needed to fix in drush core I are not in                                 rush chorea they're still in here so if                                 and when a lot of these things do go                                 into core i'll still probably keep them                                 here so that it'll work on four and then                                 default back to decor because i would                                 like for to last a little more a while                                 although yeah did this end like i should                                 say this everything I showed you works                                 there was no magic there but they're                                 still going to be a lot of changes and                                 this is not nearly                                                 apologize if you go to the project page                                 right now there's zero information no                                 releases and no example of the                                 configuration file the code is there in                                 the next couple days I'm I will fill                                 that out and have something there so                                 that you can test but I would not use                                 this right now i would probably wait                                 until it matures a little bit and we get                                 a release out there but if you like all                                 this stuff and you need this right now                                 you might look at Capistrano it works                                 anything else                                 okay thank you                                 you
YouTube URL: https://www.youtube.com/watch?v=9EANdypafFw


