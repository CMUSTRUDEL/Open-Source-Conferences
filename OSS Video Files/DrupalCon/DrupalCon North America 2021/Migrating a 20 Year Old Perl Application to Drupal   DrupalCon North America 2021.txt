Title: Migrating a 20 Year Old Perl Application to Drupal   DrupalCon North America 2021
Publication date: 2021-05-27
Playlist: DrupalCon North America 2021
Description: 
	How NBER managed to update 20 yr old Perl based site & migrate 100k+ pieces of content into 14 distinct content & exposing it through multiple Solr interfaces.
Captions: 
	00:00:02,480 --> 00:00:06,000
sounds great why don't we um why don't

00:00:04,240 --> 00:00:07,600
we kick off our presentation and

00:00:06,000 --> 00:00:08,880
we would invite you to be very active in

00:00:07,600 --> 00:00:11,040
the chat as we're talking through

00:00:08,880 --> 00:00:12,960
everything that's in this demonstration

00:00:11,040 --> 00:00:14,920
uh we'd be glad to answer questions as

00:00:12,960 --> 00:00:17,680
we go

00:00:14,920 --> 00:00:20,560
kevin all right

00:00:17,680 --> 00:00:20,560
give me a second here

00:00:21,520 --> 00:00:25,599
hi everyone and welcome to today's

00:00:23,279 --> 00:00:28,160
session entitled migrating a 20 year old

00:00:25,599 --> 00:00:30,400
pearl application to drupal

00:00:28,160 --> 00:00:32,640
my name is chris brady i am the partner

00:00:30,400 --> 00:00:34,640
alliance manager at valler

00:00:32,640 --> 00:00:36,960
voller is a full-service digital agency

00:00:34,640 --> 00:00:38,559
based in boston massachusetts

00:00:36,960 --> 00:00:40,640
i'm pleased to be joined by kevin

00:00:38,559 --> 00:00:42,079
quillen our drupal practice lead

00:00:40,640 --> 00:00:44,960
and a long time contributor to the

00:00:42,079 --> 00:00:46,239
drupal community now every good story

00:00:44,960 --> 00:00:47,920
needs a hero

00:00:46,239 --> 00:00:49,440
and today i'd like to introduce you to

00:00:47,920 --> 00:00:52,399
our hero in this session

00:00:49,440 --> 00:00:53,920
the national bureau of economic research

00:00:52,399 --> 00:00:57,600
founded in 1920

00:00:53,920 --> 00:00:59,199
nber is a private non-profit nonpartisan

00:00:57,600 --> 00:01:00,719
research organization

00:00:59,199 --> 00:01:03,199
dedicated to promoting a greater

00:01:00,719 --> 00:01:06,240
understanding of how the economy works

00:01:03,199 --> 00:01:06,799
nber has been the home of 32 nobel prize

00:01:06,240 --> 00:01:09,040
winners

00:01:06,799 --> 00:01:10,400
in economics and all of these smart

00:01:09,040 --> 00:01:13,439
folks generate a lot

00:01:10,400 --> 00:01:14,640
of content more than 1200 working papers

00:01:13,439 --> 00:01:16,320
are published annually

00:01:14,640 --> 00:01:18,880
and they have web content going back

00:01:16,320 --> 00:01:22,080
decades on the website

00:01:18,880 --> 00:01:24,000
to manage this large content volume nber

00:01:22,080 --> 00:01:26,159
created a custom perl application 20

00:01:24,000 --> 00:01:28,000
years ago to enable the submission of

00:01:26,159 --> 00:01:29,600
working papers and other content to the

00:01:28,000 --> 00:01:31,680
organization

00:01:29,600 --> 00:01:33,920
this application is still running but

00:01:31,680 --> 00:01:34,560
nber recognized the need to evolve this

00:01:33,920 --> 00:01:37,360
approach

00:01:34,560 --> 00:01:38,960
and enable their digital transformation

00:01:37,360 --> 00:01:41,520
they also needed a refreshed user

00:01:38,960 --> 00:01:44,320
interface one that is fully responsive

00:01:41,520 --> 00:01:45,759
accessible and modern on the right you

00:01:44,320 --> 00:01:47,840
can see a screenshot of some of the new

00:01:45,759 --> 00:01:49,759
design system in use

00:01:47,840 --> 00:01:51,600
having a beautiful modern website is

00:01:49,759 --> 00:01:53,360
great but they also needed the right

00:01:51,600 --> 00:01:55,200
content management system to power this

00:01:53,360 --> 00:01:58,079
new vision

00:01:55,200 --> 00:02:00,000
they selected drupal of course now you

00:01:58,079 --> 00:02:02,079
might not be an economic powerhouse like

00:02:00,000 --> 00:02:03,759
nber but we hope that you will find some

00:02:02,079 --> 00:02:04,880
practical tips and techniques

00:02:03,759 --> 00:02:08,080
that you can take back to your

00:02:04,880 --> 00:02:09,920
organization and use right away i'm

00:02:08,080 --> 00:02:12,000
going to turn this session over to kevin

00:02:09,920 --> 00:02:13,680
to walk through his methodology and give

00:02:12,000 --> 00:02:14,400
you practical advice that you can use

00:02:13,680 --> 00:02:16,720
today

00:02:14,400 --> 00:02:18,319
kevin over to you thanks chris hey

00:02:16,720 --> 00:02:20,319
everybody this is kevin quillin the

00:02:18,319 --> 00:02:22,319
triple practice lead of velir

00:02:20,319 --> 00:02:24,080
delighted to be here today at drupalcon

00:02:22,319 --> 00:02:25,520
talking to you about the recent project

00:02:24,080 --> 00:02:26,800
we completed for the national bureau of

00:02:25,520 --> 00:02:28,160
economic research

00:02:26,800 --> 00:02:30,080
and we're going to be talking about how

00:02:28,160 --> 00:02:31,920
we migrated them off of

00:02:30,080 --> 00:02:33,440
their original pearl application that

00:02:31,920 --> 00:02:35,840
powered their website

00:02:33,440 --> 00:02:36,959
into drupal so when we took this project

00:02:35,840 --> 00:02:39,120
on we had two

00:02:36,959 --> 00:02:40,480
major challenges from a development

00:02:39,120 --> 00:02:42,560
standpoint that we needed to solve to

00:02:40,480 --> 00:02:44,800
make this project a success

00:02:42,560 --> 00:02:46,560
and we had to migrate over a hundred

00:02:44,800 --> 00:02:48,400
thousand published items of content and

00:02:46,560 --> 00:02:51,040
nearly 35 gigabytes

00:02:48,400 --> 00:02:51,680
of documents and images over into drupal

00:02:51,040 --> 00:02:54,319
8.

00:02:51,680 --> 00:02:56,239
at the same time we had to make sense of

00:02:54,319 --> 00:02:58,000
the content in the old database and

00:02:56,239 --> 00:02:59,760
formulate that into

00:02:58,000 --> 00:03:01,840
content types and media types and

00:02:59,760 --> 00:03:03,280
taxonomy in drupal 8.

00:03:01,840 --> 00:03:05,120
and we had to do this in a way where we

00:03:03,280 --> 00:03:07,760
were migrating every single day this was

00:03:05,120 --> 00:03:10,159
not a one-time or a one-off migration

00:03:07,760 --> 00:03:10,959
this was going to be a daily event for

00:03:10,159 --> 00:03:12,480
us

00:03:10,959 --> 00:03:15,200
so knowing that we needed to sit down

00:03:12,480 --> 00:03:16,560
and devise a way to move and migrate all

00:03:15,200 --> 00:03:18,400
this content and data

00:03:16,560 --> 00:03:20,080
from the old my sql database over to

00:03:18,400 --> 00:03:21,760
drupal 8. and before we could even

00:03:20,080 --> 00:03:22,080
really do anything in drupal before we

00:03:21,760 --> 00:03:23,840
start

00:03:22,080 --> 00:03:26,080
try to create content types and try to

00:03:23,840 --> 00:03:28,400
create taxonomy vocabularies and

00:03:26,080 --> 00:03:30,560
get lost configuring all sorts of things

00:03:28,400 --> 00:03:33,040
that we think we need to do

00:03:30,560 --> 00:03:34,959
every migration regardless of its size

00:03:33,040 --> 00:03:36,720
begins with a migration plan

00:03:34,959 --> 00:03:38,319
we need to know what we're doing before

00:03:36,720 --> 00:03:40,560
we can commit to it in drupal

00:03:38,319 --> 00:03:42,560
and we do that because as developers we

00:03:40,560 --> 00:03:44,720
always have this inclination to

00:03:42,560 --> 00:03:46,480
uh want to jump right in and start doing

00:03:44,720 --> 00:03:48,159
configuration and start doing coding

00:03:46,480 --> 00:03:49,519
around problems that we

00:03:48,159 --> 00:03:52,080
know we need to solve we want to get

00:03:49,519 --> 00:03:52,799
there and want to look and feel as cool

00:03:52,080 --> 00:03:54,640
as this

00:03:52,799 --> 00:03:55,760
race car racing to the finish line on

00:03:54,640 --> 00:03:56,400
different features that we need to

00:03:55,760 --> 00:03:58,000
complete

00:03:56,400 --> 00:03:59,680
and everyone wants a smooth and painless

00:03:58,000 --> 00:04:00,000
migration everybody wants us to succeed

00:03:59,680 --> 00:04:02,159
and go

00:04:00,000 --> 00:04:03,840
well but if we don't sit down and do our

00:04:02,159 --> 00:04:04,480
due diligence and be thorough and do our

00:04:03,840 --> 00:04:07,200
planning

00:04:04,480 --> 00:04:07,840
instead of looking like this race car it

00:04:07,200 --> 00:04:09,040
looks

00:04:07,840 --> 00:04:10,640
we're going to look it's going to go

00:04:09,040 --> 00:04:12,239
something like this we're going to get

00:04:10,640 --> 00:04:12,560
all of our content and all of our data

00:04:12,239 --> 00:04:14,640
that

00:04:12,560 --> 00:04:16,160
we think we need to migrate onto our

00:04:14,640 --> 00:04:17,440
onto our barge here and suddenly

00:04:16,160 --> 00:04:18,720
everything's going to go sideways

00:04:17,440 --> 00:04:20,639
they're going to get stuck

00:04:18,720 --> 00:04:22,400
then we're going to feel like that dozer

00:04:20,639 --> 00:04:23,680
a little tiny dozer to the side of the

00:04:22,400 --> 00:04:25,360
boat there in the corner trying to dig

00:04:23,680 --> 00:04:27,120
us out of this situation

00:04:25,360 --> 00:04:28,639
and migrations can definitely go this

00:04:27,120 --> 00:04:30,000
way if you don't sit down and plan them

00:04:28,639 --> 00:04:31,919
out and kind of consider

00:04:30,000 --> 00:04:34,000
uh how the content is related to one

00:04:31,919 --> 00:04:36,639
another um you know what

00:04:34,000 --> 00:04:38,400
uh consequences may arise from choosing

00:04:36,639 --> 00:04:40,080
one field type over another

00:04:38,400 --> 00:04:42,240
uh as you'll see later when we talk

00:04:40,080 --> 00:04:43,600
about search

00:04:42,240 --> 00:04:45,680
we don't want to end up in a situation

00:04:43,600 --> 00:04:47,440
like this right so

00:04:45,680 --> 00:04:48,800
by sitting down and doing our due

00:04:47,440 --> 00:04:50,479
diligence and being thorough and

00:04:48,800 --> 00:04:52,639
creating spreadsheets

00:04:50,479 --> 00:04:55,280
we can really create really good

00:04:52,639 --> 00:04:57,919
migration paths and migration plans

00:04:55,280 --> 00:04:59,840
this way and this also enables uh the

00:04:57,919 --> 00:05:01,520
greater team to take part

00:04:59,840 --> 00:05:02,960
and sit down and fill in these

00:05:01,520 --> 00:05:05,440
spreadsheets of

00:05:02,960 --> 00:05:06,479
the data that we are going to need to

00:05:05,440 --> 00:05:09,120
facilitate

00:05:06,479 --> 00:05:10,800
uh creating the the new website and we

00:05:09,120 --> 00:05:12,880
also sat down with subject matter

00:05:10,800 --> 00:05:14,400
experts at ember and got their input

00:05:12,880 --> 00:05:16,800
on different types of content there was

00:05:14,400 --> 00:05:18,720
only so much that we could derive from

00:05:16,800 --> 00:05:20,000
uh the information architecture and the

00:05:18,720 --> 00:05:21,360
content strategy

00:05:20,000 --> 00:05:23,199
and the wireframes that we could

00:05:21,360 --> 00:05:24,479
visually see there was also a good

00:05:23,199 --> 00:05:25,919
amount of information that we couldn't

00:05:24,479 --> 00:05:27,120
see behind the scenes that we would need

00:05:25,919 --> 00:05:28,960
to migrate in

00:05:27,120 --> 00:05:30,479
to power these new displays and to power

00:05:28,960 --> 00:05:31,840
the content and power the searches that

00:05:30,479 --> 00:05:33,199
we were going to build

00:05:31,840 --> 00:05:34,880
let's talk a little bit about what a

00:05:33,199 --> 00:05:35,759
migration is maybe you haven't done one

00:05:34,880 --> 00:05:38,080
before

00:05:35,759 --> 00:05:40,080
in drupal 8 or drupal 9 and you're

00:05:38,080 --> 00:05:42,560
wondering what makes up a migration or

00:05:40,080 --> 00:05:44,080
the anatomy of a migration

00:05:42,560 --> 00:05:45,759
migrations can be performed from a

00:05:44,080 --> 00:05:47,520
variety of sources

00:05:45,759 --> 00:05:49,120
most people probably do assume that you

00:05:47,520 --> 00:05:50,800
could do it from my sequel

00:05:49,120 --> 00:05:52,560
into drupal since it's one of the most

00:05:50,800 --> 00:05:54,160
common database

00:05:52,560 --> 00:05:55,520
database technologies out there but

00:05:54,160 --> 00:05:57,280
you'd be surprised to know that

00:05:55,520 --> 00:05:58,400
migrations can be performed from any of

00:05:57,280 --> 00:06:01,360
these technologies

00:05:58,400 --> 00:06:02,080
either sqlite ms sql postgresql you can

00:06:01,360 --> 00:06:05,520
even do

00:06:02,080 --> 00:06:06,000
java content repositories or jcrs csv

00:06:05,520 --> 00:06:08,639
json

00:06:06,000 --> 00:06:09,919
xml files you can do soap and rest apis

00:06:08,639 --> 00:06:12,000
and you can even migrate

00:06:09,919 --> 00:06:13,680
from static html files you could for

00:06:12,000 --> 00:06:16,080
instance migrate from a

00:06:13,680 --> 00:06:16,800
static hugo or jekyll blog or gatsby

00:06:16,080 --> 00:06:19,280
based

00:06:16,800 --> 00:06:20,479
website with that static generated

00:06:19,280 --> 00:06:22,400
output into drupal

00:06:20,479 --> 00:06:24,720
and since drupal can support numerous

00:06:22,400 --> 00:06:27,520
sources for migrating data into

00:06:24,720 --> 00:06:28,639
it makes the migration system in drupal

00:06:27,520 --> 00:06:31,360
very flexible

00:06:28,639 --> 00:06:32,479
and very powerful so in our case for the

00:06:31,360 --> 00:06:33,759
ember

00:06:32,479 --> 00:06:35,520
we were going to migrate from a my

00:06:33,759 --> 00:06:37,759
sequel source that's what their

00:06:35,520 --> 00:06:39,440
uh legacy applications is built on so we

00:06:37,759 --> 00:06:41,280
figured that's what we were going to do

00:06:39,440 --> 00:06:43,440
but this presented a lot of logistical

00:06:41,280 --> 00:06:44,960
problems for us the mysql databases are

00:06:43,440 --> 00:06:47,120
gigabytes in size

00:06:44,960 --> 00:06:48,639
and in order to get it where we needed

00:06:47,120 --> 00:06:51,520
to go we would have to take

00:06:48,639 --> 00:06:53,360
a backup of that database and our sync

00:06:51,520 --> 00:06:55,280
it to our web server

00:06:53,360 --> 00:06:56,560
and then we'd have to rewrite all these

00:06:55,280 --> 00:06:59,919
sql queries that are written

00:06:56,560 --> 00:07:01,919
in perl to generate the result sets that

00:06:59,919 --> 00:07:03,440
we would need to perform the migrations

00:07:01,919 --> 00:07:03,840
and this was cumbersome because i didn't

00:07:03,440 --> 00:07:06,400
want to

00:07:03,840 --> 00:07:07,360
have to write all those sql queries

00:07:06,400 --> 00:07:08,800
again from

00:07:07,360 --> 00:07:11,039
one language to another there's things

00:07:08,800 --> 00:07:13,440
that can get lost in translation there

00:07:11,039 --> 00:07:14,240
and we'd be writing code that's just

00:07:13,440 --> 00:07:15,680
coupled to

00:07:14,240 --> 00:07:17,599
the other application if the other

00:07:15,680 --> 00:07:19,360
application needed to make changes to

00:07:17,599 --> 00:07:20,080
their mysql queries i'd have to mirror

00:07:19,360 --> 00:07:21,520
those

00:07:20,080 --> 00:07:23,840
uh to reflect that so we all have

00:07:21,520 --> 00:07:25,360
accurate data and we'd have to do this

00:07:23,840 --> 00:07:28,000
every day so we don't want to have to do

00:07:25,360 --> 00:07:29,360
a backup and restore of this every day

00:07:28,000 --> 00:07:30,240
it was just going to be very cumbersome

00:07:29,360 --> 00:07:32,560
to do

00:07:30,240 --> 00:07:34,560
so then we thought about well how do we

00:07:32,560 --> 00:07:36,720
what if we expose this

00:07:34,560 --> 00:07:37,599
as a rest api a migration system can

00:07:36,720 --> 00:07:41,440
support

00:07:37,599 --> 00:07:43,520
uh getting fetching data from a rest api

00:07:41,440 --> 00:07:45,440
what if we did that well this solved all

00:07:43,520 --> 00:07:48,160
of our problems besides

00:07:45,440 --> 00:07:50,160
the parts where it still takes um the

00:07:48,160 --> 00:07:52,160
bicycle queries that we need

00:07:50,160 --> 00:07:54,000
take a nominal amount of time to execute

00:07:52,160 --> 00:07:55,919
in some cases it can take

00:07:54,000 --> 00:07:57,199
10 minutes in some cases it took upwards

00:07:55,919 --> 00:07:59,120
of 45 minutes

00:07:57,199 --> 00:08:00,879
and while that's okay for the my sequel

00:07:59,120 --> 00:08:03,039
server it's not okay

00:08:00,879 --> 00:08:04,479
for a web application or open http

00:08:03,039 --> 00:08:06,000
connection to wait

00:08:04,479 --> 00:08:07,840
for a response that long it's just it's

00:08:06,000 --> 00:08:11,039
just not going to be open longer than

00:08:07,840 --> 00:08:14,080
60 90 seconds whatever the web server is

00:08:11,039 --> 00:08:14,720
uh is configured to to do for a timeout

00:08:14,080 --> 00:08:17,680
setting

00:08:14,720 --> 00:08:19,280
so we thought okay well how do we solve

00:08:17,680 --> 00:08:22,400
this final remaining problem

00:08:19,280 --> 00:08:24,800
well we had the idea to

00:08:22,400 --> 00:08:26,319
create a couple more rest api routes

00:08:24,800 --> 00:08:28,639
that would generate

00:08:26,319 --> 00:08:29,680
json files based on those mysql queries

00:08:28,639 --> 00:08:32,320
so instead of

00:08:29,680 --> 00:08:33,279
using the rest api to fetch data on

00:08:32,320 --> 00:08:36,320
demand

00:08:33,279 --> 00:08:38,000
we used it to initiate uh some some jobs

00:08:36,320 --> 00:08:40,399
in the background that would kick off

00:08:38,000 --> 00:08:42,320
the mysql query and then eventually

00:08:40,399 --> 00:08:44,080
write to json files on disk and then we

00:08:42,320 --> 00:08:47,200
would take those json files

00:08:44,080 --> 00:08:49,519
and r sync them back to our web server

00:08:47,200 --> 00:08:51,040
every single day and these json files

00:08:49,519 --> 00:08:53,279
would serve as the basis for

00:08:51,040 --> 00:08:54,800
our migrations that we're going to do

00:08:53,279 --> 00:08:55,680
every single day and now we didn't have

00:08:54,800 --> 00:08:58,240
a problem

00:08:55,680 --> 00:09:00,160
uh running these migrations we'd have to

00:08:58,240 --> 00:09:01,839
wait for my sequel or wait for a

00:09:00,160 --> 00:09:03,440
response on an open connection we could

00:09:01,839 --> 00:09:05,040
pick up the file parse it and start

00:09:03,440 --> 00:09:06,720
working right away

00:09:05,040 --> 00:09:08,480
and a migration definition is really

00:09:06,720 --> 00:09:09,920
made up of three key areas there's the

00:09:08,480 --> 00:09:10,399
source which tells drupal where it's

00:09:09,920 --> 00:09:12,080
from

00:09:10,399 --> 00:09:14,000
a destination to tell drupal where it's

00:09:12,080 --> 00:09:15,680
going and the process section which

00:09:14,000 --> 00:09:17,519
tells drupal what to do

00:09:15,680 --> 00:09:20,080
with the data that we have from our

00:09:17,519 --> 00:09:20,720
source and we can map fields from the

00:09:20,080 --> 00:09:22,959
source

00:09:20,720 --> 00:09:24,399
to named items used later in the process

00:09:22,959 --> 00:09:24,800
section which we'll look at here in a

00:09:24,399 --> 00:09:26,640
bit

00:09:24,800 --> 00:09:29,600
but our migration definitions are all

00:09:26,640 --> 00:09:31,920
enamel yaml-based configuration files

00:09:29,600 --> 00:09:33,839
in this example here you can see our

00:09:31,920 --> 00:09:36,399
source section is defined and we're

00:09:33,839 --> 00:09:37,680
telling this migration that the data for

00:09:36,399 --> 00:09:41,279
the source lives

00:09:37,680 --> 00:09:43,440
in a a file in the private file system

00:09:41,279 --> 00:09:45,040
in the workingpaper.json file

00:09:43,440 --> 00:09:47,279
and we want to iterate over this data

00:09:45,040 --> 00:09:49,760
using the json plugin

00:09:47,279 --> 00:09:51,519
to look at our source fields and the

00:09:49,760 --> 00:09:52,320
destination tells drupal where to create

00:09:51,519 --> 00:09:54,000
this record

00:09:52,320 --> 00:09:56,240
and in this case we're creating a

00:09:54,000 --> 00:09:57,920
working paper node

00:09:56,240 --> 00:10:00,000
and from the field section of our source

00:09:57,920 --> 00:10:01,279
like we just mentioned we can map them

00:10:00,000 --> 00:10:03,360
to drupal fields

00:10:01,279 --> 00:10:04,880
in our process section as we can see in

00:10:03,360 --> 00:10:07,120
this example here we're mapping

00:10:04,880 --> 00:10:09,519
doing some simple mappings of text-based

00:10:07,120 --> 00:10:09,519
fields

00:10:10,079 --> 00:10:14,480
and we can also use multiple stages or

00:10:12,000 --> 00:10:16,079
pipelines and alter and change the data

00:10:14,480 --> 00:10:19,040
to make it suitable for storing

00:10:16,079 --> 00:10:20,640
in a drupal field we don't have to uh

00:10:19,040 --> 00:10:23,200
we're not forced to use just

00:10:20,640 --> 00:10:24,880
text based values to text-based fields

00:10:23,200 --> 00:10:27,120
we can add as many

00:10:24,880 --> 00:10:29,760
of uh we can add as many pipelines

00:10:27,120 --> 00:10:33,200
process pipelines as we refer to it

00:10:29,760 --> 00:10:33,680
per field to get data massaged and moved

00:10:33,200 --> 00:10:35,600
into

00:10:33,680 --> 00:10:36,959
a format that drupal needs you can see

00:10:35,600 --> 00:10:39,200
in this picture on the right

00:10:36,959 --> 00:10:41,279
uh these are some more complex examples

00:10:39,200 --> 00:10:43,360
of migrating data into

00:10:41,279 --> 00:10:44,720
entity reference fields taxonomy fields

00:10:43,360 --> 00:10:46,240
and some paragraph fields

00:10:44,720 --> 00:10:47,839
where we're using a couple different

00:10:46,240 --> 00:10:50,399
custom plugins to

00:10:47,839 --> 00:10:51,440
take the data and get it into a format

00:10:50,399 --> 00:10:53,760
that we need

00:10:51,440 --> 00:10:55,360
so drupal will store it correctly okay

00:10:53,760 --> 00:10:55,839
so let's demonstrate and see this in

00:10:55,360 --> 00:10:57,600
action

00:10:55,839 --> 00:10:59,360
what we're going to do here is look back

00:10:57,600 --> 00:11:01,040
at our migration definition and take an

00:10:59,360 --> 00:11:02,640
example working paper

00:11:01,040 --> 00:11:04,240
and walk you through what a migration

00:11:02,640 --> 00:11:05,360
looks like for ember and also some of

00:11:04,240 --> 00:11:07,600
the enhancements we did

00:11:05,360 --> 00:11:09,440
to the backend interface to really aid

00:11:07,600 --> 00:11:11,120
this process we are again

00:11:09,440 --> 00:11:12,800
running migrations every day so it's

00:11:11,120 --> 00:11:14,480
important for us to

00:11:12,800 --> 00:11:16,160
have the process hammered out and also

00:11:14,480 --> 00:11:18,480
provide tools for

00:11:16,160 --> 00:11:20,160
all the users at the ember to validate

00:11:18,480 --> 00:11:22,959
and help update the data

00:11:20,160 --> 00:11:23,200
as they see fit so first let's jump back

00:11:22,959 --> 00:11:25,760
in

00:11:23,200 --> 00:11:26,880
and take a look and review our migration

00:11:25,760 --> 00:11:29,120
definition

00:11:26,880 --> 00:11:30,959
from the earlier slides this is the very

00:11:29,120 --> 00:11:32,399
yaml file that we saw

00:11:30,959 --> 00:11:34,480
earlier in the talk with all of our

00:11:32,399 --> 00:11:37,600
fields and

00:11:34,480 --> 00:11:39,680
sources laid out here

00:11:37,600 --> 00:11:41,360
and this is our json file we have an

00:11:39,680 --> 00:11:43,600
example working paper

00:11:41,360 --> 00:11:45,519
normally this file has about 30 000

00:11:43,600 --> 00:11:47,760
items in it but for the demonstrations

00:11:45,519 --> 00:11:48,800
sake we're going to do one item so i can

00:11:47,760 --> 00:11:51,519
show you a couple things that we're

00:11:48,800 --> 00:11:54,079
doing here with the migration process

00:11:51,519 --> 00:11:57,519
so if i go back into drupal i go back

00:11:54,079 --> 00:12:01,279
into our back end here

00:11:57,519 --> 00:12:01,279
i go to the migrations section

00:12:01,680 --> 00:12:05,760
open up our working papers migration

00:12:07,120 --> 00:12:12,560
and just run the migration

00:12:10,959 --> 00:12:14,399
so we actually have this in our system

00:12:12,560 --> 00:12:15,760
already so it just ran an update against

00:12:14,399 --> 00:12:18,959
that item

00:12:15,760 --> 00:12:21,360
if i go to our content area i can see

00:12:18,959 --> 00:12:24,720
that this was the last updated item

00:12:21,360 --> 00:12:26,320
and this is our working paper here great

00:12:24,720 --> 00:12:28,079
so let's assume a couple different

00:12:26,320 --> 00:12:29,120
problem scenarios right what if we

00:12:28,079 --> 00:12:31,440
received

00:12:29,120 --> 00:12:33,440
uh our data at midnight and there's

00:12:31,440 --> 00:12:35,519
something wrong with that data although

00:12:33,440 --> 00:12:37,440
we didn't know about it at the time so

00:12:35,519 --> 00:12:38,639
if we can we can simulate that by going

00:12:37,440 --> 00:12:41,920
in here

00:12:38,639 --> 00:12:44,560
let's say somehow the node title

00:12:41,920 --> 00:12:46,320
got messed up which i can simulate by

00:12:44,560 --> 00:12:49,279
just changing it like this

00:12:46,320 --> 00:12:49,920
looks like i'm trying to exit vim so

00:12:49,279 --> 00:12:54,560
we'll go back

00:12:49,920 --> 00:12:57,200
into drupal now if i run this migration

00:12:54,560 --> 00:12:58,800
whether whether the migration ran at

00:12:57,200 --> 00:12:59,600
midnight since we are running these uh

00:12:58,800 --> 00:13:02,240
daily

00:12:59,600 --> 00:13:04,839
or if i run this from the interface

00:13:02,240 --> 00:13:07,680
we're going to wind up with a serious

00:13:04,839 --> 00:13:09,440
problem

00:13:07,680 --> 00:13:11,120
so one updated again so if i go back to

00:13:09,440 --> 00:13:14,000
my content area

00:13:11,120 --> 00:13:16,000
oh no this very important paper by a

00:13:14,000 --> 00:13:18,800
very important author is now

00:13:16,000 --> 00:13:20,079
messed up what do we do uh how do we get

00:13:18,800 --> 00:13:21,839
this resolved well

00:13:20,079 --> 00:13:23,360
no amount of running that same migration

00:13:21,839 --> 00:13:24,639
is going to resolve this until the

00:13:23,360 --> 00:13:26,160
upstream data

00:13:24,639 --> 00:13:28,160
is corrected and those files are

00:13:26,160 --> 00:13:29,680
regenerated and that only happens once a

00:13:28,160 --> 00:13:31,440
day at midnight and we can't afford to

00:13:29,680 --> 00:13:33,440
wait that long

00:13:31,440 --> 00:13:35,839
so we built some additional things in

00:13:33,440 --> 00:13:37,760
the interface here to kind of help

00:13:35,839 --> 00:13:40,000
alleviate that problem we also built

00:13:37,760 --> 00:13:42,959
these uh additional

00:13:40,000 --> 00:13:45,440
tabs to help people not have to use

00:13:42,959 --> 00:13:47,519
tools like postman and curl to

00:13:45,440 --> 00:13:48,959
query the external system so if you

00:13:47,519 --> 00:13:51,040
remember from earlier in the talk we

00:13:48,959 --> 00:13:53,920
mentioned this rest api that we

00:13:51,040 --> 00:13:55,360
implemented here uh in a couple of these

00:13:53,920 --> 00:13:56,000
tabs here so the first i'm going to look

00:13:55,360 --> 00:13:58,639
at

00:13:56,000 --> 00:13:59,680
is this response tab and this is just a

00:13:58,639 --> 00:14:01,519
simple controller

00:13:59,680 --> 00:14:02,720
on any of the entity forms that we're

00:14:01,519 --> 00:14:04,399
migrating

00:14:02,720 --> 00:14:06,320
and it generates you know the request

00:14:04,399 --> 00:14:08,639
url that generates the data

00:14:06,320 --> 00:14:10,160
it's the same url that use that is used

00:14:08,639 --> 00:14:13,040
to generate our

00:14:10,160 --> 00:14:13,600
migration json files but this is

00:14:13,040 --> 00:14:15,279
actually

00:14:13,600 --> 00:14:16,800
going to do a live query against the

00:14:15,279 --> 00:14:19,440
legacy application

00:14:16,800 --> 00:14:21,279
uh using guzzle and return uh you know

00:14:19,440 --> 00:14:23,600
the response from that system in json

00:14:21,279 --> 00:14:25,040
format which is the same

00:14:23,600 --> 00:14:26,880
the same format that we get in our

00:14:25,040 --> 00:14:30,079
migration files so

00:14:26,880 --> 00:14:31,760
from here we know by looking down

00:14:30,079 --> 00:14:33,199
at the title that okay this is the

00:14:31,760 --> 00:14:35,040
correct title this is what

00:14:33,199 --> 00:14:36,480
it should be or you know if any of our

00:14:35,040 --> 00:14:37,839
fields are messed up we can see what

00:14:36,480 --> 00:14:40,880
they should be here

00:14:37,839 --> 00:14:42,639
um and get them corrected so

00:14:40,880 --> 00:14:44,320
now that we have this how do we get this

00:14:42,639 --> 00:14:45,199
back in the system without waiting until

00:14:44,320 --> 00:14:48,720
midnight

00:14:45,199 --> 00:14:50,240
well we also built a tab here called

00:14:48,720 --> 00:14:52,079
update item

00:14:50,240 --> 00:14:53,279
which presents a confirmation form and

00:14:52,079 --> 00:14:54,160
what's going to happen when i click

00:14:53,279 --> 00:14:55,839
confirm

00:14:54,160 --> 00:14:58,399
is it's going to execute a migration

00:14:55,839 --> 00:15:00,959
using that same migration definition

00:14:58,399 --> 00:15:02,399
that we saw in the yaml file but there's

00:15:00,959 --> 00:15:05,680
a one additional

00:15:02,399 --> 00:15:08,560
change here so if i hit confirm

00:15:05,680 --> 00:15:10,480
okay so it's updated our title and if i

00:15:08,560 --> 00:15:12,160
go back to the node edit form

00:15:10,480 --> 00:15:13,839
our title is indeed what it should be

00:15:12,160 --> 00:15:15,680
how did we do that well

00:15:13,839 --> 00:15:19,120
since we're leveraging that rest api and

00:15:15,680 --> 00:15:19,120
it's returning json to us

00:15:19,920 --> 00:15:24,079
we can actually instantiate an instance

00:15:22,000 --> 00:15:25,680
of the migration plugin

00:15:24,079 --> 00:15:28,240
and give it our migration id which is

00:15:25,680 --> 00:15:29,920
the working paper uh migration enamel

00:15:28,240 --> 00:15:31,920
but then we can go through and actually

00:15:29,920 --> 00:15:34,000
change properties of that definition in

00:15:31,920 --> 00:15:36,639
the in this instance that we're using

00:15:34,000 --> 00:15:38,800
and instead of using the the url to the

00:15:36,639 --> 00:15:41,759
private file we're actually passing it

00:15:38,800 --> 00:15:43,279
that http url that we saw on the drupal

00:15:41,759 --> 00:15:45,519
screen or changing our data fetcher

00:15:43,279 --> 00:15:47,040
plugin from file to http

00:15:45,519 --> 00:15:49,920
and what that does is this tells the

00:15:47,040 --> 00:15:53,519
migration to execute that request

00:15:49,920 --> 00:15:55,199
and use the response as the source data

00:15:53,519 --> 00:15:57,600
but everything else stays constant right

00:15:55,199 --> 00:15:59,360
since it's the same format our json file

00:15:57,600 --> 00:16:01,839
is in

00:15:59,360 --> 00:16:04,079
everything else about our yaml

00:16:01,839 --> 00:16:05,600
definition stays the same because

00:16:04,079 --> 00:16:07,279
it doesn't know that it's coming from a

00:16:05,600 --> 00:16:08,720
different source but the

00:16:07,279 --> 00:16:10,959
the data is still the same so all the

00:16:08,720 --> 00:16:12,320
mappings still work and this is how we

00:16:10,959 --> 00:16:15,759
were able to

00:16:12,320 --> 00:16:16,959
um hook up the back end to query the

00:16:15,759 --> 00:16:19,839
query the

00:16:16,959 --> 00:16:22,240
legacy application live and help fix any

00:16:19,839 --> 00:16:24,000
problems that we see like that

00:16:22,240 --> 00:16:25,440
maybe the data's wrong maybe somebody

00:16:24,000 --> 00:16:27,519
made a mistake

00:16:25,440 --> 00:16:29,519
uh while they're editing a node because

00:16:27,519 --> 00:16:30,959
we do have fields on these nodes that

00:16:29,519 --> 00:16:32,720
are not migrated that

00:16:30,959 --> 00:16:34,079
users can edit too maybe then you know

00:16:32,720 --> 00:16:35,519
if you even if you go from here make a

00:16:34,079 --> 00:16:37,279
mistake

00:16:35,519 --> 00:16:38,800
and i don't realize it and i click save

00:16:37,279 --> 00:16:39,759
because i'm editing paragraphs and it's

00:16:38,800 --> 00:16:41,199
like oh no

00:16:39,759 --> 00:16:43,759
you know i've suddenly i've messed

00:16:41,199 --> 00:16:45,279
something up there's no worry because

00:16:43,759 --> 00:16:47,680
now we can go back and

00:16:45,279 --> 00:16:50,000
we can just edit the note again and we

00:16:47,680 --> 00:16:52,639
can just you know quickly validate again

00:16:50,000 --> 00:16:54,240
what's in our legacy system or our

00:16:52,639 --> 00:16:56,480
upstream data

00:16:54,240 --> 00:16:59,440
that's the title okay so i can run this

00:16:56,480 --> 00:17:01,920
update i can confirm it

00:16:59,440 --> 00:17:03,440
great and we see the titles fixed again

00:17:01,920 --> 00:17:04,799
so that was just one example of one of

00:17:03,440 --> 00:17:06,480
the migrations that we're running

00:17:04,799 --> 00:17:07,919
every day we're pulling new data in

00:17:06,480 --> 00:17:10,400
we're putting it on our

00:17:07,919 --> 00:17:11,919
web server where drupal uh resides and

00:17:10,400 --> 00:17:14,480
we're running these migrations

00:17:11,919 --> 00:17:15,919
at midnight and we're doing this for 14

00:17:14,480 --> 00:17:18,640
different content types we're doing it

00:17:15,919 --> 00:17:20,319
for users and taxonomy terms and media

00:17:18,640 --> 00:17:22,400
and the result of that is we're able to

00:17:20,319 --> 00:17:24,319
pull over over a hundred thousand

00:17:22,400 --> 00:17:24,640
entities and we keep them updated every

00:17:24,319 --> 00:17:26,160
night

00:17:24,640 --> 00:17:27,839
there are cases where the content is

00:17:26,160 --> 00:17:29,679
constantly being updated

00:17:27,839 --> 00:17:31,840
in the legacy system even if it's five

00:17:29,679 --> 00:17:33,440
ten fifteen years old sometimes

00:17:31,840 --> 00:17:34,960
as new content comes in we'll make sure

00:17:33,440 --> 00:17:35,679
we get that synced we're also pulling

00:17:34,960 --> 00:17:38,000
along

00:17:35,679 --> 00:17:39,919
uh it's meta tag data of any vanity urls

00:17:38,000 --> 00:17:40,400
and redirects related to that content so

00:17:39,919 --> 00:17:42,080
we're

00:17:40,400 --> 00:17:44,160
at this point we're pretty in sync with

00:17:42,080 --> 00:17:46,000
what the upstream system has

00:17:44,160 --> 00:17:48,080
as a result of being so thorough in the

00:17:46,000 --> 00:17:49,919
migration planning process we now have

00:17:48,080 --> 00:17:51,440
all that content in drupal across all

00:17:49,919 --> 00:17:54,160
those entity types

00:17:51,440 --> 00:17:55,520
in uh well-defined fields and what do we

00:17:54,160 --> 00:17:57,200
do from here well of course

00:17:55,520 --> 00:17:58,799
we can make it searchable right that's

00:17:57,200 --> 00:18:00,880
one of the things we had to do

00:17:58,799 --> 00:18:02,880
and to enable this of course we use the

00:18:00,880 --> 00:18:05,840
great search api and search api

00:18:02,880 --> 00:18:07,360
solar module for drupal 8. let's take a

00:18:05,840 --> 00:18:08,559
look at what searching is like on the

00:18:07,360 --> 00:18:10,000
actual website

00:18:08,559 --> 00:18:12,080
we're going to look at the site-wide

00:18:10,000 --> 00:18:14,320
search and then a couple extra search

00:18:12,080 --> 00:18:15,600
related features that we built for uh

00:18:14,320 --> 00:18:17,760
the content editors

00:18:15,600 --> 00:18:19,360
at the ember to really put the power of

00:18:17,760 --> 00:18:20,960
search in their hands

00:18:19,360 --> 00:18:22,400
so let's just take a look at the back

00:18:20,960 --> 00:18:25,280
end really quick

00:18:22,400 --> 00:18:26,720
for the configuration of search api so

00:18:25,280 --> 00:18:29,120
you can have an idea of what we're

00:18:26,720 --> 00:18:29,760
talking about when it comes to doing

00:18:29,120 --> 00:18:32,240
searches

00:18:29,760 --> 00:18:33,200
of this size go to search api we'll look

00:18:32,240 --> 00:18:35,760
at our

00:18:33,200 --> 00:18:37,840
our index here take a look at the fields

00:18:35,760 --> 00:18:39,919
okay as you can see we have

00:18:37,840 --> 00:18:41,200
a lot of fields here that we are

00:18:39,919 --> 00:18:44,080
indexing into

00:18:41,200 --> 00:18:45,280
solar and all these fields are of course

00:18:44,080 --> 00:18:47,760
fields that we are

00:18:45,280 --> 00:18:48,880
storing and dribble from the migrations

00:18:47,760 --> 00:18:50,559
and this is where it was really

00:18:48,880 --> 00:18:52,480
important that we did that planning up

00:18:50,559 --> 00:18:54,480
front to make sure that the

00:18:52,480 --> 00:18:56,080
uh type of content or type of data that

00:18:54,480 --> 00:18:59,039
we were capturing in the migration

00:18:56,080 --> 00:19:00,799
would be stored um in an appropriate

00:18:59,039 --> 00:19:04,080
field stores so that we could

00:19:00,799 --> 00:19:05,840
index it with solar later you can see

00:19:04,080 --> 00:19:07,840
the types over here we have integers and

00:19:05,840 --> 00:19:09,120
strings full text

00:19:07,840 --> 00:19:10,960
and we do have a couple of special

00:19:09,120 --> 00:19:13,760
fields at the top doing uh

00:19:10,960 --> 00:19:14,160
some aggregated or groups data up here

00:19:13,760 --> 00:19:15,440
and

00:19:14,160 --> 00:19:16,960
if you don't do the planning for

00:19:15,440 --> 00:19:18,559
migrations up front you're going to have

00:19:16,960 --> 00:19:20,400
a really tough time when it comes to

00:19:18,559 --> 00:19:22,480
search and getting this part right

00:19:20,400 --> 00:19:23,919
um for example if you're if you migrate

00:19:22,480 --> 00:19:25,520
dates over and for some reason you

00:19:23,919 --> 00:19:26,799
select them as a plain text field

00:19:25,520 --> 00:19:28,160
instead of a date field

00:19:26,799 --> 00:19:29,840
you of course are not going to be able

00:19:28,160 --> 00:19:32,559
to expose them as a

00:19:29,840 --> 00:19:33,679
date based uh field index for solar and

00:19:32,559 --> 00:19:34,960
that's going to lead to problems when

00:19:33,679 --> 00:19:36,720
you want to have really rich

00:19:34,960 --> 00:19:38,320
search experiences like we're going to

00:19:36,720 --> 00:19:40,160
take a look at here in a second

00:19:38,320 --> 00:19:41,840
and we're going to take a look at three

00:19:40,160 --> 00:19:43,440
different searches that we enable for

00:19:41,840 --> 00:19:44,720
the ember website one is going to be the

00:19:43,440 --> 00:19:46,320
sitewide search

00:19:44,720 --> 00:19:48,000
the second is going to be an automatic

00:19:46,320 --> 00:19:50,400
search and the third one is going to be

00:19:48,000 --> 00:19:52,559
a manually entered search that is

00:19:50,400 --> 00:19:53,840
tailored by the content editors

00:19:52,559 --> 00:19:56,240
all right so let's start with the

00:19:53,840 --> 00:19:57,840
site-wide searcher on the ember.org

00:19:56,240 --> 00:19:59,919
so i'm going to search for an example

00:19:57,840 --> 00:20:03,600
term here

00:19:59,919 --> 00:20:06,320
enter we have a page we can filter by

00:20:03,600 --> 00:20:08,320
content type just do working paper some

00:20:06,320 --> 00:20:10,720
nice looking results here

00:20:08,320 --> 00:20:11,679
and this page is generated entirely in

00:20:10,720 --> 00:20:14,480
react.js

00:20:11,679 --> 00:20:16,320
the header and footer are still in the

00:20:14,480 --> 00:20:19,919
drupal theme but the middle part

00:20:16,320 --> 00:20:22,480
from search results down to the pager

00:20:19,919 --> 00:20:22,480
way at the bottom

00:20:22,640 --> 00:20:28,240
is handled by a react js application

00:20:26,480 --> 00:20:30,000
and we built the back end services in

00:20:28,240 --> 00:20:31,679
drupal and react uh the react

00:20:30,000 --> 00:20:34,400
application is talking to those backend

00:20:31,679 --> 00:20:37,039
services in order to make uh their query

00:20:34,400 --> 00:20:38,480
requests to get the solar search results

00:20:37,039 --> 00:20:41,039
into the page and we did this for a

00:20:38,480 --> 00:20:42,720
couple of reasons one is for performance

00:20:41,039 --> 00:20:44,159
since we are doing ajax requests and

00:20:42,720 --> 00:20:45,120
sending text over the wire the

00:20:44,159 --> 00:20:46,640
performance is

00:20:45,120 --> 00:20:48,559
uh far better than what we would get out

00:20:46,640 --> 00:20:50,159
of the box with views the second reason

00:20:48,559 --> 00:20:51,520
is because we wanted to establish a

00:20:50,159 --> 00:20:53,200
pattern with javascript that we could

00:20:51,520 --> 00:20:54,480
reuse around the site for our other

00:20:53,200 --> 00:20:56,320
search needs

00:20:54,480 --> 00:20:58,000
and the third reason is we wanted to

00:20:56,320 --> 00:21:00,159
avoid using views to build

00:20:58,000 --> 00:21:01,039
our search interfaces and our search

00:21:00,159 --> 00:21:02,480
pages

00:21:01,039 --> 00:21:04,159
and the reason for that is if you've

00:21:02,480 --> 00:21:06,799
ever had to use views to

00:21:04,159 --> 00:21:08,320
make a search of any kind that has

00:21:06,799 --> 00:21:10,720
exposed filters and

00:21:08,320 --> 00:21:12,559
maybe a layout similar to this one you

00:21:10,720 --> 00:21:14,880
know how difficult it can be to

00:21:12,559 --> 00:21:16,799
have to create all the different views

00:21:14,880 --> 00:21:19,120
templates to get this working and

00:21:16,799 --> 00:21:20,480
um get some of the search or get some of

00:21:19,120 --> 00:21:22,559
the functionality out of the

00:21:20,480 --> 00:21:24,240
the forms that you see here to get them

00:21:22,559 --> 00:21:26,960
to play nicely and of course

00:21:24,240 --> 00:21:27,919
um getting a nice snappy response out of

00:21:26,960 --> 00:21:29,919
views we just

00:21:27,919 --> 00:21:31,039
we opted not to go that route just to

00:21:29,919 --> 00:21:32,640
avoid um

00:21:31,039 --> 00:21:34,240
all those pain points of views of views

00:21:32,640 --> 00:21:35,600
is a great module but

00:21:34,240 --> 00:21:37,520
when it comes to creating these sorts of

00:21:35,600 --> 00:21:39,280
interfaces we tend to uh

00:21:37,520 --> 00:21:41,200
leave it up to react.js and the client

00:21:39,280 --> 00:21:43,679
side to really make this

00:21:41,200 --> 00:21:45,520
go as fast as possible for the end user

00:21:43,679 --> 00:21:46,799
and since we're using a client-side

00:21:45,520 --> 00:21:49,760
application to

00:21:46,799 --> 00:21:51,200
handle the search as you can see the url

00:21:49,760 --> 00:21:52,400
does update if we were to change some of

00:21:51,200 --> 00:21:55,760
the options here

00:21:52,400 --> 00:21:58,000
let's just select an author you'll see

00:21:55,760 --> 00:21:59,600
that the url changes to reflect that so

00:21:58,000 --> 00:22:02,080
every time that we do a search it is

00:21:59,600 --> 00:22:04,559
being cached by the web server or the uh

00:22:02,080 --> 00:22:05,600
the reverse proxy server so all users

00:22:04,559 --> 00:22:08,640
are getting a nice

00:22:05,600 --> 00:22:10,400
snappy uh responsive search interface on

00:22:08,640 --> 00:22:12,799
amber.org when they come

00:22:10,400 --> 00:22:14,720
and use the site-wide search so at this

00:22:12,799 --> 00:22:15,600
point once we had the site-wide search

00:22:14,720 --> 00:22:18,159
established

00:22:15,600 --> 00:22:20,640
we were able to take parts of this react

00:22:18,159 --> 00:22:22,720
uh react application and break it down

00:22:20,640 --> 00:22:24,240
and repurpose it to other kinds of

00:22:22,720 --> 00:22:26,000
searches within the site and let's

00:22:24,240 --> 00:22:27,360
uh i'll give an example of what i mean

00:22:26,000 --> 00:22:29,440
by that here

00:22:27,360 --> 00:22:32,320
i'll go back to our backend interface

00:22:29,440 --> 00:22:34,080
our admin interface

00:22:32,320 --> 00:22:35,919
go to paragraph types we actually have a

00:22:34,080 --> 00:22:37,200
lot of paragraphs on this site and about

00:22:35,919 --> 00:22:40,320
two dozen of them

00:22:37,200 --> 00:22:42,320
make up uh different what i would refer

00:22:40,320 --> 00:22:43,120
to as automatic or pre-canned search

00:22:42,320 --> 00:22:46,640
result

00:22:43,120 --> 00:22:48,880
uh components so if i look at let's for

00:22:46,640 --> 00:22:51,600
example books and chapter listing

00:22:48,880 --> 00:22:53,280
there's no fields on it and it's another

00:22:51,600 --> 00:22:54,720
one a data set listing again there's not

00:22:53,280 --> 00:22:56,480
going to be any fields on that

00:22:54,720 --> 00:22:59,760
and that's because we're using paragraph

00:22:56,480 --> 00:23:03,039
types in this way to provide

00:22:59,760 --> 00:23:05,440
a paragraph option on node forms

00:23:03,039 --> 00:23:06,720
to drop in searches that are particular

00:23:05,440 --> 00:23:09,039
to

00:23:06,720 --> 00:23:10,960
that partic that specific paragraph type

00:23:09,039 --> 00:23:11,600
so in the uh instance of books and

00:23:10,960 --> 00:23:13,919
chapters

00:23:11,600 --> 00:23:15,919
if i was to drop that on a content page

00:23:13,919 --> 00:23:17,840
we would get the books and chapters

00:23:15,919 --> 00:23:18,960
uh search results so if i were to just

00:23:17,840 --> 00:23:22,480
navigate

00:23:18,960 --> 00:23:25,039
on the amber website back to books and

00:23:22,480 --> 00:23:25,039
chapters

00:23:25,120 --> 00:23:28,799
this is this is a paragraph that holds

00:23:27,600 --> 00:23:32,000
the react

00:23:28,799 --> 00:23:34,400
uh react component for books and

00:23:32,000 --> 00:23:36,480
chapters and the react code is actually

00:23:34,400 --> 00:23:38,000
the same as a site-wide search and it's

00:23:36,480 --> 00:23:39,760
the same as all the other searches

00:23:38,000 --> 00:23:41,760
around the site we're just changing

00:23:39,760 --> 00:23:43,039
uh the request url that's that's being

00:23:41,760 --> 00:23:44,480
made to uh

00:23:43,039 --> 00:23:46,080
the drupal controller that's making the

00:23:44,480 --> 00:23:47,200
request to the solar server to get the

00:23:46,080 --> 00:23:48,720
results back

00:23:47,200 --> 00:23:50,480
and again as you can see we have all the

00:23:48,720 --> 00:23:51,679
same options available to us we can go

00:23:50,480 --> 00:23:53,600
and select

00:23:51,679 --> 00:23:55,840
a different taxonomy and the different

00:23:53,600 --> 00:23:57,919
facets we have up here

00:23:55,840 --> 00:23:59,840
we can do authors we can even do a type

00:23:57,919 --> 00:24:02,240
ahead we have all the same

00:23:59,840 --> 00:24:04,240
facilities available to us as the other

00:24:02,240 --> 00:24:05,600
the global site-wide search and all it

00:24:04,240 --> 00:24:08,320
took to do this was to

00:24:05,600 --> 00:24:10,080
put the react.js uh script

00:24:08,320 --> 00:24:10,960
initialization code in our paragraph

00:24:10,080 --> 00:24:12,400
tweak template

00:24:10,960 --> 00:24:14,240
we didn't have to do anything special

00:24:12,400 --> 00:24:15,440
here other than put into our paragraph

00:24:14,240 --> 00:24:17,840
template put the react

00:24:15,440 --> 00:24:19,520
js code in the html container it's

00:24:17,840 --> 00:24:20,960
expecting to bind to

00:24:19,520 --> 00:24:22,559
i'll just create an example page to

00:24:20,960 --> 00:24:25,120
demonstrate what i'm talking about here

00:24:22,559 --> 00:24:28,559
so if i just go add a new

00:24:25,120 --> 00:24:33,039
listing page and call this uh con

00:24:28,559 --> 00:24:34,480
2021 test page

00:24:33,039 --> 00:24:35,760
we have a list of components here we're

00:24:34,480 --> 00:24:37,679
just going to use books and chapters

00:24:35,760 --> 00:24:39,200
listing

00:24:37,679 --> 00:24:40,880
you can see there's no field so when i

00:24:39,200 --> 00:24:42,159
save this this will put the same exact

00:24:40,880 --> 00:24:45,279
search on the page

00:24:42,159 --> 00:24:47,840
that we were just looking at as you can

00:24:45,279 --> 00:24:47,840
see here

00:24:48,000 --> 00:24:51,200
so we can do this for any number of

00:24:49,760 --> 00:24:53,279
pages that we want to add

00:24:51,200 --> 00:24:54,240
searches to as i mentioned we have a

00:24:53,279 --> 00:24:55,840
dozen or two

00:24:54,240 --> 00:24:58,159
pre-built searches that are just like

00:24:55,840 --> 00:24:59,440
this but there's a third example as well

00:24:58,159 --> 00:25:01,840
and that's the one where we allow the

00:24:59,440 --> 00:25:03,279
content editors to actually tailor

00:25:01,840 --> 00:25:05,360
uh the kind of search component they

00:25:03,279 --> 00:25:07,600
want to put on the page and we did that

00:25:05,360 --> 00:25:09,520
again by using a paragraph type but this

00:25:07,600 --> 00:25:11,200
time the paragraph type has fields on it

00:25:09,520 --> 00:25:13,440
to allow the content editor

00:25:11,200 --> 00:25:14,400
to actually manipulate the search

00:25:13,440 --> 00:25:16,320
parameters

00:25:14,400 --> 00:25:17,840
that are applied before the user gets to

00:25:16,320 --> 00:25:19,440
interact with it and

00:25:17,840 --> 00:25:22,400
let's go take a look at what i mean by

00:25:19,440 --> 00:25:25,520
that so i will once again create another

00:25:22,400 --> 00:25:29,840
page in drupal

00:25:25,520 --> 00:25:29,840
i have content

00:25:33,360 --> 00:25:37,039
components and this time we will select

00:25:35,600 --> 00:25:38,960
generic listing

00:25:37,039 --> 00:25:40,640
and as you can see we have a lot of

00:25:38,960 --> 00:25:42,080
fields here to pick from i'll just

00:25:40,640 --> 00:25:43,679
go through really quick we can actually

00:25:42,080 --> 00:25:44,640
name the title of the component so we'll

00:25:43,679 --> 00:25:48,240
do

00:25:44,640 --> 00:25:52,799
drupal con 21

00:25:48,240 --> 00:25:56,559
test search components

00:25:52,799 --> 00:25:59,120
test results and if there's no results

00:25:56,559 --> 00:26:03,840
we can actually control that text too

00:25:59,120 --> 00:26:03,840
sorry there were results

00:26:06,400 --> 00:26:11,440
we can actually refer to a node if you

00:26:09,039 --> 00:26:13,120
want

00:26:11,440 --> 00:26:14,960
let's go ahead and select an example one

00:26:13,120 --> 00:26:16,799
i don't know if it's gonna produce any

00:26:14,960 --> 00:26:20,799
results for us or not but let's just

00:26:16,799 --> 00:26:20,799
try to find a working paper

00:26:23,039 --> 00:26:26,640
okay great we'll just select this one

00:26:24,799 --> 00:26:28,320
and see if see what we get here

00:26:26,640 --> 00:26:30,000
so what this is going to do is uh

00:26:28,320 --> 00:26:32,080
perform the same search that we were

00:26:30,000 --> 00:26:33,440
looking at with the site-wide search

00:26:32,080 --> 00:26:36,080
and the books and chapters in the

00:26:33,440 --> 00:26:38,400
working papers listing page search

00:26:36,080 --> 00:26:39,279
and other searches that are similar but

00:26:38,400 --> 00:26:40,880
in this case

00:26:39,279 --> 00:26:42,640
this is going to say okay before you

00:26:40,880 --> 00:26:43,520
execute or what when you execute the

00:26:42,640 --> 00:26:45,360
query

00:26:43,520 --> 00:26:47,919
uh make sure we only get results that

00:26:45,360 --> 00:26:50,159
are related to or have a relationship to

00:26:47,919 --> 00:26:52,320
uh this particular node and then down

00:26:50,159 --> 00:26:54,880
here we can say okay also limit the

00:26:52,320 --> 00:26:56,720
results to only being articles or only

00:26:54,880 --> 00:27:00,960
being

00:26:56,720 --> 00:27:02,880
working papers or only being chapters

00:27:00,960 --> 00:27:04,080
and we can also apply the same filters

00:27:02,880 --> 00:27:05,840
for a user

00:27:04,080 --> 00:27:07,120
or a taxonomy term but we'll leave those

00:27:05,840 --> 00:27:11,279
blank for now

00:27:07,120 --> 00:27:11,279
i'll just publish this page

00:27:11,840 --> 00:27:15,760
right so we see our component on the

00:27:13,679 --> 00:27:17,200
page and there are no results i probably

00:27:15,760 --> 00:27:20,480
don't have enough

00:27:17,200 --> 00:27:22,559
um enough solar items in my local

00:27:20,480 --> 00:27:23,919
server to produce anything so if i go

00:27:22,559 --> 00:27:25,200
back and just edit that again

00:27:23,919 --> 00:27:26,559
we'll just we'll take that content

00:27:25,200 --> 00:27:28,720
reference right off there and see what

00:27:26,559 --> 00:27:35,840
we get

00:27:28,720 --> 00:27:35,840
just take that off there

00:27:37,200 --> 00:27:41,039
okay great so now you can see we do

00:27:39,120 --> 00:27:42,799
actually get some results

00:27:41,039 --> 00:27:44,240
on the page here and this was a really

00:27:42,799 --> 00:27:47,120
important step

00:27:44,240 --> 00:27:49,200
um for the content authors on ember

00:27:47,120 --> 00:27:50,960
because now they can create

00:27:49,200 --> 00:27:52,559
any page they want anywhere on the

00:27:50,960 --> 00:27:55,520
website and drop

00:27:52,559 --> 00:27:57,039
a search component in that is um you

00:27:55,520 --> 00:27:58,480
know as you can see from the from the

00:27:57,039 --> 00:28:00,080
paragraph form there

00:27:58,480 --> 00:28:02,000
configurable in an infinite number of

00:28:00,080 --> 00:28:05,760
ways and this was really

00:28:02,000 --> 00:28:07,120
useful because um we couldn't foresee

00:28:05,760 --> 00:28:08,960
the number of searches that we would

00:28:07,120 --> 00:28:11,440
need to build to facilitate

00:28:08,960 --> 00:28:12,720
um you know all the content that's in

00:28:11,440 --> 00:28:15,279
the website so

00:28:12,720 --> 00:28:16,080
this provided the subject matter experts

00:28:15,279 --> 00:28:18,320
at ember a way

00:28:16,080 --> 00:28:19,360
to really kind of create all these

00:28:18,320 --> 00:28:21,840
one-off pages

00:28:19,360 --> 00:28:23,360
uh one-off pages in the sites uh in

00:28:21,840 --> 00:28:27,200
different sections and then

00:28:23,360 --> 00:28:29,039
add a specific um a very super specific

00:28:27,200 --> 00:28:30,559
search on there with with a very

00:28:29,039 --> 00:28:31,600
specific result set that's already

00:28:30,559 --> 00:28:33,520
predetermined

00:28:31,600 --> 00:28:35,360
and the user can still go through and

00:28:33,520 --> 00:28:38,320
select and search through

00:28:35,360 --> 00:28:40,000
um the result set here this is a little

00:28:38,320 --> 00:28:41,440
more contained within

00:28:40,000 --> 00:28:43,440
the parameters to what the content

00:28:41,440 --> 00:28:45,440
editor wants you to to search against

00:28:43,440 --> 00:28:47,360
so i think we're just about a time here

00:28:45,440 --> 00:28:47,840
so i'm gonna stop the talk at this point

00:28:47,360 --> 00:28:49,679
and

00:28:47,840 --> 00:28:51,279
uh say thank you to the drupalcon

00:28:49,679 --> 00:28:52,000
organizers for helping us through our

00:28:51,279 --> 00:28:54,640
first

00:28:52,000 --> 00:28:56,799
uh presentation this year and an extra

00:28:54,640 --> 00:28:58,080
special thank you to all the fine folks

00:28:56,799 --> 00:28:59,919
in the drupal

00:28:58,080 --> 00:29:02,159
drupal official drupal slack migration

00:28:59,919 --> 00:29:03,919
channel that really helped me

00:29:02,159 --> 00:29:05,279
along the way figure out how migrations

00:29:03,919 --> 00:29:06,559
work in drupal 8

00:29:05,279 --> 00:29:08,640
and thank you to everybody in the

00:29:06,559 --> 00:29:09,919
audience who attended our session today

00:29:08,640 --> 00:29:11,679
and now i just want to open the floor

00:29:09,919 --> 00:29:15,360
for any q a that you may have

00:29:11,679 --> 00:29:15,360
for us for this uh this talk

00:29:17,600 --> 00:29:21,360
all right we did it thank you everybody

00:29:23,679 --> 00:29:27,039
hey i think we're a little over so yeah

00:29:26,320 --> 00:29:29,360
we can take

00:29:27,039 --> 00:29:31,120
uh questions and conversations back to

00:29:29,360 --> 00:29:32,240
our booth um i know there was a lot to

00:29:31,120 --> 00:29:34,000
cover here

00:29:32,240 --> 00:29:36,480
we do see some pretty good questions in

00:29:34,000 --> 00:29:36,480
in the chat

00:29:36,559 --> 00:29:43,200
that we can take over there

00:29:41,039 --> 00:29:44,720
all right thank you everybody uh we hope

00:29:43,200 --> 00:29:46,640
you've enjoyed drupalcon this week we

00:29:44,720 --> 00:29:48,320
hope to see you at the next one

00:29:46,640 --> 00:29:49,600
and uh and in the more immediate term

00:29:48,320 --> 00:29:51,200
please join us at the booth for a

00:29:49,600 --> 00:29:53,520
follow-up conversation

00:29:51,200 --> 00:29:55,600
um thanks again we really enjoyed it and

00:29:53,520 --> 00:30:09,840
we hope you did as well

00:29:55,600 --> 00:30:09,840
yep thank you

00:30:09,919 --> 00:30:12,000

YouTube URL: https://www.youtube.com/watch?v=OkaUbpLN9nk


