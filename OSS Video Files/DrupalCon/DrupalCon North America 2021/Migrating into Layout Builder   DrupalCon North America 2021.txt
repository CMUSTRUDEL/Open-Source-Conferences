Title: Migrating into Layout Builder   DrupalCon North America 2021
Publication date: 2021-05-27
Playlist: DrupalCon North America 2021
Description: 
	Migrating into Layout Builder for a project with the University of New England. Unfortunately, the video did not record on the HopIn platform that was being used, so I re-recorded the presentation for everyone's benefit.
Captions: 
	00:00:02,639 --> 00:00:04,879
hi

00:00:05,040 --> 00:00:08,720
this year at drupalcon north america i

00:00:07,440 --> 00:00:10,480
presented this

00:00:08,720 --> 00:00:12,559
session about migrating into layout

00:00:10,480 --> 00:00:15,120
builder and unfortunately it did not get

00:00:12,559 --> 00:00:16,960
recorded so i'm here to re-record and

00:00:15,120 --> 00:00:18,320
represent this so that i can share it

00:00:16,960 --> 00:00:20,080
with all of you

00:00:18,320 --> 00:00:22,400
so i'm going to talk today about

00:00:20,080 --> 00:00:25,199
migrating into layout builder

00:00:22,400 --> 00:00:26,000
it's a project that we undertook in the

00:00:25,199 --> 00:00:28,160
last year

00:00:26,000 --> 00:00:29,119
and i learned a lot about layout builder

00:00:28,160 --> 00:00:31,119
and

00:00:29,119 --> 00:00:32,880
a little bit more about migration and

00:00:31,119 --> 00:00:34,239
how all those things come together so i

00:00:32,880 --> 00:00:35,600
just wanted to

00:00:34,239 --> 00:00:37,920
take that knowledge and share it with

00:00:35,600 --> 00:00:39,600
you so i'm chris i'm from a company

00:00:37,920 --> 00:00:41,680
called redfin solutions we're based out

00:00:39,600 --> 00:00:43,120
of portland maine

00:00:41,680 --> 00:00:45,920
you can find me all over the web at

00:00:43,120 --> 00:00:48,239
chris from redfin i

00:00:45,920 --> 00:00:49,840
had a major online identity crisis up

00:00:48,239 --> 00:00:51,680
until recently i finally switched

00:00:49,840 --> 00:00:52,559
everything over to use one handle so you

00:00:51,680 --> 00:00:55,600
can find

00:00:52,559 --> 00:00:56,800
me on the drupal slack github all that

00:00:55,600 --> 00:00:59,840
is chris from redfin and

00:00:56,800 --> 00:01:00,480
chris from redfin.dev so thanks so much

00:00:59,840 --> 00:01:04,960
for

00:01:00,480 --> 00:01:04,960
for being here and listening to me today

00:01:05,119 --> 00:01:10,479
so uh who am i i am like one of those

00:01:08,640 --> 00:01:11,680
computer people who

00:01:10,479 --> 00:01:13,280
always knew i wanted to do something

00:01:11,680 --> 00:01:13,600
with computers i had a computer when i

00:01:13,280 --> 00:01:16,479
was

00:01:13,600 --> 00:01:17,360
eight years old and um i was never very

00:01:16,479 --> 00:01:19,920
good at games

00:01:17,360 --> 00:01:20,560
so i started learning uh how to program

00:01:19,920 --> 00:01:22,159
it and

00:01:20,560 --> 00:01:23,920
getting on bulletin boards and it was

00:01:22,159 --> 00:01:25,920
sort of all downhill from there so

00:01:23,920 --> 00:01:27,040
i got a degree in computer science from

00:01:25,920 --> 00:01:30,479
providence college

00:01:27,040 --> 00:01:32,799
um back at the turn of the century

00:01:30,479 --> 00:01:34,640
and uh i worked at a couple places doing

00:01:32,799 --> 00:01:36,320
software engineering i did some embedded

00:01:34,640 --> 00:01:38,240
systems and then i kind of got

00:01:36,320 --> 00:01:40,960
dabbled in web and then i went to a web

00:01:38,240 --> 00:01:43,040
company and e-commerce retailer and

00:01:40,960 --> 00:01:46,799
you know generally liked the the work

00:01:43,040 --> 00:01:49,040
but was looking for something more so

00:01:46,799 --> 00:01:50,159
at that company we had started

00:01:49,040 --> 00:01:52,640
moonlighting

00:01:50,159 --> 00:01:55,200
and under the name redfin solutions

00:01:52,640 --> 00:01:56,640
while we still worked full time and then

00:01:55,200 --> 00:01:58,399
i left that job and went and got a

00:01:56,640 --> 00:01:59,600
degree in teaching at appalachian state

00:01:58,399 --> 00:02:02,159
university so

00:01:59,600 --> 00:02:03,280
i really love teaching and sharing my

00:02:02,159 --> 00:02:05,360
knowledge and

00:02:03,280 --> 00:02:06,399
helping people understand stuff so so

00:02:05,360 --> 00:02:09,360
i'm really

00:02:06,399 --> 00:02:09,679
happy to uh to share this with you today

00:02:09,360 --> 00:02:11,520
so

00:02:09,679 --> 00:02:13,200
after grad school redfin solutions kind

00:02:11,520 --> 00:02:14,959
of went full time so

00:02:13,200 --> 00:02:17,360
now we're uh just a drupal only

00:02:14,959 --> 00:02:19,440
development shop based in portland maine

00:02:17,360 --> 00:02:20,800
in the united states we're just starting

00:02:19,440 --> 00:02:23,280
to

00:02:20,800 --> 00:02:24,560
get into a lot of uh cool react stuff we

00:02:23,280 --> 00:02:26,080
have some react native

00:02:24,560 --> 00:02:27,760
you know our first drupal site was on

00:02:26,080 --> 00:02:30,959
drupal 4.7 for

00:02:27,760 --> 00:02:32,720
uh a center at harvard university and

00:02:30,959 --> 00:02:34,239
you know one of our most recent projects

00:02:32,720 --> 00:02:37,280
is rolling out uh

00:02:34,239 --> 00:02:39,360
covid registrations here in maine uh

00:02:37,280 --> 00:02:42,000
with a decoupled drupal 9 site so we've

00:02:39,360 --> 00:02:44,319
kind of run the whole gamut there

00:02:42,000 --> 00:02:46,239
so the project that we have that i'm

00:02:44,319 --> 00:02:47,760
going to talk with you about today is

00:02:46,239 --> 00:02:49,680
the university of new england their

00:02:47,760 --> 00:02:51,200
maine's largest private university they

00:02:49,680 --> 00:02:52,640
have two campuses in maine

00:02:51,200 --> 00:02:54,800
they have a study abroad campus in

00:02:52,640 --> 00:02:57,040
morocco and they do online learning

00:02:54,800 --> 00:02:58,080
so it's a really big organization over

00:02:57,040 --> 00:02:59,760
there

00:02:58,080 --> 00:03:01,599
and they have a focus on hands-on and

00:02:59,760 --> 00:03:03,440
experiential learning which is

00:03:01,599 --> 00:03:05,519
excellent when you look at that campus

00:03:03,440 --> 00:03:07,599
and you realize they have programs in

00:03:05,519 --> 00:03:08,720
marine science environmental science

00:03:07,599 --> 00:03:10,239
that are hands-on

00:03:08,720 --> 00:03:12,239
so it's really great to get out there on

00:03:10,239 --> 00:03:15,599
the ocean with them

00:03:12,239 --> 00:03:17,599
so they came to us with

00:03:15,599 --> 00:03:18,959
a need to upgrade to drupal 8. or we

00:03:17,599 --> 00:03:19,680
came to them or one of the other we have

00:03:18,959 --> 00:03:21,440
a long

00:03:19,680 --> 00:03:22,720
long-standing relationship with them and

00:03:21,440 --> 00:03:26,319
you know we all knew

00:03:22,720 --> 00:03:30,720
that it was time to move on to drupal 8.

00:03:26,319 --> 00:03:32,159
so their drupal 7 site was really built

00:03:30,720 --> 00:03:34,239
they were pretty early adopters of

00:03:32,159 --> 00:03:36,000
drupal 7 so

00:03:34,239 --> 00:03:38,159
and it was sort of ahead of its time you

00:03:36,000 --> 00:03:42,159
know it was responsive on day one

00:03:38,159 --> 00:03:42,959
um and they used component-based design

00:03:42,159 --> 00:03:44,879
principles

00:03:42,959 --> 00:03:46,560
in their content authoring experience

00:03:44,879 --> 00:03:49,040
you know it was really cutting edge for

00:03:46,560 --> 00:03:50,640
the time but as it was an early adopter

00:03:49,040 --> 00:03:52,400
the experience was starting to get a

00:03:50,640 --> 00:03:54,480
little dated especially the content

00:03:52,400 --> 00:03:56,400
editor experience

00:03:54,480 --> 00:03:58,239
so the way that they were implementing

00:03:56,400 --> 00:04:00,879
their component-based design

00:03:58,239 --> 00:04:02,720
was in wysiwyg fields using the wysiwyg

00:04:00,879 --> 00:04:04,480
templates module which was

00:04:02,720 --> 00:04:06,080
it's really amazing it does really

00:04:04,480 --> 00:04:08,879
wonderful things and that was kind of

00:04:06,080 --> 00:04:11,200
the best we had it was almost um

00:04:08,879 --> 00:04:12,239
poor man's gutenberg for its time you

00:04:11,200 --> 00:04:15,200
know and you could

00:04:12,239 --> 00:04:15,760
pick a template to embed a figure or a

00:04:15,200 --> 00:04:17,280
video

00:04:15,760 --> 00:04:19,359
or do two-column three-column

00:04:17,280 --> 00:04:21,359
five-column layouts they had

00:04:19,359 --> 00:04:23,440
cards with statistics on them you can

00:04:21,359 --> 00:04:25,759
kind of see in the preview there

00:04:23,440 --> 00:04:27,440
but moving these things around and sort

00:04:25,759 --> 00:04:28,960
of shuffling them

00:04:27,440 --> 00:04:31,199
as you've all done if you've tried to

00:04:28,960 --> 00:04:32,960
cut and paste and left off your closing

00:04:31,199 --> 00:04:34,479
div tag or something like that it can be

00:04:32,960 --> 00:04:38,000
a little tricky so

00:04:34,479 --> 00:04:39,840
we know that we can do better and so we

00:04:38,000 --> 00:04:41,600
knew that we needed to reach for layout

00:04:39,840 --> 00:04:42,639
builder to do these kinds of component

00:04:41,600 --> 00:04:46,160
based designs

00:04:42,639 --> 00:04:48,000
um or pages and layouts so

00:04:46,160 --> 00:04:49,759
we wanted to use layout builder we

00:04:48,000 --> 00:04:52,000
wanted that like flexible

00:04:49,759 --> 00:04:53,120
responsive column based approach where

00:04:52,000 --> 00:04:54,639
the blocks could actually be

00:04:53,120 --> 00:04:57,759
interchangeable movable

00:04:54,639 --> 00:04:59,919
it would be you know responsive

00:04:57,759 --> 00:05:01,840
that's what we wanted to do but these

00:04:59,919 --> 00:05:04,080
two paradigms they do not

00:05:01,840 --> 00:05:05,520
necessarily go together right so these

00:05:04,080 --> 00:05:07,919
two paradigms

00:05:05,520 --> 00:05:09,919
can work but not without a

00:05:07,919 --> 00:05:10,240
transformation kind of taking place that

00:05:09,919 --> 00:05:12,160
is

00:05:10,240 --> 00:05:14,960
you can fit a square peg in a round

00:05:12,160 --> 00:05:17,680
whole as long as you make it round first

00:05:14,960 --> 00:05:18,800
and so that was our goal so we can do

00:05:17,680 --> 00:05:21,360
that sort of thing

00:05:18,800 --> 00:05:22,160
uh with drupal because the migrate api

00:05:21,360 --> 00:05:24,479
and core is

00:05:22,160 --> 00:05:26,880
super powerful the transformation takes

00:05:24,479 --> 00:05:30,000
place there in that migration

00:05:26,880 --> 00:05:31,840
and the migrate module follows a

00:05:30,000 --> 00:05:33,280
computer science pattern called extract

00:05:31,840 --> 00:05:36,479
transform load

00:05:33,280 --> 00:05:39,919
okay in drupal we call these source

00:05:36,479 --> 00:05:41,919
process and destination plugins

00:05:39,919 --> 00:05:43,440
so the extraction or the source where

00:05:41,919 --> 00:05:45,440
are you getting your data

00:05:43,440 --> 00:05:48,000
the process or the transform do you need

00:05:45,440 --> 00:05:50,479
to manipulate it or massage it

00:05:48,000 --> 00:05:51,759
and then where is it going to at the end

00:05:50,479 --> 00:05:53,199
result you've got to load it into a

00:05:51,759 --> 00:05:56,960
database the destination

00:05:53,199 --> 00:05:58,560
okay so one thing to point out is

00:05:56,960 --> 00:06:00,800
i'm not suggesting that we did a

00:05:58,560 --> 00:06:01,600
full-blown wysiwyg to layout builder

00:06:00,800 --> 00:06:03,520
migration

00:06:01,600 --> 00:06:05,440
right there was no need to give in the

00:06:03,520 --> 00:06:07,360
resources that we had available

00:06:05,440 --> 00:06:09,520
but supposing you're a regex master and

00:06:07,360 --> 00:06:10,560
you wanted to like extract from that big

00:06:09,520 --> 00:06:12,800
wysiwyg field

00:06:10,560 --> 00:06:14,400
all of the different components and

00:06:12,800 --> 00:06:15,120
migrate them to separate sections and

00:06:14,400 --> 00:06:16,880
separate

00:06:15,120 --> 00:06:18,880
types of components that that can be

00:06:16,880 --> 00:06:20,560
done what i'm going to present to you

00:06:18,880 --> 00:06:22,319
today is a little bit about what we did

00:06:20,560 --> 00:06:23,919
which was actually a more simpler

00:06:22,319 --> 00:06:26,319
approach which was to take the body

00:06:23,919 --> 00:06:27,600
field and migrate it into a one column

00:06:26,319 --> 00:06:29,840
layout builder layout

00:06:27,600 --> 00:06:32,000
with one basic text block in there and

00:06:29,840 --> 00:06:33,360
we migrated the legacy styles over so

00:06:32,000 --> 00:06:35,199
that on day one

00:06:33,360 --> 00:06:37,360
all the pages would be using the same

00:06:35,199 --> 00:06:39,919
paradigm but over time

00:06:37,360 --> 00:06:41,520
we could convert the pages that needed

00:06:39,919 --> 00:06:44,800
it to having

00:06:41,520 --> 00:06:44,800
more robust layouts

00:06:46,000 --> 00:06:51,919
so the source for us that was the drupal

00:06:49,759 --> 00:06:54,240
7 database we actually just connected to

00:06:51,919 --> 00:06:56,000
the live drupal 7 database on pantheon

00:06:54,240 --> 00:06:56,960
for our live migrations and then for our

00:06:56,000 --> 00:06:58,800
dev migrations

00:06:56,960 --> 00:07:00,199
we had a development copy locally and we

00:06:58,800 --> 00:07:01,680
just managed that with a

00:07:00,199 --> 00:07:04,639
settingslocal.php

00:07:01,680 --> 00:07:07,120
where we could point it to the the local

00:07:04,639 --> 00:07:09,520
copy while we developed our migrations

00:07:07,120 --> 00:07:11,440
so what i will show you by the end of

00:07:09,520 --> 00:07:12,160
this when i demo these concepts is a

00:07:11,440 --> 00:07:14,800
very simple

00:07:12,160 --> 00:07:17,199
example site that i've built that will

00:07:14,800 --> 00:07:19,280
run a handful of you know migration

00:07:17,199 --> 00:07:21,520
entities uh bring a couple entities in

00:07:19,280 --> 00:07:23,680
and that is using csv files as

00:07:21,520 --> 00:07:25,440
its source so it's a little bit

00:07:23,680 --> 00:07:26,880
different but the concepts are all still

00:07:25,440 --> 00:07:28,680
the same

00:07:26,880 --> 00:07:30,560
so then the next piece is the

00:07:28,680 --> 00:07:33,199
transformation process

00:07:30,560 --> 00:07:34,800
right and we'll come back to this so

00:07:33,199 --> 00:07:36,720
much like with a butterfly most of the

00:07:34,800 --> 00:07:39,280
magic happens in the transform or

00:07:36,720 --> 00:07:40,560
in drupal the process so i'm going to

00:07:39,280 --> 00:07:44,080
get to that when we dive

00:07:40,560 --> 00:07:46,319
a little bit deeper in and then we want

00:07:44,080 --> 00:07:47,680
to figure out our destination what are

00:07:46,319 --> 00:07:50,160
we loading into

00:07:47,680 --> 00:07:50,879
so for us these are drupal 8 nodes that

00:07:50,160 --> 00:07:54,080
are built with

00:07:50,879 --> 00:07:56,240
layout builder overrides so all of these

00:07:54,080 --> 00:07:58,000
drupal 8 nodes are basic pages we

00:07:56,240 --> 00:08:00,560
allowed all basic pages to be

00:07:58,000 --> 00:08:01,520
overridden with layout builder and our

00:08:00,560 --> 00:08:03,039
custom

00:08:01,520 --> 00:08:04,800
our layout that we built with manage

00:08:03,039 --> 00:08:07,280
display is very simple

00:08:04,800 --> 00:08:08,639
it had one separate field that was

00:08:07,280 --> 00:08:10,080
always sort of up at the top and then

00:08:08,639 --> 00:08:11,440
layout builder was everything else the

00:08:10,080 --> 00:08:14,800
rest of the page

00:08:11,440 --> 00:08:16,639
so there is a small point here that we

00:08:14,800 --> 00:08:18,319
also migrate into blocks

00:08:16,639 --> 00:08:20,479
separately so there's a couple of

00:08:18,319 --> 00:08:21,840
migrations actually at play but

00:08:20,479 --> 00:08:24,479
mentally you should just think about

00:08:21,840 --> 00:08:26,080
we're going from these d7 basic pages

00:08:24,479 --> 00:08:28,800
with wysiwyg templates

00:08:26,080 --> 00:08:30,479
to drupal eight basic pages with layout

00:08:28,800 --> 00:08:33,519
builder overrides

00:08:30,479 --> 00:08:35,760
so what we need to do is understand

00:08:33,519 --> 00:08:37,760
how layout builder kind of works under

00:08:35,760 --> 00:08:39,599
the hood so if you think about

00:08:37,760 --> 00:08:42,080
any entity reference field in drupal

00:08:39,599 --> 00:08:43,839
core or paragraphs or bricks something

00:08:42,080 --> 00:08:45,600
like that

00:08:43,839 --> 00:08:48,399
you have your base entity which for us

00:08:45,600 --> 00:08:51,440
is a node particularly a basic page node

00:08:48,399 --> 00:08:53,680
and then that entity has a field on it

00:08:51,440 --> 00:08:54,480
and then that field stores references to

00:08:53,680 --> 00:08:57,120
other entities

00:08:54,480 --> 00:08:58,000
so if you had an article node and that

00:08:57,120 --> 00:09:00,320
article had a

00:08:58,000 --> 00:09:02,000
tags field on it and you tagged it three

00:09:00,320 --> 00:09:05,760
times it would store the three

00:09:02,000 --> 00:09:08,480
taxonomy term ids for those three terms

00:09:05,760 --> 00:09:08,959
the term and all its fields and it its

00:09:08,480 --> 00:09:11,200
data

00:09:08,959 --> 00:09:13,920
lives on the term entity we're just

00:09:11,200 --> 00:09:17,040
storing a reference to that entity

00:09:13,920 --> 00:09:17,519
okay so each section of a layout builder

00:09:17,040 --> 00:09:19,839
layout

00:09:17,519 --> 00:09:21,920
so when you say put in a one call

00:09:19,839 --> 00:09:24,000
section put in a two two-call section

00:09:21,920 --> 00:09:26,160
then put in a three-call section

00:09:24,000 --> 00:09:28,880
it's like bowling if we did a four at

00:09:26,160 --> 00:09:32,320
the end we'd have a real good bowling

00:09:28,880 --> 00:09:35,600
layout there so each section

00:09:32,320 --> 00:09:38,399
is stored as a section object and

00:09:35,600 --> 00:09:39,279
section objects are comprised of section

00:09:38,399 --> 00:09:41,839
component

00:09:39,279 --> 00:09:43,040
objects okay which are essentially

00:09:41,839 --> 00:09:45,040
blocks on the site

00:09:43,040 --> 00:09:46,959
okay so each section component is more

00:09:45,040 --> 00:09:50,000
or less a block

00:09:46,959 --> 00:09:52,399
and so we have this

00:09:50,000 --> 00:09:53,600
one-to-many relationship from sections

00:09:52,399 --> 00:09:55,200
to section components

00:09:53,600 --> 00:09:56,720
you could take a one column layout and

00:09:55,200 --> 00:09:58,800
you could put four blocks in it stack

00:09:56,720 --> 00:10:00,160
stack stack stack

00:09:58,800 --> 00:10:02,000
there's also the one-to-many

00:10:00,160 --> 00:10:03,760
relationship from the node to the

00:10:02,000 --> 00:10:04,480
sections in the layout builder layout

00:10:03,760 --> 00:10:07,680
right so

00:10:04,480 --> 00:10:09,839
you can have a one call section with

00:10:07,680 --> 00:10:13,040
four blocks in it and then under that

00:10:09,839 --> 00:10:16,240
you can have a two call section and

00:10:13,040 --> 00:10:19,040
each of those regions has two blocks in

00:10:16,240 --> 00:10:19,680
it each section components so the thing

00:10:19,040 --> 00:10:23,120
to

00:10:19,680 --> 00:10:23,920
remember is that sections have section

00:10:23,120 --> 00:10:26,640
components

00:10:23,920 --> 00:10:28,480
but the node has the sections so this

00:10:26,640 --> 00:10:30,000
one-to-many relationship from sections

00:10:28,480 --> 00:10:30,959
to section components but then also

00:10:30,000 --> 00:10:34,399
one-to-many from

00:10:30,959 --> 00:10:37,120
node to the sections okay so

00:10:34,399 --> 00:10:38,399
if you were listening very intently you

00:10:37,120 --> 00:10:39,279
might have said that i've said you might

00:10:38,399 --> 00:10:42,480
have heard that i said

00:10:39,279 --> 00:10:44,560
blocks a few times right so a section

00:10:42,480 --> 00:10:46,320
component is fundamentally a block

00:10:44,560 --> 00:10:47,839
especially in terms of what we're

00:10:46,320 --> 00:10:51,920
talking about where

00:10:47,839 --> 00:10:55,279
we're building page content by

00:10:51,920 --> 00:10:56,720
um using these

00:10:55,279 --> 00:10:58,240
blocks of content that don't appear

00:10:56,720 --> 00:11:00,160
anywhere else you know we're not talking

00:10:58,240 --> 00:11:01,200
about reusable blocks like you would go

00:11:00,160 --> 00:11:03,519
and create

00:11:01,200 --> 00:11:04,240
and and put in your left sidebar on the

00:11:03,519 --> 00:11:06,480
whole

00:11:04,240 --> 00:11:07,279
you know about section something like

00:11:06,480 --> 00:11:09,760
that

00:11:07,279 --> 00:11:11,360
these are non-reusable blocks right so

00:11:09,760 --> 00:11:13,200
there's two different flavors of blocks

00:11:11,360 --> 00:11:15,360
under blade sites there's the reusable

00:11:13,200 --> 00:11:16,800
blocks and the non-reusable blocks and

00:11:15,360 --> 00:11:18,959
really the difference between whether

00:11:16,800 --> 00:11:20,720
they are or aren't reusable is a boolean

00:11:18,959 --> 00:11:21,680
checkbox that's on that block content

00:11:20,720 --> 00:11:26,160
table

00:11:21,680 --> 00:11:26,160
you know reusable yes reusable no

00:11:26,839 --> 00:11:31,839
okay

00:11:28,640 --> 00:11:35,120
so actually let me back up

00:11:31,839 --> 00:11:38,160
so a good way to think about this

00:11:35,120 --> 00:11:40,640
is that when you go to structure blocks

00:11:38,160 --> 00:11:42,079
and go to your custom block library

00:11:40,640 --> 00:11:46,640
you're creating reusable

00:11:42,079 --> 00:11:49,680
blocks there and when you go to

00:11:46,640 --> 00:11:51,440
a layout builder and add a section and

00:11:49,680 --> 00:11:53,279
then add a custom block in there you're

00:11:51,440 --> 00:11:55,600
creating a non-reusable block

00:11:53,279 --> 00:11:57,279
so that that boolean field is really

00:11:55,600 --> 00:12:00,079
mostly for the ui

00:11:57,279 --> 00:12:01,440
so custom block library doesn't show all

00:12:00,079 --> 00:12:04,480
the

00:12:01,440 --> 00:12:07,200
non-reusable blocks on it for example

00:12:04,480 --> 00:12:08,800
okay so where is all this stored so we

00:12:07,200 --> 00:12:11,760
have this node

00:12:08,800 --> 00:12:12,639
and it has this sort of layout builder

00:12:11,760 --> 00:12:14,800
field on it

00:12:12,639 --> 00:12:15,839
which then is storing these references

00:12:14,800 --> 00:12:19,440
to sections

00:12:15,839 --> 00:12:22,560
and section components right so

00:12:19,440 --> 00:12:23,120
the sections and section components they

00:12:22,560 --> 00:12:26,320
actually

00:12:23,120 --> 00:12:29,680
all get serialized into one big blob

00:12:26,320 --> 00:12:32,240
and that blob is then stored much like

00:12:29,680 --> 00:12:32,959
any other field is stored on drupal and

00:12:32,240 --> 00:12:36,839
that's in the

00:12:32,959 --> 00:12:39,839
entity layout builder layout table

00:12:36,839 --> 00:12:41,839
so for us you know we are storing the

00:12:39,839 --> 00:12:44,720
layout on basic page nodes

00:12:41,839 --> 00:12:46,399
so this table is node layout builder

00:12:44,720 --> 00:12:47,519
layout and it has a lot of the same

00:12:46,399 --> 00:12:49,519
columns that

00:12:47,519 --> 00:12:51,200
any other field table would have it has

00:12:49,519 --> 00:12:54,880
the entity id

00:12:51,200 --> 00:12:58,480
the revision id the delta right

00:12:54,880 --> 00:13:00,800
and so just like that

00:12:58,480 --> 00:13:02,000
except instead of storing those three

00:13:00,800 --> 00:13:05,440
references

00:13:02,000 --> 00:13:09,440
that are just like taxonomy term ids

00:13:05,440 --> 00:13:11,760
it's actually storing a serialized

00:13:09,440 --> 00:13:13,600
section object right there in the

00:13:11,760 --> 00:13:16,880
database table and it looks

00:13:13,600 --> 00:13:18,240
a lot like this so each section becomes

00:13:16,880 --> 00:13:20,079
a new field

00:13:18,240 --> 00:13:21,920
and then you can see here if you're kind

00:13:20,079 --> 00:13:23,360
of looking around through the serialized

00:13:21,920 --> 00:13:26,639
data you'll see

00:13:23,360 --> 00:13:30,160
a section component object you'll see

00:13:26,639 --> 00:13:30,480
a region you'll see that it's provided

00:13:30,160 --> 00:13:33,760
by

00:13:30,480 --> 00:13:35,760
layout builder and you might see

00:13:33,760 --> 00:13:37,519
sort of toward the bottom there inline

00:13:35,760 --> 00:13:40,720
block colon basic

00:13:37,519 --> 00:13:43,600
right which is the type of block or type

00:13:40,720 --> 00:13:44,240
of section component that this really is

00:13:43,600 --> 00:13:46,880
okay

00:13:44,240 --> 00:13:47,360
so it's very much like taxonomy and

00:13:46,880 --> 00:13:50,639
terms

00:13:47,360 --> 00:13:53,199
except instead of storing simply an id

00:13:50,639 --> 00:13:54,320
it's storing this serialized section

00:13:53,199 --> 00:13:56,480
object

00:13:54,320 --> 00:13:58,000
which contains the section components

00:13:56,480 --> 00:14:00,720
that are in that section

00:13:58,000 --> 00:14:02,000
okay and there's one more piece of the

00:14:00,720 --> 00:14:04,240
puzzle just to understand

00:14:02,000 --> 00:14:05,600
behind the scenes what's happening and

00:14:04,240 --> 00:14:08,639
that is the inline block

00:14:05,600 --> 00:14:10,880
usage table and that simply stores

00:14:08,639 --> 00:14:11,839
it does what it says on the tin it's

00:14:10,880 --> 00:14:15,920
storing

00:14:11,839 --> 00:14:18,160
uh where these inline blocks are used so

00:14:15,920 --> 00:14:21,839
if you're

00:14:18,160 --> 00:14:24,800
using uh you know a non-reusable block

00:14:21,839 --> 00:14:26,800
id number 12 you're storing that on node

00:14:24,800 --> 00:14:29,440
73 then you'll have 12

00:14:26,800 --> 00:14:30,480
node and 73 in your inline block usage

00:14:29,440 --> 00:14:33,839
table

00:14:30,480 --> 00:14:34,560
and initially i thought i had to manage

00:14:33,839 --> 00:14:36,880
this table

00:14:34,560 --> 00:14:39,040
myself and i was doing so but i

00:14:36,880 --> 00:14:42,320
discovered later

00:14:39,040 --> 00:14:44,639
that if you use the api correctly

00:14:42,320 --> 00:14:46,079
then you will that this will all be

00:14:44,639 --> 00:14:48,160
managed for you so i'll point that out

00:14:46,079 --> 00:14:50,800
when we get to the code

00:14:48,160 --> 00:14:51,279
okay so we need to take this now pile of

00:14:50,800 --> 00:14:54,160
coal

00:14:51,279 --> 00:14:56,160
a little bit more of a raw material from

00:14:54,160 --> 00:14:58,800
just a big blob of html

00:14:56,160 --> 00:15:00,880
and put it in the shiny diamond that is

00:14:58,800 --> 00:15:03,040
layout builder right we need to

00:15:00,880 --> 00:15:04,560
sort of transform this thing along the

00:15:03,040 --> 00:15:08,079
way and the big question is

00:15:04,560 --> 00:15:10,320
how how do we actually do that okay so

00:15:08,079 --> 00:15:13,279
let's talk about the migration so step

00:15:10,320 --> 00:15:16,000
one is really to migrate in the blocks

00:15:13,279 --> 00:15:16,800
right so blocks have an entity id a

00:15:16,000 --> 00:15:20,160
delta

00:15:16,800 --> 00:15:21,199
a title and a body okay so in my simple

00:15:20,160 --> 00:15:23,680
example i'm

00:15:21,199 --> 00:15:24,240
providing all of these fields right so

00:15:23,680 --> 00:15:26,720
if i go

00:15:24,240 --> 00:15:28,240
and look at the actual source data for

00:15:26,720 --> 00:15:30,720
this migration

00:15:28,240 --> 00:15:31,440
these are the fields that i'm providing

00:15:30,720 --> 00:15:34,800
so on

00:15:31,440 --> 00:15:37,440
entity one we have

00:15:34,800 --> 00:15:39,120
three text blocks they have their own

00:15:37,440 --> 00:15:43,199
titles and their own bodies

00:15:39,120 --> 00:15:45,839
and then on entity id 2 i've got 4

00:15:43,199 --> 00:15:47,839
delta 0 1 2 and 3. and they have titles

00:15:45,839 --> 00:15:51,040
and they have bodies as well

00:15:47,839 --> 00:15:53,920
okay so

00:15:51,040 --> 00:15:54,560
that is what we're looking at so in the

00:15:53,920 --> 00:15:58,399
une

00:15:54,560 --> 00:16:02,959
site i actually migrated into blocks

00:15:58,399 --> 00:16:05,360
from the body field of the drupal 7 node

00:16:02,959 --> 00:16:06,240
in this example in csv i've just got its

00:16:05,360 --> 00:16:08,959
own blocks

00:16:06,240 --> 00:16:11,519
csv in order to keep things simple so

00:16:08,959 --> 00:16:14,880
let's look at that migration

00:16:11,519 --> 00:16:17,199
so that migration

00:16:14,880 --> 00:16:18,079
some metadata about it just it's in my

00:16:17,199 --> 00:16:20,480
group and

00:16:18,079 --> 00:16:21,120
it's got a label and it's migration id

00:16:20,480 --> 00:16:24,000
is called

00:16:21,120 --> 00:16:25,040
blocks so this is the blocks migration

00:16:24,000 --> 00:16:28,519
the source plugin

00:16:25,040 --> 00:16:32,399
is csv files and the path is this

00:16:28,519 --> 00:16:35,279
blocks.csv file there are four fields

00:16:32,399 --> 00:16:36,639
offset 0 1 2 and 3 and i give them names

00:16:35,279 --> 00:16:39,040
like title body

00:16:36,639 --> 00:16:40,800
entity id and delta which means when i

00:16:39,040 --> 00:16:41,920
come down here and i want to say that

00:16:40,800 --> 00:16:44,560
the

00:16:41,920 --> 00:16:46,240
title goes to the info of the block

00:16:44,560 --> 00:16:50,240
entity

00:16:46,240 --> 00:16:52,079
and then the body goes into the body

00:16:50,240 --> 00:16:55,040
and then i'm just defaulting them all to

00:16:52,079 --> 00:16:57,839
be basic html

00:16:55,040 --> 00:16:59,920
and then whether or not it is reusable

00:16:57,839 --> 00:17:03,519
so like i said this is just a field

00:16:59,920 --> 00:17:06,240
on block content entities in drupal 8

00:17:03,519 --> 00:17:07,679
so if you want it to not be reusable you

00:17:06,240 --> 00:17:09,199
just set it to zero and that's what i'm

00:17:07,679 --> 00:17:10,959
doing i'm just setting all of these to

00:17:09,199 --> 00:17:13,839
be non-reusable blocks or

00:17:10,959 --> 00:17:14,880
or inline blocks okay and then again the

00:17:13,839 --> 00:17:17,199
destination

00:17:14,880 --> 00:17:18,000
is just entity block content with a

00:17:17,199 --> 00:17:20,160
default bundle

00:17:18,000 --> 00:17:21,919
of basic so the basic block is the one

00:17:20,160 --> 00:17:23,679
you get out of the box with the standard

00:17:21,919 --> 00:17:25,280
profile it just has a title and a body

00:17:23,679 --> 00:17:27,679
and that's what i'm migrating into

00:17:25,280 --> 00:17:28,640
so we give it a title a body a format

00:17:27,679 --> 00:17:30,480
for that body

00:17:28,640 --> 00:17:32,320
and we tell these all that these are not

00:17:30,480 --> 00:17:34,559
reusable blocks so if i go to custom

00:17:32,320 --> 00:17:37,600
block library i will not see them

00:17:34,559 --> 00:17:39,600
okay so you take whatever you want to be

00:17:37,600 --> 00:17:41,520
your chunks in your layout builder

00:17:39,600 --> 00:17:45,440
sections and you migrate them into

00:17:41,520 --> 00:17:47,679
blocks non-reusable blocks this way

00:17:45,440 --> 00:17:49,760
so then step two is that we need to

00:17:47,679 --> 00:17:52,000
migrate in the nodes

00:17:49,760 --> 00:17:53,520
so if i go here and look at the source

00:17:52,000 --> 00:17:57,039
data all i'm gonna see

00:17:53,520 --> 00:17:59,440
is nid and title

00:17:57,039 --> 00:18:00,799
but from drupal 7 we should have a body

00:17:59,440 --> 00:18:03,039
right but again

00:18:00,799 --> 00:18:05,200
we've migrated the body already into

00:18:03,039 --> 00:18:07,440
blocks so what we need to do is figure

00:18:05,200 --> 00:18:09,039
out how to load the bodies up separate

00:18:07,440 --> 00:18:11,840
and map those and that's where

00:18:09,039 --> 00:18:12,720
a lot of the magic happens so knit and

00:18:11,840 --> 00:18:15,120
title

00:18:12,720 --> 00:18:16,320
and then we got to deal with the layout

00:18:15,120 --> 00:18:20,080
and the body

00:18:16,320 --> 00:18:22,799
okay so let's look at that migration

00:18:20,080 --> 00:18:23,679
that's uh where like i said a lot of the

00:18:22,799 --> 00:18:26,720
magic happens

00:18:23,679 --> 00:18:29,360
so some more metadata this is now the

00:18:26,720 --> 00:18:31,039
nodes migration not the blocks migration

00:18:29,360 --> 00:18:33,120
got a label got a migration group

00:18:31,039 --> 00:18:35,039
and we should have already migrated in

00:18:33,120 --> 00:18:38,160
blocks before we migrate in

00:18:35,039 --> 00:18:40,320
nodes okay so the source looks very

00:18:38,160 --> 00:18:42,160
similar

00:18:40,320 --> 00:18:44,000
except you'll notice that i'm using a

00:18:42,160 --> 00:18:46,000
custom source plugin

00:18:44,000 --> 00:18:48,000
i'm not just using the basic csv one

00:18:46,000 --> 00:18:48,960
from the contrib module i'm using my own

00:18:48,000 --> 00:18:50,960
that overrides

00:18:48,960 --> 00:18:53,520
we'll get to that in just a second and

00:18:50,960 --> 00:18:55,280
then the path is the nodes csv file

00:18:53,520 --> 00:18:57,280
which is just what i showed you before

00:18:55,280 --> 00:19:00,240
with the nid and the title

00:18:57,280 --> 00:19:01,120
it's only got the two fields so for

00:19:00,240 --> 00:19:04,640
title

00:19:01,120 --> 00:19:07,760
title and for the user id

00:19:04,640 --> 00:19:09,679
i'm just making user one own everything

00:19:07,760 --> 00:19:10,880
and then if we skip down to destination

00:19:09,679 --> 00:19:12,240
here real quick you see i'm just

00:19:10,880 --> 00:19:16,320
migrating into

00:19:12,240 --> 00:19:18,960
basic pages okay so this

00:19:16,320 --> 00:19:20,480
is really how we're mapping in the body

00:19:18,960 --> 00:19:24,000
so layout builder

00:19:20,480 --> 00:19:25,679
layout on line 36 that's the field that

00:19:24,000 --> 00:19:27,919
i'm talking about where we store

00:19:25,679 --> 00:19:32,000
all the sections and section components

00:19:27,919 --> 00:19:34,080
in that serialized blob in the database

00:19:32,000 --> 00:19:35,440
so how do we actually get something to

00:19:34,080 --> 00:19:38,080
put in there what's the

00:19:35,440 --> 00:19:39,440
source field for layout builder layout

00:19:38,080 --> 00:19:42,559
well it's this thing

00:19:39,440 --> 00:19:42,880
called components and i made that up and

00:19:42,559 --> 00:19:45,919
that

00:19:42,880 --> 00:19:48,400
is why i have a custom plugin

00:19:45,919 --> 00:19:49,120
okay so i'm gonna go just jump over here

00:19:48,400 --> 00:19:52,559
real quick

00:19:49,120 --> 00:19:55,600
and i'm gonna get into my

00:19:52,559 --> 00:19:59,039
module so if i go into web

00:19:55,600 --> 00:20:02,400
i go into modules i go into custom

00:19:59,039 --> 00:20:05,679
my migrations module now i've got

00:20:02,400 --> 00:20:09,120
a custom source plugin called my

00:20:05,679 --> 00:20:12,159
pages okay and again that's the

00:20:09,120 --> 00:20:15,679
source plugin that i'm using to get data

00:20:12,159 --> 00:20:18,080
so i'm capitalizing on the prepare row

00:20:15,679 --> 00:20:21,280
method that's provided by migrate

00:20:18,080 --> 00:20:24,080
plus i believe to

00:20:21,280 --> 00:20:25,440
add or manipulate the source row data on

00:20:24,080 --> 00:20:27,760
the way in which is

00:20:25,440 --> 00:20:29,280
exactly what we're trying to do here so

00:20:27,760 --> 00:20:33,679
my mypages class

00:20:29,280 --> 00:20:36,799
it extends the basecsv class and simply

00:20:33,679 --> 00:20:38,720
does my stuff in prepare row okay so

00:20:36,799 --> 00:20:41,520
what prepare row does

00:20:38,720 --> 00:20:43,200
is we start with a simple components

00:20:41,520 --> 00:20:45,520
array

00:20:43,200 --> 00:20:46,880
then we fetch all the blocks that are

00:20:45,520 --> 00:20:51,200
associated with this

00:20:46,880 --> 00:20:52,080
row and then we iterate over each of

00:20:51,200 --> 00:20:55,360
those blocks

00:20:52,080 --> 00:20:58,400
building up an array of their ids

00:20:55,360 --> 00:21:03,840
and then we set a new source property

00:20:58,400 --> 00:21:03,840
called components

00:21:04,320 --> 00:21:08,000
to that array that we built up and then

00:21:06,960 --> 00:21:11,360
of course we

00:21:08,000 --> 00:21:15,039
uh call the parent prepare row in case

00:21:11,360 --> 00:21:17,360
some other object in our

00:21:15,039 --> 00:21:18,559
chain here in our class hierarchy wanted

00:21:17,360 --> 00:21:21,120
to manipulate

00:21:18,559 --> 00:21:22,480
the row as well or said that we should

00:21:21,120 --> 00:21:26,880
skip it or something like that

00:21:22,480 --> 00:21:30,640
so i just add my new source property on

00:21:26,880 --> 00:21:33,200
so fetch blocks what that does is

00:21:30,640 --> 00:21:33,840
it just goes to the migrate map table

00:21:33,200 --> 00:21:37,039
for that

00:21:33,840 --> 00:21:39,039
blocks migration that we wrote and it

00:21:37,039 --> 00:21:42,480
just looks up hey

00:21:39,039 --> 00:21:44,880
incoming block you know one

00:21:42,480 --> 00:21:47,360
what's the destination id of that block

00:21:44,880 --> 00:21:48,240
here you know is it 12 or 17 or whatever

00:21:47,360 --> 00:21:50,480
it is

00:21:48,240 --> 00:21:51,679
so that's all it does is it selects the

00:21:50,480 --> 00:21:55,120
destination id

00:21:51,679 --> 00:21:58,960
from the migrate map blocks table

00:21:55,120 --> 00:22:00,320
and then we use the passed in row to get

00:21:58,960 --> 00:22:03,280
the id of that row

00:22:00,320 --> 00:22:05,120
so that we can get the right destination

00:22:03,280 --> 00:22:07,679
and we query all we

00:22:05,120 --> 00:22:09,440
sort by the source id2 which i said was

00:22:07,679 --> 00:22:10,000
the delta so that we get them in the

00:22:09,440 --> 00:22:12,880
correct

00:22:10,000 --> 00:22:14,559
order that they should appear and then

00:22:12,880 --> 00:22:15,520
yeah we just fetch all that and then

00:22:14,559 --> 00:22:18,799
we've got

00:22:15,520 --> 00:22:20,400
our destination ids okay now there's

00:22:18,799 --> 00:22:23,600
also

00:22:20,400 --> 00:22:25,600
a method called uh migrate lookup

00:22:23,600 --> 00:22:27,200
that's available on migrations so i

00:22:25,600 --> 00:22:29,760
probably could have just called this

00:22:27,200 --> 00:22:32,240
arrow migration lookup instead of this

00:22:29,760 --> 00:22:34,320
fetch blocks

00:22:32,240 --> 00:22:36,720
i think one of the great things about

00:22:34,320 --> 00:22:37,679
migrations is that if your code's not

00:22:36,720 --> 00:22:39,200
perfect you're still

00:22:37,679 --> 00:22:40,799
probably throwing it away after the

00:22:39,200 --> 00:22:43,120
migration is done

00:22:40,799 --> 00:22:44,880
so uh even though i didn't do this the

00:22:43,120 --> 00:22:48,480
the perfectly right way

00:22:44,880 --> 00:22:51,840
um it still works

00:22:48,480 --> 00:22:52,400
okay so that's how we get now our body

00:22:51,840 --> 00:22:54,720
field

00:22:52,400 --> 00:22:55,760
and we need to map it into layout

00:22:54,720 --> 00:22:57,760
builder layout

00:22:55,760 --> 00:22:59,840
but we still have not transformed it

00:22:57,760 --> 00:23:01,520
because remember all we're doing with

00:22:59,840 --> 00:23:05,039
components

00:23:01,520 --> 00:23:07,200
is it's just an array of ids

00:23:05,039 --> 00:23:09,520
but we don't store just an array of ids

00:23:07,200 --> 00:23:11,919
like with a taxonomy term

00:23:09,520 --> 00:23:12,880
we have to store this serialized section

00:23:11,919 --> 00:23:16,080
object

00:23:12,880 --> 00:23:17,600
on each of these fields okay so for that

00:23:16,080 --> 00:23:21,039
i wrote a custom

00:23:17,600 --> 00:23:21,600
process plugin okay so if i move up from

00:23:21,039 --> 00:23:23,919
here

00:23:21,600 --> 00:23:25,200
and go to source plug-in migrate and go

00:23:23,919 --> 00:23:27,520
to the process

00:23:25,200 --> 00:23:29,840
section instead you'll see my custom

00:23:27,520 --> 00:23:32,080
process plug-in

00:23:29,840 --> 00:23:33,360
and what this does the main entry point

00:23:32,080 --> 00:23:37,039
for a process plug-in

00:23:33,360 --> 00:23:40,320
is this transform method

00:23:37,039 --> 00:23:41,840
and you get the value passed in and you

00:23:40,320 --> 00:23:44,240
also get the

00:23:41,840 --> 00:23:45,919
migrate executable and the row and the

00:23:44,240 --> 00:23:47,279
destination property should you need

00:23:45,919 --> 00:23:50,480
those

00:23:47,279 --> 00:23:51,760
value is really where it's our

00:23:50,480 --> 00:23:54,880
components it's our

00:23:51,760 --> 00:23:55,520
array of destination ids of blocks in

00:23:54,880 --> 00:23:58,240
order

00:23:55,520 --> 00:24:00,559
okay so what i do is i start again with

00:23:58,240 --> 00:24:04,960
a empty components array

00:24:00,559 --> 00:24:08,640
and then i get a generator service

00:24:04,960 --> 00:24:10,960
the uuid service

00:24:08,640 --> 00:24:11,919
generator so we need universally unique

00:24:10,960 --> 00:24:15,279
identifiers

00:24:11,919 --> 00:24:16,559
here and so i just need to call that so

00:24:15,279 --> 00:24:20,080
i have it later

00:24:16,559 --> 00:24:23,120
then i iterate through each value

00:24:20,080 --> 00:24:25,360
so again that array of ids as

00:24:23,120 --> 00:24:26,799
each section component so each one of

00:24:25,360 --> 00:24:28,960
those blocks is going to become a

00:24:26,799 --> 00:24:32,080
section component

00:24:28,960 --> 00:24:34,320
and then since again we only have the id

00:24:32,080 --> 00:24:36,720
i need to fully load that block content

00:24:34,320 --> 00:24:38,880
object so i just load the block content

00:24:36,720 --> 00:24:40,720
object into block content

00:24:38,880 --> 00:24:41,919
as long as i was able to load something

00:24:40,720 --> 00:24:43,919
i'm good to go

00:24:41,919 --> 00:24:46,000
let's skip over this config real quick

00:24:43,919 --> 00:24:48,400
here and then i'm

00:24:46,000 --> 00:24:49,440
going to make a new section component

00:24:48,400 --> 00:24:51,520
for each block

00:24:49,440 --> 00:24:53,039
and store that off into that components

00:24:51,520 --> 00:24:55,039
array so

00:24:53,039 --> 00:24:56,240
this is why you need a universally

00:24:55,039 --> 00:24:58,320
unique identifier

00:24:56,240 --> 00:24:59,840
as the first section component uh

00:24:58,320 --> 00:25:01,279
parameter

00:24:59,840 --> 00:25:03,120
first parameter to the constructor for

00:25:01,279 --> 00:25:04,559
section components is a uuid so that's

00:25:03,120 --> 00:25:05,679
why i needed the generator service to

00:25:04,559 --> 00:25:08,559
get one

00:25:05,679 --> 00:25:09,440
the second one is which region of the

00:25:08,559 --> 00:25:12,240
layout

00:25:09,440 --> 00:25:13,039
for your section do you want to put this

00:25:12,240 --> 00:25:15,360
component

00:25:13,039 --> 00:25:16,559
so i'm putting it in content because i'm

00:25:15,360 --> 00:25:18,320
migrating into a

00:25:16,559 --> 00:25:20,640
single one call layout it only has one

00:25:18,320 --> 00:25:22,559
region and that region is called content

00:25:20,640 --> 00:25:23,840
and then you pass in this configuration

00:25:22,559 --> 00:25:26,159
so let's go back and look at the

00:25:23,840 --> 00:25:29,039
configuration so the id

00:25:26,159 --> 00:25:30,320
is the plug-in and derivative that

00:25:29,039 --> 00:25:32,559
you're using

00:25:30,320 --> 00:25:34,559
for your section component so for us

00:25:32,559 --> 00:25:37,679
it's an inline block it's a basic

00:25:34,559 --> 00:25:38,320
non-reusable block and then after the

00:25:37,679 --> 00:25:40,080
colon

00:25:38,320 --> 00:25:42,880
is the bundle that you're going to use

00:25:40,080 --> 00:25:45,600
so again i'm using basic blocks

00:25:42,880 --> 00:25:46,640
then for the label i'm just using the

00:25:45,600 --> 00:25:49,600
label

00:25:46,640 --> 00:25:51,840
for the block content as it came in so

00:25:49,600 --> 00:25:53,919
the label of that section component

00:25:51,840 --> 00:25:56,960
in layout builder is the same as the

00:25:53,919 --> 00:25:59,840
label is on the block

00:25:56,960 --> 00:26:02,559
remember so in the drupal migration what

00:25:59,840 --> 00:26:05,679
i did when i migrated the blocks in was

00:26:02,559 --> 00:26:08,960
i said because i was coming from

00:26:05,679 --> 00:26:09,440
nodes i just used the node title as the

00:26:08,960 --> 00:26:13,039
block

00:26:09,440 --> 00:26:15,120
and i said like body for nid whatever

00:26:13,039 --> 00:26:17,600
colon and then i did like the title of

00:26:15,120 --> 00:26:17,600
the node

00:26:17,840 --> 00:26:21,679
so that's good as a developer i could

00:26:19,679 --> 00:26:22,880
always go back and look at that and say

00:26:21,679 --> 00:26:25,360
all right where is this coming from

00:26:22,880 --> 00:26:28,240
okay this was node 73 on the old site i

00:26:25,360 --> 00:26:30,000
pull that up and i can compare

00:26:28,240 --> 00:26:31,279
content and so what's cool about that on

00:26:30,000 --> 00:26:34,480
a reusable block

00:26:31,279 --> 00:26:37,520
i was able to say for label display just

00:26:34,480 --> 00:26:38,000
false i don't want um don't show that

00:26:37,520 --> 00:26:40,480
label

00:26:38,000 --> 00:26:42,400
ever you may want this to be true

00:26:40,480 --> 00:26:43,919
depends on your migration but

00:26:42,400 --> 00:26:45,679
what that's controlling is whether or

00:26:43,919 --> 00:26:48,240
not this section component title

00:26:45,679 --> 00:26:48,960
should show in layout builder when you

00:26:48,240 --> 00:26:51,520
display it

00:26:48,960 --> 00:26:53,520
display it in view mode full and then

00:26:51,520 --> 00:26:56,480
set the block revision id

00:26:53,520 --> 00:26:58,640
so the block revision id is really

00:26:56,480 --> 00:26:59,600
important here one thing to note is that

00:26:58,640 --> 00:27:01,279
anything in core

00:26:59,600 --> 00:27:02,880
has to be revisionable and that includes

00:27:01,279 --> 00:27:04,080
layout builder layouts which is really

00:27:02,880 --> 00:27:06,080
amazing

00:27:04,080 --> 00:27:08,080
it was a big need for une to be able to

00:27:06,080 --> 00:27:09,279
have revisions and revision ability and

00:27:08,080 --> 00:27:10,320
the fact that we could do that with

00:27:09,279 --> 00:27:12,159
layout builder

00:27:10,320 --> 00:27:14,720
from day one no problem was really

00:27:12,159 --> 00:27:17,840
amazing so

00:27:14,720 --> 00:27:19,760
um you set the block revision id here

00:27:17,840 --> 00:27:21,679
and say which revision belongs in your

00:27:19,760 --> 00:27:25,440
layout builder layout

00:27:21,679 --> 00:27:27,679
and if you remember what i said before

00:27:25,440 --> 00:27:31,760
about that inline block usage table

00:27:27,679 --> 00:27:33,440
that if you don't use if you don't

00:27:31,760 --> 00:27:35,520
set that correctly so right here if you

00:27:33,440 --> 00:27:37,520
set block revision id just to null

00:27:35,520 --> 00:27:39,279
instead of the actual revision id it

00:27:37,520 --> 00:27:39,919
won't update your inline block usage

00:27:39,279 --> 00:27:41,360
table

00:27:39,919 --> 00:27:44,399
and i actually had a whole work around

00:27:41,360 --> 00:27:46,799
for a while using that where i was

00:27:44,399 --> 00:27:48,000
doing event subscribers and looking it

00:27:46,799 --> 00:27:50,159
up and updating it from

00:27:48,000 --> 00:27:51,279
null and as it turns out i just need to

00:27:50,159 --> 00:27:54,399
make sure i set the

00:27:51,279 --> 00:27:56,640
revision id here and then the serialized

00:27:54,399 --> 00:27:58,640
block content here so you take the block

00:27:56,640 --> 00:28:01,520
content you serialize it and that's your

00:27:58,640 --> 00:28:04,960
block serialized

00:28:01,520 --> 00:28:07,679
dan sasser did a really amazing blog on

00:28:04,960 --> 00:28:10,799
migrating paragraphs into layout builder

00:28:07,679 --> 00:28:12,159
and he actually uses null for block

00:28:10,799 --> 00:28:16,000
serialized here

00:28:12,159 --> 00:28:18,960
and it probably still works so um

00:28:16,000 --> 00:28:19,440
it may do this part for you if you don't

00:28:18,960 --> 00:28:20,960
set it

00:28:19,440 --> 00:28:24,159
i was just setting it here which also

00:28:20,960 --> 00:28:26,159
works and then context mapping

00:28:24,159 --> 00:28:27,679
both dan and i have that as an empty

00:28:26,159 --> 00:28:29,840
array which is kind of

00:28:27,679 --> 00:28:31,120
interesting because when i did present

00:28:29,840 --> 00:28:33,279
this at drupalcon

00:28:31,120 --> 00:28:34,799
wim leers was able to say i think that

00:28:33,279 --> 00:28:37,360
might cause some trouble

00:28:34,799 --> 00:28:38,559
especially i think with things like big

00:28:37,360 --> 00:28:40,480
pipe and

00:28:38,559 --> 00:28:42,159
caches and some of that stuff but this

00:28:40,480 --> 00:28:43,279
did work for us and it apparently worked

00:28:42,159 --> 00:28:45,200
for dan as well

00:28:43,279 --> 00:28:48,159
so i look forward to learning a little

00:28:45,200 --> 00:28:50,880
bit more about that context mapping

00:28:48,159 --> 00:28:52,720
okay so we iterate through we have a new

00:28:50,880 --> 00:28:54,480
section component but then ultimately

00:28:52,720 --> 00:28:57,679
remember what i said each

00:28:54,480 --> 00:28:58,480
field entry is a section object so what

00:28:57,679 --> 00:29:01,200
you then do

00:28:58,480 --> 00:29:02,240
is you build a section object you say

00:29:01,200 --> 00:29:04,080
which

00:29:02,240 --> 00:29:06,080
layout it's going to use i'm using a one

00:29:04,080 --> 00:29:08,559
call layout you can specify

00:29:06,080 --> 00:29:10,399
any settings for it which the only

00:29:08,559 --> 00:29:12,080
setting i think on the core layouts is

00:29:10,399 --> 00:29:13,520
the administrative title and if

00:29:12,080 --> 00:29:15,120
it's optional and if you leave it blank

00:29:13,520 --> 00:29:16,799
it just refers them as section one

00:29:15,120 --> 00:29:19,760
section two section three

00:29:16,799 --> 00:29:21,679
so i just left it blank and then this

00:29:19,760 --> 00:29:23,840
components array that we've built up so

00:29:21,679 --> 00:29:25,760
an array of section components

00:29:23,840 --> 00:29:27,679
you just drop that on and say that those

00:29:25,760 --> 00:29:28,559
are the all the components that belong

00:29:27,679 --> 00:29:32,159
in this section

00:29:28,559 --> 00:29:35,360
and then you return that so that

00:29:32,159 --> 00:29:40,320
is ultimately how that works

00:29:35,360 --> 00:29:44,000
you return a section for each thing

00:29:40,320 --> 00:29:45,840
so that's that um there are

00:29:44,000 --> 00:29:47,120
you know some more nuances to this but i

00:29:45,840 --> 00:29:50,000
look forward to hearing from you

00:29:47,120 --> 00:29:52,640
in the comments or on the redfin blog or

00:29:50,000 --> 00:29:54,159
reach out to me on twitter

00:29:52,640 --> 00:29:56,080
and i want to encourage you to put your

00:29:54,159 --> 00:29:59,760
hands on this stuff as well

00:29:56,080 --> 00:30:02,640
so all this code is in

00:29:59,760 --> 00:30:06,600
layout uh all this code is in github

00:30:02,640 --> 00:30:09,919
it's in my repo chris from redfin

00:30:06,600 --> 00:30:13,039
decon21-milb so that's drupalcon 2021

00:30:09,919 --> 00:30:15,200
dash migrating into layout builder so

00:30:13,039 --> 00:30:17,520
you can get the code from there it's a

00:30:15,200 --> 00:30:20,559
fully functional site

00:30:17,520 --> 00:30:22,159
it has a database that it ships with and

00:30:20,559 --> 00:30:24,240
if you're using ddev you can just

00:30:22,159 --> 00:30:26,159
restore the snapshot or spin it up on

00:30:24,240 --> 00:30:29,039
ddev very easily

00:30:26,159 --> 00:30:30,559
so there's instructions here if you are

00:30:29,039 --> 00:30:33,440
not using ddev

00:30:30,559 --> 00:30:35,840
if your path is not verwhtml you might

00:30:33,440 --> 00:30:37,520
need to update your migrations

00:30:35,840 --> 00:30:39,760
but there's some great little tools in

00:30:37,520 --> 00:30:42,000
there there's a view to see all blocks

00:30:39,760 --> 00:30:44,320
whether they're usable or not reusable

00:30:42,000 --> 00:30:45,039
so give it a try let me know how it goes

00:30:44,320 --> 00:30:51,840
and

00:30:45,039 --> 00:30:51,840

YouTube URL: https://www.youtube.com/watch?v=7DPiPpBeylY


