Title: Building Google-Like Site Search   DrupalCon North America 2021
Publication date: 2021-05-27
Playlist: DrupalCon North America 2021
Description: 
	Max Shaw, Yexts SVP of Product, on what it takes to build a Google-Like Site Search for your website.
Captions: 
	00:00:06,240 --> 00:00:10,240
hello everyone

00:00:07,359 --> 00:00:10,719
um i'm excited to talk about building

00:00:10,240 --> 00:00:13,040
google

00:00:10,719 --> 00:00:14,880
like site search today so this is going

00:00:13,040 --> 00:00:15,440
to be a quick deep dive we only have 10

00:00:14,880 --> 00:00:17,600
minutes

00:00:15,440 --> 00:00:18,960
but a quick deep dive in how google does

00:00:17,600 --> 00:00:20,240
natural language processing

00:00:18,960 --> 00:00:22,000
and some of the things you need to think

00:00:20,240 --> 00:00:24,400
about as you're building natural

00:00:22,000 --> 00:00:27,840
language site search on your own website

00:00:24,400 --> 00:00:29,679
so with that let's jump into it

00:00:27,840 --> 00:00:31,279
traditional site search is really based

00:00:29,679 --> 00:00:32,960
off of an algorithm that's

00:00:31,279 --> 00:00:34,320
very outdated it's based off of an

00:00:32,960 --> 00:00:37,120
algorithm uh

00:00:34,320 --> 00:00:38,640
people often call this search uh

00:00:37,120 --> 00:00:39,760
technically what it is under the hood is

00:00:38,640 --> 00:00:41,840
term frequency

00:00:39,760 --> 00:00:44,000
inverse document frequency and what it

00:00:41,840 --> 00:00:46,640
does is it finds documents

00:00:44,000 --> 00:00:48,559
that contain a keyword the most often uh

00:00:46,640 --> 00:00:49,200
this is what powers most site search

00:00:48,559 --> 00:00:51,680
today

00:00:49,200 --> 00:00:53,600
and what it looks like uh from a google

00:00:51,680 --> 00:00:55,440
perspective in the evolution of

00:00:53,600 --> 00:00:57,120
of google is what google looked like

00:00:55,440 --> 00:00:59,280
closer to 2006

00:00:57,120 --> 00:01:00,480
where it's pretty good at finding which

00:00:59,280 --> 00:01:03,600
documents in

00:01:00,480 --> 00:01:05,040
a in a corpus contain a keyword

00:01:03,600 --> 00:01:07,280
but it really doesn't meet modern

00:01:05,040 --> 00:01:10,159
expectations uh specifically

00:01:07,280 --> 00:01:12,000
google's had two huge advancements the

00:01:10,159 --> 00:01:14,799
knowledge graph in 2012

00:01:12,000 --> 00:01:16,560
and featured snippets in 2016 that

00:01:14,799 --> 00:01:18,880
really have revolutionized

00:01:16,560 --> 00:01:19,680
how they think about search here are a

00:01:18,880 --> 00:01:22,320
few examples

00:01:19,680 --> 00:01:24,000
of what google search looks like today

00:01:22,320 --> 00:01:25,040
so a question how tall is mount

00:01:24,000 --> 00:01:26,880
kilimanjaro

00:01:25,040 --> 00:01:28,640
you're seeing google is combining

00:01:26,880 --> 00:01:30,960
different data sets together

00:01:28,640 --> 00:01:32,960
to provide relevant results so they're

00:01:30,960 --> 00:01:34,960
pulling in data from the knowledge graph

00:01:32,960 --> 00:01:37,200
they're pulling in faqs and they're

00:01:34,960 --> 00:01:39,360
pulling in organic links

00:01:37,200 --> 00:01:40,479
two more examples on the left we see a

00:01:39,360 --> 00:01:42,000
featured snippet

00:01:40,479 --> 00:01:43,840
uh for a question how do you restart

00:01:42,000 --> 00:01:44,720
your iphone 11 on the right you see that

00:01:43,840 --> 00:01:47,119
knowledge graph

00:01:44,720 --> 00:01:47,920
and you're seeing how google is mixing

00:01:47,119 --> 00:01:50,560
and matching

00:01:47,920 --> 00:01:52,159
different search results into one search

00:01:50,560 --> 00:01:54,799
ui

00:01:52,159 --> 00:01:56,320
now there are three key data structures

00:01:54,799 --> 00:01:58,159
that you need to think about when you're

00:01:56,320 --> 00:02:00,479
thinking about building site search

00:01:58,159 --> 00:02:02,560
there is your structured data so this is

00:02:00,479 --> 00:02:05,680
stuff like locations or events or

00:02:02,560 --> 00:02:07,439
products or jobs or doctors or advisors

00:02:05,680 --> 00:02:09,679
each of these different entities have a

00:02:07,439 --> 00:02:10,879
lot of structure to them

00:02:09,679 --> 00:02:13,920
and you need to search them in a

00:02:10,879 --> 00:02:14,400
specific way the next is semi-structured

00:02:13,920 --> 00:02:16,160
data

00:02:14,400 --> 00:02:19,200
so this will usually take the form of

00:02:16,160 --> 00:02:19,599
faqs faqs are absolutely critical to a

00:02:19,200 --> 00:02:22,680
good

00:02:19,599 --> 00:02:25,200
search experience the final is

00:02:22,680 --> 00:02:27,040
unstructured data so this is your blogs

00:02:25,200 --> 00:02:28,160
your news your press releases your

00:02:27,040 --> 00:02:30,160
product manager

00:02:28,160 --> 00:02:32,000
product manuals and your help articles

00:02:30,160 --> 00:02:33,440
now it's absolutely critical that your

00:02:32,000 --> 00:02:34,879
site search can search all these

00:02:33,440 --> 00:02:36,400
different types of data

00:02:34,879 --> 00:02:38,879
with these different structures all at

00:02:36,400 --> 00:02:40,400
the same time and the key insight that

00:02:38,879 --> 00:02:42,239
google has

00:02:40,400 --> 00:02:43,920
that you need to follow is that

00:02:42,239 --> 00:02:45,840
depending on the data structure

00:02:43,920 --> 00:02:47,040
you want to use a different natural

00:02:45,840 --> 00:02:49,040
language algorithm

00:02:47,040 --> 00:02:50,959
you can't just approach this as

00:02:49,040 --> 00:02:52,480
locations are treated the same as help

00:02:50,959 --> 00:02:54,879
articles which are treated the same as

00:02:52,480 --> 00:02:57,440
faqs and run basic

00:02:54,879 --> 00:02:59,519
keyword tf idf search across that and

00:02:57,440 --> 00:03:01,680
expect to get good results or expect

00:02:59,519 --> 00:03:04,400
people to want to use your site search

00:03:01,680 --> 00:03:06,080
you need to hit and exceed that

00:03:04,400 --> 00:03:07,920
google-like experience if you want to

00:03:06,080 --> 00:03:09,200
deliver an optimal user experience

00:03:07,920 --> 00:03:11,200
so let's talk a little bit more

00:03:09,200 --> 00:03:12,560
technically about what google is doing

00:03:11,200 --> 00:03:14,800
here are some examples of google

00:03:12,560 --> 00:03:17,360
searching a structured knowledge graph

00:03:14,800 --> 00:03:19,040
searching for sports scores uh or the

00:03:17,360 --> 00:03:22,239
weather

00:03:19,040 --> 00:03:23,599
uh or location information or product

00:03:22,239 --> 00:03:26,159
information

00:03:23,599 --> 00:03:27,280
under the hood one of the most important

00:03:26,159 --> 00:03:28,959
um

00:03:27,280 --> 00:03:30,239
natural languages approaches for

00:03:28,959 --> 00:03:32,080
searching structured data is doing

00:03:30,239 --> 00:03:34,720
something called named entity

00:03:32,080 --> 00:03:35,680
recognition now named entity recognition

00:03:34,720 --> 00:03:38,400
is the process

00:03:35,680 --> 00:03:40,480
of taking a search uh in this example

00:03:38,400 --> 00:03:41,360
seasonal stock associate jobs in atlanta

00:03:40,480 --> 00:03:44,239
georgia

00:03:41,360 --> 00:03:46,640
and splitting it apart and understanding

00:03:44,239 --> 00:03:48,959
what is the intent of each of the terms

00:03:46,640 --> 00:03:50,400
so in this case you want to use named nt

00:03:48,959 --> 00:03:51,280
recognition to understand that they're

00:03:50,400 --> 00:03:53,360
looking for

00:03:51,280 --> 00:03:54,959
seasonal jobs uh that are stock

00:03:53,360 --> 00:03:57,200
associate um

00:03:54,959 --> 00:04:00,319
and the location is atlanta georgia

00:03:57,200 --> 00:04:02,959
which has a lat long of 33 84.

00:04:00,319 --> 00:04:04,560
you need to automatically understand uh

00:04:02,959 --> 00:04:05,200
these different pieces to the search

00:04:04,560 --> 00:04:07,599
term

00:04:05,200 --> 00:04:09,280
and take these pieces of information and

00:04:07,599 --> 00:04:10,720
turn them into filters

00:04:09,280 --> 00:04:12,159
so that you can filter down your search

00:04:10,720 --> 00:04:13,840
results and you're going to want to use

00:04:12,159 --> 00:04:14,799
a technique called named entity

00:04:13,840 --> 00:04:18,160
recognition

00:04:14,799 --> 00:04:19,280
to do that the next key data structure

00:04:18,160 --> 00:04:21,759
that you need to think about

00:04:19,280 --> 00:04:23,360
is semi-structured data this is your

00:04:21,759 --> 00:04:24,880
frequently asked questions

00:04:23,360 --> 00:04:26,639
and google shows frequently asked

00:04:24,880 --> 00:04:29,520
questions basically every time

00:04:26,639 --> 00:04:30,000
you run a search it's an excellent way

00:04:29,520 --> 00:04:33,360
to show

00:04:30,000 --> 00:04:34,880
similar searches or to show

00:04:33,360 --> 00:04:37,600
follow-up questions that a user might

00:04:34,880 --> 00:04:40,080
have so how is covid transmitted

00:04:37,600 --> 00:04:41,280
and you see a bunch of related questions

00:04:40,080 --> 00:04:42,800
to that first question

00:04:41,280 --> 00:04:45,440
that might better answer the user's

00:04:42,800 --> 00:04:47,040
question or here's another one how tall

00:04:45,440 --> 00:04:48,639
is mount everest

00:04:47,040 --> 00:04:50,320
and here you see a bunch of similar

00:04:48,639 --> 00:04:54,880
questions that people might ask

00:04:50,320 --> 00:04:54,880
as follow-up questions to this question

00:04:55,199 --> 00:04:59,040
or do oreos have dairy and we see a

00:04:57,280 --> 00:05:01,600
bunch of options there

00:04:59,040 --> 00:05:02,240
or when is the next iphone coming out

00:05:01,600 --> 00:05:05,120
now

00:05:02,240 --> 00:05:06,639
you see that most of these people also

00:05:05,120 --> 00:05:08,720
ask or common questions

00:05:06,639 --> 00:05:10,639
have keyword overlap with the search

00:05:08,720 --> 00:05:12,639
term but not all of them for example

00:05:10,639 --> 00:05:14,400
when is the next iphone coming out

00:05:12,639 --> 00:05:16,160
you see this question what will apple

00:05:14,400 --> 00:05:18,160
release in 2020

00:05:16,160 --> 00:05:19,199
there's no keywords overlapping between

00:05:18,160 --> 00:05:21,840
these two terms

00:05:19,199 --> 00:05:22,639
but any human any user knows that these

00:05:21,840 --> 00:05:25,039
are very similar

00:05:22,639 --> 00:05:26,400
apple makes the iphone coming out we're

00:05:25,039 --> 00:05:28,160
talking this is maybe a little outdated

00:05:26,400 --> 00:05:31,280
still talking about 2020

00:05:28,160 --> 00:05:32,479
but this is a very related question

00:05:31,280 --> 00:05:34,639
under the hood the way you want to

00:05:32,479 --> 00:05:37,520
search semi-structured data like this

00:05:34,639 --> 00:05:39,280
is with semantic embeddings so you don't

00:05:37,520 --> 00:05:40,160
want to use keyword search to compare

00:05:39,280 --> 00:05:42,560
faqs

00:05:40,160 --> 00:05:43,280
to a search term instead what you want

00:05:42,560 --> 00:05:46,400
to do

00:05:43,280 --> 00:05:49,039
is embed both the search term and

00:05:46,400 --> 00:05:49,520
the faqs into vector space and then

00:05:49,039 --> 00:05:51,919
search

00:05:49,520 --> 00:05:53,199
based off of similarity so technically

00:05:51,919 --> 00:05:54,560
under the hood you're going to take

00:05:53,199 --> 00:05:56,639
the search term you're going to take

00:05:54,560 --> 00:05:57,520
each faq you're going to embed them as

00:05:56,639 --> 00:05:59,199
vectors

00:05:57,520 --> 00:06:01,440
and then you're going to run a nearest

00:05:59,199 --> 00:06:02,639
neighbor search across those vectors now

00:06:01,440 --> 00:06:03,840
there's a lot of different technologies

00:06:02,639 --> 00:06:05,199
you might use here

00:06:03,840 --> 00:06:07,199
to embed the vectors you might use

00:06:05,199 --> 00:06:10,000
something like word to vect or burp

00:06:07,199 --> 00:06:11,199
or glove a lot of different options

00:06:10,000 --> 00:06:12,720
there for doing the

00:06:11,199 --> 00:06:14,240
nearest neighbor search you can do an

00:06:12,720 --> 00:06:15,840
exact nearest neighbor search

00:06:14,240 --> 00:06:18,240
or an approximate nearest neighbor

00:06:15,840 --> 00:06:19,600
search something elastic's not going to

00:06:18,240 --> 00:06:20,560
support an approximate nearest

00:06:19,600 --> 00:06:21,840
neighborhood search

00:06:20,560 --> 00:06:23,919
um so you're going to need to use some

00:06:21,840 --> 00:06:25,039
other technology there's companies like

00:06:23,919 --> 00:06:27,840
milvis or

00:06:25,039 --> 00:06:29,199
actually the elastic fork from amazon

00:06:27,840 --> 00:06:30,160
has an approximate nearest neighbor

00:06:29,199 --> 00:06:32,639
search you can use

00:06:30,160 --> 00:06:34,160
but by embedding the search term and the

00:06:32,639 --> 00:06:36,400
faqs into vector space

00:06:34,160 --> 00:06:37,199
and then comparing based off of semantic

00:06:36,400 --> 00:06:39,360
similarity

00:06:37,199 --> 00:06:40,960
you're going to provide the best results

00:06:39,360 --> 00:06:43,039
the final type of data structure you

00:06:40,960 --> 00:06:45,440
need to think about is unstructured data

00:06:43,039 --> 00:06:47,680
this is critical and you think about

00:06:45,440 --> 00:06:48,400
blog posts or product manuals or help

00:06:47,680 --> 00:06:49,759
articles

00:06:48,400 --> 00:06:51,520
and here's how google searches

00:06:49,759 --> 00:06:52,080
unstructured data you can see they

00:06:51,520 --> 00:06:53,680
aren't just

00:06:52,080 --> 00:06:55,520
showing a link to the article they're

00:06:53,680 --> 00:06:59,680
actually extracting the most

00:06:55,520 --> 00:07:01,039
important word sentence or paragraph

00:06:59,680 --> 00:07:02,319
to be able to provide the results so

00:07:01,039 --> 00:07:04,639
where did george washington grow up

00:07:02,319 --> 00:07:06,319
ferry farm it pulled from that paragraph

00:07:04,639 --> 00:07:09,199
how to log into facebook it pulled these

00:07:06,319 --> 00:07:10,639
steps right from a facebook help article

00:07:09,199 --> 00:07:12,880
um where did christopher christopher

00:07:10,639 --> 00:07:14,880
columbus land here we're just pulling

00:07:12,880 --> 00:07:17,120
san salvador right out of this article

00:07:14,880 --> 00:07:18,800
from national geographic

00:07:17,120 --> 00:07:20,319
under the hood in order to do this uh

00:07:18,800 --> 00:07:22,000
this is called unstructured question

00:07:20,319 --> 00:07:22,639
answering or extractive question

00:07:22,000 --> 00:07:25,360
answering

00:07:22,639 --> 00:07:26,800
or extractive qa there's a data set

00:07:25,360 --> 00:07:27,840
called squad that you're going to want

00:07:26,800 --> 00:07:29,759
to think about as

00:07:27,840 --> 00:07:31,039
the biggest source of label data to be

00:07:29,759 --> 00:07:33,199
able to do this

00:07:31,039 --> 00:07:35,039
and you're going to use the technique a

00:07:33,199 --> 00:07:35,599
model maybe burke or distilbert to

00:07:35,039 --> 00:07:37,599
actually

00:07:35,599 --> 00:07:39,120
perform this operation and what you're

00:07:37,599 --> 00:07:42,000
trying to do is within

00:07:39,120 --> 00:07:43,280
a paragraph or within a document find

00:07:42,000 --> 00:07:45,120
the most likely word

00:07:43,280 --> 00:07:47,280
sentence or paragraph that answers the

00:07:45,120 --> 00:07:49,759
question

00:07:47,280 --> 00:07:51,120
so overall it's absolutely critical that

00:07:49,759 --> 00:07:52,400
you think about these three different

00:07:51,120 --> 00:07:54,479
data structures

00:07:52,400 --> 00:07:55,840
and you think about what is the right

00:07:54,479 --> 00:07:56,639
search algorithm for those data

00:07:55,840 --> 00:07:58,560
structures

00:07:56,639 --> 00:08:00,560
if you have an approach where you treat

00:07:58,560 --> 00:08:02,479
all different types of data the same

00:08:00,560 --> 00:08:04,000
and try to one basic keyword search

00:08:02,479 --> 00:08:04,800
against that so the traditional site

00:08:04,000 --> 00:08:06,639
search is

00:08:04,800 --> 00:08:08,400
crawling every page on the site treating

00:08:06,639 --> 00:08:10,240
it all as unstructured documents

00:08:08,400 --> 00:08:12,080
and then running keyword search against

00:08:10,240 --> 00:08:14,080
it it's not going to be very helpful

00:08:12,080 --> 00:08:15,840
and people aren't going to use it in

00:08:14,080 --> 00:08:17,360
order to deliver an experience that

00:08:15,840 --> 00:08:19,120
users want to use

00:08:17,360 --> 00:08:20,879
you need to exceed what modern search

00:08:19,120 --> 00:08:22,639
engines are doing and modern search

00:08:20,879 --> 00:08:24,720
engines are using multiple algorithms

00:08:22,639 --> 00:08:27,680
all using natural language understanding

00:08:24,720 --> 00:08:28,960
and this is what you need to know i work

00:08:27,680 --> 00:08:30,720
on the svp of product

00:08:28,960 --> 00:08:32,560
yex and this is what our yext answers

00:08:30,720 --> 00:08:34,159
product is focused on making it so that

00:08:32,560 --> 00:08:34,959
you don't need to hire your own data

00:08:34,159 --> 00:08:36,560
science team

00:08:34,959 --> 00:08:38,159
you don't need to hire all these natural

00:08:36,560 --> 00:08:40,080
language understanding experts

00:08:38,159 --> 00:08:41,839
in order to deliver this site search so

00:08:40,080 --> 00:08:42,640
you can focus on the actual content and

00:08:41,839 --> 00:08:44,320
the data

00:08:42,640 --> 00:08:46,399
and we can handle all of these different

00:08:44,320 --> 00:08:47,600
details around the different algorithms

00:08:46,399 --> 00:08:48,959
but if you want to build this on your

00:08:47,600 --> 00:08:50,480
own you're going to want to definitely

00:08:48,959 --> 00:08:51,279
focus on these three core data

00:08:50,480 --> 00:08:53,200
structures

00:08:51,279 --> 00:08:54,640
and these are the three core search

00:08:53,200 --> 00:08:56,240
algorithms i would start with

00:08:54,640 --> 00:08:58,000
as you start to think about building a

00:08:56,240 --> 00:08:59,200
natural language search engine that can

00:08:58,000 --> 00:09:02,080
mirror or exceed

00:08:59,200 --> 00:09:02,720
that google-like search experience thank

00:09:02,080 --> 00:09:05,120
you for

00:09:02,720 --> 00:09:06,560
your time everyone um definitely check

00:09:05,120 --> 00:09:07,839
out our booth if you have more questions

00:09:06,560 --> 00:09:10,080
about our product or you want to dive

00:09:07,839 --> 00:09:14,320
into any of these details even further

00:09:10,080 --> 00:09:14,320

YouTube URL: https://www.youtube.com/watch?v=mRbOrhMg0ko


