Title: The Tools to Get Your Site Ready for Drupal 9 & 10   DrupalCon North America 2021
Publication date: 2021-05-27
Playlist: DrupalCon North America 2021
Description: 
	Overview of the tools used to ensure site readiness for Drupal 9 and Drupal 10
Captions: 
	00:00:02,399 --> 00:00:06,880
and we're at time if you

00:00:03,919 --> 00:00:06,880
want to get started

00:00:10,240 --> 00:00:17,440
hey welcome everyone to the tools to get

00:00:13,840 --> 00:00:20,720
your site ready for drupal 9 and 10.

00:00:17,440 --> 00:00:22,080
my name is offer shal at work i work at

00:00:20,720 --> 00:00:25,279
phase 2

00:00:22,080 --> 00:00:26,560
and with me today hi my name is matt

00:00:25,279 --> 00:00:28,840
glauman

00:00:26,560 --> 00:00:30,960
i work at my own company blue horn

00:00:28,840 --> 00:00:34,399
digital

00:00:30,960 --> 00:00:35,040
so today we would like to uh talk to you

00:00:34,399 --> 00:00:37,360
about

00:00:35,040 --> 00:00:39,040
what's available what worked and what's

00:00:37,360 --> 00:00:41,760
ahead of us

00:00:39,040 --> 00:00:44,719
whether you are in a stage where you're

00:00:41,760 --> 00:00:46,879
on drupal 8 to 9 upgrade or maybe

00:00:44,719 --> 00:00:50,559
thinking forward to get yourself ready

00:00:46,879 --> 00:00:50,559
for drupal 9 to drupal 10 upgrade

00:00:53,199 --> 00:00:57,520
so drupal aaa to drupal 9 was the first

00:00:56,640 --> 00:01:00,640
major version

00:00:57,520 --> 00:01:03,920
upgrade without a rewrites until now the

00:01:00,640 --> 00:01:07,280
major drupal versions required

00:01:03,920 --> 00:01:10,400
a massive rewrite of the whole project

00:01:07,280 --> 00:01:12,799
and finally we're getting to uh

00:01:10,400 --> 00:01:14,320
a new era that we already tested so

00:01:12,799 --> 00:01:16,640
before

00:01:14,320 --> 00:01:17,680
what deprecation over complete rewrites

00:01:16,640 --> 00:01:21,119
really means

00:01:17,680 --> 00:01:23,200
is that no longer we need to write the

00:01:21,119 --> 00:01:25,840
entire api

00:01:23,200 --> 00:01:28,400
right there's specific functions that

00:01:25,840 --> 00:01:30,560
slowly slowly being deprecated

00:01:28,400 --> 00:01:33,360
and being replaced with a better version

00:01:30,560 --> 00:01:37,520
more secured faster

00:01:33,360 --> 00:01:39,600
and these are the parts that we get to

00:01:37,520 --> 00:01:42,159
to work on in order to get a site

00:01:39,600 --> 00:01:42,159
upgraded

00:01:43,520 --> 00:01:48,159
when the before there were many charts

00:01:45,680 --> 00:01:51,280
that show how eight to nine gonna work

00:01:48,159 --> 00:01:54,240
and it shows how as drupal 8

00:01:51,280 --> 00:01:55,600
move forward more and more new ability

00:01:54,240 --> 00:02:00,079
new functionalities

00:01:55,600 --> 00:02:03,040
is added meaning new functions would be

00:02:00,079 --> 00:02:03,840
declared as deprecated code it would

00:02:03,040 --> 00:02:06,960
still work at

00:02:03,840 --> 00:02:10,160
eight and we when you go to drupal 9

00:02:06,960 --> 00:02:12,080
all that code from before is not being

00:02:10,160 --> 00:02:14,720
shipped anymore in drupal 9

00:02:12,080 --> 00:02:16,959
and on the all the new functionality is

00:02:14,720 --> 00:02:20,400
working

00:02:16,959 --> 00:02:21,599
what we saw in the past of of these

00:02:20,400 --> 00:02:24,080
upgrades

00:02:21,599 --> 00:02:25,120
is that it might be difficult to know

00:02:24,080 --> 00:02:27,040
okay so

00:02:25,120 --> 00:02:29,920
i'm ready to move from eight to nine or

00:02:27,040 --> 00:02:32,640
later on from nine to ten

00:02:29,920 --> 00:02:33,760
what what is the deprecated code that i

00:02:32,640 --> 00:02:36,239
need to deal with

00:02:33,760 --> 00:02:39,599
how do i deal with it and where do i

00:02:36,239 --> 00:02:39,599
find it and how do i fix it

00:02:41,840 --> 00:02:48,239
so the good news is we have

00:02:44,879 --> 00:02:50,879
great tools ahead

00:02:48,239 --> 00:02:51,599
they were developed i would guess to say

00:02:50,879 --> 00:02:53,920
recently

00:02:51,599 --> 00:02:55,519
because at the beginning of eight eight

00:02:53,920 --> 00:02:58,959
to nine was an idea and

00:02:55,519 --> 00:03:02,080
slowly slowly um they would be

00:02:58,959 --> 00:03:03,200
proven tools that works really well and

00:03:02,080 --> 00:03:07,840
make it

00:03:03,200 --> 00:03:07,840
a really really nice and smooth process

00:03:10,080 --> 00:03:16,560
yep so just like 8 to 9 guess what

00:03:13,519 --> 00:03:18,319
drupal 10 is coming and as we continue

00:03:16,560 --> 00:03:21,360
with drupal 9

00:03:18,319 --> 00:03:24,239
we're adding new functionality

00:03:21,360 --> 00:03:24,560
if you've seen the session before about

00:03:24,239 --> 00:03:27,680
how

00:03:24,560 --> 00:03:29,440
core and dependencies are changed and

00:03:27,680 --> 00:03:32,400
because of that the different

00:03:29,440 --> 00:03:33,280
apis must be changed the good news as

00:03:32,400 --> 00:03:35,280
well is

00:03:33,280 --> 00:03:38,480
as we're using these tools we see these

00:03:35,280 --> 00:03:41,840
tools continue moving forward with us

00:03:38,480 --> 00:03:47,040
into the future of drupal 11 1213 and

00:03:41,840 --> 00:03:49,680
all the upcoming versions

00:03:47,040 --> 00:03:51,440
yeah so drupal 9 for a long time was

00:03:49,680 --> 00:03:54,480
this it was this promise

00:03:51,440 --> 00:03:56,080
of yep it's going to be okay no longer

00:03:54,480 --> 00:03:58,480
what you've seen before in

00:03:56,080 --> 00:04:01,439
drupal major upgrades this one's going

00:03:58,480 --> 00:04:05,599
to be nice and smooth ride

00:04:01,439 --> 00:04:08,400
uh so far and all the feedback we got

00:04:05,599 --> 00:04:10,640
was that was such a smooth process for

00:04:08,400 --> 00:04:14,080
many people

00:04:10,640 --> 00:04:15,680
drupal 10 coming up that upgrade we

00:04:14,080 --> 00:04:16,799
assume it's going to be even easier

00:04:15,680 --> 00:04:19,280
before

00:04:16,799 --> 00:04:21,040
the difference is drupal 8 has a long

00:04:19,280 --> 00:04:24,479
life cycle

00:04:21,040 --> 00:04:28,320
many minor version 8.0 8.1 0.2

00:04:24,479 --> 00:04:31,040
and so forth all the way up to 8.9

00:04:28,320 --> 00:04:32,320
so more and more and more deprecations

00:04:31,040 --> 00:04:34,479
were building up

00:04:32,320 --> 00:04:36,560
drupal 9 has a shorter life cycle

00:04:34,479 --> 00:04:38,880
probably continue also with the future

00:04:36,560 --> 00:04:41,600
of drupal 10 11 and so forth

00:04:38,880 --> 00:04:43,919
less time for deprecations so the

00:04:41,600 --> 00:04:48,000
iteration gonna be faster

00:04:43,919 --> 00:04:48,880
and we finally had changed the semantic

00:04:48,000 --> 00:04:50,720
versioning

00:04:48,880 --> 00:04:53,040
and how we're dealing with deprecated

00:04:50,720 --> 00:04:53,040
code

00:04:54,400 --> 00:04:58,400
so i can take over and i'll talk about

00:04:56,800 --> 00:05:00,320
some of these tools that

00:04:58,400 --> 00:05:01,360
are available and also when to use them

00:05:00,320 --> 00:05:03,199
because you've probably heard like the

00:05:01,360 --> 00:05:06,160
various names and wondering

00:05:03,199 --> 00:05:07,199
which one to use when um so first i'd

00:05:06,160 --> 00:05:11,120
like to talk about

00:05:07,199 --> 00:05:14,240
upgrade status

00:05:11,120 --> 00:05:16,880
upgrade status is your best

00:05:14,240 --> 00:05:18,080
place to get started if you're just

00:05:16,880 --> 00:05:20,479
getting started with looking at

00:05:18,080 --> 00:05:22,160
upgrading from drupal 8 to drupal 9

00:05:20,479 --> 00:05:23,919
or you have a 9 site you don't know what

00:05:22,160 --> 00:05:25,120
deprecations there are if a module will

00:05:23,919 --> 00:05:27,680
be ready

00:05:25,120 --> 00:05:29,600
the upgrade status module well it's a

00:05:27,680 --> 00:05:32,960
drupal module installed on your site

00:05:29,600 --> 00:05:35,039
and it will help discover any code

00:05:32,960 --> 00:05:36,880
that is calling deprecated code if

00:05:35,039 --> 00:05:39,520
you're using deprecated twig

00:05:36,880 --> 00:05:41,280
templates css or javascript files or

00:05:39,520 --> 00:05:43,360
even deprecated hooks

00:05:41,280 --> 00:05:45,360
for one example search api actually has

00:05:43,360 --> 00:05:46,160
a hook that they deprecated in favor of

00:05:45,360 --> 00:05:47,919
events

00:05:46,160 --> 00:05:49,840
so if you have the facets module

00:05:47,919 --> 00:05:50,720
installed or previously did it actually

00:05:49,840 --> 00:05:52,720
would say

00:05:50,720 --> 00:05:55,440
hey the facets module is using this

00:05:52,720 --> 00:05:58,800
deprecated hook it will be removed by

00:05:55,440 --> 00:06:00,479
this version one of the really nice

00:05:58,800 --> 00:06:02,639
things about upgrade status is

00:06:00,479 --> 00:06:03,759
it's friendly user interface so if

00:06:02,639 --> 00:06:06,639
you're new to this

00:06:03,759 --> 00:06:08,080
or you know you are a site builder and

00:06:06,639 --> 00:06:08,960
you're like well i got to manage all

00:06:08,080 --> 00:06:11,759
these upgrades

00:06:08,960 --> 00:06:13,919
it gives it a really nice digestible

00:06:11,759 --> 00:06:17,280
format and one of the nice parts too is

00:06:13,919 --> 00:06:20,639
it also shows the system requirements

00:06:17,280 --> 00:06:21,680
like if you need to have php 7.3 or 4 or

00:06:20,639 --> 00:06:24,880
00:06:21,680 --> 00:06:27,440
i believe drupal 9 requires 7.3

00:06:24,880 --> 00:06:29,280
at least our drupal 8 was released when

00:06:27,440 --> 00:06:32,400
it was php 7. so you could

00:06:29,280 --> 00:06:34,720
get by on old php releases it also helps

00:06:32,400 --> 00:06:36,240
explain the upgrade paths and how you

00:06:34,720 --> 00:06:38,319
can work with maintainers

00:06:36,240 --> 00:06:39,759
to either you know figure out like hey

00:06:38,319 --> 00:06:42,960
can we get a release or what would it

00:06:39,759 --> 00:06:44,800
take to help get a release out

00:06:42,960 --> 00:06:46,560
well it does provide a user interface

00:06:44,800 --> 00:06:48,720
there is a drush command that you can

00:06:46,560 --> 00:06:50,240
run so if you like to use drush

00:06:48,720 --> 00:06:51,759
and you have your site installed you can

00:06:50,240 --> 00:06:53,599
just type out that command

00:06:51,759 --> 00:06:55,599
and get the same report in your command

00:06:53,599 --> 00:06:57,840
line as well

00:06:55,599 --> 00:07:00,319
so if you want to get upgrade status the

00:06:57,840 --> 00:07:03,440
project page is drupal.org slash project

00:07:00,319 --> 00:07:05,919
slash upgrade status and gabor has done

00:07:03,440 --> 00:07:09,680
a wonderful job documenting the project

00:07:05,919 --> 00:07:10,720
and how to use it next i'd like to talk

00:07:09,680 --> 00:07:13,919
about drupal check

00:07:10,720 --> 00:07:16,800
which is one of my projects

00:07:13,919 --> 00:07:19,919
drupal check is a command line tool to

00:07:16,800 --> 00:07:21,360
find deprecations in your drupal code

00:07:19,919 --> 00:07:23,360
it's a command line tool that performs

00:07:21,360 --> 00:07:24,960
static code analysis what does that mean

00:07:23,360 --> 00:07:25,840
that means you don't need a database you

00:07:24,960 --> 00:07:27,520
don't need to have

00:07:25,840 --> 00:07:29,360
a drupal site that's installed and

00:07:27,520 --> 00:07:30,240
running you just need your code to be

00:07:29,360 --> 00:07:33,280
sitting somewhere

00:07:30,240 --> 00:07:33,759
and you run it against it and behind the

00:07:33,280 --> 00:07:36,560
scenes

00:07:33,759 --> 00:07:38,639
upgrade status is actually invoking this

00:07:36,560 --> 00:07:39,440
so when you do upgrade status it runs

00:07:38,639 --> 00:07:41,280
this tool

00:07:39,440 --> 00:07:42,880
and then does some other checks that it

00:07:41,280 --> 00:07:45,759
can't do

00:07:42,880 --> 00:07:48,000
um for example as we said upgrade status

00:07:45,759 --> 00:07:51,120
can find deprecated twig templates

00:07:48,000 --> 00:07:54,560
and hooks all that data

00:07:51,120 --> 00:07:56,479
requires a state of drupal like drupal

00:07:54,560 --> 00:07:59,840
being installed so the command line tool

00:07:56,479 --> 00:07:59,840
can't really figure that out

00:08:00,000 --> 00:08:04,720
if you'd like to use drupal check um you

00:08:02,720 --> 00:08:05,919
install it as a composer dependency so

00:08:04,720 --> 00:08:07,680
composer require

00:08:05,919 --> 00:08:09,280
m glom and slash drupal check and then

00:08:07,680 --> 00:08:10,080
you just run it from the vendor

00:08:09,280 --> 00:08:12,479
directory with

00:08:10,080 --> 00:08:13,599
drupal check path to module and it will

00:08:12,479 --> 00:08:19,039
spit back out

00:08:13,599 --> 00:08:19,039
a a format of all the items to fix

00:08:19,599 --> 00:08:24,240
and then i want to also touch on php

00:08:21,759 --> 00:08:25,759
stand with php stand drupal

00:08:24,240 --> 00:08:27,360
and as we've gone through this tooling

00:08:25,759 --> 00:08:28,000
stack we've kind of gone from the high

00:08:27,360 --> 00:08:31,360
level

00:08:28,000 --> 00:08:31,840
to going into the lower levels so php

00:08:31,360 --> 00:08:34,640
stand

00:08:31,840 --> 00:08:36,560
is a static analysis tool and this is

00:08:34,640 --> 00:08:37,440
the core component to all of the upgrade

00:08:36,560 --> 00:08:40,399
tooling

00:08:37,440 --> 00:08:41,279
drupal check is just a bundled package

00:08:40,399 --> 00:08:44,720
that helps

00:08:41,279 --> 00:08:46,240
configure php stand for you and the the

00:08:44,720 --> 00:08:48,560
glue that makes it all work is my

00:08:46,240 --> 00:08:51,120
extension php stand drupal which allows

00:08:48,560 --> 00:08:51,760
php stand to discover and analyze drupal

00:08:51,120 --> 00:08:53,920
code

00:08:51,760 --> 00:08:55,600
you don't know what that means it's just

00:08:53,920 --> 00:08:58,640
php code uses

00:08:55,600 --> 00:09:01,040
auto loading most php projects

00:08:58,640 --> 00:09:02,080
dump all their autoloading information

00:09:01,040 --> 00:09:04,399
to a file

00:09:02,080 --> 00:09:05,839
drupal leverages a database so my

00:09:04,399 --> 00:09:09,200
extension mocks

00:09:05,839 --> 00:09:10,959
some of that stuff there if you want

00:09:09,200 --> 00:09:12,480
you can use php stand directly you don't

00:09:10,959 --> 00:09:13,360
need to use drupal check or upgrade

00:09:12,480 --> 00:09:15,360
status

00:09:13,360 --> 00:09:17,440
it's more of like an advanced user

00:09:15,360 --> 00:09:19,040
operation but the one benefit is you

00:09:17,440 --> 00:09:22,560
could use it for other static

00:09:19,040 --> 00:09:24,880
code analysis tools if you wanted

00:09:22,560 --> 00:09:25,920
to just use php stand you could run

00:09:24,880 --> 00:09:28,800
composer require

00:09:25,920 --> 00:09:30,880
php stand the extension installer the

00:09:28,800 --> 00:09:32,320
deprecation rules and then my extension

00:09:30,880 --> 00:09:35,839
php stand drupal

00:09:32,320 --> 00:09:37,200
and then run php stand so the example is

00:09:35,839 --> 00:09:39,440
kind of hard to show the difference but

00:09:37,200 --> 00:09:40,320
it says hey simple example has no return

00:09:39,440 --> 00:09:44,320
type hint

00:09:40,320 --> 00:09:47,680
and then several deprecation notices

00:09:44,320 --> 00:09:49,600
so those are all the tools on finding

00:09:47,680 --> 00:09:51,279
these deprecations so that way you're

00:09:49,600 --> 00:09:54,080
aware of

00:09:51,279 --> 00:09:54,880
you know what is the current state now

00:09:54,080 --> 00:09:56,959
you'd have to go in

00:09:54,880 --> 00:09:58,560
and manually fix all those and as

00:09:56,959 --> 00:10:00,320
somebody who did that for a lot of

00:09:58,560 --> 00:10:02,959
modules and even my own site

00:10:00,320 --> 00:10:04,800
it's not fun luckily we have drupal

00:10:02,959 --> 00:10:07,839
rector

00:10:04,800 --> 00:10:09,440
and drupal rector is a command line tool

00:10:07,839 --> 00:10:11,200
for automating the fixes to your

00:10:09,440 --> 00:10:12,640
deprecated code usages it's like this

00:10:11,200 --> 00:10:14,320
magical fairy that comes down it's like

00:10:12,640 --> 00:10:16,640
oh you have some deprecated code here

00:10:14,320 --> 00:10:17,920
toodally do it's fixed and uses the

00:10:16,640 --> 00:10:20,800
right way

00:10:17,920 --> 00:10:22,240
uses the right form of code so like i

00:10:20,800 --> 00:10:23,440
said all the previous tools tell you

00:10:22,240 --> 00:10:26,560
what must be fixed

00:10:23,440 --> 00:10:29,279
and this tool fixes them and

00:10:26,560 --> 00:10:30,079
neat fun fact it actually has php stand

00:10:29,279 --> 00:10:32,640
under the hood

00:10:30,079 --> 00:10:33,680
for its abs to help leverage the

00:10:32,640 --> 00:10:36,320
abstract

00:10:33,680 --> 00:10:37,839
syntax tree parsing that php stain is

00:10:36,320 --> 00:10:40,160
built

00:10:37,839 --> 00:10:41,440
so if you want to get running with

00:10:40,160 --> 00:10:43,360
drupal rector you do

00:10:41,440 --> 00:10:45,440
it's another composer project so you do

00:10:43,360 --> 00:10:46,560
compose require pound to your net slash

00:10:45,440 --> 00:10:48,959
drupal rector

00:10:46,560 --> 00:10:49,760
you do have to copy the configuration

00:10:48,959 --> 00:10:51,920
file

00:10:49,760 --> 00:10:53,519
and then you just run rector path to

00:10:51,920 --> 00:10:54,000
module now i'll put a little note here

00:10:53,519 --> 00:10:55,839
real quick

00:10:54,000 --> 00:10:57,680
these instructions say to copy a

00:10:55,839 --> 00:10:59,839
rector.php file

00:10:57,680 --> 00:11:01,519
this is referencing a soon to be merged

00:10:59,839 --> 00:11:03,040
upgrade that's coming to

00:11:01,519 --> 00:11:04,800
drupal rector so if you go try this

00:11:03,040 --> 00:11:07,120
right now it might say sorry

00:11:04,800 --> 00:11:10,880
that file doesn't exist this is just we

00:11:07,120 --> 00:11:10,880
have an upgrade that is coming out soon

00:11:10,959 --> 00:11:14,240
and then i wanted to also talk about the

00:11:13,279 --> 00:11:17,600
upgrade rector

00:11:14,240 --> 00:11:19,680
module so yes there is a module for this

00:11:17,600 --> 00:11:21,360
the upgrade rector module is like a

00:11:19,680 --> 00:11:23,040
counterpart to upgrade status

00:11:21,360 --> 00:11:24,720
and this is a module that will run

00:11:23,040 --> 00:11:26,480
rector for you so if you're not

00:11:24,720 --> 00:11:28,560
comfortable with composer

00:11:26,480 --> 00:11:30,079
or you don't you're like you don't want

00:11:28,560 --> 00:11:32,480
to have to configure anything

00:11:30,079 --> 00:11:34,079
the module can be your way of running

00:11:32,480 --> 00:11:36,720
this against your own code

00:11:34,079 --> 00:11:37,279
or maybe helping contribute fixes to

00:11:36,720 --> 00:11:40,480
other

00:11:37,279 --> 00:11:41,040
projects on drupal.org so again that

00:11:40,480 --> 00:11:43,120
project

00:11:41,040 --> 00:11:45,600
is upgrade rector and the project

00:11:43,120 --> 00:11:46,000
statistic the project page is drupal dot

00:11:45,600 --> 00:11:49,120
org

00:11:46,000 --> 00:11:50,639
slash project slash upgrade rector

00:11:49,120 --> 00:11:52,480
and before we move on to some other

00:11:50,639 --> 00:11:55,440
topics i just wanted to like

00:11:52,480 --> 00:11:57,360
give a large shout out to php stand and

00:11:55,440 --> 00:12:00,480
director projects

00:11:57,360 --> 00:12:01,680
um all this tooling was built under the

00:12:00,480 --> 00:12:03,760
shoulders of giants

00:12:01,680 --> 00:12:07,519
um none of these tools would be possible

00:12:03,760 --> 00:12:09,200
if there wasn't php stand in rector

00:12:07,519 --> 00:12:11,839
little side note like i recently

00:12:09,200 --> 00:12:13,040
received funding to work on php stand

00:12:11,839 --> 00:12:15,279
drupal and get everything ready for

00:12:13,040 --> 00:12:15,920
drupal 9 and i gave a quarter of that

00:12:15,279 --> 00:12:18,800
money

00:12:15,920 --> 00:12:19,839
to the maintainer of php stand because

00:12:18,800 --> 00:12:22,399
even though i'm maintaining one

00:12:19,839 --> 00:12:25,440
extension we rely on their code

00:12:22,399 --> 00:12:27,760
and their open source contributions so

00:12:25,440 --> 00:12:28,560
i just think we should all give them a

00:12:27,760 --> 00:12:30,480
lot of thanks

00:12:28,560 --> 00:12:32,240
for the packages they've built and made

00:12:30,480 --> 00:12:34,560
it able so we can upgrade our drupal

00:12:32,240 --> 00:12:34,560
sites

00:12:34,880 --> 00:12:38,720
offer did you want to take over this

00:12:36,839 --> 00:12:42,079
part

00:12:38,720 --> 00:12:44,000
really thank you so

00:12:42,079 --> 00:12:45,519
how do we actually do it what does it

00:12:44,000 --> 00:12:48,959
mean to

00:12:45,519 --> 00:12:52,079
maintain either my module or my site

00:12:48,959 --> 00:12:53,120
whether i'm on 8 or if i'm ready to go

00:12:52,079 --> 00:12:55,680
from 9 to 10

00:12:53,120 --> 00:12:56,399
into the future so first of all let's

00:12:55,680 --> 00:12:59,360
talk about

00:12:56,399 --> 00:13:02,240
the module maintainers and what they

00:12:59,360 --> 00:13:02,240
need to make sure they do

00:13:03,279 --> 00:13:07,760
and also we'll add one more piece about

00:13:06,240 --> 00:13:10,399
rector rules

00:13:07,760 --> 00:13:12,320
so we said we have different tools to

00:13:10,399 --> 00:13:15,680
analyze and check and tell us

00:13:12,320 --> 00:13:18,800
what's deprecated there are

00:13:15,680 --> 00:13:20,320
bots running once a week and

00:13:18,800 --> 00:13:21,920
checking all the modules and where

00:13:20,320 --> 00:13:24,880
they're at today

00:13:21,920 --> 00:13:26,320
maybe today a new release of a

00:13:24,880 --> 00:13:29,360
deprecated function

00:13:26,320 --> 00:13:32,160
was released these bots will find it

00:13:29,360 --> 00:13:33,680
and make sure that we know what is the

00:13:32,160 --> 00:13:37,279
work that is needed

00:13:33,680 --> 00:13:40,240
to get each module upgraded

00:13:37,279 --> 00:13:41,920
when we talk about the automation of

00:13:40,240 --> 00:13:44,800
fixing modules

00:13:41,920 --> 00:13:46,560
that's what drupal rector does drupal

00:13:44,800 --> 00:13:49,519
rector

00:13:46,560 --> 00:13:50,160
is a package on top of rector package

00:13:49,519 --> 00:13:53,920
and it has

00:13:50,160 --> 00:13:57,279
rectal rules every deprecation

00:13:53,920 --> 00:14:00,959
that would have a vector rule would make

00:13:57,279 --> 00:14:03,519
so many people's lives so much easier

00:14:00,959 --> 00:14:05,199
because instead of writing that code

00:14:03,519 --> 00:14:08,480
drupal rector is not just a

00:14:05,199 --> 00:14:10,560
find and replace package it's actually

00:14:08,480 --> 00:14:12,800
going analyzing and do

00:14:10,560 --> 00:14:13,680
the best of its possibility will create

00:14:12,800 --> 00:14:15,680
a code for you

00:14:13,680 --> 00:14:18,639
or maybe would also add a comment to

00:14:15,680 --> 00:14:20,480
tell you here's something that was fixed

00:14:18,639 --> 00:14:23,040
but you should actually manually check

00:14:20,480 --> 00:14:25,680
it so

00:14:23,040 --> 00:14:26,560
every vector rule that will be added

00:14:25,680 --> 00:14:30,000
would run

00:14:26,560 --> 00:14:30,000
by project update bot

00:14:31,839 --> 00:14:37,120
every single module also to clarify

00:14:35,440 --> 00:14:40,000
another part

00:14:37,120 --> 00:14:40,560
we talk about few tools one to show us

00:14:40,000 --> 00:14:42,880
what's

00:14:40,560 --> 00:14:44,480
uh what need to be upgraded and the

00:14:42,880 --> 00:14:48,000
other to actually generate

00:14:44,480 --> 00:14:51,360
code for us the one that generating code

00:14:48,000 --> 00:14:54,639
would run regardless of what was found

00:14:51,360 --> 00:14:55,120
meaning all the rector rules that can

00:14:54,639 --> 00:14:58,399
apply

00:14:55,120 --> 00:14:59,519
to any modules would be applied and that

00:14:58,399 --> 00:15:02,639
would be the patch

00:14:59,519 --> 00:15:06,720
that is running that that is generated

00:15:02,639 --> 00:15:08,880
also mean that maybe today in april

00:15:06,720 --> 00:15:10,320
the bot was running and create one patch

00:15:08,880 --> 00:15:13,199
for you

00:15:10,320 --> 00:15:14,959
if we add additional vector rules the

00:15:13,199 --> 00:15:17,519
next time the body is running

00:15:14,959 --> 00:15:18,639
it will have an even better patch for

00:15:17,519 --> 00:15:21,760
you

00:15:18,639 --> 00:15:23,519
so as a module maintainer you can either

00:15:21,760 --> 00:15:25,600
create some of these vector rules

00:15:23,519 --> 00:15:28,399
according to what your module need

00:15:25,600 --> 00:15:29,839
or the project type update bot would

00:15:28,399 --> 00:15:34,000
deliver for you

00:15:29,839 --> 00:15:35,440
into an issue that patch that you need

00:15:34,000 --> 00:15:38,000
for your module

00:15:35,440 --> 00:15:40,320
we would need your help to actually test

00:15:38,000 --> 00:15:40,880
it and make it an official part of your

00:15:40,320 --> 00:15:43,519
module

00:15:40,880 --> 00:15:45,440
to benefit the whole compute community

00:15:43,519 --> 00:15:48,160
you can also add php stand

00:15:45,440 --> 00:15:49,360
into your drupal ci right because that

00:15:48,160 --> 00:15:52,560
would allow you

00:15:49,360 --> 00:15:53,199
instead of a year after okay where's my

00:15:52,560 --> 00:15:55,360
module and

00:15:53,199 --> 00:15:56,639
is it ready for drupal 10 if you're

00:15:55,360 --> 00:15:59,920
already bringing

00:15:56,639 --> 00:16:02,720
php stand into drupal ci

00:15:59,920 --> 00:16:04,399
as deprecation coming up you will

00:16:02,720 --> 00:16:06,959
already get a warning about it you will

00:16:04,399 --> 00:16:09,519
early already see and be notified

00:16:06,959 --> 00:16:10,079
and you'll be able to get your module

00:16:09,519 --> 00:16:12,880
ready

00:16:10,079 --> 00:16:12,880
way in advance

00:16:14,880 --> 00:16:21,680
for site maintainers that

00:16:18,000 --> 00:16:24,480
we are depending on module maintainers

00:16:21,680 --> 00:16:26,320
we can add drupal check into our ci the

00:16:24,480 --> 00:16:27,279
same with the module maintainer meaning

00:16:26,320 --> 00:16:30,240
that

00:16:27,279 --> 00:16:31,680
instead of one day to decide okay so

00:16:30,240 --> 00:16:34,560
what is this triple 10

00:16:31,680 --> 00:16:35,360
upgrade means i can actually have as

00:16:34,560 --> 00:16:38,320
deprecation

00:16:35,360 --> 00:16:39,040
being added i get notified about it and

00:16:38,320 --> 00:16:42,160
i can

00:16:39,040 --> 00:16:45,600
already take care of it

00:16:42,160 --> 00:16:48,880
regarding drupal vector uh it would

00:16:45,600 --> 00:16:52,079
also test your custom code so it's not

00:16:48,880 --> 00:16:52,959
only for country modules any rector rule

00:16:52,079 --> 00:16:55,279
that can run

00:16:52,959 --> 00:16:58,320
on your custom modules would also be

00:16:55,279 --> 00:17:00,399
applied and help you as well

00:16:58,320 --> 00:17:02,079
so just like you're running phpcs in

00:17:00,399 --> 00:17:04,079
your ci

00:17:02,079 --> 00:17:05,839
running drupal check and be notified

00:17:04,079 --> 00:17:10,079
ahead of time

00:17:05,839 --> 00:17:13,039
and upgrade status which is in the ui

00:17:10,079 --> 00:17:13,760
would actually let you know what is

00:17:13,039 --> 00:17:15,360
happening

00:17:13,760 --> 00:17:17,280
it will tell you maybe there's no work

00:17:15,360 --> 00:17:19,760
you need to do locally because

00:17:17,280 --> 00:17:22,000
the module maintainer already released a

00:17:19,760 --> 00:17:24,799
drupal 9 or drupal 10

00:17:22,000 --> 00:17:25,600
version so your work as a site

00:17:24,799 --> 00:17:28,559
maintainer

00:17:25,600 --> 00:17:33,840
just download the latest version and

00:17:28,559 --> 00:17:33,840
your site is ready

00:17:36,080 --> 00:17:41,200
so how do you get involved because uh

00:17:39,600 --> 00:17:44,480
this is all open source and we're

00:17:41,200 --> 00:17:47,919
community and we need everyone's help

00:17:44,480 --> 00:17:51,919
so we have a slack channel called d10

00:17:47,919 --> 00:17:52,799
readiness thank you and we have meetings

00:17:51,919 --> 00:17:56,000
every two weeks

00:17:52,799 --> 00:17:58,480
on a monday it might become weekly

00:17:56,000 --> 00:17:59,200
as we get uh closer to the next major

00:17:58,480 --> 00:18:01,840
upgrade

00:17:59,200 --> 00:18:03,760
you can ping myself you can ping matt if

00:18:01,840 --> 00:18:07,679
you need help or you have suggestions

00:18:03,760 --> 00:18:09,520
or advices that we can use um

00:18:07,679 --> 00:18:12,160
was it something can you go back to the

00:18:09,520 --> 00:18:12,160
previous slide

00:18:13,440 --> 00:18:19,200
thank you so um

00:18:16,720 --> 00:18:21,200
the help that is needed or the major

00:18:19,200 --> 00:18:23,520
part we're preparing the tools

00:18:21,200 --> 00:18:24,799
and matt did great work to get us ready

00:18:23,520 --> 00:18:27,919
for drupal 9

00:18:24,799 --> 00:18:30,320
get the latest version of rector the

00:18:27,919 --> 00:18:33,120
main thing that is needed now

00:18:30,320 --> 00:18:35,360
is creating rector rules for every

00:18:33,120 --> 00:18:38,400
deprecation we find

00:18:35,360 --> 00:18:41,120
and we're going to have a list of the

00:18:38,400 --> 00:18:42,400
top 10 and then we can move to top 50

00:18:41,120 --> 00:18:46,400
and so on

00:18:42,400 --> 00:18:50,080
to see how many modules

00:18:46,400 --> 00:18:53,360
would benefit from each rector room

00:18:50,080 --> 00:18:58,400
now go to the next slide

00:18:53,360 --> 00:19:01,600
thank you and by writing rector rules

00:18:58,400 --> 00:19:04,160
everyone benefit like i said before it

00:19:01,600 --> 00:19:06,559
will bring it to the drupal update bot

00:19:04,160 --> 00:19:08,320
that will utilize it people will be able

00:19:06,559 --> 00:19:10,480
to use it in their own custom code when

00:19:08,320 --> 00:19:13,760
they need

00:19:10,480 --> 00:19:17,520
any testing that you can help us with

00:19:13,760 --> 00:19:18,320
is uh more than welcomed we have phpa

00:19:17,520 --> 00:19:21,679
tests

00:19:18,320 --> 00:19:25,039
uh drupal 10 a branch would be open

00:19:21,679 --> 00:19:27,200
sometime soon and we will wait with it

00:19:25,039 --> 00:19:30,559
to the last moment as possible but

00:19:27,200 --> 00:19:33,919
once it's there um when the community

00:19:30,559 --> 00:19:35,600
testings in the different uh situation

00:19:33,919 --> 00:19:36,720
different installation and setup that

00:19:35,600 --> 00:19:39,919
they have

00:19:36,720 --> 00:19:41,520
that is the most helpful thing because

00:19:39,919 --> 00:19:44,640
that's how we get feedback and we can

00:19:41,520 --> 00:19:46,960
fix and make things even better

00:19:44,640 --> 00:19:48,720
and one major benefit is to run against

00:19:46,960 --> 00:19:49,280
all the different contributor projects

00:19:48,720 --> 00:19:52,799
you use

00:19:49,280 --> 00:19:53,520
for example with the rector upgrade php

00:19:52,799 --> 00:19:56,240
00:19:53,520 --> 00:19:56,880
or sorry triple h supported php six

00:19:56,240 --> 00:19:58,640
seven

00:19:56,880 --> 00:20:00,799
and eight and i believe drupal 9

00:19:58,640 --> 00:20:03,520
supports eight and nine

00:20:00,799 --> 00:20:04,720
and there's various tricks to that

00:20:03,520 --> 00:20:07,440
support

00:20:04,720 --> 00:20:10,080
and we found a few bugs because somebody

00:20:07,440 --> 00:20:13,200
i was testing on something that had php7

00:20:10,080 --> 00:20:14,480
involved and or sorry php unit eight

00:20:13,200 --> 00:20:18,400
involved

00:20:14,480 --> 00:20:20,159
um but then we found a bug there or

00:20:18,400 --> 00:20:21,520
terence the contributor she ran it

00:20:20,159 --> 00:20:23,760
against web form

00:20:21,520 --> 00:20:24,559
and that shook loose a handful of bugs

00:20:23,760 --> 00:20:26,880
and

00:20:24,559 --> 00:20:29,280
actually it found a bug in the php dock

00:20:26,880 --> 00:20:31,760
parser in php stand so now

00:20:29,280 --> 00:20:32,559
i'm going to be going off into that

00:20:31,760 --> 00:20:35,600
realm

00:20:32,559 --> 00:20:36,320
to work on it the the testing matrix is

00:20:35,600 --> 00:20:39,520
very large

00:20:36,320 --> 00:20:41,039
you know we have php 7.4 php 8 drupal

00:20:39,520 --> 00:20:44,480
8.9

00:20:41,039 --> 00:20:46,400
drupal 9.1.2.3 then drupal 10

00:20:44,480 --> 00:20:48,400
and all the various contrib where things

00:20:46,400 --> 00:20:50,720
can go a little wonky

00:20:48,400 --> 00:20:51,919
so having mass testing from all of our

00:20:50,720 --> 00:20:53,360
users and

00:20:51,919 --> 00:20:55,120
you know you don't need to make the fix

00:20:53,360 --> 00:20:56,720
but if you can like hey i ran it and

00:20:55,120 --> 00:20:58,480
then this weird thing happened

00:20:56,720 --> 00:21:00,720
that's a huge benefit too because then

00:20:58,480 --> 00:21:02,799
we know what we can fix

00:21:00,720 --> 00:21:04,400
and that's contributing to manual

00:21:02,799 --> 00:21:05,360
testing is contribution i don't care

00:21:04,400 --> 00:21:06,400
what anybody says you don't need to

00:21:05,360 --> 00:21:08,559
manually test

00:21:06,400 --> 00:21:10,720
and fix the problem you found but you

00:21:08,559 --> 00:21:14,840
need to make sure you tell us

00:21:10,720 --> 00:21:17,840
and that is a major contribution on its

00:21:14,840 --> 00:21:17,840
own

00:21:19,600 --> 00:21:24,880
so i think that is it um we can do q a

00:21:26,080 --> 00:21:30,720
i did see a question before oh there is

00:21:28,640 --> 00:21:32,880
q a ready

00:21:30,720 --> 00:21:33,760
is it okay so here's i'll read out loud

00:21:32,880 --> 00:21:35,280
the question

00:21:33,760 --> 00:21:37,280
for everyone that are watching it later

00:21:35,280 --> 00:21:40,080
on as well is it okay to install

00:21:37,280 --> 00:21:41,679
upgrade status via the ui or there are

00:21:40,080 --> 00:21:43,120
additional requirements

00:21:41,679 --> 00:21:45,840
and this is a question from a site

00:21:43,120 --> 00:21:45,840
builder

00:21:47,039 --> 00:21:53,440
install via the ui so upgrade status

00:21:51,600 --> 00:21:55,919
and that's what i love about it and

00:21:53,440 --> 00:21:59,280
gabor thank you so much for making it

00:21:55,919 --> 00:22:00,400
because upgrade status is meant to be

00:21:59,280 --> 00:22:03,039
run through the ui

00:22:00,400 --> 00:22:04,240
it's like any other regular module you

00:22:03,039 --> 00:22:07,520
would use

00:22:04,240 --> 00:22:10,880
it should make things simple for you

00:22:07,520 --> 00:22:13,360
in the ui you'll get the full display of

00:22:10,880 --> 00:22:14,559
what's needed i think this is about

00:22:13,360 --> 00:22:18,159
installation

00:22:14,559 --> 00:22:21,200
from the ui can you provide

00:22:18,159 --> 00:22:22,559
a little clarity in the chat um

00:22:21,200 --> 00:22:24,559
because if you mean via like

00:22:22,559 --> 00:22:26,880
update.module where you feed it in

00:22:24,559 --> 00:22:27,840
archive like a dot zip and it installs

00:22:26,880 --> 00:22:31,120
it no

00:22:27,840 --> 00:22:32,880
it cannot because it must install php

00:22:31,120 --> 00:22:36,880
stand php stand drupal

00:22:32,880 --> 00:22:39,280
via composer so upgrade size cannot be

00:22:36,880 --> 00:22:42,960
installed by the ui it must be installed

00:22:39,280 --> 00:22:43,679
via composer if you want if you want you

00:22:42,960 --> 00:22:45,200
can open an

00:22:43,679 --> 00:22:48,000
issue because there are ways we could

00:22:45,200 --> 00:22:52,000
work around that it may not be pretty

00:22:48,000 --> 00:22:54,640
but we can because fun fact drupal check

00:22:52,000 --> 00:22:56,159
used to be distributed as a far which is

00:22:54,640 --> 00:22:58,799
like a php archive

00:22:56,159 --> 00:23:00,559
to avoid having to use composer because

00:22:58,799 --> 00:23:01,280
three years ago that's when we still had

00:23:00,559 --> 00:23:03,840
a lot of that

00:23:01,280 --> 00:23:06,000
um there was a lot of folks who were

00:23:03,840 --> 00:23:08,480
still getting used to the composer flow

00:23:06,000 --> 00:23:09,440
so i think it wouldn't hurt to open an

00:23:08,480 --> 00:23:12,159
issue

00:23:09,440 --> 00:23:13,520
so we can make that discussion and over

00:23:12,159 --> 00:23:15,360
i can take the one about

00:23:13,520 --> 00:23:17,039
drupal check and php stand complaining

00:23:15,360 --> 00:23:18,720
about prophecy and call the undefined

00:23:17,039 --> 00:23:22,240
methods

00:23:18,720 --> 00:23:23,280
so um that's where you could configure

00:23:22,240 --> 00:23:26,320
php stand

00:23:23,280 --> 00:23:29,840
to ignore all of your test files um

00:23:26,320 --> 00:23:30,400
because drupal has a lot of conditional

00:23:29,840 --> 00:23:33,039
code

00:23:30,400 --> 00:23:34,720
where there's code that won't run unless

00:23:33,039 --> 00:23:37,440
those dependencies exist

00:23:34,720 --> 00:23:39,919
but it still references that code and

00:23:37,440 --> 00:23:41,919
phpstand is a static code analyzer

00:23:39,919 --> 00:23:44,320
it doesn't understand your code state it

00:23:41,919 --> 00:23:45,440
says well you have a class that extends

00:23:44,320 --> 00:23:48,400
something

00:23:45,440 --> 00:23:49,679
but that thing that defines that class

00:23:48,400 --> 00:23:51,279
doesn't exist yet

00:23:49,679 --> 00:23:53,440
and this is most common when you have a

00:23:51,279 --> 00:23:55,520
drupal site without its developer

00:23:53,440 --> 00:23:58,640
dependencies installed

00:23:55,520 --> 00:23:58,960
there isn't a good way to work on it or

00:23:58,640 --> 00:24:02,080
to

00:23:58,960 --> 00:24:05,840
to add that to um sorry to fix that but

00:24:02,080 --> 00:24:05,840
open an issue on the

00:24:05,919 --> 00:24:09,600
the drupal check github or ping me in

00:24:09,039 --> 00:24:12,320
slack

00:24:09,600 --> 00:24:18,320
and now that i do have some funding for

00:24:12,320 --> 00:24:20,480
working on this let's find a solution

00:24:18,320 --> 00:24:22,000
um there's a question about what do we

00:24:20,480 --> 00:24:24,400
do about modules that haven't been

00:24:22,000 --> 00:24:25,440
updated for drupal 9 despite a patch for

00:24:24,400 --> 00:24:28,400
it existing

00:24:25,440 --> 00:24:29,440
so it was abandoned or low developer

00:24:28,400 --> 00:24:31,200
maintenance

00:24:29,440 --> 00:24:33,200
would he discuss it earlier before the

00:24:31,200 --> 00:24:35,039
presentation

00:24:33,200 --> 00:24:37,760
it could be a whole other presentation

00:24:35,039 --> 00:24:41,120
as well in general where you're gonna

00:24:37,760 --> 00:24:42,880
get into the tricky part is when it's

00:24:41,120 --> 00:24:47,039
the info yaml file that need

00:24:42,880 --> 00:24:49,120
updates maybe we'll find a a bigger

00:24:47,039 --> 00:24:50,799
solution a better solution for the

00:24:49,120 --> 00:24:53,919
problem because

00:24:50,799 --> 00:24:55,840
you the another common thing would be

00:24:53,919 --> 00:24:56,240
there is a patch ready maybe the update

00:24:55,840 --> 00:24:58,960
bot

00:24:56,240 --> 00:25:00,000
uh did it maybe the community already

00:24:58,960 --> 00:25:01,679
tested it and everything

00:25:00,000 --> 00:25:04,559
is ready but the maintainer didn't

00:25:01,679 --> 00:25:05,520
release it if it's not the infoyaml

00:25:04,559 --> 00:25:09,120
change

00:25:05,520 --> 00:25:12,400
by calling the patch in composer

00:25:09,120 --> 00:25:15,840
you will be able to use it as if

00:25:12,400 --> 00:25:15,840
the module released it officially

00:25:21,600 --> 00:25:25,600
chat so do you have any recommendations

00:25:23,679 --> 00:25:27,600
for how to check for deprecations in a

00:25:25,600 --> 00:25:29,760
custom d9 distribution

00:25:27,600 --> 00:25:31,279
using contributors that support d8 and

00:25:29,760 --> 00:25:34,799
d9 containing

00:25:31,279 --> 00:25:36,000
applications to maintain d8 support oh

00:25:34,799 --> 00:25:40,400
as somebody who has worked with

00:25:36,000 --> 00:25:40,400
distributions his entire drupal career

00:25:41,440 --> 00:25:48,480
so you need to support d8

00:25:44,880 --> 00:25:50,320
and d9 i would just

00:25:48,480 --> 00:25:52,400
i'm assuming that this isn't a public

00:25:50,320 --> 00:25:56,960
distro but maybe it's an internal one

00:25:52,400 --> 00:26:00,000
that is being used at an organization

00:25:56,960 --> 00:26:01,520
i would just make two major versions

00:26:00,000 --> 00:26:05,039
because it could be really hard to

00:26:01,520 --> 00:26:08,159
support d8 and d9 with one module

00:26:05,039 --> 00:26:10,080
not impossible but

00:26:08,159 --> 00:26:11,760
it could be a hard and i'm just thinking

00:26:10,080 --> 00:26:14,799
of like your maintenance

00:26:11,760 --> 00:26:18,320
requirements oh you don't

00:26:14,799 --> 00:26:18,320
but you use contribute modules that do

00:26:18,640 --> 00:26:26,080
oh um that's just

00:26:24,640 --> 00:26:27,520
i don't have a good answer for it that's

00:26:26,080 --> 00:26:29,120
like that's like a people problem like

00:26:27,520 --> 00:26:30,480
that's like that's more

00:26:29,120 --> 00:26:33,200
i don't have a good maintenance strategy

00:26:30,480 --> 00:26:37,600
for that besides just figuring out ways

00:26:33,200 --> 00:26:38,480
to there's keeping the deprecations to

00:26:37,600 --> 00:26:40,240
maintain

00:26:38,480 --> 00:26:41,919
support i would have a talk with the

00:26:40,240 --> 00:26:45,039
maintainers because these the

00:26:41,919 --> 00:26:47,760
modules should only support 8.9

00:26:45,039 --> 00:26:48,960
and not need to maintain 8.7 like 8.7

00:26:47,760 --> 00:26:52,400
would be like your one like

00:26:48,960 --> 00:26:55,600
backwards compatibility requirements so

00:26:52,400 --> 00:26:57,440
i would have a nice cooperative chat

00:26:55,600 --> 00:26:59,360
with the maintainers to see if they

00:26:57,440 --> 00:27:07,840
could finally drop those older

00:26:59,360 --> 00:27:07,840
unsupported versions of drupal 8.

00:27:09,520 --> 00:27:16,559
see uh jess posted

00:27:13,039 --> 00:27:20,000
a link rescuing module how we revived

00:27:16,559 --> 00:27:23,200
abandoned project yeah because

00:27:20,000 --> 00:27:23,919
as jesus also wrote there uh 8.7 is end

00:27:23,200 --> 00:27:27,440
of life

00:27:23,919 --> 00:27:28,799
and insecure over here's a good drupal

00:27:27,440 --> 00:27:29,600
record question if you want to take that

00:27:28,799 --> 00:27:33,440
one

00:27:29,600 --> 00:27:36,000
where is that in the q a

00:27:33,440 --> 00:27:36,480
can i run the suite of drupal vector

00:27:36,000 --> 00:27:38,640
rules

00:27:36,480 --> 00:27:39,520
on our custom modules locally outside of

00:27:38,640 --> 00:27:42,559
drupal.org

00:27:39,520 --> 00:27:45,679
absolutely not only that you can use

00:27:42,559 --> 00:27:49,200
upgrade status which works

00:27:45,679 --> 00:27:52,880
amazing together with upgrade rector so

00:27:49,200 --> 00:27:55,200
drupal vector utilize the structure

00:27:52,880 --> 00:27:57,039
of your site meaning it it looks at all

00:27:55,200 --> 00:27:59,520
the modules you have installed

00:27:57,039 --> 00:28:00,159
it doesn't care if these are contribute

00:27:59,520 --> 00:28:02,159
custom

00:28:00,159 --> 00:28:03,440
it look at the code that you have right

00:28:02,159 --> 00:28:05,679
now

00:28:03,440 --> 00:28:06,640
upgrade status will look for you for the

00:28:05,679 --> 00:28:08,640
country

00:28:06,640 --> 00:28:10,399
modules if something is already

00:28:08,640 --> 00:28:12,960
available and ready for you

00:28:10,399 --> 00:28:14,480
uh interpol.org in case it doesn't

00:28:12,960 --> 00:28:16,960
because that would be the easy one

00:28:14,480 --> 00:28:20,159
if it's not it will suggest you can run

00:28:16,960 --> 00:28:22,240
upgrade rector or drupal vector itself

00:28:20,159 --> 00:28:23,760
it will show you and display all the

00:28:22,240 --> 00:28:26,240
custom modules you have

00:28:23,760 --> 00:28:27,440
and all the contrib modules it will

00:28:26,240 --> 00:28:29,520
generate patches

00:28:27,440 --> 00:28:31,919
for both and you decide what to do with

00:28:29,520 --> 00:28:34,559
these patches and how to use them

00:28:31,919 --> 00:28:35,600
so yeah that's why when we create a

00:28:34,559 --> 00:28:38,240
recto rule

00:28:35,600 --> 00:28:38,960
i know that we have this website that

00:28:38,240 --> 00:28:40,799
keep

00:28:38,960 --> 00:28:42,960
showing us in a chart of how many

00:28:40,799 --> 00:28:46,320
deprecations we have how many of them

00:28:42,960 --> 00:28:49,120
are covered by a drupal rector

00:28:46,320 --> 00:28:50,960
what we don't know is how much of the

00:28:49,120 --> 00:28:55,440
custom code people have

00:28:50,960 --> 00:28:58,480
can be can be upgraded by drupal rector

00:28:55,440 --> 00:28:59,679
because drupal rector wouldn't care if

00:28:58,480 --> 00:29:01,840
it's a contributor custom

00:28:59,679 --> 00:29:04,720
it search the whole code and create

00:29:01,840 --> 00:29:06,399
patches for whatever it can

00:29:04,720 --> 00:29:08,399
and to add to that about running it

00:29:06,399 --> 00:29:09,679
outside drupal.org we focus more on like

00:29:08,399 --> 00:29:12,320
the update bot

00:29:09,679 --> 00:29:13,760
because a lot of concern comes from site

00:29:12,320 --> 00:29:15,600
maintainers who

00:29:13,760 --> 00:29:17,120
need modules to be updated but you can

00:29:15,600 --> 00:29:19,440
run it on your own code and

00:29:17,120 --> 00:29:20,720
the drupal or sorry the erector folks

00:29:19,440 --> 00:29:23,200
are actually working on

00:29:20,720 --> 00:29:26,159
a bot that would be something you could

00:29:23,200 --> 00:29:28,080
use with like your git lab or github

00:29:26,159 --> 00:29:29,679
that could provide automated rector

00:29:28,080 --> 00:29:31,200
fixes to you

00:29:29,679 --> 00:29:33,679
like when they come in so there's a lot

00:29:31,200 --> 00:29:36,399
of automation coming in as well

00:29:33,679 --> 00:29:41,840
for your custom code that you could take

00:29:36,399 --> 00:29:41,840
advantage of

00:29:43,760 --> 00:29:50,240
yeah so if you can help us by joining

00:29:47,679 --> 00:29:51,840
d10 readiness if you can help us by

00:29:50,240 --> 00:29:55,120
asking questions

00:29:51,840 --> 00:29:57,600
do testing and tell us how it goes

00:29:55,120 --> 00:29:59,120
if you can help us by creating rector

00:29:57,600 --> 00:30:02,320
rules or let us know on

00:29:59,120 --> 00:30:02,720
what's really needed and we'll find a

00:30:02,320 --> 00:30:05,919
way

00:30:02,720 --> 00:30:07,679
to make it happen and more

00:30:05,919 --> 00:30:10,559
advanced documentation will be coming on

00:30:07,679 --> 00:30:10,559
that as well

00:30:13,440 --> 00:30:17,039
i think we are a time

00:30:19,600 --> 00:30:23,360
is there a tag to prevent the automated

00:30:21,520 --> 00:30:26,640
rector if i already have an

00:30:23,360 --> 00:30:28,799
issue if

00:30:26,640 --> 00:30:30,799
yes if you go to the project bot's user

00:30:28,799 --> 00:30:34,159
page or even the issue

00:30:30,799 --> 00:30:34,559
it will there's there is documentation

00:30:34,159 --> 00:30:38,240
on

00:30:34,559 --> 00:30:38,960
the the issue it created um and on the

00:30:38,240 --> 00:30:41,120
you the

00:30:38,960 --> 00:30:42,240
update bot user on how to do that i

00:30:41,120 --> 00:30:44,960
believe you like

00:30:42,240 --> 00:30:46,880
closed won't fix it is like a nope i

00:30:44,960 --> 00:30:47,440
will never run again and as we i'm sure

00:30:46,880 --> 00:30:49,120
as we're

00:30:47,440 --> 00:30:50,960
gonna if we're adding additional

00:30:49,120 --> 00:30:53,600
functionality to the bot

00:30:50,960 --> 00:30:55,679
in the issue that will be your way to

00:30:53,600 --> 00:30:57,600
know how you can communicate back

00:30:55,679 --> 00:30:58,720
to the bot of i don't need your help

00:30:57,600 --> 00:31:01,279
anymore or

00:30:58,720 --> 00:31:02,880
please keep it coming so it doesn't bug

00:31:01,279 --> 00:31:04,960
you if you don't

00:31:02,880 --> 00:31:06,640
have to if we're sharing the

00:31:04,960 --> 00:31:10,720
presentation i believe we will

00:31:06,640 --> 00:31:14,480
upload the slides with all the

00:31:10,720 --> 00:31:17,760
required links in there into the

00:31:14,480 --> 00:31:21,440
drupal tv or where these uh

00:31:17,760 --> 00:31:21,440
uh the recorded session is going to be

00:31:22,080 --> 00:31:26,159
if i have current issue can i add a tag

00:31:24,399 --> 00:31:27,279
to help the bot that's an interesting

00:31:26,159 --> 00:31:30,480
idea we can

00:31:27,279 --> 00:31:32,559
again if you can talk to us in the slack

00:31:30,480 --> 00:31:36,159
channel or directly on the github

00:31:32,559 --> 00:31:37,679
repo and add these ideas um we we can

00:31:36,159 --> 00:31:39,039
find solutions for that i don't think

00:31:37,679 --> 00:31:41,440
we're doing right now

00:31:39,039 --> 00:31:42,960
of telling the bot here's an issue that

00:31:41,440 --> 00:31:45,039
already solving it but

00:31:42,960 --> 00:31:47,840
we can look into it and make

00:31:45,039 --> 00:31:47,840
improvements

00:31:50,640 --> 00:32:01,840
awesome thanks everybody for joining

00:31:53,360 --> 00:32:01,840
thank you so much

00:32:06,240 --> 00:32:08,320

YouTube URL: https://www.youtube.com/watch?v=LFODMwUS-iY


