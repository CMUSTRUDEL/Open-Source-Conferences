Title: Search 50,000 Records in Literally the Blink of an Eye   DrupalCon North America 2021
Publication date: 2021-05-27
Playlist: DrupalCon North America 2021
Description: 
	How we search 50,000+ classified ads in around 0.1 seconds using Drupal and open-source tools from Typesense, and Algolia.
Captions: 
	00:00:00,320 --> 00:00:07,120
you can go ahead and i guess

00:00:03,760 --> 00:00:10,000
okay let's uh let's kick off so

00:00:07,120 --> 00:00:11,440
as truman on the truman show might say

00:00:10,000 --> 00:00:13,440
good afternoon

00:00:11,440 --> 00:00:15,759
good morning good evening good night to

00:00:13,440 --> 00:00:17,440
everybody and welcome to our panel on

00:00:15,759 --> 00:00:20,400
delivering a blazing fast search

00:00:17,440 --> 00:00:23,359
over 50 000 records so my name is alan

00:00:20,400 --> 00:00:25,439
burke i was the tech lead on the project

00:00:23,359 --> 00:00:26,480
and with us today are christopher

00:00:25,439 --> 00:00:29,039
torgelson

00:00:26,480 --> 00:00:30,160
he uh sorry he's in in france i'm in the

00:00:29,039 --> 00:00:33,280
west coast of ireland

00:00:30,160 --> 00:00:34,960
with juan luis lozano from well one

00:00:33,280 --> 00:00:36,719
you're an international traveler

00:00:34,960 --> 00:00:38,480
from venezuela living in croatia at the

00:00:36,719 --> 00:00:41,600
moment and we have jason

00:00:38,480 --> 00:00:43,520
in los angeles so

00:00:41,600 --> 00:00:44,800
uh juan and christopher were both

00:00:43,520 --> 00:00:46,559
involved in the project christopher was

00:00:44,800 --> 00:00:48,960
involved in the search integration

00:00:46,559 --> 00:00:49,840
one was the lead front end developer in

00:00:48,960 --> 00:00:52,000
the project

00:00:49,840 --> 00:00:53,120
and jason is joining us here today from

00:00:52,000 --> 00:00:55,199
typesense

00:00:53,120 --> 00:00:56,719
uh with typesense provide the search

00:00:55,199 --> 00:00:57,280
infrastructure that we use to deliver

00:00:56,719 --> 00:00:59,680
this

00:00:57,280 --> 00:01:01,280
deliver this search so i'm going to give

00:00:59,680 --> 00:01:02,559
a little back story on the project but

00:01:01,280 --> 00:01:03,440
before i do that i'm going to do a

00:01:02,559 --> 00:01:04,960
little demo

00:01:03,440 --> 00:01:07,280
of the website and the reason for that

00:01:04,960 --> 00:01:10,320
is that the website is unfortunately

00:01:07,280 --> 00:01:12,720
geo-blocked in much of

00:01:10,320 --> 00:01:14,479
the world outside of ireland basically

00:01:12,720 --> 00:01:16,320
so if you try to go to i'm going to

00:01:14,479 --> 00:01:18,640
share my screen now let's see if this

00:01:16,320 --> 00:01:18,640
works

00:01:20,320 --> 00:01:24,799
so hopefully you guys can see the cars

00:01:23,280 --> 00:01:27,840
are inside juan can you give me a yes or

00:01:24,799 --> 00:01:27,840
no on that

00:01:28,159 --> 00:01:32,960
okay so this is the cars ireland website

00:01:31,040 --> 00:01:34,960
and uh just in terms of the

00:01:32,960 --> 00:01:36,720
experience we're trying to demo we've

00:01:34,960 --> 00:01:37,280
got a really fast search here so even

00:01:36,720 --> 00:01:40,400
with just

00:01:37,280 --> 00:01:42,640
one character search we get some very

00:01:40,400 --> 00:01:44,960
instant search results with live counts

00:01:42,640 --> 00:01:46,880
from the search index

00:01:44,960 --> 00:01:49,360
and as soon as we click on that then we

00:01:46,880 --> 00:01:51,840
get a up-to-date search result

00:01:49,360 --> 00:01:52,640
if we change any of our parameters the

00:01:51,840 --> 00:01:55,280
search result

00:01:52,640 --> 00:01:56,640
updates straight away and we click

00:01:55,280 --> 00:01:58,479
through the search interface

00:01:56,640 --> 00:02:00,560
and we can see we got a blazingly fast

00:01:58,479 --> 00:02:03,360
search we can do things like

00:02:00,560 --> 00:02:04,560
add another vehicle so we want to search

00:02:03,360 --> 00:02:07,280
for

00:02:04,560 --> 00:02:08,319
some volkswagen golfs and they get added

00:02:07,280 --> 00:02:11,280
to the

00:02:08,319 --> 00:02:12,560
search results set pretty much instantly

00:02:11,280 --> 00:02:15,440
we can change the

00:02:12,560 --> 00:02:16,080
ages so let's say you want to look for

00:02:15,440 --> 00:02:19,120
more

00:02:16,080 --> 00:02:20,959
recent cars i'm told these cars will all

00:02:19,120 --> 00:02:23,440
look very small to a north american

00:02:20,959 --> 00:02:25,440
audience but there you go

00:02:23,440 --> 00:02:27,520
we can change and we can sort by or

00:02:25,440 --> 00:02:29,040
sorry filter by field type and again we

00:02:27,520 --> 00:02:34,319
get instant searches

00:02:29,040 --> 00:02:36,480
we also do some changes on our ordering

00:02:34,319 --> 00:02:37,440
and then we can adjust fine-tune the

00:02:36,480 --> 00:02:39,519
search

00:02:37,440 --> 00:02:41,440
so that's just a very quick demo of the

00:02:39,519 --> 00:02:42,239
site and just wanted to go through that

00:02:41,440 --> 00:02:45,360
before we

00:02:42,239 --> 00:02:48,640
talk about the the project itself so

00:02:45,360 --> 00:02:50,080
we will try and stop screen sharing

00:02:48,640 --> 00:02:51,760
and it should be back to my pretty face

00:02:50,080 --> 00:02:55,040
again

00:02:51,760 --> 00:02:56,239
okay so cars ireland is uh

00:02:55,040 --> 00:02:58,080
okay just have a quick look at the chat

00:02:56,239 --> 00:02:59,760
to see if anybody's shouting at me

00:02:58,080 --> 00:03:01,519
uh cars ireland is one of ireland's

00:02:59,760 --> 00:03:03,760
largest and leading

00:03:01,519 --> 00:03:04,879
car classified search sites so it's a

00:03:03,760 --> 00:03:08,080
site primarily for

00:03:04,879 --> 00:03:09,920
buying cars what marks out cars ireland

00:03:08,080 --> 00:03:12,159
is that it's the one with the closest

00:03:09,920 --> 00:03:14,480
relationship to car dealers themselves

00:03:12,159 --> 00:03:15,599
so it's not a buyer you know or a

00:03:14,480 --> 00:03:18,239
consumer to consumer

00:03:15,599 --> 00:03:20,159
website it's very much a car dealer to

00:03:18,239 --> 00:03:22,640
consumer website

00:03:20,159 --> 00:03:23,760
um so the dealers can keep their

00:03:22,640 --> 00:03:25,519
inventory on the lot

00:03:23,760 --> 00:03:27,760
tightly integrated with the cars ireland

00:03:25,519 --> 00:03:29,440
api through an application they have on

00:03:27,760 --> 00:03:33,040
site

00:03:29,440 --> 00:03:34,640
and then that api drives the car's

00:03:33,040 --> 00:03:36,239
island website itself but it also drives

00:03:34,640 --> 00:03:37,519
a number of other things like the native

00:03:36,239 --> 00:03:40,560
applications

00:03:37,519 --> 00:03:42,159
um it drives some of the car dealers

00:03:40,560 --> 00:03:43,599
websites themselves and some of the car

00:03:42,159 --> 00:03:45,120
dealer group websites

00:03:43,599 --> 00:03:46,400
so they're all driven off the same api

00:03:45,120 --> 00:03:48,239
and we're one of the one of the

00:03:46,400 --> 00:03:50,000
consumers of that api

00:03:48,239 --> 00:03:51,200
so carson themselves are one of our

00:03:50,000 --> 00:03:52,879
they're part of the independent

00:03:51,200 --> 00:03:54,720
independent media group in ireland one

00:03:52,879 --> 00:03:56,159
of ireland's largest media house

00:03:54,720 --> 00:03:57,920
and that that in itself is part of a

00:03:56,159 --> 00:03:59,519
larger belgium conglomerate so

00:03:57,920 --> 00:04:01,200
we're dealing with a larger corporate

00:03:59,519 --> 00:04:02,560
enterprise behind this but luckily the

00:04:01,200 --> 00:04:05,519
team we dealt with were fairly small and

00:04:02,560 --> 00:04:07,680
nimble can make some quick decisions

00:04:05,519 --> 00:04:09,040
so uh the website itself has had a sort

00:04:07,680 --> 00:04:12,319
of a little interesting

00:04:09,040 --> 00:04:15,280
history in that it was started about

00:04:12,319 --> 00:04:17,120
um maybe three years ago myself and mark

00:04:15,280 --> 00:04:18,560
another developer within another tech

00:04:17,120 --> 00:04:20,639
uh had worked on the site and we got it

00:04:18,560 --> 00:04:22,400
to maybe 80 90 percent

00:04:20,639 --> 00:04:23,759
um towards complete we thought we'd done

00:04:22,400 --> 00:04:26,560
a pretty good job

00:04:23,759 --> 00:04:27,759
but as things happen um life got in the

00:04:26,560 --> 00:04:28,479
way on the car's ireland side in

00:04:27,759 --> 00:04:30,560
particular

00:04:28,479 --> 00:04:31,600
and the project was shelved due to be

00:04:30,560 --> 00:04:34,400
picked up

00:04:31,600 --> 00:04:35,840
at some point in the future and this was

00:04:34,400 --> 00:04:37,600
one of the good side effects of the

00:04:35,840 --> 00:04:38,880
kovac 19 crisis

00:04:37,600 --> 00:04:40,479
so for a lot of our clients and

00:04:38,880 --> 00:04:42,400
karzainan can include themselves in this

00:04:40,479 --> 00:04:44,800
they were freed from the shackles of

00:04:42,400 --> 00:04:46,000
playing golf and racing cars and riding

00:04:44,800 --> 00:04:47,520
bikes and having meetings

00:04:46,000 --> 00:04:49,600
that they decided to pick up their

00:04:47,520 --> 00:04:52,320
website project again

00:04:49,600 --> 00:04:53,680
so that was basically a decision taken

00:04:52,320 --> 00:04:55,040
so the middle of last year that this

00:04:53,680 --> 00:04:58,320
project need to be resurrected

00:04:55,040 --> 00:04:59,680
and go live with it so

00:04:58,320 --> 00:05:00,960
in the meantime they had changed the

00:04:59,680 --> 00:05:01,840
design the new design had to be

00:05:00,960 --> 00:05:03,199
implemented

00:05:01,840 --> 00:05:04,560
but from our perspective we felt that

00:05:03,199 --> 00:05:06,080
the back end was in good shape we were

00:05:04,560 --> 00:05:08,960
consuming their api

00:05:06,080 --> 00:05:11,280
and we had been using drupal's migrate

00:05:08,960 --> 00:05:11,840
api to consume their rest api so we pull

00:05:11,280 --> 00:05:14,400
in

00:05:11,840 --> 00:05:16,160
about a hundred thousand nodes all told

00:05:14,400 --> 00:05:17,759
into the drupal backend

00:05:16,160 --> 00:05:19,520
and we have built a search interface

00:05:17,759 --> 00:05:22,400
that uses drupal search api

00:05:19,520 --> 00:05:23,600
and pushes them into the solar and push

00:05:22,400 --> 00:05:25,440
them into solar

00:05:23,600 --> 00:05:27,680
and from that then we use the search api

00:05:25,440 --> 00:05:29,680
and the fastest api and some extras

00:05:27,680 --> 00:05:30,800
such as the facet pretty pats module to

00:05:29,680 --> 00:05:32,560
deliver

00:05:30,800 --> 00:05:34,880
a very good search experience we felt so

00:05:32,560 --> 00:05:36,400
we had some very good seo we felt

00:05:34,880 --> 00:05:38,960
and we had a reasonably fast search

00:05:36,400 --> 00:05:41,680
experience and that was all fine

00:05:38,960 --> 00:05:42,000
but as the project evolved so too did

00:05:41,680 --> 00:05:44,080
the

00:05:42,000 --> 00:05:45,039
did the seo requirements and one of the

00:05:44,080 --> 00:05:46,639
first things that

00:05:45,039 --> 00:05:48,160
cause ireland decided they would like is

00:05:46,639 --> 00:05:51,600
the ability to have

00:05:48,160 --> 00:05:52,639
the on page search so the the the demo

00:05:51,600 --> 00:05:54,240
that you've just seen

00:05:52,639 --> 00:05:56,080
they wanted that to be split out from

00:05:54,240 --> 00:05:57,520
the search engine results pages

00:05:56,080 --> 00:05:59,520
so that would be something whereby if i

00:05:57,520 --> 00:06:01,520
search for volkswagen golf

00:05:59,520 --> 00:06:03,039
um on google or another search engine

00:06:01,520 --> 00:06:04,720
and i landed on cars ireland

00:06:03,039 --> 00:06:06,319
they wanted those search engine pages to

00:06:04,720 --> 00:06:07,840
work slightly differently

00:06:06,319 --> 00:06:10,800
and perform in a slightly different

00:06:07,840 --> 00:06:12,319
fashion so we had to split up the search

00:06:10,800 --> 00:06:14,960
so this was one of the first things that

00:06:12,319 --> 00:06:18,240
had come along as a new requirement

00:06:14,960 --> 00:06:18,639
um so i think at this stage christopher

00:06:18,240 --> 00:06:21,440
was

00:06:18,639 --> 00:06:22,880
involved in the project and um the

00:06:21,440 --> 00:06:25,840
requirement for two different

00:06:22,880 --> 00:06:27,039
search interfaces had had manifested

00:06:25,840 --> 00:06:27,520
itself and we were looking at what that

00:06:27,039 --> 00:06:29,840
would

00:06:27,520 --> 00:06:31,280
would mean so um i'll bring you into

00:06:29,840 --> 00:06:33,360
this stage christopher

00:06:31,280 --> 00:06:34,800
uh do you remember when this arrived on

00:06:33,360 --> 00:06:36,080
your desk and what your thoughts were on

00:06:34,800 --> 00:06:37,680
this on initially

00:06:36,080 --> 00:06:39,840
the requirement for two different search

00:06:37,680 --> 00:06:42,880
interfaces

00:06:39,840 --> 00:06:46,319
well the requirement for

00:06:42,880 --> 00:06:47,520
the two search interfaces superficially

00:06:46,319 --> 00:06:50,960
wasn't

00:06:47,520 --> 00:06:54,639
uh too too concerning because

00:06:50,960 --> 00:06:54,639
really they

00:06:54,960 --> 00:06:59,840
would be you know essentially we'd be

00:06:58,160 --> 00:07:02,000
able to deliver them with separate

00:06:59,840 --> 00:07:03,599
views and integrations with the searches

00:07:02,000 --> 00:07:07,039
and

00:07:03,599 --> 00:07:11,120
um it was only later that

00:07:07,039 --> 00:07:13,520
we realized how complex the

00:07:11,120 --> 00:07:14,960
these seo pages would be and that they

00:07:13,520 --> 00:07:16,000
would have to be in effect almost a

00:07:14,960 --> 00:07:19,759
completely different

00:07:16,000 --> 00:07:23,840
uh application the reason for this

00:07:19,759 --> 00:07:27,280
just by the way is that um

00:07:23,840 --> 00:07:28,800
they relied on arguments um contextual

00:07:27,280 --> 00:07:32,160
filters the views would

00:07:28,800 --> 00:07:35,039
that um were

00:07:32,160 --> 00:07:36,960
not fixed in their positions so and

00:07:35,039 --> 00:07:39,680
there were hundreds of permutations

00:07:36,960 --> 00:07:41,759
so that was a sort of a problem but

00:07:39,680 --> 00:07:44,639
having

00:07:41,759 --> 00:07:46,479
uh the requirement sort of bifurcate

00:07:44,639 --> 00:07:49,599
into two different searches

00:07:46,479 --> 00:07:51,680
also um

00:07:49,599 --> 00:07:53,520
let us start to think about the the

00:07:51,680 --> 00:07:58,400
on-page search

00:07:53,520 --> 00:08:01,120
and um

00:07:58,400 --> 00:08:02,560
it also freed us to sort of start to

00:08:01,120 --> 00:08:05,039
look at it critically and

00:08:02,560 --> 00:08:05,840
it started to make us nervous uh this

00:08:05,039 --> 00:08:09,759
the speed

00:08:05,840 --> 00:08:12,960
of the search api search the basic

00:08:09,759 --> 00:08:16,560
on-page search when we compared it with

00:08:12,960 --> 00:08:18,000
the uh the client's competitors they

00:08:16,560 --> 00:08:20,080
they referred us to their to their

00:08:18,000 --> 00:08:22,800
competitors quite often

00:08:20,080 --> 00:08:24,960
uh in cases where the designs weren't

00:08:22,800 --> 00:08:28,800
fully realized

00:08:24,960 --> 00:08:32,080
and we started to think that our

00:08:28,800 --> 00:08:35,599
search was sort of worryingly

00:08:32,080 --> 00:08:38,159
uninstant yeah so

00:08:35,599 --> 00:08:39,279
our search uh to to bring everyone in

00:08:38,159 --> 00:08:41,200
our search was

00:08:39,279 --> 00:08:43,360
very classic search you would have a

00:08:41,200 --> 00:08:45,200
search form with the number of filters

00:08:43,360 --> 00:08:46,640
and you would pick your chosen set of

00:08:45,200 --> 00:08:47,600
filters and go down to the very bottom

00:08:46,640 --> 00:08:50,080
and click

00:08:47,600 --> 00:08:51,519
search and you get a search result and

00:08:50,080 --> 00:08:52,880
everyone will be happy

00:08:51,519 --> 00:08:54,320
and that was the you know that was what

00:08:52,880 --> 00:08:54,800
we were looking for three years ago it

00:08:54,320 --> 00:08:56,000
was

00:08:54,800 --> 00:08:58,320
still part of the designs that were

00:08:56,000 --> 00:09:00,399
delivered uh very recently that we were

00:08:58,320 --> 00:09:01,600
interpreting but as christopher said we

00:09:00,399 --> 00:09:02,560
were comparing this to a number of other

00:09:01,600 --> 00:09:04,080
competitors and

00:09:02,560 --> 00:09:05,760
it didn't seem quite as slick and we

00:09:04,080 --> 00:09:06,480
felt we could do some we could do better

00:09:05,760 --> 00:09:08,399
so

00:09:06,480 --> 00:09:11,920
i suppose chris what point did uh did

00:09:08,399 --> 00:09:16,000
type sense come into the equation then

00:09:11,920 --> 00:09:18,160
then um uh

00:09:16,000 --> 00:09:19,120
uh i forget who it was i think it's mark

00:09:18,160 --> 00:09:22,800
and mike

00:09:19,120 --> 00:09:26,160
uh of vanartek had discovered

00:09:22,800 --> 00:09:30,160
the this sort of

00:09:26,160 --> 00:09:32,800
fast search product fast search tool

00:09:30,160 --> 00:09:33,360
independently of this project and when

00:09:32,800 --> 00:09:35,920
we were

00:09:33,360 --> 00:09:36,720
discussing sort of what we needed for

00:09:35,920 --> 00:09:40,399
this project

00:09:36,720 --> 00:09:43,600
they uh introduced it to us

00:09:40,399 --> 00:09:47,200
and we started

00:09:43,600 --> 00:09:49,440
then being very excited basically

00:09:47,200 --> 00:09:51,279
and started like wanting to try it out

00:09:49,440 --> 00:09:55,440
and

00:09:51,279 --> 00:09:58,240
i think we took the application

00:09:55,440 --> 00:09:59,760
and got something working not with the

00:09:58,240 --> 00:10:01,040
client's data but got something working

00:09:59,760 --> 00:10:04,160
rather quickly

00:10:01,040 --> 00:10:07,279
just to see if the

00:10:04,160 --> 00:10:11,360
scale that we needed to work on

00:10:07,279 --> 00:10:14,000
would you know was was practical

00:10:11,360 --> 00:10:14,800
this the scale is sort of on the rough

00:10:14,000 --> 00:10:18,880
order of 100

00:10:14,800 --> 00:10:22,320
000 records as ellen said

00:10:18,880 --> 00:10:24,480
and we just wanted to see can we search

00:10:22,320 --> 00:10:25,360
you know numerous fields across a data

00:10:24,480 --> 00:10:27,360
set like that

00:10:25,360 --> 00:10:28,480
as fast as what the demos seem to show

00:10:27,360 --> 00:10:31,040
and yeah and

00:10:28,480 --> 00:10:31,040
we could

00:10:31,600 --> 00:10:35,040
and did you did we look at any other

00:10:33,360 --> 00:10:37,600
alternatives at the time like i know

00:10:35,040 --> 00:10:39,839
that there are competitors in this space

00:10:37,600 --> 00:10:40,959
uh like algolia and elasticsearch and

00:10:39,839 --> 00:10:42,800
things like that

00:10:40,959 --> 00:10:44,079
so how far did we get down that road or

00:10:42,800 --> 00:10:45,760
were we sold on titans

00:10:44,079 --> 00:10:47,839
i wouldn't get very far down that road

00:10:45,760 --> 00:10:51,519
but um

00:10:47,839 --> 00:10:53,519
we uh and i again i forget who

00:10:51,519 --> 00:10:55,600
um but we started to look into the

00:10:53,519 --> 00:10:57,680
pricing and

00:10:55,600 --> 00:10:59,440
uh did find i think jason you'll have

00:10:57,680 --> 00:11:03,680
more to say about this later but

00:10:59,440 --> 00:11:06,240
found that um

00:11:03,680 --> 00:11:08,800
at least algolia algolia's instant

00:11:06,240 --> 00:11:10,399
search didn't fit the budget

00:11:08,800 --> 00:11:12,839
i don't know any more details than that

00:11:10,399 --> 00:11:14,240
except that it's got i think per request

00:11:12,839 --> 00:11:17,760
pricing which

00:11:14,240 --> 00:11:17,760
when you are um

00:11:17,839 --> 00:11:21,680
making a request almost per character or

00:11:20,399 --> 00:11:22,959
actually per character when you're

00:11:21,680 --> 00:11:26,640
typing a search

00:11:22,959 --> 00:11:26,640
uh starts to get expensive quickly

00:11:26,959 --> 00:11:32,399
and what was the uh the client's initial

00:11:29,360 --> 00:11:33,839
feedback when we gave them the demo then

00:11:32,399 --> 00:11:35,839
as i understood that we just went ahead

00:11:33,839 --> 00:11:38,320
and did a demo without getting approval

00:11:35,839 --> 00:11:42,079
to see how that would work was that was

00:11:38,320 --> 00:11:44,800
that the time they told us it was savage

00:11:42,079 --> 00:11:46,320
savage yes um i let non-irish people

00:11:44,800 --> 00:11:49,279
look that one up

00:11:46,320 --> 00:11:49,279
it means good it means good

00:11:50,480 --> 00:11:53,680
so yeah the the client we're impressed

00:11:52,480 --> 00:11:54,880
savage is about as high as the

00:11:53,680 --> 00:11:55,600
compliment as you can get for your work

00:11:54,880 --> 00:11:58,800
in ireland

00:11:55,600 --> 00:12:00,639
um as far as i'm concerned and then

00:11:58,800 --> 00:12:02,000
you know from that so we were tasked

00:12:00,639 --> 00:12:03,839
with you know taking the full

00:12:02,000 --> 00:12:05,680
search experience and implementing types

00:12:03,839 --> 00:12:06,800
in so i guess what were the initial pain

00:12:05,680 --> 00:12:10,240
points that we hit

00:12:06,800 --> 00:12:13,839
when we started to work on that

00:12:10,240 --> 00:12:15,519
well i mean i don't know exactly about

00:12:13,839 --> 00:12:17,440
pain points but it was pretty clear that

00:12:15,519 --> 00:12:20,320
we'd have a lot of

00:12:17,440 --> 00:12:22,240
a lot of integration tasks to do and

00:12:20,320 --> 00:12:26,240
while i'm talking about this if anybody

00:12:22,240 --> 00:12:27,839
is interested in the specific resources

00:12:26,240 --> 00:12:30,000
uh the specific tools i mentioned

00:12:27,839 --> 00:12:31,600
there's a pinned tweet

00:12:30,000 --> 00:12:33,920
in the tweet thread at the top of the

00:12:31,600 --> 00:12:39,120
chat here that you can refer to

00:12:33,920 --> 00:12:42,240
but we we knew that we would have to um

00:12:39,120 --> 00:12:42,240
first we'd need to

00:12:42,800 --> 00:12:46,079
we need to have a server like we need to

00:12:44,639 --> 00:12:47,680
be able to run the type sense server in

00:12:46,079 --> 00:12:50,079
the development environment

00:12:47,680 --> 00:12:51,839
we knew that we would need to once that

00:12:50,079 --> 00:12:53,839
was done we need we knew that we would

00:12:51,839 --> 00:12:54,880
need to be able to communicate with it

00:12:53,839 --> 00:12:58,079
for indexing

00:12:54,880 --> 00:13:01,760
and um

00:12:58,079 --> 00:13:04,320
well indexing and searching from drupal

00:13:01,760 --> 00:13:06,800
and we knew we we didn't know this right

00:13:04,320 --> 00:13:10,000
away but we discovered later

00:13:06,800 --> 00:13:12,720
that we really missed the

00:13:10,000 --> 00:13:13,600
the kind of ui that solar provides for

00:13:12,720 --> 00:13:16,800
example so

00:13:13,600 --> 00:13:20,480
we we needed also a way to

00:13:16,800 --> 00:13:24,399
be able to query the index um

00:13:20,480 --> 00:13:27,360
uh um without actually

00:13:24,399 --> 00:13:28,880
running a search like like from uh in

00:13:27,360 --> 00:13:32,320
the end rush is what we used

00:13:28,880 --> 00:13:34,720
and we knew finally that

00:13:32,320 --> 00:13:37,440
we would have to build or use some kind

00:13:34,720 --> 00:13:39,440
of existing ui tools

00:13:37,440 --> 00:13:41,760
to provide the actual search experience

00:13:39,440 --> 00:13:46,639
in the front end because we

00:13:41,760 --> 00:13:48,880
um thanks to ellen's architecture we

00:13:46,639 --> 00:13:51,040
sort of had this idea of drupal as lava

00:13:48,880 --> 00:13:53,440
where we wanted to

00:13:51,040 --> 00:13:54,399
uh take the load off of drupal as much

00:13:53,440 --> 00:13:57,839
as possible

00:13:54,399 --> 00:13:59,279
so that um huge amounts of the

00:13:57,839 --> 00:14:01,519
sort of search in the application could

00:13:59,279 --> 00:14:04,639
be cached

00:14:01,519 --> 00:14:06,360
so the

00:14:04,639 --> 00:14:07,680
plan coalesced around sort of a

00:14:06,360 --> 00:14:10,959
semi-decoupled

00:14:07,680 --> 00:14:13,680
search application which

00:14:10,959 --> 00:14:14,880
used data from drupal but not directly

00:14:13,680 --> 00:14:18,240
from drupal

00:14:14,880 --> 00:14:21,440
so drupal on

00:14:18,240 --> 00:14:25,120
um creation update creation

00:14:21,440 --> 00:14:27,440
update and deletion of nodes would

00:14:25,120 --> 00:14:28,880
plug stuff into or remove stuff out of

00:14:27,440 --> 00:14:32,720
the index

00:14:28,880 --> 00:14:35,040
and then when we queried the index

00:14:32,720 --> 00:14:36,399
we'd be doing that directly to type

00:14:35,040 --> 00:14:38,000
sense between the from front end and

00:14:36,399 --> 00:14:40,959
type sense

00:14:38,000 --> 00:14:43,120
uh and i've completely lost the plot

00:14:40,959 --> 00:14:44,800
with your question ella

00:14:43,120 --> 00:14:45,920
no no no that that probably you talked

00:14:44,800 --> 00:14:47,040
about the pain points and how we

00:14:45,920 --> 00:14:47,680
overcome the pain points yeah that's

00:14:47,040 --> 00:14:50,800
fine

00:14:47,680 --> 00:14:52,320
so one last thing to say about those

00:14:50,800 --> 00:14:54,000
then which is that

00:14:52,320 --> 00:14:56,079
at every point when we looked for

00:14:54,000 --> 00:14:58,880
something to solve one of these problems

00:14:56,079 --> 00:14:59,279
the type sense guys had already written

00:14:58,880 --> 00:15:04,079
it

00:14:59,279 --> 00:15:04,079
so uh it was um

00:15:04,959 --> 00:15:09,680
uh i haven't i mean

00:15:08,240 --> 00:15:11,279
yeah we were just surprised we'd find

00:15:09,680 --> 00:15:11,760
something at every at every stage so we

00:15:11,279 --> 00:15:14,560
had like

00:15:11,760 --> 00:15:15,760
docker uh docker images for the server

00:15:14,560 --> 00:15:18,639
itself we have a

00:15:15,760 --> 00:15:20,320
composer package uh that we were able to

00:15:18,639 --> 00:15:23,279
use for the drupal interaction and then

00:15:20,320 --> 00:15:26,399
later for the dress tool that we wrote

00:15:23,279 --> 00:15:28,240
there were and then the

00:15:26,399 --> 00:15:31,199
ui parts that we used are actually

00:15:28,240 --> 00:15:34,240
algolia's react components

00:15:31,199 --> 00:15:36,800
um and as i mentioned in the

00:15:34,240 --> 00:15:38,560
the twitter thread there type sense and

00:15:36,800 --> 00:15:40,160
algolia don't speak exactly the same

00:15:38,560 --> 00:15:41,440
language but there's also a translation

00:15:40,160 --> 00:15:45,279
layer

00:15:41,440 --> 00:15:49,920
that uh the type sense sort of

00:15:45,279 --> 00:15:49,920
product line includes so

00:15:50,320 --> 00:15:54,720
um we had a lot we did have pain points

00:15:53,199 --> 00:15:55,440
but none of them were the integration

00:15:54,720 --> 00:15:58,639
points as you

00:15:55,440 --> 00:15:58,639
as you would expect they would be

00:15:58,720 --> 00:16:02,399
so just uh one of the questions before i

00:16:01,279 --> 00:16:04,800
bring in one on this

00:16:02,399 --> 00:16:06,399
um so we took the decision to go with

00:16:04,800 --> 00:16:08,399
tyson's cloud and we'll talk about type

00:16:06,399 --> 00:16:10,560
sense cloud and titans itself

00:16:08,399 --> 00:16:12,320
shortly but uh was there any particular

00:16:10,560 --> 00:16:15,120
reasons we went with that

00:16:12,320 --> 00:16:17,519
um could we have just run this ourselves

00:16:15,120 --> 00:16:21,920
on our own servers or

00:16:17,519 --> 00:16:25,120
i think i think we could have um but uh

00:16:21,920 --> 00:16:25,120
i don't think we wanted to

00:16:25,199 --> 00:16:28,880
that's okay like given given the

00:16:26,959 --> 00:16:32,079
alternative of uh

00:16:28,880 --> 00:16:33,199
like having uh like a sas solution to

00:16:32,079 --> 00:16:36,480
that like a software

00:16:33,199 --> 00:16:39,199
service solution that where it's

00:16:36,480 --> 00:16:40,480
uh like a dedicated sort of

00:16:39,199 --> 00:16:44,880
infrastructure and uh

00:16:40,480 --> 00:16:44,880
sort of management i'm all for that

00:16:46,079 --> 00:16:49,600
okay good stuff well i'm gonna bring you

00:16:47,440 --> 00:16:51,360
in at this stage here um

00:16:49,600 --> 00:16:52,639
so basically as christopher said we

00:16:51,360 --> 00:16:56,320
ended up having to build

00:16:52,639 --> 00:16:58,079
a uh a mini decoupled application

00:16:56,320 --> 00:17:00,399
essentially inside of drupal

00:16:58,079 --> 00:17:02,880
and so you're responsible for the front

00:17:00,399 --> 00:17:05,039
end i guess the first question is

00:17:02,880 --> 00:17:07,120
given that there was so much javascript

00:17:05,039 --> 00:17:08,559
there was there any performance issues

00:17:07,120 --> 00:17:10,079
that you hit or

00:17:08,559 --> 00:17:11,520
yeah because we've the search itself is

00:17:10,079 --> 00:17:12,079
pretty fast but like at the front end

00:17:11,520 --> 00:17:13,280
layer

00:17:12,079 --> 00:17:15,679
did you hear any other performance

00:17:13,280 --> 00:17:20,000
issues uh

00:17:15,679 --> 00:17:22,319
performance-wise no i mean we we um

00:17:20,000 --> 00:17:23,360
well at this point it's 2021 we we

00:17:22,319 --> 00:17:26,400
cannot say that we

00:17:23,360 --> 00:17:27,839
compromised using internet explorer 11

00:17:26,400 --> 00:17:29,679
even though there's a lot of companies

00:17:27,839 --> 00:17:33,760
that are still using it

00:17:29,679 --> 00:17:35,600
but um i wouldn't say i wouldn't say uh

00:17:33,760 --> 00:17:37,120
that we actually compromise anything in

00:17:35,600 --> 00:17:39,840
regards to performance

00:17:37,120 --> 00:17:41,520
rather than being extra careful in the

00:17:39,840 --> 00:17:44,880
javascript that is written

00:17:41,520 --> 00:17:48,720
so try not to break anything and even

00:17:44,880 --> 00:17:52,799
the smallest i wouldn't say

00:17:48,720 --> 00:17:56,000
change but feature or or or

00:17:52,799 --> 00:17:57,520
or enhancement we had to recheck that

00:17:56,000 --> 00:17:58,400
the search was working according to the

00:17:57,520 --> 00:18:00,240
parameters

00:17:58,400 --> 00:18:01,760
required because if the javascript is

00:18:00,240 --> 00:18:05,120
breaking then search is

00:18:01,760 --> 00:18:07,200
pretty much not working okay

00:18:05,120 --> 00:18:09,200
so and that's a good point actually um

00:18:07,200 --> 00:18:10,559
we we have a relatively brittle

00:18:09,200 --> 00:18:12,480
in that the javascript is broken the

00:18:10,559 --> 00:18:14,799
whole site is broken um

00:18:12,480 --> 00:18:16,160
but in in terms of so that's one aspect

00:18:14,799 --> 00:18:17,840
of this in terms of the theming we have

00:18:16,160 --> 00:18:20,480
to be particularly careful on

00:18:17,840 --> 00:18:21,120
how how else would this was this project

00:18:20,480 --> 00:18:23,120
different

00:18:21,120 --> 00:18:24,799
in particular the search interface how

00:18:23,120 --> 00:18:26,720
different was it from standard drupal

00:18:24,799 --> 00:18:28,640
theming

00:18:26,720 --> 00:18:30,400
however you pretty much you have two

00:18:28,640 --> 00:18:31,919
separate components you have the the

00:18:30,400 --> 00:18:33,120
theme part and you have the react

00:18:31,919 --> 00:18:35,280
application part

00:18:33,120 --> 00:18:36,400
so pretty much you have markup in two

00:18:35,280 --> 00:18:39,200
places uh

00:18:36,400 --> 00:18:40,080
what i did was pretty much preserve the

00:18:39,200 --> 00:18:43,360
same markup

00:18:40,080 --> 00:18:46,160
in both case scenarios so pretty much

00:18:43,360 --> 00:18:48,000
uh i mean uh types and search as

00:18:46,160 --> 00:18:50,080
christopher said it came like later

00:18:48,000 --> 00:18:51,200
in the face of the development when we

00:18:50,080 --> 00:18:53,520
started to look

00:18:51,200 --> 00:18:54,640
more alternative to make this search

00:18:53,520 --> 00:18:58,400
faster

00:18:54,640 --> 00:18:59,120
uh so i had to say i mean i already had

00:18:58,400 --> 00:19:01,200
the theme

00:18:59,120 --> 00:19:03,039
the search themed and working in style

00:19:01,200 --> 00:19:05,520
so when this all arrived

00:19:03,039 --> 00:19:06,080
we had to do the styling once again but

00:19:05,520 --> 00:19:09,840
just

00:19:06,080 --> 00:19:12,480
matching selectors and and

00:19:09,840 --> 00:19:13,919
it was not as a big deal as just

00:19:12,480 --> 00:19:15,520
remembering okay if you need to change

00:19:13,919 --> 00:19:16,880
something if you need to fix something

00:19:15,520 --> 00:19:18,960
if you need to update something you need

00:19:16,880 --> 00:19:24,240
to go directly to the react app and not

00:19:18,960 --> 00:19:27,039
to the theme um level

00:19:24,240 --> 00:19:28,480
okay good stuff and then um in terms of

00:19:27,039 --> 00:19:31,440
implementing the new

00:19:28,480 --> 00:19:32,720
uh tool in that in time sense and an

00:19:31,440 --> 00:19:34,720
instant search interface

00:19:32,720 --> 00:19:36,240
did you have to make much ui or user

00:19:34,720 --> 00:19:38,080
experience changes

00:19:36,240 --> 00:19:39,919
did everything just have to be swapped

00:19:38,080 --> 00:19:41,679
out

00:19:39,919 --> 00:19:43,440
is that something that might not be

00:19:41,679 --> 00:19:44,480
obvious that you know it's not just a

00:19:43,440 --> 00:19:46,080
case of

00:19:44,480 --> 00:19:47,600
swapping one tool for another that you

00:19:46,080 --> 00:19:51,200
also have to change the

00:19:47,600 --> 00:19:53,919
user interface as well yeah i mean uh

00:19:51,200 --> 00:19:54,640
we got delivery designs that were using

00:19:53,919 --> 00:19:56,799
a

00:19:54,640 --> 00:19:59,520
typical search interface with a filter

00:19:56,799 --> 00:20:02,480
button and

00:19:59,520 --> 00:20:03,200
i mean a pretty much default advanced

00:20:02,480 --> 00:20:06,159
search

00:20:03,200 --> 00:20:07,039
with uh drop down widgets and how to

00:20:06,159 --> 00:20:10,480
select stuff

00:20:07,039 --> 00:20:13,600
um sorry not autocomplete um

00:20:10,480 --> 00:20:17,200
fields and etc etc but

00:20:13,600 --> 00:20:20,000
uh all of that was kind of um

00:20:17,200 --> 00:20:21,120
old for this search because the search

00:20:20,000 --> 00:20:22,960
was

00:20:21,120 --> 00:20:24,799
instant you didn't i mean you don't need

00:20:22,960 --> 00:20:26,480
to click a submit button you just need

00:20:24,799 --> 00:20:27,360
to do a change on the phone on the forum

00:20:26,480 --> 00:20:30,720
and the search will

00:20:27,360 --> 00:20:33,840
just re-execute or do a query

00:20:30,720 --> 00:20:36,000
once again so uh we have to get

00:20:33,840 --> 00:20:37,840
get rid of all of the submit buttons all

00:20:36,000 --> 00:20:39,850
of the search buttons we had to

00:20:37,840 --> 00:20:41,600
get rid of all um

00:20:39,850 --> 00:20:44,159
[Music]

00:20:41,600 --> 00:20:45,679
of the combined filters because combined

00:20:44,159 --> 00:20:48,400
filters

00:20:45,679 --> 00:20:49,760
were not we need we have to go with a

00:20:48,400 --> 00:20:52,080
range filter

00:20:49,760 --> 00:20:54,320
where uh we have a minimum value and a

00:20:52,080 --> 00:20:56,080
maximum value we cannot have a filter

00:20:54,320 --> 00:20:59,520
okay give me every anything between i

00:20:56,080 --> 00:21:00,960
don't know five thousand euros and seven

00:20:59,520 --> 00:21:03,760
thousand five hundred euros something

00:21:00,960 --> 00:21:04,480
like that uh because it kind of limits a

00:21:03,760 --> 00:21:08,320
little bit the

00:21:04,480 --> 00:21:11,039
the the results or or or the deep

00:21:08,320 --> 00:21:12,320
that um the details that the user wants

00:21:11,039 --> 00:21:15,840
to search for

00:21:12,320 --> 00:21:19,760
but um we have to mimic

00:21:15,840 --> 00:21:20,799
uh for example on mobile we have to

00:21:19,760 --> 00:21:23,520
mimic that

00:21:20,799 --> 00:21:25,440
usability of the search button where we

00:21:23,520 --> 00:21:27,679
have a search

00:21:25,440 --> 00:21:28,480
call to action but the search call to

00:21:27,679 --> 00:21:31,120
action is not

00:21:28,480 --> 00:21:32,159
doing anything just hiding the the

00:21:31,120 --> 00:21:34,960
canvas

00:21:32,159 --> 00:21:36,480
where the where the filters are um

00:21:34,960 --> 00:21:38,720
displayed

00:21:36,480 --> 00:21:38,720
so

00:21:41,039 --> 00:21:44,480
so fast on mobile that we had give to

00:21:43,360 --> 00:21:47,919
the user

00:21:44,480 --> 00:21:49,600
an action to make in order for the user

00:21:47,919 --> 00:21:50,880
to realize okay something happened

00:21:49,600 --> 00:21:53,840
something changed

00:21:50,880 --> 00:21:55,120
because it is fast at the point that you

00:21:53,840 --> 00:21:57,440
don't know that something actually

00:21:55,120 --> 00:21:59,280
changed

00:21:57,440 --> 00:22:02,480
it's a bit to fake it and make it slow

00:21:59,280 --> 00:22:02,480
down even though it wasn't slow

00:22:02,640 --> 00:22:09,600
uh not not slow it down but fake the

00:22:05,679 --> 00:22:11,200
search click action

00:22:09,600 --> 00:22:13,919
you're actually not searching the search

00:22:11,200 --> 00:22:17,039
was already made okay just click search

00:22:13,919 --> 00:22:18,880
to hide the filters so

00:22:17,039 --> 00:22:20,159
now that we've we're at a point where

00:22:18,880 --> 00:22:23,600
we've delivered

00:22:20,159 --> 00:22:25,039
a decoupled search um was there

00:22:23,600 --> 00:22:26,400
any thought given at this stage that

00:22:25,039 --> 00:22:28,880
well maybe this should just be a full

00:22:26,400 --> 00:22:32,159
decoupled website

00:22:28,880 --> 00:22:32,159
but time

00:22:32,960 --> 00:22:37,600
i mean time was the biggest issue in

00:22:34,799 --> 00:22:40,640
there um

00:22:37,600 --> 00:22:42,240
and then i mean it will

00:22:40,640 --> 00:22:44,159
need time just to to to get a

00:22:42,240 --> 00:22:47,200
clarification with the client what

00:22:44,159 --> 00:22:50,000
we wanted to do it and why

00:22:47,200 --> 00:22:52,320
uh we chose that road and then that will

00:22:50,000 --> 00:22:53,200
go a conversation why to do it on react

00:22:52,320 --> 00:22:56,720
why not view

00:22:53,200 --> 00:22:59,520
why this and it will be like a

00:22:56,720 --> 00:23:02,480
a research that will take time and

00:22:59,520 --> 00:23:05,600
that's something we actually didn't have

00:23:02,480 --> 00:23:06,480
to throw away would you have any

00:23:05,600 --> 00:23:08,159
concerns

00:23:06,480 --> 00:23:09,520
with the size of the data set so we're

00:23:08,159 --> 00:23:11,760
looking at 50 000

00:23:09,520 --> 00:23:12,559
so basically the the advertised talk

00:23:11,760 --> 00:23:14,480
talks about 50

00:23:12,559 --> 00:23:16,320
000 records technically there's a

00:23:14,480 --> 00:23:16,640
hundred thousand it's just a 50 000 of

00:23:16,320 --> 00:23:21,760
them

00:23:16,640 --> 00:23:23,120
are unpublished does that kind of scale

00:23:21,760 --> 00:23:24,880
would you have any concerns about

00:23:23,120 --> 00:23:26,240
implementing a um i mean

00:23:24,880 --> 00:23:27,760
at the couple's site or a stat you

00:23:26,240 --> 00:23:29,679
generated site at that no because

00:23:27,760 --> 00:23:32,400
because i can i could definitely see

00:23:29,679 --> 00:23:32,880
um a combination using the search with

00:23:32,400 --> 00:23:36,240
react

00:23:32,880 --> 00:23:38,400
and type sense and uh we could

00:23:36,240 --> 00:23:40,640
go with gatsby and generate just the

00:23:38,400 --> 00:23:42,320
vehicle pages as static content

00:23:40,640 --> 00:23:44,480
because there's nothing that changes too

00:23:42,320 --> 00:23:47,840
much there's no interaction

00:23:44,480 --> 00:23:50,159
per se on those pages so uh

00:23:47,840 --> 00:23:51,760
we're gonna go with guts pjs with our

00:23:50,159 --> 00:23:52,960
problem or we could

00:23:51,760 --> 00:23:54,880
just continue down the road we're

00:23:52,960 --> 00:23:57,450
reacting we have a massive

00:23:54,880 --> 00:23:58,880
react application um

00:23:57,450 --> 00:24:02,559
[Music]

00:23:58,880 --> 00:24:02,559
okay maybe phase two three

00:24:02,799 --> 00:24:06,159
phase two or three well if we if we ever

00:24:04,640 --> 00:24:07,919
get to meet the client

00:24:06,159 --> 00:24:09,440
for for a beer then we'll we'll bring

00:24:07,919 --> 00:24:11,360
we'll bring that up with them yeah

00:24:09,440 --> 00:24:14,080
um jason i got to bring in this point

00:24:11,360 --> 00:24:16,000
and we'll we'll talk a bit about titans

00:24:14,080 --> 00:24:17,760
um so i mean the first thing is like we

00:24:16,000 --> 00:24:20,000
only heard about type sense

00:24:17,760 --> 00:24:21,039
six months ago so how long has it been

00:24:20,000 --> 00:24:22,559
about so

00:24:21,039 --> 00:24:25,520
my co-founder and i we've been working

00:24:22,559 --> 00:24:27,760
on typesense since uh 2015.

00:24:25,520 --> 00:24:29,200
uh we started working on it as a nights

00:24:27,760 --> 00:24:33,360
and weekends project

00:24:29,200 --> 00:24:35,279
decided to open source it in 2018

00:24:33,360 --> 00:24:36,400
and then that's when we we posted on

00:24:35,279 --> 00:24:39,279
hacker news and we

00:24:36,400 --> 00:24:40,880
started seeing some initial interest in

00:24:39,279 --> 00:24:42,080
us another search engine because at that

00:24:40,880 --> 00:24:44,159
time

00:24:42,080 --> 00:24:46,240
it was mainly elasticsearch i had used

00:24:44,159 --> 00:24:48,240
solar you know several maybe

00:24:46,240 --> 00:24:50,320
almost a decade ago now uh and then

00:24:48,240 --> 00:24:51,840
elasticsearch came along so we were

00:24:50,320 --> 00:24:53,679
tight just came out of our own

00:24:51,840 --> 00:24:54,799
frustrations with setting up

00:24:53,679 --> 00:24:57,360
elasticsearch

00:24:54,799 --> 00:24:57,919
uh in production configuring the jvm and

00:24:57,360 --> 00:25:00,159
going through

00:24:57,919 --> 00:25:01,679
their all their apis and we wanted to

00:25:00,159 --> 00:25:02,080
build something that was super simple to

00:25:01,679 --> 00:25:04,400
use

00:25:02,080 --> 00:25:06,080
and that's something that we thought

00:25:04,400 --> 00:25:07,279
okay maybe if we like it maybe other

00:25:06,080 --> 00:25:10,240
developers also would

00:25:07,279 --> 00:25:10,799
uh would appreciate simplicity and still

00:25:10,240 --> 00:25:13,200
get

00:25:10,799 --> 00:25:14,880
many of the features that uh

00:25:13,200 --> 00:25:17,279
elasticsearch offers so

00:25:14,880 --> 00:25:19,200
uh 2018 we open sourced it and then in

00:25:17,279 --> 00:25:21,919
uh 2020

00:25:19,200 --> 00:25:23,440
uh we did another uh hack news post

00:25:21,919 --> 00:25:23,760
saying it's an open source alternative

00:25:23,440 --> 00:25:26,559
to

00:25:23,760 --> 00:25:27,360
algolia and that seems to have resonated

00:25:26,559 --> 00:25:29,760
with

00:25:27,360 --> 00:25:31,600
folks a lot and then people started

00:25:29,760 --> 00:25:32,400
asking us for more features that algolia

00:25:31,600 --> 00:25:35,440
had

00:25:32,400 --> 00:25:37,279
uh so since then it's it's been uh

00:25:35,440 --> 00:25:39,200
you know growing uh organically people

00:25:37,279 --> 00:25:40,960
are finding it i'm excited that

00:25:39,200 --> 00:25:42,159
uh new folks are discovering uh

00:25:40,960 --> 00:25:42,799
typesense and using it so right now

00:25:42,159 --> 00:25:46,960
we're about

00:25:42,799 --> 00:25:50,159
uh 5000 stars uh on github we have about

00:25:46,960 --> 00:25:52,559
uh 29 000 docker pools so

00:25:50,159 --> 00:25:54,159
i am i'm excited seeing others being

00:25:52,559 --> 00:25:56,240
excited about the project so

00:25:54,159 --> 00:25:57,840
in 2020 i started working on it

00:25:56,240 --> 00:25:59,360
full-time and my co-founder just started

00:25:57,840 --> 00:26:02,559
working on it full-time uh

00:25:59,360 --> 00:26:05,679
last month so uh we're we're excited

00:26:02,559 --> 00:26:07,120
good stuff so then where when lies the

00:26:05,679 --> 00:26:09,200
difference between type sense cloud and

00:26:07,120 --> 00:26:10,240
types yeah so types in cloud actually

00:26:09,200 --> 00:26:12,240
came out of

00:26:10,240 --> 00:26:13,919
people asking us for a hosted version

00:26:12,240 --> 00:26:14,799
especially coming from the world of

00:26:13,919 --> 00:26:16,000
algolia

00:26:14,799 --> 00:26:18,240
where they take care of all of the

00:26:16,000 --> 00:26:20,640
infrastructure people just wanted

00:26:18,240 --> 00:26:22,000
an api and a set of api keys to interact

00:26:20,640 --> 00:26:24,080
with for search

00:26:22,000 --> 00:26:25,279
versus having to self-host and manage

00:26:24,080 --> 00:26:28,240
service uh

00:26:25,279 --> 00:26:29,919
et cetera so that came as a repeated ask

00:26:28,240 --> 00:26:32,159
from people and we figured

00:26:29,919 --> 00:26:33,440
well that's our monetization strategy

00:26:32,159 --> 00:26:35,120
right there because again we're

00:26:33,440 --> 00:26:36,960
working on it full time now so we got to

00:26:35,120 --> 00:26:38,720
make money through though the project is

00:26:36,960 --> 00:26:39,679
open source 100 open source the core is

00:26:38,720 --> 00:26:42,720
open source so

00:26:39,679 --> 00:26:43,120
we decided uh providing hosting would be

00:26:42,720 --> 00:26:44,720
our

00:26:43,120 --> 00:26:46,240
strategy to sustain the open source

00:26:44,720 --> 00:26:49,039
project uh

00:26:46,240 --> 00:26:50,080
and ourselves so one of the things in uh

00:26:49,039 --> 00:26:53,120
type sense cloud

00:26:50,080 --> 00:26:55,760
is that we offer this uh

00:26:53,120 --> 00:26:57,919
a feature called uh search delivery

00:26:55,760 --> 00:27:01,120
network so it's similar to a cdn

00:26:57,919 --> 00:27:02,320
uh in the except that here anytime

00:27:01,120 --> 00:27:04,400
when you turn on the search delivery

00:27:02,320 --> 00:27:06,159
network feature anytime a user request a

00:27:04,400 --> 00:27:08,640
search request comes through

00:27:06,159 --> 00:27:10,080
we the node that's closest to the user

00:27:08,640 --> 00:27:10,880
ends up serving that request so which

00:27:10,080 --> 00:27:13,600
keeps the

00:27:10,880 --> 00:27:14,799
search experience super fast uh even for

00:27:13,600 --> 00:27:17,120
people around the world

00:27:14,799 --> 00:27:19,120
uh and then of course things like high

00:27:17,120 --> 00:27:21,120
availability or point and click and you

00:27:19,120 --> 00:27:24,159
can deploy a cluster

00:27:21,120 --> 00:27:26,799
in about 16 data centers

00:27:24,159 --> 00:27:27,520
so we're trying to make it as easy as it

00:27:26,799 --> 00:27:29,440
is

00:27:27,520 --> 00:27:30,799
to use type sense just like any other

00:27:29,440 --> 00:27:32,480
sas service but

00:27:30,799 --> 00:27:34,159
you still want to self host it again

00:27:32,480 --> 00:27:36,720
it's it's 100 open source

00:27:34,159 --> 00:27:37,520
it's uh you can deploy it on your own uh

00:27:36,720 --> 00:27:40,720
infrastructure

00:27:37,520 --> 00:27:42,399
uh and we've also optimized for keeping

00:27:40,720 --> 00:27:45,200
it easy to deploy

00:27:42,399 --> 00:27:46,080
on your yourself as well because even if

00:27:45,200 --> 00:27:48,480
not for anything

00:27:46,080 --> 00:27:49,600
just selfishly we need to keep our

00:27:48,480 --> 00:27:52,399
operational overhead

00:27:49,600 --> 00:27:54,080
uh low on typesense cloud so any

00:27:52,399 --> 00:27:55,679
improvements we do to make typesense

00:27:54,080 --> 00:27:57,520
easy to host ourselves

00:27:55,679 --> 00:27:58,960
makes its way back into the open source

00:27:57,520 --> 00:28:00,159
uh product as well which makes it easy

00:27:58,960 --> 00:28:03,360
for people to

00:28:00,159 --> 00:28:04,559
uh to sell phone so i'd say if someone

00:28:03,360 --> 00:28:07,520
has an infrastructure

00:28:04,559 --> 00:28:09,039
team uh on staff then adding type sense

00:28:07,520 --> 00:28:10,720
into the mix should be trivial we have a

00:28:09,039 --> 00:28:12,559
docker instance we have kubernetes we

00:28:10,720 --> 00:28:15,360
could deploy that into kubernetes

00:28:12,559 --> 00:28:16,880
uh or if you if you're in the whole

00:28:15,360 --> 00:28:18,720
serverless ecosystem or you're using

00:28:16,880 --> 00:28:19,919
firebase or don't want to manage servers

00:28:18,720 --> 00:28:23,279
then there's typesense

00:28:19,919 --> 00:28:24,799
uh uh texas cloud

00:28:23,279 --> 00:28:26,000
you mentioned algolia in there where

00:28:24,799 --> 00:28:26,640
would you see the key differences

00:28:26,000 --> 00:28:29,520
between

00:28:26,640 --> 00:28:30,799
typesense and oh great so uh the to

00:28:29,520 --> 00:28:32,640
touch on something that christopher said

00:28:30,799 --> 00:28:35,760
earlier so one of the biggest things

00:28:32,640 --> 00:28:36,240
with uh typesense cloud is how we charge

00:28:35,760 --> 00:28:39,520
for

00:28:36,240 --> 00:28:41,840
uh uh for the search experience so

00:28:39,520 --> 00:28:44,000
algolia charges by number of records a

00:28:41,840 --> 00:28:46,080
number of search operations so it

00:28:44,000 --> 00:28:47,919
becomes very expensive if you have a

00:28:46,080 --> 00:28:50,480
large number of records

00:28:47,919 --> 00:28:51,200
and do less number of searches in it or

00:28:50,480 --> 00:28:53,200
if you have

00:28:51,200 --> 00:28:55,360
a small data set and you have a ton of

00:28:53,200 --> 00:28:58,320
searches on it then your pricing goes

00:28:55,360 --> 00:28:58,880
whack because it becomes very expensive

00:28:58,320 --> 00:29:01,360
because you're

00:28:58,880 --> 00:29:02,000
on on one end of either spectrum whereas

00:29:01,360 --> 00:29:03,600
in

00:29:02,000 --> 00:29:05,440
types it's cloud the way we build is

00:29:03,600 --> 00:29:08,080
more infrastructure type pricing so

00:29:05,440 --> 00:29:11,919
something like what aws or gcp charge

00:29:08,080 --> 00:29:13,279
which is based on the amount of ram cpu

00:29:11,919 --> 00:29:16,000
your basic computing

00:29:13,279 --> 00:29:16,880
configurations and we charge it hourly

00:29:16,000 --> 00:29:19,760
price so

00:29:16,880 --> 00:29:20,799
for that given amount of ram cpu you

00:29:19,760 --> 00:29:22,960
could throw as much

00:29:20,799 --> 00:29:24,000
traffic at it as much data at it as it

00:29:22,960 --> 00:29:26,399
can handle

00:29:24,000 --> 00:29:28,000
and there's no additional charge forces

00:29:26,399 --> 00:29:30,159
bandwidth charges just like again how

00:29:28,000 --> 00:29:32,320
cloud providers charge but it's not a

00:29:30,159 --> 00:29:33,600
per search charge or a per indexing

00:29:32,320 --> 00:29:36,960
charge or

00:29:33,600 --> 00:29:38,559
a per record charge so that makes the

00:29:36,960 --> 00:29:41,120
pricing really attractive

00:29:38,559 --> 00:29:42,799
for uh for interesting use cases so for

00:29:41,120 --> 00:29:45,520
example there's this one

00:29:42,799 --> 00:29:48,240
uh showcase that i built with searching

00:29:45,520 --> 00:29:50,480
32 million records of songs

00:29:48,240 --> 00:29:51,360
uh so hosting 32 million records in

00:29:50,480 --> 00:29:54,320
algolia

00:29:51,360 --> 00:29:55,760
at i think they have a dollar for a

00:29:54,320 --> 00:29:57,440
thousand records that would be thirty

00:29:55,760 --> 00:30:00,240
two thousand dollars per month

00:29:57,440 --> 00:30:01,679
to uh host a data set of that size in

00:30:00,240 --> 00:30:03,120
typesense cloud it's

00:30:01,679 --> 00:30:04,799
for that particular data set you could

00:30:03,120 --> 00:30:07,039
host it for as little as

00:30:04,799 --> 00:30:08,960
twelve hundred dollars a month uh and

00:30:07,039 --> 00:30:10,880
that's because it's a 32 million data

00:30:08,960 --> 00:30:11,760
set but if you scale down the pricing

00:30:10,880 --> 00:30:14,399
like that's

00:30:11,760 --> 00:30:15,520
you can host it very economically for in

00:30:14,399 --> 00:30:17,200
uh

00:30:15,520 --> 00:30:19,600
typhoon scan and one of the reasons we

00:30:17,200 --> 00:30:21,919
decided to price it this way is because

00:30:19,600 --> 00:30:23,840
we want to democratize search meaning

00:30:21,919 --> 00:30:25,679
that good search technology

00:30:23,840 --> 00:30:27,200
uh in my opinion should be available to

00:30:25,679 --> 00:30:29,919
more folks and not just

00:30:27,200 --> 00:30:31,200
uh folks who can afford to pay a premium

00:30:29,919 --> 00:30:33,039
for it so

00:30:31,200 --> 00:30:34,880
uh which is what you know that's why we

00:30:33,039 --> 00:30:37,279
open source the project if you want to

00:30:34,880 --> 00:30:38,399
sell force it uh but even with typesense

00:30:37,279 --> 00:30:41,120
cloud we want to be

00:30:38,399 --> 00:30:41,840
charged a reasonable amount uh and still

00:30:41,120 --> 00:30:44,080
you know make

00:30:41,840 --> 00:30:45,600
a sustainable living out of an open

00:30:44,080 --> 00:30:47,679
source project so

00:30:45,600 --> 00:30:50,559
uh that's our that's our philosophy

00:30:47,679 --> 00:30:52,480
around pricing

00:30:50,559 --> 00:30:54,240
so in terms of when you when when the

00:30:52,480 --> 00:30:56,640
cars ireland project came along

00:30:54,240 --> 00:30:57,360
and you saw us so basically we talked to

00:30:56,640 --> 00:30:59,679
you guys

00:30:57,360 --> 00:31:01,279
i'll go into the reasons or why later on

00:30:59,679 --> 00:31:01,760
but do you feel that this kind of a

00:31:01,279 --> 00:31:04,000
project

00:31:01,760 --> 00:31:05,519
so a classified search is that the kind

00:31:04,000 --> 00:31:06,320
of project you see is a good fit for

00:31:05,519 --> 00:31:07,840
type sense

00:31:06,320 --> 00:31:09,360
or is there other types of projects

00:31:07,840 --> 00:31:11,360
where you you see you've got a suite

00:31:09,360 --> 00:31:12,480
yeah i mean i'd say search is one of

00:31:11,360 --> 00:31:16,159
those things that

00:31:12,480 --> 00:31:19,519
is universal across different uh domains

00:31:16,159 --> 00:31:21,600
uh so i frequently

00:31:19,519 --> 00:31:23,679
uh stumble on more and more interesting

00:31:21,600 --> 00:31:25,840
use cases that people are using

00:31:23,679 --> 00:31:26,960
uh type sense for which which is you

00:31:25,840 --> 00:31:28,880
know it's always a fun

00:31:26,960 --> 00:31:30,880
uh fun thing to see how people are using

00:31:28,880 --> 00:31:33,120
uh your your product

00:31:30,880 --> 00:31:34,480
uh i would say one thing that was unique

00:31:33,120 --> 00:31:37,519
to the cars island

00:31:34,480 --> 00:31:39,679
uh experience that uh that

00:31:37,519 --> 00:31:40,559
was that pleasantly surprised me was

00:31:39,679 --> 00:31:43,679
that it's not

00:31:40,559 --> 00:31:45,600
just for text-based search it's also for

00:31:43,679 --> 00:31:47,039
like the prime research experience is

00:31:45,600 --> 00:31:48,559
through filtering so

00:31:47,039 --> 00:31:50,799
you set a bunch of filters and i think

00:31:48,559 --> 00:31:51,760
there are like around maybe 25 different

00:31:50,799 --> 00:31:53,679
filters

00:31:51,760 --> 00:31:55,600
uh and that's the primary search

00:31:53,679 --> 00:31:57,120
experience so what you traditionally

00:31:55,600 --> 00:31:59,200
think of as search which is

00:31:57,120 --> 00:32:00,480
typing in keywords and getting a result

00:31:59,200 --> 00:32:02,559
there is a search part

00:32:00,480 --> 00:32:03,519
as well but that's probably the way at

00:32:02,559 --> 00:32:06,159
the bottom of the

00:32:03,519 --> 00:32:07,039
site but you first search by you know

00:32:06,159 --> 00:32:08,799
selecting the

00:32:07,039 --> 00:32:10,240
the make and model the the year the

00:32:08,799 --> 00:32:13,600
mileage and

00:32:10,240 --> 00:32:15,360
so primarily searching through filtering

00:32:13,600 --> 00:32:16,880
uh was something that was an interesting

00:32:15,360 --> 00:32:18,080
uh uh

00:32:16,880 --> 00:32:20,320
that i thought was an interesting use

00:32:18,080 --> 00:32:22,480
case at the point

00:32:20,320 --> 00:32:23,840
okay that's good and then the corollary

00:32:22,480 --> 00:32:25,519
of that did you do you feel those

00:32:23,840 --> 00:32:26,720
bits that we're missing out on or rather

00:32:25,519 --> 00:32:28,399
elements of type sense that we could

00:32:26,720 --> 00:32:31,600
leverage a bit more uh

00:32:28,399 --> 00:32:32,880
let's see i think uh adding i'm not sure

00:32:31,600 --> 00:32:36,240
if karzalinda has

00:32:32,880 --> 00:32:39,279
this but there's also an element of uh

00:32:36,240 --> 00:32:40,320
multi-tenancy that's supported in uh in

00:32:39,279 --> 00:32:42,159
type sense where

00:32:40,320 --> 00:32:44,399
if you have for example user specific

00:32:42,159 --> 00:32:46,240
data uh let's say for example

00:32:44,399 --> 00:32:47,600
there's a favorites feature where people

00:32:46,240 --> 00:32:50,080
can favorite different uh

00:32:47,600 --> 00:32:51,519
entries or different cars and you can

00:32:50,080 --> 00:32:52,799
allow them to search just within their

00:32:51,519 --> 00:32:54,000
favorites so there's a

00:32:52,799 --> 00:32:56,320
there's a feature where you could store

00:32:54,000 --> 00:32:56,799
all that data in one index and generate

00:32:56,320 --> 00:33:00,159
api

00:32:56,799 --> 00:33:01,760
keys that allows you to only search

00:33:00,159 --> 00:33:05,039
through a particular user's record

00:33:01,760 --> 00:33:05,919
in addition to the public uh public data

00:33:05,039 --> 00:33:09,279
set

00:33:05,919 --> 00:33:12,320
uh let's see besides that

00:33:09,279 --> 00:33:13,840
yeah yeah yeah no

00:33:12,320 --> 00:33:15,600
that's a good one because we we do have

00:33:13,840 --> 00:33:16,240
that as a feature we don't run it via

00:33:15,600 --> 00:33:18,080
title

00:33:16,240 --> 00:33:20,240
okay all right that's good to know um

00:33:18,080 --> 00:33:21,600
but yeah that's something

00:33:20,240 --> 00:33:23,120
we can look at that as a future

00:33:21,600 --> 00:33:24,240
enhancement phase three the mythical

00:33:23,120 --> 00:33:27,279
phase three

00:33:24,240 --> 00:33:28,960
um one thing that that our client was

00:33:27,279 --> 00:33:30,640
were very concerned about was load

00:33:28,960 --> 00:33:32,559
testing so we went through a fairly

00:33:30,640 --> 00:33:34,320
rigorous load testing process

00:33:32,559 --> 00:33:36,399
um can you talk us through how that was

00:33:34,320 --> 00:33:37,919
handled at the at the title yeah so

00:33:36,399 --> 00:33:40,240
uh one of the things i wanted to make

00:33:37,919 --> 00:33:41,440
sure is that before going live we wanted

00:33:40,240 --> 00:33:42,960
to make sure that the

00:33:41,440 --> 00:33:44,960
instance configuration or the cluster

00:33:42,960 --> 00:33:45,440
configuration that uh that was chosen

00:33:44,960 --> 00:33:48,159
around

00:33:45,440 --> 00:33:48,799
ram the amount of vcpu uh and whether

00:33:48,159 --> 00:33:51,760
we're using

00:33:48,799 --> 00:33:52,000
uh nvme ssds or not i wanted to make

00:33:51,760 --> 00:33:53,440
sure

00:33:52,000 --> 00:33:55,919
that that particular configuration is

00:33:53,440 --> 00:33:56,559
able to sustain the amount of traffic

00:33:55,919 --> 00:33:59,600
that was

00:33:56,559 --> 00:34:01,440
uh that was expected and so

00:33:59,600 --> 00:34:03,600
i ended up building a little test

00:34:01,440 --> 00:34:06,799
harness using a k6 that

00:34:03,600 --> 00:34:09,679
k6 is another open source load testing

00:34:06,799 --> 00:34:10,240
framework so i went and clicked through

00:34:09,679 --> 00:34:12,240
different

00:34:10,240 --> 00:34:14,079
filters on the site like a typical user

00:34:12,240 --> 00:34:14,879
would collected all those network

00:34:14,079 --> 00:34:16,800
requests

00:34:14,879 --> 00:34:19,440
that were made being made to type sense

00:34:16,800 --> 00:34:22,000
and then put them inside a k6

00:34:19,440 --> 00:34:23,440
and ran a a load test just to make sure

00:34:22,000 --> 00:34:24,639
that there's no other

00:34:23,440 --> 00:34:26,639
uh you know that that particular

00:34:24,639 --> 00:34:27,200
configuration works right for the of the

00:34:26,639 --> 00:34:30,079
load test

00:34:27,200 --> 00:34:32,000
and or for the load expected uh and we

00:34:30,079 --> 00:34:34,079
were able to sustain up to

00:34:32,000 --> 00:34:35,679
uh for this particular uh cluster

00:34:34,079 --> 00:34:36,399
configuration we were able to sustain up

00:34:35,679 --> 00:34:39,440
to

00:34:36,399 --> 00:34:42,399
uh 60 search requests per second uh

00:34:39,440 --> 00:34:43,520
and we we could have scaled up higher

00:34:42,399 --> 00:34:46,159
with more

00:34:43,520 --> 00:34:46,879
cpu capacity but this particular cluster

00:34:46,159 --> 00:34:48,960
which was

00:34:46,879 --> 00:34:50,320
suited for uh the traffic that was

00:34:48,960 --> 00:34:52,320
expected so

00:34:50,320 --> 00:34:53,520
uh we also went through a round of

00:34:52,320 --> 00:34:54,720
optimizations we found some

00:34:53,520 --> 00:34:56,240
optimizations we could do on the

00:34:54,720 --> 00:34:59,359
typesense core side

00:34:56,240 --> 00:35:00,880
uh also added that and since we

00:34:59,359 --> 00:35:02,560
found that through this particular data

00:35:00,880 --> 00:35:04,320
set we were able to then open source

00:35:02,560 --> 00:35:05,280
those improvements back to the types and

00:35:04,320 --> 00:35:08,320
score

00:35:05,280 --> 00:35:11,599
as well so it was a nice little uh loop

00:35:08,320 --> 00:35:12,720
to use the improvements that we found as

00:35:11,599 --> 00:35:14,800
part of this project

00:35:12,720 --> 00:35:16,560
back to the types and score and now the

00:35:14,800 --> 00:35:18,240
community can then benefit from that as

00:35:16,560 --> 00:35:19,839
well

00:35:18,240 --> 00:35:21,119
well that sounds good so in terms of

00:35:19,839 --> 00:35:22,079
people getting involved with the project

00:35:21,119 --> 00:35:23,520
uh

00:35:22,079 --> 00:35:25,520
how do you yeah so like i mentioned it's

00:35:23,520 --> 00:35:26,880
just uh just the two of us working on

00:35:25,520 --> 00:35:28,400
type sense so

00:35:26,880 --> 00:35:30,000
uh you know given that our goal is to

00:35:28,400 --> 00:35:32,880
democratize search i'd

00:35:30,000 --> 00:35:34,079
love to get help with uh more

00:35:32,880 --> 00:35:36,079
integrations with

00:35:34,079 --> 00:35:37,440
different frameworks and also client

00:35:36,079 --> 00:35:40,960
libraries

00:35:37,440 --> 00:35:44,160
so right now we have a php go

00:35:40,960 --> 00:35:46,880
javascript ruby and python libraries

00:35:44,160 --> 00:35:47,920
uh we recently had an ask for a java

00:35:46,880 --> 00:35:51,040
library a rus

00:35:47,920 --> 00:35:53,440
client so if anyone's experts i'm not

00:35:51,040 --> 00:35:54,320
an expert in every language out there so

00:35:53,440 --> 00:35:56,400
i'd love to get

00:35:54,320 --> 00:35:58,400
contributions around client libraries

00:35:56,400 --> 00:36:00,720
and also around frameworks like

00:35:58,400 --> 00:36:02,800
i mean the drupal example is a great uh

00:36:00,720 --> 00:36:03,680
uh a great example like i'm not a drupal

00:36:02,800 --> 00:36:04,960
expert

00:36:03,680 --> 00:36:06,640
uh you know but the fact that

00:36:04,960 --> 00:36:07,280
christopher is able to jump in and

00:36:06,640 --> 00:36:10,320
contribute

00:36:07,280 --> 00:36:11,680
uh the the type sense uh uh

00:36:10,320 --> 00:36:13,520
the drupal integration like that's

00:36:11,680 --> 00:36:13,920
that's awesome like now more people can

00:36:13,520 --> 00:36:16,480
start

00:36:13,920 --> 00:36:17,760
uh uh integrating with uh integrating

00:36:16,480 --> 00:36:19,760
drupal with types and so

00:36:17,760 --> 00:36:21,760
you know folks are working with magento

00:36:19,760 --> 00:36:22,880
or woocommerce like wordpress like all

00:36:21,760 --> 00:36:24,560
these are different things that people

00:36:22,880 --> 00:36:26,000
are starting to ask for

00:36:24,560 --> 00:36:28,640
uh so if you're an expert in any of

00:36:26,000 --> 00:36:30,400
these uh or would love to get involved

00:36:28,640 --> 00:36:33,119
in open source i'd love to

00:36:30,400 --> 00:36:34,320
partner with you uh and and build

00:36:33,119 --> 00:36:36,880
something

00:36:34,320 --> 00:36:36,880
okay it's

00:36:37,440 --> 00:36:43,280
good stuff how are we for time where our

00:36:40,400 --> 00:36:45,680
moderator appears to have disappeared

00:36:43,280 --> 00:36:48,079
oh he says q and a in about about

00:36:45,680 --> 00:36:48,079
five minutes

00:36:48,880 --> 00:36:53,599
oh wait here in five minutes okay okay

00:36:51,200 --> 00:36:53,599
good stuff

00:36:53,680 --> 00:36:59,200
so i mean i'm gonna oh we've lost

00:36:56,640 --> 00:36:59,200
christopher yeah

00:37:02,480 --> 00:37:05,599
okay okay so one of the things actually

00:37:04,560 --> 00:37:08,240
just to

00:37:05,599 --> 00:37:08,640
it was sort of touched on by christopher

00:37:08,240 --> 00:37:11,040
and

00:37:08,640 --> 00:37:13,760
jason but one of the reasons that we

00:37:11,040 --> 00:37:15,440
went with tyson's cloud was

00:37:13,760 --> 00:37:16,560
i mentioned the outside that that the

00:37:15,440 --> 00:37:17,680
organization we're dealing with is

00:37:16,560 --> 00:37:19,760
actually

00:37:17,680 --> 00:37:21,040
it is a multinational albeit we're

00:37:19,760 --> 00:37:22,160
dealing with a small team and they're

00:37:21,040 --> 00:37:25,920
very

00:37:22,160 --> 00:37:28,880
um they're very insistent on being

00:37:25,920 --> 00:37:29,920
backed by proper support for the

00:37:28,880 --> 00:37:32,160
different projects so

00:37:29,920 --> 00:37:33,119
technically we could have the chops to

00:37:32,160 --> 00:37:35,680
run

00:37:33,119 --> 00:37:37,359
the types and search servers ourselves

00:37:35,680 --> 00:37:39,359
but we're not experts on it and you know

00:37:37,359 --> 00:37:40,880
we weren't going to pretend that we were

00:37:39,359 --> 00:37:42,560
so we what we

00:37:40,880 --> 00:37:44,720
this project would not have run type

00:37:42,560 --> 00:37:46,480
since if it wasn't for type sense cloud

00:37:44,720 --> 00:37:47,760
because that was a key requirement and

00:37:46,480 --> 00:37:49,280
then i know that

00:37:47,760 --> 00:37:50,560
at a business level that took a lot of

00:37:49,280 --> 00:37:51,040
work as well to get that over the line

00:37:50,560 --> 00:37:52,400
because

00:37:51,040 --> 00:37:53,760
we had to deal with procurement and

00:37:52,400 --> 00:37:55,520
legal and all the things that go with

00:37:53,760 --> 00:37:59,119
dealing with a large organization

00:37:55,520 --> 00:38:00,800
so um they're they're very keen on

00:37:59,119 --> 00:38:02,000
performance and very keen on dealing

00:38:00,800 --> 00:38:03,440
with entities that are going to be

00:38:02,000 --> 00:38:06,320
around for a while so

00:38:03,440 --> 00:38:08,000
that the front end is on cloudflare the

00:38:06,320 --> 00:38:09,920
hosting is on acquia

00:38:08,000 --> 00:38:11,520
um and now type sense cloud is in there

00:38:09,920 --> 00:38:12,800
as part of that equation as well so that

00:38:11,520 --> 00:38:14,880
was kind of a big deal and

00:38:12,800 --> 00:38:16,720
and actually the technical query

00:38:14,880 --> 00:38:18,480
technical issues that christopher hit or

00:38:16,720 --> 00:38:20,400
we hit where

00:38:18,480 --> 00:38:21,520
um i always felt we were going to get

00:38:20,400 --> 00:38:23,920
over those

00:38:21,520 --> 00:38:25,200
the the uh the legal and the pyramid

00:38:23,920 --> 00:38:27,599
stuff that goes on with dealing with

00:38:25,200 --> 00:38:30,240
large entities i wasn't as confident

00:38:27,599 --> 00:38:32,079
that we would get over that um but in

00:38:30,240 --> 00:38:34,320
the end we did and i think we've got a

00:38:32,079 --> 00:38:36,240
much more successful project for us

00:38:34,320 --> 00:38:38,720
okay so we have 15 minutes well i think

00:38:36,240 --> 00:38:41,680
we'll start asking some questions

00:38:38,720 --> 00:38:42,560
uh if i can see them q and a in five

00:38:41,680 --> 00:38:45,040
minutes okay

00:38:42,560 --> 00:38:46,000
five minutes ago okay good stuff so i to

00:38:45,040 --> 00:38:48,960
go over there's a q a

00:38:46,000 --> 00:38:50,880
tab here and i'll start asking some

00:38:48,960 --> 00:38:52,880
questions i'll start with one for you

00:38:50,880 --> 00:38:54,000
jason does type sense of anything

00:38:52,880 --> 00:38:57,440
similar to solar's

00:38:54,000 --> 00:39:00,480
learn to rank to improve relevancy via

00:38:57,440 --> 00:39:02,320
no not not at the moment but that's

00:39:00,480 --> 00:39:04,800
interesting is starting to come up more

00:39:02,320 --> 00:39:06,720
and more as people are discovering

00:39:04,800 --> 00:39:08,320
uh types in so it's definitely on our

00:39:06,720 --> 00:39:12,839
radar uh but we

00:39:08,320 --> 00:39:15,280
we haven't started uh work on it at the

00:39:12,839 --> 00:39:18,240
moment

00:39:15,280 --> 00:39:20,320
okay good stuff um i'll go to some of

00:39:18,240 --> 00:39:23,680
the older questions seems a bit unfair

00:39:20,320 --> 00:39:27,200
uh amazing work thank you very much

00:39:23,680 --> 00:39:29,280
uh why type sense and how much his

00:39:27,200 --> 00:39:31,440
inclusion helped the cause

00:39:29,280 --> 00:39:33,599
uh given that solar elasticsearch have

00:39:31,440 --> 00:39:35,680
given have similar capabilities

00:39:33,599 --> 00:39:36,800
i i mean i guess i'll talk to take that

00:39:35,680 --> 00:39:40,480
one so

00:39:36,800 --> 00:39:41,280
um the the solar was fine it did a good

00:39:40,480 --> 00:39:44,079
job

00:39:41,280 --> 00:39:45,440
um typesense had the client libraries we

00:39:44,079 --> 00:39:47,280
could work with straight away

00:39:45,440 --> 00:39:48,640
that was definitely an advantage it had

00:39:47,280 --> 00:39:50,560
and the the last one then was the

00:39:48,640 --> 00:39:52,160
ability to use tyson's cloud

00:39:50,560 --> 00:39:53,760
that was that was a key part of the

00:39:52,160 --> 00:39:56,880
decision-making process

00:39:53,760 --> 00:39:59,440
um so the technical aspects of it were

00:39:56,880 --> 00:40:00,000
part of that but the let's call it the

00:39:59,440 --> 00:40:02,830
corporate

00:40:00,000 --> 00:40:05,440
aspects were important too um

00:40:02,830 --> 00:40:08,480
[Music]

00:40:05,440 --> 00:40:10,000
how sorry did you manage the cars as

00:40:08,480 --> 00:40:11,839
drupal entities

00:40:10,000 --> 00:40:14,079
or are they managed as part of a data

00:40:11,839 --> 00:40:15,040
set exposed to drupal okay well this was

00:40:14,079 --> 00:40:18,560
my problem

00:40:15,040 --> 00:40:20,319
um the cars arrive in from a rest api

00:40:18,560 --> 00:40:22,079
and that charizard make available and

00:40:20,319 --> 00:40:24,800
what we do is we just

00:40:22,079 --> 00:40:26,720
parse that rest api and store them as

00:40:24,800 --> 00:40:28,160
drupal notes so there's 100 000 nodes

00:40:26,720 --> 00:40:31,200
sitting in a database

00:40:28,160 --> 00:40:33,599
and then everything flows from there so

00:40:31,200 --> 00:40:34,720
we at the point of creation deletion

00:40:33,599 --> 00:40:38,000
update we will both

00:40:34,720 --> 00:40:39,520
update search api at the back end for

00:40:38,000 --> 00:40:40,480
those search engine results pages i

00:40:39,520 --> 00:40:42,240
talked about earlier on they're

00:40:40,480 --> 00:40:44,640
generated using search api

00:40:42,240 --> 00:40:46,880
but also we will use the type sense

00:40:44,640 --> 00:40:48,960
libraries to send data up and down

00:40:46,880 --> 00:40:50,079
to type sense there as well is that you

00:40:48,960 --> 00:40:52,160
would add to that christopher i know

00:40:50,079 --> 00:40:53,180
you've been looking at a search api

00:40:52,160 --> 00:40:56,320
type sense

00:40:53,180 --> 00:40:56,320
[Music]

00:40:57,440 --> 00:41:02,319
sorry i've lost the i lost the beginning

00:40:59,599 --> 00:41:02,319
of the question now

00:41:02,560 --> 00:41:06,000
sure no problem so the question was how

00:41:04,720 --> 00:41:07,680
do we handle the cars

00:41:06,000 --> 00:41:09,520
as drupal entities so explain how we

00:41:07,680 --> 00:41:11,680
pull all that stuff in so

00:41:09,520 --> 00:41:13,119
you've been looking and right now or

00:41:11,680 --> 00:41:14,319
certainly for some of this project we

00:41:13,119 --> 00:41:16,160
didn't have a direct

00:41:14,319 --> 00:41:17,359
search api to type since integration but

00:41:16,160 --> 00:41:20,560
i know that's something yeah well so

00:41:17,359 --> 00:41:23,040
in the project itself the the drupal

00:41:20,560 --> 00:41:24,800
entity is kind of like the

00:41:23,040 --> 00:41:26,960
it's the center around which everything

00:41:24,800 --> 00:41:30,000
else revolves

00:41:26,960 --> 00:41:31,359
so we make entities out of the car cars

00:41:30,000 --> 00:41:34,720
ireland api

00:41:31,359 --> 00:41:36,079
and as we do that we index them into

00:41:34,720 --> 00:41:39,520
type sense

00:41:36,079 --> 00:41:41,920
um we don't in that project use

00:41:39,520 --> 00:41:44,160
the search api integration because we

00:41:41,920 --> 00:41:44,160
weren't

00:41:44,560 --> 00:41:48,560
we just didn't have enough time and and

00:41:46,880 --> 00:41:52,480
it was actually sufficient

00:41:48,560 --> 00:41:56,640
for the particular needs of this project

00:41:52,480 --> 00:41:58,640
to just index on um

00:41:56,640 --> 00:42:00,240
sort of node create update and delete

00:41:58,640 --> 00:42:03,760
hooks which is what we

00:42:00,240 --> 00:42:08,160
what we've done um

00:42:03,760 --> 00:42:10,800
search api is definitely nicer and again

00:42:08,160 --> 00:42:11,599
there's been a little chat there and

00:42:10,800 --> 00:42:14,079
there's a link

00:42:11,599 --> 00:42:15,280
in the twitter thread at the top of the

00:42:14,079 --> 00:42:17,920
chat

00:42:15,280 --> 00:42:19,280
i've started work on that and people

00:42:17,920 --> 00:42:20,560
were asking about releases i have

00:42:19,280 --> 00:42:23,839
nothing like a release

00:42:20,560 --> 00:42:26,160
in view it's just

00:42:23,839 --> 00:42:28,319
just been a sort of thing in the spare

00:42:26,160 --> 00:42:31,359
time at the moment

00:42:28,319 --> 00:42:32,240
i imagine if we got other projects we

00:42:31,359 --> 00:42:34,079
could

00:42:32,240 --> 00:42:35,920
that required sort of type sense we

00:42:34,079 --> 00:42:37,680
could probably throw some resources at

00:42:35,920 --> 00:42:39,440
it but

00:42:37,680 --> 00:42:42,839
uh i'm putting it out in the community

00:42:39,440 --> 00:42:46,000
so hoping people will report bugs

00:42:42,839 --> 00:42:46,880
and yeah look like i i mean i can speak

00:42:46,000 --> 00:42:48,079
to that one a little bit

00:42:46,880 --> 00:42:49,520
it's definitely gonna be something we'll

00:42:48,079 --> 00:42:50,800
look at at a later phase in the project

00:42:49,520 --> 00:42:52,400
because right now we have an extra

00:42:50,800 --> 00:42:54,240
moving part that we don't need

00:42:52,400 --> 00:42:55,760
so we we have solar as a moving part

00:42:54,240 --> 00:42:58,480
that we don't need we could

00:42:55,760 --> 00:43:00,160
we're now confident at this phase that

00:42:58,480 --> 00:43:02,240
we could use type sense

00:43:00,160 --> 00:43:03,520
index for doing two different things and

00:43:02,240 --> 00:43:04,079
that's what christopher's project will

00:43:03,520 --> 00:43:06,240
let us do

00:43:04,079 --> 00:43:07,839
so at some point when the dust is

00:43:06,240 --> 00:43:09,520
settled and it's still settling it's

00:43:07,839 --> 00:43:11,119
this website's part of a larger piece of

00:43:09,520 --> 00:43:13,040
work you know it's not just the website

00:43:11,119 --> 00:43:13,599
let's say once it does settle down at

00:43:13,040 --> 00:43:15,440
all

00:43:13,599 --> 00:43:16,800
that'll be this the kind of thing that

00:43:15,440 --> 00:43:19,040
the decline in particular would

00:43:16,800 --> 00:43:20,720
would be interested in is removing

00:43:19,040 --> 00:43:21,839
moving parts that we can use to make the

00:43:20,720 --> 00:43:23,280
project simpler

00:43:21,839 --> 00:43:25,359
uh so that's something we'll definitely

00:43:23,280 --> 00:43:26,800
look at um

00:43:25,359 --> 00:43:28,800
so jason you touched on this slightly

00:43:26,800 --> 00:43:30,480
but uh maybe we'll run through it again

00:43:28,800 --> 00:43:32,160
and how we might how it might work is

00:43:30,480 --> 00:43:35,359
how well would type sense handle content

00:43:32,160 --> 00:43:37,839
restricted to specific groups or users

00:43:35,359 --> 00:43:38,880
so drupal has this module called content

00:43:37,839 --> 00:43:41,359
access which

00:43:38,880 --> 00:43:43,599
lets us restrict access by drupal user

00:43:41,359 --> 00:43:45,920
role or drupal group membership

00:43:43,599 --> 00:43:47,760
um how would we go about doing something

00:43:45,920 --> 00:43:50,319
like that in touch sense because

00:43:47,760 --> 00:43:52,079
at the front end all of the the queries

00:43:50,319 --> 00:43:52,960
go straight from the browser to the type

00:43:52,079 --> 00:43:54,800
sense

00:43:52,960 --> 00:43:56,800
engine or type sense cloud engine or if

00:43:54,800 --> 00:43:58,560
you were self hosting to the type sense

00:43:56,800 --> 00:44:00,240
uh server as well they don't buy they

00:43:58,560 --> 00:44:02,319
don't pass through drupal at all

00:44:00,240 --> 00:44:03,920
so how would we go about handling some

00:44:02,319 --> 00:44:06,160
sort of access control yeah so

00:44:03,920 --> 00:44:07,359
the way you typically handle that is add

00:44:06,160 --> 00:44:09,839
a

00:44:07,359 --> 00:44:11,920
new field to every document say for

00:44:09,839 --> 00:44:14,480
example accessible by user id

00:44:11,920 --> 00:44:15,359
and have a list of users that can access

00:44:14,480 --> 00:44:18,720
it or

00:44:15,359 --> 00:44:20,640
have a list of roles that can access

00:44:18,720 --> 00:44:22,640
that particular record and index that

00:44:20,640 --> 00:44:24,160
along with the rest of your data

00:44:22,640 --> 00:44:26,240
and then you can generate what's called

00:44:24,160 --> 00:44:28,880
the scoped api key

00:44:26,240 --> 00:44:30,560
with embedded filters in them that users

00:44:28,880 --> 00:44:32,960
can't change so for example you can

00:44:30,560 --> 00:44:36,079
generate a scope api key which says

00:44:32,960 --> 00:44:38,079
user id equals uh you know

00:44:36,079 --> 00:44:40,560
one one two three and then when you

00:44:38,079 --> 00:44:42,560
generate a scope api key and use that

00:44:40,560 --> 00:44:43,520
api key to make the calls from the

00:44:42,560 --> 00:44:46,640
browser

00:44:43,520 --> 00:44:47,359
then any uh search requests that are

00:44:46,640 --> 00:44:49,440
made

00:44:47,359 --> 00:44:50,960
that filter is automatically applied by

00:44:49,440 --> 00:44:52,160
type sense behind the scenes which means

00:44:50,960 --> 00:44:54,960
effectively

00:44:52,160 --> 00:44:55,520
that that api key can only access the

00:44:54,960 --> 00:44:57,760
data

00:44:55,520 --> 00:44:58,800
where user id equals one in the data set

00:44:57,760 --> 00:45:01,599
so your

00:44:58,800 --> 00:45:03,119
you can effectively create api keys that

00:45:01,599 --> 00:45:06,400
can only access certain

00:45:03,119 --> 00:45:08,480
records and you can still use those

00:45:06,400 --> 00:45:11,040
scope api keys from the browser

00:45:08,480 --> 00:45:12,640
directly to the uh to the typesense

00:45:11,040 --> 00:45:16,640
engine

00:45:12,640 --> 00:45:19,760
and you got five minutes left now okay

00:45:16,640 --> 00:45:20,720
okay cool thanks david um okay let's

00:45:19,760 --> 00:45:21,839
have a look some more of the other

00:45:20,720 --> 00:45:24,720
questions then

00:45:21,839 --> 00:45:24,720
ask those ones

00:45:25,119 --> 00:45:28,800
yes uh support for languages other than

00:45:27,680 --> 00:45:30,560
english

00:45:28,800 --> 00:45:32,000
uh i guess that's the question so uh

00:45:30,560 --> 00:45:34,800
right now we have support for

00:45:32,000 --> 00:45:36,160
any languages that use spaces for

00:45:34,800 --> 00:45:39,280
delimiting words

00:45:36,160 --> 00:45:41,200
uh which is a lot of languages

00:45:39,280 --> 00:45:42,800
but specifically we currently don't have

00:45:41,200 --> 00:45:45,760
support for

00:45:42,800 --> 00:45:48,400
lang cjk languages so chinese japanese

00:45:45,760 --> 00:45:49,520
korean which don't have spaces for words

00:45:48,400 --> 00:45:50,880
that's something that we're working on

00:45:49,520 --> 00:45:52,240
right now we have to build a custom

00:45:50,880 --> 00:45:53,760
tokenizer for it

00:45:52,240 --> 00:45:55,599
uh we're working on it right now should

00:45:53,760 --> 00:45:57,040
be out uh

00:45:55,599 --> 00:45:59,040
all right we actually have a beta for

00:45:57,040 --> 00:46:02,000
thai and korean

00:45:59,040 --> 00:46:05,440
out right now but japanese is something

00:46:02,000 --> 00:46:05,440
that we're about to start working on

00:46:08,960 --> 00:46:11,839
okay let's see

00:46:13,599 --> 00:46:16,880
okay i'll ask the question and see if it

00:46:15,440 --> 00:46:18,000
makes sense then are there concerns

00:46:16,880 --> 00:46:19,520
around the type sense

00:46:18,000 --> 00:46:21,680
sas business model for funding open

00:46:19,520 --> 00:46:23,200
source projects and large hosting

00:46:21,680 --> 00:46:23,440
providers bringing hosting into their

00:46:23,200 --> 00:46:28,079
own

00:46:23,440 --> 00:46:30,240
yeah i mean this is a good question uh

00:46:28,079 --> 00:46:32,880
i would say at the stage that we are in

00:46:30,240 --> 00:46:33,359
uh i would actually be thrilled if if

00:46:32,880 --> 00:46:36,319
more

00:46:33,359 --> 00:46:36,960
folks start offering uh uh hosting

00:46:36,319 --> 00:46:39,680
around us

00:46:36,960 --> 00:46:40,400
uh and i'd also say i'd love to partner

00:46:39,680 --> 00:46:43,040
with ac

00:46:40,400 --> 00:46:44,640
folks to actually build uh you know

00:46:43,040 --> 00:46:47,119
hosted services on top of us

00:46:44,640 --> 00:46:48,800
as well uh again if if we're all trying

00:46:47,119 --> 00:46:51,599
to build a community

00:46:48,800 --> 00:46:52,720
around type sense i'm happy to help

00:46:51,599 --> 00:46:54,800
share the value

00:46:52,720 --> 00:46:55,920
created with uh with more folks who

00:46:54,800 --> 00:46:58,079
might want to

00:46:55,920 --> 00:46:59,359
uh build a sas offering on top of type

00:46:58,079 --> 00:47:02,800
10 so i look at it

00:46:59,359 --> 00:47:06,240
more as a an opportunity for partnership

00:47:02,800 --> 00:47:09,119
uh rather than a a competition because i

00:47:06,240 --> 00:47:09,680
i believe the market is large enough and

00:47:09,119 --> 00:47:11,680
there are

00:47:09,680 --> 00:47:13,280
you know interesting niche offerings

00:47:11,680 --> 00:47:14,319
that different sas providers can bring

00:47:13,280 --> 00:47:16,400
to the table

00:47:14,319 --> 00:47:17,760
that we as a search infrastructure

00:47:16,400 --> 00:47:20,960
provider

00:47:17,760 --> 00:47:22,839
possibly go after uh uh you know for

00:47:20,960 --> 00:47:25,680
example there might be

00:47:22,839 --> 00:47:27,520
specific uh uh content related things

00:47:25,680 --> 00:47:29,359
that might be needed for on top of

00:47:27,520 --> 00:47:31,520
uh search so when we're building

00:47:29,359 --> 00:47:32,240
typesense cloud we're gearing it towards

00:47:31,520 --> 00:47:35,359
developers

00:47:32,240 --> 00:47:37,280
but there's a lot of opportunity on top

00:47:35,359 --> 00:47:39,599
of type sense but geared towards

00:47:37,280 --> 00:47:41,119
you know other different uh business

00:47:39,599 --> 00:47:43,280
domains as well so

00:47:41,119 --> 00:47:44,400
i'd say i'd love to partner and i see

00:47:43,280 --> 00:47:47,680
that as a

00:47:44,400 --> 00:47:49,920
as to help grow the typesense community

00:47:47,680 --> 00:47:51,599
through uh through helping others build

00:47:49,920 --> 00:47:52,880
sas products as well on top of types

00:47:51,599 --> 00:47:55,440
in addition to consumer facing

00:47:52,880 --> 00:47:55,440
experiences

00:47:57,119 --> 00:48:01,200
okay good stuff um how are we doing on

00:47:59,920 --> 00:48:06,160
time i want to make sure we

00:48:01,200 --> 00:48:06,960
don't run over where do we

00:48:06,160 --> 00:48:09,599
i think i've got through all the

00:48:06,960 --> 00:48:11,839
questions actually oh yeah two minutes

00:48:09,599 --> 00:48:13,040
two minutes okay well then let's

00:48:11,839 --> 00:48:16,240
see if there's any more last minute

00:48:13,040 --> 00:48:16,240
questions before we get caught

00:48:17,599 --> 00:48:21,119
oh i see one other question

00:48:21,760 --> 00:48:27,680
one question about uh scale with three

00:48:24,400 --> 00:48:27,680
million pieces of data

00:48:28,400 --> 00:48:32,319
if i missed that one oh yeah sorry yeah

00:48:30,319 --> 00:48:34,160
so how can five cents

00:48:32,319 --> 00:48:35,680
scale will like using three million

00:48:34,160 --> 00:48:37,119
pieces of data that keeps getting

00:48:35,680 --> 00:48:39,599
indexed and re-indexed

00:48:37,119 --> 00:48:40,480
how long would it take for that data for

00:48:39,599 --> 00:48:42,079
type since

00:48:40,480 --> 00:48:43,119
to index that data for tight sense to be

00:48:42,079 --> 00:48:44,240
able to search actually i don't ask

00:48:43,119 --> 00:48:45,359
christopher with this one

00:48:44,240 --> 00:48:47,599
because this was one that we were

00:48:45,359 --> 00:48:48,960
concerned about too is it weird

00:48:47,599 --> 00:48:51,280
thousand records with a relatively

00:48:48,960 --> 00:48:52,880
volatile data set and we had to get it

00:48:51,280 --> 00:48:53,440
into drupal and get it out to type sense

00:48:52,880 --> 00:48:56,160
so

00:48:53,440 --> 00:48:58,000
how is that working so um i actually

00:48:56,160 --> 00:48:59,680
have a number in my head from my

00:48:58,000 --> 00:49:03,920
underpowered my

00:48:59,680 --> 00:49:07,119
giga g gram dev server um

00:49:03,920 --> 00:49:11,280
we i was indexing

00:49:07,119 --> 00:49:13,200
um 10 dribble notes a second

00:49:11,280 --> 00:49:15,839
on the same machine that's actually

00:49:13,200 --> 00:49:18,240
running the drupal website

00:49:15,839 --> 00:49:20,400
which isn't very impressive but that's a

00:49:18,240 --> 00:49:20,800
lot slower than what we have everywhere

00:49:20,400 --> 00:49:23,839
else

00:49:20,800 --> 00:49:25,760
in when i actually

00:49:23,839 --> 00:49:27,680
initially when we were actually timing

00:49:25,760 --> 00:49:30,880
it from inside the

00:49:27,680 --> 00:49:32,640
inside the drupal hooks we couldn't

00:49:30,880 --> 00:49:34,880
really determine that there was like

00:49:32,640 --> 00:49:36,720
extra time added between just sort of

00:49:34,880 --> 00:49:38,480
creating the node in the first place or

00:49:36,720 --> 00:49:40,640
creating or updating or

00:49:38,480 --> 00:49:42,319
uh deleting the node in the first place

00:49:40,640 --> 00:49:45,839
it was

00:49:42,319 --> 00:49:45,839
small let's just say

00:49:46,000 --> 00:49:52,240
like so the the thing about yeah so

00:49:49,520 --> 00:49:54,160
uh our content is there's churn but it's

00:49:52,240 --> 00:49:56,240
sort of a note at a time it's not ten

00:49:54,160 --> 00:49:59,839
thousand nodes at a time

00:49:56,240 --> 00:50:01,520
or i mean yeah yeah so

00:49:59,839 --> 00:50:03,760
we go what two thousand every five

00:50:01,520 --> 00:50:05,760
minutes is sort of what we limited that

00:50:03,760 --> 00:50:08,079
uh at the moment or two thousand every

00:50:05,760 --> 00:50:09,599
three minutes and that that

00:50:08,079 --> 00:50:11,200
that is absolutely no problem especially

00:50:09,599 --> 00:50:12,800
like as christopher said those kinds of

00:50:11,200 --> 00:50:15,520
needs are on his

00:50:12,800 --> 00:50:15,520
no offense questions

00:50:18,000 --> 00:50:22,319
the production side is is running on on

00:50:20,079 --> 00:50:24,559
a decently spectacular setup so

00:50:22,319 --> 00:50:26,240
that's not an issue at all the one thing

00:50:24,559 --> 00:50:27,359
we did find out though is that it all

00:50:26,240 --> 00:50:29,760
depends on how big

00:50:27,359 --> 00:50:30,480
the data you put into your index is so

00:50:29,760 --> 00:50:32,960
our

00:50:30,480 --> 00:50:34,160
our site and jason and christopher

00:50:32,960 --> 00:50:35,599
quickly wrong we might have a lot of

00:50:34,160 --> 00:50:37,280
records but actually

00:50:35,599 --> 00:50:38,960
the size of the data that we store in

00:50:37,280 --> 00:50:40,720
typesense is actually quite small even

00:50:38,960 --> 00:50:43,040
for 50 000 records is that right there

00:50:40,720 --> 00:50:45,440
are a lot of fields in each record but

00:50:43,040 --> 00:50:47,200
none of them has only about two of them

00:50:45,440 --> 00:50:48,480
have anything more than

00:50:47,200 --> 00:50:51,200
you know three or three or four words

00:50:48,480 --> 00:50:53,040
worth of content to them

00:50:51,200 --> 00:50:54,559
yeah i'd say i mean we could definitely

00:50:53,040 --> 00:50:56,160
handle much larger

00:50:54,559 --> 00:50:58,079
traffic like i mentioned there's the 32

00:50:56,160 --> 00:51:00,800
million data set

00:50:58,079 --> 00:51:02,640
record data set that i tried it with uh

00:51:00,800 --> 00:51:04,559
specifically i was i benchmarked it with

00:51:02,640 --> 00:51:06,480
the two million recipes data set with

00:51:04,559 --> 00:51:08,400
titles and ingredient names

00:51:06,480 --> 00:51:10,000
and that took about three minutes to

00:51:08,400 --> 00:51:12,720
index the entire two million

00:51:10,000 --> 00:51:14,640
uh an odd data set uh so indexing plus

00:51:12,720 --> 00:51:16,960
free indexing if you if you wanted to so

00:51:14,640 --> 00:51:18,319
we've built it to be able to support

00:51:16,960 --> 00:51:21,200
large volume of ingests

00:51:18,319 --> 00:51:22,480
and regests as well oh i have a question

00:51:21,200 --> 00:51:25,839
about indexing

00:51:22,480 --> 00:51:28,400
yes uh in typesensecloud can we index

00:51:25,839 --> 00:51:30,240
with uh just with a direct import like

00:51:28,400 --> 00:51:34,000
with a large json file

00:51:30,240 --> 00:51:36,160
oh yes absolutely yep anyway

00:51:34,000 --> 00:51:38,240
i didn't know if the service allowed it

00:51:36,160 --> 00:51:39,280
yep yeah for sure you could upload json

00:51:38,240 --> 00:51:41,680
documents up to

00:51:39,280 --> 00:51:43,440
three gigabytes is what i've tested with

00:51:41,680 --> 00:51:48,559
uh so if you find larger files i'd

00:51:43,440 --> 00:51:48,559
love to know right

00:51:48,839 --> 00:51:52,960
okay

00:51:50,880 --> 00:51:54,559
okay good stuff look i think we'll we'll

00:51:52,960 --> 00:51:56,960
wrap it up there i think uh

00:51:54,559 --> 00:52:00,319
david are we yeah we're good thank you

00:51:56,960 --> 00:52:00,319

YouTube URL: https://www.youtube.com/watch?v=PuvBbUtk-PU


