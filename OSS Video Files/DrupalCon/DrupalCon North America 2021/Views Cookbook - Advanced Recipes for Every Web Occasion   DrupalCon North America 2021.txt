Title: Views Cookbook - Advanced Recipes for Every Web Occasion   DrupalCon North America 2021
Publication date: 2021-05-27
Playlist: DrupalCon North America 2021
Description: 
	This session will supply you with all "ingredients" you need for Views recipes of every flavor to provide umami experience on your websites.
Captions: 
	00:00:00,560 --> 00:00:06,160
all right so the first presentation

00:00:03,120 --> 00:00:07,919
uh the presentation today is about use

00:00:06,160 --> 00:00:10,240
cookbook advanced recipes

00:00:07,919 --> 00:00:12,400
for every web occasion my name is anna

00:00:10,240 --> 00:00:14,240
mikhailova i'm associate director of

00:00:12,400 --> 00:00:16,880
technology at kalamuna

00:00:14,240 --> 00:00:17,279
and you can connect with me uh by email

00:00:16,880 --> 00:00:19,520
uh

00:00:17,279 --> 00:00:20,400
just a little bit about myself i'm a

00:00:19,520 --> 00:00:22,640
drupal 7

00:00:20,400 --> 00:00:23,600
natal class certified with master on my

00:00:22,640 --> 00:00:26,720
road to

00:00:23,600 --> 00:00:29,439
drupal 9 gridmaster uh i'm a nature

00:00:26,720 --> 00:00:31,439
enthusiast and a dog lover so if i'm not

00:00:29,439 --> 00:00:34,000
pushing pixels and writing code

00:00:31,439 --> 00:00:35,600
i am outside probably taking some

00:00:34,000 --> 00:00:38,079
pictures of flowers

00:00:35,600 --> 00:00:38,800
and i have a dog named simba a fun fact

00:00:38,079 --> 00:00:41,600
is uh

00:00:38,800 --> 00:00:43,680
he's named after a cat so you can

00:00:41,600 --> 00:00:44,079
comment in the chat if you're a dog or

00:00:43,680 --> 00:00:46,480
cat

00:00:44,079 --> 00:00:48,160
person or maybe laser it's all right

00:00:46,480 --> 00:00:50,800
everybody is welcome here

00:00:48,160 --> 00:00:52,559
uh so if you would like to connect with

00:00:50,800 --> 00:00:54,480
me after the session please

00:00:52,559 --> 00:00:57,120
uh feel free to pin me on twitter as

00:00:54,480 --> 00:00:59,199
well my handlers at samiatik

00:00:57,120 --> 00:01:00,320
and let's get rolling i worked for

00:00:59,199 --> 00:01:02,000
calamuna and

00:01:00,320 --> 00:01:03,520
it happened to be that we're currently

00:01:02,000 --> 00:01:05,680
hiring a hiring for

00:01:03,520 --> 00:01:07,840
the majority of roles from the elite

00:01:05,680 --> 00:01:11,200
frontend developers to them

00:01:07,840 --> 00:01:14,159
um wordpress lead developers

00:01:11,200 --> 00:01:14,560
and also begun developers and architects

00:01:14,159 --> 00:01:17,840
uh

00:01:14,560 --> 00:01:19,520
please find our job posting canal

00:01:17,840 --> 00:01:22,479
website or connect with me

00:01:19,520 --> 00:01:24,400
directly and i will be happy to talk to

00:01:22,479 --> 00:01:26,799
you about those opportunities

00:01:24,400 --> 00:01:28,960
without further ado what they will be

00:01:26,799 --> 00:01:29,759
covering today so today we will be

00:01:28,960 --> 00:01:32,720
talking about

00:01:29,759 --> 00:01:35,280
views but about views in depth so we'll

00:01:32,720 --> 00:01:37,600
talk about views build and render cycle

00:01:35,280 --> 00:01:40,079
in the greater details we'll talk about

00:01:37,600 --> 00:01:41,680
nukes hooks and real world scenarios

00:01:40,079 --> 00:01:44,079
it's important to understand not just

00:01:41,680 --> 00:01:46,720
what hooks are available for you

00:01:44,079 --> 00:01:47,759
but also all the real world scenarios

00:01:46,720 --> 00:01:50,799
that might go

00:01:47,759 --> 00:01:52,320
uh for your requirements and then which

00:01:50,799 --> 00:01:54,479
hook to use for every

00:01:52,320 --> 00:01:57,119
real-world scenario and we will cover

00:01:54,479 --> 00:01:59,360
views plugins and which one to use

00:01:57,119 --> 00:02:01,280
and when and what would you need to

00:01:59,360 --> 00:02:03,360
define each of the plugins

00:02:01,280 --> 00:02:05,920
so let's get rolling we will start with

00:02:03,360 --> 00:02:08,239
views views and run the cycle

00:02:05,920 --> 00:02:09,759
all right we use built-in render cycle

00:02:08,239 --> 00:02:12,319
consists of four stages

00:02:09,759 --> 00:02:14,400
there are preview stage uh build stage

00:02:12,319 --> 00:02:15,040
execution stage and render stage and we

00:02:14,400 --> 00:02:18,400
will cover

00:02:15,040 --> 00:02:20,480
all them in details in the second

00:02:18,400 --> 00:02:22,160
the previous stages the view object is

00:02:20,480 --> 00:02:24,400
just about to be processed so

00:02:22,160 --> 00:02:27,280
view in a nutshell under the hood is an

00:02:24,400 --> 00:02:29,840
object and it's a php object

00:02:27,280 --> 00:02:32,160
and this object is about to be processed

00:02:29,840 --> 00:02:34,239
so it's a good time to add new arguments

00:02:32,160 --> 00:02:35,040
uh to the arguments alright so update

00:02:34,239 --> 00:02:38,239
your contextual

00:02:35,040 --> 00:02:39,440
filters switch the active display uh so

00:02:38,239 --> 00:02:41,840
basically

00:02:39,440 --> 00:02:43,840
after the conditions with which this

00:02:41,840 --> 00:02:46,879
object will be processed so that's a

00:02:43,840 --> 00:02:50,160
fantastic time for that

00:02:46,879 --> 00:02:51,840
the next stage is build stage so view

00:02:50,160 --> 00:02:54,160
object is being processed so

00:02:51,840 --> 00:02:55,680
the endless running the displays are

00:02:54,160 --> 00:02:57,840
being attached

00:02:55,680 --> 00:03:00,480
and arguments are being processed and

00:02:57,840 --> 00:03:02,720
the view is being actually constructed

00:03:00,480 --> 00:03:04,720
at that moment query isn't built yet

00:03:02,720 --> 00:03:06,480
just the object is so we get

00:03:04,720 --> 00:03:08,319
everything like if you're thinking of a

00:03:06,480 --> 00:03:09,760
view as building a house

00:03:08,319 --> 00:03:12,000
at this stage we are building the

00:03:09,760 --> 00:03:13,040
foundation so in the first stage in a

00:03:12,000 --> 00:03:14,959
pre-built one

00:03:13,040 --> 00:03:16,720
we will kind of draft in the plan you

00:03:14,959 --> 00:03:17,599
know like an architectural mock-up of

00:03:16,720 --> 00:03:19,360
the house

00:03:17,599 --> 00:03:21,280
now they actually started building the

00:03:19,360 --> 00:03:23,599
foundation for it but the walls are not

00:03:21,280 --> 00:03:24,239
there yet so our query isn't being built

00:03:23,599 --> 00:03:26,640
yet

00:03:24,239 --> 00:03:27,360
and uh you know the frame isn't there

00:03:26,640 --> 00:03:29,440
yet

00:03:27,360 --> 00:03:31,280
uh displays are attached meaning that

00:03:29,440 --> 00:03:32,959
the foundation is fully built and we

00:03:31,280 --> 00:03:34,720
have a basement and everything that's

00:03:32,959 --> 00:03:35,680
needed there and we started putting in

00:03:34,720 --> 00:03:39,040
the

00:03:35,680 --> 00:03:41,519
you know all the other communications

00:03:39,040 --> 00:03:42,239
by the end of the space the query is

00:03:41,519 --> 00:03:44,159
built so

00:03:42,239 --> 00:03:46,319
we finished the foundation and we

00:03:44,159 --> 00:03:49,040
started building their um

00:03:46,319 --> 00:03:50,959
you know the walls of the house and it's

00:03:49,040 --> 00:03:52,799
ready to be executed so we're ready to

00:03:50,959 --> 00:03:55,280
start putting finishing touches and

00:03:52,799 --> 00:03:58,319
build the house above the ground

00:03:55,280 --> 00:04:01,200
and the execution state we have query

00:03:58,319 --> 00:04:02,879
uh that is uh being executed and once

00:04:01,200 --> 00:04:04,560
the query is being executed that's

00:04:02,879 --> 00:04:05,920
actually when we started putting in

00:04:04,560 --> 00:04:08,560
siding and you know

00:04:05,920 --> 00:04:10,560
windows and doors and everything else

00:04:08,560 --> 00:04:12,560
and they actually have rules now because

00:04:10,560 --> 00:04:15,120
we have our array of results

00:04:12,560 --> 00:04:17,040
that has being constructed on the next

00:04:15,120 --> 00:04:19,359
stage we have a render stage in the

00:04:17,040 --> 00:04:20,239
render stage we have two sub-stages

00:04:19,359 --> 00:04:23,040
pre-render

00:04:20,239 --> 00:04:24,160
and a pulse renderer in the prerender we

00:04:23,040 --> 00:04:27,440
are processing

00:04:24,160 --> 00:04:29,440
uh handles all plugins and

00:04:27,440 --> 00:04:31,600
we haven't rendered anything yet but we

00:04:29,440 --> 00:04:34,560
kind of starting processing since up so

00:04:31,600 --> 00:04:36,320
think of it as uh you know draft

00:04:34,560 --> 00:04:38,800
finishing so you kind of have draft

00:04:36,320 --> 00:04:42,160
finishing on the walls maybe your

00:04:38,800 --> 00:04:44,240
uh you know drive wall is putting up but

00:04:42,160 --> 00:04:45,360
there is no finishing paint yet there is

00:04:44,240 --> 00:04:47,680
nothing like that

00:04:45,360 --> 00:04:49,759
in the post render cycle we actually

00:04:47,680 --> 00:04:51,600
rendered the results and ready to output

00:04:49,759 --> 00:04:53,759
it so that's like putting a paint

00:04:51,600 --> 00:04:55,759
coat on top of your holes that's

00:04:53,759 --> 00:04:59,280
happening in the post render cycle

00:04:55,759 --> 00:05:02,000
and then the view is being rendered so

00:04:59,280 --> 00:05:04,240
after that let's talk about hooks and

00:05:02,000 --> 00:05:06,720
real world scenarios

00:05:04,240 --> 00:05:08,840
preview hooks so one of the most common

00:05:06,720 --> 00:05:10,160
preview hooks of hugh hook's view

00:05:08,840 --> 00:05:12,479
preview

00:05:10,160 --> 00:05:14,479
so you would use it for conditionally

00:05:12,479 --> 00:05:16,080
switching active display so if you have

00:05:14,479 --> 00:05:17,840
different filters i'll tell you a

00:05:16,080 --> 00:05:21,919
scenario for example

00:05:17,840 --> 00:05:24,960
uh you have a site with a different

00:05:21,919 --> 00:05:27,520
conditions like a personalization side

00:05:24,960 --> 00:05:29,280
and you have a lot of filters for this

00:05:27,520 --> 00:05:31,520
specific view display so

00:05:29,280 --> 00:05:32,639
maybe you have like five six filters you

00:05:31,520 --> 00:05:34,880
have groups

00:05:32,639 --> 00:05:36,400
and you have those filters kind of end

00:05:34,880 --> 00:05:38,400
and all conditions so it's very

00:05:36,400 --> 00:05:40,720
complicated logic and filters

00:05:38,400 --> 00:05:41,840
so if you start thinking about doing

00:05:40,720 --> 00:05:43,840
query outer

00:05:41,840 --> 00:05:46,000
that may or may not go so well because

00:05:43,840 --> 00:05:48,560
you have so many nested conditions and

00:05:46,000 --> 00:05:50,320
difficult to drill down to just this one

00:05:48,560 --> 00:05:52,479
and it's just kind of

00:05:50,320 --> 00:05:53,919
difficult to build a generic alteration

00:05:52,479 --> 00:05:56,319
for the query

00:05:53,919 --> 00:05:57,919
but you may want to alter just one thing

00:05:56,319 --> 00:05:59,759
so let's say if it is a

00:05:57,919 --> 00:06:01,360
different context so in a different

00:05:59,759 --> 00:06:03,919
region for example

00:06:01,360 --> 00:06:05,840
uh you may want to just render a view

00:06:03,919 --> 00:06:07,360
display for canada versus the view

00:06:05,840 --> 00:06:09,520
display for us

00:06:07,360 --> 00:06:12,560
in this case you can use hook views

00:06:09,520 --> 00:06:14,800
preview to switch active display and

00:06:12,560 --> 00:06:16,960
that will allow you to not worry about

00:06:14,800 --> 00:06:18,000
the filters and specify different filter

00:06:16,960 --> 00:06:20,160
criteria

00:06:18,000 --> 00:06:22,160
below the display it only works well

00:06:20,160 --> 00:06:23,840
obviously if you have a limited amount

00:06:22,160 --> 00:06:26,319
of these conditions because

00:06:23,840 --> 00:06:27,840
if you were to have 20 different regions

00:06:26,319 --> 00:06:29,919
having 20 displacement

00:06:27,840 --> 00:06:31,840
you can become performance intense

00:06:29,919 --> 00:06:34,000
however

00:06:31,840 --> 00:06:35,199
if you have like three to five uh that's

00:06:34,000 --> 00:06:38,080
the optimal uh

00:06:35,199 --> 00:06:40,000
solution and if you don't have to and as

00:06:38,080 --> 00:06:42,160
its filters are significantly different

00:06:40,000 --> 00:06:45,039
and you don't want to write the query

00:06:42,160 --> 00:06:46,160
then you can definitely uh just do a

00:06:45,039 --> 00:06:48,720
hook view previews

00:06:46,160 --> 00:06:50,479
to swap this place another great uh

00:06:48,720 --> 00:06:53,280
example for that would be

00:06:50,479 --> 00:06:55,039
if you were to have a search view so

00:06:53,280 --> 00:06:57,199
sometimes i have a search for you

00:06:55,039 --> 00:06:58,560
and the requirements is if the search

00:06:57,199 --> 00:07:01,840
returns no result

00:06:58,560 --> 00:07:03,599
refine the filter with the default uh

00:07:01,840 --> 00:07:04,240
display that might be attached to the

00:07:03,599 --> 00:07:07,120
view

00:07:04,240 --> 00:07:09,199
or refine it with a different filter so

00:07:07,120 --> 00:07:12,080
for example a user is looking

00:07:09,199 --> 00:07:13,120
for you know books of a certain genre

00:07:12,080 --> 00:07:14,800
and they put

00:07:13,120 --> 00:07:17,199
too narrow and the facets return no

00:07:14,800 --> 00:07:19,120
results you can actually have a backup

00:07:17,199 --> 00:07:21,360
display that is powered not by

00:07:19,120 --> 00:07:23,039
search api but actual just a few

00:07:21,360 --> 00:07:25,120
listings that can be fired

00:07:23,039 --> 00:07:26,960
out of it all still power it by search

00:07:25,120 --> 00:07:29,599
api but just with a

00:07:26,960 --> 00:07:31,440
more relaxed kind of criterias so that

00:07:29,599 --> 00:07:32,080
you can say you can also look or your

00:07:31,440 --> 00:07:34,800
search yield

00:07:32,080 --> 00:07:36,160
no result but you can check those

00:07:34,800 --> 00:07:39,199
results in case they are of

00:07:36,160 --> 00:07:41,759
interest so that's another

00:07:39,199 --> 00:07:42,720
option for using uh switching the active

00:07:41,759 --> 00:07:45,759
displays

00:07:42,720 --> 00:07:48,240
uh you can update the contextual filters

00:07:45,759 --> 00:07:49,919
as well on this hook so sometimes you

00:07:48,240 --> 00:07:52,319
know you have something a little bit

00:07:49,919 --> 00:07:54,960
more elaborate than a typical taxonomy

00:07:52,319 --> 00:07:57,120
and views doesn't provide the processor

00:07:54,960 --> 00:07:58,160
for it sometimes you could definitely

00:07:57,120 --> 00:08:00,160
write your uh

00:07:58,160 --> 00:08:02,560
your custom contextual filter and that's

00:08:00,160 --> 00:08:04,560
an option but if you don't want to

00:08:02,560 --> 00:08:06,319
write the entire filter and you just

00:08:04,560 --> 00:08:07,440
need to process the result a little bit

00:08:06,319 --> 00:08:09,520
just to help you

00:08:07,440 --> 00:08:11,199
just a little bit like for example it's

00:08:09,520 --> 00:08:12,240
still in taxonomy but instead of a

00:08:11,199 --> 00:08:14,479
taxonomy

00:08:12,240 --> 00:08:16,400
you need a value of a field this is a

00:08:14,479 --> 00:08:18,240
hook for you you can process

00:08:16,400 --> 00:08:20,800
the argument and pass that correct

00:08:18,240 --> 00:08:23,039
contextual filter to the arguments array

00:08:20,800 --> 00:08:25,280
and take the full advantage of your

00:08:23,039 --> 00:08:27,680
taxonometer

00:08:25,280 --> 00:08:29,520
right the next one is build hooks we are

00:08:27,680 --> 00:08:30,800
moving into the build phase and there

00:08:29,520 --> 00:08:32,719
are two main hooks

00:08:30,800 --> 00:08:34,560
there are more hooks that are happening

00:08:32,719 --> 00:08:36,560
on this face but we are focusing on the

00:08:34,560 --> 00:08:39,760
ones that are more commonly used

00:08:36,560 --> 00:08:41,200
so hooks used to rebuild and hook views

00:08:39,760 --> 00:08:45,040
uh query ultra

00:08:41,200 --> 00:08:47,519
so in the preview those are altering the

00:08:45,040 --> 00:08:49,279
list of attachment displays so if you go

00:08:47,519 --> 00:08:51,680
to use our attachment so

00:08:49,279 --> 00:08:53,040
one display is an attachment of another

00:08:51,680 --> 00:08:55,600
this is your chance to

00:08:53,040 --> 00:08:56,480
resource and reattach them again you can

00:08:55,600 --> 00:08:58,880
kind of

00:08:56,480 --> 00:09:01,200
pre-query uh the view to check the

00:08:58,880 --> 00:09:02,240
results and based on that re-attach the

00:09:01,200 --> 00:09:03,760
displays

00:09:02,240 --> 00:09:05,760
so it's not switching the active

00:09:03,760 --> 00:09:06,800
displays attaching additional displays

00:09:05,760 --> 00:09:10,480
in here

00:09:06,800 --> 00:09:12,480
another one is uh cook use views query

00:09:10,480 --> 00:09:13,519
author which allows you to obviously

00:09:12,480 --> 00:09:15,839
alter the query

00:09:13,519 --> 00:09:17,839
add condition source and grouping the

00:09:15,839 --> 00:09:19,839
most common use case would be

00:09:17,839 --> 00:09:21,839
you know if you have a lot of joins and

00:09:19,839 --> 00:09:22,800
you start seeing duplication and instead

00:09:21,839 --> 00:09:25,680
of

00:09:22,800 --> 00:09:27,839
using aggregation uh on the views ui it

00:09:25,680 --> 00:09:30,000
might think sometimes a little bit

00:09:27,839 --> 00:09:31,200
uh difficult to construct an aggregated

00:09:30,000 --> 00:09:33,440
query because

00:09:31,200 --> 00:09:36,080
uh you have to put the segregation

00:09:33,440 --> 00:09:37,680
condition on every single field and it

00:09:36,080 --> 00:09:40,080
may or may not be

00:09:37,680 --> 00:09:43,200
working as expected so the easiest would

00:09:40,080 --> 00:09:46,480
be to go in and alter the query object

00:09:43,200 --> 00:09:49,519
to add group by writing the query out

00:09:46,480 --> 00:09:50,000
another great example would be to auto

00:09:49,519 --> 00:09:52,320
query

00:09:50,000 --> 00:09:54,399
and pass some additional condition or

00:09:52,320 --> 00:09:56,800
process some different logics and

00:09:54,399 --> 00:09:57,760
remove certain filters or add source

00:09:56,800 --> 00:10:01,200
based on

00:09:57,760 --> 00:10:02,959
uh other business logic so that's uh

00:10:01,200 --> 00:10:05,519
the situation when you would use hook

00:10:02,959 --> 00:10:07,600
views query keep in mind that this

00:10:05,519 --> 00:10:10,800
returns a little bit different queries

00:10:07,600 --> 00:10:14,480
uh structure based on who provides uh

00:10:10,800 --> 00:10:16,880
uh views uh underline or who provides

00:10:14,480 --> 00:10:19,440
views uh content so if you were to use

00:10:16,880 --> 00:10:20,959
search api in search index for the query

00:10:19,440 --> 00:10:22,560
the query will look a little bit

00:10:20,959 --> 00:10:24,880
different less than a video to the

00:10:22,560 --> 00:10:28,720
content because your gpi has a different

00:10:24,880 --> 00:10:29,839
video object so uh if you go to use this

00:10:28,720 --> 00:10:33,279
alteration

00:10:29,839 --> 00:10:34,720
um and you want to kind of cascade it to

00:10:33,279 --> 00:10:37,760
multiple views so

00:10:34,720 --> 00:10:38,399
uh export your query object as a ksm or

00:10:37,760 --> 00:10:40,560
king

00:10:38,399 --> 00:10:42,720
through the well module and check that

00:10:40,560 --> 00:10:45,200
the structure is still the same so that

00:10:42,720 --> 00:10:47,920
your logic continues to work throughout

00:10:45,200 --> 00:10:51,360
all the displays and on different fields

00:10:47,920 --> 00:10:53,760
the next one is execute folks uh so

00:10:51,360 --> 00:10:55,839
who use pre-institute and who could use

00:10:53,760 --> 00:10:58,480
post-execute they're like twin brothers

00:10:55,839 --> 00:11:02,240
one is acting on the array of results

00:10:58,480 --> 00:11:05,519
prior to it to query and another one

00:11:02,240 --> 00:11:07,920
after the query so uh this is the last

00:11:05,519 --> 00:11:09,120
opportunity to out review subject before

00:11:07,920 --> 00:11:12,399
periscope

00:11:09,120 --> 00:11:14,800
so uh basically the last time

00:11:12,399 --> 00:11:18,160
for you to make any alterations to your

00:11:14,800 --> 00:11:20,720
view construction and tell drupal that

00:11:18,160 --> 00:11:21,440
that it needs to be built in a different

00:11:20,720 --> 00:11:23,600
way

00:11:21,440 --> 00:11:24,800
and the next one is hook views positive

00:11:23,600 --> 00:11:27,519
execute

00:11:24,800 --> 00:11:29,680
so this one has information about of the

00:11:27,519 --> 00:11:30,560
results so that's fantastic if you go to

00:11:29,680 --> 00:11:34,079
build custom

00:11:30,560 --> 00:11:36,720
pager or if you were to build a custom

00:11:34,079 --> 00:11:37,920
uh rendering open rendering operations

00:11:36,720 --> 00:11:40,240
this is when you will

00:11:37,920 --> 00:11:41,360
know exactly yours all of the results

00:11:40,240 --> 00:11:43,839
and you can

00:11:41,360 --> 00:11:44,880
add additional variables about them and

00:11:43,839 --> 00:11:47,680
messaging about

00:11:44,880 --> 00:11:49,600
them if you go to build custom pages

00:11:47,680 --> 00:11:50,880
that's great because you can just render

00:11:49,600 --> 00:11:53,680
all of them and

00:11:50,880 --> 00:11:54,800
construct pages you'd like uh this is

00:11:53,680 --> 00:11:57,519
also

00:11:54,800 --> 00:11:59,360
the perfect hook to hook in and update

00:11:57,519 --> 00:12:01,600
you know results method

00:11:59,360 --> 00:12:02,720
or attach something else around the

00:12:01,600 --> 00:12:04,880
custom markup

00:12:02,720 --> 00:12:05,839
if you have no results so lots of

00:12:04,880 --> 00:12:08,639
possibilities

00:12:05,839 --> 00:12:10,800
in there the next one is render hooks

00:12:08,639 --> 00:12:12,480
again two twin browsers pre-render and

00:12:10,800 --> 00:12:15,360
post render

00:12:12,480 --> 00:12:17,519
uh this is uh the ones the prerender one

00:12:15,360 --> 00:12:19,360
you will use prior to rendering so you

00:12:17,519 --> 00:12:21,120
don't have a rendered markup yet you

00:12:19,360 --> 00:12:21,600
have all of your results they've been

00:12:21,120 --> 00:12:24,639
built

00:12:21,600 --> 00:12:25,519
and uh they're processed by the field

00:12:24,639 --> 00:12:27,360
handlers

00:12:25,519 --> 00:12:29,440
but they haven't been rendered yet so

00:12:27,360 --> 00:12:30,800
you have render arrays instead of

00:12:29,440 --> 00:12:33,279
rendered markup

00:12:30,800 --> 00:12:34,160
uh um like all the other hooks that we

00:12:33,279 --> 00:12:36,160
just covered

00:12:34,160 --> 00:12:38,560
this one is the first hooks in the

00:12:36,160 --> 00:12:40,240
render build cycle of views that can be

00:12:38,560 --> 00:12:41,760
called from the scene layer

00:12:40,240 --> 00:12:43,600
so that means that you don't have to

00:12:41,760 --> 00:12:45,200
define your custom module you can

00:12:43,600 --> 00:12:46,959
actually call it from the scene

00:12:45,200 --> 00:12:49,200
which is an advantage for people for

00:12:46,959 --> 00:12:50,959
more on the front end or seeming side of

00:12:49,200 --> 00:12:52,480
things that they don't have to define a

00:12:50,959 --> 00:12:55,519
custom module

00:12:52,480 --> 00:12:56,560
uh so this one allows you to alter the

00:12:55,519 --> 00:12:58,959
render

00:12:56,560 --> 00:13:00,800
the render elements of the results prior

00:12:58,959 --> 00:13:02,800
to stamping rendering

00:13:00,800 --> 00:13:05,200
and it's very useful in the most of the

00:13:02,800 --> 00:13:08,079
cases i'd recommend to use this one

00:13:05,200 --> 00:13:09,680
uh sometimes you may run into situations

00:13:08,079 --> 00:13:12,720
when you would want a

00:13:09,680 --> 00:13:15,760
lazy builder and

00:13:12,720 --> 00:13:17,680
in there uh with the rendering array

00:13:15,760 --> 00:13:19,200
you will not see the markup so won't be

00:13:17,680 --> 00:13:21,440
able to alter this

00:13:19,200 --> 00:13:22,639
output so in this case you will switch

00:13:21,440 --> 00:13:25,279
to post render

00:13:22,639 --> 00:13:27,360
function uh so in the post render

00:13:25,279 --> 00:13:28,880
function results are already converted

00:13:27,360 --> 00:13:31,120
into markup objects

00:13:28,880 --> 00:13:33,200
and this markup string can be

00:13:31,120 --> 00:13:35,440
manipulated with regular expression

00:13:33,200 --> 00:13:37,680
it's very useful if you're going to have

00:13:35,440 --> 00:13:39,120
some you know custom logic into the

00:13:37,680 --> 00:13:42,000
footer and header

00:13:39,120 --> 00:13:44,399
and of the view or maybe just you know

00:13:42,000 --> 00:13:47,120
concatenate a couple values together

00:13:44,399 --> 00:13:49,199
or massage output another in any other

00:13:47,120 --> 00:13:51,680
way this is where you would use it

00:13:49,199 --> 00:13:52,320
the advantage of it is a rendered markup

00:13:51,680 --> 00:13:55,120
um

00:13:52,320 --> 00:13:57,040
so you can alter a little bit more than

00:13:55,120 --> 00:13:59,920
in the pre-render where it's

00:13:57,040 --> 00:14:00,959
all mostly like a render element

00:13:59,920 --> 00:14:04,320
properties

00:14:00,959 --> 00:14:05,199
and in this hook you can also alter

00:14:04,320 --> 00:14:07,199
cashbacks

00:14:05,199 --> 00:14:09,279
which is very important you can set

00:14:07,199 --> 00:14:12,560
cacheable dependencies you can

00:14:09,279 --> 00:14:13,760
create a cachable metadata object out of

00:14:12,560 --> 00:14:17,360
your build array

00:14:13,760 --> 00:14:20,480
and add it as a casual dependencies

00:14:17,360 --> 00:14:22,320
to the view and that will help you to

00:14:20,480 --> 00:14:26,000
set up more custom

00:14:22,320 --> 00:14:27,120
cache studs uh then if you were to use

00:14:26,000 --> 00:14:31,279
just what

00:14:27,120 --> 00:14:34,320
uh drupal views are doing by default so

00:14:31,279 --> 00:14:36,399
yeah that's very useful and

00:14:34,320 --> 00:14:40,000
you can make the cache for your views

00:14:36,399 --> 00:14:42,320
results way more granules this way

00:14:40,000 --> 00:14:44,160
view plugins the third and biggest

00:14:42,320 --> 00:14:48,000
section of this presentation

00:14:44,160 --> 00:14:50,880
is views plugins so these plugins

00:14:48,000 --> 00:14:51,760
are divided into two main categories

00:14:50,880 --> 00:14:54,160
they are plugins

00:14:51,760 --> 00:14:56,000
and handlers and lots of different well

00:14:54,160 --> 00:14:56,959
in terms of how they build there is no

00:14:56,000 --> 00:14:59,199
difference but

00:14:56,959 --> 00:15:00,560
semantically there are differences

00:14:59,199 --> 00:15:03,839
between them so

00:15:00,560 --> 00:15:06,079
uh plugins are plugins which

00:15:03,839 --> 00:15:07,120
are participating in use construction

00:15:06,079 --> 00:15:09,279
creation process

00:15:07,120 --> 00:15:10,320
they are responsible for the wizard

00:15:09,279 --> 00:15:13,600
build process

00:15:10,320 --> 00:15:16,560
rows displays pagers cache and

00:15:13,600 --> 00:15:18,720
more and then handlers are plugins that

00:15:16,560 --> 00:15:20,800
participate in the build process of the

00:15:18,720 --> 00:15:24,160
query object so

00:15:20,800 --> 00:15:26,959
uh they actually participate in the

00:15:24,160 --> 00:15:27,519
filtering contextual filtering sources

00:15:26,959 --> 00:15:30,160
source

00:15:27,519 --> 00:15:32,320
sorting and relationships so handlers

00:15:30,160 --> 00:15:34,320
are everything that's related for the

00:15:32,320 --> 00:15:35,360
queries they are handling security

00:15:34,320 --> 00:15:37,519
objects and

00:15:35,360 --> 00:15:38,959
uh plugins themselves such as buildings

00:15:37,519 --> 00:15:42,800
like construction

00:15:38,959 --> 00:15:46,720
pieces of kind of blocks or bricks

00:15:42,800 --> 00:15:48,480
uh not not to confuse it with drupal

00:15:46,720 --> 00:15:50,880
terminology but lots of bricks in the

00:15:48,480 --> 00:15:54,000
real world to build your house

00:15:50,880 --> 00:15:56,880
so structural objects let's go down

00:15:54,000 --> 00:15:57,279
the road and to fill handler plugin so

00:15:56,880 --> 00:16:00,800
the

00:15:57,279 --> 00:16:04,320
field handler plugin as a majority of

00:16:00,800 --> 00:16:05,040
our plugins that will be defined for

00:16:04,320 --> 00:16:07,920
reviews

00:16:05,040 --> 00:16:09,519
have to leave in a specific folder they

00:16:07,920 --> 00:16:11,920
all have to be in a

00:16:09,519 --> 00:16:12,959
custom module but they also have to be

00:16:11,920 --> 00:16:15,600
placed in this

00:16:12,959 --> 00:16:16,240
uh certain folder structure so for

00:16:15,600 --> 00:16:18,959
example

00:16:16,240 --> 00:16:21,600
plugins views field is named space and

00:16:18,959 --> 00:16:22,000
folder structure for your field plugins

00:16:21,600 --> 00:16:24,000
uh

00:16:22,000 --> 00:16:26,000
you also will need to annotate it with

00:16:24,000 --> 00:16:28,160
the add views field annotation

00:16:26,000 --> 00:16:30,160
that has a plugin id this is a short

00:16:28,160 --> 00:16:31,279
annotation and some of the plugins

00:16:30,160 --> 00:16:34,160
require a

00:16:31,279 --> 00:16:36,079
more long uh elaborate annotation i will

00:16:34,160 --> 00:16:36,480
point out a lot but this one just will

00:16:36,079 --> 00:16:38,720
have

00:16:36,480 --> 00:16:40,639
a plug-in id a machine name of the

00:16:38,720 --> 00:16:41,440
plugin that will be used throughout the

00:16:40,639 --> 00:16:43,519
site when

00:16:41,440 --> 00:16:45,839
people instantiating the plugin and

00:16:43,519 --> 00:16:48,240
altering it and using it around

00:16:45,839 --> 00:16:50,320
it also will be how views recognize and

00:16:48,240 --> 00:16:52,880
supply them for you

00:16:50,320 --> 00:16:53,360
in this plugin you will have to define

00:16:52,880 --> 00:16:55,440
two

00:16:53,360 --> 00:16:56,880
methods at least two methods it's a

00:16:55,440 --> 00:16:58,959
build options form

00:16:56,880 --> 00:17:00,800
uh which allows you to define field

00:16:58,959 --> 00:17:02,959
options so when editors or

00:17:00,800 --> 00:17:04,319
administrators of your website add the

00:17:02,959 --> 00:17:07,280
field through the view

00:17:04,319 --> 00:17:07,839
they will see this option forms for the

00:17:07,280 --> 00:17:10,079
form

00:17:07,839 --> 00:17:11,760
for the options on your field and that

00:17:10,079 --> 00:17:14,640
will help them to customize

00:17:11,760 --> 00:17:15,919
your field in the in a way or choose the

00:17:14,640 --> 00:17:17,919
widget or choose

00:17:15,919 --> 00:17:19,199
a different option that you would like

00:17:17,919 --> 00:17:21,839
to expose for them

00:17:19,199 --> 00:17:23,439
in that form and then there is also a

00:17:21,839 --> 00:17:25,839
render function render function

00:17:23,439 --> 00:17:29,440
basically returns a rendered markup

00:17:25,839 --> 00:17:30,320
uh of the field so when would you use

00:17:29,440 --> 00:17:33,440
this

00:17:30,320 --> 00:17:34,160
and you would use it if you have a flat

00:17:33,440 --> 00:17:37,200
table

00:17:34,160 --> 00:17:38,480
so for example uh if you were to have

00:17:37,200 --> 00:17:40,960
custom entity

00:17:38,480 --> 00:17:42,320
then the integration is in a different

00:17:40,960 --> 00:17:45,200
way in drupal 8 and

00:17:42,320 --> 00:17:46,080
9 you will use entity annotation to

00:17:45,200 --> 00:17:49,280
attach your

00:17:46,080 --> 00:17:51,600
views handlers in there and expose

00:17:49,280 --> 00:17:54,240
entity fields to the views but if you're

00:17:51,600 --> 00:17:58,480
going to have a

00:17:54,240 --> 00:18:00,240
a custom table like a flat table with

00:17:58,480 --> 00:18:03,200
multiple fields

00:18:00,240 --> 00:18:05,120
then you would want sometimes to expose

00:18:03,200 --> 00:18:07,600
this to the views as well

00:18:05,120 --> 00:18:09,520
this is the way to do it you can define

00:18:07,600 --> 00:18:10,640
custom plugins for different fields on

00:18:09,520 --> 00:18:13,600
the stables

00:18:10,640 --> 00:18:15,440
and then use it in the view as if you

00:18:13,600 --> 00:18:17,120
were to have it on an entity

00:18:15,440 --> 00:18:19,120
you don't have to have an entity in

00:18:17,120 --> 00:18:22,240
order to work with this customs table

00:18:19,120 --> 00:18:24,320
in the view and then you also will may

00:18:22,240 --> 00:18:25,280
use it for the pseudo computer field so

00:18:24,320 --> 00:18:27,280
sometimes

00:18:25,280 --> 00:18:29,280
uh if you were to have let's say a

00:18:27,280 --> 00:18:32,799
recipe content type and you have

00:18:29,280 --> 00:18:35,760
a cook time and a prep time and

00:18:32,799 --> 00:18:37,840
you would like to expose a you know a

00:18:35,760 --> 00:18:40,559
total recipe time

00:18:37,840 --> 00:18:41,200
and then multiplied by the difficulty

00:18:40,559 --> 00:18:43,440
factor

00:18:41,200 --> 00:18:44,480
on the recipe then you can do all of

00:18:43,440 --> 00:18:46,720
this processing

00:18:44,480 --> 00:18:48,559
and to store it in a pseudo computed

00:18:46,720 --> 00:18:49,200
field and then expose that field in the

00:18:48,559 --> 00:18:51,280
view

00:18:49,200 --> 00:18:53,360
now granted you can also do it in a

00:18:51,280 --> 00:18:55,919
process or in a template itself

00:18:53,360 --> 00:18:57,360
but uh i'm just giving you the simplest

00:18:55,919 --> 00:18:59,200
example obviously

00:18:57,360 --> 00:19:00,960
for performance sometimes computed

00:18:59,200 --> 00:19:03,840
fields might be a better

00:19:00,960 --> 00:19:05,919
option all right the next one is a

00:19:03,840 --> 00:19:08,480
filter plugin so a filter plugin

00:19:05,919 --> 00:19:10,320
similarly to field plugin leaves inside

00:19:08,480 --> 00:19:13,200
the filter namespace

00:19:10,320 --> 00:19:14,799
and it needs a views filter annotation

00:19:13,200 --> 00:19:17,600
that has plugin id

00:19:14,799 --> 00:19:19,200
so very similar to the field one uh we

00:19:17,600 --> 00:19:22,160
need to define three methods

00:19:19,200 --> 00:19:23,600
of u4 value form which is the filter

00:19:22,160 --> 00:19:26,080
forms that

00:19:23,600 --> 00:19:27,520
kind of uh will be displayed when you

00:19:26,080 --> 00:19:29,120
expose the filter

00:19:27,520 --> 00:19:30,960
through the filter interface and the

00:19:29,120 --> 00:19:32,240
view so if you were to let's say expose

00:19:30,960 --> 00:19:34,480
the date it will be

00:19:32,240 --> 00:19:36,400
a date widget you know and things like

00:19:34,480 --> 00:19:38,240
that so in query

00:19:36,400 --> 00:19:40,480
is modify the query because you are

00:19:38,240 --> 00:19:42,080
filtering uh you need to modify the

00:19:40,480 --> 00:19:44,559
video object of the view

00:19:42,080 --> 00:19:45,919
so you add in your own custom kind of

00:19:44,559 --> 00:19:49,039
query snippet

00:19:45,919 --> 00:19:51,440
that can be used in the view uh

00:19:49,039 --> 00:19:53,520
so that query is responsible to altering

00:19:51,440 --> 00:19:54,640
this object typically it expects you to

00:19:53,520 --> 00:19:58,160
add some sort of

00:19:54,640 --> 00:19:59,280
uh mysql or whatever database that can

00:19:58,160 --> 00:20:02,000
be used

00:19:59,280 --> 00:20:04,159
stream that will be adding a condition

00:20:02,000 --> 00:20:05,600
so you can use normal methods for query

00:20:04,159 --> 00:20:08,799
altering like

00:20:05,600 --> 00:20:11,760
adware and you know group y and

00:20:08,799 --> 00:20:12,200
other things to alter your query object

00:20:11,760 --> 00:20:14,559
uh

00:20:12,200 --> 00:20:16,159
administrator is a summary for editors

00:20:14,559 --> 00:20:17,280
in the views ui so when you add your

00:20:16,159 --> 00:20:19,760
custom filter

00:20:17,280 --> 00:20:22,000
as this function allows editors to see

00:20:19,760 --> 00:20:22,799
what the filter is about as helpful

00:20:22,000 --> 00:20:25,280
description

00:20:22,799 --> 00:20:26,240
and other properties so they easily

00:20:25,280 --> 00:20:29,840
identified

00:20:26,240 --> 00:20:31,679
in the ui of use so the example where

00:20:29,840 --> 00:20:33,440
you would want a custom filter would be

00:20:31,679 --> 00:20:34,000
a custom date range filter so for

00:20:33,440 --> 00:20:36,080
example

00:20:34,000 --> 00:20:37,919
you own the big publishing website

00:20:36,080 --> 00:20:39,840
sometimes the requirement is

00:20:37,919 --> 00:20:41,120
i want all of the articles that were

00:20:39,840 --> 00:20:43,840
published last week

00:20:41,120 --> 00:20:45,600
last month last quarter three years ago

00:20:43,840 --> 00:20:47,679
so it's very arbitrary not something

00:20:45,600 --> 00:20:49,280
that drupal provides by default you may

00:20:47,679 --> 00:20:52,960
want to hard code those

00:20:49,280 --> 00:20:55,039
uh specific ranges into the custom

00:20:52,960 --> 00:20:57,760
filter and filter this way

00:20:55,039 --> 00:20:58,640
uh or you can again filter by computer

00:20:57,760 --> 00:21:01,120
properties

00:20:58,640 --> 00:21:04,159
just going back to that previous example

00:21:01,120 --> 00:21:07,200
of a field where you had a

00:21:04,159 --> 00:21:09,360
different you know recipe time

00:21:07,200 --> 00:21:10,640
you may want to filter by those computer

00:21:09,360 --> 00:21:13,039
times and this is a

00:21:10,640 --> 00:21:15,360
option for you to actually edit as a

00:21:13,039 --> 00:21:17,679
custom filter as well

00:21:15,360 --> 00:21:20,240
the next one is a sword plugin so the

00:21:17,679 --> 00:21:22,799
sword plugin has a namespace of a sort

00:21:20,240 --> 00:21:25,200
so similarly following the same pattern

00:21:22,799 --> 00:21:26,000
it will need the view sort annotation

00:21:25,200 --> 00:21:28,159
and uh

00:21:26,000 --> 00:21:29,280
you need to pull to push an id inside

00:21:28,159 --> 00:21:31,120
that annotation

00:21:29,280 --> 00:21:32,640
and then it has to have at least one

00:21:31,120 --> 00:21:34,559
method which is a query

00:21:32,640 --> 00:21:35,919
and that as well modified superior

00:21:34,559 --> 00:21:39,520
object so again uh

00:21:35,919 --> 00:21:42,159
it expects you to pass some sort of uh

00:21:39,520 --> 00:21:42,880
string sub query string into the query

00:21:42,159 --> 00:21:46,000
object

00:21:42,880 --> 00:21:48,880
to modify it and add a custom sword uh

00:21:46,000 --> 00:21:51,280
the key here is to understand that uh

00:21:48,880 --> 00:21:53,039
you need to actually alter the mysql

00:21:51,280 --> 00:21:55,360
query versus the result so you're not

00:21:53,039 --> 00:21:58,640
really processing results you're telling

00:21:55,360 --> 00:22:00,799
views how to query that thing correctly

00:21:58,640 --> 00:22:02,480
and that is applicable for the filter

00:22:00,799 --> 00:22:04,559
and for the sword plugins

00:22:02,480 --> 00:22:05,840
and that made me very confused when i

00:22:04,559 --> 00:22:09,440
first tried to do it

00:22:05,840 --> 00:22:10,320
um so my idea behind it for successful

00:22:09,440 --> 00:22:13,280
implementation

00:22:10,320 --> 00:22:14,960
is to open your mysql or whatever

00:22:13,280 --> 00:22:18,480
database because you may have

00:22:14,960 --> 00:22:20,720
editor and just query it in a sql syntax

00:22:18,480 --> 00:22:22,320
and then when you do have the query that

00:22:20,720 --> 00:22:22,960
works and becomes the result as you

00:22:22,320 --> 00:22:25,520
expect

00:22:22,960 --> 00:22:27,919
this is where you would subtract that

00:22:25,520 --> 00:22:30,240
substring for the sword out of it and

00:22:27,919 --> 00:22:30,960
push it back into the video object in

00:22:30,240 --> 00:22:33,440
views it's

00:22:30,960 --> 00:22:34,159
very helpful one of the examples that

00:22:33,440 --> 00:22:37,440
you

00:22:34,159 --> 00:22:38,640
would have in the real world is natural

00:22:37,440 --> 00:22:39,200
sort and i know there are a couple

00:22:38,640 --> 00:22:41,919
modules

00:22:39,200 --> 00:22:42,640
provided but in a nutshell what natural

00:22:41,919 --> 00:22:44,480
sort is

00:22:42,640 --> 00:22:45,760
for example you have a list of results

00:22:44,480 --> 00:22:49,840
these articles

00:22:45,760 --> 00:22:52,240
the the main article like the great hall

00:22:49,840 --> 00:22:52,960
or it has numbers something like that

00:22:52,240 --> 00:22:55,360
and

00:22:52,960 --> 00:22:56,000
the requirement of your site is to have

00:22:55,360 --> 00:22:59,520
actually

00:22:56,000 --> 00:23:01,840
the first uh actual world

00:22:59,520 --> 00:23:03,919
good to be responsible for sorting and

00:23:01,840 --> 00:23:07,039
drop the articles and how products

00:23:03,919 --> 00:23:09,280
that's what you would use uh

00:23:07,039 --> 00:23:10,720
to establish it is a custom source

00:23:09,280 --> 00:23:14,159
plugin and you can

00:23:10,720 --> 00:23:16,159
uh make sure that those phrases are

00:23:14,159 --> 00:23:18,480
omitted the second one would be

00:23:16,159 --> 00:23:19,600
to sort by computed values in this case

00:23:18,480 --> 00:23:21,679
you could actually

00:23:19,600 --> 00:23:22,640
if you don't have a first name and a

00:23:21,679 --> 00:23:24,559
last name

00:23:22,640 --> 00:23:26,080
uh into separate fields and you would

00:23:24,559 --> 00:23:28,960
like to sort by

00:23:26,080 --> 00:23:29,520
last name only you can actually break

00:23:28,960 --> 00:23:33,520
down

00:23:29,520 --> 00:23:35,679
the full name field into two values by a

00:23:33,520 --> 00:23:38,880
space if they separated by space

00:23:35,679 --> 00:23:42,880
and pass the last name as

00:23:38,880 --> 00:23:44,960
a sorting column as a computed certain

00:23:42,880 --> 00:23:48,480
column and then sorted this way

00:23:44,960 --> 00:23:51,679
so the custom soft plugin comes in handy

00:23:48,480 --> 00:23:53,919
right here so area handlers area

00:23:51,679 --> 00:23:54,720
handlers similar to the source they go

00:23:53,919 --> 00:23:57,360
into views

00:23:54,720 --> 00:23:58,480
area namespace and need the annotation

00:23:57,360 --> 00:24:03,039
views area

00:23:58,480 --> 00:24:05,679
that grabs a plugin id it needs three

00:24:03,039 --> 00:24:06,640
methods define options again the default

00:24:05,679 --> 00:24:09,120
options for

00:24:06,640 --> 00:24:10,000
the handler that's important because

00:24:09,120 --> 00:24:12,799
sometimes

00:24:10,000 --> 00:24:14,320
people don't uh progress in settings and

00:24:12,799 --> 00:24:17,520
reconfigure the views

00:24:14,320 --> 00:24:18,960
so the easiest is just uh to put push

00:24:17,520 --> 00:24:20,720
some defaults for your

00:24:18,960 --> 00:24:23,120
options that will be exposed to the

00:24:20,720 --> 00:24:25,520
editor the second method is build option

00:24:23,120 --> 00:24:28,080
forms that actually the form that allows

00:24:25,520 --> 00:24:28,960
uh to provide the interface for this

00:24:28,080 --> 00:24:31,440
options

00:24:28,960 --> 00:24:33,039
so option spawn for editors another

00:24:31,440 --> 00:24:35,679
renderer the last one

00:24:33,039 --> 00:24:37,200
returns a valid drupal render array for

00:24:35,679 --> 00:24:40,480
that area handler

00:24:37,200 --> 00:24:43,120
uh the basic example would be uh

00:24:40,480 --> 00:24:43,679
to header a footer area that is custom

00:24:43,120 --> 00:24:45,840
and has

00:24:43,679 --> 00:24:46,960
let's say back link to the previous page

00:24:45,840 --> 00:24:50,240
using uh

00:24:46,960 --> 00:24:52,240
browser history api oil has

00:24:50,240 --> 00:24:54,559
some custom messaging based on the

00:24:52,240 --> 00:24:56,960
business logic things like that so

00:24:54,559 --> 00:24:58,640
that would be the best example for a

00:24:56,960 --> 00:25:01,039
custom area handler

00:24:58,640 --> 00:25:02,799
uh the advantage of having area handler

00:25:01,039 --> 00:25:04,480
instead of just pre-processing it is

00:25:02,799 --> 00:25:06,000
that you can reuse it throughout

00:25:04,480 --> 00:25:09,279
multiple views as

00:25:06,000 --> 00:25:10,320
long as it is very generic uh so that if

00:25:09,279 --> 00:25:12,320
you have that

00:25:10,320 --> 00:25:14,000
backlink you can actually reuse it on

00:25:12,320 --> 00:25:16,320
multiple pages and you don't

00:25:14,000 --> 00:25:18,400
have to do pre-process for every single

00:25:16,320 --> 00:25:20,320
use display everywhere well you may need

00:25:18,400 --> 00:25:23,039
it

00:25:20,320 --> 00:25:23,760
uh access handler it's a very fun one

00:25:23,039 --> 00:25:27,600
this uh

00:25:23,760 --> 00:25:30,320
provides an access to the

00:25:27,600 --> 00:25:30,720
view block of your page and it's custom

00:25:30,320 --> 00:25:33,120
uh

00:25:30,720 --> 00:25:34,240
it needs abuse uh access annotation that

00:25:33,120 --> 00:25:36,320
has plugin id

00:25:34,240 --> 00:25:38,000
title and help so a little bit bulkier

00:25:36,320 --> 00:25:40,640
annotation than typical

00:25:38,000 --> 00:25:43,200
uh it has at least three methods and

00:25:40,640 --> 00:25:46,880
they require it uh because

00:25:43,200 --> 00:25:49,039
access handler is required to

00:25:46,880 --> 00:25:51,120
extend from the base class that is

00:25:49,039 --> 00:25:52,480
abstract and defines three methods that

00:25:51,120 --> 00:25:54,559
have to be implemented

00:25:52,480 --> 00:25:55,840
here's the summary title that is the

00:25:54,559 --> 00:25:58,559
title that appears

00:25:55,840 --> 00:26:00,480
in the views ui when you add the access

00:25:58,559 --> 00:26:02,559
callback so when you click on the access

00:26:00,480 --> 00:26:04,320
and there is like by roll by permission

00:26:02,559 --> 00:26:07,120
that will be the third one where you

00:26:04,320 --> 00:26:09,120
will uh define by what basically or like

00:26:07,120 --> 00:26:09,679
custom editorial access something like

00:26:09,120 --> 00:26:12,080
that

00:26:09,679 --> 00:26:13,279
and you have to have access callback so

00:26:12,080 --> 00:26:15,039
access callback

00:26:13,279 --> 00:26:17,360
is a custom callback where you can

00:26:15,039 --> 00:26:19,200
define your custom callback low access

00:26:17,360 --> 00:26:21,679
logic so that is where you

00:26:19,200 --> 00:26:23,120
check permissions or you know field

00:26:21,679 --> 00:26:27,279
values or anything else

00:26:23,120 --> 00:26:28,640
and determine if the user can access or

00:26:27,279 --> 00:26:31,600
cannot access your

00:26:28,640 --> 00:26:32,880
uh view and then alter our definition

00:26:31,600 --> 00:26:36,240
it's uh

00:26:32,880 --> 00:26:38,480
requiring uh so you could actually have

00:26:36,240 --> 00:26:39,840
exactly the same logic there as an

00:26:38,480 --> 00:26:41,919
access so the

00:26:39,840 --> 00:26:44,240
reason why we have those two methods is

00:26:41,919 --> 00:26:46,559
because one is called for the pages

00:26:44,240 --> 00:26:48,400
and it's called on route means that the

00:26:46,559 --> 00:26:49,600
access is checked so early in the

00:26:48,400 --> 00:26:52,080
process that

00:26:49,600 --> 00:26:53,919
uh it kind of doesn't go through the

00:26:52,080 --> 00:26:55,039
rendering of the view through the build

00:26:53,919 --> 00:26:58,640
process of the view

00:26:55,039 --> 00:27:00,880
whereas in the access method it does go

00:26:58,640 --> 00:27:01,919
through the process of building the

00:27:00,880 --> 00:27:04,880
viewings and checking

00:27:01,919 --> 00:27:06,799
access so the putting systems all

00:27:04,880 --> 00:27:09,200
throughout definition means that

00:27:06,799 --> 00:27:10,880
you are optimizing the performance and

00:27:09,200 --> 00:27:11,679
if you do it inside throughout

00:27:10,880 --> 00:27:14,159
definition

00:27:11,679 --> 00:27:14,960
this is when on the page displays it

00:27:14,159 --> 00:27:18,399
will show

00:27:14,960 --> 00:27:21,200
uh access the night

00:27:18,399 --> 00:27:22,159
however on block displays this method is

00:27:21,200 --> 00:27:24,399
not going to be

00:27:22,159 --> 00:27:26,320
called you can also add additional

00:27:24,399 --> 00:27:28,399
opinion permissions or role restrictions

00:27:26,320 --> 00:27:29,279
to the outro definition to make it a

00:27:28,399 --> 00:27:31,279
little bit more

00:27:29,279 --> 00:27:33,520
robust you don't have to do it you can

00:27:31,279 --> 00:27:36,640
keep it true and just

00:27:33,520 --> 00:27:40,720
rely on your access callback and stat

00:27:36,640 --> 00:27:42,799
another option here is to call a service

00:27:40,720 --> 00:27:44,720
so abstract all of the logic come to a

00:27:42,799 --> 00:27:46,960
helper service where you can put

00:27:44,720 --> 00:27:48,480
all of the logic for the access and

00:27:46,960 --> 00:27:51,520
additional permissions enroll

00:27:48,480 --> 00:27:53,679
and call the service access call methods

00:27:51,520 --> 00:27:55,360
out of the access callback and out of

00:27:53,679 --> 00:27:57,760
the outer route definition

00:27:55,360 --> 00:27:59,120
that's another option that you can uh

00:27:57,760 --> 00:28:02,159
pursue

00:27:59,120 --> 00:28:05,679
so that's pretty self-imposed

00:28:02,159 --> 00:28:07,360
explanatory one of the uh normal use

00:28:05,679 --> 00:28:11,360
cases would be

00:28:07,360 --> 00:28:15,039
if you were to have it um let's say on a

00:28:11,360 --> 00:28:16,159
on a user you will have a field with a

00:28:15,039 --> 00:28:19,039
chatbot saying

00:28:16,159 --> 00:28:21,360
residential editor or you know just an

00:28:19,039 --> 00:28:23,760
editor residential editor should be able

00:28:21,360 --> 00:28:24,880
to see lists of unpublished content that

00:28:23,760 --> 00:28:26,880
is ready for review

00:28:24,880 --> 00:28:27,919
and normal editor shouldn't and the rest

00:28:26,880 --> 00:28:30,960
of the permissions are

00:28:27,919 --> 00:28:32,240
exactly the same so this is a good way

00:28:30,960 --> 00:28:34,720
to restrict just

00:28:32,240 --> 00:28:36,320
the view access to that specific view

00:28:34,720 --> 00:28:39,120
display

00:28:36,320 --> 00:28:41,200
style plug-in is uh the fine one the one

00:28:39,120 --> 00:28:43,440
that allows you to

00:28:41,200 --> 00:28:44,480
render results as a whole in a certain

00:28:43,440 --> 00:28:47,200
way so

00:28:44,480 --> 00:28:47,520
it lives under the view style namespace

00:28:47,200 --> 00:28:49,919
and

00:28:47,520 --> 00:28:52,240
it needs a view style annotations that

00:28:49,919 --> 00:28:55,360
has a plugin id

00:28:52,240 --> 00:28:57,360
it has title help seam and display types

00:28:55,360 --> 00:28:59,600
those properties are very important

00:28:57,360 --> 00:29:02,080
specifically theme and display type sim

00:28:59,600 --> 00:29:04,159
defines a template that will be used for

00:29:02,080 --> 00:29:07,279
the rendering of your style plugin

00:29:04,159 --> 00:29:08,080
and display types identifiers to which

00:29:07,279 --> 00:29:10,320
displays

00:29:08,080 --> 00:29:12,080
that plugin should be available if you

00:29:10,320 --> 00:29:15,120
want just a normal ones uh

00:29:12,080 --> 00:29:16,960
like content ones or blog and page and

00:29:15,120 --> 00:29:20,240
master you can just use the

00:29:16,960 --> 00:29:22,960
normal uh value into this keyword

00:29:20,240 --> 00:29:24,399
and then and you have a defined options

00:29:22,960 --> 00:29:26,320
of

00:29:24,399 --> 00:29:28,399
functions that allows you again to

00:29:26,320 --> 00:29:31,120
specify default options for the

00:29:28,399 --> 00:29:32,960
uh plugin um and then build options form

00:29:31,120 --> 00:29:33,679
similarly to other plugins we just

00:29:32,960 --> 00:29:36,880
looked at

00:29:33,679 --> 00:29:39,200
uh that allows you to expose the form

00:29:36,880 --> 00:29:42,240
with the default options

00:29:39,200 --> 00:29:44,159
from editors uh so for the views you

00:29:42,240 --> 00:29:46,799
already are familiar with style plugins

00:29:44,159 --> 00:29:48,320
also i know there is list and html lists

00:29:46,799 --> 00:29:51,120
and tables and grids

00:29:48,320 --> 00:29:52,320
uh so custom style plugin will be useful

00:29:51,120 --> 00:29:54,080
when you have something with

00:29:52,320 --> 00:29:56,240
interactivity for instance starts

00:29:54,080 --> 00:29:58,880
accordions masonry green

00:29:56,240 --> 00:30:01,360
so that's the candidates when you would

00:29:58,880 --> 00:30:04,880
want a custom style plugin

00:30:01,360 --> 00:30:06,159
and i think those are all that i wanted

00:30:04,880 --> 00:30:10,240
to talk to you

00:30:06,159 --> 00:30:13,760
uh today uh let's check in the chat and

00:30:10,240 --> 00:30:16,880
see if we have any questions

00:30:13,760 --> 00:30:21,440
oops call them

00:30:16,880 --> 00:30:22,399
um i see when is the best time to

00:30:21,440 --> 00:30:24,720
manipulate

00:30:22,399 --> 00:30:27,039
paging conditions number result current

00:30:24,720 --> 00:30:28,399
page during post normal page load and

00:30:27,039 --> 00:30:31,600
via ajax

00:30:28,399 --> 00:30:33,039
so um this is a very actually tricky

00:30:31,600 --> 00:30:36,240
question it's a good question

00:30:33,039 --> 00:30:38,480
it's a tricky question though uh so it

00:30:36,240 --> 00:30:41,520
will be the best when you do

00:30:38,480 --> 00:30:44,000
have the results already so it is

00:30:41,520 --> 00:30:46,000
in the post execute you have it as a

00:30:44,000 --> 00:30:46,559
problem that you may have with it is

00:30:46,000 --> 00:30:49,279
that

00:30:46,559 --> 00:30:50,880
it passes the page you're already in and

00:30:49,279 --> 00:30:54,399
on some of the conditions

00:30:50,880 --> 00:30:56,559
um if you don't specify

00:30:54,399 --> 00:30:58,080
correctly how the pager is rendered you

00:30:56,559 --> 00:31:01,519
may end up

00:30:58,080 --> 00:31:04,240
having the wrong number of pages so uh

00:31:01,519 --> 00:31:05,120
what i recommend doing instead of that

00:31:04,240 --> 00:31:07,039
instead of like

00:31:05,120 --> 00:31:08,640
saying the number of results altering

00:31:07,039 --> 00:31:10,320
the pages i recommend

00:31:08,640 --> 00:31:13,200
rendering especially if you're using

00:31:10,320 --> 00:31:16,640
ajax i recommend rendering the whole

00:31:13,200 --> 00:31:18,640
all of the results and then just setting

00:31:16,640 --> 00:31:21,360
up either a custom pager or

00:31:18,640 --> 00:31:22,799
a javascript uh that will manipulate it

00:31:21,360 --> 00:31:25,360
in this way instead of

00:31:22,799 --> 00:31:27,279
uh doing it through the hook i just in

00:31:25,360 --> 00:31:28,399
my experience sometimes you may end up

00:31:27,279 --> 00:31:30,880
with a

00:31:28,399 --> 00:31:33,120
better indigenation but it depends on

00:31:30,880 --> 00:31:36,080
them basically

00:31:33,120 --> 00:31:37,679
uh on how your views are set up and your

00:31:36,080 --> 00:31:41,279
specific requirements

00:31:37,679 --> 00:31:43,600
and uh yes hook views post execute is

00:31:41,279 --> 00:31:46,880
the earliest where you can get your

00:31:43,600 --> 00:31:49,120
um number of results and understanding

00:31:46,880 --> 00:31:51,679
go for how many of them are there and

00:31:49,120 --> 00:31:52,559
after certain things so i don't

00:31:51,679 --> 00:31:54,960
recommend

00:31:52,559 --> 00:31:56,559
uh so i recommend altering pager

00:31:54,960 --> 00:31:58,880
conditions in there

00:31:56,559 --> 00:32:01,120
uh but i don't recommend unsetting

00:31:58,880 --> 00:32:03,200
results rules if you do and set results

00:32:01,120 --> 00:32:05,760
rules your pager will definitely

00:32:03,200 --> 00:32:06,799
be uh broken and this is where you will

00:32:05,760 --> 00:32:10,080
have to go with

00:32:06,799 --> 00:32:10,799
a custom pager are you going to show

00:32:10,080 --> 00:32:13,679
examples

00:32:10,799 --> 00:32:15,360
uh that's a great question actually i am

00:32:13,679 --> 00:32:18,080
not planning to show examples

00:32:15,360 --> 00:32:20,080
at the moment uh however uh we just

00:32:18,080 --> 00:32:20,799
published uh views for developers and

00:32:20,080 --> 00:32:23,760
drupal live

00:32:20,799 --> 00:32:25,679
series uh so you can go and check the

00:32:23,760 --> 00:32:26,559
tutorials in depth there with some

00:32:25,679 --> 00:32:30,000
examples

00:32:26,559 --> 00:32:31,200
as well uh these large volumes of data

00:32:30,000 --> 00:32:34,799
is it faster to

00:32:31,200 --> 00:32:38,080
sort uh via the plugin or

00:32:34,799 --> 00:32:41,360
very versatility natural source right

00:32:38,080 --> 00:32:43,919
so i

00:32:41,360 --> 00:32:44,559
are definitely like it's both of them

00:32:43,919 --> 00:32:46,399
sort and

00:32:44,559 --> 00:32:47,679
clear out the both of them are going to

00:32:46,399 --> 00:32:50,159
be as a query

00:32:47,679 --> 00:32:52,320
however if you use custom sword it means

00:32:50,159 --> 00:32:55,360
that you can reuse it multiple

00:32:52,320 --> 00:32:57,279
uh times on different views it doesn't

00:32:55,360 --> 00:32:59,440
have to be used just on one of them

00:32:57,279 --> 00:33:01,120
technically there is no big difference

00:32:59,440 --> 00:33:02,159
however the sword plugging happens

00:33:01,120 --> 00:33:04,640
earlier than your

00:33:02,159 --> 00:33:06,480
query outer so obviously as early in the

00:33:04,640 --> 00:33:07,600
process what happens is better it is for

00:33:06,480 --> 00:33:10,799
the performance

00:33:07,600 --> 00:33:13,120
so i'd say that if you can always go

00:33:10,799 --> 00:33:14,240
with the sort like but depending on your

00:33:13,120 --> 00:33:16,480
structure

00:33:14,240 --> 00:33:18,240
and on you know performance and other

00:33:16,480 --> 00:33:20,880
things some testing and other

00:33:18,240 --> 00:33:22,000
uh you know factors that how you build

00:33:20,880 --> 00:33:24,240
your view

00:33:22,000 --> 00:33:26,240
you may or may not see a significant

00:33:24,240 --> 00:33:29,120
difference however if you go to

00:33:26,240 --> 00:33:31,039
uh go with the caching and you have a

00:33:29,120 --> 00:33:33,360
lot of results i recommend to go with

00:33:31,039 --> 00:33:35,120
the plugin option

00:33:33,360 --> 00:33:36,720
will slides be posted somewhere

00:33:35,120 --> 00:33:39,360
definitely slides will be

00:33:36,720 --> 00:33:40,000
attached to the session and i will also

00:33:39,360 --> 00:33:42,960
tweet them

00:33:40,000 --> 00:33:45,039
out after the session uh if you're

00:33:42,960 --> 00:33:47,760
browsing the views module code the

00:33:45,039 --> 00:33:49,360
views api file has a lot of info about

00:33:47,760 --> 00:33:50,880
the hooks where is the info about the

00:33:49,360 --> 00:33:52,399
plugins documented

00:33:50,880 --> 00:33:54,240
that's fantastic question drupal

00:33:52,399 --> 00:33:56,399
actually has documentation for every

00:33:54,240 --> 00:33:58,559
single plugin so you can just google

00:33:56,399 --> 00:34:01,679
views plugins and it will post

00:33:58,559 --> 00:34:04,399
uh like one of the first results returns

00:34:01,679 --> 00:34:06,880
drupal org documentation that lists all

00:34:04,399 --> 00:34:08,879
of the plugins and all of the

00:34:06,880 --> 00:34:10,560
annotation requirements for all of them

00:34:08,879 --> 00:34:11,040
all the methods that can be used for

00:34:10,560 --> 00:34:14,320
them and

00:34:11,040 --> 00:34:17,440
base classes so recommend checking uh

00:34:14,320 --> 00:34:20,560
that out all right uh

00:34:17,440 --> 00:34:22,879
any other questions

00:34:20,560 --> 00:34:24,480
i don't i don't think i have any other

00:34:22,879 --> 00:34:28,639
questions

00:34:24,480 --> 00:34:34,159
um yeah

00:34:28,639 --> 00:34:37,440
well let me see

00:34:34,159 --> 00:34:40,720
no no more questions okay well

00:34:37,440 --> 00:34:42,800
uh if you uh want to connect please feel

00:34:40,720 --> 00:34:44,320
free to either hit me on the calamuno

00:34:42,800 --> 00:34:46,399
website where you have all my

00:34:44,320 --> 00:34:49,760
credentials so connect on twitter

00:34:46,399 --> 00:34:52,159
at sunny yes

00:34:49,760 --> 00:34:58,240
thank you so much for coming in and

00:34:52,159 --> 00:34:58,240

YouTube URL: https://www.youtube.com/watch?v=8NC8QpmMRiA


