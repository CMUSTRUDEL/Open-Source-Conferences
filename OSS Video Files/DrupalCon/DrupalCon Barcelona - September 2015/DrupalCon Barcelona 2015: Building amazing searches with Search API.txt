Title: DrupalCon Barcelona 2015: Building amazing searches with Search API
Publication date: 2015-09-22
Playlist: DrupalCon Barcelona - September 2015
Description: 
	In this session I will demonstrate how to use the Drupal 8 version of the popular Search API module to create an amazing search experience on your site. I'll show in a live demo how to setup the module, what can be configured and where, how additional functionality can be added and what potential pitfalls you should keep in mind.
Captions: 
	00:00:00,860 --> 00:00:06,600
hello and welcome everyone my name is

00:00:04,350 --> 00:00:09,540
Thomas idle and as you are hopefully

00:00:06,600 --> 00:00:15,929
aware I'm going to talk about the Search

00:00:09,540 --> 00:00:18,180
API in Drupal 8 today this would be a

00:00:15,929 --> 00:00:21,029
live demo of the current state of the

00:00:18,180 --> 00:00:24,150
search EPA in through play it I'm just a

00:00:21,029 --> 00:00:29,369
quick overview before who has already

00:00:24,150 --> 00:00:35,130
used the search band triple7 who hasn't

00:00:29,369 --> 00:00:38,489
used in Drupal 7 a lot of undecided

00:00:35,130 --> 00:00:42,480
people here but good to know so if you

00:00:38,489 --> 00:00:45,030
used to in Drupal 7 already then the lot

00:00:42,480 --> 00:00:49,110
of this will seem familiar there have

00:00:45,030 --> 00:00:53,010
only been slight changes a user-facing

00:00:49,110 --> 00:00:58,620
wise but a lot of new stuff on the hood

00:00:53,010 --> 00:01:00,329
and a lot more still in development but

00:00:58,620 --> 00:01:03,570
before I begin with the demo a quick

00:01:00,329 --> 00:01:07,530
overview of the Search API in general it

00:01:03,570 --> 00:01:09,270
was created in 2010 for triple7 based on

00:01:07,530 --> 00:01:12,540
some of the suggestions floating around

00:01:09,270 --> 00:01:15,180
regarding core search for oblate so

00:01:12,540 --> 00:01:17,009
there are a lot of ideas about being

00:01:15,180 --> 00:01:21,360
more flexible and the kind of date that

00:01:17,009 --> 00:01:24,150
you can search in the kind of back-end

00:01:21,360 --> 00:01:28,560
you can use for searching and all of

00:01:24,150 --> 00:01:31,159
that and really I tried to come up with

00:01:28,560 --> 00:01:34,140
a ground with a completely new

00:01:31,159 --> 00:01:36,479
implementation of search not based on

00:01:34,140 --> 00:01:37,799
core search that would incorporate as

00:01:36,479 --> 00:01:40,619
many of these features and

00:01:37,799 --> 00:01:42,479
functionalities as possible so with the

00:01:40,619 --> 00:01:44,340
search by is possible to index different

00:01:42,479 --> 00:01:46,920
kinds of data with different search

00:01:44,340 --> 00:01:50,869
engines and present this to the user

00:01:46,920 --> 00:01:50,869
with different types of user interface

00:01:51,049 --> 00:01:56,880
with the architecture but yeah if this

00:01:54,509 --> 00:01:58,680
the if most of you have used to then

00:01:56,880 --> 00:02:01,950
triple7 already this is familiar

00:01:58,680 --> 00:02:03,960
if search index which holds the generic

00:02:01,950 --> 00:02:07,110
information about what is being indexed

00:02:03,960 --> 00:02:11,730
the type of can't and the type data

00:02:07,110 --> 00:02:13,000
really the fields etc and then is the

00:02:11,730 --> 00:02:15,220
search server with

00:02:13,000 --> 00:02:17,530
incorporates all the back and specific

00:02:15,220 --> 00:02:20,260
information so whether it use the

00:02:17,530 --> 00:02:25,450
database or the or Apache Solr or

00:02:20,260 --> 00:02:28,480
something for indexing and yeah just

00:02:25,450 --> 00:02:34,170
really takes care of the actual process

00:02:28,480 --> 00:02:40,930
of indexing and searching and this looks

00:02:34,170 --> 00:02:43,270
like this in the visually so just one

00:02:40,930 --> 00:02:45,880
server every index has a single server

00:02:43,270 --> 00:02:48,400
but there can be multiple server indexes

00:02:45,880 --> 00:02:51,420
per server and all the other modules

00:02:48,400 --> 00:02:54,160
then just used to index s and tones

00:02:51,420 --> 00:02:56,620
generally care about the backend so

00:02:54,160 --> 00:02:59,280
almost everything you do is back and

00:02:56,620 --> 00:03:02,640
independent and can be reused no matter

00:02:59,280 --> 00:03:04,870
what package you're ending up using

00:03:02,640 --> 00:03:10,360
which can also be different for example

00:03:04,870 --> 00:03:16,780
on test test or a lot in live servers to

00:03:10,360 --> 00:03:20,260
make things easier and yeah so with this

00:03:16,780 --> 00:03:22,180
short introduction out of the way let's

00:03:20,260 --> 00:03:24,310
start right away with the demo

00:03:22,180 --> 00:03:31,900
it's just large enough for everyone to

00:03:24,310 --> 00:03:34,510
see ok I guess so so um we'll just as

00:03:31,900 --> 00:03:36,519
usually go to the exam page and there

00:03:34,510 --> 00:03:40,030
enable the Search API and database

00:03:36,519 --> 00:03:42,810
search modules as you see there's also

00:03:40,030 --> 00:03:46,470
now a database search defaults module

00:03:42,810 --> 00:03:50,079
which was implemented a few months ago

00:03:46,470 --> 00:03:53,049
which allows you to easily have a full

00:03:50,079 --> 00:03:57,360
set up with index server and the view

00:03:53,049 --> 00:03:59,709
available without having to really um

00:03:57,360 --> 00:04:03,220
configure all this stuff by yourself and

00:03:59,709 --> 00:04:05,739
also important while this is loading is

00:04:03,220 --> 00:04:07,570
that when you use insert you value

00:04:05,739 --> 00:04:10,870
almost always should disable the search

00:04:07,570 --> 00:04:12,730
module from core because that's not

00:04:10,870 --> 00:04:20,609
needed and will just take away

00:04:12,730 --> 00:04:22,750
unnecessary um resources so Search API

00:04:20,609 --> 00:04:25,240
configuration page looks like this and

00:04:22,750 --> 00:04:26,500
here you can a set at service and

00:04:25,240 --> 00:04:33,670
indexes

00:04:26,500 --> 00:04:40,120
and we first add a server and our

00:04:33,670 --> 00:04:42,880
example just a database server the

00:04:40,120 --> 00:04:44,620
description is optional and just

00:04:42,880 --> 00:04:47,710
displayed in the admin UI and you can

00:04:44,620 --> 00:04:50,620
again select the minimum length the

00:04:47,710 --> 00:04:53,320
index but nothing really but really

00:04:50,620 --> 00:04:58,840
nothing else for database back-end which

00:04:53,320 --> 00:05:03,610
is very simple and then once you have

00:04:58,840 --> 00:05:06,280
this background the server you can index

00:05:03,610 --> 00:05:09,760
to the server and here is the one of the

00:05:06,280 --> 00:05:11,920
larger changes in through plate because

00:05:09,760 --> 00:05:14,320
now you can you don't have just a note

00:05:11,920 --> 00:05:17,200
in the XS previously you can actually

00:05:14,320 --> 00:05:20,680
index any kind any number of different

00:05:17,200 --> 00:05:24,190
item types in the same index so you can

00:05:20,680 --> 00:05:27,430
index content but and also index comment

00:05:24,190 --> 00:05:29,169
comments and taxonomy terms and all of

00:05:27,430 --> 00:05:32,230
this will be found in a single search

00:05:29,169 --> 00:05:34,810
but you can also of course them all the

00:05:32,230 --> 00:05:39,220
create searches for just one or several

00:05:34,810 --> 00:05:40,930
of these and also as in the latest

00:05:39,220 --> 00:05:46,120
versions of troupis of the drupal 7

00:05:40,930 --> 00:05:49,030
module you can change the bongos that

00:05:46,120 --> 00:05:51,520
will be indexed for each of these data

00:05:49,030 --> 00:05:55,510
sources so from the worlds you can just

00:05:51,520 --> 00:05:57,210
index articles or basic pages or for

00:05:55,510 --> 00:06:03,910
tips on the midterms the same with

00:05:57,210 --> 00:06:08,290
vocabularies and then you just select

00:06:03,910 --> 00:06:10,419
the server you want to use and then

00:06:08,290 --> 00:06:12,250
there are just Advanced Options and one

00:06:10,419 --> 00:06:19,650
of these index items immediately I'll

00:06:12,250 --> 00:06:21,060
shortly discuss because there's a rather

00:06:19,650 --> 00:06:24,390
advanced

00:06:21,060 --> 00:06:28,690
option really but very important one so

00:06:24,390 --> 00:06:31,690
what this does is if it's enabled then

00:06:28,690 --> 00:06:34,240
as soon as a node or taxonomy term or

00:06:31,690 --> 00:06:37,300
comment gets edited or added it will

00:06:34,240 --> 00:06:39,410
right away be indexed so searches will

00:06:37,300 --> 00:06:42,900
right away return it

00:06:39,410 --> 00:06:44,790
the advantages of this is of course that

00:06:42,900 --> 00:06:47,940
there is no stale date and your searches

00:06:44,790 --> 00:06:51,920
so once something changes then the

00:06:47,940 --> 00:06:55,170
search will brief will reflect this and

00:06:51,920 --> 00:06:58,020
which is especially important if you use

00:06:55,170 --> 00:07:00,630
the index data for any security checks

00:06:58,020 --> 00:07:03,540
so if you if you have a surge you and I

00:07:00,630 --> 00:07:05,430
just showing published content for

00:07:03,540 --> 00:07:09,870
example which is of course a very um

00:07:05,430 --> 00:07:11,690
very common thing to do then if you

00:07:09,870 --> 00:07:14,160
don't have this option enabled and you

00:07:11,690 --> 00:07:15,960
unpublished node it will still show up

00:07:14,160 --> 00:07:19,380
in the search results which can of

00:07:15,960 --> 00:07:22,320
course lead to information leaks so this

00:07:19,380 --> 00:07:24,510
is one large concern which you should

00:07:22,320 --> 00:07:26,760
keep in mind if you plan to disable this

00:07:24,510 --> 00:07:30,420
option then of course this user

00:07:26,760 --> 00:07:34,140
experience if a user is allowed to add

00:07:30,420 --> 00:07:36,810
the add new content or comments and the

00:07:34,140 --> 00:07:38,670
Edit comment and then to a search or

00:07:36,810 --> 00:07:41,370
maybe you use to search a path of doing

00:07:38,670 --> 00:07:43,470
a simple list then they will wonder why

00:07:41,370 --> 00:07:48,480
isn't my content or comment showing up

00:07:43,470 --> 00:07:50,880
if um what disable is this option on the

00:07:48,480 --> 00:07:55,050
other hand there are performance issues

00:07:50,880 --> 00:07:58,170
in some cases for especially when you

00:07:55,050 --> 00:08:02,190
using factory solar it's just much much

00:07:58,170 --> 00:08:05,490
more performant to index large bunches

00:08:02,190 --> 00:08:09,210
of nodes one time so doing cron runs for

00:08:05,490 --> 00:08:10,890
example and if you indexing one at a

00:08:09,210 --> 00:08:13,620
time this can really be a training

00:08:10,890 --> 00:08:15,300
performance for larger sites for smaller

00:08:13,620 --> 00:08:19,890
sites this won't really make any

00:08:15,300 --> 00:08:22,320
difference usually and then the indexing

00:08:19,890 --> 00:08:26,220
of course takes some time so it might

00:08:22,320 --> 00:08:30,690
lead to longer load a page load times

00:08:26,220 --> 00:08:33,960
when the user edits or creates and you

00:08:30,690 --> 00:08:36,720
know Nico stand in the background will

00:08:33,960 --> 00:08:40,920
have to index before the next page can

00:08:36,720 --> 00:08:43,470
really below that so to sum this up it

00:08:40,920 --> 00:08:46,070
is usually a good idea to do some small

00:08:43,470 --> 00:08:49,530
sides especially if you already only one

00:08:46,070 --> 00:08:52,200
editing content anyways you can yeah

00:08:49,530 --> 00:08:52,560
just enable this and unless you run into

00:08:52,200 --> 00:08:53,990
real

00:08:52,560 --> 00:08:56,940
problems with it with the performance

00:08:53,990 --> 00:08:59,100
then just keep enables the larger size

00:08:56,940 --> 00:09:02,910
you'll really have to think about it

00:08:59,100 --> 00:09:04,860
what what the effects will be on your

00:09:02,910 --> 00:09:09,720
side and making this region based on

00:09:04,860 --> 00:09:13,260
that so you can continue this is just a

00:09:09,720 --> 00:09:20,100
small demo so we keep this enabled we

00:09:13,260 --> 00:09:24,000
save and edit now the next step we are

00:09:20,100 --> 00:09:26,790
selecting the fields one two index as I

00:09:24,000 --> 00:09:30,990
said this is also very similar to Rupa

00:09:26,790 --> 00:09:34,260
seven although we have changes plate

00:09:30,990 --> 00:09:37,950
plan for this just not implement at the

00:09:34,260 --> 00:09:40,740
moment I'll come to this later but here

00:09:37,950 --> 00:09:43,950
you have more or less the same same

00:09:40,740 --> 00:09:46,680
interfaces in triple7 just with several

00:09:43,950 --> 00:09:49,050
data sources so one for Commons content

00:09:46,680 --> 00:09:50,330
and taxonomy term with their respective

00:09:49,050 --> 00:09:55,050
fields

00:09:50,330 --> 00:10:00,120
so one improvement here is that you

00:09:55,050 --> 00:10:03,060
don't have to add the text the body text

00:10:00,120 --> 00:10:06,450
as a related field before indexing it I

00:10:03,060 --> 00:10:09,630
think that's that's a UX plus because

00:10:06,450 --> 00:10:13,070
this law of complaints we got for triple

00:10:09,630 --> 00:10:16,980
seven it's actually very much easier

00:10:13,070 --> 00:10:23,610
internally interplay to do and likewise

00:10:16,980 --> 00:10:26,640
we can we can index the subject of

00:10:23,610 --> 00:10:28,589
course we want to find that to the type

00:10:26,640 --> 00:10:30,000
I'm selecting here is actually pretty

00:10:28,589 --> 00:10:34,530
straightforward and most of the cases

00:10:30,000 --> 00:10:36,720
you have yeah in the chest as well

00:10:34,530 --> 00:10:41,810
States billions the only real difference

00:10:36,720 --> 00:10:47,339
is full EXO string string means one

00:10:41,810 --> 00:10:50,100
really one keyword one name like the

00:10:47,339 --> 00:10:53,190
content type this can just be a few

00:10:50,100 --> 00:10:56,880
different strings you want to just index

00:10:53,190 --> 00:10:59,339
10s use as a single toe whereas full

00:10:56,880 --> 00:11:02,070
text will be split into individual words

00:10:59,339 --> 00:11:03,839
which can then be found so for full text

00:11:02,070 --> 00:11:05,310
fields you can really search for words

00:11:03,839 --> 00:11:07,860
that contain the

00:11:05,310 --> 00:11:11,160
for for streaming fields you can just

00:11:07,860 --> 00:11:14,850
filter is this does the field have this

00:11:11,160 --> 00:11:17,520
value and the boost just is a measure of

00:11:14,850 --> 00:11:20,370
a configuration for how important the

00:11:17,520 --> 00:11:24,680
field is so the subject is eight times

00:11:20,370 --> 00:11:27,420
more important than the body field and

00:11:24,680 --> 00:11:30,180
it's in this in the subject field will

00:11:27,420 --> 00:11:33,980
account more than in the body field here

00:11:30,180 --> 00:11:37,290
you have two new a related fields form

00:11:33,980 --> 00:11:39,660
now you can just enable here all the

00:11:37,290 --> 00:11:44,570
related fields you want to have for this

00:11:39,660 --> 00:11:50,730
data source and they will be added above

00:11:44,570 --> 00:11:53,040
so for example if we would want more

00:11:50,730 --> 00:12:02,700
information about the user we can update

00:11:53,040 --> 00:12:07,230
it here and then we have the user okay

00:12:02,700 --> 00:12:10,080
that's that's a that's a bug or not

00:12:07,230 --> 00:12:13,530
really a bug it's just a complication in

00:12:10,080 --> 00:12:15,000
a core it leads to this double step will

00:12:13,530 --> 00:12:17,640
try to eliminate that of course still

00:12:15,000 --> 00:12:20,790
but then you can index the users feels

00:12:17,640 --> 00:12:24,870
as well if you for example want the user

00:12:20,790 --> 00:12:29,130
roles in next with comment then the same

00:12:24,870 --> 00:12:35,850
for for the account for content just

00:12:29,130 --> 00:12:41,120
indexing body and title for the moment

00:12:35,850 --> 00:12:41,120
and again for the fourth economy terms

00:12:42,170 --> 00:12:47,310
so now we're saving this and the last

00:12:44,580 --> 00:12:54,510
step as in Drupal 7 is configuring the

00:12:47,310 --> 00:12:58,370
processors and this again works to a

00:12:54,510 --> 00:12:58,370
large extent as it didn't triple seven

00:13:07,170 --> 00:13:12,209
yes different processors here so

00:13:10,589 --> 00:13:16,379
aggregated fields can be used to add

00:13:12,209 --> 00:13:19,139
additional fields to index content

00:13:16,379 --> 00:13:23,609
access is a very important one I should

00:13:19,139 --> 00:13:26,480
also talk a short clip about what this

00:13:23,609 --> 00:13:29,660
does is automatically add content access

00:13:26,480 --> 00:13:32,519
for nodes and comments to the index

00:13:29,660 --> 00:13:36,419
because it generally is in general it's

00:13:32,519 --> 00:13:38,999
not really possible to do enter the

00:13:36,419 --> 00:13:40,980
accession of generic level in Drupal so

00:13:38,999 --> 00:13:43,230
most of the time when you create a

00:13:40,980 --> 00:13:46,949
search it's your responsibility to make

00:13:43,230 --> 00:13:49,679
sure that only content that's the view

00:13:46,949 --> 00:13:52,230
the user can actually view is being

00:13:49,679 --> 00:13:54,629
displayed

00:13:52,230 --> 00:13:58,290
but since nodes and comments are of

00:13:54,629 --> 00:14:00,329
course the main use case here we

00:13:58,290 --> 00:14:02,850
implemented through posts own node

00:14:00,329 --> 00:14:05,189
access mechanism in the Search API so if

00:14:02,850 --> 00:14:09,419
you are citing is using that you can

00:14:05,189 --> 00:14:10,919
just any will enable this processor and

00:14:09,419 --> 00:14:13,319
everything will be taken care of

00:14:10,919 --> 00:14:15,540
automatically and as mentioned before

00:14:13,319 --> 00:14:18,989
index items immediately is important

00:14:15,540 --> 00:14:21,480
here to enable because otherwise the no

00:14:18,989 --> 00:14:25,199
access checks will use stale data and

00:14:21,480 --> 00:14:29,329
you'll run into problems there are other

00:14:25,199 --> 00:14:32,069
modules that don't use node X at rupess

00:14:29,329 --> 00:14:34,589
cornered access system so those will

00:14:32,069 --> 00:14:38,339
have to be handled different separately

00:14:34,589 --> 00:14:40,860
and this and also all other data sources

00:14:38,339 --> 00:14:42,509
as far as they have some access control

00:14:40,860 --> 00:14:50,819
you would have to take care of that

00:14:42,509 --> 00:14:54,600
yourself to back to the demo so other

00:14:50,819 --> 00:14:56,999
other filters are there as before node

00:14:54,600 --> 00:14:59,069
status is also a method if you just

00:14:56,999 --> 00:15:02,999
never want to show unpublished nodes

00:14:59,069 --> 00:15:04,859
then you can just use that to Renat item

00:15:02,999 --> 00:15:06,629
is if you want to include just

00:15:04,859 --> 00:15:09,839
everything that would be displayed on

00:15:06,629 --> 00:15:13,980
the node page more or less just note

00:15:09,839 --> 00:15:17,970
content HTML if you just want to index

00:15:13,980 --> 00:15:20,459
that you can just enable this and search

00:15:17,970 --> 00:15:22,379
through that field because that will

00:15:20,459 --> 00:15:24,420
yep two of course also contain

00:15:22,379 --> 00:15:26,759
everything it should be found just take

00:15:24,420 --> 00:15:31,350
care that no field labels are included

00:15:26,759 --> 00:15:34,740
there or something and all you cannot do

00:15:31,350 --> 00:15:39,809
post a title or other fields that way so

00:15:34,740 --> 00:15:42,120
it's also trade off stop words are also

00:15:39,809 --> 00:15:45,809
practical to exclude common words from

00:15:42,120 --> 00:15:50,790
the index what something that's new now

00:15:45,809 --> 00:15:53,370
interpolate is that the processors the

00:15:50,790 --> 00:15:56,059
stages with which the process operate

00:15:53,370 --> 00:16:02,850
are explicitly shown now and you can

00:15:56,059 --> 00:16:05,730
rearrange the processor order specific

00:16:02,850 --> 00:16:08,910
to the different stages so

00:16:05,730 --> 00:16:11,639
pre-processing index is before items are

00:16:08,910 --> 00:16:14,819
being being indexed we first want to add

00:16:11,639 --> 00:16:18,779
the aggregated fields then the context

00:16:14,819 --> 00:16:21,930
content access information and then HTML

00:16:18,779 --> 00:16:28,559
field to tokenizer and well ignore case

00:16:21,930 --> 00:16:32,730
can also go up there but this default

00:16:28,559 --> 00:16:35,670
sorting will of course be still still

00:16:32,730 --> 00:16:38,759
refined to reflect what is what would be

00:16:35,670 --> 00:16:39,179
the most sensible default this isn't

00:16:38,759 --> 00:16:41,939
working

00:16:39,179 --> 00:16:45,089
complete at the moment proposes queries

00:16:41,939 --> 00:16:48,720
for when you do a search query at what

00:16:45,089 --> 00:16:53,509
what point will build different

00:16:48,720 --> 00:16:53,509
processors pre-process this query so the

00:16:54,170 --> 00:16:59,420
whole order should be more or less the

00:16:56,850 --> 00:17:02,550
same as here as far as the process

00:16:59,420 --> 00:17:05,610
processes are the same and and you can

00:17:02,550 --> 00:17:09,449
have the processor settings aggregated

00:17:05,610 --> 00:17:14,760
fields for aggregated fields you can add

00:17:09,449 --> 00:17:17,970
new fields and one one practical use for

00:17:14,760 --> 00:17:21,449
this is to have a sortable title because

00:17:17,970 --> 00:17:25,529
now we have to index a title as a full

00:17:21,449 --> 00:17:27,419
text field and especially and actually

00:17:25,529 --> 00:17:30,960
in Drupal 8 you can sort on full text

00:17:27,419 --> 00:17:33,120
fields but you have the title field in

00:17:30,960 --> 00:17:34,490
three different fields because it's the

00:17:33,120 --> 00:17:37,760
subject

00:17:34,490 --> 00:17:39,910
title four nodes and it's the name for

00:17:37,760 --> 00:17:42,440
taxonomy terms so there wouldn't be a

00:17:39,910 --> 00:17:44,240
practical way to sort in this field

00:17:42,440 --> 00:17:46,640
because it's really three different

00:17:44,240 --> 00:17:50,170
fields but aggregated views we can just

00:17:46,640 --> 00:17:55,670
combine this information into a single

00:17:50,170 --> 00:17:58,430
search api field and that way it because

00:17:55,670 --> 00:18:06,680
it becomes much easier to sort and edit

00:17:58,430 --> 00:18:09,940
them the other field the other

00:18:06,680 --> 00:18:12,770
processors are more self-explanatory

00:18:09,940 --> 00:18:16,450
HTML filters should of course only work

00:18:12,770 --> 00:18:20,020
on the fields that actually contain HTML

00:18:16,450 --> 00:18:24,020
ignore case can work on all of those

00:18:20,020 --> 00:18:28,490
stop first - this will only work on a

00:18:24,020 --> 00:18:31,970
full text field and the token tokenizer

00:18:28,490 --> 00:18:36,650
settings are also ok so we just saved

00:18:31,970 --> 00:18:41,360
this then we can quickly take a look at

00:18:36,650 --> 00:18:44,650
the fields list where the fields these

00:18:41,360 --> 00:18:49,300
process ad will now be displayed as well

00:18:44,650 --> 00:18:52,610
especially now there's there's a certain

00:18:49,300 --> 00:18:56,090
system in the Search API to allow fields

00:18:52,610 --> 00:18:58,250
to be to be always enabled so to be

00:18:56,090 --> 00:19:02,660
forced enables more or less that you

00:18:58,250 --> 00:19:04,450
cannot not index them really because of

00:19:02,660 --> 00:19:07,190
course if you have an aggregated field

00:19:04,450 --> 00:19:12,080
you always want to index it so you

00:19:07,190 --> 00:19:17,450
cannot even change that here same for

00:19:12,080 --> 00:19:19,670
example the that come the content access

00:19:17,450 --> 00:19:23,270
processor uses the common statuses and

00:19:19,670 --> 00:19:25,900
this will also be always indexed as long

00:19:23,270 --> 00:19:29,060
as the content access processes enabled

00:19:25,900 --> 00:19:32,770
but now we just need to index the

00:19:29,060 --> 00:19:32,770
content with these settings

00:19:35,750 --> 00:19:41,480
would you just take a few moments and

00:19:38,110 --> 00:19:51,710
then we're already ready to create a

00:19:41,480 --> 00:19:53,750
search with these server and index the

00:19:51,710 --> 00:19:59,299
way we create the search is of course

00:19:53,750 --> 00:20:01,640
with views with using powerful Drupal 8

00:19:59,299 --> 00:20:06,880
is of course clear that views will be

00:20:01,640 --> 00:20:09,679
the primary way to create searches and

00:20:06,880 --> 00:20:16,340
yeah it's the only way included in the

00:20:09,679 --> 00:20:22,490
search api itself so here we select

00:20:16,340 --> 00:20:26,059
index we just created we of course want

00:20:22,490 --> 00:20:29,450
to create a page with that random search

00:20:26,059 --> 00:20:33,380
api item just lets you use a new mode of

00:20:29,450 --> 00:20:36,190
the of the nodes and comments to display

00:20:33,380 --> 00:20:36,190
the search results

00:20:46,930 --> 00:20:54,610
so first off we define these new modes

00:20:51,370 --> 00:20:59,620
that should be used for that we want of

00:20:54,610 --> 00:21:04,660
course to have just a teaser for the

00:20:59,620 --> 00:21:06,460
nodes the rest can stay the same you

00:21:04,660 --> 00:21:09,190
might also want to just create new view

00:21:06,460 --> 00:21:14,410
modes for the search results to be able

00:21:09,190 --> 00:21:19,240
to better better customize that we had a

00:21:14,410 --> 00:21:24,820
full-text search filter to be able to do

00:21:19,240 --> 00:21:27,340
full-text search we of course also

00:21:24,820 --> 00:21:31,810
expose it so visitors can actually use

00:21:27,340 --> 00:21:35,980
it and settings are also pretty

00:21:31,810 --> 00:21:38,290
self-explanatory I think the one that

00:21:35,980 --> 00:21:41,950
gives a lot of people trouble in triple7

00:21:38,290 --> 00:21:44,650
at least is this one which should for

00:21:41,950 --> 00:21:46,660
99% of cases just remain at search Keys

00:21:44,650 --> 00:21:49,810
so if you're unsure just don't touch

00:21:46,660 --> 00:21:51,970
this you can also restrict the fields

00:21:49,810 --> 00:21:53,770
that being searched at the minimum

00:21:51,970 --> 00:21:59,080
keyword length should be set to the same

00:21:53,770 --> 00:22:03,790
as as you've you configured for the

00:21:59,080 --> 00:22:05,740
database back-end so that this will play

00:22:03,790 --> 00:22:07,320
well with each with each other and the

00:22:05,740 --> 00:22:12,670
user will also see what's wrong if he

00:22:07,320 --> 00:22:15,880
doesn't doesn't enter - doesn't

00:22:12,670 --> 00:22:18,340
interfere - the long enough well also

00:22:15,880 --> 00:22:21,490
practical of course results summary so

00:22:18,340 --> 00:22:24,700
that we see what's going on and you

00:22:21,490 --> 00:22:29,350
might also of course want to add a add a

00:22:24,700 --> 00:22:30,760
no results behavior it just says sorry

00:22:29,350 --> 00:22:35,830
no results could be found through this

00:22:30,760 --> 00:22:39,370
search but that's normal abuse tweaking

00:22:35,830 --> 00:22:47,500
of course so now it's already saved we

00:22:39,370 --> 00:22:49,660
can we can already view this page and I

00:22:47,500 --> 00:22:57,610
will see just a list of all the content

00:22:49,660 --> 00:23:00,260
we have with comments and if we now if

00:22:57,610 --> 00:23:02,610
we now insert one of the

00:23:00,260 --> 00:23:08,850
where to their contain this is of course

00:23:02,610 --> 00:23:11,940
just all lorem ipsum debugging content

00:23:08,850 --> 00:23:14,310
then you get results to only contain

00:23:11,940 --> 00:23:18,990
this there are a few results as we see

00:23:14,310 --> 00:23:22,350
here and items that have macto in the

00:23:18,990 --> 00:23:27,470
title which has a higher boost will come

00:23:22,350 --> 00:23:31,860
first here or generally be ranked higher

00:23:27,470 --> 00:23:37,410
and of course if we then use more terms

00:23:31,860 --> 00:23:44,670
the results will be look at fewer and

00:23:37,410 --> 00:23:49,880
fewer okay then I also a showcase how to

00:23:44,670 --> 00:23:53,280
set up search with the solar module

00:23:49,880 --> 00:23:56,370
which isn't isn't as done at the moment

00:23:53,280 --> 00:24:01,170
as the top database back-end so then

00:23:56,370 --> 00:24:06,510
there are more things to flesh out yet

00:24:01,170 --> 00:24:10,800
but basically it works it basically

00:24:06,510 --> 00:24:14,100
works first of course you need to enable

00:24:10,800 --> 00:24:15,750
the slow search module which provides

00:24:14,100 --> 00:24:17,460
the back which provides back and

00:24:15,750 --> 00:24:20,930
implementation for a search repair to

00:24:17,460 --> 00:24:20,930
use with Apache Solr

00:24:31,100 --> 00:24:40,070
here it and just create a new server but

00:24:35,880 --> 00:24:43,140
before we do that we of course have to

00:24:40,070 --> 00:24:45,870
we have to do two things actually

00:24:43,140 --> 00:24:48,930
first off once we have the module

00:24:45,870 --> 00:24:52,680
installed we need to install since

00:24:48,930 --> 00:24:55,620
dependency solarium which we do with

00:24:52,680 --> 00:24:59,070
composer so just go to the module

00:24:55,620 --> 00:25:01,950
directory execute the statement at this

00:24:59,070 --> 00:25:05,280
command and then it will automatically

00:25:01,950 --> 00:25:09,510
install a solarium in the solar module

00:25:05,280 --> 00:25:16,290
for you and which the module requires to

00:25:09,510 --> 00:25:19,590
be working and the other thing ok yeah

00:25:16,290 --> 00:25:21,990
this seems to work fine the other thing

00:25:19,590 --> 00:25:24,450
we have to do is actually start the

00:25:21,990 --> 00:25:28,230
solar server on our machine which is

00:25:24,450 --> 00:25:33,420
also pretty easy I have already

00:25:28,230 --> 00:25:36,750
downloaded the solar package from the

00:25:33,420 --> 00:25:38,940
website five dots three dots serious I

00:25:36,750 --> 00:25:42,060
think the most recent one or this one of

00:25:38,940 --> 00:25:45,060
the most recent ones and there are no

00:25:42,060 --> 00:25:49,580
known problems with even the latest

00:25:45,060 --> 00:25:49,580
versions you can really use any of them

00:25:50,270 --> 00:26:02,580
then we need a bit of configuration we

00:25:56,220 --> 00:26:04,710
need to first make a troop of directory

00:26:02,580 --> 00:26:06,870
for our server and a conf directory

00:26:04,710 --> 00:26:09,600
inside that Drupal directory for the

00:26:06,870 --> 00:26:11,970
configuration files these configuration

00:26:09,600 --> 00:26:15,420
files just can't come packaged with the

00:26:11,970 --> 00:26:19,170
search by solar module in the solar conf

00:26:15,420 --> 00:26:22,590
directory and based on the solar major

00:26:19,170 --> 00:26:24,650
version so we just copy all of these in

00:26:22,590 --> 00:26:24,650
here

00:26:27,410 --> 00:26:41,450
then of course yeah then we have to

00:26:33,740 --> 00:26:45,050
start the server to which now with a

00:26:41,450 --> 00:26:48,980
solar five regular single command it

00:26:45,050 --> 00:26:51,140
just to pin solar start and will

00:26:48,980 --> 00:26:54,440
automatically start so a server for you

00:26:51,140 --> 00:26:57,020
so there's no need to use char

00:26:54,440 --> 00:26:59,450
explicitly or installed Tomcat on your

00:26:57,020 --> 00:27:06,290
server this is not all pre bound in the

00:26:59,450 --> 00:27:09,530
same single application now now this

00:27:06,290 --> 00:27:14,330
works and just go to the core admin and

00:27:09,530 --> 00:27:17,450
creating new core named troop in our

00:27:14,330 --> 00:27:20,230
case as you saw earlier I use Drupal for

00:27:17,450 --> 00:27:20,230
the directory name

00:27:26,800 --> 00:27:34,660
so this solar server is now running with

00:27:30,130 --> 00:27:39,160
our custom configuration so now we just

00:27:34,660 --> 00:27:42,130
need to search it by about it again just

00:27:39,160 --> 00:27:46,180
specify any name then use the soul up

00:27:42,130 --> 00:27:49,290
icon in this case most of the settings

00:27:46,180 --> 00:27:52,300
will already be the right ones for the

00:27:49,290 --> 00:27:54,840
normal installation the only thing we

00:27:52,300 --> 00:28:00,700
have to adapt here is to add to our

00:27:54,840 --> 00:28:04,630
instance directory name to the path the

00:28:00,700 --> 00:28:08,070
rest is the rest is old man stuff which

00:28:04,630 --> 00:28:09,880
we don't have to care about for a simple

00:28:08,070 --> 00:28:13,480
especially for a simple test

00:28:09,880 --> 00:28:15,550
installation one important thing to keep

00:28:13,480 --> 00:28:19,090
in mind here though is that when you

00:28:15,550 --> 00:28:22,540
install a solar server this way everyone

00:28:19,090 --> 00:28:26,290
can access it so you have to use some

00:28:22,540 --> 00:28:28,750
way of restricting access to the salaah

00:28:26,290 --> 00:28:34,330
server otherwise anyone can add or

00:28:28,750 --> 00:28:36,490
delete indexed items so but there's just

00:28:34,330 --> 00:28:39,040
go to the search by solar a handbook

00:28:36,490 --> 00:28:43,690
which explains several ways of

00:28:39,040 --> 00:28:46,600
implementing access checks here anyways

00:28:43,690 --> 00:28:48,970
we see the server was successfully saved

00:28:46,600 --> 00:28:52,930
and the solar server could be reached so

00:28:48,970 --> 00:28:56,980
we are set it up correctly no items have

00:28:52,930 --> 00:28:59,410
been indexed yet and yeah everything

00:28:56,980 --> 00:29:05,560
else seems to be fine too so now we just

00:28:59,410 --> 00:29:09,430
need to move the index to the to the

00:29:05,560 --> 00:29:11,850
server and we can use the search as

00:29:09,430 --> 00:29:11,850
before

00:29:19,160 --> 00:29:29,680
oh no you very first have to index of

00:29:21,230 --> 00:29:29,680
course now cross your fingers please

00:29:35,940 --> 00:29:43,409
this never happened nothing to see here

00:29:38,309 --> 00:29:47,250
okay but in general once this is fixed

00:29:43,409 --> 00:29:49,500
it should work it should just um very

00:29:47,250 --> 00:29:53,159
guess before the database back and not a

00:29:49,500 --> 00:29:56,250
very um not a very good presentation I

00:29:53,159 --> 00:30:00,389
am admit but believe me it will work

00:29:56,250 --> 00:30:03,240
again and it worked before okay but

00:30:00,389 --> 00:30:09,539
that's that's already it for the

00:30:03,240 --> 00:30:11,490
demonstration oh yeah I forgot that but

00:30:09,539 --> 00:30:14,039
I mentioned most of this so you can also

00:30:11,490 --> 00:30:16,169
have self installing so large you can of

00:30:14,039 --> 00:30:17,970
course also use a solar holster just

00:30:16,169 --> 00:30:22,110
have to take care that the right config

00:30:17,970 --> 00:30:24,330
files are used security concerns I met I

00:30:22,110 --> 00:30:28,649
mentioned that yeah a true Plutarch

00:30:24,330 --> 00:30:30,419
handbook all this um this success checks

00:30:28,649 --> 00:30:37,049
are explained how to set them up with

00:30:30,419 --> 00:30:41,070
solar 4 or 5 or 3 I guess you know just

00:30:37,049 --> 00:30:44,190
to go quickly over some of the plan

00:30:41,070 --> 00:30:47,789
fellas changes I will really shortly

00:30:44,190 --> 00:30:49,879
mention the simplified UI so this is

00:30:47,789 --> 00:30:53,309
something we really want to tackle still

00:30:49,879 --> 00:30:56,879
just after the basic framework stuff has

00:30:53,309 --> 00:31:00,000
been finished because using the face of

00:30:56,879 --> 00:31:02,330
course cost cost a lot of a lot of

00:31:00,000 --> 00:31:05,519
problems for especially for newer users

00:31:02,330 --> 00:31:08,460
because most of it is uncle office

00:31:05,519 --> 00:31:11,879
unclear for new users and not very well

00:31:08,460 --> 00:31:15,860
explained and just maybe even in the

00:31:11,879 --> 00:31:20,279
wrong mindset for for most of the users

00:31:15,860 --> 00:31:23,970
so what we want to do for one thing is

00:31:20,279 --> 00:31:27,899
just have more views like using the face

00:31:23,970 --> 00:31:29,850
for the fewest tab or at least we're

00:31:27,899 --> 00:31:33,389
planning to do that that's a current

00:31:29,850 --> 00:31:35,730
idea so that you just add new fields the

00:31:33,389 --> 00:31:39,179
way you would infuse and not have this

00:31:35,730 --> 00:31:42,899
huge table which can really get out of

00:31:39,179 --> 00:31:44,309
hand if you had four large sides as I'm

00:31:42,899 --> 00:31:49,960
sure has happened to some of you in

00:31:44,309 --> 00:31:52,820
triple7 and we also plan to have with

00:31:49,960 --> 00:31:55,879
for easy search creation where you just

00:31:52,820 --> 00:31:58,039
click after you stole a module just

00:31:55,879 --> 00:32:00,529
click okay I want to set up a search

00:31:58,039 --> 00:32:03,649
then you just enter a few basic things

00:32:00,529 --> 00:32:06,860
and wizard takes care of all the rest

00:32:03,649 --> 00:32:09,230
basically playing sensible defaults

00:32:06,860 --> 00:32:11,149
saying okay you probably if you're

00:32:09,230 --> 00:32:14,990
indexing notes you probably want to have

00:32:11,149 --> 00:32:17,899
these fields available index this way

00:32:14,990 --> 00:32:21,440
and the search with this and this this

00:32:17,899 --> 00:32:24,080
is also just and just a plan or idea at

00:32:21,440 --> 00:32:28,580
the moment but we definitely want to do

00:32:24,080 --> 00:32:31,820
something like that because yeah setup

00:32:28,580 --> 00:32:33,980
for new users or inexperienced users

00:32:31,820 --> 00:32:36,649
what is really a problem in Drupal 7 and

00:32:33,980 --> 00:32:39,289
maybe would also backport some of it but

00:32:36,649 --> 00:32:43,009
as you saw the search by database

00:32:39,289 --> 00:32:46,730
defaults module already does something

00:32:43,009 --> 00:32:49,129
like this having an evening to any with

00:32:46,730 --> 00:32:52,100
just a name just and even the module

00:32:49,129 --> 00:32:53,659
you'll have a basic set up it's just a

00:32:52,100 --> 00:32:55,519
very flexible because it's all

00:32:53,659 --> 00:32:57,350
pre-configured so if you're using

00:32:55,519 --> 00:32:59,690
different fields on the nodes or

00:32:57,350 --> 00:33:03,350
something then this will all fall apart

00:32:59,690 --> 00:33:06,639
and so this is just the first step but

00:33:03,350 --> 00:33:10,129
we definitely want to prove there and

00:33:06,639 --> 00:33:13,399
then there are really not many other

00:33:10,129 --> 00:33:17,019
large changes planned some of the small

00:33:13,399 --> 00:33:19,749
changes are for indexing performance and

00:33:17,019 --> 00:33:23,749
especially initial set up performance

00:33:19,749 --> 00:33:28,659
because for huge sides with something

00:33:23,749 --> 00:33:31,909
like a million rows in throughput 7 it's

00:33:28,659 --> 00:33:34,429
it's sometimes already happened that not

00:33:31,909 --> 00:33:37,460
that it's made problems when creating

00:33:34,429 --> 00:33:39,619
the index to get all these items tracked

00:33:37,460 --> 00:33:41,509
and the problem will be even worse for

00:33:39,619 --> 00:33:44,200
true played because now you have all of

00:33:41,509 --> 00:33:47,990
the nodes in different languages or

00:33:44,200 --> 00:33:49,909
potentially they can be and you have to

00:33:47,990 --> 00:33:53,450
check for that and you have different

00:33:49,909 --> 00:33:55,909
data sources of course so also for all

00:33:53,450 --> 00:33:58,759
of the million nodes maybe more even

00:33:55,909 --> 00:34:02,450
more comments and so that's something

00:33:58,759 --> 00:34:03,350
we'll have to deal with still one thing

00:34:02,450 --> 00:34:06,890
that

00:34:03,350 --> 00:34:11,179
if we can implement plans correctly as

00:34:06,890 --> 00:34:12,980
in true procore we which have which has

00:34:11,179 --> 00:34:17,090
really been focused on caching lately

00:34:12,980 --> 00:34:19,520
and providing even to authenticated user

00:34:17,090 --> 00:34:22,490
a very smooth experience through caching

00:34:19,520 --> 00:34:24,679
if we can implement proper caching for a

00:34:22,490 --> 00:34:28,790
Search API this would also be a huge

00:34:24,679 --> 00:34:31,280
benefit of course at least for some

00:34:28,790 --> 00:34:36,200
thoughts for some sites I guess or for

00:34:31,280 --> 00:34:39,470
the most basic most common most common

00:34:36,200 --> 00:34:43,850
pages and one other thing is search

00:34:39,470 --> 00:34:45,679
operators so for example there isn't

00:34:43,850 --> 00:34:49,220
that between operate and the Search API

00:34:45,679 --> 00:34:53,840
in triple7 so you cannot say I want to

00:34:49,220 --> 00:35:00,920
have this value between between 1 & 3 or

00:34:53,840 --> 00:35:03,950
do maybe do something like begins with

00:35:00,920 --> 00:35:06,140
search for Strings so some of these

00:35:03,950 --> 00:35:11,300
operators will be added and also be made

00:35:06,140 --> 00:35:14,530
it made available in fuse and speaking

00:35:11,300 --> 00:35:18,980
of views that's as you might have seen

00:35:14,530 --> 00:35:22,250
far from finished at the moment so we

00:35:18,980 --> 00:35:25,040
have basic support for viewing the

00:35:22,250 --> 00:35:27,920
random items and having a full text

00:35:25,040 --> 00:35:30,830
filter but really not much else so this

00:35:27,920 --> 00:35:35,330
will be once the basic framework is done

00:35:30,830 --> 00:35:37,670
the next step of course to enable users

00:35:35,330 --> 00:35:41,890
to create views actually using all of

00:35:37,670 --> 00:35:46,430
this functionality the old one and new

00:35:41,890 --> 00:35:49,340
then there's of course facets there was

00:35:46,430 --> 00:35:54,310
an effort started in at the best is

00:35:49,340 --> 00:35:58,790
multi year in March I think I think and

00:35:54,310 --> 00:36:00,740
so the facets API module port is on the

00:35:58,790 --> 00:36:04,580
way it's still a long way from being

00:36:00,740 --> 00:36:10,430
done but that will very surely be

00:36:04,580 --> 00:36:12,380
progress here on that as well and the

00:36:10,430 --> 00:36:14,330
autocomplete and saved searches modules

00:36:12,380 --> 00:36:18,320
for the Search API will also definitely

00:36:14,330 --> 00:36:21,710
be ported but also

00:36:18,320 --> 00:36:23,960
at least if not if no one else gets to

00:36:21,710 --> 00:36:26,660
it I plan to do this after the surgery

00:36:23,960 --> 00:36:29,690
by itself is stable because a justify

00:36:26,660 --> 00:36:32,770
our priority and be otherwise these

00:36:29,690 --> 00:36:37,240
modules would might still implement

00:36:32,770 --> 00:36:37,240
stuff based on shaky-shaky

00:36:37,510 --> 00:36:44,750
basis so it's better to first get a

00:36:41,450 --> 00:36:47,960
search it by itself stable for the other

00:36:44,750 --> 00:36:50,150
modules I expect this will also be

00:36:47,960 --> 00:36:56,930
ported attachments already has a port

00:36:50,150 --> 00:36:59,450
and yeah just two modules that at least

00:36:56,930 --> 00:37:02,530
I don't plan to port I moved to index

00:36:59,450 --> 00:37:05,030
searches module because with the new

00:37:02,530 --> 00:37:08,210
functionality of creating an index for

00:37:05,030 --> 00:37:11,390
different types of entities at once this

00:37:08,210 --> 00:37:14,540
will be pretty useless I hope and it

00:37:11,390 --> 00:37:16,250
didn't work that well anyways so that

00:37:14,540 --> 00:37:19,310
will almost certainly not deported at

00:37:16,250 --> 00:37:22,880
the pages modules since I've uses now in

00:37:19,310 --> 00:37:27,830
core I guess the adding using search

00:37:22,880 --> 00:37:31,940
views would just be the primary way to

00:37:27,830 --> 00:37:34,000
create searches and it won't it won't be

00:37:31,940 --> 00:37:37,760
worth it to port pages module which

00:37:34,000 --> 00:37:40,790
which works around that but if anyone

00:37:37,760 --> 00:37:44,750
wants to port that's of course I'm also

00:37:40,790 --> 00:37:47,920
fine by me okay so this was my

00:37:44,750 --> 00:37:47,920
presentation thank you very much

00:37:52,610 --> 00:38:06,510
are there any questions yes okay the

00:38:04,890 --> 00:38:12,000
question was about the package solar

00:38:06,510 --> 00:38:13,770
module and I thought I didn't mention

00:38:12,000 --> 00:38:16,110
this but I thought it was already I'm

00:38:13,770 --> 00:38:18,870
really known the package solar module

00:38:16,110 --> 00:38:20,400
won't be ported Drupal 8 it is it was

00:38:18,870 --> 00:38:22,650
already merged more or less with the sir

00:38:20,400 --> 00:38:26,550
cheaper solar module and we are working

00:38:22,650 --> 00:38:28,080
to make sure that the new search by

00:38:26,550 --> 00:38:31,050
solar module for true palade will

00:38:28,080 --> 00:38:33,330
support all the use cases that the

00:38:31,050 --> 00:38:35,940
picture' solar module supported in

00:38:33,330 --> 00:38:40,710
triple7 so that everyone has a good

00:38:35,940 --> 00:38:43,670
update path and yeah there's that's been

00:38:40,710 --> 00:38:48,800
decided already

00:38:43,670 --> 00:38:48,800
other questions yes

00:38:57,500 --> 00:39:04,940
and the question was and from the

00:38:59,900 --> 00:39:07,250
processes tab why the list of four

00:39:04,940 --> 00:39:09,109
pre-process index proposes query and

00:39:07,250 --> 00:39:11,720
post printers query very different the

00:39:09,109 --> 00:39:13,970
process lists this is because the

00:39:11,720 --> 00:39:17,900
processes work at different stages and

00:39:13,970 --> 00:39:20,840
this list this form really doesn't only

00:39:17,900 --> 00:39:23,180
allow you to configure the order but

00:39:20,840 --> 00:39:26,920
also shows you which processor works in

00:39:23,180 --> 00:39:29,900
which stage so the aggregates fields

00:39:26,920 --> 00:39:32,359
processor only adds a field and it only

00:39:29,900 --> 00:39:35,210
duster that index time because there's

00:39:32,359 --> 00:39:36,800
nothing to do with search time so it's

00:39:35,210 --> 00:39:40,609
only listed in the first of the three

00:39:36,800 --> 00:39:44,060
columns pre-process index things like

00:39:40,609 --> 00:39:46,550
the tokenizer which splits the the

00:39:44,060 --> 00:39:49,280
content to individual words this has to

00:39:46,550 --> 00:39:53,090
work at indexing but also when doing a

00:39:49,280 --> 00:39:55,550
search because you have to split the

00:39:53,090 --> 00:39:58,820
search Keys the same way on the other

00:39:55,550 --> 00:40:00,290
hand when post-processing the query only

00:39:58,820 --> 00:40:03,369
little has to be done you can do

00:40:00,290 --> 00:40:07,369
highlighting so the highlight process is

00:40:03,369 --> 00:40:11,000
active in this at this stage and you can

00:40:07,369 --> 00:40:13,250
stop processor just adds the stop words

00:40:11,000 --> 00:40:15,619
it filled it out to the result so that

00:40:13,250 --> 00:40:19,040
they can be displayed but other than

00:40:15,619 --> 00:40:21,500
that most the other processes don't have

00:40:19,040 --> 00:40:24,020
to do anything at this stage so this is

00:40:21,500 --> 00:40:26,089
really a kind of introspection into what

00:40:24,020 --> 00:40:28,339
the process are doing something that was

00:40:26,089 --> 00:40:31,880
actually also requested for triple7 just

00:40:28,339 --> 00:40:35,900
to be just a bit more clear what the

00:40:31,880 --> 00:40:39,490
processes are actually doing other

00:40:35,900 --> 00:40:39,490
questions yes

00:40:48,890 --> 00:40:58,160
you mean the gym you mean the config

00:40:52,130 --> 00:40:59,569
system in interpolate so the question is

00:40:58,160 --> 00:41:02,539
whether the search if I plays nicely

00:40:59,569 --> 00:41:05,480
with the new config system interpolate

00:41:02,539 --> 00:41:08,630
and the answer is yes true play it comes

00:41:05,480 --> 00:41:11,660
with yeah very create system for

00:41:08,630 --> 00:41:13,880
creating entities based on configuration

00:41:11,660 --> 00:41:16,880
and the search if I use this for both

00:41:13,880 --> 00:41:19,009
indexes and servers so both so every

00:41:16,880 --> 00:41:23,499
index of server you create will actually

00:41:19,009 --> 00:41:27,680
be a single configuration object and can

00:41:23,499 --> 00:41:30,499
easily be exported and imported on a

00:41:27,680 --> 00:41:33,259
different site or export this part of

00:41:30,499 --> 00:41:36,200
the whole configuration and yeah it's of

00:41:33,259 --> 00:41:39,079
course in Drupal 7 there were was a lot

00:41:36,200 --> 00:41:40,700
of there were a lot of pains with using

00:41:39,079 --> 00:41:42,829
features with the Search API especially

00:41:40,700 --> 00:41:46,430
with database back and of course now

00:41:42,829 --> 00:41:50,630
that this dysfunctionality is in trooper

00:41:46,430 --> 00:41:52,220
core we also want to ensure that this is

00:41:50,630 --> 00:41:57,519
doesn't happen again and this really

00:41:52,220 --> 00:42:03,440
works smoothly - yeah export and import

00:41:57,519 --> 00:42:07,239
configuration and servers or indexes any

00:42:03,440 --> 00:42:07,239
other questions yes

00:42:11,240 --> 00:42:21,020
I know this is is actually only a just a

00:42:19,010 --> 00:42:25,250
text field where you have to where you

00:42:21,020 --> 00:42:27,829
can enter them it's so here you have

00:42:25,250 --> 00:42:31,000
just have a list of off all the stop

00:42:27,829 --> 00:42:33,910
words it's of course not

00:42:31,000 --> 00:42:36,380
in Drupal seven there was actually the

00:42:33,910 --> 00:42:38,750
alternative to either use a file or this

00:42:36,380 --> 00:42:42,619
text field so maybe that will be added

00:42:38,750 --> 00:42:45,050
but added later but basically the idea

00:42:42,619 --> 00:42:48,680
is to have this configuration in the

00:42:45,050 --> 00:42:56,140
index itself also for the cup for better

00:42:48,680 --> 00:42:56,140
configuration support yes

00:43:02,759 --> 00:43:10,410
the question was whether things like

00:43:06,029 --> 00:43:12,259
stop verts would be much wood if there

00:43:10,410 --> 00:43:17,180
are plans to make this multilingual

00:43:12,259 --> 00:43:21,499
that's a good question yeah basically we

00:43:17,180 --> 00:43:24,269
we are trying to do a much better job at

00:43:21,499 --> 00:43:29,190
supporting multilingual sites in triple7

00:43:24,269 --> 00:43:31,769
also because again core has made great

00:43:29,190 --> 00:43:33,599
improvements in that area and what core

00:43:31,769 --> 00:43:38,400
does the Search API should of course

00:43:33,599 --> 00:43:40,589
support to so for the translated

00:43:38,400 --> 00:43:43,650
entities actually are now indexed

00:43:40,589 --> 00:43:46,349
separately so these will work very

00:43:43,650 --> 00:43:49,259
smoothly most cases already I'm

00:43:46,349 --> 00:43:51,869
regarding language specific

00:43:49,259 --> 00:43:54,289
configuration we are not that far

00:43:51,869 --> 00:43:56,819
unfortunately so there are not no

00:43:54,289 --> 00:43:59,489
multilingual top version I don't even

00:43:56,819 --> 00:44:02,309
think that this has been noticed but so

00:43:59,489 --> 00:44:05,489
if if you want please create an issue

00:44:02,309 --> 00:44:08,910
for that and we'll see it's a really

00:44:05,489 --> 00:44:10,529
good idea of course because language

00:44:08,910 --> 00:44:13,259
independent stop words are basically

00:44:10,529 --> 00:44:15,630
useless for multilingual sites so yeah

00:44:13,259 --> 00:44:19,349
we should definitely have that and we

00:44:15,630 --> 00:44:20,759
also try to make better multilingual

00:44:19,349 --> 00:44:23,009
support into something to the solar

00:44:20,759 --> 00:44:25,559
module itself so this will also work

00:44:23,009 --> 00:44:27,799
better out of the box or at least work

00:44:25,559 --> 00:44:33,210
smoothly with an additional module

00:44:27,799 --> 00:44:36,299
Thomas yes answer this question as well

00:44:33,210 --> 00:44:39,479
oh of course yeah I have yeah just want

00:44:36,299 --> 00:44:41,670
to inform you that we started porting

00:44:39,479 --> 00:44:45,690
the Apache Solr multilingual module to

00:44:41,670 --> 00:44:48,779
search ATI interpolate and already in

00:44:45,690 --> 00:44:50,519
working prototype yeah and maybe that's

00:44:48,779 --> 00:44:52,019
the answer for multilingual stop words

00:44:50,519 --> 00:44:54,809
handling all the languages and stuff

00:44:52,019 --> 00:45:03,180
like that yeah it's what to do but we

00:44:54,809 --> 00:45:05,069
are already excellent yeah so yeah this

00:45:03,180 --> 00:45:06,690
for solar that's the module but of

00:45:05,069 --> 00:45:08,880
course we should all support it in the

00:45:06,690 --> 00:45:11,700
storage processor if you're using the

00:45:08,880 --> 00:45:14,009
database back and so still wear it but

00:45:11,700 --> 00:45:15,000
of course very good that this already

00:45:14,009 --> 00:45:17,150
exists

00:45:15,000 --> 00:45:17,150
yes

00:45:37,300 --> 00:45:44,230
so the question is about which process

00:45:41,890 --> 00:45:46,720
is basically solar can replace and the

00:45:44,230 --> 00:45:49,500
answer is almost all of them so if

00:45:46,720 --> 00:45:52,780
you're using solar you should definitely

00:45:49,500 --> 00:45:55,360
disable ignore case stop vert and

00:45:52,780 --> 00:45:57,880
tokenizer because they will just muck

00:45:55,360 --> 00:46:00,970
things up and keep solar from doing what

00:45:57,880 --> 00:46:02,020
it does and that's of course much better

00:46:00,970 --> 00:46:06,790
than we can do it

00:46:02,020 --> 00:46:10,390
so especially tokenizer can lead to

00:46:06,790 --> 00:46:14,080
really really bad results HTML filter on

00:46:10,390 --> 00:46:17,110
the other hand is useful because solar

00:46:14,080 --> 00:46:19,090
at the moment cannot know if a field

00:46:17,110 --> 00:46:21,250
contains HTML or not I'm actually

00:46:19,090 --> 00:46:24,220
thinking about maybe having a different

00:46:21,250 --> 00:46:28,240
type for that so full text and full text

00:46:24,220 --> 00:46:30,190
HTML so that the server is aware of that

00:46:28,240 --> 00:46:32,950
and can think of that care of that as

00:46:30,190 --> 00:46:36,010
well but otherwise just have to HTML

00:46:32,950 --> 00:46:38,970
filter enabled and of course things like

00:46:36,010 --> 00:46:41,800
aggregated fields and content access and

00:46:38,970 --> 00:46:44,020
but if you enable the HTML field you

00:46:41,800 --> 00:46:46,480
should also remove all the tech posts

00:46:44,020 --> 00:46:51,550
because this also something won't work

00:46:46,480 --> 00:46:53,140
with solar but other than that yeah most

00:46:51,550 --> 00:46:56,710
of the most of the processes really

00:46:53,140 --> 00:47:00,130
won't work well with what's also really

00:46:56,710 --> 00:47:02,440
all of the toes that that change what is

00:47:00,130 --> 00:47:04,390
being indexed not adds something new

00:47:02,440 --> 00:47:09,520
like rendered item or aggregated fields

00:47:04,390 --> 00:47:14,170
but all of these that yeah changed

00:47:09,520 --> 00:47:19,920
changed content on the way any more

00:47:14,170 --> 00:47:19,920
questions yes

00:47:22,420 --> 00:47:28,490
last question was about elasticsearch

00:47:25,190 --> 00:47:32,240
interpolate as far as I'm aware I'm I

00:47:28,490 --> 00:47:35,180
fear I'm I'm not using the plastic

00:47:32,240 --> 00:47:37,790
search so I'm not very familiar with how

00:47:35,180 --> 00:47:40,100
well all the models are working but one

00:47:37,790 --> 00:47:42,740
of the modules has already been ported

00:47:40,100 --> 00:47:45,440
to Drupal 8 last year in the google

00:47:42,740 --> 00:47:47,270
Summer of Code but I don't know what

00:47:45,440 --> 00:47:50,810
what happened further there if it's

00:47:47,270 --> 00:47:53,410
currently working or to what parties

00:47:50,810 --> 00:47:57,590
it's working but I'm pretty sure that

00:47:53,410 --> 00:48:00,020
that it's at least let's search clients

00:47:57,590 --> 00:48:02,510
module will be ported I think that's the

00:48:00,020 --> 00:48:04,550
most active at the moment but I said I

00:48:02,510 --> 00:48:08,000
I'm really not an expert I'm not working

00:48:04,550 --> 00:48:11,630
with people country maintaining these

00:48:08,000 --> 00:48:17,740
modules so I'm the wrong person person

00:48:11,630 --> 00:48:17,740
who asked really other questions

00:48:25,590 --> 00:48:29,090

YouTube URL: https://www.youtube.com/watch?v=aUrdJLPq1FQ


