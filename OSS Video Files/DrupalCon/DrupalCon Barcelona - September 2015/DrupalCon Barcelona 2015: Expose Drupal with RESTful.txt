Title: DrupalCon Barcelona 2015: Expose Drupal with RESTful
Publication date: 2015-09-22
Playlist: DrupalCon Barcelona - September 2015
Description: 
	The RESTful module aims to interact with your Drupal content in a comprehensive and practical way, respecting the RESTful principles and built with the real world use cases in mind. This session will cover the essentials on how to build a resource, but also some additional topics that are usually not covered by other API generation tools:

Using view modes to set up your resource.
Controlling access to your API via configurable rate limits. Origin based access control.
Comprehensive render cache for your outputs.
Standard error handling.
API discovery and pre-flight requests.
In this session I will also explain the importance of an API design that is completely technology agnostic, and how that will help your team to be more efficient and able to cope with changes better. In this section I will place the focus on the content model and not the app.
Links:

This is a link to the Drupalize.Me podcast with some more details on the RESTful module: https://www.lullabot.com/blog/podcasts/drupalizeme-podcast/55-restful-module
Captions: 
	00:00:00,000 --> 00:00:05,759
so this is exposed drupal with restful

00:00:03,110 --> 00:00:07,290
this is the session do you walked in if

00:00:05,759 --> 00:00:08,880
you were not looking for this session

00:00:07,290 --> 00:00:12,389
please stay because this is going to be

00:00:08,880 --> 00:00:15,650
cool I'm I get over excited about these

00:00:12,389 --> 00:00:20,699
things I have to warn you about that now

00:00:15,650 --> 00:00:23,550
and yeah all this is about Drupal 7 as

00:00:20,699 --> 00:00:26,849
you've been hearing about Drupal 8 all

00:00:23,550 --> 00:00:30,019
day this is about to go seven but it's

00:00:26,849 --> 00:00:34,110
going to be available on the bullet so

00:00:30,019 --> 00:00:35,809
this is not the title that I wanted for

00:00:34,110 --> 00:00:39,600
this session but apparently the

00:00:35,809 --> 00:00:42,300
drupal.org session creation node has

00:00:39,600 --> 00:00:46,350
some validation and it doesn't allow you

00:00:42,300 --> 00:00:47,820
for titles this long this is what I want

00:00:46,350 --> 00:00:50,760
to present a comprehensive guide to

00:00:47,820 --> 00:00:53,730
build an HTTP API without hating

00:00:50,760 --> 00:00:57,719
yourself six months after release and

00:00:53,730 --> 00:01:00,840
this is because I've been building and

00:00:57,719 --> 00:01:06,689
designing api's for quite some time now

00:01:00,840 --> 00:01:10,490
in the last two years and I've been

00:01:06,689 --> 00:01:14,369
having some hate issues with myself

00:01:10,490 --> 00:01:16,619
especially when you design an API for

00:01:14,369 --> 00:01:18,360
the second time and you say ok I'm going

00:01:16,619 --> 00:01:20,490
to be smart and I'm not going to be

00:01:18,360 --> 00:01:23,159
heating the same problems that i had the

00:01:20,490 --> 00:01:24,900
first time but then you hit some other

00:01:23,159 --> 00:01:27,119
problems and you don't solve them

00:01:24,900 --> 00:01:30,350
perfectly so i decided to start

00:01:27,119 --> 00:01:34,140
gathering all these experiences and

00:01:30,350 --> 00:01:38,460
putting them inside of the under Redfoo

00:01:34,140 --> 00:01:45,530
module and yeah that's what I've been

00:01:38,460 --> 00:01:48,390
doing so this session aims for two

00:01:45,530 --> 00:01:51,270
simple goals right if you walk out of

00:01:48,390 --> 00:01:54,869
here I would like you to have these two

00:01:51,270 --> 00:01:59,659
concepts in mind if anything so first

00:01:54,869 --> 00:02:03,140
one is that rest is is not just

00:01:59,659 --> 00:02:07,170
exporting an entity so it's not just

00:02:03,140 --> 00:02:10,530
taking an old twink JSON encode and

00:02:07,170 --> 00:02:13,380
putting it out there that's fine that

00:02:10,530 --> 00:02:16,260
covers lots of use cases

00:02:13,380 --> 00:02:18,030
but rest is not only that I mean if you

00:02:16,260 --> 00:02:21,000
want to create a simple widget for your

00:02:18,030 --> 00:02:24,510
side maybe that's enough but that's not

00:02:21,000 --> 00:02:27,230
rest rest is full crowd create read

00:02:24,510 --> 00:02:29,340
update and delete it's also

00:02:27,230 --> 00:02:32,070
authentication you wouldn't want to

00:02:29,340 --> 00:02:33,810
serve to your anonymous users the

00:02:32,070 --> 00:02:37,230
content the same way that you serve them

00:02:33,810 --> 00:02:39,510
to authenticated users right so you have

00:02:37,230 --> 00:02:44,600
to deal with authentication with access

00:02:39,510 --> 00:02:47,910
who can view that who can create what so

00:02:44,600 --> 00:02:50,430
this authentication and how how do you

00:02:47,910 --> 00:02:54,060
Authenticator an HTTP request we're

00:02:50,430 --> 00:02:57,180
passing a cookie feels very awkward so

00:02:54,060 --> 00:02:59,760
yeah this a lot of other stuff that I'm

00:02:57,180 --> 00:03:03,320
going to be talking about which relates

00:02:59,760 --> 00:03:05,670
to rest which is filtering listings

00:03:03,320 --> 00:03:10,170
sometimes you don't want everything or

00:03:05,670 --> 00:03:14,040
the imagination ranges etc and the other

00:03:10,170 --> 00:03:18,810
concept is that restful can do a lot of

00:03:14,040 --> 00:03:22,170
that for you for free and by free i mean

00:03:18,810 --> 00:03:24,450
free in all of the sentence and some of

00:03:22,170 --> 00:03:26,730
the some of the cool things of the

00:03:24,450 --> 00:03:29,280
wrathful model our data providers so

00:03:26,730 --> 00:03:31,680
when you're exposing stuff with a

00:03:29,280 --> 00:03:34,530
restful module you are not limited to

00:03:31,680 --> 00:03:36,060
entities which is mostly what you're

00:03:34,530 --> 00:03:39,180
going to be doing the ninety percent of

00:03:36,060 --> 00:03:42,620
time but you are not limited to that you

00:03:39,180 --> 00:03:45,030
can expose maybe a database table

00:03:42,620 --> 00:03:47,700
something customs yet you had to do

00:03:45,030 --> 00:03:49,620
because you know you know how projects

00:03:47,700 --> 00:03:53,490
work I know what you have to pose a

00:03:49,620 --> 00:03:57,540
table but you can do it a use case for

00:03:53,490 --> 00:03:59,220
that could be menus and also another

00:03:57,540 --> 00:04:03,450
thing that you could be exposing and we

00:03:59,220 --> 00:04:07,020
are doing that is exposing the plugins

00:04:03,450 --> 00:04:08,970
the plug-in system either if it's see

00:04:07,020 --> 00:04:11,010
tools or another system so your not

00:04:08,970 --> 00:04:12,930
exposing anything that's it's actually

00:04:11,010 --> 00:04:15,030
in the database but something that our

00:04:12,930 --> 00:04:18,510
files and it's there so you can

00:04:15,030 --> 00:04:20,940
basically expose whatever you want and

00:04:18,510 --> 00:04:24,020
all of the principles that I'm going to

00:04:20,940 --> 00:04:27,270
be talking about apply to those another

00:04:24,020 --> 00:04:30,389
benefit of the restful module is the

00:04:27,270 --> 00:04:35,610
research composition and what I call the

00:04:30,389 --> 00:04:38,970
URL query language these two things I

00:04:35,610 --> 00:04:41,729
was actually very happy to see how grasp

00:04:38,970 --> 00:04:43,979
graph ql this morning in to use these

00:04:41,729 --> 00:04:46,500
these topics a research composition is

00:04:43,979 --> 00:04:48,720
basically when you have an entity that

00:04:46,500 --> 00:04:50,639
relates another entity it's super

00:04:48,720 --> 00:04:53,460
annoying that you have to let's say an

00:04:50,639 --> 00:04:56,729
article that has three tags and then

00:04:53,460 --> 00:04:59,819
when you get the response for that

00:04:56,729 --> 00:05:01,979
article you get three tag IDs and then

00:04:59,819 --> 00:05:05,009
you have to do three more requests for

00:05:01,979 --> 00:05:06,780
every tag and if you stop there that's

00:05:05,009 --> 00:05:10,319
cool but maybe you have to dig further

00:05:06,780 --> 00:05:13,860
and keep making requests so making an

00:05:10,319 --> 00:05:16,770
HTTP request is often expensive in terms

00:05:13,860 --> 00:05:19,349
of performance so research nesting or

00:05:16,770 --> 00:05:23,099
research composition what it does is it

00:05:19,349 --> 00:05:25,710
takes the resource and embed it into the

00:05:23,099 --> 00:05:28,379
original response so you would get a

00:05:25,710 --> 00:05:31,680
JSON output with the article and the

00:05:28,379 --> 00:05:36,599
JSON for the tax in there and that's

00:05:31,680 --> 00:05:38,819
pretty cool so imagine this clone of

00:05:36,599 --> 00:05:40,469
tripadvisor you had this idea i'm going

00:05:38,819 --> 00:05:43,469
to clone supervisor and i'm going to

00:05:40,469 --> 00:05:45,569
become rich and you call it voyage

00:05:43,469 --> 00:05:47,969
conciliar so i built this light or

00:05:45,569 --> 00:05:51,810
montpelier and it was cool that it was

00:05:47,969 --> 00:05:55,860
in French so in Catalan it's constantly

00:05:51,810 --> 00:05:58,020
idea so the side is to find restaurants

00:05:55,860 --> 00:06:01,020
and restaurant have deals applied that

00:05:58,020 --> 00:06:03,509
applied to them and all this stuff so

00:06:01,020 --> 00:06:05,940
you decide that you're going to be all

00:06:03,509 --> 00:06:09,779
this with dupo because Drupal it's an

00:06:05,940 --> 00:06:12,690
awesome content management system and it

00:06:09,779 --> 00:06:16,340
allows you to build your content model

00:06:12,690 --> 00:06:20,279
to do to do it in a structured way and

00:06:16,340 --> 00:06:22,560
it's it's also might be are dealing with

00:06:20,279 --> 00:06:24,960
that so another thing that you decided

00:06:22,560 --> 00:06:27,659
is that you are going to go decoupled

00:06:24,960 --> 00:06:30,000
for there are several reasons to do it

00:06:27,659 --> 00:06:32,099
so you know I you analyze your regent

00:06:30,000 --> 00:06:35,089
and you say okay I'm going to have to

00:06:32,099 --> 00:06:39,070
build not only a side but also on

00:06:35,089 --> 00:06:41,920
Android app and and I always up so

00:06:39,070 --> 00:06:44,230
I'm going to Billy decoupled and the

00:06:41,920 --> 00:06:50,320
first thing that you realize that you

00:06:44,230 --> 00:06:52,870
need is an HTTP API so when you're

00:06:50,320 --> 00:06:55,960
designing an HTTP API what you're

00:06:52,870 --> 00:06:58,420
basically writing it's a contract

00:06:55,960 --> 00:07:02,470
between your buck and Tim and your

00:06:58,420 --> 00:07:06,700
friend Tim so you as a drupal developer

00:07:02,470 --> 00:07:08,740
or a back-end developer you sit at your

00:07:06,700 --> 00:07:10,960
desk and you think about the data model

00:07:08,740 --> 00:07:13,150
in this case you think about how a

00:07:10,960 --> 00:07:16,530
restaurant needs to have a title and the

00:07:13,150 --> 00:07:19,650
description and also needs to have

00:07:16,530 --> 00:07:22,300
relationship to the deals content type

00:07:19,650 --> 00:07:24,940
only that you don't think in content

00:07:22,300 --> 00:07:30,100
type ways because this is the couple

00:07:24,940 --> 00:07:32,880
right you could take out dupa and with

00:07:30,100 --> 00:07:38,380
that API designed put something else in

00:07:32,880 --> 00:07:41,680
its place so you write the API design as

00:07:38,380 --> 00:07:43,930
a contract it's basically the promise of

00:07:41,680 --> 00:07:47,500
the bakken team that you're going to

00:07:43,930 --> 00:07:51,760
deliver that set of URLs in this case

00:07:47,500 --> 00:07:54,190
could be / restaurants / ID and that

00:07:51,760 --> 00:07:57,220
hitting that URL is going to return with

00:07:54,190 --> 00:08:01,300
a JSON payload in this case it could be

00:07:57,220 --> 00:08:04,120
ID equals a number and then label equals

00:08:01,300 --> 00:08:07,000
this is the best restaurant in Barcelona

00:08:04,120 --> 00:08:10,150
and the description could be a no

00:08:07,000 --> 00:08:12,520
description of the restaurant so um do

00:08:10,150 --> 00:08:15,250
you document that you deliver this to

00:08:12,520 --> 00:08:18,340
the running team and then you start

00:08:15,250 --> 00:08:20,440
working but the cool part is the is that

00:08:18,340 --> 00:08:23,680
the front-end team can start working at

00:08:20,440 --> 00:08:24,850
the same time in parallel building on

00:08:23,680 --> 00:08:29,950
the assumption that you're gonna

00:08:24,850 --> 00:08:33,729
fulfilled your promise so when you're

00:08:29,950 --> 00:08:38,410
building this HTTP API or you're

00:08:33,729 --> 00:08:41,940
designing it rather you should be

00:08:38,410 --> 00:08:45,130
avoiding all of the Drupal isms that

00:08:41,940 --> 00:08:47,440
typically get in your way and that is

00:08:45,130 --> 00:08:49,600
because as I said before when you're

00:08:47,440 --> 00:08:52,950
building the couple sides or decouple

00:08:49,600 --> 00:08:55,560
apps you are able to

00:08:52,950 --> 00:08:57,560
swap out any of the parts even if it's

00:08:55,560 --> 00:08:59,970
the back end or the front end and

00:08:57,560 --> 00:09:03,860
replace it with another thing or maybe

00:08:59,970 --> 00:09:06,840
introduce some duplication for you know

00:09:03,860 --> 00:09:10,230
when one is down you have the other one

00:09:06,840 --> 00:09:14,840
so imagine the situation where you don't

00:09:10,230 --> 00:09:18,510
think that duple is cool anymore and

00:09:14,840 --> 00:09:21,540
then you implement that with I kno I kno

00:09:18,510 --> 00:09:25,440
jes up using express it would be very

00:09:21,540 --> 00:09:29,340
lame to have to implement in ojs an API

00:09:25,440 --> 00:09:31,650
that fakes that it's a Drupal

00:09:29,340 --> 00:09:36,510
installation because in your API design

00:09:31,650 --> 00:09:39,330
you have things like use a slash node /

00:09:36,510 --> 00:09:42,240
node ID because / note doesn't make

00:09:39,330 --> 00:09:44,910
sense outside of Drupal right what do

00:09:42,240 --> 00:09:48,330
you really want is / restaurants and

00:09:44,910 --> 00:09:51,330
then probably a uuid instead of an ID

00:09:48,330 --> 00:09:53,460
because if you use auto incremental IDs

00:09:51,330 --> 00:09:57,390
then people can start guessing but

00:09:53,460 --> 00:10:00,420
that's not stuff so that's one of them

00:09:57,390 --> 00:10:03,510
there Darabont but the most important

00:10:00,420 --> 00:10:06,510
ones is or I get annoyed by the fact

00:10:03,510 --> 00:10:08,640
that I don't want to have filled and the

00:10:06,510 --> 00:10:11,910
score and then the name of the field

00:10:08,640 --> 00:10:14,570
this morning I was trying to understand

00:10:11,910 --> 00:10:17,370
why this was happening in field you I

00:10:14,570 --> 00:10:22,440
but you really want to have the control

00:10:17,370 --> 00:10:27,900
to say the output of my restaurant JSON

00:10:22,440 --> 00:10:29,970
document is taxed or city or label

00:10:27,900 --> 00:10:35,150
description something clean something

00:10:29,970 --> 00:10:37,770
that doesn't leak drupal all over it so

00:10:35,150 --> 00:10:40,140
the last one and this is my this is my

00:10:37,770 --> 00:10:42,780
favorite do you really want to have your

00:10:40,140 --> 00:10:45,150
description and then have your

00:10:42,780 --> 00:10:48,480
description like description equals blah

00:10:45,150 --> 00:10:50,970
and not and I have to look at this half

00:10:48,480 --> 00:10:55,080
description be an object with a key of

00:10:50,970 --> 00:10:57,930
and and that be an array of one value

00:10:55,080 --> 00:11:03,270
that contains an object that has a key

00:10:57,930 --> 00:11:05,340
of value that contains blah so these are

00:11:03,270 --> 00:11:06,660
some of the goals that you need to

00:11:05,340 --> 00:11:11,160
achieve by

00:11:06,660 --> 00:11:16,769
are doing a good api I would API design

00:11:11,160 --> 00:11:20,160
so another another thing that I learned

00:11:16,769 --> 00:11:25,680
through sweat and blood is that you

00:11:20,160 --> 00:11:28,019
really want to version your API so if

00:11:25,680 --> 00:11:31,649
you don't version to your API it means

00:11:28,019 --> 00:11:35,670
two things it means that you assume that

00:11:31,649 --> 00:11:39,839
there will only be a single client ever

00:11:35,670 --> 00:11:43,529
for your API and I guess it you cannot

00:11:39,839 --> 00:11:46,920
really know that for sure and it also

00:11:43,529 --> 00:11:50,160
means that you're a bit masochist and

00:11:46,920 --> 00:11:53,430
you like very painful deploys so let me

00:11:50,160 --> 00:11:55,769
explain let me splain that so imagine

00:11:53,430 --> 00:11:59,850
this situation where you're building

00:11:55,769 --> 00:12:03,360
wash conciliar and you have your API and

00:11:59,850 --> 00:12:07,589
you release it to your release it to the

00:12:03,360 --> 00:12:10,829
world and create your up let's say that

00:12:07,589 --> 00:12:13,199
you're building an Android app and it's

00:12:10,829 --> 00:12:17,310
working but then you get a new feature

00:12:13,199 --> 00:12:21,000
and you get to above the API and you

00:12:17,310 --> 00:12:23,850
know that evolving the API means that

00:12:21,000 --> 00:12:25,259
you're breaking the existing code but

00:12:23,850 --> 00:12:29,130
it's okay you haven't deployed to that

00:12:25,259 --> 00:12:31,769
it's breaking the distinct app but since

00:12:29,130 --> 00:12:34,920
you haven't deployed that nothing

00:12:31,769 --> 00:12:37,649
happens yet so you work in your def

00:12:34,920 --> 00:12:40,079
servers and you work on the android

00:12:37,649 --> 00:12:42,660
android app code that uses the new

00:12:40,079 --> 00:12:46,199
features and everything works right so

00:12:42,660 --> 00:12:50,250
it's time for deploy you need to deploy

00:12:46,199 --> 00:12:54,000
both the API and the Android app so do

00:12:50,250 --> 00:12:58,230
deploy the API first at that point when

00:12:54,000 --> 00:13:00,720
you have deployed the API your apps your

00:12:58,230 --> 00:13:03,360
existing Android app let's call it the

00:13:00,720 --> 00:13:05,790
old Android app is not working because

00:13:03,360 --> 00:13:09,990
it's not a hundred percent compatible

00:13:05,790 --> 00:13:12,990
with with the new API right but it's

00:13:09,990 --> 00:13:17,279
okay you can you can assume some some

00:13:12,990 --> 00:13:19,329
downtime so right after that you go and

00:13:17,279 --> 00:13:22,089
deploy your

00:13:19,329 --> 00:13:25,149
your android app your new one that's

00:13:22,089 --> 00:13:27,839
going to click together with the new API

00:13:25,149 --> 00:13:30,730
and it's going to be awesome but

00:13:27,839 --> 00:13:35,470
something happens the deploy doesn't

00:13:30,730 --> 00:13:39,009
work as expected so you don't panic you

00:13:35,470 --> 00:13:43,209
roll back ah to an Android app that

00:13:39,009 --> 00:13:46,119
doesn't work with the new API you don't

00:13:43,209 --> 00:13:49,139
panic you roll back to the old API and

00:13:46,119 --> 00:13:52,540
then try to figure out how you have to

00:13:49,139 --> 00:13:55,600
to manage all these the new the new

00:13:52,540 --> 00:13:59,199
debugging with the new API and the old

00:13:55,600 --> 00:14:02,799
API so that's a big mess so the simple

00:13:59,199 --> 00:14:06,220
thing to do is that you create the new

00:14:02,799 --> 00:14:08,829
version of the API while the old one is

00:14:06,220 --> 00:14:14,230
still being served and it's this thing

00:14:08,829 --> 00:14:18,459
you deploy the code but your old android

00:14:14,230 --> 00:14:21,519
app is locked to version 1.3 of the API

00:14:18,459 --> 00:14:25,839
so it keeps working you don't have even

00:14:21,519 --> 00:14:28,839
downtime when you do the deploy and then

00:14:25,839 --> 00:14:32,589
you do to the release for the new

00:14:28,839 --> 00:14:37,059
android app and it's breaking but it's

00:14:32,589 --> 00:14:40,600
ok you revert and when and the old

00:14:37,059 --> 00:14:42,999
Android app is using version 1.3 even if

00:14:40,600 --> 00:14:46,679
you have deployed version 1.7 or

00:14:42,999 --> 00:14:50,470
whatever so that gives you that

00:14:46,679 --> 00:14:53,110
flexibility and also having versions

00:14:50,470 --> 00:14:57,009
allows you to release the API to the

00:14:53,110 --> 00:14:59,949
world and have people build clients for

00:14:57,009 --> 00:15:04,329
it and you are happy because they are

00:14:59,949 --> 00:15:05,889
doing your job for free and then they

00:15:04,329 --> 00:15:07,629
can lock two different versions

00:15:05,889 --> 00:15:09,239
depending on the time where they built

00:15:07,629 --> 00:15:14,049
it and the features that were available

00:15:09,239 --> 00:15:16,779
so having your API version is it's like

00:15:14,049 --> 00:15:25,119
the basics you cannot get away without

00:15:16,779 --> 00:15:29,499
it and of course all of these thoughts

00:15:25,119 --> 00:15:30,320
are are introduced in the in the restful

00:15:29,499 --> 00:15:35,520
Mario

00:15:30,320 --> 00:15:39,750
so we have been working on the restful

00:15:35,520 --> 00:15:42,960
module for quite some time yet but the

00:15:39,750 --> 00:15:45,540
the moto of the module is that we are

00:15:42,960 --> 00:15:51,000
always looking for the practical use

00:15:45,540 --> 00:15:55,550
case so if I were to propose a feature a

00:15:51,000 --> 00:16:00,060
crazy feature I do that sometimes and I

00:15:55,550 --> 00:16:02,010
put it in a pull request I meet I would

00:16:00,060 --> 00:16:05,310
ask me do you have a real use case for

00:16:02,010 --> 00:16:07,310
this so we we try to keep that in that

00:16:05,310 --> 00:16:10,950
in mind but at the same time we try to

00:16:07,310 --> 00:16:14,100
stick to the best practices we research

00:16:10,950 --> 00:16:16,830
what other people are doing we research

00:16:14,100 --> 00:16:19,440
what the academic way of implementing

00:16:16,830 --> 00:16:22,500
this is but without obsessing about

00:16:19,440 --> 00:16:27,330
getting a medal for it because nobody

00:16:22,500 --> 00:16:31,290
gives medal to developers anymore so one

00:16:27,330 --> 00:16:33,180
of the first things that you that you

00:16:31,290 --> 00:16:36,320
will notice if you use the restful

00:16:33,180 --> 00:16:39,930
module is that it's developer oriented

00:16:36,320 --> 00:16:42,180
so when when I was writing this slide it

00:16:39,930 --> 00:16:46,350
came to my mind conversation that I had

00:16:42,180 --> 00:16:49,830
some time ago about how great is Drupal

00:16:46,350 --> 00:16:52,680
that allows non-technical users create

00:16:49,830 --> 00:16:55,620
awesome digital experiences and websites

00:16:52,680 --> 00:16:57,990
without having to code anything with

00:16:55,620 --> 00:17:00,360
their basically programming with the

00:16:57,990 --> 00:17:02,790
mouse and that's that's really

00:17:00,360 --> 00:17:05,490
impressive and I love the fact that you

00:17:02,790 --> 00:17:08,490
can download the meta tags module Mabel

00:17:05,490 --> 00:17:11,880
it and go to the note and just type the

00:17:08,490 --> 00:17:15,449
meta tags and you forget that those did

00:17:11,880 --> 00:17:18,059
those go inside of the body HTML tag or

00:17:15,449 --> 00:17:21,510
was it in the head and do I have to put

00:17:18,059 --> 00:17:23,280
the volumes item value equals I don't

00:17:21,510 --> 00:17:26,270
care i have the meta tags module and i

00:17:23,280 --> 00:17:30,660
just to use the UI so that is awesome

00:17:26,270 --> 00:17:34,160
but then there is also the example of

00:17:30,660 --> 00:17:38,550
the migrate to module which shipped

00:17:34,160 --> 00:17:42,870
shifted from having you know to maintain

00:17:38,550 --> 00:17:45,970
a very big UI for creating

00:17:42,870 --> 00:17:48,429
migrations with table wizard and and all

00:17:45,970 --> 00:17:51,370
that because all of the complexity in

00:17:48,429 --> 00:17:54,309
those cases lives in the in the UI so

00:17:51,370 --> 00:17:57,040
they shifted to a to a way of doing

00:17:54,309 --> 00:17:59,620
things where they just wanted my

00:17:57,040 --> 00:18:02,140
gracious to be classes and they those

00:17:59,620 --> 00:18:05,590
got run because you know a migration is

00:18:02,140 --> 00:18:08,070
a complex thing and you don't want non

00:18:05,590 --> 00:18:12,850
technical user or non technical person

00:18:08,070 --> 00:18:19,780
doing your migrations right so we think

00:18:12,850 --> 00:18:22,960
that doing a REST API requires this kind

00:18:19,780 --> 00:18:26,320
of technical knowledge there are other

00:18:22,960 --> 00:18:30,130
solutions in the Drupal world that don't

00:18:26,320 --> 00:18:32,980
and allow you to create to expose some

00:18:30,130 --> 00:18:35,799
fields and some stuff using a mouse if

00:18:32,980 --> 00:18:38,260
you can get away with those just just do

00:18:35,799 --> 00:18:39,970
it if you don't need any of this you

00:18:38,260 --> 00:18:42,970
don't have to you don't have to worry

00:18:39,970 --> 00:18:45,400
about this but if you want to have

00:18:42,970 --> 00:18:47,679
control and you have to do you want to

00:18:45,400 --> 00:18:50,230
use the cool features that are

00:18:47,679 --> 00:18:54,250
implemented in in here now that this is

00:18:50,230 --> 00:19:01,660
oriented to developers and this slide is

00:18:54,250 --> 00:19:06,160
very red so in in the restful module we

00:19:01,660 --> 00:19:09,429
do everything in plugins in the version

00:19:06,160 --> 00:19:11,260
one point X and the two point X we use

00:19:09,429 --> 00:19:13,630
different plugin systems in one point X

00:19:11,260 --> 00:19:17,110
we use the city of plugins and into

00:19:13,630 --> 00:19:19,990
point X we use to a backboard to Drupal

00:19:17,110 --> 00:19:25,140
7 of the Drupal 8 plugins which is

00:19:19,990 --> 00:19:27,760
pretty nice and it's it's very easy bye

00:19:25,140 --> 00:19:30,190
everything is applying I mean that

00:19:27,760 --> 00:19:33,669
resource is a plug-in and authentication

00:19:30,190 --> 00:19:37,540
provider is blogging and everything is

00:19:33,669 --> 00:19:41,260
plugging so if you have to if you are

00:19:37,540 --> 00:19:44,770
not satisfied with what it comes out of

00:19:41,260 --> 00:19:47,980
the box assume that you can write a

00:19:44,770 --> 00:19:51,429
plug-in that has most of the work done

00:19:47,980 --> 00:19:53,679
for you that you can implement the only

00:19:51,429 --> 00:19:55,810
the things that you want to do

00:19:53,679 --> 00:19:58,840
differently and

00:19:55,810 --> 00:20:04,800
then you can use it so creating a

00:19:58,840 --> 00:20:10,000
plug-in is not that complicated and oh

00:20:04,800 --> 00:20:12,430
let me go back so I added one point x +

00:20:10,000 --> 00:20:15,400
2 point X like this small batches at the

00:20:12,430 --> 00:20:17,800
at the bottom of the slides so you can

00:20:15,400 --> 00:20:19,960
know that i'm talking about one version

00:20:17,800 --> 00:20:21,910
or the other when I'm when I'm

00:20:19,960 --> 00:20:23,470
presenting a slide basically I'm going

00:20:21,910 --> 00:20:26,800
to be talking about both at the same

00:20:23,470 --> 00:20:31,060
time most of the time so how do i create

00:20:26,800 --> 00:20:34,180
a plug-in so the version 2 uses the

00:20:31,060 --> 00:20:36,640
Drupal 8 style plugins and this is

00:20:34,180 --> 00:20:40,740
called an annotation so to create this

00:20:36,640 --> 00:20:45,090
you just have to create a class file it

00:20:40,740 --> 00:20:48,490
it's just a regular class inside of a

00:20:45,090 --> 00:20:50,830
directory you will learn how to how to

00:20:48,490 --> 00:20:54,700
create that and you will use it for the

00:20:50,830 --> 00:20:57,640
eight plugins but the key is that you

00:20:54,700 --> 00:20:59,890
have to add an annotation which is a

00:20:57,640 --> 00:21:02,530
special comment do you see this art

00:20:59,890 --> 00:21:06,130
resource in there that means that it's

00:21:02,530 --> 00:21:08,560
an annotation in there do you provide

00:21:06,130 --> 00:21:13,360
some metadata so the important parts

00:21:08,560 --> 00:21:17,620
here are marked in in green orange and

00:21:13,360 --> 00:21:20,230
blue so you can see that the name

00:21:17,620 --> 00:21:23,260
contains the word articles that is the

00:21:20,230 --> 00:21:27,160
resource identifier and that's what

00:21:23,260 --> 00:21:29,200
gonna be used by when when you are

00:21:27,160 --> 00:21:33,820
hitting a URL is going to be a slash

00:21:29,200 --> 00:21:36,430
articles so 1.5 it's the version so

00:21:33,820 --> 00:21:39,610
realize how hard it is to create a new

00:21:36,430 --> 00:21:42,370
version you just create this and instead

00:21:39,610 --> 00:21:45,040
of 1.5 use one point X and there you go

00:21:42,370 --> 00:21:49,000
you have your new virgin and you you can

00:21:45,040 --> 00:21:51,550
still heat the old versions so apart

00:21:49,000 --> 00:21:54,280
from that we said that we had what is

00:21:51,550 --> 00:21:57,120
called data providers the that we would

00:21:54,280 --> 00:22:00,580
be using the entities most of the time

00:21:57,120 --> 00:22:04,570
so in here we are using the node entity

00:22:00,580 --> 00:22:06,610
type with the articles bundle so that's

00:22:04,570 --> 00:22:08,809
fifty percent of the work that you have

00:22:06,610 --> 00:22:14,480
to do to expose

00:22:08,809 --> 00:22:17,240
a resource so it's not that hard the

00:22:14,480 --> 00:22:19,580
other fifty percent is this basically I

00:22:17,240 --> 00:22:23,659
said that you should be able to have

00:22:19,580 --> 00:22:26,809
control and how you expose things it's

00:22:23,659 --> 00:22:30,110
not just a straight serialization of the

00:22:26,809 --> 00:22:34,429
of the entity right so you require some

00:22:30,110 --> 00:22:36,350
mapping and mapping a field it's as

00:22:34,429 --> 00:22:38,720
simple as creating an array and

00:22:36,350 --> 00:22:41,450
returning it in this case what we are

00:22:38,720 --> 00:22:44,240
doing is we want to have a public

00:22:41,450 --> 00:22:47,779
property called cool text when you're

00:22:44,240 --> 00:22:50,269
exporting a an article and you want the

00:22:47,779 --> 00:22:53,059
content that property called cool text

00:22:50,269 --> 00:22:58,190
to be extracted from field and the score

00:22:53,059 --> 00:23:01,369
cool underscore text so that it that's

00:22:58,190 --> 00:23:04,399
how you define a research and when

00:23:01,369 --> 00:23:09,590
you're done you get a lot of stuff for

00:23:04,399 --> 00:23:13,869
free so when you're using an HTTP API in

00:23:09,590 --> 00:23:19,970
the real world you don't only get to

00:23:13,869 --> 00:23:23,779
heat the resource / ID right you need to

00:23:19,970 --> 00:23:26,149
do listings so give me a list of all of

00:23:23,779 --> 00:23:30,139
the articles that that I have but give

00:23:26,149 --> 00:23:34,009
the list sorted by a particular property

00:23:30,139 --> 00:23:36,889
so if you exposed property called cool

00:23:34,009 --> 00:23:39,860
text you could sort a list by cool text

00:23:36,889 --> 00:23:42,049
if you expose the creation date you can

00:23:39,860 --> 00:23:44,450
sort by the creation date so basically

00:23:42,049 --> 00:23:47,649
when you expose that array you're not

00:23:44,450 --> 00:23:51,590
only providing an output but you're also

00:23:47,649 --> 00:23:54,879
providing ways to sort filter and range

00:23:51,590 --> 00:23:59,059
and do a lot of stuff so start is pretty

00:23:54,879 --> 00:24:02,509
straighforward filter you can filter by

00:23:59,059 --> 00:24:05,960
any property so if you want to get all

00:24:02,509 --> 00:24:09,200
of the articles that have a title of

00:24:05,960 --> 00:24:13,399
this is a cool article you can do that

00:24:09,200 --> 00:24:17,600
you just use in the URL filter equals

00:24:13,399 --> 00:24:20,679
filter title equals cool article and and

00:24:17,600 --> 00:24:22,759
that's it we'll see in sample later so

00:24:20,679 --> 00:24:25,839
after that

00:24:22,759 --> 00:24:29,929
there is under range which is basically

00:24:25,839 --> 00:24:31,849
the front end team they don't want like

00:24:29,929 --> 00:24:35,539
a gazillion articles when they are

00:24:31,849 --> 00:24:38,269
building just this slider or cutter cell

00:24:35,539 --> 00:24:40,459
I don't know the front-end lingo so this

00:24:38,269 --> 00:24:43,419
thingy where they have thumbnail and a

00:24:40,459 --> 00:24:46,909
title but they only have four of them

00:24:43,419 --> 00:24:50,509
they provide a range right or a limit

00:24:46,909 --> 00:24:52,459
max number of items so they say just

00:24:50,509 --> 00:24:56,619
give me four articles don't give me 50

00:24:52,459 --> 00:25:00,619
because I'm only going to use for and

00:24:56,619 --> 00:25:05,059
the cool features are the sparse fill

00:25:00,619 --> 00:25:07,519
sets so when you're getting the output

00:25:05,059 --> 00:25:09,739
of a big content type and who doesn't

00:25:07,519 --> 00:25:14,539
have a big content type with a lot of

00:25:09,739 --> 00:25:19,190
fields right the the front end gets a

00:25:14,539 --> 00:25:22,369
giant payload it's a lot of data with

00:25:19,190 --> 00:25:25,969
all of the fields even if they only need

00:25:22,369 --> 00:25:28,309
the thumbnail and title so with the

00:25:25,969 --> 00:25:31,699
sparse feel sets what you can do is

00:25:28,309 --> 00:25:34,129
specify which fields you want to have in

00:25:31,699 --> 00:25:38,889
the payload that the server is returning

00:25:34,129 --> 00:25:42,049
so you can limit and tailor the response

00:25:38,889 --> 00:25:46,039
based on what your needs are as a front

00:25:42,049 --> 00:25:48,039
end client so that allows you to do a

00:25:46,039 --> 00:25:50,749
lot of performance improvements

00:25:48,039 --> 00:25:53,209
especially when you combine that with

00:25:50,749 --> 00:25:57,229
resource nesting that we talked before

00:25:53,209 --> 00:26:00,649
like getting the related entities inside

00:25:57,229 --> 00:26:03,139
of the original entity so with those

00:26:00,649 --> 00:26:08,329
combined you can pretty much get

00:26:03,139 --> 00:26:13,190
tailored responses with the client needs

00:26:08,329 --> 00:26:16,099
so that gets you to a point where you

00:26:13,190 --> 00:26:18,229
only have to design the API and let the

00:26:16,099 --> 00:26:21,949
front-end design what they want to get

00:26:18,229 --> 00:26:24,489
right and if the design changes the

00:26:21,949 --> 00:26:27,259
design of the Android app you don't care

00:26:24,489 --> 00:26:30,169
they just make the call differently and

00:26:27,259 --> 00:26:34,459
get the data that it's available so that

00:26:30,169 --> 00:26:36,500
watch for reading but for for updating

00:26:34,459 --> 00:26:40,240
and creating and it is the

00:26:36,500 --> 00:26:44,780
is also good stuff that you get for free

00:26:40,240 --> 00:26:47,450
you get entity validation and entity

00:26:44,780 --> 00:26:53,810
validation works with a separate contact

00:26:47,450 --> 00:26:57,410
module but the idea here is that entity

00:26:53,810 --> 00:27:00,380
validation in Drupal only works at the

00:26:57,410 --> 00:27:02,930
forum level so you're validating a forum

00:27:00,380 --> 00:27:06,410
you're not validating an entity so

00:27:02,930 --> 00:27:09,140
that's in Drupal 7 so what you're doing

00:27:06,410 --> 00:27:11,810
with the entity validator module is you

00:27:09,140 --> 00:27:14,780
create some rules saying describing my

00:27:11,810 --> 00:27:18,200
article to be valid has to comply with

00:27:14,780 --> 00:27:21,350
these with these rules that I'm the time

00:27:18,200 --> 00:27:23,300
defining so when you're creating come on

00:27:21,350 --> 00:27:26,000
you're creating an entity with the

00:27:23,300 --> 00:27:28,360
restful module what you do is if you

00:27:26,000 --> 00:27:32,780
have the entity validator module enabled

00:27:28,360 --> 00:27:36,500
it validates your entity for you and you

00:27:32,780 --> 00:27:38,540
get a cool error handling back saying

00:27:36,500 --> 00:27:41,330
that you remember the cool text it

00:27:38,540 --> 00:27:44,710
wasn't cool enough so sorry a try harder

00:27:41,330 --> 00:27:47,300
and improve your your entity right so

00:27:44,710 --> 00:27:49,610
that and research nesting you don't have

00:27:47,300 --> 00:27:52,460
to create the three different tags

00:27:49,610 --> 00:27:55,340
before you can create the article to get

00:27:52,460 --> 00:27:58,970
the ids to put in there you just get the

00:27:55,340 --> 00:28:01,360
JSON object with the article properties

00:27:58,970 --> 00:28:03,850
and the property for the tags and

00:28:01,360 --> 00:28:08,240
everything gets created in one request

00:28:03,850 --> 00:28:10,310
so big improvement so this is just a

00:28:08,240 --> 00:28:13,610
representation of what i mean by

00:28:10,310 --> 00:28:17,360
resource nesting you see that you can

00:28:13,610 --> 00:28:20,450
have a meal and a particular meal can

00:28:17,360 --> 00:28:23,080
have or will have an ice cream and ice

00:28:20,450 --> 00:28:25,640
creams can have different toppings so

00:28:23,080 --> 00:28:28,670
imagine if you have to traverse all that

00:28:25,640 --> 00:28:35,210
making HTTP requests that would be lots

00:28:28,670 --> 00:28:38,930
of them so this is what you get when you

00:28:35,210 --> 00:28:42,890
get a list of articles okay so i'm

00:28:38,930 --> 00:28:44,420
hitting a / AP I / articles so that

00:28:42,890 --> 00:28:46,520
means that I'm requesting all of the

00:28:44,420 --> 00:28:49,520
articles with all of the fields for the

00:28:46,520 --> 00:28:52,490
articles with the default sort

00:28:49,520 --> 00:28:54,670
no filters so I'm seeing there that

00:28:52,490 --> 00:28:58,850
there are three articles that come back

00:28:54,670 --> 00:29:01,610
the first two only have ideal a label

00:28:58,850 --> 00:29:03,500
and body and the last one also has some

00:29:01,610 --> 00:29:08,900
tags the first two don't have tax

00:29:03,500 --> 00:29:12,620
because no one tag them so this is this

00:29:08,900 --> 00:29:15,350
is what you get and with the URL you can

00:29:12,620 --> 00:29:17,750
control what you get back so in this

00:29:15,350 --> 00:29:20,390
other example what I'm asking for is

00:29:17,750 --> 00:29:23,750
give me all of the articles that have

00:29:20,390 --> 00:29:28,700
the label of lorem and you give me them

00:29:23,750 --> 00:29:31,730
sorted by ID so if you see there there

00:29:28,700 --> 00:29:34,040
are only two articles instead of the

00:29:31,730 --> 00:29:36,740
three that we had and that's because

00:29:34,040 --> 00:29:41,030
some of them don't meet the filter of

00:29:36,740 --> 00:29:43,550
hardy label equal lorem and you see that

00:29:41,030 --> 00:29:47,530
the first one is ID 5 and the second one

00:29:43,550 --> 00:29:51,560
42 because they are sorted by my ID and

00:29:47,530 --> 00:29:54,290
notice here that you always interact

00:29:51,560 --> 00:29:57,980
with the public fields so you're not

00:29:54,290 --> 00:30:00,920
saying sort by node ID so this is always

00:29:57,980 --> 00:30:02,780
shielded from from from the front end

00:30:00,920 --> 00:30:07,280
developer so Drupal is not leaking

00:30:02,780 --> 00:30:10,550
outside so after that do you specify

00:30:07,280 --> 00:30:13,070
that you only want the fields ID and

00:30:10,550 --> 00:30:14,420
tags do you don't care about the label

00:30:13,070 --> 00:30:16,880
because you know it's going to be lorem

00:30:14,420 --> 00:30:21,170
you're filtering for all of the articles

00:30:16,880 --> 00:30:24,070
that are the tire lorem so yeah you you

00:30:21,170 --> 00:30:27,560
can get you know a really specific and

00:30:24,070 --> 00:30:30,860
built the cove that you need for the

00:30:27,560 --> 00:30:35,300
view that you're that you're building

00:30:30,860 --> 00:30:40,250
from the furman perspective the restful

00:30:35,300 --> 00:30:42,440
module is working with versions as I

00:30:40,250 --> 00:30:48,110
said before and there are typically two

00:30:42,440 --> 00:30:50,290
ways where how people implement virtual

00:30:48,110 --> 00:30:53,960
negotiation and version negotiation is

00:30:50,290 --> 00:30:57,590
how the client or the consumer of the

00:30:53,960 --> 00:31:01,970
API tells the server hey I want version

00:30:57,590 --> 00:31:03,270
1.3 and not version 2 point 0 so some

00:31:01,970 --> 00:31:05,520
people do it in the you

00:31:03,270 --> 00:31:08,010
RL some people do it in heathers both of

00:31:05,520 --> 00:31:11,130
them have to use cases in my opinion

00:31:08,010 --> 00:31:13,830
both of them have valid use cases so in

00:31:11,130 --> 00:31:16,710
the restful model we support both and in

00:31:13,830 --> 00:31:20,820
an interchangeable way so you could you

00:31:16,710 --> 00:31:23,280
know send a URL to your non-technical

00:31:20,820 --> 00:31:26,490
p.m. with the version in there because

00:31:23,280 --> 00:31:28,830
you don't want to explain him how to you

00:31:26,490 --> 00:31:31,500
know pass a header to the browser so the

00:31:28,830 --> 00:31:33,720
negotiation now you just give them give

00:31:31,500 --> 00:31:37,200
them a URL and they hit that and they

00:31:33,720 --> 00:31:42,780
see the results so yeah you can use both

00:31:37,200 --> 00:31:45,930
and also if you want to to negotiate the

00:31:42,780 --> 00:31:51,720
version inside of the media type you

00:31:45,930 --> 00:31:55,620
could do that so the one of the one of

00:31:51,720 --> 00:31:59,190
the features that are imported from du

00:31:55,620 --> 00:32:02,190
palais rd authentication providers this

00:31:59,190 --> 00:32:04,860
is not in Drupal 7 so we went away and

00:32:02,190 --> 00:32:07,110
borrowed the concept from authentication

00:32:04,860 --> 00:32:09,300
providers from the plate and we

00:32:07,110 --> 00:32:13,440
implemented that so what that means is

00:32:09,300 --> 00:32:15,900
that you have a way to authenticate your

00:32:13,440 --> 00:32:18,630
requests and you can do it in several

00:32:15,900 --> 00:32:21,150
different ways because remember these

00:32:18,630 --> 00:32:23,010
are plugins so one plug-in will allow

00:32:21,150 --> 00:32:26,490
you to authenticate your request using

00:32:23,010 --> 00:32:28,740
cookie authentication that means that if

00:32:26,490 --> 00:32:31,470
you send a session cookie along with

00:32:28,740 --> 00:32:34,500
your request you can authenticate

00:32:31,470 --> 00:32:38,520
yourself as an admin and get more fields

00:32:34,500 --> 00:32:43,620
or maybe you can get access to create

00:32:38,520 --> 00:32:46,860
some content type another one is by

00:32:43,620 --> 00:32:48,330
basic auth which basically means that

00:32:46,860 --> 00:32:51,810
you're sending your username and

00:32:48,330 --> 00:32:53,370
password along with every request and

00:32:51,810 --> 00:32:57,210
you should only do that on encrypted

00:32:53,370 --> 00:32:59,610
connections by the way and there are

00:32:57,210 --> 00:33:02,520
another one that's called token bearer

00:32:59,610 --> 00:33:04,320
which is passing a longer token so there

00:33:02,520 --> 00:33:06,600
are different authentication types and

00:33:04,320 --> 00:33:08,910
you can build your own so if you want to

00:33:06,600 --> 00:33:10,800
if you have a use case where you only

00:33:08,910 --> 00:33:12,900
want to authenticate request if they

00:33:10,800 --> 00:33:15,270
send the user name and password and a

00:33:12,900 --> 00:33:17,100
picture of a cute kitten you can do that

00:33:15,270 --> 00:33:19,080
or you can

00:33:17,100 --> 00:33:23,010
implement ldap which would be more

00:33:19,080 --> 00:33:26,190
useful and another another feature is

00:33:23,010 --> 00:33:29,070
weight limits this is basically saying

00:33:26,190 --> 00:33:33,330
okay this role the anonymous user can

00:33:29,070 --> 00:33:36,600
only hit my API x times doing this

00:33:33,330 --> 00:33:38,880
period of time so you can say maybe they

00:33:36,600 --> 00:33:42,450
can only hit your API 20 times in an

00:33:38,880 --> 00:33:46,350
hour or hundred times in a week etc etc

00:33:42,450 --> 00:33:50,490
this is to avoid DDoS attacks and it

00:33:46,350 --> 00:33:54,090
will even give you a nice message like

00:33:50,490 --> 00:33:57,270
it's I think it's 429 error code telling

00:33:54,090 --> 00:33:59,640
you that you exceeded the quota try

00:33:57,270 --> 00:34:03,500
again and then we'll tell you when you

00:33:59,640 --> 00:34:07,470
will get a new the new period for

00:34:03,500 --> 00:34:09,540
forgetting the response so again this is

00:34:07,470 --> 00:34:12,510
a this is a plug-in so you could

00:34:09,540 --> 00:34:15,359
implement a plug-in that gets you know

00:34:12,510 --> 00:34:21,270
doing nighttime it allows you to make

00:34:15,359 --> 00:34:24,510
more requests than during day time etc I

00:34:21,270 --> 00:34:26,850
have to admit that I've been lying to

00:34:24,510 --> 00:34:30,060
you the whole session because I've been

00:34:26,850 --> 00:34:33,540
talking about JSON all the time but you

00:34:30,060 --> 00:34:35,970
don't only get to work with json because

00:34:33,540 --> 00:34:38,669
you have output formats so what that

00:34:35,970 --> 00:34:42,780
means is that we have output format

00:34:38,669 --> 00:34:47,540
plugins that will allow you to expose

00:34:42,780 --> 00:34:52,159
your your Drupal through XML through

00:34:47,540 --> 00:34:57,180
JSON API which is a JSON specification

00:34:52,159 --> 00:34:59,520
and yeah whatever you want to wield you

00:34:57,180 --> 00:35:01,740
want to build jamo suppose you're you

00:34:59,520 --> 00:35:06,030
Drupal with channel you can you can

00:35:01,740 --> 00:35:09,390
build that and basically what that means

00:35:06,030 --> 00:35:12,530
is that with restful you only worry

00:35:09,390 --> 00:35:16,500
about gathering the information and then

00:35:12,530 --> 00:35:20,340
you defer the format to the client so

00:35:16,500 --> 00:35:22,710
they can ask give me the stuff in XML

00:35:20,340 --> 00:35:25,890
because this is an Android app that uses

00:35:22,710 --> 00:35:29,010
java in framework that works well with

00:35:25,890 --> 00:35:30,840
XML that's fine they decide but at the

00:35:29,010 --> 00:35:36,480
same time the same resource can be

00:35:30,840 --> 00:35:38,790
served in JSON or in halle Jason so yeah

00:35:36,480 --> 00:35:41,370
this gives a lot of flexibility so we

00:35:38,790 --> 00:35:43,800
only get the info and then with output

00:35:41,370 --> 00:35:50,070
formats we we can show it in different

00:35:43,800 --> 00:35:55,170
ways and this is where where your mind

00:35:50,070 --> 00:35:58,650
should start blowing up so this all this

00:35:55,170 --> 00:36:01,740
it's auto discoverable so what this

00:35:58,650 --> 00:36:04,820
means is that you don't need to write a

00:36:01,740 --> 00:36:07,470
single line of documentation don't write

00:36:04,820 --> 00:36:10,140
documentation just allow people to

00:36:07,470 --> 00:36:14,670
discover the API so when you browse the

00:36:10,140 --> 00:36:17,880
API at the route home page at / AP I

00:36:14,670 --> 00:36:21,420
what you will get is a list of all of

00:36:17,880 --> 00:36:23,670
them all of all of the resources that

00:36:21,420 --> 00:36:25,440
are available for that side and I

00:36:23,670 --> 00:36:27,900
realize that you cannot read this don't

00:36:25,440 --> 00:36:30,690
worry this is just a list of all of the

00:36:27,900 --> 00:36:33,990
resources that are available and since

00:36:30,690 --> 00:36:37,440
this is just another research it's a

00:36:33,990 --> 00:36:40,980
research that serves resources you can

00:36:37,440 --> 00:36:43,620
do filtering you can do shorts etc etc

00:36:40,980 --> 00:36:48,510
etc so here you can discover that you

00:36:43,620 --> 00:36:50,970
have let's say and articles research but

00:36:48,510 --> 00:36:53,190
that doesn't help you much right because

00:36:50,970 --> 00:36:57,120
you want to know what's inside of the

00:36:53,190 --> 00:37:01,020
articles research so by doing an options

00:36:57,120 --> 00:37:03,540
call or an options request to a single

00:37:01,020 --> 00:37:07,490
article you will get an explanation of

00:37:03,540 --> 00:37:10,920
what is inside of the of the article so

00:37:07,490 --> 00:37:14,970
options is just the regular HTTP verb

00:37:10,920 --> 00:37:17,810
like get and post etc so do you get

00:37:14,970 --> 00:37:22,860
something like this don't try to read it

00:37:17,810 --> 00:37:25,950
what you get is ok you got an articles

00:37:22,860 --> 00:37:28,770
research but what's in there and doing

00:37:25,950 --> 00:37:31,560
this what it gives you is it give you

00:37:28,770 --> 00:37:33,600
the information that there's a label so

00:37:31,560 --> 00:37:37,860
this is all the information for for a

00:37:33,600 --> 00:37:40,800
label and this label you do have this

00:37:37,860 --> 00:37:43,590
property that this cult label has this

00:37:40,800 --> 00:37:44,640
description which could be this is the

00:37:43,590 --> 00:37:47,099
label of the

00:37:44,640 --> 00:37:49,289
resource that it's implied from the

00:37:47,099 --> 00:37:53,039
title etc etc some documentation there

00:37:49,289 --> 00:37:54,869
and then things get interesting because

00:37:53,039 --> 00:37:58,349
it gives you information about the

00:37:54,869 --> 00:38:03,930
schema of the property label is a string

00:37:58,349 --> 00:38:08,039
of 20 255 characters which is not

00:38:03,930 --> 00:38:13,319
required and it's read-only and it's

00:38:08,039 --> 00:38:16,710
cardinality of one so doing this allows

00:38:13,319 --> 00:38:20,279
you to introspect the API and know that

00:38:16,710 --> 00:38:24,359
label is string and you should expect

00:38:20,279 --> 00:38:27,539
this to be string and you can assume

00:38:24,359 --> 00:38:30,359
that you can pass this to the front team

00:38:27,539 --> 00:38:31,950
and they know how to deal with this all

00:38:30,359 --> 00:38:34,980
the things that you can do and this is

00:38:31,950 --> 00:38:38,339
also out of the box is imagine that you

00:38:34,980 --> 00:38:41,430
also document a form element for this

00:38:38,339 --> 00:38:44,819
particular property so for a label you

00:38:41,430 --> 00:38:50,220
would be you will build a text field of

00:38:44,819 --> 00:38:52,799
length 255 with a placeholder and you

00:38:50,220 --> 00:38:59,490
know just like you do it in the in the

00:38:52,799 --> 00:39:03,539
form API so that makes you that allows

00:38:59,490 --> 00:39:05,519
you to as a front-end developer build a

00:39:03,539 --> 00:39:08,309
library that reads this and creates

00:39:05,519 --> 00:39:12,029
forms automatically instead of you going

00:39:08,309 --> 00:39:15,569
there and writing the HTML in a react

00:39:12,029 --> 00:39:18,509
template for every property that you

00:39:15,569 --> 00:39:21,390
have in the articles you just build a

00:39:18,509 --> 00:39:23,130
library that reach this so when you add

00:39:21,390 --> 00:39:24,960
a new property that library

00:39:23,130 --> 00:39:27,690
automatically creates the new form

00:39:24,960 --> 00:39:29,660
element so that's only an example of the

00:39:27,690 --> 00:39:33,180
cool things that you can do with

00:39:29,660 --> 00:39:35,579
introspection and auto-discovery so this

00:39:33,180 --> 00:39:38,369
is out-of-the-box remember all this

00:39:35,579 --> 00:39:45,299
because you wrote an annotation and a

00:39:38,369 --> 00:39:48,180
single mapping so if you liked the graph

00:39:45,299 --> 00:39:52,740
ql example this morning you are also

00:39:48,180 --> 00:39:57,150
gonna like JSON API because JSON API

00:39:52,740 --> 00:39:58,260
it's it's basically specification they

00:39:57,150 --> 00:40:01,860
say that

00:39:58,260 --> 00:40:04,890
it pains your bike shed which basically

00:40:01,860 --> 00:40:08,400
means that it's just does what you

00:40:04,890 --> 00:40:13,500
otherwise would have to discuss a lot to

00:40:08,400 --> 00:40:17,220
get to a similar solution so Jason API

00:40:13,500 --> 00:40:19,800
has a lot of cool things that I don't

00:40:17,220 --> 00:40:23,190
have to I don't have time to explain in

00:40:19,800 --> 00:40:28,640
four minutes and 25 seconds so go check

00:40:23,190 --> 00:40:31,410
it yourself I put up there some demos I

00:40:28,640 --> 00:40:33,810
don't want it to to do a live demo

00:40:31,410 --> 00:40:36,450
because that's scary so I recorded some

00:40:33,810 --> 00:40:38,120
videos I put up some code the code is

00:40:36,450 --> 00:40:41,190
very simple it's just a feature that

00:40:38,120 --> 00:40:43,320
spices up a little bit the articles and

00:40:41,190 --> 00:40:46,740
page content types to getting more

00:40:43,320 --> 00:40:50,100
interesting to have entity reference

00:40:46,740 --> 00:40:54,450
videos etc and then another module that

00:40:50,100 --> 00:40:57,330
creates the resources for those spiced

00:40:54,450 --> 00:41:00,090
up content types and then when you have

00:40:57,330 --> 00:41:02,910
that installed in your side go and watch

00:41:00,090 --> 00:41:06,450
the videos which are silent by the way

00:41:02,910 --> 00:41:11,480
but you you see hopefully you you will

00:41:06,450 --> 00:41:17,220
get the point so you coming back to the

00:41:11,480 --> 00:41:20,820
to the meals example you can do very

00:41:17,220 --> 00:41:23,250
cool things like and it's you know

00:41:20,820 --> 00:41:26,700
explaining this is super hard so it's

00:41:23,250 --> 00:41:30,210
okay you don't fully get it so you can

00:41:26,700 --> 00:41:34,400
could do things like okay give me all of

00:41:30,210 --> 00:41:38,400
the meals which have ice creams that

00:41:34,400 --> 00:41:42,120
have a topping that has the name of

00:41:38,400 --> 00:41:44,730
chocolate right and that may seem stupid

00:41:42,120 --> 00:41:49,350
but when you go to the real world you

00:41:44,730 --> 00:41:52,770
may have to list I know videos that

00:41:49,350 --> 00:41:56,220
belong to a TV show that is marked as

00:41:52,770 --> 00:41:59,550
being available for Apple TV so from the

00:41:56,220 --> 00:42:01,560
apple TV you want to only get the videos

00:41:59,550 --> 00:42:04,620
that belong to TV shows that you have

00:42:01,560 --> 00:42:10,480
the right the legal right to show them

00:42:04,620 --> 00:42:15,490
in an apple TV so doing that with

00:42:10,480 --> 00:42:21,250
you know simple exposing click and be

00:42:15,490 --> 00:42:22,660
done systems that is very hard and you

00:42:21,250 --> 00:42:25,240
know there are other combinations that

00:42:22,660 --> 00:42:27,700
you could be doing sorry in that I'll

00:42:25,240 --> 00:42:29,620
example what you do is you call the /

00:42:27,700 --> 00:42:32,020
meals and then you feel their back ice

00:42:29,620 --> 00:42:35,050
cream that toppings so you basically

00:42:32,020 --> 00:42:39,360
traverse the relationships through the

00:42:35,050 --> 00:42:43,150
name of the of the field so meals have

00:42:39,360 --> 00:42:47,260
title sorry a field of ice cream and ice

00:42:43,150 --> 00:42:52,720
creams have a title a field of toppings

00:42:47,260 --> 00:42:54,970
so when you want to filter by nested

00:42:52,720 --> 00:42:58,510
resources what you do is basically you

00:42:54,970 --> 00:43:01,500
traverse by the by the field names but

00:42:58,510 --> 00:43:04,690
you know you could all also want it to

00:43:01,500 --> 00:43:07,390
no no but that's not what i wanted to do

00:43:04,690 --> 00:43:10,090
i didn't want all of the meals that had

00:43:07,390 --> 00:43:12,430
ice creams that had a topping of

00:43:10,090 --> 00:43:15,370
chocolate I just wanted all of the meals

00:43:12,430 --> 00:43:19,720
and then limit the toppings to the ones

00:43:15,370 --> 00:43:22,960
that are chocolate so these things get

00:43:19,720 --> 00:43:27,610
crazy and there are a lot of use cases

00:43:22,960 --> 00:43:31,270
and if you think that there are some

00:43:27,610 --> 00:43:35,160
that should be included please feel free

00:43:31,270 --> 00:43:38,260
and reach out and go contrib to go

00:43:35,160 --> 00:43:40,380
contribute to the issue queue and that's

00:43:38,260 --> 00:43:40,380
it

00:43:47,250 --> 00:43:55,210
also before I forget and we'll go to the

00:43:51,160 --> 00:43:58,090
questions the spins on Friday and don't

00:43:55,210 --> 00:44:01,900
miss them and if you liked what you saw

00:43:58,090 --> 00:44:04,300
today go and do an evaluation on on the

00:44:01,900 --> 00:44:06,880
on the session if you didn't like this

00:44:04,300 --> 00:44:18,010
forget that I showed you this so any

00:44:06,880 --> 00:44:20,740
questions hi firstly I'd like to say I'm

00:44:18,010 --> 00:44:25,660
using it and it's a amazing and amazing

00:44:20,740 --> 00:44:29,200
simple and it's sooo to say in its best

00:44:25,660 --> 00:44:33,460
and my question is could it be possible

00:44:29,200 --> 00:44:43,770
to create entity bundles using post

00:44:33,460 --> 00:44:47,470
requests so you mean like creating the

00:44:43,770 --> 00:44:50,410
creating the entity bundle like making

00:44:47,470 --> 00:44:55,860
it available to to Drupal like you have

00:44:50,410 --> 00:45:00,460
and to create a new content type yes

00:44:55,860 --> 00:45:03,250
yeah I don't see why not maybe there are

00:45:00,460 --> 00:45:06,490
some nasty details that I'm overlooking

00:45:03,250 --> 00:45:09,160
but you could make a data provider but

00:45:06,490 --> 00:45:11,080
that would be not out of the box you

00:45:09,160 --> 00:45:15,370
could make a data provider that

00:45:11,080 --> 00:45:17,620
interacted with tuples API to create the

00:45:15,370 --> 00:45:22,930
bundles so basically what you would end

00:45:17,620 --> 00:45:26,410
up doing is having a custom hook entity

00:45:22,930 --> 00:45:30,100
info alter that reads from the records

00:45:26,410 --> 00:45:33,430
of the of the resource and then it

00:45:30,100 --> 00:45:38,920
creates the de bundle it would certainly

00:45:33,430 --> 00:45:41,980
be you know scary to build but yeah I

00:45:38,920 --> 00:45:44,800
think it would be doable and another

00:45:41,980 --> 00:45:49,780
question you said you that are using C

00:45:44,800 --> 00:45:54,430
tools plugins generally but I'm I think

00:45:49,780 --> 00:45:56,460
that some things there are entities like

00:45:54,430 --> 00:45:56,460
the

00:45:57,340 --> 00:46:06,260
the education I think because you you

00:46:04,310 --> 00:46:10,970
are setting them as entities there is

00:46:06,260 --> 00:46:16,130
that true I'm not sure I got that

00:46:10,970 --> 00:46:22,880
question the authentication plugin our

00:46:16,130 --> 00:46:27,050
end it is not suited plugin oh um okay

00:46:22,880 --> 00:46:31,220
so yeah a women taking 1 dot x + 2 dot X

00:46:27,050 --> 00:46:34,100
and the line gets blurry but I mean each

00:46:31,220 --> 00:46:37,760
one each in one version of that in

00:46:34,100 --> 00:46:42,080
version one I think that seagulls flying

00:46:37,760 --> 00:46:46,070
I may be wrong I would need to to check

00:46:42,080 --> 00:46:50,090
it okay I'm it I says that is this

00:46:46,070 --> 00:46:54,760
little plugin so yeah I think those are

00:46:50,090 --> 00:47:03,310
also chisel plugins I've stickers for

00:46:54,760 --> 00:47:06,860
everyone that asks a question hi I

00:47:03,310 --> 00:47:10,760
apologize it may seems stupid but from

00:47:06,860 --> 00:47:13,340
what you showed today I don't see why we

00:47:10,760 --> 00:47:16,940
need a special module for this why

00:47:13,340 --> 00:47:20,470
aren't we using vuze for this like you

00:47:16,940 --> 00:47:23,420
create listings you can sort filter

00:47:20,470 --> 00:47:26,930
select range and you just call from a

00:47:23,420 --> 00:47:32,900
URL why why is there a module for this

00:47:26,930 --> 00:47:36,800
and views so if you are not missing

00:47:32,900 --> 00:47:41,480
anything with this then you don't need

00:47:36,800 --> 00:47:44,780
this module but but if you need to

00:47:41,480 --> 00:47:46,580
create something maybe you need to allow

00:47:44,780 --> 00:47:50,240
users in that voice yes conciliar

00:47:46,580 --> 00:47:53,840
example to create a deal for for the

00:47:50,240 --> 00:47:57,140
restaurant or to add a comment you

00:47:53,840 --> 00:48:02,020
cannot do that with bills right if you

00:47:57,140 --> 00:48:02,020

YouTube URL: https://www.youtube.com/watch?v=PqJOM5n1-yM


