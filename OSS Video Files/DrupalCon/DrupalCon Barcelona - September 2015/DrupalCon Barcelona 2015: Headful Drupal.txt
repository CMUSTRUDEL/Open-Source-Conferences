Title: DrupalCon Barcelona 2015: Headful Drupal
Publication date: 2015-09-22
Playlist: DrupalCon Barcelona - September 2015
Description: 
	Headless Drupal certainly is popular, so is fast and maintainable code. This session will talk about JavaScript in general, presenting the latest news about the language and it's ecosystem, and Drupal in particular, exposing how Drupal could benefit from the language's evolution. 

This session will present news from around the frontend world and will be used to talk about:

what developers want Drupal JS to do (or not do!),
approaches for the Refactor of Doom (RD) that need to happen for JavaScript to be unit-testable (ES6 modules, patterns, etc.),
intermediate steps to make some amount of testing possible prior to the RD,
tools aimed at Drupal JS developers (eslint plugins, nodejs utilities for Drupal, etc.)
frameworks,
how to make decoupled implementations easier (aka. giving back some brains to headless implementations)
anything else that is important to you.
Core frontend is vastly better than it used to be, so much so that going headless because Drupal is a pain to work with is not an argument that can be made easily. Help us make that argument stronger to prevent people from loosing their head and drive projects to the ground.
Captions: 
	00:03:09,019 --> 00:03:15,719
yeah I guess we're going to start good

00:03:12,989 --> 00:03:17,790
afternoon everyone I'm till da ba da da

00:03:15,719 --> 00:03:20,849
I'm gorgeous quick meant enough for

00:03:17,790 --> 00:03:25,230
drupal 8 and seven and i'm going to talk

00:03:20,849 --> 00:03:28,139
about head full drupal so just show of

00:03:25,230 --> 00:03:31,980
hands who's family always had less Tico

00:03:28,139 --> 00:03:38,790
quadrupled yeah so you all went to the

00:03:31,980 --> 00:03:41,639
keynote this morning so usually on

00:03:38,790 --> 00:03:46,200
Drupal 7 when you have a client he wants

00:03:41,639 --> 00:03:48,540
a UI for some reason and you know the

00:03:46,200 --> 00:03:51,780
process of developing with that it's

00:03:48,540 --> 00:03:55,919
just pain and misery you're just picking

00:03:51,780 --> 00:03:58,109
up your the shards of your clients

00:03:55,919 --> 00:04:00,959
broken dream and you know try to make

00:03:58,109 --> 00:04:05,819
them fit and you catch yourself in a

00:04:00,959 --> 00:04:09,030
process so let's say you're a surgeon

00:04:05,819 --> 00:04:11,430
plastic surgeon and you have a face to

00:04:09,030 --> 00:04:15,329
make nicer so if you have the default

00:04:11,430 --> 00:04:17,699
Drupal 7 phase which is a bit crazy so

00:04:15,329 --> 00:04:20,669
you put a mask on top of it could be Zen

00:04:17,699 --> 00:04:24,090
could be mothership Omega bootstrap and

00:04:20,669 --> 00:04:26,370
you walk on top of that but you know the

00:04:24,090 --> 00:04:27,659
crazy is still on the list so whenever

00:04:26,370 --> 00:04:34,159
you want to do something a bit more

00:04:27,659 --> 00:04:34,159
involved I get no really

00:04:37,910 --> 00:04:40,910
nope

00:04:41,289 --> 00:04:49,579
it's a bit big for taking notes and so

00:04:46,579 --> 00:04:51,079
because people don't like crazy they're

00:04:49,579 --> 00:04:54,529
just saying okay we're not going to use

00:04:51,079 --> 00:04:57,829
the Drupal you I at all and we are going

00:04:54,529 --> 00:05:01,849
headless whatever that means it really

00:04:57,829 --> 00:05:05,449
picked up last year around you know some

00:05:01,849 --> 00:05:08,149
drupalcon as well you know the term had

00:05:05,449 --> 00:05:09,979
less and making headless websites and

00:05:08,149 --> 00:05:13,969
it's like web two point O at this point

00:05:09,979 --> 00:05:17,139
I just to make sure we're in sync this

00:05:13,969 --> 00:05:20,269
is a graph from a Pantheon blog post I

00:05:17,139 --> 00:05:23,860
mean usual static website you have files

00:05:20,269 --> 00:05:28,099
browser simple usual drupal websites

00:05:23,860 --> 00:05:30,799
database PHP pros are simple and the

00:05:28,099 --> 00:05:34,129
headless or decapod way you have the

00:05:30,799 --> 00:05:37,869
database PHP some javascript stuff that

00:05:34,129 --> 00:05:41,419
will render your content and the browser

00:05:37,869 --> 00:05:44,539
unless it's not really true what really

00:05:41,419 --> 00:05:48,050
happens is that it's the browser that

00:05:44,539 --> 00:05:52,959
renders everything I mean just no extra

00:05:48,050 --> 00:05:52,959
step is just more stuff on the browser

00:05:57,260 --> 00:06:04,560
so is it really had less LD couple to do

00:06:01,080 --> 00:06:06,060
it that way and I mean there are proper

00:06:04,560 --> 00:06:08,550
way to do that I have a slide at the end

00:06:06,060 --> 00:06:12,540
where I can show you you know what a

00:06:08,550 --> 00:06:14,400
proper decoupled way look like but if

00:06:12,540 --> 00:06:16,740
you do it this way just push more stuff

00:06:14,400 --> 00:06:20,100
to the browser when you use angular

00:06:16,740 --> 00:06:22,560
react of that kind of stuff the

00:06:20,100 --> 00:06:24,200
front-end logic does not much logic in

00:06:22,560 --> 00:06:27,330
it you just dump late one ring and

00:06:24,200 --> 00:06:29,280
routing so you know you go to a page and

00:06:27,330 --> 00:06:33,300
JavaScript takes care of loading

00:06:29,280 --> 00:06:36,660
everything but if you look at blog post

00:06:33,300 --> 00:06:41,040
or just you know talk with people that

00:06:36,660 --> 00:06:45,060
did decoupled implementation they keep

00:06:41,040 --> 00:06:47,130
the droop Drupal admin UI because

00:06:45,060 --> 00:06:49,580
they're yeah they're not that dumb are

00:06:47,130 --> 00:06:52,140
rich because it's really complicated I

00:06:49,580 --> 00:06:54,660
mean there's lots of stuff you can do in

00:06:52,140 --> 00:06:57,150
the Drupal admin UI and it doesn't make

00:06:54,660 --> 00:07:00,420
sense to just build a whole jar script

00:06:57,150 --> 00:07:04,320
up for you know ten person and even 10

00:07:00,420 --> 00:07:07,260
is a lot of people and the business

00:07:04,320 --> 00:07:08,700
logic it's all still in the back end so

00:07:07,260 --> 00:07:10,830
you still have rules you still have

00:07:08,700 --> 00:07:15,740
views all that kind of stuff but you

00:07:10,830 --> 00:07:18,660
just get the data in a different way so

00:07:15,740 --> 00:07:20,640
business logic could be you know it's a

00:07:18,660 --> 00:07:26,880
brain kind of so it's not really

00:07:20,640 --> 00:07:29,400
headless I mean decoupled its kind of

00:07:26,880 --> 00:07:32,190
fancy way of talking about headless and

00:07:29,400 --> 00:07:38,310
the log trail here is you know that's a

00:07:32,190 --> 00:07:40,350
kind of terminology likes I guess but

00:07:38,310 --> 00:07:42,510
it's you know it's really faceless group

00:07:40,350 --> 00:07:46,590
or you just keep the range just don't

00:07:42,510 --> 00:07:48,870
want to see it and you know if your

00:07:46,590 --> 00:07:51,930
surgeon and you have a faceless human

00:07:48,870 --> 00:07:54,180
being you have to draw everything again

00:07:51,930 --> 00:07:59,240
you have to make everything that was

00:07:54,180 --> 00:07:59,240
already there which is you know like

00:07:59,390 --> 00:08:05,060
forms authentification that kind of

00:08:02,250 --> 00:08:06,290
stuff it used to be the end rupal

00:08:05,060 --> 00:08:09,889
because you go ahead less you have to

00:08:06,290 --> 00:08:13,580
make it from scratch and because it's

00:08:09,889 --> 00:08:16,310
not about what you see what you don't

00:08:13,580 --> 00:08:21,139
see gets left out and what you don't see

00:08:16,310 --> 00:08:23,480
is security and accessibility usually

00:08:21,139 --> 00:08:27,590
because if you get data from the Drupal

00:08:23,480 --> 00:08:30,320
back end it's not sanitized but if you

00:08:27,590 --> 00:08:32,060
don't do anything special with it so you

00:08:30,320 --> 00:08:34,219
have to sanitize it on the JavaScript

00:08:32,060 --> 00:08:39,800
side and you know people sometimes

00:08:34,219 --> 00:08:42,620
forget about that and I guess it's even

00:08:39,800 --> 00:08:46,310
worse in Drupal 8 because now we use

00:08:42,620 --> 00:08:49,400
three the tweak auto escaping so all the

00:08:46,310 --> 00:08:54,350
data you're going to get back from you

00:08:49,400 --> 00:08:56,930
know the web from Drupal be 43 it's not

00:08:54,350 --> 00:08:59,690
going to be sanitized so you have a lot

00:08:56,930 --> 00:09:08,600
more thing to take care of on the front

00:08:59,690 --> 00:09:12,830
end so what would something you know

00:09:08,600 --> 00:09:14,990
ideal look like and if you have any

00:09:12,830 --> 00:09:18,940
question just you know stop me and can

00:09:14,990 --> 00:09:18,940
talk about it to conversation afterwards

00:09:20,500 --> 00:09:27,100
so what you what you would like is some

00:09:23,450 --> 00:09:29,930
you know basic non really opinionated

00:09:27,100 --> 00:09:33,980
baseline to work with and you just stick

00:09:29,930 --> 00:09:36,770
stuff on top of that it's you know miss

00:09:33,980 --> 00:09:38,960
your patent report you just put eyes

00:09:36,770 --> 00:09:43,070
nose with stash you want to enter

00:09:38,960 --> 00:09:45,020
hipster Drupal and you can you don't

00:09:43,070 --> 00:09:47,390
have to be a trained surgeon to do that

00:09:45,020 --> 00:09:49,370
you can you know be a key then just

00:09:47,390 --> 00:09:52,160
stick stuff on your group or and to make

00:09:49,370 --> 00:09:54,920
it nice and I think that we we have a

00:09:52,160 --> 00:09:59,600
way to make the interval individual

00:09:54,920 --> 00:10:01,910
pieces features kind of stand alone so

00:09:59,600 --> 00:10:06,620
you could use them within drupal but

00:10:01,910 --> 00:10:09,860
also within your own JavaScript II stuff

00:10:06,620 --> 00:10:13,400
so you don't have to use Drupal to have

00:10:09,860 --> 00:10:15,680
some Drupal features okay properly it

00:10:13,400 --> 00:10:18,330
will make sense later

00:10:15,680 --> 00:10:21,570
so the way to package those kind of

00:10:18,330 --> 00:10:27,690
features our web components so who

00:10:21,570 --> 00:10:33,990
worked about web components ah nice who

00:10:27,690 --> 00:10:39,060
is using web components nice sec three

00:10:33,990 --> 00:10:42,960
or four people and web components just

00:10:39,060 --> 00:10:46,410
in a fancy term to describe for

00:10:42,960 --> 00:10:49,050
technologies actually so the way it

00:10:46,410 --> 00:10:51,870
looks it's it's like that so first you

00:10:49,050 --> 00:10:55,620
have you know standard HTML page you can

00:10:51,870 --> 00:11:01,830
see in the in the head space you have a

00:10:55,620 --> 00:11:05,610
link import so this is an HTML file that

00:11:01,830 --> 00:11:08,250
hand that contains a template and some

00:11:05,610 --> 00:11:10,530
JavaScript and you know maybe some CSS

00:11:08,250 --> 00:11:16,080
whatever you want the HTML of the world

00:11:10,530 --> 00:11:20,070
after all and this will be all the logic

00:11:16,080 --> 00:11:23,940
of your component and you see in the

00:11:20,070 --> 00:11:27,030
body of your HTML you have a custom tag

00:11:23,940 --> 00:11:30,660
which is hello world with some attribute

00:11:27,030 --> 00:11:32,580
and this is if you if you make a view

00:11:30,660 --> 00:11:36,330
source of your page you're going to see

00:11:32,580 --> 00:11:38,880
only this tag but if you inspect it with

00:11:36,330 --> 00:11:42,510
the Dom inspector from little firefox or

00:11:38,880 --> 00:11:47,040
chrome you're going to see the shadow

00:11:42,510 --> 00:11:53,550
Dom so this is additional elements added

00:11:47,040 --> 00:11:57,120
by your by your widget you know using

00:11:53,550 --> 00:12:02,780
the template that's in the imported HTML

00:11:57,120 --> 00:12:06,090
file so if you well I don't have the

00:12:02,780 --> 00:12:08,070
imported HTML file to show you but if

00:12:06,090 --> 00:12:13,080
you open that file the helloworld dot

00:12:08,070 --> 00:12:16,760
HTML you have a template tag with you

00:12:13,080 --> 00:12:20,460
know the p hello hello strong and

00:12:16,760 --> 00:12:23,370
closing p stuff and then the javascript

00:12:20,460 --> 00:12:27,000
will replace what's in within the strong

00:12:23,370 --> 00:12:31,800
tag with whatever is in the who

00:12:27,000 --> 00:12:37,220
attributes of this type so it doesn't

00:12:31,800 --> 00:12:43,950
make sense yes for some people at least

00:12:37,220 --> 00:12:46,440
so when can we use that hey hey well if

00:12:43,950 --> 00:12:49,140
you use on on chroma opera you can use

00:12:46,440 --> 00:12:51,480
it right now otherwise you need to

00:12:49,140 --> 00:12:54,780
polyfill all this stuff so they are

00:12:51,480 --> 00:12:58,860
different but if it's available you know

00:12:54,780 --> 00:13:01,710
Google polymer then I know others 2x

00:12:58,860 --> 00:13:06,150
template all those kind of sleep so the

00:13:01,710 --> 00:13:09,120
first the first technologies HTML

00:13:06,150 --> 00:13:11,960
templates so this is what's in the

00:13:09,120 --> 00:13:16,800
imported HTML file to just make up

00:13:11,960 --> 00:13:19,560
what's within the shadow Dom the second

00:13:16,800 --> 00:13:22,710
one is HTML import so the fact that you

00:13:19,560 --> 00:13:26,010
have a link rel import that the browser

00:13:22,710 --> 00:13:29,250
we download and execute this is what

00:13:26,010 --> 00:13:32,250
this is about then you have the custom

00:13:29,250 --> 00:13:34,410
element so with custom element you have

00:13:32,250 --> 00:13:37,860
a whole JavaScript API that you can use

00:13:34,410 --> 00:13:40,950
to react on attribute change or whatever

00:13:37,860 --> 00:13:44,040
else you want and the last one is a

00:13:40,950 --> 00:13:48,930
shadow Dom so for example if you have a

00:13:44,040 --> 00:13:52,110
select list you know it is not just a

00:13:48,930 --> 00:13:53,900
simple tag the browser will replace your

00:13:52,110 --> 00:13:57,060
select list with the whole widget

00:13:53,900 --> 00:13:58,320
keyboard control that kind of stuff so

00:13:57,060 --> 00:14:01,650
the shadow DOM is all the elements

00:13:58,320 --> 00:14:05,250
needed to render this fancy select

00:14:01,650 --> 00:14:12,440
widget instable instead of just a gift

00:14:05,250 --> 00:14:16,050
I'd for example all the the HTML files

00:14:12,440 --> 00:14:18,450
five form inputs as well so when you

00:14:16,050 --> 00:14:21,900
have an input number and then those

00:14:18,450 --> 00:14:24,390
arrows you know to increase the value of

00:14:21,900 --> 00:14:26,940
your field or decrease it all of this is

00:14:24,390 --> 00:14:31,050
generated and accessible accessible

00:14:26,940 --> 00:14:34,560
through the shadow Dom so if we have web

00:14:31,050 --> 00:14:37,410
components and we have a faceless you

00:14:34,560 --> 00:14:40,230
know Drupal and we can just put features

00:14:37,410 --> 00:14:42,660
on top of that and it you know mix

00:14:40,230 --> 00:14:46,740
the process easier to develop a website

00:14:42,660 --> 00:14:49,140
that's more accessible and we're less

00:14:46,740 --> 00:14:52,590
insecure at least so for example you

00:14:49,140 --> 00:14:54,630
could have a Drupal table drag custom

00:14:52,590 --> 00:14:57,660
element if you have something like that

00:14:54,630 --> 00:15:01,320
so you can reuse the whole table drag

00:14:57,660 --> 00:15:04,260
stuff from Drupal within your own on

00:15:01,320 --> 00:15:08,310
Drupal you I but just you know just

00:15:04,260 --> 00:15:11,640
using the bare minimum from Drupal so

00:15:08,310 --> 00:15:13,260
you don't get all the messy stuff so

00:15:11,640 --> 00:15:17,340
that does sound like something that you

00:15:13,260 --> 00:15:19,110
would do I mean so who's developing kind

00:15:17,340 --> 00:15:23,910
of face rest website or dick about

00:15:19,110 --> 00:15:27,480
website right now ok so what kind of

00:15:23,910 --> 00:15:30,300
issue do you run into that I mean so I'm

00:15:27,480 --> 00:15:32,760
assuming you don't use Drupal the Drupal

00:15:30,300 --> 00:15:35,490
rendering at all so you have to do all

00:15:32,760 --> 00:15:40,530
the free filtering and escaping of the

00:15:35,490 --> 00:15:42,150
data yourself yeah yeah so the do you

00:15:40,530 --> 00:15:47,550
have anything slip through the cracks

00:15:42,150 --> 00:15:51,030
usually no some kind of xss security

00:15:47,550 --> 00:15:55,290
stuff now well maybe you don't know yet

00:15:51,030 --> 00:16:01,080
about it ok so I mean this whole session

00:15:55,290 --> 00:16:04,290
is about how to make Drupal you know

00:16:01,080 --> 00:16:07,770
easy to work with within the decoupled

00:16:04,290 --> 00:16:10,050
situation so just making some features

00:16:07,770 --> 00:16:12,750
available to people who don't want to

00:16:10,050 --> 00:16:14,850
use Drupal but I mean they still need

00:16:12,750 --> 00:16:18,000
accessibility is a still in security and

00:16:14,850 --> 00:16:24,480
they still need some you know shortcuts

00:16:18,000 --> 00:16:29,940
to implement Drupal features so how can

00:16:24,480 --> 00:16:33,870
we get there so the first thing is to

00:16:29,940 --> 00:16:36,240
have at least on the Drupal side a clean

00:16:33,870 --> 00:16:40,350
based work with so we can pick and

00:16:36,240 --> 00:16:42,120
choose what we want to expose to people

00:16:40,350 --> 00:16:47,220
who want to use it you know outside of

00:16:42,120 --> 00:16:49,980
Drupal so i'm pretty sure people are not

00:16:47,220 --> 00:16:51,720
going to agree with that so hey you know

00:16:49,980 --> 00:16:53,670
feel free to stop me and tell me I'm

00:16:51,720 --> 00:16:55,650
wrong

00:16:53,670 --> 00:16:58,890
well within those years we try to make

00:16:55,650 --> 00:17:00,780
as few assumption as possible which is

00:16:58,890 --> 00:17:05,190
why we are not going with a full full

00:17:00,780 --> 00:17:08,820
you know angular or react you I yet at

00:17:05,190 --> 00:17:12,180
least I don't know we favor native

00:17:08,820 --> 00:17:13,560
functionality and vanilla JavaScript so

00:17:12,180 --> 00:17:16,200
we don't have a huge amount of

00:17:13,560 --> 00:17:18,750
dependencies to be able to use the

00:17:16,200 --> 00:17:21,690
Drupal stuff you know eventually outside

00:17:18,750 --> 00:17:25,910
of Drupal and generally we try to stay

00:17:21,690 --> 00:17:34,710
out of the way so who doesn't agree with

00:17:25,910 --> 00:17:39,570
some of this are you shy or just so

00:17:34,710 --> 00:17:42,930
wrong you can't speak okay so let's

00:17:39,570 --> 00:17:46,170
assume this is not correct what are the

00:17:42,930 --> 00:17:50,700
tools that we use within Drupal that we

00:17:46,170 --> 00:17:54,260
could use to make it easier so first we

00:17:50,700 --> 00:17:57,260
have es lint who's used yes mint before

00:17:54,260 --> 00:18:00,690
adjacent or whatever javascript winter

00:17:57,260 --> 00:18:05,090
okay so most of you are you aware that

00:18:00,690 --> 00:18:09,240
now es linked can auto fix some of the

00:18:05,090 --> 00:18:11,250
white space issues that it finds so if

00:18:09,240 --> 00:18:14,000
you have like your function although it

00:18:11,250 --> 00:18:18,480
needs a space before the opening

00:18:14,000 --> 00:18:21,300
parenthesis yesenin can fix that

00:18:18,480 --> 00:18:23,700
automatically suggests you know run the

00:18:21,300 --> 00:18:28,380
command line change your file and your

00:18:23,700 --> 00:18:32,790
valid w a few rules about semicolon that

00:18:28,380 --> 00:18:36,570
can have stuff so it's been nicer to

00:18:32,790 --> 00:18:38,670
clean up code now npm we are not using

00:18:36,570 --> 00:18:42,720
it in drupal yet because we have a

00:18:38,670 --> 00:18:47,250
messed up way of including cell party

00:18:42,720 --> 00:18:49,800
dependencies but eventually we would

00:18:47,250 --> 00:18:52,470
like to use it properly but then within

00:18:49,800 --> 00:18:55,430
the build system around that and you

00:18:52,470 --> 00:19:01,830
know that's not something we have yet

00:18:55,430 --> 00:19:04,850
who's heard of Babel GS yeah so we have

00:19:01,830 --> 00:19:06,909
a new version of JavaScript es6 oh yes

00:19:04,850 --> 00:19:09,070
00:19:06,909 --> 00:19:11,739
that has some incompatibilities with the

00:19:09,070 --> 00:19:15,279
current JavaScript version so new

00:19:11,739 --> 00:19:18,720
features but not compatible so we're bad

00:19:15,279 --> 00:19:22,570
is the whole point is to make es6

00:19:18,720 --> 00:19:25,779
JavaScript into es5 so any browser can

00:19:22,570 --> 00:19:27,599
run it so you are able to use the new

00:19:25,779 --> 00:19:33,549
features of the JavaScript language

00:19:27,599 --> 00:19:36,999
without breaking the old browsers and if

00:19:33,549 --> 00:19:40,149
you want to use what so graphic well

00:19:36,999 --> 00:19:43,570
that was shown this money the module is

00:19:40,149 --> 00:19:45,639
using es6 JavaScript so fancy features

00:19:43,570 --> 00:19:49,450
of the language and using babble to

00:19:45,639 --> 00:19:54,879
compile back down to es5 so you can use

00:19:49,450 --> 00:19:58,320
it on you know I basically browserify or

00:19:54,879 --> 00:20:02,019
you know webpack who heard about that

00:19:58,320 --> 00:20:04,119
okay most of you just you know compile

00:20:02,019 --> 00:20:08,289
all your stuff into one file or several

00:20:04,119 --> 00:20:10,419
files and you know use javascript

00:20:08,289 --> 00:20:15,190
modules and note them and you know all

00:20:10,419 --> 00:20:17,139
that kind of stuff and GS duck I mean

00:20:15,190 --> 00:20:19,720
it's nice to have code lot of code but

00:20:17,139 --> 00:20:25,840
if you don't document it I mean it's

00:20:19,720 --> 00:20:28,330
useless basically so who's been you know

00:20:25,840 --> 00:20:30,849
searching for how Drupal coach I was

00:20:28,330 --> 00:20:35,649
quick work and you know couldn't find

00:20:30,849 --> 00:20:39,159
out okay a lot of you so you'd be happy

00:20:35,649 --> 00:20:41,889
to know that we are now adopted GS duck

00:20:39,159 --> 00:20:45,700
as the official JavaScript documentation

00:20:41,889 --> 00:20:51,580
format for JavaScript and most of the

00:20:45,700 --> 00:20:53,649
file are written in that standard I mean

00:20:51,580 --> 00:20:57,509
in the end is going to be on API dr.

00:20:53,649 --> 00:21:01,389
Borg but for now it's on my personal

00:20:57,509 --> 00:21:03,669
site so you can go to this URL and you

00:21:01,389 --> 00:21:07,299
will have the whole Drupal 8 JavaScript

00:21:03,669 --> 00:21:09,820
API documented so you know the custom

00:21:07,299 --> 00:21:11,590
way not all of them but some custom

00:21:09,820 --> 00:21:14,889
events all the behaviors that you have

00:21:11,590 --> 00:21:16,539
all the behaviors that do have an a

00:21:14,889 --> 00:21:19,530
touch function and the one that don't

00:21:16,539 --> 00:21:21,600
have and attach a detached function

00:21:19,530 --> 00:21:28,280
see all that kind of stuff you can see

00:21:21,600 --> 00:21:32,040
that at this URL and the do a few patch

00:21:28,280 --> 00:21:35,070
left for some files that are not

00:21:32,040 --> 00:21:38,370
documented yet so if you feel like doing

00:21:35,070 --> 00:21:42,720
some documentation let me know I can

00:21:38,370 --> 00:21:51,750
point you to the right issue who's heard

00:21:42,720 --> 00:21:54,750
about isomorphic JavaScript so I mean

00:21:51,750 --> 00:21:57,270
the way people are I mean some people

00:21:54,750 --> 00:21:59,160
use it as a way to say my javascript is

00:21:57,270 --> 00:22:02,490
going to run in the browser and it's

00:21:59,160 --> 00:22:04,760
going to run on low GS which you know

00:22:02,490 --> 00:22:08,090
it's not actually a good term to use

00:22:04,760 --> 00:22:10,980
because it's misleading and I mean

00:22:08,090 --> 00:22:12,930
isomorphic not everyone especially in

00:22:10,980 --> 00:22:16,830
the JavaScript community did the

00:22:12,930 --> 00:22:22,350
computer science especially in

00:22:16,830 --> 00:22:25,080
JavaScript so they are you know some

00:22:22,350 --> 00:22:26,700
famous influential people that came up

00:22:25,080 --> 00:22:30,930
with a new term so you have Universal

00:22:26,700 --> 00:22:33,510
JavaScript which is misleading again but

00:22:30,930 --> 00:22:35,160
the one I like is charged yes you know

00:22:33,510 --> 00:22:39,570
because it's shared between the browser

00:22:35,160 --> 00:22:46,160
and server it just I mean it's clearer

00:22:39,570 --> 00:22:50,420
that way so I mean who was like what's

00:22:46,160 --> 00:22:53,310
isomorphic the first time they heard it

00:22:50,420 --> 00:22:57,710
yeah at least some people are honest I

00:22:53,310 --> 00:23:03,330
was as well um I mean shells yes it just

00:22:57,710 --> 00:23:07,590
makes more sense testing who's doing

00:23:03,330 --> 00:23:17,340
JavaScript testing not many people like

00:23:07,590 --> 00:23:19,940
three people yeah well yeah we don't do

00:23:17,340 --> 00:23:23,480
that in Drupal is okay

00:23:19,940 --> 00:23:27,159
and as I mean there's a few effort to

00:23:23,480 --> 00:23:30,110
make it happen but it's not there yet

00:23:27,159 --> 00:23:35,149
there's an issue open so that we are

00:23:30,110 --> 00:23:36,830
able to to test not do you need test of

00:23:35,149 --> 00:23:39,110
the JavaScript because it's not possible

00:23:36,830 --> 00:23:42,529
with the way our javascript is written

00:23:39,110 --> 00:23:44,330
but do functional tests so you know go

00:23:42,529 --> 00:23:48,649
on the node edit page upload an image

00:23:44,330 --> 00:23:52,970
and see if it works so that well will be

00:23:48,649 --> 00:23:55,309
possible hopefully soon maybe take her

00:23:52,970 --> 00:23:59,990
to Daniel about it he's just working on

00:23:55,309 --> 00:24:03,440
that I mean this has been several

00:23:59,990 --> 00:24:05,960
conversation several presentation at

00:24:03,440 --> 00:24:10,159
Drupal cons about front end testing and

00:24:05,960 --> 00:24:13,850
when not anywhere in report go yet so if

00:24:10,159 --> 00:24:16,460
you have you know anything to suggestion

00:24:13,850 --> 00:24:18,259
anything just let me know when hopefully

00:24:16,460 --> 00:24:24,440
we can get that in at some point in

00:24:18,259 --> 00:24:26,690
Drupal 8 maybe so I just said we contest

00:24:24,440 --> 00:24:29,990
you can't unit test to JavaScript now

00:24:26,690 --> 00:24:32,179
because of the way it's written and it's

00:24:29,990 --> 00:24:34,129
mainly because we put everything into

00:24:32,179 --> 00:24:36,980
one file so for example the vertical

00:24:34,129 --> 00:24:40,009
tabs there's a kind of a library

00:24:36,980 --> 00:24:43,669
component because there's a small API on

00:24:40,009 --> 00:24:45,590
how to manage the vertical tabs but

00:24:43,669 --> 00:24:49,340
there's also the initialization code

00:24:45,590 --> 00:24:51,440
within the same file so you know it's

00:24:49,340 --> 00:24:53,659
messy to load the file and try to unit

00:24:51,440 --> 00:24:56,750
test every method because you know the

00:24:53,659 --> 00:25:00,559
initialization runs as well and we have

00:24:56,750 --> 00:25:02,509
to you know mess around to prevent that

00:25:00,559 --> 00:25:04,940
from happening instead of having a

00:25:02,509 --> 00:25:08,470
proper library file and a proper

00:25:04,940 --> 00:25:13,190
initialization file but you know that's

00:25:08,470 --> 00:25:15,049
something we need to fix and right we

00:25:13,190 --> 00:25:18,159
factoring which is you know probably

00:25:15,049 --> 00:25:22,759
going to happen whenever Drupal 9

00:25:18,159 --> 00:25:24,559
happens so I don't know by that time we

00:25:22,759 --> 00:25:27,799
should be able to use the s6 on our

00:25:24,559 --> 00:25:31,879
browser because the race latest version

00:25:27,799 --> 00:25:33,230
of i is going to use I mean it's

00:25:31,879 --> 00:25:36,510
actually

00:25:33,230 --> 00:25:38,700
the best one to use es6 on right now

00:25:36,510 --> 00:25:44,160
because it has implemented the most

00:25:38,700 --> 00:25:45,540
features of the es6 specification so we

00:25:44,160 --> 00:25:47,190
should be able to use the exes have a

00:25:45,540 --> 00:25:50,310
proper module i have an example

00:25:47,190 --> 00:25:54,350
afterwards so proper modules some

00:25:50,310 --> 00:25:54,350
shortcuts of the language to make some

00:25:54,650 --> 00:26:02,670
constructs easier and you know just

00:25:59,630 --> 00:26:05,970
separating the library from the inside

00:26:02,670 --> 00:26:14,580
initialization which is basic but we

00:26:05,970 --> 00:26:16,800
didn't do it so now es 6 who who are you

00:26:14,580 --> 00:26:19,290
know the next version of JavaScript who

00:26:16,800 --> 00:26:21,750
heard about it but who know what this is

00:26:19,290 --> 00:26:27,650
about okay are you using it are you

00:26:21,750 --> 00:26:27,650
using it in production oh you know no

00:26:30,020 --> 00:26:38,280
too conservative so one really nice

00:26:34,650 --> 00:26:41,130
thing about es6 its template strings so

00:26:38,280 --> 00:26:44,730
it's a new kind of strain where you can

00:26:41,130 --> 00:26:48,210
replay stuff within the shrink from you

00:26:44,730 --> 00:26:50,600
know some variables that are in scope so

00:26:48,210 --> 00:26:54,030
the first line is just you know usual

00:26:50,600 --> 00:26:57,420
JavaScript scripts train nothing change

00:26:54,030 --> 00:27:00,900
the second one shows you that you can

00:26:57,420 --> 00:27:02,940
have you know new line within your

00:27:00,900 --> 00:27:07,710
string and it won't crash your

00:27:02,940 --> 00:27:12,840
JavaScript which is nice and the last

00:27:07,710 --> 00:27:15,060
one shows you that you can replace you

00:27:12,840 --> 00:27:18,480
know just placeholders with whatever the

00:27:15,060 --> 00:27:21,900
value of that variable is so whatever

00:27:18,480 --> 00:27:25,190
you have been in brackets oh I don't

00:27:21,900 --> 00:27:27,930
know curly brackets it's an expression

00:27:25,190 --> 00:27:30,120
so it doesn't need to be just a variable

00:27:27,930 --> 00:27:32,580
it could be a function call or something

00:27:30,120 --> 00:27:35,840
else and it's going to be replaced by

00:27:32,580 --> 00:27:39,600
the value of whatever is within those

00:27:35,840 --> 00:27:42,300
curly brackets so see the first one the

00:27:39,600 --> 00:27:43,200
name with that upper case and it shows

00:27:42,300 --> 00:27:50,669
up uppercase

00:27:43,200 --> 00:27:52,710
yeah easy I don't know how the drupal

00:27:50,669 --> 00:27:55,620
translation thing is going to work with

00:27:52,710 --> 00:27:58,529
that yet hopefully it will but I don't

00:27:55,620 --> 00:28:02,039
know for sure but you know it's out

00:27:58,529 --> 00:28:05,639
there possible to use whenever es6 is is

00:28:02,039 --> 00:28:08,250
around and if you use babbar GS you can

00:28:05,639 --> 00:28:11,070
use that and it will do all the messy

00:28:08,250 --> 00:28:17,210
work of making that work on all the

00:28:11,070 --> 00:28:21,480
browsers who heard about that already

00:28:17,210 --> 00:28:24,659
nice at least some new stuff for you es

00:28:21,480 --> 00:28:30,990
6 modules who's been using command GS

00:28:24,659 --> 00:28:35,549
AMD or the UMD definition whatever yeah

00:28:30,990 --> 00:28:42,779
some of you anyone tried to see the es6

00:28:35,549 --> 00:28:46,019
module spike no yeah quickly I mean it's

00:28:42,779 --> 00:28:48,389
very easy you just put Xbox in front of

00:28:46,019 --> 00:28:53,000
whatever you want to export and that's

00:28:48,389 --> 00:28:56,669
it I mean there are some more rules

00:28:53,000 --> 00:29:00,059
about how to export things but this is I

00:28:56,669 --> 00:29:02,610
mean the easiest way to do thing to do

00:29:00,059 --> 00:29:05,970
it and then within another file you

00:29:02,610 --> 00:29:08,519
import it so it's similar to python no I

00:29:05,970 --> 00:29:12,510
don't know most language on how to ample

00:29:08,519 --> 00:29:16,370
stuff so you can import all the exported

00:29:12,510 --> 00:29:20,639
function and variables into an object or

00:29:16,370 --> 00:29:24,389
just import specific function of the

00:29:20,639 --> 00:29:27,090
whole module I mean there are a few more

00:29:24,389 --> 00:29:31,380
rules as well but it's very flexible and

00:29:27,090 --> 00:29:36,269
that way you can keep your code fairly

00:29:31,380 --> 00:29:39,090
clean you know in in the sense of you

00:29:36,269 --> 00:29:41,330
don't have used as variables in your

00:29:39,090 --> 00:29:41,330
scope

00:29:44,549 --> 00:29:54,039
so promise who knows about promise are

00:29:51,909 --> 00:29:56,169
you using any version of promise like

00:29:54,039 --> 00:30:00,010
with Jack really or a polyfill or

00:29:56,169 --> 00:30:04,690
something yeah so it's nicer than ugly

00:30:00,010 --> 00:30:12,929
callbacks right oh no oh you're never

00:30:04,690 --> 00:30:12,929
happy so basically it's a way to make

00:30:12,990 --> 00:30:20,230
subsequent callbacks not messy I mean

00:30:17,830 --> 00:30:21,909
does more to it but what you would use

00:30:20,230 --> 00:30:26,830
it day to day is more like that so

00:30:21,909 --> 00:30:29,200
instead of having a very deep nesting of

00:30:26,830 --> 00:30:31,299
function because you wait on that girl

00:30:29,200 --> 00:30:34,870
back to finish to execute that one and

00:30:31,299 --> 00:30:41,620
and so on you can just change chain them

00:30:34,870 --> 00:30:44,169
at the same level with promise I mean

00:30:41,620 --> 00:30:46,120
that basically there's more to it again

00:30:44,169 --> 00:30:51,280
but we can talk about that if you have

00:30:46,120 --> 00:30:54,780
questions afterwards and now to slide

00:30:51,280 --> 00:30:54,780
the big question

00:30:59,179 --> 00:31:05,910
right yes yes so it is a new function

00:31:02,990 --> 00:31:08,190
syntax yeah definition I mean I left

00:31:05,910 --> 00:31:13,740
there because it was in there example

00:31:08,190 --> 00:31:18,330
but we can't really use it so because i

00:31:13,740 --> 00:31:26,280
ii and everything yeah just to make

00:31:18,330 --> 00:31:28,830
callbacks less verbose and so now I'm

00:31:26,280 --> 00:31:30,809
just going to slip into the risky note

00:31:28,830 --> 00:31:34,590
thing that we was talking about this

00:31:30,809 --> 00:31:38,490
morning about graph ql and you know

00:31:34,590 --> 00:31:41,370
aggregating color bikes into one request

00:31:38,490 --> 00:31:44,309
to get you know more data and not do a

00:31:41,370 --> 00:31:46,650
lot of things there's also WebSocket

00:31:44,309 --> 00:31:49,110
that you can use to do similar saying

00:31:46,650 --> 00:31:51,929
that the same but similar and it's

00:31:49,110 --> 00:31:54,540
basically just an open channel between

00:31:51,929 --> 00:31:57,870
the server on your browser and you can

00:31:54,540 --> 00:32:00,510
send that a tweet and get it without

00:31:57,870 --> 00:32:05,179
making new Ajax calls or that kind of

00:32:00,510 --> 00:32:07,980
stuff so who used WebSockets already

00:32:05,179 --> 00:32:13,530
right so you know about about how that

00:32:07,980 --> 00:32:19,710
works I mean yeah well we can talk about

00:32:13,530 --> 00:32:24,120
that after so this morning I was a bit

00:32:19,710 --> 00:32:29,549
surprised on the focus on the whole

00:32:24,120 --> 00:32:33,090
decoupled stuff of of dress and I mean

00:32:29,549 --> 00:32:37,140
the concept is nice but the way it's it

00:32:33,090 --> 00:32:40,080
applies to Drupal core is maybe I maybe

00:32:37,140 --> 00:32:43,290
not agree entirely with that for example

00:32:40,080 --> 00:32:46,950
take graph ql its piece of stuff

00:32:43,290 --> 00:32:48,840
software from facebook I mean it's just

00:32:46,950 --> 00:32:51,210
that right now Facebook is you know

00:32:48,840 --> 00:32:53,940
pushing out technology features that

00:32:51,210 --> 00:32:56,760
kind of stuff mainly because it makes em

00:32:53,940 --> 00:32:59,250
looks good and get them to hire people

00:32:56,760 --> 00:33:01,470
but once that you know stabilized and

00:32:59,250 --> 00:33:02,520
they get enough people but they're

00:33:01,470 --> 00:33:04,140
probably going to stop you know

00:33:02,520 --> 00:33:07,180
releasing software and that kind of

00:33:04,140 --> 00:33:11,080
stuff and then we are stuck with it

00:33:07,180 --> 00:33:15,480
I mean it's a great for country for

00:33:11,080 --> 00:33:15,480
example but i'm not sure but core and

00:33:15,720 --> 00:33:27,340
progressive decoupling so what you are

00:33:18,610 --> 00:33:31,990
right on that hmm yeah i don't remember

00:33:27,340 --> 00:33:36,760
sorry i'm sure you have lots of things

00:33:31,990 --> 00:33:38,320
to talk about so yeah and I mean one

00:33:36,760 --> 00:33:42,010
more thing about the graph ql and you

00:33:38,320 --> 00:33:44,740
know copyright technology is that with

00:33:42,010 --> 00:33:49,540
Drupal at least my girl personally is to

00:33:44,740 --> 00:33:52,090
use Drupal to leverage to to improve the

00:33:49,540 --> 00:33:55,690
standing of web stand out so to make web

00:33:52,090 --> 00:33:58,120
stand up actually used on website so

00:33:55,690 --> 00:34:00,880
that you know browser implementer can

00:33:58,120 --> 00:34:02,680
develop saying and say oh well they use

00:34:00,880 --> 00:34:05,260
it so we're going to continue improving

00:34:02,680 --> 00:34:11,680
our stuff and not rely on body feels all

00:34:05,260 --> 00:34:16,210
the time and so adding a specific format

00:34:11,680 --> 00:34:20,050
that is not yet standard and maybe but

00:34:16,210 --> 00:34:24,790
I'm not fond of it I'm not the only one

00:34:20,050 --> 00:34:26,970
contributing so it doesn't matter all

00:34:24,790 --> 00:34:30,850
right so anything you want to discuss

00:34:26,970 --> 00:34:34,420
about decoupled website the way we can

00:34:30,850 --> 00:34:37,930
make existing components of Drupal

00:34:34,420 --> 00:34:41,380
reusable on headless websites or you

00:34:37,930 --> 00:34:44,140
know whatever else Ivan you know if you

00:34:41,380 --> 00:34:48,370
have stories about how hard is it or

00:34:44,140 --> 00:34:55,110
easy to write the decoupled website feel

00:34:48,370 --> 00:34:55,110
free to participate no question yeah

00:34:57,410 --> 00:35:05,100
ok we have can you just go to the mic

00:35:01,230 --> 00:35:09,330
because it's recorded Thanks what do we

00:35:05,100 --> 00:35:13,140
have in Drupal 8 for the couple they had

00:35:09,330 --> 00:35:16,710
a catalyst roupen and when you have the

00:35:13,140 --> 00:35:20,430
whole rest api yeah but that's basically

00:35:16,710 --> 00:35:25,650
it that's all we have yeah I staybridge

00:35:20,430 --> 00:35:29,850
much I mean it's headless so yeah

00:35:25,650 --> 00:35:33,150
example 4 yes six either is there any

00:35:29,850 --> 00:35:34,500
plan for for implementing it or using it

00:35:33,150 --> 00:35:36,120
with Polly fields as you said before

00:35:34,500 --> 00:35:39,630
well you you are looking at the plan

00:35:36,120 --> 00:35:44,670
basically yeah notice well there's no

00:35:39,630 --> 00:35:47,910
plan because so right now we have not

00:35:44,670 --> 00:35:51,240
enough JavaScript contributors and too

00:35:47,910 --> 00:35:54,750
many stuff to fix things to fix and es6

00:35:51,240 --> 00:35:58,110
is not a high priority especially given

00:35:54,750 --> 00:36:01,920
the browser support and having Drupal

00:35:58,110 --> 00:36:05,160
rely on something like Babel is not

00:36:01,920 --> 00:36:07,850
really feasible because of all those you

00:36:05,160 --> 00:36:13,410
know PHP developer drag to complain

00:36:07,850 --> 00:36:17,940
requiring no GS to use Drupal they don't

00:36:13,410 --> 00:36:21,060
like it so unfortunately we don't have

00:36:17,940 --> 00:36:23,640
an easy way to to use the s6 right now

00:36:21,060 --> 00:36:26,690
but you know if you have ideas on how to

00:36:23,640 --> 00:36:31,550
improve the support in a call without

00:36:26,690 --> 00:36:31,550
having to rely on it I'm open to it

00:36:35,240 --> 00:36:38,830
oh wow that's cute you

00:36:46,650 --> 00:36:52,510
hi so how can we start refactoring all

00:36:50,440 --> 00:37:00,970
the JavaScript without having any days

00:36:52,510 --> 00:37:04,000
at all well that's a good question and

00:37:00,970 --> 00:37:07,750
you when you want to answer ok so how to

00:37:04,000 --> 00:37:09,910
refactor well first we need to get rid

00:37:07,750 --> 00:37:12,310
of the old stuff we have like for

00:37:09,910 --> 00:37:14,350
example the oldest script we have this

00:37:12,310 --> 00:37:17,470
diaper drag it's also one of the most

00:37:14,350 --> 00:37:21,490
complex and which is why it's the oldest

00:37:17,470 --> 00:37:26,890
so refactoring that in a way that's a

00:37:21,490 --> 00:37:31,420
bit more modern would help us start to

00:37:26,890 --> 00:37:34,150
move the other thing across but I mean

00:37:31,420 --> 00:37:36,220
the first step we could take is just

00:37:34,150 --> 00:37:38,800
separating out the library and

00:37:36,220 --> 00:37:42,550
initialization so if we have two files

00:37:38,800 --> 00:37:46,750
then we can do a bit more there are some

00:37:42,550 --> 00:37:50,190
component that still use the Drupal that

00:37:46,750 --> 00:37:53,560
behavior object to store some state or

00:37:50,190 --> 00:37:55,810
utility function and this should not be

00:37:53,560 --> 00:37:59,550
in the behavior object you should be in

00:37:55,810 --> 00:38:04,770
their own Drupal that whatever library

00:37:59,550 --> 00:38:07,480
object so they are like the machine name

00:38:04,770 --> 00:38:10,600
this still uses group old odd behavior

00:38:07,480 --> 00:38:12,760
for custom stuff it shouldn't so just

00:38:10,600 --> 00:38:15,070
removing that from the PA vioz

00:38:12,760 --> 00:38:16,920
separating the files is going to be a

00:38:15,070 --> 00:38:19,840
first step and then we can talk about

00:38:16,920 --> 00:38:23,380
making actual you know esc sort command

00:38:19,840 --> 00:38:28,150
GS modules out of them and do you think

00:38:23,380 --> 00:38:31,440
that would be accepted before a dot 0 so

00:38:28,150 --> 00:38:34,450
it's a dot one material on even later I

00:38:31,440 --> 00:38:37,510
mean because it's a lot of work and not

00:38:34,450 --> 00:38:39,940
enough people yeah thank you if it does

00:38:37,510 --> 00:38:46,390
like 20 people who won't work on it yeah

00:38:39,940 --> 00:38:50,370
we give it yeah well you just die at

00:38:46,390 --> 00:38:50,370
some point we don't see them anymore

00:38:53,170 --> 00:39:02,359
he's at the bootstrap question so you

00:39:00,800 --> 00:39:04,400
were talking about using like native

00:39:02,359 --> 00:39:07,579
JavaScript and my question I guess is

00:39:04,400 --> 00:39:10,220
are we going to stop prying so much on

00:39:07,579 --> 00:39:12,140
jQuery for instance and like for

00:39:10,220 --> 00:39:14,450
instance the attach and detach behaviors

00:39:12,140 --> 00:39:17,960
and stuff like that or are we going to

00:39:14,450 --> 00:39:21,410
implement something more custom using

00:39:17,960 --> 00:39:23,359
native stuff or that's a good question i

00:39:21,410 --> 00:39:28,579
like it because I don't put this right

00:39:23,359 --> 00:39:32,900
but I wanted to talk about that so the

00:39:28,579 --> 00:39:35,000
first step in that hole jquery story is

00:39:32,900 --> 00:39:38,690
first to identify whatever we were using

00:39:35,000 --> 00:39:41,690
and reducing what we use to what we

00:39:38,690 --> 00:39:46,250
actually need it so it went from using

00:39:41,690 --> 00:39:49,760
the dot click function ideas to using

00:39:46,250 --> 00:39:52,089
that on all over the place that way if

00:39:49,760 --> 00:39:55,310
we have to replace it it's much easier

00:39:52,089 --> 00:39:59,349
so that the first step then we need to

00:39:55,310 --> 00:40:01,760
identify the thing we abuse jquery for

00:39:59,349 --> 00:40:04,599
it's mostly done with are still some

00:40:01,760 --> 00:40:08,329
areas well we don't why we should

00:40:04,599 --> 00:40:10,550
shouldn't be using it and i've started

00:40:08,329 --> 00:40:14,660
working on a tool that analyze your

00:40:10,550 --> 00:40:17,119
javascript file and compile a specific

00:40:14,660 --> 00:40:21,859
jquery version with only the modules

00:40:17,119 --> 00:40:24,710
that you need from jQuery because maybe

00:40:21,859 --> 00:40:28,099
you don't know but for while I think

00:40:24,710 --> 00:40:31,579
it's jquery 1.8 you're able to build

00:40:28,099 --> 00:40:34,369
custom version of jQuery with specific

00:40:31,579 --> 00:40:37,160
modules from decorate for example if you

00:40:34,369 --> 00:40:39,380
don't use the Ajax functionality you get

00:40:37,160 --> 00:40:44,119
rid of all the Ajax code and get a

00:40:39,380 --> 00:40:48,200
smaller javascript file so the tool I

00:40:44,119 --> 00:40:51,450
worked on is jQuery so like a query that

00:40:48,200 --> 00:40:53,820
you know stone and everything

00:40:51,450 --> 00:40:55,980
to dig into you know what you use and

00:40:53,820 --> 00:40:58,320
build the custom smaller version of

00:40:55,980 --> 00:41:00,660
jQuery and what I'm hoping to do is to

00:40:58,320 --> 00:41:04,110
have Drupal run on the subset of

00:41:00,660 --> 00:41:12,060
daiquiri that's a bit smaller but he

00:41:04,110 --> 00:41:14,760
doesn't Ian goes whereas I saw but yeah

00:41:12,060 --> 00:41:19,250
we're not trying to go with depth or you

00:41:14,760 --> 00:41:19,250
know I don't achieve J great stuff oh

00:41:21,650 --> 00:41:24,980
the question

00:41:31,910 --> 00:41:44,150
I got all day so first of all I should

00:41:41,270 --> 00:41:46,309
mention I've never ever tried to

00:41:44,150 --> 00:41:50,240
implement nothing like you are

00:41:46,309 --> 00:41:52,930
describing but since since actually I'm

00:41:50,240 --> 00:41:56,650
more of a ten percent since these days

00:41:52,930 --> 00:42:01,220
the critical queue is all about

00:41:56,650 --> 00:42:04,130
finishing our safe markup stuff and so

00:42:01,220 --> 00:42:07,609
on I was wondering when you when you say

00:42:04,130 --> 00:42:10,849
that with what we have right now we are

00:42:07,609 --> 00:42:12,920
forced basically to reimplement all

00:42:10,849 --> 00:42:15,500
filtering and all escape and all

00:42:12,920 --> 00:42:19,539
sanitizing on the client side are you

00:42:15,500 --> 00:42:23,299
talking about encoding let's say passing

00:42:19,539 --> 00:42:27,069
include HTML markup into JSON data and

00:42:23,299 --> 00:42:29,829
then sticking it in the client and so

00:42:27,069 --> 00:42:34,339
these days we are talking about

00:42:29,829 --> 00:42:36,799
implementing alternative output

00:42:34,339 --> 00:42:38,990
strategies they are called and I think

00:42:36,799 --> 00:42:41,059
they are very similar to what we've

00:42:38,990 --> 00:42:44,299
already does people in fact probably we

00:42:41,059 --> 00:42:47,240
will end up trying to borrow from that

00:42:44,299 --> 00:42:52,900
as much as possible anyway and the idea

00:42:47,240 --> 00:42:56,000
is that can we try to find a dedicated

00:42:52,900 --> 00:43:00,140
strategies so that we already have a way

00:42:56,000 --> 00:43:02,539
to have markup that's encoded into JSON

00:43:00,140 --> 00:43:05,720
that are already sanitized in a way that

00:43:02,539 --> 00:43:08,329
makes sense or it would be it would

00:43:05,720 --> 00:43:10,359
depend on context even on the client

00:43:08,329 --> 00:43:17,029
side so there's no one-size-fits-all

00:43:10,359 --> 00:43:19,279
solution for that I think it ties into

00:43:17,029 --> 00:43:22,579
the craft where stuff from this morning

00:43:19,279 --> 00:43:25,579
because so with the rest api when you

00:43:22,579 --> 00:43:28,460
wear your node you get you know all all

00:43:25,579 --> 00:43:30,319
the attributes for your note and you

00:43:28,460 --> 00:43:34,520
know half of it you don't use and that

00:43:30,319 --> 00:43:36,010
does body text in its raw data so maybe

00:43:34,520 --> 00:43:40,740
we could have

00:43:36,010 --> 00:43:45,070
the rest module I give you sanitized

00:43:40,740 --> 00:43:47,800
HTML we're depending on your format text

00:43:45,070 --> 00:43:49,660
format but then you still have all the

00:43:47,800 --> 00:43:52,500
other stuff on your note that you don't

00:43:49,660 --> 00:43:54,940
use and something like we have ql good

00:43:52,500 --> 00:43:56,800
you know just give you the stuff you

00:43:54,940 --> 00:44:04,630
need and escape it and make sure it's

00:43:56,800 --> 00:44:12,280
escaped I don't know it's possible back

00:44:04,630 --> 00:44:15,430
from other television we've been

00:44:12,280 --> 00:44:18,160
discussing something like display modes

00:44:15,430 --> 00:44:21,370
for rest so where you can just select

00:44:18,160 --> 00:44:22,810
the fields that want to show when you

00:44:21,370 --> 00:44:26,980
leave the wrecks the request there you

00:44:22,810 --> 00:44:28,750
go that would solve it we actually

00:44:26,980 --> 00:44:31,530
discussed much of this when designing

00:44:28,750 --> 00:44:34,930
the rest module in the first place and

00:44:31,530 --> 00:44:38,470
largely what it came down to is we could

00:44:34,930 --> 00:44:42,340
escape data but escape it how even

00:44:38,470 --> 00:44:43,900
within HTML the escaping for something

00:44:42,340 --> 00:44:45,160
that's going to appear between tags or

00:44:43,900 --> 00:44:47,650
something that's going to appear in an

00:44:45,160 --> 00:44:49,450
attribute is very different and if you

00:44:47,650 --> 00:44:52,330
get it wrong its use the wrong one

00:44:49,450 --> 00:44:55,810
that's another security hole so you know

00:44:52,330 --> 00:44:58,960
our basic in a sense we decided to punt

00:44:55,810 --> 00:45:00,430
because we couldn't come up with a way

00:44:58,960 --> 00:45:04,470
to reliably do that that would work for

00:45:00,430 --> 00:45:06,730
all receiving clients you can do that

00:45:04,470 --> 00:45:08,470
for a specific site you you know the way

00:45:06,730 --> 00:45:11,920
Drupal is set up rest module is there as

00:45:08,470 --> 00:45:14,560
almost a demo module so if you have a

00:45:11,920 --> 00:45:16,810
specific site where you know you know

00:45:14,560 --> 00:45:18,970
I'm going to want you know this node

00:45:16,810 --> 00:45:20,530
render this way all the time for this

00:45:18,970 --> 00:45:22,780
use case you can do that with your own

00:45:20,530 --> 00:45:24,400
custom format your own custom routes all

00:45:22,780 --> 00:45:26,410
the capability through that is there but

00:45:24,400 --> 00:45:29,140
then you know your context whereas

00:45:26,410 --> 00:45:30,880
Drupal can't know all the contexts it

00:45:29,140 --> 00:45:32,830
might need that's actually something

00:45:30,880 --> 00:45:37,030
we're running into with all the render

00:45:32,830 --> 00:45:38,980
API work that pretty much making every

00:45:37,030 --> 00:45:41,200
time you make an assumption about the

00:45:38,980 --> 00:45:44,059
context something's going to be escaped

00:45:41,200 --> 00:45:46,309
for your wrong unless you are

00:45:44,059 --> 00:45:50,239
in that context already you're going to

00:45:46,309 --> 00:45:53,479
be wrong yeah it thinks a practical

00:45:50,239 --> 00:45:55,009
matter a generic pre escaped output is

00:45:53,479 --> 00:45:57,079
just not going to be viable a

00:45:55,009 --> 00:45:59,449
site-specific pre escaped output that

00:45:57,079 --> 00:46:02,209
you custom code totally doable go for it

00:45:59,449 --> 00:46:04,999
but a generic one I just don't think is

00:46:02,209 --> 00:46:11,199
going to be secure enough and stable

00:46:04,999 --> 00:46:14,119
enough to really work and yes I like the

00:46:11,199 --> 00:46:15,890
view modes idea for reducing the amount

00:46:14,119 --> 00:46:19,130
of data you sent that is good and we

00:46:15,890 --> 00:46:20,420
also the moment yeah a little bit the

00:46:19,130 --> 00:46:22,130
format again you have then you actually

00:46:20,420 --> 00:46:25,579
have to render the format let's and

00:46:22,130 --> 00:46:27,949
that's part of the problem but selecting

00:46:25,579 --> 00:46:29,869
the selectmen fields we didn't do that

00:46:27,949 --> 00:46:33,529
in rest module again mostly for saving

00:46:29,869 --> 00:46:35,930
time and to keep it simple but I fully

00:46:33,529 --> 00:46:39,459
support a you know the option for

00:46:35,930 --> 00:46:39,459
restful view modes

00:46:49,020 --> 00:46:54,849
are there any plans or on the contrary

00:46:52,359 --> 00:46:59,020
any strong objection about introducing

00:46:54,849 --> 00:47:04,890
more event-based things like even here

00:46:59,020 --> 00:47:07,990
meters and listeners I'm so even dealer

00:47:04,890 --> 00:47:12,490
like what forgetting JavaScript aren t

00:47:07,990 --> 00:47:14,470
meters and listeners in the way we have

00:47:12,490 --> 00:47:16,599
well attached behaviors and things like

00:47:14,470 --> 00:47:20,619
that that could be another way and it

00:47:16,599 --> 00:47:25,810
dies well with no GS and so it's worth

00:47:20,619 --> 00:47:29,950
avoiding sorry call back he'll clean so

00:47:25,810 --> 00:47:32,440
I mean we do have a few events but

00:47:29,950 --> 00:47:35,020
they're mostly for some UI stuff like

00:47:32,440 --> 00:47:38,859
for example if you open the toolbar you

00:47:35,020 --> 00:47:41,740
the space available to display the

00:47:38,859 --> 00:47:43,690
website changes so we trigger an event

00:47:41,740 --> 00:47:46,180
let's say if you do something with

00:47:43,690 --> 00:47:47,619
positioning you need to you know check

00:47:46,180 --> 00:47:49,900
that it's still at the right position

00:47:47,619 --> 00:47:56,170
that the kind of event we have but we

00:47:49,900 --> 00:47:57,670
don't have no more involved events you

00:47:56,170 --> 00:48:00,070
know if you same says you should save

00:47:57,670 --> 00:48:02,619
something there's no dedicated event for

00:48:00,070 --> 00:48:04,500
example or was that which we are talking

00:48:02,619 --> 00:48:08,589
about them all as if there was plan to

00:48:04,500 --> 00:48:11,530
move toward more than naturally well in

00:48:08,589 --> 00:48:13,630
the case of behaviors we can't really

00:48:11,530 --> 00:48:16,270
move to events because we need to be

00:48:13,630 --> 00:48:19,210
able to order them I mean it's not in

00:48:16,270 --> 00:48:22,180
yet desert patch waiting for a while in

00:48:19,210 --> 00:48:24,190
the queue to be able to choose which

00:48:22,180 --> 00:48:27,970
behavior what you want to run and in

00:48:24,190 --> 00:48:33,550
which order so any anybody used the

00:48:27,970 --> 00:48:37,839
Drupal behavior wait but you know it

00:48:33,550 --> 00:48:39,670
doesn't matter because yeah I mean

00:48:37,839 --> 00:48:44,040
typically that's to get rid of that

00:48:39,670 --> 00:48:46,900
module so you able to choose more

00:48:44,040 --> 00:48:48,849
specifically what you want to run but

00:48:46,900 --> 00:48:53,640
yeah PS you're not going to be events

00:48:48,849 --> 00:48:53,640
and more events it's not planned yet

00:48:57,910 --> 00:49:07,520
yeah so I just wanted to share this you

00:49:04,940 --> 00:49:10,280
know architecture diagram because that's

00:49:07,520 --> 00:49:13,940
a good way to actually use you know

00:49:10,280 --> 00:49:18,410
decoupled drupal if you just have drupal

00:49:13,940 --> 00:49:20,599
and then your angular react app i don't

00:49:18,410 --> 00:49:25,310
think it's a good you know use of your

00:49:20,599 --> 00:49:27,319
time to develop that you should have you

00:49:25,310 --> 00:49:29,480
know some component between your drupal

00:49:27,319 --> 00:49:31,940
and your front-end that does more stuff

00:49:29,480 --> 00:49:34,550
and you know aggregates data from

00:49:31,940 --> 00:49:37,460
somewhere else or just aggregates data

00:49:34,550 --> 00:49:40,910
from the drupal in a different way I

00:49:37,460 --> 00:49:43,300
mean that's a good way to use angular

00:49:40,910 --> 00:49:49,069
and you know the whole decoupled stuff

00:49:43,300 --> 00:49:51,680
but if it's just drupal and angular not

00:49:49,069 --> 00:49:53,990
worth it especially in the eighth now

00:49:51,680 --> 00:49:57,260
that the whole seeming experience is

00:49:53,990 --> 00:50:04,819
much much nicer don't have to fight a

00:49:57,260 --> 00:50:08,140
crazy person any more questions I guess

00:50:04,819 --> 00:50:08,140
we're done thank

00:50:28,339 --> 00:50:31,869
good and you

00:50:45,849 --> 00:50:58,700
very same idea or something yeah because

00:50:49,190 --> 00:51:06,520
you was there is a really good guys it

00:50:58,700 --> 00:51:06,520
was marked you tonight for some beers

00:51:11,690 --> 00:51:13,720
Oh

00:51:18,210 --> 00:51:27,910
one of those things to you I mean we go

00:51:21,609 --> 00:51:30,690
to no documentation no notes it

00:51:27,910 --> 00:51:30,690
seriously thank you

00:51:34,339 --> 00:51:42,439
well fixing bugs no it's separating all

00:51:39,269 --> 00:51:42,439
the stuff from behavior

00:51:49,640 --> 00:51:58,430
yes so basically great same time I got

00:51:54,710 --> 00:51:58,430
into the library

00:52:12,250 --> 00:52:23,290
I'm a bit less I mean I'm not a fan of

00:52:17,780 --> 00:52:23,290
the whole like taking part

00:52:57,650 --> 00:52:59,650
I

00:54:29,670 --> 00:54:33,750
the smallest position

00:54:43,240 --> 00:54:46,950
so i guess i should like

00:55:22,420 --> 00:55:25,230
he did

00:56:20,080 --> 00:56:22,650
our

00:56:27,010 --> 00:56:29,430

YouTube URL: https://www.youtube.com/watch?v=9KYzOtAiuqY


