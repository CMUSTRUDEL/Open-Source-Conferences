Title: DrupalCon Barcelona 2015: Solving Drupal Performance and Scalability Issues
Publication date: 2015-09-22
Playlist: DrupalCon Barcelona - September 2015
Description: 
	We often talk about Drupal Performance in relation to setting up Varnish, Boost, writing VCL files - I am not going to tell you any of this.
What we rarely talk about is what to do when performance issues are already there.

Often we end up making random guesses at what the issue might be or try to just "optimise all-the-things" which can be a never-ending (costly) task.
To solve performance issues we need to know what is actually happening, so we can choose to apply effort where it makes a difference.
Here I will share a data based approach for identifying and solving performance issues, along with tips on the low hanging fruit we so often miss, common pitfalls and best practices.

This session is for anyone that ever had a page on their site load slowly, outages due to performance issues or a site that needed mountains of hardware to run at all.
Captions: 
	00:00:00,000 --> 00:00:05,009
all right I think I'll get started so

00:00:02,750 --> 00:00:06,839
thank you all for being here I know

00:00:05,009 --> 00:00:08,700
you're probably or hopefully hungover

00:00:06,839 --> 00:00:10,710
and have been listening to people all

00:00:08,700 --> 00:00:14,460
day and your head so getting really

00:00:10,710 --> 00:00:18,750
heavy I hope yeah I won't bore you to

00:00:14,460 --> 00:00:21,449
death but great to see ya my name is

00:00:18,750 --> 00:00:24,210
Tina Sorenson I went as a solution

00:00:21,449 --> 00:00:28,730
architect with FF W which is a really

00:00:24,210 --> 00:00:32,430
big global duple shop with 450 people

00:00:28,730 --> 00:00:34,860
I've been an IT since 99 slide out as a

00:00:32,430 --> 00:00:36,750
sysadmin and I've been doing a lot of

00:00:34,860 --> 00:00:40,410
development also over the years or

00:00:36,750 --> 00:00:43,020
mainly that that was back when we sold

00:00:40,410 --> 00:00:46,370
email addresses for like several hundred

00:00:43,020 --> 00:00:49,890
dollars am Prince Simon and VI by hand

00:00:46,370 --> 00:00:54,390
I've been working with Drupal since 2008

00:00:49,890 --> 00:00:56,520
mainly as a developer and I performance

00:00:54,390 --> 00:00:58,500
and scalability is my special interest

00:00:56,520 --> 00:01:00,629
area I usually say that I like big

00:00:58,500 --> 00:01:04,979
broken stuff I've got a colleague back

00:01:00,629 --> 00:01:07,290
home that says all of him so but I used

00:01:04,979 --> 00:01:10,520
to work for Acquia also before i went to

00:01:07,290 --> 00:01:14,760
fw i used to live in brisbane australia

00:01:10,520 --> 00:01:16,470
and i got to work on when you'll that

00:01:14,760 --> 00:01:18,420
they have really big customers hosted

00:01:16,470 --> 00:01:20,189
there and i got to work on some really

00:01:18,420 --> 00:01:22,640
really big broken stuff there and learn

00:01:20,189 --> 00:01:25,460
from a lot of people so that's been fun

00:01:22,640 --> 00:01:29,820
so anybody here from Asia Pacific

00:01:25,460 --> 00:01:33,030
hopefully not there's one two three

00:01:29,820 --> 00:01:34,829
couple well I did this talk like four

00:01:33,030 --> 00:01:37,590
times down and on the other side of the

00:01:34,829 --> 00:01:38,759
world so if you were there then it's

00:01:37,590 --> 00:01:43,530
pretty much the same stuff all over

00:01:38,759 --> 00:01:47,189
again almost so can I ask how many

00:01:43,530 --> 00:01:50,909
developers are here in the room woman oh

00:01:47,189 --> 00:01:52,979
wow that's great and how many have built

00:01:50,909 --> 00:01:57,329
the Drupal site are done something

00:01:52,979 --> 00:01:59,640
configuration is great so it's just so I

00:01:57,329 --> 00:02:01,670
don't get if I start talking business

00:01:59,640 --> 00:02:05,820
and you guys are going to leave me so

00:02:01,670 --> 00:02:07,710
that's great so what I'm not going to

00:02:05,820 --> 00:02:09,840
tell you about I'm not going to tell you

00:02:07,710 --> 00:02:12,810
very much about server setup or vine age

00:02:09,840 --> 00:02:13,580
vcl writing that's what a lot of

00:02:12,810 --> 00:02:15,650
performance

00:02:13,580 --> 00:02:17,960
about and that's also a lot of other

00:02:15,650 --> 00:02:21,710
people are very good at that better than

00:02:17,960 --> 00:02:24,010
I am I usually my main interest is when

00:02:21,710 --> 00:02:28,400
stuff is already broken what to do then

00:02:24,010 --> 00:02:29,780
I guess being developers almost every

00:02:28,400 --> 00:02:32,960
one of you would have had a site that

00:02:29,780 --> 00:02:36,020
had pto just take like you can make

00:02:32,960 --> 00:02:39,020
dinner before the page load or you need

00:02:36,020 --> 00:02:41,870
like service service the size of ebay to

00:02:39,020 --> 00:02:43,430
even make the site run things like that

00:02:41,870 --> 00:02:46,160
that's what I find interesting and

00:02:43,430 --> 00:02:47,720
that's what i think is an area we need

00:02:46,160 --> 00:02:50,870
to get a lot better after because Drupal

00:02:47,720 --> 00:02:53,270
is getting bigger and be able to solve

00:02:50,870 --> 00:02:56,780
those issues so that's what I'm going to

00:02:53,270 --> 00:02:59,570
talk about tonight I'm not the best

00:02:56,780 --> 00:03:01,400
front-end person either I'm not very

00:02:59,570 --> 00:03:03,230
good at making stuff pretty I know a

00:03:01,400 --> 00:03:05,300
little bit about funding performance but

00:03:03,230 --> 00:03:09,050
not enough so but it's mainly going to

00:03:05,300 --> 00:03:11,810
be about application layer doable is

00:03:09,050 --> 00:03:13,370
evolving its we all consider it

00:03:11,810 --> 00:03:15,560
enterprise ready and have done for years

00:03:13,370 --> 00:03:17,390
now i think the sites are getting larger

00:03:15,560 --> 00:03:19,640
we it's delivered as

00:03:17,390 --> 00:03:22,640
software-as-a-service often i've been a

00:03:19,640 --> 00:03:24,950
part of building a huge lms platform

00:03:22,640 --> 00:03:26,630
online learning management system with

00:03:24,950 --> 00:03:28,370
only logged in users we use it as a

00:03:26,630 --> 00:03:31,400
framework the complexity is getting

00:03:28,370 --> 00:03:33,019
massive so this is a whole new area

00:03:31,400 --> 00:03:36,860
that's getting bigger and bigger and

00:03:33,019 --> 00:03:39,410
people run into one more fun problems so

00:03:36,860 --> 00:03:42,590
we can't be experts at everything we

00:03:39,410 --> 00:03:45,170
have in interest within Drupal we have

00:03:42,590 --> 00:03:48,050
operations guys we have dev ops teams we

00:03:45,170 --> 00:03:49,459
have developers the most designers and I

00:03:48,050 --> 00:03:51,590
hope someday it's also going to be more

00:03:49,459 --> 00:03:55,070
you know common to have a performance

00:03:51,590 --> 00:03:57,500
dude or gal but I think it's very much

00:03:55,070 --> 00:03:59,900
an area of its own sometimes when I've

00:03:57,500 --> 00:04:03,470
been around the world or what with teams

00:03:59,900 --> 00:04:06,410
developer teams and business owners then

00:04:03,470 --> 00:04:09,920
I might have done like a performance

00:04:06,410 --> 00:04:12,110
review for site and the customer will

00:04:09,920 --> 00:04:13,730
think so what we paid this developer

00:04:12,110 --> 00:04:15,950
team to build this I and now you come

00:04:13,730 --> 00:04:17,450
and do a performance audit for the site

00:04:15,950 --> 00:04:19,370
and you come up with like a list that's

00:04:17,450 --> 00:04:21,470
two pages long of things that needs

00:04:19,370 --> 00:04:24,380
fixing so didn't they do that job

00:04:21,470 --> 00:04:26,060
properly or not and I think I think

00:04:24,380 --> 00:04:26,510
that's very very wrong way of looking at

00:04:26,060 --> 00:04:28,910
it

00:04:26,510 --> 00:04:30,740
it's a very different focus being a

00:04:28,910 --> 00:04:32,870
developer and looking at something just

00:04:30,740 --> 00:04:34,520
for performance reasons when your

00:04:32,870 --> 00:04:36,260
developer you have focused on things

00:04:34,520 --> 00:04:37,670
like business requirements and deadlines

00:04:36,260 --> 00:04:39,560
that were yesterday and just doesn't

00:04:37,670 --> 00:04:41,720
match the time that you really want or

00:04:39,560 --> 00:04:42,980
need to do things right when you look at

00:04:41,720 --> 00:04:44,780
performance you don't really care about

00:04:42,980 --> 00:04:46,130
all that stuff you just go in then make

00:04:44,780 --> 00:04:49,340
sure about how long does it take how

00:04:46,130 --> 00:04:52,250
many resources does it take and it's a

00:04:49,340 --> 00:04:54,830
total different focus I even took some

00:04:52,250 --> 00:04:57,650
of my own coat a month later and cut

00:04:54,830 --> 00:04:58,730
like nine seconds off a feed import just

00:04:57,650 --> 00:05:01,460
looking at it from a performance

00:04:58,730 --> 00:05:03,280
perspective instead of a developer so I

00:05:01,460 --> 00:05:05,660
think it's two very different areas and

00:05:03,280 --> 00:05:07,700
you can do the best work when you do

00:05:05,660 --> 00:05:10,330
performance work if you have a developer

00:05:07,700 --> 00:05:12,800
team to collaborate with because it's

00:05:10,330 --> 00:05:14,240
like when you look at things from a

00:05:12,800 --> 00:05:16,370
performance perspective it's so easy to

00:05:14,240 --> 00:05:18,740
sit there and be like oh but why did

00:05:16,370 --> 00:05:21,110
they do that that's silly but it's not

00:05:18,740 --> 00:05:22,850
almost always the thing that looks silly

00:05:21,110 --> 00:05:25,490
it has a reason it's there for a reason

00:05:22,850 --> 00:05:27,350
it happened in some context even if it's

00:05:25,490 --> 00:05:29,390
turning off caching then it's most

00:05:27,350 --> 00:05:31,400
likely because somebody it created a

00:05:29,390 --> 00:05:33,140
problem that caching was there something

00:05:31,400 --> 00:05:39,920
was getting shown wrong at the wrong

00:05:33,140 --> 00:05:42,020
time so solving performance issues a lot

00:05:39,920 --> 00:05:44,510
of the time at least what I did before I

00:05:42,020 --> 00:05:46,970
cited getting more interested in this

00:05:44,510 --> 00:05:48,890
area in particular was that I opened up

00:05:46,970 --> 00:05:50,900
google and then i typed in google

00:05:48,890 --> 00:05:52,490
performance and then i would find like

00:05:50,900 --> 00:05:55,010
three or four pages that would give me a

00:05:52,490 --> 00:05:56,720
list of 20 items and that I then started

00:05:55,010 --> 00:06:00,110
implementing and that would be anything

00:05:56,720 --> 00:06:03,530
from enabling boost to looking at views

00:06:00,110 --> 00:06:05,660
caching or at advanced aggregator module

00:06:03,530 --> 00:06:07,070
for CSS or whatever I had no idea what I

00:06:05,660 --> 00:06:09,580
was doing or whether i was actually

00:06:07,070 --> 00:06:12,500
addressing a problem that I had or not

00:06:09,580 --> 00:06:14,780
but I just did this stuff because how to

00:06:12,500 --> 00:06:19,030
find out what's actually happening in

00:06:14,780 --> 00:06:22,880
the application that i felt myself so

00:06:19,030 --> 00:06:25,310
what I yeah what I've learned over time

00:06:22,880 --> 00:06:27,650
is that data is the data is really

00:06:25,310 --> 00:06:31,340
what's valuable here the thing was just

00:06:27,650 --> 00:06:33,290
starting to optimize from one end to the

00:06:31,340 --> 00:06:35,840
other is obviously not going to help us

00:06:33,290 --> 00:06:37,160
fits you know we be just as lucky lucky

00:06:35,840 --> 00:06:39,470
winning the lottery of solving the

00:06:37,160 --> 00:06:41,780
actual issue we might hit something that

00:06:39,470 --> 00:06:44,360
of course so well we're all lucky

00:06:41,780 --> 00:06:45,650
sometimes but to find out what's

00:06:44,360 --> 00:06:47,540
actually happening what's actually

00:06:45,650 --> 00:06:49,400
causing the issue that gives us the

00:06:47,540 --> 00:06:52,550
visibility needed to actually solve it

00:06:49,400 --> 00:06:55,400
it also gives us and whoever is paying

00:06:52,550 --> 00:06:57,950
for our time often somebody is the

00:06:55,400 --> 00:07:00,080
freedom to choose from which fixes to

00:06:57,950 --> 00:07:02,870
implement if you can figure out what's

00:07:00,080 --> 00:07:05,510
happening there might be 10 issues some

00:07:02,870 --> 00:07:07,580
of them are a lot of effort and might

00:07:05,510 --> 00:07:09,050
not make a lot of difference then it

00:07:07,580 --> 00:07:11,180
gives them the freedom to choose whether

00:07:09,050 --> 00:07:17,420
they want that implemented as well as or

00:07:11,180 --> 00:07:21,140
not the annal the analyzed part is it

00:07:17,420 --> 00:07:22,880
sounds like you have to be like been

00:07:21,140 --> 00:07:25,070
doing drupal for 10 years and order to

00:07:22,880 --> 00:07:28,220
analyze data for what's happening you

00:07:25,070 --> 00:07:30,200
really don't so I I'll show you a couple

00:07:28,220 --> 00:07:32,390
of screenshots later but most of it if

00:07:30,200 --> 00:07:34,550
you've built just a little bit with

00:07:32,390 --> 00:07:36,230
Drupal a lot of stuff you can figure out

00:07:34,550 --> 00:07:38,090
it's just your normal doable knowledge

00:07:36,230 --> 00:07:42,710
of what looks odd but shouldn't be like

00:07:38,090 --> 00:07:44,930
that then there's the ability to be able

00:07:42,710 --> 00:07:47,419
to choose where to apply effort based on

00:07:44,930 --> 00:07:49,250
facts very often you'll find a lot of

00:07:47,419 --> 00:07:50,540
low-hanging fruit I love those that

00:07:49,250 --> 00:07:52,190
stuff that you can do really quickly

00:07:50,540 --> 00:07:53,930
that's really going to make a change I'm

00:07:52,190 --> 00:07:57,080
going to show you some examples of that

00:07:53,930 --> 00:07:58,850
and that's what I usually do prioritize

00:07:57,080 --> 00:08:00,500
low-hanging food and then whatever will

00:07:58,850 --> 00:08:02,360
give me the biggest payoff but sometimes

00:08:00,500 --> 00:08:05,060
those are too expensive in the real

00:08:02,360 --> 00:08:06,560
world of course and then when you've

00:08:05,060 --> 00:08:08,390
done something you need to start over

00:08:06,560 --> 00:08:10,370
again because every time you make some

00:08:08,390 --> 00:08:12,890
changes then the world is going to look

00:08:10,370 --> 00:08:14,630
differently if you had a site where

00:08:12,890 --> 00:08:16,100
there was no caching enabled then

00:08:14,630 --> 00:08:17,780
obviously everything that you were

00:08:16,100 --> 00:08:19,430
looking at all the data showing up would

00:08:17,780 --> 00:08:21,860
show you that there's no caching enabled

00:08:19,430 --> 00:08:24,590
and the next issues you can't really see

00:08:21,860 --> 00:08:29,540
in in statistics and neroli etc and so

00:08:24,590 --> 00:08:31,880
you've removed that one so what I often

00:08:29,540 --> 00:08:34,729
see when I've worked with teams and also

00:08:31,880 --> 00:08:36,589
what I used to do myself is that I used

00:08:34,729 --> 00:08:38,630
to start fiddling with the part of the

00:08:36,589 --> 00:08:41,030
application that i felt least secure

00:08:38,630 --> 00:08:42,589
about so it would maybe be that feed

00:08:41,030 --> 00:08:44,320
that we implemented last year that was

00:08:42,589 --> 00:08:49,180
really buggy oh we did really quickly

00:08:44,320 --> 00:08:49,180
and then I'd start just working on that

00:08:51,329 --> 00:08:56,649
sometimes it's like if the low-hanging

00:08:54,459 --> 00:08:58,839
fruit can be a surprisingly high cell

00:08:56,649 --> 00:09:02,440
when I work with developer teams it's

00:08:58,839 --> 00:09:04,870
like as a developer we real of code that

00:09:02,440 --> 00:09:08,079
the whole thing with oh but you just

00:09:04,870 --> 00:09:10,089
need to switch td2 imagemagick that can

00:09:08,079 --> 00:09:13,300
take like months to sell to a developer

00:09:10,089 --> 00:09:15,250
team it's it's so funny and you can

00:09:13,300 --> 00:09:17,380
sometimes that means you can have the

00:09:15,250 --> 00:09:19,389
PHP memory it's just from doing that but

00:09:17,380 --> 00:09:21,220
it takes less than an hour and it's like

00:09:19,389 --> 00:09:23,500
a configuration it's a click it's not

00:09:21,220 --> 00:09:25,060
cold if I go out to a developer team and

00:09:23,500 --> 00:09:26,709
sell them that oh but you need to

00:09:25,060 --> 00:09:28,920
rewrite the entire caching layer that

00:09:26,709 --> 00:09:31,660
going to be on it like right now so

00:09:28,920 --> 00:09:35,829
usually not everyone but very often it's

00:09:31,660 --> 00:09:37,509
like that so there's nothing wrong with

00:09:35,829 --> 00:09:40,690
that you know we do this job for a

00:09:37,509 --> 00:09:42,459
reason so but it's really it there

00:09:40,690 --> 00:09:45,300
really is a lot of good low-hanging

00:09:42,459 --> 00:09:48,220
fruit often when we went with this

00:09:45,300 --> 00:09:50,829
that's my P Vees that's about collecting

00:09:48,220 --> 00:09:53,170
the data so that we know what we're

00:09:50,829 --> 00:09:55,209
doing not just guessing at whatever part

00:09:53,170 --> 00:09:56,829
of the application we don't like solve

00:09:55,209 --> 00:09:58,569
it from the application not just by

00:09:56,829 --> 00:10:01,180
buying hide wire or something like that

00:09:58,569 --> 00:10:03,550
and then the penny wise but dulla stupid

00:10:01,180 --> 00:10:05,380
that's what I usually I've tried to say

00:10:03,550 --> 00:10:07,510
in a nice way sometimes to develop it

00:10:05,380 --> 00:10:08,980
seems that we're going to start

00:10:07,510 --> 00:10:10,600
rewriting the entire memcache

00:10:08,980 --> 00:10:13,329
integration that might give them like a

00:10:10,600 --> 00:10:15,459
one percent improvement in two months

00:10:13,329 --> 00:10:17,560
when they had finished that and all the

00:10:15,459 --> 00:10:24,120
complications it would take with it but

00:10:17,560 --> 00:10:28,029
wouldn't switch imagemagick and GD so I

00:10:24,120 --> 00:10:30,339
almost got see this one this is New

00:10:28,029 --> 00:10:34,360
Relic anybody any one of you guys white

00:10:30,339 --> 00:10:35,860
with New Relic a lot of you do so I Love

00:10:34,360 --> 00:10:37,750
New Relic when I do performance work

00:10:35,860 --> 00:10:40,949
this is where i spend like eighty

00:10:37,750 --> 00:10:43,480
percent of my time I think it's no I

00:10:40,949 --> 00:10:45,760
like being geeky just as much as the

00:10:43,480 --> 00:10:47,290
next guy a girl but and I could sit

00:10:45,760 --> 00:10:49,089
there with a excited profit it would

00:10:47,290 --> 00:10:52,180
take me a long time to get an overview

00:10:49,089 --> 00:10:55,990
of every page on the side of page type

00:10:52,180 --> 00:10:57,790
but it's like norelli gives you it sort

00:10:55,990 --> 00:10:59,800
of combines a lot of different tools

00:10:57,790 --> 00:11:02,570
that you do use when you do performance

00:10:59,800 --> 00:11:03,830
into something with really pretty graphs

00:11:02,570 --> 00:11:05,660
love really pretty graphs and they

00:11:03,830 --> 00:11:08,300
communicate so well to whoever whoever's

00:11:05,660 --> 00:11:12,350
in charge of the project and has the

00:11:08,300 --> 00:11:15,590
decision power so even if you don't know

00:11:12,350 --> 00:11:17,480
New Relic then it's there's a lot of

00:11:15,590 --> 00:11:20,120
functionality in there but what you

00:11:17,480 --> 00:11:22,460
really only need or the main part that

00:11:20,120 --> 00:11:24,500
can set you verify to know is simply to

00:11:22,460 --> 00:11:27,110
look at the application and look at

00:11:24,500 --> 00:11:29,300
transactions at I don't know how well

00:11:27,110 --> 00:11:31,430
you can see this slide but in the left

00:11:29,300 --> 00:11:33,830
pay in the left side if you open up new

00:11:31,430 --> 00:11:37,330
relic that's enough for anybody who

00:11:33,830 --> 00:11:37,330
doesn't know your leg is an application

00:11:37,600 --> 00:11:43,820
performance mounted monitoring tool so

00:11:41,360 --> 00:11:45,590
it runs online and you can log in and

00:11:43,820 --> 00:11:49,100
see how your power your application is

00:11:45,590 --> 00:11:50,540
performing and the main functionality

00:11:49,100 --> 00:11:52,250
you really need there that will give you

00:11:50,540 --> 00:11:53,810
a lot of visibility even if you don't

00:11:52,250 --> 00:11:55,580
spend two days figuring out everything

00:11:53,810 --> 00:11:57,440
that New Relic can do is if you go in

00:11:55,580 --> 00:12:00,080
under the application and then choose

00:11:57,440 --> 00:12:02,080
transactions in the left bar that's a

00:12:00,080 --> 00:12:07,040
screenshot of nowhere like I have here

00:12:02,080 --> 00:12:09,770
and I just wanted to just to give you a

00:12:07,040 --> 00:12:13,610
quick idea of how easy it actually can

00:12:09,770 --> 00:12:15,860
be then if I tell you that these here

00:12:13,610 --> 00:12:18,610
the next list that you can't see IP on

00:12:15,860 --> 00:12:21,680
the fuzzy screenshot it's different

00:12:18,610 --> 00:12:25,160
function names or transactions in Uralic

00:12:21,680 --> 00:12:27,320
times and the one on there all sorted by

00:12:25,160 --> 00:12:32,360
the most time consuming and the one on

00:12:27,320 --> 00:12:34,940
top is called page manager node view

00:12:32,360 --> 00:12:36,770
page and it takes around fifty percent

00:12:34,940 --> 00:12:39,380
of the application processing time in

00:12:36,770 --> 00:12:41,060
total so anybody have a good idea of

00:12:39,380 --> 00:12:42,530
where would you start to look if you had

00:12:41,060 --> 00:12:46,520
to figure out why this one is running

00:12:42,530 --> 00:12:48,950
slow if I give you one more hint

00:12:46,520 --> 00:12:51,830
anything to do with Paige manager that's

00:12:48,950 --> 00:12:56,270
something with panels if you look

00:12:51,830 --> 00:13:00,380
through the code it's just well you go

00:12:56,270 --> 00:13:03,650
ahead yeah so what's wrong on this one

00:13:00,380 --> 00:13:05,990
that was a fat what you can simply do is

00:13:03,650 --> 00:13:07,790
just take the function name and just

00:13:05,990 --> 00:13:10,340
search through the code base and figure

00:13:07,790 --> 00:13:13,130
out where that pops up and then you can

00:13:10,340 --> 00:13:14,720
see probably what would be a good place

00:13:13,130 --> 00:13:17,480
to start looking and let's say

00:13:14,720 --> 00:13:19,579
that is it but it was in this case this

00:13:17,480 --> 00:13:22,160
is a page a site that doesn't have

00:13:19,579 --> 00:13:24,110
caching and no panels caching it's using

00:13:22,160 --> 00:13:26,540
panels really successfully people like

00:13:24,110 --> 00:13:28,459
those pages clicking on them but there's

00:13:26,540 --> 00:13:30,410
no caching on that so half of what this

00:13:28,459 --> 00:13:32,600
application is doing is serving panels

00:13:30,410 --> 00:13:36,050
pages probably haven't been edited for

00:13:32,600 --> 00:13:38,899
ages but it's still computing them from

00:13:36,050 --> 00:13:41,120
scratch each time this is another

00:13:38,899 --> 00:13:42,949
example of where News New Relic that

00:13:41,120 --> 00:13:45,680
would have taken me days to figure out

00:13:42,949 --> 00:13:49,519
if I didn't have that this was a site

00:13:45,680 --> 00:13:51,439
where all old blocks on the side were

00:13:49,519 --> 00:13:53,449
enabled but there was custom custom

00:13:51,439 --> 00:13:56,600
theming on that there were costings

00:13:53,449 --> 00:13:58,819
custom TPL files and in those Cpl files

00:13:56,600 --> 00:14:02,839
it was called it was calling all the

00:13:58,819 --> 00:14:05,449
blocks so sort of both loading them and

00:14:02,839 --> 00:14:07,430
rendering them from scratch as he did

00:14:05,449 --> 00:14:09,920
that twice before I'd actually output

00:14:07,430 --> 00:14:11,899
any of them so what was happening was

00:14:09,920 --> 00:14:13,850
that all blocks were getting oh and a

00:14:11,899 --> 00:14:15,529
lot of the blocks with views blocks with

00:14:13,850 --> 00:14:18,259
really heavy queries that weren't cached

00:14:15,529 --> 00:14:20,449
so on each page load you would have like

00:14:18,259 --> 00:14:22,610
50 blocks with really heavy database

00:14:20,449 --> 00:14:25,459
queries that were getting loaded are

00:14:22,610 --> 00:14:27,589
executed and not used for anything and

00:14:25,459 --> 00:14:29,480
then the custom TPL file would kick in

00:14:27,589 --> 00:14:31,670
and do it's rendering and in there they

00:14:29,480 --> 00:14:33,680
were code loading those four blocks that

00:14:31,670 --> 00:14:36,350
actually needed on that page and showing

00:14:33,680 --> 00:14:38,899
them so the entire site was running

00:14:36,350 --> 00:14:40,459
really poorly because those 50 blocks

00:14:38,899 --> 00:14:42,920
were getting computed from scratch and

00:14:40,459 --> 00:14:44,779
each pay flow and use for nothing that

00:14:42,920 --> 00:14:46,610
would have been a lot of clicking around

00:14:44,779 --> 00:14:49,309
so find if I hadn't had New Relic

00:14:46,610 --> 00:14:51,319
because you know you need the

00:14:49,309 --> 00:14:52,730
combination of actually reading the

00:14:51,319 --> 00:14:54,500
custom theme and going to the blocks

00:14:52,730 --> 00:14:58,399
page and seeing that they're not

00:14:54,500 --> 00:14:59,899
especially configured but that was the

00:14:58,399 --> 00:15:03,350
one on thought that was the application

00:14:59,899 --> 00:15:05,990
processing time before we we fixed that

00:15:03,350 --> 00:15:08,269
that was almost five seconds and some of

00:15:05,990 --> 00:15:10,579
that there was like 10 seconds front-end

00:15:08,269 --> 00:15:13,430
processing time so it was like 15

00:15:10,579 --> 00:15:15,829
seconds load a page there and the one on

00:15:13,430 --> 00:15:19,850
the bottom that's 600 milliseconds

00:15:15,829 --> 00:15:21,620
that's just disabling the blocks that's

00:15:19,850 --> 00:15:23,720
like four and a half seconds in less

00:15:21,620 --> 00:15:26,209
than an hour's work that you could save

00:15:23,720 --> 00:15:27,319
on a page load that's pretty cool this

00:15:26,209 --> 00:15:28,520
is what it looked like when it went live

00:15:27,319 --> 00:15:34,430
that was awesome

00:15:28,520 --> 00:15:37,490
I love those screenshots so so examples

00:15:34,430 --> 00:15:39,050
of low-hanging food that was one with

00:15:37,490 --> 00:15:42,200
all the blocks rendering an old old

00:15:39,050 --> 00:15:44,530
pages or getting executed at least and

00:15:42,200 --> 00:15:48,230
actually all surrendered but not shown

00:15:44,530 --> 00:15:50,300
views I don't know if this is just also

00:15:48,230 --> 00:15:53,180
an example of a low-hanging fruit item

00:15:50,300 --> 00:15:55,190
but have you guys ever looked at the

00:15:53,180 --> 00:15:56,960
difference between the different

00:15:55,190 --> 00:16:00,080
sections when you configure view and

00:15:56,960 --> 00:16:02,780
what kind of SQL it produces I'm by no

00:16:00,080 --> 00:16:05,360
means like I'm not a views contributor

00:16:02,780 --> 00:16:06,980
or anything but there's different

00:16:05,360 --> 00:16:09,440
filters in there and if you use

00:16:06,980 --> 00:16:11,060
contextual filters those that are like

00:16:09,440 --> 00:16:14,510
arguments that you can give to the page

00:16:11,060 --> 00:16:17,660
that usually produces like a left join

00:16:14,510 --> 00:16:19,700
and when I've talked to developers that

00:16:17,660 --> 00:16:21,830
don't that I like I don't really know my

00:16:19,700 --> 00:16:24,290
as well so what you know what am I

00:16:21,830 --> 00:16:25,760
supposed to do here if I that thing with

00:16:24,290 --> 00:16:27,380
when you configure the view you can

00:16:25,760 --> 00:16:28,730
enable that little gray bar and it

00:16:27,380 --> 00:16:30,890
doesn't really give them much knowledge

00:16:28,730 --> 00:16:33,470
if you don't know me at my school but

00:16:30,890 --> 00:16:34,940
usually have to sold them that okay left

00:16:33,470 --> 00:16:37,370
joins are evil that's really the main

00:16:34,940 --> 00:16:39,590
thing you need to know and then as a

00:16:37,370 --> 00:16:41,690
rule of thumb if that box the gray box

00:16:39,590 --> 00:16:43,340
with the views query that's that's

00:16:41,690 --> 00:16:45,230
building that that gets taller than like

00:16:43,340 --> 00:16:47,630
five centimeters then you need to start

00:16:45,230 --> 00:16:49,070
looking at what you're doing so and

00:16:47,630 --> 00:16:50,950
that's a really good rule of thumb

00:16:49,070 --> 00:16:53,390
actually that can set your pretty far

00:16:50,950 --> 00:16:54,980
but if you look at the views

00:16:53,390 --> 00:16:57,830
configurations as I started talking

00:16:54,980 --> 00:17:01,040
about then the normal filters if you for

00:16:57,830 --> 00:17:03,440
instance say whether a particular item

00:17:01,040 --> 00:17:06,440
has this term attached to it if you

00:17:03,440 --> 00:17:08,959
choose those just feels filters those

00:17:06,440 --> 00:17:10,820
usually produce a wire statement where

00:17:08,959 --> 00:17:14,440
the contextual filters the arguments

00:17:10,820 --> 00:17:16,930
that usually producers are left join so

00:17:14,440 --> 00:17:18,950
there was this site that had views

00:17:16,930 --> 00:17:20,330
queries that were running this should be

00:17:18,950 --> 00:17:22,070
running at maximum a couple hundred

00:17:20,330 --> 00:17:25,100
milliseconds but this one was running at

00:17:22,070 --> 00:17:26,980
like 1.2 seconds and it was running all

00:17:25,100 --> 00:17:30,470
the time and it was killing the database

00:17:26,980 --> 00:17:32,330
so and it was like free sex anime times

00:17:30,470 --> 00:17:33,740
are getting checked so there were only

00:17:32,330 --> 00:17:36,350
three different arguments that were

00:17:33,740 --> 00:17:38,480
getting sent to it but to split that up

00:17:36,350 --> 00:17:40,320
into three different views and not use

00:17:38,480 --> 00:17:43,080
arguments but actually just

00:17:40,320 --> 00:17:46,200
on that field that produces a query that

00:17:43,080 --> 00:17:48,929
had where statements which are also that

00:17:46,200 --> 00:17:51,179
there are not a lot better than than

00:17:48,929 --> 00:17:53,399
left joins instead of like eight

00:17:51,179 --> 00:17:56,269
centimeters of life left joins and that

00:17:53,399 --> 00:17:59,909
took off eighty percent of the cryo time

00:17:56,269 --> 00:18:02,309
GD anybody any one of you guys have

00:17:59,909 --> 00:18:05,279
anyone ever looked into what dd-does how

00:18:02,309 --> 00:18:08,070
it performs a couple of guys GD is

00:18:05,279 --> 00:18:11,370
really my main pet PV I think at the

00:18:08,070 --> 00:18:13,259
moment did is awesome it's an image

00:18:11,370 --> 00:18:15,360
library we probably all know what image

00:18:13,259 --> 00:18:17,610
library is you know you're used to in

00:18:15,360 --> 00:18:20,039
Drupal 6 have to download image API and

00:18:17,610 --> 00:18:21,629
choose make a conscious decision of

00:18:20,039 --> 00:18:24,600
whether you wanted to enable tdr

00:18:21,629 --> 00:18:28,320
imagemagick in Google seven is not like

00:18:24,600 --> 00:18:31,679
that because deedie is is running in PHP

00:18:28,320 --> 00:18:33,929
so for a licensing reasons then it's

00:18:31,679 --> 00:18:35,700
really easy in order to help people so

00:18:33,929 --> 00:18:37,470
they don't have to like download five

00:18:35,700 --> 00:18:39,600
different modules before they can even

00:18:37,470 --> 00:18:41,490
show an image then it's easier to just

00:18:39,600 --> 00:18:44,960
set GD as a default and I totally get

00:18:41,490 --> 00:18:48,179
that it's just evil so I don't like it

00:18:44,960 --> 00:18:50,669
GD uses a lot more memory memory than

00:18:48,179 --> 00:18:52,789
this says image cache by the way that's

00:18:50,669 --> 00:18:56,730
wrong it should be imagemagick

00:18:52,789 --> 00:18:58,679
imagemagick is another image library and

00:18:56,730 --> 00:19:00,629
that runs server-side and pretty much

00:18:58,679 --> 00:19:02,429
any default Linux installation comes

00:19:00,629 --> 00:19:04,049
with that but it needs to be running

00:19:02,429 --> 00:19:07,860
server side so you can't put it as a

00:19:04,049 --> 00:19:10,289
default thing into a pole so but

00:19:07,860 --> 00:19:12,240
imagemagick is a lot more memory

00:19:10,289 --> 00:19:15,029
efficient and it doesn't want in PHP

00:19:12,240 --> 00:19:17,700
memory I've seen sites we're just

00:19:15,029 --> 00:19:20,850
switching the image library from DD to

00:19:17,700 --> 00:19:23,700
image magic which was a task that took

00:19:20,850 --> 00:19:26,850
like downloading one module and enabling

00:19:23,700 --> 00:19:30,779
that as a default image library less

00:19:26,850 --> 00:19:32,549
than an hour if even that that took off

00:19:30,779 --> 00:19:36,149
like two hundred and forty megabytes of

00:19:32,549 --> 00:19:40,320
PHP memory the maximum trace that's a

00:19:36,149 --> 00:19:45,750
lot that you know the recommended memory

00:19:40,320 --> 00:19:48,029
limit is 128 a 240 so that's often when

00:19:45,750 --> 00:19:49,769
you put things on servers they will be

00:19:48,029 --> 00:19:52,860
memory later there will be a definite

00:19:49,769 --> 00:19:53,789
amount of memory so just switching td2

00:19:52,860 --> 00:19:55,289
imagemagick

00:19:53,789 --> 00:19:57,989
that would be the same as saying you

00:19:55,289 --> 00:20:02,190
could have your server costs so that's

00:19:57,989 --> 00:20:04,739
that's pretty efficient so use UI I

00:20:02,190 --> 00:20:08,820
don't know if any of wheel I never

00:20:04,739 --> 00:20:11,369
thought about this before but this is it

00:20:08,820 --> 00:20:13,529
often puts like 80 megabytes of the

00:20:11,369 --> 00:20:15,899
maximum trace it adds like 80 megabytes

00:20:13,529 --> 00:20:17,940
and some of that of the need for PHP

00:20:15,899 --> 00:20:19,739
memory when I'm talking about the

00:20:17,940 --> 00:20:21,720
maximum trace that's a tool that i'm

00:20:19,739 --> 00:20:25,820
using often that's called memory

00:20:21,720 --> 00:20:29,849
profiler it's a tool that's written by

00:20:25,820 --> 00:20:31,590
tim from aquia in brisbane a call and

00:20:29,849 --> 00:20:35,249
former colleague of mine that's really

00:20:31,590 --> 00:20:38,029
clever guy and that you can run added a

00:20:35,249 --> 00:20:40,739
little sample the memory on this side on

00:20:38,029 --> 00:20:42,029
every 50th page request or something you

00:20:40,739 --> 00:20:44,429
can run it for a couple of hours in

00:20:42,029 --> 00:20:46,649
production and get a feel of where is

00:20:44,429 --> 00:20:48,330
your memory actually going it's the same

00:20:46,649 --> 00:20:49,529
that the development module can do but

00:20:48,330 --> 00:20:51,690
you really don't want that running in

00:20:49,529 --> 00:20:54,659
production so that's how i found these

00:20:51,690 --> 00:20:56,249
things out by seeing okay running that

00:20:54,659 --> 00:20:59,009
multiple for a couple of hours figuring

00:20:56,249 --> 00:21:01,139
out what are those pages what's what's

00:20:59,009 --> 00:21:03,359
happening on those the ones that show up

00:21:01,139 --> 00:21:05,070
with like there would be three or four

00:21:03,359 --> 00:21:06,899
ul's that suddenly needs like eight

00:21:05,070 --> 00:21:08,789
hundred megabytes of PHP memory and the

00:21:06,899 --> 00:21:10,950
rest of the pages would be running at 60

00:21:08,789 --> 00:21:13,889
so what's going on there and that would

00:21:10,950 --> 00:21:15,509
be for instance a designer doing what

00:21:13,889 --> 00:21:19,169
they're supposed to do in uploading a 2

00:21:15,509 --> 00:21:25,349
megabyte image to a page that TD then

00:21:19,169 --> 00:21:27,440
has to scale or to render and 22 scale

00:21:25,349 --> 00:21:30,090
in two different sizes for the different

00:21:27,440 --> 00:21:31,919
presets in Drupal and that would take up

00:21:30,090 --> 00:21:35,669
like hundreds of megabytes of PSP memory

00:21:31,919 --> 00:21:39,090
so that's really cool info another site

00:21:35,669 --> 00:21:41,190
that had really its primetime event ever

00:21:39,090 --> 00:21:44,009
and it had one and a half hour of

00:21:41,190 --> 00:21:47,369
downtown down time looking into it

00:21:44,009 --> 00:21:50,340
looking at New Relic again things like

00:21:47,369 --> 00:21:52,049
that we found out it was it had like 50

00:21:50,340 --> 00:21:54,179
different panels and 50 different views

00:21:52,049 --> 00:21:56,729
that's not it but just one of them just

00:21:54,179 --> 00:21:58,710
catching one panel and one view could

00:21:56,729 --> 00:22:00,869
bring the site up again and that was a

00:21:58,710 --> 00:22:03,809
page with hundreds of millions of page

00:22:00,869 --> 00:22:06,680
views it's really often just low-hanging

00:22:03,809 --> 00:22:08,880
food so

00:22:06,680 --> 00:22:11,520
another developer team i work with

00:22:08,880 --> 00:22:17,010
switching td2 imagemagick tuning the

00:22:11,520 --> 00:22:19,430
server with a pc memcache disabling use

00:22:17,010 --> 00:22:22,500
your eyes and casting a couple of years

00:22:19,430 --> 00:22:24,870
that actually allowed them to have to

00:22:22,500 --> 00:22:27,660
run four times as many processes on

00:22:24,870 --> 00:22:30,180
their box that would be the same as

00:22:27,660 --> 00:22:33,390
buying four times as much hardware if

00:22:30,180 --> 00:22:35,280
they hadn't fixed that so it's you can

00:22:33,390 --> 00:22:39,480
get pretty big stuff with little things

00:22:35,280 --> 00:22:41,220
here so you're also all welcome to

00:22:39,480 --> 00:22:43,770
rewrite the memcache integration and the

00:22:41,220 --> 00:22:45,540
cache layer but I just love doing those

00:22:43,770 --> 00:22:47,760
little things first so that you can see

00:22:45,540 --> 00:22:52,650
how does the world look now is it really

00:22:47,760 --> 00:22:54,930
worth that amount of effort so so the

00:22:52,650 --> 00:22:57,480
data how do I get that I look at

00:22:54,930 --> 00:23:00,120
symptoms what's actually wrong so is it

00:22:57,480 --> 00:23:03,030
because is it like you turn on the

00:23:00,120 --> 00:23:05,670
server turn on this side and one on half

00:23:03,030 --> 00:23:07,710
minutes later than the box dies is it

00:23:05,670 --> 00:23:10,830
because it needs hide where again the

00:23:07,710 --> 00:23:13,590
size of ebay is it just really slow

00:23:10,830 --> 00:23:15,890
responses on some pages what is the pain

00:23:13,590 --> 00:23:18,540
right now that the site is going through

00:23:15,890 --> 00:23:20,910
then this like profile and that needs to

00:23:18,540 --> 00:23:23,280
talk too often it would be a customer

00:23:20,910 --> 00:23:25,410
and the developers who built it what

00:23:23,280 --> 00:23:28,020
kind of site is this it does it have

00:23:25,410 --> 00:23:31,530
like 77 external integrations why it's

00:23:28,020 --> 00:23:34,110
waiting for answers or is it logged in

00:23:31,530 --> 00:23:36,030
users in 50 different groups with

00:23:34,110 --> 00:23:37,620
different permissions what's what's is

00:23:36,030 --> 00:23:40,950
there any special functionality on here

00:23:37,620 --> 00:23:43,670
what's happening and then the server of

00:23:40,950 --> 00:23:46,950
course I look at database logs traffic

00:23:43,670 --> 00:23:49,140
AP see how that one's home ha memcached

00:23:46,950 --> 00:23:50,940
is doing that's also a very common one

00:23:49,140 --> 00:23:52,920
that gets overlooked that memcache has

00:23:50,940 --> 00:23:56,760
two little memory and then it's just

00:23:52,920 --> 00:24:00,290
dying because it has to push things out

00:23:56,760 --> 00:24:00,290
and overwrite itself all the time

00:24:00,320 --> 00:24:04,290
application there you can look at

00:24:02,640 --> 00:24:05,910
watchdog although i hope that watchdog

00:24:04,290 --> 00:24:09,030
will be in this just lock the deep but

00:24:05,910 --> 00:24:11,160
not give you log caching settings

00:24:09,030 --> 00:24:13,230
modules and then i use new relic i

00:24:11,160 --> 00:24:15,210
actually mainland you use new relic just

00:24:13,230 --> 00:24:17,290
to get the overview it often points me

00:24:15,210 --> 00:24:24,100
in the direction like the panels

00:24:17,290 --> 00:24:26,020
oh yeah so this is again another new

00:24:24,100 --> 00:24:28,930
relic screenshot and this is just to

00:24:26,020 --> 00:24:30,610
show you they really neat overview you

00:24:28,930 --> 00:24:33,490
can get when you click a transaction

00:24:30,610 --> 00:24:36,670
where you can see exactly how much of

00:24:33,490 --> 00:24:39,690
the application processing time is going

00:24:36,670 --> 00:24:42,940
where in in and out in a transaction

00:24:39,690 --> 00:24:45,280
this one was a note page view where you

00:24:42,940 --> 00:24:50,590
can see that a lot of it is going into

00:24:45,280 --> 00:24:53,050
the menu and then you also you can get

00:24:50,590 --> 00:24:55,630
if you have the provision which yeah

00:24:53,050 --> 00:24:56,860
damn them I they should pay me but I

00:24:55,630 --> 00:24:59,350
really would recommend if you have a

00:24:56,860 --> 00:25:01,450
performance issue to pay further ado

00:24:59,350 --> 00:25:03,550
Alec provision I don't work for them but

00:25:01,450 --> 00:25:05,440
it gives you a lot of insight that you

00:25:03,550 --> 00:25:07,300
don't have otherwise this is pretty much

00:25:05,440 --> 00:25:09,220
what you get from XH broth but it's

00:25:07,300 --> 00:25:11,440
right there with your pretty graphs in

00:25:09,220 --> 00:25:14,770
in the new le interface where you can

00:25:11,440 --> 00:25:18,060
see exactly how much is going where and

00:25:14,770 --> 00:25:20,980
which functions are calling which ones

00:25:18,060 --> 00:25:23,440
so a place I think you should not start

00:25:20,980 --> 00:25:26,140
is to go in and optimized to a pole

00:25:23,440 --> 00:25:27,670
because it's doing stupid DB queries and

00:25:26,140 --> 00:25:30,540
write your own because so much better

00:25:27,670 --> 00:25:32,740
they might be and you might be right but

00:25:30,540 --> 00:25:38,980
there's a there's a lot of different

00:25:32,740 --> 00:25:40,720
things to that often it's like I think

00:25:38,980 --> 00:25:43,750
there's a lot of blood to be said about

00:25:40,720 --> 00:25:45,550
what i would call sustainable sites so

00:25:43,750 --> 00:25:48,850
the less you have to fiddle around with

00:25:45,550 --> 00:25:51,640
stuff the less you have to hack code or

00:25:48,850 --> 00:25:52,780
a modifier code the more sustainable

00:25:51,640 --> 00:25:56,320
your site is going to be and that's

00:25:52,780 --> 00:25:57,700
going to be helpful in order to that new

00:25:56,320 --> 00:25:59,560
modules you install that they're going

00:25:57,700 --> 00:26:01,480
to work that the next guy that starts

00:25:59,560 --> 00:26:03,760
working at your job is actually going to

00:26:01,480 --> 00:26:05,560
have half a chance as figuring out what

00:26:03,760 --> 00:26:07,210
the heck is going on or the poor guy

00:26:05,560 --> 00:26:09,930
that has to solve performance at some

00:26:07,210 --> 00:26:12,840
time also can find what's happening I

00:26:09,930 --> 00:26:16,000
think that's all that's a lot about

00:26:12,840 --> 00:26:19,060
thinking about whether the complexity is

00:26:16,000 --> 00:26:21,580
worth it well how much you are high you

00:26:19,060 --> 00:26:24,040
are putting up the entry level for the

00:26:21,580 --> 00:26:25,810
next person to work with this I and hard

00:26:24,040 --> 00:26:27,910
code DB queries I don't know just in

00:26:25,810 --> 00:26:29,470
general Google does a pretty good job it

00:26:27,910 --> 00:26:30,550
was what it does there are some really

00:26:29,470 --> 00:26:32,830
in sulligent mind

00:26:30,550 --> 00:26:34,840
that's been over that code quite a few

00:26:32,830 --> 00:26:38,290
times before I hit it so even if I have

00:26:34,840 --> 00:26:40,000
an opinion then most of the time I found

00:26:38,290 --> 00:26:44,380
out that there's a really good recent

00:26:40,000 --> 00:26:46,120
things are the way they are so double

00:26:44,380 --> 00:26:48,190
the hardware well that's a bit like

00:26:46,120 --> 00:26:50,380
peeing in the pants just you know to

00:26:48,190 --> 00:26:52,930
keep warm so that's going to work for a

00:26:50,380 --> 00:26:54,490
while but it's it can certainly give you

00:26:52,930 --> 00:26:56,350
the kind of breathing room that you need

00:26:54,490 --> 00:26:58,240
until you fix what's actually happening

00:26:56,350 --> 00:27:02,700
in there and that's a really really good

00:26:58,240 --> 00:27:02,700
thing but as a permanent solution its

00:27:02,850 --> 00:27:08,230
people do it I've seen the most

00:27:05,700 --> 00:27:11,860
impressive server parks run really

00:27:08,230 --> 00:27:16,420
really simple size but it's a very

00:27:11,860 --> 00:27:18,580
expensive and it just feels wrong so and

00:27:16,420 --> 00:27:21,790
yeah we write doable because it's stupid

00:27:18,580 --> 00:27:24,250
well yeah we can all about that

00:27:21,790 --> 00:27:26,590
and feel we are wiser but I doubt that

00:27:24,250 --> 00:27:29,350
we are or some of you maybe I don't

00:27:26,590 --> 00:27:31,420
trust myself to be that's for sure or

00:27:29,350 --> 00:27:33,070
just drag everything out in JavaScript

00:27:31,420 --> 00:27:36,190
and fix it there because then it's not

00:27:33,070 --> 00:27:37,780
well again it's a little bit like peeing

00:27:36,190 --> 00:27:41,110
in the pants to keep warm you add

00:27:37,780 --> 00:27:42,610
complexity you do data calculations why

00:27:41,110 --> 00:27:44,020
people doesn't know anything about them

00:27:42,610 --> 00:27:46,000
anymore and you're probably doing more

00:27:44,020 --> 00:27:48,490
DB queries than the page load in itself

00:27:46,000 --> 00:27:49,960
at some point that's the same with edge

00:27:48,490 --> 00:27:52,180
side includes I think that's a really

00:27:49,960 --> 00:27:53,860
cool thing and it sounds awesome i love

00:27:52,180 --> 00:27:58,060
the word it sounds like and the ticky

00:27:53,860 --> 00:28:00,370
but but the thing is that its site

00:27:58,060 --> 00:28:01,990
includes kind of makes sense because if

00:28:00,370 --> 00:28:04,090
you only have like one or two things on

00:28:01,990 --> 00:28:06,280
a page then if you just need to display

00:28:04,090 --> 00:28:08,410
my name you don't need to boot to a

00:28:06,280 --> 00:28:11,350
foldable bootstrap to ask the database

00:28:08,410 --> 00:28:14,650
for my name as a user when i'm logged in

00:28:11,350 --> 00:28:17,380
that's fine but it's a bit like if you

00:28:14,650 --> 00:28:20,140
do like 10 of those on a page then

00:28:17,380 --> 00:28:23,070
you've done maybe 10 full or partial

00:28:20,140 --> 00:28:25,000
bootable bootstraps in order to not do

00:28:23,070 --> 00:28:26,590
more database priorities in the

00:28:25,000 --> 00:28:34,330
bootstrap you were already doing which

00:28:26,590 --> 00:28:35,770
is just sort of silly so yeah you you

00:28:34,330 --> 00:28:37,360
can end up with stuff that's actually

00:28:35,770 --> 00:28:39,040
running a lot slower and doing a lot

00:28:37,360 --> 00:28:40,840
more database queries with each site

00:28:39,040 --> 00:28:44,130
includes which was what you were trying

00:28:40,840 --> 00:28:44,130
to solve in the first place so

00:28:45,190 --> 00:28:50,390
symptoms we talked about that the slow

00:28:47,870 --> 00:28:53,650
pages database could be dying the web

00:28:50,390 --> 00:28:56,990
servers dying extreme hydro knees which

00:28:53,650 --> 00:29:02,330
whatever it is it means that you have to

00:28:56,990 --> 00:29:04,460
look in different places so but in any

00:29:02,330 --> 00:29:06,230
case when you then start looking in

00:29:04,460 --> 00:29:08,809
those places and you have the data then

00:29:06,230 --> 00:29:11,320
use that hunch is not enough and then

00:29:08,809 --> 00:29:13,910
apply effort why corresponds to pay off

00:29:11,320 --> 00:29:15,830
performance is often a bit like web

00:29:13,910 --> 00:29:19,070
development where we say it's like 80 20

00:29:15,830 --> 00:29:20,840
if we can get like twenty percent of

00:29:19,070 --> 00:29:22,580
eighty percent of the site done in

00:29:20,840 --> 00:29:25,340
twenty percent of the time and vice

00:29:22,580 --> 00:29:28,280
versa but performance can even be 90 91

00:29:25,340 --> 00:29:31,309
if it's about enabling caching and

00:29:28,280 --> 00:29:34,660
switching gd2 imagemagick and enabling

00:29:31,309 --> 00:29:37,790
use caching use caching this evil also

00:29:34,660 --> 00:29:41,540
and then remember you need to maintain

00:29:37,790 --> 00:29:44,720
this so the really really big complex

00:29:41,540 --> 00:29:48,230
portion Mercedes kind of code or just

00:29:44,720 --> 00:29:50,650
make everything pretty yeah it takes a

00:29:48,230 --> 00:29:53,030
lifetime to make everything pretty and

00:29:50,650 --> 00:29:54,530
complexity entry level versus game be

00:29:53,030 --> 00:29:59,210
nice to the next dude that has to work

00:29:54,530 --> 00:30:01,309
with this so sometimes I even choose a

00:29:59,210 --> 00:30:03,530
less performing option it is to have it

00:30:01,309 --> 00:30:07,190
look neat and not to have her having to

00:30:03,530 --> 00:30:09,080
modify modules not like massively but it

00:30:07,190 --> 00:30:13,669
is it's right off I think that's worth

00:30:09,080 --> 00:30:16,100
considering so other things that are

00:30:13,669 --> 00:30:18,260
really that really makes a lot of

00:30:16,100 --> 00:30:20,150
difference for our site is running is

00:30:18,260 --> 00:30:23,750
whether it's authenticated or anonymous

00:30:20,150 --> 00:30:26,150
traffic over any of you guys work on

00:30:23,750 --> 00:30:28,820
sites that have a lot of authenticated

00:30:26,150 --> 00:30:33,140
traffic like mainly only authenticated

00:30:28,820 --> 00:30:35,540
users yeah when i worked at aquis i did

00:30:33,140 --> 00:30:39,559
a lot of hide where sizing for customers

00:30:35,540 --> 00:30:42,140
new customers that came on and often

00:30:39,559 --> 00:30:44,480
they had a high time understanding what

00:30:42,140 --> 00:30:47,120
was happening when you know they just

00:30:44,480 --> 00:30:48,770
had high res sized for a website that

00:30:47,120 --> 00:30:51,620
had like millions of millions of page

00:30:48,770 --> 00:30:54,080
views a month and that was a certain

00:30:51,620 --> 00:30:55,970
size and then they had hide wear size

00:30:54,080 --> 00:31:00,200
for an intranet with like

00:30:55,970 --> 00:31:01,580
thousand users so authenticated users

00:31:00,200 --> 00:31:04,010
and that could be pretty much the same

00:31:01,580 --> 00:31:06,380
size but that's the thing that's

00:31:04,010 --> 00:31:09,560
different here is that when you're not

00:31:06,380 --> 00:31:12,430
logged in then we can save all pretty

00:31:09,560 --> 00:31:14,090
much all the pages for vine ish so

00:31:12,430 --> 00:31:17,510
there's not going to be a lot of

00:31:14,090 --> 00:31:19,490
requests that hit the web server when

00:31:17,510 --> 00:31:24,260
you're logged in then vanish won't help

00:31:19,490 --> 00:31:25,640
you then what what we need in general

00:31:24,260 --> 00:31:28,250
when we're talking about performance

00:31:25,640 --> 00:31:30,920
that is to help the database and it's to

00:31:28,250 --> 00:31:35,020
do that with caching a lot of the time

00:31:30,920 --> 00:31:38,750
or caching is one of the ways to do that

00:31:35,020 --> 00:31:40,430
so when you're logged in then varnish

00:31:38,750 --> 00:31:42,950
you can't save pulled full page loads

00:31:40,430 --> 00:31:45,110
with vanish but you can use memcache

00:31:42,950 --> 00:31:46,910
still you can catch a lot of the site in

00:31:45,110 --> 00:31:49,190
memcache and use that but it's not as

00:31:46,910 --> 00:31:54,530
efficient as finish you're still hitting

00:31:49,190 --> 00:31:57,430
to a pond so so yeah it's a different

00:31:54,530 --> 00:31:59,960
caching method another thing I try to

00:31:57,430 --> 00:32:01,580
use to try to explain to people when

00:31:59,960 --> 00:32:03,020
they've had a hard time understanding it

00:32:01,580 --> 00:32:04,970
is a little bit confusing the thing with

00:32:03,020 --> 00:32:06,950
oh it's an internet with 10,000 users

00:32:04,970 --> 00:32:09,560
and it needs the same hardware as a page

00:32:06,950 --> 00:32:12,200
that has millions of page views it's

00:32:09,560 --> 00:32:15,020
it's a bit like every requite request

00:32:12,200 --> 00:32:17,780
that hits the web server it's using some

00:32:15,020 --> 00:32:19,790
sort of time and energy from the server

00:32:17,780 --> 00:32:21,350
so if you can serve everybody much

00:32:19,790 --> 00:32:24,620
everything without ever hitting the

00:32:21,350 --> 00:32:26,330
application then you're sweet then then

00:32:24,620 --> 00:32:30,950
it's perfect and that's what you can do

00:32:26,330 --> 00:32:33,310
with anonymous traffic so modules

00:32:30,950 --> 00:32:35,720
whether there is like no taxes on that

00:32:33,310 --> 00:32:39,020
that will disable block caching /

00:32:35,720 --> 00:32:41,390
default there are ways around that but

00:32:39,020 --> 00:32:43,670
it takes a little bit of extra logic and

00:32:41,390 --> 00:32:47,750
thinking things through before doing

00:32:43,670 --> 00:32:50,510
that organic groups those are modules

00:32:47,750 --> 00:32:53,360
that also can be really bad for

00:32:50,510 --> 00:32:54,950
performance but or bad for performance

00:32:53,360 --> 00:32:57,520
it sounds like you just disable them of

00:32:54,950 --> 00:32:59,810
course you shouldn't but sites that

00:32:57,520 --> 00:33:01,640
sites that have a lot of access

00:32:59,810 --> 00:33:03,590
restrictions on there i have not access

00:33:01,640 --> 00:33:06,590
modules on there or organic groups

00:33:03,590 --> 00:33:08,169
things like that they do have other

00:33:06,590 --> 00:33:10,700
performance needs

00:33:08,169 --> 00:33:14,240
organic groups doesn't have to but if it

00:33:10,700 --> 00:33:17,090
well yeah it does but but also it just

00:33:14,240 --> 00:33:19,610
adds a lot of complexity in general and

00:33:17,090 --> 00:33:21,890
people tend to make fun choices for

00:33:19,610 --> 00:33:25,520
architecture on top of complexity as

00:33:21,890 --> 00:33:26,960
well custom code the amount of custom

00:33:25,520 --> 00:33:28,910
code and how well it's written if it's

00:33:26,960 --> 00:33:31,700
using caching at all or just doing

00:33:28,910 --> 00:33:34,910
direct database queries or something

00:33:31,700 --> 00:33:37,669
like that and one thing I actually I

00:33:34,910 --> 00:33:39,799
don't work at a Korea anymore but one

00:33:37,669 --> 00:33:42,789
thing I still use when I do performance

00:33:39,799 --> 00:33:46,100
way is to simply upload a side at aquia

00:33:42,789 --> 00:33:48,110
while they have this really need inside

00:33:46,100 --> 00:33:51,740
report where you get a lot of tips for

00:33:48,110 --> 00:33:52,909
performance and SEO and all kinds of

00:33:51,740 --> 00:33:56,179
other stuff that I don't care too much

00:33:52,909 --> 00:33:58,580
about but but there's really good low

00:33:56,179 --> 00:34:01,429
hanging fruit or best practice general

00:33:58,580 --> 00:34:04,600
stuff in there I think that yeah I know

00:34:01,429 --> 00:34:06,770
that I think Pantheon has that as well

00:34:04,600 --> 00:34:11,179
but that's a really good place to get

00:34:06,770 --> 00:34:13,100
started application caching that's also

00:34:11,179 --> 00:34:15,440
a really fun one whether caching is

00:34:13,100 --> 00:34:17,149
enabled at all it's it's amazing the

00:34:15,440 --> 00:34:19,490
amount of sites I've seen by now that

00:34:17,149 --> 00:34:24,260
still today has no caching enabled at

00:34:19,490 --> 00:34:26,720
all again if we end up if caching is not

00:34:24,260 --> 00:34:29,389
enabled then we end up having the

00:34:26,720 --> 00:34:31,280
website do all this work from scratch as

00:34:29,389 --> 00:34:34,940
if nothing had ever happened every time

00:34:31,280 --> 00:34:37,550
there is a requests so and generally

00:34:34,940 --> 00:34:39,679
what it should be doing if caching is

00:34:37,550 --> 00:34:41,629
set up correctly is that it should

00:34:39,679 --> 00:34:44,480
really only be asking the website for

00:34:41,629 --> 00:34:46,040
something when when there's a request

00:34:44,480 --> 00:34:49,100
coming in that's asking for something

00:34:46,040 --> 00:34:50,659
that hasn't been shown before and seen

00:34:49,100 --> 00:34:53,320
stuff you've really only be post from

00:34:50,659 --> 00:34:59,000
cash when it's been updated oh it's new

00:34:53,320 --> 00:35:03,460
so and there is you can run a caching

00:34:59,000 --> 00:35:06,230
report from use blocks panels and

00:35:03,460 --> 00:35:09,260
maximum and minimum cash lifetime I also

00:35:06,230 --> 00:35:11,660
look at that and I looked at look at

00:35:09,260 --> 00:35:14,030
weather panels are cached or there's

00:35:11,660 --> 00:35:17,090
particular pages that are not cached by

00:35:14,030 --> 00:35:19,950
on purpose

00:35:17,090 --> 00:35:22,560
then I look at a lot of best practices

00:35:19,950 --> 00:35:25,890
just basic stuff like statistics module

00:35:22,560 --> 00:35:27,360
that's evil it I'm it I don't really

00:35:25,890 --> 00:35:28,560
know why it's why we still have that I

00:35:27,360 --> 00:35:30,600
can't I don't know how to check whether

00:35:28,560 --> 00:35:32,430
it's in Google eight but that one is

00:35:30,600 --> 00:35:34,200
writing to the database and pretty much

00:35:32,430 --> 00:35:37,860
every page load so that's going to be

00:35:34,200 --> 00:35:40,350
really really heavy database logging is

00:35:37,860 --> 00:35:43,470
also just a evil in itself I've seen

00:35:40,350 --> 00:35:46,200
that takedown pages all on its own so if

00:35:43,470 --> 00:35:47,820
you do just if you have PHP notices

00:35:46,200 --> 00:35:49,980
enable when you develop you have of

00:35:47,820 --> 00:35:53,070
course we do that's best practice we

00:35:49,980 --> 00:35:55,950
need to know what's happening and then

00:35:53,070 --> 00:35:57,780
that all that setting also is like that

00:35:55,950 --> 00:36:00,450
on the live site and you are log into

00:35:57,780 --> 00:36:04,050
the database pease pease throws a lot of

00:36:00,450 --> 00:36:06,870
notices all the time so you will have

00:36:04,050 --> 00:36:09,840
pages that can't be cached and that's

00:36:06,870 --> 00:36:12,030
taking a lot of effort not really

00:36:09,840 --> 00:36:14,190
producing any content or anything that

00:36:12,030 --> 00:36:16,350
benefits the user it's just writing to

00:36:14,190 --> 00:36:21,360
the database with log log messages that

00:36:16,350 --> 00:36:25,200
are not necessarily relevant views

00:36:21,360 --> 00:36:27,300
fields rules uui that's also modules

00:36:25,200 --> 00:36:30,990
that will add a lot to your PHP memory

00:36:27,300 --> 00:36:33,150
limit needs whether devel is enabled

00:36:30,990 --> 00:36:34,740
that's not good for performance security

00:36:33,150 --> 00:36:36,210
or anything else and it shouldn't be on

00:36:34,740 --> 00:36:40,380
a production side and we all know that

00:36:36,210 --> 00:36:43,490
but we all forget it so and then Drupal

00:36:40,380 --> 00:36:46,230
search again the thing about trying to

00:36:43,490 --> 00:36:48,210
protect the database so that when we

00:36:46,230 --> 00:36:50,730
actually the database is slow it's a

00:36:48,210 --> 00:36:52,830
slow part of the application when we ask

00:36:50,730 --> 00:36:55,950
it we wanted to be able to use all its

00:36:52,830 --> 00:36:57,720
got to give us an answer if it's working

00:36:55,950 --> 00:37:00,660
on all kinds of stuff it doesn't have to

00:36:57,720 --> 00:37:03,060
is going to be slower so if we are

00:37:00,660 --> 00:37:05,370
writing log files to the database if we

00:37:03,060 --> 00:37:09,120
are using google search that can be

00:37:05,370 --> 00:37:10,590
replaced with solar search then it's

00:37:09,120 --> 00:37:14,430
going to be slower there's no need for

00:37:10,590 --> 00:37:15,750
that so if we are putting statistics

00:37:14,430 --> 00:37:19,860
there that really should google doesn't

00:37:15,750 --> 00:37:21,510
much better job at that anyways so it's

00:37:19,860 --> 00:37:22,710
about moving out the functionalities

00:37:21,510 --> 00:37:25,080
from the database that are not

00:37:22,710 --> 00:37:26,830
necessarily about serving content and

00:37:25,080 --> 00:37:30,550
that's better safe somewhere else

00:37:26,830 --> 00:37:32,740
and then modules I look at things like

00:37:30,550 --> 00:37:36,040
views like patient so it doesn't have to

00:37:32,740 --> 00:37:38,350
calculate all their page splits of all

00:37:36,040 --> 00:37:40,360
the results and once fast fall for

00:37:38,350 --> 00:37:42,760
weather entity cash is on that I've seen

00:37:40,360 --> 00:37:46,180
a site get like thirty percent

00:37:42,760 --> 00:37:49,090
improvement in page load speed just

00:37:46,180 --> 00:37:50,920
enabling NCT cash and I've never seen it

00:37:49,090 --> 00:37:52,960
create an error on a page anybody seen

00:37:50,920 --> 00:37:56,940
anybody ever had problems with entity

00:37:52,960 --> 00:38:00,940
cash oh so people have I stand corrected

00:37:56,940 --> 00:38:04,150
so but i'll say rally them but that's

00:38:00,940 --> 00:38:09,130
really neat module that almost always is

00:38:04,150 --> 00:38:11,590
a good thing so and then whether it's

00:38:09,130 --> 00:38:14,590
it's actually cash incorrectly that was

00:38:11,590 --> 00:38:17,350
what I talked about before that cash you

00:38:14,590 --> 00:38:19,900
really don't want to update the cache or

00:38:17,350 --> 00:38:22,120
just expire things from cash every hour

00:38:19,900 --> 00:38:25,000
every three hours just because you've

00:38:22,120 --> 00:38:27,010
set that as a limit you you might as

00:38:25,000 --> 00:38:28,720
well just leave it it's a better what we

00:38:27,010 --> 00:38:32,350
really want is for content to stay in

00:38:28,720 --> 00:38:34,990
there until it gets changed ultimate or

00:38:32,350 --> 00:38:36,730
that would be optimal at least and that

00:38:34,990 --> 00:38:39,250
you can do with expire and perish

00:38:36,730 --> 00:38:41,110
modules so that the only time that you

00:38:39,250 --> 00:38:43,150
you can set the cash limit like really

00:38:41,110 --> 00:38:45,460
really high and then only go in and take

00:38:43,150 --> 00:38:46,990
things out of cash when there's actually

00:38:45,460 --> 00:38:52,150
something that's changed on that

00:38:46,990 --> 00:38:54,940
particular node use content cash is a

00:38:52,150 --> 00:38:57,880
module that will help support that in

00:38:54,940 --> 00:39:01,540
views so that views also expire these

00:38:57,880 --> 00:39:03,250
listings etc of that content site when

00:39:01,540 --> 00:39:04,990
something has been updated in that

00:39:03,250 --> 00:39:11,680
counts inside or a particular content

00:39:04,990 --> 00:39:13,870
side so and yeah then use an IPM you

00:39:11,680 --> 00:39:15,250
relic is awesome I know there's others

00:39:13,870 --> 00:39:16,660
out there and they're probably just as

00:39:15,250 --> 00:39:19,390
good i don't know i don't think they are

00:39:16,660 --> 00:39:20,980
because i know New Relic but no I think

00:39:19,390 --> 00:39:23,470
it's very much about knowing the tools

00:39:20,980 --> 00:39:25,720
that you're using I don't know if if if

00:39:23,470 --> 00:39:27,400
the others match up to par with New

00:39:25,720 --> 00:39:30,610
Relic but I really think knurling is a

00:39:27,400 --> 00:39:32,740
good one and what I look at in Uralic

00:39:30,610 --> 00:39:34,450
that would be transactions the one that

00:39:32,740 --> 00:39:38,370
I showed you before on the fuzzy

00:39:34,450 --> 00:39:40,120
screenshot that nobody could see so

00:39:38,370 --> 00:39:42,190
that's that's

00:39:40,120 --> 00:39:44,110
main thing that you would need to know

00:39:42,190 --> 00:39:45,790
to get started with New Relic that's why

00:39:44,110 --> 00:39:48,780
you will find a lot of good information

00:39:45,790 --> 00:39:52,000
but apart from that then I look at

00:39:48,780 --> 00:39:54,820
latest show slow requests I sought it

00:39:52,000 --> 00:39:58,390
instead of most time consuming than the

00:39:54,820 --> 00:40:00,370
slow ones I look at the google modules

00:39:58,390 --> 00:40:04,210
just to see if there is something in

00:40:00,370 --> 00:40:06,070
there that looks odd again that's about

00:40:04,210 --> 00:40:09,100
basic global knowledge that we all have

00:40:06,070 --> 00:40:11,170
things like for the one with panels

00:40:09,100 --> 00:40:13,330
earlier if you knew that page manager

00:40:11,170 --> 00:40:15,640
means panels then you would probably

00:40:13,330 --> 00:40:17,620
have a hint like really is panels

00:40:15,640 --> 00:40:19,600
supposed to use like fifty percent of

00:40:17,620 --> 00:40:21,250
the application processing time isn't

00:40:19,600 --> 00:40:23,260
that a bit much maybe as you just check

00:40:21,250 --> 00:40:24,700
up on that or if it's blocks for

00:40:23,260 --> 00:40:27,220
instance that's taking up eighty percent

00:40:24,700 --> 00:40:30,790
of the processing time that's also

00:40:27,220 --> 00:40:33,550
that's that's pretty good that you only

00:40:30,790 --> 00:40:39,220
need like your own experience to see

00:40:33,550 --> 00:40:41,020
that so database queries also good and

00:40:39,220 --> 00:40:43,270
you can also check in their external

00:40:41,020 --> 00:40:46,210
requests can be really helpful sometimes

00:40:43,270 --> 00:40:48,460
there's actually it's an external

00:40:46,210 --> 00:40:49,690
request waiting for some other system to

00:40:48,460 --> 00:40:52,750
reply which is not going to happen

00:40:49,690 --> 00:40:55,480
anytime soon that's pulling the entire

00:40:52,750 --> 00:40:58,120
site down we had ones like years and

00:40:55,480 --> 00:41:01,150
years back in Denmark there was this ad

00:40:58,120 --> 00:41:04,210
service where it had to be set up so

00:41:01,150 --> 00:41:05,860
that the page or at least I don't know

00:41:04,210 --> 00:41:07,390
if it had to wife we were just silly

00:41:05,860 --> 00:41:12,010
when we created the pages we probably

00:41:07,390 --> 00:41:13,630
see silly but what happened was that the

00:41:12,010 --> 00:41:16,270
rest of the page wouldn't continue

00:41:13,630 --> 00:41:19,540
loading until we had a reply from the ad

00:41:16,270 --> 00:41:21,730
service and the ad service was really

00:41:19,540 --> 00:41:24,760
bailing out and seriously slow and there

00:41:21,730 --> 00:41:29,230
were like 15 ads on each page load so it

00:41:24,760 --> 00:41:30,850
was killing 15 sites so external request

00:41:29,230 --> 00:41:36,310
is a really good one to check as well

00:41:30,850 --> 00:41:38,250
and then slow views again this page with

00:41:36,310 --> 00:41:41,890
like millions and millions of visitors

00:41:38,250 --> 00:41:44,440
just with no caching on either no panels

00:41:41,890 --> 00:41:46,300
have used 50 each of them just one view

00:41:44,440 --> 00:41:49,360
one panel got it up again when it was

00:41:46,300 --> 00:41:50,830
broken and down and couldn't run when

00:41:49,360 --> 00:41:52,870
I've looked at all these things then i

00:41:50,830 --> 00:41:53,290
might go nitty-gritty and sit sit around

00:41:52,870 --> 00:41:57,340
with that

00:41:53,290 --> 00:41:59,530
sage prov so I like command line as well

00:41:57,340 --> 00:42:01,840
but I'm my life is getting I'm getting

00:41:59,530 --> 00:42:04,900
too old for that I think if I can get

00:42:01,840 --> 00:42:06,820
pretty graphs custom code these are some

00:42:04,900 --> 00:42:09,600
of the things that I look look at that

00:42:06,820 --> 00:42:14,620
would be things like variables that are

00:42:09,600 --> 00:42:18,280
cast clear all guys clear all definitely

00:42:14,620 --> 00:42:20,830
i've seen code where the entire cache

00:42:18,280 --> 00:42:22,810
and the web page were cleared twice

00:42:20,830 --> 00:42:25,450
before I even started showing the page

00:42:22,810 --> 00:42:30,430
you can set up varnish all you want but

00:42:25,450 --> 00:42:34,810
it's not going to happen so loops with

00:42:30,430 --> 00:42:36,100
no default that's just bad code if it

00:42:34,810 --> 00:42:39,540
never falls into any of the categories

00:42:36,100 --> 00:42:42,400
you you're going to have an issue for

00:42:39,540 --> 00:42:44,890
error handling for anything that's using

00:42:42,400 --> 00:42:47,530
hook in it because that's going to make

00:42:44,890 --> 00:42:50,110
it really hard to cash it for hacked

00:42:47,530 --> 00:42:52,360
modules i use the hacked module the

00:42:50,110 --> 00:42:56,650
amount of custom code amount of modules

00:42:52,360 --> 00:42:59,680
whether they're actually used so on this

00:42:56,650 --> 00:43:01,540
server side i'll look almost always

00:42:59,680 --> 00:43:03,790
fests and foremost and memcache

00:43:01,540 --> 00:43:05,560
evictions just because that's a really

00:43:03,790 --> 00:43:09,520
common one it's almost as common as

00:43:05,560 --> 00:43:11,380
cussing being disabled that the service

00:43:09,520 --> 00:43:15,220
the service will be set up with some

00:43:11,380 --> 00:43:16,990
sort of mem cache memory and then it's

00:43:15,220 --> 00:43:18,490
like oh no we don't want to give it

00:43:16,990 --> 00:43:21,400
anymore because then it's going to cost

00:43:18,490 --> 00:43:23,890
money to do a dedicated memcache box or

00:43:21,400 --> 00:43:26,200
something like that and yeah well that's

00:43:23,890 --> 00:43:29,080
the best money spent ever if it's needed

00:43:26,200 --> 00:43:31,120
so if you have a really high eviction

00:43:29,080 --> 00:43:33,730
rate in memcache and it's almost always

00:43:31,120 --> 00:43:36,310
because it needs more space so it starts

00:43:33,730 --> 00:43:38,230
like showing like throwing up the other

00:43:36,310 --> 00:43:42,430
kids have the from the room because it

00:43:38,230 --> 00:43:45,460
needs to right before it's supposed to

00:43:42,430 --> 00:43:47,080
and that's that's really that's a lot of

00:43:45,460 --> 00:43:49,650
extra effort from memcache and it's

00:43:47,080 --> 00:43:52,630
really not going to perform very well

00:43:49,650 --> 00:43:54,670
and often people don't know because you

00:43:52,630 --> 00:43:56,470
need to keep an eye on the circuit

00:43:54,670 --> 00:43:57,820
statistics from memcache and you really

00:43:56,470 --> 00:44:00,850
don't do that unless you have an issue

00:43:57,820 --> 00:44:03,279
or you often don't think of it there is

00:44:00,850 --> 00:44:06,309
one really educate scenario

00:44:03,279 --> 00:44:08,919
where there is something about memcache

00:44:06,309 --> 00:44:11,439
and how it allocates memory where you

00:44:08,919 --> 00:44:15,699
might have memcache allocated memory in

00:44:11,439 --> 00:44:18,640
a particular distribution of sizes or as

00:44:15,699 --> 00:44:22,150
different sizes boxes or whatever you

00:44:18,640 --> 00:44:24,009
would say with space for caching things

00:44:22,150 --> 00:44:25,749
to begin with and it never ever ever

00:44:24,009 --> 00:44:27,880
ever changes that so i have actually

00:44:25,749 --> 00:44:29,739
once seen where I visions when not

00:44:27,880 --> 00:44:33,909
because it needed more space but it was

00:44:29,739 --> 00:44:38,380
because it had used up all the all this

00:44:33,909 --> 00:44:42,459
base it had of a particular yeah sighs

00:44:38,380 --> 00:44:44,469
of of cash so and even though it had

00:44:42,459 --> 00:44:46,239
like seventy percent free memory then it

00:44:44,469 --> 00:44:48,609
couldn't use it because it was it was

00:44:46,239 --> 00:44:51,159
all the wrong sizes where it couldn't

00:44:48,609 --> 00:44:53,079
fit in the chunks that it needed to so

00:44:51,159 --> 00:44:56,189
that was a pretty particular case all it

00:44:53,079 --> 00:44:58,390
took was to restart the memcache

00:44:56,189 --> 00:45:00,939
software and then it would start

00:44:58,390 --> 00:45:02,079
allocating memory again but I think it's

00:45:00,939 --> 00:45:04,029
actually solved in later versions

00:45:02,079 --> 00:45:05,559
anyways this is I don't know what I'm

00:45:04,029 --> 00:45:08,140
wasting time telling you about a really

00:45:05,559 --> 00:45:09,849
education each scenario just maybe then

00:45:08,140 --> 00:45:14,439
it makes me feel like that knowledge was

00:45:09,849 --> 00:45:16,449
worth something but then there is a PC

00:45:14,439 --> 00:45:19,809
stick statistics and percent of memory

00:45:16,449 --> 00:45:21,189
used in ABC PHP that's also a very good

00:45:19,809 --> 00:45:23,319
thing to check whether there's enough

00:45:21,189 --> 00:45:26,890
but usually it will come and bug you

00:45:23,319 --> 00:45:29,529
with errors if it's not enough by new

00:45:26,890 --> 00:45:31,329
statistics and headers vine is that

00:45:29,529 --> 00:45:34,089
varnish log are just opening up the

00:45:31,329 --> 00:45:35,949
front page and going to the chrome

00:45:34,089 --> 00:45:38,349
inspect element and looking at network

00:45:35,949 --> 00:45:40,719
and looking at whether the different

00:45:38,349 --> 00:45:43,179
items in there actually cached or not I

00:45:40,719 --> 00:45:44,919
was just looking at a page or site a

00:45:43,179 --> 00:45:47,140
couple of weeks back where I was like oh

00:45:44,919 --> 00:45:48,579
yeah this site is also midst you know

00:45:47,140 --> 00:45:51,159
they have thought about performance it's

00:45:48,579 --> 00:45:53,019
set up with CDN and with vine ish and

00:45:51,159 --> 00:45:55,299
all that stuff and then i looked at the

00:45:53,019 --> 00:45:56,589
front page just to get a feel of so why

00:45:55,299 --> 00:45:58,959
is it running slow and looked at the

00:45:56,589 --> 00:46:00,939
headers but it's not a single element in

00:45:58,959 --> 00:46:03,249
there that will actually get getting

00:46:00,939 --> 00:46:05,799
cached by niche was just a tunnel

00:46:03,249 --> 00:46:08,289
because caching was disabled so it was

00:46:05,799 --> 00:46:10,539
like sending the traffic to the CDN for

00:46:08,289 --> 00:46:12,159
DNS request center wine is where

00:46:10,539 --> 00:46:13,870
bindings will say oh yeah sure I know

00:46:12,159 --> 00:46:15,670
about that one no I don't have it

00:46:13,870 --> 00:46:18,610
posed to be cached ask the application

00:46:15,670 --> 00:46:24,010
like 200 times for each element that was

00:46:18,610 --> 00:46:25,690
great so and yeah then the memory

00:46:24,010 --> 00:46:28,810
profile of my july i mentioned earlier

00:46:25,690 --> 00:46:31,000
to figure out whether there is or how

00:46:28,810 --> 00:46:32,650
much memories actually need it I've also

00:46:31,000 --> 00:46:35,680
come across the sites quite a few times

00:46:32,650 --> 00:46:38,440
that had PSP memory limit says set to 2

00:46:35,680 --> 00:46:41,550
gigabytes but didn't even need it so

00:46:38,440 --> 00:46:44,860
maybe it only needed 64 megabytes so

00:46:41,550 --> 00:46:47,950
that's depending on how your server is

00:46:44,860 --> 00:46:51,220
set up or configured that could cause

00:46:47,950 --> 00:46:55,120
you to not get a lot of value for your

00:46:51,220 --> 00:46:57,700
hardware my squirrel query catching

00:46:55,120 --> 00:46:59,980
statistics whether that's we are

00:46:57,700 --> 00:47:02,830
actually get getting value or you're

00:46:59,980 --> 00:47:06,160
actually getting things cached PHP error

00:47:02,830 --> 00:47:10,110
settings and then I look at it locks

00:47:06,160 --> 00:47:12,580
also peach Pierrot log especially

00:47:10,110 --> 00:47:14,710
traffic reports if you have high number

00:47:12,580 --> 00:47:17,170
of 404 s and you're not using fire fast

00:47:14,710 --> 00:47:21,100
404 then you'll use a lot of juice on

00:47:17,170 --> 00:47:24,060
that it is in traffic reports PT's that

00:47:21,100 --> 00:47:27,160
shouldn't be there may be something is I

00:47:24,060 --> 00:47:29,470
don't know calling some random page on

00:47:27,160 --> 00:47:32,770
your site all the time that shouldn't

00:47:29,470 --> 00:47:35,440
get cold Google Analytics I might look

00:47:32,770 --> 00:47:38,020
at in that I actually really don't do it

00:47:35,440 --> 00:47:40,000
but yeah it might it might be good to if

00:47:38,020 --> 00:47:42,460
you can't find it anywhere else just to

00:47:40,000 --> 00:47:44,470
figure out so does Google think that the

00:47:42,460 --> 00:47:48,550
top pages are the same as I'm seeing in

00:47:44,470 --> 00:47:51,160
my traffic report I've I saw a site ones

00:47:48,550 --> 00:47:53,530
where the site was actually calling

00:47:51,160 --> 00:47:56,290
itself that was really funny or it was

00:47:53,530 --> 00:48:01,110
funny when you found out but there was a

00:47:56,290 --> 00:48:03,880
blog that had some coding error in it so

00:48:01,110 --> 00:48:06,130
so the the page was actually calling

00:48:03,880 --> 00:48:10,990
itself bootstrapping itself recursively

00:48:06,130 --> 00:48:13,300
that was a fun one the weirdest thing

00:48:10,990 --> 00:48:14,320
that I we found it and we fixed it quite

00:48:13,300 --> 00:48:16,180
quickly the weirdest thing that I

00:48:14,320 --> 00:48:18,190
couldn't figure out was why New Relic

00:48:16,180 --> 00:48:21,010
showed that as a tomb in to our

00:48:18,190 --> 00:48:24,580
22-minute page load was bit like how

00:48:21,010 --> 00:48:25,900
does it know when to stop so well later

00:48:24,580 --> 00:48:26,350
I found out that that was when this

00:48:25,900 --> 00:48:31,930
server

00:48:26,350 --> 00:48:35,050
went down so that was made sense so then

00:48:31,930 --> 00:48:37,450
there's also a tuning side of things and

00:48:35,050 --> 00:48:40,120
that's more on the upside but that's

00:48:37,450 --> 00:48:42,430
going in and figuring out okay what kind

00:48:40,120 --> 00:48:45,100
of hide why do we have here is it is it

00:48:42,430 --> 00:48:47,500
memory limited is it cpu limited how

00:48:45,100 --> 00:48:49,920
many processes should be running you

00:48:47,500 --> 00:48:55,660
know as opposed to how big is the server

00:48:49,920 --> 00:48:58,180
and memcache thighs a pc size that would

00:48:55,660 --> 00:49:01,840
be where i would call a colleague back

00:48:58,180 --> 00:49:05,200
in the day at aguiar same usually the

00:49:01,840 --> 00:49:07,840
guy that ride that boat the lovely

00:49:05,200 --> 00:49:15,480
memory profiler module and have him tell

00:49:07,840 --> 00:49:15,480
me so questions anyone I've got like

00:49:15,510 --> 00:49:19,300
1636 I've got like nine minutes left i

00:49:17,980 --> 00:49:28,980
think if you guys want to ask about

00:49:19,300 --> 00:49:28,980
stuff okay you can do that that's fine

00:49:32,099 --> 00:49:47,470
yeah if I try 18 h vm as an underlying

00:49:43,349 --> 00:49:51,099
PHP oh the question is whether I've

00:49:47,470 --> 00:49:52,450
tried HH vm as a replacement for PHP I

00:49:51,099 --> 00:49:54,359
don't even know what that is but it

00:49:52,450 --> 00:50:07,420
sounds awesome and I want to know more

00:49:54,359 --> 00:50:08,859
so we'll talk later yeah if you're going

00:50:07,420 --> 00:50:10,240
to say more than that needs to go there

00:50:08,859 --> 00:50:13,660
because I can't remember and repeat all

00:50:10,240 --> 00:50:20,680
that so and otherwise is not getting

00:50:13,660 --> 00:50:23,980
you're not getting you tubed hi so we've

00:50:20,680 --> 00:50:25,780
used hhv a min client projects not all

00:50:23,980 --> 00:50:28,599
of them because it's not a standard PHP

00:50:25,780 --> 00:50:30,250
and it regard quite a lot of testing to

00:50:28,599 --> 00:50:35,530
confirm that the clients project were

00:50:30,250 --> 00:50:37,569
working successfully and it does not it

00:50:35,530 --> 00:50:39,730
gives improvement in terms of pure pitch

00:50:37,569 --> 00:50:41,319
p performance that it gives all these

00:50:39,730 --> 00:50:44,920
nice things like just the time

00:50:41,319 --> 00:50:46,720
compilation and a lot of things so in

00:50:44,920 --> 00:50:49,089
terms of pitch basic ution it's fast but

00:50:46,720 --> 00:50:52,240
in most of the web applications logic is

00:50:49,089 --> 00:50:54,790
bound to external services like my scale

00:50:52,240 --> 00:50:57,069
memcache third party services or

00:50:54,790 --> 00:51:00,040
whatever it is so even though your pitch

00:50:57,069 --> 00:51:02,319
p is going to run 0.1 second faster your

00:51:00,040 --> 00:51:04,420
overall page speed won't improve because

00:51:02,319 --> 00:51:07,420
in the damage due to the external

00:51:04,420 --> 00:51:10,960
services and network delays so if your

00:51:07,420 --> 00:51:15,299
main page bottleneck is cpu and it is

00:51:10,960 --> 00:51:15,299
not based on network communication but

00:51:16,650 --> 00:51:23,230
just processing loops and custom logic

00:51:19,660 --> 00:51:26,040
that needs to do whatever it is then hhv

00:51:23,230 --> 00:51:26,040
might help you

00:51:30,369 --> 00:51:43,069
come sir okay hey are you planning for

00:51:36,400 --> 00:51:45,109
are aware of the black fire but not

00:51:43,069 --> 00:51:48,289
module the black fire tool from

00:51:45,109 --> 00:51:52,900
essential apps about the monitoring the

00:51:48,289 --> 00:51:56,210
app no as I I don't know that one

00:51:52,900 --> 00:52:02,269
another thing I need to look into teach

00:51:56,210 --> 00:52:04,760
me more so I've used near I like a lot

00:52:02,269 --> 00:52:07,309
and I have you ever found that sometimes

00:52:04,760 --> 00:52:10,519
in relic seems to give you information

00:52:07,309 --> 00:52:12,230
that seems to be false I mean like load

00:52:10,519 --> 00:52:14,150
times and stuff like that so I've been

00:52:12,230 --> 00:52:16,490
monitoring my side for over a year for

00:52:14,150 --> 00:52:18,440
it with it but occasionally I find I

00:52:16,490 --> 00:52:20,000
compare it to other tools I'm like all

00:52:18,440 --> 00:52:21,859
right I want to sanity check compare it

00:52:20,000 --> 00:52:23,720
to pingdom tools comparative web page to

00:52:21,859 --> 00:52:25,640
have stuff like that and what I get from

00:52:23,720 --> 00:52:28,220
nose is like it's just a lot doesn't

00:52:25,640 --> 00:52:31,700
always I what New Relic sometimes wants

00:52:28,220 --> 00:52:34,089
to tell me I think uh yeah I think that

00:52:31,700 --> 00:52:40,190
comes down to statistics and numbers and

00:52:34,089 --> 00:52:42,859
location and yeah because if for

00:52:40,190 --> 00:52:44,630
instance if i use web page tests or

00:52:42,859 --> 00:52:46,279
pingdom or something like that that's

00:52:44,630 --> 00:52:48,529
actually going to ping the application

00:52:46,279 --> 00:52:51,230
from somewhere and it's going to be

00:52:48,529 --> 00:52:52,940
really hard for me to compare those

00:52:51,230 --> 00:52:54,769
numbers i don't know when your elegant

00:52:52,940 --> 00:52:56,599
located but what new belly gives me is

00:52:54,769 --> 00:52:59,089
that i can look at the new relic numbers

00:52:56,599 --> 00:53:01,670
in a history containing other new early

00:52:59,089 --> 00:53:04,039
numbers if I need to make sense of web

00:53:01,670 --> 00:53:07,130
page test numbers then I will be paying

00:53:04,039 --> 00:53:09,799
this site from Dallas or from Stockholm

00:53:07,130 --> 00:53:12,890
or from whatnot so I need to do that

00:53:09,799 --> 00:53:15,799
repeatedly and then in the results i get

00:53:12,890 --> 00:53:19,670
there will be internet wins and weird

00:53:15,799 --> 00:53:22,400
lag and so ya know I don't find uralic

00:53:19,670 --> 00:53:23,779
unreliable as that when I've had

00:53:22,400 --> 00:53:26,119
something then usually it was me that

00:53:23,779 --> 00:53:30,019
needed to learn how statistics work like

00:53:26,119 --> 00:53:31,970
for instance at night time the cron job

00:53:30,019 --> 00:53:34,970
took out up a lot of the processing

00:53:31,970 --> 00:53:36,619
times was fun reasons since nothing else

00:53:34,970 --> 00:53:38,660
was happening on their people were

00:53:36,619 --> 00:53:40,180
sleeping so nothing wrong with the cron

00:53:38,660 --> 00:53:41,890
job it was just the only thing running

00:53:40,180 --> 00:53:43,720
and it shouldn't be because it was

00:53:41,890 --> 00:53:47,559
running from group that's a different

00:53:43,720 --> 00:53:49,780
story but ya know I don't find it to be

00:53:47,559 --> 00:53:53,290
unreliable not as not as such I don't

00:53:49,780 --> 00:53:56,260
see it as a precise I form I think it's

00:53:53,290 --> 00:53:57,970
really high to get precise numbers like

00:53:56,260 --> 00:54:10,450
that but if when you can see the history

00:53:57,970 --> 00:54:12,579
then that makes sense anybody else what

00:54:10,450 --> 00:54:16,720
what what strategies have you used to

00:54:12,579 --> 00:54:20,079
overcome Ajax requests using posts going

00:54:16,720 --> 00:54:23,200
through varnish or have you faced any of

00:54:20,079 --> 00:54:26,440
those issues i'm pretty sure i have i'm

00:54:23,200 --> 00:54:28,869
trying to dig through my mind I remember

00:54:26,440 --> 00:54:33,069
something with that it was killing us on

00:54:28,869 --> 00:54:34,630
and I can't remember what we did but I'm

00:54:33,069 --> 00:54:37,750
pretty sure I've solved that at least

00:54:34,630 --> 00:54:40,869
once or twice I can't remember I is it

00:54:37,750 --> 00:54:44,859
even solvable I don't know but yeah

00:54:40,869 --> 00:54:47,440
those are evil so we had well you have a

00:54:44,859 --> 00:54:53,349
solution for it oh no we have to rewrite

00:54:47,440 --> 00:54:55,839
some of the Drupal Ajax j/s but it

00:54:53,349 --> 00:55:00,690
wasn't the best way obviously there was

00:54:55,839 --> 00:55:06,099
not nothing really out there yeah um I

00:55:00,690 --> 00:55:08,020
can't remember what chaos module

00:55:06,099 --> 00:55:12,390
somebody's saying that there's a jay is

00:55:08,020 --> 00:55:12,390
module that would solve that okay I

00:55:13,440 --> 00:55:23,170
can't even hear you stand up the bagra

00:55:19,450 --> 00:55:25,619
phones right there we want to hear the

00:55:23,170 --> 00:55:29,740
Jays module gives really a good

00:55:25,619 --> 00:55:32,049
performance boost for all our jokes sm

00:55:29,740 --> 00:55:35,200
chronicle requests either was post or

00:55:32,049 --> 00:55:37,390
anything it was really helpful it really

00:55:35,200 --> 00:55:44,069
worked for me to really saved me thank

00:55:37,390 --> 00:55:44,069
you thank you so much anybody else yeah

00:55:59,640 --> 00:56:05,020
the question is whether there's any tips

00:56:02,620 --> 00:56:07,810
to optimize a website where there's a

00:56:05,020 --> 00:56:09,730
lot of forms on a page so and i'm

00:56:07,810 --> 00:56:12,730
guessing the thing is that well you can

00:56:09,730 --> 00:56:14,380
cash actually sort of look at you can't

00:56:12,730 --> 00:56:16,990
even cast showing the form because you

00:56:14,380 --> 00:56:20,710
need the unique ID but you definitely

00:56:16,990 --> 00:56:23,920
can't cash probably the answer is going

00:56:20,710 --> 00:56:25,750
to be different for each page or anyways

00:56:23,920 --> 00:56:42,520
anybody have tips for caching around

00:56:25,750 --> 00:56:44,170
forms i need to remember all that still

00:56:42,520 --> 00:56:47,740
you know that right now somebody's

00:56:44,170 --> 00:56:49,870
saying that all cash is should be a

00:56:47,740 --> 00:56:54,400
solution for that yeah please do thank

00:56:49,870 --> 00:56:59,290
you we should have done this as above so

00:56:54,400 --> 00:57:03,640
the workaround form caching might be

00:56:59,290 --> 00:57:07,060
possible through the out cash module it

00:57:03,640 --> 00:57:09,640
will allow you to to make us insurance

00:57:07,060 --> 00:57:13,210
requests actually get information for

00:57:09,640 --> 00:57:14,860
the form IDs and tokens so you'll be

00:57:13,210 --> 00:57:17,560
able to submit the forms even though you

00:57:14,860 --> 00:57:18,820
have cashed the whole page so you carry

00:57:17,560 --> 00:57:20,320
the whole page and make additional

00:57:18,820 --> 00:57:23,320
request of the backend to generate

00:57:20,320 --> 00:57:24,910
unique tokens so you'll be able to

00:57:23,320 --> 00:57:27,310
submit the forms even though the page is

00:57:24,910 --> 00:57:28,450
fully cached but it will be something

00:57:27,310 --> 00:57:30,850
that needs to be tested thoroughly

00:57:28,450 --> 00:57:35,310
because it's not a very standard

00:57:30,850 --> 00:57:38,310
solution it's a contributed module but

00:57:35,310 --> 00:57:38,310
sorry

00:57:40,920 --> 00:57:46,599
all the forms will be all the first

00:57:44,440 --> 00:57:49,330
require a unique form token to be

00:57:46,599 --> 00:57:54,030
submitted and this is a security bug fix

00:57:49,330 --> 00:57:56,349
with in Drupal 7 and above and old so

00:57:54,030 --> 00:57:58,330
what you need is to have this unique

00:57:56,349 --> 00:58:00,640
token on all pages when they are

00:57:58,330 --> 00:58:03,310
displayed and this is why you cannot

00:58:00,640 --> 00:58:07,840
cash pages with forms if you want to

00:58:03,310 --> 00:58:09,609
work with the forms on them and the

00:58:07,840 --> 00:58:11,740
solution there is to either disable the

00:58:09,609 --> 00:58:13,570
cash for the whole page or catch the

00:58:11,740 --> 00:58:16,060
page and generate a synchronously

00:58:13,570 --> 00:58:18,690
through a Jaczko unique tokens so you

00:58:16,060 --> 00:58:21,369
can submit the forms and there is no

00:58:18,690 --> 00:58:25,570
good work around so you either do this

00:58:21,369 --> 00:58:27,430
through an AC tag so you generate yes in

00:58:25,570 --> 00:58:32,190
varnish or you make this with a

00:58:27,430 --> 00:58:32,190
JavaScript so these are your two options

00:58:32,880 --> 00:58:37,810
well it's for any users yes if you won't

00:58:36,010 --> 00:58:40,270
catch the patient forms you need to

00:58:37,810 --> 00:58:42,190
generate dynamic form tokens either way

00:58:40,270 --> 00:58:43,720
perhaps we take that talk outside

00:58:42,190 --> 00:58:48,550
because I'm going to get thrown out here

00:58:43,720 --> 00:58:50,290
and like two seconds so yeah but come

00:58:48,550 --> 00:58:53,050
and catch me if you have more questions

00:58:50,290 --> 00:58:56,470
or say hi I teach me something I don't

00:58:53,050 --> 00:58:58,240
know so thank you so much for being here

00:58:56,470 --> 00:59:00,930
everyone I'm very happy to see you all

00:58:58,240 --> 00:59:00,930

YouTube URL: https://www.youtube.com/watch?v=2e2_S0E4OAM


