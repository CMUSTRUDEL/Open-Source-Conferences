Title: DrupalCon Barcelona 2015: Serving the Internet of Things (IoT) with Drupal
Publication date: 2015-09-22
Playlist: DrupalCon Barcelona - September 2015
Description: 
	Digitalization is accelerating and more and more services are going online. This also means that we have more and more different devices that do internet. All these services need your content (or your customer's content) fed into them.

Headless Drupal usually means we're just separating the theming layer to a front-end theming library. How about not having a head at all? How do you serve a plethora of different devices with Drupal? How do you provide all the necessary data, services and control without having any control of the front-end?

In this presentation we'll go through the basics of serving the Internet of Things with the help of a headless Drupal. We'll look on how it's done today with Drupal 7 and how much easier it is to do on Drupal 8. The presentation will focus on the architecture level of building a web distribution platform capable of serving all services needed.

The speaker has been working professionally with Drupal since version 5 and currently focuses on the architectures of challenging Drupal setups.
Captions: 
	00:00:00,000 --> 00:00:05,339
so my name is Carla juarez ville de and

00:00:03,000 --> 00:00:07,350
the technology directorate itself i'm

00:00:05,339 --> 00:00:15,870
going to talk about talk about serving

00:00:07,350 --> 00:00:17,340
the internet of things with drupal i'm

00:00:15,870 --> 00:00:20,220
gonna in this session I'm going to go

00:00:17,340 --> 00:00:23,760
through briefly on what's the internet

00:00:20,220 --> 00:00:28,289
of things in this aspect of this session

00:00:23,760 --> 00:00:34,350
because it's a password and everybody

00:00:28,289 --> 00:00:37,860
has their own idea of it i'm also going

00:00:34,350 --> 00:00:41,070
to try and open up horizons on what we

00:00:37,860 --> 00:00:43,559
can actually do with drupal and and you

00:00:41,070 --> 00:00:48,120
know how far limitations actually are on

00:00:43,559 --> 00:00:51,989
what you can do with drupal decision

00:00:48,120 --> 00:00:53,640
won't be technical but i'm going to let

00:00:51,989 --> 00:00:58,190
you feast your eyes on some

00:00:53,640 --> 00:01:04,619
architectural drawings on the session

00:00:58,190 --> 00:01:08,549
but so let's go to business what's the

00:01:04,619 --> 00:01:11,040
Internet of Things so it's a buzz word

00:01:08,549 --> 00:01:13,229
with a lot of meetings everybody has

00:01:11,040 --> 00:01:16,470
their own idea of what it means I've

00:01:13,229 --> 00:01:19,759
heard definitions ranging from you know

00:01:16,470 --> 00:01:24,420
anything other than computers to

00:01:19,759 --> 00:01:26,790
specific physical things doing something

00:01:24,420 --> 00:01:31,350
physical in in there in the physical

00:01:26,790 --> 00:01:34,740
world to get things aligned I'm going to

00:01:31,350 --> 00:01:36,210
define for this session it I'm not

00:01:34,740 --> 00:01:37,740
saying that this is the only true

00:01:36,210 --> 00:01:38,640
meaning of it I'm sorry I'm just saying

00:01:37,740 --> 00:01:43,560
that I'm going to use this as the

00:01:38,640 --> 00:01:46,290
definition in this session so usually we

00:01:43,560 --> 00:01:50,280
refer to all things gaining internet

00:01:46,290 --> 00:01:53,939
access from smartwatches two toasters I

00:01:50,280 --> 00:01:56,520
have never heard of a toaster that

00:01:53,939 --> 00:01:58,799
actually has an internet access that

00:01:56,520 --> 00:02:04,799
there might be one probably really

00:01:58,799 --> 00:02:06,600
useful in this presentation the

00:02:04,799 --> 00:02:09,179
definition is going to be everyday

00:02:06,600 --> 00:02:12,420
things connecting to the internet things

00:02:09,179 --> 00:02:17,380
that didn't didn't

00:02:12,420 --> 00:02:19,330
previously connect but these days do so

00:02:17,380 --> 00:02:23,260
things like home automation energy

00:02:19,330 --> 00:02:24,819
equipment wearables but also consumer

00:02:23,260 --> 00:02:28,600
electronics that are increasingly

00:02:24,819 --> 00:02:30,430
gaining internet connections let's take

00:02:28,600 --> 00:02:31,780
a look at a couple of examples to give

00:02:30,430 --> 00:02:35,770
you an idea of what I'm talking about

00:02:31,780 --> 00:02:39,190
here you all know nest nest is a home

00:02:35,770 --> 00:02:41,440
thermostat really famous one controls

00:02:39,190 --> 00:02:44,500
your home and learns how you live so it

00:02:41,440 --> 00:02:47,410
adjust it just to adjust sit just right

00:02:44,500 --> 00:02:49,390
there's a plethora of integrations

00:02:47,410 --> 00:02:58,540
available for it so it can control a lot

00:02:49,390 --> 00:03:01,780
of other things as well or or am sensor

00:02:58,540 --> 00:03:03,730
for your waste container it's going to

00:03:01,780 --> 00:03:05,890
call the people to empty it when it's

00:03:03,730 --> 00:03:08,800
full that's pretty straightforward

00:03:05,890 --> 00:03:12,940
simple there's a web service where you

00:03:08,800 --> 00:03:16,239
can check your expected feel updates for

00:03:12,940 --> 00:03:20,290
your waste containers and stuff that's

00:03:16,239 --> 00:03:24,100
the Internet of Things that's not as

00:03:20,290 --> 00:03:26,890
holster it's a fridge I find this really

00:03:24,100 --> 00:03:31,420
awesome by the way I still don't find

00:03:26,890 --> 00:03:33,910
any purpose for it but also it's it's a

00:03:31,420 --> 00:03:37,600
it's a samsung fridge that has an

00:03:33,910 --> 00:03:40,120
internet connection it has a some kind

00:03:37,600 --> 00:03:43,079
of a proprietary software that you can

00:03:40,120 --> 00:03:46,420
you know do apps and stuff like like

00:03:43,079 --> 00:03:50,680
samsung smart tvs it also got hacked a

00:03:46,420 --> 00:03:52,150
couple of weeks ago because they don't

00:03:50,680 --> 00:03:57,430
check the ssl certificates of

00:03:52,150 --> 00:03:58,840
authenticity which is kind of bad but

00:03:57,430 --> 00:04:04,660
yeah

00:03:58,840 --> 00:04:08,590
there's another one that's a rifle that

00:04:04,660 --> 00:04:15,760
you can aim with with a computer or an

00:04:08,590 --> 00:04:20,949
iPad it also got hacked which sounds a

00:04:15,760 --> 00:04:25,060
bit scary genuinely scary you can rename

00:04:20,949 --> 00:04:29,949
it with via via the hack which sounds

00:04:25,060 --> 00:04:33,340
even scarier but yeah I hope I hope well

00:04:29,949 --> 00:04:38,440
yeah it's mind-blowing I hope not

00:04:33,340 --> 00:04:43,560
literally so let's go to the business

00:04:38,440 --> 00:04:43,560
why what does my fridge need triple for

00:04:43,979 --> 00:04:49,570
let's go through what what Drupal offers

00:04:46,780 --> 00:04:52,900
i'll try to tell it from the perspective

00:04:49,570 --> 00:04:56,770
of a fridge triple offers a platform for

00:04:52,900 --> 00:05:00,340
content say your fridge wants to list

00:04:56,770 --> 00:05:03,760
you product information from a grocery

00:05:00,340 --> 00:05:07,060
store that delivers that would be kind

00:05:03,760 --> 00:05:11,200
of convenient i guess like your fridge

00:05:07,060 --> 00:05:15,490
show you what's available from your

00:05:11,200 --> 00:05:17,590
local grocery store it offers you a

00:05:15,490 --> 00:05:23,289
platform for easily controllable data

00:05:17,590 --> 00:05:27,820
structures and data in it that would be

00:05:23,289 --> 00:05:30,160
like maybe recipes that the fridge could

00:05:27,820 --> 00:05:32,410
maybe offer based on what's in your

00:05:30,160 --> 00:05:33,669
fridge right now the samsung fridge

00:05:32,410 --> 00:05:35,860
pride way it doesn't know what's in your

00:05:33,669 --> 00:05:40,300
fridge as far as i know i hope it

00:05:35,860 --> 00:05:44,380
doesn't but it just shows you other

00:05:40,300 --> 00:05:46,450
stuff I guess drupal offers fine-grained

00:05:44,380 --> 00:05:51,550
user control and access control so you

00:05:46,450 --> 00:05:55,870
can control the access to to a shop for

00:05:51,550 --> 00:05:59,229
grocery store for three items it offers

00:05:55,870 --> 00:06:03,400
a platform for online stores commerce

00:05:59,229 --> 00:06:05,020
and then it offers you know

00:06:03,400 --> 00:06:08,260
user-generated content and stuff like

00:06:05,020 --> 00:06:11,440
that so you can even have your grocery

00:06:08,260 --> 00:06:12,490
store shop on your fridge show user

00:06:11,440 --> 00:06:15,990
reviews

00:06:12,490 --> 00:06:22,030
so that you can select the best yogurt

00:06:15,990 --> 00:06:26,710
by your peers so what you need is it is

00:06:22,030 --> 00:06:29,740
a Drupal that works as a back end until

00:06:26,710 --> 00:06:31,599
Drupal 8 old rebels were really kind of

00:06:29,740 --> 00:06:34,919
web content management system so they

00:06:31,599 --> 00:06:39,479
were returning HTML when you requested

00:06:34,919 --> 00:06:44,470
something with HTTP like get or post

00:06:39,479 --> 00:06:46,539
Drupal 8 changes this although earlier

00:06:44,470 --> 00:06:50,979
Drupal's can be made to do the same

00:06:46,539 --> 00:06:54,310
basically at least seven but the Drupal

00:06:50,979 --> 00:06:58,030
8 is the first that that's not directly

00:06:54,310 --> 00:07:01,419
aimed at coupling HTML with with your

00:06:58,030 --> 00:07:03,550
data that's stored inside so if you

00:07:01,419 --> 00:07:07,120
remove your front end from your Drupal

00:07:03,550 --> 00:07:08,800
it becomes the content and they save

00:07:07,120 --> 00:07:14,080
service platform and it's pretty

00:07:08,800 --> 00:07:26,259
powerful in that it can do a lot more

00:07:14,080 --> 00:07:29,190
than just web pages decoupling the HTML

00:07:26,259 --> 00:07:32,080
layer that we call headless triple

00:07:29,190 --> 00:07:34,210
that's something that was aimed for the

00:07:32,080 --> 00:07:36,520
flexibility of the front end so we

00:07:34,210 --> 00:07:40,060
wanted to build like really a polite

00:07:36,520 --> 00:07:43,120
from dense or have full control of your

00:07:40,060 --> 00:07:47,310
front end or develop it faster or you

00:07:43,120 --> 00:07:49,569
know I don't know all these things and

00:07:47,310 --> 00:07:55,000
it's you know still used for that

00:07:49,569 --> 00:07:57,400
obviously we're currently building one

00:07:55,000 --> 00:08:00,639
side that has a headless tuple and then

00:07:57,400 --> 00:08:02,949
it has like a node.js layer and react an

00:08:00,639 --> 00:08:08,050
isomorphic rendering in you know all the

00:08:02,949 --> 00:08:11,169
hype words in the same project but it

00:08:08,050 --> 00:08:14,650
also makes Drupal fully capable of

00:08:11,169 --> 00:08:20,229
connecting to any system that can read

00:08:14,650 --> 00:08:23,260
its data so when dree said that like

00:08:20,229 --> 00:08:24,820
full decoupling works in only very

00:08:23,260 --> 00:08:30,100
narrow cases

00:08:24,820 --> 00:08:33,460
this would be those cases but let's look

00:08:30,100 --> 00:08:37,539
at some examples these are just to give

00:08:33,460 --> 00:08:43,240
you an idea of why and what you might

00:08:37,539 --> 00:08:45,580
you know consider to use Drupal for in a

00:08:43,240 --> 00:08:48,790
system where there's different connected

00:08:45,580 --> 00:08:51,520
devices and this is these are imaginary

00:08:48,790 --> 00:08:53,260
examples I'm not saying we wouldn't be

00:08:51,520 --> 00:08:56,010
building something like this but I can't

00:08:53,260 --> 00:09:02,350
also say that we would be building

00:08:56,010 --> 00:09:04,060
anyway the real world is not as clean as

00:09:02,350 --> 00:09:09,670
these examples let's let's put it that

00:09:04,060 --> 00:09:11,710
way here's an example health monitoring

00:09:09,670 --> 00:09:14,110
service so heavy you have your smart

00:09:11,710 --> 00:09:17,430
tracking device on your wrist then he

00:09:14,110 --> 00:09:19,750
used you store that data somehow outside

00:09:17,430 --> 00:09:23,680
there's a web application where you can

00:09:19,750 --> 00:09:25,630
check your activity and stuff and then

00:09:23,680 --> 00:09:27,580
there might be an health app in your

00:09:25,630 --> 00:09:31,420
phone that also delivers that

00:09:27,580 --> 00:09:34,540
information you can store all the

00:09:31,420 --> 00:09:35,800
textual content into NT triple but what

00:09:34,540 --> 00:09:38,260
two ball offers for these kind of

00:09:35,800 --> 00:09:41,650
service this kind of service would be

00:09:38,260 --> 00:09:45,240
stored data storage services generating

00:09:41,650 --> 00:09:47,770
reports for the data user profiles

00:09:45,240 --> 00:09:50,620
social connections between your friends

00:09:47,770 --> 00:09:53,560
so you can share data between my friends

00:09:50,620 --> 00:09:57,100
as well automatic emails reminders push

00:09:53,560 --> 00:10:00,340
notifications just think about the

00:09:57,100 --> 00:10:05,020
options that you can get pretty much you

00:10:00,340 --> 00:10:08,620
know Don free from Drupal for this you

00:10:05,020 --> 00:10:11,010
can't ignore that let's take another

00:10:08,620 --> 00:10:11,010
example

00:10:16,440 --> 00:10:21,970
this would be a self-service gym so

00:10:19,540 --> 00:10:24,310
there's a mobile site there's a smart

00:10:21,970 --> 00:10:28,410
lock in the door of the gym so you can

00:10:24,310 --> 00:10:31,510
get in via the mobile site so that

00:10:28,410 --> 00:10:33,760
either you have a pass code for the lock

00:10:31,510 --> 00:10:35,260
or it's actually you know connected to

00:10:33,760 --> 00:10:37,720
the side so you can go and click it open

00:10:35,260 --> 00:10:39,610
there are looks like that on the market

00:10:37,720 --> 00:10:42,040
plenty of them different locks that you

00:10:39,610 --> 00:10:44,020
can use you need an app for opening and

00:10:42,040 --> 00:10:47,140
doors and if you lose your phone then

00:10:44,020 --> 00:10:54,010
you're out of luck but that happens

00:10:47,140 --> 00:10:55,930
also if you lose your keys so in this

00:10:54,010 --> 00:10:57,880
situation triple would offer a shop with

00:10:55,930 --> 00:10:59,560
connections to pavement payment gateways

00:10:57,880 --> 00:11:02,110
different roles for different users say

00:10:59,560 --> 00:11:04,090
if you get a gym membership that you can

00:11:02,110 --> 00:11:07,690
only use during workdays during that day

00:11:04,090 --> 00:11:10,390
time of workdays reminder email

00:11:07,690 --> 00:11:11,710
statistics work out reminders for users

00:11:10,390 --> 00:11:15,730
again you know there's a lot of

00:11:11,710 --> 00:11:18,280
possibilities here and this is what we

00:11:15,730 --> 00:11:23,200
pre fleet artists here as an example for

00:11:18,280 --> 00:11:27,120
that beloved fridge a nap in a connected

00:11:23,200 --> 00:11:31,180
fridge that can you know let you order

00:11:27,120 --> 00:11:32,860
groceries while staying on the rabbit is

00:11:31,180 --> 00:11:34,540
actually the samsung fridge you can open

00:11:32,860 --> 00:11:36,430
the door and it's still the app is right

00:11:34,540 --> 00:11:38,800
there so you can see to the fridge and

00:11:36,430 --> 00:11:42,100
still you know click away that's how it

00:11:38,800 --> 00:11:44,650
works the freezer is I guess behind the

00:11:42,100 --> 00:11:48,280
app then thing that you need to refill

00:11:44,650 --> 00:11:51,100
separate thing I don't know but this is

00:11:48,280 --> 00:11:52,780
again a full-blown online store and

00:11:51,100 --> 00:11:55,030
there's no reason really if you would

00:11:52,780 --> 00:11:57,280
have an app on a fridge that allows you

00:11:55,030 --> 00:12:01,570
to buy groceries why wouldn't you have

00:11:57,280 --> 00:12:06,580
the same shop also as a web service

00:12:01,570 --> 00:12:08,380
online and then you could also serve the

00:12:06,580 --> 00:12:10,570
people who have their you know ipad

00:12:08,380 --> 00:12:14,710
connect just attached to their fridge

00:12:10,570 --> 00:12:17,890
door I've seen those but in the real

00:12:14,710 --> 00:12:21,100
world as I said it's not that clean and

00:12:17,890 --> 00:12:24,010
simple to explain but the tongue that

00:12:21,100 --> 00:12:27,240
things we've done with different aisle

00:12:24,010 --> 00:12:27,240
team implementations

00:12:27,740 --> 00:12:37,050
we've done Smart TVs for instance an API

00:12:32,520 --> 00:12:42,780
feeding Drupal information I would like

00:12:37,050 --> 00:12:44,430
triple content out to small tvs also

00:12:42,780 --> 00:12:48,510
that needed some special arrangements

00:12:44,430 --> 00:12:50,040
for the Smart TVs so usually the we'll

00:12:48,510 --> 00:12:51,750
get to that later but usually the things

00:12:50,040 --> 00:12:53,250
aren't you know that stay forward as you

00:12:51,750 --> 00:12:57,600
would think again that's a real word

00:12:53,250 --> 00:13:02,250
world here we've done medical wrists

00:12:57,600 --> 00:13:05,610
alarm devices again that those things

00:13:02,250 --> 00:13:09,960
don't speak rest we get to that later as

00:13:05,610 --> 00:13:15,930
well and then we've done handheld golf

00:13:09,960 --> 00:13:19,170
gaming devices which had part of the

00:13:15,930 --> 00:13:21,060
stuff was working to Drupal so and we're

00:13:19,170 --> 00:13:25,890
currently building another triple

00:13:21,060 --> 00:13:28,680
enabled feed that that also is directed

00:13:25,890 --> 00:13:31,410
at feeding feeding machines we don't

00:13:28,680 --> 00:13:35,520
know what machines yet but I hope we'll

00:13:31,410 --> 00:13:40,350
get to that part later so how do we do

00:13:35,520 --> 00:13:43,320
this I can let you in in a bit of a

00:13:40,350 --> 00:13:45,660
secret it's not that hard really you

00:13:43,320 --> 00:13:49,110
just have to have the courage to do it

00:13:45,660 --> 00:13:50,790
with Drupal you feel like Drupal is for

00:13:49,110 --> 00:13:51,990
the web it's not for the web it can do a

00:13:50,790 --> 00:13:54,260
lot of other things as well you just

00:13:51,990 --> 00:13:59,840
need to have the balls to sell it for

00:13:54,260 --> 00:14:03,480
this purpose but yeah serving machines

00:13:59,840 --> 00:14:06,540
easiest approach a REST API this is

00:14:03,480 --> 00:14:09,060
hugely popular these days talking about

00:14:06,540 --> 00:14:13,400
rest api eyes and stuff but that's what

00:14:09,060 --> 00:14:17,520
it is triple 7 has modules for serving

00:14:13,400 --> 00:14:20,700
data out with rest like services WS

00:14:17,520 --> 00:14:23,760
restful day as module enter point if you

00:14:20,700 --> 00:14:26,400
want something more exotic they also

00:14:23,760 --> 00:14:30,000
partially bootstrap to also you can get

00:14:26,400 --> 00:14:34,320
performance gains with them triple eight

00:14:30,000 --> 00:14:38,730
ships with with a rest module in core if

00:14:34,320 --> 00:14:40,440
you want to find good comparison or well

00:14:38,730 --> 00:14:43,110
yeah a good compressing of

00:14:40,440 --> 00:14:46,680
rest modules there was a session by

00:14:43,110 --> 00:14:50,010
Constantine commelina indicate marcelina

00:14:46,680 --> 00:14:53,490
in Drupal con camp politics a couple of

00:14:50,010 --> 00:15:02,600
weeks ago so you can find it online you

00:14:53,490 --> 00:15:02,600
can check that out any service

00:15:07,580 --> 00:15:12,400
what does that sentence even mean let's

00:15:09,980 --> 00:15:16,820
go to the next line for example Drupal 8

00:15:12,400 --> 00:15:18,920
well yeah so jubilate rest api's are

00:15:16,820 --> 00:15:20,660
really you know drupal specific if you

00:15:18,920 --> 00:15:22,730
if you look at the upcoming from a

00:15:20,660 --> 00:15:25,430
Triple H rest api it has a lot of things

00:15:22,730 --> 00:15:28,060
that's you know if you don't if you're

00:15:25,430 --> 00:15:32,870
not a drupal developer you'll be like

00:15:28,060 --> 00:15:34,760
you know really pondering on what what

00:15:32,870 --> 00:15:36,530
is what is this all about what what what

00:15:34,760 --> 00:15:38,120
kind of feels there's a lot of fields

00:15:36,530 --> 00:15:40,340
that that have something to do with

00:15:38,120 --> 00:15:45,740
drupal and not that much with the actual

00:15:40,340 --> 00:15:48,020
data so geez even mentioned that in the

00:15:45,740 --> 00:15:49,460
tree is not today he said that there's

00:15:48,020 --> 00:15:51,260
either too much stuff for too little

00:15:49,460 --> 00:15:54,950
stuffer you need to do multiple calls to

00:15:51,260 --> 00:15:56,780
get get information so you should

00:15:54,950 --> 00:15:58,640
separate your Drupal's internal data

00:15:56,780 --> 00:16:02,020
structures from the actual API you sir

00:15:58,640 --> 00:16:05,900
serving out so that your API is good and

00:16:02,020 --> 00:16:08,930
also that's that's you know kind of what

00:16:05,900 --> 00:16:11,960
it's all about so the API should just be

00:16:08,930 --> 00:16:14,510
for the API and not for any any of the

00:16:11,960 --> 00:16:16,340
systems and I'm not saying that you

00:16:14,510 --> 00:16:18,500
should separate them for security

00:16:16,340 --> 00:16:21,350
purposes because that's just stupid I

00:16:18,500 --> 00:16:23,840
hate when someone tells me tells me that

00:16:21,350 --> 00:16:25,760
you can see the internal data structure

00:16:23,840 --> 00:16:27,980
from there yeah you can see the internal

00:16:25,760 --> 00:16:30,950
data structure that's security due to

00:16:27,980 --> 00:16:37,720
obscurity and that's nonsense doesn't

00:16:30,950 --> 00:16:41,720
really secure anything from anyone um

00:16:37,720 --> 00:16:43,730
okay so a proper rest api follows the

00:16:41,720 --> 00:16:48,950
rest api rules they're stateless

00:16:43,730 --> 00:16:51,380
cacheable layered uniform it also need

00:16:48,950 --> 00:16:55,250
to be well documented if you're serving

00:16:51,380 --> 00:16:57,470
out stuff from an API it's paramount I'd

00:16:55,250 --> 00:17:01,400
say to have a good up-to-date

00:16:57,470 --> 00:17:04,730
documentation you can use a web page you

00:17:01,400 --> 00:17:08,209
can use some services online for it like

00:17:04,730 --> 00:17:10,580
apiary swagger you can use markdown to

00:17:08,209 --> 00:17:16,800
do your documentation convert convert it

00:17:10,580 --> 00:17:20,730
to everything it needs to be secure

00:17:16,800 --> 00:17:23,280
so you can do if you have a real Drupal

00:17:20,730 --> 00:17:25,380
API that offers access to let's say

00:17:23,280 --> 00:17:27,120
internal systems behind it it can you

00:17:25,380 --> 00:17:30,230
can do very dangerous things with with

00:17:27,120 --> 00:17:34,680
itself need to take on consider that you

00:17:30,230 --> 00:17:36,990
really thoroughly and then you should

00:17:34,680 --> 00:17:39,360
take into account that when you have an

00:17:36,990 --> 00:17:41,760
API you should always have either

00:17:39,360 --> 00:17:43,500
versioning or it should be backwards

00:17:41,760 --> 00:17:47,130
compatible I can tell you from

00:17:43,500 --> 00:17:49,370
experience that I would I always prefer

00:17:47,130 --> 00:17:52,710
versioning even though it's a hassle

00:17:49,370 --> 00:17:56,160
because backwards compatibility just you

00:17:52,710 --> 00:18:00,750
know has you carrying out that legacy

00:17:56,160 --> 00:18:02,460
stuff for 80s and years and it's but I

00:18:00,750 --> 00:18:10,620
understand people who have to do that as

00:18:02,460 --> 00:18:12,600
well it's okay mmm an open API with the

00:18:10,620 --> 00:18:14,790
proper documentation is a good way to

00:18:12,600 --> 00:18:19,770
open up your resources for all the

00:18:14,790 --> 00:18:23,970
network things out there but that's not

00:18:19,770 --> 00:18:25,740
nearly enough usually many times there's

00:18:23,970 --> 00:18:27,720
something totally different you'll have

00:18:25,740 --> 00:18:29,100
to integrate too so there's no device

00:18:27,720 --> 00:18:31,170
that can you know you can just tell that

00:18:29,100 --> 00:18:34,170
developer that will I have a rest api

00:18:31,170 --> 00:18:38,510
just read my API get the content from

00:18:34,170 --> 00:18:40,470
there no actually this you know

00:18:38,510 --> 00:18:41,550
something really old happening in the

00:18:40,470 --> 00:18:47,520
other end and you'll have to do the

00:18:41,550 --> 00:18:49,080
architecture all the way around in my

00:18:47,520 --> 00:18:50,790
experience that the difference between

00:18:49,080 --> 00:18:52,890
different clients comes from the

00:18:50,790 --> 00:18:56,370
computing power available or that or the

00:18:52,890 --> 00:18:58,620
kind of maturity of the of the computing

00:18:56,370 --> 00:19:01,460
platform if it's a if it's a like a

00:18:58,620 --> 00:19:04,410
handheld device built by a customer

00:19:01,460 --> 00:19:06,510
themselves and they write some really

00:19:04,410 --> 00:19:09,440
low level stuff on this they might be

00:19:06,510 --> 00:19:12,390
really reluctant to follow like the good

00:19:09,440 --> 00:19:16,620
principles of rest ever they just offer

00:19:12,390 --> 00:19:19,340
you some you know binary proprietary

00:19:16,620 --> 00:19:24,480
format that you'd have to read maybe

00:19:19,340 --> 00:19:26,430
decipher and cipher again if you have us

00:19:24,480 --> 00:19:28,230
like a small TV on the other end that's

00:19:26,430 --> 00:19:29,910
a programming platform that can do a lot

00:19:28,230 --> 00:19:30,400
of things so this like system level

00:19:29,910 --> 00:19:32,860
service

00:19:30,400 --> 00:19:37,060
for accessing rest api's shouldn't be a

00:19:32,860 --> 00:19:39,640
problem if you have a really small wrist

00:19:37,060 --> 00:19:42,490
wrist watch sighs thing but not an Apple

00:19:39,640 --> 00:19:47,010
watch I'm saying like really more like a

00:19:42,490 --> 00:19:51,040
stupid watch then it's it becomes that

00:19:47,010 --> 00:19:56,910
bill being in a mess of deciphering and

00:19:51,040 --> 00:19:56,910
ciphering binary things back and forth

00:20:00,630 --> 00:20:05,310
and if you're connecting the other way

00:20:03,660 --> 00:20:07,980
around so you'll have to connect to all

00:20:05,310 --> 00:20:10,200
the services although all the systems

00:20:07,980 --> 00:20:14,430
around there's I push information from

00:20:10,200 --> 00:20:15,960
Drupal to the other way it's totally

00:20:14,430 --> 00:20:19,290
different than connecting to servers

00:20:15,960 --> 00:20:22,800
running in server holes because it's

00:20:19,290 --> 00:20:26,640
it's a appalling performance available

00:20:22,800 --> 00:20:34,110
on the other end like almost useless

00:20:26,640 --> 00:20:36,660
network reliability and you might be

00:20:34,110 --> 00:20:39,390
connecting to a lot of them but it's

00:20:36,660 --> 00:20:42,270
like out your perfect API blueprints and

00:20:39,390 --> 00:20:47,670
and you know then you just go and do a

00:20:42,270 --> 00:20:53,250
really well specific implementation of a

00:20:47,670 --> 00:20:56,960
perform at connecting there but when I'm

00:20:53,250 --> 00:20:56,960
whenever you're connecting to machines

00:20:57,050 --> 00:21:02,010
there's this there's an architecture

00:20:59,670 --> 00:21:06,030
that you need to consider performance

00:21:02,010 --> 00:21:08,010
persistence and security the connection

00:21:06,030 --> 00:21:11,280
architecture is important you have to at

00:21:08,010 --> 00:21:13,710
least have some kind of queuing process

00:21:11,280 --> 00:21:15,390
to prevent losing the connections losing

00:21:13,710 --> 00:21:18,900
data because the connections are

00:21:15,390 --> 00:21:21,330
unreliable always more eagle elegant

00:21:18,900 --> 00:21:24,150
approach would be to use some kind of a

00:21:21,330 --> 00:21:26,490
queuing message queue system that might

00:21:24,150 --> 00:21:28,700
be a bit better you can still integrate

00:21:26,490 --> 00:21:31,080
triple into them it's not a problem if

00:21:28,700 --> 00:21:32,940
the other end can use something like

00:21:31,080 --> 00:21:34,410
that and then the then the messaging

00:21:32,940 --> 00:21:36,860
system takes care of your message is

00:21:34,410 --> 00:21:36,860
going through

00:21:38,890 --> 00:21:46,120
I personally use a considerable time

00:21:43,450 --> 00:21:47,580
time of architecture design every time

00:21:46,120 --> 00:21:50,770
we have a situation where there's

00:21:47,580 --> 00:21:55,090
questions about performance reliability

00:21:50,770 --> 00:21:59,980
that kind of stuff and then you just

00:21:55,090 --> 00:22:01,540
have to adjust it along the way a lot of

00:21:59,980 --> 00:22:06,940
times and you have to make compromises

00:22:01,540 --> 00:22:09,610
and stuff okay let's talk a bit about

00:22:06,940 --> 00:22:11,320
content as a service because that's what

00:22:09,610 --> 00:22:14,200
we're doing here we're serving content

00:22:11,320 --> 00:22:20,740
but we do it as a service so we're just

00:22:14,200 --> 00:22:22,740
serving content not HTML pages take a

00:22:20,740 --> 00:22:25,960
short plunge with Drupal architectures

00:22:22,740 --> 00:22:27,820
it's an evolution of sorts but it's not

00:22:25,960 --> 00:22:33,190
something that you would always end up

00:22:27,820 --> 00:22:35,500
at the bottom of it but you know there

00:22:33,190 --> 00:22:39,130
was a time which is the tuple website

00:22:35,500 --> 00:22:44,290
was enough there are still many times

00:22:39,130 --> 00:22:47,950
like that but then he needed a couple of

00:22:44,290 --> 00:22:50,250
integrations you just put varnish up

00:22:47,950 --> 00:22:55,020
front and it's your really typical

00:22:50,250 --> 00:22:59,140
triple implementation integrate system

00:22:55,020 --> 00:23:04,420
standard CRM and a non-standard ERP in

00:22:59,140 --> 00:23:07,810
my experience and then there's a mobile

00:23:04,420 --> 00:23:12,100
app which you need to serve either you

00:23:07,810 --> 00:23:15,400
know HTML or or adjacent view or

00:23:12,100 --> 00:23:18,250
something from tuple you can always have

00:23:15,400 --> 00:23:22,660
a rest api at this phase as well but

00:23:18,250 --> 00:23:27,630
when you do a rest api you might go you

00:23:22,660 --> 00:23:27,630
know all the way headless and

00:23:28,790 --> 00:23:32,450
why if you're going headless anyway you

00:23:30,950 --> 00:23:37,340
can you know serve all the things as

00:23:32,450 --> 00:23:40,190
well it don't don't limit yourself so

00:23:37,340 --> 00:23:42,770
this is this is where we add in you know

00:23:40,190 --> 00:23:44,810
where we are at in an include situation

00:23:42,770 --> 00:23:47,870
where we you know we have systems that

00:23:44,810 --> 00:23:52,730
can read a proper route well documented

00:23:47,870 --> 00:23:58,780
API and there's no problems serving all

00:23:52,730 --> 00:23:58,780
your Drupal content out there and if

00:23:59,470 --> 00:24:06,320
Drupal can't can perform then there's

00:24:02,330 --> 00:24:09,190
the option of moving it behind as part

00:24:06,320 --> 00:24:12,320
of the enterprise system level you know

00:24:09,190 --> 00:24:18,910
background services and then use

00:24:12,320 --> 00:24:18,910
somethin else to aggregate the API and

00:24:22,360 --> 00:24:30,850
that's something I'm going to talk about

00:24:24,190 --> 00:24:32,860
briefly here so sometimes you have the

00:24:30,850 --> 00:24:34,780
need to build an external API you can't

00:24:32,860 --> 00:24:37,000
use Drupal for it because this like too

00:24:34,780 --> 00:24:42,210
much stuff that you'd have to build on

00:24:37,000 --> 00:24:44,260
Drupal or the to specific proprietary

00:24:42,210 --> 00:24:46,980
connection architecture that you have to

00:24:44,260 --> 00:24:52,050
follow that might need for instance

00:24:46,980 --> 00:24:56,880
callbacks or or you know event-based

00:24:52,050 --> 00:25:01,420
handling of of stuff going to in and out

00:24:56,880 --> 00:25:04,870
I've had this talk about accelerating

00:25:01,420 --> 00:25:08,700
headless trouble with node.js and in the

00:25:04,870 --> 00:25:14,290
Indies talk I did mention this or

00:25:08,700 --> 00:25:18,910
explain this a bit further how you build

00:25:14,290 --> 00:25:22,270
an external API so building an external

00:25:18,910 --> 00:25:25,270
API in this approach you index all your

00:25:22,270 --> 00:25:30,700
content outside of triple every time

00:25:25,270 --> 00:25:35,290
it's edited mmm to a MongoDB or you know

00:25:30,700 --> 00:25:37,810
solar elasticsearch readies to index

00:25:35,290 --> 00:25:41,920
your stuff to MongoDB there's a there's

00:25:37,810 --> 00:25:43,930
a module for it we did one module for i

00:25:41,920 --> 00:25:45,820
will be using from for multiple

00:25:43,930 --> 00:25:49,360
production environments now called

00:25:45,820 --> 00:25:51,520
MongoDB indexer it's just storing all

00:25:49,360 --> 00:25:53,320
your all your content outside of triple

00:25:51,520 --> 00:25:57,670
or you can configure what content it

00:25:53,320 --> 00:26:00,700
stores outside of Triple M in this in

00:25:57,670 --> 00:26:04,540
this case rights coming back they pass

00:26:00,700 --> 00:26:06,820
to the platform to Drupal or even

00:26:04,540 --> 00:26:10,750
directly to triple or then you can view

00:26:06,820 --> 00:26:13,090
them in the external API system and then

00:26:10,750 --> 00:26:16,390
execute them one by one in Drupal so

00:26:13,090 --> 00:26:21,970
that the triple won't be dead under the

00:26:16,390 --> 00:26:27,580
weight of the traffic the rights might

00:26:21,970 --> 00:26:30,070
become problematic because you have to

00:26:27,580 --> 00:26:31,990
write a lot of extra code for handling

00:26:30,070 --> 00:26:33,940
their rights into triple if there's a

00:26:31,990 --> 00:26:34,830
lot of rights then you'd have to think

00:26:33,940 --> 00:26:36,330
of an architect

00:26:34,830 --> 00:26:38,309
where it's better but this is usually

00:26:36,330 --> 00:26:40,919
the case that you get like ten percent

00:26:38,309 --> 00:26:48,690
of Rights and ninety percent of feeding

00:26:40,919 --> 00:26:50,960
out data you might have something stored

00:26:48,690 --> 00:26:54,870
already on the young no.js layer or

00:26:50,960 --> 00:26:56,549
acceleration layer external API layer is

00:26:54,870 --> 00:27:04,169
built performance oriented with like

00:26:56,549 --> 00:27:05,970
node.js but this is only for content

00:27:04,169 --> 00:27:08,090
although I was that the whole talk is

00:27:05,970 --> 00:27:10,350
about content and delivering content but

00:27:08,090 --> 00:27:12,149
sometimes you need some other services

00:27:10,350 --> 00:27:13,769
from triple because Drupal offers a lot

00:27:12,149 --> 00:27:17,870
of services outside of content as well

00:27:13,769 --> 00:27:22,889
so there's on vacation this you know

00:27:17,870 --> 00:27:27,210
user roles user groups user friends

00:27:22,889 --> 00:27:29,909
connections all those services would be

00:27:27,210 --> 00:27:31,590
needed to be cached on the API layer and

00:27:29,909 --> 00:27:33,179
that's there's no module for that at

00:27:31,590 --> 00:27:38,669
least yet we've been pondering on

00:27:33,179 --> 00:27:43,110
creating one but that's well what do you

00:27:38,669 --> 00:27:45,960
gain from an external API on on in you

00:27:43,110 --> 00:27:47,940
know in front of Drupal is you have the

00:27:45,960 --> 00:27:51,840
full control of the API so then you can

00:27:47,940 --> 00:27:55,470
you know use a version in user you can

00:27:51,840 --> 00:27:58,889
aggregate the different sources from

00:27:55,470 --> 00:28:01,169
ERPs is this a real world case we have

00:27:58,889 --> 00:28:04,620
like six different background systems

00:28:01,169 --> 00:28:07,490
that we aggregate information to an

00:28:04,620 --> 00:28:10,230
acceleration layer serving our data and

00:28:07,490 --> 00:28:13,169
you'll get place in performance if you

00:28:10,230 --> 00:28:19,159
do it right here's proof this is an

00:28:13,169 --> 00:28:25,940
actual screenshot from from a

00:28:19,159 --> 00:28:29,399
performance tool online so that's a

00:28:25,940 --> 00:28:32,340
service serving our triple data about

00:28:29,399 --> 00:28:35,279
13,000 requests per second and it can do

00:28:32,340 --> 00:28:38,519
different kind of filtering and stuff

00:28:35,279 --> 00:28:41,750
there's a noche as and am only be back

00:28:38,519 --> 00:28:41,750
end behind that

00:28:46,090 --> 00:28:52,150
by the way at this rate of requests

00:28:50,059 --> 00:28:56,630
you'll also become an expert on

00:28:52,150 --> 00:28:59,780
optimizing Linux TCP connections because

00:28:56,630 --> 00:29:05,140
they tend to become problematic at this

00:28:59,780 --> 00:29:08,390
rate but then that's what you have to do

00:29:05,140 --> 00:29:13,309
when when you're talking about systems

00:29:08,390 --> 00:29:15,440
like Internet of Things serving them

00:29:13,309 --> 00:29:20,660
with a special API you're going to be

00:29:15,440 --> 00:29:22,520
deep in you know big companies or at

00:29:20,660 --> 00:29:27,260
least companies with a lot of systems

00:29:22,520 --> 00:29:30,830
around so I would you know think about

00:29:27,260 --> 00:29:35,750
it as it as a path taking tuple to

00:29:30,830 --> 00:29:39,230
enterprise so when you try to get Drupal

00:29:35,750 --> 00:29:41,660
as a back-end system in an enterprise

00:29:39,230 --> 00:29:44,620
serve content around you know different

00:29:41,660 --> 00:29:48,740
platforms different services different

00:29:44,620 --> 00:29:51,710
machines there's going to be you know

00:29:48,740 --> 00:29:54,610
resistance from enterprise architects

00:29:51,710 --> 00:29:57,380
that have grown you know used to

00:29:54,610 --> 00:29:59,480
Microsoft the only world they they would

00:29:57,380 --> 00:30:01,040
like you to use instead of a REST API

00:29:59,480 --> 00:30:03,170
they would like to you to use them as a

00:30:01,040 --> 00:30:06,170
reservist boss or at least talk or

00:30:03,170 --> 00:30:08,090
something like that or not definitely

00:30:06,170 --> 00:30:11,650
run a linux server in their in their

00:30:08,090 --> 00:30:18,260
systems but that's that's something that

00:30:11,650 --> 00:30:22,490
might happen there all right let's do

00:30:18,260 --> 00:30:25,309
quick recap presentation if you fell

00:30:22,490 --> 00:30:28,400
asleep just keep your eyes open for the

00:30:25,309 --> 00:30:32,929
next three slicin I promise you you'd be

00:30:28,400 --> 00:30:36,020
on on top of things again so in the

00:30:32,929 --> 00:30:37,970
mental things is a password means a lot

00:30:36,020 --> 00:30:40,730
of things but usually just device is not

00:30:37,970 --> 00:30:43,130
originally directed at connecting but

00:30:40,730 --> 00:30:47,570
our can getting connected these days for

00:30:43,130 --> 00:30:49,850
Eric value can use Drupal for content or

00:30:47,570 --> 00:30:52,040
variety of services like authentication

00:30:49,850 --> 00:30:54,840
authorization and as I said it's it's

00:30:52,040 --> 00:30:59,730
all about your courage to just do it

00:30:54,840 --> 00:31:02,940
and how do you do it the rest api is the

00:30:59,730 --> 00:31:06,690
most straightforward of ways and drupal

00:31:02,940 --> 00:31:09,900
7 has a you know a bunch of good rest

00:31:06,690 --> 00:31:12,990
api modules but too late has a rest in

00:31:09,900 --> 00:31:17,160
core as you all should know by now we

00:31:12,990 --> 00:31:19,770
just need to get it out but yeah AP ice

00:31:17,160 --> 00:31:25,020
should be either versioned or backwards

00:31:19,770 --> 00:31:27,840
compatible and sometimes a REST API just

00:31:25,020 --> 00:31:31,920
isn't enough because your Internet of

00:31:27,840 --> 00:31:34,680
Things device specifically require some

00:31:31,920 --> 00:31:36,680
really odd connection method and then

00:31:34,680 --> 00:31:41,670
you have to be coding and hacking away

00:31:36,680 --> 00:31:43,560
to some nights and then when you have

00:31:41,670 --> 00:31:46,770
your stuff you know delivered from

00:31:43,560 --> 00:31:49,650
Drupal you can move your API outside of

00:31:46,770 --> 00:31:53,730
triple for performance better control

00:31:49,650 --> 00:31:56,370
for aggregation of services and you can

00:31:53,730 --> 00:32:01,620
just index it outside with to a moma DB

00:31:56,370 --> 00:32:07,160
and sear it off with no j/s that's the

00:32:01,620 --> 00:32:07,160
thing thank

00:32:12,060 --> 00:32:18,040
so if you have any questions please walk

00:32:14,860 --> 00:32:20,680
to the mic because it's friendly at

00:32:18,040 --> 00:32:22,870
least very important to record

00:32:20,680 --> 00:32:27,810
everything here there's like big notes

00:32:22,870 --> 00:32:27,810
around questions

00:32:36,300 --> 00:32:43,530
go ahead I to walk to the micro that I

00:32:38,820 --> 00:32:45,180
have to repeat your question that's I

00:32:43,530 --> 00:32:47,490
had a question about the architecture

00:32:45,180 --> 00:32:50,520
you said you should use at least some

00:32:47,490 --> 00:32:53,360
simple sort of queuing and mechanism do

00:32:50,520 --> 00:32:59,240
you use like Enterprise Service bus

00:32:53,360 --> 00:33:01,980
systems in your setups um I try to avoid

00:32:59,240 --> 00:33:03,720
you know stuff like that I consider like

00:33:01,980 --> 00:33:07,310
the mics of technologies i mentioned

00:33:03,720 --> 00:33:10,770
like as a service boss one of those

00:33:07,310 --> 00:33:12,540
systems that does but but they do that

00:33:10,770 --> 00:33:15,420
update what they claim this is hugely

00:33:12,540 --> 00:33:20,460
expensive and and you know kind of i

00:33:15,420 --> 00:33:23,340
think hard to get connected to your

00:33:20,460 --> 00:33:25,380
systems but yet you enterprise service

00:33:23,340 --> 00:33:27,660
bus buses would be one option for that

00:33:25,380 --> 00:33:30,420
but i'm talking about maybe a bit more

00:33:27,660 --> 00:33:33,330
simplified queuing have you know I've

00:33:30,420 --> 00:33:36,840
seen way well there's a story about

00:33:33,330 --> 00:33:38,850
doing a lot an electronic lunch lunch

00:33:36,840 --> 00:33:40,980
monitor thing that sent that if they do

00:33:38,850 --> 00:33:43,260
and that's happened five years ago or

00:33:40,980 --> 00:33:45,810
something it sent you an SMS for you

00:33:43,260 --> 00:33:48,120
know for your lunch voucher so you could

00:33:45,810 --> 00:33:50,250
you know by lunch but he did you know

00:33:48,120 --> 00:33:52,350
subtract your balance every time but it

00:33:50,250 --> 00:33:54,600
didn't it only tried once sent the SMS

00:33:52,350 --> 00:33:56,280
and that's that's the problem with

00:33:54,600 --> 00:33:58,560
queuing it just lost the information

00:33:56,280 --> 00:34:01,320
that it was trying to send you an SMS if

00:33:58,560 --> 00:34:03,390
the SMS sending system was really

00:34:01,320 --> 00:34:06,000
unreliable at that point so I'm just

00:34:03,390 --> 00:34:08,820
expecting someone to try until it works

00:34:06,000 --> 00:34:13,100
you know some kind of a queue it doesn't

00:34:08,820 --> 00:34:17,250
need to be enterprise queuing system

00:34:13,100 --> 00:34:19,950
yeah yeah but like what about the open

00:34:17,250 --> 00:34:22,410
source java I can't remember the name

00:34:19,950 --> 00:34:24,419
but it really works perfect for the

00:34:22,410 --> 00:34:26,610
situation that you just described yeah i

00:34:24,419 --> 00:34:30,260
would i would totally prefer open source

00:34:26,610 --> 00:34:32,970
java service buses yeah instead of the

00:34:30,260 --> 00:34:37,020
hardcore proprietary stuff i haven't

00:34:32,970 --> 00:34:38,669
used I guess we've we've once used some

00:34:37,020 --> 00:34:44,000
kind of an Apache project that was a

00:34:38,669 --> 00:34:44,000
service bus but pretty rarely yeah

00:34:49,200 --> 00:34:52,129
anyone else

00:34:56,210 --> 00:34:59,859

YouTube URL: https://www.youtube.com/watch?v=ZIkT_JWFR3s


