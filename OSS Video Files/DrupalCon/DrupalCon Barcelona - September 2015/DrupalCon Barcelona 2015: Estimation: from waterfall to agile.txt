Title: DrupalCon Barcelona 2015: Estimation: from waterfall to agile
Publication date: 2015-09-22
Playlist: DrupalCon Barcelona - September 2015
Description: 
	The presentation will describe how and why Adapt has transformed our methodologies from a classic waterfall approach over semi agile process to now implementing a full-on agile SCRUM inspired approach to working with Drupal projects.

 

The presentation does not aim to present a “This is how you do it-guide” but rather present some of the challenges we’ve experienced and how we have tried solve them.

We want to show some of the mistakes we’ve made and what we’ve learned from them.

 

One of the areas we want to cover is the classic “know what you don’t know” approach to estimating and how we changed from early micro estimation that very fast became obsolete to Story Points.

Adapt is an agency developing Drupal solutions for stakeholders with various levels of development insights.
Captions: 
	00:00:00,000 --> 00:00:07,550
alright so i think the time says 11

00:00:03,689 --> 00:00:09,960
o'clock now so we're going to begin

00:00:07,550 --> 00:00:12,780
today as you know we're going to talk a

00:00:09,960 --> 00:00:15,540
bit about going from a classic waterfall

00:00:12,780 --> 00:00:17,609
approach to an agile approach to web

00:00:15,540 --> 00:00:20,880
development and we're going to focus

00:00:17,609 --> 00:00:23,039
especially on estimation my name is

00:00:20,880 --> 00:00:26,699
Cecil vitko I'm senior project manager

00:00:23,039 --> 00:00:30,080
at adapt and I'm responsible for project

00:00:26,699 --> 00:00:33,000
management and our overall processes

00:00:30,080 --> 00:00:35,969
yeah and my name is Mickey beau handsome

00:00:33,000 --> 00:00:38,700
I am a strategic client manager at adapt

00:00:35,969 --> 00:00:41,160
I started that adapt for like four or

00:00:38,700 --> 00:00:43,500
five months ago and is basically in

00:00:41,160 --> 00:00:51,270
charge of the implementing these agile

00:00:43,500 --> 00:00:53,910
processes and adapt so yep ok so on the

00:00:51,270 --> 00:00:57,030
agenda today I'm going to tell you a bit

00:00:53,910 --> 00:00:58,859
about who adapt is we're going to tell

00:00:57,030 --> 00:01:01,879
you a bit about why we decided to go

00:00:58,859 --> 00:01:04,860
agile then we're going to focus on

00:01:01,879 --> 00:01:06,810
estimation and finally we're going to

00:01:04,860 --> 00:01:13,650
tell you a bit about the results that

00:01:06,810 --> 00:01:16,830
we've reached so far who is a dot that

00:01:13,650 --> 00:01:19,650
is a digital agency that unites distance

00:01:16,830 --> 00:01:23,850
business understanding sorry design and

00:01:19,650 --> 00:01:27,150
technology we've been in the business

00:01:23,850 --> 00:01:29,610
for quite some time we've created some

00:01:27,150 --> 00:01:33,900
results for leading international brands

00:01:29,610 --> 00:01:37,490
since 1998 we have experience with

00:01:33,900 --> 00:01:41,509
launching over 2,000 digital solutions

00:01:37,490 --> 00:01:44,579
we have over 80 passionate employees and

00:01:41,509 --> 00:01:46,170
as a net up client you're not just

00:01:44,579 --> 00:01:49,860
another project you're actually a part

00:01:46,170 --> 00:01:53,930
of our team we're an international

00:01:49,860 --> 00:01:57,780
company we have offices in copenhagen in

00:01:53,930 --> 00:02:04,409
countess venus and here in barcelona and

00:01:57,780 --> 00:02:07,439
one in Boston all right to tell you a

00:02:04,409 --> 00:02:10,259
bit about what we've been through over

00:02:07,439 --> 00:02:13,360
the last three years we've tripled our

00:02:10,259 --> 00:02:17,260
company size and tripled our ever

00:02:13,360 --> 00:02:20,140
project sighs we've gone from only

00:02:17,260 --> 00:02:23,400
developing on our own pearl platform to

00:02:20,140 --> 00:02:27,010
developing on a global platform Drupal

00:02:23,400 --> 00:02:29,770
and we've been working with agile for

00:02:27,010 --> 00:02:31,870
over a year but we've intensified the

00:02:29,770 --> 00:02:37,890
process during the last four to six

00:02:31,870 --> 00:02:41,680
months yeah when we started out doing

00:02:37,890 --> 00:02:44,290
Drupal projects we only did smaller

00:02:41,680 --> 00:02:47,110
projects with well-known functionality

00:02:44,290 --> 00:02:50,980
modules that we've used before and knew

00:02:47,110 --> 00:02:53,410
really well so yeah we thought we knew

00:02:50,980 --> 00:02:59,470
it all so we worked with fixed budgets

00:02:53,410 --> 00:03:03,550
and fix cope we had a classic waterfall

00:02:59,470 --> 00:03:06,430
approach our projects lasted typically

00:03:03,550 --> 00:03:08,680
three to six months and we started out

00:03:06,430 --> 00:03:10,750
by specifying all of the functionality

00:03:08,680 --> 00:03:12,820
that we were going to do then we

00:03:10,750 --> 00:03:15,459
designed how it was going to look we

00:03:12,820 --> 00:03:18,580
started implementing it then we did our

00:03:15,459 --> 00:03:22,780
integrations and then we started testing

00:03:18,580 --> 00:03:26,890
and our clients started testing and our

00:03:22,780 --> 00:03:33,610
clients and we started creating a lot of

00:03:26,890 --> 00:03:35,350
new tasks when testing and since it was

00:03:33,610 --> 00:03:38,620
quite a long time since the original

00:03:35,350 --> 00:03:40,780
tasks were specified it was often

00:03:38,620 --> 00:03:45,040
difficult for us to determine whether

00:03:40,780 --> 00:03:47,560
these new tasks were actually a bug for

00:03:45,040 --> 00:03:51,370
an original task or if it was a change

00:03:47,560 --> 00:03:54,730
request and our waterfall approach

00:03:51,370 --> 00:03:57,400
didn't really support changes in the

00:03:54,730 --> 00:04:02,730
estimates unless it was an out of scope

00:03:57,400 --> 00:04:06,280
task a change request so we had

00:04:02,730 --> 00:04:10,590
challenges expanding our budgets for all

00:04:06,280 --> 00:04:13,019
of these new tasks created in tests and

00:04:10,590 --> 00:04:16,120
we didn't really have any tools for

00:04:13,019 --> 00:04:19,780
prioritizing our scope since our scope

00:04:16,120 --> 00:04:22,060
was fixed to a fixed budget and we've

00:04:19,780 --> 00:04:24,580
actually already developed all of the

00:04:22,060 --> 00:04:26,830
functionality at this point so we

00:04:24,580 --> 00:04:31,000
couldn't really leave anything out and

00:04:26,830 --> 00:04:33,729
prioritising differently so our budgets

00:04:31,000 --> 00:04:36,580
didn't last and we actually ended up

00:04:33,729 --> 00:04:42,759
losing money on fifty percent of all our

00:04:36,580 --> 00:04:45,460
projects which is not good business and

00:04:42,759 --> 00:04:48,610
besides that our projects grew larger

00:04:45,460 --> 00:04:51,490
and more complex we started doing more

00:04:48,610 --> 00:04:53,080
complex integrations using a lot of new

00:04:51,490 --> 00:04:56,590
modules that we hadn't used before and

00:04:53,080 --> 00:05:01,780
really did we needed lots of custom code

00:04:56,590 --> 00:05:04,990
to achieve our project goals so we

00:05:01,780 --> 00:05:07,150
needed to redefine and specify our tasks

00:05:04,990 --> 00:05:09,069
during our development phase instead of

00:05:07,150 --> 00:05:14,520
in the beginning before we started

00:05:09,069 --> 00:05:17,319
development and since our project grew

00:05:14,520 --> 00:05:21,219
we needed to add more resources to the

00:05:17,319 --> 00:05:24,159
projects as well one or two developers

00:05:21,219 --> 00:05:27,400
were no longer enough if we should meet

00:05:24,159 --> 00:05:30,069
the project deadlines and since we added

00:05:27,400 --> 00:05:31,840
more developers to the project they

00:05:30,069 --> 00:05:37,919
didn't all have the same knowledge or

00:05:31,840 --> 00:05:42,219
work in the same pace so to sum up

00:05:37,919 --> 00:05:43,990
keeping our original estimates was quite

00:05:42,219 --> 00:05:48,159
difficult when the task kept being

00:05:43,990 --> 00:05:50,349
redefined and keeping a fixed budget and

00:05:48,159 --> 00:05:52,599
the fixed scope is also very difficult

00:05:50,349 --> 00:05:57,580
when you keep redefining your tasks and

00:05:52,599 --> 00:05:59,949
expanding them also staying within an

00:05:57,580 --> 00:06:01,960
estimate one developer has given can be

00:05:59,949 --> 00:06:06,310
difficult for new developers adding

00:06:01,960 --> 00:06:12,430
added to the project so we had trouble

00:06:06,310 --> 00:06:18,580
staying within our estimates so that's

00:06:12,430 --> 00:06:21,580
why we decided to go agile so we started

00:06:18,580 --> 00:06:24,279
up really slowly by implementing

00:06:21,580 --> 00:06:26,949
concepts such as sprints and a project

00:06:24,279 --> 00:06:31,020
backlog and we started using a tool

00:06:26,949 --> 00:06:34,449
called here as some of you might know

00:06:31,020 --> 00:06:37,220
and we actually saw that these changes

00:06:34,449 --> 00:06:40,910
that we did improved our work

00:06:37,220 --> 00:06:42,850
but we didn't really have one person

00:06:40,910 --> 00:06:46,190
that was responsible for actually

00:06:42,850 --> 00:06:48,770
facilitating this process so every time

00:06:46,190 --> 00:06:52,490
we had questions how do we do this and

00:06:48,770 --> 00:06:55,250
why is this going wrong we didn't really

00:06:52,490 --> 00:06:57,620
have one person to go to it was just the

00:06:55,250 --> 00:07:01,940
person that saw the problem that may be

00:06:57,620 --> 00:07:03,710
needed to go try to find a solution so

00:07:01,940 --> 00:07:09,260
implementing these tools didn't really

00:07:03,710 --> 00:07:11,720
fix it all we saw that we were having

00:07:09,260 --> 00:07:15,560
trouble with overflowing sprints meaning

00:07:11,720 --> 00:07:17,180
than that when we ended a sprint a lot

00:07:15,560 --> 00:07:19,070
of the task weren't finished so they

00:07:17,180 --> 00:07:21,800
were needed to move to the next print

00:07:19,070 --> 00:07:25,760
and this resulting in our project scope

00:07:21,800 --> 00:07:27,860
growing during the process and we still

00:07:25,760 --> 00:07:31,700
faced challenges in keeping our

00:07:27,860 --> 00:07:35,690
estimates and we actually didn't quite

00:07:31,700 --> 00:07:39,560
knew why we are estimates were keeping

00:07:35,690 --> 00:07:46,040
so we lacked an overview of what went

00:07:39,560 --> 00:07:48,080
wrong so we decided that we needed more

00:07:46,040 --> 00:07:52,550
focus and dedication if we were going to

00:07:48,080 --> 00:07:55,490
succeed and go in a dong so we went all

00:07:52,550 --> 00:07:57,790
in and that's where a meeting came into

00:07:55,490 --> 00:07:57,790
the picture

00:08:00,620 --> 00:08:06,960
thank you today I like to stand here and

00:08:04,590 --> 00:08:08,699
talk a bit about first of all what is

00:08:06,960 --> 00:08:10,770
agile because you know this is a

00:08:08,699 --> 00:08:13,470
beginner session would like to get the

00:08:10,770 --> 00:08:16,080
basics into place and then I like to

00:08:13,470 --> 00:08:18,960
talk a bit about estimation but supposed

00:08:16,080 --> 00:08:22,740
to find a first of all why an agile and

00:08:18,960 --> 00:08:26,639
what is agile some of you might be

00:08:22,740 --> 00:08:28,500
familiar with the agile manifesto the

00:08:26,639 --> 00:08:31,820
funny thing about working at charlie is

00:08:28,500 --> 00:08:33,959
that when you talk to developers

00:08:31,820 --> 00:08:35,399
especially the developers who have been

00:08:33,959 --> 00:08:38,750
in the business for many years that will

00:08:35,399 --> 00:08:42,990
tell you that's just what we always did

00:08:38,750 --> 00:08:45,510
so in back in 2001 there was a group who

00:08:42,990 --> 00:08:48,779
sat down and created what they called

00:08:45,510 --> 00:08:51,720
the agile manifesto and actually it's

00:08:48,779 --> 00:08:55,589
just a basic one picture about what do

00:08:51,720 --> 00:08:57,810
we mean by working agile and they set up

00:08:55,589 --> 00:09:00,029
these four basic rules that you should

00:08:57,810 --> 00:09:02,070
follow the first of the rules as

00:09:00,029 --> 00:09:05,579
individuals and interactions over

00:09:02,070 --> 00:09:09,149
processes and tools that meaning that to

00:09:05,579 --> 00:09:10,890
be innovative it's done by bringing

00:09:09,149 --> 00:09:14,120
people together and let them talk let

00:09:10,890 --> 00:09:17,579
them share ideas don't set off a lot of

00:09:14,120 --> 00:09:19,529
complex processes and tools that kills

00:09:17,579 --> 00:09:22,770
the innovation but the funny thing about

00:09:19,529 --> 00:09:25,800
these rules are that I have seen a lot

00:09:22,770 --> 00:09:27,420
of times where people says this means

00:09:25,800 --> 00:09:30,149
that we shouldn't have any processes or

00:09:27,420 --> 00:09:32,940
tools at all especially developers have

00:09:30,149 --> 00:09:35,459
this idea that tools and processes are

00:09:32,940 --> 00:09:38,790
bad and some way they're right but not

00:09:35,459 --> 00:09:41,730
quite there so I'll be coming back to

00:09:38,790 --> 00:09:44,190
this subject later on the next rule set

00:09:41,730 --> 00:09:47,520
up by the manifesto is working software

00:09:44,190 --> 00:09:50,760
over comprehensive documentation again

00:09:47,520 --> 00:09:54,110
here it's funny how developers kind of

00:09:50,760 --> 00:09:56,730
read this as we need no documentation of

00:09:54,110 --> 00:09:58,890
course we need documentation but when we

00:09:56,730 --> 00:10:00,899
create documentation we need to keep in

00:09:58,890 --> 00:10:03,390
mind that we shouldn't do anything that

00:10:00,899 --> 00:10:05,430
won't give us any value so we should

00:10:03,390 --> 00:10:07,350
only do the documentation that we

00:10:05,430 --> 00:10:09,120
improve will give us some kind of value

00:10:07,350 --> 00:10:12,000
and of course that's always a good

00:10:09,120 --> 00:10:13,710
discussion to have with a developer the

00:10:12,000 --> 00:10:16,710
third rule is customer collaboration

00:10:13,710 --> 00:10:19,050
over contract negotiation what is very

00:10:16,710 --> 00:10:21,660
important here is that we need to keep

00:10:19,050 --> 00:10:24,270
our custom our clients very close to our

00:10:21,660 --> 00:10:27,570
process and make them understand why are

00:10:24,270 --> 00:10:29,790
we doing this as we're doing it and of

00:10:27,570 --> 00:10:31,770
course we need a contract but basically

00:10:29,790 --> 00:10:33,779
for the process the current in the

00:10:31,770 --> 00:10:35,420
perfect world we should sign the

00:10:33,779 --> 00:10:37,740
contract and never look at it it again

00:10:35,420 --> 00:10:39,510
because it's about the communication

00:10:37,740 --> 00:10:42,570
with the customer and again also over

00:10:39,510 --> 00:10:44,190
here the last rule which I personally

00:10:42,570 --> 00:10:46,560
think is one of the most important

00:10:44,190 --> 00:10:50,520
things about this is responding to

00:10:46,560 --> 00:10:52,560
change or were following a plan actually

00:10:50,520 --> 00:10:54,570
the keynote this morning was right down

00:10:52,560 --> 00:10:56,459
my alley on the first couple of slides

00:10:54,570 --> 00:10:58,770
because it said yeah we're trying to

00:10:56,459 --> 00:11:00,870
plan everything and he had this quote

00:10:58,770 --> 00:11:02,399
saying yeah you have a plan until you

00:11:00,870 --> 00:11:06,149
get a hit in the face and that's the

00:11:02,399 --> 00:11:08,430
same we experienced in our case so it's

00:11:06,149 --> 00:11:11,310
very important that we need to be able

00:11:08,430 --> 00:11:13,140
to response to these changes that will

00:11:11,310 --> 00:11:15,360
happen in the context we're working with

00:11:13,140 --> 00:11:17,670
Wilbur all here is working on IT

00:11:15,360 --> 00:11:22,170
platforms and we know these platforms

00:11:17,670 --> 00:11:24,089
are are moving very rapidly so therefore

00:11:22,170 --> 00:11:26,610
we should be able to adopt all these

00:11:24,089 --> 00:11:30,089
changes that will come from the world

00:11:26,610 --> 00:11:32,670
around us so how do we do that first of

00:11:30,089 --> 00:11:34,560
all we need to go away from the old

00:11:32,670 --> 00:11:36,779
world whole model as seasonal just told

00:11:34,560 --> 00:11:38,820
us we have this problem with the

00:11:36,779 --> 00:11:41,520
Baltimore pole model that in the end of

00:11:38,820 --> 00:11:43,950
this process we get the feedback very

00:11:41,520 --> 00:11:45,779
late from the customer to find out this

00:11:43,950 --> 00:11:48,029
is not really what we need it but

00:11:45,779 --> 00:11:49,709
basically we probably have spent most of

00:11:48,029 --> 00:11:52,440
our budget building what we thought that

00:11:49,709 --> 00:11:54,329
they need and then we got a problem so

00:11:52,440 --> 00:11:57,660
in the iterative model instead we go

00:11:54,329 --> 00:12:00,360
through the same steps basically but we

00:11:57,660 --> 00:12:02,700
do them all over again all over again

00:12:00,360 --> 00:12:05,339
and again and again because when we work

00:12:02,700 --> 00:12:08,610
on a project we accumulate knowledge and

00:12:05,339 --> 00:12:10,560
it is this knowledge that we need to use

00:12:08,610 --> 00:12:12,240
when we do this all over again so

00:12:10,560 --> 00:12:14,640
instead of doing these steps in like

00:12:12,240 --> 00:12:16,499
maybe three to six month we need to do

00:12:14,640 --> 00:12:19,739
it down in like two to four

00:12:16,499 --> 00:12:21,059
week since that because then we get the

00:12:19,739 --> 00:12:24,329
specification the design information

00:12:21,059 --> 00:12:27,059
integration test installation and then

00:12:24,329 --> 00:12:28,799
we can actually produce a deliver some

00:12:27,059 --> 00:12:30,689
software that is working out here and

00:12:28,799 --> 00:12:33,299
then we could do this all over again and

00:12:30,689 --> 00:12:35,909
then we can put the software to market

00:12:33,299 --> 00:12:38,699
and why is that a good idea it is a good

00:12:35,909 --> 00:12:41,339
idea because if you do it on the old

00:12:38,699 --> 00:12:43,619
basis we start we know we want to end up

00:12:41,339 --> 00:12:45,509
out here and then we start to build this

00:12:43,619 --> 00:12:47,309
corner and that and work out there

00:12:45,509 --> 00:12:48,779
that's not what we want to do because

00:12:47,309 --> 00:12:51,329
there's a good chance that we have a

00:12:48,779 --> 00:12:53,159
Miss consumption out here so instead of

00:12:51,329 --> 00:12:55,919
that we need to build something that

00:12:53,159 --> 00:12:57,599
will solve the basic needs of our

00:12:55,919 --> 00:12:59,969
customers we're working with a concept

00:12:57,599 --> 00:13:02,939
called the minimal Viable Product it is

00:12:59,969 --> 00:13:05,819
the least product that your customer can

00:13:02,939 --> 00:13:07,139
put on to market and get working and why

00:13:05,819 --> 00:13:09,479
is that a good idea because when

00:13:07,139 --> 00:13:12,269
customers start interact with the

00:13:09,479 --> 00:13:14,579
software that we produce then we get the

00:13:12,269 --> 00:13:16,469
feedback and very often we will find out

00:13:14,579 --> 00:13:18,269
that what we thought that the customer

00:13:16,469 --> 00:13:19,679
needs it's not what the customer needs

00:13:18,269 --> 00:13:22,529
and especially what we thought were the

00:13:19,679 --> 00:13:24,359
most important is not anymore and you

00:13:22,529 --> 00:13:26,459
can say maybe if you go like this and we

00:13:24,359 --> 00:13:29,220
start making this skateboard and this

00:13:26,459 --> 00:13:32,129
and the bicycle we might end up here and

00:13:29,220 --> 00:13:34,259
find out this actually solved all that

00:13:32,129 --> 00:13:36,209
we need all the customary we had this

00:13:34,259 --> 00:13:39,239
idea that the customer needed to be fall

00:13:36,209 --> 00:13:42,089
in the car and they will go driving out

00:13:39,239 --> 00:13:45,089
on a rainy day and then when we started

00:13:42,089 --> 00:13:47,159
out the customers never came back to us

00:13:45,089 --> 00:13:48,899
and accurate that I need to bring more

00:13:47,159 --> 00:13:50,939
people with me or it's raining all the

00:13:48,899 --> 00:13:54,389
time and then there's no reason to build

00:13:50,939 --> 00:13:57,379
the last step so this is very important

00:13:54,389 --> 00:13:59,639
that we accumulate this knowledge

00:13:57,379 --> 00:14:02,429
basically we are working with the method

00:13:59,639 --> 00:14:04,109
added app called scrum I think most of

00:14:02,429 --> 00:14:06,749
you should be familiar at least with the

00:14:04,109 --> 00:14:08,369
name affair I like to go through some of

00:14:06,749 --> 00:14:11,009
the basic terms that i'm going to use a

00:14:08,369 --> 00:14:14,569
lot today just to be sure that we on the

00:14:11,009 --> 00:14:17,519
same page so first of all instead of

00:14:14,569 --> 00:14:19,889
these old-school specification we work

00:14:17,519 --> 00:14:20,889
with a concept called use of stories you

00:14:19,889 --> 00:14:23,410
might have heard of it

00:14:20,889 --> 00:14:26,769
it's quite simple we just define our

00:14:23,410 --> 00:14:31,480
task on the basic form as a type of user

00:14:26,769 --> 00:14:33,220
I want some goal so that reason and what

00:14:31,480 --> 00:14:34,899
we use that forward that we can see what

00:14:33,220 --> 00:14:36,579
it is that we want to achieve and this

00:14:34,899 --> 00:14:39,069
is written on a form that even our

00:14:36,579 --> 00:14:40,569
customers non-technical customers can

00:14:39,069 --> 00:14:43,869
understand what it is that we're trying

00:14:40,569 --> 00:14:45,549
to build then we take these user stories

00:14:43,869 --> 00:14:48,609
and put them into a backlog a backlog is

00:14:45,549 --> 00:14:51,790
simply a prioritized list of tasks that

00:14:48,609 --> 00:14:55,569
we need to get solved and then we have

00:14:51,790 --> 00:14:58,389
the sprint the Sprint is a time box we

00:14:55,569 --> 00:14:59,889
are working with sprint of two weeks and

00:14:58,389 --> 00:15:01,480
this is kind of the same going back to

00:14:59,889 --> 00:15:03,759
the iterative maladjusted showed you

00:15:01,480 --> 00:15:05,829
that we time box and say we commit

00:15:03,759 --> 00:15:09,220
ourselves to do these user stories

00:15:05,829 --> 00:15:11,109
within this time box and that's called a

00:15:09,220 --> 00:15:13,749
sprint then we have two rows that are

00:15:11,109 --> 00:15:15,579
we'll talk about today one of them is

00:15:13,749 --> 00:15:17,739
the product owner the product owner is

00:15:15,579 --> 00:15:19,899
yeah the guy who owns the product and

00:15:17,739 --> 00:15:21,910
the product here is the bank lock

00:15:19,899 --> 00:15:24,489
because that contains all the user

00:15:21,910 --> 00:15:26,919
stories that we want to build and this

00:15:24,489 --> 00:15:30,160
is responsible responsibility to

00:15:26,919 --> 00:15:33,579
maintain that the user stories is doable

00:15:30,160 --> 00:15:35,110
and are there always prioritized and the

00:15:33,579 --> 00:15:38,379
other end we have the scrum master the

00:15:35,110 --> 00:15:40,899
scrum master typically a a guy from the

00:15:38,379 --> 00:15:45,040
team might be a technical guy and who's

00:15:40,899 --> 00:15:48,220
responsible is the sprint so he and the

00:15:45,040 --> 00:15:51,549
team working with the product then I

00:15:48,220 --> 00:15:54,069
finds out what can we say that we will

00:15:51,549 --> 00:15:56,829
do for next two weeks and they will say

00:15:54,069 --> 00:15:59,499
okay we we say this is our task we need

00:15:56,829 --> 00:16:01,419
to do this as a team so scrum life that

00:15:59,499 --> 00:16:03,459
launched the sprint and the product

00:16:01,419 --> 00:16:05,259
owner owns the back of those of course a

00:16:03,459 --> 00:16:07,329
lot more to this but I could starting to

00:16:05,259 --> 00:16:10,299
talk about that for Sara Alice and I

00:16:07,329 --> 00:16:11,559
don't want to bore you too much please

00:16:10,299 --> 00:16:16,389
let me know if there's any questions

00:16:11,559 --> 00:16:20,230
about this yep good oh you mean to

00:16:16,389 --> 00:16:22,539
forget to ask then what is it that we're

00:16:20,230 --> 00:16:24,819
trying to do in adapt we wanted to have

00:16:22,539 --> 00:16:27,669
this mission and we quite fast find out

00:16:24,819 --> 00:16:29,350
that we have the stream we want to reach

00:16:27,669 --> 00:16:31,449
the edge on Yvonne and reach the

00:16:29,350 --> 00:16:33,350
promised 16 to one hundred and fifty

00:16:31,449 --> 00:16:36,350
percent better effectiveness I

00:16:33,350 --> 00:16:38,480
think everyone who have had anything to

00:16:36,350 --> 00:16:45,410
do with audio methods I've heard some of

00:16:38,480 --> 00:16:47,420
these promised better effectiveness that

00:16:45,410 --> 00:16:49,460
your way see on these conferences and

00:16:47,420 --> 00:16:51,740
stuff like that and then what happened

00:16:49,460 --> 00:16:53,600
then we've got the same problem I've

00:16:51,740 --> 00:16:55,370
seen so many so many times have you got

00:16:53,600 --> 00:17:00,560
the management who said that's what I

00:16:55,370 --> 00:17:02,480
want so go fix that's fine and then what

00:17:00,560 --> 00:17:04,430
tends to do then okay we know we want to

00:17:02,480 --> 00:17:07,070
avoid a jolly then we look into the tool

00:17:04,430 --> 00:17:08,780
box with the agile tools find the tool

00:17:07,070 --> 00:17:11,590
and then go look for a problem that we

00:17:08,780 --> 00:17:14,120
can fix with that tool that's a problem

00:17:11,590 --> 00:17:15,560
so what you would do instead of that of

00:17:14,120 --> 00:17:18,590
course it's good to have a vision we

00:17:15,560 --> 00:17:20,660
always need a basic mission but after

00:17:18,590 --> 00:17:23,060
that we have to break it down break it

00:17:20,660 --> 00:17:25,790
down two missions what can be achieved

00:17:23,060 --> 00:17:30,470
how and why are we going to reach our

00:17:25,790 --> 00:17:32,240
mission and we did that task in in adapt

00:17:30,470 --> 00:17:34,100
and first and find out that one of our

00:17:32,240 --> 00:17:36,230
biggest problem is this season just told

00:17:34,100 --> 00:17:38,230
us is that we had a lot of projects

00:17:36,230 --> 00:17:42,620
that's kind of spinning out of control

00:17:38,230 --> 00:17:45,260
and of course this is very expensive for

00:17:42,620 --> 00:17:47,200
both for us and for the customers we

00:17:45,260 --> 00:17:49,550
want to avoid that makes good sense

00:17:47,200 --> 00:17:52,550
another thing we want to do is empower

00:17:49,550 --> 00:17:55,550
the developers we like to move the power

00:17:52,550 --> 00:17:56,960
and the organization out in the end of

00:17:55,550 --> 00:17:58,970
the organization because then we can

00:17:56,960 --> 00:18:02,170
take faster decisions out then in power

00:17:58,970 --> 00:18:04,730
our developers and our employees and

00:18:02,170 --> 00:18:06,380
thereby make faster and better decisions

00:18:04,730 --> 00:18:08,150
because I'm very very often see that

00:18:06,380 --> 00:18:09,710
people go to management they've been

00:18:08,150 --> 00:18:11,600
working like maybe a full wig on a

00:18:09,710 --> 00:18:12,710
problem and then they go to management

00:18:11,600 --> 00:18:16,280
I'll ask for solution for this problem

00:18:12,710 --> 00:18:17,660
and of course in the best person to know

00:18:16,280 --> 00:18:19,580
anything about the solution for the

00:18:17,660 --> 00:18:22,340
problem they have is a guy but spend a

00:18:19,580 --> 00:18:24,800
week working on it I'm the last thing

00:18:22,340 --> 00:18:26,300
that we took in here is that we'd like

00:18:24,800 --> 00:18:30,560
to increase the quality of our

00:18:26,300 --> 00:18:32,810
deliveries because quality in deliveries

00:18:30,560 --> 00:18:35,330
is the same as customer satisfaction and

00:18:32,810 --> 00:18:37,400
that's always good business and I could

00:18:35,330 --> 00:18:40,040
stand here and list a lot of stuff today

00:18:37,400 --> 00:18:42,410
but today we like to just focus on the

00:18:40,040 --> 00:18:44,630
first one about avoiding project

00:18:42,410 --> 00:18:45,630
spinning out of control so next thing

00:18:44,630 --> 00:18:49,170
with it is that

00:18:45,630 --> 00:18:52,220
need some goals we need something that

00:18:49,170 --> 00:18:55,740
we can mission say when this is done we

00:18:52,220 --> 00:18:58,620
should have finished this mission so

00:18:55,740 --> 00:19:00,240
when are we there the first thing in

00:18:58,620 --> 00:19:03,840
first thing that we can take out from

00:19:00,240 --> 00:19:06,390
what Susan told us earlier is that we

00:19:03,840 --> 00:19:09,150
need to have an earlier awareness of

00:19:06,390 --> 00:19:10,740
problems in the projects that we can't

00:19:09,150 --> 00:19:12,510
finish the problem of the project in

00:19:10,740 --> 00:19:15,390
time at least not with the scope given

00:19:12,510 --> 00:19:17,790
right now the next thing that we like to

00:19:15,390 --> 00:19:19,560
do is that we like to know why do we

00:19:17,790 --> 00:19:21,650
spend more time on these tasks because

00:19:19,560 --> 00:19:24,240
we spend a lot of time going back and

00:19:21,650 --> 00:19:27,750
trying to find out what went wrong in

00:19:24,240 --> 00:19:29,850
this project then really neat to remove

00:19:27,750 --> 00:19:31,350
oil flow from old to new Springs we

00:19:29,850 --> 00:19:34,260
started work on which brain would saw

00:19:31,350 --> 00:19:36,630
this overflow so spring was just a time

00:19:34,260 --> 00:19:39,750
box that it really didn't use because

00:19:36,630 --> 00:19:41,610
it's like when to reach went past we

00:19:39,750 --> 00:19:43,290
just looked at at our board and said

00:19:41,610 --> 00:19:44,850
okay we have a lot of task but we didn't

00:19:43,290 --> 00:19:47,190
finish we'll just move it to the next

00:19:44,850 --> 00:19:50,760
print or even just keep kept extending

00:19:47,190 --> 00:19:54,240
the sprint so we like to get rid of that

00:19:50,760 --> 00:19:56,040
and at last but not least we like to

00:19:54,240 --> 00:19:58,410
keep the estimate within a target of

00:19:56,040 --> 00:20:01,920
plus minus ten percent that would be

00:19:58,410 --> 00:20:03,540
great so now we got the objectors what

00:20:01,920 --> 00:20:05,880
is it that we want then we can see how

00:20:03,540 --> 00:20:08,790
will be implement some solutions for

00:20:05,880 --> 00:20:11,550
this and of course we can say that agile

00:20:08,790 --> 00:20:13,890
is the headline of the solutions but

00:20:11,550 --> 00:20:16,170
here we now we have the problems now we

00:20:13,890 --> 00:20:18,000
can go to the tool box and see what kind

00:20:16,170 --> 00:20:20,880
of tools do we need to fix these

00:20:18,000 --> 00:20:22,950
problems so first we like to get this

00:20:20,880 --> 00:20:24,300
better and tracking of issue twice

00:20:22,950 --> 00:20:26,160
because we have this problem that

00:20:24,300 --> 00:20:30,690
everything was just allocated on these

00:20:26,160 --> 00:20:32,880
basic tasks everyone when everything was

00:20:30,690 --> 00:20:35,520
like register on the user stories to

00:20:32,880 --> 00:20:38,700
time trying trying to split out the

00:20:35,520 --> 00:20:41,190
issue types and user stories atmospheric

00:20:38,700 --> 00:20:43,860
task technical tasks so we can see where

00:20:41,190 --> 00:20:46,140
are we spending our time next thing as

00:20:43,860 --> 00:20:48,180
we implemented daily strong base from is

00:20:46,140 --> 00:20:50,040
just a basic meeting that you have every

00:20:48,180 --> 00:20:52,370
morning with the team it shouldn't take

00:20:50,040 --> 00:20:56,250
more than 15 minutes this is important

00:20:52,370 --> 00:20:58,300
and you just gather the team basically

00:20:56,250 --> 00:21:00,940
it's good just to stand up and everyone

00:20:58,300 --> 00:21:02,860
a report of what did i do yesterday what

00:21:00,940 --> 00:21:05,290
you like to do today and what kind of

00:21:02,860 --> 00:21:08,200
problem do our face and then we take the

00:21:05,290 --> 00:21:09,790
talk there and basically we can keep it

00:21:08,200 --> 00:21:12,250
within even with a team like eight

00:21:09,790 --> 00:21:16,390
members we can keep that down to like

00:21:12,250 --> 00:21:18,600
15-20 minutes then we find out that we

00:21:16,390 --> 00:21:21,160
like to get some clearly defined roles

00:21:18,600 --> 00:21:23,200
because we didn't really have these

00:21:21,160 --> 00:21:24,940
roles and if you don't have roles but

00:21:23,200 --> 00:21:27,670
you have a project manager everything

00:21:24,940 --> 00:21:29,560
seems to end up with the project manager

00:21:27,670 --> 00:21:31,120
and that's not very good especially

00:21:29,560 --> 00:21:33,940
because the pro team manager is not

00:21:31,120 --> 00:21:36,940
necessarily the guy in the project that

00:21:33,940 --> 00:21:41,260
knows most about it so we needed to

00:21:36,940 --> 00:21:44,740
define these basic roles that we are

00:21:41,260 --> 00:21:47,200
working with next we needed to define

00:21:44,740 --> 00:21:49,060
our processes and now this is where the

00:21:47,200 --> 00:21:50,920
beer developers come and say hey we

00:21:49,060 --> 00:21:53,980
don't meet processes because you got the

00:21:50,920 --> 00:21:55,870
manifesto yeah but we really didn't have

00:21:53,980 --> 00:21:57,790
anything so we needed just to get the

00:21:55,870 --> 00:22:00,840
basics right and it might be a good idea

00:21:57,790 --> 00:22:03,940
to just start implementing the basic

00:22:00,840 --> 00:22:05,560
processes may be a bit more strict than

00:22:03,940 --> 00:22:07,750
actually you would do when you're

00:22:05,560 --> 00:22:10,120
working agile but then later on you can

00:22:07,750 --> 00:22:13,240
start removing the processes that you

00:22:10,120 --> 00:22:15,940
don't like and then we got the concept

00:22:13,240 --> 00:22:17,710
of story points plan encoder and tools

00:22:15,940 --> 00:22:19,840
for forecasts and going a bit fast here

00:22:17,710 --> 00:22:22,750
because I like to actually go back to

00:22:19,840 --> 00:22:25,000
those but when we have the the strategy

00:22:22,750 --> 00:22:29,380
of how we want to achieve our goals or

00:22:25,000 --> 00:22:31,450
objectives we need an iterative action

00:22:29,380 --> 00:22:34,150
plan and the work iterative is quite

00:22:31,450 --> 00:22:36,910
important because its management tends

00:22:34,150 --> 00:22:40,810
to go to the teams and say hey you need

00:22:36,910 --> 00:22:43,990
to work to be agile windward and be able

00:22:40,810 --> 00:22:45,850
to adapt to changes we need to do that

00:22:43,990 --> 00:22:49,720
as well in management that's very

00:22:45,850 --> 00:22:52,030
important make some small changes see if

00:22:49,720 --> 00:22:53,950
it's working if it's not change it

00:22:52,030 --> 00:22:55,570
listen to your developers when they get

00:22:53,950 --> 00:22:57,750
back to you and say this doesn't make

00:22:55,570 --> 00:23:02,110
any sense for me you have two options

00:22:57,750 --> 00:23:04,660
remove the problem or till the developer

00:23:02,110 --> 00:23:07,510
why this makes sense that's the only two

00:23:04,660 --> 00:23:09,130
reasons I've wasted here so maybe canta

00:23:07,510 --> 00:23:11,010
action plan we're ready to go we know

00:23:09,130 --> 00:23:14,950
who will do what

00:23:11,010 --> 00:23:17,200
so now I like to take some time to talk

00:23:14,950 --> 00:23:19,150
about these three areas because we have

00:23:17,200 --> 00:23:22,870
one headline that we can put to that and

00:23:19,150 --> 00:23:24,400
that is estimation and again the talk

00:23:22,870 --> 00:23:26,590
this morning was right down my alley

00:23:24,400 --> 00:23:29,860
about what is the problem about

00:23:26,590 --> 00:23:32,260
estimation and to plan your work because

00:23:29,860 --> 00:23:34,120
estimation tends to be when you talk

00:23:32,260 --> 00:23:36,580
with management about estimation and you

00:23:34,120 --> 00:23:39,220
give an estimate it's like that's the

00:23:36,580 --> 00:23:42,460
truth there's no way way that's going to

00:23:39,220 --> 00:23:43,630
change but actually I like to not call

00:23:42,460 --> 00:23:45,220
it estimation but call it

00:23:43,630 --> 00:23:47,620
fortune-telling because then people

00:23:45,220 --> 00:23:52,120
would be a bit more skeptic and that's

00:23:47,620 --> 00:23:54,490
good so why is this a problem first I'd

00:23:52,120 --> 00:23:57,400
like to talk about the the relationship

00:23:54,490 --> 00:23:59,650
between time rich and knowledge because

00:23:57,400 --> 00:24:01,419
there's a model that I really like and

00:23:59,650 --> 00:24:04,140
everyone should know it's called the

00:24:01,419 --> 00:24:08,039
cone Marvel the co model looks at

00:24:04,140 --> 00:24:11,169
uncertainty and how that works overtime

00:24:08,039 --> 00:24:13,260
is quite basically because over time we

00:24:11,169 --> 00:24:17,140
get knowledge and therefore when I

00:24:13,260 --> 00:24:19,780
uncertainty kind of narrows and that's

00:24:17,140 --> 00:24:21,250
good of course so in the start of the

00:24:19,780 --> 00:24:22,960
project of course we don't have that

00:24:21,250 --> 00:24:26,110
much knowledge about the project what

00:24:22,960 --> 00:24:29,230
we're doing right now so we're kind of

00:24:26,110 --> 00:24:30,880
lost to be honest then sometimes went by

00:24:29,230 --> 00:24:32,890
we start working on this awesome if you

00:24:30,880 --> 00:24:34,419
get a better idea what is it that we're

00:24:32,890 --> 00:24:36,070
actually doing and they are mum third

00:24:34,419 --> 00:24:38,559
project we know everything about it in a

00:24:36,070 --> 00:24:40,090
way easier for us to take how long to

00:24:38,559 --> 00:24:41,950
tell how long will this be because we

00:24:40,090 --> 00:24:44,380
kind of did it we just need to do the

00:24:41,950 --> 00:24:46,900
math but when you told this to

00:24:44,380 --> 00:24:49,179
management that we would really like to

00:24:46,900 --> 00:24:52,120
do estimation out here this is kind of

00:24:49,179 --> 00:24:53,650
direction i usually get because they

00:24:52,120 --> 00:24:56,320
can't use that for anything because we

00:24:53,650 --> 00:24:58,360
need a budget upfront but the problem

00:24:56,320 --> 00:25:01,900
here is that we don't have that much

00:24:58,360 --> 00:25:03,549
information out there and we tend even

00:25:01,900 --> 00:25:05,770
though we know that we tend to try to do

00:25:03,549 --> 00:25:07,900
all the trance breakdown estimation ever

00:25:05,770 --> 00:25:10,059
everything out here and that's a problem

00:25:07,900 --> 00:25:11,380
what we should do instead is that we

00:25:10,059 --> 00:25:15,370
should accept that we don't have that

00:25:11,380 --> 00:25:17,850
information and therefore know what you

00:25:15,370 --> 00:25:21,040
don't know is kind of the key here and

00:25:17,850 --> 00:25:22,750
people will often go back and say how

00:25:21,040 --> 00:25:24,970
I know something that I don't that

00:25:22,750 --> 00:25:27,250
doesn't make any sense and that's that's

00:25:24,970 --> 00:25:29,620
right of course but you can know that

00:25:27,250 --> 00:25:31,120
you don't know it and when you know that

00:25:29,620 --> 00:25:33,280
you don't know it then you can accept

00:25:31,120 --> 00:25:35,320
that you don't know it and when you have

00:25:33,280 --> 00:25:37,720
accepted that you don't know it you can

00:25:35,320 --> 00:25:39,960
make it work for you so this lack of

00:25:37,720 --> 00:25:41,950
knowledge is not necessarily a problem

00:25:39,960 --> 00:25:45,310
because there's this thing about

00:25:41,950 --> 00:25:48,460
knowledge that it devalue eights over

00:25:45,310 --> 00:25:50,710
time quite fast so what we tend to do in

00:25:48,460 --> 00:25:53,080
in the classic border for model is that

00:25:50,710 --> 00:25:55,180
will try to do a lot of research or

00:25:53,080 --> 00:25:56,770
front than the project and then you

00:25:55,180 --> 00:25:59,140
start working on and find out that all

00:25:56,770 --> 00:26:00,550
the time you spend on this research it's

00:25:59,140 --> 00:26:02,950
not really what we want because you're

00:26:00,550 --> 00:26:04,540
starting to produce a product that the

00:26:02,950 --> 00:26:07,570
customer can check and see this is not

00:26:04,540 --> 00:26:09,370
what working for me so I like to talk

00:26:07,570 --> 00:26:12,130
now a bit about how can you do this

00:26:09,370 --> 00:26:13,810
wrong because we have these projects

00:26:12,130 --> 00:26:16,450
coming in and all of them at a total

00:26:13,810 --> 00:26:18,970
budget I guess you are in the same place

00:26:16,450 --> 00:26:20,260
as us and what we do is that we knew

00:26:18,970 --> 00:26:21,880
that there was something that we didn't

00:26:20,260 --> 00:26:23,470
know who just allocated some time as a

00:26:21,880 --> 00:26:26,200
buffer as some money as a buffer and

00:26:23,470 --> 00:26:28,630
then we just to go user storage broke

00:26:26,200 --> 00:26:30,610
them down to some task and then fill up

00:26:28,630 --> 00:26:32,500
the scope what we had for this girl band

00:26:30,610 --> 00:26:34,960
then all is fine and start working what

00:26:32,500 --> 00:26:37,480
then happens then we have a user story

00:26:34,960 --> 00:26:40,090
that expanded because there is something

00:26:37,480 --> 00:26:41,740
we didn't know okay that's good that's

00:26:40,090 --> 00:26:47,920
what they had the buffer so we just kept

00:26:41,740 --> 00:26:50,230
working then we get working on user32

00:26:47,920 --> 00:26:52,930
two and three and starts running in the

00:26:50,230 --> 00:26:54,880
same problems we can see the buffers now

00:26:52,930 --> 00:26:57,670
can diffuse we have a little bit left so

00:26:54,880 --> 00:26:59,140
we kind of concerned but it's okay as

00:26:57,670 --> 00:27:02,020
long as the rest of the user stories

00:26:59,140 --> 00:27:04,390
will be in within the estimate then

00:27:02,020 --> 00:27:06,250
everything is fine but what is the

00:27:04,390 --> 00:27:09,060
chance that it will but it was kind of

00:27:06,250 --> 00:27:11,710
what the way we work with it and

00:27:09,060 --> 00:27:14,530
actually what we shoot line here is that

00:27:11,710 --> 00:27:17,160
we probably should panic here when you

00:27:14,530 --> 00:27:20,050
still don't know what will happen here

00:27:17,160 --> 00:27:24,220
so how to handle that we use the concept

00:27:20,050 --> 00:27:27,040
of story points let's take the scenario

00:27:24,220 --> 00:27:29,050
again why this is a problem we have the

00:27:27,040 --> 00:27:30,820
management going to developer saying how

00:27:29,050 --> 00:27:32,590
long will it take to do this some kind

00:27:30,820 --> 00:27:33,890
of start that we need to do and the

00:27:32,590 --> 00:27:36,170
developer says so

00:27:33,890 --> 00:27:39,470
have a no idea my best guess is like 150

00:27:36,170 --> 00:27:42,680
to 250 hours from what I know right now

00:27:39,470 --> 00:27:45,560
and for some reason management to hear

00:27:42,680 --> 00:27:48,400
that this is manageable within 150 hours

00:27:45,560 --> 00:27:51,860
and so you develop a down here laughing

00:27:48,400 --> 00:27:53,600
fantastic but actually this is not the

00:27:51,860 --> 00:27:57,290
biggest problem that we have with this

00:27:53,600 --> 00:27:59,450
way to do they do things the big problem

00:27:57,290 --> 00:28:02,420
here is that we actually not doing this

00:27:59,450 --> 00:28:04,910
right if you try to be a bit more

00:28:02,420 --> 00:28:06,860
scientific I'm not a biologist I'll say

00:28:04,910 --> 00:28:10,340
first but if you look at how the brain

00:28:06,860 --> 00:28:13,490
works if we take an isolated item and

00:28:10,340 --> 00:28:16,550
present that to a person and we like

00:28:13,490 --> 00:28:18,140
that person to describe this object then

00:28:16,550 --> 00:28:21,130
we get this problem that the brain

00:28:18,140 --> 00:28:24,290
actually tries to set up thousands of

00:28:21,130 --> 00:28:26,870
items it can compare to to try to

00:28:24,290 --> 00:28:29,900
describe this and that's very high on

00:28:26,870 --> 00:28:31,790
the way we think so instead of that we

00:28:29,900 --> 00:28:34,820
can put in another object to compare

00:28:31,790 --> 00:28:37,400
this with and even though again I'm not

00:28:34,820 --> 00:28:40,220
a biologist I can quite fast say that

00:28:37,400 --> 00:28:42,230
I'm sure that this organism is way more

00:28:40,220 --> 00:28:44,240
complex than this organism and I can

00:28:42,230 --> 00:28:47,210
tell this as an animal this is from a

00:28:44,240 --> 00:28:49,310
plant and already they're against

00:28:47,210 --> 00:28:51,350
actually say a lot about it not having

00:28:49,310 --> 00:28:54,380
that much knowledge about the specific

00:28:51,350 --> 00:28:56,480
of this but we know what is you can say

00:28:54,380 --> 00:28:58,790
the difference between these two objects

00:28:56,480 --> 00:29:01,370
and that's actually what story point can

00:28:58,790 --> 00:29:04,160
do for you it can tell you about what is

00:29:01,370 --> 00:29:07,300
the difference in complexity compared

00:29:04,160 --> 00:29:09,680
between two objects to use of stories

00:29:07,300 --> 00:29:12,770
and this is a way easier way for the

00:29:09,680 --> 00:29:14,870
brain to to compare objects and actually

00:29:12,770 --> 00:29:18,020
all kind of studies show that this will

00:29:14,870 --> 00:29:20,330
give more valid estimations of course

00:29:18,020 --> 00:29:22,250
there's also a downside to this it can

00:29:20,330 --> 00:29:25,130
be very hard to make your customers your

00:29:22,250 --> 00:29:28,130
clients to understand the cost of the

00:29:25,130 --> 00:29:30,200
concepts of story points and especially

00:29:28,130 --> 00:29:32,960
this that a story point is not a static

00:29:30,200 --> 00:29:35,630
thing a story point is only telling us

00:29:32,960 --> 00:29:38,390
about this object compared to this

00:29:35,630 --> 00:29:40,160
object what is the relationship and we

00:29:38,390 --> 00:29:42,230
can do that within a project maybe

00:29:40,160 --> 00:29:45,710
within a team but the most common

00:29:42,230 --> 00:29:47,210
mistake people do is starting to compare

00:29:45,710 --> 00:29:50,299
story points

00:29:47,210 --> 00:29:51,980
across teams across projects because it

00:29:50,299 --> 00:29:57,740
might not be the same value that we are

00:29:51,980 --> 00:29:59,779
working with so as small exercise here I

00:29:57,740 --> 00:30:01,820
like to do I'd like to ask you first how

00:29:59,779 --> 00:30:05,659
many of you have played with Lego when

00:30:01,820 --> 00:30:08,630
you were kid fantastic so now we've

00:30:05,659 --> 00:30:10,610
collected a bunch of experts in Diego so

00:30:08,630 --> 00:30:12,710
the next thing should be quite easy I

00:30:10,610 --> 00:30:14,090
just like to ask you this model i have

00:30:12,710 --> 00:30:17,720
here how long will it take to assemble

00:30:14,090 --> 00:30:22,789
it I know you don't have the manual and

00:30:17,720 --> 00:30:26,860
he gives us 10 hours that would fast I

00:30:22,789 --> 00:30:31,330
need you next time I both a Lego figure

00:30:26,860 --> 00:30:34,850
not that many likes to give very good

00:30:31,330 --> 00:30:36,440
200-400 that one guess and I'm getting

00:30:34,850 --> 00:30:39,350
bit concerned here because you are

00:30:36,440 --> 00:30:42,799
hopefully all in IT business and no one

00:30:39,350 --> 00:30:46,820
asked what should this one do what can I

00:30:42,799 --> 00:30:48,980
do maybe they don't know but if now I

00:30:46,820 --> 00:30:50,799
say okay I don't like to know how many

00:30:48,980 --> 00:30:53,690
hours they will take but I put this

00:30:50,799 --> 00:30:56,330
model in instead and now I ask another

00:30:53,690 --> 00:30:58,490
question I'd like to ask you which one

00:30:56,330 --> 00:31:00,760
of these will take the longest the one

00:30:58,490 --> 00:31:03,169
to the left of the one to the right

00:31:00,760 --> 00:31:10,010
anyone who wants to come with a guess on

00:31:03,169 --> 00:31:13,010
that who said right hopefully it will be

00:31:10,010 --> 00:31:14,570
the one here to the left they become

00:31:13,010 --> 00:31:17,299
quite fast see that this is quite

00:31:14,570 --> 00:31:20,570
complex and my next question is if you

00:31:17,299 --> 00:31:24,909
can only say on a scale is this twice

00:31:20,570 --> 00:31:27,620
the time 4 times 8 times 16 or 32 times

00:31:24,909 --> 00:31:29,809
then you actually might have an idea on

00:31:27,620 --> 00:31:32,600
where and the scale we are and that's

00:31:29,809 --> 00:31:34,940
all we want to know because we don't

00:31:32,600 --> 00:31:38,630
have more information right now but now

00:31:34,940 --> 00:31:40,250
we have some idea on how these two how

00:31:38,630 --> 00:31:43,760
complex they are compared to each other

00:31:40,250 --> 00:31:47,149
and how do we do this in practice in

00:31:43,760 --> 00:31:49,250
every day to basics we start using the

00:31:47,149 --> 00:31:52,010
concept and concept of planning poker

00:31:49,250 --> 00:31:54,799
which is a great guessing game panic

00:31:52,010 --> 00:31:57,230
over is quite simple we get the team

00:31:54,799 --> 00:31:59,539
together they got everyone get a deck of

00:31:57,230 --> 00:32:02,239
cards like this and you can see it's

00:31:59,539 --> 00:32:04,609
it's raising quite rapidly and that's

00:32:02,239 --> 00:32:06,799
good then get the team into a room

00:32:04,609 --> 00:32:09,080
either bit the scrum master or the

00:32:06,799 --> 00:32:11,149
product owner and they take one user

00:32:09,080 --> 00:32:14,690
story and described the user story quite

00:32:11,149 --> 00:32:17,330
fast and the team are not allowed they

00:32:14,690 --> 00:32:18,409
allowed to ask simple basic questions

00:32:17,330 --> 00:32:20,720
but they're not allowed to start

00:32:18,409 --> 00:32:22,609
discussing how do we solve this user

00:32:20,720 --> 00:32:24,649
story instead of that they take that big

00:32:22,609 --> 00:32:26,419
of carb and pick one card and we wait

00:32:24,649 --> 00:32:28,700
for everyone to sit with their card and

00:32:26,419 --> 00:32:31,999
then they can show the card to us and

00:32:28,700 --> 00:32:33,710
thereby we can see how complex did they

00:32:31,999 --> 00:32:35,809
think that this user story on and

00:32:33,710 --> 00:32:37,639
sometimes there would be quite a big

00:32:35,809 --> 00:32:39,859
difference between how complex your

00:32:37,639 --> 00:32:42,320
developers think that this user story on

00:32:39,859 --> 00:32:43,609
so instead of starting a discussion now

00:32:42,320 --> 00:32:46,249
now we just take the guy with the

00:32:43,609 --> 00:32:49,099
highest card and ask him why do you

00:32:46,249 --> 00:32:51,649
think this task is that complex and he

00:32:49,099 --> 00:32:53,629
got the chance to say oh we need to make

00:32:51,649 --> 00:32:55,159
a lot of customization create our own my

00:32:53,629 --> 00:32:57,739
jewels from scratch and stuff like that

00:32:55,159 --> 00:32:59,539
and then we go to the guy with the

00:32:57,739 --> 00:33:01,489
smallest about you and say he can then

00:32:59,539 --> 00:33:03,679
say tell us yeah but there's some good

00:33:01,489 --> 00:33:06,349
bad some good monkeys out there and that

00:33:03,679 --> 00:33:10,340
might actually solve I ninety-five

00:33:06,349 --> 00:33:12,289
percent of all we need to do and then

00:33:10,340 --> 00:33:14,840
this is the vendor can help of short

00:33:12,289 --> 00:33:16,220
discussion about this and probably a guy

00:33:14,840 --> 00:33:17,629
with an eight sitting in the middle say

00:33:16,220 --> 00:33:19,489
hey yeah you might be right I've been

00:33:17,629 --> 00:33:21,169
working with that module line and quite

00:33:19,489 --> 00:33:22,789
sure we can make this modification to

00:33:21,169 --> 00:33:24,619
the module and then we'll be reaching

00:33:22,789 --> 00:33:27,349
like one hundred percent okay wonderful

00:33:24,619 --> 00:33:30,529
then everyone picks up a new card do the

00:33:27,349 --> 00:33:34,669
same as we did just moments ago and we

00:33:30,529 --> 00:33:37,789
should be at least nearly on the same

00:33:34,669 --> 00:33:39,919
page of course there can be a situation

00:33:37,789 --> 00:33:41,989
where we're not but here we can say ok

00:33:39,919 --> 00:33:44,629
that's an eight and always be a bit more

00:33:41,989 --> 00:33:46,909
pessimistic if you in dev if you have a

00:33:44,629 --> 00:33:48,320
big band still in numbers here there

00:33:46,909 --> 00:33:49,970
might be a good reason for that it might

00:33:48,320 --> 00:33:52,940
be because we don't have the knowledge

00:33:49,970 --> 00:33:55,190
that we need to do this and there could

00:33:52,940 --> 00:33:57,049
be two reasons for that one thing can do

00:33:55,190 --> 00:33:59,450
it can be that the user thoria that

00:33:57,049 --> 00:34:00,979
regard is not good enough then it is you

00:33:59,450 --> 00:34:04,369
and the product owner will have to go

00:34:00,979 --> 00:34:06,950
back and revisit this use of story and

00:34:04,369 --> 00:34:09,200
that's okay the developers should never

00:34:06,950 --> 00:34:11,119
allow a bank user story to get through

00:34:09,200 --> 00:34:13,759
here it's that responsibility

00:34:11,119 --> 00:34:16,970
to make sure that they understand this

00:34:13,759 --> 00:34:18,829
and they can vouch for for this estimate

00:34:16,970 --> 00:34:20,809
the other thing can be that actually

00:34:18,829 --> 00:34:22,759
even though this is very highly skilled

00:34:20,809 --> 00:34:24,710
developers there is some technical

00:34:22,759 --> 00:34:26,470
questions that they can't answer because

00:34:24,710 --> 00:34:29,809
they have not worked with this before

00:34:26,470 --> 00:34:32,990
and then we can make a time box for them

00:34:29,809 --> 00:34:35,269
you usually call this a spike it's like

00:34:32,990 --> 00:34:37,609
you're setting off like let's say three

00:34:35,269 --> 00:34:39,399
hours and say it's okay we can allocate

00:34:37,609 --> 00:34:41,419
three hours for someone to go

00:34:39,399 --> 00:34:43,579
researching on this and then we should

00:34:41,419 --> 00:34:45,829
be able to do it and then take the user

00:34:43,579 --> 00:34:48,829
story up next time you do this planning

00:34:45,829 --> 00:34:50,659
poker session and the guy who spent the

00:34:48,829 --> 00:34:53,599
three hours can then tell the rest of

00:34:50,659 --> 00:34:55,849
the team this is what I think and this

00:34:53,599 --> 00:34:57,529
is also a great one thing yeah of course

00:34:55,849 --> 00:34:58,759
it's get great estimates but another

00:34:57,529 --> 00:35:01,369
good thing about the planning poker

00:34:58,759 --> 00:35:04,309
session is that you also get this as a

00:35:01,369 --> 00:35:06,380
forum to share knowledge between your

00:35:04,309 --> 00:35:09,019
developers so don't think that you can

00:35:06,380 --> 00:35:12,200
do this just one or two guys do it with

00:35:09,019 --> 00:35:14,269
the team so I like to talk a bit about

00:35:12,200 --> 00:35:16,670
just in time management after this

00:35:14,269 --> 00:35:18,739
because now we know how we find out our

00:35:16,670 --> 00:35:21,109
user stories now we need to find out how

00:35:18,739 --> 00:35:23,390
do we make these workforce in everyday

00:35:21,109 --> 00:35:26,509
basic and I need to say that this

00:35:23,390 --> 00:35:29,089
example is extremely simplified because

00:35:26,509 --> 00:35:33,349
basically when we work on projects in a

00:35:29,089 --> 00:35:36,079
doubt we take in like fifty to a hundred

00:35:33,349 --> 00:35:37,849
user stories for project but if I put a

00:35:36,079 --> 00:35:40,999
hundred user stories up here I think

00:35:37,849 --> 00:35:42,650
I'll lose you underway even with the

00:35:40,999 --> 00:35:45,920
small amount of user start a mite and

00:35:42,650 --> 00:35:49,819
please don't feel free to to ask

00:35:45,920 --> 00:35:51,859
question under way but basically what we

00:35:49,819 --> 00:35:54,499
have is we have this back Rock of user

00:35:51,859 --> 00:35:56,900
stories and we know how many story

00:35:54,499 --> 00:36:00,529
points we have for each user story so we

00:35:56,900 --> 00:36:01,849
know the complexity compared between the

00:36:00,529 --> 00:36:05,390
users thoughts but we don't know how far

00:36:01,849 --> 00:36:06,950
can we get we can't take the you the

00:36:05,390 --> 00:36:09,619
story points right now and turn it into

00:36:06,950 --> 00:36:12,589
ours so what we like to do is that we

00:36:09,619 --> 00:36:14,900
take the first user stories take some of

00:36:12,589 --> 00:36:16,190
the high prioritize user stores and the

00:36:14,900 --> 00:36:18,200
users those that you feel most

00:36:16,190 --> 00:36:19,670
comfortable about take something that

00:36:18,200 --> 00:36:21,079
you have done before something that

00:36:19,670 --> 00:36:21,460
looks like at least something you have

00:36:21,079 --> 00:36:23,740
done

00:36:21,460 --> 00:36:26,619
for and then we break them down to two

00:36:23,740 --> 00:36:29,020
subtask and put an estimate on them in

00:36:26,619 --> 00:36:31,960
hours and then we can do some basic math

00:36:29,020 --> 00:36:35,020
we can take the total hours here in this

00:36:31,960 --> 00:36:37,119
example we have like 89 hours then we

00:36:35,020 --> 00:36:39,339
can take the total of our story points

00:36:37,119 --> 00:36:41,650
and do some simply month and say how

00:36:39,339 --> 00:36:44,290
many hours do you spend per story point

00:36:41,650 --> 00:36:46,869
this is also called our velocity this

00:36:44,290 --> 00:36:49,630
tells us how fast are we moving forward

00:36:46,869 --> 00:36:51,190
how many for every time we spend a

00:36:49,630 --> 00:36:54,640
hundred dollars how many user stories

00:36:51,190 --> 00:36:57,400
can we expect to do so basically we get

00:36:54,640 --> 00:36:59,050
this again i simplified we don't do that

00:36:57,400 --> 00:37:01,270
many projects in this science but just

00:36:59,050 --> 00:37:04,980
for the example and manager come in and

00:37:01,270 --> 00:37:07,780
say okay i have only 160 hours to spend

00:37:04,980 --> 00:37:09,550
that's all right now we have to find out

00:37:07,780 --> 00:37:11,230
how far can we get four hundred and

00:37:09,550 --> 00:37:13,450
sixty hours we have the velocity so now

00:37:11,230 --> 00:37:16,300
we can just do this simple math and find

00:37:13,450 --> 00:37:19,990
out that 160 hours with the current

00:37:16,300 --> 00:37:22,480
velocity is like 70 story points wait

00:37:19,990 --> 00:37:25,030
now we can see how far we'll get but I

00:37:22,480 --> 00:37:27,130
actually get to solve up to users 39 and

00:37:25,030 --> 00:37:29,890
after that we can't do it within the

00:37:27,130 --> 00:37:32,140
scope so it's only two ways to fix this

00:37:29,890 --> 00:37:34,270
if the customer comes to tell us we

00:37:32,140 --> 00:37:36,760
really need this okay there's two things

00:37:34,270 --> 00:37:39,040
we can do we can use we can remove a

00:37:36,760 --> 00:37:43,660
user story here or we can expand the

00:37:39,040 --> 00:37:47,230
budget that's what we can do so then we

00:37:43,660 --> 00:37:49,599
start working on the project and what

00:37:47,230 --> 00:37:52,570
then happens then again we've run into

00:37:49,599 --> 00:37:54,849
the same problem as we did before we

00:37:52,570 --> 00:37:56,859
still have some task that we couldn't

00:37:54,849 --> 00:37:59,440
foresee that this would be more complex

00:37:56,859 --> 00:38:02,200
of course we should also run into task

00:37:59,440 --> 00:38:04,300
that is less complex than we expect it

00:38:02,200 --> 00:38:07,300
but just for the example here we take

00:38:04,300 --> 00:38:10,839
them or pessimistic view of it so let's

00:38:07,300 --> 00:38:13,440
say that some some task use of those is

00:38:10,839 --> 00:38:17,109
getting more complex than we have hoped

00:38:13,440 --> 00:38:20,470
then what to do this is very important

00:38:17,109 --> 00:38:22,180
keep your story points static don't

00:38:20,470 --> 00:38:23,830
change the story points the only time

00:38:22,180 --> 00:38:28,650
you want to change the story point it if

00:38:23,830 --> 00:38:31,240
you change the user story a lot because

00:38:28,650 --> 00:38:33,970
this will represent what we thought was

00:38:31,240 --> 00:38:34,630
the complexity of this user story

00:38:33,970 --> 00:38:36,460
compared to

00:38:34,630 --> 00:38:39,940
other user stories so what we really

00:38:36,460 --> 00:38:41,799
want to do is that we need to skip this

00:38:39,940 --> 00:38:43,180
one and do it all over again so now we

00:38:41,799 --> 00:38:45,220
actually worked on it so now we have

00:38:43,180 --> 00:38:48,250
some more knowledge and we can take that

00:38:45,220 --> 00:38:50,940
knowledge in to the game so we can again

00:38:48,250 --> 00:38:54,670
say okay they have 60 year three hours

00:38:50,940 --> 00:38:58,720
we only ended like 18 story points now

00:38:54,670 --> 00:39:01,150
our velocities 3.5 oh and therefore we

00:38:58,720 --> 00:39:04,329
have now a problem that we won't get as

00:39:01,150 --> 00:39:06,309
much done as we hope to but it's better

00:39:04,329 --> 00:39:10,150
to know it now than to know it when we

00:39:06,309 --> 00:39:12,190
have done the whole backlog so now we

00:39:10,150 --> 00:39:15,220
just expand the rest of the user stories

00:39:12,190 --> 00:39:16,839
with this factor and we can see okay

00:39:15,220 --> 00:39:18,910
this is going to be a problem now we can

00:39:16,839 --> 00:39:21,460
only do the first six user stories but

00:39:18,910 --> 00:39:23,559
we can take this discussion with the

00:39:21,460 --> 00:39:25,660
client and customer up front and find

00:39:23,559 --> 00:39:30,130
out a solution for this because we are

00:39:25,660 --> 00:39:33,069
we are working out from from a time and

00:39:30,130 --> 00:39:35,289
material basics they just pay power so

00:39:33,069 --> 00:39:37,900
we need to guide the customer here and

00:39:35,289 --> 00:39:39,730
help them and show them how much will do

00:39:37,900 --> 00:39:41,950
and we can always tell them that we can

00:39:39,730 --> 00:39:43,809
this is how we look like right now then

00:39:41,950 --> 00:39:45,460
we start working on some more user

00:39:43,809 --> 00:39:46,930
stories we can't be lucky that some of

00:39:45,460 --> 00:39:48,759
them are less complex than we thought

00:39:46,930 --> 00:39:51,970
and then we do this again but we need

00:39:48,759 --> 00:39:54,039
always to keep tracking this and now

00:39:51,970 --> 00:39:56,019
back to the headline just in time

00:39:54,039 --> 00:39:58,539
management is so important here and why

00:39:56,019 --> 00:40:01,180
that just in time management means that

00:39:58,539 --> 00:40:03,279
we should only look at what we need to

00:40:01,180 --> 00:40:05,829
work with right now because in the other

00:40:03,279 --> 00:40:08,049
model you saw we tend to do that we

00:40:05,829 --> 00:40:10,089
could look at all our user stories and

00:40:08,049 --> 00:40:12,880
then we broke all the user that and

00:40:10,089 --> 00:40:14,980
stories down to stop tasks at the time

00:40:12,880 --> 00:40:16,599
we have the least knowledge about this

00:40:14,980 --> 00:40:18,160
project and that's a problem because

00:40:16,599 --> 00:40:21,369
every time we found out that something

00:40:18,160 --> 00:40:24,009
changes there might be some external AP

00:40:21,369 --> 00:40:25,839
is that didn't do as we expected or

00:40:24,009 --> 00:40:27,849
anything like that that we can expect to

00:40:25,839 --> 00:40:29,440
hit the rest of our user stories if we

00:40:27,849 --> 00:40:31,480
already broke all these users though

00:40:29,440 --> 00:40:33,700
it's down to shop task then we have a

00:40:31,480 --> 00:40:36,039
lot of user stories that we have to

00:40:33,700 --> 00:40:39,339
revisit in this model we only have to

00:40:36,039 --> 00:40:40,900
revisit what we already work with what

00:40:39,339 --> 00:40:42,220
we already broke down so no mean we

00:40:40,900 --> 00:40:45,700
don't have to do spend that much time

00:40:42,220 --> 00:40:47,470
revisiting and stuff does this make any

00:40:45,700 --> 00:40:50,960
sense to you

00:40:47,470 --> 00:40:55,010
fantastic song is nodding and someone's

00:40:50,960 --> 00:40:57,650
just falling asleep this is the basic

00:40:55,010 --> 00:41:01,160
model that we work from now and now she

00:40:57,650 --> 00:41:03,079
doesn't get this again all right to tell

00:41:01,160 --> 00:41:09,640
you a bit about the results that we've

00:41:03,079 --> 00:41:12,559
reached so far well we see that it works

00:41:09,640 --> 00:41:14,510
but its work in progress as I told you

00:41:12,559 --> 00:41:17,180
in the beginning we haven't been doing

00:41:14,510 --> 00:41:20,780
this dedicated for such a long time yet

00:41:17,180 --> 00:41:23,000
so we still have a lot of work to do but

00:41:20,780 --> 00:41:27,589
we can see that one of our main

00:41:23,000 --> 00:41:30,339
challenges keeping our fixed budget we

00:41:27,589 --> 00:41:33,829
kind of solved when we continuously

00:41:30,339 --> 00:41:35,390
revisit our velocity to redefine and

00:41:33,829 --> 00:41:38,650
prioritize the scope then we can keep

00:41:35,390 --> 00:41:41,839
the fixed budget that's a good thing

00:41:38,650 --> 00:41:45,170
also one of our big challenges was the

00:41:41,839 --> 00:41:49,490
estimation and that has improved a lot

00:41:45,170 --> 00:41:53,000
in accuracy when we are estimating our

00:41:49,490 --> 00:41:55,809
tasks at sprint startup we bring in our

00:41:53,000 --> 00:41:58,640
learnings from earlier in the project

00:41:55,809 --> 00:42:01,849
which again makes the estimates for a

00:41:58,640 --> 00:42:04,250
more accurate also when we're doing the

00:42:01,849 --> 00:42:07,760
planning poker as a team instead of just

00:42:04,250 --> 00:42:11,299
one person estimating then we both

00:42:07,760 --> 00:42:13,099
support knowledge sharing but also we

00:42:11,299 --> 00:42:16,339
get the team to commit to the sore

00:42:13,099 --> 00:42:20,690
points again that's a good thing that

00:42:16,339 --> 00:42:25,220
results in more precise estimates but

00:42:20,690 --> 00:42:27,730
there's always a but implementing agile

00:42:25,220 --> 00:42:32,480
methods is is hard work and it depends

00:42:27,730 --> 00:42:35,510
dedication and investment also we

00:42:32,480 --> 00:42:38,329
experience that it's often difficult to

00:42:35,510 --> 00:42:41,270
explain to the customer how prioritizing

00:42:38,329 --> 00:42:43,490
functionality can be a good thing they

00:42:41,270 --> 00:42:48,349
really just want it all all of the time

00:42:43,490 --> 00:42:50,390
and sometimes when telling them that we

00:42:48,349 --> 00:42:54,109
want to build what's gives the most

00:42:50,390 --> 00:42:56,420
value to you to your end customer it's

00:42:54,109 --> 00:42:58,130
kind of hard to accept that you're not

00:42:56,420 --> 00:42:58,789
getting all of what you thought you were

00:42:58,130 --> 00:43:01,880
going to get

00:42:58,789 --> 00:43:04,479
and we also experienced that some of our

00:43:01,880 --> 00:43:08,019
customers simply aren't ready for agile

00:43:04,479 --> 00:43:10,429
they think it's too risky not knowing

00:43:08,019 --> 00:43:13,039
the end product when they're signing the

00:43:10,429 --> 00:43:16,910
contract not knowing exactly what you're

00:43:13,039 --> 00:43:20,299
going to get and also on our small

00:43:16,910 --> 00:43:23,660
projects that might only be like two or

00:43:20,299 --> 00:43:25,609
three sprints the whole scrum thing can

00:43:23,660 --> 00:43:27,410
be difficult to implement or at least

00:43:25,609 --> 00:43:29,059
using your velocity because you don't

00:43:27,410 --> 00:43:30,679
get to know so much about the project

00:43:29,059 --> 00:43:40,059
when you're only doing two or three

00:43:30,679 --> 00:43:40,059
sprints yes ones like to rule them all

00:43:40,630 --> 00:43:46,239
but what I have seen is the most

00:43:43,459 --> 00:43:50,839
important when you start adapting these

00:43:46,239 --> 00:43:53,390
agile methods is no two organizations

00:43:50,839 --> 00:43:56,630
are the saying you need to customize

00:43:53,390 --> 00:43:58,459
these methods to the context that you

00:43:56,630 --> 00:44:01,400
are working in I've seen so many

00:43:58,459 --> 00:44:04,069
companies reading a lot of books sending

00:44:01,400 --> 00:44:06,289
all the employees to be a certified

00:44:04,069 --> 00:44:09,469
scrum masters and stuff like that and

00:44:06,289 --> 00:44:11,749
they don't have anyone to kind of take

00:44:09,469 --> 00:44:14,659
the responsibility for this to happen on

00:44:11,749 --> 00:44:16,429
everyday basis so it's so important that

00:44:14,659 --> 00:44:18,919
if you want to go back and implement

00:44:16,429 --> 00:44:21,229
some of these methods always keep in

00:44:18,919 --> 00:44:23,269
mind what it's my context of this what

00:44:21,229 --> 00:44:25,759
can I use and again go for the e to

00:44:23,269 --> 00:44:28,579
receive action plan trying to implement

00:44:25,759 --> 00:44:30,829
some of it see how it works adjust it

00:44:28,579 --> 00:44:33,709
adjusted adjust it adjusted all the time

00:44:30,829 --> 00:44:36,109
you're never done doing this not even

00:44:33,709 --> 00:44:41,359
Google are done doing this they also

00:44:36,109 --> 00:44:44,630
adjust these methods along the way so I

00:44:41,359 --> 00:44:47,179
think we've quite there yeah fantastic

00:44:44,630 --> 00:44:51,979
um first of all any questions about

00:44:47,179 --> 00:44:53,719
these slides I think you need to go to

00:44:51,979 --> 00:44:59,209
the mic actually because it's being

00:44:53,719 --> 00:45:00,380
recorded hi you better yeah so simple

00:44:59,209 --> 00:45:03,650
question you're talking about different

00:45:00,380 --> 00:45:07,620
user stories and in my experience that

00:45:03,650 --> 00:45:09,540
they're quite interdependent so if you

00:45:07,620 --> 00:45:11,250
this user story one you've already built

00:45:09,540 --> 00:45:14,270
some of the functionality for user story

00:45:11,250 --> 00:45:17,850
too and how do you how do you estimate

00:45:14,270 --> 00:45:20,340
based on that interdependence that's a

00:45:17,850 --> 00:45:24,240
very good question and it's a question I

00:45:20,340 --> 00:45:26,310
hear a lot to make this short first of

00:45:24,240 --> 00:45:28,320
all its first of all it's good practice

00:45:26,310 --> 00:45:30,750
to break down you use the stories in

00:45:28,320 --> 00:45:33,810
smallest bits and of course there will

00:45:30,750 --> 00:45:35,970
be some tasks then you kind of can say

00:45:33,810 --> 00:45:38,100
this is associated with all my use of

00:45:35,970 --> 00:45:39,840
stories what we did is that there would

00:45:38,100 --> 00:45:41,340
be some technical charts first of all

00:45:39,840 --> 00:45:42,750
that you can say setting up test

00:45:41,340 --> 00:45:45,480
platforms and stuff like that it's just

00:45:42,750 --> 00:45:49,140
we need that done we made that as a

00:45:45,480 --> 00:45:51,180
specific issue type so we just took it

00:45:49,140 --> 00:45:53,670
away from the user stories then you can

00:45:51,180 --> 00:45:56,760
say if you can also have some like a

00:45:53,670 --> 00:46:00,210
module that would fix multiple use of

00:45:56,760 --> 00:46:02,640
stories then go for the user stories use

00:46:00,210 --> 00:46:04,470
the story with the highest value the

00:46:02,640 --> 00:46:06,720
highest business value and allocate the

00:46:04,470 --> 00:46:08,820
time the basic time for implementing the

00:46:06,720 --> 00:46:10,470
module on that and just remembered

00:46:08,820 --> 00:46:12,270
because then when you look at your

00:46:10,470 --> 00:46:14,580
backlog again and and compare your

00:46:12,270 --> 00:46:16,470
business value with this donation thing

00:46:14,580 --> 00:46:18,840
oh this is going to take so long time

00:46:16,470 --> 00:46:21,840
rather have these four but then you have

00:46:18,840 --> 00:46:24,420
the relationship between them and screw

00:46:21,840 --> 00:46:27,440
up things but it's very important to

00:46:24,420 --> 00:46:29,790
keep it down to multiple user stories

00:46:27,440 --> 00:46:32,100
because when you do that even though

00:46:29,790 --> 00:46:36,030
you're implementing a module that can

00:46:32,100 --> 00:46:38,910
fix like more multiple user stories then

00:46:36,030 --> 00:46:41,400
you can still allocate and saying but

00:46:38,910 --> 00:46:43,260
it's not very often that you see one

00:46:41,400 --> 00:46:45,660
module fixing everything for all user

00:46:43,260 --> 00:46:47,670
stories you might fix like ninety

00:46:45,660 --> 00:46:49,770
percent of the use of stories that it

00:46:47,670 --> 00:46:52,230
associated with but you still need this

00:46:49,770 --> 00:46:54,090
last ten percent and you still need to

00:46:52,230 --> 00:46:55,680
keep the use of storage for that and say

00:46:54,090 --> 00:46:59,040
okay for the first use of story I'll

00:46:55,680 --> 00:47:01,440
implement the module and I fix it so it

00:46:59,040 --> 00:47:03,330
will solve this user story and I all I

00:47:01,440 --> 00:47:05,610
have some other user stories they might

00:47:03,330 --> 00:47:07,410
not be that highly prioritized and you

00:47:05,610 --> 00:47:10,680
can end up with a project all our

00:47:07,410 --> 00:47:13,560
projects is is have this fixed budget

00:47:10,680 --> 00:47:15,330
and in the end of the day we'll find out

00:47:13,560 --> 00:47:18,510
that there might be some other small

00:47:15,330 --> 00:47:21,550
tasks they were actually rather have

00:47:18,510 --> 00:47:23,590
than fixing this module doing

00:47:21,550 --> 00:47:25,900
the rest of the user stories so keep the

00:47:23,590 --> 00:47:28,570
use of stories because then you can you

00:47:25,900 --> 00:47:30,550
can still prioritize even though it's a

00:47:28,570 --> 00:47:32,200
small fixed to a module that will fix

00:47:30,550 --> 00:47:34,900
this user story there might be another

00:47:32,200 --> 00:47:39,700
small fix that is more valuable to you

00:47:34,900 --> 00:47:42,580
does that make sense yeah there is other

00:47:39,700 --> 00:47:48,970
questions no one wants to go to the back

00:47:42,580 --> 00:47:51,490
yeah the guy in the blue shirt there so

00:47:48,970 --> 00:47:54,880
how would you self customer this idea

00:47:51,490 --> 00:47:59,350
that if they pay X amount of money they

00:47:54,880 --> 00:48:01,150
may get three stories of 5 or 10 or 10 I

00:47:59,350 --> 00:48:04,930
know it's hard but you have any pointers

00:48:01,150 --> 00:48:07,360
how with you yes basically the way to

00:48:04,930 --> 00:48:10,870
sell this to the customers to explain

00:48:07,360 --> 00:48:13,240
this process explain to them why is the

00:48:10,870 --> 00:48:15,520
agile methods better than the old

00:48:13,240 --> 00:48:17,830
waterfall model and the way I usually

00:48:15,520 --> 00:48:21,910
explain this to customer is that there's

00:48:17,830 --> 00:48:25,120
some some surveys make that showed that

00:48:21,910 --> 00:48:27,190
when you do the waterfall process you

00:48:25,120 --> 00:48:29,560
tend to build way more than you actually

00:48:27,190 --> 00:48:31,630
need and when you have this time

00:48:29,560 --> 00:48:33,880
material contract with the client they

00:48:31,630 --> 00:48:35,650
are the guys and paying for this and and

00:48:33,880 --> 00:48:37,660
once over a show there's like sixty

00:48:35,650 --> 00:48:39,790
percent of all you built that will end

00:48:37,660 --> 00:48:42,460
up in a calorie call never used or

00:48:39,790 --> 00:48:43,480
rarely used and we don't want to build

00:48:42,460 --> 00:48:47,010
that for the customer and the customer

00:48:43,480 --> 00:48:49,660
don't need that so it's it's a hard job

00:48:47,010 --> 00:48:51,360
basically no doubt about that but what

00:48:49,660 --> 00:48:53,950
we're doing in the doubt is that we keep

00:48:51,360 --> 00:48:56,410
these processes very close to the sales

00:48:53,950 --> 00:48:58,960
team and and make sure that our sales

00:48:56,410 --> 00:49:01,120
team understand why do we do this and

00:48:58,960 --> 00:49:05,380
what is the value in this for the

00:49:01,120 --> 00:49:08,410
customer but it is a hard job but take

00:49:05,380 --> 00:49:10,150
your time to present these methods to

00:49:08,410 --> 00:49:13,390
the custom and make them understand why

00:49:10,150 --> 00:49:16,870
is this a good idea yeah there's one guy

00:49:13,390 --> 00:49:18,370
standing at the mic idea the poker game

00:49:16,870 --> 00:49:20,200
seems really intriguing and I'm

00:49:18,370 --> 00:49:22,930
wondering how you transition to getting

00:49:20,200 --> 00:49:25,120
a lot of developers and fujita minds in

00:49:22,930 --> 00:49:26,410
the sales process to the estimation

00:49:25,120 --> 00:49:28,450
process because it seems like a lot of

00:49:26,410 --> 00:49:30,640
people's time for something that you may

00:49:28,450 --> 00:49:32,590
or may not sell at the end of the day so

00:49:30,640 --> 00:49:33,220
it seems like like you're playing hope

00:49:32,590 --> 00:49:35,890
your kind of

00:49:33,220 --> 00:49:38,380
with people's billable time yeah okay

00:49:35,890 --> 00:49:41,020
that's very good I a very good point

00:49:38,380 --> 00:49:43,599
what we can do about that is that in the

00:49:41,020 --> 00:49:46,570
start of a project instead of working

00:49:43,599 --> 00:49:48,250
with these highly specified use of

00:49:46,570 --> 00:49:50,020
stories in the beginning because we can

00:49:48,250 --> 00:49:51,910
spend a lot of time working on a

00:49:50,020 --> 00:49:55,900
contract that will never finish then

00:49:51,910 --> 00:49:59,290
rather work with with epics which is

00:49:55,900 --> 00:50:01,510
like a we can say a very large user

00:49:59,290 --> 00:50:03,810
story that would just explains big

00:50:01,510 --> 00:50:06,190
chunks of the functionality in the end

00:50:03,810 --> 00:50:07,930
system and then do the planning poker

00:50:06,190 --> 00:50:10,800
for that with a couple of lead

00:50:07,930 --> 00:50:13,480
developers and maybe the client manager

00:50:10,800 --> 00:50:16,210
and then take it from there but again

00:50:13,480 --> 00:50:18,670
make the client understand that this is

00:50:16,210 --> 00:50:20,440
not a contract with it with a fixed go

00:50:18,670 --> 00:50:24,820
we don't want to do that kind of kind of

00:50:20,440 --> 00:50:28,000
contracts so yeah that's basically what

00:50:24,820 --> 00:50:30,660
i recommend doing and then of course at

00:50:28,000 --> 00:50:33,369
adapt we focusing on making this

00:50:30,660 --> 00:50:34,990
analysis page for the customer because

00:50:33,369 --> 00:50:37,000
it's very often that a customer comes to

00:50:34,990 --> 00:50:39,280
us with an idea what they want and when

00:50:37,000 --> 00:50:40,930
we put it through our UX department will

00:50:39,280 --> 00:50:47,380
find out that's not why do customers

00:50:40,930 --> 00:50:50,520
need okay yeah next hi so when you are

00:50:47,380 --> 00:50:53,320
in the sales faced with a customer and

00:50:50,520 --> 00:50:56,260
you are able to sell this kind of agile

00:50:53,320 --> 00:50:59,470
process to him but he still says that I

00:50:56,260 --> 00:51:02,349
need some kind of budget I'd still it's

00:50:59,470 --> 00:51:06,160
some kind of poor box feature figure how

00:51:02,349 --> 00:51:08,619
much does this project cost how do you

00:51:06,160 --> 00:51:10,300
approach that then what do you first of

00:51:08,619 --> 00:51:12,270
all I like to turn it upside down and

00:51:10,300 --> 00:51:14,830
remind the customer this is not about

00:51:12,270 --> 00:51:17,109
how much will it cost because it's not

00:51:14,830 --> 00:51:18,880
an interesting discussion to have the

00:51:17,109 --> 00:51:22,119
with the customer it's about what kind

00:51:18,880 --> 00:51:24,369
of product can we create within the

00:51:22,119 --> 00:51:26,950
budget that you have and then we can say

00:51:24,369 --> 00:51:29,589
we expect that we can do this that's our

00:51:26,950 --> 00:51:30,940
best guess right now and then we start

00:51:29,589 --> 00:51:33,400
working on the project making these

00:51:30,940 --> 00:51:35,260
analysis and stuff like that and what we

00:51:33,400 --> 00:51:38,170
actually like to do is that we like to

00:51:35,260 --> 00:51:40,690
just sell this analysis for the customer

00:51:38,170 --> 00:51:43,030
and and spend like maybe two three

00:51:40,690 --> 00:51:44,950
hundred hours just finding out what is

00:51:43,030 --> 00:51:46,289
the right solution for you and we've

00:51:44,950 --> 00:51:48,269
done that then we had a lot

00:51:46,289 --> 00:51:51,150
user stories and actually the customers

00:51:48,269 --> 00:51:52,739
able to go to another I teahouse to get

00:51:51,150 --> 00:51:54,599
this building so they found out this is

00:51:52,739 --> 00:51:55,979
not we're working on Drupal but they

00:51:54,599 --> 00:51:57,809
might find out that this is not the

00:51:55,979 --> 00:52:00,419
right platform for the product they now

00:51:57,809 --> 00:52:01,859
know that they should build and and that

00:52:00,419 --> 00:52:03,989
way we would like to do that first

00:52:01,859 --> 00:52:06,869
sunlight separately and then find out

00:52:03,989 --> 00:52:08,699
should we build it in Drupal very often

00:52:06,869 --> 00:52:11,369
you can say from from our point of

00:52:08,699 --> 00:52:13,499
perspective this can be a bit risky of

00:52:11,369 --> 00:52:16,140
course but now we have accumulated all

00:52:13,499 --> 00:52:18,410
this knowledge about the project so it's

00:52:16,140 --> 00:52:22,049
not that easy to go to another

00:52:18,410 --> 00:52:24,989
development house anyway the damn answer

00:52:22,049 --> 00:52:28,769
the question ok next my question is

00:52:24,989 --> 00:52:31,559
around how you organize yourself over

00:52:28,769 --> 00:52:34,829
like with realm of crumbs over your

00:52:31,559 --> 00:52:37,380
whole an organization how do you manage

00:52:34,829 --> 00:52:38,759
several projects with graham at the same

00:52:37,380 --> 00:52:41,579
time I don't know if you have

00:52:38,759 --> 00:52:43,859
maintenance projects if you have ongoing

00:52:41,579 --> 00:52:47,549
client relationships how do you deal

00:52:43,859 --> 00:52:51,089
with these things yeah how much time to

00:52:47,549 --> 00:52:52,979
have maybe you want to answer that

00:52:51,089 --> 00:52:55,769
question well we have an organization

00:52:52,979 --> 00:52:58,739
that's client team-based meaning that we

00:52:55,769 --> 00:53:01,890
have actually for client seems with a

00:52:58,739 --> 00:53:03,209
group of developers aux or a project

00:53:01,890 --> 00:53:06,359
manager may be also a project

00:53:03,209 --> 00:53:09,089
coordinator so we have our clients

00:53:06,359 --> 00:53:11,999
attached to one team and they stay in

00:53:09,089 --> 00:53:15,119
this team even for maintenance for

00:53:11,999 --> 00:53:17,009
maintenance afterwards and within the

00:53:15,119 --> 00:53:20,339
client seemed we also have a scrum

00:53:17,009 --> 00:53:22,229
master and the product owner I do you

00:53:20,339 --> 00:53:24,809
have then per team several clients

00:53:22,229 --> 00:53:26,909
because sometime you will have then a

00:53:24,809 --> 00:53:29,130
bunch of clients yes we have very

00:53:26,909 --> 00:53:31,529
different sized clients actually so we

00:53:29,130 --> 00:53:33,269
have one team that is almost only

00:53:31,529 --> 00:53:35,569
working on one client and then we have

00:53:33,269 --> 00:53:39,299
other teams working on several clients

00:53:35,569 --> 00:53:42,359
and yeah it is a challenge doing lots of

00:53:39,299 --> 00:53:47,849
clients in the same team but we we make

00:53:42,359 --> 00:53:51,839
it work all right my question is values

00:53:47,849 --> 00:53:53,489
user stories and tasks so 12 user story

00:53:51,839 --> 00:53:55,949
is turning to task and how do you

00:53:53,489 --> 00:53:58,079
estimate the points without knowing all

00:53:55,949 --> 00:53:59,759
of the tasks first do a developer's

00:53:58,079 --> 00:54:04,499
estimate the task or

00:53:59,759 --> 00:54:08,609
how do you break it down to toss what we

00:54:04,499 --> 00:54:10,349
do first of all we get is the developers

00:54:08,609 --> 00:54:12,539
will break this down to task that is

00:54:10,349 --> 00:54:14,399
very important because it is the

00:54:12,539 --> 00:54:16,679
developer who is going to solve this

00:54:14,399 --> 00:54:21,659
tasks and they need to have this

00:54:16,679 --> 00:54:23,549
ownership of their the way we do the

00:54:21,659 --> 00:54:25,979
breakdown is that that's another reason

00:54:23,549 --> 00:54:27,779
to do that the the planning poker

00:54:25,979 --> 00:54:29,569
session with the whole team because then

00:54:27,779 --> 00:54:32,279
you have this knowledge sharing about

00:54:29,569 --> 00:54:34,949
the whole project and they're buying you

00:54:32,279 --> 00:54:36,779
can assign maybe to developers working

00:54:34,949 --> 00:54:39,239
together on some part of the project

00:54:36,779 --> 00:54:41,609
break that down to top task and some

00:54:39,239 --> 00:54:44,429
other can do it another way but

00:54:41,609 --> 00:54:46,889
basically this is why it's so important

00:54:44,429 --> 00:54:49,019
that your backlog is always prioritized

00:54:46,889 --> 00:54:51,059
because you'd start breaking down the

00:54:49,019 --> 00:54:53,609
user stories from the top of the backlog

00:54:51,059 --> 00:54:55,409
first again this just in time management

00:54:53,609 --> 00:54:58,109
is so important because else will spend

00:54:55,409 --> 00:55:00,209
way too much time just trying to break

00:54:58,109 --> 00:55:01,979
down task that when we were finished the

00:55:00,209 --> 00:55:03,569
Sprint will find out okay we're never

00:55:01,979 --> 00:55:06,269
going to use this anyway and then it's

00:55:03,569 --> 00:55:11,849
just wasted time did his answer the

00:55:06,269 --> 00:55:14,459
question yeah perfect hi I'm when you're

00:55:11,849 --> 00:55:16,649
planning sprints how do you mitigate for

00:55:14,459 --> 00:55:17,669
risk so for example you've broken down

00:55:16,649 --> 00:55:20,039
your user stories you've got them or

00:55:17,669 --> 00:55:21,989
prioritize and you now have a list of

00:55:20,039 --> 00:55:24,329
tasks and some of them are longer than

00:55:21,989 --> 00:55:26,579
others some of the more complex than

00:55:24,329 --> 00:55:28,709
others do you approach it with most

00:55:26,579 --> 00:55:30,299
complex tasks first do you give the

00:55:28,709 --> 00:55:32,729
client a quick bang for their buck and

00:55:30,299 --> 00:55:38,069
do some simple task first how do you

00:55:32,729 --> 00:55:40,949
balance that is it's a hard job

00:55:38,069 --> 00:55:42,959
basically again going back to the bank

00:55:40,949 --> 00:55:45,269
log we need to sort sort the bank like

00:55:42,959 --> 00:55:48,449
from what gave us the most value and

00:55:45,269 --> 00:55:51,239
that should be the main key for what you

00:55:48,449 --> 00:55:53,789
built first of course there can be if

00:55:51,239 --> 00:55:55,349
you can say the budget is so big that we

00:55:53,789 --> 00:55:57,529
know there's a bunch of stuff that we

00:55:55,349 --> 00:56:00,089
will build we can't launch without these

00:55:57,529 --> 00:56:03,029
then of course it's a good idea to build

00:56:00,089 --> 00:56:06,059
the most complex user storage first but

00:56:03,029 --> 00:56:08,489
as soon as you say the word complex user

00:56:06,059 --> 00:56:10,409
story you should revisit that user story

00:56:08,489 --> 00:56:11,550
and see if you could break it down so

00:56:10,409 --> 00:56:13,680
several less

00:56:11,550 --> 00:56:15,650
complex user stories that's fine

00:56:13,680 --> 00:56:18,150
important because then you can

00:56:15,650 --> 00:56:21,090
prioritize them again and it's very

00:56:18,150 --> 00:56:23,340
rarely that you have a complex task that

00:56:21,090 --> 00:56:27,150
can't be broken down to several user

00:56:23,340 --> 00:56:31,710
stories a lot of persons trying to tell

00:56:27,150 --> 00:56:32,910
you that it can't be done but it can ask

00:56:31,710 --> 00:56:34,710
you questions the first is about

00:56:32,910 --> 00:56:36,540
requirements who actually writes the

00:56:34,710 --> 00:56:38,880
requirements and are those in your user

00:56:36,540 --> 00:56:41,370
stories are they deep and detailed or

00:56:38,880 --> 00:56:43,590
the developer kind of you know works off

00:56:41,370 --> 00:56:46,740
of that yeah that's another thing I

00:56:43,590 --> 00:56:49,290
could talk about files and basically we

00:56:46,740 --> 00:56:52,470
use these user stories in a user story

00:56:49,290 --> 00:56:55,080
we have this model saying that as a user

00:56:52,470 --> 00:56:57,240
I like to be able to do something for

00:56:55,080 --> 00:56:59,580
some reason and then the product owner

00:56:57,240 --> 00:57:02,850
is the owner of the user story from here

00:56:59,580 --> 00:57:05,370
but the product owner we see that as a

00:57:02,850 --> 00:57:08,880
road that can be shared by multiple

00:57:05,370 --> 00:57:10,620
people and especially the client we need

00:57:08,880 --> 00:57:13,080
to have our client very close to us and

00:57:10,620 --> 00:57:18,720
they have to take part in this role as

00:57:13,080 --> 00:57:21,090
the product owner so they will be apart

00:57:18,720 --> 00:57:23,670
of and creating these user stories of

00:57:21,090 --> 00:57:25,590
course we will have one person very

00:57:23,670 --> 00:57:30,320
often in our organization the product

00:57:25,590 --> 00:57:33,180
manager who is is like in charge of

00:57:30,320 --> 00:57:34,740
making sure this is done and the quality

00:57:33,180 --> 00:57:36,930
of the user stories is all right but we

00:57:34,740 --> 00:57:39,750
do it with the customer and very often

00:57:36,930 --> 00:57:41,880
with our UX team will do it in the

00:57:39,750 --> 00:57:44,220
analysis phase that we do a front in the

00:57:41,880 --> 00:57:45,990
projects another thing it might be

00:57:44,220 --> 00:57:48,240
autistic over here but testing how do

00:57:45,990 --> 00:57:50,640
you integrate the testing or estimates

00:57:48,240 --> 00:57:52,680
for testing um that's the reason that we

00:57:50,640 --> 00:57:54,090
introduce these new processes because

00:57:52,680 --> 00:57:56,520
that was a big problem for us the

00:57:54,090 --> 00:57:59,640
quality for the first review from the

00:57:56,520 --> 00:58:02,130
customers was too bad to be honest that

00:57:59,640 --> 00:58:04,020
we have these basic errors that we met

00:58:02,130 --> 00:58:07,079
the client should never see because they

00:58:04,020 --> 00:58:09,390
they they just loose there

00:58:07,079 --> 00:58:12,269
they comfort in the project them they

00:58:09,390 --> 00:58:14,219
don't believe that we are the right

00:58:12,269 --> 00:58:16,559
house today if we keep showing them that

00:58:14,219 --> 00:58:19,469
stuff so we changed the way that

00:58:16,559 --> 00:58:24,059
approach user story lives through the

00:58:19,469 --> 00:58:26,609
project and make it necessary for the

00:58:24,059 --> 00:58:29,190
user story to go through QA for example

00:58:26,609 --> 00:58:31,709
both by developer who did it we have the

00:58:29,190 --> 00:58:34,140
review we have a developer test on the

00:58:31,709 --> 00:58:36,390
test platform then the ghost of QA then

00:58:34,140 --> 00:58:38,519
the customer sees it and first when the

00:58:36,390 --> 00:58:40,410
customer accepted it's done for the

00:58:38,519 --> 00:58:42,839
Sprint and that should all happen within

00:58:40,410 --> 00:58:44,369
the sprint and then again very important

00:58:42,839 --> 00:58:47,999
that you keep your user stories very

00:58:44,369 --> 00:58:50,249
small and so do you try to resolve bugs

00:58:47,999 --> 00:58:52,259
within that sprint or they overflow yeah

00:58:50,249 --> 00:58:54,450
always resolve the box within this plant

00:58:52,259 --> 00:58:55,890
that's very important because one of the

00:58:54,450 --> 00:58:58,619
problems that we had before was that

00:58:55,890 --> 00:59:00,509
when we started work on in our Park then

00:58:58,619 --> 00:59:02,400
we couldn't remember what user story was

00:59:00,509 --> 00:59:04,559
this related to and then it's hard fast

00:59:02,400 --> 00:59:06,779
to say is this actually a bar causes a

00:59:04,559 --> 00:59:08,549
change in the scope and and for the user

00:59:06,779 --> 00:59:10,950
stories we we have these acceptance

00:59:08,549 --> 00:59:12,509
criteria that we could end with which is

00:59:10,950 --> 00:59:14,940
like the things that we can see a check

00:59:12,509 --> 00:59:17,339
this is actually done by that by the

00:59:14,940 --> 00:59:18,900
system now and it's way easier if you

00:59:17,339 --> 00:59:21,779
get the bark we can see is this related

00:59:18,900 --> 00:59:24,269
to an acceptance criteria within the

00:59:21,779 --> 00:59:25,890
user story thank you you're so welcome I

00:59:24,269 --> 00:59:29,249
think we can take the last question then

00:59:25,890 --> 00:59:30,869
we're running out of time we good we we

00:59:29,249 --> 00:59:32,430
practice agile we do everything that

00:59:30,869 --> 00:59:36,059
you're talking about and we still

00:59:32,430 --> 00:59:38,999
struggle with definition of done but

00:59:36,059 --> 00:59:40,829
that's a classic is that the session

00:59:38,999 --> 00:59:43,709
over now that you've got to go I know

00:59:40,829 --> 00:59:45,269
yeah I'm Harry so don't worry the like

00:59:43,709 --> 00:59:48,420
the waterfall process almost gives you

00:59:45,269 --> 00:59:49,650
an exact pass or fail at the end you

00:59:48,420 --> 00:59:51,809
either did what you said you were going

00:59:49,650 --> 00:59:53,699
to do or you didn't and agile gives you

00:59:51,809 --> 00:59:55,469
we did eighty percent of what we set out

00:59:53,699 --> 00:59:57,719
to do and some extra stuff for ninety

00:59:55,469 --> 01:00:00,089
percent and so on what the client wants

00:59:57,719 --> 01:00:01,650
and if you manage clients like the

01:00:00,089 --> 01:00:04,140
satisfaction for the client is all about

01:00:01,650 --> 01:00:06,239
a bit of a WOW factor they feel good

01:00:04,140 --> 01:00:08,219
about everything they got delivered so

01:00:06,239 --> 01:00:10,410
what's your definition first of all I

01:00:08,219 --> 01:00:16,259
need to give you a short answer here is

01:00:10,410 --> 01:00:18,500
running out of time to keep it short we

01:00:16,259 --> 01:00:21,620
have made our own definition of town and

01:00:18,500 --> 01:00:23,540
I haven't bring brought it here and I'm

01:00:21,620 --> 01:00:25,520
quite sure it's not making any sense to

01:00:23,540 --> 01:00:27,890
bring it here because again no two

01:00:25,520 --> 01:00:29,960
organizations is the same but the first

01:00:27,890 --> 01:00:33,710
thing I would say is that it's good to

01:00:29,960 --> 01:00:36,020
have this definition of town created do

01:00:33,710 --> 01:00:38,180
it in collaboration with the

01:00:36,020 --> 01:00:40,970
organization and make this definition if

01:00:38,180 --> 01:00:43,130
done and only have one that's actually

01:00:40,970 --> 01:00:45,320
the most important because I heard the

01:00:43,130 --> 01:00:47,510
term done done so many times and I like

01:00:45,320 --> 01:00:49,550
to break the arms of the time every time

01:00:47,510 --> 01:00:52,010
of the guy that tells me that there's

01:00:49,550 --> 01:00:54,650
only one done and it needs to be done

01:00:52,010 --> 01:00:57,500
within the sprint the only thing that we

01:00:54,650 --> 01:00:59,810
can not we can put outside the Sprint is

01:00:57,500 --> 01:01:01,580
that we merge it to the production that

01:00:59,810 --> 01:01:10,010
should be all that is left on a user

01:01:01,580 --> 01:01:12,980
story when it's done for the Sprint I'll

01:01:10,010 --> 01:01:14,870
do what I'll ask for the project

01:01:12,980 --> 01:01:16,520
actually for the whole process but the

01:01:14,870 --> 01:01:20,150
way we work we have the same definition

01:01:16,520 --> 01:01:22,070
of done for all our projects but yeah

01:01:20,150 --> 01:01:26,840
it's a good point you might want to do

01:01:22,070 --> 01:01:30,640
per project good I think they don't ya

01:01:26,840 --> 01:01:30,640
just too

01:01:34,450 --> 01:01:39,799
before relief if you have any further

01:01:37,430 --> 01:01:43,640
questions or comments we have a booth

01:01:39,799 --> 01:01:45,859
downstairs it's called adapt and me and

01:01:43,640 --> 01:01:48,490
me will be standing there during lunch

01:01:45,859 --> 01:01:50,690
and until two o'clock so please stop by

01:01:48,490 --> 01:01:53,839
thank you curious or more slides about

01:01:50,690 --> 01:01:56,349
this definition of ionic out of course

01:01:53,839 --> 01:01:56,349

YouTube URL: https://www.youtube.com/watch?v=jmHqJCbWwRM


