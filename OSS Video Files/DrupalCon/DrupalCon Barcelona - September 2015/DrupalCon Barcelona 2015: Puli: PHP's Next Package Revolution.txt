Title: DrupalCon Barcelona 2015: Puli: PHP's Next Package Revolution
Publication date: 2015-09-22
Playlist: DrupalCon Barcelona - September 2015
Description: 
	The development of Composer packages is thriving. But many packages are developed for a specific framework. You're using no or a different framework? Tough luck. Puli, a new toolkit built on top of Composer, is a step to fix this problem. With Puli, you can create packages that can be enabled in your project (Plug 'n Play) simply by running "composer install" - independent of any framework. Are you ready for the future of PHP?
Captions: 
	00:00:00,000 --> 00:00:02,630
hello everyone

00:00:08,389 --> 00:00:13,100
hey there that's a huge room

00:00:13,180 --> 00:00:17,470
not so many people know I'm really happy

00:00:16,270 --> 00:00:20,140
that you have that you're here that

00:00:17,470 --> 00:00:22,390
you're coming to my session i'll be

00:00:20,140 --> 00:00:24,369
talking about Puli today which is two

00:00:22,390 --> 00:00:26,110
kids that me and some other people have

00:00:24,369 --> 00:00:28,779
been working about the working on for

00:00:26,110 --> 00:00:30,310
like one of the half years now at a slow

00:00:28,779 --> 00:00:31,900
pace but it's coming on and it's coming

00:00:30,310 --> 00:00:34,690
up nicely so I want to talk about it

00:00:31,900 --> 00:00:37,750
today I'm happy that you here too yeah

00:00:34,690 --> 00:00:42,520
listen to it so for those that don't

00:00:37,750 --> 00:00:46,420
know me I'm known as web Mozart on

00:00:42,520 --> 00:00:49,450
Twitter or in my real life I'm my name

00:00:46,420 --> 00:00:51,850
is ben hutchison which is a German name

00:00:49,450 --> 00:00:53,140
I'm from Austria but like we speak

00:00:51,850 --> 00:00:55,239
German it's a horrible name

00:00:53,140 --> 00:00:57,579
internationally nobody is able to spell

00:00:55,239 --> 00:01:00,309
it and pronounce it which is why I

00:00:57,579 --> 00:01:02,980
rather go with web browser I'm a

00:01:00,309 --> 00:01:05,590
symphony cool developer for like plenty

00:01:02,980 --> 00:01:07,330
of years now like since 2009 I've been

00:01:05,590 --> 00:01:09,910
developing a lot of components of

00:01:07,330 --> 00:01:14,500
symphony and as you know Drupal 8 builds

00:01:09,910 --> 00:01:18,040
on several symphony components who has

00:01:14,500 --> 00:01:20,890
used symphony before in this room that's

00:01:18,040 --> 00:01:25,230
some here and who has used Drupal 8

00:01:20,890 --> 00:01:27,900
before so you have used symphony

00:01:25,230 --> 00:01:30,030
alright so I'm also a symphony fig

00:01:27,900 --> 00:01:32,430
representative who has heard about the

00:01:30,030 --> 00:01:35,040
thick thick framework interoperability

00:01:32,430 --> 00:01:37,740
group right so there is here there is

00:01:35,040 --> 00:01:41,730
the representative of Drupal it's

00:01:37,740 --> 00:01:43,740
basically a group that tries to make it

00:01:41,730 --> 00:01:45,510
easier for different projects different

00:01:43,740 --> 00:01:48,170
PHP projects to work together so that

00:01:45,510 --> 00:01:51,690
for example Drupal is able to integrate

00:01:48,170 --> 00:01:54,300
packages or modules or any kind of code

00:01:51,690 --> 00:01:57,240
by other projects without being isolated

00:01:54,300 --> 00:01:59,160
in just the Drupal world and it's same

00:01:57,240 --> 00:02:01,260
for every other PHP project so we try to

00:01:59,160 --> 00:02:05,910
build interfaces between different

00:02:01,260 --> 00:02:07,950
projects to make it easier to share what

00:02:05,910 --> 00:02:09,990
we are working on and pool is very much

00:02:07,950 --> 00:02:13,050
about the same thing as you will see

00:02:09,990 --> 00:02:17,610
today so I'm pool equality available

00:02:13,050 --> 00:02:21,210
since 2014 that's when a project started

00:02:17,610 --> 00:02:23,540
and in my professional life I am a PHP

00:02:21,210 --> 00:02:25,440
and Symphony trainer and coach so

00:02:23,540 --> 00:02:26,940
especially for the parts that I'm

00:02:25,440 --> 00:02:29,790
specialized in it Symphony which is two

00:02:26,940 --> 00:02:31,470
forms component and forms related stuff

00:02:29,790 --> 00:02:33,270
and I'm doing training so if you're

00:02:31,470 --> 00:02:36,840
interested in that head over to my

00:02:33,270 --> 00:02:38,340
website on web modes at i/o and check it

00:02:36,840 --> 00:02:42,360
out and get in touch with me or come to

00:02:38,340 --> 00:02:44,489
talk to me after session I'm bit sick

00:02:42,360 --> 00:02:47,489
today so I'm please bear with me if I'm

00:02:44,489 --> 00:02:52,380
low on energy but i'll try to like give

00:02:47,489 --> 00:02:54,239
my past all right so what is pulley to

00:02:52,380 --> 00:02:57,750
start with i want to show you a little

00:02:54,239 --> 00:03:00,530
video it's also nice

00:02:57,750 --> 00:03:00,530
wake up

00:03:05,350 --> 00:03:17,740
max killing me everybody job it hema see

00:03:15,310 --> 00:03:19,630
you darling days that me too can a

00:03:17,740 --> 00:03:20,980
brother get a Bud Light man with a great

00:03:19,630 --> 00:03:28,000
tastes that won't fill you up and never

00:03:20,980 --> 00:03:32,860
let you down make it a floodlight this

00:03:28,000 --> 00:03:34,780
scene is one before I love it so where's

00:03:32,860 --> 00:03:38,010
the connection to pulley you might ask

00:03:34,780 --> 00:03:38,010
and it's a good question

00:03:47,240 --> 00:03:50,050
I'm sorry

00:03:54,370 --> 00:03:58,180
so the connection to pulley is that this

00:03:56,799 --> 00:04:01,000
dog that is on the video is actually

00:03:58,180 --> 00:04:02,200
called a pulley it's a Hungarian dark

00:04:01,000 --> 00:04:04,390
and it's pretty cool because when you

00:04:02,200 --> 00:04:06,700
see it running you it looks pretty funky

00:04:04,390 --> 00:04:09,099
see like this and if it's sitting there

00:04:06,700 --> 00:04:10,810
you don't really see its eyes it's kind

00:04:09,099 --> 00:04:14,019
of a little bit spooky as well you never

00:04:10,810 --> 00:04:16,269
know if it's watching you or not it's a

00:04:14,019 --> 00:04:17,979
pretty cool dog my sister have one and I

00:04:16,269 --> 00:04:19,630
thought out if I want to start a project

00:04:17,979 --> 00:04:21,669
i will call it after this like we're

00:04:19,630 --> 00:04:24,580
really cute dog with this great

00:04:21,669 --> 00:04:28,000
character that's so you know ambitious

00:04:24,580 --> 00:04:29,680
and so I did it's a very special drug

00:04:28,000 --> 00:04:30,970
dog in hungaria which is why they have

00:04:29,680 --> 00:04:33,460
it all over the place even on those

00:04:30,970 --> 00:04:34,750
times it's kind of crazy anyway I'm not

00:04:33,460 --> 00:04:38,250
talking up talking about dogs i'm

00:04:34,750 --> 00:04:42,669
talking about PHP development right so

00:04:38,250 --> 00:04:45,789
who is a PHP developer in here right so

00:04:42,669 --> 00:04:48,910
most of you I guess so so you know that

00:04:45,789 --> 00:04:50,770
back in like the 2000s early 2000s when

00:04:48,910 --> 00:04:52,330
we developed an application in PHP and

00:04:50,770 --> 00:04:56,949
some people still do but I hope not too

00:04:52,330 --> 00:05:00,130
many developed it like this all the

00:04:56,949 --> 00:05:02,680
application all the code that was

00:05:00,130 --> 00:05:05,080
containing that application was written

00:05:02,680 --> 00:05:06,760
by ourselves right so you knew every

00:05:05,080 --> 00:05:07,630
line of code you perfectly knew what you

00:05:06,760 --> 00:05:10,650
were writing and what the application

00:05:07,630 --> 00:05:16,389
was doing because it what was all yours

00:05:10,650 --> 00:05:18,789
today and since we had composer things

00:05:16,389 --> 00:05:22,570
changed a little bit who knows composer

00:05:18,789 --> 00:05:24,340
who used it before right so as you know

00:05:22,570 --> 00:05:28,360
composer is a package manager that

00:05:24,340 --> 00:05:30,550
facilitates reusing code like using

00:05:28,360 --> 00:05:34,510
packages that other people developed

00:05:30,550 --> 00:05:39,010
much like aptitude apt-get on linux more

00:05:34,510 --> 00:05:41,199
rpm on fedora similar systems on ojs for

00:05:39,010 --> 00:05:43,320
node you have n p.m. so composer is

00:05:41,199 --> 00:05:45,849
basically the same thing but for PHP and

00:05:43,320 --> 00:05:48,099
with composer it became possible to

00:05:45,849 --> 00:05:49,960
write an application but not write

00:05:48,099 --> 00:05:53,139
everything ourselves but to take

00:05:49,960 --> 00:05:55,539
existing pieces of software that like

00:05:53,139 --> 00:05:56,770
open source packages and reuse them in

00:05:55,539 --> 00:05:58,569
our application

00:05:56,770 --> 00:06:01,120
the Drupal is doing the same thing with

00:05:58,569 --> 00:06:03,699
symphony all right symphony provides a

00:06:01,120 --> 00:06:06,099
set of components to build web

00:06:03,699 --> 00:06:07,000
applications and drupal thought why

00:06:06,099 --> 00:06:09,729
should we build everything ourselves

00:06:07,000 --> 00:06:11,590
when there is existing you know code

00:06:09,729 --> 00:06:14,050
that works and that somebody else is

00:06:11,590 --> 00:06:17,940
maintaining it fixing bugs for so we can

00:06:14,050 --> 00:06:19,930
just you know take advantage of that and

00:06:17,940 --> 00:06:21,669
you should be doing the same thing in

00:06:19,930 --> 00:06:23,830
your applications in fact you already

00:06:21,669 --> 00:06:25,210
are if you're using Drupal because then

00:06:23,830 --> 00:06:27,190
much of the code in your application

00:06:25,210 --> 00:06:29,080
isn't written by yourself it isn't

00:06:27,190 --> 00:06:34,810
maintained by yourself but by the Drupal

00:06:29,080 --> 00:06:36,970
community and as a rule of thumb the

00:06:34,810 --> 00:06:40,180
more third particle do you use in your

00:06:36,970 --> 00:06:43,319
project the faster you can develop and

00:06:40,180 --> 00:06:46,060
the less box you introduce because

00:06:43,319 --> 00:06:49,419
normally every time you write a line of

00:06:46,060 --> 00:06:51,550
code there's a probability that you have

00:06:49,419 --> 00:06:53,590
a bug and the more lines of code you

00:06:51,550 --> 00:06:55,930
write the more potential box you have in

00:06:53,590 --> 00:06:58,569
your project so the reuse of existing

00:06:55,930 --> 00:07:00,159
high quality packages like the ones from

00:06:58,569 --> 00:07:03,520
Drupal in the ones from symphony or any

00:07:00,159 --> 00:07:06,880
other PHP project is key to success in

00:07:03,520 --> 00:07:09,819
your applications now if we're looking

00:07:06,880 --> 00:07:12,340
at composer then the responsibility of

00:07:09,819 --> 00:07:14,080
composer is to install packages right

00:07:12,340 --> 00:07:15,580
you can type compose install and

00:07:14,080 --> 00:07:17,889
composer will automatically fetch

00:07:15,580 --> 00:07:20,800
packages and download them from from

00:07:17,889 --> 00:07:23,259
different sources but composer will also

00:07:20,800 --> 00:07:26,199
resolve the dependencies of each package

00:07:23,259 --> 00:07:28,569
so if your package or the package here

00:07:26,199 --> 00:07:31,349
install depends on another package

00:07:28,569 --> 00:07:33,729
composer will install both of them and

00:07:31,349 --> 00:07:36,550
at last composer also takes care of

00:07:33,729 --> 00:07:38,259
autoloading if you're using a class in

00:07:36,550 --> 00:07:40,090
your application in one of these

00:07:38,259 --> 00:07:43,110
packages and composer makes sure that

00:07:40,090 --> 00:07:43,110
this class is found

00:07:43,400 --> 00:07:50,490
if we look at a composer package then we

00:07:47,820 --> 00:07:52,860
like paint it graphically then it

00:07:50,490 --> 00:07:56,160
mobilis looks like this you have some

00:07:52,860 --> 00:07:58,380
PHP code in a directory the directory is

00:07:56,160 --> 00:08:00,270
the composer package it contains some

00:07:58,380 --> 00:08:02,940
PHP code and the composers that Chase

00:08:00,270 --> 00:08:06,030
and file that configures how composer

00:08:02,940 --> 00:08:10,220
should install the package and its

00:08:06,030 --> 00:08:13,110
dependencies in your application

00:08:10,220 --> 00:08:15,720
composer is kind of at the bottom level

00:08:13,110 --> 00:08:18,240
bottom layer you have these different

00:08:15,720 --> 00:08:22,230
composer packages like a translator or a

00:08:18,240 --> 00:08:23,790
templating engine or a block module or a

00:08:22,230 --> 00:08:26,490
dependency injection container or

00:08:23,790 --> 00:08:28,830
whatever you have and you install them

00:08:26,490 --> 00:08:29,970
with composer and then on top of all

00:08:28,830 --> 00:08:32,280
these packages you build your

00:08:29,970 --> 00:08:34,560
application so at the very top you have

00:08:32,280 --> 00:08:37,230
your domain logic your business logic

00:08:34,560 --> 00:08:39,540
and in between you need some codes to

00:08:37,230 --> 00:08:42,150
integrate the packages that you

00:08:39,540 --> 00:08:44,310
installed but what does it mean package

00:08:42,150 --> 00:08:46,080
integration I'll give you an example if

00:08:44,310 --> 00:08:49,140
you're using a translator in your

00:08:46,080 --> 00:08:51,210
project and I'm like just step back for

00:08:49,140 --> 00:08:53,280
a minute and imagine that you're not

00:08:51,210 --> 00:08:54,870
using framework or something like Drupal

00:08:53,280 --> 00:08:58,250
but you you're actually writing

00:08:54,870 --> 00:09:01,590
everything from scratch right let's just

00:08:58,250 --> 00:09:03,870
keep that in mind so if you're using a

00:09:01,590 --> 00:09:05,700
package for example a translator then

00:09:03,870 --> 00:09:08,310
you need to tell the translator in some

00:09:05,700 --> 00:09:10,650
way where the different translation

00:09:08,310 --> 00:09:13,860
files of your application are located so

00:09:10,650 --> 00:09:15,780
translation file is a file that contains

00:09:13,860 --> 00:09:17,940
translations from one language like

00:09:15,780 --> 00:09:21,000
English to another language like Spanish

00:09:17,940 --> 00:09:23,040
right and if we have such translation

00:09:21,000 --> 00:09:24,420
files in our application and in

00:09:23,040 --> 00:09:26,540
different packages that we installed

00:09:24,420 --> 00:09:29,550
then we need to tell the translator

00:09:26,540 --> 00:09:31,240
where all these translation files can be

00:09:29,550 --> 00:09:33,830
found

00:09:31,240 --> 00:09:36,410
I'll give another example for package

00:09:33,830 --> 00:09:39,440
integration if you set up a templating

00:09:36,410 --> 00:09:41,750
engine like twig then you need to tell

00:09:39,440 --> 00:09:44,690
twig where to find the templates that

00:09:41,750 --> 00:09:47,810
you're using so for example your

00:09:44,690 --> 00:09:50,570
applications templates might be located

00:09:47,810 --> 00:09:52,700
in some views directory in your project

00:09:50,570 --> 00:09:56,180
and then there might be some templating

00:09:52,700 --> 00:09:59,060
all the packages that you installed it's

00:09:56,180 --> 00:10:02,420
a cell easy enough to follow on very

00:09:59,060 --> 00:10:04,250
good another example is a dependency

00:10:02,420 --> 00:10:06,200
injection container if you install that

00:10:04,250 --> 00:10:08,150
in your project then you need to tell

00:10:06,200 --> 00:10:10,190
the dependency injection container which

00:10:08,150 --> 00:10:12,590
services you want to load and how they

00:10:10,190 --> 00:10:15,200
should be configured and you could

00:10:12,590 --> 00:10:18,380
probably add some classes that can be

00:10:15,200 --> 00:10:21,200
found in different packages in your

00:10:18,380 --> 00:10:23,090
application all of that is packaged

00:10:21,200 --> 00:10:25,010
integration or what I call package

00:10:23,090 --> 00:10:26,810
integration taking the packages that we

00:10:25,010 --> 00:10:29,690
have and making sure that they work

00:10:26,810 --> 00:10:31,810
together and if we look at this then we

00:10:29,690 --> 00:10:34,610
see that there's really a lot of work

00:10:31,810 --> 00:10:38,360
necessary to make sure these packages

00:10:34,610 --> 00:10:40,340
work together and in the worst case each

00:10:38,360 --> 00:10:42,470
time we install a new package we need to

00:10:40,340 --> 00:10:45,080
integrate it with all the other packages

00:10:42,470 --> 00:10:48,700
packages that we already have right

00:10:45,080 --> 00:10:51,290
that's not what we want developers

00:10:48,700 --> 00:10:54,740
generally a lazy who in here is lazy I

00:10:51,290 --> 00:10:56,060
am definitely and the rest is just lying

00:10:54,740 --> 00:10:58,640
otherwise you wouldn't be developers

00:10:56,060 --> 00:11:02,180
developers are so lazy that they enjoy

00:10:58,640 --> 00:11:04,760
finding or taking time to invent some

00:11:02,180 --> 00:11:06,440
sort of solution for being lazy tomorrow

00:11:04,760 --> 00:11:08,720
right you write so much code tomorrow

00:11:06,440 --> 00:11:10,040
because then tomorrow today because

00:11:08,720 --> 00:11:11,480
tomorrow you can just run this script

00:11:10,040 --> 00:11:15,230
and then you don't need to spend the

00:11:11,480 --> 00:11:16,760
time anymore we kind of forget to think

00:11:15,230 --> 00:11:19,520
that we are really spending a lot of

00:11:16,760 --> 00:11:22,280
time today but nevertheless tomorrow we

00:11:19,520 --> 00:11:23,150
can just hit the button it's awesome so

00:11:22,280 --> 00:11:25,340
I want to do the same thing with

00:11:23,150 --> 00:11:26,360
packages I want to just you know install

00:11:25,340 --> 00:11:29,149
them plug

00:11:26,360 --> 00:11:30,860
play like in a wordpress application

00:11:29,149 --> 00:11:33,110
where I just install this plugin and it

00:11:30,860 --> 00:11:34,160
just works I don't really know what's

00:11:33,110 --> 00:11:38,959
happening the background that I don't

00:11:34,160 --> 00:11:41,089
want to know but it works so we want

00:11:38,959 --> 00:11:43,399
where I want to minimize the effort that

00:11:41,089 --> 00:11:47,480
is needed to install a package with

00:11:43,399 --> 00:11:49,339
composer and luckily frameworks are

00:11:47,480 --> 00:11:50,899
doing that for us so something that

00:11:49,339 --> 00:11:53,540
Drupal or something like symphony or

00:11:50,899 --> 00:11:58,370
Lara well whatever other PHP framework I

00:11:53,540 --> 00:12:00,260
want to mention does those things that I

00:11:58,370 --> 00:12:04,279
was talking about and the way this

00:12:00,260 --> 00:12:07,190
office is by inventing a type of

00:12:04,279 --> 00:12:10,339
framework specific package so for

00:12:07,190 --> 00:12:12,440
symphony these are called bundles in San

00:12:10,339 --> 00:12:14,329
framework that I called modules then

00:12:12,440 --> 00:12:16,430
type of three for example has extensions

00:12:14,329 --> 00:12:22,450
in Drupal you have modules as well and

00:12:16,430 --> 00:12:25,360
all these are concepts of packages that

00:12:22,450 --> 00:12:28,160
accustomed to a specific platform right

00:12:25,360 --> 00:12:30,019
if we abstract this package concept a

00:12:28,160 --> 00:12:31,790
little bit then it's very similar to the

00:12:30,019 --> 00:12:33,910
package concept we have before it's

00:12:31,790 --> 00:12:37,100
still some kind of directory that

00:12:33,910 --> 00:12:38,720
contains PHP code but this time the

00:12:37,100 --> 00:12:41,600
directory can also contain resource

00:12:38,720 --> 00:12:45,410
files that's something vaca CSS file or

00:12:41,600 --> 00:12:47,810
the template HTML template or JavaScript

00:12:45,410 --> 00:12:49,730
whatever anything basically that you

00:12:47,810 --> 00:12:53,420
need in your project that is not PHP

00:12:49,730 --> 00:12:55,640
code I'm referring to as resources okay

00:12:53,420 --> 00:12:58,279
so your framework package has computer

00:12:55,640 --> 00:13:00,170
code resource files and then if it's

00:12:58,279 --> 00:13:03,680
distributed with composer it also has

00:13:00,170 --> 00:13:05,420
still this composer chase and file that

00:13:03,680 --> 00:13:08,360
tells composer how to install the

00:13:05,420 --> 00:13:10,550
package and you know how that looks in

00:13:08,360 --> 00:13:14,060
Drupal here's an example for symphony

00:13:10,550 --> 00:13:15,860
symphony bundle contains PHP code then

00:13:14,060 --> 00:13:18,079
it has some extension class for the

00:13:15,860 --> 00:13:20,870
dependency injection container it has

00:13:18,079 --> 00:13:22,399
some predefined directory names where

00:13:20,870 --> 00:13:23,440
you can put all your translation files

00:13:22,399 --> 00:13:26,500
and

00:13:23,440 --> 00:13:30,100
CSS files and templates and all itself

00:13:26,500 --> 00:13:32,770
so if you follow these conventions then

00:13:30,100 --> 00:13:34,960
symphony is able to use this package

00:13:32,770 --> 00:13:37,060
this bundle the problem is you can't

00:13:34,960 --> 00:13:39,510
install the same bundle in a Drupal

00:13:37,060 --> 00:13:41,740
application because Drupal modules

00:13:39,510 --> 00:13:44,140
expect different conventions and

00:13:41,740 --> 00:13:45,730
symphony it is the same for laravel if

00:13:44,140 --> 00:13:47,500
you want to use this bundle in the

00:13:45,730 --> 00:13:51,990
lateral application it doesn't work

00:13:47,500 --> 00:13:54,730
lauraville has different conventions if

00:13:51,990 --> 00:13:57,310
we look at the layering of our

00:13:54,730 --> 00:13:59,560
application with framework specific

00:13:57,310 --> 00:14:01,630
packages that we see that things change

00:13:59,560 --> 00:14:03,790
a little bit we still have composer on

00:14:01,630 --> 00:14:05,590
at the bottom that is used to solve

00:14:03,790 --> 00:14:07,810
different packages we still have our

00:14:05,590 --> 00:14:10,030
main logic of our application in the top

00:14:07,810 --> 00:14:12,730
and now in between we have some sort of

00:14:10,030 --> 00:14:16,330
framework or platform and the platform a

00:14:12,730 --> 00:14:18,520
framework does mainly two things it's a

00:14:16,330 --> 00:14:20,770
standard tool kit so it provides you

00:14:18,520 --> 00:14:23,530
with a select set of libraries that use

00:14:20,770 --> 00:14:26,860
in your application and it's a set of

00:14:23,530 --> 00:14:29,680
conventions which help you and all the

00:14:26,860 --> 00:14:32,350
article developers in your team to work

00:14:29,680 --> 00:14:34,540
together effectively right you have the

00:14:32,350 --> 00:14:36,490
same conventions as the framework so

00:14:34,540 --> 00:14:39,720
it's also easy to high a new developer

00:14:36,490 --> 00:14:42,100
that is familiar to these conventions

00:14:39,720 --> 00:14:43,870
and then the framework also that's the

00:14:42,100 --> 00:14:45,790
package integration work that I was

00:14:43,870 --> 00:14:47,350
talking about before so you don't have

00:14:45,790 --> 00:14:49,450
to configure this translation files

00:14:47,350 --> 00:14:51,040
anymore because that's all handled by

00:14:49,450 --> 00:14:55,030
the framework or the platform that

00:14:51,040 --> 00:14:57,340
you're using now there's a problem about

00:14:55,030 --> 00:14:59,650
that if we look at packages who in here

00:14:57,340 --> 00:15:04,180
has used packages before who knows what

00:14:59,650 --> 00:15:06,370
it is so packages this as you know an

00:15:04,180 --> 00:15:08,500
online repository of composer packages

00:15:06,370 --> 00:15:11,410
so anytime you call the type composer

00:15:08,500 --> 00:15:13,450
install composers actually is actually

00:15:11,410 --> 00:15:16,690
contacting packages and downloading the

00:15:13,450 --> 00:15:19,600
packages from there and if you look at

00:15:16,690 --> 00:15:22,450
packages and look for packages then you

00:15:19,600 --> 00:15:25,210
see that there are many kinds many

00:15:22,450 --> 00:15:27,550
different kinds of packages so at one

00:15:25,210 --> 00:15:29,620
hand we have regular libraries that it

00:15:27,550 --> 00:15:31,990
can simply install and configure in your

00:15:29,620 --> 00:15:35,320
project but then you also have all these

00:15:31,990 --> 00:15:37,089
framework specific packages like

00:15:35,320 --> 00:15:40,390
symphony bundles are Drupal modules

00:15:37,089 --> 00:15:43,420
actually in packages what's happening

00:15:40,390 --> 00:15:46,230
about them does anyone know not yet okay

00:15:43,420 --> 00:15:46,230
are you working with that

00:15:47,100 --> 00:15:52,680
okay so it's possible but it's not the

00:15:49,350 --> 00:15:54,660
case yet but for like other frameworks

00:15:52,680 --> 00:15:56,940
and platforms that use their own package

00:15:54,660 --> 00:15:59,100
concepts you can find the packages and

00:15:56,940 --> 00:16:02,580
that use composure as well you can find

00:15:59,100 --> 00:16:04,320
the packages on packages and that's kind

00:16:02,580 --> 00:16:07,560
of a problem you see all these little

00:16:04,320 --> 00:16:11,210
dots and all these different ceelo's you

00:16:07,560 --> 00:16:14,330
could say if you're a symphony developer

00:16:11,210 --> 00:16:16,410
then all you really care about is

00:16:14,330 --> 00:16:19,080
independent libraries and symphony

00:16:16,410 --> 00:16:20,820
bundles if your ascent framework

00:16:19,080 --> 00:16:23,100
developer all you really care about is

00:16:20,820 --> 00:16:26,430
those still those independent libraries

00:16:23,100 --> 00:16:28,740
and centric models and if you write a

00:16:26,430 --> 00:16:31,710
project that does not that it's not

00:16:28,740 --> 00:16:34,050
based on some platform then all you

00:16:31,710 --> 00:16:36,270
really are able to use are those

00:16:34,050 --> 00:16:38,130
libraries in the middle right anything

00:16:36,270 --> 00:16:42,390
else on packages is practically useless

00:16:38,130 --> 00:16:44,730
to you and I think that's that's a bad

00:16:42,390 --> 00:16:46,470
thing I'm referring to that this package

00:16:44,730 --> 00:16:48,120
fragmentation we have all these

00:16:46,470 --> 00:16:50,160
different sub communities of their own

00:16:48,120 --> 00:16:53,700
frameworks working on their separate

00:16:50,160 --> 00:16:55,170
things instead of working together so

00:16:53,700 --> 00:16:57,270
for example if you're looking for twig

00:16:55,170 --> 00:17:00,090
and packages you can find twig bundle

00:16:57,270 --> 00:17:02,130
the twig module for san fran berg twig

00:17:00,090 --> 00:17:06,690
integration 4g which is another

00:17:02,130 --> 00:17:08,220
framework twig integration for for

00:17:06,690 --> 00:17:10,320
lithium and many other frameworks and

00:17:08,220 --> 00:17:12,960
you see that all these frameworks

00:17:10,320 --> 00:17:15,060
specific packages that are used to

00:17:12,960 --> 00:17:17,190
integrate the templating engine into

00:17:15,060 --> 00:17:19,380
some framework basically doing the same

00:17:17,190 --> 00:17:21,720
thing so all these communities are

00:17:19,380 --> 00:17:23,870
really wasting time solving the same

00:17:21,720 --> 00:17:27,120
problems

00:17:23,870 --> 00:17:29,640
if we look at what all what these

00:17:27,120 --> 00:17:33,780
frameworks specific packages do we can

00:17:29,640 --> 00:17:36,660
basically find five responsibilities one

00:17:33,780 --> 00:17:39,930
is to access resources in a package so

00:17:36,660 --> 00:17:42,810
for example if you have a template in a

00:17:39,930 --> 00:17:47,490
package then the framework provides a

00:17:42,810 --> 00:17:50,470
mechanism for loading that template or

00:17:47,490 --> 00:17:52,450
for accessing that template

00:17:50,470 --> 00:17:56,080
the second responsibility is to publish

00:17:52,450 --> 00:17:58,690
public resources if your drupal module

00:17:56,080 --> 00:18:00,940
for example bundles some CSS files of

00:17:58,690 --> 00:18:02,770
javascript these files need to be

00:18:00,940 --> 00:18:04,840
published on the web server in the

00:18:02,770 --> 00:18:06,370
document root in some way so that users

00:18:04,840 --> 00:18:08,679
when they open your page or your

00:18:06,370 --> 00:18:12,640
application in the browser can download

00:18:08,679 --> 00:18:15,909
them and use them third responsibility

00:18:12,640 --> 00:18:17,950
is to generate the URLs of these public

00:18:15,909 --> 00:18:20,799
resources right once they have been

00:18:17,950 --> 00:18:24,520
published we still need to put the right

00:18:20,799 --> 00:18:29,530
URL in our HTML so that browser is able

00:18:24,520 --> 00:18:31,980
to find our image our CSS file and then

00:18:29,530 --> 00:18:37,150
that the last two responsibilities are

00:18:31,980 --> 00:18:38,770
access of specialized resources so

00:18:37,150 --> 00:18:40,900
before we had the example of a

00:18:38,770 --> 00:18:43,690
translator and translation files that

00:18:40,900 --> 00:18:46,450
can be located in different packages and

00:18:43,690 --> 00:18:50,860
our framework usually gives us a way to

00:18:46,450 --> 00:18:53,620
connect the two and the same thing for

00:18:50,860 --> 00:18:55,390
classes if your package has some special

00:18:53,620 --> 00:18:58,200
classes that need to be found by the

00:18:55,390 --> 00:19:01,059
framework or by some other package then

00:18:58,200 --> 00:19:04,890
the framework implements a mechanism for

00:19:01,059 --> 00:19:07,030
that and since all these frameworks are

00:19:04,890 --> 00:19:10,539
implementing these different packages

00:19:07,030 --> 00:19:12,429
and solving the same problem again we

00:19:10,539 --> 00:19:16,860
have a lot of waste of time and waste of

00:19:12,429 --> 00:19:19,450
efforts going on in the community so

00:19:16,860 --> 00:19:21,549
about two years ago like me and some

00:19:19,450 --> 00:19:24,090
other people like both Simonson and amy

00:19:21,549 --> 00:19:26,049
stephens recognize these problems and

00:19:24,090 --> 00:19:29,710
started thinking about possible

00:19:26,049 --> 00:19:32,250
solutions and basically found that PHP

00:19:29,710 --> 00:19:34,840
needs some sort of unified package

00:19:32,250 --> 00:19:38,490
integration to something like composer

00:19:34,840 --> 00:19:40,620
but with more power right

00:19:38,490 --> 00:19:42,720
and so sometime later I started working

00:19:40,620 --> 00:19:48,809
on that and the result is what you see

00:19:42,720 --> 00:19:50,100
is pulley employee a package is still

00:19:48,809 --> 00:19:51,630
very much the same thing as you know

00:19:50,100 --> 00:19:54,120
right now if you have a drupal module

00:19:51,630 --> 00:19:56,700
that won't be very similar work very

00:19:54,120 --> 00:19:58,410
different to what a pulley packages in

00:19:56,700 --> 00:20:00,600
general it's still a directory that

00:19:58,410 --> 00:20:02,670
contains some PHP code and resource

00:20:00,600 --> 00:20:04,980
files and if you distributed with

00:20:02,670 --> 00:20:08,250
composer it contains the composer chase

00:20:04,980 --> 00:20:10,650
and file telling composer how to install

00:20:08,250 --> 00:20:13,679
the package but then additionally you

00:20:10,650 --> 00:20:16,410
can find the pulley chase and file that

00:20:13,679 --> 00:20:20,010
tells pulley how to integrate the

00:20:16,410 --> 00:20:22,230
package in your application and the nice

00:20:20,010 --> 00:20:23,670
thing compared to before is that here we

00:20:22,230 --> 00:20:25,890
don't have to follow the conventions of

00:20:23,670 --> 00:20:27,480
the framework anymore you can lay out

00:20:25,890 --> 00:20:29,670
your package anyway you like you can

00:20:27,480 --> 00:20:32,070
call you costs any way you like so you

00:20:29,670 --> 00:20:34,350
can follow the conventions given by

00:20:32,070 --> 00:20:35,970
drupal for example as long as the pulley

00:20:34,350 --> 00:20:37,800
JSON file that you bundle in your

00:20:35,970 --> 00:20:40,550
package tells pulley what those

00:20:37,800 --> 00:20:40,550
conventions are

00:20:43,049 --> 00:20:47,129
if we look at different layers they look

00:20:45,210 --> 00:20:49,200
very similar to before but still a bit

00:20:47,129 --> 00:20:51,659
different we still have composed

00:20:49,200 --> 00:20:53,639
packages at the bottom domain logic at

00:20:51,659 --> 00:20:55,590
the top we still have our framework or

00:20:53,639 --> 00:20:59,039
our platform that is providing some

00:20:55,590 --> 00:21:01,830
sound toolkit or and conventions and

00:20:59,039 --> 00:21:04,409
then between those two you have pulley

00:21:01,830 --> 00:21:06,899
which is taking care of integrating all

00:21:04,409 --> 00:21:10,080
the packages you have the nice thing is

00:21:06,899 --> 00:21:12,629
now if you use composer packages with

00:21:10,080 --> 00:21:15,389
pulley it doesn't really matter which

00:21:12,629 --> 00:21:17,039
framework you use on top of that right

00:21:15,389 --> 00:21:18,539
you can use pulley packages with any

00:21:17,039 --> 00:21:24,299
framework in any platform that supports

00:21:18,539 --> 00:21:27,090
pulley the goal is to be able to install

00:21:24,299 --> 00:21:29,669
and enable packages simply be running

00:21:27,090 --> 00:21:32,269
composer install so plug and play just

00:21:29,669 --> 00:21:35,159
install and everything should work

00:21:32,269 --> 00:21:39,359
basically that's not all true but that's

00:21:35,159 --> 00:21:41,549
ago and the second goal that I have is

00:21:39,359 --> 00:21:44,820
to have to use different high-level

00:21:41,549 --> 00:21:47,759
packages like a blog engine or some web

00:21:44,820 --> 00:21:49,889
debug tool bar or a profile or something

00:21:47,759 --> 00:21:52,950
like that but in different frameworks

00:21:49,889 --> 00:21:56,309
and different tools platforms so right

00:21:52,950 --> 00:21:58,259
now if you develop a profile for drupal

00:21:56,309 --> 00:21:59,399
you can't use it in your symphony

00:21:58,259 --> 00:22:01,830
application if you're working on a

00:21:59,399 --> 00:22:04,440
different project where you want to

00:22:01,830 --> 00:22:06,590
reuse that code and I want to make that

00:22:04,440 --> 00:22:06,590
possible

00:22:07,650 --> 00:22:14,280
so we look at pull this architecture it

00:22:11,340 --> 00:22:17,040
looks basically like this we have our

00:22:14,280 --> 00:22:18,510
application and all these boxes are

00:22:17,040 --> 00:22:21,210
basically composed of packages and

00:22:18,510 --> 00:22:24,450
components our application uses

00:22:21,210 --> 00:22:26,070
puh-leeze repository discovery and URL

00:22:24,450 --> 00:22:27,690
generator component I will be talking

00:22:26,070 --> 00:22:30,030
about those later so that you hopefully

00:22:27,690 --> 00:22:31,620
understand better what they are and then

00:22:30,030 --> 00:22:33,810
you have a pulley command-line interface

00:22:31,620 --> 00:22:38,190
that you run on your console on your

00:22:33,810 --> 00:22:39,630
terminal to interact with these

00:22:38,190 --> 00:22:41,700
components I will show you later how

00:22:39,630 --> 00:22:43,560
that works the command line interface

00:22:41,700 --> 00:22:45,420
reads the pulley the chase and file in

00:22:43,560 --> 00:22:48,600
your package and all the packages that

00:22:45,420 --> 00:22:53,420
you have installed and then configures

00:22:48,600 --> 00:22:55,340
how pulley works in your application

00:22:53,420 --> 00:22:58,640
so let's talk about some features of

00:22:55,340 --> 00:23:00,730
pulley to get a better idea of how it is

00:22:58,640 --> 00:23:02,720
work how it is used and how it's working

00:23:00,730 --> 00:23:08,230
the first feature i want to talk about

00:23:02,720 --> 00:23:11,450
is resource access resource access is

00:23:08,230 --> 00:23:15,980
some way of finding files in your

00:23:11,450 --> 00:23:18,440
packages like a template and with pulley

00:23:15,980 --> 00:23:22,610
if you want to render a twig template in

00:23:18,440 --> 00:23:25,790
a package that is called Batman block in

00:23:22,610 --> 00:23:29,420
this case you would use this so called

00:23:25,790 --> 00:23:34,640
pulley path to access that file in the

00:23:29,420 --> 00:23:36,980
package so I pulley path very much looks

00:23:34,640 --> 00:23:38,990
like a unix path which is a good thing

00:23:36,980 --> 00:23:44,180
it's very familiar you can use existing

00:23:38,990 --> 00:23:47,960
tools and PHP functions to process paths

00:23:44,180 --> 00:23:50,450
and basically every pull the power of

00:23:47,960 --> 00:23:53,300
consists of two paths that part one part

00:23:50,450 --> 00:23:56,630
is the path prefix in this case that's

00:23:53,300 --> 00:23:58,190
Batman / Batman / blog which is mapped

00:23:56,630 --> 00:24:01,910
to some physical location in your

00:23:58,190 --> 00:24:06,800
project here to the resource directory

00:24:01,910 --> 00:24:10,400
in the Batman blog package and you see

00:24:06,800 --> 00:24:13,640
by convention we're using the same path

00:24:10,400 --> 00:24:17,420
prefix as the package that contains the

00:24:13,640 --> 00:24:19,640
files so it's very obvious if you read

00:24:17,420 --> 00:24:22,700
such a path like this one in your code

00:24:19,640 --> 00:24:27,260
base where pool is looking for these

00:24:22,700 --> 00:24:29,180
files so the path prefix is mapped to

00:24:27,260 --> 00:24:30,920
this resource directory in this package

00:24:29,180 --> 00:24:32,510
and then probably just the pants

00:24:30,920 --> 00:24:35,360
anything that you right after that path

00:24:32,510 --> 00:24:38,420
prefix and tries to find the files it's

00:24:35,360 --> 00:24:42,010
very straightforward as any of you used

00:24:38,420 --> 00:24:46,220
a class autoloader from composure before

00:24:42,010 --> 00:24:48,050
guess each of you did so basically

00:24:46,220 --> 00:24:51,530
that's the same thing in composer you

00:24:48,050 --> 00:24:53,180
you tell the autoloader what the

00:24:51,530 --> 00:24:56,030
preferences of your classes are of your

00:24:53,180 --> 00:24:58,970
name spaces and your chil composer where

00:24:56,030 --> 00:25:02,840
to find the classes then composer

00:24:58,970 --> 00:25:05,240
basically just a pants or transforms

00:25:02,840 --> 00:25:07,160
your class names and the name spaces

00:25:05,240 --> 00:25:09,100
into directories it's the same thing as

00:25:07,160 --> 00:25:12,080
here

00:25:09,100 --> 00:25:13,850
in practice this looks something like

00:25:12,080 --> 00:25:16,730
this you use puh-leeze command-line

00:25:13,850 --> 00:25:19,450
interface to create the mapping so

00:25:16,730 --> 00:25:24,260
you've read pulley map / batman / block

00:25:19,450 --> 00:25:26,450
to the directory re s for resource and

00:25:24,260 --> 00:25:28,670
then we'll pulley will create approval

00:25:26,450 --> 00:25:33,380
chase and file in your current directory

00:25:28,670 --> 00:25:35,290
which is your package and add that

00:25:33,380 --> 00:25:39,290
mapping to the pool later Jason file

00:25:35,290 --> 00:25:41,450
it's very simple for applications that

00:25:39,290 --> 00:25:43,370
are not shared that I'm not going to be

00:25:41,450 --> 00:25:46,880
published on packages you can use the

00:25:43,370 --> 00:25:50,900
very simple / app graphics to have kind

00:25:46,880 --> 00:25:54,440
of global files so the path become a lot

00:25:50,900 --> 00:25:55,730
shorter this way and now using these

00:25:54,440 --> 00:25:59,030
paths in into a gig is very

00:25:55,730 --> 00:26:02,210
straightforward you simply pass the

00:25:59,030 --> 00:26:05,150
paths whenever you include or it stands

00:26:02,210 --> 00:26:07,640
or import a different template in tweak

00:26:05,150 --> 00:26:10,700
for example

00:26:07,640 --> 00:26:12,890
but the good thing is if template that

00:26:10,700 --> 00:26:15,800
you were currently working in has

00:26:12,890 --> 00:26:18,230
already been loaded with pulley then you

00:26:15,800 --> 00:26:19,520
can simply use relative paths right so

00:26:18,230 --> 00:26:23,300
it's the same thing as using a file

00:26:19,520 --> 00:26:24,710
system you load a template from the same

00:26:23,300 --> 00:26:29,020
directory or from the parent directory

00:26:24,710 --> 00:26:29,020
and that's very convenient

00:26:31,180 --> 00:26:35,770
Puli takes all the pulley chasing files

00:26:33,700 --> 00:26:38,440
in the packages that you have installed

00:26:35,770 --> 00:26:40,180
in your application reads all the

00:26:38,440 --> 00:26:42,730
mappings that are contained in these

00:26:40,180 --> 00:26:45,750
chasing files and then puts the result

00:26:42,730 --> 00:26:48,280
in what is called the pulley repository

00:26:45,750 --> 00:26:50,950
so the pulley repository is very much

00:26:48,280 --> 00:26:52,750
like a virtual file system you can

00:26:50,950 --> 00:26:55,000
visualize it with the pulley tree

00:26:52,750 --> 00:26:57,160
command and you see here are all the

00:26:55,000 --> 00:26:58,960
files of our application here are the

00:26:57,160 --> 00:27:00,910
files of the Batman blog package and

00:26:58,960 --> 00:27:05,020
here are the files of the thought

00:27:00,910 --> 00:27:08,050
translator package when you run the

00:27:05,020 --> 00:27:11,080
command line that is during bill time

00:27:08,050 --> 00:27:12,970
then pulley reads all the chasing files

00:27:11,080 --> 00:27:16,200
installed in your application and

00:27:12,970 --> 00:27:20,620
creates an optimized data store and

00:27:16,200 --> 00:27:22,750
during around time pully simply uses

00:27:20,620 --> 00:27:25,960
that data store to locate the files that

00:27:22,750 --> 00:27:28,900
you have so as I see during runtime

00:27:25,960 --> 00:27:33,910
there is like almost no performance

00:27:28,900 --> 00:27:36,220
overhead to to any other way that you

00:27:33,910 --> 00:27:37,810
would use to look at locate files or too

00:27:36,220 --> 00:27:40,450
hard coding files if you want it that

00:27:37,810 --> 00:27:43,000
way ideally you're also using a cache

00:27:40,450 --> 00:27:47,350
like varnish in production so in that

00:27:43,000 --> 00:27:51,520
case your pool is not exist at all and

00:27:47,350 --> 00:27:53,530
there's little to no performance impact

00:27:51,520 --> 00:27:55,690
in production so I'm already using

00:27:53,530 --> 00:27:57,670
pulling in in the life in a production

00:27:55,690 --> 00:27:59,929
project it's still in beta you shouldn't

00:27:57,670 --> 00:28:02,729
do that if you don't

00:27:59,929 --> 00:28:04,049
expect to be changing your code but I'm

00:28:02,729 --> 00:28:06,509
doing that and there's no performance

00:28:04,049 --> 00:28:09,179
difference there is also a very big

00:28:06,509 --> 00:28:10,799
project in Germany that I using it for

00:28:09,179 --> 00:28:14,580
configuring the way that packages work

00:28:10,799 --> 00:28:18,389
and they're very happy with it also with

00:28:14,580 --> 00:28:23,049
the performance it's very nice alright

00:28:18,389 --> 00:28:25,149
are there any questions so far

00:28:23,049 --> 00:28:28,349
alright

00:28:25,149 --> 00:28:28,349
there's a question here

00:28:29,380 --> 00:28:34,270
the question is how fully integrates

00:28:32,200 --> 00:28:36,370
with wake there is an extension that is

00:28:34,270 --> 00:28:38,970
integrating proven to work with each

00:28:36,370 --> 00:28:38,970
other right

00:28:42,100 --> 00:28:46,900
okay let's talk about a different

00:28:44,530 --> 00:28:49,200
feature or subsequent feature which is

00:28:46,900 --> 00:28:53,200
overriding resources in other packages

00:28:49,200 --> 00:28:55,600
so very frequently when you use a module

00:28:53,200 --> 00:28:58,450
or something like that in your

00:28:55,600 --> 00:29:01,330
application and that module contains

00:28:58,450 --> 00:29:04,330
Twitter or HTML templates or CSS files

00:29:01,330 --> 00:29:06,580
also then you come into the position

00:29:04,330 --> 00:29:08,919
that you want to customize any some of

00:29:06,580 --> 00:29:11,980
these files right so for example if we

00:29:08,919 --> 00:29:15,789
have some blog module which contains a

00:29:11,980 --> 00:29:19,390
template which extends from generic

00:29:15,789 --> 00:29:21,490
layout with HTML and HTML had an HTML

00:29:19,390 --> 00:29:24,460
body and the generic layout of your

00:29:21,490 --> 00:29:26,500
application then you don't want to use

00:29:24,460 --> 00:29:28,570
the layered file provided by the package

00:29:26,500 --> 00:29:30,880
but to use the one in your application

00:29:28,570 --> 00:29:33,549
since usually you have some special

00:29:30,880 --> 00:29:36,039
design with a sidebar in the menu and a

00:29:33,549 --> 00:29:38,440
header and you want to use that even for

00:29:36,039 --> 00:29:42,730
the block right so question is how can

00:29:38,440 --> 00:29:44,890
we change the file in this package now

00:29:42,730 --> 00:29:47,020
you could just move into the package and

00:29:44,890 --> 00:29:48,580
change the file there but then the next

00:29:47,020 --> 00:29:50,760
time you hit composer install the

00:29:48,580 --> 00:29:54,610
composer update the change will be lost

00:29:50,760 --> 00:29:56,830
that's not what we want with Puli this

00:29:54,610 --> 00:29:58,690
becomes a lot easier you simply be copy

00:29:56,830 --> 00:30:00,669
the file to your project where you can

00:29:58,690 --> 00:30:02,860
safely change it and run composer

00:30:00,669 --> 00:30:08,200
install you do the changes that you want

00:30:02,860 --> 00:30:10,419
to do and you tell truly that this file

00:30:08,200 --> 00:30:12,650
should be used inside of that file in

00:30:10,419 --> 00:30:17,370
the package

00:30:12,650 --> 00:30:18,720
that we do that is like precondition is

00:30:17,370 --> 00:30:20,910
we still have our application with the

00:30:18,720 --> 00:30:23,520
two packages with those different

00:30:20,910 --> 00:30:25,770
package like path mappings from / app to

00:30:23,520 --> 00:30:28,770
the research director in the application

00:30:25,770 --> 00:30:32,060
and / Batman block to the resource

00:30:28,770 --> 00:30:34,740
directory in the Batman blog package now

00:30:32,060 --> 00:30:38,070
you can add another mapping to the

00:30:34,740 --> 00:30:40,890
application for a different directory

00:30:38,070 --> 00:30:45,150
until pulley to look for files with the

00:30:40,890 --> 00:30:46,770
Batman block prefix in that directory so

00:30:45,150 --> 00:30:49,770
that's nothing new right you simply have

00:30:46,770 --> 00:30:51,660
a new directory in your application that

00:30:49,770 --> 00:30:55,980
is supposed to override some other

00:30:51,660 --> 00:30:58,320
directory in a package but in this case

00:30:55,980 --> 00:31:02,640
you can explicitly tell prove it to do

00:30:58,320 --> 00:31:05,790
so fully will recognize that the batman

00:31:02,640 --> 00:31:08,400
/ batman / blog prefix has already been

00:31:05,790 --> 00:31:10,410
mapped by a different package and it

00:31:08,400 --> 00:31:16,659
will remember to override that package

00:31:10,410 --> 00:31:18,820
when it is installed so

00:31:16,659 --> 00:31:21,340
on the command line interface use use

00:31:18,820 --> 00:31:24,279
the same commanders before pulley map /

00:31:21,340 --> 00:31:27,479
batman / block to this like blog

00:31:24,279 --> 00:31:30,159
directory in your resource directory and

00:31:27,479 --> 00:31:31,929
then Puli will add step mapping to you

00:31:30,159 --> 00:31:34,119
pull the chase and file and also

00:31:31,929 --> 00:31:37,499
remember that your package is overriding

00:31:34,119 --> 00:31:40,539
the batman / block package so whenever

00:31:37,499 --> 00:31:42,909
somebody else installs your package and

00:31:40,539 --> 00:31:44,799
the batman blog package and pulley will

00:31:42,909 --> 00:31:48,279
follow all these override statements and

00:31:44,799 --> 00:31:51,330
respect them and one important thing to

00:31:48,279 --> 00:31:54,460
note is about overriding resources is

00:31:51,330 --> 00:31:57,820
that you don't need to copy all the

00:31:54,460 --> 00:32:00,190
files in the package to your custom

00:31:57,820 --> 00:32:02,470
location you can just copy individual

00:32:00,190 --> 00:32:05,109
files and customize them and pool we

00:32:02,470 --> 00:32:07,599
will first look into this directory and

00:32:05,109 --> 00:32:11,279
then if a file is not found there look

00:32:07,599 --> 00:32:11,279
into the original mapping

00:32:12,419 --> 00:32:17,879
and that's all that's really as simple

00:32:14,639 --> 00:32:20,399
as overriding can get and with this over

00:32:17,879 --> 00:32:23,309
i graph it can can have very like

00:32:20,399 --> 00:32:24,480
complex relationships between packages

00:32:23,309 --> 00:32:27,210
you could have for example theme

00:32:24,480 --> 00:32:30,059
packages with a sort of base theme and

00:32:27,210 --> 00:32:31,590
then more specialized theme and then

00:32:30,059 --> 00:32:34,769
maybe an even more specialized theme

00:32:31,590 --> 00:32:37,470
that ad and partially override their

00:32:34,769 --> 00:32:41,539
base themes and use this as a way to

00:32:37,470 --> 00:32:45,440
like create themes for your application

00:32:41,539 --> 00:32:45,440
are there any questions about this

00:32:47,539 --> 00:32:50,350
ok

00:32:50,970 --> 00:32:57,770
the next feature I want to talk about is

00:32:52,909 --> 00:33:00,539
your L generation of for resources so

00:32:57,770 --> 00:33:03,360
usually if you have if you bundle public

00:33:00,539 --> 00:33:05,659
resources in your package like CSS files

00:33:03,360 --> 00:33:09,179
or images or something like that then

00:33:05,659 --> 00:33:11,520
there is some specific directory that

00:33:09,179 --> 00:33:13,830
contains these packages and with fully

00:33:11,520 --> 00:33:16,350
you can do the same thing you can bundle

00:33:13,830 --> 00:33:17,850
your public through resources in some

00:33:16,350 --> 00:33:22,130
directory that you can name any way you

00:33:17,850 --> 00:33:22,130
like in this case I named it public and

00:33:22,730 --> 00:33:28,919
then generate resource URLs with the URL

00:33:26,760 --> 00:33:31,530
generator so in twig for example there

00:33:28,919 --> 00:33:33,900
is a resource or your elf function where

00:33:31,530 --> 00:33:35,640
you simply pass this pulley path and the

00:33:33,900 --> 00:33:39,179
function will return the URL of the

00:33:35,640 --> 00:33:40,890
resource again this supports relative

00:33:39,179 --> 00:33:43,500
paths which makes it very convenient to

00:33:40,890 --> 00:33:46,650
use in practice and at some point this

00:33:43,500 --> 00:33:48,960
could also be supported in CSS files so

00:33:46,650 --> 00:33:51,090
as you know right now in a CSS file you

00:33:48,960 --> 00:33:55,230
have to use the URL function with the

00:33:51,090 --> 00:33:57,600
actual URL but you could implement some

00:33:55,230 --> 00:34:04,309
golf plugin or something like that to

00:33:57,600 --> 00:34:04,309
turn pulley paths into actual URLs

00:34:05,210 --> 00:34:11,230
and wisest needed um

00:34:11,240 --> 00:34:15,060
you

00:34:12,630 --> 00:34:17,460
the reason we need this or the benefit

00:34:15,060 --> 00:34:21,060
that we have is now we're independent of

00:34:17,460 --> 00:34:24,270
where the resource will be published on

00:34:21,060 --> 00:34:26,700
the server so if you are writing a

00:34:24,270 --> 00:34:29,160
package or a module that is shared with

00:34:26,700 --> 00:34:31,950
someone else then people who install

00:34:29,160 --> 00:34:33,810
your module can decide where your

00:34:31,950 --> 00:34:37,020
resources are going to be published and

00:34:33,810 --> 00:34:38,580
placed you just refer refer to all of

00:34:37,020 --> 00:34:41,220
the resources with their pulley paths

00:34:38,580 --> 00:34:45,600
which are universal right then don't

00:34:41,220 --> 00:34:46,980
change the next step before your an

00:34:45,600 --> 00:34:51,690
alteration is actually possible is to

00:34:46,980 --> 00:34:55,320
register a web server so whoever

00:34:51,690 --> 00:34:57,000
installed your package also has some

00:34:55,320 --> 00:34:58,650
directory that is the document root of

00:34:57,000 --> 00:35:03,480
your web server like here for example

00:34:58,650 --> 00:35:05,070
public HTML and in this root package you

00:35:03,480 --> 00:35:07,440
register a new web server for that

00:35:05,070 --> 00:35:09,770
directory you do the with the command

00:35:07,440 --> 00:35:12,270
line again food server dash dash at

00:35:09,770 --> 00:35:15,660
public HTML which is the directory and

00:35:12,270 --> 00:35:17,730
we can name this with some arbitrary

00:35:15,660 --> 00:35:20,160
name I use localhost here but you can

00:35:17,730 --> 00:35:22,940
use anything you want it's just the name

00:35:20,160 --> 00:35:25,440
is just a way to refer to this later on

00:35:22,940 --> 00:35:27,810
the second step is to publish your

00:35:25,440 --> 00:35:29,670
resources so if you have your public

00:35:27,810 --> 00:35:31,980
resources in flash app / public

00:35:29,670 --> 00:35:34,680
directory you would call Puli publish

00:35:31,980 --> 00:35:36,930
such apps / public and then the name of

00:35:34,680 --> 00:35:40,350
the server you want to publish it to for

00:35:36,930 --> 00:35:42,300
example localhost if you use a CDN a

00:35:40,350 --> 00:35:44,220
content delivery network you could also

00:35:42,300 --> 00:35:46,590
add and use server forward to come to

00:35:44,220 --> 00:35:48,010
the delivery network and use the name of

00:35:46,590 --> 00:35:51,470
that here

00:35:48,010 --> 00:35:53,930
and now as soon as you did that you can

00:35:51,470 --> 00:35:55,940
generate the URL for your resources in

00:35:53,930 --> 00:35:58,150
the stash apps such public directory for

00:35:55,940 --> 00:36:02,150
example such apps such public logo.png

00:35:58,150 --> 00:36:03,980
will become simply / logo.png right

00:36:02,150 --> 00:36:06,460
since this directory is mapped to the

00:36:03,980 --> 00:36:06,460
document root

00:36:09,339 --> 00:36:14,739
you can also map on publish files two

00:36:12,789 --> 00:36:16,479
subdirectories of the document root for

00:36:14,739 --> 00:36:20,019
example puli published by bloomberg

00:36:16,479 --> 00:36:22,769
public to the blog subdirectory and then

00:36:20,019 --> 00:36:25,779
any URL you generate for that package

00:36:22,769 --> 00:36:29,410
will have the prefix of that

00:36:25,779 --> 00:36:31,630
subdirectory so it's a very convenient

00:36:29,410 --> 00:36:33,430
way to manage the public resources of

00:36:31,630 --> 00:36:39,849
your different packages and to actually

00:36:33,430 --> 00:36:44,369
control where those public assets are

00:36:39,849 --> 00:36:44,369
published there's a question over there

00:36:58,730 --> 00:37:02,540
so the question is if it's possible to

00:37:01,040 --> 00:37:03,950
have different mappings for the

00:37:02,540 --> 00:37:06,200
development server and the production

00:37:03,950 --> 00:37:08,660
server right at the moment it's not but

00:37:06,200 --> 00:37:13,359
that's something that is an open issue

00:37:08,660 --> 00:37:13,359
actually yes

00:37:14,240 --> 00:37:20,400
you can also change the way that you are

00:37:17,400 --> 00:37:22,170
else generate are generated like for all

00:37:20,400 --> 00:37:23,579
of your projects for example if you want

00:37:22,170 --> 00:37:25,950
to implement a very simple versioning

00:37:23,579 --> 00:37:27,200
mechanism not I'm not a lot of people

00:37:25,950 --> 00:37:30,839
are doing that but it's just an example

00:37:27,200 --> 00:37:33,780
you can change the URL format off your

00:37:30,839 --> 00:37:36,480
server it sees a simple printf string

00:37:33,780 --> 00:37:39,180
where person des is the public path of

00:37:36,480 --> 00:37:42,000
the resource and you have / person tasks

00:37:39,180 --> 00:37:44,430
and then some query parameter now when

00:37:42,000 --> 00:37:46,320
you generate the URL for that that file

00:37:44,430 --> 00:37:50,070
logo PNG file in the Batman block

00:37:46,320 --> 00:37:53,599
package you see that the query parameter

00:37:50,070 --> 00:37:53,599
for version is span that automatically

00:37:56,220 --> 00:38:00,930
and the good thing here is that if you

00:37:59,040 --> 00:38:02,250
want to change the version you only need

00:38:00,930 --> 00:38:05,400
to change the configuration of your

00:38:02,250 --> 00:38:11,420
server then all your urls will be

00:38:05,400 --> 00:38:11,420
generated correctly that's a question

00:38:12,300 --> 00:38:15,990
yes the commands alters the chase in the

00:38:14,460 --> 00:38:19,890
pool yet adjacent file that stores the

00:38:15,990 --> 00:38:21,300
configuration right so the same

00:38:19,890 --> 00:38:24,930
mechanism can be used to generate

00:38:21,300 --> 00:38:26,940
absolute URLs if you again change the

00:38:24,930 --> 00:38:29,460
configuration with URL format in this

00:38:26,940 --> 00:38:32,640
case it should be example.com and again

00:38:29,460 --> 00:38:37,940
person s then all the generator urls

00:38:32,640 --> 00:38:37,940
will have the profits of the hostname

00:38:42,860 --> 00:38:48,290
technically this works very much like

00:38:45,260 --> 00:38:50,000
the repository that we saw before so

00:38:48,290 --> 00:38:52,010
during build time when you execute the

00:38:50,000 --> 00:38:53,770
command line pulley you reads all the

00:38:52,010 --> 00:38:57,170
pulley dulces and file in your project

00:38:53,770 --> 00:38:58,760
generate some optimized datastore and in

00:38:57,170 --> 00:39:00,440
production is optimized datastore is

00:38:58,760 --> 00:39:03,530
used so again there's very little

00:39:00,440 --> 00:39:06,260
performance impact and also like before

00:39:03,530 --> 00:39:09,200
if you use some sort of cash or

00:39:06,260 --> 00:39:11,540
computation step for example tweak

00:39:09,200 --> 00:39:14,750
templates are first compiled to PHP and

00:39:11,540 --> 00:39:16,820
then executed as PHP on server if you

00:39:14,750 --> 00:39:19,390
have a computation stuff like that then

00:39:16,820 --> 00:39:24,350
pulley is not used in production at all

00:39:19,390 --> 00:39:25,730
which is very nice for performance now

00:39:24,350 --> 00:39:28,340
the obvious next feature of the

00:39:25,730 --> 00:39:33,380
generating the URLs of our public assets

00:39:28,340 --> 00:39:37,490
is to actually publish the assets to the

00:39:33,380 --> 00:39:39,650
server so we want to move CSS and image

00:39:37,490 --> 00:39:43,910
and JavaScript files to the appropriate

00:39:39,650 --> 00:39:46,010
location on our server the good thing

00:39:43,910 --> 00:39:47,890
here is that we already added a lot of

00:39:46,010 --> 00:39:51,910
information to our configuration that

00:39:47,890 --> 00:39:54,560
tells pulley where our files are located

00:39:51,910 --> 00:39:56,900
since that configuration is necessary to

00:39:54,560 --> 00:39:59,120
generate the URLs then we can reuse

00:39:56,900 --> 00:40:02,510
reuse the same configuration to actually

00:39:59,120 --> 00:40:05,360
publish those assets by running puli

00:40:02,510 --> 00:40:07,040
published dash dash install and hear all

00:40:05,360 --> 00:40:09,520
those assets will be installed into the

00:40:07,040 --> 00:40:12,230
appropriate location automatically and

00:40:09,520 --> 00:40:15,040
as soon as you did this all that your

00:40:12,230 --> 00:40:18,280
else that you generated before will work

00:40:15,040 --> 00:40:20,690
to see it's very simple

00:40:18,280 --> 00:40:22,850
the problem is that this is not really a

00:40:20,690 --> 00:40:24,590
responsibility of pulley or something

00:40:22,850 --> 00:40:27,380
that pulley should solve because there

00:40:24,590 --> 00:40:29,480
are already so many gulp and grunt and

00:40:27,380 --> 00:40:32,450
different JavaScript front-end to get

00:40:29,480 --> 00:40:36,200
plugins that you can use to for example

00:40:32,450 --> 00:40:38,390
install files with ssh or different

00:40:36,200 --> 00:40:41,450
protocols so in final version I would

00:40:38,390 --> 00:40:44,119
like to move this functionality out of

00:40:41,450 --> 00:40:49,750
pulley and to some plugin for from the

00:40:44,119 --> 00:40:49,750
tool at any questions about this

00:40:51,680 --> 00:40:55,640
all right then let me talk about the

00:40:53,960 --> 00:40:59,000
last feature of poo leader is probably

00:40:55,640 --> 00:41:03,920
the coolest one as well for that I need

00:40:59,000 --> 00:41:08,240
a volunteer so Larry I'm sure you want

00:41:03,920 --> 00:41:09,859
wild here you always do awesome thank

00:41:08,240 --> 00:41:21,140
you so if you would come to stage it

00:41:09,859 --> 00:41:22,430
would be nice thanks so this is

00:41:21,140 --> 00:41:26,480
completely unscripted it doesn't know

00:41:22,430 --> 00:41:28,160
about it scary so let's talk about

00:41:26,480 --> 00:41:31,490
resource discovery consumers and

00:41:28,160 --> 00:41:34,190
producers we have a example that I gave

00:41:31,490 --> 00:41:35,990
before I set up with application and two

00:41:34,190 --> 00:41:38,740
different packages that we installed and

00:41:35,990 --> 00:41:41,990
one of those packages is a translator

00:41:38,740 --> 00:41:47,960
which uses some kind of loader to load

00:41:41,990 --> 00:41:49,309
messages or message files and those

00:41:47,960 --> 00:41:52,339
message files could be contained in

00:41:49,309 --> 00:41:54,500
other applications and packages there

00:41:52,339 --> 00:41:58,680
needs to be some way for that loader to

00:41:54,500 --> 00:42:01,590
discover where those files are right

00:41:58,680 --> 00:42:03,840
so pulley calls these different kinds of

00:42:01,590 --> 00:42:06,210
packages consumers and providers it's

00:42:03,840 --> 00:42:09,200
very much like a message queue which is

00:42:06,210 --> 00:42:12,120
a similar concept if a topic and then

00:42:09,200 --> 00:42:13,730
you know some publishers can publish

00:42:12,120 --> 00:42:16,680
messages to the message queues and

00:42:13,730 --> 00:42:19,050
subscribers can subscribe to messages

00:42:16,680 --> 00:42:20,190
for the same topic here it's a very

00:42:19,050 --> 00:42:22,770
similar thing although it's not a

00:42:20,190 --> 00:42:24,210
message queue it's basically trust

00:42:22,770 --> 00:42:27,530
packages to want to communicate with

00:42:24,210 --> 00:42:30,780
each other in this example we have a

00:42:27,530 --> 00:42:33,300
consumer which is the package that Larry

00:42:30,780 --> 00:42:35,520
created the translated package so in our

00:42:33,300 --> 00:42:36,990
example Larry's the developers of the

00:42:35,520 --> 00:42:40,380
translator package and I am the

00:42:36,990 --> 00:42:42,720
developer of sunblock module right so

00:42:40,380 --> 00:42:47,010
Larry creates the translator and wants

00:42:42,720 --> 00:42:52,680
to have some weight to find translation

00:42:47,010 --> 00:42:54,030
files and catalogs and I as a user of

00:42:52,680 --> 00:42:55,620
the Bob package know about Larry's

00:42:54,030 --> 00:42:57,420
translator package I want to use and

00:42:55,620 --> 00:42:59,310
support that in my package and add a

00:42:57,420 --> 00:43:01,980
translation file that should be found by

00:42:59,310 --> 00:43:04,200
letter is translated package the way to

00:43:01,980 --> 00:43:09,170
do that and to achieve that is that

00:43:04,200 --> 00:43:11,910
Larry defines an API a topic some string

00:43:09,170 --> 00:43:14,310
this is called a binding type in pulley

00:43:11,910 --> 00:43:16,440
and the binding type is a simple string

00:43:14,310 --> 00:43:19,490
that is prefixed with Larry's vendor

00:43:16,440 --> 00:43:19,490
name which is Thor

00:43:19,589 --> 00:43:26,190
pretty awesome and an arbitrary name

00:43:23,130 --> 00:43:28,799
that specifies the kind of resource that

00:43:26,190 --> 00:43:31,289
you want to load right so catalog in

00:43:28,799 --> 00:43:33,690
this case and then Larry is able to use

00:43:31,289 --> 00:43:37,349
this binding type to fetch all the

00:43:33,690 --> 00:43:39,390
resources that match the type so Larry

00:43:37,349 --> 00:43:41,339
finishes his package uploads it to

00:43:39,390 --> 00:43:46,469
packages right some documentation of

00:43:41,339 --> 00:43:48,210
course because we all do and publishers

00:43:46,469 --> 00:43:49,799
in the documentation that there is a

00:43:48,210 --> 00:43:51,630
binding type a pulley binding type

00:43:49,799 --> 00:43:54,569
called Thor catalogue that you can use

00:43:51,630 --> 00:43:56,309
him in your own packages so I read that

00:43:54,569 --> 00:44:00,059
and I think pretty awesome I want to use

00:43:56,309 --> 00:44:02,190
that tool because it's nice so I bind my

00:44:00,059 --> 00:44:05,489
message file to the third catalog

00:44:02,190 --> 00:44:07,619
binding type and now as soon as you as

00:44:05,489 --> 00:44:09,509
end user of both of these packages

00:44:07,619 --> 00:44:13,099
install both packages at the same time

00:44:09,509 --> 00:44:15,479
they will be wired up and use each other

00:44:13,099 --> 00:44:18,960
automatically without anything else that

00:44:15,479 --> 00:44:22,140
you need to do technically it works like

00:44:18,960 --> 00:44:24,359
this you like Larry in this case uses

00:44:22,140 --> 00:44:27,239
the pulley type define command to define

00:44:24,359 --> 00:44:28,589
a new binding type this binding tab will

00:44:27,239 --> 00:44:32,400
be added to the pool either chase and

00:44:28,589 --> 00:44:34,140
file of leverage package and then he's

00:44:32,400 --> 00:44:36,779
using the resource discovery of pulley

00:44:34,140 --> 00:44:39,479
to find all resources that are bound to

00:44:36,779 --> 00:44:40,890
that type so ignore this double loop for

00:44:39,479 --> 00:44:42,900
a second it's not so important anymore

00:44:40,890 --> 00:44:44,969
important thing is that it can get all

00:44:42,900 --> 00:44:47,330
the resources for this finding type and

00:44:44,969 --> 00:44:53,090
then do something with them

00:44:47,330 --> 00:44:56,420
i as a supporter or as a provider for

00:44:53,090 --> 00:44:59,120
Larry's resources i'm using the pulley

00:44:56,420 --> 00:45:04,130
behind command to find resources in my

00:44:59,120 --> 00:45:06,290
package to that binding type and use the

00:45:04,130 --> 00:45:09,020
end user simply create a new translator

00:45:06,290 --> 00:45:10,820
from there is packaged use Larry's

00:45:09,020 --> 00:45:14,030
pulley message loader that is using the

00:45:10,820 --> 00:45:16,040
discovery and then start using the

00:45:14,030 --> 00:45:20,140
translator and that's all you need to do

00:45:16,040 --> 00:45:22,280
any package that you install that binds

00:45:20,140 --> 00:45:24,620
resources through the binding type of

00:45:22,280 --> 00:45:27,100
Larry's package will automatically be

00:45:24,620 --> 00:45:27,100
recognized

00:45:27,400 --> 00:45:30,359
thank you very much

00:45:34,340 --> 00:45:41,420
if we summed it up then we saw that

00:45:39,500 --> 00:45:45,290
pulley has different pulley chasing

00:45:41,420 --> 00:45:47,420
files here with bindings and the buying

00:45:45,290 --> 00:45:51,440
type at the bottom all of that together

00:45:47,420 --> 00:45:55,190
is under umbrella of pulleys research

00:45:51,440 --> 00:45:57,560
discovery mechanism the architecture is

00:45:55,190 --> 00:45:59,870
very much the same as before whenever

00:45:57,560 --> 00:46:02,960
you enter a booty CLI command to come a

00:45:59,870 --> 00:46:05,360
console command Puli is creating a data

00:46:02,960 --> 00:46:07,670
store an optimized data store that is

00:46:05,360 --> 00:46:11,870
used during run time so again there's

00:46:07,670 --> 00:46:14,870
very little performance overhead are

00:46:11,870 --> 00:46:17,770
there any questions about this

00:46:14,870 --> 00:46:17,770
this questionnaire

00:46:20,900 --> 00:46:25,190
there is a yes the question is if

00:46:23,060 --> 00:46:27,140
there's a very dependency between the

00:46:25,190 --> 00:46:30,890
provider and the consumer yes there is

00:46:27,140 --> 00:46:33,740
but they don't need to be installed at

00:46:30,890 --> 00:46:35,090
the same time it's an optional support

00:46:33,740 --> 00:46:37,790
for each other that's the first thing

00:46:35,090 --> 00:46:39,830
and the second thing is at the moment

00:46:37,790 --> 00:46:41,960
you would need to bind your resource to

00:46:39,830 --> 00:46:45,740
resources two different binding types of

00:46:41,960 --> 00:46:47,840
different consumers but there's room for

00:46:45,740 --> 00:46:50,180
the framework into interoperability

00:46:47,840 --> 00:46:52,340
group for example to define common

00:46:50,180 --> 00:46:54,470
binding types for example to say okay we

00:46:52,340 --> 00:46:57,530
have a message format message file

00:46:54,470 --> 00:46:59,930
format that uses a fake binding type

00:46:57,530 --> 00:47:01,790
then anybody that wants to use that

00:46:59,930 --> 00:47:04,130
common formats that standardized format

00:47:01,790 --> 00:47:06,310
can bind to that standardized binding

00:47:04,130 --> 00:47:06,310
type

00:47:09,490 --> 00:47:13,540
alright so actually there's one more

00:47:11,920 --> 00:47:14,619
topic I want to talk about but it's a

00:47:13,540 --> 00:47:17,560
very short one because it's not

00:47:14,619 --> 00:47:20,110
implemented yet and that's the loading

00:47:17,560 --> 00:47:22,990
of services in different packages so

00:47:20,110 --> 00:47:26,200
service in this example is some PHP

00:47:22,990 --> 00:47:28,260
class that implements some interface you

00:47:26,200 --> 00:47:31,840
really interface is called extension and

00:47:28,260 --> 00:47:33,550
very often you want to load different

00:47:31,840 --> 00:47:36,070
classes from different packages that

00:47:33,550 --> 00:47:37,360
implement a specific interface that's

00:47:36,070 --> 00:47:39,430
what I call the service learning and

00:47:37,360 --> 00:47:41,770
that's something that we will support

00:47:39,430 --> 00:47:43,600
pretty soon but that's not finished yet

00:47:41,770 --> 00:47:45,630
so I don't want to talk about it too

00:47:43,600 --> 00:47:45,630
much

00:47:46,119 --> 00:47:49,749
all right to conclude this very

00:47:47,740 --> 00:47:53,049
technical talk I want to talk a little

00:47:49,749 --> 00:47:55,779
bit about the future of PHP and PHP

00:47:53,049 --> 00:47:58,869
development as I see it and that's very

00:47:55,779 --> 00:48:00,279
exciting because with pulley it's

00:47:58,869 --> 00:48:02,799
possible to write truly plug-and-play

00:48:00,279 --> 00:48:05,230
packages that can be hooked in your

00:48:02,799 --> 00:48:06,849
application and configured automatically

00:48:05,230 --> 00:48:09,819
to work with all the other packages that

00:48:06,849 --> 00:48:12,039
you have and for example if you want to

00:48:09,819 --> 00:48:14,049
install to wake with pulley suppose that

00:48:12,039 --> 00:48:15,849
that we can support spooly which it

00:48:14,049 --> 00:48:19,019
doesn't at the moment then you would

00:48:15,849 --> 00:48:22,180
simply require twig with composer

00:48:19,019 --> 00:48:26,140
instantiate twigs environment which is

00:48:22,180 --> 00:48:29,650
basically the engine pass the pulley

00:48:26,140 --> 00:48:32,499
repository to twig and that's it now any

00:48:29,650 --> 00:48:35,859
package that supports fully as soon as

00:48:32,499 --> 00:48:38,230
it is installed in your system you don't

00:48:35,859 --> 00:48:40,269
need to configure anything anymore in

00:48:38,230 --> 00:48:42,999
order for tweak to find the resources in

00:48:40,269 --> 00:48:45,390
that package right it all has been done

00:48:42,999 --> 00:48:45,390
for you

00:48:45,920 --> 00:48:50,839
by having these universal plug and play

00:48:48,589 --> 00:48:53,420
packages that work across different

00:48:50,839 --> 00:48:54,829
frameworks we can achieve much less

00:48:53,420 --> 00:48:57,109
community fragmentation that we have

00:48:54,829 --> 00:48:58,760
right now so get rid of all these sub

00:48:57,109 --> 00:49:01,670
communities like san fran burg and

00:48:58,760 --> 00:49:04,670
drupal and whatever and is that start

00:49:01,670 --> 00:49:06,680
working on universal PHP packages

00:49:04,670 --> 00:49:08,750
together and i think there's a huge

00:49:06,680 --> 00:49:11,690
opportunity because we get so much work

00:49:08,750 --> 00:49:13,400
force that is divided on solving the

00:49:11,690 --> 00:49:16,099
same problems in different ways right

00:49:13,400 --> 00:49:18,670
now and can start working together on

00:49:16,099 --> 00:49:21,049
the same problems and common solutions

00:49:18,670 --> 00:49:22,609
so in the future instead of installing

00:49:21,049 --> 00:49:24,589
something like a twix module or

00:49:22,609 --> 00:49:26,900
extension or package it will simply

00:49:24,589 --> 00:49:28,099
install twig and it will work no matter

00:49:26,900 --> 00:49:32,210
if you're working with Drupal or

00:49:28,099 --> 00:49:33,920
anything else with this we can achieve

00:49:32,210 --> 00:49:37,460
much less code application in the

00:49:33,920 --> 00:49:40,339
community and much more collaboration we

00:49:37,460 --> 00:49:43,369
can have more collective collective time

00:49:40,339 --> 00:49:47,260
as a community to work together on great

00:49:43,369 --> 00:49:49,760
features and I think that's a good thing

00:49:47,260 --> 00:49:53,750
so talking about the current status of

00:49:49,760 --> 00:49:56,240
pulley it's in beta right now it's in be

00:49:53,750 --> 00:49:58,640
27 so i would like to release the next

00:49:56,240 --> 00:50:00,799
beta version next Sunday I hope that's

00:49:58,640 --> 00:50:04,190
possible and there is a stable release

00:50:00,799 --> 00:50:05,599
plant for 2015 I'm not quite sure if we

00:50:04,190 --> 00:50:07,790
can make that it depends a lot on the

00:50:05,599 --> 00:50:09,319
contributions that we get this right now

00:50:07,790 --> 00:50:12,710
we're about three or four cool

00:50:09,319 --> 00:50:15,200
developers and we need to be more

00:50:12,710 --> 00:50:16,550
but if you're interested just send me a

00:50:15,200 --> 00:50:19,640
messenger come to talk to me after the

00:50:16,550 --> 00:50:21,800
talk yeah I can show you some give you

00:50:19,640 --> 00:50:24,170
some information you can find extensive

00:50:21,800 --> 00:50:27,500
documentation so everything that works

00:50:24,170 --> 00:50:29,990
right now is documented on dog food I oh

00:50:27,500 --> 00:50:31,760
I'm also working on the website that

00:50:29,990 --> 00:50:35,119
presents what pulley is in very simple

00:50:31,760 --> 00:50:38,150
terms and simple concepts on Pelayo it's

00:50:35,119 --> 00:50:39,500
not finished yet but very soon pulleys

00:50:38,150 --> 00:50:42,140
used successfully in production at the

00:50:39,500 --> 00:50:44,359
moment there is a symphony bundle that

00:50:42,140 --> 00:50:45,770
integrates sim pulley in to Symphony

00:50:44,359 --> 00:50:48,940
applications if you're using symphony

00:50:45,770 --> 00:50:51,530
and there's also a symphony distribution

00:50:48,940 --> 00:50:54,760
that is basically readily configured

00:50:51,530 --> 00:50:57,200
with pulley that's a couple of projects

00:50:54,760 --> 00:50:59,060
that want to support pulley out the

00:50:57,200 --> 00:51:00,470
parks in the future so one of them is

00:50:59,060 --> 00:51:02,480
symphony of course since I'm a

00:51:00,470 --> 00:51:06,140
co-developer dinner but also type of 3

00:51:02,480 --> 00:51:08,830
and meals want to use pulley for solving

00:51:06,140 --> 00:51:11,930
or organizing their extension systems

00:51:08,830 --> 00:51:14,599
elko d which is an e-commerce platform

00:51:11,930 --> 00:51:16,839
also do the same thing and I was talking

00:51:14,599 --> 00:51:19,609
to Taylor out well from laravel and

00:51:16,839 --> 00:51:21,020
people from san fran berg that also

00:51:19,609 --> 00:51:24,440
interested in using pulley for

00:51:21,020 --> 00:51:26,960
organizing their packages and that's a

00:51:24,440 --> 00:51:28,880
good thing because if many frameworks

00:51:26,960 --> 00:51:32,300
and big framework starts using pulley

00:51:28,880 --> 00:51:34,099
then only time we can actually have true

00:51:32,300 --> 00:51:36,339
interoperability between these those

00:51:34,099 --> 00:51:36,339
frameworks

00:51:36,530 --> 00:51:43,550
if you have any feedback plz shoutout to

00:51:40,040 --> 00:51:47,150
at Bouley PHP on Twitter or follow Puli

00:51:43,550 --> 00:51:49,310
PHP on Twitter go to pool I oh when it's

00:51:47,150 --> 00:51:52,370
done getting both doesn't miss your

00:51:49,310 --> 00:51:54,650
tracker on github and that's all I have

00:51:52,370 --> 00:51:55,910
to say follow me on twitter if you want

00:51:54,650 --> 00:51:57,560
to have any updates about pull your

00:51:55,910 --> 00:52:04,360
symphony or any other work that I'm

00:51:57,560 --> 00:52:04,360
doing and um that's it any questions

00:52:05,590 --> 00:52:10,830
do you maybe want to go to the

00:52:07,090 --> 00:52:10,830
microphone easier thank you

00:52:12,970 --> 00:52:19,770
so I have a question so you say that the

00:52:17,770 --> 00:52:23,560
idea of between poo easily integrates

00:52:19,770 --> 00:52:25,869
the packages so I don't have to make a

00:52:23,560 --> 00:52:29,920
package for symphony or 4y Rafael and

00:52:25,869 --> 00:52:32,890
all that I didn't understand from from

00:52:29,920 --> 00:52:37,240
the talk where I can for example I use

00:52:32,890 --> 00:52:40,150
guzzle okay so i'm using larval and i

00:52:37,240 --> 00:52:42,520
need i did service provider and the

00:52:40,150 --> 00:52:46,330
facade so it's easier to use on the

00:52:42,520 --> 00:52:48,670
framework and this presentation was more

00:52:46,330 --> 00:52:51,040
Baeza i think on physical files and

00:52:48,670 --> 00:52:55,599
mapping them so i don't see how I could

00:52:51,040 --> 00:52:58,390
use pulley so my gazal package would

00:52:55,599 --> 00:53:02,230
work on symphony and well and marvel and

00:52:58,390 --> 00:53:04,000
all that um that's because this kind of

00:53:02,230 --> 00:53:05,890
problem can only partially be solved by

00:53:04,000 --> 00:53:07,150
pulley that's more something that should

00:53:05,890 --> 00:53:11,740
be solved by the framework into our

00:53:07,150 --> 00:53:13,359
ability group by or maybe it can be

00:53:11,740 --> 00:53:15,670
solved maybe it can't at least the can't

00:53:13,359 --> 00:53:17,950
at the moment by defining some common

00:53:15,670 --> 00:53:20,339
you know service provider provider

00:53:17,950 --> 00:53:23,380
interface for integrating you know

00:53:20,339 --> 00:53:25,150
different services into any framework ok

00:53:23,380 --> 00:53:28,720
so the framework would need to be

00:53:25,150 --> 00:53:31,420
supporting pulley to make that work yes

00:53:28,720 --> 00:53:33,040
and whatever I have to to put in the

00:53:31,420 --> 00:53:36,580
config file that the service provider

00:53:33,040 --> 00:53:39,760
and the facade so I need a specific

00:53:36,580 --> 00:53:41,950
package for that ok yeah well if Larry

00:53:39,760 --> 00:53:44,560
well supports pulled out of the box then

00:53:41,950 --> 00:53:46,869
you can load that service provider or

00:53:44,560 --> 00:53:47,780
laravel could load that service provider

00:53:46,869 --> 00:53:49,670
automatically

00:53:47,780 --> 00:53:52,610
one using this discovery mechanism that

00:53:49,670 --> 00:53:56,600
I showed okay so at the current state I

00:53:52,610 --> 00:53:59,720
can't do that I can't make a package to

00:53:56,600 --> 00:54:02,150
wrap ghazal and work the way I want I

00:53:59,720 --> 00:54:05,030
still have to use the package that

00:54:02,150 --> 00:54:07,700
exists for whatever to wrap all of that

00:54:05,030 --> 00:54:10,190
right I think that's that's necessary

00:54:07,700 --> 00:54:12,670
and so I don't sorry i don't know if

00:54:10,190 --> 00:54:16,160
it's something related that you told

00:54:12,670 --> 00:54:17,600
about the service Walder that you didn't

00:54:16,160 --> 00:54:19,520
talk too much on the presentation

00:54:17,600 --> 00:54:23,420
exactly it's related to the service lord

00:54:19,520 --> 00:54:24,920
I was talking about and um also another

00:54:23,420 --> 00:54:26,450
thing that is important to mention is

00:54:24,920 --> 00:54:27,980
that puli doesn't solve all the

00:54:26,450 --> 00:54:31,790
interoperability problems that we have

00:54:27,980 --> 00:54:33,950
it's just one building stone like we had

00:54:31,790 --> 00:54:35,960
the PSR for autoloading standard that

00:54:33,950 --> 00:54:38,500
was the first building stones for having

00:54:35,960 --> 00:54:40,790
interoperable code we have composer

00:54:38,500 --> 00:54:44,270
puh-leeze another building stone and now

00:54:40,790 --> 00:54:45,980
we need many more standards from the

00:54:44,270 --> 00:54:49,310
framework on top ability group like peas

00:54:45,980 --> 00:54:51,530
are 74 request and response for unified

00:54:49,310 --> 00:54:53,720
requests and responses and more of that

00:54:51,530 --> 00:54:57,640
to have truly interoperable packages

00:54:53,720 --> 00:54:59,260
okay so thank you that's important

00:54:57,640 --> 00:55:01,000
all right so I think I'm out of time

00:54:59,260 --> 00:55:04,089
thank you very much if you want to talk

00:55:01,000 --> 00:55:06,210
to me come to me i'll be around thank

00:55:04,089 --> 00:55:06,210

YouTube URL: https://www.youtube.com/watch?v=YWXqET5xlzw


