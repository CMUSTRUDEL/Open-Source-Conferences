Title: DrupalCon Barcelona 2015: Coding with Rules for Drupal 8
Publication date: 2015-09-22
Playlist: DrupalCon Barcelona - September 2015
Description: 
	The #d8rules initiative is working on porting the Rules module to Drupal 8. In this session fago, klausi & dasjo will work with you to get started with writing events, conditions and actions for Rules in Drupal 8.

The session will be a great case study for people familiar with basic Drupal development concepts eager to jump into developing for Drupal 8. As Rules tries to leverage best-practices as much as possible, it is a great starting point to learn all the new things.

Beside an update on the latest development status, weâ€™ll introduce you to the following topics:

Applying new architectural patterns in Drupal 8
Understanding the Core Plug-in & Context systems
Typed Data API basics
Writing Rules action & conditions plugins
Related configuration entities and YAML files
Embedding reusable components in your modules!

Disclaimer: Rules 8.x is still in its early phase and does not have a stable release yet.
Captions: 
	00:00:00,000 --> 00:00:10,860
yeah so finish the first milestone for

00:00:05,520 --> 00:00:14,099
the clicker okay so this is today you

00:00:10,860 --> 00:00:15,890
can see part of the road team this is

00:00:14,099 --> 00:00:20,640
Fargo the creator of the rules module

00:00:15,890 --> 00:00:23,670
Klaus a common taner I do kind of

00:00:20,640 --> 00:00:26,580
organizing around the initiative that we

00:00:23,670 --> 00:00:29,519
have and there's also foo be helping out

00:00:26,580 --> 00:00:32,279
with development Steve perky's and Nick

00:00:29,519 --> 00:00:36,390
agree now did the great new logo for the

00:00:32,279 --> 00:00:38,370
rules initiative what is the rules

00:00:36,390 --> 00:00:41,399
module so hands up who has been using

00:00:38,370 --> 00:00:44,010
roles in the previous versions cool

00:00:41,399 --> 00:00:47,340
awesome who has not been using rules

00:00:44,010 --> 00:00:51,539
before okay cool thanks for showing up

00:00:47,340 --> 00:00:55,890
still so the Rose module consists of

00:00:51,539 --> 00:00:58,260
very basic principles we have any event

00:00:55,890 --> 00:01:00,510
that can happen on the website could be

00:00:58,260 --> 00:01:02,730
a user interaction it could be a cron

00:01:00,510 --> 00:01:05,900
job running in the background so the

00:01:02,730 --> 00:01:10,650
event is the trigger that fires and then

00:01:05,900 --> 00:01:12,439
we can test for arbitrary conditions so

00:01:10,650 --> 00:01:16,140
we can check in that case for example

00:01:12,439 --> 00:01:20,220
the user has generated the content has

00:01:16,140 --> 00:01:22,650
been updated event and then up here we

00:01:20,220 --> 00:01:25,710
can check for a condition so if it's so

00:01:22,650 --> 00:01:28,799
in this example if the content author is

00:01:25,710 --> 00:01:30,240
different to the acting user that it

00:01:28,799 --> 00:01:33,530
could be any condition that you can

00:01:30,240 --> 00:01:35,640
think of and then we can execute actions

00:01:33,530 --> 00:01:38,250
could be one action could be multiple

00:01:35,640 --> 00:01:41,100
actions in that case we want to notify

00:01:38,250 --> 00:01:43,829
the content author that another user has

00:01:41,100 --> 00:01:45,570
changed the content on the website so

00:01:43,829 --> 00:01:48,810
based on the principles events

00:01:45,570 --> 00:01:51,450
conditions and actions you being a site

00:01:48,810 --> 00:01:54,229
builder you being a developer can

00:01:51,450 --> 00:01:58,159
implement very custom workflows and

00:01:54,229 --> 00:02:01,259
there's a couple of examples for that so

00:01:58,159 --> 00:02:03,689
the rules module is is being used to

00:02:01,259 --> 00:02:07,380
build flexible workflows for example

00:02:03,689 --> 00:02:10,560
customized mail notifications so instead

00:02:07,380 --> 00:02:12,480
of having a back-end ER needing to

00:02:10,560 --> 00:02:13,160
implement the males that are being sent

00:02:12,480 --> 00:02:15,710
out

00:02:13,160 --> 00:02:17,450
through the user interface Wirecast why

00:02:15,710 --> 00:02:19,550
are clicking together the rules

00:02:17,450 --> 00:02:23,960
configuration you can customize the text

00:02:19,550 --> 00:02:26,990
that are sent out or there you can also

00:02:23,960 --> 00:02:29,930
do custom redirect system messages a lot

00:02:26,990 --> 00:02:35,000
of other stuff but the big power of the

00:02:29,930 --> 00:02:39,050
rules module is because there's hundreds

00:02:35,000 --> 00:02:42,440
of integration modules available so we

00:02:39,050 --> 00:02:45,290
have a big ecosystem there entity API

00:02:42,440 --> 00:02:47,650
the fields the views modules they all

00:02:45,290 --> 00:02:51,260
have integrations with the rules module

00:02:47,650 --> 00:02:53,420
and this is why actually yesterday we

00:02:51,260 --> 00:02:55,130
checked it's not it's we've always been

00:02:53,420 --> 00:02:56,990
talking about this we used on every

00:02:55,130 --> 00:02:59,840
fifth Drupal site but it's already used

00:02:56,990 --> 00:03:01,580
on every fourth drupal site so more than

00:02:59,840 --> 00:03:05,000
twenty five percent of all the Drupal

00:03:01,580 --> 00:03:07,250
installations use the rules module yeah

00:03:05,000 --> 00:03:09,620
which is kind of cool so it's maybe not

00:03:07,250 --> 00:03:12,680
that the hard requirement for four

00:03:09,620 --> 00:03:15,380
people building websites but it's it has

00:03:12,680 --> 00:03:16,880
a very big adoption based on the big

00:03:15,380 --> 00:03:20,870
flexibility that the rules module

00:03:16,880 --> 00:03:24,410
provides you probably know that already

00:03:20,870 --> 00:03:29,120
um and this talk is primarily about

00:03:24,410 --> 00:03:31,970
Drupal 8 so we got really excited about

00:03:29,120 --> 00:03:35,090
Rupa late and I'm just very quickly

00:03:31,970 --> 00:03:38,090
recapping that well Elster's all of

00:03:35,090 --> 00:03:41,709
triple eight will be object-oriented we

00:03:38,090 --> 00:03:43,760
can have more modern web patterns

00:03:41,709 --> 00:03:46,489
development patterns like dependency

00:03:43,760 --> 00:03:50,300
injection a lot of API is get better for

00:03:46,489 --> 00:03:51,950
Drupal 8 everything is we can do more

00:03:50,300 --> 00:03:55,280
efficient testing with the phpunit

00:03:51,950 --> 00:03:57,830
framework that is in place and rupal 8

00:03:55,280 --> 00:04:00,920
uses a lot of symphony components so

00:03:57,830 --> 00:04:02,989
that gave us a lot of motivation to port

00:04:00,920 --> 00:04:04,640
the rules Molly to drupal 8 also that

00:04:02,989 --> 00:04:06,709
there are some legacy modules being

00:04:04,640 --> 00:04:10,640
removed web services are part of trooper

00:04:06,709 --> 00:04:13,250
Cornell and the front end is responsive

00:04:10,640 --> 00:04:15,650
and so forth so yeah we kind of had a

00:04:13,250 --> 00:04:18,470
lot of general excitement for Drupal 8

00:04:15,650 --> 00:04:21,789
and when breaking it down to what is

00:04:18,470 --> 00:04:26,960
relevant for rolls itself

00:04:21,789 --> 00:04:29,270
actually sorry just a second it's a bit

00:04:26,960 --> 00:04:35,509
weird because the slides are very small

00:04:29,270 --> 00:04:37,610
here that's great ok so in Drupal 7 and

00:04:35,509 --> 00:04:40,759
the versions before rules was already

00:04:37,610 --> 00:04:43,039
I'd say leveraging best practices coding

00:04:40,759 --> 00:04:45,949
standards and it was already organized

00:04:43,039 --> 00:04:48,500
in a very modular an extensible way so

00:04:45,949 --> 00:04:51,860
actually group rules before already

00:04:48,500 --> 00:04:53,750
leveraged its own plugins system but now

00:04:51,860 --> 00:04:56,300
we can use the plugin system from Drupal

00:04:53,750 --> 00:04:59,060
8 which is kind of cool and makes the

00:04:56,300 --> 00:05:02,120
code very much more readable and

00:04:59,060 --> 00:05:03,860
understandable there's a conditions API

00:05:02,120 --> 00:05:05,389
in Drupal core so we can leverage that

00:05:03,860 --> 00:05:08,090
and we can also build on all the

00:05:05,389 --> 00:05:11,060
structured data that is now much more

00:05:08,090 --> 00:05:13,400
consistently available through AP is so

00:05:11,060 --> 00:05:16,820
the entity API now is a is a full

00:05:13,400 --> 00:05:21,009
leveraged API in Drupal 8 and the type

00:05:16,820 --> 00:05:25,150
data API has been made generic again

00:05:21,009 --> 00:05:31,550
which is kind of cool um the actions API

00:05:25,150 --> 00:05:33,320
we have to put it in parent yeah we kind

00:05:31,550 --> 00:05:36,320
of had to fork it because we couldn't

00:05:33,320 --> 00:05:38,150
fix everything in Drupal core itself but

00:05:36,320 --> 00:05:42,289
we are building upon the existing

00:05:38,150 --> 00:05:45,050
actions API and maybe in further Drupal

00:05:42,289 --> 00:05:47,180
8 point releases we will be able to to

00:05:45,050 --> 00:05:51,740
push that code back into triple core

00:05:47,180 --> 00:05:53,360
itself then the context API this is kind

00:05:51,740 --> 00:05:55,280
of exciting because there's already a

00:05:53,360 --> 00:05:58,400
triple 8 contract module that joined

00:05:55,280 --> 00:06:00,590
forces with us page manager is using the

00:05:58,400 --> 00:06:02,810
same context system as the rules module

00:06:00,590 --> 00:06:04,759
does in order to pass in information

00:06:02,810 --> 00:06:09,310
into different components of rules and

00:06:04,759 --> 00:06:11,360
return the structured and meta data

00:06:09,310 --> 00:06:13,039
annotated information about which

00:06:11,360 --> 00:06:15,849
contexts are required and what are the

00:06:13,039 --> 00:06:18,289
return values of the actions performed

00:06:15,849 --> 00:06:20,599
yeah and then in general configuration

00:06:18,289 --> 00:06:25,009
management so instead of implementing

00:06:20,599 --> 00:06:26,870
our own expert system site builders or

00:06:25,009 --> 00:06:28,460
developers will be able to just use the

00:06:26,870 --> 00:06:31,339
cmi system in order to export

00:06:28,460 --> 00:06:33,560
configuration into younger files which

00:06:31,339 --> 00:06:36,830
is great

00:06:33,560 --> 00:06:39,680
we kind of try to do it the best way as

00:06:36,830 --> 00:06:42,290
we can so reusable components it's a big

00:06:39,680 --> 00:06:44,300
topic for us so everything every problem

00:06:42,290 --> 00:06:46,790
that we solved we try to resolve in a in

00:06:44,300 --> 00:06:51,260
a generic way and we have been talking

00:06:46,790 --> 00:06:53,900
about these are tools idea of it so the

00:06:51,260 --> 00:06:56,000
idea is that we for example the tokens

00:06:53,900 --> 00:06:59,300
that rose needs they they are its own

00:06:56,000 --> 00:07:01,580
component and the typed data widgets in

00:06:59,300 --> 00:07:04,820
order to configure rules and to display

00:07:01,580 --> 00:07:09,110
rules configurations that should be a

00:07:04,820 --> 00:07:11,120
reusable part and then the yes mentioned

00:07:09,110 --> 00:07:13,220
the context API that we are using it can

00:07:11,120 --> 00:07:16,010
it's extended in rules and could be used

00:07:13,220 --> 00:07:18,080
by other modules and we also want to

00:07:16,010 --> 00:07:21,830
have more integrate abilities so that

00:07:18,080 --> 00:07:25,100
for example on the block like when you

00:07:21,830 --> 00:07:27,020
have block visibility conditions that

00:07:25,100 --> 00:07:28,460
could just be a rose UI component where

00:07:27,020 --> 00:07:30,500
you don't have to go into the rules

00:07:28,460 --> 00:07:32,210
module itself to configure it but you it

00:07:30,500 --> 00:07:35,840
would just show up in another place it

00:07:32,210 --> 00:07:38,900
could be reused so a big focus on

00:07:35,840 --> 00:07:41,780
reusable UI components and as you maybe

00:07:38,900 --> 00:07:43,820
already know from the previous versions

00:07:41,780 --> 00:07:45,320
the data selector it's kind of Handy

00:07:43,820 --> 00:07:47,300
it's kind of cool to be able to drill

00:07:45,320 --> 00:07:50,060
into the all the data structures

00:07:47,300 --> 00:07:51,650
available and this doesn't have to be

00:07:50,060 --> 00:07:53,780
necessarily part of the rules module

00:07:51,650 --> 00:07:56,690
make um so we implement it in a way that

00:07:53,780 --> 00:08:00,140
other people can we use it and probably

00:07:56,690 --> 00:08:05,350
will it will just be its own library or

00:08:00,140 --> 00:08:09,560
its own feature along the way right um

00:08:05,350 --> 00:08:11,810
for site builders um I think the biggest

00:08:09,560 --> 00:08:13,729
the biggest change would be the inline

00:08:11,810 --> 00:08:17,120
rule system that we envision so instead

00:08:13,729 --> 00:08:19,039
of being having to build rules

00:08:17,120 --> 00:08:21,020
configurations bottom up where you first

00:08:19,039 --> 00:08:23,240
define the rules components and then you

00:08:21,020 --> 00:08:25,400
assemble them together in in a reaction

00:08:23,240 --> 00:08:27,080
rule you would be able to build it to

00:08:25,400 --> 00:08:29,750
top down because that's like the way we

00:08:27,080 --> 00:08:34,240
think about logic so when I have to

00:08:29,750 --> 00:08:36,919
implement more complex if and else

00:08:34,240 --> 00:08:38,659
statements for example in Drupal 7 I

00:08:36,919 --> 00:08:40,430
have to install the rules conditional

00:08:38,659 --> 00:08:42,530
module or I have to really think

00:08:40,430 --> 00:08:44,780
bottom-up by creating the components

00:08:42,530 --> 00:08:46,580
first whereas with the inline rule

00:08:44,780 --> 00:08:46,970
system we envisioned that site builders

00:08:46,580 --> 00:08:50,319
would be

00:08:46,970 --> 00:08:53,740
to build the structure about top down

00:08:50,319 --> 00:08:57,620
yeah deployable configuration as

00:08:53,740 --> 00:09:01,519
mentioned by a sea mi so that's like a

00:08:57,620 --> 00:09:05,839
lot of good things that we all would

00:09:01,519 --> 00:09:09,350
like to use right now right and Fargo

00:09:05,839 --> 00:09:11,930
and me over a year ago we decided it's

00:09:09,350 --> 00:09:14,509
not going to happen unless something is

00:09:11,930 --> 00:09:16,100
pushing us forward so II I'm quickly

00:09:14,509 --> 00:09:19,610
going to explain what we did so far

00:09:16,100 --> 00:09:22,100
there is a campaign which is which goes

00:09:19,610 --> 00:09:26,149
by the name da drools and our vision is

00:09:22,100 --> 00:09:28,040
to accelerate through polite uptake by

00:09:26,149 --> 00:09:29,930
cheering that the Rose model is a key

00:09:28,040 --> 00:09:32,569
contributed module is available for

00:09:29,930 --> 00:09:34,519
everybody so that people can build

00:09:32,569 --> 00:09:38,389
flexible work clothes on their websites

00:09:34,519 --> 00:09:40,220
and we also want to find a way to make

00:09:38,389 --> 00:09:41,839
our contributions like all the

00:09:40,220 --> 00:09:44,300
development time that we put into the

00:09:41,839 --> 00:09:49,339
rules module a bit more sustainable so

00:09:44,300 --> 00:09:51,589
that sounds like funding right and on

00:09:49,339 --> 00:09:55,399
Drupal funders we put up a campaign and

00:09:51,589 --> 00:09:58,639
kind of we're really successful we had

00:09:55,399 --> 00:10:01,160
over 300 people pitch in a smaller and

00:09:58,639 --> 00:10:05,509
bigger amounts of money and we also had

00:10:01,160 --> 00:10:07,670
a lot of corporate companies supporting

00:10:05,509 --> 00:10:12,230
us which is really great so thanks a lot

00:10:07,670 --> 00:10:14,300
to all of them together we got a fan we

00:10:12,230 --> 00:10:20,199
got a financing about eighteen thousand

00:10:14,300 --> 00:10:23,660
euros and that translates to 45 year

00:10:20,199 --> 00:10:25,879
self cost of either a picker autonomic

00:10:23,660 --> 00:10:28,610
step of companies employing cloudy and

00:10:25,879 --> 00:10:30,170
Fargo so they would they would allow

00:10:28,610 --> 00:10:32,000
their developers to work for the self

00:10:30,170 --> 00:10:35,930
cost and in Austria it's basically for

00:10:32,000 --> 00:10:38,149
45 years you don't earn anything but you

00:10:35,930 --> 00:10:41,449
kind of let the people work on on

00:10:38,149 --> 00:10:43,579
contribution in that sense so that's

00:10:41,449 --> 00:10:46,459
really great that it was was kind of a

00:10:43,579 --> 00:10:49,819
cool accomplishment for us and it it

00:10:46,459 --> 00:10:53,329
enabled cloudy and Fargo to to invest

00:10:49,819 --> 00:10:56,120
more time in order to to work on all all

00:10:53,329 --> 00:10:58,370
the topics that we have stated that was

00:10:56,120 --> 00:11:00,950
over a year ago and

00:10:58,370 --> 00:11:03,260
until now we actually finished the first

00:11:00,950 --> 00:11:05,570
milestone there's a there's a more

00:11:03,260 --> 00:11:08,089
detailed blog post on our website the

00:11:05,570 --> 00:11:09,830
approach the dork where we explain what

00:11:08,089 --> 00:11:14,320
we have accomplished so far and we did a

00:11:09,830 --> 00:11:16,460
lot of interesting stuff on the way yeah

00:11:14,320 --> 00:11:20,960
like to have an overview so the

00:11:16,460 --> 00:11:24,500
milestone one is kind of the basics of

00:11:20,960 --> 00:11:27,680
the rules core engine the plug-in types

00:11:24,500 --> 00:11:29,900
are all there you have the condition and

00:11:27,680 --> 00:11:33,320
action api's we actually already have

00:11:29,900 --> 00:11:35,510
event ap is as well so we are we also

00:11:33,320 --> 00:11:38,360
started working on stuff that was

00:11:35,510 --> 00:11:40,580
planned further ahead and yeah the

00:11:38,360 --> 00:11:42,920
parameter configuration and the context

00:11:40,580 --> 00:11:45,860
mapping and basically all that together

00:11:42,920 --> 00:11:49,220
milestone one is what we call a

00:11:45,860 --> 00:11:51,290
developer preview so if you are

00:11:49,220 --> 00:11:54,589
interested in porting a contribution

00:11:51,290 --> 00:11:56,779
module or from Drupal 7 to Triple Eight

00:11:54,589 --> 00:11:58,970
that relies on Drupal on the rules

00:11:56,779 --> 00:12:01,100
module that has integrations its own

00:11:58,970 --> 00:12:03,770
custom events its own actions it's all

00:12:01,100 --> 00:12:10,040
conditions you can already start doing

00:12:03,770 --> 00:12:14,990
that by now that's cool and then thank

00:12:10,040 --> 00:12:17,180
you yeah my stunt too weary prioritized

00:12:14,990 --> 00:12:20,060
a bit so originally we only had the UI

00:12:17,180 --> 00:12:22,760
put at the very end but we felt without

00:12:20,060 --> 00:12:25,670
the UI it's it's it's really boring and

00:12:22,760 --> 00:12:27,529
nobody will will want to use it so we

00:12:25,670 --> 00:12:31,490
reach our foot priorities a bit and we

00:12:27,529 --> 00:12:33,920
already have very basic steps of the UI

00:12:31,490 --> 00:12:36,260
in place but we need definitely need a

00:12:33,920 --> 00:12:38,270
lot of help there and in order to be

00:12:36,260 --> 00:12:43,040
able to complete milestone 2 by the end

00:12:38,270 --> 00:12:45,470
of the year we would do ya like the UI

00:12:43,040 --> 00:12:49,520
part 1 so that you can do the basic

00:12:45,470 --> 00:12:52,640
editing and then we'll do yeah we kind

00:12:49,520 --> 00:12:56,720
of complete all the engine features will

00:12:52,640 --> 00:12:59,600
also have the advanced plugins like

00:12:56,720 --> 00:13:01,750
finalizing the events and we still have

00:12:59,600 --> 00:13:05,589
to implement the loops and so forth

00:13:01,750 --> 00:13:07,970
we'll have entity token support

00:13:05,589 --> 00:13:09,680
configuration cmi integration that's

00:13:07,970 --> 00:13:11,510
already started so there's already

00:13:09,680 --> 00:13:14,610
examples for that

00:13:11,510 --> 00:13:19,590
then all the rules it the generic rules

00:13:14,610 --> 00:13:22,140
integration so that data is exposed and

00:13:19,590 --> 00:13:25,340
the reusable UI components and then

00:13:22,140 --> 00:13:28,620
finally at the end we have a lot of like

00:13:25,340 --> 00:13:30,360
advanced tasks to finish and we're going

00:13:28,620 --> 00:13:33,420
to complete the rules you I we got to

00:13:30,360 --> 00:13:35,670
have the rule scheduler ported and the

00:13:33,420 --> 00:13:38,160
existing integrations which also has

00:13:35,670 --> 00:13:39,660
already been started so a lot of work

00:13:38,160 --> 00:13:42,750
has already been started a lot of work

00:13:39,660 --> 00:13:45,150
is a hat I think we have a good plan and

00:13:42,750 --> 00:13:47,280
we have actually a much much bigger team

00:13:45,150 --> 00:13:50,490
than I presented in the beginning so

00:13:47,280 --> 00:13:52,530
during spring trainings and sessions we

00:13:50,490 --> 00:13:54,150
didn't only work on the module itself

00:13:52,530 --> 00:13:56,880
but we also trained a lot of

00:13:54,150 --> 00:13:59,370
contributors a lot of members on the new

00:13:56,880 --> 00:14:03,120
paradigms of Drupal 8 getting up to

00:13:59,370 --> 00:14:04,950
speed with with the plugin system

00:14:03,120 --> 00:14:06,660
getting up to speed with the context API

00:14:04,950 --> 00:14:10,500
so that was a really great opportunity

00:14:06,660 --> 00:14:13,080
and we we have health Sprint's trainings

00:14:10,500 --> 00:14:17,190
and sessions at various trooper camps to

00:14:13,080 --> 00:14:19,110
pecans smaller sprint so it's really

00:14:17,190 --> 00:14:23,750
good great opportunity and this Friday

00:14:19,110 --> 00:14:23,750
you're all invited to join us as well

00:14:24,740 --> 00:14:31,800
yes so there's more than 27 contributors

00:14:29,460 --> 00:14:33,240
that already have their pull requests

00:14:31,800 --> 00:14:36,210
merge and there's a lot of more pull

00:14:33,240 --> 00:14:38,730
requests around so thank you everybody

00:14:36,210 --> 00:14:42,690
for contributing it's this which is

00:14:38,730 --> 00:14:45,690
awesome it really also motivates us a

00:14:42,690 --> 00:14:49,770
lot to push things for it and get get

00:14:45,690 --> 00:14:54,780
the module finished thank you yeah and

00:14:49,770 --> 00:14:57,960
the Fargo will take over so if you are

00:14:54,780 --> 00:15:00,780
interested in helping out we really make

00:14:57,960 --> 00:15:03,390
sure that is that is as easy as possible

00:15:00,780 --> 00:15:05,970
so basically what you you need is just a

00:15:03,390 --> 00:15:09,810
tuple 8 installation and then you go to

00:15:05,970 --> 00:15:12,330
our github page it's github com / 50 /

00:15:09,810 --> 00:15:14,430
shoes and there you find delete me with

00:15:12,330 --> 00:15:18,060
all the instructions so the first thing

00:15:14,430 --> 00:15:20,610
actually that you do is that you fork

00:15:18,060 --> 00:15:22,590
the project on github and then you move

00:15:20,610 --> 00:15:25,590
on but it's everything like

00:15:22,590 --> 00:15:28,020
the contribution guideline so it's quite

00:15:25,590 --> 00:15:31,290
easy so as you see we decided to use

00:15:28,020 --> 00:15:35,330
github for contributing two holes and

00:15:31,290 --> 00:15:37,950
for working in hoboken at opal 8-port

00:15:35,330 --> 00:15:41,250
because the pull request never fear

00:15:37,950 --> 00:15:44,640
makes it be easier for us to innovate

00:15:41,250 --> 00:15:47,010
and work faster like in Grange's than if

00:15:44,640 --> 00:15:49,650
the Patrick workflow for later we are

00:15:47,010 --> 00:15:51,750
not yet sure but wherever you keep Gita

00:15:49,650 --> 00:15:54,270
github or move back to the top log in

00:15:51,750 --> 00:15:57,060
chic you so that's undecided yet but for

00:15:54,270 --> 00:16:01,290
now interpolate development only is on

00:15:57,060 --> 00:16:03,750
github so let's have a closer look at

00:16:01,290 --> 00:16:06,390
the the api's of force in in Drupal 8

00:16:03,750 --> 00:16:08,370
and let's compare them to 2.7 so when

00:16:06,390 --> 00:16:10,590
you have some module that integrates

00:16:08,370 --> 00:16:14,160
already with 2 / 7 you get an idea on

00:16:10,590 --> 00:16:16,500
how to do this the same in indo blade so

00:16:14,160 --> 00:16:18,600
basically always when you want to

00:16:16,500 --> 00:16:20,730
integrate your module with force the

00:16:18,600 --> 00:16:23,430
first thing to do that you need to do is

00:16:20,730 --> 00:16:26,580
really describe the data so that rules

00:16:23,430 --> 00:16:28,170
is able to know about the data that

00:16:26,580 --> 00:16:30,360
you're working with like when you have

00:16:28,170 --> 00:16:32,520
module it exposes a new entity type

00:16:30,360 --> 00:16:34,200
who's needs to know about it it's know

00:16:32,520 --> 00:16:37,140
about the properties and other things we

00:16:34,200 --> 00:16:39,180
can deal with that so in Drupal 7

00:16:37,140 --> 00:16:41,400
basically what you had to do for it is

00:16:39,180 --> 00:16:43,170
like mostly you had to provide the hook

00:16:41,400 --> 00:16:45,930
into the property information by the

00:16:43,170 --> 00:16:48,600
entity entered a pair module and then

00:16:45,930 --> 00:16:50,820
holes work with that and in some certain

00:16:48,600 --> 00:16:53,220
situation you could also add a new data

00:16:50,820 --> 00:16:54,840
type but basically that's like the

00:16:53,220 --> 00:16:57,750
fundamental thing and once you do that

00:16:54,840 --> 00:16:59,760
order generic actions and conditions of

00:16:57,750 --> 00:17:02,580
the host module like the data

00:16:59,760 --> 00:17:04,740
comparisons that a data value or also

00:17:02,580 --> 00:17:07,380
the the entity actions and conditions

00:17:04,740 --> 00:17:09,720
then automatically work based upon that

00:17:07,380 --> 00:17:12,690
so that's really the first thing to do

00:17:09,720 --> 00:17:15,030
and in in duple eight or fortunately

00:17:12,690 --> 00:17:18,270
there's a new API the type data API

00:17:15,030 --> 00:17:20,970
which we managed to get into core which

00:17:18,270 --> 00:17:24,270
is really the cultural thing that we are

00:17:20,970 --> 00:17:27,510
building up so what's nice about it is

00:17:24,270 --> 00:17:29,700
basically that it's all in core and once

00:17:27,510 --> 00:17:31,040
you follow the things that call already

00:17:29,700 --> 00:17:35,480
has

00:17:31,040 --> 00:17:38,060
you basically are set so to give you a

00:17:35,480 --> 00:17:40,700
short overview about what it is then get

00:17:38,060 --> 00:17:43,880
an idea so that type data API basically

00:17:40,700 --> 00:17:46,550
is a consistent way of interacting with

00:17:43,880 --> 00:17:51,320
any data based on your metadata so it

00:17:46,550 --> 00:17:53,900
allows you to deal with entities and

00:17:51,320 --> 00:17:56,450
data in it in a generic fashion so

00:17:53,900 --> 00:17:59,900
basically it works up a type system

00:17:56,450 --> 00:18:02,330
that's defined in PHP so it's King comes

00:17:59,900 --> 00:18:05,480
with some very basic primitive types

00:18:02,330 --> 00:18:07,280
like string integer float and so on then

00:18:05,480 --> 00:18:09,230
it also defines something we call like

00:18:07,280 --> 00:18:12,080
complex data type it's basically a

00:18:09,230 --> 00:18:15,260
complex type is some data structure with

00:18:12,080 --> 00:18:17,690
some named properties in it and then it

00:18:15,260 --> 00:18:20,120
also has the notion of lists the lists

00:18:17,690 --> 00:18:23,990
are basically multiple values of some

00:18:20,120 --> 00:18:25,640
data type so this is an overview of all

00:18:23,990 --> 00:18:28,910
the data types that are already in

00:18:25,640 --> 00:18:30,890
Drupal 8 core so as mentioned they're

00:18:28,910 --> 00:18:32,870
all the basic things that sling integer

00:18:30,890 --> 00:18:36,140
but there are also some somewhat special

00:18:32,870 --> 00:18:38,450
things like timestamp email that's all

00:18:36,140 --> 00:18:40,250
already in quang you can just use it

00:18:38,450 --> 00:18:43,430
also if the host module when you

00:18:40,250 --> 00:18:45,530
describe your data and the same way

00:18:43,430 --> 00:18:48,350
doesn't like automatic types for

00:18:45,530 --> 00:18:51,260
entities like entity node so in Topal 7

00:18:48,350 --> 00:18:53,630
the type work for knows just note into

00:18:51,260 --> 00:18:55,730
Pilatus overs entity colornote entity

00:18:53,630 --> 00:18:57,350
color entity type so that's a little

00:18:55,730 --> 00:19:00,520
change but it also makes should our

00:18:57,350 --> 00:19:02,900
campaign in namespace collisions and

00:19:00,520 --> 00:19:05,060
similarity do we also have automatic

00:19:02,900 --> 00:19:06,950
data types for every few typed is

00:19:05,060 --> 00:19:09,830
defined in a system it's just feed item

00:19:06,950 --> 00:19:12,050
column field type name so like the text

00:19:09,830 --> 00:19:17,690
field type would be food item column

00:19:12,050 --> 00:19:20,390
text so this is an example on how you

00:19:17,690 --> 00:19:23,000
provide a new data type in case you only

00:19:20,390 --> 00:19:25,040
need that like mostly I think you are

00:19:23,000 --> 00:19:27,590
good with the defined dear types but

00:19:25,040 --> 00:19:29,780
it's for you to get an idea like a data

00:19:27,590 --> 00:19:31,880
type in Drupal 8 is just a plug-in so

00:19:29,780 --> 00:19:34,040
you can also extend and add your own

00:19:31,880 --> 00:19:37,010
special data types like if you would you

00:19:34,040 --> 00:19:39,670
could add floats that's just as of a

00:19:37,010 --> 00:19:41,720
certain ranges as separate data type and

00:19:39,670 --> 00:19:43,970
basically what

00:19:41,720 --> 00:19:46,280
as this is a float it's a primitive so

00:19:43,970 --> 00:19:47,930
it extends limit of pace what does it

00:19:46,280 --> 00:19:50,570
make sure it's extending like primitive

00:19:47,930 --> 00:19:56,300
interface it's all based on interfaces

00:19:50,570 --> 00:19:59,240
and really reusable this is another

00:19:56,300 --> 00:20:01,430
example for implementing a few type as

00:19:59,240 --> 00:20:03,860
mentioned there's the notion of complex

00:20:01,430 --> 00:20:06,010
data so few items are complex data

00:20:03,860 --> 00:20:08,780
because they contain multiple properties

00:20:06,010 --> 00:20:11,510
so if you think of like the the link

00:20:08,780 --> 00:20:13,280
field it contains like the example here

00:20:11,510 --> 00:20:15,740
it contains the URL and when you

00:20:13,280 --> 00:20:17,930
implement the field tab you just define

00:20:15,740 --> 00:20:20,120
the poverties that your feed item is

00:20:17,930 --> 00:20:22,070
going to contain you have to do that for

00:20:20,120 --> 00:20:24,200
implementing the field type and that's

00:20:22,070 --> 00:20:29,540
the same information that who's is going

00:20:24,200 --> 00:20:32,450
to make use of us all so to sum it up to

00:20:29,540 --> 00:20:35,150
four describing data two holes in Drupal

00:20:32,450 --> 00:20:37,910
8 basically you just need to implement

00:20:35,150 --> 00:20:40,610
the COI guys follow the type data API

00:20:37,910 --> 00:20:42,500
and there are also some books you can

00:20:40,610 --> 00:20:44,060
use in addition to like what you have

00:20:42,500 --> 00:20:46,040
seen there are some like hooks for

00:20:44,060 --> 00:20:48,110
defining code fields but basically if

00:20:46,040 --> 00:20:50,570
you use a configurable field it's known

00:20:48,110 --> 00:20:53,990
to go spend it on its own if you

00:20:50,570 --> 00:20:56,150
implement the feed type it's known yeah

00:20:53,990 --> 00:20:58,400
so that's really the good news in that

00:20:56,150 --> 00:21:00,590
the action like everything you do in

00:20:58,400 --> 00:21:02,960
interpolate core with your content

00:21:00,590 --> 00:21:05,540
entities automatically works of course

00:21:02,960 --> 00:21:11,450
as well there's no extra work needed in

00:21:05,540 --> 00:21:13,850
that regard anymore yeah so glossy will

00:21:11,450 --> 00:21:19,760
explain how to write condition action

00:21:13,850 --> 00:21:21,800
begins and some events exactly so for

00:21:19,760 --> 00:21:24,080
words in Drupal 8 and the interesting

00:21:21,800 --> 00:21:25,820
parts of course for the controversy or

00:21:24,080 --> 00:21:27,770
writing a custom module how do you

00:21:25,820 --> 00:21:29,360
integrate with rules of course with the

00:21:27,770 --> 00:21:31,670
building blocks that itself the engine

00:21:29,360 --> 00:21:34,940
users and there are conditions actions

00:21:31,670 --> 00:21:36,470
and events and if you look at that what

00:21:34,940 --> 00:21:38,360
are we doing interpreted rules what

00:21:36,470 --> 00:21:40,580
everybody is doing interpolated and that

00:21:38,360 --> 00:21:43,250
is using plugins so I guess you heard

00:21:40,580 --> 00:21:45,050
this already a lot at this conference so

00:21:43,250 --> 00:21:46,610
we saw the plug-in system right now in

00:21:45,050 --> 00:21:48,500
fog explain type data you basically

00:21:46,610 --> 00:21:50,690
probably saw it in some other session

00:21:48,500 --> 00:21:52,940
already and this is the go-to API to

00:21:50,690 --> 00:21:54,830
specify things of a certain type like

00:21:52,940 --> 00:21:56,539
you specify actions

00:21:54,830 --> 00:21:58,760
that are that fulfill some interface

00:21:56,539 --> 00:22:01,610
this is done by a plug-in system this is

00:21:58,760 --> 00:22:03,200
completely object-oriented it's not a

00:22:01,610 --> 00:22:04,700
very complex system you basically have a

00:22:03,200 --> 00:22:06,679
manager that creates the plugin

00:22:04,700 --> 00:22:09,049
instances for you and you have some way

00:22:06,679 --> 00:22:10,490
of discoverability so that you place

00:22:09,049 --> 00:22:12,380
your class somewhere in the file system

00:22:10,490 --> 00:22:14,419
in your module and then it gets found

00:22:12,380 --> 00:22:17,600
and then it's get into this plugin

00:22:14,419 --> 00:22:19,309
system for this type and most of the

00:22:17,600 --> 00:22:22,820
time this is done via annotations

00:22:19,309 --> 00:22:24,710
annotations are special comments on MTG

00:22:22,820 --> 00:22:26,750
big classes we already sorted in under

00:22:24,710 --> 00:22:29,179
tight type data example that Fargo gave

00:22:26,750 --> 00:22:31,519
and we I relieve the plug-in ID some

00:22:29,179 --> 00:22:34,970
label or other definitions that this

00:22:31,519 --> 00:22:36,500
plug-in type brings and by putting in a

00:22:34,970 --> 00:22:38,630
special location in some plugin folder

00:22:36,500 --> 00:22:40,250
for example in a contributor it gets

00:22:38,630 --> 00:22:43,970
recognized by the system and then it's

00:22:40,250 --> 00:22:46,250
available for use in the system so in

00:22:43,970 --> 00:22:48,139
this in this case ruse for example can

00:22:46,250 --> 00:22:50,720
build a select box where you select the

00:22:48,139 --> 00:22:52,519
action it just asks the extra mana give

00:22:50,720 --> 00:22:55,600
me all actions that any module defines

00:22:52,519 --> 00:22:57,740
and then people can select it in the UI

00:22:55,600 --> 00:22:59,960
ya already told you about

00:22:57,740 --> 00:23:02,029
discoverability this works by just

00:22:59,960 --> 00:23:04,330
putting that class in a specific place

00:23:02,029 --> 00:23:06,980
and there are also derivatives of

00:23:04,330 --> 00:23:09,500
plugins so for example you have the

00:23:06,980 --> 00:23:11,240
entity safe action and in the user

00:23:09,500 --> 00:23:12,950
interface it's confusing to have entity

00:23:11,240 --> 00:23:14,779
safe end users don't know what does that

00:23:12,950 --> 00:23:17,720
mean so you want to expose that for any

00:23:14,779 --> 00:23:20,330
entity type so you can create virtual

00:23:17,720 --> 00:23:22,760
plugins so to say where you have that

00:23:20,330 --> 00:23:24,380
action for not saving for user saving

00:23:22,760 --> 00:23:26,000
for taxonomy term saving and then you

00:23:24,380 --> 00:23:28,549
can put it in that group in an old group

00:23:26,000 --> 00:23:31,460
for example although the codebase behind

00:23:28,549 --> 00:23:33,799
it is just one plug-in and but it it

00:23:31,460 --> 00:23:35,779
poses as multiple plugins in the system

00:23:33,799 --> 00:23:37,340
and that's really just trooper core

00:23:35,779 --> 00:23:38,990
features ruse is just leveraging that

00:23:37,340 --> 00:23:40,490
and it's really powerful and you will

00:23:38,990 --> 00:23:42,440
see that everywhere in Drupal core so

00:23:40,490 --> 00:23:45,080
plugins are entity types of plug-in data

00:23:42,440 --> 00:23:46,789
types are plugins and views and users

00:23:45,080 --> 00:23:49,010
plugins basically every module into

00:23:46,789 --> 00:23:50,360
parade will use plugins so I guess the

00:23:49,010 --> 00:23:53,659
first thing you will learn about Drupal

00:23:50,360 --> 00:23:55,639
8 is how to use plugins really so

00:23:53,659 --> 00:23:57,409
providing conditions how we do that in

00:23:55,639 --> 00:23:59,000
Drupal 7 we have this hook hook rules

00:23:57,409 --> 00:24:00,500
condition info and basically in there

00:23:59,000 --> 00:24:02,450
you had an array which would specify the

00:24:00,500 --> 00:24:05,389
name of the condition and what parameter

00:24:02,450 --> 00:24:08,269
it takes and the callbacks which should

00:24:05,389 --> 00:24:10,249
be used and the replacement for that

00:24:08,269 --> 00:24:13,789
in Drupal 8 is implementing a condition

00:24:10,249 --> 00:24:18,440
plugin let's look at the code how that

00:24:13,789 --> 00:24:21,349
looks like so ah yeah basic point is

00:24:18,440 --> 00:24:23,719
here this is basically the annotation

00:24:21,349 --> 00:24:25,849
which I was talking about we already saw

00:24:23,719 --> 00:24:27,889
that it's this add character with some

00:24:25,849 --> 00:24:30,169
plug-in name in this case it's just the

00:24:27,889 --> 00:24:32,059
core condition plugin type and then we

00:24:30,169 --> 00:24:33,919
describe all the stuff that is

00:24:32,059 --> 00:24:37,129
statically available like the ID the

00:24:33,919 --> 00:24:39,289
label and whatever yeah you can also

00:24:37,129 --> 00:24:41,809
leave other comments up here so it's not

00:24:39,289 --> 00:24:43,879
really complicated to do and for simple

00:24:41,809 --> 00:24:46,339
conditions like this condition for notes

00:24:43,879 --> 00:24:50,089
we just have to implement the evaluate

00:24:46,339 --> 00:24:52,609
method and what we try to check here if

00:24:50,089 --> 00:24:54,409
the node is deke which means it gets

00:24:52,609 --> 00:24:56,779
placed on the front page for example in

00:24:54,409 --> 00:24:59,139
some special place so we get the note

00:24:56,779 --> 00:25:02,259
from context this is also one important

00:24:59,139 --> 00:25:06,200
concept of Drupal 8 and ghouls

00:25:02,259 --> 00:25:08,539
specifically and that any any context

00:25:06,200 --> 00:25:10,249
any parameter this action needs gets set

00:25:08,539 --> 00:25:11,809
on this object before the evaluate

00:25:10,249 --> 00:25:14,029
method is invoked and then we can

00:25:11,809 --> 00:25:16,159
conveniently access it here and then do

00:25:14,029 --> 00:25:17,749
something and we just called it a sticky

00:25:16,159 --> 00:25:20,239
method in this case and then return true

00:25:17,749 --> 00:25:23,839
or false and that's basically it for for

00:25:20,239 --> 00:25:25,549
implementing a condition so this is

00:25:23,839 --> 00:25:27,709
really a convenient API for any country

00:25:25,549 --> 00:25:29,419
moderates it's really fast lee written

00:25:27,709 --> 00:25:34,159
and it's just a class and then you

00:25:29,419 --> 00:25:36,109
basically all set so how do we provide

00:25:34,159 --> 00:25:38,179
actions so the mirror of the conditions

00:25:36,109 --> 00:25:40,639
api is the actions api and that has to

00:25:38,179 --> 00:25:43,190
have the hook action in federal / 7 same

00:25:40,639 --> 00:25:44,450
principle you specific specify an array

00:25:43,190 --> 00:25:47,959
with audio action that you want to

00:25:44,450 --> 00:25:49,820
define and actions look basically the

00:25:47,959 --> 00:25:52,909
same interpolate it's one plug in class

00:25:49,820 --> 00:25:55,729
you put it under the plugins / rules

00:25:52,909 --> 00:25:59,299
extra folder in your contributed module

00:25:55,729 --> 00:26:01,549
directories rules itself also M provides

00:25:59,299 --> 00:26:03,200
this action so this code example is

00:26:01,549 --> 00:26:05,149
taken from the roost module itself so

00:26:03,200 --> 00:26:06,379
rules provides the engine to run all

00:26:05,149 --> 00:26:08,149
this excellent condition system but it

00:26:06,379 --> 00:26:10,489
also provides the most common actions

00:26:08,149 --> 00:26:12,320
for core for example in this case

00:26:10,489 --> 00:26:15,349
deleting an entity is a common task

00:26:12,320 --> 00:26:16,999
rules implements that itself and again

00:26:15,349 --> 00:26:18,950
it's just a simple interface which

00:26:16,999 --> 00:26:19,340
specify that the plug-in has to

00:26:18,950 --> 00:26:22,520
implement

00:26:19,340 --> 00:26:24,110
the execute method and same system here

00:26:22,520 --> 00:26:26,210
we have some context where you pull the

00:26:24,110 --> 00:26:29,660
entity from and then we just call delete

00:26:26,210 --> 00:26:30,950
on it so any action or the condition

00:26:29,660 --> 00:26:32,780
plugins that you will see in Drupal 8

00:26:30,950 --> 00:26:34,520
will be fairly simple to just call some

00:26:32,780 --> 00:26:36,800
other API that is generally available

00:26:34,520 --> 00:26:40,130
and that's how they integrate with rules

00:26:36,800 --> 00:26:42,230
itself yeah you can see some other stuff

00:26:40,130 --> 00:26:45,380
in irritation like this stuff is

00:26:42,230 --> 00:26:48,590
translatable so when you have your site

00:26:45,380 --> 00:26:50,900
in Italian for example the annotation

00:26:48,590 --> 00:26:52,100
will reach that and translates it for

00:26:50,900 --> 00:26:54,080
you so you can even have the Italian

00:26:52,100 --> 00:26:56,060
labels in the rules you I this is also

00:26:54,080 --> 00:26:57,410
just basic principle from the plugin

00:26:56,060 --> 00:27:01,460
system in Drupal 8 that we can leverage

00:26:57,410 --> 00:27:03,260
here providing events this is a bit

00:27:01,460 --> 00:27:06,470
different events are also plugins in

00:27:03,260 --> 00:27:10,100
Drupal 8 but they use the symphony vent

00:27:06,470 --> 00:27:12,800
system so what we had in Drupal 7 was an

00:27:10,100 --> 00:27:14,990
hook hook rules event info which

00:27:12,800 --> 00:27:17,660
specified one array with the stuff in it

00:27:14,990 --> 00:27:20,360
seemed like the other hooks in Drupal 8

00:27:17,660 --> 00:27:23,960
we have some fun events plus some llaman

00:27:20,360 --> 00:27:25,910
files will specify metadata so in order

00:27:23,960 --> 00:27:27,500
so that rules knows which events are

00:27:25,910 --> 00:27:29,750
available so that you can select again

00:27:27,500 --> 00:27:32,870
from the UI we have to specify this in a

00:27:29,750 --> 00:27:34,490
yama file rules itself does that and the

00:27:32,870 --> 00:27:37,760
Yama files look like this so for example

00:27:34,490 --> 00:27:39,950
we want to unregister the and use a

00:27:37,760 --> 00:27:42,950
login event with rules so we create this

00:27:39,950 --> 00:27:45,890
yama file this is also part of rules

00:27:42,950 --> 00:27:47,900
itself give it a label and we want to

00:27:45,890 --> 00:27:50,090
show and make it show up on a specific

00:27:47,900 --> 00:27:53,510
category and it has some context and

00:27:50,090 --> 00:27:56,120
that is exactly the account that has

00:27:53,510 --> 00:27:57,710
just logged in the type information is

00:27:56,120 --> 00:27:59,690
important it says that this is a user

00:27:57,710 --> 00:28:01,700
object so that rules knows what fields

00:27:59,690 --> 00:28:04,400
are available on the user and can make

00:28:01,700 --> 00:28:06,590
use of that so this is the first part so

00:28:04,400 --> 00:28:09,680
now rules notes about this event how is

00:28:06,590 --> 00:28:13,490
this event actually invoked and it works

00:28:09,680 --> 00:28:16,100
like this this is an example of rules

00:28:13,490 --> 00:28:17,900
itself it implements hook user login so

00:28:16,100 --> 00:28:19,730
in Drupal 8 we still have hooks and we

00:28:17,900 --> 00:28:21,710
have events unfortunately what's not

00:28:19,730 --> 00:28:23,450
possible in a Drupal development cycle

00:28:21,710 --> 00:28:25,370
to eliminate all hooks and convert

00:28:23,450 --> 00:28:28,040
everything to events so we will have to

00:28:25,370 --> 00:28:30,410
deal with both cases interpret and a

00:28:28,040 --> 00:28:32,090
user login is one example of that so

00:28:30,410 --> 00:28:33,640
what rules does in this case it grows

00:28:32,090 --> 00:28:36,620
its own event

00:28:33,640 --> 00:28:38,240
the first critical part here is that we

00:28:36,620 --> 00:28:40,130
create our own event class so this is a

00:28:38,240 --> 00:28:42,230
very basic class it doesn't do anything

00:28:40,130 --> 00:28:44,330
it just extends the symphony generic

00:28:42,230 --> 00:28:46,370
event class and passes in the account

00:28:44,330 --> 00:28:48,980
object so that we can later pull it out

00:28:46,370 --> 00:28:50,420
and pass it on to rules and then we just

00:28:48,980 --> 00:28:53,540
get the event dispatcher which is a

00:28:50,420 --> 00:28:55,250
Drupal core service so we just get this

00:28:53,540 --> 00:28:57,800
event is patching service and then

00:28:55,250 --> 00:29:01,010
invoke it with some special name which

00:28:57,800 --> 00:29:03,320
is a constant our event and our event

00:29:01,010 --> 00:29:05,630
object that we created above and it's

00:29:03,320 --> 00:29:08,240
basically it and then rules we'll catch

00:29:05,630 --> 00:29:09,860
this event and then look up its

00:29:08,240 --> 00:29:11,210
configuration do we have route

00:29:09,860 --> 00:29:13,580
configured for this event and then

00:29:11,210 --> 00:29:16,760
invoke it so for you as a module

00:29:13,580 --> 00:29:19,520
developers it's really simple it's you

00:29:16,760 --> 00:29:20,810
just create this event class passing all

00:29:19,520 --> 00:29:22,760
the context information that you

00:29:20,810 --> 00:29:24,620
specified in a Yammer file and then

00:29:22,760 --> 00:29:26,960
you're basically done rules will handle

00:29:24,620 --> 00:29:29,030
the execution for you it's similar as in

00:29:26,960 --> 00:29:32,360
Drupal 7 video called rules in bulk

00:29:29,030 --> 00:29:34,580
event just here you dispatch it through

00:29:32,360 --> 00:29:36,470
the the event is Patrick service so the

00:29:34,580 --> 00:29:38,000
great example at a great advantage of

00:29:36,470 --> 00:29:40,310
this interpretate is that you are

00:29:38,000 --> 00:29:42,320
throwing that event not only for rules

00:29:40,310 --> 00:29:45,740
so rules can listen to that event and

00:29:42,320 --> 00:29:47,870
invoke the rules but other also

00:29:45,740 --> 00:29:49,190
contribute yours that just implement

00:29:47,870 --> 00:29:51,440
Symphony events Symphony event

00:29:49,190 --> 00:29:53,330
subscribers can also react to that so

00:29:51,440 --> 00:29:54,800
actually this is not a real specific

00:29:53,330 --> 00:29:56,690
integration that you are doing when you

00:29:54,800 --> 00:29:58,580
are invoking Symphony event like this

00:29:56,690 --> 00:30:00,950
this is how the event system is supposed

00:29:58,580 --> 00:30:02,450
to work so when you write your Drupal 8

00:30:00,950 --> 00:30:04,160
contrib modules you should always use

00:30:02,450 --> 00:30:05,990
events because hooks are basically

00:30:04,160 --> 00:30:07,910
deprecated there might be some edge use

00:30:05,990 --> 00:30:10,640
cases where they are useful but anytime

00:30:07,910 --> 00:30:12,260
you want to ask other modules to give

00:30:10,640 --> 00:30:14,480
their input you would invoke invent and

00:30:12,260 --> 00:30:16,370
then rules automatically has integration

00:30:14,480 --> 00:30:19,280
for that you just have to specify the

00:30:16,370 --> 00:30:20,810
Yama file that it's known to roof so

00:30:19,280 --> 00:30:23,890
Fargo will tell you a little bit about

00:30:20,810 --> 00:30:23,890
context next

00:30:27,070 --> 00:30:32,870
yeah so as you have seen for conditions

00:30:30,740 --> 00:30:35,510
actions and events context this ever

00:30:32,870 --> 00:30:39,020
wear so I wanna shortly like tell you

00:30:35,510 --> 00:30:42,290
how to work with context in general so

00:30:39,020 --> 00:30:44,660
first of any define a new plug-in like a

00:30:42,290 --> 00:30:46,160
new conditioner action you really need

00:30:44,660 --> 00:30:49,280
to find also the context that the

00:30:46,160 --> 00:30:51,110
plug-in needs to work with and the way

00:30:49,280 --> 00:30:55,010
you do this as clozaril that I mentioned

00:30:51,110 --> 00:30:57,680
is Vader annotation you just have like a

00:30:55,010 --> 00:31:00,020
complex key in the annotation and there

00:30:57,680 --> 00:31:02,690
you basically fill all the information

00:31:00,020 --> 00:31:05,180
about the the context your parameters

00:31:02,690 --> 00:31:07,850
that you need so in that example it's

00:31:05,180 --> 00:31:09,950
like the entity delete action it needs

00:31:07,850 --> 00:31:12,770
the entity that should be deleted so

00:31:09,950 --> 00:31:16,040
that the entity is the needed context

00:31:12,770 --> 00:31:18,920
for the reaction to work so you

00:31:16,040 --> 00:31:21,800
basically have to provide a name for the

00:31:18,920 --> 00:31:23,690
context here so the names entity then

00:31:21,800 --> 00:31:27,080
you use the context definition players

00:31:23,690 --> 00:31:29,450
to describe the context that is needed

00:31:27,080 --> 00:31:31,610
in a little bit closer we are the most

00:31:29,450 --> 00:31:33,890
important part is actually the data type

00:31:31,610 --> 00:31:36,080
in this case is here it's also entity as

00:31:33,890 --> 00:31:38,660
shown before like there's a generic data

00:31:36,080 --> 00:31:42,470
type entity so you can specify that here

00:31:38,660 --> 00:31:44,360
so who's it knows it's a generic some

00:31:42,470 --> 00:31:47,260
kind of entity that's needed here so it

00:31:44,360 --> 00:31:49,430
will work with notes users and drawn

00:31:47,260 --> 00:31:51,500
then in addition of course there are

00:31:49,430 --> 00:31:53,420
some other keys labor and descriptions

00:31:51,500 --> 00:31:55,220
you you should specify at least but

00:31:53,420 --> 00:31:58,670
there also some additional other keys

00:31:55,220 --> 00:32:02,210
similar to as it worked in in 207 with

00:31:58,670 --> 00:32:05,410
the power meter la definition so very

00:32:02,210 --> 00:32:09,500
same concept but just in the indentation

00:32:05,410 --> 00:32:11,690
so once you and described all the needed

00:32:09,500 --> 00:32:13,430
context here for blocking the next step

00:32:11,690 --> 00:32:17,390
value of course men you need to work

00:32:13,430 --> 00:32:19,300
with the context somehow so how you use

00:32:17,390 --> 00:32:21,860
the context in the plug-in is actually

00:32:19,300 --> 00:32:24,380
some a little bit special here in that

00:32:21,860 --> 00:32:26,720
situation for actions we made it a

00:32:24,380 --> 00:32:30,650
little bit easier and that you just have

00:32:26,720 --> 00:32:32,780
to implement a method called do execute

00:32:30,650 --> 00:32:34,970
and it will automatically get all the

00:32:32,780 --> 00:32:37,370
defined context passed so as you know it

00:32:34,970 --> 00:32:39,480
from moles in Drupal 7 just in the same

00:32:37,370 --> 00:32:42,480
order as you defines the

00:32:39,480 --> 00:32:45,690
contextual parameters you'll get them to

00:32:42,480 --> 00:32:48,900
just passed so in that example we had an

00:32:45,690 --> 00:32:51,960
entity context so the same way we just

00:32:48,900 --> 00:32:54,270
puts the entity as a parameter to the do

00:32:51,960 --> 00:32:57,480
execute method will get passed to the

00:32:54,270 --> 00:33:01,080
method and that's it another example

00:32:57,480 --> 00:33:04,140
here is the fetch entity by ad action

00:33:01,080 --> 00:33:06,360
which actually not only works with some

00:33:04,140 --> 00:33:08,910
context but it also provides contact

00:33:06,360 --> 00:33:12,230
back to two wars like the entity is

00:33:08,910 --> 00:33:15,150
loaded is provided back to who so that

00:33:12,230 --> 00:33:17,310
subsequent actions can also work with

00:33:15,150 --> 00:33:20,700
that entity and the way you do that is

00:33:17,310 --> 00:33:23,580
basically that you use the set provided

00:33:20,700 --> 00:33:26,190
value method on the plug-in to just set

00:33:23,580 --> 00:33:29,490
the entity that you want to go right

00:33:26,190 --> 00:33:31,560
back similarly I like the set provided

00:33:29,490 --> 00:33:34,170
value method there's also like get

00:33:31,560 --> 00:33:36,450
context value method forgetting context

00:33:34,170 --> 00:33:39,690
if you don't wanna like use the notation

00:33:36,450 --> 00:33:42,390
here like the context that it's past

00:33:39,690 --> 00:33:45,510
here it's also available via get context

00:33:42,390 --> 00:33:47,730
value and the context name so that would

00:33:45,510 --> 00:33:53,160
be an alternative way of don't doing it

00:33:47,730 --> 00:33:56,070
as well yeah finally um passing context

00:33:53,160 --> 00:33:58,890
to the plug-in and when you like want to

00:33:56,070 --> 00:34:01,290
use a plug-in that needs context somehow

00:33:58,890 --> 00:34:03,600
the con techniques to be provided to it

00:34:01,290 --> 00:34:05,790
in the case of course it's all doing it

00:34:03,600 --> 00:34:07,410
so you don't need to take care of it but

00:34:05,790 --> 00:34:09,570
an example given when you want to test

00:34:07,410 --> 00:34:11,940
your your conditioner action plug-in you

00:34:09,570 --> 00:34:14,760
can also do that so this is an example

00:34:11,940 --> 00:34:17,070
taking all of the tests actually it just

00:34:14,760 --> 00:34:19,410
shows like when you already have instant

00:34:17,070 --> 00:34:21,780
ated your condition plug-in so it's this

00:34:19,410 --> 00:34:24,420
condition here you can just call the

00:34:21,780 --> 00:34:26,760
method get a set context value to set

00:34:24,420 --> 00:34:28,410
some context on the plugin so the first

00:34:26,760 --> 00:34:30,600
parliament there has to be the context

00:34:28,410 --> 00:34:33,120
name again and second parameter is just

00:34:30,600 --> 00:34:35,190
the value further for the context so you

00:34:33,120 --> 00:34:37,350
call that method for each of the context

00:34:35,190 --> 00:34:40,230
that's like by out by the plug-in and

00:34:37,350 --> 00:34:42,560
that's it afterwards you can execute the

00:34:40,230 --> 00:34:42,560
plugin

00:34:43,950 --> 00:34:50,609
yeah so let's if you look at

00:34:47,149 --> 00:34:53,250
configuration yes so now we have

00:34:50,609 --> 00:34:55,200
configured this nice rules with the

00:34:53,250 --> 00:34:57,630
roots module and of course we want to

00:34:55,200 --> 00:34:59,640
export them so how do we store

00:34:57,630 --> 00:35:01,109
configuration to parade of course boost

00:34:59,640 --> 00:35:03,060
the config system which writes

00:35:01,109 --> 00:35:05,369
everything to yama files which is really

00:35:03,060 --> 00:35:08,220
useful so if you remember Drupal 7 and

00:35:05,369 --> 00:35:10,470
working has invented this amazing json

00:35:08,220 --> 00:35:12,150
api with the entity api exports so

00:35:10,470 --> 00:35:13,950
basically it's the same interpolate

00:35:12,150 --> 00:35:15,869
although it's a similar similar a

00:35:13,950 --> 00:35:19,710
simpler form at the Emirates it's more

00:35:15,869 --> 00:35:23,060
flexible and easier to read and yeah we

00:35:19,710 --> 00:35:25,829
had the export it was in Drupal 7 and

00:35:23,060 --> 00:35:28,650
roots was using basically on its plugin

00:35:25,829 --> 00:35:31,109
classes and the methods to serialize

00:35:28,650 --> 00:35:33,329
this configuration button related

00:35:31,109 --> 00:35:35,430
submits more simple we just generate a

00:35:33,329 --> 00:35:38,220
dump array of output and then the

00:35:35,430 --> 00:35:40,619
configuration system will write it down

00:35:38,220 --> 00:35:43,560
to disk into llaman files for us and we

00:35:40,619 --> 00:35:46,050
also specify a schema for that so that

00:35:43,560 --> 00:35:47,550
everything is translatable in that

00:35:46,050 --> 00:35:49,050
configuration export this is all just

00:35:47,550 --> 00:35:51,089
core features that roots can leverage

00:35:49,050 --> 00:35:53,010
the same features the same yamla expert

00:35:51,089 --> 00:35:56,819
used by fuse for example by other

00:35:53,010 --> 00:36:00,240
configuration things in Drupal 8 it's

00:35:56,819 --> 00:36:02,099
called configuration entity in Drupal 8

00:36:00,240 --> 00:36:04,050
because it's similar to entities but

00:36:02,099 --> 00:36:05,730
they are not stored in the database but

00:36:04,050 --> 00:36:07,050
rather in yama files I mean they are

00:36:05,730 --> 00:36:11,660
stored in the database but they are

00:36:07,050 --> 00:36:11,660
configuration so it's bit confusing and

00:36:12,589 --> 00:36:19,010
what we have right now in Drupal 8 is we

00:36:16,260 --> 00:36:21,329
have basically two things two different

00:36:19,010 --> 00:36:23,069
config interested entities that we are

00:36:21,329 --> 00:36:25,020
storing one our reaction wall and the

00:36:23,069 --> 00:36:26,760
other our components so components are

00:36:25,020 --> 00:36:28,619
is just to stuff that you had in Drupal

00:36:26,760 --> 00:36:30,540
7 which had no event attached to it but

00:36:28,619 --> 00:36:33,300
you still can export it and reuse it for

00:36:30,540 --> 00:36:35,069
whatever purpose and reaction will of

00:36:33,300 --> 00:36:37,890
course that configuration entities that

00:36:35,069 --> 00:36:42,000
are configured to trigger in an event

00:36:37,890 --> 00:36:43,950
this fire and yeah of course you get all

00:36:42,000 --> 00:36:47,069
the nice features from from cm high that

00:36:43,950 --> 00:36:49,319
you can and write those things to disk

00:36:47,069 --> 00:36:50,760
committed to a git repository whenever

00:36:49,319 --> 00:36:52,440
you change your rule you will see that

00:36:50,760 --> 00:36:54,390
in your gift if you can commit it again

00:36:52,440 --> 00:36:55,630
it makes it really easy to deploy and

00:36:54,390 --> 00:36:58,090
then synchronize your config

00:36:55,630 --> 00:36:59,710
into your production site so you don't

00:36:58,090 --> 00:37:01,390
have to mess around with configuring

00:36:59,710 --> 00:37:03,580
rules on your production side same

00:37:01,390 --> 00:37:05,290
between in Drupal 7 and you would just

00:37:03,580 --> 00:37:06,490
configure it on your development site

00:37:05,290 --> 00:37:08,560
once you're done and you're sure that

00:37:06,490 --> 00:37:10,390
the rule works you export it and then

00:37:08,560 --> 00:37:12,130
you'd apply it to a production side it's

00:37:10,390 --> 00:37:15,250
kind of like the features module in

00:37:12,130 --> 00:37:17,050
Drupal 7 but yeah it's not hundred

00:37:15,250 --> 00:37:19,300
percent comparable but it there will be

00:37:17,050 --> 00:37:21,580
workflows in Drupal 8 that's and support

00:37:19,300 --> 00:37:23,770
this there can also be default

00:37:21,580 --> 00:37:25,660
configuration which means and when you

00:37:23,770 --> 00:37:27,670
install your module a rule is

00:37:25,660 --> 00:37:30,460
automatically created and also activated

00:37:27,670 --> 00:37:36,580
so we have basically in trooper 7 and

00:37:30,460 --> 00:37:38,680
it's even easier and replayed yeah so we

00:37:36,580 --> 00:37:42,520
had this hook which app which had

00:37:38,680 --> 00:37:44,740
contained PHP code where could use the

00:37:42,520 --> 00:37:46,360
the entity API X portables to get your

00:37:44,740 --> 00:37:48,520
rules or you could use the roots API to

00:37:46,360 --> 00:37:50,950
configure rule and then return it and

00:37:48,520 --> 00:37:53,560
what we have in intro blade as I said

00:37:50,950 --> 00:37:55,600
our days Yama files and you can easily

00:37:53,560 --> 00:37:57,280
spot them by the a by their extension

00:37:55,600 --> 00:37:59,560
its rules that reaction with the am law

00:37:57,280 --> 00:38:01,420
or rules that component or the ammo with

00:37:59,560 --> 00:38:03,940
the machine name in them so it's easy to

00:38:01,420 --> 00:38:06,820
find them you can grab for them it makes

00:38:03,940 --> 00:38:09,730
makes it really easy and this is what an

00:38:06,820 --> 00:38:12,940
exported rule looks like it's just basic

00:38:09,730 --> 00:38:15,100
Yammer so Yama doesn't have any any

00:38:12,940 --> 00:38:16,660
special tax it's just a key value system

00:38:15,100 --> 00:38:21,400
basically it can be nested with

00:38:16,660 --> 00:38:22,990
indentation or with these brackets a lot

00:38:21,400 --> 00:38:25,810
of the stuff like the labels here this

00:38:22,990 --> 00:38:27,820
is potentially translatable since this

00:38:25,810 --> 00:38:31,900
is all registers with the configuration

00:38:27,820 --> 00:38:33,220
schema and yeah if you take a look

00:38:31,900 --> 00:38:34,960
through this we also see that we have

00:38:33,220 --> 00:38:37,900
the actions in this configured rules and

00:38:34,960 --> 00:38:40,630
the condition as well what context that

00:38:37,900 --> 00:38:43,210
they have on how the message for example

00:38:40,630 --> 00:38:45,550
for this and showing a message on the

00:38:43,210 --> 00:38:47,560
site we are using just the mail of the

00:38:45,550 --> 00:38:51,700
user in this example and the user comes

00:38:47,560 --> 00:38:54,190
from the context of this context that is

00:38:51,700 --> 00:38:55,510
specified on a rule so even the

00:38:54,190 --> 00:39:00,370
configuration that we export is very

00:38:55,510 --> 00:39:01,500
readable and easy to maintain yeah back

00:39:00,370 --> 00:39:05,190
to you

00:39:01,500 --> 00:39:08,940
is that your part all right i think i do

00:39:05,190 --> 00:39:12,000
i do it right so when we reckon with

00:39:08,940 --> 00:39:13,830
config entities we just load them from

00:39:12,000 --> 00:39:17,370
the configuration storage by some

00:39:13,830 --> 00:39:19,590
machine name and out of that we generate

00:39:17,370 --> 00:39:21,690
generate the rules expression so we call

00:39:19,590 --> 00:39:23,310
this the rules expressions that are

00:39:21,690 --> 00:39:25,680
reaction rules for examples or rules

00:39:23,310 --> 00:39:29,280
components that are different kind of

00:39:25,680 --> 00:39:31,080
expressions and out of the config

00:39:29,280 --> 00:39:33,180
entities using the configuration that we

00:39:31,080 --> 00:39:35,610
have stored here the expression object

00:39:33,180 --> 00:39:38,310
gets instantiate it and then we before

00:39:35,610 --> 00:39:40,320
we executed we set the context in this

00:39:38,310 --> 00:39:42,600
case its example it's important that

00:39:40,320 --> 00:39:44,280
this rule receives a user object as we

00:39:42,600 --> 00:39:46,140
saw we want to show something on the

00:39:44,280 --> 00:39:48,480
side so we need this context voice rule

00:39:46,140 --> 00:39:50,220
to work and then we just execute it and

00:39:48,480 --> 00:39:52,500
it's basically all the API you need

00:39:50,220 --> 00:39:54,390
whenever you want to execute custom

00:39:52,500 --> 00:39:55,980
rules in your module whatever you are

00:39:54,390 --> 00:39:57,990
doing like drupal commerce is a

00:39:55,980 --> 00:40:00,030
potential candidate for executing rules

00:39:57,990 --> 00:40:05,160
like this they will use a pattern like

00:40:00,030 --> 00:40:09,450
this so back to yourself for you I

00:40:05,160 --> 00:40:11,160
topics yes so on the previous

00:40:09,450 --> 00:40:14,220
presentations we always said there's no

00:40:11,160 --> 00:40:17,340
UI yet now we can say there are some

00:40:14,220 --> 00:40:21,720
steps for the UI already so what really

00:40:17,340 --> 00:40:23,180
got me excited was a pull request that

00:40:21,720 --> 00:40:26,820
Klaus you created where you can already

00:40:23,180 --> 00:40:28,710
create an action and start creating a

00:40:26,820 --> 00:40:30,360
condition and it would already expose

00:40:28,710 --> 00:40:33,420
all the conditions that are there and

00:40:30,360 --> 00:40:35,130
the list is quite big because based on

00:40:33,420 --> 00:40:38,400
the derivatives concept that we have

00:40:35,130 --> 00:40:40,650
mentioned you get actions for creating

00:40:38,400 --> 00:40:44,130
all the different entity types updating

00:40:40,650 --> 00:40:45,900
them deleting them and so forth so we

00:40:44,130 --> 00:40:47,790
can actually see the fruits of all the

00:40:45,900 --> 00:40:51,300
contribution worked that we have

00:40:47,790 --> 00:40:54,540
received so far which is cool there is a

00:40:51,300 --> 00:40:58,200
meta issue where we basically split down

00:40:54,540 --> 00:41:00,060
the work that has to be made but so far

00:40:58,200 --> 00:41:03,660
there's not much available besides

00:41:00,060 --> 00:41:06,450
listing a list of rules components and

00:41:03,660 --> 00:41:08,640
creating stops for them but you cannot

00:41:06,450 --> 00:41:12,530
really edit you cannot really create

00:41:08,640 --> 00:41:16,080
actions conditions within them at the mo

00:41:12,530 --> 00:41:18,890
but that can change really quickly if we

00:41:16,080 --> 00:41:22,320
get your help or if we get more funding

00:41:18,890 --> 00:41:24,900
would be awesome to make progress now

00:41:22,320 --> 00:41:27,810
with the UI as all their underlying ap

00:41:24,900 --> 00:41:33,180
Isis you have seen are already maturing

00:41:27,810 --> 00:41:35,910
pretty far yes so what qualifies as

00:41:33,180 --> 00:41:38,460
contribution as we are here at this

00:41:35,910 --> 00:41:42,390
conference together talking about open

00:41:38,460 --> 00:41:44,700
source about Drupal specifically I kind

00:41:42,390 --> 00:41:46,890
of felt like it's it's interesting to

00:41:44,700 --> 00:41:49,530
see all the different ways that we can

00:41:46,890 --> 00:41:51,660
collaborate it's not just about being a

00:41:49,530 --> 00:41:53,180
developer being a coder which is

00:41:51,660 --> 00:41:56,100
definitely appreciated if you have

00:41:53,180 --> 00:41:58,380
continuous resources that you want to

00:41:56,100 --> 00:42:02,010
invest for example in helping us out

00:41:58,380 --> 00:42:04,770
with the rules module development is

00:42:02,010 --> 00:42:07,140
definitely highly appreciated but it's

00:42:04,770 --> 00:42:11,640
also super easy to just convince your

00:42:07,140 --> 00:42:14,370
boss or any anybody else donate money to

00:42:11,640 --> 00:42:17,700
the initiative it's definitely invested

00:42:14,370 --> 00:42:21,660
in in a good way in a reusable way we

00:42:17,700 --> 00:42:23,850
try to to really do a good job with with

00:42:21,660 --> 00:42:25,320
the initiative there's a lot of other

00:42:23,850 --> 00:42:27,450
ways you can help out writing

00:42:25,320 --> 00:42:30,720
documentation Steve / Chris wrote a lot

00:42:27,450 --> 00:42:33,060
of documentation and foobie so there's

00:42:30,720 --> 00:42:35,250
already some rules documentation

00:42:33,060 --> 00:42:37,800
available for developers but along the

00:42:35,250 --> 00:42:41,160
way we'll need more help there and in

00:42:37,800 --> 00:42:45,660
general promoting the initiative there

00:42:41,160 --> 00:42:48,300
yeah that that can all help for us the

00:42:45,660 --> 00:42:49,890
main focus now is getting more funding

00:42:48,300 --> 00:42:52,260
so that we can free up more resources

00:42:49,890 --> 00:42:54,390
from the main developers because rules

00:42:52,260 --> 00:42:58,560
is a really complex topic and we kind of

00:42:54,390 --> 00:43:01,290
just outsource all of the hard problems

00:42:58,560 --> 00:43:03,540
because Fargo and Klaus we have years of

00:43:01,290 --> 00:43:05,790
experience and we kind of kind of kind

00:43:03,540 --> 00:43:09,510
of makes most sense to efficiently let

00:43:05,790 --> 00:43:13,860
them work on it so yeah getting the

00:43:09,510 --> 00:43:16,590
funding up to speed again is the main

00:43:13,860 --> 00:43:19,200
focus point and then are sprinting

00:43:16,590 --> 00:43:21,180
because there's so many of you who might

00:43:19,200 --> 00:43:23,610
be willing to play around with the code

00:43:21,180 --> 00:43:25,720
to get a bit of a feel of the api's to

00:43:23,610 --> 00:43:31,359
maybe call Portillo contributed

00:43:25,720 --> 00:43:35,109
Jules so tomorrow we'll have a buff

00:43:31,359 --> 00:43:36,940
around lunch where we basically give an

00:43:35,109 --> 00:43:38,859
introduction on a more personal level I

00:43:36,940 --> 00:43:42,220
can help where we can also have more of

00:43:38,859 --> 00:43:43,990
a discussion on how the next steps on

00:43:42,220 --> 00:43:47,500
the roadmap look like how you can help

00:43:43,990 --> 00:43:49,840
us or how what you can expect from the

00:43:47,500 --> 00:43:51,760
initiative over the next month so

00:43:49,840 --> 00:43:53,830
definitely come to the ball at

00:43:51,760 --> 00:43:59,430
eleven-forty-five tomorrow wednesday

00:43:53,830 --> 00:44:02,140
room 129 and on Fridays are in the whole

00:43:59,430 --> 00:44:04,060
contribution springs will have at least

00:44:02,140 --> 00:44:06,280
one rules table where we can all sit

00:44:04,060 --> 00:44:09,430
together and work on tickets there's

00:44:06,280 --> 00:44:11,980
there's contributed tasks from very easy

00:44:09,430 --> 00:44:14,160
to very advanced for example buoyancy

00:44:11,980 --> 00:44:17,020
Ivanovic wrote the derivative tests

00:44:14,160 --> 00:44:19,869
doing a conference which were pretty

00:44:17,020 --> 00:44:22,950
advanced people have already started

00:44:19,869 --> 00:44:25,450
writing integrations for the flag module

00:44:22,950 --> 00:44:28,840
people have written a lot of small

00:44:25,450 --> 00:44:33,790
actions condition plugins some people

00:44:28,840 --> 00:44:37,170
have already started working on a yawn

00:44:33,790 --> 00:44:40,119
like logger logging system integrations

00:44:37,170 --> 00:44:41,530
there's a lot of nice ideas and we

00:44:40,119 --> 00:44:45,580
definitely appreciate all of the

00:44:41,530 --> 00:44:47,950
contributions so yeah Friday is a good

00:44:45,580 --> 00:44:50,230
day to sprint with us on the d8 rules

00:44:47,950 --> 00:44:53,430
website you can also see some learning

00:44:50,230 --> 00:44:56,290
resources presentation videos and

00:44:53,430 --> 00:44:58,660
there's a link to find contributor tasks

00:44:56,290 --> 00:45:01,270
as mentioned there's tasks for beginners

00:44:58,660 --> 00:45:05,859
there's tasks for advanced people so

00:45:01,270 --> 00:45:08,380
definitely check that out and without we

00:45:05,859 --> 00:45:10,800
happy to take your questions and thank

00:45:08,380 --> 00:45:10,800
you very much

00:45:16,400 --> 00:45:20,700
so if you have any questions there's a

00:45:18,780 --> 00:45:24,590
microphone on the side I don't think at

00:45:20,700 --> 00:45:24,590
that side so that it's in the recording

00:45:31,030 --> 00:45:34,980
or we can just repeat the question

00:45:39,200 --> 00:45:43,480
anyone porting a module at the moment

00:45:43,990 --> 00:45:48,040
does it have rules integration

00:45:51,710 --> 00:45:54,550
hmm

00:45:59,180 --> 00:46:02,470
ok sir

00:46:17,880 --> 00:46:23,740
so first of the the question is what

00:46:21,640 --> 00:46:25,630
about the debugging like in dupo 7 it's

00:46:23,740 --> 00:46:28,900
quite cumbersome the debug tools and

00:46:25,630 --> 00:46:32,290
it's the any solution to this and so the

00:46:28,900 --> 00:46:34,660
other is that they're like isn't know

00:46:32,290 --> 00:46:37,540
like planning that we like directly

00:46:34,660 --> 00:46:40,900
improve the debugging capabilities of

00:46:37,540 --> 00:46:44,320
fools but actually we there has already

00:46:40,900 --> 00:46:47,830
been work to to integrate like wolves

00:46:44,320 --> 00:46:53,170
with the new suit symphony how's it

00:46:47,830 --> 00:46:55,060
called the debugger console that web web

00:46:53,170 --> 00:46:56,950
profile I out there like with web

00:46:55,060 --> 00:46:59,230
profile also integrated fits so we will

00:46:56,950 --> 00:47:01,390
at least make sure that like order the

00:46:59,230 --> 00:47:03,450
profiling information everything and the

00:47:01,390 --> 00:47:06,970
host debugging will integrate of that

00:47:03,450 --> 00:47:10,200
but on top of that what we would like to

00:47:06,970 --> 00:47:14,890
experiment with its really like 22 white

00:47:10,200 --> 00:47:18,160
walls down as speech p files but what I

00:47:14,890 --> 00:47:20,530
think would be the best way to also ease

00:47:18,160 --> 00:47:24,430
debugging so basically the idea is that

00:47:20,530 --> 00:47:26,950
you configure your Yahoo's as regular

00:47:24,430 --> 00:47:29,290
but like just for also increasing

00:47:26,950 --> 00:47:30,970
performance like when you till they're

00:47:29,290 --> 00:47:33,610
also done they are written to this as a

00:47:30,970 --> 00:47:36,310
regular PHP file and then you could use

00:47:33,610 --> 00:47:38,410
like a p debugger also to to debug

00:47:36,310 --> 00:47:42,210
tables but what I think would be the

00:47:38,410 --> 00:47:42,210
best developing experience

00:47:45,880 --> 00:47:54,520
okay any any further questions otherwise

00:47:52,630 --> 00:47:56,470
you can also ask tomorrow at the above I

00:47:54,520 --> 00:48:01,000
think it's at twelve to another room I

00:47:56,470 --> 00:48:03,220
think we had the room in it yeah you can

00:48:01,000 --> 00:48:08,010
find the room number on our website um

00:48:03,220 --> 00:48:08,010

YouTube URL: https://www.youtube.com/watch?v=QcU_LCAHNLg


