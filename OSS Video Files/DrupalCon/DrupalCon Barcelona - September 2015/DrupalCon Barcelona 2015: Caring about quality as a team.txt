Title: DrupalCon Barcelona 2015: Caring about quality as a team
Publication date: 2015-09-22
Playlist: DrupalCon Barcelona - September 2015
Description: 
	Quality on the code we do, the processes we have and the relationships we create in our teams are key aspects of how we deliver projects and how we sleep at night.

Of course I don’t look busy, I did it right the first time

There are many ramifications when we describe quality in the software development world, in this talk, we will discuss about code reviews, testing, team management and deployment from both a theoretical perspective but also describing tools and methodologies for achieving a happier project outcome.

In the first part of the session, we will talk about some history of testing, why we do what we do and how can we approach it better. We’ll have a look to other industries and contexts to see how they ensure and enforce quality and by their example, we can get a sense of how it could be beneficial to include such techniques and mindsets in our day to day.

The second bit will propose specific solutions, tools and tips to apply these concepts in a practical way, starting by code reviews.

Code reviews are a very important process in the software development cycle. We will start with a brief example on how is a typical code review from the moment the code is submitted until is finally merged.

Then we will follow outlining why it is a key component of successful teams. For that we consider the costs of implementing it compared to the positive outcome we might get from it, such as better understanding of the project, tools to minimize errors in the future or better development and learning experience for all the members of the team.

We’ll move then to how to approach testing and deployments from a team perspective, what should be the final goal of testing a project and what are the tools available out there that could help us on our purposes.

We will say some of the following words in our talk:

Patches
Pull requests
Gerrit
Unicorns
Redmine / Jira / Name it
Behat
Ponies
Jenkins
Phing / Capistrano / Name it
Captions: 
	00:00:00,260 --> 00:00:10,920
okay again it is great it's our same I'm

00:00:07,770 --> 00:00:14,240
totally later I work here in my salon

00:00:10,920 --> 00:00:17,670
i'm from madrid i work at Umbra and

00:00:14,240 --> 00:00:22,740
sometimes I contribute to Drupal

00:00:17,670 --> 00:00:25,740
multilingual hi everyone i'm i'm pedro

00:00:22,740 --> 00:00:28,230
and i'm a drupal freelance i used to

00:00:25,740 --> 00:00:32,099
work here barcelona in norwalk in london

00:00:28,230 --> 00:00:38,790
and I've been in Drupal for for a long

00:00:32,099 --> 00:00:41,160
time so so what do we mean with with

00:00:38,790 --> 00:00:46,320
quality because that could be a very

00:00:41,160 --> 00:00:49,530
strange or very broad concept we are

00:00:46,320 --> 00:00:52,500
going to talk in this in this session

00:00:49,530 --> 00:00:55,110
about how how can you get better

00:00:52,500 --> 00:00:57,719
communication in inside your team how

00:00:55,110 --> 00:01:01,260
can how can you get an increase on

00:00:57,719 --> 00:01:04,559
transparency in both code and processes

00:01:01,260 --> 00:01:09,170
and that will result in a better

00:01:04,559 --> 00:01:13,799
ownership of the of the code base and

00:01:09,170 --> 00:01:16,710
how can processes and the deadlines can

00:01:13,799 --> 00:01:21,860
be can be solid and meaningful instead

00:01:16,710 --> 00:01:21,860
of being a date set by someone else and

00:01:22,220 --> 00:01:27,750
this one is a very very challenging one

00:01:25,920 --> 00:01:31,229
not making the same mistake twice we

00:01:27,750 --> 00:01:33,240
will talk about that and and that this

00:01:31,229 --> 00:01:36,270
is an eighty-percent that you than

00:01:33,240 --> 00:01:39,450
20-percent toolbox and we are going to

00:01:36,270 --> 00:01:43,070
show tools here but those are just for a

00:01:39,450 --> 00:01:47,549
framework or demonstration purposes and

00:01:43,070 --> 00:01:50,460
the main goal is how to get you peace of

00:01:47,549 --> 00:01:52,409
mind on your development processes but

00:01:50,460 --> 00:01:55,290
we know that this is kind of a nearby

00:01:52,409 --> 00:01:59,610
nothing but the closer you can get the

00:01:55,290 --> 00:02:02,759
best right and we split this this talk

00:01:59,610 --> 00:02:04,860
in three three parts we're going to talk

00:02:02,759 --> 00:02:07,170
about puri oh we could you talk about

00:02:04,860 --> 00:02:10,259
how to make processes that increase

00:02:07,170 --> 00:02:14,670
communication team we're going to talk

00:02:10,259 --> 00:02:22,050
about testing very very

00:02:14,670 --> 00:02:25,000
you know passing it a in a very overview

00:02:22,050 --> 00:02:27,099
mode and we are going to talk a bit

00:02:25,000 --> 00:02:31,120
about deployment some things how can you

00:02:27,099 --> 00:02:36,069
sleep at night and the first part is a

00:02:31,120 --> 00:02:38,530
color beauty well the first thing that I

00:02:36,069 --> 00:02:40,720
wanted to ask you how many of you

00:02:38,530 --> 00:02:45,640
considered you do code review inside

00:02:40,720 --> 00:02:50,049
your team ok that's as good that's great

00:02:45,640 --> 00:02:52,480
so I'm here because it really changed my

00:02:50,049 --> 00:02:55,239
life as a developer and I want to talk

00:02:52,480 --> 00:02:58,180
about it and I think for those of you

00:02:55,239 --> 00:03:00,250
who don't do who doesn't consider that

00:02:58,180 --> 00:03:02,379
that's God reviewing our peer review

00:03:00,250 --> 00:03:07,390
inside your team I think it will happen

00:03:02,379 --> 00:03:10,540
eventually so why I'm not going to

00:03:07,390 --> 00:03:13,690
criticize you about amongst one of you

00:03:10,540 --> 00:03:15,400
who does code review everyone does code

00:03:13,690 --> 00:03:18,790
review the way they like it at the way

00:03:15,400 --> 00:03:22,540
they are comfortable with and we'll be

00:03:18,790 --> 00:03:25,209
finding like called bad code in the

00:03:22,540 --> 00:03:28,750
while so I think there's not enough code

00:03:25,209 --> 00:03:31,720
review being performed so and it's a

00:03:28,750 --> 00:03:33,760
process that improves quality but

00:03:31,720 --> 00:03:39,519
reducing defects everyone it's on the

00:03:33,760 --> 00:03:42,040
code so spread scout ownership and it

00:03:39,519 --> 00:03:45,130
helps new people on board on their team

00:03:42,040 --> 00:03:47,590
because they get a new sense of the code

00:03:45,130 --> 00:03:52,030
and it's a learning experience for for

00:03:47,590 --> 00:03:54,430
everyone on the team and he helps you

00:03:52,030 --> 00:03:58,590
spending time the moment you have it

00:03:54,430 --> 00:04:01,989
because you solve the problems before

00:03:58,590 --> 00:04:03,940
then when there is a team breaking in

00:04:01,989 --> 00:04:10,329
production then when you don't have the

00:04:03,940 --> 00:04:12,819
time and things my break so can reach

00:04:10,329 --> 00:04:18,370
this sad because nobody does code review

00:04:12,819 --> 00:04:21,010
and low prices that you heard in a while

00:04:18,370 --> 00:04:23,830
is like my code is a perfect snowflake

00:04:21,010 --> 00:04:26,379
so we are programmers

00:04:23,830 --> 00:04:29,169
and we should be able not just coding

00:04:26,379 --> 00:04:31,150
but to communicate the changes that we

00:04:29,169 --> 00:04:34,270
made to the project and things about

00:04:31,150 --> 00:04:37,389
things and there might be ego involved

00:04:34,270 --> 00:04:39,280
in it so we are going to show you how to

00:04:37,389 --> 00:04:42,969
get the eagle out of the other of the

00:04:39,280 --> 00:04:46,120
problem and well if you say I'm too busy

00:04:42,969 --> 00:04:49,000
to do code review and maybe you need to

00:04:46,120 --> 00:04:51,310
convince yourself first about code

00:04:49,000 --> 00:04:53,939
quality like how it's important how it's

00:04:51,310 --> 00:04:57,479
important to have code standards and

00:04:53,939 --> 00:05:00,729
some say the co reviews loves processes

00:04:57,479 --> 00:05:07,090
but as i was telling you fixing a back

00:05:00,729 --> 00:05:08,949
during production is much more expensive

00:05:07,090 --> 00:05:11,319
that doing it during the code review

00:05:08,949 --> 00:05:13,960
process and if you're worried about the

00:05:11,319 --> 00:05:16,900
iba there is a bunch of tools that help

00:05:13,960 --> 00:05:19,479
you to do that and you should be

00:05:16,900 --> 00:05:22,750
prepared some stuff that must be done

00:05:19,479 --> 00:05:26,710
before like for example try to make

00:05:22,750 --> 00:05:28,240
everything code like not only your logic

00:05:26,710 --> 00:05:31,659
of your application but the way you

00:05:28,240 --> 00:05:37,060
deploy the boilerplate code you use for

00:05:31,659 --> 00:05:40,300
that and you name it i mean and try to

00:05:37,060 --> 00:05:42,819
review everything not only the logic in

00:05:40,300 --> 00:05:46,719
it the configuration the findings if you

00:05:42,819 --> 00:05:48,909
use third-party code you're not going to

00:05:46,719 --> 00:05:50,889
review all the code but maybe you review

00:05:48,909 --> 00:05:53,529
the likes that it has on github the

00:05:50,889 --> 00:05:55,750
stars or if it's a parts on drupal.org

00:05:53,529 --> 00:05:59,469
try to review that patch if it's small

00:05:55,750 --> 00:06:01,930
and if you can be dipped it can be

00:05:59,469 --> 00:06:04,479
reviewed and maybe you're interested in

00:06:01,930 --> 00:06:09,509
different images there is tools for that

00:06:04,479 --> 00:06:12,550
and if your project requires do it and

00:06:09,509 --> 00:06:16,779
there is challenges for example if you

00:06:12,550 --> 00:06:19,060
use sass to generate your CSS do don't

00:06:16,779 --> 00:06:22,150
want to review the CSS you just do want

00:06:19,060 --> 00:06:25,210
to review the Desai's and if you include

00:06:22,150 --> 00:06:28,690
the CSS in the repo that might set a

00:06:25,210 --> 00:06:32,289
challenge you know so it's going to be

00:06:28,690 --> 00:06:34,990
changed but it's going to be fun

00:06:32,289 --> 00:06:37,210
so finally the code is going to be read

00:06:34,990 --> 00:06:39,939
by someone that comment that I'm writing

00:06:37,210 --> 00:06:42,669
I'm not writing for my future self like

00:06:39,939 --> 00:06:46,619
you sometimes we say I'm writing it for

00:06:42,669 --> 00:06:49,990
the whole team and sometimes I heard oh

00:06:46,619 --> 00:06:51,520
can you have a look at my chains but if

00:06:49,990 --> 00:06:55,449
you don't have a process established

00:06:51,520 --> 00:06:57,610
that never happens actually so-called

00:06:55,449 --> 00:07:02,439
activity is visible because it's what we

00:06:57,610 --> 00:07:04,930
do day to day guys is is every comment

00:07:02,439 --> 00:07:08,469
it's everything every member of the team

00:07:04,930 --> 00:07:10,180
can see it and introduce iteration in

00:07:08,469 --> 00:07:13,479
improvements what I'm trying to say with

00:07:10,180 --> 00:07:17,589
this is that code review encourages to

00:07:13,479 --> 00:07:19,180
make smaller changes so the changes you

00:07:17,589 --> 00:07:22,379
introduced in the application are

00:07:19,180 --> 00:07:25,209
smaller and it can be iterated and

00:07:22,379 --> 00:07:26,800
supports conversations because we are

00:07:25,209 --> 00:07:31,209
going to introduce you to some tools

00:07:26,800 --> 00:07:33,219
that are going to be the where you have

00:07:31,209 --> 00:07:36,309
the conversations about code and that's

00:07:33,219 --> 00:07:40,569
great to be able to talk about the code

00:07:36,309 --> 00:07:44,019
and the code ownership is very important

00:07:40,569 --> 00:07:46,089
like no one is to blame land not one

00:07:44,019 --> 00:07:47,830
person but if there is a problem we are

00:07:46,089 --> 00:07:51,360
a team at the end of the day and we are

00:07:47,830 --> 00:07:54,279
going to solve it together and whoa

00:07:51,360 --> 00:07:57,729
that's the thing we are not individuals

00:07:54,279 --> 00:08:01,389
we're a team let's let's face it

00:07:57,729 --> 00:08:03,339
together and for new comers in the team

00:08:01,389 --> 00:08:06,069
it's great I cannot emphasize enough how

00:08:03,339 --> 00:08:10,509
good is code review for this or peer

00:08:06,069 --> 00:08:13,419
review and I'm blood regan I'm going to

00:08:10,509 --> 00:08:15,939
tell you my story when code review was

00:08:13,419 --> 00:08:18,249
introduced in my team I was a bit fresh

00:08:15,939 --> 00:08:20,729
and i was grumpy when someone was

00:08:18,249 --> 00:08:24,430
telling me like no do it this way

00:08:20,729 --> 00:08:26,529
bodyworks bad eyes but i was learning i

00:08:24,430 --> 00:08:30,550
started to love it and that's that's a

00:08:26,529 --> 00:08:32,709
great experience and when they when a

00:08:30,550 --> 00:08:34,870
new members introducing the team they

00:08:32,709 --> 00:08:37,899
come to do code and they want to get

00:08:34,870 --> 00:08:41,789
cold committed but this process makes

00:08:37,899 --> 00:08:44,860
them think about code you know and

00:08:41,789 --> 00:08:46,040
because they need the feedback actually

00:08:44,860 --> 00:08:48,720
to get their change

00:08:46,040 --> 00:08:51,240
that gets them into the process of

00:08:48,720 --> 00:08:54,840
getting feedback you feedback and that's

00:08:51,240 --> 00:08:57,540
I think it's very healthy and please

00:08:54,840 --> 00:09:00,060
leave your ego at the door I mean if you

00:08:57,540 --> 00:09:02,760
identify some problems between members

00:09:00,060 --> 00:09:06,900
of your team called review might help

00:09:02,760 --> 00:09:09,240
you talk about this problem and yeah

00:09:06,900 --> 00:09:12,210
makes incremental changes easier like

00:09:09,240 --> 00:09:14,910
you have bigger changes to review

00:09:12,210 --> 00:09:19,230
smaller changes and the smaller changes

00:09:14,910 --> 00:09:26,490
are what you're looking for so everyone

00:09:19,230 --> 00:09:28,770
in the team has a voice yeah oh we have

00:09:26,490 --> 00:09:31,950
this even even then divide the bad guys

00:09:28,770 --> 00:09:33,980
in the team hug voice and there's this

00:09:31,950 --> 00:09:37,260
thing in maybe you have heard about it

00:09:33,980 --> 00:09:40,350
the unknown and online in the air

00:09:37,260 --> 00:09:43,620
pollution fabrics the factories is that

00:09:40,350 --> 00:09:47,730
says there there's a string that anyone

00:09:43,620 --> 00:09:49,710
in team come to know pool and they will

00:09:47,730 --> 00:09:53,160
stop the production if there's a quality

00:09:49,710 --> 00:09:55,800
fault I'm not suggesting that you

00:09:53,160 --> 00:10:00,300
install strange all over your offices

00:09:55,800 --> 00:10:01,890
like it was a bus or something but it is

00:10:00,300 --> 00:10:04,590
very good that everyone in the team

00:10:01,890 --> 00:10:08,520
feels that they have a voice they can

00:10:04,590 --> 00:10:10,530
say hey this may not be the best idea I

00:10:08,520 --> 00:10:12,870
have a better suggest you know how this

00:10:10,530 --> 00:10:15,900
is a this this should be done in another

00:10:12,870 --> 00:10:18,090
way so it is not a way of maybe they are

00:10:15,900 --> 00:10:19,950
not right maybe they are they are plain

00:10:18,090 --> 00:10:22,220
wrong and that's that's that's fine as

00:10:19,950 --> 00:10:27,300
well but everyone needs to feel like

00:10:22,220 --> 00:10:31,980
they can do it like there is no it is

00:10:27,300 --> 00:10:36,080
encouraged to to to propose changes and

00:10:31,980 --> 00:10:40,380
proposed changes in the in the process

00:10:36,080 --> 00:10:42,930
so everything that I'm saying about call

00:10:40,380 --> 00:10:45,180
review like Pedro set can be applied to

00:10:42,930 --> 00:10:48,210
processes review like why are we doing

00:10:45,180 --> 00:10:51,840
all the steps off to get started please

00:10:48,210 --> 00:10:53,760
go slow maybe you can start with just

00:10:51,840 --> 00:10:57,570
one team just won triple just one

00:10:53,760 --> 00:10:59,370
project and this is just the just the

00:10:57,570 --> 00:11:01,640
deeps like we do when you

00:10:59,370 --> 00:11:04,890
we submit patches to droop of the dark

00:11:01,640 --> 00:11:07,890
doesn't change stuff that is that is

00:11:04,890 --> 00:11:11,610
around the parts but you focus on the

00:11:07,890 --> 00:11:14,550
problem maybe and you just want to

00:11:11,610 --> 00:11:17,820
review the discovery smelly parts

00:11:14,550 --> 00:11:20,580
because we all know what parts are those

00:11:17,820 --> 00:11:23,460
and we want to make them better refactor

00:11:20,580 --> 00:11:26,790
things like that and maybe you want to

00:11:23,460 --> 00:11:29,370
do code review on demand but make a

00:11:26,790 --> 00:11:33,860
process like open a ticket or something

00:11:29,370 --> 00:11:36,360
maybe you can use a post review tool and

00:11:33,860 --> 00:11:39,330
I mean everything felt review bingo

00:11:36,360 --> 00:11:42,029
there is like one very old button in

00:11:39,330 --> 00:11:44,310
Drupal the dork that you can go to it an

00:11:42,029 --> 00:11:48,750
issue that needs review and maybe you

00:11:44,310 --> 00:11:50,760
can try that in your team so and one

00:11:48,750 --> 00:11:52,920
thing very important that should

00:11:50,760 --> 00:11:55,130
emphasize that everyone on the team like

00:11:52,920 --> 00:11:58,589
in the end all lines will review and get

00:11:55,130 --> 00:12:01,710
reviews because sometimes you see the

00:11:58,589 --> 00:12:05,370
the role of the reviewer and I don't

00:12:01,710 --> 00:12:07,950
like that all at all so as i said as i

00:12:05,370 --> 00:12:10,140
was saying we have two kinds of tool the

00:12:07,950 --> 00:12:13,380
pre comet tool that is the most

00:12:10,140 --> 00:12:16,050
interesting is what most people most

00:12:13,380 --> 00:12:19,170
tools ooh and it works like a firewall

00:12:16,050 --> 00:12:21,089
for your code and doesn't get the

00:12:19,170 --> 00:12:23,310
changes until they are ok and all the

00:12:21,089 --> 00:12:24,990
team agrees on them and it's a great

00:12:23,310 --> 00:12:27,690
moment to change the architecture of

00:12:24,990 --> 00:12:29,670
your application if you have decided on

00:12:27,690 --> 00:12:32,100
something it's not written in stone you

00:12:29,670 --> 00:12:35,940
can change it and there is also post

00:12:32,100 --> 00:12:38,279
Commodore audits like you can with the

00:12:35,940 --> 00:12:40,620
code that already exists you can propose

00:12:38,279 --> 00:12:47,279
changes to it and might be interesting

00:12:40,620 --> 00:12:50,190
for you so automate stuff and machines

00:12:47,279 --> 00:12:53,040
can also do some kind of code review

00:12:50,190 --> 00:12:57,060
they can talk about coding standards

00:12:53,040 --> 00:12:59,400
maybe there's they are mean the machine

00:12:57,060 --> 00:13:00,900
is don't say please can you review this

00:12:59,400 --> 00:13:04,740
part of the code there is a comma

00:13:00,900 --> 00:13:07,320
missing here they just tell it to you so

00:13:04,740 --> 00:13:09,360
we as humans avoid those kind of

00:13:07,320 --> 00:13:12,810
comments that maybe make a sound

00:13:09,360 --> 00:13:13,880
pedantic so they run tests that's great

00:13:12,810 --> 00:13:16,950
if you

00:13:13,880 --> 00:13:19,890
des'ree own development workflow they

00:13:16,950 --> 00:13:22,800
can make continuous integration there is

00:13:19,890 --> 00:13:25,110
a lot of tools that and they take

00:13:22,800 --> 00:13:29,000
complexity in your code duplicate code

00:13:25,110 --> 00:13:32,730
maybe test covers things like that and

00:13:29,000 --> 00:13:35,340
for as I was saying for new comers for

00:13:32,730 --> 00:13:38,280
new members of your team maybe they find

00:13:35,340 --> 00:13:41,310
it difficult when they find these tools

00:13:38,280 --> 00:13:43,830
at the beginning but if you explain them

00:13:41,310 --> 00:13:48,600
the niceties of coding standards they

00:13:43,830 --> 00:13:52,500
will be convinced about it but hey we

00:13:48,600 --> 00:13:55,440
are people and and my sins are not going

00:13:52,500 --> 00:13:57,570
to replace it replaces yet so we can do

00:13:55,440 --> 00:14:00,750
a lot of stuff we can review

00:13:57,570 --> 00:14:02,640
requirements that needs the application

00:14:00,750 --> 00:14:05,550
once we see the code we have them

00:14:02,640 --> 00:14:09,150
available the architecture if the code

00:14:05,550 --> 00:14:11,910
been submitted fits the architecture

00:14:09,150 --> 00:14:15,210
that we agreed on and can make the code

00:14:11,910 --> 00:14:18,360
future proof because roopa late and HP

00:14:15,210 --> 00:14:21,660
seven are around the corner and we can

00:14:18,360 --> 00:14:24,510
write call it code now that fits those

00:14:21,660 --> 00:14:27,780
requirements and maybe not team we have

00:14:24,510 --> 00:14:30,270
codeine idioms the way we retrieve a

00:14:27,780 --> 00:14:33,720
note and maybe we'll wrap it with entity

00:14:30,270 --> 00:14:35,550
API oh maybe we don't and does things

00:14:33,720 --> 00:14:40,080
that kind of things would be agreeing on

00:14:35,550 --> 00:14:42,540
the TI agreed on the team and for the

00:14:40,080 --> 00:14:45,030
code reviews the members of the team

00:14:42,540 --> 00:14:49,650
know which functions exist maybe they

00:14:45,030 --> 00:14:52,320
can be reused and again it spreads the

00:14:49,650 --> 00:14:55,800
knowledge amongst all the members of the

00:14:52,320 --> 00:14:58,230
team and guys review happens in other

00:14:55,800 --> 00:15:02,370
professions like journalism why is not

00:14:58,230 --> 00:15:05,700
happening in in development in software

00:15:02,370 --> 00:15:08,220
development so what happens if you don't

00:15:05,700 --> 00:15:10,140
do code review you look at the fire and

00:15:08,220 --> 00:15:13,380
you write you continue to write your

00:15:10,140 --> 00:15:16,110
email it's not a cautionary tale is

00:15:13,380 --> 00:15:21,630
things that you might identify in your

00:15:16,110 --> 00:15:24,330
team and they might get better so this

00:15:21,630 --> 00:15:26,819
happens a lot code and upstream very

00:15:24,330 --> 00:15:30,749
personal there is that part

00:15:26,819 --> 00:15:34,369
that guy knows about and all the things

00:15:30,749 --> 00:15:38,129
to be aware of that and we get a lot of

00:15:34,369 --> 00:15:42,169
monster code around all the scary there

00:15:38,129 --> 00:15:45,929
is no bigger picture of the project and

00:15:42,169 --> 00:15:49,069
you get code that it's very obscure very

00:15:45,929 --> 00:15:52,410
dark because no one looks at it a

00:15:49,069 --> 00:15:56,069
technical dead get it gets ignore things

00:15:52,410 --> 00:15:58,499
like that and maybe you have external

00:15:56,069 --> 00:16:03,389
contractors you can get them also into

00:15:58,499 --> 00:16:05,100
your review process so your code to get

00:16:03,389 --> 00:16:09,229
more ownership of the code things like

00:16:05,100 --> 00:16:11,129
that and fiddle called review and

00:16:09,229 --> 00:16:12,929
members of the team finds it hard to

00:16:11,129 --> 00:16:15,209
improve school skills in the code

00:16:12,929 --> 00:16:17,419
writing craft because maybe we work with

00:16:15,209 --> 00:16:20,879
we consider that we working with very

00:16:17,419 --> 00:16:23,939
intelligent people very bright but we

00:16:20,879 --> 00:16:26,129
are not getting anything really from

00:16:23,939 --> 00:16:28,439
them because we don't look at their code

00:16:26,129 --> 00:16:33,709
we are very busy and this is a very

00:16:28,439 --> 00:16:36,359
little learning experience so for tools

00:16:33,709 --> 00:16:38,609
we are going to help you well we're

00:16:36,359 --> 00:16:41,639
going to give you some examples what I'm

00:16:38,609 --> 00:16:45,149
currently using I know there is other

00:16:41,639 --> 00:16:53,699
tools but let's see some some technical

00:16:45,149 --> 00:16:57,299
size of it so mostly they service as a

00:16:53,699 --> 00:16:58,979
workflow a notification management when

00:16:57,299 --> 00:17:03,059
to do code review went to marriage

00:16:58,979 --> 00:17:06,720
things like that and then you have like

00:17:03,059 --> 00:17:08,850
Fred's they make discussions and you can

00:17:06,720 --> 00:17:11,909
keep them you can review them later to

00:17:08,850 --> 00:17:15,049
see what happened that's very that's

00:17:11,909 --> 00:17:18,659
very useful they also a synchronous

00:17:15,049 --> 00:17:21,259
because when you talk about peer reviews

00:17:18,659 --> 00:17:23,939
someone things about pair programming

00:17:21,259 --> 00:17:27,830
but they programming is solely used for

00:17:23,939 --> 00:17:31,049
full for the two people doing it and

00:17:27,830 --> 00:17:34,590
there is no record of the discussion so

00:17:31,049 --> 00:17:36,690
it's it's lost in and for also for for

00:17:34,590 --> 00:17:39,779
remote teams it's great to have a tool

00:17:36,690 --> 00:17:41,010
that you hold the discussions on and

00:17:39,779 --> 00:17:43,590
some of the tools are

00:17:41,010 --> 00:17:46,200
opinionated they know how to use how

00:17:43,590 --> 00:17:49,230
used to make the Comets how you submerge

00:17:46,200 --> 00:17:53,490
them if you can configure them a bit but

00:17:49,230 --> 00:17:56,850
some know how how you should do your

00:17:53,490 --> 00:17:58,620
workflow and for us the minimum

00:17:56,850 --> 00:18:01,740
requirements is that you can make dips

00:17:58,620 --> 00:18:03,870
you can make comments under the under

00:18:01,740 --> 00:18:07,470
the line of code that's being changed

00:18:03,870 --> 00:18:09,900
and nothing else but it's nice to have

00:18:07,470 --> 00:18:12,470
rows to match the code automatically to

00:18:09,900 --> 00:18:14,640
make repairs notifications and

00:18:12,470 --> 00:18:22,200
integration with continuous integration

00:18:14,640 --> 00:18:26,580
like Jenkins things like that so first

00:18:22,200 --> 00:18:30,600
two very old patches we all know from

00:18:26,580 --> 00:18:33,480
Drupal or its kind of the legacy way to

00:18:30,600 --> 00:18:36,060
do code review body work for us to

00:18:33,480 --> 00:18:39,810
release too polite so may not be that

00:18:36,060 --> 00:18:43,470
bad you need dreddit or two to do a

00:18:39,810 --> 00:18:46,050
proper code review it's very handy then

00:18:43,470 --> 00:18:49,800
we have pull requests are very popular

00:18:46,050 --> 00:18:54,210
too common to github the bucket get

00:18:49,800 --> 00:18:56,550
blood that is a very cool tool and what

00:18:54,210 --> 00:19:00,450
they are is good with code reviews like

00:18:56,550 --> 00:19:02,970
if you don't put any layer on top of

00:19:00,450 --> 00:19:06,920
github of the pull request there is

00:19:02,970 --> 00:19:09,450
anyone can merge stuff like that that

00:19:06,920 --> 00:19:15,270
sometimes makes the makes the gif

00:19:09,450 --> 00:19:18,330
history a bit and clean and well they

00:19:15,270 --> 00:19:20,910
work matching gold from one branch to

00:19:18,330 --> 00:19:23,190
another you get a lot of comets as you

00:19:20,910 --> 00:19:30,120
are fixing your your feature things like

00:19:23,190 --> 00:19:32,970
that and and well they're this fancy and

00:19:30,120 --> 00:19:36,150
I sue mentioned then there is well I

00:19:32,970 --> 00:19:39,270
think price do is mention something this

00:19:36,150 --> 00:19:41,670
morning about having branches so there

00:19:39,270 --> 00:19:45,260
is also an initiative that is called

00:19:41,670 --> 00:19:48,990
issue workspace that is kind of having

00:19:45,260 --> 00:19:53,340
who requests on drupal.org

00:19:48,990 --> 00:19:56,070
so and I currently use Garrett for code

00:19:53,340 --> 00:19:59,220
review is the tool that I like because

00:19:56,070 --> 00:20:02,400
it does it does one thing and that's it

00:19:59,220 --> 00:20:06,660
good but it also serves as a cold report

00:20:02,400 --> 00:20:09,420
was a rapper as a ripple a hosting

00:20:06,660 --> 00:20:13,320
report too because it tastes control

00:20:09,420 --> 00:20:15,230
over your repo and is Garrett that does

00:20:13,320 --> 00:20:18,900
the merges of the code things like that

00:20:15,230 --> 00:20:22,710
it allows you to have a clean common

00:20:18,900 --> 00:20:26,130
history and introduces the concept of

00:20:22,710 --> 00:20:29,070
the change pool the as a list of changes

00:20:26,130 --> 00:20:31,110
that you can that the machines can get

00:20:29,070 --> 00:20:33,300
and make continuous integration and the

00:20:31,110 --> 00:20:37,410
developers can also download and makes

00:20:33,300 --> 00:20:39,840
men make reviews so there is a little

00:20:37,410 --> 00:20:43,590
out of big projects using the using

00:20:39,840 --> 00:20:46,530
Garrett mostly Google projects here is a

00:20:43,590 --> 00:20:50,160
list of changes you can see a column on

00:20:46,530 --> 00:20:52,710
the right that is how big the change is

00:20:50,160 --> 00:20:55,410
so before you review it you know that is

00:20:52,710 --> 00:20:58,440
going to take you a long time to reveal

00:20:55,410 --> 00:21:01,500
or not and this is what mostly

00:20:58,440 --> 00:21:03,960
encourages to have a to have a small a

00:21:01,500 --> 00:21:10,440
small comet so all the people can review

00:21:03,960 --> 00:21:14,280
and here i made a gift on how is the

00:21:10,440 --> 00:21:16,290
submit step for Garrett you should meet

00:21:14,280 --> 00:21:18,150
the code and it gets merged

00:21:16,290 --> 00:21:21,960
automatically it can be verified by

00:21:18,150 --> 00:21:25,440
machines they get like different stream

00:21:21,960 --> 00:21:29,280
of conversations the in a pull request

00:21:25,440 --> 00:21:31,260
you only get one one thread of comments

00:21:29,280 --> 00:21:34,230
then you have the machine supporting

00:21:31,260 --> 00:21:36,900
Garrett things like that it has some

00:21:34,230 --> 00:21:39,660
drawbacks like the interface is no it

00:21:36,900 --> 00:21:42,270
means it's not very nice actually has a

00:21:39,660 --> 00:21:44,910
learning curve because you have to know

00:21:42,270 --> 00:21:49,620
how Garrett manages their the rapist and

00:21:44,910 --> 00:21:52,110
the Comets and it's not a drawback that

00:21:49,620 --> 00:21:54,300
it requires you to define a review

00:21:52,110 --> 00:21:57,300
process you like you and forced you to

00:21:54,300 --> 00:22:00,300
have a reverse review process so I think

00:21:57,300 --> 00:22:02,290
that's also cool and it's also is solely

00:22:00,300 --> 00:22:05,020
precumming there is no

00:22:02,290 --> 00:22:08,380
you have to make changes and uncle made

00:22:05,020 --> 00:22:11,710
them and I wanted to make another

00:22:08,380 --> 00:22:14,680
example of a post call me preview tool

00:22:11,710 --> 00:22:18,670
like it's a plugin for red line and you

00:22:14,680 --> 00:22:20,800
can open issues and for request of

00:22:18,670 --> 00:22:23,080
changes as things that you are you don't

00:22:20,800 --> 00:22:26,020
see that they are right there is other

00:22:23,080 --> 00:22:29,260
tools atlassian has a certain code

00:22:26,020 --> 00:22:31,750
review tools facebook has inside the

00:22:29,260 --> 00:22:36,610
fabric a door switch the different' tool

00:22:31,750 --> 00:22:40,140
and well make your choice studi very

00:22:36,610 --> 00:22:46,750
good and I hope you do code review so

00:22:40,140 --> 00:22:49,720
here is gotcha okay so change sometimes

00:22:46,750 --> 00:22:53,800
can get hairy because during an

00:22:49,720 --> 00:22:56,830
organization and maybe you cannot didn't

00:22:53,800 --> 00:22:58,930
have the tools so you'll have them them

00:22:56,830 --> 00:23:04,360
you don't feel you have the power to do

00:22:58,930 --> 00:23:06,550
this so this is where I well I found

00:23:04,360 --> 00:23:09,490
these two guys there I thought that was

00:23:06,550 --> 00:23:14,470
a good representation of some Japanese

00:23:09,490 --> 00:23:19,650
concepts like kind st. and chi kok this

00:23:14,470 --> 00:23:23,080
harbury and these are concepts very

00:23:19,650 --> 00:23:26,110
linked with the lean methodologies and

00:23:23,080 --> 00:23:28,930
jail and things like that the first one

00:23:26,110 --> 00:23:31,210
means that you do incremental changes

00:23:28,930 --> 00:23:34,300
that you do a change you plan it you

00:23:31,210 --> 00:23:37,810
measure it and then you act and then you

00:23:34,300 --> 00:23:39,940
do it again so it's a cycle and the

00:23:37,810 --> 00:23:42,100
second one it means radical change so

00:23:39,940 --> 00:23:44,890
maybe in the organization incremental

00:23:42,100 --> 00:23:50,290
change just do not work because there is

00:23:44,890 --> 00:23:53,830
not enough not enough support or not

00:23:50,290 --> 00:23:55,240
enough commitment so you may want to do

00:23:53,830 --> 00:23:57,250
a radical change and then you do

00:23:55,240 --> 00:23:59,680
incremental change says you don't use

00:23:57,250 --> 00:24:01,720
code review you don't you don't use peer

00:23:59,680 --> 00:24:06,130
review at all so everyone commits

00:24:01,720 --> 00:24:07,900
several so 11 way to face it will be

00:24:06,130 --> 00:24:09,970
well let's try to do it in just one

00:24:07,900 --> 00:24:12,690
project let's try to do it in just one

00:24:09,970 --> 00:24:16,370
team let's try to do it very slowly and

00:24:12,690 --> 00:24:18,710
second the second option is you as well

00:24:16,370 --> 00:24:22,190
you know from Monday we do peer review

00:24:18,710 --> 00:24:26,450
that's it and then do you look how how

00:24:22,190 --> 00:24:29,900
it works and another thing that is very

00:24:26,450 --> 00:24:32,710
similar to code view in terms of how you

00:24:29,900 --> 00:24:35,930
can implement it in a team is testing

00:24:32,710 --> 00:24:38,210
how I guess most of you do to testing

00:24:35,930 --> 00:24:41,030
who who does something like B hat or

00:24:38,210 --> 00:24:44,870
each unit further product okay that's

00:24:41,030 --> 00:24:48,350
great but it is hard to do it is hard to

00:24:44,870 --> 00:24:52,010
convince teams and organizations to

00:24:48,350 --> 00:24:57,130
start to do it and you just have them

00:24:52,010 --> 00:25:00,320
and plants could Google well or not what

00:24:57,130 --> 00:25:01,850
you have to have patience as well you

00:25:00,320 --> 00:25:03,500
have to evaluate the organization maybe

00:25:01,850 --> 00:25:07,400
your organization is not ready for doing

00:25:03,500 --> 00:25:11,120
vdd out of the box maybe maybe you can't

00:25:07,400 --> 00:25:14,270
do TDD i mean drupal 7 is not the

00:25:11,120 --> 00:25:16,160
friendliest thing to do TDD in the in

00:25:14,270 --> 00:25:19,070
the market to be honest maybe you

00:25:16,160 --> 00:25:20,720
implement your own stuff you there are

00:25:19,070 --> 00:25:23,840
tools like these piece back there out

00:25:20,720 --> 00:25:29,150
there there are a lot of things you have

00:25:23,840 --> 00:25:31,309
to do to work for making the tools easy

00:25:29,150 --> 00:25:33,890
I'm making the tools and adapt the tools

00:25:31,309 --> 00:25:35,600
to the team and not otherwise maybe your

00:25:33,890 --> 00:25:40,250
team is ready for for some things but

00:25:35,600 --> 00:25:42,520
not other and you have to sell plan very

00:25:40,250 --> 00:25:45,470
well and that's probably harder spa and

00:25:42,520 --> 00:25:49,280
you have to shell results why you are we

00:25:45,470 --> 00:25:52,760
spending so much time and and directly

00:25:49,280 --> 00:26:00,340
money in testing that doesn't release /

00:25:52,760 --> 00:26:03,590
projects fast you start small but uh

00:26:00,340 --> 00:26:06,070
don't stop don't don't leave it even if

00:26:03,590 --> 00:26:09,559
it's frustrating those are Oompa Loompas

00:26:06,070 --> 00:26:16,760
dungeons see some of you like what is

00:26:09,559 --> 00:26:18,920
that pick your battles stats that's the

00:26:16,760 --> 00:26:20,809
main thing you need to start small you

00:26:18,920 --> 00:26:23,150
need you kind of testing and test

00:26:20,809 --> 00:26:26,150
everything that is not possible I mean

00:26:23,150 --> 00:26:28,169
you won't have infinite budget but hey

00:26:26,150 --> 00:26:31,470
if you have infinite budget

00:26:28,169 --> 00:26:33,899
give me a call or phones you have to

00:26:31,470 --> 00:26:38,159
identify the key key areas what the

00:26:33,899 --> 00:26:39,960
business rules are important the the the

00:26:38,159 --> 00:26:41,759
user interface is important you have to

00:26:39,960 --> 00:26:45,119
identify what is the key area for your

00:26:41,759 --> 00:26:47,909
application start testing that and your

00:26:45,119 --> 00:26:49,619
data they can kill you it's like on if

00:26:47,909 --> 00:26:52,470
you don't if I don't integrate testing

00:26:49,619 --> 00:26:56,669
in the core like I do things directly

00:26:52,470 --> 00:26:59,039
the day-to-day is will just take take

00:26:56,669 --> 00:27:00,989
all my time I can do it and performance

00:26:59,039 --> 00:27:03,509
is really different important if your

00:27:00,989 --> 00:27:05,940
test goes low do you don't want to spend

00:27:03,509 --> 00:27:07,440
time waiting for the test to finish so

00:27:05,940 --> 00:27:12,330
that's a very important that's a very

00:27:07,440 --> 00:27:17,519
important often overlooked thing in in

00:27:12,330 --> 00:27:20,759
testing so you need to keep everything

00:27:17,519 --> 00:27:24,059
up to date because there is nothing as a

00:27:20,759 --> 00:27:26,399
no gene as a test that it is not longer

00:27:24,059 --> 00:27:30,779
relevant there is nothing there is no

00:27:26,399 --> 00:27:33,710
worse enemy than that so test should be

00:27:30,779 --> 00:27:39,119
a corporate your date data which

00:27:33,710 --> 00:27:42,119
develops we are lazy and we want to do

00:27:39,119 --> 00:27:44,519
this but it is very difficult to

00:27:42,119 --> 00:27:47,279
convince some developers say out we are

00:27:44,519 --> 00:27:51,299
not building rockets or planes we don't

00:27:47,279 --> 00:27:54,119
need testing so we need to automate and

00:27:51,299 --> 00:27:57,299
make things fast and if you have to look

00:27:54,119 --> 00:27:59,730
at it it is not automated okay that's

00:27:57,299 --> 00:28:00,989
that's important it is not that if you

00:27:59,730 --> 00:28:03,299
have to press the bottom and everything

00:28:00,989 --> 00:28:07,859
happens well you may have a hook or

00:28:03,299 --> 00:28:10,019
something that that can can help you and

00:28:07,859 --> 00:28:12,149
it is very important to not leave broken

00:28:10,019 --> 00:28:13,919
window you know the broken window theory

00:28:12,149 --> 00:28:16,889
did you leave a building with a broken

00:28:13,919 --> 00:28:19,889
window one day and then well then do you

00:28:16,889 --> 00:28:22,169
end up with them or the winter up you

00:28:19,889 --> 00:28:24,330
don't want that so when a broken when

00:28:22,169 --> 00:28:26,220
the test is breaking or due to a change

00:28:24,330 --> 00:28:28,619
and you break a test that's actually

00:28:26,220 --> 00:28:31,830
good news its like a this is dessert

00:28:28,619 --> 00:28:33,389
that we are doing it works I mean it's

00:28:31,830 --> 00:28:35,759
one of the things that one day it breaks

00:28:33,389 --> 00:28:38,820
it wore it means it's working don't

00:28:35,759 --> 00:28:41,230
leave broken tests run if it's broken

00:28:38,820 --> 00:28:44,260
and you can't fix it first product

00:28:41,230 --> 00:28:45,940
you need to either evaluate if you want

00:28:44,260 --> 00:28:52,630
to fix it or if you want to just delete

00:28:45,940 --> 00:28:56,530
it and color view helps a lot there is

00:28:52,630 --> 00:29:01,540
these Japanese concept called kin sugi

00:28:56,530 --> 00:29:04,410
um that's a ceramic a ceramic base so

00:29:01,540 --> 00:29:07,299
there is a dis Japanese craft that when

00:29:04,410 --> 00:29:11,080
ceramic vase is broken they fix it with

00:29:07,299 --> 00:29:14,169
golden based so the result of that is a

00:29:11,080 --> 00:29:19,030
much more valuable product or much more

00:29:14,169 --> 00:29:22,240
variable and solid forget or whatever so

00:29:19,030 --> 00:29:25,960
make sure that your test fix things we

00:29:22,240 --> 00:29:27,580
call paste okay so you don't get those

00:29:25,960 --> 00:29:30,400
annoying calls like a you told me was

00:29:27,580 --> 00:29:32,470
fixed your client calls and say hey this

00:29:30,400 --> 00:29:34,870
thing I told you last week you told me

00:29:32,470 --> 00:29:39,669
was fixed but it's not is failing again

00:29:34,870 --> 00:29:41,650
you don't want that code so very

00:29:39,669 --> 00:29:43,840
important stakeholders whoever those

00:29:41,650 --> 00:29:46,330
maybe for for your case needs to be on

00:29:43,840 --> 00:29:49,270
board it is very important if you if you

00:29:46,330 --> 00:29:52,570
have people writing tests for you like

00:29:49,270 --> 00:29:55,990
your prize money your spragga toners

00:29:52,570 --> 00:29:59,110
whatever whatever whoever you can

00:29:55,990 --> 00:30:03,250
involve in your in your project and your

00:29:59,110 --> 00:30:05,830
testing it is very important because we

00:30:03,250 --> 00:30:08,559
have Ural driven development is not just

00:30:05,830 --> 00:30:10,840
be hot it's about a whole set of the

00:30:08,559 --> 00:30:13,150
last piece like that say that you need

00:30:10,840 --> 00:30:16,600
to write a test first and the dest needs

00:30:13,150 --> 00:30:19,120
to be read and then you need to make it

00:30:16,600 --> 00:30:21,780
green you know that's if you use in B

00:30:19,120 --> 00:30:26,740
hat doesn't necessarily mean you use in

00:30:21,780 --> 00:30:30,570
vdd and we had is not just the language

00:30:26,740 --> 00:30:32,950
we had used it has a lot of implications

00:30:30,570 --> 00:30:36,640
so you can choose test your business

00:30:32,950 --> 00:30:38,559
routes test your user interfaces test

00:30:36,640 --> 00:30:40,480
your API your integrations with others

00:30:38,559 --> 00:30:42,640
maybe that's that your key that's your

00:30:40,480 --> 00:30:44,530
thing I don't know maybe you get called

00:30:42,640 --> 00:30:47,590
from the or client because the user

00:30:44,530 --> 00:30:51,730
interface for fails maybe that's your

00:30:47,590 --> 00:30:53,470
main concern and you can choose

00:30:51,730 --> 00:30:53,990
different purposes tool for different

00:30:53,470 --> 00:30:55,340
purposes

00:30:53,990 --> 00:30:59,720
that's that's fine and we're going to

00:30:55,340 --> 00:31:03,050
see a few a few of those tools so the

00:30:59,720 --> 00:31:10,100
first one that we are M this is going to

00:31:03,050 --> 00:31:11,900
be very Drupal specific simple test how

00:31:10,100 --> 00:31:17,240
many of you do tests with simple test

00:31:11,900 --> 00:31:19,580
for your client projects few simple

00:31:17,240 --> 00:31:21,830
tests is is really good in terms of

00:31:19,580 --> 00:31:24,710
being a Drupal specific in halves all

00:31:21,830 --> 00:31:26,360
the tools and but this pretty much only

00:31:24,710 --> 00:31:30,890
Drupal who uses these at this point in

00:31:26,360 --> 00:31:32,660
time it's really slow I don't think

00:31:30,890 --> 00:31:35,000
anyone can argue that simple test

00:31:32,660 --> 00:31:39,440
release job scout clicks we test that

00:31:35,000 --> 00:31:43,490
inside of trouble um this how a simple

00:31:39,440 --> 00:31:46,450
test test look so you have folder or

00:31:43,490 --> 00:31:49,520
your Drupal things and you can do more

00:31:46,450 --> 00:31:51,350
more stuff like that and this will this

00:31:49,520 --> 00:31:53,929
will boost trap Drupal and things like

00:31:51,350 --> 00:31:56,300
that that's that's expensive you have to

00:31:53,929 --> 00:31:58,280
you have to take care with this and and

00:31:56,300 --> 00:32:01,640
this is great to do integration between

00:31:58,280 --> 00:32:05,030
between pieces of your goal you have

00:32:01,640 --> 00:32:08,020
phpunit phpunit is not a straightforward

00:32:05,030 --> 00:32:10,340
to integrate with Drupal until Drupal 8

00:32:08,020 --> 00:32:12,170
okay so you're doing Drupal 8 you have

00:32:10,340 --> 00:32:16,340
that out of the box and that's great so

00:32:12,170 --> 00:32:18,800
key thing because phpunit is as fast as

00:32:16,340 --> 00:32:23,630
it gets it is practically immediate and

00:32:18,800 --> 00:32:26,150
you want that but if you're doing drupal

00:32:23,630 --> 00:32:28,280
7 you can still use PHP unit but you

00:32:26,150 --> 00:32:31,309
have to modernize your codebase really

00:32:28,280 --> 00:32:35,750
which is good and is but as you have to

00:32:31,309 --> 00:32:38,150
spend time them and this is how is PHP

00:32:35,750 --> 00:32:41,360
unit test looks like and you can check

00:32:38,150 --> 00:32:43,880
triple ladies full of those and you have

00:32:41,360 --> 00:32:45,320
to tell them tell the Peach Pit unit

00:32:43,880 --> 00:32:47,030
because it's a unit that doesn't know

00:32:45,320 --> 00:32:49,700
ever anything about anything so it just

00:32:47,030 --> 00:32:51,980
test one thing and one thing only and

00:32:49,700 --> 00:32:55,340
you have to tell it what to SPECT what

00:32:51,980 --> 00:32:58,460
to what to have what you have there this

00:32:55,340 --> 00:33:01,550
is faking functions to call or methods

00:32:58,460 --> 00:33:05,600
to go and that's good but is it is it is

00:33:01,550 --> 00:33:06,990
a change on Amish bed and you can test

00:33:05,600 --> 00:33:08,940
the interfaces

00:33:06,990 --> 00:33:11,070
I would say that if you have to test

00:33:08,940 --> 00:33:14,460
interfaces you are better off with

00:33:11,070 --> 00:33:17,880
things like we had done simple test but

00:33:14,460 --> 00:33:20,730
it's probably a matter of opinion we had

00:33:17,880 --> 00:33:22,500
in a PHP tool and cast can test

00:33:20,730 --> 00:33:24,270
everything there is a fairly good in

00:33:22,500 --> 00:33:27,660
integration with repellents extension

00:33:24,270 --> 00:33:32,370
and you can integrate it further on them

00:33:27,660 --> 00:33:33,960
main drawbacks of be had Anika tech can

00:33:32,370 --> 00:33:37,080
test everything gaps crib or anything

00:33:33,960 --> 00:33:39,480
you can throw selenium tests and you can

00:33:37,080 --> 00:33:41,880
get the browser see how they you know

00:33:39,480 --> 00:33:47,790
the small guides had we had clicking

00:33:41,880 --> 00:33:51,929
places you know but if you do we had you

00:33:47,790 --> 00:33:55,890
have to do a dictionary based phrases

00:33:51,929 --> 00:33:58,820
there's a bee had a tester you know this

00:33:55,890 --> 00:34:02,010
is very you can read this right and

00:33:58,820 --> 00:34:04,140
maybe your your project managers and

00:34:02,010 --> 00:34:08,550
proud owners can to an and write those

00:34:04,140 --> 00:34:11,129
but you could end with all with a really

00:34:08,550 --> 00:34:13,770
really long glossary of things to keep

00:34:11,129 --> 00:34:16,379
like an i press and I go to there and I

00:34:13,770 --> 00:34:18,389
and I do this action and you can have a

00:34:16,379 --> 00:34:20,700
you need to find a way to make that

00:34:18,389 --> 00:34:23,730
glossary meaningful and easy to probs

00:34:20,700 --> 00:34:29,070
easy to discover poor for new for new

00:34:23,730 --> 00:34:32,429
people and that said if you don't have

00:34:29,070 --> 00:34:37,500
your your period many years your product

00:34:32,429 --> 00:34:39,480
owners on board you may want to go for

00:34:37,500 --> 00:34:42,869
something like Casper GS or other tools

00:34:39,480 --> 00:34:47,720
similar it is a JavaScript based testing

00:34:42,869 --> 00:34:50,790
framework and it uses a more or less em

00:34:47,720 --> 00:34:53,490
same tools that we had does but in the

00:34:50,790 --> 00:34:56,490
JavaScript world it doesn't have any

00:34:53,490 --> 00:34:59,880
Drupal integrations just a front and

00:34:56,490 --> 00:35:03,859
testing tool and it looks like like this

00:34:59,880 --> 00:35:07,470
it looks like a javascript thing and

00:35:03,859 --> 00:35:10,109
these consist you can't ask your you're

00:35:07,470 --> 00:35:12,210
proud owner right right but if they

00:35:10,109 --> 00:35:15,300
don't want to write tests you may want

00:35:12,210 --> 00:35:16,500
to have code as your tests why not if

00:35:15,300 --> 00:35:19,369
they are not on board while will you

00:35:16,500 --> 00:35:20,440
water on on having meaningful meaningful

00:35:19,369 --> 00:35:23,940
natural

00:35:20,440 --> 00:35:29,220
language tests maybe that's your tool um

00:35:23,940 --> 00:35:33,190
that's it for testing thing ya know so

00:35:29,220 --> 00:35:35,890
automate everything that is related what

00:35:33,190 --> 00:35:38,800
we were saying that you don't want to

00:35:35,890 --> 00:35:41,380
make the same mistake twice so you want

00:35:38,800 --> 00:35:46,319
to be vigilant around what you're doing

00:35:41,380 --> 00:35:49,960
what processors I don't by humans and

00:35:46,319 --> 00:35:52,210
what can be automated and continuous

00:35:49,960 --> 00:35:55,540
integration is the main candidate to be

00:35:52,210 --> 00:35:59,380
to be automated is very easy can be

00:35:55,540 --> 00:36:02,130
script as I was talking the code review

00:35:59,380 --> 00:36:05,680
made by machines coding standards

00:36:02,130 --> 00:36:09,099
complexity good practices do one your

00:36:05,680 --> 00:36:11,470
machines to to run the test Suites you

00:36:09,099 --> 00:36:13,869
want to have the deployments under

00:36:11,470 --> 00:36:17,890
control so you can deploy in a Friday

00:36:13,869 --> 00:36:20,589
and afternoon so once you do reach this

00:36:17,890 --> 00:36:24,099
point you get like send tranquility and

00:36:20,589 --> 00:36:27,640
maybe you want to use something to

00:36:24,099 --> 00:36:29,290
generate your files to boost the code to

00:36:27,640 --> 00:36:31,859
the client because he is the one

00:36:29,290 --> 00:36:35,349
deploying the code things like that so

00:36:31,859 --> 00:36:38,400
this is your tool belt Jenkins is a

00:36:35,349 --> 00:36:40,780
great tool maybe puppies might be bamboo

00:36:38,400 --> 00:36:43,599
you can use for your deployments

00:36:40,780 --> 00:36:47,589
Capistrano uncivil also is going to

00:36:43,599 --> 00:36:50,470
promise you in your your machine chef

00:36:47,589 --> 00:36:54,010
well there is new kids on the block like

00:36:50,470 --> 00:36:57,670
dr. is being talked lately a lot yeah I

00:36:54,010 --> 00:36:59,859
mean it's a matter of the same again

00:36:57,670 --> 00:37:01,450
with a code view and testings that you

00:36:59,859 --> 00:37:03,670
need to choose you need to know your

00:37:01,450 --> 00:37:06,310
organization need to know which tools

00:37:03,670 --> 00:37:08,319
you want to do and if you want to

00:37:06,310 --> 00:37:10,660
automate something and you need you need

00:37:08,319 --> 00:37:14,140
probably your chances are that you need

00:37:10,660 --> 00:37:15,910
some of these or similar names so for

00:37:14,140 --> 00:37:17,890
example of you if you do provisioning

00:37:15,910 --> 00:37:19,869
and you don't have any ruby developer on

00:37:17,890 --> 00:37:21,670
the team or anyone that wants to get me

00:37:19,869 --> 00:37:23,950
a ruby maybe you don't use Capistrano

00:37:21,670 --> 00:37:27,849
use thing instead because you know PHP

00:37:23,950 --> 00:37:29,470
and maybe you want you want a faster on

00:37:27,849 --> 00:37:31,690
board maybe you want to look into doctor

00:37:29,470 --> 00:37:32,380
maybe you have a DevOps person that can

00:37:31,690 --> 00:37:34,150
do

00:37:32,380 --> 00:37:37,000
chair for puppet maybe you don't have it

00:37:34,150 --> 00:37:38,710
so maybe you have someone that can build

00:37:37,000 --> 00:37:40,660
a gen skin server and they know how to

00:37:38,710 --> 00:37:42,990
do it or maybe you want to pay Travis to

00:37:40,660 --> 00:37:47,650
host your continuous integration for you

00:37:42,990 --> 00:37:51,880
so it is a matter of no no the guns you

00:37:47,650 --> 00:37:54,430
have to do the job yeah also on the

00:37:51,880 --> 00:37:56,710
developer side there is no grand gulps

00:37:54,430 --> 00:37:59,349
things like that you have JavaScript

00:37:56,710 --> 00:38:04,269
ethics in your team you may have end up

00:37:59,349 --> 00:38:07,569
using golf to the plot that's fine so as

00:38:04,269 --> 00:38:10,089
a final note before taking questions or

00:38:07,569 --> 00:38:13,059
something I wanted to say that I think

00:38:10,089 --> 00:38:15,880
all these quality of protease and you

00:38:13,059 --> 00:38:19,150
step forward on the pragmatism of free

00:38:15,880 --> 00:38:21,250
software that we demonstrated that we

00:38:19,150 --> 00:38:24,880
are able to deliver tons of free

00:38:21,250 --> 00:38:28,390
software but the quality is so we need

00:38:24,880 --> 00:38:32,529
to focus now that in the current moment

00:38:28,390 --> 00:38:37,319
on how are we doing stuff so has more

00:38:32,529 --> 00:38:40,349
quality is more pleasant to work with so

00:38:37,319 --> 00:38:43,630
please come to the springs on friday and

00:38:40,349 --> 00:38:46,779
well this is some other images that we

00:38:43,630 --> 00:38:48,930
have thank you everyone for coming thank

00:38:46,779 --> 00:38:48,930
you

00:38:53,829 --> 00:38:59,359
so we have an open mike says here now if

00:38:57,529 --> 00:39:01,430
you want to make some questions and say

00:38:59,359 --> 00:39:09,680
well your guys are so wrong on these

00:39:01,430 --> 00:39:13,219
things is free yeah you need to need to

00:39:09,680 --> 00:39:22,219
somehow yeah otherwise I can repeat the

00:39:13,219 --> 00:39:25,729
question yeah okay hey so I know that

00:39:22,219 --> 00:39:28,779
you said basic to the mic ok I know that

00:39:25,729 --> 00:39:32,450
it did fine ok I know that you said that

00:39:28,779 --> 00:39:35,029
having soooo test is a problem but you

00:39:32,450 --> 00:39:37,579
always reaching a point where you have

00:39:35,029 --> 00:39:43,549
too many automated tests when too many

00:39:37,579 --> 00:39:48,920
many and the automated test becomes slow

00:39:43,549 --> 00:39:51,410
and what we can do in at that point what

00:39:48,920 --> 00:39:53,989
what would be the approach to learn only

00:39:51,410 --> 00:39:56,630
business critical test and to a run

00:39:53,989 --> 00:39:58,459
other tests manually or how that's

00:39:56,630 --> 00:40:00,259
that's a great question and that's where

00:39:58,459 --> 00:40:02,630
your continuous integration and adam

00:40:00,259 --> 00:40:05,449
dish out on matey's asian tools coming

00:40:02,630 --> 00:40:06,799
coming to kicking and help you do you

00:40:05,449 --> 00:40:09,469
can explore it depends on your

00:40:06,799 --> 00:40:12,079
application a lot you know but you can

00:40:09,469 --> 00:40:14,269
explore like building your application

00:40:12,079 --> 00:40:15,650
with docker so the bill doesn't take

00:40:14,269 --> 00:40:17,930
anything so you deploy your daughter

00:40:15,650 --> 00:40:21,739
aren't you test there you have things

00:40:17,930 --> 00:40:24,559
like the cloud now very modern medicine

00:40:21,739 --> 00:40:27,380
very here very fancy and you can you can

00:40:24,559 --> 00:40:31,190
deploy machines that you run in parallel

00:40:27,380 --> 00:40:34,009
your tests you can do things like the

00:40:31,190 --> 00:40:35,869
machine reviews and things they don't

00:40:34,009 --> 00:40:38,690
need if you are reviewing your code as

00:40:35,869 --> 00:40:40,519
well as your as you're at the testing

00:40:38,690 --> 00:40:42,859
you can review the code without is

00:40:40,519 --> 00:40:45,140
tallying the size stone inside you have

00:40:42,859 --> 00:40:47,869
to break the thing in pieces and

00:40:45,140 --> 00:40:50,119
probably a good idea is to them things

00:40:47,869 --> 00:40:53,119
like we had have a very smart smart

00:40:50,119 --> 00:40:56,089
tagging mechanism yeah you can tag your

00:40:53,119 --> 00:40:59,029
tests so you know what our core what are

00:40:56,089 --> 00:41:01,579
not so did you say these are the ones

00:40:59,029 --> 00:41:04,369
that i want don't run otays but on

00:41:01,579 --> 00:41:05,960
productivity afraid because this bit is

00:41:04,369 --> 00:41:09,140
critical

00:41:05,960 --> 00:41:11,240
everything else is nice to be tested and

00:41:09,140 --> 00:41:13,849
if it but it is broke if it's broken I

00:41:11,240 --> 00:41:15,830
won't get a call right away this is

00:41:13,849 --> 00:41:17,089
broken so you have to identify your you

00:41:15,830 --> 00:41:19,310
have to pick your battles in your

00:41:17,089 --> 00:41:21,560
testing yeah what's not critical you

00:41:19,310 --> 00:41:23,960
don't run it very often that's what we

00:41:21,560 --> 00:41:26,420
immediate you have an ID yeah that runs

00:41:23,960 --> 00:41:28,400
I've criticals and you have a whenever a

00:41:26,420 --> 00:41:31,670
change is made i run i run the core

00:41:28,400 --> 00:41:35,869
tests okay or I wasn't in a project that

00:41:31,670 --> 00:41:39,290
we tested every carriage change even if

00:41:35,869 --> 00:41:43,010
you was a line of CSS so we learn to

00:41:39,290 --> 00:41:45,380
mark things as this shouldn't trigger a

00:41:43,010 --> 00:41:52,190
test every time he's committed walking

00:41:45,380 --> 00:41:55,369
like that that's valuable thank you for

00:41:52,190 --> 00:41:58,089
for checking code style there's code

00:41:55,369 --> 00:42:00,890
sniffer I'd like to know if anyone has

00:41:58,089 --> 00:42:03,619
real-life experience with the other tool

00:42:00,890 --> 00:42:06,050
that comes with it to automatically fix

00:42:03,619 --> 00:42:08,780
a number of those code styles for

00:42:06,050 --> 00:42:12,109
example adding a period to the line do

00:42:08,780 --> 00:42:15,230
people that use it still learn to do

00:42:12,109 --> 00:42:18,410
themselves or don't we care just do it

00:42:15,230 --> 00:42:20,810
automatically ever always I I know how

00:42:18,410 --> 00:42:22,940
to automate it but I think it's a very

00:42:20,810 --> 00:42:25,820
good practice like i have it on the

00:42:22,940 --> 00:42:30,380
development side i automatically fix my

00:42:25,820 --> 00:42:34,000
files but well you're saying that not

00:42:30,380 --> 00:42:36,470
only your if you'll review run automated

00:42:34,000 --> 00:42:39,740
master tech Torah code is beneath her

00:42:36,470 --> 00:42:42,950
that the tool itself will fix your code

00:42:39,740 --> 00:42:44,960
the race to race with code sniffer also

00:42:42,950 --> 00:42:49,430
a tool that can do it automatically but

00:42:44,960 --> 00:42:51,830
my concern is do people still learn to

00:42:49,430 --> 00:42:57,589
do it right or don't we care just like

00:42:51,830 --> 00:43:02,359
using a calculator you don't you you

00:42:57,589 --> 00:43:04,580
can't calculate in your mind anymore you

00:43:02,359 --> 00:43:08,089
need to calculate do we care or do with

00:43:04,580 --> 00:43:10,250
don't we care I mean if you have a human

00:43:08,089 --> 00:43:14,589
review and you get a review that is

00:43:10,250 --> 00:43:16,670
you're missing a dot it's like well okay

00:43:14,589 --> 00:43:18,349
but

00:43:16,670 --> 00:43:20,960
i don't know if i will feel comfortable

00:43:18,349 --> 00:43:23,359
with our tool fixing those automatically

00:43:20,960 --> 00:43:26,890
like every comment or something but i

00:43:23,359 --> 00:43:30,020
guess a good thing is to have like AI de

00:43:26,890 --> 00:43:33,140
configuration file somewhere that make

00:43:30,020 --> 00:43:36,140
sure that every developer has the same

00:43:33,140 --> 00:43:38,000
gold standards in their machines so i

00:43:36,140 --> 00:43:42,619
think this is a problem that eventually

00:43:38,000 --> 00:43:44,420
you know can be fixed over time i wanna

00:43:42,619 --> 00:43:46,520
say it's a big thing but if you have a

00:43:44,420 --> 00:43:47,780
Drupal 7 thing that you want to move to

00:43:46,520 --> 00:43:49,670
the rubellite you want to do you don't

00:43:47,780 --> 00:43:51,319
want to be worrying about coding

00:43:49,670 --> 00:43:55,780
standards you have to have those fixed

00:43:51,319 --> 00:43:55,780
by that night and that we agree on yeah

00:44:15,910 --> 00:44:29,180
yeah yeah you say it just to summarize

00:44:27,619 --> 00:44:31,309
for other people who can't maybe can't

00:44:29,180 --> 00:44:34,549
hear you you say many IDEs have an

00:44:31,309 --> 00:44:50,089
integration right yeah with God's never

00:44:34,549 --> 00:44:51,530
hear that it's also for 2007 yeah that's

00:44:50,089 --> 00:45:01,400
that's when i was talking about the

00:44:51,530 --> 00:45:03,470
automator yeah but yeah but yeah still

00:45:01,400 --> 00:45:05,390
my questions unanswered to is it is it

00:45:03,470 --> 00:45:08,900
good or when is it good to use it the

00:45:05,390 --> 00:45:26,230
automated a fixer and when it is it not

00:45:08,900 --> 00:45:26,230
good to use it okay okay thank you

00:45:53,210 --> 00:46:15,840
yeah yeah I know yeah yeah yeah that

00:46:12,750 --> 00:46:18,690
that's that's the discussion maybe the

00:46:15,840 --> 00:46:22,170
recording is whether to use how to make

00:46:18,690 --> 00:46:25,560
it fixing or not and and your comments

00:46:22,170 --> 00:46:27,930
that maybe if you have a huge number of

00:46:25,560 --> 00:46:30,180
problems are you do a clean up without

00:46:27,930 --> 00:46:33,119
making things have you if you have

00:46:30,180 --> 00:46:35,550
automated tests you know is less risky

00:46:33,119 --> 00:46:39,150
but if you don't have automated tests

00:46:35,550 --> 00:46:43,560
you don't have that I don't know maybe

00:46:39,150 --> 00:46:47,910
you can fix the dot thing but if you

00:46:43,560 --> 00:46:50,990
have other things like renaming comments

00:46:47,910 --> 00:46:55,980
or something that's that's more that's

00:46:50,990 --> 00:46:58,530
different right just one last question a

00:46:55,980 --> 00:47:00,540
Rodrigo mentioned some very great things

00:46:58,530 --> 00:47:02,340
we get from gold review especially when

00:47:00,540 --> 00:47:04,170
we work as part of a team but I have a

00:47:02,340 --> 00:47:06,270
question for Pedro are some freelance

00:47:04,170 --> 00:47:08,580
and I don't know if this is the case but

00:47:06,270 --> 00:47:12,210
if you wake on a solo project you are by

00:47:08,580 --> 00:47:15,240
yourself you have no team with you that

00:47:12,210 --> 00:47:17,970
can review your code what practices do

00:47:15,240 --> 00:47:20,609
suggest to review your code instead of

00:47:17,970 --> 00:47:22,440
other than yourself obviously and also

00:47:20,609 --> 00:47:25,410
having testing in mind but it's not

00:47:22,440 --> 00:47:28,260
exactly the same yeah did this a great

00:47:25,410 --> 00:47:31,590
question I normally work with teams when

00:47:28,260 --> 00:47:34,260
I Francine now but he said like the

00:47:31,590 --> 00:47:36,600
question of do you do agile on your own

00:47:34,260 --> 00:47:38,460
right I don't I don't know it depends

00:47:36,600 --> 00:47:43,230
how complicated is the stuff you're

00:47:38,460 --> 00:47:48,540
working on but I have the I have the

00:47:43,230 --> 00:47:51,390
idea that if you if you are selling

00:47:48,540 --> 00:47:53,910
something to a client the client doesn't

00:47:51,390 --> 00:47:55,410
if you do testing it is not that it's

00:47:53,910 --> 00:47:57,600
something that the client should say you

00:47:55,410 --> 00:48:01,350
do it or not it is something it comes

00:47:57,600 --> 00:48:05,340
with your with your product or whatever

00:48:01,350 --> 00:48:06,930
you're selling right so having a Jenkins

00:48:05,340 --> 00:48:09,360
for yourself well it depends do you

00:48:06,930 --> 00:48:11,130
maintain the client website or is this

00:48:09,360 --> 00:48:15,090
something that you do and then you let

00:48:11,130 --> 00:48:16,860
off right well it depends that's that's

00:48:15,090 --> 00:48:18,930
a guide you if you are maintaining it

00:48:16,860 --> 00:48:21,750
maybe it maybe it's worth it why not

00:48:18,930 --> 00:48:24,270
maybe you can have some testing for some

00:48:21,750 --> 00:48:30,960
stuff if the client is maintaining it

00:48:24,270 --> 00:48:33,210
well sorry so one question on the tools

00:48:30,960 --> 00:48:37,290
you mentioned some tools for continuous

00:48:33,210 --> 00:48:40,860
integration and for deployment you also

00:48:37,290 --> 00:48:43,730
mentioned that sometimes it's good to

00:48:40,860 --> 00:48:47,010
review only the smelly parts of the code

00:48:43,730 --> 00:48:50,190
but how do you detect because if I'm

00:48:47,010 --> 00:48:52,710
putting myself in the head of a very

00:48:50,190 --> 00:48:55,500
lazy programmer that has done some

00:48:52,710 --> 00:48:57,780
really smelly code and doesn't want that

00:48:55,500 --> 00:49:00,420
doesn't want the hassle of going through

00:48:57,780 --> 00:49:02,400
a lengthy code review so what I'm going

00:49:00,420 --> 00:49:04,170
to tell you is the smelly code is the

00:49:02,400 --> 00:49:06,060
code that I'm actually more proud of and

00:49:04,170 --> 00:49:08,760
the one that has less problems I'm going

00:49:06,060 --> 00:49:11,370
to try and either way under the rug the

00:49:08,760 --> 00:49:13,320
the really smelly code so what kind of

00:49:11,370 --> 00:49:15,210
other tools because code sniffer okay

00:49:13,320 --> 00:49:18,570
tells you yeah this is where you left

00:49:15,210 --> 00:49:22,380
out some points or some you left some

00:49:18,570 --> 00:49:26,100
extra white space or some very stupid

00:49:22,380 --> 00:49:29,460
things but real code analysis which

00:49:26,100 --> 00:49:33,690
tools should we use well we have p.m. d

00:49:29,460 --> 00:49:36,330
HB mass detector that is going to tell

00:49:33,690 --> 00:49:38,910
you what and not only that you can also

00:49:36,330 --> 00:49:43,730
may be based on performance the code

00:49:38,910 --> 00:49:47,060
that is not wait so make a HH profi

00:49:43,730 --> 00:49:50,840
I would say I know this is not your

00:49:47,060 --> 00:49:54,140
question but i would say ask the current

00:49:50,840 --> 00:49:57,109
or former developers they will know what

00:49:54,140 --> 00:49:58,730
is this Mellie part like ask what is

00:49:57,109 --> 00:50:02,359
what is the thing that you wouldn't

00:49:58,730 --> 00:50:05,330
touch in this project that is what you

00:50:02,359 --> 00:50:10,280
have to test or your attribute the parts

00:50:05,330 --> 00:50:12,859
without tests also I guess when when

00:50:10,280 --> 00:50:15,220
when we said this has reviewed ismaili

00:50:12,859 --> 00:50:17,980
parts we wanted to mean start somewhere

00:50:15,220 --> 00:50:44,480
start somewhere that has adds value

00:50:17,980 --> 00:50:49,670
whatever it has more body I did I ate

00:50:44,480 --> 00:50:52,520
the i 18 n module since then ok the

00:50:49,670 --> 00:51:32,390
recommendation was black fire desire for

00:50:52,520 --> 00:51:34,490
testing performance ok ok I think we so

00:51:32,390 --> 00:51:36,890
look for the usual suspects in Drupal

00:51:34,490 --> 00:51:43,100
like hooking it or crazy out there some

00:51:36,890 --> 00:51:45,590
things like that ok so the comment was

00:51:43,100 --> 00:51:48,170
like the Drupal a TI is going to tell

00:51:45,590 --> 00:51:49,760
you where the dangerous hooks and I know

00:51:48,170 --> 00:51:54,680
you know what are they

00:51:49,760 --> 00:51:58,940
were the big hooks are hey I cooking for

00:51:54,680 --> 00:52:03,340
example whatever color so I think we

00:51:58,940 --> 00:52:03,340

YouTube URL: https://www.youtube.com/watch?v=ufaS98bbZco


