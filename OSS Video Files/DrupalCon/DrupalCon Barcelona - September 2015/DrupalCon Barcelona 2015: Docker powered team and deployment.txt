Title: DrupalCon Barcelona 2015: Docker powered team and deployment
Publication date: 2015-09-22
Playlist: DrupalCon Barcelona - September 2015
Description: 
	It's a common scenario: several developers on a team and each one has their own variety of LAMP stack on their machine for working on the project. A new person joins the team and it can take days getting up to speed on the project. At the same time, developers need to work on maintenance projects from time to time which require different versions of the software stack.

This session will demonstrate how docker can be used to unify the team's environment and be consistent with the testing server and production. Learn how to bake your infrastructure as code into your project git repo. Run automated tests on the same stack as your developer sandboxes.

We have experienced a variety of pain points using Docker for Drupal development. Come and see how we are using the opensource Bowline Drupal development tools project to overcome these difficulties and have a smooth docker experience for developers, even on OSX. The Bowline demo will show how to configure and build docker containers, use drush commands within the container, and run behat tests. Demo will also show how to easily add and connect Solr container or a second database for working on Drupal migrations. Plus you will see how all of this can be automated on a ci server such as jenkins.

Working on a migration? Inherited a project, and need to support the legacy systems while working on moving to the lasted versions? Want to start working with Drupal 8 for a new site? Bowline provides the tools you need, and builds the tools right into your project.

About the speaker:
David Numan, CivicActions engineer/sysadmin, is the creator of the Docker based Bowline project: https://github.com/davenuman/bowline
Captions: 
	00:00:00,000 --> 00:00:06,420
so this is the the time in the schedule

00:00:04,350 --> 00:00:08,280
where you go to the sleeper sessions

00:00:06,420 --> 00:00:10,500
because we've just had lunch and we're

00:00:08,280 --> 00:00:14,460
all ready to get comfortable and take a

00:00:10,500 --> 00:00:18,500
nap right so hopefully we'll i'll keep

00:00:14,460 --> 00:00:21,660
your attention as best as I can all

00:00:18,500 --> 00:00:27,269
right yeah welcome to a session on

00:00:21,660 --> 00:00:31,679
docker power team and deployment my name

00:00:27,269 --> 00:00:33,450
is David Newman there's a link to my

00:00:31,679 --> 00:00:37,460
github page which is actually just a

00:00:33,450 --> 00:00:39,629
link to these slides so if you want them

00:00:37,460 --> 00:00:42,629
want to grab these slides later or

00:00:39,629 --> 00:00:45,719
whatever i'll i will also post these

00:00:42,629 --> 00:00:50,850
slides in the in the session on the

00:00:45,719 --> 00:00:53,879
conference website yeah just briefly

00:00:50,850 --> 00:01:00,570
about myself on drupal my username is

00:00:53,879 --> 00:01:04,619
day then yeah i've been working with

00:01:00,570 --> 00:01:06,600
drupal I think for about seven years and

00:01:04,619 --> 00:01:09,780
i've been working at civic actions for

00:01:06,600 --> 00:01:15,960
around four years drupal developer or

00:01:09,780 --> 00:01:17,610
sysadmin just want to also mention civic

00:01:15,960 --> 00:01:19,680
actions i know we shouldn't do too much

00:01:17,610 --> 00:01:22,590
you know self-promoting over our

00:01:19,680 --> 00:01:25,290
companies but i want to make a claim

00:01:22,590 --> 00:01:27,930
that I think civic actions has the

00:01:25,290 --> 00:01:29,700
highest average height for any Drupal

00:01:27,930 --> 00:01:32,329
company if you take the averages over

00:01:29,700 --> 00:01:34,860
there's a lot of us over 6 feet so

00:01:32,329 --> 00:01:38,479
anyone is welcome to challenge that but

00:01:34,860 --> 00:01:42,310
I think we might be among the tallest

00:01:38,479 --> 00:01:48,350
Drupal companies so

00:01:42,310 --> 00:01:51,500
something to consider and yeah I were in

00:01:48,350 --> 00:01:53,470
the the DevOps track here I think DevOps

00:01:51,500 --> 00:01:56,000
I started becoming interested in that

00:01:53,470 --> 00:02:02,180
subject about a year and a half ago

00:01:56,000 --> 00:02:05,740
really drupal + DevOps really got into

00:02:02,180 --> 00:02:12,110
it more at drupalcon Amsterdam does that

00:02:05,740 --> 00:02:14,780
really great sessions there as well so I

00:02:12,110 --> 00:02:17,600
just thought can everybody hear me ok am

00:02:14,780 --> 00:02:21,320
I in the back everybody thumbs up thank

00:02:17,600 --> 00:02:22,730
you very much so yeah so DevOps track

00:02:21,320 --> 00:02:25,580
welcome and there's a lot of

00:02:22,730 --> 00:02:29,450
good-looking sessions in this so please

00:02:25,580 --> 00:02:32,750
enjoy and this session I'm going to be

00:02:29,450 --> 00:02:35,930
talking about docker and how to use

00:02:32,750 --> 00:02:39,050
docker for your development team so your

00:02:35,930 --> 00:02:40,940
developer sandboxes and I'm also going

00:02:39,050 --> 00:02:44,750
to try to describe how to use it in

00:02:40,940 --> 00:02:47,150
deployment as best as we can and and

00:02:44,750 --> 00:02:52,400
yeah I'll have the time for questions

00:02:47,150 --> 00:02:54,440
afterwards so sandboxes this is a

00:02:52,400 --> 00:03:01,100
picture of my daughter's sandbox she's

00:02:54,440 --> 00:03:05,000
two years old and what what makes up a

00:03:01,100 --> 00:03:07,400
sandbox for a developer not these tools

00:03:05,000 --> 00:03:09,830
but but basically what when you a

00:03:07,400 --> 00:03:12,200
developer starts on a project that for

00:03:09,830 --> 00:03:14,680
your your company doing a Drupal project

00:03:12,200 --> 00:03:18,650
they need the code the git repository

00:03:14,680 --> 00:03:21,200
they need a snapshot of a database and

00:03:18,650 --> 00:03:25,340
then you know the actual running

00:03:21,200 --> 00:03:27,980
services of be it apache or engine X or

00:03:25,340 --> 00:03:31,549
the database running itself of course

00:03:27,980 --> 00:03:33,560
then there's also developer tools SAS

00:03:31,549 --> 00:03:36,750
compass

00:03:33,560 --> 00:03:38,129
code snuffer those kinds of things so

00:03:36,750 --> 00:03:40,410
there's a lot of different components

00:03:38,129 --> 00:03:42,750
and actually this is a growing set

00:03:40,410 --> 00:03:45,750
because we keep coming out with new and

00:03:42,750 --> 00:03:47,519
exciting things right like in injuries

00:03:45,750 --> 00:03:50,069
keynote is talking about the front end

00:03:47,519 --> 00:03:52,349
I'm not a front end guy so I'm really

00:03:50,069 --> 00:03:55,650
not up on that but anger angular

00:03:52,349 --> 00:04:03,060
backbone so all there's a whole slew of

00:03:55,650 --> 00:04:04,349
different things and yeah so typical

00:04:03,060 --> 00:04:07,200
team you have to you have to really

00:04:04,349 --> 00:04:11,610
think about how our developers using all

00:04:07,200 --> 00:04:13,200
these tools together and yeah what what

00:04:11,610 --> 00:04:17,729
does it look like for on your developers

00:04:13,200 --> 00:04:20,609
machine here's here's my daughter

00:04:17,729 --> 00:04:24,180
playing outside of her sandbox who here

00:04:20,609 --> 00:04:28,080
actually supports your team in their

00:04:24,180 --> 00:04:30,300
developers hand box like they have

00:04:28,080 --> 00:04:35,780
problems setting up ramping up into the

00:04:30,300 --> 00:04:35,780
project yeah so about a third of you

00:04:36,169 --> 00:04:42,630
yeah I do that as well and it's hard to

00:04:40,740 --> 00:04:44,669
do because you just never know how

00:04:42,630 --> 00:04:47,729
they're going to use it or how it might

00:04:44,669 --> 00:04:49,229
change so I i think this image is

00:04:47,729 --> 00:04:50,669
interesting because she's like not

00:04:49,229 --> 00:04:52,200
playing with the sandbox she's playing

00:04:50,669 --> 00:04:58,289
with water in her broom outside of the

00:04:52,200 --> 00:05:02,130
sand is so you never know how messy it

00:04:58,289 --> 00:05:06,450
might become for in sandboxes are really

00:05:02,130 --> 00:05:10,919
who has kids sandboxes are messy it gets

00:05:06,450 --> 00:05:12,090
everywhere anyway so that's sort of what

00:05:10,919 --> 00:05:16,700
I'm starting with his talking about

00:05:12,090 --> 00:05:19,820
sandboxes docker came along

00:05:16,700 --> 00:05:26,210
a couple years ago it's a really active

00:05:19,820 --> 00:05:29,180
community I i did a tweet with the

00:05:26,210 --> 00:05:32,900
hashtag docker and i got like 1400

00:05:29,180 --> 00:05:35,660
retweets and no not sorry 1400

00:05:32,900 --> 00:05:37,670
impressions but it's it's a very active

00:05:35,660 --> 00:05:40,340
community there's there's a lot of

00:05:37,670 --> 00:05:41,810
people on Twitter and of course that

00:05:40,340 --> 00:05:46,190
there's darker conferences and

00:05:41,810 --> 00:05:47,660
everything so what is dr. it's um this

00:05:46,190 --> 00:05:50,210
is my description of it it's probably

00:05:47,660 --> 00:05:52,460
broader than this but it's an elegant

00:05:50,210 --> 00:05:56,060
new cross-platform development and

00:05:52,460 --> 00:05:57,860
deployment tool if you go to the website

00:05:56,060 --> 00:06:01,550
the websites really great to actually

00:05:57,860 --> 00:06:04,190
check it out great documentation and

00:06:01,550 --> 00:06:08,390
good intro to docker itself but they

00:06:04,190 --> 00:06:11,270
talk about build ship run and what

00:06:08,390 --> 00:06:13,970
they're describing there is basically a

00:06:11,270 --> 00:06:16,910
common experience for your development

00:06:13,970 --> 00:06:18,560
and deployment that that's in my mind

00:06:16,910 --> 00:06:21,770
that's an underlying goal of what docker

00:06:18,560 --> 00:06:25,070
is so that your your development team is

00:06:21,770 --> 00:06:29,030
essentially using the same stack the

00:06:25,070 --> 00:06:33,200
same tool as what's ending up on

00:06:29,030 --> 00:06:34,910
production in the the primary metaphor

00:06:33,200 --> 00:06:39,110
the primary image for doctor is a

00:06:34,910 --> 00:06:43,100
shipping container which i think is a

00:06:39,110 --> 00:06:45,200
great analogy and i don't want to go too

00:06:43,100 --> 00:06:47,430
far into that but

00:06:45,200 --> 00:06:52,410
actually that will come up later as I

00:06:47,430 --> 00:06:55,260
describe other things but so it's in a

00:06:52,410 --> 00:06:56,790
sense dockers virtualization it's very

00:06:55,260 --> 00:07:00,740
similar to a virtual machine like

00:06:56,790 --> 00:07:06,930
virtual box how many people use vagrant

00:07:00,740 --> 00:07:11,460
Wow like everybody so yeah it's a tool

00:07:06,930 --> 00:07:15,000
very much like vagrant this diagram

00:07:11,460 --> 00:07:17,370
shows this makes it pretty clear for me

00:07:15,000 --> 00:07:19,530
anyway the left side shows kind of how

00:07:17,370 --> 00:07:21,840
vagrant will work with virtualbox or

00:07:19,530 --> 00:07:23,910
whatever the virtualization tool is the

00:07:21,840 --> 00:07:26,400
the underlying infrastructure the

00:07:23,910 --> 00:07:30,120
hardware and the operating system those

00:07:26,400 --> 00:07:33,000
are similar on both of those and then

00:07:30,120 --> 00:07:36,780
with a virtual machine setup you also

00:07:33,000 --> 00:07:39,300
need the hypervisor then the guest OS so

00:07:36,780 --> 00:07:44,670
if you if you're running in this example

00:07:39,300 --> 00:07:46,860
three different applications each one of

00:07:44,670 --> 00:07:48,960
those applications need the entire guest

00:07:46,860 --> 00:07:54,120
operating system including the kernel

00:07:48,960 --> 00:07:55,920
and all of the running things yeah then

00:07:54,120 --> 00:07:57,570
the libraries and everything and then

00:07:55,920 --> 00:08:01,380
your application would be on top of that

00:07:57,570 --> 00:08:04,050
so if you had just an example if you had

00:08:01,380 --> 00:08:06,330
to Drupal projects on the go you could

00:08:04,050 --> 00:08:07,950
have two of them to virtual machines

00:08:06,330 --> 00:08:12,510
running with entire stacks like that

00:08:07,950 --> 00:08:15,540
docker on the right side is way more

00:08:12,510 --> 00:08:17,730
efficient it actually reuses the running

00:08:15,540 --> 00:08:21,270
kernel the running Linux kernel of the

00:08:17,730 --> 00:08:23,700
host is is reused I don't know if I'm

00:08:21,270 --> 00:08:30,510
explaining that well but it it's much

00:08:23,700 --> 00:08:32,700
more lightweight and it's the basically

00:08:30,510 --> 00:08:34,890
you just run your supporting libraries

00:08:32,700 --> 00:08:37,250
or whatever in your application within a

00:08:34,890 --> 00:08:37,250
container

00:08:37,260 --> 00:08:44,880
and what yeah what that allows you to do

00:08:42,120 --> 00:08:46,740
is because it's so lightweight you can

00:08:44,880 --> 00:08:49,260
actually have a whole bunch of

00:08:46,740 --> 00:08:54,890
containers like potentially hundreds of

00:08:49,260 --> 00:08:59,640
containers on the same on the same host

00:08:54,890 --> 00:09:02,160
and if you are like just running similar

00:08:59,640 --> 00:09:05,130
things especially it's more it's more

00:09:02,160 --> 00:09:14,850
efficient to do sort of repeated images

00:09:05,130 --> 00:09:16,950
of a container yeah docker actually I

00:09:14,850 --> 00:09:19,920
should also ask how many people are

00:09:16,950 --> 00:09:21,360
familiar with docker at all so okay a

00:09:19,920 --> 00:09:26,520
lot of you I'm gonna have you used

00:09:21,360 --> 00:09:28,020
docker more than half okay okay I'll try

00:09:26,520 --> 00:09:31,950
to go quicker through sort of the docker

00:09:28,020 --> 00:09:33,210
intro because if you already know some

00:09:31,950 --> 00:09:35,100
you probably already know a lot of these

00:09:33,210 --> 00:09:36,720
things so there's the docker engine

00:09:35,100 --> 00:09:39,390
here's a list of some of the main

00:09:36,720 --> 00:09:42,450
components that I've encountered any way

00:09:39,390 --> 00:09:45,480
in the doctor world the docker engine is

00:09:42,450 --> 00:09:48,540
what's actually running the docker

00:09:45,480 --> 00:09:55,100
containers then there's a docker command

00:09:48,540 --> 00:09:58,410
the CLI so you build and run and so on

00:09:55,100 --> 00:10:02,340
boots docker is a vagrant image that

00:09:58,410 --> 00:10:07,380
runs docker machine basically docker

00:10:02,340 --> 00:10:09,570
compose I think ducker compose a well

00:10:07,380 --> 00:10:13,200
for me it's a very central tool I think

00:10:09,570 --> 00:10:16,590
it's a great way to really organize what

00:10:13,200 --> 00:10:18,930
you're doing and it's well dr. composed

00:10:16,590 --> 00:10:21,840
uses yamo configuration files so troopa

00:10:18,930 --> 00:10:24,250
late people would be familiar with that

00:10:21,840 --> 00:10:27,550
syntax

00:10:24,250 --> 00:10:32,110
docker machine is one of the newer tools

00:10:27,550 --> 00:10:34,450
it's actually replaced the the the

00:10:32,110 --> 00:10:38,800
command line interface of docker astoria

00:10:34,450 --> 00:10:41,440
of boot to docker but it's expanded

00:10:38,800 --> 00:10:44,680
docker machine you can connect to your

00:10:41,440 --> 00:10:46,960
local vagrant boots docker theme but you

00:10:44,680 --> 00:10:52,870
can also use docker machine to connect

00:10:46,960 --> 00:10:54,040
to the cloud it's very powerful tool I

00:10:52,870 --> 00:10:57,510
don't know if it's pronounced kite

00:10:54,040 --> 00:11:03,880
madacorp kinematic but I but that's a

00:10:57,510 --> 00:11:06,460
GUI tool for OS X maybe windows I'm

00:11:03,880 --> 00:11:11,560
actually a Linux guy so I never tried

00:11:06,460 --> 00:11:13,390
that yet it's for windows as well okay

00:11:11,560 --> 00:11:15,910
and I've heard there's actually a way to

00:11:13,390 --> 00:11:19,990
run it inside docker if you want to try

00:11:15,910 --> 00:11:22,740
it in Linux I haven't tried that yet and

00:11:19,990 --> 00:11:28,450
then docker registry so that's for

00:11:22,740 --> 00:11:30,970
sharing your docker images that's pretty

00:11:28,450 --> 00:11:34,150
loose way to put it but yeah you can dr.

00:11:30,970 --> 00:11:36,130
registry can you can very much like get

00:11:34,150 --> 00:11:40,150
in my mind you can kind of push and pull

00:11:36,130 --> 00:11:45,550
images you can commit them and then

00:11:40,150 --> 00:11:49,330
docker hub is is like github docker hub

00:11:45,550 --> 00:11:51,550
is a public free service of docker

00:11:49,330 --> 00:11:57,900
registry with even more features on top

00:11:51,550 --> 00:11:57,900
of that yeah or details on that link

00:11:58,769 --> 00:12:03,389
I should also clarify the difference

00:12:01,379 --> 00:12:08,970
between a docker image and a docker

00:12:03,389 --> 00:12:10,350
container an image is something like in

00:12:08,970 --> 00:12:12,209
a way it's like a snapshot of a

00:12:10,350 --> 00:12:15,629
container and it in a container is a

00:12:12,209 --> 00:12:18,029
running image and that sounds cyclical

00:12:15,629 --> 00:12:20,489
because it kind of sometimes is but you

00:12:18,029 --> 00:12:23,879
can also create an image from a docker

00:12:20,489 --> 00:12:28,379
file very much like a vagrant file where

00:12:23,879 --> 00:12:31,049
it builds an image so a container is

00:12:28,379 --> 00:12:34,610
basically a running instance and what

00:12:31,049 --> 00:12:39,980
can what can you put in a container that

00:12:34,610 --> 00:12:39,980
yeah anything this is a picture of

00:12:40,189 --> 00:12:45,269
shipping containers put together to make

00:12:42,749 --> 00:12:47,399
a nice cottage there's interest there's

00:12:45,269 --> 00:12:48,629
a lot of shipping containers in the

00:12:47,399 --> 00:12:54,449
world and people are being creative

00:12:48,629 --> 00:12:57,809
about them but with a docker container

00:12:54,449 --> 00:13:00,749
can can be as big and complex as a

00:12:57,809 --> 00:13:03,149
virtual machine as you would have in a

00:13:00,749 --> 00:13:06,660
vagrant example but it can actually be

00:13:03,149 --> 00:13:10,499
so simple and small as a single process

00:13:06,660 --> 00:13:13,470
you can have it run just a container can

00:13:10,499 --> 00:13:16,369
just do echo hello world and then it

00:13:13,470 --> 00:13:16,369
shuts down again

00:13:16,450 --> 00:13:22,130
and then you can have a better example

00:13:19,880 --> 00:13:25,779
maybe you would be a container running a

00:13:22,130 --> 00:13:28,100
database and a container running Apache

00:13:25,779 --> 00:13:30,500
but then the question is how to connect

00:13:28,100 --> 00:13:32,810
those together so here's another

00:13:30,500 --> 00:13:34,850
interesting image I've actually learned

00:13:32,810 --> 00:13:37,220
a bit about the shipping world and

00:13:34,850 --> 00:13:39,800
containers as I was preparing this it's

00:13:37,220 --> 00:13:42,650
an interesting space but shipping

00:13:39,800 --> 00:13:45,290
containers can be stuck together to make

00:13:42,650 --> 00:13:49,670
a city but how do you connect them

00:13:45,290 --> 00:13:51,320
together and docker there's ways on the

00:13:49,670 --> 00:13:56,029
command line to do that where you can

00:13:51,320 --> 00:13:57,680
link yeah you can link a container to

00:13:56,029 --> 00:13:59,960
another container so that inside the

00:13:57,680 --> 00:14:05,120
container it knows how to find the other

00:13:59,960 --> 00:14:08,000
one via EDC host mapping and so on but

00:14:05,120 --> 00:14:10,430
in my mind this is this is a doctor

00:14:08,000 --> 00:14:14,360
composed llamo file in my mind this is a

00:14:10,430 --> 00:14:17,810
pretty simple way of understanding those

00:14:14,360 --> 00:14:22,760
connections and I don't know this this

00:14:17,810 --> 00:14:26,839
is a simplified example maybe I took

00:14:22,760 --> 00:14:28,640
this from a real project but there's

00:14:26,839 --> 00:14:32,240
three components to it there's a

00:14:28,640 --> 00:14:35,180
database container PHP container in the

00:14:32,240 --> 00:14:41,510
web container so this project is running

00:14:35,180 --> 00:14:43,490
php-fpm and so the the database doesn't

00:14:41,510 --> 00:14:47,209
really need to connect to anything but

00:14:43,490 --> 00:14:49,420
the PHP container needs to connect to

00:14:47,209 --> 00:14:49,420
the database

00:14:50,800 --> 00:14:56,149
so I don't know if you can see this in

00:14:53,930 --> 00:14:59,959
the back sorry I just wanted to put this

00:14:56,149 --> 00:15:02,029
up as an example but what we're doing

00:14:59,959 --> 00:15:05,389
here is we're defining the database you

00:15:02,029 --> 00:15:07,160
say what image you want Maria DB you can

00:15:05,389 --> 00:15:09,230
set some environment variables so that

00:15:07,160 --> 00:15:12,620
when the container starts up it has

00:15:09,230 --> 00:15:15,170
these values than you expose ports and

00:15:12,620 --> 00:15:17,629
then the PHP container similar thing you

00:15:15,170 --> 00:15:19,970
say what image you want to use what

00:15:17,629 --> 00:15:22,310
command you want to start running that's

00:15:19,970 --> 00:15:26,060
another nice option but then the the

00:15:22,310 --> 00:15:29,000
links section of PHP there is it links

00:15:26,060 --> 00:15:33,050
to the database container so that PHP

00:15:29,000 --> 00:15:35,180
has access to that and then similar with

00:15:33,050 --> 00:15:38,110
the web container and genetics connects

00:15:35,180 --> 00:15:38,110
to PHP so

00:15:42,670 --> 00:15:50,410
anyway that that my mind is is a way to

00:15:47,770 --> 00:15:53,080
use soccer because you can put that in

00:15:50,410 --> 00:15:55,300
your git repository you have

00:15:53,080 --> 00:15:57,700
infrastructure as code you basically

00:15:55,300 --> 00:16:06,880
defined your stack however you need it

00:15:57,700 --> 00:16:09,370
to be more on undock there's I took I

00:16:06,880 --> 00:16:12,070
took this I grabbed this image from the

00:16:09,370 --> 00:16:16,030
dock or website itself I don't really

00:16:12,070 --> 00:16:20,800
know what's going on here I recognize

00:16:16,030 --> 00:16:23,440
the penguin that must be tux right but

00:16:20,800 --> 00:16:25,170
but it looks a little funny but I think

00:16:23,440 --> 00:16:27,640
it's trying to convey docker is fun and

00:16:25,170 --> 00:16:30,370
I agree with that actually really enjoy

00:16:27,640 --> 00:16:38,200
working with it and messing around with

00:16:30,370 --> 00:16:39,760
it and another I really like getting to

00:16:38,200 --> 00:16:43,260
know what people are doing but who's

00:16:39,760 --> 00:16:46,090
running linux on your workstation

00:16:43,260 --> 00:16:49,600
awesome I think this is European thing

00:16:46,090 --> 00:16:52,180
okay at least half I think I'm running

00:16:49,600 --> 00:16:55,690
linux as well on my developer

00:16:52,180 --> 00:16:57,370
workstation and like when I when I

00:16:55,690 --> 00:17:00,040
started playing around with docker I

00:16:57,370 --> 00:17:01,510
downloaded it and it's like wow

00:17:00,040 --> 00:17:04,230
everything is super fast this is an

00:17:01,510 --> 00:17:07,210
amazing tool then I played around with

00:17:04,230 --> 00:17:11,110
fig at the time which became darker

00:17:07,210 --> 00:17:13,750
compose and I was setting up drupal on

00:17:11,110 --> 00:17:16,660
it and I thought this is absolutely

00:17:13,750 --> 00:17:18,490
amazing because we can do infrastructure

00:17:16,660 --> 00:17:20,740
as code we can do lightweight things we

00:17:18,490 --> 00:17:23,610
can switch projects easily because if i

00:17:20,740 --> 00:17:26,770
switch to another directory and do like

00:17:23,610 --> 00:17:28,750
docker composed up then there we go it's

00:17:26,770 --> 00:17:32,050
up and running I was I was just loving

00:17:28,750 --> 00:17:33,940
it and then we're good to go I look on

00:17:32,050 --> 00:17:35,830
the docker website check the

00:17:33,940 --> 00:17:40,140
installation documents and there's like

00:17:35,830 --> 00:17:40,140
a whole list of operating systems there

00:17:41,419 --> 00:17:48,240
so earlier I asked who supports their

00:17:44,970 --> 00:17:51,870
development team does anybody support

00:17:48,240 --> 00:17:59,490
the development team sandboxes using

00:17:51,870 --> 00:18:03,149
docker a few okay yeah so I that I help

00:17:59,490 --> 00:18:05,820
people on board civic actions they get

00:18:03,149 --> 00:18:07,350
on a project than I help them get their

00:18:05,820 --> 00:18:09,809
tool set up or whatever especially new

00:18:07,350 --> 00:18:13,500
employees get up to speed with what

00:18:09,809 --> 00:18:16,799
we're using yeah a lot of people use

00:18:13,500 --> 00:18:20,909
Mac's OS X is very popular I got them to

00:18:16,799 --> 00:18:25,679
install docker and basically looks like

00:18:20,909 --> 00:18:29,240
a shipwreck so this uh this is my

00:18:25,679 --> 00:18:33,240
impression of a max user experience of

00:18:29,240 --> 00:18:35,970
docker so it's really it can be quite

00:18:33,240 --> 00:18:41,100
horrible you this is a by the way this

00:18:35,970 --> 00:18:45,720
is an image of a containership that

00:18:41,100 --> 00:18:48,570
grounded called Reno something yeah so

00:18:45,720 --> 00:18:50,549
it grinds to a halt there's like there's

00:18:48,570 --> 00:18:56,250
containers falling in the water it looks

00:18:50,549 --> 00:18:58,070
horrible so on Mac it is incredibly slow

00:18:56,250 --> 00:19:00,299
and at first I couldn't figure out why

00:18:58,070 --> 00:19:02,519
so I'm trying to support these people

00:19:00,299 --> 00:19:04,380
and I'm looking at my machine and

00:19:02,519 --> 00:19:09,240
everything's amazing and then I look at

00:19:04,380 --> 00:19:14,399
theirs and it's falling apart I found

00:19:09,240 --> 00:19:16,919
out through you know googling that the

00:19:14,399 --> 00:19:20,909
way we were using it we were using the

00:19:16,919 --> 00:19:24,269
official default boot to docker that you

00:19:20,909 --> 00:19:27,690
can get stolen on the docker website it

00:19:24,269 --> 00:19:32,070
uses a file synchronization called vbox

00:19:27,690 --> 00:19:35,309
FS for synchronizing your files so the

00:19:32,070 --> 00:19:37,500
git repository to vagrant and then

00:19:35,309 --> 00:19:39,690
within vagrant it's doing another

00:19:37,500 --> 00:19:43,910
synchronization to the containers so

00:19:39,690 --> 00:19:45,920
there's it was all about file i/o

00:19:43,910 --> 00:19:48,200
and it would and we were I was running

00:19:45,920 --> 00:19:51,530
like a test suite on my computer that

00:19:48,200 --> 00:19:57,520
took two minutes and it was taking 20

00:19:51,530 --> 00:19:57,520
minutes on on a very powerful Mac so

00:19:58,270 --> 00:20:03,380
what do we do about that well since

00:20:01,070 --> 00:20:06,140
we've found out it was about IO that we

00:20:03,380 --> 00:20:10,790
discovered there was another vagrant

00:20:06,140 --> 00:20:14,840
image available out there on on github

00:20:10,790 --> 00:20:19,850
and to the rescue we have there's

00:20:14,840 --> 00:20:22,610
another route to docker that we're using

00:20:19,850 --> 00:20:24,830
thanks let it actually is is lended in

00:20:22,610 --> 00:20:27,560
the room don't know if he's at the

00:20:24,830 --> 00:20:29,750
conference anyway this is awesome we've

00:20:27,560 --> 00:20:34,880
been using this for all our oxs Oh

00:20:29,750 --> 00:20:37,040
little bit OS X users and I'm pretty

00:20:34,880 --> 00:20:40,450
sure it works with Windows we actually

00:20:37,040 --> 00:20:43,550
don't have any windows users sorry if

00:20:40,450 --> 00:20:45,920
that pretty sure there's ways of doing

00:20:43,550 --> 00:20:50,150
docker and windows but I don't have to

00:20:45,920 --> 00:20:58,190
worry but but anyway there is there is

00:20:50,150 --> 00:20:59,660
good news for you on OS X yeah and what

00:20:58,190 --> 00:21:04,180
the big difference was here is that

00:20:59,660 --> 00:21:09,440
instead of using the default vagrant

00:21:04,180 --> 00:21:11,470
file IO sharingan it uses NFS and we are

00:21:09,440 --> 00:21:15,590
getting much better performance on

00:21:11,470 --> 00:21:19,280
running running tests and on actual

00:21:15,590 --> 00:21:24,830
Drupal performance so that's that saved

00:21:19,280 --> 00:21:26,420
us a lot of grief and yeah once we kind

00:21:24,830 --> 00:21:31,400
of got over that hurdle we're actually

00:21:26,420 --> 00:21:33,140
now using docker for basically all of

00:21:31,400 --> 00:21:35,060
our current projects all of our new

00:21:33,140 --> 00:21:36,740
projects there's some old ones that were

00:21:35,060 --> 00:21:40,190
still working

00:21:36,740 --> 00:21:43,460
I don't have it but our primary things

00:21:40,190 --> 00:21:46,700
going on right now so linux and non

00:21:43,460 --> 00:21:52,940
linux we're using docker in for our

00:21:46,700 --> 00:21:57,530
developers so introducing bowlin you can

00:21:52,940 --> 00:22:01,790
pronounce it bowline anyway it's Bolin

00:21:57,530 --> 00:22:03,740
is it's a not a I I enjoy sailing I

00:22:01,790 --> 00:22:07,220
don't sail as often as I want to but

00:22:03,740 --> 00:22:09,350
every sailor knows the bowline knot and

00:22:07,220 --> 00:22:11,450
I thought it's a loose connection to the

00:22:09,350 --> 00:22:14,900
shipping container metaphor I don't

00:22:11,450 --> 00:22:20,510
think any containers you use Bolin's but

00:22:14,900 --> 00:22:22,280
anyway it's a loose connection but

00:22:20,510 --> 00:22:25,400
anyway what is this project basically

00:22:22,280 --> 00:22:27,260
it's a it's a collection of simple bash

00:22:25,400 --> 00:22:32,270
scripts that bring things together for

00:22:27,260 --> 00:22:36,320
docker a docker set up for Drupal it's

00:22:32,270 --> 00:22:38,270
very Drupal focused I started basically

00:22:36,320 --> 00:22:41,840
started about a year ago on this I

00:22:38,270 --> 00:22:43,910
forget when I put it on get up but this

00:22:41,840 --> 00:22:48,410
is what we're primarily using a civic

00:22:43,910 --> 00:22:50,900
actions for our projects originally it

00:22:48,410 --> 00:22:53,420
was actually inspired from the Drupal

00:22:50,900 --> 00:22:55,820
see I test spot at cheers to you

00:22:53,420 --> 00:22:57,830
volunteers who are building that and

00:22:55,820 --> 00:23:00,950
everybody working on that that's a

00:22:57,830 --> 00:23:03,260
really cool infrastructure so I was

00:23:00,950 --> 00:23:06,020
taking ideas from that code from the

00:23:03,260 --> 00:23:09,410
Drupal test but then kind of reworking

00:23:06,020 --> 00:23:15,400
it for projects and boxes so you for

00:23:09,410 --> 00:23:18,200
creating a a Drupal based website

00:23:15,400 --> 00:23:22,370
there's eight contributors for bowlin on

00:23:18,200 --> 00:23:26,130
github but mostly it's all me

00:23:22,370 --> 00:23:28,380
but yeah there's there's been a few

00:23:26,130 --> 00:23:31,940
great little pull request we actually

00:23:28,380 --> 00:23:34,909
hired one of the contributors Cheers I

00:23:31,940 --> 00:23:39,990
think we're still hiring so check it out

00:23:34,909 --> 00:23:44,210
but what is Bolin trying to do should I

00:23:39,990 --> 00:23:51,690
be well there's yeah project goals for

00:23:44,210 --> 00:23:54,179
Bolin flexibility yeah we work with a

00:23:51,690 --> 00:23:56,549
variety of different hosting platforms

00:23:54,179 --> 00:24:00,450
depending on the project sometimes

00:23:56,549 --> 00:24:02,279
projects come with their own yeah

00:24:00,450 --> 00:24:05,070
production and everything like that so

00:24:02,279 --> 00:24:08,970
flexibility was really important to be

00:24:05,070 --> 00:24:11,220
able to also maintaining old websites so

00:24:08,970 --> 00:24:15,029
not just flexibility about deployment

00:24:11,220 --> 00:24:18,870
but flexibility even word what do you do

00:24:15,029 --> 00:24:20,970
with docker six I'm sorry Drupal 6 all

00:24:18,870 --> 00:24:26,129
the way up to Drupal 8 we didn't want it

00:24:20,970 --> 00:24:30,679
to be too rigid for that so that means

00:24:26,129 --> 00:24:30,679
different PHP versions and so on

00:24:32,070 --> 00:24:39,000
another goal quickstart the ideal is a

00:24:35,870 --> 00:24:41,640
new developer or developer comes on the

00:24:39,000 --> 00:24:44,010
project we want them to just you know

00:24:41,640 --> 00:24:47,130
clone the git repository and run build

00:24:44,010 --> 00:24:49,320
and it should do everything for them the

00:24:47,130 --> 00:24:51,090
first time you know we'll have to get

00:24:49,320 --> 00:24:53,220
them installed get docker installed on

00:24:51,090 --> 00:24:56,370
their machine but once that's up and

00:24:53,220 --> 00:25:02,430
running hopefully when commanded near

00:24:56,370 --> 00:25:05,250
there I then import the database okay

00:25:02,430 --> 00:25:07,830
two steps minimal requirements I mean

00:25:05,250 --> 00:25:09,300
docker allows just with the lightweight

00:25:07,830 --> 00:25:13,110
containers you can bake anything you

00:25:09,300 --> 00:25:15,450
want in there it's something that we

00:25:13,110 --> 00:25:21,210
want to do more of there's a lot more to

00:25:15,450 --> 00:25:27,240
to add that what Bolin has its alright

00:25:21,210 --> 00:25:30,330
so the way bolin works it's actually not

00:25:27,240 --> 00:25:34,290
I think this is kind of a distinctive in

00:25:30,330 --> 00:25:38,280
this space actually you bake it right

00:25:34,290 --> 00:25:41,400
into your project repository so it's not

00:25:38,280 --> 00:25:43,740
a command that you have in your system

00:25:41,400 --> 00:25:46,890
that like I don't know like vagrant or

00:25:43,740 --> 00:25:48,510
so many other commands that you do it

00:25:46,890 --> 00:25:51,390
actually it's just a set of bash scripts

00:25:48,510 --> 00:25:53,220
that that you would install right into

00:25:51,390 --> 00:25:57,720
your git repositories let everybody has

00:25:53,220 --> 00:26:00,390
the same tools this might be too small

00:25:57,720 --> 00:26:02,960
but I'll talk through it there's a 11

00:26:00,390 --> 00:26:06,330
line command to install it into your

00:26:02,960 --> 00:26:08,550
repository which is on the top there you

00:26:06,330 --> 00:26:11,270
don't really need to know what it says

00:26:08,550 --> 00:26:14,990
you can just copy and paste it off of

00:26:11,270 --> 00:26:19,310
the bowlin github repository read me as

00:26:14,990 --> 00:26:23,780
as this and what does that do it

00:26:19,310 --> 00:26:25,940
actually creates a secondary remote just

00:26:23,780 --> 00:26:27,860
to clarify this is not something like

00:26:25,940 --> 00:26:30,050
your old dev team would need to do you

00:26:27,860 --> 00:26:31,700
need to do this once so maybe your

00:26:30,050 --> 00:26:33,260
technical lead for the project or

00:26:31,700 --> 00:26:38,720
something would would want to try this

00:26:33,260 --> 00:26:43,930
out you run this command it adds Bolin

00:26:38,720 --> 00:26:47,420
as a repository to your local git repo

00:26:43,930 --> 00:26:48,980
checks out the code so I mean then you

00:26:47,420 --> 00:26:53,630
can always do a diff check what's going

00:26:48,980 --> 00:26:55,910
on right then it actually well it has a

00:26:53,630 --> 00:26:58,910
series of prompts and it says would you

00:26:55,910 --> 00:27:01,730
like to build the docker containers the

00:26:58,910 --> 00:27:07,970
default set from Bolin will I think it

00:27:01,730 --> 00:27:11,870
is PHP 5 by 5 some the default will work

00:27:07,970 --> 00:27:13,310
with Drupal 8 if you need to do an old

00:27:11,870 --> 00:27:15,320
one you probably need to do this and

00:27:13,310 --> 00:27:20,210
then hit know and do manual tweaks to

00:27:15,320 --> 00:27:21,880
get an older PHP and then carry on but

00:27:20,210 --> 00:27:27,250
what's happening here is it finished

00:27:21,880 --> 00:27:29,780
installing it and then say yes install

00:27:27,250 --> 00:27:32,150
sorry if you say yes to build a

00:27:29,780 --> 00:27:35,240
containers it does that it actually runs

00:27:32,150 --> 00:27:37,400
a docker compose command then it spits

00:27:35,240 --> 00:27:41,330
out the container IP addresses that's

00:27:37,400 --> 00:27:43,850
the the docker subnet on your computer

00:27:41,330 --> 00:27:48,980
and if it's the the web container it

00:27:43,850 --> 00:27:50,990
also makes that into a link then if it's

00:27:48,980 --> 00:27:54,260
a brand new project you maybe want to

00:27:50,990 --> 00:27:56,090
initialize the database with site

00:27:54,260 --> 00:28:00,050
install so you can hit yes and it will

00:27:56,090 --> 00:28:02,570
do the dress SI command on on that new

00:28:00,050 --> 00:28:03,980
or more likely you're doing this to an

00:28:02,570 --> 00:28:05,799
existing project so you want to get a

00:28:03,980 --> 00:28:08,879
database snapshot and

00:28:05,799 --> 00:28:08,879
import that

00:28:14,850 --> 00:28:21,980
and what is Bolin providing as I

00:28:19,260 --> 00:28:24,600
mentioned an infrastructure as code so

00:28:21,980 --> 00:28:28,770
essentially that docker compose Gamal

00:28:24,600 --> 00:28:32,270
file where you define define your stack

00:28:28,770 --> 00:28:34,080
and check out the docker compose

00:28:32,270 --> 00:28:37,410
documentation for all the things you can

00:28:34,080 --> 00:28:40,050
do there but it's also providing bash

00:28:37,410 --> 00:28:43,800
script so you can you can run your test

00:28:40,050 --> 00:28:46,680
Suites and do your imports and backups

00:28:43,800 --> 00:28:52,560
and things like that it's it's all added

00:28:46,680 --> 00:28:54,780
in it's also it's written it with mind

00:28:52,560 --> 00:29:00,300
that you can easily add more things to

00:28:54,780 --> 00:29:01,950
those commands like there's a simple run

00:29:00,300 --> 00:29:03,840
command where you run your your test

00:29:01,950 --> 00:29:07,620
suite so the idea is you could add what

00:29:03,840 --> 00:29:10,590
you need to for that project so that the

00:29:07,620 --> 00:29:14,730
tools automation it's all baked into

00:29:10,590 --> 00:29:17,460
your git repository so once you have the

00:29:14,730 --> 00:29:19,620
once you have bowlin installed well then

00:29:17,460 --> 00:29:23,910
you can push it if you like it and then

00:29:19,620 --> 00:29:25,500
forget about it or like you you can even

00:29:23,910 --> 00:29:28,170
remove the get remote if you're done

00:29:25,500 --> 00:29:33,810
with it but then what your developers do

00:29:28,170 --> 00:29:37,140
your developer team yeah they do the

00:29:33,810 --> 00:29:40,040
gate clone of your Drupal project then

00:29:37,140 --> 00:29:46,410
there's a command called activate so

00:29:40,040 --> 00:29:51,630
sorry this is bash code works in Z shell

00:29:46,410 --> 00:29:54,270
as well then you source this activate so

00:29:51,630 --> 00:29:57,180
that's dot space bin slash activate and

00:29:54,270 --> 00:29:59,690
I just add something to your path so

00:29:57,180 --> 00:30:03,090
that you have new commands available

00:29:59,690 --> 00:30:05,870
such as the following ones you run build

00:30:03,090 --> 00:30:09,630
and that will

00:30:05,870 --> 00:30:12,060
run the docker compose to start up the

00:30:09,630 --> 00:30:15,320
containers once the containers are up

00:30:12,060 --> 00:30:20,400
and running then you use settings in it

00:30:15,320 --> 00:30:22,980
and that will actually add a little

00:30:20,400 --> 00:30:25,650
snippet to the end of settings PHP and

00:30:22,980 --> 00:30:31,140
Drupal and it will check if the file

00:30:25,650 --> 00:30:32,820
exists for the docker settings and if it

00:30:31,140 --> 00:30:36,840
does it will include those so then

00:30:32,820 --> 00:30:38,670
Drupal will know from that command it

00:30:36,840 --> 00:30:42,530
will add that that check than Drupal

00:30:38,670 --> 00:30:42,530
will know where to find the database

00:30:43,610 --> 00:30:50,370
then there's a poll command which is

00:30:47,600 --> 00:30:52,950
totally project specific so you kind of

00:30:50,370 --> 00:30:58,110
have to put in your own things there but

00:30:52,950 --> 00:31:00,000
pull will pull in a database snapshot so

00:30:58,110 --> 00:31:02,910
that's pull it you can eat of course

00:31:00,000 --> 00:31:06,000
your credentials to your project your

00:31:02,910 --> 00:31:08,070
SSH keys but we have pulled set up to

00:31:06,000 --> 00:31:15,120
pull in that or you can also have a pull

00:31:08,070 --> 00:31:18,060
in any assets file assets into like into

00:31:15,120 --> 00:31:20,220
your site's files folder basically put

00:31:18,060 --> 00:31:23,090
pull in you put in the PostScript

00:31:20,220 --> 00:31:24,900
whatever the developer needs to download

00:31:23,090 --> 00:31:26,940
including of course the database

00:31:24,900 --> 00:31:30,420
snapshot the import command obviously

00:31:26,940 --> 00:31:33,750
imports the SQL snapshot into the

00:31:30,420 --> 00:31:40,710
database and you're done then drush you

00:31:33,750 --> 00:31:43,230
a lie of course gives you log in when

00:31:40,710 --> 00:31:46,380
you run drush it's important note it's

00:31:43,230 --> 00:31:50,490
actually running drush in it's doing a

00:31:46,380 --> 00:31:53,700
docker command to run drush so it'll do

00:31:50,490 --> 00:31:55,770
docker exec something but that's the

00:31:53,700 --> 00:31:58,740
dress will run drush inside of the

00:31:55,770 --> 00:32:01,200
running container so all of your dress

00:31:58,740 --> 00:32:03,730
commands I crush you alive well we'll do

00:32:01,200 --> 00:32:06,010
that it will give you your login

00:32:03,730 --> 00:32:11,230
if you want to hear clear cache whatever

00:32:06,010 --> 00:32:17,910
so yeah command highlights I already

00:32:11,230 --> 00:32:21,220
went over a bunch of these ya know

00:32:17,910 --> 00:32:23,650
that's a current discussion because I

00:32:21,220 --> 00:32:25,900
want to make it available both ways I

00:32:23,650 --> 00:32:28,300
had a discussion with one of my

00:32:25,900 --> 00:32:31,060
co-workers about that that it might be

00:32:28,300 --> 00:32:34,030
more intuitive to have it like bowlin

00:32:31,060 --> 00:32:36,790
build and Bolin import but right now

00:32:34,030 --> 00:32:39,910
that what that funny line is doing the

00:32:36,790 --> 00:32:42,760
dot space bin slash activate that's

00:32:39,910 --> 00:32:46,500
changing your path so that it includes

00:32:42,760 --> 00:32:50,320
the files in your project /bin directory

00:32:46,500 --> 00:32:54,150
which which is installed in the git repo

00:32:50,320 --> 00:32:59,590
so those are actually just bash commands

00:32:54,150 --> 00:33:01,180
and so maybe that makes sense for build

00:32:59,590 --> 00:33:04,810
or whatever then drush it's actually

00:33:01,180 --> 00:33:06,970
overriding your dress command so if you

00:33:04,810 --> 00:33:08,110
want to use your own drush installed on

00:33:06,970 --> 00:33:13,090
your computer then you just run

00:33:08,110 --> 00:33:16,600
deactivate or open a new bash session

00:33:13,090 --> 00:33:18,160
but yeah so I kind of want to make it

00:33:16,600 --> 00:33:23,080
work both ways but right now it's

00:33:18,160 --> 00:33:26,230
working in this activate mode which is

00:33:23,080 --> 00:33:28,180
working for us so but it would be good

00:33:26,230 --> 00:33:31,740
to have it work either way depending on

00:33:28,180 --> 00:33:31,740
what the developer wants to do so

00:33:34,290 --> 00:33:41,650
so yeah we already talked about building

00:33:37,390 --> 00:33:44,230
import another command is check that's a

00:33:41,650 --> 00:33:49,030
fairly new one I added but that attempts

00:33:44,230 --> 00:33:50,679
to go through your system to make sure

00:33:49,030 --> 00:33:53,830
everything is running that you need for

00:33:50,679 --> 00:33:55,480
docker to work like it does a darker

00:33:53,830 --> 00:33:58,480
version and if it sees that it can't

00:33:55,480 --> 00:34:02,770
connect to the darker engine then it

00:33:58,480 --> 00:34:04,690
will fail and say fix this or whatever

00:34:02,770 --> 00:34:07,809
or you need to run vagrant or whatever

00:34:04,690 --> 00:34:12,159
it is so it's just a series of checks

00:34:07,809 --> 00:34:14,100
pretty handy for ya doing support it

00:34:12,159 --> 00:34:16,869
kind of made things easier for me

00:34:14,100 --> 00:34:18,399
basically HIPAA put a collection of the

00:34:16,869 --> 00:34:20,440
common problems that I've seen people

00:34:18,399 --> 00:34:23,379
have that I've been supporting I put it

00:34:20,440 --> 00:34:25,450
into a bash scripts that might help

00:34:23,379 --> 00:34:28,330
solve problems for other people I hope

00:34:25,450 --> 00:34:32,260
to but then build import backup just

00:34:28,330 --> 00:34:34,570
creates a snapshot of your of the

00:34:32,260 --> 00:34:36,399
database run I think I already talked

00:34:34,570 --> 00:34:40,179
about that but that's the intention of

00:34:36,399 --> 00:34:43,560
running your test suite whatever that

00:34:40,179 --> 00:34:46,450
might be p hat then yeah as I was saying

00:34:43,560 --> 00:34:48,639
when you do activate these commands are

00:34:46,450 --> 00:34:50,800
then overriding your existing commands

00:34:48,639 --> 00:34:52,419
if you have them so your developer

00:34:50,800 --> 00:34:54,429
doesn't have to have drush installed but

00:34:52,419 --> 00:34:57,280
if they do then they activate this

00:34:54,429 --> 00:35:00,490
overrides it but once they exit or the

00:34:57,280 --> 00:35:03,790
deactivate or open a new bash bash

00:35:00,490 --> 00:35:06,900
session then they get their original

00:35:03,790 --> 00:35:09,670
drush again same with composer so

00:35:06,900 --> 00:35:13,180
composer will run PHP composer in the

00:35:09,670 --> 00:35:18,609
container if you need to do composer

00:35:13,180 --> 00:35:21,190
install or composer whatever in PHP cs4

00:35:18,609 --> 00:35:23,410
code sniffing and it that also runs

00:35:21,190 --> 00:35:25,900
inside the container so your whole dev

00:35:23,410 --> 00:35:28,350
team is running the same version of all

00:35:25,900 --> 00:35:28,350
these things

00:35:28,430 --> 00:35:36,470
oh cool I have a broken image on my

00:35:34,490 --> 00:35:42,230
version here but it's up there that's

00:35:36,470 --> 00:35:43,970
cool so Drupal 8 another part of Bolin

00:35:42,230 --> 00:35:48,260
is something called the hoist command

00:35:43,970 --> 00:35:53,089
and that's another sailing metaphor I

00:35:48,260 --> 00:35:55,579
guess but you can hoist the mainsail but

00:35:53,089 --> 00:35:59,089
the idea there is instead of installing

00:35:55,579 --> 00:36:01,010
just what the default Bolin provides to

00:35:59,089 --> 00:36:05,030
get you up and running you can also pull

00:36:01,010 --> 00:36:07,190
in other whatever it is so Drupal 8 all

00:36:05,030 --> 00:36:09,079
you have to do is voiced Drupal core dev

00:36:07,190 --> 00:36:11,059
and if you want to instead of working on

00:36:09,079 --> 00:36:15,200
a Drupal project for a client if you

00:36:11,059 --> 00:36:18,859
want to work on Drupal 8 core there you

00:36:15,200 --> 00:36:20,960
go if you've had like if everything's up

00:36:18,859 --> 00:36:24,880
and running already like you've you have

00:36:20,960 --> 00:36:28,210
a bowline installed you do this it will

00:36:24,880 --> 00:36:32,150
bring up it will actually get clone

00:36:28,210 --> 00:36:36,770
Drupal 8 and move it to the dock root

00:36:32,150 --> 00:36:41,329
folder and go through that build step

00:36:36,770 --> 00:36:42,950
and give you the the IP address and then

00:36:41,329 --> 00:36:48,559
you can dude rush you a lie again and

00:36:42,950 --> 00:36:51,829
whatever other examples be hat code

00:36:48,559 --> 00:36:53,900
ception so out of the box be Bolin

00:36:51,829 --> 00:36:56,140
doesn't provide these but you're testing

00:36:53,900 --> 00:36:56,140
infrastructure

00:36:58,390 --> 00:37:04,930
you probably maybe you want to like

00:37:01,089 --> 00:37:07,380
bring be be hat into into your code so

00:37:04,930 --> 00:37:11,019
everybody your whole dev team can have

00:37:07,380 --> 00:37:13,900
we're using be B hat but code ception is

00:37:11,019 --> 00:37:16,000
also a great looking project but then

00:37:13,900 --> 00:37:17,349
everybody's got the same version of B

00:37:16,000 --> 00:37:20,079
hat because it's running inside a

00:37:17,349 --> 00:37:23,410
container right so you just run that

00:37:20,079 --> 00:37:25,690
command it it actually just changes

00:37:23,410 --> 00:37:30,750
scenes in in this case it changes scenes

00:37:25,690 --> 00:37:34,000
in the composer JSON file and some I

00:37:30,750 --> 00:37:36,789
think it's like five lines of code to do

00:37:34,000 --> 00:37:45,150
that and creates some test directory and

00:37:36,789 --> 00:37:45,150
actually runs the test all right so

00:37:45,800 --> 00:37:53,480
that was developer sandboxes then when

00:37:50,720 --> 00:37:56,510
we get to our CI we wanted to run like a

00:37:53,480 --> 00:37:57,740
full test suite we don't want to the

00:37:56,510 --> 00:37:59,810
developers aren't going to run the whole

00:37:57,740 --> 00:38:01,850
suite it takes out half an hour or more

00:37:59,810 --> 00:38:06,140
depends what what you're doing on how

00:38:01,850 --> 00:38:11,360
many tests you have but yeah it

00:38:06,140 --> 00:38:15,200
basically are so who's using Jenkins so

00:38:11,360 --> 00:38:20,710
we yeah almost everyone more than the

00:38:15,200 --> 00:38:24,530
Linux users so Jenkins basically a

00:38:20,710 --> 00:38:26,690
really advanced task runner this is I

00:38:24,530 --> 00:38:28,940
pulled this change project name but I

00:38:26,690 --> 00:38:31,040
pulled this from one of our projects are

00:38:28,940 --> 00:38:34,850
one of our Jenkins projects this is a

00:38:31,040 --> 00:38:37,730
build step just a few lines of bash so

00:38:34,850 --> 00:38:41,840
we change into the directory we activate

00:38:37,730 --> 00:38:43,850
we build add sleep because that's solved

00:38:41,840 --> 00:38:47,990
in there and then we run the full test

00:38:43,850 --> 00:38:49,670
suite and this is very similar to the

00:38:47,990 --> 00:38:52,610
developers experience because they just

00:38:49,670 --> 00:38:55,750
activate build and they up and they're

00:38:52,610 --> 00:38:55,750
up and running so

00:38:57,190 --> 00:39:01,930
oh and there's no import in this one

00:38:59,859 --> 00:39:04,420
because there's a bit of a trade-off I

00:39:01,930 --> 00:39:07,119
actually have another Jenkins build that

00:39:04,420 --> 00:39:09,400
does the import so it depends how long

00:39:07,119 --> 00:39:12,730
your import takes but there's a

00:39:09,400 --> 00:39:14,140
trade-off for accuracy and time we

00:39:12,730 --> 00:39:17,050
wanted to see test results a little

00:39:14,140 --> 00:39:20,650
sooner so I have another one that looks

00:39:17,050 --> 00:39:22,720
just like this but it doesn't do run it

00:39:20,650 --> 00:39:31,829
does import to get a fresh database

00:39:22,720 --> 00:39:31,829
snapshot okay going back to San boxes

00:39:33,359 --> 00:39:37,839
some key challenges that we faced as I

00:39:36,160 --> 00:39:41,190
already mentioned was the file

00:39:37,839 --> 00:39:46,750
synchronization so it's a third point

00:39:41,190 --> 00:39:50,260
but yeah the boot stalker from blink

00:39:46,750 --> 00:39:54,280
reaction now ffw that one kind of solved

00:39:50,260 --> 00:39:56,980
that for us another problem that we've

00:39:54,280 --> 00:39:58,420
come across if you're developing sorry

00:39:56,980 --> 00:39:59,890
if you're supporting your developers on

00:39:58,420 --> 00:40:02,980
docker you might come across this but

00:39:59,890 --> 00:40:05,200
the docker API changes so if you upgrade

00:40:02,980 --> 00:40:08,920
docker to 1.8 and your develop in your

00:40:05,200 --> 00:40:11,530
developer was I 1.7 then their vagrant

00:40:08,920 --> 00:40:16,260
might be on 1.7 and then it doesn't work

00:40:11,530 --> 00:40:19,480
in shipping containers fall in the ocean

00:40:16,260 --> 00:40:21,550
and then file permissions going

00:40:19,480 --> 00:40:25,930
backwards up the list file permissions

00:40:21,550 --> 00:40:27,930
was was a challenge early on where you

00:40:25,930 --> 00:40:32,829
test uploading a file then it screws up

00:40:27,930 --> 00:40:35,589
whatever lots of file like PHP errors

00:40:32,829 --> 00:40:38,859
can access so in so file

00:40:35,589 --> 00:40:43,859
and that's actually solved in bowlin

00:40:38,859 --> 00:40:46,450
with with a docker entry point excuse me

00:40:43,859 --> 00:40:48,969
the docker entry point is sort of the

00:40:46,450 --> 00:40:51,640
first thing that gets run when the

00:40:48,969 --> 00:40:55,059
container starts and what it does is it

00:40:51,640 --> 00:40:58,989
checks the varge WWE which is the mount

00:40:55,059 --> 00:41:03,640
point of your project it checks the user

00:40:58,989 --> 00:41:05,829
ID of that which is your user it and it

00:41:03,640 --> 00:41:09,489
sets Apache to run as that and in such

00:41:05,829 --> 00:41:12,700
PHP to run as that user so so within the

00:41:09,489 --> 00:41:15,400
container it's we've solved all the file

00:41:12,700 --> 00:41:22,269
permissions problems that we had at the

00:41:15,400 --> 00:41:24,420
start all right so that kind of

00:41:22,269 --> 00:41:26,650
describes boleyn but I also want to

00:41:24,420 --> 00:41:31,180
point out this isn't the only way of

00:41:26,650 --> 00:41:32,829
doing Drupal on docker there's a list

00:41:31,180 --> 00:41:40,029
here i don't know if i'll mention all of

00:41:32,829 --> 00:41:41,890
them through yeah maybe the the vagrant

00:41:40,029 --> 00:41:44,469
Bert Boote to docker that we're using

00:41:41,890 --> 00:41:47,529
goes along with another tool called

00:41:44,469 --> 00:41:51,039
drood I haven't gotten hard to try and I

00:41:47,529 --> 00:41:53,979
get but it does look really good there's

00:41:51,039 --> 00:41:56,849
an official from docker there's an

00:41:53,979 --> 00:42:01,109
official Drupal image I try to briefly

00:41:56,849 --> 00:42:06,700
haven't gotten too far with that one

00:42:01,109 --> 00:42:08,380
another one is Calla box I haven't tried

00:42:06,700 --> 00:42:10,930
that because I'm a linux guy but no I

00:42:08,380 --> 00:42:14,440
think it works on linux now they had a

00:42:10,930 --> 00:42:17,890
presentation in LA and their new version

00:42:14,440 --> 00:42:19,059
is darker based hi I don't I can't

00:42:17,890 --> 00:42:21,130
really speak to what's going on there

00:42:19,059 --> 00:42:23,680
but it looks like a really slick project

00:42:21,130 --> 00:42:26,170
too I think it's sort of the the

00:42:23,680 --> 00:42:29,380
opposite end of the scale of Bolin as it

00:42:26,170 --> 00:42:31,119
has a lot of stuff it does a lot of

00:42:29,380 --> 00:42:34,499
things and Bolin's really trying to be

00:42:31,119 --> 00:42:34,499
lightweight and minimal

00:42:35,250 --> 00:42:38,530
kinematic I don't know why that's here

00:42:37,420 --> 00:42:44,260
actually because it's not really

00:42:38,530 --> 00:42:47,290
offering Drupal on docker and then yeah

00:42:44,260 --> 00:42:49,720
basically you can just try vanilla

00:42:47,290 --> 00:42:55,030
docker tools you can put together your

00:42:49,720 --> 00:42:58,900
own docker composed files in your own

00:42:55,030 --> 00:43:01,030
project and docker machine oh there's

00:42:58,900 --> 00:43:03,130
another project docker machine NFS and

00:43:01,030 --> 00:43:07,020
that will change the the official boot

00:43:03,130 --> 00:43:10,750
to docker vagrant machine to use NFS I

00:43:07,020 --> 00:43:15,940
tried it but it didn't work on linux so

00:43:10,750 --> 00:43:18,700
maybe it works on OSX anyway just to say

00:43:15,940 --> 00:43:23,920
that there's a lot in this space going

00:43:18,700 --> 00:43:26,440
on right now it's a fast moving yeah

00:43:23,920 --> 00:43:27,880
it's fastly moving space I think it's

00:43:26,440 --> 00:43:31,300
hard to keep up with but there's

00:43:27,880 --> 00:43:32,680
alternatives to look at back to bolon I

00:43:31,300 --> 00:43:36,570
asked my co-workers what do you love

00:43:32,680 --> 00:43:39,610
about bowlin they had a bunch of

00:43:36,570 --> 00:43:41,560
encouraging responses but I think the

00:43:39,610 --> 00:43:44,050
most significant one is the third one I

00:43:41,560 --> 00:43:45,820
love that that Boland comes with the day

00:43:44,050 --> 00:43:48,790
then attached out the other end of the

00:43:45,820 --> 00:43:50,500
line so which says a lot about what

00:43:48,790 --> 00:43:53,710
tools you use is what tools can you

00:43:50,500 --> 00:43:57,970
support and I don't do all of the docker

00:43:53,710 --> 00:43:59,320
support but I do most of it so yeah so

00:43:57,970 --> 00:44:02,320
when you're choosing what tools you want

00:43:59,320 --> 00:44:05,620
to try consider how you're going to

00:44:02,320 --> 00:44:09,190
maintain and support it all right

00:44:05,620 --> 00:44:11,210
another thing that I

00:44:09,190 --> 00:44:12,980
hope we have enough time to talk about

00:44:11,210 --> 00:44:18,740
is deployment so let's get this thing

00:44:12,980 --> 00:44:20,420
running on live so right now olin

00:44:18,740 --> 00:44:25,580
basically tries to stay out of the way

00:44:20,420 --> 00:44:31,100
of what's going on we're using a variety

00:44:25,580 --> 00:44:33,320
of hosting platforms we're on AWS and we

00:44:31,100 --> 00:44:36,380
have our own servers so there's a

00:44:33,320 --> 00:44:40,340
mixture so we need to be able to deploy

00:44:36,380 --> 00:44:42,770
and basically you can keep using you can

00:44:40,340 --> 00:44:44,210
use docker for your developers and not

00:44:42,770 --> 00:44:47,930
use docker in production that's what

00:44:44,210 --> 00:44:50,450
we're doing but the ideal is that you

00:44:47,930 --> 00:44:52,130
have the same experience because we're

00:44:50,450 --> 00:44:53,690
using it so even if we're testing as

00:44:52,130 --> 00:44:56,030
well right so same experience for

00:44:53,690 --> 00:44:57,740
Jenkins as it is for the developers the

00:44:56,030 --> 00:45:01,940
ideal is that you also do that in

00:44:57,740 --> 00:45:06,020
production but the current reality is I

00:45:01,940 --> 00:45:11,050
mean there's pantheon aquia AWS and many

00:45:06,020 --> 00:45:11,050
many ways of hosting live drupal

00:45:12,829 --> 00:45:19,190
when when we when we think about taking

00:45:16,569 --> 00:45:23,680
what the developers are working on and

00:45:19,190 --> 00:45:26,779
bringing it through our the pipeline

00:45:23,680 --> 00:45:28,670
like a developer pushes their code then

00:45:26,779 --> 00:45:31,130
it goes through automated tests then and

00:45:28,670 --> 00:45:36,019
maybe go through a full test suite then

00:45:31,130 --> 00:45:38,989
there's another manual QA step user

00:45:36,019 --> 00:45:41,599
acceptance tests then you put it in

00:45:38,989 --> 00:45:44,869
production what we typically have there

00:45:41,599 --> 00:45:47,119
is basically a git commit or get tagged

00:45:44,869 --> 00:45:50,630
or whatever which is still it commits

00:45:47,119 --> 00:45:55,219
that ends up on production so then on

00:45:50,630 --> 00:45:57,049
the prod you might do a get pull and you

00:45:55,219 --> 00:45:59,959
set your tag and so on then you have to

00:45:57,049 --> 00:46:04,459
run drush up DB you have to update your

00:45:59,959 --> 00:46:08,630
your Drupal database in that that works

00:46:04,459 --> 00:46:11,839
very well that's basically how we do it

00:46:08,630 --> 00:46:14,660
another way that the DevOps world is

00:46:11,839 --> 00:46:17,779
seen production happen is actually

00:46:14,660 --> 00:46:21,499
following a docker image so you create

00:46:17,779 --> 00:46:23,989
your code and you and get and everything

00:46:21,499 --> 00:46:25,539
and put it through your CI but what

00:46:23,989 --> 00:46:28,309
you're doing instead is creating a

00:46:25,539 --> 00:46:29,809
docker image with your code in it and

00:46:28,309 --> 00:46:33,229
that image is going through your

00:46:29,809 --> 00:46:35,299
pipeline steps then when we get to the

00:46:33,229 --> 00:46:38,410
point where it's ready to deploy then

00:46:35,299 --> 00:46:41,719
you can actually just switch the running

00:46:38,410 --> 00:46:44,420
images around in your deployed because

00:46:41,719 --> 00:46:46,680
you can do your update database before

00:46:44,420 --> 00:46:49,730
it goes life

00:46:46,680 --> 00:46:53,760
we're not doing that yet but this is a

00:46:49,730 --> 00:46:58,070
throwing that concept of moving like a

00:46:53,760 --> 00:47:00,540
docker image through your pipeline I

00:46:58,070 --> 00:47:03,060
think that's basically described as a

00:47:00,540 --> 00:47:05,760
mutable infrastructure so it's not

00:47:03,060 --> 00:47:06,840
changing it's this thing that you know

00:47:05,760 --> 00:47:09,690
is not changing all the way to

00:47:06,840 --> 00:47:11,100
production so that's something that

00:47:09,690 --> 00:47:13,920
we're working on that we're working

00:47:11,100 --> 00:47:16,110
towards I think the Drupal DevOps

00:47:13,920 --> 00:47:19,530
community is maybe working on that too

00:47:16,110 --> 00:47:23,250
and the way I mean I also think about

00:47:19,530 --> 00:47:25,920
what is the ideal seamless deployment we

00:47:23,250 --> 00:47:28,590
had our we had our civic actions retreat

00:47:25,920 --> 00:47:31,320
a couple of weeks ago and one of the

00:47:28,590 --> 00:47:34,020
best times is making music together this

00:47:31,320 --> 00:47:36,990
is for of my co-workers talented bunch

00:47:34,020 --> 00:47:38,850
and it's a lot of musical talent but

00:47:36,990 --> 00:47:44,240
basically there's this jam session at

00:47:38,850 --> 00:47:47,480
the retreat and I don't know there's a

00:47:44,240 --> 00:47:50,820
dozen musical people and they're just

00:47:47,480 --> 00:47:54,930
seamlessly making music well even like a

00:47:50,820 --> 00:47:56,460
player or to get in and out so you know

00:47:54,930 --> 00:47:59,580
you switch out a guitar player they're

00:47:56,460 --> 00:48:06,170
still making great music and that I

00:47:59,580 --> 00:48:08,250
think is a metaphor for seamless

00:48:06,170 --> 00:48:11,810
deployment on production that we want to

00:48:08,250 --> 00:48:15,210
aim for where you can like switch out

00:48:11,810 --> 00:48:18,440
even just features or something that

00:48:15,210 --> 00:48:18,440
you're adding to your production

00:48:18,790 --> 00:48:28,700
to your production site further ideas

00:48:22,130 --> 00:48:32,560
about things that were working on okay

00:48:28,700 --> 00:48:36,080
I'll actually want to have more time for

00:48:32,560 --> 00:48:38,420
questions so I'm just going to do this

00:48:36,080 --> 00:48:42,770
first point here I talked a lot about

00:48:38,420 --> 00:48:46,220
running the boot darker vagrant theme

00:48:42,770 --> 00:48:49,460
which runs on on yeah which runs vagrant

00:48:46,220 --> 00:48:51,290
that actually for OS X users that

00:48:49,460 --> 00:48:52,910
actually is a resource strain on your

00:48:51,290 --> 00:48:55,070
computer because you have to run to

00:48:52,910 --> 00:48:59,180
computers so an idea that we're working

00:48:55,070 --> 00:49:00,770
on is cloud development where we we're

00:48:59,180 --> 00:49:05,380
using docker machine or something to

00:49:00,770 --> 00:49:08,600
connect to a running docker engine out

00:49:05,380 --> 00:49:11,200
there on a server for development for

00:49:08,600 --> 00:49:16,580
developers another idea we have is to

00:49:11,200 --> 00:49:18,410
have a local headless device like a yeah

00:49:16,580 --> 00:49:23,690
like a super-powered raspberry pi or

00:49:18,410 --> 00:49:25,580
something something like that where you

00:49:23,690 --> 00:49:28,010
just plug it into your network and it's

00:49:25,580 --> 00:49:30,830
the same kind of thing but but then

00:49:28,010 --> 00:49:33,770
you're taking the processing away from

00:49:30,830 --> 00:49:36,470
your development computer I'm not really

00:49:33,770 --> 00:49:39,520
an issue in Linux because it you only

00:49:36,470 --> 00:49:39,520
need 10 s

00:49:41,670 --> 00:49:46,890
yeah and some of these other ideas I'd

00:49:44,010 --> 00:49:50,309
love to to talk more about the

00:49:46,890 --> 00:49:53,220
production deployment to production

00:49:50,309 --> 00:49:58,490
using docker but I just want to wrap it

00:49:53,220 --> 00:50:01,260
up in my yeah just broad strokes

00:49:58,490 --> 00:50:03,599
perspective I think get has really

00:50:01,260 --> 00:50:07,619
really changed the way code management

00:50:03,599 --> 00:50:09,809
has allowed for new workflows though I

00:50:07,619 --> 00:50:11,970
mean github the poll pull request thing

00:50:09,809 --> 00:50:15,210
is is nothing like we've seen before get

00:50:11,970 --> 00:50:17,520
existed I think docker is still pretty

00:50:15,210 --> 00:50:21,829
new but it's really revolutionizing the

00:50:17,520 --> 00:50:25,410
way we do infrastructure and deployment

00:50:21,829 --> 00:50:29,460
yeah and I think it's an exciting place

00:50:25,410 --> 00:50:34,579
to be part of a docker is a exciting

00:50:29,460 --> 00:50:34,579
community to watch so keep an eye on it

00:50:35,089 --> 00:50:42,869
so some takeaways darker darker

00:50:40,440 --> 00:50:47,250
infrastructure can support your

00:50:42,869 --> 00:50:50,010
development team and and your testing

00:50:47,250 --> 00:50:53,099
and production I think that that can be

00:50:50,010 --> 00:50:54,720
proven Bolin might might be a way for

00:50:53,099 --> 00:50:58,220
you to get up and running using docker

00:50:54,720 --> 00:51:01,500
and Drupal but there's other options

00:50:58,220 --> 00:51:05,130
yeah and if while at the conference you

00:51:01,500 --> 00:51:07,040
want to try out Bolin um look for me or

00:51:05,130 --> 00:51:11,670
try it out and let me know what broke

00:51:07,040 --> 00:51:15,829
but i'll be around and and find me and

00:51:11,670 --> 00:51:15,829
finally really i think docker is fun

00:51:16,520 --> 00:51:20,020
yeah

00:51:18,280 --> 00:51:22,510
when I say thank you very much for your

00:51:20,020 --> 00:51:24,010
time but also before you lawd maybe is

00:51:22,510 --> 00:51:27,880
there any questions there's a microphone

00:51:24,010 --> 00:51:30,940
there feel free to if you want me to go

00:51:27,880 --> 00:51:33,720
back and cover something bit more or any

00:51:30,940 --> 00:51:33,720
questions about

00:51:37,050 --> 00:51:43,860
also can review sorry there are a lot of

00:51:42,240 --> 00:51:46,110
people working on these sort of docker

00:51:43,860 --> 00:51:50,670
local development tools we have AB off

00:51:46,110 --> 00:51:53,910
set up for 345 in room 130 okay today

00:51:50,670 --> 00:51:56,640
today and we're going to the Tarot folks

00:51:53,910 --> 00:51:58,350
the hopefully the ffw folks will be

00:51:56,640 --> 00:51:59,640
there yes we're getting like kind of

00:51:58,350 --> 00:52:00,750
show and tell with each other if

00:51:59,640 --> 00:52:02,430
everyone else is interested in trying

00:52:00,750 --> 00:52:03,240
one or out you won't see people demoing

00:52:02,430 --> 00:52:04,290
it on the committee we're going to be

00:52:03,240 --> 00:52:06,390
there so hopefully you can be there too

00:52:04,290 --> 00:52:08,520
yeah that's great I was hoping the Ruby

00:52:06,390 --> 00:52:13,190
of off but I didn't find that one when I

00:52:08,520 --> 00:52:13,190
checked 130

00:52:17,650 --> 00:52:24,040
room 1 30 at 3 45 okay

00:52:25,910 --> 00:52:31,900
just on commentary about the Drupal

00:52:28,130 --> 00:52:36,109
project there is also the Terra ops

00:52:31,900 --> 00:52:40,280
project which is similar to bolon it and

00:52:36,109 --> 00:52:43,789
it's made by John Peck emptied they are

00:52:40,280 --> 00:52:50,180
doing something like you especially for

00:52:43,789 --> 00:52:55,190
drupal and Drupal 8 and but it's not so

00:52:50,180 --> 00:52:57,770
much built for for CI and such okay but

00:52:55,190 --> 00:53:02,020
you can also add it into the list during

00:52:57,770 --> 00:53:10,450
e double r does option it's on github

00:53:02,020 --> 00:53:10,450
okay Tara te double or a okay all right

00:53:12,530 --> 00:53:15,700
I wanted to

00:53:16,670 --> 00:53:19,630
alternatives

00:53:25,900 --> 00:53:28,589
alright

00:53:28,740 --> 00:53:30,800

YouTube URL: https://www.youtube.com/watch?v=REK41OUIY3Y


