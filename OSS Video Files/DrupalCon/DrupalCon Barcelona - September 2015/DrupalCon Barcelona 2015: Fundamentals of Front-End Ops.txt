Title: DrupalCon Barcelona 2015: Fundamentals of Front-End Ops
Publication date: 2015-09-22
Playlist: DrupalCon Barcelona - September 2015
Description: 
	Front-end paradigms are shifting fast, and among the trends singled out are task automation, painless dependency management, and quicker testing. Front-end ops, a term promulgated by Alex Sexton, deals with the synthesis of all of these responsibilities and others that front-end developers today face. We'll talk about a variety of different options available for FEDs to work efficiently and iteratively, such as Yeoman, Grunt, Gulp, Bower, and other lesser-known projects.

Here's what we'll cover:

Why ops? Automation generates consistency
Why front-end ops? Roles, rationales, workflow
Getting started: Scaffolding and setup
Automation: Grunt and Gulp
Linting: Coding standards
CSS: Preprocessing and aggregation
JavaScript: Minification and concatenation
CSS regressions
Testing rendering engines and devices (GhostLab)
Performance testing
Developer tools for debugging
This session assumes some familiarity with the command line.

This is an updated version of a session presented at NYCCamp 2015 and DrupalCamp New Jersey 2015.
Captions: 
	00:00:00,000 --> 00:00:02,610
so let's go ahead get started I know

00:00:01,350 --> 00:00:03,810
that there's a you know probably some

00:00:02,610 --> 00:00:06,330
people still you know having their

00:00:03,810 --> 00:00:08,790
lunches and and coming in my name is

00:00:06,330 --> 00:00:11,280
Preston so I have been a drupal

00:00:08,790 --> 00:00:13,500
developer since 2007 I am develop

00:00:11,280 --> 00:00:15,839
manager at aquiel apps which is a new

00:00:13,500 --> 00:00:17,220
initiative at Acquia and I'm also a

00:00:15,839 --> 00:00:20,340
co-founder of the southern Colorado

00:00:17,220 --> 00:00:22,529
Drupal user group if you actually go to

00:00:20,340 --> 00:00:23,640
my website it's not going to show up

00:00:22,529 --> 00:00:26,189
with anything because I'm currently

00:00:23,640 --> 00:00:30,980
updating it to Drupal 8 so you've been

00:00:26,189 --> 00:00:33,149
warned so just to get a feel for

00:00:30,980 --> 00:00:36,510
everyone who's here today how many of

00:00:33,149 --> 00:00:38,700
you are front-end developers oh wow all

00:00:36,510 --> 00:00:40,410
right a lot of people okay so a lot of

00:00:38,700 --> 00:00:43,469
this information might be kind of old

00:00:40,410 --> 00:00:45,059
hat I'm hoping that you know I'm you

00:00:43,469 --> 00:00:46,739
know hopeful that that this presentation

00:00:45,059 --> 00:00:49,170
will be a very comprehensive look at a

00:00:46,739 --> 00:00:50,160
lot of different possible tools that you

00:00:49,170 --> 00:00:52,949
can use and integrate into your

00:00:50,160 --> 00:00:55,350
workflows and you know hopefully maybe

00:00:52,949 --> 00:00:58,410
even sprinkling some Drupal as well how

00:00:55,350 --> 00:00:59,760
many of you are drupal developers okay

00:00:58,410 --> 00:01:01,620
great so everybody as well all right so

00:00:59,760 --> 00:01:02,760
it's got a great like Venn diagram here

00:01:01,620 --> 00:01:05,939
it's awesome that's like you know

00:01:02,760 --> 00:01:07,710
complete circle so let me just um you

00:01:05,939 --> 00:01:09,150
know outline just a little bit what

00:01:07,710 --> 00:01:10,409
we're going to talk about today first

00:01:09,150 --> 00:01:12,030
thing I want to do is I want to motivate

00:01:10,409 --> 00:01:14,850
front adopts I want to you know talk

00:01:12,030 --> 00:01:16,619
about what is fronted ops and why do we

00:01:14,850 --> 00:01:19,290
even care about it where do the term

00:01:16,619 --> 00:01:21,030
come from what's it about and then I'll

00:01:19,290 --> 00:01:23,250
dig into some of the more technical

00:01:21,030 --> 00:01:25,290
aspects of it such as scaffolding and

00:01:23,250 --> 00:01:27,150
declaring the pendants ease things like

00:01:25,290 --> 00:01:28,290
task automation grunt and gulp and you

00:01:27,150 --> 00:01:30,450
know as I'm sure many of you have heard

00:01:28,290 --> 00:01:31,860
of I also want to talk a little bit

00:01:30,450 --> 00:01:36,000
about visual regressions and rendering

00:01:31,860 --> 00:01:38,240
and testing those sorts of problems that

00:01:36,000 --> 00:01:40,590
might arise from what you're getting and

00:01:38,240 --> 00:01:42,210
then finally I you know want to open it

00:01:40,590 --> 00:01:44,369
up hopefully at the very end if we have

00:01:42,210 --> 00:01:46,189
some time for some discussion about some

00:01:44,369 --> 00:01:48,060
of the tools that we use and and and

00:01:46,189 --> 00:01:50,700
what people like to use in their

00:01:48,060 --> 00:01:53,430
workflows and how we can sort of get a

00:01:50,700 --> 00:01:55,290
lot of kind of you know this high drain

00:01:53,430 --> 00:01:59,719
of interesting ideas from this audience

00:01:55,290 --> 00:02:03,149
so let's go ahead and it started why ops

00:01:59,719 --> 00:02:04,829
you know the really key thing about

00:02:03,149 --> 00:02:06,360
automating your tasks and automating

00:02:04,829 --> 00:02:08,310
your workflow is that automation

00:02:06,360 --> 00:02:11,280
engenders consistency what does that

00:02:08,310 --> 00:02:13,410
mean it means that any time you run a

00:02:11,280 --> 00:02:14,460
task or anytime you do something

00:02:13,410 --> 00:02:16,440
it's always going to be the same no

00:02:14,460 --> 00:02:18,210
matter what and this is a very key point

00:02:16,440 --> 00:02:20,040
because oftentimes you know back in the

00:02:18,210 --> 00:02:21,690
day back in the 90s or in the you know

00:02:20,040 --> 00:02:24,450
early 2000s we didn't have any of these

00:02:21,690 --> 00:02:26,340
tools and you know putting in a typo in

00:02:24,450 --> 00:02:28,020
your JavaScript or putting in a typo in

00:02:26,340 --> 00:02:30,840
your CSS would be something that's very

00:02:28,020 --> 00:02:32,480
hard to catch and you know we have a lot

00:02:30,840 --> 00:02:34,680
of tools now available that help us to

00:02:32,480 --> 00:02:38,340
alleviate that the impact of those

00:02:34,680 --> 00:02:40,440
problems why ups well also we know we

00:02:38,340 --> 00:02:41,730
can begin to develop iteratively what

00:02:40,440 --> 00:02:42,840
you know what that means is that you

00:02:41,730 --> 00:02:45,300
know a lot of us have switched over to

00:02:42,840 --> 00:02:48,150
an agile workflow 2 into a 2 into an

00:02:45,300 --> 00:02:49,740
agile approach to working on code and

00:02:48,150 --> 00:02:52,440
what that means is you know we can

00:02:49,740 --> 00:02:55,050
actually begin to repetitively you know

00:02:52,440 --> 00:02:56,940
go through and and you know figure out

00:02:55,050 --> 00:02:59,460
what were the best ways to actually

00:02:56,940 --> 00:03:00,690
create a process rather than just a

00:02:59,460 --> 00:03:04,230
project and I'll talk a little bit more

00:03:00,690 --> 00:03:05,910
about that in a few minutes so you know

00:03:04,230 --> 00:03:08,900
a lot of you have probably heard of the

00:03:05,910 --> 00:03:11,910
term DevOps you know DevOps is really

00:03:08,900 --> 00:03:14,160
the sort of back end analog to front

00:03:11,910 --> 00:03:16,470
adopts and you know the whole idea of

00:03:14,160 --> 00:03:18,570
fun adopts really came about from the

00:03:16,470 --> 00:03:19,740
idea of bringing DevOps at the front end

00:03:18,570 --> 00:03:21,270
bringing more automation at the front

00:03:19,740 --> 00:03:22,860
end you know obviously we're very

00:03:21,270 --> 00:03:24,690
familiar with things like Jenkins and

00:03:22,860 --> 00:03:27,390
Travis CI all these things are things

00:03:24,690 --> 00:03:29,670
that help us to alleviate a lot of the

00:03:27,390 --> 00:03:31,980
pain that we suffer from having to you

00:03:29,670 --> 00:03:35,910
know but you know have built tasks and

00:03:31,980 --> 00:03:39,870
and deploy our code so you know nowadays

00:03:35,910 --> 00:03:42,270
with the sort of rapidly accelerating

00:03:39,870 --> 00:03:43,800
front end and innovation that's going on

00:03:42,270 --> 00:03:46,500
in the web development space a lot of

00:03:43,800 --> 00:03:47,970
the tasks that we have been asked to do

00:03:46,500 --> 00:03:50,310
as friend developers can be better

00:03:47,970 --> 00:03:51,600
served with automation in the past you

00:03:50,310 --> 00:03:53,760
know we only had to worry about a couple

00:03:51,600 --> 00:03:56,280
of assets let's say maybe an HTML file

00:03:53,760 --> 00:03:59,310
or some CSS files maybe some JavaScript

00:03:56,280 --> 00:04:01,020
you know if you're lucky but today we

00:03:59,310 --> 00:04:02,700
have a lot of new abstractions and

00:04:01,020 --> 00:04:04,560
frameworks that really change the way

00:04:02,700 --> 00:04:06,090
that we work we have things like CSS

00:04:04,560 --> 00:04:08,280
preprocessors we have things like

00:04:06,090 --> 00:04:10,440
aggregated JavaScript things that really

00:04:08,280 --> 00:04:11,850
really you know we have two things that

00:04:10,440 --> 00:04:13,500
we really have to care about when it

00:04:11,850 --> 00:04:17,010
comes to the standpoint of performance

00:04:13,500 --> 00:04:18,930
and so on so forth so what is funded ops

00:04:17,010 --> 00:04:21,900
exactly well fronted ops is a is a term

00:04:18,930 --> 00:04:24,210
that was first promulgated by Alex

00:04:21,900 --> 00:04:25,860
Sexton in an article in smashing

00:04:24,210 --> 00:04:27,930
magazine about two years ago

00:04:25,860 --> 00:04:30,150
and you know basically he noticed this

00:04:27,930 --> 00:04:31,740
trend where a lot of application logic

00:04:30,150 --> 00:04:32,969
that was formerly on the server side is

00:04:31,740 --> 00:04:34,409
being moved over the client side and

00:04:32,969 --> 00:04:36,360
we've you know notice that you know I

00:04:34,409 --> 00:04:38,250
think Teresa little to it briefly in the

00:04:36,360 --> 00:04:41,310
keno with this trend toward client-side

00:04:38,250 --> 00:04:43,139
app cindy couple drupal and the key

00:04:41,310 --> 00:04:44,849
difference between front-end development

00:04:43,139 --> 00:04:46,620
which is what we all do on a daily basis

00:04:44,849 --> 00:04:48,900
and front-end ops is the emphasis on

00:04:46,620 --> 00:04:50,400
process and the way i like to say it is

00:04:48,900 --> 00:04:53,189
that you know front-end ops is about

00:04:50,400 --> 00:04:55,349
process it's it's it's not about the

00:04:53,189 --> 00:04:57,030
project when you're actually working on

00:04:55,349 --> 00:04:59,219
your ops in front adopts workflow it's

00:04:57,030 --> 00:05:01,139
really not at all about the end result

00:04:59,219 --> 00:05:03,599
of your product it's the end result of

00:05:01,139 --> 00:05:07,289
your process it's the end result of what

00:05:03,599 --> 00:05:09,509
kind of workflow you end up with so as

00:05:07,289 --> 00:05:12,150
you know Sexton says he says there's now

00:05:09,509 --> 00:05:13,650
too much work for front of developers to

00:05:12,150 --> 00:05:15,539
really do this on you know on their own

00:05:13,650 --> 00:05:17,659
there has to be some sort of automation

00:05:15,539 --> 00:05:19,680
that takes place in order to to really

00:05:17,659 --> 00:05:21,080
reduce the amount of time that we're

00:05:19,680 --> 00:05:24,719
spending doing doing a lot of this work

00:05:21,080 --> 00:05:26,610
so having a focus on operations yields a

00:05:24,719 --> 00:05:28,319
much more iterative workflow it means

00:05:26,610 --> 00:05:29,819
that we can do things a lot faster that

00:05:28,319 --> 00:05:32,339
means that we can test things a lot

00:05:29,819 --> 00:05:36,210
faster and you know do a lot of these

00:05:32,339 --> 00:05:38,159
things in a very efficient way as Chris

00:05:36,210 --> 00:05:40,379
rupal says and he he's probably here

00:05:38,159 --> 00:05:41,490
somewhere i crippled con friend adopts

00:05:40,379 --> 00:05:43,949
is that is how to automate the process

00:05:41,490 --> 00:05:45,240
of breaking things when you have when

00:05:43,949 --> 00:05:46,949
you introduce a blog accidentally in

00:05:45,240 --> 00:05:48,060
your CSS or in your JavaScript you

00:05:46,949 --> 00:05:50,190
really want to be able to catch that

00:05:48,060 --> 00:05:51,839
immediately we don't want to have to you

00:05:50,190 --> 00:05:53,190
know dig through a thousand lines of

00:05:51,839 --> 00:05:56,099
code to figure out what exactly is going

00:05:53,190 --> 00:05:57,210
on so you know before other friend of

00:05:56,099 --> 00:05:59,490
workflow looks something like this you

00:05:57,210 --> 00:06:00,960
know we had a very traditional sort of

00:05:59,490 --> 00:06:03,000
you know maybe we you know download

00:06:00,960 --> 00:06:05,430
Drupal we have a basic directory

00:06:03,000 --> 00:06:07,020
structure and it's pretty easy to manage

00:06:05,430 --> 00:06:09,689
because you know Drupal you know at

00:06:07,020 --> 00:06:11,520
least before Drupal 7 let's say was

00:06:09,689 --> 00:06:12,659
actually pretty small if you look at

00:06:11,520 --> 00:06:15,000
Triple Eight now obviously it's kind of

00:06:12,659 --> 00:06:18,180
a huge crazy directory structure that's

00:06:15,000 --> 00:06:20,069
a lot that demands a lot more automation

00:06:18,180 --> 00:06:21,689
um you know you might add a few

00:06:20,069 --> 00:06:23,699
dependencies you know things like jQuery

00:06:21,689 --> 00:06:25,919
which is which is in core you know you

00:06:23,699 --> 00:06:27,719
might want to have some some other

00:06:25,919 --> 00:06:30,300
dependencies that that that you're

00:06:27,719 --> 00:06:31,889
working with and then you know you might

00:06:30,300 --> 00:06:34,020
upload a few know my edit a few files

00:06:31,889 --> 00:06:38,130
you might change some lines of code you

00:06:34,020 --> 00:06:39,210
upload it and there's your site so today

00:06:38,130 --> 00:06:40,830
we have a lot of

00:06:39,210 --> 00:06:42,750
things that we've been happy that we've

00:06:40,830 --> 00:06:44,370
been tasked with nowadays you know

00:06:42,750 --> 00:06:45,810
things like you know scaffolding is

00:06:44,370 --> 00:06:47,430
something that actually might be very

00:06:45,810 --> 00:06:48,780
complicated because your application

00:06:47,430 --> 00:06:51,690
architecture or your site architecture

00:06:48,780 --> 00:06:53,009
might be very very complex you know

00:06:51,690 --> 00:06:54,660
things like downloading libraries and

00:06:53,009 --> 00:06:56,250
frameworks how do you actually keep all

00:06:54,660 --> 00:06:57,900
of your dependencies up to date you know

00:06:56,250 --> 00:07:00,930
how do you keep your jQuery version up

00:06:57,900 --> 00:07:02,400
to the most current stable version you

00:07:00,930 --> 00:07:03,960
know things like sass and compass which

00:07:02,400 --> 00:07:05,970
are CSS preprocessors how do you

00:07:03,960 --> 00:07:08,160
actually manage all of the CSS files

00:07:05,970 --> 00:07:09,960
that you have and and and you know you

00:07:08,160 --> 00:07:12,780
know turn your partials into it into a

00:07:09,960 --> 00:07:14,460
sort of comprehensive CSS file um can

00:07:12,780 --> 00:07:15,690
you know obviously coding standards is

00:07:14,460 --> 00:07:17,250
very important especially on a large

00:07:15,690 --> 00:07:19,289
team if you have a team of you know 5 to

00:07:17,250 --> 00:07:20,910
10 people or even more people you really

00:07:19,289 --> 00:07:22,530
want to enforce certain standards that

00:07:20,910 --> 00:07:24,900
will make a lot of sense and you know

00:07:22,530 --> 00:07:27,479
ensure that people don't introduce a lot

00:07:24,900 --> 00:07:29,310
of mistakes finally you've got you know

00:07:27,479 --> 00:07:30,539
test Suites and debugging tools these

00:07:29,310 --> 00:07:33,330
can all be integrated into your front

00:07:30,539 --> 00:07:34,889
adopts workflow and you know we also

00:07:33,330 --> 00:07:36,419
have very diverse needs I mean we you

00:07:34,889 --> 00:07:37,919
know we we have a lot of test-driven

00:07:36,419 --> 00:07:40,050
development nowadays you know we have to

00:07:37,919 --> 00:07:42,120
do a lot of unit testing we have

00:07:40,050 --> 00:07:43,740
minification and concatenation to really

00:07:42,120 --> 00:07:46,050
improve the way that we load JavaScript

00:07:43,740 --> 00:07:47,220
we have performance testing you know we

00:07:46,050 --> 00:07:50,550
have to worry about how quickly our

00:07:47,220 --> 00:07:51,780
pages load display testing really

00:07:50,550 --> 00:07:53,940
scrutinizing things like visual

00:07:51,780 --> 00:07:55,590
aggressions and and changes to CSS that

00:07:53,940 --> 00:07:57,479
might impact the way your pages look and

00:07:55,590 --> 00:07:58,590
you know finally builds a deployment you

00:07:57,479 --> 00:08:00,389
can actually integrate a lot of this

00:07:58,590 --> 00:08:04,800
work into let's say your Jenkins

00:08:00,389 --> 00:08:08,130
workflow or or stuff like that so you

00:08:04,800 --> 00:08:09,389
know this is sort of a period where

00:08:08,130 --> 00:08:12,509
we're seeing a lot of new abstractions

00:08:09,389 --> 00:08:14,250
you know every major sort of base

00:08:12,509 --> 00:08:15,509
language that we have or you know based

00:08:14,250 --> 00:08:16,889
markup language or base programming

00:08:15,509 --> 00:08:19,710
language all we have has an abstraction

00:08:16,889 --> 00:08:23,130
like coffee script or Hamel for HTML or

00:08:19,710 --> 00:08:25,110
SAS and less than stylus for CSS so more

00:08:23,130 --> 00:08:27,360
abstraction means more overhead you know

00:08:25,110 --> 00:08:29,340
what this means is that if you have more

00:08:27,360 --> 00:08:31,409
team members it means you can get really

00:08:29,340 --> 00:08:33,539
misaligned code if you have merge

00:08:31,409 --> 00:08:34,649
conflicts that are due to you know minor

00:08:33,539 --> 00:08:36,839
errors that could have been resolved

00:08:34,649 --> 00:08:38,159
through an automated process those

00:08:36,839 --> 00:08:40,829
things are things that slow you down as

00:08:38,159 --> 00:08:43,110
a team and you really don't want to push

00:08:40,829 --> 00:08:46,260
back the progress of your project with

00:08:43,110 --> 00:08:47,910
problems like that more fun and code of

00:08:46,260 --> 00:08:51,180
course means more risk of error if you

00:08:47,910 --> 00:08:53,250
have a you know 30 kilobyte javascript

00:08:51,180 --> 00:08:54,960
file chances are you know probably

00:08:53,250 --> 00:08:56,280
you some some small bugs or some errors

00:08:54,960 --> 00:08:58,860
if you're working with that constantly

00:08:56,280 --> 00:09:00,390
especially in a large team and of course

00:08:58,860 --> 00:09:04,140
more users means more drags on

00:09:00,390 --> 00:09:05,700
performance so we need an easier way to

00:09:04,140 --> 00:09:07,350
do all these things we need an easier

00:09:05,700 --> 00:09:09,390
way to accomplish all of these tasks and

00:09:07,350 --> 00:09:11,640
the way that we can do that is with

00:09:09,390 --> 00:09:14,160
these tools that are available that are

00:09:11,640 --> 00:09:15,930
currently in quite wide use in the web

00:09:14,160 --> 00:09:19,080
de palma community you've probably heard

00:09:15,930 --> 00:09:21,210
of these yeomen which is really good for

00:09:19,080 --> 00:09:22,470
app scaffolding if you want a scaffold

00:09:21,210 --> 00:09:26,150
your directory structure what I mean by

00:09:22,470 --> 00:09:29,160
that is you actually introduce a

00:09:26,150 --> 00:09:30,660
generator that will produce the

00:09:29,160 --> 00:09:32,070
directory structure and all the files

00:09:30,660 --> 00:09:33,840
that you need to begin working on your

00:09:32,070 --> 00:09:35,280
project in a very very efficient and

00:09:33,840 --> 00:09:37,590
quick manner instead of having to go

00:09:35,280 --> 00:09:38,760
through and declare all of your you know

00:09:37,590 --> 00:09:40,820
and create new files and creating

00:09:38,760 --> 00:09:43,530
folders yeoman can do all that for you

00:09:40,820 --> 00:09:45,920
Bauer is a very very good tool for

00:09:43,530 --> 00:09:48,390
dependency management it's a way to

00:09:45,920 --> 00:09:50,520
allow you to really introspect and

00:09:48,390 --> 00:09:56,430
update all of your dependencies in a

00:09:50,520 --> 00:09:58,770
very very clear and sort of a constant

00:09:56,430 --> 00:10:01,110
manner grunt and gulp are really about

00:09:58,770 --> 00:10:02,550
task automation so their task winners

00:10:01,110 --> 00:10:03,990
that help you accomplish things that you

00:10:02,550 --> 00:10:06,150
really don't want to do on your own or

00:10:03,990 --> 00:10:07,530
that you know is really going to slow

00:10:06,150 --> 00:10:09,360
you down from this from a development

00:10:07,530 --> 00:10:11,040
from a development standpoint you know

00:10:09,360 --> 00:10:12,030
when you're developing you really don't

00:10:11,040 --> 00:10:13,320
want to worry about things like

00:10:12,030 --> 00:10:14,640
aggregation you really don't want to

00:10:13,320 --> 00:10:16,110
worry about things like CSS

00:10:14,640 --> 00:10:20,400
pre-processing you want all of that to

00:10:16,110 --> 00:10:22,170
be done for you so according to addy

00:10:20,400 --> 00:10:24,900
Osmani who's one of the sort of big

00:10:22,170 --> 00:10:26,880
proponents of front-end ops you know the

00:10:24,900 --> 00:10:28,710
new workflow helps us because we can

00:10:26,880 --> 00:10:30,290
customize our setups and what this means

00:10:28,710 --> 00:10:32,400
is that we can actually go in and

00:10:30,290 --> 00:10:34,830
configure the way that we want our ops

00:10:32,400 --> 00:10:36,450
workflow to work we can limit the time

00:10:34,830 --> 00:10:37,800
that we spend writing boilerplate code

00:10:36,450 --> 00:10:41,160
you know we can limit the time that we

00:10:37,800 --> 00:10:43,710
spend writing our info files or that

00:10:41,160 --> 00:10:45,240
info yeah mo in the case of Drupal 8 and

00:10:43,710 --> 00:10:47,339
you know we can also improve our

00:10:45,240 --> 00:10:48,330
productivity and delight during

00:10:47,339 --> 00:10:50,100
development and that's the whole goal

00:10:48,330 --> 00:10:52,110
right we want to have fun we want to be

00:10:50,100 --> 00:10:55,290
able to do things that we enjoy and not

00:10:52,110 --> 00:10:58,320
worry about the hard stuff or at least

00:10:55,290 --> 00:10:59,790
the boring stuff right so let's talk

00:10:58,320 --> 00:11:01,350
about yeoman first how many of you have

00:10:59,790 --> 00:11:05,250
heard of the omen or have used yeoman

00:11:01,350 --> 00:11:06,720
okay so about half and half so yeoman is

00:11:05,250 --> 00:11:08,339
interesting because it's actual

00:11:06,720 --> 00:11:10,860
Lee you know and this this whole

00:11:08,339 --> 00:11:13,110
ecosystem of tools for front-end ops

00:11:10,860 --> 00:11:15,120
really have a lot of cross dependencies

00:11:13,110 --> 00:11:16,709
on each other so yeoman explicitly

00:11:15,120 --> 00:11:18,870
recommends a workflow that involves

00:11:16,709 --> 00:11:19,949
Bower and grunt or gulp whichever one

00:11:18,870 --> 00:11:22,019
you shoot whichever task when are you

00:11:19,949 --> 00:11:23,730
choose what you can do is you can

00:11:22,019 --> 00:11:24,839
install yeoman generators what are

00:11:23,730 --> 00:11:28,560
called yeoman generators and there's

00:11:24,839 --> 00:11:30,319
actually a one for drupal themes and

00:11:28,560 --> 00:11:32,339
generators exist for a lot of different

00:11:30,319 --> 00:11:34,290
things you might want to accomplish so

00:11:32,339 --> 00:11:37,649
things like you know scaffolding an

00:11:34,290 --> 00:11:39,810
angular app framework or you know an

00:11:37,649 --> 00:11:42,839
initial architecture using the bootstrap

00:11:39,810 --> 00:11:44,610
framework or something like that yeoman

00:11:42,839 --> 00:11:46,379
can also scaffold portions of apps and

00:11:44,610 --> 00:11:48,480
you can actually introduce arguments

00:11:46,379 --> 00:11:50,819
into your your generators that will

00:11:48,480 --> 00:11:52,199
allow you to really really limit the

00:11:50,819 --> 00:11:53,550
amount that's actually generated and

00:11:52,199 --> 00:11:57,000
then you can do unit testing and stuff

00:11:53,550 --> 00:11:58,920
on that so what about power well Bauer

00:11:57,000 --> 00:12:01,889
helps you find our dependencies it

00:11:58,920 --> 00:12:03,569
actually is very good at locating your

00:12:01,889 --> 00:12:04,709
dependencies the most updated version of

00:12:03,569 --> 00:12:07,110
your dependencies and allowing you to

00:12:04,709 --> 00:12:08,430
introspect those so and you can actually

00:12:07,110 --> 00:12:11,339
determine when you want these things to

00:12:08,430 --> 00:12:13,019
happen Bauer provides a CLI command line

00:12:11,339 --> 00:12:14,819
interface to manage all your versioned

00:12:13,019 --> 00:12:16,889
and you know potentially obsolete

00:12:14,819 --> 00:12:18,300
dependencies that have been introduced

00:12:16,889 --> 00:12:19,740
and so if you want to keep your code

00:12:18,300 --> 00:12:20,819
up-to-date and let's say you want to you

00:12:19,740 --> 00:12:22,589
know make sure your jQuery is up to date

00:12:20,819 --> 00:12:25,439
which is you know kind of a moot point

00:12:22,589 --> 00:12:27,180
given that it's in core but you know

00:12:25,439 --> 00:12:28,949
other other you know Jas that you might

00:12:27,180 --> 00:12:32,009
want to introduce is something that you

00:12:28,949 --> 00:12:34,319
want to manage with power so grunt and

00:12:32,009 --> 00:12:35,459
gulp our task automate errs and I'm sure

00:12:34,319 --> 00:12:37,319
how many of you have heard a grunt or

00:12:35,459 --> 00:12:39,839
gulp or works with either of them okay

00:12:37,319 --> 00:12:41,699
great awesome so this is old hat for a

00:12:39,839 --> 00:12:43,889
lot of you so grunt and gulp our task

00:12:41,699 --> 00:12:46,740
automate errs which you know you

00:12:43,889 --> 00:12:49,529
basically introduced into your root

00:12:46,740 --> 00:12:50,850
directory a grunt file what sounds like

00:12:49,529 --> 00:12:53,459
good as a grunt file or a gulp file

00:12:50,850 --> 00:12:57,269
which is basically a configuration file

00:12:53,459 --> 00:13:00,420
which allows you to determine what tasks

00:12:57,269 --> 00:13:01,800
you want those task boners to do the

00:13:00,420 --> 00:13:04,379
grunt and gulp communities just like the

00:13:01,800 --> 00:13:05,670
Drupal community is very vibrant they're

00:13:04,379 --> 00:13:08,309
both very vibrant they have a lot of

00:13:05,670 --> 00:13:09,689
plugins that will introduce a lot of

00:13:08,309 --> 00:13:11,399
interesting commands that you can

00:13:09,689 --> 00:13:14,069
integrate into your workflow and can be

00:13:11,399 --> 00:13:16,649
very interesting to use so gret and gulp

00:13:14,069 --> 00:13:18,750
together or not sorry not together grunt

00:13:16,649 --> 00:13:19,950
or gulp reduces the time for you to get

00:13:18,750 --> 00:13:22,110
your code to deliver whole state

00:13:19,950 --> 00:13:24,840
for your could be shippable gretton cob

00:13:22,110 --> 00:13:28,080
can help you get there very quickly so

00:13:24,840 --> 00:13:29,490
just a side note about sort of the you

00:13:28,080 --> 00:13:30,750
know from and from a sort of human

00:13:29,490 --> 00:13:32,400
perspective right we're talking about

00:13:30,750 --> 00:13:34,260
roles and responsibilities here where

00:13:32,400 --> 00:13:35,820
where you know a lot of the stuff that

00:13:34,260 --> 00:13:39,060
we're working on with front-end Ops has

00:13:35,820 --> 00:13:40,290
released shifted you know Sexton for

00:13:39,060 --> 00:13:42,690
example poses this new front end

00:13:40,290 --> 00:13:44,730
operations engineer role I think you can

00:13:42,690 --> 00:13:46,920
also call this may be a fun performance

00:13:44,730 --> 00:13:49,560
engineer role where you know basically

00:13:46,920 --> 00:13:50,790
you manage the process you don't manage

00:13:49,560 --> 00:13:52,290
the project you don't work on the

00:13:50,790 --> 00:13:53,750
project you actually manage and work on

00:13:52,290 --> 00:13:57,690
the process and continually improve it

00:13:53,750 --> 00:13:58,680
so you know I in my opinion I think that

00:13:57,690 --> 00:14:00,780
a lot of people are going to become a

00:13:58,680 --> 00:14:02,280
lot more diver q no lot more diversified

00:14:00,780 --> 00:14:03,960
chances are a lot of us in this room

00:14:02,280 --> 00:14:05,310
even though we might be front of

00:14:03,960 --> 00:14:07,620
developers who specialize in drupal

00:14:05,310 --> 00:14:09,530
theming or let's say in the couple

00:14:07,620 --> 00:14:11,190
Drupal or some like that you know the

00:14:09,530 --> 00:14:14,180
you know people are going to

00:14:11,190 --> 00:14:16,470
increasingly rely on more and more

00:14:14,180 --> 00:14:17,730
knowledge of these tools and it's very

00:14:16,470 --> 00:14:20,310
important for us to have awareness of

00:14:17,730 --> 00:14:24,510
them even if we r you know maybe not as

00:14:20,310 --> 00:14:26,430
involved in the front end so let's go

00:14:24,510 --> 00:14:28,110
ahead and get started well you know the

00:14:26,430 --> 00:14:30,240
first thing we need is to install node

00:14:28,110 --> 00:14:32,250
and this is a very simple step if you

00:14:30,240 --> 00:14:35,460
have not installed node yet it's very

00:14:32,250 --> 00:14:37,470
very good runtime environment that

00:14:35,460 --> 00:14:39,080
allows for a lot of different things and

00:14:37,470 --> 00:14:43,200
we'll delve into this little bit as well

00:14:39,080 --> 00:14:45,210
so you also want to have note package

00:14:43,200 --> 00:14:46,880
manager and this is for people who might

00:14:45,210 --> 00:14:50,880
be coding live or want to follow along

00:14:46,880 --> 00:14:52,380
the way that you actually update NPM is

00:14:50,880 --> 00:14:55,020
with this command right here it's very

00:14:52,380 --> 00:14:56,040
simple so if we want to install all of

00:14:55,020 --> 00:14:58,380
our dependencies what we want to do is

00:14:56,040 --> 00:15:01,320
we want to do npm install and this

00:14:58,380 --> 00:15:03,780
hyphen G flag means globally install all

00:15:01,320 --> 00:15:06,540
of these things and so we want to do is

00:15:03,780 --> 00:15:07,770
yo which is yeoman Bauer obviously grunt

00:15:06,540 --> 00:15:10,080
CLI which is the grunt command-line

00:15:07,770 --> 00:15:14,970
interface and finally gulp you can have

00:15:10,080 --> 00:15:17,100
all of those available in your system so

00:15:14,970 --> 00:15:19,230
let's talk about Bauer first because

00:15:17,100 --> 00:15:20,820
Bauer is very interesting so if our

00:15:19,230 --> 00:15:23,190
takes care of the grunt work no pun

00:15:20,820 --> 00:15:24,960
intended and finding downloading and

00:15:23,190 --> 00:15:27,540
tracking your dependencies Bauer

00:15:24,960 --> 00:15:29,220
leverages a manifest file called Bauer

00:15:27,540 --> 00:15:31,980
JSON which contains a list of your

00:15:29,220 --> 00:15:33,690
packages and so you know in order to

00:15:31,980 --> 00:15:36,630
let's say install

00:15:33,690 --> 00:15:38,160
a new package all you got to do is you

00:15:36,630 --> 00:15:40,140
know put in Bower install jquery and

00:15:38,160 --> 00:15:41,790
boom you have to a query and that's a

00:15:40,140 --> 00:15:43,680
declared dependency and you can manage

00:15:41,790 --> 00:15:46,830
it through Bower and if you ever need to

00:15:43,680 --> 00:15:48,660
update it you can do with your Bower you

00:15:46,830 --> 00:15:50,970
can also go through and get github

00:15:48,660 --> 00:15:52,770
projects or you know get a get endpoint

00:15:50,970 --> 00:15:55,320
so for example if you really wanted to

00:15:52,770 --> 00:15:59,370
you could get the the direct clone of

00:15:55,320 --> 00:16:01,410
Drupal core from github and declare that

00:15:59,370 --> 00:16:03,240
as a dependency as well and track it and

00:16:01,410 --> 00:16:05,970
then you can also use a path you know so

00:16:03,240 --> 00:16:07,110
for instance if you want to have a you

00:16:05,970 --> 00:16:08,100
know something host on your site you've

00:16:07,110 --> 00:16:10,410
got a great little framework you've

00:16:08,100 --> 00:16:13,860
built you can also include that as a

00:16:10,410 --> 00:16:16,230
package as well so you can add to the

00:16:13,860 --> 00:16:18,540
manifest by using these commands and so

00:16:16,230 --> 00:16:21,090
you know what you can do is Bauer has a

00:16:18,540 --> 00:16:22,590
very very very comprehensive list of

00:16:21,090 --> 00:16:24,450
various packages you might need of all

00:16:22,590 --> 00:16:25,980
the most common sorts of dependencies

00:16:24,450 --> 00:16:27,900
you might have while while you're

00:16:25,980 --> 00:16:29,160
developing and so when you do Bauer

00:16:27,900 --> 00:16:30,810
search Bauer searches one of those

00:16:29,160 --> 00:16:32,670
commands that allows you to actually go

00:16:30,810 --> 00:16:35,190
through and look for a certain

00:16:32,670 --> 00:16:36,510
dependency and then you can also list

00:16:35,190 --> 00:16:38,970
all of the save dependencies that you

00:16:36,510 --> 00:16:40,620
have in your project what about yeoman

00:16:38,970 --> 00:16:42,510
well you know our dependencies are all

00:16:40,620 --> 00:16:44,760
sorted out right so you know we've we've

00:16:42,510 --> 00:16:47,280
got all of our you know things you know

00:16:44,760 --> 00:16:50,370
settled but what about basic scaffolding

00:16:47,280 --> 00:16:53,430
so with yeoman we can actually generate

00:16:50,370 --> 00:16:55,650
a vast array of vast diversity of

00:16:53,430 --> 00:17:00,180
different directory structures and and

00:16:55,650 --> 00:17:04,890
basic initial boilerplate structures for

00:17:00,180 --> 00:17:06,930
our apps for our architectures so for

00:17:04,890 --> 00:17:08,910
this session and I'll do it live demo

00:17:06,930 --> 00:17:11,010
this shortly we're going to generate a

00:17:08,910 --> 00:17:12,870
drupal theme in Yemen and I'll show you

00:17:11,010 --> 00:17:15,120
guys show everybody just in a second

00:17:12,870 --> 00:17:18,420
what this looks like this is a generator

00:17:15,120 --> 00:17:21,990
built by Ian Carrico I he's a friend

00:17:18,420 --> 00:17:23,910
engineer and what we want to do is we

00:17:21,990 --> 00:17:25,319
want to install our generator and the

00:17:23,910 --> 00:17:27,810
way we do that is by using node package

00:17:25,319 --> 00:17:30,030
manager we want to lease so we can

00:17:27,810 --> 00:17:32,280
invoke it or so we can call it from

00:17:30,030 --> 00:17:34,710
anywhere and you know what you want to

00:17:32,280 --> 00:17:35,730
do is you you know let's say hope that's

00:17:34,710 --> 00:17:36,840
a little bit out of date that's

00:17:35,730 --> 00:17:39,270
referring to the last time I gave this

00:17:36,840 --> 00:17:41,790
presentation but you know you want to

00:17:39,270 --> 00:17:43,710
create a directory and you know go into

00:17:41,790 --> 00:17:45,030
that directory and you can generate a

00:17:43,710 --> 00:17:47,150
drupal theme that way so just to show

00:17:45,030 --> 00:17:50,180
you very briefly what this looks like

00:17:47,150 --> 00:17:50,990
I have my command line here and what I'm

00:17:50,180 --> 00:17:53,870
going to do is I'm going to create a

00:17:50,990 --> 00:17:58,940
directory Barcelona 2015 let's go into

00:17:53,870 --> 00:18:02,000
that so right now it's empty but if I do

00:17:58,940 --> 00:18:05,870
yo drupal theme what it gives me is this

00:18:02,000 --> 00:18:07,670
really nice guy so yeoman is is this

00:18:05,870 --> 00:18:09,140
gentleman right here who is very nice

00:18:07,670 --> 00:18:12,290
and friendly and he helps you generate a

00:18:09,140 --> 00:18:13,910
drupal theme so what you can do is and I

00:18:12,290 --> 00:18:15,500
think this is going to be hard because

00:18:13,910 --> 00:18:17,090
it's off the screen there we go so

00:18:15,500 --> 00:18:18,740
what's your themes name right this is

00:18:17,090 --> 00:18:20,420
rate this literally is going to give you

00:18:18,740 --> 00:18:22,940
all of the things you need for your dot

00:18:20,420 --> 00:18:24,860
info file and everything you might could

00:18:22,940 --> 00:18:28,460
ever want right so let's call our theme

00:18:24,860 --> 00:18:30,560
Barcelona 2015 and you can choose a base

00:18:28,460 --> 00:18:32,060
theme using this generator there's

00:18:30,560 --> 00:18:33,590
various generators that you can use I'm

00:18:32,060 --> 00:18:34,880
sure you know there's other generators

00:18:33,590 --> 00:18:37,220
out there for drupal themes or you can

00:18:34,880 --> 00:18:38,510
write your own and you know let's say

00:18:37,220 --> 00:18:40,640
that we want to use Zen as our base

00:18:38,510 --> 00:18:42,560
theme if you want to customize your

00:18:40,640 --> 00:18:45,740
site's directories well you know maybe

00:18:42,560 --> 00:18:47,660
not and then why don't we do something

00:18:45,740 --> 00:18:49,610
like introduce a gulp file or a grunt

00:18:47,660 --> 00:18:52,130
file or you know Bower components in

00:18:49,610 --> 00:18:53,930
order to see in order to build those

00:18:52,130 --> 00:18:55,910
dependencies very quickly or to have a

00:18:53,930 --> 00:18:59,870
task runner already in place so if I hit

00:18:55,910 --> 00:19:02,960
gulp what will happen is boom right it's

00:18:59,870 --> 00:19:04,310
creating all of this structure this

00:19:02,960 --> 00:19:07,850
initial structure for my drupal theme

00:19:04,310 --> 00:19:13,640
and okay if this if this will actually

00:19:07,850 --> 00:19:19,970
run this is why live demos are a bad

00:19:13,640 --> 00:19:25,130
idea should not have done this anyways

00:19:19,970 --> 00:19:29,290
so while this is going on the there we

00:19:25,130 --> 00:19:34,490
go okay so let's go ahead and look at my

00:19:29,290 --> 00:19:37,760
created theme right so if I go in and I

00:19:34,490 --> 00:19:39,590
do that boom I literally have to do

00:19:37,760 --> 00:19:41,960
nothing all I had to do was you know

00:19:39,590 --> 00:19:44,420
type in a few commands and boom all we

00:19:41,960 --> 00:19:46,280
have now is we have our dot info file

00:19:44,420 --> 00:19:48,230
already created we have our CSS

00:19:46,280 --> 00:19:50,060
directory our fav icon gulp file that

00:19:48,230 --> 00:19:53,180
Jas if you want to run gulp we've got

00:19:50,060 --> 00:19:54,440
our image directory we've got you know

00:19:53,180 --> 00:19:56,450
everything that we could meet including

00:19:54,440 --> 00:19:58,790
template dot PHP all of our templates

00:19:56,450 --> 00:20:00,170
are already there for us and all you

00:19:58,790 --> 00:20:00,740
need to do now is to go into that

00:20:00,170 --> 00:20:03,770
directory

00:20:00,740 --> 00:20:07,280
sure actually go in drill down and start

00:20:03,770 --> 00:20:14,150
editing those files so that's that's a

00:20:07,280 --> 00:20:15,440
demonstration of Yemen so what about so

00:20:14,150 --> 00:20:16,730
what does that package that JSON file

00:20:15,440 --> 00:20:19,480
that was in there as well well

00:20:16,730 --> 00:20:22,280
package.json allows you to actually

00:20:19,480 --> 00:20:24,980
declare new dependencies that you might

00:20:22,280 --> 00:20:26,600
need so they're actually development

00:20:24,980 --> 00:20:30,860
dependencies and you can see that with

00:20:26,600 --> 00:20:32,150
the dev dependencies key there and what

00:20:30,860 --> 00:20:33,470
this does is this says well you know

00:20:32,150 --> 00:20:36,860
what this is the stuff that we need in

00:20:33,470 --> 00:20:40,490
order to to perform our tasks so if we

00:20:36,860 --> 00:20:41,990
you know need to declare do dependency

00:20:40,490 --> 00:20:45,320
we can actually add it very easily to

00:20:41,990 --> 00:20:46,730
this to this JSON object so if you want

00:20:45,320 --> 00:20:47,960
to learn more about writing yeoman

00:20:46,730 --> 00:20:50,300
generators I highly recommend this

00:20:47,960 --> 00:20:51,200
resource it's very good you know I'm not

00:20:50,300 --> 00:20:52,220
going to talk about it because it's a

00:20:51,200 --> 00:20:54,380
bit outside the scope of this session

00:20:52,220 --> 00:20:56,390
but if you are interested please feel

00:20:54,380 --> 00:20:58,670
free to take a look so all right what

00:20:56,390 --> 00:21:00,410
about grunt and gulp well from the front

00:20:58,670 --> 00:21:02,120
end developer standpoint there is no

00:21:00,410 --> 00:21:04,370
significant difference between grunt and

00:21:02,120 --> 00:21:05,809
gulp it's all about what kind of syntax

00:21:04,370 --> 00:21:07,610
you want to use while writing it and how

00:21:05,809 --> 00:21:09,290
you want to architect your gulp file or

00:21:07,610 --> 00:21:12,890
your ground file I'll talk more about

00:21:09,290 --> 00:21:14,179
this later so there's some of the paths

00:21:12,890 --> 00:21:16,309
for the for the plugins that you might

00:21:14,179 --> 00:21:17,990
want there's a vast array of different

00:21:16,309 --> 00:21:21,710
plugins that you can use for for grunt

00:21:17,990 --> 00:21:23,270
as well as gold so let's install a grunt

00:21:21,710 --> 00:21:26,330
plugin and the way that we do this is we

00:21:23,270 --> 00:21:29,000
can use NPM install and we can put in as

00:21:26,330 --> 00:21:31,730
an argument the grunt plugin that we

00:21:29,000 --> 00:21:34,610
want to use and by putting in that save

00:21:31,730 --> 00:21:38,780
dev flag we actually save it to the dev

00:21:34,610 --> 00:21:42,500
dependencies object or the dependencies

00:21:38,780 --> 00:21:44,510
section of the package.json file so we

00:21:42,500 --> 00:21:46,250
can also do so but you know both of

00:21:44,510 --> 00:21:50,480
these for example accomplish this the

00:21:46,250 --> 00:21:52,790
same thing in either grunt or gulp so

00:21:50,480 --> 00:21:56,420
we're grunt and gulp differ is is really

00:21:52,790 --> 00:21:58,179
the the sort of difference is what your

00:21:56,420 --> 00:22:00,590
focus is when you're writing these files

00:21:58,179 --> 00:22:02,540
grunt is a lot more configuration

00:22:00,590 --> 00:22:05,090
focused it's more about getting your

00:22:02,540 --> 00:22:07,460
initial state settled first before you

00:22:05,090 --> 00:22:08,900
run the tasks gulp is much more task

00:22:07,460 --> 00:22:11,600
execution focused and I'll show you this

00:22:08,900 --> 00:22:13,010
in just a second here so if you're

00:22:11,600 --> 00:22:14,300
familiar with no Jas this might be

00:22:13,010 --> 00:22:17,270
familiar to you this is how you

00:22:14,300 --> 00:22:18,500
what a module and oj s normally and what

00:22:17,270 --> 00:22:19,610
you want to do is you know this is the

00:22:18,500 --> 00:22:21,350
initial structure a big round file this

00:22:19,610 --> 00:22:22,940
is this is how you start out and you

00:22:21,350 --> 00:22:24,500
want to configure grunt to run certain

00:22:22,940 --> 00:22:27,260
tasks for you that make your life easier

00:22:24,500 --> 00:22:28,490
so for example you know what you want to

00:22:27,260 --> 00:22:30,170
do first is you want to you know make

00:22:28,490 --> 00:22:33,710
sure that your package that JSON is

00:22:30,170 --> 00:22:34,670
being read and you know what you off you

00:22:33,710 --> 00:22:35,780
know what you also want to do is you

00:22:34,670 --> 00:22:37,340
want to say hey I want to actually

00:22:35,780 --> 00:22:42,800
include that uglify plugin that I

00:22:37,340 --> 00:22:44,510
installed and configure it so then what

00:22:42,800 --> 00:22:45,860
you can do is you can tell grant that

00:22:44,510 --> 00:22:49,310
the plug-in nice be used you can

00:22:45,860 --> 00:22:51,590
instruct grunt to actually you know

00:22:49,310 --> 00:22:53,150
utilize that plugin and then you can

00:22:51,590 --> 00:22:54,560
finally provide grunt at asked to

00:22:53,150 --> 00:22:56,780
register and what that means is that

00:22:54,560 --> 00:23:04,100
grunt will actually save the task that

00:22:56,780 --> 00:23:07,360
you want to to run and that's basically

00:23:04,100 --> 00:23:10,280
how it works I'm and within the uglify

00:23:07,360 --> 00:23:11,810
object basically you can declare certain

00:23:10,280 --> 00:23:14,960
configurations that you might want to

00:23:11,810 --> 00:23:17,300
use in this case you've got source which

00:23:14,960 --> 00:23:19,190
is the source of the the source files

00:23:17,300 --> 00:23:22,190
where they come from and the destination

00:23:19,190 --> 00:23:24,050
right and then with our test registered

00:23:22,190 --> 00:23:26,180
we know now that we've actually got this

00:23:24,050 --> 00:23:28,340
declared and we've got our grunt file

00:23:26,180 --> 00:23:30,530
and we've got awareness of the fact that

00:23:28,340 --> 00:23:32,600
grunt is going to run this uglify plugin

00:23:30,530 --> 00:23:36,350
we can actually run run run from our

00:23:32,600 --> 00:23:40,280
command line and you can also you know

00:23:36,350 --> 00:23:43,130
declare basically different kinds of

00:23:40,280 --> 00:23:45,650
arguments when you run grunt that allow

00:23:43,130 --> 00:23:48,560
you to run tests in different ways or

00:23:45,650 --> 00:23:51,140
different configure you know so you can

00:23:48,560 --> 00:23:53,360
run let's say two tasks only two out of

00:23:51,140 --> 00:23:55,280
your tent ask let's say or or you know

00:23:53,360 --> 00:23:58,370
and there's a lot of really interesting

00:23:55,280 --> 00:24:01,520
things that you can do with actually

00:23:58,370 --> 00:24:03,050
specifying what you want to run so

00:24:01,520 --> 00:24:04,580
here's some useful grunt plugins I'm

00:24:03,050 --> 00:24:07,100
sure that a lot of you have probably

00:24:04,580 --> 00:24:08,720
used some of these before you know stuff

00:24:07,100 --> 00:24:13,430
like responsive images grunt contribs

00:24:08,720 --> 00:24:15,200
optum grunt newer grunt on CSS is very

00:24:13,430 --> 00:24:16,940
interesting there's you know it removes

00:24:15,200 --> 00:24:18,500
any CSS that's not using your project

00:24:16,940 --> 00:24:19,580
and I think this is something that we

00:24:18,500 --> 00:24:21,260
can all identify with its opponent

00:24:19,580 --> 00:24:23,870
developers is that oftentimes our CSS

00:24:21,260 --> 00:24:25,430
files balloon to these humongous sizes

00:24:23,870 --> 00:24:27,680
just because we have a lot of CSS this

00:24:25,430 --> 00:24:28,130
is actually never called because we're

00:24:27,680 --> 00:24:29,390
just

00:24:28,130 --> 00:24:31,760
airing it but it's never actually used

00:24:29,390 --> 00:24:33,650
so Brown CSS can actually figure out

00:24:31,760 --> 00:24:38,750
which one which declarations are not

00:24:33,650 --> 00:24:40,670
actually being used so gulp is a little

00:24:38,750 --> 00:24:43,460
bit different you know it's still use

00:24:40,670 --> 00:24:44,510
you know it still is sort of the very

00:24:43,460 --> 00:24:46,910
similar idea if you're familiar with

00:24:44,510 --> 00:24:49,820
with no GS development you invoke

00:24:46,910 --> 00:24:51,880
require to get your gulp and basically

00:24:49,820 --> 00:24:55,250
what you do is is you is you you know

00:24:51,880 --> 00:24:57,740
basically invoke a task method on gulp

00:24:55,250 --> 00:24:59,840
to run your tasks and this is where

00:24:57,740 --> 00:25:01,940
grunt and gulp really differ whereas in

00:24:59,840 --> 00:25:03,380
grunt you have a you know initial

00:25:01,940 --> 00:25:05,960
configuration and then you register your

00:25:03,380 --> 00:25:08,150
tasks with gulp you configure and

00:25:05,960 --> 00:25:10,550
register your tests in the same process

00:25:08,150 --> 00:25:12,140
so what does that mean well okay first

00:25:10,550 --> 00:25:14,090
of all let's you know we get all of our

00:25:12,140 --> 00:25:16,280
plugins so that we know what we want to

00:25:14,090 --> 00:25:17,930
have happen and gold and then you know

00:25:16,280 --> 00:25:19,490
we might want to set some paths to make

00:25:17,930 --> 00:25:22,250
sure that you know everything's in line

00:25:19,490 --> 00:25:24,440
and you know this is really where we're

00:25:22,250 --> 00:25:26,840
golf is is interesting if you want to

00:25:24,440 --> 00:25:30,370
keep your your your code very well

00:25:26,840 --> 00:25:35,540
organized and then we do is we basically

00:25:30,370 --> 00:25:37,670
run a task in this case let's call it

00:25:35,540 --> 00:25:39,380
process jas and what it's do what this

00:25:37,670 --> 00:25:40,940
is doing here is it's you know this dot

00:25:39,380 --> 00:25:43,790
pipe is basically going through these

00:25:40,940 --> 00:25:45,950
tasks and running them so you know first

00:25:43,790 --> 00:25:47,450
of all we've got concat right which is

00:25:45,950 --> 00:25:52,240
concatenation of javascript and that

00:25:47,450 --> 00:25:55,100
gives you a process j/s result file in

00:25:52,240 --> 00:25:57,620
the image as path that you've declared

00:25:55,100 --> 00:25:58,790
earlier and uglify as well which you

00:25:57,620 --> 00:26:02,330
know basically makes it so your

00:25:58,790 --> 00:26:05,060
javascript is totally illegible so we

00:26:02,330 --> 00:26:07,040
can then run our command as you know

00:26:05,060 --> 00:26:09,230
with grunt it's very similar you have

00:26:07,040 --> 00:26:13,460
your argument that actually specifies

00:26:09,230 --> 00:26:14,870
what tests you want to run so you know

00:26:13,460 --> 00:26:17,300
one thing that I recommend and one thing

00:26:14,870 --> 00:26:19,190
that I that I often do you know in well

00:26:17,300 --> 00:26:21,260
in the very little spare time that we

00:26:19,190 --> 00:26:23,060
have that that I have is to really look

00:26:21,260 --> 00:26:24,290
at other peoples grunt files and kolb

00:26:23,060 --> 00:26:25,730
files because they'll tell you a lot

00:26:24,290 --> 00:26:27,160
about what other people are doing and

00:26:25,730 --> 00:26:31,820
how their processes are influenced by

00:26:27,160 --> 00:26:35,240
incorporating grunt and gulp so we can

00:26:31,820 --> 00:26:37,400
use go to track changes in our theme

00:26:35,240 --> 00:26:40,010
files and and automate what's tedious so

00:26:37,400 --> 00:26:41,990
we can focus on what's important so

00:26:40,010 --> 00:26:44,210
whenever package.json or bow

00:26:41,990 --> 00:26:45,679
json changes you want to run npm

00:26:44,210 --> 00:26:47,030
installer or bower install to make sure

00:26:45,679 --> 00:26:51,050
to get the most updated dependencies

00:26:47,030 --> 00:26:53,179
that's very important so we probably all

00:26:51,050 --> 00:26:54,290
you know at least heard of grunt and

00:26:53,179 --> 00:26:55,970
gulp would probably work with these

00:26:54,290 --> 00:26:58,160
tools before let's talk a little bit

00:26:55,970 --> 00:27:00,980
about some tools that may not be so

00:26:58,160 --> 00:27:03,080
familiar to everybody so for example

00:27:00,980 --> 00:27:06,800
visual Russians who's heard of visual

00:27:03,080 --> 00:27:08,510
regressions so I'll talk a little bit

00:27:06,800 --> 00:27:09,830
about visual regressions you know one of

00:27:08,510 --> 00:27:13,760
the things that's very interesting in

00:27:09,830 --> 00:27:15,710
this front adopts kind of idea is you

00:27:13,760 --> 00:27:17,990
know we want to be able to track changes

00:27:15,710 --> 00:27:20,150
that happen in terms of the visual

00:27:17,990 --> 00:27:21,920
design of our websites if you have a

00:27:20,150 --> 00:27:24,440
page and you've got it very sort of

00:27:21,920 --> 00:27:25,910
elaborately styled you don't want a

00:27:24,440 --> 00:27:28,250
change to happen near CSS it's going to

00:27:25,910 --> 00:27:29,809
totally obliterate let's say changes

00:27:28,250 --> 00:27:31,400
that other people have made or some

00:27:29,809 --> 00:27:32,960
slight you know changes in the

00:27:31,400 --> 00:27:35,059
typography you want to be able to track

00:27:32,960 --> 00:27:37,910
all of those things very easily visual

00:27:35,059 --> 00:27:39,530
Russians basically are comparisons their

00:27:37,910 --> 00:27:40,970
disks they're there they're very much

00:27:39,530 --> 00:27:43,370
similar to you know like github code

00:27:40,970 --> 00:27:45,340
dips but what you can do is you can

00:27:43,370 --> 00:27:48,559
actually introspect we're on the page

00:27:45,340 --> 00:27:53,179
the difference is live which pixels have

00:27:48,559 --> 00:27:54,559
actually changed and one of these you

00:27:53,179 --> 00:27:56,210
know and the reason why this is

00:27:54,559 --> 00:27:59,679
important is because CSS is usually very

00:27:56,210 --> 00:28:02,900
quickly moving CSS is very prone to

00:27:59,679 --> 00:28:04,760
errors and all sorts of problems you

00:28:02,900 --> 00:28:07,040
know as we said earlier CSS is a very

00:28:04,760 --> 00:28:10,160
sort of riddle language it's not really

00:28:07,040 --> 00:28:12,350
meant for efficiency because you can

00:28:10,160 --> 00:28:15,440
declare a lot of CSS that's not going to

00:28:12,350 --> 00:28:16,490
be used you can introduce a lot of you

00:28:15,440 --> 00:28:17,929
know typos and stuff like that

00:28:16,490 --> 00:28:21,230
especially if you're writing CSS very

00:28:17,929 --> 00:28:22,700
quickly so one of the tools that that

00:28:21,230 --> 00:28:24,260
I've looked at in the past and which is

00:28:22,700 --> 00:28:27,440
very interesting from the standpoint of

00:28:24,260 --> 00:28:32,030
visual regressions is Wraith so rate

00:28:27,440 --> 00:28:36,470
uses a phantom dancer or slammer js2

00:28:32,030 --> 00:28:39,860
basically snap screenshots of your pages

00:28:36,470 --> 00:28:41,300
and so it's made by BBC News I highly

00:28:39,860 --> 00:28:43,400
recommend that you go to this repo and

00:28:41,300 --> 00:28:46,280
check it out what it looks like is

00:28:43,400 --> 00:28:48,920
something like this so this is the BBC

00:28:46,280 --> 00:28:50,690
News home BBC News article on a mobile

00:28:48,920 --> 00:28:52,190
device and what you can see is that all

00:28:50,690 --> 00:28:54,470
those blue outlines are actually

00:28:52,190 --> 00:28:55,049
highlighting the areas that have changed

00:28:54,470 --> 00:28:56,759
ever since

00:28:55,049 --> 00:28:59,220
the last time you took a screenshot so

00:28:56,759 --> 00:29:01,739
what what what a visual regression does

00:28:59,220 --> 00:29:04,200
is it goes through and it basically

00:29:01,739 --> 00:29:05,850
samples both screenshots for anything

00:29:04,200 --> 00:29:07,169
that has changed you know any

00:29:05,850 --> 00:29:09,809
differences in color any differences

00:29:07,169 --> 00:29:12,749
that are noted and then it actually

00:29:09,809 --> 00:29:15,149
highlights them in this manner so if you

00:29:12,749 --> 00:29:18,419
want to install Wraith it's a ruby gem

00:29:15,149 --> 00:29:20,669
so you just gem install Wraith and then

00:29:18,419 --> 00:29:22,200
you know you use actually Amal to

00:29:20,669 --> 00:29:23,970
configure rave so if you're familiar

00:29:22,200 --> 00:29:25,529
with things like you know the way

00:29:23,970 --> 00:29:28,499
configuration management works in triple

00:29:25,529 --> 00:29:30,480
8 or just yeah Mille in general and and

00:29:28,499 --> 00:29:33,869
how that works it's very easy to

00:29:30,480 --> 00:29:37,619
actually get this going and then you can

00:29:33,869 --> 00:29:39,989
call you can use Wraith capture and use

00:29:37,619 --> 00:29:44,429
that yeah mol file is an argument in

00:29:39,989 --> 00:29:49,409
order to get your gear captured screen

00:29:44,429 --> 00:29:51,840
shots so Huxley is an alternative visual

00:29:49,409 --> 00:29:54,539
regression tool it's built by Facebook

00:29:51,840 --> 00:29:56,220
and Instagram it's it's currently not

00:29:54,539 --> 00:29:59,039
supported by either either organization

00:29:56,220 --> 00:30:00,539
they actually recommend that you fork it

00:29:59,039 --> 00:30:03,869
if you're interested in working on it

00:30:00,539 --> 00:30:05,429
it's also very very good tool so what's

00:30:03,869 --> 00:30:06,749
really cool about Huxley is you know and

00:30:05,429 --> 00:30:09,059
this is a direct quote from their github

00:30:06,749 --> 00:30:10,710
repo is it watches you browse take

00:30:09,059 --> 00:30:12,059
screenshots and it tells you when they

00:30:10,710 --> 00:30:16,019
change it's a much more sort of dynamic

00:30:12,059 --> 00:30:18,450
approach so Huxley just like you know

00:30:16,019 --> 00:30:19,769
let's say with your your grant files in

00:30:18,450 --> 00:30:22,259
your gulp files you can use a Huxley

00:30:19,769 --> 00:30:23,820
file to configure the URLs to be tested

00:30:22,259 --> 00:30:27,679
so this is part of a sort of theme that

00:30:23,820 --> 00:30:30,389
is across the entire front adopts

00:30:27,679 --> 00:30:32,249
presentation right is you basically

00:30:30,389 --> 00:30:33,899
configure everything you want to have

00:30:32,249 --> 00:30:36,269
happen in these files that are unified

00:30:33,899 --> 00:30:38,580
and basically within the command line

00:30:36,269 --> 00:30:40,889
you run these tasks and you and you run

00:30:38,580 --> 00:30:42,419
these commands that well will basically

00:30:40,889 --> 00:30:44,269
get those files and run through the

00:30:42,419 --> 00:30:47,190
configurations and yield what you want

00:30:44,269 --> 00:30:49,049
so Huxley generates these dot Huxley

00:30:47,190 --> 00:30:51,059
files which are records of your tests

00:30:49,049 --> 00:30:53,220
and you can actually track those changes

00:30:51,059 --> 00:30:54,480
within those Huxley files and it's

00:30:53,220 --> 00:30:56,549
literally going to be so let's say you

00:30:54,480 --> 00:30:58,259
have like index dot HTML if you run

00:30:56,549 --> 00:31:00,450
Huxley it will actually give you an

00:30:58,259 --> 00:31:02,009
index cooksley file and what's really

00:31:00,450 --> 00:31:03,960
interesting about this approach is that

00:31:02,009 --> 00:31:05,820
this this dot Huxley file can actually

00:31:03,960 --> 00:31:07,679
be checked into a repo and if you have a

00:31:05,820 --> 00:31:08,750
repository that you know you're tracking

00:31:07,679 --> 00:31:12,310
all of these different change

00:31:08,750 --> 00:31:15,080
going on huxley gives you a very good

00:31:12,310 --> 00:31:16,760
introspective way to basically look at

00:31:15,080 --> 00:31:18,080
the history of your visual changes

00:31:16,760 --> 00:31:20,060
that's very fat that's very interesting

00:31:18,080 --> 00:31:21,560
I mean it's basically you know like what

00:31:20,060 --> 00:31:25,940
github already does but for visual

00:31:21,560 --> 00:31:27,530
design which is pretty cool so you know

00:31:25,940 --> 00:31:29,360
what you can do is you can you know use

00:31:27,530 --> 00:31:32,210
the flag record to start recording and

00:31:29,360 --> 00:31:33,950
basically it's a it's sort of a conf you

00:31:32,210 --> 00:31:34,880
know constantly running thing you hit

00:31:33,950 --> 00:31:39,500
Enter just take and take a screenshot

00:31:34,880 --> 00:31:41,960
and then Q to quit very easy so phantom

00:31:39,500 --> 00:31:43,070
CSS is also another visual ration tool

00:31:41,960 --> 00:31:45,170
as you can tell there's a lot of

00:31:43,070 --> 00:31:49,160
different options that are out there for

00:31:45,170 --> 00:31:50,390
you and you know it's really a meant for

00:31:49,160 --> 00:31:52,640
web apps live style guides and

00:31:50,390 --> 00:31:55,210
responsive layouts if you're interested

00:31:52,640 --> 00:31:57,170
in in sort of you know CSS testing and

00:31:55,210 --> 00:32:01,130
visual regressions I highly recommend

00:31:57,170 --> 00:32:03,740
you check out these two resources so

00:32:01,130 --> 00:32:05,360
we've talked about testing visual

00:32:03,740 --> 00:32:07,250
regressions we've talked about noticing

00:32:05,360 --> 00:32:08,810
visual regressions right but that

00:32:07,250 --> 00:32:10,970
doesn't really help us in terms of

00:32:08,810 --> 00:32:12,950
actually doing it across devices right

00:32:10,970 --> 00:32:15,380
the only thing that visual regressions

00:32:12,950 --> 00:32:17,840
actually help us with is to find a

00:32:15,380 --> 00:32:19,490
single page on let's say your Chrome

00:32:17,840 --> 00:32:20,840
browser and give you a diff between

00:32:19,490 --> 00:32:23,000
those things but what if we want to

00:32:20,840 --> 00:32:25,850
actually figure out differences between

00:32:23,000 --> 00:32:27,950
things like you know WebKit versus gecko

00:32:25,850 --> 00:32:31,270
or you know basically rendering engines

00:32:27,950 --> 00:32:34,450
and and and how those differ in terms of

00:32:31,270 --> 00:32:38,240
their approach in their display of your

00:32:34,450 --> 00:32:40,490
front end so the big question is you

00:32:38,240 --> 00:32:41,930
know how can we test rendering engines

00:32:40,490 --> 00:32:44,120
more quickly without waiting for page

00:32:41,930 --> 00:32:46,460
loads on each browser and there's this I

00:32:44,120 --> 00:32:49,400
there's this whole there's this whole

00:32:46,460 --> 00:32:50,420
concept called headless browser how many

00:32:49,400 --> 00:32:52,730
people have heard of headless browsers

00:32:50,420 --> 00:32:57,680
so what's what a headless browser is is

00:32:52,730 --> 00:32:59,570
basically it allows you to to you to

00:32:57,680 --> 00:33:00,680
basically perform tests in a browser but

00:32:59,570 --> 00:33:02,600
you never have to look at the browser

00:33:00,680 --> 00:33:04,280
right there is no you why there is no

00:33:02,600 --> 00:33:06,710
sort of front end that you see because

00:33:04,280 --> 00:33:11,090
it's all happening on a back-end that's

00:33:06,710 --> 00:33:12,410
not visible to you so we can use how

00:33:11,090 --> 00:33:13,430
those instances of rendering engines to

00:33:12,410 --> 00:33:15,230
actually render our pages without

00:33:13,430 --> 00:33:18,500
displaying them and then get those

00:33:15,230 --> 00:33:19,850
results back from those renderings what

00:33:18,500 --> 00:33:21,950
this means is that we no longer have to

00:33:19,850 --> 00:33:22,490
open up 15 different browsers as we used

00:33:21,950 --> 00:33:25,429
to do with a 9

00:33:22,490 --> 00:33:27,110
these are the early 2000s to actually

00:33:25,429 --> 00:33:28,670
test all these things you don't have to

00:33:27,110 --> 00:33:32,590
use browser shots anymore stuff like

00:33:28,670 --> 00:33:36,350
that so Phantom jess is the actual

00:33:32,590 --> 00:33:38,240
testing tool for WebKit it can you know

00:33:36,350 --> 00:33:41,179
if you want it to it can not be headless

00:33:38,240 --> 00:33:42,890
you can spit out some visual pages it's

00:33:41,179 --> 00:33:46,120
very useful for batch actions in

00:33:42,890 --> 00:33:48,800
particular if you want to you know do

00:33:46,120 --> 00:33:52,280
multiple actions on a single page let's

00:33:48,800 --> 00:33:56,750
say fan which is that work that's that's

00:33:52,280 --> 00:34:04,130
what it looks like so what's whoops oops

00:33:56,750 --> 00:34:07,100
oh okay well sorry about that that's

00:34:04,130 --> 00:34:16,129
never happened before this is why

00:34:07,100 --> 00:34:21,139
powerpoints bad let's see here should

00:34:16,129 --> 00:34:22,760
have used reveals yes anyways so Slimer

00:34:21,139 --> 00:34:25,690
Jas is actually the equivalent that you

00:34:22,760 --> 00:34:27,679
use for gecko slammer jSPL work and

00:34:25,690 --> 00:34:29,540
Casper Jas gives you a lot more

00:34:27,679 --> 00:34:30,889
interaction interact ability so if you

00:34:29,540 --> 00:34:32,510
have a headless instance of your browser

00:34:30,889 --> 00:34:35,149
of your rendering engine you can

00:34:32,510 --> 00:34:37,179
actually perform certain tasks with it

00:34:35,149 --> 00:34:39,560
like filling out forms clicking links

00:34:37,179 --> 00:34:42,440
you know and you can also do things like

00:34:39,560 --> 00:34:43,790
logging and scraping so great testing

00:34:42,440 --> 00:34:45,139
rendering engines that's that's great I

00:34:43,790 --> 00:34:46,550
mean you know you know so so we've moved

00:34:45,139 --> 00:34:48,470
from testing visual aggressions which

00:34:46,550 --> 00:34:49,820
are just differences between actual

00:34:48,470 --> 00:34:51,710
different displays the same page on a

00:34:49,820 --> 00:34:53,570
single rendering engine we've moved on

00:34:51,710 --> 00:34:55,310
to testing rendering engines and testing

00:34:53,570 --> 00:34:58,070
those dips which means that we can you

00:34:55,310 --> 00:34:59,450
know actually go in and and and interact

00:34:58,070 --> 00:35:01,100
with these things in very different ways

00:34:59,450 --> 00:35:02,630
depending on the rendering engine itself

00:35:01,100 --> 00:35:04,940
and differentiate between muttering

00:35:02,630 --> 00:35:06,859
engines but there's there's still

00:35:04,940 --> 00:35:08,810
something missing you know we also want

00:35:06,859 --> 00:35:11,600
to actually be able to test devices too

00:35:08,810 --> 00:35:12,950
right you know because you can have two

00:35:11,600 --> 00:35:14,650
devices using the same rendering engine

00:35:12,950 --> 00:35:17,060
but they're not going to look the same

00:35:14,650 --> 00:35:19,220
you know you might have a mobile device

00:35:17,060 --> 00:35:21,350
and you might have a tablet or something

00:35:19,220 --> 00:35:23,119
like that or a desktop you want to be

00:35:21,350 --> 00:35:25,330
able to introspect the differences that

00:35:23,119 --> 00:35:28,700
occur between those particular devices

00:35:25,330 --> 00:35:30,590
so one of the best tools that i know of

00:35:28,700 --> 00:35:32,869
for testing devices and difference

00:35:30,590 --> 00:35:34,609
between devices is ghost lab and the

00:35:32,869 --> 00:35:35,810
really compelling thing about ghost lab

00:35:34,609 --> 00:35:36,260
the real sort of unique value

00:35:35,810 --> 00:35:38,120
proposition

00:35:36,260 --> 00:35:40,130
of ghost lab is you can conduct

00:35:38,120 --> 00:35:43,220
synchronized testing on diverse types of

00:35:40,130 --> 00:35:44,660
devices right so about a year ago I did

00:35:43,220 --> 00:35:45,920
I did some testing using ghost lab but

00:35:44,660 --> 00:35:47,360
it's actually fascinating because what

00:35:45,920 --> 00:35:49,070
you can do is you set it up so your

00:35:47,360 --> 00:35:50,570
devices are synchronized and you have

00:35:49,070 --> 00:35:53,060
your let's see your mobile phone your

00:35:50,570 --> 00:35:54,680
your let's say your Galaxy Note and you

00:35:53,060 --> 00:35:56,660
have your iphone and you have your

00:35:54,680 --> 00:35:58,940
desktop right what you can do is you can

00:35:56,660 --> 00:36:01,310
scroll on your iPhone or scroll on your

00:35:58,940 --> 00:36:04,130
Samsung Galaxy Note and all of those

00:36:01,310 --> 00:36:05,780
those all the actions you perform are

00:36:04,130 --> 00:36:07,430
replicated across all those devices at

00:36:05,780 --> 00:36:10,220
the same time so you can simultaneously

00:36:07,430 --> 00:36:12,170
test your front end on all these devices

00:36:10,220 --> 00:36:14,540
without having to do anything other than

00:36:12,170 --> 00:36:16,310
set up ghost lab this was a really good

00:36:14,540 --> 00:36:18,380
idea you know because what you can do is

00:36:16,310 --> 00:36:19,820
you know have your desktop setup scroll

00:36:18,380 --> 00:36:22,550
and then as you're scrolling a desktop

00:36:19,820 --> 00:36:25,940
the same thing happens on your phone and

00:36:22,550 --> 00:36:27,110
your tablet or what have you obviously

00:36:25,940 --> 00:36:28,760
we've got other device simulators that

00:36:27,110 --> 00:36:30,290
are available you know things like xcode

00:36:28,760 --> 00:36:33,470
iOS simulator which I'm sure a lot of

00:36:30,290 --> 00:36:35,660
you have used you know it's it's it's it

00:36:33,470 --> 00:36:37,790
is a very compelling idea though to be

00:36:35,660 --> 00:36:41,080
able to to sort of do this cross device

00:36:37,790 --> 00:36:43,670
testing and have it occur simultaneously

00:36:41,080 --> 00:36:45,440
so ghost lab as I mentioned it you know

00:36:43,670 --> 00:36:47,720
allows you to synchronize navigation

00:36:45,440 --> 00:36:49,520
across all your devices you can

00:36:47,720 --> 00:36:51,050
synchronize things like taps clicks and

00:36:49,520 --> 00:36:52,970
scrolls and other really sort of

00:36:51,050 --> 00:36:57,830
important user action user interactions

00:36:52,970 --> 00:36:59,570
that might occur so what about you know

00:36:57,830 --> 00:37:00,880
stuff like debugging tools and things

00:36:59,570 --> 00:37:03,080
like that we've talked a lot about

00:37:00,880 --> 00:37:05,120
actual tools that allow us to really

00:37:03,080 --> 00:37:06,530
look in and get insight into the way

00:37:05,120 --> 00:37:07,460
that our front end looks on a variety of

00:37:06,530 --> 00:37:09,440
different in a variety of different

00:37:07,460 --> 00:37:11,510
situations you know we've moved from

00:37:09,440 --> 00:37:13,730
talking about setting up a front end

00:37:11,510 --> 00:37:14,990
with yeoman we've moved on to did you

00:37:13,730 --> 00:37:17,060
know setting up our dependencies with

00:37:14,990 --> 00:37:19,460
Bauer we talked about running tasks on

00:37:17,060 --> 00:37:20,990
that front end with grunt and gulp but

00:37:19,460 --> 00:37:22,610
and then we've moved on to talking about

00:37:20,990 --> 00:37:24,680
actually comparing differences between

00:37:22,610 --> 00:37:28,390
devices and rendering engines but what

00:37:24,680 --> 00:37:30,830
about debugging tools well there's a

00:37:28,390 --> 00:37:32,720
feature in chrome called devtools remote

00:37:30,830 --> 00:37:35,510
debugging which is actually really

00:37:32,720 --> 00:37:37,220
really cool because back of the day you

00:37:35,510 --> 00:37:38,690
know probably you know even three or

00:37:37,220 --> 00:37:41,570
four years ago it was completely

00:37:38,690 --> 00:37:44,090
impossible to do it do inspect element

00:37:41,570 --> 00:37:47,570
or use Firebug let's say on your iPhone

00:37:44,090 --> 00:37:48,800
or on your mobile device if you you know

00:37:47,570 --> 00:37:49,160
if you're an Android user and you want

00:37:48,800 --> 00:37:51,680
to test on

00:37:49,160 --> 00:37:53,480
android this makes this very easy so

00:37:51,680 --> 00:37:54,680
what you do is you can set up devtools

00:37:53,480 --> 00:37:58,579
remote debugging on your Chrome browser

00:37:54,680 --> 00:38:01,039
you hook up your phone to your USB on

00:37:58,579 --> 00:38:03,710
your computer and literally what you can

00:38:01,039 --> 00:38:06,470
do is you have your inspect element

00:38:03,710 --> 00:38:08,869
window in chrome that is referring to

00:38:06,470 --> 00:38:11,240
your device and what you can do is if

00:38:08,869 --> 00:38:12,380
you go into the DOM and I should have

00:38:11,240 --> 00:38:14,589
really done it live demo of this because

00:38:12,380 --> 00:38:16,849
it's really compelling but if you have a

00:38:14,589 --> 00:38:18,650
you you can go into your Dom using that

00:38:16,849 --> 00:38:20,780
inspect element tool and actually hover

00:38:18,650 --> 00:38:23,299
over the various elements in the Dom and

00:38:20,780 --> 00:38:24,740
those will highlight on your phone it's

00:38:23,299 --> 00:38:26,390
really cool and it's one of the most

00:38:24,740 --> 00:38:30,770
interesting things that has come out in

00:38:26,390 --> 00:38:34,039
my opinion from from chrome devtools so

00:38:30,770 --> 00:38:36,319
a chrome devtools also allows you to

00:38:34,039 --> 00:38:38,690
audit your CSS you know just like you

00:38:36,319 --> 00:38:41,630
know our grunt or gold on CSS plugins

00:38:38,690 --> 00:38:43,849
and dev tools terminal gives you a shell

00:38:41,630 --> 00:38:46,970
within chrome which is really compelling

00:38:43,849 --> 00:38:48,589
as well so um you know at this point

00:38:46,970 --> 00:38:49,700
we've got a little bit of time left I

00:38:48,589 --> 00:38:52,809
just want to open up for discussion

00:38:49,700 --> 00:38:55,099
because you know I think a lot of us are

00:38:52,809 --> 00:38:56,450
very intimately familiar with a lot of

00:38:55,099 --> 00:38:58,640
these tools or maybe just a few or maybe

00:38:56,450 --> 00:38:59,839
just one you know I'm sure that many of

00:38:58,640 --> 00:39:01,640
you have used some of these tools in

00:38:59,839 --> 00:39:03,380
your projects and I hope this is a very

00:39:01,640 --> 00:39:05,210
comprehensive introduction to a lot of

00:39:03,380 --> 00:39:08,270
the tools that maybe you might not have

00:39:05,210 --> 00:39:09,529
heard of so much and so I want to open

00:39:08,270 --> 00:39:11,029
it up a little bit for some discussion

00:39:09,529 --> 00:39:12,319
because I think it's very compelling

00:39:11,029 --> 00:39:14,779
from the standpoint of the future of

00:39:12,319 --> 00:39:16,039
front-end for example what you know what

00:39:14,779 --> 00:39:17,990
is the future of front of development

00:39:16,039 --> 00:39:19,789
with the advent of front-end ops what is

00:39:17,990 --> 00:39:21,170
how does our role change as front of

00:39:19,789 --> 00:39:24,200
developers and what does that mean for

00:39:21,170 --> 00:39:25,520
our for our jobs how will development

00:39:24,200 --> 00:39:28,309
workflows change through the front end

00:39:25,520 --> 00:39:29,869
dobbs you know namely you know what

00:39:28,309 --> 00:39:31,670
kinds of things are going to happen when

00:39:29,869 --> 00:39:34,670
we have code handovers and things like

00:39:31,670 --> 00:39:36,109
that you know what sorts of you know how

00:39:34,670 --> 00:39:37,579
does this impact things like onboarding

00:39:36,109 --> 00:39:40,010
you know I think one of the one of the

00:39:37,579 --> 00:39:41,390
big challenges that front adopts you

00:39:40,010 --> 00:39:42,980
know the whole concept of front-end Ops

00:39:41,390 --> 00:39:45,319
has not necessarily really nailed down

00:39:42,980 --> 00:39:47,270
is the idea of really efficient

00:39:45,319 --> 00:39:49,039
onboarding you know because there's a

00:39:47,270 --> 00:39:50,690
lot of developers who might be very used

00:39:49,039 --> 00:39:53,750
to a very particular way of organizing

00:39:50,690 --> 00:39:55,609
things like their gulp files or you're

00:39:53,750 --> 00:39:58,099
approaching problems in very particular

00:39:55,609 --> 00:40:00,289
ways and we have to be very attentive to

00:39:58,099 --> 00:40:02,900
you know what that means for introducing

00:40:00,289 --> 00:40:04,970
new team members to our

00:40:02,900 --> 00:40:06,380
squirt flow and things like that and

00:40:04,970 --> 00:40:07,700
finally what will fund and workflows

00:40:06,380 --> 00:40:10,279
look like one year from now five years

00:40:07,700 --> 00:40:11,420
from now my theory on this is that you

00:40:10,279 --> 00:40:13,849
know it's going to be a lot more

00:40:11,420 --> 00:40:15,740
automation we're going to have much much

00:40:13,849 --> 00:40:16,760
more of our front ends be automated I

00:40:15,740 --> 00:40:18,349
think that this is only the beginning

00:40:16,760 --> 00:40:20,809
this is just the sort of the first

00:40:18,349 --> 00:40:24,230
initial steps of what's going to become

00:40:20,809 --> 00:40:26,630
a sort of you know much very burgeoning

00:40:24,230 --> 00:40:27,710
trend so you know five years from now I

00:40:26,630 --> 00:40:29,990
have no idea what's going to look like

00:40:27,710 --> 00:40:32,839
and I'm curious to see what your

00:40:29,990 --> 00:40:33,980
thoughts are so if you are you know a

00:40:32,839 --> 00:40:36,079
little bit less familiar with front-end

00:40:33,980 --> 00:40:37,819
ops you want to learn a little more here

00:40:36,079 --> 00:40:39,950
are some really great resources i highly

00:40:37,819 --> 00:40:42,079
recommend chris rubles presentation

00:40:39,950 --> 00:40:44,809
intro to front adopts which covers a lot

00:40:42,079 --> 00:40:47,000
of the same material in some detail I

00:40:44,809 --> 00:40:48,710
also really encourage you to read Alex

00:40:47,000 --> 00:40:50,539
sextons original article in smashing

00:40:48,710 --> 00:40:54,770
magazine and the reason why is because

00:40:50,539 --> 00:40:56,299
it's a really good sort of philosophical

00:40:54,770 --> 00:40:58,099
motivation for why we need things like

00:40:56,299 --> 00:41:00,319
fun adopts engineers and why we need a

00:40:58,099 --> 00:41:01,670
front adopts workflow to begin with and

00:41:00,319 --> 00:41:04,240
then you know there are some other

00:41:01,670 --> 00:41:08,869
things that that are very good as well

00:41:04,240 --> 00:41:10,849
automating workflow and this this

00:41:08,869 --> 00:41:13,430
article from Chris coy wave of CSS

00:41:10,849 --> 00:41:15,170
tricks called grunt for people who think

00:41:13,430 --> 00:41:19,460
things like grunt and gulp or grunt are

00:41:15,170 --> 00:41:22,940
weird and hard and I also want to do one

00:41:19,460 --> 00:41:27,319
shout out as well so I Mathai is doing a

00:41:22,940 --> 00:41:30,049
presentation I believe today or tomorrow

00:41:27,319 --> 00:41:34,789
I can't remember exactly Thursday thank

00:41:30,049 --> 00:41:35,990
you thanks as well so I highly encourage

00:41:34,789 --> 00:41:37,400
you to check that out because he will

00:41:35,990 --> 00:41:39,349
probably go into much more detail about

00:41:37,400 --> 00:41:41,630
you know tools like wraiths and phantom

00:41:39,349 --> 00:41:44,029
CSS and stuff that we really don't have

00:41:41,630 --> 00:41:46,549
time to talk about in this session um

00:41:44,029 --> 00:41:48,140
and with that you know I'd love to hear

00:41:46,549 --> 00:41:50,539
your thoughts about how this session was

00:41:48,140 --> 00:41:53,150
and I definitely welcome your feedback

00:41:50,539 --> 00:41:55,480
it's very helpful for me and thank you

00:41:53,150 --> 00:41:55,480
very much

00:42:01,320 --> 00:42:07,390
so there's a mic over there on the side

00:42:04,270 --> 00:42:09,400
if we want to have any questions but if

00:42:07,390 --> 00:42:12,940
not I'm also happy to stay off state

00:42:09,400 --> 00:42:14,380
here for a little bit and I'm interested

00:42:12,940 --> 00:42:15,640
to hear your thoughts what what do you

00:42:14,380 --> 00:42:26,850
guys think is the future of front-end

00:42:15,640 --> 00:42:26,850
especially in terms of front adopts sure

00:42:31,750 --> 00:42:34,740
hmm

00:42:42,619 --> 00:42:46,880
so I think one of the really challenge

00:42:45,289 --> 00:42:49,099
well okay so let me repeat the questions

00:42:46,880 --> 00:42:51,140
the question is a lot of these tools we

00:42:49,099 --> 00:42:52,869
have a very wide range of tools you know

00:42:51,140 --> 00:42:54,859
grunt gulp Bauer yadda yadda yadda

00:42:52,869 --> 00:42:58,460
that's a lot to deal with why don't we

00:42:54,859 --> 00:43:00,619
just use NPM to actually perform the

00:42:58,460 --> 00:43:03,920
front-end ops task that we need I think

00:43:00,619 --> 00:43:06,769
the the big challenge is that a lot of

00:43:03,920 --> 00:43:10,009
people are not as familiar with NPM and

00:43:06,769 --> 00:43:11,779
a lot of people are really looking for a

00:43:10,009 --> 00:43:13,970
sort of single tool that accomplishes

00:43:11,779 --> 00:43:15,559
let's say a single need you know I've

00:43:13,970 --> 00:43:17,839
met a lot of fun developers who really

00:43:15,559 --> 00:43:19,789
only need gulp or only need Bauer or

00:43:17,839 --> 00:43:21,140
only need certain certain things and if

00:43:19,789 --> 00:43:23,059
you're really interested in sort of

00:43:21,140 --> 00:43:25,460
building your own friend adopts workflow

00:43:23,059 --> 00:43:26,930
I think NPM is a really good route but

00:43:25,460 --> 00:43:32,650
that you know I need to investigate that

00:43:26,930 --> 00:43:32,650
as well so thank you yes yes

00:43:39,570 --> 00:43:43,500
could you repeat the question sorry

00:43:51,450 --> 00:43:55,930
sure absolutely so the question is is

00:43:54,160 --> 00:43:57,910
there a very easy way to automate a lot

00:43:55,930 --> 00:43:59,710
of the testing processes by using

00:43:57,910 --> 00:44:01,720
something like selenium a lot of the

00:43:59,710 --> 00:44:04,109
tools that I've mentioned here actually

00:44:01,720 --> 00:44:06,160
have selenium integrations very tightly

00:44:04,109 --> 00:44:07,420
wrapped up so if you want to use

00:44:06,160 --> 00:44:11,680
selenium and leverage that you certainly

00:44:07,420 --> 00:44:14,049
can in terms of actually bundling tool

00:44:11,680 --> 00:44:15,640
but you know bundling tests it's

00:44:14,049 --> 00:44:17,710
certainly very possible I've seen a lot

00:44:15,640 --> 00:44:20,529
of Greg Nicole files that actually do

00:44:17,710 --> 00:44:24,339
that and you know it's it's it's a very

00:44:20,529 --> 00:44:26,319
easy thing to do and you know obviously

00:44:24,339 --> 00:44:28,660
I probably know a little bit more about

00:44:26,319 --> 00:44:31,720
sort of the the sort of projects you're

00:44:28,660 --> 00:44:41,710
looking to make but it's it's definitely

00:44:31,720 --> 00:44:44,069
not a challenge yeah already well oh yes

00:44:41,710 --> 00:44:44,069
please

00:44:52,930 --> 00:45:01,099
so by containerization you mean like dr.

00:44:56,470 --> 00:45:03,710
okay well so the question was you know

00:45:01,099 --> 00:45:05,720
is there is there is there a way to

00:45:03,710 --> 00:45:09,079
basically merge containerization and

00:45:05,720 --> 00:45:10,490
automation you know I actually am not as

00:45:09,079 --> 00:45:13,339
familiar with dr. or a container is a

00:45:10,490 --> 00:45:19,880
shin as I would like maybe someone has

00:45:13,339 --> 00:45:31,520
some insight into that very good

00:45:19,880 --> 00:45:34,400
question yes so the question is which

00:45:31,520 --> 00:45:36,980
one do i prefer grants or gulp so I you

00:45:34,400 --> 00:45:39,829
know personally I really I really prefer

00:45:36,980 --> 00:45:41,990
gulp and the main reason why i prefer

00:45:39,829 --> 00:45:44,420
gulp is because it's a lot more legible

00:45:41,990 --> 00:45:46,310
it's a lot more readable if you're

00:45:44,420 --> 00:45:47,690
really and you know i mentioned earlier

00:45:46,310 --> 00:45:49,760
that there's a big concern about

00:45:47,690 --> 00:45:51,260
onboarding new team members and i think

00:45:49,760 --> 00:45:53,930
that's very important from the

00:45:51,260 --> 00:45:58,400
standpoint of weed ability managing

00:45:53,930 --> 00:45:59,750
change and managing your your your you

00:45:58,400 --> 00:46:01,609
know things like release management

00:45:59,750 --> 00:46:03,470
change management based on you know very

00:46:01,609 --> 00:46:04,760
sort of rapidly shifting teams is

00:46:03,470 --> 00:46:06,170
something that's very very hard to

00:46:04,760 --> 00:46:08,150
manage and i think for a lot of people

00:46:06,170 --> 00:46:10,609
gulp is a lot easier to wrap your head

00:46:08,150 --> 00:46:14,480
around one thing that i found is people

00:46:10,609 --> 00:46:16,790
who are very gung-ho about one or the

00:46:14,480 --> 00:46:19,160
other are very very sort of adamant

00:46:16,790 --> 00:46:21,140
about those you know I don't really have

00:46:19,160 --> 00:46:24,380
a sort of really strong preference but I

00:46:21,140 --> 00:46:26,420
do think that gulp is sort of at least

00:46:24,380 --> 00:46:29,150
at this point in my experience and you

00:46:26,420 --> 00:46:31,130
know please feel free to jump in but but

00:46:29,150 --> 00:46:33,800
I do see go up being used a lot more

00:46:31,130 --> 00:46:37,119
these days and that's all some other

00:46:33,800 --> 00:46:37,119
reason to add uncle so

00:46:38,180 --> 00:46:42,989
great well thank you very much for for

00:46:41,460 --> 00:46:44,729
the amazing questions I will stick

00:46:42,989 --> 00:46:54,299
around for a few minutes oh yes one

00:46:44,729 --> 00:46:57,059
right there sure thanks hi so I noticed

00:46:54,299 --> 00:46:59,989
a problem that with device testing go on

00:46:57,059 --> 00:47:03,390
the website ditch that we develop

00:46:59,989 --> 00:47:06,839
somehow I always manage to skip a

00:47:03,390 --> 00:47:09,569
specific resolution and viewport width

00:47:06,839 --> 00:47:12,450
with tools like browser sink or ghost

00:47:09,569 --> 00:47:14,729
lab which you mentioned I used browsers

00:47:12,450 --> 00:47:17,849
thing personally but I have to have a

00:47:14,729 --> 00:47:21,509
bunch of devet devices so I'm using

00:47:17,849 --> 00:47:24,739
chrome and there I don't know what's

00:47:21,509 --> 00:47:29,430
called to simulate devices emulator yeah

00:47:24,739 --> 00:47:31,890
so somehow that's the part of front a

00:47:29,430 --> 00:47:33,930
dub that's constantly lacking behind on

00:47:31,890 --> 00:47:37,470
the support with new devices all the

00:47:33,930 --> 00:47:39,960
time being introduced and constant

00:47:37,470 --> 00:47:42,809
differences with browser renderings and

00:47:39,960 --> 00:47:47,160
that's something that I'm not sure if

00:47:42,809 --> 00:47:50,160
we've resolved at the moment and do you

00:47:47,160 --> 00:47:53,910
think that's the part that someone who

00:47:50,160 --> 00:47:56,670
needs to improve or very good question I

00:47:53,910 --> 00:47:59,609
you know I think you know while there is

00:47:56,670 --> 00:48:01,589
a lot of focus on you know things like

00:47:59,609 --> 00:48:06,059
configuration you saw that you know

00:48:01,589 --> 00:48:08,299
tools like Rafe use llamo you know it's

00:48:06,059 --> 00:48:10,799
it's very important to organize these

00:48:08,299 --> 00:48:13,529
various properties you know likes you

00:48:10,799 --> 00:48:15,180
know stuff like viewport sets or or you

00:48:13,529 --> 00:48:17,430
know what whatever you want to test I

00:48:15,180 --> 00:48:19,890
think there needs to be a motion sort of

00:48:17,430 --> 00:48:23,960
a movement toward building a lot more of

00:48:19,890 --> 00:48:23,960
that configuration in easily sort of

00:48:24,289 --> 00:48:31,380
packaged ways and one of the ways that I

00:48:28,410 --> 00:48:33,329
think you know the the sort of front

00:48:31,380 --> 00:48:34,859
adopts world needs to change is that it

00:48:33,329 --> 00:48:36,839
needs to go much more toward this

00:48:34,859 --> 00:48:38,190
direction you know like the you know

00:48:36,839 --> 00:48:39,950
they can take a lot of inspiration from

00:48:38,190 --> 00:48:43,200
the configuration management

00:48:39,950 --> 00:48:44,460
improvements or the the new ideas of

00:48:43,200 --> 00:48:46,349
configuration management in Drupal 8

00:48:44,460 --> 00:48:49,289
which is that you want to be able to

00:48:46,349 --> 00:48:51,059
have a very easily exportable set of

00:48:49,289 --> 00:48:51,599
configurations in your llamo file or

00:48:51,059 --> 00:48:53,339
let's say what

00:48:51,599 --> 00:48:55,950
whatever you know you know thing you

00:48:53,339 --> 00:48:58,289
want to use that can be exported than

00:48:55,950 --> 00:49:00,599
any friend that you might have and you

00:48:58,289 --> 00:49:01,529
know that will actually improve the sort

00:49:00,599 --> 00:49:03,569
of situation that you're talking about

00:49:01,529 --> 00:49:07,049
with the sort of you know rampant growth

00:49:03,569 --> 00:49:10,019
of various kind of devices and new kinds

00:49:07,049 --> 00:49:11,609
of you know things like a new new like

00:49:10,019 --> 00:49:15,229
standard viewport sizes and stuff like

00:49:11,609 --> 00:49:18,630
that I think that this is an area that

00:49:15,229 --> 00:49:23,299
needs some improvement so or could there

00:49:18,630 --> 00:49:23,299
um yes please

00:49:50,230 --> 00:49:55,990
I guess I'm not quite sure what you mean

00:49:53,720 --> 00:49:55,990
so

00:50:07,450 --> 00:50:15,020
very very good question um so the

00:50:09,980 --> 00:50:18,490
question is about basically scaffolding

00:50:15,020 --> 00:50:26,990
and task management within your drupal

00:50:18,490 --> 00:50:28,760
instances right I'm contributing well

00:50:26,990 --> 00:50:33,140
you know I've so I've had so I've had

00:50:28,760 --> 00:50:35,600
discussions with a lot of femurs and you

00:50:33,140 --> 00:50:37,880
know like people people who write very

00:50:35,600 --> 00:50:39,200
sort of front and heavy modules and one

00:50:37,880 --> 00:50:40,880
of the things that there's some

00:50:39,200 --> 00:50:42,320
discussion around is is incorporating

00:50:40,880 --> 00:50:44,900
things like gulp files and grunt files

00:50:42,320 --> 00:50:47,330
actually into your your your contribute

00:50:44,900 --> 00:50:49,880
themes and modules I think it's it's

00:50:47,330 --> 00:50:51,790
something that it hasn't really gathered

00:50:49,880 --> 00:50:55,220
that much traction just because of how

00:50:51,790 --> 00:50:58,400
you know I don't want to say reductive

00:50:55,220 --> 00:50:59,870
but very how minimalist Drupal is in

00:50:58,400 --> 00:51:01,460
terms of what it accepts and

00:50:59,870 --> 00:51:02,720
contributions in terms of you know in

00:51:01,460 --> 00:51:05,930
terms of what they want things to look

00:51:02,720 --> 00:51:07,940
like and you know it's certainly

00:51:05,930 --> 00:51:09,380
something that could be a bother i think

00:51:07,940 --> 00:51:13,340
that's that's very compelling is this

00:51:09,380 --> 00:51:15,140
idea of introducing some new elements

00:51:13,340 --> 00:51:17,090
into things like contributed themes and

00:51:15,140 --> 00:51:19,370
modules you know especially if you want

00:51:17,090 --> 00:51:20,960
to use things like power or golf balls

00:51:19,370 --> 00:51:22,130
you know you should be able to put those

00:51:20,960 --> 00:51:23,180
into your theme and contribute those

00:51:22,130 --> 00:51:25,460
back and people should be able to

00:51:23,180 --> 00:51:26,840
download them and instantly sort of you

00:51:25,460 --> 00:51:31,330
know jump in with their with their

00:51:26,840 --> 00:51:33,470
workflow already in place it's it's very

00:51:31,330 --> 00:51:35,240
you know i think it's i think it's tough

00:51:33,470 --> 00:51:37,670
especially because of the fact that you

00:51:35,240 --> 00:51:39,800
know a lot of the approaches that people

00:51:37,670 --> 00:51:41,660
are taking these days with things like

00:51:39,800 --> 00:51:43,040
automation and scaffolding are really

00:51:41,660 --> 00:51:46,070
more focused on things like client-side

00:51:43,040 --> 00:51:49,070
frameworks more on the JavaScript MVC

00:51:46,070 --> 00:51:51,200
side so you know certainly something

00:51:49,070 --> 00:51:55,310
that also requires more discussion so

00:51:51,200 --> 00:51:57,770
yeah very interesting though already

00:51:55,310 --> 00:51:59,450
well thank you very much and I'll stick

00:51:57,770 --> 00:52:00,760
around for just a few minutes if you

00:51:59,450 --> 00:52:03,560
want to speak with me privately and

00:52:00,760 --> 00:52:05,800
thank you very much enjoy the rest of

00:52:03,560 --> 00:52:05,800

YouTube URL: https://www.youtube.com/watch?v=TGx4pKdRRgY


