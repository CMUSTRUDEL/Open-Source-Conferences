Title: Extending Views   Views plugins   DrupalCon Global 2020
Publication date: 2020-08-25
Playlist: DrupalCon Global 2020
Description: 
	Develop custom Views plugins to meet complex or non-standard requirements. Choose likely Views plugin categories to match needs.
Captions: 
	00:00:03,840 --> 00:00:08,480
hey

00:00:05,200 --> 00:00:09,679
so a bit about me i've been in drupal

00:00:08,480 --> 00:00:12,639
land for around

00:00:09,679 --> 00:00:13,360
seven years now i've been working with

00:00:12,639 --> 00:00:16,400
charity

00:00:13,360 --> 00:00:19,600
in washington dc for two years

00:00:16,400 --> 00:00:20,880
and before that was mostly freelance and

00:00:19,600 --> 00:00:30,240
some agency work

00:00:20,880 --> 00:00:32,880
in canada

00:00:30,240 --> 00:00:34,480
so today we're going to look at

00:00:32,880 --> 00:00:37,840
annotation plugins

00:00:34,480 --> 00:00:41,040
specifically within drupal views

00:00:37,840 --> 00:00:43,440
they are a lot of them there's actually

00:00:41,040 --> 00:00:47,120
17 different types of annotation plugins

00:00:43,440 --> 00:00:47,120
used within drupal 8 views

00:00:52,000 --> 00:00:57,440
so we're going to start out really basic

00:00:55,280 --> 00:00:58,559
in case anyone here is not familiar with

00:00:57,440 --> 00:01:01,760
drupal 8

00:00:58,559 --> 00:01:04,879
or not very familiar with views i

00:01:01,760 --> 00:01:05,920
expecting this is going to be replicated

00:01:04,879 --> 00:01:10,560
for most people

00:01:05,920 --> 00:01:13,600
but might as well just go quick intro

00:01:10,560 --> 00:01:15,280
yep not surprised there's definitely uh

00:01:13,600 --> 00:01:18,720
what is it 60 percent of

00:01:15,280 --> 00:01:19,840
sites are still on drupal 7. so there's

00:01:18,720 --> 00:01:21,680
definitely people that are getting

00:01:19,840 --> 00:01:22,720
introduced to drupal 8 especially over

00:01:21,680 --> 00:01:25,439
the next

00:01:22,720 --> 00:01:27,840
two to three years as we migrate more

00:01:25,439 --> 00:01:30,880
and more sites

00:01:27,840 --> 00:01:34,640
so in drupal 8 views has been moved

00:01:30,880 --> 00:01:38,240
from contrib land into core and

00:01:34,640 --> 00:01:39,520
this is great i like it it means it's

00:01:38,240 --> 00:01:43,280
one less module that

00:01:39,520 --> 00:01:46,479
i always install and

00:01:43,280 --> 00:01:49,119
so kind of heading for

00:01:46,479 --> 00:01:51,360
drupal aaa views is you can create

00:01:49,119 --> 00:01:54,640
customized lists and queries from your

00:01:51,360 --> 00:01:57,680
database it is

00:01:54,640 --> 00:01:58,000
both that's an inadequate description

00:01:57,680 --> 00:02:00,719
but

00:01:58,000 --> 00:02:01,840
is entirely what it does it just

00:02:00,719 --> 00:02:04,640
provides a ui

00:02:01,840 --> 00:02:06,399
you could be doing that with queries and

00:02:04,640 --> 00:02:09,840
custom sql or whatever

00:02:06,399 --> 00:02:11,920
your database language is in but the ui

00:02:09,840 --> 00:02:13,840
is a lot easier both for maintenance

00:02:11,920 --> 00:02:16,160
purposes and for building

00:02:13,840 --> 00:02:16,959
you don't actually have to be an sql

00:02:16,160 --> 00:02:23,840
expert

00:02:16,959 --> 00:02:23,840
to provide a relatively performant list

00:02:26,000 --> 00:02:30,080
so drupal 8 had a whole lot of

00:02:28,879 --> 00:02:32,800
advertising about

00:02:30,080 --> 00:02:34,720
getting off the island and one of the

00:02:32,800 --> 00:02:38,319
new things it introduced

00:02:34,720 --> 00:02:40,560
was a plugin system so

00:02:38,319 --> 00:02:43,440
there was a lot of discussion about best

00:02:40,560 --> 00:02:47,120
ways to provide reusable code

00:02:43,440 --> 00:02:50,239
that was very modular

00:02:47,120 --> 00:02:53,840
and one of the

00:02:50,239 --> 00:02:57,040
old methods was the hook views plugins

00:02:53,840 --> 00:02:58,400
where you just wrote in exactly what the

00:02:57,040 --> 00:03:01,840
plugin did

00:02:58,400 --> 00:03:03,040
into one file that then was loaded every

00:03:01,840 --> 00:03:06,480
single load

00:03:03,040 --> 00:03:10,159
this is it works it worked for drupal 7

00:03:06,480 --> 00:03:12,720
it would still work in drupal 8 but it's

00:03:10,159 --> 00:03:15,599
has disadvantages specifically the

00:03:12,720 --> 00:03:18,000
performance is

00:03:15,599 --> 00:03:19,280
well it has to load the file every time

00:03:18,000 --> 00:03:22,560
it

00:03:19,280 --> 00:03:23,599
has to actually process the php whereas

00:03:22,560 --> 00:03:26,480
with the

00:03:23,599 --> 00:03:27,519
new method of using the doctrine

00:03:26,480 --> 00:03:32,159
annotations

00:03:27,519 --> 00:03:35,440
library it just processes a bit of text

00:03:32,159 --> 00:03:38,640
rather than actually loading the whole

00:03:35,440 --> 00:03:41,760
php process for it

00:03:38,640 --> 00:03:44,720
so this is

00:03:41,760 --> 00:03:46,239
more performant and also said added

00:03:44,720 --> 00:03:49,519
benefit instead of

00:03:46,239 --> 00:03:52,879
you have one file with your plugin

00:03:49,519 --> 00:03:56,000
another file describing what it does and

00:03:52,879 --> 00:04:01,840
providing default options to it you have

00:03:56,000 --> 00:04:01,840
it all in one place

00:04:04,959 --> 00:04:12,319
so a really simple annotation

00:04:08,879 --> 00:04:15,120
is just an app and then the name of the

00:04:12,319 --> 00:04:18,720
type of plugin and then

00:04:15,120 --> 00:04:21,199
the plugins id in this case a views

00:04:18,720 --> 00:04:21,199
filter

00:04:21,519 --> 00:04:28,080
you may notice this is actually a whole

00:04:24,560 --> 00:04:32,479
class heading here with the comment

00:04:28,080 --> 00:04:35,520
and the in group that's just used by the

00:04:32,479 --> 00:04:37,840
drupal api site to perform

00:04:35,520 --> 00:04:38,800
nice documentation that doesn't have to

00:04:37,840 --> 00:04:41,520
have actual

00:04:38,800 --> 00:04:42,320
you know human interfacing to just

00:04:41,520 --> 00:04:45,120
generate the

00:04:42,320 --> 00:04:45,120
documentation

00:04:46,240 --> 00:04:49,919
but a lot of plugins need a bit more

00:04:49,360 --> 00:04:53,199
than

00:04:49,919 --> 00:04:57,840
just a name so for

00:04:53,199 --> 00:04:57,840
the more complicated ones you have

00:04:58,240 --> 00:05:02,000
great glad the captions are being useful

00:05:00,240 --> 00:05:05,600
to everyone

00:05:02,000 --> 00:05:09,600
so for a more bulky

00:05:05,600 --> 00:05:12,400
plugin like a view style you have the id

00:05:09,600 --> 00:05:14,080
you might have noticed that on the

00:05:12,400 --> 00:05:15,759
previous example

00:05:14,080 --> 00:05:17,759
it was just a name inside of the

00:05:15,759 --> 00:05:19,840
brackets didn't mention id

00:05:17,759 --> 00:05:21,039
by default if there's one argument to

00:05:19,840 --> 00:05:24,240
the

00:05:21,039 --> 00:05:27,280
plugin it is the id in this case

00:05:24,240 --> 00:05:29,120
we have an id and a title

00:05:27,280 --> 00:05:30,639
you may notice there's another app

00:05:29,120 --> 00:05:34,080
translation

00:05:30,639 --> 00:05:35,360
this just provides the bluetooth

00:05:34,080 --> 00:05:38,320
translation api

00:05:35,360 --> 00:05:40,720
for that word it's like the built-in t

00:05:38,320 --> 00:05:40,720
function

00:05:42,479 --> 00:05:48,880
and what options are available depends

00:05:45,360 --> 00:05:48,880
entirely on the plugin

00:05:49,120 --> 00:05:54,720
thanks alex i figure

00:05:52,560 --> 00:05:56,400
i'm not having much options to get fancy

00:05:54,720 --> 00:05:58,960
so i might as well get fancy while i'm

00:05:56,400 --> 00:05:58,960
on screen

00:06:03,280 --> 00:06:09,280
so as we uh discussed

00:06:06,639 --> 00:06:11,120
well as dry as discussed in the dryers

00:06:09,280 --> 00:06:14,560
note this morning

00:06:11,120 --> 00:06:15,520
php 7 is running out of time into its

00:06:14,560 --> 00:06:19,120
lifespan

00:06:15,520 --> 00:06:20,639
and with drupal 9 we're going to be

00:06:19,120 --> 00:06:23,680
mostly on

00:06:20,639 --> 00:06:25,600
php8 for

00:06:23,680 --> 00:06:29,520
the annotation plugins we've mostly been

00:06:25,600 --> 00:06:31,600
using doctrine annotations library

00:06:29,520 --> 00:06:34,319
we don't yet know whether we'll be

00:06:31,600 --> 00:06:36,160
moving to the built-in annotations

00:06:34,319 --> 00:06:38,639
but there are going to be built-in

00:06:36,160 --> 00:06:40,960
annotations in php8

00:06:38,639 --> 00:06:43,199
i suspect it'll probably be the in

00:06:40,960 --> 00:06:43,840
drupal 10 or 11 before we move over

00:06:43,199 --> 00:06:46,880
there

00:06:43,840 --> 00:06:48,800
so as to support older sites

00:06:46,880 --> 00:06:52,160
which are because a lot of people have a

00:06:48,800 --> 00:06:55,120
hard time updating to php you know

00:06:52,160 --> 00:06:56,720
as fast as the php project is updating

00:06:55,120 --> 00:07:00,880
especially since ubuntu

00:06:56,720 --> 00:07:00,880
provides security support

00:07:01,759 --> 00:07:08,240
so in the new

00:07:05,039 --> 00:07:10,080
php 8 is still under development it's

00:07:08,240 --> 00:07:13,440
not going to have a first release until

00:07:10,080 --> 00:07:14,960
at least this winter but it is

00:07:13,440 --> 00:07:17,120
basically the same as doctrine

00:07:14,960 --> 00:07:20,639
annotations except it's going to be two

00:07:17,120 --> 00:07:20,639
out symbols instead of one

00:07:24,080 --> 00:07:30,319
so now we move on to views plugin types

00:07:27,919 --> 00:07:31,599
as i mentioned earlier there's a lot of

00:07:30,319 --> 00:07:34,960
them

00:07:31,599 --> 00:07:34,960
some of them are

00:07:35,199 --> 00:07:38,720
well some of them are you're going to be

00:07:37,440 --> 00:07:41,680
unlikely to actually ever

00:07:38,720 --> 00:07:44,479
want to change but we'll just go for a

00:07:41,680 --> 00:07:48,560
quick rundown of them all

00:07:44,479 --> 00:07:51,440
views access it's a pretty common

00:07:48,560 --> 00:07:52,000
because well access controls is one of

00:07:51,440 --> 00:07:55,919
the

00:07:52,000 --> 00:07:59,199
major good points of

00:07:55,919 --> 00:08:01,919
quality cms most of the views access

00:07:59,199 --> 00:08:05,440
controls are provided by the user module

00:08:01,919 --> 00:08:08,000
although other modules that provide

00:08:05,440 --> 00:08:11,039
access also have been known to provide

00:08:08,000 --> 00:08:13,360
fuse access controls

00:08:11,039 --> 00:08:14,080
i personally have never had need to

00:08:13,360 --> 00:08:16,160
build a

00:08:14,080 --> 00:08:20,000
custom views access that wasn't just

00:08:16,160 --> 00:08:20,000
good enough using node access

00:08:21,520 --> 00:08:27,840
so views areas that's like the

00:08:24,720 --> 00:08:29,840
message area the main content results

00:08:27,840 --> 00:08:32,000
the footer photo and the header those

00:08:29,840 --> 00:08:34,159
are also provided by plugins

00:08:32,000 --> 00:08:35,200
you can create new ones but again it's

00:08:34,159 --> 00:08:37,519
one that

00:08:35,200 --> 00:08:40,800
most sites really you don't need to

00:08:37,519 --> 00:08:44,240
create new ones

00:08:40,800 --> 00:08:47,360
and in general you may notice

00:08:44,240 --> 00:08:51,200
that this here says views area quote

00:08:47,360 --> 00:08:52,480
broken that's because if any plugin is

00:08:51,200 --> 00:08:55,600
broken

00:08:52,480 --> 00:08:59,120
well by broken i mean doesn't exist or

00:08:55,600 --> 00:09:02,240
can't load views replaces it with a

00:08:59,120 --> 00:09:05,040
broken titled plugin

00:09:02,240 --> 00:09:06,720
that then the rest of the view will try

00:09:05,040 --> 00:09:07,120
to successfully load sometimes it will

00:09:06,720 --> 00:09:10,160
fail

00:09:07,120 --> 00:09:13,680
but most often it will load and just

00:09:10,160 --> 00:09:15,920
one field will be missing or the message

00:09:13,680 --> 00:09:18,560
area will be missing

00:09:15,920 --> 00:09:19,600
whatever but you have a mostly

00:09:18,560 --> 00:09:23,839
functional

00:09:19,600 --> 00:09:23,839
site still

00:09:24,240 --> 00:09:28,640
so if you're using contextual filters

00:09:27,040 --> 00:09:31,920
there's a

00:09:28,640 --> 00:09:34,640
really annoying aspect on the

00:09:31,920 --> 00:09:35,519
ui they're called contextual filters on

00:09:34,640 --> 00:09:38,640
the back end

00:09:35,519 --> 00:09:41,680
they're called arguments i don't know

00:09:38,640 --> 00:09:44,160
why this was done i missed there's

00:09:41,680 --> 00:09:46,880
probably some historical reasons

00:09:44,160 --> 00:09:47,519
but having a different term makes

00:09:46,880 --> 00:09:52,640
searching for

00:09:47,519 --> 00:09:52,640
really hard the uh

00:09:52,720 --> 00:09:58,480
there's actually three different primary

00:09:56,160 --> 00:09:59,279
views argument plugins there's the

00:09:58,480 --> 00:10:02,720
straight

00:09:59,279 --> 00:10:05,600
views argument that just lets you

00:10:02,720 --> 00:10:06,560
select a date type it depends on what

00:10:05,600 --> 00:10:08,320
field you choose

00:10:06,560 --> 00:10:09,760
if you choose a date field it will

00:10:08,320 --> 00:10:13,920
provide a date field

00:10:09,760 --> 00:10:16,720
as the default argument plugin to use

00:10:13,920 --> 00:10:19,839
uh i in just a second i can grab your

00:10:16,720 --> 00:10:19,839
slide link

00:10:34,800 --> 00:10:40,800
yeah there's a slide link in the channel

00:10:38,000 --> 00:10:40,800
ah no worries

00:10:41,680 --> 00:10:47,920
so yeah it will provide you

00:10:44,720 --> 00:10:48,880
the fuse argument plug-in that it knows

00:10:47,920 --> 00:10:52,240
best

00:10:48,880 --> 00:10:54,959
you generally speaking it is correct

00:10:52,240 --> 00:10:55,600
there are most of the views arguments do

00:10:54,959 --> 00:10:57,600
not have

00:10:55,600 --> 00:10:59,680
extra plugins that you theoretically

00:10:57,600 --> 00:11:03,200
could choose

00:10:59,680 --> 00:11:05,279
for the views argument default that

00:11:03,200 --> 00:11:06,640
provides you a default value if you

00:11:05,279 --> 00:11:09,600
don't manually

00:11:06,640 --> 00:11:15,839
specify the value when you send the view

00:11:09,600 --> 00:11:15,839
to render

00:11:17,040 --> 00:11:21,760
for the views argument defaults you can

00:11:19,519 --> 00:11:29,519
choose which plugins to use

00:11:21,760 --> 00:11:33,040
and then configure them

00:11:29,519 --> 00:11:35,760
there's also a views argument validator

00:11:33,040 --> 00:11:38,480
which unlike most of these views plugins

00:11:35,760 --> 00:11:41,920
is almost entirely provided by

00:11:38,480 --> 00:11:43,440
modules other than views both node user

00:11:41,920 --> 00:11:46,640
taxonomy

00:11:43,440 --> 00:11:49,760
and that just validates that some

00:11:46,640 --> 00:11:52,720
numbers verb that you enter is

00:11:49,760 --> 00:11:57,839
actually a node id not just a random

00:11:52,720 --> 00:11:57,839
number for example

00:11:58,399 --> 00:12:05,279
then as many of you hopefully familiar

00:12:01,920 --> 00:12:08,880
the views cache plugins mostly tag

00:12:05,279 --> 00:12:10,480
based and time based they

00:12:08,880 --> 00:12:12,399
if you want a performant view you're

00:12:10,480 --> 00:12:14,720
going to need to use them

00:12:12,399 --> 00:12:16,240
except for in the case of using facets

00:12:14,720 --> 00:12:18,399
and search api

00:12:16,240 --> 00:12:21,120
in which case you have to not use them

00:12:18,399 --> 00:12:23,760
which is a nice little

00:12:21,120 --> 00:12:27,040
gotcha if you who miss it you will have

00:12:23,760 --> 00:12:29,120
views that don't properly update

00:12:27,040 --> 00:12:30,320
uh the views module provides all the

00:12:29,120 --> 00:12:33,600
core options

00:12:30,320 --> 00:12:38,800
for caching search api does also provide

00:12:33,600 --> 00:12:42,720
some others

00:12:38,800 --> 00:12:46,079
so one of the more commonly actually

00:12:42,720 --> 00:12:46,079
modified ones in

00:12:46,399 --> 00:12:50,000
the contrib land i've never modified one

00:12:49,200 --> 00:12:53,519
for

00:12:50,000 --> 00:12:55,680
not contrib but for contrib i've worked

00:12:53,519 --> 00:12:57,440
on view slideshow

00:12:55,680 --> 00:12:58,880
which was mostly styled by bit of

00:12:57,440 --> 00:13:01,920
display is the

00:12:58,880 --> 00:13:07,200
views display plugin which lets you

00:13:01,920 --> 00:13:11,279
render your data as a rss feed

00:13:07,200 --> 00:13:15,519
or as a open gmail map

00:13:11,279 --> 00:13:15,519
or as a table

00:13:16,160 --> 00:13:21,839
or as a block

00:13:22,959 --> 00:13:26,880
i've never actually seen this views

00:13:24,639 --> 00:13:29,519
display extender in use

00:13:26,880 --> 00:13:30,480
i understand there is a views display

00:13:29,519 --> 00:13:33,120
extender

00:13:30,480 --> 00:13:34,079
built into simple xml sitemap but i

00:13:33,120 --> 00:13:38,320
don't know what data

00:13:34,079 --> 00:13:40,800
it provides never had a reason to use it

00:13:38,320 --> 00:13:41,760
so including it for completeness but i

00:13:40,800 --> 00:13:46,000
can't say i can

00:13:41,760 --> 00:13:46,000
provide any real recommendations on it

00:13:46,880 --> 00:13:50,480
then there's the views exposed form

00:13:49,120 --> 00:13:53,519
plugin

00:13:50,480 --> 00:13:55,440
there's the basic one that comes with

00:13:53,519 --> 00:13:57,839
core and then you have the better

00:13:55,440 --> 00:14:00,959
exposed filters project

00:13:57,839 --> 00:14:03,360
basically it's a rare site that i don't

00:14:00,959 --> 00:14:06,320
want to use better exposed filters

00:14:03,360 --> 00:14:08,240
and i've never come across an instance

00:14:06,320 --> 00:14:09,360
where it was worthwhile building a new

00:14:08,240 --> 00:14:12,480
filter plug-in

00:14:09,360 --> 00:14:15,920
rather than just doing hook views

00:14:12,480 --> 00:14:20,399
for mulcher not mulch or

00:14:15,920 --> 00:14:20,399
alter well

00:14:21,680 --> 00:14:24,079
the uh

00:14:25,279 --> 00:14:28,560
that is uh not the most accurate

00:14:27,760 --> 00:14:32,079
captioning

00:14:28,560 --> 00:14:32,079
that we'll take it

00:14:32,959 --> 00:14:39,920
so then there's also a bunch of querying

00:14:36,079 --> 00:14:43,440
specific plugins there's fused joins

00:14:39,920 --> 00:14:44,240
few sorts fused relationships and views

00:14:43,440 --> 00:14:47,440
query

00:14:44,240 --> 00:14:50,720
these all perform the special

00:14:47,440 --> 00:14:54,079
changing up of your ui selections

00:14:50,720 --> 00:14:56,839
into magical sql or

00:14:54,079 --> 00:14:59,440
postgres or whatever language you're

00:14:56,839 --> 00:15:00,959
using the

00:14:59,440 --> 00:15:05,120
likelihood that you actually need to

00:15:00,959 --> 00:15:05,120
modify these ones is fairly rare

00:15:05,360 --> 00:15:08,720
but they're there

00:15:10,079 --> 00:15:13,279
i suggest keeping your weaponry out of

00:15:12,320 --> 00:15:15,839
views

00:15:13,279 --> 00:15:16,800
but if you want to sell medieval

00:15:15,839 --> 00:15:21,040
weaponry

00:15:16,800 --> 00:15:21,040
views can provide a good list for you

00:15:23,760 --> 00:15:29,839
uh yes so

00:15:27,680 --> 00:15:31,680
i was slightly unclear about the

00:15:29,839 --> 00:15:32,959
difference between view style and views

00:15:31,680 --> 00:15:36,240
display

00:15:32,959 --> 00:15:38,959
views at display provides

00:15:36,240 --> 00:15:38,959
the actual

00:15:39,279 --> 00:15:45,519
surrounding this

00:15:42,800 --> 00:15:46,959
the actual surroundings like for a feed

00:15:45,519 --> 00:15:51,519
it provides the

00:15:46,959 --> 00:15:54,639
header data where uh there's

00:15:51,519 --> 00:15:57,040
for a block it provides

00:15:54,639 --> 00:15:59,040
what type of block it is where it can be

00:15:57,040 --> 00:16:02,399
placed

00:15:59,040 --> 00:16:05,440
whereas us the style provides the actual

00:16:02,399 --> 00:16:08,959
content the uh twig file

00:16:05,440 --> 00:16:10,000
for is this a bunch of rows connected

00:16:08,959 --> 00:16:13,519
together

00:16:10,000 --> 00:16:16,959
or is this a table with

00:16:13,519 --> 00:16:22,160
individual fields in sequence

00:16:16,959 --> 00:16:25,680
down it

00:16:22,160 --> 00:16:28,800
so if we're talking about views rows

00:16:25,680 --> 00:16:32,000
you can render things as

00:16:28,800 --> 00:16:34,560
rows that's a fairly common way to

00:16:32,000 --> 00:16:36,720
do it and when you're using any of the

00:16:34,560 --> 00:16:42,639
displays that use rows

00:16:36,720 --> 00:16:42,639
then you get to render fields

00:16:43,360 --> 00:16:50,160
again this is one that it's got a lot of

00:16:46,480 --> 00:16:52,560
power but not much use it's most use

00:16:50,160 --> 00:16:52,560
cases

00:16:53,519 --> 00:16:57,600
probably the one that i have modified

00:16:56,240 --> 00:17:00,079
most since i

00:16:57,600 --> 00:17:01,199
been a part-time maintainer of the

00:17:00,079 --> 00:17:04,319
drupal 8

00:17:01,199 --> 00:17:07,919
view slideshow module is view style

00:17:04,319 --> 00:17:11,520
which is basically everything

00:17:07,919 --> 00:17:18,959
about the inside of the view before you

00:17:11,520 --> 00:17:21,600
get to actual results

00:17:18,959 --> 00:17:22,400
and then in terms of actually using

00:17:21,600 --> 00:17:26,240
plugins

00:17:22,400 --> 00:17:29,360
in random projects rather than

00:17:26,240 --> 00:17:32,000
using one plugin in a lot of projects

00:17:29,360 --> 00:17:34,320
the ones i've used most are views field

00:17:32,000 --> 00:17:36,320
and views filter

00:17:34,320 --> 00:17:37,520
these are kind of similar to views

00:17:36,320 --> 00:17:41,280
argument you get

00:17:37,520 --> 00:17:44,240
no ui to select what

00:17:41,280 --> 00:17:45,600
plugin you are going to use but you do

00:17:44,240 --> 00:17:48,400
have a

00:17:45,600 --> 00:17:52,160
bullet ui to configure the plugin if the

00:17:48,400 --> 00:17:52,160
plugin has configuration options

00:17:52,400 --> 00:17:59,360
so they're not the most friendly to

00:17:56,160 --> 00:18:03,840
alter because there's no ui for them but

00:17:59,360 --> 00:18:07,280
using the configuration workflow you can

00:18:03,840 --> 00:18:10,640
so for example in this strip down

00:18:07,280 --> 00:18:13,760
on fuse we have

00:18:10,640 --> 00:18:15,280
a bunch of things that are

00:18:13,760 --> 00:18:18,160
minimized so that you can see this

00:18:15,280 --> 00:18:22,880
structure and then down here we have

00:18:18,160 --> 00:18:26,000
plugin id taxonomy index tidy node depth

00:18:22,880 --> 00:18:27,520
that can be any filter plugin id

00:18:26,000 --> 00:18:29,520
and if you just import that

00:18:27,520 --> 00:18:32,160
configuration back into

00:18:29,520 --> 00:18:33,679
drupal then it will remember that and

00:18:32,160 --> 00:18:36,080
even if you import an export

00:18:33,679 --> 00:18:36,880
a hundred times you'll stay that way

00:18:36,080 --> 00:18:43,840
because there's

00:18:36,880 --> 00:18:43,840
no ui that will overwrite it either

00:18:58,960 --> 00:19:05,840
so uh one of my uh

00:19:02,799 --> 00:19:06,320
favorite little things i found in terms

00:19:05,840 --> 00:19:09,360
of

00:19:06,320 --> 00:19:12,799
specifically the taxonomy index

00:19:09,360 --> 00:19:16,640
is most cases when you

00:19:12,799 --> 00:19:19,760
select a term that you have

00:19:16,640 --> 00:19:22,240
hierarchy to you often want

00:19:19,760 --> 00:19:23,440
child items to be selected as well like

00:19:22,240 --> 00:19:27,840
you have a

00:19:23,440 --> 00:19:27,840
taxonomy filter with say

00:19:28,160 --> 00:19:34,320
cars and then you have a child

00:19:31,200 --> 00:19:37,039
term of text of toyota

00:19:34,320 --> 00:19:38,000
ford and then you have a fiesta under

00:19:37,039 --> 00:19:40,480
ford if you select

00:19:38,000 --> 00:19:42,160
a ford you want to catch that fiesta as

00:19:40,480 --> 00:19:45,520
well

00:19:42,160 --> 00:19:48,799
but by default the general

00:19:45,520 --> 00:19:49,360
taxonomy filter plug-in only will catch

00:19:48,799 --> 00:19:52,000
things are

00:19:49,360 --> 00:19:52,799
selected that are tagged with ford

00:19:52,000 --> 00:19:56,160
rather than

00:19:52,799 --> 00:19:59,840
fiesta but actually in core

00:19:56,160 --> 00:20:07,039
there is already a plug-in that

00:19:59,840 --> 00:20:10,480
does that out of the box

00:20:07,039 --> 00:20:13,840
that's the uh taxonomy under index

00:20:10,480 --> 00:20:17,120
underbar tid under depth plugin

00:20:13,840 --> 00:20:19,280
i don't actually know why it uh

00:20:17,120 --> 00:20:20,880
well actually i do know why it's not

00:20:19,280 --> 00:20:23,919
selected by default

00:20:20,880 --> 00:20:27,360
performance wise checking for depth

00:20:23,919 --> 00:20:27,360
is costly but

00:20:28,159 --> 00:20:34,880
yes as orlando is saying

00:20:31,520 --> 00:20:36,960
it's like you often do want it but

00:20:34,880 --> 00:20:38,080
is costly so it's something you should

00:20:36,960 --> 00:20:41,120
consider

00:20:38,080 --> 00:20:44,080
and if you are struggling because

00:20:41,120 --> 00:20:44,720
you don't actually want to have a node

00:20:44,080 --> 00:20:47,840
save

00:20:44,720 --> 00:20:49,039
function to say if this is tagged with

00:20:47,840 --> 00:20:53,919
fiesta also tag

00:20:49,039 --> 00:20:57,039
it with ford then just adding that extra

00:20:53,919 --> 00:20:57,440
plugin instead of the default you'll get

00:20:57,039 --> 00:21:00,320
a lot

00:20:57,440 --> 00:21:01,200
better results it's a performance hit

00:21:00,320 --> 00:21:04,720
but if you do

00:21:01,200 --> 00:21:05,520
proper views caching and you're caching

00:21:04,720 --> 00:21:08,720
all of

00:21:05,520 --> 00:21:11,840
your edge as well it's

00:21:08,720 --> 00:21:17,760
well it's you have to be aware of it

00:21:11,840 --> 00:21:20,960
but it's not the end of the world either

00:21:17,760 --> 00:21:22,080
now i'm just going to switch my screen

00:21:20,960 --> 00:21:26,000
sharing away from

00:21:22,080 --> 00:21:29,200
this the presentation to my actual

00:21:26,000 --> 00:21:32,880
code since it's kind of

00:21:29,200 --> 00:21:37,280
hard to view code in the

00:21:32,880 --> 00:21:37,280
slideshow without it getting really

00:21:42,840 --> 00:21:45,840
unreadable

00:21:56,480 --> 00:22:02,640
so in this is the specific

00:22:00,080 --> 00:22:04,640
taxonomy index tid depth that i was

00:22:02,640 --> 00:22:07,520
talking about

00:22:04,640 --> 00:22:08,320
all of the various fuse plug-ins have

00:22:07,520 --> 00:22:12,559
their own

00:22:08,320 --> 00:22:14,960
set of functions that you can use

00:22:12,559 --> 00:22:16,559
generally speaking if i want to have a

00:22:14,960 --> 00:22:20,320
custom

00:22:16,559 --> 00:22:21,679
filter i will usually inherit from one

00:22:20,320 --> 00:22:24,240
of the core filters

00:22:21,679 --> 00:22:25,760
rather than the base class because then

00:22:24,240 --> 00:22:29,840
i don't have to

00:22:25,760 --> 00:22:32,960
consider all of the

00:22:29,840 --> 00:22:36,080
nuances of the query i can just

00:22:32,960 --> 00:22:38,840
manually adjust the query how i need it

00:22:36,080 --> 00:22:41,120
and let the rest of it be taken care of

00:22:38,840 --> 00:22:44,640
naturally

00:22:41,120 --> 00:22:46,799
now you might be wondering

00:22:44,640 --> 00:22:49,360
why would i want to use plugins versus

00:22:46,799 --> 00:22:52,480
just normal views hooks

00:22:49,360 --> 00:22:56,720
there are views hooks that cover oh

00:22:52,480 --> 00:22:59,120
i'll just uh put us back onto the

00:22:56,720 --> 00:23:01,360
presentation so that you can actually

00:22:59,120 --> 00:23:09,840
continue to see

00:23:01,360 --> 00:23:09,840
the captioning

00:23:10,640 --> 00:23:14,320
so yes there are views plug there are

00:23:13,120 --> 00:23:16,159
fuse hooks that can do

00:23:14,320 --> 00:23:17,679
almost everything that views plugins can

00:23:16,159 --> 00:23:21,600
do the difference

00:23:17,679 --> 00:23:24,000
really is a matter of performance and

00:23:21,600 --> 00:23:24,880
clean cleanliness if you're going to

00:23:24,000 --> 00:23:28,080
have

00:23:24,880 --> 00:23:29,280
one hook that is doing a dozen different

00:23:28,080 --> 00:23:32,640
views

00:23:29,280 --> 00:23:34,799
it's going to be a long read and

00:23:32,640 --> 00:23:37,360
i don't really like having a module file

00:23:34,799 --> 00:23:40,480
that is 5000 lines long

00:23:37,360 --> 00:23:42,320
performance wise a views plugin is only

00:23:40,480 --> 00:23:44,720
loaded if it is actually used on the

00:23:42,320 --> 00:23:46,320
page whereas if you're a module file

00:23:44,720 --> 00:23:48,159
if your module is loaded the whole

00:23:46,320 --> 00:23:52,159
module file has to get processed

00:23:48,159 --> 00:23:52,159
before your page can get loaded

00:23:52,400 --> 00:23:58,720
and then beyond that there's

00:23:55,440 --> 00:24:02,840
also if you're doing it within the

00:23:58,720 --> 00:24:06,000
plugin you're doing it at the right time

00:24:02,840 --> 00:24:06,400
not after the fact generally speaking

00:24:06,000 --> 00:24:09,039
the

00:24:06,400 --> 00:24:10,799
views hooks you can still get it right

00:24:09,039 --> 00:24:14,400
but it's often a lot easier

00:24:10,799 --> 00:24:17,840
to generate the query conditions

00:24:14,400 --> 00:24:19,679
all as a one set package rather than

00:24:17,840 --> 00:24:21,840
figuring out scope

00:24:19,679 --> 00:24:32,080
walking through the query conditions and

00:24:21,840 --> 00:24:34,320
finding the right one to alter

00:24:32,080 --> 00:24:37,360
i haven't heard anything about views

00:24:34,320 --> 00:24:40,799
hooks being dropped

00:24:37,360 --> 00:24:43,120
there has been talk about dusk altar

00:24:40,799 --> 00:24:46,080
hooks in general being dropped

00:24:43,120 --> 00:24:46,400
but there's such a large body of modules

00:24:46,080 --> 00:24:49,840
that

00:24:46,400 --> 00:24:51,279
use them that i would be very surprised

00:24:49,840 --> 00:24:53,679
if they actually get

00:24:51,279 --> 00:24:56,480
dropped within d9 since there's only a

00:24:53,679 --> 00:24:59,520
two year cycle until drupal 10.

00:24:56,480 --> 00:25:02,720
i'm pretty confident that

00:24:59,520 --> 00:25:05,760
hooks are here for at least that period

00:25:02,720 --> 00:25:08,480
if they get depreciated in drupal 9

00:25:05,760 --> 00:25:08,880
i expect that they'll be kept for drupal

00:25:08,480 --> 00:25:11,919
00:25:08,880 --> 00:25:14,559
and switched to events at the

00:25:11,919 --> 00:25:15,120
as a dual system until drupal 11 at

00:25:14,559 --> 00:25:18,080
which point

00:25:15,120 --> 00:25:18,080
the hooks would be dropped

00:25:22,960 --> 00:25:29,679
yes as uh dylan was saying

00:25:26,720 --> 00:25:30,720
the your ui options with the actual

00:25:29,679 --> 00:25:32,960
plug-in

00:25:30,720 --> 00:25:33,760
versus doing a hook alter is a lot

00:25:32,960 --> 00:25:37,440
better

00:25:33,760 --> 00:25:41,200
you can and you can

00:25:37,440 --> 00:25:45,039
do form alters as well as hook alters on

00:25:41,200 --> 00:25:47,760
fuse and get roughly the same experience

00:25:45,039 --> 00:25:49,520
but then you're using multiple alters

00:25:47,760 --> 00:25:51,600
when you could have one plug-in file and

00:25:49,520 --> 00:25:55,279
have everything in the same spot

00:25:51,600 --> 00:25:58,799
it's a it's like either of them

00:25:55,279 --> 00:26:01,279
will work it's more a matter of

00:25:58,799 --> 00:26:02,000
will this be understandable if i leave

00:26:01,279 --> 00:26:05,039
this project

00:26:02,000 --> 00:26:08,159
come back in six months one file that's

00:26:05,039 --> 00:26:09,440
fairly easy to understand if it's in

00:26:08,159 --> 00:26:12,640
multiple

00:26:09,440 --> 00:26:16,320
hooks that mixed with six different

00:26:12,640 --> 00:26:19,600
views alters well

00:26:16,320 --> 00:26:22,799
i have had to update things like that

00:26:19,600 --> 00:26:25,919
and it takes time to refresh your mind

00:26:22,799 --> 00:26:39,840
or for a new person i hope you've left

00:26:25,919 --> 00:26:39,840
good documentation

00:26:46,480 --> 00:26:53,520
one of the other frequent

00:26:50,159 --> 00:26:56,880
reasons that i use these plugins is

00:26:53,520 --> 00:26:58,640
reusability is a lot easier because

00:26:56,880 --> 00:27:01,039
if you like this views plugin for one

00:26:58,640 --> 00:27:03,840
site you can easily copy it

00:27:01,039 --> 00:27:04,799
and put it into new site without having

00:27:03,840 --> 00:27:08,080
to

00:27:04,799 --> 00:27:08,080
find exactly

00:27:08,720 --> 00:27:14,000
where in your module files and adjust

00:27:11,760 --> 00:27:17,520
use ids

00:27:14,000 --> 00:27:21,279
so uh in casey for some

00:27:17,520 --> 00:27:22,240
of the views the you can see what plugin

00:27:21,279 --> 00:27:25,120
you're using

00:27:22,240 --> 00:27:27,279
not all the plugins provide a ui to tell

00:27:25,120 --> 00:27:30,240
you what plugin you're using

00:27:27,279 --> 00:27:31,520
if the what plugin you're using is a

00:27:30,240 --> 00:27:34,960
significant

00:27:31,520 --> 00:27:35,679
issue you definitely can in the actual

00:27:34,960 --> 00:27:40,320
plugin

00:27:35,679 --> 00:27:43,679
form you can say just provide a little

00:27:40,320 --> 00:27:46,799
html field to say this is

00:27:43,679 --> 00:27:50,000
x plugin like

00:27:46,799 --> 00:27:52,640
for views displays and styles it says

00:27:50,000 --> 00:27:54,159
you're using the table style or you're

00:27:52,640 --> 00:27:57,279
using the block display

00:27:54,159 --> 00:28:00,159
so that's really very clear but

00:27:57,279 --> 00:28:00,960
if you're using a custom field it

00:28:00,159 --> 00:28:03,440
doesn't say

00:28:00,960 --> 00:28:04,720
what field plug-in you're using unless

00:28:03,440 --> 00:28:08,000
you look at the config

00:28:04,720 --> 00:28:09,840
export so you in the con

00:28:08,000 --> 00:28:11,760
in the configuration form for that field

00:28:09,840 --> 00:28:14,880
plug-in you definitely can't add

00:28:11,760 --> 00:28:18,320
just a bit of markup and then you have

00:28:14,880 --> 00:28:18,320
some way of seeing it in the ui

00:28:19,760 --> 00:28:31,840
anyone else got any questions

00:28:36,399 --> 00:28:40,000
uh an example of

00:28:42,960 --> 00:28:46,960
what kind of example were you thinking

00:28:44,559 --> 00:28:46,960
city

00:28:57,840 --> 00:29:07,760
uh yeah so um altering the table

00:29:02,480 --> 00:29:12,240
that would be in the views query plugin

00:29:07,760 --> 00:29:15,600
or for uh use access plugin

00:29:12,240 --> 00:29:16,640
yeah that you can select what plugin

00:29:15,600 --> 00:29:20,080
you're using

00:29:16,640 --> 00:29:20,399
there's 17 plugins and about half of

00:29:20,080 --> 00:29:22,480
them

00:29:20,399 --> 00:29:23,840
you can select which ones you're using

00:29:22,480 --> 00:29:27,520
through the ui

00:29:23,840 --> 00:29:30,640
the fields filters and argument plugins

00:29:27,520 --> 00:29:34,640
are the primary ones that i have

00:29:30,640 --> 00:29:40,640
found actually useful to override the

00:29:34,640 --> 00:29:44,240
plugin id within the configuration

00:29:40,640 --> 00:29:55,840
and here i will just switch

00:29:44,240 --> 00:29:55,840
sharing screens again

00:30:06,840 --> 00:30:09,840
so

00:30:09,919 --> 00:30:17,679
so in the case of this file here

00:30:14,080 --> 00:30:20,799
we had a need of including

00:30:17,679 --> 00:30:22,799
child taxonomy i items like that for

00:30:20,799 --> 00:30:25,360
best example if they were tagged with

00:30:22,799 --> 00:30:29,440
fiesta and someone selected ford

00:30:25,360 --> 00:30:31,760
we needed to show the results for fiesta

00:30:29,440 --> 00:30:31,760
as well

00:30:32,240 --> 00:30:37,360
and however

00:30:35,520 --> 00:30:38,960
in this case we actually had three

00:30:37,360 --> 00:30:43,120
levels so

00:30:38,960 --> 00:30:45,919
it wasn't car types but for example

00:30:43,120 --> 00:30:47,039
ford fiesta two-door and if someone

00:30:45,919 --> 00:30:50,559
selected

00:30:47,039 --> 00:30:52,640
the ford we only wanted to show

00:30:50,559 --> 00:30:55,440
the broader categories not the

00:30:52,640 --> 00:30:58,480
subcategories

00:30:55,440 --> 00:31:02,320
it's i would have personally

00:30:58,480 --> 00:31:04,480
if it had been my uh design decision

00:31:02,320 --> 00:31:05,840
i would have just gone for showing all

00:31:04,480 --> 00:31:08,960
of them

00:31:05,840 --> 00:31:12,960
because adjusting the

00:31:08,960 --> 00:31:16,840
querying to be only one level was

00:31:12,960 --> 00:31:19,600
less performant than all levels

00:31:16,840 --> 00:31:22,480
but it was what the customer wanted

00:31:19,600 --> 00:31:23,840
so it's what we did it didn't have major

00:31:22,480 --> 00:31:27,039
performance impacts

00:31:23,840 --> 00:31:29,919
we had redis caching

00:31:27,039 --> 00:31:30,480
so yeah it wasn't what i would have

00:31:29,919 --> 00:31:33,840
chosen

00:31:30,480 --> 00:31:33,840
but it worked well

00:31:39,440 --> 00:31:46,080
so to create a custom contextual

00:31:42,480 --> 00:31:48,799
filter uh

00:31:46,080 --> 00:31:50,720
i've never actu i'll just uh go in order

00:31:48,799 --> 00:31:54,000
here for a minute

00:31:50,720 --> 00:31:56,320
so uh yes if you want to alter the

00:31:54,000 --> 00:31:57,919
configuration to use the right plugin id

00:31:56,320 --> 00:32:01,120
you have to do a

00:31:57,919 --> 00:32:04,559
drash config export or through the

00:32:01,120 --> 00:32:05,600
general drupal ui export it change the

00:32:04,559 --> 00:32:09,360
id

00:32:05,600 --> 00:32:11,600
and then import it and then make any

00:32:09,360 --> 00:32:14,240
further changes you want including

00:32:11,600 --> 00:32:16,000
say filling out the configuration for

00:32:14,240 --> 00:32:19,120
that new plugin

00:32:16,000 --> 00:32:22,480
generally speaking you can do views

00:32:19,120 --> 00:32:25,919
is something you can 100 do one as just

00:32:22,480 --> 00:32:26,320
a configuration file but i wouldn't want

00:32:25,919 --> 00:32:28,080
to

00:32:26,320 --> 00:32:29,840
and i think it's a rare person that

00:32:28,080 --> 00:32:33,600
would actually want to

00:32:29,840 --> 00:32:36,720
just do it by hand without the ui

00:32:33,600 --> 00:32:40,159
if you want props to you but

00:32:36,720 --> 00:32:40,159
that's a long file

00:32:40,559 --> 00:32:44,480
so for creating a custom contextual

00:32:43,279 --> 00:32:47,519
filter

00:32:44,480 --> 00:32:49,919
that would be the views argument plug-in

00:32:47,519 --> 00:32:52,480
that i was talking about earlier

00:32:49,919 --> 00:32:53,279
there are three different plugins there

00:32:52,480 --> 00:32:56,480
there's the

00:32:53,279 --> 00:32:58,399
argument which is just

00:32:56,480 --> 00:33:00,399
what kind of argument whether it's a

00:32:58,399 --> 00:33:03,519
date a number

00:33:00,399 --> 00:33:06,960
a language

00:33:03,519 --> 00:33:09,519
that converts the type

00:33:06,960 --> 00:33:10,159
that you pass it if you pass it the

00:33:09,519 --> 00:33:12,399
right

00:33:10,159 --> 00:33:15,120
type anyways if you pass it the wrong

00:33:12,399 --> 00:33:18,240
type it may have a

00:33:15,120 --> 00:33:20,399
connection but that's why you have an

00:33:18,240 --> 00:33:23,360
argument validator to make sure that is

00:33:20,399 --> 00:33:25,039
the right type of data

00:33:23,360 --> 00:33:26,399
you also have the argument default

00:33:25,039 --> 00:33:29,200
plugin

00:33:26,399 --> 00:33:31,120
so if you don't provide it an argument

00:33:29,200 --> 00:33:34,399
what will it use

00:33:31,120 --> 00:33:34,399
as a fallback value

00:33:36,840 --> 00:33:39,840
so

00:33:40,080 --> 00:33:43,519
for is there any case that i would

00:33:42,159 --> 00:33:46,559
prefer a hook

00:33:43,519 --> 00:33:50,080
over a plug-in yeah

00:33:46,559 --> 00:33:53,279
if if it's a

00:33:50,080 --> 00:33:57,360
one-time if you are altering just

00:33:53,279 --> 00:33:58,399
one time like you only want to alter

00:33:57,360 --> 00:34:01,919
this query

00:33:58,399 --> 00:34:03,120
if the user is logged in i might just go

00:34:01,919 --> 00:34:06,640
for a hook

00:34:03,120 --> 00:34:09,760
a hook is less code

00:34:06,640 --> 00:34:12,800
it's probably a bit quicker to write the

00:34:09,760 --> 00:34:16,000
query takes a bit more time but

00:34:12,800 --> 00:34:21,839
is then better performance later

00:34:16,000 --> 00:34:21,839
so it's like time versus performance

00:34:22,000 --> 00:34:29,040
um i've never used a right join

00:34:25,520 --> 00:34:33,119
within views but uh

00:34:29,040 --> 00:34:37,119
i would do that with a

00:34:33,119 --> 00:34:37,119
views join plugin

00:34:37,200 --> 00:34:40,639
we have the standard

00:34:42,000 --> 00:34:45,760
which you actually do have a bit of

00:34:43,919 --> 00:34:48,879
configuration

00:34:45,760 --> 00:34:52,639
so it you could probably

00:34:48,879 --> 00:34:56,800
you just subclass this as

00:34:52,639 --> 00:35:00,240
right join plugin and switch to that

00:34:56,800 --> 00:35:03,359
i haven't done enough sql

00:35:00,240 --> 00:35:06,480
within the recent couple years

00:35:03,359 --> 00:35:10,000
that i would feel confident enough

00:35:06,480 --> 00:35:12,480
to say how to write or write jordan that

00:35:10,000 --> 00:35:14,800
would work for views but

00:35:12,480 --> 00:35:16,480
if you're comfortable with sql you

00:35:14,800 --> 00:35:19,680
definitely want to just subclass

00:35:16,480 --> 00:35:22,400
the join plugin base or the standard

00:35:19,680 --> 00:35:22,400
views plugin

00:35:24,640 --> 00:35:28,400
so uh contextual filters definitely can

00:35:27,520 --> 00:35:32,480
resolve from

00:35:28,400 --> 00:35:35,920
entity ids in the

00:35:32,480 --> 00:35:38,880
alias that's uh often using the query

00:35:35,920 --> 00:35:42,240
parameter plugin

00:35:38,880 --> 00:35:45,200
to get the value but the

00:35:42,240 --> 00:35:46,160
argument validator for entity is

00:35:45,200 --> 00:35:49,680
generally speaking

00:35:46,160 --> 00:35:52,160
what connects the random

00:35:49,680 --> 00:35:53,599
the conceivably random number into an

00:35:52,160 --> 00:35:57,920
actual real entity

00:35:53,599 --> 00:35:59,520
and loads it to provide you with a

00:35:57,920 --> 00:36:03,119
pre-loaded entity

00:35:59,520 --> 00:36:03,119
just like a view

00:36:04,079 --> 00:36:10,160
uh i do not currently have that example

00:36:07,200 --> 00:36:11,599
anywhere i i should have probably put in

00:36:10,160 --> 00:36:14,720
a couple examples

00:36:11,599 --> 00:36:16,240
but in general if you just uh look at

00:36:14,720 --> 00:36:20,320
the drupal core

00:36:16,240 --> 00:36:23,520
under core modules views

00:36:20,320 --> 00:36:24,720
source plug-in and then look in the

00:36:23,520 --> 00:36:27,520
views folder there

00:36:24,720 --> 00:36:28,240
you have all of the different plugins

00:36:27,520 --> 00:36:30,800
and

00:36:28,240 --> 00:36:32,640
anywhere from three to fifteen examples

00:36:30,800 --> 00:36:41,839
of each plugin depending

00:36:32,640 --> 00:36:41,839
on the type

00:36:45,040 --> 00:36:51,680
well it's looking like we're pretty much

00:36:49,200 --> 00:36:53,040
done we do have eight more minutes on

00:36:51,680 --> 00:36:55,680
the clock

00:36:53,040 --> 00:36:57,040
so i have time for more questions or i

00:36:55,680 --> 00:37:00,400
can let you quickly

00:36:57,040 --> 00:37:01,200
get a drink or a snack or whatever

00:37:00,400 --> 00:37:09,839
before the

00:37:01,200 --> 00:37:09,839
last session of the day

00:37:14,560 --> 00:37:18,320
thanks bri i feel like uh

00:37:18,720 --> 00:37:24,960
i think i talk faster when i'm in front

00:37:21,680 --> 00:37:28,480
of an audience because when i did this

00:37:24,960 --> 00:37:31,440
just off hand and with no audience

00:37:28,480 --> 00:37:32,320
i came out to be slightly over 45

00:37:31,440 --> 00:37:35,280
minutes not

00:37:32,320 --> 00:37:39,119
seven minutes under with including uh

00:37:35,280 --> 00:37:39,119
ask me 10 minutes of questions so

00:37:42,480 --> 00:37:47,760
okay so i'm just looking at luke's

00:37:48,839 --> 00:37:54,880
question

00:37:51,200 --> 00:37:58,320
ah yes so there is

00:37:54,880 --> 00:38:00,560
currently as far as i know no validator

00:37:58,320 --> 00:38:04,320
that specifically

00:38:00,560 --> 00:38:07,440
will figure out from the node title

00:38:04,320 --> 00:38:10,960
what you are wanting i have for

00:38:07,440 --> 00:38:12,000
specific projects created function that

00:38:10,960 --> 00:38:15,359
does that

00:38:12,000 --> 00:38:17,440
but i am currently not happy with that

00:38:15,359 --> 00:38:19,280
and do not have it published because it

00:38:17,440 --> 00:38:23,280
is quite fragile

00:38:19,280 --> 00:38:26,800
you could probably do the same thing

00:38:23,280 --> 00:38:28,480
actually if you uh send me a message i

00:38:26,800 --> 00:38:32,000
can send you my

00:38:28,480 --> 00:38:33,359
sample code for that as i was saying i

00:38:32,000 --> 00:38:37,599
do not consider it stable

00:38:33,359 --> 00:38:40,320
and it it does fail in some cases but

00:38:37,599 --> 00:38:41,119
generally speaking it has been

00:38:40,320 --> 00:38:47,839
successful

00:38:41,119 --> 00:38:47,839
in a minimal way

00:38:58,240 --> 00:39:05,920
great thanks for coming all and

00:39:02,079 --> 00:39:10,000
i'm easily available on twitter or

00:39:05,920 --> 00:39:13,040
via the drupal.org contact form

00:39:10,000 --> 00:39:16,079
uh and

00:39:13,040 --> 00:39:17,839
otherwise i'll also be here for the next

00:39:16,079 --> 00:39:21,680
couple days mostly so

00:39:17,839 --> 00:39:24,960
feel free to message me or

00:39:21,680 --> 00:39:26,839
or ask for a voice chat i'm always happy

00:39:24,960 --> 00:39:30,720
to talk to people

00:39:26,839 --> 00:39:32,320
thanks and uh at the top you'll see uh

00:39:30,720 --> 00:39:35,359
bethany lister has

00:39:32,320 --> 00:39:38,240
posted a link for evaluations

00:39:35,359 --> 00:39:39,839
i'd be pleased to have lots of

00:39:38,240 --> 00:39:42,480
evaluations

00:39:39,839 --> 00:39:44,160
feel free to give me harsh criticism i

00:39:42,480 --> 00:39:47,839
accept

00:39:44,160 --> 00:39:48,560
it it's uh much i love hearing all the

00:39:47,839 --> 00:39:57,839
thanks

00:39:48,560 --> 00:39:57,839

YouTube URL: https://www.youtube.com/watch?v=Q5i57HDFP4w


