Title: Caching and performance deep dive - A practical approach   DrupalCon Global 2020
Publication date: 2020-08-25
Playlist: DrupalCon Global 2020
Description: 
	Learn concepts and patterns that can help anyone interested in learning more about the caching mindset.
Captions: 
	00:00:00,719 --> 00:00:06,160
um

00:00:03,040 --> 00:00:08,320
that's great to hear so um

00:00:06,160 --> 00:00:10,400
welcome to this wonderful caching and

00:00:08,320 --> 00:00:13,679
performance deep dive today

00:00:10,400 --> 00:00:17,279
um i'm very happy to present it

00:00:13,679 --> 00:00:18,240
today to you and we'll start with a very

00:00:17,279 --> 00:00:21,439
quick overview of

00:00:18,240 --> 00:00:23,920
what to expect in this session um

00:00:21,439 --> 00:00:24,640
but first quickly about me i'm fabian

00:00:23,920 --> 00:00:27,840
france

00:00:24,640 --> 00:00:30,960
i've been using drupal for

00:00:27,840 --> 00:00:32,880
over 10 years now i'm currently the

00:00:30,960 --> 00:00:35,600
vice president of software engineering

00:00:32,880 --> 00:00:37,280
at st 1 consulting

00:00:35,600 --> 00:00:39,920
and the course of big pipe and the

00:00:37,280 --> 00:00:42,559
drupal 89 caching system

00:00:39,920 --> 00:00:44,719
in between i'm also a 2.7 maintainer in

00:00:42,559 --> 00:00:45,360
several subsystems like the theme system

00:00:44,719 --> 00:00:48,559
trick

00:00:45,360 --> 00:00:51,680
etc my motivation is to teach you

00:00:48,559 --> 00:00:54,480
all i know about caching today

00:00:51,680 --> 00:00:58,399
um this really is what i want to bring

00:00:54,480 --> 00:01:02,000
to you this is what i want to get you

00:00:58,399 --> 00:01:05,920
this really is what i want to give you

00:01:02,000 --> 00:01:10,400
and a quick disclaimer however it

00:01:05,920 --> 00:01:10,400
would be an absolute beginner session

00:01:10,840 --> 00:01:19,520
um their microphone problems

00:01:15,360 --> 00:01:22,720
okay can can someone hear me

00:01:19,520 --> 00:01:26,080
okay cool um so continue

00:01:22,720 --> 00:01:28,080
um it's an absolute beginner session

00:01:26,080 --> 00:01:30,079
however we'll be looking at some

00:01:28,080 --> 00:01:33,840
concepts from a different angle

00:01:30,079 --> 00:01:35,920
today and um it will be roughly three

00:01:33,840 --> 00:01:38,079
parts with 10 minutes each and then five

00:01:35,920 --> 00:01:41,439
minutes for questions in between parts

00:01:38,079 --> 00:01:43,600
please use something like q column um

00:01:41,439 --> 00:01:45,360
to mark your question and june will be

00:01:43,600 --> 00:01:48,320
collecting those for me

00:01:45,360 --> 00:01:50,159
and then i'll be um looking them through

00:01:48,320 --> 00:01:53,280
and answering them in between so we

00:01:50,159 --> 00:01:55,360
don't have all the questions at the end

00:01:53,280 --> 00:01:57,040
part one is about general cashing cash

00:01:55,360 --> 00:02:00,079
and validation strategies

00:01:57,040 --> 00:02:02,320
cash items cash max age and tax

00:02:00,079 --> 00:02:03,360
part two is about cash variation cash

00:02:02,320 --> 00:02:05,920
head ratio

00:02:03,360 --> 00:02:07,840
placeholders and the uncashable things

00:02:05,920 --> 00:02:09,200
and part three is about caching layers

00:02:07,840 --> 00:02:12,640
and common caching

00:02:09,200 --> 00:02:15,680
pitfalls so

00:02:12,640 --> 00:02:18,480
what is caching what is caching about

00:02:15,680 --> 00:02:19,840
as i said beginner session in computing

00:02:18,480 --> 00:02:23,040
a cache is a hardware a software

00:02:19,840 --> 00:02:23,040
component just those data

00:02:25,200 --> 00:02:28,959
i think that's way too much theory i

00:02:27,360 --> 00:02:31,680
love pizza

00:02:28,959 --> 00:02:32,640
um for example we have a restaurant and

00:02:31,680 --> 00:02:36,080
we prepare

00:02:32,640 --> 00:02:37,599
meals our pages normally a pizza takes

00:02:36,080 --> 00:02:42,000
10 minutes to prepare

00:02:37,599 --> 00:02:43,680
but those persons who have figured out

00:02:42,000 --> 00:02:45,920
a real name thing and that's for the

00:02:43,680 --> 00:02:46,640
takeaway the pizza is wrapped and given

00:02:45,920 --> 00:02:50,400
out

00:02:46,640 --> 00:02:54,560
that is caching so definitely

00:02:50,400 --> 00:02:57,760
um this is giving you um

00:02:54,560 --> 00:03:00,319
the idea basically caching is we have

00:02:57,760 --> 00:03:01,040
something that is pre-made we can just

00:03:00,319 --> 00:03:03,519
give it out

00:03:01,040 --> 00:03:05,440
directly we don't have to do anything we

00:03:03,519 --> 00:03:07,680
can directly profit from it

00:03:05,440 --> 00:03:10,080
so you can say all those take away pizza

00:03:07,680 --> 00:03:12,560
shop they've figured out

00:03:10,080 --> 00:03:12,560
caching

00:03:13,680 --> 00:03:18,480
the performance of pizza delivery is

00:03:15,840 --> 00:03:21,920
definitely improved a lot

00:03:18,480 --> 00:03:25,040
however our example is a little bit well

00:03:21,920 --> 00:03:25,920
yeah we only have a few neat numbers of

00:03:25,040 --> 00:03:29,440
pizzas

00:03:25,920 --> 00:03:32,239
so um for example to still work we'll

00:03:29,440 --> 00:03:33,760
be saying we have a magic replicator the

00:03:32,239 --> 00:03:36,640
customer comes

00:03:33,760 --> 00:03:37,360
um we are taking the pizza we replicate

00:03:36,640 --> 00:03:41,040
it

00:03:37,360 --> 00:03:43,519
and we give it away and that's it

00:03:41,040 --> 00:03:46,319
so every item that your cash gets a name

00:03:43,519 --> 00:03:49,760
that's a cash item name or cash address

00:03:46,319 --> 00:03:53,439
in our example for example the

00:03:49,760 --> 00:03:55,920
the pizza marinara or pizza margarita

00:03:53,439 --> 00:03:57,760
in drupal the cash id or later this is

00:03:55,920 --> 00:03:59,920
also called cash keys

00:03:57,760 --> 00:04:02,000
so for example a cash key sample pizza

00:03:59,920 --> 00:04:02,799
magarita is transformed in pizza column

00:04:02,000 --> 00:04:06,159
magritta

00:04:02,799 --> 00:04:09,200
it's the same essentially so definitely

00:04:06,159 --> 00:04:10,400
um that's what you have so let's make

00:04:09,200 --> 00:04:14,239
pizza

00:04:10,400 --> 00:04:17,280
and this is how you how you make pizza

00:04:14,239 --> 00:04:19,440
we're checking the pizza cash

00:04:17,280 --> 00:04:20,560
and see if we can get a pizza margarita

00:04:19,440 --> 00:04:23,600
from it

00:04:20,560 --> 00:04:25,440
and if you have a pizza we return the

00:04:23,600 --> 00:04:27,919
pizza and if not we

00:04:25,440 --> 00:04:28,800
ask for our pizza oven service to make

00:04:27,919 --> 00:04:32,800
us a nice

00:04:28,800 --> 00:04:38,080
and sweet or maybe not sweet more salty

00:04:32,800 --> 00:04:38,080
pizza margherita and so this um

00:04:38,639 --> 00:04:43,520
and afterwards we set the margarita so

00:04:41,360 --> 00:04:44,400
this basically is a basic caching

00:04:43,520 --> 00:04:47,440
example

00:04:44,400 --> 00:04:48,240
the question example we you need to

00:04:47,440 --> 00:04:50,560
understand

00:04:48,240 --> 00:04:51,600
you get something if you have something

00:04:50,560 --> 00:04:55,440
you return it

00:04:51,600 --> 00:04:58,639
and if not you recruit it so um

00:04:55,440 --> 00:04:58,639
this is um

00:04:58,720 --> 00:05:02,720
very uh nice and helpful for for

00:05:01,600 --> 00:05:05,759
understanding that

00:05:02,720 --> 00:05:11,840
but who sees the back there's a bug on

00:05:05,759 --> 00:05:11,840
that slide

00:05:19,600 --> 00:05:26,080
correct either the get cache id or the

00:05:23,039 --> 00:05:29,360
sad cash idea of wrong um

00:05:26,080 --> 00:05:32,720
so um what's important

00:05:29,360 --> 00:05:32,720
is um that

00:05:33,120 --> 00:05:38,720
we have the other person is also right

00:05:35,759 --> 00:05:38,720
usually we should be

00:05:38,800 --> 00:05:43,120
selecting the data property we are not

00:05:41,520 --> 00:05:46,560
doing that here

00:05:43,120 --> 00:05:51,120
good catch um but um what i want to

00:05:46,560 --> 00:05:54,400
get out here is that we do the cache id

00:05:51,120 --> 00:05:57,759
and with the cache id um if we

00:05:54,400 --> 00:06:00,319
get and set with a variable it's much

00:05:57,759 --> 00:06:02,639
simpler to not make that mistake and

00:06:00,319 --> 00:06:03,600
while it might sound like a very trivial

00:06:02,639 --> 00:06:05,280
example

00:06:03,600 --> 00:06:07,039
um i've seen that in the wild it

00:06:05,280 --> 00:06:09,520
happened to me myself

00:06:07,039 --> 00:06:10,080
and it leads to hard to debug bugs so

00:06:09,520 --> 00:06:13,280
really

00:06:10,080 --> 00:06:17,120
use this pattern not the other one

00:06:13,280 --> 00:06:19,360
so how long is product valid

00:06:17,120 --> 00:06:21,360
in the supermarket we have a best before

00:06:19,360 --> 00:06:23,600
date

00:06:21,360 --> 00:06:24,639
i try to find a pizza that doesn't look

00:06:23,600 --> 00:06:26,960
good anymore i

00:06:24,639 --> 00:06:28,880
couldn't find one and what i could find

00:06:26,960 --> 00:06:31,759
i didn't want to give you

00:06:28,880 --> 00:06:32,319
so anyway after a while you really don't

00:06:31,759 --> 00:06:34,319
want to

00:06:32,319 --> 00:06:35,360
eat the pizza anymore you really don't

00:06:34,319 --> 00:06:38,960
want to

00:06:35,360 --> 00:06:41,680
uh drink the orange juice anymore

00:06:38,960 --> 00:06:43,440
the solution for all of that is the

00:06:41,680 --> 00:06:47,759
expiration date

00:06:43,440 --> 00:06:49,919
so everything

00:06:47,759 --> 00:06:50,880
that you can buy in supermarkets usually

00:06:49,919 --> 00:06:54,880
has

00:06:50,880 --> 00:06:57,039
an expiration date so um

00:06:54,880 --> 00:06:58,160
and that's very simple to do we have

00:06:57,039 --> 00:07:02,960
cash id

00:06:58,160 --> 00:07:06,960
uh we put the time to live and um

00:07:02,960 --> 00:07:10,720
instead of our set command before

00:07:06,960 --> 00:07:13,840
we are now adding the time to lift to it

00:07:10,720 --> 00:07:15,759
and that was how the drupal page cache

00:07:13,840 --> 00:07:18,000
in drupal 326 was working

00:07:15,759 --> 00:07:19,919
and it's still a perfect tapping and

00:07:18,000 --> 00:07:23,120
it's a very easy pattern we've

00:07:19,919 --> 00:07:25,199
used to run a huge production site

00:07:23,120 --> 00:07:26,960
just on this pattern of caching

00:07:25,199 --> 00:07:29,120
everything in akamai

00:07:26,960 --> 00:07:30,800
for 10 minutes unconditionally if your

00:07:29,120 --> 00:07:33,039
editors can

00:07:30,800 --> 00:07:34,240
do that for you and say it's okay we can

00:07:33,039 --> 00:07:38,560
wait 10 minutes

00:07:34,240 --> 00:07:40,800
it's a great pattern it can help a lot

00:07:38,560 --> 00:07:43,520
so still a very great pattern for high

00:07:40,800 --> 00:07:45,280
traffic sites and

00:07:43,520 --> 00:07:46,800
we can do all these nice things i'll be

00:07:45,280 --> 00:07:50,240
showing but

00:07:46,800 --> 00:07:52,960
it works so at the weekend um

00:07:50,240 --> 00:07:53,919
we want to clean up so we can also

00:07:52,960 --> 00:07:56,800
delete

00:07:53,919 --> 00:07:58,479
the pizza now and take it home and eat

00:07:56,800 --> 00:08:01,039
it ourselves

00:07:58,479 --> 00:08:02,800
so um this is how you delete things from

00:08:01,039 --> 00:08:06,720
the cash just cash id

00:08:02,800 --> 00:08:08,400
you delete so we're growing

00:08:06,720 --> 00:08:10,160
customers are so happy and they're

00:08:08,400 --> 00:08:13,680
coming to our shop and

00:08:10,160 --> 00:08:16,000
they want to take this home so we have a

00:08:13,680 --> 00:08:18,400
frozen pizza margarita it's a death with

00:08:16,000 --> 00:08:20,400
zero zero floor plus salt and water

00:08:18,400 --> 00:08:21,520
custom-made tomato sauce mozzarella and

00:08:20,400 --> 00:08:25,520
basil

00:08:21,520 --> 00:08:26,000
and yeah we use pizza maker now we make

00:08:25,520 --> 00:08:28,960
a frozen

00:08:26,000 --> 00:08:29,759
pizza and we can now store it for 30

00:08:28,960 --> 00:08:33,760
days

00:08:29,759 --> 00:08:35,440
that's great um so how does our shop

00:08:33,760 --> 00:08:37,279
work now the customer drives to our

00:08:35,440 --> 00:08:39,200
pizza shop orders the frozen pizza

00:08:37,279 --> 00:08:40,560
margarita the waiter gets the pizza from

00:08:39,200 --> 00:08:43,120
fit at the counter

00:08:40,560 --> 00:08:44,720
and now he checks the expiration date

00:08:43,120 --> 00:08:46,560
and if it's expired

00:08:44,720 --> 00:08:47,760
he gets one from the central storage and

00:08:46,560 --> 00:08:51,839
seller

00:08:47,760 --> 00:08:53,920
and regardless he has a pizza now he

00:08:51,839 --> 00:08:55,200
replicates it and delivers a conceptual

00:08:53,920 --> 00:08:58,240
customer

00:08:55,200 --> 00:08:58,480
so basically checking for expiration is

00:08:58,240 --> 00:09:00,880
an

00:08:58,480 --> 00:09:02,800
active process our waiter that is

00:09:00,880 --> 00:09:03,920
serving the customer is doing that for

00:09:02,800 --> 00:09:06,320
us

00:09:03,920 --> 00:09:08,640
now we want to offer marinara as well

00:09:06,320 --> 00:09:10,080
the same dave custom made tomato sauce

00:09:08,640 --> 00:09:12,959
extra virgin olive oil

00:09:10,080 --> 00:09:13,680
organo and garlic it's a vegan picture

00:09:12,959 --> 00:09:16,240
yeah

00:09:13,680 --> 00:09:16,800
so it's good for all my friends in the

00:09:16,240 --> 00:09:19,360
seeming

00:09:16,800 --> 00:09:19,360
community

00:09:20,080 --> 00:09:25,440
and um

00:09:23,440 --> 00:09:28,720
it's a completely new pizza it's not a

00:09:25,440 --> 00:09:30,800
very very variation it's now an offer

00:09:28,720 --> 00:09:31,839
so we have this pizza margarita uh

00:09:30,800 --> 00:09:34,000
marinara

00:09:31,839 --> 00:09:35,440
and we make it in the same way basically

00:09:34,000 --> 00:09:38,160
you change to cash id

00:09:35,440 --> 00:09:40,240
next frozen we are growing more so we

00:09:38,160 --> 00:09:42,240
have a better recipe for the duck

00:09:40,240 --> 00:09:44,720
after our super secret expedition to

00:09:42,240 --> 00:09:46,720
italy set up 2.0

00:09:44,720 --> 00:09:48,640
so we now need to invalidate all the

00:09:46,720 --> 00:09:49,279
cashed old pizzas we don't want to wait

00:09:48,640 --> 00:09:52,399
for

00:09:49,279 --> 00:09:55,440
30 days unfortunately and the other

00:09:52,399 --> 00:09:57,279
new pizzas and now can i mix so

00:09:55,440 --> 00:09:58,480
that's not so good how do we now say a

00:09:57,279 --> 00:10:01,600
new old

00:09:58,480 --> 00:10:02,320
the name so illusion is we just added to

00:10:01,600 --> 00:10:04,880
the name

00:10:02,320 --> 00:10:05,680
and we get long and long and long aligns

00:10:04,880 --> 00:10:07,839
that way

00:10:05,680 --> 00:10:09,680
ah does not scale and we have all the

00:10:07,839 --> 00:10:12,000
old versions are kept around

00:10:09,680 --> 00:10:12,880
this then looks like this and actually

00:10:12,000 --> 00:10:16,000
some caches

00:10:12,880 --> 00:10:16,640
used to look like this and it's just a

00:10:16,000 --> 00:10:18,880
mess

00:10:16,640 --> 00:10:20,720
so that's not what we want to do the

00:10:18,880 --> 00:10:22,800
solution is we tag it

00:10:20,720 --> 00:10:24,480
we have a magic reta we have a marinara

00:10:22,800 --> 00:10:26,240
we have our expiration date

00:10:24,480 --> 00:10:28,240
and then we have a tag and it's stuff

00:10:26,240 --> 00:10:31,600
version two that version two

00:10:28,240 --> 00:10:33,600
yay um

00:10:31,600 --> 00:10:34,800
and again taking something is very

00:10:33,600 --> 00:10:37,600
simple and drupal

00:10:34,800 --> 00:10:39,519
we just um have this fourth argument to

00:10:37,600 --> 00:10:41,760
the drupal cache and set the dot

00:10:39,519 --> 00:10:43,200
version as it's easy to miss i'm putting

00:10:41,760 --> 00:10:47,680
in the helper version

00:10:43,200 --> 00:10:48,320
helper variable so cache tag equals daf

00:10:47,680 --> 00:10:51,600
version

00:10:48,320 --> 00:10:55,360
so drupal now now um we

00:10:51,600 --> 00:10:56,560
want to um expire this whenever our def

00:10:55,360 --> 00:10:58,880
version changes

00:10:56,560 --> 00:11:01,120
and expiring that is also very simple we

00:10:58,880 --> 00:11:03,440
just call the invalidate textbook

00:11:01,120 --> 00:11:05,040
function that version and we're good to

00:11:03,440 --> 00:11:07,040
go

00:11:05,040 --> 00:11:08,160
um what's very very important to

00:11:07,040 --> 00:11:10,640
understand about

00:11:08,160 --> 00:11:12,079
cache tags and it took me myself a very

00:11:10,640 --> 00:11:16,079
very very long time

00:11:12,079 --> 00:11:18,079
to understand that at the beginning um

00:11:16,079 --> 00:11:19,760
drupal versions attacks automatically

00:11:18,079 --> 00:11:22,800
for us um

00:11:19,760 --> 00:11:24,560
but tagging reality is versioning

00:11:22,800 --> 00:11:25,839
it's like a version number we are doing

00:11:24,560 --> 00:11:29,040
for our

00:11:25,839 --> 00:11:31,040
cache and we can use

00:11:29,040 --> 00:11:32,480
all the ways of tagging we could have

00:11:31,040 --> 00:11:35,120
version 310

00:11:32,480 --> 00:11:35,920
or we could use the timestamp memcache

00:11:35,120 --> 00:11:38,720
for example

00:11:35,920 --> 00:11:40,480
the cache text implementation um that i

00:11:38,720 --> 00:11:41,279
create this brand together that uses

00:11:40,480 --> 00:11:43,040
timestamps

00:11:41,279 --> 00:11:44,720
we could use the names no leopard

00:11:43,040 --> 00:11:47,760
whatever we can use a counter

00:11:44,720 --> 00:11:50,240
that's what core i uses core basically

00:11:47,760 --> 00:11:51,839
accounts in this cache text table the

00:11:50,240 --> 00:11:52,959
tag and how often it has been

00:11:51,839 --> 00:11:56,880
invalidated

00:11:52,959 --> 00:11:59,519
that's how tagging works in core

00:11:56,880 --> 00:12:00,399
and it's it it's not easy to understand

00:11:59,519 --> 00:12:03,839
at the beginning

00:12:00,399 --> 00:12:05,519
um we have node one it's safe that the

00:12:03,839 --> 00:12:07,600
cache tag is invalidated

00:12:05,519 --> 00:12:09,040
and now we know that the cache tag of

00:12:07,600 --> 00:12:12,079
node one it should be

00:12:09,040 --> 00:12:14,480
version 43 and so

00:12:12,079 --> 00:12:15,440
anything tagged with note 1 must have

00:12:14,480 --> 00:12:18,720
this value of

00:12:15,440 --> 00:12:23,279
version um 43

00:12:18,720 --> 00:12:26,720
as it's invalid so um this is important

00:12:23,279 --> 00:12:29,360
because first you think like hey but how

00:12:26,720 --> 00:12:31,360
does this indirection work etc

00:12:29,360 --> 00:12:32,480
um and it's so important to to

00:12:31,360 --> 00:12:36,160
understand this

00:12:32,480 --> 00:12:38,320
um that you can tag

00:12:36,160 --> 00:12:39,839
whatever cache enter you want with this

00:12:38,320 --> 00:12:42,000
node 1 tag

00:12:39,839 --> 00:12:43,519
and whenever this version change it

00:12:42,000 --> 00:12:47,120
changes all of those alt

00:12:43,519 --> 00:12:48,880
entries are invalid um as said it's

00:12:47,120 --> 00:12:51,760
complex but once martha is so

00:12:48,880 --> 00:12:52,320
powerful because the cache item includes

00:12:51,760 --> 00:12:54,880
the name

00:12:52,320 --> 00:12:55,600
and it includes the version this cache

00:12:54,880 --> 00:13:00,079
item is

00:12:55,600 --> 00:13:02,639
on currently in the canonical store

00:13:00,079 --> 00:13:04,480
our cache text table it always stores

00:13:02,639 --> 00:13:08,000
the current version of the tag

00:13:04,480 --> 00:13:10,160
in our case it's version 43 now

00:13:08,000 --> 00:13:12,880
so basically whenever we set something

00:13:10,160 --> 00:13:15,920
in the cache what you don't see

00:13:12,880 --> 00:13:19,120
when we specify the stack version um

00:13:15,920 --> 00:13:21,600
is that we instead

00:13:19,120 --> 00:13:23,760
not only stores a deaf version but also

00:13:21,600 --> 00:13:26,639
the current version it's on

00:13:23,760 --> 00:13:27,279
and this is essential to understand um

00:13:26,639 --> 00:13:30,079
and if you have

00:13:27,279 --> 00:13:30,720
trouble maybe review the slides later or

00:13:30,079 --> 00:13:33,839
um

00:13:30,720 --> 00:13:34,480
ask me but um once you get this part of

00:13:33,839 --> 00:13:37,680
the tagging

00:13:34,480 --> 00:13:40,000
thing um things get so much easier and

00:13:37,680 --> 00:13:42,000
i know i've been there i've written

00:13:40,000 --> 00:13:42,399
render cache before now in cash tags and

00:13:42,000 --> 00:13:45,760
i've

00:13:42,399 --> 00:13:46,240
done all the things with um the naming

00:13:45,760 --> 00:13:49,680
change

00:13:46,240 --> 00:13:51,680
etc so um yeah

00:13:49,680 --> 00:13:53,360
one thing that's important is everything

00:13:51,680 --> 00:13:55,760
in the same request

00:13:53,360 --> 00:13:57,680
always uses the same current version so

00:13:55,760 --> 00:13:59,760
back to our pizza analogy

00:13:57,680 --> 00:14:01,120
um the waiter checks the list of deaf

00:13:59,760 --> 00:14:05,519
versions once a day and

00:14:01,120 --> 00:14:07,760
not every minute um

00:14:05,519 --> 00:14:08,639
so how our cup shop works now with

00:14:07,760 --> 00:14:10,880
tagging

00:14:08,639 --> 00:14:12,800
basically exactly the same except that

00:14:10,880 --> 00:14:13,199
the waiter now checks the expiration

00:14:12,800 --> 00:14:15,519
date

00:14:13,199 --> 00:14:17,199
and the tax and then he marks the pizza

00:14:15,519 --> 00:14:17,760
as valid or invalid and if it's not

00:14:17,199 --> 00:14:20,320
valid

00:14:17,760 --> 00:14:22,079
gets one from central storage and i'll

00:14:20,320 --> 00:14:23,920
say replication delivers pizza to

00:14:22,079 --> 00:14:26,240
customer as usual

00:14:23,920 --> 00:14:28,399
so everything we've learned so far we

00:14:26,240 --> 00:14:31,120
know how to get an item from the cache

00:14:28,399 --> 00:14:31,839
we know how to set an item in the cache

00:14:31,120 --> 00:14:35,440
we now

00:14:31,839 --> 00:14:38,959
that we can direct delete an item um

00:14:35,440 --> 00:14:40,880
by the name of it we learned how to use

00:14:38,959 --> 00:14:42,240
time based invalidation we have the

00:14:40,880 --> 00:14:44,880
cache max h

00:14:42,240 --> 00:14:46,720
mechanism and we learned how to use tag

00:14:44,880 --> 00:14:48,800
based invalidation

00:14:46,720 --> 00:14:50,399
and we know that core is cheating um

00:14:48,800 --> 00:14:53,519
because in the end

00:14:50,399 --> 00:14:56,000
um because we are caching those cache

00:14:53,519 --> 00:14:59,040
tags for the reminder of the request

00:14:56,000 --> 00:15:00,079
um cache text solve the problem of cash

00:14:59,040 --> 00:15:02,320
invalidation

00:15:00,079 --> 00:15:04,399
they just move it somewhere else there

00:15:02,320 --> 00:15:05,760
was uh we were a long time joking hey

00:15:04,399 --> 00:15:08,000
we've solved the problem of cash and

00:15:05,760 --> 00:15:11,199
validation but if you look closer

00:15:08,000 --> 00:15:12,240
it's not really the case so uh question

00:15:11,199 --> 00:15:15,519
time i'm

00:15:12,240 --> 00:15:18,079
um looking um at

00:15:15,519 --> 00:15:18,880
the collecting professions real quick

00:15:18,079 --> 00:15:23,680
and

00:15:18,880 --> 00:15:23,680
um we'll check um

00:15:25,519 --> 00:15:30,880
can a cash block a page load from tots

00:15:29,360 --> 00:15:34,720
miss

00:15:30,880 --> 00:15:38,399
um i'm trying to understand that

00:15:34,720 --> 00:15:42,000
um so basically yes if your

00:15:38,399 --> 00:15:43,759
cash is um very very slow and it takes a

00:15:42,000 --> 00:15:45,360
very long time to retrieve things

00:15:43,759 --> 00:15:47,199
because for example you have like

00:15:45,360 --> 00:15:48,560
like a network problem or things like

00:15:47,199 --> 00:15:53,199
that um

00:15:48,560 --> 00:15:56,079
then yes indeed a blog can

00:15:53,199 --> 00:15:57,279
can block the page load and we can even

00:15:56,079 --> 00:15:59,360
do that deliberately

00:15:57,279 --> 00:16:00,800
not sure if we get to it because time is

00:15:59,360 --> 00:16:04,480
fleeting um

00:16:00,800 --> 00:16:07,680
but um if not the slides have something

00:16:04,480 --> 00:16:10,079
regarding stampede protection

00:16:07,680 --> 00:16:12,320
um how do you create your own cache

00:16:10,079 --> 00:16:14,079
table like pizzas and what's the benefit

00:16:12,320 --> 00:16:15,839
uh we learn more about the benefits of

00:16:14,079 --> 00:16:19,279
binge later um

00:16:15,839 --> 00:16:22,000
to make it uh pre prefixes a little bit

00:16:19,279 --> 00:16:22,399
on that um the main benefit is you can

00:16:22,000 --> 00:16:24,000
put

00:16:22,399 --> 00:16:27,199
different cache bins to different

00:16:24,000 --> 00:16:29,759
systems so we'll later learn that

00:16:27,199 --> 00:16:31,680
well the database the warehouse across

00:16:29,759 --> 00:16:32,560
the street is not the best way to store

00:16:31,680 --> 00:16:34,880
everything

00:16:32,560 --> 00:16:36,320
um it might be better to have the pizza

00:16:34,880 --> 00:16:40,240
dev below the counter

00:16:36,320 --> 00:16:43,519
and not having to drive 10 miles um

00:16:40,240 --> 00:16:45,680
how do you pre-load a cache in drupal 7.

00:16:43,519 --> 00:16:47,120
it's a little bit tricky um there's a

00:16:45,680 --> 00:16:50,800
pretty good module by

00:16:47,120 --> 00:16:56,000
micro mike mike i forgot the

00:16:50,800 --> 00:16:59,040
name but there's a module called amqdpc

00:16:56,000 --> 00:17:02,639
and it's basically an async mysql

00:16:59,040 --> 00:17:05,760
prefix very cash uh preload query cache

00:17:02,639 --> 00:17:08,000
and this can

00:17:05,760 --> 00:17:09,280
and this can pre-load certain things

00:17:08,000 --> 00:17:12,959
that have been

00:17:09,280 --> 00:17:14,720
frequently used on that page uh

00:17:12,959 --> 00:17:17,280
how can we use cash tech for real-time

00:17:14,720 --> 00:17:20,400
data coming from third party

00:17:17,280 --> 00:17:23,039
um you can basically

00:17:20,400 --> 00:17:25,360
you you need some way of identifying

00:17:23,039 --> 00:17:27,760
when this real-time data is changing

00:17:25,360 --> 00:17:29,440
so either the third party is giving you

00:17:27,760 --> 00:17:31,440
a heads-up whenever it changes

00:17:29,440 --> 00:17:32,640
it then you just synchronize the cache

00:17:31,440 --> 00:17:35,679
tag

00:17:32,640 --> 00:17:36,640
to yourself and say hey this data is now

00:17:35,679 --> 00:17:40,799
invalid

00:17:36,640 --> 00:17:43,360
or we or we do it differently

00:17:40,799 --> 00:17:44,799
and basically you have a cron job and

00:17:43,360 --> 00:17:47,039
you frequently check this

00:17:44,799 --> 00:17:47,840
third party data and if you see a change

00:17:47,039 --> 00:17:50,000
then you

00:17:47,840 --> 00:17:53,120
invalidate the hashtag and then you

00:17:50,000 --> 00:17:56,400
reprocess all the data

00:17:53,120 --> 00:17:56,880
has to do with views yeah aimqpc could

00:17:56,400 --> 00:18:01,840
still

00:17:56,880 --> 00:18:01,840
help with setup sms uh

00:18:02,160 --> 00:18:15,039
what property thing should have cash tax

00:18:05,280 --> 00:18:17,280
and not right now

00:18:15,039 --> 00:18:18,880
give me the data object can add cachable

00:18:17,280 --> 00:18:22,400
dependency we can

00:18:18,880 --> 00:18:26,720
do a little bit later um and hopefully

00:18:22,400 --> 00:18:28,799
um i think it's called a yeah apd qc

00:18:26,720 --> 00:18:30,880
yeah thank you very much uh we continue

00:18:28,799 --> 00:18:34,480
with this session for now

00:18:30,880 --> 00:18:38,000
um just so that we um go on

00:18:34,480 --> 00:18:41,600
but there were some nice questions so um

00:18:38,000 --> 00:18:45,120
what should you cash um

00:18:41,600 --> 00:18:47,919
it's two years later we've grown in more

00:18:45,120 --> 00:18:49,840
uh success is great our shop is thriving

00:18:47,919 --> 00:18:53,039
we are ready for new products

00:18:49,840 --> 00:18:55,360
so we offer full new uh

00:18:53,039 --> 00:18:58,320
variations in our shop a gluten free

00:18:55,360 --> 00:19:00,400
duff vegan mozzarella pizza spinach

00:18:58,320 --> 00:19:01,919
new pizza regulation gluten-free

00:19:00,400 --> 00:19:04,880
offering

00:19:01,919 --> 00:19:07,280
and even a vegan margarita offering with

00:19:04,880 --> 00:19:11,039
being mozzarella

00:19:07,280 --> 00:19:14,160
so a quick recap what we have

00:19:11,039 --> 00:19:15,840
um how we want it to be the customer

00:19:14,160 --> 00:19:18,160
comes all of the pizza

00:19:15,840 --> 00:19:20,320
now the way to ask for preferences hey

00:19:18,160 --> 00:19:20,960
would you like a vegan or a gluten-free

00:19:20,320 --> 00:19:23,760
pizza

00:19:20,960 --> 00:19:25,919
this is our cash context the waiter then

00:19:23,760 --> 00:19:27,360
checks of which for the rented variation

00:19:25,919 --> 00:19:29,280
gives the rounded variation to the

00:19:27,360 --> 00:19:31,600
customer and

00:19:29,280 --> 00:19:33,039
or produces it and then stores it in the

00:19:31,600 --> 00:19:37,280
fetch

00:19:33,039 --> 00:19:40,400
and again we could

00:19:37,280 --> 00:19:41,200
say hey all those variations we just put

00:19:40,400 --> 00:19:43,520
it

00:19:41,200 --> 00:19:45,039
as part of the name but we now have a

00:19:43,520 --> 00:19:48,640
little bit of a problem

00:19:45,039 --> 00:19:50,320
that we now have uh uh mynata pizza that

00:19:48,640 --> 00:19:54,799
is reading by default

00:19:50,320 --> 00:19:58,320
and um now we also have a vegetarian

00:19:54,799 --> 00:19:58,960
um marinara which doesn't make sense

00:19:58,320 --> 00:20:02,080
because

00:19:58,960 --> 00:20:04,320
it's being always so um

00:20:02,080 --> 00:20:05,440
this would essentially double the space

00:20:04,320 --> 00:20:08,320
of things

00:20:05,440 --> 00:20:10,000
um and the waiter would need to find the

00:20:08,320 --> 00:20:11,919
pizza again from all this mess

00:20:10,000 --> 00:20:13,440
like like we've seen before like very

00:20:11,919 --> 00:20:16,240
difficult what we

00:20:13,440 --> 00:20:17,919
really want to have is is this we want

00:20:16,240 --> 00:20:20,320
to have like buckets

00:20:17,919 --> 00:20:21,840
so you um you have some pizza margherita

00:20:20,320 --> 00:20:25,120
pizza marinara and you go

00:20:21,840 --> 00:20:27,200
to the pizza margarita shelf

00:20:25,120 --> 00:20:28,799
and then you have like one tact

00:20:27,200 --> 00:20:31,280
gluten-free

00:20:28,799 --> 00:20:33,600
one gluten and then you can go further

00:20:31,280 --> 00:20:38,480
down in the street

00:20:33,600 --> 00:20:42,799
and so that's cool and

00:20:38,480 --> 00:20:45,039
hash contexts are generally used for

00:20:42,799 --> 00:20:48,400
variation in drupal 8 and 9.

00:20:45,039 --> 00:20:50,559
they're computed on demand and they

00:20:48,400 --> 00:20:52,159
internally add the cash context values

00:20:50,559 --> 00:20:54,480
to the cash id name

00:20:52,159 --> 00:20:55,760
so while the end result looks pretty

00:20:54,480 --> 00:20:58,559
similar to what we've

00:20:55,760 --> 00:20:59,440
tried to achieve before because we let

00:20:58,559 --> 00:21:03,760
chord with

00:20:59,440 --> 00:21:04,559
um it gives um more possibilities for

00:21:03,760 --> 00:21:07,679
core

00:21:04,559 --> 00:21:09,919
uh to optimize this and

00:21:07,679 --> 00:21:11,520
in essence and this is probably the

00:21:09,919 --> 00:21:15,200
first time i've talked about this

00:21:11,520 --> 00:21:17,360
in detail um how the cache context works

00:21:15,200 --> 00:21:20,640
internally is that every cache i

00:21:17,360 --> 00:21:22,320
item has has two things so basically we

00:21:20,640 --> 00:21:25,120
first have a cache item

00:21:22,320 --> 00:21:26,960
which is basically our margarita shelf a

00:21:25,120 --> 00:21:29,200
pizza margarita

00:21:26,960 --> 00:21:30,799
and then we have the cash context this

00:21:29,200 --> 00:21:33,840
is sweden yes no

00:21:30,799 --> 00:21:36,080
this is boutine free i guess no so

00:21:33,840 --> 00:21:37,039
when we look at the pizza margarita we

00:21:36,080 --> 00:21:40,480
now then

00:21:37,039 --> 00:21:42,559
what we need to ask the customer um

00:21:40,480 --> 00:21:44,320
we now know all the variations that

00:21:42,559 --> 00:21:46,960
pizza margarita can have

00:21:44,320 --> 00:21:48,320
and has in our system we also have some

00:21:46,960 --> 00:21:50,559
little tricks that if

00:21:48,320 --> 00:21:52,559
no one ever orders a gluten-free

00:21:50,559 --> 00:21:55,280
margarita then this would not have

00:21:52,559 --> 00:21:56,080
not ever show up here um but that's the

00:21:55,280 --> 00:21:58,159
detail

00:21:56,080 --> 00:22:00,400
and then in the end core does this i'd

00:21:58,159 --> 00:22:01,360
say it's being guests now obtained three

00:22:00,400 --> 00:22:03,919
years now

00:22:01,360 --> 00:22:05,520
and again we have expires and tag so we

00:22:03,919 --> 00:22:09,039
have a two-tier

00:22:05,520 --> 00:22:12,400
caching system which is very very um

00:22:09,039 --> 00:22:14,799
um efficient in

00:22:12,400 --> 00:22:16,720
in doing this because we now what we

00:22:14,799 --> 00:22:18,960
need to vary this on and

00:22:16,720 --> 00:22:20,559
this is essentially how dynamic page

00:22:18,960 --> 00:22:23,120
cache even can work

00:22:20,559 --> 00:22:24,080
in all of that the same for the marinara

00:22:23,120 --> 00:22:26,720
but you can see

00:22:24,080 --> 00:22:27,280
um it's only gluten free there's no wing

00:22:26,720 --> 00:22:30,799
whatever

00:22:27,280 --> 00:22:34,480
so it also has only this variation

00:22:30,799 --> 00:22:34,480
now with the intelligent variation

00:22:35,360 --> 00:22:38,480
the waiter looks at the pizza variations

00:22:37,280 --> 00:22:40,559
for the margarita

00:22:38,480 --> 00:22:43,360
and just then he asked the customer for

00:22:40,559 --> 00:22:46,480
his preference weakness or routine free

00:22:43,360 --> 00:22:48,640
if if the customer ordered the marinara

00:22:46,480 --> 00:22:49,840
he would only ask would you like gluten

00:22:48,640 --> 00:22:52,400
free so

00:22:49,840 --> 00:22:55,360
we have cash id cash point excluder and

00:22:52,400 --> 00:22:58,400
then the cash context execution

00:22:55,360 --> 00:23:00,559
the rest is as useful uh

00:22:58,400 --> 00:23:02,640
cache contacts unfortunately still only

00:23:00,559 --> 00:23:05,360
work with render arrays

00:23:02,640 --> 00:23:07,280
it took women and me quite some time to

00:23:05,360 --> 00:23:10,400
understand them in half

00:23:07,280 --> 00:23:11,360
and hopefully render cache at one point

00:23:10,400 --> 00:23:15,039
will provide this

00:23:11,360 --> 00:23:17,679
uh in the future um so you can just use

00:23:15,039 --> 00:23:19,679
a service for now begin to run that way

00:23:17,679 --> 00:23:21,280
a render array is basically how all

00:23:19,679 --> 00:23:24,000
drupal rendering works

00:23:21,280 --> 00:23:24,400
and to make it very simple i've created

00:23:24,000 --> 00:23:27,600
here

00:23:24,400 --> 00:23:28,960
a comparison um and we're going back and

00:23:27,600 --> 00:23:31,679
forth a little bit

00:23:28,960 --> 00:23:32,320
so while before we we basically set up

00:23:31,679 --> 00:23:34,799
our cache

00:23:32,320 --> 00:23:36,240
items before and then we call the make

00:23:34,799 --> 00:23:38,720
function and then reset

00:23:36,240 --> 00:23:39,360
but then the render array we basically

00:23:38,720 --> 00:23:42,720
set up

00:23:39,360 --> 00:23:44,799
um uh the cache

00:23:42,720 --> 00:23:46,640
and then we have some pre-render and

00:23:44,799 --> 00:23:49,600
then we have the pizza

00:23:46,640 --> 00:23:50,880
and um so this is basically our our

00:23:49,600 --> 00:23:54,400
cache

00:23:50,880 --> 00:23:57,279
cache miss function um

00:23:54,400 --> 00:23:59,520
and so it's it's very similar if you

00:23:57,279 --> 00:24:02,320
just compare those parts here

00:23:59,520 --> 00:24:04,400
uh it's just that we put it into a

00:24:02,320 --> 00:24:08,000
predefined structure and

00:24:04,400 --> 00:24:10,159
drupal internally then basically is

00:24:08,000 --> 00:24:12,559
doing first cache get based on this

00:24:10,159 --> 00:24:14,720
cache information

00:24:12,559 --> 00:24:16,720
and we tell it how to store it and then

00:24:14,720 --> 00:24:18,880
it calls this function to

00:24:16,720 --> 00:24:19,760
prepare our pizza then it renders our

00:24:18,880 --> 00:24:23,679
pizza

00:24:19,760 --> 00:24:24,799
and then in the end we render it and we

00:24:23,679 --> 00:24:27,600
store it in the cache

00:24:24,799 --> 00:24:28,400
so we don't have to do all this get set

00:24:27,600 --> 00:24:30,840
etc

00:24:28,400 --> 00:24:32,159
which are used to it's all handled

00:24:30,840 --> 00:24:35,200
automatically

00:24:32,159 --> 00:24:37,760
and yeah this is basically how rendering

00:24:35,200 --> 00:24:40,559
works so it provides the cache meter

00:24:37,760 --> 00:24:42,960
data and then the cache miss function

00:24:40,559 --> 00:24:44,960
um and now if we add our cache contacts

00:24:42,960 --> 00:24:47,200
we could add them directly here in the

00:24:44,960 --> 00:24:48,720
in the array at the top with the context

00:24:47,200 --> 00:24:51,200
user vegan or use that

00:24:48,720 --> 00:24:54,400
gluten free but the problem is if we

00:24:51,200 --> 00:24:56,960
were doing it like this unconditionally

00:24:54,400 --> 00:24:57,440
we had the problem again that we would

00:24:56,960 --> 00:25:00,240
also

00:24:57,440 --> 00:25:01,919
again vary the marinara of being vegan

00:25:00,240 --> 00:25:05,279
or non-vegan

00:25:01,919 --> 00:25:08,480
not what we want so instead we do it

00:25:05,279 --> 00:25:12,080
um like this um oh yeah we can also

00:25:08,480 --> 00:25:14,480
um do it do it after the fact so we

00:25:12,080 --> 00:25:16,080
put a little bit here and this just so

00:25:14,480 --> 00:25:18,640
that you can easier see the

00:25:16,080 --> 00:25:21,520
the difference here um we have cache

00:25:18,640 --> 00:25:24,159
contacts user we can use the gluten free

00:25:21,520 --> 00:25:24,799
and um here we can now do a condition

00:25:24,159 --> 00:25:26,799
for it

00:25:24,799 --> 00:25:29,120
is the picture name as a margarita then

00:25:26,799 --> 00:25:29,840
add the vegan cash context and if it's

00:25:29,120 --> 00:25:31,600
not

00:25:29,840 --> 00:25:34,000
we only have the gluten-free cash

00:25:31,600 --> 00:25:34,960
context so this way we can vary it and

00:25:34,000 --> 00:25:36,799
obviously we

00:25:34,960 --> 00:25:39,120
could be doing this also outside the

00:25:36,799 --> 00:25:43,840
pre-render function

00:25:39,120 --> 00:25:43,840
the important thing however here is

00:25:44,080 --> 00:25:50,799
to know and to understand is that um

00:25:47,360 --> 00:25:53,360
the um that usually

00:25:50,799 --> 00:25:55,520
the picture maker itself would at some

00:25:53,360 --> 00:25:58,880
point add this cash contacts

00:25:55,520 --> 00:25:59,760
so it would be added way down the tree

00:25:58,880 --> 00:26:01,360
somewhere

00:25:59,760 --> 00:26:03,279
not necessarily here where you're

00:26:01,360 --> 00:26:05,039
setting up the cache and that's also the

00:26:03,279 --> 00:26:07,039
nice thing about cache context

00:26:05,039 --> 00:26:08,240
you know something varies within the

00:26:07,039 --> 00:26:11,840
tree by

00:26:08,240 --> 00:26:14,159
user or by if the user is reading or not

00:26:11,840 --> 00:26:15,360
you can just add the cache contact there

00:26:14,159 --> 00:26:17,360
where you need it

00:26:15,360 --> 00:26:19,600
and you don't have to worry about

00:26:17,360 --> 00:26:21,679
finding the exact entry point of where

00:26:19,600 --> 00:26:25,279
that block is started or whatever

00:26:21,679 --> 00:26:26,799
um you can just edit wherever you want

00:26:25,279 --> 00:26:29,120
and this is what i want to show with

00:26:26,799 --> 00:26:30,720
this example

00:26:29,120 --> 00:26:32,880
um this is how you create a cache

00:26:30,720 --> 00:26:35,760
context to december we just extend the

00:26:32,880 --> 00:26:38,320
user cache context

00:26:35,760 --> 00:26:39,120
check the field wing registers as a

00:26:38,320 --> 00:26:41,679
service

00:26:39,120 --> 00:26:42,799
this is more for you to check later so

00:26:41,679 --> 00:26:45,039
it works great

00:26:42,799 --> 00:26:46,320
um we have a different problem now the

00:26:45,039 --> 00:26:49,679
fetch is full

00:26:46,320 --> 00:26:51,840
we now have so many variations

00:26:49,679 --> 00:26:53,120
and we have a pizza spinach it's bought

00:26:51,840 --> 00:26:54,799
way less

00:26:53,120 --> 00:26:58,159
and we have a cast complete sensor and

00:26:54,799 --> 00:26:59,760
casual and so one good idea to do when

00:26:58,159 --> 00:27:01,520
you're dealing with performance and

00:26:59,760 --> 00:27:02,960
caches etc is your cash

00:27:01,520 --> 00:27:05,039
check your cash head ratio and

00:27:02,960 --> 00:27:07,840
validations and

00:27:05,039 --> 00:27:09,760
most white men good friend um made this

00:27:07,840 --> 00:27:10,159
project called cache matrix where you

00:27:09,760 --> 00:27:12,320
can

00:27:10,159 --> 00:27:14,320
um collect this cache matrix and for

00:27:12,320 --> 00:27:16,000
example sends them to new relic

00:27:14,320 --> 00:27:17,919
and then you can see them all and see

00:27:16,000 --> 00:27:20,320
hey this hashtag is invalidate

00:27:17,919 --> 00:27:21,840
really really often like this custom

00:27:20,320 --> 00:27:24,159
pizza

00:27:21,840 --> 00:27:25,679
maybe it's not a good idea to catch it

00:27:24,159 --> 00:27:28,960
so we disable the cache

00:27:25,679 --> 00:27:32,000
easiest would be to not catch it at all

00:27:28,960 --> 00:27:32,720
but that's not always possible so

00:27:32,000 --> 00:27:35,600
basically

00:27:32,720 --> 00:27:38,000
the idea is somewhere again in your tree

00:27:35,600 --> 00:27:40,960
you can do a build cache max h0

00:27:38,000 --> 00:27:43,120
and again this bubbles up to that and

00:27:40,960 --> 00:27:45,919
then we also have cachable objects and

00:27:43,120 --> 00:27:50,480
you can do the set cache max h0

00:27:45,919 --> 00:27:55,120
and basically a cachable object

00:27:50,480 --> 00:27:55,120
is having the same properties like

00:27:55,679 --> 00:28:00,480
our render array before is basically we

00:27:58,559 --> 00:28:02,159
made it simpler that if you deal with an

00:28:00,480 --> 00:28:04,399
entity and you know now hey

00:28:02,159 --> 00:28:05,679
this is uncashable from this point one

00:28:04,399 --> 00:28:08,720
you can just add this

00:28:05,679 --> 00:28:10,080
um both cash contacts and also runtime

00:28:08,720 --> 00:28:12,799
cash contacts

00:28:10,080 --> 00:28:13,600
so that it's made way simpler to add

00:28:12,799 --> 00:28:16,320
those

00:28:13,600 --> 00:28:18,159
cash meter data to our rich objects that

00:28:16,320 --> 00:28:20,480
we have in drupal 8 and 9

00:28:18,159 --> 00:28:23,360
and not only deal with vendor arrays

00:28:20,480 --> 00:28:25,440
however for the ease of simplicity

00:28:23,360 --> 00:28:27,760
i'm not going more into the cachable

00:28:25,440 --> 00:28:29,919
dependency and objects

00:28:27,760 --> 00:28:31,600
but the concept is always the same

00:28:29,919 --> 00:28:34,880
basically you can ask the object

00:28:31,600 --> 00:28:37,279
hey what are your properties and

00:28:34,880 --> 00:28:39,200
um then the object is saying you hey i

00:28:37,279 --> 00:28:40,960
have this properties and actually

00:28:39,200 --> 00:28:42,960
what our render tree is doing if it

00:28:40,960 --> 00:28:45,200
encounters such an object is

00:28:42,960 --> 00:28:46,399
it adds it as a cachable dependency to

00:28:45,200 --> 00:28:48,399
the render tree

00:28:46,399 --> 00:28:49,840
and what ends up in the render tree is

00:28:48,399 --> 00:28:52,000
the same cache

00:28:49,840 --> 00:28:52,960
array render array that we've seen

00:28:52,000 --> 00:28:55,200
before

00:28:52,960 --> 00:28:56,880
so it's basically just an indirection

00:28:55,200 --> 00:29:00,320
step

00:28:56,880 --> 00:29:02,559
uh yeah so full example is

00:29:00,320 --> 00:29:04,480
um we have our pre-render function again

00:29:02,559 --> 00:29:05,919
if the pizza name is custom we make a

00:29:04,480 --> 00:29:08,720
custom pizza

00:29:05,919 --> 00:29:10,799
set the cash max h0 and we early return

00:29:08,720 --> 00:29:13,679
and if it's a spinachy we just

00:29:10,799 --> 00:29:14,960
had the max h0 first rule and the rest

00:29:13,679 --> 00:29:18,000
of the callback

00:29:14,960 --> 00:29:18,640
uh one problem of that approach is um

00:29:18,000 --> 00:29:21,760
we've said

00:29:18,640 --> 00:29:22,880
it's the cash max h0 after the function

00:29:21,760 --> 00:29:25,120
has been rendered

00:29:22,880 --> 00:29:26,000
looking again um we're doing this with

00:29:25,120 --> 00:29:28,080
some pre-runner

00:29:26,000 --> 00:29:29,600
that means we tried already to get that

00:29:28,080 --> 00:29:33,279
item from the cash

00:29:29,600 --> 00:29:34,880
and this is a huge pitfall and

00:29:33,279 --> 00:29:38,000
it's happened to me more often than i'd

00:29:34,880 --> 00:29:41,279
like to admit but um

00:29:38,000 --> 00:29:44,480
if you add a max h0 somewhere

00:29:41,279 --> 00:29:45,120
and it's after rendering not before that

00:29:44,480 --> 00:29:46,799
means

00:29:45,120 --> 00:29:48,960
that if you still have an item in the

00:29:46,799 --> 00:29:50,159
cache it will happily retrieve it and

00:29:48,960 --> 00:29:53,679
you'll be wondering

00:29:50,159 --> 00:29:56,320
why does my freaking max h0 not work

00:29:53,679 --> 00:29:58,080
and you're like debugging for 15 minutes

00:29:56,320 --> 00:30:01,039
and you're like hey

00:29:58,080 --> 00:30:02,960
i don't understand and i've edited it

00:30:01,039 --> 00:30:07,520
should be working

00:30:02,960 --> 00:30:09,679
and if you learn clear your cache

00:30:07,520 --> 00:30:11,919
suddenly it starts working and it was

00:30:09,679 --> 00:30:14,960
just because it obviously still had

00:30:11,919 --> 00:30:15,440
hadn't had an old version of it um so

00:30:14,960 --> 00:30:17,679
that's

00:30:15,440 --> 00:30:18,880
um yeah the common pitfall it happened

00:30:17,679 --> 00:30:20,720
so often for me

00:30:18,880 --> 00:30:22,000
uh during development of the drupal 7

00:30:20,720 --> 00:30:24,880
render cache module

00:30:22,000 --> 00:30:24,880
it was always like

00:30:25,200 --> 00:30:29,760
you know so i'm giving you more ways of

00:30:28,480 --> 00:30:33,520
clearing hashtags

00:30:29,760 --> 00:30:36,880
um in this

00:30:33,520 --> 00:30:40,159
three ways which with hashtag invalid

00:30:36,880 --> 00:30:43,360
rendered via drupal

00:30:40,159 --> 00:30:44,720
um console we had rush or we are calling

00:30:43,360 --> 00:30:47,440
this functionality

00:30:44,720 --> 00:30:49,120
and if some and render cache tag is at

00:30:47,440 --> 00:30:52,000
least added to all render arrays

00:30:49,120 --> 00:30:54,000
so there's a huge chance you're getting

00:30:52,000 --> 00:30:57,360
the cash you want with it and your max

00:30:54,000 --> 00:30:57,360
edge will be working afterwards

00:30:57,440 --> 00:31:02,840
uh we can also set the max h obviously

00:31:00,320 --> 00:31:04,880
before to achieve from the cache i've

00:31:02,840 --> 00:31:07,519
restructured our example a little bit

00:31:04,880 --> 00:31:10,000
again so we set the pizza name

00:31:07,519 --> 00:31:11,679
now we have this make pizza function now

00:31:10,000 --> 00:31:14,799
on our controller

00:31:11,679 --> 00:31:16,799
and um if we are and if the pizza name

00:31:14,799 --> 00:31:20,159
is customer spinach then we just

00:31:16,799 --> 00:31:23,039
put the max h0 and this is a can to a

00:31:20,159 --> 00:31:25,360
request based cache policy that means

00:31:23,039 --> 00:31:27,039
uh we are not even trying to retrieve

00:31:25,360 --> 00:31:31,120
something from cache but we know

00:31:27,039 --> 00:31:33,840
from from start on well if max h0 is set

00:31:31,120 --> 00:31:35,760
we won't be ever trying to do a get so

00:31:33,840 --> 00:31:39,519
this is more efficient but not always

00:31:35,760 --> 00:31:42,320
possible so drupal provides you those

00:31:39,519 --> 00:31:44,159
patch chains um no pizza shop creates

00:31:42,320 --> 00:31:47,840
pizza always from scratch

00:31:44,159 --> 00:31:49,760
that's a given the pizza is made from

00:31:47,840 --> 00:31:51,120
previous head saying the duff and the

00:31:49,760 --> 00:31:54,080
good definitely it's 12 to

00:31:51,120 --> 00:31:55,519
24 hours still eating ready tomato sauce

00:31:54,080 --> 00:31:58,640
ingredients

00:31:55,519 --> 00:32:00,960
um and in the same way

00:31:58,640 --> 00:32:02,080
drupal pages consist often of a main

00:32:00,960 --> 00:32:04,240
page response

00:32:02,080 --> 00:32:06,559
which you usually need to custom cache

00:32:04,240 --> 00:32:08,320
because except for dynamic page cache

00:32:06,559 --> 00:32:10,240
it's not cached by itself but you could

00:32:08,320 --> 00:32:12,080
add it to yourself

00:32:10,240 --> 00:32:14,159
and then we have blogs menus header

00:32:12,080 --> 00:32:16,159
footer and that's basically only

00:32:14,159 --> 00:32:18,080
decoration around the main page response

00:32:16,159 --> 00:32:19,200
and again we can learn so much from

00:32:18,080 --> 00:32:21,279
pizza makers

00:32:19,200 --> 00:32:23,120
because we have two ways to create a

00:32:21,279 --> 00:32:24,960
pizza with mushrooms

00:32:23,120 --> 00:32:27,200
we start with an empty pan at the duff

00:32:24,960 --> 00:32:28,960
at tomato sauce at mozzarella cheese and

00:32:27,200 --> 00:32:31,039
then in the end it's mushrooms

00:32:28,960 --> 00:32:32,159
or we start with a pre-made finished

00:32:31,039 --> 00:32:35,279
pizza margarita and

00:32:32,159 --> 00:32:37,679
just at the match rooms and this

00:32:35,279 --> 00:32:40,080
this is dynamic page cash right there

00:32:37,679 --> 00:32:43,440
it's a pizza margarita with mushrooms

00:32:40,080 --> 00:32:45,519
if you um if you um

00:32:43,440 --> 00:32:47,279
if you remember that that's basically

00:32:45,519 --> 00:32:48,000
how drupal works now in triple eight and

00:32:47,279 --> 00:32:51,200
nine

00:32:48,000 --> 00:32:53,919
um it's basically saying whenever we can

00:32:51,200 --> 00:32:56,080
catch most of the page then just do that

00:32:53,919 --> 00:32:59,039
and just add the mushrooms on top

00:32:56,080 --> 00:32:59,039
and um

00:32:59,440 --> 00:33:03,919
again and this was also how i came up

00:33:01,919 --> 00:33:06,880
with this whole system of

00:33:03,919 --> 00:33:08,880
um how it's developed because i was like

00:33:06,880 --> 00:33:11,200
looking at drupal.org and was saying

00:33:08,880 --> 00:33:12,480
this only my tiny name that's different

00:33:11,200 --> 00:33:14,880
for all users

00:33:12,480 --> 00:33:15,600
and most of the experience is similar

00:33:14,880 --> 00:33:17,679
why can't

00:33:15,600 --> 00:33:20,240
catch that and it turns out now in

00:33:17,679 --> 00:33:23,039
drupal 8 9 we can

00:33:20,240 --> 00:33:24,000
so we cache with response basically as

00:33:23,039 --> 00:33:25,840
much as possible

00:33:24,000 --> 00:33:27,679
and then we add just add flavor and

00:33:25,840 --> 00:33:30,080
placeholders afterwards

00:33:27,679 --> 00:33:31,600
and to make the to make real use of

00:33:30,080 --> 00:33:35,679
dynamic page cache

00:33:31,600 --> 00:33:38,080
power is you have two ways to do that

00:33:35,679 --> 00:33:39,760
you could disable the dynamic page cache

00:33:38,080 --> 00:33:42,000
cache all the inner parts

00:33:39,760 --> 00:33:43,039
and this basically our blank pan we

00:33:42,000 --> 00:33:44,559
create from spatch

00:33:43,039 --> 00:33:46,640
or we cache the whole response in

00:33:44,559 --> 00:33:48,720
dynamic page cache and then we

00:33:46,640 --> 00:33:50,080
just add some placeholders for very

00:33:48,720 --> 00:33:52,159
dynamic data

00:33:50,080 --> 00:33:54,320
blocks are right now and core the only

00:33:52,159 --> 00:33:56,240
things that are automatically

00:33:54,320 --> 00:33:57,760
um having this lazy builder

00:33:56,240 --> 00:34:00,320
functionality which allows them to be

00:33:57,760 --> 00:34:03,279
able to place a movement

00:34:00,320 --> 00:34:05,360
uh quick saying routine free cannot be a

00:34:03,279 --> 00:34:07,360
placeholder it's a foundation of our

00:34:05,360 --> 00:34:10,000
pizza so we need both we need

00:34:07,360 --> 00:34:11,119
variation and we need those placeholders

00:34:10,000 --> 00:34:14,720
which are out of band

00:34:11,119 --> 00:34:14,720
so case by case decision

00:34:15,040 --> 00:34:18,240
placeholder can be independently

00:34:17,200 --> 00:34:20,079
rendered it must

00:34:18,240 --> 00:34:22,079
not depend on anything that has been

00:34:20,079 --> 00:34:24,639
executed before basically

00:34:22,079 --> 00:34:26,800
um you are coming right out of

00:34:24,639 --> 00:34:29,520
authentication and now the main page

00:34:26,800 --> 00:34:30,240
respon request would start and we are

00:34:29,520 --> 00:34:33,760
not doing that

00:34:30,240 --> 00:34:36,800
we are just starting directly

00:34:33,760 --> 00:34:38,879
any analogy again it's not possible to

00:34:36,800 --> 00:34:40,320
add more weed to stuff after the finish

00:34:38,879 --> 00:34:43,359
has finished already wouldn't really

00:34:40,320 --> 00:34:48,000
taste well um

00:34:43,359 --> 00:34:50,320
um and this is classified top secrets

00:34:48,000 --> 00:34:53,040
that's i'm giving away the secret now

00:34:50,320 --> 00:34:54,639
how do you create a placeholder manually

00:34:53,040 --> 00:34:57,280
it's very simple you just put it in

00:34:54,639 --> 00:34:58,560
attached you take whatever placeholder

00:34:57,280 --> 00:35:00,640
spring you want

00:34:58,560 --> 00:35:03,119
you put the same placeholder string in

00:35:00,640 --> 00:35:05,440
your markup and then you put

00:35:03,119 --> 00:35:08,160
build any render array and that's it

00:35:05,440 --> 00:35:10,640
that's a placeholder

00:35:08,160 --> 00:35:13,440
uh the contract is it's executed after

00:35:10,640 --> 00:35:16,320
all the other parts have been rendered

00:35:13,440 --> 00:35:18,079
and from that we are going from private

00:35:16,320 --> 00:35:19,440
to a lazy builder which is a waste from

00:35:18,079 --> 00:35:21,680
a contract

00:35:19,440 --> 00:35:22,480
again we we have a back and forth slide

00:35:21,680 --> 00:35:25,760
here a little bit

00:35:22,480 --> 00:35:27,040
you see not much changes basically uh we

00:35:25,760 --> 00:35:29,040
have this

00:35:27,040 --> 00:35:31,200
lazy builder built this can either be a

00:35:29,040 --> 00:35:34,240
controller with a special dot syntax

00:35:31,200 --> 00:35:34,960
or like a static function um that's

00:35:34,240 --> 00:35:37,200
building it

00:35:34,960 --> 00:35:38,560
and then we have the pizza name and here

00:35:37,200 --> 00:35:41,280
we can't put an object

00:35:38,560 --> 00:35:41,920
we definitely can't put an object while

00:35:41,280 --> 00:35:43,760
here

00:35:41,920 --> 00:35:45,280
we could put anything in this when the

00:35:43,760 --> 00:35:46,000
array is free right now so that's the

00:35:45,280 --> 00:35:48,800
main thing

00:35:46,000 --> 00:35:50,800
but you see pre when lazy builder is not

00:35:48,800 --> 00:35:53,599
so different

00:35:50,800 --> 00:35:55,280
and we can also explicitly say we always

00:35:53,599 --> 00:35:57,359
want to create a placeholder so we just

00:35:55,280 --> 00:36:00,800
put this quick placeholder true

00:35:57,359 --> 00:36:00,800
in combination with this ladybug

00:36:01,359 --> 00:36:05,359
must not contain complex data and must

00:36:03,440 --> 00:36:07,040
not depend on main page requests that's

00:36:05,359 --> 00:36:10,320
important

00:36:07,040 --> 00:36:12,480
um and it allows us to use big pipe it's

00:36:10,320 --> 00:36:14,560
in core you enable it it's good to go

00:36:12,480 --> 00:36:16,640
it allows us to cache and cachable we

00:36:14,560 --> 00:36:18,160
just cash everything became cash and the

00:36:16,640 --> 00:36:20,320
rest we render we have price

00:36:18,160 --> 00:36:21,440
placeholder it allows up to break a

00:36:20,320 --> 00:36:24,000
variation

00:36:21,440 --> 00:36:25,680
per page per user which would not be

00:36:24,000 --> 00:36:28,320
really many cash hits

00:36:25,680 --> 00:36:30,240
we can just have pair page and then a

00:36:28,320 --> 00:36:41,040
little snippet on the page which is

00:36:30,240 --> 00:36:43,280
per user so question time again

00:36:41,040 --> 00:36:43,280
um

00:36:47,040 --> 00:36:51,200
when you update a cache view which lists

00:36:48,800 --> 00:36:51,720
five nodes other tags relate to each

00:36:51,200 --> 00:36:55,520
node

00:36:51,720 --> 00:36:58,079
regenerated yes

00:36:55,520 --> 00:36:58,960
basically listings are still a huge

00:36:58,079 --> 00:37:02,000
problem

00:36:58,960 --> 00:37:03,760
because um if something new comes in or

00:37:02,000 --> 00:37:04,640
something old goes out you delete

00:37:03,760 --> 00:37:06,240
something

00:37:04,640 --> 00:37:08,000
and then cache tags are a little bit

00:37:06,240 --> 00:37:08,480
problematic but if you just update the

00:37:08,000 --> 00:37:11,520
title

00:37:08,480 --> 00:37:13,520
yes the full view would be i think a

00:37:11,520 --> 00:37:14,320
real life example of when to use a cache

00:37:13,520 --> 00:37:17,040
context

00:37:14,320 --> 00:37:18,480
very simple um you are having a

00:37:17,040 --> 00:37:20,400
e-commerce shop site

00:37:18,480 --> 00:37:22,160
and you wanna give a different

00:37:20,400 --> 00:37:24,480
experience based on country

00:37:22,160 --> 00:37:25,280
and you get country as an http header in

00:37:24,480 --> 00:37:29,040
from akamai

00:37:25,280 --> 00:37:32,720
or whatever city and you use um or a geo

00:37:29,040 --> 00:37:34,880
geo api and then you can just create a

00:37:32,720 --> 00:37:36,079
system like cache context and you know

00:37:34,880 --> 00:37:38,560
automatically you will

00:37:36,079 --> 00:37:39,280
never serve a non-country specific

00:37:38,560 --> 00:37:41,680
content

00:37:39,280 --> 00:37:43,040
at your users that was pretty difficult

00:37:41,680 --> 00:37:46,800
in drupal 7 before

00:37:43,040 --> 00:37:49,200
it's super simple and drupal 8 now

00:37:46,800 --> 00:37:51,119
how does cash work with media entities

00:37:49,200 --> 00:37:54,720
um i don't know

00:37:51,119 --> 00:37:56,720
the question is not enough um

00:37:54,720 --> 00:37:58,240
what are the options for the couple json

00:37:56,720 --> 00:38:00,800
api based size

00:37:58,240 --> 00:38:01,680
basically you can include the render

00:38:00,800 --> 00:38:04,560
cache service

00:38:01,680 --> 00:38:05,839
is private but you can set up a quick

00:38:04,560 --> 00:38:09,359
render array

00:38:05,839 --> 00:38:11,760
and basically put whatever in

00:38:09,359 --> 00:38:13,599
um there are other talks that go into

00:38:11,760 --> 00:38:16,240
more more advanced detail

00:38:13,599 --> 00:38:19,359
in that but there are definitely options

00:38:16,240 --> 00:38:22,960
of making that use

00:38:19,359 --> 00:38:25,839
i can find one for you later but um

00:38:22,960 --> 00:38:26,880
there was one big map is only for us

00:38:25,839 --> 00:38:29,440
users no

00:38:26,880 --> 00:38:30,400
yeah um it can be used for anonymous

00:38:29,440 --> 00:38:33,359
users as well

00:38:30,400 --> 00:38:35,359
but usually page cache itself was more

00:38:33,359 --> 00:38:36,800
efficient

00:38:35,359 --> 00:38:39,040
may have missed it with whatever

00:38:36,800 --> 00:38:40,960
placeholders placeholders are basically

00:38:39,040 --> 00:38:44,320
the topping on the pizza

00:38:40,960 --> 00:38:46,720
so um let's assume

00:38:44,320 --> 00:38:48,560
you have a page and everything looks the

00:38:46,720 --> 00:38:49,680
same for the user except for a little

00:38:48,560 --> 00:38:53,200
blog where it says

00:38:49,680 --> 00:38:55,520
hi fabian and

00:38:53,200 --> 00:38:56,800
so basically this hi fabian you create a

00:38:55,520 --> 00:39:00,000
placeholder

00:38:56,800 --> 00:39:02,240
and in drupal if you use the blog

00:39:00,000 --> 00:39:03,119
and you vary this by user then already

00:39:02,240 --> 00:39:05,440
drupal will

00:39:03,119 --> 00:39:07,280
create a placeholder for you and so i

00:39:05,440 --> 00:39:08,640
have this hey fabian block and i have

00:39:07,280 --> 00:39:10,160
page response which has

00:39:08,640 --> 00:39:13,040
whatever content that's the same for

00:39:10,160 --> 00:39:17,280
every user and so drupal will cache this

00:39:13,040 --> 00:39:20,320
content completely without um

00:39:17,280 --> 00:39:22,320
your placeholder and then it will

00:39:20,320 --> 00:39:23,200
execute the high fabian placeholder and

00:39:22,320 --> 00:39:28,240
so it will

00:39:23,200 --> 00:39:31,280
say hi um adjacent for yourself

00:39:28,240 --> 00:39:33,040
pineapple and pizza no comment

00:39:31,280 --> 00:39:35,920
link to the slides will be coming after

00:39:33,040 --> 00:39:37,520
presentation slides are on google slides

00:39:35,920 --> 00:39:38,400
so i can just share them after the

00:39:37,520 --> 00:39:42,480
presentation

00:39:38,400 --> 00:39:45,920
uh it's a delivery or not mint updates

00:39:42,480 --> 00:39:45,920
no idea but let's continue

00:39:46,560 --> 00:39:54,079
so where should you shop um

00:39:50,000 --> 00:39:55,839
the shop is even more successful um

00:39:54,079 --> 00:39:58,160
but the customers need to drive to us

00:39:55,839 --> 00:40:01,599
many drive for two hours or more

00:39:58,160 --> 00:40:04,720
and that's really not nice um so

00:40:01,599 --> 00:40:07,200
um yeah it would be better if they

00:40:04,720 --> 00:40:08,160
if it was near to them so can we do

00:40:07,200 --> 00:40:11,200
something about it

00:40:08,160 --> 00:40:12,160
yes we can we offer our frozen pizzas in

00:40:11,200 --> 00:40:14,960
supermarkets

00:40:12,160 --> 00:40:16,480
around the world as a solution is a

00:40:14,960 --> 00:40:19,040
content delivery network

00:40:16,480 --> 00:40:21,200
and drupal 989 makes it really easy you

00:40:19,040 --> 00:40:21,760
choose the cdn at my cloud for faster

00:40:21,200 --> 00:40:24,000
vanish

00:40:21,760 --> 00:40:24,880
you enable a respective module and you

00:40:24,000 --> 00:40:27,280
profit

00:40:24,880 --> 00:40:28,720
it can really be as simple as that we

00:40:27,280 --> 00:40:31,200
can show why

00:40:28,720 --> 00:40:32,000
uh because basically the cdn now does

00:40:31,200 --> 00:40:34,560
all the checks

00:40:32,000 --> 00:40:35,520
as a pizza expired it is still valid

00:40:34,560 --> 00:40:37,839
like

00:40:35,520 --> 00:40:39,599
pizza supermarkets they check expiration

00:40:37,839 --> 00:40:41,359
dates all the time they know

00:40:39,599 --> 00:40:42,720
is the dust version still matching

00:40:41,359 --> 00:40:44,400
basically hey

00:40:42,720 --> 00:40:46,240
you've printed a new pizza and it looks

00:40:44,400 --> 00:40:49,359
completely different they check hey

00:40:46,240 --> 00:40:52,240
um we should get the old cloud of the

00:40:49,359 --> 00:40:54,079
shelves and put the new pizza in but we

00:40:52,240 --> 00:40:54,640
need to give cecilia and obviously have

00:40:54,079 --> 00:40:57,440
some

00:40:54,640 --> 00:40:59,040
whenever that version changes and you

00:40:57,440 --> 00:41:01,839
can see those headers for yourself

00:40:59,040 --> 00:41:04,640
extrudable hashtags it's a debug option

00:41:01,839 --> 00:41:07,440
uh it's in services default you just put

00:41:04,640 --> 00:41:08,160
this to true uh the debt cash abilities

00:41:07,440 --> 00:41:10,079
had us

00:41:08,160 --> 00:41:11,760
and then you'll get this nice results of

00:41:10,079 --> 00:41:15,200
the cash tax the contacts

00:41:11,760 --> 00:41:16,960
um and whenever it expires so this gives

00:41:15,200 --> 00:41:18,560
you lots of possibilities in finding

00:41:16,960 --> 00:41:21,280
that

00:41:18,560 --> 00:41:22,560
uh great but what about the duff itself

00:41:21,280 --> 00:41:24,079
um as i said before

00:41:22,560 --> 00:41:25,920
we don't want to get it from barrels

00:41:24,079 --> 00:41:26,880
before let's put in the fridge on the

00:41:25,920 --> 00:41:28,960
counter

00:41:26,880 --> 00:41:30,880
and drupal has changed fast it's really

00:41:28,960 --> 00:41:33,200
great it's apcu it's shared memory

00:41:30,880 --> 00:41:35,760
within php prototypes it's a key value

00:41:33,200 --> 00:41:39,119
store available i've made it even more

00:41:35,760 --> 00:41:40,319
uh slicker um but well we haven't

00:41:39,119 --> 00:41:42,720
implemented yet

00:41:40,319 --> 00:41:43,359
but there is an upstream pitch for ipcu

00:41:42,720 --> 00:41:45,920
which could

00:41:43,359 --> 00:41:47,040
make change fast even one thousand

00:41:45,920 --> 00:41:49,680
percent mere

00:41:47,040 --> 00:41:50,800
more effective um if anyone's interest

00:41:49,680 --> 00:41:54,240
that thingy

00:41:50,800 --> 00:41:55,520
to implement it um so if you have things

00:41:54,240 --> 00:41:57,680
that are seldom changing

00:41:55,520 --> 00:41:59,599
put it into a special bin and that's the

00:41:57,680 --> 00:42:02,079
reason why we need special cash bins

00:41:59,599 --> 00:42:03,359
and connect that bin to chain fast it's

00:42:02,079 --> 00:42:06,480
important that this is

00:42:03,359 --> 00:42:08,960
mostly read only cache traffic um

00:42:06,480 --> 00:42:10,000
it's as simple as that so we put our

00:42:08,960 --> 00:42:13,119
pizza off once

00:42:10,000 --> 00:42:16,240
routine three once blue tan in this

00:42:13,119 --> 00:42:17,040
bin pizza daf bin and we put this in our

00:42:16,240 --> 00:42:19,839
settings

00:42:17,040 --> 00:42:21,680
to the chain fast and that's it and now

00:42:19,839 --> 00:42:23,359
whenever we want to pitch it off it's

00:42:21,680 --> 00:42:25,359
near the counter

00:42:23,359 --> 00:42:26,880
um but custom-made pizzas don't store

00:42:25,359 --> 00:42:27,760
them near the counter we don't have the

00:42:26,880 --> 00:42:30,000
space

00:42:27,760 --> 00:42:31,280
i don't put something in that has lots

00:42:30,000 --> 00:42:33,440
of variations you can

00:42:31,280 --> 00:42:34,560
serious fight block problems if your

00:42:33,440 --> 00:42:37,680
cash gets full

00:42:34,560 --> 00:42:38,720
can completely lock up be very very

00:42:37,680 --> 00:42:42,079
careful with

00:42:38,720 --> 00:42:44,000
what you could entertain fast can bring

00:42:42,079 --> 00:42:47,520
ecommerce shops down

00:42:44,000 --> 00:42:49,359
have seen that um it brought it down

00:42:47,520 --> 00:42:52,560
during the law test obviously

00:42:49,359 --> 00:42:54,560
unfortunately uh but yeah um need to

00:42:52,560 --> 00:42:56,480
take care of that it is used really cool

00:42:54,560 --> 00:42:58,560
it's used for file cache class cache

00:42:56,480 --> 00:43:00,720
config cache

00:42:58,560 --> 00:43:03,520
but those are all things that are

00:43:00,720 --> 00:43:07,040
seldomly changing only on a deployment

00:43:03,520 --> 00:43:08,640
don't forget regis memcached mysql is

00:43:07,040 --> 00:43:09,280
basically the warehouse that's across

00:43:08,640 --> 00:43:11,119
the street

00:43:09,280 --> 00:43:13,520
but memcached is the fridge that's in

00:43:11,119 --> 00:43:15,280
the room next door and abc use a fridge

00:43:13,520 --> 00:43:16,400
before the counter that's how you can

00:43:15,280 --> 00:43:20,160
think about it

00:43:16,400 --> 00:43:21,359
so two to five milliseconds 0.5 and 0.05

00:43:20,160 --> 00:43:24,880
milliseconds usually

00:43:21,359 --> 00:43:26,880
like the times um two case to

00:43:24,880 --> 00:43:29,599
distinguish um

00:43:26,880 --> 00:43:31,040
uh we have caches used for actually

00:43:29,599 --> 00:43:33,040
creating the pizza

00:43:31,040 --> 00:43:35,119
from the parts and then we have caches

00:43:33,040 --> 00:43:35,760
used for delivering the pit service

00:43:35,119 --> 00:43:38,079
spacing

00:43:35,760 --> 00:43:39,599
page cache dynamic page cache cdn cache

00:43:38,079 --> 00:43:42,319
and even broader cache

00:43:39,599 --> 00:43:42,640
so always important to distinguish those

00:43:42,319 --> 00:43:45,920
two

00:43:42,640 --> 00:43:47,920
um that's important um

00:43:45,920 --> 00:43:49,920
if you get lots of customers at once for

00:43:47,920 --> 00:43:51,760
pizza with spring onions we can cash it

00:43:49,920 --> 00:43:52,480
only for a very short while micro

00:43:51,760 --> 00:43:55,200
cashing

00:43:52,480 --> 00:43:57,280
potential bottleneck stampede protection

00:43:55,200 --> 00:44:00,720
um built into most cdn's

00:43:57,280 --> 00:44:01,760
um you have a shield thousand people

00:44:00,720 --> 00:44:05,040
want the same page

00:44:01,760 --> 00:44:05,920
it's only generated once um because we

00:44:05,040 --> 00:44:07,520
don't want to keep

00:44:05,920 --> 00:44:09,599
lots of pizza and powder if you just

00:44:07,520 --> 00:44:11,920
prepare one spring onion pizza

00:44:09,599 --> 00:44:12,720
just replicate it this is how stamped

00:44:11,920 --> 00:44:15,040
production

00:44:12,720 --> 00:44:16,560
looks look it up in the slides later

00:44:15,040 --> 00:44:18,720
kamen caching platforms

00:44:16,560 --> 00:44:20,640
are basically the most common are

00:44:18,720 --> 00:44:22,640
missing dependencies variations

00:44:20,640 --> 00:44:24,800
or that you put max h0 everywhere

00:44:22,640 --> 00:44:27,200
because this freaking thing does not

00:44:24,800 --> 00:44:29,280
work so i'm just disabling the cache

00:44:27,200 --> 00:44:30,960
um please don't do it i hope this

00:44:29,280 --> 00:44:33,040
session will help that you um

00:44:30,960 --> 00:44:35,040
understand caching better that you don't

00:44:33,040 --> 00:44:36,000
have to litter your code with manchester

00:44:35,040 --> 00:44:37,520
everywhere

00:44:36,000 --> 00:44:39,760
and that at least when it comes to

00:44:37,520 --> 00:44:42,880
launching uh you can remove those

00:44:39,760 --> 00:44:44,560
um if you need to use makes x0

00:44:42,880 --> 00:44:46,640
please use a lazy builder if you need

00:44:44,560 --> 00:44:48,640
something dynamic use the lazy builder

00:44:46,640 --> 00:44:50,960
use a placeholder

00:44:48,640 --> 00:44:53,440
it can help drupal make so much better

00:44:50,960 --> 00:44:55,280
decisions in optimizing things

00:44:53,440 --> 00:44:57,200
just remember margarita and added

00:44:55,280 --> 00:44:57,920
mushrooms is so much faster than making

00:44:57,200 --> 00:45:01,280
it from

00:44:57,920 --> 00:45:02,640
scratch um now what depends on what

00:45:01,280 --> 00:45:04,880
know when something needs to be

00:45:02,640 --> 00:45:06,960
invalidated and use rendezvous

00:45:04,880 --> 00:45:09,200
um it can be a really nice help here in

00:45:06,960 --> 00:45:11,599
showing that visually to you

00:45:09,200 --> 00:45:12,800
have fun and i'll make pizza now i'm

00:45:11,599 --> 00:45:19,760
really really hungry

00:45:12,800 --> 00:45:21,920
so let me let's yeah so more questions

00:45:19,760 --> 00:45:22,880
i think we have like two minutes for uh

00:45:21,920 --> 00:45:26,319
we are over but

00:45:22,880 --> 00:45:28,880
i'm still answering good question

00:45:26,319 --> 00:45:29,760
uh cash tax was a used case i've done

00:45:28,880 --> 00:45:32,800
that before

00:45:29,760 --> 00:45:35,680
um it's really you need to

00:45:32,800 --> 00:45:36,319
expire something a blog on the front

00:45:35,680 --> 00:45:38,319
page

00:45:36,319 --> 00:45:41,280
you added cash tag and whenever you want

00:45:38,319 --> 00:45:44,880
to expire that you invalidate the attack

00:45:41,280 --> 00:45:46,160
um how dynamic caching works for scikit

00:45:44,880 --> 00:45:49,040
users sales can

00:45:46,160 --> 00:45:50,160
user will stored in the http request

00:45:49,040 --> 00:45:53,680
header

00:45:50,160 --> 00:45:56,720
um it can be

00:45:53,680 --> 00:46:00,400
but if you do it on cdn basically

00:45:56,720 --> 00:46:03,440
you need to um to uh

00:46:00,400 --> 00:46:06,720
to do it um there

00:46:03,440 --> 00:46:08,240
oh yeah um maybe i can real quick share

00:46:06,720 --> 00:46:15,839
this lines

00:46:08,240 --> 00:46:15,839
uh maybe i can't

00:46:26,839 --> 00:46:29,839
okay

00:46:39,119 --> 00:46:45,200
um catching up miles for us

00:46:42,640 --> 00:46:46,000
users yes we can catch optimized on the

00:46:45,200 --> 00:46:48,480
cdn

00:46:46,000 --> 00:46:50,319
but it needs development efforts you

00:46:48,480 --> 00:46:52,319
will need someone um

00:46:50,319 --> 00:46:53,359
like a performance shop unfortunately

00:46:52,319 --> 00:46:56,480
for that

00:46:53,359 --> 00:46:58,880
um that can can do that for you

00:46:56,480 --> 00:46:58,880
um

00:47:00,720 --> 00:47:03,839
post when executing as part of a laser

00:47:02,880 --> 00:47:07,760
ability

00:47:03,839 --> 00:47:11,599
builder um

00:47:07,760 --> 00:47:14,400
you basically um you can just

00:47:11,599 --> 00:47:15,280
render it we collect it out of band and

00:47:14,400 --> 00:47:18,160
then we have a

00:47:15,280 --> 00:47:20,319
render context where we can um can take

00:47:18,160 --> 00:47:20,319
it

00:47:21,359 --> 00:47:24,800
apcu versus dedicated caching servers

00:47:23,680 --> 00:47:29,599
like redis

00:47:24,800 --> 00:47:29,599
on on on memcache

00:47:30,240 --> 00:47:34,720
you use both you don't decide on radius

00:47:32,800 --> 00:47:37,760
or main cache you use apc

00:47:34,720 --> 00:47:39,680
plus for this on memcache again aptv

00:47:37,760 --> 00:47:41,280
is a fridge below the counter for

00:47:39,680 --> 00:47:44,720
memcache you need to go into the next

00:47:41,280 --> 00:47:44,720
room that's not very efficient

00:47:45,680 --> 00:47:49,680
um if you wanna um if you wanna do

00:47:48,640 --> 00:47:51,440
something

00:47:49,680 --> 00:47:53,520
first of all fast you can also do also

00:47:51,440 --> 00:47:54,880
and user caching we do that for some of

00:47:53,520 --> 00:47:56,880
our clients

00:47:54,880 --> 00:47:58,079
but if you just want one dynamic block

00:47:56,880 --> 00:48:00,880
the easiest is to make

00:47:58,079 --> 00:48:02,720
placeholder and you just render your own

00:48:00,880 --> 00:48:05,359
code in the placeholder

00:48:02,720 --> 00:48:06,000
and then you just put an ajax request

00:48:05,359 --> 00:48:08,800
that replace

00:48:06,000 --> 00:48:08,800
the placeholder

00:48:09,520 --> 00:48:14,160
render this was the module for the last

00:48:13,119 --> 00:48:18,079
slide

00:48:14,160 --> 00:48:20,559
a lazy lord loading module

00:48:18,079 --> 00:48:23,520
you can basically use use whatever big

00:48:20,559 --> 00:48:23,520
pipe probably

00:48:24,240 --> 00:48:29,920
okay uh yeah we are way out of time uh

00:48:28,000 --> 00:48:33,040
thank you very much that was all the

00:48:29,920 --> 00:48:35,839
questions and yeah

00:48:33,040 --> 00:48:35,839
thanks a lot

00:48:57,599 --> 00:49:01,599
uh slides should work now uh so we had

00:49:00,000 --> 00:49:05,040
to actually

00:49:01,599 --> 00:49:17,839
share them yeah

00:49:05,040 --> 00:49:17,839
people are coming

00:49:20,400 --> 00:49:23,440
oh yeah i should share the link maybe

00:49:22,160 --> 00:49:25,920
again uh

00:49:23,440 --> 00:49:27,359
for those that's the time gotten it yet

00:49:25,920 --> 00:49:45,839
uh

00:49:27,359 --> 00:49:45,839
copying and put it on

00:50:22,960 --> 00:50:29,119
yeah i mean i'm i don't know

00:50:26,000 --> 00:50:31,119
i keep that room open for a while

00:50:29,119 --> 00:50:32,720
checklists forever once i'm not sure if

00:50:31,119 --> 00:50:34,480
that's allowed but

00:50:32,720 --> 00:50:36,160
we do it and you can drop whenever you

00:50:34,480 --> 00:50:38,319
want um but

00:50:36,160 --> 00:50:40,240
steve pink um you have feeling that

00:50:38,319 --> 00:50:42,800
drupal isn't snappy whenever it comes to

00:50:40,240 --> 00:50:45,920
websites where all excuses are required

00:50:42,800 --> 00:50:49,040
um yeah

00:50:45,920 --> 00:50:51,200
in general um they can be snappy they

00:50:49,040 --> 00:51:09,839
just need to be programmed that way and

00:50:51,200 --> 00:51:09,839
we can do so much more even than

00:51:25,760 --> 00:51:29,200
okay johnny harino not sure if you're

00:51:28,000 --> 00:51:32,640
still there but

00:51:29,200 --> 00:51:34,480
um basically uh how post on execute part

00:51:32,640 --> 00:51:37,119
of lazy builder can then do render

00:51:34,480 --> 00:51:39,520
render get the attached public correctly

00:51:37,119 --> 00:51:41,599
we do magic

00:51:39,520 --> 00:51:44,160
basically um we create a rendered

00:51:41,599 --> 00:51:46,960
context and whenever we render something

00:51:44,160 --> 00:51:49,040
and you have something attached then we

00:51:46,960 --> 00:51:52,160
push it into this render context

00:51:49,040 --> 00:51:55,200
and when your render call is finished um

00:51:52,160 --> 00:51:57,680
then we we push it back

00:51:55,200 --> 00:51:59,920
basically once the uh once you we come

00:51:57,680 --> 00:52:05,839
back from the post blender callback

00:51:59,920 --> 00:52:05,839
and that's how we can do that

00:52:50,720 --> 00:52:58,319
it depends on preference uh basically um

00:52:54,480 --> 00:53:03,520
we use mostly memcache um as we also

00:52:58,319 --> 00:53:03,520
maintain those modules but

00:53:03,599 --> 00:53:10,240
they are very similar overall

00:53:07,440 --> 00:53:12,079
um memcache does some things in in a

00:53:10,240 --> 00:53:15,280
certain way where this is in other ways

00:53:12,079 --> 00:53:17,200
more powerful so it really depends on

00:53:15,280 --> 00:53:29,839
the on your side on your

00:53:17,200 --> 00:53:29,839
use case on what to change what you use

00:53:34,480 --> 00:53:43,839
yeah agree their functionality

00:53:50,800 --> 00:54:00,800
function essentially the same way um

00:53:57,280 --> 00:54:03,599
okay i'm going to try to um

00:54:00,800 --> 00:54:03,599
get the chat

00:54:05,359 --> 00:54:12,240
i want to save my chat

00:54:08,559 --> 00:54:12,240
let's see how that works

00:54:15,520 --> 00:54:20,559
so now it's not not stored automatically

00:54:22,480 --> 00:54:27,920

YouTube URL: https://www.youtube.com/watch?v=479f7fvuTnA


