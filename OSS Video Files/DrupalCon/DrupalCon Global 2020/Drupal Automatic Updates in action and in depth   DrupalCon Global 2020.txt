Title: Drupal Automatic Updates in action and in depth   DrupalCon Global 2020
Publication date: 2020-08-25
Playlist: DrupalCon Global 2020
Description: 
	A showcase of the work that has been accomplished by the Automatic Updates Initiative, and a review of the roadmap of enhancements to come.
Captions: 
	00:00:00,080 --> 00:00:04,560
i'm gonna um move ahead and we will see

00:00:03,120 --> 00:00:08,000
if he pops in

00:00:04,560 --> 00:00:09,040
uh in time for his stuff uh so there's

00:00:08,000 --> 00:00:11,679
really gonna be two

00:00:09,040 --> 00:00:13,920
um halfs to the presentation uh the

00:00:11,679 --> 00:00:16,480
first one is more of a practical side

00:00:13,920 --> 00:00:17,440
of what automatic updates are today um i

00:00:16,480 --> 00:00:19,920
did want to keep

00:00:17,440 --> 00:00:22,000
like that if you are a site owner right

00:00:19,920 --> 00:00:25,840
now what can this module do for you

00:00:22,000 --> 00:00:27,199
aspect um strong in this presentation

00:00:25,840 --> 00:00:29,119
because there are quite a few things it

00:00:27,199 --> 00:00:29,840
can do for you even if you don't want to

00:00:29,119 --> 00:00:32,239
use

00:00:29,840 --> 00:00:33,200
the update functionality itself there's

00:00:32,239 --> 00:00:34,559
other neat

00:00:33,200 --> 00:00:36,800
tricks in there that you might want to

00:00:34,559 --> 00:00:38,399
be aware of we'll do a live demo because

00:00:36,800 --> 00:00:40,559
live demos are cool and

00:00:38,399 --> 00:00:42,000
maybe more interesting than slide decks

00:00:40,559 --> 00:00:43,040
but also because i think it gives you

00:00:42,000 --> 00:00:46,079
some grounding

00:00:43,040 --> 00:00:47,920
for the basics of the implementation

00:00:46,079 --> 00:00:50,000
stuff we'll do in the second half

00:00:47,920 --> 00:00:51,520
and then we will get into a little bit

00:00:50,000 --> 00:00:52,960
of the implementation i think that's

00:00:51,520 --> 00:00:54,960
honestly helpful even if you're a site

00:00:52,960 --> 00:00:57,039
owner as well to know like if you drop

00:00:54,960 --> 00:01:01,039
this module on your site

00:00:57,039 --> 00:01:02,879
what would you expect it to do you know

00:01:01,039 --> 00:01:05,040
i think it'll give you more confidence

00:01:02,879 --> 00:01:06,320
really to have it on there

00:01:05,040 --> 00:01:09,520
and then we'll talk a bit about future

00:01:06,320 --> 00:01:13,119
plans as well of which there are many

00:01:09,520 --> 00:01:16,320
but first a moment to say thanks both to

00:01:13,119 --> 00:01:17,759
our organizational contributors that

00:01:16,320 --> 00:01:20,799
have provided funding

00:01:17,759 --> 00:01:22,799
development and other support i will

00:01:20,799 --> 00:01:24,640
call out the european commission here

00:01:22,799 --> 00:01:26,400
because they have had such a key role in

00:01:24,640 --> 00:01:29,759
getting us to where we are today

00:01:26,400 --> 00:01:33,680
and also our individual contributors

00:01:29,759 --> 00:01:37,759
those are some of them and more

00:01:33,680 --> 00:01:40,960
all right so uh let's kick off the

00:01:37,759 --> 00:01:44,000
first part the practical side of stuff

00:01:40,960 --> 00:01:45,520
um i suspect many of you already know

00:01:44,000 --> 00:01:47,280
basically the process for updating

00:01:45,520 --> 00:01:49,759
drupal but very briefly

00:01:47,280 --> 00:01:51,200
the bottom line is it's probably manual

00:01:49,759 --> 00:01:53,439
right like you might have

00:01:51,200 --> 00:01:54,399
used drush you might just be doing ftp

00:01:53,439 --> 00:01:57,759
who knows

00:01:54,399 --> 00:01:59,680
um until now manual updates have really

00:01:57,759 --> 00:02:01,439
been the only option

00:01:59,680 --> 00:02:03,200
unless you want to like cook up your own

00:02:01,439 --> 00:02:05,680
script but that's still not like

00:02:03,200 --> 00:02:08,239
easy you know that doesn't make drupal

00:02:05,680 --> 00:02:11,680
easy to adopt

00:02:08,239 --> 00:02:13,280
hi hey melissa uh i was wondering do you

00:02:11,680 --> 00:02:14,800
want to try sharing your slides again

00:02:13,280 --> 00:02:16,640
it looks like we're unable we may have

00:02:14,800 --> 00:02:20,840
lost that feed

00:02:16,640 --> 00:02:24,160
uh-oh well i will see what i can do

00:02:20,840 --> 00:02:25,760
um my narration i think was sufficient

00:02:24,160 --> 00:02:27,280
for the stuff i've gone well you know

00:02:25,760 --> 00:02:28,720
what let me pull up the contribution

00:02:27,280 --> 00:02:30,560
slides again

00:02:28,720 --> 00:02:32,080
okay um so yeah these were the

00:02:30,560 --> 00:02:35,280
contributors um

00:02:32,080 --> 00:02:37,840
organizational and individual also if

00:02:35,280 --> 00:02:40,879
you could help track down david

00:02:37,840 --> 00:02:41,920
that would david is waiting for approval

00:02:40,879 --> 00:02:44,480
to rejoin

00:02:41,920 --> 00:02:46,000
is that something you can do melissa uh

00:02:44,480 --> 00:02:47,440
i'm actually not seeing him said david

00:02:46,000 --> 00:02:49,360
do you mind retrying

00:02:47,440 --> 00:02:50,800
uh sometimes it times out and we've

00:02:49,360 --> 00:02:53,760
gotta

00:02:50,800 --> 00:02:53,760
give it another try

00:02:54,000 --> 00:02:59,440
or maybe refresh your screen and try

00:02:55,760 --> 00:02:59,440
again to come on up

00:03:00,000 --> 00:03:08,879
uh just as we see david

00:03:05,599 --> 00:03:11,519
oh we see slides besides yes

00:03:08,879 --> 00:03:11,519
all right sorry

00:03:12,640 --> 00:03:15,680
here why don't we do this i'll leave but

00:03:14,959 --> 00:03:17,200
if david

00:03:15,680 --> 00:03:18,959
sends a request and i'll be able to

00:03:17,200 --> 00:03:19,760
approve him in um so you don't have to

00:03:18,959 --> 00:03:22,720
stop

00:03:19,760 --> 00:03:24,560
there's david okay all right i'm out

00:03:22,720 --> 00:03:28,000
have a good one thanks for the help

00:03:24,560 --> 00:03:30,400
no worries okay so here's um

00:03:28,000 --> 00:03:32,000
the organizational contributors and then

00:03:30,400 --> 00:03:34,239
some of the individual contributors as

00:03:32,000 --> 00:03:34,239
well

00:03:36,239 --> 00:03:39,760
all right so um i already narrated this

00:03:38,400 --> 00:03:42,720
slide the bottom line

00:03:39,760 --> 00:03:44,480
is that there's been a clear need for

00:03:42,720 --> 00:03:47,599
adding automatic updates

00:03:44,480 --> 00:03:49,440
um but we've preferred uh with drupal to

00:03:47,599 --> 00:03:50,560
do it sort of in a slow and steady

00:03:49,440 --> 00:03:52,799
responsible

00:03:50,560 --> 00:03:53,920
fashion the good news however is that

00:03:52,799 --> 00:03:56,959
there is a

00:03:53,920 --> 00:03:58,239
stable core track module now that um

00:03:56,959 --> 00:04:01,760
offers what i would call that

00:03:58,239 --> 00:04:04,959
responsible phase one

00:04:01,760 --> 00:04:07,040
so when i say phase one i mean um

00:04:04,959 --> 00:04:08,560
we were really looking to solve like the

00:04:07,040 --> 00:04:11,760
biggest pain points

00:04:08,560 --> 00:04:13,519
that we felt the personas that would be

00:04:11,760 --> 00:04:14,879
interested in automatic updates we're

00:04:13,519 --> 00:04:16,479
experiencing

00:04:14,879 --> 00:04:19,519
and one of those is just that we have

00:04:16,479 --> 00:04:23,120
this long tail of outdated installs

00:04:19,519 --> 00:04:25,759
this graph is data straight off of the

00:04:23,120 --> 00:04:27,360
drupal core statistics and it's a little

00:04:25,759 --> 00:04:29,280
bit tweaked because it only shows drupal

00:04:27,360 --> 00:04:30,160
8 but it's very easy to see that you

00:04:29,280 --> 00:04:33,440
know when

00:04:30,160 --> 00:04:35,199
drupal 8.9 came out back in about

00:04:33,440 --> 00:04:38,479
october 2019

00:04:35,199 --> 00:04:40,960
uh the adoption of it was such that

00:04:38,479 --> 00:04:42,080
drupal 8.8 was still more prevalent and

00:04:40,960 --> 00:04:45,840
still is more prevalent

00:04:42,080 --> 00:04:47,680
right um uh up through now and so

00:04:45,840 --> 00:04:49,600
that's one of the things that i think

00:04:47,680 --> 00:04:52,240
automatic updates can help with

00:04:49,600 --> 00:04:52,639
in a couple of ways uh one of them is of

00:04:52,240 --> 00:04:54,560
course

00:04:52,639 --> 00:04:57,040
if you make things easier more people

00:04:54,560 --> 00:04:58,080
will do them and so we do have that

00:04:57,040 --> 00:05:00,800
one-click option

00:04:58,080 --> 00:05:03,120
now where if you have a simple site

00:05:00,800 --> 00:05:04,960
that's not managed via composer

00:05:03,120 --> 00:05:06,320
anybody that's a site administrator with

00:05:04,960 --> 00:05:08,320
the appropriate permissions

00:05:06,320 --> 00:05:10,479
can go in there and click that link and

00:05:08,320 --> 00:05:12,000
their site will update

00:05:10,479 --> 00:05:13,600
that's very cool and very exciting

00:05:12,000 --> 00:05:15,039
because we haven't had it before and so

00:05:13,600 --> 00:05:16,880
that's obviously something that you will

00:05:15,039 --> 00:05:19,759
all see during the live demo

00:05:16,880 --> 00:05:21,759
but then another thing that the core

00:05:19,759 --> 00:05:23,680
track module has in it that i think can

00:05:21,759 --> 00:05:26,720
help with the long tail problem

00:05:23,680 --> 00:05:29,280
it's simpler but it's just that it shows

00:05:26,720 --> 00:05:31,440
alerts about security updates that are

00:05:29,280 --> 00:05:32,960
coming down the pipe ahead of time

00:05:31,440 --> 00:05:35,360
and the reason i say that i think that

00:05:32,960 --> 00:05:38,320
can help with the long tail problem

00:05:35,360 --> 00:05:40,240
is that for sites that might choose not

00:05:38,320 --> 00:05:42,000
to use this one-click magic if that

00:05:40,240 --> 00:05:42,560
seems a little bit scary to do on a live

00:05:42,000 --> 00:05:44,800
site

00:05:42,560 --> 00:05:46,880
you might want to be in a position where

00:05:44,800 --> 00:05:49,120
you need to engage development resources

00:05:46,880 --> 00:05:51,360
but now you know

00:05:49,120 --> 00:05:53,120
ahead of time you know only by looking

00:05:51,360 --> 00:05:55,039
at the site that your eyes are on every

00:05:53,120 --> 00:05:55,919
day oh hey i need to bring in some

00:05:55,039 --> 00:05:58,720
resources

00:05:55,919 --> 00:05:59,600
uh on wednesday at two o'clock or what

00:05:58,720 --> 00:06:01,280
have you

00:05:59,600 --> 00:06:03,520
um to make sure that that gets done in a

00:06:01,280 --> 00:06:05,759
timely fashion

00:06:03,520 --> 00:06:08,000
um those alerts that appear ahead of

00:06:05,759 --> 00:06:09,680
time they look like this

00:06:08,000 --> 00:06:11,120
uh it's really simple this is obviously

00:06:09,680 --> 00:06:14,240
if you're logged in um

00:06:11,120 --> 00:06:18,240
as an administrator it just shows you

00:06:14,240 --> 00:06:21,919
the yeah i don't see the slides changing

00:06:18,240 --> 00:06:24,560
on the chair i still see sponsors and

00:06:21,919 --> 00:06:24,560
contributors

00:06:27,759 --> 00:06:31,039
yeah it seems like there must be some

00:06:29,680 --> 00:06:32,080
yeah there must be some problems with

00:06:31,039 --> 00:06:35,120
two presenters

00:06:32,080 --> 00:06:36,720
um some some spots to iron out thanks

00:06:35,120 --> 00:06:38,240
for letting for mentioning that though

00:06:36,720 --> 00:06:39,759
all right um so that's what that looks

00:06:38,240 --> 00:06:41,039
like it's uh just gonna say there's a

00:06:39,759 --> 00:06:42,240
public service announcement

00:06:41,039 --> 00:06:44,000
the name of the public service

00:06:42,240 --> 00:06:44,560
announcement which will include um the

00:06:44,000 --> 00:06:46,319
date

00:06:44,560 --> 00:06:48,080
and then a link um that you can click

00:06:46,319 --> 00:06:50,240
for more information about the nature of

00:06:48,080 --> 00:06:51,759
it but the bottom line is always

00:06:50,240 --> 00:06:54,000
there's going to be a security event you

00:06:51,759 --> 00:06:55,280
need to update your site

00:06:54,000 --> 00:06:57,759
for the most part at least for ones that

00:06:55,280 --> 00:06:57,759
show up here

00:06:59,199 --> 00:07:02,720
but these i think that these alerts can

00:07:01,840 --> 00:07:05,919
also help out

00:07:02,720 --> 00:07:07,919
with um with another persona as well um

00:07:05,919 --> 00:07:09,280
maybe not somebody that is in the u.s

00:07:07,919 --> 00:07:11,919
time zone but

00:07:09,280 --> 00:07:12,560
um instead folks that might be elsewhere

00:07:11,919 --> 00:07:14,479
in the world

00:07:12,560 --> 00:07:16,080
and i will let david talk a little bit

00:07:14,479 --> 00:07:18,160
about some of the cool things that we

00:07:16,080 --> 00:07:20,960
have for those people

00:07:18,160 --> 00:07:21,680
okay so what are the issues that we have

00:07:20,960 --> 00:07:23,120
as part of our

00:07:21,680 --> 00:07:25,759
supporting our international users

00:07:23,120 --> 00:07:28,160
especially outside some of the

00:07:25,759 --> 00:07:29,360
um of the time zones that a lot of our

00:07:28,160 --> 00:07:32,400
security team and

00:07:29,360 --> 00:07:33,680
release teams are based in is that a

00:07:32,400 --> 00:07:34,240
release can happen in the middle of the

00:07:33,680 --> 00:07:36,880
night

00:07:34,240 --> 00:07:38,080
and on the modern internet with a major

00:07:36,880 --> 00:07:40,319
project like drupal

00:07:38,080 --> 00:07:41,440
a compromise to a security vulnerability

00:07:40,319 --> 00:07:43,919
can arrive within

00:07:41,440 --> 00:07:45,120
hours of a release happening and so this

00:07:43,919 --> 00:07:47,520
creates a pretty

00:07:45,120 --> 00:07:48,879
bad situation for a lot of users

00:07:47,520 --> 00:07:50,240
depending on where they are in the world

00:07:48,879 --> 00:07:52,000
especially if they're on the other side

00:07:50,240 --> 00:07:54,960
of the globe from the release

00:07:52,000 --> 00:07:55,520
window because it means that they have

00:07:54,960 --> 00:07:57,280
this

00:07:55,520 --> 00:07:58,800
choice between getting a good night's

00:07:57,280 --> 00:08:00,240
sleep or

00:07:58,800 --> 00:08:02,400
being up in the middle of the night

00:08:00,240 --> 00:08:03,520
possibly working on trouble-prone work

00:08:02,400 --> 00:08:05,840
for releasing

00:08:03,520 --> 00:08:06,960
some possibly risky changes out to their

00:08:05,840 --> 00:08:08,319
site if they don't

00:08:06,960 --> 00:08:11,280
if they haven't been able to test all

00:08:08,319 --> 00:08:13,440
the stuff and they're operating

00:08:11,280 --> 00:08:14,400
under unusual hours and that's all just

00:08:13,440 --> 00:08:16,960
so they can get the

00:08:14,400 --> 00:08:17,680
fix out in order for them to not have

00:08:16,960 --> 00:08:20,240
their site

00:08:17,680 --> 00:08:20,800
defaced or compromised in the meantime

00:08:20,240 --> 00:08:23,759
so

00:08:20,800 --> 00:08:24,479
um to answer the question i did not

00:08:23,759 --> 00:08:26,720
directly

00:08:24,479 --> 00:08:27,759
uh go for wisconsin but i was definitely

00:08:26,720 --> 00:08:31,360
going for like

00:08:27,759 --> 00:08:33,599
the middle of north america uh and um i

00:08:31,360 --> 00:08:34,959
i do want to recognize that justice's

00:08:33,599 --> 00:08:38,159
amazing contributions

00:08:34,959 --> 00:08:40,000
are from her home in wisconsin

00:08:38,159 --> 00:08:42,000
and she's been behind a lot of key

00:08:40,000 --> 00:08:43,200
releases and security updates for drupal

00:08:42,000 --> 00:08:46,240
so thank you jess

00:08:43,200 --> 00:08:47,839
uh the um uh

00:08:46,240 --> 00:08:49,519
so but what i wanted to show with this

00:08:47,839 --> 00:08:50,000
is that when you think about the globe

00:08:49,519 --> 00:08:53,600
here

00:08:50,000 --> 00:08:55,279
um what happens is that we see a um

00:08:53,600 --> 00:08:56,560
you can see that like there might be one

00:08:55,279 --> 00:08:58,320
place where we're doing a release or

00:08:56,560 --> 00:08:59,200
coordinating release possibly a few time

00:08:58,320 --> 00:09:01,120
zones but

00:08:59,200 --> 00:09:02,640
that puts everyone all over the globe in

00:09:01,120 --> 00:09:04,000
a position of having to deal with it in

00:09:02,640 --> 00:09:06,320
a synchronized basis and

00:09:04,000 --> 00:09:07,360
as we're seeing with this drupal con um

00:09:06,320 --> 00:09:08,480
some of the people watching this

00:09:07,360 --> 00:09:10,720
presentation

00:09:08,480 --> 00:09:12,000
are up at 2am to be able to see this and

00:09:10,720 --> 00:09:15,120
we don't want that for

00:09:12,000 --> 00:09:15,519
a security release um what we want is is

00:09:15,120 --> 00:09:17,440
this

00:09:15,519 --> 00:09:18,720
um we want security releases if you can

00:09:17,440 --> 00:09:22,000
click once more

00:09:18,720 --> 00:09:24,160
um uh we want that to be this

00:09:22,000 --> 00:09:25,040
to be um someone who's using drupal

00:09:24,160 --> 00:09:27,920
updating

00:09:25,040 --> 00:09:28,880
um is you can um you can get everything

00:09:27,920 --> 00:09:30,320
in order

00:09:28,880 --> 00:09:31,920
you can have the update go out while

00:09:30,320 --> 00:09:33,839
you're sleeping and you can have pretty

00:09:31,920 --> 00:09:35,839
good confidence that the update has gone

00:09:33,839 --> 00:09:37,519
out and hasn't broken your site

00:09:35,839 --> 00:09:39,200
but there's a lot involved in that and

00:09:37,519 --> 00:09:41,519
it's not just about just deploying

00:09:39,200 --> 00:09:43,519
the security release itself we can't

00:09:41,519 --> 00:09:44,080
confidently just stomp on this code for

00:09:43,519 --> 00:09:46,000
a site

00:09:44,080 --> 00:09:47,760
and expect that everything is going to

00:09:46,000 --> 00:09:49,360
be great with a security release

00:09:47,760 --> 00:09:50,880
what we need to do is minimize the

00:09:49,360 --> 00:09:52,240
amount of risk that's occurring while

00:09:50,880 --> 00:09:55,600
that user's sleeping

00:09:52,240 --> 00:09:57,680
so that it happens in a way that avoids

00:09:55,600 --> 00:09:59,120
site breakage because one of the things

00:09:57,680 --> 00:10:00,399
that we're really concerned about in the

00:09:59,120 --> 00:10:03,040
architecture of this

00:10:00,399 --> 00:10:04,560
is if people don't trust the automatic

00:10:03,040 --> 00:10:07,360
updates to not break their sites people

00:10:04,560 --> 00:10:07,360
will turn it off

00:10:08,320 --> 00:10:14,000
so we'll talk a little bit with that

00:10:12,000 --> 00:10:15,360
we'll hand it back to uh to mike for the

00:10:14,000 --> 00:10:16,959
demo sure

00:10:15,360 --> 00:10:18,560
yeah we'll get into some more of what

00:10:16,959 --> 00:10:22,079
the readiness checks all are

00:10:18,560 --> 00:10:23,760
as well down the road including even one

00:10:22,079 --> 00:10:25,360
in the demo

00:10:23,760 --> 00:10:27,920
which i thought would be now would be a

00:10:25,360 --> 00:10:29,920
good time to slot that in

00:10:27,920 --> 00:10:31,440
just sort of as a break from the slides

00:10:29,920 --> 00:10:33,839
there's that youtube link

00:10:31,440 --> 00:10:35,760
um in case like i don't know people are

00:10:33,839 --> 00:10:39,120
having trouble with hop in or anything

00:10:35,760 --> 00:10:40,959
um i'm gonna drop the link to the

00:10:39,120 --> 00:10:44,320
recording

00:10:40,959 --> 00:10:46,240
thank you uh but for the rest of us

00:10:44,320 --> 00:10:48,480
if it works for you it should look like

00:10:46,240 --> 00:10:52,079
this do you folks see

00:10:48,480 --> 00:10:52,079
the umami demo site

00:10:53,040 --> 00:10:57,279
yes okay so you all know what this looks

00:10:55,920 --> 00:10:57,839
like more or less but of course this

00:10:57,279 --> 00:11:00,720
site

00:10:57,839 --> 00:11:03,040
has the unique feature that the

00:11:00,720 --> 00:11:05,519
automatic updates module

00:11:03,040 --> 00:11:07,600
if i can spell automatic updates is

00:11:05,519 --> 00:11:09,200
installed and enabled

00:11:07,600 --> 00:11:11,040
um and i actually do want to say a

00:11:09,200 --> 00:11:14,399
little bit more about that

00:11:11,040 --> 00:11:19,440
so yes it's a module still and this site

00:11:14,399 --> 00:11:21,279
is a drupal 9 site

00:11:19,440 --> 00:11:24,000
and we actually don't at least as of a

00:11:21,279 --> 00:11:26,959
few days ago have a version of the

00:11:24,000 --> 00:11:29,200
automatic updates module

00:11:26,959 --> 00:11:31,040
that is released for drupal 9 but as you

00:11:29,200 --> 00:11:32,560
can see it's available and it's working

00:11:31,040 --> 00:11:33,839
if you pull it from source

00:11:32,560 --> 00:11:36,079
i'm sure that the release will be coming

00:11:33,839 --> 00:11:38,959
out very soon for that as well

00:11:36,079 --> 00:11:40,800
um what else did i want to say oh the

00:11:38,959 --> 00:11:41,279
name of the module in case folks don't

00:11:40,800 --> 00:11:44,320
know it

00:11:41,279 --> 00:11:47,920
is automatic underscore updates

00:11:44,320 --> 00:11:49,120
okay so since that module is enabled

00:11:47,920 --> 00:11:51,519
what does that give us

00:11:49,120 --> 00:11:52,560
that gives us an extra page here on your

00:11:51,519 --> 00:11:54,000
configuration

00:11:52,560 --> 00:11:56,639
under the system section called

00:11:54,000 --> 00:11:59,680
automatic updates and in here

00:11:56,639 --> 00:12:01,760
this is really both the configuration

00:11:59,680 --> 00:12:03,760
and the operation for this module at

00:12:01,760 --> 00:12:05,760
this point so we see there's some stuff

00:12:03,760 --> 00:12:06,959
about the public service announcements

00:12:05,760 --> 00:12:09,360
we see there's some stuff about the

00:12:06,959 --> 00:12:11,519
readiness checks but what i want to do

00:12:09,360 --> 00:12:13,120
first is this experimental part because

00:12:11,519 --> 00:12:15,360
i like to live on the edge no because

00:12:13,120 --> 00:12:16,320
um this is the cool thing that actually

00:12:15,360 --> 00:12:19,360
updates your site

00:12:16,320 --> 00:12:21,120
so we saw we had a 9.0.1 there and this

00:12:19,360 --> 00:12:23,120
is the promised one-click link

00:12:21,120 --> 00:12:25,360
i'm going to hit that and we see now

00:12:23,120 --> 00:12:27,360
that we have a page request running

00:12:25,360 --> 00:12:28,399
and what it's doing is it's downloading

00:12:27,360 --> 00:12:31,279
over my home internet

00:12:28,399 --> 00:12:35,360
connection uh fingers crossed the update

00:12:31,279 --> 00:12:38,720
from drupal.org from 9.0.1 to 9.0.2

00:12:35,360 --> 00:12:40,639
it's verifying it and then it's actually

00:12:38,720 --> 00:12:42,240
applying it to this site

00:12:40,639 --> 00:12:43,680
so you can see there that that was

00:12:42,240 --> 00:12:46,720
successful

00:12:43,680 --> 00:12:48,240
and we'll jump back to the report

00:12:46,720 --> 00:12:51,839
first because that's where we can see

00:12:48,240 --> 00:12:55,120
what happened so we have 9.0.2

00:12:51,839 --> 00:12:57,279
up to date it only took about i would

00:12:55,120 --> 00:12:59,760
say 10 seconds during that demo

00:12:57,279 --> 00:13:01,279
honestly it usually takes five i suspect

00:12:59,760 --> 00:13:04,880
the load average of almost 10 on my

00:13:01,279 --> 00:13:06,320
laptop had something to do with that

00:13:04,880 --> 00:13:07,519
and those are numbers that actually

00:13:06,320 --> 00:13:09,440
we're pretty proud of that we've

00:13:07,519 --> 00:13:11,680
optimized as much as possible

00:13:09,440 --> 00:13:13,760
given that um there's like cryptographic

00:13:11,680 --> 00:13:15,680
verification taking place and downloads

00:13:13,760 --> 00:13:18,839
being generated and all sorts of things

00:13:15,680 --> 00:13:20,560
that we'll get into um in the second

00:13:18,839 --> 00:13:22,880
half okay

00:13:20,560 --> 00:13:24,000
so oh and hey for what it's worth let's

00:13:22,880 --> 00:13:25,680
pull up the home page too

00:13:24,000 --> 00:13:28,160
just to show that like this site still

00:13:25,680 --> 00:13:31,120
works cool

00:13:28,160 --> 00:13:32,560
so that's the happy path if you have a

00:13:31,120 --> 00:13:33,839
contrived demo

00:13:32,560 --> 00:13:35,839
where you know that all the file

00:13:33,839 --> 00:13:36,959
permissions are right and all that sort

00:13:35,839 --> 00:13:39,519
of stuff

00:13:36,959 --> 00:13:41,120
what happens if something is a little

00:13:39,519 --> 00:13:42,480
bit of miss

00:13:41,120 --> 00:13:44,240
i thought i would spend a little bit of

00:13:42,480 --> 00:13:45,120
time showing folks some of the things

00:13:44,240 --> 00:13:48,399
that we've done

00:13:45,120 --> 00:13:50,079
sort of down that path as well

00:13:48,399 --> 00:13:51,440
because we know that in the real world

00:13:50,079 --> 00:13:53,680
these things happen right

00:13:51,440 --> 00:13:55,199
so i'm going to close this tab you'll

00:13:53,680 --> 00:13:57,440
notice this was the site that i was on

00:13:55,199 --> 00:13:59,120
it was called d9autoupdate.dev

00:13:57,440 --> 00:14:01,440
i'll get rid of that and i have a second

00:13:59,120 --> 00:14:03,440
one it's exactly the same

00:14:01,440 --> 00:14:06,000
we have the automatic updates module

00:14:03,440 --> 00:14:09,360
installed and enabled etc

00:14:06,000 --> 00:14:10,639
and we are on drupal 9.0.1 however

00:14:09,360 --> 00:14:12,639
you'll notice

00:14:10,639 --> 00:14:13,760
that if i look on my administrative

00:14:12,639 --> 00:14:16,480
pages here

00:14:13,760 --> 00:14:18,240
we have this message your site does not

00:14:16,480 --> 00:14:19,360
pass some readiness checks for automatic

00:14:18,240 --> 00:14:20,639
updates okay

00:14:19,360 --> 00:14:23,040
so that's actually seeing these

00:14:20,639 --> 00:14:23,920
readiness checks that we hinted at in

00:14:23,040 --> 00:14:26,000
action

00:14:23,920 --> 00:14:27,279
and then it says depending on the nature

00:14:26,000 --> 00:14:28,959
of the failures

00:14:27,279 --> 00:14:31,600
it might affect eligibility for

00:14:28,959 --> 00:14:33,519
automatic updates huh

00:14:31,600 --> 00:14:35,040
and then down here um we have some more

00:14:33,519 --> 00:14:36,880
information about like

00:14:35,040 --> 00:14:38,079
uh specifically what the problem seems

00:14:36,880 --> 00:14:40,320
to be

00:14:38,079 --> 00:14:41,279
the hash for this file doesn't match its

00:14:40,320 --> 00:14:43,040
original

00:14:41,279 --> 00:14:45,040
and it says that updates that include

00:14:43,040 --> 00:14:46,160
that file will fail and require manual

00:14:45,040 --> 00:14:49,760
intervention

00:14:46,160 --> 00:14:51,920
okay so a little bit of explanation of

00:14:49,760 --> 00:14:53,680
what this all is

00:14:51,920 --> 00:14:55,199
something very cool that's happening on

00:14:53,680 --> 00:14:59,120
the drupal.org side now

00:14:55,199 --> 00:15:01,680
is that regenerating hash lists

00:14:59,120 --> 00:15:04,240
that allow us to determine for every

00:15:01,680 --> 00:15:06,560
file of every drupal core release

00:15:04,240 --> 00:15:08,399
what its content should be and then

00:15:06,560 --> 00:15:09,199
we're also digitally signing that list

00:15:08,399 --> 00:15:12,880
of hashes

00:15:09,199 --> 00:15:14,959
so that gives us a very strong

00:15:12,880 --> 00:15:17,600
way to verify what the desired state of

00:15:14,959 --> 00:15:17,600
a site should be

00:15:18,000 --> 00:15:22,079
okay so we still have some some wording

00:15:20,560 --> 00:15:22,639
in this that i sort of wanted to dig

00:15:22,079 --> 00:15:24,240
into

00:15:22,639 --> 00:15:26,079
depending on the nature of the failures

00:15:24,240 --> 00:15:29,360
it might affect the eligibility

00:15:26,079 --> 00:15:31,600
um so what that's really getting at

00:15:29,360 --> 00:15:32,639
is that with these readiness checks our

00:15:31,600 --> 00:15:36,639
goal again

00:15:32,639 --> 00:15:37,440
is to try to to um have you fix problems

00:15:36,639 --> 00:15:38,880
when it's

00:15:37,440 --> 00:15:40,639
you know three in the afternoon not

00:15:38,880 --> 00:15:41,920
three in the morning for you however we

00:15:40,639 --> 00:15:43,680
also have that goal

00:15:41,920 --> 00:15:45,759
of keeping that long tail as small as

00:15:43,680 --> 00:15:47,199
possible so many of these readiness

00:15:45,759 --> 00:15:49,759
checks they won't actually

00:15:47,199 --> 00:15:51,360
preclude us from attempting an update

00:15:49,759 --> 00:15:54,639
and it turns out this is one of them

00:15:51,360 --> 00:15:56,480
it's kind of a cool one because

00:15:54,639 --> 00:15:57,680
the update is going to fail i'll go

00:15:56,480 --> 00:16:00,519
ahead and do it because

00:15:57,680 --> 00:16:02,000
it turns out the release from 9.0.1 to

00:16:00,519 --> 00:16:06,320
9.0.2 does

00:16:02,000 --> 00:16:09,839
change this file so if i jump in

00:16:06,320 --> 00:16:09,839
and tell it to update

00:16:12,560 --> 00:16:16,000
we'll get an error message that comes

00:16:14,399 --> 00:16:18,399
back

00:16:16,000 --> 00:16:19,600
okay so it says please review the logs

00:16:18,399 --> 00:16:21,759
to determine the cause

00:16:19,600 --> 00:16:23,759
and i'd like to show you guys the logs

00:16:21,759 --> 00:16:25,600
as well because it's not watchdog

00:16:23,759 --> 00:16:28,160
they went to a different spot because

00:16:25,600 --> 00:16:30,800
the volume of the logs can be so high

00:16:28,160 --> 00:16:31,600
uh so if we look at all of them here um

00:16:30,800 --> 00:16:33,279
we'll see

00:16:31,600 --> 00:16:34,800
what's up and we see that it can't

00:16:33,279 --> 00:16:36,959
update because it turns out

00:16:34,800 --> 00:16:39,040
that that file was modified in the

00:16:36,959 --> 00:16:42,880
release

00:16:39,040 --> 00:16:44,160
um yeah but if it had been a different

00:16:42,880 --> 00:16:44,720
file and this is kind of something

00:16:44,160 --> 00:16:46,880
that's

00:16:44,720 --> 00:16:48,160
important that i want folks to have an

00:16:46,880 --> 00:16:49,680
understanding of

00:16:48,160 --> 00:16:51,279
because of the way we're doing the

00:16:49,680 --> 00:16:55,120
updates if any

00:16:51,279 --> 00:16:56,880
file that was not um

00:16:55,120 --> 00:16:59,199
if any file that needed to be changed in

00:16:56,880 --> 00:17:00,959
order to apply the new release was

00:16:59,199 --> 00:17:03,440
not modified that'll still get updated

00:17:00,959 --> 00:17:05,199
right so we we the the border between

00:17:03,440 --> 00:17:06,480
when we will update a site and when we

00:17:05,199 --> 00:17:08,880
will not is

00:17:06,480 --> 00:17:10,799
um based on are any of the files that

00:17:08,880 --> 00:17:12,079
changed in the new release files that

00:17:10,799 --> 00:17:14,000
you have patched

00:17:12,079 --> 00:17:15,679
um if they aren't we'll go ahead with it

00:17:14,000 --> 00:17:17,600
understandably that's maybe a little bit

00:17:15,679 --> 00:17:18,000
dangerous right because like in theory

00:17:17,600 --> 00:17:21,600
you could

00:17:18,000 --> 00:17:21,600
have a site that

00:17:21,919 --> 00:17:25,039
had a patch that turned out to be

00:17:23,439 --> 00:17:26,880
incompatible with a new release because

00:17:25,039 --> 00:17:28,640
core patches always have that risk

00:17:26,880 --> 00:17:30,880
but since core patches always have that

00:17:28,640 --> 00:17:32,320
risk we did want to we figured that this

00:17:30,880 --> 00:17:34,559
was the better option

00:17:32,320 --> 00:17:36,000
to keep sites as up to date as possible

00:17:34,559 --> 00:17:37,520
and that folks that want to patch core

00:17:36,000 --> 00:17:39,840
understand that they're living on the

00:17:37,520 --> 00:17:42,480
edge in that way

00:17:39,840 --> 00:17:44,080
um one last thing i want to do well i'm

00:17:42,480 --> 00:17:47,200
in live demo land

00:17:44,080 --> 00:17:49,039
and that was just to show you

00:17:47,200 --> 00:17:50,880
what this other checkbox here that i

00:17:49,039 --> 00:17:51,520
haven't talked about it says enable

00:17:50,880 --> 00:17:54,400
automatic

00:17:51,520 --> 00:17:54,880
updates of drupal core viacron so this

00:17:54,400 --> 00:17:57,360
is

00:17:54,880 --> 00:17:58,720
the fully automated version of the thing

00:17:57,360 --> 00:18:00,080
um all of the other ones that you've

00:17:58,720 --> 00:18:02,240
seen of course i've been clicking this

00:18:00,080 --> 00:18:04,240
link and that's still manual

00:18:02,240 --> 00:18:05,919
but this is the way that you can ask

00:18:04,240 --> 00:18:06,960
through drupalcron to have your updates

00:18:05,919 --> 00:18:10,480
apply

00:18:06,960 --> 00:18:15,840
all on their own cool

00:18:10,480 --> 00:18:15,840
let's jump back to the presentation now

00:18:16,400 --> 00:18:20,400
and we can get into the second half with

00:18:18,799 --> 00:18:22,000
some of the implementation specifics and

00:18:20,400 --> 00:18:23,520
problems that we've solved

00:18:22,000 --> 00:18:25,280
so since i was talking about that one

00:18:23,520 --> 00:18:27,919
readiness check this seemed like a good

00:18:25,280 --> 00:18:29,440
opportunity to enumerate some of the

00:18:27,919 --> 00:18:31,840
other ones that we have

00:18:29,440 --> 00:18:33,679
um we're also looking at things like can

00:18:31,840 --> 00:18:35,039
the files be written to and we're doing

00:18:33,679 --> 00:18:36,640
a bunch of different things like

00:18:35,039 --> 00:18:38,400
written two has a lot of meanings that

00:18:36,640 --> 00:18:39,919
can mean file ownership or mode

00:18:38,400 --> 00:18:41,200
that could also mean like is the file

00:18:39,919 --> 00:18:42,000
system actually writeable that's

00:18:41,200 --> 00:18:44,080
something that we check

00:18:42,000 --> 00:18:46,000
for really everything that we could

00:18:44,080 --> 00:18:47,840
think of that could potentially

00:18:46,000 --> 00:18:49,760
have you run into problems when we try

00:18:47,840 --> 00:18:51,360
to apply that automatic update

00:18:49,760 --> 00:18:53,360
i mentioned have you modified core

00:18:51,360 --> 00:18:56,160
there's other ones too for example

00:18:53,360 --> 00:18:57,520
if your database schema is has updates

00:18:56,160 --> 00:19:00,480
waiting to be applied

00:18:57,520 --> 00:19:02,320
that's actually one where we will stop

00:19:00,480 --> 00:19:04,960
the automatic update from running

00:19:02,320 --> 00:19:06,080
um even you know just that's a that's a

00:19:04,960 --> 00:19:08,080
show stopper

00:19:06,080 --> 00:19:09,120
in that case if you're interested in

00:19:08,080 --> 00:19:11,120
seeing all of them

00:19:09,120 --> 00:19:13,120
and which ones are show stoppers versus

00:19:11,120 --> 00:19:14,400
which ones we'll still attempt to apply

00:19:13,120 --> 00:19:17,600
the update on

00:19:14,400 --> 00:19:19,039
um i would actually say look at the

00:19:17,600 --> 00:19:21,039
source code the 8.x

00:19:19,039 --> 00:19:22,880
version is very easy to follow there's a

00:19:21,039 --> 00:19:25,520
folder called

00:19:22,880 --> 00:19:26,559
readiness checks and the file names

00:19:25,520 --> 00:19:27,760
inside that folder are very

00:19:26,559 --> 00:19:29,200
self-descriptive so you don't really

00:19:27,760 --> 00:19:31,039
even need to know php you can just kind

00:19:29,200 --> 00:19:34,240
of see like okay this one says

00:19:31,039 --> 00:19:35,679
files are writable that sort of thing

00:19:34,240 --> 00:19:37,440
we've talked about the value of these as

00:19:35,679 --> 00:19:40,240
well so i think we've

00:19:37,440 --> 00:19:41,120
pretty much covered readiness checks um

00:19:40,240 --> 00:19:42,799
although

00:19:41,120 --> 00:19:44,480
if you will indulge me for one second i

00:19:42,799 --> 00:19:46,480
remembered something on the live

00:19:44,480 --> 00:19:48,880
site on the demo that i wanted to show

00:19:46,480 --> 00:19:51,039
folks since that update failed

00:19:48,880 --> 00:19:52,880
um what happened to this version of

00:19:51,039 --> 00:19:54,240
drupal right did it like partially

00:19:52,880 --> 00:19:56,240
update or whatever

00:19:54,240 --> 00:19:59,200
um what we actually have is since it

00:19:56,240 --> 00:20:01,120
failed we went back to 9.0.1

00:19:59,200 --> 00:20:03,039
and we did that in its entirety so we

00:20:01,120 --> 00:20:04,960
detected a problem during the update

00:20:03,039 --> 00:20:07,280
and we actually have the capability

00:20:04,960 --> 00:20:10,799
built into the module to do rollbacks

00:20:07,280 --> 00:20:13,039
and that took place so

00:20:10,799 --> 00:20:13,039
cool

00:20:14,320 --> 00:20:19,360
um so i mentioned quasi patches at the

00:20:18,080 --> 00:20:21,840
very beginning

00:20:19,360 --> 00:20:24,480
and they are the thing that that really

00:20:21,840 --> 00:20:24,960
drives it being as fast as it can be and

00:20:24,480 --> 00:20:27,840
also

00:20:24,960 --> 00:20:29,360
that drives that um can we update this

00:20:27,840 --> 00:20:31,440
site or not depending on exactly which

00:20:29,360 --> 00:20:35,200
files are patched

00:20:31,440 --> 00:20:36,400
um i really give lots of props to

00:20:35,200 --> 00:20:38,480
everyone that's contributed to

00:20:36,400 --> 00:20:41,120
drupal.org primarily of course the

00:20:38,480 --> 00:20:42,080
d.a on making these things happen it was

00:20:41,120 --> 00:20:45,520
a big commitment

00:20:42,080 --> 00:20:48,880
in phase one of automatic updates so

00:20:45,520 --> 00:20:52,000
what quasi patches are are

00:20:48,880 --> 00:20:54,320
zip files right like here's a url

00:20:52,000 --> 00:20:55,440
but instead of being a full release they

00:20:54,320 --> 00:20:58,320
contain

00:20:55,440 --> 00:20:59,919
only the files that have changed and

00:20:58,320 --> 00:21:01,120
what's cool about these

00:20:59,919 --> 00:21:03,200
there's a bunch of things that are cool

00:21:01,120 --> 00:21:04,240
about them if you ask me but the coolest

00:21:03,200 --> 00:21:06,400
thing about them

00:21:04,240 --> 00:21:07,280
is that this url it might look like a

00:21:06,400 --> 00:21:10,159
statically

00:21:07,280 --> 00:21:11,919
generated asset but in fact this is

00:21:10,159 --> 00:21:14,000
dynamically generated and i want to

00:21:11,919 --> 00:21:14,840
mention this because i think there's

00:21:14,000 --> 00:21:18,000
potential

00:21:14,840 --> 00:21:19,520
for other community projects that aren't

00:21:18,000 --> 00:21:20,960
necessarily the core module

00:21:19,520 --> 00:21:22,400
to make use of this stuff for other

00:21:20,960 --> 00:21:24,000
purposes as well this is just something

00:21:22,400 --> 00:21:26,000
that's out there on drupal.org

00:21:24,000 --> 00:21:27,440
that i don't think is very well known

00:21:26,000 --> 00:21:30,640
and that has

00:21:27,440 --> 00:21:32,960
lots of potential applications so

00:21:30,640 --> 00:21:34,880
uh of course if i just take that url

00:21:32,960 --> 00:21:37,760
that was in the slide deck

00:21:34,880 --> 00:21:39,600
and ask for for that thing you see that

00:21:37,760 --> 00:21:41,919
i get a file download

00:21:39,600 --> 00:21:43,280
um and we could jump into the file

00:21:41,919 --> 00:21:45,280
download and see what's in it if we

00:21:43,280 --> 00:21:45,760
wanted but what i want to focus on right

00:21:45,280 --> 00:21:49,520
now

00:21:45,760 --> 00:21:49,520
is the dynamic nature of this thing

00:21:49,600 --> 00:21:53,679
this actually works for any project it

00:21:52,000 --> 00:21:55,600
doesn't have to be drupal core

00:21:53,679 --> 00:21:57,120
we see here the project name but i could

00:21:55,600 --> 00:21:58,400
have changed that to a module if i

00:21:57,120 --> 00:22:00,000
wanted

00:21:58,400 --> 00:22:02,400
i hope this is big enough for folks i

00:22:00,000 --> 00:22:02,960
don't think i can make the address bar

00:22:02,400 --> 00:22:05,840
larger

00:22:02,960 --> 00:22:05,840
unfortunately

00:22:06,240 --> 00:22:09,360
so i will try to be as descriptive as

00:22:08,000 --> 00:22:14,480
possible

00:22:09,360 --> 00:22:14,480
and then so the url had that uh

00:22:14,679 --> 00:22:17,120
drupal-8.8.28.8.3 i'm just going to

00:22:16,400 --> 00:22:20,240
change that

00:22:17,120 --> 00:22:21,760
to like 8.8.1.8.8.3

00:22:20,240 --> 00:22:23,679
but you could do any permutation that

00:22:21,760 --> 00:22:26,320
you wanted and what's going to happen if

00:22:23,679 --> 00:22:28,159
i do that is i actually got a page back

00:22:26,320 --> 00:22:30,240
and we have a message here that's super

00:22:28,159 --> 00:22:32,400
small that says this update is being

00:22:30,240 --> 00:22:34,640
generated and is not available yet

00:22:32,400 --> 00:22:36,880
so that's um getting generated on the

00:22:34,640 --> 00:22:39,120
fly and it's pretty fast

00:22:36,880 --> 00:22:40,080
if i hit this again i just hit refresh

00:22:39,120 --> 00:22:41,919
oh interesting that one

00:22:40,080 --> 00:22:43,280
isn't available yet because it's a live

00:22:41,919 --> 00:22:45,760
demo cool

00:22:43,280 --> 00:22:45,760
um

00:22:46,320 --> 00:22:49,520
sometimes it takes a few seconds there's

00:22:47,919 --> 00:22:52,960
a whole pipeline involved

00:22:49,520 --> 00:22:54,880
in running that on a separate host and

00:22:52,960 --> 00:22:56,080
serving it out once we've built it once

00:22:54,880 --> 00:22:57,360
it gets cached

00:22:56,080 --> 00:22:59,200
since that one doesn't appear to be

00:22:57,360 --> 00:23:00,799
ready yet i will use one that i know is

00:22:59,200 --> 00:23:01,840
already ready because i just wanted to

00:23:00,799 --> 00:23:06,159
show folks what

00:23:01,840 --> 00:23:07,679
the quasi patches look like um

00:23:06,159 --> 00:23:09,360
another thing that maybe isn't big

00:23:07,679 --> 00:23:11,600
enough for some people

00:23:09,360 --> 00:23:13,440
but uh so this is inside the zip file

00:23:11,600 --> 00:23:15,120
there's a deletion manifest for any

00:23:13,440 --> 00:23:17,120
any files that were removed from one

00:23:15,120 --> 00:23:18,799
release to another and then of course as

00:23:17,120 --> 00:23:19,679
you might expect this is just a straight

00:23:18,799 --> 00:23:22,240
up listing

00:23:19,679 --> 00:23:23,679
of the files in in the directory

00:23:22,240 --> 00:23:25,760
structure that they exist in core but

00:23:23,679 --> 00:23:30,960
only the ones that changed

00:23:25,760 --> 00:23:34,240
right back to the presentation

00:23:30,960 --> 00:23:35,679
that's what quasi patches are and that's

00:23:34,240 --> 00:23:38,799
how you can use them

00:23:35,679 --> 00:23:39,919
we're also generating signatures for all

00:23:38,799 --> 00:23:41,679
of those

00:23:39,919 --> 00:23:44,720
quasi patches as they're dynamically

00:23:41,679 --> 00:23:46,159
generated so that's also very cool

00:23:44,720 --> 00:23:48,480
these are the benefits of it makes

00:23:46,159 --> 00:23:49,919
things faster i went over that already

00:23:48,480 --> 00:23:51,919
but really the other thing is that it

00:23:49,919 --> 00:23:53,760
avoids unnecessary tinkering with a live

00:23:51,919 --> 00:23:54,799
site's code base right like so if your

00:23:53,760 --> 00:23:56,559
file did not change

00:23:54,799 --> 00:23:58,320
we don't have to change it that's great

00:23:56,559 --> 00:24:00,720
because uh just like

00:23:58,320 --> 00:24:02,240
i believe in the theory of making things

00:24:00,720 --> 00:24:03,120
you know as simple as possible this is

00:24:02,240 --> 00:24:04,320
simpler

00:24:03,120 --> 00:24:06,880
it has a higher chance of being

00:24:04,320 --> 00:24:06,880
successful

00:24:09,840 --> 00:24:14,720
i think we still have david yep come

00:24:12,559 --> 00:24:14,720
here

00:24:16,799 --> 00:24:21,760
i've been fielding questions and chat

00:24:19,039 --> 00:24:25,120
cool are you able to see the deck

00:24:21,760 --> 00:24:26,000
yes okay um upon rejoining i was able to

00:24:25,120 --> 00:24:29,600
do that

00:24:26,000 --> 00:24:32,480
um so um i believe we're now on the

00:24:29,600 --> 00:24:34,559
first slide that i'm taking back over so

00:24:32,480 --> 00:24:35,520
um basically one of the things that we

00:24:34,559 --> 00:24:37,520
have we've had to

00:24:35,520 --> 00:24:38,799
wrestle with here is how do we do this

00:24:37,520 --> 00:24:40,559
all in a way that we is actually

00:24:38,799 --> 00:24:40,880
trustworthy not just from a perspective

00:24:40,559 --> 00:24:43,200
of

00:24:40,880 --> 00:24:44,720
not breaking your site but not opening

00:24:43,200 --> 00:24:47,679
up more security doors

00:24:44,720 --> 00:24:48,480
than we're actually closing because so

00:24:47,679 --> 00:24:50,880
uh when you

00:24:48,480 --> 00:24:53,120
auto update you're essentially providing

00:24:50,880 --> 00:24:55,520
a code injection path to a site

00:24:53,120 --> 00:24:56,960
um and that means that we need to be

00:24:55,520 --> 00:24:57,840
really really careful about the

00:24:56,960 --> 00:24:59,279
provenance of

00:24:57,840 --> 00:25:01,840
of the code that's actually coming

00:24:59,279 --> 00:25:03,600
through at the same time we're having to

00:25:01,840 --> 00:25:04,400
juggle some really complicated issues

00:25:03,600 --> 00:25:06,640
around that

00:25:04,400 --> 00:25:08,000
um one of them is key management if you

00:25:06,640 --> 00:25:09,279
look at the linux world around this

00:25:08,000 --> 00:25:11,039
stuff

00:25:09,279 --> 00:25:13,600
a lot of them require that individual

00:25:11,039 --> 00:25:14,000
developers hold their own keys sign

00:25:13,600 --> 00:25:16,480
their own

00:25:14,000 --> 00:25:17,279
work um that's just not viable for a

00:25:16,480 --> 00:25:20,960
community as

00:25:17,279 --> 00:25:22,799
as broad diverse and active as drupals

00:25:20,960 --> 00:25:24,559
we have module maintainers who are doing

00:25:22,799 --> 00:25:25,840
everything from their first module

00:25:24,559 --> 00:25:27,840
for the first site that they're building

00:25:25,840 --> 00:25:29,360
professionally all the way to some of

00:25:27,840 --> 00:25:30,799
the people who've been in the community

00:25:29,360 --> 00:25:32,720
for a very long time

00:25:30,799 --> 00:25:34,000
and i don't know if anyone if everyone

00:25:32,720 --> 00:25:36,960
else is like me but like

00:25:34,000 --> 00:25:37,919
i i struggle to use tools like gpg even

00:25:36,960 --> 00:25:39,840
on a good day

00:25:37,919 --> 00:25:41,440
so like one of the things that we wanted

00:25:39,840 --> 00:25:44,159
to avoid was like putting

00:25:41,440 --> 00:25:45,360
this burden as a problem on anyone from

00:25:44,159 --> 00:25:48,799
like site maintainers

00:25:45,360 --> 00:25:51,200
to uh to people building modules

00:25:48,799 --> 00:25:52,000
um we also wanted this to work um with a

00:25:51,200 --> 00:25:55,279
broad base

00:25:52,000 --> 00:25:56,159
of older and um more inexpensive hosts

00:25:55,279 --> 00:25:59,440
for the long

00:25:56,159 --> 00:26:02,400
long tail uh in a lot of cases these are

00:25:59,440 --> 00:26:03,919
in pretty precarious configurations um

00:26:02,400 --> 00:26:06,559
they might be running even

00:26:03,919 --> 00:26:08,480
some version of php 5x like something

00:26:06,559 --> 00:26:10,720
like php 5.6

00:26:08,480 --> 00:26:12,080
um we might be dealing with something

00:26:10,720 --> 00:26:15,679
like um

00:26:12,080 --> 00:26:16,720
uh ssl um certificate chains that aren't

00:26:15,679 --> 00:26:20,080
up to date

00:26:16,720 --> 00:26:21,440
old versions of openssl um and yet those

00:26:20,080 --> 00:26:22,480
are the users that are sometimes the

00:26:21,440 --> 00:26:24,799
ones that most need

00:26:22,480 --> 00:26:26,159
technology like this because if all you

00:26:24,799 --> 00:26:29,760
have is that

00:26:26,159 --> 00:26:31,840
sort of shared host or a box deployed

00:26:29,760 --> 00:26:33,440
that doesn't get deeply maintained and

00:26:31,840 --> 00:26:34,960
you don't have the resources for that

00:26:33,440 --> 00:26:38,000
you probably don't have the resources to

00:26:34,960 --> 00:26:40,880
have people on a 24 7 on

00:26:38,000 --> 00:26:42,240
call to do midnight and 3 a.m shifts for

00:26:40,880 --> 00:26:44,000
updates either

00:26:42,240 --> 00:26:45,360
so we wanted to have a really broad

00:26:44,000 --> 00:26:48,640
access um

00:26:45,360 --> 00:26:51,440
for um for people on the long tail here

00:26:48,640 --> 00:26:52,880
we um but these also go hand in h these

00:26:51,440 --> 00:26:54,880
also conflict in some ways

00:26:52,880 --> 00:26:56,080
with some of our other goals like one of

00:26:54,880 --> 00:26:56,480
the ways that you can make some of this

00:26:56,080 --> 00:26:58,320
stuff

00:26:56,480 --> 00:27:00,880
really simple is by deploying all of

00:26:58,320 --> 00:27:02,720
your secrets and all of your core

00:27:00,880 --> 00:27:04,000
kind of sort of crown jewels of the

00:27:02,720 --> 00:27:05,760
trust infrastructure

00:27:04,000 --> 00:27:07,840
to the actual build and production

00:27:05,760 --> 00:27:10,880
systems to say drupal.org

00:27:07,840 --> 00:27:12,240
um and what that does is um

00:27:10,880 --> 00:27:14,640
some of these systems that solve the

00:27:12,240 --> 00:27:15,200
first two problems create a huge risk

00:27:14,640 --> 00:27:17,520
where

00:27:15,200 --> 00:27:18,559
if the actual development and production

00:27:17,520 --> 00:27:20,480
infrastructure

00:27:18,559 --> 00:27:22,559
gets compromised then it's sort of game

00:27:20,480 --> 00:27:23,840
over and there's not really a path to

00:27:22,559 --> 00:27:26,000
recovery because

00:27:23,840 --> 00:27:27,120
if you're if you leak the crown jewels

00:27:26,000 --> 00:27:29,039
of your inc

00:27:27,120 --> 00:27:30,399
of your trust infrastructure then you

00:27:29,039 --> 00:27:31,600
don't really have a path other than

00:27:30,399 --> 00:27:34,000
maybe emailing

00:27:31,600 --> 00:27:35,200
everyone and hoping that they update in

00:27:34,000 --> 00:27:37,679
order to get them

00:27:35,200 --> 00:27:38,320
back to a trustworthy state at the same

00:27:37,679 --> 00:27:41,120
time

00:27:38,320 --> 00:27:43,520
we didn't want to achieve compatibility

00:27:41,120 --> 00:27:46,559
uh through compromising the modernity of

00:27:43,520 --> 00:27:47,840
of our own uh crypto cryptography design

00:27:46,559 --> 00:27:49,440
in the sense that we wanted to use

00:27:47,840 --> 00:27:50,720
modern designs that are not likely to

00:27:49,440 --> 00:27:52,640
show vulnerabilities

00:27:50,720 --> 00:27:54,480
in the near term and show good

00:27:52,640 --> 00:27:57,120
performance and good support

00:27:54,480 --> 00:27:59,120
in modern versions of php like the 7x

00:27:57,120 --> 00:28:02,399
and upcoming 8x series

00:27:59,120 --> 00:28:05,760
um hop to the next slide please

00:28:02,399 --> 00:28:06,080
um so um what we've done is we've taken

00:28:05,760 --> 00:28:09,279
on

00:28:06,080 --> 00:28:11,679
a ton of of the burden on the actual

00:28:09,279 --> 00:28:15,840
infrastructure and drupal.org side

00:28:11,679 --> 00:28:16,559
what this means is that we've instead of

00:28:15,840 --> 00:28:19,279
tasking

00:28:16,559 --> 00:28:20,640
individual developers with managing keys

00:28:19,279 --> 00:28:23,679
we've developed

00:28:20,640 --> 00:28:26,480
we've developed a a great

00:28:23,679 --> 00:28:27,360
uh setup around having an offline root

00:28:26,480 --> 00:28:29,919
of trust

00:28:27,360 --> 00:28:31,120
backed with hardware tokens we actually

00:28:29,919 --> 00:28:34,000
have quite a few people

00:28:31,120 --> 00:28:35,120
involved in this we have um neil drumm

00:28:34,000 --> 00:28:38,159
ryan aslett

00:28:35,120 --> 00:28:40,240
michael hess and ryan newton as some of

00:28:38,159 --> 00:28:40,960
our key holders on this offline route of

00:28:40,240 --> 00:28:42,720
trust

00:28:40,960 --> 00:28:45,360
and they are participating in this

00:28:42,720 --> 00:28:48,799
infrastructure to continually renew

00:28:45,360 --> 00:28:50,720
and sort of in some ways bless the

00:28:48,799 --> 00:28:52,720
um the production drupal.org

00:28:50,720 --> 00:28:54,320
infrastructure periodically

00:28:52,720 --> 00:28:56,559
to ensure that that it's still

00:28:54,320 --> 00:28:59,360
trustworthy and what that means is that

00:28:56,559 --> 00:29:00,240
if all of our core infrastructure hosted

00:28:59,360 --> 00:29:02,960
on the web

00:29:00,240 --> 00:29:05,440
gets compromised we still have um

00:29:02,960 --> 00:29:07,360
trustworthy individuals who are able to

00:29:05,440 --> 00:29:08,720
recover that trust without everyone

00:29:07,360 --> 00:29:11,120
having to download new versions of

00:29:08,720 --> 00:29:13,760
drupal and new keys

00:29:11,120 --> 00:29:14,320
and what that means is that um is that

00:29:13,760 --> 00:29:15,520
we

00:29:14,320 --> 00:29:17,360
have a building and signing

00:29:15,520 --> 00:29:18,640
infrastructure that's hosted where we

00:29:17,360 --> 00:29:21,600
basically take care of

00:29:18,640 --> 00:29:22,559
all of the burdens around this on the

00:29:21,600 --> 00:29:23,919
server side

00:29:22,559 --> 00:29:26,159
um this means for all of the core

00:29:23,919 --> 00:29:27,919
releases of drupal it means that as we

00:29:26,159 --> 00:29:29,440
want to extend this functionality out to

00:29:27,919 --> 00:29:31,279
anything in contrib

00:29:29,440 --> 00:29:33,039
that we can actually extend that signing

00:29:31,279 --> 00:29:36,080
and trust infrastructure to that

00:29:33,039 --> 00:29:37,520
with no impact at all on the way

00:29:36,080 --> 00:29:39,679
on the usability and developer

00:29:37,520 --> 00:29:43,120
experience of people who are building

00:29:39,679 --> 00:29:44,720
extensions and other modules and themes

00:29:43,120 --> 00:29:46,399
for drupal

00:29:44,720 --> 00:29:48,080
this also means that we can actually

00:29:46,399 --> 00:29:50,640
distribute it out and have

00:29:48,080 --> 00:29:52,559
infrastructure where we can cache the

00:29:50,640 --> 00:29:54,640
actual availability of updates

00:29:52,559 --> 00:29:56,000
in a cdn and trust the assets as

00:29:54,640 --> 00:29:58,799
distributed there so

00:29:56,000 --> 00:30:00,399
we don't trust we don't have to trust um

00:29:58,799 --> 00:30:01,039
50 different deployments around the

00:30:00,399 --> 00:30:03,679
world

00:30:01,039 --> 00:30:04,720
either in terms of the fidelity of the

00:30:03,679 --> 00:30:06,080
actual data

00:30:04,720 --> 00:30:08,320
and what this means is that the data

00:30:06,080 --> 00:30:11,039
reaches your own websites in a way that

00:30:08,320 --> 00:30:11,919
has good integrity good compatibility

00:30:11,039 --> 00:30:14,559
across

00:30:11,919 --> 00:30:15,760
a fair a wide variety of php versions

00:30:14,559 --> 00:30:18,640
and hosts

00:30:15,760 --> 00:30:19,520
that have a pretty traditional approach

00:30:18,640 --> 00:30:22,960
to

00:30:19,520 --> 00:30:25,520
to managing code for sites um and

00:30:22,960 --> 00:30:27,279
this means that we've basically just

00:30:25,520 --> 00:30:28,480
shouldered a lot of this in a way that i

00:30:27,279 --> 00:30:29,200
think is healthy for the drupal

00:30:28,480 --> 00:30:32,080
community

00:30:29,200 --> 00:30:33,360
so that we don't create any regressions

00:30:32,080 --> 00:30:35,360
while we're trying to push things

00:30:33,360 --> 00:30:37,840
forward here

00:30:35,360 --> 00:30:37,840
next slide please

00:30:38,960 --> 00:30:42,159
at the same time drupal's not the only

00:30:40,559 --> 00:30:43,919
project that struggles with this

00:30:42,159 --> 00:30:47,279
um we have other projects in our

00:30:43,919 --> 00:30:50,480
community um like joomla and type o3

00:30:47,279 --> 00:30:52,320
that also have this sort of mix of

00:30:50,480 --> 00:30:53,520
building frameworks that people build on

00:30:52,320 --> 00:30:55,760
as well as

00:30:53,520 --> 00:30:58,320
products that people install as end

00:30:55,760 --> 00:31:00,640
users to a wide variety of hosts

00:30:58,320 --> 00:31:01,919
and face and they also face challenges

00:31:00,640 --> 00:31:05,120
around people

00:31:01,919 --> 00:31:07,039
updating their stuff in time supporting

00:31:05,120 --> 00:31:08,799
a global community around this

00:31:07,039 --> 00:31:10,880
and so one of the things that we've been

00:31:08,799 --> 00:31:11,519
increasingly focused on in the past year

00:31:10,880 --> 00:31:13,760
since uh

00:31:11,519 --> 00:31:14,880
especially since shipping some of our

00:31:13,760 --> 00:31:17,440
initial support

00:31:14,880 --> 00:31:19,919
and initial milestones that we we agreed

00:31:17,440 --> 00:31:22,480
on to to do as part of our work with

00:31:19,919 --> 00:31:23,440
um the european commission is that we

00:31:22,480 --> 00:31:26,720
want to be

00:31:23,440 --> 00:31:27,919
participating in the php world in a way

00:31:26,720 --> 00:31:28,880
where we're not just solving this for

00:31:27,919 --> 00:31:31,279
drupal

00:31:28,880 --> 00:31:32,640
um what that means is that we want to

00:31:31,279 --> 00:31:33,760
look at designs that are not just

00:31:32,640 --> 00:31:36,000
drupals

00:31:33,760 --> 00:31:37,679
we want to look at integrating with the

00:31:36,000 --> 00:31:39,519
tools that everyone is actually moving

00:31:37,679 --> 00:31:40,640
toward which means things like composer

00:31:39,519 --> 00:31:42,640
00:31:40,640 --> 00:31:44,559
and we want to do that in a way where we

00:31:42,640 --> 00:31:45,919
uplift all of each other

00:31:44,559 --> 00:31:48,480
through this community and create

00:31:45,919 --> 00:31:48,880
solutions that all of these projects can

00:31:48,480 --> 00:31:52,480
use

00:31:48,880 --> 00:31:55,039
next slide please um uh

00:31:52,480 --> 00:31:56,880
so for people anyone running into slide

00:31:55,039 --> 00:31:58,559
change issues um please reload the

00:31:56,880 --> 00:32:00,159
presentation because they are changing

00:31:58,559 --> 00:32:01,679
in the actual hosted thing i just see

00:32:00,159 --> 00:32:05,519
some comments on that

00:32:01,679 --> 00:32:08,000
um the um so what we've

00:32:05,519 --> 00:32:08,799
landed on as a pretty good consensus on

00:32:08,000 --> 00:32:10,640
this is

00:32:08,799 --> 00:32:12,399
um a framework that called the update

00:32:10,640 --> 00:32:16,159
framework i noticed that

00:32:12,399 --> 00:32:19,519
benji linked it in the chat and

00:32:16,159 --> 00:32:20,080
what we um what this design does is it

00:32:19,519 --> 00:32:22,559
takes

00:32:20,080 --> 00:32:23,679
almost all the goals that we've outlaid

00:32:22,559 --> 00:32:26,720
before

00:32:23,679 --> 00:32:27,120
um in terms of compatibility modernity

00:32:26,720 --> 00:32:29,440
in the

00:32:27,120 --> 00:32:31,039
encryption an offline route of trust

00:32:29,440 --> 00:32:32,559
being able to ship that route of trust

00:32:31,039 --> 00:32:35,440
with the actual project

00:32:32,559 --> 00:32:35,840
uh and being able to um not have to

00:32:35,440 --> 00:32:37,679
trust

00:32:35,840 --> 00:32:38,960
every step of the way that the software

00:32:37,679 --> 00:32:42,080
is shipping through like

00:32:38,960 --> 00:32:45,679
content delivery networks um

00:32:42,080 --> 00:32:47,919
and formalizes it in a deeply review

00:32:45,679 --> 00:32:49,440
community reviewed and and widely

00:32:47,919 --> 00:32:52,080
implemented design

00:32:49,440 --> 00:32:53,120
now a php implementation of this doesn't

00:32:52,080 --> 00:32:54,720
quite exist yet

00:32:53,120 --> 00:32:56,159
and that's one of the the thresholds

00:32:54,720 --> 00:32:58,159
that we want to overcome

00:32:56,159 --> 00:32:59,600
but we're working now with the joomla

00:32:58,159 --> 00:33:02,240
and typo3 projects

00:32:59,600 --> 00:33:04,320
to produce a php implementation and

00:33:02,240 --> 00:33:05,120
recipes for deploying the server-side

00:33:04,320 --> 00:33:08,640
infrastructure

00:33:05,120 --> 00:33:10,240
to support this work next slide please

00:33:08,640 --> 00:33:12,480
um i don't want to go into the details

00:33:10,240 --> 00:33:14,399
of this because the details of this is

00:33:12,480 --> 00:33:15,760
actually how python's deployed

00:33:14,399 --> 00:33:18,559
their infrastructure for supporting

00:33:15,760 --> 00:33:19,679
maintainers of their own work in python

00:33:18,559 --> 00:33:21,600
with this framework

00:33:19,679 --> 00:33:22,880
but it sort of illustrates how much

00:33:21,600 --> 00:33:25,519
complexity there is

00:33:22,880 --> 00:33:28,159
on the server and infrastructure side to

00:33:25,519 --> 00:33:30,240
to designing an infrastructure that has

00:33:28,159 --> 00:33:33,360
security ease of use and a good

00:33:30,240 --> 00:33:33,360
developer experience

00:33:34,000 --> 00:33:37,840
while while actually producing something

00:33:36,559 --> 00:33:41,840
that's easy to use for also

00:33:37,840 --> 00:33:43,120
end users that's largely accomplished by

00:33:41,840 --> 00:33:45,120
not making things easy on the

00:33:43,120 --> 00:33:46,880
infrastructure side unfortunately

00:33:45,120 --> 00:33:49,279
but in many cases it's a worthwhile

00:33:46,880 --> 00:33:49,279
trade-off

00:33:51,519 --> 00:33:55,840
all right back to me just for a quick

00:33:54,720 --> 00:33:58,080
second

00:33:55,840 --> 00:33:58,960
i wanted to also talk about the

00:33:58,080 --> 00:34:01,279
limitations

00:33:58,960 --> 00:34:02,159
that currently exist on this module

00:34:01,279 --> 00:34:03,679
there's quite a few

00:34:02,159 --> 00:34:05,200
but these are the two biggest ones that

00:34:03,679 --> 00:34:06,159
i definitely want to make sure folks

00:34:05,200 --> 00:34:08,240
have in mind

00:34:06,159 --> 00:34:09,359
when they're working with the automatic

00:34:08,240 --> 00:34:11,679
updates module

00:34:09,359 --> 00:34:13,040
the first one is that database updates

00:34:11,679 --> 00:34:14,960
are not automatic yet

00:34:13,040 --> 00:34:16,800
so that means updates that include

00:34:14,960 --> 00:34:17,919
schema changes wouldn't be applied to

00:34:16,800 --> 00:34:20,720
your site

00:34:17,919 --> 00:34:22,800
this is a pretty big limitation however

00:34:20,720 --> 00:34:25,599
for security updates it's actually not

00:34:22,800 --> 00:34:27,679
necessarily so bad because historically

00:34:25,599 --> 00:34:29,919
updates that are for critical security

00:34:27,679 --> 00:34:31,119
patches have not required database

00:34:29,919 --> 00:34:33,599
schema updates

00:34:31,119 --> 00:34:35,200
and so if we jump back into one of my

00:34:33,599 --> 00:34:37,280
demo sites

00:34:35,200 --> 00:34:38,960
something that i have not shown you yet

00:34:37,280 --> 00:34:40,639
is that

00:34:38,960 --> 00:34:42,320
maybe if you were paying lots of

00:34:40,639 --> 00:34:42,960
attention you noticed it but if you

00:34:42,320 --> 00:34:45,919
click this

00:34:42,960 --> 00:34:47,839
enable automatic updates box you do

00:34:45,919 --> 00:34:50,000
actually have a second checkbox there

00:34:47,839 --> 00:34:53,119
that we've added for this

00:34:50,000 --> 00:34:56,240
so that we can do security only updates

00:34:53,119 --> 00:34:57,920
this causes it to do

00:34:56,240 --> 00:34:59,680
automatic updates of those security only

00:34:57,920 --> 00:35:02,560
releases which would be the way that you

00:34:59,680 --> 00:35:05,839
would be able to use this module

00:35:02,560 --> 00:35:07,280
today the other big limitation is that

00:35:05,839 --> 00:35:08,720
it won't play well with sites that are

00:35:07,280 --> 00:35:10,400
managed using composer

00:35:08,720 --> 00:35:12,000
the reason is that of course composer

00:35:10,400 --> 00:35:13,920
could put in a slightly different

00:35:12,000 --> 00:35:16,320
version of one of the

00:35:13,920 --> 00:35:17,839
drupal core dependencies on you and our

00:35:16,320 --> 00:35:20,240
quasi patch process

00:35:17,839 --> 00:35:21,359
would find all sorts of problems with uh

00:35:20,240 --> 00:35:24,079
with that approach

00:35:21,359 --> 00:35:25,599
so one of the um these are sort of top

00:35:24,079 --> 00:35:28,320
priorities that we have

00:35:25,599 --> 00:35:29,119
for phase two both of these things that

00:35:28,320 --> 00:35:33,280
should make it

00:35:29,119 --> 00:35:33,280
uh applicable to two more folks

00:35:35,520 --> 00:35:39,760
yeah so that's pretty much the um

00:35:38,160 --> 00:35:41,680
organized talking points i do want to

00:35:39,760 --> 00:35:44,079
have some time for questions and such

00:35:41,680 --> 00:35:45,040
um but i thought i'd throw this slide up

00:35:44,079 --> 00:35:46,800
first just

00:35:45,040 --> 00:35:48,079
so that um folks have a little time to

00:35:46,800 --> 00:35:49,920
pick up the

00:35:48,079 --> 00:35:52,079
uh the link in the chat before

00:35:49,920 --> 00:35:54,160
everything disappears on us

00:35:52,079 --> 00:35:55,440
uh here's the link in the chat oh okay

00:35:54,160 --> 00:35:57,680
we both got it sweet

00:35:55,440 --> 00:35:58,480
um please let us know how we did

00:35:57,680 --> 00:36:00,640
otherwise

00:35:58,480 --> 00:36:01,920
um another cool thing about automatic

00:36:00,640 --> 00:36:04,160
updates if you ask me

00:36:01,920 --> 00:36:05,359
is that it is one of the top priorities

00:36:04,160 --> 00:36:09,280
for drupal 10

00:36:05,359 --> 00:36:11,440
and that means that some of the um

00:36:09,280 --> 00:36:12,960
biggest core contributors to drupal are

00:36:11,440 --> 00:36:15,599
starting to focus in on it

00:36:12,960 --> 00:36:17,119
so if that's something that seems like a

00:36:15,599 --> 00:36:18,880
cool opportunity for you to get involved

00:36:17,119 --> 00:36:20,960
with if that excites you to maybe get

00:36:18,880 --> 00:36:22,560
some mentoring from those folks etc

00:36:20,960 --> 00:36:25,040
you have opportunities to do that by

00:36:22,560 --> 00:36:27,520
working on automatic updates

00:36:25,040 --> 00:36:28,240
for example this friday uh look for the

00:36:27,520 --> 00:36:29,920
automatic

00:36:28,240 --> 00:36:31,760
it's called auto updates initiative

00:36:29,920 --> 00:36:33,680
that's the group name on the

00:36:31,760 --> 00:36:35,280
uh open social site that we have going

00:36:33,680 --> 00:36:36,720
for all of the contributions at the

00:36:35,280 --> 00:36:38,880
conference this year

00:36:36,720 --> 00:36:41,280
and then also monthly we have the

00:36:38,880 --> 00:36:42,320
hashtag auto updates channel on drupal

00:36:41,280 --> 00:36:44,720
slack

00:36:42,320 --> 00:36:45,760
um that's sort of just an organized

00:36:44,720 --> 00:36:48,560
check-in

00:36:45,760 --> 00:36:49,520
that folks that are are interested or

00:36:48,560 --> 00:36:52,400
contributing

00:36:49,520 --> 00:36:54,079
participate in at 1900 utc it's like two

00:36:52,400 --> 00:36:58,640
o'clock central

00:36:54,079 --> 00:37:01,280
uh so drop by um

00:36:58,640 --> 00:37:02,720
uh the um so we have a bunch of

00:37:01,280 --> 00:37:05,839
questions about

00:37:02,720 --> 00:37:06,240
the um phase two of the project and i

00:37:05,839 --> 00:37:09,920
know

00:37:06,240 --> 00:37:10,480
um and jess has generously offered to

00:37:09,920 --> 00:37:13,680
join in

00:37:10,480 --> 00:37:18,720
so i'm just adding her now

00:37:13,680 --> 00:37:18,720
hey everyone can you hear me yep yay

00:37:21,280 --> 00:37:25,440
so um i guess to kick it off i think one

00:37:23,520 --> 00:37:37,839
of the primary questions about phase two

00:37:25,440 --> 00:37:37,839
is around composer support

00:37:38,800 --> 00:37:41,599
if you would be so kindness and answer

00:37:40,720 --> 00:37:43,119
that just since i know that you're

00:37:41,599 --> 00:37:46,400
deeply involved in that

00:37:43,119 --> 00:37:50,000
yeah so for in terms of

00:37:46,400 --> 00:37:51,599
so the european commission um

00:37:50,000 --> 00:37:53,680
worked with us to define the scope that

00:37:51,599 --> 00:37:57,119
was required for them to fund it

00:37:53,680 --> 00:37:58,320
uh right now as some of you may know 66

00:37:57,119 --> 00:38:00,320
percent of all drupal sites are on

00:37:58,320 --> 00:38:01,359
drupal 7 and drupal 7 only supports

00:38:00,320 --> 00:38:04,240
tarballs

00:38:01,359 --> 00:38:05,200
um so the initial prototype of the

00:38:04,240 --> 00:38:07,599
module

00:38:05,200 --> 00:38:08,880
um was trying to cover that long tail

00:38:07,599 --> 00:38:10,480
and that need

00:38:08,880 --> 00:38:12,960
and it was that was what the european

00:38:10,480 --> 00:38:15,359
commission also needed the most

00:38:12,960 --> 00:38:17,119
to include the automatic updates

00:38:15,359 --> 00:38:20,320
functionality in drupal core

00:38:17,119 --> 00:38:21,359
is a requirement to add full composer

00:38:20,320 --> 00:38:25,280
support

00:38:21,359 --> 00:38:26,240
and the idea is also to um

00:38:25,280 --> 00:38:28,160
it would have been nice that we should

00:38:26,240 --> 00:38:28,640
have slide about phase two there's uh

00:38:28,160 --> 00:38:31,359
both

00:38:28,640 --> 00:38:32,240
full composer support and for like

00:38:31,359 --> 00:38:35,599
robustness

00:38:32,240 --> 00:38:38,960
and um sort of

00:38:35,599 --> 00:38:41,680
the in uh we want to

00:38:38,960 --> 00:38:43,040
add a custom bootloader that will did

00:38:41,680 --> 00:38:44,960
you you didn't talk about the bootloader

00:38:43,040 --> 00:38:47,760
at all did you was there any slide

00:38:44,960 --> 00:38:48,320
i'm not prepared no phase two is uh

00:38:47,760 --> 00:38:50,320
pretty

00:38:48,320 --> 00:38:51,680
pretty uh minimal discussions on that

00:38:50,320 --> 00:38:52,720
yeah we have lots of plans for facebook

00:38:51,680 --> 00:38:54,160
i'll talk about

00:38:52,720 --> 00:38:56,960
a little bit more about composer support

00:38:54,160 --> 00:38:59,200
so the the idea is that

00:38:56,960 --> 00:39:00,079
um quadruple seven you know 100 percent

00:38:59,200 --> 00:39:03,200
of sites

00:39:00,079 --> 00:39:05,359
use tarball installation uh for drupal 8

00:39:03,200 --> 00:39:06,560
right now slightly more than 50 percent

00:39:05,359 --> 00:39:08,320
of sites use

00:39:06,560 --> 00:39:10,240
composer-based deployment that's been

00:39:08,320 --> 00:39:12,400
going up gradually over the course of

00:39:10,240 --> 00:39:14,480
the drupal 8 release cycle

00:39:12,400 --> 00:39:15,599
it was at exactly 50 about two years ago

00:39:14,480 --> 00:39:16,720
and it's higher now i don't know the

00:39:15,599 --> 00:39:19,119
exact number

00:39:16,720 --> 00:39:20,720
um so looking forward to the future of

00:39:19,119 --> 00:39:22,800
dribble we've the rip the future really

00:39:20,720 --> 00:39:24,240
is sites that are built using composer

00:39:22,800 --> 00:39:26,079
and not using tarballs

00:39:24,240 --> 00:39:27,680
we may eventually get to a point

00:39:26,079 --> 00:39:29,680
potentially where tarball downloads

00:39:27,680 --> 00:39:31,280
aren't supported at all in drupal 10 or

00:39:29,680 --> 00:39:33,359
11 or something

00:39:31,280 --> 00:39:35,040
but obviously for the full lifetime of

00:39:33,359 --> 00:39:36,880
drupal 7 8 and 9

00:39:35,040 --> 00:39:38,320
we need to have both tarballs and

00:39:36,880 --> 00:39:41,359
composers support it

00:39:38,320 --> 00:39:43,599
it might be that core includes

00:39:41,359 --> 00:39:45,200
both like depending on when the

00:39:43,599 --> 00:39:46,720
initiative gets to a stable point it

00:39:45,200 --> 00:39:48,000
might be that core includes both the

00:39:46,720 --> 00:39:49,920
support for tarballs

00:39:48,000 --> 00:39:51,280
and composer or depending on whether

00:39:49,920 --> 00:39:52,400
we're still using tarballs at all by the

00:39:51,280 --> 00:39:55,040
time it's stable

00:39:52,400 --> 00:39:56,560
um it could be composer only so that's a

00:39:55,040 --> 00:39:59,119
big requirement for us

00:39:56,560 --> 00:39:59,839
because in order we don't want people to

00:39:59,119 --> 00:40:02,400
have

00:39:59,839 --> 00:40:03,760
an incentive to stay on drupal 7 we want

00:40:02,400 --> 00:40:05,520
the incentive to be

00:40:03,760 --> 00:40:07,359
to move to the latest version of drupal

00:40:05,520 --> 00:40:08,960
that has the most new features that has

00:40:07,359 --> 00:40:09,520
the most stable functionality and so

00:40:08,960 --> 00:40:11,440
forth

00:40:09,520 --> 00:40:12,640
um so it would be really it would be

00:40:11,440 --> 00:40:14,960
counterproductive

00:40:12,640 --> 00:40:15,760
to give make give people automatic

00:40:14,960 --> 00:40:18,319
updates only

00:40:15,760 --> 00:40:20,319
for the least maintained least secure

00:40:18,319 --> 00:40:23,839
long-term support version of drupal

00:40:20,319 --> 00:40:24,800
um and then all the things that we've

00:40:23,839 --> 00:40:27,119
already discussed

00:40:24,800 --> 00:40:28,000
um are part of also part of the spectre

00:40:27,119 --> 00:40:30,240
core the

00:40:28,000 --> 00:40:31,359
the signing parts the readiness checks

00:40:30,240 --> 00:40:32,880
are probably the first thing we'll be

00:40:31,359 --> 00:40:34,640
able to get into core

00:40:32,880 --> 00:40:36,400
and then yeah david can you talk more

00:40:34,640 --> 00:40:38,560
about the bootloader

00:40:36,400 --> 00:40:39,760
yes sure so the idea of the bootloader

00:40:38,560 --> 00:40:42,400
is inspired by

00:40:39,760 --> 00:40:43,119
um the designs around everything from um

00:40:42,400 --> 00:40:46,400
cisco

00:40:43,119 --> 00:40:48,560
of network appliances to chrome os

00:40:46,400 --> 00:40:49,760
and core os and google's container

00:40:48,560 --> 00:40:52,560
optimized os

00:40:49,760 --> 00:40:53,839
about the idea of if we're going to do

00:40:52,560 --> 00:40:56,000
something risky then let's

00:40:53,839 --> 00:40:56,880
do let's uh have our working copy for

00:40:56,000 --> 00:40:59,520
that risky

00:40:56,880 --> 00:41:00,560
work happen outside of the current run

00:40:59,520 --> 00:41:01,760
time because

00:41:00,560 --> 00:41:05,359
as soon as you're running something like

00:41:01,760 --> 00:41:07,599
composer you're starting to take risk

00:41:05,359 --> 00:41:08,880
what happens if a certain dependency is

00:41:07,599 --> 00:41:10,960
not available to download or

00:41:08,880 --> 00:41:12,640
breaks uh what happens if you run out of

00:41:10,960 --> 00:41:15,359
memory while running the build

00:41:12,640 --> 00:41:16,960
what happens if all if you have uh

00:41:15,359 --> 00:41:18,640
partially applied the update

00:41:16,960 --> 00:41:20,720
but um dependencies of the update

00:41:18,640 --> 00:41:22,560
require everything to be applied before

00:41:20,720 --> 00:41:25,599
the site will be functional again

00:41:22,560 --> 00:41:27,920
we sort of need a way to have

00:41:25,599 --> 00:41:29,440
some of this complex risky work happen

00:41:27,920 --> 00:41:32,880
especially on

00:41:29,440 --> 00:41:35,680
shared hosts where there are a lot of

00:41:32,880 --> 00:41:37,359
time timeout and memory limitations we

00:41:35,680 --> 00:41:38,400
need a scratch space basically to

00:41:37,359 --> 00:41:41,119
perform this work

00:41:38,400 --> 00:41:41,760
and the idea of the bootloader is if we

00:41:41,119 --> 00:41:43,359
have the

00:41:41,760 --> 00:41:45,520
if we have a scratch space where we

00:41:43,359 --> 00:41:47,200
basically are able to perform the

00:41:45,520 --> 00:41:48,640
alterations and the mutations of the

00:41:47,200 --> 00:41:50,400
code base and updates

00:41:48,640 --> 00:41:52,560
in a place that is not the current

00:41:50,400 --> 00:41:53,359
running site then we can take all the

00:41:52,560 --> 00:41:55,760
time we want

00:41:53,359 --> 00:41:56,720
within reason to perform the update get

00:41:55,760 --> 00:41:58,560
everything in order

00:41:56,720 --> 00:42:00,560
and even do some smoke tests on it

00:41:58,560 --> 00:42:02,400
possibly before actually switching

00:42:00,560 --> 00:42:04,880
control over to it

00:42:02,400 --> 00:42:06,480
a bootloader would be able to basically

00:42:04,880 --> 00:42:08,720
handle the initial request

00:42:06,480 --> 00:42:10,240
and then make a decision which copy of

00:42:08,720 --> 00:42:12,640
drupal is it running on

00:42:10,240 --> 00:42:13,599
in the same sense that we have some

00:42:12,640 --> 00:42:15,359
distinction between

00:42:13,599 --> 00:42:17,119
sites when you use multi-site on drupal

00:42:15,359 --> 00:42:19,839
where you could have one module for one

00:42:17,119 --> 00:42:21,920
site and one module for a different one

00:42:19,839 --> 00:42:23,440
under those module folder under each of

00:42:21,920 --> 00:42:24,720
the site's folders if you don't put them

00:42:23,440 --> 00:42:26,480
under sites all

00:42:24,720 --> 00:42:28,319
you could you can almost think about

00:42:26,480 --> 00:42:30,960
doing this at a site level that includes

00:42:28,319 --> 00:42:32,800
drupal core

00:42:30,960 --> 00:42:34,640
and this sort of leads really nicely

00:42:32,800 --> 00:42:36,640
into the most recent question in chat

00:42:34,640 --> 00:42:37,280
which is has there been any work for

00:42:36,640 --> 00:42:40,800
users

00:42:37,280 --> 00:42:42,319
of k8s docker ci-based workflows etc

00:42:40,800 --> 00:42:44,480
and there was also an earlier question

00:42:42,319 --> 00:42:45,680
about pantheon and then the person adds

00:42:44,480 --> 00:42:47,119
seems like it would be safe to trigger

00:42:45,680 --> 00:42:49,119
the build of a new code base on a

00:42:47,119 --> 00:42:51,359
different server and that would be safer

00:42:49,119 --> 00:42:52,240
um i think one of the goals or one of

00:42:51,359 --> 00:42:56,560
the the

00:42:52,240 --> 00:42:57,599
potential values from the bootloader is

00:42:56,560 --> 00:42:59,680
that we can

00:42:57,599 --> 00:43:00,880
hopefully we'll design it in a way that

00:42:59,680 --> 00:43:02,720
if you

00:43:00,880 --> 00:43:04,560
automatic updates in place is not

00:43:02,720 --> 00:43:06,480
something for your workflow

00:43:04,560 --> 00:43:07,920
um like i'm a more think of a more like

00:43:06,480 --> 00:43:09,520
enterprise level site where there's

00:43:07,920 --> 00:43:11,680
there has to be

00:43:09,520 --> 00:43:13,119
qa before the deployments you would be

00:43:11,680 --> 00:43:15,440
able to wire

00:43:13,119 --> 00:43:16,720
um drupal core's automatic updater up to

00:43:15,440 --> 00:43:18,160
your build workflow

00:43:16,720 --> 00:43:20,079
with separate environments and so forth

00:43:18,160 --> 00:43:22,319
i think that that's one of the design

00:43:20,079 --> 00:43:25,680
goals that we'll have when we start

00:43:22,319 --> 00:43:28,560
um building that for core um

00:43:25,680 --> 00:43:29,280
let's see and let's see if there's a oh

00:43:28,560 --> 00:43:31,599
uh

00:43:29,280 --> 00:43:32,720
it i don't are there other questions it

00:43:31,599 --> 00:43:33,440
looks like a lot of the questions in

00:43:32,720 --> 00:43:35,839
chat have been

00:43:33,440 --> 00:43:37,520
answered already um i guess i think i'd

00:43:35,839 --> 00:43:40,800
add a little bit about

00:43:37,520 --> 00:43:43,680
the uh sort of the

00:43:40,800 --> 00:43:45,760
we want to make this progressively um

00:43:43,680 --> 00:43:48,800
available in more and more cases

00:43:45,760 --> 00:43:49,839
so the initial scope for what automatic

00:43:48,800 --> 00:43:52,880
updates that will supply

00:43:49,839 --> 00:43:56,400
in core will be limited to

00:43:52,880 --> 00:43:56,960
automatic updates for patch releases in

00:43:56,400 --> 00:43:59,040
general

00:43:56,960 --> 00:44:00,960
possibly specifically only security

00:43:59,040 --> 00:44:04,480
releases of a certain level

00:44:00,960 --> 00:44:06,079
core only um and you know

00:44:04,480 --> 00:44:07,200
all the things we are discussed about

00:44:06,079 --> 00:44:08,079
the readiness checks you know no

00:44:07,200 --> 00:44:10,800
database update

00:44:08,079 --> 00:44:12,720
involved et cetera et cetera it's over

00:44:10,800 --> 00:44:14,400
the time as we complete that initial

00:44:12,720 --> 00:44:15,839
scope for core we'll we'll

00:44:14,400 --> 00:44:17,760
potentially expand it to include

00:44:15,839 --> 00:44:19,359
automatic updates for

00:44:17,760 --> 00:44:22,079
other kinds of releases automatic

00:44:19,359 --> 00:44:23,200
updates for contributed projects etc but

00:44:22,079 --> 00:44:24,880
that's like sort of a

00:44:23,200 --> 00:44:26,800
i would call that the phase three of the

00:44:24,880 --> 00:44:28,400
project um so when there was a question

00:44:26,800 --> 00:44:30,160
a while ago about contrib

00:44:28,400 --> 00:44:32,000
um that that applies there but our

00:44:30,160 --> 00:44:32,560
initial scope is it's we want to address

00:44:32,000 --> 00:44:34,160
the

00:44:32,560 --> 00:44:36,319
most serious problems which tend to be

00:44:34,160 --> 00:44:37,920
core vulnerabilities um and also because

00:44:36,319 --> 00:44:39,680
we have a lot more control over the core

00:44:37,920 --> 00:44:40,240
code base and so we know where some of

00:44:39,680 --> 00:44:42,079
the

00:44:40,240 --> 00:44:43,520
unknown unknowns and risks are when we

00:44:42,079 --> 00:44:47,040
do core updates

00:44:43,520 --> 00:44:47,040
um let's see

00:44:48,400 --> 00:44:51,839
oh and i have a call excuse me

00:44:52,400 --> 00:44:56,240
um i'm just i'm actually having a little

00:44:54,400 --> 00:44:57,599
trouble keeping track of questions in

00:44:56,240 --> 00:45:00,480
here and

00:44:57,599 --> 00:45:05,839
um it just was being super helpful but

00:45:00,480 --> 00:45:05,839
uh let's see

00:45:16,079 --> 00:45:19,520
yeah i'm not seeing a lot of questions

00:45:17,599 --> 00:45:21,040
that we haven't uh said at least

00:45:19,520 --> 00:45:24,000
something about

00:45:21,040 --> 00:45:25,359
um there was one about uh configuration

00:45:24,000 --> 00:45:28,480
management

00:45:25,359 --> 00:45:29,280
um i don't think that we've really

00:45:28,480 --> 00:45:31,359
looked at that

00:45:29,280 --> 00:45:32,640
as part of this initiative as far as i

00:45:31,359 --> 00:45:33,760
know

00:45:32,640 --> 00:45:35,359
i'd be interested actually in hearing a

00:45:33,760 --> 00:45:38,720
little bit more about what you're

00:45:35,359 --> 00:45:38,720
looking to accomplish with that one

00:45:42,000 --> 00:45:49,200
um okay so

00:45:47,520 --> 00:45:51,119
uh in the meantime i'll answer

00:45:49,200 --> 00:45:52,720
sullivan's question um like

00:45:51,119 --> 00:45:55,040
explaining the offline word of trust the

00:45:52,720 --> 00:45:58,079
offline order trust is the idea that

00:45:55,040 --> 00:45:59,359
there is no um that through

00:45:58,079 --> 00:46:01,599
change signing almost like an

00:45:59,359 --> 00:46:04,079
intermediate certificate

00:46:01,599 --> 00:46:06,000
we don't necessarily have to put the for

00:46:04,079 --> 00:46:07,760
the

00:46:06,000 --> 00:46:09,599
primary anchor of the rooted trust in

00:46:07,760 --> 00:46:11,359
any deployed infrastructure

00:46:09,599 --> 00:46:14,480
and can actually protect it with offline

00:46:11,359 --> 00:46:16,960
hardware and what that means is that

00:46:14,480 --> 00:46:18,480
we can ship drupal in a way that trusts

00:46:16,960 --> 00:46:21,520
the offline

00:46:18,480 --> 00:46:23,280
um private key basically by having

00:46:21,520 --> 00:46:26,160
by distributing the public key with

00:46:23,280 --> 00:46:27,359
drupal and then that offline private key

00:46:26,160 --> 00:46:30,079
can sign

00:46:27,359 --> 00:46:31,200
an intermediate key online that is

00:46:30,079 --> 00:46:34,319
deployed to the

00:46:31,200 --> 00:46:37,040
build infrastructure and that

00:46:34,319 --> 00:46:39,119
is um and because that is signed with

00:46:37,040 --> 00:46:42,000
the offline private key

00:46:39,119 --> 00:46:44,720
any copy of drupal shipping with that is

00:46:42,000 --> 00:46:46,079
able to trust the build infrastructure

00:46:44,720 --> 00:46:48,720
but it basically keeps the build

00:46:46,079 --> 00:46:51,200
infrastructure on a leash of sorts

00:46:48,720 --> 00:46:52,400
um it means that the online build

00:46:51,200 --> 00:46:53,680
infrastructure could be completely

00:46:52,400 --> 00:46:56,000
compromised

00:46:53,680 --> 00:46:58,079
and we would be able to rein it back in

00:46:56,000 --> 00:46:58,400
because drupal doesn't directly trust

00:46:58,079 --> 00:47:00,800
the

00:46:58,400 --> 00:47:01,680
the deployed infrastructure indirectly

00:47:00,800 --> 00:47:04,000
trust the building

00:47:01,680 --> 00:47:06,800
the build infrastructure via that

00:47:04,000 --> 00:47:06,800
offline route

00:47:06,960 --> 00:47:11,200
yeah another key thing there is the the

00:47:09,119 --> 00:47:13,119
intermediate cert expires

00:47:11,200 --> 00:47:14,480
um and something that we're looking to

00:47:13,119 --> 00:47:15,760
iterate on is

00:47:14,480 --> 00:47:17,920
um making it so that we could actually

00:47:15,760 --> 00:47:19,599
revoke the intermediate certificate

00:47:17,920 --> 00:47:21,119
uh if we like as soon as we found out

00:47:19,599 --> 00:47:22,880
there was a problem that's one of the

00:47:21,119 --> 00:47:27,280
things the the actual value adds that

00:47:22,880 --> 00:47:27,280
we're looking to get from that php tough

00:47:28,510 --> 00:47:31,659
[Music]

00:47:36,839 --> 00:47:40,400
work

00:47:38,000 --> 00:47:42,160
yeah i don't know um i assume that

00:47:40,400 --> 00:47:43,680
configuration management has kind of

00:47:42,160 --> 00:47:44,079
just been put in the same question that

00:47:43,680 --> 00:47:47,599
you're

00:47:44,079 --> 00:47:49,040
um answering or sorry so the question

00:47:47,599 --> 00:47:50,640
that mike is starting to answer is some

00:47:49,040 --> 00:47:52,319
core updates and module updates cause

00:47:50,640 --> 00:47:53,920
configuration changes

00:47:52,319 --> 00:47:56,559
doesn't config management have to be a

00:47:53,920 --> 00:47:59,839
piece so um

00:47:56,559 --> 00:48:01,040
uh in the production configuration of a

00:47:59,839 --> 00:48:03,040
drupal site

00:48:01,040 --> 00:48:04,400
uh after it's imported actually lives in

00:48:03,040 --> 00:48:06,000
the database uh

00:48:04,400 --> 00:48:07,920
this ties back into the earlier

00:48:06,000 --> 00:48:11,119
questions about um

00:48:07,920 --> 00:48:12,559
build pipelines and um other you know

00:48:11,119 --> 00:48:15,440
hosting providers

00:48:12,559 --> 00:48:17,760
um if if expect exporting configuration

00:48:15,440 --> 00:48:19,440
management from staging to prod is a

00:48:17,760 --> 00:48:21,599
part of your deployment workflow

00:48:19,440 --> 00:48:23,760
then you that's was the scenario where

00:48:21,599 --> 00:48:26,800
um you would want to

00:48:23,760 --> 00:48:28,160
use the core um bootloader but

00:48:26,800 --> 00:48:30,400
wire that up to your own deployment

00:48:28,160 --> 00:48:32,160
workflow rather than having it um

00:48:30,400 --> 00:48:34,000
the the exportation like you would be

00:48:32,160 --> 00:48:36,559
responsible for the part

00:48:34,000 --> 00:48:39,440
where you did the export of your config

00:48:36,559 --> 00:48:39,440
and the redeployment

00:48:43,520 --> 00:48:48,960
and as as ted points out anything that

00:48:46,880 --> 00:48:49,920
that that is technically change i didn't

00:48:48,960 --> 00:48:51,520
even think of this but that is

00:48:49,920 --> 00:48:52,640
technically changing the content of the

00:48:51,520 --> 00:48:55,200
database

00:48:52,640 --> 00:48:55,839
because um so the configuration that's

00:48:55,200 --> 00:48:58,880
that's

00:48:55,839 --> 00:49:02,240
stored on disk is the default when we

00:48:58,880 --> 00:49:03,680
um whenever we don't we don't ever

00:49:02,240 --> 00:49:06,000
change the configuration

00:49:03,680 --> 00:49:07,839
after it's shipped we will only under

00:49:06,000 --> 00:49:08,960
where circumstances where there's like a

00:49:07,839 --> 00:49:11,200
critical bug

00:49:08,960 --> 00:49:12,000
um update something for you and when so

00:49:11,200 --> 00:49:14,079
for exa

00:49:12,000 --> 00:49:15,119
an example of this um there's bugs and

00:49:14,079 --> 00:49:18,079
views

00:49:15,119 --> 00:49:20,000
that we've had where um the critical

00:49:18,079 --> 00:49:20,800
data loss problems related to a views

00:49:20,000 --> 00:49:24,000
bug

00:49:20,800 --> 00:49:26,960
and that was in that case we was we

00:49:24,000 --> 00:49:29,520
um on the when view the way that that

00:49:26,960 --> 00:49:31,200
works is when views the view is saved

00:49:29,520 --> 00:49:33,280
we update the view but we didn't go

00:49:31,200 --> 00:49:34,559
through and like change people's views

00:49:33,280 --> 00:49:37,839
on them because the

00:49:34,559 --> 00:49:39,040
configuration is owned by the site so

00:49:37,839 --> 00:49:40,800
that would be that would be covered by

00:49:39,040 --> 00:49:45,839
the database update case that's what ted

00:49:40,800 --> 00:49:45,839
is getting at

00:49:48,000 --> 00:49:50,240
cool

00:49:51,440 --> 00:49:54,640
shall we continue to answer questions we

00:49:52,880 --> 00:49:57,040
are we are over but

00:49:54,640 --> 00:49:59,440
seems like we're happy to take questions

00:49:57,040 --> 00:50:02,400
as well

00:49:59,440 --> 00:50:03,119
although the questions have also uh um

00:50:02,400 --> 00:50:06,319
trickled off

00:50:03,119 --> 00:50:06,319
so maybe we should call it

00:50:11,440 --> 00:50:15,440
ted is very well informed because he has

00:50:13,680 --> 00:50:16,559
just in the past week read the code base

00:50:15,440 --> 00:50:19,839
of the entire module

00:50:16,559 --> 00:50:22,640
so because we're we're kicking we're

00:50:19,839 --> 00:50:24,319
getting involved now so we meaning um

00:50:22,640 --> 00:50:27,520
aqua's drupal acceleration team is

00:50:24,319 --> 00:50:27,920
is able to spend some time working on

00:50:27,520 --> 00:50:31,119
this

00:50:27,920 --> 00:50:31,119
starting this month

00:50:32,319 --> 00:50:38,240
all right i think that probably does it

00:50:35,599 --> 00:50:39,599
thank you everybody for joining and i

00:50:38,240 --> 00:50:41,359
hope we answered your questions i hope

00:50:39,599 --> 00:50:42,559
you give the module a try honestly one

00:50:41,359 --> 00:50:43,920
of the biggest things that makes it

00:50:42,559 --> 00:50:45,760
experimental is that we'd love to have

00:50:43,920 --> 00:50:48,880
more people find problems with it

00:50:45,760 --> 00:50:53,200
um submit bug reports so

00:50:48,880 --> 00:50:53,200
yeah all right

00:51:00,040 --> 00:51:03,040

YouTube URL: https://www.youtube.com/watch?v=qHaSCPi0324


