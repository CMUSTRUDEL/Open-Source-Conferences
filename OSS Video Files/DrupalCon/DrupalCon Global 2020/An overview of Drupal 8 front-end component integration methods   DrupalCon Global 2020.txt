Title: An overview of Drupal 8 front-end component integration methods   DrupalCon Global 2020
Publication date: 2020-08-25
Playlist: DrupalCon Global 2020
Description: 
	"Since the release of Drupal 8, great strides have been made to develop a component-based theming workflow that takes advantage of the best that Twig has to offer and also plays nice with component libraries and design systems. Gone are the days of redundant styles and markup, making way for the efficiencies found when Drupal and tools like Pattern Lab or Storybook can share the exact same code. That said, handling the mapping of data between Drupal and your component library can still be quite complicated and difficult to coordinate on larger cross-functional teams.

This session will provide an overview of methods that can be used to provide data from Drupal to a front-end component that lives outside of the traditional Drupal templates directory, including:

* Mapping data via preprocessing
* Mapping data in twig templates
** Helper modules including Component Libraries, Twig Tweak, and Twig Field Value
** Popular component-based themes and starter kits
* UI Patterns and related supporting modules
* Pattern Kit
* Compony
* Single File Components

Finally, weâ€™ll look ahead to how this process could evolve in future versions of Drupal."
Captions: 
	00:00:03,760 --> 00:00:07,279
thanks for pressing play

00:00:04,960 --> 00:00:08,480
on an overview of front-end component

00:00:07,279 --> 00:00:14,080
integration methods

00:00:08,480 --> 00:00:14,080
in drupal let's get started drupalcon

00:00:14,920 --> 00:00:19,600
global

00:00:16,560 --> 00:00:21,279
greetings my name is brian perry

00:00:19,600 --> 00:00:23,039
and i'm a lead front-end developer at a

00:00:21,279 --> 00:00:26,000
company called bounties

00:00:23,039 --> 00:00:28,080
i live in the chicago suburbs in the

00:00:26,000 --> 00:00:30,960
united states of america

00:00:28,080 --> 00:00:32,239
and i'm a lover of all things component

00:00:30,960 --> 00:00:35,120
and component based

00:00:32,239 --> 00:00:37,760
so uh theming and building with

00:00:35,120 --> 00:00:40,000
components and drupal

00:00:37,760 --> 00:00:41,280
design systems and tools like pattern

00:00:40,000 --> 00:00:43,600
lab and storybook

00:00:41,280 --> 00:00:45,360
and increasingly building with uh

00:00:43,600 --> 00:00:46,719
component-based javascript frameworks

00:00:45,360 --> 00:00:48,399
like react

00:00:46,719 --> 00:00:50,640
and i'm also a lover of all things

00:00:48,399 --> 00:00:51,840
nintendo so i'd love to chat with you

00:00:50,640 --> 00:00:53,199
about the cool stuff you're playing on

00:00:51,840 --> 00:00:56,399
your switch

00:00:53,199 --> 00:00:59,680
for me with new end in sight it's been

00:00:56,399 --> 00:01:01,840
animal crossing new horizons

00:00:59,680 --> 00:01:03,760
and i'm also available on the internet

00:01:01,840 --> 00:01:04,400
in a variety of different places and

00:01:03,760 --> 00:01:07,519
would love

00:01:04,400 --> 00:01:07,519
to internet with you

00:01:09,200 --> 00:01:12,960
as i mentioned i work for a company

00:01:11,200 --> 00:01:15,439
called bountious and we have

00:01:12,960 --> 00:01:16,320
offices throughout north america of

00:01:15,439 --> 00:01:17,759
course that was

00:01:16,320 --> 00:01:19,600
in a time when we weren't all working

00:01:17,759 --> 00:01:21,840
remotely um

00:01:19,600 --> 00:01:23,920
back then i was based out of one of the

00:01:21,840 --> 00:01:26,080
two chicago area offices but

00:01:23,920 --> 00:01:27,680
these days i'm enjoying uh working out

00:01:26,080 --> 00:01:30,000
of my home office

00:01:27,680 --> 00:01:32,000
uh but drupal is one of a handful of

00:01:30,000 --> 00:01:34,560
things that we do at bountys but i

00:01:32,000 --> 00:01:35,360
get to work with a drupal practice and

00:01:34,560 --> 00:01:37,680
work with

00:01:35,360 --> 00:01:40,799
a bunch of great drupal folks who i

00:01:37,680 --> 00:01:42,560
learn so much from on a day-to-day basis

00:01:40,799 --> 00:01:44,320
we're often hiring so if you're looking

00:01:42,560 --> 00:01:46,799
to do great drupal work

00:01:44,320 --> 00:01:48,720
get in touch and if you're looking to

00:01:46,799 --> 00:01:52,560
have great drupal work done i'm sure i

00:01:48,720 --> 00:01:52,560
can get you in touch with someone as

00:01:52,840 --> 00:01:58,079
well so

00:01:54,320 --> 00:02:00,320
before we talk about how to integrate

00:01:58,079 --> 00:02:02,240
uh components we should talk about uh

00:02:00,320 --> 00:02:09,840
components and just component based

00:02:02,240 --> 00:02:09,840
development at a high level first

00:02:10,239 --> 00:02:13,360
so really quickly uh component-based

00:02:12,480 --> 00:02:16,400
theming

00:02:13,360 --> 00:02:18,959
is building using modular and

00:02:16,400 --> 00:02:19,840
reusable elements so building a design

00:02:18,959 --> 00:02:22,800
system

00:02:19,840 --> 00:02:23,920
rather than a series of pages so not

00:02:22,800 --> 00:02:25,680
taking a

00:02:23,920 --> 00:02:26,959
photoshop mock-up and making that

00:02:25,680 --> 00:02:28,640
particular page

00:02:26,959 --> 00:02:30,480
but building all of the elements that

00:02:28,640 --> 00:02:32,480
would allow you to make a variety of

00:02:30,480 --> 00:02:35,280
pages and templates

00:02:32,480 --> 00:02:36,319
and it can use a pattern library tool

00:02:35,280 --> 00:02:38,640
like storybook

00:02:36,319 --> 00:02:41,200
or pattern lab for documentation and

00:02:38,640 --> 00:02:44,239
prototyping but doesn't require

00:02:41,200 --> 00:02:45,360
that to take this approach and it was

00:02:44,239 --> 00:02:48,959
popularized by

00:02:45,360 --> 00:02:50,560
brad frost and the atomic design concept

00:02:48,959 --> 00:02:53,519
which is a particular way

00:02:50,560 --> 00:02:54,319
to define the structure of breaking

00:02:53,519 --> 00:02:58,000
things down to

00:02:54,319 --> 00:02:58,000
into its smaller component parts

00:02:58,800 --> 00:03:04,239
and why would you take this approach one

00:03:01,920 --> 00:03:05,840
is efficient reuse you can build these

00:03:04,239 --> 00:03:07,599
components so that you can

00:03:05,840 --> 00:03:10,080
write them once and reuse them in a

00:03:07,599 --> 00:03:13,200
number of different places

00:03:10,080 --> 00:03:14,239
even across multiple projects and

00:03:13,200 --> 00:03:16,239
it opens up some interesting

00:03:14,239 --> 00:03:18,959
possibilities as far as decoupling

00:03:16,239 --> 00:03:20,400
front-end and back end development in

00:03:18,959 --> 00:03:22,959
that theming doesn't have to

00:03:20,400 --> 00:03:23,840
come last and you can define the look

00:03:22,959 --> 00:03:26,000
and feel

00:03:23,840 --> 00:03:27,680
of these components before the

00:03:26,000 --> 00:03:30,640
functionality fully exists

00:03:27,680 --> 00:03:32,400
within drupal and then also using a

00:03:30,640 --> 00:03:33,760
living style guide or pattern library

00:03:32,400 --> 00:03:35,840
tool with this

00:03:33,760 --> 00:03:37,519
can help simplify coordination between

00:03:35,840 --> 00:03:40,799
designers and developers or even

00:03:37,519 --> 00:03:40,799
developers and developers

00:03:40,959 --> 00:03:45,280
it can help with rapid prototyping so

00:03:44,000 --> 00:03:47,120
you can do lightweight prototyping

00:03:45,280 --> 00:03:48,239
before the functionality fully exists in

00:03:47,120 --> 00:03:51,280
your cms

00:03:48,239 --> 00:03:55,120
and also can be a source of truth

00:03:51,280 --> 00:03:55,120
for your design system as well

00:03:59,200 --> 00:04:03,040
so for this talk we're going to look at

00:04:01,920 --> 00:04:05,519
one particular

00:04:03,040 --> 00:04:07,120
example component and a handful of

00:04:05,519 --> 00:04:09,760
different ways to provide

00:04:07,120 --> 00:04:09,760
data to it

00:04:13,040 --> 00:04:16,720
so i wasn't kidding before when i said

00:04:15,040 --> 00:04:19,680
uh i enjoy

00:04:16,720 --> 00:04:20,639
finding ways to slot nintendo into what

00:04:19,680 --> 00:04:23,759
i do

00:04:20,639 --> 00:04:27,520
this is uh the container component from

00:04:23,759 --> 00:04:29,440
the nes.css library which

00:04:27,520 --> 00:04:31,840
gives you some tools to make nicely

00:04:29,440 --> 00:04:35,840
pixelated uh

00:04:31,840 --> 00:04:37,520
websites and uh so this is our component

00:04:35,840 --> 00:04:40,080
um there's a couple of different

00:04:37,520 --> 00:04:43,280
variations on the container style

00:04:40,080 --> 00:04:46,479
and uh you know an image a few

00:04:43,280 --> 00:04:50,080
uh categories a title um

00:04:46,479 --> 00:04:50,080
some text and a button

00:04:53,759 --> 00:04:58,800
so this is a look at the pieces kind of

00:04:56,479 --> 00:05:00,320
broken down as far as the variables

00:04:58,800 --> 00:05:01,840
that are going to be available to our

00:05:00,320 --> 00:05:05,520
twig template

00:05:01,840 --> 00:05:07,680
so a title platform year image

00:05:05,520 --> 00:05:10,400
etc nothing all that shocking there a

00:05:07,680 --> 00:05:12,080
link styled as a button

00:05:10,400 --> 00:05:14,800
so those are the things that we can plug

00:05:12,080 --> 00:05:14,800
data into

00:05:17,759 --> 00:05:24,160
and this is a look at the actual

00:05:20,960 --> 00:05:26,479
twig template markup nothing obviously

00:05:24,160 --> 00:05:29,520
all that crazy here but we have

00:05:26,479 --> 00:05:31,160
some classes that allow us to use

00:05:29,520 --> 00:05:34,560
certain pieces of that

00:05:31,160 --> 00:05:37,840
nes.css framework you'll see

00:05:34,560 --> 00:05:40,240
our variables in the template

00:05:37,840 --> 00:05:41,840
some conditionals to make sure that

00:05:40,240 --> 00:05:45,520
things only display

00:05:41,840 --> 00:05:49,520
if data is passed into it but again

00:05:45,520 --> 00:05:49,520
nothing all that wild here

00:05:51,759 --> 00:05:55,759
and then this is a yaml file for the

00:05:54,960 --> 00:05:58,160
component

00:05:55,759 --> 00:05:58,800
uh kind of depends on if you're using a

00:05:58,160 --> 00:06:00,400
tool like

00:05:58,800 --> 00:06:02,400
pattern lab or some sort of design

00:06:00,400 --> 00:06:06,000
system or pattern library tool but

00:06:02,400 --> 00:06:08,560
uh this is example data that can be

00:06:06,000 --> 00:06:09,919
passed into uh your component so you can

00:06:08,560 --> 00:06:11,840
see what an example

00:06:09,919 --> 00:06:13,520
would look like based on this

00:06:11,840 --> 00:06:15,840
representative data

00:06:13,520 --> 00:06:17,600
and again it's just kind of all uh the

00:06:15,840 --> 00:06:21,840
variables that we saw before

00:06:17,600 --> 00:06:21,840
and just you know example data for it

00:06:25,280 --> 00:06:29,039
and then we'll also be taking uh this

00:06:27,520 --> 00:06:32,960
container component

00:06:29,039 --> 00:06:36,400
and uh using it in a grid so we'll have

00:06:32,960 --> 00:06:37,440
multiple containers for different in

00:06:36,400 --> 00:06:40,800
this case

00:06:37,440 --> 00:06:44,080
content types on our drupal site

00:06:40,800 --> 00:06:44,080
displayed in a grid like this

00:06:47,440 --> 00:06:51,120
so this is just a quick look at uh the

00:06:49,680 --> 00:06:54,639
css for that

00:06:51,120 --> 00:06:57,759
again nothing all that fancy here um

00:06:54,639 --> 00:07:00,560
there's just a grid class uh

00:06:57,759 --> 00:07:02,560
that has uh different rules using css

00:07:00,560 --> 00:07:05,360
grid at different breakpoints

00:07:02,560 --> 00:07:05,919
that is going to give us that three-up

00:07:05,360 --> 00:07:08,800
grid

00:07:05,919 --> 00:07:08,800
that we saw before

00:07:13,919 --> 00:07:16,720
now that we've taken a look at the

00:07:15,360 --> 00:07:18,400
component that we're going to be playing

00:07:16,720 --> 00:07:20,160
around with as an example

00:07:18,400 --> 00:07:23,440
let's take a look at components from the

00:07:20,160 --> 00:07:23,440
perspective of drupal

00:07:26,960 --> 00:07:30,000
so there's a few different lines that

00:07:28,720 --> 00:07:33,039
we're going to draw as we go

00:07:30,000 --> 00:07:34,960
through this but for the sake of this

00:07:33,039 --> 00:07:36,080
discussion the first one we're going to

00:07:34,960 --> 00:07:39,199
look at is where

00:07:36,080 --> 00:07:40,880
the component lives and we're going to

00:07:39,199 --> 00:07:41,759
divide that up into standard drupal

00:07:40,880 --> 00:07:44,960
components

00:07:41,759 --> 00:07:47,280
and integrated drupal components so

00:07:44,960 --> 00:07:48,720
in this case when i say a standard

00:07:47,280 --> 00:07:50,400
drupal component i'm talking about

00:07:48,720 --> 00:07:52,960
something that lives in the default

00:07:50,400 --> 00:07:55,360
template directory typically the default

00:07:52,960 --> 00:07:58,160
template directory in your theme

00:07:55,360 --> 00:08:00,160
and because that's where drupal expects

00:07:58,160 --> 00:08:02,080
that stuff to live

00:08:00,160 --> 00:08:04,479
there may not be any additional effort

00:08:02,080 --> 00:08:06,319
that's required to get data to display

00:08:04,479 --> 00:08:07,759
in your component

00:08:06,319 --> 00:08:09,599
and on the other hand an integrated

00:08:07,759 --> 00:08:12,639
drupal component lives

00:08:09,599 --> 00:08:15,520
anywhere other than the default template

00:08:12,639 --> 00:08:17,680
directory so it's going to require some

00:08:15,520 --> 00:08:19,599
amount of effort for us to pass the data

00:08:17,680 --> 00:08:22,400
to that component

00:08:19,599 --> 00:08:23,039
and get it to display and for the sake

00:08:22,400 --> 00:08:25,280
of this talk

00:08:23,039 --> 00:08:26,960
exactly where that is kind of doesn't

00:08:25,280 --> 00:08:29,759
matter

00:08:26,960 --> 00:08:31,919
it could be somewhere else in your theme

00:08:29,759 --> 00:08:33,680
other than the templates directory

00:08:31,919 --> 00:08:35,279
it could be an external dependency that

00:08:33,680 --> 00:08:38,399
you pull in via

00:08:35,279 --> 00:08:40,479
composer or npm but but again just the

00:08:38,399 --> 00:08:42,640
distinction here is that it's

00:08:40,479 --> 00:08:44,399
somewhere other than where drupal

00:08:42,640 --> 00:08:46,080
expects it to be by default

00:08:44,399 --> 00:08:48,800
and we've got to do some work to pass in

00:08:46,080 --> 00:08:48,800
data to it

00:08:53,519 --> 00:08:57,360
so now let's take a closer look at what

00:08:55,519 --> 00:08:58,240
we're calling standard drupal components

00:08:57,360 --> 00:09:00,560
so again this

00:08:58,240 --> 00:09:02,240
is uh building using a component that

00:09:00,560 --> 00:09:09,839
lives inside drupal's

00:09:02,240 --> 00:09:09,839
default templates directory

00:09:10,000 --> 00:09:13,920
so uh building using standard drupal

00:09:12,080 --> 00:09:14,720
components may be the right choice for

00:09:13,920 --> 00:09:18,399
your team

00:09:14,720 --> 00:09:19,519
or project um so here you are building

00:09:18,399 --> 00:09:21,760
with drupal and

00:09:19,519 --> 00:09:22,880
only drupal in mind doing things the the

00:09:21,760 --> 00:09:24,959
drupal way

00:09:22,880 --> 00:09:26,000
uh putting the components where drupal

00:09:24,959 --> 00:09:28,720
expects them

00:09:26,000 --> 00:09:30,480
so uh this certainly allows you to take

00:09:28,720 --> 00:09:32,160
advantage of things that can be easily

00:09:30,480 --> 00:09:34,399
reused in drupal and kind of

00:09:32,160 --> 00:09:36,880
structure your approach to that things

00:09:34,399 --> 00:09:39,279
like display modes and blocks and you

00:09:36,880 --> 00:09:42,480
can use paragraphs if so inclined

00:09:39,279 --> 00:09:44,480
uh layouts for layout builder um

00:09:42,480 --> 00:09:46,160
but one thing you definitely lose out on

00:09:44,480 --> 00:09:47,760
here is

00:09:46,160 --> 00:09:50,240
some of the potential advantages for

00:09:47,760 --> 00:09:51,600
rapid prototyping so you have to stand

00:09:50,240 --> 00:09:54,480
everything up in drupal and make it

00:09:51,600 --> 00:09:57,440
exist in drupal before

00:09:54,480 --> 00:09:57,440
you can see what it looks like

00:10:00,959 --> 00:10:04,000
so let's take a look back at our

00:10:03,360 --> 00:10:05,839
component

00:10:04,000 --> 00:10:07,279
from the perspective of if we were you

00:10:05,839 --> 00:10:10,480
know creating a traditional

00:10:07,279 --> 00:10:13,279
drupal component for it um so

00:10:10,480 --> 00:10:14,000
in this case we created a a game content

00:10:13,279 --> 00:10:16,240
type

00:10:14,000 --> 00:10:17,200
um that has a number of fields kind of

00:10:16,240 --> 00:10:20,800
corresponding

00:10:17,200 --> 00:10:22,320
with the variables in our component

00:10:20,800 --> 00:10:24,560
so there's the label that represents the

00:10:22,320 --> 00:10:28,560
title and then field platform

00:10:24,560 --> 00:10:29,519
field image the body the urls available

00:10:28,560 --> 00:10:32,959
to the template

00:10:29,519 --> 00:10:36,399
and so on and then when

00:10:32,959 --> 00:10:36,399
we're using this container

00:10:36,560 --> 00:10:39,920
and displaying this game content we're

00:10:39,040 --> 00:10:43,279
going to use

00:10:39,920 --> 00:10:43,760
a teaser view mode so we're saying that

00:10:43,279 --> 00:10:46,079
when

00:10:43,760 --> 00:10:48,480
drupal is rendering using this teaser

00:10:46,079 --> 00:10:52,800
view mode we want to make sure it looks

00:10:48,480 --> 00:10:52,800
like this container component

00:10:56,079 --> 00:10:59,120
so here we're looking at a template for

00:10:58,240 --> 00:11:01,760
the

00:10:59,120 --> 00:11:02,399
game content type in the teaser view

00:11:01,760 --> 00:11:05,720
mode

00:11:02,399 --> 00:11:07,040
and this is just uh based on the default

00:11:05,720 --> 00:11:10,480
node.html.twig

00:11:07,040 --> 00:11:11,920
template in classy the classy theme and

00:11:10,480 --> 00:11:13,519
core i believe

00:11:11,920 --> 00:11:14,959
and really all we're doing here is

00:11:13,519 --> 00:11:18,240
massaging it to kind of

00:11:14,959 --> 00:11:20,079
fit the markup that we need to create

00:11:18,240 --> 00:11:22,640
our container component

00:11:20,079 --> 00:11:24,079
so in our classes array we're just

00:11:22,640 --> 00:11:27,519
adding in some

00:11:24,079 --> 00:11:30,079
nes dot css classes that we need um

00:11:27,519 --> 00:11:32,079
so nes container with title and is

00:11:30,079 --> 00:11:34,959
centered in this case and the rest

00:11:32,079 --> 00:11:35,519
are kind of default things that drupal

00:11:34,959 --> 00:11:43,200
uses

00:11:35,519 --> 00:11:45,680
for a node

00:11:43,200 --> 00:11:47,200
and then lower down in the template you

00:11:45,680 --> 00:11:50,399
can see that we're

00:11:47,200 --> 00:11:51,519
so passing in those classes uh to the

00:11:50,399 --> 00:11:54,079
article

00:11:51,519 --> 00:11:55,040
and then also adding some additional

00:11:54,079 --> 00:11:58,560
wrapping markup

00:11:55,040 --> 00:12:02,000
where we need it so uh for example

00:11:58,560 --> 00:12:05,040
we have the uh nes badge

00:12:02,000 --> 00:12:06,959
and is splitted uh class and a div

00:12:05,040 --> 00:12:08,079
and then we're passing in the platform

00:12:06,959 --> 00:12:10,959
and year

00:12:08,079 --> 00:12:11,440
to have those little badges up top and

00:12:10,959 --> 00:12:14,720
then

00:12:11,440 --> 00:12:16,480
um you know essentially passing in the

00:12:14,720 --> 00:12:18,880
the rest of our fields as well so really

00:12:16,480 --> 00:12:21,600
all we're doing here is taking this

00:12:18,880 --> 00:12:25,839
default template suggestion and

00:12:21,600 --> 00:12:25,839
adjusting the markup to our needs

00:12:28,720 --> 00:12:32,079
so that is going to give us our

00:12:30,399 --> 00:12:34,560
container component

00:12:32,079 --> 00:12:35,839
and then as we mentioned before we're

00:12:34,560 --> 00:12:38,959
also going to display this

00:12:35,839 --> 00:12:40,800
in a grid so in this case

00:12:38,959 --> 00:12:42,320
uh we're just going to create a view for

00:12:40,800 --> 00:12:44,800
it a games view

00:12:42,320 --> 00:12:46,240
that's going to list out a number of

00:12:44,800 --> 00:12:53,279
games

00:12:46,240 --> 00:12:56,959
using that container component

00:12:53,279 --> 00:13:00,320
and this is a unformatted view

00:12:56,959 --> 00:13:02,240
template here um and really not a lot

00:13:00,320 --> 00:13:03,600
complicated going on here either

00:13:02,240 --> 00:13:05,279
we're essentially just taking the

00:13:03,600 --> 00:13:07,680
default markup

00:13:05,279 --> 00:13:08,639
that would be used in this template and

00:13:07,680 --> 00:13:11,920
wrapping it in the

00:13:08,639 --> 00:13:13,040
l grid class that we defined before and

00:13:11,920 --> 00:13:15,600
that's going to give us

00:13:13,040 --> 00:13:15,600
our grid

00:13:18,639 --> 00:13:22,399
so now let's look at the integrated

00:13:20,399 --> 00:13:24,959
approach so again this is

00:13:22,399 --> 00:13:26,079
uh using components that live anywhere

00:13:24,959 --> 00:13:28,240
but

00:13:26,079 --> 00:13:29,680
the default templates directory in a

00:13:28,240 --> 00:13:32,000
module or theme

00:13:29,680 --> 00:13:32,959
and we'll look at a whole bunch of

00:13:32,000 --> 00:13:35,120
different ways

00:13:32,959 --> 00:13:38,320
that we can integrate data into these

00:13:35,120 --> 00:13:38,320
components that live elsewhere

00:13:42,720 --> 00:13:49,199
so here we have our component library

00:13:45,839 --> 00:13:53,839
our nes components directory inside

00:13:49,199 --> 00:13:56,480
of our custom nes theme in this case

00:13:53,839 --> 00:13:57,440
and it uses pattern lab's default

00:13:56,480 --> 00:13:59,920
structure

00:13:57,440 --> 00:14:00,800
so there's a source directory and then a

00:13:59,920 --> 00:14:04,720
patterns

00:14:00,800 --> 00:14:06,000
directory that has directories for each

00:14:04,720 --> 00:14:07,680
of our different components

00:14:06,000 --> 00:14:09,920
not a whole lot here but you'll see that

00:14:07,680 --> 00:14:13,680
there's the container component

00:14:09,920 --> 00:14:16,480
and a twig template and a yaml file

00:14:13,680 --> 00:14:17,120
and we can also spin up pattern lab to

00:14:16,480 --> 00:14:19,360
see

00:14:17,120 --> 00:14:21,120
what our component looks like see

00:14:19,360 --> 00:14:25,199
examples of the markup

00:14:21,120 --> 00:14:25,199
and see it with data passed in

00:14:29,199 --> 00:14:32,320
and then another piece of the puzzle

00:14:30,480 --> 00:14:35,519
that we'll need here is the

00:14:32,320 --> 00:14:36,560
drupal components module so uh this

00:14:35,519 --> 00:14:40,279
module creates

00:14:36,560 --> 00:14:42,399
twig namespaces um so you'll see in our

00:14:40,279 --> 00:14:45,920
info.yaml file

00:14:42,399 --> 00:14:48,480
we created a namespace called components

00:14:45,920 --> 00:14:49,440
that points to that component

00:14:48,480 --> 00:14:53,040
subdirectory

00:14:49,440 --> 00:14:55,199
in patterns in our pattern library

00:14:53,040 --> 00:14:56,480
and this gives us a nice little shortcut

00:14:55,199 --> 00:14:59,680
to reference

00:14:56,480 --> 00:15:01,600
our components and it also just makes

00:14:59,680 --> 00:15:03,440
drupal aware of those templates that

00:15:01,600 --> 00:15:06,320
live in a non-standard location

00:15:03,440 --> 00:15:12,560
otherwise drupal will only discover

00:15:06,320 --> 00:15:15,519
templates in the templates directory

00:15:12,560 --> 00:15:17,760
so now that drupal is aware of our

00:15:15,519 --> 00:15:20,320
templates we need to figure out the

00:15:17,760 --> 00:15:20,959
appropriate way to pass data into them

00:15:20,320 --> 00:15:22,800
and this is

00:15:20,959 --> 00:15:24,800
another distinction that we're going to

00:15:22,800 --> 00:15:25,680
use here the the difference between

00:15:24,800 --> 00:15:28,720
mapping data

00:15:25,680 --> 00:15:29,600
in code versus mapping the data in admin

00:15:28,720 --> 00:15:31,279
ui

00:15:29,600 --> 00:15:32,720
and this probably falls into like a

00:15:31,279 --> 00:15:33,839
mostly category

00:15:32,720 --> 00:15:36,160
you know there are situations where

00:15:33,839 --> 00:15:38,320
there might be a bit of a a mix

00:15:36,160 --> 00:15:39,759
but um for each of these approaches

00:15:38,320 --> 00:15:40,720
we're going to just look at you know the

00:15:39,759 --> 00:15:43,440
primary

00:15:40,720 --> 00:15:44,800
approach so for mapping data in code

00:15:43,440 --> 00:15:47,600
this includes things like

00:15:44,800 --> 00:15:49,920
mapping data in twig templates various

00:15:47,600 --> 00:15:53,120
approaches to pre-processing

00:15:49,920 --> 00:15:54,800
themes and starter kits and here

00:15:53,120 --> 00:15:56,800
you're potentially a little bit more

00:15:54,800 --> 00:15:57,759
likely to get out of sync with the

00:15:56,800 --> 00:15:59,759
drupal ui

00:15:57,759 --> 00:16:01,199
and that you're doing it all in code and

00:15:59,759 --> 00:16:03,759
can do things like

00:16:01,199 --> 00:16:04,959
bypass certain display modes and things

00:16:03,759 --> 00:16:07,040
like that

00:16:04,959 --> 00:16:08,240
um and you're also potentially unless

00:16:07,040 --> 00:16:11,519
you're careful

00:16:08,240 --> 00:16:15,199
more likely to break things like caching

00:16:11,519 --> 00:16:17,199
or drupal functionality like quick edit

00:16:15,199 --> 00:16:19,120
and then mapping data in the admin ui

00:16:17,199 --> 00:16:21,680
this is going to include things like

00:16:19,120 --> 00:16:23,519
the ui patterns module or using drupal

00:16:21,680 --> 00:16:25,839
layouts

00:16:23,519 --> 00:16:27,600
and it's typically less likely to

00:16:25,839 --> 00:16:30,240
disrupt drupal functionality

00:16:27,600 --> 00:16:31,920
as we mentioned but also as a result

00:16:30,240 --> 00:16:37,839
potentially not as flexible

00:16:31,920 --> 00:16:37,839
kind of a trade-off there

00:16:38,480 --> 00:16:42,560
so let's take a look at approaches where

00:16:41,440 --> 00:16:45,199
we're mapping our data

00:16:42,560 --> 00:16:45,199
in code

00:16:48,000 --> 00:16:51,920
so once again here's the component that

00:16:50,320 --> 00:16:55,120
we have and we're still

00:16:51,920 --> 00:16:58,240
uh working with the teaser view mode and

00:16:55,120 --> 00:17:01,759
uh passing the same data into

00:16:58,240 --> 00:17:01,759
the you know same fields that we saw

00:17:02,839 --> 00:17:07,679
before

00:17:05,760 --> 00:17:08,799
and the first approach we'll look at is

00:17:07,679 --> 00:17:11,439
doing mapping

00:17:08,799 --> 00:17:13,760
in the twig template using the concept

00:17:11,439 --> 00:17:16,839
of a presenter template

00:17:13,760 --> 00:17:18,640
um so here we have our

00:17:16,839 --> 00:17:21,760
nodegameteaser.html

00:17:18,640 --> 00:17:24,079
template that we saw before and

00:17:21,760 --> 00:17:25,280
instead what we're doing is we're

00:17:24,079 --> 00:17:28,000
referencing

00:17:25,280 --> 00:17:29,039
the template in our component library so

00:17:28,000 --> 00:17:31,760
we still have our

00:17:29,039 --> 00:17:34,799
wrapping article element that we're

00:17:31,760 --> 00:17:36,480
passing some uh top-level classes into

00:17:34,799 --> 00:17:37,840
but then we're using a twig include

00:17:36,480 --> 00:17:41,280
statement and we have

00:17:37,840 --> 00:17:42,160
our um twig namespace of components a

00:17:41,280 --> 00:17:44,880
little shortcut

00:17:42,160 --> 00:17:47,039
to our container uh directory and then

00:17:44,880 --> 00:17:49,760
we're referencing the c container.twig

00:17:47,039 --> 00:17:51,200
template and then we're saying with and

00:17:49,760 --> 00:17:53,760
then we are mapping

00:17:51,200 --> 00:17:54,880
uh all of the fields the variables from

00:17:53,760 --> 00:17:57,679
that c container

00:17:54,880 --> 00:17:58,799
twig template and we're specifying what

00:17:57,679 --> 00:18:02,320
fields from

00:17:58,799 --> 00:18:04,720
our content type are going to go into it

00:18:02,320 --> 00:18:06,720
so this really just kind of is a middle

00:18:04,720 --> 00:18:07,360
man where drupal expects the template to

00:18:06,720 --> 00:18:10,240
be

00:18:07,360 --> 00:18:10,640
that says hey actually go look over here

00:18:10,240 --> 00:18:15,840
to

00:18:10,640 --> 00:18:15,840
the template in our component library

00:18:18,080 --> 00:18:21,440
so just a little side note here you may

00:18:20,000 --> 00:18:25,280
have noticed that

00:18:21,440 --> 00:18:27,200
for something like the image field

00:18:25,280 --> 00:18:28,960
we're just passing through drupal's

00:18:27,200 --> 00:18:31,280
entire image field

00:18:28,960 --> 00:18:32,720
and you may want to for a component like

00:18:31,280 --> 00:18:34,160
this break things down into their

00:18:32,720 --> 00:18:37,760
individual pieces

00:18:34,160 --> 00:18:41,520
so you have to pass like alt text and

00:18:37,760 --> 00:18:43,200
the source but i find personally that if

00:18:41,520 --> 00:18:45,679
you keep things high level

00:18:43,200 --> 00:18:46,799
and let drupal do what it does well as

00:18:45,679 --> 00:18:49,919
far as rendering

00:18:46,799 --> 00:18:50,559
image markup and use kind of high level

00:18:49,919 --> 00:18:53,280
slots

00:18:50,559 --> 00:18:54,720
for the data that you pass through um

00:18:53,280 --> 00:18:57,840
things will be easier for you

00:18:54,720 --> 00:18:57,840
in the long run

00:19:00,799 --> 00:19:04,160
so this is the same example but instead

00:19:03,280 --> 00:19:07,440
handling the

00:19:04,160 --> 00:19:10,480
data mapping in a preprocess function

00:19:07,440 --> 00:19:15,280
in our nes dot theme file

00:19:10,480 --> 00:19:17,600
in our custom theme so nothing really

00:19:15,280 --> 00:19:18,799
all that intense going on here in fact

00:19:17,600 --> 00:19:19,360
we're doing very little we're just

00:19:18,799 --> 00:19:22,960
taking

00:19:19,360 --> 00:19:25,679
the content variables and

00:19:22,960 --> 00:19:26,960
mapping them over to the variables that

00:19:25,679 --> 00:19:29,440
our twig template

00:19:26,960 --> 00:19:30,480
expects so there's definitely a lot more

00:19:29,440 --> 00:19:32,799
that you could do here

00:19:30,480 --> 00:19:34,000
additional logic that you could include

00:19:32,799 --> 00:19:36,880
um but this is

00:19:34,000 --> 00:19:38,320
kind of the simplest possible example of

00:19:36,880 --> 00:19:41,440
what could go on here in

00:19:38,320 --> 00:19:41,440
a preprocess function

00:19:45,200 --> 00:19:51,039
and if you've mapped all of the data

00:19:48,799 --> 00:19:52,080
and put them exactly where they need to

00:19:51,039 --> 00:19:55,120
belong

00:19:52,080 --> 00:19:58,240
um in the presenter template here

00:19:55,120 --> 00:20:01,600
the nodegameteaser.html.twig

00:19:58,240 --> 00:20:03,039
we don't even really need to have our

00:20:01,600 --> 00:20:04,960
with statement we can just include the

00:20:03,039 --> 00:20:08,080
templates those variables

00:20:04,960 --> 00:20:09,039
are available and they'll be rendered

00:20:08,080 --> 00:20:11,520
out so it can

00:20:09,039 --> 00:20:13,919
simplify what you have to do in your toy

00:20:11,520 --> 00:20:13,919
template

00:20:18,080 --> 00:20:22,240
so there are a number of tools that can

00:20:20,320 --> 00:20:25,280
help make this mapping process

00:20:22,240 --> 00:20:26,720
easier uh a couple of helper modules

00:20:25,280 --> 00:20:28,960
that will help with uh

00:20:26,720 --> 00:20:31,200
mapping are twig field value and twig

00:20:28,960 --> 00:20:34,559
tweak uh that i use pretty frequently on

00:20:31,200 --> 00:20:34,960
projects so twig fields value uh lets

00:20:34,559 --> 00:20:38,159
you get

00:20:34,960 --> 00:20:38,559
partial data from field render arrays uh

00:20:38,159 --> 00:20:40,559
it

00:20:38,559 --> 00:20:42,159
lets you get the label you can use field

00:20:40,559 --> 00:20:46,240
value just to get the

00:20:42,159 --> 00:20:48,559
value without uh wrapping markup um

00:20:46,240 --> 00:20:49,600
and you can get target entities so this

00:20:48,559 --> 00:20:53,120
really lets you

00:20:49,600 --> 00:20:56,559
uh just get at the data that you want

00:20:53,120 --> 00:21:00,000
um it may in some cases like

00:20:56,559 --> 00:21:01,200
i believe uh field raw and field target

00:21:00,000 --> 00:21:02,880
entity

00:21:01,200 --> 00:21:04,320
have some additional caching

00:21:02,880 --> 00:21:06,640
considerations you might take

00:21:04,320 --> 00:21:08,000
need to take into account uh to make

00:21:06,640 --> 00:21:11,360
sure that things are

00:21:08,000 --> 00:21:14,080
uh cached appropriately

00:21:11,360 --> 00:21:14,880
tweak tweak on the other hand has a ton

00:21:14,080 --> 00:21:17,840
of different

00:21:14,880 --> 00:21:18,880
uh helpful functions and filters it lets

00:21:17,840 --> 00:21:22,159
you render

00:21:18,880 --> 00:21:25,440
views and blocks and regions um

00:21:22,159 --> 00:21:30,000
particular image styles uh extract

00:21:25,440 --> 00:21:31,280
tokens and many many other things

00:21:30,000 --> 00:21:33,440
so if there's something you're having

00:21:31,280 --> 00:21:35,440
trouble doing in twig

00:21:33,440 --> 00:21:37,440
it's likely that toy tweak may have

00:21:35,440 --> 00:21:44,159
already done it for you

00:21:37,440 --> 00:21:46,880
so great helpful tools there

00:21:44,159 --> 00:21:47,760
so far we've been looking at a custom

00:21:46,880 --> 00:21:49,840
theme

00:21:47,760 --> 00:21:51,919
uh but there are also a number of

00:21:49,840 --> 00:21:55,039
starter kits and themes that can help

00:21:51,919 --> 00:21:57,440
you with this component-based approach

00:21:55,039 --> 00:21:59,039
they do a handful of things for you one

00:21:57,440 --> 00:22:02,080
is they

00:21:59,039 --> 00:22:05,200
simplify setup and often have a

00:22:02,080 --> 00:22:07,120
opinion about the default tooling and

00:22:05,200 --> 00:22:08,400
front-end workflow

00:22:07,120 --> 00:22:10,159
so if that's not something you want to

00:22:08,400 --> 00:22:12,320
set up yourself this can

00:22:10,159 --> 00:22:14,159
definitely be a great help um some of

00:22:12,320 --> 00:22:16,000
them have default components

00:22:14,159 --> 00:22:18,480
and helper functions that you can rely

00:22:16,000 --> 00:22:20,799
on and how opinionated

00:22:18,480 --> 00:22:22,240
uh each of these are is going to vary so

00:22:20,799 --> 00:22:23,120
in some cases they'll be very

00:22:22,240 --> 00:22:24,320
opinionated

00:22:23,120 --> 00:22:26,960
and there's a certain way you have to do

00:22:24,320 --> 00:22:30,159
things others are more of a looser

00:22:26,960 --> 00:22:30,880
starting framework there's a lot of them

00:22:30,159 --> 00:22:34,240
out there

00:22:30,880 --> 00:22:38,640
emulsify is a very common popular option

00:22:34,240 --> 00:22:41,280
there's gesso the shiloh theme particle

00:22:38,640 --> 00:22:41,919
and you know these are all great options

00:22:41,280 --> 00:22:44,320
um

00:22:41,919 --> 00:22:45,919
that are well used in the community and

00:22:44,320 --> 00:22:47,440
uh you know again if you don't want to

00:22:45,919 --> 00:22:48,880
do this setup yourself and don't want

00:22:47,440 --> 00:22:55,840
that level of control

00:22:48,880 --> 00:22:55,840
um it can really help you out

00:22:56,159 --> 00:22:59,200
since we're kind of looking at the same

00:22:58,159 --> 00:23:00,799
example component

00:22:59,200 --> 00:23:02,640
over and over in a bunch of different

00:23:00,799 --> 00:23:05,039
contexts there's really not

00:23:02,640 --> 00:23:05,760
a ton to show here but i did create an

00:23:05,039 --> 00:23:09,120
example

00:23:05,760 --> 00:23:11,200
using the emulsify design system since

00:23:09,120 --> 00:23:12,960
emulsify seems to be a pretty popular

00:23:11,200 --> 00:23:14,559
option for a starter kit in the

00:23:12,960 --> 00:23:18,000
community

00:23:14,559 --> 00:23:20,480
and the general concept here

00:23:18,000 --> 00:23:22,640
is pretty much exactly the same we've

00:23:20,480 --> 00:23:24,799
got the same presenter templates

00:23:22,640 --> 00:23:25,679
that are referencing uh component

00:23:24,799 --> 00:23:27,120
templates that

00:23:25,679 --> 00:23:29,280
just so happen to live in a different

00:23:27,120 --> 00:23:31,919
location um

00:23:29,280 --> 00:23:35,120
and uh emulsified design system uses a

00:23:31,919 --> 00:23:37,760
different component library tool uses a

00:23:35,120 --> 00:23:38,640
storybook for html as opposed to pattern

00:23:37,760 --> 00:23:40,480
lab

00:23:38,640 --> 00:23:41,919
but in general the concept is the same

00:23:40,480 --> 00:23:44,640
we get to see an example

00:23:41,919 --> 00:23:46,159
of our component um with you know

00:23:44,640 --> 00:23:47,840
slightly different image passed into it

00:23:46,159 --> 00:23:51,840
here but you know we get to see

00:23:47,840 --> 00:23:51,840
what it will look like

00:23:53,120 --> 00:23:58,400
and how we define our example component

00:23:55,840 --> 00:24:01,919
in storybook is a little bit different

00:23:58,400 --> 00:24:05,360
so here we have a container.stories.js

00:24:01,919 --> 00:24:06,720
file but you know a lot of the concepts

00:24:05,360 --> 00:24:10,480
are pretty similar here

00:24:06,720 --> 00:24:12,960
we're using our twig template and then

00:24:10,480 --> 00:24:14,559
we have a yaml file that contains data

00:24:12,960 --> 00:24:16,080
for the component

00:24:14,559 --> 00:24:18,159
and then we're just going to go ahead

00:24:16,080 --> 00:24:19,520
and render out an example of what it

00:24:18,159 --> 00:24:22,320
would look like

00:24:19,520 --> 00:24:22,720
so different syntax and structure here

00:24:22,320 --> 00:24:25,039
but

00:24:22,720 --> 00:24:27,279
again the concepts are very much the

00:24:25,039 --> 00:24:27,279
same

00:24:29,120 --> 00:24:32,159
and this is an example of what

00:24:30,720 --> 00:24:35,200
everything ends up looking like

00:24:32,159 --> 00:24:37,520
in the actual theme itself it's

00:24:35,200 --> 00:24:39,279
you know the same grid that we looked at

00:24:37,520 --> 00:24:42,640
in previous examples

00:24:39,279 --> 00:24:44,840
um just with uh you know a

00:24:42,640 --> 00:24:46,000
theme to start from and a lot of the

00:24:44,840 --> 00:24:49,360
groundwork uh

00:24:46,000 --> 00:24:49,360
laid out for us to begin with

00:24:53,279 --> 00:25:01,200
so now let's take a look at some ways to

00:24:55,360 --> 00:25:02,799
map data in the admin ui

00:25:01,200 --> 00:25:05,200
so the first we'll be looking at is

00:25:02,799 --> 00:25:06,080
using the ui patterns module so the way

00:25:05,200 --> 00:25:09,360
i like to describe

00:25:06,080 --> 00:25:12,159
the ui patterns module is uh it's a way

00:25:09,360 --> 00:25:12,960
to define components in a way that

00:25:12,159 --> 00:25:15,919
drupal

00:25:12,960 --> 00:25:17,760
understands so you'd find ui patterns

00:25:15,919 --> 00:25:19,279
which are drupal plugins

00:25:17,760 --> 00:25:21,600
and then you can use those patterns with

00:25:19,279 --> 00:25:22,640
a variety of component friendly modules

00:25:21,600 --> 00:25:24,640
so things like

00:25:22,640 --> 00:25:26,559
views field groups layout builder

00:25:24,640 --> 00:25:29,760
display suite

00:25:26,559 --> 00:25:32,240
paragraphs as well and then

00:25:29,760 --> 00:25:32,799
it actually allows you to configure the

00:25:32,240 --> 00:25:34,799
types of

00:25:32,799 --> 00:25:36,880
mappings that we looked at previously in

00:25:34,799 --> 00:25:38,240
drupal's admin ui

00:25:36,880 --> 00:25:40,240
and then there's an optional pattern

00:25:38,240 --> 00:25:41,360
library page that gets exposed in drupal

00:25:40,240 --> 00:25:44,480
it's kind of like a

00:25:41,360 --> 00:25:46,720
mini version of pattern lab and

00:25:44,480 --> 00:25:48,080
it also lets you in drupal pre-process

00:25:46,720 --> 00:25:50,559
these patterns render them

00:25:48,080 --> 00:25:53,200
programmatically and a handful of other

00:25:50,559 --> 00:25:53,200
cool tricks

00:25:54,960 --> 00:25:58,159
so still working with the container

00:25:57,039 --> 00:26:01,440
component here

00:25:58,159 --> 00:26:02,320
a lot of things are the same um the one

00:26:01,440 --> 00:26:04,159
thing that's different

00:26:02,320 --> 00:26:05,919
is what we're actually creating at the

00:26:04,159 --> 00:26:06,799
end of the day is a pattern so a

00:26:05,919 --> 00:26:08,159
container

00:26:06,799 --> 00:26:11,840
pattern in this case but all the

00:26:08,159 --> 00:26:11,840
variables are the same

00:26:13,840 --> 00:26:19,360
so to define a pattern there's a

00:26:17,320 --> 00:26:21,440
pattern.yaml file

00:26:19,360 --> 00:26:23,360
it's possible to find multiple patterns

00:26:21,440 --> 00:26:26,559
in one yaml file but

00:26:23,360 --> 00:26:29,840
typically i like to break them up into

00:26:26,559 --> 00:26:33,039
individual pattern definition files

00:26:29,840 --> 00:26:35,440
and so you give the pattern an id

00:26:33,039 --> 00:26:36,240
label and a description and then you

00:26:35,440 --> 00:26:39,039
define

00:26:36,240 --> 00:26:40,080
all of the fields so you'll see the same

00:26:39,039 --> 00:26:42,880
fields that we've seen

00:26:40,080 --> 00:26:44,640
a number of times before title platform

00:26:42,880 --> 00:26:47,039
image etc

00:26:44,640 --> 00:26:48,240
and they can have a type which is mainly

00:26:47,039 --> 00:26:51,279
used for

00:26:48,240 --> 00:26:53,679
documentation purposes a label

00:26:51,279 --> 00:26:54,880
a description and then you can pass in

00:26:53,679 --> 00:26:58,000
preview data

00:26:54,880 --> 00:27:00,880
so it could be text or markup or any any

00:26:58,000 --> 00:27:00,880
number of things there

00:27:04,400 --> 00:27:08,080
and then looking a little deeper in the

00:27:06,799 --> 00:27:09,039
yaml file there's a few other things

00:27:08,080 --> 00:27:12,480
that you can do

00:27:09,039 --> 00:27:15,520
you can define libraries so this will

00:27:12,480 --> 00:27:18,159
uh force uh assets to be loaded

00:27:15,520 --> 00:27:19,039
when the whenever the pattern is used so

00:27:18,159 --> 00:27:20,720
if you have

00:27:19,039 --> 00:27:22,960
css that should be loaded with it or

00:27:20,720 --> 00:27:25,600
javascript that it depends on

00:27:22,960 --> 00:27:26,159
you can have it loaded that way and you

00:27:25,600 --> 00:27:29,200
can also

00:27:26,159 --> 00:27:32,399
use these libraries as dependencies in

00:27:29,200 --> 00:27:34,000
other libraries if you need to and then

00:27:32,399 --> 00:27:35,039
there is the use statement down at the

00:27:34,000 --> 00:27:38,880
bottom

00:27:35,039 --> 00:27:42,320
and that allows you to specify a path

00:27:38,880 --> 00:27:44,640
even including a twig namespace here

00:27:42,320 --> 00:27:46,640
to your component template and that

00:27:44,640 --> 00:27:48,559
allows you to kind of short-circuit the

00:27:46,640 --> 00:27:49,200
need for that presenter template that we

00:27:48,559 --> 00:27:51,200
created

00:27:49,200 --> 00:27:52,640
uh on the the drupal side so it's really

00:27:51,200 --> 00:27:54,320
just saying

00:27:52,640 --> 00:27:56,080
whenever you render this pattern go out

00:27:54,320 --> 00:27:58,559
to this component template and just

00:27:56,080 --> 00:28:00,159
use that so it prevents you from having

00:27:58,559 --> 00:28:03,120
to have that

00:28:00,159 --> 00:28:05,360
middleman template uh at all which is

00:28:03,120 --> 00:28:05,360
great

00:28:08,240 --> 00:28:12,159
and then this is an example of what

00:28:10,399 --> 00:28:14,640
things look like in the

00:28:12,159 --> 00:28:16,240
pattern library page um so obviously

00:28:14,640 --> 00:28:17,360
this looks a little extra crazy because

00:28:16,240 --> 00:28:20,799
everything's intentionally

00:28:17,360 --> 00:28:22,480
nintendo-y and pixelated um but you see

00:28:20,799 --> 00:28:24,559
all of the things you defined for your

00:28:22,480 --> 00:28:27,600
pattern and your field the description

00:28:24,559 --> 00:28:30,559
all the different fields um an example

00:28:27,600 --> 00:28:31,679
of the component with data it serves as

00:28:30,559 --> 00:28:33,440
a great piece of

00:28:31,679 --> 00:28:35,120
documentation for the components that

00:28:33,440 --> 00:28:36,480
are you know essentially drupal

00:28:35,120 --> 00:28:38,559
integrated

00:28:36,480 --> 00:28:40,000
so it's another thing that allows your

00:28:38,559 --> 00:28:41,840
developers to know

00:28:40,000 --> 00:28:45,840
what components can be easily used in

00:28:41,840 --> 00:28:45,840
drupal now

00:28:48,320 --> 00:28:52,559
and then we don't have time to go

00:28:50,000 --> 00:28:54,880
through all of the different things that

00:28:52,559 --> 00:28:57,679
this module and its suite of modules can

00:28:54,880 --> 00:29:00,640
do but there are essentially a number of

00:28:57,679 --> 00:29:01,919
integration modules that let you use

00:29:00,640 --> 00:29:02,559
these patterns in some different

00:29:01,919 --> 00:29:05,840
contexts

00:29:02,559 --> 00:29:07,279
so we'll look at the views ui patterns

00:29:05,840 --> 00:29:11,440
views module

00:29:07,279 --> 00:29:14,640
so you can specify to show a pattern

00:29:11,440 --> 00:29:14,640
and then when you do that

00:29:17,279 --> 00:29:21,600
in the row style options you can specify

00:29:20,320 --> 00:29:24,159
which pattern you want to use

00:29:21,600 --> 00:29:25,120
the container pattern in this case and

00:29:24,159 --> 00:29:28,080
then for

00:29:25,120 --> 00:29:29,279
each individual field you can specify

00:29:28,080 --> 00:29:31,679
what the destination

00:29:29,279 --> 00:29:32,559
in your pattern is so this is one

00:29:31,679 --> 00:29:41,679
example

00:29:32,559 --> 00:29:43,600
of handling that mapping right in the ui

00:29:41,679 --> 00:29:45,120
so another way to handle this type of

00:29:43,600 --> 00:29:48,320
mapping in the ui

00:29:45,120 --> 00:29:51,200
is using a layout so

00:29:48,320 --> 00:29:52,000
again our same friendly component here

00:29:51,200 --> 00:29:54,799
um

00:29:52,000 --> 00:29:55,279
and we're creating a container layout

00:29:54,799 --> 00:29:57,919
and

00:29:55,279 --> 00:29:58,480
a layout in drupal uh all of these

00:29:57,919 --> 00:30:00,799
things are

00:29:58,480 --> 00:30:02,559
regions in this case so we've got a

00:30:00,799 --> 00:30:03,360
region for the title a region for the

00:30:02,559 --> 00:30:09,840
image

00:30:03,360 --> 00:30:09,840
body and so on

00:30:09,919 --> 00:30:13,200
and then the simplest way to define a

00:30:12,640 --> 00:30:16,480
layout

00:30:13,200 --> 00:30:20,080
is in a layouts.yaml file

00:30:16,480 --> 00:30:20,640
could be in your theme as it is in this

00:30:20,080 --> 00:30:23,679
case

00:30:20,640 --> 00:30:26,559
it could be provided by a module

00:30:23,679 --> 00:30:28,000
but here we're defining the main thing

00:30:26,559 --> 00:30:31,200
is the template

00:30:28,000 --> 00:30:31,919
that the layout is referencing and that

00:30:31,200 --> 00:30:34,320
has to

00:30:31,919 --> 00:30:35,600
live in your default templates directory

00:30:34,320 --> 00:30:40,000
it has to have

00:30:35,600 --> 00:30:43,039
a html.twig extension

00:30:40,000 --> 00:30:47,039
and then you specify all of your

00:30:43,039 --> 00:30:50,000
regions and then in the

00:30:47,039 --> 00:30:52,080
twig template that you reference in this

00:30:50,000 --> 00:30:54,080
case we're once again just referencing

00:30:52,080 --> 00:30:56,000
our component template that we've seen a

00:30:54,080 --> 00:30:58,960
number of times before

00:30:56,000 --> 00:30:59,760
and what we're passing into it are the

00:30:58,960 --> 00:31:05,840
regions

00:30:59,760 --> 00:31:05,840
from our layout

00:31:07,360 --> 00:31:11,440
so using this layout with layout builder

00:31:09,760 --> 00:31:13,039
there are definitely some additional

00:31:11,440 --> 00:31:16,240
considerations

00:31:13,039 --> 00:31:18,640
um basically you need to

00:31:16,240 --> 00:31:19,519
retain the things that layout builder

00:31:18,640 --> 00:31:21,919
depends on

00:31:19,519 --> 00:31:23,440
so for example you need to use the

00:31:21,919 --> 00:31:26,399
attributes object

00:31:23,440 --> 00:31:27,279
and as a result of that your pattern

00:31:26,399 --> 00:31:29,840
library tool

00:31:27,279 --> 00:31:30,799
needs to be able to understand what ad

00:31:29,840 --> 00:31:33,600
class

00:31:30,799 --> 00:31:34,880
the add class function is there's a

00:31:33,600 --> 00:31:35,840
handful of ways to address that

00:31:34,880 --> 00:31:38,240
depending on which

00:31:35,840 --> 00:31:39,360
which tool that you're using and then

00:31:38,240 --> 00:31:41,919
also there's certain

00:31:39,360 --> 00:31:43,440
like wrapping markup that layout builder

00:31:41,919 --> 00:31:46,080
depends on

00:31:43,440 --> 00:31:47,760
so the wrapping divs that use the region

00:31:46,080 --> 00:31:49,039
attributes as you see throughout this

00:31:47,760 --> 00:31:51,760
template

00:31:49,039 --> 00:31:53,279
you'll need to retain that as well so

00:31:51,760 --> 00:31:56,559
you really can't

00:31:53,279 --> 00:32:00,080
fully strip away the drupal things here

00:31:56,559 --> 00:32:03,600
if you want this component layout to be

00:32:00,080 --> 00:32:03,600
something that layout builder can use

00:32:06,480 --> 00:32:10,880
all that said this is uh what it would

00:32:08,320 --> 00:32:15,440
look like if we have our container

00:32:10,880 --> 00:32:18,720
component as a layout in layout builder

00:32:15,440 --> 00:32:19,440
uh so we have all of the different

00:32:18,720 --> 00:32:22,240
regions

00:32:19,440 --> 00:32:22,799
that we can add blocks to as you'll see

00:32:22,240 --> 00:32:24,320
here

00:32:22,799 --> 00:32:27,120
depending on the structure of your

00:32:24,320 --> 00:32:29,919
component it may or may not make sense

00:32:27,120 --> 00:32:31,840
to have this visual representation of

00:32:29,919 --> 00:32:34,960
your component in layout builder

00:32:31,840 --> 00:32:37,760
if there are a number of

00:32:34,960 --> 00:32:38,559
variables in your component that aren't

00:32:37,760 --> 00:32:40,559
necessarily

00:32:38,559 --> 00:32:41,600
represented visually that's obviously

00:32:40,559 --> 00:32:44,480
going to be a problem

00:32:41,600 --> 00:32:47,360
or as we see here if they're in close

00:32:44,480 --> 00:32:49,279
quarters that can even just be a problem

00:32:47,360 --> 00:32:51,200
but there certainly will be components

00:32:49,279 --> 00:32:57,039
where this approach could work

00:32:51,200 --> 00:32:59,919
really nicely

00:32:57,039 --> 00:33:01,919
so we touched on a lot of the potential

00:32:59,919 --> 00:33:04,799
challenges with this approach but

00:33:01,919 --> 00:33:06,559
um you do need to retain all the things

00:33:04,799 --> 00:33:08,960
that layout builder depends on

00:33:06,559 --> 00:33:12,320
if you want to expose your component as

00:33:08,960 --> 00:33:13,919
a layout and use it with layout builder

00:33:12,320 --> 00:33:15,600
and your pattern library needs to be

00:33:13,919 --> 00:33:17,840
able to understand

00:33:15,600 --> 00:33:18,640
those things the attributes objects some

00:33:17,840 --> 00:33:21,840
of the related

00:33:18,640 --> 00:33:24,000
functions and

00:33:21,840 --> 00:33:25,120
your component may not make sense to

00:33:24,000 --> 00:33:28,720
represent visually

00:33:25,120 --> 00:33:31,600
in this way and finally

00:33:28,720 --> 00:33:32,000
layout builder is going to introduce

00:33:31,600 --> 00:33:34,880
some

00:33:32,000 --> 00:33:36,640
additional markup and a number of

00:33:34,880 --> 00:33:38,720
additional wrapping divs

00:33:36,640 --> 00:33:40,320
so depending on how your component is

00:33:38,720 --> 00:33:42,480
structured that may also

00:33:40,320 --> 00:33:43,600
conflict with your component and its

00:33:42,480 --> 00:33:46,320
display

00:33:43,600 --> 00:33:53,200
so a lot of proceed with caution type

00:33:46,320 --> 00:33:55,039
things here with this approach

00:33:53,200 --> 00:33:58,240
so now let's look at the distinction as

00:33:55,039 --> 00:34:00,399
far as how the component is defined

00:33:58,240 --> 00:34:02,399
so in all the examples that we looked at

00:34:00,399 --> 00:34:06,399
so far there was some level of

00:34:02,399 --> 00:34:08,480
manual definition of the component um

00:34:06,399 --> 00:34:09,599
so we had to define things in code so

00:34:08,480 --> 00:34:12,480
that drupal could become

00:34:09,599 --> 00:34:13,280
aware of it there's also uh the emerging

00:34:12,480 --> 00:34:16,399
concept of

00:34:13,280 --> 00:34:17,359
automatic discovery so in that case a

00:34:16,399 --> 00:34:19,359
drupal module

00:34:17,359 --> 00:34:21,200
is going to automatically discover the

00:34:19,359 --> 00:34:21,760
things from your component library and

00:34:21,200 --> 00:34:25,359
make them

00:34:21,760 --> 00:34:27,520
available to drupal so

00:34:25,359 --> 00:34:29,280
from the manual definition perspective

00:34:27,520 --> 00:34:31,679
it often is going to require

00:34:29,280 --> 00:34:33,280
some amount of duplication between the

00:34:31,679 --> 00:34:35,839
things in drupal and your

00:34:33,280 --> 00:34:37,839
component library it might be a yaml

00:34:35,839 --> 00:34:40,320
file that has a lot of the same field

00:34:37,839 --> 00:34:42,079
definitions it might be that

00:34:40,320 --> 00:34:43,599
presenter template that really just

00:34:42,079 --> 00:34:46,800
exists to stand in the middle

00:34:43,599 --> 00:34:49,280
and direct traffic

00:34:46,800 --> 00:34:50,720
so automatic discovery has uh those

00:34:49,280 --> 00:34:52,399
advantages in that you

00:34:50,720 --> 00:34:54,240
don't necessarily have to be defining

00:34:52,399 --> 00:34:57,440
things twice

00:34:54,240 --> 00:34:58,880
however on the flip side um

00:34:57,440 --> 00:35:01,599
most of the approaches that have been

00:34:58,880 --> 00:35:04,800
developed so far require a particular

00:35:01,599 --> 00:35:06,640
convention which means that um they

00:35:04,800 --> 00:35:08,160
likely won't work with all component

00:35:06,640 --> 00:35:12,880
libraries and

00:35:08,160 --> 00:35:12,880
may also you know favor certain

00:35:14,839 --> 00:35:19,839
approaches

00:35:17,280 --> 00:35:23,359
so let's look at some cases where

00:35:19,839 --> 00:35:23,359
automatic discovery is possible

00:35:25,839 --> 00:35:30,880
the first is the ui patterns pattern lab

00:35:28,880 --> 00:35:34,079
module so

00:35:30,880 --> 00:35:34,720
this module will automatically create ui

00:35:34,079 --> 00:35:38,079
patterns

00:35:34,720 --> 00:35:41,440
from your pattern lab instance

00:35:38,079 --> 00:35:43,599
um so for a lot of these examples

00:35:41,440 --> 00:35:44,960
the end result is the same because it's

00:35:43,599 --> 00:35:46,640
just going to generate

00:35:44,960 --> 00:35:49,040
the component that we've seen a number

00:35:46,640 --> 00:35:51,040
of times before

00:35:49,040 --> 00:35:52,240
but obviously the fact that it is uh

00:35:51,040 --> 00:35:53,119
making it available to drupal

00:35:52,240 --> 00:35:56,079
automatically

00:35:53,119 --> 00:35:57,440
is the interesting part here it's not

00:35:56,079 --> 00:36:00,440
necessary to create

00:35:57,440 --> 00:36:02,320
a additional and redundant

00:36:00,440 --> 00:36:04,640
uipatterns.yaml file if you're using

00:36:02,320 --> 00:36:07,280
this module

00:36:04,640 --> 00:36:08,960
but there are some limitations and

00:36:07,280 --> 00:36:11,359
expectations here so

00:36:08,960 --> 00:36:12,240
it requires there to be a yaml file or

00:36:11,359 --> 00:36:14,480
json

00:36:12,240 --> 00:36:16,400
file with pattern data that's how this

00:36:14,480 --> 00:36:18,720
module picks up on what the fields are

00:36:16,400 --> 00:36:20,320
supposed to be

00:36:18,720 --> 00:36:21,760
it requires things to be named in a

00:36:20,320 --> 00:36:25,520
particular way so

00:36:21,760 --> 00:36:27,280
the same file name needs to be used for

00:36:25,520 --> 00:36:29,520
your

00:36:27,280 --> 00:36:32,240
data definition your twig templates

00:36:29,520 --> 00:36:34,480
assets that you're using

00:36:32,240 --> 00:36:35,680
and also it requires a particular

00:36:34,480 --> 00:36:37,520
approach to

00:36:35,680 --> 00:36:38,720
nested components here to be able to

00:36:37,520 --> 00:36:42,079
include things

00:36:38,720 --> 00:36:42,880
inside of each other but uh the fact

00:36:42,079 --> 00:36:44,480
that it can

00:36:42,880 --> 00:36:45,760
look at your pattern lab instance and

00:36:44,480 --> 00:36:47,200
automatically make those things

00:36:45,760 --> 00:36:55,040
available to drupal

00:36:47,200 --> 00:36:57,680
is a pretty interesting and cool concept

00:36:55,040 --> 00:36:59,920
and then following through on a similar

00:36:57,680 --> 00:37:03,440
concept is the layouts from pattern lab

00:36:59,920 --> 00:37:05,200
module and uh this is another module

00:37:03,440 --> 00:37:06,480
that i maintain i'd say this one is

00:37:05,200 --> 00:37:08,640
definitely

00:37:06,480 --> 00:37:09,599
much earlier and also probably on the

00:37:08,640 --> 00:37:11,839
line of

00:37:09,599 --> 00:37:13,200
um you know at this point possibly a

00:37:11,839 --> 00:37:15,839
failed experiment

00:37:13,200 --> 00:37:17,200
um but you know worth talking about uh

00:37:15,839 --> 00:37:18,400
what was attempted here and

00:37:17,200 --> 00:37:20,480
you know it is something that's still

00:37:18,400 --> 00:37:22,000
available for people to experiment with

00:37:20,480 --> 00:37:26,079
and build on

00:37:22,000 --> 00:37:28,800
um so uh this is the same sort of idea

00:37:26,079 --> 00:37:30,240
in that it will take uh things defined

00:37:28,800 --> 00:37:34,079
in a pattern lab instance

00:37:30,240 --> 00:37:36,640
and expose them as layouts in drupal

00:37:34,079 --> 00:37:38,480
and you don't have to explicitly define

00:37:36,640 --> 00:37:41,359
the layouts in code

00:37:38,480 --> 00:37:42,880
they can be used with layout builder um

00:37:41,359 --> 00:37:45,839
it also allows you to

00:37:42,880 --> 00:37:46,480
specify whether or not the default field

00:37:45,839 --> 00:37:49,200
wrapper

00:37:46,480 --> 00:37:50,640
or just the content will be used when

00:37:49,200 --> 00:37:53,680
rendering the data

00:37:50,640 --> 00:37:55,359
similar to what ui patterns does um

00:37:53,680 --> 00:37:56,880
but it has even more limitations at the

00:37:55,359 --> 00:37:59,040
moment um

00:37:56,880 --> 00:38:00,720
for the most recent version of pattern

00:37:59,040 --> 00:38:04,320
lab um

00:38:00,720 --> 00:38:06,640
at least somewhat recently it wasn't

00:38:04,320 --> 00:38:07,680
working with the html.twig extension

00:38:06,640 --> 00:38:10,720
which

00:38:07,680 --> 00:38:12,160
layoutbuilder requires or drupal layouts

00:38:10,720 --> 00:38:14,560
require

00:38:12,160 --> 00:38:16,560
for their templates so there has to be

00:38:14,560 --> 00:38:20,320
some working around

00:38:16,560 --> 00:38:22,640
to make that work and uh also

00:38:20,320 --> 00:38:23,520
if you are stripping away the wrapping

00:38:22,640 --> 00:38:25,040
markup

00:38:23,520 --> 00:38:26,480
um you're gonna run into issues with

00:38:25,040 --> 00:38:27,040
things like layout builders drag and

00:38:26,480 --> 00:38:29,040
drop

00:38:27,040 --> 00:38:30,960
so you need to be careful there but

00:38:29,040 --> 00:38:33,280
again another interesting way that we

00:38:30,960 --> 00:38:36,240
can expose

00:38:33,280 --> 00:38:40,160
automatically things from your pattern

00:38:36,240 --> 00:38:40,160
library or design system in drupal

00:38:43,440 --> 00:38:47,760
so lastly in the automatic discovery

00:38:45,680 --> 00:38:50,800
area to look at a module that is uh

00:38:47,760 --> 00:38:52,480
thankfully not maintained by me um

00:38:50,800 --> 00:38:54,480
is the pattern kit module which i

00:38:52,480 --> 00:38:57,440
believe is maintained by the folks at

00:38:54,480 --> 00:38:58,560
red hat and this kind of combines

00:38:57,440 --> 00:39:00,320
aspects of

00:38:58,560 --> 00:39:02,000
manual definition and automatic

00:39:00,320 --> 00:39:03,760
discovery um

00:39:02,000 --> 00:39:06,000
and then it depends on a schema

00:39:03,760 --> 00:39:07,920
definition file

00:39:06,000 --> 00:39:10,560
and that schema definition file it uses

00:39:07,920 --> 00:39:12,000
uh json schema

00:39:10,560 --> 00:39:15,520
has potentially some applications

00:39:12,000 --> 00:39:17,680
outside of drupal as well

00:39:15,520 --> 00:39:19,599
but at the end of the day it derives

00:39:17,680 --> 00:39:21,440
blocks from your pattern library

00:39:19,599 --> 00:39:24,960
components which you can use in

00:39:21,440 --> 00:39:27,599
blocks ui or in layout builder

00:39:24,960 --> 00:39:29,440
it supports a particular set of field

00:39:27,599 --> 00:39:31,839
types

00:39:29,440 --> 00:39:32,800
and then also in there's a drupal 7 and

00:39:31,839 --> 00:39:34,480
a drupal 8

00:39:32,800 --> 00:39:35,839
version of the module the last i looked

00:39:34,480 --> 00:39:38,960
at the d8

00:39:35,839 --> 00:39:40,320
version um it didn't have support for

00:39:38,960 --> 00:39:43,839
tokens but i believe that was something

00:39:40,320 --> 00:39:43,839
that was being worked on

00:39:46,720 --> 00:39:52,720
so as far as defining a

00:39:50,400 --> 00:39:55,200
patterns for pattern kit in your

00:39:52,720 --> 00:39:58,560
libraries.yaml file here

00:39:55,200 --> 00:40:00,240
you can create a pattern section that is

00:39:58,560 --> 00:40:02,880
just referencing the location

00:40:00,240 --> 00:40:04,319
of your patterns and in this case

00:40:02,880 --> 00:40:11,359
stating that

00:40:04,319 --> 00:40:14,400
it should be expecting twig templates

00:40:11,359 --> 00:40:17,599
and then that component needs to have a

00:40:14,400 --> 00:40:21,200
json file as we mentioned here

00:40:17,599 --> 00:40:22,079
following json schema most of what's

00:40:21,200 --> 00:40:24,960
happening here

00:40:22,079 --> 00:40:26,400
in the property section is the fields

00:40:24,960 --> 00:40:28,160
are being defined

00:40:26,400 --> 00:40:29,680
and also specifying you know what type

00:40:28,160 --> 00:40:32,240
of field it is

00:40:29,680 --> 00:40:33,359
um there's also a lot that you can do as

00:40:32,240 --> 00:40:35,839
far as defining

00:40:33,359 --> 00:40:39,839
settings for the component that can then

00:40:35,839 --> 00:40:39,839
later be configured in the blocks ui

00:40:42,160 --> 00:40:47,839
so here's an example of what the

00:40:45,200 --> 00:40:49,119
end result looks like in the block ui

00:40:47,839 --> 00:40:49,920
after you've found your pattern kit

00:40:49,119 --> 00:40:51,680
pattern

00:40:49,920 --> 00:40:54,079
there are all the fields that we

00:40:51,680 --> 00:40:55,520
specified and the settings

00:40:54,079 --> 00:40:57,760
which can all be configured and we'll

00:40:55,520 --> 00:41:00,160
give you the end result of our container

00:40:57,760 --> 00:41:00,160
component

00:41:03,760 --> 00:41:07,200
so one last piece of the puzzle that

00:41:06,079 --> 00:41:11,119
we'll talk about quickly are

00:41:07,200 --> 00:41:11,119
pre-packaged component solutions

00:41:13,359 --> 00:41:18,240
one example is the bolt design system

00:41:15,920 --> 00:41:20,160
which provides a number of ready-to-use

00:41:18,240 --> 00:41:20,960
web components that you can use with

00:41:20,160 --> 00:41:24,000
drupal

00:41:20,960 --> 00:41:27,119
it's a full design system and it also

00:41:24,000 --> 00:41:30,240
lets you selectively require

00:41:27,119 --> 00:41:32,319
individual components um so definitely

00:41:30,240 --> 00:41:34,880
worth checking out if you haven't

00:41:32,319 --> 00:41:36,400
but one really fully featured

00:41:34,880 --> 00:41:38,960
interesting way that you can

00:41:36,400 --> 00:41:41,920
pick and choose components that you need

00:41:38,960 --> 00:41:45,200
for your project

00:41:41,920 --> 00:41:47,760
similarly there's also the compony

00:41:45,200 --> 00:41:49,280
project which is a kind of a system for

00:41:47,760 --> 00:41:52,800
distributing components

00:41:49,280 --> 00:41:54,720
it has a theme and a gulp workflow and

00:41:52,800 --> 00:41:55,920
a series of components that you can

00:41:54,720 --> 00:41:59,520
download

00:41:55,920 --> 00:42:02,160
um it's not composer or npm driven

00:41:59,520 --> 00:42:03,119
at least last i looked into this which

00:42:02,160 --> 00:42:05,599
from my perspective

00:42:03,119 --> 00:42:07,839
is a limitation um because that's an

00:42:05,599 --> 00:42:10,160
important part of my workflow

00:42:07,839 --> 00:42:11,760
but again this concept of being able to

00:42:10,160 --> 00:42:13,359
distribute components that you can use

00:42:11,760 --> 00:42:17,839
easily with drupal

00:42:13,359 --> 00:42:17,839
is compelling

00:42:19,280 --> 00:42:22,960
and then there's also the single file

00:42:20,960 --> 00:42:24,640
components module which is a little bit

00:42:22,960 --> 00:42:28,000
different from the examples we've seen

00:42:24,640 --> 00:42:30,720
thus far it allows you to define

00:42:28,000 --> 00:42:31,680
drupal components in a view style single

00:42:30,720 --> 00:42:35,200
file

00:42:31,680 --> 00:42:37,920
definition so you can then use that

00:42:35,200 --> 00:42:39,599
like any template it can generate

00:42:37,920 --> 00:42:42,800
library definitions and

00:42:39,599 --> 00:42:45,200
you can derive blocks

00:42:42,800 --> 00:42:47,040
it doesn't exactly solve the integration

00:42:45,200 --> 00:42:49,119
problem that we've been talking about

00:42:47,040 --> 00:42:51,119
um but it definitely does provide an

00:42:49,119 --> 00:42:54,640
interesting way to

00:42:51,119 --> 00:42:59,839
package and reuse these components

00:42:54,640 --> 00:42:59,839
that can be made available to drupal

00:43:00,480 --> 00:43:06,240
so finally just to wrap up let's touch

00:43:02,480 --> 00:43:06,240
on the workflow a little bit

00:43:09,359 --> 00:43:13,920
so my dream workflow is really something

00:43:11,520 --> 00:43:16,560
similar to the experience you can have

00:43:13,920 --> 00:43:17,680
in react or other similar javascript

00:43:16,560 --> 00:43:19,599
frameworks

00:43:17,680 --> 00:43:22,319
where there are a variety of fully

00:43:19,599 --> 00:43:24,400
packaged and distributed components

00:43:22,319 --> 00:43:26,000
that you can easily install and then go

00:43:24,400 --> 00:43:28,640
ahead and import them in

00:43:26,000 --> 00:43:30,079
code and pass the data that you need

00:43:28,640 --> 00:43:33,839
into them and use them

00:43:30,079 --> 00:43:36,960
as you see fit so the question for me

00:43:33,839 --> 00:43:41,839
is how could we get there within

00:43:36,960 --> 00:43:41,839
uh drupal

00:43:42,000 --> 00:43:45,359
and it really feels like we have a lot

00:43:43,920 --> 00:43:48,560
of the pieces

00:43:45,359 --> 00:43:50,960
um but just don't have the

00:43:48,560 --> 00:43:52,160
kind of formal approach locked down

00:43:50,960 --> 00:43:56,079
quite yet

00:43:52,160 --> 00:43:56,560
um so i think that it'd be great for us

00:43:56,079 --> 00:43:59,520
to

00:43:56,560 --> 00:44:02,240
continue to improve the process for

00:43:59,520 --> 00:44:04,560
defining these mappings and definitions

00:44:02,240 --> 00:44:08,319
in the drupal user interface

00:44:04,560 --> 00:44:10,319
specifically focusing on layout builder

00:44:08,319 --> 00:44:11,599
i think it's important that it becomes

00:44:10,319 --> 00:44:14,880
easier to package

00:44:11,599 --> 00:44:16,560
and distribute individual components

00:44:14,880 --> 00:44:18,240
and i also think that some of the

00:44:16,560 --> 00:44:20,880
evolving approaches

00:44:18,240 --> 00:44:23,680
of ways for drupal to automatically

00:44:20,880 --> 00:44:26,319
discover uh components

00:44:23,680 --> 00:44:27,040
is worth continuing to invest in and

00:44:26,319 --> 00:44:30,400
then also

00:44:27,040 --> 00:44:32,079
uh it's i think worthwhile to continue

00:44:30,400 --> 00:44:35,200
following the evolution of

00:44:32,079 --> 00:44:38,079
web components as they might also be

00:44:35,200 --> 00:44:39,280
an attractive solution to this problem

00:44:38,079 --> 00:44:42,000
but most importantly

00:44:39,280 --> 00:44:44,000
uh we just need to keep building great

00:44:42,000 --> 00:44:51,839
looking component based sites

00:44:44,000 --> 00:44:51,839
using drupal and sharing our knowledge

00:44:51,920 --> 00:44:55,839
so i also just want to send a quick

00:44:53,440 --> 00:44:57,920
thanks and shout out to the many

00:44:55,839 --> 00:44:59,200
contributors to the drupal component

00:44:57,920 --> 00:45:01,359
ecosystem

00:44:59,200 --> 00:45:02,400
uh those who have uh created and

00:45:01,359 --> 00:45:04,160
contributed to the

00:45:02,400 --> 00:45:05,440
modules and approaches that i've talked

00:45:04,160 --> 00:45:07,599
about today

00:45:05,440 --> 00:45:10,240
uh those who've shared their knowledge

00:45:07,599 --> 00:45:13,359
there's amazing work being done

00:45:10,240 --> 00:45:16,000
that i've benefited from so much and

00:45:13,359 --> 00:45:16,880
you know happy to share some of my

00:45:16,000 --> 00:45:19,839
learnings and be

00:45:16,880 --> 00:45:19,839
a small part of it

00:45:22,720 --> 00:45:29,599
so thanks to everybody who has remotely

00:45:26,720 --> 00:45:31,200
watched uh this presentation uh hope to

00:45:29,599 --> 00:45:34,400
catch up with you online and hear more

00:45:31,200 --> 00:45:34,400
about what you're doing in the component

00:45:34,599 --> 00:45:37,599

YouTube URL: https://www.youtube.com/watch?v=2Cf_E6kx1Pc


