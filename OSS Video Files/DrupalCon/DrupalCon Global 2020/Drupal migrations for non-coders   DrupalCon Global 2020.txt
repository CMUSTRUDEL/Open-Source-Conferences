Title: Drupal migrations for non-coders   DrupalCon Global 2020
Publication date: 2020-08-25
Playlist: DrupalCon Global 2020
Description: 
	Migrate API makes it possible to write and execute migrations without having to write PHP code.
Captions: 
	00:00:05,279 --> 00:00:08,559
okay it is time already

00:00:06,720 --> 00:00:09,760
so thank you very much for joining us at

00:00:08,559 --> 00:00:11,840
rupakan global

00:00:09,760 --> 00:00:13,519
this is drupal migrations for non-coders

00:00:11,840 --> 00:00:15,920
my name is mauricio dinarde

00:00:13,519 --> 00:00:17,840
i go by dinnercon on the web and my

00:00:15,920 --> 00:00:19,840
pronouns are he him

00:00:17,840 --> 00:00:21,760
the slide deck is already available in

00:00:19,840 --> 00:00:22,880
that url and i'm going to share it at

00:00:21,760 --> 00:00:24,400
the end as well

00:00:22,880 --> 00:00:26,160
everything that i'm going to present is

00:00:24,400 --> 00:00:28,320
already available including the code

00:00:26,160 --> 00:00:30,080
examples

00:00:28,320 --> 00:00:32,079
that is my email address if you need to

00:00:30,080 --> 00:00:34,719
get it uh you know if you have questions

00:00:32,079 --> 00:00:37,840
after the session feel free to email me

00:00:34,719 --> 00:00:39,280
i am from nicaragua beautiful country 85

00:00:37,840 --> 00:00:41,360
degrees all year round

00:00:39,280 --> 00:00:42,480
so if you live in a cold place you can

00:00:41,360 --> 00:00:45,840
come down here

00:00:42,480 --> 00:00:46,239
beautiful nature you can go watch a lava

00:00:45,840 --> 00:00:48,079
lake

00:00:46,239 --> 00:00:50,879
like this one or you can go to the

00:00:48,079 --> 00:00:53,039
website for for a visual tour

00:00:50,879 --> 00:00:54,800
i collaborate with our organization cola

00:00:53,039 --> 00:00:56,960
guy which is based in boston

00:00:54,800 --> 00:00:58,960
we have you know members all over the

00:00:56,960 --> 00:01:01,760
place i myself in nicaragua

00:00:58,960 --> 00:01:02,800
and we specialize in migration support

00:01:01,760 --> 00:01:04,320
migration so i

00:01:02,800 --> 00:01:05,840
invite you to check our upcoming

00:01:04,320 --> 00:01:08,479
trainings next week

00:01:05,840 --> 00:01:10,640
but even you know after those dates we

00:01:08,479 --> 00:01:12,960
usually present trainings

00:01:10,640 --> 00:01:14,880
i am also very passionate about teaching

00:01:12,960 --> 00:01:16,400
so i have this personal project called

00:01:14,880 --> 00:01:19,439
understand drupal.com

00:01:16,400 --> 00:01:22,080
where i uh you know write articles

00:01:19,439 --> 00:01:24,479
and in the future videos as well about

00:01:22,080 --> 00:01:26,320
drupal in spanish english and french

00:01:24,479 --> 00:01:27,920
so if you speak any of those languages

00:01:26,320 --> 00:01:30,000
and want to learn more about drupal and

00:01:27,920 --> 00:01:33,040
particularly about drupal migrations

00:01:30,000 --> 00:01:34,159
i have been writing a lot about that in

00:01:33,040 --> 00:01:37,600
particular

00:01:34,159 --> 00:01:38,880
uh i wrote a 31 a series of articles

00:01:37,600 --> 00:01:41,040
about migrations

00:01:38,880 --> 00:01:43,680
and i also have a course on the topic so

00:01:41,040 --> 00:01:45,920
i invite you to check it out

00:01:43,680 --> 00:01:47,680
and let's get it you know to the topic

00:01:45,920 --> 00:01:49,360
uh we're going to talk about drupal

00:01:47,680 --> 00:01:49,840
migrations and even though we're going

00:01:49,360 --> 00:01:51,360
to

00:01:49,840 --> 00:01:53,680
approach it from a non-developer

00:01:51,360 --> 00:01:54,000
perspective if you have some experience

00:01:53,680 --> 00:01:56,719
from

00:01:54,000 --> 00:01:57,520
with other platforms in particular

00:01:56,719 --> 00:02:00,000
anything that is

00:01:57,520 --> 00:02:01,280
really related to etl or extract

00:02:00,000 --> 00:02:03,759
transformer load

00:02:01,280 --> 00:02:04,560
if you are familiar with that drupal

00:02:03,759 --> 00:02:07,520
migrations

00:02:04,560 --> 00:02:08,319
is an implementation of that api so feel

00:02:07,520 --> 00:02:10,000
free to

00:02:08,319 --> 00:02:11,360
you know if you have knowledge about

00:02:10,000 --> 00:02:14,560
this already you

00:02:11,360 --> 00:02:16,400
it applies as well and i like to

00:02:14,560 --> 00:02:19,840
explain things by giving real life

00:02:16,400 --> 00:02:22,239
examples so let's have a

00:02:19,840 --> 00:02:22,959
a look at how we would use the migrate

00:02:22,239 --> 00:02:26,319
api

00:02:22,959 --> 00:02:28,000
with an analogy of making breath so

00:02:26,319 --> 00:02:30,239
when you want to make breath you need

00:02:28,000 --> 00:02:33,280
some source ingredients or materials

00:02:30,239 --> 00:02:35,280
so in drupal migrate api

00:02:33,280 --> 00:02:37,519
that corresponds to source plugins that

00:02:35,280 --> 00:02:40,560
means you need to have a source of your

00:02:37,519 --> 00:02:43,840
data is it a xml file a json file

00:02:40,560 --> 00:02:47,760
a csv file a sql database and so on

00:02:43,840 --> 00:02:49,760
so you need some source of you know

00:02:47,760 --> 00:02:51,360
raw materials or in this case the data

00:02:49,760 --> 00:02:53,040
that you want to get into drupal

00:02:51,360 --> 00:02:55,200
and those are provided by the source

00:02:53,040 --> 00:02:57,360
plugins and it corresponds to the load

00:02:55,200 --> 00:02:59,040
operation in the etl pattern

00:02:57,360 --> 00:03:00,640
after you have collected everything that

00:02:59,040 --> 00:03:03,519
you want to migrate into drupal

00:03:00,640 --> 00:03:04,640
you need to process it and transform it

00:03:03,519 --> 00:03:07,280
this is

00:03:04,640 --> 00:03:08,080
corresponds to the transform operation

00:03:07,280 --> 00:03:10,000
in drupal

00:03:08,080 --> 00:03:11,920
is provided by process plugins and we're

00:03:10,000 --> 00:03:14,159
going to see some examples of that later

00:03:11,920 --> 00:03:16,560
but basically it's a way to mix and

00:03:14,159 --> 00:03:18,159
match for example if you have

00:03:16,560 --> 00:03:19,680
games that you want to combine like

00:03:18,159 --> 00:03:21,280
different first name and last name and

00:03:19,680 --> 00:03:24,720
you want to combine them in a single

00:03:21,280 --> 00:03:26,640
uh column or a single fill in drupal

00:03:24,720 --> 00:03:28,640
you using process plugins is how you

00:03:26,640 --> 00:03:30,400
would you are going to do that

00:03:28,640 --> 00:03:33,120
and basically any transformation that

00:03:30,400 --> 00:03:35,760
you need to do this is how you do it

00:03:33,120 --> 00:03:37,360
using process plugins and the load

00:03:35,760 --> 00:03:39,440
operation in the itl pattern

00:03:37,360 --> 00:03:41,920
corresponds to the destination plugins

00:03:39,440 --> 00:03:43,840
and this is how you instruct drupal what

00:03:41,920 --> 00:03:46,000
entities do you want to create do you

00:03:43,840 --> 00:03:47,920
want to create users or notes or

00:03:46,000 --> 00:03:50,159
files or media entities or paragraphs

00:03:47,920 --> 00:03:51,680
and so on so this is how you install

00:03:50,159 --> 00:03:53,519
you know this thing that i already

00:03:51,680 --> 00:03:56,239
collected and processed

00:03:53,519 --> 00:03:56,799
put it in this basket or in this shelf

00:03:56,239 --> 00:03:59,120
and

00:03:56,799 --> 00:04:00,560
this is destination plugins and all of

00:03:59,120 --> 00:04:02,000
this we're going to see practical

00:04:00,560 --> 00:04:04,159
examples

00:04:02,000 --> 00:04:05,680
so when i started working with

00:04:04,159 --> 00:04:07,920
migrations i had been doing drupal

00:04:05,680 --> 00:04:09,840
development for about five years and

00:04:07,920 --> 00:04:11,280
even writing code and so on so i

00:04:09,840 --> 00:04:12,400
remember that i thought you know this is

00:04:11,280 --> 00:04:14,480
going to be easy

00:04:12,400 --> 00:04:16,079
and then i was from with so many words

00:04:14,480 --> 00:04:19,280
so many things that were very

00:04:16,079 --> 00:04:20,799
was were very confusing to me and

00:04:19,280 --> 00:04:22,400
i was a little bit frustrated you know

00:04:20,799 --> 00:04:25,040
in the end i just wanted to move

00:04:22,400 --> 00:04:26,560
some content into my website and

00:04:25,040 --> 00:04:28,560
everything started to click

00:04:26,560 --> 00:04:30,160
when i started to map all these

00:04:28,560 --> 00:04:31,120
buzzwords that i didn't understand at

00:04:30,160 --> 00:04:32,720
the beginning

00:04:31,120 --> 00:04:34,960
into these process plugins and

00:04:32,720 --> 00:04:37,040
particularly into one of these

00:04:34,960 --> 00:04:38,479
categories this is a source a process or

00:04:37,040 --> 00:04:41,520
a destination plugin

00:04:38,479 --> 00:04:42,240
because in every migration you are only

00:04:41,520 --> 00:04:44,639
going to have

00:04:42,240 --> 00:04:46,240
one source and one destination so

00:04:44,639 --> 00:04:48,800
instead of having to

00:04:46,240 --> 00:04:50,479
think about 15 things uh i only care

00:04:48,800 --> 00:04:53,280
about seven for example

00:04:50,479 --> 00:04:54,160
using the the process that the processes

00:04:53,280 --> 00:04:56,320
that we

00:04:54,160 --> 00:04:58,160
see in in on the screen right now so

00:04:56,320 --> 00:04:58,960
let's say i'm going to work only from

00:04:58,160 --> 00:05:01,039
csv

00:04:58,960 --> 00:05:03,039
and i'm going to create users so i don't

00:05:01,039 --> 00:05:04,720
need to worry about any other source or

00:05:03,039 --> 00:05:07,840
any other destination

00:05:04,720 --> 00:05:10,880
in between i am going to use one two

00:05:07,840 --> 00:05:12,160
five you know as many process plugins as

00:05:10,880 --> 00:05:14,400
i need

00:05:12,160 --> 00:05:16,560
one thing to note and clarify is that

00:05:14,400 --> 00:05:18,160
when i say a migration can only have one

00:05:16,560 --> 00:05:20,160
source and one destination

00:05:18,160 --> 00:05:22,560
that is like for example if you want to

00:05:20,160 --> 00:05:24,400
migrate the article content type or the

00:05:22,560 --> 00:05:26,160
basic page content type but in your

00:05:24,400 --> 00:05:28,400
migration project you're actually going

00:05:26,160 --> 00:05:30,960
to have a lot a lot of migrations

00:05:28,400 --> 00:05:32,720
so some of them might be creating notes

00:05:30,960 --> 00:05:34,240
others might be creating users

00:05:32,720 --> 00:05:36,320
and in the example that we're going to

00:05:34,240 --> 00:05:38,240
see later uh

00:05:36,320 --> 00:05:39,600
we are going to see that you know every

00:05:38,240 --> 00:05:40,560
migration has one source and one

00:05:39,600 --> 00:05:42,560
destination

00:05:40,560 --> 00:05:44,479
but to migrate the whole project we're

00:05:42,560 --> 00:05:47,360
going to be using different files

00:05:44,479 --> 00:05:49,280
so that's one thing to take into account

00:05:47,360 --> 00:05:50,880
so this is a very simple example of a

00:05:49,280 --> 00:05:53,759
transformation that you want to do

00:05:50,880 --> 00:05:55,039
let's say that you have a csv file with

00:05:53,759 --> 00:05:57,759
first name and last name

00:05:55,039 --> 00:05:58,880
as separating columns and in your

00:05:57,759 --> 00:06:01,120
destination you you

00:05:58,880 --> 00:06:03,280
you have a node and you have a name

00:06:01,120 --> 00:06:05,199
field but you want to put them together

00:06:03,280 --> 00:06:06,960
so there is a process problem that we're

00:06:05,199 --> 00:06:08,960
going to see an example of this later

00:06:06,960 --> 00:06:11,280
that is going to be able to put them

00:06:08,960 --> 00:06:12,400
together and go from source to process

00:06:11,280 --> 00:06:15,919
to destination

00:06:12,400 --> 00:06:15,919
and follow that workflow

00:06:16,080 --> 00:06:20,080
before jumping into the examples there

00:06:18,720 --> 00:06:23,520
these are the most common

00:06:20,080 --> 00:06:25,199
things that i uh see people

00:06:23,520 --> 00:06:26,560
you know having difficulties when i

00:06:25,199 --> 00:06:28,639
started with migrations

00:06:26,560 --> 00:06:30,560
the first one is that any migration in

00:06:28,639 --> 00:06:32,880
drupal is a two-step process

00:06:30,560 --> 00:06:34,400
first you need to write the general file

00:06:32,880 --> 00:06:36,000
the german definition file

00:06:34,400 --> 00:06:37,600
and after you have the file you need to

00:06:36,000 --> 00:06:39,919
execute it and

00:06:37,600 --> 00:06:41,440
this is where things started to get a

00:06:39,919 --> 00:06:42,560
little bit complicated or confusing

00:06:41,440 --> 00:06:44,720
because

00:06:42,560 --> 00:06:46,160
to execute the migration you have two

00:06:44,720 --> 00:06:47,759
options

00:06:46,160 --> 00:06:49,280
from the command line if it is a

00:06:47,759 --> 00:06:52,160
migration defined as code or

00:06:49,280 --> 00:06:55,520
configuration or from the user interface

00:06:52,160 --> 00:06:58,560
and and we're going to see what this is

00:06:55,520 --> 00:07:01,199
so this is a very simple migration

00:06:58,560 --> 00:07:02,240
and this is like a fully working example

00:07:01,199 --> 00:07:04,560
this is what a

00:07:02,240 --> 00:07:05,599
migration definition file looks like it

00:07:04,560 --> 00:07:07,360
has an id

00:07:05,599 --> 00:07:09,360
which i uniquely identified each

00:07:07,360 --> 00:07:12,560
migration in my whole project

00:07:09,360 --> 00:07:15,280
it has a label that allows me to

00:07:12,560 --> 00:07:16,000
identify this migration in the ui and in

00:07:15,280 --> 00:07:18,720
the command line

00:07:16,000 --> 00:07:19,039
if i were to use that and then we saw

00:07:18,720 --> 00:07:21,280
the

00:07:19,039 --> 00:07:23,520
three step of the ipl process my source

00:07:21,280 --> 00:07:25,280
my process and my destination

00:07:23,520 --> 00:07:26,960
uh in my source in this case i am

00:07:25,280 --> 00:07:29,440
reading from a csv file

00:07:26,960 --> 00:07:30,720
and as you can see it's like three lines

00:07:29,440 --> 00:07:32,880
and with that i am

00:07:30,720 --> 00:07:34,960
able to read from csv file in my

00:07:32,880 --> 00:07:38,160
destinations i'm saying i want to create

00:07:34,960 --> 00:07:39,919
notes of type ud stuff this

00:07:38,160 --> 00:07:41,919
default bundle refers to the content

00:07:39,919 --> 00:07:42,560
type it can be article it can be basic

00:07:41,919 --> 00:07:45,039
page

00:07:42,560 --> 00:07:46,080
in this particular case it is called uds

00:07:45,039 --> 00:07:48,000
staff

00:07:46,080 --> 00:07:49,759
and then in my process section is where

00:07:48,000 --> 00:07:50,560
i do the mapping so in this case i am

00:07:49,759 --> 00:07:53,840
saying

00:07:50,560 --> 00:07:56,960
the title field of the node i want to

00:07:53,840 --> 00:07:59,440
set it to whatever is the first name

00:07:56,960 --> 00:08:00,160
value of my csv file i have a column in

00:07:59,440 --> 00:08:03,199
my csv

00:08:00,160 --> 00:08:07,120
file called c first name so on your left

00:08:03,199 --> 00:08:09,039
you have the destination either property

00:08:07,120 --> 00:08:10,240
like the node title or field let's say

00:08:09,039 --> 00:08:12,240
the image field

00:08:10,240 --> 00:08:13,520
and on the right you have whatever comes

00:08:12,240 --> 00:08:17,120
from your source

00:08:13,520 --> 00:08:19,199
um now we we

00:08:17,120 --> 00:08:20,639
said that migrations can be defined as

00:08:19,199 --> 00:08:23,039
code and configuration

00:08:20,639 --> 00:08:24,479
and this is very important to understand

00:08:23,039 --> 00:08:26,400
migration defines code

00:08:24,479 --> 00:08:28,319
they work out of the box with drupal

00:08:26,400 --> 00:08:29,440
core you don't need anything else to

00:08:28,319 --> 00:08:32,479
work with them

00:08:29,440 --> 00:08:33,519
and they in order to use them you create

00:08:32,479 --> 00:08:35,839
a custom module

00:08:33,519 --> 00:08:37,360
and in that custom module you have a

00:08:35,839 --> 00:08:40,959
migrations folder

00:08:37,360 --> 00:08:42,719
and then the name of the file itself is

00:08:40,959 --> 00:08:45,440
going to be just like the id

00:08:42,719 --> 00:08:48,240
dot yml you can say you know ud staff

00:08:45,440 --> 00:08:51,360
csv image.yml

00:08:48,240 --> 00:08:53,680
if you make any change for that

00:08:51,360 --> 00:08:55,360
file you need to reveal the caches for

00:08:53,680 --> 00:08:57,040
those changes to take effect let's say

00:08:55,360 --> 00:09:00,399
that after migrating the

00:08:57,040 --> 00:09:02,320
title i want to migrate uh

00:09:00,399 --> 00:09:04,080
a field then you need to clear the

00:09:02,320 --> 00:09:05,839
caches for those changes to take effect

00:09:04,080 --> 00:09:07,120
and many times you also need to roll

00:09:05,839 --> 00:09:08,640
back and import again

00:09:07,120 --> 00:09:10,720
and we're going to see an example of

00:09:08,640 --> 00:09:13,360
this in a moment

00:09:10,720 --> 00:09:15,040
and in order to execute the migration

00:09:13,360 --> 00:09:16,240
remember that this is a two-step process

00:09:15,040 --> 00:09:18,800
you have the file already

00:09:16,240 --> 00:09:20,320
but you need also need to execute it so

00:09:18,800 --> 00:09:22,560
you do it using

00:09:20,320 --> 00:09:23,920
the command line and there is a model

00:09:22,560 --> 00:09:26,160
called migrate tools that

00:09:23,920 --> 00:09:28,240
provides rush commands to be able to

00:09:26,160 --> 00:09:30,640
execute those migrations

00:09:28,240 --> 00:09:31,279
another option is to have migrations

00:09:30,640 --> 00:09:33,839
defined

00:09:31,279 --> 00:09:35,760
as configuration entities and for this

00:09:33,839 --> 00:09:39,680
you need the migrate plus module

00:09:35,760 --> 00:09:42,000
enable and install on your website here

00:09:39,680 --> 00:09:43,600
the place where you put the files is

00:09:42,000 --> 00:09:45,600
different it's going to be config

00:09:43,600 --> 00:09:47,680
installed inside your custom module

00:09:45,600 --> 00:09:49,440
and the main pattern is also different

00:09:47,680 --> 00:09:50,560
it's going to be migrate plus that

00:09:49,440 --> 00:09:52,560
migration

00:09:50,560 --> 00:09:54,640
then the id of your migration and then

00:09:52,560 --> 00:09:56,800
yml

00:09:54,640 --> 00:09:58,320
because these are configuration entities

00:09:56,800 --> 00:10:00,560
this is basically how

00:09:58,320 --> 00:10:01,519
you manage any other configuration in

00:10:00,560 --> 00:10:03,440
your website

00:10:01,519 --> 00:10:05,760
if you want to make any changes you need

00:10:03,440 --> 00:10:08,959
to import or sync again

00:10:05,760 --> 00:10:10,800
there are many ways to do that there are

00:10:08,959 --> 00:10:12,160
commands that allow you to do a partial

00:10:10,800 --> 00:10:14,800
configuration import

00:10:12,160 --> 00:10:16,560
there is the migrate config devel module

00:10:14,800 --> 00:10:19,200
that allows you to

00:10:16,560 --> 00:10:20,240
automatically import any changes as soon

00:10:19,200 --> 00:10:22,480
as you make them

00:10:20,240 --> 00:10:24,880
or you can use the interface or you know

00:10:22,480 --> 00:10:25,440
any cmi related module that allows you

00:10:24,880 --> 00:10:27,920
to

00:10:25,440 --> 00:10:29,680
you know import again any changes will

00:10:27,920 --> 00:10:31,600
help you with this

00:10:29,680 --> 00:10:32,959
and only migration in finance

00:10:31,600 --> 00:10:34,880
configurations

00:10:32,959 --> 00:10:37,040
are able to be executed from the user

00:10:34,880 --> 00:10:38,000
interface and that is using the migrate

00:10:37,040 --> 00:10:40,320
tools modules

00:10:38,000 --> 00:10:41,760
which we're going to see later again

00:10:40,320 --> 00:10:42,720
very important to understand the

00:10:41,760 --> 00:10:45,120
difference between

00:10:42,720 --> 00:10:46,959
code and configuration migrations

00:10:45,120 --> 00:10:48,880
because if you put them in the wrong

00:10:46,959 --> 00:10:50,240
directory or with the wrong name or you

00:10:48,880 --> 00:10:52,560
are using the wrong

00:10:50,240 --> 00:10:54,000
modules you will not be able to execute

00:10:52,560 --> 00:10:56,959
them

00:10:54,000 --> 00:10:57,760
and in general some tips before jumping

00:10:56,959 --> 00:11:01,920
into the

00:10:57,760 --> 00:11:05,279
example start from an existing migration

00:11:01,920 --> 00:11:07,920
it is often the case that you know you

00:11:05,279 --> 00:11:08,720
you have some use case that might be

00:11:07,920 --> 00:11:12,640
common

00:11:08,720 --> 00:11:14,320
so you just like look for an example

00:11:12,640 --> 00:11:16,240
make sure that the example works as

00:11:14,320 --> 00:11:18,720
expected and then start making your

00:11:16,240 --> 00:11:22,079
changes to adapt to your specific needs

00:11:18,720 --> 00:11:23,200
uh in the 31 articles series that i

00:11:22,079 --> 00:11:25,519
mentioned before

00:11:23,200 --> 00:11:26,640
there are about 20 examples of many

00:11:25,519 --> 00:11:28,320
different things

00:11:26,640 --> 00:11:29,680
that you can just literally copy and

00:11:28,320 --> 00:11:33,040
paste and from them

00:11:29,680 --> 00:11:34,640
start modifying to your specific needs

00:11:33,040 --> 00:11:36,880
in general read the official

00:11:34,640 --> 00:11:38,640
documentation in my humble opinion

00:11:36,880 --> 00:11:41,040
the migrate api is one of the best

00:11:38,640 --> 00:11:44,560
documents subsystem in

00:11:41,040 --> 00:11:45,040
drupal as a whole pay close attention to

00:11:44,560 --> 00:11:47,760
the

00:11:45,040 --> 00:11:49,440
syntax of your general definition files

00:11:47,760 --> 00:11:51,839
even like an extra space

00:11:49,440 --> 00:11:53,200
or if you remove a space or the

00:11:51,839 --> 00:11:55,839
indentation is wrong

00:11:53,200 --> 00:11:57,920
the whole migration might fail and that

00:11:55,839 --> 00:11:59,920
is a common source of frustrations and

00:11:57,920 --> 00:12:02,639
sometimes the errors that you get

00:11:59,920 --> 00:12:03,680
are not very descriptive so make sure

00:12:02,639 --> 00:12:06,959
that

00:12:03,680 --> 00:12:08,480
when working with uh migrations you know

00:12:06,959 --> 00:12:10,160
the white space is the

00:12:08,480 --> 00:12:12,000
syntax that you use in your general

00:12:10,160 --> 00:12:14,959
files is proper

00:12:12,000 --> 00:12:16,000
when having a big migration go one field

00:12:14,959 --> 00:12:18,720
at a time

00:12:16,000 --> 00:12:19,760
because if you have let's say 10 fields

00:12:18,720 --> 00:12:22,480
at once

00:12:19,760 --> 00:12:23,120
and something breaks you might not know

00:12:22,480 --> 00:12:25,279
when it

00:12:23,120 --> 00:12:28,639
you know in which of the 10 there is a

00:12:25,279 --> 00:12:30,560
problem but if you go one feet at a time

00:12:28,639 --> 00:12:31,760
you are making sure that any progress

00:12:30,560 --> 00:12:34,160
that you make

00:12:31,760 --> 00:12:35,519
is useful is working and then you can go

00:12:34,160 --> 00:12:38,639
to the next one

00:12:35,519 --> 00:12:40,959
if you are familiar with code

00:12:38,639 --> 00:12:42,720
you can commit every step in the way

00:12:40,959 --> 00:12:43,600
again like if something breaks at some

00:12:42,720 --> 00:12:45,279
point you can

00:12:43,600 --> 00:12:48,000
go back in the history of your git

00:12:45,279 --> 00:12:51,040
repository and

00:12:48,000 --> 00:12:53,519
come back to this in a working state

00:12:51,040 --> 00:12:54,399
another thing is that not everything

00:12:53,519 --> 00:12:57,760
needs to be

00:12:54,399 --> 00:12:58,320
modified in the migrate api you might do

00:12:57,760 --> 00:13:00,399
some

00:12:58,320 --> 00:13:01,600
cleanup or preparation of the data

00:13:00,399 --> 00:13:04,560
before or

00:13:01,600 --> 00:13:05,680
after the migration sometimes there are

00:13:04,560 --> 00:13:08,320
eight cases

00:13:05,680 --> 00:13:08,959
that you know you can spend hours if not

00:13:08,320 --> 00:13:10,880
days

00:13:08,959 --> 00:13:12,320
trying to make a you know to come up

00:13:10,880 --> 00:13:15,040
with a migration that

00:13:12,320 --> 00:13:15,440
takes care of everything perfectly or

00:13:15,040 --> 00:13:17,680
you know

00:13:15,440 --> 00:13:19,440
you spend an hour before or after

00:13:17,680 --> 00:13:20,160
preparing your data or cleaning up your

00:13:19,440 --> 00:13:22,399
data

00:13:20,160 --> 00:13:23,920
and you save some development time so

00:13:22,399 --> 00:13:25,120
not everything is to be done in the

00:13:23,920 --> 00:13:28,399
migrate api

00:13:25,120 --> 00:13:31,040
and if you need help uh the migrate api

00:13:28,399 --> 00:13:32,880
offers a lot of support in slack in the

00:13:31,040 --> 00:13:34,959
pound migration channel so i invite you

00:13:32,880 --> 00:13:37,360
to go there

00:13:34,959 --> 00:13:39,040
and this is probably the most important

00:13:37,360 --> 00:13:41,680
thing that i can give you

00:13:39,040 --> 00:13:42,720
uh understand that there is a you know

00:13:41,680 --> 00:13:45,360
leah

00:13:42,720 --> 00:13:47,360
author of css secret says understanding

00:13:45,360 --> 00:13:49,680
the process of finding a solution

00:13:47,360 --> 00:13:51,680
is far more valuable than the solution

00:13:49,680 --> 00:13:53,839
itself and i mentioned this because

00:13:51,680 --> 00:13:56,079
the migrate api is just like a tool set

00:13:53,839 --> 00:13:58,079
you have so many tools that you can

00:13:56,079 --> 00:14:00,000
use for many different purposes and it

00:13:58,079 --> 00:14:02,720
is up to you to combine them

00:14:00,000 --> 00:14:03,680
into something that works for you take

00:14:02,720 --> 00:14:06,399
your time

00:14:03,680 --> 00:14:06,880
to read to understand to play with

00:14:06,399 --> 00:14:09,600
different

00:14:06,880 --> 00:14:10,399
examples to break on purpose things that

00:14:09,600 --> 00:14:12,560
are working

00:14:10,399 --> 00:14:14,000
so you get familiarized with the errors

00:14:12,560 --> 00:14:17,199
and once you understand

00:14:14,000 --> 00:14:17,839
you know why things work and when they

00:14:17,199 --> 00:14:20,079
break

00:14:17,839 --> 00:14:23,199
why they break you're going to have a

00:14:20,079 --> 00:14:26,560
much easier time working with migrations

00:14:23,199 --> 00:14:31,839
so i'm going to do a live demo of course

00:14:26,560 --> 00:14:31,839
nothing can go wrong so bear with me

00:14:32,480 --> 00:14:38,160
so um before starting with the migration

00:14:36,639 --> 00:14:40,720
itself

00:14:38,160 --> 00:14:42,160
it is very very important to understand

00:14:40,720 --> 00:14:43,920
your source

00:14:42,160 --> 00:14:46,480
in this case i am going to be migrating

00:14:43,920 --> 00:14:47,040
from a csv file so i need to know what

00:14:46,480 --> 00:14:49,920
is the

00:14:47,040 --> 00:14:50,880
structure of my csv file in this case i

00:14:49,920 --> 00:14:54,320
can see there are

00:14:50,880 --> 00:14:56,560
you know a a row of headers

00:14:54,320 --> 00:14:57,760
in this case a staff id first name last

00:14:56,560 --> 00:15:00,079
name and so on

00:14:57,760 --> 00:15:02,399
and then i have like one record for each

00:15:00,079 --> 00:15:02,399
of them

00:15:02,480 --> 00:15:08,560
yes the structure that i need so

00:15:05,600 --> 00:15:10,839
always always understand the source in

00:15:08,560 --> 00:15:14,160
this case my csd file

00:15:10,839 --> 00:15:17,440
um so this is

00:15:14,160 --> 00:15:19,199
the example that i'm going to be

00:15:17,440 --> 00:15:21,360
starting with

00:15:19,199 --> 00:15:22,800
as as you can see all that you need is

00:15:21,360 --> 00:15:25,760
an id a label

00:15:22,800 --> 00:15:26,000
a source a process and a destination so

00:15:25,760 --> 00:15:28,959
this

00:15:26,000 --> 00:15:30,399
is the very basic uh that you that you

00:15:28,959 --> 00:15:33,360
need

00:15:30,399 --> 00:15:34,959
my id needs to be unique across the

00:15:33,360 --> 00:15:37,839
whole system

00:15:34,959 --> 00:15:38,480
um and remember the spaces that i

00:15:37,839 --> 00:15:41,519
mentioned

00:15:38,480 --> 00:15:43,279
before if i were to remove this space it

00:15:41,519 --> 00:15:43,680
will break my whole migration will break

00:15:43,279 --> 00:15:47,120
so

00:15:43,680 --> 00:15:49,600
be mindful of that then

00:15:47,120 --> 00:15:51,199
my i am using a plugin called csb this

00:15:49,600 --> 00:15:52,480
is provided by a module called my

00:15:51,199 --> 00:15:54,399
resource csb

00:15:52,480 --> 00:15:56,240
and then i need to provide a path to my

00:15:54,399 --> 00:15:58,000
file so this is the path

00:15:56,240 --> 00:15:59,279
if i were to inspect the hierarchy of my

00:15:58,000 --> 00:16:01,199
drupal installation

00:15:59,279 --> 00:16:02,320
this is where i'm going to find it and

00:16:01,199 --> 00:16:05,680
then

00:16:02,320 --> 00:16:08,240
it expects an id key with a list of

00:16:05,680 --> 00:16:09,120
columns in my csv file that uniquely

00:16:08,240 --> 00:16:11,199
represent

00:16:09,120 --> 00:16:12,320
uh each record in this case i have a

00:16:11,199 --> 00:16:15,440
staff id

00:16:12,320 --> 00:16:16,959
and spaces are important and if you have

00:16:15,440 --> 00:16:19,759
a spaces you need to put

00:16:16,959 --> 00:16:21,519
you need to put quotes around it

00:16:19,759 --> 00:16:22,480
uppercase and lowercase are also

00:16:21,519 --> 00:16:26,000
important

00:16:22,480 --> 00:16:28,079
and something that is not obvious here

00:16:26,000 --> 00:16:29,680
but different version of modules might

00:16:28,079 --> 00:16:32,480
introduce changes in the

00:16:29,680 --> 00:16:33,440
configuration so this is the latest

00:16:32,480 --> 00:16:36,959
version which is

00:16:33,440 --> 00:16:40,000
3.x if you were to use version 2.x

00:16:36,959 --> 00:16:42,480
this value is not ids it's actually keys

00:16:40,000 --> 00:16:43,680
so be mindful of the versions of the

00:16:42,480 --> 00:16:46,240
modules

00:16:43,680 --> 00:16:48,000
drupal everything that you use you

00:16:46,240 --> 00:16:50,480
should be using the latest version

00:16:48,000 --> 00:16:52,560
unless you have a very particular reason

00:16:50,480 --> 00:16:54,959
why not to do that

00:16:52,560 --> 00:16:56,320
in this case i'm creating notes this is

00:16:54,959 --> 00:16:56,880
how you say that you want to create

00:16:56,320 --> 00:16:59,040
notes

00:16:56,880 --> 00:17:00,800
and this is the content type uh most of

00:16:59,040 --> 00:17:02,560
the time

00:17:00,800 --> 00:17:04,000
the migrated api is going to be working

00:17:02,560 --> 00:17:06,079
with machine names so this is the

00:17:04,000 --> 00:17:09,520
machine name of my content type

00:17:06,079 --> 00:17:12,160
and then i am saying uh the title

00:17:09,520 --> 00:17:12,720
of my note populated with the first name

00:17:12,160 --> 00:17:15,760
column

00:17:12,720 --> 00:17:19,360
of my csv file so

00:17:15,760 --> 00:17:21,600
now that i have my migration files

00:17:19,360 --> 00:17:23,039
and if i see the structure i can see

00:17:21,600 --> 00:17:25,919
that i have my custom module

00:17:23,039 --> 00:17:27,919
i have a migrations folder and that's

00:17:25,919 --> 00:17:30,799
the name that i define

00:17:27,919 --> 00:17:31,679
you know i already have my module

00:17:30,799 --> 00:17:34,320
enabled

00:17:31,679 --> 00:17:35,840
so i'm i don't need to enable it again

00:17:34,320 --> 00:17:38,799
i'm going to be running

00:17:35,840 --> 00:17:39,760
uh the migration with brush just to save

00:17:38,799 --> 00:17:42,880
some time

00:17:39,760 --> 00:17:44,720
but you can do it from the

00:17:42,880 --> 00:17:46,160
from the user interface if it is the

00:17:44,720 --> 00:17:47,039
finance code and i'm going to show an

00:17:46,160 --> 00:17:49,679
example of that

00:17:47,039 --> 00:17:50,720
in a moment so this is executing the

00:17:49,679 --> 00:17:54,480
migration

00:17:50,720 --> 00:17:54,480
if i go to the website now

00:17:54,880 --> 00:18:02,799
i can check that

00:17:59,280 --> 00:18:03,360
i have this notes migrated uh what i see

00:18:02,799 --> 00:18:05,840
here

00:18:03,360 --> 00:18:06,640
that i see more information is because i

00:18:05,840 --> 00:18:09,520
already have

00:18:06,640 --> 00:18:10,640
uh migrated other content so for example

00:18:09,520 --> 00:18:14,880
if i want to start from

00:18:10,640 --> 00:18:19,280
scratch i go back to the command line

00:18:14,880 --> 00:18:19,280
and do a rollback operation

00:18:20,400 --> 00:18:23,760
and i say i want to roll back everything

00:18:22,559 --> 00:18:24,160
and this is very common when you're

00:18:23,760 --> 00:18:26,480
doing

00:18:24,160 --> 00:18:27,760
a migration you are going to often be

00:18:26,480 --> 00:18:29,440
like importing

00:18:27,760 --> 00:18:31,600
and reverting importing and reverting

00:18:29,440 --> 00:18:34,160
and so on so

00:18:31,600 --> 00:18:36,240
in this case if i just execute my one

00:18:34,160 --> 00:18:39,760
migration that i defined before

00:18:36,240 --> 00:18:42,160
i can see that i am getting the

00:18:39,760 --> 00:18:43,039
the results that i am expecting

00:18:42,160 --> 00:18:46,720
something

00:18:43,039 --> 00:18:50,080
weird is happening here and it is that

00:18:46,720 --> 00:18:52,799
i only said in my migration

00:18:50,080 --> 00:18:54,480
that i want to migrate the first name

00:18:52,799 --> 00:18:57,120
but i'm getting something else

00:18:54,480 --> 00:18:57,679
so the very first thing that you know

00:18:57,120 --> 00:19:00,320
you do

00:18:57,679 --> 00:19:02,080
if you are getting a a a result that

00:19:00,320 --> 00:19:04,400
you're not expecting

00:19:02,080 --> 00:19:05,840
is like making sure that you are working

00:19:04,400 --> 00:19:08,160
with the latest version

00:19:05,840 --> 00:19:09,520
of your files in this case i'm going to

00:19:08,160 --> 00:19:11,440
rebuild my cache because it's a

00:19:09,520 --> 00:19:14,240
migration defined as code

00:19:11,440 --> 00:19:14,240
i'm going to

00:19:14,960 --> 00:19:20,400
roll back migration sometimes you can

00:19:18,160 --> 00:19:23,760
use like

00:19:20,400 --> 00:19:24,559
shortcuts or url aliases for you know

00:19:23,760 --> 00:19:27,039
rolling back or

00:19:24,559 --> 00:19:27,039
important

00:19:28,480 --> 00:19:34,880
and if i refresh i can see that now i'm

00:19:32,559 --> 00:19:36,400
getting the results from my csv file

00:19:34,880 --> 00:19:38,240
the reason why i was getting something

00:19:36,400 --> 00:19:40,240
different is because

00:19:38,240 --> 00:19:41,440
i hadn't i had a previous version of

00:19:40,240 --> 00:19:44,160
that file loaded

00:19:41,440 --> 00:19:45,280
into my drupal site and that's why it

00:19:44,160 --> 00:19:48,080
was you know

00:19:45,280 --> 00:19:49,520
showing something else so by doing this

00:19:48,080 --> 00:19:51,520
i already have

00:19:49,520 --> 00:19:53,200
a migration working i am already

00:19:51,520 --> 00:19:55,120
importing content and if i were to roll

00:19:53,200 --> 00:19:58,240
back the content would disappear

00:19:55,120 --> 00:19:58,799
so let's say that i want to do something

00:19:58,240 --> 00:20:01,280
else

00:19:58,799 --> 00:20:02,559
i want to put together the first name

00:20:01,280 --> 00:20:05,679
and the last name

00:20:02,559 --> 00:20:07,840
so how do i do that i do that using

00:20:05,679 --> 00:20:09,760
process plug-ins remember that if i said

00:20:07,840 --> 00:20:11,360
i want to combine two columns into one

00:20:09,760 --> 00:20:14,640
field or one property

00:20:11,360 --> 00:20:17,600
i use a process plug-in so um

00:20:14,640 --> 00:20:18,080
for the sake of the example you just go

00:20:17,600 --> 00:20:20,080
to your

00:20:18,080 --> 00:20:22,240
search engine of choice and look for

00:20:20,080 --> 00:20:24,880
drupal migrate process plugins

00:20:22,240 --> 00:20:26,320
the first results is that documentation

00:20:24,880 --> 00:20:29,520
from drupal.org

00:20:26,320 --> 00:20:31,600
and you land into this website there is

00:20:29,520 --> 00:20:34,000
a list of core migrate process plugins

00:20:31,600 --> 00:20:36,559
that looks promising so i go there

00:20:34,000 --> 00:20:38,080
after going there i this everything that

00:20:36,559 --> 00:20:41,600
is provided by drupal color

00:20:38,080 --> 00:20:43,679
out of the box one of them says concats

00:20:41,600 --> 00:20:45,520
and it says concatenates a set of

00:20:43,679 --> 00:20:46,799
strings in computer parlance

00:20:45,520 --> 00:20:49,760
concatenation is

00:20:46,799 --> 00:20:51,120
the same as putting things together so i

00:20:49,760 --> 00:20:54,799
am going to click here

00:20:51,120 --> 00:20:56,720
and i come to the uh example or the

00:20:54,799 --> 00:20:58,559
documentation of this particular process

00:20:56,720 --> 00:21:00,000
plugin so what i'm going to do is

00:20:58,559 --> 00:21:02,080
literally

00:21:00,000 --> 00:21:03,360
copy and paste like i'm doing this just

00:21:02,080 --> 00:21:04,799
for the sake of the example but i

00:21:03,360 --> 00:21:08,080
recommend that you actually

00:21:04,799 --> 00:21:12,480
read the whole thing and i'm going to

00:21:08,080 --> 00:21:15,840
remove this and paste it here so

00:21:12,480 --> 00:21:18,400
as you see in the documentation plugin

00:21:15,840 --> 00:21:19,120
source and delimiters are at the same

00:21:18,400 --> 00:21:21,840
level

00:21:19,120 --> 00:21:23,760
but here when i pasted plugin then

00:21:21,840 --> 00:21:27,039
source and delimiter came after

00:21:23,760 --> 00:21:28,720
like a sub as a property and this is

00:21:27,039 --> 00:21:30,320
going to fail if i don't correct this

00:21:28,720 --> 00:21:31,360
this is going to fail so this is just an

00:21:30,320 --> 00:21:32,880
example of

00:21:31,360 --> 00:21:34,880
when you are copying and pasting from

00:21:32,880 --> 00:21:36,159
the internet make sure that your ide is

00:21:34,880 --> 00:21:38,960
not doing anything

00:21:36,159 --> 00:21:40,880
extra in this case i am saying i want to

00:21:38,960 --> 00:21:43,919
populate that title

00:21:40,880 --> 00:21:46,320
with whatever is the result of a

00:21:43,919 --> 00:21:48,080
plugin called concat and then my source

00:21:46,320 --> 00:21:52,159
what is going to be my source

00:21:48,080 --> 00:21:55,679
is going to be my first main column

00:21:52,159 --> 00:21:58,799
and my last name column so

00:21:55,679 --> 00:22:00,480
again uppercases are important and then

00:21:58,799 --> 00:22:02,000
you can have a delimiter which is like

00:22:00,480 --> 00:22:03,760
something that goes in between

00:22:02,000 --> 00:22:05,200
i don't want to slash as in the example

00:22:03,760 --> 00:22:07,440
i want to swatch space

00:22:05,200 --> 00:22:08,880
so if i want a one white space i put you

00:22:07,440 --> 00:22:12,240
know in quotes and then

00:22:08,880 --> 00:22:14,720
the white space there so

00:22:12,240 --> 00:22:15,760
the workflow now to for this to take

00:22:14,720 --> 00:22:19,760
effect

00:22:15,760 --> 00:22:22,880
i'm going to roll back the migration

00:22:19,760 --> 00:22:23,440
i'm going to clear the cache and i'm

00:22:22,880 --> 00:22:28,720
going to

00:22:23,440 --> 00:22:28,720
import again and if i go to the website

00:22:28,960 --> 00:22:34,640
i can see that now i have

00:22:32,240 --> 00:22:35,919
my first name and my last name um

00:22:34,640 --> 00:22:38,080
concatenated

00:22:35,919 --> 00:22:41,840
and if i were to click there i can see

00:22:38,080 --> 00:22:41,840
the white space in between

00:22:42,080 --> 00:22:48,080
let's have a look at more examples of

00:22:45,039 --> 00:22:50,559
the syntax of the migration

00:22:48,080 --> 00:22:51,440
let's say that i not only want to put

00:22:50,559 --> 00:22:54,640
them together

00:22:51,440 --> 00:22:56,960
but i also want to make them uppercase

00:22:54,640 --> 00:22:58,480
so that is another transformation but

00:22:56,960 --> 00:23:00,400
there is another transformation that i

00:22:58,480 --> 00:23:03,679
want to apply on the same

00:23:00,400 --> 00:23:04,720
uh property in this case the title so

00:23:03,679 --> 00:23:06,799
how can you do that

00:23:04,720 --> 00:23:09,200
you can do that using something that is

00:23:06,799 --> 00:23:13,919
called process blogging change

00:23:09,200 --> 00:23:13,919
so you do it like this

00:23:14,960 --> 00:23:20,400
in this case i am going to use a

00:23:18,559 --> 00:23:22,400
uploading called callback i am not going

00:23:20,400 --> 00:23:23,280
to go to that documentation for the sake

00:23:22,400 --> 00:23:26,960
of brevity

00:23:23,280 --> 00:23:29,200
but basically uh this callback plugin

00:23:26,960 --> 00:23:30,320
is going to allow me to call any php

00:23:29,200 --> 00:23:32,480
function if i want

00:23:30,320 --> 00:23:34,320
and and the way that you configure it

00:23:32,480 --> 00:23:35,200
you will go to the documentation to know

00:23:34,320 --> 00:23:36,720
how to do it

00:23:35,200 --> 00:23:38,559
but basically in a callable

00:23:36,720 --> 00:23:42,400
configuration you said

00:23:38,559 --> 00:23:42,400
what what configuration you want to

00:23:42,480 --> 00:23:47,200
to what function you want to execute so

00:23:45,360 --> 00:23:49,600
the way that it works is that

00:23:47,200 --> 00:23:50,240
the result of this is going to be passed

00:23:49,600 --> 00:23:51,760
to this

00:23:50,240 --> 00:23:53,440
and the result of everything in the

00:23:51,760 --> 00:23:54,640
change i can have you know as many of

00:23:53,440 --> 00:23:56,720
these as i want

00:23:54,640 --> 00:23:58,400
i could have another one like another

00:23:56,720 --> 00:24:00,000
plugin in the chain

00:23:58,400 --> 00:24:01,679
you know they are going to be passing

00:24:00,000 --> 00:24:03,919
from one to the other to the other

00:24:01,679 --> 00:24:06,400
and the very last one it is going to be

00:24:03,919 --> 00:24:11,760
assigned to the property or to the

00:24:06,400 --> 00:24:16,159
field so in this case i'm going to

00:24:11,760 --> 00:24:19,279
clear the cache scroll back

00:24:16,159 --> 00:24:20,400
and import again and if i go to the

00:24:19,279 --> 00:24:23,760
website

00:24:20,400 --> 00:24:24,720
and i refresh i can see that everything

00:24:23,760 --> 00:24:26,400
is in uppercase

00:24:24,720 --> 00:24:28,640
and that is what that function is

00:24:26,400 --> 00:24:31,279
actually doing it put it putting things

00:24:28,640 --> 00:24:34,159
in uppercase

00:24:31,279 --> 00:24:35,919
uh and let's say that we want if we

00:24:34,159 --> 00:24:38,159
click on the node itself and we click on

00:24:35,919 --> 00:24:40,320
edit

00:24:38,159 --> 00:24:42,320
we can see that we have a reach text

00:24:40,320 --> 00:24:44,080
field and these are interesting because

00:24:42,320 --> 00:24:44,559
like in addition to like the text that

00:24:44,080 --> 00:24:47,200
you will

00:24:44,559 --> 00:24:48,320
enter here you also get to define the

00:24:47,200 --> 00:24:51,760
text format

00:24:48,320 --> 00:24:54,960
so this is uh something that is

00:24:51,760 --> 00:24:57,520
called a compound field and just like

00:24:54,960 --> 00:24:59,279
uh what you have to do here is like

00:24:57,520 --> 00:25:01,600
migrate the source

00:24:59,279 --> 00:25:04,320
like the value of the field and migrate

00:25:01,600 --> 00:25:07,440
which text format you want to use

00:25:04,320 --> 00:25:12,400
so what i'm going to use is

00:25:07,440 --> 00:25:12,400
i'm going to copy from an existing

00:25:12,840 --> 00:25:17,600
example

00:25:14,880 --> 00:25:19,200
so again you need to be very careful

00:25:17,600 --> 00:25:21,600
with your indentation

00:25:19,200 --> 00:25:22,720
like any field or property needs to be

00:25:21,600 --> 00:25:25,919
one level

00:25:22,720 --> 00:25:28,080
inside of process

00:25:25,919 --> 00:25:29,279
now what i have here is the machine name

00:25:28,080 --> 00:25:31,279
of the field

00:25:29,279 --> 00:25:32,480
and then with the slash this is how you

00:25:31,279 --> 00:25:34,000
did you

00:25:32,480 --> 00:25:36,000
access the suffix those are called

00:25:34,000 --> 00:25:38,400
subfields for the value

00:25:36,000 --> 00:25:39,520
i am going to use the biography column i

00:25:38,400 --> 00:25:43,520
have a column

00:25:39,520 --> 00:25:46,159
in my csv file called biography

00:25:43,520 --> 00:25:48,480
and that is what i'm going to assign and

00:25:46,159 --> 00:25:50,240
then for the format the text format

00:25:48,480 --> 00:25:51,919
there is nothing in my csv file

00:25:50,240 --> 00:25:55,520
providing that information

00:25:51,919 --> 00:25:56,240
so what can i do i can provide a default

00:25:55,520 --> 00:25:57,919
value

00:25:56,240 --> 00:25:59,600
so there is a plotting called default

00:25:57,919 --> 00:26:01,120
value and in this case

00:25:59,600 --> 00:26:02,400
uh that this is the way that you

00:26:01,120 --> 00:26:03,919
configure it default value and then

00:26:02,400 --> 00:26:05,760
whatever you define here

00:26:03,919 --> 00:26:08,320
it's what it's what's going to be used

00:26:05,760 --> 00:26:10,640
by drupal so what i'm saying is

00:26:08,320 --> 00:26:12,400
for the field ud biography which is the

00:26:10,640 --> 00:26:14,720
one that we saw before

00:26:12,400 --> 00:26:16,720
the value i want to copy from my csv

00:26:14,720 --> 00:26:19,840
file biography calling

00:26:16,720 --> 00:26:21,679
and i want you to use the basic html

00:26:19,840 --> 00:26:23,919
again this is the machine name so you

00:26:21,679 --> 00:26:26,960
need to be able to find the a machining

00:26:23,919 --> 00:26:27,919
of anything that you're using if i were

00:26:26,960 --> 00:26:31,600
to

00:26:27,919 --> 00:26:36,080
you know come back prepared

00:26:31,600 --> 00:26:39,840
in my cash import again

00:26:36,080 --> 00:26:43,360
i can go to the website

00:26:39,840 --> 00:26:47,039
and verify that i am

00:26:43,360 --> 00:26:49,600
importing my you know my different

00:26:47,039 --> 00:26:50,799
biography and if i were to click on one

00:26:49,600 --> 00:26:53,840
of them

00:26:50,799 --> 00:26:53,840
i can

00:26:54,640 --> 00:26:57,840
i can verify that i am using the basic

00:26:56,640 --> 00:27:01,120
html

00:26:57,840 --> 00:27:02,480
so uh when this when you have a complex

00:27:01,120 --> 00:27:05,520
fields like this one

00:27:02,480 --> 00:27:06,159
that they have two fields that's how you

00:27:05,520 --> 00:27:08,240
do it

00:27:06,159 --> 00:27:10,159
you put the machinima for the field and

00:27:08,240 --> 00:27:12,320
then a slash and then what property you

00:27:10,159 --> 00:27:15,520
want to set in this case value

00:27:12,320 --> 00:27:17,600
and then the format let's uh

00:27:15,520 --> 00:27:19,039
say that we we have a multi-value field

00:27:17,600 --> 00:27:21,600
how do we do that

00:27:19,039 --> 00:27:24,000
and again like the syntax is a little

00:27:21,600 --> 00:27:26,240
bit more involved

00:27:24,000 --> 00:27:27,919
i'm going to paste and make sure that my

00:27:26,240 --> 00:27:31,760
indentation is correct

00:27:27,919 --> 00:27:34,240
so in this case in my csv file

00:27:31,760 --> 00:27:35,120
i have a column called drupal i have a

00:27:34,240 --> 00:27:37,679
column

00:27:35,120 --> 00:27:38,880
called gitlab and calling called twitter

00:27:37,679 --> 00:27:41,760
and all of them contain

00:27:38,880 --> 00:27:44,159
urls to different profiles from this

00:27:41,760 --> 00:27:44,159
person

00:27:44,720 --> 00:27:51,360
and i have these constants link title

00:27:48,480 --> 00:27:52,399
so what is that this is something extra

00:27:51,360 --> 00:27:56,080
that you can define

00:27:52,399 --> 00:27:58,559
in your source you can define

00:27:56,080 --> 00:27:59,679
these are called source constants and

00:27:58,559 --> 00:28:02,720
it's basically

00:27:59,679 --> 00:28:03,120
some variables or placeholder text that

00:28:02,720 --> 00:28:06,640
you

00:28:03,120 --> 00:28:09,360
might want to use later so for any uh

00:28:06,640 --> 00:28:10,000
url uh from drupal i want to use this

00:28:09,360 --> 00:28:12,000
text

00:28:10,000 --> 00:28:14,159
for gitlab i want to use this text and

00:28:12,000 --> 00:28:16,559
for

00:28:14,159 --> 00:28:18,399
twitter i want to use this text so the

00:28:16,559 --> 00:28:18,799
way that this works is like the syntax

00:28:18,399 --> 00:28:21,120
is

00:28:18,799 --> 00:28:22,960
the machine name of the field and then

00:28:21,120 --> 00:28:26,159
because it is a multi-value field

00:28:22,960 --> 00:28:28,559
you can say zero for the first element

00:28:26,159 --> 00:28:30,399
set one for the second element two for

00:28:28,559 --> 00:28:32,799
the third element and so on

00:28:30,399 --> 00:28:35,200
there are ways to make this dynamic i am

00:28:32,799 --> 00:28:37,279
i'm showing this like hardcoded

00:28:35,200 --> 00:28:38,559
zero one and two on purpose so you

00:28:37,279 --> 00:28:42,240
understand the syntax

00:28:38,559 --> 00:28:44,960
but it is possible to have you know

00:28:42,240 --> 00:28:46,399
one process plugin that will read an

00:28:44,960 --> 00:28:49,520
array of values and

00:28:46,399 --> 00:28:49,919
populate the fields properly but in this

00:28:49,520 --> 00:28:53,039
case

00:28:49,919 --> 00:28:57,200
uh it is machine name of the field

00:28:53,039 --> 00:28:59,039
delta or the element in

00:28:57,200 --> 00:29:01,360
in the multivalue field and then the

00:28:59,039 --> 00:29:04,000
subfield so this is a link text

00:29:01,360 --> 00:29:06,960
a link field and links have a your uri

00:29:04,000 --> 00:29:10,559
for the url itself and a title

00:29:06,960 --> 00:29:14,399
so again like i make my change i

00:29:10,559 --> 00:29:17,600
roll back i clear my cache

00:29:14,399 --> 00:29:20,240
i import again by doing so if i go to

00:29:17,600 --> 00:29:20,240
the website

00:29:23,520 --> 00:29:27,919
i can see that i have you know my my

00:29:26,320 --> 00:29:32,080
different links for the different

00:29:27,919 --> 00:29:32,080
person let's have a look at one of them

00:29:34,399 --> 00:29:38,880
in this case i am using the as i said

00:29:36,799 --> 00:29:40,960
before

00:29:38,880 --> 00:29:41,919
a web server that comes with drupal core

00:29:40,960 --> 00:29:44,000
so sometimes it

00:29:41,919 --> 00:29:45,760
it freezes so what i did is just like

00:29:44,000 --> 00:29:47,279
restarted the server this is like

00:29:45,760 --> 00:29:49,360
very easy setup you don't need to have

00:29:47,279 --> 00:29:50,240
many things installed for this to work

00:29:49,360 --> 00:29:52,320
properly

00:29:50,240 --> 00:29:55,120
but this is what we saw before we saw a

00:29:52,320 --> 00:29:58,799
multi-value field where i am populating

00:29:55,120 --> 00:30:02,559
uh you know with three values the url

00:29:58,799 --> 00:30:04,880
is the uri subfield and the text is the

00:30:02,559 --> 00:30:06,880
you know the corresponding subfield and

00:30:04,880 --> 00:30:08,159
these are the constant that i were using

00:30:06,880 --> 00:30:11,200
before

00:30:08,159 --> 00:30:14,559
so that's uh

00:30:11,200 --> 00:30:16,480
basically what i am doing here one thing

00:30:14,559 --> 00:30:18,159
uh that i want to show is that you know

00:30:16,480 --> 00:30:20,159
i can continue the process and you have

00:30:18,159 --> 00:30:22,880
the examples that you can you know

00:30:20,159 --> 00:30:24,399
execute everything at once but one thing

00:30:22,880 --> 00:30:26,880
that i want to show is that

00:30:24,399 --> 00:30:28,799
so far i i have been executing

00:30:26,880 --> 00:30:30,799
migrations defined as code

00:30:28,799 --> 00:30:32,240
because for one they are in my

00:30:30,799 --> 00:30:35,120
migrations folder

00:30:32,240 --> 00:30:36,480
uh and two i need to clear the cache for

00:30:35,120 --> 00:30:38,480
changes to take effect

00:30:36,480 --> 00:30:40,080
but as i said before you can also do it

00:30:38,480 --> 00:30:42,000
as configuration entities

00:30:40,080 --> 00:30:46,080
and execute the same thing from the user

00:30:42,000 --> 00:30:46,080
interface so in order to do that

00:30:46,159 --> 00:30:50,399
you put them in config install you

00:30:48,399 --> 00:30:51,200
define your migrations as you can see

00:30:50,399 --> 00:30:53,200
it's like

00:30:51,200 --> 00:30:55,360
almost the same and we're going to see

00:30:53,200 --> 00:30:57,519
like what are the difference in a moment

00:30:55,360 --> 00:30:59,679
but once you have those migrations and

00:30:57,519 --> 00:31:03,600
you enable your module

00:30:59,679 --> 00:31:06,159
you can go to the website to a structure

00:31:03,600 --> 00:31:07,760
and then you will have a migrations

00:31:06,159 --> 00:31:10,720
directory

00:31:07,760 --> 00:31:12,080
a link you this is a group a migration

00:31:10,720 --> 00:31:13,919
group that i define

00:31:12,080 --> 00:31:15,279
and i can list the migrations that are

00:31:13,919 --> 00:31:17,679
part of that group

00:31:15,279 --> 00:31:19,760
in this case i there are three of them

00:31:17,679 --> 00:31:21,120
one for a paragraph one for images and

00:31:19,760 --> 00:31:22,559
one for nodes

00:31:21,120 --> 00:31:24,320
so i'm going to execute the node

00:31:22,559 --> 00:31:26,880
migration

00:31:24,320 --> 00:31:30,000
and i can say rollback import star

00:31:26,880 --> 00:31:31,840
preset in this case i want to import

00:31:30,000 --> 00:31:34,480
and one thing that is going to happen is

00:31:31,840 --> 00:31:35,919
that i am migrating nodes but those

00:31:34,480 --> 00:31:38,640
nodes have associated

00:31:35,919 --> 00:31:40,320
images and paragraphs so the migrate api

00:31:38,640 --> 00:31:41,440
is able to detect that i have

00:31:40,320 --> 00:31:44,960
dependencies

00:31:41,440 --> 00:31:47,039
from my from one migration to another

00:31:44,960 --> 00:31:49,200
and i am going to get you know all of

00:31:47,039 --> 00:31:52,640
them executed at once

00:31:49,200 --> 00:31:54,559
so if i go back to the site

00:31:52,640 --> 00:31:56,399
i i can see that you know this is what i

00:31:54,559 --> 00:31:57,200
was doing before like manually one by

00:31:56,399 --> 00:31:59,840
one

00:31:57,200 --> 00:32:01,840
and this is what i did from the user

00:31:59,840 --> 00:32:05,679
interface so i have images

00:32:01,840 --> 00:32:09,360
this is a paragraph these are dates

00:32:05,679 --> 00:32:12,720
address fields taxonomy terms and so on

00:32:09,360 --> 00:32:15,519
so you know you can do it from the user

00:32:12,720 --> 00:32:17,600
interface if you want as well

00:32:15,519 --> 00:32:19,039
something that i want to show is the

00:32:17,600 --> 00:32:22,080
difference uh

00:32:19,039 --> 00:32:25,519
how different these things are so

00:32:22,080 --> 00:32:26,720
before i was running from a csv file my

00:32:25,519 --> 00:32:29,600
migrations

00:32:26,720 --> 00:32:31,279
and this one are from json files so if i

00:32:29,600 --> 00:32:34,000
were to compare the two

00:32:31,279 --> 00:32:34,399
this is what is different i am on my

00:32:34,000 --> 00:32:37,600
left

00:32:34,399 --> 00:32:39,279
i see the json migration on my right i

00:32:37,600 --> 00:32:43,279
see the csv migration

00:32:39,279 --> 00:32:43,840
so the id is different because as i said

00:32:43,279 --> 00:32:45,919
before

00:32:43,840 --> 00:32:47,519
every migration in your project needs to

00:32:45,919 --> 00:32:48,559
have a different value so that is

00:32:47,519 --> 00:32:50,480
different

00:32:48,559 --> 00:32:53,200
the label is a little bit different just

00:32:50,480 --> 00:32:54,840
to identify that one is coming from json

00:32:53,200 --> 00:32:56,320
files and another one is coming from

00:32:54,840 --> 00:32:59,679
csb5

00:32:56,320 --> 00:33:01,360
there is some migration group that is

00:32:59,679 --> 00:33:03,039
something that is provided by the

00:33:01,360 --> 00:33:04,880
migrate plus module

00:33:03,039 --> 00:33:06,159
that allows you to share configuration

00:33:04,880 --> 00:33:08,720
for example if

00:33:06,159 --> 00:33:09,840
i am going to be migrating from the same

00:33:08,720 --> 00:33:12,960
json file

00:33:09,840 --> 00:33:13,840
i can put that configuration to to fetch

00:33:12,960 --> 00:33:16,480
data from file

00:33:13,840 --> 00:33:19,200
from that file in a migration group that

00:33:16,480 --> 00:33:21,440
we can show you in a moment

00:33:19,200 --> 00:33:22,399
but basically it's just like to get some

00:33:21,440 --> 00:33:25,279
information

00:33:22,399 --> 00:33:25,760
but what i want to highlight is actually

00:33:25,279 --> 00:33:27,679
that

00:33:25,760 --> 00:33:28,799
the similarities are more common than

00:33:27,679 --> 00:33:31,360
the differences

00:33:28,799 --> 00:33:34,399
my source uh constants are the same

00:33:31,360 --> 00:33:37,600
basically except for json and from csb

00:33:34,399 --> 00:33:39,120
what is expected to be different is like

00:33:37,600 --> 00:33:41,440
you know in this case i am running from

00:33:39,120 --> 00:33:42,799
a csv file and in this case i am reading

00:33:41,440 --> 00:33:45,679
from a json file so

00:33:42,799 --> 00:33:48,240
that needs to be different my source

00:33:45,679 --> 00:33:52,480
definitely has to be different

00:33:48,240 --> 00:33:54,960
but after that um

00:33:52,480 --> 00:33:55,519
what is uh in the process section the

00:33:54,960 --> 00:33:57,519
title

00:33:55,519 --> 00:33:59,039
is about the same these are some things

00:33:57,519 --> 00:33:59,919
that i was manually changing for the

00:33:59,039 --> 00:34:02,399
example

00:33:59,919 --> 00:34:03,360
but the title is basically the same the

00:34:02,399 --> 00:34:06,080
mapping of the

00:34:03,360 --> 00:34:07,120
rich text field is the same of the urls

00:34:06,080 --> 00:34:09,200
is the same

00:34:07,120 --> 00:34:10,720
for dates for addresses basically

00:34:09,200 --> 00:34:13,520
everything in the same

00:34:10,720 --> 00:34:15,520
like all my process operation is

00:34:13,520 --> 00:34:18,639
basically the same except for

00:34:15,520 --> 00:34:21,280
like the machine names of the

00:34:18,639 --> 00:34:23,520
migrations that i am using this is for

00:34:21,280 --> 00:34:25,520
power of migrations

00:34:23,520 --> 00:34:27,040
and then my destination is exactly the

00:34:25,520 --> 00:34:29,839
same my plugin

00:34:27,040 --> 00:34:31,679
and my machine name of that content type

00:34:29,839 --> 00:34:33,280
and the migration dependencies this is

00:34:31,679 --> 00:34:36,159
what allows you to say

00:34:33,280 --> 00:34:37,440
okay this node expects images and

00:34:36,159 --> 00:34:39,679
expects paragraph

00:34:37,440 --> 00:34:40,960
so you also need to import those before

00:34:39,679 --> 00:34:43,599
or in advance

00:34:40,960 --> 00:34:45,760
and because in this case i am using json

00:34:43,599 --> 00:34:48,480
files in this case i am using images

00:34:45,760 --> 00:34:49,119
and csb files that's a little bit

00:34:48,480 --> 00:34:51,919
different

00:34:49,119 --> 00:34:53,679
but for the most part is the same so

00:34:51,919 --> 00:34:54,879
this is another benefit of using the

00:34:53,679 --> 00:34:57,040
micro api

00:34:54,879 --> 00:34:58,079
you can literally swap either the

00:34:57,040 --> 00:35:00,880
destination

00:34:58,079 --> 00:35:01,520
or the source or the or the process and

00:35:00,880 --> 00:35:04,400
it will be

00:35:01,520 --> 00:35:05,520
mostly working the same so basically in

00:35:04,400 --> 00:35:07,680
this case

00:35:05,520 --> 00:35:09,760
the same content exactly the same

00:35:07,680 --> 00:35:13,280
content uh it's migrated

00:35:09,760 --> 00:35:16,079
off from a csv file

00:35:13,280 --> 00:35:16,640
or from a json file and what i showed

00:35:16,079 --> 00:35:21,040
before

00:35:16,640 --> 00:35:24,079
that the migration group this is

00:35:21,040 --> 00:35:25,599
how you define it you have an id a label

00:35:24,079 --> 00:35:27,200
a description a source

00:35:25,599 --> 00:35:29,040
but this is the important part you can

00:35:27,200 --> 00:35:31,839
have shared configuration

00:35:29,040 --> 00:35:33,280
so anything that you define here is

00:35:31,839 --> 00:35:35,760
going to be reused

00:35:33,280 --> 00:35:37,280
for any migration that is configured to

00:35:35,760 --> 00:35:40,480
be part of this group

00:35:37,280 --> 00:35:41,760
so if i go here i can see that i have a

00:35:40,480 --> 00:35:44,400
node migration

00:35:41,760 --> 00:35:45,440
an image migration a power of migration

00:35:44,400 --> 00:35:49,040
and all of them

00:35:45,440 --> 00:35:53,119
are going to share the same you know

00:35:49,040 --> 00:35:57,440
configuration to be able to read from my

00:35:53,119 --> 00:35:59,599
json file so we have about

00:35:57,440 --> 00:36:01,760
10 minutes left so i want to make sure i

00:35:59,599 --> 00:36:02,960
have i leave some time for four

00:36:01,760 --> 00:36:06,079
questions at the end

00:36:02,960 --> 00:36:07,280
what i'm going to do is just like for to

00:36:06,079 --> 00:36:10,880
show like the final

00:36:07,280 --> 00:36:13,520
version i'm going to remove my migration

00:36:10,880 --> 00:36:16,000
that i was doing temporarily and i'm

00:36:13,520 --> 00:36:16,000
going to

00:36:16,160 --> 00:36:18,800
hold um

00:36:19,680 --> 00:36:27,920
rollback mr it stands for

00:36:22,960 --> 00:36:27,920
rollback is an alias i'm going to

00:36:28,960 --> 00:36:33,760
reveal that the caches for any changes

00:36:31,359 --> 00:36:41,599
to take effect

00:36:33,760 --> 00:36:43,359
i'm going to import everything again

00:36:41,599 --> 00:36:45,839
and after doing that if i go to the

00:36:43,359 --> 00:36:45,839
website

00:36:47,359 --> 00:36:51,680
i can see uh again the name is different

00:36:50,160 --> 00:36:52,560
because this is part of the example that

00:36:51,680 --> 00:36:55,680
i was showing

00:36:52,560 --> 00:36:58,400
but everything else is the same and

00:36:55,680 --> 00:37:00,000
basically i am saying magnet the same

00:36:58,400 --> 00:37:04,480
information from a csv

00:37:00,000 --> 00:37:07,359
file or from a json file and

00:37:04,480 --> 00:37:09,839
with that i just want to switch back a

00:37:07,359 --> 00:37:09,839
little bit here

00:37:11,680 --> 00:37:16,240
so this is a summary of the syntax

00:37:16,400 --> 00:37:22,560
you have your process then you have

00:37:20,000 --> 00:37:24,400
the machine name of the field the delta

00:37:22,560 --> 00:37:26,079
if it is a multi-value field

00:37:24,400 --> 00:37:27,680
then the subfield that you want to

00:37:26,079 --> 00:37:30,079
populate and then any

00:37:27,680 --> 00:37:31,760
logins that you want if you want if you

00:37:30,079 --> 00:37:33,440
have a process flowing change you can

00:37:31,760 --> 00:37:35,440
have you know many plugins

00:37:33,440 --> 00:37:36,480
doing transformation for the same piece

00:37:35,440 --> 00:37:38,240
of data

00:37:36,480 --> 00:37:39,760
the one important thing to remember when

00:37:38,240 --> 00:37:42,240
you have a chain like this

00:37:39,760 --> 00:37:44,800
is that only the source it should be

00:37:42,240 --> 00:37:47,520
only the first uh plugin that change

00:37:44,800 --> 00:37:49,359
you need to explain specify a source for

00:37:47,520 --> 00:37:52,240
anything else in the change

00:37:49,359 --> 00:37:54,000
what you what uh it is assumed as your

00:37:52,240 --> 00:37:56,560
source is the value that was

00:37:54,000 --> 00:37:58,480
returned by the previous process plugins

00:37:56,560 --> 00:38:01,119
in this case like whatever this produces

00:37:58,480 --> 00:38:02,880
is going to be the input of this one

00:38:01,119 --> 00:38:04,400
whatever this produce is going to be the

00:38:02,880 --> 00:38:05,839
input of this one and because there is

00:38:04,400 --> 00:38:07,760
nothing else in the change

00:38:05,839 --> 00:38:10,079
whatever this produces is going to be

00:38:07,760 --> 00:38:12,160
assigned to my destination field in this

00:38:10,079 --> 00:38:14,240
case

00:38:12,160 --> 00:38:16,240
these are some of the modules that were

00:38:14,240 --> 00:38:17,920
used in the example migrate plus migrate

00:38:16,240 --> 00:38:20,400
tools my resource csb

00:38:17,920 --> 00:38:22,240
to be able to read from csv file and in

00:38:20,400 --> 00:38:25,200
that url there are like

00:38:22,240 --> 00:38:26,480
50 plus modules that provide

00:38:25,200 --> 00:38:29,200
functionality

00:38:26,480 --> 00:38:29,520
for drupal migrations i would like to

00:38:29,200 --> 00:38:31,680
say

00:38:29,520 --> 00:38:33,200
thanks to a lot of the migrant

00:38:31,680 --> 00:38:34,480
maintainers who have helped me over the

00:38:33,200 --> 00:38:37,119
years to understand

00:38:34,480 --> 00:38:38,720
how this works i reminded about the

00:38:37,119 --> 00:38:40,000
trainings that are happening next week

00:38:38,720 --> 00:38:42,240
online

00:38:40,000 --> 00:38:44,320
and the website understand drupal where

00:38:42,240 --> 00:38:45,200
you can find the 31 days of migration

00:38:44,320 --> 00:38:48,240
series

00:38:45,200 --> 00:38:49,599
and the course and we have you know

00:38:48,240 --> 00:38:50,320
about 10 minutes for questions so i'm

00:38:49,599 --> 00:38:53,760
going to be

00:38:50,320 --> 00:38:55,760
reading here but this is uh the url

00:38:53,760 --> 00:38:56,880
to the slide deck and the url to the

00:38:55,760 --> 00:38:58,960
feedback form

00:38:56,880 --> 00:39:00,160
so you know the drupal association would

00:38:58,960 --> 00:39:03,200
love to hear

00:39:00,160 --> 00:39:04,480
feedback for all the sessions so i and i

00:39:03,200 --> 00:39:06,240
personally would like to

00:39:04,480 --> 00:39:08,720
you know know what you think about this

00:39:06,240 --> 00:39:10,400
presentation as well

00:39:08,720 --> 00:39:11,839
so i'm going to leave that on the screen

00:39:10,400 --> 00:39:15,839
while i uh

00:39:11,839 --> 00:39:15,839
check for questions in the chat

00:39:16,079 --> 00:39:20,079
and as i said before all the examples

00:39:17,839 --> 00:39:22,480
that i show are already available

00:39:20,079 --> 00:39:24,240
including documentation on how to set up

00:39:22,480 --> 00:39:24,880
the virtual machine well not the virtual

00:39:24,240 --> 00:39:26,960
machine like

00:39:24,880 --> 00:39:29,599
how to set up that quick start command

00:39:26,960 --> 00:39:33,040
to be able to execute the migrations

00:39:29,599 --> 00:39:35,280
so let's see if we have some questions

00:39:33,040 --> 00:39:35,280
here

00:39:40,839 --> 00:39:45,839
um

00:39:43,599 --> 00:39:48,400
so there is a question saying how would

00:39:45,839 --> 00:39:52,160
you recommend exporting from d7

00:39:48,400 --> 00:39:55,359
so if you want to go from d7 to either

00:39:52,160 --> 00:39:58,320
drupal 8 or drupal 9

00:39:55,359 --> 00:39:58,800
actually the mitre api offers a complete

00:39:58,320 --> 00:40:01,359
uh

00:39:58,800 --> 00:40:02,400
suit of modules specifically for that

00:40:01,359 --> 00:40:04,960
and there is

00:40:02,400 --> 00:40:05,599
one called migrate upgrade that can help

00:40:04,960 --> 00:40:07,359
you

00:40:05,599 --> 00:40:09,440
automatically generate those jumble

00:40:07,359 --> 00:40:12,319
definition files that i showed before

00:40:09,440 --> 00:40:13,280
and with that module you can generate

00:40:12,319 --> 00:40:16,640
the files

00:40:13,280 --> 00:40:18,400
if you have any structural changes for

00:40:16,640 --> 00:40:20,960
example going from

00:40:18,400 --> 00:40:22,560
a content type to a user or from a

00:40:20,960 --> 00:40:24,319
content type to a paragraph or if you

00:40:22,560 --> 00:40:26,079
want to combine two fields or if you

00:40:24,319 --> 00:40:28,880
want to split a content type

00:40:26,079 --> 00:40:29,599
so you can use the migrate upgrade

00:40:28,880 --> 00:40:31,640
module

00:40:29,599 --> 00:40:32,960
to generate those files make the

00:40:31,640 --> 00:40:36,000
commodifications

00:40:32,960 --> 00:40:38,720
execute them and then you have you know

00:40:36,000 --> 00:40:40,800
your drupal 7 site or drupal 6 site

00:40:38,720 --> 00:40:43,200
upgraded to drupal 8 or 9.

00:40:40,800 --> 00:40:44,480
it is important to know that there is no

00:40:43,200 --> 00:40:47,760
need to

00:40:44,480 --> 00:40:49,040
to go by triple 8 you can jump directly

00:40:47,760 --> 00:40:51,760
from 6 to 9

00:40:49,040 --> 00:40:52,640
or from 7 to 9. that's that's something

00:40:51,760 --> 00:40:55,520
that you can do

00:40:52,640 --> 00:40:57,760
and uh i would highly recommend checking

00:40:55,520 --> 00:41:00,079
out you know the articles the trainings

00:40:57,760 --> 00:41:02,160
but in general the migrate upgrade

00:41:00,079 --> 00:41:06,560
module is a complete

00:41:02,160 --> 00:41:08,240
suite of modules uh and plugins and

00:41:06,560 --> 00:41:11,359
everything that you need to go from

00:41:08,240 --> 00:41:14,640
drupal 6 or 7 to drupal 8 or drupal 9.

00:41:11,359 --> 00:41:15,599
as of today drupal 8 and 0.9 in terms of

00:41:14,640 --> 00:41:17,920
migrations are

00:41:15,599 --> 00:41:18,800
basically exactly the same the only

00:41:17,920 --> 00:41:20,800
reason

00:41:18,800 --> 00:41:21,920
why you might want to go with eight and

00:41:20,800 --> 00:41:24,400
not with nine

00:41:21,920 --> 00:41:25,839
is if you have a module that is

00:41:24,400 --> 00:41:27,839
available for drupal 8

00:41:25,839 --> 00:41:29,200
but it does it doesn't have a stable

00:41:27,839 --> 00:41:31,359
release for drupal 9

00:41:29,200 --> 00:41:33,280
so you would have to wait for that or

00:41:31,359 --> 00:41:35,359
find a solution and an alternative for

00:41:33,280 --> 00:41:37,359
that module in 2.9

00:41:35,359 --> 00:41:38,640
but other than that there is really no

00:41:37,359 --> 00:41:41,280
reason to like

00:41:38,640 --> 00:41:42,560
go to eight and after go to nine if you

00:41:41,280 --> 00:41:45,440
have to do that

00:41:42,560 --> 00:41:45,839
you can do it of course and you know

00:41:45,440 --> 00:41:47,520
from

00:41:45,839 --> 00:41:49,599
going from eight to nine when all your

00:41:47,520 --> 00:41:51,920
modules are ready are available

00:41:49,599 --> 00:41:52,720
it's going to be you know a lot easier

00:41:51,920 --> 00:41:55,920
than going

00:41:52,720 --> 00:41:59,280
from seven to eight or six to eight

00:41:55,920 --> 00:42:01,040
another question is migrating from one

00:41:59,280 --> 00:42:04,400
side to another

00:42:01,040 --> 00:42:05,200
or migrating from d7 to d8 i'm not very

00:42:04,400 --> 00:42:08,640
clear about

00:42:05,200 --> 00:42:10,800
the questions but just to

00:42:08,640 --> 00:42:13,440
to make it clear in the examples that i

00:42:10,800 --> 00:42:16,319
showed today i was migrating from csv

00:42:13,440 --> 00:42:17,920
and from jsons but it is also possible

00:42:16,319 --> 00:42:20,240
to migrate from sql

00:42:17,920 --> 00:42:20,960
databases and that is what the migrate

00:42:20,240 --> 00:42:23,920
upgrade does

00:42:20,960 --> 00:42:25,920
and even in drupal core there is modules

00:42:23,920 --> 00:42:26,319
that allow you to connect directly to

00:42:25,920 --> 00:42:29,280
your

00:42:26,319 --> 00:42:30,319
drupal 6 or drupal 7 database and use

00:42:29,280 --> 00:42:34,800
that as your source

00:42:30,319 --> 00:42:34,800
and read directly from the database so

00:42:35,119 --> 00:42:39,359
you can you can have that as an option

00:42:37,200 --> 00:42:42,880
like connect directly to the database

00:42:39,359 --> 00:42:46,240
and upgrade from there um let's have a

00:42:42,880 --> 00:42:47,440
notice question i use vs code are there

00:42:46,240 --> 00:42:50,079
plugins to help with

00:42:47,440 --> 00:42:50,079
spacing

00:42:51,119 --> 00:42:55,760
i don't think that i know that there is

00:42:54,000 --> 00:42:57,359
a plugin called prettier that you can

00:42:55,760 --> 00:43:00,800
configure to

00:42:57,359 --> 00:43:02,640
automatically format your source code

00:43:00,800 --> 00:43:05,119
in different languages and different

00:43:02,640 --> 00:43:08,480
extensions so i will check for that

00:43:05,119 --> 00:43:11,200
if anything but in general you know

00:43:08,480 --> 00:43:12,720
just try to be careful as you saw when i

00:43:11,200 --> 00:43:15,119
was copying and pasting

00:43:12,720 --> 00:43:15,760
some of the formatting was wrong so you

00:43:15,119 --> 00:43:18,800
need to be

00:43:15,760 --> 00:43:23,040
very mindful about that

00:43:18,800 --> 00:43:24,960
there are um let's see

00:43:23,040 --> 00:43:26,960
yeah there's people sharing that there

00:43:24,960 --> 00:43:27,760
are some plugins that might help you

00:43:26,960 --> 00:43:30,240
with

00:43:27,760 --> 00:43:30,240
with that

00:43:32,079 --> 00:43:35,280
let's see if there are any other

00:43:38,839 --> 00:43:40,580
questions

00:43:40,079 --> 00:43:43,690
um

00:43:40,580 --> 00:43:43,690
[Music]

00:43:45,119 --> 00:43:51,280
so there is a question when changing

00:43:48,640 --> 00:43:51,839
the text area for matter will it strip

00:43:51,280 --> 00:43:53,680
anything

00:43:51,839 --> 00:43:55,280
out of the content that does not need

00:43:53,680 --> 00:43:59,760
the format basic

00:43:55,280 --> 00:44:02,560
html for example yes so

00:43:59,760 --> 00:44:04,000
the micro api is going to do whatever

00:44:02,560 --> 00:44:06,160
you instruct it to do

00:44:04,000 --> 00:44:07,599
in my example i said i want to use the

00:44:06,160 --> 00:44:10,640
basic html

00:44:07,599 --> 00:44:14,480
text format so you can go

00:44:10,640 --> 00:44:15,599
modify what html tags what html

00:44:14,480 --> 00:44:18,000
attributes are allowed

00:44:15,599 --> 00:44:18,800
in this particular base basic html text

00:44:18,000 --> 00:44:21,280
format

00:44:18,800 --> 00:44:22,800
and drupal is going to strip anything

00:44:21,280 --> 00:44:23,520
that is not allowed if you were to use

00:44:22,800 --> 00:44:26,960
for example

00:44:23,520 --> 00:44:28,800
plain html plain text everything is

00:44:26,960 --> 00:44:29,920
going to be escape for example if you're

00:44:28,800 --> 00:44:32,640
going to use

00:44:29,920 --> 00:44:33,920
full html that is probably a bad idea

00:44:32,640 --> 00:44:37,119
because you might be

00:44:33,920 --> 00:44:38,720
allowing some insecure html in your

00:44:37,119 --> 00:44:40,640
in your website coming from your

00:44:38,720 --> 00:44:43,839
migration but basically

00:44:40,640 --> 00:44:46,800
whatever you define as your

00:44:43,839 --> 00:44:48,400
input format drupal is going to respect

00:44:46,800 --> 00:44:49,119
how you have that configured in your

00:44:48,400 --> 00:44:51,839
site

00:44:49,119 --> 00:44:53,680
see if it is basic html restricted html

00:44:51,839 --> 00:44:55,599
full html plain text

00:44:53,680 --> 00:44:57,520
you know whatever you define drupal is

00:44:55,599 --> 00:44:59,359
going to take care of cleaning up

00:44:57,520 --> 00:45:01,839
and the way that it is defined on the

00:44:59,359 --> 00:45:01,839
website

00:45:02,000 --> 00:45:06,400
another question will migrate have

00:45:03,839 --> 00:45:09,040
better performance over fits module

00:45:06,400 --> 00:45:09,520
if you need to import thousands of nodes

00:45:09,040 --> 00:45:12,880
you

00:45:09,520 --> 00:45:13,119
you can move the thread uh and it might

00:45:12,880 --> 00:45:16,880
be

00:45:13,119 --> 00:45:20,960
slow so if you have big

00:45:16,880 --> 00:45:24,160
so for one uh as far as i understand

00:45:20,960 --> 00:45:27,280
fitz is not like fully ported out

00:45:24,160 --> 00:45:29,599
for drupal 8.9 i might be wrong uh

00:45:27,280 --> 00:45:32,079
but in terms of performance of the

00:45:29,599 --> 00:45:34,560
migrate api

00:45:32,079 --> 00:45:37,200
one thing that you need to be uh aware

00:45:34,560 --> 00:45:39,520
of is that the final api is going to be

00:45:37,200 --> 00:45:41,680
working with other parts of drupal and

00:45:39,520 --> 00:45:43,839
in particular if you are creating nodes

00:45:41,680 --> 00:45:46,000
that is you're going to be executing

00:45:43,839 --> 00:45:47,119
node shape operations like at the entity

00:45:46,000 --> 00:45:49,359
level

00:45:47,119 --> 00:45:50,640
it is possible for example to turn on

00:45:49,359 --> 00:45:53,760
validation if you want

00:45:50,640 --> 00:45:57,040
but in general there are

00:45:53,760 --> 00:45:58,560
you know many things that might happen

00:45:57,040 --> 00:46:00,160
my recommendation when you have to

00:45:58,560 --> 00:46:03,040
migrate a lot of content

00:46:00,160 --> 00:46:04,160
is that you can do it in chunks uh for

00:46:03,040 --> 00:46:07,200
example migrate

00:46:04,160 --> 00:46:10,240
a thousand at a time and

00:46:07,200 --> 00:46:12,319
one way to do that is uh the drug

00:46:10,240 --> 00:46:13,280
command that i was i was executing you

00:46:12,319 --> 00:46:15,680
can

00:46:13,280 --> 00:46:17,200
pass an extra flag called limit to say

00:46:15,680 --> 00:46:18,240
how many elements you want to import at

00:46:17,200 --> 00:46:20,480
the same time

00:46:18,240 --> 00:46:22,319
there are other more advanced concepts

00:46:20,480 --> 00:46:25,359
one is called high watermark

00:46:22,319 --> 00:46:28,000
that allows you to say i'm going to be

00:46:25,359 --> 00:46:29,920
migrating a thousand elements at a time

00:46:28,000 --> 00:46:32,240
and the next time that you execute

00:46:29,920 --> 00:46:32,960
you know pick up from when you last left

00:46:32,240 --> 00:46:35,440
uh

00:46:32,960 --> 00:46:36,319
in the migration and in that regard you

00:46:35,440 --> 00:46:39,359
know

00:46:36,319 --> 00:46:41,520
you can avoid timeout operations from uh

00:46:39,359 --> 00:46:42,400
just executing a very long-running

00:46:41,520 --> 00:46:44,240
migration

00:46:42,400 --> 00:46:45,520
but normally that is what you do if you

00:46:44,240 --> 00:46:48,240
have you know big

00:46:45,520 --> 00:46:49,680
data sets you break them down into

00:46:48,240 --> 00:46:53,599
smaller chunks like

00:46:49,680 --> 00:46:55,920
uh a thousand for example at a time

00:46:53,599 --> 00:46:57,040
and using something like the high water

00:46:55,920 --> 00:46:59,119
mark you can

00:46:57,040 --> 00:47:00,800
schedule those migrations to happen

00:46:59,119 --> 00:47:03,839
let's say every five minutes

00:47:00,800 --> 00:47:05,040
and they will be picking up where the

00:47:03,839 --> 00:47:07,280
last migration left

00:47:05,040 --> 00:47:07,280
left

00:47:08,400 --> 00:47:11,839
let's see

00:47:13,359 --> 00:47:25,839
if there are any other questions

00:47:27,760 --> 00:47:32,400
migrating paragraph so if you need to

00:47:30,640 --> 00:47:35,280
migrate paragraph

00:47:32,400 --> 00:47:36,839
uh what you need to do it's actually one

00:47:35,280 --> 00:47:39,760
of the easiest

00:47:36,839 --> 00:47:42,720
migration to start

00:47:39,760 --> 00:47:43,440
but things start come to get complicated

00:47:42,720 --> 00:47:46,880
depending on

00:47:43,440 --> 00:47:49,280
how your paragraph structure is

00:47:46,880 --> 00:47:51,119
so this is a part of migration that you

00:47:49,280 --> 00:47:54,880
can run the example yourself

00:47:51,119 --> 00:47:58,079
but basically my source is the same

00:47:54,880 --> 00:48:01,119
uh from before i have a csv file

00:47:58,079 --> 00:48:04,319
i simply change the the path to the csv

00:48:01,119 --> 00:48:07,520
file and specify that corresponding id

00:48:04,319 --> 00:48:09,200
my destination i used entity reference

00:48:07,520 --> 00:48:09,920
revision column paragraph that's how you

00:48:09,200 --> 00:48:11,440
do it

00:48:09,920 --> 00:48:12,800
and then the different bundle is the

00:48:11,440 --> 00:48:14,000
machine name of the paragraph that you

00:48:12,800 --> 00:48:17,040
want to migrate

00:48:14,000 --> 00:48:18,880
and then this is the field mapping so in

00:48:17,040 --> 00:48:21,920
my paragraph i have a title field

00:48:18,880 --> 00:48:23,440
and an author field so as you can see

00:48:21,920 --> 00:48:25,839
it is not that different from a node

00:48:23,440 --> 00:48:27,839
migration um

00:48:25,839 --> 00:48:29,920
this is how you can do a paragraph

00:48:27,839 --> 00:48:31,920
migration when things start to get a

00:48:29,920 --> 00:48:33,599
little bit complicated is how to connect

00:48:31,920 --> 00:48:37,520
once you imported the paragraph

00:48:33,599 --> 00:48:40,400
to the node so the way to do that uh

00:48:37,520 --> 00:48:40,400
is using

00:48:41,359 --> 00:48:46,960
a plugin called migration lookup

00:48:44,480 --> 00:48:48,880
so what you what these plugins allows

00:48:46,960 --> 00:48:51,359
you to do is say

00:48:48,880 --> 00:48:52,800
i know that i already migrated something

00:48:51,359 --> 00:48:55,920
in a different migration

00:48:52,800 --> 00:49:00,559
and i want to connect that to my

00:48:55,920 --> 00:49:02,800
to my node migration in this case

00:49:00,559 --> 00:49:04,800
i am using many things at once i am

00:49:02,800 --> 00:49:05,680
using the migration lookup plugin to

00:49:04,800 --> 00:49:08,079
connect to the

00:49:05,680 --> 00:49:09,839
layer of migration i am using something

00:49:08,079 --> 00:49:13,280
that is called a pseudo field

00:49:09,839 --> 00:49:16,240
and then this is my paragraph field

00:49:13,280 --> 00:49:17,040
so paragraph fields are different to

00:49:16,240 --> 00:49:18,720
other

00:49:17,040 --> 00:49:20,079
reference fields in that you need to

00:49:18,720 --> 00:49:22,000
specify two things

00:49:20,079 --> 00:49:24,240
one is called the target id and the

00:49:22,000 --> 00:49:25,359
other one is called target revision id

00:49:24,240 --> 00:49:27,280
so that's something that you need to

00:49:25,359 --> 00:49:28,720
keep in mind any other reference field

00:49:27,280 --> 00:49:31,359
is only the target id

00:49:28,720 --> 00:49:33,200
so it's easier to manage and this

00:49:31,359 --> 00:49:34,559
migration lookup is going to return an

00:49:33,200 --> 00:49:36,720
array of two values

00:49:34,559 --> 00:49:38,720
and i am basically basically using you

00:49:36,720 --> 00:49:40,480
know the extract plugin

00:49:38,720 --> 00:49:42,079
from my pseudo field when you have a

00:49:40,480 --> 00:49:44,400
zero field and you want to use it

00:49:42,079 --> 00:49:45,680
as your source you put an adsine at the

00:49:44,400 --> 00:49:48,720
beginning and

00:49:45,680 --> 00:49:49,760
single quotes around it and then you

00:49:48,720 --> 00:49:52,319
know this array

00:49:49,760 --> 00:49:54,000
i want to extract the first element and

00:49:52,319 --> 00:49:55,280
i want to extract the second element and

00:49:54,000 --> 00:49:58,559
this is one way

00:49:55,280 --> 00:50:01,359
to populate paragraphs but there are

00:49:58,559 --> 00:50:02,960
many other ways things start to get

00:50:01,359 --> 00:50:04,160
complicated when you have nested

00:50:02,960 --> 00:50:05,760
paragraphs when you have

00:50:04,160 --> 00:50:07,359
paragraphs that might have revisions

00:50:05,760 --> 00:50:08,400
when you have paragraphs that might have

00:50:07,359 --> 00:50:11,359
translations

00:50:08,400 --> 00:50:12,079
when you have multi-value paragraph

00:50:11,359 --> 00:50:14,000
that's when

00:50:12,079 --> 00:50:15,440
you need to come up with these like

00:50:14,000 --> 00:50:18,400
necessary structures

00:50:15,440 --> 00:50:19,440
sometimes you might have to uh do like

00:50:18,400 --> 00:50:22,559
recursive

00:50:19,440 --> 00:50:24,160
uh migrations if you or process plugins

00:50:22,559 --> 00:50:27,200
that do a recursive

00:50:24,160 --> 00:50:29,920
operation in your data but like

00:50:27,200 --> 00:50:31,040
migrating paragraph itself is simple in

00:50:29,920 --> 00:50:34,079
the sense that

00:50:31,040 --> 00:50:36,400
um this is how you do it uh the

00:50:34,079 --> 00:50:38,720
destination you specify it like this

00:50:36,400 --> 00:50:40,480
your source as you would do otherwise

00:50:38,720 --> 00:50:42,240
and this is your field mapping

00:50:40,480 --> 00:50:43,839
once your paragraphs are into the system

00:50:42,240 --> 00:50:44,480
you connect them to your node in this

00:50:43,839 --> 00:50:46,800
case

00:50:44,480 --> 00:50:48,160
uh like this for example and things

00:50:46,800 --> 00:50:49,760
start to get complicated when you have

00:50:48,160 --> 00:50:53,520
multi-value

00:50:49,760 --> 00:50:54,960
you know nested paragraph and so on

00:50:53,520 --> 00:50:57,599
let's see if there are any other

00:50:54,960 --> 00:50:57,599
questions

00:50:57,839 --> 00:51:02,960
uh yeah you can there is a comment

00:51:00,960 --> 00:51:05,200
saying that you can set dependencies

00:51:02,960 --> 00:51:09,040
between entity reference and yes you can

00:51:05,200 --> 00:51:10,720
do that uh

00:51:09,040 --> 00:51:12,559
when you usually when you have an entity

00:51:10,720 --> 00:51:13,440
reference you have a separate migration

00:51:12,559 --> 00:51:15,599
only for that

00:51:13,440 --> 00:51:17,040
like in this case only for my images and

00:51:15,599 --> 00:51:18,720
only for my paragraph

00:51:17,040 --> 00:51:21,440
and this is one way that you can

00:51:18,720 --> 00:51:24,880
explicitly at the migrate api level

00:51:21,440 --> 00:51:26,319
say that you want to execute these

00:51:24,880 --> 00:51:28,400
migrations in advance

00:51:26,319 --> 00:51:30,079
because your node migration depends on

00:51:28,400 --> 00:51:34,319
these other two

00:51:30,079 --> 00:51:37,200
and i think that's it

00:51:34,319 --> 00:51:38,720
so thank you very much remember that the

00:51:37,200 --> 00:51:41,119
slide deck the example

00:51:38,720 --> 00:51:42,960
everything is already available so feel

00:51:41,119 --> 00:51:44,800
free to try it out yourself and you have

00:51:42,960 --> 00:51:46,160
my email if you have questions you can

00:51:44,800 --> 00:51:48,160
reach out later

00:51:46,160 --> 00:51:49,200
and that is the link also to the

00:51:48,160 --> 00:51:50,960
feedback form

00:51:49,200 --> 00:51:52,559
for the drupal association to let them

00:51:50,960 --> 00:51:54,559
know how i did so

00:51:52,559 --> 00:51:56,079
i would appreciate your feedback and

00:51:54,559 --> 00:52:00,000
thank you very much

00:51:56,079 --> 00:52:00,000
have a good rest of your day or night

00:52:02,839 --> 00:52:05,839
bye

00:52:29,599 --> 00:52:31,680

YouTube URL: https://www.youtube.com/watch?v=NBhkixY-PuA


