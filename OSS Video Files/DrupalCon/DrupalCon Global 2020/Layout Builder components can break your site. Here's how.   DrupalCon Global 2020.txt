Title: Layout Builder components can break your site. Here's how.   DrupalCon Global 2020
Publication date: 2020-09-01
Playlist: DrupalCon Global 2020
Description: 
	Learn why certain component types will break critical features of Drupal, including page revisioning, Workflow and Workspaces.
Captions: 
	00:00:00,880 --> 00:00:05,279
okay so it's it's 3 15 and um

00:00:03,840 --> 00:00:08,080
i'm gonna just get started because

00:00:05,279 --> 00:00:11,280
there's actually a lot to cover here

00:00:08,080 --> 00:00:12,480
and uh so let's just dive right in i

00:00:11,280 --> 00:00:13,759
really want to make sure there's some

00:00:12,480 --> 00:00:16,640
time at the end for some

00:00:13,759 --> 00:00:18,480
q a because it's such an important topic

00:00:16,640 --> 00:00:19,680
you'll see why i think it's so important

00:00:18,480 --> 00:00:22,000
as we go along and

00:00:19,680 --> 00:00:23,519
you know perhaps you'll agree all right

00:00:22,000 --> 00:00:25,119
so the title is a layout builder

00:00:23,519 --> 00:00:27,920
components can break your site

00:00:25,119 --> 00:00:29,599
here's how all right so who am i my name

00:00:27,920 --> 00:00:31,039
is andre angel and tony i'm the founder

00:00:29,599 --> 00:00:34,079
of performant labs

00:00:31,039 --> 00:00:37,520
i've been working with drupal since 5.0

00:00:34,079 --> 00:00:39,280
clients include friends telecom and cbs

00:00:37,520 --> 00:00:41,520
interactive docusign

00:00:39,280 --> 00:00:42,399
and so on and so on and a lot of the

00:00:41,520 --> 00:00:44,399
work that you're

00:00:42,399 --> 00:00:46,160
going to see here was during the last

00:00:44,399 --> 00:00:47,680
build

00:00:46,160 --> 00:00:49,600
we learned this during the last build

00:00:47,680 --> 00:00:50,640
that i just did which was for tesla we

00:00:49,600 --> 00:00:54,320
upgraded the

00:00:50,640 --> 00:00:56,079
d7 site to d8

00:00:54,320 --> 00:00:58,000
and performance labs is sponsoring

00:00:56,079 --> 00:00:59,920
layout builder kit campaign kit

00:00:58,000 --> 00:01:01,120
payment stripe these are all contributed

00:00:59,920 --> 00:01:02,960
modules

00:01:01,120 --> 00:01:04,640
and we're also the founder of the drupal

00:01:02,960 --> 00:01:06,080
quality initiative so contact me if

00:01:04,640 --> 00:01:07,680
you're interested in participating in

00:01:06,080 --> 00:01:10,799
any of those or put in

00:01:07,680 --> 00:01:13,119
issues or whatnot let me just ask that

00:01:10,799 --> 00:01:16,080
if you have a question for me

00:01:13,119 --> 00:01:17,600
um please put q colon in front of it and

00:01:16,080 --> 00:01:19,680
then when i'm

00:01:17,600 --> 00:01:22,240
scrolling through the chat i can find

00:01:19,680 --> 00:01:24,159
them a little bit easier

00:01:22,240 --> 00:01:25,360
okay so where to find this talk i'll

00:01:24,159 --> 00:01:26,880
also put it

00:01:25,360 --> 00:01:29,520
once i get the video i'll also put it

00:01:26,880 --> 00:01:34,000
there and you'll have the presentation

00:01:29,520 --> 00:01:36,560
pdf and this is actually part one of

00:01:34,000 --> 00:01:38,159
this important topic so i'll deliver

00:01:36,560 --> 00:01:39,600
part two at a camp later this year

00:01:38,159 --> 00:01:41,840
perhaps at bad camp but i don't know

00:01:39,600 --> 00:01:44,000
which camp yet

00:01:41,840 --> 00:01:46,399
you'll see that there's some details

00:01:44,000 --> 00:01:48,000
that we still have to work out

00:01:46,399 --> 00:01:49,840
but this is actually a really really

00:01:48,000 --> 00:01:51,200
good introduction it really explains i

00:01:49,840 --> 00:01:52,960
think what the problem is so that

00:01:51,200 --> 00:01:55,119
everyone is at least aware of it

00:01:52,960 --> 00:01:56,159
you can work through all the issues that

00:01:55,119 --> 00:01:59,200
i'm going to start to

00:01:56,159 --> 00:02:01,280
raise for people to consider

00:01:59,200 --> 00:02:02,799
on your own and of course obviously what

00:02:01,280 --> 00:02:04,159
i'd like to do is help people

00:02:02,799 --> 00:02:06,479
and work through some of those issues

00:02:04,159 --> 00:02:08,640
and then give them my results

00:02:06,479 --> 00:02:10,080
so if you want to be notified about part

00:02:08,640 --> 00:02:13,599
two whenever that comes up just

00:02:10,080 --> 00:02:16,160
put your email at the url above

00:02:13,599 --> 00:02:16,800
and uh it's an announcement only email

00:02:16,160 --> 00:02:18,560
list

00:02:16,800 --> 00:02:20,160
okay so what are we going to cover

00:02:18,560 --> 00:02:22,879
instant introduction to layout builder

00:02:20,160 --> 00:02:24,879
why do we use content management systems

00:02:22,879 --> 00:02:26,319
component anatomy the fundamental

00:02:24,879 --> 00:02:29,360
problem the solution

00:02:26,319 --> 00:02:32,160
a performance warning layout builder kit

00:02:29,360 --> 00:02:34,319
layout builder rules to live by the

00:02:32,160 --> 00:02:36,560
emerging layout builder ecosystem

00:02:34,319 --> 00:02:39,840
i'll share some resources and then we'll

00:02:36,560 --> 00:02:39,840
have some time for q a

00:02:40,720 --> 00:02:44,319
okay so a note on nomenclature when

00:02:42,560 --> 00:02:45,280
discussing layout builder for our

00:02:44,319 --> 00:02:46,879
purposes

00:02:45,280 --> 00:02:48,400
you can think of a component as being

00:02:46,879 --> 00:02:50,160
the same thing as a block

00:02:48,400 --> 00:02:51,680
it's actually not totally true in the

00:02:50,160 --> 00:02:52,239
sense that layout builder can actually

00:02:51,680 --> 00:02:54,400
work with

00:02:52,239 --> 00:02:55,840
a couple different areas of drupal but

00:02:54,400 --> 00:02:56,640
most of the time if i say the word

00:02:55,840 --> 00:02:59,920
component

00:02:56,640 --> 00:03:02,000
think of it as a block and when

00:02:59,920 --> 00:03:04,800
in most instances a page is the same

00:03:02,000 --> 00:03:06,560
thing as a node okay so an instant

00:03:04,800 --> 00:03:08,319
introduction to layout builder by now

00:03:06,560 --> 00:03:09,920
i'm hoping that people have

00:03:08,319 --> 00:03:11,680
gotten some sort of introduction to it

00:03:09,920 --> 00:03:14,159
elsewhere so all i really want to say is

00:03:11,680 --> 00:03:15,840
for people who remember panelizer

00:03:14,159 --> 00:03:17,440
layout builder is really a souped-up

00:03:15,840 --> 00:03:20,319
analyzer

00:03:17,440 --> 00:03:21,840
if you haven't used panelizer then one

00:03:20,319 --> 00:03:23,360
way to look at it is layout builder is a

00:03:21,840 --> 00:03:25,760
way to control the presentation

00:03:23,360 --> 00:03:26,799
of several parts of drupal so it's not

00:03:25,760 --> 00:03:28,319
just pages

00:03:26,799 --> 00:03:30,080
you can actually use layout builder in

00:03:28,319 --> 00:03:33,840
pages which is nodes

00:03:30,080 --> 00:03:35,519
blocks taxonomy terms and menus

00:03:33,840 --> 00:03:37,680
you can create rigid layouts that

00:03:35,519 --> 00:03:40,480
content editors can't change

00:03:37,680 --> 00:03:41,840
or layouts almost completely editable by

00:03:40,480 --> 00:03:43,680
content editors

00:03:41,840 --> 00:03:46,720
or somewhere in between and that's what

00:03:43,680 --> 00:03:49,200
makes it really flexible

00:03:46,720 --> 00:03:51,040
all right so what kind of site do you

00:03:49,200 --> 00:03:51,760
want what kind of site do we all want do

00:03:51,040 --> 00:03:55,040
you want

00:03:51,760 --> 00:03:58,159
the shiny fast italian

00:03:55,040 --> 00:04:00,239
motorcycle or do you want that and i

00:03:58,159 --> 00:04:01,360
my goal here is to prevent the one on

00:04:00,239 --> 00:04:03,439
the right by

00:04:01,360 --> 00:04:06,319
avoiding what could potentially be a

00:04:03,439 --> 00:04:06,319
really big mistake

00:04:06,879 --> 00:04:10,480
so let's back up by saying why do we use

00:04:08,640 --> 00:04:11,439
content management systems or by asking

00:04:10,480 --> 00:04:13,439
this question

00:04:11,439 --> 00:04:14,959
well to make managing the content on our

00:04:13,439 --> 00:04:16,639
website easier for the teams that work

00:04:14,959 --> 00:04:19,440
on them

00:04:16,639 --> 00:04:19,759
okay how do content management systems

00:04:19,440 --> 00:04:22,639
do

00:04:19,759 --> 00:04:23,600
that well they have a laundry list of

00:04:22,639 --> 00:04:25,440
features

00:04:23,600 --> 00:04:27,120
from managing media assets to spell

00:04:25,440 --> 00:04:30,400
checking but two features are

00:04:27,120 --> 00:04:32,320
particularly important for many teams

00:04:30,400 --> 00:04:34,000
important feature number one is page

00:04:32,320 --> 00:04:35,759
versioning

00:04:34,000 --> 00:04:38,560
and that just simply means that each

00:04:35,759 --> 00:04:40,560
change to the page saves a new version

00:04:38,560 --> 00:04:42,639
and that's because content editors want

00:04:40,560 --> 00:04:45,120
to roll back changes quickly

00:04:42,639 --> 00:04:47,040
they want to see what happened maybe

00:04:45,120 --> 00:04:48,639
three hours ago or three days ago

00:04:47,040 --> 00:04:49,919
and they want to go back to that

00:04:48,639 --> 00:04:52,000
sometimes they want to go back to that

00:04:49,919 --> 00:04:55,360
version or they at least want to view it

00:04:52,000 --> 00:04:58,400
and in some entities it's actually

00:04:55,360 --> 00:04:59,680
um useful for the legal team sometimes

00:04:58,400 --> 00:05:00,880
they have to go back in time and they

00:04:59,680 --> 00:05:04,479
have to see what the state

00:05:00,880 --> 00:05:05,759
of the page was at a certain point in

00:05:04,479 --> 00:05:07,440
time

00:05:05,759 --> 00:05:08,960
using drupal versioning isn't the best

00:05:07,440 --> 00:05:11,120
way to do that for

00:05:08,960 --> 00:05:13,520
a couple reasons but some entities or

00:05:11,120 --> 00:05:15,759
some corporations still do it that way

00:05:13,520 --> 00:05:16,880
okay important feature number two

00:05:15,759 --> 00:05:19,120
workflow

00:05:16,880 --> 00:05:20,720
content editors want to collaborate and

00:05:19,120 --> 00:05:22,080
ensure high quality so one of the ways

00:05:20,720 --> 00:05:22,960
they do that is using workflow

00:05:22,080 --> 00:05:25,039
mechanisms

00:05:22,960 --> 00:05:27,440
and by workflow that's changing the

00:05:25,039 --> 00:05:28,800
status from draft to needs review and

00:05:27,440 --> 00:05:31,600
then to published

00:05:28,800 --> 00:05:33,919
and the thing about workflow is that you

00:05:31,600 --> 00:05:35,360
actually have to have multiple versions

00:05:33,919 --> 00:05:36,800
at the same time you need a version

00:05:35,360 --> 00:05:38,639
that's being displayed to the public but

00:05:36,800 --> 00:05:41,120
then you need another version

00:05:38,639 --> 00:05:42,720
in the same database that is being

00:05:41,120 --> 00:05:44,720
worked on that isn't displayed to the

00:05:42,720 --> 00:05:45,520
public and at some point the one that's

00:05:44,720 --> 00:05:47,600
being displayed

00:05:45,520 --> 00:05:49,120
is replaced with the new one so you can

00:05:47,600 --> 00:05:51,919
see that in that case

00:05:49,120 --> 00:05:54,400
you have another case where you need

00:05:51,919 --> 00:05:54,400
versions

00:05:54,720 --> 00:05:58,160
so let's talk about versioning

00:05:58,960 --> 00:06:03,440
but first we need to discuss the two

00:06:00,880 --> 00:06:04,880
different ways cmss make pages

00:06:03,440 --> 00:06:06,720
now sorry if this is a little bit too

00:06:04,880 --> 00:06:09,440
basic for some folks

00:06:06,720 --> 00:06:11,520
but it is useful to go over some cmss

00:06:09,440 --> 00:06:12,479
create a full html page and they write

00:06:11,520 --> 00:06:14,800
it into a file

00:06:12,479 --> 00:06:16,560
like adobe experience manager so you can

00:06:14,800 --> 00:06:20,080
see on the right there you've got

00:06:16,560 --> 00:06:21,440
a page that's stamped with the date the

00:06:20,080 --> 00:06:22,639
one on top

00:06:21,440 --> 00:06:25,199
and then you've got the one that's

00:06:22,639 --> 00:06:25,919
actually being displayed so to see back

00:06:25,199 --> 00:06:27,520
in time

00:06:25,919 --> 00:06:29,039
just pull up an older version of the

00:06:27,520 --> 00:06:31,600
file because

00:06:29,039 --> 00:06:34,800
the state of that page was written

00:06:31,600 --> 00:06:36,639
completely in that html

00:06:34,800 --> 00:06:38,880
and to make the older page current just

00:06:36,639 --> 00:06:41,000
rename the old version of the file

00:06:38,880 --> 00:06:42,400
something like changing the front page

00:06:41,000 --> 00:06:44,960
00:06:42,400 --> 00:06:46,840
to just front page that's probably not

00:06:44,960 --> 00:06:48,479
how it actually works but it's not far

00:06:46,840 --> 00:06:51,280
off

00:06:48,479 --> 00:06:51,680
then there's the dynamic approach and in

00:06:51,280 --> 00:06:53,840
this

00:06:51,680 --> 00:06:55,440
approach the page is rendered on the fly

00:06:53,840 --> 00:06:58,479
sometimes for each user

00:06:55,440 --> 00:07:01,840
when the user is logged in

00:06:58,479 --> 00:07:04,960
this is the system that drupal uses

00:07:01,840 --> 00:07:07,120
we do add several layers of caching and

00:07:04,960 --> 00:07:08,960
that stores a version of the page too

00:07:07,120 --> 00:07:09,840
but those page versions are not retained

00:07:08,960 --> 00:07:12,160
long term

00:07:09,840 --> 00:07:12,880
and they cannot be used for versioning

00:07:12,160 --> 00:07:14,400
so

00:07:12,880 --> 00:07:16,639
if you're thinking of caching get that

00:07:14,400 --> 00:07:17,039
out of your head we that doesn't uh play

00:07:16,639 --> 00:07:20,720
a role

00:07:17,039 --> 00:07:20,720
in what we're about to talk about at all

00:07:21,759 --> 00:07:26,960
um meg would love to or i think maybe

00:07:24,400 --> 00:07:30,080
you're talking to sean

00:07:26,960 --> 00:07:31,840
so what's the problem okay well the

00:07:30,080 --> 00:07:33,759
problem is that we may break

00:07:31,840 --> 00:07:35,919
these two features versioning and

00:07:33,759 --> 00:07:38,639
workflow depending on where the

00:07:35,919 --> 00:07:40,560
component content is stored and the

00:07:38,639 --> 00:07:41,840
complexity of the component

00:07:40,560 --> 00:07:44,639
so you actually have to be concerned

00:07:41,840 --> 00:07:46,639
about this in two axes

00:07:44,639 --> 00:07:48,720
where is the content stored and how

00:07:46,639 --> 00:07:50,960
complex is it

00:07:48,720 --> 00:07:52,800
and you'll see what i mean in a second

00:07:50,960 --> 00:07:53,440
and it's not just that you can break the

00:07:52,800 --> 00:07:55,199
site

00:07:53,440 --> 00:07:57,599
this is one of those things in which

00:07:55,199 --> 00:08:00,960
people may start to say

00:07:57,599 --> 00:08:01,599
drupal itself is broken but it's not

00:08:00,960 --> 00:08:03,680
drupal

00:08:01,599 --> 00:08:04,879
it's actually an implementation issue

00:08:03,680 --> 00:08:06,319
and i've been work

00:08:04,879 --> 00:08:08,400
i've worked with a whole bunch of

00:08:06,319 --> 00:08:08,960
frameworks i can spot these sorts of

00:08:08,400 --> 00:08:11,360
things

00:08:08,960 --> 00:08:12,000
a mile away now and if we don't get a

00:08:11,360 --> 00:08:14,319
good handle

00:08:12,000 --> 00:08:15,199
on what i'm describing here we're going

00:08:14,319 --> 00:08:17,120
to have some

00:08:15,199 --> 00:08:20,639
installations where people say drupal

00:08:17,120 --> 00:08:23,520
sucks well no it's not actually drupal

00:08:20,639 --> 00:08:25,039
um it's actually because folks weren't

00:08:23,520 --> 00:08:26,800
really aware of this

00:08:25,039 --> 00:08:29,520
problem and then they painted themselves

00:08:26,800 --> 00:08:29,520
into a corner

00:08:31,440 --> 00:08:35,760
yes we've all seen this happen for sure

00:08:34,000 --> 00:08:37,120
okay so let's take a look at the anatomy

00:08:35,760 --> 00:08:38,959
of a component

00:08:37,120 --> 00:08:40,240
how are components made so just for

00:08:38,959 --> 00:08:42,240
simplicity's sake we're going to say

00:08:40,240 --> 00:08:44,159
there are three parts to a component

00:08:42,240 --> 00:08:45,920
and again remember components are blocks

00:08:44,159 --> 00:08:46,480
for this purpose of this discussion

00:08:45,920 --> 00:08:48,320
although

00:08:46,480 --> 00:08:49,760
they could also be menu items and

00:08:48,320 --> 00:08:53,360
taxonomy terms and

00:08:49,760 --> 00:08:55,040
and so on so number one is the front end

00:08:53,360 --> 00:08:56,800
that's the rendered html

00:08:55,040 --> 00:08:58,399
and that can be either rendered through

00:08:56,800 --> 00:08:59,040
twig well i'm not going to go too much

00:08:58,399 --> 00:09:00,320
into that

00:08:59,040 --> 00:09:03,360
hold off then you've got the

00:09:00,320 --> 00:09:05,440
configuration form that's

00:09:03,360 --> 00:09:07,279
things like what color am i displaying

00:09:05,440 --> 00:09:09,839
or what's what's um

00:09:07,279 --> 00:09:11,360
do i use rounded boxes or a rounded

00:09:09,839 --> 00:09:13,600
frame instead of a square frame that

00:09:11,360 --> 00:09:15,440
sort of thing

00:09:13,600 --> 00:09:17,200
and then lastly you have the content

00:09:15,440 --> 00:09:18,320
that actually has to get displayed

00:09:17,200 --> 00:09:20,080
so let's go through each one of them

00:09:18,320 --> 00:09:22,320
here's a sample component it's a

00:09:20,080 --> 00:09:24,399
checkout component

00:09:22,320 --> 00:09:25,839
where you want your shipping address to

00:09:24,399 --> 00:09:28,640
be entered

00:09:25,839 --> 00:09:30,640
and it's got the rendered html and for

00:09:28,640 --> 00:09:32,640
our purposes

00:09:30,640 --> 00:09:34,000
it can either be javascript or it can be

00:09:32,640 --> 00:09:34,959
html it doesn't matter we're just

00:09:34,000 --> 00:09:37,600
talking about the for

00:09:34,959 --> 00:09:39,519
the public facing part of the component

00:09:37,600 --> 00:09:43,519
and it can be rendered by twig

00:09:39,519 --> 00:09:45,519
or by react or something like react

00:09:43,519 --> 00:09:47,200
all right part two is the configuration

00:09:45,519 --> 00:09:48,959
form so in layout builder the

00:09:47,200 --> 00:09:51,519
configuration form is right there on the

00:09:48,959 --> 00:09:52,800
right hand side

00:09:51,519 --> 00:09:54,640
the content is on the left the

00:09:52,800 --> 00:09:55,600
configuration form is on the right now

00:09:54,640 --> 00:09:57,120
what you're looking at is the

00:09:55,600 --> 00:09:58,160
configuration form for one of the

00:09:57,120 --> 00:10:01,120
components that

00:09:58,160 --> 00:10:01,760
that we're maintaining which is the tab

00:10:01,120 --> 00:10:05,839
component

00:10:01,760 --> 00:10:05,839
in layout builder kit

00:10:06,079 --> 00:10:12,880
okay next now you have the content

00:10:10,240 --> 00:10:14,240
and that's on the left hand side all

00:10:12,880 --> 00:10:17,040
right so there you go you've got three

00:10:14,240 --> 00:10:20,079
different parts of the component

00:10:17,040 --> 00:10:20,480
so what becomes important is you want to

00:10:20,079 --> 00:10:22,560
know

00:10:20,480 --> 00:10:23,600
where is the component configuration

00:10:22,560 --> 00:10:24,720
stored

00:10:23,600 --> 00:10:27,120
you actually want to know where the

00:10:24,720 --> 00:10:28,720
content is stored but you have to start

00:10:27,120 --> 00:10:30,880
by knowing where the configuration is

00:10:28,720 --> 00:10:32,079
stored so if i take a look at that

00:10:30,880 --> 00:10:34,640
component that's actually

00:10:32,079 --> 00:10:37,519
a block there the drush site install

00:10:34,640 --> 00:10:37,519
that's actually a block

00:10:40,800 --> 00:10:44,240
and the first location that you can

00:10:43,120 --> 00:10:46,720
store

00:10:44,240 --> 00:10:48,720
the configuration of an entity which

00:10:46,720 --> 00:10:50,720
includes its location on the page

00:10:48,720 --> 00:10:52,560
is actually with the entity definition

00:10:50,720 --> 00:10:53,120
so in this case with layout builder you

00:10:52,560 --> 00:10:55,440
can

00:10:53,120 --> 00:10:56,480
pull up a content type and you can say i

00:10:55,440 --> 00:11:00,079
want to store

00:10:56,480 --> 00:11:03,920
all my um all my components

00:11:00,079 --> 00:11:05,680
on the page inside of

00:11:03,920 --> 00:11:07,519
the content type definition for layout

00:11:05,680 --> 00:11:10,399
builder

00:11:07,519 --> 00:11:11,839
and when we store things there the

00:11:10,399 --> 00:11:14,480
configuration applies to

00:11:11,839 --> 00:11:16,320
all the entities in other words all the

00:11:14,480 --> 00:11:18,000
nodes of that content type

00:11:16,320 --> 00:11:20,480
and that check box there has to be

00:11:18,000 --> 00:11:20,480
turned on

00:11:22,880 --> 00:11:28,160
okay now you're going to also see

00:11:26,000 --> 00:11:30,160
when you're working with the layout that

00:11:28,160 --> 00:11:31,839
little message that tells you

00:11:30,160 --> 00:11:34,160
that you're actually editing the

00:11:31,839 --> 00:11:38,079
configuration that's going to apply

00:11:34,160 --> 00:11:38,079
to all the nodes of that content type

00:11:39,440 --> 00:11:43,519
okay so what's the second location well

00:11:41,519 --> 00:11:44,320
you can store it with the actual node

00:11:43,519 --> 00:11:47,839
block

00:11:44,320 --> 00:11:48,959
taxonomy or menu item and for that to

00:11:47,839 --> 00:11:52,320
happen

00:11:48,959 --> 00:11:56,079
you need to turn on that checkbox

00:11:52,320 --> 00:11:58,959
now you actually get to uniquely

00:11:56,079 --> 00:12:01,040
change the look of each page uniquely

00:11:58,959 --> 00:12:03,440
change the look of each menu item

00:12:01,040 --> 00:12:06,800
as long as you've changed or sorry as

00:12:03,440 --> 00:12:06,800
long as you've checked that box

00:12:08,880 --> 00:12:12,079
i should also mention that you start off

00:12:10,880 --> 00:12:15,600
by using the

00:12:12,079 --> 00:12:15,600
standard um

00:12:15,760 --> 00:12:18,800
you start off by using the general

00:12:18,160 --> 00:12:20,480
template

00:12:18,800 --> 00:12:21,920
and then you can edit it when that

00:12:20,480 --> 00:12:23,839
checkbox is turned on so you can

00:12:21,920 --> 00:12:25,680
actually start people off with a certain

00:12:23,839 --> 00:12:27,279
structure and then they modify it and

00:12:25,680 --> 00:12:29,920
that's actually a benefit i think of

00:12:27,279 --> 00:12:29,920
layout builder

00:12:31,440 --> 00:12:38,880
so when you

00:12:35,120 --> 00:12:39,920
add that or when you check that second

00:12:38,880 --> 00:12:42,320
box

00:12:39,920 --> 00:12:45,279
um you will notice that drupal adds an

00:12:42,320 --> 00:12:48,000
extra field to the entity

00:12:45,279 --> 00:12:49,120
so this is the field page and then all

00:12:48,000 --> 00:12:50,959
of a sudden you're going to see this

00:12:49,120 --> 00:12:53,040
layout field show up

00:12:50,959 --> 00:12:54,720
you can't edit it directly but that's

00:12:53,040 --> 00:12:55,600
actually where all the configuration for

00:12:54,720 --> 00:12:58,480
the node

00:12:55,600 --> 00:13:01,680
the menu item taxonomy term etc is

00:12:58,480 --> 00:13:01,680
stored it's in there

00:13:04,160 --> 00:13:09,600
to store that extra field drupal adds an

00:13:06,639 --> 00:13:12,160
extra table to the database

00:13:09,600 --> 00:13:14,000
and then if revisions are turned on it

00:13:12,160 --> 00:13:16,320
adds the revision table too

00:13:14,000 --> 00:13:18,160
but i'm not showing that below so you

00:13:16,320 --> 00:13:20,240
can see on the right hand side that now

00:13:18,160 --> 00:13:21,920
drupal has added a new table which

00:13:20,240 --> 00:13:24,560
corresponds it's got the same sort of

00:13:21,920 --> 00:13:26,720
name as the field obviously

00:13:24,560 --> 00:13:28,480
and the actual field names depending on

00:13:26,720 --> 00:13:34,480
what you're editing nodes blocks menus

00:13:28,480 --> 00:13:37,040
or taxonomy are there on the left

00:13:34,480 --> 00:13:39,360
okay so how is the configuration stored

00:13:37,040 --> 00:13:41,920
well it's stored as a serialized

00:13:39,360 --> 00:13:43,360
string it looks like that that's a

00:13:41,920 --> 00:13:46,160
really short one

00:13:43,360 --> 00:13:47,760
and it can get really long and um on the

00:13:46,160 --> 00:13:50,079
tesla build we had to actually

00:13:47,760 --> 00:13:51,680
expand the size of that field because we

00:13:50,079 --> 00:13:53,040
had such long pages if you go take a

00:13:51,680 --> 00:13:55,279
look at those pages you'll see how long

00:13:53,040 --> 00:13:55,279
they are

00:13:56,800 --> 00:14:00,720
okay now where's the content saved well

00:13:58,720 --> 00:14:03,199
when you're working with blocks

00:14:00,720 --> 00:14:04,240
the the content is stored in block

00:14:03,199 --> 00:14:06,720
tables

00:14:04,240 --> 00:14:08,320
that follow the same structure as other

00:14:06,720 --> 00:14:11,040
entities

00:14:08,320 --> 00:14:12,000
in other words for every field that you

00:14:11,040 --> 00:14:13,839
add to a block

00:14:12,000 --> 00:14:15,519
you're going to see a table on the file

00:14:13,839 --> 00:14:16,480
system or in the sorry rather on the

00:14:15,519 --> 00:14:17,920
database

00:14:16,480 --> 00:14:20,000
so you can see there you've got the

00:14:17,920 --> 00:14:21,279
block content body you've got a field

00:14:20,000 --> 00:14:23,440
media field

00:14:21,279 --> 00:14:25,120
and so on i kept it very small just to

00:14:23,440 --> 00:14:26,880
keep it non-complex but

00:14:25,120 --> 00:14:28,399
for every field that you add to a block

00:14:26,880 --> 00:14:32,639
you're going to see a new table

00:14:28,399 --> 00:14:32,639
on the file system sorry on the database

00:14:34,399 --> 00:14:40,000
okay so what was the problem again

00:14:37,519 --> 00:14:41,040
the question is which version is drupal

00:14:40,000 --> 00:14:43,199
going to display

00:14:41,040 --> 00:14:46,000
when you ask it to display a page

00:14:43,199 --> 00:14:47,920
especially if you're going back in time

00:14:46,000 --> 00:14:49,519
and the problem arises with older

00:14:47,920 --> 00:14:52,000
versions of the page

00:14:49,519 --> 00:14:53,440
which version of the component should be

00:14:52,000 --> 00:14:55,839
displayed

00:14:53,440 --> 00:14:58,079
obviously if you say i want to see the

00:14:55,839 --> 00:15:00,160
page from a week ago you want the value

00:14:58,079 --> 00:15:02,880
of the component from a week ago

00:15:00,160 --> 00:15:03,680
all the components from a week ago you

00:15:02,880 --> 00:15:05,600
don't want

00:15:03,680 --> 00:15:07,440
the structure of the page from a week

00:15:05,600 --> 00:15:09,279
ago but then show the value of the

00:15:07,440 --> 00:15:12,240
components as they are today

00:15:09,279 --> 00:15:13,040
that's not useful to people and that

00:15:12,240 --> 00:15:16,240
will break

00:15:13,040 --> 00:15:17,680
the site you will have very unhappy

00:15:16,240 --> 00:15:18,399
people because they actually won't be

00:15:17,680 --> 00:15:19,920
able to

00:15:18,399 --> 00:15:23,440
use the site in the way that maybe you

00:15:19,920 --> 00:15:25,839
had promised them it could be used

00:15:23,440 --> 00:15:27,600
so for drupal to know what the version

00:15:25,839 --> 00:15:30,320
of the component

00:15:27,600 --> 00:15:32,560
is that it should display on the on the

00:15:30,320 --> 00:15:34,480
version of the page

00:15:32,560 --> 00:15:36,560
the revision of the block needs to be

00:15:34,480 --> 00:15:40,160
stored with the layout

00:15:36,560 --> 00:15:42,240
and as of drupal 8.9 and 9.0 global

00:15:40,160 --> 00:15:45,040
reusable components do not store their

00:15:42,240 --> 00:15:48,160
revision id necessarily with the layout

00:15:45,040 --> 00:15:52,240
they store it inside of the blocks

00:15:48,160 --> 00:15:52,240
okay so

00:15:52,880 --> 00:15:55,120
all right i've actually already

00:15:53,839 --> 00:15:56,720
explained this you could revert to an

00:15:55,120 --> 00:15:58,000
older page but it would show the most

00:15:56,720 --> 00:15:59,920
current

00:15:58,000 --> 00:16:01,360
version of the components thereby

00:15:59,920 --> 00:16:04,800
thereby breaking

00:16:01,360 --> 00:16:04,800
these key features

00:16:07,600 --> 00:16:12,079
okay so do you want to be the one

00:16:10,240 --> 00:16:14,480
telling the client that the page revers

00:16:12,079 --> 00:16:15,680
revisioning workflow and workspaces are

00:16:14,480 --> 00:16:18,959
all broken

00:16:15,680 --> 00:16:20,720
no you don't and it gets a little bit

00:16:18,959 --> 00:16:22,240
trickier what about parent-child

00:16:20,720 --> 00:16:23,839
relationships and components

00:16:22,240 --> 00:16:25,279
like a field that points to another

00:16:23,839 --> 00:16:27,120
object

00:16:25,279 --> 00:16:28,800
these two are not stored in the layout

00:16:27,120 --> 00:16:30,560
and pulling up old pages may show the

00:16:28,800 --> 00:16:33,120
most recent version of the child if you

00:16:30,560 --> 00:16:33,120
aren't careful

00:16:34,720 --> 00:16:39,519
okay so one way out of this issue is

00:16:37,600 --> 00:16:40,959
when making custom components is storing

00:16:39,519 --> 00:16:43,600
the content with the layout

00:16:40,959 --> 00:16:44,480
as part of the serialized string

00:16:43,600 --> 00:16:46,800
therefore

00:16:44,480 --> 00:16:48,839
content is automatically revisioned

00:16:46,800 --> 00:16:51,199
because the string is stored with the

00:16:48,839 --> 00:16:52,800
page

00:16:51,199 --> 00:16:56,160
version one of layout builder kit

00:16:52,800 --> 00:16:58,079
components use this mechanism

00:16:56,160 --> 00:17:00,160
and it's a perfectly valid way to get

00:16:58,079 --> 00:17:02,880
around this problem

00:17:00,160 --> 00:17:03,519
so there you see now a serialized string

00:17:02,880 --> 00:17:07,039
that has

00:17:03,519 --> 00:17:10,160
not just configuration it actually has

00:17:07,039 --> 00:17:10,160
content in it as well

00:17:13,679 --> 00:17:17,280
okay so how should you proceed well the

00:17:15,839 --> 00:17:19,600
answer to that is carefully

00:17:17,280 --> 00:17:21,520
be aware be very aware of how your

00:17:19,600 --> 00:17:23,120
component content is stored especially

00:17:21,520 --> 00:17:25,520
folder revisions or workflow

00:17:23,120 --> 00:17:26,720
or workspaces because workspaces depends

00:17:25,520 --> 00:17:28,799
on this as well

00:17:26,720 --> 00:17:30,720
is needed either immediately or in the

00:17:28,799 --> 00:17:32,080
future understand the details of each

00:17:30,720 --> 00:17:34,160
component type and test

00:17:32,080 --> 00:17:35,440
everything thoroughly so there are some

00:17:34,160 --> 00:17:37,039
component types

00:17:35,440 --> 00:17:39,280
right out of the box that will store

00:17:37,039 --> 00:17:40,799
revisions and there are some that won't

00:17:39,280 --> 00:17:42,720
so you have to actually take a moment

00:17:40,799 --> 00:17:44,400
learn what those are and make sure that

00:17:42,720 --> 00:17:46,640
if you revert back to

00:17:44,400 --> 00:17:47,600
a version of the page from a week ago

00:17:46,640 --> 00:17:49,919
that you're seeing

00:17:47,600 --> 00:17:53,039
the value or the state of the components

00:17:49,919 --> 00:17:58,400
also from a week ago

00:17:53,039 --> 00:17:58,400
do not assume test and keep detailed

00:17:58,840 --> 00:18:05,440
notes

00:18:01,440 --> 00:18:05,440
um you cannot do that let's see

00:18:05,760 --> 00:18:09,120
if you're not following he means blocks

00:18:07,200 --> 00:18:10,480
for use across multiple pages yeah oh

00:18:09,120 --> 00:18:12,160
yeah oh i didn't even want to get into

00:18:10,480 --> 00:18:14,880
that ryan

00:18:12,160 --> 00:18:16,160
too much okay so let's keep on going so

00:18:14,880 --> 00:18:17,520
let's see if content is stored in

00:18:16,160 --> 00:18:18,960
serialized string doesn't that negate

00:18:17,520 --> 00:18:21,039
the ability to translate the con

00:18:18,960 --> 00:18:22,160
yeah there are there are some actually

00:18:21,039 --> 00:18:24,400
negative parts to

00:18:22,160 --> 00:18:25,679
storing things in serialized strings

00:18:24,400 --> 00:18:26,240
this is one of those things that you

00:18:25,679 --> 00:18:30,080
have to

00:18:26,240 --> 00:18:31,520
decide what is the um

00:18:30,080 --> 00:18:33,200
what is the most important feature that

00:18:31,520 --> 00:18:35,039
you want to maximize

00:18:33,200 --> 00:18:36,720
there may be a way in the future that we

00:18:35,039 --> 00:18:38,640
can have it all

00:18:36,720 --> 00:18:40,400
i suspect that that's going to happen by

00:18:38,640 --> 00:18:41,360
creating some custom classes that are

00:18:40,400 --> 00:18:44,000
going to help us

00:18:41,360 --> 00:18:45,360
but at this time it looks like you have

00:18:44,000 --> 00:18:48,480
to make some choices

00:18:45,360 --> 00:18:50,880
in some cases particularly when the

00:18:48,480 --> 00:18:53,280
components are complex when they're

00:18:50,880 --> 00:18:56,880
simple you can actually get away with

00:18:53,280 --> 00:18:58,400
just the built-in features i recommend

00:18:56,880 --> 00:19:00,720
teaching everyone on the team about this

00:18:58,400 --> 00:19:00,720
issue

00:19:01,200 --> 00:19:03,919
okay and chris says when we discuss

00:19:02,640 --> 00:19:05,440
creating inline blocks i initially

00:19:03,919 --> 00:19:06,799
proposed storing the data in line like

00:19:05,440 --> 00:19:09,200
this and was talked out of it for

00:19:06,799 --> 00:19:10,960
precisely this reason absolutely

00:19:09,200 --> 00:19:12,480
okay so leveraging the framework if

00:19:10,960 --> 00:19:14,080
there are so many problems with storing

00:19:12,480 --> 00:19:17,200
content in tables

00:19:14,080 --> 00:19:18,880
you know like um a parent-child

00:19:17,200 --> 00:19:20,240
relationship might break and you may not

00:19:18,880 --> 00:19:22,320
get the right child

00:19:20,240 --> 00:19:24,240
why not just store everything in the

00:19:22,320 --> 00:19:25,520
serialized string and call it a day well

00:19:24,240 --> 00:19:27,840
we're already discussing some of the

00:19:25,520 --> 00:19:29,360
problems there translation becomes hard

00:19:27,840 --> 00:19:31,520
there are basically other parts of

00:19:29,360 --> 00:19:35,440
drupal that open up to you by

00:19:31,520 --> 00:19:37,440
using tables like using the dish module

00:19:35,440 --> 00:19:39,120
or getting your content into the search

00:19:37,440 --> 00:19:40,960
engine if you keep everything trapped in

00:19:39,120 --> 00:19:43,600
a serialized string

00:19:40,960 --> 00:19:45,600
all of that all of that functionality

00:19:43,600 --> 00:19:49,280
starts to disappear from you

00:19:45,600 --> 00:19:49,600
okay many more contributed modules will

00:19:49,280 --> 00:19:51,919
be

00:19:49,600 --> 00:19:53,679
made that work with content stored in

00:19:51,919 --> 00:19:56,240
fields instead of serialized

00:19:53,679 --> 00:19:56,240
strings

00:19:57,039 --> 00:20:00,960
okay now one one more thing i just want

00:19:59,039 --> 00:20:03,039
to take a little bit of an aside

00:20:00,960 --> 00:20:04,640
i want to make a performance warning all

00:20:03,039 --> 00:20:05,760
right so if you go down the path of

00:20:04,640 --> 00:20:08,880
making con

00:20:05,760 --> 00:20:11,200
making components that all have fields

00:20:08,880 --> 00:20:12,559
this is something to really be aware of

00:20:11,200 --> 00:20:15,600
so

00:20:12,559 --> 00:20:16,159
drupal currently by default uses one

00:20:15,600 --> 00:20:19,679
table

00:20:16,159 --> 00:20:21,520
per field all right so recall that when

00:20:19,679 --> 00:20:23,520
a component when component content is

00:20:21,520 --> 00:20:25,760
stored in fields instead of serialized

00:20:23,520 --> 00:20:27,600
and stored with configuration drupal

00:20:25,760 --> 00:20:28,559
creates a table for every field we saw

00:20:27,600 --> 00:20:31,520
that earlier

00:20:28,559 --> 00:20:33,200
it does this in part it's a couple

00:20:31,520 --> 00:20:34,080
couple reasons it does it in part to

00:20:33,200 --> 00:20:36,400
allow for

00:20:34,080 --> 00:20:37,919
fast database structure changes on

00:20:36,400 --> 00:20:40,000
production databases

00:20:37,919 --> 00:20:41,440
because if you recall if you have

00:20:40,000 --> 00:20:44,640
something like

00:20:41,440 --> 00:20:46,799
a multi-gigabyte table in my sql and you

00:20:44,640 --> 00:20:48,799
want to add a field or remove a field

00:20:46,799 --> 00:20:50,240
that restructuring process could take

00:20:48,799 --> 00:20:53,280
the database down for

00:20:50,240 --> 00:20:56,159
hours and that doesn't really work

00:20:53,280 --> 00:20:56,559
and also by putting every field in its

00:20:56,159 --> 00:20:59,440
own

00:20:56,559 --> 00:21:01,200
table you get revisioning by field and

00:20:59,440 --> 00:21:02,640
then what you can do is you can abstract

00:21:01,200 --> 00:21:05,840
all this and you can present it as an

00:21:02,640 --> 00:21:07,360
object to the developer and make it not

00:21:05,840 --> 00:21:08,320
so difficult for them to worry about

00:21:07,360 --> 00:21:11,919
which is what we're

00:21:08,320 --> 00:21:11,919
moving to especially in drupal 8.

00:21:12,080 --> 00:21:16,480
but it does mean that you have a lot of

00:21:14,799 --> 00:21:19,200
tables on your

00:21:16,480 --> 00:21:19,200
in your database

00:21:20,400 --> 00:21:24,400
and it also means that to collect the

00:21:22,320 --> 00:21:26,400
content for a single component requires

00:21:24,400 --> 00:21:28,880
a sql join statement between multiple

00:21:26,400 --> 00:21:28,880
statements

00:21:29,520 --> 00:21:34,240
if you have a page with many components

00:21:32,559 --> 00:21:36,240
collecting all the content for the

00:21:34,240 --> 00:21:39,120
components will be really slow

00:21:36,240 --> 00:21:41,039
we tested this and it was unusably slow

00:21:39,120 --> 00:21:44,480
on pages with many components

00:21:41,039 --> 00:21:46,799
so at one point i remember um

00:21:44,480 --> 00:21:48,320
i don't think it's true anymore i'm not

00:21:46,799 --> 00:21:49,679
really big into paragraphs but someone

00:21:48,320 --> 00:21:51,200
had mentioned to me that there was an

00:21:49,679 --> 00:21:52,960
issue with paragraphs that

00:21:51,200 --> 00:21:54,640
when you wanted to make a new revision

00:21:52,960 --> 00:21:56,720
of the page

00:21:54,640 --> 00:21:57,679
and you had multiple paragraphs on it

00:21:56,720 --> 00:22:00,159
each

00:21:57,679 --> 00:22:01,120
paragraph also had a revision that was

00:22:00,159 --> 00:22:04,640
written to

00:22:01,120 --> 00:22:06,880
the database even if nothing had changed

00:22:04,640 --> 00:22:08,559
so consequently it was taking 45 seconds

00:22:06,880 --> 00:22:10,240
for your pages to save

00:22:08,559 --> 00:22:12,080
well so you get problems all over the

00:22:10,240 --> 00:22:13,919
place if you're not paying attention to

00:22:12,080 --> 00:22:15,919
this it might happen on the save time it

00:22:13,919 --> 00:22:18,159
might happen on the low time

00:22:15,919 --> 00:22:21,200
but basically it's because of this we're

00:22:18,159 --> 00:22:22,960
using the field api by default

00:22:21,200 --> 00:22:24,480
so consider a component that has three

00:22:22,960 --> 00:22:27,280
fields the event

00:22:24,480 --> 00:22:28,880
title date and location so you're going

00:22:27,280 --> 00:22:30,159
to have three different tables for plus

00:22:28,880 --> 00:22:33,039
you have the revision table

00:22:30,159 --> 00:22:33,039
if you turn that on

00:22:33,360 --> 00:22:37,440
drupal fetches these in a single query

00:22:35,200 --> 00:22:39,200
with sql joins and populates an internal

00:22:37,440 --> 00:22:41,520
object with the result

00:22:39,200 --> 00:22:42,799
more fields per component means it's

00:22:41,520 --> 00:22:44,640
going to be slower

00:22:42,799 --> 00:22:47,120
more components on the page means it's

00:22:44,640 --> 00:22:50,480
going to be slower

00:22:47,120 --> 00:22:53,120
now there is a workaround for this

00:22:50,480 --> 00:22:54,320
um yes chris just pointed out which

00:22:53,120 --> 00:22:56,000
isn't true in layout builder because

00:22:54,320 --> 00:22:57,760
layout builder can identify any block

00:22:56,000 --> 00:22:58,159
you've interacted with and only operate

00:22:57,760 --> 00:23:00,720
on them

00:22:58,159 --> 00:23:01,600
yes so we noticed that layout builder

00:23:00,720 --> 00:23:03,280
did not do

00:23:01,600 --> 00:23:06,240
did not fall into the trap that

00:23:03,280 --> 00:23:08,400
paragraphs was in at one point

00:23:06,240 --> 00:23:10,400
make your components in custom modules

00:23:08,400 --> 00:23:12,480
and store all the content for the

00:23:10,400 --> 00:23:13,840
component in a single table using the

00:23:12,480 --> 00:23:16,720
entity api

00:23:13,840 --> 00:23:17,200
not the field api in other words go old

00:23:16,720 --> 00:23:20,480
school

00:23:17,200 --> 00:23:22,799
go back to drupal 6 style in other words

00:23:20,480 --> 00:23:23,840
your columns are now all on one big page

00:23:22,799 --> 00:23:25,039
and if you're if you're

00:23:23,840 --> 00:23:26,799
if you've got a development team and

00:23:25,039 --> 00:23:28,400
you're making custom entities you're

00:23:26,799 --> 00:23:30,799
pretty familiar with making

00:23:28,400 --> 00:23:31,760
an entity that has all the the fields

00:23:30,799 --> 00:23:34,880
that you want

00:23:31,760 --> 00:23:37,360
that is going to be a whole lot faster

00:23:34,880 --> 00:23:38,480
than the other mechanism especially when

00:23:37,360 --> 00:23:40,799
you have a lot of con

00:23:38,480 --> 00:23:42,400
components on the page and so this sort

00:23:40,799 --> 00:23:43,200
of stuff can sneak up on you you think

00:23:42,400 --> 00:23:45,039
at the beginning

00:23:43,200 --> 00:23:47,679
well i don't have very complex pages

00:23:45,039 --> 00:23:48,960
i'll just use the field api mechanism

00:23:47,679 --> 00:23:50,960
and you don't go through the work of

00:23:48,960 --> 00:23:52,080
making your own custom entity api

00:23:50,960 --> 00:23:54,480
components

00:23:52,080 --> 00:23:56,159
and and then all of a sudden three years

00:23:54,480 --> 00:23:57,760
later the system is really slow because

00:23:56,159 --> 00:23:59,919
actually the pages have gotten

00:23:57,760 --> 00:24:01,520
really complex and you didn't anticipate

00:23:59,919 --> 00:24:03,120
that so

00:24:01,520 --> 00:24:06,159
you know you have to make a decision

00:24:03,120 --> 00:24:08,720
when you're making a build how much

00:24:06,159 --> 00:24:10,000
performance you want or you're expecting

00:24:08,720 --> 00:24:12,080
to be needed

00:24:10,000 --> 00:24:13,840
say it that way because if you're

00:24:12,080 --> 00:24:15,760
expecting it to be very performant you

00:24:13,840 --> 00:24:18,640
may have to go with the entity api right

00:24:15,760 --> 00:24:21,440
off the bat

00:24:18,640 --> 00:24:21,440
okay so

00:24:22,240 --> 00:24:29,840
um custom fields for the win

00:24:25,840 --> 00:24:30,799
cck style yep okay layout builder kit uh

00:24:29,840 --> 00:24:33,120
layout builder kit

00:24:30,799 --> 00:24:34,799
1.0 1.0x currently uses serialized

00:24:33,120 --> 00:24:37,440
string storage this appears to be the

00:24:34,799 --> 00:24:40,320
same system that aqua cohesion uses

00:24:37,440 --> 00:24:42,159
so chris if that's not true please

00:24:40,320 --> 00:24:43,120
correct me i only got a little demo of

00:24:42,159 --> 00:24:46,000
it and the way it

00:24:43,120 --> 00:24:47,360
it was demoed to me it looked like

00:24:46,000 --> 00:24:48,159
everything was being stored in the

00:24:47,360 --> 00:24:50,559
serialized

00:24:48,159 --> 00:24:50,559
string

00:24:51,840 --> 00:24:55,120
okay don't use the fieldable field yeah

00:24:53,279 --> 00:24:56,880
yeah that's even another thing

00:24:55,120 --> 00:24:58,400
if you mean seriously in the field yes

00:24:56,880 --> 00:25:00,880
okay so

00:24:58,400 --> 00:25:01,919
what i think you're going to find i go

00:25:00,880 --> 00:25:04,480
through some other

00:25:01,919 --> 00:25:05,919
frameworks like gutenberg it does i

00:25:04,480 --> 00:25:09,039
think this way although

00:25:05,919 --> 00:25:10,799
the previous um presenter

00:25:09,039 --> 00:25:12,880
i think her name was jenna i don't know

00:25:10,799 --> 00:25:14,480
her she made me think that also

00:25:12,880 --> 00:25:16,799
gutenberg can use

00:25:14,480 --> 00:25:18,240
drupal fieldable blocks too so that was

00:25:16,799 --> 00:25:20,640
new to me that's great

00:25:18,240 --> 00:25:21,760
um but basically i think that the way

00:25:20,640 --> 00:25:23,679
that cohesion

00:25:21,760 --> 00:25:25,679
handles it and the way layout builder

00:25:23,679 --> 00:25:28,240
kit version 1.0 handle it

00:25:25,679 --> 00:25:28,799
is that even the content is going inside

00:25:28,240 --> 00:25:31,360
of

00:25:28,799 --> 00:25:32,640
the page that's to maintain revision

00:25:31,360 --> 00:25:34,559
revision ability

00:25:32,640 --> 00:25:36,400
so when we were designing the initial

00:25:34,559 --> 00:25:37,200
group of content components for layout

00:25:36,400 --> 00:25:39,679
builder kit

00:25:37,200 --> 00:25:41,200
that was a conscious decision yes i know

00:25:39,679 --> 00:25:45,120
that there's some problems you don't

00:25:41,200 --> 00:25:47,039
get to use it doesn't necessarily go

00:25:45,120 --> 00:25:48,640
into the index

00:25:47,039 --> 00:25:49,919
it doesn't necessarily get to use you

00:25:48,640 --> 00:25:51,279
don't get to use things like the diff

00:25:49,919 --> 00:25:54,080
module that sort of thing

00:25:51,279 --> 00:25:56,000
but it seemed to me that people were

00:25:54,080 --> 00:25:56,960
more likely to inadvertently start to

00:25:56,000 --> 00:26:00,080
use layout builder

00:25:56,960 --> 00:26:00,720
kit components inside of their site and

00:26:00,080 --> 00:26:04,080
then

00:26:00,720 --> 00:26:05,039
get caught flat-footed some months or

00:26:04,080 --> 00:26:08,240
years later

00:26:05,039 --> 00:26:09,600
when or maybe weeks later

00:26:08,240 --> 00:26:11,279
when they discovered that actually the

00:26:09,600 --> 00:26:14,159
versioning is totally broken

00:26:11,279 --> 00:26:14,799
so it seemed to me from my experience

00:26:14,159 --> 00:26:16,720
that the

00:26:14,799 --> 00:26:18,960
best thing to do was to have two

00:26:16,720 --> 00:26:21,360
versions of layout builder kit

00:26:18,960 --> 00:26:22,480
1.0 is going to just store everything as

00:26:21,360 --> 00:26:24,720
a serialized string

00:26:22,480 --> 00:26:26,000
and then 2.0 which we haven't begun work

00:26:24,720 --> 00:26:29,200
on

00:26:26,000 --> 00:26:30,720
um would actually provide the access to

00:26:29,200 --> 00:26:33,360
the very same components

00:26:30,720 --> 00:26:34,400
but they would be using the field api

00:26:33,360 --> 00:26:36,400
instead of

00:26:34,400 --> 00:26:38,080
actually technically the entity api

00:26:36,400 --> 00:26:40,480
instead of storing things in serialized

00:26:38,080 --> 00:26:40,480
strings

00:26:40,960 --> 00:26:46,320
okay um the data model

00:26:44,640 --> 00:26:47,919
changing is not a huge deal breaker you

00:26:46,320 --> 00:26:50,240
just need to write update hooked update

00:26:47,919 --> 00:26:52,720
all the components yeah

00:26:50,240 --> 00:26:54,480
harder if it's serialized i suppose

00:26:52,720 --> 00:26:57,440
arguably

00:26:54,480 --> 00:26:59,840
i sort of wonder if moving to my sequels

00:26:57,440 --> 00:27:01,520
5.7 might make this solvable though

00:26:59,840 --> 00:27:03,279
yeah i know we should actually have a

00:27:01,520 --> 00:27:04,400
really big conversation about this i

00:27:03,279 --> 00:27:05,679
think

00:27:04,400 --> 00:27:08,000
okay so layout builder kit the

00:27:05,679 --> 00:27:10,000
components so far are book navigation

00:27:08,000 --> 00:27:11,600
eye context which is just an image and

00:27:10,000 --> 00:27:14,640
text on either the left or the right

00:27:11,600 --> 00:27:16,640
changes location uh image

00:27:14,640 --> 00:27:19,120
image can be you can just upload an

00:27:16,640 --> 00:27:23,039
image or you can actually connect it to

00:27:19,120 --> 00:27:26,159
a field and you can use image styles

00:27:23,039 --> 00:27:29,200
render render renders nodes and again

00:27:26,159 --> 00:27:30,799
you can use view modes for that and

00:27:29,200 --> 00:27:32,640
oh by the way an image just learned how

00:27:30,799 --> 00:27:35,760
to

00:27:32,640 --> 00:27:37,440
render also um media objects that just

00:27:35,760 --> 00:27:38,480
happened we just released beta for last

00:27:37,440 --> 00:27:41,679
week

00:27:38,480 --> 00:27:44,960
uh rich text which makes obvious and

00:27:41,679 --> 00:27:48,000
tabs and video

00:27:44,960 --> 00:27:51,200
okay so you can get a full walk through

00:27:48,000 --> 00:27:53,679
at the presentation i gave at um

00:27:51,200 --> 00:27:54,960
stanford's webcam over there so what's

00:27:53,679 --> 00:27:57,360
next for lbk

00:27:54,960 --> 00:27:58,080
well like i said version 2.0 i think

00:27:57,360 --> 00:27:59,679
that

00:27:58,080 --> 00:28:01,039
we're going to start to add the same

00:27:59,679 --> 00:28:02,080
components we're just going to redo them

00:28:01,039 --> 00:28:04,080
but they're all going to be using the

00:28:02,080 --> 00:28:08,720
entity api so they're going to be

00:28:04,080 --> 00:28:12,080
by like by default performance

00:28:08,720 --> 00:28:13,600
and we'll have access to

00:28:12,080 --> 00:28:14,799
all the other parts we'll be able to

00:28:13,600 --> 00:28:16,240
leverage the rest of the drupal

00:28:14,799 --> 00:28:20,559
framework properly

00:28:16,240 --> 00:28:22,080
okay i i think version 1.0 is completely

00:28:20,559 --> 00:28:24,880
usable i'm using it on

00:28:22,080 --> 00:28:25,600
sites i mean it's still young so it's

00:28:24,880 --> 00:28:27,279
only got about

00:28:25,600 --> 00:28:29,120
i think i checked this morning it's got

00:28:27,279 --> 00:28:30,640
83 sites that are using it

00:28:29,120 --> 00:28:32,640
i would still use it it's still a

00:28:30,640 --> 00:28:34,559
totally valid mechanism just be

00:28:32,640 --> 00:28:36,480
just be knowledgeable about what you're

00:28:34,559 --> 00:28:39,279
giving up

00:28:36,480 --> 00:28:40,960
so version 2.0 components could be based

00:28:39,279 --> 00:28:42,640
on classes that help developers

00:28:40,960 --> 00:28:44,559
construct slightly more complex

00:28:42,640 --> 00:28:46,399
components without damaging the

00:28:44,559 --> 00:28:49,279
versioning system

00:28:46,399 --> 00:28:50,960
there's a interesting way that somebody

00:28:49,279 --> 00:28:52,799
on the tesla team came up with where you

00:28:50,960 --> 00:28:55,840
actually use the delta mechanism

00:28:52,799 --> 00:28:56,399
of the versioning system where you can

00:28:55,840 --> 00:28:58,320
get

00:28:56,399 --> 00:28:59,600
at least a little bit of a parent-child

00:28:58,320 --> 00:29:01,520
relationship

00:28:59,600 --> 00:29:03,200
and i'm not going to get into that now

00:29:01,520 --> 00:29:03,840
but there are maybe some other

00:29:03,200 --> 00:29:06,000
interesting

00:29:03,840 --> 00:29:08,880
techniques where where we get to have it

00:29:06,000 --> 00:29:11,440
all and

00:29:08,880 --> 00:29:12,000
then site builders will then be able to

00:29:11,440 --> 00:29:13,679
judge

00:29:12,000 --> 00:29:15,279
the competing requirements and choose

00:29:13,679 --> 00:29:17,840
the storage mechanism that makes sense

00:29:15,279 --> 00:29:17,840
for their build

00:29:19,760 --> 00:29:25,200
okay um i'm going to answer i mean

00:29:23,279 --> 00:29:26,799
chris's question doesn't have a queue in

00:29:25,200 --> 00:29:27,840
front okay let me just back up a little

00:29:26,799 --> 00:29:29,600
bit because i don't want to get too far

00:29:27,840 --> 00:29:33,679
ahead here okay

00:29:29,600 --> 00:29:35,919
um true doesn't scale well

00:29:33,679 --> 00:29:38,080
yeah okay fine which is why core can't

00:29:35,919 --> 00:29:41,840
do it okay

00:29:38,080 --> 00:29:41,840
all right that's the previous discussion

00:29:42,640 --> 00:29:45,679
all conversations about the decisions we

00:29:44,320 --> 00:29:46,880
make always start with but what if you

00:29:45,679 --> 00:29:48,880
have a million nodes

00:29:46,880 --> 00:29:50,640
for sure okay kurt hill question on sql

00:29:48,880 --> 00:29:52,640
index is does drupal create appropriate

00:29:50,640 --> 00:29:54,720
indexes for multi-field or can i create

00:29:52,640 --> 00:29:58,080
indexes to speed up the

00:29:54,720 --> 00:30:01,039
joins my understanding is it does it

00:29:58,080 --> 00:30:01,760
for you automatically but you probably

00:30:01,039 --> 00:30:03,919
could

00:30:01,760 --> 00:30:05,200
do some work like if you have a special

00:30:03,919 --> 00:30:06,559
view that

00:30:05,200 --> 00:30:07,520
you should probably look at your indexes

00:30:06,559 --> 00:30:10,640
because there's probably going to be

00:30:07,520 --> 00:30:13,039
some indexes missing there

00:30:10,640 --> 00:30:15,679
okay so these will be separate entity

00:30:13,039 --> 00:30:18,399
types with a block wrapper

00:30:15,679 --> 00:30:18,799
yes chris that's what i'm thinking is

00:30:18,399 --> 00:30:20,640
what

00:30:18,799 --> 00:30:22,080
we'll do that's what we ended up doing

00:30:20,640 --> 00:30:24,880
in the tesla build

00:30:22,080 --> 00:30:28,320
and so i'm going to see if tesla's

00:30:24,880 --> 00:30:30,799
willing to contribute that code back

00:30:28,320 --> 00:30:32,559
when will the work on 2.0 start the work

00:30:30,799 --> 00:30:34,960
on 2.0 start we don't have a

00:30:32,559 --> 00:30:36,640
set start date but if if you are a

00:30:34,960 --> 00:30:38,720
developer and you want to help

00:30:36,640 --> 00:30:40,399
i was going to ask people to jump in and

00:30:38,720 --> 00:30:42,640
contact me so that we can start work on

00:30:40,399 --> 00:30:44,000
it i think it would be fun to work on

00:30:42,640 --> 00:30:46,880
will this restore the ability to work

00:30:44,000 --> 00:30:50,399
with data and views diff etc

00:30:46,880 --> 00:30:52,000
yes 2.0 the the my vision is the 2.0

00:30:50,399 --> 00:30:54,159
will restore that capability

00:30:52,000 --> 00:30:56,159
the goal will be you know how do we get

00:30:54,159 --> 00:30:59,519
it all how do we get all our versioning

00:30:56,159 --> 00:31:02,840
and how do we um

00:30:59,519 --> 00:31:05,600
get our uh leveraging the rest of the

00:31:02,840 --> 00:31:06,880
framework

00:31:05,600 --> 00:31:09,120
we used to have it all i don't know why

00:31:06,880 --> 00:31:10,720
the revision id isn't there anymore

00:31:09,120 --> 00:31:13,679
it's a good question i was going to ask

00:31:10,720 --> 00:31:13,679
one of you guys that

00:31:14,000 --> 00:31:17,200
but we should have the revision uuid

00:31:15,760 --> 00:31:20,399
soon good

00:31:17,200 --> 00:31:22,480
good good good no worries um

00:31:20,399 --> 00:31:25,120
okay kevin curious how you juggle

00:31:22,480 --> 00:31:28,080
wanting one to translate lb content

00:31:25,120 --> 00:31:30,480
exactly the 1.0 is going to be tough you

00:31:28,080 --> 00:31:34,240
would have to do versions of the page

00:31:30,480 --> 00:31:35,200
that um that are all in a different

00:31:34,240 --> 00:31:38,320
language

00:31:35,200 --> 00:31:39,919
kind of thing yeah

00:31:38,320 --> 00:31:41,919
yeah see there's a lot to think about in

00:31:39,919 --> 00:31:43,840
this new version 2.0 you want to get the

00:31:41,919 --> 00:31:45,440
language translation working

00:31:43,840 --> 00:31:47,679
um and you want to get the revision

00:31:45,440 --> 00:31:49,200
working and then part two need

00:31:47,679 --> 00:31:50,799
revisioning to have proper editorial

00:31:49,200 --> 00:31:52,880
workflows and a site that performs well

00:31:50,799 --> 00:31:55,760
with lots of components

00:31:52,880 --> 00:31:56,159
is this one of those pick two situations

00:31:55,760 --> 00:31:58,159
i

00:31:56,159 --> 00:32:00,720
actually kevin i'm actually hopeful that

00:31:58,159 --> 00:32:05,039
it's not a pick two

00:32:00,720 --> 00:32:05,039
yet talk to me in a year

00:32:05,120 --> 00:32:07,440
okay

00:32:08,720 --> 00:32:12,559
i swear there was test coverage for it

00:32:10,720 --> 00:32:14,320
uh i wasn't involved in the construction

00:32:12,559 --> 00:32:16,080
of that crystal i'm not sure

00:32:14,320 --> 00:32:17,919
would there be downsides to fixing the

00:32:16,080 --> 00:32:19,919
possible bug of missing revision ids in

00:32:17,919 --> 00:32:22,159
lb would that restore revision ability

00:32:19,919 --> 00:32:23,279
but degrade performance i can't see how

00:32:22,159 --> 00:32:25,679
that could be

00:32:23,279 --> 00:32:27,519
such a big performance degrader because

00:32:25,679 --> 00:32:28,000
you would store the revision id with the

00:32:27,519 --> 00:32:30,880
revision

00:32:28,000 --> 00:32:32,320
of the page and when it constructs the

00:32:30,880 --> 00:32:33,039
page it would just go get the right

00:32:32,320 --> 00:32:35,279
versions

00:32:33,039 --> 00:32:36,559
i think okay let me keep on going

00:32:35,279 --> 00:32:37,679
because the questions are coming fast

00:32:36,559 --> 00:32:40,799
and furious

00:32:37,679 --> 00:32:42,320
i want to get through this too so

00:32:40,799 --> 00:32:43,919
please contact me if you want to help

00:32:42,320 --> 00:32:45,360
develop these base classes i think it

00:32:43,919 --> 00:32:47,279
could be really fun

00:32:45,360 --> 00:32:49,440
and i i mean these base classes are

00:32:47,279 --> 00:32:51,440
going to be

00:32:49,440 --> 00:32:53,200
uh yeah they're just got to handle a lot

00:32:51,440 --> 00:32:55,440
of stuff just got to handle a lot of

00:32:53,200 --> 00:32:57,679
stuff

00:32:55,440 --> 00:32:58,799
okay so here's my fear i already

00:32:57,679 --> 00:33:00,559
mentioned this but i really want to

00:32:58,799 --> 00:33:02,480
instill it i fear there will be many

00:33:00,559 --> 00:33:03,760
broken drupal sites made by teams that

00:33:02,480 --> 00:33:05,679
are unaware of these issues

00:33:03,760 --> 00:33:07,120
unfortunately drupal will be blamed when

00:33:05,679 --> 00:33:08,880
it's actually a site build

00:33:07,120 --> 00:33:11,279
issue so please don't let your site be

00:33:08,880 --> 00:33:12,640
one of these

00:33:11,279 --> 00:33:13,919
all right what i'd like to do is just

00:33:12,640 --> 00:33:14,880
share a little bit because a lot of

00:33:13,919 --> 00:33:16,240
people don't know

00:33:14,880 --> 00:33:18,159
how much work is being done in the

00:33:16,240 --> 00:33:21,200
layout builder ecosystem

00:33:18,159 --> 00:33:22,320
and here are some of the modules so if

00:33:21,200 --> 00:33:24,399
you want translation

00:33:22,320 --> 00:33:26,320
you've got asymmetric translation but

00:33:24,399 --> 00:33:26,880
there's also symmetric translation

00:33:26,320 --> 00:33:30,159
coming on

00:33:26,880 --> 00:33:31,440
coming up modal

00:33:30,159 --> 00:33:33,519
if you don't like that little

00:33:31,440 --> 00:33:35,679
configuration form off to the right

00:33:33,519 --> 00:33:38,000
you can actually make it centered and

00:33:35,679 --> 00:33:40,480
make it much larger

00:33:38,000 --> 00:33:42,159
people i don't like working with that

00:33:40,480 --> 00:33:43,840
little configuration form in the window

00:33:42,159 --> 00:33:44,480
pane on the right-hand side so i always

00:33:43,840 --> 00:33:46,320
install

00:33:44,480 --> 00:33:48,080
layout builder model layout builder

00:33:46,320 --> 00:33:51,519
restrictions very useful

00:33:48,080 --> 00:33:54,240
to restrict the number of components

00:33:51,519 --> 00:33:54,880
excuse me that are listed as possible to

00:33:54,240 --> 00:33:58,399
be picked

00:33:54,880 --> 00:34:00,159
by a content editor

00:33:58,399 --> 00:34:01,679
because often i mean that's a really big

00:34:00,159 --> 00:34:03,279
list sometimes and

00:34:01,679 --> 00:34:04,880
you just want them to have maybe five

00:34:03,279 --> 00:34:06,240
components that they work with well you

00:34:04,880 --> 00:34:09,040
can restrict it with that

00:34:06,240 --> 00:34:10,639
so that all the others are hidden block

00:34:09,040 --> 00:34:13,200
blacklist does the same thing as layout

00:34:10,639 --> 00:34:14,879
builder restrictions but does it for

00:34:13,200 --> 00:34:17,839
not just in layout builder it also does

00:34:14,879 --> 00:34:20,000
it in the block layout

00:34:17,839 --> 00:34:21,520
page layout builder styles that gets

00:34:20,000 --> 00:34:24,879
installed on every one of my

00:34:21,520 --> 00:34:26,399
sites now because it's so good dynamic

00:34:24,879 --> 00:34:26,879
layouts haven't played with that one too

00:34:26,399 --> 00:34:28,480
much

00:34:26,879 --> 00:34:30,399
i haven't had a request for it yet

00:34:28,480 --> 00:34:31,599
entity browser block mini layouts mini

00:34:30,399 --> 00:34:35,040
layouts is like

00:34:31,599 --> 00:34:37,440
mini panels from the panels world

00:34:35,040 --> 00:34:38,240
so i think that's going to be really

00:34:37,440 --> 00:34:40,560
really useful

00:34:38,240 --> 00:34:42,240
it's kind of the ability to make

00:34:40,560 --> 00:34:44,639
components within components or

00:34:42,240 --> 00:34:46,720
the closest thing we have to that layout

00:34:44,639 --> 00:34:49,040
builder everywhere

00:34:46,720 --> 00:34:50,560
who's behind that one oh i don't

00:34:49,040 --> 00:34:52,079
remember who it is but anyway so this is

00:34:50,560 --> 00:34:54,000
going to be the ability to turn the

00:34:52,079 --> 00:34:56,879
it's like panels everywhere turn the

00:34:54,000 --> 00:35:00,000
whole page into layout builder

00:34:56,879 --> 00:35:01,839
that's the sister module for

00:35:00,000 --> 00:35:04,640
asymmetric translation that's called

00:35:01,839 --> 00:35:06,720
symmetric translations

00:35:04,640 --> 00:35:08,480
and then there's a layout builder ux

00:35:06,720 --> 00:35:11,119
which gives you a better

00:35:08,480 --> 00:35:12,400
ux design okay so i'm going to take a

00:35:11,119 --> 00:35:13,599
pause here before we go into some

00:35:12,400 --> 00:35:15,200
interesting notes see what else is

00:35:13,599 --> 00:35:17,760
happening here

00:35:15,200 --> 00:35:19,599
i think most of the maintainers of the

00:35:17,760 --> 00:35:21,040
modules are here yes brian i believe

00:35:19,599 --> 00:35:22,720
you're probably right

00:35:21,040 --> 00:35:24,000
layout builder's restriction is so great

00:35:22,720 --> 00:35:25,359
we planned for someone to be able to do

00:35:24,000 --> 00:35:27,119
it and the module was built before we

00:35:25,359 --> 00:35:28,839
had it completely released yeah

00:35:27,119 --> 00:35:30,240
that one goes in every one of my builds

00:35:28,839 --> 00:35:32,960
too um

00:35:30,240 --> 00:35:34,160
ashley okay i don't know about it

00:35:32,960 --> 00:35:36,320
breaking i haven't had a

00:35:34,160 --> 00:35:38,160
break yet okay so this question from

00:35:36,320 --> 00:35:40,640
alessandro is there another solution to

00:35:38,160 --> 00:35:42,400
create multiple components like a slider

00:35:40,640 --> 00:35:44,400
currently i use block type with multiple

00:35:42,400 --> 00:35:46,320
paragraph field

00:35:44,400 --> 00:35:47,839
uh yeah so i think you could just use

00:35:46,320 --> 00:35:49,200
the field api and create yourself

00:35:47,839 --> 00:35:52,400
something like that

00:35:49,200 --> 00:35:54,400
and then um hook it up to some

00:35:52,400 --> 00:35:56,400
carousel kind of mechanism i think

00:35:54,400 --> 00:35:58,960
that's probably not so difficult

00:35:56,400 --> 00:35:59,680
contact me if you if you if that doesn't

00:35:58,960 --> 00:36:02,079
give you enough

00:35:59,680 --> 00:36:04,880
and i can maybe point you out um point

00:36:02,079 --> 00:36:04,880
out some things for you

00:36:04,960 --> 00:36:08,160
um i have worked on sites that had to

00:36:06,640 --> 00:36:09,520
prune revisions but it was a decision

00:36:08,160 --> 00:36:13,200
that was made specific

00:36:09,520 --> 00:36:14,720
to the project yes okay so

00:36:13,200 --> 00:36:16,560
going back to that other conversation

00:36:14,720 --> 00:36:17,920
it's actually a good point i've had to

00:36:16,560 --> 00:36:23,040
prune the revisions tables

00:36:17,920 --> 00:36:23,040
as well okay so that's fair um

00:36:23,440 --> 00:36:26,560
i'm trying to remember if it was

00:36:24,960 --> 00:36:28,000
actually a performance issue though

00:36:26,560 --> 00:36:29,200
it might have been it might have been

00:36:28,000 --> 00:36:30,880
just because we were creating so many

00:36:29,200 --> 00:36:32,400
revisions and it just didn't make sense

00:36:30,880 --> 00:36:34,160
we didn't need anything older than seven

00:36:32,400 --> 00:36:35,200
days or something like that so we made a

00:36:34,160 --> 00:36:40,160
crown job that

00:36:35,200 --> 00:36:43,040
kept that those tables nice and small

00:36:40,160 --> 00:36:43,040
okay let's see

00:36:43,839 --> 00:36:47,200
is there a channel that pulls this whole

00:36:45,520 --> 00:36:48,480
ecosystem together and has a discussion

00:36:47,200 --> 00:36:50,400
about it

00:36:48,480 --> 00:36:55,520
yes actually there is there's a layout

00:36:50,400 --> 00:36:58,480
builder channel on slack

00:36:55,520 --> 00:37:00,640
okay uh yeah so brian just mentions that

00:36:58,480 --> 00:37:05,119
that's great

00:37:00,640 --> 00:37:06,480
okay yes there's the ecosystem

00:37:05,119 --> 00:37:08,240
not everything i've noticed by the way

00:37:06,480 --> 00:37:11,599
mark is in that ecosystem

00:37:08,240 --> 00:37:13,839
url that you just posted um

00:37:11,599 --> 00:37:16,480
the other page seems to be a little bit

00:37:13,839 --> 00:37:18,240
more up to date

00:37:16,480 --> 00:37:20,839
what was the last in the list oh that

00:37:18,240 --> 00:37:22,880
was leo builder ux

00:37:20,839 --> 00:37:25,839
rosemary could you show the previous

00:37:22,880 --> 00:37:28,240
slide again yeah let's go back

00:37:25,839 --> 00:37:29,599
this is only some of them because it's

00:37:28,240 --> 00:37:32,800
it's like

00:37:29,599 --> 00:37:34,960
probably now 60 of the modules

00:37:32,800 --> 00:37:36,079
are here on this slide there are a lot

00:37:34,960 --> 00:37:37,280
more now

00:37:36,079 --> 00:37:39,280
these are the ones that i thought were

00:37:37,280 --> 00:37:40,320
useful but you should really i think

00:37:39,280 --> 00:37:43,119
everyone before you do

00:37:40,320 --> 00:37:44,400
a build should go examine i'll include

00:37:43,119 --> 00:37:45,440
the link to that or i think someone's

00:37:44,400 --> 00:37:47,040
already posted it

00:37:45,440 --> 00:37:48,960
everyone should look at those modules

00:37:47,040 --> 00:37:50,800
before you do a build and decide what

00:37:48,960 --> 00:37:53,359
you're going to want because

00:37:50,800 --> 00:37:55,280
all the things that you may think are

00:37:53,359 --> 00:37:56,720
not actually

00:37:55,280 --> 00:37:58,480
good about layout builder yet a lot of

00:37:56,720 --> 00:37:59,599
them have been solved and are now in

00:37:58,480 --> 00:38:00,640
these modules

00:37:59,599 --> 00:38:02,480
and then hopefully some of them are

00:38:00,640 --> 00:38:05,839
going to get moved into core because i

00:38:02,480 --> 00:38:05,839
think some of them could be

00:38:06,160 --> 00:38:09,520
okay let's keep on going

00:38:12,000 --> 00:38:15,760
all right yeah the ecosystem is growing

00:38:14,079 --> 00:38:17,520
super fast it's really really great you

00:38:15,760 --> 00:38:21,119
can really tell that

00:38:17,520 --> 00:38:22,720
this is the future of page building

00:38:21,119 --> 00:38:24,800
yes i think that the ecosystem page is

00:38:22,720 --> 00:38:27,280
based on a taxonomy term

00:38:24,800 --> 00:38:27,839
added by the module maintainer correct

00:38:27,280 --> 00:38:30,880
right

00:38:27,839 --> 00:38:32,400
but benji it seems like a lot of us are

00:38:30,880 --> 00:38:33,920
kind of i noticed there are a couple of

00:38:32,400 --> 00:38:37,040
us that are trying to keep that

00:38:33,920 --> 00:38:38,480
main list the manual one up to date um

00:38:37,040 --> 00:38:39,599
because we're finding modules that

00:38:38,480 --> 00:38:41,760
people don't know that they have to

00:38:39,599 --> 00:38:44,079
actually add that tag to their module

00:38:41,760 --> 00:38:45,440
okay let's keep on going yes nathan just

00:38:44,079 --> 00:38:47,280
um

00:38:45,440 --> 00:38:48,800
put the link to that one okay so some

00:38:47,280 --> 00:38:51,119
other interesting notes so

00:38:48,800 --> 00:38:53,280
it's not at this exact moment in time

00:38:51,119 --> 00:38:53,920
possible yet to export and import

00:38:53,280 --> 00:38:57,680
layouts

00:38:53,920 --> 00:38:59,119
but that patch is is actually

00:38:57,680 --> 00:39:01,760
i don't know if it's ready to be

00:38:59,119 --> 00:39:04,800
reviewed by the community but

00:39:01,760 --> 00:39:07,359
uh it's pretty close it's pretty close

00:39:04,800 --> 00:39:08,079
and that's important because if you're

00:39:07,359 --> 00:39:10,079
trying to

00:39:08,079 --> 00:39:11,760
remember in drupal 7 you have node

00:39:10,079 --> 00:39:13,520
export and whatnot you still can't do a

00:39:11,760 --> 00:39:15,599
node export in drupal 8

00:39:13,520 --> 00:39:16,720
and then do a node import if you're

00:39:15,599 --> 00:39:19,520
using layout builder

00:39:16,720 --> 00:39:21,520
because that's code wasn't ready it just

00:39:19,520 --> 00:39:24,160
doesn't know how to write itself

00:39:21,520 --> 00:39:26,000
and read itself layout builder

00:39:24,160 --> 00:39:28,480
everywhere will extend layout builder so

00:39:26,000 --> 00:39:30,800
that's the project there i wanted to

00:39:28,480 --> 00:39:32,320
pull that out specifically because right

00:39:30,800 --> 00:39:33,520
now we still have this notion of regions

00:39:32,320 --> 00:39:35,920
where you have the header

00:39:33,520 --> 00:39:37,440
the content area the footer maybe some

00:39:35,920 --> 00:39:38,800
sidebars that sort of thing

00:39:37,440 --> 00:39:40,800
and you can't use layout builder in

00:39:38,800 --> 00:39:42,000
those other areas other than content

00:39:40,800 --> 00:39:43,440
layout builders now

00:39:42,000 --> 00:39:47,040
currently is restricted to the middle

00:39:43,440 --> 00:39:50,160
and layout builder everywhere will

00:39:47,040 --> 00:39:53,760
expand that okay

00:39:50,160 --> 00:39:56,800
and tada that got committed

00:39:53,760 --> 00:39:58,880
so you can now with page manager

00:39:56,800 --> 00:40:01,040
create a variant that uses layout

00:39:58,880 --> 00:40:02,079
builder i have been watching this issue

00:40:01,040 --> 00:40:05,359
for two years so

00:40:02,079 --> 00:40:06,960
my heart leaped when i saw a couple days

00:40:05,359 --> 00:40:08,240
ago i went to check on the status and it

00:40:06,960 --> 00:40:12,160
looks like it's committed

00:40:08,240 --> 00:40:16,160
so there are actually still very

00:40:12,160 --> 00:40:19,920
useful uh use cases

00:40:16,160 --> 00:40:23,280
for you to do a variant

00:40:19,920 --> 00:40:25,599
like what page manager can do in

00:40:23,280 --> 00:40:27,119
in drupal 7 it was panels that

00:40:25,599 --> 00:40:28,000
functionality is now moved to page

00:40:27,119 --> 00:40:30,560
manager

00:40:28,000 --> 00:40:31,440
and so i think that the mixture of

00:40:30,560 --> 00:40:34,240
layout builder

00:40:31,440 --> 00:40:36,640
and page manager is to me heaven so many

00:40:34,240 --> 00:40:38,880
things get solved with that

00:40:36,640 --> 00:40:40,560
okay i got only a few more minutes left

00:40:38,880 --> 00:40:42,640
so you can watch a video about the

00:40:40,560 --> 00:40:44,319
layout builder ecosystem there

00:40:42,640 --> 00:40:45,839
that i presented at last year's bat camp

00:40:44,319 --> 00:40:48,560
so if you want a little bit of a demo of

00:40:45,839 --> 00:40:52,319
what some of those things do

00:40:48,560 --> 00:40:54,000
uh that one that url has been posted a

00:40:52,319 --> 00:40:56,079
bunch of times

00:40:54,000 --> 00:40:58,000
okay so layout builder is not the only

00:40:56,079 --> 00:41:01,280
game in town i already mentioned

00:40:58,000 --> 00:41:02,560
um aquion cohesion but there's now dxpr

00:41:01,280 --> 00:41:04,640
which used to be called

00:41:02,560 --> 00:41:06,720
glaze builder by super themes they've

00:41:04,640 --> 00:41:09,119
just gone through a um

00:41:06,720 --> 00:41:10,720
rebranding there's cohesion i believe

00:41:09,119 --> 00:41:12,880
cohesion is only to their

00:41:10,720 --> 00:41:14,000
clients so you can no longer you know

00:41:12,880 --> 00:41:15,200
you have to be an awkward client in

00:41:14,000 --> 00:41:17,040
order to get cohesion

00:41:15,200 --> 00:41:18,319
but if you are an awkward client that

00:41:17,040 --> 00:41:21,359
might be a fast way

00:41:18,319 --> 00:41:24,000
to get a whole bunch of modules

00:41:21,359 --> 00:41:26,160
like i think cohesion had something like

00:41:24,000 --> 00:41:27,200
gosh i want to say 25 modules maybe even

00:41:26,160 --> 00:41:30,400
30 modules

00:41:27,200 --> 00:41:33,440
sorry components and layout builder has

00:41:30,400 --> 00:41:35,680
seven you know so a lot of catching up

00:41:33,440 --> 00:41:36,160
to do i'd like the open source solution

00:41:35,680 --> 00:41:39,040
to

00:41:36,160 --> 00:41:41,760
be as good as the cohesion solution and

00:41:39,040 --> 00:41:43,359
as good as the dxpr solution

00:41:41,760 --> 00:41:45,119
and as far as i can tell both store the

00:41:43,359 --> 00:41:46,000
configuration in pages rather than in

00:41:45,119 --> 00:41:48,160
tables

00:41:46,000 --> 00:41:49,200
so like i said it's a totally valid way

00:41:48,160 --> 00:41:51,440
to do it

00:41:49,200 --> 00:41:53,280
and let's see what we can do with the

00:41:51,440 --> 00:41:54,720
other system there's elementor

00:41:53,280 --> 00:41:56,400
don't know too much about it i think it

00:41:54,720 --> 00:41:57,839
came from wordpress

00:41:56,400 --> 00:42:00,000
and then of course gutenberg that came

00:41:57,839 --> 00:42:02,560
for wordpress okay so we have just like

00:42:00,000 --> 00:42:04,480
a couple more minutes before

00:42:02,560 --> 00:42:06,960
the and before i run out of time i think

00:42:04,480 --> 00:42:09,119
poppin turns me off let's see what other

00:42:06,960 --> 00:42:16,800
questions there are

00:42:09,119 --> 00:42:21,839
okay i'm looking for cues

00:42:16,800 --> 00:42:21,839
check out the drush aca glc okay

00:42:22,960 --> 00:42:26,480
what's the ach chris

00:42:27,680 --> 00:42:31,520
okay this has some modules that are not

00:42:30,480 --> 00:42:33,599
related to lb

00:42:31,520 --> 00:42:34,560
checklist from time to time okay good to

00:42:33,599 --> 00:42:36,319
know

00:42:34,560 --> 00:42:37,760
i don't think cohesion requires you to

00:42:36,319 --> 00:42:39,440
be a hosting client though i think you

00:42:37,760 --> 00:42:41,200
can buy it without being on the platform

00:42:39,440 --> 00:42:43,920
oh okay good

00:42:41,200 --> 00:42:45,839
uh kristin you're very welcome uh

00:42:43,920 --> 00:42:47,680
veronica there's okay so veronica is

00:42:45,839 --> 00:42:49,680
on the performant labs team i don't know

00:42:47,680 --> 00:42:52,160
if alvaro is as well

00:42:49,680 --> 00:42:55,440
here today on this but um she's done

00:42:52,160 --> 00:42:59,119
some great work with layout builder kit

00:42:55,440 --> 00:43:01,119
and okay chris sounds like if a site

00:42:59,119 --> 00:43:02,880
is highly reliant on versioning and

00:43:01,119 --> 00:43:05,440
content translation it's not

00:43:02,880 --> 00:43:07,359
suggested to go with the current stable

00:43:05,440 --> 00:43:13,839
lb

00:43:07,359 --> 00:43:13,839
oh gosh um

00:43:14,319 --> 00:43:21,680
uh yeah you know i don't know how to go

00:43:18,400 --> 00:43:23,040
i don't know if that's true chris

00:43:21,680 --> 00:43:24,960
if you want the versioning you're going

00:43:23,040 --> 00:43:27,920
to want to use one point x for sure

00:43:24,960 --> 00:43:28,720
for now okay and if you want content

00:43:27,920 --> 00:43:32,079
translation

00:43:28,720 --> 00:43:33,119
i think it depends on i think you can

00:43:32,079 --> 00:43:35,599
still do it this way

00:43:33,119 --> 00:43:37,680
if you use layout builder asymmetric

00:43:35,599 --> 00:43:39,280
translation module

00:43:37,680 --> 00:43:40,880
then what you're going to have is a

00:43:39,280 --> 00:43:42,960
version of the page that

00:43:40,880 --> 00:43:44,000
is for each language and then each

00:43:42,960 --> 00:43:46,720
component

00:43:44,000 --> 00:43:48,079
is going to be on that page and it's

00:43:46,720 --> 00:43:50,079
going to have its own language

00:43:48,079 --> 00:43:51,680
so i would say the answer to you if you

00:43:50,079 --> 00:43:52,800
want both versioning and this is what we

00:43:51,680 --> 00:43:55,040
did at tesla

00:43:52,800 --> 00:43:56,400
if you want both versioning and you want

00:43:55,040 --> 00:43:56,880
language translation because they had to

00:43:56,400 --> 00:43:59,520
handle

00:43:56,880 --> 00:44:01,280
39 we had to handle 39 languages it was

00:43:59,520 --> 00:44:04,319
a lot of languages

00:44:01,280 --> 00:44:07,040
okay and so if you want that you

00:44:04,319 --> 00:44:08,319
need to um you can use layout builder

00:44:07,040 --> 00:44:08,640
okay now we didn't use layout builder

00:44:08,319 --> 00:44:10,640
kit

00:44:08,640 --> 00:44:11,760
on that build because it was still being

00:44:10,640 --> 00:44:13,359
made but

00:44:11,760 --> 00:44:16,160
we used the same technique so i think

00:44:13,359 --> 00:44:16,160
you can do it that way

00:44:17,359 --> 00:44:24,079
okay um why does layout builder

00:44:22,560 --> 00:44:25,760
get broken when using the group's

00:44:24,079 --> 00:44:27,920
content type oh that's

00:44:25,760 --> 00:44:29,520
interesting question i don't know you'd

00:44:27,920 --> 00:44:32,160
have to look inside of the code to see

00:44:29,520 --> 00:44:32,160
what's happening

00:44:32,600 --> 00:44:36,079
[Music]

00:44:34,839 --> 00:44:37,839
um

00:44:36,079 --> 00:44:39,839
awkward content hub can export import

00:44:37,839 --> 00:44:42,640
entities from drupal to json format we

00:44:39,839 --> 00:44:45,200
will properly export it oh good okay

00:44:42,640 --> 00:44:46,240
well is content hub also something that

00:44:45,200 --> 00:44:49,359
you have to pay for

00:44:46,240 --> 00:44:51,839
or probably right yeah suzanne you're

00:44:49,359 --> 00:44:51,839
welcome

00:44:51,920 --> 00:44:58,400
um chris okay good i'm glad

00:44:55,040 --> 00:45:00,560
a little thank you alvaro has done

00:44:58,400 --> 00:45:05,599
the bulk of the work on layout builder

00:45:00,560 --> 00:45:10,720
kit and he's done a great job

00:45:05,599 --> 00:45:12,400
okay let's see kevin thank you kevin

00:45:10,720 --> 00:45:14,240
please add more screenshots to the

00:45:12,400 --> 00:45:15,440
layout builder kit module page okay

00:45:14,240 --> 00:45:17,920
happy to do that although

00:45:15,440 --> 00:45:19,520
go click on the on the documentation and

00:45:17,920 --> 00:45:22,720
there's lots of documentation i'm trying

00:45:19,520 --> 00:45:22,720
to do a good job with the docs

00:45:22,800 --> 00:45:29,680
um okay i think i think i'm out of time

00:45:26,560 --> 00:45:31,359
at a time so

00:45:29,680 --> 00:45:32,720
thank you everyone thanks for the great

00:45:31,359 --> 00:45:35,440
questions let's

00:45:32,720 --> 00:45:36,720
let's build a really great stable of

00:45:35,440 --> 00:45:38,880
components

00:45:36,720 --> 00:45:40,640
so that we can compete with all these

00:45:38,880 --> 00:45:43,280
other

00:45:40,640 --> 00:45:44,560
systems that have a head start on us and

00:45:43,280 --> 00:45:45,200
if you want to participate in layout

00:45:44,560 --> 00:45:47,200
builder just

00:45:45,200 --> 00:45:48,240
dive into the issue queue or reach out

00:45:47,200 --> 00:45:50,640
to me on you know

00:45:48,240 --> 00:45:51,599
directly you can find my email all sorts

00:45:50,640 --> 00:45:53,680
of places

00:45:51,599 --> 00:45:57,119
and have a great rest of the conference

00:45:53,680 --> 00:45:57,119

YouTube URL: https://www.youtube.com/watch?v=RMMJ6YQ1rds


