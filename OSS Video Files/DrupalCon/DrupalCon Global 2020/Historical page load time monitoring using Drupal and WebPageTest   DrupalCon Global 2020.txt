Title: Historical page load time monitoring using Drupal and WebPageTest   DrupalCon Global 2020
Publication date: 2020-08-25
Playlist: DrupalCon Global 2020
Description: 
	Walk through setting up Drupal to integrate with WebPageTest to create historical performance reports, useful for identifying trends.
Captions: 
	00:00:01,040 --> 00:00:04,799
i want to go ahead and introduce myself

00:00:02,879 --> 00:00:06,480
uh my name is david steinmetz i am a

00:00:04,799 --> 00:00:09,040
senior software developer at rackspace

00:00:06,480 --> 00:00:11,679
technology based in san antonio texas

00:00:09,040 --> 00:00:12,480
um i'm by no means a performance expert

00:00:11,679 --> 00:00:14,480
um but i'm

00:00:12,480 --> 00:00:16,400
somebody who complains loud enough to my

00:00:14,480 --> 00:00:17,279
co-workers that were not being mindful

00:00:16,400 --> 00:00:19,920
of performance

00:00:17,279 --> 00:00:21,199
um so much so that they get to hear me

00:00:19,920 --> 00:00:24,960
yell about things when

00:00:21,199 --> 00:00:26,000
i don't like uh how long things take to

00:00:24,960 --> 00:00:29,439
live

00:00:26,000 --> 00:00:30,720
so from that perspective if anyone

00:00:29,439 --> 00:00:33,040
wants to reach out you can hit me up on

00:00:30,720 --> 00:00:34,719
twitter uh at david steinmetz or on

00:00:33,040 --> 00:00:35,600
drupal.org or slack i'm at widgets

00:00:34,719 --> 00:00:37,120
burritos

00:00:35,600 --> 00:00:39,040
and again if you want to follow along

00:00:37,120 --> 00:00:40,000
the slides uh please do i also might

00:00:39,040 --> 00:00:43,760
recommend

00:00:40,000 --> 00:00:45,120
double clicking the uh the presentation

00:00:43,760 --> 00:00:46,160
so it's bigger there's going to be some

00:00:45,120 --> 00:00:47,280
things that are going to be a little

00:00:46,160 --> 00:00:48,879
small on the screen

00:00:47,280 --> 00:00:50,239
so please double click it i think it

00:00:48,879 --> 00:00:52,160
will help you follow along a little

00:00:50,239 --> 00:00:54,000
better

00:00:52,160 --> 00:00:56,480
all right so i want to start by asking

00:00:54,000 --> 00:00:57,280
you a question why is a website's load

00:00:56,480 --> 00:01:00,879
time

00:00:57,280 --> 00:01:02,480
important well in 2017 akamai released

00:01:00,879 --> 00:01:03,680
what they call their state of online

00:01:02,480 --> 00:01:05,840
retail report

00:01:03,680 --> 00:01:07,280
and they released some pretty important

00:01:05,840 --> 00:01:09,760
findings

00:01:07,280 --> 00:01:11,280
one of those is a 100 millisecond delay

00:01:09,760 --> 00:01:12,240
in website load times can hurt your

00:01:11,280 --> 00:01:15,200
conversion rates

00:01:12,240 --> 00:01:16,720
by seven percent so that that could be a

00:01:15,200 --> 00:01:19,200
lot of money

00:01:16,720 --> 00:01:19,840
a two second delay in web page load time

00:01:19,200 --> 00:01:21,280
can increase

00:01:19,840 --> 00:01:22,799
bounce rates by a hundred and three

00:01:21,280 --> 00:01:24,000
percent and if you're unfamiliar with

00:01:22,799 --> 00:01:25,600
the bounce rate the definition of a

00:01:24,000 --> 00:01:26,000
bounce rate is the percentage of users

00:01:25,600 --> 00:01:28,240
who

00:01:26,000 --> 00:01:29,840
will navigate away from your site after

00:01:28,240 --> 00:01:32,240
only viewing one page or without

00:01:29,840 --> 00:01:34,560
interacting with an element on your page

00:01:32,240 --> 00:01:36,640
and um so if that means that people are

00:01:34,560 --> 00:01:38,159
just upright just leaving your content

00:01:36,640 --> 00:01:41,119
or leaving your page as soon as they get

00:01:38,159 --> 00:01:42,799
there additionally 53

00:01:41,119 --> 00:01:44,320
of mobile site visitors will leave a

00:01:42,799 --> 00:01:47,119
page that takes longer than three

00:01:44,320 --> 00:01:47,119
seconds to load

00:01:47,840 --> 00:01:51,200
um so we wanted to ask the question well

00:01:49,759 --> 00:01:52,880
hey you know akamai is in the business

00:01:51,200 --> 00:01:55,040
of performance

00:01:52,880 --> 00:01:56,000
they make money selling performance was

00:01:55,040 --> 00:01:58,240
that real

00:01:56,000 --> 00:01:59,040
data or was it hypothetical or was it

00:01:58,240 --> 00:02:00,640
real well

00:01:59,040 --> 00:02:02,960
if you see on the screen this is some

00:02:00,640 --> 00:02:04,719
real user data from rackspace.com

00:02:02,960 --> 00:02:06,719
in our uh google analytics from the

00:02:04,719 --> 00:02:08,000
years 2017 and 2018

00:02:06,719 --> 00:02:10,640
and what you see here is there's two

00:02:08,000 --> 00:02:13,760
line charts the line chart on the top

00:02:10,640 --> 00:02:15,440
um is our page load time and the line

00:02:13,760 --> 00:02:18,000
chart on the bottom is our bounce rate

00:02:15,440 --> 00:02:19,360
and what you'll see is they are well not

00:02:18,000 --> 00:02:23,440
perfectly parallel

00:02:19,360 --> 00:02:24,879
they are nearly parallel and

00:02:23,440 --> 00:02:27,200
specifically if you look at the end of

00:02:24,879 --> 00:02:29,120
2017 here we have this

00:02:27,200 --> 00:02:31,120
kind of spike and page load time and we

00:02:29,120 --> 00:02:32,000
have that exact comparable spike in our

00:02:31,120 --> 00:02:35,120
bounce rate

00:02:32,000 --> 00:02:36,720
and as the page load times went up so

00:02:35,120 --> 00:02:37,920
did our bounce rate as our page load

00:02:36,720 --> 00:02:40,319
times went down

00:02:37,920 --> 00:02:42,000
so did our bounce rate as well and so

00:02:40,319 --> 00:02:44,879
while we can't say 100

00:02:42,000 --> 00:02:46,400
certainty they're absolutely uh

00:02:44,879 --> 00:02:49,120
completely correlated

00:02:46,400 --> 00:02:50,000
there's some strong evidence to say that

00:02:49,120 --> 00:02:52,160
suggests that they

00:02:50,000 --> 00:02:53,680
might be at least to a certain degree

00:02:52,160 --> 00:02:55,840
now there's other factors that can

00:02:53,680 --> 00:02:58,080
impact your uh bounce rate as well

00:02:55,840 --> 00:02:59,519
um such as just having bad content on

00:02:58,080 --> 00:03:00,400
your page if you don't have good content

00:02:59,519 --> 00:03:01,920
people are going to leave

00:03:00,400 --> 00:03:03,680
if you have great content on your site

00:03:01,920 --> 00:03:05,040
people might be willing to put up with

00:03:03,680 --> 00:03:08,560
longer load times

00:03:05,040 --> 00:03:10,319
if they know to expect good content so

00:03:08,560 --> 00:03:11,760
um it's not the only factor but it

00:03:10,319 --> 00:03:13,360
definitely is an important factor in

00:03:11,760 --> 00:03:15,920
there and i think we see this in our

00:03:13,360 --> 00:03:17,360
user data

00:03:15,920 --> 00:03:19,920
so let me go ahead and ask another

00:03:17,360 --> 00:03:22,800
question then um how do you go about

00:03:19,920 --> 00:03:24,159
measuring page load time

00:03:22,800 --> 00:03:26,400
well there's a lot of different tools

00:03:24,159 --> 00:03:28,799
you can use um so there's

00:03:26,400 --> 00:03:30,400
first of all your browser um if

00:03:28,799 --> 00:03:32,319
depending on what browser you use

00:03:30,400 --> 00:03:34,080
you can open the developer tools and

00:03:32,319 --> 00:03:34,799
there's a tab in there that says network

00:03:34,080 --> 00:03:38,000
on it

00:03:34,799 --> 00:03:39,680
and if you click the network tab um

00:03:38,000 --> 00:03:41,360
and refresh the page it will actually

00:03:39,680 --> 00:03:44,720
list out all the connections

00:03:41,360 --> 00:03:45,680
that get made on your uh on your website

00:03:44,720 --> 00:03:47,200
as it loads

00:03:45,680 --> 00:03:48,879
and what you'll see is its connections

00:03:47,200 --> 00:03:51,599
both to your local host or

00:03:48,879 --> 00:03:52,799
to your website host but also

00:03:51,599 --> 00:03:53,760
connections that are getting made to

00:03:52,799 --> 00:03:55,920
third-party hosts

00:03:53,760 --> 00:03:58,319
such as google analytics maybe you're

00:03:55,920 --> 00:04:00,080
loading third-party fonts from google

00:03:58,319 --> 00:04:01,200
and the list can go on there's all kinds

00:04:00,080 --> 00:04:02,239
of things you can connect to i'm sure

00:04:01,200 --> 00:04:03,840
you're all familiar with that

00:04:02,239 --> 00:04:06,000
um so you can use your browser for that

00:04:03,840 --> 00:04:09,120
it it provides some very

00:04:06,000 --> 00:04:10,080
very good introductory uh measuring uh

00:04:09,120 --> 00:04:12,640
tool

00:04:10,080 --> 00:04:14,239
acts as a good measuring tool um if

00:04:12,640 --> 00:04:16,479
you're just getting into network

00:04:14,239 --> 00:04:18,479
monitoring and performance monitoring

00:04:16,479 --> 00:04:19,919
you can also use google analytics so as

00:04:18,479 --> 00:04:23,360
you saw a couple slides ago

00:04:19,919 --> 00:04:24,080
uh we had uh some very basic load time

00:04:23,360 --> 00:04:26,639
information

00:04:24,080 --> 00:04:27,199
and some very basic bounce rate data um

00:04:26,639 --> 00:04:29,520
from

00:04:27,199 --> 00:04:31,199
the years 2017 and 2018 because we had

00:04:29,520 --> 00:04:33,280
google analytics installed we didn't

00:04:31,199 --> 00:04:34,240
uh actually set up anything special in

00:04:33,280 --> 00:04:36,720
google analytics

00:04:34,240 --> 00:04:38,400
it was just in there out of the box and

00:04:36,720 --> 00:04:40,000
so if you have google analytics

00:04:38,400 --> 00:04:42,240
installed on your website and

00:04:40,000 --> 00:04:44,240
there's a pro good probability that a

00:04:42,240 --> 00:04:45,680
lot of websites out there have it

00:04:44,240 --> 00:04:47,919
then you might have some baked in

00:04:45,680 --> 00:04:50,160
performance monitoring in that tool as

00:04:47,919 --> 00:04:50,160
well

00:04:50,240 --> 00:04:53,280
additionally there's google page speed

00:04:51,919 --> 00:04:56,320
insights which

00:04:53,280 --> 00:04:57,680
this is a tool that google provides that

00:04:56,320 --> 00:04:59,440
as the name suggests it actually

00:04:57,680 --> 00:05:00,720
provides some good insights into your

00:04:59,440 --> 00:05:02,639
site performance and it will actually

00:05:00,720 --> 00:05:04,240
grade you both desktop and mobile it

00:05:02,639 --> 00:05:07,759
will give you a score from

00:05:04,240 --> 00:05:09,120
0 to 100 0 being awful 100 being great

00:05:07,759 --> 00:05:10,160
most likely your number is going to fall

00:05:09,120 --> 00:05:11,600
somewhere between those numbers

00:05:10,160 --> 00:05:13,840
hopefully on the higher end but

00:05:11,600 --> 00:05:15,120
you may get a high end on desktop and a

00:05:13,840 --> 00:05:17,840
low end on mobile

00:05:15,120 --> 00:05:20,400
and it it definitely is worth plugging

00:05:17,840 --> 00:05:22,000
your site into because you get to see

00:05:20,400 --> 00:05:23,759
a lot of recommendations on what you can

00:05:22,000 --> 00:05:25,600
do to also make improvements to your

00:05:23,759 --> 00:05:27,600
website

00:05:25,600 --> 00:05:28,880
um additionally there's a tool called

00:05:27,600 --> 00:05:30,880
webpagetest which we are going to be

00:05:28,880 --> 00:05:33,280
talking about um

00:05:30,880 --> 00:05:34,800
a bit here and so we'll get into that in

00:05:33,280 --> 00:05:35,680
a second before we do i want to also ask

00:05:34,800 --> 00:05:37,280
the question well hey

00:05:35,680 --> 00:05:38,720
what about drupal can you use dribble to

00:05:37,280 --> 00:05:40,720
monitor performance

00:05:38,720 --> 00:05:42,240
well if you're able to draw any

00:05:40,720 --> 00:05:43,759
conclusions from the title of this

00:05:42,240 --> 00:05:46,400
session

00:05:43,759 --> 00:05:46,960
you might be able to figure out that hey

00:05:46,400 --> 00:05:48,479
yeah

00:05:46,960 --> 00:05:49,919
dribble can be used in some capacity but

00:05:48,479 --> 00:05:51,039
i'm not quite letting the cat out of the

00:05:49,919 --> 00:05:54,000
bag quite yet on

00:05:51,039 --> 00:05:55,199
how you go about doing that first let's

00:05:54,000 --> 00:05:56,160
let's look at web page tests a little

00:05:55,199 --> 00:05:58,080
bit and let's look at some of the

00:05:56,160 --> 00:06:01,120
metrics that web page test provides

00:05:58,080 --> 00:06:02,880
so these metrics are basically ways that

00:06:01,120 --> 00:06:06,080
web page tests

00:06:02,880 --> 00:06:09,199
measure load time and

00:06:06,080 --> 00:06:10,880
so there's this first metric which uh

00:06:09,199 --> 00:06:12,880
you'll commonly see referred to as

00:06:10,880 --> 00:06:15,759
either first byte or time to first byte

00:06:12,880 --> 00:06:16,080
sometimes it's listed as an acronym ttfb

00:06:15,759 --> 00:06:18,160
um

00:06:16,080 --> 00:06:19,440
this measures how long until the very

00:06:18,160 --> 00:06:21,600
first byte

00:06:19,440 --> 00:06:23,360
is received by the user's browser after

00:06:21,600 --> 00:06:25,120
they make the initial connection request

00:06:23,360 --> 00:06:27,120
so this measures a lot of things it will

00:06:25,120 --> 00:06:29,680
measure your php and your mysql

00:06:27,120 --> 00:06:30,400
uh connections and loading that happens

00:06:29,680 --> 00:06:32,880
in the back end

00:06:30,400 --> 00:06:34,000
but it also will measure things like uh

00:06:32,880 --> 00:06:36,720
dns lookup

00:06:34,000 --> 00:06:38,960
network connectivity um ssl negotiation

00:06:36,720 --> 00:06:40,080
if your website's using https um it's

00:06:38,960 --> 00:06:41,759
gonna have to go

00:06:40,080 --> 00:06:43,120
validate the ssl certificate there's a

00:06:41,759 --> 00:06:44,639
certain level of time

00:06:43,120 --> 00:06:46,560
or amount of time that is required for

00:06:44,639 --> 00:06:49,360
that um all of that gets kind of

00:06:46,560 --> 00:06:51,199
included in this time to first fight

00:06:49,360 --> 00:06:52,639
and it's a very important metric it

00:06:51,199 --> 00:06:55,199
definitely measures everything that's

00:06:52,639 --> 00:06:57,280
happening on the back end of your system

00:06:55,199 --> 00:06:58,400
but there's more to performance than

00:06:57,280 --> 00:06:59,599
just what happens on the back end

00:06:58,400 --> 00:07:02,479
there's a lot of stuff that happens on

00:06:59,599 --> 00:07:03,840
the front end as well um so there's some

00:07:02,479 --> 00:07:04,960
other metrics that help you measure

00:07:03,840 --> 00:07:07,199
those kind of things so

00:07:04,960 --> 00:07:09,199
um starting off there's one that's

00:07:07,199 --> 00:07:11,280
called start render or first paint

00:07:09,199 --> 00:07:12,720
and this is how long until anything not

00:07:11,280 --> 00:07:14,319
just content but just anything gets

00:07:12,720 --> 00:07:16,479
rendered on your screen so

00:07:14,319 --> 00:07:19,520
um an example might be a background

00:07:16,479 --> 00:07:22,160
color may load or maybe it is content

00:07:19,520 --> 00:07:23,440
compare this with the first content film

00:07:22,160 --> 00:07:25,360
content full paint

00:07:23,440 --> 00:07:26,880
and that's how long until content is

00:07:25,360 --> 00:07:28,880
first rendered on your screen so

00:07:26,880 --> 00:07:30,000
um most of the time these two metrics

00:07:28,880 --> 00:07:32,000
are going to be pretty close

00:07:30,000 --> 00:07:33,440
to one another but if you're doing some

00:07:32,000 --> 00:07:34,160
weird things with javascript you might

00:07:33,440 --> 00:07:36,080
actually see

00:07:34,160 --> 00:07:38,000
some separation there but i tend to use

00:07:36,080 --> 00:07:40,479
these interchangeably because

00:07:38,000 --> 00:07:42,240
they're pretty much the same on any

00:07:40,479 --> 00:07:44,879
sites i ever manage

00:07:42,240 --> 00:07:45,840
um how how does it define first content

00:07:44,879 --> 00:07:48,879
that's actually

00:07:45,840 --> 00:07:49,840
um basically if any text gets rendered

00:07:48,879 --> 00:07:52,639
on the screen

00:07:49,840 --> 00:07:54,000
or if um an image gets loaded basically

00:07:52,639 --> 00:07:56,000
anything that's not just

00:07:54,000 --> 00:07:59,440
like a background color element um is

00:07:56,000 --> 00:08:01,759
what they would consider content

00:07:59,440 --> 00:08:03,520
um additionally um there's a metric

00:08:01,759 --> 00:08:05,199
called load time this is just the

00:08:03,520 --> 00:08:06,960
this is kind of the metric that i focus

00:08:05,199 --> 00:08:08,240
a lot on it's just a generic metric

00:08:06,960 --> 00:08:11,199
that's called load time

00:08:08,240 --> 00:08:13,039
um what this measures is how long from

00:08:11,199 --> 00:08:15,520
the initial connection request

00:08:13,039 --> 00:08:17,280
to when the document complete event is

00:08:15,520 --> 00:08:18,160
triggered um you might know it as dom

00:08:17,280 --> 00:08:20,400
ready if you

00:08:18,160 --> 00:08:22,319
spend some time in the javascript world

00:08:20,400 --> 00:08:22,800
but this is essentially how long it

00:08:22,319 --> 00:08:25,840
takes

00:08:22,800 --> 00:08:26,639
for your for the server to completely

00:08:25,840 --> 00:08:29,440
return

00:08:26,639 --> 00:08:30,639
uh the entire html back to the browser

00:08:29,440 --> 00:08:33,200
and the browser do its

00:08:30,639 --> 00:08:34,880
initial pass at it um and now it may not

00:08:33,200 --> 00:08:36,399
go fully render everything there's other

00:08:34,880 --> 00:08:37,360
things that happen as synchronously

00:08:36,399 --> 00:08:40,399
after the fact

00:08:37,360 --> 00:08:41,200
but this is how long it takes for the

00:08:40,399 --> 00:08:44,880
initial

00:08:41,200 --> 00:08:47,440
uh document object model to get loaded

00:08:44,880 --> 00:08:50,160
into the browser

00:08:47,440 --> 00:08:50,560
compare that with the fully loaded time

00:08:50,160 --> 00:08:52,880
and

00:08:50,560 --> 00:08:54,480
this is how long um until there was a

00:08:52,880 --> 00:08:56,720
two second

00:08:54,480 --> 00:08:59,040
gap of network inactivity following the

00:08:56,720 --> 00:09:01,839
document complete event now that

00:08:59,040 --> 00:09:03,120
to kind of obfuscate that a little bit

00:09:01,839 --> 00:09:05,279
um

00:09:03,120 --> 00:09:07,519
imagine you're you're connecting you hit

00:09:05,279 --> 00:09:10,080
the document complete event

00:09:07,519 --> 00:09:11,600
then you set a timer for two seconds if

00:09:10,080 --> 00:09:14,000
during that two second window

00:09:11,600 --> 00:09:15,920
at all any subsequent request gets made

00:09:14,000 --> 00:09:18,080
maybe a feature was lazy loaded

00:09:15,920 --> 00:09:19,680
or maybe you're making uh connections to

00:09:18,080 --> 00:09:20,240
google analytics or some other third

00:09:19,680 --> 00:09:22,480
party

00:09:20,240 --> 00:09:23,839
well it's going to reset that timer and

00:09:22,480 --> 00:09:26,560
it's going to keep doing that

00:09:23,839 --> 00:09:28,640
until it gets to a period that has two

00:09:26,560 --> 00:09:31,360
seconds of just complete inactivity

00:09:28,640 --> 00:09:32,880
and at that two second mark once you get

00:09:31,360 --> 00:09:33,760
to that two second window that has the

00:09:32,880 --> 00:09:35,120
inactivity

00:09:33,760 --> 00:09:37,360
it's going to measure the very beginning

00:09:35,120 --> 00:09:40,800
of that time window and consider that to

00:09:37,360 --> 00:09:40,800
be the fully loaded time

00:09:41,120 --> 00:09:44,880
additionally a web page test has another

00:09:43,120 --> 00:09:46,640
metric which is really cool it's

00:09:44,880 --> 00:09:50,000
kind of a magic metric i like to refer

00:09:46,640 --> 00:09:52,640
to but it's called the speed index

00:09:50,000 --> 00:09:54,320
and essentially what this is is how long

00:09:52,640 --> 00:09:56,000
until the content within the browser

00:09:54,320 --> 00:09:57,839
viewport is fully rendered

00:09:56,000 --> 00:09:59,040
so if you compare this with the loaded

00:09:57,839 --> 00:10:00,800
or the fully loaded

00:09:59,040 --> 00:10:02,959
metric which is measuring essentially

00:10:00,800 --> 00:10:05,519
the full page this is really what

00:10:02,959 --> 00:10:06,480
is visible above the fold when a user

00:10:05,519 --> 00:10:08,720
first loads

00:10:06,480 --> 00:10:10,399
uh the page now there's a lot of

00:10:08,720 --> 00:10:11,200
variability that can go into that i mean

00:10:10,399 --> 00:10:13,440
you may have just

00:10:11,200 --> 00:10:15,120
asked the question well what browser

00:10:13,440 --> 00:10:17,040
size are you talking about is it desktop

00:10:15,120 --> 00:10:18,000
is it mobile is it a large screen is it

00:10:17,040 --> 00:10:20,640
a small screen

00:10:18,000 --> 00:10:21,120
well that's where some of the the nuance

00:10:20,640 --> 00:10:23,360
of this

00:10:21,120 --> 00:10:25,760
uh metric comes into play it's also

00:10:23,360 --> 00:10:28,480
extremely fascinating if you go look at

00:10:25,760 --> 00:10:29,920
the web page test documentation and

00:10:28,480 --> 00:10:31,519
where they go explain

00:10:29,920 --> 00:10:33,120
how they calculate this metric they do

00:10:31,519 --> 00:10:35,680
some really really cool things with it

00:10:33,120 --> 00:10:38,480
definitely recommend you read that doc

00:10:35,680 --> 00:10:38,480
if you get the chance

00:10:38,560 --> 00:10:41,600
um additionally you can capture and

00:10:40,880 --> 00:10:43,760
measure

00:10:41,600 --> 00:10:45,600
dom elements so this is essentially the

00:10:43,760 --> 00:10:48,240
total number of html elements

00:10:45,600 --> 00:10:50,959
that are rendered by your browser once

00:10:48,240 --> 00:10:52,560
the fully loaded event fires so this is

00:10:50,959 --> 00:10:54,800
all of the html you see on your page

00:10:52,560 --> 00:10:56,880
that fires after things like

00:10:54,800 --> 00:10:59,440
your digital tracking tags fire maybe

00:10:56,880 --> 00:11:00,880
you have some lazy loaded elements etc

00:10:59,440 --> 00:11:02,640
this is the total number of elements

00:11:00,880 --> 00:11:03,440
because that also illustrates how much

00:11:02,640 --> 00:11:06,000
time it's

00:11:03,440 --> 00:11:07,360
uh going to need the browser itself is

00:11:06,000 --> 00:11:09,040
going to need to go render

00:11:07,360 --> 00:11:11,040
or at least how many different items it

00:11:09,040 --> 00:11:12,959
has to go process and render so

00:11:11,040 --> 00:11:15,680
it's a another way to measure

00:11:12,959 --> 00:11:18,160
performance as well

00:11:15,680 --> 00:11:20,000
so in addition to metrics web page test

00:11:18,160 --> 00:11:21,440
has a couple different views

00:11:20,000 --> 00:11:24,000
so they have what they call their first

00:11:21,440 --> 00:11:26,399
view and they have their repeat view

00:11:24,000 --> 00:11:27,440
so the first view simulates what happens

00:11:26,399 --> 00:11:30,560
when a

00:11:27,440 --> 00:11:33,200
person hits your website

00:11:30,560 --> 00:11:35,279
for the very first time so it's going to

00:11:33,200 --> 00:11:38,000
hit your website hit the url with

00:11:35,279 --> 00:11:39,040
completely fresh cookies and cash

00:11:38,000 --> 00:11:40,959
nothing is set

00:11:39,040 --> 00:11:42,800
and so it really simulates that first

00:11:40,959 --> 00:11:45,360
time user behavior

00:11:42,800 --> 00:11:46,240
go compare that with the repeat view now

00:11:45,360 --> 00:11:48,480
which

00:11:46,240 --> 00:11:49,360
will go make a subsequent request on

00:11:48,480 --> 00:11:51,600
that same

00:11:49,360 --> 00:11:52,959
url but this time it doesn't clear out

00:11:51,600 --> 00:11:53,519
the cookies it doesn't clear out the

00:11:52,959 --> 00:11:56,240
cash

00:11:53,519 --> 00:11:57,120
it's sim simulating a return visitor and

00:11:56,240 --> 00:11:59,279
yes i agree

00:11:57,120 --> 00:12:00,240
um cookies and cash um i could use both

00:11:59,279 --> 00:12:03,120
right now

00:12:00,240 --> 00:12:05,120
um but yeah so the first view is a first

00:12:03,120 --> 00:12:06,959
time visitor repeat view is

00:12:05,120 --> 00:12:09,200
someone who comes back to your site and

00:12:06,959 --> 00:12:11,279
back to your site and where that really

00:12:09,200 --> 00:12:14,160
becomes helpful measuring is you know is

00:12:11,279 --> 00:12:15,760
your caching of static resources working

00:12:14,160 --> 00:12:17,680
and things like that so

00:12:15,760 --> 00:12:19,440
there's definitely value in tracking

00:12:17,680 --> 00:12:20,079
both of these metric or both of these

00:12:19,440 --> 00:12:23,519
views

00:12:20,079 --> 00:12:23,519
um as you see fit

00:12:23,680 --> 00:12:27,360
so let me just show you a quick example

00:12:26,240 --> 00:12:29,839
um

00:12:27,360 --> 00:12:31,200
from webpagetest so i ran webpagetest on

00:12:29,839 --> 00:12:33,760
the session page for

00:12:31,200 --> 00:12:35,279
this session and you when you do that

00:12:33,760 --> 00:12:36,639
you get a couple different scores you

00:12:35,279 --> 00:12:37,920
get some letter grades up here

00:12:36,639 --> 00:12:39,680
i'm not going to spend too much time on

00:12:37,920 --> 00:12:41,920
that what i will show you is you

00:12:39,680 --> 00:12:43,279
see things like the first byte the time

00:12:41,920 --> 00:12:45,920
to first byte was

00:12:43,279 --> 00:12:47,680
almost 4 tenths of a second start render

00:12:45,920 --> 00:12:50,839
is of almost 2 seconds

00:12:47,680 --> 00:12:52,320
document complete is 2.7 fully loaded

00:12:50,839 --> 00:12:53,760
3.25

00:12:52,320 --> 00:12:56,240
so you get that and then if you scroll

00:12:53,760 --> 00:12:58,399
down further you get this waterfall view

00:12:56,240 --> 00:13:00,800
of essentially every connection that was

00:12:58,399 --> 00:13:03,279
made on your site when you loaded it

00:13:00,800 --> 00:13:04,639
and so it kind of truncates it but you

00:13:03,279 --> 00:13:06,240
can see at the beginning it gives you at

00:13:04,639 --> 00:13:07,920
least a partial host name that you can

00:13:06,240 --> 00:13:09,360
kind of identify and track things back

00:13:07,920 --> 00:13:12,040
to where they were coming from

00:13:09,360 --> 00:13:13,279
so these first 16 connections are from

00:13:12,040 --> 00:13:14,720
events.drupal.org

00:13:13,279 --> 00:13:16,800
but then you see we load something from

00:13:14,720 --> 00:13:17,680
google apis we got google tag manager

00:13:16,800 --> 00:13:20,399
loading in there

00:13:17,680 --> 00:13:20,720
we have google fonts loading in there

00:13:20,399 --> 00:13:22,079
all

00:13:20,720 --> 00:13:23,839
other kinds of things that are coming in

00:13:22,079 --> 00:13:26,320
but as you can see

00:13:23,839 --> 00:13:27,760
the more things you load the further the

00:13:26,320 --> 00:13:29,120
right this gantt chart

00:13:27,760 --> 00:13:30,560
really starts to get and it starts

00:13:29,120 --> 00:13:31,680
measuring time and it gets further and

00:13:30,560 --> 00:13:35,600
further and further

00:13:31,680 --> 00:13:37,600
until you get to the final load time

00:13:35,600 --> 00:13:40,079
and so um i'm not going to spend too

00:13:37,600 --> 00:13:41,920
much time into in this tool specifically

00:13:40,079 --> 00:13:45,199
because i really want to get into how

00:13:41,920 --> 00:13:47,199
does drupal then come into play

00:13:45,199 --> 00:13:48,639
so i want to introduce you all to a

00:13:47,199 --> 00:13:49,839
module called the performance budget

00:13:48,639 --> 00:13:52,320
module

00:13:49,839 --> 00:13:53,600
um you can see maybe see on the screen

00:13:52,320 --> 00:13:54,959
shot i know it might be small on your

00:13:53,600 --> 00:13:57,680
screen but it's got this

00:13:54,959 --> 00:13:58,240
uh nice orange button or block right on

00:13:57,680 --> 00:13:59,680
the front

00:13:58,240 --> 00:14:02,079
that says that this project is not

00:13:59,680 --> 00:14:03,279
covered by dribble security advisory um

00:14:02,079 --> 00:14:05,199
and the reason for that is it's

00:14:03,279 --> 00:14:06,639
currently a beta release module

00:14:05,199 --> 00:14:08,240
um it works for triple eight and nine

00:14:06,639 --> 00:14:09,600
but it's still in beta we're still

00:14:08,240 --> 00:14:12,639
working out a few

00:14:09,600 --> 00:14:14,160
uh you know a few details but um it's

00:14:12,639 --> 00:14:15,680
close to stable it's just

00:14:14,160 --> 00:14:18,079
got a few more things to get across the

00:14:15,680 --> 00:14:19,920
line um so it's not currently covered by

00:14:18,079 --> 00:14:20,639
triple security policy but the goal is

00:14:19,920 --> 00:14:24,000
to have it

00:14:20,639 --> 00:14:25,680
uh covered soon um but

00:14:24,000 --> 00:14:28,240
the purpose of this module is it

00:14:25,680 --> 00:14:31,760
actually integrates with webpagetest

00:14:28,240 --> 00:14:34,000
to capture performance data and

00:14:31,760 --> 00:14:35,440
doing so it can provide really two key

00:14:34,000 --> 00:14:37,760
functions so there's other things it can

00:14:35,440 --> 00:14:40,800
do but it has two key functions that

00:14:37,760 --> 00:14:42,959
we've identified use cases for one is

00:14:40,800 --> 00:14:44,399
historical performance trending so if

00:14:42,959 --> 00:14:46,199
you remember when we went back

00:14:44,399 --> 00:14:47,440
and we were we did that capture on

00:14:46,199 --> 00:14:50,399
onepagetest.org

00:14:47,440 --> 00:14:52,160
we captured one moment in time we

00:14:50,399 --> 00:14:53,760
captured what the performance is at the

00:14:52,160 --> 00:14:55,519
moment we were in that scan

00:14:53,760 --> 00:14:56,880
well what that doesn't tell me is what

00:14:55,519 --> 00:14:58,399
was my performance yesterday

00:14:56,880 --> 00:15:00,240
what was my performance last week what

00:14:58,399 --> 00:15:03,440
was my performance six months ago

00:15:00,240 --> 00:15:05,279
and so by using drupal and using

00:15:03,440 --> 00:15:08,000
drupal's amazing

00:15:05,279 --> 00:15:08,880
a revision system within entities we

00:15:08,000 --> 00:15:11,120
were able to

00:15:08,880 --> 00:15:12,480
build a system that essentially every

00:15:11,120 --> 00:15:14,880
day would go capture

00:15:12,480 --> 00:15:15,760
or whatever period you said could go

00:15:14,880 --> 00:15:17,839
capture

00:15:15,760 --> 00:15:20,240
uh performance results from what page

00:15:17,839 --> 00:15:22,720
test store it as a separate revision

00:15:20,240 --> 00:15:24,320
and we could use it to then general uh

00:15:22,720 --> 00:15:26,000
generate some trend lines

00:15:24,320 --> 00:15:27,760
to say hey here's what our performance

00:15:26,000 --> 00:15:30,639
looks like over time

00:15:27,760 --> 00:15:32,160
so that's um key feature number one key

00:15:30,639 --> 00:15:33,040
uh feature number two is threshold

00:15:32,160 --> 00:15:36,160
monitoring

00:15:33,040 --> 00:15:37,519
so you may say something like okay well

00:15:36,160 --> 00:15:39,600
time to first bite

00:15:37,519 --> 00:15:41,680
we don't ever want time to first bite to

00:15:39,600 --> 00:15:44,160
ever be longer than one second

00:15:41,680 --> 00:15:45,040
well if it is longer than one second you

00:15:44,160 --> 00:15:47,680
can actually

00:15:45,040 --> 00:15:48,959
set up a notification inside of drupal

00:15:47,680 --> 00:15:51,040
to say hey send me an

00:15:48,959 --> 00:15:52,240
email if my time to first bite on

00:15:51,040 --> 00:15:55,759
today's run

00:15:52,240 --> 00:15:57,360
took longer than a second to load and so

00:15:55,759 --> 00:15:59,199
it's it's really powerful in that effect

00:15:57,360 --> 00:16:01,759
because it gives you

00:15:59,199 --> 00:16:03,040
trend lines over time but it also can

00:16:01,759 --> 00:16:05,360
really get you

00:16:03,040 --> 00:16:07,360
uh focused on a single point in time as

00:16:05,360 --> 00:16:10,240
well

00:16:07,360 --> 00:16:12,240
um so additionally um i will point out

00:16:10,240 --> 00:16:13,920
this module is built upon another module

00:16:12,240 --> 00:16:15,199
uh that we maintain called the web page

00:16:13,920 --> 00:16:18,320
archive module

00:16:15,199 --> 00:16:21,360
um so this module uh was

00:16:18,320 --> 00:16:22,240
uh originally built as an archiving tool

00:16:21,360 --> 00:16:24,240
so

00:16:22,240 --> 00:16:26,639
we needed to we needed to build a

00:16:24,240 --> 00:16:28,160
mechanism uh that would go crawl

00:16:26,639 --> 00:16:30,560
every website or every page on

00:16:28,160 --> 00:16:32,320
rackspace.com and take a screenshot of

00:16:30,560 --> 00:16:34,720
it so what we did is we actually built

00:16:32,320 --> 00:16:37,040
the web page archive module

00:16:34,720 --> 00:16:38,000
to integrate with headless chrome um and

00:16:37,040 --> 00:16:39,680
it will go and

00:16:38,000 --> 00:16:41,680
take snapshots of our website every

00:16:39,680 --> 00:16:43,680
single day and then we could go back and

00:16:41,680 --> 00:16:44,800
uh take a look at that at any given

00:16:43,680 --> 00:16:47,839
point in time

00:16:44,800 --> 00:16:49,360
well when we built that tool we

00:16:47,839 --> 00:16:51,040
started adding some other features in it

00:16:49,360 --> 00:16:52,560
in addition to capturing screenshots we

00:16:51,040 --> 00:16:55,360
started capturing html

00:16:52,560 --> 00:16:57,040
well then we realized we had revisions

00:16:55,360 --> 00:16:59,759
multiple revisions of the same thing

00:16:57,040 --> 00:17:01,519
so we were able to actually compare

00:16:59,759 --> 00:17:03,839
revisions so you could actually do

00:17:01,519 --> 00:17:05,600
visual regress regression testing

00:17:03,839 --> 00:17:07,280
directly inside a drupal within the

00:17:05,600 --> 00:17:10,799
webpage archive module

00:17:07,280 --> 00:17:13,520
so that module itself really became

00:17:10,799 --> 00:17:15,839
kind of this generic hey i've got a url

00:17:13,520 --> 00:17:17,360
i need to go do some action on a url

00:17:15,839 --> 00:17:18,880
and then i want to store the results i

00:17:17,360 --> 00:17:22,000
may want to compare the results

00:17:18,880 --> 00:17:22,959
i may want to uh then go notify on those

00:17:22,000 --> 00:17:24,640
results

00:17:22,959 --> 00:17:26,160
you can do all of that with the base

00:17:24,640 --> 00:17:29,360
module webpage archive

00:17:26,160 --> 00:17:31,360
so it kind of lent itself to be a

00:17:29,360 --> 00:17:32,400
a good framework to build performance

00:17:31,360 --> 00:17:34,080
budget on top of

00:17:32,400 --> 00:17:36,880
because what we wanted to do is we

00:17:34,080 --> 00:17:39,919
wanted to go supply a url

00:17:36,880 --> 00:17:41,840
for web page tests to go act on

00:17:39,919 --> 00:17:45,679
and go store the results in drupal and

00:17:41,840 --> 00:17:48,960
then we could then go view it later

00:17:45,679 --> 00:17:50,240
so we built this capture utility within

00:17:48,960 --> 00:17:52,000
webpage archive or

00:17:50,240 --> 00:17:54,080
as a separate module but it works on top

00:17:52,000 --> 00:17:55,360
of webpage archive um so we built this

00:17:54,080 --> 00:17:57,039
capture utility

00:17:55,360 --> 00:17:58,880
but then this project kind of fell off

00:17:57,039 --> 00:18:02,240
our radar for about two years

00:17:58,880 --> 00:18:03,840
and what happened with that is just you

00:18:02,240 --> 00:18:06,320
know business priorities change

00:18:03,840 --> 00:18:06,960
uh we shifted our focus into other

00:18:06,320 --> 00:18:08,960
things

00:18:06,960 --> 00:18:10,640
um and so this project's kind of sat by

00:18:08,960 --> 00:18:13,440
the wayside for a while

00:18:10,640 --> 00:18:14,320
um and then fast forward to august of

00:18:13,440 --> 00:18:15,520
last year

00:18:14,320 --> 00:18:17,200
and we're going through the list of

00:18:15,520 --> 00:18:18,720
modules we maintain and starting asking

00:18:17,200 --> 00:18:20,400
questions okay what do we need to do to

00:18:18,720 --> 00:18:22,000
get our modules ready for d9

00:18:20,400 --> 00:18:23,600
and we came across performance budget

00:18:22,000 --> 00:18:25,200
and i realized that hey you know what

00:18:23,600 --> 00:18:26,640
we've been capturing performance data

00:18:25,200 --> 00:18:28,080
for the past two years

00:18:26,640 --> 00:18:29,600
but i have no idea what it looks like

00:18:28,080 --> 00:18:31,280
because while we were capturing it we

00:18:29,600 --> 00:18:33,440
had no way of visualizing it

00:18:31,280 --> 00:18:34,400
so what we ended up doing it kind of

00:18:33,440 --> 00:18:37,039
peaked our cure

00:18:34,400 --> 00:18:38,960
curiosity and we ended up building a way

00:18:37,039 --> 00:18:42,559
to then visualize that data

00:18:38,960 --> 00:18:43,039
inside the module so um skipping over

00:18:42,559 --> 00:18:46,720
here

00:18:43,039 --> 00:18:50,559
um not the waterfall view

00:18:46,720 --> 00:18:52,240
this is what this data looked like um so

00:18:50,559 --> 00:18:54,640
at first glance it might just look a

00:18:52,240 --> 00:18:56,640
little chaotic

00:18:54,640 --> 00:18:58,240
but i can make it look a little better

00:18:56,640 --> 00:18:59,440
for you so just to give you a quick

00:18:58,240 --> 00:19:00,799
heads up what's happening

00:18:59,440 --> 00:19:02,640
you'll see there's four different color

00:19:00,799 --> 00:19:04,720
lines on this chart and again it might

00:19:02,640 --> 00:19:06,080
be a little hard to see but as i do a

00:19:04,720 --> 00:19:09,200
few things it should hopefully

00:19:06,080 --> 00:19:10,160
clarify things but so this pink line is

00:19:09,200 --> 00:19:12,880
the

00:19:10,160 --> 00:19:14,160
average load time this green line is the

00:19:12,880 --> 00:19:16,240
fully loaded time

00:19:14,160 --> 00:19:18,960
the blue line is the time to first byte

00:19:16,240 --> 00:19:21,120
and the orange line is start render

00:19:18,960 --> 00:19:22,480
well i'm going to turn some of these

00:19:21,120 --> 00:19:23,919
metrics off i'm going to turn start

00:19:22,480 --> 00:19:24,640
render off i'm going to turn fully

00:19:23,919 --> 00:19:28,080
loaded off

00:19:24,640 --> 00:19:29,520
and i'm going to turn load time off and

00:19:28,080 --> 00:19:32,080
i want to focus just on our time to

00:19:29,520 --> 00:19:32,080
first bite

00:19:32,320 --> 00:19:38,480
so time to first bite here you can see

00:19:36,080 --> 00:19:40,000
it well first of all you may notice

00:19:38,480 --> 00:19:42,640
periodically we have these

00:19:40,000 --> 00:19:44,960
really really crazy peaks here we have a

00:19:42,640 --> 00:19:47,200
11 second here a 12 second here

00:19:44,960 --> 00:19:48,240
um a seven second the thing with

00:19:47,200 --> 00:19:50,880
performance data is

00:19:48,240 --> 00:19:51,440
there's so many factors that can impact

00:19:50,880 --> 00:19:54,400
what

00:19:51,440 --> 00:19:55,760
might cause a individual day to be slow

00:19:54,400 --> 00:19:57,440
you could have network issues you could

00:19:55,760 --> 00:20:00,400
be under a ddos attack

00:19:57,440 --> 00:20:02,159
um you know maybe the web page test tool

00:20:00,400 --> 00:20:05,280
itself was having issues

00:20:02,159 --> 00:20:08,559
um it's hard to say what the actual

00:20:05,280 --> 00:20:11,280
reason for an individual variance to be

00:20:08,559 --> 00:20:14,080
but what really becomes powerful is the

00:20:11,280 --> 00:20:17,039
general trend and so

00:20:14,080 --> 00:20:18,720
if the data is trending downward that

00:20:17,039 --> 00:20:19,440
means you're doing something right and

00:20:18,720 --> 00:20:21,120
so

00:20:19,440 --> 00:20:22,640
as you can see it's kind of trending

00:20:21,120 --> 00:20:23,520
downward so hopefully we're doing

00:20:22,640 --> 00:20:25,120
something right

00:20:23,520 --> 00:20:27,039
um so what i'm going to do here is i'm

00:20:25,120 --> 00:20:29,039
going to zoom in a little bit

00:20:27,039 --> 00:20:30,480
and i want to pinpoint this day right

00:20:29,039 --> 00:20:32,240
here

00:20:30,480 --> 00:20:34,159
and again i hope you can see this on the

00:20:32,240 --> 00:20:34,960
screen maximize your window if you need

00:20:34,159 --> 00:20:38,320
to

00:20:34,960 --> 00:20:40,559
but this is june 6 of 2018. june 6th of

00:20:38,320 --> 00:20:42,240
2018 was a very very important day for

00:20:40,559 --> 00:20:44,799
rackspace.com

00:20:42,240 --> 00:20:47,840
um that was the day that we actually

00:20:44,799 --> 00:20:51,039
migrated from drupal 7 to drupal

00:20:47,840 --> 00:20:52,240
so what we are seeing here is the

00:20:51,039 --> 00:20:54,640
impacts

00:20:52,240 --> 00:20:55,440
of switching from drupal 7 to drupal 8

00:20:54,640 --> 00:20:57,919
was well

00:20:55,440 --> 00:21:00,480
what changes happened in dribble 8

00:20:57,919 --> 00:21:03,600
versus drupal 7 well we adopted symphony

00:21:00,480 --> 00:21:06,880
we found it as an incredible

00:21:03,600 --> 00:21:09,200
uh or improved our caching mechanisms

00:21:06,880 --> 00:21:10,799
incredibly yeah so the caching and we've

00:21:09,200 --> 00:21:12,240
heard so many sessions about it

00:21:10,799 --> 00:21:14,000
uh there's so many sessions about

00:21:12,240 --> 00:21:15,200
caching today but this is a

00:21:14,000 --> 00:21:17,280
visualization

00:21:15,200 --> 00:21:18,240
of the impacts of drupal 8's caching

00:21:17,280 --> 00:21:19,760
system essentially

00:21:18,240 --> 00:21:21,760
now you may ask the question well you

00:21:19,760 --> 00:21:24,000
migrated from dribble 7 to drupal 8

00:21:21,760 --> 00:21:24,880
did you change the website in any way

00:21:24,000 --> 00:21:27,120
not really

00:21:24,880 --> 00:21:29,039
our goal with that project was really to

00:21:27,120 --> 00:21:30,880
maintain feature parity so for

00:21:29,039 --> 00:21:33,039
our customers perspective the website

00:21:30,880 --> 00:21:34,480
was the same but from the back end

00:21:33,039 --> 00:21:36,480
we just swapped out what was under the

00:21:34,480 --> 00:21:37,600
hood um and we got all the benefits that

00:21:36,480 --> 00:21:39,679
came from jubilee well

00:21:37,600 --> 00:21:40,880
we can see here what some of those

00:21:39,679 --> 00:21:43,840
benefits are

00:21:40,880 --> 00:21:45,520
um additionally um you might also ask

00:21:43,840 --> 00:21:46,159
the question well dribble 7 versus

00:21:45,520 --> 00:21:48,640
drupal 8

00:21:46,159 --> 00:21:49,440
did you when you changed your hosting

00:21:48,640 --> 00:21:52,559
did you

00:21:49,440 --> 00:21:53,840
give a whole bunch of resources to a

00:21:52,559 --> 00:21:57,120
machine

00:21:53,840 --> 00:21:59,039
not really we essentially

00:21:57,120 --> 00:22:01,280
did what we felt was necessary to

00:21:59,039 --> 00:22:02,480
support drupal 7 or drupal 8 versus what

00:22:01,280 --> 00:22:05,760
was necessary to

00:22:02,480 --> 00:22:07,280
drupal uh 7. um and we still got

00:22:05,760 --> 00:22:08,880
benefits out of it

00:22:07,280 --> 00:22:11,120
i'd also like to point out when we were

00:22:08,880 --> 00:22:12,080
using drupal 7 we were also using

00:22:11,120 --> 00:22:13,840
varnish

00:22:12,080 --> 00:22:15,440
when we switched to drupal 8 we actually

00:22:13,840 --> 00:22:15,919
took varnish out of the equation and

00:22:15,440 --> 00:22:17,600
we're

00:22:15,919 --> 00:22:19,280
the only thing we were using at this

00:22:17,600 --> 00:22:22,400
point was

00:22:19,280 --> 00:22:23,120
drupal's onboard cache and akamai edge

00:22:22,400 --> 00:22:25,600
caching

00:22:23,120 --> 00:22:27,440
but even with all of that you can

00:22:25,600 --> 00:22:30,720
clearly see the benefits

00:22:27,440 --> 00:22:31,440
of uh switching from one system to

00:22:30,720 --> 00:22:32,799
another

00:22:31,440 --> 00:22:34,559
switching from triple seven to drupal

00:22:32,799 --> 00:22:36,159
eight so if you're in the process of hey

00:22:34,559 --> 00:22:38,640
do we need to upgrade

00:22:36,159 --> 00:22:40,000
from drupal 7 to drupal 8. here's some

00:22:38,640 --> 00:22:41,760
evidence that i mean

00:22:40,000 --> 00:22:43,120
hey it's going to be faster if you set

00:22:41,760 --> 00:22:47,200
it up right

00:22:43,120 --> 00:22:49,919
so that was one example that we we found

00:22:47,200 --> 00:22:51,200
let's look at a couple other cool data

00:22:49,919 --> 00:22:51,919
points that we have so i'm switching

00:22:51,200 --> 00:22:54,240
over here

00:22:51,919 --> 00:22:56,000
to a different window i'm going to turn

00:22:54,240 --> 00:22:57,600
these other metrics off again

00:22:56,000 --> 00:22:59,120
and again i'm just going to focus on

00:22:57,600 --> 00:22:59,919
time to first byte because i think it

00:22:59,120 --> 00:23:03,520
tells

00:22:59,919 --> 00:23:05,120
a slightly more compelling story so

00:23:03,520 --> 00:23:07,360
if you look right here at the beginning

00:23:05,120 --> 00:23:08,960
of this chart

00:23:07,360 --> 00:23:10,640
you'll see that the time to first bite

00:23:08,960 --> 00:23:13,440
was very very spiky

00:23:10,640 --> 00:23:14,640
and then all of a sudden here in around

00:23:13,440 --> 00:23:17,840
late october

00:23:14,640 --> 00:23:18,880
it stabilized a bit and so the question

00:23:17,840 --> 00:23:21,679
then becomes

00:23:18,880 --> 00:23:23,360
you know what was what was the cause of

00:23:21,679 --> 00:23:24,880
all this spikiness and why did it

00:23:23,360 --> 00:23:26,960
stabilize

00:23:24,880 --> 00:23:28,640
well remember how i said you know it

00:23:26,960 --> 00:23:29,919
doesn't make sense to look into a single

00:23:28,640 --> 00:23:31,520
data point when you're talking about

00:23:29,919 --> 00:23:31,840
performance analysis but really to look

00:23:31,520 --> 00:23:33,280
at

00:23:31,840 --> 00:23:35,360
general trends to make sure you're going

00:23:33,280 --> 00:23:38,159
the right direction well

00:23:35,360 --> 00:23:39,280
what we can see here is there's lots of

00:23:38,159 --> 00:23:41,520
up and downs and

00:23:39,280 --> 00:23:42,799
that was a trend the fact that it was

00:23:41,520 --> 00:23:44,559
bouncing around a lot

00:23:42,799 --> 00:23:46,080
if you click into any one of these data

00:23:44,559 --> 00:23:48,240
points essentially

00:23:46,080 --> 00:23:49,679
um you can actually go see a detailed

00:23:48,240 --> 00:23:50,960
report of what happened on that

00:23:49,679 --> 00:23:53,679
particular day

00:23:50,960 --> 00:23:54,799
so if i come down here we get some

00:23:53,679 --> 00:23:57,279
overview of some of the

00:23:54,799 --> 00:23:58,960
individual times but what i really want

00:23:57,279 --> 00:24:00,720
to focus on is if you click here on this

00:23:58,960 --> 00:24:02,400
view detailed report

00:24:00,720 --> 00:24:04,400
it takes us into a somewhat

00:24:02,400 --> 00:24:07,279
anticlimactic page

00:24:04,400 --> 00:24:08,159
but you can see some um you can see some

00:24:07,279 --> 00:24:10,720
cool stuff here

00:24:08,159 --> 00:24:11,279
once you expand it so you'll see here i

00:24:10,720 --> 00:24:13,039
have

00:24:11,279 --> 00:24:14,880
four sections um the first two are for

00:24:13,039 --> 00:24:16,240
the first view the second two are for

00:24:14,880 --> 00:24:18,240
the repeat view

00:24:16,240 --> 00:24:19,279
but you'll see i have gantt chart and i

00:24:18,240 --> 00:24:22,080
have request

00:24:19,279 --> 00:24:23,919
if i open request this is basically it's

00:24:22,080 --> 00:24:26,320
a list of every connection that happens

00:24:23,919 --> 00:24:27,919
all the corresponding uh times that get

00:24:26,320 --> 00:24:28,480
related to it when it starts when it

00:24:27,919 --> 00:24:30,480
ends

00:24:28,480 --> 00:24:31,679
um it calculates the total time for that

00:24:30,480 --> 00:24:33,919
individual connection

00:24:31,679 --> 00:24:35,200
very helpful for identifying some

00:24:33,919 --> 00:24:36,880
problematic connections

00:24:35,200 --> 00:24:38,640
but what's even more helpful is this

00:24:36,880 --> 00:24:40,799
gantt chart

00:24:38,640 --> 00:24:41,760
what you see here is this is essentially

00:24:40,799 --> 00:24:44,880
a timeline

00:24:41,760 --> 00:24:46,480
of uh all the connections

00:24:44,880 --> 00:24:48,240
that were being made very similar to

00:24:46,480 --> 00:24:50,720
what we saw on webpagetest.org

00:24:48,240 --> 00:24:51,679
now i i'm going to put a disclaimer here

00:24:50,720 --> 00:24:54,320
um

00:24:51,679 --> 00:24:55,600
this module has not really spent we

00:24:54,320 --> 00:24:57,600
haven't spent a whole lot of time on the

00:24:55,600 --> 00:24:58,960
accessibility portion of this module

00:24:57,600 --> 00:25:00,640
it definitely needs some love and needs

00:24:58,960 --> 00:25:01,600
some work so if that's your specialty

00:25:00,640 --> 00:25:04,960
please come help me

00:25:01,600 --> 00:25:05,520
um make this better um but i do want to

00:25:04,960 --> 00:25:08,720
say

00:25:05,520 --> 00:25:10,080
that this is helpful because when you

00:25:08,720 --> 00:25:11,120
mouse over things you can get some

00:25:10,080 --> 00:25:13,360
information

00:25:11,120 --> 00:25:15,360
and so you'll see here that we have this

00:25:13,360 --> 00:25:17,200
kind of really long initial connection

00:25:15,360 --> 00:25:18,799
and in that there's different colors

00:25:17,200 --> 00:25:19,200
there's pink there's green there's blue

00:25:18,799 --> 00:25:20,960
there's

00:25:19,200 --> 00:25:22,799
a couple different shades of orange

00:25:20,960 --> 00:25:24,559
there but really the longest loading

00:25:22,799 --> 00:25:26,880
section was this pink section

00:25:24,559 --> 00:25:27,600
so if i mouse over that i actually see

00:25:26,880 --> 00:25:30,960
that it's

00:25:27,600 --> 00:25:32,320
the dns uh resolution that is taking a

00:25:30,960 --> 00:25:33,520
while and in this case it took eight

00:25:32,320 --> 00:25:35,039
tenths of a second

00:25:33,520 --> 00:25:37,440
if you go look at any of these other

00:25:35,039 --> 00:25:39,360
data points um during this time window

00:25:37,440 --> 00:25:40,480
you'll see it fluctuates sometimes the

00:25:39,360 --> 00:25:42,400
dns resolution

00:25:40,480 --> 00:25:43,919
resolution took longer than a second to

00:25:42,400 --> 00:25:47,520
happen

00:25:43,919 --> 00:25:49,120
so because of that um

00:25:47,520 --> 00:25:51,360
we were able to realize that hey there

00:25:49,120 --> 00:25:55,679
was something wrong with our dns

00:25:51,360 --> 00:25:57,440
well what was wrong with our dns well

00:25:55,679 --> 00:25:59,039
for context a couple months prior to

00:25:57,440 --> 00:26:00,080
this we had actually moved our

00:25:59,039 --> 00:26:01,919
infrastructure we went

00:26:00,080 --> 00:26:03,279
underwent a digital transformation we

00:26:01,919 --> 00:26:05,840
moved our infrastructure from

00:26:03,279 --> 00:26:06,960
basically one data center to another um

00:26:05,840 --> 00:26:10,159
when we did that

00:26:06,960 --> 00:26:12,159
um our c names in our dns kind of got a

00:26:10,159 --> 00:26:12,559
little funky and we basically had a c

00:26:12,159 --> 00:26:14,400
name

00:26:12,559 --> 00:26:16,880
pointing to a c name pointing to a c

00:26:14,400 --> 00:26:17,760
name and so we had all these extra hops

00:26:16,880 --> 00:26:20,799
that were happening in

00:26:17,760 --> 00:26:22,320
happening in our dns lookup well when we

00:26:20,799 --> 00:26:23,679
realized this we were able to look at

00:26:22,320 --> 00:26:25,600
this report and say hey something was

00:26:23,679 --> 00:26:27,840
wrong with our dns

00:26:25,600 --> 00:26:30,000
we took that data we went back

00:26:27,840 --> 00:26:32,480
identified the issue almost immediately

00:26:30,000 --> 00:26:33,440
and if you look the well not perfectly

00:26:32,480 --> 00:26:35,679
flat lining

00:26:33,440 --> 00:26:36,559
it definitely the time traverse by

00:26:35,679 --> 00:26:40,000
stabilized

00:26:36,559 --> 00:26:43,039
tremendously here so it was a def

00:26:40,000 --> 00:26:45,919
definitely a a

00:26:43,039 --> 00:26:46,720
quick fix but we might not have had this

00:26:45,919 --> 00:26:48,320
visibility

00:26:46,720 --> 00:26:49,840
had we only been looking at one day of

00:26:48,320 --> 00:26:53,200
performance data

00:26:49,840 --> 00:26:55,840
but we got this insight because we had

00:26:53,200 --> 00:26:57,600
multiple days of performance data to

00:26:55,840 --> 00:26:59,120
look at

00:26:57,600 --> 00:27:01,360
additionally you'll see over here we

00:26:59,120 --> 00:27:03,520
have another little peak here

00:27:01,360 --> 00:27:06,240
this is actually this year this is march

00:27:03,520 --> 00:27:10,240
10th to march 20th of this year

00:27:06,240 --> 00:27:12,320
um and what this was so on rackspace.com

00:27:10,240 --> 00:27:14,320
if you go to our website and in the top

00:27:12,320 --> 00:27:15,520
right hand corner you click the email us

00:27:14,320 --> 00:27:17,520
link to go

00:27:15,520 --> 00:27:18,799
submit an email you know request a quote

00:27:17,520 --> 00:27:21,600
whatever

00:27:18,799 --> 00:27:23,679
it currently pops up a modal window that

00:27:21,600 --> 00:27:24,159
opens a web form that has recaptcha on

00:27:23,679 --> 00:27:26,799
it

00:27:24,159 --> 00:27:27,679
and when you go submit that form um it

00:27:26,799 --> 00:27:29,520
will

00:27:27,679 --> 00:27:31,200
then go process and pass it into our

00:27:29,520 --> 00:27:35,120
salesforce instance etc

00:27:31,200 --> 00:27:38,000
well we decided during this time window

00:27:35,120 --> 00:27:40,159
we wanted to do an a b test

00:27:38,000 --> 00:27:41,840
no no it's not a coveted spike it's um

00:27:40,159 --> 00:27:44,480
we were actually doing a separate a b

00:27:41,840 --> 00:27:45,679
test and what this a b test was was what

00:27:44,480 --> 00:27:48,559
would it be like

00:27:45,679 --> 00:27:50,000
if we actually instead of having the

00:27:48,559 --> 00:27:51,919
form load in a modal

00:27:50,000 --> 00:27:53,120
we actually embedded the form directly

00:27:51,919 --> 00:27:56,320
on the web page itself

00:27:53,120 --> 00:28:00,080
so it's just existing on the home page

00:27:56,320 --> 00:28:02,399
well if you've ever used

00:28:00,080 --> 00:28:04,320
uh captcha in combination with forms on

00:28:02,399 --> 00:28:05,520
drupal you might know what the problem

00:28:04,320 --> 00:28:07,679
might be

00:28:05,520 --> 00:28:09,200
but if you don't i'll tell you if you're

00:28:07,679 --> 00:28:11,840
using captcha

00:28:09,200 --> 00:28:13,360
page cache stops working and the reason

00:28:11,840 --> 00:28:14,880
page cache stops working

00:28:13,360 --> 00:28:16,960
is because essentially it needs to

00:28:14,880 --> 00:28:18,240
generate a unique id on every single

00:28:16,960 --> 00:28:20,080
page load

00:28:18,240 --> 00:28:21,600
so that the caption mechanism knows that

00:28:20,080 --> 00:28:23,440
you're dealing with a separate session

00:28:21,600 --> 00:28:24,159
it's a requirement for the caption to

00:28:23,440 --> 00:28:27,039
work

00:28:24,159 --> 00:28:28,559
and so what we're seeing here is the

00:28:27,039 --> 00:28:29,760
visual impact and i'm going to zoom out

00:28:28,559 --> 00:28:30,240
a little bit you can still see the peak

00:28:29,760 --> 00:28:32,559
here

00:28:30,240 --> 00:28:34,960
um but we can see the visual impact

00:28:32,559 --> 00:28:37,760
across the board on basically every

00:28:34,960 --> 00:28:39,760
uh metric here that we had simply by

00:28:37,760 --> 00:28:40,720
trying to embed a form directly on our

00:28:39,760 --> 00:28:42,880
home page

00:28:40,720 --> 00:28:44,880
um and it wasn't just our homepage it

00:28:42,880 --> 00:28:47,840
was other pages across our site as well

00:28:44,880 --> 00:28:49,360
so um you know if you're doing that just

00:28:47,840 --> 00:28:51,440
know that embedding forms

00:28:49,360 --> 00:28:52,640
any if you're using a caption mechanism

00:28:51,440 --> 00:28:54,320
um you could

00:28:52,640 --> 00:28:56,000
negatively be impacting performance now

00:28:54,320 --> 00:28:57,600
there are other ways to solve that issue

00:28:56,000 --> 00:29:00,000
you can lazy load

00:28:57,600 --> 00:29:01,520
the form uh loading and these are things

00:29:00,000 --> 00:29:02,399
that we're kind of exploring and working

00:29:01,520 --> 00:29:04,880
through now

00:29:02,399 --> 00:29:05,840
um so there are other solutions to the

00:29:04,880 --> 00:29:08,480
same problem

00:29:05,840 --> 00:29:10,480
but we you can definitely see the

00:29:08,480 --> 00:29:13,600
problem here in this data

00:29:10,480 --> 00:29:15,200
now i will say we didn't need this

00:29:13,600 --> 00:29:17,919
report to tell us

00:29:15,200 --> 00:29:19,200
uh that we were having problems with our

00:29:17,919 --> 00:29:20,799
server

00:29:19,200 --> 00:29:22,880
our back-ends were getting hammered we

00:29:20,799 --> 00:29:26,240
knew it it was just a horrible

00:29:22,880 --> 00:29:27,679
admin experience um but also when we

00:29:26,240 --> 00:29:30,480
were trying to do deployments

00:29:27,679 --> 00:29:32,000
whenever we would import config we had

00:29:30,480 --> 00:29:33,760
semaphore locks that were happening and

00:29:32,000 --> 00:29:35,600
drush would just hang and

00:29:33,760 --> 00:29:37,120
we didn't know what was going on and we

00:29:35,600 --> 00:29:38,320
were in this like weird

00:29:37,120 --> 00:29:39,520
state where we couldn't actually

00:29:38,320 --> 00:29:41,360
complete deployments because they

00:29:39,520 --> 00:29:42,799
weren't actually going through

00:29:41,360 --> 00:29:44,480
it was just kind of this partial and

00:29:42,799 --> 00:29:45,200
complete state and it was really much a

00:29:44,480 --> 00:29:48,240
pain

00:29:45,200 --> 00:29:49,679
and what we did what we basically

00:29:48,240 --> 00:29:50,960
identified we were able to say okay

00:29:49,679 --> 00:29:53,200
we're having these problems

00:29:50,960 --> 00:29:54,000
we ran this a b test we know there's

00:29:53,200 --> 00:29:56,000
issues with page

00:29:54,000 --> 00:29:57,279
cache we turned that a b test off and

00:29:56,000 --> 00:30:00,720
you'll notice again

00:29:57,279 --> 00:30:03,279
the blue line flat lines and so

00:30:00,720 --> 00:30:04,000
what we are seeing here is the visual

00:30:03,279 --> 00:30:08,399
impact

00:30:04,000 --> 00:30:11,600
of having caching on or off um

00:30:08,399 --> 00:30:13,679
while uh while you're using forms

00:30:11,600 --> 00:30:14,960
uh or while you're loading a page

00:30:13,679 --> 00:30:16,960
essentially and so

00:30:14,960 --> 00:30:18,080
um it can definitely have some impact so

00:30:16,960 --> 00:30:20,240
again these are some

00:30:18,080 --> 00:30:21,760
real user data points i have a ton of

00:30:20,240 --> 00:30:22,960
other examples that i'd love to show i

00:30:21,760 --> 00:30:23,760
just for the sake of time i'm going to

00:30:22,960 --> 00:30:26,480
move on

00:30:23,760 --> 00:30:27,840
um but if you're interested hit me up

00:30:26,480 --> 00:30:29,520
later i can definitely show some other

00:30:27,840 --> 00:30:31,679
examples that impact other metrics too

00:30:29,520 --> 00:30:33,440
not just time to first bite

00:30:31,679 --> 00:30:35,279
but what i want to do now is i actually

00:30:33,440 --> 00:30:36,799
want to go walk you through how you'd go

00:30:35,279 --> 00:30:38,880
set this up yourself

00:30:36,799 --> 00:30:40,399
so if you go into configuration system i

00:30:38,880 --> 00:30:41,520
mentioned it's part of web page archive

00:30:40,399 --> 00:30:43,360
that's where you'll find this

00:30:41,520 --> 00:30:44,799
if you go click on what page archive

00:30:43,360 --> 00:30:47,120
what you'll see here is

00:30:44,799 --> 00:30:48,399
i have a couple jobs so i have um the

00:30:47,120 --> 00:30:48,960
two jobs that i kind of showed you

00:30:48,399 --> 00:30:50,480
already

00:30:48,960 --> 00:30:51,679
but i'm going to set up a new one so i'm

00:30:50,480 --> 00:30:54,640
going to go here and i'm going to click

00:30:51,679 --> 00:30:56,960
the add archive button

00:30:54,640 --> 00:30:58,880
and we're just going to call this my

00:30:56,960 --> 00:31:00,640
test job

00:30:58,880 --> 00:31:02,399
first question asks is do we want to run

00:31:00,640 --> 00:31:04,000
this job automatically well the other

00:31:02,399 --> 00:31:06,399
jobs i have set up to run

00:31:04,000 --> 00:31:07,440
automatically they run on a daily basis

00:31:06,399 --> 00:31:09,440
um

00:31:07,440 --> 00:31:11,679
this particular case for this instance

00:31:09,440 --> 00:31:14,640
i'm just going to set it up to be manual

00:31:11,679 --> 00:31:16,240
but if you did set it up uh to be an

00:31:14,640 --> 00:31:18,080
automatic job you can use use like a

00:31:16,240 --> 00:31:19,679
standard contact format so you can use

00:31:18,080 --> 00:31:22,080
either like at weekly or you could do

00:31:19,679 --> 00:31:24,480
like a zero five star star star to have

00:31:22,080 --> 00:31:26,799
it run at five am every single day

00:31:24,480 --> 00:31:27,840
um but for the sake of this

00:31:26,799 --> 00:31:30,240
demonstration i'm gonna

00:31:27,840 --> 00:31:31,679
set it to no and i'm gonna skip down

00:31:30,240 --> 00:31:32,000
here to the bottom you'll see there's

00:31:31,679 --> 00:31:34,559
this

00:31:32,000 --> 00:31:36,559
urls to capture box so i'm going to go

00:31:34,559 --> 00:31:37,760
capture drupal.org

00:31:36,559 --> 00:31:39,679
additionally there's a couple other

00:31:37,760 --> 00:31:40,159
features or fields here that i'll point

00:31:39,679 --> 00:31:42,080
out

00:31:40,159 --> 00:31:44,159
honor robots txt restrictions i'm going

00:31:42,080 --> 00:31:46,240
to put yes

00:31:44,159 --> 00:31:47,200
the module can be respectful of people's

00:31:46,240 --> 00:31:48,960
robot settings

00:31:47,200 --> 00:31:50,399
um if it's if you're scanning your own

00:31:48,960 --> 00:31:51,919
property it's not that important but if

00:31:50,399 --> 00:31:52,399
you're scanning somebody else's site for

00:31:51,919 --> 00:31:54,320
instance

00:31:52,399 --> 00:31:56,000
me scanning triple.org it's important

00:31:54,320 --> 00:31:57,760
that i'm monitoring their honoring their

00:31:56,000 --> 00:31:59,840
robots.txt restrictions

00:31:57,760 --> 00:32:02,159
um additionally there's this data

00:31:59,840 --> 00:32:04,799
retention um

00:32:02,159 --> 00:32:06,559
field which can allow you to say i want

00:32:04,799 --> 00:32:08,399
to keep the last 30 days worth of data

00:32:06,559 --> 00:32:10,880
or i want to keep all the data

00:32:08,399 --> 00:32:12,080
um or i want to keep the last several

00:32:10,880 --> 00:32:13,360
number of revisions

00:32:12,080 --> 00:32:15,600
you have those options i'm just going to

00:32:13,360 --> 00:32:16,000
keep everything for now um and i'm going

00:32:15,600 --> 00:32:18,080
to click

00:32:16,000 --> 00:32:19,919
create new archive and so we get this

00:32:18,080 --> 00:32:21,440
green message we created the archive and

00:32:19,919 --> 00:32:22,159
then if i scroll to the bottom i now

00:32:21,440 --> 00:32:25,200
have this

00:32:22,159 --> 00:32:27,120
other option here to um

00:32:25,200 --> 00:32:29,279
specify what are called the capture

00:32:27,120 --> 00:32:30,240
utilities well i mentioned we created a

00:32:29,279 --> 00:32:32,559
capture utility

00:32:30,240 --> 00:32:34,159
for web page test called the web page

00:32:32,559 --> 00:32:36,240
test capture utility

00:32:34,159 --> 00:32:38,960
so i'm going to go select that and i'm

00:32:36,240 --> 00:32:41,600
going to click add

00:32:38,960 --> 00:32:43,120
and when i do that you see we get to

00:32:41,600 --> 00:32:45,279
configure it a little bit so first of

00:32:43,120 --> 00:32:46,480
all we get to specify which host name we

00:32:45,279 --> 00:32:48,000
want to connect to

00:32:46,480 --> 00:32:50,000
so this is an important thing that

00:32:48,000 --> 00:32:51,440
actually kind of snuck up on on me just

00:32:50,000 --> 00:32:52,080
this week as i was preparing for this

00:32:51,440 --> 00:32:54,799
talk

00:32:52,080 --> 00:32:56,320
um webpagetest used to be a publicly

00:32:54,799 --> 00:32:58,399
available api

00:32:56,320 --> 00:32:59,679
um within the last month i don't know an

00:32:58,399 --> 00:33:00,880
exact date but within the last month

00:32:59,679 --> 00:33:02,240
they actually changed it and they're not

00:33:00,880 --> 00:33:04,159
doing that anymore

00:33:02,240 --> 00:33:06,480
but they do support you installing your

00:33:04,159 --> 00:33:08,720
own private instances a web page test

00:33:06,480 --> 00:33:10,159
and so because of that you can actually

00:33:08,720 --> 00:33:13,919
spin up web page test

00:33:10,159 --> 00:33:16,480
um server on they have uh amis for

00:33:13,919 --> 00:33:17,200
uh aws you can go quickly spin up an

00:33:16,480 --> 00:33:20,399
instance

00:33:17,200 --> 00:33:21,120
on an aws uh host you can do it in

00:33:20,399 --> 00:33:23,279
docker

00:33:21,120 --> 00:33:24,880
there's a good documentation on this on

00:33:23,279 --> 00:33:26,159
the module itself if you go click on the

00:33:24,880 --> 00:33:27,440
getting started documentation you'll

00:33:26,159 --> 00:33:30,480
find some of that

00:33:27,440 --> 00:33:31,360
um but so because my api key is still

00:33:30,480 --> 00:33:33,440
valid because

00:33:31,360 --> 00:33:34,640
like i had a legacy key i'm going to

00:33:33,440 --> 00:33:36,720
continue doing my test

00:33:34,640 --> 00:33:38,240
against webpagetest.org but just know

00:33:36,720 --> 00:33:39,679
that if you're if you don't have an

00:33:38,240 --> 00:33:42,480
existing key you're going to have to go

00:33:39,679 --> 00:33:44,480
spin up a separate instance somewhere

00:33:42,480 --> 00:33:45,600
additionally i can go specify how i want

00:33:44,480 --> 00:33:47,600
to connect

00:33:45,600 --> 00:33:49,519
or provide the api credentials if you

00:33:47,600 --> 00:33:51,120
need it in this case

00:33:49,519 --> 00:33:52,640
we have an optional support for the key

00:33:51,120 --> 00:33:53,840
module so if you have the key module

00:33:52,640 --> 00:33:54,320
installed you can actually just go

00:33:53,840 --> 00:33:56,399
select

00:33:54,320 --> 00:33:57,519
which key you want to use i did that

00:33:56,399 --> 00:33:59,440
mainly because i didn't want to

00:33:57,519 --> 00:34:00,640
accidentally expose an api key during

00:33:59,440 --> 00:34:03,760
this session

00:34:00,640 --> 00:34:04,559
didn't seem like a good idea scrolling

00:34:03,760 --> 00:34:06,159
down

00:34:04,559 --> 00:34:07,679
there's some additional settings auto

00:34:06,159 --> 00:34:08,639
generate historical report settings i'm

00:34:07,679 --> 00:34:10,320
gonna skip that for now

00:34:08,639 --> 00:34:12,000
what i want to focus on is this kpi

00:34:10,320 --> 00:34:14,399
groups so

00:34:12,000 --> 00:34:16,000
i'm gonna clear this out and you'll see

00:34:14,399 --> 00:34:18,480
down here there's a link that says

00:34:16,000 --> 00:34:20,720
create a new kpi group i'm gonna go

00:34:18,480 --> 00:34:22,960
click on it

00:34:20,720 --> 00:34:24,480
and i'm gonna i'm gonna create this up

00:34:22,960 --> 00:34:26,000
now uh create something now

00:34:24,480 --> 00:34:28,079
for context if you're unfamiliar with a

00:34:26,000 --> 00:34:30,960
kpi what a kpi is

00:34:28,079 --> 00:34:32,000
it's a key performance indicator um

00:34:30,960 --> 00:34:33,760
essentially

00:34:32,000 --> 00:34:35,839
what the way we're using it is these are

00:34:33,760 --> 00:34:38,480
the metrics that we care about

00:34:35,839 --> 00:34:40,240
so if i'm gonna if i go create a kpi

00:34:38,480 --> 00:34:40,879
group that i'm just gonna call my kpi

00:34:40,240 --> 00:34:42,240
group

00:34:40,879 --> 00:34:43,919
you'll see here that we can look at

00:34:42,240 --> 00:34:45,359
averages we can look at medians we can

00:34:43,919 --> 00:34:47,359
look at standard deviation

00:34:45,359 --> 00:34:48,960
um with the way performance budget is

00:34:47,359 --> 00:34:50,480
built currently

00:34:48,960 --> 00:34:53,040
your really best bet is just to use

00:34:50,480 --> 00:34:54,000
average um this functionality may come

00:34:53,040 --> 00:34:55,760
later

00:34:54,000 --> 00:34:57,119
it supports it but it's basically going

00:34:55,760 --> 00:34:59,359
to give you the same data

00:34:57,119 --> 00:35:00,640
um but you can do average and then you

00:34:59,359 --> 00:35:01,359
can look at either the first view or the

00:35:00,640 --> 00:35:02,800
repeat view

00:35:01,359 --> 00:35:04,640
for this case i'm going to look at first

00:35:02,800 --> 00:35:05,839
view and let's say i care about time to

00:35:04,640 --> 00:35:08,640
first byte

00:35:05,839 --> 00:35:08,960
and i care about start render and let's

00:35:08,640 --> 00:35:11,280
say

00:35:08,960 --> 00:35:13,280
on time to first byte i want to be

00:35:11,280 --> 00:35:14,079
notified if ever takes longer than one

00:35:13,280 --> 00:35:15,920
second

00:35:14,079 --> 00:35:18,640
so i'm going to click this and i'm going

00:35:15,920 --> 00:35:21,599
to set a maximum value of 1000 sec

00:35:18,640 --> 00:35:22,320
milliseconds which is one second and so

00:35:21,599 --> 00:35:24,800
in theory

00:35:22,320 --> 00:35:26,320
this will then set up a trigger if time

00:35:24,800 --> 00:35:27,200
to first bite ever takes longer than a

00:35:26,320 --> 00:35:29,599
second

00:35:27,200 --> 00:35:30,960
i will down the road somewhere else i'll

00:35:29,599 --> 00:35:33,359
be able to configure hey send me an

00:35:30,960 --> 00:35:36,960
email letting me know

00:35:33,359 --> 00:35:38,800
so i go and click save here

00:35:36,960 --> 00:35:41,359
and you'll see here we have their master

00:35:38,800 --> 00:35:42,720
list of all of our kpi groups so i have

00:35:41,359 --> 00:35:44,720
some other ones that i use but we see

00:35:42,720 --> 00:35:46,320
the one i just created called my kpi

00:35:44,720 --> 00:35:49,280
group

00:35:46,320 --> 00:35:50,400
so if i go back into kpi groups here and

00:35:49,280 --> 00:35:52,640
i start typing

00:35:50,400 --> 00:35:53,680
my kpi group we have an entity

00:35:52,640 --> 00:35:56,160
autocomplete field

00:35:53,680 --> 00:35:57,680
that goes and finds that group for good

00:35:56,160 --> 00:35:58,240
measure i might actually just go find

00:35:57,680 --> 00:36:00,160
another one

00:35:58,240 --> 00:36:02,320
you can specify as many kpi groups as

00:36:00,160 --> 00:36:05,440
you want on a particular job

00:36:02,320 --> 00:36:06,480
um but really i just want to show you

00:36:05,440 --> 00:36:07,119
that you can do it we're not going to

00:36:06,480 --> 00:36:08,560
really focus

00:36:07,119 --> 00:36:12,560
specifically on what they're measuring

00:36:08,560 --> 00:36:15,599
right now additionally you have this

00:36:12,560 --> 00:36:17,920
json object um this is the

00:36:15,599 --> 00:36:18,800
configuration for the the line chart

00:36:17,920 --> 00:36:20,560
functionality

00:36:18,800 --> 00:36:22,400
you can go tweak that functionality if

00:36:20,560 --> 00:36:23,599
you want um it's an advanced use case

00:36:22,400 --> 00:36:24,160
i'm not going to spend too much time on

00:36:23,599 --> 00:36:26,320
it here

00:36:24,160 --> 00:36:27,280
but if you wanted to customize the chart

00:36:26,320 --> 00:36:30,720
functionality for

00:36:27,280 --> 00:36:32,400
this specific run you can do that um

00:36:30,720 --> 00:36:33,760
what i do want to focus on is further

00:36:32,400 --> 00:36:36,240
down this

00:36:33,760 --> 00:36:37,040
notification method and so you see right

00:36:36,240 --> 00:36:40,000
here i have

00:36:37,040 --> 00:36:41,520
notify email select well notification

00:36:40,000 --> 00:36:44,880
methods are

00:36:41,520 --> 00:36:45,520
just another plugin as a generic drupal

00:36:44,880 --> 00:36:47,280
plugin

00:36:45,520 --> 00:36:49,280
that we have built into the base web

00:36:47,280 --> 00:36:51,359
page archive uh functionality

00:36:49,280 --> 00:36:53,200
so technically you could set up and

00:36:51,359 --> 00:36:54,480
build any sort of plugin notification

00:36:53,200 --> 00:36:55,520
system you want you want to notify

00:36:54,480 --> 00:36:57,839
directly into slack

00:36:55,520 --> 00:36:59,280
you want to set up an sns message you

00:36:57,839 --> 00:37:03,200
could do anything

00:36:59,280 --> 00:37:04,560
you want there we we use email because

00:37:03,200 --> 00:37:06,800
it actually allows us to do some cool

00:37:04,560 --> 00:37:08,880
stuff but you'll see now that there's

00:37:06,800 --> 00:37:11,440
two sections so we want to notify

00:37:08,880 --> 00:37:12,400
email on either the single capture

00:37:11,440 --> 00:37:14,320
completion

00:37:12,400 --> 00:37:15,920
or when there's a performance budget

00:37:14,320 --> 00:37:18,000
threshold violation

00:37:15,920 --> 00:37:20,079
so the first one if i go click on this

00:37:18,000 --> 00:37:22,640
this is essentially just saying

00:37:20,079 --> 00:37:23,520
send me an email with whatever today's

00:37:22,640 --> 00:37:25,440
reports are

00:37:23,520 --> 00:37:27,440
i don't care if there was a violation or

00:37:25,440 --> 00:37:28,880
not just send me today's results

00:37:27,440 --> 00:37:30,000
and you'll see if you can see this i

00:37:28,880 --> 00:37:31,280
don't know how well you can see on the

00:37:30,000 --> 00:37:33,359
screen but we have these

00:37:31,280 --> 00:37:34,560
really long variable names that you know

00:37:33,359 --> 00:37:35,119
you might not want to be managing

00:37:34,560 --> 00:37:36,960
yourself

00:37:35,119 --> 00:37:38,240
fortunately you don't have to if you

00:37:36,960 --> 00:37:40,160
scroll down at the bottom

00:37:38,240 --> 00:37:41,520
we actually generate a list with all

00:37:40,160 --> 00:37:42,880
these variables that you can just go

00:37:41,520 --> 00:37:44,880
plug into the template

00:37:42,880 --> 00:37:46,480
and uh the performance budget module

00:37:44,880 --> 00:37:47,040
when it sends out the notification it

00:37:46,480 --> 00:37:49,920
will go

00:37:47,040 --> 00:37:51,359
auto replace those those variables with

00:37:49,920 --> 00:37:54,480
the actual metrics

00:37:51,359 --> 00:37:56,480
um from your run so this first one is

00:37:54,480 --> 00:37:59,200
what happens what it will get sent um

00:37:56,480 --> 00:38:00,320
when the job is complete running the

00:37:59,200 --> 00:38:03,280
second one is

00:38:00,320 --> 00:38:04,000
the email that could get sent if a

00:38:03,280 --> 00:38:06,560
violation

00:38:04,000 --> 00:38:07,359
occurred and so this specifically is

00:38:06,560 --> 00:38:09,040
useful if

00:38:07,359 --> 00:38:10,960
you know i want to know time to first

00:38:09,040 --> 00:38:13,839
byte took longer than one second

00:38:10,960 --> 00:38:15,440
well this html template down here has a

00:38:13,839 --> 00:38:18,640
variable called violations

00:38:15,440 --> 00:38:20,880
that just prints out um prints out the

00:38:18,640 --> 00:38:22,079
variable uh why did we not use the token

00:38:20,880 --> 00:38:25,200
api um

00:38:22,079 --> 00:38:26,320
i don't remember the exact reason i i it

00:38:25,200 --> 00:38:28,640
had something to do with some

00:38:26,320 --> 00:38:30,000
something to be honest i can't remember

00:38:28,640 --> 00:38:31,359
so um

00:38:30,000 --> 00:38:33,599
it might be something we want to support

00:38:31,359 --> 00:38:36,960
in the future um but for now

00:38:33,599 --> 00:38:38,800
you can use these variables as well um

00:38:36,960 --> 00:38:41,920
but it it this is helpful in its own

00:38:38,800 --> 00:38:45,760
right um

00:38:41,920 --> 00:38:47,440
but yeah so so yeah we can we can do

00:38:45,760 --> 00:38:50,880
that sorry i was just checking something

00:38:47,440 --> 00:38:52,640
um so we can do that um once we get this

00:38:50,880 --> 00:38:54,400
set up we go click the add capture

00:38:52,640 --> 00:38:55,760
utility button here

00:38:54,400 --> 00:38:57,680
and then we want to go retrieve the

00:38:55,760 --> 00:38:59,599
results so if i go back to the main

00:38:57,680 --> 00:39:02,000
webpage archive um

00:38:59,599 --> 00:39:03,599
list you see we now have the my test job

00:39:02,000 --> 00:39:06,240
uh

00:39:03,599 --> 00:39:07,359
job here um if it was an automatic run

00:39:06,240 --> 00:39:08,720
we would just wait for it to

00:39:07,359 --> 00:39:11,440
automatically go

00:39:08,720 --> 00:39:12,960
run well because this is not this is a

00:39:11,440 --> 00:39:14,720
manual job we have to go manually

00:39:12,960 --> 00:39:16,240
trigger it so i go

00:39:14,720 --> 00:39:17,760
click the drop button i click the start

00:39:16,240 --> 00:39:18,560
run button i click the start run button

00:39:17,760 --> 00:39:20,400
again

00:39:18,560 --> 00:39:22,079
and it goes and it issues a request

00:39:20,400 --> 00:39:24,400
against web page test

00:39:22,079 --> 00:39:25,839
well what happened here is we got this

00:39:24,400 --> 00:39:28,240
big fat goose egg

00:39:25,839 --> 00:39:29,359
we got zero items captured and zero

00:39:28,240 --> 00:39:32,640
bytes received

00:39:29,359 --> 00:39:34,960
well what exactly is going on here

00:39:32,640 --> 00:39:36,000
well it's worth knowing what's what

00:39:34,960 --> 00:39:38,240
actually happens

00:39:36,000 --> 00:39:39,839
webpagetest it's gotta take a little bit

00:39:38,240 --> 00:39:41,920
of time to go

00:39:39,839 --> 00:39:43,280
capture the data it's got to go process

00:39:41,920 --> 00:39:45,440
the the data

00:39:43,280 --> 00:39:47,680
go run all the various tests so your

00:39:45,440 --> 00:39:49,280
results aren't immediately available

00:39:47,680 --> 00:39:51,599
so you have to actually go make a

00:39:49,280 --> 00:39:56,640
subsequent request against webpagetest

00:39:51,599 --> 00:39:58,400
and so if i go click it again here

00:39:56,640 --> 00:40:00,079
um you'll see that i actually now have

00:39:58,400 --> 00:40:01,520
results sometimes well actually

00:40:00,079 --> 00:40:03,760
uh i might have to run that again

00:40:01,520 --> 00:40:05,280
because um there is a slight glitch

00:40:03,760 --> 00:40:08,640
where occasionally it doesn't work

00:40:05,280 --> 00:40:11,200
as i expect um

00:40:08,640 --> 00:40:11,839
and of course it happened during my demo

00:40:11,200 --> 00:40:14,640
so let's go

00:40:11,839 --> 00:40:14,640
try that again

00:40:14,880 --> 00:40:18,319
and we're going to fetch the results

00:40:16,800 --> 00:40:19,599
this time and you'll see this time okay

00:40:18,319 --> 00:40:21,680
i actually got a response

00:40:19,599 --> 00:40:23,119
but we see the response is the test

00:40:21,680 --> 00:40:25,599
started eight seconds ago and what that

00:40:23,119 --> 00:40:27,760
means is hey you're being too impatient

00:40:25,599 --> 00:40:28,640
slow down wait for the results to come

00:40:27,760 --> 00:40:30,560
back

00:40:28,640 --> 00:40:31,839
and so essentially you have to keep

00:40:30,560 --> 00:40:33,440
pulling web page tests to get the

00:40:31,839 --> 00:40:35,359
results until they're ready

00:40:33,440 --> 00:40:36,800
i've noticed it usually doesn't take any

00:40:35,359 --> 00:40:38,480
longer than

00:40:36,800 --> 00:40:40,800
one to two minutes to get the results

00:40:38,480 --> 00:40:42,720
back um but

00:40:40,800 --> 00:40:44,079
you know it's dependent on the different

00:40:42,720 --> 00:40:45,440
factors especially if there's other

00:40:44,079 --> 00:40:47,520
tests in queue

00:40:45,440 --> 00:40:49,839
um very variety of things could be

00:40:47,520 --> 00:40:52,480
impacting those results not loading

00:40:49,839 --> 00:40:53,359
if i go try again yeah we're still

00:40:52,480 --> 00:40:54,720
having to wait

00:40:53,359 --> 00:40:55,680
i'm going to use this opportunity to

00:40:54,720 --> 00:40:58,560
drink a little bit of water and

00:40:55,680 --> 00:40:58,560
rehydrate myself

00:41:00,720 --> 00:41:04,319
but yeah so we have to wait for the

00:41:02,079 --> 00:41:04,800
results from web page tests and let's

00:41:04,319 --> 00:41:06,400
see

00:41:04,800 --> 00:41:08,000
is this enough time or am i still being

00:41:06,400 --> 00:41:10,000
impatient there we go

00:41:08,000 --> 00:41:12,160
and you'll see here we now got one item

00:41:10,000 --> 00:41:14,560
captured but we can see that the capture

00:41:12,160 --> 00:41:18,319
size is 1.88 megabytes

00:41:14,560 --> 00:41:20,079
um that's the rough size of a general

00:41:18,319 --> 00:41:22,240
data response now it is just storing a

00:41:20,079 --> 00:41:24,079
json object we could go compress it on

00:41:22,240 --> 00:41:24,720
our end we don't but we could compress

00:41:24,079 --> 00:41:26,960
it make it

00:41:24,720 --> 00:41:28,560
not quite so heavy on our back ends but

00:41:26,960 --> 00:41:30,640
we don't um

00:41:28,560 --> 00:41:32,160
but from there we can see now if i go

00:41:30,640 --> 00:41:33,359
view the details

00:41:32,160 --> 00:41:35,280
this is the connection that was made

00:41:33,359 --> 00:41:36,880
against drupal.org and then you can see

00:41:35,280 --> 00:41:38,480
right here we got our time to first byte

00:41:36,880 --> 00:41:40,079
we got our start render time and then i

00:41:38,480 --> 00:41:41,839
also added this counts um

00:41:40,079 --> 00:41:44,640
kpi group which measures the number of

00:41:41,839 --> 00:41:47,599
dom elements and the total number of

00:41:44,640 --> 00:41:49,359
requests that were made total um and if

00:41:47,599 --> 00:41:51,680
i go click the

00:41:49,359 --> 00:41:53,040
gantt chart we again see all the

00:41:51,680 --> 00:41:54,800
connections being made against

00:41:53,040 --> 00:41:57,359
drupal.org

00:41:54,800 --> 00:41:58,319
so that's how you see individual runs if

00:41:57,359 --> 00:42:00,880
you want to go see

00:41:58,319 --> 00:42:02,560
cumulative runs and see the line trends

00:42:00,880 --> 00:42:04,720
you go into the job you click

00:42:02,560 --> 00:42:06,800
view run history and then you go click

00:42:04,720 --> 00:42:09,200
uh view historical report here

00:42:06,800 --> 00:42:11,040
and this is actually what goes and

00:42:09,200 --> 00:42:11,839
generates these trend lines so this is

00:42:11,040 --> 00:42:15,200
how you can

00:42:11,839 --> 00:42:16,640
measure performance over time so

00:42:15,200 --> 00:42:18,400
there's that the other thing i will

00:42:16,640 --> 00:42:19,839
point out too is if you go to the

00:42:18,400 --> 00:42:20,400
settings tab here under the webpage

00:42:19,839 --> 00:42:22,079
archive

00:42:20,400 --> 00:42:24,319
you can actually set default values so

00:42:22,079 --> 00:42:26,480
if you're setting up multiple jobs

00:42:24,319 --> 00:42:28,160
you can actually go essentially

00:42:26,480 --> 00:42:29,119
pre-populate the settings that you're

00:42:28,160 --> 00:42:30,560
prone to use

00:42:29,119 --> 00:42:32,480
so you don't have to re-enter them all

00:42:30,560 --> 00:42:33,760
the time i'm not going to spend much

00:42:32,480 --> 00:42:35,920
time doing that right now but just know

00:42:33,760 --> 00:42:38,000
that does exist

00:42:35,920 --> 00:42:39,040
and so from that i do want to we only

00:42:38,000 --> 00:42:42,160
have a few minutes left

00:42:39,040 --> 00:42:44,000
and i want to make sure i get to this

00:42:42,160 --> 00:42:45,920
so you might have a question of hey what

00:42:44,000 --> 00:42:48,079
does the email notification look like

00:42:45,920 --> 00:42:49,280
again if you can see this on the on the

00:42:48,079 --> 00:42:51,599
screen um

00:42:49,280 --> 00:42:53,599
we actually pipe the email into slack

00:42:51,599 --> 00:42:55,359
and we have it set up whenever there's a

00:42:53,599 --> 00:42:57,359
performance budget violation

00:42:55,359 --> 00:42:58,720
one of our channels in slack gets

00:42:57,359 --> 00:43:02,160
notified that says

00:42:58,720 --> 00:43:03,680
hey today your uh what is this your load

00:43:02,160 --> 00:43:06,079
time we were expecting it to be two

00:43:03,680 --> 00:43:07,760
seconds but it was 2.029 seconds which

00:43:06,079 --> 00:43:08,880
is above your threshold so here's your

00:43:07,760 --> 00:43:12,160
violation

00:43:08,880 --> 00:43:13,599
for today it then gives me details of

00:43:12,160 --> 00:43:15,839
all the other metrics from that

00:43:13,599 --> 00:43:17,440
connection and it provides the see more

00:43:15,839 --> 00:43:19,440
information link that i can then go

00:43:17,440 --> 00:43:20,720
click and i can go view more details for

00:43:19,440 --> 00:43:25,280
that individual run

00:43:20,720 --> 00:43:27,839
so this is the module in a nutshell

00:43:25,280 --> 00:43:30,480
so i'm gonna then go back and ask you

00:43:27,839 --> 00:43:32,319
know who benefits from using this module

00:43:30,480 --> 00:43:34,480
well so there's the enterprise

00:43:32,319 --> 00:43:36,400
enterprise website maintainers like us

00:43:34,480 --> 00:43:37,520
rackspace technology we manage this

00:43:36,400 --> 00:43:40,079
enterprise website

00:43:37,520 --> 00:43:42,000
it's in our best interest that our site

00:43:40,079 --> 00:43:44,000
is performing

00:43:42,000 --> 00:43:46,160
but you might be a e-commerce website

00:43:44,000 --> 00:43:48,400
maintainer you might be selling products

00:43:46,160 --> 00:43:50,000
well you could use this tool to go uh go

00:43:48,400 --> 00:43:51,200
monitor one of your product pages and

00:43:50,000 --> 00:43:53,200
just say hey

00:43:51,200 --> 00:43:54,319
and just monitor over time because again

00:43:53,200 --> 00:43:55,280
if you go back to what we talked about

00:43:54,319 --> 00:43:58,160
at the beginning that

00:43:55,280 --> 00:43:58,720
bounce rate isn't impacted by page load

00:43:58,160 --> 00:44:01,200
times

00:43:58,720 --> 00:44:01,760
if you have low slow loading product

00:44:01,200 --> 00:44:03,200
pages

00:44:01,760 --> 00:44:05,119
you may be leaving some money on the

00:44:03,200 --> 00:44:07,119
table

00:44:05,119 --> 00:44:08,960
additionally if you're an agency or a

00:44:07,119 --> 00:44:11,200
contract developer you're essentially

00:44:08,960 --> 00:44:13,520
someone who builds websites for other

00:44:11,200 --> 00:44:14,319
people you can set this up to monitor

00:44:13,520 --> 00:44:16,640
all of your

00:44:14,319 --> 00:44:18,720
customer websites it might even provide

00:44:16,640 --> 00:44:20,319
you a revenue stream to go back into

00:44:18,720 --> 00:44:20,640
them six months later and say hey we've

00:44:20,319 --> 00:44:21,760
been

00:44:20,640 --> 00:44:23,520
checking are you monitoring the

00:44:21,760 --> 00:44:24,640
performance of your website we noticed

00:44:23,520 --> 00:44:26,400
it started to dip

00:44:24,640 --> 00:44:28,720
can we help you improve it so it

00:44:26,400 --> 00:44:31,359
actually gives you potentially

00:44:28,720 --> 00:44:32,400
mechanisms to go resell to existing

00:44:31,359 --> 00:44:35,839
customers

00:44:32,400 --> 00:44:37,680
that you may not have had otherwise

00:44:35,839 --> 00:44:39,119
additionally um if you're a marketer or

00:44:37,680 --> 00:44:39,520
you're a sales leader your business

00:44:39,119 --> 00:44:40,960
owner

00:44:39,520 --> 00:44:42,800
you might not care about the technical

00:44:40,960 --> 00:44:45,520
nitty-gritty of setting all this up

00:44:42,800 --> 00:44:46,000
but maybe you want to monitor load times

00:44:45,520 --> 00:44:47,839
because

00:44:46,000 --> 00:44:49,520
if your website is a key channel for

00:44:47,839 --> 00:44:51,280
your business if it is a

00:44:49,520 --> 00:44:53,440
if it's responsible for driving leads or

00:44:51,280 --> 00:44:56,240
driving sales then

00:44:53,440 --> 00:44:57,440
it absolutely is an important thing to

00:44:56,240 --> 00:45:00,880
to be monitoring for

00:44:57,440 --> 00:45:02,480
uh for your business um

00:45:00,880 --> 00:45:05,920
so just real quick a couple learning

00:45:02,480 --> 00:45:07,520
resources i have some faqs here i'm

00:45:05,920 --> 00:45:09,760
going to skip through most of these i am

00:45:07,520 --> 00:45:11,760
going to quickly address the last one

00:45:09,760 --> 00:45:12,880
what about accessibility concerns i

00:45:11,760 --> 00:45:14,960
mentioned it earlier

00:45:12,880 --> 00:45:16,960
we definitely need some help here

00:45:14,960 --> 00:45:18,880
anybody who is an expert in that

00:45:16,960 --> 00:45:20,800
particular realm i would love to make

00:45:18,880 --> 00:45:23,520
this module accessible for people

00:45:20,800 --> 00:45:24,480
um so please help as you can there is a

00:45:23,520 --> 00:45:27,839
drupal.org

00:45:24,480 --> 00:45:31,119
issue for that particular thing that

00:45:27,839 --> 00:45:31,119
can hopefully get fleshed out soon

00:45:31,200 --> 00:45:34,400
additionally i have um some resources

00:45:32,960 --> 00:45:36,000
here the slides i can

00:45:34,400 --> 00:45:37,920
share those slide links again here in a

00:45:36,000 --> 00:45:38,560
second and post them in the chat so you

00:45:37,920 --> 00:45:39,920
can have them

00:45:38,560 --> 00:45:42,480
all of this information is available

00:45:39,920 --> 00:45:44,960
there um

00:45:42,480 --> 00:45:46,400
so what did you think of this session um

00:45:44,960 --> 00:45:48,319
please provide feedback

00:45:46,400 --> 00:45:49,599
i gave you a tiny url you can also click

00:45:48,319 --> 00:45:52,400
bethany lister's link

00:45:49,599 --> 00:45:53,200
in the top of the uh the chat up there

00:45:52,400 --> 00:45:55,359
um

00:45:53,200 --> 00:45:57,200
please provide feedback it helps us it

00:45:55,359 --> 00:45:59,040
helps the dribble association know

00:45:57,200 --> 00:46:02,079
that you know this is content that

00:45:59,040 --> 00:46:05,119
you're wanting um thank you so much

00:46:02,079 --> 00:46:07,280
um i appreciate your time and

00:46:05,119 --> 00:46:08,640
please reach out on twitter slack if i

00:46:07,280 --> 00:46:10,319
um if i can't

00:46:08,640 --> 00:46:11,920
re answer your questions now i can

00:46:10,319 --> 00:46:13,200
definitely reach a reach back out and

00:46:11,920 --> 00:46:16,400
answer to

00:46:13,200 --> 00:46:17,440
you from those other mechanisms um from

00:46:16,400 --> 00:46:20,560
that perspective

00:46:17,440 --> 00:46:22,160
um i am going to share the link and we

00:46:20,560 --> 00:46:23,680
are at time so if anybody needs to drop

00:46:22,160 --> 00:46:24,160
off please feel free to drop off but i

00:46:23,680 --> 00:46:26,400
will

00:46:24,160 --> 00:46:28,400
stick around to answer a couple more

00:46:26,400 --> 00:46:32,480
questions

00:46:28,400 --> 00:46:32,480
so yes again please provide feedback

00:46:33,599 --> 00:46:36,720
mike's provided the link to the

00:46:34,720 --> 00:46:39,280
performance budget module

00:46:36,720 --> 00:46:40,160
again slides are available at this link

00:46:39,280 --> 00:46:43,359
and

00:46:40,160 --> 00:46:47,440
please connect with me on twitter

00:46:43,359 --> 00:46:50,240
and or on drupal.org um so

00:46:47,440 --> 00:46:50,720
thank you again um mike did you want to

00:46:50,240 --> 00:46:53,200
maybe

00:46:50,720 --> 00:46:54,319
um type in a couple of the questions i i

00:46:53,200 --> 00:46:56,319
think we have

00:46:54,319 --> 00:46:57,760
we can maybe squeeze in a couple of uh

00:46:56,319 --> 00:46:59,119
questions here sorry i don't have time

00:46:57,760 --> 00:47:00,160
for everyone's question but please reach

00:46:59,119 --> 00:47:02,880
out if you

00:47:00,160 --> 00:47:04,640
have any further ones oh good question

00:47:02,880 --> 00:47:06,640
is it safe to run in production

00:47:04,640 --> 00:47:07,839
i would say no we actually what we

00:47:06,640 --> 00:47:10,079
actually do is

00:47:07,839 --> 00:47:10,880
we have a completely separate instance

00:47:10,079 --> 00:47:12,480
where we run

00:47:10,880 --> 00:47:14,400
all of our web page archive suite

00:47:12,480 --> 00:47:15,920
including performance budget

00:47:14,400 --> 00:47:17,920
i think it's better to do that anyway

00:47:15,920 --> 00:47:19,680
because it's really separate from your

00:47:17,920 --> 00:47:21,040
website anyway

00:47:19,680 --> 00:47:23,200
plus you don't want the performance

00:47:21,040 --> 00:47:26,000
impacts of this impacting your website

00:47:23,200 --> 00:47:26,880
there's a lot of different factors i

00:47:26,000 --> 00:47:28,720
definitely think

00:47:26,880 --> 00:47:30,240
it makes a lot of sense to run it in a

00:47:28,720 --> 00:47:31,920
separate instance the cool thing about

00:47:30,240 --> 00:47:34,160
it though is you can actually run this

00:47:31,920 --> 00:47:35,520
against other websites it doesn't have

00:47:34,160 --> 00:47:36,319
to be drupal websites you can run it

00:47:35,520 --> 00:47:37,920
against

00:47:36,319 --> 00:47:40,079
wordpress websites you can run it

00:47:37,920 --> 00:47:41,520
against your competitors websites

00:47:40,079 --> 00:47:43,920
if you're being mindful of their

00:47:41,520 --> 00:47:45,520
robots.txt settings um

00:47:43,920 --> 00:47:47,280
you can you can do a lot of things with

00:47:45,520 --> 00:47:47,760
that it doesn't have to you don't have

00:47:47,280 --> 00:47:49,839
to be

00:47:47,760 --> 00:47:50,880
uh having customers who are just drupal

00:47:49,839 --> 00:47:51,760
to be able to use this for your

00:47:50,880 --> 00:47:54,640
customers

00:47:51,760 --> 00:47:55,599
so um because again web page test is

00:47:54,640 --> 00:47:58,880
just a generic

00:47:55,599 --> 00:48:00,000
tool that um goes and makes an http

00:47:58,880 --> 00:48:03,200
request and then

00:48:00,000 --> 00:48:04,839
essentially simulates a browser um

00:48:03,200 --> 00:48:06,800
yes yeah run it out of your own

00:48:04,839 --> 00:48:08,160
infrastructure you can do that okay so

00:48:06,800 --> 00:48:09,119
mike let's see would this work with a

00:48:08,160 --> 00:48:11,599
decoupled site

00:48:09,119 --> 00:48:12,559
um yes it would now the way web page

00:48:11,599 --> 00:48:14,400
test works

00:48:12,559 --> 00:48:16,079
specifically like that tool with

00:48:14,400 --> 00:48:16,400
decoupled sites i haven't spent a lot of

00:48:16,079 --> 00:48:18,400
time

00:48:16,400 --> 00:48:19,760
testing it um but essentially what

00:48:18,400 --> 00:48:20,160
you're talking about is you have a front

00:48:19,760 --> 00:48:21,760
end

00:48:20,160 --> 00:48:24,240
you have front end load times and then

00:48:21,760 --> 00:48:25,920
you have other metrics that measure

00:48:24,240 --> 00:48:27,599
all the subsequent like front end

00:48:25,920 --> 00:48:28,240
requests and that's where some of those

00:48:27,599 --> 00:48:30,480
metrics

00:48:28,240 --> 00:48:32,240
uh really might come into play because

00:48:30,480 --> 00:48:34,240
you can take a look at those and just

00:48:32,240 --> 00:48:36,000
say how long are these external requests

00:48:34,240 --> 00:48:37,920
to these api endpoints taking

00:48:36,000 --> 00:48:39,760
to load so you can definitely use it for

00:48:37,920 --> 00:48:40,559
a decoupled site i haven't really done

00:48:39,760 --> 00:48:42,960
much with that

00:48:40,559 --> 00:48:43,839
other than like some very basic examples

00:48:42,960 --> 00:48:45,520
um but i

00:48:43,839 --> 00:48:47,680
i can't see why you couldn't as long as

00:48:45,520 --> 00:48:50,880
web page test supports it this module

00:48:47,680 --> 00:48:51,680
should support it see is there any way

00:48:50,880 --> 00:48:54,079
we can provide

00:48:51,680 --> 00:48:55,040
a base url because generally the live

00:48:54,079 --> 00:48:57,760
sites

00:48:55,040 --> 00:48:58,400
run through cloud fare cdn and varnish

00:48:57,760 --> 00:49:00,160
while

00:48:58,400 --> 00:49:02,640
administration site might not run

00:49:00,160 --> 00:49:03,520
through the route um so for example our

00:49:02,640 --> 00:49:05,520
live set is running

00:49:03,520 --> 00:49:07,040
on example where our admin is triple

00:49:05,520 --> 00:49:10,319
that example um

00:49:07,040 --> 00:49:14,079
so you can if the

00:49:10,319 --> 00:49:14,640
instance has access to that particular

00:49:14,079 --> 00:49:17,839
host name

00:49:14,640 --> 00:49:19,760
so if you have um like these

00:49:17,839 --> 00:49:22,319
preview host names and these like dev

00:49:19,760 --> 00:49:24,319
host names blocked by like a vpn or

00:49:22,319 --> 00:49:26,240
you have to have vpn access or whatever

00:49:24,319 --> 00:49:27,599
then you essentially have to run it

00:49:26,240 --> 00:49:28,240
behind the vpn and make sure the

00:49:27,599 --> 00:49:32,480
connection

00:49:28,240 --> 00:49:33,839
uh can uh hit that domain

00:49:32,480 --> 00:49:35,520
but there's no reason why it couldn't

00:49:33,839 --> 00:49:37,359
now if it needed to authenticate

00:49:35,520 --> 00:49:39,520
it doesn't cert currently support

00:49:37,359 --> 00:49:41,280
authentication but it can definitely hit

00:49:39,520 --> 00:49:42,160
something as long as the network route

00:49:41,280 --> 00:49:45,680
is accessible

00:49:42,160 --> 00:49:48,400
from wherever web page test is running

00:49:45,680 --> 00:49:51,680
um is this like an average gantt chart

00:49:48,400 --> 00:49:51,680
of multiple requests

00:49:53,280 --> 00:49:56,880
so the gantt charts that we were seeing

00:49:56,160 --> 00:49:59,440
they were

00:49:56,880 --> 00:50:00,960
for individual requests but this that

00:49:59,440 --> 00:50:03,920
actually does bring up another point

00:50:00,960 --> 00:50:04,800
let me go back over here if i go back

00:50:03,920 --> 00:50:08,720
into

00:50:04,800 --> 00:50:11,119
the overview page if i scroll to the

00:50:08,720 --> 00:50:12,559
oh sorry the view historical report um

00:50:11,119 --> 00:50:14,640
if i scroll to the very bottom

00:50:12,559 --> 00:50:15,760
after the chart loads you actually see

00:50:14,640 --> 00:50:18,319
we have uh

00:50:15,760 --> 00:50:20,079
these request summaries and what this is

00:50:18,319 --> 00:50:21,680
is essentially over the

00:50:20,079 --> 00:50:23,760
the time period that you're monitoring

00:50:21,680 --> 00:50:26,000
up here it actually gives you

00:50:23,760 --> 00:50:27,520
a summary of all the various host names

00:50:26,000 --> 00:50:30,160
that got connected to over

00:50:27,520 --> 00:50:31,599
that period of time and how many times

00:50:30,160 --> 00:50:33,200
it happened so you'll see this

00:50:31,599 --> 00:50:36,079
connection only happened in 2017 and

00:50:33,200 --> 00:50:38,000
2018 but it happened 153 times and the

00:50:36,079 --> 00:50:40,240
average load time was one second

00:50:38,000 --> 00:50:41,280
so this is actually this table is

00:50:40,240 --> 00:50:43,200
helpful for fi

00:50:41,280 --> 00:50:44,319
finding some of the worst offenders uh

00:50:43,200 --> 00:50:46,559
amongst your request

00:50:44,319 --> 00:50:47,599
uh request so if there's certain domains

00:50:46,559 --> 00:50:49,119
that are taking a while like for

00:50:47,599 --> 00:50:50,640
instance this was salesforce live agent

00:50:49,119 --> 00:50:51,760
that's the live chat feature that we

00:50:50,640 --> 00:50:54,079
have on our website

00:50:51,760 --> 00:50:55,760
um for whatever reason this iteration of

00:50:54,079 --> 00:50:56,880
it was especially egregious taking

00:50:55,760 --> 00:50:58,640
longer than a second

00:50:56,880 --> 00:51:00,160
um you'll see there's other versions of

00:50:58,640 --> 00:51:01,599
it that they changed host names for that

00:51:00,160 --> 00:51:04,160
got a little bit better

00:51:01,599 --> 00:51:05,280
over time um but that particular

00:51:04,160 --> 00:51:07,280
instance was

00:51:05,280 --> 00:51:08,400
a bit long loading but scrolling down

00:51:07,280 --> 00:51:10,000
you can essentially see

00:51:08,400 --> 00:51:12,160
every single hostname that was ever

00:51:10,000 --> 00:51:15,280
connected to over that period of time

00:51:12,160 --> 00:51:18,160
so while it's not a gantt chart of the

00:51:15,280 --> 00:51:19,920
averages um for the cumulative run it

00:51:18,160 --> 00:51:21,680
does give you some insight into the

00:51:19,920 --> 00:51:23,440
averages of the cumulative run

00:51:21,680 --> 00:51:25,359
the the gantt chart specifically

00:51:23,440 --> 00:51:27,119
currently only work

00:51:25,359 --> 00:51:29,440
for an individual run if that makes

00:51:27,119 --> 00:51:29,440
sense

00:51:30,880 --> 00:51:38,480
um might have time for one more

00:51:34,960 --> 00:51:41,520
um all right actually i think that's

00:51:38,480 --> 00:51:43,680
it um so anybody have any

00:51:41,520 --> 00:51:44,960
final questions um anything i didn't get

00:51:43,680 --> 00:51:46,640
to otherwise

00:51:44,960 --> 00:51:48,559
um thank you so much for your time i

00:51:46,640 --> 00:51:51,280
appreciate it and i appreciate

00:51:48,559 --> 00:51:52,160
the dribble association having me and

00:51:51,280 --> 00:51:56,000
putting faith in

00:51:52,160 --> 00:51:56,000
my ability to present i appreciate it

00:51:57,119 --> 00:52:03,440
all right thank you all so much

00:51:58,400 --> 00:52:03,440

YouTube URL: https://www.youtube.com/watch?v=Z3T-2Lnzn8E


