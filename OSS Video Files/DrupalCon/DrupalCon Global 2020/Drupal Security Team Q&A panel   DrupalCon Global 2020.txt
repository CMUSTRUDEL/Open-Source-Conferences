Title: Drupal Security Team Q&A panel   DrupalCon Global 2020
Publication date: 2020-08-25
Playlist: DrupalCon Global 2020
Description: 
	The Drupal Security team will present topics from their work promoting a more secure Drupal project.
Captions: 
	00:00:00,000 --> 00:00:04,160
about one minute it's now it's now

00:00:02,480 --> 00:00:06,480
welcome everybody so this is the

00:00:04,160 --> 00:00:07,440
drupal security team panel uh we're

00:00:06,480 --> 00:00:09,760
gonna go through some

00:00:07,440 --> 00:00:10,639
slides there's a bunch of hidden slides

00:00:09,760 --> 00:00:12,639
in here

00:00:10,639 --> 00:00:14,639
uh and we're looking for folks to ask

00:00:12,639 --> 00:00:16,240
questions as we go we will actually stop

00:00:14,639 --> 00:00:17,680
and try to answer questions as we go

00:00:16,240 --> 00:00:19,520
depending on what they are

00:00:17,680 --> 00:00:21,680
if we're going to cover them later on we

00:00:19,520 --> 00:00:22,880
will hold until we cover them in the

00:00:21,680 --> 00:00:25,199
slides

00:00:22,880 --> 00:00:26,000
um drupal security team here the

00:00:25,199 --> 00:00:28,240
pictures

00:00:26,000 --> 00:00:29,039
this may be no actually i think this is

00:00:28,240 --> 00:00:31,679
still accurate

00:00:29,039 --> 00:00:32,719
um a couple people it's like nice and

00:00:31,679 --> 00:00:35,040
grew and stuff

00:00:32,719 --> 00:00:36,399
oh it is missing drew okay so it is

00:00:35,040 --> 00:00:37,840
missing yeah it was i

00:00:36,399 --> 00:00:40,160
actually i tried to fix that earlier

00:00:37,840 --> 00:00:42,079
today and got stuck in photoshop world

00:00:40,160 --> 00:00:43,360
uh and my graphic designer was not

00:00:42,079 --> 00:00:46,800
available so

00:00:43,360 --> 00:00:48,160
sorry drew if you're in the audience um

00:00:46,800 --> 00:00:49,920
i'd like to welcome everybody to this

00:00:48,160 --> 00:00:51,440
session for those of you who are not

00:00:49,920 --> 00:00:52,800
familiar the security team is a

00:00:51,440 --> 00:00:55,280
volunteer group

00:00:52,800 --> 00:00:56,160
uh across the secur across the drupal

00:00:55,280 --> 00:01:00,000
project

00:00:56,160 --> 00:01:02,239
and we work uh towards uh

00:01:00,000 --> 00:01:04,559
focusing on notification education and

00:01:02,239 --> 00:01:06,720
security within the project itself

00:01:04,559 --> 00:01:08,720
um as i said earlier today this is

00:01:06,720 --> 00:01:10,640
earlier as in one minute ago

00:01:08,720 --> 00:01:12,159
this is gonna be an interactive session

00:01:10,640 --> 00:01:14,000
and so i'd like folks to introduce

00:01:12,159 --> 00:01:15,119
themselves quickly with their favorite

00:01:14,000 --> 00:01:16,720
type of cookie

00:01:15,119 --> 00:01:18,880
so if you're attending the session go

00:01:16,720 --> 00:01:20,479
ahead and just give us your favorite

00:01:18,880 --> 00:01:22,159
type of cookie in the chat

00:01:20,479 --> 00:01:23,680
if you're a panelist in this session

00:01:22,159 --> 00:01:25,439
we're going to go around and tell each

00:01:23,680 --> 00:01:26,560
other our names and our favorite types

00:01:25,439 --> 00:01:28,880
of cookies

00:01:26,560 --> 00:01:30,400
i'm michael uh and my favorite type of

00:01:28,880 --> 00:01:33,520
cookie is a warm

00:01:30,400 --> 00:01:36,079
chocolate chip cookie great let's go to

00:01:33,520 --> 00:01:36,079
you next

00:01:36,159 --> 00:01:39,439
peanut butter with a chocolate in the

00:01:38,799 --> 00:01:41,280
middle

00:01:39,439 --> 00:01:42,960
um warm preferable maybe with a little

00:01:41,280 --> 00:01:47,520
bit of salt on it and

00:01:42,960 --> 00:01:50,880
uh greg can addison aka griggles

00:01:47,520 --> 00:01:53,920
and let's jump over to angie hi

00:01:50,880 --> 00:01:55,840
angie webchick byron um kovid19 is

00:01:53,920 --> 00:01:58,880
giving me nice flowing locks

00:01:55,840 --> 00:02:00,240
um my favorite cookie is the girl scout

00:01:58,880 --> 00:02:02,880
cookie called a samoa

00:02:00,240 --> 00:02:04,159
and it is like a bunch of uh coconut

00:02:02,880 --> 00:02:07,040
drizzled in caramel

00:02:04,159 --> 00:02:07,520
drizzled in chocolate and it is awesome

00:02:07,040 --> 00:02:10,879
let's

00:02:07,520 --> 00:02:14,480
jump to jess my name is jess

00:02:10,879 --> 00:02:16,400
i'm xjman.org and i

00:02:14,480 --> 00:02:18,000
i have difficulty picking a favorite

00:02:16,400 --> 00:02:20,560
cookie but i would say that my

00:02:18,000 --> 00:02:22,879
my default cookie is like the perfect

00:02:20,560 --> 00:02:26,080
chocolate chip cookie not too crunchy

00:02:22,879 --> 00:02:30,000
but freshly made um and also

00:02:26,080 --> 00:02:32,480
a fan of peanut butter chocolate chip

00:02:30,000 --> 00:02:33,040
and then there's also like a lemon

00:02:32,480 --> 00:02:35,200
ginger

00:02:33,040 --> 00:02:36,879
cookie i make with tofu that's a very

00:02:35,200 --> 00:02:38,239
summery wonderful thing so there's those

00:02:36,879 --> 00:02:40,560
three

00:02:38,239 --> 00:02:42,000
i don't make the cookie a lot that has

00:02:40,560 --> 00:02:43,519
the lemon and the ginger

00:02:42,000 --> 00:02:44,959
so chocolate chips are the are the

00:02:43,519 --> 00:02:46,560
defaults you could get nice chocolate

00:02:44,959 --> 00:02:48,879
chips from anyone that was a very long

00:02:46,560 --> 00:02:52,480
way to answer single questions

00:02:48,879 --> 00:02:56,319
neil let's jump to you uh

00:02:52,480 --> 00:03:00,640
the ultron i am dramadrupal.org

00:02:56,319 --> 00:03:00,640
uh chocolate chip sam

00:03:00,959 --> 00:03:05,599
tea cakes which are also the same as

00:03:02,720 --> 00:03:07,599
mexican wedding cakes i think

00:03:05,599 --> 00:03:09,680
and a guest joining us for some of our

00:03:07,599 --> 00:03:10,879
content today is tim from the d.a

00:03:09,680 --> 00:03:12,959
tim why don't you go ahead and give us

00:03:10,879 --> 00:03:15,440
your favorite type of cookie my favorite

00:03:12,959 --> 00:03:18,560
type of cookie is the kind that is

00:03:15,440 --> 00:03:20,480
on the outside of an ice cream sandwich

00:03:18,560 --> 00:03:22,159
um it almost doesn't matter what kind

00:03:20,480 --> 00:03:26,000
but uh but change my answer to your

00:03:22,159 --> 00:03:26,000
answer that sounds amazing yes

00:03:26,080 --> 00:03:32,720
okay and and uh uh yes

00:03:29,599 --> 00:03:34,080
and okay so moving along with slides um

00:03:32,720 --> 00:03:35,760
we often get questions as to what the

00:03:34,080 --> 00:03:38,319
security team does

00:03:35,760 --> 00:03:40,000
um and so i put together a nice bulleted

00:03:38,319 --> 00:03:43,519
list of what we do

00:03:40,000 --> 00:03:44,720
um we we go through and we keep track of

00:03:43,519 --> 00:03:46,400
all the security

00:03:44,720 --> 00:03:47,840
issues reported in the project and we

00:03:46,400 --> 00:03:49,680
work them through our process which i'll

00:03:47,840 --> 00:03:51,680
get into in a second

00:03:49,680 --> 00:03:53,519
we push along fixes to the

00:03:51,680 --> 00:03:55,280
vulnerabilities and that terminology may

00:03:53,519 --> 00:03:57,120
sound weird because we don't actually

00:03:55,280 --> 00:03:59,360
write most the time we don't actually

00:03:57,120 --> 00:04:01,360
write code that fixes the problem

00:03:59,360 --> 00:04:02,720
we help others in coordinating writing

00:04:01,360 --> 00:04:05,760
upset code

00:04:02,720 --> 00:04:07,040
um we will help with security-related

00:04:05,760 --> 00:04:09,760
drupal initiatives

00:04:07,040 --> 00:04:11,439
uh we'll coordinate with other open

00:04:09,760 --> 00:04:12,879
source security teams um

00:04:11,439 --> 00:04:15,760
we'll get into this a little bit later

00:04:12,879 --> 00:04:17,680
on but uh in the world composer we are

00:04:15,760 --> 00:04:19,199
tightly integrated with other projects

00:04:17,680 --> 00:04:21,280
and so we often have to coordinate with

00:04:19,199 --> 00:04:22,160
other security teams in getting things

00:04:21,280 --> 00:04:24,560
fixed

00:04:22,160 --> 00:04:26,240
uh we read and respond to messages sent

00:04:24,560 --> 00:04:28,639
to security drupal.org

00:04:26,240 --> 00:04:30,880
we track the trends of hacc sites and we

00:04:28,639 --> 00:04:34,400
really like community education like

00:04:30,880 --> 00:04:35,919
this session here um

00:04:34,400 --> 00:04:38,400
in this bank there's some things we

00:04:35,919 --> 00:04:41,440
don't actually do the security team as

00:04:38,400 --> 00:04:44,240
its charge does not actively

00:04:41,440 --> 00:04:46,160
um go out and find vulnerabilities now

00:04:44,240 --> 00:04:49,440
there are members of our team

00:04:46,160 --> 00:04:51,199
uh sam here for example who does

00:04:49,440 --> 00:04:52,479
who does do that and he's gonna talk a

00:04:51,199 --> 00:04:55,440
little bit about that later on

00:04:52,479 --> 00:04:57,120
but we as a team don't you know don't go

00:04:55,440 --> 00:04:58,240
through and you know wake up one morning

00:04:57,120 --> 00:05:00,000
and assign you know

00:04:58,240 --> 00:05:02,880
modules to people to go and review line

00:05:00,000 --> 00:05:03,919
by line uh we don't review maintainers

00:05:02,880 --> 00:05:07,600
code

00:05:03,919 --> 00:05:10,560
and we don't help fixed hacked sites

00:05:07,600 --> 00:05:12,320
um now there are lots of team members on

00:05:10,560 --> 00:05:14,560
the team who do these things but as an

00:05:12,320 --> 00:05:17,840
overall team we don't actually

00:05:14,560 --> 00:05:22,240
uh take the uh and uh

00:05:17,840 --> 00:05:24,639
take take these tasks on um

00:05:22,240 --> 00:05:26,560
our workflow looks something like this

00:05:24,639 --> 00:05:28,080
uh i'm not great at making these charts

00:05:26,560 --> 00:05:30,000
but typically we'll get a vulnerability

00:05:28,080 --> 00:05:32,320
that gets reported to the team

00:05:30,000 --> 00:05:33,440
uh and we do a first pass at validating

00:05:32,320 --> 00:05:36,880
that vulnerability

00:05:33,440 --> 00:05:40,080
um does it seem to be a

00:05:36,880 --> 00:05:41,600
a valid vulnerability uh

00:05:40,080 --> 00:05:43,759
do we have the steps needed from the

00:05:41,600 --> 00:05:45,759
reporter to reproduce it um

00:05:43,759 --> 00:05:47,360
is it something that we you know that we

00:05:45,759 --> 00:05:49,360
are gonna fix so you know we'll often

00:05:47,360 --> 00:05:52,000
get a vulnerability reported that an

00:05:49,360 --> 00:05:54,240
admin can use the full html component

00:05:52,000 --> 00:05:55,680
to run javascript on a site well they're

00:05:54,240 --> 00:05:57,039
an admin user so that's not

00:05:55,680 --> 00:05:58,880
really a vulnerability from our

00:05:57,039 --> 00:06:00,960
perspective so we

00:05:58,880 --> 00:06:02,080
we're not going to fix that once we

00:06:00,960 --> 00:06:05,759
validate the

00:06:02,080 --> 00:06:07,680
the vulnerability is a valid uh

00:06:05,759 --> 00:06:09,120
vulnerability or seems to be a valid

00:06:07,680 --> 00:06:10,240
issue we will invite the maintainer to

00:06:09,120 --> 00:06:12,639
join us

00:06:10,240 --> 00:06:13,919
um and the maintainer and the security

00:06:12,639 --> 00:06:15,600
team and often the reporter of the

00:06:13,919 --> 00:06:16,240
vulnerability kind of work through you

00:06:15,600 --> 00:06:17,919
know

00:06:16,240 --> 00:06:19,520
is this really still really a valid

00:06:17,919 --> 00:06:21,440
vulnerability if it is

00:06:19,520 --> 00:06:23,440
we'll work to fix it we'll get a patch

00:06:21,440 --> 00:06:25,680
ready to go we'll write the security

00:06:23,440 --> 00:06:27,520
advisory which you get on wednesdays

00:06:25,680 --> 00:06:29,120
and we'll work towards releasing that

00:06:27,520 --> 00:06:30,639
vulnerability uh

00:06:29,120 --> 00:06:32,160
sometimes the maintainer comes in and

00:06:30,639 --> 00:06:32,960
says actually no you know this isn't

00:06:32,160 --> 00:06:35,680
valid

00:06:32,960 --> 00:06:37,680
uh in which case we you know maybe it's

00:06:35,680 --> 00:06:38,479
a public issue because it's a security

00:06:37,680 --> 00:06:41,520
hardening and not

00:06:38,479 --> 00:06:43,520
actually vulnerability um

00:06:41,520 --> 00:06:45,199
the output of most of this work you will

00:06:43,520 --> 00:06:48,800
see on wednesdays

00:06:45,199 --> 00:06:51,440
um on wednesdays we for the most part

00:06:48,800 --> 00:06:53,280
release these security advisories and

00:06:51,440 --> 00:06:54,720
publish the patches and send emails and

00:06:53,280 --> 00:06:58,080
twitter announcements

00:06:54,720 --> 00:07:00,000
uh and so this occurs wednesday at about

00:06:58,080 --> 00:07:02,800
4pm utc

00:07:00,000 --> 00:07:04,319
um and for core is uh the third

00:07:02,800 --> 00:07:06,240
wednesday of the month

00:07:04,319 --> 00:07:08,400
um and we try not to do contribute

00:07:06,240 --> 00:07:10,720
releases within that window

00:07:08,400 --> 00:07:12,479
um sometimes they happen but as a goal

00:07:10,720 --> 00:07:16,240
we try not to do that

00:07:12,479 --> 00:07:17,039
um so how do you know about what we're

00:07:16,240 --> 00:07:19,520
doing well

00:07:17,039 --> 00:07:20,720
there's a couple places to follow us um

00:07:19,520 --> 00:07:24,319
twitter

00:07:20,720 --> 00:07:26,479
email uh if you like rss feeds or you

00:07:24,319 --> 00:07:26,720
like reading web pages which most people

00:07:26,479 --> 00:07:28,080
i

00:07:26,720 --> 00:07:30,479
assume in this group are familiar with

00:07:28,080 --> 00:07:32,160
these terminologies um and then drupal

00:07:30,479 --> 00:07:33,039
slack there's a security questions

00:07:32,160 --> 00:07:35,919
channel where we

00:07:33,039 --> 00:07:37,520
you know sometimes in real time-ish uh

00:07:35,919 --> 00:07:40,160
great we'll post updates as to what's

00:07:37,520 --> 00:07:40,160
happening there

00:07:41,520 --> 00:07:45,919
so what other things do we get involved

00:07:44,800 --> 00:07:47,840
in within the community

00:07:45,919 --> 00:07:49,840
um we are involved in the drupal 7

00:07:47,840 --> 00:07:51,840
extended support we're also involved in

00:07:49,840 --> 00:07:53,599
the drupal 6 version of that program

00:07:51,840 --> 00:07:55,039
drupal stuart and a little bit with the

00:07:53,599 --> 00:07:56,479
automatic updates initiative and i'm

00:07:55,039 --> 00:07:57,840
going to talk a little about these and

00:07:56,479 --> 00:07:58,960
then i'm going to stop talking let other

00:07:57,840 --> 00:08:01,120
people talk

00:07:58,960 --> 00:08:03,520
um greg do you want to talk about the

00:08:01,120 --> 00:08:03,520
end of life

00:08:05,520 --> 00:08:10,240
maybe sure so this has been a fairly

00:08:08,960 --> 00:08:13,440
long time coming

00:08:10,240 --> 00:08:16,400
drupal 7 has been around and powers many

00:08:13,440 --> 00:08:16,879
many many sites um but it's about time

00:08:16,400 --> 00:08:19,520
for

00:08:16,879 --> 00:08:20,240
it to uh to reach its so-called end of

00:08:19,520 --> 00:08:23,759
life

00:08:20,240 --> 00:08:25,680
um and uh the

00:08:23,759 --> 00:08:27,120
you know we talk about how at that point

00:08:25,680 --> 00:08:29,039
it's more likely

00:08:27,120 --> 00:08:30,639
that zero day exploits will get

00:08:29,039 --> 00:08:32,719
published to the public rather than

00:08:30,639 --> 00:08:35,120
getting reported directly to the team

00:08:32,719 --> 00:08:37,440
um there there's a process that has been

00:08:35,120 --> 00:08:40,240
refined now over several core

00:08:37,440 --> 00:08:42,080
uh end of life cycles where all of the

00:08:40,240 --> 00:08:43,599
contributed projects so modules themes

00:08:42,080 --> 00:08:45,600
things like that that have a drupal 7

00:08:43,599 --> 00:08:47,600
release those will get

00:08:45,600 --> 00:08:49,440
like marked as not being supported but

00:08:47,600 --> 00:08:51,600
the individual maintainer can go back

00:08:49,440 --> 00:08:53,279
and add support for drupal 7 if they so

00:08:51,600 --> 00:08:55,040
choose this is just sort of

00:08:53,279 --> 00:08:56,240
to require them to actively indicate

00:08:55,040 --> 00:08:58,959
that they are still supporting the

00:08:56,240 --> 00:09:00,880
drupal 7 version of it

00:08:58,959 --> 00:09:02,320
it is of course you know a best practice

00:09:00,880 --> 00:09:04,480
and it's encouraged to stay

00:09:02,320 --> 00:09:06,240
on the most recent supported release of

00:09:04,480 --> 00:09:09,120
software so people should be moving

00:09:06,240 --> 00:09:09,920
forward with uh drupal 8 or of course

00:09:09,120 --> 00:09:10,959
drupal 9

00:09:09,920 --> 00:09:13,120
is really where folks should be

00:09:10,959 --> 00:09:16,720
targeting their migration at this point

00:09:13,120 --> 00:09:19,120
um we had a plan to

00:09:16,720 --> 00:09:20,000
end of life drupal 7 at one point and

00:09:19,120 --> 00:09:23,279
that's now been

00:09:20,000 --> 00:09:25,760
extended to november of 2022

00:09:23,279 --> 00:09:26,560
yay hopefully that's mostly good news to

00:09:25,760 --> 00:09:29,279
folks um

00:09:26,560 --> 00:09:29,760
this just sort of made sense as a lot of

00:09:29,279 --> 00:09:32,959
different

00:09:29,760 --> 00:09:36,160
uh people's focuses have been changed

00:09:32,959 --> 00:09:37,760
in 2020 as budgets have been cut

00:09:36,160 --> 00:09:39,200
and people don't necessarily have the

00:09:37,760 --> 00:09:41,519
budget to pay for a

00:09:39,200 --> 00:09:42,720
big migration all the way to drupal 8 or

00:09:41,519 --> 00:09:44,560
9 at this point

00:09:42,720 --> 00:09:48,080
it seemed like a prudent thing to help

00:09:44,560 --> 00:09:52,880
provide extra support to the community

00:09:48,080 --> 00:09:52,880
throughout 2022 instead of just 2021.

00:09:53,519 --> 00:09:58,000
so one of the things that will happen in

00:09:55,440 --> 00:09:59,920
november of 2022 is we'll have extended

00:09:58,000 --> 00:10:00,399
support vendors that will come in and

00:09:59,920 --> 00:10:02,079
actually

00:10:00,399 --> 00:10:04,000
take up the mantle of providing security

00:10:02,079 --> 00:10:05,519
updates for sites who are not able to

00:10:04,000 --> 00:10:05,920
move or are still in the process of

00:10:05,519 --> 00:10:09,760
moving

00:10:05,920 --> 00:10:10,560
to um drupal 9 at that point or drupal

00:10:09,760 --> 00:10:12,640
10.

00:10:10,560 --> 00:10:14,560
um i've gone through and got rid of all

00:10:12,640 --> 00:10:16,720
the clean urls that you are in the

00:10:14,560 --> 00:10:18,399
in this presentation um because it's

00:10:16,720 --> 00:10:20,399
easier to type in a number than it is to

00:10:18,399 --> 00:10:23,040
type a really long url

00:10:20,399 --> 00:10:24,720
so i i've turned off clean urls for this

00:10:23,040 --> 00:10:26,880
presentation so if you're interested in

00:10:24,720 --> 00:10:28,720
becoming a vendor here's the url

00:10:26,880 --> 00:10:30,320
uh there's an application process to go

00:10:28,720 --> 00:10:32,000
through so far

00:10:30,320 --> 00:10:33,839
our vendors that have been accepted into

00:10:32,000 --> 00:10:36,640
this are located here

00:10:33,839 --> 00:10:38,480
um i don't think i've forgotten anybody

00:10:36,640 --> 00:10:42,160
but if i did i will update this

00:10:38,480 --> 00:10:44,160
uh and so

00:10:42,160 --> 00:10:45,519
out of curiosity from the chat i'm

00:10:44,160 --> 00:10:47,360
interested to know has anybody

00:10:45,519 --> 00:10:48,720
ever had a site compromise that's

00:10:47,360 --> 00:10:52,160
question one

00:10:48,720 --> 00:10:53,839
uh and two if so do you know exactly how

00:10:52,160 --> 00:10:55,839
it got compromised

00:10:53,839 --> 00:10:57,839
um and so if you want if you're if

00:10:55,839 --> 00:10:58,800
you're willing to share that information

00:10:57,839 --> 00:11:00,880
with this group

00:10:58,800 --> 00:11:02,240
it doesn't have to be a drupal site any

00:11:00,880 --> 00:11:04,959
site out there counts

00:11:02,240 --> 00:11:06,160
have you ever had a site compromised and

00:11:04,959 --> 00:11:08,880
if so do you know

00:11:06,160 --> 00:11:09,279
how it got compromised and so far we

00:11:08,880 --> 00:11:13,040
have

00:11:09,279 --> 00:11:16,560
one answer i can say yes and yes

00:11:13,040 --> 00:11:17,680
to both of those questions um

00:11:16,560 --> 00:11:20,000
angie have you ever had a site

00:11:17,680 --> 00:11:25,519
compromised

00:11:20,000 --> 00:11:28,640
my own yeah your house got compromised

00:11:25,519 --> 00:11:31,680
do you know how it got compromised uh

00:11:28,640 --> 00:11:33,440
not entirely um basically had to burn

00:11:31,680 --> 00:11:33,839
the whole thing down and start all over

00:11:33,440 --> 00:11:36,160
again

00:11:33,839 --> 00:11:37,519
yeah it was one of those very sad

00:11:36,160 --> 00:11:39,279
situations where it's like i realize

00:11:37,519 --> 00:11:41,120
that's a problem but i got drupal stuff

00:11:39,279 --> 00:11:42,399
to handle over here and you know it kind

00:11:41,120 --> 00:11:44,320
of sat there longer than i met

00:11:42,399 --> 00:11:46,320
so it's really interesting i can totally

00:11:44,320 --> 00:11:48,320
tell there's a delay on the video based

00:11:46,320 --> 00:11:51,440
on the chat responses

00:11:48,320 --> 00:11:53,360
um which is kind of cool um so it's

00:11:51,440 --> 00:11:55,440
interesting to see how we have

00:11:53,360 --> 00:11:57,519
sites that get compromised and for the

00:11:55,440 --> 00:11:59,920
most part sites get compromised through

00:11:57,519 --> 00:12:03,120
some type of vulnerability

00:11:59,920 --> 00:12:03,920
um and a vulnerability is effectively a

00:12:03,120 --> 00:12:06,959
weakness

00:12:03,920 --> 00:12:09,519
in your code in your configuration in

00:12:06,959 --> 00:12:12,639
your site setup in your password

00:12:09,519 --> 00:12:14,639
that an attacker can leverage um

00:12:12,639 --> 00:12:16,000
and so as as the security team this is

00:12:14,639 --> 00:12:16,800
what we're interested in we're

00:12:16,000 --> 00:12:19,200
interested in

00:12:16,800 --> 00:12:20,320
these vulnerabilities these weaknesses

00:12:19,200 --> 00:12:24,160
within

00:12:20,320 --> 00:12:26,000
um within drupal itself and also within

00:12:24,160 --> 00:12:27,519
the drupal ecosystem and as i'm looking

00:12:26,000 --> 00:12:28,480
through the chat and trying to talk at

00:12:27,519 --> 00:12:31,839
the same time

00:12:28,480 --> 00:12:33,839
i'm seeing the word outdated show up

00:12:31,839 --> 00:12:34,880
a lot and you know this is interesting

00:12:33,839 --> 00:12:37,600
because you know

00:12:34,880 --> 00:12:38,560
the security team uh publishes these

00:12:37,600 --> 00:12:40,560
announcements on

00:12:38,560 --> 00:12:42,240
wednesdays and we really want folks to

00:12:40,560 --> 00:12:43,680
update their sites because the easiest

00:12:42,240 --> 00:12:46,399
way for an attacker

00:12:43,680 --> 00:12:49,040
to compromise your site is to use a

00:12:46,399 --> 00:12:52,160
vulnerability with known weaknesses

00:12:49,040 --> 00:12:54,079
um and so you know here's

00:12:52,160 --> 00:12:56,079
here's a list of vulnerabilities that

00:12:54,079 --> 00:12:58,800
are out there uh this is not an

00:12:56,079 --> 00:13:00,959
exhaustive list by any means there's a

00:12:58,800 --> 00:13:03,519
wonderful presentation that peter does

00:13:00,959 --> 00:13:06,079
called cracking drupal that goes through

00:13:03,519 --> 00:13:08,480
in detail shows these uh you know

00:13:06,079 --> 00:13:10,880
exactly how they're how they're attacked

00:13:08,480 --> 00:13:12,800
and what you can do to prevent it um but

00:13:10,880 --> 00:13:15,839
you know for the most part

00:13:12,800 --> 00:13:18,079
uh you know attackers attack sites based

00:13:15,839 --> 00:13:19,839
on two factors they really really want

00:13:18,079 --> 00:13:22,000
into that specific site for whatever

00:13:19,839 --> 00:13:25,680
reason so they are doing a targeted

00:13:22,000 --> 00:13:27,920
attack against a specific site or

00:13:25,680 --> 00:13:29,920
they want into a lot of sites as many

00:13:27,920 --> 00:13:30,880
sites as they can get to put spam links

00:13:29,920 --> 00:13:34,079
or to search for

00:13:30,880 --> 00:13:37,120
uh bitcoin and in those instances

00:13:34,079 --> 00:13:39,279
they will actually go after weak

00:13:37,120 --> 00:13:40,160
um you know mostly sites that have not

00:13:39,279 --> 00:13:41,600
been updated

00:13:40,160 --> 00:13:43,920
uh because they're easy you know they're

00:13:41,600 --> 00:13:46,160
easy targets um

00:13:43,920 --> 00:13:48,000
one of the things i'd like to take a a

00:13:46,160 --> 00:13:49,920
side loop for though is how does how

00:13:48,000 --> 00:13:53,360
does a security researcher actually

00:13:49,920 --> 00:13:53,920
find vulnerabilities um and so you know

00:13:53,360 --> 00:13:55,839
if

00:13:53,920 --> 00:13:57,760
it's a if it's you know if wordpress

00:13:55,839 --> 00:13:59,839
fixes something hypothetically

00:13:57,760 --> 00:14:01,360
and you don't update your wordpress site

00:13:59,839 --> 00:14:02,160
then an attacker can really easily

00:14:01,360 --> 00:14:04,000
figure out well

00:14:02,160 --> 00:14:05,360
is this site vulnerable to that attack

00:14:04,000 --> 00:14:07,279
but how do you find

00:14:05,360 --> 00:14:08,560
new vulnerabilities that people haven't

00:14:07,279 --> 00:14:10,000
quite discovered yet

00:14:08,560 --> 00:14:11,920
and so i'm going to turn this over to

00:14:10,000 --> 00:14:14,560
sam for a second and sam's going to talk

00:14:11,920 --> 00:14:17,760
about how he as a security researcher

00:14:14,560 --> 00:14:19,040
finds uh security vulnerabilities and so

00:14:17,760 --> 00:14:21,360
this is sam

00:14:19,040 --> 00:14:21,360
um

00:14:22,079 --> 00:14:26,639
thanks mike um yeah so i'm on the drupal

00:14:25,839 --> 00:14:28,880
security team

00:14:26,639 --> 00:14:30,079
and i'm also a independent security

00:14:28,880 --> 00:14:33,760
researcher

00:14:30,079 --> 00:14:35,920
um i've been using drupal for like

00:14:33,760 --> 00:14:37,440
seven years or something like that and

00:14:35,920 --> 00:14:40,720
started doing security research

00:14:37,440 --> 00:14:41,440
maybe five years ago and have found a

00:14:40,720 --> 00:14:43,120
lot of

00:14:41,440 --> 00:14:45,360
bugs so this is just some of them but

00:14:43,120 --> 00:14:47,760
you can see that i have a lot in core

00:14:45,360 --> 00:14:51,440
um and i'm going to tell you how i did

00:14:47,760 --> 00:14:51,440
it so we can go to the next slide

00:14:51,680 --> 00:14:55,199
yeah so basically at a really high level

00:14:53,519 --> 00:14:57,920
what security research is about

00:14:55,199 --> 00:14:59,440
is about identifying bugs they're not

00:14:57,920 --> 00:15:01,279
necessarily security related but

00:14:59,440 --> 00:15:02,240
basically finding some entry point or

00:15:01,279 --> 00:15:04,160
bug

00:15:02,240 --> 00:15:06,160
most of the time this is associated with

00:15:04,160 --> 00:15:07,519
user input like a form or a query

00:15:06,160 --> 00:15:08,959
parameter

00:15:07,519 --> 00:15:12,160
then you use that bug to trigger an

00:15:08,959 --> 00:15:13,680
exploit and then a lot of times you stop

00:15:12,160 --> 00:15:15,360
and you go back and you figure out how

00:15:13,680 --> 00:15:17,440
it happened so it's a lot easier

00:15:15,360 --> 00:15:18,959
to like export a site than understand

00:15:17,440 --> 00:15:21,279
how you're able to

00:15:18,959 --> 00:15:23,120
so you go back you figure it out and

00:15:21,279 --> 00:15:24,320
then usually you make some report if

00:15:23,120 --> 00:15:25,760
you're doing this professionally it

00:15:24,320 --> 00:15:26,000
looks really good if you're not it might

00:15:25,760 --> 00:15:28,160
be

00:15:26,000 --> 00:15:29,360
like a step-by-step guide on how to

00:15:28,160 --> 00:15:31,600
export a site

00:15:29,360 --> 00:15:33,120
and then yeah then you submit it to

00:15:31,600 --> 00:15:37,040
someone

00:15:33,120 --> 00:15:40,000
let's go to the next slide uh

00:15:37,040 --> 00:15:42,320
cool so yeah we skipped the automated

00:15:40,000 --> 00:15:45,519
slide right

00:15:42,320 --> 00:15:48,639
uh i moved it okay that's fine so

00:15:45,519 --> 00:15:51,519
the way i do security research is like

00:15:48,639 --> 00:15:53,440
really old school or bad i'm not sure

00:15:51,519 --> 00:15:55,440
how to describe it but basically i do

00:15:53,440 --> 00:15:57,759
security research really manually

00:15:55,440 --> 00:15:59,600
because drupal's open source and because

00:15:57,759 --> 00:16:02,639
i can read the source code

00:15:59,600 --> 00:16:03,440
i use like local searching tools like

00:16:02,639 --> 00:16:05,360
grep

00:16:03,440 --> 00:16:07,440
to identify strings that could be

00:16:05,360 --> 00:16:09,440
related to security vulnerabilities

00:16:07,440 --> 00:16:10,880
and then i literally read all the code

00:16:09,440 --> 00:16:12,480
associated with it

00:16:10,880 --> 00:16:14,639
so that means like if rep finds

00:16:12,480 --> 00:16:15,440
something i read the file that result is

00:16:14,639 --> 00:16:17,600
in

00:16:15,440 --> 00:16:18,720
i read all the code that calls that and

00:16:17,600 --> 00:16:20,959
i keep going back

00:16:18,720 --> 00:16:22,399
until i reach user input or i reach some

00:16:20,959 --> 00:16:24,079
place that i understand

00:16:22,399 --> 00:16:25,519
and then i actually start the process of

00:16:24,079 --> 00:16:30,959
trying to exploit it

00:16:25,519 --> 00:16:30,959
um yep so you can go to the next slide

00:16:31,680 --> 00:16:36,480
so just for an example of this um

00:16:34,880 --> 00:16:38,800
drupal has like really really good

00:16:36,480 --> 00:16:40,160
cross-site refresh request forgery

00:16:38,800 --> 00:16:42,240
yep can you can you tell us what

00:16:40,160 --> 00:16:45,360
crosstalk requests forgeries are

00:16:42,240 --> 00:16:46,079
yeah so a csrf or cross-site request

00:16:45,360 --> 00:16:49,519
forgery

00:16:46,079 --> 00:16:52,880
is basically when another site

00:16:49,519 --> 00:16:54,800
um is able to execute a request to

00:16:52,880 --> 00:16:56,160
your site your drupal site on the behalf

00:16:54,800 --> 00:16:58,160
of another user

00:16:56,160 --> 00:17:00,639
uh so this usually happens in the form

00:16:58,160 --> 00:17:02,480
of like a literal like cross-site ajax

00:17:00,639 --> 00:17:04,319
request it can happen through form

00:17:02,480 --> 00:17:07,280
requests it can happen through like

00:17:04,319 --> 00:17:08,559
an image tag that loads a path on your

00:17:07,280 --> 00:17:10,720
site that triggers something

00:17:08,559 --> 00:17:12,880
but the point is they're using an admin

00:17:10,720 --> 00:17:14,400
or a higher privileged user session

00:17:12,880 --> 00:17:15,919
to do something on your site that they

00:17:14,400 --> 00:17:18,480
weren't supposed to do

00:17:15,919 --> 00:17:19,839
um so drupal's really good at protecting

00:17:18,480 --> 00:17:21,520
this so every form

00:17:19,839 --> 00:17:23,679
has something called a form token which

00:17:21,520 --> 00:17:25,919
is a way of preventing csrf

00:17:23,679 --> 00:17:27,039
um so pretty much every form you build

00:17:25,919 --> 00:17:29,440
in drupal

00:17:27,039 --> 00:17:31,280
is already protected which is great um

00:17:29,440 --> 00:17:32,000
but that means that every form you built

00:17:31,280 --> 00:17:33,840
yourself

00:17:32,000 --> 00:17:35,760
or every like route that you've made

00:17:33,840 --> 00:17:37,280
let's say you made like a custom api or

00:17:35,760 --> 00:17:38,640
something that looks like rest but it

00:17:37,280 --> 00:17:40,640
isn't rest

00:17:38,640 --> 00:17:43,520
is actually vulnerable this unless you

00:17:40,640 --> 00:17:45,679
explicitly use a csrf token

00:17:43,520 --> 00:17:47,120
so you can do this by adding a certain

00:17:45,679 --> 00:17:49,840
thing to your routing file

00:17:47,120 --> 00:17:50,880
you can also use the csrf apis yourself

00:17:49,840 --> 00:17:53,440
manually

00:17:50,880 --> 00:17:56,000
but a lot of people don't and so the

00:17:53,440 --> 00:17:58,559
example command you can use to find this

00:17:56,000 --> 00:17:59,520
is literally look at every routing file

00:17:58,559 --> 00:18:02,000
and then grep

00:17:59,520 --> 00:18:04,160
for something that seems vulnerable i

00:18:02,000 --> 00:18:07,440
know that's hard but maybe like admin

00:18:04,160 --> 00:18:09,200
edit delete something like that and then

00:18:07,440 --> 00:18:11,120
this grep command i'm looking at the

00:18:09,200 --> 00:18:12,880
five lines after the path

00:18:11,120 --> 00:18:14,240
this is like really lazy but basically

00:18:12,880 --> 00:18:15,440
it's going to show me a part of the

00:18:14,240 --> 00:18:18,080
route definition

00:18:15,440 --> 00:18:20,320
and if i don't see csrf token there i'm

00:18:18,080 --> 00:18:22,160
going to start diving in

00:18:20,320 --> 00:18:26,080
so again this seems like really manual

00:18:22,160 --> 00:18:26,080
but this is a really good way to find

00:18:26,840 --> 00:18:30,880
vulnerabilities

00:18:28,000 --> 00:18:30,880
can go to the next slide

00:18:32,480 --> 00:18:38,320
okay cool so uh yep

00:18:35,840 --> 00:18:40,080
rough side scripting yeah so xss or

00:18:38,320 --> 00:18:44,000
cross-site scripting

00:18:40,080 --> 00:18:45,840
is basically uh the

00:18:44,000 --> 00:18:47,600
a way that an attacker executes a

00:18:45,840 --> 00:18:50,240
javascript code on your site

00:18:47,600 --> 00:18:51,919
again on the behalf of another user so

00:18:50,240 --> 00:18:52,559
typical exploit will do something like

00:18:51,919 --> 00:18:55,120
use the

00:18:52,559 --> 00:18:57,520
current user's cookie or just current

00:18:55,120 --> 00:18:59,120
session to like make malicious requests

00:18:57,520 --> 00:19:01,120
so the end result might look a lot like

00:18:59,120 --> 00:19:02,640
a csrf but um

00:19:01,120 --> 00:19:04,480
that's typical you can also use it to

00:19:02,640 --> 00:19:05,200
phish by just like showing content they

00:19:04,480 --> 00:19:08,720
didn't expect

00:19:05,200 --> 00:19:10,480
or tricky them to enter a password um

00:19:08,720 --> 00:19:12,400
so drupal protects against this really

00:19:10,480 --> 00:19:13,360
well like there's xss filtering

00:19:12,400 --> 00:19:15,360
everywhere

00:19:13,360 --> 00:19:17,120
and with twig there was a huge amount of

00:19:15,360 --> 00:19:17,919
protection because we enabled auto

00:19:17,120 --> 00:19:19,840
escape

00:19:17,919 --> 00:19:21,760
so this means that even if you put user

00:19:19,840 --> 00:19:24,160
input like raw into twig

00:19:21,760 --> 00:19:25,280
it's safe i mean don't do that but

00:19:24,160 --> 00:19:28,480
without thinking a bit

00:19:25,280 --> 00:19:30,320
but yeah it's safe um now there's a way

00:19:28,480 --> 00:19:32,400
to get around it and it's the raw filter

00:19:30,320 --> 00:19:33,919
so the reason you would use raw is if

00:19:32,400 --> 00:19:36,320
let's say

00:19:33,919 --> 00:19:37,679
you had like an html string that you

00:19:36,320 --> 00:19:39,280
were passing to twig

00:19:37,679 --> 00:19:41,200
and you wanted to render that string

00:19:39,280 --> 00:19:43,280
exactly maybe you know it's trusted or

00:19:41,200 --> 00:19:45,919
an admin entered it something like that

00:19:43,280 --> 00:19:47,679
another reason you use raw is because

00:19:45,919 --> 00:19:49,039
you're like a lazy developer and you

00:19:47,679 --> 00:19:52,320
were trying to work around a bug

00:19:49,039 --> 00:19:54,400
with like double escaped ampersands or

00:19:52,320 --> 00:19:56,080
you just don't understand xss filtering

00:19:54,400 --> 00:19:59,039
and you just want to output

00:19:56,080 --> 00:20:00,320
user html so knowing this you can do a

00:19:59,039 --> 00:20:02,320
similar sort of search

00:20:00,320 --> 00:20:04,400
with bash so you can find every toy

00:20:02,320 --> 00:20:05,200
template and then i'm piping that to

00:20:04,400 --> 00:20:07,039
grep

00:20:05,200 --> 00:20:08,559
and basically looking for any instance

00:20:07,039 --> 00:20:10,880
of raw in a template

00:20:08,559 --> 00:20:12,159
um this regex is like maybe too

00:20:10,880 --> 00:20:13,600
complicated you could literally just

00:20:12,159 --> 00:20:15,919
look for the string raw

00:20:13,600 --> 00:20:17,120
and probably find results and then from

00:20:15,919 --> 00:20:19,840
that

00:20:17,120 --> 00:20:21,679
look at every one and then go back again

00:20:19,840 --> 00:20:22,720
be like okay here's this variable i know

00:20:21,679 --> 00:20:25,039
it's unsafe

00:20:22,720 --> 00:20:28,080
but can users actually use that can they

00:20:25,039 --> 00:20:28,080
actually like exploit it

00:20:28,159 --> 00:20:32,400
and go to the next one so yeah you may

00:20:30,480 --> 00:20:35,440
be like looking at this and wondering

00:20:32,400 --> 00:20:37,280
why like a robot can't do this job um

00:20:35,440 --> 00:20:40,000
i think it probably can in a lot of

00:20:37,280 --> 00:20:43,280
cases but static analysis is really hard

00:20:40,000 --> 00:20:44,880
and drupal is so proprietary i know

00:20:43,280 --> 00:20:46,240
people use that as the antithesis of

00:20:44,880 --> 00:20:48,400
open source but it is there's so many

00:20:46,240 --> 00:20:50,799
like special drupalisms we use

00:20:48,400 --> 00:20:52,159
that static analysis can't really like

00:20:50,799 --> 00:20:54,960
look at a route

00:20:52,159 --> 00:20:56,720
feel like it's dangerous and then say it

00:20:54,960 --> 00:20:57,360
doesn't have a csrf token that's like a

00:20:56,720 --> 00:21:00,799
human

00:20:57,360 --> 00:21:02,320
or like an artificial intelligence job

00:21:00,799 --> 00:21:04,320
and another reason you can't automate it

00:21:02,320 --> 00:21:05,679
well is that it requires a lot of entry

00:21:04,320 --> 00:21:06,880
points you know if you have a bug and a

00:21:05,679 --> 00:21:09,280
twig template

00:21:06,880 --> 00:21:11,360
you can't go up a call chain from that

00:21:09,280 --> 00:21:13,520
uh twig template isn't php code

00:21:11,360 --> 00:21:15,520
so you have to actually see where is it

00:21:13,520 --> 00:21:16,480
used which could be in a million places

00:21:15,520 --> 00:21:17,760
in drupal

00:21:16,480 --> 00:21:19,760
and then you have to see how the

00:21:17,760 --> 00:21:21,120
variables get there so it's actually

00:21:19,760 --> 00:21:23,039
very difficult to automate

00:21:21,120 --> 00:21:24,559
this kind of research and that's why it

00:21:23,039 --> 00:21:27,919
works that's why

00:21:24,559 --> 00:21:27,919
i'm able to find stuff so

00:21:28,159 --> 00:21:32,799
so basically um if you can use an

00:21:31,840 --> 00:21:35,760
automated solution

00:21:32,799 --> 00:21:37,200
do it uh there's tools like burp suite

00:21:35,760 --> 00:21:39,520
sonar cube

00:21:37,200 --> 00:21:40,559
um there's static analysis tools like

00:21:39,520 --> 00:21:43,039
yeah here we go

00:21:40,559 --> 00:21:44,000
like the coder module you can also use

00:21:43,039 --> 00:21:46,720
phpcs

00:21:44,000 --> 00:21:47,440
with a ton of security extensions these

00:21:46,720 --> 00:21:50,159
are all great

00:21:47,440 --> 00:21:51,679
especially as part of like your sdlc or

00:21:50,159 --> 00:21:53,360
that just means like the life cycle of

00:21:51,679 --> 00:21:57,919
how you review software

00:21:53,360 --> 00:21:59,760
um but uh you know if everyone did that

00:21:57,919 --> 00:22:01,760
um and no one did this sort of manual

00:21:59,760 --> 00:22:03,280
work no one would find these bugs

00:22:01,760 --> 00:22:04,880
like the reason i'm able to find the

00:22:03,280 --> 00:22:07,919
bugs that other people don't

00:22:04,880 --> 00:22:11,039
is because automated scans can't find

00:22:07,919 --> 00:22:13,760
everything so um so yeah

00:22:11,039 --> 00:22:14,320
uh and then so i kind of skipped ahead

00:22:13,760 --> 00:22:15,840
but

00:22:14,320 --> 00:22:17,440
a huge thing to do beyond using

00:22:15,840 --> 00:22:18,960
automated solutions is

00:22:17,440 --> 00:22:20,799
make this a part of your pr approval

00:22:18,960 --> 00:22:22,320
process you probably already approved

00:22:20,799 --> 00:22:24,559
based on

00:22:22,320 --> 00:22:26,080
uh visual regression testing maybe

00:22:24,559 --> 00:22:28,799
automated tests

00:22:26,080 --> 00:22:30,080
maybe performance budgets um just add

00:22:28,799 --> 00:22:32,000
security in there it doesn't have to be

00:22:30,080 --> 00:22:34,320
a ci job it just has to be like a senior

00:22:32,000 --> 00:22:36,080
dev reading no junior devs code

00:22:34,320 --> 00:22:38,000
um and don't be afraid to manually

00:22:36,080 --> 00:22:38,880
review code you know if phpcs says

00:22:38,000 --> 00:22:40,880
you're okay

00:22:38,880 --> 00:22:42,480
and coder says you're okay don't like

00:22:40,880 --> 00:22:45,280
fully trust that you know you need

00:22:42,480 --> 00:22:48,159
another like human step in your process

00:22:45,280 --> 00:22:49,440
um yeah like i said before if we all did

00:22:48,159 --> 00:22:51,120
research the same way

00:22:49,440 --> 00:22:53,120
like in the right way in the automated

00:22:51,120 --> 00:22:55,039
way with fancy tools like

00:22:53,120 --> 00:22:56,640
research would be very boring it would

00:22:55,039 --> 00:22:58,400
mean that everyone had the same results

00:22:56,640 --> 00:23:00,960
and we don't find anything else

00:22:58,400 --> 00:23:03,760
so be creative and try different things

00:23:00,960 --> 00:23:03,760
when you do research

00:23:04,480 --> 00:23:09,200
also review the automated tools results

00:23:07,919 --> 00:23:11,039
because there will be a lot of

00:23:09,200 --> 00:23:13,200
false positives in there the security

00:23:11,039 --> 00:23:14,880
team gets a lot of reports that are just

00:23:13,200 --> 00:23:17,039
someone's output out of an automated

00:23:14,880 --> 00:23:18,480
tool and they didn't actually verify

00:23:17,039 --> 00:23:22,159
that the suspicious thing that they

00:23:18,480 --> 00:23:25,120
found is an actual vulnerability so

00:23:22,159 --> 00:23:27,360
as some said human important even when

00:23:25,120 --> 00:23:29,600
you're using the automated

00:23:27,360 --> 00:23:33,679
and we're happy to get those reports but

00:23:29,600 --> 00:23:33,679
we also will not triage them for you

00:23:34,320 --> 00:23:37,919
so one as i mentioned earlier one of the

00:23:36,320 --> 00:23:40,640
ways to prevent

00:23:37,919 --> 00:23:41,840
compromised sites is to update your site

00:23:40,640 --> 00:23:43,360
and drupal's been working on

00:23:41,840 --> 00:23:47,039
auto updates initiative there is a

00:23:43,360 --> 00:23:51,440
session about that uh

00:23:47,039 --> 00:23:54,480
tomorrow from 15 to 1 utc

00:23:51,440 --> 00:23:55,760
i can't do the conversions in my head

00:23:54,480 --> 00:23:57,360
but if you pull up the drupal con

00:23:55,760 --> 00:23:58,880
schedule and give it your time sheet or

00:23:57,360 --> 00:23:59,840
give it your time zone it will convert

00:23:58,880 --> 00:24:04,080
it for you

00:23:59,840 --> 00:24:05,679
here in north america it's tonight this

00:24:04,080 --> 00:24:08,559
evening not tomorrow

00:24:05,679 --> 00:24:09,200
um if you're in europe it's tomorrow or

00:24:08,559 --> 00:24:12,240
if you're in

00:24:09,200 --> 00:24:16,320
um india australia etc

00:24:12,240 --> 00:24:18,000
thank you uh for the conversions um

00:24:16,320 --> 00:24:20,320
you know one of the things that comes up

00:24:18,000 --> 00:24:21,120
a lot with security is this term best

00:24:20,320 --> 00:24:23,919
practices

00:24:21,120 --> 00:24:25,600
and we've got a bunch of slides on these

00:24:23,919 --> 00:24:28,880
um i'm not going to go through them in

00:24:25,600 --> 00:24:30,559
two like deep comments here

00:24:28,880 --> 00:24:32,159
um but you know i often link this to

00:24:30,559 --> 00:24:34,000
brushing your teeth most people brush

00:24:32,159 --> 00:24:35,919
their teeth daily

00:24:34,000 --> 00:24:37,279
most people spend two minutes a day

00:24:35,919 --> 00:24:41,039
maybe four maybe eight

00:24:37,279 --> 00:24:42,320
brushing their teeth um you can't decide

00:24:41,039 --> 00:24:44,240
that you're gonna you know

00:24:42,320 --> 00:24:46,960
what is it four minutes a day brushing

00:24:44,240 --> 00:24:48,080
your teeth there's 30 days in a month

00:24:46,960 --> 00:24:49,600
you can't decide you're going to brush

00:24:48,080 --> 00:24:51,039
your teeth on the last day of the month

00:24:49,600 --> 00:24:52,640
you have to do it daily otherwise it

00:24:51,039 --> 00:24:54,320
doesn't work and if you skip doing it

00:24:52,640 --> 00:24:55,840
for a year

00:24:54,320 --> 00:24:57,360
you're going to have to pay a lot more

00:24:55,840 --> 00:25:01,039
both in time and also in

00:24:57,360 --> 00:25:02,799
literal pain um and so

00:25:01,039 --> 00:25:04,880
you know brushing your teeth is a best

00:25:02,799 --> 00:25:06,240
practice we all agree that we should all

00:25:04,880 --> 00:25:08,400
brush our teeth

00:25:06,240 --> 00:25:10,320
um security is kind of the same way you

00:25:08,400 --> 00:25:10,799
can't just have a checklist and be done

00:25:10,320 --> 00:25:13,520
it is an

00:25:10,799 --> 00:25:16,159
ongoing process as sam alluded to you

00:25:13,520 --> 00:25:21,440
know needs to be part of your uh

00:25:16,159 --> 00:25:21,440
um of your uh of your process

00:25:26,840 --> 00:25:31,520
andrea

00:25:28,159 --> 00:25:34,559
i just thought i'd stop working

00:25:31,520 --> 00:25:34,559
sorry to disturb you

00:25:36,960 --> 00:25:43,840
hello i'm not sure how you got into this

00:25:41,919 --> 00:25:47,200
um

00:25:43,840 --> 00:25:49,760
okay i'll keep going now let me

00:25:47,200 --> 00:25:49,760
distribute

00:25:51,120 --> 00:25:53,440
okay

00:26:07,120 --> 00:26:11,840
okay um so just keeping in mind

00:26:10,159 --> 00:26:14,000
uh everyone's got to keep working at it

00:26:11,840 --> 00:26:16,159
it's not a one-time task

00:26:14,000 --> 00:26:17,760
uh which is why i'm hoping everybody

00:26:16,159 --> 00:26:20,799
brushes their teeth

00:26:17,760 --> 00:26:22,960
uh some of the things yeah i don't know

00:26:20,799 --> 00:26:24,640
tim tim at the da if you can look into

00:26:22,960 --> 00:26:26,880
this this would be helpful

00:26:24,640 --> 00:26:26,880
uh

00:26:28,799 --> 00:26:32,720
i'll look into why people aren't

00:26:30,080 --> 00:26:34,640
brushing their teeth immediately

00:26:32,720 --> 00:26:37,200
no i get you it appears the room isn't

00:26:34,640 --> 00:26:37,200
moderated

00:26:37,440 --> 00:26:40,720
um so one of the things that we've been

00:26:39,440 --> 00:26:44,480
working on is a

00:26:40,720 --> 00:26:46,320
service from the uh drupal association

00:26:44,480 --> 00:26:47,360
and the security team that kind of help

00:26:46,320 --> 00:26:50,559
with this

00:26:47,360 --> 00:26:53,600
gap between when

00:26:50,559 --> 00:26:55,520
uh an individual um

00:26:53,600 --> 00:26:57,840
or when a site when an update gets

00:26:55,520 --> 00:27:00,000
patched and when you as an individual

00:26:57,840 --> 00:27:02,080
site owner can patch your site

00:27:00,000 --> 00:27:04,320
uh and we've called this drupal stuart

00:27:02,080 --> 00:27:06,240
and it is a web application firewall

00:27:04,320 --> 00:27:09,440
that will protect you

00:27:06,240 --> 00:27:12,640
um from

00:27:09,440 --> 00:27:14,320
uh from certain vulnerabilities before

00:27:12,640 --> 00:27:15,360
the vulnerability is disclosed and the

00:27:14,320 --> 00:27:18,000
update is released

00:27:15,360 --> 00:27:19,440
and afterwards um so there's there's

00:27:18,000 --> 00:27:21,840
this gap that exists

00:27:19,440 --> 00:27:22,640
between the security team at wednesday

00:27:21,840 --> 00:27:26,000
around noon

00:27:22,640 --> 00:27:27,919
eastern time publishes a patch and you

00:27:26,000 --> 00:27:31,200
have the ability to download that patch

00:27:27,919 --> 00:27:31,200
and apply it to your site

00:27:32,480 --> 00:27:36,399
that is uh that's what this program is

00:27:34,880 --> 00:27:40,080
designed to fix

00:27:36,399 --> 00:27:40,640
uh and so you know what we've got here

00:27:40,080 --> 00:27:43,679
is this

00:27:40,640 --> 00:27:46,720
you know this is this is a middle uh

00:27:43,679 --> 00:27:49,440
middle tier that will

00:27:46,720 --> 00:27:50,159
uh that is i'm sorry there's background

00:27:49,440 --> 00:27:53,039
noise now

00:27:50,159 --> 00:27:53,520
andrew would you mind dropping off the

00:27:53,039 --> 00:27:55,200
uh

00:27:53,520 --> 00:27:57,840
the panel because i think you're putting

00:27:55,200 --> 00:28:01,200
background noise into the chat

00:27:57,840 --> 00:28:03,520
thank you there we go um

00:28:01,200 --> 00:28:05,600
so you know this only works with highly

00:28:03,520 --> 00:28:06,080
critical core vulnerabilities we may

00:28:05,600 --> 00:28:08,159
expand

00:28:06,080 --> 00:28:09,840
into the future and there are some types

00:28:08,159 --> 00:28:11,039
of vulnerabilities that you can't

00:28:09,840 --> 00:28:14,880
necessarily

00:28:11,039 --> 00:28:16,399
protect against with a waffle um

00:28:14,880 --> 00:28:18,080
and so what does this happen how does

00:28:16,399 --> 00:28:20,799
this actually work well

00:28:18,080 --> 00:28:21,840
you know like in the original diagram i

00:28:20,799 --> 00:28:24,320
showed

00:28:21,840 --> 00:28:25,919
the security team gets a vulnerability

00:28:24,320 --> 00:28:28,880
reported to us and we've identified

00:28:25,919 --> 00:28:31,279
as a highly critical vulnerability so

00:28:28,880 --> 00:28:34,960
for example uh

00:28:31,279 --> 00:28:36,399
uh in 2018 uh the second vulnerability

00:28:34,960 --> 00:28:37,679
of the year would have

00:28:36,399 --> 00:28:39,760
qualified for this it was a highly

00:28:37,679 --> 00:28:43,120
critical vulnerability and it was

00:28:39,760 --> 00:28:44,480
mass exploitable um security team

00:28:43,120 --> 00:28:46,720
determines whether or not we can

00:28:44,480 --> 00:28:48,240
actually mitigate this within a laugh

00:28:46,720 --> 00:28:52,159
rule set

00:28:48,240 --> 00:28:54,720
and if it can be uh we will publish a

00:28:52,159 --> 00:28:56,320
psa and in the psa we will actually very

00:28:54,720 --> 00:28:58,880
clearly indicate that this

00:28:56,320 --> 00:29:00,480
is going to be covered by drupal stuart

00:28:58,880 --> 00:29:02,640
uh when the security team is going to

00:29:00,480 --> 00:29:03,200
release a highly critical vulnerability

00:29:02,640 --> 00:29:05,279
we do

00:29:03,200 --> 00:29:06,480
publish you know a public service

00:29:05,279 --> 00:29:09,440
announcement

00:29:06,480 --> 00:29:10,880
a few days in advance of releasing the

00:29:09,440 --> 00:29:12,480
vulnerability to let people know that

00:29:10,880 --> 00:29:14,320
you know this is special you you need to

00:29:12,480 --> 00:29:15,520
pay attention here and so in that public

00:29:14,320 --> 00:29:17,039
service announcement

00:29:15,520 --> 00:29:20,080
we would include if this would be

00:29:17,039 --> 00:29:22,799
mitigated by drupal steward

00:29:20,080 --> 00:29:24,320
um drupal stewart waffles will get

00:29:22,799 --> 00:29:26,320
communicated to our partners and we'll

00:29:24,320 --> 00:29:28,080
put them on in monitor only mode so what

00:29:26,320 --> 00:29:29,360
that does is they're they're there but

00:29:28,080 --> 00:29:30,720
we want to see if there's any false

00:29:29,360 --> 00:29:34,559
positives

00:29:30,720 --> 00:29:36,880
um once we review those logs we make

00:29:34,559 --> 00:29:38,799
refinements to the rules

00:29:36,880 --> 00:29:41,200
uh are there false positives do we

00:29:38,799 --> 00:29:42,640
changes or is there a zero day exploit

00:29:41,200 --> 00:29:43,440
of this vulnerability that can also

00:29:42,640 --> 00:29:46,000
happen

00:29:43,440 --> 00:29:47,760
and then finally right before we release

00:29:46,000 --> 00:29:50,399
the final patch we'll turn the

00:29:47,760 --> 00:29:51,440
rules to be in enforcing mode mitigating

00:29:50,399 --> 00:29:53,600
vulnerability

00:29:51,440 --> 00:29:55,840
what this does is it lets you as a site

00:29:53,600 --> 00:29:56,640
owner have a little bit more time

00:29:55,840 --> 00:29:59,520
between

00:29:56,640 --> 00:30:00,080
patching your site uh and the release of

00:29:59,520 --> 00:30:02,559
that

00:30:00,080 --> 00:30:03,520
vulnerability so you know if noon

00:30:02,559 --> 00:30:06,960
eastern is not

00:30:03,520 --> 00:30:08,480
a um you know a good time for you to be

00:30:06,960 --> 00:30:09,120
up and making changes to your drupal

00:30:08,480 --> 00:30:10,399
site

00:30:09,120 --> 00:30:12,320
then this would give you a little bit

00:30:10,399 --> 00:30:14,559
more time

00:30:12,320 --> 00:30:16,799
uh we're thinking about three tiers of

00:30:14,559 --> 00:30:16,799
this

00:30:16,960 --> 00:30:21,440
and the idea behind this is we want to

00:30:19,520 --> 00:30:23,440
make sure there's a community level

00:30:21,440 --> 00:30:24,720
tier for this so that it's not just for

00:30:23,440 --> 00:30:26,159
all enterprise

00:30:24,720 --> 00:30:28,000
customers because it sounds like a very

00:30:26,159 --> 00:30:29,440
enterprising service we are having a

00:30:28,000 --> 00:30:30,640
community level tier

00:30:29,440 --> 00:30:33,120
we're going to put it we're going to

00:30:30,640 --> 00:30:34,320
price that as close to cost as we can

00:30:33,120 --> 00:30:36,000
get it

00:30:34,320 --> 00:30:37,360
there's a standard tier for people who

00:30:36,000 --> 00:30:38,640
are you know self-hosted and then

00:30:37,360 --> 00:30:40,399
there's um

00:30:38,640 --> 00:30:42,640
our enterprise tier which is going to

00:30:40,399 --> 00:30:44,640
have you know the aqueous and pantheons

00:30:42,640 --> 00:30:47,200
are the founding partners of this

00:30:44,640 --> 00:30:51,840
uh tim do you have anything else to say

00:30:47,200 --> 00:30:51,840
about this before i move on

00:30:52,240 --> 00:30:55,520
yeah the only other thing i'll say is

00:30:53,760 --> 00:30:57,200
that we're going to be following up

00:30:55,520 --> 00:30:58,880
uh after the conference with more

00:30:57,200 --> 00:30:59,600
information so there'll be a blog post

00:30:58,880 --> 00:31:02,080
that has

00:30:59,600 --> 00:31:03,279
some more details about this again the

00:31:02,080 --> 00:31:06,720
primary goal here

00:31:03,279 --> 00:31:08,559
is that we want to protect sites from

00:31:06,720 --> 00:31:10,000
having to do that urgent update protect

00:31:08,559 --> 00:31:11,600
people from falling through the cracks

00:31:10,000 --> 00:31:12,240
especially if they're international or

00:31:11,600 --> 00:31:13,519
on these large

00:31:12,240 --> 00:31:15,279
teams that have change management

00:31:13,519 --> 00:31:17,039
processes that don't let them

00:31:15,279 --> 00:31:19,039
sit in the security slack channel to

00:31:17,039 --> 00:31:21,039
wait until the patch is released right

00:31:19,039 --> 00:31:22,480
we really want to save people that time

00:31:21,039 --> 00:31:24,159
and we wanted to help the small site's

00:31:22,480 --> 00:31:25,200
owners too so we're really focusing on

00:31:24,159 --> 00:31:26,640
that cost element

00:31:25,200 --> 00:31:28,880
there'll be more information soon so

00:31:26,640 --> 00:31:30,320
just keep an eye out on the drupal blog

00:31:28,880 --> 00:31:32,799
and tim while you're here would you mind

00:31:30,320 --> 00:31:35,039
taking this slide as well

00:31:32,799 --> 00:31:36,799
oh yeah so certainly people are going to

00:31:35,039 --> 00:31:38,159
ask you know why isn't this a free

00:31:36,799 --> 00:31:39,360
service why isn't this something that we

00:31:38,159 --> 00:31:42,000
can just do

00:31:39,360 --> 00:31:42,960
uh for anybody and just make it part of

00:31:42,000 --> 00:31:45,120
what we do

00:31:42,960 --> 00:31:47,039
the issue is you know when it comes to

00:31:45,120 --> 00:31:48,799
open source and uh supporting open

00:31:47,039 --> 00:31:50,240
source programs the code of course is

00:31:48,799 --> 00:31:51,840
free that's part of the principle of

00:31:50,240 --> 00:31:53,919
free and open source software

00:31:51,840 --> 00:31:55,919
but services are not free to a

00:31:53,919 --> 00:31:57,039
non-profit association trying to provide

00:31:55,919 --> 00:31:59,039
them right it's like

00:31:57,039 --> 00:32:01,279
even like our drupal ci testing service

00:31:59,039 --> 00:32:03,039
which we don't charge

00:32:01,279 --> 00:32:05,279
costs us many thousands of dollars a

00:32:03,039 --> 00:32:06,640
month in this particular case because

00:32:05,279 --> 00:32:08,720
this is an enhancement

00:32:06,640 --> 00:32:10,240
um you can get the patch the normal way

00:32:08,720 --> 00:32:11,919
you can take advantage of the automatic

00:32:10,240 --> 00:32:12,480
data updates initiative once it comes

00:32:11,919 --> 00:32:14,000
around

00:32:12,480 --> 00:32:15,600
but this will give you extra peace of

00:32:14,000 --> 00:32:17,760
mind and

00:32:15,600 --> 00:32:19,120
to pay for that service we're asking for

00:32:17,760 --> 00:32:21,039
a small fee

00:32:19,120 --> 00:32:22,880
to try and cover that and additional

00:32:21,039 --> 00:32:24,399
proceeds particularly from larger sites

00:32:22,880 --> 00:32:25,200
using the service or from our founding

00:32:24,399 --> 00:32:26,960
partners

00:32:25,200 --> 00:32:29,440
are being used to help fund drupal

00:32:26,960 --> 00:32:31,039
association and security team programs

00:32:29,440 --> 00:32:32,960
so we really want to make sure

00:32:31,039 --> 00:32:34,960
that that helps both diversify our

00:32:32,960 --> 00:32:35,600
revenue and enhance what this team can

00:32:34,960 --> 00:32:37,760
do

00:32:35,600 --> 00:32:38,880
so that's why we're charging hopefully

00:32:37,760 --> 00:32:40,799
not too much as

00:32:38,880 --> 00:32:42,240
as close as we can to what's affordable

00:32:40,799 --> 00:32:45,440
for folks out there

00:32:42,240 --> 00:32:47,279
but it will be a small amount

00:32:45,440 --> 00:32:48,960
um and you know the reason why we can't

00:32:47,279 --> 00:32:51,840
share these laugh rules with everybody

00:32:48,960 --> 00:32:52,240
and other vendors who are not uh in the

00:32:51,840 --> 00:32:53,519
in

00:32:52,240 --> 00:32:55,360
the circle of trust we've kind of

00:32:53,519 --> 00:32:56,000
established here is the last afros

00:32:55,360 --> 00:32:58,320
effectively

00:32:56,000 --> 00:33:00,320
disclose the vulnerability in a very

00:32:58,320 --> 00:33:01,039
easy to attack manner so if someone like

00:33:00,320 --> 00:33:03,679
sam would

00:33:01,039 --> 00:33:05,039
hold the laugh rules we had written it

00:33:03,679 --> 00:33:05,600
would save them a lot of time with

00:33:05,039 --> 00:33:07,919
repping

00:33:05,600 --> 00:33:11,919
uh through source code someone with sam

00:33:07,919 --> 00:33:14,159
who was a little less white hat correct

00:33:11,919 --> 00:33:14,159
um

00:33:16,480 --> 00:33:19,919
yeah save your sight from sam no i'm

00:33:18,559 --> 00:33:24,320
just kidding

00:33:19,919 --> 00:33:25,760
oh next year's hat um uh

00:33:24,320 --> 00:33:28,399
if you're interested in learning more

00:33:25,760 --> 00:33:29,200
either as a site owner or as a potential

00:33:28,399 --> 00:33:32,559
partner

00:33:29,200 --> 00:33:35,679
we have a drupal.org url again with the

00:33:32,559 --> 00:33:37,440
clean urls um

00:33:35,679 --> 00:33:39,039
our clean urls disabled there's also a

00:33:37,440 --> 00:33:39,519
slack channel where we are discussing

00:33:39,039 --> 00:33:41,600
this

00:33:39,519 --> 00:33:42,880
uh so the drupal stuart slack channel is

00:33:41,600 --> 00:33:46,159
a great question

00:33:42,880 --> 00:33:49,200
uh questions for a great great place

00:33:46,159 --> 00:33:53,440
for questions on this topic

00:33:49,200 --> 00:33:53,440
um next jess

00:33:54,399 --> 00:33:58,159
yeah um so by the way there's a co i

00:33:56,880 --> 00:33:59,760
just want to address something that with

00:33:58,159 --> 00:34:02,640
my comment earlier there's a suggestion

00:33:59,760 --> 00:34:04,480
in the chat to uh stop using white hat

00:34:02,640 --> 00:34:05,679
and black hat i absolutely agree

00:34:04,480 --> 00:34:08,159
i should have thought of that before i

00:34:05,679 --> 00:34:09,760
said it i apologize um i think

00:34:08,159 --> 00:34:11,919
i think that we have alternate

00:34:09,760 --> 00:34:12,159
suggestions somewhere but i'll look into

00:34:11,919 --> 00:34:13,839
it

00:34:12,159 --> 00:34:15,040
um but not right now because i'm going

00:34:13,839 --> 00:34:15,679
to tell you a little bit about drupal

00:34:15,040 --> 00:34:18,159
composer

00:34:15,679 --> 00:34:21,839
and the php release cycle just go to the

00:34:18,159 --> 00:34:21,839
next slide michael

00:34:23,040 --> 00:34:26,320
so yeah my name is jess but i'm better

00:34:25,200 --> 00:34:29,280
known as xjm

00:34:26,320 --> 00:34:29,919
on drupal.org and i'm part of a team of

00:34:29,280 --> 00:34:32,240
about

00:34:29,919 --> 00:34:34,240
10 drupal core committers who can review

00:34:32,240 --> 00:34:36,000
and commit everyone's patches

00:34:34,240 --> 00:34:37,760
we're the only ones that can accept

00:34:36,000 --> 00:34:39,359
those changes into the core project so

00:34:37,760 --> 00:34:40,079
that anyone in the world can contribute

00:34:39,359 --> 00:34:41,919
a patch

00:34:40,079 --> 00:34:43,119
review a patch decide the patch is ready

00:34:41,919 --> 00:34:45,040
for commit but only

00:34:43,119 --> 00:34:46,720
the 10 of us can actually merge the

00:34:45,040 --> 00:34:48,480
change in decor

00:34:46,720 --> 00:34:50,079
and within that team i'm one of the two

00:34:48,480 --> 00:34:51,520
active release managers

00:34:50,079 --> 00:34:53,520
uh the release managers are the people

00:34:51,520 --> 00:34:54,720
who actually tagged the drupal 8 and 9

00:34:53,520 --> 00:34:56,000
sites that you can install in your

00:34:54,720 --> 00:34:57,440
drupal 789

00:34:56,000 --> 00:34:59,440
sites i should say that you can install

00:34:57,440 --> 00:35:00,320
on your sites each month as well as set

00:34:59,440 --> 00:35:02,079
schedules

00:35:00,320 --> 00:35:03,839
evaluate the potential disruption of

00:35:02,079 --> 00:35:06,160
changes and so on

00:35:03,839 --> 00:35:08,000
i've helped coordinate all the security

00:35:06,160 --> 00:35:08,320
and minor releases we've had for drupal

00:35:08,000 --> 00:35:09,760
00:35:08,320 --> 00:35:12,000
and 9 to date as well as the major

00:35:09,760 --> 00:35:13,760
release of drupal 9 and i've personally

00:35:12,000 --> 00:35:15,119
rolled a majority of the security

00:35:13,760 --> 00:35:16,800
releases myself

00:35:15,119 --> 00:35:18,240
so when your drupal site says security

00:35:16,800 --> 00:35:20,240
update required you can probably kind of

00:35:18,240 --> 00:35:22,079
think of that as me saying hi

00:35:20,240 --> 00:35:23,839
um i work for aquia and i'm part of the

00:35:22,079 --> 00:35:26,160
awesome drupal acceleration team there

00:35:23,839 --> 00:35:28,839
so i get paid it's my full-time job

00:35:26,160 --> 00:35:30,160
uh which is fantastic and i love doing

00:35:28,839 --> 00:35:32,480
it

00:35:30,160 --> 00:35:33,839
uh next slide thanks so back in the day

00:35:32,480 --> 00:35:36,320
uh drupal didn't really have any

00:35:33,839 --> 00:35:39,119
external dependencies other than jquery

00:35:36,320 --> 00:35:39,520
but in 2015 we released drupal 8 which

00:35:39,119 --> 00:35:41,119
is

00:35:39,520 --> 00:35:43,359
basically a complete refactoring of

00:35:41,119 --> 00:35:45,200
drupal it also sets the precedence that

00:35:43,359 --> 00:35:46,480
we're using for drupal 9 and drupal 10

00:35:45,200 --> 00:35:48,320
and so forth

00:35:46,480 --> 00:35:50,000
and drupal 8 relies on a number of

00:35:48,320 --> 00:35:52,480
external composer dependencies

00:35:50,000 --> 00:35:54,400
including symphony twig and a few zen

00:35:52,480 --> 00:35:55,200
framework libraries among many other

00:35:54,400 --> 00:35:56,960
things

00:35:55,200 --> 00:35:58,880
so the diagram on the slide is an

00:35:56,960 --> 00:36:01,119
illustration that cash williams made of

00:35:58,880 --> 00:36:02,560
drupal 8 7's composer dependencies

00:36:01,119 --> 00:36:04,480
i haven't had a chance to update this

00:36:02,560 --> 00:36:06,320
yet um but we have changed and added a

00:36:04,480 --> 00:36:11,040
few more dependencies in drupal

00:36:06,320 --> 00:36:13,839
899 now um next slide

00:36:11,040 --> 00:36:15,680
so uh we coordinate uh you know all

00:36:13,839 --> 00:36:17,119
those dependencies on the screen when we

00:36:15,680 --> 00:36:19,440
issue security releases

00:36:17,119 --> 00:36:21,599
we issue security releases not only for

00:36:19,440 --> 00:36:23,359
vulnerabilities in drupal's own code

00:36:21,599 --> 00:36:26,240
but for vulnerabilities in our upstream

00:36:23,359 --> 00:36:27,920
dependencies that triple exercises so

00:36:26,240 --> 00:36:30,079
if um for example there's a

00:36:27,920 --> 00:36:31,599
vulnerability in symphony that causes a

00:36:30,079 --> 00:36:33,280
vulnerability and drupal

00:36:31,599 --> 00:36:35,920
we coordinate with simply to make sure

00:36:33,280 --> 00:36:37,440
that we release on the same day

00:36:35,920 --> 00:36:39,200
within a few hours of each other so

00:36:37,440 --> 00:36:41,440
there isn't a delay where

00:36:39,200 --> 00:36:42,800
people can find out about the symphony

00:36:41,440 --> 00:36:44,560
vulnerability think hey

00:36:42,800 --> 00:36:46,000
drupal uses symphony and try to hack it

00:36:44,560 --> 00:36:47,520
themselves

00:36:46,000 --> 00:36:49,119
and this coordination with other open

00:36:47,520 --> 00:36:50,640
source projects has actually become a

00:36:49,119 --> 00:36:52,160
significant part of the work the

00:36:50,640 --> 00:36:54,880
security team does

00:36:52,160 --> 00:36:56,400
for core among all the drupal 8 and 9

00:36:54,880 --> 00:36:58,560
security releases we've had

00:36:56,400 --> 00:37:01,119
for date one in three of them have

00:36:58,560 --> 00:37:02,480
involved our upstream dependencies

00:37:01,119 --> 00:37:04,240
now this doesn't mean that our

00:37:02,480 --> 00:37:05,200
dependencies are any less secure than

00:37:04,240 --> 00:37:06,960
triple core

00:37:05,200 --> 00:37:08,640
theoretically all other things being

00:37:06,960 --> 00:37:10,480
equal we'd have the same number of

00:37:08,640 --> 00:37:11,839
vulnerabilities even if we were the ones

00:37:10,480 --> 00:37:13,520
maintaining the code

00:37:11,839 --> 00:37:15,680
but it does have an impact on how we

00:37:13,520 --> 00:37:17,520
schedule and ship releases

00:37:15,680 --> 00:37:19,440
when we have a vulnerability in our own

00:37:17,520 --> 00:37:21,359
code we can review and test the fix

00:37:19,440 --> 00:37:23,280
ourselves in advance of disclosure

00:37:21,359 --> 00:37:25,040
we can bundle multiple security releases

00:37:23,280 --> 00:37:26,000
in a single release so that site owners

00:37:25,040 --> 00:37:29,760
don't have to apply

00:37:26,000 --> 00:37:29,760
so many updates month after month

00:37:30,240 --> 00:37:33,680
um so now i'm going to share a little

00:37:31,599 --> 00:37:36,880
story of a problem we ran into as a

00:37:33,680 --> 00:37:38,640
result of adopting those dependencies um

00:37:36,880 --> 00:37:40,160
and this is sort of a specific example

00:37:38,640 --> 00:37:42,960
of how chord

00:37:40,160 --> 00:37:45,280
projects adds complexity so as of drupal

00:37:42,960 --> 00:37:47,440
8.0.0 back in 2015

00:37:45,280 --> 00:37:48,960
php 7 hasn't even actually been released

00:37:47,440 --> 00:37:51,359
yet so we supported

00:37:48,960 --> 00:37:53,119
php five five and five six and we made

00:37:51,359 --> 00:37:54,960
our best effort to be compatible with

00:37:53,119 --> 00:37:58,240
php7

00:37:54,960 --> 00:38:00,480
next in july of 2016

00:37:58,240 --> 00:38:02,160
php ended its official security coverage

00:38:00,480 --> 00:38:05,200
for 5.5

00:38:02,160 --> 00:38:07,920
but through 2016 and 2017 even though

00:38:05,200 --> 00:38:10,599
php had stopped providing security fixes

00:38:07,920 --> 00:38:12,320
20 of all php websites were still using

00:38:10,599 --> 00:38:13,839
php55

00:38:12,320 --> 00:38:15,839
now keep in mind the distributions

00:38:13,839 --> 00:38:17,440
provide their own security patches for

00:38:15,839 --> 00:38:19,200
php versions that are used by their

00:38:17,440 --> 00:38:22,079
long-term support releases

00:38:19,200 --> 00:38:24,079
and php55 was used by trusty tar which

00:38:22,079 --> 00:38:25,680
it's an ubuntu release

00:38:24,079 --> 00:38:27,839
which actually had security coverage all

00:38:25,680 --> 00:38:28,880
the way until april of 2019 just a year

00:38:27,839 --> 00:38:30,880
ago

00:38:28,880 --> 00:38:33,280
now a site owner that's using that stack

00:38:30,880 --> 00:38:35,119
might reasonably expect their php 55

00:38:33,280 --> 00:38:38,880
application to keep working

00:38:35,119 --> 00:38:40,960
um at the same time in 2016 and 2017

00:38:38,880 --> 00:38:44,240
many releases of those composer packages

00:38:40,960 --> 00:38:47,280
were starting to require php 7.

00:38:44,240 --> 00:38:48,720
next gosh i think he's advancement

00:38:47,280 --> 00:38:49,920
before i actually say it so maybe i

00:38:48,720 --> 00:38:51,760
should have stopped saying and wait a

00:38:49,920 --> 00:38:54,000
second to see if he reads my mind

00:38:51,760 --> 00:38:55,760
so early in 2018 we announced that we

00:38:54,000 --> 00:38:58,240
would require php 7

00:38:55,760 --> 00:39:00,480
starting with drupal 870 which came out

00:38:58,240 --> 00:39:02,160
this past spring in may of 2019

00:39:00,480 --> 00:39:04,640
now note that there was a risk in

00:39:02,160 --> 00:39:06,320
supporting php five five for so long

00:39:04,640 --> 00:39:08,880
because it meant we had an increasing

00:39:06,320 --> 00:39:10,800
number of dependencies on old versions

00:39:08,880 --> 00:39:12,480
we were weighing that against the risk

00:39:10,800 --> 00:39:15,760
of denying 27.

00:39:12,480 --> 00:39:16,960
20 of all drupal sites any security

00:39:15,760 --> 00:39:18,640
updates at all

00:39:16,960 --> 00:39:20,240
because you can't install an update if

00:39:18,640 --> 00:39:22,400
it adds system requirements that are no

00:39:20,240 --> 00:39:25,839
longer met

00:39:22,400 --> 00:39:27,280
good then in summer of 2018

00:39:25,839 --> 00:39:30,240
months after we've made our announcement

00:39:27,280 --> 00:39:32,400
about 870 um we received a report of a

00:39:30,240 --> 00:39:34,320
url rewrite and cash poisoning

00:39:32,400 --> 00:39:35,920
vulnerability that the researcher

00:39:34,320 --> 00:39:37,839
planned to disclose in august this is a

00:39:35,920 --> 00:39:39,760
security researcher like sam

00:39:37,839 --> 00:39:40,880
now the colleague of mine researched the

00:39:39,760 --> 00:39:43,040
report and

00:39:40,880 --> 00:39:44,800
found that the vulnerable code was

00:39:43,040 --> 00:39:47,280
present both in symphony

00:39:44,800 --> 00:39:49,040
and in several then framework libraries

00:39:47,280 --> 00:39:50,720
including zen feed and diacteros which

00:39:49,040 --> 00:39:52,640
are used by triple core

00:39:50,720 --> 00:39:54,560
so we collaborated with the security

00:39:52,640 --> 00:39:56,079
teams of all three projects

00:39:54,560 --> 00:39:57,760
as well as the researcher to find a

00:39:56,079 --> 00:39:59,440
coordinated disclosure date

00:39:57,760 --> 00:40:01,200
that would work for everyone and we came

00:39:59,440 --> 00:40:03,520
up with august 1st of that year

00:40:01,200 --> 00:40:05,119
so we drupal pretend to securely score

00:40:03,520 --> 00:40:08,839
it labeled essay

00:40:05,119 --> 00:40:11,760
core 2018 005 but then there was a

00:40:08,839 --> 00:40:13,839
problem

00:40:11,760 --> 00:40:15,280
very late in the process i discovered

00:40:13,839 --> 00:40:17,839
that zen framework had also

00:40:15,280 --> 00:40:18,720
already dropped support for php 5.5

00:40:17,839 --> 00:40:20,960
earlier

00:40:18,720 --> 00:40:22,079
in one of their minor releases despite

00:40:20,960 --> 00:40:24,160
the fact that 20

00:40:22,079 --> 00:40:26,800
of php sites were still using it at the

00:40:24,160 --> 00:40:28,240
time so we couldn't update drupal to

00:40:26,800 --> 00:40:30,079
require the secure versions for the

00:40:28,240 --> 00:40:31,760
release we'd helped coordinate

00:40:30,079 --> 00:40:33,359
because we didn't meet their php version

00:40:31,760 --> 00:40:34,720
requirements

00:40:33,359 --> 00:40:36,720
fortunately it turned out the triple

00:40:34,720 --> 00:40:37,520
core itself was only vulnerable because

00:40:36,720 --> 00:40:39,200
of symphony

00:40:37,520 --> 00:40:41,200
we weren't exercising the vulnerable

00:40:39,200 --> 00:40:41,599
code in the zem framework libraries at

00:40:41,200 --> 00:40:45,119
all

00:40:41,599 --> 00:40:46,480
but it was a near miss what if drupal

00:40:45,119 --> 00:40:47,680
had actually been using the vulnerable

00:40:46,480 --> 00:40:50,560
code and sent framework

00:40:47,680 --> 00:40:52,079
we couldn't just drop support php55

00:40:50,560 --> 00:40:53,760
during security window

00:40:52,079 --> 00:40:55,599
it would have cost mass chaos and panic

00:40:53,760 --> 00:40:57,200
can you imagine like there's a security

00:40:55,599 --> 00:40:59,839
vulnerability and all of a sudden

00:40:57,200 --> 00:41:01,119
drupal stops working entirely would we

00:40:59,839 --> 00:41:02,640
have tried at the last minute to

00:41:01,119 --> 00:41:04,400
convince maintainers of an

00:41:02,640 --> 00:41:07,040
upstream project to make a release

00:41:04,400 --> 00:41:08,560
contrary to their release policies

00:41:07,040 --> 00:41:10,400
we have worked or overridden the

00:41:08,560 --> 00:41:12,000
libraries vulnerable code and scrambled

00:41:10,400 --> 00:41:14,160
to backpack their patches to the

00:41:12,000 --> 00:41:15,839
unsupported versions we were using

00:41:14,160 --> 00:41:17,280
and what if back porting had taken days

00:41:15,839 --> 00:41:19,680
or weeks and what would that mean for

00:41:17,280 --> 00:41:21,119
updating those libraries in the future

00:41:19,680 --> 00:41:22,960
even when we did eventually stop

00:41:21,119 --> 00:41:24,720
supporting php five five and five six

00:41:22,960 --> 00:41:26,240
and triple h7 there were a lot of

00:41:24,720 --> 00:41:27,599
complaints about it

00:41:26,240 --> 00:41:29,599
risk-averse sectors of drupal's

00:41:27,599 --> 00:41:31,359
ecosystem like government education and

00:41:29,599 --> 00:41:32,640
finance vastly preferred long-term

00:41:31,359 --> 00:41:35,359
support releases

00:41:32,640 --> 00:41:37,280
and all of our users honestly prefer an

00:41:35,359 --> 00:41:39,280
advanced schedule for releases

00:41:37,280 --> 00:41:41,119
so we simply couldn't sustain making new

00:41:39,280 --> 00:41:42,960
major releases every time a dependency

00:41:41,119 --> 00:41:47,280
drops support for an old php version can

00:41:42,960 --> 00:41:47,280
you imagine being like drupal 18 by now

00:41:47,520 --> 00:41:50,640
next so what we concluded as a result of

00:41:49,920 --> 00:41:52,400
this

00:41:50,640 --> 00:41:54,240
is that we have to set drupal's major

00:41:52,400 --> 00:41:56,480
version php requirement as high as

00:41:54,240 --> 00:41:58,079
possible when the major is released

00:41:56,480 --> 00:41:59,839
um and that also kind of applies

00:41:58,079 --> 00:42:01,520
downstream as well we try to use the

00:41:59,839 --> 00:42:02,480
most recent major version wherever

00:42:01,520 --> 00:42:04,000
possible

00:42:02,480 --> 00:42:05,680
for the new drupal version that's coming

00:42:04,000 --> 00:42:08,800
out so drupal 9

00:42:05,680 --> 00:42:09,839
requires php 73 we looked into actually

00:42:08,800 --> 00:42:11,680
requiring 7-4

00:42:09,839 --> 00:42:12,960
for it but unfortunately that simply

00:42:11,680 --> 00:42:15,440
wasn't practical

00:42:12,960 --> 00:42:17,280
because not enough hosts distributions

00:42:15,440 --> 00:42:18,640
and so forth support it yet

00:42:17,280 --> 00:42:20,720
so requiring seven four would have

00:42:18,640 --> 00:42:22,160
caused potentially lack of interest in

00:42:20,720 --> 00:42:24,240
drupal 9 when it come out if

00:42:22,160 --> 00:42:25,680
you know 25 percent of people couldn't

00:42:24,240 --> 00:42:26,720
update to it

00:42:25,680 --> 00:42:28,720
we also don't know what we're going to

00:42:26,720 --> 00:42:30,000
do exactly about php 8 which is coming

00:42:28,720 --> 00:42:32,720
out this fall

00:42:30,000 --> 00:42:34,880
now we want drupal 9 to support to be

00:42:32,720 --> 00:42:36,160
extended until the end of 2023 as you

00:42:34,880 --> 00:42:38,400
heard in the degrees note

00:42:36,160 --> 00:42:40,480
but php 74 support ends in november of

00:42:38,400 --> 00:42:41,760
2022 so we're going to have a stretch

00:42:40,480 --> 00:42:44,319
there for drupal 9

00:42:41,760 --> 00:42:45,599
where php 7 3 and 7 4 end of life but

00:42:44,319 --> 00:42:46,560
we're still trying to support them for

00:42:45,599 --> 00:42:48,560
drupal

00:42:46,560 --> 00:42:50,880
i'd love to see php extend security

00:42:48,560 --> 00:42:52,560
coverage 7-4 an extra year the way they

00:42:50,880 --> 00:42:54,160
did for php 5.6

00:42:52,560 --> 00:42:56,000
but so far they have repeatedly come

00:42:54,160 --> 00:42:57,440
down against it like i've asked about it

00:42:56,000 --> 00:42:58,240
we've asked on their mailing list and so

00:42:57,440 --> 00:42:59,440
forth

00:42:58,240 --> 00:43:01,359
so that's going to be interesting we'll

00:42:59,440 --> 00:43:03,119
see what happens and then meanwhile

00:43:01,359 --> 00:43:04,240
since dropping support for an old php

00:43:03,119 --> 00:43:05,440
version there's a ton of work and

00:43:04,240 --> 00:43:07,119
disruptive for us

00:43:05,440 --> 00:43:08,880
we're going to have to keep a close eye

00:43:07,119 --> 00:43:10,640
on our dependencies and consider forking

00:43:08,880 --> 00:43:11,680
any dependency that does drop support

00:43:10,640 --> 00:43:14,160
for php

00:43:11,680 --> 00:43:16,480
73 before reading tip so that gives you

00:43:14,160 --> 00:43:18,560
sort of an idea of the conflicting

00:43:16,480 --> 00:43:20,400
um the sort of things that we have to

00:43:18,560 --> 00:43:22,480
balance there are people who are like oh

00:43:20,400 --> 00:43:24,319
well you know this this dependency is

00:43:22,480 --> 00:43:26,079
out of date this php version is old why

00:43:24,319 --> 00:43:27,599
do we even bother using it anymore and

00:43:26,079 --> 00:43:28,480
then the opposite end we have people who

00:43:27,599 --> 00:43:30,560
are like

00:43:28,480 --> 00:43:32,079
drupal updates things so fast i can't

00:43:30,560 --> 00:43:33,200
keep up i keep having to change my

00:43:32,079 --> 00:43:35,200
platform and it's

00:43:33,200 --> 00:43:37,680
it's complicated to balance the needs of

00:43:35,200 --> 00:43:40,560
those different audiences

00:43:37,680 --> 00:43:41,839
that's all i have does anybody have any

00:43:40,560 --> 00:43:44,880
questions

00:43:41,839 --> 00:43:47,119
for us anybody up here

00:43:44,880 --> 00:43:48,640
around there there have been a few who

00:43:47,119 --> 00:43:51,680
slack that that are probably

00:43:48,640 --> 00:43:55,839
worth um great oh great

00:43:51,680 --> 00:43:55,839
great dropped off um

00:43:57,119 --> 00:44:01,760
so our message is are is it possible to

00:44:00,079 --> 00:44:03,680
get there will be no security updates

00:44:01,760 --> 00:44:04,160
notice even if on twitter we actually do

00:44:03,680 --> 00:44:06,839
do that

00:44:04,160 --> 00:44:09,440
in the security questions channel on

00:44:06,839 --> 00:44:10,160
slack uh we don't publish it to twitter

00:44:09,440 --> 00:44:12,560
because

00:44:10,160 --> 00:44:14,240
there are there'd be a lot of just no

00:44:12,560 --> 00:44:16,000
security updates this week so

00:44:14,240 --> 00:44:17,760
if you are interested in that we do post

00:44:16,000 --> 00:44:20,720
that in the security questions channel

00:44:17,760 --> 00:44:20,720
on drupal slack

00:44:21,440 --> 00:44:24,800
any other questions we've got about two

00:44:23,280 --> 00:44:27,280
minutes left

00:44:24,800 --> 00:44:28,000
maybe you know three if we stretch it a

00:44:27,280 --> 00:44:30,079
little bit

00:44:28,000 --> 00:44:31,440
uh great if you have a question that

00:44:30,079 --> 00:44:33,200
hasn't been answered yet you could just

00:44:31,440 --> 00:44:34,480
replace it at the bottom of the chat so

00:44:33,200 --> 00:44:36,160
that we can

00:44:34,480 --> 00:44:38,000
uh answer it because yeah there's a lot

00:44:36,160 --> 00:44:39,520
of back scroll here

00:44:38,000 --> 00:44:42,319
it's a feature another thing about this

00:44:39,520 --> 00:44:45,920
platform that's not that

00:44:42,319 --> 00:44:47,680
um there was a question earlier about

00:44:45,920 --> 00:44:49,359
how many vulnerabilities there are and

00:44:47,680 --> 00:44:51,440
how quickly they get fixed

00:44:49,359 --> 00:44:52,560
um we typically we don't disclose that

00:44:51,440 --> 00:44:55,760
information in general

00:44:52,560 --> 00:44:57,920
uh for a number of reasons um i'll

00:44:55,760 --> 00:44:59,920
say that you know triage is an active

00:44:57,920 --> 00:45:03,680
process and

00:44:59,920 --> 00:45:06,240
other disruptions like pandemics and

00:45:03,680 --> 00:45:08,000
so forth can you know make it take a bit

00:45:06,240 --> 00:45:10,560
longer to get stuff fixed

00:45:08,000 --> 00:45:12,400
will we post the slides someplace i will

00:45:10,560 --> 00:45:13,520
post the slide someplace assuming we

00:45:12,400 --> 00:45:15,359
have a way to do that

00:45:13,520 --> 00:45:17,200
i have no issue i'm assuming attachment

00:45:15,359 --> 00:45:19,520
to the session nodes

00:45:17,200 --> 00:45:21,440
um so i think it's just the link to the

00:45:19,520 --> 00:45:23,920
google slides if you can do that

00:45:21,440 --> 00:45:27,119
i will i will we'll get them posted to

00:45:23,920 --> 00:45:30,240
the session slides um

00:45:27,119 --> 00:45:33,520
uh where are we i'm sorry i'm trying to

00:45:30,240 --> 00:45:35,200
read backwards

00:45:33,520 --> 00:45:37,440
yeah what changes have been made to

00:45:35,200 --> 00:45:38,400
avoid the uh the situation of drupal

00:45:37,440 --> 00:45:40,000
getting so

00:45:38,400 --> 00:45:42,000
i think i think we covered a lot of

00:45:40,000 --> 00:45:43,119
those uh in this presentation so the

00:45:42,000 --> 00:45:46,480
drupal steward

00:45:43,119 --> 00:45:49,119
program is there in order to proactively

00:45:46,480 --> 00:45:50,880
monitor for anything that could be a you

00:45:49,119 --> 00:45:52,480
know very severe vulnerability affecting

00:45:50,880 --> 00:45:54,880
a lot of

00:45:52,480 --> 00:45:55,680
uh drupal people at once so that's sort

00:45:54,880 --> 00:45:58,000
of your first

00:45:55,680 --> 00:45:59,040
round of defense the second round of

00:45:58,000 --> 00:46:01,599
difference is

00:45:59,040 --> 00:46:02,560
um the automatic update initiative which

00:46:01,599 --> 00:46:04,720
will allow

00:46:02,560 --> 00:46:06,400
uh once it's completed will allow you to

00:46:04,720 --> 00:46:09,359
get those security updates

00:46:06,400 --> 00:46:10,800
or situations like that that occur um i

00:46:09,359 --> 00:46:11,359
think maybe there's also been some

00:46:10,800 --> 00:46:13,599
process

00:46:11,359 --> 00:46:15,760
changes stuff like that which i can't

00:46:13,599 --> 00:46:17,839
but maybe jess or michael

00:46:15,760 --> 00:46:20,079
actually i think sam was about to jump

00:46:17,839 --> 00:46:20,079
on that

00:46:20,400 --> 00:46:23,680
well yeah yeah i guess i wasn't sure if

00:46:22,560 --> 00:46:27,040
they were talking about the like

00:46:23,680 --> 00:46:28,319
technical fix or not but since drupalgen

00:46:27,040 --> 00:46:31,520
we've actually added

00:46:28,319 --> 00:46:31,920
um this request filter to hey michael do

00:46:31,520 --> 00:46:35,119
you mind

00:46:31,920 --> 00:46:35,119
muting while people are talking

00:46:35,440 --> 00:46:40,560
thanks um yeah so we've added this

00:46:38,319 --> 00:46:42,960
request filtering that basically

00:46:40,560 --> 00:46:43,839
uh prevents attacks like that in the

00:46:42,960 --> 00:46:45,440
future

00:46:43,839 --> 00:46:47,520
and it's like a bit higher level than

00:46:45,440 --> 00:46:49,440
specific vulnerabilities so that kind of

00:46:47,520 --> 00:46:50,720
vulnerability should be a lot harder in

00:46:49,440 --> 00:46:52,400
the future

00:46:50,720 --> 00:46:54,319
even if there's a different exploit path

00:46:52,400 --> 00:46:55,839
so that's kind of something since 2018

00:46:54,319 --> 00:46:57,680
that we've done

00:46:55,839 --> 00:46:59,839
that in general when when we have a

00:46:57,680 --> 00:47:02,160
vulnerability um that's reported

00:46:59,839 --> 00:47:02,880
for core especially we try to think

00:47:02,160 --> 00:47:04,960
about

00:47:02,880 --> 00:47:06,720
what other kinds of things are sort of

00:47:04,960 --> 00:47:07,920
implied by that vulnerability and see if

00:47:06,720 --> 00:47:09,839
there's like a higher level where we

00:47:07,920 --> 00:47:10,480
should fix it or if there's other

00:47:09,839 --> 00:47:12,160
related

00:47:10,480 --> 00:47:15,440
security vulnerabilities that we should

00:47:12,160 --> 00:47:15,440
bundle at the same time with it

00:47:17,200 --> 00:47:20,319
and yeah we've done a lot of work on

00:47:18,720 --> 00:47:20,640
improving our core release process over

00:47:20,319 --> 00:47:22,559
the

00:47:20,640 --> 00:47:24,160
past several years it's a lot a lot

00:47:22,559 --> 00:47:25,280
smoother than it used to be um it's

00:47:24,160 --> 00:47:26,800
still a little bumpy when there's

00:47:25,280 --> 00:47:28,400
dependency updates because there's a lot

00:47:26,800 --> 00:47:31,680
outside our control there

00:47:28,400 --> 00:47:33,839
um but we continue to improve in terms

00:47:31,680 --> 00:47:36,960
of process

00:47:33,839 --> 00:47:37,520
um taking on to the automatic updates

00:47:36,960 --> 00:47:39,119
darren

00:47:37,520 --> 00:47:40,800
comments that he's concerned about file

00:47:39,119 --> 00:47:42,640
permissions from auto updates

00:47:40,800 --> 00:47:44,319
yes come to our please come to our

00:47:42,640 --> 00:47:45,760
session we will tell you all about

00:47:44,319 --> 00:47:47,839
all of the things that the drupal

00:47:45,760 --> 00:47:50,480
security team has put a lot of thought

00:47:47,839 --> 00:47:51,200
into the architecture of automatic

00:47:50,480 --> 00:47:52,720
updates

00:47:51,200 --> 00:47:54,400
we've taken lessons from other projects

00:47:52,720 --> 00:47:56,000
like wordpress and so forth and we can

00:47:54,400 --> 00:47:57,359
get into the technical specifics of that

00:47:56,000 --> 00:47:58,319
in the automatic update session i

00:47:57,359 --> 00:48:00,079
encourage you to come if you're

00:47:58,319 --> 00:48:02,640
available

00:48:00,079 --> 00:48:06,000
it should greatly reduce your concerns

00:48:02,640 --> 00:48:07,920
that's the spoiler

00:48:06,000 --> 00:48:09,680
so we are three minutes past the hour i

00:48:07,920 --> 00:48:13,359
want to thank everybody for coming today

00:48:09,680 --> 00:48:14,880
um we are uh we will uh we will be

00:48:13,359 --> 00:48:16,720
hanging out the security questions

00:48:14,880 --> 00:48:19,359
channel and drupal slack

00:48:16,720 --> 00:48:20,559
um and we will we look forward to seeing

00:48:19,359 --> 00:48:21,200
you out there have a great afternoon

00:48:20,559 --> 00:48:23,760
everybody or

00:48:21,200 --> 00:48:28,319
afternoon my time at least uh enjoy the

00:48:23,760 --> 00:48:28,319

YouTube URL: https://www.youtube.com/watch?v=MjMsmAmhN_g


