Title: Decoupled Drupal in real life: Lessons from JSON:API at scale   DrupalCon Global 2020
Publication date: 2020-08-25
Playlist: DrupalCon Global 2020
Description: 
	With Varnish Cache support for JSON:API, Drupal projects can leverage strengths of fast caching systems with minimal Drupal configuration.
Captions: 
	00:00:00,080 --> 00:00:06,640
and it's really easy to turn on

00:00:03,360 --> 00:00:09,519
um okay so

00:00:06,640 --> 00:00:10,400
it's 12 15. i'm gonna get started here

00:00:09,519 --> 00:00:13,599
in a middle

00:00:10,400 --> 00:00:15,280
minute but i'm having people say what

00:00:13,599 --> 00:00:17,279
experience they have with decouple

00:00:15,280 --> 00:00:19,760
drupal so i can like

00:00:17,279 --> 00:00:21,199
i might it looks like there are enough

00:00:19,760 --> 00:00:23,920
people here

00:00:21,199 --> 00:00:25,439
that maybe have very little experience

00:00:23,920 --> 00:00:26,080
with the couple drupal that i'll just

00:00:25,439 --> 00:00:28,880
pitch

00:00:26,080 --> 00:00:31,840
the talk kind of in general a little bit

00:00:28,880 --> 00:00:31,840
more that way

00:00:33,600 --> 00:00:37,280
so i'm going to go ahead and get started

00:00:36,239 --> 00:00:40,559
my name is aaron

00:00:37,280 --> 00:00:43,200
rasmussen and i work at aqua

00:00:40,559 --> 00:00:44,399
i'm not i was a developer for a long

00:00:43,200 --> 00:00:48,640
time before i worked at

00:00:44,399 --> 00:00:50,879
aquia but like i'm not a developer now

00:00:48,640 --> 00:00:52,480
i work with our teams to help support

00:00:50,879 --> 00:00:55,520
enterprise

00:00:52,480 --> 00:00:59,039
size sites as they like

00:00:55,520 --> 00:01:02,280
work with um delivering

00:00:59,039 --> 00:01:05,920
their drupal and decouple drupal

00:01:02,280 --> 00:01:06,960
experiences out to the site visitors on

00:01:05,920 --> 00:01:09,119
the internet

00:01:06,960 --> 00:01:10,400
so this is going to be pitched a little

00:01:09,119 --> 00:01:13,520
bit dugopsi

00:01:10,400 --> 00:01:14,799
and um and and it's kind of that way on

00:01:13,520 --> 00:01:17,759
purpose just because

00:01:14,799 --> 00:01:19,920
i think that is a part of the story that

00:01:17,759 --> 00:01:24,840
we don't tell very often

00:01:19,920 --> 00:01:26,479
um so this is decoupled drupal in real

00:01:24,840 --> 00:01:28,400
life

00:01:26,479 --> 00:01:30,799
it's really neat it's really fun to do

00:01:28,400 --> 00:01:32,400
as a demo like you turn on json api

00:01:30,799 --> 00:01:34,880
and build a front end and it works

00:01:32,400 --> 00:01:35,600
really great but what does the start to

00:01:34,880 --> 00:01:38,799
look like

00:01:35,600 --> 00:01:40,880
as we deliver it and then also what does

00:01:38,799 --> 00:01:43,920
this look like as we deliver in

00:01:40,880 --> 00:01:45,840
scale and what kinds of things that

00:01:43,920 --> 00:01:48,000
we've learned that other people can

00:01:45,840 --> 00:01:49,680
learn um

00:01:48,000 --> 00:01:52,000
the other thing is i've noticed in other

00:01:49,680 --> 00:01:54,240
sessions that um

00:01:52,000 --> 00:01:56,399
some some people have had difficulty

00:01:54,240 --> 00:01:59,119
with slides advance so just

00:01:56,399 --> 00:02:00,719
keep refreshing it really helps to see

00:01:59,119 --> 00:02:04,240
the next slide so

00:02:00,719 --> 00:02:07,600
switch there we go

00:02:04,240 --> 00:02:09,280
oh i'm back so this is kind of like on

00:02:07,600 --> 00:02:12,319
my intro slide

00:02:09,280 --> 00:02:13,840
i was remember i was spoke at drupalcon

00:02:12,319 --> 00:02:17,040
seattle we talked about

00:02:13,840 --> 00:02:18,560
caching decoupled drupal was on the

00:02:17,040 --> 00:02:20,480
radar there were a lot of people that

00:02:18,560 --> 00:02:23,840
had really great projects

00:02:20,480 --> 00:02:24,959
um but we didn't have a lot of projects

00:02:23,840 --> 00:02:27,599
we were seeing

00:02:24,959 --> 00:02:28,959
kind of out there in the wild yet and i

00:02:27,599 --> 00:02:32,959
really feel like we've

00:02:28,959 --> 00:02:36,319
started from the um

00:02:32,959 --> 00:02:38,319
the beginning stages of

00:02:36,319 --> 00:02:39,599
decoupled drupal and we're now like sort

00:02:38,319 --> 00:02:41,519
of hitting the teenager

00:02:39,599 --> 00:02:42,959
stage where we're seeing more of these

00:02:41,519 --> 00:02:46,239
projects like

00:02:42,959 --> 00:02:49,040
delivered and um

00:02:46,239 --> 00:02:50,800
you know visitors are accessing them and

00:02:49,040 --> 00:02:53,599
we're getting more experience

00:02:50,800 --> 00:02:54,879
with being able to deliver these sites

00:02:53,599 --> 00:02:57,840
at scale

00:02:54,879 --> 00:02:58,400
so i have kind of like the input there

00:02:57,840 --> 00:03:01,760
um

00:02:58,400 --> 00:03:02,800
in march 2019 json api was in drupal

00:03:01,760 --> 00:03:05,360
core

00:03:02,800 --> 00:03:07,760
pretty soon after that varnish support

00:03:05,360 --> 00:03:10,720
was added for jason api

00:03:07,760 --> 00:03:12,959
and that's one of the key things that

00:03:10,720 --> 00:03:18,400
i'm talking about

00:03:12,959 --> 00:03:20,879
uh so

00:03:18,400 --> 00:03:23,360
part of what i want to talk about when

00:03:20,879 --> 00:03:25,200
i'm talking about decouple drupal

00:03:23,360 --> 00:03:27,680
isn't just the fact that you have a

00:03:25,200 --> 00:03:29,760
drupal 8 site and you have a front end

00:03:27,680 --> 00:03:31,920
and they're you're using your front end

00:03:29,760 --> 00:03:33,680
to deliver content to the web or you're

00:03:31,920 --> 00:03:37,040
using your front end like in

00:03:33,680 --> 00:03:39,360
gatsby or tone to like create a static

00:03:37,040 --> 00:03:42,640
site and then deliver that to the web

00:03:39,360 --> 00:03:43,440
part of what i'm seeing cut like our

00:03:42,640 --> 00:03:45,920
customers

00:03:43,440 --> 00:03:46,799
use and people use drupal on the

00:03:45,920 --> 00:03:49,920
platform

00:03:46,799 --> 00:03:53,760
like on on the internet um

00:03:49,920 --> 00:03:57,120
is this move toward using your drupal 8

00:03:53,760 --> 00:03:58,000
as like a content aggregator or using

00:03:57,120 --> 00:04:01,280
migration

00:03:58,000 --> 00:04:04,480
using other tools apis to be able to

00:04:01,280 --> 00:04:07,360
pull in content from other sources

00:04:04,480 --> 00:04:09,599
whether that's like social media product

00:04:07,360 --> 00:04:10,239
and information systems or e-commerce

00:04:09,599 --> 00:04:12,319
systems

00:04:10,239 --> 00:04:14,480
sometimes people have product customer

00:04:12,319 --> 00:04:15,840
data platform information they're using

00:04:14,480 --> 00:04:19,359
in drupal

00:04:15,840 --> 00:04:21,759
um and then also

00:04:19,359 --> 00:04:23,440
they're you consuming that content in a

00:04:21,759 --> 00:04:24,320
variety of ways right you might be

00:04:23,440 --> 00:04:27,120
consuming it

00:04:24,320 --> 00:04:29,199
in a decouple like front end or a static

00:04:27,120 --> 00:04:32,560
html front-end site

00:04:29,199 --> 00:04:35,600
or you're maybe sending that that

00:04:32,560 --> 00:04:37,840
piece of content from drupal out to like

00:04:35,600 --> 00:04:38,960
your marketing channels or you're

00:04:37,840 --> 00:04:41,919
sending it

00:04:38,960 --> 00:04:42,479
pieces from drupal about your product

00:04:41,919 --> 00:04:45,840
and your

00:04:42,479 --> 00:04:46,479
you know like information that you want

00:04:45,840 --> 00:04:49,199
to share

00:04:46,479 --> 00:04:51,360
out through social media channels so

00:04:49,199 --> 00:04:54,160
drupals were

00:04:51,360 --> 00:04:56,240
playing this role of like a hub almost

00:04:54,160 --> 00:04:58,080
or a content aggregator

00:04:56,240 --> 00:05:00,240
between all these different systems and

00:04:58,080 --> 00:05:02,639
then out to

00:05:00,240 --> 00:05:03,919
out to the consumers whether they're

00:05:02,639 --> 00:05:05,840
choosing to go

00:05:03,919 --> 00:05:07,199
through a regular website through an

00:05:05,840 --> 00:05:10,880
application

00:05:07,199 --> 00:05:12,080
or through some other software that

00:05:10,880 --> 00:05:15,120
consumes that

00:05:12,080 --> 00:05:17,440
information it's really interesting and

00:05:15,120 --> 00:05:18,080
i love the way that people are using

00:05:17,440 --> 00:05:20,080
drupal

00:05:18,080 --> 00:05:22,560
in these like new more dramatic ways

00:05:20,080 --> 00:05:25,039
because it's using the api system

00:05:22,560 --> 00:05:26,400
and it's using those content types and

00:05:25,039 --> 00:05:28,560
the way that you can

00:05:26,400 --> 00:05:29,520
be flexible about the way you set up

00:05:28,560 --> 00:05:31,919
data

00:05:29,520 --> 00:05:34,639
and then having it go out and then have

00:05:31,919 --> 00:05:34,639
it come in

00:05:34,720 --> 00:05:38,080
so the first project we'll look at is

00:05:37,120 --> 00:05:43,120
really kind of

00:05:38,080 --> 00:05:46,320
more fully decoupled website

00:05:43,120 --> 00:05:47,039
so this is union bank they did a

00:05:46,320 --> 00:05:49,919
beautiful

00:05:47,039 --> 00:05:50,639
website and um i'm really hoping that at

00:05:49,919 --> 00:05:53,680
some point

00:05:50,639 --> 00:05:55,520
the developers do a public talk about um

00:05:53,680 --> 00:05:57,680
that project because it was really great

00:05:55,520 --> 00:06:00,720
their site's really gorgeous

00:05:57,680 --> 00:06:03,840
i'm going to talk a little bit about

00:06:00,720 --> 00:06:06,319
just the back end from that like when

00:06:03,840 --> 00:06:08,560
a customer visits the site or when a

00:06:06,319 --> 00:06:11,919
site visitor visits the site

00:06:08,560 --> 00:06:15,440
what process that request can go through

00:06:11,919 --> 00:06:18,560
before it delivers the final results to

00:06:15,440 --> 00:06:20,319
that same viewer and i think that's

00:06:18,560 --> 00:06:22,479
helpful because i think it helps you

00:06:20,319 --> 00:06:23,280
understand where the caching layers may

00:06:22,479 --> 00:06:25,440
be

00:06:23,280 --> 00:06:26,880
and we found you know with delivering

00:06:25,440 --> 00:06:30,240
like at enterprise scale

00:06:26,880 --> 00:06:32,880
caching is really this key to success

00:06:30,240 --> 00:06:34,639
so what's unique bank why did they

00:06:32,880 --> 00:06:37,120
choose to go to coupled well you could

00:06:34,639 --> 00:06:39,520
they were able to build in some security

00:06:37,120 --> 00:06:41,199
and performance features that

00:06:39,520 --> 00:06:43,520
help the visitor their site they're very

00:06:41,199 --> 00:06:45,840
security conscious because their bank

00:06:43,520 --> 00:06:46,880
they get separation of concerns from

00:06:45,840 --> 00:06:49,120
like their

00:06:46,880 --> 00:06:50,240
javascript front end to teach you

00:06:49,120 --> 00:06:53,440
touches one part

00:06:50,240 --> 00:06:55,919
right and then the drupal back end um

00:06:53,440 --> 00:06:58,240
has a different permission system and

00:06:55,919 --> 00:07:00,639
has a different access level so that's

00:06:58,240 --> 00:07:02,880
important to those have things separated

00:07:00,639 --> 00:07:06,000
out they also decided to choose

00:07:02,880 --> 00:07:08,319
to use a web application firewall and

00:07:06,000 --> 00:07:11,039
cdn on the front end

00:07:08,319 --> 00:07:12,000
so they've got site visitors that come

00:07:11,039 --> 00:07:15,120
in

00:07:12,000 --> 00:07:17,680
the weber cust comes in it may be

00:07:15,120 --> 00:07:18,960
that it is just the home page and

00:07:17,680 --> 00:07:21,280
there's nothing

00:07:18,960 --> 00:07:22,960
and it's been requested a billion times

00:07:21,280 --> 00:07:24,800
and it's saved in the cdn

00:07:22,960 --> 00:07:26,800
and that response goes out right away so

00:07:24,800 --> 00:07:29,520
that's the first caching layer

00:07:26,800 --> 00:07:31,680
maybe it is a detailed page or there's

00:07:29,520 --> 00:07:35,120
some customization that's required

00:07:31,680 --> 00:07:36,240
so they go to their in this case it's a

00:07:35,120 --> 00:07:38,639
view javascript

00:07:36,240 --> 00:07:40,560
application that's the front end and it

00:07:38,639 --> 00:07:42,400
builds the request

00:07:40,560 --> 00:07:45,440
if that needs additional information

00:07:42,400 --> 00:07:48,400
from drupal it sends a back-end request

00:07:45,440 --> 00:07:49,440
to drupal that may be cached in a

00:07:48,400 --> 00:07:52,319
caching layer

00:07:49,440 --> 00:07:53,759
or might be built in drupal and then

00:07:52,319 --> 00:07:56,400
sent to the front end

00:07:53,759 --> 00:07:56,800
where it's assembled into a page and it

00:07:56,400 --> 00:07:59,199
goes

00:07:56,800 --> 00:08:00,720
out to the site visitor it's a little

00:07:59,199 --> 00:08:04,080
bit complicated but

00:08:00,720 --> 00:08:07,360
um it's kind of like that series

00:08:04,080 --> 00:08:09,280
of steps what um

00:08:07,360 --> 00:08:10,400
when you see it more simply you see it

00:08:09,280 --> 00:08:13,199
like a

00:08:10,400 --> 00:08:14,000
visitor has a request goes to the front

00:08:13,199 --> 00:08:16,000
end system

00:08:14,000 --> 00:08:17,360
if the front end system needs something

00:08:16,000 --> 00:08:20,000
from drupal

00:08:17,360 --> 00:08:21,599
grabs that request builds it in drupal

00:08:20,000 --> 00:08:23,840
sends it back to the front end that

00:08:21,599 --> 00:08:27,520
usually packages the visual layers

00:08:23,840 --> 00:08:29,840
um accessibility thing um any

00:08:27,520 --> 00:08:31,280
additional tags it needs to add if it's

00:08:29,840 --> 00:08:34,640
sending not just to

00:08:31,280 --> 00:08:38,240
a website but to like a screen or

00:08:34,640 --> 00:08:41,279
um some people use these for

00:08:38,240 --> 00:08:45,040
like for example in banks to be

00:08:41,279 --> 00:08:48,640
the display screens um

00:08:45,040 --> 00:08:50,800
so that um

00:08:48,640 --> 00:08:52,240
so you have that like packaging

00:08:50,800 --> 00:08:55,839
information you can also put

00:08:52,240 --> 00:08:59,040
into the javascript front end and then

00:08:55,839 --> 00:09:00,080
send that request back to the site

00:08:59,040 --> 00:09:03,120
visitor

00:09:00,080 --> 00:09:03,600
throwing in those caching layers um and

00:09:03,120 --> 00:09:05,680
it

00:09:03,600 --> 00:09:07,519
leads to like the front end caching

00:09:05,680 --> 00:09:09,839
level layer where you

00:09:07,519 --> 00:09:09,839
are

00:09:11,440 --> 00:09:15,440
doing that security step of having the

00:09:13,600 --> 00:09:18,080
web application firewall

00:09:15,440 --> 00:09:19,600
it speeds the delivery of those

00:09:18,080 --> 00:09:22,399
pre-packaged things and

00:09:19,600 --> 00:09:23,040
gives that instant site experience like

00:09:22,399 --> 00:09:26,560
instant

00:09:23,040 --> 00:09:28,320
view that site visitors really like

00:09:26,560 --> 00:09:30,080
and you get to keep all your gorgeous

00:09:28,320 --> 00:09:33,760
pictures and your formatting

00:09:30,080 --> 00:09:36,720
and it's pretty great um

00:09:33,760 --> 00:09:38,240
this is just kind of another cut on the

00:09:36,720 --> 00:09:42,000
same information right

00:09:38,240 --> 00:09:44,560
save the visitors go through goes to the

00:09:42,000 --> 00:09:47,440
wax cdn layer maybe some of those

00:09:44,560 --> 00:09:49,440
requests are handled there

00:09:47,440 --> 00:09:52,640
then the rest of them go into the

00:09:49,440 --> 00:09:54,800
decoupled application

00:09:52,640 --> 00:09:56,640
that'll handle a few more of them not

00:09:54,800 --> 00:10:00,399
all of those requests will go

00:09:56,640 --> 00:10:02,399
to the drupal um the ones that do if

00:10:00,399 --> 00:10:03,200
you're using json api and you've enabled

00:10:02,399 --> 00:10:05,920
caching

00:10:03,200 --> 00:10:08,880
you can cache the responses in varnish

00:10:05,920 --> 00:10:12,160
and that also helps you

00:10:08,880 --> 00:10:13,120
lighten the load on drupal in addition

00:10:12,160 --> 00:10:16,720
to that

00:10:13,120 --> 00:10:18,880
there are database cache caches like

00:10:16,720 --> 00:10:22,480
fast caches like memcache or

00:10:18,880 --> 00:10:25,440
redis and then also um php

00:10:22,480 --> 00:10:27,600
has like a small caching system on it

00:10:25,440 --> 00:10:28,480
it's kind of important to know these

00:10:27,600 --> 00:10:31,200
things

00:10:28,480 --> 00:10:33,519
um a little bit to understand where you

00:10:31,200 --> 00:10:37,839
can introduce optimization

00:10:33,519 --> 00:10:37,839
but also you can um

00:10:38,560 --> 00:10:42,560
you can have errors that crop up or

00:10:40,880 --> 00:10:43,600
parts of the screen that don't render

00:10:42,560 --> 00:10:46,800
correctly

00:10:43,600 --> 00:10:50,160
and so it's nice to know where to look

00:10:46,800 --> 00:10:52,959
in case you have a glitch or it's nice

00:10:50,160 --> 00:10:57,040
to know which cache you have to clear

00:10:52,959 --> 00:10:57,040
um you can

00:10:58,160 --> 00:11:05,120
do okay so in this diagram

00:11:01,600 --> 00:11:08,079
just to answer the chat the node

00:11:05,120 --> 00:11:09,600
is on is doing server side rendering and

00:11:08,079 --> 00:11:14,079
then that's why you can do a

00:11:09,600 --> 00:11:16,240
cache in front of it

00:11:14,079 --> 00:11:18,480
and yeah like simon says you can put the

00:11:16,240 --> 00:11:20,480
um background on a different sub domain

00:11:18,480 --> 00:11:23,120
and that helps

00:11:20,480 --> 00:11:24,399
um so you have the one request going to

00:11:23,120 --> 00:11:26,720
the other subject

00:11:24,399 --> 00:11:28,079
and they are on two um the ones that

00:11:26,720 --> 00:11:30,160
i've seen are usually on

00:11:28,079 --> 00:11:32,240
also in two different hardware layers so

00:11:30,160 --> 00:11:35,839
you can have um

00:11:32,240 --> 00:11:37,920
one level of provisioning

00:11:35,839 --> 00:11:39,680
for the server-side rendering and then

00:11:37,920 --> 00:11:41,279
another one for the drupal stack because

00:11:39,680 --> 00:11:43,120
they like to be on different software

00:11:41,279 --> 00:11:46,560
stacks

00:11:43,120 --> 00:11:48,640
um this just kind of like if you

00:11:46,560 --> 00:11:49,600
haven't checked your caching layers with

00:11:48,640 --> 00:11:52,880
curl it's

00:11:49,600 --> 00:11:54,839
really handy it just tells you what's

00:11:52,880 --> 00:11:57,839
happening in the browser

00:11:54,839 --> 00:12:00,000
um but it's super nice to kind of just

00:11:57,839 --> 00:12:00,880
take a look at the header information if

00:12:00,000 --> 00:12:04,000
you see that

00:12:00,880 --> 00:12:07,920
droop x drupal dynamic cache hit

00:12:04,000 --> 00:12:11,680
that got a triple cache hit

00:12:07,920 --> 00:12:14,720
um it'll show you if you're using

00:12:11,680 --> 00:12:17,360
varnish or if you're using cloudflare

00:12:14,720 --> 00:12:18,480
um what that cache age is so that can

00:12:17,360 --> 00:12:20,639
help you figure out

00:12:18,480 --> 00:12:21,519
why you're still seeing something stale

00:12:20,639 --> 00:12:23,600
or not

00:12:21,519 --> 00:12:24,880
and then also another thing to kind of

00:12:23,600 --> 00:12:27,200
watch out for

00:12:24,880 --> 00:12:28,000
is that usually there's like an x cache

00:12:27,200 --> 00:12:30,399
header

00:12:28,000 --> 00:12:31,440
and the x cache header usually only

00:12:30,399 --> 00:12:34,160
tells you about the

00:12:31,440 --> 00:12:34,880
nearest caching layer to where you are

00:12:34,160 --> 00:12:37,440
um

00:12:34,880 --> 00:12:38,800
and that might not be the caching layer

00:12:37,440 --> 00:12:40,480
where i like something

00:12:38,800 --> 00:12:42,480
like i was talking about before like an

00:12:40,480 --> 00:12:45,360
asset is getting stuck in

00:12:42,480 --> 00:12:47,120
so let's kind of gotta introduce this

00:12:45,360 --> 00:12:50,320
because this is really handy

00:12:47,120 --> 00:12:54,240
um the curl man page is really great and

00:12:50,320 --> 00:12:57,760
it you can also look at all that

00:12:54,240 --> 00:13:00,560
in your inspector in um chrome

00:12:57,760 --> 00:13:02,480
or firebox or any of them in browsers

00:13:00,560 --> 00:13:03,600
but sometimes it's nice to just kind of

00:13:02,480 --> 00:13:05,760
have it like a

00:13:03,600 --> 00:13:08,480
static readout and then be able to refer

00:13:05,760 --> 00:13:08,480
to it later

00:13:10,320 --> 00:13:13,920
um so with this site like the main

00:13:13,200 --> 00:13:17,839
lessons

00:13:13,920 --> 00:13:17,839
key takeaways um

00:13:17,920 --> 00:13:23,440
were things like when you build the

00:13:21,600 --> 00:13:26,560
beautiful front end

00:13:23,440 --> 00:13:30,000
site experience

00:13:26,560 --> 00:13:33,440
it's also good to be to take some time

00:13:30,000 --> 00:13:37,040
and build a beautiful web editor

00:13:33,440 --> 00:13:37,519
experience um that was really one of the

00:13:37,040 --> 00:13:39,120
things

00:13:37,519 --> 00:13:40,560
with this project that was really

00:13:39,120 --> 00:13:43,360
important um

00:13:40,560 --> 00:13:45,279
because the stakeholders that were at

00:13:43,360 --> 00:13:45,920
the bank that were invested in this

00:13:45,279 --> 00:13:48,880
project

00:13:45,920 --> 00:13:50,079
really like to see the gorgeous front

00:13:48,880 --> 00:13:53,040
end experience

00:13:50,079 --> 00:13:54,880
but then they took a look at the same

00:13:53,040 --> 00:13:56,480
content in drupal and this is what this

00:13:54,880 --> 00:13:58,560
is showing you it's kind of like the

00:13:56,480 --> 00:14:00,880
front end page which is really nice

00:13:58,560 --> 00:14:02,480
and then the background page which is

00:14:00,880 --> 00:14:04,160
very drupaly

00:14:02,480 --> 00:14:05,519
and i gotta tell you they weren't that

00:14:04,160 --> 00:14:09,199
excited about it

00:14:05,519 --> 00:14:11,360
they so if you take the time

00:14:09,199 --> 00:14:12,800
um or if you're looking at a fully

00:14:11,360 --> 00:14:14,720
decoupled project don't do

00:14:12,800 --> 00:14:16,480
fully decoupled project just for the

00:14:14,720 --> 00:14:18,160
sake of doing decoupled because they

00:14:16,480 --> 00:14:21,440
take a lot more time

00:14:18,160 --> 00:14:22,160
um but if you are working on a decoupled

00:14:21,440 --> 00:14:24,160
project

00:14:22,160 --> 00:14:25,519
do something that sometimes we call like

00:14:24,160 --> 00:14:28,959
partially decoupled

00:14:25,519 --> 00:14:31,040
or like um i'll just give

00:14:28,959 --> 00:14:32,320
chris types a little piece around i know

00:14:31,040 --> 00:14:35,680
he's a dribble con

00:14:32,320 --> 00:14:36,560
give him credit for this way of saying

00:14:35,680 --> 00:14:39,680
it but

00:14:36,560 --> 00:14:41,120
mimic the front end experience inside

00:14:39,680 --> 00:14:43,680
drupal and it does

00:14:41,120 --> 00:14:45,199
take extra time and it does take extra

00:14:43,680 --> 00:14:48,959
resources to do it

00:14:45,199 --> 00:14:49,440
but they will be your um the people who

00:14:48,959 --> 00:14:52,000
are

00:14:49,440 --> 00:14:54,160
working on your project like day to day

00:14:52,000 --> 00:14:57,680
having to live with the web development

00:14:54,160 --> 00:15:00,079
will be a lot happier with it

00:14:57,680 --> 00:15:00,800
so we found that some of these fully

00:15:00,079 --> 00:15:03,839
decoupled

00:15:00,800 --> 00:15:04,639
applications really go progressively

00:15:03,839 --> 00:15:08,800
decoupled

00:15:04,639 --> 00:15:08,800
just to improve that building experience

00:15:10,560 --> 00:15:14,240
the other issue um this was an early

00:15:13,040 --> 00:15:17,279
stage

00:15:14,240 --> 00:15:18,560
project and it uses these paragraphs

00:15:17,279 --> 00:15:21,360
pretty extensively

00:15:18,560 --> 00:15:23,199
um an issue that came up a lot

00:15:21,360 --> 00:15:26,240
especially when trying to render

00:15:23,199 --> 00:15:29,279
a really quality draft is that

00:15:26,240 --> 00:15:32,480
there are some paragraphs issues with

00:15:29,279 --> 00:15:34,320
nested fields like paragraph does is

00:15:32,480 --> 00:15:36,880
this thing that's kind of like a

00:15:34,320 --> 00:15:38,240
a russian doll right you've got the big

00:15:36,880 --> 00:15:40,639
field and then

00:15:38,240 --> 00:15:41,680
then like an image and then maybe the

00:15:40,639 --> 00:15:44,800
image has

00:15:41,680 --> 00:15:47,040
details about it and maybe that link

00:15:44,800 --> 00:15:48,560
gets updated or the original base image

00:15:47,040 --> 00:15:50,079
gets updated

00:15:48,560 --> 00:15:52,079
when you do that there's a revision

00:15:50,079 --> 00:15:53,360
entity attached to that and it doesn't

00:15:52,079 --> 00:15:56,639
always

00:15:53,360 --> 00:16:00,639
bubble up to that main

00:15:56,639 --> 00:16:04,079
entity um it does pretty well for nodes

00:16:00,639 --> 00:16:05,040
but custom content additional content

00:16:04,079 --> 00:16:09,040
types

00:16:05,040 --> 00:16:11,680
has our time so just be aware of that

00:16:09,040 --> 00:16:13,040
if you have a project that's using json

00:16:11,680 --> 00:16:16,320
api arrest avia

00:16:13,040 --> 00:16:18,880
in paragraphs uh also

00:16:16,320 --> 00:16:20,480
check out for observability um in

00:16:18,880 --> 00:16:23,040
javascript application

00:16:20,480 --> 00:16:24,720
if we work with drupal a lot we're

00:16:23,040 --> 00:16:28,000
really used to draw blogging

00:16:24,720 --> 00:16:30,800
and drupal does a great job of vlogging

00:16:28,000 --> 00:16:32,639
and you don't miss drupal logging until

00:16:30,800 --> 00:16:34,079
all of a sudden

00:16:32,639 --> 00:16:36,000
you're working with a front-end

00:16:34,079 --> 00:16:36,880
application and you haven't built the

00:16:36,000 --> 00:16:39,519
same

00:16:36,880 --> 00:16:40,720
level of sophisticated logging and

00:16:39,519 --> 00:16:43,440
something goes wrong

00:16:40,720 --> 00:16:44,240
so either build really good logging or

00:16:43,440 --> 00:16:47,519
check in

00:16:44,240 --> 00:16:51,279
and or check into observability apps

00:16:47,519 --> 00:16:53,839
you can do relic or honeycomb

00:16:51,279 --> 00:16:54,560
those really can help in the case of

00:16:53,839 --> 00:16:56,240
things going on

00:16:54,560 --> 00:16:58,320
that's another part where it's like

00:16:56,240 --> 00:16:59,839
harder to talk clients into really

00:16:58,320 --> 00:17:03,759
spending money on logging

00:16:59,839 --> 00:17:07,199
parts but when the site is in production

00:17:03,759 --> 00:17:09,360
it is one thing you really appreciate

00:17:07,199 --> 00:17:10,559
um also if you can build in a local

00:17:09,360 --> 00:17:13,839
cache

00:17:10,559 --> 00:17:14,559
oh hey look you're not has a logger too

00:17:13,839 --> 00:17:16,079
so

00:17:14,559 --> 00:17:18,559
there's definitely good loggers out

00:17:16,079 --> 00:17:21,360
there take advantage of it um

00:17:18,559 --> 00:17:22,400
and also um if you can build in a local

00:17:21,360 --> 00:17:25,280
cache to

00:17:22,400 --> 00:17:26,480
if you're doing server-side rendering

00:17:25,280 --> 00:17:29,039
with javascript if you

00:17:26,480 --> 00:17:29,600
do a local cache that helps a lot in

00:17:29,039 --> 00:17:33,039
terms

00:17:29,600 --> 00:17:36,400
of speeding the delivery

00:17:33,039 --> 00:17:40,080
of your site to the end user

00:17:36,400 --> 00:17:41,840
um so that's the bank side that's kind

00:17:40,080 --> 00:17:42,880
of like those are the key things that

00:17:41,840 --> 00:17:45,440
was a lot

00:17:42,880 --> 00:17:46,000
um the next project i'm going to talk

00:17:45,440 --> 00:17:50,000
about

00:17:46,000 --> 00:17:52,720
is i don't have any screenshots of

00:17:50,000 --> 00:17:53,360
it is still in the proof of content

00:17:52,720 --> 00:17:57,039
phase

00:17:53,360 --> 00:18:00,240
um what they're doing is aggregating

00:17:57,039 --> 00:18:03,200
data from drupal um

00:18:00,240 --> 00:18:03,760
social media and also a store and

00:18:03,200 --> 00:18:07,440
they're

00:18:03,760 --> 00:18:10,480
using gaps beyond the front end

00:18:07,440 --> 00:18:12,160
but this is going to be like

00:18:10,480 --> 00:18:14,000
pretty similar to what we were talking

00:18:12,160 --> 00:18:17,039
about before so

00:18:14,000 --> 00:18:17,600
what they need to do with this proof of

00:18:17,039 --> 00:18:20,960
concept

00:18:17,600 --> 00:18:24,000
site is deliver deliver artists

00:18:20,960 --> 00:18:25,600
like music artist information to

00:18:24,000 --> 00:18:28,000
all the fans that want to see it and

00:18:25,600 --> 00:18:29,919
they all want really great experiences

00:18:28,000 --> 00:18:31,280
and they already want to see it right

00:18:29,919 --> 00:18:34,480
away

00:18:31,280 --> 00:18:35,200
so the structure architecture they're

00:18:34,480 --> 00:18:36,799
considering

00:18:35,200 --> 00:18:39,039
or they're actually working with right

00:18:36,799 --> 00:18:42,080
now uses gatsby

00:18:39,039 --> 00:18:43,520
to pull in information from drupal from

00:18:42,080 --> 00:18:45,760
their ecommerce site and they're

00:18:43,520 --> 00:18:47,440
actually using drupal kind of similar to

00:18:45,760 --> 00:18:49,600
what i was talking about before as an

00:18:47,440 --> 00:18:52,240
aggregator

00:18:49,600 --> 00:18:54,480
and then doing the gatsby build creates

00:18:52,240 --> 00:18:55,280
a static site that they can load in a

00:18:54,480 --> 00:18:58,240
cdn

00:18:55,280 --> 00:18:58,559
and then use the cdn network to push

00:18:58,240 --> 00:19:01,440
that

00:18:58,559 --> 00:19:02,000
out closest to their fans the fans get

00:19:01,440 --> 00:19:05,200
that

00:19:02,000 --> 00:19:07,440
unified experience

00:19:05,200 --> 00:19:09,520
being able to get access to all the

00:19:07,440 --> 00:19:11,760
information that the artist puts out

00:19:09,520 --> 00:19:13,120
but maybe the artist isn't updating

00:19:11,760 --> 00:19:14,960
drupal directly

00:19:13,120 --> 00:19:16,559
maybe the artist is updating social

00:19:14,960 --> 00:19:20,160
media maybe

00:19:16,559 --> 00:19:21,520
they're updating things on youtube um

00:19:20,160 --> 00:19:23,600
that's social but it's a little

00:19:21,520 --> 00:19:25,840
different maybe they are

00:19:23,600 --> 00:19:28,160
sending information along with like the

00:19:25,840 --> 00:19:30,720
liner notes to their the record label

00:19:28,160 --> 00:19:31,679
all that gets pulled in and it just

00:19:30,720 --> 00:19:35,440
looks like

00:19:31,679 --> 00:19:39,120
a great like front end user experience

00:19:35,440 --> 00:19:42,160
got some gaps available that's awesome

00:19:39,120 --> 00:19:45,200
so in this example i don't

00:19:42,160 --> 00:19:48,400
have um that

00:19:45,200 --> 00:19:48,880
gatsby is self-hosted but i want to use

00:19:48,400 --> 00:19:51,440
this

00:19:48,880 --> 00:19:52,080
as an experience as an example to show

00:19:51,440 --> 00:19:54,480
you a little

00:19:52,080 --> 00:19:56,880
bit of like that aggregation that i was

00:19:54,480 --> 00:20:00,240
talking about earlier so

00:19:56,880 --> 00:20:02,159
they pull in data to drupal from

00:20:00,240 --> 00:20:03,520
all those different sources marketing

00:20:02,159 --> 00:20:06,400
content email

00:20:03,520 --> 00:20:07,440
youtube spotify ticketing there's a few

00:20:06,400 --> 00:20:09,679
more

00:20:07,440 --> 00:20:10,799
made the slides cluttered and they're

00:20:09,679 --> 00:20:14,640
doing that through

00:20:10,799 --> 00:20:18,080
a series of migrations and through using

00:20:14,640 --> 00:20:21,120
json api rest api directly to

00:20:18,080 --> 00:20:23,200
drupal using drupal to categorize and

00:20:21,120 --> 00:20:27,280
unify

00:20:23,200 --> 00:20:30,240
and sort the information then using

00:20:27,280 --> 00:20:31,600
gatsby to really do the presentation

00:20:30,240 --> 00:20:33,600
layer

00:20:31,600 --> 00:20:34,640
gatsby's already also talking to their

00:20:33,600 --> 00:20:39,200
e-commerce

00:20:34,640 --> 00:20:42,400
platform you do builds from gatsby to

00:20:39,200 --> 00:20:49,039
drupal to create the static html which

00:20:42,400 --> 00:20:53,440
then they can load in this weekend

00:20:49,039 --> 00:20:53,440
okay so

00:20:57,840 --> 00:21:03,840
gatsby itself

00:21:04,080 --> 00:21:10,080
use graphql and you can set

00:21:07,600 --> 00:21:12,480
in you can have it use json api so

00:21:10,080 --> 00:21:17,840
graphql and json and pi both work

00:21:12,480 --> 00:21:17,840
a little bit differently um let me see

00:21:20,799 --> 00:21:27,200
oh gotcha okay so just in terms of like

00:21:25,039 --> 00:21:29,200
i thought i'd lay this out just because

00:21:27,200 --> 00:21:31,600
not everybody like

00:21:29,200 --> 00:21:32,880
looks at the caching layer because

00:21:31,600 --> 00:21:35,679
graphql

00:21:32,880 --> 00:21:36,480
graphql is great and that is an amazing

00:21:35,679 --> 00:21:39,840
structured

00:21:36,480 --> 00:21:43,520
query language um

00:21:39,840 --> 00:21:46,799
it will send a request usually um

00:21:43,520 --> 00:21:50,880
quadruple drupal builds the response

00:21:46,799 --> 00:21:54,159
and sends that directly to the front end

00:21:50,880 --> 00:21:55,440
um what we found kind of like

00:21:54,159 --> 00:21:57,600
practically speaking

00:21:55,440 --> 00:21:59,039
is it really helps if you're using

00:21:57,600 --> 00:22:02,080
graphql

00:21:59,039 --> 00:22:04,799
to add in caching as

00:22:02,080 --> 00:22:06,559
a like a database caching layer like uh

00:22:04,799 --> 00:22:10,240
we use memcache and aqua

00:22:06,559 --> 00:22:14,400
but redis is similar um jsonip

00:22:10,240 --> 00:22:17,760
json api gives you the ability to cache

00:22:14,400 --> 00:22:21,440
in a front-end caching system like

00:22:17,760 --> 00:22:23,760
varnish or a cdn um

00:22:21,440 --> 00:22:24,559
and what that allows you to do is the

00:22:23,760 --> 00:22:27,200
front end

00:22:24,559 --> 00:22:28,960
can go back to that fast cache in this

00:22:27,200 --> 00:22:32,159
case like a varnish cast

00:22:28,960 --> 00:22:33,120
cache and that gets delivered quickly to

00:22:32,159 --> 00:22:35,600
the front end

00:22:33,120 --> 00:22:36,960
if there's a unique json api request

00:22:35,600 --> 00:22:39,120
it'll go to drupal

00:22:36,960 --> 00:22:41,760
they'll just that'll build a response

00:22:39,120 --> 00:22:45,280
and then send it back to the front end

00:22:41,760 --> 00:22:48,400
uh triple at aqueous we use with per

00:22:45,280 --> 00:22:52,080
the purge module and so we send set

00:22:48,400 --> 00:22:52,720
long cache lifetimes and use the purge

00:22:52,080 --> 00:22:56,400
module

00:22:52,720 --> 00:23:00,400
to purge individual assets

00:22:56,400 --> 00:23:03,919
and json api strings so that

00:23:00,400 --> 00:23:04,720
when some content is updated that asset

00:23:03,919 --> 00:23:07,360
is updated

00:23:04,720 --> 00:23:09,039
right away in varnish and then the

00:23:07,360 --> 00:23:13,600
front-end caching systems

00:23:09,039 --> 00:23:13,600
and is accessible to the front-end layer

00:23:19,760 --> 00:23:25,840
cool and then json apis and core

00:23:23,120 --> 00:23:26,640
which is great and varnish caching is

00:23:25,840 --> 00:23:30,320
just a

00:23:26,640 --> 00:23:32,960
a matter of enabling caches so it's

00:23:30,320 --> 00:23:33,360
you don't have to do anything separate

00:23:32,960 --> 00:23:36,640
or

00:23:33,360 --> 00:23:39,039
different to enable varnish caching

00:23:36,640 --> 00:23:40,480
for json api you just have json api

00:23:39,039 --> 00:23:42,400
enabled and then you go to the

00:23:40,480 --> 00:23:44,720
performance settings and you set your

00:23:42,400 --> 00:23:47,200
cache lifetime

00:23:44,720 --> 00:23:48,720
we just kind of like charted this out to

00:23:47,200 --> 00:23:51,600
show you a little bit

00:23:48,720 --> 00:23:52,240
of what that can do for you so this is

00:23:51,600 --> 00:23:55,440
that

00:23:52,240 --> 00:23:58,640
that um we're just looking at it from

00:23:55,440 --> 00:24:00,400
the drupal stack perspective it's a

00:23:58,640 --> 00:24:01,919
little confusing because we

00:24:00,400 --> 00:24:04,559
use a bunch of software on our drupal

00:24:01,919 --> 00:24:08,400
stack but the total number of requests

00:24:04,559 --> 00:24:09,840
is like the top left corner purple

00:24:08,400 --> 00:24:12,559
and you can see there's a lot of

00:24:09,840 --> 00:24:15,120
requests that come in for a build

00:24:12,559 --> 00:24:16,640
if you are using json api you can send a

00:24:15,120 --> 00:24:18,720
lot of those to varnish

00:24:16,640 --> 00:24:21,520
and have a fewer number of requests that

00:24:18,720 --> 00:24:24,400
are actually going to apache in drupal

00:24:21,520 --> 00:24:25,120
and that reduces the load that you have

00:24:24,400 --> 00:24:28,480
on

00:24:25,120 --> 00:24:31,600
your database layer so mysql and then

00:24:28,480 --> 00:24:33,840
also pulling from them cache

00:24:31,600 --> 00:24:35,919
so practically speaking it means you can

00:24:33,840 --> 00:24:47,840
do a lot more

00:24:35,919 --> 00:24:47,840
with less of like a hardware spend

00:24:49,039 --> 00:24:53,039
so the json api um

00:24:53,120 --> 00:24:58,799
like that part is kind of like static

00:24:56,559 --> 00:25:01,039
like it builds

00:24:58,799 --> 00:25:02,320
the file and then it can be saved in

00:25:01,039 --> 00:25:05,760
varnish

00:25:02,320 --> 00:25:09,120
but then if you make a change to a node

00:25:05,760 --> 00:25:09,840
or a you know content on your drupal

00:25:09,120 --> 00:25:13,120
site

00:25:09,840 --> 00:25:15,760
you can use the purge model module and

00:25:13,120 --> 00:25:18,799
the right plugin and clear that out as

00:25:15,760 --> 00:25:18,799
soon as you need it to

00:25:19,840 --> 00:25:25,679
and it depends a little bit on how you

00:25:22,880 --> 00:25:25,679
build that front end

00:25:26,840 --> 00:25:29,840
application

00:25:32,159 --> 00:25:36,960
so okay that's a good point i should go

00:25:35,440 --> 00:25:40,080
through the numbers

00:25:36,960 --> 00:25:41,360
so in terms of total requests on these

00:25:40,080 --> 00:25:44,640
graphs

00:25:41,360 --> 00:25:46,640
um they're talking about 30 000

00:25:44,640 --> 00:25:49,120
requests this is kind of like the peak

00:25:46,640 --> 00:25:52,240
that's the top line

00:25:49,120 --> 00:25:53,120
for over 15 minutes um you can send

00:25:52,240 --> 00:25:56,240
about

00:25:53,120 --> 00:25:57,120
in this example about 20 thousand at

00:25:56,240 --> 00:26:00,559
peak

00:25:57,120 --> 00:26:03,840
um average more like ten thousand um

00:26:00,559 --> 00:26:05,919
was sent to varnish which means that

00:26:03,840 --> 00:26:08,000
you have occasional peaks up to twenty

00:26:05,919 --> 00:26:11,440
thousand requests to

00:26:08,000 --> 00:26:14,720
the drupal but you're more your average

00:26:11,440 --> 00:26:14,720
peaks a lot lower

00:26:17,440 --> 00:26:22,240
and yeah graphql can include caching

00:26:22,799 --> 00:26:28,559
and that also just means that the number

00:26:24,559 --> 00:26:28,559
of requests to sequel are a little lower

00:26:33,360 --> 00:26:37,760
so enabling i talked a little bit about

00:26:35,440 --> 00:26:39,120
this before but this is just kind of

00:26:37,760 --> 00:26:42,960
reviewing

00:26:39,120 --> 00:26:44,799
um decent ipa is included in corey you

00:26:42,960 --> 00:26:46,799
can just enable it

00:26:44,799 --> 00:26:48,880
i mean it really is kind of that simple

00:26:46,799 --> 00:26:51,039
setting a cache lifetime

00:26:48,880 --> 00:26:53,039
if you're already using a front-end

00:26:51,039 --> 00:26:55,919
cache like varnish it's

00:26:53,039 --> 00:26:58,400
pretty easy it's the pot purge model and

00:26:55,919 --> 00:27:02,559
the plug-in that works for your

00:26:58,400 --> 00:27:04,240
host or caching system um to clear

00:27:02,559 --> 00:27:07,840
that front-end cache when content's

00:27:04,240 --> 00:27:09,919
updated um

00:27:07,840 --> 00:27:11,279
it's really helped the people that the

00:27:09,919 --> 00:27:14,320
projects that i've worked on

00:27:11,279 --> 00:27:15,120
to remove access to unneeded files and

00:27:14,320 --> 00:27:17,679
api

00:27:15,120 --> 00:27:18,559
the json api extras modules have been

00:27:17,679 --> 00:27:21,840
super helpful

00:27:18,559 --> 00:27:21,840
for that

00:27:22,559 --> 00:27:29,600
and then this

00:27:25,679 --> 00:27:33,520
that project that i'm talking about is

00:27:29,600 --> 00:27:34,240
mostly uh yeah it's you're using varnish

00:27:33,520 --> 00:27:37,600
usually with

00:27:34,240 --> 00:27:40,720
um anonymous traffic or if you're doing

00:27:37,600 --> 00:27:41,279
something like securing all of the

00:27:40,720 --> 00:27:44,640
traffic

00:27:41,279 --> 00:27:46,799
so in this project

00:27:44,640 --> 00:27:48,080
all of this traffic can come in and is

00:27:46,799 --> 00:27:51,039
handled by varnish

00:27:48,080 --> 00:27:51,919
because the drupal is only delivering

00:27:51,039 --> 00:27:55,520
content to

00:27:51,919 --> 00:27:56,559
gatsby um the access control is actually

00:27:55,520 --> 00:28:00,840
handled

00:27:56,559 --> 00:28:04,159
in um through allow and deny

00:28:00,840 --> 00:28:05,600
lists and then there's another way you

00:28:04,159 --> 00:28:08,559
can do it which is

00:28:05,600 --> 00:28:09,039
use the push the authentication to the

00:28:08,559 --> 00:28:11,919
edge

00:28:09,039 --> 00:28:13,600
and that is what this next project i'm

00:28:11,919 --> 00:28:17,120
going to talk about does

00:28:13,600 --> 00:28:18,320
um it's an event platform it's like the

00:28:17,120 --> 00:28:20,799
event platform we're

00:28:18,320 --> 00:28:21,440
using right now except it is built and

00:28:20,799 --> 00:28:24,960
react

00:28:21,440 --> 00:28:28,159
and it has a drupal backend um and

00:28:24,960 --> 00:28:30,799
it's completely closed system all of the

00:28:28,159 --> 00:28:34,320
traffic is authenticated

00:28:30,799 --> 00:28:37,760
and it was built to be a trusted secure

00:28:34,320 --> 00:28:40,640
place to host events for

00:28:37,760 --> 00:28:42,960
a particular company and save progress

00:28:40,640 --> 00:28:46,240
like through videos and certification

00:28:42,960 --> 00:28:49,120
programs and learning programs

00:28:46,240 --> 00:28:50,720
drupal's also used to manage media

00:28:49,120 --> 00:28:54,720
digital assets

00:28:50,720 --> 00:28:57,919
shareable assets with the site visitors

00:28:54,720 --> 00:29:00,640
during events so it's really important

00:28:57,919 --> 00:29:03,120
on this one that the

00:29:00,640 --> 00:29:03,760
front node front end is turning away and

00:29:03,120 --> 00:29:06,240
handling

00:29:03,760 --> 00:29:13,840
live events and drupal's being used to

00:29:06,240 --> 00:29:13,840
update and add information

00:29:14,320 --> 00:29:19,120
so this one's just a little bit a lot

00:29:16,960 --> 00:29:21,279
more complicated

00:29:19,120 --> 00:29:23,200
in terms of this diagram and it is going

00:29:21,279 --> 00:29:25,760
to be too small and blurry and i'm so

00:29:23,200 --> 00:29:26,399
sorry um so i'll just walk you through

00:29:25,760 --> 00:29:29,840
it

00:29:26,399 --> 00:29:30,480
um basically when the site visitor comes

00:29:29,840 --> 00:29:33,919
in

00:29:30,480 --> 00:29:38,240
there's an initial request to the cdn

00:29:33,919 --> 00:29:41,840
and assets that don't require a login

00:29:38,240 --> 00:29:41,840
are just delivered right away

00:29:42,000 --> 00:29:45,919
then they get to the front end

00:29:44,720 --> 00:29:48,240
application

00:29:45,919 --> 00:29:50,159
they need to log in to be able to access

00:29:48,240 --> 00:29:50,720
any information that's handled through

00:29:50,159 --> 00:29:53,200
giga

00:29:50,720 --> 00:29:54,480
so it's in the browser and then it logs

00:29:53,200 --> 00:29:57,360
them into not just

00:29:54,480 --> 00:29:57,919
the platform site but the whole network

00:29:57,360 --> 00:30:00,559
of sites

00:29:57,919 --> 00:30:02,159
that company uses which is really handy

00:30:00,559 --> 00:30:04,480
because it gives them that seamless

00:30:02,159 --> 00:30:06,720
experience through the entire network of

00:30:04,480 --> 00:30:09,840
sites

00:30:06,720 --> 00:30:09,840
then um

00:30:11,840 --> 00:30:15,919
once they're logged in they usually go

00:30:13,679 --> 00:30:18,080
to like a main page like a landing page

00:30:15,919 --> 00:30:18,399
or a senate page is very similar to this

00:30:18,080 --> 00:30:21,679
hop

00:30:18,399 --> 00:30:24,480
in platform that we're in right now

00:30:21,679 --> 00:30:24,880
and um there's a chat that runs through

00:30:24,480 --> 00:30:28,159
and

00:30:24,880 --> 00:30:31,600
grabs usually um also a little

00:30:28,159 --> 00:30:35,279
uh a headshot or

00:30:31,600 --> 00:30:37,120
um icon of their image that they loaded

00:30:35,279 --> 00:30:39,520
they're all talking to each other

00:30:37,120 --> 00:30:41,840
those are the delivered that's delivered

00:30:39,520 --> 00:30:43,919
through the embedded video platform

00:30:41,840 --> 00:30:45,760
um so that's actually a separate system

00:30:43,919 --> 00:30:47,039
that's also interacting with this

00:30:45,760 --> 00:30:49,600
front-end

00:30:47,039 --> 00:30:51,039
site for everything that has to go back

00:30:49,600 --> 00:30:54,960
has to do with the

00:30:51,039 --> 00:30:58,559
individual's consultant's progress or

00:30:54,960 --> 00:31:00,640
something that's like specific to them

00:30:58,559 --> 00:31:03,279
there's also like a drupal request that

00:31:00,640 --> 00:31:05,919
goes back to the triple air

00:31:03,279 --> 00:31:08,320
and then also for some of the pages

00:31:05,919 --> 00:31:10,960
menus and assets that

00:31:08,320 --> 00:31:12,960
goes back to the drupal layer i call it

00:31:10,960 --> 00:31:13,919
the drupal error but it also includes a

00:31:12,960 --> 00:31:16,960
varnish catch

00:31:13,919 --> 00:31:20,880
which is really helpful in terms of

00:31:16,960 --> 00:31:20,880
delivering that content quickly

00:31:25,519 --> 00:31:29,200
i'm going to get to that left question

00:31:26,880 --> 00:31:29,200
later

00:31:30,000 --> 00:31:36,320
so on this particular platform because

00:31:33,600 --> 00:31:37,039
it is a live event platform it's pretty

00:31:36,320 --> 00:31:39,519
quiet

00:31:37,039 --> 00:31:41,760
until you have suddenly have a whole lot

00:31:39,519 --> 00:31:45,200
of people logging in at once

00:31:41,760 --> 00:31:46,240
so it's been really helpful for this one

00:31:45,200 --> 00:31:48,720
and in addition

00:31:46,240 --> 00:31:49,440
to having like varnish cache is also

00:31:48,720 --> 00:31:52,559
have a

00:31:49,440 --> 00:31:55,039
front end cache and an external cdn

00:31:52,559 --> 00:31:56,399
to really deliver some of the like

00:31:55,039 --> 00:32:02,399
smaller assets

00:31:56,399 --> 00:32:02,399
um right out to the edge layer

00:32:03,200 --> 00:32:06,320
it's also the project where we learned

00:32:05,120 --> 00:32:08,159
that it is very

00:32:06,320 --> 00:32:09,600
important to be careful about what

00:32:08,159 --> 00:32:12,880
you're using to vary

00:32:09,600 --> 00:32:15,840
in that cdn in an early part

00:32:12,880 --> 00:32:16,559
stage of this project we act they

00:32:15,840 --> 00:32:19,360
accidentally

00:32:16,559 --> 00:32:20,240
set it to vary by user and then had a

00:32:19,360 --> 00:32:21,919
ten thousand

00:32:20,240 --> 00:32:23,760
like you know seven thousand user

00:32:21,919 --> 00:32:27,360
actually in that case event

00:32:23,760 --> 00:32:30,000
and our caching layers

00:32:27,360 --> 00:32:31,840
exploded on the front end the varying by

00:32:30,000 --> 00:32:36,640
user was

00:32:31,840 --> 00:32:40,000
not a good idea so double check

00:32:36,640 --> 00:32:42,960
what you're using to vary um

00:32:40,000 --> 00:32:44,799
it is really important to get that right

00:32:42,960 --> 00:32:46,320
especially before you deliver a bunch of

00:32:44,799 --> 00:32:49,519
traffic to it

00:32:46,320 --> 00:32:51,200
also if you're doing um handling varnish

00:32:49,519 --> 00:32:52,159
through like a balancer layer like we do

00:32:51,200 --> 00:32:54,320
at aqua

00:32:52,159 --> 00:32:55,200
if you're cashing all the assets and

00:32:54,320 --> 00:32:59,600
you're cashing

00:32:55,200 --> 00:33:03,039
json api on top of it that can be a big

00:32:59,600 --> 00:33:05,200
level like that can be a lot to cash

00:33:03,039 --> 00:33:07,120
so make sure you beef up the balancer

00:33:05,200 --> 00:33:10,399
later

00:33:07,120 --> 00:33:11,200
it is really amazing what those caching

00:33:10,399 --> 00:33:13,279
levels

00:33:11,200 --> 00:33:15,279
layers can do they can really speed the

00:33:13,279 --> 00:33:18,559
delivery of assaults but sometimes they

00:33:15,279 --> 00:33:21,840
can slow everything down

00:33:18,559 --> 00:33:24,960
and also json api x-rays is great

00:33:21,840 --> 00:33:27,760
uh perch works really well

00:33:24,960 --> 00:33:29,440
um this is just looking because i

00:33:27,760 --> 00:33:33,200
promised failures right

00:33:29,440 --> 00:33:35,919
this is looking at some an actual

00:33:33,200 --> 00:33:36,640
real life failure that happened with

00:33:35,919 --> 00:33:40,480
this event

00:33:36,640 --> 00:33:42,640
site and what we did this is

00:33:40,480 --> 00:33:43,840
one of those where we did not have the

00:33:42,640 --> 00:33:47,519
balancer layer

00:33:43,840 --> 00:33:50,960
uh beefy enough so our varnish cache

00:33:47,519 --> 00:33:54,080
did was not on big enough hardware

00:33:50,960 --> 00:33:56,000
so what we see on this is that the the

00:33:54,080 --> 00:33:59,120
front end stock the node stack

00:33:56,000 --> 00:34:00,559
has this really smooth like ramp up in

00:33:59,120 --> 00:34:03,519
requests per second

00:34:00,559 --> 00:34:05,200
and then all of a sudden the cpu just

00:34:03,519 --> 00:34:08,000
starts spiking

00:34:05,200 --> 00:34:10,240
that's when that front end stack was

00:34:08,000 --> 00:34:11,520
trying to get to the back end stack and

00:34:10,240 --> 00:34:15,280
the back end stack

00:34:11,520 --> 00:34:18,240
that um that caching layer was just busy

00:34:15,280 --> 00:34:19,119
uh it's had too many requests coming in

00:34:18,240 --> 00:34:22,480
at once

00:34:19,119 --> 00:34:23,040
and even the io like even the requests

00:34:22,480 --> 00:34:25,359
coming in

00:34:23,040 --> 00:34:26,560
and the request coming back it was just

00:34:25,359 --> 00:34:28,720
too fast

00:34:26,560 --> 00:34:29,599
too much for it to handle so what

00:34:28,720 --> 00:34:33,119
happened

00:34:29,599 --> 00:34:35,679
was that cpu went to the sky

00:34:33,119 --> 00:34:37,359
so in this case it didn't break the

00:34:35,679 --> 00:34:40,800
front inside at all

00:34:37,359 --> 00:34:42,960
um it did cause for new users to

00:34:40,800 --> 00:34:44,240
not be able to log in as quickly as they

00:34:42,960 --> 00:34:45,599
wanted to

00:34:44,240 --> 00:34:47,599
but you can see what's happening with

00:34:45,599 --> 00:34:50,000
like cpu and memory

00:34:47,599 --> 00:34:51,919
and then when that tailed off is

00:34:50,000 --> 00:34:52,399
actually getting close to the end of the

00:34:51,919 --> 00:34:54,480
event

00:34:52,399 --> 00:34:57,599
and the number of people logging it

00:34:54,480 --> 00:34:57,599
actually tails off

00:34:58,640 --> 00:35:04,560
and you can see the load kind of like

00:35:00,800 --> 00:35:08,160
checking up and down at the same time

00:35:04,560 --> 00:35:11,200
so this is not how you do it so

00:35:08,160 --> 00:35:12,320
what would you do so i was thinking

00:35:11,200 --> 00:35:15,440
about like

00:35:12,320 --> 00:35:18,079
what is the best advice to try to give

00:35:15,440 --> 00:35:20,079
people if they're trying to prepare for

00:35:18,079 --> 00:35:21,680
this kind of traffic where it all comes

00:35:20,079 --> 00:35:24,240
in

00:35:21,680 --> 00:35:24,880
we know that everybody tries to log into

00:35:24,240 --> 00:35:28,800
an event

00:35:24,880 --> 00:35:31,440
at the last possible minute um

00:35:28,800 --> 00:35:33,359
but what are what are things that you

00:35:31,440 --> 00:35:34,000
can do to help prepare for something

00:35:33,359 --> 00:35:37,040
like this

00:35:34,000 --> 00:35:40,400
um i think number one

00:35:37,040 --> 00:35:42,720
if you're using drupal make sure you're

00:35:40,400 --> 00:35:45,359
optimising your drupal caching strategy

00:35:42,720 --> 00:35:46,240
um and by that just like make sure check

00:35:45,359 --> 00:35:47,920
through your views

00:35:46,240 --> 00:35:50,640
check through the way the site's about

00:35:47,920 --> 00:35:52,640
make sure that um

00:35:50,640 --> 00:35:54,320
like the basics are covered that you're

00:35:52,640 --> 00:35:58,079
using good caching

00:35:54,320 --> 00:36:00,400
um also take a look at your assets and

00:35:58,079 --> 00:36:03,119
just make sure that there are size that

00:36:00,400 --> 00:36:06,079
can be delivered like images and pdfs

00:36:03,119 --> 00:36:08,880
and all those things can be delivered

00:36:06,079 --> 00:36:10,640
quickly and easy easily to the front end

00:36:08,880 --> 00:36:13,440
consumer

00:36:10,640 --> 00:36:15,119
audit your entities and fields where

00:36:13,440 --> 00:36:17,599
it's possible

00:36:15,119 --> 00:36:18,720
disable access or turn things off if

00:36:17,599 --> 00:36:21,040
there are places

00:36:18,720 --> 00:36:23,680
if you know a traffic event is coming

00:36:21,040 --> 00:36:26,880
and you have some seldom used apis

00:36:23,680 --> 00:36:27,920
go ahead and just shut it down features

00:36:26,880 --> 00:36:31,200
you don't need

00:36:27,920 --> 00:36:32,320
shut them down um because the last thing

00:36:31,200 --> 00:36:34,480
you need is to be like

00:36:32,320 --> 00:36:36,480
in a high traffic situation and have

00:36:34,480 --> 00:36:37,760
somebody like trigger something resource

00:36:36,480 --> 00:36:41,280
intensive

00:36:37,760 --> 00:36:42,400
on the site i'm using cdn upsize your

00:36:41,280 --> 00:36:45,839
balancer

00:36:42,400 --> 00:36:47,920
test test load test um

00:36:45,839 --> 00:36:49,920
cache warming and then i don't have on

00:36:47,920 --> 00:36:52,320
here and i should the json api

00:36:49,920 --> 00:36:54,440
extras but it's really great and then

00:36:52,320 --> 00:36:58,720
also the um

00:36:54,440 --> 00:37:01,119
drupal.org if you look in the json api

00:36:58,720 --> 00:37:02,560
documentation there is security

00:37:01,119 --> 00:37:04,960
consideration

00:37:02,560 --> 00:37:05,760
um document that's really great if you

00:37:04,960 --> 00:37:07,440
just run

00:37:05,760 --> 00:37:09,200
through everything the security

00:37:07,440 --> 00:37:10,320
considerations document you're in a

00:37:09,200 --> 00:37:14,160
really good

00:37:10,320 --> 00:37:14,160
spot for handling traffic

00:37:15,040 --> 00:37:19,200
the other thing that i thought was like

00:37:18,000 --> 00:37:23,359
a good solution

00:37:19,200 --> 00:37:24,560
so this is the same setup right it's the

00:37:23,359 --> 00:37:28,320
event site

00:37:24,560 --> 00:37:28,320
and node stack in the drupal sec

00:37:28,720 --> 00:37:33,040
um and it's actually very similar to the

00:37:31,520 --> 00:37:35,040
it's

00:37:33,040 --> 00:37:36,640
see which one is this this is actually

00:37:35,040 --> 00:37:40,480
more users logging in

00:37:36,640 --> 00:37:43,200
than the last one they were able to keep

00:37:40,480 --> 00:37:44,880
the cpu and everything under control and

00:37:43,200 --> 00:37:47,920
we did that

00:37:44,880 --> 00:37:48,800
with a combination of really going

00:37:47,920 --> 00:37:52,240
through

00:37:48,800 --> 00:37:55,920
and dialing in the caching strategy

00:37:52,240 --> 00:37:58,880
also um upsizing you know

00:37:55,920 --> 00:37:59,839
what hardware we had and then also they

00:37:58,880 --> 00:38:03,359
did a really

00:37:59,839 --> 00:38:04,240
good job of incentivizing people to join

00:38:03,359 --> 00:38:07,440
the event

00:38:04,240 --> 00:38:08,400
sooner and what that did was it lowered

00:38:07,440 --> 00:38:10,400
the peak

00:38:08,400 --> 00:38:12,079
it lowered the maximum number of

00:38:10,400 --> 00:38:15,920
requests so you could actually

00:38:12,079 --> 00:38:19,440
handle that this a larger

00:38:15,920 --> 00:38:23,280
volume of site visitors by

00:38:19,440 --> 00:38:23,280
spreading out the data platform

00:38:26,400 --> 00:38:33,680
cool anyway i thought that was a really

00:38:29,440 --> 00:38:35,599
great idea so think of two like

00:38:33,680 --> 00:38:36,800
as you're going through this situation

00:38:35,599 --> 00:38:39,920
sometimes

00:38:36,800 --> 00:38:41,520
like the answer is technological but

00:38:39,920 --> 00:38:44,320
sometimes the answer is like

00:38:41,520 --> 00:38:45,680
social and if you can incentivize people

00:38:44,320 --> 00:38:49,119
to do a behavior

00:38:45,680 --> 00:38:52,640
that helps your website like

00:38:49,119 --> 00:38:54,880
that can be good too um that's the end

00:38:52,640 --> 00:38:56,720
of like my pre

00:38:54,880 --> 00:38:58,720
pre-done part of my talk it looks like

00:38:56,720 --> 00:39:00,240
we have just a few more minutes

00:38:58,720 --> 00:39:02,160
um and there are a lot of great

00:39:00,240 --> 00:39:03,359
questions and i have really been

00:39:02,160 --> 00:39:06,720
appreciating

00:39:03,359 --> 00:39:08,480
how you guys have answered

00:39:06,720 --> 00:39:11,680
questions for each other through here

00:39:08,480 --> 00:39:11,680
that's all amazing

00:39:12,839 --> 00:39:19,520
um

00:39:15,359 --> 00:39:22,160
so to get to steve's thing

00:39:19,520 --> 00:39:24,160
the re the way that you would move

00:39:22,160 --> 00:39:27,440
authentication to a browser

00:39:24,160 --> 00:39:28,560
is by using um like a single sign-on

00:39:27,440 --> 00:39:31,599
solution

00:39:28,560 --> 00:39:34,720
um gigia has one and there are

00:39:31,599 --> 00:39:38,000
others that will allow you to

00:39:34,720 --> 00:39:43,839
manage the sign-ons through um

00:39:38,000 --> 00:39:43,839
like javascript in the browser layer

00:39:51,040 --> 00:39:54,800
so you can if you have authenticated

00:39:53,280 --> 00:39:57,599
users

00:39:54,800 --> 00:39:59,599
you're really in that situation where

00:39:57,599 --> 00:40:00,079
the front-end caching layers won't work

00:39:59,599 --> 00:40:01,839
for you

00:40:00,079 --> 00:40:04,079
and you really have to look at back-end

00:40:01,839 --> 00:40:06,480
caching like what are ways

00:40:04,079 --> 00:40:07,520
that you can improve that database

00:40:06,480 --> 00:40:09,760
performance

00:40:07,520 --> 00:40:10,960
it's like memcache is one of them radius

00:40:09,760 --> 00:40:13,200
is one of them

00:40:10,960 --> 00:40:13,200
um

00:40:14,880 --> 00:40:18,000
being able to like spin up new pots

00:40:17,200 --> 00:40:21,200
might be

00:40:18,000 --> 00:40:22,160
um probably not actually now that i

00:40:21,200 --> 00:40:25,440
think about it

00:40:22,160 --> 00:40:28,079
but um basically you're taking that

00:40:25,440 --> 00:40:30,000
same kind of performance problem you

00:40:28,079 --> 00:40:32,720
just have shifted it to a slightly

00:40:30,000 --> 00:40:32,720
different place

00:40:35,680 --> 00:40:43,680
with content localization in translation

00:40:40,319 --> 00:40:47,520
you often have like a vary by

00:40:43,680 --> 00:40:50,480
country so if you can vary by country

00:40:47,520 --> 00:40:51,040
then um that opens up it's almost like a

00:40:50,480 --> 00:40:54,000
different

00:40:51,040 --> 00:40:56,079
cash bucket and you pull information out

00:40:54,000 --> 00:40:58,240
of that cash bucket i think that is like

00:40:56,079 --> 00:40:59,359
the simplest approach that's been like

00:40:58,240 --> 00:41:03,040
workable

00:40:59,359 --> 00:41:04,319
that i've run into um other solutions

00:41:03,040 --> 00:41:06,880
haven't worked as well

00:41:04,319 --> 00:41:09,520
because sometimes you if you aren't like

00:41:06,880 --> 00:41:12,880
properly

00:41:09,520 --> 00:41:13,839
setting that that cash id or that vary

00:41:12,880 --> 00:41:16,480
by

00:41:13,839 --> 00:41:17,280
in a country specific way what i've seen

00:41:16,480 --> 00:41:20,160
in real life

00:41:17,280 --> 00:41:22,160
is um like translated content

00:41:20,160 --> 00:41:23,760
accidentally being shown to users

00:41:22,160 --> 00:41:27,119
instead of the english content or

00:41:23,760 --> 00:41:29,599
the other way around so with the very

00:41:27,119 --> 00:41:31,040
you can vary by country in the cds

00:41:29,599 --> 00:41:33,599
that's one way to handle it

00:41:31,040 --> 00:41:35,839
another way to handle it is to double

00:41:33,599 --> 00:41:36,720
check that the cache id that drupal is

00:41:35,839 --> 00:41:39,839
using

00:41:36,720 --> 00:41:43,359
is actually enough of a different

00:41:39,839 --> 00:41:45,599
id and then also that that is

00:41:43,359 --> 00:41:49,440
bubbling up in drupal and then bubbling

00:41:45,599 --> 00:41:51,200
up into your external caching layers

00:41:49,440 --> 00:42:02,560
it's a little esoteric but hopefully

00:41:51,200 --> 00:42:05,440
that makes sense cool

00:42:02,560 --> 00:42:07,530
yeah alejandra cordova and just gave you

00:42:05,440 --> 00:42:12,280
know the same answer in it so yeah

00:42:07,530 --> 00:42:12,280
[Laughter]

00:42:14,839 --> 00:42:21,200
um

00:42:17,440 --> 00:42:26,079
so you can have external applications

00:42:21,200 --> 00:42:26,079
consuming json api endpoints um

00:42:28,000 --> 00:42:32,880
so you could version the api i guess um

00:42:33,440 --> 00:42:37,280
you could version the api you could use

00:42:36,160 --> 00:42:40,480
cache

00:42:37,280 --> 00:42:44,400
right and then you're just using purge

00:42:40,480 --> 00:42:47,839
to like clear the cache and that updates

00:42:44,400 --> 00:42:51,599
a specific object if it's just specific

00:42:47,839 --> 00:42:52,400
object information if you want to add a

00:42:51,599 --> 00:42:55,520
new feature

00:42:52,400 --> 00:42:57,760
data model you don't know that as well

00:42:55,520 --> 00:42:59,440
but i'm hoping somebody else in here

00:42:57,760 --> 00:43:02,079
knows um there might be an

00:42:59,440 --> 00:43:03,440
answer to with the jason api extras or

00:43:02,079 --> 00:43:08,319
being able to change

00:43:03,440 --> 00:43:08,319
the path to the specific thing

00:43:10,560 --> 00:43:17,520
i think that's just about everything

00:43:15,440 --> 00:43:21,520
i think i'm running out of time it's

00:43:17,520 --> 00:43:21,520
been really great talking to everybody

00:43:22,079 --> 00:43:28,800
oh so aqua lift works

00:43:25,359 --> 00:43:31,040
in um the

00:43:28,800 --> 00:43:32,800
it's javascript and in the front end so

00:43:31,040 --> 00:43:34,480
the really important thing when you're

00:43:32,800 --> 00:43:37,200
working with decoupled

00:43:34,480 --> 00:43:38,560
decoupled architecture and aqua lift is

00:43:37,200 --> 00:43:41,359
just to make sure

00:43:38,560 --> 00:43:42,400
that you're able to include the lift

00:43:41,359 --> 00:43:45,680
code

00:43:42,400 --> 00:43:48,960
and then you might have to do some um

00:43:45,680 --> 00:43:52,319
when you create a slot it's a position

00:43:48,960 --> 00:43:54,160
to for customization it's called a slot

00:43:52,319 --> 00:43:55,839
in aqualift which is now being called

00:43:54,160 --> 00:43:58,560
awkward personalization

00:43:55,839 --> 00:44:00,240
um just to make sure that the slots that

00:43:58,560 --> 00:44:02,800
you're going to be using

00:44:00,240 --> 00:44:03,920
are included and then make sure that

00:44:02,800 --> 00:44:05,839
you're using

00:44:03,920 --> 00:44:07,359
with the other tool you're setting

00:44:05,839 --> 00:44:10,160
position information

00:44:07,359 --> 00:44:11,760
that'll match the slot and those are the

00:44:10,160 --> 00:44:14,720
key parts to kind of have

00:44:11,760 --> 00:44:15,920
all working together and we are happy to

00:44:14,720 --> 00:44:19,119
help you figure that out

00:44:15,920 --> 00:44:19,119
in detail

00:44:19,680 --> 00:44:27,920
all right thank you so much for coming

00:44:24,000 --> 00:44:27,920

YouTube URL: https://www.youtube.com/watch?v=IZqZ9I-BznY


