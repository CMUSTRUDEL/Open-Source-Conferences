Title: DrupalCon Austin 2014: HERE'S DRUPAL - TONIGHT ON THE TONIGHT SHOW WITH JIMMY FALLON
Publication date: 2014-06-04
Playlist: DrupalCon Austin - June 2014
Description: 
	Speakers: deviantintegralthebruce
Tonight on the Tonight Show, Jimmy welcomes semantic content deconstruction, node.js, and musical guest high-stakes distributed application development. Here's............Drupal?

Oh yes, the blue drop made a big splash on the Tonight Show web site, but you wouldn't know it by looking at it.

The world tuned in when Jay Leno handed the Tonight Show legacy over to new host, Jimmy Fallon. Behind the scenes, away from the cameras, an entirely different transition was taking place, led by CP+B, Four Kitchens, Lullabot, and NBC Digital. A new website for the Tonight Show was being launched.

We'll share how a distributed multi-national, multi-company team of Drupal, Node.js, Backbone, and editorial experts:

Developed a semantic content model unique to the Tonight Show
Delivered a future-facing Drupal 7 backend that foreshadows key features of Drupal 8
Triumphed over tight project constraints by fully exploiting a decoupled and distributed systems architecture.
Hosts Andrew Berry (deviantintegral) from Lullabot and David Diers (thebruce) from Four Kitchens present one episode at Drupalcon Austin that you don't want to miss.
Captions: 
	00:00:10,070 --> 00:00:22,320
we're here to tell tale from the recent

00:00:16,529 --> 00:00:27,000
past the hidden worlds disease and

00:00:22,320 --> 00:00:33,750
discuss or a big test listen sunset

00:00:27,000 --> 00:00:37,980
agenda and son loves Jimmy Fallon needed

00:00:33,750 --> 00:00:43,290
a lot of love drew kisses we drank it by

00:00:37,980 --> 00:00:46,520
the gallon we had no J's and a d8 facing

00:00:43,290 --> 00:00:50,190
architecture and a semantic content

00:00:46,520 --> 00:00:53,489
model a multinational distributors of

00:00:50,190 --> 00:01:00,930
our team and the workflow that did not

00:00:53,489 --> 00:01:06,659
throttle it was the sunday no Jimmy's

00:01:00,930 --> 00:01:11,430
have been used a lot of Drupal saw you

00:01:06,659 --> 00:01:16,590
drank it by the gallon so sure what I

00:01:11,430 --> 00:01:20,040
wish it and I think you will agree that

00:01:16,590 --> 00:01:23,310
for five o'clock on a tuesday at triple

00:01:20,040 --> 00:01:26,299
con austin 2014 there's no better place

00:01:23,310 --> 00:01:26,299
to

00:01:36,780 --> 00:01:43,420
well thank you everyone for being such a

00:01:41,049 --> 00:01:46,119
wonderful audience at our musical

00:01:43,420 --> 00:01:49,119
session today for those of you who don't

00:01:46,119 --> 00:01:51,580
know me my name is andrew Berry and I'm

00:01:49,119 --> 00:01:53,710
an architect at lullaby and up here with

00:01:51,580 --> 00:01:59,860
me on stages musical genius

00:01:53,710 --> 00:02:02,380
extraordinary David dyers tears these

00:01:59,860 --> 00:02:05,740
people I only took months and I still

00:02:02,380 --> 00:02:11,980
can't get it right and today we're going

00:02:05,740 --> 00:02:16,810
to be talking about The Tonight Show no

00:02:11,980 --> 00:02:21,730
no luckily for us we still have a

00:02:16,810 --> 00:02:24,580
keyboard so The Tonight Show is the

00:02:21,730 --> 00:02:27,220
longest-running television show in

00:02:24,580 --> 00:02:29,440
history I mean that like not just in

00:02:27,220 --> 00:02:32,560
North America not just in the

00:02:29,440 --> 00:02:35,049
english-speaking world but in all of the

00:02:32,560 --> 00:02:39,010
television that's ever been produced and

00:02:35,049 --> 00:02:41,950
that's 11,000 episodes of episodic

00:02:39,010 --> 00:02:47,350
content that's been produced since 1954

00:02:41,950 --> 00:02:52,780
and this is the tonight show website

00:02:47,350 --> 00:02:55,600
it's a responsive touch friendly a very

00:02:52,780 --> 00:02:58,690
dynamic website and when it comes down

00:02:55,600 --> 00:03:00,790
to it it's an app it's more than just a

00:02:58,690 --> 00:03:03,340
way for for documents to be presented on

00:03:00,790 --> 00:03:06,820
the web now for those of us who have

00:03:03,340 --> 00:03:09,400
been around the building websites for

00:03:06,820 --> 00:03:12,430
ten or more years we've really seen the

00:03:09,400 --> 00:03:15,310
internet take off as this tool for us to

00:03:12,430 --> 00:03:18,220
share our experiences with one another

00:03:15,310 --> 00:03:21,400
and with people who are really far away

00:03:18,220 --> 00:03:23,560
and disparate from ourselves and this

00:03:21,400 --> 00:03:26,049
was really important in the design of

00:03:23,560 --> 00:03:29,380
The Tonight Show website because the

00:03:26,049 --> 00:03:31,660
primary use case for the app is to make

00:03:29,380 --> 00:03:34,480
these shareable experiences in these

00:03:31,660 --> 00:03:37,120
sherab terrible moments from the show be

00:03:34,480 --> 00:03:39,519
able to be watched and viewed and then

00:03:37,120 --> 00:03:39,910
share it out to people you care about is

00:03:39,519 --> 00:03:42,550
easy

00:03:39,910 --> 00:03:44,470
as quickly as possible and as we were

00:03:42,550 --> 00:03:46,960
designing our architecture for the site

00:03:44,470 --> 00:03:49,630
whether it was technical or project or

00:03:46,960 --> 00:03:51,370
some other part of the site that's what

00:03:49,630 --> 00:03:53,410
we always came back to to keep us

00:03:51,370 --> 00:03:57,640
grounded in reality reality these

00:03:53,410 --> 00:04:01,390
concepts of shareable moments so yeah

00:03:57,640 --> 00:04:04,900
here's Drupal but but step back not

00:04:01,390 --> 00:04:07,360
really Drupal is just one component of

00:04:04,900 --> 00:04:09,550
several different systems that have all

00:04:07,360 --> 00:04:11,200
been built and tuned to work together to

00:04:09,550 --> 00:04:14,080
produce what you see in your browser

00:04:11,200 --> 00:04:15,940
today so today David and I we're going

00:04:14,080 --> 00:04:18,880
to talk about how we went all the way

00:04:15,940 --> 00:04:22,960
from a Drupal installation screen to

00:04:18,880 --> 00:04:25,750
what you can pull up now NBCUniversal is

00:04:22,960 --> 00:04:28,840
itself the amalgamation of two very

00:04:25,750 --> 00:04:31,180
large companies and in fact a couple

00:04:28,840 --> 00:04:33,310
years back NBCUniversal was bought out

00:04:31,180 --> 00:04:38,350
by comcast and together they have

00:04:33,310 --> 00:04:42,160
something like 106 336,000 employees at

00:04:38,350 --> 00:04:43,570
least that's what Wikipedia told me so

00:04:42,160 --> 00:04:46,420
as soon as you start thinking about

00:04:43,570 --> 00:04:48,790
organizations that large and that big

00:04:46,420 --> 00:04:50,190
and that many competing ideas and

00:04:48,790 --> 00:04:53,980
interest you're probably thinking

00:04:50,190 --> 00:04:55,990
enterprise software and least to me

00:04:53,980 --> 00:04:59,790
those words would probably make me think

00:04:55,990 --> 00:05:03,880
of words like large and complicated and

00:04:59,790 --> 00:05:05,560
slow and 18 months to anything even for

00:05:03,880 --> 00:05:08,620
a project that's already been going for

00:05:05,560 --> 00:05:11,500
18 months but let's take a look at what

00:05:08,620 --> 00:05:13,450
needs to happen to build a website to

00:05:11,500 --> 00:05:16,390
relaunch or create a new entertainment

00:05:13,450 --> 00:05:18,850
talk show today first of all they have

00:05:16,390 --> 00:05:21,280
to choose a host because the host is the

00:05:18,850 --> 00:05:22,840
cornerstone of figuring out what the

00:05:21,280 --> 00:05:25,000
creative direction and the content of

00:05:22,840 --> 00:05:26,919
the show is going to be so then they

00:05:25,000 --> 00:05:28,450
have to once they've chosen a host

00:05:26,919 --> 00:05:30,190
figure out who the staff is going to be

00:05:28,450 --> 00:05:32,740
and start that hiring process and that

00:05:30,190 --> 00:05:34,510
can take quite a lot of time and then

00:05:32,740 --> 00:05:36,460
they have to define the creative

00:05:34,510 --> 00:05:38,500
direction in concert with the host

00:05:36,460 --> 00:05:40,000
actually start defining the segments of

00:05:38,500 --> 00:05:42,690
the show and the bits of the show and

00:05:40,000 --> 00:05:46,330
ideally all of this needs to happen

00:05:42,690 --> 00:05:47,770
before any technical work begins because

00:05:46,330 --> 00:05:49,240
otherwise you're not going to be

00:05:47,770 --> 00:05:51,610
building a website that's actually

00:05:49,240 --> 00:05:52,430
useful because it's not going to model

00:05:51,610 --> 00:05:57,110
what they're trying to

00:05:52,430 --> 00:06:00,260
create so even then if we get all of

00:05:57,110 --> 00:06:02,600
that in place it just gets us a website

00:06:00,260 --> 00:06:05,210
that would mirror the show a website

00:06:02,600 --> 00:06:07,820
that isn't necessarily a first-class

00:06:05,210 --> 00:06:10,460
experience and to be effective and

00:06:07,820 --> 00:06:13,190
competitive in today's really crazy

00:06:10,460 --> 00:06:15,440
media entertainment marketplace the web

00:06:13,190 --> 00:06:17,810
needs to be a first-class component of

00:06:15,440 --> 00:06:19,910
the show experience it's got to be a

00:06:17,810 --> 00:06:22,430
channel for both unique and repeat

00:06:19,910 --> 00:06:26,590
content so in the case of the tonight

00:06:22,430 --> 00:06:29,390
show all of those prerequisites for the

00:06:26,590 --> 00:06:31,520
content in the direction of the show by

00:06:29,390 --> 00:06:32,780
the middle of December 2013 we had

00:06:31,520 --> 00:06:36,050
reached a point where we could actually

00:06:32,780 --> 00:06:37,750
start to build things and start to think

00:06:36,050 --> 00:06:40,160
about building the website and the apps

00:06:37,750 --> 00:06:42,560
now for those of you who are familiar

00:06:40,160 --> 00:06:44,990
with the show or watch the Olympics when

00:06:42,560 --> 00:06:47,470
they were heavily advertising it the

00:06:44,990 --> 00:06:50,780
tonight show launched on februari 17th

00:06:47,470 --> 00:06:52,040
2014 you throw in some holidays in the

00:06:50,780 --> 00:06:54,020
middle there and that doesn't give you a

00:06:52,040 --> 00:06:57,320
lot of time to get a website out

00:06:54,020 --> 00:07:00,100
certainly is in 18 months and when it

00:06:57,320 --> 00:07:03,070
came down to it we had about six weeks

00:07:00,100 --> 00:07:05,780
so how were you going to pull this off

00:07:03,070 --> 00:07:08,870
well before I get into that I'd like to

00:07:05,780 --> 00:07:11,570
talk about who was involved because how

00:07:08,870 --> 00:07:13,760
the the project was actually composed of

00:07:11,570 --> 00:07:15,530
the team members was really important in

00:07:13,760 --> 00:07:19,330
determining the technical architecture

00:07:15,530 --> 00:07:22,010
that we went with so first of all

00:07:19,330 --> 00:07:23,390
primary are our main guest for this

00:07:22,010 --> 00:07:25,550
evening would be NBC entertainment

00:07:23,390 --> 00:07:27,110
digital and they're responsible for

00:07:25,550 --> 00:07:29,840
anything and everything that has to do

00:07:27,110 --> 00:07:32,540
with the NBC television entertainment

00:07:29,840 --> 00:07:33,710
brand and so they're building all sorts

00:07:32,540 --> 00:07:35,980
of tools for all their different

00:07:33,710 --> 00:07:39,170
television shows and then there's also

00:07:35,980 --> 00:07:40,520
NBC Oh NTS or operations and technical

00:07:39,170 --> 00:07:42,260
support and there's some of them here

00:07:40,520 --> 00:07:44,330
watching right now which is just great

00:07:42,260 --> 00:07:47,840
and they're the team behind the

00:07:44,330 --> 00:07:49,700
publisher 7 distribution at NBC which is

00:07:47,840 --> 00:07:51,710
what they do all of their sort of

00:07:49,700 --> 00:07:56,570
customizations to integrate with NBC

00:07:51,710 --> 00:07:59,000
systems and other things but then there

00:07:56,570 --> 00:08:00,890
was also Crispin Porter who is actually

00:07:59,000 --> 00:08:04,249
the primary contractor for The Tonight

00:08:00,890 --> 00:08:07,459
Show build it and anything that you see

00:08:04,249 --> 00:08:08,989
which was publicly visible that was work

00:08:07,459 --> 00:08:10,759
that they did so whether it's the

00:08:08,989 --> 00:08:13,339
website or the apps they were in charge

00:08:10,759 --> 00:08:16,669
of looking at over there their design

00:08:13,339 --> 00:08:19,639
and care so then finally we get down to

00:08:16,669 --> 00:08:22,309
four kitchens and lullaby and we really

00:08:19,639 --> 00:08:24,559
helped round out the drupal team we'd

00:08:22,309 --> 00:08:26,449
work together on NBC com which at the

00:08:24,559 --> 00:08:28,699
time was in parallel but not yet

00:08:26,449 --> 00:08:31,039
launched development and so we sort of

00:08:28,699 --> 00:08:33,560
provided expertise and consulting and so

00:08:31,039 --> 00:08:36,589
on and when it came down to it the Sun

00:08:33,560 --> 00:08:38,599
never set on The Tonight Show team not

00:08:36,589 --> 00:08:40,699
only did we have a complex site to build

00:08:38,599 --> 00:08:44,449
with a tight timeline but we were all

00:08:40,699 --> 00:08:46,279
over the place and we had a to really

00:08:44,449 --> 00:08:47,930
figure out how to manage that if you

00:08:46,279 --> 00:08:51,110
look at this like we're basically

00:08:47,930 --> 00:08:53,930
covering the whole world as far as you

00:08:51,110 --> 00:08:56,629
know east to west and I remember

00:08:53,930 --> 00:08:58,699
realizing in the middle of December this

00:08:56,629 --> 00:09:00,439
is what we've got to build the site how

00:08:58,699 --> 00:09:03,139
are we going to do this if this project

00:09:00,439 --> 00:09:05,360
is going to launch on time and have a

00:09:03,139 --> 00:09:07,160
full set of features will need to

00:09:05,360 --> 00:09:09,319
structure the project in the

00:09:07,160 --> 00:09:14,300
architecture of the technology to be

00:09:09,319 --> 00:09:17,059
non-blocking and dependency free so

00:09:14,300 --> 00:09:18,319
what's our first step in order to figure

00:09:17,059 --> 00:09:22,040
out how we're actually going to make

00:09:18,319 --> 00:09:24,559
this happen like anything else we needed

00:09:22,040 --> 00:09:26,720
to decompose the system we needed to

00:09:24,559 --> 00:09:29,089
define what all of the systems were that

00:09:26,720 --> 00:09:31,100
needed to be built figure out what their

00:09:29,089 --> 00:09:33,589
roles and responsibilities were and then

00:09:31,100 --> 00:09:36,589
figure out who is the primary expert in

00:09:33,589 --> 00:09:39,860
each of those systems so we did a bunch

00:09:36,589 --> 00:09:43,339
of brainstorming and we came up with all

00:09:39,860 --> 00:09:45,529
of these topics from content modeling to

00:09:43,339 --> 00:09:47,480
a video which in itself is like a very

00:09:45,529 --> 00:09:49,459
complex item so it needs to be separated

00:09:47,480 --> 00:09:51,079
out from your content through to the

00:09:49,459 --> 00:09:52,790
Drupal side of things through to the

00:09:51,079 --> 00:09:55,370
people who needed to actually understand

00:09:52,790 --> 00:09:57,559
what the show was going to be doing and

00:09:55,370 --> 00:09:59,899
then the very technical components of

00:09:57,559 --> 00:10:01,790
the api's we would need to implement for

00:09:59,899 --> 00:10:03,800
the mobile apps and the systems that

00:10:01,790 --> 00:10:06,980
would actually drive everything and we

00:10:03,800 --> 00:10:08,660
knew that we really wanted to have a for

00:10:06,980 --> 00:10:10,670
lack of a better word an entertaining

00:10:08,660 --> 00:10:12,110
front end which was going to need a lot

00:10:10,670 --> 00:10:15,079
of effort and then of course the mobile

00:10:12,110 --> 00:10:17,840
apps themselves so we started through

00:10:15,079 --> 00:10:20,420
from the source of the content to

00:10:17,840 --> 00:10:22,400
us as technical architects and we move

00:10:20,420 --> 00:10:24,260
through each way or is your the entire

00:10:22,400 --> 00:10:28,340
system to figure out how that content

00:10:24,260 --> 00:10:31,160
would eventually get to the end user so

00:10:28,340 --> 00:10:33,080
our first item ended up being content

00:10:31,160 --> 00:10:34,340
modeling this was really really

00:10:33,080 --> 00:10:37,670
important than what I think was

00:10:34,340 --> 00:10:40,940
interesting about it was that everyone

00:10:37,670 --> 00:10:42,530
needed to work on it it needed to be

00:10:40,940 --> 00:10:45,380
something that everyone had a solid

00:10:42,530 --> 00:10:47,630
understanding and a solid vocabulary

00:10:45,380 --> 00:10:49,550
around so that we could communicate with

00:10:47,630 --> 00:10:52,880
everyone whether you were a front end

00:10:49,550 --> 00:10:55,670
designer or a show producer and it was

00:10:52,880 --> 00:10:58,340
about the only item that everyone needed

00:10:55,670 --> 00:11:02,930
to have total responsibility and to be

00:10:58,340 --> 00:11:05,030
successful the API design was handled by

00:11:02,930 --> 00:11:07,490
David and myself as well as someone from

00:11:05,030 --> 00:11:09,320
Crispin Porter and this was where we

00:11:07,490 --> 00:11:11,270
started to be able to decouple the

00:11:09,320 --> 00:11:13,250
project structure because we could make

00:11:11,270 --> 00:11:15,140
it so at the API for all intents and

00:11:13,250 --> 00:11:16,730
purposes was really a responsibility of

00:11:15,140 --> 00:11:20,240
the tech teams to make sure it was being

00:11:16,730 --> 00:11:21,890
built right and well and NBC is an

00:11:20,240 --> 00:11:23,090
organization cared in the sense that

00:11:21,890 --> 00:11:25,280
they were going to have to maintain the

00:11:23,090 --> 00:11:27,440
API and actually live with whatever

00:11:25,280 --> 00:11:29,360
decisions we made but when it came down

00:11:27,440 --> 00:11:31,430
to it was more of sort of an oversight

00:11:29,360 --> 00:11:33,770
and review in long-term thinking versus

00:11:31,430 --> 00:11:37,880
managing the day-to-day decisions of the

00:11:33,770 --> 00:11:40,510
API itself and then we had the actual

00:11:37,880 --> 00:11:43,580
Drupal or publisher 7 implementation

00:11:40,510 --> 00:11:45,860
which David and myself worked on as well

00:11:43,580 --> 00:11:48,380
as some other people from both of our

00:11:45,860 --> 00:11:51,500
companies and a developer from Crispin

00:11:48,380 --> 00:11:53,750
Porter hi and then video of course

00:11:51,500 --> 00:11:56,120
videos always a special case and so we

00:11:53,750 --> 00:11:58,340
had someone dedicated to just video who

00:11:56,120 --> 00:12:01,780
got to run down that rabbit hole for a

00:11:58,340 --> 00:12:05,060
few weeks and then front end and apps

00:12:01,780 --> 00:12:07,490
totally Crispin Porter I have no idea

00:12:05,060 --> 00:12:10,760
about how they actually work you know

00:12:07,490 --> 00:12:13,880
deep in the code they just are there and

00:12:10,760 --> 00:12:15,860
then that left NBC free to become our

00:12:13,880 --> 00:12:17,420
show and infrastructure ask experts

00:12:15,860 --> 00:12:18,920
without having to worry about all of

00:12:17,420 --> 00:12:22,070
these other components that needed to

00:12:18,920 --> 00:12:26,060
happen as we were working through these

00:12:22,070 --> 00:12:28,300
slides David had this great analogy that

00:12:26,060 --> 00:12:34,900
I just can't do justice so I'm going to

00:12:28,300 --> 00:12:39,520
him give it so in a way this whole

00:12:34,900 --> 00:12:41,380
process was exactly like winning at lip

00:12:39,520 --> 00:12:43,540
sync battle which is a segment on the

00:12:41,380 --> 00:12:46,420
Jimmy Fallon tonight show and the rules

00:12:43,540 --> 00:12:50,050
of lip sync battle are as follows two

00:12:46,420 --> 00:12:51,850
contestants enter and they both take

00:12:50,050 --> 00:12:54,940
turns singing popular songs that they

00:12:51,850 --> 00:12:56,860
have pre-selected the opposing team the

00:12:54,940 --> 00:12:59,530
opponent does not know the song that the

00:12:56,860 --> 00:13:02,650
other person selected and the goal is to

00:12:59,530 --> 00:13:06,520
one of each other culminating in a final

00:13:02,650 --> 00:13:08,230
performance and at the end Jimmy Fallon

00:13:06,520 --> 00:13:11,230
always concedes to the other player so

00:13:08,230 --> 00:13:13,390
in that way this is exactly absolutely

00:13:11,230 --> 00:13:16,450
nothing at all like lip sync battle in

00:13:13,390 --> 00:13:17,620
any way whatsoever but it is actually a

00:13:16,450 --> 00:13:19,270
little bit like playing lip sync battle

00:13:17,620 --> 00:13:21,430
because well you don't know your

00:13:19,270 --> 00:13:24,160
opponent's song so we had low visibility

00:13:21,430 --> 00:13:25,990
to the intent of other teams which meant

00:13:24,160 --> 00:13:27,450
we could allow independent duration on

00:13:25,990 --> 00:13:31,270
other layers of sight see how that works

00:13:27,450 --> 00:13:33,190
we can only control how well we did on a

00:13:31,270 --> 00:13:35,050
particular team so you play to your

00:13:33,190 --> 00:13:36,820
strengths and you have to really have to

00:13:35,050 --> 00:13:39,100
go for it and then it's also this

00:13:36,820 --> 00:13:41,200
lightly competitive structure conducive

00:13:39,100 --> 00:13:42,820
to enabling the other teams tool to do

00:13:41,200 --> 00:13:45,250
their best basically everybody's working

00:13:42,820 --> 00:13:48,070
really hard and doing their very finest

00:13:45,250 --> 00:13:50,020
work which that competitive structure

00:13:48,070 --> 00:13:55,450
just dissolves at the end and everybody

00:13:50,020 --> 00:13:57,220
wins except for Jimmy who concedes I'm

00:13:55,450 --> 00:14:01,360
glad no one had a seat on this project

00:13:57,220 --> 00:14:03,910
um so where does that leave us well that

00:14:01,360 --> 00:14:06,250
leaves us with our non blocking approach

00:14:03,910 --> 00:14:09,430
which basically ended up being a

00:14:06,250 --> 00:14:12,100
decoupled app and web front end with a

00:14:09,430 --> 00:14:15,400
services based Drupal API powering the

00:14:12,100 --> 00:14:18,850
whole thing and an abstracted content

00:14:15,400 --> 00:14:20,620
model that allowed us to both model the

00:14:18,850 --> 00:14:23,140
show and the elements of The Tonight

00:14:20,620 --> 00:14:24,910
Show and continuously iterate on it

00:14:23,140 --> 00:14:26,530
without breaking things as we went

00:14:24,910 --> 00:14:31,110
through basically week by week doing

00:14:26,530 --> 00:14:35,140
iteration on this six-week project so

00:14:31,110 --> 00:14:37,150
this is a standard Drupal site content

00:14:35,140 --> 00:14:40,470
goes in whether it's from a service like

00:14:37,150 --> 00:14:42,960
MPX or editors at a keyboard

00:14:40,470 --> 00:14:45,540
and in the end views come out or panels

00:14:42,960 --> 00:14:47,220
comes out or being or whatever it is

00:14:45,540 --> 00:14:49,950
that you're using today to make stuff

00:14:47,220 --> 00:14:51,360
come out and we're all pretty familiar

00:14:49,950 --> 00:14:53,700
with this this is how we've been

00:14:51,360 --> 00:14:56,010
building Drupal sites for a while now

00:14:53,700 --> 00:14:57,540
it's not that different from Drupal 5 or

00:14:56,010 --> 00:15:02,030
Drupal 6 build-outs that we may have

00:14:57,540 --> 00:15:04,530
done and in this case we have a lot of

00:15:02,030 --> 00:15:06,150
anonymous traffic hitting the site so

00:15:04,530 --> 00:15:08,970
we've got varnish and cashing in front

00:15:06,150 --> 00:15:12,750
of it just to make sure that you know

00:15:08,970 --> 00:15:14,490
the site works so we throw Akamai in

00:15:12,750 --> 00:15:16,170
front of that because we really care

00:15:14,490 --> 00:15:18,390
about making sure that nothing happens

00:15:16,170 --> 00:15:20,880
and you know that helps with geolocation

00:15:18,390 --> 00:15:22,350
and so on yeah you know it's like

00:15:20,880 --> 00:15:24,030
anything else computer science just add

00:15:22,350 --> 00:15:26,940
another layer of caching and make it

00:15:24,030 --> 00:15:28,740
better and what's really interesting

00:15:26,940 --> 00:15:31,200
about how this played out is this still

00:15:28,740 --> 00:15:34,650
looks like a standard Drupal set up or a

00:15:31,200 --> 00:15:37,350
standard PHP set up for that matter but

00:15:34,650 --> 00:15:39,180
this is where everything changes because

00:15:37,350 --> 00:15:43,850
everything we know and hold dear is how

00:15:39,180 --> 00:15:46,890
you build a site that's all it is an API

00:15:43,850 --> 00:15:49,260
to the consumers of the API they don't

00:15:46,890 --> 00:15:52,020
care about how it's hosted how it's

00:15:49,260 --> 00:15:53,640
built who's running it or why they just

00:15:52,020 --> 00:15:55,920
know that there is documentation that

00:15:53,640 --> 00:15:58,980
says that they can get the data they

00:15:55,920 --> 00:16:01,170
need somewhere living in the cloud and I

00:15:58,980 --> 00:16:03,420
feel like this level of abstraction is

00:16:01,170 --> 00:16:06,000
something which is really powerful for

00:16:03,420 --> 00:16:08,490
what we can do with our projects because

00:16:06,000 --> 00:16:10,650
it basically enables us to work with the

00:16:08,490 --> 00:16:13,200
whole web community instead of just

00:16:10,650 --> 00:16:15,810
Drupal developers as far as site

00:16:13,200 --> 00:16:17,640
building goes so you know if we're

00:16:15,810 --> 00:16:19,530
thinking about how content actually gets

00:16:17,640 --> 00:16:23,370
out to an end user yeah we've got this

00:16:19,530 --> 00:16:25,380
API and then there's this node and

00:16:23,370 --> 00:16:28,590
varnish and Akamai in front of that

00:16:25,380 --> 00:16:31,140
because yeah more caching and then we

00:16:28,590 --> 00:16:33,210
have a backbone app which is actually

00:16:31,140 --> 00:16:34,890
what you get when you run the browser

00:16:33,210 --> 00:16:36,930
you've got the first page which comes

00:16:34,890 --> 00:16:40,290
out of node so it's all fast and snappy

00:16:36,930 --> 00:16:42,030
but then all of your interaction with

00:16:40,290 --> 00:16:45,660
the site are entirely controlled by

00:16:42,030 --> 00:16:47,100
backbone and something else which came

00:16:45,660 --> 00:16:51,540
out of this which really helped validate

00:16:47,100 --> 00:16:53,329
our API design is that right now we've

00:16:51,540 --> 00:16:56,089
got one API client

00:16:53,329 --> 00:16:59,019
but pretty quickly we had to we had the

00:16:56,089 --> 00:17:01,249
node app and we add the backbone app and

00:16:59,019 --> 00:17:03,230
as soon as you start having multiple

00:17:01,249 --> 00:17:05,240
clients interacting with the same data

00:17:03,230 --> 00:17:06,919
set it allows you to verify that your

00:17:05,240 --> 00:17:09,260
data works the way it's supposed to and

00:17:06,919 --> 00:17:11,269
that your API is actually usable so

00:17:09,260 --> 00:17:12,769
you're just an end user and you're like

00:17:11,269 --> 00:17:15,169
wow this is a lot of stuff to go through

00:17:12,769 --> 00:17:16,459
just to get my tonight show videos it is

00:17:15,169 --> 00:17:22,010
but at least it's something entertaining

00:17:16,459 --> 00:17:25,459
at the end so we've built this sort of

00:17:22,010 --> 00:17:26,809
API decoupled system that you know from

00:17:25,459 --> 00:17:30,649
a very high level architecture

00:17:26,809 --> 00:17:34,070
standpoint allowed us to encapsulate an

00:17:30,649 --> 00:17:36,500
abstract the drupal isms of the site but

00:17:34,070 --> 00:17:38,779
that was just one small part of what

00:17:36,500 --> 00:17:41,360
made this project worked within our

00:17:38,779 --> 00:17:44,649
tight timeline and i'm going to hand it

00:17:41,360 --> 00:17:48,110
over to David to talk about the next

00:17:44,649 --> 00:17:50,870
entertaining part thank you Andrew so

00:17:48,110 --> 00:17:53,269
yes Andrew mentioned before there really

00:17:50,870 --> 00:17:57,500
there's two components of the site one

00:17:53,269 --> 00:18:00,100
was the decoupled cope solution and the

00:17:57,500 --> 00:18:02,899
other was the semantic content model and

00:18:00,100 --> 00:18:05,360
so I'm going to explain what I mean by

00:18:02,899 --> 00:18:06,679
semantic content model in a moment but

00:18:05,360 --> 00:18:09,679
I'd like to start with kind of how we

00:18:06,679 --> 00:18:13,220
got there so in a tight deadline

00:18:09,679 --> 00:18:16,510
situation like this we felt the best

00:18:13,220 --> 00:18:20,269
thing that we could do as consultants as

00:18:16,510 --> 00:18:21,919
architects was to unblock the most

00:18:20,269 --> 00:18:25,580
amount of people to allow all the teams

00:18:21,919 --> 00:18:29,000
to move forward at once and the biggest

00:18:25,580 --> 00:18:32,269
contender for that work was the API if

00:18:29,000 --> 00:18:33,740
we developed a good API where we had a

00:18:32,269 --> 00:18:35,929
shared understanding of what would be

00:18:33,740 --> 00:18:38,120
coming out of the API basically define

00:18:35,929 --> 00:18:40,130
the endpoints and the outputs of the

00:18:38,120 --> 00:18:43,279
system and then from there we could

00:18:40,130 --> 00:18:45,950
actually work towards making that happen

00:18:43,279 --> 00:18:48,289
in code on the back end and to ingest

00:18:45,950 --> 00:18:50,360
that code on the front ends but we

00:18:48,289 --> 00:18:51,710
didn't necessarily have to do that work

00:18:50,360 --> 00:18:54,320
up front we could just define what was

00:18:51,710 --> 00:18:56,470
going to come out and so we started down

00:18:54,320 --> 00:19:00,080
that path but we found that it was

00:18:56,470 --> 00:19:02,240
quickly very prescriptive and

00:19:00,080 --> 00:19:04,580
unsustainable and see it's a bit like

00:19:02,240 --> 00:19:06,150
jeopardy where you are creating the

00:19:04,580 --> 00:19:07,380
answers to questions that you're

00:19:06,150 --> 00:19:09,720
going to provide the questions to you

00:19:07,380 --> 00:19:11,250
later and we found that with the content

00:19:09,720 --> 00:19:13,890
with a basic content model that we

00:19:11,250 --> 00:19:16,470
created that we the questions that we

00:19:13,890 --> 00:19:19,890
could ask to get those answers were very

00:19:16,470 --> 00:19:22,410
limited so they were tied to displace

00:19:19,890 --> 00:19:25,230
specifically so the endpoints tended to

00:19:22,410 --> 00:19:26,730
produce things that were for specific

00:19:25,230 --> 00:19:27,990
displays on the app's a the Android app

00:19:26,730 --> 00:19:29,940
or the iOS app and they were very

00:19:27,990 --> 00:19:32,310
formulated to those things specifically

00:19:29,940 --> 00:19:34,770
or the website and that's just not great

00:19:32,310 --> 00:19:37,920
restful design it's a very display

00:19:34,770 --> 00:19:46,920
centric API with a few concessions for

00:19:37,920 --> 00:19:48,750
rest and that led us to this so it's

00:19:46,920 --> 00:19:50,070
pretty close to a blocking workflow and

00:19:48,750 --> 00:19:52,680
clearly not going to help us succeed

00:19:50,070 --> 00:19:54,480
because with our front ends and back

00:19:52,680 --> 00:19:56,370
ends tightly coupled like that it

00:19:54,480 --> 00:19:58,590
reduced our overall reusability of those

00:19:56,370 --> 00:20:00,330
endpoints it was a Content model that

00:19:58,590 --> 00:20:03,030
didn't have the long-term flexibility

00:20:00,330 --> 00:20:04,680
for the editorial team so The Tonight

00:20:03,030 --> 00:20:07,170
Show with Jimmy Fallon if you seen

00:20:04,680 --> 00:20:09,030
before the show launched on the Jimmy

00:20:07,170 --> 00:20:10,380
Fallon show was a very innovative show

00:20:09,030 --> 00:20:13,500
and he was constantly working out new

00:20:10,380 --> 00:20:14,760
bits and new segments that he just was

00:20:13,500 --> 00:20:16,620
flowing with the times and that's how

00:20:14,760 --> 00:20:19,860
good late-night TV works it's very

00:20:16,620 --> 00:20:23,970
topical so tying things into very

00:20:19,860 --> 00:20:25,650
specific pieces of fields or content

00:20:23,970 --> 00:20:28,500
just wasn't going to work for editorial

00:20:25,650 --> 00:20:31,250
at all so this type of couple content

00:20:28,500 --> 00:20:34,770
model where the elements are composed of

00:20:31,250 --> 00:20:36,540
things that drive specific displays when

00:20:34,770 --> 00:20:38,610
change comes along either at the

00:20:36,540 --> 00:20:41,100
business level at the show level or at

00:20:38,610 --> 00:20:44,070
the display level it's going to require

00:20:41,100 --> 00:20:46,140
a lot of work on the consuming

00:20:44,070 --> 00:20:47,940
technologies the node and backbone

00:20:46,140 --> 00:20:49,620
technologies but also the back end as

00:20:47,940 --> 00:20:51,750
well so that wasn't something that was

00:20:49,620 --> 00:20:53,250
going to allow us to work asynchronously

00:20:51,750 --> 00:20:54,840
and all move forward at once it was

00:20:53,250 --> 00:20:56,880
going to require a lot of back and forth

00:20:54,840 --> 00:20:58,890
and I can't actually move forward

00:20:56,880 --> 00:21:01,230
because the end point doesn't work for

00:20:58,890 --> 00:21:02,700
me any longer and so that kind of

00:21:01,230 --> 00:21:03,960
blocking workflow was just not going to

00:21:02,700 --> 00:21:06,420
help us meet that deadline very

00:21:03,960 --> 00:21:09,390
aggressive so based on that approach

00:21:06,420 --> 00:21:11,550
while we wanted to get the endpoints

00:21:09,390 --> 00:21:13,380
defined and the out points defined to

00:21:11,550 --> 00:21:15,990
have everybody move forward we realized

00:21:13,380 --> 00:21:17,779
we need to take a step back and rework

00:21:15,990 --> 00:21:19,999
that content model

00:21:17,779 --> 00:21:23,599
and that was really for us the dawn of

00:21:19,999 --> 00:21:25,580
the semantic content model so in droop

00:21:23,599 --> 00:21:27,679
in a typical drupal site it can be very

00:21:25,580 --> 00:21:29,809
easy to have a page centric content

00:21:27,679 --> 00:21:32,389
model and like the display centric

00:21:29,809 --> 00:21:35,509
content model you might start with the

00:21:32,389 --> 00:21:37,759
cancer so I have a pager and about Us

00:21:35,509 --> 00:21:40,489
page and have a listing page and from

00:21:37,759 --> 00:21:42,139
those pages you devise the fields and

00:21:40,489 --> 00:21:43,820
relationships between those fields and

00:21:42,139 --> 00:21:46,159
relationships retain those pieces of

00:21:43,820 --> 00:21:47,899
content to create your Drupal content

00:21:46,159 --> 00:21:49,489
model this is a page centric content

00:21:47,899 --> 00:21:52,999
model but it has a lot of the same

00:21:49,489 --> 00:22:00,979
problems you have something very

00:21:52,999 --> 00:22:02,960
dangerous driving your your content so

00:22:00,979 --> 00:22:04,700
the descended as with the display

00:22:02,960 --> 00:22:06,469
centric content model you have a very

00:22:04,700 --> 00:22:08,419
tightly coupled solution in a page

00:22:06,469 --> 00:22:09,979
centric content model and neither of

00:22:08,419 --> 00:22:12,109
these solutions are flexible or

00:22:09,979 --> 00:22:13,940
sustainable in the way that you want or

00:22:12,109 --> 00:22:16,609
need for a website that needs to live

00:22:13,940 --> 00:22:18,440
past its launch so The Tonight Show with

00:22:16,609 --> 00:22:20,989
Jimmy Fallon doesn't exist because it

00:22:18,440 --> 00:22:24,109
has a website it has a website because

00:22:20,989 --> 00:22:25,879
as a show as a property so why let the

00:22:24,109 --> 00:22:27,710
website drive the modeling of the

00:22:25,879 --> 00:22:30,139
business ultimately it's going to be

00:22:27,710 --> 00:22:33,200
more meaningful for the editorial staff

00:22:30,139 --> 00:22:35,929
and for NBC digital to have the show

00:22:33,200 --> 00:22:38,899
drive the site and the content model so

00:22:35,929 --> 00:22:40,369
that's where how we ended up at semantic

00:22:38,899 --> 00:22:42,440
content modeling which is going to have

00:22:40,369 --> 00:22:44,499
us create structures inside the content

00:22:42,440 --> 00:22:47,299
model that resemble the real life

00:22:44,499 --> 00:22:48,979
elements of the business for the Jimmy

00:22:47,299 --> 00:22:51,169
Fallon tonight show that means it's

00:22:48,979 --> 00:22:53,239
going to resemble the segments and the

00:22:51,169 --> 00:22:55,369
pieces of the tonight show that we all

00:22:53,239 --> 00:22:58,429
know and love and so since Drupal wasn't

00:22:55,369 --> 00:23:00,379
responsible for driving a page pages at

00:22:58,429 --> 00:23:02,330
all it's not responsible for being a

00:23:00,379 --> 00:23:04,789
website and because we had this

00:23:02,330 --> 00:23:07,789
sensitivity because we started to form

00:23:04,789 --> 00:23:09,499
those endpoint answers and suspected

00:23:07,789 --> 00:23:11,509
what kinds of questions could we ask to

00:23:09,499 --> 00:23:14,210
get those answers we had renewed

00:23:11,509 --> 00:23:16,129
sensitivity to this display centric

00:23:14,210 --> 00:23:17,659
modeling and because we both removed

00:23:16,129 --> 00:23:20,389
from page centric and had a sensitivity

00:23:17,659 --> 00:23:22,789
to display centric modeling we really

00:23:20,389 --> 00:23:25,149
set about creating these agnostic and

00:23:22,789 --> 00:23:29,200
dependency free semantic content

00:23:25,149 --> 00:23:32,109
endpoints one last point about all this

00:23:29,200 --> 00:23:34,149
though with semantic content points it's

00:23:32,109 --> 00:23:37,619
really important that you have the right

00:23:34,149 --> 00:23:40,599
level of resolution for us that meant

00:23:37,619 --> 00:23:42,460
that we were basically having a hundred

00:23:40,599 --> 00:23:44,559
foot ten thousand foot view rather than

00:23:42,460 --> 00:23:47,589
100 foot view because that volatility of

00:23:44,559 --> 00:23:49,210
content that Jimmy Fallon segments tend

00:23:47,589 --> 00:23:51,190
to have and he's constantly iterating on

00:23:49,210 --> 00:23:54,190
a show and trying to improve it and make

00:23:51,190 --> 00:23:56,200
new funny bits and be topical modeling

00:23:54,190 --> 00:23:58,330
it too closely to specific segments like

00:23:56,200 --> 00:24:00,070
lip sync battle which is something that

00:23:58,330 --> 00:24:06,009
wasn't going to be working for us in the

00:24:00,070 --> 00:24:07,899
long run so with that Eddie Lee from NBC

00:24:06,009 --> 00:24:09,849
had the fantastic idea that you know we

00:24:07,899 --> 00:24:11,169
could build off the smallest element of

00:24:09,849 --> 00:24:14,109
The Tonight Show and it's a late-night

00:24:11,169 --> 00:24:15,729
television show and the smallest element

00:24:14,109 --> 00:24:18,549
of a late-night television show the

00:24:15,729 --> 00:24:20,739
smallest atomic unit of funny is the

00:24:18,549 --> 00:24:22,839
joke that's the big reveal Hamid then so

00:24:20,739 --> 00:24:23,859
which coincides actually perfectly with

00:24:22,839 --> 00:24:28,539
the mission of the site which are those

00:24:23,859 --> 00:24:29,919
shareable moments of was just the

00:24:28,539 --> 00:24:31,749
creating those terrible moments those

00:24:29,919 --> 00:24:33,429
spaces alike did you see that thing that

00:24:31,749 --> 00:24:34,989
happened on The Tonight Show last night

00:24:33,429 --> 00:24:36,489
that's that's what that's a conversation

00:24:34,989 --> 00:24:38,710
that you have at the water-cooled the

00:24:36,489 --> 00:24:40,599
next morning and so and in creating that

00:24:38,710 --> 00:24:42,190
it is like that's based around jokes

00:24:40,599 --> 00:24:44,710
that's based on specific punchlines

00:24:42,190 --> 00:24:46,839
that's based around the formation of

00:24:44,710 --> 00:24:48,940
multiple punchlines and so really

00:24:46,839 --> 00:24:52,570
thinking semantically we have jokes and

00:24:48,940 --> 00:24:53,979
many jokes form up a bit and many bits

00:24:52,570 --> 00:24:56,169
form of the segment which is from

00:24:53,979 --> 00:24:59,019
commercial to commercial and many

00:24:56,169 --> 00:25:01,119
segments form up an episode episodes

00:24:59,019 --> 00:25:02,799
contain appearances from guests be the

00:25:01,119 --> 00:25:05,859
musical political comedians actors

00:25:02,799 --> 00:25:07,989
actresses so on and so forth as a

00:25:05,859 --> 00:25:09,460
website property we also have these

00:25:07,989 --> 00:25:11,469
other supporting elements however we

00:25:09,460 --> 00:25:13,839
have the social media challenge so Jimmy

00:25:11,469 --> 00:25:17,169
every Wednesday night has a Twitter

00:25:13,839 --> 00:25:19,029
challenge where he has people tweet into

00:25:17,169 --> 00:25:20,710
a specific hashtag and read them over

00:25:19,029 --> 00:25:22,539
the aerial so as an Instagram challenged

00:25:20,710 --> 00:25:25,149
and so forth and then we also have the

00:25:22,539 --> 00:25:27,099
games which are multimedia experiences

00:25:25,149 --> 00:25:29,919
that people can have on their iOS or

00:25:27,099 --> 00:25:32,409
Android devices or the website so in

00:25:29,919 --> 00:25:33,940
practice taking this idea that we're

00:25:32,409 --> 00:25:36,519
going to break things down semantically

00:25:33,940 --> 00:25:38,740
we ended up with a semantic content

00:25:36,519 --> 00:25:40,270
model mostly so

00:25:38,740 --> 00:25:43,720
what we found you know as with anything

00:25:40,270 --> 00:25:46,510
I'm solution is going to perhaps come

00:25:43,720 --> 00:25:48,940
too unwieldy pneus so it is a lot like

00:25:46,510 --> 00:25:51,610
database optimization which is my love

00:25:48,940 --> 00:25:53,620
but you know too much of it makes things

00:25:51,610 --> 00:25:56,440
a little bit unwieldy so we found a

00:25:53,620 --> 00:25:58,240
multi-layered approach to our content

00:25:56,440 --> 00:26:00,220
model actually serve this a little bit

00:25:58,240 --> 00:26:01,750
better and was a little bit easier to

00:26:00,220 --> 00:26:07,330
work with within the constraints of our

00:26:01,750 --> 00:26:09,010
our time limit so in practice we ended

00:26:07,330 --> 00:26:10,630
up creating entities that weren't

00:26:09,010 --> 00:26:12,100
semantics but we're building blocks and

00:26:10,630 --> 00:26:13,870
these are things like videos images

00:26:12,100 --> 00:26:17,380
carousel items and so on and so forth

00:26:13,870 --> 00:26:19,210
those items got built into the semantic

00:26:17,380 --> 00:26:21,520
object so the semantic objects use these

00:26:19,210 --> 00:26:23,800
building blocks semantic objects or as

00:26:21,520 --> 00:26:27,970
previously mentioned bits segments

00:26:23,800 --> 00:26:29,590
challenges games guests and then the you

00:26:27,970 --> 00:26:32,309
know kind of our concession so

00:26:29,590 --> 00:26:34,750
originally we had a model that was a

00:26:32,309 --> 00:26:36,220
display centric API with a few

00:26:34,750 --> 00:26:38,950
concessions for rest what we ended up

00:26:36,220 --> 00:26:41,020
with was a restful api with a few

00:26:38,950 --> 00:26:43,750
concessions for display and in our

00:26:41,020 --> 00:26:45,970
display centric concessions and then we

00:26:43,750 --> 00:26:47,590
first saw a little bit but it just made

00:26:45,970 --> 00:26:49,540
it happen you know and sometimes you

00:26:47,590 --> 00:26:52,030
have to make those concessions and in an

00:26:49,540 --> 00:26:53,740
absolute world you wouldn't have to but

00:26:52,030 --> 00:26:56,290
you also have a deadline and you know

00:26:53,740 --> 00:26:58,510
it's a part of it is meeting that so so

00:26:56,290 --> 00:27:00,490
we had carousels blog posts cues of

00:26:58,510 --> 00:27:01,960
semantic items image galleries that

00:27:00,490 --> 00:27:06,730
contain building blocks and semantic

00:27:01,960 --> 00:27:09,100
items so and all that to the benefit of

00:27:06,730 --> 00:27:11,260
that it gave all of other teams from the

00:27:09,100 --> 00:27:13,960
developing teams to the QA teams and

00:27:11,260 --> 00:27:16,570
that's the multiple multinational

00:27:13,960 --> 00:27:18,340
development teams so the apps teams for

00:27:16,570 --> 00:27:20,800
android for iOS for the website for the

00:27:18,340 --> 00:27:23,260
backend the QA teams which were in

00:27:20,800 --> 00:27:25,450
California and India and the editorial

00:27:23,260 --> 00:27:27,490
teams at NBC we all had a shared

00:27:25,450 --> 00:27:29,980
meaningful language that was native not

00:27:27,490 --> 00:27:32,260
only to the website but to the show to

00:27:29,980 --> 00:27:33,880
the property itself and that helped us

00:27:32,260 --> 00:27:35,320
all talk about things and envision where

00:27:33,880 --> 00:27:37,990
things were going and really have a

00:27:35,320 --> 00:27:39,550
common language it also made sense

00:27:37,990 --> 00:27:41,679
editorial for the long term because this

00:27:39,550 --> 00:27:44,610
is Drupal as a product the publisher 7

00:27:41,679 --> 00:27:47,590
distribution is a is a common editorial

00:27:44,610 --> 00:27:50,080
workflow set of tools that lead to a

00:27:47,590 --> 00:27:51,650
workflow process for NBC that they are

00:27:50,080 --> 00:27:55,070
used to supporting and you

00:27:51,650 --> 00:27:56,660
to engaging with editorially so now we

00:27:55,070 --> 00:28:00,110
finally placed our content in the

00:27:56,660 --> 00:28:01,880
driver's seat and it's driving the

00:28:00,110 --> 00:28:04,100
property or so the property's driving

00:28:01,880 --> 00:28:06,710
the content model not the website

00:28:04,100 --> 00:28:11,840
driving the content model and this leads

00:28:06,710 --> 00:28:14,360
me to sort of the other element of our

00:28:11,840 --> 00:28:16,010
of our approach which was that the other

00:28:14,360 --> 00:28:20,320
part of our non blocking approach which

00:28:16,010 --> 00:28:22,760
was our API talked briefly about that so

00:28:20,320 --> 00:28:25,400
once we had this content model in place

00:28:22,760 --> 00:28:27,530
we're able to establish our outs finally

00:28:25,400 --> 00:28:29,150
and define these elements that we're

00:28:27,530 --> 00:28:31,220
going to allow our multi-platform multi

00:28:29,150 --> 00:28:32,570
team development style to happen

00:28:31,220 --> 00:28:34,490
independently of each other we could

00:28:32,570 --> 00:28:35,570
have a shared agreement about what these

00:28:34,490 --> 00:28:37,940
things were going to look like and

00:28:35,570 --> 00:28:39,590
develop against those both building the

00:28:37,940 --> 00:28:40,970
the Drupal system that was going to spit

00:28:39,590 --> 00:28:42,320
these things out and building the

00:28:40,970 --> 00:28:43,880
consuming technologies that we're going

00:28:42,320 --> 00:28:46,370
to take that data and make it into a

00:28:43,880 --> 00:28:48,230
beautiful website or F experience this

00:28:46,370 --> 00:28:50,240
allowed us to develop with with

00:28:48,230 --> 00:28:52,430
reasonable agility and respond to the

00:28:50,240 --> 00:28:54,680
volatility both from iterations on the

00:28:52,430 --> 00:28:55,970
front end from editorials experience

00:28:54,680 --> 00:28:59,240
with the site and Jimmy Fallon for that

00:28:55,970 --> 00:29:01,580
matter but also with our own experiences

00:28:59,240 --> 00:29:03,140
with bugs and things like that so it

00:29:01,580 --> 00:29:05,390
also freed up the front end to really

00:29:03,140 --> 00:29:08,690
have frequent updates it also

00:29:05,390 --> 00:29:10,010
interestingly enough once we had agreed

00:29:08,690 --> 00:29:11,600
on what these things needed to be we

00:29:10,010 --> 00:29:13,220
could create the content and content

00:29:11,600 --> 00:29:15,140
teams could be entering in that content

00:29:13,220 --> 00:29:17,510
right away there wasn't any delay there

00:29:15,140 --> 00:29:20,270
wasn't any last-minute rush when you

00:29:17,510 --> 00:29:21,740
know one day before the site launch you

00:29:20,270 --> 00:29:24,050
know we had something in in dev or

00:29:21,740 --> 00:29:25,760
staging that or production that just

00:29:24,050 --> 00:29:27,710
wasn't public and everyone rushed to get

00:29:25,760 --> 00:29:29,030
in content and it was a mad dash and

00:29:27,710 --> 00:29:30,620
it's four in the morning and bugs are

00:29:29,030 --> 00:29:32,300
cropping up that never happened because

00:29:30,620 --> 00:29:34,700
content teams could be working on the

00:29:32,300 --> 00:29:42,200
content the second that we had iterated

00:29:34,700 --> 00:29:44,810
something out so our product while it

00:29:42,200 --> 00:29:50,360
was you know actually the API it was a

00:29:44,810 --> 00:29:51,350
little bit more than that it's more than

00:29:50,360 --> 00:29:55,940
meets the API

00:29:51,350 --> 00:29:58,220
so at first glance look you know we're

00:29:55,940 --> 00:30:00,289
talking about well we have these outs

00:29:58,220 --> 00:30:02,750
and they're defined and that's great but

00:30:00,289 --> 00:30:04,970
we also have our sort of an agreement

00:30:02,750 --> 00:30:06,710
about how these points are going to work

00:30:04,970 --> 00:30:08,480
in the future and what the internal

00:30:06,710 --> 00:30:11,450
structures of the resources that we have

00:30:08,480 --> 00:30:13,789
so what do images look like how do we

00:30:11,450 --> 00:30:15,650
respond to those for responsive websites

00:30:13,789 --> 00:30:17,120
what if videos look like what's the

00:30:15,650 --> 00:30:18,679
metadata round that and if we could all

00:30:17,120 --> 00:30:20,090
come to an agreement about what what

00:30:18,679 --> 00:30:22,580
those things are we didn't necessarily

00:30:20,090 --> 00:30:24,080
need to know ahead of time that an image

00:30:22,580 --> 00:30:26,750
was going to be needed for a guest

00:30:24,080 --> 00:30:29,659
inside of an episode or that a video was

00:30:26,750 --> 00:30:31,789
going to be needed for a gallery because

00:30:29,659 --> 00:30:33,770
we could predict because we had set that

00:30:31,789 --> 00:30:34,850
as an agreement amongst ourselves what

00:30:33,770 --> 00:30:36,380
that was going to look like and

00:30:34,850 --> 00:30:39,320
implementing teams could mock that

00:30:36,380 --> 00:30:40,880
object up and use the structures that

00:30:39,320 --> 00:30:42,710
would be given to them and then simply

00:30:40,880 --> 00:30:44,600
put in a ticket saying we need this

00:30:42,710 --> 00:30:48,260
added to this endpoint and we could do

00:30:44,600 --> 00:30:50,480
that and it all just worked so in many

00:30:48,260 --> 00:30:52,520
ways what we're talking about is making

00:30:50,480 --> 00:30:54,980
the most available member of your team

00:30:52,520 --> 00:30:56,780
the most available and that's your

00:30:54,980 --> 00:30:58,640
system your system is actually the most

00:30:56,780 --> 00:31:00,980
available member of your team it's not

00:30:58,640 --> 00:31:02,990
your architects we go to bed you know we

00:31:00,980 --> 00:31:04,039
go to the bathroom we whatever we have

00:31:02,990 --> 00:31:06,860
we have a number of things that we do

00:31:04,039 --> 00:31:08,630
that make us unavailable but the system

00:31:06,860 --> 00:31:10,940
is always there and if you can create an

00:31:08,630 --> 00:31:15,620
intelligently designed highly available

00:31:10,940 --> 00:31:17,330
member of your team why not so it could

00:31:15,620 --> 00:31:18,890
be a person it could be a speck in our

00:31:17,330 --> 00:31:20,390
case it was the system and that proved

00:31:18,890 --> 00:31:22,159
to be very useful for all of us

00:31:20,390 --> 00:31:25,520
especially in this asynchronous workflow

00:31:22,159 --> 00:31:27,289
and a non-blocking workflow andrew has

00:31:25,520 --> 00:31:28,940
developed a lovely article and how to

00:31:27,289 --> 00:31:32,630
legally binding your web aprs which I

00:31:28,940 --> 00:31:35,330
recommend that you read are we doing

00:31:32,630 --> 00:31:36,950
okay i will just go forward but it

00:31:35,330 --> 00:31:39,799
basically allowed us to have a version

00:31:36,950 --> 00:31:42,440
lyst backwards compatible compatible

00:31:39,799 --> 00:31:43,610
hydra style development model so where

00:31:42,440 --> 00:31:47,150
we could all move forward it was

00:31:43,610 --> 00:31:48,890
iterative and dependency free so if the

00:31:47,150 --> 00:31:50,240
coupled systems need a linchpin

00:31:48,890 --> 00:31:52,309
basically something that is highly

00:31:50,240 --> 00:31:54,200
available that can answer two teams that

00:31:52,309 --> 00:31:56,059
have questions or need a response or

00:31:54,200 --> 00:31:58,400
basically don't know something's going

00:31:56,059 --> 00:31:59,659
to work it could be your system and then

00:31:58,400 --> 00:32:02,450
that could answer to all those things

00:31:59,659 --> 00:32:04,640
and that that proved very valuable to us

00:32:02,450 --> 00:32:07,130
so the basic concerns of our

00:32:04,640 --> 00:32:08,570
p i were that we needed to provide

00:32:07,130 --> 00:32:10,100
semantic content that we need to provide

00:32:08,570 --> 00:32:11,990
display content that it needed to be

00:32:10,100 --> 00:32:13,730
performance that he needed to respect

00:32:11,990 --> 00:32:15,860
permissions and the state of content

00:32:13,730 --> 00:32:17,240
whether it's published or not and also

00:32:15,860 --> 00:32:19,130
that it delivered agnostic and

00:32:17,240 --> 00:32:21,590
predictable resources like the images

00:32:19,130 --> 00:32:23,660
and videos that i spoke bad what it

00:32:21,590 --> 00:32:25,580
wasn't concerned with it wasn't

00:32:23,660 --> 00:32:27,200
concerned with routing front end routing

00:32:25,580 --> 00:32:28,460
of course it had drupal menu routing for

00:32:27,200 --> 00:32:30,110
the endpoints that someone I'm talking

00:32:28,460 --> 00:32:32,090
about but basically when you go to the

00:32:30,110 --> 00:32:34,310
website as particular page it wasn't

00:32:32,090 --> 00:32:38,060
concerned with how it pulled results

00:32:34,310 --> 00:32:39,800
from the API to make that page it wasn't

00:32:38,060 --> 00:32:41,660
concerned with tailoring those results

00:32:39,800 --> 00:32:44,120
for specific device that was all decided

00:32:41,660 --> 00:32:45,650
at the Apple error and it wasn't

00:32:44,120 --> 00:32:47,060
concerned with authenticated audience

00:32:45,650 --> 00:32:48,800
interaction so these are some of the

00:32:47,060 --> 00:32:51,020
things that we dealt with specifically

00:32:48,800 --> 00:32:53,000
in some of the things that we avoided we

00:32:51,020 --> 00:32:56,420
also found you know it wasn't an API

00:32:53,000 --> 00:32:59,570
it's a spook API so you know with even

00:32:56,420 --> 00:33:01,010
in services based API solution there are

00:32:59,570 --> 00:33:02,450
options so like you could be saying well

00:33:01,010 --> 00:33:03,890
you have six weeks why didn't you just

00:33:02,450 --> 00:33:05,420
site build this you know why don't you

00:33:03,890 --> 00:33:07,280
just make a bunch of views content types

00:33:05,420 --> 00:33:08,870
and then spit it out in services that

00:33:07,280 --> 00:33:10,640
would have been extremely fast like

00:33:08,870 --> 00:33:13,100
you're going to do that by to you know

00:33:10,640 --> 00:33:17,330
to Kim it's done okay let's move on next

00:33:13,100 --> 00:33:19,570
project slan but the problem is is when

00:33:17,330 --> 00:33:22,490
you introduce iteration into that model

00:33:19,570 --> 00:33:24,410
so for an asynchronous distributed team

00:33:22,490 --> 00:33:27,320
that meant code was going to be coming

00:33:24,410 --> 00:33:28,940
in at night on the weekends late at

00:33:27,320 --> 00:33:31,490
night early in the morning at all times

00:33:28,940 --> 00:33:32,600
and the architects who needed to review

00:33:31,490 --> 00:33:34,190
that code and understand what was going

00:33:32,600 --> 00:33:37,040
on and basically review that for any

00:33:34,190 --> 00:33:40,100
problems with Drupal would be staring at

00:33:37,040 --> 00:33:42,440
a bunch of features code you know we had

00:33:40,100 --> 00:33:46,400
developed a for NBC com we developed an

00:33:42,440 --> 00:33:49,430
API that was PHP object-oriented based

00:33:46,400 --> 00:33:52,640
and it allowed us to really bury a lot

00:33:49,430 --> 00:33:53,780
of the deep drupal isms deep into the

00:33:52,640 --> 00:33:55,640
parent classes and allow the

00:33:53,780 --> 00:33:57,410
implementing classes to be a lot simpler

00:33:55,640 --> 00:33:59,780
and a lot cleaner that meant that we

00:33:57,410 --> 00:34:02,030
were looking at maybe one line change in

00:33:59,780 --> 00:34:05,300
an implementing class or an implementing

00:34:02,030 --> 00:34:07,250
function versus 150 lines of changed

00:34:05,300 --> 00:34:09,500
features code and that's going to review

00:34:07,250 --> 00:34:11,270
a lot cleaner a lot faster in an

00:34:09,500 --> 00:34:12,950
asynchronous workflow so we found that

00:34:11,270 --> 00:34:14,169
particular process to be really helpful

00:34:12,950 --> 00:34:17,260
in kidding

00:34:14,169 --> 00:34:19,599
the door it also let us leverage some

00:34:17,260 --> 00:34:21,159
existing PHP object-oriented resources

00:34:19,599 --> 00:34:22,510
that we had who weren't Drupal experts

00:34:21,159 --> 00:34:23,889
and they actually didn't need to be

00:34:22,510 --> 00:34:26,799
because we had implemented all the deep

00:34:23,889 --> 00:34:28,329
Drupal stuff really down below and so

00:34:26,799 --> 00:34:29,859
they were able to kind of ramp up on

00:34:28,329 --> 00:34:31,720
that stuff as they needed it they could

00:34:29,859 --> 00:34:34,270
pull in specific functions or work with

00:34:31,720 --> 00:34:38,169
the parent classes or right overriding

00:34:34,270 --> 00:34:40,119
classes to touch that Drupal stuff but

00:34:38,169 --> 00:34:42,190
for the most part implementing classes

00:34:40,119 --> 00:34:44,919
were six lines of code or something like

00:34:42,190 --> 00:34:46,750
that with a few query specifics so it

00:34:44,919 --> 00:34:48,940
turned out to be quite easy for non

00:34:46,750 --> 00:34:50,950
Drupal experts to work with in a complex

00:34:48,940 --> 00:34:54,309
Drupal framework get a services solution

00:34:50,950 --> 00:35:02,170
out and be enabling their app consumers

00:34:54,309 --> 00:35:03,880
or their website consumers so our the

00:35:02,170 --> 00:35:06,640
API in practice basically we had a few

00:35:03,880 --> 00:35:09,160
structured calls and it looked we had

00:35:06,640 --> 00:35:10,690
display centric calls which kind of had

00:35:09,160 --> 00:35:12,910
some query parameters and then we had

00:35:10,690 --> 00:35:15,339
some semantic calls which looked a bit

00:35:12,910 --> 00:35:20,309
more like good restful calls so those

00:35:15,339 --> 00:35:23,650
are some of the concessions we made and

00:35:20,309 --> 00:35:26,770
so to a non semantic to a display

00:35:23,650 --> 00:35:30,220
centric sorry not to display centric but

00:35:26,770 --> 00:35:32,170
to a display content type a call might

00:35:30,220 --> 00:35:33,730
look like this so we have episodes ID

00:35:32,170 --> 00:35:35,859
with 15 the result we get back would be

00:35:33,730 --> 00:35:37,720
something like this so you can see here

00:35:35,859 --> 00:35:40,150
and you can see the inner details of the

00:35:37,720 --> 00:35:42,730
image and so this is like a signature

00:35:40,150 --> 00:35:44,049
that we sort of came upon for images and

00:35:42,730 --> 00:35:45,549
then we reuse that every time we had

00:35:44,049 --> 00:35:46,809
images and you could have multiple

00:35:45,549 --> 00:35:49,869
images and they all kind of look the

00:35:46,809 --> 00:35:52,079
same and and that helped out with the

00:35:49,869 --> 00:35:54,730
implementing teams as I mentioned before

00:35:52,079 --> 00:35:56,260
for a semantic resource you know here's

00:35:54,730 --> 00:35:57,970
a call to a semantic resource and it's

00:35:56,260 --> 00:36:01,420
gonna look very similar you can see the

00:35:57,970 --> 00:36:05,220
object image is is repeated here which

00:36:01,420 --> 00:36:07,150
is JSON coming out the back end so I

00:36:05,220 --> 00:36:09,250
wouldn't want to leave you with the idea

00:36:07,150 --> 00:36:11,950
that this is all a rosy picture though

00:36:09,250 --> 00:36:15,040
there are some challenges around rupal

00:36:11,950 --> 00:36:17,440
as a content provider so you know it's

00:36:15,040 --> 00:36:19,869
not a site so the things you're used to

00:36:17,440 --> 00:36:22,510
getting for freedom Drupal might not be

00:36:19,869 --> 00:36:23,600
there you need to understand what your

00:36:22,510 --> 00:36:25,400
solutions are for route

00:36:23,600 --> 00:36:27,260
you need to think about the things that

00:36:25,400 --> 00:36:28,670
Drupal typically gives you it's going to

00:36:27,260 --> 00:36:30,320
give you some caching do you need

00:36:28,670 --> 00:36:32,810
additional caching on your front end

00:36:30,320 --> 00:36:35,270
like we did yeah you probably do is the

00:36:32,810 --> 00:36:36,560
answer for them cdns are going to become

00:36:35,270 --> 00:36:38,690
interesting you know we have great CDN

00:36:36,560 --> 00:36:40,640
solutions like the CDN module for drupal

00:36:38,690 --> 00:36:42,650
but when you're serving that content out

00:36:40,640 --> 00:36:44,780
that never hits Drupal as a site you

00:36:42,650 --> 00:36:46,130
have to kind of figure out well what's

00:36:44,780 --> 00:36:47,270
the word of their dresses need to be how

00:36:46,130 --> 00:36:49,820
we're going to figure this out for

00:36:47,270 --> 00:36:51,350
region and so on and so forth probably

00:36:49,820 --> 00:36:53,270
the biggest one with us going to need a

00:36:51,350 --> 00:36:54,470
lot of training is your editorial teams

00:36:53,270 --> 00:36:55,970
are going to experience a disconnect

00:36:54,470 --> 00:36:58,040
because they don't have a one-to-one

00:36:55,970 --> 00:37:00,470
connection between a forum where they

00:36:58,040 --> 00:37:02,690
enter in content in those fields save it

00:37:00,470 --> 00:37:04,490
and see a web page after that there's a

00:37:02,690 --> 00:37:05,750
whole site praveen system that drupal

00:37:04,490 --> 00:37:07,370
just has by default that you aren't

00:37:05,750 --> 00:37:09,080
going to have in a decoupled system so

00:37:07,370 --> 00:37:10,970
that is definitely the biggest

00:37:09,080 --> 00:37:12,050
disconnect and they need they need to

00:37:10,970 --> 00:37:13,790
know that the content that they're

00:37:12,050 --> 00:37:15,020
entering in is going to be used on apps

00:37:13,790 --> 00:37:16,400
it's going to look like this it's going

00:37:15,020 --> 00:37:17,540
to have this interpretation it's going

00:37:16,400 --> 00:37:19,370
to look like this on the website and

00:37:17,540 --> 00:37:20,960
they just kind of need an overview of

00:37:19,370 --> 00:37:23,150
that and basically to understand that

00:37:20,960 --> 00:37:24,800
when they're entering content before any

00:37:23,150 --> 00:37:25,700
of the stuff is even implemented that

00:37:24,800 --> 00:37:27,080
they're going to see something that

00:37:25,700 --> 00:37:30,260
might look quite different than what

00:37:27,080 --> 00:37:32,290
actually shows up on the website or you

00:37:30,260 --> 00:37:38,090
need to develop a Cyprien situation so

00:37:32,290 --> 00:37:41,860
there's another concern and that leads

00:37:38,090 --> 00:37:45,880
us to really the more you know section

00:37:41,860 --> 00:37:48,260
so you know if we had to do it all again

00:37:45,880 --> 00:37:50,510
there's a couple things we kind of

00:37:48,260 --> 00:37:53,330
thought that you know yeah we could do a

00:37:50,510 --> 00:37:54,920
little bit better so really don't forget

00:37:53,330 --> 00:37:56,090
that site preview and experience and I

00:37:54,920 --> 00:37:59,180
sort of went on and of it because that

00:37:56,090 --> 00:38:00,110
it is a bit of a problem you really need

00:37:59,180 --> 00:38:01,580
to think through what you're going to do

00:38:00,110 --> 00:38:03,950
for decoupled solution and how that's

00:38:01,580 --> 00:38:05,740
going to be solved so we definitely

00:38:03,950 --> 00:38:08,920
would be thinking about that immediately

00:38:05,740 --> 00:38:13,970
you know as the project was starting

00:38:08,920 --> 00:38:16,130
probably in my experience you know it

00:38:13,970 --> 00:38:17,900
Drupal's not providing a site experience

00:38:16,130 --> 00:38:20,360
for somebody maybe you can issue

00:38:17,900 --> 00:38:22,220
soup-to-nuts stuff like media is great

00:38:20,360 --> 00:38:24,290
but actually I don't need any display

00:38:22,220 --> 00:38:24,660
functionality of media so maybe I don't

00:38:24,290 --> 00:38:26,309
use

00:38:24,660 --> 00:38:29,069
maybe I use a simpler token-based

00:38:26,309 --> 00:38:32,760
solution when I'm embedding media type

00:38:29,069 --> 00:38:34,289
content into body fields and then you

00:38:32,760 --> 00:38:35,599
know I think that both of us agree we

00:38:34,289 --> 00:38:38,039
just would probably make even less

00:38:35,599 --> 00:38:40,440
concessions for display it's not only

00:38:38,039 --> 00:38:42,450
irks them from an architecture kind of

00:38:40,440 --> 00:38:45,299
viewpoint but it does make the system

00:38:42,450 --> 00:38:48,869
overall less sustainable and and I think

00:38:45,299 --> 00:38:49,950
the objects could be cleaner so you know

00:38:48,869 --> 00:38:52,260
sticking to your guns on that is going

00:38:49,950 --> 00:38:53,579
to cost development time but in the long

00:38:52,260 --> 00:39:00,569
run going to make more sustainable

00:38:53,579 --> 00:39:04,260
solution which brings us to we made it

00:39:00,569 --> 00:39:06,869
yeah so it's kind of crazy like here

00:39:04,260 --> 00:39:09,569
okay so we've talked about everything we

00:39:06,869 --> 00:39:12,119
did but I haven't answered the big

00:39:09,569 --> 00:39:14,220
question did we actually launched the

00:39:12,119 --> 00:39:17,730
website or not did this happen on time

00:39:14,220 --> 00:39:21,390
well the answer is yes we got the

00:39:17,730 --> 00:39:24,960
website to everywhere and anywhere it

00:39:21,390 --> 00:39:28,770
launched first week of februari and yeah

00:39:24,960 --> 00:39:30,349
it just sort of happened and it's kind

00:39:28,770 --> 00:39:33,270
of amazing when you think about it like

00:39:30,349 --> 00:39:35,400
usually you make that estimate like is

00:39:33,270 --> 00:39:38,970
it possible or not and in the software

00:39:35,400 --> 00:39:40,799
world we get that wrong so often and you

00:39:38,970 --> 00:39:42,510
know even if it's just wrong by ten

00:39:40,799 --> 00:39:45,420
percent you know that's considered

00:39:42,510 --> 00:39:47,670
really good and the fact that we had

00:39:45,420 --> 00:39:50,369
something out and to the public and with

00:39:47,670 --> 00:39:52,829
real content in it by that first launch

00:39:50,369 --> 00:39:57,029
was at least to me really exciting and

00:39:52,829 --> 00:39:59,010
kind of amazing and the the timeline

00:39:57,029 --> 00:40:06,000
actually revealed something pretty

00:39:59,010 --> 00:40:08,520
interesting as well yes so what we saw

00:40:06,000 --> 00:40:11,279
actually is that you know we had this

00:40:08,520 --> 00:40:13,529
really aggressive timeline so we elected

00:40:11,279 --> 00:40:16,770
to do a decoupled solution that would

00:40:13,529 --> 00:40:18,510
allow separate teams to act it at their

00:40:16,770 --> 00:40:20,640
best expertise and basically move

00:40:18,510 --> 00:40:24,869
forward as quickly as possible together

00:40:20,640 --> 00:40:26,640
in lockstep and that process then gave

00:40:24,869 --> 00:40:30,059
us a pretty strongly asynchronous

00:40:26,640 --> 00:40:32,539
workflow which fed back into being able

00:40:30,059 --> 00:40:34,820
to iterate faster and doing more

00:40:32,539 --> 00:40:36,740
decouple developments and

00:40:34,820 --> 00:40:39,260
proving that model and so it was this

00:40:36,740 --> 00:40:42,080
nice synergy between these two areas

00:40:39,260 --> 00:40:43,730
allowing us to kind of like you know the

00:40:42,080 --> 00:40:45,260
analogy of like rolling the boulder up

00:40:43,730 --> 00:40:46,790
the hill and it finally tips over and

00:40:45,260 --> 00:40:48,740
then it just speeds on through and it

00:40:46,790 --> 00:40:53,000
happens more quickly than you even ever

00:40:48,740 --> 00:40:55,700
imagined yeah and we definitely

00:40:53,000 --> 00:40:58,940
succeeded at sort of having the system

00:40:55,700 --> 00:41:00,650
as the architect like I totally was out

00:40:58,940 --> 00:41:02,720
of the office the week the site launched

00:41:00,650 --> 00:41:06,680
which is you know also sort of unheard

00:41:02,720 --> 00:41:09,770
of in a lot of web projects and really

00:41:06,680 --> 00:41:12,350
designing the system as the architect

00:41:09,770 --> 00:41:13,760
allowed the front-end team who was

00:41:12,350 --> 00:41:17,410
working on different time zones or

00:41:13,760 --> 00:41:19,640
different hours entirely to actually

00:41:17,410 --> 00:41:20,990
make assumptions about what we were

00:41:19,640 --> 00:41:24,560
going to give them before they even

00:41:20,990 --> 00:41:27,950
asked us yet which is something which

00:41:24,560 --> 00:41:31,000
you can really use to speed up and make

00:41:27,950 --> 00:41:33,830
your process work well in parallel

00:41:31,000 --> 00:41:35,000
something else which I definitely sort

00:41:33,830 --> 00:41:38,480
of picked up at the end of the project

00:41:35,000 --> 00:41:40,430
was when we were figuring out how we

00:41:38,480 --> 00:41:44,180
were going to build the site in the

00:41:40,430 --> 00:41:47,240
first place decoupling by that point had

00:41:44,180 --> 00:41:49,460
certainly been the topic of a lot of

00:41:47,240 --> 00:41:50,780
Drupal cons a lot of web conferences a

00:41:49,460 --> 00:41:53,090
lot you notice the web industry was

00:41:50,780 --> 00:41:55,250
thinking about decoupled contents facts

00:41:53,090 --> 00:41:57,230
and it's not like this is a brand new

00:41:55,250 --> 00:42:00,350
idea there have been decoupled systems

00:41:57,230 --> 00:42:03,380
for at least 10 or 15 years now but

00:42:00,350 --> 00:42:08,450
prior to this project I'd always when

00:42:03,380 --> 00:42:10,700
evaluating a new project early on assume

00:42:08,450 --> 00:42:12,770
that it either took one of two things to

00:42:10,700 --> 00:42:16,100
make it worth decoupling a project that

00:42:12,770 --> 00:42:19,040
it either took extraordinary content

00:42:16,100 --> 00:42:21,380
requirements like a recipe database with

00:42:19,040 --> 00:42:24,470
millions of recipes that's going to need

00:42:21,380 --> 00:42:26,360
a recipe server and a recipe API just so

00:42:24,470 --> 00:42:29,240
you're not breaking your website under

00:42:26,360 --> 00:42:31,640
the way to that or you need to have a

00:42:29,240 --> 00:42:34,670
really wide number of channels that you

00:42:31,640 --> 00:42:37,310
are publishing your content out into and

00:42:34,670 --> 00:42:39,740
I sort of figured if you had either one

00:42:37,310 --> 00:42:41,630
of those two scenarios or both at the

00:42:39,740 --> 00:42:44,150
same time then you had to go decoupled

00:42:41,630 --> 00:42:47,420
it was the only way to succeed and when

00:42:44,150 --> 00:42:49,579
it really sort of the summary was that

00:42:47,420 --> 00:42:52,849
both solutions were for content

00:42:49,579 --> 00:42:55,910
longevity and not for any other real

00:42:52,849 --> 00:42:58,069
reason but after seeing what happened on

00:42:55,910 --> 00:43:00,470
this project I've come to realize that a

00:42:58,069 --> 00:43:03,950
decoupled architecture is just a better

00:43:00,470 --> 00:43:06,200
more human way to work it's really

00:43:03,950 --> 00:43:08,240
interesting to me that like we had

00:43:06,200 --> 00:43:10,280
people who didn't know the site had

00:43:08,240 --> 00:43:12,319
launched to the public because all they

00:43:10,280 --> 00:43:14,750
were doing was working on writing api's

00:43:12,319 --> 00:43:16,730
and getting those out there and yes they

00:43:14,750 --> 00:43:18,980
were ready middle January and it made no

00:43:16,730 --> 00:43:21,530
difference that the public was consuming

00:43:18,980 --> 00:43:23,750
them first week of februari it just was

00:43:21,530 --> 00:43:25,880
work that was happening and we've all

00:43:23,750 --> 00:43:28,549
been on these crazy projects where

00:43:25,880 --> 00:43:31,160
content is putting in content the night

00:43:28,549 --> 00:43:33,170
before and QA is doing all kinds of

00:43:31,160 --> 00:43:34,640
regression testing and developers are

00:43:33,170 --> 00:43:37,099
just doing what they can to meet the

00:43:34,640 --> 00:43:40,640
deadline and you're putting in 18-hour

00:43:37,099 --> 00:43:42,109
days and that didn't happen in the same

00:43:40,640 --> 00:43:44,900
way on it you know what really happened

00:43:42,109 --> 00:43:48,140
was that the project launched stresses

00:43:44,900 --> 00:43:50,839
were decoupled by teams as well and so

00:43:48,140 --> 00:43:52,910
each team had their own sort of mini

00:43:50,839 --> 00:43:54,410
launch I could say you know at various

00:43:52,910 --> 00:43:56,630
points in the project but they weren't

00:43:54,410 --> 00:43:58,609
dependent on one another and so it

00:43:56,630 --> 00:44:00,410
really allowed our team to just sort of

00:43:58,609 --> 00:44:04,099
focus on getting things done and not

00:44:00,410 --> 00:44:07,549
focus on what needed to happen and yeah

00:44:04,099 --> 00:44:10,760
I now look at these sorts of projects as

00:44:07,549 --> 00:44:13,910
why should we do this as a full stack

00:44:10,760 --> 00:44:15,530
why not d couple it I it's going to take

00:44:13,910 --> 00:44:17,299
a lot to convince me that I shouldn't do

00:44:15,530 --> 00:44:19,190
a decoupled website for even my own

00:44:17,299 --> 00:44:23,119
personal stuff now because it just seems

00:44:19,190 --> 00:44:25,130
to make sense and I think by sort of

00:44:23,119 --> 00:44:27,400
forcing ourselves to work under this

00:44:25,130 --> 00:44:29,329
really tight timeline it really inspired

00:44:27,400 --> 00:44:31,940
everything that we learned out of this

00:44:29,329 --> 00:44:33,170
and without those constraints you know

00:44:31,940 --> 00:44:35,000
it probably would have ended up being

00:44:33,170 --> 00:44:37,490
just yet another Drupal site built with

00:44:35,000 --> 00:44:38,809
views and panels and fields and it would

00:44:37,490 --> 00:44:41,960
have been great but it wouldn't have

00:44:38,809 --> 00:44:43,910
been what we have today so that brings

00:44:41,960 --> 00:44:46,540
us to the end of at least what we wanted

00:44:43,910 --> 00:44:49,339
to explicitly talk about for anyone

00:44:46,540 --> 00:44:51,140
who's been here and just wants to

00:44:49,339 --> 00:44:52,849
evaluate the session please go to the

00:44:51,140 --> 00:44:54,540
schedule and give us your feedback we

00:44:52,849 --> 00:44:57,960
would do me a lot yeah

00:44:54,540 --> 00:44:59,820
would really touch our hearts and we'll

00:44:57,960 --> 00:45:01,740
leave it with some questions we got

00:44:59,820 --> 00:45:04,080
about 15 minutes left according to the

00:45:01,740 --> 00:45:07,470
schedule and for anyone who's worked on

00:45:04,080 --> 00:45:11,100
decoupled sites or just has interesting

00:45:07,470 --> 00:45:14,970
thoughts I would love to hear them yes

00:45:11,100 --> 00:45:17,520
that's thank you hey guys trust herring

00:45:14,970 --> 00:45:21,860
from NBC you own TS hey nice to meet you

00:45:17,520 --> 00:45:25,230
likewise so we do use this as an example

00:45:21,860 --> 00:45:27,960
internally to just highlight you know

00:45:25,230 --> 00:45:30,330
how successful a project can be when

00:45:27,960 --> 00:45:32,460
when given a deadline the one thing that

00:45:30,330 --> 00:45:33,720
sort of never been cleared of me and you

00:45:32,460 --> 00:45:35,910
guys didn't really talk about so I'm

00:45:33,720 --> 00:45:38,700
interested to get some inside knowledge

00:45:35,910 --> 00:45:41,190
on this really is like what was the

00:45:38,700 --> 00:45:42,540
project management process like across

00:45:41,190 --> 00:45:44,730
all of those different teams and

00:45:42,540 --> 00:45:48,180
companies was there were you guys

00:45:44,730 --> 00:45:50,070
aligning iterations were you just each

00:45:48,180 --> 00:45:51,990
company was doing their own iterations

00:45:50,070 --> 00:45:55,220
was there a scrum of scrums that happen

00:45:51,990 --> 00:45:58,800
regularly what was what was a dealer uh

00:45:55,220 --> 00:46:01,190
yeah I felt like um we haven't talked

00:45:58,800 --> 00:46:05,640
about this but yeah I mean I felt like

00:46:01,190 --> 00:46:07,830
there CBB was running a scrum type

00:46:05,640 --> 00:46:11,520
process or an agile type process with

00:46:07,830 --> 00:46:13,740
NBC but I felt like the team's operated

00:46:11,520 --> 00:46:16,170
largely independently and it still

00:46:13,740 --> 00:46:17,460
worked yeah because of this like a

00:46:16,170 --> 00:46:19,260
synchronous workflow so you can

00:46:17,460 --> 00:46:21,630
understand how that may not always

00:46:19,260 --> 00:46:22,920
happen right yeah yeah no totally I

00:46:21,630 --> 00:46:24,900
think the thing so what was the magic

00:46:22,920 --> 00:46:26,310
sauce there is what I'm trying to what

00:46:24,900 --> 00:46:28,170
I'm trying to figure out there wasn't

00:46:26,310 --> 00:46:29,910
enough time to have scrum of scrums oh

00:46:28,170 --> 00:46:31,950
yeah you know he starts of meetings and

00:46:29,910 --> 00:46:34,950
because it was such a short timeline

00:46:31,950 --> 00:46:36,930
there wasn't the space for the project

00:46:34,950 --> 00:46:38,280
code and architecture to grow to where

00:46:36,930 --> 00:46:40,440
it needed that amount of project

00:46:38,280 --> 00:46:42,750
management so because we had so many

00:46:40,440 --> 00:46:44,790
small decoupled systems yeah within that

00:46:42,750 --> 00:46:47,190
small period of time they could all sort

00:46:44,790 --> 00:46:48,360
of focus on doing their own thing and I

00:46:47,190 --> 00:46:50,460
think the other thing which was really

00:46:48,360 --> 00:46:53,910
important is that our main discussion

00:46:50,460 --> 00:46:56,490
points between the teams were not scrums

00:46:53,910 --> 00:46:59,250
yeah they were the API right in the

00:46:56,490 --> 00:47:01,410
content mod right and so by forcing

00:46:59,250 --> 00:47:03,690
ourselves to discuss like you know in

00:47:01,410 --> 00:47:06,150
those terms yeah any of the meetings we

00:47:03,690 --> 00:47:06,840
had were already very focused whether it

00:47:06,150 --> 00:47:09,090
was

00:47:06,840 --> 00:47:10,650
we need this extra bit of data or oh

00:47:09,090 --> 00:47:13,920
wait we got to think about responsive

00:47:10,650 --> 00:47:16,740
images or whatever it was I think that I

00:47:13,920 --> 00:47:18,140
actually think they'll loosely just go

00:47:16,740 --> 00:47:20,430
back to the lip-sync but the loosely

00:47:18,140 --> 00:47:22,590
competitive structure of having separate

00:47:20,430 --> 00:47:26,010
teams working on different aspects of it

00:47:22,590 --> 00:47:27,690
was very useful like because if your

00:47:26,010 --> 00:47:30,690
failures block other teams and that's a

00:47:27,690 --> 00:47:33,690
that's a bad feeling I sort of like live

00:47:30,690 --> 00:47:35,670
up to the moment kind of scrum but that

00:47:33,690 --> 00:47:37,290
was effective in this project I hear you

00:47:35,670 --> 00:47:39,360
and I'm totally impressed I just it

00:47:37,290 --> 00:47:41,880
definitely takes a leap of faith on the

00:47:39,360 --> 00:47:43,230
business side to agree that we're just

00:47:41,880 --> 00:47:45,030
going to hope that this works out right

00:47:43,230 --> 00:47:46,860
yet out having everything totally

00:47:45,030 --> 00:47:49,140
planned out I mean ultimately someone

00:47:46,860 --> 00:47:52,020
was accountable like yeah CPP was

00:47:49,140 --> 00:47:54,060
contract yeah for it so yeah the teams

00:47:52,020 --> 00:47:56,490
also weren't totally isolated like CPP

00:47:54,060 --> 00:47:58,320
had someone doing drupal work yeah you

00:47:56,490 --> 00:47:59,610
know we did a little bit of work on the

00:47:58,320 --> 00:48:01,740
front end just sort of you know

00:47:59,610 --> 00:48:04,740
providing some eyes in some code review

00:48:01,740 --> 00:48:06,480
and so on you know NBC had internal like

00:48:04,740 --> 00:48:07,770
developers helping out so like yeah

00:48:06,480 --> 00:48:09,780
because we have that little bit of

00:48:07,770 --> 00:48:11,640
cross-pollination it helped to keep the

00:48:09,780 --> 00:48:17,690
communication in line cool thank you

00:48:11,640 --> 00:48:20,100
congrats again guys thank you so you

00:48:17,690 --> 00:48:22,560
near the end there you talked about why

00:48:20,100 --> 00:48:24,330
wouldn't you do this for any any project

00:48:22,560 --> 00:48:26,610
and and the main thing that I think of

00:48:24,330 --> 00:48:28,500
is like you know in the traditional

00:48:26,610 --> 00:48:32,730
Drupal world we have you know our Drupal

00:48:28,500 --> 00:48:34,980
site and and and we engineer like how do

00:48:32,730 --> 00:48:37,680
how does the content model work and how

00:48:34,980 --> 00:48:40,500
do content creators get the stuff in and

00:48:37,680 --> 00:48:42,780
then we engineer how that stuff gets

00:48:40,500 --> 00:48:44,460
displayed on the other side but now

00:48:42,780 --> 00:48:46,140
we've got this back-end system and this

00:48:44,460 --> 00:48:48,600
front-end system so we got to basically

00:48:46,140 --> 00:48:51,030
do the whole process twice how do we get

00:48:48,600 --> 00:48:53,970
it in and out of each system is it not

00:48:51,030 --> 00:48:54,630
then twice as much work overall even

00:48:53,970 --> 00:48:57,690
though you're splitting it between

00:48:54,630 --> 00:48:59,820
multiple teams isn't it effectively

00:48:57,690 --> 00:49:02,790
twice as much hours spent on the project

00:48:59,820 --> 00:49:04,140
I don't as definitely for projects of

00:49:02,790 --> 00:49:06,510
this scale with this number of

00:49:04,140 --> 00:49:09,390
developers I wouldn't say so maybe if

00:49:06,510 --> 00:49:12,390
you're like you know one person shop it

00:49:09,390 --> 00:49:14,280
might be a harder sell to do i think the

00:49:12,390 --> 00:49:16,490
the real thing to keep in mind is that

00:49:14,280 --> 00:49:18,230
we actually are rebuilding things

00:49:16,490 --> 00:49:20,210
anyways when you think about it like

00:49:18,230 --> 00:49:21,950
you've got your content types which are

00:49:20,210 --> 00:49:23,300
your fields and so on and then you're

00:49:21,950 --> 00:49:25,430
building a view and that's really just

00:49:23,300 --> 00:49:27,500
transforming your content into some

00:49:25,430 --> 00:49:29,330
intermediary format and then you're

00:49:27,500 --> 00:49:31,460
embedding that with panels or displaying

00:49:29,330 --> 00:49:33,110
at a CSS and so on you know if you

00:49:31,460 --> 00:49:37,369
replace a lot of those middle steps with

00:49:33,110 --> 00:49:39,680
writing an epi it might be a bit more

00:49:37,369 --> 00:49:41,360
complicated to think through but then at

00:49:39,680 --> 00:49:43,010
the end you get the ability to do things

00:49:41,360 --> 00:49:44,630
like totally change your front end

00:49:43,010 --> 00:49:46,460
without having to worry about breaking

00:49:44,630 --> 00:49:48,470
the Drupal site which is something we

00:49:46,460 --> 00:49:50,690
run into all the time where like someone

00:49:48,470 --> 00:49:52,400
starts modifying the content model to

00:49:50,690 --> 00:49:53,900
match whatever it is today and then you

00:49:52,400 --> 00:49:56,150
have to spend three weeks updating all

00:49:53,900 --> 00:50:01,070
the views and panels and custom code to

00:49:56,150 --> 00:50:04,580
work with it okay I agree so so then you

00:50:01,070 --> 00:50:06,530
talked about you know the benefits of

00:50:04,580 --> 00:50:10,580
decoupling things means that there's

00:50:06,530 --> 00:50:12,920
fewer dependencies but then are you know

00:50:10,580 --> 00:50:15,890
early on in the project are you with the

00:50:12,920 --> 00:50:17,630
Drupal out of putting the API are you

00:50:15,890 --> 00:50:19,750
doing you know because things aren't

00:50:17,630 --> 00:50:23,090
really finalized in Drupal yet are you

00:50:19,750 --> 00:50:24,770
have like a mock output of the API where

00:50:23,090 --> 00:50:26,810
this endpoint is basically just showing

00:50:24,770 --> 00:50:28,940
this static file yeah a limited team as

00:50:26,810 --> 00:50:30,890
I think ended up doing sort of mocked

00:50:28,940 --> 00:50:34,190
versions of content coming out of

00:50:30,890 --> 00:50:36,859
systems it for is available so yeah our

00:50:34,190 --> 00:50:38,900
initial we actually wrote the API before

00:50:36,859 --> 00:50:42,140
we implemented it as documentation and

00:50:38,900 --> 00:50:43,940
we use this neat tool from apiary which

00:50:42,140 --> 00:50:47,450
basically right and mark down and then

00:50:43,940 --> 00:50:49,550
it includes marker syntax for the HTTP

00:50:47,450 --> 00:50:52,250
requests and responses and so it gives

00:50:49,550 --> 00:50:54,140
you really basic stubs for like you know

00:50:52,250 --> 00:50:57,440
an individual guest would be really easy

00:50:54,140 --> 00:50:59,030
to do at the time we ran into trouble

00:50:57,440 --> 00:51:00,290
with listing queries because then you

00:50:59,030 --> 00:51:03,050
would end up having to like actually

00:51:00,290 --> 00:51:06,230
type out 10 responses you know ten items

00:51:03,050 --> 00:51:09,320
or copy and paste and so on but some

00:51:06,230 --> 00:51:13,490
sort of stubbing is you know I think

00:51:09,320 --> 00:51:18,290
really important to make this work great

00:51:13,490 --> 00:51:20,119
thanks I guess Eric Brown from st. Louis

00:51:18,290 --> 00:51:23,330
Missouri hi I have two quick questions

00:51:20,119 --> 00:51:24,980
one regarding previewing did you guys

00:51:23,330 --> 00:51:26,930
ever have points where your content

00:51:24,980 --> 00:51:29,000
creators wanted to like actually preview

00:51:26,930 --> 00:51:30,590
how the content that they were going to

00:51:29,000 --> 00:51:33,050
be creating looked in the various

00:51:30,590 --> 00:51:35,000
clients which I wasilla yeah now and

00:51:33,050 --> 00:51:36,950
almost right away so that it's

00:51:35,000 --> 00:51:38,390
definitely something that you know like

00:51:36,950 --> 00:51:39,740
I said we if we were going to do this

00:51:38,390 --> 00:51:42,080
again that would've been in immediate

00:51:39,740 --> 00:51:46,040
concern we did work out a solution where

00:51:42,080 --> 00:51:48,230
a content from Drupal basically that was

00:51:46,040 --> 00:51:51,440
unpublished could be published and

00:51:48,230 --> 00:51:53,780
viewed with a preview node system and oj

00:51:51,440 --> 00:51:56,030
s system so so they were able to do that

00:51:53,780 --> 00:51:57,740
eventually and absolutely wanted that

00:51:56,030 --> 00:51:59,840
right away and anybody who ever does

00:51:57,740 --> 00:52:01,609
this will want that so don't ever like

00:51:59,840 --> 00:52:03,859
leave it to the last moment basically

00:52:01,609 --> 00:52:06,170
absolutely and then a second question

00:52:03,859 --> 00:52:08,960
technically I noticed that when you

00:52:06,170 --> 00:52:11,090
showed like the response from the API

00:52:08,960 --> 00:52:13,460
there wasn't much of Drupal ISM in the

00:52:11,090 --> 00:52:15,770
data so can you talk about what work you

00:52:13,460 --> 00:52:18,650
did to kind of strip out the Drupal you

00:52:15,770 --> 00:52:21,830
know all the the hierarchy of data yeah

00:52:18,650 --> 00:52:23,540
so like because so we use services but

00:52:21,830 --> 00:52:25,430
then we have a module called publisher

00:52:23,540 --> 00:52:27,109
API it actually started out as NBC API

00:52:25,430 --> 00:52:29,000
and then made a generic so we could

00:52:27,109 --> 00:52:32,840
steal it for tonight's show worked out

00:52:29,000 --> 00:52:34,520
well that way but we weren't using vuze

00:52:32,840 --> 00:52:36,500
or anything which meant that we weren't

00:52:34,520 --> 00:52:38,720
getting default fields like we weren't

00:52:36,500 --> 00:52:40,640
undoing what Drupal was giving us we

00:52:38,720 --> 00:52:44,119
were opting in to what we wanted to send

00:52:40,640 --> 00:52:45,950
out and one of our design decisions

00:52:44,119 --> 00:52:47,510
early on we were designing the API was

00:52:45,950 --> 00:52:49,369
exactly we're talking about we didn't

00:52:47,510 --> 00:52:51,410
want to think about drupal isms because

00:52:49,369 --> 00:52:54,710
that made it easy for us as the Drupal

00:52:51,410 --> 00:52:57,020
architects to be lazy we didn't want our

00:52:54,710 --> 00:52:59,600
if your encoding Drupal isms into the

00:52:57,020 --> 00:53:01,490
API then you're assuming that the

00:52:59,600 --> 00:53:04,609
consumers of that API understand Drupal

00:53:01,490 --> 00:53:07,070
and that's just not cool so we really

00:53:04,609 --> 00:53:09,770
sort of ended up with a system where you

00:53:07,070 --> 00:53:12,109
know the most Drupal in the API code is

00:53:09,770 --> 00:53:13,820
really n any field query in database

00:53:12,109 --> 00:53:15,740
queries and there's a little bit we've

00:53:13,820 --> 00:53:19,400
got some caching in place at the sort of

00:53:15,740 --> 00:53:21,410
object response level but everything

00:53:19,400 --> 00:53:23,510
else from that is just like get the data

00:53:21,410 --> 00:53:26,390
you need make it match the docs please

00:53:23,510 --> 00:53:30,440
do most of the mechanics of it rely on

00:53:26,390 --> 00:53:32,870
an abstraction on top of DP TNG and and

00:53:30,440 --> 00:53:35,570
also yeah the caching layer and you have

00:53:32,870 --> 00:53:38,180
q's sometimes to a simple list yeah and

00:53:35,570 --> 00:53:40,070
as the API like is it publicly available

00:53:38,180 --> 00:53:42,859
is that strictly locked down to the

00:53:40,070 --> 00:53:45,470
client is not no it's not yet so you

00:53:42,859 --> 00:53:47,320
know them yeah I day it's something

00:53:45,470 --> 00:53:50,900
we've been meaning to talk about okay

00:53:47,320 --> 00:53:54,650
thanks guys sure thank you anything else

00:53:50,900 --> 00:53:56,510
oh oh hey guys I know I've worked on the

00:53:54,650 --> 00:53:58,340
project I'm not trying to be a troll I'm

00:53:56,510 --> 00:54:00,260
man on video please give an ovipositor

00:53:58,340 --> 00:54:03,350
this guy don't know these guys did it

00:54:00,260 --> 00:54:06,050
work um I do have a question though

00:54:03,350 --> 00:54:07,430
because I was pretty isolated from a lot

00:54:06,050 --> 00:54:10,700
of the implementation when you hear

00:54:07,430 --> 00:54:11,990
about these decoupled projects the

00:54:10,700 --> 00:54:13,460
fighting words that usually start or

00:54:11,990 --> 00:54:15,080
well what about SEO when you have these

00:54:13,460 --> 00:54:16,970
magical JavaScript front ends that

00:54:15,080 --> 00:54:18,470
render your content yeah how was that

00:54:16,970 --> 00:54:21,830
handled can you guys speak to that at

00:54:18,470 --> 00:54:24,200
all and we're out of time again I'm

00:54:21,830 --> 00:54:27,020
sorry I'm absolutely it was handled

00:54:24,200 --> 00:54:29,000
that's why node existed cool so anything

00:54:27,020 --> 00:54:32,030
that was static HTML was coming out from

00:54:29,000 --> 00:54:34,010
node and so mode like I don't know the

00:54:32,030 --> 00:54:35,300
stats but like well I don't know the act

00:54:34,010 --> 00:54:36,590
the current stats but it used to be

00:54:35,300 --> 00:54:38,300
something ridiculous like ninety-nine

00:54:36,590 --> 00:54:41,240
percent of the traffic was backbone and

00:54:38,300 --> 00:54:43,040
hitting the API directly and then you

00:54:41,240 --> 00:54:44,690
know basically Google just crawls the

00:54:43,040 --> 00:54:46,130
site through the node system and the

00:54:44,690 --> 00:54:47,990
neat thing is I don't know if they

00:54:46,130 --> 00:54:49,550
actually did this but I know we talked

00:54:47,990 --> 00:54:50,810
about like the reason they use node was

00:54:49,550 --> 00:54:52,910
so they could we use some of the

00:54:50,810 --> 00:54:55,130
backbone code for displaying the site so

00:54:52,910 --> 00:54:57,650
it would actually be the same I think

00:54:55,130 --> 00:54:59,900
they did it that's true yeah yeah like I

00:54:57,650 --> 00:55:01,970
really like so visit little visibility

00:54:59,900 --> 00:55:03,830
so that to the node side is interesting

00:55:01,970 --> 00:55:08,210
yeah but yeah I think that it um we did

00:55:03,830 --> 00:55:10,280
like have like routing and URLs becomes

00:55:08,210 --> 00:55:12,080
really difficult I think with a lot like

00:55:10,280 --> 00:55:14,720
you're not thinking about that on your

00:55:12,080 --> 00:55:16,340
app side and it was kind of refreshing

00:55:14,720 --> 00:55:18,320
to not even have to think about path

00:55:16,340 --> 00:55:21,470
auto or anything like that on the Drupal

00:55:18,320 --> 00:55:23,060
side but it's still difficult or still a

00:55:21,470 --> 00:55:24,650
problem that needs to be solved we just

00:55:23,060 --> 00:55:28,960
got to say you know hey Crispin Porter

00:55:24,650 --> 00:55:28,960
you get to do this awesome thanks

00:55:30,010 --> 00:55:38,200
anything else thank you very much guys

00:55:33,730 --> 00:55:38,200

YouTube URL: https://www.youtube.com/watch?v=6eJj5UrUUpU


