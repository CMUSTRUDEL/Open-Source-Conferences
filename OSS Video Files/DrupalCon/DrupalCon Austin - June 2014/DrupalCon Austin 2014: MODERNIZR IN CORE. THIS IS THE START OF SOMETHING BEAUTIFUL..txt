Title: DrupalCon Austin 2014: MODERNIZR IN CORE. THIS IS THE START OF SOMETHING BEAUTIFUL.
Publication date: 2014-06-05
Playlist: DrupalCon Austin - June 2014
Description: 
	Speakers: iwuv
Drupal 8 sets the stage for years of "Front End Development Done Right" with the inclusion of Modernizr, feature detection library of choice among front end enthusiasts.

Break out your favored party hat and party favors. It's at the confetti level of awesome.

Modernizr does not modernize elderly browsers. It allows you to specify what a browser should perform based on its supported (and unsupported) features.

What's in a name? Modernizr offers YOU the power to Modernize alongside the latest available browser capabilities while conditionally choosing how you want the old fellers to deliver.

In Drupal 8 core, the build of Modernizr is tiny and basic. Let not its diminutive size dismiss your attention. This minimalist build allows themes and modules to add feature tests and act upon the results. Also, core Modernizr includes the ever-useful "touch" test so that your scripts and styles can adjust for touch screen devices where desired.

If you want the full power of Modernizr, you'll want to install the module. The module offers various easy methods of accessing the vast library of feature tests that your site/app may require. Its basic presence in core is important because by nature of "being there" it will shape the future of front end development.

In this talk, I won't talk about progressive enhancement vs. graceful degradation because you know which is superior. What I'll do is cover the workings of Modernizr, the common questions surrounding it, present kickass usage examples, and do a deeper dig into the core library as well as the features of the module.

Covered++:

Why use Modernizr?
How does it work?
Usage examples: Modernizr in action!
How Modernizr made it into Drupal core
What is included in Modernizr core and how to extend it
Learn how to write your own feature tests
Conditionally load CSS or JS depending on feature(s) detected (with module)
A deeper dive into the included capabilities: addTest(), testStyles(), Touch events, Input Types, Add CSS Classes, and the Modernizr JS object
Ultimately, why it's going to make your life better and why you probably want to use it
This talk is aimed at front end developers looking for greater control over the ever-growing environments that web sites are living in. If you are familiar with Modernizr but haven't explored its features in depth, you will gain benefit from this talk. Haven't used Modernizr yet? Get your buns in here. Emerge toasty.
Captions: 
	00:00:00,000 --> 00:00:05,400
thank you all for coming it's a lot of

00:00:01,979 --> 00:00:07,259
great sessions right now and so I take

00:00:05,400 --> 00:00:12,000
it that you are going to get something

00:00:07,259 --> 00:00:13,950
out of this one and I hope to answer any

00:00:12,000 --> 00:00:18,000
question that you may have over the

00:00:13,950 --> 00:00:20,699
course of the presentation my name is

00:00:18,000 --> 00:00:26,160
Chad I'm a front-end developer sort of a

00:00:20,699 --> 00:00:29,910
user experience geek working at our

00:00:26,160 --> 00:00:32,780
twiggy here in Austin doing some noble

00:00:29,910 --> 00:00:35,190
work reducing health care costs and

00:00:32,780 --> 00:00:38,670
creating the largest medication

00:00:35,190 --> 00:00:43,469
encyclopedia pure perpetual peer review

00:00:38,670 --> 00:00:46,410
it's pretty cool check it out we use

00:00:43,469 --> 00:00:49,160
modernizer for a couple tests but

00:00:46,410 --> 00:00:51,539
personally I've used it on every project

00:00:49,160 --> 00:00:53,520
ever since I found out about a few years

00:00:51,539 --> 00:00:55,410
ago I always find something even if it's

00:00:53,520 --> 00:00:58,760
just one thing I need moderniser for

00:00:55,410 --> 00:01:03,030
like it's there and so that has been

00:00:58,760 --> 00:01:04,739
yeah sure oh I'm it just moved closer so

00:01:03,030 --> 00:01:06,750
um yeah when I saw that I got into

00:01:04,739 --> 00:01:08,400
Drupal 8 I was really happy because I

00:01:06,750 --> 00:01:12,960
was a big fan of modernizer and I want

00:01:08,400 --> 00:01:16,860
to see what the reasoning was and what

00:01:12,960 --> 00:01:18,830
it was being used for and also the fact

00:01:16,860 --> 00:01:27,900
that was just greatly legitimized by

00:01:18,830 --> 00:01:30,630
that move so to start off okay it's a

00:01:27,900 --> 00:01:32,549
little different but I've been thinking

00:01:30,630 --> 00:01:35,670
a lot about modernizer lately preparing

00:01:32,549 --> 00:01:41,509
for this and I started dreaming about it

00:01:35,670 --> 00:01:44,460
and I had this really vivid dream and I

00:01:41,509 --> 00:01:48,770
converted it into a little short story

00:01:44,460 --> 00:01:48,770
and it's sort of

00:01:50,930 --> 00:01:56,549
covers the philosophy behind modernizer

00:01:54,180 --> 00:02:01,340
and it's science fiction and that's kind

00:01:56,549 --> 00:02:05,880
of cool so if you don't mind it's short

00:02:01,340 --> 00:02:09,810
this name of the story is 100 roving

00:02:05,880 --> 00:02:12,810
robots so in this imaginary world

00:02:09,810 --> 00:02:14,940
there's a band of 100 roving robots and

00:02:12,810 --> 00:02:16,680
they show the people's houses willing

00:02:14,940 --> 00:02:19,080
and able to help with whatever you want

00:02:16,680 --> 00:02:20,760
them to get there's a whole variety of

00:02:19,080 --> 00:02:23,400
them there's new one there's there's old

00:02:20,760 --> 00:02:27,600
ones so they'll do whatever you want

00:02:23,400 --> 00:02:29,850
them to do but they you have to speak

00:02:27,600 --> 00:02:33,090
their language right only if I capable

00:02:29,850 --> 00:02:34,950
of doing it kind of like web browser so

00:02:33,090 --> 00:02:37,260
if you command a robot to do something

00:02:34,950 --> 00:02:43,200
and it can't do it it errors out and it

00:02:37,260 --> 00:02:44,819
leaves web browser so these robots

00:02:43,200 --> 00:02:47,190
require you to give them commands as

00:02:44,819 --> 00:02:49,230
soon as they show up so kind of have to

00:02:47,190 --> 00:02:52,440
have your command list ready for them as

00:02:49,230 --> 00:02:53,640
soon as they show up so there's new and

00:02:52,440 --> 00:02:55,280
old robot you want to take advantage of

00:02:53,640 --> 00:02:57,690
it all the features of the new ones so

00:02:55,280 --> 00:03:00,180
you spend your days studying up on all

00:02:57,690 --> 00:03:03,390
different types of robots manufacturers

00:03:00,180 --> 00:03:05,700
models operating system programs

00:03:03,390 --> 00:03:07,829
versions so you have this master list

00:03:05,700 --> 00:03:10,019
it's always growing of every functioning

00:03:07,829 --> 00:03:12,030
robot and you have this intricate plan

00:03:10,019 --> 00:03:14,579
of what you want them to do so it takes

00:03:12,030 --> 00:03:18,000
you a long time to create maintain and

00:03:14,579 --> 00:03:21,450
update finally today's our day the

00:03:18,000 --> 00:03:23,640
robots show up hundred of them you have

00:03:21,450 --> 00:03:25,410
plans for them classroom tear down your

00:03:23,640 --> 00:03:27,600
house and rebuild a mansion in one day

00:03:25,410 --> 00:03:30,150
because that's something that robots can

00:03:27,600 --> 00:03:33,660
do so you send them their command list

00:03:30,150 --> 00:03:37,890
your command list 75 robots they just

00:03:33,660 --> 00:03:40,190
error out and take off 24 robots tear

00:03:37,890 --> 00:03:43,500
down your house and carry off the rubble

00:03:40,190 --> 00:03:44,819
oops so you didn't predict that the

00:03:43,500 --> 00:03:46,859
robots would be models you didn't know

00:03:44,819 --> 00:03:48,150
existed and that many of these robots

00:03:46,859 --> 00:03:51,180
were actually different than what they

00:03:48,150 --> 00:03:53,370
reported themselves to be one robot is

00:03:51,180 --> 00:03:56,519
building something by the end of the day

00:03:53,370 --> 00:03:59,250
you have a little tiny room so your

00:03:56,519 --> 00:04:01,440
neighbor passes by Charles to you it

00:03:59,250 --> 00:04:03,530
says forget the model number

00:04:01,440 --> 00:04:06,410
manufacturer OS

00:04:03,530 --> 00:04:07,760
it's just a losing battle there's too

00:04:06,410 --> 00:04:09,500
many different types of robot there's

00:04:07,760 --> 00:04:10,610
new ones made all the time and some of

00:04:09,500 --> 00:04:14,780
them don't even tell you what they

00:04:10,610 --> 00:04:17,690
really are so you say how do I get them

00:04:14,780 --> 00:04:19,910
to do what I want he says well you

00:04:17,690 --> 00:04:23,210
prefix your commands with capability

00:04:19,910 --> 00:04:25,430
tests tests / flying if the robot can

00:04:23,210 --> 00:04:28,400
fly use that robot to work on your roof

00:04:25,430 --> 00:04:30,560
if it can't fly test if it can move

00:04:28,400 --> 00:04:33,139
sideways you can move sideways have it

00:04:30,560 --> 00:04:35,240
work on the walls if you can't fly or

00:04:33,139 --> 00:04:40,250
move sideways test if it can landscape

00:04:35,240 --> 00:04:42,080
and so on brilliant he saying then he

00:04:40,250 --> 00:04:44,570
gives you a list of capability tests

00:04:42,080 --> 00:04:48,200
that work compiled by many of those who

00:04:44,570 --> 00:04:49,310
use this method thanks I'll use it so

00:04:48,200 --> 00:04:51,080
you wait in your tiny room for the

00:04:49,310 --> 00:04:53,750
robust to return will be ready to

00:04:51,080 --> 00:04:57,350
command every robot effectively and age

00:04:53,750 --> 00:04:59,060
passes finally the robots return you use

00:04:57,350 --> 00:05:01,100
the capability testing to command the

00:04:59,060 --> 00:05:05,360
robots to do your bidding they build

00:05:01,100 --> 00:05:12,020
your mansion and it was beautiful the

00:05:05,360 --> 00:05:21,410
end doesn't have log but i'll save that

00:05:12,020 --> 00:05:24,710
for another time so scuba so it's not

00:05:21,410 --> 00:05:29,180
about who you are it's what you're

00:05:24,710 --> 00:05:31,340
capable of names don't matter and i was

00:05:29,180 --> 00:05:32,570
looking at this phrase and i was like ok

00:05:31,340 --> 00:05:36,370
wouldn't that solve like a lot of

00:05:32,570 --> 00:05:38,630
problems in the world if this thing was

00:05:36,370 --> 00:05:40,310
understood as a philosophy i guess so

00:05:38,630 --> 00:05:44,539
it's deeper to me than just browser

00:05:40,310 --> 00:05:51,350
detection but in this case we apply it

00:05:44,539 --> 00:05:53,270
to the web world using modern eyes so

00:05:51,350 --> 00:05:55,729
modernizer is the feature detection

00:05:53,270 --> 00:05:58,550
library that detects what a browser can

00:05:55,729 --> 00:06:01,070
and cannot do and won't do anything on

00:05:58,550 --> 00:06:05,590
its own but you can take those results

00:06:01,070 --> 00:06:08,060
and act on them so Drupal core

00:06:05,590 --> 00:06:12,320
moderniser build in Drupal core has like

00:06:08,060 --> 00:06:13,940
four tests and some functionality but

00:06:12,320 --> 00:06:16,820
you can use like over

00:06:13,940 --> 00:06:19,690
tests although I don't think that any

00:06:16,820 --> 00:06:27,020
site will ever need that but never knew

00:06:19,690 --> 00:06:31,850
so um there's lots of fun stuff in html5

00:06:27,020 --> 00:06:33,380
and css3 and browser supports weird you

00:06:31,850 --> 00:06:36,860
shouldn't have to be able to or

00:06:33,380 --> 00:06:40,520
shouldn't have to be an expert at what

00:06:36,860 --> 00:06:42,950
browser does what you just build the

00:06:40,520 --> 00:06:44,300
features that you want on browsers that

00:06:42,950 --> 00:06:47,720
support it and then come up with a

00:06:44,300 --> 00:06:49,490
fallback using modernizer when they

00:06:47,720 --> 00:06:51,620
don't support it and then it just works

00:06:49,490 --> 00:06:53,090
if the older browsers or you know

00:06:51,620 --> 00:06:56,660
browser gets updated it has the

00:06:53,090 --> 00:06:58,910
capability then it will just not use

00:06:56,660 --> 00:07:02,650
that fall back and it will join the rest

00:06:58,910 --> 00:07:06,110
of the browsers with the latest features

00:07:02,650 --> 00:07:08,120
so on using this philosophy you can sort

00:07:06,110 --> 00:07:09,920
of modernize yourself and your sites

00:07:08,120 --> 00:07:14,390
without holding back because of like all

00:07:09,920 --> 00:07:17,270
varying browser support and to me kind

00:07:14,390 --> 00:07:20,450
of like has been a big deal like deeper

00:07:17,270 --> 00:07:22,669
than just like oh this is cool because I

00:07:20,450 --> 00:07:24,500
don't like being like held back in any

00:07:22,669 --> 00:07:26,930
way and the modern has allowed me to

00:07:24,500 --> 00:07:28,610
like when I would perhaps previously get

00:07:26,930 --> 00:07:30,770
to that wall and just be like what do I

00:07:28,610 --> 00:07:34,130
do you like moderniser is that tool that

00:07:30,770 --> 00:07:37,520
really takes me through it and so it's

00:07:34,130 --> 00:07:40,880
been sorely missing for most of my life

00:07:37,520 --> 00:07:43,570
but it's here now and obviously it's

00:07:40,880 --> 00:07:47,900
important enough to get into Drupal 8

00:07:43,570 --> 00:07:53,330
even if it's just a minimalist build so

00:07:47,900 --> 00:07:55,190
um Drupal 8 support html5 so you know it

00:07:53,330 --> 00:08:00,950
made sense to go with moderniser because

00:07:55,190 --> 00:08:02,810
that is what it is really good at so in

00:08:00,950 --> 00:08:04,550
the past not something that I really

00:08:02,810 --> 00:08:07,040
ever did but I know that it was common

00:08:04,550 --> 00:08:11,570
practice was to look at this user agent

00:08:07,040 --> 00:08:14,380
and that is rough business it is a

00:08:11,570 --> 00:08:17,360
friend for life prone to error

00:08:14,380 --> 00:08:19,100
maintenance nightmare and just sort of

00:08:17,360 --> 00:08:21,420
ugly and annoying to deal with

00:08:19,100 --> 00:08:25,530
definitely not beautiful

00:08:21,420 --> 00:08:27,060
so don't like this doesn't tell you much

00:08:25,530 --> 00:08:30,890
you're going to waste your time trying

00:08:27,060 --> 00:08:35,610
to extract that information from this so

00:08:30,890 --> 00:08:45,390
enter moderniser test for SPG if you

00:08:35,610 --> 00:08:47,280
support it true so simple all right so

00:08:45,390 --> 00:08:50,430
modernize it didn't come from you know

00:08:47,280 --> 00:08:53,490
some void well avoid for a need but it

00:08:50,430 --> 00:08:55,080
was created by people and developers are

00:08:53,490 --> 00:08:57,090
amazing and they've made it free and

00:08:55,080 --> 00:08:58,980
open source and they have an awesome

00:08:57,090 --> 00:09:01,230
website we can download these custom

00:08:58,980 --> 00:09:04,590
builds that are minified and it's

00:09:01,230 --> 00:09:07,800
awesome so these name go directly often

00:09:04,590 --> 00:09:09,720
modernize our website and of course

00:09:07,800 --> 00:09:14,280
there's a lot more contributors in this

00:09:09,720 --> 00:09:17,220
and you can find that on github and mad

00:09:14,280 --> 00:09:24,240
props to these people for moving the web

00:09:17,220 --> 00:09:27,870
forward so it's a lot of talk let's talk

00:09:24,240 --> 00:09:30,930
about how it actually works so it's a

00:09:27,870 --> 00:09:32,310
tiny script that loads at the I guess

00:09:30,930 --> 00:09:34,860
the top of the page like before your

00:09:32,310 --> 00:09:37,290
other scripts and it creates a

00:09:34,860 --> 00:09:40,380
JavaScript object with your test results

00:09:37,290 --> 00:09:43,200
whether it's true or false and all these

00:09:40,380 --> 00:09:44,640
tests you can find them on github you

00:09:43,200 --> 00:09:47,910
can see how they work and everything

00:09:44,640 --> 00:09:51,750
they're all super small and basically

00:09:47,910 --> 00:09:54,710
cover ever browser and so once that

00:09:51,750 --> 00:09:58,950
object is created that has true or false

00:09:54,710 --> 00:10:03,560
per test it adds those classes to the

00:09:58,950 --> 00:10:06,990
HTML element so you can use CSS so me

00:10:03,560 --> 00:10:10,890
let's start at the beginning so the

00:10:06,990 --> 00:10:12,210
source your page put new ojs because if

00:10:10,890 --> 00:10:17,600
you load your page without JavaScript

00:10:12,210 --> 00:10:22,040
that will be there and it's similar to

00:10:17,600 --> 00:10:24,570
conditional classes which is popular for

00:10:22,040 --> 00:10:27,660
with a lower versions of Internet

00:10:24,570 --> 00:10:29,310
Explorer you can put conditional HTML

00:10:27,660 --> 00:10:32,040
tags and then you get different classes

00:10:29,310 --> 00:10:34,980
HTML based on which browser it is but

00:10:32,040 --> 00:10:37,500
this is sort of takes that concept to to

00:10:34,980 --> 00:10:40,170
another level so when moderniser runs

00:10:37,500 --> 00:10:42,270
there were places that no Jas with James

00:10:40,170 --> 00:10:44,520
because obviously moderniser has wrong

00:10:42,270 --> 00:10:46,650
so now you know that you have JavaScript

00:10:44,520 --> 00:10:49,550
and that's sort of like just the

00:10:46,650 --> 00:10:51,810
beginning but I like to do is

00:10:49,550 --> 00:10:53,730
periodically a work on a project turn

00:10:51,810 --> 00:10:55,920
off JavaScript and then kind of see

00:10:53,730 --> 00:10:59,130
what's broken and then in some cases

00:10:55,920 --> 00:11:01,529
using this no Jas class and help you fix

00:10:59,130 --> 00:11:05,580
stuff for I guess the rare case and

00:11:01,529 --> 00:11:09,210
people don't have javascript working so

00:11:05,580 --> 00:11:12,600
it sort of the core concept but you know

00:11:09,210 --> 00:11:16,260
it goes a lot further so this is what

00:11:12,600 --> 00:11:19,529
your HTML element looks like in Drupal 8

00:11:16,260 --> 00:11:22,500
you can install a chord jubilant off of

00:11:19,529 --> 00:11:27,450
triple daughter work and you will see

00:11:22,500 --> 00:11:30,170
this one through page loads and so shows

00:11:27,450 --> 00:11:33,870
here that there was a touch test run an

00:11:30,170 --> 00:11:37,800
SVG test and a html5 details element

00:11:33,870 --> 00:11:39,900
test and I was on chrome / Matt so it

00:11:37,800 --> 00:11:42,720
says no touch instead of touch if it was

00:11:39,900 --> 00:11:46,920
a touch enabled device it would say

00:11:42,720 --> 00:11:49,890
touch so with that you can change styles

00:11:46,920 --> 00:11:52,290
and also because that exists that

00:11:49,890 --> 00:11:56,070
JavaScript object exists with which you

00:11:52,290 --> 00:11:57,540
can run different scripts and you can do

00:11:56,070 --> 00:12:00,080
traditional script loading and we'll

00:11:57,540 --> 00:12:00,080
talk about that later

00:12:07,410 --> 00:12:12,250
so the modernize our object in

00:12:10,029 --> 00:12:13,870
JavaScript just called modernizer on

00:12:12,250 --> 00:12:16,540
this page you could go to your console

00:12:13,870 --> 00:12:19,060
and type in moderniser touch and it will

00:12:16,540 --> 00:12:22,660
give you pulse and so from that object

00:12:19,060 --> 00:12:25,209
comes those CSS classes so just with

00:12:22,660 --> 00:12:27,459
these basically yes or no true or false

00:12:25,209 --> 00:12:30,759
you can do like a whole lot and you can

00:12:27,459 --> 00:12:33,699
combine them and it's not useful and the

00:12:30,759 --> 00:12:35,560
reason that these ones in particular or

00:12:33,699 --> 00:12:38,079
chosen is because they were needed for a

00:12:35,560 --> 00:12:41,230
Drupal core they needed a feature

00:12:38,079 --> 00:12:42,790
testing and modernizer already had it

00:12:41,230 --> 00:12:45,610
all figured out didn't have to roll

00:12:42,790 --> 00:12:50,250
their own special thing it was it was

00:12:45,610 --> 00:12:54,430
out there so I can show you some

00:12:50,250 --> 00:12:56,709
examples of how you can use these

00:12:54,430 --> 00:12:58,800
they're not complicated in any way

00:12:56,709 --> 00:13:02,740
they'll just sort of give you an idea

00:12:58,800 --> 00:13:07,360
the patterns that you can use so in this

00:13:02,740 --> 00:13:10,839
case um the header by default has a

00:13:07,360 --> 00:13:13,779
fixed position but if you have touch

00:13:10,839 --> 00:13:16,839
then it goes back to being static like

00:13:13,779 --> 00:13:19,990
that simple lot of sites don't have a

00:13:16,839 --> 00:13:23,470
proper sort of responsive framework and

00:13:19,990 --> 00:13:25,240
then on a tablet or phone like any kind

00:13:23,470 --> 00:13:26,529
of fixed element gets all super wonky

00:13:25,240 --> 00:13:28,360
when you zoom in or out or anything like

00:13:26,529 --> 00:13:30,129
that and like this would solve it right

00:13:28,360 --> 00:13:32,410
there that one test do you have touch or

00:13:30,129 --> 00:13:38,439
not you don't have it okay you get the

00:13:32,410 --> 00:13:47,769
standard CSS positioning which is static

00:13:38,439 --> 00:13:52,360
and duple core uses that touch test I

00:13:47,769 --> 00:13:54,029
believe for dragging like feels up and

00:13:52,360 --> 00:13:57,300
down and weights and stuff like that so

00:13:54,029 --> 00:14:04,629
the Drupal Avenue experience is touch

00:13:57,300 --> 00:14:07,000
capable and it uses this test to make it

00:14:04,629 --> 00:14:14,140
work properly on touch

00:14:07,000 --> 00:14:17,530
without touch another popular use of

00:14:14,140 --> 00:14:19,450
modernizer is for SVG most browsers

00:14:17,530 --> 00:14:26,080
support it but some don't and you don't

00:14:19,450 --> 00:14:28,870
want it to break and so in the Drupal 8

00:14:26,080 --> 00:14:30,910
toolbar it has really nice icons now and

00:14:28,870 --> 00:14:34,240
they're all SVG's and it has a fallback

00:14:30,910 --> 00:14:37,330
and it uses this pattern basically they

00:14:34,240 --> 00:14:40,300
don't have to use the dot SVG before it

00:14:37,330 --> 00:14:42,420
um you can but then I guess you run into

00:14:40,300 --> 00:14:45,760
an issue that if modernizer doesn't run

00:14:42,420 --> 00:14:48,100
then you wouldn't get anything so the

00:14:45,760 --> 00:14:49,750
scrubs leave off the first SPG just

00:14:48,100 --> 00:14:52,720
leave the no SVG basically whatever your

00:14:49,750 --> 00:14:55,570
default is you don't you don't need that

00:14:52,720 --> 00:15:00,910
moderniser prefix you but you want to

00:14:55,570 --> 00:15:03,070
use that on your fall backs so and this

00:15:00,910 --> 00:15:05,080
is a good example of how modern houses

00:15:03,070 --> 00:15:08,740
just kind of like a go to go to guy

00:15:05,080 --> 00:15:12,550
because the original bill for Drupal 8

00:15:08,740 --> 00:15:14,589
didn't have this SPG test and then there

00:15:12,550 --> 00:15:17,950
was a issue about how do we get high

00:15:14,589 --> 00:15:19,810
high DPI icons in the toolbar and then

00:15:17,950 --> 00:15:21,820
it was decided modernize would be that

00:15:19,810 --> 00:15:24,400
would do it so they just updated the

00:15:21,820 --> 00:15:30,100
build with the SVG test and up and

00:15:24,400 --> 00:15:33,550
running so you can also use that

00:15:30,100 --> 00:15:35,710
JavaScript object to run a script based

00:15:33,550 --> 00:15:36,910
on it so this is you're not going to

00:15:35,710 --> 00:15:38,560
want to use this grip on your site but

00:15:36,910 --> 00:15:44,620
it's just an example of how you can use

00:15:38,560 --> 00:15:46,150
it so if you have your SVG embedded it's

00:15:44,620 --> 00:15:49,410
going to break on certain browsers so

00:15:46,150 --> 00:15:52,810
then in that case you just swap in the

00:15:49,410 --> 00:15:54,280
swap in a PNG or whatever else so there

00:15:52,810 --> 00:15:59,260
are better ones where it'll look through

00:15:54,280 --> 00:16:01,270
your images and see what has SP GT and

00:15:59,260 --> 00:16:04,089
replace it with PNG wherever else so a

00:16:01,270 --> 00:16:06,810
lot different ways to do this one so

00:16:04,089 --> 00:16:06,810
yeah don't use this

00:16:11,630 --> 00:16:17,250
and then this details element is a

00:16:14,070 --> 00:16:18,420
really cool html5 element like we know

00:16:17,250 --> 00:16:19,680
all of our Drupal is always been those

00:16:18,420 --> 00:16:22,950
steel upsets that you can open and close

00:16:19,680 --> 00:16:26,700
and as part of the html5 you can do it

00:16:22,950 --> 00:16:29,430
straight in HTML no jquery javascript

00:16:26,700 --> 00:16:31,520
required but well weirdly not like

00:16:29,430 --> 00:16:36,740
firefox i think doesn't have support and

00:16:31,520 --> 00:16:38,820
ie but opera WebKit do so in this case

00:16:36,740 --> 00:16:44,070
you know what you see here would just

00:16:38,820 --> 00:16:46,290
work but then for the other browsers

00:16:44,070 --> 00:16:47,580
then you know you'd save modern hazard

00:16:46,290 --> 00:16:50,190
details is false then you have your

00:16:47,580 --> 00:16:51,930
fallback and so then once those browsers

00:16:50,190 --> 00:16:56,730
do support this they won't need that

00:16:51,930 --> 00:16:59,399
fall back but it's a way to you know

00:16:56,730 --> 00:17:02,100
support html5 and then not break it on

00:16:59,399 --> 00:17:07,679
older browsers or browsers that just

00:17:02,100 --> 00:17:09,480
haven't that they're not up with it so

00:17:07,679 --> 00:17:15,089
question is how does it get into Drupal

00:17:09,480 --> 00:17:18,000
8 well there are issue threads on Drupal

00:17:15,089 --> 00:17:19,740
that that you can read through and

00:17:18,000 --> 00:17:22,740
they're great examples of how the

00:17:19,740 --> 00:17:25,589
community comes together and makes this

00:17:22,740 --> 00:17:28,230
kind of thing happen they make wise

00:17:25,589 --> 00:17:31,170
decisions about the future and where

00:17:28,230 --> 00:17:32,340
things are headed and so when I found

00:17:31,170 --> 00:17:33,870
that thread conversation was already

00:17:32,340 --> 00:17:38,730
over but I had gone through it a few

00:17:33,870 --> 00:17:40,170
times and um obviously it was an effort

00:17:38,730 --> 00:17:42,030
to get it in the in there but then once

00:17:40,170 --> 00:17:44,960
it was realized that it was not a

00:17:42,030 --> 00:17:47,940
feature but rather like essential for

00:17:44,960 --> 00:17:50,460
supporting older browsers and html5

00:17:47,940 --> 00:17:53,300
features it was decided that it would

00:17:50,460 --> 00:17:53,300
end up in Drupal 8

00:17:59,059 --> 00:18:09,440
so there's only four tests and I guess

00:18:02,640 --> 00:18:14,630
four different another word for it but

00:18:09,440 --> 00:18:14,630
sort of like supporting functions and

00:18:15,620 --> 00:18:22,740
kind of gone over the touch SVG the

00:18:20,429 --> 00:18:25,230
details element and the input types is

00:18:22,740 --> 00:18:27,840
HTML has all these new input types like

00:18:25,230 --> 00:18:29,549
color and number and date and stuff and

00:18:27,840 --> 00:18:32,100
same deal you have to have a fallback

00:18:29,549 --> 00:18:34,650
for that so they needed that Drupal core

00:18:32,100 --> 00:18:37,559
so there was the test ready for them

00:18:34,650 --> 00:18:42,900
with modern rouser and of course there's

00:18:37,559 --> 00:18:47,000
like over a hundred other once so then

00:18:42,900 --> 00:18:47,000
the utility function some of them are

00:18:47,809 --> 00:18:52,950
requirements for those tests like I

00:18:50,700 --> 00:18:56,160
believe test styles and prefixes are

00:18:52,950 --> 00:18:59,330
required for the touch events and then

00:18:56,160 --> 00:19:01,590
the AB CSS classes is required for

00:18:59,330 --> 00:19:05,880
moderniser to inject those classes into

00:19:01,590 --> 00:19:09,360
the HTML tab and so the only thing that

00:19:05,880 --> 00:19:12,299
was really not totally required that got

00:19:09,360 --> 00:19:15,000
into Drupal core was that ad test

00:19:12,299 --> 00:19:18,360
plug-in API but that lets you do is run

00:19:15,000 --> 00:19:19,710
your own tests that are just like that

00:19:18,360 --> 00:19:23,299
are just like the tests that you can

00:19:19,710 --> 00:19:26,390
that you can get from modern rouser calm

00:19:23,299 --> 00:19:28,530
but you can test for whatever you want

00:19:26,390 --> 00:19:30,270
but what's cool about modernizer is that

00:19:28,530 --> 00:19:32,760
it's not like jQuery where I guess you

00:19:30,270 --> 00:19:34,980
could break certain things by installing

00:19:32,760 --> 00:19:37,020
new versions and so the idea is that

00:19:34,980 --> 00:19:39,480
what your book or we'll be able to move

00:19:37,020 --> 00:19:41,400
keep upgrading modernizer along with it

00:19:39,480 --> 00:19:43,919
because the part of it that you

00:19:41,400 --> 00:19:48,140
interface with whether you know the

00:19:43,919 --> 00:19:52,230
object true or false or that CSS class

00:19:48,140 --> 00:19:53,610
with no before it or not is the same so

00:19:52,230 --> 00:19:56,210
you can do all sorts backend stuff to

00:19:53,610 --> 00:19:58,610
make it better figure out compatibility

00:19:56,210 --> 00:20:00,290
tables like from can I use stock

00:19:58,610 --> 00:20:04,940
so hopefully we'll see modern as a

00:20:00,290 --> 00:20:06,559
three-point Oh in Drupal 8 so when I

00:20:04,940 --> 00:20:08,570
told a lot of people about mon res what

00:20:06,559 --> 00:20:10,640
they're like featured session like that

00:20:08,570 --> 00:20:12,890
must be like super heavy like are you

00:20:10,640 --> 00:20:17,110
sure like that's a good idea but like

00:20:12,890 --> 00:20:20,330
it's super tiny and basically negligible

00:20:17,110 --> 00:20:24,799
it's like when it's gzipped it's tiny

00:20:20,330 --> 00:20:27,140
and it gets cached and just it runs in

00:20:24,799 --> 00:20:29,809
what i've read microseconds which i

00:20:27,140 --> 00:20:31,220
guess is a millionth of a second so

00:20:29,809 --> 00:20:35,179
usually don't have to worry about

00:20:31,220 --> 00:20:41,030
moderniser causing any performance

00:20:35,179 --> 00:20:42,770
issues it's fast I was on the wells

00:20:41,030 --> 00:20:44,330
fargo website and i was looking at their

00:20:42,770 --> 00:20:48,320
source and they had the fully

00:20:44,330 --> 00:20:51,140
uncompressed version of modernizer with

00:20:48,320 --> 00:20:53,240
like you know 50 different tests or

00:20:51,140 --> 00:20:54,320
something like that and like I couldn't

00:20:53,240 --> 00:20:56,090
tell the difference but obviously the

00:20:54,320 --> 00:20:58,220
sling something down they have since

00:20:56,090 --> 00:20:59,780
change that but I think it was funny lot

00:20:58,220 --> 00:21:02,660
of sites you can you can just open up

00:20:59,780 --> 00:21:04,460
your your inspector look at the HTML tag

00:21:02,660 --> 00:21:06,470
and if you see there's like telltale

00:21:04,460 --> 00:21:09,440
signs that is moderniser you'll see

00:21:06,470 --> 00:21:12,890
touch a lot SPG and then there's a bunch

00:21:09,440 --> 00:21:19,059
of ones that aren't part of like the

00:21:12,890 --> 00:21:25,700
core tests but are used to decent effect

00:21:19,059 --> 00:21:26,660
so this is how you add a test this is if

00:21:25,700 --> 00:21:29,419
you didn't want to replace the

00:21:26,660 --> 00:21:32,030
non-drowsy library you could add a test

00:21:29,419 --> 00:21:35,030
to it I guess you know if you have

00:21:32,030 --> 00:21:37,700
jablay and you um don't want to add

00:21:35,030 --> 00:21:40,070
extra weight of the module or I don't

00:21:37,700 --> 00:21:43,910
know but you can use this and you can do

00:21:40,070 --> 00:21:45,799
a test example this is for a jquery

00:21:43,910 --> 00:21:49,910
course it's a cross-origin resource

00:21:45,799 --> 00:21:52,700
sharing you can do Ajax calls to

00:21:49,910 --> 00:21:54,970
different servers and the way it works

00:21:52,700 --> 00:21:54,970
is

00:21:55,820 --> 00:22:04,520
right here all right so this right here

00:21:59,570 --> 00:22:06,470
is the name of the test so that's what

00:22:04,520 --> 00:22:08,630
comes back as see in the bottom there

00:22:06,470 --> 00:22:11,830
modernizing our port is true and then it

00:22:08,630 --> 00:22:18,620
puts in HTML tag and then basically this

00:22:11,830 --> 00:22:20,870
would have to be true and this would

00:22:18,620 --> 00:22:27,830
have to be true and if they're both true

00:22:20,870 --> 00:22:29,090
then the test comes back as true and you

00:22:27,830 --> 00:22:32,630
can work with it from there and so I

00:22:29,090 --> 00:22:35,630
just got this from the github repository

00:22:32,630 --> 00:22:37,850
there's tons of different tests there

00:22:35,630 --> 00:22:39,890
and usually you want to add something

00:22:37,850 --> 00:22:42,110
this to your modernizer build but you

00:22:39,890 --> 00:22:43,550
know you have the ability anywhere in

00:22:42,110 --> 00:22:48,910
your document you how to test like this

00:22:43,550 --> 00:22:48,910
or in your module or beam or whatever

00:22:49,210 --> 00:22:55,880
all right so you're definitely going to

00:22:53,150 --> 00:22:58,970
want to augment the functionality of

00:22:55,880 --> 00:23:01,520
moderniser in Drupal 8 and drupal 7

00:22:58,970 --> 00:23:02,900
tears like drupal 8 it's like such a

00:23:01,520 --> 00:23:05,120
minimalist build you can really just

00:23:02,900 --> 00:23:09,050
like do a little bit with it but if you

00:23:05,120 --> 00:23:15,910
are going to use it to its full

00:23:09,050 --> 00:23:18,470
potential you need to download the

00:23:15,910 --> 00:23:21,170
uncompressed library and then work with

00:23:18,470 --> 00:23:25,580
it and then once you know what you need

00:23:21,170 --> 00:23:29,750
to use then you can customize it and

00:23:25,580 --> 00:23:32,660
minify it just like we did for oblate so

00:23:29,750 --> 00:23:34,310
let's say all right number one modern

00:23:32,660 --> 00:23:39,950
razor calm is again awesome website

00:23:34,310 --> 00:23:41,720
there's documentation there is this

00:23:39,950 --> 00:23:45,650
download or tool there are resources

00:23:41,720 --> 00:23:48,350
there's news so right here you can see

00:23:45,650 --> 00:23:51,500
this is I had clicked the link for the

00:23:48,350 --> 00:23:53,930
development uncompressed version so

00:23:51,500 --> 00:23:55,460
basically everything is checked off I

00:23:53,930 --> 00:23:57,980
see that the media queries one is not

00:23:55,460 --> 00:24:00,010
checked by default that's a good one to

00:23:57,980 --> 00:24:00,010
use

00:24:00,290 --> 00:24:06,200
so this is sort of usually where you

00:24:04,430 --> 00:24:08,060
begin and right now if you're working

00:24:06,200 --> 00:24:09,680
with Drupal 7 that's what this way

00:24:08,060 --> 00:24:11,900
there's where you start and in Drupal 8

00:24:09,680 --> 00:24:15,860
once there's the module ready you're

00:24:11,900 --> 00:24:18,980
going to want to do that too so today

00:24:15,860 --> 00:24:24,560
there's amazing integration with Drupal

00:24:18,980 --> 00:24:26,770
7 and modernizer so but it's good to

00:24:24,560 --> 00:24:33,050
know because it's going to persist into

00:24:26,770 --> 00:24:38,930
jablay so droop in Drupal 7 the html5

00:24:33,050 --> 00:24:42,160
shiv is required basically if for ie8

00:24:38,930 --> 00:24:45,110
and below to understand html5 elements

00:24:42,160 --> 00:24:47,030
but in Drupal 8 it's included by default

00:24:45,110 --> 00:24:51,010
so you're not going to need that in

00:24:47,030 --> 00:24:57,950
Drupal 8 but people seven yeah probably

00:24:51,010 --> 00:24:59,690
um so when you download this one you'll

00:24:57,950 --> 00:25:04,010
be able to see I don't know how visible

00:24:59,690 --> 00:25:07,790
it is in that gray box there is the file

00:25:04,010 --> 00:25:11,510
and at the top of it is always going to

00:25:07,790 --> 00:25:14,330
be a link with your entire build so

00:25:11,510 --> 00:25:17,060
actually if I go back one and look up at

00:25:14,330 --> 00:25:20,720
the top you can see up in the URL there

00:25:17,060 --> 00:25:25,940
is a long list of tests and so in every

00:25:20,720 --> 00:25:28,460
min ified moderniser file you have the

00:25:25,940 --> 00:25:30,850
entire list of tests that are included

00:25:28,460 --> 00:25:30,850
in it

00:25:37,620 --> 00:25:44,610
alright so we're still on Drupal 7 here

00:25:40,180 --> 00:25:50,970
and modernize our module is a must-have

00:25:44,610 --> 00:25:54,160
yes you can just include the modernizer

00:25:50,970 --> 00:25:55,660
library manually but this module will

00:25:54,160 --> 00:25:57,850
put it in the right place and it will

00:25:55,660 --> 00:26:01,770
give you integration with other modules

00:25:57,850 --> 00:26:05,350
and and hooks for modules and themes to

00:26:01,770 --> 00:26:08,710
utilize it so that's one of the modules

00:26:05,350 --> 00:26:11,620
i use on you know put in by default

00:26:08,710 --> 00:26:15,970
whenever I start a new Drupal site is

00:26:11,620 --> 00:26:18,010
always going to come in handy so what's

00:26:15,970 --> 00:26:23,110
really cool about it is that just uses

00:26:18,010 --> 00:26:25,540
all the Drupal II things like being able

00:26:23,110 --> 00:26:29,170
to declare tests in your theme info file

00:26:25,540 --> 00:26:31,360
is really awesome and then you know in

00:26:29,170 --> 00:26:34,510
PHP in your modules you can use a hook

00:26:31,360 --> 00:26:39,760
to run tests also and it will convert

00:26:34,510 --> 00:26:43,480
that code into JavaScript that does all

00:26:39,760 --> 00:26:45,280
the modernize our magic so this will be

00:26:43,480 --> 00:26:48,760
available for Drupal 8 i'm cherdon and

00:26:45,280 --> 00:26:51,720
i'm going to try to work on my PHP chops

00:26:48,760 --> 00:26:57,850
a little bit see if I can contribute it

00:26:51,720 --> 00:27:00,400
but it's great okay you have modernizer

00:26:57,850 --> 00:27:08,880
you have the module now you have the

00:27:00,400 --> 00:27:12,400
tools yeah now you can build a site

00:27:08,880 --> 00:27:15,070
using a feature detection and generally

00:27:12,400 --> 00:27:18,970
it's for polyfills fallbacks and

00:27:15,070 --> 00:27:20,830
enhanced user experience I've gone a

00:27:18,970 --> 00:27:22,060
little moderniser overboard at certain

00:27:20,830 --> 00:27:23,980
times and I just try to use it for

00:27:22,060 --> 00:27:25,420
everything and then I realized that it

00:27:23,980 --> 00:27:26,740
wasn't the best used for something and

00:27:25,420 --> 00:27:28,870
that there's sometimes natural fallbacks

00:27:26,740 --> 00:27:31,660
or that you can get too convoluted from

00:27:28,870 --> 00:27:33,700
using too many different tasks so it's a

00:27:31,660 --> 00:27:35,290
tool and sort of once you use it a bit

00:27:33,700 --> 00:27:37,630
and understand it you'll come across a

00:27:35,290 --> 00:27:40,240
problem and it's like okay moderniser is

00:27:37,630 --> 00:27:43,380
the solution for this and it's going to

00:27:40,240 --> 00:27:43,380
save me a lot of time

00:27:44,179 --> 00:27:51,139
so the one thing that is not part of

00:27:48,499 --> 00:27:52,909
Drupal 8 core and really like I don't

00:27:51,139 --> 00:27:55,129
know nerfs the whole library is not

00:27:52,909 --> 00:27:57,409
having modernizer load I understand why

00:27:55,129 --> 00:28:00,700
it didn't get in there but this is like

00:27:57,409 --> 00:28:07,249
the essential piece to modernize or that

00:28:00,700 --> 00:28:13,460
you just have to use it because it's

00:28:07,249 --> 00:28:16,970
mono superpower so what montanari load

00:28:13,460 --> 00:28:18,700
lets you do is conditional resource

00:28:16,970 --> 00:28:20,809
loading based on test results

00:28:18,700 --> 00:28:23,240
asynchronous so it doesn't block

00:28:20,809 --> 00:28:27,679
anything super fast and it's really easy

00:28:23,240 --> 00:28:30,340
to understand and just lie it's going to

00:28:27,679 --> 00:28:34,970
be faster if you use this sort of thing

00:28:30,340 --> 00:28:36,860
in the right situations so this is just

00:28:34,970 --> 00:28:40,100
an example of a polyfill using monitors

00:28:36,860 --> 00:28:42,110
below your situation where it's this

00:28:40,100 --> 00:28:43,519
example is used all the time but with

00:28:42,110 --> 00:28:46,639
geolocation you always have to use a

00:28:43,519 --> 00:28:48,799
poly fill in some way so this test is

00:28:46,639 --> 00:28:51,559
basically testing to see if Gio

00:28:48,799 --> 00:28:54,019
locations true on html5 browser would be

00:28:51,559 --> 00:28:57,610
and if it's not then it loads this

00:28:54,019 --> 00:29:03,049
polyfill and for and to your app or

00:28:57,610 --> 00:29:04,940
whatever it is um it doesn't have to

00:29:03,049 --> 00:29:08,029
know about that polyfill rights it's

00:29:04,940 --> 00:29:10,070
kind of separate from it and so your app

00:29:08,029 --> 00:29:11,509
does what it does and then on the

00:29:10,070 --> 00:29:13,159
browser side if it doesn't support your

00:29:11,509 --> 00:29:16,970
location you have this polyfill and then

00:29:13,159 --> 00:29:21,460
your app just works so this that's the

00:29:16,970 --> 00:29:24,320
popular use of modern as your load and

00:29:21,460 --> 00:29:27,200
isn't it doesn't just have to be no you

00:29:24,320 --> 00:29:31,730
can also have yep and yet really is yep

00:29:27,200 --> 00:29:33,379
and nope in this and they they released

00:29:31,730 --> 00:29:37,610
that separate from modern razors just

00:29:33,379 --> 00:29:40,399
called yep nope j/s and it's awesome in

00:29:37,610 --> 00:29:42,940
this case this is more like a user

00:29:40,399 --> 00:29:45,619
experience enhancement using it so

00:29:42,940 --> 00:29:48,140
there's tiny bit of code basically test

00:29:45,619 --> 00:29:51,230
to see if moderniser touch is true and

00:29:48,140 --> 00:29:55,990
so loes a couple J's files and then when

00:29:51,230 --> 00:29:59,960
it's complete runs a function so it can

00:29:55,990 --> 00:30:01,610
load at any point basically and the

00:29:59,960 --> 00:30:03,530
people who don't have touch never have

00:30:01,610 --> 00:30:07,100
to load those or deal with that sort of

00:30:03,530 --> 00:30:14,120
thing so this sort of concept of doing a

00:30:07,100 --> 00:30:16,910
test and then from there loading j/s or

00:30:14,120 --> 00:30:19,040
even CSS you can load a CSS file and add

00:30:16,910 --> 00:30:20,630
styles to a page or background images or

00:30:19,040 --> 00:30:24,100
whatever you want so you can get

00:30:20,630 --> 00:30:28,340
creative with this on user interface and

00:30:24,100 --> 00:30:30,860
it's fun so yeah I mean getting creative

00:30:28,340 --> 00:30:32,990
you can take it pretty far you can say

00:30:30,860 --> 00:30:35,080
you know if you have touch small screen

00:30:32,990 --> 00:30:38,870
width i'm going to give you a big button

00:30:35,080 --> 00:30:44,530
whatever you want but it's tempting to

00:30:38,870 --> 00:30:48,440
use it all the time I'm guilty of that

00:30:44,530 --> 00:30:49,790
so in this case you know fallbacks can

00:30:48,440 --> 00:30:55,280
be a creative exercise they don't just

00:30:49,790 --> 00:30:57,890
have to be let's make a fallback like we

00:30:55,280 --> 00:30:59,390
can't even have fun with it so like I

00:30:57,890 --> 00:31:00,560
don't know if you think like eight bit

00:30:59,390 --> 00:31:03,880
or something like that you can create a

00:31:00,560 --> 00:31:08,390
good game today on like an 8-bit type of

00:31:03,880 --> 00:31:11,720
console so yes it's this is very pink

00:31:08,390 --> 00:31:13,430
and I have an example here it's used a

00:31:11,720 --> 00:31:15,890
lot because there's no good way to test

00:31:13,430 --> 00:31:17,630
for box-shadow basically so let's say

00:31:15,890 --> 00:31:20,420
some designer comes up with this design

00:31:17,630 --> 00:31:21,800
that's maybe it's white or gray where

00:31:20,420 --> 00:31:23,420
the modal windows the same color as the

00:31:21,800 --> 00:31:26,150
background and they want a drop shadow

00:31:23,420 --> 00:31:31,310
or something so it's not going to work

00:31:26,150 --> 00:31:34,400
on a browser without box shadow so what

00:31:31,310 --> 00:31:37,250
do you do come up with a fallback that

00:31:34,400 --> 00:31:39,320
has a bit of creativity to it I know it

00:31:37,250 --> 00:31:43,760
looks better that than the drop shadow

00:31:39,320 --> 00:31:47,900
but for demonstration purposes someone

00:31:43,760 --> 00:31:49,700
on ie8 you know um he's going to see

00:31:47,900 --> 00:31:51,950
that white border and you know it like

00:31:49,700 --> 00:31:54,740
drop shadows and rounded corners and

00:31:51,950 --> 00:31:56,420
stuff can be really tiresome so maybe

00:31:54,740 --> 00:31:58,400
they never updated from I ate because

00:31:56,420 --> 00:32:00,980
they don't like to see drop shadows

00:31:58,400 --> 00:32:04,850
and rounded corners and so you're giving

00:32:00,980 --> 00:32:06,950
them what they want nice corners of a

00:32:04,850 --> 00:32:09,530
box so wait the way this would work is

00:32:06,950 --> 00:32:11,510
pretty simple if it's ie8 so you're

00:32:09,530 --> 00:32:15,620
going to get that no box shadow class up

00:32:11,510 --> 00:32:20,540
in the HTML element and then your

00:32:15,620 --> 00:32:25,160
default CSS is to have that box shadow

00:32:20,540 --> 00:32:27,920
and then we don't have box shadow you

00:32:25,160 --> 00:32:28,760
get the border everyone's happy don't

00:32:27,920 --> 00:32:30,380
have to worry about which browser

00:32:28,760 --> 00:32:31,490
support what you just know that if some

00:32:30,380 --> 00:32:35,020
browser out there that doesn't have it

00:32:31,490 --> 00:32:35,020
they're going to get your fallback so

00:32:41,830 --> 00:32:48,740
there's a lot of information out there

00:32:44,090 --> 00:32:51,500
about modernizer Mon Rosa com Chris

00:32:48,740 --> 00:32:54,590
ruppel did a really good presentation at

00:32:51,500 --> 00:32:58,790
Portland and I've used that slide deck a

00:32:54,590 --> 00:33:01,700
bunch of times for reference you can

00:32:58,790 --> 00:33:08,510
also just google search modern Hauser

00:33:01,700 --> 00:33:12,110
and you'll find all this stuff so I hope

00:33:08,510 --> 00:33:14,690
that I was able to get the core concepts

00:33:12,110 --> 00:33:19,460
across about ma browser and how to use

00:33:14,690 --> 00:33:22,420
it and happy to answer any questions

00:33:19,460 --> 00:33:22,420
that you may have

00:33:38,240 --> 00:33:44,010
so if you need something more for drupal

00:33:41,250 --> 00:33:46,320
8 like more than just the the basic

00:33:44,010 --> 00:33:48,330
tests that are enabled like you shed box

00:33:46,320 --> 00:33:51,390
shadow right there what's kind of the

00:33:48,330 --> 00:33:53,190
practice for i mean do you disable the

00:33:51,390 --> 00:33:55,620
drupal 8 version of the script and then

00:33:53,190 --> 00:33:57,990
put your own in or what's kind of the

00:33:55,620 --> 00:34:00,740
approach there as i understand it

00:33:57,990 --> 00:34:03,049
that'll be the way in Drupal 8 when you

00:34:00,740 --> 00:34:06,840
install the module you'll be able to

00:34:03,049 --> 00:34:08,669
override the core modernizer with

00:34:06,840 --> 00:34:16,740
whatever build and modernize that you

00:34:08,669 --> 00:34:20,790
want okay thanks do you know of like a

00:34:16,740 --> 00:34:26,399
resource where you can see which

00:34:20,790 --> 00:34:30,950
browsers have which features and based

00:34:26,399 --> 00:34:34,230
on moderniser stuff oh yes can I use com

00:34:30,950 --> 00:34:37,290
that is the place totally updated it

00:34:34,230 --> 00:34:39,510
shows you a few versions ahead what's

00:34:37,290 --> 00:34:41,339
what's planned so you can plan for the

00:34:39,510 --> 00:34:44,639
future it will show you like as far back

00:34:41,339 --> 00:34:46,619
as you really want and there's going to

00:34:44,639 --> 00:34:49,500
be a level of integration between that

00:34:46,619 --> 00:34:52,770
and modernize at three point oh when it

00:34:49,500 --> 00:34:57,619
comes out as I understand it so yeah can

00:34:52,770 --> 00:34:57,619
I use go to place can't go wrong with it

00:35:00,990 --> 00:35:05,490
anyone else you can just shout yes

00:35:07,040 --> 00:35:12,450
one of the options for when you download

00:35:09,900 --> 00:35:16,200
moderniser is to include the html5 ship

00:35:12,450 --> 00:35:19,080
and so my question is do you recommend

00:35:16,200 --> 00:35:22,800
doing that or adding the HTML ship html5

00:35:19,080 --> 00:35:24,330
achieve separately artists own script in

00:35:22,800 --> 00:35:26,760
my experience modernize it is a really

00:35:24,330 --> 00:35:28,230
good job of handling that and so since i

00:35:26,760 --> 00:35:31,160
put modernizer on every side i just

00:35:28,230 --> 00:35:35,340
include that shiv and it does its thing

00:35:31,160 --> 00:35:38,670
I don't know entirely the reason why it

00:35:35,340 --> 00:35:41,280
was separate in Drupal 8 sure some very

00:35:38,670 --> 00:35:51,990
good reason but I just use modern as up

00:35:41,280 --> 00:35:59,460
in that all the time thank anyone

00:35:51,990 --> 00:36:07,200
else all right I guess that wraps it up

00:35:59,460 --> 00:36:10,410
thank you all for coming one one quick

00:36:07,200 --> 00:36:14,270
one for you as you said that will be

00:36:10,410 --> 00:36:18,690
replacing the Drupal eights modernizer

00:36:14,270 --> 00:36:21,120
like with our own is there like a list

00:36:18,690 --> 00:36:24,480
so that we don't like disable something

00:36:21,120 --> 00:36:26,790
that Drupal a should have that we're

00:36:24,480 --> 00:36:29,400
going to not include in ours sort of

00:36:26,790 --> 00:36:32,180
thing I don't have the answer to that

00:36:29,400 --> 00:36:35,400
and I've wanted the same thing myself

00:36:32,180 --> 00:36:38,820
you're about to find out how that works

00:36:35,400 --> 00:36:40,880
hi I'm the guy that right the wrote the

00:36:38,820 --> 00:36:44,130
moderniser module and there's a Drupal

00:36:40,880 --> 00:36:48,570
dependency like there's a Drupal API for

00:36:44,130 --> 00:36:51,450
it so when you uh Gee too short when you

00:36:48,570 --> 00:36:53,010
go to the admin configuration page what

00:36:51,450 --> 00:36:56,670
it does is it actually asks all the

00:36:53,010 --> 00:36:59,310
modules and themes in the system of like

00:36:56,670 --> 00:37:02,790
what they want and so it's just a hook

00:36:59,310 --> 00:37:05,220
you do moderniser info like my module

00:37:02,790 --> 00:37:06,660
moderniser info and it says oh I need

00:37:05,220 --> 00:37:09,150
box-shadow I need like you know

00:37:06,660 --> 00:37:11,310
geolocation or something like that if

00:37:09,150 --> 00:37:13,440
you look at the geolocation field module

00:37:11,310 --> 00:37:14,970
it actually has the moderniser hook

00:37:13,440 --> 00:37:17,940
implemented so you can get a good idea

00:37:14,970 --> 00:37:19,830
for how it works so then what happens is

00:37:17,940 --> 00:37:21,360
that URL that Chad

00:37:19,830 --> 00:37:23,670
mentioned that takes you to the

00:37:21,360 --> 00:37:26,820
moderniser page it basically uses all

00:37:23,670 --> 00:37:29,970
those little slugs and auto generates a

00:37:26,820 --> 00:37:31,980
URL for you to go there and grab your

00:37:29,970 --> 00:37:34,530
new build and the ones that are in core

00:37:31,980 --> 00:37:36,510
will be accounted for automatically in

00:37:34,530 --> 00:37:38,130
the control will just be hard-coded in

00:37:36,510 --> 00:37:41,040
so that the core ones can't be removed

00:37:38,130 --> 00:37:42,450
unless you go and do it yourself which

00:37:41,040 --> 00:37:44,480
is possible so you could break it on

00:37:42,450 --> 00:37:46,830
purpose but it won't break by default

00:37:44,480 --> 00:37:48,830
and also we're working on some like

00:37:46,830 --> 00:37:51,330
drush commands and stuff like that to

00:37:48,830 --> 00:37:52,620
auto-generate all this stuff for you on

00:37:51,330 --> 00:37:56,010
the command line and just put it in the

00:37:52,620 --> 00:37:59,640
right place so that's the that's the

00:37:56,010 --> 00:38:00,600
quick version awesome yeah so you don't

00:37:59,640 --> 00:38:02,580
go to modernize they're gonna come

00:38:00,600 --> 00:38:05,070
directly you go to the amount another

00:38:02,580 --> 00:38:10,070
module in your drupal admitted face and

00:38:05,070 --> 00:38:12,090
then not only will the core items be

00:38:10,070 --> 00:38:14,340
requested by default but whatever other

00:38:12,090 --> 00:38:15,360
modules are requesting certain tests and

00:38:14,340 --> 00:38:18,390
they'll take you tomorrow sir you can

00:38:15,360 --> 00:38:20,010
then add whatever you want and it sounds

00:38:18,390 --> 00:38:22,430
like a great solution I can't wait to

00:38:20,010 --> 00:38:22,430
use that

00:38:31,400 --> 00:38:34,240
any more questions

00:38:35,120 --> 00:38:41,020
so everyone knows how to use modernizing

00:38:36,830 --> 00:38:41,020

YouTube URL: https://www.youtube.com/watch?v=d9NkwIyEoE8


