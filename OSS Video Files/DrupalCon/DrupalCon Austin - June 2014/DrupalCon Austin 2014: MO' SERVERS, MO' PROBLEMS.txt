Title: DrupalCon Austin 2014: MO' SERVERS, MO' PROBLEMS
Publication date: 2014-06-04
Playlist: DrupalCon Austin - June 2014
Description: 
	Speakers: Nick Stielau
Servers have approximately about (ls /etc/; ps aux; netstat -nltp) | wc -l things that can go awry.

Find out how you can safely and securely run fewer servers to achieve operational and cost-of-goods efficiencies using different Open Source 'containerization' technologies. We'll go over some of the foundational technologies including 'cgroups' and 'kernel namespaces', as well as tools to deploying and managing containers, including Let Me Containerize That For You from Google, Docker from Docker.io, Systemd from the Red Hat community, and LXC from Linux core.
Captions: 
	00:00:00,770 --> 00:00:06,299
yeah all right there's a bunch of seats

00:00:04,020 --> 00:00:08,340
up front that I have the notice and so

00:00:06,299 --> 00:00:10,230
nobody moves from the back route to the

00:00:08,340 --> 00:00:12,719
front row I'm gonna be forced to yell

00:00:10,230 --> 00:00:15,900
into the microphone which might just be

00:00:12,719 --> 00:00:20,460
unpleasant for everyone any takers

00:00:15,900 --> 00:00:22,109
back row second or last row this stock

00:00:20,460 --> 00:00:30,570
is going to be entertaining no matter

00:00:22,109 --> 00:00:35,250
what so oh that's good okay thank you so

00:00:30,570 --> 00:00:37,140
much okay well I think we'll just jump

00:00:35,250 --> 00:00:39,690
into it and anyone that comes late is

00:00:37,140 --> 00:00:42,719
gonna miss the awesome intro so thank

00:00:39,690 --> 00:00:43,469
you for coming to most servers no

00:00:42,719 --> 00:00:46,110
problems

00:00:43,469 --> 00:00:50,430
my name is Nick steel ow or at pantheon

00:00:46,110 --> 00:00:52,530
and I firmly believe that the more

00:00:50,430 --> 00:00:54,480
servers you have the more problems you

00:00:52,530 --> 00:00:59,340
have and I'm gonna try to convince you

00:00:54,480 --> 00:01:02,399
of that and talk a little bit about some

00:00:59,340 --> 00:01:08,820
alternatives and wins containers what

00:01:02,399 --> 00:01:12,540
they can do for you so really this talk

00:01:08,820 --> 00:01:13,799
is about containers versus VMs well

00:01:12,540 --> 00:01:16,350
we're not gonna worry about that too

00:01:13,799 --> 00:01:19,080
much right now I'll convince you of that

00:01:16,350 --> 00:01:20,759
in a little bit so we're just gonna

00:01:19,080 --> 00:01:22,259
start off with kind of what kind of

00:01:20,759 --> 00:01:23,430
problems and not am I talking about

00:01:22,259 --> 00:01:25,560
they're not kind of these like

00:01:23,430 --> 00:01:28,470
existential worries you know kind of out

00:01:25,560 --> 00:01:31,439
there I'm talking about real problems

00:01:28,470 --> 00:01:33,630
that that are paying for site owners

00:01:31,439 --> 00:01:36,240
timeout downtime and I'm particularly

00:01:33,630 --> 00:01:38,729
talking about problems for kind of

00:01:36,240 --> 00:01:40,740
operators systems administrators the

00:01:38,729 --> 00:01:43,350
people who might be getting alerts from

00:01:40,740 --> 00:01:46,649
such things as Pingdom pedro duty dusk

00:01:43,350 --> 00:01:47,670
com New Relic you name it problems that

00:01:46,649 --> 00:01:49,770
are waking up at night

00:01:47,670 --> 00:01:51,869
bothering you on the weekends and not

00:01:49,770 --> 00:01:57,659
keeping the beautiful sites that people

00:01:51,869 --> 00:01:59,100
are creating online so really this talk

00:01:57,659 --> 00:02:01,380
is going to be about how using

00:01:59,100 --> 00:02:04,500
containers instead of VMs can increase

00:02:01,380 --> 00:02:05,979
your uptime and decrease decrease the

00:02:04,500 --> 00:02:07,719
number of problems you encounter

00:02:05,979 --> 00:02:10,090
specifically those problems encounter

00:02:07,719 --> 00:02:11,890
human interaction which are a special

00:02:10,090 --> 00:02:16,300
kind of annoying problem which I'll get

00:02:11,890 --> 00:02:18,160
into shortly I don't think I don't see

00:02:16,300 --> 00:02:20,440
mark but he wanted me to talk about the

00:02:18,160 --> 00:02:21,970
shadow cloud in this talk and this was

00:02:20,440 --> 00:02:23,500
this is about as close as it's gonna get

00:02:21,970 --> 00:02:26,560
there's the clouds and there were

00:02:23,500 --> 00:02:30,700
shadows under it but I had to crop them

00:02:26,560 --> 00:02:35,049
out to make it pretty itself we can save

00:02:30,700 --> 00:02:37,090
shadow shadow time for Q&A and one

00:02:35,049 --> 00:02:39,760
remind us that we are living in the

00:02:37,090 --> 00:02:41,049
future and there's a lot of cool stuff

00:02:39,760 --> 00:02:43,000
out there you know clouds been around

00:02:41,049 --> 00:02:44,980
for a while containers like kind of big

00:02:43,000 --> 00:02:46,420
buzzword and I want to convince you guys

00:02:44,980 --> 00:02:47,860
that this is something like we should

00:02:46,420 --> 00:02:49,780
all learn more about and figure out how

00:02:47,860 --> 00:02:51,040
it can like serve serve ourselves and

00:02:49,780 --> 00:02:56,349
the people we work with and the site

00:02:51,040 --> 00:02:58,239
owners and and everyone around us and

00:02:56,349 --> 00:03:01,569
then lastly I'll promise that we will

00:02:58,239 --> 00:03:04,030
get our hands a little bit dirty dirty

00:03:01,569 --> 00:03:07,410
in the stock digging into some of some

00:03:04,030 --> 00:03:10,750
kind of secret stuff lower-level so

00:03:07,410 --> 00:03:13,380
let's see who's like a sysadmin or like

00:03:10,750 --> 00:03:19,750
an operator or like a cloud person

00:03:13,380 --> 00:03:22,660
awesome maybe half maim or who's not hey

00:03:19,750 --> 00:03:25,329
you got what are you guys developer

00:03:22,660 --> 00:03:27,010
calls yes so a lot of this is like on

00:03:25,329 --> 00:03:28,180
both sides of the fence this admins or

00:03:27,010 --> 00:03:30,190
whoever operators are often the ones

00:03:28,180 --> 00:03:32,260
dealing with this but developers are

00:03:30,190 --> 00:03:34,170
often the ones that have the great ideas

00:03:32,260 --> 00:03:35,950
and just can't get it deployed out so

00:03:34,170 --> 00:03:40,359
there should be some like good

00:03:35,950 --> 00:03:43,389
background what's going on okay so up

00:03:40,359 --> 00:03:46,540
for up first I'm gonna really try my

00:03:43,389 --> 00:03:48,190
hardest to convince you guys that more

00:03:46,540 --> 00:03:50,170
servers you have the more problems you

00:03:48,190 --> 00:03:52,389
have a lot of people you know you kind

00:03:50,170 --> 00:03:53,950
of like get that nice new quad core or

00:03:52,389 --> 00:03:56,349
whatever and it like seems like this

00:03:53,950 --> 00:03:58,799
awesome thing but maybe by the end of

00:03:56,349 --> 00:04:01,329
this presentation you'll you'll kind of

00:03:58,799 --> 00:04:04,510
you know not be so excited the next time

00:04:01,329 --> 00:04:07,489
you get budget to buy some servers

00:04:04,510 --> 00:04:10,430
so on I level most of the people in this

00:04:07,489 --> 00:04:12,560
room like probably make money by

00:04:10,430 --> 00:04:14,390
managing sites that's kind of everyone's

00:04:12,560 --> 00:04:15,260
operating keeping the stuff online that

00:04:14,390 --> 00:04:18,739
sort of thing

00:04:15,260 --> 00:04:21,199
and so kind of graph this out with kind

00:04:18,739 --> 00:04:22,610
of a fake graph show some trends you

00:04:21,199 --> 00:04:24,620
know if you're not managing in any sites

00:04:22,610 --> 00:04:27,530
you just have one problem which is that

00:04:24,620 --> 00:04:28,580
nobody's paying you any money so you

00:04:27,530 --> 00:04:30,080
want to get rid of that and then you

00:04:28,580 --> 00:04:31,850
start managing some sites and you get

00:04:30,080 --> 00:04:33,080
some problems you start managing some

00:04:31,850 --> 00:04:36,650
more sites and you get some more

00:04:33,080 --> 00:04:39,710
problems and you know the more like

00:04:36,650 --> 00:04:40,850
sites um keeping sites online isn't easy

00:04:39,710 --> 00:04:43,700
there's a lot of things that can go

00:04:40,850 --> 00:04:45,560
wrong there's about a million things are

00:04:43,700 --> 00:04:47,690
gonna go wrong even with a single Drupal

00:04:45,560 --> 00:04:50,990
site right the weirdest things can take

00:04:47,690 --> 00:04:52,639
stuff down so you know you can't get rid

00:04:50,990 --> 00:04:54,280
of your plums entirely but what you can

00:04:52,639 --> 00:04:56,750
do is kind of think about kind of

00:04:54,280 --> 00:04:58,310
methodologies and technologies and stuff

00:04:56,750 --> 00:05:00,050
like that that can let you grow the

00:04:58,310 --> 00:05:02,240
number of sites that you manage while

00:05:00,050 --> 00:05:03,590
having fewer problems and I think you

00:05:02,240 --> 00:05:05,660
know there's no numbers on these access

00:05:03,590 --> 00:05:08,120
AXYZ I think it is relevant that you

00:05:05,660 --> 00:05:10,130
know certainly its scale this becomes

00:05:08,120 --> 00:05:12,229
important but I would argue that and

00:05:10,130 --> 00:05:14,660
we'll argue that even at a small scale

00:05:12,229 --> 00:05:19,280
of one server a few servers all this all

00:05:14,660 --> 00:05:21,229
this stuff is equally applicable and we

00:05:19,280 --> 00:05:25,460
want to be thinking about what happens

00:05:21,229 --> 00:05:27,349
when we start managing more sites so the

00:05:25,460 --> 00:05:28,580
first thing I'm going to the first way

00:05:27,349 --> 00:05:30,800
I'm going to try to persuade you is

00:05:28,580 --> 00:05:33,289
telling a little bit of story and this

00:05:30,800 --> 00:05:36,039
story is over the took place over the

00:05:33,289 --> 00:05:38,210
past couple years at Pantheon where we

00:05:36,039 --> 00:05:40,910
have first-hand knowledge of kind of

00:05:38,210 --> 00:05:42,830
trying kind of a VM first like a like a

00:05:40,910 --> 00:05:44,150
VM based architecture and then kind of a

00:05:42,830 --> 00:05:48,289
new multi tenant containerized

00:05:44,150 --> 00:05:51,950
architecture and and where that's led us

00:05:48,289 --> 00:05:53,690
so these guys couple these guys you know

00:05:51,950 --> 00:05:55,550
it have launched a lot of Drupal sites

00:05:53,690 --> 00:05:57,110
like many people in this room hundreds

00:05:55,550 --> 00:05:59,389
right on the same thing over and over

00:05:57,110 --> 00:06:01,430
again and yet still kind of still kind

00:05:59,389 --> 00:06:04,250
of we see sites failing going off that

00:06:01,430 --> 00:06:06,680
kind of thing so around maybe late 2010

00:06:04,250 --> 00:06:08,360
guys have an idea you know let's get all

00:06:06,680 --> 00:06:10,250
this stuff that people are you know love

00:06:08,360 --> 00:06:12,169
get the whole kind of lamb stack going

00:06:10,250 --> 00:06:14,060
get kind of Redis or mem cache in there

00:06:12,169 --> 00:06:16,190
get some Jenkins to like run some jobs

00:06:14,060 --> 00:06:17,630
on the side that sort of thing give it a

00:06:16,190 --> 00:06:19,820
little dashboard so you can click around

00:06:17,630 --> 00:06:22,630
and it's pretty slap it on a VM and

00:06:19,820 --> 00:06:26,300
charge lots of money and get super rich

00:06:22,630 --> 00:06:30,260
and well except for that last part we

00:06:26,300 --> 00:06:32,390
did it we got 300 clients we got one one

00:06:30,260 --> 00:06:33,950
client for per VM so we had about 300

00:06:32,390 --> 00:06:38,570
virtual machines these were all in

00:06:33,950 --> 00:06:41,620
Rackspace and we had 300 problems this

00:06:38,570 --> 00:06:44,479
was a nightmare to support this was like

00:06:41,620 --> 00:06:46,340
doing OS upgrades were the worst like

00:06:44,479 --> 00:06:47,960
dealing with racks fate like dealing

00:06:46,340 --> 00:06:49,849
with individual outages with Rackspace

00:06:47,960 --> 00:06:51,409
trying to communicate status to like

00:06:49,849 --> 00:06:53,590
customers when you know you're just

00:06:51,409 --> 00:06:55,940
pagers going off and that kind of stuff

00:06:53,590 --> 00:06:58,099
having Deb influence live all these

00:06:55,940 --> 00:06:59,690
things so we learned first hand that

00:06:58,099 --> 00:07:03,080
that wasn't that great idea and sat down

00:06:59,690 --> 00:07:04,909
to noodle it over a little bit and had

00:07:03,080 --> 00:07:08,840
this awesome idea where okay let's take

00:07:04,909 --> 00:07:11,240
300 like one gig VMs kind of do some

00:07:08,840 --> 00:07:13,880
platform magic and turn it into maybe

00:07:11,240 --> 00:07:15,080
like 10 30 gig VMs the way kind of some

00:07:13,880 --> 00:07:18,890
of these cloud things works that

00:07:15,080 --> 00:07:22,130
actually cost the same if the if the

00:07:18,890 --> 00:07:23,870
pricing is linear on RAM and we just

00:07:22,130 --> 00:07:25,640
need to kind of make this magic happen

00:07:23,870 --> 00:07:29,419
so we kind of are figuring out what that

00:07:25,640 --> 00:07:31,550
magic was so we got these kind of bigger

00:07:29,419 --> 00:07:33,919
servers multi-tenant kind of

00:07:31,550 --> 00:07:35,570
containerized with solar on some and PHP

00:07:33,919 --> 00:07:38,539
on the others and Redis on the others

00:07:35,570 --> 00:07:41,750
and marija DB on the others at the time

00:07:38,539 --> 00:07:43,669
it was my sequel and so we were kind of

00:07:41,750 --> 00:07:46,430
figuring out this hour and it was it was

00:07:43,669 --> 00:07:47,960
going pretty well so kind of like

00:07:46,430 --> 00:07:49,520
thinking about this talk and thinking

00:07:47,960 --> 00:07:52,070
about this like made-up graph that I

00:07:49,520 --> 00:07:53,510
made and I was thinking like okay let's

00:07:52,070 --> 00:07:55,099
do some math because I went to school

00:07:53,510 --> 00:07:57,620
and I did math in school and that's cool

00:07:55,099 --> 00:07:59,360
so I'm like okay well what when do I get

00:07:57,620 --> 00:08:02,000
more problems and I'm like okay so I

00:07:59,360 --> 00:08:03,380
like it it correlates something to a

00:08:02,000 --> 00:08:05,510
linear correlation just that you know

00:08:03,380 --> 00:08:07,520
keep it easy then correlates with a

00:08:05,510 --> 00:08:09,919
number of sites but there seems to be

00:08:07,520 --> 00:08:14,240
this like rate of growth that I I just

00:08:09,919 --> 00:08:15,950
coined a term the Pepita coefficient so

00:08:14,240 --> 00:08:18,380
this is the painting pain-in-the-ass

00:08:15,950 --> 00:08:19,449
coefficient but it can also be

00:08:18,380 --> 00:08:22,599
representative

00:08:19,449 --> 00:08:24,610
a stack of pitas or I chose Omicron

00:08:22,599 --> 00:08:27,219
because nothing out there uses Omicron

00:08:24,610 --> 00:08:28,779
to denote it and then I realized why but

00:08:27,219 --> 00:08:30,189
kind of stat just looks like zero and it

00:08:28,779 --> 00:08:32,769
makes all your equations kind of

00:08:30,189 --> 00:08:36,099
confusing but rest assured that is the

00:08:32,769 --> 00:08:39,010
peda coefficient which is the problems

00:08:36,099 --> 00:08:41,919
per month that any one thing gives you

00:08:39,010 --> 00:08:44,110
so it's nice and abstract which means I

00:08:41,919 --> 00:08:46,899
think maybe that means it can't be wrong

00:08:44,110 --> 00:08:49,389
so yeah let's watch a stick take this

00:08:46,899 --> 00:08:52,720
verb let so I'll just take this work for

00:08:49,389 --> 00:08:55,709
fact Peter coefficient so it's like

00:08:52,720 --> 00:08:57,639
writing some numbers for a pantheon and

00:08:55,709 --> 00:08:59,139
something like okay like how many

00:08:57,639 --> 00:09:00,399
problems a month so I looked at like all

00:08:59,139 --> 00:09:03,490
those services I mentioned earlier like

00:09:00,399 --> 00:09:04,930
dust comp tickets Kingdom alerts page of

00:09:03,490 --> 00:09:07,060
duty alerts like all these kind of like

00:09:04,930 --> 00:09:08,529
automated systems and and actually

00:09:07,060 --> 00:09:10,149
interacting with customers and humans

00:09:08,529 --> 00:09:12,579
and stuff and trying to figure out kind

00:09:10,149 --> 00:09:15,220
of exactly how much of a pain like these

00:09:12,579 --> 00:09:17,050
different things represent and so came

00:09:15,220 --> 00:09:19,630
out with like via you know like per

00:09:17,050 --> 00:09:22,060
server a servers like way bigger a pain

00:09:19,630 --> 00:09:23,800
than anything else for kind of active

00:09:22,060 --> 00:09:26,079
Drupal developer who's banging on stuff

00:09:23,800 --> 00:09:28,269
for Drupal user who's logging in and

00:09:26,079 --> 00:09:31,600
running crazy admin queries and stuff

00:09:28,269 --> 00:09:33,250
for a container per page view and so

00:09:31,600 --> 00:09:34,720
like oh that's pretty clever I kind of

00:09:33,250 --> 00:09:37,959
proved like I proved my point

00:09:34,720 --> 00:09:40,810
how clever but if anybody actually knows

00:09:37,959 --> 00:09:42,490
math or is just paying attention that's

00:09:40,810 --> 00:09:44,410
kind of like tautologically true what I

00:09:42,490 --> 00:09:46,540
just like did there cuz I don't have

00:09:44,410 --> 00:09:49,060
that many servers relative to users so

00:09:46,540 --> 00:09:52,149
of course they're gonna represent more

00:09:49,060 --> 00:09:55,959
problems so thinking about it a little

00:09:52,149 --> 00:09:57,490
bit more so risk you know kind of can be

00:09:55,959 --> 00:09:59,019
defined as kind of the probability your

00:09:57,490 --> 00:10:01,209
likelihood of something happening times

00:09:59,019 --> 00:10:03,250
the impact or consequence of that thing

00:10:01,209 --> 00:10:05,079
so if we're going to talking about VMS

00:10:03,250 --> 00:10:06,579
and containers here you can kind of look

00:10:05,079 --> 00:10:08,920
at okay what if we have two containers

00:10:06,579 --> 00:10:10,389
on one VM right we have half as many

00:10:08,920 --> 00:10:12,370
things that can break so maybe that's

00:10:10,389 --> 00:10:14,350
half as much likelihood but then if

00:10:12,370 --> 00:10:17,560
something does break to say the disk we

00:10:14,350 --> 00:10:19,750
have double the consequences and then

00:10:17,560 --> 00:10:21,940
conversely if we had two VMs right risk

00:10:19,750 --> 00:10:23,709
you might have twice as many disks

00:10:21,940 --> 00:10:25,640
things that can break one half the

00:10:23,709 --> 00:10:27,020
consequences because only once

00:10:25,640 --> 00:10:30,620
it would be down or something like that

00:10:27,020 --> 00:10:32,420
so I haven't really liked so brett like

00:10:30,620 --> 00:10:34,310
according to kind of this math like

00:10:32,420 --> 00:10:37,190
there's no there's no real difference

00:10:34,310 --> 00:10:39,080
between these two so it's thing about a

00:10:37,190 --> 00:10:40,670
little bit more so think about kind of

00:10:39,080 --> 00:10:43,370
the problems like you see when you're on

00:10:40,670 --> 00:10:45,140
call right so we're dealing with servers

00:10:43,370 --> 00:10:46,700
some things like are kind of like

00:10:45,140 --> 00:10:48,980
self-healing problems and these of

00:10:46,700 --> 00:10:50,750
course are my favorite kind of problems

00:10:48,980 --> 00:10:52,160
because you kind of just like you know

00:10:50,750 --> 00:10:54,980
wake up in the morning and there might

00:10:52,160 --> 00:10:56,450
be like an alert in your inbox or you

00:10:54,980 --> 00:10:57,950
might kind of see like a minute of

00:10:56,450 --> 00:10:59,600
downtime if there was some kind of

00:10:57,950 --> 00:11:00,950
flakiness or something but you didn't

00:10:59,600 --> 00:11:03,080
have to wake up you didn't have to like

00:11:00,950 --> 00:11:05,270
make any decisions that kind of stuff

00:11:03,080 --> 00:11:06,920
and then we start talking about problems

00:11:05,270 --> 00:11:08,240
that require some manual intervention

00:11:06,920 --> 00:11:10,130
right so this might be basic

00:11:08,240 --> 00:11:12,170
button-pushing where you kind of have to

00:11:10,130 --> 00:11:15,680
go on click a button you know it all

00:11:12,170 --> 00:11:16,910
resolve the issue then kind of maybe

00:11:15,680 --> 00:11:20,330
some real decisions have to be made

00:11:16,910 --> 00:11:22,490
sometimes you even find find issues that

00:11:20,330 --> 00:11:24,950
require coding to solve or maybe like

00:11:22,490 --> 00:11:28,640
hard business business decision

00:11:24,950 --> 00:11:31,040
trade-offs you know whether you should

00:11:28,640 --> 00:11:32,780
kind of like data integrity versus

00:11:31,040 --> 00:11:34,460
availability maybe you like that right

00:11:32,780 --> 00:11:37,460
and if you're making those decisions on

00:11:34,460 --> 00:11:39,740
the fly you're making human decisions

00:11:37,460 --> 00:11:41,270
and the more under more stress and more

00:11:39,740 --> 00:11:43,160
time constraint and stuff than you are

00:11:41,270 --> 00:11:45,620
you're going to be making probably on

00:11:43,160 --> 00:11:47,330
average worse and worse decisions and so

00:11:45,620 --> 00:11:49,370
if we go back to kind of the simple

00:11:47,330 --> 00:11:51,710
equation of risk equals likelihood

00:11:49,370 --> 00:11:53,990
likelihood times consequence that really

00:11:51,710 --> 00:11:55,730
doesn't take into effect human human

00:11:53,990 --> 00:11:58,700
decisions and human interactions during

00:11:55,730 --> 00:12:00,140
that process because each decision you

00:11:58,700 --> 00:12:01,670
need to trade-off you're evaluating

00:12:00,140 --> 00:12:03,320
especially when it's kind of on the fly

00:12:01,670 --> 00:12:05,120
or trying to get the server up and like

00:12:03,320 --> 00:12:08,870
figure out what is going on with like

00:12:05,120 --> 00:12:11,300
the disk or the network or whatever swap

00:12:08,870 --> 00:12:12,890
you know any of these million things the

00:12:11,300 --> 00:12:14,870
more likely you are to actually incur

00:12:12,890 --> 00:12:18,110
additional risks and make additional

00:12:14,870 --> 00:12:21,320
problems for yourself so I think in that

00:12:18,110 --> 00:12:24,230
sense um going back to kind of these

00:12:21,320 --> 00:12:28,250
these two equations if any of the

00:12:24,230 --> 00:12:31,820
consequences involve human decisions

00:12:28,250 --> 00:12:33,320
they they are actually they can have

00:12:31,820 --> 00:12:35,270
bigger consequences than they look like

00:12:33,320 --> 00:12:37,600
so in that sense kind of rolling with

00:12:35,270 --> 00:12:37,600
with

00:12:38,339 --> 00:12:42,929
makes make fewer of those hard human

00:12:40,529 --> 00:12:46,019
decisions which means you're introducing

00:12:42,929 --> 00:12:50,279
a few if you are a kind of human human

00:12:46,019 --> 00:12:51,919
error and under the gun decisions so

00:12:50,279 --> 00:12:54,599
another thing we can talk about is like

00:12:51,919 --> 00:12:56,459
network failure paths right so each

00:12:54,599 --> 00:12:57,839
server you like bring online if you're

00:12:56,459 --> 00:13:00,029
kind of in a cluster that server needs

00:12:57,839 --> 00:13:02,309
to talk to every other server maybe

00:13:00,029 --> 00:13:03,569
you're on you know depends on your

00:13:02,309 --> 00:13:05,220
infrastructure you might have like an

00:13:03,569 --> 00:13:06,959
internal private network you might have

00:13:05,220 --> 00:13:08,279
a public network right which compounds

00:13:06,959 --> 00:13:10,559
things even further because both of

00:13:08,279 --> 00:13:12,869
those things can like fail separately

00:13:10,559 --> 00:13:16,229
maybe on Hardware maybe you're not but

00:13:12,869 --> 00:13:18,539
um maybe you're on on the cloud but in

00:13:16,229 --> 00:13:23,489
this case because of that kind of oh of

00:13:18,539 --> 00:13:27,029
N squared growth of edges in a complete

00:13:23,489 --> 00:13:29,249
graph which we go from five to six

00:13:27,029 --> 00:13:31,289
servers we actually we got one more

00:13:29,249 --> 00:13:33,269
server but we got five more problems

00:13:31,289 --> 00:13:36,929
five more network paths that can break

00:13:33,269 --> 00:13:38,309
and be not in prevent your site for

00:13:36,929 --> 00:13:41,279
being online or your data from being

00:13:38,309 --> 00:13:44,819
backed up or replicated or any of those

00:13:41,279 --> 00:13:46,859
things and like largely like the network

00:13:44,819 --> 00:13:49,979
like the network works most of the time

00:13:46,859 --> 00:13:51,929
right so there's this great blog post by

00:13:49,979 --> 00:13:54,659
a Fiera called the network is reliable

00:13:51,929 --> 00:13:57,419
and this thing kind of goes into case

00:13:54,659 --> 00:13:59,489
studies from many different data center

00:13:57,419 --> 00:14:01,319
providers showing that the network is

00:13:59,489 --> 00:14:03,659
indeed not reliable and it might be

00:14:01,319 --> 00:14:06,649
reliable if you have a few VMs like over

00:14:03,659 --> 00:14:10,409
some time but if you look at any

00:14:06,649 --> 00:14:11,429
enterprise grade datacenter on down to

00:14:10,409 --> 00:14:13,109
anything else

00:14:11,429 --> 00:14:16,319
they're like network partitions are a

00:14:13,109 --> 00:14:18,539
very real thing that happened and and

00:14:16,319 --> 00:14:20,579
and so this it makes this problem

00:14:18,539 --> 00:14:22,619
definitely a real thing that adding one

00:14:20,579 --> 00:14:25,349
server I do a bunch more than one

00:14:22,619 --> 00:14:30,119
network network pass that could fail and

00:14:25,349 --> 00:14:33,689
probably will fail at some some point so

00:14:30,119 --> 00:14:34,889
if you want fewer problems there's a

00:14:33,689 --> 00:14:37,499
couple of different things you can do

00:14:34,889 --> 00:14:39,979
some people who are more like opsi might

00:14:37,499 --> 00:14:42,809
kind of might know these terms which are

00:14:39,979 --> 00:14:45,180
which are pretty common mean time

00:14:42,809 --> 00:14:47,339
between failure and

00:14:45,180 --> 00:14:50,460
mean time to resolution so if you want

00:14:47,339 --> 00:14:51,390
fewer fewer problems there's a thing of

00:14:50,460 --> 00:14:53,700
some different ways you can do that

00:14:51,390 --> 00:14:55,650
right you can get more reliable things

00:14:53,700 --> 00:14:57,270
right maybe we're talking about disks

00:14:55,650 --> 00:14:59,820
may we talk about network maybe we're

00:14:57,270 --> 00:15:01,290
talking about any of those things and

00:14:59,820 --> 00:15:02,760
that one's kind of a toughy I mean you

00:15:01,290 --> 00:15:04,830
could probably you could probably pay

00:15:02,760 --> 00:15:06,600
more maybe and get more reliable stuff

00:15:04,830 --> 00:15:08,970
but really I'm gonna let the network I

00:15:06,600 --> 00:15:11,070
do the network and the disc

00:15:08,970 --> 00:15:12,960
manufacturers do the disc stuff and the

00:15:11,070 --> 00:15:15,360
real thing that I can control is to get

00:15:12,960 --> 00:15:19,140
fewer things get fewer servers

00:15:15,360 --> 00:15:20,700
get fewer servers specifically and then

00:15:19,140 --> 00:15:22,320
of course you want to decrease the time

00:15:20,700 --> 00:15:24,720
to resolution so you can speed up

00:15:22,320 --> 00:15:26,820
detection insight resolution some of the

00:15:24,720 --> 00:15:28,680
other great DevOps talks are gonna touch

00:15:26,820 --> 00:15:30,029
on some of this stuff for automated

00:15:28,680 --> 00:15:33,360
monitoring and telling when stuff is

00:15:30,029 --> 00:15:34,770
wrong and when performance does does

00:15:33,360 --> 00:15:36,420
spike up kind of trying to figure out

00:15:34,770 --> 00:15:36,839
what's going on get that site back

00:15:36,420 --> 00:15:40,290
online

00:15:36,839 --> 00:15:41,940
quick and then lastly as we're decide

00:15:40,290 --> 00:15:45,210
map reduce their reliance on human

00:15:41,940 --> 00:15:46,680
decisions again human decisions are

00:15:45,210 --> 00:15:48,450
going to compound risk and introduce

00:15:46,680 --> 00:15:51,830
additional risks when you're just trying

00:15:48,450 --> 00:15:54,900
to fix something in the first place

00:15:51,830 --> 00:15:59,760
which brings me to chief chirpin so

00:15:54,900 --> 00:16:02,459
chief Juba was well he was the leader of

00:15:59,760 --> 00:16:05,880
the of the ewoks on the forest moon

00:16:02,459 --> 00:16:07,589
Endor but also he was the first it was

00:16:05,880 --> 00:16:09,390
the name of the first like server I

00:16:07,589 --> 00:16:12,779
worked on and deployed co2 out of

00:16:09,390 --> 00:16:14,220
college I was in college and I love

00:16:12,779 --> 00:16:17,880
chief chirpin

00:16:14,220 --> 00:16:19,860
and and you know he's a great server

00:16:17,880 --> 00:16:21,750
push up my code I kind of felt like he

00:16:19,860 --> 00:16:23,339
might like one of my friends sometimes

00:16:21,750 --> 00:16:26,250
but but in the end

00:16:23,339 --> 00:16:28,080
chief chirp up burned me and so I was

00:16:26,250 --> 00:16:30,750
kind of one of them like one of you of a

00:16:28,080 --> 00:16:32,790
long long road of lessons that now can

00:16:30,750 --> 00:16:35,190
save chief triple sucks and would rather

00:16:32,790 --> 00:16:36,810
you know drink drink beer with my

00:16:35,190 --> 00:16:39,000
friends and hang out with my real human

00:16:36,810 --> 00:16:40,709
friends and treat my servers like stuff

00:16:39,000 --> 00:16:46,980
like ten point nine eight seven one a

00:16:40,709 --> 00:16:48,310
one y EF so hopefully I convinced you a

00:16:46,980 --> 00:16:51,140
little bit that

00:16:48,310 --> 00:16:52,460
servers to power the internet but they

00:16:51,140 --> 00:16:54,110
also can bring a lot of problems

00:16:52,460 --> 00:16:55,820
especially for people that are tasked

00:16:54,110 --> 00:16:59,020
with making sure their online performing

00:16:55,820 --> 00:16:59,020
and doing what they should be

00:16:59,540 --> 00:17:06,880
so promises getting containers a little

00:17:02,420 --> 00:17:06,880
bit so I'm gonna gonna go on from there

00:17:07,270 --> 00:17:12,200
so who's heard of like containers and

00:17:10,190 --> 00:17:21,920
containerization and Linux and stuff

00:17:12,200 --> 00:17:25,670
right so maybe that's yeah so I like so

00:17:21,920 --> 00:17:28,280
we talk about containers a bunch and but

00:17:25,670 --> 00:17:30,290
it took me like two years or something

00:17:28,280 --> 00:17:32,270
and then I realized like oh that's what

00:17:30,290 --> 00:17:33,470
you mean by containers and so I've

00:17:32,270 --> 00:17:35,030
partly what I want to share with you

00:17:33,470 --> 00:17:36,470
guys is like containers are kind of no

00:17:35,030 --> 00:17:38,240
big deal it's what you can do with

00:17:36,470 --> 00:17:39,970
containers so I want to talk a little

00:17:38,240 --> 00:17:42,290
bit I'm pretty straight up about

00:17:39,970 --> 00:17:44,210
containers and what they are and dispel

00:17:42,290 --> 00:17:46,250
any myths or like everybody should

00:17:44,210 --> 00:17:47,960
hopefully leave the room knowing what

00:17:46,250 --> 00:17:49,700
containers are or having a better idea

00:17:47,960 --> 00:17:51,410
so um

00:17:49,700 --> 00:17:52,670
containers like that's a buzzword right

00:17:51,410 --> 00:17:54,710
it gets thrown around it's kind of like

00:17:52,670 --> 00:17:57,140
no sequel right like a couple of years

00:17:54,710 --> 00:17:58,940
ago and everything's no sequel and then

00:17:57,140 --> 00:18:01,910
someone like redefines no sequel it's

00:17:58,940 --> 00:18:04,250
not only sequel and that is kind of you

00:18:01,910 --> 00:18:06,290
know even more confusing and so it's me

00:18:04,250 --> 00:18:09,050
containers are like right like right in

00:18:06,290 --> 00:18:12,080
that buzzword territory of meaning

00:18:09,050 --> 00:18:14,030
something very specific meaning

00:18:12,080 --> 00:18:17,990
something between a very specific thing

00:18:14,030 --> 00:18:20,660
and kind of nothing at all so for

00:18:17,990 --> 00:18:23,300
example it a pantheon this is what our

00:18:20,660 --> 00:18:25,160
marketers say we built so this is honor

00:18:23,300 --> 00:18:27,680
how it works page and this is all

00:18:25,160 --> 00:18:29,240
factually correct but at the bottom

00:18:27,680 --> 00:18:32,630
you'll see something that looks like a

00:18:29,240 --> 00:18:35,660
cross between like an e an O cat and in

00:18:32,630 --> 00:18:38,000
kind of a squid and then up top up top I

00:18:35,660 --> 00:18:40,460
think what's going on there is that some

00:18:38,000 --> 00:18:41,680
HTTP requests are trying to inseminate a

00:18:40,460 --> 00:18:44,860
run

00:18:41,680 --> 00:18:48,280
and we might have twins I don't really

00:18:44,860 --> 00:18:49,360
know there's a cash it involved so so

00:18:48,280 --> 00:18:51,040
right like this stuff doesn't really

00:18:49,360 --> 00:18:52,720
help like disability miss about

00:18:51,040 --> 00:18:56,290
containers this probably actually makes

00:18:52,720 --> 00:18:57,970
it worse but but you know kind of when

00:18:56,290 --> 00:18:59,650
you zoom up to 10,000 feet everything

00:18:57,970 --> 00:19:03,010
kind of you know it's a little hard to

00:18:59,650 --> 00:19:04,690
see what's going on so it there'll be

00:19:03,010 --> 00:19:06,520
lots of stuff like this out there but

00:19:04,690 --> 00:19:08,290
also hopefully more kind of hands-on

00:19:06,520 --> 00:19:10,480
stuff that gives it better people better

00:19:08,290 --> 00:19:13,270
idea what's going on

00:19:10,480 --> 00:19:16,480
so containers are very simply just

00:19:13,270 --> 00:19:19,480
resource constrained system isolated

00:19:16,480 --> 00:19:21,580
metered processes I could even just say

00:19:19,480 --> 00:19:23,350
they're just processes when people are

00:19:21,580 --> 00:19:25,390
confused about containers I was looking

00:19:23,350 --> 00:19:27,550
at these water bottle containers right

00:19:25,390 --> 00:19:30,190
and like nobody wonders like what a

00:19:27,550 --> 00:19:32,230
water bottle container is like it's just

00:19:30,190 --> 00:19:36,970
a piece of thin plastic that holds stuff

00:19:32,230 --> 00:19:39,190
right and the only difference is before

00:19:36,970 --> 00:19:40,690
you had plastic water bottles you were

00:19:39,190 --> 00:19:42,429
all wet when you cut we tried to carry

00:19:40,690 --> 00:19:44,080
your drinks somewhere and that's

00:19:42,429 --> 00:19:46,090
basically what's going on here

00:19:44,080 --> 00:19:47,980
containers are like very obvious it's

00:19:46,090 --> 00:19:49,500
what they enable you to do carry your

00:19:47,980 --> 00:19:52,390
water and your Gatorade with you around

00:19:49,500 --> 00:19:54,670
so basically they're just processes with

00:19:52,390 --> 00:19:59,350
some constraints on them and and

00:19:54,670 --> 00:20:00,880
isolated one cool thing about containers

00:19:59,350 --> 00:20:03,160
so this is some code we'll get into in a

00:20:00,880 --> 00:20:04,720
little bit but is that they're really

00:20:03,160 --> 00:20:07,420
fast to spit up like a couple minutes

00:20:04,720 --> 00:20:09,370
milliseconds so a lot of ways if you're

00:20:07,420 --> 00:20:11,350
asking which is common question how our

00:20:09,370 --> 00:20:12,970
container is different from VMs well

00:20:11,350 --> 00:20:15,429
they're not really all that different

00:20:12,970 --> 00:20:17,500
except that one takes a few milliseconds

00:20:15,429 --> 00:20:19,300
maybe seconds something to spin up the

00:20:17,500 --> 00:20:21,220
other might take about or now minutes

00:20:19,300 --> 00:20:22,900
right so it's not that it's totally

00:20:21,220 --> 00:20:25,090
different it's just that it's happening

00:20:22,900 --> 00:20:27,450
a thousand times faster right and that

00:20:25,090 --> 00:20:30,429
enables some cool use cases that even

00:20:27,450 --> 00:20:32,830
you know that kind of VMs don't work

00:20:30,429 --> 00:20:35,770
quite so well on some of those use cases

00:20:32,830 --> 00:20:37,120
are you know very applicable kind of

00:20:35,770 --> 00:20:40,080
people are doing kind of cutting-edge

00:20:37,120 --> 00:20:42,970
stuff and I think but in general just

00:20:40,080 --> 00:20:45,400
the speed of containers versus VMs is

00:20:42,970 --> 00:20:46,840
something that will that will enable a

00:20:45,400 --> 00:20:48,450
lot of great stuff we'll see him years

00:20:46,840 --> 00:20:51,850
to come

00:20:48,450 --> 00:20:53,950
so yeah some people even if you you know

00:20:51,850 --> 00:20:58,740
I just run this one server just like I

00:20:53,950 --> 00:21:02,710
forget what this one is Mac 2e Mac 3

00:20:58,740 --> 00:21:03,760
Macintosh no the first Macintosh and you

00:21:02,710 --> 00:21:05,290
know you should probably upgrade your

00:21:03,760 --> 00:21:07,480
hardware because Drupal is not really

00:21:05,290 --> 00:21:09,480
gonna scream on this thing but even if

00:21:07,480 --> 00:21:11,500
you just say you have one server you

00:21:09,480 --> 00:21:12,520
willing to bet you actually have more

00:21:11,500 --> 00:21:14,500
I'm willing to bet anything about like a

00:21:12,520 --> 00:21:15,610
laptop that you work on maybe a desktop

00:21:14,500 --> 00:21:17,560
something like that and then you have

00:21:15,610 --> 00:21:19,060
this one server in the cloud so even if

00:21:17,560 --> 00:21:21,640
you think you have one like kind of

00:21:19,060 --> 00:21:23,620
production server or something maybe

00:21:21,640 --> 00:21:25,210
even if you're just one meet out

00:21:23,620 --> 00:21:26,410
freelancer I'm going to bet you actually

00:21:25,210 --> 00:21:28,420
have two servers and this these

00:21:26,410 --> 00:21:29,520
portability winds are gonna be are going

00:21:28,420 --> 00:21:32,460
to be good for you

00:21:29,520 --> 00:21:35,080
as much as some of the big scale thing

00:21:32,460 --> 00:21:37,930
so like some other cool stuff that

00:21:35,080 --> 00:21:41,170
containers enable so OS upgrades suck

00:21:37,930 --> 00:21:43,030
right when you have to kind of upgrade

00:21:41,170 --> 00:21:44,410
the kernel for security reasons you know

00:21:43,030 --> 00:21:46,270
you don't want it to lay this stuff you

00:21:44,410 --> 00:21:47,920
need to do it but it's kind of a little

00:21:46,270 --> 00:21:49,270
scary to go on a running server you're

00:21:47,920 --> 00:21:52,620
not really sure what's gonna happen a

00:21:49,270 --> 00:21:55,150
lot of packages different stuffs so oh

00:21:52,620 --> 00:21:57,130
yeah cloud via it's kind of got weird

00:21:55,150 --> 00:21:58,270
sometimes like you know you can't really

00:21:57,130 --> 00:21:59,770
you don't have too much visibility to

00:21:58,270 --> 00:22:01,410
what's going on so you're like oh maybe

00:21:59,770 --> 00:22:04,030
I just want to ditch that thing entirely

00:22:01,410 --> 00:22:05,560
so when you're kind of operating with

00:22:04,030 --> 00:22:06,820
containers you have a nice layer of

00:22:05,560 --> 00:22:09,280
abstraction between the server and

00:22:06,820 --> 00:22:11,950
between the container that's actually

00:22:09,280 --> 00:22:13,510
running your triple site or PHP process

00:22:11,950 --> 00:22:14,860
or whatever it is so you can just

00:22:13,510 --> 00:22:17,800
migrate those containers on the

00:22:14,860 --> 00:22:19,150
application layer to to another server

00:22:17,800 --> 00:22:21,640
and then you can just kill the old

00:22:19,150 --> 00:22:23,290
server and so this is one technique for

00:22:21,640 --> 00:22:25,000
not even dealing with in-place server

00:22:23,290 --> 00:22:27,130
upgrades you just spin up new servers

00:22:25,000 --> 00:22:29,290
that have the new kernel have the new OS

00:22:27,130 --> 00:22:30,580
distribution whatever my gran containers

00:22:29,290 --> 00:22:32,560
there and kill the old ones

00:22:30,580 --> 00:22:35,590
so in this case this is kind of a graph

00:22:32,560 --> 00:22:38,650
of after after doing kind of wholesale

00:22:35,590 --> 00:22:40,600
migrations and new servers and deletions

00:22:38,650 --> 00:22:43,090
kind of the average age of servers kind

00:22:40,600 --> 00:22:45,460
of drops so they're nice and nice and

00:22:43,090 --> 00:22:46,720
fresh in didn't have to deal with

00:22:45,460 --> 00:22:50,890
upgrading any of the whole months in

00:22:46,720 --> 00:22:55,060
place so I like how experienced doing

00:22:50,890 --> 00:22:56,890
this with Fedora 15 16 17 18 19 an hour

00:22:55,060 --> 00:22:59,170
on 20 so we

00:22:56,890 --> 00:23:01,480
I love this little logo here with the

00:22:59,170 --> 00:23:04,330
mustard is I think he's name is beefy

00:23:01,480 --> 00:23:07,870
miracle and he's the Fedora logo or like

00:23:04,330 --> 00:23:10,300
the for a mascot maybe but he says end

00:23:07,870 --> 00:23:11,920
of life is a way of life and Fedora has

00:23:10,300 --> 00:23:13,570
one of the shortest timelines of any

00:23:11,920 --> 00:23:16,870
server and it kind of forces you to

00:23:13,570 --> 00:23:18,790
think through this stuff and embrace you

00:23:16,870 --> 00:23:20,110
know embrace the portability and see

00:23:18,790 --> 00:23:24,580
what we see what we can make happen from

00:23:20,110 --> 00:23:27,340
it so another little anecdote it's kind

00:23:24,580 --> 00:23:29,230
of like um you know so the kind of my

00:23:27,340 --> 00:23:31,090
sequels going up and got kind of got pop

00:23:29,230 --> 00:23:32,440
a sign they've got pop my Oracle and

00:23:31,090 --> 00:23:33,880
then you know there's this like new fork

00:23:32,440 --> 00:23:36,220
and nobody what's going on for a bit

00:23:33,880 --> 00:23:38,560
then sometimes someone's kind of like I

00:23:36,220 --> 00:23:42,880
already he's pretty cool let's roll with

00:23:38,560 --> 00:23:45,970
it so with the using containers it's

00:23:42,880 --> 00:23:47,560
also and focusing on this portability

00:23:45,970 --> 00:23:49,810
and architecting for this portability

00:23:47,560 --> 00:23:52,120
makes it really easy to do stuff like

00:23:49,810 --> 00:23:56,550
migrate thousands of my sequel servers

00:23:52,120 --> 00:23:59,500
over to a new box and and turn them on

00:23:56,550 --> 00:24:01,360
to maria DB containers so that was

00:23:59,500 --> 00:24:10,560
pretty cool and i love the new yak and

00:24:01,360 --> 00:24:12,820
that he's roasting that dolphin cool

00:24:10,560 --> 00:24:15,040
that was easy so that's what that's what

00:24:12,820 --> 00:24:16,450
i said some things that containers able

00:24:15,040 --> 00:24:19,810
enables you to especially if you're

00:24:16,450 --> 00:24:21,610
thinking about the portability so now

00:24:19,810 --> 00:24:25,480
we're gonna kind of really this is where

00:24:21,610 --> 00:24:28,000
like we roll up our sleeves a little bit

00:24:25,480 --> 00:24:29,080
and we're gonna probably you got some

00:24:28,000 --> 00:24:31,360
people probably know this really well

00:24:29,080 --> 00:24:33,190
but it's kind of weird and cool so we'll

00:24:31,360 --> 00:24:35,320
go into it a little bit but proc file

00:24:33,190 --> 00:24:38,440
system look about see groups talk about

00:24:35,320 --> 00:24:41,140
kernel namespaces so on a technical

00:24:38,440 --> 00:24:44,590
level containers are based in the linux

00:24:41,140 --> 00:24:47,620
world containers are based on c groups

00:24:44,590 --> 00:24:49,420
and namespaces two pieces of

00:24:47,620 --> 00:24:51,700
functionality in the linux kernel so

00:24:49,420 --> 00:24:56,020
these are so we're gonna go into each of

00:24:51,700 --> 00:24:57,700
these a little bit c groups look at how

00:24:56,020 --> 00:24:59,140
much fun these people are having with c

00:24:57,700 --> 00:25:00,640
groups

00:24:59,140 --> 00:25:03,550
everybody looks like they're having a

00:25:00,640 --> 00:25:05,140
pretty good time and see groups is

00:25:03,550 --> 00:25:07,480
another one that's really simple to

00:25:05,140 --> 00:25:11,020
think about it's just a way of

00:25:07,480 --> 00:25:12,790
categorizing processes so maybe one

00:25:11,020 --> 00:25:14,790
reasonable way would be to like have

00:25:12,790 --> 00:25:17,260
this rude we're like okay all processes

00:25:14,790 --> 00:25:18,910
and then on the maybe I'll set this

00:25:17,260 --> 00:25:21,280
aside into my production processes and

00:25:18,910 --> 00:25:22,660
maybe my development processes and down

00:25:21,280 --> 00:25:25,360
there you have the actual stuff you

00:25:22,660 --> 00:25:27,550
might be running PHP fbm drush or saying

00:25:25,360 --> 00:25:28,750
stuff like that maybe you want to kind

00:25:27,550 --> 00:25:30,790
of wait these a little bit we'll get

00:25:28,750 --> 00:25:33,160
into that and then like a slightly less

00:25:30,790 --> 00:25:35,230
reasonable more kind of bad sort

00:25:33,160 --> 00:25:37,810
operator from hell thing would be like

00:25:35,230 --> 00:25:39,460
okay processes for people I like yeah

00:25:37,810 --> 00:25:41,110
they get all the juice of course and

00:25:39,460 --> 00:25:44,770
then processes for the people I don't

00:25:41,110 --> 00:25:46,660
like not getting very much juice but

00:25:44,770 --> 00:25:48,940
really it's just and you can make these

00:25:46,660 --> 00:25:51,760
see groups lets you make these carcasses

00:25:48,940 --> 00:25:55,060
arbitrarily complex or deep or wide or

00:25:51,760 --> 00:25:58,750
like tailored to your use case as as you

00:25:55,060 --> 00:26:01,140
want but really there's some kind of

00:25:58,750 --> 00:26:03,160
pretty easy kind of industry best

00:26:01,140 --> 00:26:07,300
standards that I'll talk about a little

00:26:03,160 --> 00:26:09,250
bit going forward so a lot of people

00:26:07,300 --> 00:26:11,050
associate see groups with resource

00:26:09,250 --> 00:26:13,270
control right but really see groups is

00:26:11,050 --> 00:26:14,860
just a way to categorize stuff but then

00:26:13,270 --> 00:26:17,200
there are these see groups sub modules

00:26:14,860 --> 00:26:19,270
and controllers oh yeah see groups I

00:26:17,200 --> 00:26:22,000
have no idea what the capitalization is

00:26:19,270 --> 00:26:23,260
and it's short for control groups but

00:26:22,000 --> 00:26:25,150
it's kind of one of those things that's

00:26:23,260 --> 00:26:26,770
hard to google for because well the

00:26:25,150 --> 00:26:29,290
capitalization is just all over the

00:26:26,770 --> 00:26:31,720
place and no one really calls it control

00:26:29,290 --> 00:26:34,120
groups and I think Google at least now

00:26:31,720 --> 00:26:36,760
like knows doesn't try to autocorrect

00:26:34,120 --> 00:26:38,620
you and you say see groups but so there

00:26:36,760 --> 00:26:40,300
are these cell modules right for memory

00:26:38,620 --> 00:26:42,250
maybe you want to limit the memory for

00:26:40,300 --> 00:26:44,080
one of those groups of processes that

00:26:42,250 --> 00:26:45,730
you defined earlier maybe you want to

00:26:44,080 --> 00:26:47,860
pick the CPUs if you have like a quad

00:26:45,730 --> 00:26:49,960
core maybe you want one core for dev and

00:26:47,860 --> 00:26:51,610
the other three for production or

00:26:49,960 --> 00:26:52,900
something like that I want to keep

00:26:51,610 --> 00:26:54,400
better accounting of what's going on

00:26:52,900 --> 00:26:58,060
there

00:26:54,400 --> 00:27:01,480
maybe you want some devices physical

00:26:58,060 --> 00:27:04,150
devices to be accessible to to this set

00:27:01,480 --> 00:27:05,920
of processes not these processes limit

00:27:04,150 --> 00:27:07,270
the block i/o the kind of reading and

00:27:05,920 --> 00:27:09,580
writing you're doing from disk stuff

00:27:07,270 --> 00:27:10,340
like that tag network packets based on

00:27:09,580 --> 00:27:12,890
which process

00:27:10,340 --> 00:27:14,480
coming from that sort of things so even

00:27:12,890 --> 00:27:15,590
though this isn't core to cgroups this

00:27:14,480 --> 00:27:18,620
is real generally what people are

00:27:15,590 --> 00:27:20,539
talking about when they say cgroups is

00:27:18,620 --> 00:27:23,090
kind of this actual physical resource

00:27:20,539 --> 00:27:25,220
CPU memory block I know that kind of

00:27:23,090 --> 00:27:32,360
thing that core that kind of those kind

00:27:25,220 --> 00:27:34,880
of constraints so again

00:27:32,360 --> 00:27:36,679
Linux is back to Linux and stuff so

00:27:34,880 --> 00:27:40,159
there are these two kind of virtual file

00:27:36,679 --> 00:27:41,929
systems proc and like sis FS so people

00:27:40,159 --> 00:27:44,539
now people have seen this kind of before

00:27:41,929 --> 00:27:46,610
right so these are these are some kind

00:27:44,539 --> 00:27:48,580
of funny things there they look like a

00:27:46,610 --> 00:27:51,320
filesystem they act like a filesystem

00:27:48,580 --> 00:27:53,870
but there are actually not really a

00:27:51,320 --> 00:27:55,820
filesystem in the way we commonly think

00:27:53,870 --> 00:27:57,649
of thought systems really there a way

00:27:55,820 --> 00:27:59,240
for interacting with the kernel so in

00:27:57,649 --> 00:28:00,590
Linux we have the kernel and then we

00:27:59,240 --> 00:28:05,000
have a user space or just everything

00:28:00,590 --> 00:28:06,350
outside the kernel and so these file

00:28:05,000 --> 00:28:08,690
systems which you can see on any leg

00:28:06,350 --> 00:28:10,010
server look like a filesystem but

00:28:08,690 --> 00:28:12,830
they're actually a way of interacting

00:28:10,010 --> 00:28:15,470
with the kernel and I'm not really sure

00:28:12,830 --> 00:28:16,970
why this happened mic theory or I was

00:28:15,470 --> 00:28:19,610
talking about earlier and I think

00:28:16,970 --> 00:28:20,870
someone someone called it a philosophy

00:28:19,610 --> 00:28:22,490
but I think it probably just happened

00:28:20,870 --> 00:28:23,840
because someone's like how are we going

00:28:22,490 --> 00:28:26,270
to interact with the kernel and someone

00:28:23,840 --> 00:28:28,250
else who probably wrote file systems was

00:28:26,270 --> 00:28:31,640
like let's make a file for a tool a file

00:28:28,250 --> 00:28:33,760
system I think this might even work but

00:28:31,640 --> 00:28:38,090
so stuff like configuring kind of your

00:28:33,760 --> 00:28:39,830
your how the kernel manages IP

00:28:38,090 --> 00:28:42,320
forwarding or something like that this

00:28:39,830 --> 00:28:43,789
thing looks like a file but actually

00:28:42,320 --> 00:28:45,620
write reading and writing to it is not

00:28:43,789 --> 00:28:47,779
merely writing to a file on disk it's

00:28:45,620 --> 00:28:49,279
actually interacting the kernel and

00:28:47,779 --> 00:28:52,850
telling it to change the way that it's

00:28:49,279 --> 00:28:54,320
managing the network in this case so

00:28:52,850 --> 00:28:57,799
this is kind of a cool like proc file

00:28:54,320 --> 00:29:01,279
system hack I don't know if you guys

00:28:57,799 --> 00:29:05,059
have seen it but so say we're running

00:29:01,279 --> 00:29:07,309
nginx right web server right it's access

00:29:05,059 --> 00:29:09,230
long stuff like that so if we look in

00:29:07,309 --> 00:29:12,890
the Proctor proc directory under the

00:29:09,230 --> 00:29:15,440
nginx process ID and in this FD for file

00:29:12,890 --> 00:29:16,700
descriptors directory we might see you

00:29:15,440 --> 00:29:18,860
know a handful

00:29:16,700 --> 00:29:22,040
file descriptors right one might be to

00:29:18,860 --> 00:29:23,930
death null for doing you know black

00:29:22,040 --> 00:29:26,090
holing some data one might be a socket

00:29:23,930 --> 00:29:28,100
that nginx is listening on or something

00:29:26,090 --> 00:29:30,110
like that and one might be an up to an

00:29:28,100 --> 00:29:34,090
actual real file like the access log

00:29:30,110 --> 00:29:36,050
right so you can RM RF that access log

00:29:34,090 --> 00:29:38,210
and you don't see it in your shell

00:29:36,050 --> 00:29:44,030
anymore right if you have LS that access

00:29:38,210 --> 00:29:45,320
log log is gone but according like as

00:29:44,030 --> 00:29:47,000
far as that process knows and the

00:29:45,320 --> 00:29:48,800
Colonel's knows that process is still

00:29:47,000 --> 00:29:50,990
holding on to that descriptor for that

00:29:48,800 --> 00:29:53,840
file and still writing to it so even

00:29:50,990 --> 00:29:56,090
after you RM RF this this file you can

00:29:53,840 --> 00:29:57,770
kind of through the proc file system go

00:29:56,090 --> 00:30:00,470
in and actually tail it and read it and

00:29:57,770 --> 00:30:01,850
interact with it so sometimes doesn't

00:30:00,470 --> 00:30:04,730
get this can get you out of a jam

00:30:01,850 --> 00:30:06,260
if you if you accidentally remove

00:30:04,730 --> 00:30:10,490
something that's still being held on to

00:30:06,260 --> 00:30:14,030
some process but all this is to say proc

00:30:10,490 --> 00:30:16,100
sisyphus are not not your normal file

00:30:14,030 --> 00:30:18,650
system stuff and we're going into this

00:30:16,100 --> 00:30:21,080
because cgroups relies on both of these

00:30:18,650 --> 00:30:25,640
file systems to interact with the kernel

00:30:21,080 --> 00:30:28,820
so back to see groups will do something

00:30:25,640 --> 00:30:32,150
nice and easy to start we'll make a new

00:30:28,820 --> 00:30:35,990
C group kind of under the memory tree

00:30:32,150 --> 00:30:38,240
and call it a a which is pretty

00:30:35,990 --> 00:30:41,210
uninspired but it makes it easy to fit

00:30:38,240 --> 00:30:43,250
on the slides so we go in right everyone

00:30:41,210 --> 00:30:43,880
can rock this on the command line make

00:30:43,250 --> 00:30:46,280
derp

00:30:43,880 --> 00:30:49,190
you know created directory systm SC

00:30:46,280 --> 00:30:51,110
groups memory a a and now if we list

00:30:49,190 --> 00:30:52,940
that right after making it magically

00:30:51,110 --> 00:30:56,690
there are all these other files in there

00:30:52,940 --> 00:30:58,850
C group cloned children memory dot K mem

00:30:56,690 --> 00:31:00,890
usage and bytes memory although

00:30:58,850 --> 00:31:03,350
entrapped memory not limits and bytes

00:31:00,890 --> 00:31:04,730
and stuff like that so what we did there

00:31:03,350 --> 00:31:06,380
would look like we're making directory

00:31:04,730 --> 00:31:08,270
but we're really interacting with the

00:31:06,380 --> 00:31:11,200
kernel and telling it to create a new C

00:31:08,270 --> 00:31:11,200
group called AAA

00:31:12,940 --> 00:31:17,299
so now just like we kind of did for

00:31:15,650 --> 00:31:22,010
managing the network earlier we're just

00:31:17,299 --> 00:31:25,720
gonna echo 100 and put put that into the

00:31:22,010 --> 00:31:29,570
file called mem memory limit in bytes in

00:31:25,720 --> 00:31:32,090
in this AAC group so that's pretty easy

00:31:29,570 --> 00:31:33,730
we already made a C group and now we're

00:31:32,090 --> 00:31:35,960
kind of you know setting some

00:31:33,730 --> 00:31:37,789
constraints on physical resources on

00:31:35,960 --> 00:31:43,669
memory just with like a couple lines of

00:31:37,789 --> 00:31:44,899
bash that anyone could could rock so

00:31:43,669 --> 00:31:46,549
that's like a little that's cool but

00:31:44,899 --> 00:31:48,020
it's a little weird right so maybe maybe

00:31:46,549 --> 00:31:50,659
we want to like use some tools that are

00:31:48,020 --> 00:31:52,220
a little higher level right because that

00:31:50,659 --> 00:31:53,419
feels a little oh it feels a little

00:31:52,220 --> 00:31:57,440
dangerous and weird to me

00:31:53,419 --> 00:31:58,940
so lib cgroups is library for

00:31:57,440 --> 00:32:00,559
interacting with c groups with the

00:31:58,940 --> 00:32:04,520
kernel and it comes with a couple of

00:32:00,559 --> 00:32:05,630
tools a couple helper tools so we'll

00:32:04,520 --> 00:32:07,490
kind of do that same thing we just did

00:32:05,630 --> 00:32:10,429
we'll just create except for the CPU

00:32:07,490 --> 00:32:13,520
this time we'll create the CPU a a C

00:32:10,429 --> 00:32:16,820
groups C group and then we'll set the

00:32:13,520 --> 00:32:19,789
CPU shares value to one hundred seems

00:32:16,820 --> 00:32:23,570
nice an arbitrary rocket and then we'll

00:32:19,789 --> 00:32:27,740
use CG exec to to run this little Python

00:32:23,570 --> 00:32:30,500
script while telling the pythons the

00:32:27,740 --> 00:32:34,730
Python script to run in in the C group

00:32:30,500 --> 00:32:36,470
hey that we just made so I have a bunch

00:32:34,730 --> 00:32:37,610
of cool examples online on github so we

00:32:36,470 --> 00:32:39,200
can get I don't think a lot of time

00:32:37,610 --> 00:32:40,429
today but we couldn't get those together

00:32:39,200 --> 00:32:42,440
and they're just kind of fun ways to

00:32:40,429 --> 00:32:43,779
like play around with C groups so I

00:32:42,440 --> 00:32:46,640
thought this was kind of a funny way so

00:32:43,779 --> 00:32:49,669
we'll create a memory C group called

00:32:46,640 --> 00:32:52,149
teensy in memory and then we'll use CG

00:32:49,669 --> 00:32:56,029
set and set the limit in bytes to a

00:32:52,149 --> 00:32:58,850
hundred bytes for the teensy process and

00:32:56,029 --> 00:33:00,350
then this is a little low command line

00:32:58,850 --> 00:33:01,760
magic but right you're getting the

00:33:00,350 --> 00:33:03,500
dollar sign dollar sign is getting the

00:33:01,760 --> 00:33:05,659
process idea of the current the current

00:33:03,500 --> 00:33:09,380
process which is this bash shell that

00:33:05,659 --> 00:33:11,360
were presumably in and will again use

00:33:09,380 --> 00:33:14,390
just this kind of like redirection to

00:33:11,360 --> 00:33:18,289
associate to write that process file to

00:33:14,390 --> 00:33:20,000
this tasks file and thereby associating

00:33:18,289 --> 00:33:23,840
the current shell we're in with the

00:33:20,000 --> 00:33:27,649
teensy memory thing so what can you do

00:33:23,840 --> 00:33:29,990
with the hundred bytes of memory mmm

00:33:27,649 --> 00:33:32,270
pretty much nothing so at this point

00:33:29,990 --> 00:33:33,890
we've we've locked down the shell we're

00:33:32,270 --> 00:33:36,590
working in to a hundred bytes of memory

00:33:33,890 --> 00:33:39,559
and if you try to run anything it will

00:33:36,590 --> 00:33:41,149
kill your shell so that's nice and fun

00:33:39,559 --> 00:33:42,890
because your shell dies and then you

00:33:41,149 --> 00:33:47,000
have to make a new one but you kind of

00:33:42,890 --> 00:33:52,030
get the point that the secret of memory

00:33:47,000 --> 00:33:52,030
limit kind of was acting upon your shell

00:33:53,770 --> 00:33:59,630
so CPU shares right Seaview shares is

00:33:56,390 --> 00:34:03,080
just a way for kind of prioritizing CPU

00:33:59,630 --> 00:34:05,539
resources so maybe we make one CPU C

00:34:03,080 --> 00:34:07,669
group called a a we we tell it that it

00:34:05,539 --> 00:34:10,190
shares our 100 and another one that it

00:34:07,669 --> 00:34:13,820
shares our 10 and we kind of run a CPU

00:34:10,190 --> 00:34:15,440
intensive thing and kind of if you look

00:34:13,820 --> 00:34:18,740
at top you'll see that one is using

00:34:15,440 --> 00:34:20,960
roughly 10x what the other is and in

00:34:18,740 --> 00:34:24,260
this the limit in bytes is you know

00:34:20,960 --> 00:34:25,609
limit in bytes actually has units CPU

00:34:24,260 --> 00:34:30,800
shares is different that it's just kind

00:34:25,609 --> 00:34:34,070
of that it's just relative so these

00:34:30,800 --> 00:34:35,780
could be one and ten or ten and a

00:34:34,070 --> 00:34:39,220
hundred or three and thirty and you

00:34:35,780 --> 00:34:42,320
would get the kind of same output here

00:34:39,220 --> 00:34:44,089
so as I mentioned ditional cgroups

00:34:42,320 --> 00:34:46,730
kernel namespaces are the other critical

00:34:44,089 --> 00:34:49,220
part of containers so while c groups are

00:34:46,730 --> 00:34:50,540
categorizing and and have these sub

00:34:49,220 --> 00:34:53,480
modules for limiting the physical

00:34:50,540 --> 00:34:56,210
resources kernel namespaces are ways of

00:34:53,480 --> 00:35:02,480
in software isolating some processes for

00:34:56,210 --> 00:35:04,550
the other so for example IBC inter

00:35:02,480 --> 00:35:06,440
process communication if you really want

00:35:04,550 --> 00:35:08,060
to secure isolation you don't want one

00:35:06,440 --> 00:35:09,470
process to be able to kind of chat with

00:35:08,060 --> 00:35:14,000
the other process so you can use this

00:35:09,470 --> 00:35:15,530
IPC namespace to isolate them network

00:35:14,000 --> 00:35:17,030
namespace if you have again two

00:35:15,530 --> 00:35:18,740
processes that you want to kind of run

00:35:17,030 --> 00:35:20,540
on the same server you don't really want

00:35:18,740 --> 00:35:23,869
to talk together you can use a network

00:35:20,540 --> 00:35:25,400
namespace and that will essentially as

00:35:23,869 --> 00:35:27,980
far as the kernel is concerned as far as

00:35:25,400 --> 00:35:28,410
the process is concerned launch those on

00:35:27,980 --> 00:35:30,990
to

00:35:28,410 --> 00:35:33,000
totally separate different networks and

00:35:30,990 --> 00:35:36,000
there's another number of others here

00:35:33,000 --> 00:35:44,789
the Mount P I use or UTS but that's

00:35:36,000 --> 00:35:48,690
that's the basic today so as share bear

00:35:44,789 --> 00:35:51,289
sure bear looks pretty cute but but he's

00:35:48,690 --> 00:35:54,930
kind of a badass and one time he said

00:35:51,289 --> 00:35:58,410
you know before you can share you must

00:35:54,930 --> 00:36:03,059
first unshare which I thought was pretty

00:35:58,410 --> 00:36:06,450
deep unshare is a system call and it's

00:36:03,059 --> 00:36:11,880
also utility you can run and so this is

00:36:06,450 --> 00:36:13,530
just an example here unshare so what one

00:36:11,880 --> 00:36:15,359
chair is doing is it son sharing it from

00:36:13,530 --> 00:36:17,309
the from the rest of the processes it is

00:36:15,359 --> 00:36:19,770
creating a namespace for whatever you

00:36:17,309 --> 00:36:21,359
run after it so we run sharing and we're

00:36:19,770 --> 00:36:23,700
saying specifically create a network

00:36:21,359 --> 00:36:26,549
namespace for bin bash and so if you

00:36:23,700 --> 00:36:28,710
just run this command you will be in a

00:36:26,549 --> 00:36:32,099
bash shell which cannot talk with any

00:36:28,710 --> 00:36:33,329
other network at that point and so

00:36:32,099 --> 00:36:39,589
that's kind of the simplest way to

00:36:33,329 --> 00:36:39,589
create a network namespace for a process

00:36:40,279 --> 00:36:43,380
so great

00:36:41,700 --> 00:36:45,960
glad we kind of got in there and dirty

00:36:43,380 --> 00:36:49,680
and now we can kind of all totally

00:36:45,960 --> 00:36:52,470
forget that knowledge because unless you

00:36:49,680 --> 00:36:53,849
want to explore and that kind of thing I

00:36:52,470 --> 00:36:56,730
certainly don't really want to be

00:36:53,849 --> 00:36:58,950
managing kind of Drupal link back to the

00:36:56,730 --> 00:37:01,349
Drupal world in an awesome sites world

00:36:58,950 --> 00:37:03,900
that's kind of way too low-level for the

00:37:01,349 --> 00:37:05,700
day-to-day but I wanted to show you guys

00:37:03,900 --> 00:37:09,960
a little bit about what's going on kind

00:37:05,700 --> 00:37:12,329
of you know lower level on the on the

00:37:09,960 --> 00:37:13,349
Linux side curled sign well there's got

00:37:12,329 --> 00:37:14,819
to be a better way to do this right

00:37:13,349 --> 00:37:17,160
there's got to be a better way to get

00:37:14,819 --> 00:37:18,809
the portability the games we want

00:37:17,160 --> 00:37:23,819
without really worrying about this stuff

00:37:18,809 --> 00:37:25,770
on a low level and so kind of moving up

00:37:23,819 --> 00:37:27,359
the chain from some of the work we just

00:37:25,770 --> 00:37:29,490
did we looked at kind of using the

00:37:27,359 --> 00:37:30,960
virtual file systems and then we kind of

00:37:29,490 --> 00:37:32,670
looked at some helper tools that were

00:37:30,960 --> 00:37:36,240
out there this is kind of going up a

00:37:32,670 --> 00:37:38,549
stack a whole another layer so there's

00:37:36,240 --> 00:37:39,060
stuff like docker which probably our own

00:37:38,549 --> 00:37:45,300
circle

00:37:39,060 --> 00:37:46,890
openvz libvirt libertà Alex II let me

00:37:45,300 --> 00:37:48,930
containerize that for you is this thing

00:37:46,890 --> 00:37:50,880
from Google I'll talk about and and then

00:37:48,930 --> 00:37:52,170
just a generic container with the Linux

00:37:50,880 --> 00:37:54,360
penguin on it

00:37:52,170 --> 00:37:58,530
I think like probably ever who's heard

00:37:54,360 --> 00:38:00,030
of docker yeah so docker is awesome and

00:37:58,530 --> 00:38:01,530
I think it's pretty easy to tell like

00:38:00,030 --> 00:38:04,110
which one of these are gonna be like our

00:38:01,530 --> 00:38:05,370
well marketed because they have logos so

00:38:04,110 --> 00:38:08,160
a lot of this stuff like the slides

00:38:05,370 --> 00:38:10,110
aren't very pretty cos like no one a lot

00:38:08,160 --> 00:38:15,270
of kernel hackers not many logo

00:38:10,110 --> 00:38:17,970
designers which which I guess is a fact

00:38:15,270 --> 00:38:22,470
of the world that helps helps projects

00:38:17,970 --> 00:38:25,320
get out there and get well-known so this

00:38:22,470 --> 00:38:26,850
is on github this kind of goes you know

00:38:25,320 --> 00:38:27,960
goes through kind of comparing some of

00:38:26,850 --> 00:38:30,300
these different tools that let you

00:38:27,960 --> 00:38:33,060
manage this stuff so darker is in there

00:38:30,300 --> 00:38:39,600
another one called system D system DN

00:38:33,060 --> 00:38:41,610
spawn Alexi libvirt Alexi LM c TF y

00:38:39,600 --> 00:38:43,620
which is lem cut fee which is let me

00:38:41,610 --> 00:38:44,910
containerize that for you or contain

00:38:43,620 --> 00:38:47,130
that for you which is google's and

00:38:44,910 --> 00:38:48,300
openvz so all these are a little

00:38:47,130 --> 00:38:50,240
different right they're probably coming

00:38:48,300 --> 00:38:52,620
from different places like different um

00:38:50,240 --> 00:38:55,350
they might be just pure open-source they

00:38:52,620 --> 00:38:59,340
might be kind of spurred development at

00:38:55,350 --> 00:39:01,500
a single organization or like kind of

00:38:59,340 --> 00:39:05,490
pure open source like system D is kind

00:39:01,500 --> 00:39:06,510
of from the ground up like created but

00:39:05,490 --> 00:39:09,570
basically they have kind of some

00:39:06,510 --> 00:39:11,430
different things and these might like

00:39:09,570 --> 00:39:13,410
socket activation is kind of a cool one

00:39:11,430 --> 00:39:15,180
where you can have a container that's

00:39:13,410 --> 00:39:16,650
using no resources and as soon as

00:39:15,180 --> 00:39:19,890
someone kind of wants to interact with

00:39:16,650 --> 00:39:21,210
that container maybe over a network

00:39:19,890 --> 00:39:23,130
socket or something like that it will

00:39:21,210 --> 00:39:24,480
just spin up into existence and let you

00:39:23,130 --> 00:39:26,940
use it

00:39:24,480 --> 00:39:28,830
and kind of some other details here so

00:39:26,940 --> 00:39:31,230
this is a cool github repo that's kind

00:39:28,830 --> 00:39:33,870
of a community moderated matrix of which

00:39:31,230 --> 00:39:38,630
one of these which one of these supports

00:39:33,870 --> 00:39:38,630
different um different features

00:39:39,830 --> 00:39:48,890
so Alex see there is no logo Alexi is is

00:39:47,030 --> 00:39:50,450
a wrapper around the things we were just

00:39:48,890 --> 00:39:55,310
talking about see groups and namespaces

00:39:50,450 --> 00:39:57,290
it is part of libau Alexi is kind of a

00:39:55,310 --> 00:39:58,550
wrap around those things that's binding

00:39:57,290 --> 00:40:01,670
so you can use it from different

00:39:58,550 --> 00:40:03,620
languages instead of the tools decent

00:40:01,670 --> 00:40:06,830
Docs on this as well as container

00:40:03,620 --> 00:40:08,480
templates I'll save my recommendation

00:40:06,830 --> 00:40:09,650
for the end which is going to be darker

00:40:08,480 --> 00:40:14,620
but I still want to kind of go through

00:40:09,650 --> 00:40:17,330
this stuff I don't want to spoil it so

00:40:14,620 --> 00:40:18,830
LEM cuts me definitely wins that like

00:40:17,330 --> 00:40:20,090
they don't have a logo but like like

00:40:18,830 --> 00:40:21,290
anything with Google you can probably

00:40:20,090 --> 00:40:23,870
get something with like these colored

00:40:21,290 --> 00:40:26,900
blocks so that counts for something

00:40:23,870 --> 00:40:28,490
although it's not a real logo and let me

00:40:26,900 --> 00:40:30,800
contain that for you it's like a pretty

00:40:28,490 --> 00:40:32,750
good name I'm not true who came up with

00:40:30,800 --> 00:40:35,660
it or who let them come with up with it

00:40:32,750 --> 00:40:37,370
but LEM cut to be is a little it's kind

00:40:35,660 --> 00:40:39,050
of fun to say as well

00:40:37,370 --> 00:40:42,110
so it's great by Google it's kind of

00:40:39,050 --> 00:40:44,690
open source I'm still going to get it to

00:40:42,110 --> 00:40:46,460
to build on the on the demo they agree

00:40:44,690 --> 00:40:48,800
box I have but it's a little bit of a

00:40:46,460 --> 00:40:50,300
pain to build and it's really cool

00:40:48,800 --> 00:40:53,240
Google is like putting resources into

00:40:50,300 --> 00:40:56,240
open sourcing it but I think it's not

00:40:53,240 --> 00:40:58,160
but um but they might have a hard time

00:40:56,240 --> 00:41:02,140
getting a getting adoption because it is

00:40:58,160 --> 00:41:05,500
kind of has one foot firmly inside there

00:41:02,140 --> 00:41:08,450
but every single process at Google runs

00:41:05,500 --> 00:41:10,580
in a limb comfy container right so

00:41:08,450 --> 00:41:12,710
that's pretty cool Google Data Centers

00:41:10,580 --> 00:41:15,410
full of servers servers churning away

00:41:12,710 --> 00:41:20,690
right every single one of them is using

00:41:15,410 --> 00:41:22,250
LEM cut v2 containerize it and largely

00:41:20,690 --> 00:41:23,870
what this is doing at Google is trying

00:41:22,250 --> 00:41:26,090
to achieve a hundred percent unitl

00:41:23,870 --> 00:41:28,400
utilization so you have jobs queued up

00:41:26,090 --> 00:41:30,260
like indefinitely and as soon as the

00:41:28,400 --> 00:41:32,750
server has a little bit of resources

00:41:30,260 --> 00:41:34,550
it'll start working on a slow job it can

00:41:32,750 --> 00:41:36,650
get killed if like a new someone types

00:41:34,550 --> 00:41:37,940
in you know Linux containers and Google

00:41:36,650 --> 00:41:39,440
and presses enter and that

00:41:37,940 --> 00:41:41,270
server needs to be used to serve that

00:41:39,440 --> 00:41:43,339
real-time request and that's all done

00:41:41,270 --> 00:41:45,200
through namespaces and stuff it is

00:41:43,339 --> 00:41:47,660
nested containers which is kind of cool

00:41:45,200 --> 00:41:51,109
so a lot of the C groups and namespaces

00:41:47,660 --> 00:41:53,720
is about isolating the process but some

00:41:51,109 --> 00:41:57,020
of it is it's just for the processes

00:41:53,720 --> 00:41:58,880
sake like so the PID namespace if you

00:41:57,020 --> 00:42:00,770
put something in the process identifier

00:41:58,880 --> 00:42:03,380
name space it will think that it's the

00:42:00,770 --> 00:42:05,000
only process running on the box and I

00:42:03,380 --> 00:42:06,890
like to think that that is like more for

00:42:05,000 --> 00:42:09,260
that process than the other processes

00:42:06,890 --> 00:42:11,119
and it just makes it feel good like all

00:42:09,260 --> 00:42:17,839
right this whole server and I'm just

00:42:11,119 --> 00:42:22,670
gonna do what I do but so that slum cut

00:42:17,839 --> 00:42:26,240
me middle-of-the-road logout so system D

00:42:22,670 --> 00:42:28,430
end spawn and spawn is also a cool name

00:42:26,240 --> 00:42:31,150
and I might be giving away some of my

00:42:28,430 --> 00:42:34,339
criteria for for evaluating these things

00:42:31,150 --> 00:42:36,859
but there's also not a logo that comes

00:42:34,339 --> 00:42:40,490
out of the system D project who knows

00:42:36,859 --> 00:42:42,980
that says indeed yeah some people so

00:42:40,490 --> 00:42:44,800
system D is shipping with fedora it's

00:42:42,980 --> 00:42:47,270
gonna get caught when Tyrell

00:42:44,800 --> 00:42:50,540
shuttleworth acknowledged it'll be part

00:42:47,270 --> 00:42:52,490
of a bun - coming up and system D

00:42:50,540 --> 00:42:55,670
basically replaces this five and knit

00:42:52,490 --> 00:42:58,160
this means anything but instead of kind

00:42:55,670 --> 00:43:00,740
of init scripts and PID files system D

00:42:58,160 --> 00:43:02,180
is a process manager that runs as the

00:43:00,740 --> 00:43:03,800
first process when your Linux server

00:43:02,180 --> 00:43:05,780
boots it helps you keep track of all

00:43:03,800 --> 00:43:07,819
this stuff all these processes so you

00:43:05,780 --> 00:43:11,960
group stuff like that it also has this

00:43:07,819 --> 00:43:15,020
system D and spawn thing for creating

00:43:11,960 --> 00:43:18,470
kind of real real containers

00:43:15,020 --> 00:43:20,300
oh so this is gonna ship with like

00:43:18,470 --> 00:43:23,060
fedora and stuff and it will ship even

00:43:20,300 --> 00:43:24,800
if you guys don't know about it and my

00:43:23,060 --> 00:43:28,430
colleague Joe Miller gave a cool talk it

00:43:24,800 --> 00:43:29,869
sent to us dojo kind of about kind of

00:43:28,430 --> 00:43:31,160
living in the living in the future

00:43:29,869 --> 00:43:33,470
because we've been on foot or on system

00:43:31,160 --> 00:43:34,819
D for a while but it's definitely

00:43:33,470 --> 00:43:37,940
something to kind of look into because

00:43:34,819 --> 00:43:40,550
it might know it's a little different

00:43:37,940 --> 00:43:42,170
than in its scripts and stuff like that

00:43:40,550 --> 00:43:43,240
and we'll see more and more of it for

00:43:42,170 --> 00:43:45,260
sure

00:43:43,240 --> 00:43:47,660
so this is like we're not one of the

00:43:45,260 --> 00:43:48,490
little demos but sighs I claim with

00:43:47,660 --> 00:43:50,410
vagrant

00:43:48,490 --> 00:43:53,770
or a box like okay launch vagrant that's

00:43:50,410 --> 00:43:56,650
cool VirtualBox right OSX VirtualBox if

00:43:53,770 --> 00:43:58,330
it were a thing like okay deep bootstrap

00:43:56,650 --> 00:43:59,920
is just it's a debian command that gives

00:43:58,330 --> 00:44:01,600
you like a very minimal Debbie and

00:43:59,920 --> 00:44:05,500
install right and then you're like

00:44:01,600 --> 00:44:07,270
systemd and spine that debian box and so

00:44:05,500 --> 00:44:09,820
I'm playing around with this and I'm

00:44:07,270 --> 00:44:13,990
like oh my god I'm on OSX and I have a

00:44:09,820 --> 00:44:16,210
fedora vm virtualbox and then I I made a

00:44:13,990 --> 00:44:18,520
container and it's just no that's not

00:44:16,210 --> 00:44:24,130
enough we have to go deeper we have to

00:44:18,520 --> 00:44:26,770
do more more levels and and then I

00:44:24,130 --> 00:44:28,990
actually just stopped and kept just went

00:44:26,770 --> 00:44:31,119
to bed or something but pretty cool

00:44:28,990 --> 00:44:32,680
right you can you can kind of that's

00:44:31,119 --> 00:44:35,230
what containers do they just let you go

00:44:32,680 --> 00:44:36,760
kind of deeper and deeper in those

00:44:35,230 --> 00:44:40,810
processes might think that they're the

00:44:36,760 --> 00:44:42,280
only ones running on the box no this is

00:44:40,810 --> 00:44:43,869
like just a little tidbit pretty much

00:44:42,280 --> 00:44:45,700
the same thing but you can be like - -

00:44:43,869 --> 00:44:47,710
read-only and then nobody could write to

00:44:45,700 --> 00:44:49,270
that file system I don't know for some

00:44:47,710 --> 00:44:51,700
reason launching a whole container they

00:44:49,270 --> 00:44:54,850
can't write just kind of gots my like I

00:44:51,700 --> 00:44:57,100
wonder what I could do with that nobody

00:44:54,850 --> 00:45:03,550
could write anything they couldn't break

00:44:57,100 --> 00:45:07,630
anything sure you can't use it but it

00:45:03,550 --> 00:45:09,700
will never break and then docker so a

00:45:07,630 --> 00:45:11,590
lot of you heard about docker came out

00:45:09,700 --> 00:45:14,200
of a company called dot cloud and I kind

00:45:11,590 --> 00:45:15,490
of like this I kind of like this quote

00:45:14,200 --> 00:45:18,250
and I thought it was a little abrupt out

00:45:15,490 --> 00:45:20,410
of the talk darker talking about and

00:45:18,250 --> 00:45:23,080
it's early age dot cloud the doc lab

00:45:20,410 --> 00:45:26,320
platform used plain LXE which we

00:45:23,080 --> 00:45:27,760
discussed as a no logo the platform

00:45:26,320 --> 00:45:29,050
evolved they were like patching the

00:45:27,760 --> 00:45:30,670
kernel kind of doing this different

00:45:29,050 --> 00:45:32,440
stuff and then eventually they're like

00:45:30,670 --> 00:45:33,880
whoa this is like not this is really

00:45:32,440 --> 00:45:34,869
different than Alex see this is totally

00:45:33,880 --> 00:45:37,520
different

00:45:34,869 --> 00:45:41,870
let's get an awesome logo and

00:45:37,520 --> 00:45:43,130
about this I there are a lot of people

00:45:41,870 --> 00:45:45,620
probably in this room the know more

00:45:43,130 --> 00:45:47,780
about docker and Drupal and how this can

00:45:45,620 --> 00:45:49,550
make you know your your developers happy

00:45:47,780 --> 00:45:51,710
and your life happy and stuff and I

00:45:49,550 --> 00:45:53,240
think check out ricardo tomorrow's stock

00:45:51,710 --> 00:45:54,710
from Drupal con Prague I thought that

00:45:53,240 --> 00:45:56,210
was a pretty awesome one pretty good

00:45:54,710 --> 00:45:58,250
over overlap with this dock but

00:45:56,210 --> 00:46:00,280
specifically some cool docker stuff so

00:45:58,250 --> 00:46:02,300
that's a good place to get started and

00:46:00,280 --> 00:46:03,920
ask around maybe we could offer

00:46:02,300 --> 00:46:07,580
something cuz I'm sure some people have

00:46:03,920 --> 00:46:10,730
been playing around and dock I mean so

00:46:07,580 --> 00:46:12,350
da cloud made docker they started with

00:46:10,730 --> 00:46:13,850
this kind of platform as a service which

00:46:12,350 --> 00:46:16,160
may or may not still be around but now

00:46:13,850 --> 00:46:17,690
realize that oh my gosh people don't

00:46:16,160 --> 00:46:19,430
really need the platform they just need

00:46:17,690 --> 00:46:21,350
this this wrapper around all these

00:46:19,430 --> 00:46:24,290
things they're not using proc and

00:46:21,350 --> 00:46:25,730
Sisyphus to do this cool stuff they can

00:46:24,290 --> 00:46:31,310
start keep working on the important

00:46:25,730 --> 00:46:34,100
things so right there's a spectrum right

00:46:31,310 --> 00:46:36,620
we started off virtual file systems LEM

00:46:34,100 --> 00:46:38,480
companies kind of weird LXE still pretty

00:46:36,620 --> 00:46:41,030
low-level it doesn't feel super helpful

00:46:38,480 --> 00:46:43,610
when you use it and spawn you know it

00:46:41,030 --> 00:46:47,180
got me to that inception kind of you

00:46:43,610 --> 00:46:49,010
know idea but then you know and I think

00:46:47,180 --> 00:46:50,900
docker is probably again one of the best

00:46:49,010 --> 00:46:53,180
market best propel prepared that's

00:46:50,900 --> 00:46:55,490
documented kind of like heist momentum

00:46:53,180 --> 00:46:59,330
ways that you can actually leverage this

00:46:55,490 --> 00:47:02,570
in your day to day whether you're a

00:46:59,330 --> 00:47:04,400
developer right or a or operator or

00:47:02,570 --> 00:47:06,500
citizens administrator or you know a

00:47:04,400 --> 00:47:09,410
small shop or a big shop or working open

00:47:06,500 --> 00:47:13,310
source or on private stuff so pretty

00:47:09,410 --> 00:47:19,070
exciting stuff and then just to set up a

00:47:13,310 --> 00:47:20,300
talk for like next to book on once you

00:47:19,070 --> 00:47:21,800
get a bunch of containers running on

00:47:20,300 --> 00:47:24,140
server you need to manage those

00:47:21,800 --> 00:47:26,840
containers across you know multiple

00:47:24,140 --> 00:47:28,430
servers right for hae or even or

00:47:26,840 --> 00:47:31,940
whatever and there's a school project

00:47:28,430 --> 00:47:33,110
core OS that is kind of I think they

00:47:31,940 --> 00:47:34,310
have a product now but they don't it's

00:47:33,110 --> 00:47:35,420
not really a product you can use I think

00:47:34,310 --> 00:47:37,570
they're really setting their sights

00:47:35,420 --> 00:47:40,120
maybe 18 months down the road

00:47:37,570 --> 00:47:42,370
when everyone's like yeah docker no

00:47:40,120 --> 00:47:44,470
sweat right and now how do I use docker

00:47:42,370 --> 00:47:48,160
on like you know on your machines at

00:47:44,470 --> 00:47:50,410
once but that's cool and and I have good

00:47:48,160 --> 00:47:56,850
hopes for their success because of their

00:47:50,410 --> 00:47:59,560
logo and yeah because of their logo

00:47:56,850 --> 00:48:04,000
that's cool and to check out so oh no

00:47:59,560 --> 00:48:06,640
you know what help says no problem

00:48:04,000 --> 00:48:09,280
you know those servers no problems no

00:48:06,640 --> 00:48:10,750
problem says Alf so you know servers are

00:48:09,280 --> 00:48:12,360
great they solve problems they power the

00:48:10,750 --> 00:48:14,440
Internet they also create problems

00:48:12,360 --> 00:48:16,300
containers really can kind of get this

00:48:14,440 --> 00:48:18,400
kind of agile portability whether you're

00:48:16,300 --> 00:48:21,370
working you know with a few surfers or

00:48:18,400 --> 00:48:23,470
many servers or a few sites or many

00:48:21,370 --> 00:48:26,170
sites small teams big teams a lot of

00:48:23,470 --> 00:48:28,150
cool stuff going on there don't worry

00:48:26,170 --> 00:48:29,560
about containers you already know what

00:48:28,150 --> 00:48:31,780
they are and you can tell everyone you

00:48:29,560 --> 00:48:35,400
know exactly what they are they're just

00:48:31,780 --> 00:48:37,510
isolated processes and on the on the

00:48:35,400 --> 00:48:42,040
technical level they're implemented with

00:48:37,510 --> 00:48:45,520
C groups and namespaces and you know

00:48:42,040 --> 00:48:46,480
please please use an awesome tool to

00:48:45,520 --> 00:48:48,580
manage this stuff

00:48:46,480 --> 00:48:52,960
otherwise you're probably you know just

00:48:48,580 --> 00:48:54,310
gonna be typing on the command line and

00:48:52,960 --> 00:48:55,720
the future is now I think this stuff is

00:48:54,310 --> 00:48:57,340
really happening and I would encourage

00:48:55,720 --> 00:49:00,370
everyone and be excited to chat with

00:48:57,340 --> 00:49:03,160
everyone about what opportunities this

00:49:00,370 --> 00:49:05,170
kind of stuff opens up and and where

00:49:03,160 --> 00:49:06,520
it's gonna go next and and kind of how

00:49:05,170 --> 00:49:08,890
you can leverage it you know to make

00:49:06,520 --> 00:49:10,720
your life better because technology just

00:49:08,890 --> 00:49:12,880
isn't about technology it's about how to

00:49:10,720 --> 00:49:15,460
make our lives better and I think these

00:49:12,880 --> 00:49:17,620
technologies can do that so let's go out

00:49:15,460 --> 00:49:23,560
there let's make some more Drupal let's

00:49:17,620 --> 00:49:27,730
keep some sites online and yeah thank

00:49:23,560 --> 00:49:29,230
you everyone for listening we have a few

00:49:27,730 --> 00:49:31,110
minutes for Q&A everyone or happy to

00:49:29,230 --> 00:49:34,180
kind of just like get together after or

00:49:31,110 --> 00:49:35,410
online or whatever you I put on some on

00:49:34,180 --> 00:49:37,390
github some of these like container

00:49:35,410 --> 00:49:39,700
demos if you just want kind of like the

00:49:37,390 --> 00:49:43,990
easiest way to play around with some of

00:49:39,700 --> 00:49:45,670
this like that always helps me oh you

00:49:43,990 --> 00:49:46,789
know backing on the command line always

00:49:45,670 --> 00:49:49,160
helps me kind of get my head

00:49:46,789 --> 00:49:52,660
a little bit not sure if it will you and

00:49:49,160 --> 00:49:57,919
finishing up with a calming manatee here

00:49:52,660 --> 00:50:00,140
might mark the yeah and at the end of

00:49:57,919 --> 00:50:11,259
the sessions at Google calm so thank you

00:50:00,140 --> 00:50:11,259
guys so much any questions

00:50:11,949 --> 00:50:15,069
what up

00:50:21,740 --> 00:50:26,549
so I'm guessing that you guys are

00:50:23,880 --> 00:50:29,249
probably using system D and N spawn at

00:50:26,549 --> 00:50:32,759
Pantheon Oh is a little bit like

00:50:29,249 --> 00:50:36,029
primarily system D as other ways of

00:50:32,759 --> 00:50:38,279
letting you interact with C groups and

00:50:36,029 --> 00:50:40,950
namespaces that are through dense and so

00:50:38,279 --> 00:50:43,109
on just through like kind of the unit

00:50:40,950 --> 00:50:45,380
configuration directives and so that

00:50:43,109 --> 00:50:48,660
that's kind of an even lighter way of

00:50:45,380 --> 00:50:51,890
managing those C groups and namespaces

00:50:48,660 --> 00:50:58,190
okay and what sends bonds were all there

00:50:51,890 --> 00:51:01,049
so and spawn on is basically or like a

00:50:58,190 --> 00:51:03,390
wrapper that kind of helps you actually

00:51:01,049 --> 00:51:05,960
kind of mimic kind of like a hoop as

00:51:03,390 --> 00:51:08,190
opposed to just just creating a process

00:51:05,960 --> 00:51:10,109
so ends Vaughn like it helps you create

00:51:08,190 --> 00:51:11,700
like a whole like it looks like I have a

00:51:10,109 --> 00:51:13,740
whole server to myself as opposed to

00:51:11,700 --> 00:51:15,660
like I'm just a process I'm just a

00:51:13,740 --> 00:51:20,579
process and I have this much memory and

00:51:15,660 --> 00:51:23,759
this much and I'm guessing that you guys

00:51:20,579 --> 00:51:25,440
need some of that stuff for what you're

00:51:23,759 --> 00:51:26,700
doing I guess sorry this is sort of

00:51:25,440 --> 00:51:28,589
segwaying into a question about whether

00:51:26,700 --> 00:51:30,299
if you were starting today whether you

00:51:28,589 --> 00:51:31,920
probably build on docker or whether you

00:51:30,299 --> 00:51:34,769
sort of stick with the system I mean if

00:51:31,920 --> 00:51:37,140
you are doing if if you wanted to build

00:51:34,769 --> 00:51:38,759
a big platform which like people there's

00:51:37,140 --> 00:51:40,799
going to be amazing innovation in this

00:51:38,759 --> 00:51:42,269
space and I would you I would look

00:51:40,799 --> 00:51:44,970
straight to core LS because these guys

00:51:42,269 --> 00:51:48,720
are rethinking like from the operating

00:51:44,970 --> 00:51:53,339
system level up how this stuff works so

00:51:48,720 --> 00:51:54,569
core OS all the way and I but it's not

00:51:53,339 --> 00:51:56,999
quite there yet and then if I was a

00:51:54,569 --> 00:51:59,420
developer or operator I would look

00:51:56,999 --> 00:52:10,519
largely to docker right here now

00:51:59,420 --> 00:52:13,319
thanks yeah so I was just gonna ask

00:52:10,519 --> 00:52:15,150
because more servers more problems but

00:52:13,319 --> 00:52:17,220
you do need servers because you need at

00:52:15,150 --> 00:52:19,589
least one uh-huh

00:52:17,220 --> 00:52:22,140
so what kind of goes into this decision

00:52:19,589 --> 00:52:25,440
on whether to containerize something or

00:52:22,140 --> 00:52:27,239
spin up a new view for it so like if I

00:52:25,440 --> 00:52:28,000
can make a million dollars running one

00:52:27,239 --> 00:52:29,710
line of code

00:52:28,000 --> 00:52:32,110
Raspberry Pi I would have already done

00:52:29,710 --> 00:52:36,580
that but I can't and I need to use

00:52:32,110 --> 00:52:39,690
servers to like power the experiences

00:52:36,580 --> 00:52:42,280
and solutions I'm helping people get to

00:52:39,690 --> 00:52:43,570
the cool thing about containerization is

00:52:42,280 --> 00:52:46,030
once you're thinking once you're

00:52:43,570 --> 00:52:48,370
thinking about the water bottle it

00:52:46,030 --> 00:52:52,480
doesn't matter if you have a hole like

00:52:48,370 --> 00:52:54,910
say you have two servers right whatever

00:52:52,480 --> 00:52:56,230
two big beefy servers once you're

00:52:54,910 --> 00:52:57,940
thinking about the water bottle it

00:52:56,230 --> 00:53:04,750
doesn't really matter if you have one

00:52:57,940 --> 00:53:05,890
water bottle on that server or many so

00:53:04,750 --> 00:53:07,690
yeah I think it's it's all about

00:53:05,890 --> 00:53:09,430
architecting for the portability and

00:53:07,690 --> 00:53:11,410
once you like have the idea of

00:53:09,430 --> 00:53:13,300
containers and that you'd they're

00:53:11,410 --> 00:53:15,940
portable and you can kind of move them

00:53:13,300 --> 00:53:17,740
around more easily then that's really

00:53:15,940 --> 00:53:19,930
kind of where you want to get to because

00:53:17,740 --> 00:53:21,670
then it doesn't really matter what

00:53:19,930 --> 00:53:23,920
physical it's an abstraction later

00:53:21,670 --> 00:53:26,170
abstraction abstracting what you're

00:53:23,920 --> 00:53:28,180
running from where it's running so at

00:53:26,170 --> 00:53:30,970
that point it just becomes a resource

00:53:28,180 --> 00:53:33,100
allocation type thing more like oh so

00:53:30,970 --> 00:53:34,780
what servers do I have available and

00:53:33,100 --> 00:53:36,250
what kind of processing needs do I have

00:53:34,780 --> 00:53:38,590
and how can I kind of allocate them

00:53:36,250 --> 00:53:40,840
which is the whole LEM cut Pete oh yeah

00:53:38,590 --> 00:53:42,130
in reason and okay like specifically

00:53:40,840 --> 00:53:43,660
eleven comfy house I get this pretty

00:53:42,130 --> 00:53:45,520
cool containerization thing but what

00:53:43,660 --> 00:53:47,920
they don't do what they don't open

00:53:45,520 --> 00:53:49,830
source is that like resource allocation

00:53:47,920 --> 00:53:52,540
thing which is like the bigger the big

00:53:49,830 --> 00:54:03,700
algorithmic kind of challenge there it's

00:53:52,540 --> 00:54:05,230
there it's our money I start walking out

00:54:03,700 --> 00:54:07,690
I really I might have missed a very

00:54:05,230 --> 00:54:09,850
basic thing here so like what part of

00:54:07,690 --> 00:54:13,240
the stack are we containerized I mean

00:54:09,850 --> 00:54:15,370
you are you saying you know like for

00:54:13,240 --> 00:54:17,650
each web site run Apache and Drupal in

00:54:15,370 --> 00:54:21,280
its own container as opposed to having

00:54:17,650 --> 00:54:23,860
multiple ones running together yeah how

00:54:21,280 --> 00:54:25,510
far you know how what would you couple

00:54:23,860 --> 00:54:28,900
in there and decouple it would you would

00:54:25,510 --> 00:54:30,610
you put like you know would you put

00:54:28,900 --> 00:54:33,310
Redis in there too or do have that

00:54:30,610 --> 00:54:35,380
somewhere else I mean elaborate on that

00:54:33,310 --> 00:54:37,660
a little bit please

00:54:35,380 --> 00:54:39,300
so as far as the technical is

00:54:37,660 --> 00:54:42,990
constraints you can kind of do what

00:54:39,300 --> 00:54:46,520
you want right in terms of what I guess

00:54:42,990 --> 00:54:49,770
my experiences with is container I sent

00:54:46,520 --> 00:54:52,470
resource so Redis is it's in its own

00:54:49,770 --> 00:54:56,640
kind of C group container and PHP is in

00:54:52,470 --> 00:54:58,770
its own C group contain PHP fpm well

00:54:56,640 --> 00:55:00,510
actually so that's that's a good point

00:54:58,770 --> 00:55:02,370
Redis is in its own container because we

00:55:00,510 --> 00:55:05,490
really just need one process to run it

00:55:02,370 --> 00:55:10,500
for for application containers we pair

00:55:05,490 --> 00:55:12,600
nginx and PHP fvn in the same container

00:55:10,500 --> 00:55:16,340
so in that case because those are kind

00:55:12,600 --> 00:55:20,610
of intimately tied we'll use the same

00:55:16,340 --> 00:55:22,470
containerization there and yeah I mean I

00:55:20,610 --> 00:55:24,930
think you know generally just you can

00:55:22,470 --> 00:55:27,570
think of like okay I want to run these

00:55:24,930 --> 00:55:30,270
two things do I want thing a to impact

00:55:27,570 --> 00:55:31,740
thing me or do it like or do I not want

00:55:30,270 --> 00:55:34,410
them to impact each other and if you

00:55:31,740 --> 00:55:37,910
don't want to impact each other it's a

00:55:34,410 --> 00:55:40,880
case for container izing them separately

00:55:37,910 --> 00:55:43,500
good question though and I think that's

00:55:40,880 --> 00:55:44,580
that's another kind of open question

00:55:43,500 --> 00:55:46,200
there are different ways to do it right

00:55:44,580 --> 00:55:49,350
you could containerize a whole Drupal

00:55:46,200 --> 00:55:51,630
stack and kind of one you know one like

00:55:49,350 --> 00:55:54,120
server what we do is more kind of a

00:55:51,630 --> 00:55:56,490
pantheon it's more like more spread out

00:55:54,120 --> 00:55:57,930
so well out and this is just kind of our

00:55:56,490 --> 00:56:00,000
decision that doesn't just kind of how

00:55:57,930 --> 00:56:02,490
we did it it's like a lot of servers

00:56:00,000 --> 00:56:04,200
that have all application containers on

00:56:02,490 --> 00:56:05,760
it and then servers out of all database

00:56:04,200 --> 00:56:08,490
servers on it and then servers that have

00:56:05,760 --> 00:56:10,010
already servers on a redis containers

00:56:08,490 --> 00:56:14,790
sorry

00:56:10,010 --> 00:56:17,010
thank you yeah and I think docker has

00:56:14,790 --> 00:56:18,300
some kind of notions of how they're

00:56:17,010 --> 00:56:19,920
gonna want that to work for you and

00:56:18,300 --> 00:56:22,580
those are probably good good places to

00:56:19,920 --> 00:56:22,580
start for sure

00:56:24,220 --> 00:56:31,330
I noticed that you did a deep bootstrap

00:56:29,980 --> 00:56:35,830
or on a directory went before you

00:56:31,330 --> 00:56:37,300
started a container so when you try to

00:56:35,830 --> 00:56:38,770
reduce the number of server you've got

00:56:37,300 --> 00:56:39,700
doesn't actually lead to you having more

00:56:38,770 --> 00:56:42,040
service because you never got to

00:56:39,700 --> 00:56:44,680
maintain upgrade all those individual D

00:56:42,040 --> 00:56:46,710
protect environments yeah that's a good

00:56:44,680 --> 00:56:50,020
point so I think in in some ways

00:56:46,710 --> 00:56:52,420
definitely like become depending on your

00:56:50,020 --> 00:56:56,140
container is Asian strategy that you can

00:56:52,420 --> 00:56:58,630
get that complexity like you have as

00:56:56,140 --> 00:57:05,290
many like Linux like operating system

00:56:58,630 --> 00:57:08,369
like things right but largely you know

00:57:05,290 --> 00:57:10,540
if you go back to the network example

00:57:08,369 --> 00:57:13,300
there are physical Network things that

00:57:10,540 --> 00:57:14,830
can fail whereas in the reliability of

00:57:13,300 --> 00:57:16,510
that was probably considerably lower

00:57:14,830 --> 00:57:18,520
than the reliability of like a loopback

00:57:16,510 --> 00:57:20,800
interface that you're configuring on the

00:57:18,520 --> 00:57:23,320
host so in that case

00:57:20,800 --> 00:57:25,690
although you are not completely reducing

00:57:23,320 --> 00:57:28,660
the complexity of kind of operating

00:57:25,690 --> 00:57:32,220
system like stuff you are kind of

00:57:28,660 --> 00:57:32,220
choosing for a higher reliability

00:57:41,119 --> 00:57:47,609
you are talking about servers but does

00:57:44,789 --> 00:57:50,789
this containerization work in virtual

00:57:47,609 --> 00:57:55,140
machines well for example instead of

00:57:50,789 --> 00:57:57,989
buying servers I would choose Amazon Web

00:57:55,140 --> 00:57:59,789
Services and just buy a couple of

00:57:57,989 --> 00:58:02,430
virtual machines or ya buy from

00:57:59,789 --> 00:58:04,769
breakfast totally yeah so like pen down

00:58:02,430 --> 00:58:06,959
largely runs on Rackspace cloud VMS and

00:58:04,769 --> 00:58:08,640
also some hardware and other stuff and

00:58:06,959 --> 00:58:10,769
that's like the cool thing kind of with

00:58:08,640 --> 00:58:13,079
this example like of systemd on spot

00:58:10,769 --> 00:58:17,849
where I've like OS X and then fedora and

00:58:13,079 --> 00:58:19,499
then this other stuff the kind of by

00:58:17,849 --> 00:58:23,089
definition containers kind of don't

00:58:19,499 --> 00:58:25,890
really care what they're running on and

00:58:23,089 --> 00:58:28,529
you can yeah you can you can do it on it

00:58:25,890 --> 00:58:30,660
on a VM just as easily the one technical

00:58:28,529 --> 00:58:33,119
difference between a VM in a container

00:58:30,660 --> 00:58:34,650
is that in the VM you can actually run

00:58:33,119 --> 00:58:38,729
different kernels because you're

00:58:34,650 --> 00:58:41,579
emulating the processor but but in

00:58:38,729 --> 00:58:44,749
containers you're you have to use

00:58:41,579 --> 00:58:47,549
whatever kernel the host kernel is music

00:58:44,749 --> 00:58:51,380
because you literally are using the host

00:58:47,549 --> 00:58:51,380
you you use the hose Karl

00:58:59,910 --> 00:59:04,380
so the previous question brought up a

00:59:02,319 --> 00:59:06,430
question for me you know there's still

00:59:04,380 --> 00:59:08,019
configuration management with all this

00:59:06,430 --> 00:59:09,519
stuff like with the example that we were

00:59:08,019 --> 00:59:11,230
talking about earlier with two questions

00:59:09,519 --> 00:59:13,720
ago with you know let's say we have a

00:59:11,230 --> 00:59:18,569
you know a Drupal stack and Gen X and

00:59:13,720 --> 00:59:22,259
fpm that is also dependent upon Redis so

00:59:18,569 --> 00:59:26,319
somewhere that container needs to know

00:59:22,259 --> 00:59:30,970
where to go to get its Bettis objects

00:59:26,319 --> 00:59:33,849
from yeah totally and basically how do

00:59:30,970 --> 00:59:35,259
you manage all that yeah so that's a

00:59:33,849 --> 00:59:38,039
great question and I think that's kind

00:59:35,259 --> 00:59:41,079
of what I was alluding to in the core OS

00:59:38,039 --> 00:59:46,900
which is in again starting kind of with

00:59:41,079 --> 00:59:48,730
the virtual file system like we we use

00:59:46,900 --> 00:59:49,900
chef we use a lot of shaphat Pantheon

00:59:48,730 --> 00:59:51,420
right that's like could that

00:59:49,900 --> 00:59:53,950
configuration management is critical

00:59:51,420 --> 00:59:55,809
especially kind of if you're on one of

00:59:53,950 --> 01:00:00,999
the lower if you're on the lower end of

00:59:55,809 --> 01:00:03,069
the kind of spectrum here you're going

01:00:00,999 --> 01:00:05,440
to be probably doing more like hands-on

01:00:03,069 --> 01:00:06,999
configuration management if you're on

01:00:05,440 --> 01:00:11,549
the higher end you're probably doing a

01:00:06,999 --> 01:00:14,170
little less and so I think that's where

01:00:11,549 --> 01:00:16,089
my knowledge stuff like darker and then

01:00:14,170 --> 01:00:18,039
core OS are trying to like basically

01:00:16,089 --> 01:00:20,109
make it so you have to do a lot less of

01:00:18,039 --> 01:00:22,630
like the nitty-gritty kind of like make

01:00:20,109 --> 01:00:24,819
terrset permissions like touch this file

01:00:22,630 --> 01:00:27,249
kind of stuff but depending on where you

01:00:24,819 --> 01:00:29,230
are in the spectrum you definitely need

01:00:27,249 --> 01:00:31,660
figuration management I imagine a little

01:00:29,230 --> 01:00:33,309
less so down the road and then the other

01:00:31,660 --> 01:00:34,989
thing you've got at is I mean you can it

01:00:33,309 --> 01:00:36,460
can fall under invigoration management

01:00:34,989 --> 01:00:38,559
it can also fall under orchestration

01:00:36,460 --> 01:00:40,119
which is even if that Redis thing is

01:00:38,559 --> 01:00:42,999
perfectly configured and you're good to

01:00:40,119 --> 01:00:44,559
go until the app ok until the PHP you

01:00:42,999 --> 01:00:46,359
know knows about that it's not going to

01:00:44,559 --> 01:00:48,369
be able to use it so that's kind of

01:00:46,359 --> 01:00:49,839
another piece which is kind of depending

01:00:48,369 --> 01:00:52,630
on your architecture a different problem

01:00:49,839 --> 01:00:54,130
but notifying you know after you

01:00:52,630 --> 01:00:56,470
provision and it's ready to go

01:00:54,130 --> 01:01:00,420
notifying the PHP then hey here's this

01:00:56,470 --> 01:01:00,420
other resource you can connect you

01:01:01,040 --> 01:01:07,790
yeah do you know off the top of your

01:01:05,270 --> 01:01:10,580
head of any interaction between or

01:01:07,790 --> 01:01:15,500
modules in ansible that work with his

01:01:10,580 --> 01:01:18,340
containers um I I do not

01:01:15,500 --> 01:01:20,390
I think there's I think that's something

01:01:18,340 --> 01:01:22,940
definitely worth looking into

01:01:20,390 --> 01:01:24,470
and I'm like depending on what you're

01:01:22,940 --> 01:01:28,100
using ansible with if you're using it

01:01:24,470 --> 01:01:29,630
with system D which you totally can then

01:01:28,100 --> 01:01:32,000
you can kind of pair those up pretty

01:01:29,630 --> 01:01:34,280
well last question yeah real quick

01:01:32,000 --> 01:01:36,650
speaking of the Raspberry Pi if if you

01:01:34,280 --> 01:01:39,470
have a 32-bit kernel is there any way of

01:01:36,650 --> 01:01:40,610
emulating a 64-bit using container I

01:01:39,470 --> 01:01:43,640
know you can do it the other way around

01:01:40,610 --> 01:01:46,310
oh the other way around yeah I I don't

01:01:43,640 --> 01:01:49,280
know that's not really something that's

01:01:46,310 --> 01:01:52,010
been on my radar but yeah it might just

01:01:49,280 --> 01:01:53,450
be like a down down down sampling kind

01:01:52,010 --> 01:01:56,000
of thing well if anyone wants to Boff

01:01:53,450 --> 01:02:02,870
about it and I'm intrigued but thank you

01:01:56,000 --> 01:02:06,530
very much okay hi it could be possible

01:02:02,870 --> 01:02:07,130
to dynamically assign resources to

01:02:06,530 --> 01:02:12,980
daughter

01:02:07,130 --> 01:02:16,190
for example triggered by number of hits

01:02:12,980 --> 01:02:19,430
for a website without shut down the

01:02:16,190 --> 01:02:21,140
container and yeah I was just buying

01:02:19,430 --> 01:02:22,850
some resources on like the github thing

01:02:21,140 --> 01:02:24,380
and then like Google's kind of a great

01:02:22,850 --> 01:02:26,690
source for this cuz they like are

01:02:24,380 --> 01:02:30,530
definitely doing it at scale and I think

01:02:26,690 --> 01:02:33,290
I can't quite remember but something

01:02:30,530 --> 01:02:35,750
like one writes a second to see groups

01:02:33,290 --> 01:02:39,650
and ten reads a second is what they what

01:02:35,750 --> 01:02:41,960
they were kind of you know saying what's

01:02:39,650 --> 01:02:43,970
happening on their servers so as much as

01:02:41,960 --> 01:02:46,970
once a second you know you could be kind

01:02:43,970 --> 01:02:49,070
of reallocating on CPU shares or

01:02:46,970 --> 01:02:51,650
something I think that probably also

01:02:49,070 --> 01:02:54,590
depends on just the hierarchy you set up

01:02:51,650 --> 01:02:56,870
like how how dynamic you want to be

01:02:54,590 --> 01:03:00,080
changing those our use case the Pantheon

01:02:56,870 --> 01:03:04,730
doesn't really require very dynamic

01:03:00,080 --> 01:03:07,180
Nazi groups thank you yeah all right

01:03:04,730 --> 01:03:07,180

YouTube URL: https://www.youtube.com/watch?v=LcAb-R0FGcY


