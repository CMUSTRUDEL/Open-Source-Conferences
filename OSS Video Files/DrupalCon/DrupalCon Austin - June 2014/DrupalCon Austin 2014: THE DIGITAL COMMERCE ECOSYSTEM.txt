Title: DrupalCon Austin 2014: THE DIGITAL COMMERCE ECOSYSTEM
Publication date: 2014-06-04
Playlist: DrupalCon Austin - June 2014
Description: 
	Speakers: bojanzdwkitchen
Sell a membership.
Sell a support ticket.
Sell an ebook.
Sell a subscription to your new SaaS service.

One time fee? Sure. Recurring? No problem.

All this with Commerce License and related modules.
The most important thing to happen to Drupal Commerce since Kickstart v2, pushing the limits of what Drupal can do. Don't believe us? Come and see.

What you'll learn

What the most common use cases are, and what makes Drupal Commerce uniquely suited to handle them.
How Commerce License is built and how it can be extended for your next project
What the tax implications and complexities are, and how to handle them in the USA, EU, and beyond.
The complexities of recurring billing: Dunning. Prorating. Synchronous and asynchronous, prepaid and postpaid billing. Usage based billing.
Why we're better than Recurly and other open source solutions, and how that helps your company win clients.
This session is oriented towards developers and site builders, but will be comprehensible to people who are simply looking to expand the kinds of projects they can bid on.
Captions: 
	00:00:00,000 --> 00:00:04,440
so hi everyone and welcome to the

00:00:01,979 --> 00:00:06,330
digital commerce ecosystem my name is

00:00:04,440 --> 00:00:10,139
bunch of an edge and this is david

00:00:06,330 --> 00:00:12,240
kitchen so and we don't have a picture

00:00:10,139 --> 00:00:15,630
for David I'm sorry you'll just have to

00:00:12,240 --> 00:00:18,090
take a really good look at him so I'm

00:00:15,630 --> 00:00:20,730
born and I was the lead developer for

00:00:18,090 --> 00:00:23,340
commerce kickstart v2 I've also worked

00:00:20,730 --> 00:00:25,109
on many controls some of them like views

00:00:23,340 --> 00:00:28,230
use bulk operations in the intensity

00:00:25,109 --> 00:00:29,880
form and among others I've worked on

00:00:28,230 --> 00:00:33,120
commerce license and commerce license

00:00:29,880 --> 00:00:35,130
billing which we will be seeing today hi

00:00:33,120 --> 00:00:38,430
I'm David kitchen I'm the technical

00:00:35,130 --> 00:00:39,870
efkin skies in the UK and I've worked on

00:00:38,430 --> 00:00:42,840
a range of our modules as well including

00:00:39,870 --> 00:00:47,430
commerce v8 e-commerce funds and Morris

00:00:42,840 --> 00:00:49,020
knee commerce check out Ajax we work for

00:00:47,430 --> 00:00:51,449
a Commerce guys we are the company

00:00:49,020 --> 00:00:53,910
behind Drupal commerce with about 60

00:00:51,449 --> 00:00:56,730
people in offices in Paris France London

00:00:53,910 --> 00:00:59,340
England and an arbor michigan we provide

00:00:56,730 --> 00:01:00,870
a wide range of services around drupal

00:00:59,340 --> 00:01:03,420
commerce including consulting and

00:01:00,870 --> 00:01:07,430
support and since recently a new cloud

00:01:03,420 --> 00:01:10,619
hosting platform called platform dot sh

00:01:07,430 --> 00:01:12,240
so what is digital commerce this really

00:01:10,619 --> 00:01:14,700
covers anything that's not a physical

00:01:12,240 --> 00:01:16,140
product something as a service or a

00:01:14,700 --> 00:01:18,360
product that's delivered electronically

00:01:16,140 --> 00:01:20,520
so this could be downloads like ebooks

00:01:18,360 --> 00:01:21,950
or some premium content that you're

00:01:20,520 --> 00:01:24,990
giving access to and your website's

00:01:21,950 --> 00:01:28,250
support services or some subscription to

00:01:24,990 --> 00:01:31,890
a product or service on your website

00:01:28,250 --> 00:01:34,770
this could be one time or recurring so

00:01:31,890 --> 00:01:36,509
we first had this use case while we were

00:01:34,770 --> 00:01:39,270
developing the Commerce guys marketplace

00:01:36,509 --> 00:01:42,030
we had we had a wide range of partners

00:01:39,270 --> 00:01:45,210
such as PayPal and pay meal and hosted

00:01:42,030 --> 00:01:48,119
pci and many others and the idea was to

00:01:45,210 --> 00:01:50,250
allow people to check out a product for

00:01:48,119 --> 00:01:52,140
for example paypal and then at the end

00:01:50,250 --> 00:01:54,149
of checkout provision the account for

00:01:52,140 --> 00:01:56,329
them and then show the credential so

00:01:54,149 --> 00:01:59,640
that they can enter that in their

00:01:56,329 --> 00:02:01,439
payment module configuration and we

00:01:59,640 --> 00:02:05,490
quickly realized that the workflow is

00:02:01,439 --> 00:02:09,090
the same for each one so we need some

00:02:05,490 --> 00:02:10,979
kind of an entity that shows the what we

00:02:09,090 --> 00:02:13,770
just created it needs to store the

00:02:10,979 --> 00:02:16,500
credentials and also each of the partner

00:02:13,770 --> 00:02:17,790
sometimes had additional requirements

00:02:16,500 --> 00:02:20,610
for additional information to be

00:02:17,790 --> 00:02:22,770
gathered during checkout so you we would

00:02:20,610 --> 00:02:25,110
need to ask for example for the users

00:02:22,770 --> 00:02:26,790
address or email or any kind of question

00:02:25,110 --> 00:02:28,680
we would store that and then when

00:02:26,790 --> 00:02:30,510
provisioning the account we would send

00:02:28,680 --> 00:02:32,250
that information once we got the

00:02:30,510 --> 00:02:35,010
credentials we would store all that on

00:02:32,250 --> 00:02:37,680
the entity so that was our first use

00:02:35,010 --> 00:02:40,050
case as you can see it makes sense to

00:02:37,680 --> 00:02:42,420
have some kind of a bundle for each of

00:02:40,050 --> 00:02:45,090
the partners and to have some kind of

00:02:42,420 --> 00:02:48,720
synchronization code for each of those

00:02:45,090 --> 00:02:51,180
partners but the concept is the same and

00:02:48,720 --> 00:02:53,910
then we started selling support tickets

00:02:51,180 --> 00:02:56,280
and the idea here is that you would go

00:02:53,910 --> 00:02:57,990
to our turbo tickets page and you would

00:02:56,280 --> 00:02:59,580
enter what's bothering you so you would

00:02:57,990 --> 00:03:01,770
provide a title and a body you would

00:02:59,580 --> 00:03:04,680
have the product to cart and when you

00:03:01,770 --> 00:03:07,860
checked out and paid us $99 we would

00:03:04,680 --> 00:03:11,070
create the ticket on hours and ask

00:03:07,860 --> 00:03:13,320
system save the ID and then show you the

00:03:11,070 --> 00:03:15,690
link so you can follow along as our

00:03:13,320 --> 00:03:17,880
support people help you go through your

00:03:15,690 --> 00:03:20,400
problem so once again we gather

00:03:17,880 --> 00:03:23,520
information at the beginning at the end

00:03:20,400 --> 00:03:25,410
we provision something and we save the

00:03:23,520 --> 00:03:28,500
return information so we can show it to

00:03:25,410 --> 00:03:34,320
you later on in an email or in your user

00:03:28,500 --> 00:03:38,400
pages and then we start to do in cloud

00:03:34,320 --> 00:03:40,470
hosting and that has a similar flow if

00:03:38,400 --> 00:03:42,540
you want to have your own commerce

00:03:40,470 --> 00:03:44,850
platform you would start check out check

00:03:42,540 --> 00:03:46,680
the zone where you would want the

00:03:44,850 --> 00:03:48,630
platform to be provisioned for instance

00:03:46,680 --> 00:03:50,340
Europe and then at the end of check out

00:03:48,630 --> 00:03:53,400
we would create your commerce platform

00:03:50,340 --> 00:03:55,650
in the cloud and you would get a link so

00:03:53,400 --> 00:03:57,390
you can access that later on you're able

00:03:55,650 --> 00:03:59,160
to see all of your platforms that you

00:03:57,390 --> 00:04:02,130
have so a platform for each of your

00:03:59,160 --> 00:04:04,709
sites and at the end of each month we

00:04:02,130 --> 00:04:06,810
would charge you for that platform so in

00:04:04,709 --> 00:04:08,640
this case it's no longer a one-time

00:04:06,810 --> 00:04:10,530
thing we are actually going to charge

00:04:08,640 --> 00:04:14,370
you every month of course which is the

00:04:10,530 --> 00:04:16,320
recurring this case so the question is

00:04:14,370 --> 00:04:18,359
how do we track all this in Drupal and

00:04:16,320 --> 00:04:20,190
drupal commerce and we need something

00:04:18,359 --> 00:04:21,870
that's going to be the resource that

00:04:20,190 --> 00:04:24,870
we're subscribing to or buying or

00:04:21,870 --> 00:04:28,640
selling to the user so what we needed

00:04:24,870 --> 00:04:28,640
was a new entity to provide this

00:04:28,789 --> 00:04:33,509
so we work from our line item that we

00:04:31,770 --> 00:04:35,180
create in our original check out and as

00:04:33,509 --> 00:04:37,500
we add a product that's got the

00:04:35,180 --> 00:04:39,419
subscription or service to we create a

00:04:37,500 --> 00:04:41,610
license and this is the entity storing

00:04:39,419 --> 00:04:43,169
all of our information and this refers

00:04:41,610 --> 00:04:45,419
to the original products that was added

00:04:43,169 --> 00:04:47,970
to the cart and the user that has access

00:04:45,419 --> 00:04:50,069
to the license the license then has all

00:04:47,970 --> 00:04:53,190
of the field information so we can add

00:04:50,069 --> 00:04:55,830
fields just a field with entity to refer

00:04:53,190 --> 00:04:58,259
to the product that's been sold on the

00:04:55,830 --> 00:05:00,990
third party service or what access level

00:04:58,259 --> 00:05:04,710
they've got what their API key is or any

00:05:00,990 --> 00:05:06,690
port information for their license so

00:05:04,710 --> 00:05:08,789
here comes an interesting detail we use

00:05:06,690 --> 00:05:10,800
a module called entity bundle plug-in

00:05:08,789 --> 00:05:13,199
which we developed for a client named

00:05:10,800 --> 00:05:16,050
Cartier back in the day and what it

00:05:13,199 --> 00:05:19,020
allows us to do is to have a different

00:05:16,050 --> 00:05:21,180
entity class for each entity bundle so

00:05:19,020 --> 00:05:23,520
let's take nodes as an example you would

00:05:21,180 --> 00:05:26,669
you have multiple node types for example

00:05:23,520 --> 00:05:30,090
a blog post and the page in this case a

00:05:26,669 --> 00:05:32,310
blog would be an instance of one class

00:05:30,090 --> 00:05:34,440
but the page would be an instance of

00:05:32,310 --> 00:05:35,909
another class this is great because it

00:05:34,440 --> 00:05:38,970
allows both of them to implement the

00:05:35,909 --> 00:05:41,370
same interface and to have the same

00:05:38,970 --> 00:05:43,590
methods but of course different code in

00:05:41,370 --> 00:05:45,630
those methods so you can see how that's

00:05:43,590 --> 00:05:47,880
useful in the Commerce example because

00:05:45,630 --> 00:05:50,190
if we ask for the excess details meaning

00:05:47,880 --> 00:05:53,909
tell the user how to access the thing

00:05:50,190 --> 00:05:56,550
that he just bought a file license type

00:05:53,909 --> 00:05:58,770
can provide the link to the file so for

00:05:56,550 --> 00:06:01,229
example the link to the e-book that was

00:05:58,770 --> 00:06:03,180
just purchased but the platform license

00:06:01,229 --> 00:06:06,240
type can provide a link to the platform

00:06:03,180 --> 00:06:08,729
that was just provisions to him and this

00:06:06,240 --> 00:06:10,800
also allows us to have an easy way to

00:06:08,729 --> 00:06:13,820
create fields that are specific to those

00:06:10,800 --> 00:06:16,380
bundles to those license types we have

00:06:13,820 --> 00:06:18,180
fields function that returns the field

00:06:16,380 --> 00:06:20,250
definitions and then ste bundle plug-in

00:06:18,180 --> 00:06:22,560
make sure to create and maintain those

00:06:20,250 --> 00:06:25,050
fields it's called entity bundle plugin

00:06:22,560 --> 00:06:27,719
because we use c tools plugins to

00:06:25,050 --> 00:06:30,360
discover those classes and it's a pretty

00:06:27,719 --> 00:06:34,320
common way of doing this kind of a thing

00:06:30,360 --> 00:06:36,570
in triple seven and now you know what

00:06:34,320 --> 00:06:38,729
we've built we've built commerce license

00:06:36,570 --> 00:06:40,770
commerce license is that framework for

00:06:38,729 --> 00:06:42,990
selling access to local or are

00:06:40,770 --> 00:06:46,110
mode resource that's represented by a

00:06:42,990 --> 00:06:47,940
product and it provides the license

00:06:46,110 --> 00:06:51,060
entity type which can have multiple

00:06:47,940 --> 00:06:53,580
bundles depending on what you're selling

00:06:51,060 --> 00:06:56,000
and there's the API for activating a

00:06:53,580 --> 00:06:58,139
license expiring or revoking it and

00:06:56,000 --> 00:07:00,090
everything around this that needs to

00:06:58,139 --> 00:07:04,680
happen in the checkout flow and

00:07:00,090 --> 00:07:08,400
afterwards a license can be time limited

00:07:04,680 --> 00:07:11,639
so when I create the product for what

00:07:08,400 --> 00:07:13,949
I'm selling I can say that it's valid

00:07:11,639 --> 00:07:17,310
for only a specific amount of days or

00:07:13,949 --> 00:07:20,610
only one month so if I sold you an

00:07:17,310 --> 00:07:22,919
e-book the access can be revoked after a

00:07:20,610 --> 00:07:24,900
month or whenever and that is

00:07:22,919 --> 00:07:28,919
automatically expired by cron of course

00:07:24,900 --> 00:07:31,259
a license can be configurable which

00:07:28,919 --> 00:07:35,190
means that it has some fields that the

00:07:31,259 --> 00:07:37,409
user must enter before checkout is

00:07:35,190 --> 00:07:39,930
complete and we provide two ways to do

00:07:37,409 --> 00:07:42,240
that either you will eat install in line

00:07:39,930 --> 00:07:43,800
entity form and get those fields on the

00:07:42,240 --> 00:07:46,229
edge two cars form so you can see the

00:07:43,800 --> 00:07:48,270
turbo ticket example where we ask for

00:07:46,229 --> 00:07:49,979
the title and the phone number in the

00:07:48,270 --> 00:07:51,599
description on the SD card form what

00:07:49,979 --> 00:07:53,669
you're doing here is actually editing

00:07:51,599 --> 00:07:57,509
the license which has been created at

00:07:53,669 --> 00:08:00,120
that moment or we provide check out pain

00:07:57,509 --> 00:08:02,810
that does the same thing in the middle

00:08:00,120 --> 00:08:05,819
of check out so it's your choice and

00:08:02,810 --> 00:08:07,800
this allows us to gather the information

00:08:05,819 --> 00:08:09,750
that we need so I will ask for the

00:08:07,800 --> 00:08:12,650
ticket information or I will ask for the

00:08:09,750 --> 00:08:17,690
platform location and anything else that

00:08:12,650 --> 00:08:20,310
business dictates and a license can be

00:08:17,690 --> 00:08:22,529
synchronize about which means that as

00:08:20,310 --> 00:08:24,840
the end of check out it needs to

00:08:22,529 --> 00:08:29,029
provision an account or contact a remote

00:08:24,840 --> 00:08:31,800
service so once I finished check out the

00:08:29,029 --> 00:08:33,539
synchronization is cute it's added to a

00:08:31,800 --> 00:08:35,750
queue and we have ad rush worker that

00:08:33,539 --> 00:08:38,430
processes the license is one by one

00:08:35,750 --> 00:08:40,950
calling the synchronized methods on the

00:08:38,430 --> 00:08:42,870
license so at that point the license

00:08:40,950 --> 00:08:44,579
contacts the remote service creates the

00:08:42,870 --> 00:08:47,670
account and then stores the returns

00:08:44,579 --> 00:08:51,180
credentials or IDs to be able to show it

00:08:47,670 --> 00:08:52,800
to the user now at checkout complete we

00:08:51,180 --> 00:08:54,620
have this special check out pain that

00:08:52,800 --> 00:08:56,900
keeps refreshing the license

00:08:54,620 --> 00:09:00,200
until the queue gets processed so the

00:08:56,900 --> 00:09:03,080
user sees loading screen saying we are

00:09:00,200 --> 00:09:05,150
provisioning your product and as soon as

00:09:03,080 --> 00:09:06,890
that's complete that is replaced with

00:09:05,150 --> 00:09:09,470
the actual credentials so the user can

00:09:06,890 --> 00:09:11,630
see click here to access your platform

00:09:09,470 --> 00:09:14,510
or we've created your support it could

00:09:11,630 --> 00:09:16,430
go here to see it or anything else that

00:09:14,510 --> 00:09:18,620
needs to happen and we also support

00:09:16,430 --> 00:09:20,930
automatically retry functionality so if

00:09:18,620 --> 00:09:23,240
by any chance to the remote service is

00:09:20,930 --> 00:09:25,730
temporarily unavailable we will tell the

00:09:23,240 --> 00:09:27,650
user that provisioning will happen later

00:09:25,730 --> 00:09:29,900
and that he will be contacted and we

00:09:27,650 --> 00:09:34,660
will continue to retry in the background

00:09:29,900 --> 00:09:34,660
and this is all done completely for you

00:09:34,690 --> 00:09:39,760
so we have three example modules built

00:09:37,700 --> 00:09:43,940
in that you can use for different

00:09:39,760 --> 00:09:46,490
license use cases in Drupal the first is

00:09:43,940 --> 00:09:48,410
Commons license roll this use case would

00:09:46,490 --> 00:09:51,290
be the premium membership where you're

00:09:48,410 --> 00:09:53,450
giving access to a role and then

00:09:51,290 --> 00:09:55,010
configuring that role around different

00:09:53,450 --> 00:09:57,560
levels of access using something like

00:09:55,010 --> 00:10:01,130
node access or row level access field

00:09:57,560 --> 00:10:03,500
access already existing in Drupal as you

00:10:01,130 --> 00:10:06,380
create a product you can associate this

00:10:03,500 --> 00:10:09,080
with a particular role and whether the

00:10:06,380 --> 00:10:14,060
access is limited or unlimited for

00:10:09,080 --> 00:10:17,990
length periods and how it renews we also

00:10:14,060 --> 00:10:20,330
have commerce file this is for the

00:10:17,990 --> 00:10:23,510
download case so you're providing access

00:10:20,330 --> 00:10:27,350
to files this could be a ebooks music

00:10:23,510 --> 00:10:29,390
videos the product again created has a

00:10:27,350 --> 00:10:33,260
file field you can upload multiple files

00:10:29,390 --> 00:10:35,900
to that product files can be updated

00:10:33,260 --> 00:10:37,790
after the customers purchase the product

00:10:35,900 --> 00:10:40,880
and they'll get access to those new

00:10:37,790 --> 00:10:43,040
files as they go online through the

00:10:40,880 --> 00:10:44,480
checkout process as they come to the end

00:10:43,040 --> 00:10:46,010
of the check out in that license

00:10:44,480 --> 00:10:48,350
information they get their products to

00:10:46,010 --> 00:10:51,650
download straight away or they can come

00:10:48,350 --> 00:10:54,380
back to their file download page on my

00:10:51,650 --> 00:10:57,350
account and the detail that I really

00:10:54,380 --> 00:10:59,390
like is that the checkout confirmation

00:10:57,350 --> 00:11:01,130
thing works even if you're in anonymous

00:10:59,390 --> 00:11:02,810
check out so even if I'm not logged in

00:11:01,130 --> 00:11:04,850
when a complete checkout I will be able

00:11:02,810 --> 00:11:08,300
to download the files that I've seen and

00:11:04,850 --> 00:11:09,560
of course the downloads can be

00:11:08,300 --> 00:11:14,150
mitted in case we want to preserve

00:11:09,560 --> 00:11:16,550
bandwidth if we go yeah so if we're

00:11:14,150 --> 00:11:19,100
providing a streaming service we can do

00:11:16,550 --> 00:11:22,220
this with the display formatter using

00:11:19,100 --> 00:11:24,320
something like media j/s to format the

00:11:22,220 --> 00:11:29,660
music file into something that you can

00:11:24,320 --> 00:11:34,370
play or you can also use because next

00:11:29,660 --> 00:11:36,500
one full integration with Amazon s3 for

00:11:34,370 --> 00:11:38,030
storing the files off sites if you've

00:11:36,500 --> 00:11:42,050
got very large files you want to keep

00:11:38,030 --> 00:11:45,230
those off your server you can store them

00:11:42,050 --> 00:11:47,660
here and reference them and the

00:11:45,230 --> 00:11:50,690
Downloads is provided through a one use

00:11:47,660 --> 00:11:53,660
one time link which is going to preserve

00:11:50,690 --> 00:11:55,820
our downloads limits as well so that

00:11:53,660 --> 00:11:57,700
allows you to track and restrict access

00:11:55,820 --> 00:12:00,320
making sure that only those with the

00:11:57,700 --> 00:12:04,550
license to access file actually can get

00:12:00,320 --> 00:12:07,670
to it our final use case is commerce

00:12:04,550 --> 00:12:10,370
license node this is for giving

00:12:07,670 --> 00:12:12,530
permission to create content so this

00:12:10,370 --> 00:12:14,900
example use case might be a classified

00:12:12,530 --> 00:12:17,650
ads website where you want to license

00:12:14,900 --> 00:12:20,600
the permission to create a single or

00:12:17,650 --> 00:12:23,360
nodes that leaves the advert and give

00:12:20,600 --> 00:12:24,830
that a limited life or charge and a

00:12:23,360 --> 00:12:28,790
regular basis for how long the user

00:12:24,830 --> 00:12:30,800
wants to keep that advert active so

00:12:28,790 --> 00:12:33,440
we've seen how we can use commerce

00:12:30,800 --> 00:12:36,380
license to implement many kinds of

00:12:33,440 --> 00:12:39,080
e-commerce use cases so we are able to

00:12:36,380 --> 00:12:42,950
implement premium membership or we can

00:12:39,080 --> 00:12:46,250
implement a download site or we can

00:12:42,950 --> 00:12:48,620
implement a classified site and so far

00:12:46,250 --> 00:12:51,890
we were assumed that this is a one-time

00:12:48,620 --> 00:12:55,160
purchase the user pays and he gets his

00:12:51,890 --> 00:12:57,920
access and possibly once that axis is

00:12:55,160 --> 00:13:00,890
done he can pay again to get some more

00:12:57,920 --> 00:13:02,870
but of course we want to keep getting

00:13:00,890 --> 00:13:05,810
the money out of the user so we wants to

00:13:02,870 --> 00:13:07,820
have recurring billing and we want to be

00:13:05,810 --> 00:13:10,820
able to charge the user for those

00:13:07,820 --> 00:13:13,430
licenses every once in a while so how

00:13:10,820 --> 00:13:16,130
does recurring work in Drupal in general

00:13:13,430 --> 00:13:18,740
well to start with you needs to have a

00:13:16,130 --> 00:13:20,900
payment module that implements card and

00:13:18,740 --> 00:13:22,160
file support and commerce card on file

00:13:20,900 --> 00:13:25,399
is a module that provides

00:13:22,160 --> 00:13:27,980
an API for the tokenization services

00:13:25,399 --> 00:13:30,110
that the payment gateways offer so many

00:13:27,980 --> 00:13:33,639
payment gateways like stripe like

00:13:30,110 --> 00:13:38,029
Braintree like pay mail authorize.net

00:13:33,639 --> 00:13:39,740
allow to store the card so once you pay

00:13:38,029 --> 00:13:42,769
on their servers they will store your

00:13:39,740 --> 00:13:45,019
card and they will send us a token that

00:13:42,769 --> 00:13:46,959
represents that card and then we can use

00:13:45,019 --> 00:13:50,149
that token to make further purchases

00:13:46,959 --> 00:13:51,970
instead of asking you for your cart of

00:13:50,149 --> 00:13:54,920
course it also sends additional

00:13:51,970 --> 00:13:57,500
identifying information so that is safe

00:13:54,920 --> 00:13:59,689
to store we get the last four digits of

00:13:57,500 --> 00:14:01,730
the cards we get the card holders name

00:13:59,689 --> 00:14:04,639
and expiration and we can show this

00:14:01,730 --> 00:14:07,910
information so that the customer is able

00:14:04,639 --> 00:14:11,480
to identify the cars that is being used

00:14:07,910 --> 00:14:14,089
and research shows that more than fifty

00:14:11,480 --> 00:14:17,420
percent of ecommerce sites globally use

00:14:14,089 --> 00:14:20,839
a feature like this because it makes

00:14:17,420 --> 00:14:23,329
check out much faster and therefore much

00:14:20,839 --> 00:14:25,100
more likely to complete the user doesn't

00:14:23,329 --> 00:14:28,490
need to reenter his cars you can just

00:14:25,100 --> 00:14:30,589
click and go ahead so card on file

00:14:28,490 --> 00:14:32,899
provides an entity type that stores that

00:14:30,589 --> 00:14:36,199
safe information as well as an API that

00:14:32,899 --> 00:14:39,319
can be used to charge a cart and it

00:14:36,199 --> 00:14:42,649
knows how to distinguish between a heart

00:14:39,319 --> 00:14:45,170
and a soft decline so a soft decline is

00:14:42,649 --> 00:14:46,519
when you've reached the daily limit on

00:14:45,170 --> 00:14:48,620
your car the meaning that we should

00:14:46,519 --> 00:14:50,300
probably be able to retry soon but the

00:14:48,620 --> 00:14:52,910
hardik line means that your card is

00:14:50,300 --> 00:14:55,970
effectively dead either revoked or

00:14:52,910 --> 00:14:58,970
expired and cannot be used at all for

00:14:55,970 --> 00:15:01,759
further purchases and you do know that

00:14:58,970 --> 00:15:04,069
many of the payment solutions actually

00:15:01,759 --> 00:15:08,180
offer some kind of a recurring API and

00:15:04,069 --> 00:15:14,089
our goal is to avoid it at all costs

00:15:08,180 --> 00:15:18,709
because they are the features that they

00:15:14,089 --> 00:15:21,949
offer are spotty and they can often not

00:15:18,709 --> 00:15:24,379
offer metered billing and all of those

00:15:21,949 --> 00:15:27,170
advanced use cases so by avoiding that

00:15:24,379 --> 00:15:30,559
API by just using the tokenization every

00:15:27,170 --> 00:15:33,380
decision is on us and our code does all

00:15:30,559 --> 00:15:35,750
the work allowing you to offer allowing

00:15:33,380 --> 00:15:38,420
us to offer you a consistent experience

00:15:35,750 --> 00:15:41,630
and a consistent users at and feature

00:15:38,420 --> 00:15:44,210
set across all of the options that we

00:15:41,630 --> 00:15:47,270
have so tomorrow you can change from

00:15:44,210 --> 00:15:49,880
authorize that authorize.net to pay meal

00:15:47,270 --> 00:15:54,320
and we will still offer the same

00:15:49,880 --> 00:15:56,810
features which is really convenient and

00:15:54,320 --> 00:16:04,190
so unfortunately all of my images i

00:15:56,810 --> 00:16:06,140
padded aren't going to work this and can

00:16:04,190 --> 00:16:08,870
you switch to it locally rather than

00:16:06,140 --> 00:16:11,540
from yeah that's not good otherwise all

00:16:08,870 --> 00:16:14,330
of the images are going to work yeah so

00:16:11,540 --> 00:16:17,660
what we want to talk about is physical

00:16:14,330 --> 00:16:19,580
subscriptions first so this use case

00:16:17,660 --> 00:16:20,570
with the example of someone ordering

00:16:19,580 --> 00:16:23,210
something that they're going to get

00:16:20,570 --> 00:16:25,760
delivered regularly to them you buy it

00:16:23,210 --> 00:16:28,460
the first time and check out you pay and

00:16:25,760 --> 00:16:29,750
it gets shipped to you and then you have

00:16:28,460 --> 00:16:31,850
picked to get that delivered to you

00:16:29,750 --> 00:16:33,230
every month every month after that on

00:16:31,850 --> 00:16:35,270
the same date you're going to get the

00:16:33,230 --> 00:16:36,920
item is recurred you're going to get

00:16:35,270 --> 00:16:40,040
billed for it and then it's going to get

00:16:36,920 --> 00:16:43,310
shipped to you in this case example

00:16:40,040 --> 00:16:46,370
we're talking about prepay billing that

00:16:43,310 --> 00:16:51,110
is where the payment is taken before the

00:16:46,370 --> 00:16:54,160
services provided and the important use

00:16:51,110 --> 00:16:56,660
case here is also a synchronous

00:16:54,160 --> 00:16:58,250
subscriptions that is that the

00:16:56,660 --> 00:17:00,740
subscription takes place on the same day

00:16:58,250 --> 00:17:04,339
of every month based on the user's

00:17:00,740 --> 00:17:07,280
choice of when they subscribe and this

00:17:04,339 --> 00:17:10,540
is where commerce recurring was

00:17:07,280 --> 00:17:13,189
developed so commerce recurring is a UK

00:17:10,540 --> 00:17:16,610
developments it's ideal for the physical

00:17:13,189 --> 00:17:21,319
subscription producing new orders every

00:17:16,610 --> 00:17:22,730
month in an asynchronous process but

00:17:21,319 --> 00:17:25,069
when you look at the digital

00:17:22,730 --> 00:17:27,439
subscriptions you will realize that it's

00:17:25,069 --> 00:17:30,290
quite different so take a look for

00:17:27,439 --> 00:17:32,420
example at your mobile subscription your

00:17:30,290 --> 00:17:35,030
mobile plan so the first thing that we

00:17:32,420 --> 00:17:40,310
notice is that there's we have a concept

00:17:35,030 --> 00:17:42,530
of a plan we have two plans or possibly

00:17:40,310 --> 00:17:45,620
more and we are able to switch from them

00:17:42,530 --> 00:17:48,030
when desired also there is metered

00:17:45,620 --> 00:17:51,150
billing which means that I have some

00:17:48,030 --> 00:17:54,210
the usage that is given to me in my plan

00:17:51,150 --> 00:17:57,660
and if I use more than that I'm charge

00:17:54,210 --> 00:18:00,090
some kind of a fee per unit so if I got

00:17:57,660 --> 00:18:02,160
a thousand messages to send in my plan

00:18:00,090 --> 00:18:04,530
but I sense two thousand and the others

00:18:02,160 --> 00:18:08,430
thousand will be charged using what is

00:18:04,530 --> 00:18:11,850
called the overage fee so we have plans

00:18:08,430 --> 00:18:15,390
and we have usage additionally no matter

00:18:11,850 --> 00:18:17,670
when I subscribe I'm always charged on

00:18:15,390 --> 00:18:20,430
the first of the month and this is

00:18:17,670 --> 00:18:23,220
called the synchronous billing cycle

00:18:20,430 --> 00:18:25,650
because no matter when you subscribe we

00:18:23,220 --> 00:18:28,620
will always bill you on the same day and

00:18:25,650 --> 00:18:30,410
this is something that digital

00:18:28,620 --> 00:18:34,530
subscriptions usually follow

00:18:30,410 --> 00:18:36,450
additionally if you subscribed in the

00:18:34,530 --> 00:18:39,510
middle of the previous month for example

00:18:36,450 --> 00:18:41,550
that means that you've had the service

00:18:39,510 --> 00:18:43,950
only for half of the month you will only

00:18:41,550 --> 00:18:47,610
pay half of the plant price and this is

00:18:43,950 --> 00:18:49,560
called prorating you also notice that we

00:18:47,610 --> 00:18:52,230
are not paying for next month's we are

00:18:49,560 --> 00:18:56,780
paying for the previous month and this

00:18:52,230 --> 00:18:59,700
is called post billing post-payment and

00:18:56,780 --> 00:19:01,230
this is important whenever you have any

00:18:59,700 --> 00:19:04,500
kind of metered building of course

00:19:01,230 --> 00:19:06,660
because if you're doing prepayment then

00:19:04,500 --> 00:19:08,910
you wouldn't you won't be able to know

00:19:06,660 --> 00:19:11,310
how much the user will actually spend

00:19:08,910 --> 00:19:13,740
and owe you and when you look at any

00:19:11,310 --> 00:19:16,110
kind of a SAS product you will see that

00:19:13,740 --> 00:19:18,750
they follow the exact same models they

00:19:16,110 --> 00:19:21,330
have multiple plans they always have

00:19:18,750 --> 00:19:23,730
some kind of usage that is included in

00:19:21,330 --> 00:19:26,070
those plans and you are able to switch

00:19:23,730 --> 00:19:27,930
the plans as needed you're built on the

00:19:26,070 --> 00:19:30,300
first of the month for the previous

00:19:27,930 --> 00:19:33,090
month and you can cancel at any time and

00:19:30,300 --> 00:19:35,700
when we looked at commerce recurring it

00:19:33,090 --> 00:19:38,970
was pretty clear that it was optimized

00:19:35,700 --> 00:19:41,130
for physical recurring and that it could

00:19:38,970 --> 00:19:43,050
not be used for this case because it is

00:19:41,130 --> 00:19:46,130
the exact exact opposite so it's

00:19:43,050 --> 00:19:49,350
synchronous instead of a synchronous is

00:19:46,130 --> 00:19:51,840
post-paid instead of prepaid and so on

00:19:49,350 --> 00:19:54,120
and this is why we developed commerce

00:19:51,840 --> 00:19:56,940
license billing and commerce license

00:19:54,120 --> 00:19:59,670
building is our answer to this problem

00:19:56,940 --> 00:20:01,410
it's specifically deals only with

00:19:59,670 --> 00:20:03,390
charging for the licenses

00:20:01,410 --> 00:20:05,580
you have some kind of a billing cycle at

00:20:03,390 --> 00:20:07,980
the end of that billing cycle we get all

00:20:05,580 --> 00:20:11,100
of your active licenses for your premium

00:20:07,980 --> 00:20:13,470
membership or your platform account and

00:20:11,100 --> 00:20:15,570
we charge for that we calculate the

00:20:13,470 --> 00:20:18,690
usage in the cost of that we charge for

00:20:15,570 --> 00:20:21,420
that as well and our goal is to support

00:20:18,690 --> 00:20:23,700
any kind of a payment plan so no matter

00:20:21,420 --> 00:20:26,550
what your CFO tells you it should be

00:20:23,700 --> 00:20:28,800
possible to click a few checkboxes and

00:20:26,550 --> 00:20:31,710
radio buttons and have the module do the

00:20:28,800 --> 00:20:34,590
rest handle all of the hard part's in a

00:20:31,710 --> 00:20:39,270
way that's easy to use and completely

00:20:34,590 --> 00:20:41,400
covered by tests so the first important

00:20:39,270 --> 00:20:43,980
feature that we have of course is plants

00:20:41,400 --> 00:20:46,890
a plan is just a product so you can

00:20:43,980 --> 00:20:48,750
easily track which plans are being used

00:20:46,890 --> 00:20:51,180
at the moment you will remember that

00:20:48,750 --> 00:20:53,370
each license references the current

00:20:51,180 --> 00:20:55,710
product which means it's references its

00:20:53,370 --> 00:20:57,470
current plan and we can change the

00:20:55,710 --> 00:21:00,360
product of the license therefore

00:20:57,470 --> 00:21:02,850
changing the plan prorating works in

00:21:00,360 --> 00:21:05,100
this case so if in the middle of the

00:21:02,850 --> 00:21:08,940
month I switch from a sixty-dollar

00:21:05,100 --> 00:21:11,640
product to a eighty dollar product or

00:21:08,940 --> 00:21:13,800
eight dollar plan then I will pay half

00:21:11,640 --> 00:21:16,140
of the first one the thirty dollars and

00:21:13,800 --> 00:21:20,040
I will pay half of the second one the

00:21:16,140 --> 00:21:22,230
forty dollars and if I want to as an

00:21:20,040 --> 00:21:25,470
admin I can configure to postpone the

00:21:22,230 --> 00:21:29,100
license changes so this is usually how

00:21:25,470 --> 00:21:31,830
your mobile plans work if you require if

00:21:29,100 --> 00:21:33,660
you request a change of a plan or even a

00:21:31,830 --> 00:21:35,820
cancellation that will only happen at

00:21:33,660 --> 00:21:42,240
the end of the billing cycle therefore

00:21:35,820 --> 00:21:45,210
avoiding the pro rating we also support

00:21:42,240 --> 00:21:46,890
metered billing and by default we

00:21:45,210 --> 00:21:49,470
supports two different kinds of meat

00:21:46,890 --> 00:21:53,430
rebilling and those are counters and

00:21:49,470 --> 00:21:56,240
gauges a counter is always charged in

00:21:53,430 --> 00:21:59,580
total so a good example of that is

00:21:56,240 --> 00:22:02,040
bandwidth for example so as you continue

00:21:59,580 --> 00:22:04,830
to use a subscription you keep using up

00:22:02,040 --> 00:22:07,080
bandwidth or sending emails and at the

00:22:04,830 --> 00:22:11,610
end of the month all of your usage is

00:22:07,080 --> 00:22:15,180
told the free usage is deducted and the

00:22:11,610 --> 00:22:18,300
rest is price to get one line item for

00:22:15,180 --> 00:22:21,600
or the usage for and for the resources

00:22:18,300 --> 00:22:26,690
that you can zoom now the second variety

00:22:21,600 --> 00:22:29,400
is a gauge and a gauge tracks the

00:22:26,690 --> 00:22:32,190
distinct values over time so let's

00:22:29,400 --> 00:22:34,320
imagine that you had in a hosting

00:22:32,190 --> 00:22:38,970
company development environments or

00:22:34,320 --> 00:22:40,740
servers so if I used to have and use to

00:22:38,970 --> 00:22:42,810
development environments and then I

00:22:40,740 --> 00:22:44,850
switched to having three development

00:22:42,810 --> 00:22:47,610
environments the system cannot just

00:22:44,850 --> 00:22:50,370
charge me for five that would be kinda

00:22:47,610 --> 00:22:52,830
awkward instead we would prorate the

00:22:50,370 --> 00:22:54,660
price for the two environments depending

00:22:52,830 --> 00:22:57,000
on how long it was used and then we

00:22:54,660 --> 00:22:59,790
would prorate the price of the three

00:22:57,000 --> 00:23:02,220
environments and I would always get a

00:22:59,790 --> 00:23:04,740
line item for each of those I would get

00:23:02,220 --> 00:23:07,380
a line item saying you used two

00:23:04,740 --> 00:23:11,130
environments from this date to this date

00:23:07,380 --> 00:23:12,570
and a line item saying you use three

00:23:11,130 --> 00:23:16,950
environments from these days to this

00:23:12,570 --> 00:23:18,750
date and if I used the free quantity for

00:23:16,950 --> 00:23:20,220
a while so for example let's say that

00:23:18,750 --> 00:23:21,870
two environments were included in my

00:23:20,220 --> 00:23:25,050
plan then of course that's not priced

00:23:21,870 --> 00:23:27,870
and that line item is not added and the

00:23:25,050 --> 00:23:30,660
good news is that these two are provided

00:23:27,870 --> 00:23:33,270
by plugins so you can easily provide

00:23:30,660 --> 00:23:35,040
your own plugin that overrides one of

00:23:33,270 --> 00:23:37,200
these or does something completely new

00:23:35,040 --> 00:23:39,810
and the plugin is the one that controls

00:23:37,200 --> 00:23:42,060
both the counting and the pricing so if

00:23:39,810 --> 00:23:44,550
you need any kind of custom pricing

00:23:42,060 --> 00:23:50,130
logic that is very easy to implement and

00:23:44,550 --> 00:23:52,950
plug plug into the system of course we

00:23:50,130 --> 00:23:56,640
support both prepayment and post payment

00:23:52,950 --> 00:23:59,340
and in the case of post payment of

00:23:56,640 --> 00:24:01,830
course the flow is that the first check

00:23:59,340 --> 00:24:03,330
out is free why because you will pay at

00:24:01,830 --> 00:24:05,430
the end of the month so you went for

00:24:03,330 --> 00:24:07,740
check out you just inputted your credit

00:24:05,430 --> 00:24:10,770
card so it can charge you later and you

00:24:07,740 --> 00:24:12,930
complete it this is at this point the

00:24:10,770 --> 00:24:15,090
better payment gateways will usually do

00:24:12,930 --> 00:24:17,880
a zero authorization meaning that no

00:24:15,090 --> 00:24:21,050
amount was actually authorized and the

00:24:17,880 --> 00:24:24,180
less good ones will do a one dollar

00:24:21,050 --> 00:24:26,850
authorization for example now the UX

00:24:24,180 --> 00:24:28,050
here is important I am checking out and

00:24:26,850 --> 00:24:30,060
I'm giving my credit card

00:24:28,050 --> 00:24:32,250
and I have no idea how much I will be

00:24:30,060 --> 00:24:35,070
charged at the end so this is why we

00:24:32,250 --> 00:24:37,560
support what's on the screen it's a it's

00:24:35,070 --> 00:24:41,910
an estimation feature which looks just

00:24:37,560 --> 00:24:44,610
like a card and it says if you had a

00:24:41,910 --> 00:24:47,100
normal usage which the plan that you

00:24:44,610 --> 00:24:49,590
selected this is how much you would pay

00:24:47,100 --> 00:24:53,850
at the end of the month there for

00:24:49,590 --> 00:24:55,710
reassuring me and we use pricing rules

00:24:53,850 --> 00:24:58,110
for everything so a pricing rule will

00:24:55,710 --> 00:25:00,360
set the price of the products to zero if

00:24:58,110 --> 00:25:02,070
it's both paid if it's prepaid then it

00:25:00,360 --> 00:25:04,470
will prorate it so the user will

00:25:02,070 --> 00:25:08,580
actually see how much he is paying and

00:25:04,470 --> 00:25:10,710
so on and both paid is actually our

00:25:08,580 --> 00:25:17,420
default use cases it's the most common

00:25:10,710 --> 00:25:19,800
for these says use cases now we support

00:25:17,420 --> 00:25:22,410
different kinds of billing cycles we

00:25:19,800 --> 00:25:24,780
already defined what a synchronous and a

00:25:22,410 --> 00:25:26,820
synchronous billing cycle is again the

00:25:24,780 --> 00:25:28,530
billing cycles are pluggable and the

00:25:26,820 --> 00:25:31,680
plug-in will generate them we have a

00:25:28,530 --> 00:25:35,370
default one where you can configure your

00:25:31,680 --> 00:25:37,500
period so you can say that you have one

00:25:35,370 --> 00:25:41,220
hour billing cycle great for testing or

00:25:37,500 --> 00:25:43,350
one day one week one month half a year a

00:25:41,220 --> 00:25:45,900
year that's up to you and you can select

00:25:43,350 --> 00:25:47,640
whether it's a synchronous meaning that

00:25:45,900 --> 00:25:50,190
it always lasts the same number of days

00:25:47,640 --> 00:25:54,210
or its synchronous meaning that the user

00:25:50,190 --> 00:25:56,130
is always built on the same day and the

00:25:54,210 --> 00:25:58,830
great thing about it being pluggable is

00:25:56,130 --> 00:26:01,440
that you can always plug your own so I

00:25:58,830 --> 00:26:04,200
saw this cute wit a few months ago that

00:26:01,440 --> 00:26:06,510
says how great it is that a certain

00:26:04,200 --> 00:26:09,690
internet internet service provider has

00:26:06,510 --> 00:26:12,720
this lunar option where the customer is

00:26:09,690 --> 00:26:14,760
charged each full moon and if you want

00:26:12,720 --> 00:26:16,830
to implement this you will just register

00:26:14,760 --> 00:26:18,810
a new plug-in and in 10 lines of code

00:26:16,830 --> 00:26:24,030
this will be possible so you too can be

00:26:18,810 --> 00:26:26,100
cute we also have a really nice billing

00:26:24,030 --> 00:26:28,530
dashboard powered by views mega row and

00:26:26,100 --> 00:26:31,110
if you ever used kickstart you will you

00:26:28,530 --> 00:26:34,080
probably sudden saw this pattern you can

00:26:31,110 --> 00:26:36,390
see a row and click a link that says

00:26:34,080 --> 00:26:38,280
analyze or view or whatever and then the

00:26:36,390 --> 00:26:40,860
row will expand and below it you will

00:26:38,280 --> 00:26:44,730
get information that's easy too

00:26:40,860 --> 00:26:47,340
can and in this case for each of your

00:26:44,730 --> 00:26:49,440
recurring orders you can see which

00:26:47,340 --> 00:26:51,840
billing cycle it uses when it starts at

00:26:49,440 --> 00:26:54,630
2010s you can see all of the active

00:26:51,840 --> 00:26:56,850
licenses that are in that recurrent

00:26:54,630 --> 00:26:58,890
order being charged for you can see when

00:26:56,850 --> 00:27:01,830
they were activated for example you can

00:26:58,890 --> 00:27:04,140
see if one platform was created six

00:27:01,830 --> 00:27:06,570
months ago but another one was activated

00:27:04,140 --> 00:27:09,870
three months ago and you can see the

00:27:06,570 --> 00:27:12,059
plan history showing all of the plans

00:27:09,870 --> 00:27:15,690
that the user use and for how long and

00:27:12,059 --> 00:27:18,480
you can see the actual usage how much is

00:27:15,690 --> 00:27:20,730
the current usage and whether the order

00:27:18,480 --> 00:27:23,220
can actually be closed because we have

00:27:20,730 --> 00:27:25,260
this really nice feature where we won't

00:27:23,220 --> 00:27:27,360
close the previous billing cycle until

00:27:25,260 --> 00:27:29,370
we know the usage because it's common

00:27:27,360 --> 00:27:31,110
for you to do billing for an external

00:27:29,370 --> 00:27:33,150
application and it needs to calculate

00:27:31,110 --> 00:27:36,059
the usage and post back to your drupal

00:27:33,150 --> 00:27:38,160
install and in that case we will and

00:27:36,059 --> 00:27:41,070
let's say that it to the second of March

00:27:38,160 --> 00:27:43,290
so we will open the billing cycle for 4

00:27:41,070 --> 00:27:48,470
March while waiting for february's will

00:27:43,290 --> 00:27:52,080
be computed and charged of course people

00:27:48,470 --> 00:27:54,240
often ask how they can do discounts it's

00:27:52,080 --> 00:27:55,890
common to say the first month is free or

00:27:54,240 --> 00:27:59,730
you got ten percent off for the first

00:27:55,890 --> 00:28:02,270
two months and we have this easy ability

00:27:59,730 --> 00:28:04,830
to discount any number of billing cycles

00:28:02,270 --> 00:28:07,650
the trick is in the fact that we just

00:28:04,830 --> 00:28:09,840
use normal price calculation for the

00:28:07,650 --> 00:28:12,150
recurring order that we create in charge

00:28:09,840 --> 00:28:15,450
so all of your pricing rules still run

00:28:12,150 --> 00:28:17,130
and you can see in plain English but

00:28:15,450 --> 00:28:19,860
which tokens how such a rule would look

00:28:17,130 --> 00:28:21,750
like so let's say that if I have a

00:28:19,860 --> 00:28:25,169
recurring line item that's being

00:28:21,750 --> 00:28:27,090
calculated and the number of renewals on

00:28:25,169 --> 00:28:29,760
the license is zero meaning that this is

00:28:27,090 --> 00:28:31,799
our first billing cycle we will just add

00:28:29,760 --> 00:28:35,520
a one hundred percent discount and make

00:28:31,799 --> 00:28:37,890
that first billing cycle free and that

00:28:35,520 --> 00:28:39,929
way you can still use all of your normal

00:28:37,890 --> 00:28:42,660
discount rules and this cow's tool that

00:28:39,929 --> 00:28:48,299
you're used to and don't need to do

00:28:42,660 --> 00:28:51,059
anything special so what happens during

00:28:48,299 --> 00:28:52,800
the recurring process and the users

00:28:51,059 --> 00:28:56,250
can't user can't pay

00:28:52,800 --> 00:28:57,870
so their card is declined we've

00:28:56,250 --> 00:29:01,400
developed a module called commerce

00:28:57,870 --> 00:29:04,530
stunning and this handles this process a

00:29:01,400 --> 00:29:06,660
card can have or payment can come up

00:29:04,530 --> 00:29:08,400
with two types of decline and the way

00:29:06,660 --> 00:29:10,890
that you handle those can change

00:29:08,400 --> 00:29:12,870
depending on that decline a hard decline

00:29:10,890 --> 00:29:16,080
for those cars that have been cancelled

00:29:12,870 --> 00:29:17,910
or closed the card is expired or a soft

00:29:16,080 --> 00:29:19,980
decline where the user doesn't have the

00:29:17,910 --> 00:29:21,390
money to pay in their account it's and

00:29:19,980 --> 00:29:24,570
come back to say this car diesel valid

00:29:21,390 --> 00:29:27,020
but it just doesn't have the money we

00:29:24,570 --> 00:29:29,610
start off a process where we're going to

00:29:27,020 --> 00:29:33,810
inform the user that they can't pay and

00:29:29,610 --> 00:29:35,700
then schedule new retries to take their

00:29:33,810 --> 00:29:37,470
card payment giving the use of the

00:29:35,700 --> 00:29:40,890
opportunity to update their card details

00:29:37,470 --> 00:29:43,080
through card on file so at this future

00:29:40,890 --> 00:29:45,680
actions we hopefully we're going to be

00:29:43,080 --> 00:29:48,180
able to take the payment if we don't

00:29:45,680 --> 00:29:50,610
through the schedule that might be five

00:29:48,180 --> 00:29:52,950
seven and then ten days and after this

00:29:50,610 --> 00:29:55,260
they still haven't paid we can then kick

00:29:52,950 --> 00:29:57,420
off the process using rules to cancel

00:29:55,260 --> 00:30:00,450
their subscription close their account

00:29:57,420 --> 00:30:05,070
and stop their acts access to the

00:30:00,450 --> 00:30:07,980
service this is really important for the

00:30:05,070 --> 00:30:10,680
post paid service where you're relying

00:30:07,980 --> 00:30:12,480
on the card and file working another

00:30:10,680 --> 00:30:15,630
part within the learning management is

00:30:12,480 --> 00:30:17,700
also pre notifications so if a card is

00:30:15,630 --> 00:30:20,160
about to expire you can notify the user

00:30:17,700 --> 00:30:21,960
to make sure they update it before this

00:30:20,160 --> 00:30:23,940
gets to this point and hopefully you're

00:30:21,960 --> 00:30:26,250
using the message module to handle all

00:30:23,940 --> 00:30:29,010
of your emails because it allows you to

00:30:26,250 --> 00:30:31,350
define your email templates separately

00:30:29,010 --> 00:30:33,840
from rules and then easily see which

00:30:31,350 --> 00:30:36,690
emails were sent and what they contained

00:30:33,840 --> 00:30:38,880
so this commerce dining has a sub-module

00:30:36,690 --> 00:30:41,130
that defines all of the message types

00:30:38,880 --> 00:30:42,360
for every single kind of an email that

00:30:41,130 --> 00:30:44,940
we're sending allowing you to easily

00:30:42,360 --> 00:30:48,920
customize them and later on see the

00:30:44,940 --> 00:30:48,920
dining notifications that were sent out

00:30:49,520 --> 00:30:55,620
so commerce funds is a useful module for

00:30:52,740 --> 00:30:58,980
working with the situations where you

00:30:55,620 --> 00:31:01,170
need to provide credit or have credit

00:30:58,980 --> 00:31:03,300
for the user so this could be the use

00:31:01,170 --> 00:31:05,290
cases of the cancelled or closed

00:31:03,300 --> 00:31:07,780
accounts where they want to

00:31:05,290 --> 00:31:09,970
closed their service partway through a

00:31:07,780 --> 00:31:11,860
period and we need to give them credit

00:31:09,970 --> 00:31:14,040
for the store to spend on some other

00:31:11,860 --> 00:31:17,260
service all where you want to use a

00:31:14,040 --> 00:31:19,030
prepaid service or voucher so you're

00:31:17,260 --> 00:31:21,790
going to give your customers a voucher

00:31:19,030 --> 00:31:23,590
for fifty dollars worth of credit they

00:31:21,790 --> 00:31:25,630
can come along to the store deposit that

00:31:23,590 --> 00:31:27,790
into their credit open their accounts

00:31:25,630 --> 00:31:30,010
and for their first billing period they

00:31:27,790 --> 00:31:32,320
can start using that credit and then

00:31:30,010 --> 00:31:35,110
start paying after that with their

00:31:32,320 --> 00:31:38,380
payment card details commerce funds

00:31:35,110 --> 00:31:41,860
allows you to specify the funds accounts

00:31:38,380 --> 00:31:43,420
for the users in multiple currencies so

00:31:41,860 --> 00:31:48,400
they can hold it in multiple currencies

00:31:43,420 --> 00:31:49,900
as well as the default store currency so

00:31:48,400 --> 00:31:51,970
this is great if your service just

00:31:49,900 --> 00:31:53,800
launched and it's still kind unstable so

00:31:51,970 --> 00:31:55,630
the service crashes and you tell the

00:31:53,800 --> 00:31:59,850
user we are really sorry here's twenty

00:31:55,630 --> 00:31:59,850
dollars credit of your next order

00:32:01,440 --> 00:32:06,460
finally relevant to all of this digital

00:32:04,300 --> 00:32:09,490
Commons talk about taxes and digital

00:32:06,460 --> 00:32:14,350
goods and services if you are looking at

00:32:09,490 --> 00:32:16,540
digital goods and services before they

00:32:14,350 --> 00:32:19,510
can be sold anywhere you've got a world

00:32:16,540 --> 00:32:20,830
wide range of customers previously when

00:32:19,510 --> 00:32:23,830
we were talking about just physical

00:32:20,830 --> 00:32:25,360
goods when you ship these houses UK

00:32:23,830 --> 00:32:27,370
custom if I buy something of America I

00:32:25,360 --> 00:32:29,170
get a big sticker on it saying you need

00:32:27,370 --> 00:32:32,680
to pay customs this much before you can

00:32:29,170 --> 00:32:34,540
get it but with digital goods lots of

00:32:32,680 --> 00:32:37,030
countries are now starting to take

00:32:34,540 --> 00:32:39,880
action against this and implementing

00:32:37,030 --> 00:32:42,400
their own import duties effectively when

00:32:39,880 --> 00:32:44,350
you sell electronic services into

00:32:42,400 --> 00:32:46,780
customers in those countries so far

00:32:44,350 --> 00:32:49,690
there are 32 countries that have either

00:32:46,780 --> 00:32:51,940
already implemented or are implementing

00:32:49,690 --> 00:32:54,150
this process the most biggest being the

00:32:51,940 --> 00:32:57,190
whole of the EU which starts next year

00:32:54,150 --> 00:32:59,320
to work with this and general

00:32:57,190 --> 00:33:04,060
requirements for tax we've develops a

00:32:59,320 --> 00:33:06,990
commerce v80 module and this takes the

00:33:04,060 --> 00:33:09,940
tax calculation into a two step process

00:33:06,990 --> 00:33:11,920
firstly deciding the place of supply

00:33:09,940 --> 00:33:14,410
this is the country that the customer is

00:33:11,920 --> 00:33:16,690
in based on all of these tax laws to

00:33:14,410 --> 00:33:18,610
decide where they are and then a second

00:33:16,690 --> 00:33:22,059
stage to decide what rate they need to

00:33:18,610 --> 00:33:25,210
pay based on the type of product this is

00:33:22,059 --> 00:33:29,350
the developed through an API that allows

00:33:25,210 --> 00:33:31,090
easy definition of the country and that

00:33:29,350 --> 00:33:33,130
country can regularly be more than just

00:33:31,090 --> 00:33:37,030
the country or just parts of a country

00:33:33,130 --> 00:33:39,880
and what rates are available already

00:33:37,030 --> 00:33:42,580
supplied are the European Union and a

00:33:39,880 --> 00:33:44,350
number of other countries but there's

00:33:42,580 --> 00:33:47,380
also opportunities for people who

00:33:44,350 --> 00:33:51,700
contributes ones particularly Canada is

00:33:47,380 --> 00:33:57,010
one that is needed as that say dat using

00:33:51,700 --> 00:34:01,450
country okay so we should be able to

00:33:57,010 --> 00:34:04,270
most of questions do we have any yep

00:34:01,450 --> 00:34:07,960
sure really interesting by the way

00:34:04,270 --> 00:34:09,940
really impressive what you've done so in

00:34:07,960 --> 00:34:12,609
think of a couple questions but the

00:34:09,940 --> 00:34:16,480
central one is this it's the use case

00:34:12,609 --> 00:34:19,090
where the users right to use the

00:34:16,480 --> 00:34:21,730
resource is controlled from you know

00:34:19,090 --> 00:34:26,649
outside your website or drupal site or

00:34:21,730 --> 00:34:29,470
whatever and and so I'm interested in

00:34:26,649 --> 00:34:31,090
how you can handle that and that that

00:34:29,470 --> 00:34:37,000
also gotta think sub divided into two

00:34:31,090 --> 00:34:38,440
cases ones where the external service

00:34:37,000 --> 00:34:40,780
that's going to determine whether the

00:34:38,440 --> 00:34:43,659
user is allowed to continue using the

00:34:40,780 --> 00:34:45,609
service or not is connected so a web

00:34:43,659 --> 00:34:48,100
service approach as possible the other

00:34:45,609 --> 00:34:49,419
cases where it's disconnected and you

00:34:48,100 --> 00:34:52,510
have to do something like an expiration

00:34:49,419 --> 00:34:54,310
date or whatever can you just talk about

00:34:52,510 --> 00:34:57,580
how you would implement those things yes

00:34:54,310 --> 00:35:00,160
so it so on it'll depends on who the

00:34:57,580 --> 00:35:02,650
primary source of truth is if it's the

00:35:00,160 --> 00:35:04,270
Drupal site then the flow always starts

00:35:02,650 --> 00:35:05,859
from Drupal and the license and then we

00:35:04,270 --> 00:35:07,660
trigger the synchronization process to

00:35:05,859 --> 00:35:09,670
do what's needed but if it's actually

00:35:07,660 --> 00:35:11,710
the external application then that

00:35:09,670 --> 00:35:14,530
application will contact the Drupal site

00:35:11,710 --> 00:35:16,390
through the API and then modify the

00:35:14,530 --> 00:35:19,060
license in any way needed so it will

00:35:16,390 --> 00:35:21,250
register usage or expire a license or

00:35:19,060 --> 00:35:23,350
set an expiration date for the system to

00:35:21,250 --> 00:35:26,410
handle that automatically or whatever

00:35:23,350 --> 00:35:28,920
else is needed so basically you will you

00:35:26,410 --> 00:35:31,570
would provide an API is for services and

00:35:28,920 --> 00:35:32,050
we still don't have one publicly but we

00:35:31,570 --> 00:35:33,850
are prepared

00:35:32,050 --> 00:35:37,390
we are preparing ourselves to share that

00:35:33,850 --> 00:35:39,250
and then that just works I think I'm

00:35:37,390 --> 00:35:42,970
describing a little different situation

00:35:39,250 --> 00:35:45,810
here so it's past the transaction Tonya

00:35:42,970 --> 00:35:49,330
yeah and pass the provisioning time and

00:35:45,810 --> 00:35:52,000
at this point so it's three months later

00:35:49,330 --> 00:35:56,020
and i want to check whether to expire

00:35:52,000 --> 00:35:59,380
the you know the right and so I either

00:35:56,020 --> 00:36:01,870
want to have have obtained at the

00:35:59,380 --> 00:36:04,090
original system payment time by an

00:36:01,870 --> 00:36:07,720
expiration date so that gets passed to

00:36:04,090 --> 00:36:10,720
me or I want to be able to make a call

00:36:07,720 --> 00:36:13,000
back you know say is this is this user

00:36:10,720 --> 00:36:15,520
still valid it's sort of like a recheck

00:36:13,000 --> 00:36:18,640
yes so all of that is possible through

00:36:15,520 --> 00:36:20,500
the API that you would expose you

00:36:18,640 --> 00:36:26,500
probably using services and we can

00:36:20,500 --> 00:36:33,000
discuss smaller details after the dog so

00:36:26,500 --> 00:36:36,880
this this all looks this is not working

00:36:33,000 --> 00:36:39,640
yes so we've been building a couple

00:36:36,880 --> 00:36:41,170
sites using the recurring service and

00:36:39,640 --> 00:36:42,670
I'm really excited to see that we can

00:36:41,170 --> 00:36:44,890
actually rebuild them completely

00:36:42,670 --> 00:36:47,980
natively in Drupal commerce which is

00:36:44,890 --> 00:36:50,230
which is fantastic thank you but one

00:36:47,980 --> 00:36:53,830
thing that I have a question about is

00:36:50,230 --> 00:36:55,630
prorating upgrades so if we have a set

00:36:53,830 --> 00:36:58,540
of subscription services at different

00:36:55,630 --> 00:37:00,280
levels can we handle the proration of

00:36:58,540 --> 00:37:01,720
accounts if they decide to upgrade in

00:37:00,280 --> 00:37:03,490
the midst of yes that's done

00:37:01,720 --> 00:37:05,860
automatically for you you will either

00:37:03,490 --> 00:37:07,300
allow upgrades to happen automatically

00:37:05,860 --> 00:37:09,130
if you configure it it that way in that

00:37:07,300 --> 00:37:11,320
case prorating must always happen or you

00:37:09,130 --> 00:37:13,090
will specify that the upgrade will

00:37:11,320 --> 00:37:16,000
happen at the end of the cycle therefore

00:37:13,090 --> 00:37:17,920
avoiding the pro rating and I really

00:37:16,000 --> 00:37:19,630
think that we have something great

00:37:17,920 --> 00:37:21,460
compared to recur ly here because

00:37:19,630 --> 00:37:23,650
especially if you're using metered

00:37:21,460 --> 00:37:25,390
billing wreaker lee requires you to do

00:37:23,650 --> 00:37:27,430
all the calculations yourself the only

00:37:25,390 --> 00:37:29,830
thing you can do is tell rick early this

00:37:27,430 --> 00:37:32,500
is my line item and it's this much for

00:37:29,830 --> 00:37:35,350
usage but in our case we actually track

00:37:32,500 --> 00:37:38,290
and calculate the usage for you so you

00:37:35,350 --> 00:37:40,570
can all do one API call and we will do

00:37:38,290 --> 00:37:43,620
all the rest for you so the integration

00:37:40,570 --> 00:37:45,960
is actually significantly simpler and

00:37:43,620 --> 00:37:48,390
just sort of the same question but have

00:37:45,960 --> 00:37:50,850
you figured out how to handle the use

00:37:48,390 --> 00:37:52,650
case of downgrades is it is it a similar

00:37:50,850 --> 00:37:56,400
thing where we could use commerce funds

00:37:52,650 --> 00:37:58,020
to take yeah yeah yeah so in case you're

00:37:56,400 --> 00:38:00,510
doing post paids then you don't even

00:37:58,020 --> 00:38:03,090
need credits the pro rating will just

00:38:00,510 --> 00:38:06,260
happen and in case you're using prepaid

00:38:03,090 --> 00:38:09,510
then yes you can just award the user

00:38:06,260 --> 00:38:11,850
funds using commerce funds or once again

00:38:09,510 --> 00:38:16,740
you can postpone that change to the next

00:38:11,850 --> 00:38:18,930
cycle thank you first of all thanks

00:38:16,740 --> 00:38:21,330
thanks for such a great framework it's

00:38:18,930 --> 00:38:24,390
awesome um I've got a question around

00:38:21,330 --> 00:38:27,240
commerce card on file and just security

00:38:24,390 --> 00:38:29,730
implications around that are there any

00:38:27,240 --> 00:38:34,470
extra considerations you need in terms

00:38:29,730 --> 00:38:38,070
of PCI compliance removing tokens yeah

00:38:34,470 --> 00:38:39,810
so I whenever I answer a PCI question I

00:38:38,070 --> 00:38:42,240
first mentioned drupal PCI compliance

00:38:39,810 --> 00:38:45,120
report I hope you all read it and if not

00:38:42,240 --> 00:38:48,180
please do so as soon as possible so

00:38:45,120 --> 00:38:51,150
according to the PCI standards we are

00:38:48,180 --> 00:38:52,980
safe to store the four digits of the

00:38:51,150 --> 00:38:54,420
cards and the cardholder name and

00:38:52,980 --> 00:38:58,290
expiration without any kind of

00:38:54,420 --> 00:39:01,200
encryption that is allowed and then what

00:38:58,290 --> 00:39:03,540
remains are the usual PCI considerations

00:39:01,200 --> 00:39:05,670
of the different payment gateways and as

00:39:03,540 --> 00:39:07,860
you know depending on your choice of the

00:39:05,670 --> 00:39:09,270
payment gateway you will fall into

00:39:07,860 --> 00:39:10,740
different categories of the PCI

00:39:09,270 --> 00:39:13,530
compliance standards so for example

00:39:10,740 --> 00:39:15,420
authorize.net actually sends the credit

00:39:13,530 --> 00:39:19,500
card numbers for your own server which

00:39:15,420 --> 00:39:21,210
puts you in to see but stripe and female

00:39:19,500 --> 00:39:23,940
and Braintree communicate directly with

00:39:21,210 --> 00:39:25,350
the other server putting you into PCI

00:39:23,940 --> 00:39:32,040
compliance category a which is

00:39:25,350 --> 00:39:35,790
significantly simpler I apologize if I

00:39:32,040 --> 00:39:39,240
missed it what about doing a partial

00:39:35,790 --> 00:39:40,590
refund for a user say you purchase

00:39:39,240 --> 00:39:42,510
something in you know like a 30 day

00:39:40,590 --> 00:39:45,660
subscription and they want to refund

00:39:42,510 --> 00:39:48,030
half way through can you reverse a

00:39:45,660 --> 00:39:49,830
charge or partially reverse a charger is

00:39:48,030 --> 00:39:52,350
that only supported yeah right now we

00:39:49,830 --> 00:39:55,440
have no ability to actually issue an

00:39:52,350 --> 00:39:57,430
actual refund we can either avoid doing

00:39:55,440 --> 00:40:00,670
anything or provide store credit

00:39:57,430 --> 00:40:02,980
and refund actual refunds are a future

00:40:00,670 --> 00:40:05,920
step probably by integrating with the

00:40:02,980 --> 00:40:08,680
Commerce RMA module which is the one

00:40:05,920 --> 00:40:11,619
that does the return or try

00:40:08,680 --> 00:40:13,359
authorizations it would be possible

00:40:11,619 --> 00:40:15,430
depending on the payment gateway some

00:40:13,359 --> 00:40:17,440
offer some payment gateways offer

00:40:15,430 --> 00:40:19,270
partial refunds on the initial

00:40:17,440 --> 00:40:21,309
transaction but it would be a manual

00:40:19,270 --> 00:40:23,770
process in my way to the Gateway like

00:40:21,309 --> 00:40:25,390
going to paypal or going to authorize

00:40:23,770 --> 00:40:27,280
that net doing it from so for example

00:40:25,390 --> 00:40:30,010
with authorize.net you can do that in

00:40:27,280 --> 00:40:32,319
Drupal you can refer to a partial refund

00:40:30,010 --> 00:40:34,390
on a transaction from the original

00:40:32,319 --> 00:40:36,069
transaction but it would be a manual

00:40:34,390 --> 00:40:37,510
process of going in saying how much to

00:40:36,069 --> 00:40:40,119
refund from that Ridge is that on the

00:40:37,510 --> 00:40:41,710
payments tab can you do a director from

00:40:40,119 --> 00:40:43,210
the payment style daughter yeah you go

00:40:41,710 --> 00:40:45,490
into the payment section of the order

00:40:43,210 --> 00:40:49,359
idea awesome and now sorry one other

00:40:45,490 --> 00:40:51,490
question I saw you you have the products

00:40:49,359 --> 00:40:54,010
which were licenses you know you had set

00:40:51,490 --> 00:40:56,380
terms that you create is it possible to

00:40:54,010 --> 00:41:00,579
have a dynamic product that you manually

00:40:56,380 --> 00:41:02,470
enter a start and stop date I guess what

00:41:00,579 --> 00:41:05,710
I'm thinking of is not the user checking

00:41:02,470 --> 00:41:07,480
out but somebody taking a manual

00:41:05,710 --> 00:41:10,150
purchase maybe they did offline than

00:41:07,480 --> 00:41:12,369
they did with cash or cheque and then a

00:41:10,150 --> 00:41:14,680
user would manually enter that for a

00:41:12,369 --> 00:41:16,210
specified time is that yes so

00:41:14,680 --> 00:41:18,069
technically it should be possible for

00:41:16,210 --> 00:41:20,530
you to manually create an order and the

00:41:18,069 --> 00:41:22,569
line item in and just complete that

00:41:20,530 --> 00:41:24,190
process but as far as I know there are

00:41:22,569 --> 00:41:26,819
still a few bugs remaining there is an

00:41:24,190 --> 00:41:29,650
issue in the queue about one of them and

00:41:26,819 --> 00:41:30,970
before we release our see one I will

00:41:29,650 --> 00:41:32,920
make sure that that works without

00:41:30,970 --> 00:41:34,510
problems so yeah that's definitely

00:41:32,920 --> 00:41:39,400
something we want to support any

00:41:34,510 --> 00:41:43,200
innocent I really thank you I actually

00:41:39,400 --> 00:41:46,540
have a follow-up question on the PCI

00:41:43,200 --> 00:41:50,079
question over there so if I change

00:41:46,540 --> 00:41:51,880
payment gateways does that mean that my

00:41:50,079 --> 00:41:53,859
users have to reenter payment

00:41:51,880 --> 00:41:56,290
information yes so the way cardin file

00:41:53,859 --> 00:41:58,569
works is that at all it's always tied to

00:41:56,290 --> 00:42:00,549
one payment gateway because the tokens

00:41:58,569 --> 00:42:02,440
cannot be transferred some payment

00:42:00,549 --> 00:42:05,349
gateways support some kind of an import

00:42:02,440 --> 00:42:07,180
expert but it's really really specific

00:42:05,349 --> 00:42:08,820
to them and not all of them do it so we

00:42:07,180 --> 00:42:10,770
need to tie ourselves to only

00:42:08,820 --> 00:42:14,150
it's payment gateways don't want you to

00:42:10,770 --> 00:42:14,150
move so they make it as hard as possible

00:42:20,720 --> 00:42:25,650
yeah but Rick Early's PCI level one

00:42:24,030 --> 00:42:28,530
complaint which costs more than a

00:42:25,650 --> 00:42:33,300
hundred thousand dollars if you give us

00:42:28,530 --> 00:42:34,950
that money will add the future and then

00:42:33,300 --> 00:42:38,700
I have a follow-up question on or a

00:42:34,950 --> 00:42:41,610
second question about so you can you're

00:42:38,700 --> 00:42:43,410
turning hard decline or softly client

00:42:41,610 --> 00:42:45,870
but that's essentially at the processing

00:42:43,410 --> 00:42:48,510
level you guys have any type of risk

00:42:45,870 --> 00:42:50,400
management before he gets there so like

00:42:48,510 --> 00:42:53,100
if it's somebody who continues to render

00:42:50,400 --> 00:42:54,720
fragile information ya know so that

00:42:53,100 --> 00:42:56,610
would be a great feature but right now

00:42:54,720 --> 00:42:59,040
we don't it's it's something that you

00:42:56,610 --> 00:43:02,100
could all potentially build three rules

00:42:59,040 --> 00:43:04,230
so if they're repeating if their

00:43:02,100 --> 00:43:05,670
transactions repeat to fail from the

00:43:04,230 --> 00:43:07,980
payment gateway depending on your

00:43:05,670 --> 00:43:10,800
payment gateway depends on what feedback

00:43:07,980 --> 00:43:12,120
you get for their initial transaction so

00:43:10,800 --> 00:43:14,250
with some payment gateways you get

00:43:12,120 --> 00:43:16,890
levels of risk against the card the

00:43:14,250 --> 00:43:18,480
address and how much they're paying so

00:43:16,890 --> 00:43:21,150
you can pull off that information into

00:43:18,480 --> 00:43:22,890
your rules or flag your orders or your

00:43:21,150 --> 00:43:25,290
users based on how many failed

00:43:22,890 --> 00:43:26,880
transactions they've had but it's that's

00:43:25,290 --> 00:43:28,350
all going to depend on the business

00:43:26,880 --> 00:43:30,060
process that you want to implement to

00:43:28,350 --> 00:43:33,990
monitor that if you're only dealing with

00:43:30,060 --> 00:43:35,550
a 399 dollar a month subscription or

00:43:33,990 --> 00:43:37,560
three hundred and ninety nine dollar a

00:43:35,550 --> 00:43:41,520
month subscription your choice of how

00:43:37,560 --> 00:43:43,800
you manage that might be different so a

00:43:41,520 --> 00:43:46,890
more question about taxation of digital

00:43:43,800 --> 00:43:50,310
goods in the United States as you

00:43:46,890 --> 00:43:52,650
probably know this is a mess there is

00:43:50,310 --> 00:43:54,660
state by state and by particulars of the

00:43:52,650 --> 00:43:58,190
digital good and changes all the time

00:43:54,660 --> 00:44:01,970
and interacts with Nexus

00:43:58,190 --> 00:44:04,700
any plans anybody working on dealing

00:44:01,970 --> 00:44:06,230
with this problem could you make deal

00:44:04,700 --> 00:44:08,720
with a valero or somebody like that so

00:44:06,230 --> 00:44:11,410
we have I'd suggest using a third-party

00:44:08,720 --> 00:44:14,630
service that's going to do this for you

00:44:11,410 --> 00:44:16,730
it's the u.s. sales taxes is actually

00:44:14,630 --> 00:44:18,980
much more complicated than for deciding

00:44:16,730 --> 00:44:24,230
what rates are charged and European v80

00:44:18,980 --> 00:44:30,980
is we have to exact her and Ave attacks

00:44:24,230 --> 00:44:33,410
in our marketplace earlier you had

00:44:30,980 --> 00:44:36,020
mentioned that authorized dozen that was

00:44:33,410 --> 00:44:37,580
a PCR level see you gave a list of level

00:44:36,020 --> 00:44:39,800
A's and I couldn't write down fast

00:44:37,580 --> 00:44:41,690
enough for that yeah so if you open

00:44:39,800 --> 00:44:43,550
Drupal PCI compliance not work in the

00:44:41,690 --> 00:44:46,730
report you have all of the levels what

00:44:43,550 --> 00:44:49,610
that means and you have how all of the

00:44:46,730 --> 00:44:51,860
big payment gateways sorts basically and

00:44:49,610 --> 00:44:54,350
where they belong and the author is

00:44:51,860 --> 00:44:56,930
actually updating that for the new

00:44:54,350 --> 00:44:59,360
standard that will be valid from 2015 as

00:44:56,930 --> 00:45:02,270
well so it's really a great resource to

00:44:59,360 --> 00:45:04,700
follow the general advice is always do

00:45:02,270 --> 00:45:08,050
see if you can because that's keeping it

00:45:04,700 --> 00:45:11,480
safe but you should be able to target a

00:45:08,050 --> 00:45:13,430
with certain payment providers therefore

00:45:11,480 --> 00:45:18,440
lowering the amount of work that you

00:45:13,430 --> 00:45:21,380
need to do a lot of great modules thanks

00:45:18,440 --> 00:45:24,260
by the way was wondering about the

00:45:21,380 --> 00:45:26,660
release status on the four or five that

00:45:24,260 --> 00:45:29,210
you talked about are they in dev is I

00:45:26,660 --> 00:45:31,250
stable are there ones that you recommend

00:45:29,210 --> 00:45:33,620
that we don't use in production yet or

00:45:31,250 --> 00:45:36,020
were they at yeah so commerce license

00:45:33,620 --> 00:45:38,510
has had a stable release for more than

00:45:36,020 --> 00:45:40,790
six months now maybe even maybe even

00:45:38,510 --> 00:45:43,280
more it has had multiple stable releases

00:45:40,790 --> 00:45:45,650
it's completely stable commerce license

00:45:43,280 --> 00:45:47,390
building has a beta 2 currently and I

00:45:45,650 --> 00:45:50,180
will be tagging a release candidate in

00:45:47,390 --> 00:45:52,190
the next two weeks we are running it in

00:45:50,180 --> 00:45:55,850
production as are several other people

00:45:52,190 --> 00:45:58,880
and it has complete test coverage which

00:45:55,850 --> 00:46:02,060
makes it a bit safer of course our use

00:45:58,880 --> 00:46:03,920
case is postpaid I've noticed there are

00:46:02,060 --> 00:46:06,350
still some smaller issues with prepaid

00:46:03,920 --> 00:46:09,100
billing which we are working to fix in

00:46:06,350 --> 00:46:12,330
the next week before the RC one is

00:46:09,100 --> 00:46:15,250
tact so you should be good on that front

00:46:12,330 --> 00:46:20,080
the card and file recently saw major

00:46:15,250 --> 00:46:22,120
work I tagged the beta but also very

00:46:20,080 --> 00:46:24,340
soon we will have an actual final

00:46:22,120 --> 00:46:26,020
release I can say that right now it's in

00:46:24,340 --> 00:46:27,460
really good shape and you know the only

00:46:26,020 --> 00:46:29,350
reason why it's still in beta it because

00:46:27,460 --> 00:46:33,300
it's missing a few features that i would

00:46:29,350 --> 00:46:36,700
like to see especially around the UI and

00:46:33,300 --> 00:46:40,360
commerce funds is still in later as well

00:46:36,700 --> 00:46:42,850
or there is dev yeah that's still gots

00:46:40,360 --> 00:46:46,690
and there's been a process of moving

00:46:42,850 --> 00:46:48,790
that over from to an entity based system

00:46:46,690 --> 00:46:51,370
and they still some work to do on things

00:46:48,790 --> 00:46:53,530
like escrow payments that say you can

00:46:51,370 --> 00:46:56,160
also use funds for if you're building a

00:46:53,530 --> 00:47:00,430
marketplace or that type of environment

00:46:56,160 --> 00:47:03,250
the Commerce the license role is within

00:47:00,430 --> 00:47:05,500
commerce license yes so that's released

00:47:03,250 --> 00:47:07,450
and commerce license node is still in

00:47:05,500 --> 00:47:09,610
dev as well yeah commerce file doesn't

00:47:07,450 --> 00:47:11,110
have a final release yet it's in beta

00:47:09,610 --> 00:47:14,080
because we don't have an upgrade path

00:47:11,110 --> 00:47:16,000
for a wonder tax but judging by the lack

00:47:14,080 --> 00:47:17,560
of interest and contributors in that

00:47:16,000 --> 00:47:21,820
regard i'm just going to go ahead and

00:47:17,560 --> 00:47:37,930
tag a stable release okay any other

00:47:21,820 --> 00:47:39,900
questions yeah what what integration

00:47:37,930 --> 00:47:45,180
with physical goods moment

00:47:39,900 --> 00:47:47,220
this commerce have right now yeah I

00:47:45,180 --> 00:47:51,240
really don't know this is the digital

00:47:47,220 --> 00:47:53,849
talk so we yeah we would need to add

00:47:51,240 --> 00:47:56,220
some so please come by our stand the

00:47:53,849 --> 00:47:58,079
Commerce guys 10 and we will see what we

00:47:56,220 --> 00:47:59,490
can find we do have some of us but I

00:47:58,079 --> 00:48:02,180
can't remember what they are of stuff my

00:47:59,490 --> 00:48:02,180
head here as well

00:48:15,600 --> 00:48:20,550
yeah so some of them are built in some

00:48:18,480 --> 00:48:22,140
are not but we are trying to see which

00:48:20,550 --> 00:48:24,300
ones we are still missing so whatever

00:48:22,140 --> 00:48:25,950
you find it's missing open an issue and

00:48:24,300 --> 00:48:31,890
we will add that one as well Oh even

00:48:25,950 --> 00:48:33,630
better Craig the rule oh yeah I can talk

00:48:31,890 --> 00:48:34,860
about fulfillment options afterwards if

00:48:33,630 --> 00:48:36,570
you're interested sitting right in front

00:48:34,860 --> 00:48:39,330
of you I'm just going to say that i

00:48:36,570 --> 00:48:43,500
wrote the uber card recurring module

00:48:39,330 --> 00:48:45,840
once upon a time and ended up having to

00:48:43,500 --> 00:48:47,610
support a variety of customers who were

00:48:45,840 --> 00:48:50,040
retaining plaintext credit card

00:48:47,610 --> 00:48:53,100
information in their database and of

00:48:50,040 --> 00:48:56,490
course we're actually having recurring

00:48:53,100 --> 00:49:00,000
charges be processed at all and this

00:48:56,490 --> 00:49:02,850
represents like a tremendous improvement

00:49:00,000 --> 00:49:03,900
of what we've ever had in the Drupal

00:49:02,850 --> 00:49:05,790
world before so I just wanted to say

00:49:03,900 --> 00:49:09,660
bravo like this is really really solid

00:49:05,790 --> 00:49:13,860
stuff so thanks for showing it thank you

00:49:09,660 --> 00:49:16,170
everyone so as I said we are at the

00:49:13,860 --> 00:49:17,670
Commerce guys booth all day every day if

00:49:16,170 --> 00:49:20,100
you have any follow-up questions or just

00:49:17,670 --> 00:49:24,870
want to chat drop by and we'll see you

00:49:20,100 --> 00:49:27,810
and don't forget to review the session

00:49:24,870 --> 00:49:30,300
right okay so yeah this is the commerce

00:49:27,810 --> 00:49:32,340
village and please provide feedback so

00:49:30,300 --> 00:49:36,770
we can improve and feel good about what

00:49:32,340 --> 00:49:36,770

YouTube URL: https://www.youtube.com/watch?v=jcbxuFLXTdo


