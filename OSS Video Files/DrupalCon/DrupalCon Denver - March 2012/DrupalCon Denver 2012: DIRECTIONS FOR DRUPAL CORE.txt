Title: DrupalCon Denver 2012: DIRECTIONS FOR DRUPAL CORE
Publication date: 2013-03-28
Playlist: DrupalCon Denver - March 2012
Description: 
	Dries Buytaert (Drupal founder and Project Lead) will talk about the state of Drupal 8 development, share his thoughts about the "product vs framework" split, talk about new initiatives, discuss any course directions needed, propose refined development policies, and more. There will be time for discussion and Q&A at the end.
Captions: 
	                              good morning everyone I was a conference                               so far so i'll be here talking for a                               little bit about the directions for a                               court it's very much meant to be a                               discussion so i don't have a whole lot                               of slides i do have a few slides but                               after this lights i hope we can have a                               you know a very what's right words a                               very sorry productive for sure but                                hopefully entertaining discussion about                                this topic but before we start would be                                useful for me to get a sense of how many                                people consider themselves to be core                                developers all right to a good chunk how                                many drupal developers I guess everybody                                no surprise so here we go so the thing I                                wanted to talk about is something which                                we have talked about a lot and then                                somehow we stop talking about it and so                                now I want to talk about it again any                                guesses no guesses say that again haha                                no it's much more interesting uh so what                                I wanted to talk about is if you want to                                talk about performance we still can but                                I would like to talk about some of the                                possible directions for Drupal core like                                you know it's a big or small core you                                know package tour or you know lieutenant                                core model how many people are familiar                                with this discussion all right almost                                all people so I'm gonna I'm gonna like                                try and summarize kind of the different                                viewpoints and share my own viewpoints                                and then hopefully talk about it more so                                I think that what most users want end                                users and almost no core developers                                they want a bigger core and so if you                                look at Drupal                                                        God you know has gotten much bigger than                                Drupal                                                             bunch of stuff and possibly you know in                                the view of these people the users                                Drupal                                                            Drupal                                                           suggest adding things like drafts and                                inline editing and media and in all of                                these new things which are working on so                                naturally core tends to get bigger and                                bigger over time that's kind of the big                                core position there is you know                                advantages and disadvantages to that you                                know some of the pros are we have you                                know much better out-of-the-box                                functionality so for people that just                                come to Drupal and they download Drupal                                they can install it and all of a sudden                                they have something useful to work with                                versus something which they need to add                                you know like                                                     another advantage is more on the                                logistic sites of things which is there                                is only one repository there is one                                issue queue you know it's all                                centralized right the way we the way we                                work on this some of the negatives are                                complexity of core gross you know for                                some people that's considered a negative                                especially the developers the current                                core developers I would say they don't                                necessarily like to work on some of                                these other things you know they're                                they're used to working on their                                subsystems and if new subsystems come in                                it's not always something that they're                                passionate about and so arguably we                                would need to attract core developers                                that are passionate about these new                                subsystems but you know these are some                                of the arguments that I've heard against                                it on the other side what a lot of the                                distribution authors want and you know a                                chunk of the core developers as well as                                kind of the small core model and the                                reason they want this is you know                                especially in Drupal                                                  it has gotten much better but in Drupal                                                                                                       and you wanted to overwrite or change                                some of                                behavior of core you needed to do a lot                                of work to undo the things that core did                                in Drupal                                                              lot and I think in Drupal                                              do what we want to do it Symphony and                                the other initiatives I think it should                                you know should be easier for people to                                undo things and that's primarily why                                these people I think wanted to have the                                small core stuff so here is another view                                 of that where you know basically in this                                 world Drupal is pretty much a framework                                 exposing api's and then the different                                 distributions they just add contribute                                 modules on top of a basic framework                                 there's advantages and disadvantages to                                 this as well we have better separation                                 between product and framework which is                                 is healthy to have these abstractions                                 and separations we still have only one T                                 right it's this it's it's one team one                                 one issue q                                                             a smaller code base and so the theme                                 could be responsible for less and                                 arguably we would be able to iterate                                 faster on a smaller code base there is                                 some negatives of course you know                                 distributions there's a lot of                                 distributions I really believe will have                                 you know thousands of distributions over                                 time and hopefully hundreds of really                                 good ones we already have several I                                 think you already have like a hundred                                 plus if not more well with in this model                                 there is a real risk that these                                 distribution alters would need to                                 reinvent pieces or that they you know                                 they don't get synergies as much as they                                 would from a bigger court you know one                                 of the biggest problems right now in                                 Drupal is all of the choice like people                                 new to Drupal it's a go or there's                                                                                                       image gallery which you know how do I do                                 this you know which of the modules do I                                 use so it's not easy for users to you                                 know to deal with that choice and it's                                 often true our companies right the                                 development shops that be healthy I'll                                 you know users may make those choices                                 now in the case of distributions it                                 might be slightly different because you                                 would think end users we download the                                 distribution so we would need to figure                                 out how we help users with all of that                                 choice I think another con is if we're                                 honest with ourselves and you know                                 Drupal simply doesn't compete with some                                 of the other frameworks we're not up                                 there in terms of you know quality and                                 the reason Drupal wings today is because                                 we have this unique combination between                                 framework and products it's not because                                 we have the best possible framework in                                 the world and then the lab you know the                                 final point here is I'm not even sure I                                 would like to be in framework because in                                 my mind while frameworks are great                                 they're really useful for building                                 bespoke websites they're really useful                                 for building I mean there's just fewer                                 websites and I would like to do I would                                 like us to do things which matter you                                 know really thing big really trying you                                 know get to you know fifteen percent of                                 all the websites in the world and I                                 think you don't you simply can't get                                 there with a framework approach you need                                 the product / framework approach in my                                 mind so there is this advantages and the                                 third model is kind of the packaging                                 model or the lieutenant model there is                                 probably different flavors of this as                                 well but it's a model where core Drupal                                 is maintained by a number of maintainer                                 and then we pull in contributed modules                                 through like you make file add rush make                                 file or or some other mechanism but                                 effectively each of those contributed                                 modules will be maintained by their                                 maintained errs and they would have you                                 know obviously authority over these                                 modules right and so it's like the                                 virtual core team grows pros and cons to                                 that as well you know we Drupal itself                                 would be more of a distribution I guess                                 it would be more useful out of the box                                 which would be a positive for end users                                 you know future versions if we apply                                 this model future versions of Drupal                                 they would ship with key contribute                                 modules ready to go like we would need                                 to align our release schedules you know                                 so if you release core while maybe views                                 should also be ready at the same time                                 before we can really score that                                 obviously wouldn't be easy to do but it                                 would be very helpful for it users the                                 other advantage is because more people                                 would have authority to commit things we                                 wouldn't get blocked on core committers                                 as much there's more people that could                                 commit to their there are pieces of the                                 project than the cons obviously you know                                 if we have                                                            pulling in then there's                                                on the dodo that we would need to track                                 a lot of issue queue is a lot of people                                 to deal with a lot of back and forth                                 probably so it definitely makes you know                                 working together a little bit more                                 difficult as well it can also be an                                 issue relative to security releases like                                 if you would need to do a release all of                                 a sudden we need to make sure we can you                                 know we can pull in all of the latest                                 versions of these modules and make sure                                 they're all well tested and secure one                                 other disadvantage is that it becomes a                                 little bit harder to main maintain                                 consistency you know because different                                 people are slightly different views and                                 how things should look or work and I                                 think one of the things you're good at                                 in core is you know applying rules I'm                                 making sure things are nice and clean                                 like if you think about some of the top                                 contributed projects historically some                                 people have preferred much more                                 object-oriented approach and other                                 people not then like so we'll get more                                 inconsistencies across quadruple most                                 likely and I think you know it may be                                 difficult for people that consider them                                 you know generalists in core to keep up                                 so I think there will be more separation                                 in third                                 specialties so that's kind of as you                                 know the three different models big                                 course Malik or lieutenant core I think                                 that's server terminology that we'd be                                 using Before we jump to the conversation                                 piece I like to maybe share my vision my                                 vision can change over time and it has                                 changed over time but this is my current                                 thinking so I really believe and I've                                 set as in the keynote as well that the                                 core of Drupal should have all of the                                 infrastructure that people expect in a                                 website and that goes from the developer                                 experience in my mind we need to have                                 all the right api's things like web                                 services I think these belong in core                                 because they're they're going to be                                 infrastructure in the future things like                                 configuration management I think these                                 are all great examples of things which                                 make up the infrastructure for a                                 building you know pretty much every                                 website and so that means adding those                                 things to core that means a bigger core                                 the same thing applies in my mind for                                 building websites you know the tools                                 that site builders needs I think again                                 things like date module which so many                                 people use things like you know Platts                                 auto module which almost everybody who's                                 I think honestly they probably belong in                                 court and you know lastly I think it                                 also applies to content authors or you                                 know usability in general like people                                 really as I talked about in my keynote                                 people really have come to expect things                                 like inline editing WYSIWYG in all of                                 these things they're their                                 infrastructure nowadays maybe not ten                                 years ago remember when we hated                                 JavaScript and when we hate it wysiwyg I                                 think we still have some of that stuff                                 going on and you know maybe it's time to                                 let go what doesn't belong in core are                                 all the things which you know only a                                 small portion of all the websites need                                 all the things which are very specific                                 to let's say you know particular                                 industries that are not you know general                                 tools                                 features so I think the way to get there                                 is to you know possibly go with some                                 sort of hybrid model where we do need to                                 add more stuff to core but then you know                                 for certain things which you know we may                                 want to use the lieutenant model and                                 pull in some of the bigger modules                                 instead of putting them in corso things                                 like views and media module I think                                 maybe good examples of things which we                                 want to leave outside of the core but at                                 the same time things like you know date                                 module and you know some of the smaller                                 modules I guess maybe over time they                                 should become part of core so we get the                                 advantages so I think I guess what I'm                                 trying to say is I think we can                                 carefully craft a model where we can                                 look at the pros and the cons try to get                                 as many of the positives and try to                                 eliminate as many of the negatives I                                 don't think there's a single rule which                                 we can apply but I think we can look at                                 these things on a on a case-by-case                                 basis moreover very recently and this is                                 huge actually you know we did make some                                 changes to you know the way                                 distributions can be built on d dodo we                                 can actually now build distributions on                                 the data and so that actually enables us                                 to try and do the packaging thing and so                                 you know one of the things I would like                                 to try and do this is and I've created a                                 project based page for this it's called                                 Phoenix and I would really like an                                 experiment with this model a little bit                                 in Drupal                                                            know maintain a distribution of Drupal                                 called Phoenix and to pulling some of                                 the best authoring experience tools so                                 it's kind of in my mind it's kind of                                 like a a press flow for usability and                                 just to learn you know learn how to use                                 these brush make files and all of these                                 things with the goal though to get kind                                 of like build a prototype of what Drupal                                                                                                  experience so we have a functional                                 working prototype and then hopefully and                                 hence the name Phoenix we can figure out                                 a way to move some of these things into                                 Drupal                                                                  for seven then move it into Drupal                                   core so so I want to try and apply that                                 vision to a Drupal                                                       how it works and how well it would work                                 so that's basically my little overview I                                 think we have about                                                    you know                                                              lot of time for discussion I think it's                                 worthy a discussion as I said in the                                 beginning it's something that we talked                                 a lot about in the last three you know                                 two to three years if not longer and I                                 felt it's been like sleeping what's the                                 you know what's the expression it's been                                 like sleeping for a while and so I don't                                 feel like we've ever resolved this thing                                 and I feel it would be good to try and                                 get to closure on this and figure out a                                 strategy I don't expect us to figure it                                 out today but I do think we should                                 continue to have the debate because its                                 kind of these things which keep                                 lingering around forever so with that I                                 would like to invite everybody to you                                 know to ask questions and to take it if                                 you come to the mic because they're                                 they're recording the session and                                 they're going to share the session so                                 please i want to thank you for                                 inadvertently bringing up the chief                                 problem with the small core discussion                                 which is that it means two different                                 things and people keep confusing them                                 and i think without realizing it you've                                 done that here as well which is there's                                 the question of how much functionality                                 lives in core how many lines of code are                                 in core how many models are in our in                                 core and by in core i mean in the drupal                                 tar.gz file that you download separate                                 from that is the question of                                 architectural e how dependent are those                                 modules in core you know every module                                 that ships with core that you cannot                                 disable is architectural e a liability                                 the fact that the ships in that tar ball                                 is completely separate from the fact                                 that core doesn't work without it and in                                 one of the reasons why i never get got                                 into the small cord debate when that was                                 still raging was people kept confusing                                 that and any time someone said small                                 core someone say oh so rip out modules                                 and it's a completely separate question                                 i absolutely agree that we need to have                                 better separation between framework                                 e-type functionality and application                                 type functionality your previous slide                                 you had some modules that were in the                                 core part of the block diagram and                                 something or not the fact that those                                 modules are in core at the architecture                                 architectural and code level need to be                                 completely incidental at that point                                 which ones we ship in the default                                 distribution that happens to be triple                                 dot r gz is a completely separate                                 question and should be answered                                 separately and i think we need to be                                 careful to treat those as separate                                 questions but because we confuse them                                 for three years and that's why nothing                                 ever happened with it good point that                                 was Larry by the way for the recording                                 maybe mention your name so if people                                 listen to the recording they know we was                                 talking hi I'm Evan I Larry actually                                 kind of hit on what I was going to say                                 that um for me I don't think that the                                 small core versus large core thing I                                 don't think that those two things are                                 mutually exclusive as a developer what I                                 really care about isn't how much stuff                                 is in core when I download it it's how                                 much stuff gets loaded on every request                                 so much stuff get loaded yeah how much                                 stuff gets actually loaded on every                                 request so i don't care if core has a                                 whole lot of things if if core is                                 configurable enough that i can either                                 remove those things completely or just                                 disable them or if if you know bootstrap                                 has been i guess reorganized enough                                 which the you know the whiskey                                 initiative and the cmi initiative or                                 both going pretty good ways to making                                 that possible if those things that are                                 enabled just only get loaded on the                                 requests where they're needed and I                                 don't really care so much anymore that's                                 so we're talking about performance after                                 all                                 but you're right oh but it's not I mean                                 like most bigger Drupal sites of like                                 your hundred modules installed right so                                 I'm not sure I mean I think it's a great                                 point but it also feels like a separate                                 discussion i would i would say hi I'm                                 Carrie Gordon and Larry of course pretty                                 much hit on everything almost everything                                 I ever said but I just wanted to spend a                                 bit a couple things I believe that                                 you're actually almost on both sides of                                 this issue in terms of what's in the                                 tire ball and what isn't I mean I that                                 that was the essence of my question it                                 why does oh why do all these things have                                 to be in the tire bowl when we have so                                 many great mechanisms for for bringing                                 them in on demand I mean I i I'm                                 assuming that everyone who's loads                                 Drupal is on the internet so so I sort                                 of feel that way also i think that we                                 really get caught up a lot in semantics                                 we use things like framework as a                                 shortcut or a shorthand for a lot of                                 other things i think we really have to                                 be mindful of that because it's a                                 slippery slope and we're not going to be                                 symphony we we don't want to be simple                                 all right all right fair point was there                                 a questioning that no just a comment                                 right                                 you don't have to have a question it's                                 good to share your viewpoints I wasn't                                 sure if there was a question for me um                                 so this was so much easier oh yeah so                                 I'm CA Jackson case so this was so much                                 in the ad that i actually have submitted                                 my opinion on this as a core issue                                 yesterday aland can you like can you                                 open a drupal org node                                                 for me on the protector hola could you                                 say that number again because                                                                                                    I'll scroll down just a little bit we're                                 getting there yep this one yep scroll                                 down a little                                 uh                                 so                                 awesome so what's in here and all is                                 that all right I think it's a great idea                                 it's a sign to me even was this after                                 midnight or before amazingly was at                                     all right very funny anything else you                                 wanted to add though all right yeah um                                 this is jonny wilkinson the jubilate                                 mobile initiative lead and i missed a                                 bunch of the intro to this because i was                                 talking to Luke Wroblewski and trying to                                 pick his brain as long as as possible                                 while he was here the question that I                                 asked him was you know given the                                 importance of mobile and as far as                                 they're going to be more mobile users                                 and desktop users in just a couple of                                 years and also given that Drupal                                      going to be released sometime next year                                 fingers crossed and drupal nine would be                                 a good like                                                            are the important features that a CMS                                 should have which stymied in him a                                 little bit because he hadn't thought                                 about it but the first two things out of                                 his mouth before he sort of punted is                                 that asked me later were flexible                                 rendering and optimizations which I                                 meaning friend end performance all the                                 assets of stuff in additional in                                 addition HTML HTML optimization could                                 you sort of talk about what you think                                 are the super critical things that as a                                 community we should all work together                                 because there's all these initiatives                                 that are out there but it's not like                                 there are assigned people to do all that                                 work already right let's see it's a                                 couple of things                                 you know the initiatives are what's the                                 right work the initiatives are like                                 strategic initiatives things that we                                 need to work on and what the initiatives                                 that the initiative structure provides                                 in my mind is you know some visibility                                 for the outside world to you know what                                 we're focused on you know what some of                                 the big new things will be in the next                                 version of Drupal and we assign an                                 initiative lead to you know to delegate                                 you know leadership and authority in a                                 way right at the same time it's you know                                 two things it's not the initiative lead                                 doing all the work the initiative lead                                 is a leader that rallies a lot of other                                 people I think that's one common                                 misunderstanding you know when they see                                 your picture John up on the on the                                 screen and on the key and sometimes                                 people say oh you know John is taking                                 care of all the work which is not the                                 case and it shouldn't be the case right                                 and so people should get involved with                                 these initiatives at the same time my                                 second point would be there is a lot of                                 other things which are not official                                 initiatives and we need to work on these                                 things as well right I could make a                                 performance initiative I could make some                                 of these other initiatives but I don't                                 think we have to because I think we all                                 know and understand the importance and I                                 think when we work on them and well I                                 would like to point out that the front                                 end performance actually I you know when                                 I was talking about the Drupal a mobile                                 initiative and what it should include I                                 absolutely wanted that inside the                                 initiative scope because of so important                                 I felt it was and I also know that                                 flexible rendering is part of the web                                 services in the blocks everywhere                                 initiatives so I was somewhat slightly                                 validated by his by his Luke's response                                 but I'm hoping that that everyone here                                 recognizes that those those are the                                 couple things that that loop thought                                 were really important for a CMS and                                 I would love for everybody to help build                                 those features that are part of                                 initiatives right and I could see a                                 front-end perform is being an initiative                                 because it's it's bigger it's a good                                 chunk of work that involves many                                 different things right and I think it                                 also it also communicates a focus right                                 so I think you know it's worth worthy to                                 talk about that so right Peter this is                                 Peter Lennon three questions so to me                                 your last lieutenant model essentially                                 is small core plus a default                                 distribution is a really technically any                                 difference is there these are a                                 technical difference between what you                                 call lieutenant model and really just                                 saying we're having small core and we're                                 having a default distribution so it's a                                 good question depending on what the                                 finishin you apply you know I think I                                 don't know that answer to a question but                                 I think what I won't like to do and this                                 is why it's very much a discussion                                 because I haven't finalized my thinking                                 is I think there is a timing element                                 here as well like you know what do we                                 want to do in Drupal                                                   want to do in Drupal                                                   we're already doing so much right now                                 with these initiatives and you know I                                 like to launch a few more initiatives as                                 I mentioned which really means adding                                 more to court the lieutenant model i                                 think is interesting but you know i'm                                 not overly excited to implement that                                 right away given again all the stuff                                 we're already doing so in my mind maybe                                 that's more of a thing which is on the                                 table for us to talk about and to start                                 planning but maybe we don't implement                                 that until you know after drupal                                      until you know drupal                                                   you know i don't know what the exact                                 timing is but i don't want to like you                                 know change things Midway of a                                 development cycle necessarily so I don't                                 know it doesn't necessarily address your                                 question I think but I did want to give                                 that perspective especially because I                                 don't necessarily have the answer to                                 your question okay a different topic and                                 terms initiative leads                                 have you thought about reframing those                                 because I feel like there's a real                                 problem in terminology and in you know                                 person power that the uh yeah initially                                 it should really be called something                                 like you know technical architects or                                 something and they need a project                                 manager you know speaking for myself I                                 wouldn't even take on the role that                                 you're offering right now as pot as a                                 initiative Lee because I'm not great at                                 rounding up people and managing their                                 work and getting them to contribute                                 patches and I feel like you know you                                 we've currently we've put those two                                 responsibilities all on a single person                                 and and those people aren't should                                 really have us like a project manager                                 that works with them and they                                 should be really clear that they're not                                 supposed to be necessary writing the                                 code and so I hope yeah I'd encourage                                 you to look at sort of changing the                                 framing of this and recruiting sort of                                 project managers for those initiatives                                 really I think it's a good point i think                                 we've discussed the terminology in the                                 past and maybe there's better words to                                 describe what they are so that people                                 have better expectations of what they're                                 doing at the same time I can also see us                                 instead of having one initiative you                                 know lead having a you know like a small                                 team of you know two or three people                                 that head up the initiative where one                                 could provide the technical leadership                                 one could provide the project management                                 or the coordination and you know in some                                 cases maybe a third person would head up                                 the usability piece of the initiative so                                 I think evolving our thoughts and the                                 way we approach these things based on                                 what we've learned is a very good idea                                 so and the last quick question I've seen                                 in line editing as a emphasis a couple                                 times from you and I was just wanting                                 where that came from because I don't                                 remember hearing about it or hearing any                                 finding that that was something the                                 Drupal was really lacking so inline                                 editing is kind of a bigger word for                                 improving the the altering experience                                 partly true inline editing but also more                                 drag and drop like the ability to drag                                 elements on the page so it's really much                                 more I mean that in my mind is all                                 inline editing where it came from is                                 frankly you know looking at competitor                                 they all have it and if you look at when                                 drupal losses against you no other CMS                                 is it that's often a reason why because                                 we don't have it and we don't even have                                 it as contribute modules right I guess                                 I've heard that about more about layouts                                 and actually heard the opposite that                                 people are frustrated by our competitors                                 where they're forced to edit like the                                 text in line yesterday where they want                                 to you know sort of coherent full page                                 to author but you know they want you                                 shouldn't drag and drop for layouts so                                 I'm I can't really comment on that                                 specific example but more injuries hey                                 what's your name uh my name is Mike                                 whacker and I had a question about the                                 ninety-nine percent more specifically                                 that ninety-nine percent we never hear                                 back obviously we could have module you                                 should usage statistics was kind of give                                 us an idea of which modules might be in                                 core and which might be a good trip is                                 there any way we can kind of enhance                                 that data collection like maybe we know                                 what the average number of roles the                                 site uses or maybe if like a core module                                 can be split into like several parts we                                 kind of measure which parts are being                                 used which parts aren't being used so                                 that when we have these discussions                                 they're just being a grand philosophical                                 discussion from the one person in here                                 we kind of have more data from the                                    percent which we can use the driver                                 decision-making all right I think it's a                                 great idea frankly I'm a bit of a data                                 geek myself and I think we have a lot of                                 data I don't think we really use the                                 data well right now I mean we do some                                 stuff with the data but we could do much                                 more like you know statistical analysis                                 to see what modules are being used                                 together I mean we could through just                                 statistics we could almost automatically                                 define distributions based on actual you                                 know usage patterns of modules so that's                                 one thing and the other thing is what                                 you said like getting more data                                         would be helpful you know on a much                                 smaller level so but I think you know it                                 as always you take somebody to to step                                 up and and sort of rally the troops and                                 you know to work on it so but I would I                                 mean I think the Drupal community in                                 general is very very data-driven like                                 whenever we have data we tend to make                                 decisions faster I mean                                 much faster because we don't need to                                 build consensus because we just have the                                 data so anything along those lines is                                 really super helpful thank you I'm just                                 xjm and my question is so the problem                                 with the lieutenant model model for                                 colgate Cardinals I think there's kind                                 of there's two things that could be                                 problematic one is just in terms of the                                 sheer number of lines of code and the                                 question of consistency across the                                 different like lieutenants domains but                                 then the other question is how much it                                 is just our tools and our workflow now                                 how much of that is just focused around                                 the cork you and could we how much could                                 we do to make that mod that model                                 possible using the tools that we don't                                 have yet thanks I'll do you have                                 suggestions no I like no it's a good                                 question i don't necessarily the answers                                 but that's I mean these are the                                 questions I think when I say I'm not                                 ready to implement this right now these                                 are the kind of questions I think we                                 need to sort true right we need to have                                 a good idea of what we want to do and                                 how we want to change things and like                                 there's a another element is it's much                                 more political I think there's a real                                 risk to get a you know a lot more                                 political as well which is something                                 that I don't like I you know I wouldn't                                 like to work in a highly political                                 environment but imagine we pulled in a                                 module the maintainer goes you know                                 missing in action or whatever what do we                                 do like you know do i fire that person I                                 mean I I mean it's some of these                                 dynamics are very hard so there's a                                 social aspects in addition to just the                                 tools and I think what you were getting                                 to his you know some of the social                                 aspects maybe we can solve two technical                                 solutions but there will be a lot of                                 social things left Angie I'm Angela                                 Byron your web chick on drupal.org and I                                 just wanted to touch on a few different                                 things that have come up I mean I guess                                 the first thing is it be cool if we                                 could try to stay on topic a little bit                                 like and because i know the semantics                                 are important of this debate but i think                                 a lot more important is that like we're                                 at a crossroads right now it feels like                                 it where you know core evolves too                                 slowly to be useful to people and so we                                 depend on all these contributed projects                                 but then if you take someone new to                                 drupal and you say Oh Drupal is great                                 because there's                                                         have to pick the three of them that                                 don't suck yay I mean it's not that                                 actually is terrible I mean it's it                                 makes Drupal extremely hard to use it                                 makes it it no it really hurts us                                 especially when you know you look at the                                 trends of you know the content areas of                                 the victims of Drupal are certain to                                 have a much louder voice than the IT                                 departments and what you know things get                                 chosen and even if you get out of                                 companies hobbyists do the same thing                                 they download WordPress a download                                 Drupal and they download whatever and                                 they try them all and they say that one                                 does what I want five seconds and use                                 that one so we have a real problem with                                 getting new people into the community                                 because of this issue so the thing                                 that's interesting about the lieutenant                                 model is that what I hear I mean I'm on                                 the ground with all of these folks who                                 work on core and you know what I hear a                                 lot of frustration around is I hear a                                 lot of frustration about bike sheds I                                 hear a lot of us awesome code it's it's                                 it can be soul-sucking especially if                                 you're working on something that it                                 feels like no one else cares about                                 either because they can't find the thing                                 you're working on door because you don't                                 have a process for you know how many                                 core office hours and talking about it                                 or that kind of thing so it's an                                 interesting direction for us to think                                 about but I agree that the social                                 impacts of that are really important                                 because right now we have one team that                                 has a really wide spread in terms of you                                 know what we do we have accessibilities                                 expertise we have usability expertise                                 documentation translation core                                 developers all these different sub                                 system maintains a lot of crossover that                                 happens there and I think that's what                                 makes Drupal so strong and so you know                                 deciding where that line falls of where                                 you know we do put WYSIWYG incor                                 actually but we don't put fusing core                                 maybe i don't know i think discussing                                 those kinds of nuances are really                                 important and then two other things um                                 is someone suggested PMS for Drupal                                   initiative leads we actually have                                 on that and we should give a shout out                                 to Melissa Anderson Shannon vets and                                 Cristal um I may have spent a great deal                                 of time working with the initiatives                                 trying to combat some of these issues                                 like how do I get people into my issues                                 how do I you know evangelize what I'm                                 doing how do I make it clear to them                                 that you know I'm not the only person                                 working on this and we're still figuring                                 this out right initiatives were brand                                 new last year we're still figuring all                                 the processes but I just want to make                                 clear that it is a larger team that's                                 helping to support them and I think                                 that's everything oh and if you're                                 interested in Drupal that organ                                 provements you can come to my talk later                                 this afternoon bye well set thank you hi                                 I'm a frank carry one of the concerns                                 for me I think maybe others is the                                 release cycle time for core think we're                                 bringing we're trying to bring it down                                 would be interesting if we could bring                                 it down even further things are with                                 mobile going on things are moving even                                 more quickly than they were a few years                                 ago so for me that's one of the major                                 concerns I'm wondering you know in the                                 new model is that a priority of trying                                 to get that down as a kind of                                           let's put out there to like so it's a                                 real worry of me as well and i agree i                                 would like to figure out ways to reduce                                 the release cycle time as well so a                                 couple of things first of all we've                                 loosened up some of the rules in terms                                 of the back board policy but that gives                                 us is that we can do a little bit more                                 innovation within a stable branch but i                                 mean that's a small win but obviously                                 doesn't address the fundamental issue i                                 think i think this is a big topic and i                                 think it's something that we're i would                                 be open to make bigger changes probably                                 not in eight because we've already I                                 mean we've already developed on eight                                 for a year so it's kind of hard to make                                 changes now but you know say in Drupal                                   you know we could try just like we                                 experiment with initiatives we could                                 experiment with a different strategy                                 around backwards compatibility                                 for example and I don't have the answers                                 by the way I'm just I'm just saying like                                 I would be open to have that                                 conversation and I would be willing to                                 to make a decision there and you know                                 one possible model would be I think it's                                 open to all sorry it's a title so what                                 they do is they maintain backwards                                 compatibility for one release right and                                 so it gives us I'm not saying at the                                 right approach with just something for                                 us to think about what that gives us is                                 some backwards compatibility so if you                                 install Drupal                                                          modules would still work drupal                                   modules wouldn't work and then that                                 gives module maintained errs one full                                 release cycle to upgrade to the new AP                                 ice because any old api's will be                                 deprecated it puts a lot more work on                                 the core developers again so that's                                 that's the real I mean that's a downside                                 and it's a big one because you know                                 they're already super busy and they                                 don't necessarily want to take on that                                 work I mean they can't but imagine a                                 world where we would be able to maintain                                 backwards compatibility for one release                                 cycle we may be able to shorten the                                 release cycle lengths as well and                                 because and we would be able to because                                 we wouldn't break all of the contribute                                 modules every six months or every year                                 so I think there is you know it's always                                 going to be a give and take but I think                                 there may be experiments which we could                                 do and again I don't think we can do                                 them right now because you know we can                                 go and say we're going to maintain                                 backwards compatibility because then we                                 would need to go back in history and you                                 know right this huge compatibility layer                                 for all of the changes we've already                                 made which is going to be impossible at                                 this point but again big conversation I                                 think we need to have that conversation                                 and I think we you know maybe we keep                                 everything as it is maybe we don't but                                 it is a big fear of mine because I think                                 our ability to innovate is critical and                                 shortening the release cycle will allow                                 us to go faster because people will be                                 more in sent you no more incentive to                                 contribute because they don't need to                                 like                                 in a wait two years for they can                                 actually use their own contributions so                                 I think there's real reasons to do it                                 the the hard part is the implementation                                 right so I mean what a model more I                                 guess that you brought up a boon to you                                 know where you kind of have a linux                                 kernel and additional pieces on top of                                 that like in my mind you'd have almost                                 like a cork or right and it when it's                                 less to work on it you can iterate on it                                 faster and we already have this kind of                                 model where drupal major drupal version                                 gets done then contribute towards the                                 end of it by like four feature feature                                 freezes what December so it seems to                                 like if all the focus even for like                                 usability and stuff like that or or                                 before we get to usability it's like                                 focusing on the core bits like we're                                 doing with whiskey and such early on in                                 the life cycle call that complete at                                 some point and then work on the more                                 product DP TSA's as like a separate you                                 know separate phase even right yeah it's                                 a good point all right so we have                                    minutes left so I'm going to limit you                                 guys to one question a person because                                 there's people in line for like                                    minutes that okay that's that's fine i'm                                 i don't know Andrew Jewish I guess I                                 wanted to kind of sparkle that I think                                  this really is a it's a social problem                                  it's but I don't really think it's                                  relevant how much code we download the                                  problem is who maintains it and speaking                                  as someone that worked really hard to                                  get a couple of modules pushed in the                                  core so I could never ever look at them                                  again and then totally abandon core I'm                                  guilty of that but and I think a lot of                                  people it's like you kind of work on                                  something and you're really sort of                                  passionate about it and you want to get                                  it into core because you want everyone                                  to use it and then you're so burned out                                  by the time that happens that you know                                  it's kind of like see on the other side                                  and and so I think I think that's kind                                  of the aspect is then now that's voice                                  it on everyone else and then they're                                  responsible for it and I think it's                                  that's the important part of the                                  discussion more than what code is                                  downloaded and executed by PHP because                                  it's easier to get a faster computer                                  it's harder to get a bigger development                                  community I agree yeah very well set I                                  think as we get bigger by nature will                                  get slower in terms of how we work                                  together so we need to keep keep making                                  changes to the way we work it's um often                                  it's too painful to get something in                                  court sometimes for the right reasons                                  sometimes it just because we kept adding                                  rules and rules and rules and sometimes                                  I feel like we have way too many small                                  little rules like sometimes I feel their                                  way to strict when it comes to coding                                  conventions for example like other                                  things which we could do is is like                                  sometimes issues get sidetracked by                                  coding conventions all the way in the                                  beginning so you know one idea would be                                  to have like architectural discussions                                  first and then you know get sign up on                                  the architecture and then only then                                  allow people to comment on the smaller                                  bits and pieces and these are things                                  which we could enable by making some                                  changes to project module so but you                                  know streamlining the way we work trying                                  to put more focus on the right process I                                  guess will help to some extent so part                                  of the social problems I think we can                                  engineer solutions for but obviously not                                  all of them all right um James gallant                                  and neck Lundell on drupal.org actually                                  a lot of us said was the discussion we                                  just came out but i'll add to it a                                  little bit but also on top of angie's                                  talk right before that from one to two                                  sams having a ball discussing get                                  workflows and what we can do with get                                  and how that can so it's kind of similar                                  to her talk and it's in the buff area so                                  if you're interested in that that's                                  another thing so a long time ago Drupal                                  five I kind of decided I was going to                                  help with core and you know did some                                  patches and it totally burned me out and                                  I walked away from it until just now                                  recently and what brought me back is                                  that we have actually already moved                                  ooh somewhat of a lieutenant model we've                                  we have initiative leads who are my                                  lieutenants so we're already kind of                                  moving that direction we're just                                  figuring out where we are and how to do                                  that and I think it's been really huge                                  to have that cuz it's allowed me to                                  become part of that architectural                                  process of designing things and help                                  with the patch but also a big problem                                  with and this came up and I can't                                  remember which core conversation it was                                  but somebody mentioned that if they                                  wanted to change comet module they                                  couldn't just make a patch and put it                                  out there and have it happen you have to                                  get some you have to get a group behind                                  you to get some sort of momentum to get                                  that patch through the whole process of                                  the issue queue because it is daunting                                  and when in the initiative you have that                                  group you have somebody a group that you                                  can build consensus with and when you                                  get to the issue queue you have                                  something that you can discuss and                                  people there there with you working on                                  that and that's been really huge at                                  least for me and I think that's                                  something we can learn from great thank                                  you so I'm Chris Vander water um eclipse                                  juicy I'm the blocks and layouts                                  everywhere initiative owner I like John                                  walked in a little late and what I got                                  was let's build an install profile where                                  we can play with user interface stuff to                                  see where core might should go do you                                  have some notion of where you'd like to                                  start like is there may be an existing                                  install profile that you'd like to maybe                                  just steal and start working from not                                  yet I mean I need to do some research                                  but i would like to for phoenix right or                                  just in general just in general um no                                  not really okay something that i want to                                  you know so it's ridiculously new but                                  panoply has been also really impressive                                  and given kind of where drupal lights                                  going it might be a good place to at                                  least look at and then i'll just i'll                                  make one comment about initiative owners                                  and walk away here but i've been telling                                  everybody that i work with you know                                  don't worry about                                  what is going to happen once we hit the                                  issue queue it's my job to take care of                                  that that's why I'm the initiative owner                                  you know just work hard on this stuff                                  and I'll go to bat for you and I think                                  like that's really I think that's the                                  message that we want to be sending as                                  initiative owners like we all know that                                  there's going to be some architecture                                  debate and they're going to be some bike                                  sheds and things like that but really                                  like when I accepted the position of                                  initiative owner it was it was I'm                                  willing to take those things on in order                                  to have people come behind me and you                                  know really build awesome stuff and go                                  to bat for that awesome stuff so I think                                  like yeah as much as initiative owners                                  need project managers and as much as                                  initiative owners need people coming in                                  and helping them work you know we might                                  be able to garner an awful lot of                                  support by saying you don't need to                                  worry about the core process for getting                                  this in that's my job just get on board                                  and help me build it and I think we                                  could all probably benefit from that so                                  oh great comments okay a shuttle manless                                  or a net track I just to get back to the                                  small core bake or debate I know they                                  just have a smarter core because right                                  now I needed to use a feed parser for                                  something and then I have to load all of                                  aggregator module and it adds a bunch of                                  stuff I don't want I just want that feat                                  part sir so what I want to see for core                                  is to separate the AP is and the the                                  actual backend stuff from the front end                                  stuff better so that you have that                                  division and then I can take the feed                                  bar so i can add my own sort of fun thin                                  to that and work on that same for like                                  Paul module and all these other sort of                                  controversial modules in core because                                  they have useful bits because you don't                                  necessarily want the whole package when                                  you just want that one little component                                  and I think that's where we're headed                                  with symphony and the the autoloader is                                  and stuff but I just you know that's                                  what I want from core so excellent cool                                  so by the way I need to do this how many                                  people know at Chatton very few people                                  but what you should know is that he                                  offered the dish the shared hosting                                  server on which Iran you know drop the                                  doric and grew Polidori and he's also                                  user to on d dodo and he's been gone for                                  a while                                  but what I just heard is that is all is                                  back also it was a quorum it was also a                                  core committer so I supposed to you know                                  yeah i'm i'm neil hastings at indy tech                                  cook are now debris at org um I've                                  pretty active in a contribs face but I'm                                  trying try and get into court                                  development for a while and everyone                                  knows the barriers in there what Chris                                  said earlier that's awesome not having                                  not someone like me having to worry                                  about that entire political process                                  about getting a major change in feel                                  like I can actually make a difference                                  instead of feel like I have to spend                                  hours at night away from my family                                  fighting in an issues q that's different                                  when I was eerily coming up here to talk                                  about i did have ideas around making the                                  kind of more efficiency around the core                                  process as far as the sub modules the                                  stub systems are are concerned when we                                  as we're starting to decouple these                                  systems in a which is which is group                                  working great we can start moving these                                  two sub repositories and get and have                                  the initiative owners or the subsystem                                  owners have commit access to their so                                  we're not held up on two or three people                                  on one project it's actually a pretty                                  common model many over source projects                                  use something like that we know symphony                                  uses the whole big eight components so                                  i'm wondering your thoughts on that and                                  i want to question something to sub                                  question with the rumors of github                                  offering drupal free hosting i'm                                  wondering why we turn that down that's                                  the                                                                  didn't know about the rumors                                  so the first question was about giving                                  more commit access right so I you know                                  in my mind it's never really been about                                  to commit access you know I'm happy to                                  pull in bigger patches bigger changes                                  but I still think it's valuable that                                  there is relatively few people that can                                  act as the gatekeepers for the code but                                  at the same time like not everything                                  needs to get to me as a micro patch like                                  I would be happy you know Greg is at the                                  mic but I would be happy to to pull like                                  you know a                                                               commit only takes you know                                                you know and the github thing you know                                  I'm gonna gonna take about that that                                  question in that's okay I don't know the                                  details there but i'm sure some other                                  people do i'm greg dunlap i'm on a                                  rocker on the internets um so I you know                                  a lot of these talks you know especially                                  as court grows in a lot of the                                  frustrations that I hear from people                                  that have been here and in discussions                                  like Randy Fay did one on governance                                  yesterday that was touched on all these                                  issues they're really about how we scale                                  as a community as Drupal gets bigger and                                  you know a lot of our frustrations that                                  I see in the core community like things                                  like I don't want to maintain features                                  that i don't use are really about the                                  fact that we don't have enough for                                  people to maintain them but if we grow                                  the number of core people to a point                                  where we have you know                                                   people that that introduces its own set                                  of problems to and you know that's part                                  of the problem with bike sheds right now                                  is that we have so many people with                                  disparate interests that talk about                                  things and so I'm just sort of wondering                                  what your thoughts are about not                                  necessarily well maybe from a technical                                  or a social aspect from how we we we                                  scale the community to grow to                                                                                                        initiative leads were obviously part of                                  that because I always view this is just                                  being basically project managers but                                  more if your interest if you've talked                                  about more formalized structure I mean                                  access is part of that to any any any                                  ideas or thoughts that you're thinking                                  about exploring about that right now                                  yeah so I think we do need to scale the                                  core team I really do you know I think                                  what's happening if you look at                                  comparable projects as they get bigger                                  as we get bigger I think we are                                  formalizing more things yeah we're                                  institutionalizing the way we work in                                  most other open source projects that                                  also meant more people because the                                  complexity increases at the same time                                  and that's the challenge right so you                                  need more people that can work in a more                                  complex environment right which is kind                                  of at odds with each other it's just                                  like a growing company really in a lot                                  of ways yeah so you need to put in place                                  more processes more structure but                                  ultimately what happens in or what                                  happened in other open source projects                                  is there is also people that started to                                  work full-time on just or because the                                  complexity became too much for you know                                  casual hobbyists to get involved in and                                  so if you look at Linux for example you                                  know the colonel is pretty much                                  maintained by people that are paid by                                  you know various organizations IBM red                                  hat and others to to build you know to                                  develop the core of the Linux kernel and                                  so if we are if we want to scale Drupal                                  by a factor of them I think what we what                                  we do need to do is we need to encourage                                  the Drupal shops in all of them or many                                  of them to put people to work on core                                  full-time and we need to encourage them                                  to do so because it's the only I think                                  truly scalable way it's the only                                  approach which in the long term I'm not                                  talking about you know tomorrow but I'm                                  talking about a world you know five to                                  ten years from now where you know the                                  world is much more complex it's the only                                  way to keep up with the pace of the web                                  you know we need we need to move faster                                  so have you look at like sort of the                                  opposite model is more like the Mozilla                                  Foundation where they got that                                  the development of Utah have you ever                                  thought about taking the DEA in that                                  direction or I have actually and I think                                  there's ways to and I working on an                                  initiative to try and get the larger end                                  users of Drupal to put money into a pole                                  if you will and sort of some sort of                                  funds which we can then use to fix you                                  know important issues in in Drupal core                                  so whether that will work or not and                                  I'll be if any of you if any of you big                                  corporations are in this room go to                                  raise after this it's good thanks a lot                                  it's cool i mean i'll be talking about                                  these more but the code name is                                  large-scale drupal which step you know                                  which is summarized as LSD so i'm                                  shannen mata Cespedes and the intertubes                                  I just had a question about Phoenix if                                  I'm not getting too off topic and if I                                  am then table it but I just wondering                                  who's working on that and where can we                                  read some more about it right so you                                  know it's nobody's working on it right                                  now but I hope to to work on this myself                                  with the help of a number of people at                                  Acquia as well as anyone else that wants                                  to get involved and it's think of it as                                  an experiment what I would like to do                                  there is maybe identify the top five or                                  top                                                                     experience improvements and try and you                                  know Adam on top of Drupal                                               the idea again to show all of you and                                  the rest of the world what Drupal                                       you know drupal                                                       terms of usability for people that enter                                  content I don't want to make it giant I                                  just want to make it a relatively small                                  distribution with just showcase just to                                  showcase a handful or a dozen of really                                  great improvements                                  such that we can hopefully hopefully                                  people will rally around them and say                                  actually this needs to be this needs to                                  be in core and I think it's a different                                  way of doing things like you know if you                                  look at Drupal                                                         started out with here is a screenshot                                  and it was hard to convince people that                                  it would actually make things better but                                  it did even though there's still people                                  skeptical you know the reason Drupal                                    has grown so fast is because things like                                  overlay frankly these kinds of usability                                  things but one of the things that worked                                  really well in my mind was the the                                  vertical taps stuff like there was a                                  module for seven or there was a                                  prototype and all of a sudden I felt                                  like people could see the value they got                                  excited because it could play with it                                  and so Phoenix in my mind is just an                                  experimental playground to play with                                  some of these things and make it easy                                  for people to to see what we could do                                  and then you know obviously to go to the                                  regular community process as whether we                                  think this makes sense to be included in                                  court or whether it is belongs in a                                  contribute module so I hope to be                                  working on this with you know like                                     people they may be working on this full                                  time for a while and then hopefully                                  people from the community and I think if                                  you're successful I think people people                                  all around may start from Phoenix when                                  they need to build a website that needs                                  to be used by you know people that spend                                  several hours a day entering content                                  just like people would start with press                                  flow when they needed to build a website                                  that either to scale right so that's a                                  little bit division and again it's                                  experimental but I think it could work                                  well so we have time for maybe you know                                  if we go fast maybe three questions if                                  not I'd like to cut it off okay hi I'm                                  Lucas I was one of the two people that                                  didn't raise their hand when you asked                                  I'm a drupal developer has in fact I'm                                  symfony                                                                bring a little bit of an outside                                  perspective or how we do things so we                                  have as Fabian explained yesterday we                                  have the components and then we have a                                  full stack framework and so four                                  components some of them have other                                  developers that are sort of nodding off                                  the pull requests you can go fabiana in                                  the end as a person that merges them but                                  on the full stack framework we actually                                  pull in a lot of third party                                  dependencies like ascetic for asset                                  management monologue for logging                                  doctrine for annotations and RM and all                                  that stuff and so when we do a release                                  we have the standard distribution where                                  we basically take the latest stable                                  version so all of these it also includes                                  some bundles which is our lingo for                                  modules and then we put that together                                  and that's then the next version that we                                  put out so it's similar I guess for the                                  like the lieutenant with a small core                                  approach and I think for us said so far                                  has worked well but also we are still                                  very young so we can't say that this is                                  I can be sure model that has worked for                                  decades either great thank you i mean i                                  think we can always learn from other                                  projects right so we should I'm John O                                  Schuster and I was intrigued by an                                  earlier comment about the need for                                  better date about what parts of Drupal                                  are used in in websites I'm willing to                                  put my shoulder that wheel a bit if                                  there's anybody would like to join me in                                  a discussion on that topic catch me                                  after the meeting and I assume it's a                                  real need grease so if anybody wanted to                                  take that on with me I'd be happy to put                                  my shoulder that wheel great thank you                                  one more question yeah it's about the                                  initiatives I have some minor comment to                                  do currently the initiatives are getting                                  some merges into the upstream core and                                  but I'm asking me myself in if are they                                  really following the way that core is                                  develop it I mean the I know that                                  initiatives are one of the exploring                                  approaches to help                                  following the tenement model which give                                  more flexibility but in my opinion they                                  should also try to follow the Drupal                                  core usual way of development that mean                                  for example they are not really using                                  the issue queue for communication for                                  example that they recently merges from                                  one of the initiatives they don't really                                  have the readable lock history so for                                  people that are not really involved with                                  Indonesia leaves it's pretty hard to                                  actually follow the development of                                  trouble if they are not inside the                                  initiatives if I think if it would be                                  great if they can if they can rework a                                  little the history before marriage                                  because it's pretty hard for people                                  outside initiatives actually to follow                                  the development of all development mine                                  I think these are valid points I think                                  initiatives are you we've never really                                  done this before I think in many ways                                  you're still in the sort of formation                                  stage each of the initiatives are run                                  slightly different and I think we're                                  learning what works and what doesn't                                  work and I feel like people are starting                                  to to standardize a little bit more than                                  maybe in the beginning on one approach                                  which is you know proven to work                                  communication is a big issue which we                                  talked about a lot you know we need to                                  be understandably to provide better                                  visibility into the progress of each of                                  these initiatives with the goal to get                                  more people in so they can help so well                                  so you know I thought this went great                                  you know there was a lot of people                                  asking questions which which is awesome                                  you know as always I think I think it's                                  great that we spend time talking about                                  these things and you know I wanted to                                  reinsure you guys that I'm very much                                  open to discuss these things and as                                  always i think i'm also open to making                                  changes I think that's the only way for                                  us to be successful                                  at the same time I think although it may                                  sound like we have big issues in front                                  of us and we do I think we should also                                  remember that we have made a lot of                                  changes already and that we are doing                                  extremely well right so one of the great                                  things about us you know core developers                                  is were always critical we're always                                  unhappy in a way right it's like we                                  release triple seven we have a big party                                  actually you know                                                         the world and the next day we're grumpy                                  again because it could have been better                                  you know and that's in many ways that's                                  great and we should we should foster                                  that at the same time I think Drupal                                  cons you know and other events are great                                  opportunities to also recognize all of                                  the success that we have and the fact                                  that we're doing many things right so if                                  you're in the audience and you're                                  starting to freak out because of all of                                  the issues that we need to solve you                                  know take a step back once in a while                                  and and you know realize that things are                                  actually going extremely well despite                                  the fact that we all want to make things                                  better as well so with that would like                                  to say thank you for participating and                                  attending and hope to see you around                                  thank                                  you
YouTube URL: https://www.youtube.com/watch?v=9SMmjxTen6Y


