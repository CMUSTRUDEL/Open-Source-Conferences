Title: DrupalCon Denver 2012: REAL WORLD PERFORMANCE ANALYSIS
Publication date: 2013-03-28
Playlist: DrupalCon Denver - March 2012
Description: 
	While there have been many presentations focusing on new and interesting ways to solve performance problems, very few have focused on how to find them. The first step to solving a problem is identifying what is wrong and this is something we don't spend enough time talking about. This presentation will focus entirely on how to analyse a poorly performing site and identify what is wrong. This presentation will start with an example Drupal site. This site will have very slow page load times and exhibit 3-4 problems I see commonly in consulting. These are going to be problems everyone has faced at one point or another; a slow view, a bad module, a misconfiguration, a theme causing problems, etc. The goal for this presentation is not to teach you how to solve these particular problems, but how to find and profile them in general. We will cover the basics of using xhprof, xdebug, devel module, mysql slow query log and more to track down problems such as these. The goal of this presentation is to give the audience some of the basic information, tools and resources to be able to find and solve these problems on their own and even avoid them entirely when designing their own sites. Topics To be Covered:
PHP Level Performance Analysis
XHPROF
XDebug
Strace
perf
Devel Module
Database Level Performance Analysis
MySQL Slow Log
Maatkit
Devel Module
Views Profiling
Briefly Cover Some Possible Solutions To Problems
Caching
Denormalization
Query Fixing

Questions answered by this session: 
Why is my site slow?
Why is my server load high?
My staging site was fast, why is my production site slow?
Captions: 
	                              okay I think it's about                                               have kind of stopped trickling in so um                               we'll get started and the lights will go                               down momentarily to make this easier to                               read my name is Narayan Newton I am one                               of the six administrators for a                               drupal.org and I've just been around                               doing sister administration and                               performance work in Drupal for a while                                now get here okay I was warned about the                                directional nature of this mike how's                                that okay great okay um so anyway as I                                was saying my name is Narayan Newton I'm                                a system inis traitor for drupal org                                I've done performance in Drupal for a                                while now um and this is actually one of                                the first presentations in quite a while                                but I'm excited about um because it's                                not a normal presentation like the ones                                i've done the past like I've done a lot                                of presentations talking about it                                specifically very high performance                                situations like trying to configure my                                sequel to absolutely saturated devices                                and how to deal with a my sequel server                                that you want to be incredibly                                concurrent in a vertical way or how to                                take a site and make it concurrent in a                                horizontal way and scale it out                                horizontally um and this is not that                                this is a much more a much more                                practical application and is much more                                me explaining my process and coming to a                                site that is performing poorly and how I                                deal with that the steps I go through to                                do that and why I think it's a good idea                                to do it very very iterative Lee and                                with a methodology you strictly stick to                                UM and i'll try to explain the reasons                                behind that basically I work with a lot                                of people and a lot of them are                                extremely good at exactly what I'm good                                at like the skills of knowing how to do                                a PC knowing how to configure apache                                configure my sequel use XD bug and web                                grind to go through                                Lou use a my sequel slow log analysis                                utilities to go through a slow log and                                figure out what the big problems of a                                site are and go into views and try to                                fix a view or fix it query in actual                                module code those are skills that are                                pretty pretty widely held at this point                                but what's what I've seen not widely                                held is the approach of going to a site                                that is extremely slow and not just                                being bogged down in minutia like I have                                clients that I've come to and the first                                                                                                     talking to their very skilled developers                                and sister administrators about the                                perfect way to configure a PC which is                                an opcode cash for PHP that is very                                important but once it's on and working                                the minutiae of trying to reduce its hit                                to disk is not something we should be                                talking about when there are you know                                   second page loads on the site APC is not                                going to fix that it's not going to                                really impact that in a way that we                                should be talking about and that                                knowledge of being able to address a                                site correctly from layer to layer to                                layer without letting yourself get                                bogged down in these little areas and                                trying to get the low-hanging fruit to                                make a site usable the quickest and make                                a site fit its goals the quickest is                                something i don't see talked about so                                i'm going to try to really focus on that                                here um and this is not a presentation                                so this is one of the worst ideas I've                                ever had i'm sure and we'll see how it                                goes um i have a few more slides past                                this and then i'm going to exit to a VPS                                that's running on my laptop that has a                                site that i have configured to be                                terrible and we are going to debug it                                together                                uh he's gonna come back and try to dim                                the lights I don't I don't know how to                                is this hard to read okay                                there we go                                thank you okay so the first step is we                                are coming in either you know either                                we're a new hire to a company or we have                                a new client or we're just we finished                                development on a site and we need to do                                the performance work at this point or                                 figure out why it's going so slow on the                                 production server when it was fine on                                 staging or something has changed and now                                 it's really slow there are a number of                                 reasons for this what the client or what                                 your boss or what the users will always                                 say is it's slow or the front page is                                 slow or it's down all the time these are                                 not useful metrics um they fully believe                                 they're useful metrics like I'm not                                 they're trying to help but it's not very                                 useful it's not really indicative of the                                 problem in many cases it's a good start                                 but usually when I start talking to a                                 client I need to start getting a lot                                 more details from them what sites are                                 slow is one that is a weird question but                                 sometimes they're talking about a site                                 that is completely different from like                                 their front page or their main site and                                 I have gotten like                                                 engagement before they pointed that out                                 so I was when I mention that what pages                                 are slow is it slow for anonymous users                                 is it slow for authenticated users do                                 you only have anonymous users what is                                 the load pattern for the site is it                                      anonymous authenticated is it a t                                      it you know five to six people on the                                 site all the time until a commercial                                 comes up and then hundreds these are all                                 questions that need to be asked at the                                 beginning because otherwise you're just                                 going into a site that is incredibly                                 complicated it's Drupal it's stacks of                                 modules and themes on top of that it's                                 PHP it's Apache it's possibly varnish it                                 pop possibly memcache my sequel the                                 operating system beneath that is the                                 hardware virtualized is the hardware                                 virtualization done right is the sand                                 that the hardware virtualization is back                                 ended too overloaded these are too many                                 quest                                 to address just all at once limitations                                 are good in design and engineering in                                 almost everything and the first                                 conversation with whoever the                                 stakeholder or client is for a website                                 that i have is trying to find those                                 limitations so if they're going to say                                 it's all anonymous that's a huge                                 limitation that is extremely useful if                                 they're going to say anonymous users                                 load the site in under a second and                                 authenticated users load the site in                                    seconds that's incredibly useful                                 information that means caching is                                 working that means that if an honest                                 users aren't complaining their cache hit                                 rate is high maybe they're not posting                                 articles that often maybe block caching                                 would be useful these are all things                                 that you get from these conversations                                 that are very important to have and                                 honestly I'd say just as long as                                 possible as much as we hate meetings the                                 longer you can talk to a client about                                 exactly what the load patterns and goals                                 for a website are before you start                                 performance analysis is extremely useful                                 and take notes even though I'm terrible                                 at that so we define goals and load                                 patterns to maintain focus for our                                 example here is our goal and our                                 patterns we're going to say that it's                                 split down the middle we have fifty                                 percent analyses raise fifty percent                                 authenticated users this is by far the                                 worst case um just because you have no                                 one way one place to focus and the                                 anonymous users are just as important as                                 the authenticated users because they                                 lead to new users but the authenticated                                 users let's say are paying so we can't                                 ignore them either and our goal is eight                                 hundred millisecond latency that means                                 from the time that the request starts we                                 want that first bit of data of the                                 actual site to be delivered within eight                                 hundred milliseconds note that this does                                 not take into account front-end                                 rendering time at all we're not going to                                 talk about that at all that is its own                                 presentation its own conference it's no                                 so we're just going to talk about the                                 Drupal actual bootstrap and page output                                 which is also extremely important which                                 is why it's often focused on                                 so our first step is we've had this                                 conversation with the client we have                                 some load times some complaints about                                 specific pages some ideas about load                                 patterns and now we need to step away                                 from the client and assume that they                                 just lied to us that everything they                                 said is wrong and in fact that they have                                 never been to the page and are visiting                                 Google and reporting those results so                                 we're going to start that our site is                                 Drupal                                                                  developed its arm there's about                                         notes about a hundred thousand users so                                 it's a fairly large site and its larger                                 than I wanted it to be um because if                                 you're going to do this sort of                                 presentation I highly recommend you                                 don't put an SSD in your laptop before                                 you do it's amazing how quickly SSDs can                                 do full table scans ah so we're going to                                 exit add this now and here's our site                                 now I'm use firefox for this you can use                                 Chrome Safari whatever the important                                 thing is you need something like either                                 Firebug or chrome developer tools or                                 Safari web console or something like                                 that um you need a net console to show                                 how quickly the front page is loading                                 and how quickly the resources are                                 loading and the headers for all of those                                 things when you're going to start                                 looking at the performance of sites so                                 here's our front page the first thing                                 we're going to do is say okay the client                                 said the front page was slow let's load                                 the front page and while it's loading on                                 a note that I loaded it before and so it                                 is slow is                                                           actually extremely slow that's the point                                 where users start leaving the site                                 actually that's beyond the point but at                                 this at this level of slowness new users                                 are only going to stick around if they                                 have an invested interest in coming to                                 the site and basically there's going to                                 be no no users coming in just because I                                 thought it looked cool those people                                 aren't going to wait                                                 your google pagerank is going to go down                                 from this and likely your servers are                                 going to go down                                 get load okay so we're going to start                                 actually taking some notes here so that                                 took about eight seconds to load we were                                 also told that there's a gallery feature                                 and that that's terrible and so we're                                 going to load that and while that's                                 loading we're going to load an article                                 page                                 okay why we're doing this is because                                 oftentimes you'll get instances where a                                 client doesn't realize what they're                                 actually doing for example the best                                 example I have is old Drupal                                         with the admin toolbar turned on or                                 admin menu I guess is what it's called                                 admin menu actually makes sites pretty                                 slow in some cases and oftentimes a                                 client won't realize that what they're                                 seeing for example just if anyone's used                                 admin admin bar there's a place where                                 you can switch users and lists all the                                 users by role um that's an incredibly                                 bad brewery so sometimes clients don't                                 realize that their site may actually be                                 performing fine and they just don't know                                 this is not one of those cases this this                                 page just took                                                         base just put took                                                    and now we're going to login                                 and so we update this because we're                                 going to do everything very very strict                                 I'm not going to load this but that is                                 also                                                                    the same page and once we login we have                                 a favorite content view and the client                                 is also reported that this favorite                                 content view while it's pretty pretty                                 required from a feature perspective                                 people are reporting that it times out                                 and it's just it doesn't load in time at                                 all and we're seeing that right now                                 because it took it took                                               seconds flow so now we have some                                 validation at this point it's very                                 tempting to turn on the developer a list                                 go to these pages and go through every                                 SQL query there and try to figure out                                 what the curry is that's causing this                                 problem and I'm guilty of this all the                                 time like this is it seems like a                                 natural step but the problem is that it                                 doesn't represent what might actually be                                 going on like for example what if                                 there's a block that's cached some of                                 the time but in some cases does run and                                 is slowing down the site and that's what                                 we're seeing and that's what people are                                 reporting but if we reload this in the                                 devel query list we might not see it and                                 then we have to start iterating on that                                 specific page and suddenly it's already                                 done we're already locked into a                                 specific page we're looking for a                                 specific query and we're not doing an                                 overview anymore and we're going to miss                                 things we're going to miss things that                                 might be extremely low hanging fruit                                 that we can fix very quickly and it's                                 just one of those areas that I'm going                                 to point out repeatedly of times where                                 I'm tempted to skip and go to something                                 in particular when I really should be                                 zooming back out to try to look at the                                 big picture again it's almost never                                 incorrect to stop what you're doing and                                 relook at the big picture the things                                 you'll waste time you'll definitely                                 waste time but the one in five times                                 where you zoom out and find this piece                                 of low-hanging fruit is on every single                                 page and runs you know                                                minute and is taking a huge amount of                                 time is well worth the time you might                                 waste by it while zooming out                                 to try to fix something when you could                                 have just gone in and fixed it right                                 there so we know now that there's                                 definitely some bad queries on this page                                 likely it's taking a long time to load                                 so what we're going to do is not assume                                 that they're bad queries but we are                                 actually going to go in and i already                                 have developed but i do not have any of                                 the develop options enabled we're going                                 to go in and say display the quarry log                                 we're going to go in and say display the                                 page timer display memory usage and safe                                 and now we're going to reload just the                                 front page because we're zooming back                                 out to try to make sure that in the page                                 timer all we're doing here is we want to                                 look at the page timer and make sure                                 that the SQL query time is dominant                                 because we think that queries are the                                 problem here but we don't know the crews                                 are the problem here and before we                                 switch on to the my sequel server to see                                 what's going on we need to know and here                                 it is we have confirmation that queries                                 are the problem careers themselves are                                 taking eight point five seconds on the                                 homepage now again it's tempting to                                 scroll down here and start looking at                                 why and I would advise you not to in                                 this kit in this particular case it                                 would work but in the general case it's                                 not a good idea so now we're going to go                                 over to the actual vm this is running on                                 how many people have used the my sequel                                 slow log in any way great how many                                 people have used a slow log analysis                                 utility great okay so we're going to use                                 something called the pro kona toolkit um                                 it used to be called matt kit before                                 that it was called something else i'm                                 hoping they don't change the name next                                 year and what we're going to use is PT                                 query digest which is a tool that you                                 point to a slow log and it does analysis                                 over the slow log giving you a list of                                 the top slow queries aggregate so this                                 is much better than just looking at a                                 slow log because you get an aggregate                                 view of queries by count and curries by                                 execution time and it even biases it so                                 if a query runs                                              takes you know                                                         another query runs five thousand times                                 and takes in total about five minutes                                 it's still a bad query the one that runs                                 less but takes more time is going to                                 float to the top above that one and                                 that's something that's useful because                                 for a while these great digests                                 applications actually favored count a                                 lot more than runtime so we're going to                                 make sure that the slow log is enabled                                 and it is and it's set for a long time                                 of two seconds I would probably set it                                 to one but it doesn't really matter for                                 this case                                 how's that                                 how about that                                 ok this is what a PT query digest looks                                 like right here is a summary for                                 everything it's semi useful but not                                 really when you're looking for a problem                                 curry and you already know that your                                 queries are bad um that is useful if                                 you're going to run this on cron and                                 have email to you and it can kind of                                 tell you when things are going off the                                 rails this is now too small um this is                                 one of the most important parts these                                 are the ranks for slow queries by their                                 time total the number of calls and the                                 end the app decks score which is                                 actually fairly cool that's a new                                 addition and so we're going to go                                 through this and we see here's our first                                 query every query will have a decree                                 time distribution and it actually tells                                 you the distribution of how long story                                 runs because the query will sometimes                                 vary by the arguments you give it                                 actually quite often I'll vary by the                                 arguments you give it for example the                                 most common cases is if you have a                                 listing of content by author for example                                 on a user page if you have a admin user                                 that is going to migrate in a bunch of                                 content from an old site and you                                 accidentally make that admin user own                                 all of the migrated content it's very                                 likely that that curry is going to                                 perform extremely poorly for the admin                                 user but fine for everyone else so this                                 allows you to actually see if that's the                                 case um which is very useful because                                 again it prevents you from wasting time                                 so going down here we see that this is                                 SQL no cache and it's a straight select                                 so this is likely a backup job so we're                                 gonna skip it and go down to this one so                                 this is our first real slow query and                                 I'm not going to expect everyone to look                                 at this and know where this query is or                                 know what it might be or even how to fix                                 it basically what I want to do is show                                 everyone how to find it here and                                 possibly report it definitely keep an                                 eye on it like know what this is no have                                 this open in another window for our next                                 step so that we can we can map this                                 query to where it is on the site so that                                 we can figure out that okay this is our                                 top real Prairie                                 and it occurs on these pages and just                                 that piece of information is extremely                                 useful and much better than this page is                                 slow and of course much much better than                                 the site is slow and at that point you                                 can go either try to fix the core                                 yourself or try to find someone to give                                 you help in fixing the query and it's a                                 big jump forward but so we have this the                                 big thing I note here is odor order by                                 note comment statistics last comment                                 time stamp I'm likely to use that to                                 identify this query and we're going to                                 go on this is pretty much the same query                                 above but you see it's select count star                                 basically when you see that you                                 immediately think this is a patriot                                 query and this is the count to show how                                 many pages could be in this pager                                 amusingly this is one of the worst                                 culprits in standard websites that have                                 complicated views and lots of data a lot                                 of times a solution for a view that is                                 performing poorly and can't really be                                 fixed is to turn on what's called the                                 light pager which is a module that sadly                                 has not been fully ported to Drupal                                   yet there is a patch that you can apply                                 but for Drupal                                                        does is it doesn't run this select count                                 it just says next page so instead of                                 saying one two three four dot dot dot                                 and then the end page it just says next                                 and with that little difference it can                                 actually make a huge impact on                                 performance because the first query that                                 runs has a limit on it and that limit                                 allows my sequel to optimize it in very                                 interesting and really effective ways                                 whereas the actual count query not so                                 much a views light pager views                                 underscore light page or one word                                 um at the moment you wait for views                                 light pay sure to be ported but also for                                 views for Drupal                                                   smarter so that's nice because it                                 actually for that count often times it                                 will remove the order by which is very                                 nice um but for now I I've actually used                                 light pager and with that patch there's                                 an issue open for reporting it to d                                      it works and the patch is very limited                                 so if you really need it you can likely                                 just patch it I would expect a release                                 soon because it is actually fairly                                 widely used okay next one this and again                                 like you look at this and you've got no                                 idea what the hell this is but what I                                 want you to do is either have you know I                                 can identify this by this right here and                                 that's what I'm going to do but what I'd                                 recommend is you have a text editor open                                 and just copy these like the top for                                 queries if their dominant for a site                                 into the text editor so that in our next                                 step and in your next step you'll be                                 able to identify them and map ok this is                                 in the slow log and it appears on these                                 pages that's a very crucial step to this                                 so that's our that's our third real                                 query and this is our fourth um and this                                 one I'm again going to identify by this                                 right here because it's actually this is                                 actually pretty identifiable but again                                 what you do is copy this to a text                                 editor and this is actually a duplicate                                 um you're gonna have to look for these                                 these slow query analysis tools often                                 will they're very good for what they do                                 but a lot of times they'll not be able                                 to match something exactly especially                                 with how Drupal does it so there might                                 be duplicates and you just you just kind                                 of have to look at the query and go oh                                 that has all the where conditions joins                                 same joins same type of joints and same                                 order biases that query up there and                                 here's another page or query that we're                                 going to note but kind of ignore and                                 that's it those are the only slow                                 queries so we have a few page requires                                 and basically three other queries that                                 were interested in here and at this                                 point the difference might seem a little                                 small but instead of going through the                                 developer listing per page we now                                 absolutely                                 these are the three slow queries they're                                 completely dominant in the slow log the                                 slow log is is going to contain                                 everything over two seconds in this                                 example and our pages are loading in                                 eight seconds or more so that's going to                                 be good for us and now we can go back                                 and go to the query listing per page and                                 figure out exactly what these are so                                 we're going to go on the front page and                                 we're gonna start scrolling down and                                 we're see                                                               we're way above that                                                    we're going to keep going and bam five                                 seconds two seconds here's the pager                                 query here's the regular query and we                                 can see that this is a view views plugin                                 which makes our job much easier we're                                 now going to just scroll through the                                 rest of this to make sure that there                                 isn't something else and there isn't so                                 now because this is views we got a break                                 which is the last time I'm ever going to                                 say that from a performance perspective                                 so we're going to go into structure and                                 views and settings and advanced                                 and we're going to add few signatures                                 and whenever you live                                 and what we're going to see is it now                                 there is this right here the signature                                 so this is tracker block one and that's                                 the brake if it's a view we can turn on                                 view signatures and know exactly what it                                 is and that's amazingly useful                                 especially for drupal                                           everything is done through a query                                 builder and it's very very hard to find                                 things in the great builder so now you                                 get to know exactly what view is the                                 problem in this case it's the track                                 review and what you'd probably do is                                 either ask someone for help go through                                 the issue EQ or just google search                                 because actually tracker is a pretty                                 common query to have problems and what                                 you'll probably see is hey you don't                                 need the pager and the Pacers a problem                                 and hey you might want to cash it                                 that's it                                 and so what that's going to do is this                                 view the queries still terrible I the                                 tracker curry is terrible um there's a                                 way to fix it called track or two but by                                 default is it's awful but now we're not                                 running that pager and on the second                                 load this block is going to be cached                                 and this block appears on every page so                                 just with disabling the pager we've cut                                 out two seconds and with it cash we've                                 cut out a total seven seconds from every                                 page load now what I'm going to do is                                 I'm going to go to favorite content and                                 do this one and then I'm going to back                                 out of SQL for a bit um the favorite                                 content page is one of the problems that                                 was highlighted by our client and we saw                                 that there were a few we saw that there                                 are a few SQL queries in the sill log                                 one of them is actually this um one of                                 the things I highlighted was an order by                                 flags and that's often what the favorite                                 content any sort of favorite content                                 view page block is likely going to be                                 flagged based so we see that that is                                 exactly that here it is order by flag                                 content this is exactly the line that I                                 I highlighted in the slow log so in this                                 case this is one of those areas where                                 okay this is a lot of content that seems                                 like too much content for me to have                                 actually favorited I'm going to go in                                 here and one of the biggest mistakes I                                 ever see is that this isn't actually                                 showing favorited content is showing all                                 content sorted by your favorites at the                                 top this is an idiom that is almost                                 impossible to make perform without                                 writing your own module what I recommend                                 is to have a listing of content and then                                 a listing of flag content and keep them                                 separate and then this relationship                                 include only flag content and that will                                 actually this full-on fix this it                                 doesn't really have much to do with my                                 methodology here but I wanted to include                                 it because I've seen it so often um it's                                 an extremely easy change to make and                                 just having two listings of views                                 usually doesn't break a feature                                 okay so we've made two changes we've                                 removed the pager from the track review                                 and we've made this only list flag                                 content now we're going to stop and back                                 out we're going to back all the way up                                 and see what the impact was on these                                 pages and basically this go back to our                                 global view and make sure that these                                 changes we made our a helping and be                                 there isn't something else there's a                                 problem                                 so the first thing I see is that took                                 too long like we should have fixed that                                 this is six seconds and it was                                    seconds so that's better but six seconds                                 is still too much and we look here and                                 the curry time is still pretty high the                                 execution time is higher that's weird                                 and then I'm gonna start looking through                                 here and see that things are looking a                                 little bit odd these are a lot of                                 registry calls these are a lot of paths                                 calls wait a minute we fixed this this                                 should be cached so at this point I back                                 out again and go check the caching                                 settings                                 and while there is a de minimum cash                                 lifetime set which there should be and                                 we're not cashing for anonymous users                                 that shouldn't impact any of the things                                 I just saw so I'm going to fix those                                 make a note of that go no further in                                 this I'm not going to set it varnish I'm                                 not gonna do anything like that because                                 I just found something that's a global                                 issue that I need to continually back                                 out and try to find the solution for so                                 now I'm going to back all the way out of                                 SQL even though there are still bad                                 breweries we're going to note that there                                 are still bad to queries and back out                                 and i'm going to use something called XD                                 bug XD bug is a PHP pekel module and you                                 install it it's a it's in I us or EPL if                                 you're using sent OS it's in pretty much                                 every distribution at this point                                 somewhere and you can stall it easily                                 and then what I do is I enable the                                 trigger if you don't do this you're                                 gonna have to enable it globally and                                 trust me you don't want to so the                                 trigger allows you to append this to our                                 URL and then that URL be will be run                                 through XD bug so let's do that the                                 other thing I'm going to show you is                                 that I have put web grinds and if you                                 just google web grind is the first hit                                 and this is I think the easiest way to                                 look at this output and I just stuck it                                 in the webroot it's very easy to install                                 you've literally just stick it in the                                 web root and all it does is it looks for                                 these cash cash grind files that XD bug                                 produces in temp and so it'll it'll                                 automatically just pick the newest one                                 you just open up web grind press update                                 and old parse it and that's all so how                                 many people have ever seen this screen                                 before fantastic okay so the first thing                                 I noticed here is yeah we clearly still                                 have some curry problems what I also                                 notice is these two lines now I don't                                 necessarily want everyone or I'm going                                 to say that everyone should be able to                                 instantly look at this and pick out                                 those lines more I want you to just keep                                 keep poking at things that don't look                                 right and keep zooming back out all the                                 way back out to the original page load                                 I'm and trying to work your way back in                                 to figure out what the actual problem is                                 so one thing you should note is memcache                                 connect should never ever be this high                                 and the theme process registry really                                 should only run once unless caching is                                 broken and we already saw that we've                                 cached a block and it's having no impact                                 all of that put together means caching                                 seems broken so let's check our settings                                 we were using memcache okay let's try to                                 connect to memcache you can use telnet                                 for this you just tell that to the IP                                 and on the port well that doesn't look                                 promising is memcache running yes is the                                 firewall running yes do any of these                                 ports look like the memcache ports no so                                 we have no caching is what we took away                                 from this there may be easier ways like                                 they're definitely faster ways to find                                 this you could just decide that for                                 every client you go to your going to                                 audit their firewall but that's fairly                                 difficult to do sometimes it's                                 impossible to do and that doesn't count                                 all the other issues that you might hit                                 on a standard client engagement or any                                 sort of engagement whereas what we just                                 did no matter what the issue is if we                                 keep backing out and going okay it's not                                 it's not a query because we cache that                                 query we're looking at PHP execution                                 time and we're seeing something weird if                                 you just keep doing that no matter what                                 the issue is you're going to find it                                 you're not going to have to have these                                 lists of one-off things that you're                                 always going to check everyone will have                                 that list to some extent but it's not                                 something you should count on so                                 suddenly things are looking a lot better                                 this page is loading much faster much                                 faster if we go down to the developer                                 listing we're seeing that hey there are                                 a lot fewer a lot fewer calls here that                                 should be cached but look at this                                 there's still a bunch of registry calls                                 so and what I just did is wrong so what                                 I just did is I looked at oh there's a                                 bunch of registry calls and what I was                                 about to do is go look at the theme                                 because in my head I have a rule that                                 says if the registry keeps being rebuilt                                 someone somewhere has put a registered                                 rebuilding the theme that is not                                 something you should do and it's                                 something that I still do clearly                                 because I almost just did it there but                                 what we're actually going to do is we're                                 going to run a red web grind again                                 it's that easy by the way you just                                 refresh web grind and it'll find the                                 newest file Hey look memcache connect is                                 not here file scan directory seems                                 weirdly high register check seems Ridley                                 high registry parse files this is wrong                                 if you just look at this this looks                                 wrong the registry is being rebuilt so                                 now we can back up and go okay I                                 validated what I think is happening and                                 what I'm going to do is look in my theme                                 which in this case is Bartok and look                                 for a registry call and I've hopefully                                 even highlighted that is a terrible idea                                 so I'm going to delete that I'm gonna                                 restart apache because it's one of my                                 tix to make sure that a pc isnt caching                                 completely i'm going to go back not run                                 the profile this time reload it twice to                                 load the cash and look no registered                                 calls so                                 now clearly that was completely                                 contrived but how I showed how to                                 actually find it is not and that's what                                 I'd do if I if I hadn't caused the                                 problem that's exactly what i would do                                 to back out and find it so what we have                                 at this point is a knot we've focused on                                 authenticated users of fun to katie's                                 users are narf now fast for this page                                 and for favorite content I'm not going                                 to touch gallery because I'm actually                                 running out of time it's kind of boring                                 but basically what I do there is the                                 exact same idea is go to the developer                                 listing match it to the slow log to make                                 sure that we're looking at the right                                 query because there might be another                                 slow query on the gallery page but if                                 it's like a one-second query and it's                                 not in the top of the slow log ignore it                                 it's not low hanging fruit you'll get it                                 on the next iteration just stay very                                 iterative and only do exactly what                                 you're trying to do and don't get                                 distracted by other things make a note                                 of them but don't get distracted so                                 we're going to back out this and make                                 sure because we've only covered                                 authenticated users at this point mostly                                 because anonymous users are easy but                                 we're going to make sure that yes                                 anonymous page caching is working and I                                 was actually planning on going into                                 setting up varnish because I have it                                 almost like mildly set up but it's                                     for which means they're about                                            left and I really wanted to take                                 questions so I'm actually gonna leave it                                 up to you guys do you want me to cover                                 just setting up varnish to tune for all                                 anonymous users or do you want to go to                                 questions okay                                 so at this point I've gone through I                                 think about two iterations we've found                                 that there were PHP execution time                                 problems mainly the registry rebuilding                                 we've gone through the slow log we have                                 not tuned my sequel you might note                                 because we went through the slow log and                                 found actual real slow queries and that                                 was the low-hanging fruit tuning in this                                 set up actually my sequels tuned                                 horribly this is a                                                     using i think eight Meg's of buffer pool                                 it's terrible but that's not the                                 low-hanging fruit and we're going                                 iteratively and strictly trying to get                                 the big problems and not focusing on the                                 random stuff we find along the way so                                 what we're going to do is we're talking                                 to the client the client is happy with                                 authenticated user performance now it's                                 under                                                                 really care anything beyond that but                                 they are unhappy that with anonymous                                 users it's fast but it's not as fast as                                 it could be these are the new users                                 coming in and there's a commercial                                 coming up and they're not sure going to                                 their be going to be able to handle the                                 traffic so we're back outing backing out                                 at this point and saying okay varnish                                 would help you a lot so what we do                                 because this is Drupal                                                  going to enable through po                                         varnish and having worked on press flow                                 for a really long time you have no idea                                 how nice it is to just uncomment these                                 two lines so what this is is the magical                                 almost undocumented tunable to make                                 varnish work and mainly it's this one                                 this one you can set in the UI but I                                 tend to like setting it in settings dot                                 PHP because the for some reason people                                 just go into the performance panel and                                 just change things so I like setting                                 things in settings on PHP at least then                                 they get frustrated and then blame you                                 know so in Drupal                                                        to use press flaw in Drupal                                      built-in in press villa for drupal                                   basically the process is a little bit                                 easier actually because you install                                 press flow and then you go to the                                 performance pain and everything's just                                 there there isn't                                 magic tunable you could argue well you                                 could go to the drupal                                                   find the actual argument pro and con                                 that but but that's how it is so now                                 drupal will send the correct headers                                 basically and what varnish does is it                                 proxies your request to drupal and                                 drupal says to varnish hey you can cash                                 this page for this long assuming this                                 isn't true and that assumption is it                                 saying very on cookie what that means is                                 it's telling varnish hey if a request                                 comes in and that request has a cookie                                 and your object in your cash has a                                 cookie unless those two cookies are the                                 same don't cash so what we're going to                                 do now is look at varnish I've already I                                 have already installed and configured                                 varnish except I didn't configure it                                 what this is is actually copied and                                 pasted off the four kitchens wiki this                                 is a vcl that at this point almost the                                 entire community has contributed to i'm                                 going to edit my slides and add the                                 links to these various things i                                 mentioned to the end of the slides and                                 then put them on the node for this                                 presentation and this will be part of                                 that so all you really have to do is                                 install varnish put this vcl in the only                                 part of this vcl you should really pay                                 attention to is this there are a bunch                                 varnish doesn't cache cookies basically                                 is the default you can think of what                                 this says is I'm going to look at every                                 request coming in and I'm going to strip                                 off the cookies I know don't matter to                                 the back end they don't make this                                 request different what makes this                                 request different the session cookie if                                 you have a dumb module I'm not gonna                                 mention a name if you have a dumb module                                 that sets sets of cookie to decide                                 something like showing a block and                                 that's not in j/s that matters to the                                 back end things like Google Analytics                                 things like a lot of packages that track                                 paths through websites that's all done                                 in front end gjs and you can strip those                                 cookies and cache the request so what                                 you do is you basically you add the                                 identifier to the cookies you want to                                 strip to this little thing and they're                                 separated by these pipes it's just a                                 regular expression                                 it's very simple at this point you can                                 look and varnish is configured to listen                                 on port                                                                vcl by default it wants Apache the back                                 end to be on port                                                        do is go into the patchy configuration                                 search for the listen line which is here                                 which decides Apaches port and set it on                                 a DAT then we restart apache restart                                 varnish or start varnish                                 okay yes if you have a virtual host that                                 has its own listened directive you don't                                 have to change that as well what he said                                 is to make sure that your virtual hosts                                 don't screw up the port um and then if                                 we go here while it was fast before and                                 this is why Firebug is eternally useful                                 if we look we see that X Drupal cash was                                 a hit we're passing through varnish now                                 and it was a Miss we're going to clear                                 our cookies because if i press force                                 refresh it's going to actually force                                 refresh the cache                                 and still miss nice                                 that's fine um so that's okay here's how                                 you debug that furnish has a utility                                 called varnish log that actually logs                                 the request so we're going to make that                                 request again oh and it's a firefox                                 being stupid so this happens a lot um                                 browsers have decided that they're not                                 going to respect anything anymore which                                 is just fun so we did hit you can see it                                 right here here's the request coming in                                 we do a lookup we hash it and we hit and                                  then we delivered and it's a three or                                  four not modified so it worked it just                                  didn't show that it worked because what                                  happened is Firefox requested if the if                                  the data had changed and it didn't and                                  Firebug right now sadly doesn't update                                  headers when that happens so I don't                                  know it's just one of those things that                                  if you're really unsure just go look at                                  varnish log it's it shows what is                                  actually happening your browser likely                                  doesn't which is if you're using Chrome                                  your browser just doesn't um Firefox is                                  semi-close to reality Suvari is actually                                  wrong in some cases like entirely                                  entirely wrong um so if you're gonna use                                  varnish be very comfortable with varnish                                  log because it's absolutely your friend                                  so we're now using varnish we've backed                                  up we still have things left to do like                                  a pc isn't configured at all um not in                                  the slightest my sequel is completely                                  unconcerned and were basically reading                                  everything off disk but the page is fast                                  we could have spent exactly it's time                                  we've been here for a little bit less                                  than hour we've been here for like                                     minutes we could have spent this time                                  configuring a pc i can spend                                             configuring a pc especially for drupal                                    we could have spent three hours                                  configuring my sequel but because we did                                  this iterative process continually                                  making sure that we're absolutely                                  focused on exactly the goal we have a                                  fast website without doing that and we                                  can either stop now and be happy that                                  the site meets its goals                                  or more likely we can iterate from here                                  with a much happier client or much                                  happier stakeholders and spend more time                                  on these issues that matter but I would                                  still recommend like even when you're                                  going deeper at every level back out and                                  make sure what's happening works for                                  example a PC does anyone here know about                                  the include once override for a pc okay                                  for those people that don't um the                                  include once override basically when                                  configured correctly makes it so that                                  instead of Drupal touching all of its                                  PHP files basically all the time                                  whenever it feels like it whenever a                                  wind really comes through slightly hard                                  arm a pc will override those and make it                                  basically touch the cash instead you                                  wouldn't think that would be a big deal                                  but a lot of places have for example                                  their web routes on NFS or they have                                  pretty slow drives or they're just                                  having a huge amount of traffic you can                                  definitely throw enough traffic at a                                  single web server that those little                                  those little touches on the disk start                                  mattering when you start configuring a                                  PC you're going to realize that actually                                  making that work is incredibly hard to                                  do and the only way to really do it is                                  make a change a single change and back                                  all the way out because there's no other                                  way to make sure that things are                                  actually working in theory it's two                                  settings an actuality is to settings                                  making sure you're not doing specific                                  things with your PHP code making sure                                  the cash isn't doing specific things                                  making sure apache is configured                                  correctly you have to keep backing out                                  and that was the goal for this                                  presentation I guess was not really                                  along the way I showed you know kind of                                  fixing this site partway showing the                                  bruh kona toolkit and how to go through                                  a slow log showing a little bit of how                                  to setup varnish showing a little bit of                                  all these different ways but the goal of                                  this to try to is to try to get across                                  how i approach these sites and how I try                                  to I fail a lot but how I try to                                  maintain to this street strict method                                  methodology of staying focused and                                  continually looking globally because I                                  don't see it done that often and in my                                  view is incredibly                                  school so we have about                                                  does anyone have any questions                                  he asked if they include once conflicts                                  with PHP                                                                  honestly they include once it conflicts                                  with almost everything um you could say                                  the same about a PC honestly uh it's                                  it's an incredibly useful thing by PHP                                  without a pc performs terribly and it                                  has performed terribly for a long time                                  but it's a hack and it's the most                                  enterprise supported maintained hack                                  that I've ever seen but still a hack and                                  you just run into problems include once                                  override is an amazing thing that I was                                  really excited about right up until i                                  started using it which is depressing                                  it's wisest administrators drink so in                                  the beginning you showed how to use slow                                  log to identify the bag queries but then                                  you just went into Firebug or not in the                                  Firebug you turned on the option the                                  develop module will see the group so why                                  couldn't you just go directly to those                                  queries on the developing right okay so                                  what I was trying to get across with                                  that is that um so you can you can turn                                  on develop the developer a listing and                                  go through page by page to look at those                                  slow queries what you would have to do                                  and you can do it this way actually what                                  you'd have to do is you need to have a                                  notepad or text edit or spreadsheet and                                  you need to look at those queries go                                  through the pages and say okay this page                                  has three slow queries this page has                                  four slow queries this place has five                                  slow curries where do they overlap which                                  one should I fix these queries can take                                  hours days weeks to fix you need to be                                  able to prioritize this or you're going                                  to be spending a huge amount of time on                                  something that didn't end up mattering                                  which is I'm sorry I apparently didn't                                  explain that particular point well                                  because that was one of the point                                  someone to get across is that it's                                  fairly easy to open up the velcro                                  relisting and go through and start                                  fixing random slow queries but what                                  separates out someone who can come in                                  and fix a site in a day from someone who                                  can fix random slow queries is being                                  able to find a way to prioritize what                                  you're doing and in my opinion this                                  little log with something                                  like PT query digest is the best way to                                  do that so excellent talk I was just                                  curious why you went with x.x debug and                                  now web grind as opposed to XH prof um                                  yes so he asked why I used XD bug                                  instead of XH prof XH prof is a little                                  bit newer than X debug and is much much                                  better in a variety of ways in my                                  opinion um but it's a little bit harder                                  to use it's much much harder to set up                                  it is integrated into devel which is                                  actually really really cool if you want                                  to look at um you can you can set up XH                                  prof and integrate it into devel so when                                  you're going through your site there's                                  actually a little link on the bottom of                                  the page that takes you directly to the                                  query profile sorry the code profile um                                  and that's really really cool but it                                  doesn't compare in my opinion to just                                  you know installing something out of                                  Pekel that's incorrect I'm sorry                                  installing something out of your                                  distribution's yum repository or apt                                  repository putting a few lines into the                                  ini file and throwing on a twig trigger                                  and then throwing web do web grind into                                  a web root I trying to get easier than                                  that is all pretty hard and that's why I                                  wanted to show but if you want to use XH                                  prof. for used XH broth I know yeah he                                  was saying there's a drupal module for                                  it it's actually integrated into develop                                  but while so the theoretical                                  instructions are that in actuality it                                  can you can run into significant issues                                  with XH prof just because it's not                                  integrated into the distribution package                                  system and that's why I went with this                                  do you have a few like common or top my                                  sequel misconfigurations because I'm not                                  a DBA but you know I find myself trying                                  to make edits to some of the main                                  configuration options there so I don't                                  know if you have a riff one on that                                  by default I know DB when these are                                  commented out has a buffer size of eight                                  Meg's Drupal                                                        that's it like that there's your top one                                  make your honor to be buffer pool bigger                                  it's the single largest single most                                  important thing you can do to a my                                  sequel server is to make sure that I                                  need to be covers your data space that                                  if you've got that down you're ahead of                                  the game and honestly if I was to say                                  one thing that's the only thing I'd                                  focus on there's another tunable here                                  that is the sync method on you can so if                                  you go on drupal.org and search for I                                  know DB and then sync method you'll find                                  a whole conversation on it I know to be                                  by default runs in full acid mode which                                  means it tries to prevent any sort of                                  data loss ever and what that means is                                  that it sinks to the disk very very very                                  often arm in particular because by                                  default it sinks on every commit and the                                  triple commits a lot there are some                                  members in the issue but it's a huge                                  performance impact when you actually                                  make it instead of sinking to the disk                                  on every commit sink every few seconds                                  and that's a big big performance                                  improvement it is also not something                                  that I like to say just do this because                                  there are there's a reason that's the                                  default if you have bad hardware I                                  wouldn't do that and you're going to                                  take a huge performance penalty and mice                                  answer would be fixed your hardware but                                  yeah i would i would say the one thing                                  i'd say to everyone is make sure your                                  buffer pool holds our data size and to a                                  minority of people look at the sync                                  method but understand what you're doing                                  and understand that if there's a                                  hardware failure you're going to be in                                  trouble                                  I got a two quick questions the first                                  one is is extra bug suitable for                                  installation on production server know                                  so that you don't install it on a                                  production server at all what I would do                                  that's where you should use XH prof XH                                  prof. was designed for that it was                                  designed by Facebook to do exactly that                                  to run on production servers and be able                                  to be enabled or triggered or just run                                  every so often and it was actually built                                  for that whereas XD bug was built as a                                  development enhancement so it's i use XD                                  bug on staging develops but i never ever                                  use it on production honestly i wouldn't                                  use XH prof on production either but if                                  I were to choose one I would choose that                                  in the second question is you mentioned                                  like two views light page or module is                                  there really a difference between that                                  and like to like the default views mini                                  pager which just has kind of the forward                                  next it has the forward so I don't have                                  time to show it so it has the forward                                  and that has the next but it also has                                  the last page so does count yeah which                                  is unfortunate i wish it didn't like                                  yeah just a couple of quick comments                                  actually um one thing that I've run into                                  when trying to work with clients sites                                  often is full discs okay I want to talk                                  about low hanging fruit a quick DF oh                                  hey you're at ninety-seven percent                                  that's probably part of your problem yep                                  and usually it's log files in my                                  experience or backup database backups                                  that haven't been cleared the second                                  part which is I completely forgot what                                  is can say okay well I'll let it go at                                  that okay well as a follow-up to your                                  low hanging fruit here's another one                                  this is called vmstat and it's the best                                  utility in the world it shows many                                  things but the big thing is swap right                                  here in the low hanging on the topic of                                  low-hanging fruit if your server is                                  swapping all bets are off so                                  make sure it's not other than                                  potentially running as H brought in                                  production do you have any other tools                                  or techniques that you recommend for                                  trying to trace performance issues the                                  only show up in production that are not                                  reproducible in any other room but                                  environment um yeah so honestly it's a                                  little difficult and what I tend to do                                  is write what I tend to do depends on                                  how much money is available oh if if                                  there's a sufficient bank account                                  involved I'll often go and get a new                                  relic account which is I like it a lot                                  actually it's very cool it it lets you                                  drill down into production systems but                                  um it's a little buggy honestly in my                                  experience like we've worked with them a                                  lot we we worked with them on like five                                  clients and I think our a partner of                                  some sort but um I we've had to file                                  bugs it has caused issues but if you                                  just I think there's a demo of some kind                                  somewhere where you can use it for like                                  a month and if you just install it and                                  look at what it provides you'll quickly                                  realize that there's very little else                                  out there that provides that level of                                  analysis um the other thing I'll do is                                  use either cacti RM yunnan um I like                                  cacti just because I co maintain some of                                  the graph templates with Baron Schwartz                                  so I have an interest but am union is                                  much easier to set up and I'd probably                                  recommend it and that doesn't give you                                  performance analysis on an application                                  level but it does give you a lot of                                  historical trends for your server and                                  for production servers that's important                                  for knowing knowing when something                                  changed knowing when you're starting to                                  head off the rails but are not off the                                  rails yet and just being able to track                                  history which you can then sort of try                                  you have that you have your slow log you                                  have vmstat that you can run and you can                                  try to you know combine them together                                  and get an idea of what's going on and                                  that's usually what I use when you know                                  there isn't a amex involved                                  okay remember the other thing the other                                  the other low-hanging fruit that I have                                  run into in fact very recently in this                                  last week or two is to look to see what                                  else is going on in the server now                                  obviously this is applicable with shared                                  hosting in which you have no control                                  over it but in our case we had a very                                  old very low traffic legacy PHP BB site                                  on the same server nobody thought it was                                  going to be an issue and it wasn't until                                  yahoo and google decided to crawl it on                                  the same day and it killed the drupal                                  site on that server and we had no idea                                  why because the drupal site itself is                                  running fine you know and we didn't see                                  it until we dug into the slow query logs                                  hey two-thirds of these are not even to                                  the drupal database yep so in that case                                  I think the solution is eventually going                                  to be what we're going to put that on a                                  different server thank you very much but                                  it is something to pay attention to it                                  may not be the Drupal site that you're                                  trying to debug yeah and I think one of                                  the initial questions I said to ask the                                  client is what site and I think I also                                  said assume they're lying um and I think                                  that's a good example of that and a good                                  example of why sometimes you should just                                  back out look at the slow query log look                                  at the global view for the server's logs                                  don't lie until they do but that's not                                  an issue I think right time thanks                                  everyone                                  you
YouTube URL: https://www.youtube.com/watch?v=wckQipkKdGY


