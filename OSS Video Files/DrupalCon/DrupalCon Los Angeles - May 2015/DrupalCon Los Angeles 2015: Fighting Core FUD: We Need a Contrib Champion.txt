Title: DrupalCon Los Angeles 2015: Fighting Core FUD: We Need a Contrib Champion
Publication date: 2015-05-12
Playlist: DrupalCon Los Angeles - May 2015
Description: 
	Drupal 8 is upon us. With a completely new core, developers need solid example code to guide their upgrade efforts. The Example module has long filled this need and will again for Drupal 8.

Or will it?

Drupal 8 is a massive change. Rewriting example code is no longer enough to find volunteers, inspire confidence, and prevent "contrib flight" as intimidated developers look to other projects outside of Drupal. This, and changes in longtime core developer involvement have created considerable FUD around Drupal 8's new core.

We can do better. We need to fight core FUD. We need a Contrib Champion. In this session, we examine how Example Module's rewrite exposed the need for a new category and initiative to support contrib developers through the dramatic changes coming in Drupal 8.
Captions: 
	00:00:00,050 --> 00:00:03,780
remember that I also have to have

00:00:02,100 --> 00:00:06,150
microphone in my hand at the same time

00:00:03,780 --> 00:00:08,970
she's going to make it really fun for me

00:00:06,150 --> 00:00:10,950
to jump around a lot I'll try to do this

00:00:08,970 --> 00:00:15,360
with my uninjured had to leave the

00:00:10,950 --> 00:00:16,830
lighter clicker and by other hat okay so

00:00:15,360 --> 00:00:18,750
just in case you didn't know you're in

00:00:16,830 --> 00:00:21,150
the room for fighting corr Fudd

00:00:18,750 --> 00:00:24,539
otherwise we otherwise known as we need

00:00:21,150 --> 00:00:26,189
a contribut anyone has the musical song

00:00:24,539 --> 00:00:32,599
heat up you might want to play it right

00:00:26,189 --> 00:00:32,599
now no one okay someone laughed at guys

00:00:37,399 --> 00:00:48,030
and we forgot to add the musical Keith

00:00:41,329 --> 00:00:49,800
fear uncertainty and doubt okay so you

00:00:48,030 --> 00:00:51,690
might wonder who the heck this weird

00:00:49,800 --> 00:00:54,570
person is in front of you and yes I

00:00:51,690 --> 00:00:56,699
didn't fact make that threat to crawl at

00:00:54,570 --> 00:00:59,160
drupalcon Austin about making a hat duel

00:00:56,699 --> 00:01:04,409
and neither of us showed up so I won by

00:00:59,160 --> 00:01:05,939
default my name is Tess fool my name is

00:01:04,409 --> 00:01:08,970
Tess Flint otherwise known as socket

00:01:05,939 --> 00:01:10,500
which that's wench not wrench I am the

00:01:08,970 --> 00:01:14,430
quadrille co maintainer for flag for

00:01:10,500 --> 00:01:17,729
flag friend and for example module so

00:01:14,430 --> 00:01:19,130
speaking of example module actually I'm

00:01:17,729 --> 00:01:22,290
a little bit ahead of myself I'm a

00:01:19,130 --> 00:01:25,650
drupal developer with what used to be

00:01:22,290 --> 00:01:27,750
known as one reaction now is FF W and my

00:01:25,650 --> 00:01:34,860
favorite interpretation of that name is

00:01:27,750 --> 00:01:37,079
fruit flavored wombats yeah there's a

00:01:34,860 --> 00:01:38,909
lot a lot of ones that would have to be

00:01:37,079 --> 00:01:42,150
censored if I were to actually use it

00:01:38,909 --> 00:01:44,850
but I'm not going to tell you what it

00:01:42,150 --> 00:01:49,020
actually is Nancy is going to be

00:01:44,850 --> 00:01:50,340
watching this video later I'm sorry this

00:01:49,020 --> 00:01:52,049
is the case you didn't know we are

00:01:50,340 --> 00:01:53,909
hiring you might want to check out our

00:01:52,049 --> 00:01:55,710
booth for writing the front in to the

00:01:53,909 --> 00:01:57,509
left so just talked with all the

00:01:55,710 --> 00:02:01,560
wonderful people here who wants a

00:01:57,509 --> 00:02:04,870
t-shirt I've got a medium I think you

00:02:01,560 --> 00:02:07,210
raise your hand first

00:02:04,870 --> 00:02:09,729
if not hand it to someone who does and

00:02:07,210 --> 00:02:11,380
then if you still want a shirt come down

00:02:09,729 --> 00:02:15,880
to the booth we've got more we've got

00:02:11,380 --> 00:02:18,750
tons more to give away so who in here

00:02:15,880 --> 00:02:22,480
has heard of example module before

00:02:18,750 --> 00:02:23,650
that's practically everybody so this is

00:02:22,480 --> 00:02:26,290
going to make the next three minutes of

00:02:23,650 --> 00:02:28,480
my life very boring I like to call it

00:02:26,290 --> 00:02:31,390
the most useful useful useless module

00:02:28,480 --> 00:02:34,240
ever because it provides real functional

00:02:31,390 --> 00:02:38,140
examples that you should never use on a

00:02:34,240 --> 00:02:40,120
real silent it provides code examples

00:02:38,140 --> 00:02:42,370
for Drupal developers so that you can

00:02:40,120 --> 00:02:44,350
actually learn new and existing api's

00:02:42,370 --> 00:02:47,050
covering a broad range of Drupal's core

00:02:44,350 --> 00:02:50,770
functionality usually it has kind of

00:02:47,050 --> 00:02:54,640
kind of a SNL soup rule about it in

00:02:50,770 --> 00:02:57,550
other words no code no core no example

00:02:54,640 --> 00:02:59,710
in other words if it's not a core if it

00:02:57,550 --> 00:03:02,620
doesn't cover core API is it's not an

00:02:59,710 --> 00:03:05,500
example if it's not a code example it's

00:03:02,620 --> 00:03:09,580
not not an example module so that's what

00:03:05,500 --> 00:03:11,590
that means is for both new and old

00:03:09,580 --> 00:03:13,540
Drupal developers because as api's

00:03:11,590 --> 00:03:16,239
change we might need to get new

00:03:13,540 --> 00:03:19,989
information new api's new examples to

00:03:16,239 --> 00:03:25,690
know how to use things and you can of

00:03:19,989 --> 00:03:29,530
course find this on drupal.org so why do

00:03:25,690 --> 00:03:31,510
we even have example module this is one

00:03:29,530 --> 00:03:33,970
of the things that I started working on

00:03:31,510 --> 00:03:37,420
example module around the Drupal 8 cycle

00:03:33,970 --> 00:03:39,310
while working on flag module and i found

00:03:37,420 --> 00:03:41,560
out that examples was lagging way behind

00:03:39,310 --> 00:03:43,660
who was having a lot of problems and a

00:03:41,560 --> 00:03:45,510
lot of struggles and I thought that

00:03:43,660 --> 00:03:49,030
thing that is it right what's going on

00:03:45,510 --> 00:03:52,120
so I have to go and investigate this so

00:03:49,030 --> 00:03:53,380
why do we have example code well if

00:03:52,120 --> 00:03:56,080
you're a new developer and you're

00:03:53,380 --> 00:03:59,019
confronting a new version of core it's

00:03:56,080 --> 00:04:01,930
really intimidating it's this big huge

00:03:59,019 --> 00:04:04,480
monster that's going to consume you and

00:04:01,930 --> 00:04:06,940
all you you just need how you're sitting

00:04:04,480 --> 00:04:10,390
there asking yourself where the heck do

00:04:06,940 --> 00:04:12,760
I even start and often the only thing

00:04:10,390 --> 00:04:15,870
that we can hand people as advice is

00:04:12,760 --> 00:04:15,870
don't get eaten

00:04:16,310 --> 00:04:20,280
there's a lot of different ways of

00:04:18,269 --> 00:04:23,160
learning new Kota new and existing core

00:04:20,280 --> 00:04:24,870
AP is the easiest and cheapest is

00:04:23,160 --> 00:04:26,520
probably source code you need the most

00:04:24,870 --> 00:04:28,800
experience to learn it because you

00:04:26,520 --> 00:04:30,449
usually have to no coding usually have

00:04:28,800 --> 00:04:32,280
to know some Drupal isms you have to

00:04:30,449 --> 00:04:34,650
know where to find it but it doesn't

00:04:32,280 --> 00:04:37,560
cost anything cuz its source code in

00:04:34,650 --> 00:04:39,539
it's an open source project now if you

00:04:37,560 --> 00:04:42,030
need a little bit more direction there's

00:04:39,539 --> 00:04:43,830
community documentation it has more pros

00:04:42,030 --> 00:04:46,740
but it's not actually professionally

00:04:43,830 --> 00:04:48,599
curated or produced so as a result it's

00:04:46,740 --> 00:04:52,139
not necessarily not necessarily the

00:04:48,599 --> 00:04:54,539
highest quality stuff but it's also very

00:04:52,139 --> 00:04:57,180
cheap to get to after that there's

00:04:54,539 --> 00:05:00,060
educational pros there's things like you

00:04:57,180 --> 00:05:04,590
can buy a book or you can subscribe to a

00:05:00,060 --> 00:05:07,530
movie service like drupal eyes me to

00:05:04,590 --> 00:05:10,500
educate yourself about what you can do

00:05:07,530 --> 00:05:12,930
to learn Drupal core api's and finally

00:05:10,500 --> 00:05:15,419
at the very apex is paid training it

00:05:12,930 --> 00:05:17,880
costs the most but usually there's the

00:05:15,419 --> 00:05:19,380
least amount of you know there you need

00:05:17,880 --> 00:05:21,479
the least amount of experience possible

00:05:19,380 --> 00:05:23,639
to actually start there because there's

00:05:21,479 --> 00:05:28,020
a person there to guide you and to

00:05:23,639 --> 00:05:30,510
answer every question now one thing that

00:05:28,020 --> 00:05:32,970
a lot of core developers have asked me

00:05:30,510 --> 00:05:34,979
in time is isn't core code enough why

00:05:32,970 --> 00:05:37,620
don't you just learn from looking at

00:05:34,979 --> 00:05:40,380
core well there's a lot of good reasons

00:05:37,620 --> 00:05:44,310
why core code is a bad way to learn

00:05:40,380 --> 00:05:47,849
drupal source code is actually a medium

00:05:44,310 --> 00:05:50,490
it's like any language it doesn't matter

00:05:47,849 --> 00:05:52,530
while the execution is the same like in

00:05:50,490 --> 00:05:54,599
language we want to communicate in

00:05:52,530 --> 00:05:57,479
programming code we want to execute an

00:05:54,599 --> 00:06:00,270
application but how it's written is

00:05:57,479 --> 00:06:03,810
actually very very important what we

00:06:00,270 --> 00:06:05,190
want to do with it is important when we

00:06:03,810 --> 00:06:06,750
actually sit down to write a piece of

00:06:05,190 --> 00:06:09,389
code there's a number of different

00:06:06,750 --> 00:06:10,560
considerations that we might have you're

00:06:09,389 --> 00:06:12,750
looking at a piece of code you might

00:06:10,560 --> 00:06:15,000
want to ask yourself should I make this

00:06:12,750 --> 00:06:18,509
code fast should I make it easy to

00:06:15,000 --> 00:06:21,990
expand or maintain or what if should I

00:06:18,509 --> 00:06:23,669
make it easy to understand the problem

00:06:21,990 --> 00:06:26,040
with all of these is that usually can

00:06:23,669 --> 00:06:31,950
only pick two and sometimes only two

00:06:26,040 --> 00:06:35,040
on learning from core code is really

00:06:31,950 --> 00:06:37,170
really confusing it's not only confusing

00:06:35,040 --> 00:06:38,910
at seven it's even more confusing and

00:06:37,170 --> 00:06:46,950
Drupal 8 and I know because I had to do

00:06:38,910 --> 00:06:48,860
it for two years yeah you often have to

00:06:46,950 --> 00:06:51,990
use a debugger just to actually learn

00:06:48,860 --> 00:06:54,570
what's going on in core code you can't

00:06:51,990 --> 00:06:57,030
just sit down and read it but that's not

00:06:54,570 --> 00:06:59,550
even the only thing modules aren't

00:06:57,030 --> 00:07:01,380
isolated from each other so you might be

00:06:59,550 --> 00:07:03,240
in one module going ok I just need to

00:07:01,380 --> 00:07:04,950
understand how an entity is made and

00:07:03,240 --> 00:07:06,540
suddenly you're in user module you have

00:07:04,950 --> 00:07:08,760
no idea how you got there and then you

00:07:06,540 --> 00:07:10,890
jump to tech sauna me module and so what

00:07:08,760 --> 00:07:13,290
the heck is going on and then suddenly

00:07:10,890 --> 00:07:15,150
you're your way in like I don't know

00:07:13,290 --> 00:07:17,100
server source code and you think that

00:07:15,150 --> 00:07:20,430
it's the matrix and the walls of reality

00:07:17,100 --> 00:07:22,560
are crashing down upon you feel this

00:07:20,430 --> 00:07:23,970
side of interface Thank You flag module

00:07:22,560 --> 00:07:26,160
had this problem because you had the

00:07:23,970 --> 00:07:27,930
flag function which called the flag flag

00:07:26,160 --> 00:07:30,210
class which call called the flag flag

00:07:27,930 --> 00:07:32,460
flag flag function which called the flag

00:07:30,210 --> 00:07:34,380
like like like flag flag user function

00:07:32,460 --> 00:07:37,380
and then it finally added something to

00:07:34,380 --> 00:07:40,500
the database I put a stop to that

00:07:37,380 --> 00:07:42,810
thankfully core code is all so confusing

00:07:40,500 --> 00:07:45,540
because it's commented yes but it's

00:07:42,810 --> 00:07:48,000
commented for information not for

00:07:45,540 --> 00:07:50,370
instruction it's kind of the difference

00:07:48,000 --> 00:07:52,560
between information and knowledge while

00:07:50,370 --> 00:07:54,210
information gives you small immediate

00:07:52,560 --> 00:07:56,370
pieces of information that you need to

00:07:54,210 --> 00:07:58,230
understand a very small piece of code it

00:07:56,370 --> 00:08:01,500
doesn't connect anything it doesn't

00:07:58,230 --> 00:08:04,620
provide context and that's what example

00:08:01,500 --> 00:08:07,800
code actually needs to do sample code

00:08:04,620 --> 00:08:12,900
provides context and connection or core

00:08:07,800 --> 00:08:15,300
code cannot and while doing this it also

00:08:12,900 --> 00:08:17,250
provides functional modules so you can

00:08:15,300 --> 00:08:22,260
see what happens when you change

00:08:17,250 --> 00:08:25,350
something or when you break something so

00:08:22,260 --> 00:08:26,970
how is example module developed its

00:08:25,350 --> 00:08:28,920
developed a lot like a lot of other

00:08:26,970 --> 00:08:31,849
modules it's volunteer-driven and

00:08:28,920 --> 00:08:34,440
features are requested by the community

00:08:31,849 --> 00:08:36,540
if we actually start looking at how the

00:08:34,440 --> 00:08:39,260
court how the commits work out between

00:08:36,540 --> 00:08:41,090
example module and also core

00:08:39,260 --> 00:08:44,930
we start noticing some interesting

00:08:41,090 --> 00:08:46,640
things now we have to tube data points

00:08:44,930 --> 00:08:48,350
here one is core which is in the blue

00:08:46,640 --> 00:08:51,110
and then we have examples which is in

00:08:48,350 --> 00:08:54,200
the red examples is x 10 for obvious

00:08:51,110 --> 00:08:55,610
reasons of number of commits example

00:08:54,200 --> 00:08:58,430
module had that many commits I'd be

00:08:55,610 --> 00:09:00,470
really impressed let's break this down

00:08:58,430 --> 00:09:04,280
see what really happened you'll notice

00:09:00,470 --> 00:09:06,650
that we had a spike of activity after

00:09:04,280 --> 00:09:09,410
Drupal 7 alpha 1 was released and then

00:09:06,650 --> 00:09:11,270
it kind of tapered off we get an RC and

00:09:09,410 --> 00:09:14,390
then we get a burst of activity in a

00:09:11,270 --> 00:09:16,190
tapers off we get around stable and then

00:09:14,390 --> 00:09:18,620
we've discovered we need additional

00:09:16,190 --> 00:09:20,570
examples like the table sort example so

00:09:18,620 --> 00:09:23,150
we add no we added a new example and a

00:09:20,570 --> 00:09:25,370
new amount of activity happened and then

00:09:23,150 --> 00:09:26,990
it just kind of hummed along and then

00:09:25,370 --> 00:09:28,640
you'll notice we start working on Drupal

00:09:26,990 --> 00:09:31,400
8 and there's a lot of commits and

00:09:28,640 --> 00:09:34,420
Drupal 8 but you might notice something

00:09:31,400 --> 00:09:37,580
the pattern is different for examples

00:09:34,420 --> 00:09:39,290
it's not giving us a consistent one it's

00:09:37,580 --> 00:09:42,470
kind of just throwing along in the

00:09:39,290 --> 00:09:45,350
background if we simplify this further

00:09:42,470 --> 00:09:47,480
it looks a bit like this when we have a

00:09:45,350 --> 00:09:49,040
release we have a lot of initial work

00:09:47,480 --> 00:09:51,350
when the Maya one example module is

00:09:49,040 --> 00:09:53,420
first created then we go into the Drupal

00:09:51,350 --> 00:09:56,990
with seven pre-release cycle and we have

00:09:53,420 --> 00:09:59,720
a pretty standard expected rise and fall

00:09:56,990 --> 00:10:02,270
of activity as new stuff is added to the

00:09:59,720 --> 00:10:04,550
system we get to the post release cycle

00:10:02,270 --> 00:10:07,100
and we actually have another rise and

00:10:04,550 --> 00:10:08,650
fall of activity and it's good that's

00:10:07,100 --> 00:10:11,690
healthy that's what you want from

00:10:08,650 --> 00:10:14,180
project that does examples but then you

00:10:11,690 --> 00:10:16,610
get to Drupal 8 and you'll notice that

00:10:14,180 --> 00:10:19,340
we've got a problem we've got a long

00:10:16,610 --> 00:10:25,370
period of almost no activity and then

00:10:19,340 --> 00:10:27,620
just flips of activity going forward we

00:10:25,370 --> 00:10:30,530
can learn from this is examples as kind

00:10:27,620 --> 00:10:34,670
of special it bootstraps a lot of

00:10:30,530 --> 00:10:37,430
contributor contributor6 to other

00:10:34,670 --> 00:10:42,950
developers that core is ready for

00:10:37,430 --> 00:10:45,530
development so what's the problem with

00:10:42,950 --> 00:10:47,630
all of this why am i up here begging

00:10:45,530 --> 00:10:50,120
people to listen to this weird idea I

00:10:47,630 --> 00:10:50,800
have about a contributed why we have so

00:10:50,120 --> 00:10:54,279
much core

00:10:50,800 --> 00:10:57,100
bud today well the problem is Drupal 8

00:10:54,279 --> 00:10:59,890
kind of change the rules we reached kind

00:10:57,100 --> 00:11:01,720
of an inflection point with Drupal 8 we

00:10:59,890 --> 00:11:04,720
were doing pretty well in the Drupal 7

00:11:01,720 --> 00:11:06,910
cycle and then Drupal 8 happened drupal

00:11:04,720 --> 00:11:09,880
eights really long and lots of things

00:11:06,910 --> 00:11:12,790
changed and that had a lot of a lot of

00:11:09,880 --> 00:11:15,760
problems become really apparent during

00:11:12,790 --> 00:11:18,010
that development cycle we have a

00:11:15,760 --> 00:11:20,050
significantly longer development cycle

00:11:18,010 --> 00:11:23,680
longer than any other release of Drupal

00:11:20,050 --> 00:11:25,420
in history this is adversely affecting

00:11:23,680 --> 00:11:29,980
contribs and examples who is a

00:11:25,420 --> 00:11:33,040
forerunner for control development also

00:11:29,980 --> 00:11:35,620
the code is really really really

00:11:33,040 --> 00:11:39,070
different like to kind of imagine this

00:11:35,620 --> 00:11:41,709
as a generational discussion between you

00:11:39,070 --> 00:11:43,170
know core developers the next generation

00:11:41,709 --> 00:11:47,079
and then the original series of

00:11:43,170 --> 00:11:49,120
contributors and you'll have the core

00:11:47,079 --> 00:11:52,240
developer saying well if you can't port

00:11:49,120 --> 00:11:54,279
your module then rewrite it but the

00:11:52,240 --> 00:11:56,709
contributor listens that and go and goes

00:11:54,279 --> 00:12:02,970
I cannot do it captain the course do

00:11:56,709 --> 00:12:05,260
different I bought that the gotta laugh

00:12:02,970 --> 00:12:11,320
my housemates tell me not to do that

00:12:05,260 --> 00:12:14,110
place at night in Drupal 7 we had some

00:12:11,320 --> 00:12:16,600
knowledge silos but generally we had

00:12:14,110 --> 00:12:19,540
knowledge silos and the whole spread of

00:12:16,600 --> 00:12:21,520
that knowledge was kind of broad we had

00:12:19,540 --> 00:12:23,140
a lot of people who are in a in example

00:12:21,520 --> 00:12:25,600
module and we had a lot of people in

00:12:23,140 --> 00:12:28,560
core and generally there was new stuff

00:12:25,600 --> 00:12:30,820
but it wasn't as pronounced of a problem

00:12:28,560 --> 00:12:32,860
generally the knowledge was fairly easy

00:12:30,820 --> 00:12:35,350
to access and we understood it and we

00:12:32,860 --> 00:12:38,589
could get new contributors to work on

00:12:35,350 --> 00:12:43,089
example module while also working on

00:12:38,589 --> 00:12:46,060
core in Drupal 8 it's a lot worse our

00:12:43,089 --> 00:12:48,610
knowledge silos are very narrow and deep

00:12:46,060 --> 00:12:51,790
compared to the Drupal 7 cycle there's

00:12:48,610 --> 00:12:56,260
so much new stuff in Drupal 8 that

00:12:51,790 --> 00:12:58,720
there's no way that contributing how

00:12:56,260 --> 00:13:01,180
much activity in Drupal 8 compared to

00:12:58,720 --> 00:13:04,120
Drupal 7 we can't seem to get the buy-in

00:13:01,180 --> 00:13:04,600
from core developers to assist us to do

00:13:04,120 --> 00:13:07,240
an all

00:13:04,600 --> 00:13:12,670
transfer necessary for us to write

00:13:07,240 --> 00:13:14,410
examples furthermore because everything

00:13:12,670 --> 00:13:16,540
is changing there's a shadow of doubt

00:13:14,410 --> 00:13:19,269
that hangs over every piece of

00:13:16,540 --> 00:13:22,240
information that existing example module

00:13:19,269 --> 00:13:24,940
developers and contributors already know

00:13:22,240 --> 00:13:27,190
and are comfortable with do we still

00:13:24,940 --> 00:13:29,110
have hooks do we still use the form API

00:13:27,190 --> 00:13:31,420
do we still use simple tests do we even

00:13:29,110 --> 00:13:34,240
know these things yet the answer is we

00:13:31,420 --> 00:13:36,250
do but how many cream travel appears

00:13:34,240 --> 00:13:38,139
actually know that and are actually

00:13:36,250 --> 00:13:41,649
comfortable knowing that and expressing

00:13:38,139 --> 00:13:43,269
that this shadow of doubt hangs over all

00:13:41,649 --> 00:13:45,699
Drupal api's you might have a

00:13:43,269 --> 00:13:46,930
contributor linking to themselves late

00:13:45,699 --> 00:13:48,730
at night while they're working on their

00:13:46,930 --> 00:13:51,060
module over a tuna fish sandwich and

00:13:48,730 --> 00:13:53,980
they're going this API is largely

00:13:51,060 --> 00:13:57,730
unchanged but how connects to everything

00:13:53,980 --> 00:14:00,699
has I mean should I even be using this

00:13:57,730 --> 00:14:03,699
particular API what if it goes away in

00:14:00,699 --> 00:14:05,440
the next release and then the despair

00:14:03,699 --> 00:14:07,779
really sets in and you start wondering

00:14:05,440 --> 00:14:11,139
how can I make any sort of a decision

00:14:07,779 --> 00:14:13,540
here at all and then at three in the

00:14:11,139 --> 00:14:14,439
morning after you've watched Star Trek 3

00:14:13,540 --> 00:14:17,589
and you're wondering why you're still

00:14:14,439 --> 00:14:21,130
awake you ask yourself you know maybe

00:14:17,589 --> 00:14:23,430
core dev should do this I mean then at

00:14:21,130 --> 00:14:27,730
least examples would keep up with core

00:14:23,430 --> 00:14:30,759
so we filed an issue issue 15 3 Sigma 2

00:14:27,730 --> 00:14:35,500
6 12 to move the example module project

00:14:30,759 --> 00:14:39,279
into core so why would we want to do

00:14:35,500 --> 00:14:41,860
this well development is strongly tied

00:14:39,279 --> 00:14:46,480
decor in a way that is not the same for

00:14:41,860 --> 00:14:48,819
other contribs in the perfect world as

00:14:46,480 --> 00:14:51,160
we get to every release every release

00:14:48,819 --> 00:14:55,720
cycle phase of core alpha poor beta 2

00:14:51,160 --> 00:14:58,329
stable will actually release new code so

00:14:55,720 --> 00:15:00,009
in the core alpha cycle will actually

00:14:58,329 --> 00:15:02,860
have critical examples update and

00:15:00,009 --> 00:15:04,720
created but right before the beta once

00:15:02,860 --> 00:15:06,699
the beta 1 is finished we finish all our

00:15:04,720 --> 00:15:09,699
critical examples if we start a lot of

00:15:06,699 --> 00:15:12,130
non-critical examples so things like you

00:15:09,699 --> 00:15:14,800
know entity it using entities and using

00:15:12,130 --> 00:15:17,050
fields we got all of that done but then

00:15:14,800 --> 00:15:17,470
we start adding some more unusual things

00:15:17,050 --> 00:15:21,840
like

00:15:17,470 --> 00:15:24,760
maybe we want to do a REST API example

00:15:21,840 --> 00:15:26,410
once we have a stable core we'll finish

00:15:24,760 --> 00:15:28,870
up everything get all our non-critical

00:15:26,410 --> 00:15:31,120
examples done and then after that we

00:15:28,870 --> 00:15:33,250
just want to do minor fixes this is an

00:15:31,120 --> 00:15:38,830
ideal world that we want for example

00:15:33,250 --> 00:15:41,110
module contribs candle imited visibility

00:15:38,830 --> 00:15:44,470
if you ever try to figure out how to

00:15:41,110 --> 00:15:47,110
depend to go and enable a module as a

00:15:44,470 --> 00:15:50,310
new developer it's really really

00:15:47,110 --> 00:15:52,630
complicated and examples is even worse

00:15:50,310 --> 00:15:54,850
Angela Webb chick Byron said jet has

00:15:52,630 --> 00:15:58,030
said this about example module it's

00:15:54,850 --> 00:16:01,450
practically impossible to find unless if

00:15:58,030 --> 00:16:02,800
you are already in the community so if

00:16:01,450 --> 00:16:04,810
you're not in the community already you

00:16:02,800 --> 00:16:07,630
have no idea what this is or even that

00:16:04,810 --> 00:16:09,400
it exists it kind of looks like this if

00:16:07,630 --> 00:16:11,200
you're a new developer you're going to

00:16:09,400 --> 00:16:14,050
go to Drupal or you're going to download

00:16:11,200 --> 00:16:15,340
Drupal in this case Drupal 8 you're

00:16:14,050 --> 00:16:17,050
going to install it on your web server

00:16:15,340 --> 00:16:20,080
because it has instructions how to do

00:16:17,050 --> 00:16:21,880
that and then you're going to go well I

00:16:20,080 --> 00:16:25,060
want to do some development for this but

00:16:21,880 --> 00:16:27,340
there's no examples here when we find

00:16:25,060 --> 00:16:28,660
examples of okay well well there's guy

00:16:27,340 --> 00:16:31,450
the exact somewhere so I'm going to go

00:16:28,660 --> 00:16:33,340
search online you find something you

00:16:31,450 --> 00:16:35,560
search online for examples you find them

00:16:33,340 --> 00:16:38,590
and download them and said okay great

00:16:35,560 --> 00:16:40,290
now I can work on examples what what's

00:16:38,590 --> 00:16:43,120
the heck what the heck is module and

00:16:40,290 --> 00:16:45,280
then you're sitting there head desking

00:16:43,120 --> 00:16:47,770
that poor new developer who doesn't know

00:16:45,280 --> 00:16:51,970
what this stuff is we've got to make

00:16:47,770 --> 00:16:53,740
this shorter it's way too complicated it

00:16:51,970 --> 00:16:56,170
would be wonderful if we can get to this

00:16:53,740 --> 00:16:58,210
point what you would expect with any

00:16:56,170 --> 00:16:59,860
kind of web applications and all we have

00:16:58,210 --> 00:17:02,860
to do is click enable examples and then

00:16:59,860 --> 00:17:06,300
there's happiness that's what we would

00:17:02,860 --> 00:17:09,640
like for new developers to experience

00:17:06,300 --> 00:17:13,510
another idea is that example module can

00:17:09,640 --> 00:17:16,180
provide tests for core so our Fey once

00:17:13,510 --> 00:17:18,940
suggested that example modules could be

00:17:16,180 --> 00:17:21,880
used for core tests to Korea as mock

00:17:18,940 --> 00:17:24,610
modules so that we don't have to make as

00:17:21,880 --> 00:17:26,560
many mock modules to support or tests I

00:17:24,610 --> 00:17:28,830
mean that makes perfect sense these

00:17:26,560 --> 00:17:30,149
things are examples their standard

00:17:28,830 --> 00:17:32,279
standardized pieces of core

00:17:30,149 --> 00:17:34,820
functionality we should be able to just

00:17:32,279 --> 00:17:36,929
test them it seems like a natural fit

00:17:34,820 --> 00:17:39,779
and it kind of works like this you have

00:17:36,929 --> 00:17:43,019
you know example modules and you have

00:17:39,779 --> 00:17:45,690
drupal and drupal 8 singing you know i

00:17:43,019 --> 00:17:48,299
got some shiny new code for you then

00:17:45,690 --> 00:17:49,890
examples is like cool i'll test it and

00:17:48,299 --> 00:17:53,390
then sounding a bit like soothes from

00:17:49,890 --> 00:17:56,610
gravity falls it's going to say i did i

00:17:53,390 --> 00:18:00,029
think there's a bug in here of course

00:17:56,610 --> 00:18:04,590
trip will say but it's so shiny shiny

00:18:00,029 --> 00:18:07,260
new code bugs are only also only the tip

00:18:04,590 --> 00:18:10,080
of the iceberg at the very top we have

00:18:07,260 --> 00:18:11,909
actual bugs real problems but there's

00:18:10,080 --> 00:18:14,100
other things that we can test like

00:18:11,909 --> 00:18:17,250
developer experience like feature gaps

00:18:14,100 --> 00:18:19,620
remember in entity API how we got

00:18:17,250 --> 00:18:21,929
through Drupal 7 and we realized we

00:18:19,620 --> 00:18:24,539
didn't have a complete entity API and we

00:18:21,929 --> 00:18:28,080
had added control that everybody depends

00:18:24,539 --> 00:18:32,760
upon why didn't we catch that earlier

00:18:28,080 --> 00:18:34,830
and also unexpected use weird things

00:18:32,760 --> 00:18:37,440
like what if I make this annotation

00:18:34,830 --> 00:18:39,240
completely wrong what if I derive this

00:18:37,440 --> 00:18:41,909
class from something really really weird

00:18:39,240 --> 00:18:43,919
what if I override this particular this

00:18:41,909 --> 00:18:46,019
particular method during the time that

00:18:43,919 --> 00:18:47,850
we're developing it so that we can

00:18:46,019 --> 00:18:50,370
actually go you know this documentation

00:18:47,850 --> 00:18:52,889
isn't particularly clear we need to make

00:18:50,370 --> 00:18:55,590
that better to understand to tell other

00:18:52,889 --> 00:19:01,159
contributors what to do so I make the

00:18:55,590 --> 00:19:01,159
mistake first so that no one else has to

00:19:01,970 --> 00:19:07,529
also it solves example module maintainer

00:19:05,190 --> 00:19:09,840
ship issues we have that in those

00:19:07,529 --> 00:19:12,360
knowledge silos and they're only going

00:19:09,840 --> 00:19:14,370
to get worse the more outside of Drupal

00:19:12,360 --> 00:19:16,019
technologies we bring in so should an

00:19:14,370 --> 00:19:19,350
example module live where the knowledge

00:19:16,019 --> 00:19:23,940
silos are that way it keeps up with core

00:19:19,350 --> 00:19:26,100
all the time also example modules could

00:19:23,940 --> 00:19:29,190
help people learn core if it was

00:19:26,100 --> 00:19:31,110
actually in core so we'll have a new

00:19:29,190 --> 00:19:34,200
developer they're going to find a bug in

00:19:31,110 --> 00:19:35,840
examples when they're in core they're

00:19:34,200 --> 00:19:37,950
going to file a new issue on drupal.org

00:19:35,840 --> 00:19:40,889
maybe they'll even submit a patch

00:19:37,950 --> 00:19:41,620
they'll get that into core and then

00:19:40,889 --> 00:19:43,000
there's happiness

00:19:41,620 --> 00:19:47,290
because we've created another

00:19:43,000 --> 00:19:49,510
contributor it's easier to because all

00:19:47,290 --> 00:19:52,720
of example modules are isolated from

00:19:49,510 --> 00:19:55,630
core so we don't it makes it easier to

00:19:52,720 --> 00:19:57,700
contribute to core without having to

00:19:55,630 --> 00:19:59,800
figure out all the weird cross-linking

00:19:57,700 --> 00:20:03,820
that's involved in understanding core

00:19:59,800 --> 00:20:05,680
code so all of this sounds wonderful

00:20:03,820 --> 00:20:07,720
what why didn't we do this already why

00:20:05,680 --> 00:20:13,690
is example module not in court today

00:20:07,720 --> 00:20:19,210
well all the sounds great except don't

00:20:13,690 --> 00:20:25,330
give it away except that example module

00:20:19,210 --> 00:20:27,940
isn't really core in core examples

00:20:25,330 --> 00:20:30,250
really wouldn't be isolated as soon as

00:20:27,940 --> 00:20:32,440
we start using it in core it's going to

00:20:30,250 --> 00:20:35,500
develop cross-linking there's no way to

00:20:32,440 --> 00:20:38,140
do that unless if we apply rigorous

00:20:35,500 --> 00:20:39,840
processes and reviews and we're probably

00:20:38,140 --> 00:20:44,770
not going to be able to pull that off

00:20:39,840 --> 00:20:47,470
question yeah what context do you mean

00:20:44,770 --> 00:20:49,150
isolated in in this case like because if

00:20:47,470 --> 00:20:53,710
it's a module whether it's contrarian

00:20:49,150 --> 00:20:55,450
core what would be the difference well

00:20:53,710 --> 00:20:58,450
it's kind of like that what I was saying

00:20:55,450 --> 00:21:01,780
earlier if you're trying to follow how a

00:20:58,450 --> 00:21:04,450
particular module works in a core module

00:21:01,780 --> 00:21:06,809
like in the node module it often does

00:21:04,450 --> 00:21:09,400
some weird things and has weird

00:21:06,809 --> 00:21:11,320
generalizations and that it can produce

00:21:09,400 --> 00:21:13,270
false positives if you're trying to read

00:21:11,320 --> 00:21:16,660
that as a new developer to understand

00:21:13,270 --> 00:21:18,940
what's going on so sometimes you will

00:21:16,660 --> 00:21:20,920
get to a point where it jumps somewhere

00:21:18,940 --> 00:21:23,820
else and cut and core which doesn't make

00:21:20,920 --> 00:21:27,820
any sense and if it was a conventional

00:21:23,820 --> 00:21:31,500
contribu would never see that so it

00:21:27,820 --> 00:21:34,690
there are weird little special cases and

00:21:31,500 --> 00:21:37,809
special snowflakes in almost all of the

00:21:34,690 --> 00:21:41,370
core modules because it just kind of has

00:21:37,809 --> 00:21:41,370
to be that way at some point

00:21:42,200 --> 00:21:48,750
so basically it would just develop those

00:21:44,580 --> 00:21:52,610
bad habits yeah exactly you would

00:21:48,750 --> 00:21:54,900
develop those bad habits after a while

00:21:52,610 --> 00:21:58,110
also there's a bit of a motive and

00:21:54,900 --> 00:22:01,350
purpose mismatch examples goal is really

00:21:58,110 --> 00:22:07,230
to support contribs it's not meant to be

00:22:01,350 --> 00:22:09,030
cores test case so son actually said

00:22:07,230 --> 00:22:11,850
something about this he said if anything

00:22:09,030 --> 00:22:16,500
last tests we need better test coverage

00:22:11,850 --> 00:22:20,700
we don't need examples core tests are

00:22:16,500 --> 00:22:23,400
quite frankly really really weird they

00:22:20,700 --> 00:22:25,650
have to account for mal use abuse and as

00:22:23,400 --> 00:22:30,840
someone once described an athlete pure

00:22:25,650 --> 00:22:32,670
stupidity so the tests are already

00:22:30,840 --> 00:22:34,679
complicated enough without adding

00:22:32,670 --> 00:22:37,590
example modules on top of it this

00:22:34,679 --> 00:22:39,300
becomes part of that weird isolation

00:22:37,590 --> 00:22:40,980
lacking that we're going to get because

00:22:39,300 --> 00:22:45,110
we have to do all this weird stuff to

00:22:40,980 --> 00:22:45,110
the tests that we would never do for

00:22:45,860 --> 00:22:50,000
contributing it in there as a test case

00:22:50,300 --> 00:22:56,880
also this is kind of a personal beef of

00:22:53,100 --> 00:22:59,130
mine writing example code is a skill and

00:22:56,880 --> 00:23:03,000
it's not a skill that a lot of core core

00:22:59,130 --> 00:23:05,100
contributors have it's more than just

00:23:03,000 --> 00:23:07,410
adding a lot of comments to your code

00:23:05,100 --> 00:23:09,210
adding a lot of comments isn't writing

00:23:07,410 --> 00:23:12,179
example code that's adding a lot of

00:23:09,210 --> 00:23:14,550
comments it's different considerations

00:23:12,179 --> 00:23:16,710
from production code you'll structure

00:23:14,550 --> 00:23:19,110
your program different you'll break out

00:23:16,710 --> 00:23:21,840
certain methods differently you'll write

00:23:19,110 --> 00:23:24,030
tons and tons of little tiny functions

00:23:21,840 --> 00:23:26,280
to do step one step two step three and

00:23:24,030 --> 00:23:28,500
step 4 and no one would ever bother

00:23:26,280 --> 00:23:30,330
doing that in production code it's a

00:23:28,500 --> 00:23:32,700
waste of everybody's time from

00:23:30,330 --> 00:23:36,170
production code points of view but from

00:23:32,700 --> 00:23:40,160
example code where education is the goal

00:23:36,170 --> 00:23:40,160
that's very important

00:23:40,440 --> 00:23:46,350
also maintaining examples volna while

00:23:43,419 --> 00:23:49,869
developing new api's would be painful

00:23:46,350 --> 00:23:54,159
it's all the agony of updating examples

00:23:49,869 --> 00:23:56,230
and core at the same time so if you have

00:23:54,159 --> 00:23:57,700
your core developer and they're starting

00:23:56,230 --> 00:24:00,460
to work on a new hood of a new version

00:23:57,700 --> 00:24:01,570
of Drupal core you have example modules

00:24:00,460 --> 00:24:04,029
and they're living in core

00:24:01,570 --> 00:24:06,690
hypothetically so as we start this

00:24:04,029 --> 00:24:10,480
process off examples going to say dude

00:24:06,690 --> 00:24:12,100
everything's broken and of course the

00:24:10,480 --> 00:24:14,019
core developers saying can't you see I'm

00:24:12,100 --> 00:24:17,679
busy I'm trying to work on a new version

00:24:14,019 --> 00:24:21,190
of core and of course well fine dan did

00:24:17,679 --> 00:24:22,929
i'm just going to fail all your tasks of

00:24:21,190 --> 00:24:26,950
course this does not make anybody happy

00:24:22,929 --> 00:24:28,840
and the thing is this continues as the

00:24:26,950 --> 00:24:31,509
development of a new version of core

00:24:28,840 --> 00:24:33,669
continues every time we start pushing

00:24:31,509 --> 00:24:37,389
that forward dude everything's broken

00:24:33,669 --> 00:24:41,499
dude everything's broken dude everything

00:24:37,389 --> 00:24:44,619
is still broken we finally get to a near

00:24:41,499 --> 00:24:46,720
release of core and finally okay fine

00:24:44,619 --> 00:24:49,029
sure okay let's go ahead and fix you

00:24:46,720 --> 00:24:50,379
finally and then of course they're

00:24:49,029 --> 00:24:54,820
cursing themselves because their release

00:24:50,379 --> 00:24:56,860
date goes out the window so the core

00:24:54,820 --> 00:24:58,779
developers sitting there also at 2am

00:24:56,860 --> 00:25:00,610
over a half-eaten tuna fish sandwich

00:24:58,779 --> 00:25:03,429
watching star trek 3 and they're going

00:25:00,610 --> 00:25:05,139
why am I developing code not used by

00:25:03,429 --> 00:25:07,779
ninety percent of all the Drupal sites

00:25:05,139 --> 00:25:10,149
out there this should be contribs

00:25:07,779 --> 00:25:11,320
problem it's not ninety percent of sites

00:25:10,149 --> 00:25:21,940
it shouldn't be in court should be

00:25:11,320 --> 00:25:23,649
contrarian saying this is your fault no

00:25:21,940 --> 00:25:26,619
one is actually fixing the problem the

00:25:23,649 --> 00:25:31,539
problem isn't just an examples it gets

00:25:26,619 --> 00:25:34,269
even worse the reality is that example

00:25:31,539 --> 00:25:36,460
module became a forerunner for what

00:25:34,269 --> 00:25:39,070
we're seeing here for Drupal 8 which is

00:25:36,460 --> 00:25:45,669
that example module isn't quite core

00:25:39,070 --> 00:25:47,529
isn't quite contributed evelopment

00:25:45,669 --> 00:25:49,629
community one that's only going to get

00:25:47,529 --> 00:25:51,550
worse in time if we don't do something

00:25:49,629 --> 00:25:56,630
about

00:25:51,550 --> 00:25:58,550
we need a third option the example

00:25:56,630 --> 00:26:03,980
module does provide checks and balances

00:25:58,550 --> 00:26:06,320
against for a cohort of this makes poor

00:26:03,980 --> 00:26:09,440
better faster and easier but doesn't

00:26:06,320 --> 00:26:15,590
really work for contribs checks and

00:26:09,440 --> 00:26:17,390
balances constantly also example module

00:26:15,590 --> 00:26:19,820
has a number of key advantages that are

00:26:17,390 --> 00:26:21,920
excellent for making it a forerunner for

00:26:19,820 --> 00:26:23,929
testing new versions of core but in a

00:26:21,920 --> 00:26:27,770
completely process process isolated

00:26:23,929 --> 00:26:30,290
fashion its core isolated it tests DX

00:26:27,770 --> 00:26:32,780
before chorus frozen because examples is

00:26:30,290 --> 00:26:35,750
usually developed while core is

00:26:32,780 --> 00:26:38,720
finishing up usually before most

00:26:35,750 --> 00:26:44,090
contribs even dare to touch updating

00:26:38,720 --> 00:26:46,040
their modules also if we put example

00:26:44,090 --> 00:26:49,910
module in court it would have a really

00:26:46,040 --> 00:26:51,460
really weird dev psychol so you have a

00:26:49,910 --> 00:26:54,410
new version of core then you have

00:26:51,460 --> 00:26:56,179
example module we disable all of the

00:26:54,410 --> 00:26:59,750
example module tests because we have

00:26:56,179 --> 00:27:02,929
real work to do so development continues

00:26:59,750 --> 00:27:06,380
encore but development is halted for

00:27:02,929 --> 00:27:08,780
examples eventually we get to a near

00:27:06,380 --> 00:27:10,880
alpha and we start updating the example

00:27:08,780 --> 00:27:12,950
code to fix all of those to have those

00:27:10,880 --> 00:27:16,760
tests that we had disabled months or

00:27:12,950 --> 00:27:18,980
years before once we have the examples

00:27:16,760 --> 00:27:21,890
completed we can finally you know

00:27:18,980 --> 00:27:25,040
release a stable version of core okay

00:27:21,890 --> 00:27:26,840
that sounds pretty weird that's that's

00:27:25,040 --> 00:27:30,110
kind of unprecedented we've never done

00:27:26,840 --> 00:27:34,429
that before right please tell me we have

00:27:30,110 --> 00:27:37,580
it all rod we did do this we already did

00:27:34,429 --> 00:27:39,800
do this when we put my great module into

00:27:37,580 --> 00:27:43,270
core we disabled all of its tests

00:27:39,800 --> 00:27:43,270
because we had work to do

00:27:46,160 --> 00:27:51,560
that's not the only problem if we were

00:27:49,520 --> 00:27:53,630
to put example module in the core where

00:27:51,560 --> 00:27:55,430
the heck would it live here we have a

00:27:53,630 --> 00:27:59,780
simplified simplified directory

00:27:55,430 --> 00:28:00,890
structure of Korra of Drupal 8 core we

00:27:59,780 --> 00:28:03,050
want to put it somewhere so that

00:28:00,890 --> 00:28:04,760
developers can easily find it but we

00:28:03,050 --> 00:28:06,410
want to keep it hidden from users so

00:28:04,760 --> 00:28:08,750
they don't enable it on a production

00:28:06,410 --> 00:28:11,270
site so they don't start building their

00:28:08,750 --> 00:28:14,390
entire site over the robot entity type

00:28:11,270 --> 00:28:16,640
that we have in examples because trust

00:28:14,390 --> 00:28:19,460
me someone will do it and then pay lots

00:28:16,640 --> 00:28:21,800
of consulting money to fix it we could

00:28:19,460 --> 00:28:23,240
put it in module / examples because you

00:28:21,800 --> 00:28:25,940
know it's a natural place it's where all

00:28:23,240 --> 00:28:27,560
the other controls live the thing is we

00:28:25,940 --> 00:28:30,560
either have to delete it once we install

00:28:27,560 --> 00:28:33,140
once we install it or we'd have to hide

00:28:30,560 --> 00:28:35,300
it in admin extend to make sure that not

00:28:33,140 --> 00:28:39,500
every user just doesn't blunder in and

00:28:35,300 --> 00:28:41,810
site to enable it okay fine let's put it

00:28:39,500 --> 00:28:43,340
in core modules examples because that's

00:28:41,810 --> 00:28:45,950
where all the other core modules get

00:28:43,340 --> 00:28:48,260
that make sense right the thing is that

00:28:45,950 --> 00:28:50,390
examples really isn't a core module if

00:28:48,260 --> 00:28:54,080
we put it there I mean you really it's

00:28:50,390 --> 00:28:55,910
not as easily discoverable okay fine so

00:28:54,080 --> 00:28:58,940
that doesn't work let's just put it in

00:28:55,910 --> 00:29:01,070
the core directory okay it keeps it in

00:28:58,940 --> 00:29:04,010
the / corridor after shore so that every

00:29:01,070 --> 00:29:08,360
time we update core it gets updated but

00:29:04,010 --> 00:29:10,010
it's not really in core okay sure it's

00:29:08,360 --> 00:29:11,570
hidden for users it's a bit more

00:29:10,010 --> 00:29:12,860
discoverable to come for developers

00:29:11,570 --> 00:29:14,630
because as soon as you start going in

00:29:12,860 --> 00:29:16,640
there there's like others like three or

00:29:14,630 --> 00:29:19,280
four directories hero quarter after L

00:29:16,640 --> 00:29:23,630
examples there we go me it's hard to

00:29:19,280 --> 00:29:25,450
miss of course if that doesn't work we

00:29:23,630 --> 00:29:28,280
could just put in the root directory I

00:29:25,450 --> 00:29:29,960
can't visit there but now it's outside

00:29:28,280 --> 00:29:32,420
of the core directory so now we don't

00:29:29,960 --> 00:29:34,130
have a standard means of updating by

00:29:32,420 --> 00:29:38,210
just deleting the core directory and

00:29:34,130 --> 00:29:40,340
replacing it now we have an exception so

00:29:38,210 --> 00:29:44,780
we have to move it or copy it to enable

00:29:40,340 --> 00:29:46,520
it to so that doesn't geez we don't even

00:29:44,780 --> 00:29:49,700
know where we should put it in the

00:29:46,520 --> 00:29:51,290
directory if we were do it semantic

00:29:49,700 --> 00:29:52,850
versioning could mean that core moves

00:29:51,290 --> 00:29:54,770
faster but is this really fast enough

00:29:52,850 --> 00:29:57,890
for examples we're already talking about

00:29:54,770 --> 00:29:58,950
every six months we should have a new

00:29:57,890 --> 00:30:01,470
version of core

00:29:58,950 --> 00:30:03,029
or we can actually add new api's but

00:30:01,470 --> 00:30:09,059
that's every six months that we'd have

00:30:03,029 --> 00:30:11,700
to wait to add a new example so after

00:30:09,059 --> 00:30:13,380
looking at all of this all sitting down

00:30:11,700 --> 00:30:16,950
and thinking about all of these problems

00:30:13,380 --> 00:30:19,350
that core example module is facing I

00:30:16,950 --> 00:30:21,360
started realizing that the proper salt

00:30:19,350 --> 00:30:22,909
trying to solve the wrong problem we're

00:30:21,360 --> 00:30:25,860
approaching this as a technical problem

00:30:22,909 --> 00:30:27,929
trying to find a way to make sure that

00:30:25,860 --> 00:30:29,730
example module gets developed so that we

00:30:27,929 --> 00:30:32,309
have people that are happy and contribs

00:30:29,730 --> 00:30:33,720
amples to base their work on but it

00:30:32,309 --> 00:30:34,860
doesn't really want to live in core

00:30:33,720 --> 00:30:38,730
because that doesn't know that's a

00:30:34,860 --> 00:30:42,169
complete cultural mismatch so what's

00:30:38,730 --> 00:30:44,760
going on well the problem is people if

00:30:42,169 --> 00:30:47,700
the problem problem that most developers

00:30:44,760 --> 00:30:52,679
never want to hear about the problem is

00:30:47,700 --> 00:30:55,649
people it's not code we have a stalemate

00:30:52,679 --> 00:30:58,460
between core and contributed a one

00:30:55,649 --> 00:31:01,200
that's really really worrying me

00:30:58,460 --> 00:31:04,139
everyone's pointing fingers no one's

00:31:01,200 --> 00:31:07,019
really fixing the problem we need

00:31:04,139 --> 00:31:09,600
someone to stand up someone whose job it

00:31:07,019 --> 00:31:12,330
is to stand up and go hey that's not

00:31:09,600 --> 00:31:17,279
fixing anything we need to sit down and

00:31:12,330 --> 00:31:20,750
try to fix this and I like to call that

00:31:17,279 --> 00:31:20,750
person the

00:31:23,460 --> 00:31:28,479
the contribute isn't a new idea it's

00:31:26,499 --> 00:31:30,489
based on something from cloud from

00:31:28,479 --> 00:31:33,219
enterprise cloud environments called the

00:31:30,489 --> 00:31:35,830
cloud champion it's a proven way to roll

00:31:33,219 --> 00:31:38,409
out large intimidating changes in an

00:31:35,830 --> 00:31:43,719
enterprise intimidating change it sound

00:31:38,409 --> 00:31:45,399
familiar to anyone in this room the goal

00:31:43,719 --> 00:31:47,229
is really to support contribute avella

00:31:45,399 --> 00:31:49,749
purrs through documentation mediation

00:31:47,229 --> 00:31:52,119
sample code and public outreach in order

00:31:49,749 --> 00:31:58,379
to ensure a successful deployment of a

00:31:52,119 --> 00:31:58,379
new version of core so that contribute

00:32:00,029 --> 00:32:05,499
means three things it means someone that

00:32:02,710 --> 00:32:08,379
can raise excitement someone that can

00:32:05,499 --> 00:32:14,769
mediate problems and someone that can

00:32:08,379 --> 00:32:16,599
educate individuals and contributors the

00:32:14,769 --> 00:32:20,909
first most obvious thing is raising

00:32:16,599 --> 00:32:24,190
excitement the first most obvious form

00:32:20,909 --> 00:32:26,889
it provides a consistent venue for

00:32:24,190 --> 00:32:29,139
information and discussion right now you

00:32:26,889 --> 00:32:31,839
can find a lot of information on Drupal

00:32:29,139 --> 00:32:34,599
8 two years ago this wasn't the case a

00:32:31,839 --> 00:32:38,289
year ago this wasn't the case but it's

00:32:34,599 --> 00:32:40,589
still disorganized every time you try to

00:32:38,289 --> 00:32:43,509
solve a problem Drupal 8 even today

00:32:40,589 --> 00:32:45,909
you'll get 5 articles giving you

00:32:43,509 --> 00:32:49,509
different solutions to do the same thing

00:32:45,909 --> 00:32:51,759
there's no canonical source and all of

00:32:49,509 --> 00:32:54,999
those are in consistently updated from

00:32:51,759 --> 00:32:56,889
individuals there's no organization now

00:32:54,999 --> 00:33:00,070
that's fine when your project is small

00:32:56,889 --> 00:33:02,619
we're not small anymore core isn't small

00:33:00,070 --> 00:33:06,070
anymore our community isn't small

00:33:02,619 --> 00:33:09,549
anymore we have reached when we passed

00:33:06,070 --> 00:33:11,889
an inflection point where we can depend

00:33:09,549 --> 00:33:17,710
on the nebulous community to fix all of

00:33:11,889 --> 00:33:19,389
this we need to do better one thing that

00:33:17,710 --> 00:33:21,789
a court have that the contributing could

00:33:19,389 --> 00:33:23,859
do is to support key frontline modules

00:33:21,789 --> 00:33:26,529
modules that are willing to go I don't

00:33:23,859 --> 00:33:28,509
care if core is really broken and really

00:33:26,529 --> 00:33:31,029
weird everything's going to change I'm

00:33:28,509 --> 00:33:33,270
going to develop for it anyways modules

00:33:31,029 --> 00:33:36,990
like examples like flag like rules like

00:33:33,270 --> 00:33:39,630
console modules that are there at the

00:33:36,990 --> 00:33:41,190
very beginning because they really don't

00:33:39,630 --> 00:33:44,670
care they don't have anything to lose so

00:33:41,190 --> 00:33:46,440
why not this could mean assisting with

00:33:44,670 --> 00:33:48,780
crowdfunding with a Rando with awareness

00:33:46,440 --> 00:33:50,880
or even really really importantly

00:33:48,780 --> 00:33:54,030
knowledge transfer which is the biggest

00:33:50,880 --> 00:33:59,280
problem we have in core today with

00:33:54,030 --> 00:34:01,470
respect to contributors another major

00:33:59,280 --> 00:34:03,780
thing that's really important and one

00:34:01,470 --> 00:34:07,100
that is not a very easy subject to

00:34:03,780 --> 00:34:09,149
broach as mediation will have a

00:34:07,100 --> 00:34:11,730
contraband they say they have some valid

00:34:09,149 --> 00:34:13,350
exam how valid concerns about core they

00:34:11,730 --> 00:34:15,090
might have already gone to an issue

00:34:13,350 --> 00:34:17,070
queue and complained about why did you

00:34:15,090 --> 00:34:20,130
break my module they might have already

00:34:17,070 --> 00:34:22,290
gone to enna to IRC and wonder why it

00:34:20,130 --> 00:34:24,510
did everything change why did you rip

00:34:22,290 --> 00:34:26,159
out hook menu that was good it did

00:34:24,510 --> 00:34:29,010
everything I needed to do why is it now

00:34:26,159 --> 00:34:32,159
four different files why in the heck did

00:34:29,010 --> 00:34:34,020
you do that and the thing is that when

00:34:32,159 --> 00:34:36,659
you win someone who is a contributor

00:34:34,020 --> 00:34:38,700
Valefor says that and a core developer

00:34:36,659 --> 00:34:41,340
here is it they're going to be angry

00:34:38,700 --> 00:34:44,370
because they work a really hard on that

00:34:41,340 --> 00:34:46,169
and they do have good reasons but the

00:34:44,370 --> 00:34:47,640
problem is that some when you're

00:34:46,169 --> 00:34:50,580
approached like that you're immediately

00:34:47,640 --> 00:34:52,200
feeling attacked so as a result you're

00:34:50,580 --> 00:34:54,540
going to be on the defensive when you

00:34:52,200 --> 00:34:57,510
start talking and that someone is up

00:34:54,540 --> 00:34:59,790
late has had a bad week it didn't have

00:34:57,510 --> 00:35:01,830
their dinner on time or something they

00:34:59,790 --> 00:35:03,870
might go off the handle and suddenly

00:35:01,830 --> 00:35:05,850
we're going to have a contributor

00:35:03,870 --> 00:35:11,730
thinking maybe I don't want to work on

00:35:05,850 --> 00:35:14,270
Drupal anymore so a contributed Ella /

00:35:11,730 --> 00:35:19,140
can go to the Contras Campion and

00:35:14,270 --> 00:35:20,550
express these concerns we can they might

00:35:19,140 --> 00:35:22,020
not be uncomfortable bringing them

00:35:20,550 --> 00:35:25,260
directly because they might have gotten

00:35:22,020 --> 00:35:28,410
burned before so the contribution can

00:35:25,260 --> 00:35:30,390
document and then later on can go to the

00:35:28,410 --> 00:35:33,570
core developer and actually in a

00:35:30,390 --> 00:35:36,360
structured approach actually communicate

00:35:33,570 --> 00:35:38,160
all of these concerns so that we can

00:35:36,360 --> 00:35:40,140
actually figure out what's going on in

00:35:38,160 --> 00:35:42,270
some cases core developers might not

00:35:40,140 --> 00:35:43,800
even know there is a problem because one

00:35:42,270 --> 00:35:46,350
thing that happens a lot and

00:35:43,800 --> 00:35:46,890
particularly interpolates development

00:35:46,350 --> 00:35:49,410
cycle

00:35:46,890 --> 00:35:54,029
is there's a lot of people too scared to

00:35:49,410 --> 00:35:55,920
say it a lot of contributors are scared

00:35:54,029 --> 00:35:58,200
out of their mind right now because

00:35:55,920 --> 00:35:59,099
Drupal 8 is that big and that different

00:35:58,200 --> 00:36:05,880
they're thinking they're going to get

00:35:59,099 --> 00:36:09,170
eaten we're all new developers again so

00:36:05,880 --> 00:36:11,930
the meanest oh the contribute this

00:36:09,170 --> 00:36:14,760
structurally figure out what's going on

00:36:11,930 --> 00:36:16,799
document and then figure out a way of

00:36:14,760 --> 00:36:22,109
communicating that back to the larger

00:36:16,799 --> 00:36:24,059
community as a source of truth mediation

00:36:22,109 --> 00:36:26,970
provides a back channel so that issues

00:36:24,059 --> 00:36:29,490
can be heard while reducing footwork for

00:36:26,970 --> 00:36:36,119
everybody because now it's somebody's

00:36:29,490 --> 00:36:39,349
job we have a role gap also we have

00:36:36,119 --> 00:36:43,619
another problem change shock a

00:36:39,349 --> 00:36:45,180
contributor mitigate change shock during

00:36:43,619 --> 00:36:47,069
this Drupal devout home because what

00:36:45,180 --> 00:36:49,890
happens is that the worst thing that can

00:36:47,069 --> 00:36:52,799
happen to a to a large open source

00:36:49,890 --> 00:36:56,190
project like Drupal is what happened in

00:36:52,799 --> 00:37:02,460
Drupal 8 does any of this look familiar

00:36:56,190 --> 00:37:04,170
I know understand how core works or

00:37:02,460 --> 00:37:06,450
someone completely out of the blue

00:37:04,170 --> 00:37:10,109
saying please remove me from maintainer

00:37:06,450 --> 00:37:12,359
text or someone or a long-standing core

00:37:10,109 --> 00:37:19,079
developer saying core no longer supports

00:37:12,359 --> 00:37:21,779
hobbyists if you're contributing on just

00:37:19,079 --> 00:37:25,940
their module and you hear this on social

00:37:21,779 --> 00:37:28,559
media with lil context you're terrified

00:37:25,940 --> 00:37:30,450
you're thinking that the next version of

00:37:28,559 --> 00:37:32,190
core is going to be an absolute corker

00:37:30,450 --> 00:37:35,299
and you're not going to want to touch it

00:37:32,190 --> 00:37:35,299
with a ten-foot cattle prod

00:37:37,020 --> 00:37:42,360
fear uncertainty and doubt are

00:37:39,350 --> 00:37:46,740
inevitable when change is huge and

00:37:42,360 --> 00:37:49,140
easily created unintentionally and we've

00:37:46,740 --> 00:37:53,790
done that a lot in the Drupal 8

00:37:49,140 --> 00:37:56,610
development cycle it also comes down to

00:37:53,790 --> 00:37:59,040
that messaging thing we might have a

00:37:56,610 --> 00:38:02,750
core developer who says I need to reduce

00:37:59,040 --> 00:38:05,280
my role in core if you say that on

00:38:02,750 --> 00:38:09,720
social media because you have no one to

00:38:05,280 --> 00:38:12,660
say it to first it's going to create fud

00:38:09,720 --> 00:38:15,390
no matter what you do someone has to be

00:38:12,660 --> 00:38:19,020
there to hear it first and then ask the

00:38:15,390 --> 00:38:22,770
next question why it's a simple question

00:38:19,020 --> 00:38:24,120
but it makes a huge difference and it

00:38:22,770 --> 00:38:26,100
turns out nine times out of ten

00:38:24,120 --> 00:38:29,370
particularly in the Drupal 8 development

00:38:26,100 --> 00:38:31,980
cycle they might just have kids and they

00:38:29,370 --> 00:38:34,320
need to reduce their effort I think dave

00:38:31,980 --> 00:38:37,230
reid had this problem just a few months

00:38:34,320 --> 00:38:39,390
ago he put a tweet out saying that he

00:38:37,230 --> 00:38:44,070
wanted to like reduce his involvement in

00:38:39,390 --> 00:38:47,220
drupal and everyone panicked and then

00:38:44,070 --> 00:38:49,680
about four hours later thankfully he sat

00:38:47,220 --> 00:38:53,220
down and wrote a very lengthy Google+

00:38:49,680 --> 00:38:55,800
page describing why and what his point

00:38:53,220 --> 00:39:01,230
was and it made all the difference in

00:38:55,800 --> 00:39:03,840
the world not all core developers are

00:39:01,230 --> 00:39:06,180
really very good at that they like just

00:39:03,840 --> 00:39:07,980
working on their own stuff because you

00:39:06,180 --> 00:39:09,420
know like a lot of software developers

00:39:07,980 --> 00:39:11,550
core and katrell like we might be

00:39:09,420 --> 00:39:13,440
anti-social we might not like talking

00:39:11,550 --> 00:39:16,170
about these things we might want to just

00:39:13,440 --> 00:39:17,580
say something and be done with that the

00:39:16,170 --> 00:39:24,000
hundred forty character limit does not

00:39:17,580 --> 00:39:25,830
help us here the contributor listen to

00:39:24,000 --> 00:39:28,050
this first and then manage that

00:39:25,830 --> 00:39:29,820
transition bring that announcement

00:39:28,050 --> 00:39:32,280
forward saying oh they're just going to

00:39:29,820 --> 00:39:34,290
refocus on family issues this particular

00:39:32,280 --> 00:39:36,360
developer will be taking over for their

00:39:34,290 --> 00:39:38,340
responsibilities in the interim and

00:39:36,360 --> 00:39:40,380
suddenly if you hear it like that as a

00:39:38,340 --> 00:39:43,620
constructive Ella / they're not worried

00:39:40,380 --> 00:39:45,980
anymore you're like okay I gotcha no

00:39:43,620 --> 00:39:45,980
problem

00:39:46,070 --> 00:39:51,150
thud needs to be constantly and

00:39:48,810 --> 00:39:54,240
carefully managed because if no one does

00:39:51,150 --> 00:40:00,540
it it only confirms people's unspoken

00:39:54,240 --> 00:40:01,890
fears the other last goal i think that

00:40:00,540 --> 00:40:04,560
the contraption happy indeed to do is

00:40:01,890 --> 00:40:06,960
education we have that new developer

00:40:04,560 --> 00:40:08,940
who's looking at drupal a new version of

00:40:06,960 --> 00:40:10,910
quartz huge and intimidating thinking

00:40:08,940 --> 00:40:13,110
they're going to get eaten and the

00:40:10,910 --> 00:40:17,060
contributing can be there saying it's

00:40:13,110 --> 00:40:17,060
dangerous to Drupal alone take this

00:40:22,220 --> 00:40:27,600
examples is only one Avenue blog post

00:40:25,050 --> 00:40:29,790
documentation videos organizing Sprint's

00:40:27,600 --> 00:40:33,600
there's lots of different ways to do

00:40:29,790 --> 00:40:35,790
education for new versions of core but

00:40:33,600 --> 00:40:38,520
we don't need just one person we need an

00:40:35,790 --> 00:40:40,170
initiative we need multiple people

00:40:38,520 --> 00:40:43,470
multiple team members from multiple

00:40:40,170 --> 00:40:45,060
companies naturally I think of from a

00:40:43,470 --> 00:40:47,070
lot of Drupal companies people who are

00:40:45,060 --> 00:40:49,770
community liaisons project managers

00:40:47,070 --> 00:40:52,470
mentors individuals who have that kind

00:40:49,770 --> 00:41:00,119
of focus already that can also work

00:40:52,470 --> 00:41:01,560
toward this so let's recap examples does

00:41:00,119 --> 00:41:03,600
have a special role in the community

00:41:01,560 --> 00:41:05,369
because it boots at on boards new

00:41:03,600 --> 00:41:07,290
developers kick-starts module update

00:41:05,369 --> 00:41:09,900
signals at court on newton new version

00:41:07,290 --> 00:41:12,359
of core is ready both sides are right in

00:41:09,900 --> 00:41:14,550
the argument the parent examples is

00:41:12,359 --> 00:41:17,850
special to the community but core

00:41:14,550 --> 00:41:20,850
inclusion isn't a good fit the problem

00:41:17,850 --> 00:41:22,050
isn't core there's a parliament ism the

00:41:20,850 --> 00:41:24,119
problem is that people's needs aren't

00:41:22,050 --> 00:41:28,109
being and there's no easy way to meet

00:41:24,119 --> 00:41:31,230
those without change we need to

00:41:28,109 --> 00:41:32,730
contribute champion we need someone who

00:41:31,230 --> 00:41:34,830
can mediate concerns about course

00:41:32,730 --> 00:41:39,000
support documentation and examples and

00:41:34,830 --> 00:41:42,150
boost key frontline modules the

00:41:39,000 --> 00:41:43,920
contribute is a social solution to the

00:41:42,150 --> 00:41:49,350
social problems of implementing change

00:41:43,920 --> 00:41:52,109
in a technical context so please please

00:41:49,350 --> 00:41:53,529
let's not point fingers anymore let's

00:41:52,109 --> 00:42:00,859
make

00:41:53,529 --> 00:42:04,429
for everyone and on that note we're

00:42:00,859 --> 00:42:05,959
going to be sprinting on Friday learn

00:42:04,429 --> 00:42:07,399
and contribute to Drupal core will have

00:42:05,959 --> 00:42:10,249
mentors there to help you set up it's

00:42:07,399 --> 00:42:14,599
going to be right here Friday 9am to 6

00:42:10,249 --> 00:42:15,829
p.m. in room 403 thank you I'm socket

00:42:14,599 --> 00:42:21,289
once you can find this presentation

00:42:15,829 --> 00:42:30,439
online who wants another shirt got a

00:42:21,289 --> 00:42:33,169
shirt its large anyone almost I lets

00:42:30,439 --> 00:42:36,829
your that's what my injured arm I'm

00:42:33,169 --> 00:42:44,630
going to regret that in 45 seconds who

00:42:36,829 --> 00:42:48,099
wants another shirt 15 seconds so I

00:42:44,630 --> 00:42:52,579
better get this one out it's a 3x anyone

00:42:48,099 --> 00:42:58,819
anyone now way over there back there

00:42:52,579 --> 00:43:03,799
okay sure oh man I've got such a bad arm

00:42:58,819 --> 00:43:06,169
today I also some flag module stickers

00:43:03,799 --> 00:43:08,959
up here if anyone wants them just go

00:43:06,169 --> 00:43:11,599
ahead and come take them up here alright

00:43:08,959 --> 00:43:14,409
are there any any questions you got a

00:43:11,599 --> 00:43:14,409
question way back there

00:43:17,619 --> 00:43:23,450
so where do they come from today do they

00:43:20,900 --> 00:43:25,490
just grow out of the ground or is there

00:43:23,450 --> 00:43:30,550
is this something you'd see like the

00:43:25,490 --> 00:43:33,260
drupal association organizing like i

00:43:30,550 --> 00:43:35,990
agree with you totally on this where do

00:43:33,260 --> 00:43:38,540
they come from what how do they get so

00:43:35,990 --> 00:43:41,119
yeah that's one of the biggest questions

00:43:38,540 --> 00:43:44,570
and I don't know the drupal association

00:43:41,119 --> 00:43:47,060
seems to be the most logical thing in my

00:43:44,570 --> 00:43:49,220
opinion I've had a few arguments with

00:43:47,060 --> 00:43:54,530
them about this so they don't always

00:43:49,220 --> 00:43:56,000
think that it's a good idea why I think

00:43:54,530 --> 00:44:04,600
it's probably because they thought that

00:43:56,000 --> 00:44:08,690
their job wasn't to help contribute I

00:44:04,600 --> 00:44:11,030
now see the thing is that argument was

00:44:08,690 --> 00:44:12,920
two years ago in in those two years

00:44:11,030 --> 00:44:16,760
their focus is slightly drifted from

00:44:12,920 --> 00:44:19,700
that statement in practice so it it

00:44:16,760 --> 00:44:21,950
bears reexamining in my opinion but no

00:44:19,700 --> 00:44:24,950
one's really listening that's why I'm up

00:44:21,950 --> 00:44:28,670
you're begging people today you have a

00:44:24,950 --> 00:44:31,940
question so yes this is really sort of

00:44:28,670 --> 00:44:35,390
what needs to be done and so who needs

00:44:31,940 --> 00:44:37,220
to do it but how would they sort of do

00:44:35,390 --> 00:44:39,740
this because isn't a lot of interaction

00:44:37,220 --> 00:44:42,830
with like all of the core maintain errs

00:44:39,740 --> 00:44:45,310
and then I guess it's a look there's a

00:44:42,830 --> 00:44:48,140
lot more than just working on examples

00:44:45,310 --> 00:44:50,900
yeah there is and I don't know what that

00:44:48,140 --> 00:44:53,210
is either so that that's that's the

00:44:50,900 --> 00:44:55,730
thing I had this idea because I only

00:44:53,210 --> 00:44:58,430
identified the role gap I have no idea

00:44:55,730 --> 00:45:01,310
how to approach it yet I also really

00:44:58,430 --> 00:45:05,590
need ideas I need ideas from everyone

00:45:01,310 --> 00:45:08,450
and how to actually get this across yeah

00:45:05,590 --> 00:45:10,400
can we like can we like contact forum

00:45:08,450 --> 00:45:12,490
bomb the Association and all asked for

00:45:10,400 --> 00:45:12,490
this

00:45:24,320 --> 00:45:30,480
is a public board meeting tomorrow

00:45:27,620 --> 00:45:34,800
probably be the first best place to

00:45:30,480 --> 00:45:37,350
start with that conversation okay um oh

00:45:34,800 --> 00:45:42,240
jeez I think you had your hand up first

00:45:37,350 --> 00:45:47,030
I just a second why the community

00:45:42,240 --> 00:45:47,030
champion is tied to the examples module

00:45:47,630 --> 00:45:53,790
the are two separate issues really this

00:45:50,730 --> 00:45:56,130
is just how I discovered it and I really

00:45:53,790 --> 00:45:58,800
thought that it was important to put it

00:45:56,130 --> 00:46:02,220
in context of one of these frontline

00:45:58,800 --> 00:46:05,520
modules to show why we were having this

00:46:02,220 --> 00:46:07,860
problem and we had a lot of modules that

00:46:05,520 --> 00:46:12,780
wanted to just get into core at the time

00:46:07,860 --> 00:46:15,360
and that isn't really a solution because

00:46:12,780 --> 00:46:17,370
again that's you know it's a technical

00:46:15,360 --> 00:46:20,040
solution out of social solution we have

00:46:17,370 --> 00:46:25,130
the wrong problem here I think you were

00:46:20,040 --> 00:46:28,440
next so what I was going to say was that

00:46:25,130 --> 00:46:32,340
from my perspective that this is really

00:46:28,440 --> 00:46:34,320
tied toward how the sort of core

00:46:32,340 --> 00:46:37,290
mentoring program works and stuff like

00:46:34,320 --> 00:46:41,430
that because usually that's where you

00:46:37,290 --> 00:46:43,650
find people who have energy and time and

00:46:41,430 --> 00:46:47,520
willingness and so I'm right now working

00:46:43,650 --> 00:46:49,710
on a few like trying to get god form

00:46:47,520 --> 00:46:52,230
elements reference back in the docs

00:46:49,710 --> 00:46:57,150
right now let's sort of my pet champion

00:46:52,230 --> 00:46:59,700
thing and so one of the ways that that I

00:46:57,150 --> 00:47:01,680
sort of got more involved in Drupal was

00:46:59,700 --> 00:47:03,930
through the core met or sprint stuff

00:47:01,680 --> 00:47:08,820
like last Pacific Northwest trip summit

00:47:03,930 --> 00:47:10,980
and and it strikes me that like right

00:47:08,820 --> 00:47:12,960
now in terms of like getting the word

00:47:10,980 --> 00:47:15,900
out about how to reduce fud and get

00:47:12,960 --> 00:47:18,780
people to understand how to use core and

00:47:15,900 --> 00:47:21,150
and those kinds of things it seems to me

00:47:18,780 --> 00:47:23,190
that that and the API Docs and the

00:47:21,150 --> 00:47:25,470
example docs are all kind of integrally

00:47:23,190 --> 00:47:29,070
tied together in turn in terms

00:47:25,470 --> 00:47:30,810
okay so say so you I've been through

00:47:29,070 --> 00:47:32,849
that fairly recently where you try and

00:47:30,810 --> 00:47:35,220
get involved in Drupal and it's kind of

00:47:32,849 --> 00:47:37,050
like wow there's like all this stuff

00:47:35,220 --> 00:47:39,420
what are it's like you're rolling the

00:47:37,050 --> 00:47:41,369
dice figure and you got maybe I got a I

00:47:39,420 --> 00:47:43,500
got a chance of getting a patch in

00:47:41,369 --> 00:47:45,359
before I'm done freely this conference

00:47:43,500 --> 00:47:47,310
right that's kind of how it feels to

00:47:45,359 --> 00:47:49,470
begin with in your and you're and you're

00:47:47,310 --> 00:47:51,630
kind of doing that but part of that is

00:47:49,470 --> 00:47:54,390
because of the high barrier to entry

00:47:51,630 --> 00:47:56,580
around that stuff and so for me it's

00:47:54,390 --> 00:47:58,770
like the people who are running the core

00:47:56,580 --> 00:48:02,700
mentor spreads are already you're doing

00:47:58,770 --> 00:48:05,130
a really really good job of grabbing

00:48:02,700 --> 00:48:07,680
people and pulling together and and

00:48:05,130 --> 00:48:10,320
giving kind of what i would call

00:48:07,680 --> 00:48:12,510
training opportunities about that are

00:48:10,320 --> 00:48:15,000
the reward that you get for starting to

00:48:12,510 --> 00:48:18,869
get involved in core and so to some

00:48:15,000 --> 00:48:20,849
extent when i look at the the gap here

00:48:18,869 --> 00:48:24,359
from that perspective the solution has

00:48:20,849 --> 00:48:26,520
got to lie in that same structure

00:48:24,359 --> 00:48:29,730
because the mentorship the mentorship

00:48:26,520 --> 00:48:31,980
program the way that that program works

00:48:29,730 --> 00:48:34,230
and the way that it kind of gives you

00:48:31,980 --> 00:48:36,540
the opportunity to cut where people kind

00:48:34,230 --> 00:48:40,140
of are in the right headspace they're

00:48:36,540 --> 00:48:42,540
honoring your your they're honoring your

00:48:40,140 --> 00:48:44,099
concerns and your confusion and stuff

00:48:42,540 --> 00:48:46,980
like that in a way that doesn't always

00:48:44,099 --> 00:48:48,690
happen in the other environments because

00:48:46,980 --> 00:48:50,250
it's kind of like well I'm busy and I'm

00:48:48,690 --> 00:48:52,560
just trying to get stuff done right but

00:48:50,250 --> 00:48:54,720
but there's that space that happens

00:48:52,560 --> 00:48:57,540
where people are actually in the right

00:48:54,720 --> 00:48:59,130
headspace for welcoming the confusion

00:48:57,540 --> 00:49:02,099
that people might have in an API or

00:48:59,130 --> 00:49:04,140
something like that and so I think there

00:49:02,099 --> 00:49:07,710
that that's where you're likely to

00:49:04,140 --> 00:49:10,710
uncover a lot of the fud from that

00:49:07,710 --> 00:49:13,740
perspective and if that were more more

00:49:10,710 --> 00:49:15,359
in line with training opportunities and

00:49:13,740 --> 00:49:17,099
I'm not quite sure how to do that I mean

00:49:15,359 --> 00:49:19,140
maybe there's some partner programs that

00:49:17,099 --> 00:49:21,030
need to be worked out about working

00:49:19,140 --> 00:49:22,320
through example lot modules if we got

00:49:21,030 --> 00:49:24,510
all these people come and given these

00:49:22,320 --> 00:49:27,480
trainings on development you know maybe

00:49:24,510 --> 00:49:30,109
that could be harnessed for the goodness

00:49:27,480 --> 00:49:33,109
of like the API Docs and stuff like that

00:49:30,109 --> 00:49:33,109
because

00:49:34,230 --> 00:49:40,060
yeah the only reason why I didn't

00:49:37,210 --> 00:49:43,060
feature mentors more strongly in this is

00:49:40,060 --> 00:49:45,609
because a lot of mentoring revolves

00:49:43,060 --> 00:49:48,609
around contributing decor it doesn't

00:49:45,609 --> 00:49:51,190
control all valid contributing to trib

00:49:48,609 --> 00:49:55,960
and cathy is going to correct me in five

00:49:51,190 --> 00:49:59,530
seconds I'm sure I was about to want to

00:49:55,960 --> 00:50:01,780
disagree with you completely until you

00:49:59,530 --> 00:50:04,869
got to the point about the headspace

00:50:01,780 --> 00:50:07,150
thing which matches what you said about

00:50:04,869 --> 00:50:13,349
the social problem thing and then I was

00:50:07,150 --> 00:50:17,880
like oh that's really a good point but

00:50:13,349 --> 00:50:21,849
core mentors are structured around core

00:50:17,880 --> 00:50:26,109
there aren't a surplus of them to take

00:50:21,849 --> 00:50:30,400
on a new responsibilities um but I

00:50:26,109 --> 00:50:36,369
talked to foobie um in France at that

00:50:30,400 --> 00:50:41,589
days and I think there could be untapped

00:50:36,369 --> 00:50:43,510
resource of people who could maybe model

00:50:41,589 --> 00:50:45,970
some things after the mentor thing and

00:50:43,510 --> 00:50:48,220
like if they get those new people that

00:50:45,970 --> 00:50:49,540
are in contribute to help with core but

00:50:48,220 --> 00:50:51,210
they feel like they can't kind of thing

00:50:49,540 --> 00:50:54,280
and you get them started and set that up

00:50:51,210 --> 00:50:57,160
they'll be in that good head space and

00:50:54,280 --> 00:50:59,470
you're not asking people who are already

00:50:57,160 --> 00:51:00,700
doing too much to do more right that's

00:50:59,470 --> 00:51:02,680
the tricky bit like where are you going

00:51:00,700 --> 00:51:05,410
to get these people right and you get

00:51:02,680 --> 00:51:08,109
them from people who want to help but

00:51:05,410 --> 00:51:09,910
aren't you can't get people who are

00:51:08,109 --> 00:51:13,869
already helping to help that's not going

00:51:09,910 --> 00:51:16,329
to happen having it resolve revolve

00:51:13,869 --> 00:51:20,829
around sprints this is the thing a lot

00:51:16,329 --> 00:51:23,470
of contribs at a sprint and a lot of

00:51:20,829 --> 00:51:25,000
mentoring happens around sprints so

00:51:23,470 --> 00:51:27,240
there's a bit of a mismatch there as

00:51:25,000 --> 00:51:27,240
well

00:51:32,680 --> 00:51:41,720
so it's it strikes me is really

00:51:36,769 --> 00:51:45,529
interesting that that api doc examples

00:51:41,720 --> 00:51:49,940
that I am working on writing our core

00:51:45,529 --> 00:51:53,480
and that the examples that are in the

00:51:49,940 --> 00:51:55,309
example modules are not core from the

00:51:53,480 --> 00:52:01,539
way that you just represented that

00:51:55,309 --> 00:52:04,400
perspective and so from that person I'm

00:52:01,539 --> 00:52:07,609
busy trying to puzzle out and figure out

00:52:04,400 --> 00:52:09,140
how how to like get this communications

00:52:07,609 --> 00:52:10,640
gap dealt with because actually I have a

00:52:09,140 --> 00:52:12,559
team of developers and the reason I'm

00:52:10,640 --> 00:52:15,170
interested is because I have a team of

00:52:12,559 --> 00:52:17,569
developers that I have to train on how

00:52:15,170 --> 00:52:20,660
to upgrade a boatload of modules I've

00:52:17,569 --> 00:52:22,279
got like a seven-year cycle of module

00:52:20,660 --> 00:52:26,299
upgrades that I'm going to have to start

00:52:22,279 --> 00:52:28,670
back when I get back home and and I got

00:52:26,299 --> 00:52:32,599
to train these guys on that stuff and

00:52:28,670 --> 00:52:35,299
right now the best way that people talk

00:52:32,599 --> 00:52:37,130
about well how do you learn how core is

00:52:35,299 --> 00:52:39,170
supposed to work and how you develop a

00:52:37,130 --> 00:52:40,999
base module and stuff like that is like

00:52:39,170 --> 00:52:44,539
nine times out of 10 you get referred to

00:52:40,999 --> 00:52:47,329
the change logs right and it's like okay

00:52:44,539 --> 00:52:51,079
so I'm supposed to throw a new developer

00:52:47,329 --> 00:52:54,499
at changelogs multi version community

00:52:51,079 --> 00:52:56,660
docs and that's gonna get them ramped up

00:52:54,499 --> 00:52:59,749
on object-oriented programming done

00:52:56,660 --> 00:53:01,460
right pack know right so so from that

00:52:59,749 --> 00:53:03,799
perspective I think there's a real

00:53:01,460 --> 00:53:07,190
problem with thinking about code

00:53:03,799 --> 00:53:10,430
examples as not core from just from the

00:53:07,190 --> 00:53:12,109
perspective of the the mentoring program

00:53:10,430 --> 00:53:14,210
and the getting the word out and the

00:53:12,109 --> 00:53:16,789
bringing people in not from the

00:53:14,210 --> 00:53:18,410
perspective of anything else really and

00:53:16,789 --> 00:53:19,880
and i'm really only i'm not talking

00:53:18,410 --> 00:53:21,319
about all of contrast i'm not even

00:53:19,880 --> 00:53:24,349
talking about rules or something like

00:53:21,319 --> 00:53:26,630
that i'm talking about just core

00:53:24,349 --> 00:53:29,539
examples and how you get i mean if you

00:53:26,630 --> 00:53:34,220
go to jquery you sure as heck don't

00:53:29,539 --> 00:53:36,380
expect to find a pointer to the raw code

00:53:34,220 --> 00:53:38,450
to figure out how to use jquery right

00:53:36,380 --> 00:53:40,640
and you don't really expect to find

00:53:38,450 --> 00:53:41,809
multi version stuff to figure out how to

00:53:40,640 --> 00:53:44,390
use jquery

00:53:41,809 --> 00:53:46,819
you expect there to find curated code

00:53:44,390 --> 00:53:49,099
examples for how things are supposed to

00:53:46,819 --> 00:53:51,049
be done and from that perspective our

00:53:49,099 --> 00:53:53,329
community has fallen behind a little bit

00:53:51,049 --> 00:53:56,299
in that regard in terms of api docs

00:53:53,329 --> 00:53:58,699
compared to other stuff itself a lot of

00:53:56,299 --> 00:54:02,269
the core exam a lot of the example

00:53:58,699 --> 00:54:04,689
modules just basically sat on updated

00:54:02,269 --> 00:54:08,059
for about a period of eight months until

00:54:04,689 --> 00:54:11,689
after i have been working on flag module

00:54:08,059 --> 00:54:13,459
and fighting every night to actually get

00:54:11,689 --> 00:54:16,339
that to work because that was the only

00:54:13,459 --> 00:54:18,499
way to figure it out I have changelog

00:54:16,339 --> 00:54:22,009
sport useful reading issues weren't

00:54:18,499 --> 00:54:24,769
useful renaming code wasn't useful I had

00:54:22,009 --> 00:54:27,229
to actually copy code make it break and

00:54:24,769 --> 00:54:30,469
then beg people on IRC to find out how

00:54:27,229 --> 00:54:32,660
this was supposed to work and then I was

00:54:30,469 --> 00:54:35,449
able to translate that into example code

00:54:32,660 --> 00:54:37,249
I didn't want other people to have to do

00:54:35,449 --> 00:54:39,019
what I did because I'm a glutton for

00:54:37,249 --> 00:54:45,559
punishment but I don't want other people

00:54:39,019 --> 00:54:48,019
to be punished so somebody asked over

00:54:45,559 --> 00:54:51,289
there about how like examples you know

00:54:48,019 --> 00:54:53,209
ties in with this contributing and so I

00:54:51,289 --> 00:54:56,479
think that's the thing I got out of this

00:54:53,209 --> 00:54:59,599
talk is I thought examples was at and so

00:54:56,479 --> 00:55:00,979
I got from this why it isn't and why it

00:54:59,599 --> 00:55:02,719
needs to be something separate so that

00:55:00,979 --> 00:55:06,259
makes a lot more sense to me now thank

00:55:02,719 --> 00:55:09,679
you I like to say that it shouldn't be

00:55:06,259 --> 00:55:12,439
in core but it's processed hi decor but

00:55:09,679 --> 00:55:14,479
we don't have any people process to tie

00:55:12,439 --> 00:55:16,549
it right now we're depending on the

00:55:14,479 --> 00:55:18,589
nebulous community to fix everything and

00:55:16,549 --> 00:55:20,269
I don't think that will work for and for

00:55:18,589 --> 00:55:24,480
now because it hasn't been working for

00:55:20,269 --> 00:55:27,910
two years that's something

00:55:24,480 --> 00:55:32,550
so you talked about needing a new

00:55:27,910 --> 00:55:35,560
initiative for the contribute a min

00:55:32,550 --> 00:55:38,260
seems to me that much easier than

00:55:35,560 --> 00:55:41,530
starting a new initiative is hijacking

00:55:38,260 --> 00:55:43,210
an existing one so we we have a

00:55:41,530 --> 00:55:45,910
developer experience initiative right

00:55:43,210 --> 00:55:49,170
the DX at least at least DX tag I think

00:55:45,910 --> 00:55:49,170
there's an initiative tied to that

00:55:53,400 --> 00:55:59,500
you're saying that it's ripe for

00:55:55,960 --> 00:56:01,900
hijacking let's go for it let's take

00:55:59,500 --> 00:56:05,290
over yes let's take over the DX

00:56:01,900 --> 00:56:09,430
initiative and make it do what needs to

00:56:05,290 --> 00:56:11,350
be done I'd like to say that would be a

00:56:09,430 --> 00:56:13,780
wonderful solution but that's only part

00:56:11,350 --> 00:56:15,580
of it having a name is only part of it

00:56:13,780 --> 00:56:18,040
we do need someone whose job it is to

00:56:15,580 --> 00:56:19,990
actually do this my job isn't to work on

00:56:18,040 --> 00:56:23,170
examples my job isn't to work on flag

00:56:19,990 --> 00:56:25,900
I'm pea I work to have work to do client

00:56:23,170 --> 00:56:29,890
work I only do this everything else on

00:56:25,900 --> 00:56:33,280
my own personal time in its painful

00:56:29,890 --> 00:56:35,050
because I know if I were to sit down and

00:56:33,280 --> 00:56:37,540
have a week to work on this I could get

00:56:35,050 --> 00:56:40,330
most of examples done and we would have

00:56:37,540 --> 00:56:42,340
some really good stuff but no one's

00:56:40,330 --> 00:56:47,290
stepping up because there's no money

00:56:42,340 --> 00:56:49,390
behind it I would like to talk to the

00:56:47,290 --> 00:56:53,220
trading companies to fund me Kathy but

00:56:49,390 --> 00:56:53,220
that's why I'm here begging people now

00:56:53,640 --> 00:56:58,360
or talk to the training companies to

00:56:56,440 --> 00:57:02,050
fund somebody else you already have a

00:56:58,360 --> 00:57:08,010
job don't get me wrong i'd gladly do it

00:57:02,050 --> 00:57:12,000
if someone said i could anything else

00:57:08,010 --> 00:57:12,000
all right thank you everyone

00:57:12,530 --> 00:57:14,590

YouTube URL: https://www.youtube.com/watch?v=WbQUEr6e0gY


