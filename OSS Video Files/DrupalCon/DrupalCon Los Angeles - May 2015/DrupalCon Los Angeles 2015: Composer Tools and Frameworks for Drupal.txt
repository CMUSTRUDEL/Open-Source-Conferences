Title: DrupalCon Los Angeles 2015: Composer Tools and Frameworks for Drupal
Publication date: 2015-05-12
Playlist: DrupalCon Los Angeles - May 2015
Description: 
	Composer is the de-facto php dependency management tool of the future.  An ever-increasing number of useful open-source libraries are available for easy use via Packagist, the standard repository manager for Composer.  As more and more Drupal contrib modules begin to depend on external libraries from Packagist, the motivation to use Composer to manage grows stronger; since Drupal 8 Core, and Drush 7 are now also using Composer to manage dependencies, the best way to insure that all of the requirements are resolved correctly is to manage everything from a top-level project composer.json file.

In this session, we will examine the different ways that Composer can be used to manage your project code, and how these new practices will influence how you use Drush and deploy code. The following open source tools will be examined:

Drupal Packagist

Drupal Tangler

Drupal Project

Drupal Library Installer

Composer Patches Plugin

Composer Generate

Each tool and how they interact will be explained, and differences between Composer usage on Drupal 7 and Drupal 8 will be examined. Once the theoretical foundation is laid, we will show how the Drupal 7 Framework can be used to pull together a collection of these tools to create a local Vagrant-based Drupal 7 development environment. The common workflows of adding a custom module, installing a new module or theme, adding a library, applying a patch, performing updates, and deploying will also be discussed.
Captions: 
	00:00:32,610 --> 00:00:35,559
everyone go ahead and find a seat if

00:00:34,660 --> 00:00:37,210
you're wondering if you're in the right

00:00:35,559 --> 00:00:39,340
place in a minute or two we're going to

00:00:37,210 --> 00:00:42,149
be talking about composer Drupal and

00:00:39,340 --> 00:00:42,149
rush for the win

00:01:15,800 --> 00:01:20,940
good afternoon everyone you are in the

00:01:18,690 --> 00:01:23,820
composer drupal and rush for the wind

00:01:20,940 --> 00:01:25,290
session like to tell you a little bit of

00:01:23,820 --> 00:01:28,110
a story so you can find out if you're in

00:01:25,290 --> 00:01:30,060
the right place or not today we're

00:01:28,110 --> 00:01:31,710
living in a world where software is

00:01:30,060 --> 00:01:33,990
becoming more and more complicated and

00:01:31,710 --> 00:01:36,270
dependency management is getting more

00:01:33,990 --> 00:01:39,000
and more complicated and people are

00:01:36,270 --> 00:01:40,370
trying to do this manually but the

00:01:39,000 --> 00:01:43,070
dependencies are just getting

00:01:40,370 --> 00:01:47,759
unmanageable you losing track of things

00:01:43,070 --> 00:01:48,869
dropping your boxes it's not modern I'll

00:01:47,759 --> 00:01:50,160
tell you a little story about something

00:01:48,869 --> 00:01:51,720
that happened to me for realize having

00:01:50,160 --> 00:01:54,470
an argument with someone over dependency

00:01:51,720 --> 00:01:56,729
management what was an argument was a

00:01:54,470 --> 00:02:00,840
civilized discussion in the issue queue

00:01:56,729 --> 00:02:02,550
and he said well you don't have to use

00:02:00,840 --> 00:02:04,619
composer like back you can do your own

00:02:02,550 --> 00:02:07,200
thing to see what he was talking about i

00:02:04,619 --> 00:02:10,110
installed his extension and i forgot it

00:02:07,200 --> 00:02:11,989
was there in a month later drupal 8 just

00:02:10,110 --> 00:02:14,250
started blowing up on me it's like boom

00:02:11,989 --> 00:02:15,690
how could it even do that isn't that bug

00:02:14,250 --> 00:02:17,340
debugger and I'm like how could it even

00:02:15,690 --> 00:02:19,530
do that the base class it doesn't even

00:02:17,340 --> 00:02:24,600
have its requirements and I can see the

00:02:19,530 --> 00:02:26,550
code and it's right there that guy he

00:02:24,600 --> 00:02:30,360
had a copy of symphony in his project

00:02:26,550 --> 00:02:33,480
and the base class was different it was

00:02:30,360 --> 00:02:34,799
descending from an older version so the

00:02:33,480 --> 00:02:37,350
derive cast list is heading for an old

00:02:34,799 --> 00:02:39,810
version of the base class and that was a

00:02:37,350 --> 00:02:41,250
runtime error it wasn't you included

00:02:39,810 --> 00:02:46,430
something place it was a run timer is

00:02:41,250 --> 00:02:49,650
hard to find so the right way so using

00:02:46,430 --> 00:02:51,900
composer that's going to help you manage

00:02:49,650 --> 00:02:53,610
your dependencies it's going to make it

00:02:51,900 --> 00:02:55,260
a lot easier so you don't have to go

00:02:53,610 --> 00:02:57,390
through and think okay well I have this

00:02:55,260 --> 00:02:59,250
and that requires this and then that

00:02:57,390 --> 00:03:01,560
requires these two things so now do I

00:02:59,250 --> 00:03:02,940
have all these there just no more hey

00:03:01,560 --> 00:03:05,370
this isn't working because you're

00:03:02,940 --> 00:03:07,620
missing something you need composer

00:03:05,370 --> 00:03:10,200
manages that all for you make sure it's

00:03:07,620 --> 00:03:12,810
there for you another thing it can do is

00:03:10,200 --> 00:03:14,489
help you avoid but class nightmare where

00:03:12,810 --> 00:03:17,100
it's inheriting from the wrong base

00:03:14,489 --> 00:03:19,200
class oo the autoloader lacey includes

00:03:17,100 --> 00:03:22,139
all these class files for you and make

00:03:19,200 --> 00:03:23,260
sure you avoid this nightmare by Greg

00:03:22,139 --> 00:03:26,680
went through

00:03:23,260 --> 00:03:29,379
and it also helps keep your repository

00:03:26,680 --> 00:03:32,170
clean no longer are you committing all

00:03:29,379 --> 00:03:34,870
of the module files all of the libraries

00:03:32,170 --> 00:03:36,939
you have basically one line if you're

00:03:34,870 --> 00:03:38,530
doing peer review and someone's like

00:03:36,939 --> 00:03:40,840
yeah I'm building this new functionality

00:03:38,530 --> 00:03:42,730
and it requires these libraries and

00:03:40,840 --> 00:03:44,680
these modules and maybe there's some

00:03:42,730 --> 00:03:46,180
custom code you just go through all of

00:03:44,680 --> 00:03:48,610
it you're like wading through module

00:03:46,180 --> 00:03:50,349
files after module files no more you can

00:03:48,610 --> 00:03:54,340
easily here's exactly what they did

00:03:50,349 --> 00:03:56,680
custom okay so i'm greg anderson i work

00:03:54,340 --> 00:03:59,170
for pantheon an awesome company i'm an

00:03:56,680 --> 00:04:01,239
open-source contribution engineer and

00:03:59,170 --> 00:04:05,049
some of you know me for my work on drush

00:04:01,239 --> 00:04:07,840
I'm Doug go Burzynski i am the build

00:04:05,049 --> 00:04:13,269
manager and a drupal developer at promet

00:04:07,840 --> 00:04:15,370
source based in chicago today we're

00:04:13,269 --> 00:04:18,609
going to talk about what is composer and

00:04:15,370 --> 00:04:20,650
from there so installing Drupal 7 with

00:04:18,609 --> 00:04:24,550
composer you're going to have a composer

00:04:20,650 --> 00:04:26,830
vendor plus a custom installer or you

00:04:24,550 --> 00:04:29,470
can take the Drupal tangler route so you

00:04:26,830 --> 00:04:30,639
have two options and based on those two

00:04:29,470 --> 00:04:32,919
options we're going to tell you how to

00:04:30,639 --> 00:04:34,630
manage your project and then we'll also

00:04:32,919 --> 00:04:42,690
go over how to do the same thing with

00:04:34,630 --> 00:04:46,630
Drupal 8 41 let's get started so

00:04:42,690 --> 00:04:48,520
composer includes an installer you'll

00:04:46,630 --> 00:04:51,490
notice there that it's listed we'll go

00:04:48,520 --> 00:04:53,620
into that in some more depth it's also a

00:04:51,490 --> 00:04:55,180
dependency manager different components

00:04:53,620 --> 00:04:57,900
are going to ask for different versions

00:04:55,180 --> 00:05:01,030
of their libraries of two different

00:04:57,900 --> 00:05:02,470
components ask for the same thing in

00:05:01,030 --> 00:05:04,030
different versions composers going to

00:05:02,470 --> 00:05:06,760
figure out which versions the best one

00:05:04,030 --> 00:05:11,650
to use and it's an autoloader it loads

00:05:06,760 --> 00:05:14,620
all your classes for you so why use it

00:05:11,650 --> 00:05:16,570
its standard it makes it easier for

00:05:14,620 --> 00:05:18,370
developers it takes care of all of your

00:05:16,570 --> 00:05:21,430
dependencies make sure you have the best

00:05:18,370 --> 00:05:24,430
version it does code updates for you and

00:05:21,430 --> 00:05:26,830
it auto loads your classes basically

00:05:24,430 --> 00:05:29,949
it's being used everywhere here are some

00:05:26,830 --> 00:05:32,830
examples so you'll notice there are ton

00:05:29,949 --> 00:05:35,229
of projects using composer if we try to

00:05:32,830 --> 00:05:36,110
include them all we'd probably fill up

00:05:35,229 --> 00:05:38,990
the whole hour

00:05:36,110 --> 00:05:42,650
so here are some gamble symphony Drupal

00:05:38,990 --> 00:05:46,250
8 now lots of lots of projects are using

00:05:42,650 --> 00:05:52,580
composer Vic Drupal 7 isn't using

00:05:46,250 --> 00:06:00,290
composer oh can we use composer to build

00:05:52,580 --> 00:06:02,840
Drupal 7 yes we can so we have different

00:06:00,290 --> 00:06:05,390
parts and composer you have composer the

00:06:02,840 --> 00:06:07,550
PHP dependency management you're going

00:06:05,390 --> 00:06:10,520
to use packages this manages your

00:06:07,550 --> 00:06:12,590
software you're going to use a composer

00:06:10,520 --> 00:06:15,470
JSON file to tell pakka just exactly

00:06:12,590 --> 00:06:18,920
what you need you're going to have auto

00:06:15,470 --> 00:06:22,370
load PHP the generated file that must be

00:06:18,920 --> 00:06:24,200
included by your app and finally you're

00:06:22,370 --> 00:06:25,790
going to have to pick a custom installer

00:06:24,200 --> 00:06:27,560
this is going to be one of the key

00:06:25,790 --> 00:06:28,940
things will explain is how we use these

00:06:27,560 --> 00:06:34,700
things to make everything work with

00:06:28,940 --> 00:06:37,880
Drupal 7 so what is packages it's a

00:06:34,700 --> 00:06:40,100
third-party repository containing data

00:06:37,880 --> 00:06:43,010
on projects that Drupal from drupal.org

00:06:40,100 --> 00:06:46,640
it's at packages Drupal dash composer

00:06:43,010 --> 00:06:49,430
org the people who maintain this one of

00:06:46,640 --> 00:06:51,590
them being web flow Florian Weber are

00:06:49,430 --> 00:06:55,220
amazing people and have made this

00:06:51,590 --> 00:06:56,600
available for us to use and the other

00:06:55,220 --> 00:06:59,150
thing I want to mention about that is

00:06:56,600 --> 00:07:01,670
that there is a standard packages that

00:06:59,150 --> 00:07:04,040
you can register components in but then

00:07:01,670 --> 00:07:05,600
this is the special Drupal one that

00:07:04,040 --> 00:07:09,110
automatically takes dependencies from

00:07:05,600 --> 00:07:13,250
duplet org an interesting thing about

00:07:09,110 --> 00:07:15,020
Drupal packages is a composer requires

00:07:13,250 --> 00:07:16,940
that all of your component version

00:07:15,020 --> 00:07:18,710
numbers use what's called semantic

00:07:16,940 --> 00:07:21,590
versioning there's something called a

00:07:18,710 --> 00:07:23,690
major version a minor version and a

00:07:21,590 --> 00:07:27,470
patched version and these all have very

00:07:23,690 --> 00:07:29,570
specific meanings to composer in the

00:07:27,470 --> 00:07:31,670
Drupal universe however it's a little

00:07:29,570 --> 00:07:34,040
bit more confusing than that you've got

00:07:31,670 --> 00:07:36,350
the Drupal major version the Drupal that

00:07:34,040 --> 00:07:38,480
or just calls the major version unless

00:07:36,350 --> 00:07:40,160
it's talking about modules then the

00:07:38,480 --> 00:07:41,360
major version is the modules major

00:07:40,160 --> 00:07:43,160
version which is that middle number

00:07:41,360 --> 00:07:46,400
there and then there's also what they

00:07:43,160 --> 00:07:49,700
call the minor version so in Drupal pack

00:07:46,400 --> 00:07:51,800
adjust the drupal module version is Rima

00:07:49,700 --> 00:07:53,390
apt to semantic versioning with the

00:07:51,800 --> 00:07:56,210
Drupal major version becoming the major

00:07:53,390 --> 00:07:58,340
version and the module version becoming

00:07:56,210 --> 00:08:00,830
the minor version and the Drupal minor

00:07:58,340 --> 00:08:02,960
version becoming the packages patch but

00:08:00,830 --> 00:08:04,610
the mapping doesn't have to be as

00:08:02,960 --> 00:08:05,930
confusing as it sounds you see the three

00:08:04,610 --> 00:08:07,640
numbers in order there's still the same

00:08:05,930 --> 00:08:09,800
three numbers in order you'll just write

00:08:07,640 --> 00:08:13,250
it a little bit differently in your

00:08:09,800 --> 00:08:16,040
composure JSON file so looking at this

00:08:13,250 --> 00:08:19,040
versus dress make you'll notice they're

00:08:16,040 --> 00:08:21,800
fairly similar down at the bottom you

00:08:19,040 --> 00:08:24,350
have your modules and rush make composer

00:08:21,800 --> 00:08:27,220
JSON you include those modules and

00:08:24,350 --> 00:08:33,380
require and you also specify the

00:08:27,220 --> 00:08:36,350
repository to use the autoloader is a

00:08:33,380 --> 00:08:39,410
really cool feature of composer the

00:08:36,350 --> 00:08:42,790
concept of auto loading itself is part

00:08:39,410 --> 00:08:46,120
of PHP that's something that PHP does

00:08:42,790 --> 00:08:48,470
but to help you manage your autoloader a

00:08:46,120 --> 00:08:50,300
composer has a number of components

00:08:48,470 --> 00:08:53,630
where it plugs in to this runtime system

00:08:50,300 --> 00:08:54,680
and this slide only shows about half of

00:08:53,630 --> 00:08:56,660
the parts i just want to give you a

00:08:54,680 --> 00:08:59,630
taste of what autoloading is like so you

00:08:56,660 --> 00:09:02,120
can understand the concept in the upper

00:08:59,630 --> 00:09:03,590
left on your PHP runtime you're just

00:09:02,120 --> 00:09:05,900
going to include your autoloader file

00:09:03,590 --> 00:09:08,050
and then after that your only obligation

00:09:05,900 --> 00:09:10,610
well you have no obligation you just

00:09:08,050 --> 00:09:12,560
instantiate a new class and the

00:09:10,610 --> 00:09:16,700
autoloader finds it for you how does

00:09:12,560 --> 00:09:18,110
that work well at install time there's a

00:09:16,700 --> 00:09:21,410
little bit of information inside of your

00:09:18,110 --> 00:09:25,210
composure JSON file that describes where

00:09:21,410 --> 00:09:28,520
a given package has its source code

00:09:25,210 --> 00:09:31,460
located so composer reads that file and

00:09:28,520 --> 00:09:33,500
then in the bottom right there you can

00:09:31,460 --> 00:09:36,320
see it makes a little PHP file that has

00:09:33,500 --> 00:09:39,350
a map that just records that information

00:09:36,320 --> 00:09:43,220
and at runtime PHP is going to go ahead

00:09:39,350 --> 00:09:48,250
and load this other piece of generated

00:09:43,220 --> 00:09:51,740
code here that just iterates over the

00:09:48,250 --> 00:09:54,530
class load information and calls the PHP

00:09:51,740 --> 00:09:57,920
function well the composer function set

00:09:54,530 --> 00:10:00,530
PSR for which eventually goes and calls

00:09:57,920 --> 00:10:03,139
the PHP function that tells you where

00:10:00,530 --> 00:10:05,389
that class can be found so

00:10:03,139 --> 00:10:07,220
all of this stuff that's done for you it

00:10:05,389 --> 00:10:08,480
only saves you one line of code you

00:10:07,220 --> 00:10:10,670
don't have to include your class file

00:10:08,480 --> 00:10:13,209
anymore one line of code per class but

00:10:10,670 --> 00:10:15,230
it's a very very important line because

00:10:13,209 --> 00:10:18,410
leaving this line out of your source

00:10:15,230 --> 00:10:20,239
code means that you don't need to worry

00:10:18,410 --> 00:10:22,279
about where the classes are coming from

00:10:20,239 --> 00:10:25,160
and that is what opens up the

00:10:22,279 --> 00:10:28,489
possibility of allowing composer to

00:10:25,160 --> 00:10:31,220
manage that complexity for you so

00:10:28,489 --> 00:10:35,569
looking at some custom installers for

00:10:31,220 --> 00:10:40,249
Drupal 7 and composer as we mentioned

00:10:35,569 --> 00:10:43,359
earlier you have several options we have

00:10:40,249 --> 00:10:46,910
this first two in the upper left with

00:10:43,359 --> 00:10:51,019
the custom installer as well as composer

00:10:46,910 --> 00:10:53,509
preserve pass another option is Drupal

00:10:51,019 --> 00:10:55,129
tangler which is a custom installer that

00:10:53,509 --> 00:10:59,959
will take your components and drop them

00:10:55,129 --> 00:11:02,569
down exactly where they go along with

00:10:59,959 --> 00:11:05,480
that you have some optional parts to use

00:11:02,569 --> 00:11:07,819
with composer tangler there are stupid

00:11:05,480 --> 00:11:10,790
libraries installer plug-in to help you

00:11:07,819 --> 00:11:14,480
get needed libraries into the right

00:11:10,790 --> 00:11:18,559
folder as well as composer patches

00:11:14,480 --> 00:11:19,999
allowing you to patch modules will show

00:11:18,559 --> 00:11:23,989
you how all of these things are used

00:11:19,999 --> 00:11:26,749
next so the short answer is with all of

00:11:23,989 --> 00:11:33,739
these things yes we can and we're going

00:11:26,749 --> 00:11:36,769
to show you how part deux so looking at

00:11:33,739 --> 00:11:39,709
some options we have composer auto load

00:11:36,769 --> 00:11:43,220
this searches for an auto load file in

00:11:39,709 --> 00:11:45,379
every module directory and then load

00:11:43,220 --> 00:11:47,299
some individually the thing to note is

00:11:45,379 --> 00:11:49,369
if you're looking through all these

00:11:47,299 --> 00:11:52,279
files and Loan them individually it's

00:11:49,369 --> 00:11:54,019
very fragile this is exactly the

00:11:52,279 --> 00:11:56,059
scenario i went over at the beginning of

00:11:54,019 --> 00:11:58,129
the talk even if you're using composer

00:11:56,059 --> 00:11:59,869
if you just merge these autoloaders

00:11:58,129 --> 00:12:02,949
together you're going to get runtime

00:11:59,869 --> 00:12:05,239
errors so we want a solution that

00:12:02,949 --> 00:12:08,389
handles everything together in composer

00:12:05,239 --> 00:12:11,600
and composer manager is an example of

00:12:08,389 --> 00:12:13,549
one of these solutions it will iterate

00:12:11,600 --> 00:12:15,379
over all of the files in your Drupal

00:12:13,549 --> 00:12:17,180
site and find all of the composer Jason

00:12:15,379 --> 00:12:19,280
and it chops them up until

00:12:17,180 --> 00:12:22,130
pieces and it reassembles them just

00:12:19,280 --> 00:12:24,860
right and make sure that everything is

00:12:22,130 --> 00:12:26,900
all put together just so to allow your

00:12:24,860 --> 00:12:30,500
dependencies to be evaluated by composer

00:12:26,900 --> 00:12:33,290
and it works and if you're already using

00:12:30,500 --> 00:12:35,510
composer manager and you're happy with

00:12:33,290 --> 00:12:38,270
it there's no reason to stop using it

00:12:35,510 --> 00:12:40,400
because it works as advertised but the

00:12:38,270 --> 00:12:42,890
problem with composer manager is it's

00:12:40,400 --> 00:12:44,930
complicated so if you're using this in

00:12:42,890 --> 00:12:46,850
your project then you are going to be

00:12:44,930 --> 00:12:48,770
dependent upon someone to maintain this

00:12:46,850 --> 00:12:51,920
complexity so we're going to show you

00:12:48,770 --> 00:12:53,780
another way that doesn't require

00:12:51,920 --> 00:12:56,360
composer manager actually there's two

00:12:53,780 --> 00:12:59,690
choices so as we mentioned one of the

00:12:56,360 --> 00:13:02,660
choices is Drupal tangler so this rights

00:12:59,690 --> 00:13:05,750
a settings a PHP file that loads the

00:13:02,660 --> 00:13:07,820
correct autoload dot PHP file and I also

00:13:05,750 --> 00:13:10,580
call out a very simple module called

00:13:07,820 --> 00:13:13,280
composer bender all it does is include

00:13:10,580 --> 00:13:15,200
one file the auto load PHP and sitesell

00:13:13,280 --> 00:13:16,940
vendor you could actually dispense with

00:13:15,200 --> 00:13:19,970
this module as well and just include the

00:13:16,940 --> 00:13:24,140
auto loader by hand from settings PHP

00:13:19,970 --> 00:13:26,810
which is what tangler does so looking at

00:13:24,140 --> 00:13:29,210
drupal tangler we have the overall

00:13:26,810 --> 00:13:31,280
structure there if you're familiar with

00:13:29,210 --> 00:13:34,730
composer one thing you'll start to see

00:13:31,280 --> 00:13:38,270
it's very important is the composer JSON

00:13:34,730 --> 00:13:40,730
file this is a new top level directory

00:13:38,270 --> 00:13:43,790
for our project you put it there because

00:13:40,730 --> 00:13:48,080
composer cannot manage dependencies in

00:13:43,790 --> 00:13:52,420
the same file as composer JSON we then

00:13:48,080 --> 00:13:57,320
put our web root our Drupal root in htx

00:13:52,420 --> 00:14:00,320
Drupal tangler actually defaults to www

00:13:57,320 --> 00:14:03,380
but you have the option to specify what

00:14:00,320 --> 00:14:05,930
to call this directory then you'll

00:14:03,380 --> 00:14:09,620
notice we have our vendor directory

00:14:05,930 --> 00:14:13,190
that's in route because that's a default

00:14:09,620 --> 00:14:16,430
place that composer puts it but we need

00:14:13,190 --> 00:14:21,220
that in the Drupal root so we put it in

00:14:16,430 --> 00:14:21,220
sites default vendor with a symlink

00:14:23,450 --> 00:14:29,400
so then looking at module and profile

00:14:26,760 --> 00:14:32,460
placement with drupal tangler you'll

00:14:29,400 --> 00:14:36,030
notice the standard vendor structure

00:14:32,460 --> 00:14:38,460
where it has your project or your vendor

00:14:36,030 --> 00:14:41,820
name and then the project so we have

00:14:38,460 --> 00:14:44,100
drupal and we have our module views in

00:14:41,820 --> 00:14:46,710
there this is done by composer it go

00:14:44,100 --> 00:14:49,200
heads and downloads these and places

00:14:46,710 --> 00:14:51,990
them there and then you'll notice it

00:14:49,200 --> 00:14:54,960
gets into some sim linking so to get the

00:14:51,990 --> 00:14:58,580
Drupal II structure it symlinks from

00:14:54,960 --> 00:15:02,010
profiles panoply back to that panoply

00:14:58,580 --> 00:15:06,480
directory in vendor and it does the same

00:15:02,010 --> 00:15:09,300
thing with views then looking at custom

00:15:06,480 --> 00:15:13,320
modules these are placed in the top

00:15:09,300 --> 00:15:15,180
level the root in the modules folder you

00:15:13,320 --> 00:15:18,090
can divide these however you would like

00:15:15,180 --> 00:15:20,640
to see them as is common practice you

00:15:18,090 --> 00:15:23,100
generally put them in custom and then

00:15:20,640 --> 00:15:24,900
you have my feature module and again

00:15:23,100 --> 00:15:27,780
you'll notice there's some sim linking

00:15:24,900 --> 00:15:30,900
going on to get that Drupal II structure

00:15:27,780 --> 00:15:34,980
it links symlinks your custom directory

00:15:30,900 --> 00:15:40,440
in sites all modules back to the top

00:15:34,980 --> 00:15:43,830
root modules directory finally you have

00:15:40,440 --> 00:15:46,370
your settings with Drupal tangler so we

00:15:43,830 --> 00:15:50,430
can put default configuration in your

00:15:46,370 --> 00:15:53,730
config yeah mel dist and then you can

00:15:50,430 --> 00:15:56,850
put custom configuration for settings in

00:15:53,730 --> 00:16:00,420
just config gamal and then the settings

00:15:56,850 --> 00:16:02,850
file is auto-generated for you based on

00:16:00,420 --> 00:16:06,180
which config llamo so if you have a

00:16:02,850 --> 00:16:08,820
config ya mol file it will use that one

00:16:06,180 --> 00:16:12,420
to create your settings file otherwise

00:16:08,820 --> 00:16:17,310
it will use the default config llamo dot

00:16:12,420 --> 00:16:19,500
disk so composer vendor is another

00:16:17,310 --> 00:16:21,120
option I don't think it's really any

00:16:19,500 --> 00:16:23,820
better or any worse it's just a question

00:16:21,120 --> 00:16:27,060
of tastes the main difference here is

00:16:23,820 --> 00:16:28,770
that composer vendor is going to require

00:16:27,060 --> 00:16:31,350
a little extra complexity and the

00:16:28,770 --> 00:16:34,520
composer Jason file in order to place

00:16:31,350 --> 00:16:36,650
things down exactly the way drupal

00:16:34,520 --> 00:16:41,840
expects to find a slightly less

00:16:36,650 --> 00:16:44,300
complicated tree layout we're going to

00:16:41,840 --> 00:16:46,250
place the vendor directory in sites all

00:16:44,300 --> 00:16:47,600
modules vendor I just did that

00:16:46,250 --> 00:16:51,080
arbitrarily because that's where my

00:16:47,600 --> 00:16:53,210
little then composer vendor module

00:16:51,080 --> 00:16:55,310
wanted to look for it you could put it

00:16:53,210 --> 00:16:59,030
somewhere else if you were including

00:16:55,310 --> 00:17:01,670
your own from settings PHP the way you

00:16:59,030 --> 00:17:05,060
place the vendors directory is you just

00:17:01,670 --> 00:17:07,130
add a config element to your composure

00:17:05,060 --> 00:17:08,660
Jason and inside there one of the

00:17:07,130 --> 00:17:10,730
configuration elements that you can

00:17:08,660 --> 00:17:12,920
specifies the vendor directory and it

00:17:10,730 --> 00:17:14,300
can go anywhere it's based off of the

00:17:12,920 --> 00:17:17,600
root of the project of course like

00:17:14,300 --> 00:17:19,850
everything else when you're placing

00:17:17,600 --> 00:17:21,530
custom modules and themes you're going

00:17:19,850 --> 00:17:24,170
to use one of these custom installers

00:17:21,530 --> 00:17:26,089
I've chosen the one that David brat put

00:17:24,170 --> 00:17:28,700
together but there are other choices

00:17:26,089 --> 00:17:30,890
that are very similar the thing that

00:17:28,700 --> 00:17:33,890
custom installers have in common is they

00:17:30,890 --> 00:17:37,520
look inside of the extra section of your

00:17:33,890 --> 00:17:40,580
composure Jason to read data that is in

00:17:37,520 --> 00:17:43,490
a arbitrary format that's defined by the

00:17:40,580 --> 00:17:47,810
custom installer so in the case of this

00:17:43,490 --> 00:17:50,180
custom installer Drupal modules Drupal

00:17:47,810 --> 00:17:52,970
themes and profiles and so on they just

00:17:50,180 --> 00:17:54,020
name the path that they go into and you

00:17:52,970 --> 00:17:56,240
can see that there's a little

00:17:54,020 --> 00:17:58,520
replacement on the end there dollar sign

00:17:56,240 --> 00:18:01,100
name is replaced with the name of the

00:17:58,520 --> 00:18:03,530
project so it'll just drop any drupal

00:18:01,100 --> 00:18:09,710
module down into sites all modules can

00:18:03,530 --> 00:18:14,570
trim similarly profiles can be placed in

00:18:09,710 --> 00:18:19,070
HD dock profiles and everything will

00:18:14,570 --> 00:18:22,280
just go into place now I'll take drush

00:18:19,070 --> 00:18:25,850
take a poza when you're using all of

00:18:22,280 --> 00:18:29,210
this stuff whether it's composer vendor

00:18:25,850 --> 00:18:30,770
or tangler you're going to get into a

00:18:29,210 --> 00:18:33,830
new workflow and we're just going to

00:18:30,770 --> 00:18:37,940
compare how your new fancy composer

00:18:33,830 --> 00:18:39,920
based workflow is different from what

00:18:37,940 --> 00:18:43,850
you're used to so when your existing

00:18:39,920 --> 00:18:46,910
workflow used rush dl devel you name the

00:18:43,850 --> 00:18:47,640
module and dress downloads it and places

00:18:46,910 --> 00:18:50,880
it in the rightful

00:18:47,640 --> 00:18:55,020
they're looking then at composer you're

00:18:50,880 --> 00:18:58,290
going to do a composer require and it

00:18:55,020 --> 00:19:02,310
will update the dependencies using

00:18:58,290 --> 00:19:04,350
installer installing required Dev yeah

00:19:02,310 --> 00:19:08,210
so the difference there is that brush

00:19:04,350 --> 00:19:08,210
you have to require you have to specify

00:19:09,260 --> 00:19:13,500
sorry dress you don't have to specify

00:19:11,280 --> 00:19:15,690
the version and composer you do but

00:19:13,500 --> 00:19:18,150
composer will update the composer JSON

00:19:15,690 --> 00:19:20,550
file automatically for you so that makes

00:19:18,150 --> 00:19:23,100
it easy at update time dress you run

00:19:20,550 --> 00:19:27,540
p.m. update composer you run composer

00:19:23,100 --> 00:19:30,690
update and land rush up DB our update DB

00:19:27,540 --> 00:19:33,420
and regardless of what technique you're

00:19:30,690 --> 00:19:36,870
using to update your site you all know

00:19:33,420 --> 00:19:40,860
by now that you should not update the

00:19:36,870 --> 00:19:44,700
live site test it first very important

00:19:40,860 --> 00:19:50,490
safety tip fancy techniques will never

00:19:44,700 --> 00:19:53,730
change that so looking at installing a

00:19:50,490 --> 00:19:55,890
module from a private repository these

00:19:53,730 --> 00:19:58,680
are the same for both composer vendor

00:19:55,890 --> 00:20:01,920
and Drupal tangler you'll notice you

00:19:58,680 --> 00:20:05,250
have required and then your org slash

00:20:01,920 --> 00:20:07,950
your module you can specify the end love

00:20:05,250 --> 00:20:10,980
version and that's going to match up

00:20:07,950 --> 00:20:15,180
with the your org and your module in the

00:20:10,980 --> 00:20:18,500
repository section you can also add

00:20:15,180 --> 00:20:22,050
patches to a module just like drush make

00:20:18,500 --> 00:20:24,060
you use a custom installer there's a few

00:20:22,050 --> 00:20:26,070
of them the one I have illustrated here

00:20:24,060 --> 00:20:28,410
is called composer patches plugins in

00:20:26,070 --> 00:20:31,110
the extra section it just has a list of

00:20:28,410 --> 00:20:33,600
patch patches that goes with each module

00:20:31,110 --> 00:20:35,790
and you give it the URL of the patch and

00:20:33,600 --> 00:20:38,100
then the custom installer will apply the

00:20:35,790 --> 00:20:40,620
patch to your module after composer has

00:20:38,100 --> 00:20:44,580
done all of the other steps to install

00:20:40,620 --> 00:20:48,180
it for you so looking at using a

00:20:44,580 --> 00:20:50,520
composer library from a module you again

00:20:48,180 --> 00:20:54,080
as you'll start to notice use composer

00:20:50,520 --> 00:20:57,710
JSON and you require the library and

00:20:54,080 --> 00:21:00,140
that's it no step 2

00:20:57,710 --> 00:21:02,539
but it's very important to note as we've

00:21:00,140 --> 00:21:05,450
mentioned earlier is that you never want

00:21:02,539 --> 00:21:07,789
to include an auto load file from a

00:21:05,450 --> 00:21:10,490
plug-in you leave the autoloader

00:21:07,789 --> 00:21:12,559
management in the application so that

00:21:10,490 --> 00:21:15,940
you don't have your class in

00:21:12,559 --> 00:21:18,799
Harrington's health so what about drush

00:21:15,940 --> 00:21:21,320
with dress you can write extensions as

00:21:18,799 --> 00:21:24,200
well but drush extensions are a little

00:21:21,320 --> 00:21:28,190
bit different than a drupal module

00:21:24,200 --> 00:21:29,899
because not every drush extension goes

00:21:28,190 --> 00:21:31,520
with the module and if it doesn't go

00:21:29,899 --> 00:21:33,320
with the module then it doesn't

00:21:31,520 --> 00:21:36,770
necessarily have a site that it's

00:21:33,320 --> 00:21:40,460
attached to so the first step is the

00:21:36,770 --> 00:21:43,070
same if you want to use a composer

00:21:40,460 --> 00:21:46,100
provided library in your dress extension

00:21:43,070 --> 00:21:49,159
you just put a composer Jason in your

00:21:46,100 --> 00:21:50,899
extension and you require it but the

00:21:49,159 --> 00:21:53,870
important part is you do not want to

00:21:50,899 --> 00:21:56,659
include the autoloader yourself from

00:21:53,870 --> 00:21:58,700
your code instead the recommended thing

00:21:56,659 --> 00:22:03,590
to do is to call a function called drush

00:21:58,700 --> 00:22:08,299
autoload and you pass it the magical PHP

00:22:03,590 --> 00:22:10,700
file macro and you do that inside of

00:22:08,299 --> 00:22:13,220
your command file and Russia is then

00:22:10,700 --> 00:22:15,770
going to figure out the environment and

00:22:13,220 --> 00:22:18,470
dress will say oh if this is an

00:22:15,770 --> 00:22:21,230
extension that's part of a module and

00:22:18,470 --> 00:22:24,049
it's autoloader is inside the vendor

00:22:21,230 --> 00:22:26,480
directory then I'm smart and I'm not

00:22:24,049 --> 00:22:28,760
going to load it twice but if it says oh

00:22:26,480 --> 00:22:30,169
this extensions running standalone and I

00:22:28,760 --> 00:22:32,240
haven't boot drought strap to site at

00:22:30,169 --> 00:22:34,820
all then i'll go ahead and include the

00:22:32,240 --> 00:22:38,990
autoloader for you so if you do this

00:22:34,820 --> 00:22:41,750
important step then you can rely on and

00:22:38,990 --> 00:22:43,970
rush to it adjust the strategy if

00:22:41,750 --> 00:22:46,070
anything changes in our thinking we

00:22:43,970 --> 00:22:48,440
won't have to go out and make all of the

00:22:46,070 --> 00:22:54,260
rush extensions change the way they're

00:22:48,440 --> 00:22:58,510
autoloading all right three we going

00:22:54,260 --> 00:22:58,510
strong we're about halfway done

00:22:58,980 --> 00:23:05,549
so looking at managing your project code

00:23:02,370 --> 00:23:09,330
hopefully every one of you is using git

00:23:05,549 --> 00:23:12,090
or some version control so looking at

00:23:09,330 --> 00:23:14,460
your site you see some common files you

00:23:12,090 --> 00:23:18,450
have your dot get there will also be a

00:23:14,460 --> 00:23:20,460
dot get ignore that is not shown here so

00:23:18,450 --> 00:23:23,880
you're going to want to commit your

00:23:20,460 --> 00:23:28,830
composure that JSON and composer dot

00:23:23,880 --> 00:23:31,260
lock to your git repository but you are

00:23:28,830 --> 00:23:34,740
not going to want to commit modules or

00:23:31,260 --> 00:23:37,740
htdocs because composer handles that if

00:23:34,740 --> 00:23:40,410
you have any custom modules you can just

00:23:37,740 --> 00:23:42,809
commit those to the same repository that

00:23:40,410 --> 00:23:45,590
you put your composure Jason in or if

00:23:42,809 --> 00:23:48,660
you prefer you can make your own

00:23:45,590 --> 00:23:52,669
component and add it to composer Jason

00:23:48,660 --> 00:23:56,669
and we'll show you how to do that

00:23:52,669 --> 00:24:01,260
deploying your code the nice thing about

00:23:56,669 --> 00:24:03,750
composer is it figures out what code you

00:24:01,260 --> 00:24:05,820
need so an obvious thought and

00:24:03,750 --> 00:24:09,570
deployment is why don't you just run

00:24:05,820 --> 00:24:11,809
composer to install on your remote site

00:24:09,570 --> 00:24:15,120
the same way you do it on your dev site

00:24:11,809 --> 00:24:16,919
when you run composer install it writes

00:24:15,120 --> 00:24:20,280
something called a composer lock file

00:24:16,919 --> 00:24:22,679
and the composer lock file ensures that

00:24:20,280 --> 00:24:24,450
if you run composer install again

00:24:22,679 --> 00:24:25,950
without running and composer update

00:24:24,450 --> 00:24:29,130
you're going to get exactly the same

00:24:25,950 --> 00:24:34,490
software that you did before so if you

00:24:29,130 --> 00:24:37,640
have a remote dev machine using composer

00:24:34,490 --> 00:24:41,520
install to repopulate the software is a

00:24:37,640 --> 00:24:43,980
perfectly reasonable thing to do ah you

00:24:41,520 --> 00:24:46,290
can also deploy code using our sink

00:24:43,980 --> 00:24:48,450
you'll notice it's a bit simpler so

00:24:46,290 --> 00:24:51,120
you're going to clone you're going to do

00:24:48,450 --> 00:24:54,150
that composer install that'll give you

00:24:51,120 --> 00:24:56,790
all the files the Drupal root and then

00:24:54,150 --> 00:25:00,929
you are going to rsync the Drupal route

00:24:56,790 --> 00:25:03,270
to your live server this is available if

00:25:00,929 --> 00:25:06,510
you don't have composer on the live

00:25:03,270 --> 00:25:09,020
server it also saves a bit of processing

00:25:06,510 --> 00:25:13,249
power since you're not doing install and

00:25:09,020 --> 00:25:17,279
possibly downloading all the files as

00:25:13,249 --> 00:25:21,839
that'll help with up time so what if

00:25:17,279 --> 00:25:23,639
you're using some hosting provider that

00:25:21,839 --> 00:25:26,719
requires that your drupal route go at

00:25:23,639 --> 00:25:30,209
the project route we've been showing you

00:25:26,719 --> 00:25:33,359
that in the ideal composer world you add

00:25:30,209 --> 00:25:35,849
a new top level directory to your site

00:25:33,359 --> 00:25:38,429
to put things like composer Jason and

00:25:35,849 --> 00:25:41,279
all of your get files and other very

00:25:38,429 --> 00:25:45,749
convenient files that are not part of

00:25:41,279 --> 00:25:47,969
what you want the web server to serve if

00:25:45,749 --> 00:25:50,009
that's not an option in your deployed

00:25:47,969 --> 00:25:54,389
environment though one thing you could

00:25:50,009 --> 00:25:56,729
do is use to repositories for example if

00:25:54,389 --> 00:25:59,969
you have a repository that your hosting

00:25:56,729 --> 00:26:02,039
provider requires that all of your code

00:25:59,969 --> 00:26:05,009
comes from you could start off by

00:26:02,039 --> 00:26:08,159
pulling from that repository to get the

00:26:05,009 --> 00:26:13,069
existing state of the site and then take

00:26:08,159 --> 00:26:13,069
your lean mean fighting repository and

00:26:14,059 --> 00:26:20,549
build it with composer install and then

00:26:16,559 --> 00:26:22,199
copy just the document root over what

00:26:20,549 --> 00:26:23,940
was there before and then you have a

00:26:22,199 --> 00:26:26,009
nice set of differences that you can

00:26:23,940 --> 00:26:28,949
commit and push up to your hosting

00:26:26,009 --> 00:26:31,469
provider even cooler if your hosting

00:26:28,949 --> 00:26:33,289
provider upgrades to support composer

00:26:31,469 --> 00:26:36,269
natively and I'm sure that you can

00:26:33,289 --> 00:26:38,609
you'll find that that will happen more

00:26:36,269 --> 00:26:41,099
and more as time goes along that you'll

00:26:38,609 --> 00:26:42,899
just commit your composure Jason and the

00:26:41,099 --> 00:26:47,789
hosting platform will say hey I know to

00:26:42,899 --> 00:26:50,179
do with that wouldn't that be cool so I

00:26:47,789 --> 00:26:53,489
looking at converting an existing site

00:26:50,179 --> 00:26:56,339
you can use a project called composer

00:26:53,489 --> 00:26:59,159
generate you're just going to download

00:26:56,339 --> 00:27:01,589
that project using dress you're going to

00:26:59,159 --> 00:27:04,619
use site aliases to create your

00:27:01,589 --> 00:27:06,629
composure JSON and then you'll notice it

00:27:04,619 --> 00:27:08,729
gets very similar to what we've been

00:27:06,629 --> 00:27:10,499
talking about with the ideal composer

00:27:08,729 --> 00:27:14,190
world you're going to just composer

00:27:10,499 --> 00:27:16,799
install set up your settings PHP copy

00:27:14,190 --> 00:27:18,779
your files all that good jazz and then

00:27:16,799 --> 00:27:21,159
you're going to dress site install to

00:27:18,779 --> 00:27:23,649
get your magical drupal site

00:27:21,159 --> 00:27:25,299
today this only works with Drupal 7 but

00:27:23,649 --> 00:27:28,929
it's just a matter of writing a template

00:27:25,299 --> 00:27:31,720
to get it to work with Drupal 8 so you

00:27:28,929 --> 00:27:33,249
can always fiddle with it and change it

00:27:31,720 --> 00:27:38,320
and make it install the kind of site

00:27:33,249 --> 00:27:41,789
that you want so looking at creating a

00:27:38,320 --> 00:27:45,099
new site with the Drupal 7 framework

00:27:41,789 --> 00:27:47,200
this is something that promet has pulled

00:27:45,099 --> 00:27:51,399
together using a lot of different

00:27:47,200 --> 00:27:53,950
projects it includes drupal tangler it

00:27:51,399 --> 00:27:57,820
includes drop a custom project called

00:27:53,950 --> 00:28:00,340
dropship to help you with deployments so

00:27:57,820 --> 00:28:03,639
you're going to use the magical composer

00:28:00,340 --> 00:28:06,309
command create project they're going to

00:28:03,639 --> 00:28:09,129
specify the vendor name and then that

00:28:06,309 --> 00:28:12,639
project name and you can optionally

00:28:09,129 --> 00:28:15,460
specify the project name this is the

00:28:12,639 --> 00:28:19,299
folder to which it will create and then

00:28:15,460 --> 00:28:22,119
we use vagrant and virtualbox to just go

00:28:19,299 --> 00:28:24,369
ahead and vagrant up with provision to

00:28:22,119 --> 00:28:27,729
create that VirtualBox that's all

00:28:24,369 --> 00:28:30,070
included in the Drupal 7 framework if

00:28:27,729 --> 00:28:32,979
you're curious we can talk about this

00:28:30,070 --> 00:28:35,559
more but the idea is it gives you a

00:28:32,979 --> 00:28:38,559
starting point to have a Drupal site

00:28:35,559 --> 00:28:41,190
drupal 7 site with some of the most

00:28:38,559 --> 00:28:45,999
common modules as well as a way to

00:28:41,190 --> 00:28:55,109
deploy we call this the development

00:28:45,999 --> 00:28:58,239
rocket ship if you're just doing a

00:28:55,109 --> 00:29:01,299
bare-bones site there is a project

00:28:58,239 --> 00:29:04,989
called Drupal composer / duple project

00:29:01,299 --> 00:29:07,720
and this gives you a template that you

00:29:04,989 --> 00:29:11,679
can use with create project in order to

00:29:07,720 --> 00:29:13,869
make a canonical system 7 site without

00:29:11,679 --> 00:29:15,519
all of the bells and whistles so this is

00:29:13,869 --> 00:29:19,389
a good project to look at the source

00:29:15,519 --> 00:29:22,169
code for if you want to customize and

00:29:19,389 --> 00:29:25,280
make your own of create project

00:29:22,169 --> 00:29:32,720
deployments for folks

00:29:25,280 --> 00:29:35,600
part four we're in the home stretch so

00:29:32,720 --> 00:29:38,120
Drupal 8 already uses composer this

00:29:35,600 --> 00:29:40,100
means it should be a magical land you

00:29:38,120 --> 00:29:43,000
just use composer and Drupal 8 and it'll

00:29:40,100 --> 00:29:45,710
give you exactly what you need right

00:29:43,000 --> 00:29:50,510
yeah you just get on your rainbow

00:29:45,710 --> 00:29:53,870
unicorn flying butterfly and zip off the

00:29:50,510 --> 00:29:55,550
candy land and in this magical world of

00:29:53,870 --> 00:29:58,070
the future composer create project

00:29:55,550 --> 00:30:00,620
Drupal Drupal path your project till the

00:29:58,070 --> 00:30:04,490
8th will give you a working Drupal 8

00:30:00,620 --> 00:30:08,090
site yay except today all it gives you

00:30:04,490 --> 00:30:10,130
as flames and exceptions and things and

00:30:08,090 --> 00:30:13,730
why why doesn't it work it should be so

00:30:10,130 --> 00:30:15,860
simple that's complicated very

00:30:13,730 --> 00:30:17,900
complicated I could go into it but that

00:30:15,860 --> 00:30:21,800
would take two hours so instead of good

00:30:17,900 --> 00:30:26,510
doing two hours please come back

00:30:21,800 --> 00:30:31,250
tomorrow for David brat session at 3 45

00:30:26,510 --> 00:30:35,540
in room 511 bc he's going to talk all

00:30:31,250 --> 00:30:37,880
about the magic of what's called the

00:30:35,540 --> 00:30:41,810
split core i'm just going to sort of

00:30:37,880 --> 00:30:44,840
gloss over it a little bit actually Doug

00:30:41,810 --> 00:30:47,510
will gloss over the slide blah so you'll

00:30:44,840 --> 00:30:50,150
notice some common themes in there the

00:30:47,510 --> 00:30:53,330
Drupal core contains only the contents

00:30:50,150 --> 00:30:56,720
of Drupal 8 core directory again and

00:30:53,330 --> 00:30:59,570
your require you have Drupal / core you

00:30:56,720 --> 00:31:02,810
specify your version and then you also

00:30:59,570 --> 00:31:05,240
specify your dress version and you'll

00:31:02,810 --> 00:31:08,190
notice this is using installer pass as

00:31:05,240 --> 00:31:10,259
well to set where things should go

00:31:08,190 --> 00:31:12,509
and as we mentioned previously the

00:31:10,259 --> 00:31:15,539
critical point here is that we have

00:31:12,509 --> 00:31:17,460
drush and drupal in the same composer

00:31:15,539 --> 00:31:19,019
Jason so because they're in the same

00:31:17,460 --> 00:31:20,549
composer Jason that means that they're

00:31:19,019 --> 00:31:22,350
going to be in the same autoloader and

00:31:20,549 --> 00:31:23,759
that means that you're not going to have

00:31:22,350 --> 00:31:26,519
someone giving you an old version of

00:31:23,759 --> 00:31:28,440
symphony behind your back if someone

00:31:26,519 --> 00:31:33,330
tries to do that you'll find out at

00:31:28,440 --> 00:31:37,440
composer install time I guess I'll take

00:31:33,330 --> 00:31:41,340
the slide so the project layout looks

00:31:37,440 --> 00:31:43,710
very very similar to what we showed you

00:31:41,340 --> 00:31:45,840
before for Drupal 7 but the difference

00:31:43,710 --> 00:31:52,470
is that since we're doing this thing

00:31:45,840 --> 00:31:56,940
called the split core where is the core

00:31:52,470 --> 00:32:01,649
directory you know when you try to

00:31:56,940 --> 00:32:05,070
squeeze things into the slide sometimes

00:32:01,649 --> 00:32:09,929
folders get left off so there should be

00:32:05,070 --> 00:32:12,090
a core directory and here so the idea

00:32:09,929 --> 00:32:15,019
with split core is Drupal 8 if you

00:32:12,090 --> 00:32:17,759
download it per normal from drupal.org

00:32:15,019 --> 00:32:19,289
you get a big package full of stuff and

00:32:17,759 --> 00:32:21,720
one of the directories in the root is

00:32:19,289 --> 00:32:24,330
the core directory and most of the stuff

00:32:21,720 --> 00:32:26,669
that is Drupal 8 is inside of that

00:32:24,330 --> 00:32:29,730
folder called core so if we roll back

00:32:26,669 --> 00:32:31,860
here to the composer Jason you're seeing

00:32:29,730 --> 00:32:34,740
that we're requiring instead of doing a

00:32:31,860 --> 00:32:38,370
create project of Drupal / Drupal we're

00:32:34,740 --> 00:32:40,320
requiring Drupal / core so Drupal / core

00:32:38,370 --> 00:32:43,169
is a separate project from Drupal Drupal

00:32:40,320 --> 00:32:46,679
and it's actually a subset of Drupal

00:32:43,169 --> 00:32:49,649
Drupal that contains only the files that

00:32:46,679 --> 00:32:51,929
are inside of the core directory if you

00:32:49,649 --> 00:32:53,850
look on drupal.org and issue queue

00:32:51,929 --> 00:32:55,320
you'll see that there's a lot of patches

00:32:53,850 --> 00:32:57,929
that are still open that are doing

00:32:55,320 --> 00:33:00,330
things like taking the contents of index

00:32:57,929 --> 00:33:02,850
PHP and moving it into the core

00:33:00,330 --> 00:33:06,179
directory so index that PHP will only be

00:33:02,850 --> 00:33:11,509
and include some file inside of the core

00:33:06,179 --> 00:33:15,629
directory why are we doing that because

00:33:11,509 --> 00:33:18,960
when you are using this create project

00:33:15,629 --> 00:33:21,630
the whole idea with a composer project

00:33:18,960 --> 00:33:24,450
is that your project oh

00:33:21,630 --> 00:33:29,550
owns all of the files at the top level

00:33:24,450 --> 00:33:31,830
so at composure update time the core

00:33:29,550 --> 00:33:35,640
directory is going to get updated but if

00:33:31,830 --> 00:33:39,390
there's changes to any files inside the

00:33:35,640 --> 00:33:43,410
core directory that you have copied out

00:33:39,390 --> 00:33:47,850
of Drupal Drupal then you're responsible

00:33:43,410 --> 00:33:49,470
for changing those yourself but in the

00:33:47,850 --> 00:33:51,300
future that's not going to be such a bad

00:33:49,470 --> 00:33:53,130
thing because as I mentioned the

00:33:51,300 --> 00:33:56,990
important parts from that those files

00:33:53,130 --> 00:33:56,990
are all moving into the core directory

00:33:59,090 --> 00:34:06,690
also because drush is in the same

00:34:03,420 --> 00:34:10,139
autoloader as drupal you'll notice now

00:34:06,690 --> 00:34:12,090
that you have one drush site for every

00:34:10,139 --> 00:34:13,770
Drupal site on your system and that's

00:34:12,090 --> 00:34:16,620
different than the way we traditionally

00:34:13,770 --> 00:34:19,530
do it where you installed rush globally

00:34:16,620 --> 00:34:21,480
and the one drush operates on all of

00:34:19,530 --> 00:34:24,929
your local Drupal sites so we call this

00:34:21,480 --> 00:34:27,060
a site local drush and the reason we

00:34:24,929 --> 00:34:29,700
invented site local dress is exactly

00:34:27,060 --> 00:34:31,200
what I explained before we want brush

00:34:29,700 --> 00:34:33,240
and Drupal to be sharing the same

00:34:31,200 --> 00:34:34,830
autoloader and the only good way to do

00:34:33,240 --> 00:34:37,139
that is to put them in the same composer

00:34:34,830 --> 00:34:39,149
vendor file but you don't want the

00:34:37,139 --> 00:34:42,450
unfortunate side effect of having to

00:34:39,149 --> 00:34:45,000
type a very long path to draw every time

00:34:42,450 --> 00:34:47,159
you used rush and you don't want to have

00:34:45,000 --> 00:34:49,679
one separate alias for every single

00:34:47,159 --> 00:34:53,490
Drupal site and type the right alias for

00:34:49,679 --> 00:34:55,710
the right site so we are still in the

00:34:53,490 --> 00:34:59,100
process of working out what is the best

00:34:55,710 --> 00:35:02,130
way for this to work there's an issue

00:34:59,100 --> 00:35:05,130
that I've quoted there 1343 and the

00:35:02,130 --> 00:35:07,650
dress issue queue or we're talking about

00:35:05,130 --> 00:35:12,000
a couple of different alternatives one

00:35:07,650 --> 00:35:14,610
of the alternatives is that at drush

00:35:12,000 --> 00:35:18,060
install time we'll just tell you to put

00:35:14,610 --> 00:35:20,340
this folder home dress use bin into your

00:35:18,060 --> 00:35:24,630
path and then if you called rush site

00:35:20,340 --> 00:35:26,970
set at your site alias then drush is

00:35:24,630 --> 00:35:28,530
going to rewrite the symbolic link to

00:35:26,970 --> 00:35:32,880
point to the correct bin directory

00:35:28,530 --> 00:35:34,560
inside of the composer bin directory for

00:35:32,880 --> 00:35:36,540
your drupal site and then

00:35:34,560 --> 00:35:39,090
the right drush will just magically be

00:35:36,540 --> 00:35:42,000
on your path through the power of Linux

00:35:39,090 --> 00:35:44,790
and you can just run drush status and

00:35:42,000 --> 00:35:46,350
it'll hit the right site there's an a

00:35:44,790 --> 00:35:52,050
disadvantage of that if you're already

00:35:46,350 --> 00:35:54,600
using our examples bash RC and if you're

00:35:52,050 --> 00:35:56,850
using the used command you'll know that

00:35:54,600 --> 00:36:00,990
your prompt changes every time you use

00:35:56,850 --> 00:36:04,380
another site and with this option you

00:36:00,990 --> 00:36:06,060
could get into the unfortunate situation

00:36:04,380 --> 00:36:07,770
where your prompt showed that you're

00:36:06,060 --> 00:36:10,170
using one site but your path was

00:36:07,770 --> 00:36:11,670
pointing to a different Drupal so even

00:36:10,170 --> 00:36:13,590
though this one is easier to set up it's

00:36:11,670 --> 00:36:15,990
not necessarily what we're going to go

00:36:13,590 --> 00:36:18,900
with there's another thing that's done

00:36:15,990 --> 00:36:22,320
in the patch where if you just say you

00:36:18,900 --> 00:36:25,130
use the dress use command with your site

00:36:22,320 --> 00:36:27,120
alias then using the existing feature

00:36:25,130 --> 00:36:31,110
drush will tell you which site you've

00:36:27,120 --> 00:36:35,550
used and it also updates your path am to

00:36:31,110 --> 00:36:37,770
point exactly at that bin directory so

00:36:35,550 --> 00:36:40,230
then you can just run drush and then

00:36:37,770 --> 00:36:43,980
finally the reduced batch option is

00:36:40,230 --> 00:36:46,920
already working as a 70 RC one if you

00:36:43,980 --> 00:36:50,580
run drush with a site alias and the site

00:36:46,920 --> 00:36:52,890
is local and it has a another copy of

00:36:50,580 --> 00:36:54,810
drush then your global drush will see

00:36:52,890 --> 00:36:57,540
this and it will relaunch the local

00:36:54,810 --> 00:37:03,240
drush so that it can boot step with the

00:36:57,540 --> 00:37:06,360
right dependencies so then looking at

00:37:03,240 --> 00:37:09,330
our auto load we're going to have to

00:37:06,360 --> 00:37:11,990
modify this so in our modified site

00:37:09,330 --> 00:37:16,190
you'll notice we returned the directory

00:37:11,990 --> 00:37:20,460
with up one directory vendor auto load

00:37:16,190 --> 00:37:23,610
whereas in Drupal 8 our auto load is in

00:37:20,460 --> 00:37:27,060
core which is in route / bender and then

00:37:23,610 --> 00:37:29,880
you have your auto load PHP and this is

00:37:27,060 --> 00:37:33,150
a side effect of the fact that Drupal 8

00:37:29,880 --> 00:37:36,630
isn't yet set up to just natively allow

00:37:33,150 --> 00:37:39,060
you to use the composer create project

00:37:36,630 --> 00:37:41,460
once that gets all worked out you won't

00:37:39,060 --> 00:37:43,020
have to change that so the big question

00:37:41,460 --> 00:37:46,080
is you know you're changing that root

00:37:43,020 --> 00:37:47,530
file are you hacking core what does hack

00:37:46,080 --> 00:37:52,680
in core mean

00:37:47,530 --> 00:37:52,680
Greg Dunlap talked about this first in

00:37:52,800 --> 00:37:57,880
2008 we talked about God killing a

00:37:56,050 --> 00:38:00,820
kitten every time you hacked Kord don't

00:37:57,880 --> 00:38:02,590
do it it's bad but we just changed

00:38:00,820 --> 00:38:06,610
autoload and autoload was distributed

00:38:02,590 --> 00:38:11,740
with Drupal are we hacking core this

00:38:06,610 --> 00:38:14,290
concept is still under discussion but

00:38:11,740 --> 00:38:21,400
are you splitting core you're not

00:38:14,290 --> 00:38:24,250
hacking core but the definition that I

00:38:21,400 --> 00:38:25,990
liked if they say well if you have to

00:38:24,250 --> 00:38:28,690
resolve merge conflicts when you update

00:38:25,990 --> 00:38:31,870
then you're hacking core so let's take

00:38:28,690 --> 00:38:34,570
an example from the existing world if

00:38:31,870 --> 00:38:37,750
you're using Drupal 7 maybe you need to

00:38:34,570 --> 00:38:41,530
make a change to a dot htaccess file if

00:38:37,750 --> 00:38:43,060
you have a really old low-cost hosting

00:38:41,530 --> 00:38:46,150
provider that requires you to specify

00:38:43,060 --> 00:38:48,610
your PHP version that way and a lot of

00:38:46,150 --> 00:38:51,190
people have to do that so if you just

00:38:48,610 --> 00:38:53,050
change the middle of htaccess and you

00:38:51,190 --> 00:38:55,210
have to update it every time you're

00:38:53,050 --> 00:38:56,650
hacking core and it's a simple way

00:38:55,210 --> 00:38:58,630
probably not going to get in trouble for

00:38:56,650 --> 00:39:01,060
it but it's a hack but if you wrote a

00:38:58,630 --> 00:39:03,970
script that just appended to the end of

00:39:01,060 --> 00:39:07,030
that HT Access file then there would be

00:39:03,970 --> 00:39:08,950
no merge conflicts and you know that

00:39:07,030 --> 00:39:11,740
wouldn't be considered hacking core so

00:39:08,950 --> 00:39:14,530
as you can tell we were sort of getting

00:39:11,740 --> 00:39:15,880
into philosophy here you have to find

00:39:14,530 --> 00:39:18,970
the workflow that's right for you but

00:39:15,880 --> 00:39:23,350
just make sure that when you update you

00:39:18,970 --> 00:39:28,150
hit all the files so we are actually

00:39:23,350 --> 00:39:30,640
plenty early it's amazing where do we go

00:39:28,150 --> 00:39:33,630
from here we'll take Q&A in a couple of

00:39:30,640 --> 00:39:37,110
minutes but we've got some URLs here of

00:39:33,630 --> 00:39:39,730
very important and useful places

00:39:37,110 --> 00:39:45,450
composer of course is that get composure

00:39:39,730 --> 00:39:48,280
org and there is a group on drupal.org

00:39:45,450 --> 00:39:49,840
for composer discussions and there's

00:39:48,280 --> 00:39:54,520
some very interesting discussions you

00:39:49,840 --> 00:39:58,480
can find inside of there and the folks

00:39:54,520 --> 00:40:00,370
who made packages Drupal composer org

00:39:58,480 --> 00:40:05,140
they've got a landing page at Drupal

00:40:00,370 --> 00:40:06,580
composer org that has links out to some

00:40:05,140 --> 00:40:08,980
of the most interesting pieces of

00:40:06,580 --> 00:40:12,280
information if you want to track what's

00:40:08,980 --> 00:40:16,210
happening in Drupal 8 today you can find

00:40:12,280 --> 00:40:21,310
links to key issues off of the site and

00:40:16,210 --> 00:40:25,840
if you're interested in how the packages

00:40:21,310 --> 00:40:27,730
Drupal composer org malls the set the

00:40:25,840 --> 00:40:29,890
contents of drupal.org to create this

00:40:27,730 --> 00:40:33,670
package just file the source code is all

00:40:29,890 --> 00:40:36,580
up on github so if you want the slides

00:40:33,670 --> 00:40:40,030
you should follow us we'll both tweet

00:40:36,580 --> 00:40:43,410
when they're available online and if you

00:40:40,030 --> 00:40:43,410
have any questions you can come up now

00:40:43,590 --> 00:40:50,460
one other project that actually was

00:40:46,270 --> 00:40:53,950
mentioned and not put on here don't is

00:40:50,460 --> 00:40:57,220
the Drupal 7 framework so I shall put

00:40:53,950 --> 00:41:00,070
that up there it's open source we've

00:40:57,220 --> 00:41:02,290
already had people getting involved we

00:41:00,070 --> 00:41:05,530
encourage you to try it help us test

00:41:02,290 --> 00:41:07,540
find errors if you find errors file an

00:41:05,530 --> 00:41:10,990
issue queue and work on fixing that

00:41:07,540 --> 00:41:13,060
we've already taken a lot of work that

00:41:10,990 --> 00:41:16,510
was out there done in the community just

00:41:13,060 --> 00:41:21,640
recently to improve it it's on github /

00:41:16,510 --> 00:41:23,560
promet / Drupal 7 framework and we will

00:41:21,640 --> 00:41:25,030
tweet that after as well yeah i think

00:41:23,560 --> 00:41:26,920
that URL does appear someone in the

00:41:25,030 --> 00:41:30,450
slides but we will fix the slides and

00:41:26,920 --> 00:41:30,450
put it in here before we publish them

00:41:31,170 --> 00:41:35,290
thank you all for coming everyone if you

00:41:33,730 --> 00:41:37,470
have any questions we'll hang out and

00:41:35,290 --> 00:41:55,630
answer all of your greatest desires

00:41:37,470 --> 00:41:57,130
thank you we are doing QA but you just

00:41:55,630 --> 00:41:58,329
so you just decided to do the Q&A up

00:41:57,130 --> 00:42:02,470
here instead of back there which is fine

00:41:58,329 --> 00:42:04,390
cuz everyone I did I didn't stay very

00:42:02,470 --> 00:42:06,369
specifically but yeah no go because

00:42:04,390 --> 00:42:12,310
people are staying yeah go back there

00:42:06,369 --> 00:42:14,710
may be other people of we're doing QA

00:42:12,310 --> 00:42:18,160
from the microphone in the middle hey

00:42:14,710 --> 00:42:19,599
guys um just so I don't silo this yeah

00:42:18,160 --> 00:42:25,839
I'm gonna do it on the mic can you hear

00:42:19,599 --> 00:42:30,780
me yes so one of my questions is about

00:42:25,839 --> 00:42:34,210
and this might be sort of obvious but if

00:42:30,780 --> 00:42:36,040
if drupal composer and some of the other

00:42:34,210 --> 00:42:40,300
tools you mentioned are a replacement

00:42:36,040 --> 00:42:41,619
for the old rush make and the idea of

00:42:40,300 --> 00:42:43,300
sharing distributions you talked about

00:42:41,619 --> 00:42:46,089
the the workflow for instance you could

00:42:43,300 --> 00:42:49,960
use rsync etc to for deployment but when

00:42:46,089 --> 00:42:51,819
sharing let's say we're if we're not

00:42:49,960 --> 00:42:53,859
going to say a maid project let's say a

00:42:51,819 --> 00:42:58,720
composed project that's made of many

00:42:53,859 --> 00:43:00,460
smaller projects contribute so on I know

00:42:58,720 --> 00:43:03,970
that there's another session tomorrow to

00:43:00,460 --> 00:43:06,940
use the split session and that it might

00:43:03,970 --> 00:43:09,069
cover some of this but you did mention

00:43:06,940 --> 00:43:11,369
something about patches and it was kind

00:43:09,069 --> 00:43:14,079
of my fault for missing part of that

00:43:11,369 --> 00:43:16,750
could you describe briefly the workflow

00:43:14,079 --> 00:43:19,420
of sharing between teams is this like a

00:43:16,750 --> 00:43:21,700
quick yeah no that's not hard at all

00:43:19,420 --> 00:43:24,250
okay I mean the developers on a team or

00:43:21,700 --> 00:43:27,520
between teams yeah yeah are you talking

00:43:24,250 --> 00:43:28,780
about Drupal 7 or Drupal 8 or both um it

00:43:27,520 --> 00:43:30,460
could be both but in this case I'm

00:43:28,780 --> 00:43:36,010
talking about eight because this was the

00:43:30,460 --> 00:43:40,930
main focus eight yeah yeah well for

00:43:36,010 --> 00:43:42,940
Drupal 8 the long answer is to go to

00:43:40,930 --> 00:43:43,690
tomorrow session but then the shorter

00:43:42,940 --> 00:43:46,960
answer

00:43:43,690 --> 00:43:50,109
is a you work all in our slides I can't

00:43:46,960 --> 00:43:53,980
even roll back to it we're talking about

00:43:50,109 --> 00:44:01,599
managing the project and I regret that

00:43:53,980 --> 00:44:05,920
we left out the core directory here yeah

00:44:01,599 --> 00:44:10,050
yeah so you know you've got you've got

00:44:05,920 --> 00:44:15,730
your composure Jason and you've got your

00:44:10,050 --> 00:44:19,140
your route projects and you can just

00:44:15,730 --> 00:44:23,380
commit these all to a git repository

00:44:19,140 --> 00:44:26,890
that's you know that emits the generated

00:44:23,380 --> 00:44:29,410
files and then you give someone your URL

00:44:26,890 --> 00:44:31,510
they cloned the URL they run composer

00:44:29,410 --> 00:44:33,550
install and then they're up and running

00:44:31,510 --> 00:44:35,740
with your project so then the open

00:44:33,550 --> 00:44:38,079
question is what about the database what

00:44:35,740 --> 00:44:39,910
about the configuration that's that's

00:44:38,079 --> 00:44:41,980
yeah that's that's that's not a composer

00:44:39,910 --> 00:44:44,650
issue that works the same way regardless

00:44:41,980 --> 00:44:46,720
of how you get your files there you can

00:44:44,650 --> 00:44:48,640
use seek you know configuration manager

00:44:46,720 --> 00:44:51,609
in Drupal 8 to get the configuration and

00:44:48,640 --> 00:44:54,550
you can generate content or pull content

00:44:51,609 --> 00:45:08,890
down from live whatever whatever you

00:44:54,550 --> 00:45:13,150
want yeah yeah it's becoming a lot more

00:45:08,890 --> 00:45:14,619
common I don't know I guess we don't

00:45:13,150 --> 00:45:18,160
have an example for eight but we have an

00:45:14,619 --> 00:45:20,859
example for seven it's becoming a lot

00:45:18,160 --> 00:45:23,079
more common now if you go to github and

00:45:20,859 --> 00:45:25,240
you see some random project if it has a

00:45:23,079 --> 00:45:26,260
composer Jason in it they're expecting

00:45:25,240 --> 00:45:27,910
that you're going to see that and you're

00:45:26,260 --> 00:45:30,970
going to run composer install that's

00:45:27,910 --> 00:45:34,119
just part of your deploy if you don't

00:45:30,970 --> 00:45:36,130
like that two-step process there's a

00:45:34,119 --> 00:45:38,380
one-step project assess the composer

00:45:36,130 --> 00:45:41,079
provides and that's the create project

00:45:38,380 --> 00:45:45,490
and so this command is actually going to

00:45:41,079 --> 00:45:48,280
go out to the URL specified by this path

00:45:45,490 --> 00:45:51,910
this project specifier here is going to

00:45:48,280 --> 00:45:53,410
download stuff and composer install it

00:45:51,910 --> 00:45:55,510
and if you want to update it you'll just

00:45:53,410 --> 00:45:59,440
see D to your project route

00:45:55,510 --> 00:46:02,140
and run composer update but when you're

00:45:59,440 --> 00:46:04,540
using composer create project anything

00:46:02,140 --> 00:46:07,540
that it puts in the root next to your

00:46:04,540 --> 00:46:08,920
composure Jason that now belongs to you

00:46:07,540 --> 00:46:10,480
and you need to commit it to your

00:46:08,920 --> 00:46:15,040
repository because it's not going to be

00:46:10,480 --> 00:46:18,250
touched by composer update okay next

00:46:15,040 --> 00:46:24,370
question first of all I wanted to say

00:46:18,250 --> 00:46:25,960
that this is friggin awesome so second

00:46:24,370 --> 00:46:30,370
statement I wanted to make or a question

00:46:25,960 --> 00:46:35,950
I suppose so you were talking about the

00:46:30,370 --> 00:46:39,190
dress was a composer fi project oh yeah

00:46:35,950 --> 00:46:42,480
just composer generate yeah so does that

00:46:39,190 --> 00:46:45,370
add like the repositories for all of

00:46:42,480 --> 00:46:50,410
Drupal's modules and then how does that

00:46:45,370 --> 00:46:54,280
work that relies on packages drupal org

00:46:50,410 --> 00:47:01,180
which is done by windmill will and de

00:46:54,280 --> 00:47:08,560
Rossi and Florian Weber and it goes out

00:47:01,180 --> 00:47:10,420
to drupal org and its web spiders all of

00:47:08,560 --> 00:47:15,300
the projects on drupal.org everything

00:47:10,420 --> 00:47:18,430
with a release a stable release it

00:47:15,300 --> 00:47:20,410
downloads it it converts the version

00:47:18,430 --> 00:47:22,480
from Drupal version to semantic

00:47:20,410 --> 00:47:26,080
versioning and it writes all of the

00:47:22,480 --> 00:47:28,120
information that composer expects so

00:47:26,080 --> 00:47:31,900
then you just in your composure JSON

00:47:28,120 --> 00:47:34,150
file you say hey I want their repository

00:47:31,900 --> 00:47:37,570
as well and then like magic you can say

00:47:34,150 --> 00:47:39,700
Drupal / foo for any foo that's a

00:47:37,570 --> 00:47:42,070
project on Drupal and it'll get

00:47:39,700 --> 00:47:45,760
downloaded nice and that is due to the

00:47:42,070 --> 00:47:48,130
awesome hard work of volunteers who are

00:47:45,760 --> 00:47:49,390
outside of the drupal org space because

00:47:48,130 --> 00:47:51,610
it's probably going to be a long time

00:47:49,390 --> 00:47:55,030
before drupal.org can break all of these

00:47:51,610 --> 00:47:58,920
dependencies to be natively providing

00:47:55,030 --> 00:48:01,900
this service for us and what was that

00:47:58,920 --> 00:48:04,720
composer ified rush components composer

00:48:01,900 --> 00:48:07,390
generate composer generate that is a

00:48:04,720 --> 00:48:09,160
little dress extension that just takes

00:48:07,390 --> 00:48:16,329
an existing site

00:48:09,160 --> 00:48:18,849
and it asks the system which modules are

00:48:16,329 --> 00:48:22,390
installed and then it generates a

00:48:18,849 --> 00:48:24,880
composer JSON file and lists all of the

00:48:22,390 --> 00:48:28,030
projects that contain the modules that

00:48:24,880 --> 00:48:30,940
you've enabled and that's all and fill

00:48:28,030 --> 00:48:35,369
it out from there so cool thank you

00:48:30,940 --> 00:48:40,000
you're welcome oh and you can all be

00:48:35,369 --> 00:48:43,240
confident that the third party packages

00:48:40,000 --> 00:48:46,270
will not go dark due to lack of funds

00:48:43,240 --> 00:48:49,059
because Pantheon generously sponsored

00:48:46,270 --> 00:48:51,430
there they're hosting so we're pairing

00:48:49,059 --> 00:48:53,589
for their if their server uptime so that

00:48:51,430 --> 00:48:57,299
you know our customers and our not

00:48:53,589 --> 00:48:59,859
customers can do this composer stuff and

00:48:57,299 --> 00:49:01,780
be sure that it's going to be available

00:48:59,859 --> 00:49:08,049
until it's it's ready to be rolled into

00:49:01,780 --> 00:49:09,460
drupal.org another question yeah thank

00:49:08,049 --> 00:49:12,490
these go to the thanks for the

00:49:09,460 --> 00:49:14,920
presentation so you recommended not

00:49:12,490 --> 00:49:18,569
committing to version control your

00:49:14,920 --> 00:49:20,799
modules and so forth that you're now

00:49:18,569 --> 00:49:22,510
recording in your composure JSON I

00:49:20,799 --> 00:49:25,690
wondered what the advantage of that was

00:49:22,510 --> 00:49:27,730
and if you are in a scenario where you

00:49:25,690 --> 00:49:29,410
know connection to your git server is

00:49:27,730 --> 00:49:32,410
reliable but connection to the outside

00:49:29,410 --> 00:49:34,390
internet is not would it be okay to flip

00:49:32,410 --> 00:49:36,069
that what do you lose by go ahead and by

00:49:34,390 --> 00:49:39,160
going out and committing your modules to

00:49:36,069 --> 00:49:42,640
your yet or your version control yeah so

00:49:39,160 --> 00:49:44,740
again at this point we are strongly in

00:49:42,640 --> 00:49:46,539
the area of opinion you know if you're

00:49:44,740 --> 00:49:48,460
asking me whether you should have one

00:49:46,539 --> 00:49:49,930
auto load or two auto loads i would say

00:49:48,460 --> 00:49:52,150
firmly there's a right and wrong answer

00:49:49,930 --> 00:49:53,440
here but i'm not going to tell you

00:49:52,150 --> 00:49:56,579
what's wrong to just commit everything

00:49:53,440 --> 00:50:00,819
but let me tell you about the downsides

00:49:56,579 --> 00:50:02,109
or maybe i can pose this as an upside

00:50:00,819 --> 00:50:05,980
you know if you have a team with a bunch

00:50:02,109 --> 00:50:07,869
of developers on it and the FEU module

00:50:05,980 --> 00:50:09,910
is not checked into your git repository

00:50:07,869 --> 00:50:12,130
then you know your developer isn't going

00:50:09,910 --> 00:50:14,920
to twiddle just one line in one file of

00:50:12,130 --> 00:50:16,960
your module to fix something you know

00:50:14,920 --> 00:50:19,630
this is what gets you into the situation

00:50:16,960 --> 00:50:22,059
where you can't manage all of your boxes

00:50:19,630 --> 00:50:22,910
you know that's the fastest way to get a

00:50:22,059 --> 00:50:24,260
release today

00:50:22,910 --> 00:50:26,180
in five minutes I can fix the problem

00:50:24,260 --> 00:50:27,740
for the customer but you do that a

00:50:26,180 --> 00:50:31,190
hundred times over the course of the

00:50:27,740 --> 00:50:33,829
year and then updates become more

00:50:31,190 --> 00:50:36,260
painful and documentation of what you

00:50:33,829 --> 00:50:38,750
change becomes more painful so if that

00:50:36,260 --> 00:50:41,630
file isn't even there what doesn't exist

00:50:38,750 --> 00:50:43,940
can't be hacked and I think that's one

00:50:41,630 --> 00:50:49,420
of the biggest advantages now in terms

00:50:43,940 --> 00:50:53,950
of network availability issues I

00:50:49,420 --> 00:50:58,609
strongly recommend deploying from a

00:50:53,950 --> 00:51:00,640
tested site where everything is all put

00:50:58,609 --> 00:51:04,039
into place and not using composer

00:51:00,640 --> 00:51:07,190
install for the the push to live so if

00:51:04,039 --> 00:51:08,900
your internet goes away but somehow your

00:51:07,190 --> 00:51:10,849
customers can get to your site then

00:51:08,900 --> 00:51:12,849
you're still okay because you're just

00:51:10,849 --> 00:51:16,190
going to be copying the site you already

00:51:12,849 --> 00:51:18,470
tested and and I think that that's

00:51:16,190 --> 00:51:20,510
really the the recommended workflow you

00:51:18,470 --> 00:51:22,670
want anyway because composer installed

00:51:20,510 --> 00:51:25,039
can take a long time it takes 30 seconds

00:51:22,670 --> 00:51:26,539
then that's 30 seconds of downtime while

00:51:25,039 --> 00:51:29,390
you're waiting for composer installed to

00:51:26,539 --> 00:51:33,079
do its thing and you all hope that that

00:51:29,390 --> 00:51:35,359
process is reproducible but I don't know

00:51:33,079 --> 00:51:40,940
about you but I have a lot more faith in

00:51:35,359 --> 00:51:43,369
a file copy than running an installer so

00:51:40,940 --> 00:51:46,520
I like to say what I tested is what goes

00:51:43,369 --> 00:51:49,819
out one other big advantage is composer

00:51:46,520 --> 00:51:52,460
has version specification this becomes

00:51:49,819 --> 00:51:54,799
especially advantageous if you're

00:51:52,460 --> 00:51:57,319
supporting sites how many of you have

00:51:54,799 --> 00:52:00,500
been in situations where you go and do

00:51:57,319 --> 00:52:03,730
updates and then find oh crap this

00:52:00,500 --> 00:52:06,950
update to this contribute functionality

00:52:03,730 --> 00:52:09,079
we can't update that so you roll it back

00:52:06,950 --> 00:52:11,329
things it's all good and now their

00:52:09,079 --> 00:52:14,270
developer comes along in a month does

00:52:11,329 --> 00:52:16,490
updates does the same thing and then

00:52:14,270 --> 00:52:18,319
they have to go in spend that same time

00:52:16,490 --> 00:52:21,470
figuring out oh wait we shouldn't have

00:52:18,319 --> 00:52:24,829
updated this with composer you can say

00:52:21,470 --> 00:52:26,809
use this exact version and it's self

00:52:24,829 --> 00:52:29,660
documenting so you no longer have to

00:52:26,809 --> 00:52:34,730
worry about updating you see oh this is

00:52:29,660 --> 00:52:35,579
pinned for a reason we've dealt with

00:52:34,730 --> 00:52:38,579
similar

00:52:35,579 --> 00:52:40,229
situations with josh make where we ended

00:52:38,579 --> 00:52:44,130
up just committing everything to the

00:52:40,229 --> 00:52:45,569
repository so and one way we check to

00:52:44,130 --> 00:52:48,329
make sure nobody's hacked is we just

00:52:45,569 --> 00:52:50,549
force everyone to run drush make every

00:52:48,329 --> 00:52:52,890
time we commit can you do something

00:52:50,549 --> 00:52:54,829
similar with composure can you run drush

00:52:52,890 --> 00:52:57,209
install and will overwrite any

00:52:54,829 --> 00:52:59,880
customizations made to libraries that

00:52:57,209 --> 00:53:03,089
have been pulled yeah yeah absolutely i

00:52:59,880 --> 00:53:04,229
mean overall make and composer processes

00:53:03,089 --> 00:53:06,329
you're going to find them to be very

00:53:04,229 --> 00:53:08,309
similar if you're doing something with

00:53:06,329 --> 00:53:09,509
composer you pretty much can do that

00:53:08,309 --> 00:53:10,739
with make now and if you're doing

00:53:09,509 --> 00:53:15,420
something with make you can do it with

00:53:10,739 --> 00:53:17,789
composer one area that make doesn't

00:53:15,420 --> 00:53:22,170
really help you with is the auto loading

00:53:17,789 --> 00:53:25,529
and and the class dependency management

00:53:22,170 --> 00:53:29,279
but beyond that all of the basic

00:53:25,529 --> 00:53:31,200
functionality is there the main reason

00:53:29,279 --> 00:53:33,660
you're going to want to move to composer

00:53:31,200 --> 00:53:37,529
manager is you know today there aren't a

00:53:33,660 --> 00:53:39,329
lot of modules using external libraries

00:53:37,529 --> 00:53:41,839
if you go out and look on drupal.org

00:53:39,329 --> 00:53:45,499
you'll find some modules are using

00:53:41,839 --> 00:53:48,959
composer Jason and the ones that are

00:53:45,499 --> 00:53:51,150
predominantly our modules that integrate

00:53:48,959 --> 00:53:53,940
with some third-party service if you

00:53:51,150 --> 00:53:55,709
think about it for a minute it's really

00:53:53,940 --> 00:53:57,569
obvious why they're doing that because

00:53:55,709 --> 00:54:00,180
the third party service they've

00:53:57,569 --> 00:54:02,549
published an API and they've got their

00:54:00,180 --> 00:54:06,630
API on github and their API and github

00:54:02,549 --> 00:54:08,069
uses composer too and the composer

00:54:06,630 --> 00:54:10,559
autoloader because that's the way things

00:54:08,069 --> 00:54:12,059
are going if you look at any of that you

00:54:10,559 --> 00:54:14,099
know the things that Google provides the

00:54:12,059 --> 00:54:16,349
thing that amazon provides any big

00:54:14,099 --> 00:54:18,059
vendor that's providing PHP libraries

00:54:16,349 --> 00:54:19,949
you're going to see that they're using

00:54:18,059 --> 00:54:22,519
composer to do it so your module that

00:54:19,949 --> 00:54:26,299
uses that is going to use the autoloader

00:54:22,519 --> 00:54:29,759
you're completely not in control of what

00:54:26,299 --> 00:54:31,559
libraries those big providers pull in

00:54:29,759 --> 00:54:34,140
through their composure Jason so if

00:54:31,559 --> 00:54:37,859
you're trying to use a make file to load

00:54:34,140 --> 00:54:39,539
these in you're in big danger that what

00:54:37,859 --> 00:54:42,799
you using from google and what you're

00:54:39,539 --> 00:54:45,089
using from amazon might cause problems

00:54:42,799 --> 00:54:47,309
unless you do it the composer way that

00:54:45,089 --> 00:54:48,190
we described and then composer install

00:54:47,309 --> 00:54:50,829
will make through

00:54:48,190 --> 00:54:52,900
all of those things go together end up

00:54:50,829 --> 00:54:56,339
in one autoloader and you don't have

00:54:52,900 --> 00:54:59,170
weird hard to debug mixed up classes

00:54:56,339 --> 00:55:05,680
believe me it's not not fun to fix those

00:54:59,170 --> 00:55:09,130
things yes increase the mic not quite

00:55:05,680 --> 00:55:11,440
there no yep I can talk a little bit

00:55:09,130 --> 00:55:14,650
about gluten PHP extensions and

00:55:11,440 --> 00:55:16,869
libraries if you have dances I'm sorry

00:55:14,650 --> 00:55:19,390
you PHP extensions as libraries what is

00:55:16,869 --> 00:55:21,839
your question I know that composer can

00:55:19,390 --> 00:55:25,180
include PHP extensions like requiring

00:55:21,839 --> 00:55:28,480
specific extensions to be enabled have

00:55:25,180 --> 00:55:31,650
you done sizing do you know what you

00:55:28,480 --> 00:55:35,170
said okay can you speak a little louder

00:55:31,650 --> 00:55:38,160
ok I'll repeat I didn't quite get the

00:55:35,170 --> 00:55:38,160
gist of what you're asking

00:55:52,960 --> 00:55:57,759
okay so you're talking about the fact

00:55:54,980 --> 00:56:00,890
that if you have a class then you can

00:55:57,759 --> 00:56:02,990
jam it somewhere and your PHP in it can

00:56:00,890 --> 00:56:05,509
point to it and then that class is

00:56:02,990 --> 00:56:19,999
available to be used as that that way

00:56:05,509 --> 00:56:21,890
you mean yeah yeah yeah but well the PHP

00:56:19,999 --> 00:56:24,499
extensions that's like the old way of

00:56:21,890 --> 00:56:28,190
doing it and composers the new way of

00:56:24,499 --> 00:56:32,029
doing it so if for use soap as an

00:56:28,190 --> 00:56:34,759
example if you have a PHP extension that

00:56:32,029 --> 00:56:37,549
provides soap that might be repackaged

00:56:34,759 --> 00:56:44,869
as a composer component that provides

00:56:37,549 --> 00:56:51,880
soap they provide the same functionality

00:56:44,869 --> 00:56:51,880
in different ways the composer does not

00:56:52,059 --> 00:56:57,499
specifically I mean it composer had it

00:56:55,819 --> 00:57:01,549
has packages which keeps track of all of

00:56:57,499 --> 00:57:03,519
this software that's available and it's

00:57:01,549 --> 00:57:07,819
its whole system it does not take any

00:57:03,519 --> 00:57:10,880
foreign systems like PHP extensions and

00:57:07,819 --> 00:57:13,460
I'm predicting that PHP extensions are

00:57:10,880 --> 00:57:15,349
going to become less and less used and

00:57:13,460 --> 00:57:18,140
people just be packaging things with

00:57:15,349 --> 00:57:23,989
composer instead so composer require is

00:57:18,140 --> 00:57:27,529
the way to go okay looks like that's it

00:57:23,989 --> 00:57:30,670
for questions so thank you all for

00:57:27,529 --> 00:57:30,670

YouTube URL: https://www.youtube.com/watch?v=WNS3d_wzZ2Y


