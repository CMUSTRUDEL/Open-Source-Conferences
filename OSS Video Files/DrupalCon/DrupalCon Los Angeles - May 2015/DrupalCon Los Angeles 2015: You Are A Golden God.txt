Title: DrupalCon Los Angeles 2015: You Are A Golden God
Publication date: 2015-05-12
Playlist: DrupalCon Los Angeles - May 2015
Description: 
	The goal of agile development is delivering business value. It’s not “more features faster”, but more “the right features better”, and in order to do that, “hi-fidelity feedback sooner.” This methodology is popular because when it works, people have more fun and get more done. Everybody wins.

A good agile development workflow is frequently augmented by automation. Teams that deliver excellence on complex projects usually have a good amount of tooling backing them up: they’re able to work in parallel, often running tests against every single commit, automatically, and as a result they're shipping more often while simultaneously having fewer miscommunications, missteps, and mistakes.

At the same time, many a project has been dragged down (even to the point of failure) by misfiring or cantankerous automation which becomes a project in and of itself, or an albatross of a test regime that takes far more energy to build, run, and maintain than it delivers in business value. That ain’t no kind of fun.

This session will delve into how to realize the full potential of automation for your website development process, first by aligning your team and stakeholders on what’s worth automating and why, and then by executing with free services and open source tools.

This includes including:    

Strategies for organization and cultural change.

Continuous Integration and even Continuous Delivery.

How to go about testing a website vs. testing a core or a specific module.

Don't take any sassback from the machines. Put them to work for you. Come to this session and find out how to get started.
Captions: 
	00:00:00,000 --> 00:00:06,000
alrighty so we're going to go ahead and

00:00:02,190 --> 00:00:07,740
get started and final few people trickle

00:00:06,000 --> 00:00:09,540
in from the back cell trickle in from

00:00:07,740 --> 00:00:11,820
the back thank you all for coming to

00:00:09,540 --> 00:00:13,710
attend our session you are golden God

00:00:11,820 --> 00:00:15,360
automate your workflow for fun and

00:00:13,710 --> 00:00:16,710
profit so quick show of hands in the

00:00:15,360 --> 00:00:19,230
audience just so we can get a sense of

00:00:16,710 --> 00:00:21,810
who all we're talking to how many of you

00:00:19,230 --> 00:00:25,230
have already automated at least some

00:00:21,810 --> 00:00:26,880
part of your workflow all right this is

00:00:25,230 --> 00:00:30,210
my crew how many you would say you've

00:00:26,880 --> 00:00:32,630
got more automation you want to do okay

00:00:30,210 --> 00:00:36,360
cool and if I can have the next slide

00:00:32,630 --> 00:00:38,340
this is the feeling of automation it's

00:00:36,360 --> 00:00:40,920
amazing right we call that you are a

00:00:38,340 --> 00:00:43,440
golden God because it's just

00:00:40,920 --> 00:00:46,140
awesome when you get robots to do your

00:00:43,440 --> 00:00:48,270
work for you and they eliminate the pain

00:00:46,140 --> 00:00:50,789
and the suffering and the drudgery of

00:00:48,270 --> 00:00:53,250
being a web developer and permit you to

00:00:50,789 --> 00:01:02,879
be in here bullets flower of the kiyose

00:00:53,250 --> 00:01:06,330
that you are it's also a little bitter

00:01:02,879 --> 00:01:08,040
tempered with reality when I had never

00:01:06,330 --> 00:01:10,860
seen the movie almost famous when Josh

00:01:08,040 --> 00:01:13,320
put the animated gifts on our talk and I

00:01:10,860 --> 00:01:15,659
think that it does a fantastic job of

00:01:13,320 --> 00:01:17,909
capturing both the hubris and the

00:01:15,659 --> 00:01:22,799
delusion that helps us get started on

00:01:17,909 --> 00:01:25,590
our efforts for automation you've

00:01:22,799 --> 00:01:28,140
probably seen this XKCD if you are at

00:01:25,590 --> 00:01:31,020
all familiar with automation and I would

00:01:28,140 --> 00:01:34,799
really encourage you to heed the alt

00:01:31,020 --> 00:01:37,200
text and don't screw yourself there are

00:01:34,799 --> 00:01:39,720
so many ways that automation can go

00:01:37,200 --> 00:01:41,520
wrong and who among us has not actually

00:01:39,720 --> 00:01:43,560
had this exact thing happen like as an

00:01:41,520 --> 00:01:47,220
engineer as developer I will cop right

00:01:43,560 --> 00:01:50,970
now Gavin spent a factor of two maybe

00:01:47,220 --> 00:01:52,860
even a factor of ten more time on the

00:01:50,970 --> 00:01:54,149
like automation system then actually

00:01:52,860 --> 00:01:55,470
would have taken me to just do whatever

00:01:54,149 --> 00:01:57,479
the thing was that I was trying to

00:01:55,470 --> 00:01:59,939
automate in the first off let me ever I

00:01:57,479 --> 00:02:01,590
look back and seeing that okay cool so

00:01:59,939 --> 00:02:04,079
we're all in this safe space we can talk

00:02:01,590 --> 00:02:05,040
about this together it's okay and that

00:02:04,079 --> 00:02:06,149
Betty is really what we're going to

00:02:05,040 --> 00:02:07,649
we're going to talk about here we're

00:02:06,149 --> 00:02:08,530
here to talk about like the high high

00:02:07,649 --> 00:02:10,810
and

00:02:08,530 --> 00:02:13,000
the low lows like the real peaks and

00:02:10,810 --> 00:02:15,370
valleys that come with trying to like

00:02:13,000 --> 00:02:17,050
augment your human capabilities with

00:02:15,370 --> 00:02:19,000
that of machines you know the Sorcerer's

00:02:17,050 --> 00:02:20,650
Apprentice is like a great metaphor for

00:02:19,000 --> 00:02:21,790
this you like can chop the room in half

00:02:20,650 --> 00:02:23,650
and get it through the twice the work

00:02:21,790 --> 00:02:25,540
for you but if it gets out of control or

00:02:23,650 --> 00:02:27,160
it's not well intentioned you run into

00:02:25,540 --> 00:02:29,620
kind of a gray goo problem where the

00:02:27,160 --> 00:02:31,660
machines are running wild and so we're

00:02:29,620 --> 00:02:33,370
really here to try to identify and talk

00:02:31,660 --> 00:02:34,590
about and help everyone conceive of this

00:02:33,370 --> 00:02:37,360
notion of what i like to call

00:02:34,590 --> 00:02:39,480
appropriate automation and it starts

00:02:37,360 --> 00:02:42,940
kind of with agile methodologies its own

00:02:39,480 --> 00:02:44,050
yeah if you if you read the write up a

00:02:42,940 --> 00:02:46,989
lot of what we're going to talk about

00:02:44,050 --> 00:02:50,019
today is rooted in our understanding of

00:02:46,989 --> 00:02:53,290
agile ideology now there are plenty of

00:02:50,019 --> 00:02:57,190
methodologies XP scrum Kanban scrum

00:02:53,290 --> 00:02:59,850
bands it's a thing so there there are

00:02:57,190 --> 00:03:02,290
those and there are all of the practices

00:02:59,850 --> 00:03:04,420
retrospectives and user stories and

00:03:02,290 --> 00:03:07,390
velocity tracking that go along with

00:03:04,420 --> 00:03:13,180
agile and we have what I like to think

00:03:07,390 --> 00:03:16,570
of development driven at the ABCD DS of

00:03:13,180 --> 00:03:21,160
agile if you will there's a TDD BD DCI

00:03:16,570 --> 00:03:23,650
CD DVD TD all of these ways and all of

00:03:21,160 --> 00:03:26,049
these things that people believe very

00:03:23,650 --> 00:03:27,850
strongly in and I think in the Drupal

00:03:26,049 --> 00:03:29,650
community and other places where I've

00:03:27,850 --> 00:03:33,370
done consulting and worked with teams

00:03:29,650 --> 00:03:37,000
that people experience it it's a very

00:03:33,370 --> 00:03:39,340
loaded word with a lot of baggage and

00:03:37,000 --> 00:03:42,280
they experience it a little more like my

00:03:39,340 --> 00:03:44,950
buddy Chris but doesn't agile actually

00:03:42,280 --> 00:03:47,950
just mean twice as much done in half the

00:03:44,950 --> 00:03:49,570
time right it's people tend to think its

00:03:47,950 --> 00:03:51,940
just oh we're moving fast more features

00:03:49,570 --> 00:03:53,980
faster and that's not what it's about

00:03:51,940 --> 00:03:58,030
yeah it's kind of a trigger word like

00:03:53,980 --> 00:04:01,870
communism was in the 1950s and like all

00:03:58,030 --> 00:04:05,019
good isms it had a manifesto it started

00:04:01,870 --> 00:04:07,209
here with the idea that we're uncovering

00:04:05,019 --> 00:04:09,070
better ways of developing software by

00:04:07,209 --> 00:04:11,400
doing it and helping others do it and

00:04:09,070 --> 00:04:13,959
through this work we've come to value

00:04:11,400 --> 00:04:15,970
individuals and interactions over

00:04:13,959 --> 00:04:18,200
processes and

00:04:15,970 --> 00:04:22,100
working software over comprehensive

00:04:18,200 --> 00:04:26,120
documentation customer collaboration

00:04:22,100 --> 00:04:29,540
over contract negotiation and responding

00:04:26,120 --> 00:04:32,480
to change over following a plan that is

00:04:29,540 --> 00:04:37,490
while we value the items on the right we

00:04:32,480 --> 00:04:39,230
value the items on the left more so the

00:04:37,490 --> 00:04:41,660
context of this I think is really

00:04:39,230 --> 00:04:45,320
important the agile manifesto was

00:04:41,660 --> 00:04:46,310
published in 2001 so that's I was

00:04:45,320 --> 00:04:49,760
thinking about the keynote this morning

00:04:46,310 --> 00:04:52,310
that's a year after Drupal ie6 had not

00:04:49,760 --> 00:04:54,410
yet been released you could still wear

00:04:52,310 --> 00:04:56,900
your shoes through airport security and

00:04:54,410 --> 00:04:58,900
if you googled for Gmail you got

00:04:56,900 --> 00:05:01,250
something that looked like this a

00:04:58,900 --> 00:05:03,290
different world we are really young and

00:05:01,250 --> 00:05:05,600
web development and I think it's easy to

00:05:03,290 --> 00:05:09,520
forget the context that that manifesto

00:05:05,600 --> 00:05:12,320
was written in so the way that we

00:05:09,520 --> 00:05:13,880
experience it I think at least the way

00:05:12,320 --> 00:05:15,920
that I experienced people talking it

00:05:13,880 --> 00:05:19,700
about about agile and lots of shops is

00:05:15,920 --> 00:05:20,660
very different than the manifesto so you

00:05:19,700 --> 00:05:22,340
get in this thing where you're supposed

00:05:20,660 --> 00:05:24,080
to be about individuals interactions

00:05:22,340 --> 00:05:25,460
over processes and tools but it said

00:05:24,080 --> 00:05:27,200
it's like oh my God look at all the

00:05:25,460 --> 00:05:29,120
sunny to have got vagrant we got doctor

00:05:27,200 --> 00:05:30,919
we got D hat we got grunt we've got

00:05:29,120 --> 00:05:32,720
chefs we've got Jenkins we've got

00:05:30,919 --> 00:05:35,360
ansible they got trim Travis we've got

00:05:32,720 --> 00:05:38,600
what's up like where how do we get there

00:05:35,360 --> 00:05:40,910
and working software over comprehensive

00:05:38,600 --> 00:05:43,700
documentation gets reinterpreted to say

00:05:40,910 --> 00:05:46,490
we're agile documentation is against the

00:05:43,700 --> 00:05:48,380
rules we don't have to write it we're

00:05:46,490 --> 00:05:50,600
agile i've heard that I've seen blog

00:05:48,380 --> 00:05:52,490
posts about bad the kind of

00:05:50,600 --> 00:05:55,370
documentation that the manifesto was

00:05:52,490 --> 00:05:57,919
pushing back against with documentation

00:05:55,370 --> 00:05:59,840
that looks like this we're talking about

00:05:57,919 --> 00:06:01,370
massive amounts of documentation that

00:05:59,840 --> 00:06:04,160
needed to be written before you could

00:06:01,370 --> 00:06:05,540
ever start on a project that kept you

00:06:04,160 --> 00:06:07,460
from getting the kind of feedback that

00:06:05,540 --> 00:06:11,660
you needed about whether what you were

00:06:07,460 --> 00:06:15,110
doing was even a good idea and in their

00:06:11,660 --> 00:06:17,390
own words a part of this context is that

00:06:15,110 --> 00:06:20,810
they were pushing back again and tired

00:06:17,390 --> 00:06:22,669
of being blamed by management for

00:06:20,810 --> 00:06:24,650
failures that they perceive developers

00:06:22,669 --> 00:06:27,319
perceived as managerial failures so as

00:06:24,650 --> 00:06:30,150
they described every day

00:06:27,319 --> 00:06:32,819
marketing or management or external

00:06:30,150 --> 00:06:35,550
customers internal customers and yes

00:06:32,819 --> 00:06:37,740
even developers don't want to make the

00:06:35,550 --> 00:06:40,020
hard trade-offs they don't want to make

00:06:37,740 --> 00:06:42,180
the decision so they impose irrational

00:06:40,020 --> 00:06:44,370
demands through the imposition of

00:06:42,180 --> 00:06:45,840
corporate power structures and this

00:06:44,370 --> 00:06:47,909
isn't merely a software development

00:06:45,840 --> 00:06:50,400
problem but it runs through Dilbert

00:06:47,909 --> 00:06:53,069
asked organizations and I think it runs

00:06:50,400 --> 00:06:55,110
to an extent through open source the

00:06:53,069 --> 00:06:57,569
more that we see people depending on

00:06:55,110 --> 00:06:59,639
open source for their bottom line we

00:06:57,569 --> 00:07:03,440
start to see some of those irrational

00:06:59,639 --> 00:07:06,030
impositions of structure as well so yeah

00:07:03,440 --> 00:07:08,460
documentation your agile you can

00:07:06,030 --> 00:07:10,409
document it's okay and the reaction

00:07:08,460 --> 00:07:12,030
against the structure often of this

00:07:10,409 --> 00:07:13,379
computer yeah it is customer

00:07:12,030 --> 00:07:16,080
collaboration over contract negotiation

00:07:13,379 --> 00:07:17,699
is the next step in this so after you've

00:07:16,080 --> 00:07:19,620
done your big document and you said this

00:07:17,699 --> 00:07:21,900
is what we're going to do we negotiate

00:07:19,620 --> 00:07:23,520
that contract and you're locked into it

00:07:21,900 --> 00:07:25,379
and so they're saying we want to

00:07:23,520 --> 00:07:26,690
collaborate with our customers and you

00:07:25,379 --> 00:07:29,250
know they don't see agile shops

00:07:26,690 --> 00:07:30,930
necessarily implementing this certainly

00:07:29,250 --> 00:07:33,389
there are exceptions but I've had so

00:07:30,930 --> 00:07:35,039
many where it looks like this and

00:07:33,389 --> 00:07:37,560
whether the bid is from internal

00:07:35,039 --> 00:07:39,479
resources or whether it's a client's we

00:07:37,560 --> 00:07:41,819
have to give this fixed estimate this

00:07:39,479 --> 00:07:43,319
bid or we wouldn't get the job or we

00:07:41,819 --> 00:07:45,900
wouldn't be able to do the things we

00:07:43,319 --> 00:07:47,190
needed to do followed by scope creep we

00:07:45,900 --> 00:07:49,500
don't want to collaborate with you not

00:07:47,190 --> 00:07:52,349
at all scope creep stop we're going to

00:07:49,500 --> 00:07:54,300
do what we wrote down at the same time

00:07:52,349 --> 00:07:57,000
that they're talking about being agile

00:07:54,300 --> 00:07:58,770
and oftentimes reaction against the

00:07:57,000 --> 00:08:01,259
imposition of structures go so far as to

00:07:58,770 --> 00:08:03,810
say like we don't need to actually plan

00:08:01,259 --> 00:08:06,719
it's like man it planning is boring

00:08:03,810 --> 00:08:07,879
let's read the code and as our great war

00:08:06,719 --> 00:08:11,190
leader and President Dwight Eisenhower

00:08:07,879 --> 00:08:14,340
informed us plans in fact are useless

00:08:11,190 --> 00:08:15,870
but planning is essential and it's

00:08:14,340 --> 00:08:17,460
actually kind of a wise way of looking

00:08:15,870 --> 00:08:19,770
at it like you you make a plan and then

00:08:17,460 --> 00:08:21,599
reality intrudes in your plan inevitably

00:08:19,770 --> 00:08:23,699
must be to some extent chap chapter

00:08:21,599 --> 00:08:25,409
scrapped or rethought but if you didn't

00:08:23,699 --> 00:08:27,930
take the time to get together with your

00:08:25,409 --> 00:08:29,669
team and think about the work that you

00:08:27,930 --> 00:08:31,590
were going to do together the exercise

00:08:29,669 --> 00:08:33,810
of planning you're just going to like

00:08:31,590 --> 00:08:37,440
agile yourself into some massive

00:08:33,810 --> 00:08:40,270
clustering it's inevitable and yet I

00:08:37,440 --> 00:08:42,520
have seen the light right I have seen

00:08:40,270 --> 00:08:44,830
where every commit that they make sure a

00:08:42,520 --> 00:08:47,200
repository is run against a battery of

00:08:44,830 --> 00:08:49,420
quick and rapid and valuable tests that

00:08:47,200 --> 00:08:50,800
inform developers if they have caused a

00:08:49,420 --> 00:08:52,420
regression in some other part of the

00:08:50,800 --> 00:08:54,670
code unintentionally i have seen

00:08:52,420 --> 00:08:56,590
pre-deployment test that actually

00:08:54,670 --> 00:08:58,330
functionally burned down and smoke test

00:08:56,590 --> 00:09:00,430
every single function of the site they

00:08:58,330 --> 00:09:02,050
run unit tests they run lips they run

00:09:00,430 --> 00:09:04,210
acceptance tests they do cross browser

00:09:02,050 --> 00:09:06,550
testing all run by robots and that's

00:09:04,210 --> 00:09:08,820
amazing right that is the kind of thing

00:09:06,550 --> 00:09:11,770
that helps you get out of this world of

00:09:08,820 --> 00:09:14,020
fearing to deploy because you're flying

00:09:11,770 --> 00:09:15,670
blind right automation and especially

00:09:14,020 --> 00:09:17,770
automation coupled with appropriate

00:09:15,670 --> 00:09:20,230
testing gives you a sense of telemetry

00:09:17,770 --> 00:09:22,060
on your projects right you get to know

00:09:20,230 --> 00:09:23,320
you have some types of assurance what's

00:09:22,060 --> 00:09:25,240
going to happen before it goes into

00:09:23,320 --> 00:09:27,460
production like who here has ever had

00:09:25,240 --> 00:09:31,380
something only happen in production

00:09:27,460 --> 00:09:33,820
right that is the worst feeling ever

00:09:31,380 --> 00:09:36,190
nobody ever wants to experience that

00:09:33,820 --> 00:09:37,960
again and and this is the way we as an

00:09:36,190 --> 00:09:40,660
industry advance ourselves towards

00:09:37,960 --> 00:09:42,970
escaping that kind of trap escaping that

00:09:40,660 --> 00:09:44,920
fear because fear in the words of Frank

00:09:42,970 --> 00:09:46,510
curvature of dune is the mind killer it

00:09:44,920 --> 00:09:47,890
will destroy your brain and so you have

00:09:46,510 --> 00:09:53,170
to get away from it as much as possible

00:09:47,890 --> 00:09:55,690
I think even beyond fear automation can

00:09:53,170 --> 00:09:57,010
help us get out of the realm of our job

00:09:55,690 --> 00:09:59,050
where it feels like we're just digging a

00:09:57,010 --> 00:10:00,340
ditch sometimes web development is a bit

00:09:59,050 --> 00:10:01,630
like you're digging a ditch you just

00:10:00,340 --> 00:10:03,310
like doing the work putting it in

00:10:01,630 --> 00:10:05,200
cranking it out given the things done

00:10:03,310 --> 00:10:07,240
and if we didn't have computers to

00:10:05,200 --> 00:10:09,790
augment ourselves and make us more

00:10:07,240 --> 00:10:10,960
effective in doing what we do I don't

00:10:09,790 --> 00:10:12,670
think many of us would actually be in

00:10:10,960 --> 00:10:15,640
this job like I started out my career as

00:10:12,670 --> 00:10:17,260
a kid just being like an HTML jockey and

00:10:15,640 --> 00:10:18,310
if I didn't have like Brett and find her

00:10:17,260 --> 00:10:20,140
a place and other things that would

00:10:18,310 --> 00:10:21,970
automate my manipulation of all these

00:10:20,140 --> 00:10:23,320
documents I would never I would washed

00:10:21,970 --> 00:10:25,030
out immediately because the idea that

00:10:23,320 --> 00:10:26,860
you would like go in and literally

00:10:25,030 --> 00:10:29,320
change every character when the text

00:10:26,860 --> 00:10:31,750
editor that is ditch digging and nobody

00:10:29,320 --> 00:10:33,610
wants to be a ditch digger and the worst

00:10:31,750 --> 00:10:35,980
of all possible worlds is sometimes when

00:10:33,610 --> 00:10:38,620
you have inappropriate automation or not

00:10:35,980 --> 00:10:40,210
very well done automation and it's

00:10:38,620 --> 00:10:41,860
supposed to keep you from flying blind

00:10:40,210 --> 00:10:43,870
it's supposed to give you this sense of

00:10:41,860 --> 00:10:45,520
assurance and can prevent you know human

00:10:43,870 --> 00:10:47,470
error from crapping out in production

00:10:45,520 --> 00:10:48,940
but the automation feels like it's

00:10:47,470 --> 00:10:50,590
digging a ditch to like you kind of have

00:10:48,940 --> 00:10:52,209
to fight with your automation system in

00:10:50,590 --> 00:10:54,040
order to get anything done and one

00:10:52,209 --> 00:10:56,589
then is people will start to circumvent

00:10:54,040 --> 00:10:58,569
the process they'll go around the ditch

00:10:56,589 --> 00:10:59,829
or they'll be like find excuses not to

00:10:58,569 --> 00:11:01,449
do it and you'll end up in the worst

00:10:59,829 --> 00:11:03,040
possible worlds where you put in the

00:11:01,449 --> 00:11:04,629
effort at some point somebody put in the

00:11:03,040 --> 00:11:06,339
effort and set up an automation testing

00:11:04,629 --> 00:11:07,929
regime but then it was too hard to use

00:11:06,339 --> 00:11:09,189
so people went around it and then there

00:11:07,929 --> 00:11:12,309
was a bug in deployment and now

00:11:09,189 --> 00:11:15,009
everyone's angry and part of the Swedes

00:11:12,309 --> 00:11:17,920
to a common perception of developers as

00:11:15,009 --> 00:11:19,660
Daredevils as people who don't want to

00:11:17,920 --> 00:11:21,879
follow rules who want to do what they

00:11:19,660 --> 00:11:24,610
want to do and not really play along

00:11:21,879 --> 00:11:26,949
with the system and I've gotten this

00:11:24,610 --> 00:11:28,629
both from shops and within the community

00:11:26,949 --> 00:11:30,519
that we want to make sure that that

00:11:28,629 --> 00:11:32,589
we're careful because we don't want to

00:11:30,519 --> 00:11:35,050
put barriers to contribution or we don't

00:11:32,589 --> 00:11:37,389
want to stick QA between the developers

00:11:35,050 --> 00:11:39,819
and getting their code to places which i

00:11:37,389 --> 00:11:42,100
think is a little bit crazy and actually

00:11:39,819 --> 00:11:44,350
not like my experience working with

00:11:42,100 --> 00:11:47,769
developers it's like this this mythos

00:11:44,350 --> 00:11:49,569
that exists around it I've been doing

00:11:47,769 --> 00:11:51,579
some narrative research collecting

00:11:49,569 --> 00:11:52,990
stories about people's experience

00:11:51,579 --> 00:11:56,139
collaborating and deploying with

00:11:52,990 --> 00:11:58,059
software and when asked after telling a

00:11:56,139 --> 00:12:00,009
story about a deployment what would you

00:11:58,059 --> 00:12:03,129
change if you could go back and change

00:12:00,009 --> 00:12:05,910
something overwhelmingly putting

00:12:03,129 --> 00:12:08,799
safeguards in place and planning better

00:12:05,910 --> 00:12:10,629
were the things that a mostly developer

00:12:08,799 --> 00:12:13,689
audience said that they would change if

00:12:10,629 --> 00:12:15,970
they could go back and do it over and so

00:12:13,689 --> 00:12:18,519
while there's that daredevil mythos that

00:12:15,970 --> 00:12:20,799
I see I feel like deployments actually

00:12:18,519 --> 00:12:23,110
feel a little bit more like this than

00:12:20,799 --> 00:12:24,429
the mountain bike jumping that you get

00:12:23,110 --> 00:12:27,399
ready to get that stuff to production

00:12:24,429 --> 00:12:30,699
and you could use a guard rail here it

00:12:27,399 --> 00:12:32,410
would be okay nobody's going to complain

00:12:30,699 --> 00:12:35,769
if they can keep their chalk on the road

00:12:32,410 --> 00:12:37,869
and they can keep going so I'm going to

00:12:35,769 --> 00:12:40,600
talk about a couple of specific examples

00:12:37,869 --> 00:12:43,209
that that I think are pretty informative

00:12:40,600 --> 00:12:45,790
from from my direct experience so I've

00:12:43,209 --> 00:12:47,559
worked with the development team at

00:12:45,790 --> 00:12:49,149
tableau tableau is like a big software

00:12:47,559 --> 00:12:50,949
company they make some amazing badass

00:12:49,149 --> 00:12:52,749
analytics tools that you can run on how

00:12:50,949 --> 00:12:54,129
to big data through and they have like

00:12:52,749 --> 00:12:55,689
hundreds of engineers on staff working

00:12:54,129 --> 00:12:57,549
on their antics lead they also have a

00:12:55,689 --> 00:12:59,259
really sophisticated website that like

00:12:57,549 --> 00:13:00,759
talks about like although on hundreds of

00:12:59,259 --> 00:13:02,089
thousands different ways the analytics

00:13:00,759 --> 00:13:04,339
and big data could help you in

00:13:02,089 --> 00:13:06,290
Google tableau or big data plus almost

00:13:04,339 --> 00:13:07,639
anything they've got dedicated landing

00:13:06,290 --> 00:13:09,259
page for that and that actually takes

00:13:07,639 --> 00:13:10,579
you through a dedicated flow that likes

00:13:09,259 --> 00:13:11,930
will connect you to the right people and

00:13:10,579 --> 00:13:14,720
hopefully eventually cellular software

00:13:11,930 --> 00:13:16,610
they have like a team of five people who

00:13:14,720 --> 00:13:18,199
just developers real developers who work

00:13:16,610 --> 00:13:19,970
inside their marketing department and

00:13:18,199 --> 00:13:23,540
just work on that website and they were

00:13:19,970 --> 00:13:25,579
in that terrible flying blind place and

00:13:23,540 --> 00:13:28,879
Eric Peterson will put a link up to this

00:13:25,579 --> 00:13:30,410
in the drupal con la page at the end he

00:13:28,879 --> 00:13:31,519
has a great deck about their what he

00:13:30,410 --> 00:13:33,829
calls their continuous integration

00:13:31,519 --> 00:13:36,050
Renaissance and they went from a place

00:13:33,829 --> 00:13:37,730
where they were only testing at the

00:13:36,050 --> 00:13:39,439
really seriously testing at the end of

00:13:37,730 --> 00:13:40,850
the sprint which meant that at the end

00:13:39,439 --> 00:13:42,559
of the Sprint they're all the inner

00:13:40,850 --> 00:13:43,670
integration problems will crop up and

00:13:42,559 --> 00:13:45,860
are only good to moralize so they

00:13:43,670 --> 00:13:47,779
couldn't deploy they didn't have an

00:13:45,860 --> 00:13:49,699
environment for testing that actually

00:13:47,779 --> 00:13:51,379
represented production so they would get

00:13:49,699 --> 00:13:53,149
tests that pass in their testing

00:13:51,379 --> 00:13:56,059
environment and then did not work the

00:13:53,149 --> 00:13:57,800
same way in production and they had as

00:13:56,059 --> 00:13:59,389
like this eventually led the whole team

00:13:57,800 --> 00:14:01,370
to kind of feel we like morale was at an

00:13:59,389 --> 00:14:03,139
all-time low because they had like so

00:14:01,370 --> 00:14:04,579
many Sprint's like seemed to go well and

00:14:03,139 --> 00:14:06,319
like crash and burn because they could

00:14:04,579 --> 00:14:07,399
get it integrated or worse they deployed

00:14:06,319 --> 00:14:09,470
stuff into production and they had a

00:14:07,399 --> 00:14:11,449
fire drill to roll it back or view a

00:14:09,470 --> 00:14:12,980
hotfix and over the course about six

00:14:11,449 --> 00:14:15,230
months they put in the discipline to say

00:14:12,980 --> 00:14:17,149
we're going to start building robust

00:14:15,230 --> 00:14:18,889
tests where they get environments to

00:14:17,149 --> 00:14:20,749
test in that represent production really

00:14:18,889 --> 00:14:23,059
well and we're going to start doing this

00:14:20,749 --> 00:14:24,079
automatically on every commit and they

00:14:23,059 --> 00:14:25,639
don't run all the tests that are you

00:14:24,079 --> 00:14:26,959
commit that they run a battery of like

00:14:25,639 --> 00:14:28,699
the good test I never connect and what

00:14:26,959 --> 00:14:29,749
that means is developers find out right

00:14:28,699 --> 00:14:32,029
away if there's an unintended

00:14:29,749 --> 00:14:34,129
consequence and before they go live they

00:14:32,029 --> 00:14:35,929
do like a really really full battery of

00:14:34,129 --> 00:14:37,670
tests and they've really managed to cut

00:14:35,929 --> 00:14:39,319
down on almost completely eliminating

00:14:37,670 --> 00:14:40,850
wonky things happening only in

00:14:39,319 --> 00:14:42,050
production they had to give up some

00:14:40,850 --> 00:14:44,269
stuff for that one of the things they

00:14:42,050 --> 00:14:46,040
had to give up was the ability for

00:14:44,269 --> 00:14:48,079
someone with drupal administrative

00:14:46,040 --> 00:14:49,879
interface experience to like quick fix

00:14:48,079 --> 00:14:51,079
something in the live environment right

00:14:49,879 --> 00:14:52,189
that was something originally that

00:14:51,079 --> 00:14:53,749
attractive in the drupal because it's

00:14:52,189 --> 00:14:55,170
very empowering to be like ah the left

00:14:53,749 --> 00:14:56,820
side just needs exercise

00:14:55,170 --> 00:14:58,649
click click on I just did it fulfill

00:14:56,820 --> 00:15:00,540
that request and that's really cool

00:14:58,649 --> 00:15:01,800
except at this scale where you have a

00:15:00,540 --> 00:15:03,360
really complex site there's a lot of

00:15:01,800 --> 00:15:05,370
things going on that like click click

00:15:03,360 --> 00:15:07,410
solve the problem on this page might

00:15:05,370 --> 00:15:09,720
have created a problem on another page

00:15:07,410 --> 00:15:11,550
and so they had to kind of sacrifice to

00:15:09,720 --> 00:15:14,130
Drupal's like a immediate gratification

00:15:11,550 --> 00:15:15,420
quick fix capability but because they

00:15:14,130 --> 00:15:17,399
were able to put all of this automation

00:15:15,420 --> 00:15:18,930
in line they really get deploys going

00:15:17,399 --> 00:15:20,310
quick enough that they feel like at the

00:15:18,930 --> 00:15:21,930
end it was like really worth the

00:15:20,310 --> 00:15:23,100
trade-off they don't want to go back so

00:15:21,930 --> 00:15:26,160
that is a place that you can

00:15:23,100 --> 00:15:30,329
realistically get to if you want another

00:15:26,160 --> 00:15:33,209
example I like is from my my homeboys at

00:15:30,329 --> 00:15:35,100
gira bear a really high quality shop

00:15:33,209 --> 00:15:36,149
they do a lot of interesting stuff with

00:15:35,100 --> 00:15:38,639
Drupal and one of the most interesting

00:15:36,149 --> 00:15:40,829
things I think they do is they follow

00:15:38,639 --> 00:15:42,480
what they call quote the gives r away

00:15:40,829 --> 00:15:44,339
and there's a couple of good blog posts

00:15:42,480 --> 00:15:46,050
on this in a video where I'm at I kind

00:15:44,339 --> 00:15:48,060
of like grants about it for 45 minutes

00:15:46,050 --> 00:15:51,209
you can watch but what it boils down to

00:15:48,060 --> 00:15:54,269
is they were fed up with what I like to

00:15:51,209 --> 00:15:55,829
call the Jenga school of web development

00:15:54,269 --> 00:15:57,690
I think we've all been here at one point

00:15:55,829 --> 00:15:59,370
or another square like you're working on

00:15:57,690 --> 00:16:02,730
the site and you're getting it all

00:15:59,370 --> 00:16:04,290
together and it's like perfect and now

00:16:02,730 --> 00:16:07,589
we're just never going to touch it again

00:16:04,290 --> 00:16:09,600
and then it's like oh why do I got to

00:16:07,589 --> 00:16:11,130
rebuild that and that the process of

00:16:09,600 --> 00:16:12,810
actually kind of like you know it starts

00:16:11,130 --> 00:16:14,399
with grease mentioned in his keynote

00:16:12,810 --> 00:16:16,589
like where do you start you start out

00:16:14,399 --> 00:16:19,320
live coding on Google to org right and

00:16:16,589 --> 00:16:20,820
that is the epitome of Jenga style

00:16:19,320 --> 00:16:22,350
development because you have no repetto

00:16:20,820 --> 00:16:23,670
process to get to where you were you're

00:16:22,350 --> 00:16:25,320
really you're creating something that's

00:16:23,670 --> 00:16:27,899
kind of inherently unstable through a

00:16:25,320 --> 00:16:29,430
series of non deterministic steps so

00:16:27,899 --> 00:16:31,199
what they do is they actually build

00:16:29,430 --> 00:16:32,459
everything up to be automated and built

00:16:31,199 --> 00:16:34,920
in an automated fashion from the

00:16:32,459 --> 00:16:37,170
beginning starts with a make file goes

00:16:34,920 --> 00:16:38,310
an installation profile whatever content

00:16:37,170 --> 00:16:39,899
they need to migrate there's a script

00:16:38,310 --> 00:16:42,209
for that so that when they sit down to

00:16:39,899 --> 00:16:44,339
start work on any given Sunday they can

00:16:42,209 --> 00:16:46,529
blow away their entire environment run

00:16:44,339 --> 00:16:48,000
one command and in five minutes have the

00:16:46,529 --> 00:16:49,829
site built up to the point where it's

00:16:48,000 --> 00:16:52,079
currently built in that environment and

00:16:49,829 --> 00:16:53,910
so what it does is our workflow is at

00:16:52,079 --> 00:16:56,430
the front end of a project it's slower

00:16:53,910 --> 00:16:58,380
and more expensive but then as they

00:16:56,430 --> 00:17:00,630
start to show things to the client and

00:16:58,380 --> 00:17:01,860
as the client has a tiffany's seeing a

00:17:00,630 --> 00:17:03,209
running website and wants to make

00:17:01,860 --> 00:17:06,000
changes they're in a much better

00:17:03,209 --> 00:17:07,150
position to adjust because they don't

00:17:06,000 --> 00:17:08,650
have to suddenly reversed

00:17:07,150 --> 00:17:10,690
engineer whatever got them to where they

00:17:08,650 --> 00:17:12,490
were they can kind of take their recipe

00:17:10,690 --> 00:17:13,960
back a few steps and head off in a new

00:17:12,490 --> 00:17:16,000
direction it's a very powerful way to

00:17:13,960 --> 00:17:17,830
think about building like actually the

00:17:16,000 --> 00:17:19,870
work of development not just testing and

00:17:17,830 --> 00:17:20,980
deployment can be augmented through

00:17:19,870 --> 00:17:23,589
automation in ways that are very

00:17:20,980 --> 00:17:25,810
effective and lastly of course there are

00:17:23,589 --> 00:17:27,490
cautionary tales I've seen a project

00:17:25,810 --> 00:17:30,220
that I worked on earlier in my career

00:17:27,490 --> 00:17:32,590
where you know was a big publishing

00:17:30,220 --> 00:17:34,750
project and there were like four shops

00:17:32,590 --> 00:17:36,670
involved in a big internal teams there's

00:17:34,750 --> 00:17:39,280
like 15 almost 20 people working on this

00:17:36,670 --> 00:17:41,110
project and that was creating like

00:17:39,280 --> 00:17:42,640
workflow problems and it was like we do

00:17:41,110 --> 00:17:44,410
this with testing and we're going to

00:17:42,640 --> 00:17:46,900
have this huge like push around testing

00:17:44,410 --> 00:17:48,820
and I think it's partly because the

00:17:46,900 --> 00:17:50,500
tools in the ecosystem word is mature at

00:17:48,820 --> 00:17:52,480
the time we didn't have the right like

00:17:50,500 --> 00:17:53,620
methods for doing really truly effective

00:17:52,480 --> 00:17:56,320
testing that we'll talk about in a bit

00:17:53,620 --> 00:17:58,990
but I think in retrospect that more

00:17:56,320 --> 00:18:01,480
people hours were spent building this

00:17:58,990 --> 00:18:03,310
like kind of like overbuilt but also the

00:18:01,480 --> 00:18:05,380
same time kind of rickety test system

00:18:03,310 --> 00:18:08,470
and then keeping it the care and feeding

00:18:05,380 --> 00:18:10,420
of the tests themselves became a bigger

00:18:08,470 --> 00:18:12,040
engineering effort than the actual

00:18:10,420 --> 00:18:13,420
website there's kind of like the

00:18:12,040 --> 00:18:15,520
language you can have the automation

00:18:13,420 --> 00:18:17,170
boondoggle take on a life of its own

00:18:15,520 --> 00:18:19,060
which is obviously someone I want to

00:18:17,170 --> 00:18:23,320
avoid it's why we decided to like to

00:18:19,060 --> 00:18:25,080
call appropriate automation so there are

00:18:23,320 --> 00:18:27,970
so many things that can go wrong

00:18:25,080 --> 00:18:31,810
automating and josh is talking about big

00:18:27,970 --> 00:18:34,000
system automation but at it's very is

00:18:31,810 --> 00:18:35,680
the core of Drupal we have a simple

00:18:34,000 --> 00:18:39,520
automation saying that we take for

00:18:35,680 --> 00:18:41,170
granted i think called cron and in the

00:18:39,520 --> 00:18:43,900
process of collecting those stories i

00:18:41,170 --> 00:18:45,730
was reminded about the role that chron

00:18:43,900 --> 00:18:49,120
plays in drupal development there was

00:18:45,730 --> 00:18:50,950
this fantastic story about a shop that

00:18:49,120 --> 00:18:52,660
had built a site for clients that had

00:18:50,950 --> 00:18:54,460
been in production for six months and

00:18:52,660 --> 00:18:56,710
they were getting ready to bring it back

00:18:54,460 --> 00:18:58,630
and introduce some new features so they

00:18:56,710 --> 00:18:59,800
got the they deployed the code to the

00:18:58,630 --> 00:19:01,900
test server and they brought the

00:18:59,800 --> 00:19:03,790
production database back and they were

00:19:01,900 --> 00:19:05,440
testing their work and they went home on

00:19:03,790 --> 00:19:08,380
Friday and this is a site with a lot of

00:19:05,440 --> 00:19:10,360
user interaction blogs and forums and

00:19:08,380 --> 00:19:12,700
organic groups and when they came in to

00:19:10,360 --> 00:19:17,020
work on on Monday they got the email

00:19:12,700 --> 00:19:20,230
that the server had sent out 23 middle

00:19:17,020 --> 00:19:24,070
emails over the weekend all of which

00:19:20,230 --> 00:19:26,530
pointed to the test server because it

00:19:24,070 --> 00:19:29,200
hadn't been running on production very

00:19:26,530 --> 00:19:30,460
simple very easy thing to miss that's

00:19:29,200 --> 00:19:32,860
one of the places where there are

00:19:30,460 --> 00:19:34,510
safeguards and things that matter and i

00:19:32,860 --> 00:19:35,920
think this brings up something really

00:19:34,510 --> 00:19:37,660
important about automation that we're

00:19:35,920 --> 00:19:40,870
going to talk more about as we build on

00:19:37,660 --> 00:19:42,910
this which is automation is great but

00:19:40,870 --> 00:19:45,700
automation also just does what you tell

00:19:42,910 --> 00:19:49,780
it to and it doesn't account for meaning

00:19:45,700 --> 00:19:52,240
and value so I question the value of

00:19:49,780 --> 00:19:54,010
those 23 million emails a website that

00:19:52,240 --> 00:19:56,770
was in production for six months with

00:19:54,010 --> 00:20:00,250
50,000 users 23 million emails and no

00:19:56,770 --> 00:20:03,310
one noticed probably means they did not

00:20:00,250 --> 00:20:05,200
want those emails and so we have this

00:20:03,310 --> 00:20:06,790
built-in automation with the thing that

00:20:05,200 --> 00:20:07,840
we click together with genuine we say

00:20:06,790 --> 00:20:11,320
yeah sure we're going to tell everybody

00:20:07,840 --> 00:20:13,840
about everything and we are not actually

00:20:11,320 --> 00:20:15,670
focusing on the value of what we're

00:20:13,840 --> 00:20:18,670
automating and what it means to the

00:20:15,670 --> 00:20:21,070
people that were interacting with so all

00:20:18,670 --> 00:20:23,110
of the things that we can automate those

00:20:21,070 --> 00:20:25,570
notifications maybe not the best idea

00:20:23,110 --> 00:20:28,210
and so in getting started with this

00:20:25,570 --> 00:20:31,060
think about what matters and what drives

00:20:28,210 --> 00:20:33,520
value as well as lightening the load of

00:20:31,060 --> 00:20:36,490
repetitive tasks both of those matter

00:20:33,520 --> 00:20:37,900
but I really like to focus on the value

00:20:36,490 --> 00:20:39,460
piece of it so there are things you can

00:20:37,900 --> 00:20:41,740
do you can have documentation that will

00:20:39,460 --> 00:20:44,160
be automatically compiled from comments

00:20:41,740 --> 00:20:46,300
in your code the automated notifications

00:20:44,160 --> 00:20:48,970
representative environments unit tests

00:20:46,300 --> 00:20:51,160
all of these things exist and you can

00:20:48,970 --> 00:20:53,800
move from manual testing two recorded

00:20:51,160 --> 00:20:56,140
browser test to abstracted browser tests

00:20:53,800 --> 00:20:57,490
all of this choice so where are you

00:20:56,140 --> 00:20:59,470
going to start and what are you going to

00:20:57,490 --> 00:21:01,660
do and I think Drupal is in an

00:20:59,470 --> 00:21:05,830
interesting place here because received

00:21:01,660 --> 00:21:07,600
wisdom for frameworks and people who are

00:21:05,830 --> 00:21:10,870
doing agile development how do you start

00:21:07,600 --> 00:21:12,670
with unit testing with code that you can

00:21:10,870 --> 00:21:14,320
test so that developers know that it's

00:21:12,670 --> 00:21:17,170
doing what they think it should be doing

00:21:14,320 --> 00:21:18,970
but Drupal doesn't do that the promise

00:21:17,170 --> 00:21:20,500
of Drupal and at least the promise for

00:21:18,970 --> 00:21:22,600
me when I started and I think for a lot

00:21:20,500 --> 00:21:24,610
of people who are new to Drupal is that

00:21:22,600 --> 00:21:26,920
you can take things and you can piece

00:21:24,610 --> 00:21:27,380
them together without a lot of developer

00:21:26,920 --> 00:21:28,760
inter

00:21:27,380 --> 00:21:30,830
mission and the value doesn't actually

00:21:28,760 --> 00:21:32,810
come or live in the business layer

00:21:30,830 --> 00:21:35,060
necessarily of something that you've

00:21:32,810 --> 00:21:38,360
coded and tested it lives in these

00:21:35,060 --> 00:21:40,550
interacting modules and so you move up

00:21:38,360 --> 00:21:42,740
from the unit testing and integration

00:21:40,550 --> 00:21:45,500
testing and ideally you're going to have

00:21:42,740 --> 00:21:46,610
end-to-end test things that might be I'm

00:21:45,500 --> 00:21:49,550
going to talk about behavior driven

00:21:46,610 --> 00:21:51,320
development and B hat if you haven't

00:21:49,550 --> 00:21:54,710
heard of it before it's a way of

00:21:51,320 --> 00:21:56,660
describing in plain language what a

00:21:54,710 --> 00:21:58,880
website's supposed to do and that's all

00:21:56,660 --> 00:21:59,990
about discovering meaning and value and

00:21:58,880 --> 00:22:01,250
that's something you're supposed to be

00:21:59,990 --> 00:22:04,580
doing with your business development

00:22:01,250 --> 00:22:06,740
team but what happens and what I did

00:22:04,580 --> 00:22:09,650
when I first saw is we were so desperate

00:22:06,740 --> 00:22:11,480
to be able to automate some of that end

00:22:09,650 --> 00:22:12,980
to end testing is the only way we could

00:22:11,480 --> 00:22:15,620
know that the site was going to be right

00:22:12,980 --> 00:22:19,510
that I ended up with tests that looked

00:22:15,620 --> 00:22:21,530
more like this one so i wanted to

00:22:19,510 --> 00:22:24,290
describe it in language with these

00:22:21,530 --> 00:22:26,180
pre-built steps and be able to capture

00:22:24,290 --> 00:22:28,670
that clicked together value that i

00:22:26,180 --> 00:22:30,830
didn't know how to test any other way so

00:22:28,670 --> 00:22:32,210
i have this like basic feature that I'm

00:22:30,830 --> 00:22:34,550
describing that I want to contribute

00:22:32,210 --> 00:22:36,620
content so as an author I need to log in

00:22:34,550 --> 00:22:39,050
and the first scenario is to be

00:22:36,620 --> 00:22:40,490
successful and given a username Virginia

00:22:39,050 --> 00:22:44,600
and the author and you just don't even

00:22:40,490 --> 00:22:46,750
want to read that like the point if this

00:22:44,600 --> 00:22:50,720
is to foster this language is to foster

00:22:46,750 --> 00:22:52,850
conversation it doesn't do that it's not

00:22:50,720 --> 00:22:56,060
serving its main most valuable purpose

00:22:52,850 --> 00:22:57,850
but I still did it and I still found use

00:22:56,060 --> 00:23:00,230
in it I think it serves as an

00:22:57,850 --> 00:23:02,750
exoskeleton in a way for a Drupal site

00:23:00,230 --> 00:23:04,970
to help hold it up while you're figuring

00:23:02,750 --> 00:23:08,540
out better ways of doing things but

00:23:04,970 --> 00:23:11,510
eventually you end up molting that test

00:23:08,540 --> 00:23:13,940
suite that exoskeleton has to change in

00:23:11,510 --> 00:23:16,190
order for you to grow with what you

00:23:13,940 --> 00:23:17,660
learn and what you can do better and I

00:23:16,190 --> 00:23:19,970
think this comes up to the question is

00:23:17,660 --> 00:23:22,220
like what is truly valuable testing for

00:23:19,970 --> 00:23:25,460
websites and you know their unit tests

00:23:22,220 --> 00:23:27,290
and core and unit tests and contributed

00:23:25,460 --> 00:23:29,030
if you're looking to refactor core or

00:23:27,290 --> 00:23:30,980
make a patch to a contributed module

00:23:29,030 --> 00:23:32,660
they will tell you almost nothing about

00:23:30,980 --> 00:23:34,610
whether the website you are assembling

00:23:32,660 --> 00:23:36,740
from the composition of all those is

00:23:34,610 --> 00:23:39,260
working the way you intended or not you

00:23:36,740 --> 00:23:40,039
have to move up to some kind of outside

00:23:39,260 --> 00:23:42,169
in

00:23:40,039 --> 00:23:44,749
driven testing for this and that the

00:23:42,169 --> 00:23:46,279
challenge sometimes as we are early in

00:23:44,749 --> 00:23:48,529
our learnings about this as a community

00:23:46,279 --> 00:23:49,729
those types of tests that you said like

00:23:48,529 --> 00:23:52,549
you don't even want to read it do you

00:23:49,729 --> 00:23:54,440
imagine a spec or a test suite for a

00:23:52,549 --> 00:23:55,700
site it could include hundreds of tests

00:23:54,440 --> 00:23:57,979
that are written out like that and when

00:23:55,700 --> 00:24:00,710
I look at those things it reminds me of

00:23:57,979 --> 00:24:02,239
earlier times in my career when some

00:24:00,710 --> 00:24:04,489
would say like here's the Photoshop

00:24:02,239 --> 00:24:06,409
document and just make the web page go

00:24:04,489 --> 00:24:07,850
go get it so to make it look not to see

00:24:06,409 --> 00:24:09,739
it's a little bit off you got to make it

00:24:07,850 --> 00:24:11,450
like the photoshop top the breeze

00:24:09,739 --> 00:24:13,429
probably had that experience before and

00:24:11,450 --> 00:24:16,159
it's not to say that having the

00:24:13,429 --> 00:24:17,419
photoshop da wasn't actually a necessary

00:24:16,159 --> 00:24:18,979
part of the process because without some

00:24:17,419 --> 00:24:20,299
idea where you're going you don't have a

00:24:18,979 --> 00:24:22,489
hard time building it but as a

00:24:20,299 --> 00:24:25,460
specification for a website kind of

00:24:22,489 --> 00:24:28,309
didactic deterministic sort of

00:24:25,460 --> 00:24:30,229
dictatorial specifications like that or

00:24:28,309 --> 00:24:31,820
like a series of tests that list that

00:24:30,229 --> 00:24:34,429
list out every single step in kind of

00:24:31,820 --> 00:24:35,690
asinine detail are fundamentally maybe

00:24:34,429 --> 00:24:38,299
they're useful as a kind of a point

00:24:35,690 --> 00:24:39,799
inspection exoskeleton they're unhelpful

00:24:38,299 --> 00:24:41,809
to the process they don't really help us

00:24:39,799 --> 00:24:43,609
in the long haul improve our lives and

00:24:41,809 --> 00:24:44,929
make things better you want we want our

00:24:43,609 --> 00:24:47,599
automation we want our testing to be

00:24:44,929 --> 00:24:50,149
like in actual skeleton a backbone for

00:24:47,599 --> 00:24:52,279
what we do so that as we invest in

00:24:50,149 --> 00:24:54,710
building systems for automation no

00:24:52,279 --> 00:24:56,659
matter what kind of lights the website a

00:24:54,710 --> 00:24:58,489
talent as it's built around it it would

00:24:56,659 --> 00:24:59,509
retain love its validity and you know

00:24:58,489 --> 00:25:01,999
you'll probably have to throw some

00:24:59,509 --> 00:25:03,679
things out recycles itself but the sort

00:25:01,999 --> 00:25:05,599
of first generation behavioral tests day

00:25:03,679 --> 00:25:07,999
which is very exoskeleton issue is

00:25:05,599 --> 00:25:09,470
feeling is something that we maybe we

00:25:07,999 --> 00:25:11,570
all have to go through we should try to

00:25:09,470 --> 00:25:12,979
think about how to move beyond yeah and

00:25:11,570 --> 00:25:15,499
it happens the most when you're trying

00:25:12,979 --> 00:25:18,080
to introduce some kind of end-to-end

00:25:15,499 --> 00:25:19,849
testing to an existing site because

00:25:18,080 --> 00:25:21,379
you're not doing discovery at that point

00:25:19,849 --> 00:25:25,090
if anything your your back feeling

00:25:21,379 --> 00:25:28,279
documentation and so it's so easy to do

00:25:25,090 --> 00:25:31,099
but a scenario like that is probably

00:25:28,279 --> 00:25:33,529
going to read more like given i'm logged

00:25:31,099 --> 00:25:34,820
in and you're going to focus on what the

00:25:33,529 --> 00:25:36,529
authors are contributing and what the

00:25:34,820 --> 00:25:39,109
value of the website is and that's just

00:25:36,529 --> 00:25:40,609
going to become a small step in the

00:25:39,109 --> 00:25:42,950
process and something that isn't

00:25:40,609 --> 00:25:46,309
actually locked to the user experience

00:25:42,950 --> 00:25:48,710
directly so i've been really interested

00:25:46,309 --> 00:25:51,320
lately by some work coming out of the

00:25:48,710 --> 00:25:52,690
jobs to be done people especially Alan

00:25:51,320 --> 00:25:55,780
Clemente

00:25:52,690 --> 00:26:00,350
rethinking this idea of the user story

00:25:55,780 --> 00:26:02,780
in indy hat that format is an FIR agile

00:26:00,350 --> 00:26:05,090
forever it's one of two ways of phrasing

00:26:02,780 --> 00:26:08,570
it but it's in order to do something of

00:26:05,090 --> 00:26:10,580
value as a particular role or persona I

00:26:08,570 --> 00:26:13,490
need to be able to accomplish something

00:26:10,580 --> 00:26:16,400
and for me that's always felt a little

00:26:13,490 --> 00:26:17,600
bit like ill-fitting clothes it made a

00:26:16,400 --> 00:26:19,100
lot of sense and this is one of the

00:26:17,600 --> 00:26:21,770
points that they make when we didn't

00:26:19,100 --> 00:26:23,060
have easy access to our users and we

00:26:21,770 --> 00:26:24,770
didn't have the opportunity to be

00:26:23,060 --> 00:26:26,870
networked and to talk to them about the

00:26:24,770 --> 00:26:29,210
experiences they were having it was

00:26:26,870 --> 00:26:31,160
really important for developers and this

00:26:29,210 --> 00:26:32,920
came out injuries as keynote actually to

00:26:31,160 --> 00:26:35,180
to remember there were actually people

00:26:32,920 --> 00:26:38,000
using the product that you were building

00:26:35,180 --> 00:26:40,520
as a software engineer but they don't

00:26:38,000 --> 00:26:43,100
really capture everything that you need

00:26:40,520 --> 00:26:45,530
to know if you're creating value so

00:26:43,100 --> 00:26:48,470
these folks would say that the persona

00:26:45,530 --> 00:26:50,210
is irrelevant and what they want to do

00:26:48,470 --> 00:26:51,650
we make a lot of assumptions at that

00:26:50,210 --> 00:26:55,520
level we don't know that it's

00:26:51,650 --> 00:26:57,200
necessarily the best action so the

00:26:55,520 --> 00:27:00,800
unexpected outcome yeah there's probably

00:26:57,200 --> 00:27:03,680
that and to that piece they save but

00:27:00,800 --> 00:27:05,420
they redefine this with the idea that we

00:27:03,680 --> 00:27:08,180
need to pay attention to users

00:27:05,420 --> 00:27:09,560
motivations so for example I was having

00:27:08,180 --> 00:27:13,310
a conversation with someone yesterday

00:27:09,560 --> 00:27:16,430
who is talking about how they do on call

00:27:13,310 --> 00:27:18,710
it an oncology website and the people

00:27:16,430 --> 00:27:20,450
who are using their services are not

00:27:18,710 --> 00:27:22,460
just one person finding out information

00:27:20,450 --> 00:27:23,420
there are physicians their caregivers

00:27:22,460 --> 00:27:25,730
and there are people who have been

00:27:23,420 --> 00:27:27,200
diagnosed and even someone who's been

00:27:25,730 --> 00:27:29,660
diagnosed with cancer is at a very

00:27:27,200 --> 00:27:31,400
different place when they first receive

00:27:29,660 --> 00:27:32,600
that diagnosis when they start their

00:27:31,400 --> 00:27:35,270
treatment and when they're in their

00:27:32,600 --> 00:27:39,530
treatment and that the persona captures

00:27:35,270 --> 00:27:42,230
none of this so they suggest that you

00:27:39,530 --> 00:27:44,630
focus more on the situation what are the

00:27:42,230 --> 00:27:48,230
people feeling and what is their

00:27:44,630 --> 00:27:50,330
motivation so what this does if that's

00:27:48,230 --> 00:27:53,920
what your feature says instead of in

00:27:50,330 --> 00:27:56,390
order to create content I want to login

00:27:53,920 --> 00:27:58,160
we focus on what people are trying to

00:27:56,390 --> 00:28:00,770
communicate and where that value level

00:27:58,160 --> 00:28:04,280
comes in then when when we're making the

00:28:00,770 --> 00:28:05,240
hard trade-offs about what we do we have

00:28:04,280 --> 00:28:06,890
a guideline that

00:28:05,240 --> 00:28:10,400
meaningful to make those hard decisions

00:28:06,890 --> 00:28:11,990
by we understand what the impact of the

00:28:10,400 --> 00:28:14,900
application that we're building is on

00:28:11,990 --> 00:28:17,690
the people who are using it so there's a

00:28:14,900 --> 00:28:19,520
lot more emotion and motivation about

00:28:17,690 --> 00:28:22,070
what's supposed to be happening for

00:28:19,520 --> 00:28:23,570
certain feature so those wireframes that

00:28:22,070 --> 00:28:26,240
Josh was talking about you might get

00:28:23,570 --> 00:28:28,130
something like this and we will put the

00:28:26,240 --> 00:28:30,260
links to the blog post because this also

00:28:28,130 --> 00:28:32,540
is some of Alan cements work you have

00:28:30,260 --> 00:28:34,040
this plain old wire frame and you might

00:28:32,540 --> 00:28:35,540
have received it with some documentation

00:28:34,040 --> 00:28:36,710
that said what it was supposed to do and

00:28:35,540 --> 00:28:38,660
you might not have there might just be

00:28:36,710 --> 00:28:40,340
all this implicit functionality that

00:28:38,660 --> 00:28:42,080
wasn't in the bid that you're now

00:28:40,340 --> 00:28:44,090
expected to implement because somebody

00:28:42,080 --> 00:28:46,070
filled up some space on the screen to

00:28:44,090 --> 00:28:48,230
make it look balanced so you have these

00:28:46,070 --> 00:28:51,380
things and you don't have that context

00:28:48,230 --> 00:28:53,480
the idea is to provide context and the

00:28:51,380 --> 00:28:56,540
jobs to be done people would ask you to

00:28:53,480 --> 00:29:00,020
look at your interface more like this so

00:28:56,540 --> 00:29:02,420
in his example everything here is about

00:29:00,020 --> 00:29:05,600
what these elements are doing for their

00:29:02,420 --> 00:29:07,610
users so why do we have your sales rep

00:29:05,600 --> 00:29:09,800
at the top well you want to remind the

00:29:07,610 --> 00:29:11,870
customer that Joey is their sales rep

00:29:09,800 --> 00:29:13,160
because they have anxiety potentially

00:29:11,870 --> 00:29:15,770
about physically being with the

00:29:13,160 --> 00:29:18,500
salesperson and not being right there

00:29:15,770 --> 00:29:20,960
and all of those elements have reasons

00:29:18,500 --> 00:29:23,390
so that when you can't decide what to do

00:29:20,960 --> 00:29:25,730
at the theming level or you can't decide

00:29:23,390 --> 00:29:27,980
what to do about how you implement it

00:29:25,730 --> 00:29:29,750
you can think about the state of the

00:29:27,980 --> 00:29:31,730
user and what it is they're supposed to

00:29:29,750 --> 00:29:34,190
get out of it and that will help you

00:29:31,730 --> 00:29:36,770
drive decisions and decide if the cost

00:29:34,190 --> 00:29:41,240
of doing something more custom is

00:29:36,770 --> 00:29:42,920
worthwhile or maybe not as important so

00:29:41,240 --> 00:29:44,660
let's talk about actually what we do

00:29:42,920 --> 00:29:46,250
when we automate like is we're going to

00:29:44,660 --> 00:29:48,350
get down to brass tacks and kind of have

00:29:46,250 --> 00:29:49,940
the rubber meets the road like what are

00:29:48,350 --> 00:29:51,950
the things and we absolutely need to do

00:29:49,940 --> 00:29:54,020
that are going to provide real value for

00:29:51,950 --> 00:29:56,180
our teams for our processes as part of

00:29:54,020 --> 00:29:58,190
implementing or enhancing our existing

00:29:56,180 --> 00:30:00,620
automation sweet yeah and I want to

00:29:58,190 --> 00:30:02,780
suggest and there's definitely research

00:30:00,620 --> 00:30:04,760
out there to support this and experience

00:30:02,780 --> 00:30:05,159
perhaps anecdotally a lot of it in the

00:30:04,760 --> 00:30:09,139
room

00:30:05,159 --> 00:30:12,059
that it's very difficult to succeed at

00:30:09,139 --> 00:30:14,009
really the kind of automation that Josh

00:30:12,059 --> 00:30:16,529
was describing and even some of the the

00:30:14,009 --> 00:30:19,109
more modest efforts if you aren't

00:30:16,529 --> 00:30:20,460
working as an organization so if a small

00:30:19,109 --> 00:30:23,070
group of people decides that it's a

00:30:20,460 --> 00:30:25,559
really great idea to stop everyone from

00:30:23,070 --> 00:30:27,389
committing until the tests pass you're

00:30:25,559 --> 00:30:29,399
messing with their workflow and that

00:30:27,389 --> 00:30:31,950
actually has ripple effects all the way

00:30:29,399 --> 00:30:33,659
through the organization in addition

00:30:31,950 --> 00:30:35,999
like what we saw with the gives our away

00:30:33,659 --> 00:30:38,309
slide if you're spending time on that

00:30:35,999 --> 00:30:40,739
automation up front you're seeing those

00:30:38,309 --> 00:30:42,929
higher costs you need the support of

00:30:40,739 --> 00:30:45,840
business units and people at customers

00:30:42,929 --> 00:30:47,399
in order to understand why that cost is

00:30:45,840 --> 00:30:52,289
acceptable and what it's going to get

00:30:47,399 --> 00:30:56,549
you so deciding to be enthusiastic and

00:30:52,289 --> 00:31:01,080
say yes I can do this by yourself is a

00:30:56,549 --> 00:31:02,700
risky endeavor and but I think it's easy

00:31:01,080 --> 00:31:05,399
to forget that I know I forgotten that

00:31:02,700 --> 00:31:07,739
at times to lay that groundwork and to

00:31:05,399 --> 00:31:09,629
make sure that what's happening is what

00:31:07,739 --> 00:31:11,999
we we want to be doing yeah it was all

00:31:09,629 --> 00:31:13,259
the same page but so assuming you can

00:31:11,999 --> 00:31:14,249
get your organizational by and the next

00:31:13,259 --> 00:31:15,690
thing to do is make sure that your

00:31:14,249 --> 00:31:17,249
version control is on straight and

00:31:15,690 --> 00:31:19,229
everybody should be using version

00:31:17,249 --> 00:31:23,009
control and if you're not you are bad

00:31:19,229 --> 00:31:24,389
and you should feel bad and the reason

00:31:23,009 --> 00:31:25,649
this is not just that you have the

00:31:24,389 --> 00:31:26,940
electability roll back and keep track of

00:31:25,649 --> 00:31:27,960
things and that's how we all do stuff

00:31:26,940 --> 00:31:30,629
with professionals reason is that

00:31:27,960 --> 00:31:33,210
version control creates a system of

00:31:30,629 --> 00:31:35,849
checkpoints around your work and that is

00:31:33,210 --> 00:31:37,679
actually the fundamental backbone for

00:31:35,849 --> 00:31:38,970
any meaningful automation system

00:31:37,679 --> 00:31:41,129
anything you're going to do that's going

00:31:38,970 --> 00:31:42,840
to do cool stuff with automation is

00:31:41,129 --> 00:31:45,210
going to be linked to triggered by

00:31:42,840 --> 00:31:47,309
keying off of and making use of version

00:31:45,210 --> 00:31:48,479
control so if you've been putting it off

00:31:47,309 --> 00:31:49,799
I don't think any people in the room

00:31:48,479 --> 00:31:51,840
have been but if you're watching this

00:31:49,799 --> 00:31:54,779
online and you haven't completed version

00:31:51,840 --> 00:31:56,639
control yet this is another reason to do

00:31:54,779 --> 00:31:58,619
it it's not that painful you won't ever

00:31:56,639 --> 00:31:59,820
want to go back and and then you know

00:31:58,619 --> 00:32:01,470
the next time someone goes to talk like

00:31:59,820 --> 00:32:02,460
that you can kind of smile smugly to

00:32:01,470 --> 00:32:04,769
yourself that you're doing it correctly

00:32:02,460 --> 00:32:07,409
but to be fair it might be that painful

00:32:04,769 --> 00:32:08,609
if you came in and you came in with the

00:32:07,409 --> 00:32:09,960
idea that you're going to click the

00:32:08,609 --> 00:32:12,090
things together and your sudden

00:32:09,960 --> 00:32:16,220
they confronted with get and the command

00:32:12,090 --> 00:32:18,450
line but I maintain the pain is worth it

00:32:16,220 --> 00:32:20,340
so the next thing you'll need in order

00:32:18,450 --> 00:32:23,370
to automate is something to orchestrate

00:32:20,340 --> 00:32:24,539
your automation I see people get started

00:32:23,370 --> 00:32:26,490
with things early on and they kind of

00:32:24,539 --> 00:32:28,529
try to have the website automated itself

00:32:26,490 --> 00:32:30,299
in terms of the development process and

00:32:28,529 --> 00:32:32,130
this is always a bad idea you don't want

00:32:30,299 --> 00:32:34,320
to go into like automation inception

00:32:32,130 --> 00:32:36,299
where a system is trying to effect

00:32:34,320 --> 00:32:38,159
itself in some way while it's running

00:32:36,299 --> 00:32:39,510
that's going to inevitably lead to all

00:32:38,159 --> 00:32:41,279
kinds of weird edge cases and be

00:32:39,510 --> 00:32:43,799
inherently fragile there are a lot of

00:32:41,279 --> 00:32:46,010
wonderful tools out there for doing

00:32:43,799 --> 00:32:48,210
orchestration around automation the

00:32:46,010 --> 00:32:50,070
undisputed heavyweight champion of the

00:32:48,210 --> 00:32:52,440
open source side is a tool called

00:32:50,070 --> 00:32:54,450
Jenkins it's a wonderful java project

00:32:52,440 --> 00:32:55,559
that you can install and setup and if

00:32:54,450 --> 00:32:56,789
you are looking at your feet wet with

00:32:55,559 --> 00:32:59,010
this type of stuff there are also a

00:32:56,789 --> 00:33:00,240
number of free services that will do it

00:32:59,010 --> 00:33:01,919
and i'll actually do it in perpetuity

00:33:00,240 --> 00:33:04,289
for open source projects so you can use

00:33:01,919 --> 00:33:06,270
travis you can use Circle C I you can

00:33:04,289 --> 00:33:08,100
use worker there's probably like four or

00:33:06,270 --> 00:33:09,240
five more because it's a hot state and a

00:33:08,100 --> 00:33:11,039
lot of things are popping up all the

00:33:09,240 --> 00:33:14,100
time but the point is you need to make a

00:33:11,039 --> 00:33:15,779
choice about who is the kind of this

00:33:14,100 --> 00:33:17,190
dude over there you've got the version

00:33:15,779 --> 00:33:18,990
control but somebody's going to have to

00:33:17,190 --> 00:33:20,909
like wave the wand around and conduct

00:33:18,990 --> 00:33:22,409
the orchestration of automation and you

00:33:20,909 --> 00:33:23,820
shouldn't look like I wouldn't torture

00:33:22,409 --> 00:33:25,470
yourself with this choice too much it

00:33:23,820 --> 00:33:27,480
can become a bit of an invulnerable just

00:33:25,470 --> 00:33:29,850
pick something that seems good time box

00:33:27,480 --> 00:33:31,710
your your your research to an hour or so

00:33:29,850 --> 00:33:32,850
and then move forward and be ready to

00:33:31,710 --> 00:33:34,140
change in the future because a lot of

00:33:32,850 --> 00:33:36,690
what you built will be reusable and

00:33:34,140 --> 00:33:38,460
lastly it's up to you it's up to you to

00:33:36,690 --> 00:33:40,350
do the automation the automation doesn't

00:33:38,460 --> 00:33:42,330
automate itself yet it's actually pretty

00:33:40,350 --> 00:33:44,460
dumb all the things that will do are not

00:33:42,330 --> 00:33:46,710
very inherently intelligent you will

00:33:44,460 --> 00:33:48,360
have to think about what you want what

00:33:46,710 --> 00:33:49,799
steps in your workflow you want to make

00:33:48,360 --> 00:33:51,840
automated which things you want to

00:33:49,799 --> 00:33:54,840
happen on the basis of the script and if

00:33:51,840 --> 00:33:56,279
you're going to be doing testing useful

00:33:54,840 --> 00:33:57,510
testing for websites which our example

00:33:56,279 --> 00:33:59,520
does you need to think about what's

00:33:57,510 --> 00:34:01,080
worth testing and why we'll talk about

00:33:59,520 --> 00:34:02,880
that a little more but basically pick

00:34:01,080 --> 00:34:04,740
here get your version control ready pick

00:34:02,880 --> 00:34:06,029
your orchestrator and then how to dive

00:34:04,740 --> 00:34:07,289
in you gotta do some development work

00:34:06,029 --> 00:34:08,669
you should make clear some time to do

00:34:07,289 --> 00:34:10,260
this clear some time to learn a bit

00:34:08,669 --> 00:34:13,290
about it it'll be time well-spent I

00:34:10,260 --> 00:34:15,379
promise so we have a non-live demo that

00:34:13,290 --> 00:34:17,119
I will step through an example of how

00:34:15,379 --> 00:34:18,889
might actually do workflow automation

00:34:17,119 --> 00:34:20,990
and we're going to start with the pull

00:34:18,889 --> 00:34:23,389
request I use github as my example

00:34:20,990 --> 00:34:24,859
because github is freely available to

00:34:23,389 --> 00:34:27,319
everyone and it makes using get pretty

00:34:24,859 --> 00:34:29,809
easy they have a nice simple workflow I

00:34:27,319 --> 00:34:32,629
see a lot of people out there who here

00:34:29,809 --> 00:34:35,720
sir there is get flow right who here

00:34:32,629 --> 00:34:39,639
actually uses get flow surprising number

00:34:35,720 --> 00:34:42,049
of people I find get flow to be like

00:34:39,639 --> 00:34:43,579
baroque leave overcomplicated for

00:34:42,049 --> 00:34:44,779
website development and it's because it

00:34:43,579 --> 00:34:47,149
was developed by people who kind of

00:34:44,779 --> 00:34:48,349
release binary applications and you do

00:34:47,149 --> 00:34:49,609
support multiple versions so there's a

00:34:48,349 --> 00:34:50,569
lot of stuff in there that's like you

00:34:49,609 --> 00:34:51,859
don't have multiple versions of your

00:34:50,569 --> 00:34:54,379
website running at once that you need to

00:34:51,859 --> 00:34:58,160
support and the the coop the basic get

00:34:54,379 --> 00:35:00,109
github work flow of creative ranch work

00:34:58,160 --> 00:35:01,700
on the branch review the branch and

00:35:00,109 --> 00:35:03,619
merge the branch is actually what I

00:35:01,700 --> 00:35:04,730
think ninety-nine percent of websites or

00:35:03,619 --> 00:35:07,250
the heat you can go if that kind of

00:35:04,730 --> 00:35:08,960
simpler less easy less less likely to

00:35:07,250 --> 00:35:11,299
screw yourself up kind of workflow and

00:35:08,960 --> 00:35:14,299
it gets the job done and in here we've

00:35:11,299 --> 00:35:16,549
got a travesty I implemented so that as

00:35:14,299 --> 00:35:18,259
I opened my poll request it is says oh

00:35:16,549 --> 00:35:19,940
you would think you should merge this

00:35:18,259 --> 00:35:22,549
back to master but see about that and

00:35:19,940 --> 00:35:24,289
it's going to go ahead and spin that up

00:35:22,549 --> 00:35:25,940
automatically and it will run it

00:35:24,289 --> 00:35:27,410
orchestrates the running of all the

00:35:25,940 --> 00:35:29,750
tests and in this case I'm actually

00:35:27,410 --> 00:35:32,440
testing the website isn't run on Travis

00:35:29,750 --> 00:35:34,309
Travis is just orchestrating the

00:35:32,440 --> 00:35:36,289
implementation of the representative

00:35:34,309 --> 00:35:37,730
environment and that we know is very

00:35:36,289 --> 00:35:38,930
close to the production environment

00:35:37,730 --> 00:35:40,339
because that continuity Travis we will

00:35:38,930 --> 00:35:42,230
do for you but it can orchestrate

00:35:40,339 --> 00:35:44,450
everything for you and then trigger a

00:35:42,230 --> 00:35:46,160
battery of tests against it and if you

00:35:44,450 --> 00:35:48,619
go to the next slide yeah and so in this

00:35:46,160 --> 00:35:50,809
case i'm using the B hat tool suite to

00:35:48,619 --> 00:35:51,890
do a very simple test and it's just

00:35:50,809 --> 00:35:53,630
checking to make sure that the home page

00:35:51,890 --> 00:35:55,519
still loads and has the right content on

00:35:53,630 --> 00:35:57,079
it and so this is the type of thing

00:35:55,519 --> 00:35:58,309
where you can add you know five or six

00:35:57,079 --> 00:36:00,950
of these and it would take you a matter

00:35:58,309 --> 00:36:02,569
of you know an hour or so the repo where

00:36:00,950 --> 00:36:03,740
I made all this is open you can for bit

00:36:02,569 --> 00:36:06,440
and hack it and kind of get your own

00:36:03,740 --> 00:36:08,210
version going and the point is that you

00:36:06,440 --> 00:36:11,839
don't need to start with automation as

00:36:08,210 --> 00:36:13,400
like a moonshot kind of Apollo style

00:36:11,839 --> 00:36:15,200
project you can start with something

00:36:13,400 --> 00:36:16,789
that tests the four or five most

00:36:15,200 --> 00:36:18,829
important things on your website and

00:36:16,789 --> 00:36:20,450
maybe does a little bit of linting and

00:36:18,829 --> 00:36:22,190
maybe does some other quick static

00:36:20,450 --> 00:36:23,480
analysis and just like let it run in the

00:36:22,190 --> 00:36:25,910
background every time you make a pull

00:36:23,480 --> 00:36:27,289
request and then I guarantee you is in

00:36:25,910 --> 00:36:27,750
the first week it could come back it's

00:36:27,289 --> 00:36:29,160
like whoops

00:36:27,750 --> 00:36:30,690
something failed and you just saved

00:36:29,160 --> 00:36:32,100
yourself like more time than you

00:36:30,690 --> 00:36:34,140
probably spent setting that up because

00:36:32,100 --> 00:36:35,700
you won't have to go back and reload the

00:36:34,140 --> 00:36:37,080
process of where you were in the project

00:36:35,700 --> 00:36:38,220
at the time you'll know right then and

00:36:37,080 --> 00:36:41,670
there that something was wrong and you

00:36:38,220 --> 00:36:43,980
have to fix it so this is the the

00:36:41,670 --> 00:36:46,410
structure of a B hat test in the written

00:36:43,980 --> 00:36:48,300
in the the gherkin syntax which is kind

00:36:46,410 --> 00:36:49,800
of like you know the home page title

00:36:48,300 --> 00:36:51,090
given that I've on the home page and I

00:36:49,800 --> 00:36:53,370
should see the home page title and this

00:36:51,090 --> 00:36:55,320
is time an example of how the syntax

00:36:53,370 --> 00:36:56,940
works and there's value of this a little

00:36:55,320 --> 00:36:59,430
bit I think because this is inherently

00:36:56,940 --> 00:37:01,230
very hackable right you know you're not

00:36:59,430 --> 00:37:02,430
really about capturing a business value

00:37:01,230 --> 00:37:03,960
than this type of language as melissa

00:37:02,430 --> 00:37:06,090
was talking about but if you have some

00:37:03,960 --> 00:37:07,770
tests in your repo like this it's super

00:37:06,090 --> 00:37:09,510
super easy for something to just copy it

00:37:07,770 --> 00:37:11,220
paste it and write another scenario

00:37:09,510 --> 00:37:13,080
that's also important and it can be a

00:37:11,220 --> 00:37:14,670
way to introduce this notion of testing

00:37:13,080 --> 00:37:16,860
you know you're going to tend yourself

00:37:14,670 --> 00:37:18,510
towards that exoskeleton style but it's

00:37:16,860 --> 00:37:21,330
a way to get started with a low barrier

00:37:18,510 --> 00:37:24,000
to entry and you don't need to do that

00:37:21,330 --> 00:37:26,430
though as a developer behavioral testing

00:37:24,000 --> 00:37:28,680
is actually that that whole that english

00:37:26,430 --> 00:37:30,930
language layer is an additional library

00:37:28,680 --> 00:37:32,880
on top of the core browser extracts from

00:37:30,930 --> 00:37:35,040
library which is called mink and this

00:37:32,880 --> 00:37:36,750
lets you just write tests directly in

00:37:35,040 --> 00:37:39,120
code kind of similar to how you might

00:37:36,750 --> 00:37:41,160
write a unit test except it's designs to

00:37:39,120 --> 00:37:42,450
be a behavioral tests and so for

00:37:41,160 --> 00:37:44,790
instance in this case it's like saying

00:37:42,450 --> 00:37:46,470
hey let's go ahead and like make sure

00:37:44,790 --> 00:37:48,240
that we can make notes and that's cool

00:37:46,470 --> 00:37:50,310
and if I had a website with 10 different

00:37:48,240 --> 00:37:52,560
node types I could rather than having

00:37:50,310 --> 00:37:54,360
ten instances of that have an array and

00:37:52,560 --> 00:37:56,880
iterate through ten things and then test

00:37:54,360 --> 00:37:58,020
my 10 nodes really easily as a developer

00:37:56,880 --> 00:38:00,060
to create that it gives you the ability

00:37:58,020 --> 00:38:03,060
to kind of rapidly create those sort of

00:38:00,060 --> 00:38:05,490
point inspection style behavioral tests

00:38:03,060 --> 00:38:07,230
that can provide value and kind of help

00:38:05,490 --> 00:38:08,400
you avoid regressions when you know

00:38:07,230 --> 00:38:09,960
you're working over here with this

00:38:08,400 --> 00:38:11,340
compute module but oh it did a hook

00:38:09,960 --> 00:38:12,360
venue that you weren't expecting and

00:38:11,340 --> 00:38:14,400
something else broken that you weren't

00:38:12,360 --> 00:38:15,840
actually looking directly at the other

00:38:14,400 --> 00:38:20,220
thing that you can do with mink that's

00:38:15,840 --> 00:38:22,170
really valuable yeah this is good is you

00:38:20,220 --> 00:38:24,840
can create your own behavioral

00:38:22,170 --> 00:38:26,430
definitions so gherkins I use the

00:38:24,840 --> 00:38:27,870
pickled gherkin because any picture of a

00:38:26,430 --> 00:38:31,470
pickle on its own is just an appropriate

00:38:27,870 --> 00:38:33,600
to it the slide you can create your own

00:38:31,470 --> 00:38:35,670
gherkins definitions which means that

00:38:33,600 --> 00:38:36,810
you can describe the behavior that is of

00:38:35,670 --> 00:38:39,150
value to

00:38:36,810 --> 00:38:40,770
your website and people can write and

00:38:39,150 --> 00:38:42,240
use those like your own verbs your own

00:38:40,770 --> 00:38:45,630
scenarios and that can actually have

00:38:42,240 --> 00:38:47,220
very complex a definitions in ink as to

00:38:45,630 --> 00:38:50,010
what all that means whose idea of

00:38:47,220 --> 00:38:51,600
scenario i'm alois game user could

00:38:50,010 --> 00:38:53,820
actually have a whole bunch of steps in

00:38:51,600 --> 00:38:56,100
their inmate but you don't burden the

00:38:53,820 --> 00:38:58,170
kind of front-end text written written

00:38:56,100 --> 00:39:00,540
sort of facing side of things with all

00:38:58,170 --> 00:39:02,820
the laborious didactic definition like

00:39:00,540 --> 00:39:05,400
that like that example that melissa show

00:39:02,820 --> 00:39:07,110
before and in fact the people who

00:39:05,400 --> 00:39:09,450
originally developed this style of

00:39:07,110 --> 00:39:11,160
testing and the sin taxes comes out of

00:39:09,450 --> 00:39:14,010
the Ruby community project cold cucumber

00:39:11,160 --> 00:39:17,280
they four years ago they've been at this

00:39:14,010 --> 00:39:20,010
for a while they decided to unilaterally

00:39:17,280 --> 00:39:22,260
and somewhat controversially remove all

00:39:20,010 --> 00:39:23,970
of the default step definitions from

00:39:22,260 --> 00:39:26,760
their library the library is called

00:39:23,970 --> 00:39:28,320
cucumber and they said what we're seeing

00:39:26,760 --> 00:39:29,640
if people are just writing these kind of

00:39:28,320 --> 00:39:31,320
stupid tests that don't really mean

00:39:29,640 --> 00:39:32,610
anything like as a pee person who wants

00:39:31,320 --> 00:39:34,290
to write a page i need to write a page

00:39:32,610 --> 00:39:36,420
so that there's a page that like is just

00:39:34,290 --> 00:39:37,710
the mobile least that's there's no

00:39:36,420 --> 00:39:40,140
meaning in that that's like completely

00:39:37,710 --> 00:39:41,550
senseless and so they said what we're

00:39:40,140 --> 00:39:43,320
going to do is we're gonna take away all

00:39:41,550 --> 00:39:45,630
of the things from the library that had

00:39:43,320 --> 00:39:47,490
that as I'm on this page I should see

00:39:45,630 --> 00:39:48,870
all these kind of inbuilt step

00:39:47,490 --> 00:39:50,160
definitions that had people have been

00:39:48,870 --> 00:39:52,260
using to create these somewhat useless

00:39:50,160 --> 00:39:53,310
test and like they're still available is

00:39:52,260 --> 00:39:55,470
another library that they called

00:39:53,310 --> 00:39:57,690
training wheels but their point was if

00:39:55,470 --> 00:39:58,860
that's what you want to test don't write

00:39:57,690 --> 00:40:00,720
it in english because it doesn't matter

00:39:58,860 --> 00:40:03,000
just write a quick like lower level code

00:40:00,720 --> 00:40:04,530
test think about what the things that

00:40:03,000 --> 00:40:06,300
you would write it would want to write

00:40:04,530 --> 00:40:08,460
in english and it's probably a small

00:40:06,300 --> 00:40:10,320
number of tests that might correspond

00:40:08,460 --> 00:40:12,060
with conversations you have with your

00:40:10,320 --> 00:40:14,010
stakeholders your client about what

00:40:12,060 --> 00:40:16,530
freakin purpose of the website is in the

00:40:14,010 --> 00:40:18,630
first place and then think about how you

00:40:16,530 --> 00:40:20,550
can write code that represents those

00:40:18,630 --> 00:40:23,760
things and you're building a much more

00:40:20,550 --> 00:40:25,410
flexible enduring value test system that

00:40:23,760 --> 00:40:27,240
you'll be able to continue using for a

00:40:25,410 --> 00:40:30,180
long time to come yeah if independence

00:40:27,240 --> 00:40:33,390
using the be had extension extension to

00:40:30,180 --> 00:40:35,670
be had the the dribble driver and the

00:40:33,390 --> 00:40:37,920
ability to interact with your drupal

00:40:35,670 --> 00:40:42,180
site using the API as part of this whole

00:40:37,920 --> 00:40:44,550
framework was separated from the core

00:40:42,180 --> 00:40:48,400
extension so that it exists on its own

00:40:44,550 --> 00:40:50,410
and it's actually possible for you to

00:40:48,400 --> 00:40:53,020
use the browser abstraction layer mink

00:40:50,410 --> 00:40:54,010
without using gherkin at all and the

00:40:53,020 --> 00:40:57,339
rule of thumb for when that's

00:40:54,010 --> 00:40:59,230
appropriate would be when your developer

00:40:57,339 --> 00:41:01,990
and you're checking on tests for

00:40:59,230 --> 00:41:04,029
yourself which is absolutely valid there

00:41:01,990 --> 00:41:05,920
are all sorts of things especially with

00:41:04,029 --> 00:41:08,920
that unique position or not unique but

00:41:05,920 --> 00:41:11,109
that particular position that Drupal is

00:41:08,920 --> 00:41:12,609
in where as a developer you do want to

00:41:11,109 --> 00:41:14,920
see that some things are working so that

00:41:12,609 --> 00:41:16,210
you have confidence but that's not a

00:41:14,920 --> 00:41:18,520
conversation that you're going to have

00:41:16,210 --> 00:41:20,529
with a stakeholder and that gherkin is

00:41:18,520 --> 00:41:22,809
there really about having stakeholder

00:41:20,529 --> 00:41:25,809
conversations in creating meaning so if

00:41:22,809 --> 00:41:28,510
you mix those two together you can deter

00:41:25,809 --> 00:41:30,579
from that portion of the the process

00:41:28,510 --> 00:41:33,460
that behavior driven development has and

00:41:30,579 --> 00:41:36,250
developers may choose to use those

00:41:33,460 --> 00:41:38,020
pre-built steps and go ahead and keep

00:41:36,250 --> 00:41:40,059
writing them because it's faster but

00:41:38,020 --> 00:41:41,650
they may also prefer just to write the

00:41:40,059 --> 00:41:43,119
code because it's a thing they need and

00:41:41,650 --> 00:41:44,319
they don't need the distraction of

00:41:43,119 --> 00:41:47,200
trying to figure out how to make

00:41:44,319 --> 00:41:49,660
something seem like it's meaningful from

00:41:47,200 --> 00:41:51,130
a client perspective when that's not why

00:41:49,660 --> 00:41:52,720
they're writing the task yeah you just

00:41:51,130 --> 00:41:54,940
make work for yourself if you're doing

00:41:52,720 --> 00:41:56,740
that so the point is you want to use

00:41:54,940 --> 00:41:58,359
mink as a browser abstraction layer is

00:41:56,740 --> 00:42:00,670
about to do a bunch of other fun things

00:41:58,359 --> 00:42:02,710
later but you don't need to use the

00:42:00,670 --> 00:42:06,160
language you can just write unit 10

00:42:02,710 --> 00:42:08,230
phpunit style invokes tests that use

00:42:06,160 --> 00:42:10,000
make to test the websites on the outside

00:42:08,230 --> 00:42:12,490
in which is again probably the only

00:42:10,000 --> 00:42:15,849
meaningful way to test a custom website

00:42:12,490 --> 00:42:18,760
built so that right this is awesome

00:42:15,849 --> 00:42:20,500
because now I know that my pull request

00:42:18,760 --> 00:42:22,119
to add the new login logic didn't break

00:42:20,500 --> 00:42:24,160
the homepage and I can feel much more

00:42:22,119 --> 00:42:25,960
like empowered about doing this type of

00:42:24,160 --> 00:42:28,089
development and as a developer I feel

00:42:25,960 --> 00:42:29,559
like you know I'm like I'm getting out

00:42:28,089 --> 00:42:31,000
of this world a flying blind I'm kind of

00:42:29,559 --> 00:42:32,559
getting my swagger back a little bit

00:42:31,000 --> 00:42:34,059
because if you have a good set of tests

00:42:32,559 --> 00:42:35,559
you can start like really going out

00:42:34,059 --> 00:42:37,029
there and get after it like you can take

00:42:35,559 --> 00:42:38,799
really aggressive changes and you can

00:42:37,029 --> 00:42:40,299
try to refactor whole systems and you

00:42:38,799 --> 00:42:41,920
got to get back into being lets you know

00:42:40,299 --> 00:42:43,750
people think cowboy coding is wrong but

00:42:41,920 --> 00:42:45,460
I kinda like you could be a cowboy and

00:42:43,750 --> 00:42:47,770
like go out there and run them down and

00:42:45,460 --> 00:42:49,029
rustle up and wash those bugs and why

00:42:47,770 --> 00:42:50,740
actually that's a good question why is

00:42:49,029 --> 00:42:53,289
it always cowboys and gone through stuff

00:42:50,740 --> 00:42:54,640
yeah that was part of as we were putting

00:42:53,289 --> 00:42:55,340
this together i was thinking about the

00:42:54,640 --> 00:42:57,380
imagery that

00:42:55,340 --> 00:42:58,520
with developers and I do think that part

00:42:57,380 --> 00:43:02,180
of it is just that self-perpetuating

00:42:58,520 --> 00:43:04,220
idea that developers are men and so we

00:43:02,180 --> 00:43:07,880
have a lot of male imagery about that

00:43:04,220 --> 00:43:10,510
but I also started to think about those

00:43:07,880 --> 00:43:13,310
Gilbert asked organizations and about

00:43:10,510 --> 00:43:15,530
communication dysfunction and I wonder

00:43:13,310 --> 00:43:19,340
if that imagery does not also come from

00:43:15,530 --> 00:43:20,870
a desire to be in control of things to

00:43:19,340 --> 00:43:23,090
be able to make things a certain that

00:43:20,870 --> 00:43:24,950
other people change and with cowboy

00:43:23,090 --> 00:43:27,590
imagery maybe just a little bit of

00:43:24,950 --> 00:43:29,300
giving up that idea of I don't need to

00:43:27,590 --> 00:43:32,390
be with the team I'm going to take my

00:43:29,300 --> 00:43:34,280
horse I'm going to go I'm going to camp

00:43:32,390 --> 00:43:37,640
I'm going to not necessarily have to

00:43:34,280 --> 00:43:39,200
deal with that and I think that metaphor

00:43:37,640 --> 00:43:41,600
is really important and how we think

00:43:39,200 --> 00:43:44,030
about the work that we do and I love the

00:43:41,600 --> 00:43:45,950
idea of automation being mechanical i

00:43:44,030 --> 00:43:48,770
think that the mechanical movement of

00:43:45,950 --> 00:43:51,680
code and configuration and database and

00:43:48,770 --> 00:43:53,570
server settings is great but i do think

00:43:51,680 --> 00:43:55,490
that we do a disservice when we think

00:43:53,570 --> 00:43:58,250
about the meaning and the creation of

00:43:55,490 --> 00:44:00,560
meaning in that same way so i am

00:43:58,250 --> 00:44:02,960
perfectly content to love a mechanical

00:44:00,560 --> 00:44:04,760
automation metaphor at the same time at

00:44:02,960 --> 00:44:06,590
websites that i work on are often much

00:44:04,760 --> 00:44:08,750
more like gardens that require planning

00:44:06,590 --> 00:44:11,180
you have to decide where you plant your

00:44:08,750 --> 00:44:12,800
things if when you live someplace with

00:44:11,180 --> 00:44:17,030
winter when the snow comes that deadline

00:44:12,800 --> 00:44:19,810
that one was real right and so I think

00:44:17,030 --> 00:44:22,670
there's a mismatch to between people who

00:44:19,810 --> 00:44:24,320
get those metaphors confused the thing

00:44:22,670 --> 00:44:27,140
that helps me the most about that garden

00:44:24,320 --> 00:44:29,710
metaphor is it reminds me that I can't

00:44:27,140 --> 00:44:32,600
make a plant grow not even at gunpoint

00:44:29,710 --> 00:44:34,490
so when I'm working on a project even

00:44:32,600 --> 00:44:36,950
though often it's my responsibility to

00:44:34,490 --> 00:44:39,050
see that things turn out on time what I

00:44:36,950 --> 00:44:42,110
need to do is create an environment that

00:44:39,050 --> 00:44:43,340
supports the growth or the production of

00:44:42,110 --> 00:44:47,300
the things that are supposed to happen

00:44:43,340 --> 00:44:50,810
and I can't force a developer to write

00:44:47,300 --> 00:44:52,370
code on time I can't force the client to

00:44:50,810 --> 00:44:54,590
give me the requirements when we thought

00:44:52,370 --> 00:44:56,510
we needed them so what I need to do with

00:44:54,590 --> 00:44:59,060
automation to support me and that whole

00:44:56,510 --> 00:45:02,860
mechanical backbone is to work on

00:44:59,060 --> 00:45:05,480
creating that more complex environment

00:45:02,860 --> 00:45:08,930
at the same time this country is just so

00:45:05,480 --> 00:45:10,280
freaking cool I get really

00:45:08,930 --> 00:45:11,900
about this stuff and I think that the

00:45:10,280 --> 00:45:13,160
that you all should be really excited

00:45:11,900 --> 00:45:14,809
about this stuff and I hope that you are

00:45:13,160 --> 00:45:18,410
really excited about this stuff because

00:45:14,809 --> 00:45:20,690
that enthusiasm the energy the hubris

00:45:18,410 --> 00:45:23,150
the delusion of thinking that we can

00:45:20,690 --> 00:45:25,910
actually make our lives better and make

00:45:23,150 --> 00:45:28,010
our work better is inherently necessary

00:45:25,910 --> 00:45:29,930
to advance our art and to advance our

00:45:28,010 --> 00:45:31,339
craft and this is a final example why

00:45:29,930 --> 00:45:32,839
you want to use that that mink thing

00:45:31,339 --> 00:45:34,670
rather than like curl or like the

00:45:32,839 --> 00:45:36,440
built-ins Wayne has like what's the most

00:45:34,670 --> 00:45:38,359
ditch digging thing you could ever do

00:45:36,440 --> 00:45:40,490
for testing cross-browser regression

00:45:38,359 --> 00:45:43,460
testing right that is the most like

00:45:40,490 --> 00:45:46,700
soul-crushing occupation and I feel like

00:45:43,460 --> 00:45:48,710
it's light on our the morality of our

00:45:46,700 --> 00:45:51,319
craft that we have forced human beings

00:45:48,710 --> 00:45:52,490
to do this in the past because don't

00:45:51,319 --> 00:45:54,230
really think about it like what is it

00:45:52,490 --> 00:45:56,329
reminds us and just like loading up

00:45:54,230 --> 00:45:58,190
different browsers and like having the

00:45:56,329 --> 00:46:00,319
two screens and then like writing the

00:45:58,190 --> 00:46:03,260
email and like doing the screenshot with

00:46:00,319 --> 00:46:05,089
the sickness that is like this beneath

00:46:03,260 --> 00:46:06,619
us as human beings we should not do that

00:46:05,089 --> 00:46:10,160
work that is not what we are designed to

00:46:06,619 --> 00:46:11,720
do we are here we are people and so you

00:46:10,160 --> 00:46:13,190
don't mean you've got it you've got a

00:46:11,720 --> 00:46:15,170
machine to do that for you you hook me

00:46:13,190 --> 00:46:16,549
up to like that selenium grid or browser

00:46:15,170 --> 00:46:17,750
stack and like the same test that you

00:46:16,549 --> 00:46:19,220
wrote that are running on your localhost

00:46:17,750 --> 00:46:20,780
that do this thing on every commit it

00:46:19,220 --> 00:46:22,220
can run across 70 different browsers it

00:46:20,780 --> 00:46:24,020
can test it in mobile they contested in

00:46:22,220 --> 00:46:25,790
Opera contested any like appear versions

00:46:24,020 --> 00:46:27,339
of ie 6 which never work and you can

00:46:25,790 --> 00:46:29,390
decide whether you care or not and

00:46:27,339 --> 00:46:31,130
that's where you want to get to and

00:46:29,390 --> 00:46:32,750
hopefully that's the idea of what

00:46:31,130 --> 00:46:35,210
appropriate automation can do for your

00:46:32,750 --> 00:46:36,380
project and we thank you guys for

00:46:35,210 --> 00:46:38,869
listening hopefully there's been some

00:46:36,380 --> 00:46:40,670
food for thought this is Melissa she

00:46:38,869 --> 00:46:42,140
works at a gwan and project managers and

00:46:40,670 --> 00:46:44,630
facilitate and does a bunch of amazing

00:46:42,140 --> 00:46:47,599
things and this is josh Coney so he's a

00:46:44,630 --> 00:46:49,520
co-founder of Pantheon and does all

00:46:47,599 --> 00:46:51,170
kinds of amazing things as well so

00:46:49,520 --> 00:46:53,030
you're going to be speaking again today

00:46:51,170 --> 00:46:54,890
is that right yeah about heads of stuff

00:46:53,030 --> 00:46:56,480
but which wanted to thank you for coming

00:46:54,890 --> 00:46:57,770
hope to this was at least intriguing and

00:46:56,480 --> 00:46:58,970
gets the bubbles percolating in your

00:46:57,770 --> 00:47:00,710
head and we're happy to answer any

00:46:58,970 --> 00:47:02,059
questions give any specifics you're

00:47:00,710 --> 00:47:04,160
interested in or technical stuff I can

00:47:02,059 --> 00:47:05,000
try to answer but thank you all for

00:47:04,160 --> 00:47:15,590
attending

00:47:05,000 --> 00:47:26,620
thank you if there are any questions is

00:47:15,590 --> 00:47:26,620
a microphone right now is it on

00:47:31,040 --> 00:47:37,619
so this without the evolution that they

00:47:35,250 --> 00:47:40,560
would like for instance because he

00:47:37,619 --> 00:47:44,190
lettered really broke a lot of the

00:47:40,560 --> 00:47:46,740
existing be next up at an onion seeing

00:47:44,190 --> 00:47:49,290
that like triple movie hasn't really

00:47:46,740 --> 00:47:52,320
quite caught up yet we had work around

00:47:49,290 --> 00:47:56,310
to some weird ruling things like auto

00:47:52,320 --> 00:47:58,349
the police that were to be back to that

00:47:56,310 --> 00:48:01,680
kind of really haven't even eaten come

00:47:58,349 --> 00:48:04,260
back and fix yet and i think that the

00:48:01,680 --> 00:48:07,140
wheels on the block for getting what for

00:48:04,260 --> 00:48:10,140
adoption is the wage Lupul does one

00:48:07,140 --> 00:48:15,089
thing needs to be more probably in the

00:48:10,140 --> 00:48:17,670
effort it looks really simple from the

00:48:15,089 --> 00:48:20,339
other thing that is really corner he's

00:48:17,670 --> 00:48:23,640
not a little bit about those i did say

00:48:20,339 --> 00:48:26,910
she had widespread adoption just started

00:48:23,640 --> 00:48:29,910
a little bit ago so i know what we did

00:48:26,910 --> 00:48:34,140
some work at bad camp with getting the

00:48:29,910 --> 00:48:37,470
drupal extension to be had to be more

00:48:34,140 --> 00:48:40,230
approachable but I don't know personally

00:48:37,470 --> 00:48:42,630
about what's happening if you can find

00:48:40,230 --> 00:48:45,210
Jonathan if he's here he would be a

00:48:42,630 --> 00:48:47,040
terrific person to talk to you about how

00:48:45,210 --> 00:48:50,070
some of those changes have impacted

00:48:47,040 --> 00:48:51,450
things Johnson hands from the other

00:48:50,070 --> 00:48:54,300
thing I'll say on this having spent of

00:48:51,450 --> 00:48:56,430
like an unfortunate number of hours

00:48:54,300 --> 00:48:57,839
going back and forth with various

00:48:56,430 --> 00:48:59,730
documentation and trying to figure out

00:48:57,839 --> 00:49:01,650
which was for which version of behalf I

00:48:59,730 --> 00:49:03,300
think B hat actually has this problem

00:49:01,650 --> 00:49:06,420
because they chose to do like a pretty

00:49:03,300 --> 00:49:07,950
drastic refactor there's like I think

00:49:06,420 --> 00:49:10,619
they're probably still more people out

00:49:07,950 --> 00:49:12,150
there using be hat 2.5 than there are

00:49:10,619 --> 00:49:14,400
using be hat three so it's kind of like

00:49:12,150 --> 00:49:16,170
we're in this larger ecosystem challenge

00:49:14,400 --> 00:49:17,609
but i will say that like the duplicates

00:49:16,170 --> 00:49:20,280
enter is a good example and we try to do

00:49:17,609 --> 00:49:21,720
more with like other working proofs of

00:49:20,280 --> 00:49:23,339
concept of how to do these things and

00:49:21,720 --> 00:49:26,339
that is the kind of the challenge for

00:49:23,339 --> 00:49:29,160
the community to come together on a set

00:49:26,339 --> 00:49:30,570
of easily replicable standard ways of

00:49:29,160 --> 00:49:33,240
solving our common problems rather than

00:49:30,570 --> 00:49:36,030
reinventing the wheel but we are I think

00:49:33,240 --> 00:49:38,400
unfortunately it's early days for us and

00:49:36,030 --> 00:49:40,349
so the wheel the first wheel is still

00:49:38,400 --> 00:49:41,880
probably being finished and that the

00:49:40,349 --> 00:49:43,410
troops of challenges will we recognize

00:49:41,880 --> 00:49:47,210
it as such when it's

00:49:43,410 --> 00:49:47,210
and not start a second one right away

00:49:47,869 --> 00:49:53,640
for the public groups that there will

00:49:50,490 --> 00:49:55,500
that work yeah oh yeah everybody is

00:49:53,640 --> 00:49:59,569
interested in this topic that's a great

00:49:55,500 --> 00:49:59,569
pleasure continue this conversation

00:50:01,460 --> 00:50:05,460
absolutely one thing i would add and

00:50:03,960 --> 00:50:08,640
this isn't specifically with

00:50:05,460 --> 00:50:12,000
autocompletes and testing those but it

00:50:08,640 --> 00:50:14,309
is part of the rationale behind the B

00:50:12,000 --> 00:50:15,990
hat moved to 3.0 was that there were

00:50:14,309 --> 00:50:18,480
several anti-patterns that had been

00:50:15,990 --> 00:50:20,809
introduced things like changing the

00:50:18,480 --> 00:50:23,400
English language steps definitions that

00:50:20,809 --> 00:50:24,630
they wanted to remove although you can

00:50:23,400 --> 00:50:27,150
still do that in you can kind of

00:50:24,630 --> 00:50:29,809
training wheels pull that back in that a

00:50:27,150 --> 00:50:33,180
lot of the pain of that change is

00:50:29,809 --> 00:50:40,260
actually forward-looking but yeah the

00:50:33,180 --> 00:50:42,650
lag there is you want to come up to the

00:50:40,260 --> 00:50:42,650
microphone

00:51:04,880 --> 00:51:10,650
so that's a in my five that's part of

00:51:08,190 --> 00:51:13,470
the you know the kid pointing at you so

00:51:10,650 --> 00:51:16,550
for company typically the way that will

00:51:13,470 --> 00:51:19,380
work is if you want to do a really full

00:51:16,550 --> 00:51:20,880
regression tense and you've got the test

00:51:19,380 --> 00:51:23,880
to do that what you're going to need to

00:51:20,880 --> 00:51:25,050
do is get your data and impossible all

00:51:23,880 --> 00:51:26,790
of it even though if you have a lot of

00:51:25,050 --> 00:51:28,500
day this might take some time from

00:51:26,790 --> 00:51:31,140
production into your representative

00:51:28,500 --> 00:51:34,200
testing environment and then you'll need

00:51:31,140 --> 00:51:35,790
to run depending on how you're doing the

00:51:34,200 --> 00:51:38,099
the Drupal development some people will

00:51:35,790 --> 00:51:42,690
build all of those steps into like an

00:51:38,099 --> 00:51:44,430
update dot PHP where there's a you know

00:51:42,690 --> 00:51:46,050
you can write have a custom module

00:51:44,430 --> 00:51:47,430
unlike update every release comes with

00:51:46,050 --> 00:51:49,290
an update that kind of will go through

00:51:47,430 --> 00:51:50,940
this desk or maybe you are really

00:51:49,290 --> 00:51:55,050
heavily into features and you just do a

00:51:50,940 --> 00:51:56,880
brush Fu and and run that and then show

00:51:55,050 --> 00:51:58,440
your test afterwards it sort of depends

00:51:56,880 --> 00:52:00,030
on exactly what you're building and I

00:51:58,440 --> 00:52:01,849
will say that if you're you know just

00:52:00,030 --> 00:52:04,260
getting started and still early days

00:52:01,849 --> 00:52:06,030
there's there's no there's no shame and

00:52:04,260 --> 00:52:08,010
necessarily like having a small amount

00:52:06,030 --> 00:52:09,510
of manual work to allow an automated

00:52:08,010 --> 00:52:11,130
tests to take place if you don't have

00:52:09,510 --> 00:52:12,599
all that scripted and but you can take

00:52:11,130 --> 00:52:14,190
two minutes to set it up and then let

00:52:12,599 --> 00:52:16,349
the tests run afterwards that's still

00:52:14,190 --> 00:52:20,119
better than doing all the tests by hands

00:52:16,349 --> 00:52:20,119
did that sort of answer your question

00:52:28,170 --> 00:52:33,759
because we just finish this project for

00:52:30,999 --> 00:52:37,410
reusable content element and process

00:52:33,759 --> 00:52:43,119
that was great and we're just doing

00:52:37,410 --> 00:52:45,549
Bailey old bastard and introduction and

00:52:43,119 --> 00:52:49,359
I work in an organization that's a

00:52:45,549 --> 00:52:57,789
private enterprise thinking we have to

00:52:49,359 --> 00:53:00,430
do is just a web site so we switch to

00:52:57,789 --> 00:53:03,130
get photos because we felt like we need

00:53:00,430 --> 00:53:18,400
the freedom to be able to keep learning

00:53:03,130 --> 00:53:23,410
toward west on the RAC that valid reason

00:53:18,400 --> 00:53:28,569
for making that switch or no no no so I

00:53:23,410 --> 00:53:30,220
guess I'm being a bit provocative when I

00:53:28,569 --> 00:53:31,569
said about get slow and what you're

00:53:30,220 --> 00:53:32,890
doing sounds like it makes a ton of

00:53:31,569 --> 00:53:34,749
sense to me I'll also do that what

00:53:32,890 --> 00:53:36,220
you're doing is about forty percent of

00:53:34,749 --> 00:53:38,589
what get flow tells you you need to do

00:53:36,220 --> 00:53:40,059
right din flow will explain that you

00:53:38,589 --> 00:53:41,769
should have actually for concurrent

00:53:40,059 --> 00:53:44,980
layers of work going on the same time

00:53:41,769 --> 00:53:46,960
which is I just don't actually really

00:53:44,980 --> 00:53:48,670
see website project meeting all that and

00:53:46,960 --> 00:53:50,440
so it sounds like you're using like the

00:53:48,670 --> 00:53:52,239
appropriate amount of branching and so

00:53:50,440 --> 00:53:54,160
forth and what I the reason why I make

00:53:52,239 --> 00:53:56,769
that comment and provocatively about

00:53:54,160 --> 00:53:58,599
gets loads I've seen projects go off the

00:53:56,769 --> 00:54:01,390
rails because they thought they needed

00:53:58,599 --> 00:54:02,920
to do all of this stuff every time and

00:54:01,390 --> 00:54:05,650
then there were clubbing homes very

00:54:02,920 --> 00:54:07,599
convoluted and the workflow project

00:54:05,650 --> 00:54:09,220
turns into a boondoggle that's taking up

00:54:07,599 --> 00:54:10,299
more time than the actual website so no

00:54:09,220 --> 00:54:12,390
I think you're doing exactly the right

00:54:10,299 --> 00:54:12,390
thing

00:54:56,240 --> 00:55:02,090
so how do you start how do you start

00:54:58,830 --> 00:55:05,100
from immortal and become a golden God I

00:55:02,090 --> 00:55:07,050
mean you might have some acai I actually

00:55:05,100 --> 00:55:09,720
would like to have Melissa answer that

00:55:07,050 --> 00:55:11,880
first because I do think that the social

00:55:09,720 --> 00:55:14,310
and cultural component of getting this

00:55:11,880 --> 00:55:16,110
right unless it's just view yourself the

00:55:14,310 --> 00:55:17,580
developer you got to get that right

00:55:16,110 --> 00:55:20,520
first otherwise you're inevitably you're

00:55:17,580 --> 00:55:23,150
going to run into a problem yeah so

00:55:20,520 --> 00:55:26,580
getting started with with the testing

00:55:23,150 --> 00:55:28,290
can begin at that that unit test level

00:55:26,580 --> 00:55:29,670
where you're running it as a developer

00:55:28,290 --> 00:55:32,070
and you don't even have it as part of

00:55:29,670 --> 00:55:33,930
your infrastructure dribble being not

00:55:32,070 --> 00:55:37,050
super unit testable until hopefully

00:55:33,930 --> 00:55:40,350
eight right and make that level

00:55:37,050 --> 00:55:42,150
challenging so getting set up even as a

00:55:40,350 --> 00:55:45,150
developer locally before you integrate

00:55:42,150 --> 00:55:48,030
into any kind of system the checks that

00:55:45,150 --> 00:55:50,460
you can do is actually a really great

00:55:48,030 --> 00:55:52,350
way to get that very first piece started

00:55:50,460 --> 00:55:54,690
and when we first introduced it when I

00:55:52,350 --> 00:55:56,910
was working at a company a few years ago

00:55:54,690 --> 00:56:00,510
now the developers were actually really

00:55:56,910 --> 00:56:02,220
excited so they had not had a QA that

00:56:00,510 --> 00:56:03,900
was one of the places where QA got in

00:56:02,220 --> 00:56:05,100
the way of developers being good at

00:56:03,900 --> 00:56:06,690
their stuff so they were supposed to

00:56:05,100 --> 00:56:09,990
take care of it themselves because that

00:56:06,690 --> 00:56:11,340
always works yeah and it didn't really

00:56:09,990 --> 00:56:13,050
work and there was a lot of tension

00:56:11,340 --> 00:56:14,730
between people who were demoing to

00:56:13,050 --> 00:56:17,430
client and products that weren't

00:56:14,730 --> 00:56:18,840
finished with the introduction of a tool

00:56:17,430 --> 00:56:21,090
that the developers felt comfortable

00:56:18,840 --> 00:56:22,860
with that would actually work against

00:56:21,090 --> 00:56:25,170
the things that they were doing even if

00:56:22,860 --> 00:56:27,000
it was that sort of brittle exoskeleton

00:56:25,170 --> 00:56:29,880
test and actually let them take

00:56:27,000 --> 00:56:32,700
responsibility for that work and they

00:56:29,880 --> 00:56:34,710
were really excited and that spread to

00:56:32,700 --> 00:56:37,260
an organizational level where they

00:56:34,710 --> 00:56:39,450
decided to go further and say all right

00:56:37,260 --> 00:56:41,130
well they were using dress make files

00:56:39,450 --> 00:56:44,340
and they had other kinds of automation

00:56:41,130 --> 00:56:46,140
and so they brought those together if

00:56:44,340 --> 00:56:48,840
that at all gets out I mean that's an

00:56:46,140 --> 00:56:51,090
example but having the conversations

00:56:48,840 --> 00:56:53,460
about what is the cost to your

00:56:51,090 --> 00:56:56,040
organization of the regressions that

00:56:53,460 --> 00:56:58,110
you're experiencing what's the cost of

00:56:56,040 --> 00:56:58,609
current difficulties and what problem

00:56:58,110 --> 00:57:00,680
you

00:56:58,609 --> 00:57:03,140
really trying to solve and how will you

00:57:00,680 --> 00:57:05,660
be able to tell if you solved it or the

00:57:03,140 --> 00:57:07,190
human side of saying okay we do have

00:57:05,660 --> 00:57:10,279
this problem we want to make it better

00:57:07,190 --> 00:57:12,109
let's try this and being willing to

00:57:10,279 --> 00:57:13,880
treat it as experimental as part of the

00:57:12,109 --> 00:57:16,369
organization in order to get started as

00:57:13,880 --> 00:57:18,769
well and how you're going to really

00:57:16,369 --> 00:57:20,869
implement that I think depends very much

00:57:18,769 --> 00:57:22,519
on what problem it is you're trying to

00:57:20,869 --> 00:57:24,440
solve with the automation is it didja

00:57:22,519 --> 00:57:26,329
taking is it regression like where is

00:57:24,440 --> 00:57:28,249
the pain point for the work that you're

00:57:26,329 --> 00:57:30,049
generally doing and if you can approach

00:57:28,249 --> 00:57:31,609
it from that aspect you can get buy-in

00:57:30,049 --> 00:57:33,920
and that's going to tell you which tools

00:57:31,609 --> 00:57:36,499
you should focus on and how to go from

00:57:33,920 --> 00:57:39,739
there I think that from a technical

00:57:36,499 --> 00:57:40,880
standpoint you just like come up with a

00:57:39,739 --> 00:57:42,529
list of all the things you could test

00:57:40,880 --> 00:57:43,910
and stack rank them based on how much

00:57:42,529 --> 00:57:45,559
work they are and how much value they

00:57:43,910 --> 00:57:46,940
provide and like one of the easiest

00:57:45,559 --> 00:57:48,230
things you can do you before you get

00:57:46,940 --> 00:57:50,269
into like a naval testing if you're not

00:57:48,230 --> 00:57:51,890
automatically linting your code after

00:57:50,269 --> 00:57:53,509
like that's like one of the quickest

00:57:51,890 --> 00:57:55,279
things you can do like a lot of people

00:57:53,509 --> 00:57:56,660
have that built in today they're using

00:57:55,279 --> 00:57:57,859
IDEs there's some amount of that but

00:57:56,660 --> 00:57:59,119
like there's rupal specific Lin thing

00:57:57,859 --> 00:58:01,160
you can do with like the coder module

00:57:59,119 --> 00:58:03,739
and other things and just like getting

00:58:01,160 --> 00:58:05,180
the immediate feedback from a system

00:58:03,739 --> 00:58:07,369
that I didn't have to set up and run

00:58:05,180 --> 00:58:09,470
after I was doing something and made a

00:58:07,369 --> 00:58:11,690
comment that told me oh you know I

00:58:09,470 --> 00:58:12,920
actually missed out this thing and I

00:58:11,690 --> 00:58:14,630
wouldn't have caught that until

00:58:12,920 --> 00:58:16,130
something else ran like things like that

00:58:14,630 --> 00:58:17,809
that actually start to get the

00:58:16,130 --> 00:58:19,579
developers on board of the process

00:58:17,809 --> 00:58:22,430
because it's saving them time and it's

00:58:19,579 --> 00:58:23,900
providing them value the that's the way

00:58:22,430 --> 00:58:25,400
that you can kind of build the momentum

00:58:23,900 --> 00:58:28,009
that'll eventually get you to a place

00:58:25,400 --> 00:58:29,480
where you feel very confident about your

00:58:28,009 --> 00:58:32,200
employments and you don't but it will

00:58:29,480 --> 00:58:34,789
take time right and the point is that

00:58:32,200 --> 00:58:36,799
it's a riskier thing if you try to do it

00:58:34,789 --> 00:58:37,759
as this kind of like a moonshot project

00:58:36,799 --> 00:58:39,799
where it's like we're going to do a

00:58:37,759 --> 00:58:40,789
six-month project to do testing it

00:58:39,799 --> 00:58:43,579
should be more like we're going to do a

00:58:40,789 --> 00:58:45,410
one week project to do some testing and

00:58:43,579 --> 00:58:46,880
then that's going to be good and then

00:58:45,410 --> 00:58:49,099
we'll do another one week project to do

00:58:46,880 --> 00:58:50,509
some more testing and over six months of

00:58:49,099 --> 00:58:52,039
doing this and feeling good about it

00:58:50,509 --> 00:58:54,489
every step of the way we'll work our way

00:58:52,039 --> 00:58:57,920
up the ladder to being very confident

00:58:54,489 --> 00:58:59,900
it's a process man yes and if you're

00:58:57,920 --> 00:59:01,970
starting in the middle right you're

00:58:59,900 --> 00:59:04,220
going to come full circle and the less

00:59:01,970 --> 00:59:05,090
you if you can do that full circle

00:59:04,220 --> 00:59:06,890
especially

00:59:05,090 --> 00:59:08,960
with the BFF testing where you're

00:59:06,890 --> 00:59:11,300
focusing on the stakeholder

00:59:08,960 --> 00:59:13,160
conversations if you start with getting

00:59:11,300 --> 00:59:14,840
some assurances in place and you come

00:59:13,160 --> 00:59:17,660
full circle you're going to see your

00:59:14,840 --> 00:59:19,160
tests at every phase of that cycle in a

00:59:17,660 --> 00:59:21,080
different light and that's something I

00:59:19,160 --> 00:59:23,900
didn't say that I kind of wish I had is

00:59:21,080 --> 00:59:25,400
that it's really important to realize

00:59:23,900 --> 00:59:28,160
that this automation the failures that

00:59:25,400 --> 00:59:29,480
you run into the most important thing

00:59:28,160 --> 00:59:31,520
about those failures is getting the

00:59:29,480 --> 00:59:33,680
right feedback to the right people with

00:59:31,520 --> 00:59:35,420
the power to fix the problem and if your

00:59:33,680 --> 00:59:37,250
test is failing because there are new

00:59:35,420 --> 00:59:39,500
business requirements and your code is

00:59:37,250 --> 00:59:41,720
fine and who keep getting information

00:59:39,500 --> 00:59:43,640
about that or you're testing values that

00:59:41,720 --> 00:59:45,620
are supposed to be changed in the

00:59:43,640 --> 00:59:47,510
interface and you're a developer and

00:59:45,620 --> 00:59:49,280
you're getting that feedback you're not

00:59:47,510 --> 00:59:51,080
really going to be interested in it and

00:59:49,280 --> 00:59:53,630
so another part of successfully

00:59:51,080 --> 00:59:56,420
automating is making sure that the right

00:59:53,630 --> 00:59:58,760
person knows and that you can make it

00:59:56,420 --> 01:00:00,800
move more swiftly rather than giving

00:59:58,760 --> 01:00:05,000
noise to people who are trying to do

01:00:00,800 --> 01:00:07,550
their jobs I think maybe I'm time for

01:00:05,000 --> 01:00:09,230
one more question and then I hear the

01:00:07,550 --> 01:00:11,830
music next door to try means be up that

01:00:09,230 --> 01:00:11,830
release you all

01:00:20,809 --> 01:00:25,410
yeah this is this is a big challenge

01:00:22,980 --> 01:00:27,329
especially where you know the the

01:00:25,410 --> 01:00:29,099
representative environment for testing

01:00:27,329 --> 01:00:30,569
is really key because as you don't get

01:00:29,099 --> 01:00:32,039
that good representative environment

01:00:30,569 --> 01:00:34,789
then you're testing is always going to

01:00:32,039 --> 01:00:37,859
be you know kind of sort of accurate and

01:00:34,789 --> 01:00:40,519
when you have third-party services and

01:00:37,859 --> 01:00:42,450
they don't have things like a sandbox or

01:00:40,519 --> 01:00:44,789
something that you can actually test

01:00:42,450 --> 01:00:47,339
against you have to get creative so one

01:00:44,789 --> 01:00:48,359
of the things that if you're tormented

01:00:47,339 --> 01:00:49,589
like especially like an API

01:00:48,359 --> 01:00:51,660
implementation or something like that

01:00:49,589 --> 01:00:53,640
one of the things that the techniques

01:00:51,660 --> 01:00:55,289
that are there they're best for this and

01:00:53,640 --> 01:00:57,960
the best service is out there will

01:00:55,289 --> 01:01:01,079
provide service for you is you you

01:00:57,960 --> 01:01:02,789
essentially mock the remote API and what

01:01:01,079 --> 01:01:04,049
that allows you to do is test it much

01:01:02,789 --> 01:01:05,039
faster because it actually happens in

01:01:04,049 --> 01:01:06,809
real time rather than over the network

01:01:05,039 --> 01:01:08,760
and you don't actually have to do or

01:01:06,809 --> 01:01:10,529
change anything we've got a bunch of

01:01:08,760 --> 01:01:12,059
this internally and it's a little bit of

01:01:10,529 --> 01:01:13,920
a process but it ends up working out now

01:01:12,059 --> 01:01:15,900
what that does mean is that your tests

01:01:13,920 --> 01:01:18,210
assume that the remote service is

01:01:15,900 --> 01:01:19,500
working and it hasn't changed that's

01:01:18,210 --> 01:01:21,000
something you have to kind of like find

01:01:19,500 --> 01:01:22,799
another way to manage but you can still

01:01:21,000 --> 01:01:24,150
do all those pieces you just have to

01:01:22,799 --> 01:01:25,950
create that that's the technical term

01:01:24,150 --> 01:01:26,940
you want to mock now so it's actually

01:01:25,950 --> 01:01:28,380
going to talk to something that's not

01:01:26,940 --> 01:01:30,089
really that API but it's going to

01:01:28,380 --> 01:01:31,859
respond the API would have with that

01:01:30,089 --> 01:01:33,180
data and that lets you test the full

01:01:31,859 --> 01:01:35,730
life cycle of the code that you're

01:01:33,180 --> 01:01:36,930
looking to implement I think that's all

01:01:35,730 --> 01:01:38,940
the time you got I'm you can't hang out

01:01:36,930 --> 01:01:40,349
and chat more later but will release the

01:01:38,940 --> 01:01:44,539
room thank you again for coming and

01:01:40,349 --> 01:01:44,539

YouTube URL: https://www.youtube.com/watch?v=0-gSanFc5kc


