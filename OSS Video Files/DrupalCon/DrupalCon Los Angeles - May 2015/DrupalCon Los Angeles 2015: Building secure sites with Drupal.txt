Title: DrupalCon Los Angeles 2015: Building secure sites with Drupal
Publication date: 2015-05-12
Playlist: DrupalCon Los Angeles - May 2015
Description: 
	Slides!

From large vulnerable corporations to cyber attacks causing physical damage, headlines are full with reports of data breaches, stolen Protected Health Information, ransom stories and IT system breaches. With its growing popularity, Drupal has become a perfect target for automated attacks. The recent SA-CORE-2014-005 vulnerability has demonstrated that hackers have learnt how to take advantage of Drupal’s functionality to infect a site and go unnoticed.

Site builders and site maintainers have a large role to play in preventing these kinds of disasters. Security doesn’t have to be a pain to implement and plan for. This session will help site builder and architects to have security in mind during site building and beyond. While configuring Drupal properly can plays a big part in keeping hackers at bay, it doesn’t depict the entire picture. In this session, we will also look at the rest of the stack to understand where the pitfalls are.

Key points:

Security outside Drupal: safe computing

What to do about weak passwords

How can the Drupal community help you to achieve optimal security

Common configuration mistakes that make you vulnerable, and ways to avoid them

The single most important security element: fast updates

Security improvements in Drupal 7 and Drupal 8
Captions: 
	00:00:00,000 --> 00:00:07,170
morning everybody you can do better than

00:00:03,419 --> 00:00:10,650
that morning everybody you're here to

00:00:07,170 --> 00:00:12,750
talk about security so welcome folks

00:00:10,650 --> 00:00:14,670
this is securing your Drupal site it's

00:00:12,750 --> 00:00:17,520
part of the site building track and is a

00:00:14,670 --> 00:00:18,930
beginner session so if you're relatively

00:00:17,520 --> 00:00:21,810
new to Drupal then this is a great way

00:00:18,930 --> 00:00:23,490
to start off your drupalcon in general

00:00:21,810 --> 00:00:26,070
security is you know perhaps a more

00:00:23,490 --> 00:00:28,740
advanced topic so we tried our best to

00:00:26,070 --> 00:00:31,109
align you know the topics that we're

00:00:28,740 --> 00:00:35,190
talking about with you know with that

00:00:31,109 --> 00:00:36,930
audience in mind we do have a whole

00:00:35,190 --> 00:00:38,190
bunch of slides on that slides online

00:00:36,930 --> 00:00:40,170
and they're full of a whole bunch of

00:00:38,190 --> 00:00:42,809
links so if URL is right there i

00:00:40,170 --> 00:00:46,230
encourage you to actually either now or

00:00:42,809 --> 00:00:48,000
later actually go to those slides and

00:00:46,230 --> 00:00:52,079
see all of the links that are from there

00:00:48,000 --> 00:00:54,300
so this is a advice for site builders in

00:00:52,079 --> 00:00:56,539
a little bit of coders I am Greg

00:00:54,300 --> 00:00:59,129
conedison I've been working with Drupal

00:00:56,539 --> 00:01:01,590
49 plus years now nine and a half years

00:00:59,129 --> 00:01:03,180
basically pretty interested in security

00:01:01,590 --> 00:01:05,489
that's a little bit of an understatement

00:01:03,180 --> 00:01:07,049
work on the dribble security team wrote

00:01:05,489 --> 00:01:09,780
a book cracking drivel about security

00:01:07,049 --> 00:01:11,640
and i work at card calm a mobile

00:01:09,780 --> 00:01:15,689
alternative to your traditional branch

00:01:11,640 --> 00:01:17,670
bank and of course we're hiring and my

00:01:15,689 --> 00:01:19,740
class I'm Michael Hess I've worked with

00:01:17,670 --> 00:01:22,140
Drupal a little less than Greg six-plus

00:01:19,740 --> 00:01:24,210
years I'm responsible for hosting around

00:01:22,140 --> 00:01:27,119
900 ish sites at the University of

00:01:24,210 --> 00:01:29,610
Michigan I work on a lot of a lot of

00:01:27,119 --> 00:01:31,470
heart large-scale health projects and I

00:01:29,610 --> 00:01:33,360
teach three classes on content

00:01:31,470 --> 00:01:38,250
management platforms which is basically

00:01:33,360 --> 00:01:39,900
Drupal WordPress example alrighty so

00:01:38,250 --> 00:01:41,850
lots of things to cover we're going to

00:01:39,900 --> 00:01:44,850
do our best to to you know there's a

00:01:41,850 --> 00:01:46,170
very broad area but we feel like the the

00:01:44,850 --> 00:01:47,880
best thing that we can do is just give

00:01:46,170 --> 00:01:50,159
you know quick touch on a lot of topics

00:01:47,880 --> 00:01:51,630
and pointers to resources so that if

00:01:50,159 --> 00:01:56,909
you're interested you can follow up in a

00:01:51,630 --> 00:01:58,979
specific area in the web world you know

00:01:56,909 --> 00:02:01,049
more broadly outside of just Drupal

00:01:58,979 --> 00:02:04,649
there's a the open web application

00:02:01,049 --> 00:02:06,990
security project and they they sort of

00:02:04,649 --> 00:02:08,759
take a broad view of all websites web

00:02:06,990 --> 00:02:11,220
services to see what are the biggest

00:02:08,759 --> 00:02:13,800
problems and every couple of years they

00:02:11,220 --> 00:02:16,580
publish their top ten list of you know

00:02:13,800 --> 00:02:18,720
most commonly exploited most dangerous

00:02:16,580 --> 00:02:20,790
issues that they feel people should

00:02:18,720 --> 00:02:23,480
really be putting attention on and so

00:02:20,790 --> 00:02:26,580
this is their list of the top ten items

00:02:23,480 --> 00:02:28,260
within the Drupal world I think that you

00:02:26,580 --> 00:02:29,940
know we we have we have to consider our

00:02:28,260 --> 00:02:32,220
context which is a little bit more

00:02:29,940 --> 00:02:34,830
focused on on a couple of different

00:02:32,220 --> 00:02:36,569
areas so we have some vulnerabilities

00:02:34,830 --> 00:02:38,310
that seem to come up more often in

00:02:36,569 --> 00:02:40,290
Drupal and you could either be

00:02:38,310 --> 00:02:42,690
optimistic and say that the framework

00:02:40,290 --> 00:02:44,459
gives us protection against certain

00:02:42,690 --> 00:02:45,540
classes of vulnerabilities and therefore

00:02:44,459 --> 00:02:47,459
we all have to worry as much about them

00:02:45,540 --> 00:02:48,989
or maybe you could be pessimistic about

00:02:47,459 --> 00:02:49,950
this and say that Drupal makes it really

00:02:48,989 --> 00:02:53,099
easy to make cross-site scripting

00:02:49,950 --> 00:02:55,800
attacks I take the optimistic view that

00:02:53,099 --> 00:02:57,390
Drupal's database API makes it really

00:02:55,800 --> 00:03:00,209
hard to create a sequel injection

00:02:57,390 --> 00:03:02,129
vulnerability and I think that that you

00:03:00,209 --> 00:03:04,050
know that is why we see that you know

00:03:02,129 --> 00:03:05,550
number one in the broader world is

00:03:04,050 --> 00:03:07,349
injection attacks such as sequel

00:03:05,550 --> 00:03:10,650
injection and yet in Drupal the

00:03:07,349 --> 00:03:13,200
frequency of that is much much lower so

00:03:10,650 --> 00:03:15,709
this information is all time data from

00:03:13,200 --> 00:03:18,239
2005 until I believe it's the fall of

00:03:15,709 --> 00:03:20,040
2014 looking at what are the most common

00:03:18,239 --> 00:03:21,870
vulnerabilities but I think it's also

00:03:20,040 --> 00:03:24,180
interesting to see how that's evolved

00:03:21,870 --> 00:03:27,030
over time so what you can see is that in

00:03:24,180 --> 00:03:28,769
2005 there actually a fifty percent of

00:03:27,030 --> 00:03:30,870
the issues were sequel injection and

00:03:28,769 --> 00:03:33,780
then that's really thinned out over the

00:03:30,870 --> 00:03:35,489
years and we have many many fewer sequel

00:03:33,780 --> 00:03:37,860
injection attacks these days than we did

00:03:35,489 --> 00:03:40,310
back then cross-site scripting has sort

00:03:37,860 --> 00:03:43,260
of been a persistent problem in in

00:03:40,310 --> 00:03:44,790
Drupal projects and I should have added

00:03:43,260 --> 00:03:47,940
this is data about contributed modules

00:03:44,790 --> 00:03:49,739
and core on drupal.org so it doesn't

00:03:47,940 --> 00:03:52,470
necessarily reflect what individual

00:03:49,739 --> 00:03:54,629
sites experience in custom code or

00:03:52,470 --> 00:03:56,640
custom themes but it does give I think a

00:03:54,629 --> 00:03:57,750
good sense of how common different kinds

00:03:56,640 --> 00:03:59,630
of vulnerabilities are and therefore

00:03:57,750 --> 00:04:02,840
what should we be focusing on

00:03:59,630 --> 00:04:05,000
as as developers and as site builders so

00:04:02,840 --> 00:04:07,310
we see that you know access bypass is

00:04:05,000 --> 00:04:08,780
kind of a growing type of problem that

00:04:07,310 --> 00:04:10,250
we've got in the dribble community it

00:04:08,780 --> 00:04:12,590
didn't happen so much back you know in

00:04:10,250 --> 00:04:14,290
2005 but it's been increasingly large

00:04:12,590 --> 00:04:16,940
percent of the issues that we deal with

00:04:14,290 --> 00:04:18,440
CSRF sort of started off with not that

00:04:16,940 --> 00:04:20,840
many issues and then we had more and

00:04:18,440 --> 00:04:23,090
more and I think again is tapering off

00:04:20,840 --> 00:04:29,660
and cross-site scripting is sort of

00:04:23,090 --> 00:04:32,000
still there and persistent so so why are

00:04:29,660 --> 00:04:33,590
we here today the FBI know cyber attacks

00:04:32,000 --> 00:04:36,860
are eclipsing terrorism is the primary

00:04:33,590 --> 00:04:38,390
threat facing the US which probably

00:04:36,860 --> 00:04:41,870
doesn't just apply to the US it probably

00:04:38,390 --> 00:04:43,700
applies much more broadly 75% of small

00:04:41,870 --> 00:04:44,690
businesses surveys reported cyber

00:04:43,700 --> 00:04:47,830
attacks and I'm going to go ahead and

00:04:44,690 --> 00:04:51,350
guess the other 25 percent didn't know

00:04:47,830 --> 00:04:54,590
and if you think about a single breach

00:04:51,350 --> 00:04:57,770
in 2010 that was reported there were 38

00:04:54,590 --> 00:05:01,790
terabytes of data stolen that's twice

00:04:57,770 --> 00:05:04,100
the size of the Library of Congress now

00:05:01,790 --> 00:05:05,810
what one organization has that's 38

00:05:04,100 --> 00:05:09,950
terabytes that can be stolen that that's

00:05:05,810 --> 00:05:11,480
a different story so everyone gets

00:05:09,950 --> 00:05:13,610
hacked and it must be trendy out of

00:05:11,480 --> 00:05:15,170
curiosity how many people in here show

00:05:13,610 --> 00:05:16,550
of hands who wants to admit I've had a

00:05:15,170 --> 00:05:18,410
site that's been compromised for one

00:05:16,550 --> 00:05:20,960
reason or another and I'll put my hand

00:05:18,410 --> 00:05:23,480
up I've had one too so it happens to

00:05:20,960 --> 00:05:24,860
everyone and what we're going to do

00:05:23,480 --> 00:05:26,720
today is we're going to talk about some

00:05:24,860 --> 00:05:30,950
of the ways in which hackers hacked

00:05:26,720 --> 00:05:33,980
sites and we're going to do it in the

00:05:30,950 --> 00:05:38,600
form of telling a story so it kind of

00:05:33,980 --> 00:05:40,910
sets context for what we're doing so

00:05:38,600 --> 00:05:42,650
these are real stories everything here

00:05:40,910 --> 00:05:44,720
actually happened but the details have

00:05:42,650 --> 00:05:46,760
been changed the organization names have

00:05:44,720 --> 00:05:48,920
been fictionalized so they read like

00:05:46,760 --> 00:05:52,550
works of fiction but they're based in

00:05:48,920 --> 00:05:56,810
truth so we're going to talk about the

00:05:52,550 --> 00:06:00,290
tale of the red ribbon hacker this is a

00:05:56,810 --> 00:06:02,480
tale about a shoe store run by a kind

00:06:00,290 --> 00:06:05,000
woman named Myrtle and from her online

00:06:02,480 --> 00:06:07,190
store shemales shoes around the entire

00:06:05,000 --> 00:06:09,200
world in each box that gets sent to

00:06:07,190 --> 00:06:09,500
people he's tied up in a little with a

00:06:09,200 --> 00:06:12,640
little

00:06:09,500 --> 00:06:14,480
ribbon like a box of candy Myrtle

00:06:12,640 --> 00:06:16,130
investigated how to set up her store

00:06:14,480 --> 00:06:17,960
before she did so and she wanted to be

00:06:16,130 --> 00:06:21,500
PCI compliant how many people know what

00:06:17,960 --> 00:06:25,730
PCI compliant is this is a beginner

00:06:21,500 --> 00:06:29,150
session so PCI compliance and I'm going

00:06:25,730 --> 00:06:30,680
to some ramen I'm gonna make this simple

00:06:29,150 --> 00:06:32,750
is basically the credit card

00:06:30,680 --> 00:06:35,980
organizations and organization of credit

00:06:32,750 --> 00:06:38,150
cards consortium of credit cards

00:06:35,980 --> 00:06:40,370
standards around data security

00:06:38,150 --> 00:06:42,470
specifically referring to cardholder

00:06:40,370 --> 00:06:44,300
data like the name the address the

00:06:42,470 --> 00:06:46,130
actual credit card number that little

00:06:44,300 --> 00:06:48,800
three or four digit code they make you

00:06:46,130 --> 00:06:51,050
enter the expiration date etc and what

00:06:48,800 --> 00:06:53,150
Myrtle did is she found someone else to

00:06:51,050 --> 00:06:55,370
take care of getting credit card numbers

00:06:53,150 --> 00:06:57,020
for her so she kind of out sourced her

00:06:55,370 --> 00:06:58,940
risk to a third-party so people went to

00:06:57,020 --> 00:07:00,050
her store they filled out their form

00:06:58,940 --> 00:07:01,760
when they went to pay they were

00:07:00,050 --> 00:07:03,230
redirected to another website they

00:07:01,760 --> 00:07:05,090
entered their payment information and

00:07:03,230 --> 00:07:08,510
then they came back to Myrtle site and

00:07:05,090 --> 00:07:11,900
got an order confirmation so she had

00:07:08,510 --> 00:07:15,530
nothing to worry about Myrtle shoe store

00:07:11,900 --> 00:07:19,040
was first launched on 2015 I'm sorry

00:07:15,530 --> 00:07:21,919
November 15 2012 the site received

00:07:19,040 --> 00:07:26,240
around 3,000 orders per month that's a

00:07:21,919 --> 00:07:27,800
lot of ribbons and on March 11th of 2013

00:07:26,240 --> 00:07:29,419
Myrtle noticed that the shoe store

00:07:27,800 --> 00:07:32,150
wasn't receiving any money into its

00:07:29,419 --> 00:07:33,560
account she went online placed an order

00:07:32,150 --> 00:07:35,390
and everything seemed to work like it

00:07:33,560 --> 00:07:41,090
should Myrtle was very confused what was

00:07:35,390 --> 00:07:43,610
happening to the money so upon

00:07:41,090 --> 00:07:45,950
investigating Myrtle noticed that the

00:07:43,610 --> 00:07:47,240
payment URL where people get redirected

00:07:45,950 --> 00:07:50,030
to when they enter their credit card

00:07:47,240 --> 00:07:52,100
information had been changed it wasn't

00:07:50,030 --> 00:07:54,850
pointing to the right payment URL was

00:07:52,100 --> 00:07:58,580
reporting to somebody else's bayman URL

00:07:54,850 --> 00:08:01,550
and if we dig into the IP addresses a

00:07:58,580 --> 00:08:03,350
little bit there was a post request on

00:08:01,550 --> 00:08:06,590
the page that's used to change this URL

00:08:03,350 --> 00:08:08,540
by someone at the company well Myrtle is

00:08:06,590 --> 00:08:08,830
the only person at the company she's the

00:08:08,540 --> 00:08:10,900
one

00:08:08,830 --> 00:08:12,850
shipping all the boxes so it had to have

00:08:10,900 --> 00:08:16,750
been her but she was very confused

00:08:12,850 --> 00:08:19,030
because she changed the URL someone had

00:08:16,750 --> 00:08:21,250
used a security vulnerability and uber

00:08:19,030 --> 00:08:24,360
cart and added JavaScript into a field

00:08:21,250 --> 00:08:26,500
that then ended up changing the URL

00:08:24,360 --> 00:08:28,750
normally that JavaScript would have been

00:08:26,500 --> 00:08:30,520
escaped but since the site did not get

00:08:28,750 --> 00:08:37,060
patched for a security vulnerability an

00:08:30,520 --> 00:08:38,680
uber cart the JavaScript executed so you

00:08:37,060 --> 00:08:40,870
know drawing from that one that specific

00:08:38,680 --> 00:08:44,140
instance in general what is cross site

00:08:40,870 --> 00:08:45,970
scripting it is code that's inside of

00:08:44,140 --> 00:08:47,680
the browser that instance was JavaScript

00:08:45,970 --> 00:08:48,850
but it can technically be other kinds of

00:08:47,680 --> 00:08:51,430
code that's running inside of the

00:08:48,850 --> 00:08:53,080
browser and it's making requests you

00:08:51,430 --> 00:08:54,310
know so it's doing post requests and not

00:08:53,080 --> 00:08:56,320
specific instance but they can be other

00:08:54,310 --> 00:08:58,570
kinds of requests and even multiple

00:08:56,320 --> 00:09:00,490
requests you know Java code can be doing

00:08:58,570 --> 00:09:04,240
multiple requests it can then parse the

00:09:00,490 --> 00:09:06,820
responses because it's able to get full

00:09:04,240 --> 00:09:08,170
access to the HTML to whatever content

00:09:06,820 --> 00:09:10,570
is coming back from the site because

00:09:08,170 --> 00:09:12,220
it's running inside of that site and you

00:09:10,570 --> 00:09:15,520
know as I said can be JavaScript flash

00:09:12,220 --> 00:09:17,260
Java even PDFs you know multiple

00:09:15,520 --> 00:09:20,770
different kinds of technologies have the

00:09:17,260 --> 00:09:22,840
ability to run script so this may sound

00:09:20,770 --> 00:09:25,120
familiar to you because it's commonly

00:09:22,840 --> 00:09:27,490
referred to you know as a positive

00:09:25,120 --> 00:09:30,130
technology by you know being JavaScript

00:09:27,490 --> 00:09:32,590
or like headless Drupal is all about

00:09:30,130 --> 00:09:33,700
using this same kind of technology the

00:09:32,590 --> 00:09:35,530
only difference is that when you're

00:09:33,700 --> 00:09:39,100
using it as a developer you know day to

00:09:35,530 --> 00:09:40,660
day or you know using it for your

00:09:39,100 --> 00:09:42,250
purposes you're you're trying to make

00:09:40,660 --> 00:09:43,780
your features of your sight better and

00:09:42,250 --> 00:09:45,790
richer for your customers the attacker

00:09:43,780 --> 00:09:47,620
is using it to change data in a

00:09:45,790 --> 00:09:51,280
malicious way to affect the security of

00:09:47,620 --> 00:09:54,100
your site in some way so if you're

00:09:51,280 --> 00:09:56,410
working with Drupal you know I say you

00:09:54,100 --> 00:09:58,090
know as we all are right the ways that i

00:09:56,410 --> 00:10:00,550
commonly test for cross-site scripting

00:09:58,090 --> 00:10:03,340
are to use basically these two little

00:10:00,550 --> 00:10:06,100
snippets and they're very basic

00:10:03,340 --> 00:10:08,710
JavaScript the you know difference

00:10:06,100 --> 00:10:11,350
between them is that you know the work

00:10:08,710 --> 00:10:13,030
in different areas and I tend to put

00:10:11,350 --> 00:10:15,460
them in you know I use an alert because

00:10:13,030 --> 00:10:15,800
if you see an alert it's hard to miss

00:10:15,460 --> 00:10:17,930
that

00:10:15,800 --> 00:10:20,540
act you know it's just popping up inside

00:10:17,930 --> 00:10:21,980
of your browser and I I put inside of it

00:10:20,540 --> 00:10:23,360
you know the word title if I'm in

00:10:21,980 --> 00:10:25,070
genting if I'm trying to inject it into

00:10:23,360 --> 00:10:26,510
a title field on a node or if I'm

00:10:25,070 --> 00:10:28,490
putting it into a body I'll use the word

00:10:26,510 --> 00:10:30,470
body and then as I'm browsing around the

00:10:28,490 --> 00:10:32,630
site and looking for that pop-up to show

00:10:30,470 --> 00:10:35,120
up if I see the word title inside of the

00:10:32,630 --> 00:10:37,279
alert I can know okay well this was from

00:10:35,120 --> 00:10:40,100
that title that I injected three pages

00:10:37,279 --> 00:10:41,630
ago perhaps and so that's that's really

00:10:40,100 --> 00:10:42,950
helpful this will catch you know

00:10:41,630 --> 00:10:44,959
approximately ninety percent this

00:10:42,950 --> 00:10:47,329
catches the majority of cross-site

00:10:44,959 --> 00:10:49,940
scripting issues in Drupal if both of

00:10:47,329 --> 00:10:51,560
these scripts do not execute you don't

00:10:49,940 --> 00:10:53,060
know that you're secure necessarily

00:10:51,560 --> 00:10:56,089
there are some other forms such as using

00:10:53,060 --> 00:10:57,529
iframes or other you know more advanced

00:10:56,089 --> 00:10:59,180
cross-site scripting attacks but

00:10:57,529 --> 00:11:01,160
Drupal's filtering mechanisms will

00:10:59,180 --> 00:11:02,690
filter out all of those if you have them

00:11:01,160 --> 00:11:06,500
configured correctly if your if your

00:11:02,690 --> 00:11:08,630
code is written correctly so what is the

00:11:06,500 --> 00:11:11,420
system that we use in Drupal for fixing

00:11:08,630 --> 00:11:13,730
cross-site scripting we say that we

00:11:11,420 --> 00:11:16,430
should be filtering text when its output

00:11:13,730 --> 00:11:18,410
to a browser and do it as late as is

00:11:16,430 --> 00:11:20,209
reasonable right so a lot of people have

00:11:18,410 --> 00:11:22,700
a a reaction while i'm just going to

00:11:20,209 --> 00:11:24,709
block this before it gets input but if

00:11:22,700 --> 00:11:26,690
your site needs to have some javascript

00:11:24,709 --> 00:11:28,459
inside of it in order for like drupal

00:11:26,690 --> 00:11:31,459
org has a lot of JavaScript sits there

00:11:28,459 --> 00:11:33,020
for tutorials for example blocking it

00:11:31,459 --> 00:11:35,270
while its input will mean that nobody

00:11:33,020 --> 00:11:37,160
can post that legitimate content and so

00:11:35,270 --> 00:11:39,380
Drupal takes the stance of block of

00:11:37,160 --> 00:11:42,410
filtering it in a context appropriate

00:11:39,380 --> 00:11:44,000
way as late as possible there's also you

00:11:42,410 --> 00:11:46,279
know as I mentioned the framework can

00:11:44,000 --> 00:11:49,880
provide benefits to us so when you do a

00:11:46,279 --> 00:11:52,220
Drupal set title the function Drupal set

00:11:49,880 --> 00:11:53,810
title in Drupal 7 will filter the text

00:11:52,220 --> 00:11:55,760
by default and just take care of the

00:11:53,810 --> 00:11:57,350
coordinate so that's an example where

00:11:55,760 --> 00:11:58,730
the framework can really support us and

00:11:57,350 --> 00:12:02,630
there's a couple of other examples like

00:11:58,730 --> 00:12:04,250
that if you're if you're you know

00:12:02,630 --> 00:12:06,050
writing some code there is this handy

00:12:04,250 --> 00:12:08,449
dandy cheat sheet about how to filter

00:12:06,050 --> 00:12:09,829
that out and that cheat sheet is linked

00:12:08,449 --> 00:12:10,250
to an article that talks about it in

00:12:09,829 --> 00:12:12,260
more debt

00:12:10,250 --> 00:12:17,180
so I encourage people who are writing

00:12:12,260 --> 00:12:20,180
code to follow up alrighty so our second

00:12:17,180 --> 00:12:22,250
story a site was getting a lot of spam

00:12:20,180 --> 00:12:25,130
reports and was getting blacklisted by

00:12:22,250 --> 00:12:26,030
some email you know email receiving

00:12:25,130 --> 00:12:28,970
hosts they were in some different

00:12:26,030 --> 00:12:30,080
blacklist related to sending bad emails

00:12:28,970 --> 00:12:31,670
and they were really confused by this

00:12:30,080 --> 00:12:33,110
you know they they went through all of

00:12:31,670 --> 00:12:35,240
their mail is and I said wow this person

00:12:33,110 --> 00:12:37,250
really opted in you know why are we why

00:12:35,240 --> 00:12:39,200
are we getting these these reports and

00:12:37,250 --> 00:12:41,120
they saw some of the emails that were

00:12:39,200 --> 00:12:42,860
getting bounced back to them and they

00:12:41,120 --> 00:12:44,600
said we didn't send this email this

00:12:42,860 --> 00:12:46,850
email is just straight-up spam this

00:12:44,600 --> 00:12:48,950
didn't come from us so you know they

00:12:46,850 --> 00:12:51,080
looked through their log files and

00:12:48,950 --> 00:12:53,660
noticed a large number of requests going

00:12:51,080 --> 00:12:55,940
to one specific URL from a specific IP

00:12:53,660 --> 00:12:59,300
and that made them looking to okay

00:12:55,940 --> 00:13:01,430
what's going on inside of that URL this

00:12:59,300 --> 00:13:03,110
was a memorial page on the site where

00:13:01,430 --> 00:13:05,810
people could post comments to that

00:13:03,110 --> 00:13:08,060
memorial and you know the comments were

00:13:05,810 --> 00:13:09,200
very simple they just had an input text

00:13:08,060 --> 00:13:10,820
box where you could type your comment

00:13:09,200 --> 00:13:13,790
and then the submit button very

00:13:10,820 --> 00:13:15,500
straightforward well they actually had a

00:13:13,790 --> 00:13:17,540
text format that was associated with

00:13:15,500 --> 00:13:18,800
that comment box and the text format you

00:13:17,540 --> 00:13:20,210
know they said oh we don't we don't

00:13:18,800 --> 00:13:23,270
really need text formats here so we'll

00:13:20,210 --> 00:13:25,070
just hide this with CSS but the CSS did

00:13:23,270 --> 00:13:27,260
not hide it from a bottom right so that

00:13:25,070 --> 00:13:30,410
the bot found the text formats that were

00:13:27,260 --> 00:13:34,460
available and one of the text formats

00:13:30,410 --> 00:13:36,589
was the PHP filter from Drupal and so

00:13:34,460 --> 00:13:37,880
the PHP filter had been configured the

00:13:36,589 --> 00:13:40,670
permissions for it have been configured

00:13:37,880 --> 00:13:42,680
to allow an anonymous user to post PHP

00:13:40,670 --> 00:13:46,100
code so somebody found that they turned

00:13:42,680 --> 00:13:48,260
off CSS and they injected a little bit

00:13:46,100 --> 00:13:50,420
of PHP that would run basically whatever

00:13:48,260 --> 00:13:54,650
they wanted and this particular attacker

00:13:50,420 --> 00:13:56,210
wanted to send a lot of spam emails so

00:13:54,650 --> 00:13:58,070
you know there's a couple interesting

00:13:56,210 --> 00:14:00,620
things there I think but this is an

00:13:58,070 --> 00:14:02,360
example of access bypass that has an

00:14:00,620 --> 00:14:04,430
access bypass vulnerability that's been

00:14:02,360 --> 00:14:05,120
introduced through the configuration of

00:14:04,430 --> 00:14:08,600
the permission

00:14:05,120 --> 00:14:10,400
on the site access bypass is when is

00:14:08,600 --> 00:14:13,040
somebody can see or do something that

00:14:10,400 --> 00:14:14,779
they shouldn't be able to and you know

00:14:13,040 --> 00:14:17,089
that their permissions or their access

00:14:14,779 --> 00:14:19,730
should be preventing and I think what

00:14:17,089 --> 00:14:22,070
makes access bypass so tricky is that we

00:14:19,730 --> 00:14:24,680
enforce it in a lot of different places

00:14:22,070 --> 00:14:26,690
so in that case it was a permission but

00:14:24,680 --> 00:14:28,520
it can also be about what knows you're

00:14:26,690 --> 00:14:30,950
showing to somebody and whether there

00:14:28,520 --> 00:14:33,680
whether that particular query for the

00:14:30,950 --> 00:14:35,450
nodes has the right tag on it in order

00:14:33,680 --> 00:14:37,370
to enforce the node access system

00:14:35,450 --> 00:14:39,020
whether you're using the node access

00:14:37,370 --> 00:14:42,650
function as built as you build up that

00:14:39,020 --> 00:14:45,980
list of content so this is just sort of

00:14:42,650 --> 00:14:47,810
a really really tricky thing to do in

00:14:45,980 --> 00:14:49,339
Drupal because it requires you to work

00:14:47,810 --> 00:14:52,730
on it at so many different layers of the

00:14:49,339 --> 00:14:56,420
system potentially so how do you test

00:14:52,730 --> 00:14:57,950
for access bypass basically you know my

00:14:56,420 --> 00:14:59,870
biggest recommendation is at any time

00:14:57,950 --> 00:15:01,850
you change the permissions page which

00:14:59,870 --> 00:15:03,620
you know for me is very daunting there's

00:15:01,850 --> 00:15:05,089
a lot of checkboxes there and I'm always

00:15:03,620 --> 00:15:07,400
worried like am I clicking in the right

00:15:05,089 --> 00:15:09,110
column by clicking on the right row so

00:15:07,400 --> 00:15:11,180
whenever you make changes to the

00:15:09,110 --> 00:15:12,890
permissions page always log in as a user

00:15:11,180 --> 00:15:14,870
that has all the different roles on your

00:15:12,890 --> 00:15:16,850
site and test out to make sure that they

00:15:14,870 --> 00:15:20,570
can and cannot do that you know what

00:15:16,850 --> 00:15:22,430
they should be able to do in terms of

00:15:20,570 --> 00:15:24,260
fixing it there's a lot of different

00:15:22,430 --> 00:15:26,209
functions that you can use one thing

00:15:24,260 --> 00:15:28,339
that I would recommend is to write

00:15:26,209 --> 00:15:29,540
automated tests there will be sessions

00:15:28,339 --> 00:15:31,820
later on during the conference about

00:15:29,540 --> 00:15:33,980
automated tests and you know it sounds I

00:15:31,820 --> 00:15:36,050
think a little daunting but increasingly

00:15:33,980 --> 00:15:39,260
automated tests using tools like B hat

00:15:36,050 --> 00:15:41,029
is very straightforward to do it's a

00:15:39,260 --> 00:15:42,980
natural language way to write tests and

00:15:41,029 --> 00:15:45,560
very straight forward to any for

00:15:42,980 --> 00:15:47,510
basically anybody to do and as I think a

00:15:45,560 --> 00:15:49,279
great way to ensure that you don't have

00:15:47,510 --> 00:15:50,540
to go through the manual QA process of

00:15:49,279 --> 00:15:54,089
clicking around and ensuring that people

00:15:50,540 --> 00:15:56,759
do or don't see what they should

00:15:54,089 --> 00:16:01,079
so we're going to go into another story

00:15:56,759 --> 00:16:02,999
and this one's a little different this

00:16:01,079 --> 00:16:04,620
is about Harper's LLC which is a small

00:16:02,999 --> 00:16:07,470
web development company in upstate New

00:16:04,620 --> 00:16:09,089
York and Harper's just assigned a brand

00:16:07,470 --> 00:16:10,379
new contract and was really excited to

00:16:09,089 --> 00:16:12,180
get started on a site and they

00:16:10,379 --> 00:16:13,769
provisioned a brand new domain and

00:16:12,180 --> 00:16:14,790
because they were still working on the

00:16:13,769 --> 00:16:16,259
site didn't want somebody find it by

00:16:14,790 --> 00:16:17,339
mistake they put the site maintenance

00:16:16,259 --> 00:16:22,079
mode how many people have done this

00:16:17,339 --> 00:16:25,410
before okay so the site was set up with

00:16:22,079 --> 00:16:27,600
a newly ordered domain name the sites

00:16:25,410 --> 00:16:29,699
modules and corn stall all up to date

00:16:27,600 --> 00:16:31,230
the site only had one admin account and

00:16:29,699 --> 00:16:34,949
the site was developed on a dedicated

00:16:31,230 --> 00:16:39,120
server just for Harper's LLC's customers

00:16:34,949 --> 00:16:40,980
and the site got hacked and that was

00:16:39,120 --> 00:16:42,899
strange does no one really knew how how

00:16:40,980 --> 00:16:45,899
it got hacked it was brand news just put

00:16:42,899 --> 00:16:47,579
online and so if we dig into how it

00:16:45,899 --> 00:16:48,990
began on the third day of developing the

00:16:47,579 --> 00:16:50,490
site the content manager was going to go

00:16:48,990 --> 00:16:52,559
in there and he set up the content types

00:16:50,490 --> 00:16:55,889
which I'm sure we've all set up content

00:16:52,559 --> 00:16:58,290
types and he stopped in horror on the

00:16:55,889 --> 00:17:03,209
front page because there was viagra spam

00:16:58,290 --> 00:17:05,159
all over the front page and he was

00:17:03,209 --> 00:17:07,470
really not a happy camper at this point

00:17:05,159 --> 00:17:11,640
it was a brand new site and now it's too

00:17:07,470 --> 00:17:14,279
faced with viagra spam so he called his

00:17:11,640 --> 00:17:15,720
in-house IT person and they began

00:17:14,279 --> 00:17:18,380
looking through the logs together to try

00:17:15,720 --> 00:17:21,990
to figure out how the site actually got

00:17:18,380 --> 00:17:24,929
compromised they pulled up the logs for

00:17:21,990 --> 00:17:26,789
the site and they found only known and

00:17:24,929 --> 00:17:29,490
trusted IP addresses it accessed the

00:17:26,789 --> 00:17:32,909
site that is only computers inside their

00:17:29,490 --> 00:17:34,950
office and acts as the site so the IT

00:17:32,909 --> 00:17:36,590
person did what most IT people would do

00:17:34,950 --> 00:17:39,870
at this point she assumed that the

00:17:36,590 --> 00:17:41,460
internal computers must be have malware

00:17:39,870 --> 00:17:44,960
on them so she ran a virus scan on those

00:17:41,460 --> 00:17:48,299
computers the virus scan was clean so

00:17:44,960 --> 00:17:52,500
she just restored from backup and set

00:17:48,299 --> 00:17:54,270
the content manager back along but two

00:17:52,500 --> 00:17:55,890
days later the site cut compromised

00:17:54,270 --> 00:17:59,380
again

00:17:55,890 --> 00:18:01,210
so what happened here actually has to do

00:17:59,380 --> 00:18:03,820
with their server configuration it's not

00:18:01,210 --> 00:18:05,740
really part of Drupal and that it's

00:18:03,820 --> 00:18:07,660
nothing you configure inside the Drupal

00:18:05,740 --> 00:18:10,930
interface it's not inside of a settings

00:18:07,660 --> 00:18:12,520
that PHP file but it's just as important

00:18:10,930 --> 00:18:14,380
to securing your Drupal instance to

00:18:12,520 --> 00:18:16,270
secure the components that host your

00:18:14,380 --> 00:18:19,780
Drupal instance in this case it was

00:18:16,270 --> 00:18:21,270
Apache and what had happened is that

00:18:19,780 --> 00:18:24,820
this site was hosting multiple sites

00:18:21,270 --> 00:18:27,550
Apache has access to read all the files

00:18:24,820 --> 00:18:29,530
on the file system that it hosts and so

00:18:27,550 --> 00:18:32,680
someone had actually compromised another

00:18:29,530 --> 00:18:34,690
site on the server and using the site

00:18:32,680 --> 00:18:36,250
that they had compromised they looked

00:18:34,690 --> 00:18:38,740
through the file system and found all

00:18:36,250 --> 00:18:40,420
instances of settings at PHP and were

00:18:38,740 --> 00:18:43,120
able to connect to the Drupal database

00:18:40,420 --> 00:18:44,950
directly and then inject spam by

00:18:43,120 --> 00:18:46,600
updating the table the node table in

00:18:44,950 --> 00:18:48,910
this instance in the node revisions

00:18:46,600 --> 00:18:51,040
table and the field tables directly and

00:18:48,910 --> 00:18:56,050
they did this for WordPress sites as

00:18:51,040 --> 00:18:58,450
well so we don't have time to like talk

00:18:56,050 --> 00:19:00,730
about server configuration here it's a

00:18:58,450 --> 00:19:02,440
long complex session and there's going

00:19:00,730 --> 00:19:04,390
to be lots of other sessions on it

00:19:02,440 --> 00:19:07,330
throughout this con I suggest you go to

00:19:04,390 --> 00:19:12,820
them you look like you're about to say

00:19:07,330 --> 00:19:14,590
something um so you know I would go and

00:19:12,820 --> 00:19:16,270
look at how your servers are configured

00:19:14,590 --> 00:19:18,700
but if you're hosting your own server

00:19:16,270 --> 00:19:20,740
and you've just installed like a red hat

00:19:18,700 --> 00:19:22,570
or a sin toss or in a bun to server and

00:19:20,740 --> 00:19:23,980
you've got multiple sites on it it's

00:19:22,570 --> 00:19:27,790
they're probably vulnerable to this

00:19:23,980 --> 00:19:30,460
problem there are some Drupal specific

00:19:27,790 --> 00:19:32,380
hosting services out there and I don't

00:19:30,460 --> 00:19:33,910
want to name names here you can look

00:19:32,380 --> 00:19:35,710
around some of the sponsors and see some

00:19:33,910 --> 00:19:37,420
of the names you can go to some sessions

00:19:35,710 --> 00:19:38,560
you can do a Google search or you can

00:19:37,420 --> 00:19:40,720
click on the link in these slides

00:19:38,560 --> 00:19:43,630
labeled Drupal hosts and it'll take you

00:19:40,720 --> 00:19:45,460
to a list of hosts on drupal.org but can

00:19:43,630 --> 00:19:47,860
your hosting provider help you improve

00:19:45,460 --> 00:19:50,530
your security process has your hosting

00:19:47,860 --> 00:19:54,400
provider whoever they are tuned their

00:19:50,530 --> 00:19:56,110
environment for Drupal specifically do

00:19:54,400 --> 00:19:58,030
they have a mechanism to do managed

00:19:56,110 --> 00:19:59,470
security updates for you can they help

00:19:58,030 --> 00:20:00,980
you with that we'll get into security

00:19:59,470 --> 00:20:04,100
updates a little later on

00:20:00,980 --> 00:20:07,130
so let's change topics for a second how

00:20:04,100 --> 00:20:08,919
many people brush your teeth how many

00:20:07,130 --> 00:20:10,760
people brush their teeth this morning

00:20:08,919 --> 00:20:13,130
how many people brush their teeth

00:20:10,760 --> 00:20:15,880
yesterday how do people go to the

00:20:13,130 --> 00:20:19,160
dentist so it's pretty much all of you

00:20:15,880 --> 00:20:21,380
why why do you brush your teeth like it

00:20:19,160 --> 00:20:23,330
takes like three minutes maybe two or

00:20:21,380 --> 00:20:25,580
one if you're in a rush like why do you

00:20:23,330 --> 00:20:27,110
brush your teeth brushing your teeth is

00:20:25,580 --> 00:20:28,790
a best practice you brush your teeth

00:20:27,110 --> 00:20:34,240
because well if you don't brush your

00:20:28,790 --> 00:20:36,410
teeth really bad things can happen so

00:20:34,240 --> 00:20:37,850
everyone gets up and they take the five

00:20:36,410 --> 00:20:40,040
minutes to brush their teeth because

00:20:37,850 --> 00:20:42,380
having to deal with getting your teeth

00:20:40,040 --> 00:20:44,000
infected I'm not a dentist like that's a

00:20:42,380 --> 00:20:46,010
lot more time it's a lot more time

00:20:44,000 --> 00:20:49,690
consuming it's painful in this case it's

00:20:46,010 --> 00:20:53,270
literally painful even to look at

00:20:49,690 --> 00:20:55,730
securities of best practice so it's I'm

00:20:53,270 --> 00:20:57,590
sorry security is a process it's not

00:20:55,730 --> 00:20:59,299
like a checklist that you just check off

00:20:57,590 --> 00:21:00,799
and you're done it's like brushing your

00:20:59,299 --> 00:21:04,370
teeth you've got to do a little of it

00:21:00,799 --> 00:21:07,280
every day so you should have a process

00:21:04,370 --> 00:21:08,780
surrounding your security when you make

00:21:07,280 --> 00:21:10,460
changes on your site you should be

00:21:08,780 --> 00:21:12,049
thinking through how are these changes

00:21:10,460 --> 00:21:14,000
that I'm making going to impact the

00:21:12,049 --> 00:21:15,530
security of my sight oh I found a really

00:21:14,000 --> 00:21:18,049
cool module that I'm going to install

00:21:15,530 --> 00:21:19,340
well should i install the module how

00:21:18,049 --> 00:21:21,919
many permissions is it going to add one

00:21:19,340 --> 00:21:23,570
type of complexity does it require you

00:21:21,919 --> 00:21:25,580
should have a budget for security

00:21:23,570 --> 00:21:28,669
budgeting in terms of money but also in

00:21:25,580 --> 00:21:30,380
terms of time it's time-consuming but in

00:21:28,669 --> 00:21:31,910
the end it's worth it because you don't

00:21:30,380 --> 00:21:35,750
want your site to have a variation of

00:21:31,910 --> 00:21:39,320
that you should also think through what

00:21:35,750 --> 00:21:41,960
your risk level is so if you're a blog

00:21:39,320 --> 00:21:44,210
your blog is likely to be compromised

00:21:41,960 --> 00:21:46,600
for spam purposes someone doesn't really

00:21:44,210 --> 00:21:49,370
care about your blog itself I'm sorry

00:21:46,600 --> 00:21:52,040
they just don't they want to use your

00:21:49,370 --> 00:21:54,440
blog to either send spam or host spam or

00:21:52,040 --> 00:21:57,140
do link referrals within Google for SEO

00:21:54,440 --> 00:21:59,120
but if you're a complex site you might

00:21:57,140 --> 00:22:02,960
be compromised because the date of your

00:21:59,120 --> 00:22:05,120
complex site has so if you're a bank or

00:22:02,960 --> 00:22:07,460
your Amazon where you've got people's

00:22:05,120 --> 00:22:09,230
personal information people are probably

00:22:07,460 --> 00:22:10,669
going to try to compromise you to send

00:22:09,230 --> 00:22:14,750
BAM they're going to compromise you to

00:22:10,669 --> 00:22:18,260
download your database security is a

00:22:14,750 --> 00:22:20,450
balance so each site needs to spend time

00:22:18,260 --> 00:22:22,820
working on security some sites may need

00:22:20,450 --> 00:22:24,620
to spend more time on it and you should

00:22:22,820 --> 00:22:27,230
know if your site's a target based on

00:22:24,620 --> 00:22:29,740
the information it has how many people

00:22:27,230 --> 00:22:34,070
recognize some of these abbreviations

00:22:29,740 --> 00:22:35,330
well X Y Z is probably not an

00:22:34,070 --> 00:22:38,480
abbreviation you're going to recognize

00:22:35,330 --> 00:22:40,790
but there are certain laws that may be

00:22:38,480 --> 00:22:42,620
surrounding data you have if you are

00:22:40,790 --> 00:22:44,510
collecting health care information for

00:22:42,620 --> 00:22:47,660
example if you're dealing with the

00:22:44,510 --> 00:22:50,030
federal government then you have certain

00:22:47,660 --> 00:22:52,730
legal requirements that are going to be

00:22:50,030 --> 00:22:54,470
forced upon you that are going to change

00:22:52,730 --> 00:22:55,970
the security profile of your site and

00:22:54,470 --> 00:22:59,660
change some of the things you might have

00:22:55,970 --> 00:23:00,799
to do if you happen to be working in

00:22:59,660 --> 00:23:03,470
commerce how many people are selling

00:23:00,799 --> 00:23:05,929
something on Drupal out of curiosity so

00:23:03,470 --> 00:23:08,059
you are likely responsible for PCI

00:23:05,929 --> 00:23:10,040
compliance in some way we have a

00:23:08,059 --> 00:23:11,660
wonderful community written PCI

00:23:10,040 --> 00:23:14,120
compliant report I don't know who would

00:23:11,660 --> 00:23:15,950
have written that or helped right it was

00:23:14,120 --> 00:23:19,669
a team effort but one of the authors is

00:23:15,950 --> 00:23:23,990
up here that talks about how to get

00:23:19,669 --> 00:23:26,419
Drupal's PCI compliant and some of the

00:23:23,990 --> 00:23:28,700
steps involved in doing that so speaking

00:23:26,419 --> 00:23:31,760
of Drupal and security drupal actually

00:23:28,700 --> 00:23:33,559
has a dedicated security team we

00:23:31,760 --> 00:23:37,100
actually have our own dedicated security

00:23:33,559 --> 00:23:39,440
team that kind of helps keep drupal

00:23:37,100 --> 00:23:43,990
secure it helps keep drupal going in the

00:23:39,440 --> 00:23:43,990
right direction as far as modules and

00:23:44,590 --> 00:23:48,919
contribute and core so what do we do we

00:23:47,270 --> 00:23:50,450
first of all we educate the community on

00:23:48,919 --> 00:23:54,290
security best practices that's what's

00:23:50,450 --> 00:23:56,510
happening here we also write security

00:23:54,290 --> 00:23:59,120
advisories for every security release of

00:23:56,510 --> 00:24:01,500
a module or contribute the security

00:23:59,120 --> 00:24:03,600
advisories

00:24:01,500 --> 00:24:05,160
hell maybe how many people don't know

00:24:03,600 --> 00:24:07,470
how many people don't know let's do that

00:24:05,160 --> 00:24:12,720
one okay so we're going to find out more

00:24:07,470 --> 00:24:14,340
about that so i would suggest for those

00:24:12,720 --> 00:24:17,070
who don't know that you actually follow

00:24:14,340 --> 00:24:18,720
the drupal security team we have lots of

00:24:17,070 --> 00:24:20,400
ways for you to follow us Greg mentioned

00:24:18,720 --> 00:24:23,250
our twitter account that's Drupal

00:24:20,400 --> 00:24:27,210
security no underscore no space on

00:24:23,250 --> 00:24:29,430
Twitter you can do it the email on the

00:24:27,210 --> 00:24:31,500
on your User Profile if you edit it then

00:24:29,430 --> 00:24:34,560
go to newsletters you can subscribe to

00:24:31,500 --> 00:24:36,690
the newsletter which is emails on

00:24:34,560 --> 00:24:39,300
Wednesday or you can go on the web at

00:24:36,690 --> 00:24:41,340
the URLs provided there's also RSS feeds

00:24:39,300 --> 00:24:45,630
on those page pages if that's what you

00:24:41,340 --> 00:24:47,880
like so what does the security team do

00:24:45,630 --> 00:24:51,450
well the primary visible thing that we

00:24:47,880 --> 00:24:54,210
do is if you find a security issue in

00:24:51,450 --> 00:24:56,490
Drupal you report it to us and we work

00:24:54,210 --> 00:24:58,230
with the author of that code to fix the

00:24:56,490 --> 00:25:00,330
security issue we test to make sure the

00:24:58,230 --> 00:25:02,670
issue is fixed and then we help release

00:25:00,330 --> 00:25:06,060
a security advisory and release the

00:25:02,670 --> 00:25:08,790
update and a coordinated release and of

00:25:06,060 --> 00:25:10,500
course the number one easiest thing you

00:25:08,790 --> 00:25:13,290
can do to keep your site secure the

00:25:10,500 --> 00:25:16,890
easiest step you can do is keep your

00:25:13,290 --> 00:25:19,200
site updated that's the easiest step you

00:25:16,890 --> 00:25:22,110
can take just keep your site updated we

00:25:19,200 --> 00:25:25,740
typically release security advisories

00:25:22,110 --> 00:25:27,450
and code on Wednesdays you'll get emails

00:25:25,740 --> 00:25:30,360
on Wednesdays about them or tweets if

00:25:27,450 --> 00:25:36,330
that's how you're following and keep

00:25:30,360 --> 00:25:39,570
your site updated alrighty so from a

00:25:36,330 --> 00:25:42,090
site builder perspective the most common

00:25:39,570 --> 00:25:44,610
places that people make mistakes I would

00:25:42,090 --> 00:25:47,700
say well you know something that we all

00:25:44,610 --> 00:25:49,650
hear about passwords right insecure

00:25:47,700 --> 00:25:51,420
passwords in particular weak passwords

00:25:49,650 --> 00:25:53,520
reusing passwords across multiple sites

00:25:51,420 --> 00:25:56,190
those are that's one of the most common

00:25:53,520 --> 00:25:58,530
ways that sites actually get hacked we

00:25:56,190 --> 00:26:00,300
didn't have a story about it today I we

00:25:58,530 --> 00:26:02,490
do have some stories you know that we've

00:26:00,300 --> 00:26:04,440
experienced that involve passwords and

00:26:02,490 --> 00:26:07,140
it is a surprisingly common way that

00:26:04,440 --> 00:26:09,180
people get into a site also sessions so

00:26:07,140 --> 00:26:09,929
if your site is not over HTTPS and

00:26:09,180 --> 00:26:12,210
you're

00:26:09,929 --> 00:26:13,980
using it on Wi-Fi that's not secure

00:26:12,210 --> 00:26:16,350
sniffing sessions is a you know a

00:26:13,980 --> 00:26:18,149
problem people need to worry about next

00:26:16,350 --> 00:26:19,799
big one is roles and permissions so that

00:26:18,149 --> 00:26:21,360
was the PHP issue that I was talking

00:26:19,799 --> 00:26:23,279
about it had to do with how the

00:26:21,360 --> 00:26:25,049
permissions were configured on that site

00:26:23,279 --> 00:26:27,600
and I think it's a really easy way to

00:26:25,049 --> 00:26:29,789
introduce mistakes is just making you

00:26:27,600 --> 00:26:32,759
know 11 wrong checkbox can ruin a day

00:26:29,789 --> 00:26:34,649
right and then keeping you know broadly

00:26:32,759 --> 00:26:36,539
more broadly keeping the site settings

00:26:34,649 --> 00:26:38,100
secure so what are the text input

00:26:36,539 --> 00:26:39,600
formats that you've got go figure and

00:26:38,100 --> 00:26:42,659
what are the tags that are available

00:26:39,600 --> 00:26:44,490
inside of that you know I think as

00:26:42,659 --> 00:26:47,100
you're going through the site it's it's

00:26:44,490 --> 00:26:49,379
a you know can be very easy you're under

00:26:47,100 --> 00:26:51,990
pressure to get some new feature out you

00:26:49,379 --> 00:26:53,759
know your boss or your your client is

00:26:51,990 --> 00:26:55,139
saying oh you know we really need this

00:26:53,759 --> 00:26:57,090
feature could you just get out there and

00:26:55,139 --> 00:26:58,740
you're feeling frustrated and you just

00:26:57,090 --> 00:27:00,749
enable all of the stuff then it's like

00:26:58,740 --> 00:27:02,639
oh it works great I'm gonna you know

00:27:00,749 --> 00:27:04,379
close up for the day and you never think

00:27:02,639 --> 00:27:06,419
about well did all those configurations

00:27:04,379 --> 00:27:08,820
I just did in the last hour of flailing

00:27:06,419 --> 00:27:11,190
did that really like head towards a

00:27:08,820 --> 00:27:12,929
secure version of my sight it's super

00:27:11,190 --> 00:27:14,279
easy you know to introduce a security

00:27:12,929 --> 00:27:16,950
vulnerability when you're going around

00:27:14,279 --> 00:27:18,210
toggling things so you know as you're

00:27:16,950 --> 00:27:19,830
going through and configuring your site

00:27:18,210 --> 00:27:21,950
just keep in mind what are the potential

00:27:19,830 --> 00:27:24,690
problem is that this might introduce

00:27:21,950 --> 00:27:26,129
permissions um text formats I talked

00:27:24,690 --> 00:27:30,059
about you know cross-site scripting via

00:27:26,129 --> 00:27:32,129
adding inappropriate tags there the PHP

00:27:30,059 --> 00:27:33,539
module I would say if you can just turn

00:27:32,129 --> 00:27:35,879
it off and maybe even remove it from

00:27:33,539 --> 00:27:38,039
your site you know it's not so much that

00:27:35,879 --> 00:27:40,529
it's it itself creates a vulnerability

00:27:38,039 --> 00:27:43,259
but if an attacker you know gets your

00:27:40,529 --> 00:27:45,480
username and password somehow then they

00:27:43,259 --> 00:27:47,759
can use that as a point to leverage

00:27:45,480 --> 00:27:49,440
further as a leverage point to create

00:27:47,759 --> 00:27:52,259
further attacks on your site on your

00:27:49,440 --> 00:27:53,730
infrastructure and then PHP execution

00:27:52,259 --> 00:27:55,320
and other modules you know as you're

00:27:53,730 --> 00:27:56,700
evaluating the security of a new module

00:27:55,320 --> 00:27:58,769
you're thinking to have adding to the

00:27:56,700 --> 00:28:00,749
site if it allows you as an admin to

00:27:58,769 --> 00:28:02,730
execute PHP inside of it it can also

00:28:00,749 --> 00:28:04,289
allow an attacker to do that so you have

00:28:02,730 --> 00:28:05,639
to you know say what are the tools that

00:28:04,289 --> 00:28:07,409
I'm giving myself what are the tools

00:28:05,639 --> 00:28:10,350
that I'm giving to somebody who might

00:28:07,409 --> 00:28:13,630
compromise my site

00:28:10,350 --> 00:28:14,950
so we've got this list of modules every

00:28:13,630 --> 00:28:18,070
every presentation has to have their

00:28:14,950 --> 00:28:19,540
list of modules right here we go you

00:28:18,070 --> 00:28:21,370
know I would say I've listed them in

00:28:19,540 --> 00:28:23,470
what I consider to be priority order

00:28:21,370 --> 00:28:26,020
basically you know security review i

00:28:23,470 --> 00:28:28,270
encourage on every single site it's it

00:28:26,020 --> 00:28:29,890
is really helpful in identifying those

00:28:28,270 --> 00:28:32,800
common mistakes I was just talking about

00:28:29,890 --> 00:28:34,810
and give you warnings it has drush

00:28:32,800 --> 00:28:36,940
integration you can set it up in an

00:28:34,810 --> 00:28:41,770
automated job in a cron job to send you

00:28:36,940 --> 00:28:44,740
an email of the output you can you can

00:28:41,770 --> 00:28:46,330
set it up to log the information into

00:28:44,740 --> 00:28:48,160
watchdog so if you're really on top of

00:28:46,330 --> 00:28:50,340
looking at your watch dog reports you

00:28:48,160 --> 00:28:53,320
can see it there it's a very useful tool

00:28:50,340 --> 00:28:54,220
next one paranoia it's basically going

00:28:53,320 --> 00:28:56,140
back to that point that I was making

00:28:54,220 --> 00:28:57,730
about the PHP module and says if

00:28:56,140 --> 00:28:59,260
somebody you know if you sort of assume

00:28:57,730 --> 00:29:00,670
that somebody will eventually break into

00:28:59,260 --> 00:29:02,800
your site you want to make their next

00:29:00,670 --> 00:29:04,810
steps as hard as possible and paranoia

00:29:02,800 --> 00:29:06,760
will help out with preventing the

00:29:04,810 --> 00:29:09,400
execution of PHP to limit the kinds of

00:29:06,760 --> 00:29:12,160
things that somebody can do a relatively

00:29:09,400 --> 00:29:15,280
new module that's now available is the

00:29:12,160 --> 00:29:18,130
password strength module so this is sort

00:29:15,280 --> 00:29:19,750
of based on the idea that i actually

00:29:18,130 --> 00:29:21,910
just saw a sticky note on somebody's

00:29:19,750 --> 00:29:24,730
computer that had their password and the

00:29:21,910 --> 00:29:26,800
password met most password policies it

00:29:24,730 --> 00:29:29,560
was capital t thunder and then an

00:29:26,800 --> 00:29:32,440
exclamation point okay that is not

00:29:29,560 --> 00:29:34,690
secure and yet it meets you know Windows

00:29:32,440 --> 00:29:37,390
Active Directory rules it needs PCI

00:29:34,690 --> 00:29:39,430
rules it meets all of these really basic

00:29:37,390 --> 00:29:41,410
rules so what password strength module

00:29:39,430 --> 00:29:43,420
does is it looks for dictionary words it

00:29:41,410 --> 00:29:47,950
looks for repeating characters it looks

00:29:43,420 --> 00:29:50,380
for you know ASDF 1234 ! it looks for

00:29:47,950 --> 00:29:52,480
those kinds of common patterns that

00:29:50,380 --> 00:29:54,840
people use in passwords and it sort of

00:29:52,480 --> 00:29:58,690
throws those out as not actually being

00:29:54,840 --> 00:30:00,580
unique content and so it judges password

00:29:58,690 --> 00:30:02,170
strength based on the entropy of data

00:30:00,580 --> 00:30:04,510
inside of the password it gives you more

00:30:02,170 --> 00:30:07,210
realistic perspective about just how

00:30:04,510 --> 00:30:08,560
secure that password is two-factor

00:30:07,210 --> 00:30:09,820
authentication this is something that

00:30:08,560 --> 00:30:11,230
you know how many people have at least

00:30:09,820 --> 00:30:12,600
one site that they're using that's

00:30:11,230 --> 00:30:16,080
two-factor authentication

00:30:12,600 --> 00:30:18,660
yeah you can go add it to your drupal

00:30:16,080 --> 00:30:19,830
site right now um you know this is

00:30:18,660 --> 00:30:22,590
something that I think is a really

00:30:19,830 --> 00:30:26,610
awesome tool we actually did a security

00:30:22,590 --> 00:30:28,710
bug bounty for this module that we gave

00:30:26,610 --> 00:30:31,200
out the username and password and said

00:30:28,710 --> 00:30:33,930
hey if you can break into the site you

00:30:31,200 --> 00:30:36,180
get five hundred dollars and after two

00:30:33,930 --> 00:30:38,070
weeks and you know dozens of people

00:30:36,180 --> 00:30:39,780
making thousands of requests trying to

00:30:38,070 --> 00:30:41,580
break into the site nobody was able to

00:30:39,780 --> 00:30:42,990
bypass that even though they have the

00:30:41,580 --> 00:30:45,450
username in the password they couldn't

00:30:42,990 --> 00:30:46,710
break into the site so two-factor

00:30:45,450 --> 00:30:52,560
authentication I think is a really

00:30:46,710 --> 00:30:54,420
brilliant technology you know the people

00:30:52,560 --> 00:30:56,730
should be adding at least for admins if

00:30:54,420 --> 00:30:59,850
not for you know content creators and

00:30:56,730 --> 00:31:01,350
more users on your site permissions lock

00:30:59,850 --> 00:31:04,020
module so I mentioned the idea of like

00:31:01,350 --> 00:31:05,970
one mistake with a checkbox can can ruin

00:31:04,020 --> 00:31:09,000
your day on that permission screen and

00:31:05,970 --> 00:31:11,280
permissions lock basically pushes you to

00:31:09,000 --> 00:31:14,400
manage your permissions via code rather

00:31:11,280 --> 00:31:15,840
than via the interface hacked module can

00:31:14,400 --> 00:31:17,610
be helpful to make sure that you haven't

00:31:15,840 --> 00:31:19,290
been hacked it's not so good at

00:31:17,610 --> 00:31:22,290
preventing it but can help you with the

00:31:19,290 --> 00:31:24,240
cleanup and identifying that there has

00:31:22,290 --> 00:31:26,010
been a problem and then password policy

00:31:24,240 --> 00:31:27,960
if if you work in a regulatory

00:31:26,010 --> 00:31:30,120
environment that requires the specific

00:31:27,960 --> 00:31:32,250
policy you know you can use password

00:31:30,120 --> 00:31:35,070
policy and password strength together it

00:31:32,250 --> 00:31:36,600
also enforces history constraint so that

00:31:35,070 --> 00:31:38,010
you can't reuse the same password for

00:31:36,600 --> 00:31:40,910
over a certain amount of time so i think

00:31:38,010 --> 00:31:43,950
password policy is another good tool

00:31:40,910 --> 00:31:45,630
real quickly so here is you know

00:31:43,950 --> 00:31:47,610
two-factor authentication it's been

00:31:45,630 --> 00:31:49,350
recently deployed on drupal.org for some

00:31:47,610 --> 00:31:54,090
of the advanced roles on that site and

00:31:49,350 --> 00:31:56,010
the basic idea yeah yay for that the

00:31:54,090 --> 00:31:58,020
idea is that you know when i login to

00:31:56,010 --> 00:32:00,180
drupal.org you know have to enter in my

00:31:58,020 --> 00:32:01,320
username and password password resolve

00:32:00,180 --> 00:32:04,740
dots by the way if you want to break

00:32:01,320 --> 00:32:07,230
into my account and then and then asked

00:32:04,740 --> 00:32:08,910
me for my six digit verification code

00:32:07,230 --> 00:32:11,460
and this is a new code that's generated

00:32:08,910 --> 00:32:13,080
every 60 seconds and I can say remember

00:32:11,460 --> 00:32:15,390
this browser and it will do that for me

00:32:13,080 --> 00:32:17,740
for a certain amount of time very very

00:32:15,390 --> 00:32:19,759
helpful tool for increasing security

00:32:17,740 --> 00:32:21,379
another one this is the password

00:32:19,759 --> 00:32:23,029
strength module is this how it shows up

00:32:21,379 --> 00:32:24,740
so it's a slightly different user

00:32:23,029 --> 00:32:26,870
interface than the default Drupal

00:32:24,740 --> 00:32:28,549
password strength monitor you may have

00:32:26,870 --> 00:32:31,220
noticed this a bunch of different sites

00:32:28,549 --> 00:32:32,929
are using this so atlassian and gr I

00:32:31,220 --> 00:32:35,389
believe you base their UI on this

00:32:32,929 --> 00:32:37,070
Dropbox has a UI based on this so people

00:32:35,389 --> 00:32:39,440
are sort of increasingly experiencing a

00:32:37,070 --> 00:32:40,850
UI that looks like this and it gives you

00:32:39,440 --> 00:32:43,159
some advice that says hey you know this

00:32:40,850 --> 00:32:46,039
has a keyboard a keyboard sequence in it

00:32:43,159 --> 00:32:48,620
like the QWERTY ASDF and also contains a

00:32:46,039 --> 00:32:50,029
dictionary word once you're in a good

00:32:48,620 --> 00:32:52,220
place you know that bar sort of

00:32:50,029 --> 00:32:53,779
progresses along and you can enforce it

00:32:52,220 --> 00:32:55,519
you know so this is giving suggestions

00:32:53,779 --> 00:32:57,049
to people in real time as they're typing

00:32:55,519 --> 00:32:59,090
in that password password strength

00:32:57,049 --> 00:33:00,379
module also allows you to enforce it on

00:32:59,090 --> 00:33:01,909
the server side so that when somebody

00:33:00,379 --> 00:33:04,190
then submits their password if it's not

00:33:01,909 --> 00:33:06,759
good enough it can be rejected that's

00:33:04,190 --> 00:33:11,169
that's an optional thing up to you

00:33:06,759 --> 00:33:14,090
alrighty there's a module overview um

00:33:11,169 --> 00:33:15,860
Drupal 6 support there's probably some

00:33:14,090 --> 00:33:20,690
people who are saying i love my drupal 6

00:33:15,860 --> 00:33:22,370
don't take it away from me so drupal

00:33:20,690 --> 00:33:24,440
state historically whenever there's a

00:33:22,370 --> 00:33:25,909
new release of drupal the one the

00:33:24,440 --> 00:33:29,179
version of Drupal that is two years old

00:33:25,909 --> 00:33:31,250
it meets its end of life as the software

00:33:29,179 --> 00:33:33,080
industry says it's no longer supported

00:33:31,250 --> 00:33:35,299
with Drupal 6 there will be some

00:33:33,080 --> 00:33:38,330
extended support for three months after

00:33:35,299 --> 00:33:40,580
the Drupal 8 00 release so you know

00:33:38,330 --> 00:33:42,049
three months not a ton of time but at

00:33:40,580 --> 00:33:43,250
least it's a little bit more time than

00:33:42,049 --> 00:33:46,610
what the Drupal project has done

00:33:43,250 --> 00:33:48,500
historically there's also sort of we've

00:33:46,610 --> 00:33:50,750
we've sort of thrown out this idea that

00:33:48,500 --> 00:33:53,240
if somebody wants to provide support for

00:33:50,750 --> 00:33:55,159
Drupal 6 beyond that then they could

00:33:53,240 --> 00:33:58,309
sort of become a focal point for that

00:33:55,159 --> 00:34:00,950
effort and the the link their points

00:33:58,309 --> 00:34:02,389
that a document about that so if you are

00:34:00,950 --> 00:34:04,940
interested in being the triple six

00:34:02,389 --> 00:34:06,769
maintainer for a long time and you're

00:34:04,940 --> 00:34:08,419
qualified to do that based on the

00:34:06,769 --> 00:34:11,810
qualifications list on that page you

00:34:08,419 --> 00:34:13,190
know please do get in touch i also want

00:34:11,810 --> 00:34:14,690
to of course talk about drupal 8

00:34:13,190 --> 00:34:15,540
security improvements the new hotness

00:34:14,690 --> 00:34:18,480
right

00:34:15,540 --> 00:34:22,290
so one of those is twig the templating

00:34:18,480 --> 00:34:24,270
tool for Drupal 8 it removes PHP from

00:34:22,290 --> 00:34:25,950
templates which you know hopefully we'll

00:34:24,270 --> 00:34:28,560
have some security benefits there's also

00:34:25,950 --> 00:34:29,880
automatic sanitization of strings so a

00:34:28,560 --> 00:34:31,850
lot of cross-site scripting

00:34:29,880 --> 00:34:34,980
vulnerabilities seem to get introduced

00:34:31,850 --> 00:34:37,800
inside of the template engine inside of

00:34:34,980 --> 00:34:39,690
the templates and so we hope that Drupal

00:34:37,800 --> 00:34:41,010
8 and twig will reduce the number of

00:34:39,690 --> 00:34:42,600
cross-site scripting vulnerabilities

00:34:41,010 --> 00:34:45,960
that we see which is you know currently

00:34:42,600 --> 00:34:49,110
the the biggest one another area not so

00:34:45,960 --> 00:34:50,460
much in contribute some of advisory is

00:34:49,110 --> 00:34:51,780
about from drupal.org but a place where

00:34:50,460 --> 00:34:55,169
people make mistakes on their own site

00:34:51,780 --> 00:34:57,510
is in configuring WYSIWYG I think that

00:34:55,169 --> 00:34:59,790
in Drupal 7 and below it's really

00:34:57,510 --> 00:35:01,290
painful right now to get your txt format

00:34:59,790 --> 00:35:03,810
configuration and your WYSIWYG

00:35:01,290 --> 00:35:07,230
configuration to do a slow dance to the

00:35:03,810 --> 00:35:08,940
same song and that's what we all want so

00:35:07,230 --> 00:35:10,830
you know people sort of say I'm just

00:35:08,940 --> 00:35:12,630
going to do full HTML and that'll be

00:35:10,830 --> 00:35:13,920
good enough for everybody and in the

00:35:12,630 --> 00:35:16,110
process to introduce a cross-site

00:35:13,920 --> 00:35:17,820
scripting vulnerability Drupal 8 helps

00:35:16,110 --> 00:35:19,200
to keep those you know sort of working

00:35:17,820 --> 00:35:20,520
together and I think makes it a lot

00:35:19,200 --> 00:35:22,440
easier for people to get it configured

00:35:20,520 --> 00:35:24,450
right and so therefore they're less

00:35:22,440 --> 00:35:28,380
likely to just open up full HTML for

00:35:24,450 --> 00:35:30,840
everyone I mentioned Drupal or I

00:35:28,380 --> 00:35:33,240
mentioned the PHP module and how it's

00:35:30,840 --> 00:35:35,280
you know sort of not a great idea it's

00:35:33,240 --> 00:35:41,160
gone from Drupal 8 so that makes me

00:35:35,280 --> 00:35:44,880
happy you know and you know that is I

00:35:41,160 --> 00:35:46,710
think back to Michael so there's

00:35:44,880 --> 00:35:50,790
actually been a book written on how to

00:35:46,710 --> 00:35:53,790
hack your ball and you can get this on

00:35:50,790 --> 00:35:56,570
amazon.com right now if you'd like it

00:35:53,790 --> 00:35:59,550
happens to be written by my friend here

00:35:56,570 --> 00:36:01,410
and it's a good book that goes through

00:35:59,550 --> 00:36:03,000
the basis of how to do some of these

00:36:01,410 --> 00:36:04,680
attacks and how to protect against them

00:36:03,000 --> 00:36:07,320
it's a more in-depth version of this

00:36:04,680 --> 00:36:10,980
presentation in book format so you can

00:36:07,320 --> 00:36:13,200
kind of follow along anybody have any

00:36:10,980 --> 00:36:15,330
questions and if so please use the mic

00:36:13,200 --> 00:36:18,650
over there so just form a line behind

00:36:15,330 --> 00:36:18,650
the mic we will take questions

00:36:18,800 --> 00:36:25,600
I see this mad dash hundreds of people

00:36:22,730 --> 00:36:30,050
running to the mic Oh No ashore go ahead

00:36:25,600 --> 00:36:32,390
hi I'm i just created a new Drupal 7

00:36:30,050 --> 00:36:35,540
site for the Bankruptcy Court for the

00:36:32,390 --> 00:36:38,170
Northern District of California and as

00:36:35,540 --> 00:36:40,940
part of the security when the

00:36:38,170 --> 00:36:46,100
administrative offices kind of tested

00:36:40,940 --> 00:36:50,960
the site what we had to do is only allow

00:36:46,100 --> 00:36:56,360
like certain IP addresses through the

00:36:50,960 --> 00:37:00,110
server configuration so that the slash

00:36:56,360 --> 00:37:02,530
user page could not even come up for

00:37:00,110 --> 00:37:05,360
anybody else that didn't have that IP

00:37:02,530 --> 00:37:09,890
well that's working fine but what we

00:37:05,360 --> 00:37:13,790
would like to do is be able to have in

00:37:09,890 --> 00:37:16,970
the future logins for attorneys who are

00:37:13,790 --> 00:37:20,210
not within our VPN or within the court

00:37:16,970 --> 00:37:22,580
is there any way to do that and still

00:37:20,210 --> 00:37:30,170
keep the level of security that we have

00:37:22,580 --> 00:37:32,030
I mean I think that um it's an

00:37:30,170 --> 00:37:33,950
interesting idea to lock down sections

00:37:32,030 --> 00:37:35,540
of your site based on IP and it's a

00:37:33,950 --> 00:37:37,820
strategy that I've definitely heard of

00:37:35,540 --> 00:37:40,490
different Drupal sites doing that

00:37:37,820 --> 00:37:42,260
there's um I'm sure I was just trying to

00:37:40,490 --> 00:37:44,570
find the name of it there's a drupal

00:37:42,260 --> 00:37:47,660
module called something like how bears

00:37:44,570 --> 00:37:49,970
jaan which is a medieval word for chain

00:37:47,660 --> 00:37:52,040
mail I don't know not that not the

00:37:49,970 --> 00:37:54,200
friendliest name but but it is based on

00:37:52,040 --> 00:37:57,950
that idea of limiting certain paths to

00:37:54,200 --> 00:38:02,060
an IP level to IP addresses or address

00:37:57,950 --> 00:38:03,620
ranges and so if I think that probably

00:38:02,060 --> 00:38:05,780
what you're doing now is more at the web

00:38:03,620 --> 00:38:08,000
server level um and and if you were to

00:38:05,780 --> 00:38:10,430
pull it into Drupal then that might make

00:38:08,000 --> 00:38:12,320
it easier to configure to meet the set

00:38:10,430 --> 00:38:14,300
of rules that you want so you know if

00:38:12,320 --> 00:38:16,610
remote lawyers should be allowed to use

00:38:14,300 --> 00:38:19,910
the user page and three or four other

00:38:16,610 --> 00:38:22,280
sort of admin ish pages then that might

00:38:19,910 --> 00:38:24,620
allow you to do that but but otherwise I

00:38:22,280 --> 00:38:26,030
feel like it's just sort of a process of

00:38:24,620 --> 00:38:26,580
like going through figuring out what

00:38:26,030 --> 00:38:28,640
things they

00:38:26,580 --> 00:38:31,650
shouldn't be able to access and then

00:38:28,640 --> 00:38:33,000
making really specific rules in your web

00:38:31,650 --> 00:38:35,130
server or wherever you're putting those

00:38:33,000 --> 00:38:39,330
rules that allow them to do that okay

00:38:35,130 --> 00:38:42,210
thanks yeah this is in response to your

00:38:39,330 --> 00:38:44,780
XSS in the early introductory remarks

00:38:42,210 --> 00:38:47,400
there's actually a sandbox module

00:38:44,780 --> 00:38:50,520
probably you've heard of it but it's

00:38:47,400 --> 00:38:54,180
around being able to produce this

00:38:50,520 --> 00:38:57,810
automatically for you it was created by

00:38:54,180 --> 00:38:59,370
Matthew Pam I'm not using the room I'm

00:38:57,810 --> 00:39:01,230
going to butcher his last name lot of

00:38:59,370 --> 00:39:03,300
Maya or something but he's also one of

00:39:01,230 --> 00:39:06,690
the other get admins we use it in the

00:39:03,300 --> 00:39:12,270
core are in the vetting process to

00:39:06,690 --> 00:39:14,850
validate whether or not in module is XSS

00:39:12,270 --> 00:39:16,650
vulnerable I've personally found

00:39:14,850 --> 00:39:19,260
vulnerabilities even in the date module

00:39:16,650 --> 00:39:22,200
with it and those have all gone through

00:39:19,260 --> 00:39:24,210
and releases so perfectly fine to talk

00:39:22,200 --> 00:39:28,700
about now but it's a really great module

00:39:24,210 --> 00:39:31,140
to to find and hack your own code and

00:39:28,700 --> 00:39:33,360
only enable it i guess i would be my

00:39:31,140 --> 00:39:35,870
comment only enable it in a dev site not

00:39:33,360 --> 00:39:38,690
in production yes so yeah I think

00:39:35,870 --> 00:39:40,710
Matthew Donna do I think he's not here

00:39:38,690 --> 00:39:43,590
unfortunately but yeah definitely a

00:39:40,710 --> 00:39:46,440
great module XSS tester it's in a

00:39:43,590 --> 00:39:48,930
sandbox and peed on a deal i'll add that

00:39:46,440 --> 00:39:53,490
into the slides that are updated on

00:39:48,930 --> 00:39:56,310
github yeah a hug yes I'm just curious

00:39:53,490 --> 00:40:00,330
have you ever seen a legitimate use for

00:39:56,310 --> 00:40:03,330
the PHP input filter and defined

00:40:00,330 --> 00:40:07,560
legitimate use one that was absolutely

00:40:03,330 --> 00:40:09,450
necessary I'm just curious and maybe

00:40:07,560 --> 00:40:12,030
also advice for people who have that

00:40:09,450 --> 00:40:16,830
like ways to migrate away from it sure

00:40:12,030 --> 00:40:20,460
it's all I think that the UM I mean you

00:40:16,830 --> 00:40:22,200
know I i use the PHP module right like I

00:40:20,460 --> 00:40:23,640
think that it's a great tool I used it

00:40:22,200 --> 00:40:26,640
in the past I think that it's a great

00:40:23,640 --> 00:40:28,260
tool to like make that step from okay

00:40:26,640 --> 00:40:29,910
I'm pointing and clicking to build a

00:40:28,260 --> 00:40:32,730
Drupal site I need to write a little bit

00:40:29,910 --> 00:40:35,220
of code this this little input box is

00:40:32,730 --> 00:40:36,490
you know it feels familiar to me and I

00:40:35,220 --> 00:40:38,830
can put some code in there

00:40:36,490 --> 00:40:41,740
and so the PHP module' i think is like a

00:40:38,830 --> 00:40:43,690
helpful stepping stone for people but

00:40:41,740 --> 00:40:47,410
then when I when I wrote my first module

00:40:43,690 --> 00:40:48,910
I was like that's it you know it's sort

00:40:47,410 --> 00:40:51,010
of it was like this it was shrouded

00:40:48,910 --> 00:40:52,420
behind mystery for me and when I made

00:40:51,010 --> 00:40:53,680
that jump across into the module was

00:40:52,420 --> 00:40:56,200
like oh that was a lot easier than I

00:40:53,680 --> 00:40:57,820
thought it would be so you know that I

00:40:56,200 --> 00:40:59,380
think that there is a role for the PHP

00:40:57,820 --> 00:41:02,110
module to some extent it does live on

00:40:59,380 --> 00:41:05,350
and contribute in love with it you can

00:41:02,110 --> 00:41:07,030
download it for Drupal 8 that's fine I

00:41:05,350 --> 00:41:08,410
would suggest not putting it on your

00:41:07,030 --> 00:41:10,360
production site use it locally for

00:41:08,410 --> 00:41:12,550
development you know something like that

00:41:10,360 --> 00:41:14,770
you know that I think that the answer is

00:41:12,550 --> 00:41:16,900
that there's basically no place where

00:41:14,770 --> 00:41:19,000
the PHP module is the only way to do

00:41:16,900 --> 00:41:20,860
something there's almost always an altar

00:41:19,000 --> 00:41:22,630
hook or you know you can do something in

00:41:20,860 --> 00:41:25,450
a template or a pre-processed function

00:41:22,630 --> 00:41:28,840
or somewhere it's it's often easier to

00:41:25,450 --> 00:41:31,090
do it in a PHP module or you know like

00:41:28,840 --> 00:41:33,310
views PHP field or something that it can

00:41:31,090 --> 00:41:35,380
be easier or faster to get it done that

00:41:33,310 --> 00:41:37,030
way but you know there's always another

00:41:35,380 --> 00:41:39,340
way to do it I would say it has a place

00:41:37,030 --> 00:41:41,140
in dev not in product yeah it's

00:41:39,340 --> 00:41:43,060
basically how I would sum it up is it

00:41:41,140 --> 00:41:46,390
yeah it's great for potentially quickly

00:41:43,060 --> 00:41:48,220
tweaking this and then when it's time to

00:41:46,390 --> 00:41:49,359
actually you know okay it works now

00:41:48,220 --> 00:41:52,030
we're going to turn that into a module

00:41:49,359 --> 00:41:57,700
same place is the develop module module

00:41:52,030 --> 00:42:00,820
has a place in dev not in prod hi I'm

00:41:57,700 --> 00:42:03,970
fairly new to coding I'm a career

00:42:00,820 --> 00:42:06,790
changer and went to a boot camp and just

00:42:03,970 --> 00:42:11,470
landed my first dev job at awesome

00:42:06,790 --> 00:42:13,510
company think shout and so yeah I'm new

00:42:11,470 --> 00:42:16,510
to this I don't quite know the jargon

00:42:13,510 --> 00:42:20,619
I'm still figuring things out what

00:42:16,510 --> 00:42:24,880
advice do you have for someone who is so

00:42:20,619 --> 00:42:26,380
green like I am too you know who's

00:42:24,880 --> 00:42:27,820
suffering a little bit from decision

00:42:26,380 --> 00:42:31,180
fatigue because there are so many

00:42:27,820 --> 00:42:34,330
resources out there how do I focus my

00:42:31,180 --> 00:42:37,060
energy on learning good you know best

00:42:34,330 --> 00:42:40,119
practices for Drupal in a way that will

00:42:37,060 --> 00:42:43,840
make sense so the last slide we have is

00:42:40,119 --> 00:42:45,700
a resources slide which thank you is

00:42:43,840 --> 00:42:46,960
about a book that's available that

00:42:45,700 --> 00:42:49,570
covers kind of the definitive guide to

00:42:46,960 --> 00:42:52,660
Drupal 7 it covers some of the secured

00:42:49,570 --> 00:42:54,580
stuff it also has links to how to write

00:42:52,660 --> 00:42:56,140
secure code and how to secure your site

00:42:54,580 --> 00:42:57,970
how to secure your site as kind of

00:42:56,140 --> 00:43:01,600
demonstrates kind of geared towards site

00:42:57,970 --> 00:43:06,040
builders how to write secure code geared

00:43:01,600 --> 00:43:10,360
towards people writing code hi I have a

00:43:06,040 --> 00:43:13,000
question about locking down a dribble

00:43:10,360 --> 00:43:14,980
website having two different my sequel

00:43:13,000 --> 00:43:18,160
users one with read-only access and one

00:43:14,980 --> 00:43:20,650
right is there as you know what's the

00:43:18,160 --> 00:43:22,720
security benefit to that and you know

00:43:20,650 --> 00:43:26,860
what sort of you know protection can you

00:43:22,720 --> 00:43:30,190
can you gain there yeah I think that's a

00:43:26,860 --> 00:43:31,390
so the idea of creating multiple my

00:43:30,190 --> 00:43:32,950
sequel accounts that have different

00:43:31,390 --> 00:43:34,570
permissions on different tables is an

00:43:32,950 --> 00:43:36,220
interesting one that you know

00:43:34,570 --> 00:43:38,140
particularly in light of sequel

00:43:36,220 --> 00:43:40,480
injection this past fall people get more

00:43:38,140 --> 00:43:42,730
interested in there's one of the

00:43:40,480 --> 00:43:46,150
resources is groups drupal.org /

00:43:42,730 --> 00:43:47,080
security you can log in there and join

00:43:46,150 --> 00:43:49,570
that group and then you'll get

00:43:47,080 --> 00:43:51,250
notifications about content inside of

00:43:49,570 --> 00:43:53,260
that group and one of the recent posts

00:43:51,250 --> 00:43:55,060
maybe a month or two ago was somebody

00:43:53,260 --> 00:43:57,100
who had gone through that process to try

00:43:55,060 --> 00:43:59,770
to figure out what's the sort of bare

00:43:57,100 --> 00:44:02,590
set of my sequel permissions that are

00:43:59,770 --> 00:44:04,900
you know table access that's necessary

00:44:02,590 --> 00:44:07,840
for a Drupal site to run in kind of a

00:44:04,900 --> 00:44:08,770
read-only mode from the public and then

00:44:07,840 --> 00:44:11,050
there would be a separate set of

00:44:08,770 --> 00:44:14,020
credentials that admins log into on like

00:44:11,050 --> 00:44:16,390
a private VPN that allows right access

00:44:14,020 --> 00:44:17,740
into the content and everything else and

00:44:16,390 --> 00:44:19,930
I think that they even developed a bit

00:44:17,740 --> 00:44:22,090
of a script in order to in order to

00:44:19,930 --> 00:44:23,710
create all of the grant statements that

00:44:22,090 --> 00:44:27,010
are necessary for enacting that kind of

00:44:23,710 --> 00:44:28,690
a system so i would i would encourage

00:44:27,010 --> 00:44:31,000
you to check that out it's a group

00:44:28,690 --> 00:44:32,770
statue brought org slash security I've

00:44:31,000 --> 00:44:33,940
definitely heard about people using that

00:44:32,770 --> 00:44:36,100
kind of system and it seems to work well

00:44:33,940 --> 00:44:38,650
for them you know just depends upon how

00:44:36,100 --> 00:44:41,640
much interactivity you need from the

00:44:38,650 --> 00:44:41,640
broader public yeah

00:44:41,970 --> 00:44:48,490
there's also going to be a buff so for

00:44:45,340 --> 00:44:51,160
pizza focused on the security team and

00:44:48,490 --> 00:44:52,780
the security advisory process so if you

00:44:51,160 --> 00:44:55,150
have thoughts about how we can improve

00:44:52,780 --> 00:44:57,100
that then we're very interested in that

00:44:55,150 --> 00:45:00,340
it is at the same time where it's

00:44:57,100 --> 00:45:02,230
starting at noon today so you know grab

00:45:00,340 --> 00:45:07,030
your lunch quickly and then it's in room

00:45:02,230 --> 00:45:11,470
401 401 which is upstairs upstairs and

00:45:07,030 --> 00:45:13,960
that way yeah so going back to your

00:45:11,470 --> 00:45:16,420
reference about when Apache was

00:45:13,960 --> 00:45:18,220
compromised and they were able to access

00:45:16,420 --> 00:45:21,550
settings dot PHP and get access to mysql

00:45:18,220 --> 00:45:23,470
database is that a way to secure the

00:45:21,550 --> 00:45:27,460
password which is on the settings at ph

00:45:23,470 --> 00:45:29,320
b by encrypting that something that i

00:45:27,460 --> 00:45:31,090
haven't been able to find so far so here

00:45:29,320 --> 00:45:32,170
if you guys them the issue is the web

00:45:31,090 --> 00:45:36,490
server needs to be able to read the

00:45:32,170 --> 00:45:38,980
password so you can do things to obscure

00:45:36,490 --> 00:45:40,450
the password but in the end the web

00:45:38,980 --> 00:45:42,040
server needs to be able to decrypt that

00:45:40,450 --> 00:45:44,860
password to make the connection to my

00:45:42,040 --> 00:45:47,980
sequel so if your attacker has found a

00:45:44,860 --> 00:45:50,920
way to read settings at PHP through the

00:45:47,980 --> 00:45:52,930
web server it's probably too late to do

00:45:50,920 --> 00:45:56,020
something from that perspective what you

00:45:52,930 --> 00:45:58,960
can do though is find ways to protect

00:45:56,020 --> 00:46:00,370
settings at PHP itself so make sure that

00:45:58,960 --> 00:46:02,950
it's not you know doesn't have UNIX

00:46:00,370 --> 00:46:05,770
permissions of 777 it should be limited

00:46:02,950 --> 00:46:07,420
to just the user that needs access to it

00:46:05,770 --> 00:46:09,310
make sure that other sites on that

00:46:07,420 --> 00:46:11,290
server are protected from hitting

00:46:09,310 --> 00:46:13,300
settings dot PHP so if you compromise

00:46:11,290 --> 00:46:15,040
one site you can't find settings that

00:46:13,300 --> 00:46:16,780
PHP another more you might be able to

00:46:15,040 --> 00:46:18,550
find it but you can't read the file so

00:46:16,780 --> 00:46:20,050
that worst-case scenario of one sites

00:46:18,550 --> 00:46:22,240
compromised it doesn't let your entire

00:46:20,050 --> 00:46:27,490
server get compromised which was kind of

00:46:22,240 --> 00:46:29,560
what happened in that story just one

00:46:27,490 --> 00:46:34,420
more point on that the security review

00:46:29,560 --> 00:46:36,010
module has a check that will look for no

00:46:34,420 --> 00:46:37,480
it doesn't it looks for execution of PHP

00:46:36,010 --> 00:46:39,010
files part of me it doesn't look for

00:46:37,480 --> 00:46:40,450
that that specific kind of issue but it

00:46:39,010 --> 00:46:42,250
helps with some of that file settings

00:46:40,450 --> 00:46:44,640
permission stuff but that might be done

00:46:42,250 --> 00:46:44,640
by Friday

00:46:45,990 --> 00:46:52,270
so this might be related to that last

00:46:48,820 --> 00:46:54,580
question or at least the topic what kind

00:46:52,270 --> 00:46:57,180
of limitations do we have as far as what

00:46:54,580 --> 00:47:02,170
passwords we can use like upside-down

00:46:57,180 --> 00:47:03,700
text or special HTML code characters

00:47:02,170 --> 00:47:05,680
things like that like what kind of

00:47:03,700 --> 00:47:10,000
limitations we have I'm new at all this

00:47:05,680 --> 00:47:12,220
so I don't really know the answer I kind

00:47:10,000 --> 00:47:16,960
of I think that it depends a bit on your

00:47:12,220 --> 00:47:20,740
my sequel table collation probably so I

00:47:16,960 --> 00:47:22,210
would say try it and see yeah so oh yeah

00:47:20,740 --> 00:47:23,710
happy yeah yeah it should I can hash

00:47:22,210 --> 00:47:27,160
before it's get written so I would I

00:47:23,710 --> 00:47:29,680
don't think it's gonna yeah I think of

00:47:27,160 --> 00:47:36,400
some ideas the PHP language stuff I

00:47:29,680 --> 00:47:38,680
don't know yeah I sound the synopsis for

00:47:36,400 --> 00:47:40,020
this song something about kyndra will

00:47:38,680 --> 00:47:42,760
protect against denial-of-service

00:47:40,020 --> 00:47:46,930
attacks i was curious which he had on

00:47:42,760 --> 00:47:48,820
that topic yeah so there there was

00:47:46,930 --> 00:47:52,330
actually a great presentation by david

00:47:48,820 --> 00:47:57,369
stolen about denial of service at i

00:47:52,330 --> 00:48:00,099
think the drupal DC camp a year ago so

00:47:57,369 --> 00:48:04,210
the slides for that are online you know

00:48:00,099 --> 00:48:07,210
mostly we talked mostly about drupal

00:48:04,210 --> 00:48:09,490
today because you know for a couple of

00:48:07,210 --> 00:48:12,099
reasons but you know solutions for

00:48:09,490 --> 00:48:15,099
denial of service are generally not

00:48:12,099 --> 00:48:17,260
drupal specific drupal specific denial

00:48:15,099 --> 00:48:20,080
of service issues are usually more

00:48:17,260 --> 00:48:22,960
complex to attack than like server level

00:48:20,080 --> 00:48:24,220
denial of service issues and so most of

00:48:22,960 --> 00:48:26,050
the attacks that I've heard of that

00:48:24,220 --> 00:48:28,450
we're denial of service were focused on

00:48:26,050 --> 00:48:30,430
Apache or you know flooding the network

00:48:28,450 --> 00:48:32,740
things like that rather than something

00:48:30,430 --> 00:48:34,720
drupal specific and so I think that the

00:48:32,740 --> 00:48:35,830
ways to protect against that are the

00:48:34,720 --> 00:48:36,590
same ways that you would do it if it

00:48:35,830 --> 00:48:38,090
were any

00:48:36,590 --> 00:48:39,530
they're kind of a site regard you know

00:48:38,090 --> 00:48:42,560
it doesn't matter so much at that point

00:48:39,530 --> 00:48:45,380
what if you're getting a slow loris or a

00:48:42,560 --> 00:48:51,380
network flood the solutions are at a

00:48:45,380 --> 00:48:59,090
lower level usually so yeah yeah it's

00:48:51,380 --> 00:49:03,680
pretty much Thanks hi

00:48:59,090 --> 00:49:06,300
is right hi hi yeah I'm I help run a

00:49:03,680 --> 00:49:08,070
multi-site at Cal Poly San Luis Obispo

00:49:06,300 --> 00:49:11,610
so we have about 200 websites under it

00:49:08,070 --> 00:49:13,710
and one of the things that questions i

00:49:11,610 --> 00:49:15,990
keep getting is to allow more

00:49:13,710 --> 00:49:19,080
permissions for the site or owners so

00:49:15,990 --> 00:49:22,320
more access to the site so one of the

00:49:19,080 --> 00:49:26,490
examples is requested that I give admin

00:49:22,320 --> 00:49:27,540
role access to somebody like in our

00:49:26,490 --> 00:49:28,740
health center or something like that so

00:49:27,540 --> 00:49:31,140
they can do whatever they want to say I

00:49:28,740 --> 00:49:32,400
lobby against that I said look I don't

00:49:31,140 --> 00:49:33,840
think that's a good idea because it's

00:49:32,400 --> 00:49:36,060
going to give them access so could you

00:49:33,840 --> 00:49:38,790
elaborate on the potential security

00:49:36,060 --> 00:49:40,710
risks of giving them admin access to

00:49:38,790 --> 00:49:42,810
allow them to set their own filters and

00:49:40,710 --> 00:49:45,210
all that stuff so why don't there's two

00:49:42,810 --> 00:49:48,390
issues multi-site because of the issue

00:49:45,210 --> 00:49:50,130
with Apache is a security issue if

00:49:48,390 --> 00:49:51,600
you're running different multi sites

00:49:50,130 --> 00:49:53,220
Greg may disagree but if you're running

00:49:51,600 --> 00:49:55,920
different multi sites with different

00:49:53,220 --> 00:49:57,420
site owners one of those sites get

00:49:55,920 --> 00:49:58,710
compromised they're able to compromise

00:49:57,420 --> 00:50:00,750
all the other sites pretty quickly

00:49:58,710 --> 00:50:02,310
because it's a shared code base so the

00:50:00,750 --> 00:50:03,720
first thing you may want to do is do

00:50:02,310 --> 00:50:05,670
separate Drupal and stalls for each

00:50:03,720 --> 00:50:07,050
which of course then you've got to deal

00:50:05,670 --> 00:50:08,280
with different updates when you need to

00:50:07,050 --> 00:50:11,490
update modules you're doing it across

00:50:08,280 --> 00:50:13,290
multiple sites but if you given the fact

00:50:11,490 --> 00:50:16,200
that it's a multi-site installed if one

00:50:13,290 --> 00:50:17,850
user enabled the PHP filter and made

00:50:16,200 --> 00:50:19,230
that available to anonymous users that

00:50:17,850 --> 00:50:20,460
could then be used to target all the

00:50:19,230 --> 00:50:23,790
other sites on the system as well as

00:50:20,460 --> 00:50:27,720
that the site they enable to go on same

00:50:23,790 --> 00:50:29,670
with job the cross-site scripting they

00:50:27,720 --> 00:50:31,620
could you know make small configuration

00:50:29,670 --> 00:50:33,450
changes in there that could break their

00:50:31,620 --> 00:50:35,730
site and then it probably comes back to

00:50:33,450 --> 00:50:38,220
an IT organization to then clean up

00:50:35,730 --> 00:50:39,390
after what was done okay at the

00:50:38,220 --> 00:50:42,240
University of Michigan we've run into

00:50:39,390 --> 00:50:43,770
this we've run into similar issues there

00:50:42,240 --> 00:50:45,180
and we've got two different competing

00:50:43,770 --> 00:50:48,330
schools of thought one is there's an

00:50:45,180 --> 00:50:51,150
organization that gives content the

00:50:48,330 --> 00:50:53,160
content privileges out but that's about

00:50:51,150 --> 00:50:55,170
where the level of access stops and then

00:50:53,160 --> 00:50:57,990
anything that's requires more access

00:50:55,170 --> 00:50:59,730
goes through an organization that has

00:50:57,990 --> 00:51:01,740
familiarity with what the consequences

00:50:59,730 --> 00:51:03,090
are to enabling certain features or I

00:51:01,740 --> 00:51:05,460
disabling certain feature South Sioux

00:51:03,090 --> 00:51:07,290
layer yeah I would say that you know as

00:51:05,460 --> 00:51:08,670
we've said like keeping your site up to

00:51:07,290 --> 00:51:09,260
date is one of the most important things

00:51:08,670 --> 00:51:12,080
and so

00:51:09,260 --> 00:51:13,760
multi-site often helps you to do that so

00:51:12,080 --> 00:51:16,040
it's sort of you have to know your your

00:51:13,760 --> 00:51:18,170
trade-offs basically there is going to

00:51:16,040 --> 00:51:21,380
be a bother this week I saw just a brief

00:51:18,170 --> 00:51:24,200
mention of it at ultimate boy Matt

00:51:21,380 --> 00:51:27,080
Tucker works at cu-boulder and he you

00:51:24,200 --> 00:51:28,580
know they have a lot of Drupal sites and

00:51:27,080 --> 00:51:31,160
so they're dealing with this question of

00:51:28,580 --> 00:51:33,620
how do you manage in a scalable way

00:51:31,160 --> 00:51:34,940
hundreds of Drupal sites so that you

00:51:33,620 --> 00:51:37,430
know could be some good solutions there

00:51:34,940 --> 00:51:40,250
I agree with Michael that it's very hard

00:51:37,430 --> 00:51:42,320
to get configuration a multi-site in a

00:51:40,250 --> 00:51:43,790
way that is secure for everybody and so

00:51:42,320 --> 00:51:45,980
breaking it apart can be a good solution

00:51:43,790 --> 00:51:47,270
you know containers I think are

00:51:45,980 --> 00:51:48,950
increasingly a solution that people are

00:51:47,270 --> 00:51:51,770
looking to because it provides that

00:51:48,950 --> 00:51:53,990
segmentation but you know it's a

00:51:51,770 --> 00:51:56,060
back-and-forth how do you keep

00:51:53,990 --> 00:51:58,940
everything up to date give everybody the

00:51:56,060 --> 00:52:03,410
permissions that they want you know and

00:51:58,940 --> 00:52:08,540
satisfy your clients needs okay thanks

00:52:03,410 --> 00:52:10,070
good all righty um well i think you know

00:52:08,540 --> 00:52:11,840
michael and i will will still be here

00:52:10,070 --> 00:52:14,060
for questions or discussion if anybody

00:52:11,840 --> 00:52:15,800
wants and other than that you know it's

00:52:14,060 --> 00:52:17,180
nearly lunchtime and then there's the

00:52:15,800 --> 00:52:19,390
buffett noon if you're interested thanks

00:52:17,180 --> 00:52:19,390

YouTube URL: https://www.youtube.com/watch?v=qyEWuo0aFZ8


