Title: DrupalCon Los Angeles 2015: Rendering HTML with Drupal
Publication date: 2015-05-12
Playlist: DrupalCon Los Angeles - May 2015
Description: 
	Is the job of a Drupal theme to look like a design or to be the design? Is your goal to make pixel perfect replica of a static comp or do you want to design in the browser? Should you edit the CSS or edit the markup?

Drupal makes a lot of assumptions about how these questions are answered.

This presentation will review the mental models used in Drupal theming and proposal a workable path forward. For years, Drupal core has encouraged a mindset of altering and overriding its internal data structures. Developers in the Drupal 6 era created a philosophy called “sustainable theming” that relied heavily on CSS to work best with Core’s tendencies. The rapid acceleration in the wider Front-End community in recent years has brought new underlying assumptions and new ways of thinking. Expectations for how to construct Drupal sites have changed.

The given conditions and implications of four rendering philosophies will be examined:

The Past: “Sustainable Theming” - Accept default Drupal markup as much as possible and use CSS to make the site look like the Photoshop design.

The (past-ish) Present: Chasing "easy" / losing "simple" - Make field formatters, Views plugins and other reusable components in addition to using overrides and preprocessing.

The (future-ish) Present: Making the markup match - Responsive designs are done in static prototypes/style guides; make Drupal print the same design components.

The Future: Clear decoupling - Javascript MVC frameworks, Web Components and some traditional HTML frameworks have encapsulated Front-End pieces that can work with multiple data providers. Make Drupal’s components be those components.

Finally, the phrase "Headless Drupal" will come up at least a dozen times.

Slides: http://palantirnet.github.io/slides-drupal-html/2015-05-index.html
Captions: 
	00:00:00,000 --> 00:00:04,319
Carol will be quoting later in the

00:00:02,310 --> 00:00:07,140
session is giving a presentation today

00:00:04,319 --> 00:00:08,849
at five on recruiting strategies Larry

00:00:07,140 --> 00:00:10,769
Garfield who all be quoting a couple

00:00:08,849 --> 00:00:13,040
times as well as giving a few

00:00:10,769 --> 00:00:16,980
presentations over the course of the

00:00:13,040 --> 00:00:20,070
convention so first a caveat the future

00:00:16,980 --> 00:00:21,930
is here it's already here it's just not

00:00:20,070 --> 00:00:23,640
evenly distributed so i'll be talking

00:00:21,930 --> 00:00:25,680
about a lot of ideas a lot of mental

00:00:23,640 --> 00:00:28,859
models used in drupal theming i'll be

00:00:25,680 --> 00:00:31,260
calling some past some present some

00:00:28,859 --> 00:00:33,210
future the caveat that i want to give is

00:00:31,260 --> 00:00:36,239
that the ideas themselves are not

00:00:33,210 --> 00:00:38,340
necessarily old or new ideas but the

00:00:36,239 --> 00:00:40,469
given given circumstances surrounding

00:00:38,340 --> 00:00:43,020
previous versions of drupal surrounding

00:00:40,469 --> 00:00:45,719
the current version of Drupal Drupal 7

00:00:43,020 --> 00:00:48,570
surrounding Drupal 8 those circumstances

00:00:45,719 --> 00:00:51,989
make certain mental models easier to use

00:00:48,570 --> 00:00:55,140
more advantageous so i'll be i'll be

00:00:51,989 --> 00:00:58,260
speaking from a perspective informed by

00:00:55,140 --> 00:01:04,199
my work at palantir as well as in the

00:00:58,260 --> 00:01:07,500
Drupal community so in in Drupal and in

00:01:04,199 --> 00:01:10,110
web development in general trying to

00:01:07,500 --> 00:01:12,530
advance a slide here so far it's not

00:01:10,110 --> 00:01:12,530
working

00:01:17,530 --> 00:01:20,530
hmm

00:01:24,980 --> 00:01:35,780
there we go what are we doing good

00:01:29,840 --> 00:01:37,750
question what are we doing web

00:01:35,780 --> 00:01:40,070
programming is the science of

00:01:37,750 --> 00:01:43,600
increasingly complicated ways of

00:01:40,070 --> 00:01:46,600
concatenated strings and by this measure

00:01:43,600 --> 00:01:49,130
Drupal developers are really really good

00:01:46,600 --> 00:01:53,240
scientists we have some incredibly

00:01:49,130 --> 00:01:56,120
complex ways of concatenated strings so

00:01:53,240 --> 00:02:00,950
let's talk about our main concatenate ER

00:01:56,120 --> 00:02:03,740
in the Drupal world the theme function

00:02:00,950 --> 00:02:05,630
it's been in Drupal for a really long

00:02:03,740 --> 00:02:08,840
time and let's look at one of the oldest

00:02:05,630 --> 00:02:11,000
examples of a theme function theme item

00:02:08,840 --> 00:02:13,960
list it's been in Drupal all the way

00:02:11,000 --> 00:02:15,880
since 2002 I was glad to hear Drupal

00:02:13,960 --> 00:02:19,160
history this morning in the jury's

00:02:15,880 --> 00:02:21,380
keynote hearing about those ideas that

00:02:19,160 --> 00:02:23,270
were present in very early versions of

00:02:21,380 --> 00:02:25,520
Drupal that we still have now and theme

00:02:23,270 --> 00:02:29,720
item list is one of those very early

00:02:25,520 --> 00:02:32,390
concepts basically we have a PHP array I

00:02:29,720 --> 00:02:35,330
can make a list of items to get from the

00:02:32,390 --> 00:02:39,110
grocery store I can get fruit bread

00:02:35,330 --> 00:02:40,880
cheese meat I can make a PHP array I can

00:02:39,110 --> 00:02:45,470
then pass it on to the theme function

00:02:40,880 --> 00:02:46,610
and I get an HTML unordered list of what

00:02:45,470 --> 00:02:50,239
I'm going to get from the grocery store

00:02:46,610 --> 00:02:52,459
so the basic idea with theme item list

00:02:50,239 --> 00:02:54,950
and the theme system in general spend

00:02:52,459 --> 00:02:57,350
the same for over a decade now you tell

00:02:54,950 --> 00:02:59,750
the theme system I would like an item

00:02:57,350 --> 00:03:02,180
list please you give it the variables

00:02:59,750 --> 00:03:05,180
that you want to be used in that item

00:03:02,180 --> 00:03:09,650
list the theme system will then call the

00:03:05,180 --> 00:03:12,500
function theme item list or if you want

00:03:09,650 --> 00:03:15,470
you can override that function with my

00:03:12,500 --> 00:03:17,180
site theme item list and that function

00:03:15,470 --> 00:03:20,420
is going to take those variables passed

00:03:17,180 --> 00:03:22,790
in that PHP array and wrap them in some

00:03:20,420 --> 00:03:25,160
HTML markup and you get an unordered

00:03:22,790 --> 00:03:27,709
list so a pretty simple idea again we've

00:03:25,160 --> 00:03:29,870
had it for years and years but it can

00:03:27,709 --> 00:03:32,060
get really complicated really quickly

00:03:29,870 --> 00:03:34,880
let's take the case of theming a note

00:03:32,060 --> 00:03:38,600
something a lot of us do every single

00:03:34,880 --> 00:03:40,820
day on the surface it might look simple

00:03:38,600 --> 00:03:43,700
you can load a node with the node load

00:03:40,820 --> 00:03:45,860
function get the ID get your node and

00:03:43,700 --> 00:03:48,020
then you tell the theme system I would

00:03:45,860 --> 00:03:51,020
like to theme a node please and what

00:03:48,020 --> 00:03:54,290
you'll get back is a string of your

00:03:51,020 --> 00:03:58,340
printed node but it looks like this it

00:03:54,290 --> 00:04:02,960
is a whole lot of divs a whole lot of

00:03:58,340 --> 00:04:05,990
CSS classes and we get exposed in CSS

00:04:02,960 --> 00:04:09,230
classes each internal Drupal

00:04:05,990 --> 00:04:12,230
understanding layer we get a class for

00:04:09,230 --> 00:04:14,840
the for the name of the field we get a

00:04:12,230 --> 00:04:17,239
class for the Drupal type of field all

00:04:14,840 --> 00:04:20,390
of these internal layers of Drupal ours

00:04:17,239 --> 00:04:22,100
are exposed in markup so the basic idea

00:04:20,390 --> 00:04:24,290
with theming a note is again you say i

00:04:22,100 --> 00:04:28,880
would like to theme a note please here's

00:04:24,290 --> 00:04:31,040
my note object the pre process system

00:04:28,880 --> 00:04:32,660
will then make that note actually

00:04:31,040 --> 00:04:35,510
printable because what you're passing in

00:04:32,660 --> 00:04:38,210
is a raw node object it is not at all

00:04:35,510 --> 00:04:42,590
ready for printing yet if in this markup

00:04:38,210 --> 00:04:44,300
we saw the user name of the author of

00:04:42,590 --> 00:04:46,580
the note well the note object doesn't

00:04:44,300 --> 00:04:49,640
have that with a note object has is you

00:04:46,580 --> 00:04:52,310
ID 123 so to get that markup ready to be

00:04:49,640 --> 00:04:56,840
printed the pre process system has to do

00:04:52,310 --> 00:04:59,720
a ton of work before you actually get to

00:04:56,840 --> 00:05:02,240
know TPL dot PHP or the rendering

00:04:59,720 --> 00:05:04,160
finally happens and again if you want

00:05:02,240 --> 00:05:07,010
you can override with node hyphen hyphen

00:05:04,160 --> 00:05:09,650
blog post if your note as a blog post or

00:05:07,010 --> 00:05:11,810
node hyphen hyphen blog post hyphen

00:05:09,650 --> 00:05:15,440
hyphen teaser if it's a blog post teaser

00:05:11,810 --> 00:05:17,360
again we're using those Drupal internal

00:05:15,440 --> 00:05:19,970
understandings to inform our theme

00:05:17,360 --> 00:05:22,460
system the name of your template is the

00:05:19,970 --> 00:05:26,990
name of the content type plus perhaps

00:05:22,460 --> 00:05:31,100
the name of the view mode so in the

00:05:26,990 --> 00:05:33,650
Drupal 6 Drupal 7 and all the way back

00:05:31,100 --> 00:05:36,140
to Drupal 5 era internally at palantir

00:05:33,650 --> 00:05:39,500
we called this era sustainable theming

00:05:36,140 --> 00:05:41,540
and I'll let Colleen Carol one of our

00:05:39,500 --> 00:05:43,850
front-end developers at the time now our

00:05:41,540 --> 00:05:45,800
director of operations described the

00:05:43,850 --> 00:05:48,710
goals of sustainable theming so we

00:05:45,800 --> 00:05:51,740
wanted a an extensible design that could

00:05:48,710 --> 00:05:52,500
continue to evolve without a developer

00:05:51,740 --> 00:05:54,150
they're all the

00:05:52,500 --> 00:05:57,150
time we want to design our theme that

00:05:54,150 --> 00:05:59,010
can stay intact as the site grows and

00:05:57,150 --> 00:06:03,510
grows these are really good goals there

00:05:59,010 --> 00:06:05,760
are goals back in 2008-2009 and their

00:06:03,510 --> 00:06:07,260
goals now we still want these things we

00:06:05,760 --> 00:06:09,750
still want to be able to evolve our

00:06:07,260 --> 00:06:11,280
designs we want them to be stable but

00:06:09,750 --> 00:06:13,110
the way we went about achieving those

00:06:11,280 --> 00:06:15,810
goals was different in the Drupal 5 in

00:06:13,110 --> 00:06:17,640
Drupal 6 era because of some different

00:06:15,810 --> 00:06:20,880
conditions that were were present then

00:06:17,640 --> 00:06:23,280
that have changed now so in the past was

00:06:20,880 --> 00:06:27,750
a given that your designs would be in a

00:06:23,280 --> 00:06:30,960
JPEG or a PSD or a PDF something that is

00:06:27,750 --> 00:06:35,520
not a website something that's not HTML

00:06:30,960 --> 00:06:38,430
or CSS so you start with a jpg or PSD

00:06:35,520 --> 00:06:42,800
and anything you do in Drupal is going

00:06:38,430 --> 00:06:45,540
to give you a ton of HTML for free

00:06:42,800 --> 00:06:49,200
whether you want it or not you're going

00:06:45,540 --> 00:06:51,620
to get a ton of HTML and when i was

00:06:49,200 --> 00:06:53,820
first building drupal websites in

00:06:51,620 --> 00:06:55,200
2007-2008 I thought this was great

00:06:53,820 --> 00:06:58,340
because I didn't particularly like

00:06:55,200 --> 00:07:00,450
writing markup from scratch I liked that

00:06:58,340 --> 00:07:04,979
Drupal just gave me all this for free

00:07:00,450 --> 00:07:08,640
and all of more more CSS classes than I

00:07:04,979 --> 00:07:10,470
could ever ask for it was a given in the

00:07:08,640 --> 00:07:13,770
Drupal 5 era that there were no pre

00:07:10,470 --> 00:07:16,620
processes on theme functions so CSS

00:07:13,770 --> 00:07:19,290
classes were a lot harder to change so

00:07:16,620 --> 00:07:21,450
you get all this markup for free you get

00:07:19,290 --> 00:07:23,880
all these CSS classes but if you want to

00:07:21,450 --> 00:07:27,810
change them it's going to be hard so

00:07:23,880 --> 00:07:31,470
don't in the Drupal 5 arrow we didn't

00:07:27,810 --> 00:07:33,450
have the easy addition of multiple view

00:07:31,470 --> 00:07:36,000
modes that we have now unknowns that's a

00:07:33,450 --> 00:07:38,669
core site building tool in Drupal 7

00:07:36,000 --> 00:07:40,979
adding multiple view modes to display a

00:07:38,669 --> 00:07:43,500
note in in different formats in the

00:07:40,979 --> 00:07:47,160
Drupal 5 error you had full you had

00:07:43,500 --> 00:07:50,610
teaser so it became common to just use

00:07:47,160 --> 00:07:54,090
other CSS hints on a given page maybe a

00:07:50,610 --> 00:07:57,660
CSS class on your body tag maybe a CSS

00:07:54,090 --> 00:08:03,360
class on your view to do what we now do

00:07:57,660 --> 00:08:06,350
in view modes so Colleen summed it up in

00:08:03,360 --> 00:08:09,320
2009 saying Drupal is not

00:08:06,350 --> 00:08:12,110
a build a template first system it's an

00:08:09,320 --> 00:08:13,970
install a module and theme it system you

00:08:12,110 --> 00:08:16,640
construct your website and then you

00:08:13,970 --> 00:08:20,150
theme it you don't start with your ideal

00:08:16,640 --> 00:08:23,690
markup George de met I one of the owners

00:08:20,150 --> 00:08:27,350
of palantir in 2008 said do as much as

00:08:23,690 --> 00:08:30,590
possible in CSS don't touch your tea pls

00:08:27,350 --> 00:08:32,270
don't touch template dot PHP the

00:08:30,590 --> 00:08:34,310
advantage here is it's more portable

00:08:32,270 --> 00:08:36,770
more upgradable and ultimately more

00:08:34,310 --> 00:08:38,720
maintainable these again are all the

00:08:36,770 --> 00:08:40,789
goals that we want we want our designs

00:08:38,720 --> 00:08:43,210
to be maintainable we want to be able to

00:08:40,789 --> 00:08:45,530
upgrade we want to move them around

00:08:43,210 --> 00:08:48,460
again the way we went about achieving

00:08:45,530 --> 00:08:52,100
that was very different in 2008-2009

00:08:48,460 --> 00:08:55,700
Colleen again don't fiddle with the HTML

00:08:52,100 --> 00:08:58,760
at all it's not worth it everything can

00:08:55,700 --> 00:09:01,550
be done with CSS and should be this was

00:08:58,760 --> 00:09:03,740
the attitude that we had in 2009 so what

00:09:01,550 --> 00:09:06,040
does this CSS look like what kind of CSS

00:09:03,740 --> 00:09:10,400
do you write if if this is your attitude

00:09:06,040 --> 00:09:12,770
you get CSS written around field hyphen

00:09:10,400 --> 00:09:14,480
field headline and from a certain

00:09:12,770 --> 00:09:17,210
perspective this is a great selector

00:09:14,480 --> 00:09:18,710
this tells me so much about how this

00:09:17,210 --> 00:09:21,020
site is built this tells me that this

00:09:18,710 --> 00:09:23,740
element is coming from the field module

00:09:21,020 --> 00:09:26,870
and the name of this field is field

00:09:23,740 --> 00:09:29,750
underscore headline that's really useful

00:09:26,870 --> 00:09:33,260
and descriptive if you know how Drupal

00:09:29,750 --> 00:09:35,150
generates these classes if you know how

00:09:33,260 --> 00:09:37,730
the views module generates its classes

00:09:35,150 --> 00:09:39,920
than the class views hyphen field hyphen

00:09:37,730 --> 00:09:41,900
field hyphen headline hyphen value is a

00:09:39,920 --> 00:09:44,150
really great selector because it tells

00:09:41,900 --> 00:09:46,550
you that this class comes from the views

00:09:44,150 --> 00:09:48,560
module the views module is calling the

00:09:46,550 --> 00:09:51,500
field module it's calling the field

00:09:48,560 --> 00:09:54,650
field headline specifically the database

00:09:51,500 --> 00:09:58,490
column value this is a really really

00:09:54,650 --> 00:10:01,730
descriptive CSS class so in a world

00:09:58,490 --> 00:10:04,190
where CSS is your API to the browser the

00:10:01,730 --> 00:10:07,190
more CSS selectors you have to choose

00:10:04,190 --> 00:10:09,980
from the better and drupal has more than

00:10:07,190 --> 00:10:11,750
you could ever ask for the more divs the

00:10:09,980 --> 00:10:14,090
better because you don't know

00:10:11,750 --> 00:10:16,130
necessarily which divs you want to use

00:10:14,090 --> 00:10:18,330
throw more in there give you more

00:10:16,130 --> 00:10:21,600
options

00:10:18,330 --> 00:10:24,700
the longer the class names the better

00:10:21,600 --> 00:10:28,000
long multi element selectors get very

00:10:24,700 --> 00:10:31,560
tempting I use CSS classes on the body

00:10:28,000 --> 00:10:34,210
feet on the body tag all the time in

00:10:31,560 --> 00:10:38,170
2008-2009 because they gave me hints as

00:10:34,210 --> 00:10:40,750
to what was going on so Drupal core

00:10:38,170 --> 00:10:44,710
exposes internal data model layers as

00:10:40,750 --> 00:10:49,210
wrapping HTH HTML elements so in this

00:10:44,710 --> 00:10:52,510
era oh I've skipped ahead in this era

00:10:49,210 --> 00:10:55,060
what are we doing we're making Drupal

00:10:52,510 --> 00:10:57,460
elements look like our designs remember

00:10:55,060 --> 00:11:00,520
in this era our designs are in PSD is

00:10:57,460 --> 00:11:03,430
there in JPEGs our best hope our best

00:11:00,520 --> 00:11:05,080
hope is to look like those PSD's and

00:11:03,430 --> 00:11:07,450
JPEGs because there is not going to be

00:11:05,080 --> 00:11:10,420
pixel perfect we want to make them look

00:11:07,450 --> 00:11:12,220
as close as possible because they can't

00:11:10,420 --> 00:11:14,530
be the designs the designs are in

00:11:12,220 --> 00:11:17,440
Photoshop this reminds me of Stephen

00:11:14,530 --> 00:11:20,650
Colbert he had a Latin phrase above his

00:11:17,440 --> 00:11:24,400
fireplace and it translated into two

00:11:20,650 --> 00:11:25,960
seemed to be rather than to be this is

00:11:24,400 --> 00:11:28,630
an inversion of the north carolina state

00:11:25,960 --> 00:11:31,240
motto which emphasized being something

00:11:28,630 --> 00:11:33,700
rather than seeming to be or appearing

00:11:31,240 --> 00:11:36,940
to be but in the Drupal 8 sorry the

00:11:33,700 --> 00:11:39,130
Drupal 6 Drupal 5 era your best hope is

00:11:36,940 --> 00:11:41,260
to seem like the design because you

00:11:39,130 --> 00:11:43,990
don't even have the option to be the

00:11:41,260 --> 00:11:47,110
design now as we move forward in time

00:11:43,990 --> 00:11:49,140
that starts to change a little bit we're

00:11:47,110 --> 00:11:52,210
going to talk now about the past ish

00:11:49,140 --> 00:11:55,480
present where we started chasing easy

00:11:52,210 --> 00:11:57,880
and losing the simplicity of our of our

00:11:55,480 --> 00:12:00,640
philosophy so just as sustainable

00:11:57,880 --> 00:12:03,610
theming as a philosophy was was coming

00:12:00,640 --> 00:12:05,800
into the world in 2008-2009 another

00:12:03,610 --> 00:12:07,750
palantir II Larry Garfield wrote a blog

00:12:05,800 --> 00:12:09,880
post called sustainable building blocks

00:12:07,750 --> 00:12:13,300
where he talked about another strategy

00:12:09,880 --> 00:12:15,010
to control your markup in Drupal he

00:12:13,300 --> 00:12:17,620
talked about writing field for matters

00:12:15,010 --> 00:12:19,750
and views display plugins rather than

00:12:17,620 --> 00:12:21,430
overriding those template files if you

00:12:19,750 --> 00:12:23,350
do that if you right field for matters

00:12:21,430 --> 00:12:25,930
and views display plugins your work is

00:12:23,350 --> 00:12:28,810
going to be more encapsulated portable

00:12:25,930 --> 00:12:31,130
flexible again all great goals all what

00:12:28,810 --> 00:12:35,290
we still want we still want these things

00:12:31,130 --> 00:12:38,210
so Larry suggested right more plugins

00:12:35,290 --> 00:12:40,850
don't don't override those templates

00:12:38,210 --> 00:12:44,480
build a view style plugin or a display

00:12:40,850 --> 00:12:47,480
hander or an argument handler by show of

00:12:44,480 --> 00:12:51,770
hands who wrote a views plugin of some

00:12:47,480 --> 00:12:54,950
kind for slideshows great so many people

00:12:51,770 --> 00:12:59,180
I did too Larry wrote one called a view

00:12:54,950 --> 00:13:01,880
cycle module and here we have markup

00:12:59,180 --> 00:13:05,390
classes that tell us this is going to be

00:13:01,880 --> 00:13:09,380
a jQuery cycle the classes we see here

00:13:05,390 --> 00:13:13,130
are views cycle this isn't a class named

00:13:09,380 --> 00:13:15,380
after a site-specific field it's not a

00:13:13,130 --> 00:13:17,590
class named after the name of the view

00:13:15,380 --> 00:13:21,640
you configured yourself this tells you

00:13:17,590 --> 00:13:24,320
I'm a I'm a cycle that's what I am now

00:13:21,640 --> 00:13:26,270
there's a trade-off here as Larry said

00:13:24,320 --> 00:13:28,580
in that same blog post it's another API

00:13:26,270 --> 00:13:30,830
to learn but if you if you learned that

00:13:28,580 --> 00:13:33,080
API you can make something cleaner more

00:13:30,830 --> 00:13:36,130
extensible and you can reuse it again on

00:13:33,080 --> 00:13:40,010
your next projects because in 2008-2009

00:13:36,130 --> 00:13:41,630
everybody wants jquery cycle so brings

00:13:40,010 --> 00:13:47,120
me again to the question what are we

00:13:41,630 --> 00:13:51,800
doing are we writing CSS to make a view

00:13:47,120 --> 00:13:55,310
look like a slideshow or are we writing

00:13:51,800 --> 00:13:59,600
a display plugin to make a view be a

00:13:55,310 --> 00:14:01,940
slideshow and it drupal 7 the theme

00:13:59,600 --> 00:14:04,670
systems complexity clouds this question

00:14:01,940 --> 00:14:06,590
it can be easy to work with drupal 7 and

00:14:04,670 --> 00:14:10,520
not realize that this question is even

00:14:06,590 --> 00:14:13,490
there you just have the task you know we

00:14:10,520 --> 00:14:15,470
need a slideshow if you as a developer

00:14:13,490 --> 00:14:17,780
know how to write a views plugin that

00:14:15,470 --> 00:14:19,490
might be your go-to but if you're

00:14:17,780 --> 00:14:21,590
someone who's not comfortable writing an

00:14:19,490 --> 00:14:23,960
object-oriented plugin but you're really

00:14:21,590 --> 00:14:25,550
comfortable with CSS then you're going

00:14:23,960 --> 00:14:28,490
to write CSS and maybe a little bit of

00:14:25,550 --> 00:14:30,500
javascript and it'll work but you won't

00:14:28,490 --> 00:14:33,710
you may not necessarily realize that

00:14:30,500 --> 00:14:35,720
there's this dichotomy here and we have

00:14:33,710 --> 00:14:38,600
so many tools and core it's it's hard to

00:14:35,720 --> 00:14:41,360
even realize what lines up with what

00:14:38,600 --> 00:14:43,580
we've got preprocess functions we've got

00:14:41,360 --> 00:14:44,899
process functions we've got theme hook

00:14:43,580 --> 00:14:46,369
suggestions

00:14:44,899 --> 00:14:48,439
anthem functions that you can override

00:14:46,369 --> 00:14:51,110
you can right field for matters you can

00:14:48,439 --> 00:14:53,420
modify markup with hook field extra

00:14:51,110 --> 00:14:54,860
fields you can write new theme functions

00:14:53,420 --> 00:14:57,619
if you want you could use renderer

00:14:54,860 --> 00:15:00,350
arrays and alter them you can even just

00:14:57,619 --> 00:15:04,249
shove things in to hook node load and

00:15:00,350 --> 00:15:07,009
then in contribute it's going to have

00:15:04,249 --> 00:15:09,139
some combination of these tools you

00:15:07,009 --> 00:15:10,970
might have some of the panels sweet you

00:15:09,139 --> 00:15:13,369
might have displaced sweet you might

00:15:10,970 --> 00:15:15,170
have custom views display plugins as

00:15:13,369 --> 00:15:17,689
what as well as some coming from

00:15:15,170 --> 00:15:19,540
contribs you can suppress unwanted gives

00:15:17,689 --> 00:15:22,160
with fences if you don't like all this

00:15:19,540 --> 00:15:26,240
gives and gives and gives you can add

00:15:22,160 --> 00:15:28,490
view modes you can do all kinds of

00:15:26,240 --> 00:15:33,110
things but this is what theming in

00:15:28,490 --> 00:15:37,040
Drupal feels like to me sometimes you're

00:15:33,110 --> 00:15:39,079
dropping your content in at one end it

00:15:37,040 --> 00:15:42,769
goes through a maze of pre process

00:15:39,079 --> 00:15:46,699
process functions suggestions overrides

00:15:42,769 --> 00:15:50,540
and at the end you hope you land where

00:15:46,699 --> 00:15:53,929
you want but maybe you don't you can

00:15:50,540 --> 00:15:57,199
feel like mousetrap setting up the

00:15:53,929 --> 00:15:59,629
perfect ordering of overrides and custom

00:15:57,199 --> 00:16:03,740
for matters to get what you want so

00:15:59,629 --> 00:16:06,559
again what are we doing in this era

00:16:03,740 --> 00:16:10,519
we're doing whatever feels easier not

00:16:06,559 --> 00:16:13,639
necessarily simpler is it simpler to

00:16:10,519 --> 00:16:18,470
write a field for matter or is it

00:16:13,639 --> 00:16:20,269
simpler to override the styling in CSS

00:16:18,470 --> 00:16:23,620
of the formatter you already have or to

00:16:20,269 --> 00:16:26,300
just alter it a little bit in preprocess

00:16:23,620 --> 00:16:29,839
different people will answer easier in

00:16:26,300 --> 00:16:31,490
different ways but we can get we can get

00:16:29,839 --> 00:16:35,779
better at answering simpler more

00:16:31,490 --> 00:16:41,119
consistently as a community now we

00:16:35,779 --> 00:16:44,259
thought about this in 2008-2009 Colleen

00:16:41,119 --> 00:16:49,240
new it's it's not just about whatever

00:16:44,259 --> 00:16:52,040
feels whatever feels easier she knew in

00:16:49,240 --> 00:16:55,329
2009 that sustainable theming would be

00:16:52,040 --> 00:16:57,829
difficult it takes patience it takes

00:16:55,329 --> 00:16:59,089
knowing the inner structure of Drupal

00:16:57,829 --> 00:17:01,600
two theme

00:16:59,089 --> 00:17:04,069
based entirely on those internal

00:17:01,600 --> 00:17:07,069
understanding classes to theme based on

00:17:04,069 --> 00:17:09,799
field hyphen field hyphen headline you

00:17:07,069 --> 00:17:11,689
need to know where that's coming from so

00:17:09,799 --> 00:17:13,699
the sustainable theming mentality relies

00:17:11,689 --> 00:17:17,510
on the themer knowing how the theme

00:17:13,699 --> 00:17:22,370
system works but how many people in the

00:17:17,510 --> 00:17:24,829
world know how this diagram works John

00:17:22,370 --> 00:17:30,830
does John made the diagram John knows

00:17:24,829 --> 00:17:35,120
how it works but not everybody so in

00:17:30,830 --> 00:17:38,059
chasing easy we lost simple now that

00:17:35,120 --> 00:17:39,830
brings us to the future ish present the

00:17:38,059 --> 00:17:42,260
air at palantir where we're making the

00:17:39,830 --> 00:17:45,470
markup match and again our Givens have

00:17:42,260 --> 00:17:47,000
changed so it's become a given in the

00:17:45,470 --> 00:17:51,289
past few years that all of our clients

00:17:47,000 --> 00:17:53,539
want a responsive site so if everybody

00:17:51,289 --> 00:17:55,520
wants a responsive site that that tells

00:17:53,539 --> 00:17:58,190
us well then our designers need to do at

00:17:55,520 --> 00:17:59,840
least a little bit in CSS you can no

00:17:58,190 --> 00:18:01,789
longer say that you've designed a

00:17:59,840 --> 00:18:03,860
website if all you've done is made a

00:18:01,789 --> 00:18:06,500
picture of a website in Photoshop

00:18:03,860 --> 00:18:09,110
designing a website at this point now

00:18:06,500 --> 00:18:11,779
requires doing at least some work in CSS

00:18:09,110 --> 00:18:13,520
to give an indication of how's this site

00:18:11,779 --> 00:18:17,120
going to respond at different

00:18:13,520 --> 00:18:19,159
breakpoints this this website for the

00:18:17,120 --> 00:18:21,140
University of Michigan's health system

00:18:19,159 --> 00:18:22,789
was one of our first responsive projects

00:18:21,140 --> 00:18:24,950
and our designers knew right away that

00:18:22,789 --> 00:18:26,149
to say that they had designed this site

00:18:24,950 --> 00:18:28,820
they would need to get their hands dirty

00:18:26,149 --> 00:18:30,740
in CSS and figure out how are these

00:18:28,820 --> 00:18:33,860
menus how are these headlines how are

00:18:30,740 --> 00:18:35,240
these images embedded in body fields how

00:18:33,860 --> 00:18:38,330
are they going to respond as we move

00:18:35,240 --> 00:18:41,480
from a desktop size to a tablet size to

00:18:38,330 --> 00:18:44,149
a mobile size so if it's then a given

00:18:41,480 --> 00:18:47,210
that our designers are doing at least

00:18:44,149 --> 00:18:50,929
some work in HTML and CSS do we even

00:18:47,210 --> 00:18:53,299
want drupal's HTML and CSS this is a

00:18:50,929 --> 00:18:55,909
question we've wrestled with for a

00:18:53,299 --> 00:18:59,059
couple years now at palantir if we're

00:18:55,909 --> 00:19:01,070
getting some level of CSS and HTML from

00:18:59,059 --> 00:19:03,380
our designers and with each project that

00:19:01,070 --> 00:19:06,230
CSS and HTML gets better and better and

00:19:03,380 --> 00:19:07,700
better what do we need drupal's for

00:19:06,230 --> 00:19:09,260
those first couple projects we did

00:19:07,700 --> 00:19:12,380
responsively we would have designers

00:19:09,260 --> 00:19:13,170
write some HTML and CSS and then we'd

00:19:12,380 --> 00:19:15,090
say great

00:19:13,170 --> 00:19:16,260
Thanks we're going to copy this into a

00:19:15,090 --> 00:19:18,240
drupal theme we're going to start

00:19:16,260 --> 00:19:22,170
modifying it and then we have basically

00:19:18,240 --> 00:19:24,960
two versions of our CSS yeah the one the

00:19:22,170 --> 00:19:28,050
the designers wrote in a prototype and

00:19:24,960 --> 00:19:30,600
then the real version and in Drupal and

00:19:28,050 --> 00:19:33,510
we quickly realized well this this is a

00:19:30,600 --> 00:19:37,140
bad idea we're writing a CSS twice or

00:19:33,510 --> 00:19:39,720
we're writing it and then forking it so

00:19:37,140 --> 00:19:42,360
if our designers are thinking in design

00:19:39,720 --> 00:19:44,970
components as they are we need to be

00:19:42,360 --> 00:19:47,940
able to implement those design

00:19:44,970 --> 00:19:49,560
components in Drupal and if we can reuse

00:19:47,940 --> 00:19:53,280
exactly the same markup and we use

00:19:49,560 --> 00:19:55,020
exactly the same CSS so this language of

00:19:53,280 --> 00:19:58,530
design components has become our bridge

00:19:55,020 --> 00:20:03,660
between designers and developers our

00:19:58,530 --> 00:20:07,800
designer can say I understand this top

00:20:03,660 --> 00:20:10,490
element as a homepage hero element and a

00:20:07,800 --> 00:20:15,060
drupal developer can say great I

00:20:10,490 --> 00:20:18,390
understand this as a large teaser View

00:20:15,060 --> 00:20:21,480
mode okay great and we can then use that

00:20:18,390 --> 00:20:28,200
common language to bridge one design

00:20:21,480 --> 00:20:29,610
component to one view mode so it's

00:20:28,200 --> 00:20:32,010
becoming a given that our clients are

00:20:29,610 --> 00:20:35,220
wanting living style guides so it's

00:20:32,010 --> 00:20:38,580
become our job to take the style guide

00:20:35,220 --> 00:20:41,160
HTML take the style guide CSS and make

00:20:38,580 --> 00:20:43,860
the Drupal match those design components

00:20:41,160 --> 00:20:46,290
so for a style guide to be truly living

00:20:43,860 --> 00:20:48,750
the CSS and the markup needs to be the

00:20:46,290 --> 00:20:50,280
same in both places and for much more

00:20:48,750 --> 00:20:53,430
detail on this concept I strongly

00:20:50,280 --> 00:20:56,250
recommend going to jons talk tomorrow

00:20:53,430 --> 00:20:59,160
about living style guides so what are we

00:20:56,250 --> 00:21:01,980
doing now we're making the markup match

00:20:59,160 --> 00:21:06,810
and the CSS just works and again we had

00:21:01,980 --> 00:21:08,520
thought about this in 2008-2009 but

00:21:06,810 --> 00:21:10,710
colleen thought this doesn't work very

00:21:08,520 --> 00:21:13,020
well if you just strip everything out of

00:21:10,710 --> 00:21:15,680
your template files in Drupal 5 or

00:21:13,020 --> 00:21:19,640
Drupal 6 it's not going to be

00:21:15,680 --> 00:21:21,900
maintainable by by the clients long term

00:21:19,640 --> 00:21:25,860
but I think we have the technology now

00:21:21,900 --> 00:21:26,400
so if our if our static prototype has a

00:21:25,860 --> 00:21:27,600
design

00:21:26,400 --> 00:21:29,580
and component that looks like this

00:21:27,600 --> 00:21:32,000
relatively simple we've got an image

00:21:29,580 --> 00:21:35,310
we've got a headline we've got a date

00:21:32,000 --> 00:21:38,330
how can we make Drupal print that markup

00:21:35,310 --> 00:21:41,220
if if our designers have written

00:21:38,330 --> 00:21:43,320
semantic HTML with classes that are

00:21:41,220 --> 00:21:45,270
written around their design component

00:21:43,320 --> 00:21:47,730
understanding rather than Drupal

00:21:45,270 --> 00:21:50,400
specific understanding do we have a tool

00:21:47,730 --> 00:21:53,250
in our Drupal tool chest right now that

00:21:50,400 --> 00:21:57,470
can do that we've got panels display

00:21:53,250 --> 00:21:59,790
sweet views display plugins fences a

00:21:57,470 --> 00:22:02,550
palantir we've gone to panels as our

00:21:59,790 --> 00:22:05,190
main tool for mapping between design

00:22:02,550 --> 00:22:08,870
components and Drupal understanding so

00:22:05,190 --> 00:22:12,210
we can take that statically coded

00:22:08,870 --> 00:22:14,760
prototype throw it into a panels layout

00:22:12,210 --> 00:22:20,310
plug in figure out what our variables

00:22:14,760 --> 00:22:23,010
are and then in panels you set what your

00:22:20,310 --> 00:22:26,550
data sources we've got a node coming

00:22:23,010 --> 00:22:28,680
into this a mini panel as it were you

00:22:26,550 --> 00:22:30,630
pick your layout plugin that Illustrated

00:22:28,680 --> 00:22:33,060
list item so again we're mapping the

00:22:30,630 --> 00:22:35,250
design component that our designers are

00:22:33,060 --> 00:22:37,980
calling illustrated list item to a

00:22:35,250 --> 00:22:40,530
panels layout plug-in called illustrated

00:22:37,980 --> 00:22:44,430
list item and then panels gives you a UI

00:22:40,530 --> 00:22:47,430
for lining up your drupal variables to

00:22:44,430 --> 00:22:50,160
your design component variables so we're

00:22:47,430 --> 00:22:52,530
separating raw data from our design

00:22:50,160 --> 00:22:55,650
components the panels layout plugins and

00:22:52,530 --> 00:22:56,820
the the templates they're in and we're

00:22:55,650 --> 00:22:58,410
separating that as well from the

00:22:56,820 --> 00:23:00,590
preparation of those variables how do

00:22:58,410 --> 00:23:02,970
you get from a raw node object to

00:23:00,590 --> 00:23:04,800
something you can print in a template if

00:23:02,970 --> 00:23:07,800
you're working just with Drupal core the

00:23:04,800 --> 00:23:10,020
answer is you right preprocess functions

00:23:07,800 --> 00:23:12,240
and preprocess functions can get

00:23:10,020 --> 00:23:15,300
unwieldy eventually we found that panels

00:23:12,240 --> 00:23:17,430
is a better way to encapsulate that task

00:23:15,300 --> 00:23:19,230
of how do you go from a raw node object

00:23:17,430 --> 00:23:20,970
is something that's ready to print in a

00:23:19,230 --> 00:23:23,310
template and one of the things we like

00:23:20,970 --> 00:23:25,680
about panels is that you can use it at

00:23:23,310 --> 00:23:28,370
multiple layers of Drupal you can use

00:23:25,680 --> 00:23:32,190
the panels everywhere module at the page

00:23:28,370 --> 00:23:34,800
TPL level you can use page manager at

00:23:32,190 --> 00:23:36,510
that hook menu level what happens when

00:23:34,800 --> 00:23:40,090
you go to this URL that's up to hook

00:23:36,510 --> 00:23:42,460
menu you can use panel Iser at the

00:23:40,090 --> 00:23:43,809
you mowed level and you don't if you

00:23:42,460 --> 00:23:46,179
don't want to you don't have to use the

00:23:43,809 --> 00:23:48,940
part of panel Iser that lets editors

00:23:46,179 --> 00:23:50,980
change per node you can just say all

00:23:48,940 --> 00:23:52,990
article teasers are going to use this

00:23:50,980 --> 00:23:56,470
panels configuration and you can use

00:23:52,990 --> 00:23:58,330
many panels app at the block level so

00:23:56,470 --> 00:24:01,539
again in the future ish present we're

00:23:58,330 --> 00:24:05,980
trying to be the design by making the

00:24:01,539 --> 00:24:13,330
markup match but to quote Dumbledore do

00:24:05,980 --> 00:24:14,620
or do not there is no try I'm glad I'm

00:24:13,330 --> 00:24:16,870
glad that got a laugh that's my way of

00:24:14,620 --> 00:24:21,460
seeing if I've lost everybody and and

00:24:16,870 --> 00:24:25,029
you've tuned out so so the future clear

00:24:21,460 --> 00:24:27,880
decoupling headless headless headless

00:24:25,029 --> 00:24:29,470
headless headless headless Drupal in the

00:24:27,880 --> 00:24:32,520
session description I promised at least

00:24:29,470 --> 00:24:34,840
a dozen references to headless Drupal

00:24:32,520 --> 00:24:36,399
everybody's talking about it it's a

00:24:34,840 --> 00:24:40,480
given that we can't stop talking about

00:24:36,399 --> 00:24:43,360
headless Drupal so wikipedia says

00:24:40,480 --> 00:24:45,820
headless software is software capable of

00:24:43,360 --> 00:24:48,490
working on a device without a graphical

00:24:45,820 --> 00:24:50,220
user interface and Drupal has had that

00:24:48,490 --> 00:24:55,390
for a long time we've got to rush that's

00:24:50,220 --> 00:24:56,890
headless Drupal if you ask me but the

00:24:55,390 --> 00:24:58,510
headless community is really talking

00:24:56,890 --> 00:25:01,230
about how can Drupal work with these

00:24:58,510 --> 00:25:04,360
modern front-end tools like Amber

00:25:01,230 --> 00:25:06,789
angular backbone web components

00:25:04,360 --> 00:25:09,520
front-end tools that have a completely

00:25:06,789 --> 00:25:12,460
different mental model from the Drupal

00:25:09,520 --> 00:25:15,460
core mental model of structuring markup

00:25:12,460 --> 00:25:16,750
and and rendering so the question I

00:25:15,460 --> 00:25:19,570
always ask is if you want to make a

00:25:16,750 --> 00:25:21,279
headless horseman you need to know where

00:25:19,570 --> 00:25:23,470
the neck is if we're chopping off

00:25:21,279 --> 00:25:28,390
drupal's head do you chop off the head

00:25:23,470 --> 00:25:30,159
before theme or after theme with item

00:25:28,390 --> 00:25:34,179
list you've got to prepare all your

00:25:30,159 --> 00:25:36,399
variables upfront so an angular

00:25:34,179 --> 00:25:39,360
developer could recreate that item list

00:25:36,399 --> 00:25:42,610
function pretty easily you know from

00:25:39,360 --> 00:25:44,890
from this PHP array basically what's

00:25:42,610 --> 00:25:46,870
expected you know even before you call

00:25:44,890 --> 00:25:50,980
theme what kind of markup you're going

00:25:46,870 --> 00:25:53,860
to get in the case of theme node you

00:25:50,980 --> 00:25:56,679
have no idea what's going to come out of

00:25:53,860 --> 00:25:58,270
that Dean function there could be a pre

00:25:56,679 --> 00:26:00,370
process function that changes everything

00:25:58,270 --> 00:26:02,260
there could be a template function a

00:26:00,370 --> 00:26:05,520
template suggestion that changes

00:26:02,260 --> 00:26:08,620
everything so this this Horseman

00:26:05,520 --> 00:26:10,600
manifesto is calling Drupal out this is

00:26:08,620 --> 00:26:12,940
something that I think was written at

00:26:10,600 --> 00:26:15,549
last drupalcon in Austin the last North

00:26:12,940 --> 00:26:17,230
American one saying that in in Drupal

00:26:15,549 --> 00:26:20,110
today we've got a tendency to conflate

00:26:17,230 --> 00:26:22,360
our data with our controllers we don't

00:26:20,110 --> 00:26:25,270
have a clean separation of where does

00:26:22,360 --> 00:26:27,610
our data stop and where does our

00:26:25,270 --> 00:26:29,470
template begin I think pre-process

00:26:27,610 --> 00:26:32,140
functions are a great example of this

00:26:29,470 --> 00:26:34,450
our pre-processed functions there so you

00:26:32,140 --> 00:26:37,299
can manipulate your data or are they

00:26:34,450 --> 00:26:40,510
there so you can add CSS classes and

00:26:37,299 --> 00:26:42,940
slightly tweaked what it's going to look

00:26:40,510 --> 00:26:44,790
like you can use them for both and I

00:26:42,940 --> 00:26:47,860
think that's I think that's our problem

00:26:44,790 --> 00:26:49,360
or one of our problems anyway so what do

00:26:47,860 --> 00:26:52,770
we do about it the horseman repo

00:26:49,360 --> 00:26:55,299
suggests that we do need a separation of

00:26:52,770 --> 00:26:57,190
presentation and content and we're going

00:26:55,299 --> 00:26:59,710
to need to figure that out in headed

00:26:57,190 --> 00:27:03,520
Drupal in order to make headless Drupal

00:26:59,710 --> 00:27:06,520
work well and I think it's a good thing

00:27:03,520 --> 00:27:08,410
that we have some financial and market

00:27:06,520 --> 00:27:11,230
pressure on this I think clients are

00:27:08,410 --> 00:27:14,140
starting to see the value of decoupling

00:27:11,230 --> 00:27:19,120
a CMS and you can go to sessions this

00:27:14,140 --> 00:27:21,419
week on undie coupling your CMS so to

00:27:19,120 --> 00:27:23,500
take an idea from tadros 9 Kirk

00:27:21,419 --> 00:27:25,210
presentation called the future of the

00:27:23,500 --> 00:27:26,980
CMS he describes the pattern that we've

00:27:25,210 --> 00:27:29,799
been in as in the Drupal community this

00:27:26,980 --> 00:27:31,809
way that it's very common for a site to

00:27:29,799 --> 00:27:33,910
build in Drupal 5 and do a total

00:27:31,809 --> 00:27:36,669
redesign and then you migrate to Drupal

00:27:33,910 --> 00:27:39,610
6 and you do a total redesign and seven

00:27:36,669 --> 00:27:43,150
total redesign on and on and on and each

00:27:39,610 --> 00:27:45,809
time you are redesigning along with

00:27:43,150 --> 00:27:50,650
upgrading your CMS and that's painful

00:27:45,809 --> 00:27:53,500
it's also expensive Topsy's the future

00:27:50,650 --> 00:27:58,030
as a decoupled approach where you can

00:27:53,500 --> 00:28:00,040
redesign your your CMS or at least

00:27:58,030 --> 00:28:03,340
redesign your front end without changing

00:28:00,040 --> 00:28:05,830
the backend CMS and then later upgrade

00:28:03,340 --> 00:28:07,540
to Drupal 8 but don't don't touch your

00:28:05,830 --> 00:28:07,760
front end at all yesterday I was talking

00:28:07,540 --> 00:28:11,660
with

00:28:07,760 --> 00:28:13,880
on who said our editors really like the

00:28:11,660 --> 00:28:16,220
custom tools we've built into the Drupal

00:28:13,880 --> 00:28:19,310
7 editorial experience they think it's

00:28:16,220 --> 00:28:21,740
great but our site is slower than we

00:28:19,310 --> 00:28:23,900
want it to be and it's more complex than

00:28:21,740 --> 00:28:27,140
we want it to be and I said okay well

00:28:23,900 --> 00:28:30,680
then rebuild the front end keep your

00:28:27,140 --> 00:28:32,570
drupal 7 editorial tools rebuild the

00:28:30,680 --> 00:28:36,590
front-end experience and then in a year

00:28:32,570 --> 00:28:39,530
or two slide out drupal 7 slide in

00:28:36,590 --> 00:28:40,640
Drupal 8 and your end users don't even

00:28:39,530 --> 00:28:43,010
have to know because the site will look

00:28:40,640 --> 00:28:46,570
the same now that's really easy for me

00:28:43,010 --> 00:28:49,220
to say over drinks is much harder to do

00:28:46,570 --> 00:28:50,930
actually doing that requires drawing

00:28:49,220 --> 00:28:53,660
that clear line of this is where our

00:28:50,930 --> 00:28:56,840
data ends and this is where the design

00:28:53,660 --> 00:28:59,320
starts so I think it's great that we do

00:28:56,840 --> 00:29:04,340
have have some market pressure here

00:28:59,320 --> 00:29:07,400
because the the front end is is really

00:29:04,340 --> 00:29:10,460
moving so much faster than things on the

00:29:07,400 --> 00:29:12,620
server side right now so it's a given

00:29:10,460 --> 00:29:15,290
that these front end tools that are

00:29:12,620 --> 00:29:17,750
evolving faster and faster have

00:29:15,290 --> 00:29:19,700
different patterns and it's also I think

00:29:17,750 --> 00:29:22,070
a given that as the Drupal community we

00:29:19,700 --> 00:29:23,840
can't pick any winners we're not in a

00:29:22,070 --> 00:29:25,910
position we're not moving fast enough to

00:29:23,840 --> 00:29:27,800
say web components are going to be the

00:29:25,910 --> 00:29:30,290
winner or angular is going to be the

00:29:27,800 --> 00:29:31,910
winner we're going to tailor everything

00:29:30,290 --> 00:29:33,910
towards angular so instead we have to

00:29:31,910 --> 00:29:36,590
look for what patterns are there

00:29:33,910 --> 00:29:37,880
encapsulation I think a common thread in

00:29:36,590 --> 00:29:40,870
these front-end tools is that they have

00:29:37,880 --> 00:29:44,360
a different way of encapsulating a

00:29:40,870 --> 00:29:46,460
front-end thing in web components it is

00:29:44,360 --> 00:29:49,850
the single web component that is the

00:29:46,460 --> 00:29:52,280
encapsulation they expect a different

00:29:49,850 --> 00:29:55,430
kind of data binding and a lot of them

00:29:52,280 --> 00:29:59,540
expect two-way data binding which is a

00:29:55,430 --> 00:30:01,160
concept that I that I think we're

00:29:59,540 --> 00:30:05,660
implementing in a certain fashion in

00:30:01,160 --> 00:30:09,640
Drupal 8 with in place editing but I

00:30:05,660 --> 00:30:12,500
imagine we could be doing it even better

00:30:09,640 --> 00:30:14,120
interfaces this is something that has

00:30:12,500 --> 00:30:16,580
been extremely successful on the server

00:30:14,120 --> 00:30:20,450
side in Drupal 8 the idea that we can

00:30:16,580 --> 00:30:21,140
rely on third-party code like the HTTP

00:30:20,450 --> 00:30:22,820
colonel

00:30:21,140 --> 00:30:24,500
and all we need to know is the HTTP

00:30:22,820 --> 00:30:26,720
Colonels interface and then our

00:30:24,500 --> 00:30:28,340
dependency injection container and wire

00:30:26,720 --> 00:30:31,490
everything up I think we're going to get

00:30:28,340 --> 00:30:33,530
to that pattern on the front end can we

00:30:31,490 --> 00:30:36,110
imagine replacing our administrative

00:30:33,530 --> 00:30:38,210
tool bar with an administrative tool bar

00:30:36,110 --> 00:30:40,520
web component that wasn't even written

00:30:38,210 --> 00:30:42,200
with an awareness of Drupal it's

00:30:40,520 --> 00:30:45,140
conceivable but for that to work we

00:30:42,200 --> 00:30:47,240
would need to know what does our toolbar

00:30:45,140 --> 00:30:49,460
really rely on we know it's a list of

00:30:47,240 --> 00:30:51,680
links but what does it really truly rely

00:30:49,460 --> 00:30:54,500
on and I think the interface is the

00:30:51,680 --> 00:30:57,560
pattern there they have different ways

00:30:54,500 --> 00:31:01,490
of doing extension twig has its own way

00:30:57,560 --> 00:31:02,810
of doing extension web components have

00:31:01,490 --> 00:31:03,950
their own way of doing extension and

00:31:02,810 --> 00:31:07,430
this is a concept that really isn't

00:31:03,950 --> 00:31:09,160
present in in earlier versions of Drupal

00:31:07,430 --> 00:31:10,820
there isn't really the concept of

00:31:09,160 --> 00:31:13,090
extending there's a concept of

00:31:10,820 --> 00:31:16,730
overriding but if you override your node

00:31:13,090 --> 00:31:19,400
TPL with node hyphen hyphen blog you're

00:31:16,730 --> 00:31:20,960
redoing everything on a certain level

00:31:19,400 --> 00:31:23,810
you're overriding but there's really not

00:31:20,960 --> 00:31:26,560
much of a connection between the two so

00:31:23,810 --> 00:31:29,390
in this future era what are we doing

00:31:26,560 --> 00:31:33,470
we're pulling usable variables into

00:31:29,390 --> 00:31:35,120
independent design components and what

00:31:33,470 --> 00:31:37,010
what will tell us that we're moving

00:31:35,120 --> 00:31:39,020
towards the future if you can draw a

00:31:37,010 --> 00:31:41,210
clear line between your data and your

00:31:39,020 --> 00:31:43,490
presentation I think you're moving

00:31:41,210 --> 00:31:45,980
towards the future if your design

00:31:43,490 --> 00:31:47,540
components are defined in one place if

00:31:45,980 --> 00:31:50,240
you can have a static prototype that

00:31:47,540 --> 00:31:51,770
design defines your design component and

00:31:50,240 --> 00:31:54,500
you don't have to completely redo them

00:31:51,770 --> 00:31:56,170
for Drupal that's a great sign if you

00:31:54,500 --> 00:31:59,390
can name your design components

00:31:56,170 --> 00:32:02,450
independent of Drupal if your template

00:31:59,390 --> 00:32:06,260
file is no dot TPL that tells you it's

00:32:02,450 --> 00:32:08,770
coupled to the node system I'm hearing

00:32:06,260 --> 00:32:11,690
more and more anecdotes about

00:32:08,770 --> 00:32:13,010
multidisciplinary teams that have

00:32:11,690 --> 00:32:15,170
front-end developers that know nothing

00:32:13,010 --> 00:32:17,090
about Drupal and we shouldn't make them

00:32:15,170 --> 00:32:19,640
name their template files after drupal's

00:32:17,090 --> 00:32:21,640
internal data structures so if your

00:32:19,640 --> 00:32:24,350
templates and your functions are named

00:32:21,640 --> 00:32:26,390
for those independent design components

00:32:24,350 --> 00:32:29,000
you know illustrated list item instead

00:32:26,390 --> 00:32:30,800
of node hyphen hyphen article hyphen

00:32:29,000 --> 00:32:32,780
hyphen teaser that tells you you're

00:32:30,800 --> 00:32:35,000
moving in the right direction and if you

00:32:32,780 --> 00:32:38,120
can make changes to your HTM

00:32:35,000 --> 00:32:41,510
your CSS or JavaScript outside of Drupal

00:32:38,120 --> 00:32:42,590
and have it just work inside of Drupal

00:32:41,510 --> 00:32:44,660
you're moving in the right direction

00:32:42,590 --> 00:32:48,950
just as we could make a change to the

00:32:44,660 --> 00:32:50,950
HTTP colonel in symphony and have it

00:32:48,950 --> 00:32:53,240
just work when we bring it back into

00:32:50,950 --> 00:32:57,470
Drupal we're moving in the right

00:32:53,240 --> 00:32:59,450
direction if you can imagine a front-end

00:32:57,470 --> 00:33:02,570
developer on a Drupal project not

00:32:59,450 --> 00:33:04,250
knowing PHP this is a hard one I found

00:33:02,570 --> 00:33:05,600
that to be a successful front-end

00:33:04,250 --> 00:33:07,490
developer on a traditional Drupal

00:33:05,600 --> 00:33:10,610
project you need to know what render

00:33:07,490 --> 00:33:12,980
arrays are you need to know preprocess

00:33:10,610 --> 00:33:15,110
you need to know something about writing

00:33:12,980 --> 00:33:16,610
field for matters you need to know how

00:33:15,110 --> 00:33:18,680
to write a style plugin you need to know

00:33:16,610 --> 00:33:21,650
how to write a layout plug in these he

00:33:18,680 --> 00:33:24,740
sound like back end tasks but to do

00:33:21,650 --> 00:33:27,350
front-end development in Drupal well you

00:33:24,740 --> 00:33:29,810
need to know a whole lot of PHP I think

00:33:27,350 --> 00:33:32,810
we can move away from that so how can we

00:33:29,810 --> 00:33:34,430
do that at palantir we're doing

00:33:32,810 --> 00:33:36,050
everything we can to get our front-end

00:33:34,430 --> 00:33:38,420
developers and designers working on the

00:33:36,050 --> 00:33:40,070
same thing at the same time some of our

00:33:38,420 --> 00:33:42,080
projects historically structured

00:33:40,070 --> 00:33:43,820
contracts in such a way that we have a

00:33:42,080 --> 00:33:46,130
design phase and we have a development

00:33:43,820 --> 00:33:49,130
phase and we're doing more and more to

00:33:46,130 --> 00:33:51,380
overlap those so that our designers who

00:33:49,130 --> 00:33:53,570
are who are working in market and CSS

00:33:51,380 --> 00:33:54,980
can work with a front-end developer who

00:33:53,570 --> 00:33:58,420
might know more about browser

00:33:54,980 --> 00:34:02,860
compatibility know more about standards

00:33:58,420 --> 00:34:05,530
to do that you often have to pair them

00:34:02,860 --> 00:34:07,490
it's not easy to hire a designer

00:34:05,530 --> 00:34:10,250
expecting them to know everything about

00:34:07,490 --> 00:34:13,040
html5 know everything about JavaScript

00:34:10,250 --> 00:34:15,530
know everything about CSS a way you can

00:34:13,040 --> 00:34:17,389
start training your designers up for for

00:34:15,530 --> 00:34:21,290
this world is by just pairing them with

00:34:17,389 --> 00:34:22,909
a front-end developer at palantir I know

00:34:21,290 --> 00:34:25,639
that our development team is going to

00:34:22,909 --> 00:34:27,620
need to push for the next whatever the

00:34:25,639 --> 00:34:29,960
next thing is our design team has been

00:34:27,620 --> 00:34:33,440
great at emphasizing for us the

00:34:29,960 --> 00:34:35,960
importance of prototypes the importance

00:34:33,440 --> 00:34:38,929
of style guides but for us to take the

00:34:35,960 --> 00:34:41,060
next leap to web components or an all

00:34:38,929 --> 00:34:44,480
angular site that's going to need more

00:34:41,060 --> 00:34:46,700
leadership from our development team if

00:34:44,480 --> 00:34:48,149
our developers are asking themselves am

00:34:46,700 --> 00:34:52,020
I making x

00:34:48,149 --> 00:34:55,139
look like why are making it be why am i

00:34:52,020 --> 00:34:57,359
making my view look like a slideshow am

00:34:55,139 --> 00:34:59,279
I making it be the slideshow that's a

00:34:57,359 --> 00:35:02,369
question you should be asking as much as

00:34:59,279 --> 00:35:05,760
possible if our designers can state the

00:35:02,369 --> 00:35:08,510
data required by each design component

00:35:05,760 --> 00:35:11,700
as we got started in static prototyping

00:35:08,510 --> 00:35:15,000
the D HTML would just get written with

00:35:11,700 --> 00:35:17,609
titles subtitles images hard-coded right

00:35:15,000 --> 00:35:19,890
in and more and more we're asking our

00:35:17,609 --> 00:35:22,710
designers ok so where is this image

00:35:19,890 --> 00:35:24,869
really coming from is this image here

00:35:22,710 --> 00:35:27,599
because it's part of the content or is

00:35:24,869 --> 00:35:29,670
this image here because it's a default

00:35:27,599 --> 00:35:31,980
background image for the design is this

00:35:29,670 --> 00:35:33,599
image here because it's from the content

00:35:31,980 --> 00:35:36,720
but if the image weren't here and there

00:35:33,599 --> 00:35:41,160
would be a fallback image those are the

00:35:36,720 --> 00:35:47,250
conversations that need to happen on the

00:35:41,160 --> 00:35:49,859
sooner the better so one more time in

00:35:47,250 --> 00:35:52,230
the past we're making our default Drupal

00:35:49,859 --> 00:35:53,700
markup look like the design we're

00:35:52,230 --> 00:35:56,839
accepting the markup that just comes

00:35:53,700 --> 00:35:59,849
from Drupal and making it look right in

00:35:56,839 --> 00:36:03,869
the present we're matching the markup

00:35:59,849 --> 00:36:06,359
and the CSS just works in the future

00:36:03,869 --> 00:36:09,720
we're making our real sites design

00:36:06,359 --> 00:36:15,510
components be the canonical design

00:36:09,720 --> 00:36:17,490
components now I've I've only covered a

00:36:15,510 --> 00:36:20,099
high level here if you want even more

00:36:17,490 --> 00:36:21,960
detail on what's happening in Drupal 8 I

00:36:20,099 --> 00:36:24,450
strongly recommend going to the Drupal 8

00:36:21,960 --> 00:36:26,250
render pipeline session that when Lear's

00:36:24,450 --> 00:36:29,039
is doing I think in the next time slot

00:36:26,250 --> 00:36:31,020
I've been told that this is an advanced

00:36:29,039 --> 00:36:33,630
topic that will cover basically what

00:36:31,020 --> 00:36:35,720
happens what happens when you hit a URL

00:36:33,630 --> 00:36:38,400
how is that response getting generated

00:36:35,720 --> 00:36:40,069
how are those Symphony tools getting

00:36:38,400 --> 00:36:42,180
integrated what's really happening

00:36:40,069 --> 00:36:45,270
cops're and joelle will be talking about

00:36:42,180 --> 00:36:47,549
style I'm sorry that's that's John is

00:36:45,270 --> 00:36:50,880
tomorrow but later today koster and

00:36:47,549 --> 00:36:52,859
joelle will be talking about the theme

00:36:50,880 --> 00:36:55,500
system from hook theme all the way to

00:36:52,859 --> 00:36:58,440
your twig file how does that really work

00:36:55,500 --> 00:37:01,329
so today we've got render pipeline and

00:36:58,440 --> 00:37:02,829
the Drupal 8 theme system

00:37:01,329 --> 00:37:04,690
and on Thursday we've got court

00:37:02,829 --> 00:37:06,819
conversations from John and myself I'll

00:37:04,690 --> 00:37:08,529
be talking about panels and web

00:37:06,819 --> 00:37:10,660
components and John will be talking

00:37:08,529 --> 00:37:12,369
about an idea potentially for Drupal 9

00:37:10,660 --> 00:37:14,469
of how can we bring this concept of

00:37:12,369 --> 00:37:18,509
design components all the way to Drupal

00:37:14,469 --> 00:37:18,509
core so thanks everybody

00:37:23,970 --> 00:37:33,180
I think we've got plenty of time for

00:37:27,570 --> 00:37:35,670
questions here we've got a mic in the

00:37:33,180 --> 00:37:37,950
center aisle if anyone's interested in

00:37:35,670 --> 00:37:40,230
asking questions I see David walking up

00:37:37,950 --> 00:37:42,619
to the mic hey David I'm claiming my

00:37:40,230 --> 00:37:44,880
privilege here by great but alright um

00:37:42,619 --> 00:37:46,560
in this current system that you're

00:37:44,880 --> 00:37:49,710
describing where you're letting your

00:37:46,560 --> 00:37:51,900
designers write some sort of HTML CSS

00:37:49,710 --> 00:37:53,820
only guardrails that you put around them

00:37:51,900 --> 00:37:55,500
or is a pretty green field right

00:37:53,820 --> 00:37:57,599
whatever see it or you know how

00:37:55,500 --> 00:37:59,220
parsimonious is this code right you is

00:37:57,599 --> 00:38:00,690
it just whatever pops out of their head

00:37:59,220 --> 00:38:03,390
or you know with some sort of thought to

00:38:00,690 --> 00:38:04,920
Drupal in mind or me so we certainly

00:38:03,390 --> 00:38:06,960
found that there are some areas of

00:38:04,920 --> 00:38:10,160
Drupal where this doesn't work very well

00:38:06,960 --> 00:38:13,290
particularly the menu system or forms

00:38:10,160 --> 00:38:16,140
the menu system we found as well as the

00:38:13,290 --> 00:38:18,480
forum system those portions can be so

00:38:16,140 --> 00:38:21,180
difficult to modify markup to get

00:38:18,480 --> 00:38:22,859
exactly what you want that sometimes

00:38:21,180 --> 00:38:25,430
it's just not worth it so in those cases

00:38:22,859 --> 00:38:28,470
we've often configured a menu or

00:38:25,430 --> 00:38:31,560
configured our form take that triple

00:38:28,470 --> 00:38:36,680
mark up put it in the style guide and

00:38:31,560 --> 00:38:39,300
then style around that I'm curious how

00:38:36,680 --> 00:38:43,619
how close you think Drupal 8 has gotten

00:38:39,300 --> 00:38:48,810
to your future vision so I think it's

00:38:43,619 --> 00:38:50,940
put in even more pieces which is and

00:38:48,810 --> 00:38:54,300
it's taken out some pieces which is a

00:38:50,940 --> 00:38:56,580
double-edged sword as I showed that that

00:38:54,300 --> 00:39:00,000
slide that diagram the Drupal 7 theme

00:38:56,580 --> 00:39:01,619
system each one of those pieces adds to

00:39:00,000 --> 00:39:03,869
the complexity and makes the system as a

00:39:01,619 --> 00:39:06,869
whole harder to understand but each one

00:39:03,869 --> 00:39:09,330
was added for a specific use case I

00:39:06,869 --> 00:39:13,380
think Drupal 8 has has done a little bit

00:39:09,330 --> 00:39:15,140
of the same added a few concepts removed

00:39:13,380 --> 00:39:18,450
a few concepts so for instance the

00:39:15,140 --> 00:39:19,740
process layer is now gone in Drupal 8 I

00:39:18,450 --> 00:39:22,650
think that's an improvement because it

00:39:19,740 --> 00:39:24,510
was never I think widely understood the

00:39:22,650 --> 00:39:30,030
difference between one to use a pre

00:39:24,510 --> 00:39:34,470
process and when to use a process so in

00:39:30,030 --> 00:39:36,750
short I think Drupal 8 core isn't

00:39:34,470 --> 00:39:37,470
thinking in design components that's why

00:39:36,750 --> 00:39:39,450
John's

00:39:37,470 --> 00:39:41,940
and talk about how to introduce a design

00:39:39,450 --> 00:39:45,599
component system to Drupal core possibly

00:39:41,940 --> 00:39:48,660
as late as as Drupal nine but there are

00:39:45,599 --> 00:39:49,920
new tools there and I think as more and

00:39:48,660 --> 00:39:51,480
more of us start building sites in

00:39:49,920 --> 00:39:53,369
Drupal 8 will find the best way to

00:39:51,480 --> 00:40:00,810
implement these patterns and I'm

00:39:53,369 --> 00:40:03,390
encouraged by cmi and improvements to

00:40:00,810 --> 00:40:06,990
view modes because view modes often are

00:40:03,390 --> 00:40:09,770
are our go-to for translating from a

00:40:06,990 --> 00:40:11,550
design component into Drupal

00:40:09,770 --> 00:40:16,280
improvements to view modes I think will

00:40:11,550 --> 00:40:19,619
be a really big help hey Steve I might

00:40:16,280 --> 00:40:21,270
Micah from phase 2 a great talk I'm

00:40:19,619 --> 00:40:23,220
really on track with a lot of stuff

00:40:21,270 --> 00:40:25,470
you're talking about when curiosity is

00:40:23,220 --> 00:40:27,109
as we start splitting i would start

00:40:25,470 --> 00:40:29,820
trying to use the exact same markup for

00:40:27,109 --> 00:40:32,790
our style guides and externally from

00:40:29,820 --> 00:40:34,770
Drupal as we're using in Drupal how do

00:40:32,790 --> 00:40:37,200
you see that working with with with

00:40:34,770 --> 00:40:38,640
where das moving with twig is twig going

00:40:37,200 --> 00:40:39,990
to be the default markup or you can have

00:40:38,640 --> 00:40:41,609
some external markup be the default

00:40:39,990 --> 00:40:42,960
market where is that where's that

00:40:41,609 --> 00:40:45,930
canonical HTML going to be coming from

00:40:42,960 --> 00:40:48,000
mm-hmm so I'm really looking forward to

00:40:45,930 --> 00:40:50,630
building sites with twig because of that

00:40:48,000 --> 00:40:53,609
extends concept what I plan to do is

00:40:50,630 --> 00:40:56,390
have prototypes built in sculpin a

00:40:53,609 --> 00:41:00,690
static site building tool that uses twig

00:40:56,390 --> 00:41:04,920
namespace the twig files and then in

00:41:00,690 --> 00:41:06,839
Drupal extend those files or just

00:41:04,920 --> 00:41:10,440
include them directly so if there is a

00:41:06,839 --> 00:41:13,500
need for any difference between the twig

00:41:10,440 --> 00:41:16,260
file and the style guide and the twig

00:41:13,500 --> 00:41:18,750
file in Drupal the tools in twig make

00:41:16,260 --> 00:41:24,900
that so much easier than working with

00:41:18,750 --> 00:41:27,180
the TPL so that would make the canonical

00:41:24,900 --> 00:41:30,810
twig file the one in the style guide in

00:41:27,180 --> 00:41:32,460
my opinion but the goal is that it is

00:41:30,810 --> 00:41:38,750
just the same twig file used in both

00:41:32,460 --> 00:41:49,180
places great thanks sure yes over here

00:41:38,750 --> 00:41:49,180
oh sure uh the the URL is palantir net

00:41:51,910 --> 00:41:58,940
it may be easiest to look at my most

00:41:55,250 --> 00:42:00,830
recent tweet ste vector is my twitter

00:41:58,940 --> 00:42:08,240
handle and i tweeted out a link to the

00:42:00,830 --> 00:42:14,230
slides yeah i'll also post them to the

00:42:08,240 --> 00:42:18,040
session description any other questions

00:42:14,230 --> 00:42:18,040
great well thanks everyone for coming

00:46:40,760 --> 00:46:43,420
yes

00:48:27,360 --> 00:48:34,020
I don't but yeah it's like it the

00:48:31,680 --> 00:48:35,380
buzzing stops if I plug this and this

00:48:34,020 --> 00:48:38,430
end but

00:48:35,380 --> 00:48:38,430
not I'm not saying

00:49:07,859 --> 00:49:12,200
I don't think right I don't think

00:50:09,019 --> 00:50:13,390
it was just hep States

00:50:13,940 --> 00:50:20,280
module and seven how many times

00:50:16,930 --> 00:50:20,280

YouTube URL: https://www.youtube.com/watch?v=0SGHtifduPY


