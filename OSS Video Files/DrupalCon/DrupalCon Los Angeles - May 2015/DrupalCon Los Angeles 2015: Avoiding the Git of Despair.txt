Title: DrupalCon Los Angeles 2015: Avoiding the Git of Despair
Publication date: 2015-05-13
Playlist: DrupalCon Los Angeles - May 2015
Description: 
	Back end developers have it easy. Just miles and miles of text-based code. Site builders, on the other hand, have to rely on point-and-click exportables from CTools / Features. Let's face it, there's a lot of magic going on, and it doesn't always go well. In this session we'll explore where all that stuff *goes* so that you're not constantly tripping over yourself in Git.

More specifically:

10,000ft view of how Git works with a deployment landscape (dev/stage/prod)
5,000ft view of how branches work, and what to do in Git world before you export a Feature
on-the-ground look at the commands you'll need to run once a Feature is exported so you can share it with others
5,000ft view of why you don't want to work on the same feature as someone else if you can avoid it
on-the-ground look at Feature-related merge conflicts just in case it happens to you
By the end of this session, you should be able to:

Describe a basic Git branching strategy, and how it relates to a typical dev/stage/prod infrastructure
Recall the Git commands you need to add a new Feature to your Git repository
Describe what a Git conflict is and how to recover from it
Throughout this session we'll explore the problems you might run into when working with Drupal-generated configuration files and Git. Although we'll focus on Drupal 7 and the Features module, the high level concepts will apply equally to other modules (and versions of Drupal!)

Resources

Slides without notes.
Slides with notes.
Captions: 
	00:00:00,000 --> 00:00:06,629
good afternoon everyone thank you so

00:00:02,550 --> 00:00:09,300
much for coming today and the last slot

00:00:06,629 --> 00:00:13,500
of the first day is always a tricky one

00:00:09,300 --> 00:00:14,969
to maintain attention for so if if you

00:00:13,500 --> 00:00:17,369
decide sort of halfway through that

00:00:14,969 --> 00:00:20,310
you've gotten a bit overwhelmed by today

00:00:17,369 --> 00:00:22,289
I need to slip out the slides are

00:00:20,310 --> 00:00:25,260
already uploaded and of course the

00:00:22,289 --> 00:00:27,420
session is being recorded no personal

00:00:25,260 --> 00:00:30,510
offense will be taken should this not be

00:00:27,420 --> 00:00:32,790
meeting your needs in some way and this

00:00:30,510 --> 00:00:35,100
this talk is hopefully going to be a

00:00:32,790 --> 00:00:36,960
little bit of fun I have injected more

00:00:35,100 --> 00:00:41,969
animated gifts than I would normally use

00:00:36,960 --> 00:00:44,879
and um well we'll sort of get into the

00:00:41,969 --> 00:00:47,430
reasons why in a second but the again

00:00:44,879 --> 00:00:50,250
slides are uploaded already get four

00:00:47,430 --> 00:00:56,730
teams calm and also on the sessions

00:00:50,250 --> 00:01:00,420
slide the first version of this talk had

00:00:56,730 --> 00:01:02,910
a lot more about get in it and I really

00:01:00,420 --> 00:01:05,220
wanted to make sure that it was useful

00:01:02,910 --> 00:01:07,830
for site builders and I realized that

00:01:05,220 --> 00:01:09,510
perhaps this style of diagram at 5pm

00:01:07,830 --> 00:01:13,409
after a full day of conference

00:01:09,510 --> 00:01:15,450
presentations would be maybe not a lot

00:01:13,409 --> 00:01:18,090
of fun and maybe a little bit mind

00:01:15,450 --> 00:01:19,920
twisting so with apologies for those of

00:01:18,090 --> 00:01:22,200
you who haven't seen the princess bride

00:01:19,920 --> 00:01:27,290
and don't already have the whole thing

00:01:22,200 --> 00:01:30,060
memorized hello my name is Emma and

00:01:27,290 --> 00:01:32,640
we'll be going through the use of

00:01:30,060 --> 00:01:36,990
features and get I'll be talking a

00:01:32,640 --> 00:01:38,700
little bit about drush as well and some

00:01:36,990 --> 00:01:40,920
of the commands that you'll need to know

00:01:38,700 --> 00:01:43,170
how to run in order to work more

00:01:40,920 --> 00:01:45,920
efficiently as a site builder which with

00:01:43,170 --> 00:01:48,630
each of these different Drupal tools now

00:01:45,920 --> 00:01:51,299
unfortunately with only an hour in this

00:01:48,630 --> 00:01:53,520
presentation what I will not be giving

00:01:51,299 --> 00:01:56,729
you is a first timers guide to using the

00:01:53,520 --> 00:02:00,060
command line I won't be explaining how

00:01:56,729 --> 00:02:02,100
features works in any great detail and I

00:02:00,060 --> 00:02:05,579
won't be explaining get in any great

00:02:02,100 --> 00:02:09,450
detail so before you all run away I

00:02:05,579 --> 00:02:12,090
would encourage you to even if you

00:02:09,450 --> 00:02:13,440
aren't experienced in any of those tools

00:02:12,090 --> 00:02:14,940
stick around I do

00:02:13,440 --> 00:02:17,330
try and give a fairly high level

00:02:14,940 --> 00:02:20,790
overview of how the pieces fit together

00:02:17,330 --> 00:02:22,710
and the sort of section at the end where

00:02:20,790 --> 00:02:25,140
we get to essentially the wall of text

00:02:22,710 --> 00:02:27,210
the wall of commands maybe something

00:02:25,140 --> 00:02:29,220
that you might glass over a little bit

00:02:27,210 --> 00:02:30,480
to start this time round and then when

00:02:29,220 --> 00:02:31,770
you come back and look at the slides

00:02:30,480 --> 00:02:35,880
later on you may find it a bit more

00:02:31,770 --> 00:02:37,830
useful so start out with sort of a

00:02:35,880 --> 00:02:39,900
twenty thousand foot view of how things

00:02:37,830 --> 00:02:43,140
work and then I'll kind of slowly

00:02:39,900 --> 00:02:44,940
descend into the pit of despair of using

00:02:43,140 --> 00:02:46,200
all of these tools at the command line

00:02:44,940 --> 00:02:48,210
so we'll start out with some easy

00:02:46,200 --> 00:02:50,310
diagrams will end with some fun animated

00:02:48,210 --> 00:02:52,590
gifts and hopefully it all makes sense

00:02:50,310 --> 00:02:53,880
along the way so first piece but I

00:02:52,590 --> 00:02:56,640
wanted to give sort of a quick overview

00:02:53,880 --> 00:02:58,920
with of the features module and just as

00:02:56,640 --> 00:03:03,200
a quick show of hands how many folks are

00:02:58,920 --> 00:03:05,670
and familiar with features already and

00:03:03,200 --> 00:03:08,910
how many people just refuse to raise

00:03:05,670 --> 00:03:10,920
their hand when asked fantastic this

00:03:08,910 --> 00:03:12,960
gives me a quick room calibration thanks

00:03:10,920 --> 00:03:16,260
for the two in the back who played along

00:03:12,960 --> 00:03:17,910
with that one so the gist of it though

00:03:16,260 --> 00:03:20,070
is that we're going to go from a

00:03:17,910 --> 00:03:22,440
point-and-click tool and we're going to

00:03:20,070 --> 00:03:24,270
convert it into code and the advantage

00:03:22,440 --> 00:03:26,610
of doing this is it allows us to move

00:03:24,270 --> 00:03:29,670
that point and click configuration from

00:03:26,610 --> 00:03:31,739
one environment to another one if we're

00:03:29,670 --> 00:03:34,830
giving a very sort of high-level

00:03:31,739 --> 00:03:37,500
overview as we think of this as being in

00:03:34,830 --> 00:03:38,970
a peer review situation so before we get

00:03:37,500 --> 00:03:42,120
to the deployment process because of

00:03:38,970 --> 00:03:43,769
course everyone does peer reviews yep

00:03:42,120 --> 00:03:46,550
not even the two guys at the back you

00:03:43,769 --> 00:03:49,290
refuse to raise their hands on this one

00:03:46,550 --> 00:03:50,700
so in terms of sharing those those

00:03:49,290 --> 00:03:52,380
features around you may be doing it

00:03:50,700 --> 00:03:55,560
during a peer review process you may be

00:03:52,380 --> 00:03:57,150
doing it when you move from essentially

00:03:55,560 --> 00:03:58,500
your local environment into your

00:03:57,150 --> 00:04:00,660
development or your production

00:03:58,500 --> 00:04:03,510
environment but there's essentially

00:04:00,660 --> 00:04:06,750
people and there's code hosting systems

00:04:03,510 --> 00:04:10,470
at this stage and what we do is we start

00:04:06,750 --> 00:04:12,209
looking at how stuff moves around you

00:04:10,470 --> 00:04:14,550
can see if we read this diagram from

00:04:12,209 --> 00:04:16,709
left to right the first thing that we do

00:04:14,550 --> 00:04:19,100
in a code review process or when we're

00:04:16,709 --> 00:04:23,430
sharing a feature is we go ahead and we

00:04:19,100 --> 00:04:25,890
pull or clone the the code base down to

00:04:23,430 --> 00:04:27,120
our system we go ahead and create a new

00:04:25,890 --> 00:04:29,490
branch we work

00:04:27,120 --> 00:04:31,590
on that feature we push it back up to

00:04:29,490 --> 00:04:33,210
the code hosting system and then the

00:04:31,590 --> 00:04:36,180
reviewer over on the right-hand side

00:04:33,210 --> 00:04:39,479
pulls that code down they take a look at

00:04:36,180 --> 00:04:41,280
the code they either accept and publish

00:04:39,479 --> 00:04:43,590
the changes back up to the code hosting

00:04:41,280 --> 00:04:46,979
system or they reject the changes and

00:04:43,590 --> 00:04:49,770
ask for some refinements or enhancements

00:04:46,979 --> 00:04:51,810
to be made that's you know at a very

00:04:49,770 --> 00:04:57,120
high level how we generally work with

00:04:51,810 --> 00:04:59,160
get now deploying with it gets slightly

00:04:57,120 --> 00:05:02,699
more complicated and the way that we

00:04:59,160 --> 00:05:05,190
normally look at deploying code is we

00:05:02,699 --> 00:05:07,260
have this kind of graph we start with

00:05:05,190 --> 00:05:09,360
our local environment as a developer or

00:05:07,260 --> 00:05:10,680
is a site builder and then we push the

00:05:09,360 --> 00:05:12,479
changes up to the development

00:05:10,680 --> 00:05:13,889
environment and then we push the changes

00:05:12,479 --> 00:05:16,740
up to the staging environment and

00:05:13,889 --> 00:05:20,039
finally we push the changes up to the

00:05:16,740 --> 00:05:23,460
production environment but of course it

00:05:20,039 --> 00:05:25,710
doesn't really work that way I am

00:05:23,460 --> 00:05:28,620
Telling You a bit of a lie when I show

00:05:25,710 --> 00:05:30,660
you this simplified diagram and as

00:05:28,620 --> 00:05:33,090
perhaps you have already experienced

00:05:30,660 --> 00:05:36,570
it's much much more complex than this in

00:05:33,090 --> 00:05:39,210
fact that simplified diagram probably

00:05:36,570 --> 00:05:41,820
looks a lot more like this diagram here

00:05:39,210 --> 00:05:45,030
so what we've got in our deploying code

00:05:41,820 --> 00:05:46,770
diagram is that same initial triangle

00:05:45,030 --> 00:05:49,349
essentially where we went from one

00:05:46,770 --> 00:05:51,690
person up to the code hosting system and

00:05:49,349 --> 00:05:54,720
then back down again except we're doing

00:05:51,690 --> 00:05:56,729
that round trip times each environment

00:05:54,720 --> 00:05:58,710
that we're working in and that can make

00:05:56,729 --> 00:06:01,349
it a little bit frustrating and

00:05:58,710 --> 00:06:03,870
confusing to work in but the nice thing

00:06:01,349 --> 00:06:05,940
about it is that it tends to map quite

00:06:03,870 --> 00:06:09,860
well on to how you may want to take

00:06:05,940 --> 00:06:12,150
advantages advantage of branches in get

00:06:09,860 --> 00:06:13,889
so there's sort of some light color

00:06:12,150 --> 00:06:18,169
coding on this I don't know if it reads

00:06:13,889 --> 00:06:18,169
well all the way to the back but if we

00:06:18,830 --> 00:06:24,020
skip ahead to this one here we can see

00:06:22,110 --> 00:06:27,389
that essentially each of those different

00:06:24,020 --> 00:06:30,449
environments can map on to what a branch

00:06:27,389 --> 00:06:33,210
would be in get this is more or less

00:06:30,449 --> 00:06:36,479
giving us the get flow model how many

00:06:33,210 --> 00:06:38,159
folks have heard that term before right

00:06:36,479 --> 00:06:40,230
on so it's about three quarters of the

00:06:38,159 --> 00:06:42,180
room how many people confident

00:06:40,230 --> 00:06:44,070
we use get flow and understand how each

00:06:42,180 --> 00:06:48,570
of those branches works I'm going to

00:06:44,070 --> 00:06:50,220
guess a lot less yep and it tends to be

00:06:48,570 --> 00:06:53,880
something that we talked about and yet

00:06:50,220 --> 00:06:55,710
we can't always take advantage of the

00:06:53,880 --> 00:06:57,930
full piece of it so one of the things

00:06:55,710 --> 00:07:00,060
that I always like people to do when

00:06:57,930 --> 00:07:03,330
they start using a new system is they

00:07:00,060 --> 00:07:05,280
take a look at diagrams and if I had to

00:07:03,330 --> 00:07:07,140
draw out what I was going to do on a

00:07:05,280 --> 00:07:09,690
daily basis and i was going to color

00:07:07,140 --> 00:07:11,640
code all of that information how would

00:07:09,690 --> 00:07:14,220
that map onto my experience and then

00:07:11,640 --> 00:07:17,310
what are the pieces in get flow which

00:07:14,220 --> 00:07:18,750
explain all of those different parts I'm

00:07:17,310 --> 00:07:21,600
just going to come back up here to these

00:07:18,750 --> 00:07:25,140
two here so branches allow you to

00:07:21,600 --> 00:07:26,880
separate instances of ongoing work or in

00:07:25,140 --> 00:07:29,310
the case of that for staff initial

00:07:26,880 --> 00:07:31,680
diagram my local environment my

00:07:29,310 --> 00:07:34,080
development environment my staging or my

00:07:31,680 --> 00:07:35,790
QA environment and finally production so

00:07:34,080 --> 00:07:40,770
each of those can be its own separate

00:07:35,790 --> 00:07:43,260
branch and those naming conventions or

00:07:40,770 --> 00:07:45,450
the strategies rather that we use or

00:07:43,260 --> 00:07:47,070
simply conventions and almost everyone

00:07:45,450 --> 00:07:49,980
put up their hand is being familiar with

00:07:47,070 --> 00:07:52,890
get flow and get flow is it's not the

00:07:49,980 --> 00:07:56,820
only way to do things but it's certainly

00:07:52,890 --> 00:07:59,640
a very popular way to do things for many

00:07:56,820 --> 00:08:02,580
website developments that have that

00:07:59,640 --> 00:08:05,730
staged approach to deployment how many

00:08:02,580 --> 00:08:07,860
folks are in any kind of automated

00:08:05,730 --> 00:08:09,810
deployment system at this point I'm

00:08:07,860 --> 00:08:13,470
going to guess like there's a few people

00:08:09,810 --> 00:08:16,380
are like we want to be and sort of half

00:08:13,470 --> 00:08:18,600
raising their hand and so you may not

00:08:16,380 --> 00:08:20,100
follow exactly a get flow model because

00:08:18,600 --> 00:08:22,230
you may not have a staging environment

00:08:20,100 --> 00:08:24,390
you may not have those same environments

00:08:22,230 --> 00:08:26,070
so you're branching structure may end up

00:08:24,390 --> 00:08:29,610
looking quite different from what we're

00:08:26,070 --> 00:08:35,130
not not different simplified from white

00:08:29,610 --> 00:08:37,680
get flow describes so now we can take a

00:08:35,130 --> 00:08:39,330
look we've sort of glossed over the good

00:08:37,680 --> 00:08:40,740
flow peas many of you are familiar with

00:08:39,330 --> 00:08:42,750
its I didn't spend a lot of time on it

00:08:40,740 --> 00:08:44,760
and now we start looking at okay so how

00:08:42,750 --> 00:08:46,890
do we go ahead and take advantage of

00:08:44,760 --> 00:08:48,930
this to be able to share features with

00:08:46,890 --> 00:08:51,750
get and

00:08:48,930 --> 00:08:53,690
then at the back just show of hands can

00:08:51,750 --> 00:08:56,550
you actually read any of those words

00:08:53,690 --> 00:09:00,750
some are you be some of you are lying

00:08:56,550 --> 00:09:02,070
yeah okay so if you do go ahead and

00:09:00,750 --> 00:09:03,330
download the slides then you may be able

00:09:02,070 --> 00:09:05,190
to follow along with some of these

00:09:03,330 --> 00:09:07,350
diagram what's right they're quite small

00:09:05,190 --> 00:09:09,420
I know and so what I've done here is

00:09:07,350 --> 00:09:11,850
I've taken my original diagram and this

00:09:09,420 --> 00:09:13,800
is why I really like diagrams because as

00:09:11,850 --> 00:09:15,930
soon as you start drawing arrows in

00:09:13,800 --> 00:09:18,330
there you immediately can start mapping

00:09:15,930 --> 00:09:21,570
on the relevant git commands at any

00:09:18,330 --> 00:09:23,580
point and I for the most part will use

00:09:21,570 --> 00:09:25,560
diagrams other people have used comic

00:09:23,580 --> 00:09:27,480
strips though or just anything that

00:09:25,560 --> 00:09:29,430
makes it into a visual piece and the

00:09:27,480 --> 00:09:31,620
more that you need to think about how

00:09:29,430 --> 00:09:32,790
you're building up the information the

00:09:31,620 --> 00:09:35,610
more that you're going to learn about

00:09:32,790 --> 00:09:38,339
how your own process works so the same

00:09:35,610 --> 00:09:40,649
diagram as I had before we've now

00:09:38,339 --> 00:09:43,770
however renamed our arrow from step one

00:09:40,649 --> 00:09:45,510
it's now called clone or pull and then

00:09:43,770 --> 00:09:47,580
the arrow back up again is called push

00:09:45,510 --> 00:09:49,410
down at the bottom i've got my checklist

00:09:47,580 --> 00:09:51,240
of things that i need to do as a

00:09:49,410 --> 00:09:54,270
developer so i'm going to check out a

00:09:51,240 --> 00:09:55,650
new branch i'm going to add the files do

00:09:54,270 --> 00:09:58,440
it and then i'm going to commit and

00:09:55,650 --> 00:10:00,620
finally push it back up again on the

00:09:58,440 --> 00:10:04,440
review side it's a little bit more

00:10:00,620 --> 00:10:06,300
complicated in that i've got the check

00:10:04,440 --> 00:10:09,120
out of the existing branch now i'm going

00:10:06,300 --> 00:10:11,430
to do the review going to check out dev

00:10:09,120 --> 00:10:13,620
there's this will get into more of this

00:10:11,430 --> 00:10:17,160
at the very end and then finally merge

00:10:13,620 --> 00:10:18,930
that new feature in but with a simple

00:10:17,160 --> 00:10:23,820
diagram you can start to map those

00:10:18,930 --> 00:10:27,089
commands on features and their related

00:10:23,820 --> 00:10:29,190
export functionality or related export

00:10:27,089 --> 00:10:34,320
modules are not always the most

00:10:29,190 --> 00:10:38,279
consistent experience i had a very maybe

00:10:34,320 --> 00:10:39,900
the word is interesting conversation

00:10:38,279 --> 00:10:42,089
with mike potter a few weeks ago about

00:10:39,900 --> 00:10:44,730
this and and we were talking about what

00:10:42,089 --> 00:10:47,220
are the what are the pieces about

00:10:44,730 --> 00:10:50,370
features that make it really frustrating

00:10:47,220 --> 00:10:53,190
for people because people people i'm

00:10:50,370 --> 00:10:54,660
using my air quotes to mean me always

00:10:53,190 --> 00:10:57,959
and actually don't need air quotes on

00:10:54,660 --> 00:10:59,070
that i always complain definitely don't

00:10:57,959 --> 00:11:00,540
need air quotes on that one about

00:10:59,070 --> 00:11:02,370
features

00:11:00,540 --> 00:11:05,010
we had a really interesting conversation

00:11:02,370 --> 00:11:08,850
about what is what is really the problem

00:11:05,010 --> 00:11:10,560
because he was rightly so insisting that

00:11:08,850 --> 00:11:12,360
features is a lot better than it used to

00:11:10,560 --> 00:11:14,670
be and yet that hadn't necessarily been

00:11:12,360 --> 00:11:16,860
my experience and hadn't been the

00:11:14,670 --> 00:11:18,690
experience of the developers who were

00:11:16,860 --> 00:11:21,450
using features in the experience of the

00:11:18,690 --> 00:11:22,830
site builders who were using features so

00:11:21,450 --> 00:11:25,620
we went back and forth a little bit and

00:11:22,830 --> 00:11:28,020
that's why this sort of extra bracket in

00:11:25,620 --> 00:11:30,920
there exists in there and it's related

00:11:28,020 --> 00:11:34,170
export functions so in a lot of cases

00:11:30,920 --> 00:11:36,630
features itself is simply doing what the

00:11:34,170 --> 00:11:38,070
export module told it to do it's just

00:11:36,630 --> 00:11:40,350
doing it in a way that wasn't

00:11:38,070 --> 00:11:42,390
necessarily what we expected it to be as

00:11:40,350 --> 00:11:45,090
a site builder as a developer or as a

00:11:42,390 --> 00:11:47,520
person working with get so what we need

00:11:45,090 --> 00:11:50,490
to do is we need to improve the

00:11:47,520 --> 00:11:52,350
consistency of what gets exported from

00:11:50,490 --> 00:11:54,450
our database so that when we actually

00:11:52,350 --> 00:11:56,130
put things in to get and they move over

00:11:54,450 --> 00:11:59,340
into a different environment they get

00:11:56,130 --> 00:12:01,170
imported in a more reliable way how many

00:11:59,340 --> 00:12:06,140
folks are already using dresch by show

00:12:01,170 --> 00:12:08,010
of hands amazing why are you guys here

00:12:06,140 --> 00:12:09,510
alright so that was pretty much a

00:12:08,010 --> 00:12:10,950
hundred percent of the room even the two

00:12:09,510 --> 00:12:15,090
at the back who refused to raise their

00:12:10,950 --> 00:12:17,010
hand when asked and so normally i would

00:12:15,090 --> 00:12:18,870
have to go into my why should we bother

00:12:17,010 --> 00:12:20,310
working from the command line lecture i

00:12:18,870 --> 00:12:22,680
don't think i need to do that with you

00:12:20,310 --> 00:12:27,510
folks and but i would say that it can

00:12:22,680 --> 00:12:30,390
provide us a more it can provide us a

00:12:27,510 --> 00:12:36,480
faster route to a more consistent

00:12:30,390 --> 00:12:39,060
experience and it's I I tend to I tend

00:12:36,480 --> 00:12:40,500
to not trust graphical interfaces not

00:12:39,060 --> 00:12:43,050
that I should trust the command line

00:12:40,500 --> 00:12:45,240
anymore but at the command line I find

00:12:43,050 --> 00:12:47,130
that I can copy and paste what the error

00:12:45,240 --> 00:12:49,050
messages are a little bit more reliably

00:12:47,130 --> 00:12:52,140
and I can find copy and paste able

00:12:49,050 --> 00:12:54,030
documentation as opposed to locate this

00:12:52,140 --> 00:12:55,770
button on this screen locate that button

00:12:54,030 --> 00:12:58,260
on the next screen that's very difficult

00:12:55,770 --> 00:13:00,690
to document in a reliable manner so I

00:12:58,260 --> 00:13:02,340
tend to if I'm feeling uncomfortable

00:13:00,690 --> 00:13:04,620
with something revert back to the

00:13:02,340 --> 00:13:06,540
command line where I find that the the

00:13:04,620 --> 00:13:10,290
instructions are for me are a bit more

00:13:06,540 --> 00:13:12,570
reliable so Josh again for the

00:13:10,290 --> 00:13:13,610
recordings sake because folks all know

00:13:12,570 --> 00:13:15,170
what it is

00:13:13,610 --> 00:13:17,149
a command line shell and scripting

00:13:15,170 --> 00:13:20,060
interface to Drupal allows you to

00:13:17,149 --> 00:13:22,700
execute cron run update PHP work with

00:13:20,060 --> 00:13:24,950
features clear cache and much much more

00:13:22,700 --> 00:13:27,140
it still doesn't make my coffee in the

00:13:24,950 --> 00:13:29,810
morning and I haven't figured a way to

00:13:27,140 --> 00:13:32,959
get it to clean my house but it can

00:13:29,810 --> 00:13:36,860
clean features is house so it can be

00:13:32,959 --> 00:13:40,250
quite useful for us features focuses

00:13:36,860 --> 00:13:42,050
exclusively on code where drupal would

00:13:40,250 --> 00:13:45,709
have normally focused on the database

00:13:42,050 --> 00:13:47,690
and this can sometimes be a point of

00:13:45,709 --> 00:13:50,839
confusion with with the language and

00:13:47,690 --> 00:13:53,170
that drush uses at the command line to

00:13:50,839 --> 00:13:55,970
deal with features but if we think about

00:13:53,170 --> 00:13:58,850
features is thinking about the code

00:13:55,970 --> 00:14:01,910
point of view Drupal is focusing on the

00:13:58,850 --> 00:14:04,070
database point of view this next diagram

00:14:01,910 --> 00:14:09,440
can be a little bit more useful I pulled

00:14:04,070 --> 00:14:10,670
this from drupal.org node 58 2680 so

00:14:09,440 --> 00:14:11,750
some of you may have already seen this

00:14:10,670 --> 00:14:14,029
if you've read the features

00:14:11,750 --> 00:14:16,220
documentation and it basically goes

00:14:14,029 --> 00:14:18,260
through the different states that a

00:14:16,220 --> 00:14:23,079
feature can be in whether it's matching

00:14:18,260 --> 00:14:23,079
up with the database state or not and

00:14:23,140 --> 00:14:28,579
the arrows down toward the bottom we've

00:14:26,540 --> 00:14:31,399
got the the concept of a revert or

00:14:28,579 --> 00:14:34,010
recreate included in there but they the

00:14:31,399 --> 00:14:36,199
most important part I think is to to get

00:14:34,010 --> 00:14:40,220
that sense of there's a disconnect

00:14:36,199 --> 00:14:42,589
between the two so if we're going to be

00:14:40,220 --> 00:14:44,300
working with features and rush from the

00:14:42,589 --> 00:14:47,329
command line this is our sort of quick

00:14:44,300 --> 00:14:49,130
Survival Guide we want to export a

00:14:47,329 --> 00:14:51,529
feature we're going to do add rush

00:14:49,130 --> 00:14:54,010
feature update we're going to revert a

00:14:51,529 --> 00:14:57,500
feature bring it back in from code far

00:14:54,010 --> 00:15:01,640
really revert your features the force

00:14:57,500 --> 00:15:04,160
yes and then clearing all caches and

00:15:01,640 --> 00:15:07,100
these these ones end up being the core

00:15:04,160 --> 00:15:10,490
of how we're going to get those features

00:15:07,100 --> 00:15:13,490
in and out of the Drupal database now

00:15:10,490 --> 00:15:14,990
all of that i'm betting based on the

00:15:13,490 --> 00:15:18,310
number of hands that we've had up so far

00:15:14,990 --> 00:15:20,209
has been really trivial and perhaps

00:15:18,310 --> 00:15:23,060
underwhelming compared to what you were

00:15:20,209 --> 00:15:25,069
hoping for and I'm that the speed of

00:15:23,060 --> 00:15:26,150
this i'm actually quite delighted up how

00:15:25,069 --> 00:15:27,740
much everyone

00:15:26,150 --> 00:15:29,210
already knows because I'm going to make

00:15:27,740 --> 00:15:30,320
you do group work at the end of it it's

00:15:29,210 --> 00:15:32,870
going to be horrible but you're going to

00:15:30,320 --> 00:15:38,900
learn a lot so the next piece is on

00:15:32,870 --> 00:15:41,750
avoiding conflict and conflict is it's

00:15:38,900 --> 00:15:44,120
especially interesting in in the Drupal

00:15:41,750 --> 00:15:45,830
or sorry in the get sense of the word

00:15:44,120 --> 00:15:49,010
because when it comes to features and

00:15:45,830 --> 00:15:52,580
conflict we don't necessarily actually

00:15:49,010 --> 00:15:55,130
want to merge features together so any

00:15:52,580 --> 00:15:57,770
time that you are actually in a conflict

00:15:55,130 --> 00:16:02,180
situation you need to stop and very

00:15:57,770 --> 00:16:05,290
carefully think about why this feature

00:16:02,180 --> 00:16:10,850
has changed itself in the same place

00:16:05,290 --> 00:16:14,330
from two different instances where ever

00:16:10,850 --> 00:16:16,850
you can avoid overlap in your features

00:16:14,330 --> 00:16:19,550
and I've got a bit of a checklist later

00:16:16,850 --> 00:16:22,670
on on on how to think about structuring

00:16:19,550 --> 00:16:24,290
your features but we we want to avoid

00:16:22,670 --> 00:16:26,780
trying to merge them together so we

00:16:24,290 --> 00:16:28,250
never really want to be dealing with get

00:16:26,780 --> 00:16:32,900
conflicts when we're working with

00:16:28,250 --> 00:16:37,010
features just as a quick reminder when

00:16:32,900 --> 00:16:39,050
we are working with these different

00:16:37,010 --> 00:16:41,900
branches we're essentially going to be

00:16:39,050 --> 00:16:44,150
simulating different environments and on

00:16:41,900 --> 00:16:46,190
the far left-hand side each of the

00:16:44,150 --> 00:16:48,770
features that we create will initially

00:16:46,190 --> 00:16:52,160
create in its own branch push it up to

00:16:48,770 --> 00:16:53,660
the code hosting system before having

00:16:52,160 --> 00:16:56,000
the review and then having someone else

00:16:53,660 --> 00:16:58,280
merge it in this is where it's going to

00:16:56,000 --> 00:17:00,890
get really really wall of text II so

00:16:58,280 --> 00:17:03,380
please do brace yourself and the wall of

00:17:00,890 --> 00:17:08,390
text is coming and I know that that's

00:17:03,380 --> 00:17:10,610
not the right metaphor so here we go the

00:17:08,390 --> 00:17:13,220
first and these screens are all batched

00:17:10,610 --> 00:17:16,430
in terms of groups of functions that you

00:17:13,220 --> 00:17:19,400
will probably do all together and

00:17:16,430 --> 00:17:20,810
there's I think seven of them so the

00:17:19,400 --> 00:17:22,760
first thing that we want to do when

00:17:20,810 --> 00:17:25,430
we're going to be taking things from a

00:17:22,760 --> 00:17:28,640
feature putting them into the code base

00:17:25,430 --> 00:17:31,400
is we want to get get ready to actually

00:17:28,640 --> 00:17:32,990
receive that export from the database so

00:17:31,400 --> 00:17:34,660
the first thing we're going to do is we

00:17:32,990 --> 00:17:38,270
want to start in the right environment

00:17:34,660 --> 00:17:39,510
so let's say for example that this is

00:17:38,270 --> 00:17:42,240
going to be a new feature

00:17:39,510 --> 00:17:43,590
it's not a hotfix it's not fixed office

00:17:42,240 --> 00:17:45,720
staging or the production environment

00:17:43,590 --> 00:17:48,660
we're going to start out in the

00:17:45,720 --> 00:17:51,330
development environment and sorry to do

00:17:48,660 --> 00:17:53,670
this again folks at the back can you can

00:17:51,330 --> 00:17:55,920
you is everyone read these slides okay

00:17:53,670 --> 00:17:57,060
these ones all right thanks and so if

00:17:55,920 --> 00:17:59,700
you start out in the right environment

00:17:57,060 --> 00:18:01,770
that sort of the starting and

00:17:59,700 --> 00:18:03,900
development starting it in staging or

00:18:01,770 --> 00:18:07,320
starting a production check out that

00:18:03,900 --> 00:18:10,800
branch from that branch you then want to

00:18:07,320 --> 00:18:13,740
create a new feature branch my pardon

00:18:10,800 --> 00:18:15,810
the overlap here of get flow terms and

00:18:13,740 --> 00:18:18,090
the way that I structure things is to

00:18:15,810 --> 00:18:20,460
say whatever the ticket number is plus

00:18:18,090 --> 00:18:22,560
some kind of description descriptive

00:18:20,460 --> 00:18:24,270
terminology and I go back and forth on

00:18:22,560 --> 00:18:26,760
whether or not i use underscores or

00:18:24,270 --> 00:18:28,560
dashes you are welcome to judge me

00:18:26,760 --> 00:18:30,390
harshly as I flip back and forth between

00:18:28,560 --> 00:18:33,000
the two in my slides and change the

00:18:30,390 --> 00:18:36,090
branch name by mistake so we're going to

00:18:33,000 --> 00:18:40,950
check out the new branch so at this

00:18:36,090 --> 00:18:43,110
point nothing should be different in the

00:18:40,950 --> 00:18:46,470
code versus in the database we've not

00:18:43,110 --> 00:18:48,240
made our feature yet the next thing

00:18:46,470 --> 00:18:51,960
we're going to do is go ahead and create

00:18:48,240 --> 00:18:54,000
that feature but the first thing we want

00:18:51,960 --> 00:18:56,580
to do is make sure that we actually have

00:18:54,000 --> 00:18:58,140
a clean instance of the database that

00:18:56,580 --> 00:18:59,850
we're going to be working from so this

00:18:58,140 --> 00:19:01,290
is the conversation part of the

00:18:59,850 --> 00:19:05,310
conversation that I had with Mike was

00:19:01,290 --> 00:19:07,050
why why is it not making everyone happy

00:19:05,310 --> 00:19:09,690
what what is it that people are running

00:19:07,050 --> 00:19:12,390
into and I I've always been pretty

00:19:09,690 --> 00:19:15,450
careful about downloading database

00:19:12,390 --> 00:19:17,400
snapshots as opposed to letting my own

00:19:15,450 --> 00:19:20,040
development database get out of control

00:19:17,400 --> 00:19:22,650
I tend to download whatever the latest

00:19:20,040 --> 00:19:25,530
databases it's not very efficient of me

00:19:22,650 --> 00:19:27,780
this is far far more efficient but can

00:19:25,530 --> 00:19:29,190
feel incredibly time-consuming so the

00:19:27,780 --> 00:19:30,780
first thing we're going to do is set

00:19:29,190 --> 00:19:33,320
everything back to their factory result

00:19:30,780 --> 00:19:35,910
a reset essentially reset the system

00:19:33,320 --> 00:19:38,640
what's in code should match what's in

00:19:35,910 --> 00:19:41,130
the database so we really really revert

00:19:38,640 --> 00:19:42,570
all of our features then we go ahead and

00:19:41,130 --> 00:19:44,580
build the new feature in terms of the

00:19:42,570 --> 00:19:46,590
pointy clicky I've given you sort of the

00:19:44,580 --> 00:19:49,410
site builder version here I haven't done

00:19:46,590 --> 00:19:51,720
the DRA Chevy and I said just go ahead

00:19:49,410 --> 00:19:53,100
and export your features settings with

00:19:51,720 --> 00:19:55,650
the pointy clicky

00:19:53,100 --> 00:19:59,070
go ahead and download that tar ball put

00:19:55,650 --> 00:20:01,320
it into and your directory structure may

00:19:59,070 --> 00:20:03,450
vary slightly I've said sites all

00:20:01,320 --> 00:20:05,039
modules features you may not have a

00:20:03,450 --> 00:20:06,960
subdirectory called features that you're

00:20:05,039 --> 00:20:09,929
putting them into then go ahead and

00:20:06,960 --> 00:20:12,780
unpack that turbo so now you've got the

00:20:09,929 --> 00:20:14,490
feature created and it's in a fresh

00:20:12,780 --> 00:20:18,840
branch remember we did that on the

00:20:14,490 --> 00:20:21,630
previous screen slight variation if you

00:20:18,840 --> 00:20:23,160
were updating a feature as opposed to

00:20:21,630 --> 00:20:25,409
creating the feature for the first time

00:20:23,160 --> 00:20:27,210
you still want to really really reset

00:20:25,409 --> 00:20:28,830
everything you still want to go ahead

00:20:27,210 --> 00:20:32,340
and build the feature with the pointy

00:20:28,830 --> 00:20:36,780
clicky tool and then go ahead and update

00:20:32,340 --> 00:20:43,409
the feature with features update all or

00:20:36,780 --> 00:20:44,700
f you all so missed one oh my apologies

00:20:43,409 --> 00:20:46,409
and some of these transitions aren't

00:20:44,700 --> 00:20:48,630
quite right so you briefly missed a

00:20:46,409 --> 00:20:51,210
princess but I'd give there I did try to

00:20:48,630 --> 00:20:52,710
reward you for reading walls of text the

00:20:51,210 --> 00:20:55,289
next one's pretty good though it's hope

00:20:52,710 --> 00:20:58,169
that it actually works so now we've got

00:20:55,289 --> 00:21:00,059
in our new branch in get which is

00:20:58,169 --> 00:21:02,270
related to the product or the

00:21:00,059 --> 00:21:05,250
environment that we want to put it into

00:21:02,270 --> 00:21:07,500
and all of that stuff is set up now what

00:21:05,250 --> 00:21:09,840
we want to do is we want to verify that

00:21:07,500 --> 00:21:13,730
our feature has actually been correctly

00:21:09,840 --> 00:21:18,900
exported so what we want to do is say

00:21:13,730 --> 00:21:22,950
compare me to what was previously in

00:21:18,900 --> 00:21:25,140
stored and get now if it's a new feature

00:21:22,950 --> 00:21:27,570
there's going to be nothing so when we

00:21:25,140 --> 00:21:29,460
run the command to get diff every line

00:21:27,570 --> 00:21:31,890
will have a plus beside it every line

00:21:29,460 --> 00:21:34,130
will be new if it's an updated feature

00:21:31,890 --> 00:21:37,289
then what you're going to look for is a

00:21:34,130 --> 00:21:40,200
pairing of a minus and plus when you run

00:21:37,289 --> 00:21:42,960
git diff and basically run through this

00:21:40,200 --> 00:21:46,799
little checklist just note to self is

00:21:42,960 --> 00:21:49,110
there anything within this list where

00:21:46,799 --> 00:21:51,390
the values are all the same but they're

00:21:49,110 --> 00:21:54,450
showing up in a different order panel

00:21:51,390 --> 00:21:56,659
Iser had a nasty reputation several

00:21:54,450 --> 00:21:59,820
versions ago for having these same

00:21:56,659 --> 00:22:01,110
elements in an array of settings but

00:21:59,820 --> 00:22:03,299
they'd be slightly in a different order

00:22:01,110 --> 00:22:06,179
and it wouldn't necessarily result in

00:22:03,299 --> 00:22:10,789
clean imports in different environment

00:22:06,179 --> 00:22:14,100
our strings not quoted so if you have 0

00:22:10,789 --> 00:22:15,840
vs 0 with and without the quotes get

00:22:14,100 --> 00:22:18,480
will interpret those as being completely

00:22:15,840 --> 00:22:21,779
different lines are there any extra

00:22:18,480 --> 00:22:24,659
pieces did you accidentally export more

00:22:21,779 --> 00:22:26,639
than you meant to or any pieces missing

00:22:24,659 --> 00:22:29,429
do you have all of the elements that you

00:22:26,639 --> 00:22:32,549
meant to export so reading through with

00:22:29,429 --> 00:22:35,070
a get diff and there's no no extra

00:22:32,549 --> 00:22:39,139
parameters required it will compare to

00:22:35,070 --> 00:22:39,139
what was previously stored and yet

00:22:39,679 --> 00:22:49,320
assuming that everything is looking well

00:22:44,330 --> 00:22:52,200
you are now ready to actually proceed to

00:22:49,320 --> 00:22:54,990
saving your feature in to get so we're

00:22:52,200 --> 00:22:56,820
going to do a quick check git status

00:22:54,990 --> 00:22:59,580
we're going to make sure that the only

00:22:56,820 --> 00:23:01,769
files that get wants to commit at this

00:22:59,580 --> 00:23:04,110
point are actually related to the

00:23:01,769 --> 00:23:05,639
feature so you've not been like we just

00:23:04,110 --> 00:23:07,379
did a fresh check out there's no extra

00:23:05,639 --> 00:23:11,039
editing you've not been tinkering it's

00:23:07,379 --> 00:23:13,679
all save run git status to make sure

00:23:11,039 --> 00:23:16,110
that only the new things that we be

00:23:13,679 --> 00:23:18,570
going in are related to your feature go

00:23:16,110 --> 00:23:20,279
ahead and run ad get ad and then the

00:23:18,570 --> 00:23:22,980
name of the future directory or simply a

00:23:20,279 --> 00:23:24,869
period much shorter and then go ahead

00:23:22,980 --> 00:23:27,749
and save the new feature to your posit

00:23:24,869 --> 00:23:29,940
or e with git commit at this point I've

00:23:27,749 --> 00:23:32,309
not given you the shorthand for how to

00:23:29,940 --> 00:23:34,049
add a one-line commit message because I

00:23:32,309 --> 00:23:36,779
want you writing a really fantastic

00:23:34,049 --> 00:23:39,659
message on what this feature is about

00:23:36,779 --> 00:23:41,759
and I want you to explain in words all

00:23:39,659 --> 00:23:44,220
of the elements which should be included

00:23:41,759 --> 00:23:46,200
in here so that when someone else is

00:23:44,220 --> 00:23:49,529
reviewing it they can make sure that

00:23:46,200 --> 00:23:52,440
they easily can refer back to and is

00:23:49,529 --> 00:23:54,029
there a new content type is there like

00:23:52,440 --> 00:23:56,070
what are the new elements that they

00:23:54,029 --> 00:23:59,519
should be able to see when this feature

00:23:56,070 --> 00:24:01,919
is installed so fantastic dipped commit

00:23:59,519 --> 00:24:03,659
message and you're now basically locked

00:24:01,919 --> 00:24:09,809
and loaded and ready to share that

00:24:03,659 --> 00:24:11,669
feature it's not actually a trap you

00:24:09,809 --> 00:24:12,990
won't you know there's no negative

00:24:11,669 --> 00:24:16,470
things that are going to happen at this

00:24:12,990 --> 00:24:17,789
point we we don't have a what was he

00:24:16,470 --> 00:24:19,120
doing at this point something about

00:24:17,789 --> 00:24:23,350
gilder I think

00:24:19,120 --> 00:24:25,330
remember in any case so now now you're

00:24:23,350 --> 00:24:27,520
ready to go ahead and share that feature

00:24:25,330 --> 00:24:29,290
so at this point as far as get is

00:24:27,520 --> 00:24:32,320
concerned the only thing you need to do

00:24:29,290 --> 00:24:34,480
is go ahead and push that branch up to

00:24:32,320 --> 00:24:38,380
the server by running git push origin

00:24:34,480 --> 00:24:41,050
and the name of the branch and now your

00:24:38,380 --> 00:24:42,580
feature should be available in the code

00:24:41,050 --> 00:24:47,620
hosting system for other people to

00:24:42,580 --> 00:24:49,510
download and review we missed the bow I

00:24:47,620 --> 00:24:52,330
got these transitions wrong my apologies

00:24:49,510 --> 00:24:54,400
so now that we've got that information

00:24:52,330 --> 00:24:56,860
available the next thing that we want to

00:24:54,400 --> 00:25:01,030
do is actually test that feature before

00:24:56,860 --> 00:25:03,370
going ahead and putting it into the into

00:25:01,030 --> 00:25:04,900
the main line we're in a separate

00:25:03,370 --> 00:25:06,940
feature branch at this point so before

00:25:04,900 --> 00:25:10,660
we merge it into dev we're going to go

00:25:06,940 --> 00:25:12,490
ahead and as the reviewer update our

00:25:10,660 --> 00:25:14,440
local list of branches with git fetch

00:25:12,490 --> 00:25:16,270
that will tell us that the new branch

00:25:14,440 --> 00:25:18,880
one two three four new feature is now

00:25:16,270 --> 00:25:21,910
available we're going to clean up our

00:25:18,880 --> 00:25:24,250
database before we actually check out

00:25:21,910 --> 00:25:25,920
the branch so again make sure you're

00:25:24,250 --> 00:25:29,350
going through this constant process of

00:25:25,920 --> 00:25:31,960
resetting everything and yes it takes

00:25:29,350 --> 00:25:33,940
time but it takes more time if you've

00:25:31,960 --> 00:25:35,800
got extra settings in your database that

00:25:33,940 --> 00:25:39,160
are going to be conflicting accidentally

00:25:35,800 --> 00:25:41,470
so reset really really reset and then go

00:25:39,160 --> 00:25:44,290
ahead and check out the new branch with

00:25:41,470 --> 00:25:45,700
the tracking origins that you can push

00:25:44,290 --> 00:25:48,190
it back up if you want to make changes

00:25:45,700 --> 00:25:56,640
to it going to then go ahead and import

00:25:48,190 --> 00:25:59,800
the new feature should be that easy and

00:25:56,640 --> 00:26:01,540
then you check it out we've taken a

00:25:59,800 --> 00:26:04,510
double look at things everything looks

00:26:01,540 --> 00:26:07,780
fine and you can go ahead now and pull

00:26:04,510 --> 00:26:10,600
it into the main development branch this

00:26:07,780 --> 00:26:13,150
is done by first doing your get check

00:26:10,600 --> 00:26:16,230
out so go into the branch where you

00:26:13,150 --> 00:26:18,760
actually want to receive the new feature

00:26:16,230 --> 00:26:21,880
ensure your copy of the branch is up to

00:26:18,760 --> 00:26:24,000
date we can have the poll verse or sorry

00:26:21,880 --> 00:26:26,679
the rebase versus merge debate later on

00:26:24,000 --> 00:26:28,600
but this will give you a one-liner that

00:26:26,679 --> 00:26:30,220
if your team is using rebase this will

00:26:28,600 --> 00:26:30,990
work and then we're going to go ahead

00:26:30,220 --> 00:26:32,880
and

00:26:30,990 --> 00:26:35,340
to include the new feature into the

00:26:32,880 --> 00:26:37,890
current branch by using git merge with a

00:26:35,340 --> 00:26:41,520
no fast-forward flag which will force a

00:26:37,890 --> 00:26:44,070
merge commits which we can easily undo

00:26:41,520 --> 00:26:46,679
this becomes relevant and then of course

00:26:44,070 --> 00:26:51,150
the name of the branch that we're going

00:26:46,679 --> 00:26:52,380
to be pulling in however you may have

00:26:51,150 --> 00:26:55,860
conflicts that you need to deal with

00:26:52,380 --> 00:26:57,540
when you do that merge so I'm going to

00:26:55,860 --> 00:27:00,330
take a step back just for half a second

00:26:57,540 --> 00:27:02,400
and remind people what a conflict is and

00:27:00,330 --> 00:27:05,520
get because it can seem really really

00:27:02,400 --> 00:27:07,440
stressful when you're doing bits of

00:27:05,520 --> 00:27:09,000
these pieces and you know maybe you're

00:27:07,440 --> 00:27:10,200
doing a rebase you run into a conflict

00:27:09,000 --> 00:27:11,910
and all of a sudden you're in a detached

00:27:10,200 --> 00:27:15,660
head state and detached head sound

00:27:11,910 --> 00:27:18,450
really freaking scary so just to quickly

00:27:15,660 --> 00:27:21,030
remind folks conflict is when there is

00:27:18,450 --> 00:27:24,360
overlap at exactly the same line it's

00:27:21,030 --> 00:27:26,370
the Venn diagram and broken you know as

00:27:24,360 --> 00:27:28,500
sort of the middle of that Venn diagram

00:27:26,370 --> 00:27:30,960
so if you're going to do a successful

00:27:28,500 --> 00:27:33,150
merge you can have anything coming from

00:27:30,960 --> 00:27:34,920
ours and anything coming from theirs or

00:27:33,150 --> 00:27:36,330
anything coming from my current branch

00:27:34,920 --> 00:27:39,300
and anything coming from the branch

00:27:36,330 --> 00:27:41,580
which is being merged in as long as

00:27:39,300 --> 00:27:44,309
there's not a Venn diagram as long as

00:27:41,580 --> 00:27:46,710
they are on separate lines get can

00:27:44,309 --> 00:27:52,620
figure out how to merge those two pieces

00:27:46,710 --> 00:27:54,440
together killing with conflict is a

00:27:52,620 --> 00:27:56,910
little bit painful I can appreciate this

00:27:54,440 --> 00:27:59,040
and anyone who says differently is

00:27:56,910 --> 00:28:00,990
selling you something I however i'm not

00:27:59,040 --> 00:28:03,660
selling you anything today but we are

00:28:00,990 --> 00:28:04,950
going to investigate conflict so we need

00:28:03,660 --> 00:28:08,370
to figure out where the point of

00:28:04,950 --> 00:28:10,440
conflict is if when we do this merge

00:28:08,370 --> 00:28:12,480
there if there is conflict we need to

00:28:10,440 --> 00:28:14,010
figure out where it's coming from the

00:28:12,480 --> 00:28:17,929
first thing you can do is go ahead and

00:28:14,010 --> 00:28:20,520
run the git merge tool if you have

00:28:17,929 --> 00:28:22,590
nothing additional set up maybe you've

00:28:20,520 --> 00:28:24,270
got a GUI that you're using maybe you've

00:28:22,590 --> 00:28:27,270
got some more interesting software to

00:28:24,270 --> 00:28:28,770
sort of examine things and you'll have a

00:28:27,270 --> 00:28:31,500
tool which comes up which will give you

00:28:28,770 --> 00:28:33,960
a side-by-side comparison of the two

00:28:31,500 --> 00:28:35,880
different branches and shows you the

00:28:33,960 --> 00:28:37,559
piece that's broken in the middle and

00:28:35,880 --> 00:28:39,150
allows you again depending on the

00:28:37,559 --> 00:28:42,669
software that you're using to click and

00:28:39,150 --> 00:28:46,299
accept which side you want to keep

00:28:42,669 --> 00:28:48,669
I like kaleidoscope but again remember

00:28:46,299 --> 00:28:51,489
how I said we don't necessarily want

00:28:48,669 --> 00:28:54,039
when we're working with features to

00:28:51,489 --> 00:28:57,909
merge them in we want it to more than

00:28:54,039 --> 00:28:59,739
likely be a clean import so if you do

00:28:57,909 --> 00:29:01,330
end up with a merge conflict definitely

00:28:59,739 --> 00:29:03,549
go and investigate at first in terms of

00:29:01,330 --> 00:29:06,639
that merge tool but more than likely

00:29:03,549 --> 00:29:11,080
what you probably want to do is back up

00:29:06,639 --> 00:29:13,149
and not have that that merge in place

00:29:11,080 --> 00:29:14,559
right away you probably want to have a

00:29:13,149 --> 00:29:16,809
conversation with your with your

00:29:14,559 --> 00:29:19,359
co-workers your teammates figure out

00:29:16,809 --> 00:29:21,100
what it is about that particular feature

00:29:19,359 --> 00:29:24,220
which is causing the conflict to begin

00:29:21,100 --> 00:29:25,840
with so we can undo the merge so long as

00:29:24,220 --> 00:29:28,749
we haven't published it yet by running

00:29:25,840 --> 00:29:32,440
git reset merge and then original head

00:29:28,749 --> 00:29:35,830
and or or rigid or again is a special

00:29:32,440 --> 00:29:38,619
pointer that in get speak basically

00:29:35,830 --> 00:29:40,960
means something really important

00:29:38,619 --> 00:29:44,289
happened at this particular commit that

00:29:40,960 --> 00:29:47,440
I think is dangerous so we it will allow

00:29:44,289 --> 00:29:50,139
you to go back to that last dangerous

00:29:47,440 --> 00:29:52,960
action and get perceives merge to be a

00:29:50,139 --> 00:29:54,340
dangerous action so once we've sort of

00:29:52,960 --> 00:29:56,320
unset that and kind of cleaned

00:29:54,340 --> 00:29:58,869
everything up a little bit we can now go

00:29:56,320 --> 00:30:01,059
back and take more of a look at what the

00:29:58,869 --> 00:30:04,149
difference is between those two so when

00:30:01,059 --> 00:30:06,519
we first exported the feature we ran get

00:30:04,149 --> 00:30:08,559
diff simply on its own this time we're

00:30:06,519 --> 00:30:10,809
going to use it to explicitly compare

00:30:08,559 --> 00:30:13,899
two different branches and I've used

00:30:10,809 --> 00:30:16,419
here yet if my current feature branch

00:30:13,899 --> 00:30:18,999
that I want to examine three periods and

00:30:16,419 --> 00:30:20,470
then master or dev or whatever the

00:30:18,999 --> 00:30:24,279
branches that you want to compare it

00:30:20,470 --> 00:30:26,499
against excuse me the three periods will

00:30:24,279 --> 00:30:28,720
then show you only what's different in

00:30:26,499 --> 00:30:31,090
one or the other if you want to show the

00:30:28,720 --> 00:30:34,989
history of both knock that down to two

00:30:31,090 --> 00:30:38,200
periods and you know figure out what's

00:30:34,989 --> 00:30:40,919
happened now if you decide that you

00:30:38,200 --> 00:30:43,989
don't really want to deal with the

00:30:40,919 --> 00:30:45,669
conflict per se and you know that your

00:30:43,989 --> 00:30:48,820
version is right and you've decided that

00:30:45,669 --> 00:30:50,830
it's OK to save your version what you

00:30:48,820 --> 00:30:54,369
can do is when you do that merge you can

00:30:50,830 --> 00:30:56,590
use the minus s flag which is a strategy

00:30:54,369 --> 00:30:58,720
and you can explicitly say

00:30:56,590 --> 00:31:01,210
I know that mine is right or I know that

00:30:58,720 --> 00:31:04,779
bears is right and what it does is it

00:31:01,210 --> 00:31:07,570
separates that Venn diagram off pulls

00:31:04,779 --> 00:31:09,549
off the other side and keeps only one or

00:31:07,570 --> 00:31:12,159
the other so in this case you can see

00:31:09,549 --> 00:31:14,860
down at the bottom here get merged s4

00:31:12,159 --> 00:31:17,110
strategy I can choose either ours or

00:31:14,860 --> 00:31:20,710
theirs that's going to do it across the

00:31:17,110 --> 00:31:23,230
entire merge branch though so if you

00:31:20,710 --> 00:31:25,210
want to and be a little bit more

00:31:23,230 --> 00:31:27,429
granular and sort of pick and choose

00:31:25,210 --> 00:31:30,130
which things you want to keep you'll

00:31:27,429 --> 00:31:34,419
want to use the merge tools as part of

00:31:30,130 --> 00:31:36,700
the merge process instead that's most of

00:31:34,419 --> 00:31:39,789
what I had I know that we do have an

00:31:36,700 --> 00:31:42,399
hour together um so I'm very very happy

00:31:39,789 --> 00:31:44,440
to take questions I'm also happy to help

00:31:42,399 --> 00:31:47,080
facilitate conversations with folks who

00:31:44,440 --> 00:31:49,600
got more in depth this is one of those

00:31:47,080 --> 00:31:51,370
really tricky topic swear i have taught

00:31:49,600 --> 00:31:53,220
it as a one-day workshop and now you've

00:31:51,370 --> 00:31:56,260
had sort of my very high level overview

00:31:53,220 --> 00:31:58,480
version of it it's really tricky to give

00:31:56,260 --> 00:32:01,240
an in-between that has a little bit more

00:31:58,480 --> 00:32:04,360
but not too much more so a couple of

00:32:01,240 --> 00:32:07,120
different resources there and then even

00:32:04,360 --> 00:32:08,789
more resources a couple of full

00:32:07,120 --> 00:32:11,140
disclosure I don't work for them anymore

00:32:08,789 --> 00:32:13,029
but Drupal eyes me it does have a couple

00:32:11,140 --> 00:32:15,909
of really great video series if you

00:32:13,029 --> 00:32:18,220
prefer video learning on using a brush

00:32:15,909 --> 00:32:21,520
or drush with features so those are some

00:32:18,220 --> 00:32:23,980
great resources and then there's a mic

00:32:21,520 --> 00:32:26,380
there if we want to record the questions

00:32:23,980 --> 00:32:29,140
but I'm also just as happy to turn off

00:32:26,380 --> 00:32:30,700
the mic and sort of divide people up

00:32:29,140 --> 00:32:34,140
into the kinds of problems that they're

00:32:30,700 --> 00:32:39,309
having at this point so thank you yep

00:32:34,140 --> 00:32:43,600
yes oh gosh my favorite scene in The

00:32:39,309 --> 00:32:52,000
Princess Bride I can't say all the

00:32:43,600 --> 00:32:54,580
scenes I I really I kind of like the

00:32:52,000 --> 00:32:57,880
peanut one there's no more rhyming and I

00:32:54,580 --> 00:33:00,880
mean it anybody want a peanut yeah yeah

00:32:57,880 --> 00:33:03,340
I mean it's just a fantastic movie start

00:33:00,880 --> 00:33:05,679
to finish so yeah tricky question any

00:33:03,340 --> 00:33:06,899
other you know like deep meaningful

00:33:05,679 --> 00:33:11,639
questions that

00:33:06,899 --> 00:33:13,769
yeah oh if you just go to the session

00:33:11,639 --> 00:33:15,539
description and they're already uploaded

00:33:13,769 --> 00:33:17,009
on the session you may need to refresh

00:33:15,539 --> 00:33:22,409
it but I did upload before I started

00:33:17,009 --> 00:33:25,109
they should already be there other

00:33:22,409 --> 00:33:26,940
questions everyone's being a real

00:33:25,109 --> 00:33:28,919
trooper you absolutely do not need to

00:33:26,940 --> 00:33:30,450
say I'm but I am happy to say for as

00:33:28,919 --> 00:33:32,639
long as people have questions because I

00:33:30,450 --> 00:33:35,129
know that this is a it's a tricky tricky

00:33:32,639 --> 00:33:37,259
piece and can be super super frustrating

00:33:35,129 --> 00:33:38,629
if you struggled with it I I know that I

00:33:37,259 --> 00:33:42,059
certainly have struggled with it myself

00:33:38,629 --> 00:33:43,229
but this is the sort of like once you

00:33:42,059 --> 00:33:45,330
see it all written down it's really

00:33:43,229 --> 00:33:46,469
really easy but it doesn't feel really

00:33:45,330 --> 00:33:50,089
really easy when you're in the middle of

00:33:46,469 --> 00:33:50,089
it mmhmm yeah

00:33:57,110 --> 00:34:03,290
yep so in terms of the two people

00:34:01,760 --> 00:34:06,140
working on the same feature at the same

00:34:03,290 --> 00:34:09,050
time the disadvantage there is that you

00:34:06,140 --> 00:34:12,230
are more likely to end up with merge

00:34:09,050 --> 00:34:13,790
conflicts it becomes more likely that

00:34:12,230 --> 00:34:16,760
you'll have slightly different settings

00:34:13,790 --> 00:34:18,919
and just generally you are more likely

00:34:16,760 --> 00:34:21,320
to run into problems if you don't have

00:34:18,919 --> 00:34:22,909
cleaned like you have to just be really

00:34:21,320 --> 00:34:26,570
really careful about cleaning everything

00:34:22,909 --> 00:34:28,070
up and if it's not going to work for you

00:34:26,570 --> 00:34:31,129
if you need to work on the same feature

00:34:28,070 --> 00:34:33,950
at the same time unfortunately just

00:34:31,129 --> 00:34:35,899
brace yourself and be ready for more for

00:34:33,950 --> 00:34:37,220
more difficulties but if you can you

00:34:35,899 --> 00:34:39,290
know maybe there's ways to sort of

00:34:37,220 --> 00:34:41,810
separate out that feature and sort of

00:34:39,290 --> 00:34:43,609
abstract it down and say you know is

00:34:41,810 --> 00:34:44,990
there should this be related to the

00:34:43,609 --> 00:34:46,879
content part of it should just be

00:34:44,990 --> 00:34:48,470
related to the view part of it you know

00:34:46,879 --> 00:34:50,149
is there a way that you can separate it

00:34:48,470 --> 00:34:55,419
out based on the different roles that

00:34:50,149 --> 00:34:55,419
people are performing yeah question

00:35:12,359 --> 00:35:18,390
I spent asked a question the strategy

00:35:16,470 --> 00:35:21,150
that I have found most effective is

00:35:18,390 --> 00:35:23,999
empathy followed by really great

00:35:21,150 --> 00:35:25,859
documentation in a lot of cases I found

00:35:23,999 --> 00:35:28,739
that people use the quote-unquote wrong

00:35:25,859 --> 00:35:30,630
strategy because it for whatever reason

00:35:28,739 --> 00:35:32,489
feels more natural to them it doesn't

00:35:30,630 --> 00:35:35,039
feel as scary they're less intimidated

00:35:32,489 --> 00:35:37,859
by whatever it is or in a lot of cases

00:35:35,039 --> 00:35:39,989
like these when you see these commands

00:35:37,859 --> 00:35:42,660
written out they're not that bad but

00:35:39,989 --> 00:35:44,369
when you try and remember them all when

00:35:42,660 --> 00:35:45,989
you're not when they're not documented

00:35:44,369 --> 00:35:47,579
if you're only doing that export if

00:35:45,989 --> 00:35:49,859
you're only doing this stuff every so

00:35:47,579 --> 00:35:51,180
often it becomes really difficult to

00:35:49,859 --> 00:35:54,210
remember and if you're not comfortable

00:35:51,180 --> 00:35:55,559
and get and you don't really know what

00:35:54,210 --> 00:35:57,210
you're doing and all of a sudden you're

00:35:55,559 --> 00:35:59,640
in a detached head state because someone

00:35:57,210 --> 00:36:02,999
told you to rebase that's really really

00:35:59,640 --> 00:36:05,130
freaking scary so working with people

00:36:02,999 --> 00:36:06,809
maybe it's pair programming maybe it's

00:36:05,130 --> 00:36:10,259
writing documentation maybe it's just

00:36:06,809 --> 00:36:12,239
you know if you happen to work remotely

00:36:10,259 --> 00:36:14,400
can you sit on a hang out with them and

00:36:12,239 --> 00:36:17,339
and go through the process with them

00:36:14,400 --> 00:36:18,869
again documentation so i love the

00:36:17,339 --> 00:36:21,239
command line in terms of those copy

00:36:18,869 --> 00:36:23,220
paste commands you know this cluster has

00:36:21,239 --> 00:36:25,170
to do with updating a feature this

00:36:23,220 --> 00:36:27,329
cluster has to do with whatever it

00:36:25,170 --> 00:36:31,140
happens to be can you draw the diagrams

00:36:27,329 --> 00:36:32,759
can you and it if you can overcome if it

00:36:31,140 --> 00:36:35,339
is a fear problem if you can overcome

00:36:32,759 --> 00:36:40,249
the fear problem then you're golden if

00:36:35,339 --> 00:36:40,249
it's folks who are just opinionated then

00:36:41,299 --> 00:36:47,460
ask them why they hold that opinion so I

00:36:44,759 --> 00:36:50,309
had a the detective who I worked with a

00:36:47,460 --> 00:36:52,650
couple of years ago and we had this I i

00:36:50,309 --> 00:36:54,359
personally actually don't care if Yuri

00:36:52,650 --> 00:36:56,670
base or if you merge to pull things

00:36:54,359 --> 00:36:57,960
together does not matter to me one

00:36:56,670 --> 00:36:59,400
little bit and there's no rebasing

00:36:57,960 --> 00:37:01,589
police out there who were going to show

00:36:59,400 --> 00:37:05,009
up at your door exactly that noise and

00:37:01,589 --> 00:37:06,749
like complain but your teammates may

00:37:05,009 --> 00:37:08,460
complain so why are they complaining and

00:37:06,749 --> 00:37:10,559
that was something that drill and I had

00:37:08,460 --> 00:37:12,690
this really fantastic conversation about

00:37:10,559 --> 00:37:14,700
my kept saying that doesn't matter like

00:37:12,690 --> 00:37:16,680
what why do you like rebasing so much

00:37:14,700 --> 00:37:18,450
what's the big deal about this and so we

00:37:16,680 --> 00:37:21,809
went through the different reasons and

00:37:18,450 --> 00:37:23,940
for him it made bisect easier to use and

00:37:21,809 --> 00:37:25,380
it made it easier for him to read the

00:37:23,940 --> 00:37:28,020
history one

00:37:25,380 --> 00:37:30,900
thing went wrong so is the lead dev is

00:37:28,020 --> 00:37:32,700
the senior dev on the team I could

00:37:30,900 --> 00:37:35,970
inflict a little bit of pain on myself

00:37:32,700 --> 00:37:38,310
and deal with the slight overhead of

00:37:35,970 --> 00:37:40,680
rebasing so that it meant in times of

00:37:38,310 --> 00:37:42,300
crisis he was able to better unpicked

00:37:40,680 --> 00:37:44,640
the history but we had to have that

00:37:42,300 --> 00:37:47,130
conversation and when it was just I mean

00:37:44,640 --> 00:37:50,340
we had sort of passive aggressive

00:37:47,130 --> 00:37:52,650
documentation editing where whoever had

00:37:50,340 --> 00:37:54,600
most recently touched the wiki that was

00:37:52,650 --> 00:37:56,850
the documentation that got followed and

00:37:54,600 --> 00:37:59,490
so they we had this sort of it was

00:37:56,850 --> 00:38:01,320
getting good humor mostly back and forth

00:37:59,490 --> 00:38:04,470
over which method to choose until we

00:38:01,320 --> 00:38:18,240
finally have that conversation good luck

00:38:04,470 --> 00:38:20,220
I hear whiskey helps yes yep great

00:38:18,240 --> 00:38:22,740
question so as a one-person developer

00:38:20,220 --> 00:38:26,130
what are the benefits to using it I

00:38:22,740 --> 00:38:27,840
don't know about you but I personally

00:38:26,130 --> 00:38:30,270
have a really hard time remembering what

00:38:27,840 --> 00:38:34,140
i did for lunch let alone what i did two

00:38:30,270 --> 00:38:36,390
weeks ago so my saving grace ingot is it

00:38:34,140 --> 00:38:39,000
allows me to track my thought process in

00:38:36,390 --> 00:38:40,770
ways that aren't necessarily recorded in

00:38:39,000 --> 00:38:43,470
tickets or in other documentation and

00:38:40,770 --> 00:38:45,360
it's tied directly to the code so if you

00:38:43,470 --> 00:38:47,910
find that the types of tasks that you're

00:38:45,360 --> 00:38:49,830
working on are documented really really

00:38:47,910 --> 00:38:52,200
thoroughly outside of get you may find

00:38:49,830 --> 00:38:53,580
that also documenting it within get is

00:38:52,200 --> 00:38:55,860
not helping you and that you're not

00:38:53,580 --> 00:38:57,300
really getting a lot of advantages it's

00:38:55,860 --> 00:38:58,470
steep learning curve and it's

00:38:57,300 --> 00:39:02,790
frustrating and you're not really

00:38:58,470 --> 00:39:07,770
winning a lot to begin with and that

00:39:02,790 --> 00:39:09,420
said sometimes I make mistakes it's nice

00:39:07,770 --> 00:39:11,520
to be able to go back and look at what

00:39:09,420 --> 00:39:16,890
changed here and what changed there and

00:39:11,520 --> 00:39:18,750
certainly the more the more that I was

00:39:16,890 --> 00:39:20,430
able to diagram at the process and the

00:39:18,750 --> 00:39:22,350
more that I was able to push myself to

00:39:20,430 --> 00:39:24,630
learn this tool that really frustrated

00:39:22,350 --> 00:39:26,760
me in Prague I gave a talk called get

00:39:24,630 --> 00:39:29,940
makes me angry inside and it still makes

00:39:26,760 --> 00:39:32,940
me angry inside and but I found that the

00:39:29,940 --> 00:39:35,070
more that I've been able to control how

00:39:32,940 --> 00:39:36,750
the tool helps me the more that I've

00:39:35,070 --> 00:39:38,789
been able to enjoy the development

00:39:36,750 --> 00:39:41,459
process using dit but yeah it can be

00:39:38,789 --> 00:39:46,099
really hard to be motivated to use it

00:39:41,459 --> 00:39:46,099
when you're a team of one I agree yep oh

00:39:46,369 --> 00:39:50,130
can you run to the microphone for that

00:39:48,869 --> 00:39:52,609
because I won't be able to repeat all of

00:39:50,130 --> 00:39:52,609
them I died

00:40:44,809 --> 00:40:47,809
awesome

00:40:51,359 --> 00:41:10,270
yeah yeah nice other questions I I do

00:41:09,099 --> 00:41:12,130
hope that everyone feels that they've

00:41:10,270 --> 00:41:14,290
gotten value from this session even

00:41:12,130 --> 00:41:15,790
though it was relatively short and but

00:41:14,290 --> 00:41:18,309
there's been some fantastic questions as

00:41:15,790 --> 00:41:19,960
i said i'm very happy to continue

00:41:18,309 --> 00:41:22,089
answering them but i'm starting to get

00:41:19,960 --> 00:41:25,210
the blank stare of i'm just to brain

00:41:22,089 --> 00:41:27,040
fried to get up and leave so i encourage

00:41:25,210 --> 00:41:29,020
you at this point i'm going to stop

00:41:27,040 --> 00:41:31,180
talking definitely let me know if you've

00:41:29,020 --> 00:41:34,690
got more questions and like i said those

00:41:31,180 --> 00:41:36,040
slides are online and congratulations

00:41:34,690 --> 00:41:38,490
for making it to the end of day one at

00:41:36,040 --> 00:41:38,490

YouTube URL: https://www.youtube.com/watch?v=Yt1oR6TqGXg


