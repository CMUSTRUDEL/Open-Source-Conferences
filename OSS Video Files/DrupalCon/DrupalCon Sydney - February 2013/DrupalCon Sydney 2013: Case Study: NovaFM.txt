Title: DrupalCon Sydney 2013: Case Study: NovaFM
Publication date: 2013-03-29
Playlist: DrupalCon Sydney - February 2013
Description: 
	3 PreviousNext developers, Jack Taranto, Christian Biggins & Nick Schuch, will deliver a detailed technical insight into the huge development effort that went into NovaFM's new website.

We will be providing an overview of the project, focusing on key elements such as its responsive implementation of advertising & media, the enormous data migration task of some 100,000 nodes, extensive hosting network and geolocation.

The website itself has been an amazing success, receiving millions of page views per month, and big increases in user engagement and mobile access. Drupal has helped empower Nova's content creators into having unrivaled control of what they are able to produce.
Captions: 
	00:00:00,170 --> 00:00:04,589
thanks for coming everybody um my name

00:00:02,909 --> 00:00:06,930
is lee and i'm here to introduce the

00:00:04,589 --> 00:00:08,849
rest of the previous next guys who've

00:00:06,930 --> 00:00:11,490
done some brilliant work on the nova FM

00:00:08,849 --> 00:00:14,639
website which i believe is a responsive

00:00:11,490 --> 00:00:17,130
based site actually design for it but i

00:00:14,639 --> 00:00:19,260
can't take any credit because i did the

00:00:17,130 --> 00:00:23,039
easy bit and these guys made it come to

00:00:19,260 --> 00:00:25,920
life so got Jack Toronto Nick I'm sorry

00:00:23,039 --> 00:00:28,590
I don't know your surname I come she and

00:00:25,920 --> 00:00:37,260
and Christian begins so I'm please take

00:00:28,590 --> 00:00:41,100
away Jack thanks very much bleh cool so

00:00:37,260 --> 00:00:43,920
as a lead is mention my name is Jack

00:00:41,100 --> 00:00:46,230
Toronto I'm a front-end developer and

00:00:43,920 --> 00:00:48,180
FEMA and I've been working with

00:00:46,230 --> 00:00:50,700
previousnext for about three years my

00:00:48,180 --> 00:00:54,180
team be coming up in four years now I've

00:00:50,700 --> 00:00:56,010
worked on a huge variety of projects

00:00:54,180 --> 00:00:58,410
doing theming for heaps of different

00:00:56,010 --> 00:01:02,910
stuff small sites and really big sites

00:00:58,410 --> 00:01:09,860
like number of em and Christian begins

00:01:02,910 --> 00:01:15,030
and next you will also be speaking so so

00:01:09,860 --> 00:01:20,490
we'll be covering a largely technical

00:01:15,030 --> 00:01:22,320
overview of Novas site it's it says on

00:01:20,490 --> 00:01:23,369
the session that it's a beginner but

00:01:22,320 --> 00:01:25,799
it's probably actually more like an

00:01:23,369 --> 00:01:28,170
intermediate so hopefully that doesn't

00:01:25,799 --> 00:01:30,270
scare any people away but will we show

00:01:28,170 --> 00:01:32,820
you lots of different code examples and

00:01:30,270 --> 00:01:36,659
things like that focusing specifically

00:01:32,820 --> 00:01:39,000
on the responsive design and Christian

00:01:36,659 --> 00:01:42,840
will be taking you through the enormous

00:01:39,000 --> 00:01:50,790
diode Atta migration task and Nick will

00:01:42,840 --> 00:01:54,990
be focusing on hosting and GOP so Nova

00:01:50,790 --> 00:01:56,520
came to us and they wanted a complete

00:01:54,990 --> 00:01:59,310
I've got a spelling mistake there that's

00:01:56,520 --> 00:02:02,130
all right they wanted a complete

00:01:59,310 --> 00:02:06,930
redesign of their entire website so it

00:02:02,130 --> 00:02:11,220
was based on a totally custom CMS which

00:02:06,930 --> 00:02:13,560
had evolved organically over quite a few

00:02:11,220 --> 00:02:15,209
years and it had like tons of

00:02:13,560 --> 00:02:17,940
different stuff added into it it didn't

00:02:15,209 --> 00:02:20,030
really have any like that this the

00:02:17,940 --> 00:02:22,800
original structure was completely lost

00:02:20,030 --> 00:02:25,980
so yeah they came to us we had to

00:02:22,800 --> 00:02:31,019
redesign that we had to migrate all of

00:02:25,980 --> 00:02:37,019
the data and we had to build it and make

00:02:31,019 --> 00:02:41,519
it responsive as well so it was a pretty

00:02:37,019 --> 00:02:42,930
immense task the total development time

00:02:41,519 --> 00:02:46,560
I think was maybe around three months

00:02:42,930 --> 00:02:48,239
not exactly sure there was about five of

00:02:46,560 --> 00:02:53,780
us working on it I think at the most

00:02:48,239 --> 00:02:55,950
maybe six so there were hundreds

00:02:53,780 --> 00:03:00,420
literally hundreds of thousands of nodes

00:02:55,950 --> 00:03:02,640
that we had to migrate there were there

00:03:00,420 --> 00:03:05,069
was an immense amount of advertising the

00:03:02,640 --> 00:03:09,739
whole sites advertising based and every

00:03:05,069 --> 00:03:14,400
page has got ads all over it and it's

00:03:09,739 --> 00:03:16,170
mainly thanks to its some it's a really

00:03:14,400 --> 00:03:17,519
media heavy site as well so there's

00:03:16,170 --> 00:03:20,340
images everywhere there's video

00:03:17,519 --> 00:03:22,500
everywhere and there's sound files and

00:03:20,340 --> 00:03:24,959
everything and also there's five

00:03:22,500 --> 00:03:29,609
stations one for Sydney Brisbane

00:03:24,959 --> 00:03:32,310
Adelaide melbourne and perth and they've

00:03:29,609 --> 00:03:36,090
all they're all the content so from the

00:03:32,310 --> 00:03:41,190
same site and yeah the whole thing's

00:03:36,090 --> 00:03:44,100
responsive so a look at the stats before

00:03:41,190 --> 00:03:45,950
we release the site they had one and a

00:03:44,100 --> 00:03:48,959
half million unique visitors per month

00:03:45,950 --> 00:03:50,639
they had three million three million

00:03:48,959 --> 00:03:52,730
page views and two and a half minutes

00:03:50,639 --> 00:03:57,260
was the average time spent on the site

00:03:52,730 --> 00:04:02,190
so that jumped up to thirty two percent

00:03:57,260 --> 00:04:03,900
more in unique visitors and yeah

00:04:02,190 --> 00:04:06,569
sixty-four percent increase in page

00:04:03,900 --> 00:04:13,230
views and the time on site now almost

00:04:06,569 --> 00:04:16,079
doubled 24 minutes so I'll be taking you

00:04:13,230 --> 00:04:19,950
through a few things around the

00:04:16,079 --> 00:04:22,440
responsive design I'll be focusing on

00:04:19,950 --> 00:04:24,570
the base theme and what we chose and

00:04:22,440 --> 00:04:25,700
some of the custom stuff that went into

00:04:24,570 --> 00:04:29,220
that

00:04:25,700 --> 00:04:31,050
I'll be going into a lot of detail about

00:04:29,220 --> 00:04:35,880
responsive advertising and the media

00:04:31,050 --> 00:04:43,830
choices as well that we made so getting

00:04:35,880 --> 00:04:49,800
started we had a few obstacles in

00:04:43,830 --> 00:04:52,410
picking a theme to choose so we had not

00:04:49,800 --> 00:04:53,340
very much time to choose something or

00:04:52,410 --> 00:04:55,440
not very much time to implement

00:04:53,340 --> 00:04:57,540
something we needed something that was

00:04:55,440 --> 00:05:00,030
going to be reliable and it also need to

00:04:57,540 --> 00:05:04,320
be based on 960 grid system which is

00:05:00,030 --> 00:05:07,770
what leaves designs use so we could have

00:05:04,320 --> 00:05:10,260
possibly built a custom theme with a

00:05:07,770 --> 00:05:11,790
custom grid system and implemented you

00:05:10,260 --> 00:05:14,850
know all sorts of different stuff to get

00:05:11,790 --> 00:05:17,280
that happening but it kind of made sense

00:05:14,850 --> 00:05:20,520
to pick a Drupal base theme that was

00:05:17,280 --> 00:05:23,340
solid and had you know all the work or

00:05:20,520 --> 00:05:30,870
the hard work done for us basically so

00:05:23,340 --> 00:05:32,100
we used amiga to do that it's it's it's

00:05:30,870 --> 00:05:33,660
probably one of the biggest I think it

00:05:32,100 --> 00:05:37,530
might even have the biggest user base of

00:05:33,660 --> 00:05:39,150
Drupal's responsive themes so that's a

00:05:37,530 --> 00:05:42,630
pretty big plus going for it at the time

00:05:39,150 --> 00:05:45,419
it was a version 30 point I think so

00:05:42,630 --> 00:05:48,080
that was another good thing it's got an

00:05:45,419 --> 00:05:50,610
awesome grid system which uses

00:05:48,080 --> 00:05:53,180
collapsing column widths so it's got

00:05:50,610 --> 00:05:56,280
different grids that you can choose

00:05:53,180 --> 00:05:58,610
12-24 column grids and the grid wits

00:05:56,280 --> 00:06:02,010
shrink down as the page with collapse

00:05:58,610 --> 00:06:04,710
collapses so and it's also got some

00:06:02,010 --> 00:06:08,280
other good stuff like JavaScript body

00:06:04,710 --> 00:06:09,930
classes so the device width adds a body

00:06:08,280 --> 00:06:16,290
class to the page and can then use that

00:06:09,930 --> 00:06:20,280
then to manipulate stuff later on yeah

00:06:16,290 --> 00:06:22,260
so the grid system you can see an

00:06:20,280 --> 00:06:23,669
example there I've got the desktop

00:06:22,260 --> 00:06:27,380
version then kind of the shrunk down

00:06:23,669 --> 00:06:30,960
version for a tablet you can see how the

00:06:27,380 --> 00:06:34,520
various regions in the header resized

00:06:30,960 --> 00:06:36,510
that navigations resize the logos resize

00:06:34,520 --> 00:06:38,660
so there's a little bit of custom stuff

00:06:36,510 --> 00:06:42,590
that went into that but the Omega

00:06:38,660 --> 00:06:43,940
region grid layout system helped heaps

00:06:42,590 --> 00:06:46,190
and putting that together we're

00:06:43,940 --> 00:06:49,160
literally able to lay out the bulk of

00:06:46,190 --> 00:06:50,870
the site like the base theme of the site

00:06:49,160 --> 00:06:52,700
the header in the footer and all that

00:06:50,870 --> 00:06:57,530
kind of stuff in maybe a day or maybe

00:06:52,700 --> 00:07:02,480
two days something like that yeah so

00:06:57,530 --> 00:07:05,030
some other stuff went into making the

00:07:02,480 --> 00:07:07,790
responsive site really stand out the

00:07:05,030 --> 00:07:10,310
grid system is probably one of the most

00:07:07,790 --> 00:07:13,940
obvious things it uses these tiles which

00:07:10,310 --> 00:07:15,710
are based on the medium rack size so

00:07:13,940 --> 00:07:20,690
medium rec is like an advertising format

00:07:15,710 --> 00:07:22,190
size it's 300 pixels by 250 pixels so

00:07:20,690 --> 00:07:24,290
this these pages that you see here are

00:07:22,190 --> 00:07:27,800
like listing standing listing listing

00:07:24,290 --> 00:07:30,260
pages so all the content is arranged in

00:07:27,800 --> 00:07:33,140
these thumbnails and there's actually

00:07:30,260 --> 00:07:35,840
advertising actually inserted you can

00:07:33,140 --> 00:07:38,600
see there at the top and the bottom so

00:07:35,840 --> 00:07:41,620
these grids collapse based on the device

00:07:38,600 --> 00:07:44,210
width so you've got yeah three columns

00:07:41,620 --> 00:07:46,160
for a desktop to comms for a tablet and

00:07:44,210 --> 00:07:56,150
then the mobile version they kind of

00:07:46,160 --> 00:07:58,310
shrink down become much smaller so it's

00:07:56,150 --> 00:08:01,850
yeah the once it once it gets down to a

00:07:58,310 --> 00:08:03,590
mobile size it becomes fluid yeah so it

00:08:01,850 --> 00:08:09,470
stretches out to fill the fill the page

00:08:03,590 --> 00:08:12,110
yeah we also use CSS media queries to

00:08:09,470 --> 00:08:16,390
hide certain regions on the page so we

00:08:12,110 --> 00:08:18,919
had the example I've got here there's a

00:08:16,390 --> 00:08:22,610
there's two regions at the top there are

00:08:18,919 --> 00:08:23,990
mobile only navigation regions so

00:08:22,610 --> 00:08:26,210
they're actually in the same haytch tml

00:08:23,990 --> 00:08:27,890
that the desktop version gets but they

00:08:26,210 --> 00:08:31,250
just use a CSS media query to set

00:08:27,890 --> 00:08:34,010
display none so they get hidden from the

00:08:31,250 --> 00:08:39,020
user and only displayed on the mobile

00:08:34,010 --> 00:08:41,960
version so it was all this kind of stuff

00:08:39,020 --> 00:08:43,400
that that went into it to get the

00:08:41,960 --> 00:08:44,930
responsive site happening it was the

00:08:43,400 --> 00:08:47,030
first responsive site I'd actually built

00:08:44,930 --> 00:08:49,350
at the time so it's kind of the whole

00:08:47,030 --> 00:08:54,300
thing was a learning experience but

00:08:49,350 --> 00:08:56,730
yeah we got there in the m yeah so the

00:08:54,300 --> 00:08:58,010
next probably that probably the hardest

00:08:56,730 --> 00:09:01,140
thing about implementing the whole

00:08:58,010 --> 00:09:04,260
responsive side was the advertising so

00:09:01,140 --> 00:09:09,450
we have tons of different sizes and

00:09:04,260 --> 00:09:13,530
formats we've got different device wits

00:09:09,450 --> 00:09:16,680
and the ads need to be specific for each

00:09:13,530 --> 00:09:19,980
device so you can see an example here

00:09:16,680 --> 00:09:23,100
I've got the desktop version in the top

00:09:19,980 --> 00:09:27,780
it's got like a full width add skin kind

00:09:23,100 --> 00:09:31,580
of thing then the tablet version on the

00:09:27,780 --> 00:09:37,850
side there uses leaderboards extensively

00:09:31,580 --> 00:09:42,090
mobile version only shows Mr X so each

00:09:37,850 --> 00:09:47,580
each ad each different you know device

00:09:42,090 --> 00:09:49,440
these different ads basically and it's

00:09:47,580 --> 00:09:51,270
so difficult because you've actually got

00:09:49,440 --> 00:09:53,040
one because the site is responsive

00:09:51,270 --> 00:09:55,680
you've only got one version the HTML so

00:09:53,040 --> 00:09:59,580
you're not serving different HTML for

00:09:55,680 --> 00:10:03,600
different devices and all the add tags

00:09:59,580 --> 00:10:06,930
are in the HTML so I mean you could just

00:10:03,600 --> 00:10:09,690
hide the ad like the particular divs

00:10:06,930 --> 00:10:11,280
that the ad renders you could just hide

00:10:09,690 --> 00:10:15,720
that with a media query and say don't

00:10:11,280 --> 00:10:18,000
show up for mobiles but it will like the

00:10:15,720 --> 00:10:20,940
ad engine will still record impressions

00:10:18,000 --> 00:10:24,150
for that for that ad so you have to

00:10:20,940 --> 00:10:27,090
figure out some way of only putting the

00:10:24,150 --> 00:10:31,980
ad tag in the page for certain for

00:10:27,090 --> 00:10:33,540
certain devices and it's all yeah it's

00:10:31,980 --> 00:10:36,870
kind of unnecessarily difficult I think

00:10:33,540 --> 00:10:39,900
if the ad companies we were using double

00:10:36,870 --> 00:10:41,610
click if the ad companies were on board

00:10:39,900 --> 00:10:44,280
with it probably quite a simple thing to

00:10:41,610 --> 00:10:45,570
do there might actually be some some

00:10:44,280 --> 00:10:46,650
guys that out there that do it but I

00:10:45,570 --> 00:10:48,150
don't think the major guys like

00:10:46,650 --> 00:10:51,030
double-click have any real way you're

00:10:48,150 --> 00:10:55,020
able to embed like a jpeg version of the

00:10:51,030 --> 00:10:57,390
ad or something like that but yeah you

00:10:55,020 --> 00:11:01,400
can't actually say this ad is only meant

00:10:57,390 --> 00:11:03,030
to show up on the screen size so

00:11:01,400 --> 00:11:05,250
JavaScript

00:11:03,030 --> 00:11:09,000
was the obvious choice there to embed

00:11:05,250 --> 00:11:11,760
the ad tag so we wrote a custom jquery

00:11:09,000 --> 00:11:13,050
plugin which was about it's probably it

00:11:11,760 --> 00:11:14,550
was probably only about maybe 40 lines

00:11:13,050 --> 00:11:17,940
of code or something like that it was

00:11:14,550 --> 00:11:21,810
quite quite simple really and it took

00:11:17,940 --> 00:11:23,700
advantage of the moderniser media query

00:11:21,810 --> 00:11:25,440
so one knows the media crew is exactly

00:11:23,700 --> 00:11:29,370
the same as the CSS media creates just

00:11:25,440 --> 00:11:31,140
in JavaScript so it talks the browser

00:11:29,370 --> 00:11:33,750
gets the device width and it either

00:11:31,140 --> 00:11:36,720
returns true or false you know based on

00:11:33,750 --> 00:11:40,710
you your media query so you can what CSS

00:11:36,720 --> 00:11:43,020
media queries into into JavaScript and

00:11:40,710 --> 00:11:44,280
then take advantage of them so then it

00:11:43,020 --> 00:11:48,120
was just a matter of writing a couple of

00:11:44,280 --> 00:11:50,540
lines which took like the actual google

00:11:48,120 --> 00:11:54,210
ad code and then put that into the page

00:11:50,540 --> 00:11:57,090
so instead of embedding the actual ad

00:11:54,210 --> 00:12:01,680
tag we just use this little call to the

00:11:57,090 --> 00:12:03,690
plugin it just tells the tells the

00:12:01,680 --> 00:12:05,880
jquery plugin which div to render the ad

00:12:03,690 --> 00:12:09,210
in and then you can actually just

00:12:05,880 --> 00:12:12,060
specify the screen size mobile tablet

00:12:09,210 --> 00:12:16,200
desktop and then the ad will show for

00:12:12,060 --> 00:12:20,010
the appropriate size so there were kind

00:12:16,200 --> 00:12:21,780
of a few limitations in that way of

00:12:20,010 --> 00:12:27,780
working we still have to use CSS to hide

00:12:21,780 --> 00:12:29,310
the ad block from users in case you know

00:12:27,780 --> 00:12:30,840
you might have a user on a desktop which

00:12:29,310 --> 00:12:32,610
is resizing their browser window or

00:12:30,840 --> 00:12:34,860
something like that so if they shrink it

00:12:32,610 --> 00:12:37,020
down you want to hide the ad and not

00:12:34,860 --> 00:12:40,340
break it but that was a problem then you

00:12:37,020 --> 00:12:43,260
wouldn't have ads you wouldn't have ads

00:12:40,340 --> 00:12:45,000
reloading in that case so if people are

00:12:43,260 --> 00:12:47,670
shrinking the size down and stuff the

00:12:45,000 --> 00:12:49,590
ads might not necessarily appear but for

00:12:47,670 --> 00:12:57,260
the bulk of cases it kind of works

00:12:49,590 --> 00:13:00,540
pretty well really so now on to media

00:12:57,260 --> 00:13:02,400
it's just a small splattering of some of

00:13:00,540 --> 00:13:06,510
the stuff they've got going on virtually

00:13:02,400 --> 00:13:10,680
every article or node on the site has

00:13:06,510 --> 00:13:12,240
some form of image or video or gallery

00:13:10,680 --> 00:13:16,020
or something like that you can see we've

00:13:12,240 --> 00:13:16,830
got like YouTube we've got YouTube video

00:13:16,020 --> 00:13:20,760
players we've got

00:13:16,830 --> 00:13:25,310
brightcove video players we've got view

00:13:20,760 --> 00:13:30,090
slideshow galleries flowplayer audio and

00:13:25,310 --> 00:13:31,710
the biggest difficulty with it all is

00:13:30,090 --> 00:13:33,390
that the the actual developers hadn't

00:13:31,710 --> 00:13:36,270
really implemented very much responsive

00:13:33,390 --> 00:13:37,620
stuff at all so even YouTube and things

00:13:36,270 --> 00:13:43,110
like that aren't really straightforward

00:13:37,620 --> 00:13:44,400
to put into a responsive site which is

00:13:43,110 --> 00:13:45,990
probably might have come a long way

00:13:44,400 --> 00:13:48,150
since then this is kind of the end of

00:13:45,990 --> 00:13:50,220
2011 that we were doing this sort of

00:13:48,150 --> 00:13:53,700
stuff so it might be a little bit

00:13:50,220 --> 00:13:57,180
different now so flowplayer gives us the

00:13:53,700 --> 00:14:03,950
audio player which is used for podcasts

00:13:57,180 --> 00:14:06,150
and yes songs and things like that it's

00:14:03,950 --> 00:14:10,740
relatively simple they've got a cove a

00:14:06,150 --> 00:14:11,970
beta version plugin so you just just a

00:14:10,740 --> 00:14:13,410
matter of embedding that JavaScript and

00:14:11,970 --> 00:14:16,500
then you just able to add iPad to the

00:14:13,410 --> 00:14:20,870
end and that gives you a HTML audio tag

00:14:16,500 --> 00:14:23,970
or video tag so it was relatively simple

00:14:20,870 --> 00:14:26,300
yeah nothing nothing too tricky there it

00:14:23,970 --> 00:14:28,440
doesn't quite work as well as an actual

00:14:26,300 --> 00:14:31,560
embedded audio player which gives you

00:14:28,440 --> 00:14:37,650
like a play button inside your mobile

00:14:31,560 --> 00:14:41,640
but yeah it does seem to work ok youtube

00:14:37,650 --> 00:14:45,360
requires some pretty funky CSS you have

00:14:41,640 --> 00:14:48,450
to create a div wrapper and then yeah

00:14:45,360 --> 00:14:50,250
you have to set it as a position

00:14:48,450 --> 00:14:51,990
relative haven't actually got in there

00:14:50,250 --> 00:14:55,950
yeah you said its position relative and

00:14:51,990 --> 00:14:57,900
then the iframe Google's iframe gets

00:14:55,950 --> 00:15:01,590
absolute and then you set it with based

00:14:57,900 --> 00:15:03,770
on its parent so it's kind of totally

00:15:01,590 --> 00:15:06,420
hacky really if you look at the code

00:15:03,770 --> 00:15:08,100
it's setting weird paddings and stuff

00:15:06,420 --> 00:15:09,570
like that there's a few different ways

00:15:08,100 --> 00:15:11,910
to do this as well different people have

00:15:09,570 --> 00:15:13,770
come up with different stuff and if you

00:15:11,910 --> 00:15:16,680
search the net you can you can find all

00:15:13,770 --> 00:15:18,540
sorts of stuff like that the iframe

00:15:16,680 --> 00:15:19,740
YouTube's iframe embed is actually good

00:15:18,540 --> 00:15:21,450
because it's got they've got two

00:15:19,740 --> 00:15:23,460
versions of the play they've got a html5

00:15:21,450 --> 00:15:26,370
player and a flash player and it'll

00:15:23,460 --> 00:15:28,680
it'll show like the html5 player for a

00:15:26,370 --> 00:15:29,500
phone or whatever and the flash player

00:15:28,680 --> 00:15:35,260
for desktops

00:15:29,500 --> 00:15:37,930
so that is something good and yeah

00:15:35,260 --> 00:15:42,670
Brightcove was kind of its own thing I

00:15:37,930 --> 00:15:43,840
think I don't really know yeah it's that

00:15:42,670 --> 00:15:45,700
many people actually use it but it's

00:15:43,840 --> 00:15:47,200
Nova has like tons of their videos on

00:15:45,700 --> 00:15:48,850
Brightcove and they use it to put ads

00:15:47,200 --> 00:15:51,850
inside videos and all that kind of stuff

00:15:48,850 --> 00:15:54,250
so it's really important for them but

00:15:51,850 --> 00:15:58,140
it's it's kind of nasty views it's

00:15:54,250 --> 00:16:02,530
putting width and height values into

00:15:58,140 --> 00:16:03,910
like deep inside its video tags so it's

00:16:02,530 --> 00:16:06,010
not adding it to the object tag which

00:16:03,910 --> 00:16:09,280
would be kind of workable it's adding it

00:16:06,010 --> 00:16:12,850
to the param element which is a little

00:16:09,280 --> 00:16:14,110
bit annoying so you have to actually let

00:16:12,850 --> 00:16:19,000
that code there is just checking

00:16:14,110 --> 00:16:22,030
checking the body class and then it's

00:16:19,000 --> 00:16:24,790
adding like it it's manually updating

00:16:22,030 --> 00:16:27,670
the width and the height values so that

00:16:24,790 --> 00:16:29,560
works for a mobile and then the tablet

00:16:27,670 --> 00:16:31,120
version is separate so you have to

00:16:29,560 --> 00:16:33,340
manually kind of fight hard code the

00:16:31,120 --> 00:16:36,670
width and stuff into your JavaScript

00:16:33,340 --> 00:16:40,720
which is pretty pretty difficult to work

00:16:36,670 --> 00:16:42,250
with but the solution actually worked if

00:16:40,720 --> 00:16:44,980
you check out Brightcove on the site you

00:16:42,250 --> 00:16:53,350
can resize it and stuff like that and it

00:16:44,980 --> 00:16:55,960
does work yeah so Omega was great to

00:16:53,350 --> 00:16:57,100
work with it was the first sight I built

00:16:55,960 --> 00:17:02,440
with the mega but got on to build heaps

00:16:57,100 --> 00:17:04,449
more after that yeah it was really handy

00:17:02,440 --> 00:17:06,040
and all the kind of stuff that it's got

00:17:04,449 --> 00:17:08,199
set up already it's not really it

00:17:06,040 --> 00:17:11,050
doesn't really work the way Drupal works

00:17:08,199 --> 00:17:12,640
like it's kind of an anti drupal theme

00:17:11,050 --> 00:17:17,050
in a lot of ways it's kind of implements

00:17:12,640 --> 00:17:18,760
its own like pre-processed files and

00:17:17,050 --> 00:17:20,890
stuff like that and it's got its own way

00:17:18,760 --> 00:17:23,589
of getting like standard Drupal

00:17:20,890 --> 00:17:25,240
variables into templates and got heaps

00:17:23,589 --> 00:17:27,970
of extra templates which are just in

00:17:25,240 --> 00:17:29,440
dancing so it's a little bit of

00:17:27,970 --> 00:17:30,580
challenge working with it for newcomers

00:17:29,440 --> 00:17:31,930
it might be a little like if you're

00:17:30,580 --> 00:17:33,820
getting into the dirty kind of

00:17:31,930 --> 00:17:35,950
nitty-gritty of it it's like it's a

00:17:33,820 --> 00:17:39,179
little bit tricky but it is a great

00:17:35,950 --> 00:17:41,020
theme and one knows in media queries

00:17:39,179 --> 00:17:42,790
kick-ass I think there might be another

00:17:41,020 --> 00:17:45,520
JavaScript that does I can't remember

00:17:42,790 --> 00:17:48,040
what it is but they're really handy they

00:17:45,520 --> 00:17:52,090
give you CSS media queries in JavaScript

00:17:48,040 --> 00:17:55,090
so that's awesome and yeah like a big

00:17:52,090 --> 00:17:57,330
slap on the on the chops for the media

00:17:55,090 --> 00:18:00,460
guys for not not coming to the party

00:17:57,330 --> 00:18:01,390
they could um it could be it could be a

00:18:00,460 --> 00:18:04,480
lot better I mean things will improve

00:18:01,390 --> 00:18:07,720
over time I think responsive sites that

00:18:04,480 --> 00:18:11,530
can't becoming the norm so yeah all

00:18:07,720 --> 00:18:13,120
right I'll pass on to my colleague mr.

00:18:11,530 --> 00:18:23,400
Christian Biggins and he'll take you

00:18:13,120 --> 00:18:26,050
through content migration Thanks hybrid

00:18:23,400 --> 00:18:30,400
some Christian I've been with

00:18:26,050 --> 00:18:32,440
previousnext for a couple years I have a

00:18:30,400 --> 00:18:35,380
fair bit of background in data and

00:18:32,440 --> 00:18:38,020
migrations in general from pre dribble

00:18:35,380 --> 00:18:46,570
days so I was brought in to handle the

00:18:38,020 --> 00:18:54,090
the content migration for Nova you got

00:18:46,570 --> 00:18:58,240
my slides and run water jack anywho so

00:18:54,090 --> 00:19:00,490
the considerations um when when I was

00:18:58,240 --> 00:19:03,130
brought into this we had the existing

00:19:00,490 --> 00:19:06,520
Nova site was a bespoke application it

00:19:03,130 --> 00:19:08,980
had no no structured schemer at all it

00:19:06,520 --> 00:19:12,070
was on a Windows system with a ms SQL

00:19:08,980 --> 00:19:14,260
database there was lots and lots of

00:19:12,070 --> 00:19:17,230
content like like hundreds of thousands

00:19:14,260 --> 00:19:19,720
of rows and there were there was there

00:19:17,230 --> 00:19:23,470
was relationships literate between each

00:19:19,720 --> 00:19:27,850
each row everything was connected one

00:19:23,470 --> 00:19:30,010
way or another the content and media was

00:19:27,850 --> 00:19:35,140
stored in different locations so some

00:19:30,010 --> 00:19:37,510
some content was stored in a in a table

00:19:35,140 --> 00:19:40,150
specific to that content whereas others

00:19:37,510 --> 00:19:42,970
were stored in different tables so for

00:19:40,150 --> 00:19:45,040
an example of that was that a video

00:19:42,970 --> 00:19:47,110
might be stored in its own video table

00:19:45,040 --> 00:19:50,710
but it also could be stored in the

00:19:47,110 --> 00:19:52,600
articles table using an embed code so it

00:19:50,710 --> 00:19:53,680
made it pretty difficult to make sure

00:19:52,600 --> 00:19:55,670
that you were pulling videos from the

00:19:53,680 --> 00:19:58,290
right places

00:19:55,670 --> 00:20:00,510
challenges there was there was duplicate

00:19:58,290 --> 00:20:02,309
rows in the multiple sites Jack touched

00:20:00,510 --> 00:20:05,700
on how there was there's localized sites

00:20:02,309 --> 00:20:10,800
for the station there's five that we

00:20:05,700 --> 00:20:14,370
migrated each site would have its own

00:20:10,800 --> 00:20:15,510
content as its own row so if one article

00:20:14,370 --> 00:20:16,920
was to be published across the five

00:20:15,510 --> 00:20:19,980
sites there would be five versions of

00:20:16,920 --> 00:20:22,550
that article because of that there was

00:20:19,980 --> 00:20:24,750
lots and lots of lots of edge cases

00:20:22,550 --> 00:20:28,590
scenarios where code had been changed

00:20:24,750 --> 00:20:33,570
and the schemer had been modified to to

00:20:28,590 --> 00:20:34,650
handle a single scenario also that not

00:20:33,570 --> 00:20:37,559
all the content was to be imported

00:20:34,650 --> 00:20:40,170
because we had that we were only

00:20:37,559 --> 00:20:41,610
handling five of the sites but there

00:20:40,170 --> 00:20:42,690
were there are many other sites that we

00:20:41,610 --> 00:20:46,760
weren't actually migrating they were

00:20:42,690 --> 00:20:49,710
going to stick with their with their CMS

00:20:46,760 --> 00:20:53,059
an example of the relationships that we

00:20:49,710 --> 00:20:55,020
had so if there was an album on the site

00:20:53,059 --> 00:20:59,640
the album would have been created by

00:20:55,020 --> 00:21:03,150
user yeah would have tags associated to

00:20:59,640 --> 00:21:05,100
it it would have an artist and an image

00:21:03,150 --> 00:21:08,490
and these were pretty much equivalent of

00:21:05,100 --> 00:21:12,059
having edged ease but it would also have

00:21:08,490 --> 00:21:15,660
lots of manually entered related content

00:21:12,059 --> 00:21:17,970
so there would be the manually

00:21:15,660 --> 00:21:19,740
configured related content block on the

00:21:17,970 --> 00:21:22,440
side and everything would have one of

00:21:19,740 --> 00:21:23,550
those so we would have to make sure that

00:21:22,440 --> 00:21:26,700
all of these relationships were

00:21:23,550 --> 00:21:29,010
maintained across the migration we had

00:21:26,700 --> 00:21:32,600
lots and lots of potential issues the

00:21:29,010 --> 00:21:35,010
biggest problem that we were facing was

00:21:32,600 --> 00:21:37,470
the chicken and egg scenario and that is

00:21:35,010 --> 00:21:38,970
what do we what do we migrate first how

00:21:37,470 --> 00:21:40,679
do we ensure that the user record is

00:21:38,970 --> 00:21:44,010
there when it's needed to be when we're

00:21:40,679 --> 00:21:48,330
trying to provide the the author

00:21:44,010 --> 00:21:49,530
attribute on the album is there an order

00:21:48,330 --> 00:21:50,910
that we need to perform them in so that

00:21:49,530 --> 00:21:52,860
we get that how do we ensure that we

00:21:50,910 --> 00:21:53,880
don't get any duplicates considering

00:21:52,860 --> 00:21:58,140
there were so many duplicate data

00:21:53,880 --> 00:21:59,640
already in the in the tables so our

00:21:58,140 --> 00:22:03,450
options for handling this was custom

00:21:59,640 --> 00:22:05,040
code which was pretty quickly discarded

00:22:03,450 --> 00:22:07,090
only we had pretty strong time

00:22:05,040 --> 00:22:08,320
restraints and

00:22:07,090 --> 00:22:09,880
and it was going to be really really

00:22:08,320 --> 00:22:13,030
hard to make sure that our relationships

00:22:09,880 --> 00:22:15,070
are maintained after the migration the

00:22:13,030 --> 00:22:17,800
feeds module was another another option

00:22:15,070 --> 00:22:20,680
at the time there was very little

00:22:17,800 --> 00:22:22,660
documentation on it and it wasn't going

00:22:20,680 --> 00:22:24,400
to work very well with the unstructured

00:22:22,660 --> 00:22:25,690
schema that we were facing so that

00:22:24,400 --> 00:22:29,560
pretty much left us with the migrated

00:22:25,690 --> 00:22:31,600
module so migrate module gave us lots of

00:22:29,560 --> 00:22:34,320
things lots of ways that we could work

00:22:31,600 --> 00:22:38,010
with what was coming in the mapping of

00:22:34,320 --> 00:22:41,890
columns and fields was was just so easy

00:22:38,010 --> 00:22:43,620
and it gave us a methods for pretty much

00:22:41,890 --> 00:22:45,910
every stage of the migration from

00:22:43,620 --> 00:22:49,870
pulling the query Arden altering the

00:22:45,910 --> 00:22:51,460
data to before the entity is saved or

00:22:49,870 --> 00:22:54,610
after the entity is saved if you need

00:22:51,460 --> 00:22:56,440
that and stubs which I'm going to get

00:22:54,610 --> 00:22:59,950
onto in a minute which would allow us to

00:22:56,440 --> 00:23:02,620
create entities or placeholders for data

00:22:59,950 --> 00:23:06,040
that's not yet migrated to assist us in

00:23:02,620 --> 00:23:07,590
maintaining the relationships lastly

00:23:06,040 --> 00:23:09,790
migrations would occur in batches so

00:23:07,590 --> 00:23:12,550
super easy for you if you're doing it

00:23:09,790 --> 00:23:14,350
through the UI and and you know the

00:23:12,550 --> 00:23:16,330
connection drops out you can just take

00:23:14,350 --> 00:23:21,220
off from where you were you can used

00:23:16,330 --> 00:23:22,650
rush to to kick them off so the

00:23:21,220 --> 00:23:26,320
migration mapping is literally that easy

00:23:22,650 --> 00:23:28,660
you would have a query above just just

00:23:26,320 --> 00:23:30,670
your typical normal SQL query and you

00:23:28,660 --> 00:23:33,610
would provide the column that you're

00:23:30,670 --> 00:23:36,150
migrating from and the field name that

00:23:33,610 --> 00:23:38,850
you're migrating to there are other

00:23:36,150 --> 00:23:41,110
options that you can set such as the

00:23:38,850 --> 00:23:44,350
whether or not it's going to be HTML or

00:23:41,110 --> 00:23:47,320
plain text or anything the bottom the

00:23:44,350 --> 00:23:49,300
bottom mapping their sets a source

00:23:47,320 --> 00:23:51,520
migration so this is in the case that

00:23:49,300 --> 00:23:56,050
you might want to create a stub for data

00:23:51,520 --> 00:23:57,730
that is not yet imported it's just a

00:23:56,050 --> 00:24:00,490
example of using the complete method

00:23:57,730 --> 00:24:03,400
which is performed after the entity has

00:24:00,490 --> 00:24:06,460
been created and saved and you can make

00:24:03,400 --> 00:24:09,790
any changes to that entity so in that

00:24:06,460 --> 00:24:11,590
example if you wanted to ensure that the

00:24:09,790 --> 00:24:13,210
users avatar had been downloaded

00:24:11,590 --> 00:24:14,560
properly and saved you could do that or

00:24:13,210 --> 00:24:17,110
you could go and get it if you wanted to

00:24:14,560 --> 00:24:19,550
do it after the migration because the

00:24:17,110 --> 00:24:22,350
entity is already existing

00:24:19,550 --> 00:24:24,000
prepare method runs after the entities

00:24:22,350 --> 00:24:27,420
being created but before it's been saved

00:24:24,000 --> 00:24:29,550
so you can handle any any manipulation

00:24:27,420 --> 00:24:31,950
you needed to there I'm simply adding in

00:24:29,550 --> 00:24:36,230
a role to the entity before it's sent

00:24:31,950 --> 00:24:38,340
off to get saved and prepare a row is is

00:24:36,230 --> 00:24:40,110
after the rows being pulled out of the

00:24:38,340 --> 00:24:41,370
database but before the entity has been

00:24:40,110 --> 00:24:44,340
created this is just another step

00:24:41,370 --> 00:24:49,410
earlier and here all I'm doing is

00:24:44,340 --> 00:24:52,440
setting creating a URI photo column if

00:24:49,410 --> 00:24:56,370
you will for whether the actual full

00:24:52,440 --> 00:24:58,260
path of the file so a little

00:24:56,370 --> 00:25:00,480
introduction to the stubs which I

00:24:58,260 --> 00:25:03,420
mentioned scenario we have is if we

00:25:00,480 --> 00:25:05,610
migrated an album and that album had an

00:25:03,420 --> 00:25:09,450
author attributed to with an ID legacy

00:25:05,610 --> 00:25:11,370
idea of 999 migrate module knows that

00:25:09,450 --> 00:25:16,140
that user doesn't actually exist yet we

00:25:11,370 --> 00:25:20,010
haven't imported it yet it will go off

00:25:16,140 --> 00:25:22,560
and create a stub user so it will go off

00:25:20,010 --> 00:25:25,020
and create a entity that's full of

00:25:22,560 --> 00:25:27,600
placeholder fields you specify you

00:25:25,020 --> 00:25:29,760
define those and then it creates the

00:25:27,600 --> 00:25:32,720
with the with the fields that you've

00:25:29,760 --> 00:25:35,340
specified it will create a triple user

00:25:32,720 --> 00:25:38,880
or it could be an itch to you could be a

00:25:35,340 --> 00:25:42,930
node anything you wanted so it's created

00:25:38,880 --> 00:25:44,580
a Drupal user with the user ID of 100 it

00:25:42,930 --> 00:25:46,890
will then go and update the album record

00:25:44,580 --> 00:25:48,390
that we've just imported with that user

00:25:46,890 --> 00:25:50,580
ID so we've got that moment that

00:25:48,390 --> 00:25:52,920
relationship maintained now what will

00:25:50,580 --> 00:25:56,490
happen is when the actual user record is

00:25:52,920 --> 00:25:59,190
migrated to its own migration migrate

00:25:56,490 --> 00:26:00,930
will identify that that user has a

00:25:59,190 --> 00:26:04,650
record already that's been created

00:26:00,930 --> 00:26:07,710
through a stub and it will update the

00:26:04,650 --> 00:26:11,700
stub with the data that you specify in

00:26:07,710 --> 00:26:13,790
your mapping so in this in this scenario

00:26:11,700 --> 00:26:16,680
what we've done is created an album

00:26:13,790 --> 00:26:18,060
without a user record and then updated

00:26:16,680 --> 00:26:21,720
the user as the information has become

00:26:18,060 --> 00:26:23,580
available the stubs really easy to

00:26:21,720 --> 00:26:26,670
create you basically have these in your

00:26:23,580 --> 00:26:28,260
method in your migrate class so in the

00:26:26,670 --> 00:26:31,800
user migration class you would literally

00:26:28,260 --> 00:26:32,400
have this this method which just creates

00:26:31,800 --> 00:26:37,730
a stir

00:26:32,400 --> 00:26:40,200
with the minimum required fields input

00:26:37,730 --> 00:26:43,560
word of warning is that users actually

00:26:40,200 --> 00:26:45,780
need unique email addresses so what I'm

00:26:43,560 --> 00:26:47,550
not showing here is just a function that

00:26:45,780 --> 00:26:48,870
you have to write to make sure that the

00:26:47,550 --> 00:26:57,290
email address their unique so that it

00:26:48,870 --> 00:26:57,290
will actually save after the migration

00:26:57,320 --> 00:27:03,810
I've got my introduction slide next Joe

00:27:00,000 --> 00:27:05,940
thanks after the migration we were just

00:27:03,810 --> 00:27:08,970
running the batch module just had a few

00:27:05,940 --> 00:27:10,850
the batches that we set up to make sure

00:27:08,970 --> 00:27:14,880
that all nodes had the files associated

00:27:10,850 --> 00:27:16,110
and were on the file system we were able

00:27:14,880 --> 00:27:18,360
to perform a whole bunch of different

00:27:16,110 --> 00:27:21,470
tests to ensure that the structure was

00:27:18,360 --> 00:27:24,110
maintained in relationships especially

00:27:21,470 --> 00:27:27,540
also i will just make sure the content

00:27:24,110 --> 00:27:30,810
could be accessed from the same URI the

00:27:27,540 --> 00:27:32,970
same path so just to ensure that when

00:27:30,810 --> 00:27:35,340
the site actually went live that all the

00:27:32,970 --> 00:27:38,160
URLs remained the same or at least the

00:27:35,340 --> 00:27:41,670
redirections worked and there's my

00:27:38,160 --> 00:27:43,860
introduction slime I'm going to pass

00:27:41,670 --> 00:27:54,440
over to Nick who's going to just run

00:27:43,860 --> 00:27:59,400
through the hosting thanks Christian

00:27:54,440 --> 00:28:02,660
okay so um with Nova FM with the

00:27:59,400 --> 00:28:06,990
consolidation of these five websites

00:28:02,660 --> 00:28:10,110
coming into the new new Drupal sites we

00:28:06,990 --> 00:28:11,820
wanted to set up a new a new piece of

00:28:10,110 --> 00:28:17,820
infrastructure that was sort of Drupal

00:28:11,820 --> 00:28:20,970
centric and it was scalable easy years

00:28:17,820 --> 00:28:24,150
we could have been flexible oh by the

00:28:20,970 --> 00:28:27,210
way my name is Nick completely skipped

00:28:24,150 --> 00:28:30,020
to the thing um yep i'm a developer at

00:28:27,210 --> 00:28:33,030
previousnext I've been here for about

00:28:30,020 --> 00:28:36,210
six to nine months now and I've taken

00:28:33,030 --> 00:28:37,350
over some sysadmin duties too so now

00:28:36,210 --> 00:28:41,250
I'll start talking about the host

00:28:37,350 --> 00:28:42,780
infrastructure ok so the hosting

00:28:41,250 --> 00:28:45,300
infrastructure that we went through I'll

00:28:42,780 --> 00:28:46,140
go through the first and foremost host

00:28:45,300 --> 00:28:50,700
that's the

00:28:46,140 --> 00:28:52,740
load balancer and it's an f5 firewall

00:28:50,700 --> 00:28:56,610
load balancer that does round-robin

00:28:52,740 --> 00:28:59,160
balancing round-robin balancing is

00:28:56,610 --> 00:29:01,590
actually pretty simple in concept as

00:28:59,160 --> 00:29:03,120
seen in the diagram five users are

00:29:01,590 --> 00:29:05,910
hitting the site those are what those

00:29:03,120 --> 00:29:08,550
numbers under the host sir user one

00:29:05,910 --> 00:29:11,010
comes in hits the first app server two

00:29:08,550 --> 00:29:12,660
three four and then five comes back

00:29:11,010 --> 00:29:20,040
around to the first again and it will

00:29:12,660 --> 00:29:22,770
just keep working its way down the next

00:29:20,040 --> 00:29:26,310
class of apps on the next class is app

00:29:22,770 --> 00:29:30,030
servers application servers these come

00:29:26,310 --> 00:29:31,260
in two flavors we have active hosts so

00:29:30,030 --> 00:29:34,290
those are the ones that are currently

00:29:31,260 --> 00:29:37,100
running right now for we have four of

00:29:34,290 --> 00:29:41,790
those running in a in a cluster setup

00:29:37,100 --> 00:29:44,220
and we also have inactive hot spares on

00:29:41,790 --> 00:29:47,310
the side ready to be added into the load

00:29:44,220 --> 00:29:50,640
balancer if needed or powered on and

00:29:47,310 --> 00:29:54,000
then add it into the load balancer all

00:29:50,640 --> 00:29:56,940
these hosts come with varnish apache PHP

00:29:54,000 --> 00:29:59,970
and memcache i'll just quickly go

00:29:56,940 --> 00:30:01,680
through those varnish is a caching

00:29:59,970 --> 00:30:04,050
caching service that you can put in

00:30:01,680 --> 00:30:06,840
front of your web host so it'll cash up

00:30:04,050 --> 00:30:11,250
the HTML on files etc so it's really

00:30:06,840 --> 00:30:18,680
snappy every time once primed Apaches

00:30:11,250 --> 00:30:21,420
you your web server and PHP and

00:30:18,680 --> 00:30:24,390
memcached is what we're using to cash or

00:30:21,420 --> 00:30:26,430
the all the we're using it on our Drupal

00:30:24,390 --> 00:30:29,430
sites and the memcached module and

00:30:26,430 --> 00:30:31,320
passing off all the case data to

00:30:29,430 --> 00:30:36,090
medication and stored in memory on the

00:30:31,320 --> 00:30:40,500
host all this configuration is puppet

00:30:36,090 --> 00:30:43,790
managed and what puppet is is it's a

00:30:40,500 --> 00:30:46,590
it's a manifest kept in code and it

00:30:43,790 --> 00:30:49,530
provides install and update instructions

00:30:46,590 --> 00:30:51,960
so if we were to spin up a new host we

00:30:49,530 --> 00:30:53,580
can install puppet give it a blueprint

00:30:51,960 --> 00:30:55,740
for what the site is going to be and it

00:30:53,580 --> 00:30:58,400
will spin it up and we can start adding

00:30:55,740 --> 00:31:00,200
more and more if we need to if there's a

00:30:58,400 --> 00:31:02,760
there's a case for

00:31:00,200 --> 00:31:05,610
if anyone wants to talk about any of

00:31:02,760 --> 00:31:08,360
these like varnish puppet it definitely

00:31:05,610 --> 00:31:11,520
pop around after and we'll have a chat

00:31:08,360 --> 00:31:16,500
and lastly the the code pace gets

00:31:11,520 --> 00:31:18,900
deployed via Drupal Capistrano and what

00:31:16,500 --> 00:31:22,110
this means is with one command we can

00:31:18,900 --> 00:31:24,029
and get get control we can push our code

00:31:22,110 --> 00:31:25,980
base up to every single app server so

00:31:24,029 --> 00:31:30,750
everyone gets the same experience across

00:31:25,980 --> 00:31:35,820
appt 1 2 3 4 and so on it also

00:31:30,750 --> 00:31:41,820
eliminates any any risk of things being

00:31:35,820 --> 00:31:45,210
missed so very very handy these app

00:31:41,820 --> 00:31:49,740
servers connect to some storage so in

00:31:45,210 --> 00:31:52,559
this case it's we're using mysql DB and

00:31:49,740 --> 00:31:54,990
solar these are replicated across two

00:31:52,559 --> 00:31:56,580
hosts I actually have a diagram in a

00:31:54,990 --> 00:31:57,990
future slide where I can sort of show

00:31:56,580 --> 00:32:02,460
you through but these operate in a

00:31:57,990 --> 00:32:05,520
master-slave kind of setup so if one

00:32:02,460 --> 00:32:09,870
host was to go down the other one can

00:32:05,520 --> 00:32:12,600
take over and keep going we also have a

00:32:09,870 --> 00:32:16,590
son as file storage across all the app

00:32:12,600 --> 00:32:19,679
servers this allows for all static

00:32:16,590 --> 00:32:23,159
assets like images podcast I know they

00:32:19,679 --> 00:32:24,630
have a lot of podcasts up there to be

00:32:23,159 --> 00:32:26,220
served out across all app servers

00:32:24,630 --> 00:32:27,690
because if someone uploads an image on

00:32:26,220 --> 00:32:32,419
the first app server you want it across

00:32:27,690 --> 00:32:36,059
two three four and etc it also handles

00:32:32,419 --> 00:32:37,620
for Drupal the settings dot PHP so every

00:32:36,059 --> 00:32:39,570
app server knows how to connect to the

00:32:37,620 --> 00:32:42,980
database host and if you make a change

00:32:39,570 --> 00:32:47,520
every host hasn't mounted up so it's

00:32:42,980 --> 00:32:49,890
consistent that is also puppet managed

00:32:47,520 --> 00:32:55,830
in the manifest so we can push that out

00:32:49,890 --> 00:32:58,409
to all those storage related posts for

00:32:55,830 --> 00:33:02,750
the website we also use CDN we use the

00:32:58,409 --> 00:33:11,520
drupal module CDN and what this does is

00:33:02,750 --> 00:33:14,360
we provide a URL of CDN / FM com au it

00:33:11,520 --> 00:33:17,940
rewrites it to in this case edge car

00:33:14,360 --> 00:33:20,370
and edge car stores the CSS JavaScript

00:33:17,940 --> 00:33:23,130
images and that means as you can see on

00:33:20,370 --> 00:33:27,090
this map they have a lot of of stores

00:33:23,130 --> 00:33:34,380
and if I was in another country it'll

00:33:27,090 --> 00:33:37,200
load nice fast snappy okay so what we

00:33:34,380 --> 00:33:40,350
have in front of here is a is a diagram

00:33:37,200 --> 00:33:43,350
of the hosting infrastructure so the top

00:33:40,350 --> 00:33:46,820
we've got our load balancer f5 load

00:33:43,350 --> 00:33:51,210
balancer below is our app server cluster

00:33:46,820 --> 00:33:54,150
to the right we have our spares these

00:33:51,210 --> 00:33:59,670
all undergo the same patching and code

00:33:54,150 --> 00:34:01,500
updates as their active counterparts we

00:33:59,670 --> 00:34:03,420
also have the nas on the left to the

00:34:01,500 --> 00:34:07,530
file storage which connects to all these

00:34:03,420 --> 00:34:11,010
hosts or these hosts connect to it and

00:34:07,530 --> 00:34:15,419
then we've got the the storage for solar

00:34:11,010 --> 00:34:18,060
and mysql so as you can see master of

00:34:15,419 --> 00:34:20,820
solar doesn't also have master mysql on

00:34:18,060 --> 00:34:22,620
the same host and they swap so if one

00:34:20,820 --> 00:34:31,110
hosts were to go down it would move

00:34:22,620 --> 00:34:33,090
across ok so with all this in mind with

00:34:31,110 --> 00:34:36,960
novarian there's definitely content that

00:34:33,090 --> 00:34:39,660
goes viral I think when I came on to

00:34:36,960 --> 00:34:42,320
nova FM nova FM was already up and they

00:34:39,660 --> 00:34:45,540
they were doing competitions and I

00:34:42,320 --> 00:34:51,750
learnt about they called it the one

00:34:45,540 --> 00:34:55,410
direction effect so and what that was

00:34:51,750 --> 00:34:58,170
was and I I'll tell you what it is in

00:34:55,410 --> 00:34:59,940
this case we've got 17 that's that's in

00:34:58,170 --> 00:35:04,230
one out that's seventeen eighteen

00:34:59,940 --> 00:35:05,880
thousand hits so and i guess the what

00:35:04,230 --> 00:35:08,340
you have what has to be considered is

00:35:05,880 --> 00:35:10,140
what type of trap like what type of page

00:35:08,340 --> 00:35:14,850
is it that they hitting like what what's

00:35:10,140 --> 00:35:17,160
going on and is it cached is it not

00:35:14,850 --> 00:35:20,310
cached and i'll go into that a little

00:35:17,160 --> 00:35:23,340
bit more but um in the case of being

00:35:20,310 --> 00:35:24,810
cached that's that's fine it's it's not

00:35:23,340 --> 00:35:26,200
really that noticeable if we're not

00:35:24,810 --> 00:35:32,290
we're wearing

00:35:26,200 --> 00:35:34,119
trouble so scaling and large traffic so

00:35:32,290 --> 00:35:37,109
sometimes content goes viral one

00:35:34,119 --> 00:35:40,359
direction and what are the options so

00:35:37,109 --> 00:35:42,190
with all these things in mind we've

00:35:40,359 --> 00:35:44,410
learned from our mistakes maybe when we

00:35:42,190 --> 00:35:46,089
push up some content that we know may go

00:35:44,410 --> 00:35:48,940
viral or there's a competition coming

00:35:46,089 --> 00:35:51,250
that we may it goes viral we can

00:35:48,940 --> 00:35:56,950
provision in advance we can maybe get

00:35:51,250 --> 00:35:59,200
some hosts into the pool beforehand get

00:35:56,950 --> 00:36:02,740
it added into the load balancer so it's

00:35:59,200 --> 00:36:07,300
less less work at the time and less

00:36:02,740 --> 00:36:09,460
worried but I guess the thing that we

00:36:07,300 --> 00:36:11,260
have to consider is at that stage is it

00:36:09,460 --> 00:36:13,900
going to be a video where it's cached

00:36:11,260 --> 00:36:15,670
the page is cached and it's just going

00:36:13,900 --> 00:36:18,609
to maybe a YouTube clip or something or

00:36:15,670 --> 00:36:20,410
in the case of nova FM the competition's

00:36:18,609 --> 00:36:22,630
require a login the user has to be

00:36:20,410 --> 00:36:24,670
logged into the site which means that

00:36:22,630 --> 00:36:28,630
they're not anonymous anymore meaning

00:36:24,670 --> 00:36:30,280
that that the site's not cached this

00:36:28,630 --> 00:36:32,710
means that whoever wins the competition

00:36:30,280 --> 00:36:35,349
they know who it is in there widget

00:36:32,710 --> 00:36:37,030
across the site and if this is the case

00:36:35,349 --> 00:36:40,480
we definitely have to consider like

00:36:37,030 --> 00:36:42,819
adding hosts I'm increasing resourcing

00:36:40,480 --> 00:36:45,760
on existing hosts so beefed up what

00:36:42,819 --> 00:36:50,680
we've already got and sometimes you

00:36:45,760 --> 00:36:54,310
don't have get the chance to provision

00:36:50,680 --> 00:37:02,910
in advance and at a very last call write

00:36:54,310 --> 00:37:02,910
it write it out no oh

00:37:04,100 --> 00:37:18,090
yeah yeah okay so next we have our

00:37:13,200 --> 00:37:21,900
geolocation so I'm as my colleagues have

00:37:18,090 --> 00:37:24,420
said we had five websites so the case

00:37:21,900 --> 00:37:28,190
was yep nova FM has five websites

00:37:24,420 --> 00:37:30,480
Adelaide Brisbane Melbourne Sydney and

00:37:28,190 --> 00:37:34,860
they were all coming into the one Drupal

00:37:30,480 --> 00:37:37,080
site and we had to ensure that that user

00:37:34,860 --> 00:37:38,880
base were actually getting directed to

00:37:37,080 --> 00:37:40,920
the correct content so if i was in

00:37:38,880 --> 00:37:44,550
Brisbane I want to see Brisbane content

00:37:40,920 --> 00:37:47,130
I don't want to see that of stations on

00:37:44,550 --> 00:37:49,740
right now or programs on right now and

00:37:47,130 --> 00:37:54,420
click to the radio and it's not because

00:37:49,740 --> 00:37:57,900
that's that's just annoying so yeah we

00:37:54,420 --> 00:38:04,470
need to make it as easy as possible so

00:37:57,900 --> 00:38:08,250
enter apache mod geoip too so a quick

00:38:04,470 --> 00:38:13,110
quick little overview is a VoIP offer a

00:38:08,250 --> 00:38:16,500
city and a light version in this case we

00:38:13,110 --> 00:38:20,190
went with the lite version as city

00:38:16,500 --> 00:38:21,990
provides is a paid service and it gives

00:38:20,190 --> 00:38:24,540
you a database that you can you can

00:38:21,990 --> 00:38:27,420
update and or it's more frequently

00:38:24,540 --> 00:38:30,300
updated because it's very granular in

00:38:27,420 --> 00:38:33,900
this case the major cities aren't going

00:38:30,300 --> 00:38:36,210
anywhere but if someone in their app

00:38:33,900 --> 00:38:38,130
were to purchase the paid version they

00:38:36,210 --> 00:38:40,200
would do it because they want to know

00:38:38,130 --> 00:38:42,710
street numbers and street addresses and

00:38:40,200 --> 00:38:46,920
that kind of granularity that really low

00:38:42,710 --> 00:38:50,850
granularity so we went with a static the

00:38:46,920 --> 00:38:54,950
static copy of the free geoip light

00:38:50,850 --> 00:38:57,690
database so the benefits of that were

00:38:54,950 --> 00:39:00,480
the configuration was within the Apache

00:38:57,690 --> 00:39:03,990
V has come configuration so we didn't

00:39:00,480 --> 00:39:06,870
have to bootstrap Drupal so if we were

00:39:03,990 --> 00:39:09,660
to put this kind of logic in Drupal we

00:39:06,870 --> 00:39:12,780
would be bootstrapping Drupal like

00:39:09,660 --> 00:39:14,370
firing up the slide checking where they

00:39:12,780 --> 00:39:15,640
were and then redirecting to the

00:39:14,370 --> 00:39:17,830
appropriate URL

00:39:15,640 --> 00:39:20,290
for the station so that's two bootstraps

00:39:17,830 --> 00:39:24,070
the same same thing that we can do right

00:39:20,290 --> 00:39:33,370
there an Apache and yeah that the reader

00:39:24,070 --> 00:39:36,070
ackers is cash too okay so for this in

00:39:33,370 --> 00:39:40,930
mind after it was all implemented we ran

00:39:36,070 --> 00:39:43,990
into a few issues so each each station

00:39:40,930 --> 00:39:46,360
gets a gets a header set for it so once

00:39:43,990 --> 00:39:48,040
they're redirected to their so if I was

00:39:46,360 --> 00:39:50,740
redirected to brisbane i would get ahead

00:39:48,040 --> 00:39:54,160
of that station that means that when i

00:39:50,740 --> 00:39:56,290
go to a competitions page all the all

00:39:54,160 --> 00:40:00,250
the content or all the related content

00:39:56,290 --> 00:40:02,230
is brisbane esque brisbane related I'm

00:40:00,250 --> 00:40:04,030
not seeing anything Sydney related I'm

00:40:02,230 --> 00:40:11,380
not sort of getting pushed to other

00:40:04,030 --> 00:40:14,260
stations content and the issue that we

00:40:11,380 --> 00:40:18,520
ran into from doing this is Drupal

00:40:14,260 --> 00:40:20,970
caches its page and uses the URL is the

00:40:18,520 --> 00:40:22,840
key so in this case you can see

00:40:20,970 --> 00:40:27,310
competitions it would have the page

00:40:22,840 --> 00:40:28,900
caged with the key as competitions but

00:40:27,310 --> 00:40:31,600
we don't want that because if I'm if I'm

00:40:28,900 --> 00:40:34,600
in Brisbane and someone's already primed

00:40:31,600 --> 00:40:37,810
the cash and created that case in Sydney

00:40:34,600 --> 00:40:43,510
i'll be seeing sydney content so how do

00:40:37,810 --> 00:40:47,980
we get around this varnish so we use

00:40:43,510 --> 00:40:50,770
varnish to interpret the header and as

00:40:47,980 --> 00:40:54,810
you can see in this diagram I am I see /

00:40:50,770 --> 00:40:58,600
competitions varnish rewrites the URL to

00:40:54,810 --> 00:41:00,850
add this Nova FM station key on the end

00:40:58,600 --> 00:41:02,800
and that's what Drupal that's what

00:41:00,850 --> 00:41:06,550
Drupal caches and I don't see that

00:41:02,800 --> 00:41:08,140
that's that's deeper it's deeper level

00:41:06,550 --> 00:41:11,350
stuff I don't see that in the browser I

00:41:08,140 --> 00:41:14,680
never never see that and what we now

00:41:11,350 --> 00:41:17,950
have is if all that all the stations are

00:41:14,680 --> 00:41:19,630
if five people from different areas of

00:41:17,950 --> 00:41:21,970
viewing that won competitions page

00:41:19,630 --> 00:41:25,890
that's five five versions of the page

00:41:21,970 --> 00:41:25,890
being cached now by drupal

00:41:27,380 --> 00:41:34,470
um and before this myself and Meg had a

00:41:31,740 --> 00:41:37,110
bit of a chat and how could this be

00:41:34,470 --> 00:41:40,760
improved how could we improve what we

00:41:37,110 --> 00:41:43,470
have already Drupal setting the header

00:41:40,760 --> 00:41:46,290
Apaches doing the rewrite varnish is

00:41:43,470 --> 00:41:48,450
doing this this really nice rewrite of

00:41:46,290 --> 00:41:53,010
the URL that that the end user doesn't

00:41:48,450 --> 00:41:56,220
know that and it turns out that varnish

00:41:53,010 --> 00:42:00,000
now in version 3 there's a V mod for

00:41:56,220 --> 00:42:03,960
geoip and what this would mean is we

00:42:00,000 --> 00:42:06,900
could we could set the cookie all in

00:42:03,960 --> 00:42:08,640
varnish and we could we could set that

00:42:06,900 --> 00:42:11,400
URL and bosh and we could do the

00:42:08,640 --> 00:42:15,000
redirects this would simplify the

00:42:11,400 --> 00:42:16,800
approach down this would mean that yeah

00:42:15,000 --> 00:42:18,480
we don't have like Apache doing a little

00:42:16,800 --> 00:42:20,400
bit Drupal doing a little bit and

00:42:18,480 --> 00:42:22,050
unvarnished doing a little bit bring it

00:42:20,400 --> 00:42:24,540
in and it means that we're not locked

00:42:22,050 --> 00:42:26,490
into Apache no more where we could go

00:42:24,540 --> 00:42:28,800
engine X or something along those lines

00:42:26,490 --> 00:42:35,790
moving forward at adds adds more

00:42:28,800 --> 00:42:37,620
flexibility so in conclusion we now

00:42:35,790 --> 00:42:40,440
moving forward have a have an

00:42:37,620 --> 00:42:46,500
environment with more options of scale

00:42:40,440 --> 00:42:49,320
and with with everything going on we now

00:42:46,500 --> 00:42:51,450
we now know that we need we need some

00:42:49,320 --> 00:42:53,490
some forewarning if contents going to go

00:42:51,450 --> 00:42:54,840
viral it's definitely a lesson that

00:42:53,490 --> 00:42:57,330
we've learnt moving forward and i

00:42:54,840 --> 00:42:59,160
believe the relationship between us and

00:42:57,330 --> 00:43:01,290
the clients like the client knows when

00:42:59,160 --> 00:43:05,390
something's going to go viral and the

00:43:01,290 --> 00:43:08,610
conversation starts most of the time

00:43:05,390 --> 00:43:10,620
sometimes you just don't know and the

00:43:08,610 --> 00:43:12,390
last one is here geoip is a great

00:43:10,620 --> 00:43:14,340
solution there's definitely many ways to

00:43:12,390 --> 00:43:16,940
implement it so across Apache you're

00:43:14,340 --> 00:43:16,940
punished

00:43:29,329 --> 00:43:36,770
yes the definitely actually come on soon

00:43:32,630 --> 00:43:36,770
gopher Massey

00:43:42,890 --> 00:43:45,609
hmm

00:43:56,410 --> 00:44:04,010
so the question was could we use the

00:43:59,870 --> 00:44:08,000
user agent to sniff out the browser yeah

00:44:04,010 --> 00:44:09,470
instead of a media query yeah I guess

00:44:08,000 --> 00:44:13,400
the problem with that approach is you're

00:44:09,470 --> 00:44:15,770
not so much sniffing out devices or

00:44:13,400 --> 00:44:20,180
browsers you actually need the device

00:44:15,770 --> 00:44:21,410
width yeah I don't know if you can I

00:44:20,180 --> 00:44:25,400
don't know if you can actually get that

00:44:21,410 --> 00:44:28,790
in the user agent or not you can yeah

00:44:25,400 --> 00:44:30,500
yeah that could work too yeah yeah

00:44:28,790 --> 00:44:34,430
that'd that'd be tons of different ways

00:44:30,500 --> 00:44:36,620
of doing it that there wasn't too there

00:44:34,430 --> 00:44:38,330
wasn't too much additional javascript in

00:44:36,620 --> 00:44:39,920
the page that was kind of like for each

00:44:38,330 --> 00:44:45,650
ad tag that was just that one line that

00:44:39,920 --> 00:44:50,900
you saw yeah yeah so that that adds the

00:44:45,650 --> 00:44:52,370
ID tag in yeah yeah I basically just

00:44:50,900 --> 00:44:54,110
chose that way because it seemed like

00:44:52,370 --> 00:44:58,210
the simplest way for me to be able to

00:44:54,110 --> 00:44:58,210
implement it yeah cool

00:45:04,130 --> 00:45:08,640
yeah the question was the CSS did we use

00:45:06,869 --> 00:45:12,230
a CSS preprocessor yeah we used to

00:45:08,640 --> 00:45:12,230
assess yeah

00:45:18,830 --> 00:45:26,330
so to add to that how did we compile SAS

00:45:22,820 --> 00:45:28,340
and integrate it with Omega amigas got a

00:45:26,330 --> 00:45:31,600
bunch of different CSS files that spits

00:45:28,340 --> 00:45:34,160
out for layout it's got different

00:45:31,600 --> 00:45:36,740
different CSS files for each layout

00:45:34,160 --> 00:45:40,430
version so we literally just had a sass

00:45:36,740 --> 00:45:43,220
file in our theme assess folder in our

00:45:40,430 --> 00:45:46,100
theme and it had sass versions of all

00:45:43,220 --> 00:45:49,490
the Amiga style sheets and then we just

00:45:46,100 --> 00:45:52,700
friend the compiler locally and then

00:45:49,490 --> 00:45:58,190
check the compiled CSS into into github

00:45:52,700 --> 00:46:01,310
yeah yeah we'd is that is that a drupal

00:45:58,190 --> 00:46:02,930
module yeah there's also sassy or Susie

00:46:01,310 --> 00:46:11,060
or something like knows I think it's

00:46:02,930 --> 00:46:13,160
called sassy yeah oh yeah we didn't use

00:46:11,060 --> 00:46:16,610
compass we kind of had our own library

00:46:13,160 --> 00:46:18,890
of mix-ins and things like that we had a

00:46:16,610 --> 00:46:20,270
variables file and like a base partials

00:46:18,890 --> 00:46:22,820
flower with mix-ins and stuff like that

00:46:20,270 --> 00:46:25,100
but we we didn't really this this was

00:46:22,820 --> 00:46:28,370
kind of back in 2011 I've only started

00:46:25,100 --> 00:46:31,970
using compass recently so yeah it was

00:46:28,370 --> 00:46:34,240
probably a bit before that time yeah at

00:46:31,970 --> 00:46:34,240
the back

00:46:36,960 --> 00:46:39,960
yep

00:46:46,860 --> 00:46:49,490
yep

00:46:51,630 --> 00:46:58,020
okay so um so the question was how do

00:46:55,110 --> 00:47:01,890
you manage content across all for

00:46:58,020 --> 00:47:03,960
example all four app servers so the

00:47:01,890 --> 00:47:07,740
database is external to the app servers

00:47:03,960 --> 00:47:11,280
so all four hosts are connecting to that

00:47:07,740 --> 00:47:13,950
database for that for that record and in

00:47:11,280 --> 00:47:15,900
terms of files because that's mounted up

00:47:13,950 --> 00:47:18,720
on storage each host has its files

00:47:15,900 --> 00:47:34,400
directory mounted up in storage the

00:47:18,720 --> 00:47:34,400
files available on on all four yeah

00:47:44,730 --> 00:47:47,300
yep

00:47:48,619 --> 00:47:51,619
yep

00:48:11,020 --> 00:48:19,730
yeah yep so so you're okay no um so the

00:48:16,970 --> 00:48:22,160
question was when content when creating

00:48:19,730 --> 00:48:33,830
content is there some kind of automation

00:48:22,160 --> 00:48:39,380
to yo-yo yep yep yep I can they do that

00:48:33,830 --> 00:48:41,720
so okay so okay so doing / FM have the

00:48:39,380 --> 00:48:45,830
have the means to spin up extra extra

00:48:41,720 --> 00:48:48,020
app servers or automatically um no

00:48:45,830 --> 00:48:50,840
that's that's all we have a pretty

00:48:48,020 --> 00:48:54,260
pretty tight relationship between / FM

00:48:50,840 --> 00:48:58,430
and the and the hosting provider so it's

00:48:54,260 --> 00:49:01,510
um it's really all discussions between

00:48:58,430 --> 00:49:01,510
between the three of us

00:50:08,950 --> 00:50:13,349
oh sorry didn't ya

00:50:20,700 --> 00:50:27,570
um at the time no it's it's a

00:50:25,380 --> 00:50:29,849
methodology that we've recently started

00:50:27,570 --> 00:50:31,829
kicking on and it's definitely something

00:50:29,849 --> 00:50:34,140
that is that something that you've

00:50:31,829 --> 00:50:35,970
you've taken on continuous integration

00:50:34,140 --> 00:50:39,230
because I'd love to talk with people and

00:50:35,970 --> 00:50:41,550
see what they they do to solve it

00:50:39,230 --> 00:50:42,900
absolutely will yeah well I'd loved I'd

00:50:41,550 --> 00:50:44,010
love to I'd love to chat afterwards

00:50:42,900 --> 00:50:46,950
that's that's for sure because it's

00:50:44,010 --> 00:50:51,690
definitely top of mind it has been for

00:50:46,950 --> 00:50:53,960
the past are not not on this project not

00:50:51,690 --> 00:50:53,960
at that stage

00:51:09,219 --> 00:51:14,959
so the question was how do we classify

00:51:11,660 --> 00:51:16,759
content to stations it was it was all

00:51:14,959 --> 00:51:20,989
taxonomy base there was just one text

00:51:16,759 --> 00:51:22,279
alani with five terms and when content

00:51:20,989 --> 00:51:23,749
editors are creating content they can

00:51:22,279 --> 00:51:39,859
just choose one or more of the stations

00:51:23,749 --> 00:51:44,079
yeah yeah yeah yeah they're all the VPS

00:51:39,859 --> 00:51:44,079
is hosted by another another company

00:51:57,690 --> 00:52:02,560
so the question was why didn't import

00:52:00,400 --> 00:52:05,910
the user first the user was the easiest

00:52:02,560 --> 00:52:08,590
way for me to explain how stubs worked

00:52:05,910 --> 00:52:11,620
the relationships went across everything

00:52:08,590 --> 00:52:13,780
so an album would have an artist record

00:52:11,620 --> 00:52:16,450
and that are just record also has a user

00:52:13,780 --> 00:52:18,760
that are sir to record also has tags etc

00:52:16,450 --> 00:52:22,300
and this was across every every piece of

00:52:18,760 --> 00:52:25,630
content articles artists albums videos

00:52:22,300 --> 00:52:27,070
songs audio you name it so there was

00:52:25,630 --> 00:52:28,060
there was no starting point you know

00:52:27,070 --> 00:52:29,860
there was no way where you could start

00:52:28,060 --> 00:52:32,890
yet users was probably the only thing we

00:52:29,860 --> 00:52:35,710
could have imported on its own initially

00:52:32,890 --> 00:52:38,880
but everything else there was this far

00:52:35,710 --> 00:52:38,880
too many connections involved

00:52:59,700 --> 00:53:05,880
um I'm not sure I actually wasn't across

00:53:03,839 --> 00:53:10,280
the project at that stage I was post um

00:53:05,880 --> 00:53:10,280
MIG yep absolutely me

00:53:42,510 --> 00:53:48,280
no nothing nothing's there's no sorry

00:53:46,150 --> 00:53:53,830
the question was on does the scaling of

00:53:48,280 --> 00:53:58,540
the host reflect nodes or users no no it

00:53:53,830 --> 00:54:00,840
doesn't um it's more of a it's very

00:53:58,540 --> 00:54:05,740
static but it's sort of monitoring

00:54:00,840 --> 00:54:10,060
performance and in how much resources

00:54:05,740 --> 00:54:14,310
are taken at over a period of time and

00:54:10,060 --> 00:54:14,310
should we upgrade moving forward

00:54:28,280 --> 00:54:35,880
I'm sure the question the question was

00:54:31,799 --> 00:54:59,010
was automation considered in the in the

00:54:35,880 --> 00:55:01,859
beginning of the project I think a big

00:54:59,010 --> 00:55:04,530
consideration is that there was no at

00:55:01,859 --> 00:55:08,369
least major australian-based cloud

00:55:04,530 --> 00:55:10,079
providers yet towards the end of 2011 so

00:55:08,369 --> 00:55:14,880
there was simply no option for an

00:55:10,079 --> 00:55:16,619
automated system at all yeah well

00:55:14,880 --> 00:55:18,089
there's lots of options now absolutely

00:55:16,619 --> 00:55:24,410
if you were to do it now improve a lot

00:55:18,089 --> 00:55:24,410
more things to consider hey thought I

00:55:43,610 --> 00:55:48,840
so the question was where how do we

00:55:45,540 --> 00:55:50,910
clean the data the we tried lots and

00:55:48,840 --> 00:55:55,350
lots of ways to try to automate the data

00:55:50,910 --> 00:55:58,320
cleaning at the end in the end because

00:55:55,350 --> 00:55:59,990
some content was plain text and like I

00:55:58,320 --> 00:56:02,910
said lots of things were embedded files

00:55:59,990 --> 00:56:05,190
in the end it was just do it all all

00:56:02,910 --> 00:56:06,450
tags were stripped out there was lots of

00:56:05,190 --> 00:56:08,310
JavaScript embedded in a lot of the

00:56:06,450 --> 00:56:09,960
content so it was literally as if

00:56:08,310 --> 00:56:11,670
someone had saved the page as it sat and

00:56:09,960 --> 00:56:14,310
then worked in the database so there was

00:56:11,670 --> 00:56:17,030
lots of importing of scripts there was

00:56:14,310 --> 00:56:19,800
there was no way to safely ensure that

00:56:17,030 --> 00:56:23,790
what we would end up with was was valid

00:56:19,800 --> 00:56:26,400
safe HTML so we there was lots of things

00:56:23,790 --> 00:56:27,990
we were able to keep strong tags and

00:56:26,400 --> 00:56:29,910
things like that but the majority of

00:56:27,990 --> 00:56:32,150
tags were district out on the way

00:56:29,910 --> 00:56:32,150
through

00:56:44,950 --> 00:56:51,500
so the question is how do we test the

00:56:47,780 --> 00:56:55,010
migration we sample we just grab samples

00:56:51,500 --> 00:56:57,560
of certain certain content of of each

00:56:55,010 --> 00:56:59,480
different type and then matched it

00:56:57,560 --> 00:57:03,880
against the database that we imported

00:56:59,480 --> 00:57:06,170
from the legacy system so there was no

00:57:03,880 --> 00:57:07,490
we won't we weren't comparing with a

00:57:06,170 --> 00:57:09,140
live site we were comparing with the

00:57:07,490 --> 00:57:12,829
database and then writing queries to

00:57:09,140 --> 00:57:15,890
match as much as well as we could there

00:57:12,829 --> 00:57:18,200
will the cleaning scripts and the

00:57:15,890 --> 00:57:19,609
testing scripts are rewritten dozens and

00:57:18,200 --> 00:57:20,660
dozens of times because we would get

00:57:19,609 --> 00:57:22,970
ninety percent through and there'd be

00:57:20,660 --> 00:57:24,320
two one simple one single case where it

00:57:22,970 --> 00:57:28,130
wasn't the same and so that would have

00:57:24,320 --> 00:57:29,630
to be included so yeah absolutely and

00:57:28,130 --> 00:57:31,820
that's it's where I sing the praise of

00:57:29,630 --> 00:57:34,359
the batch module assistants makes that

00:57:31,820 --> 00:57:34,359
stuff very easy

00:57:41,600 --> 00:57:51,320
I it's all accessible it's all

00:57:49,310 --> 00:57:53,810
accessible through solar so solar does

00:57:51,320 --> 00:57:56,090
all the indexing for us as far as I know

00:57:53,810 --> 00:57:57,560
nothing was actually archived from what

00:57:56,090 --> 00:58:02,690
we brought up from the previous system

00:57:57,560 --> 00:58:06,220
so it's it will be its massive we're

00:58:02,690 --> 00:58:06,220
talking hundreds of thousands of nodes

00:58:08,320 --> 00:58:13,550
we did we did lots of that towards the

00:58:11,240 --> 00:58:15,500
end we had or our whole team that would

00:58:13,550 --> 00:58:17,210
just be clicking through randomly just

00:58:15,500 --> 00:58:19,850
following links and and just cite

00:58:17,210 --> 00:58:23,930
checking samples of code as there's no

00:58:19,850 --> 00:58:26,120
way we found issues with missing files

00:58:23,930 --> 00:58:28,070
and that came down to some files being

00:58:26,120 --> 00:58:29,360
available some places and not others so

00:58:28,070 --> 00:58:31,400
there were a lot of cleanup scripts that

00:58:29,360 --> 00:58:38,870
we wrote afterwards to redownload files

00:58:31,400 --> 00:58:40,460
that we're missing yep yeah pulling out

00:58:38,870 --> 00:58:43,340
the source downloading the file to the

00:58:40,460 --> 00:58:48,010
filesystem and then and then importing

00:58:43,340 --> 00:58:48,010
it as a media object media entity

00:58:54,290 --> 00:58:59,280
it would it would take all hi oh I think

00:58:57,630 --> 00:59:02,070
to pull it out so that it's so that's

00:58:59,280 --> 00:59:05,550
generic enough to be used we definitely

00:59:02,070 --> 00:59:07,560
consider doing that it was very

00:59:05,550 --> 00:59:09,480
specialized what we were doing it was

00:59:07,560 --> 00:59:15,000
very very specific to our needs at the

00:59:09,480 --> 00:59:21,980
time I don't know many use cases where

00:59:15,000 --> 00:59:24,990
what I wrote would be useful sorry yeah

00:59:21,980 --> 00:59:27,990
no that's right so in those showed the

00:59:24,990 --> 00:59:30,090
complete and the prepare methods so in

00:59:27,990 --> 00:59:31,350
in both of those in the prepare you can

00:59:30,090 --> 00:59:33,000
clean it and in the complete you can

00:59:31,350 --> 00:59:35,310
confirm that it was that it worked so

00:59:33,000 --> 00:59:41,600
the end of the saved entity matches the

00:59:35,310 --> 00:59:41,600

YouTube URL: https://www.youtube.com/watch?v=biRX8dBWdX4


