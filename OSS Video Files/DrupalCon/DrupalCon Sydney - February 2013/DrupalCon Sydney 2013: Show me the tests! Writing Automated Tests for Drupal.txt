Title: DrupalCon Sydney 2013: Show me the tests! Writing Automated Tests for Drupal
Publication date: 2013-03-29
Playlist: DrupalCon Sydney - February 2013
Description: 
	Want to keep ahead of bugs and regressions in your code?
Want to stop other members on the team accidentally breaking your code?
Want to make deployments nice and smooth?
Perhaps you want to ramp up your core commits but are overwhelmed by testing?

This session will cover technologies and approaches for automated testing with Drupal and show you practises you can introduce into your workflow now to identify bugs before they derail your project.
Captions: 
	00:00:00,000 --> 00:00:02,610
thanks to come along ever I didn't

00:00:01,260 --> 00:00:10,790
expect this many people to be honest

00:00:02,610 --> 00:00:10,790
about such a dry topic yeah it is run

00:00:16,190 --> 00:00:20,180
I'll skip out on a chance to sit down

00:00:29,180 --> 00:00:32,270
come on

00:00:42,989 --> 00:00:50,440
all right we'll get started guys let me

00:00:46,239 --> 00:00:51,970
not take this thing off so this session

00:00:50,440 --> 00:00:53,290
is obviously about tests if you're here

00:00:51,970 --> 00:00:56,980
for something else you're in the wrong

00:00:53,290 --> 00:00:58,840
room we have a show of hands who's

00:00:56,980 --> 00:01:01,510
written tests before for Drupal

00:00:58,840 --> 00:01:03,190
specifically so got a good coverage and

00:01:01,510 --> 00:01:08,020
what about you like other testing

00:01:03,190 --> 00:01:11,470
frameworks like phpunit okay Morris all

00:01:08,020 --> 00:01:13,030
right so just a bit about me first I've

00:01:11,470 --> 00:01:15,190
been doing this about four years now I

00:01:13,030 --> 00:01:17,500
work with previous next in Sydney so we

00:01:15,190 --> 00:01:20,500
work with large enterprises and

00:01:17,500 --> 00:01:21,820
government agencies it's been a fair few

00:01:20,500 --> 00:01:25,330
of our colleagues percent of already

00:01:21,820 --> 00:01:28,360
I've got about 35 odd country modules

00:01:25,330 --> 00:01:30,190
that I maintain in various degrees some

00:01:28,360 --> 00:01:32,050
of them I I don't really do much move

00:01:30,190 --> 00:01:37,899
anymore but may have been involved in

00:01:32,050 --> 00:01:40,690
their exception but around about shortly

00:01:37,899 --> 00:01:43,270
after Drupal 7.8 came out I put my hand

00:01:40,690 --> 00:01:45,630
up to maintain forum which might be

00:01:43,270 --> 00:01:48,850
relieved off shortly because it's a

00:01:45,630 --> 00:01:50,319
chopping block to go in Drupal 8 i've

00:01:48,850 --> 00:01:52,330
recently joined the drupal security team

00:01:50,319 --> 00:01:54,580
and i've got about 60 corkum it's

00:01:52,330 --> 00:01:55,899
against my name and so if you're looking

00:01:54,580 --> 00:01:58,840
and talked about anything I'm not me in

00:01:55,899 --> 00:02:00,550
Drupal IRC in that Drupal au channels or

00:01:58,840 --> 00:02:04,090
trip will contribute I'm pretty

00:02:00,550 --> 00:02:05,530
approachable and so yeah if you any

00:02:04,090 --> 00:02:08,259
questions after this or next week or

00:02:05,530 --> 00:02:09,250
whenever let me know a couple of things

00:02:08,259 --> 00:02:11,860
I'm pretty passionate about at the

00:02:09,250 --> 00:02:13,990
moment when working to decouple the

00:02:11,860 --> 00:02:16,690
comment module from the node module so

00:02:13,990 --> 00:02:18,700
in Drupal 8 you hopefully if this gets

00:02:16,690 --> 00:02:20,620
in you'll be able to comment on any

00:02:18,700 --> 00:02:22,090
entity you can even have to comment

00:02:20,620 --> 00:02:23,800
fields on the one node and have a

00:02:22,090 --> 00:02:26,530
foreign against column and people could

00:02:23,800 --> 00:02:28,750
vote in each column and are also working

00:02:26,530 --> 00:02:30,760
on moving blocks to content entities so

00:02:28,750 --> 00:02:32,560
you get all of the goodness of a block

00:02:30,760 --> 00:02:35,410
like you've got with being in Drupal 7

00:02:32,560 --> 00:02:37,090
but in coronate so I'm plugin both of

00:02:35,410 --> 00:02:38,410
those because they need reviews the

00:02:37,090 --> 00:02:41,440
comment ones need to review since

00:02:38,410 --> 00:02:43,810
November and the block 1 reviews is

00:02:41,440 --> 00:02:45,849
starting trickily and so if you enjoy

00:02:43,810 --> 00:02:48,430
the session take a look at those patches

00:02:45,849 --> 00:02:50,530
so I can set you up after there

00:02:48,430 --> 00:02:52,840
session with some issue queues if you

00:02:50,530 --> 00:02:54,700
like but we just talked about the goals

00:02:52,840 --> 00:02:56,859
today I want to talk about the process

00:02:54,700 --> 00:02:59,260
taking you from a click monkey to a code

00:02:56,859 --> 00:03:01,269
monkey people kind of familiar what I'm

00:02:59,260 --> 00:03:03,099
talking about here and the behaviors

00:03:01,269 --> 00:03:04,450
have a show of hands who would think

00:03:03,099 --> 00:03:06,639
they're a clique monkey anything there a

00:03:04,450 --> 00:03:09,670
code monkey there's no no name shaming

00:03:06,639 --> 00:03:13,150
we're not going to disgrace but

00:03:09,670 --> 00:03:14,739
basically if you're sort of continuously

00:03:13,150 --> 00:03:16,629
funny self clicking things and we want

00:03:14,739 --> 00:03:19,359
to translate transition into the phase

00:03:16,629 --> 00:03:21,099
where you can run tests let them run and

00:03:19,359 --> 00:03:23,019
you know rest easier that things work

00:03:21,099 --> 00:03:24,790
the way you hope they would we're going

00:03:23,019 --> 00:03:26,409
to talk about the why the wind the what

00:03:24,790 --> 00:03:27,669
and the how we're going to talk a bit

00:03:26,409 --> 00:03:29,769
about the drupal.org testing

00:03:27,669 --> 00:03:34,150
infrastructure we'll talk about some

00:03:29,769 --> 00:03:35,739
core tests contrib tests what to do when

00:03:34,150 --> 00:03:38,169
things go wrong because they will and

00:03:35,739 --> 00:03:39,430
how to debug them and if we got time

00:03:38,169 --> 00:03:41,200
will briefly touch on continuous

00:03:39,430 --> 00:03:43,840
integration if there's it's being

00:03:41,200 --> 00:03:48,069
covered already obviously there's been a

00:03:43,840 --> 00:03:50,439
few sessions on that so the cliq monkey

00:03:48,069 --> 00:03:52,329
way well just to define this clearly so

00:03:50,439 --> 00:03:54,729
people know you're pretty much doing

00:03:52,329 --> 00:03:55,840
everything with the mouse your

00:03:54,729 --> 00:03:57,699
repetitive you know you make a change

00:03:55,840 --> 00:03:59,049
and you check that it works in your

00:03:57,699 --> 00:04:00,430
local site and then you deploy your

00:03:59,049 --> 00:04:01,510
check that works in your staging site

00:04:00,430 --> 00:04:03,609
and then you deploy it and you make sure

00:04:01,510 --> 00:04:05,500
it works in your production site and you

00:04:03,609 --> 00:04:08,319
know it's basically repeating the same

00:04:05,500 --> 00:04:10,060
thing and there's there's a lot of

00:04:08,319 --> 00:04:12,459
effort involved and you know what

00:04:10,060 --> 00:04:14,079
developers we're lazy we we might try to

00:04:12,459 --> 00:04:16,780
avoid that effort so it might work on

00:04:14,079 --> 00:04:18,009
local so we push it up and might work on

00:04:16,780 --> 00:04:19,060
staying so we push it up and get well

00:04:18,009 --> 00:04:20,739
I'm not going to click it again because

00:04:19,060 --> 00:04:22,900
I know it takes me 45 minutes to click

00:04:20,739 --> 00:04:26,349
through that and so we you know we don't

00:04:22,900 --> 00:04:28,150
do it and yeah it's not as easy to stop

00:04:26,349 --> 00:04:30,970
to track when something wrong if you

00:04:28,150 --> 00:04:32,440
have test coverage and you know you

00:04:30,970 --> 00:04:33,610
pushed your repository and you've got

00:04:32,440 --> 00:04:35,800
continuous integration you've got

00:04:33,610 --> 00:04:37,120
something going you see the something

00:04:35,800 --> 00:04:38,680
fails you know you broke the build you

00:04:37,120 --> 00:04:40,840
know what broke it you know what feature

00:04:38,680 --> 00:04:43,150
broke it or what bug fix and you can

00:04:40,840 --> 00:04:44,590
easily pinpoint it makes it easier to

00:04:43,150 --> 00:04:46,000
find when the regression occurred which

00:04:44,590 --> 00:04:48,970
makes it easy to find what the

00:04:46,000 --> 00:04:50,259
regression was but I mean creation to

00:04:48,970 --> 00:04:52,539
the converted here this is nothing

00:04:50,259 --> 00:04:54,729
drupal centric this is you know pretty

00:04:52,539 --> 00:04:57,219
much in general for software development

00:04:54,729 --> 00:04:59,289
and then the code monkey way which is

00:04:57,219 --> 00:05:01,300
where when we've taken this fantastic

00:04:59,289 --> 00:05:02,240
journey to you're going to test

00:05:01,300 --> 00:05:05,360
everything with automate

00:05:02,240 --> 00:05:07,190
tests you said and forget basically you

00:05:05,360 --> 00:05:08,360
know before we should think just because

00:05:07,190 --> 00:05:10,009
you've got test coverage nothing is

00:05:08,360 --> 00:05:13,160
going to go wrong you know there's a

00:05:10,009 --> 00:05:15,410
degrees of test coverage and this is

00:05:13,160 --> 00:05:16,520
about making you know you've still got

00:05:15,410 --> 00:05:17,870
to make sure that you've got test

00:05:16,520 --> 00:05:20,599
coverage for the things that matter and

00:05:17,870 --> 00:05:22,490
you still got to make sure that they're

00:05:20,599 --> 00:05:24,860
actually being run and you know the

00:05:22,490 --> 00:05:26,120
appointments if they're not but as I

00:05:24,860 --> 00:05:27,620
said this dovetails nicely with

00:05:26,120 --> 00:05:28,849
continuous integration and it gives you

00:05:27,620 --> 00:05:31,430
an opportunity to pinpoint when things

00:05:28,849 --> 00:05:33,710
start working just for some light

00:05:31,430 --> 00:05:37,099
heartedness this is a great webcomic if

00:05:33,710 --> 00:05:40,909
you're not into geek and poke but yeah

00:05:37,099 --> 00:05:42,500
they have great you know explanations of

00:05:40,909 --> 00:05:45,650
technical terms for non-technical people

00:05:42,500 --> 00:05:48,259
the Ajax one is particularly good so I

00:05:45,650 --> 00:05:49,400
recommend checking that out but what we

00:05:48,259 --> 00:05:51,650
want to talk about is the test driven

00:05:49,400 --> 00:05:54,530
development so basically for those that

00:05:51,650 --> 00:05:56,090
aren't familiar it's you find a bug you

00:05:54,530 --> 00:05:57,889
write a test that verifies the bug and

00:05:56,090 --> 00:06:00,800
then you write the fix and then you run

00:05:57,889 --> 00:06:03,830
the test and verify the bug is gone sort

00:06:00,800 --> 00:06:06,080
of that process it adds extra quality

00:06:03,830 --> 00:06:07,880
work and it ensures that you know as

00:06:06,080 --> 00:06:12,159
time goes by that test coverage that we

00:06:07,880 --> 00:06:15,289
talked about gets more and more enhance

00:06:12,159 --> 00:06:16,400
so a hospital example while talking

00:06:15,289 --> 00:06:18,289
today we're going to go through a

00:06:16,400 --> 00:06:20,750
hypothetical example of an online

00:06:18,289 --> 00:06:23,680
classified site so in an online

00:06:20,750 --> 00:06:26,000
classified site your typical behavior is

00:06:23,680 --> 00:06:27,979
people can come along anonymous users

00:06:26,000 --> 00:06:30,560
they can create content let's just say

00:06:27,979 --> 00:06:32,240
it's a it's a for sale items or job

00:06:30,560 --> 00:06:33,560
listings or whatever and they can't

00:06:32,240 --> 00:06:37,490
publish that content till they pay so

00:06:33,560 --> 00:06:38,569
I've got ecommerce integration and so

00:06:37,490 --> 00:06:41,240
we're going to look at the module

00:06:38,569 --> 00:06:42,469
commerce know check out its provides

00:06:41,240 --> 00:06:44,240
that functionality for the comments

00:06:42,469 --> 00:06:46,940
module and we're going to be focusing on

00:06:44,240 --> 00:06:48,469
enter intend integration so we're not

00:06:46,940 --> 00:06:49,370
just testing the functionality of that

00:06:48,469 --> 00:06:51,289
module but we're testing the

00:06:49,370 --> 00:06:53,180
functionality of that module in the

00:06:51,289 --> 00:06:56,780
context of our particular use case or

00:06:53,180 --> 00:06:58,669
our particular requirements so if you've

00:06:56,780 --> 00:07:01,159
got any questions throughout feel free

00:06:58,669 --> 00:07:02,389
to put your hand up in yellow and went

00:07:01,159 --> 00:07:04,610
to an excellent session earlier that was

00:07:02,389 --> 00:07:08,419
conducted along that matter and yeah I

00:07:04,610 --> 00:07:10,219
found it much more useful so just on

00:07:08,419 --> 00:07:12,740
that getting off on the right foot now

00:07:10,219 --> 00:07:16,080
the test based method isn't going to

00:07:12,740 --> 00:07:17,370
work if if you're

00:07:16,080 --> 00:07:18,689
making changes on your production

00:07:17,370 --> 00:07:20,639
environment directly you know you've got

00:07:18,689 --> 00:07:22,439
to be using a code based methodology so

00:07:20,639 --> 00:07:26,009
we're talking about things like features

00:07:22,439 --> 00:07:28,979
or configuration management and there's

00:07:26,009 --> 00:07:32,129
some good sessions on it at today at

00:07:28,979 --> 00:07:34,080
this event you just missed the

00:07:32,129 --> 00:07:35,669
configuration management one I just went

00:07:34,080 --> 00:07:37,819
to that in the previous session and it

00:07:35,669 --> 00:07:40,860
highly recommended check it out online

00:07:37,819 --> 00:07:42,539
yeah it was basically the the

00:07:40,860 --> 00:07:44,939
configuration module is a back port of

00:07:42,539 --> 00:07:46,650
the configuration management type

00:07:44,939 --> 00:07:49,409
functionality from Drupal 8 to Drupal 7

00:07:46,650 --> 00:07:52,409
and it has a lot of similarities

00:07:49,409 --> 00:07:54,629
features but in a large environment has

00:07:52,409 --> 00:07:57,719
a lot of advantages over features and it

00:07:54,629 --> 00:07:59,009
basically is the features as being used

00:07:57,719 --> 00:08:01,050
for what it wasn't intended for at the

00:07:59,009 --> 00:08:02,819
moment it was intended for grouping like

00:08:01,050 --> 00:08:04,080
functionality but instead we're using it

00:08:02,819 --> 00:08:07,620
uh sorry going to common sets of

00:08:04,080 --> 00:08:08,969
functionality or a feature and we find

00:08:07,620 --> 00:08:10,710
that most people are using it for

00:08:08,969 --> 00:08:13,889
actually deploying functionality so

00:08:10,710 --> 00:08:17,069
check those both that online but yet

00:08:13,889 --> 00:08:20,099
with a code based methodology you can

00:08:17,069 --> 00:08:21,810
reproduce the same environment in your

00:08:20,099 --> 00:08:25,319
test classes as you would have in your

00:08:21,810 --> 00:08:27,690
life site so we're talking about you

00:08:25,319 --> 00:08:29,279
know you start a project the first thing

00:08:27,690 --> 00:08:31,409
you do is you create an install profile

00:08:29,279 --> 00:08:33,120
and you don't turn on a module while

00:08:31,409 --> 00:08:34,740
going in ticket and turning on you put

00:08:33,120 --> 00:08:38,190
it in the info install profile as a

00:08:34,740 --> 00:08:41,250
dependency you don't configure things

00:08:38,190 --> 00:08:43,110
with by clicking them in the UI you go

00:08:41,250 --> 00:08:44,850
through and you make sure that the

00:08:43,110 --> 00:08:47,010
changes are magnets a variable set in an

00:08:44,850 --> 00:08:50,790
update hook or using the configuration

00:08:47,010 --> 00:08:52,350
module you know by there's a lot of

00:08:50,790 --> 00:08:55,769
different approaches to doing it but the

00:08:52,350 --> 00:08:57,959
main goal is that you're using a code

00:08:55,769 --> 00:09:00,690
based methodology to manage the

00:08:57,959 --> 00:09:03,240
configuration and structure of your site

00:09:00,690 --> 00:09:05,490
and so yeah we've got features you've

00:09:03,240 --> 00:09:07,339
got the configuration module you can use

00:09:05,490 --> 00:09:09,800
API functions and submit handlers in

00:09:07,339 --> 00:09:11,550
update hooks and that's where the

00:09:09,800 --> 00:09:13,410
configuration update functions in

00:09:11,550 --> 00:09:15,420
staying sane session we'll talk about

00:09:13,410 --> 00:09:17,459
that more and look even in the worst

00:09:15,420 --> 00:09:20,000
case now you might have to do database

00:09:17,459 --> 00:09:22,470
queries to make changes but you know

00:09:20,000 --> 00:09:24,140
making sure everything goes through a

00:09:22,470 --> 00:09:26,410
code based methodology

00:09:24,140 --> 00:09:30,050
is kind of the first step to getting

00:09:26,410 --> 00:09:31,520
reproducible test environment so kind of

00:09:30,050 --> 00:09:32,630
the show of hands how many people who

00:09:31,520 --> 00:09:34,640
already noticed and I'm just preaching

00:09:32,630 --> 00:09:36,290
to the converted like who he is not

00:09:34,640 --> 00:09:41,660
using a code base or who he's using a

00:09:36,290 --> 00:09:43,100
code based methodology beautiful I think

00:09:41,660 --> 00:09:44,390
you need a solid version control and

00:09:43,100 --> 00:09:46,340
again I'm probably preaching to the

00:09:44,390 --> 00:09:48,230
converted here as well but something

00:09:46,340 --> 00:09:51,020
like get flow where you know your branch

00:09:48,230 --> 00:09:53,990
off you work on a feature or a bug in a

00:09:51,020 --> 00:09:56,240
separate branch in isolation and merger

00:09:53,990 --> 00:09:59,360
back in when it's ready and you know the

00:09:56,240 --> 00:10:01,220
tests should be as they are in core a

00:09:59,360 --> 00:10:02,570
gate before that feature is considered

00:10:01,220 --> 00:10:06,650
ready to merge if it doesn't come with

00:10:02,570 --> 00:10:08,420
tests or what should it be testing so it

00:10:06,650 --> 00:10:09,830
also you know I was saying earlier about

00:10:08,420 --> 00:10:10,940
you can pinpoint when things went wrong

00:10:09,830 --> 00:10:15,350
I mean if you're not using version

00:10:10,940 --> 00:10:20,360
control you really can't so yeah we're

00:10:15,350 --> 00:10:21,620
what we basically looking at our when

00:10:20,360 --> 00:10:23,600
you have to make your first decision

00:10:21,620 --> 00:10:26,870
you've built this classified site you've

00:10:23,600 --> 00:10:31,090
got your commerce no check out installed

00:10:26,870 --> 00:10:31,090
and I've got a like an example site here

00:10:32,200 --> 00:10:37,850
which is the product of an install

00:10:35,390 --> 00:10:39,530
profile and so we'll be working on this

00:10:37,850 --> 00:10:40,910
install profile called sell your stuff

00:10:39,530 --> 00:10:42,380
which basically provides all the

00:10:40,910 --> 00:10:44,480
functionality that we talked about here

00:10:42,380 --> 00:10:46,490
this is up on github and as slides at

00:10:44,480 --> 00:10:49,610
the end but when you install this

00:10:46,490 --> 00:10:55,540
profile you get the content type you get

00:10:49,610 --> 00:10:59,840
a product standard listing which is your

00:10:55,540 --> 00:11:01,700
pay to publish content product and it's

00:10:59,840 --> 00:11:05,630
already associated with particular

00:11:01,700 --> 00:11:07,460
content type and so this is what you end

00:11:05,630 --> 00:11:09,260
up with when you install the install

00:11:07,460 --> 00:11:11,600
profile and so we can use this as the

00:11:09,260 --> 00:11:13,250
basis for our tests to ensure that we're

00:11:11,600 --> 00:11:18,730
in the same reproducible environment

00:11:13,250 --> 00:11:18,730
every time so back to the presentation

00:11:18,790 --> 00:11:22,010
this is where you got to make your first

00:11:20,720 --> 00:11:23,900
decision you've built the site you're

00:11:22,010 --> 00:11:25,490
ready to go I mean the first thing you

00:11:23,900 --> 00:11:28,340
want to check is that the checkout

00:11:25,490 --> 00:11:30,740
process works you know your client it's

00:11:28,340 --> 00:11:33,220
page it build this site this is their

00:11:30,740 --> 00:11:36,440
revenue stream they want to be sure that

00:11:33,220 --> 00:11:38,030
you update Commerce or another

00:11:36,440 --> 00:11:39,440
contributor module on your site

00:11:38,030 --> 00:11:41,240
did you check out process isn't going to

00:11:39,440 --> 00:11:42,230
break and they're going to call you in

00:11:41,240 --> 00:11:44,750
the middle of the night and see what's

00:11:42,230 --> 00:11:47,000
going on so this is where you make

00:11:44,750 --> 00:11:48,440
decision manual tests or automated tests

00:11:47,000 --> 00:11:51,460
and I'm sure most people had the room

00:11:48,440 --> 00:11:55,520
here would know what that number is for

00:11:51,460 --> 00:11:57,230
ya if you're testing you checkout

00:11:55,520 --> 00:11:58,790
process by typing that number in you

00:11:57,230 --> 00:12:00,470
know what I'm talking about and this is

00:11:58,790 --> 00:12:02,950
where you know should maybe be looking

00:12:00,470 --> 00:12:05,000
at I'd move into this automated testing

00:12:02,950 --> 00:12:07,460
there's other things people up using

00:12:05,000 --> 00:12:09,350
macro plugins for firefox or chrome

00:12:07,460 --> 00:12:12,830
where they require your clicks and you

00:12:09,350 --> 00:12:15,320
can run them for mono completes you know

00:12:12,830 --> 00:12:16,820
look before I used to work this way I

00:12:15,320 --> 00:12:18,920
know it for a fact I could go to any

00:12:16,820 --> 00:12:20,420
commerce checkout form on any site and

00:12:18,920 --> 00:12:24,260
start typing and it'll recognize the

00:12:20,420 --> 00:12:25,700
fields and to provide me with 4111 so

00:12:24,260 --> 00:12:27,260
yeah what this is where you got to make

00:12:25,700 --> 00:12:31,730
the decision and weigh up the costs

00:12:27,260 --> 00:12:33,770
involved with both so when you want to

00:12:31,730 --> 00:12:35,360
test or budget ISM is a factor but you

00:12:33,770 --> 00:12:38,030
also have to weigh in maintenance costs

00:12:35,360 --> 00:12:40,040
there's a cost associated with doing

00:12:38,030 --> 00:12:43,190
that manual testing and there's also a

00:12:40,040 --> 00:12:45,200
cost associated with when things go

00:12:43,190 --> 00:12:46,400
wrong and if you're after you know

00:12:45,200 --> 00:12:47,570
responsible for the maintenance of a

00:12:46,400 --> 00:12:49,160
site and you're constantly got

00:12:47,570 --> 00:12:50,450
regressions or bugs that you should have

00:12:49,160 --> 00:12:52,640
test coverage for there's a cost

00:12:50,450 --> 00:12:54,560
involved in that as well and that cost I

00:12:52,640 --> 00:12:56,990
would say would offset the time it takes

00:12:54,560 --> 00:12:59,240
to write the tests and do it properly

00:12:56,990 --> 00:13:00,770
from the start and there's other things

00:12:59,240 --> 00:13:02,960
that you've got to work way up here

00:13:00,770 --> 00:13:05,810
you've got click fatigue I mean you

00:13:02,960 --> 00:13:09,680
don't on the RSI injury from going

00:13:05,810 --> 00:13:12,590
through the checkout process and you

00:13:09,680 --> 00:13:13,820
know you need to decide which things

00:13:12,590 --> 00:13:16,190
that you want to test and you want to

00:13:13,820 --> 00:13:17,600
based on their importance so I talked

00:13:16,190 --> 00:13:19,040
about here the checkout process that's

00:13:17,600 --> 00:13:20,960
obviously the critical functionality of

00:13:19,040 --> 00:13:22,730
this site you don't need to test that

00:13:20,960 --> 00:13:23,930
you know people can log in you don't

00:13:22,730 --> 00:13:26,090
need to test of those things that's kind

00:13:23,930 --> 00:13:27,890
of the Drupal you're really interested

00:13:26,090 --> 00:13:30,700
in the end-to-end integration that's

00:13:27,890 --> 00:13:33,380
specific to your business case here and

00:13:30,700 --> 00:13:36,650
what it does help you do is keep a lid

00:13:33,380 --> 00:13:39,050
or limit the risk to regressions and it

00:13:36,650 --> 00:13:40,790
obviously provides you with an extra

00:13:39,050 --> 00:13:43,220
string in your Bo for quality when you

00:13:40,790 --> 00:13:45,200
selling to the client that hey we

00:13:43,220 --> 00:13:45,660
practice test driven development you

00:13:45,200 --> 00:13:48,990
know we

00:13:45,660 --> 00:13:51,570
Bell I work with tests and we can it

00:13:48,990 --> 00:13:55,620
gives you that extra bit of prestige

00:13:51,570 --> 00:13:58,020
into what you do and so what do you want

00:13:55,620 --> 00:14:00,300
to test well the general rule you've got

00:13:58,020 --> 00:14:02,670
a test critical functionality and we

00:14:00,300 --> 00:14:04,830
talked about that but get new test for

00:14:02,670 --> 00:14:06,960
new features you branch off you get flow

00:14:04,830 --> 00:14:09,120
model and you create you know you've got

00:14:06,960 --> 00:14:12,150
to user story which is a certain set of

00:14:09,120 --> 00:14:13,530
functionality and you go test to go with

00:14:12,150 --> 00:14:15,510
that and if you've got peer review

00:14:13,530 --> 00:14:17,220
certainly the previous next that's one

00:14:15,510 --> 00:14:19,140
of the gates before during peer review

00:14:17,220 --> 00:14:21,570
is is there a test should to be a test

00:14:19,140 --> 00:14:24,420
why isn't there a test show me a test

00:14:21,570 --> 00:14:26,880
you know and yeah when of when a bug is

00:14:24,420 --> 00:14:29,010
identified as I said before write the

00:14:26,880 --> 00:14:31,110
test verify it fixed the bug run the

00:14:29,010 --> 00:14:33,050
test and you know hopefully you should

00:14:31,110 --> 00:14:35,550
never have to think about that bug again

00:14:33,050 --> 00:14:37,290
if you've got continuous integration you

00:14:35,550 --> 00:14:45,450
know straight away if someone's broken

00:14:37,290 --> 00:14:47,250
it so how do you get started well you

00:14:45,450 --> 00:14:48,780
probably do have to do one manual test

00:14:47,250 --> 00:14:51,150
run because you need to work through

00:14:48,780 --> 00:14:53,430
logically in your mind the steps that

00:14:51,150 --> 00:14:55,140
you're testing for your end to end I'm

00:14:53,430 --> 00:14:56,850
so in our example you would work through

00:14:55,140 --> 00:14:58,230
the checkout process and you have

00:14:56,850 --> 00:15:00,630
appendicitis or you have your code

00:14:58,230 --> 00:15:04,050
editor open and as you click you'll do

00:15:00,630 --> 00:15:05,910
the equivalent in your test class as you

00:15:04,050 --> 00:15:07,110
submit a form you do the equivalent and

00:15:05,910 --> 00:15:10,050
so we'll go through that in detail

00:15:07,110 --> 00:15:12,840
shortly but when you see them

00:15:10,050 --> 00:15:16,080
side-by-side it kind of makes it makes

00:15:12,840 --> 00:15:18,810
sense it's not that it's not that hard

00:15:16,080 --> 00:15:22,700
to grasp but we'll get the basics really

00:15:18,810 --> 00:15:25,500
first so first thing you've got to do is

00:15:22,700 --> 00:15:27,990
extend the base classes with your new

00:15:25,500 --> 00:15:31,320
class and so this is rocket science

00:15:27,990 --> 00:15:34,170
people for me with it dream seven you've

00:15:31,320 --> 00:15:36,390
got to register your class with with the

00:15:34,170 --> 00:15:39,330
registry so is everyone for me how you

00:15:36,390 --> 00:15:41,730
do that in Drupal 7 basically you've

00:15:39,330 --> 00:15:44,010
gotta declare the file in your info file

00:15:41,730 --> 00:15:47,330
of your module so with the files array

00:15:44,010 --> 00:15:52,760
and your file has to end in dot test and

00:15:47,330 --> 00:15:55,530
clear cache and you're good to go so

00:15:52,760 --> 00:15:58,080
triple seven we would ordinarily extend

00:15:55,530 --> 00:15:59,250
the Drupal web test case you create your

00:15:58,080 --> 00:16:02,510
test file press

00:15:59,250 --> 00:16:04,830
suffix it with the dot test extension

00:16:02,510 --> 00:16:06,750
you need to declare the drip of what

00:16:04,830 --> 00:16:08,910
your test does and so your class needs

00:16:06,750 --> 00:16:10,560
to implement the get info method and the

00:16:08,910 --> 00:16:12,660
get info method is like a nympho book

00:16:10,560 --> 00:16:14,100
and most people who write Drupal modules

00:16:12,660 --> 00:16:16,140
or have written Drupal modules would be

00:16:14,100 --> 00:16:18,270
familiar with a nympho hook it basically

00:16:16,140 --> 00:16:19,560
tells Drupal the name of your module

00:16:18,270 --> 00:16:22,020
what group it belongs to and what it

00:16:19,560 --> 00:16:25,200
does and then you set up your tests with

00:16:22,020 --> 00:16:27,990
a setup method so every method in your

00:16:25,200 --> 00:16:30,630
test class that is prefixed with test so

00:16:27,990 --> 00:16:32,430
test widgets test fubar that's

00:16:30,630 --> 00:16:34,530
considered an individual test by drupal

00:16:32,430 --> 00:16:36,630
and when the tests run it runs each of

00:16:34,530 --> 00:16:38,730
those instances before that it runs

00:16:36,630 --> 00:16:41,220
setup method and so in your test class

00:16:38,730 --> 00:16:42,480
you can use the setup method to get the

00:16:41,220 --> 00:16:44,760
environment the way you want it for that

00:16:42,480 --> 00:16:47,310
particular test now in most cases you

00:16:44,760 --> 00:16:49,170
don't include logging a user in because

00:16:47,310 --> 00:16:50,970
you know most of the functionality

00:16:49,170 --> 00:16:55,530
providing Drupal is for an authenticated

00:16:50,970 --> 00:16:58,200
user and so one thing you've always

00:16:55,530 --> 00:17:01,110
going to do in Israel up to install the

00:16:58,200 --> 00:17:04,230
required modules right your your to your

00:17:01,110 --> 00:17:06,959
module might define int info file its

00:17:04,230 --> 00:17:08,670
dependencies but in a case of say an

00:17:06,959 --> 00:17:10,079
install profile you might need other

00:17:08,670 --> 00:17:12,000
things that are specific to that test

00:17:10,079 --> 00:17:13,770
you so you've got a you've got to take

00:17:12,000 --> 00:17:15,270
care of housekeeping and I've seen

00:17:13,770 --> 00:17:18,870
places where the dependency chain

00:17:15,270 --> 00:17:20,189
doesn't work flawlessly so just be

00:17:18,870 --> 00:17:21,930
mindful of that if something doesn't

00:17:20,189 --> 00:17:23,930
work the way you thought it would just

00:17:21,930 --> 00:17:26,880
you know make sure you've got all the

00:17:23,930 --> 00:17:27,959
all the modules that you need and I'll

00:17:26,880 --> 00:17:32,300
talk a little bit about that how to

00:17:27,959 --> 00:17:36,090
debug what's going wrong surely so

00:17:32,300 --> 00:17:37,320
Drupal 8 and this is especially

00:17:36,090 --> 00:17:38,910
important for people who want to get

00:17:37,320 --> 00:17:40,920
involved in call or who are coming to

00:17:38,910 --> 00:17:43,530
the core spring you need to extend

00:17:40,920 --> 00:17:47,280
Drupal simple test web test base now

00:17:43,530 --> 00:17:48,630
this is PS r0 name spacing and if you've

00:17:47,280 --> 00:17:51,060
been to any of the sessions on say

00:17:48,630 --> 00:17:53,820
symphony or web services you've seen

00:17:51,060 --> 00:17:57,150
that before I'm going to go into great

00:17:53,820 --> 00:17:59,220
detail but there's some differences

00:17:57,150 --> 00:18:01,980
between Drupal 7 Drupal 8 in Drupal 7

00:17:59,220 --> 00:18:04,260
you have to set up you have to call

00:18:01,980 --> 00:18:05,850
parents set up in your setup method and

00:18:04,260 --> 00:18:07,530
pass the array of modules you need

00:18:05,850 --> 00:18:10,530
enabled and I'll show example that

00:18:07,530 --> 00:18:12,780
shortly but in Drupal 8 it's a static

00:18:10,530 --> 00:18:14,940
property on your class

00:18:12,780 --> 00:18:17,610
just an array and array of the module

00:18:14,940 --> 00:18:19,500
machine names and that's certainly a

00:18:17,610 --> 00:18:21,060
much simpler and in Drupal 8 we also

00:18:19,500 --> 00:18:23,310
have a testing profile which is a

00:18:21,060 --> 00:18:25,200
stripped-down installed profile if

00:18:23,310 --> 00:18:27,120
you're writing tests for core you should

00:18:25,200 --> 00:18:30,330
be considering using the testing profile

00:18:27,120 --> 00:18:31,590
other than say standard or minimal you

00:18:30,330 --> 00:18:33,540
know if you're testing the functionality

00:18:31,590 --> 00:18:34,950
of a particular module and you don't

00:18:33,540 --> 00:18:36,900
need node installed you don't need

00:18:34,950 --> 00:18:39,180
comment you don't need the two content

00:18:36,900 --> 00:18:40,770
types and the search block placed in the

00:18:39,180 --> 00:18:42,720
left-hand sidebar and the powered by

00:18:40,770 --> 00:18:44,550
drupal in the you know use the testing

00:18:42,720 --> 00:18:46,170
profile because every one of those test

00:18:44,550 --> 00:18:48,630
methods in your class is a complete

00:18:46,170 --> 00:18:50,310
drupal install what it will do is it

00:18:48,630 --> 00:18:53,490
will spin up a whole new install of your

00:18:50,310 --> 00:18:55,500
site in a prefixed databases class so

00:18:53,490 --> 00:18:57,780
dermot creates a new connection and it

00:18:55,500 --> 00:18:59,490
uses prefix tables which people were

00:18:57,780 --> 00:19:02,010
probably familiar with it was the big

00:18:59,490 --> 00:19:05,520
whiz-bang thing in earlier versions of

00:19:02,010 --> 00:19:08,190
Drupal so if you can minimize what that

00:19:05,520 --> 00:19:09,240
has to do on install every time your

00:19:08,190 --> 00:19:10,830
tests are going to be a hell of a lot

00:19:09,240 --> 00:19:12,900
faster and so obviously for call where

00:19:10,830 --> 00:19:15,300
tests are taking close to an hour at the

00:19:12,900 --> 00:19:16,830
moment yet the test suite for core is

00:19:15,300 --> 00:19:19,230
taking close to an hour to run we have

00:19:16,830 --> 00:19:22,980
an enormous amount of tests yet if

00:19:19,230 --> 00:19:25,530
possible is the testing profile and if

00:19:22,980 --> 00:19:27,240
you're doing in a simple tests of your

00:19:25,530 --> 00:19:31,340
module functionality when you get to

00:19:27,240 --> 00:19:31,340
Drupal 8 it's available therefore to use

00:19:31,910 --> 00:19:37,620
and I've got some code examples of

00:19:33,870 --> 00:19:42,360
Drupal 8 which I like to show you now to

00:19:37,620 --> 00:19:44,520
see the main differences and so first of

00:19:42,360 --> 00:19:47,550
all you your namespace push-ups are zero

00:19:44,520 --> 00:19:49,470
use the web test base and this is a

00:19:47,550 --> 00:19:50,940
track a test from core and we're

00:19:49,470 --> 00:19:54,420
enabling the comment module to track a

00:19:50,940 --> 00:19:56,850
module on the history module and there

00:19:54,420 --> 00:19:58,350
the tests that are needed for this test

00:19:56,850 --> 00:20:00,510
the modules that are required for this

00:19:58,350 --> 00:20:03,090
test we have attacked two very key of

00:20:00,510 --> 00:20:05,750
the user another user so this is the get

00:20:03,090 --> 00:20:09,150
info this is the same as it is in Drupal

00:20:05,750 --> 00:20:11,100
7 you return an array the name of the

00:20:09,150 --> 00:20:12,930
test description and what group it

00:20:11,100 --> 00:20:15,180
belongs to and the group is a is a

00:20:12,930 --> 00:20:17,240
powerful feature if you're writing tests

00:20:15,180 --> 00:20:19,500
for your for your project for your

00:20:17,240 --> 00:20:21,570
requirements if you use the particular

00:20:19,500 --> 00:20:23,430
group that's helpful for you run them in

00:20:21,570 --> 00:20:25,620
a targeted environment with sage rush

00:20:23,430 --> 00:20:26,580
and continuous integration you don't

00:20:25,620 --> 00:20:28,620
need to run the full

00:20:26,580 --> 00:20:29,909
of Cour tests against your project just

00:20:28,620 --> 00:20:32,070
need to run the ones that are particular

00:20:29,909 --> 00:20:34,190
to your project so when we get to

00:20:32,070 --> 00:20:36,450
shortly how you actually run the tests

00:20:34,190 --> 00:20:39,000
I'll show you where that is useful

00:20:36,450 --> 00:20:41,490
because yeah it means you can pinpoint

00:20:39,000 --> 00:20:44,100
exactly the test that you want in a in a

00:20:41,490 --> 00:20:45,630
nice chunk and so we'll just have a

00:20:44,100 --> 00:20:49,590
quick look through the setup method on

00:20:45,630 --> 00:20:51,779
this Drupal 8 1 sets up the parent

00:20:49,590 --> 00:20:53,250
because it's inheriting and sets up a

00:20:51,779 --> 00:20:57,299
few things for this test so this test

00:20:53,250 --> 00:20:59,460
requires a content type type page it

00:20:57,299 --> 00:21:01,919
requires a user with access comments

00:20:59,460 --> 00:21:04,620
create page content post comments and

00:21:01,919 --> 00:21:06,480
some other stuff off the side and it

00:21:04,620 --> 00:21:08,460
creates it it needs two of those users

00:21:06,480 --> 00:21:10,470
and it needs some variables set so

00:21:08,460 --> 00:21:12,029
that's it up if it runs for every test

00:21:10,470 --> 00:21:15,210
that are in this class and then so

00:21:12,029 --> 00:21:17,010
here's one test here's another test and

00:21:15,210 --> 00:21:20,389
each one of these runs in a separate

00:21:17,010 --> 00:21:23,490
install so here you can see we're

00:21:20,389 --> 00:21:25,350
getting this commonality between the

00:21:23,490 --> 00:21:29,210
three could easily go into the setup

00:21:25,350 --> 00:21:29,210
method so you're not repeating yourself

00:21:30,440 --> 00:21:34,340
and I've just put a line in there

00:21:40,669 --> 00:21:45,809
okay so back to our checkout pricing we

00:21:44,519 --> 00:21:47,340
would follow through the logical manner

00:21:45,809 --> 00:21:49,559
so the first thing we'll do is we would

00:21:47,340 --> 00:21:52,499
log as an anonymous user we would

00:21:49,559 --> 00:21:54,360
navigate to the add content page we

00:21:52,499 --> 00:21:56,309
would fill in the form we would hit

00:21:54,360 --> 00:21:58,679
submit we would verify that were

00:21:56,309 --> 00:22:01,529
redirected to the checkout page we would

00:21:58,679 --> 00:22:03,629
fill out our dress details we would hit

00:22:01,529 --> 00:22:06,389
continue to the next step we would put

00:22:03,629 --> 00:22:08,700
in our credit card details and we were

00:22:06,389 --> 00:22:10,649
complete payment and then we might log

00:22:08,700 --> 00:22:12,659
in as the admin user and make sure that

00:22:10,649 --> 00:22:14,850
the node that they created was published

00:22:12,659 --> 00:22:16,980
and would go to the order section and

00:22:14,850 --> 00:22:18,629
make sure that the the order came

00:22:16,980 --> 00:22:20,279
through and the price was right is this

00:22:18,629 --> 00:22:23,309
you know kind of follows through

00:22:20,279 --> 00:22:28,049
logically yeah it's pretty yep so what

00:22:23,309 --> 00:22:31,369
you do in the browser basically and what

00:22:28,049 --> 00:22:31,369
does that look like in code

00:22:40,210 --> 00:22:46,540
sorry I've lost my mask can anyone see

00:22:42,370 --> 00:22:48,220
it on that color hey here we are so this

00:22:46,540 --> 00:22:53,010
is the test for the the sell your stuff

00:22:48,220 --> 00:22:55,660
module installed profile in our set up

00:22:53,010 --> 00:22:58,570
we're also requiring Commerce or DUI

00:22:55,660 --> 00:23:00,220
I'll get to why in a minute but we don't

00:22:58,570 --> 00:23:02,170
want the audio I on our production site

00:23:00,220 --> 00:23:03,850
for this particular install profile so

00:23:02,170 --> 00:23:06,520
we can actually enable additional

00:23:03,850 --> 00:23:08,140
modules that aren't in the install

00:23:06,520 --> 00:23:10,540
profile but we need it for the purpose

00:23:08,140 --> 00:23:12,040
of tests we're going to create a user

00:23:10,540 --> 00:23:16,180
for the different operations that we

00:23:12,040 --> 00:23:23,650
need so not a good choice of background

00:23:16,180 --> 00:23:24,910
color here we go so admin permissions we

00:23:23,650 --> 00:23:26,680
want to be able to access the content

00:23:24,910 --> 00:23:28,960
overview we want to administer nodes we

00:23:26,680 --> 00:23:31,060
want to view some commerce orders and we

00:23:28,960 --> 00:23:34,180
want to administer the orders and so we

00:23:31,060 --> 00:23:35,800
create an admin user against the test by

00:23:34,180 --> 00:23:39,610
going this troop will create user and

00:23:35,800 --> 00:23:41,200
passing in the permissions and so we

00:23:39,610 --> 00:23:42,370
want to what we're basically doing is

00:23:41,200 --> 00:23:45,960
we've only got one test in this class

00:23:42,370 --> 00:23:49,060
but you know as I work through to

00:23:45,960 --> 00:23:59,500
sequentially before is this Emma can

00:23:49,060 --> 00:24:01,680
read this it's not too small cool sorry

00:23:59,500 --> 00:24:01,680
guys

00:24:02,990 --> 00:24:08,820
so we're not logged in first thing we do

00:24:06,450 --> 00:24:11,669
is we go to notate page so use Drupal

00:24:08,820 --> 00:24:14,910
get and it performs a get request with

00:24:11,669 --> 00:24:17,160
single tests internal browser and goes

00:24:14,910 --> 00:24:20,400
to no doubt page and if you run these in

00:24:17,160 --> 00:24:22,590
the UI you actually get the HTML for no

00:24:20,400 --> 00:24:24,360
doubt page and so you can see if there's

00:24:22,590 --> 00:24:26,370
any warnings what went wrong is was it

00:24:24,360 --> 00:24:28,890
what you expected to see I'll get to

00:24:26,370 --> 00:24:30,150
that shortly and so the first thing we

00:24:28,890 --> 00:24:32,190
want to make sure in our test is that

00:24:30,150 --> 00:24:33,539
anonymous users can actually get to that

00:24:32,190 --> 00:24:36,030
page because ordinarily they wouldn't be

00:24:33,539 --> 00:24:39,240
able to write that's you know create

00:24:36,030 --> 00:24:42,030
content is normally protected permission

00:24:39,240 --> 00:24:43,799
and so if our install profiles doing

00:24:42,030 --> 00:24:46,350
what it should the anonymous user should

00:24:43,799 --> 00:24:49,110
get a 200 there they should get a valid

00:24:46,350 --> 00:24:52,890
response not a 40 39 or 40 for so we

00:24:49,110 --> 00:24:55,020
assert that the response was a 200 and

00:24:52,890 --> 00:24:56,280
then we want to create a listing so

00:24:55,020 --> 00:24:57,659
we're going to sell a lovely three year

00:24:56,280 --> 00:25:00,450
old miniature pony here named rainbow

00:24:57,659 --> 00:25:01,860
sparkles and so we've got a title and

00:25:00,450 --> 00:25:04,200
we've got a body now those people who've

00:25:01,860 --> 00:25:06,030
worked with the form API will probably

00:25:04,200 --> 00:25:07,500
recognize the format of this and those

00:25:06,030 --> 00:25:10,140
people who work with the entities in

00:25:07,500 --> 00:25:14,880
Drupal 7 probably know in love language

00:25:10,140 --> 00:25:18,380
none or hate and if you went to mow

00:25:14,880 --> 00:25:20,610
motor session on web services on

00:25:18,380 --> 00:25:23,070
yesterday first session and he talked

00:25:20,610 --> 00:25:24,990
about entity next generation if you hate

00:25:23,070 --> 00:25:26,429
language none and you hate this zero

00:25:24,990 --> 00:25:28,620
value you're going to love enter the

00:25:26,429 --> 00:25:31,740
next generation because you go node

00:25:28,620 --> 00:25:33,900
title value and you get the value you go

00:25:31,740 --> 00:25:36,960
node body value and you get the value

00:25:33,900 --> 00:25:38,610
and if it's an you've got if your

00:25:36,960 --> 00:25:40,049
language content is Italian you go node

00:25:38,610 --> 00:25:42,780
body value and you get the Italian

00:25:40,049 --> 00:25:50,059
version it's for a developer experience

00:25:42,780 --> 00:25:52,470
it's bellissimo you know so basically

00:25:50,059 --> 00:25:53,700
say you don't know the form API or you

00:25:52,470 --> 00:25:56,100
don't know the structure of the node and

00:25:53,700 --> 00:25:57,539
you want to find out what am I what does

00:25:56,100 --> 00:25:59,929
this edit things special look like what

00:25:57,539 --> 00:25:59,929
is this voodoo

00:26:03,360 --> 00:26:12,830
look we're back um you can actually look

00:26:07,380 --> 00:26:16,320
at the mark-up so I'll set up a

00:26:12,830 --> 00:26:18,530
anonymous user you know I'm in a private

00:26:16,320 --> 00:26:29,150
browsing window his own arm anonymous

00:26:18,530 --> 00:26:34,590
nude and article what the add content

00:26:29,150 --> 00:26:40,110
basic page here we go so I'm going to

00:26:34,590 --> 00:26:45,620
create my miniature pony right I really

00:26:40,110 --> 00:26:48,419
should watch my autocorrect oh yeah

00:26:45,620 --> 00:26:50,040
that's what happens with so that's words

00:26:48,419 --> 00:26:53,059
with children and we were demonstrating

00:26:50,040 --> 00:26:55,080
it like a screencast to acolyte once and

00:26:53,059 --> 00:26:56,429
hear something came up that was really

00:26:55,080 --> 00:26:57,840
not right but yeah you've got young

00:26:56,429 --> 00:26:59,460
children and they're sitting near you

00:26:57,840 --> 00:27:01,710
say what should I use he and they just

00:26:59,460 --> 00:27:04,020
spit out the randomest things here okay

00:27:01,710 --> 00:27:05,429
so how do we know what what we're

00:27:04,020 --> 00:27:07,110
supposed to be submitting their if you

00:27:05,429 --> 00:27:09,210
inspect the elements that you're

00:27:07,110 --> 00:27:15,720
submitting and you look at the name

00:27:09,210 --> 00:27:16,980
attribute in the Dom that's what you're

00:27:15,720 --> 00:27:19,260
submitting that's what your post

00:27:16,980 --> 00:27:21,690
variables need to be keyed by so body

00:27:19,260 --> 00:27:24,929
und which you would know is language

00:27:21,690 --> 00:27:28,020
done zero value incidentally in Drupal 8

00:27:24,929 --> 00:27:31,350
it's now language not specified just

00:27:28,020 --> 00:27:33,510
because we know you like these things

00:27:31,350 --> 00:27:36,000
change yeah yeah no it's actually to

00:27:33,510 --> 00:27:37,350
standardize with everything you like

00:27:36,000 --> 00:27:42,120
this is actually standard for nominating

00:27:37,350 --> 00:27:44,160
that so we want to post that form so the

00:27:42,120 --> 00:27:45,990
arguments to the post are where you want

00:27:44,160 --> 00:27:48,240
to post it to what you want to post and

00:27:45,990 --> 00:27:49,980
what button you want to click because as

00:27:48,240 --> 00:27:51,929
you saw on the no form back there

00:27:49,980 --> 00:27:53,640
there's a couple of buttons save and

00:27:51,929 --> 00:27:55,380
preview so you need to actually pass

00:27:53,640 --> 00:27:58,440
those in and you'll notice I've wrapped

00:27:55,380 --> 00:28:00,480
them in T and that's just good practice

00:27:58,440 --> 00:28:01,770
because that button could be translated

00:28:00,480 --> 00:28:04,350
if you were working in a multilingual

00:28:01,770 --> 00:28:06,150
environment but the null the reason were

00:28:04,350 --> 00:28:08,429
personal is because we already navigated

00:28:06,150 --> 00:28:10,860
to note that page earlier back up here

00:28:08,429 --> 00:28:12,809
at line 54 so we don't need to navigate

00:28:10,860 --> 00:28:14,850
there again and drupal's internal

00:28:12,809 --> 00:28:15,360
browser in a simple test smart enough to

00:28:14,850 --> 00:28:18,750
know that

00:28:15,360 --> 00:28:27,840
and so we want to check that things work

00:28:18,750 --> 00:28:29,700
so if I go back to that example see

00:28:27,840 --> 00:28:31,230
these notices here basic page mitch has

00:28:29,700 --> 00:28:33,540
been created and starting listen to your

00:28:31,230 --> 00:28:35,160
cart so if you're doing this manually

00:28:33,540 --> 00:28:36,660
that would be the first thing you'll

00:28:35,160 --> 00:28:39,750
check that it kind of worked the way

00:28:36,660 --> 00:28:44,910
you're expecting so we just go looking

00:28:39,750 --> 00:28:47,970
for those come on Mouse need to make a

00:28:44,910 --> 00:28:49,830
bigger pointer there's we're checking

00:28:47,970 --> 00:28:51,270
for basic page miniature pony has been

00:28:49,830 --> 00:28:53,549
created and the starting the sting was

00:28:51,270 --> 00:28:55,410
added to your cart now because I'm

00:28:53,549 --> 00:28:57,299
actually hard coding the miniature pony

00:28:55,410 --> 00:28:59,700
up here I decide for me to do that but

00:28:57,299 --> 00:29:00,900
if I was using you know variable

00:28:59,700 --> 00:29:02,580
something I would probably use something

00:29:00,900 --> 00:29:06,030
like a format string to make sure that

00:29:02,580 --> 00:29:08,190
you had the string injected the same way

00:29:06,030 --> 00:29:09,210
that Drupal was doing it replicating

00:29:08,190 --> 00:29:12,090
what was actually happening in the

00:29:09,210 --> 00:29:13,260
module so that you get the same it's

00:29:12,090 --> 00:29:14,820
going through the same pipeline

00:29:13,260 --> 00:29:19,080
basically and you get the reproducible

00:29:14,820 --> 00:29:20,549
result but what I'm doing is here this

00:29:19,080 --> 00:29:24,570
is going to be like can you see you

00:29:20,549 --> 00:29:26,370
where's wally there is a cert text is

00:29:24,570 --> 00:29:27,540
checking for text on the page now

00:29:26,370 --> 00:29:30,210
there's a lot of other methods which

00:29:27,540 --> 00:29:31,890
we'll get to shortly but Sir Texas if

00:29:30,210 --> 00:29:33,929
you're checking for tasks and a certain

00:29:31,890 --> 00:29:36,750
role is another one you can use that

00:29:33,929 --> 00:29:39,450
will check for markup because a surtax

00:29:36,750 --> 00:29:43,230
is being passed through plain text up

00:29:39,450 --> 00:29:45,240
check plane which everybody knows hands

00:29:43,230 --> 00:29:47,490
up if you want I'll check plane is yeah

00:29:45,240 --> 00:29:50,700
basically it sanitizes it's just a

00:29:47,490 --> 00:29:51,929
wrapper around HTML special chars so

00:29:50,700 --> 00:29:53,700
we're checking for both those that's so

00:29:51,929 --> 00:29:56,490
good having a fat i'm going to speed

00:29:53,700 --> 00:29:59,070
things up a bit and then we just

00:29:56,490 --> 00:30:01,950
verified that a URL is of the form at

00:29:59,070 --> 00:30:03,270
checkout and within with a number after

00:30:01,950 --> 00:30:05,220
i'm not going to go into detail what

00:30:03,270 --> 00:30:07,530
preg match does because we be here all

00:30:05,220 --> 00:30:09,240
day but basically our format goes to

00:30:07,530 --> 00:30:10,860
check out too and so that's what we're

00:30:09,240 --> 00:30:12,960
we're interesting we're making sure that

00:30:10,860 --> 00:30:15,090
we've gone to the right URL so we can

00:30:12,960 --> 00:30:17,309
get the URL that the browser's on from

00:30:15,090 --> 00:30:18,510
this get URL and if we've got two

00:30:17,309 --> 00:30:21,090
matches like you would with preg match

00:30:18,510 --> 00:30:22,530
we've been redirected if we want to get

00:30:21,090 --> 00:30:25,070
tricky we could assert that there was a

00:30:22,530 --> 00:30:29,779
301 redirect there

00:30:25,070 --> 00:30:31,580
so probably rightly point out this might

00:30:29,779 --> 00:30:32,960
be a little bit fragile but I'm assuming

00:30:31,580 --> 00:30:35,149
that the first note that's created is

00:30:32,960 --> 00:30:37,610
Note one but because this is as fresh

00:30:35,149 --> 00:30:39,259
install I mean this is from this point

00:30:37,610 --> 00:30:41,600
on its installed a friend brand new site

00:30:39,259 --> 00:30:45,110
the first note is going to be node 1 so

00:30:41,600 --> 00:30:47,570
it's relatively safe to do that there's

00:30:45,110 --> 00:30:48,620
a lot of things in core that would you

00:30:47,570 --> 00:30:50,960
know say you submit a note it would

00:30:48,620 --> 00:30:53,990
match on the on the path same as we got

00:30:50,960 --> 00:30:56,360
the order ID in this preg stuff but yeah

00:30:53,990 --> 00:30:57,740
in this case it's safe and we want to

00:30:56,360 --> 00:30:59,049
make sure that the note is not published

00:30:57,740 --> 00:31:01,700
because the intent of this side is

00:30:59,049 --> 00:31:02,990
someone goes in they can create a node

00:31:01,700 --> 00:31:05,029
but no one else can see it until they

00:31:02,990 --> 00:31:07,549
actually fought the cash out so that's

00:31:05,029 --> 00:31:09,049
what we get up to here and now here we

00:31:07,549 --> 00:31:12,740
start to submit the code checkout form

00:31:09,049 --> 00:31:16,330
now we inspect the checkout form like we

00:31:12,740 --> 00:31:22,039
did before and we look at our elements

00:31:16,330 --> 00:31:24,500
and we get the names of them and you

00:31:22,039 --> 00:31:26,080
know some big ones there and we make

00:31:24,500 --> 00:31:29,809
sure we've got the same thing in our

00:31:26,080 --> 00:31:32,059
suite of values but basically that line

00:31:29,809 --> 00:31:33,169
80 down to live 92 is one step of the

00:31:32,059 --> 00:31:35,059
checkout process and you want to know

00:31:33,169 --> 00:31:38,059
how fast simple tests can do that

00:31:35,059 --> 00:31:42,080
compared to your phone out by hand yeah

00:31:38,059 --> 00:31:43,549
a lot faster so yeah everyone familiar

00:31:42,080 --> 00:31:46,100
with drupal commerce it's a two-step

00:31:43,549 --> 00:31:47,539
process by default and both the buttons

00:31:46,100 --> 00:31:48,950
say continue to the next step even

00:31:47,539 --> 00:31:51,049
though the last one actually submits the

00:31:48,950 --> 00:31:54,129
form so the first step for the address

00:31:51,049 --> 00:31:56,960
second step payment third step submit it

00:31:54,129 --> 00:31:59,090
I've commented the code here because

00:31:56,960 --> 00:32:01,129
this is available on github and yeah

00:31:59,090 --> 00:32:04,309
this is actually complete payment right

00:32:01,129 --> 00:32:05,690
just it seems weird and so we check the

00:32:04,309 --> 00:32:08,269
check that we assert that the thing is

00:32:05,690 --> 00:32:09,409
complete now this is going to really i'm

00:32:08,269 --> 00:32:11,360
not gonna actually go through that cuz

00:32:09,409 --> 00:32:13,220
we're short on time but believe me when

00:32:11,360 --> 00:32:15,559
you commit that when you submit that

00:32:13,220 --> 00:32:16,940
that's what you get check out complete

00:32:15,559 --> 00:32:19,429
so we go looking for that to make sure

00:32:16,940 --> 00:32:23,419
it's there and we use format string here

00:32:19,429 --> 00:32:26,269
to pass in the commerce order number

00:32:23,419 --> 00:32:28,460
which we got earlier up here and the

00:32:26,269 --> 00:32:30,529
reason we do that is as i said before

00:32:28,460 --> 00:32:32,509
that's what commerce is doing internally

00:32:30,529 --> 00:32:35,419
if we just checked for your order number

00:32:32,509 --> 00:32:37,460
is number you might get inconsistent

00:32:35,419 --> 00:32:38,750
results so where possible use format

00:32:37,460 --> 00:32:40,640
string and that's I'd

00:32:38,750 --> 00:32:43,310
anukul in arguments to the T function

00:32:40,640 --> 00:32:47,330
which is most people would be familiar

00:32:43,310 --> 00:32:49,040
with so now we want to just do the admin

00:32:47,330 --> 00:32:50,510
side of things we login as admin we go

00:32:49,040 --> 00:32:53,000
to admin content node and we make sure

00:32:50,510 --> 00:32:54,350
that miniature ponies on that site and

00:32:53,000 --> 00:32:56,930
we make sure there's published now this

00:32:54,350 --> 00:32:58,400
is probably you know if I was being

00:32:56,930 --> 00:33:00,320
honest it's a little bit fragile to look

00:32:58,400 --> 00:33:02,090
for the word published on that page but

00:33:00,320 --> 00:33:05,240
because the site's just been freshly

00:33:02,090 --> 00:33:06,560
installed us only got one node if it

00:33:05,240 --> 00:33:10,460
wasn't published you know you wouldn't

00:33:06,560 --> 00:33:12,350
see it so yeah we load the node back up

00:33:10,460 --> 00:33:13,820
and we use the true argument here at the

00:33:12,350 --> 00:33:16,070
end to make sure that we don't get one

00:33:13,820 --> 00:33:18,470
from the static case and we should

00:33:16,070 --> 00:33:21,890
assert that the node is published now

00:33:18,470 --> 00:33:23,960
and then just for some extra you know to

00:33:21,890 --> 00:33:26,000
make sure the price was right we go to

00:33:23,960 --> 00:33:28,010
the Commerce order page and we make sure

00:33:26,000 --> 00:33:30,020
that we get a 200 there and it's worth

00:33:28,010 --> 00:33:31,880
pointing out that if you use Drupal get

00:33:30,020 --> 00:33:36,670
to navigate to admin commerce orders for

00:33:31,880 --> 00:33:40,220
a slash view if that order didn't exist

00:33:36,670 --> 00:33:41,450
you won't get a fail because that might

00:33:40,220 --> 00:33:42,980
be what you're trying to test you might

00:33:41,450 --> 00:33:44,660
be trying to test that that's an invalid

00:33:42,980 --> 00:33:46,520
URL so you have to actually assert that

00:33:44,660 --> 00:33:48,200
it's a 202 make sure that that page

00:33:46,520 --> 00:33:49,610
actually exists you would get a file

00:33:48,200 --> 00:33:53,120
because the text is looking for later on

00:33:49,610 --> 00:33:55,940
doesn't there isn't there but yeah if

00:33:53,120 --> 00:33:57,650
the URL that you navigate to the

00:33:55,940 --> 00:34:01,010
internal browser doesn't exist or its

00:33:57,650 --> 00:34:02,750
access denied it won't the Drupal get

00:34:01,010 --> 00:34:05,960
won't roll fail because that might be

00:34:02,750 --> 00:34:09,080
what you were expecting to happen and we

00:34:05,960 --> 00:34:19,840
just check for final replace file there

00:34:09,080 --> 00:34:23,060
oh and coding standards file no no yeah

00:34:19,840 --> 00:34:25,310
yeah sorry where do I did run through

00:34:23,060 --> 00:34:26,810
this presentation and someone rightly

00:34:25,310 --> 00:34:32,629
pointed out that I shouldn't be using

00:34:26,810 --> 00:34:34,310
und I should be thanks guys I'll push

00:34:32,629 --> 00:34:36,129
that up after so yeah that's kind of

00:34:34,310 --> 00:34:40,360
working through it sequentially I'm

00:34:36,129 --> 00:34:40,360
going to get a bit of a wriggle on here

00:34:42,599 --> 00:34:44,659
you

00:34:52,109 --> 00:34:55,799
so we looked at some of these before you

00:34:54,359 --> 00:34:57,930
can check for raw output with the cert

00:34:55,799 --> 00:35:02,279
raw and you can check for plain text

00:34:57,930 --> 00:35:04,019
with with the cert text so you should

00:35:02,279 --> 00:35:05,220
check for specific markup you expecting

00:35:04,019 --> 00:35:06,359
but you need to be aware that you're not

00:35:05,220 --> 00:35:07,890
picking something that's going to change

00:35:06,359 --> 00:35:09,749
from time to time so if you're looking

00:35:07,890 --> 00:35:13,259
for a piece of markup that goes through

00:35:09,749 --> 00:35:14,759
a theme template and you know Joe Bloggs

00:35:13,259 --> 00:35:17,789
the theme art goes and changes the

00:35:14,759 --> 00:35:20,220
markup because he wants to use some

00:35:17,789 --> 00:35:21,839
dinner something different you know new

00:35:20,220 --> 00:35:23,940
tests might fail and it's not a failure

00:35:21,839 --> 00:35:26,279
in the true sense of that something's

00:35:23,940 --> 00:35:27,809
broken but it's a it's a failure that

00:35:26,279 --> 00:35:29,849
you know so he's going to have to go in

00:35:27,809 --> 00:35:31,739
and modify the test so if you can pick

00:35:29,849 --> 00:35:34,349
something that's specific we're not too

00:35:31,739 --> 00:35:35,970
specific yeah there's a couple of

00:35:34,349 --> 00:35:36,960
utility methods this file in this past

00:35:35,970 --> 00:35:39,569
and they're kind of things that you

00:35:36,960 --> 00:35:41,180
would use in your logic flow so same

00:35:39,569 --> 00:35:44,190
thing you gotta try catch block and

00:35:41,180 --> 00:35:46,230
you're expecting it to throw an error

00:35:44,190 --> 00:35:48,480
and you end up in the catch block you

00:35:46,230 --> 00:35:51,359
would this pass but if you didn't throw

00:35:48,480 --> 00:35:53,880
an error well and it was supposed to you

00:35:51,359 --> 00:35:55,289
would this fail so yeah there's nothing

00:35:53,880 --> 00:35:58,710
you're actually asserting for it's just

00:35:55,289 --> 00:36:00,210
in your logic in your code you're

00:35:58,710 --> 00:36:03,239
finding places where you're expecting

00:36:00,210 --> 00:36:06,749
particular behavior and there's a great

00:36:03,239 --> 00:36:08,369
huge number of assert helpers so you've

00:36:06,749 --> 00:36:10,079
got things like a certain field by ID

00:36:08,369 --> 00:36:11,789
and so that will make sure that there's

00:36:10,079 --> 00:36:13,829
a field on the page by passing it the ID

00:36:11,789 --> 00:36:15,749
it's a cert field by name there's a

00:36:13,829 --> 00:36:18,509
third option is checked as you know

00:36:15,749 --> 00:36:20,640
there's a myriad of assert helpers that

00:36:18,509 --> 00:36:22,829
I not going to go into heat but if

00:36:20,640 --> 00:36:24,630
you're interested and you you're going

00:36:22,829 --> 00:36:26,160
to do this sort of thing look at the

00:36:24,630 --> 00:36:28,259
base class and read the code and that's

00:36:26,160 --> 00:36:32,549
always with anything the best way to

00:36:28,259 --> 00:36:35,369
learn it and there's one other powerful

00:36:32,549 --> 00:36:38,069
feature which is X path is hands up

00:36:35,369 --> 00:36:40,650
who's familiar with it xpath ok it's

00:36:38,069 --> 00:36:43,799
basically an XML passing language it's

00:36:40,650 --> 00:36:47,099
kind of like jquery but kind of not yeah

00:36:43,799 --> 00:36:48,660
if you google xpath syntax and i think

00:36:47,099 --> 00:36:51,660
you can ask the IRC bot you'll get a

00:36:48,660 --> 00:36:53,640
link to it yeah it's it helps you with

00:36:51,660 --> 00:36:55,019
the kind of thing talking about for with

00:36:53,640 --> 00:37:00,420
specific markup that you're searching

00:36:55,019 --> 00:37:02,069
for but it's not it's not that intuitive

00:37:00,420 --> 00:37:04,740
how it works and if you're not for me

00:37:02,069 --> 00:37:07,230
with it in I'll look

00:37:04,740 --> 00:37:08,760
I find it painful so there's a lot of

00:37:07,230 --> 00:37:10,560
other helper functions you saw before in

00:37:08,760 --> 00:37:12,900
the tracker test there was Drupal create

00:37:10,560 --> 00:37:14,550
content types oh yes you could create an

00:37:12,900 --> 00:37:16,020
editor array you could log a user in as

00:37:14,550 --> 00:37:17,700
someone with administer content types

00:37:16,020 --> 00:37:19,590
you could go to add content type you can

00:37:17,700 --> 00:37:21,930
submit the form but why do that when you

00:37:19,590 --> 00:37:24,030
can use Drupal create no type or triple

00:37:21,930 --> 00:37:25,830
create no dribble create user there's a

00:37:24,030 --> 00:37:29,310
lot of these there's cron run this click

00:37:25,830 --> 00:37:31,290
link and Drupal get node by total title

00:37:29,310 --> 00:37:32,760
is probably the method I should have

00:37:31,290 --> 00:37:34,500
used in that test where I instead of

00:37:32,760 --> 00:37:36,930
going node load one could have just

00:37:34,500 --> 00:37:42,869
noted load the load of the node back

00:37:36,930 --> 00:37:44,550
that was titled miniature pony okay so

00:37:42,869 --> 00:37:49,530
we said before testing all of core is

00:37:44,550 --> 00:37:51,560
slow there must be a loose cable over

00:37:49,530 --> 00:37:54,270
here how do you actually run the tests

00:37:51,560 --> 00:37:56,220
look I would I were to advocate the test

00:37:54,270 --> 00:37:59,610
testing with automated tests cease fire

00:37:56,220 --> 00:38:00,960
quicker than doing it manually but it

00:37:59,610 --> 00:38:03,030
kind of depends on what you're doing in

00:38:00,960 --> 00:38:07,440
your test and if you have got stuff in

00:38:03,030 --> 00:38:08,880
your test where your for example God

00:38:07,440 --> 00:38:10,800
features involved in this features

00:38:08,880 --> 00:38:13,680
rebuilds that can add a fair bit of time

00:38:10,800 --> 00:38:15,390
to the test because as soon as the

00:38:13,680 --> 00:38:17,040
install occurs with each of your test

00:38:15,390 --> 00:38:18,690
methods a cron run fires and the

00:38:17,040 --> 00:38:20,369
chronolog fires that features rebuild

00:38:18,690 --> 00:38:22,560
and the features rebuild can take quite

00:38:20,369 --> 00:38:24,480
a while so yet being be mindful of that

00:38:22,560 --> 00:38:26,369
and if you've got things in cron the

00:38:24,480 --> 00:38:28,170
Gulf and fetch web services or you know

00:38:26,369 --> 00:38:30,090
update module you need to be careful

00:38:28,170 --> 00:38:32,190
because you know that's run at the very

00:38:30,090 --> 00:38:36,240
start of every test and if you can trim

00:38:32,190 --> 00:38:37,890
those down yep do so so to test it you

00:38:36,240 --> 00:38:40,410
need to enable the simple test module

00:38:37,890 --> 00:38:43,170
and this comes in call in Drupal 7 in

00:38:40,410 --> 00:38:48,420
triple six it was a contributor I'm just

00:38:43,170 --> 00:38:52,820
making sure to turned on yeah it's there

00:38:48,420 --> 00:38:55,770
if you might not have seen it before and

00:38:52,820 --> 00:39:03,290
then you head up to your configuration

00:38:55,770 --> 00:39:07,109
tab and you've got a testing tab and

00:39:03,290 --> 00:39:09,830
here's all the core tests and there's

00:39:07,109 --> 00:39:09,830
quite a lot of them and

00:39:11,680 --> 00:39:16,160
here's artists and they show up in the

00:39:14,270 --> 00:39:17,810
groups that we showed before and so you

00:39:16,160 --> 00:39:19,550
can click through the u.s. to do this or

00:39:17,810 --> 00:39:21,890
you can also used rush and the command

00:39:19,550 --> 00:39:24,050
is drush test that's run and you have to

00:39:21,890 --> 00:39:25,370
pass the minus L argument or you need to

00:39:24,050 --> 00:39:27,710
have that in your uh sure see so it

00:39:25,370 --> 00:39:31,700
knows what the actual URL of the site is

00:39:27,710 --> 00:39:33,320
because it is performing with the simple

00:39:31,700 --> 00:39:35,750
test browser navigating to and from

00:39:33,320 --> 00:39:38,810
sites it needs to know but if you've got

00:39:35,750 --> 00:39:42,470
your tests group you can just say drush

00:39:38,810 --> 00:39:44,300
test at around minus l example calm say

00:39:42,470 --> 00:39:47,240
stuff and it will run all the tests in

00:39:44,300 --> 00:39:50,390
that sweet and so there's a minus minus

00:39:47,240 --> 00:39:52,340
XML flag so you can integrate with you

00:39:50,390 --> 00:39:54,490
know continuous integration with your

00:39:52,340 --> 00:40:00,560
test results but yeah basically click it

00:39:54,490 --> 00:40:01,550
run it and let it go and like we want to

00:40:00,560 --> 00:40:03,770
have it how long you think it'll take

00:40:01,550 --> 00:40:05,690
you to do it manually probably a minute

00:40:03,770 --> 00:40:07,550
two minutes three minutes and it comes

00:40:05,690 --> 00:40:09,350
back pretty quick for a small set of

00:40:07,550 --> 00:40:11,180
functionality 'um we're testing from n

00:40:09,350 --> 00:40:13,760
to n here if you're doing it manually

00:40:11,180 --> 00:40:16,640
you would probably are what I need to do

00:40:13,760 --> 00:40:20,480
that step I'm skipping that step so yeah

00:40:16,640 --> 00:40:21,980
it's going to prove me wrong yeah if

00:40:20,480 --> 00:40:23,300
you're doing 50 tests especially yeah

00:40:21,980 --> 00:40:24,590
but if you're doing 50 tests it will

00:40:23,300 --> 00:40:26,740
take longer and as I said if you've got

00:40:24,590 --> 00:40:29,360
features it'll take even longer again

00:40:26,740 --> 00:40:31,540
and so I'll let that run and I'll come

00:40:29,360 --> 00:40:31,540
back

00:40:39,290 --> 00:40:43,160
these are some special cases that I

00:40:40,970 --> 00:40:45,410
think are worth notes these days to have

00:40:43,160 --> 00:40:47,300
image integration and getting those

00:40:45,410 --> 00:40:50,270
isn't obviously straightforward you know

00:40:47,300 --> 00:40:51,770
you would click on the Browse button on

00:40:50,270 --> 00:40:53,360
a form upload and you would attach an

00:40:51,770 --> 00:40:54,410
image and you would hit submit and you

00:40:53,360 --> 00:40:56,990
know the image gets sent from your

00:40:54,410 --> 00:40:59,900
computer but you can use that chunk of

00:40:56,990 --> 00:41:02,660
code there the simple test base class

00:40:59,900 --> 00:41:05,330
has a swag of test images and other

00:41:02,660 --> 00:41:06,740
files you can access and if anyone's use

00:41:05,330 --> 00:41:08,150
the vowel generate it's just that same

00:41:06,740 --> 00:41:11,930
little square image with the circles in

00:41:08,150 --> 00:41:14,180
it and yeah what you do is you get the

00:41:11,930 --> 00:41:16,070
image the code at the top and then you

00:41:14,180 --> 00:41:17,390
use drupal real path and you put that in

00:41:16,070 --> 00:41:20,960
your post variables and you send that

00:41:17,390 --> 00:41:23,240
through and the media module uses an f

00:41:20,960 --> 00:41:26,660
ID so you have to actually save that

00:41:23,240 --> 00:41:29,530
image first to get an F ID so you pass

00:41:26,660 --> 00:41:32,300
that to file save the actual image and

00:41:29,530 --> 00:41:34,640
you get an F ID back I just thought

00:41:32,300 --> 00:41:37,970
those were worth a special mention and

00:41:34,640 --> 00:41:40,010
things go wrong and look the debug

00:41:37,970 --> 00:41:42,560
function is your friend things like if

00:41:40,010 --> 00:41:43,850
you don't have access to a debugger as

00:41:42,560 --> 00:41:45,170
in you know look you're running on a

00:41:43,850 --> 00:41:47,750
virtual machine or you haven't got it

00:41:45,170 --> 00:41:50,570
set up the debug will let you out put

00:41:47,750 --> 00:41:54,080
things through your code you can't use

00:41:50,570 --> 00:41:56,140
things like DSM or DPR or KP are all the

00:41:54,080 --> 00:41:59,480
different flavors of chrome oh because

00:41:56,140 --> 00:42:01,490
yeah it's just it's it's not available

00:41:59,480 --> 00:42:04,640
in that environment so debuggers the go

00:42:01,490 --> 00:42:06,380
and look people will probably gasp at

00:42:04,640 --> 00:42:07,880
the third line but don't be afraid to go

00:42:06,380 --> 00:42:09,650
in if you're getting some random error

00:42:07,880 --> 00:42:10,790
about some module that's or some

00:42:09,650 --> 00:42:12,470
permission that's supposed to be there

00:42:10,790 --> 00:42:14,300
and it's not fair going into the line

00:42:12,470 --> 00:42:15,950
and codeine call that's causing that

00:42:14,300 --> 00:42:17,390
warning and put some code in there

00:42:15,950 --> 00:42:18,740
because you've got your side under

00:42:17,390 --> 00:42:20,030
version control you're just going to

00:42:18,740 --> 00:42:22,340
check that back out anyway you're not

00:42:20,030 --> 00:42:25,430
really hacking it you're just learning

00:42:22,340 --> 00:42:29,030
about it yeah and watchdog isn't

00:42:25,430 --> 00:42:32,030
available because it's every site spins

00:42:29,030 --> 00:42:35,170
up its own database and so watchdog is

00:42:32,030 --> 00:42:38,960
writing to his new database every time

00:42:35,170 --> 00:42:41,000
we've got a crush plugin called watchdog

00:42:38,960 --> 00:42:43,400
simple test you can get and put it in

00:42:41,000 --> 00:42:46,370
your drush rush folder and it gives you

00:42:43,400 --> 00:42:48,500
all of your drush watchdog commands just

00:42:46,370 --> 00:42:51,680
add an extra s to the end so drush

00:42:48,500 --> 00:42:53,090
watchdog show Drudge like it's drush WS

00:42:51,680 --> 00:42:57,140
rush w

00:42:53,090 --> 00:42:59,780
SS will look up the prefix that simple

00:42:57,140 --> 00:43:01,940
test is using and get you the values

00:42:59,780 --> 00:43:03,530
from that actual install now you need to

00:43:01,940 --> 00:43:06,320
make sure that DB log is a required

00:43:03,530 --> 00:43:08,570
module in your tests so that stuff is

00:43:06,320 --> 00:43:10,940
actually going into the DB log table but

00:43:08,570 --> 00:43:12,110
it is handy particularly with features

00:43:10,940 --> 00:43:15,050
and if you're wondering why something is

00:43:12,110 --> 00:43:18,710
taking so long drush WS s minus minus

00:43:15,050 --> 00:43:21,260
tail which works like tail does in the

00:43:18,710 --> 00:43:22,760
command line and minus minus full so you

00:43:21,260 --> 00:43:24,050
get the full outfit and you'll just see

00:43:22,760 --> 00:43:25,790
what it's actually doing so if your

00:43:24,050 --> 00:43:27,800
settings great in your head going well

00:43:25,790 --> 00:43:30,710
it's not doing anything you know going

00:43:27,800 --> 00:43:34,970
and use that and you can see rebuilding

00:43:30,710 --> 00:43:36,470
feature rebuilding feature really okay

00:43:34,970 --> 00:43:39,440
unit tests we haven't talked about their

00:43:36,470 --> 00:43:41,750
much but a unit test is like when X

00:43:39,440 --> 00:43:44,420
comes in Y goes out and so there's unit

00:43:41,750 --> 00:43:46,700
testing call for things like image style

00:43:44,420 --> 00:43:50,030
effects you know like if I passing an

00:43:46,700 --> 00:43:52,010
image of size 150 x 200 and I've got an

00:43:50,030 --> 00:43:53,300
effect it's got to resize it to 90 x 90

00:43:52,010 --> 00:43:55,790
I should get an image out the other side

00:43:53,300 --> 00:43:57,830
and these are things where you don't

00:43:55,790 --> 00:44:00,680
need the internal browser of simple

00:43:57,830 --> 00:44:03,080
tests the of the web test that you can

00:44:00,680 --> 00:44:05,750
navigate to pages and things that's just

00:44:03,080 --> 00:44:08,060
testing the functionality but there's no

00:44:05,750 --> 00:44:10,790
database there's no files you can't

00:44:08,060 --> 00:44:13,280
enable modules counties watchdog module

00:44:10,790 --> 00:44:17,570
implements any of the hooks there's no

00:44:13,280 --> 00:44:19,970
database you know but these are way

00:44:17,570 --> 00:44:23,720
faster and so if there is functionality

00:44:19,970 --> 00:44:25,340
that is atomic that is utility use it

00:44:23,720 --> 00:44:26,960
wherever possible but you need to take

00:44:25,340 --> 00:44:31,040
care of loading files and modules that

00:44:26,960 --> 00:44:34,100
you need and yeah you can fake enable

00:44:31,040 --> 00:44:35,120
modules and thanks to whoever I can't

00:44:34,100 --> 00:44:37,310
recall we all got this from but

00:44:35,120 --> 00:44:40,010
basically it's just hijacking the module

00:44:37,310 --> 00:44:43,460
this module to function to fake enable

00:44:40,010 --> 00:44:45,590
the module and there's a limited set of

00:44:43,460 --> 00:44:47,570
assert methods as well there's no assert

00:44:45,590 --> 00:44:51,890
field by ID because there's nothing to

00:44:47,570 --> 00:44:53,960
assert it against Drupal 8 has a new

00:44:51,890 --> 00:44:55,730
class called unit tests remastered if

00:44:53,960 --> 00:44:58,880
you're interested check out that that

00:44:55,730 --> 00:45:01,460
node but it adds a new class called

00:44:58,880 --> 00:45:03,380
Drupal unit test base and it is like a

00:45:01,460 --> 00:45:05,970
mock implementation of a lot of the

00:45:03,380 --> 00:45:09,500
Drupal functionality so there's more

00:45:05,970 --> 00:45:13,140
um you know mock module installation a

00:45:09,500 --> 00:45:17,340
lot of them are sort of pure empty

00:45:13,140 --> 00:45:19,170
implementations so it's obviously much

00:45:17,340 --> 00:45:21,000
faster than the web test space and so if

00:45:19,170 --> 00:45:22,590
you need some of the drupal isms that

00:45:21,000 --> 00:45:25,890
you would that your module is going to

00:45:22,590 --> 00:45:27,720
operate in but you don't need to

00:45:25,890 --> 00:45:30,630
navigate anywhere with drupal get and

00:45:27,720 --> 00:45:35,940
drip a post you should use the unitary

00:45:30,630 --> 00:45:39,210
master so I talked a little bit about

00:45:35,940 --> 00:45:41,190
what do we got 45 min CA I might skip

00:45:39,210 --> 00:45:43,320
over this if you maintain a contributor

00:45:41,190 --> 00:45:44,940
module you can enable this for

00:45:43,320 --> 00:45:47,369
contributor modules so that you have

00:45:44,940 --> 00:45:48,540
automated testing of your branches if

00:45:47,369 --> 00:45:50,640
you want to talk to me about that come

00:45:48,540 --> 00:45:52,830
see me after but you can also do the

00:45:50,640 --> 00:45:54,480
same thing in your issue cues so that

00:45:52,830 --> 00:45:59,580
when people put up a patch they can see

00:45:54,480 --> 00:46:03,540
straight away if it doesn't pass I have

00:45:59,580 --> 00:46:08,099
no 15 do I school I only see if I go

00:46:03,540 --> 00:46:10,380
back yeah so basically if you head to

00:46:08,099 --> 00:46:12,750
your module and you go to the version

00:46:10,380 --> 00:46:14,580
control tab sorry the automated testing

00:46:12,750 --> 00:46:16,710
tab you can see the results and this is

00:46:14,580 --> 00:46:19,530
an empty module there's no tests zero

00:46:16,710 --> 00:46:28,349
passes right but it's their feeder to

00:46:19,530 --> 00:46:30,510
use you can also head to the issues tab

00:46:28,349 --> 00:46:33,119
under the Edit tab and hit an able

00:46:30,510 --> 00:46:34,740
automated testing and so a time anyone

00:46:33,119 --> 00:46:37,530
uploads a patch to your module and they

00:46:34,740 --> 00:46:41,150
choose needs review the test pople golf

00:46:37,530 --> 00:46:42,930
and test that and you know it saves

00:46:41,150 --> 00:46:45,060
people's upload something won't apply

00:46:42,930 --> 00:46:47,730
anymore it's got a fatal in it and you

00:46:45,060 --> 00:46:49,349
know it saves you know if it doesn't

00:46:47,730 --> 00:46:50,730
pass the tests then you know you can

00:46:49,349 --> 00:46:55,530
probably delay looking at it a little

00:46:50,730 --> 00:46:57,770
bit longer ok this is the plug for

00:46:55,530 --> 00:47:00,900
tomorrow getting started with cortés um

00:46:57,770 --> 00:47:03,990
look who's uploaded a patch before the

00:47:00,900 --> 00:47:06,930
drupal.org that fix the bug but you know

00:47:03,990 --> 00:47:08,790
it's been told Lord needs tests before

00:47:06,930 --> 00:47:12,370
it goes in yeah

00:47:08,790 --> 00:47:14,770
so I've been that situation before my

00:47:12,370 --> 00:47:16,870
first call patch was just before seven

00:47:14,770 --> 00:47:18,670
point o came out to fix the problem with

00:47:16,870 --> 00:47:21,160
the theme preprocessing what the theme

00:47:18,670 --> 00:47:22,390
suggestions weren't working and I went

00:47:21,160 --> 00:47:24,370
right through core and i found this

00:47:22,390 --> 00:47:27,040
issue oh great I've solved something I

00:47:24,370 --> 00:47:28,750
put it up and got knocked back needs

00:47:27,040 --> 00:47:31,450
tests and so that was my first exposure

00:47:28,750 --> 00:47:33,880
to writing test for call and to be

00:47:31,450 --> 00:47:36,880
honest as with anything in Drupal the

00:47:33,880 --> 00:47:38,680
more you read the more you learn you see

00:47:36,880 --> 00:47:40,090
example code and you dig into it and it

00:47:38,680 --> 00:47:42,910
ended you know that's where the light

00:47:40,090 --> 00:47:44,770
bulbs go on so if you want to get

00:47:42,910 --> 00:47:46,480
started check out the needs tests tag

00:47:44,770 --> 00:47:48,250
and there is a tag specifically for

00:47:46,480 --> 00:47:50,920
issues that are fixed but they need a

00:47:48,250 --> 00:47:52,360
test and if you write a test for it you

00:47:50,920 --> 00:47:56,650
know upload two versions of the patch

00:47:52,360 --> 00:47:58,840
one with the test call it dot phao patch

00:47:56,650 --> 00:48:00,970
and one with the pup with the test and a

00:47:58,840 --> 00:48:02,770
fixed court past I'll patch and I've

00:48:00,970 --> 00:48:04,240
load them in that issue put the put put

00:48:02,770 --> 00:48:06,700
them in that order put the file one in

00:48:04,240 --> 00:48:08,380
first for the past one in next the test

00:48:06,700 --> 00:48:10,090
spot will test both of them the first

00:48:08,380 --> 00:48:11,980
want to come back read because your new

00:48:10,090 --> 00:48:13,330
test verifies the bug and the second one

00:48:11,980 --> 00:48:18,490
will come back green because the test

00:48:13,330 --> 00:48:19,720
plus the fix it's sorted find the needs

00:48:18,490 --> 00:48:21,280
work issue there's a lot of people

00:48:19,720 --> 00:48:24,250
who've put a lot of time into patches

00:48:21,280 --> 00:48:25,900
and they get towards the end and you

00:48:24,250 --> 00:48:28,150
know this is one little test that they

00:48:25,900 --> 00:48:30,370
can't get to pass and i'm sure those

00:48:28,150 --> 00:48:32,530
people would love someone who wants to

00:48:30,370 --> 00:48:34,180
get started to come in and just find

00:48:32,530 --> 00:48:35,950
what is causing it you know it's been a

00:48:34,180 --> 00:48:37,450
time debugging you and come on and you

00:48:35,950 --> 00:48:39,820
come along and you'll be the hero your

00:48:37,450 --> 00:48:41,200
people love you so come along to the

00:48:39,820 --> 00:48:45,700
sprint down study if you like this kind

00:48:41,200 --> 00:48:47,590
of stuff and there's yeah a specific

00:48:45,700 --> 00:48:50,440
task that the core mentoring process has

00:48:47,590 --> 00:48:53,500
called needs tests and the people

00:48:50,440 --> 00:48:55,960
involved Jess and Andrea and Kim they

00:48:53,500 --> 00:48:57,220
actually go through and you know create

00:48:55,960 --> 00:48:59,980
these tasks for people who want to learn

00:48:57,220 --> 00:49:01,390
call who want to write tests and you

00:48:59,980 --> 00:49:08,590
know they can get you started straight

00:49:01,390 --> 00:49:11,650
away now the next level is continuous

00:49:08,590 --> 00:49:14,380
integration and sorry me I didn't clear

00:49:11,650 --> 00:49:16,480
your name but yeah what we do at

00:49:14,380 --> 00:49:17,980
previousnext we've started thanks to the

00:49:16,480 --> 00:49:21,520
nique and Nick down the front here and

00:49:17,980 --> 00:49:22,650
meet up the back there is when we push

00:49:21,520 --> 00:49:27,490
to the master branch

00:49:22,650 --> 00:49:29,289
jenkins fires up a test run against a

00:49:27,490 --> 00:49:31,329
separate install we have specifically

00:49:29,289 --> 00:49:34,059
for testing runs the test suite and

00:49:31,329 --> 00:49:36,099
comes back green if it passes or good

00:49:34,059 --> 00:49:39,609
comes back ready everyone gets an email

00:49:36,099 --> 00:49:44,319
you broke it you know and then Kim rings

00:49:39,609 --> 00:49:45,759
us up and says and yeah look there's

00:49:44,319 --> 00:49:47,589
various ways to do that but drush test

00:49:45,759 --> 00:49:49,210
run is great and so if look I don't

00:49:47,589 --> 00:49:51,430
pretend to know anything about this if

00:49:49,210 --> 00:49:54,339
you do want any more Boris had a session

00:49:51,430 --> 00:49:58,299
yesterday about it and Kim make it

00:49:54,339 --> 00:50:03,819
ethnic and me better provide some more

00:49:58,299 --> 00:50:07,589
information so yeah that's it for that

00:50:03,819 --> 00:50:07,589
i'll just go back to the test results

00:50:14,170 --> 00:50:22,570
anyone see I think the problem is the

00:50:19,650 --> 00:50:24,850
the screen resolution doesn't fit out of

00:50:22,570 --> 00:50:26,820
the projector yes so you can actually go

00:50:24,850 --> 00:50:31,240
outside the visible area there it is

00:50:26,820 --> 00:50:32,680
test results it's green and if you work

00:50:31,240 --> 00:50:35,500
in an office with people who run these

00:50:32,680 --> 00:50:38,260
tests you will mix it up and down the

00:50:35,500 --> 00:50:42,070
front it's great you know it's kind of

00:50:38,260 --> 00:50:43,870
like it and so this is what you get

00:50:42,070 --> 00:50:45,250
right these are all of our tests we

00:50:43,870 --> 00:50:47,590
enable the modules we created the

00:50:45,250 --> 00:50:49,060
permissions we created a user and what

00:50:47,590 --> 00:50:51,400
did that look like well you can actually

00:50:49,060 --> 00:50:53,200
click on it and it will show you it's

00:50:51,400 --> 00:50:55,360
got and this isn't just a static page

00:50:53,200 --> 00:50:58,350
this is the actual marker and so if

00:50:55,360 --> 00:51:10,900
you're expecting a particular thing but

00:50:58,350 --> 00:51:27,580
our overlay you passed it I'm gonna have

00:51:10,900 --> 00:51:29,470
to run them again yeah yes and that's so

00:51:27,580 --> 00:51:31,600
there is actually a tag for core issues

00:51:29,470 --> 00:51:34,060
called needs manual tests and that's the

00:51:31,600 --> 00:51:35,560
JavaScript ones and yeah I'll come back

00:51:34,060 --> 00:51:37,930
when that's finished I'm really annoyed

00:51:35,560 --> 00:51:40,390
that because so some more information

00:51:37,930 --> 00:51:41,980
that whole install profile and all those

00:51:40,390 --> 00:51:43,690
tests you can get on github I've still

00:51:41,980 --> 00:51:45,040
gotta push up those fixes that I just

00:51:43,690 --> 00:51:49,180
made then the stuff that's up there now

00:51:45,040 --> 00:51:50,560
works ok I'll fix it out thanks man I'm

00:51:49,180 --> 00:51:52,720
going to run a ball after this session

00:51:50,560 --> 00:51:56,170
if people to talk about in more detail

00:51:52,720 --> 00:51:57,820
but also with the focus on core and if

00:51:56,170 --> 00:51:59,200
you need help getting the stuff set up

00:51:57,820 --> 00:52:04,050
for tomorrow and you want to sort of hit

00:51:59,200 --> 00:52:06,310
the ground running I'm happy to help and

00:52:04,050 --> 00:52:08,950
just off the back did a similar

00:52:06,310 --> 00:52:11,110
presentation at the Midwest developer

00:52:08,950 --> 00:52:14,880
summit about this he was purely focused

00:52:11,110 --> 00:52:17,620
on call and it is good okay yeah and

00:52:14,880 --> 00:52:19,480
it's actually a lot more detailed than

00:52:17,620 --> 00:52:23,370
mine and I didn't see it till the end so

00:52:19,480 --> 00:52:23,370
I didn't plagiarize any little progress

00:52:23,400 --> 00:52:30,539
so hey that was quick 42 seconds that's

00:52:29,369 --> 00:52:31,890
the answer to that question how long

00:52:30,539 --> 00:52:38,099
would it take you to do manually I'd say

00:52:31,890 --> 00:52:39,990
a lot more I was in RC I could ask our

00:52:38,099 --> 00:52:44,309
bot we have a bot and he will answer

00:52:39,990 --> 00:52:46,260
that question so for example you can

00:52:44,309 --> 00:52:49,440
click on the bose message and without

00:52:46,260 --> 00:52:52,079
overlay it opens in a new tab and you

00:52:49,440 --> 00:52:54,210
can actually see at the top a get

00:52:52,079 --> 00:52:55,559
request to that and that's where we

00:52:54,210 --> 00:52:57,029
ended up and this is what the markup

00:52:55,559 --> 00:53:00,900
look like as i said this is the full

00:52:57,029 --> 00:53:02,099
markup you can previously the next

00:53:00,900 --> 00:53:05,910
through it and you can see what was

00:53:02,099 --> 00:53:11,970
submitted so there's the password for

00:53:05,910 --> 00:53:13,680
user better flickr her and yeah there's

00:53:11,970 --> 00:53:14,760
a check out complete you can see the

00:53:13,680 --> 00:53:20,640
credit card number that we talked about

00:53:14,760 --> 00:53:30,650
before and yeah it's kind of it as any

00:53:20,640 --> 00:53:30,650
questions hi yep

00:53:51,930 --> 00:53:57,160
yeah this is yeah I'll just repeat the

00:53:55,180 --> 00:53:59,109
question the question was what happens

00:53:57,160 --> 00:54:02,260
if you need to run tests in the context

00:53:59,109 --> 00:54:05,440
of a particular site with live content

00:54:02,260 --> 00:54:09,460
and users security yeah it is difficult

00:54:05,440 --> 00:54:11,109
question you're you noticed in the inner

00:54:09,460 --> 00:54:13,300
test that we did before we we created

00:54:11,109 --> 00:54:16,420
the note you know we actually went to

00:54:13,300 --> 00:54:18,160
the provisioning I guess the environment

00:54:16,420 --> 00:54:20,530
with the content that we need there is

00:54:18,160 --> 00:54:23,109
other approaches and I haven't talked on

00:54:20,530 --> 00:54:24,550
them here there's I said Hoople is that

00:54:23,109 --> 00:54:27,430
what it's called that yeah there's a

00:54:24,550 --> 00:54:29,380
there's a work that I think it was Mars

00:54:27,430 --> 00:54:31,720
being called opal which I think in the

00:54:29,380 --> 00:54:34,750
context of that there is upgrade tests

00:54:31,720 --> 00:54:36,880
in call which actually use a dump script

00:54:34,750 --> 00:54:39,190
to dump a database and the first step is

00:54:36,880 --> 00:54:42,510
to install that database but I'm not

00:54:39,190 --> 00:54:45,240
sure how wise it would be to use that

00:54:42,510 --> 00:54:48,760
because it's you gotta you know the tile

00:54:45,240 --> 00:54:53,109
part of me you've got to have a tars

00:54:48,760 --> 00:54:55,329
gzip of the database dump that can be

00:54:53,109 --> 00:54:59,740
loaded by the test before the tests even

00:54:55,329 --> 00:55:02,200
start you know and so if possible you

00:54:59,740 --> 00:55:03,880
should try to I mean when you test

00:55:02,200 --> 00:55:05,920
something locally in your local

00:55:03,880 --> 00:55:07,720
environment you would only create the

00:55:05,920 --> 00:55:10,050
node that you would test with you know

00:55:07,720 --> 00:55:12,339
everyone's got a lorem ipsum generator

00:55:10,050 --> 00:55:14,770
you know and you actually generate dummy

00:55:12,339 --> 00:55:17,500
users and dummy content in general yeah

00:55:14,770 --> 00:55:19,510
yeah so it's kind of that sort of stuff

00:55:17,500 --> 00:55:23,280
you have to do in your test before in

00:55:19,510 --> 00:55:23,280
your setup method or or in similar but

00:55:27,900 --> 00:55:36,400
yeah yeah you saying you want to test

00:55:34,569 --> 00:55:39,099
that sort of stuff yeah well you could

00:55:36,400 --> 00:55:41,109
you could do that because yeah you just

00:55:39,099 --> 00:55:42,789
have to create a dummy user first and

00:55:41,109 --> 00:55:43,960
then you know submit the form values and

00:55:42,789 --> 00:55:45,880
make sure you enter that we were you

00:55:43,960 --> 00:55:47,710
expecting and actually if you saw in

00:55:45,880 --> 00:55:49,839
that that's actually what it does with

00:55:47,710 --> 00:55:52,029
that this Drupal logging so I didn't

00:55:49,839 --> 00:55:53,980
talk about this trip log in was in the

00:55:52,029 --> 00:55:55,510
code but this triple login is actually

00:55:53,980 --> 00:55:57,430
just to use Hilary method that actually

00:55:55,510 --> 00:55:59,140
does what you just said it goes and logs

00:55:57,430 --> 00:56:06,700
the person in and if you have a look in

00:55:59,140 --> 00:56:10,359
these where I logged in as the admin

00:56:06,700 --> 00:56:12,250
user it actually goes and does that so

00:56:10,359 --> 00:56:14,049
if that was in the context of your

00:56:12,250 --> 00:56:15,670
install profile that enabled some

00:56:14,049 --> 00:56:19,240
particular module that did a redirect

00:56:15,670 --> 00:56:21,190
after logging you wouldn't end up at say

00:56:19,240 --> 00:56:24,309
stuff user to you know to me you would

00:56:21,190 --> 00:56:25,510
actually end up where you're supposed to

00:56:24,309 --> 00:56:27,400
end up and you could assert that you've

00:56:25,510 --> 00:56:29,200
got the 301 and that the message that

00:56:27,400 --> 00:56:31,630
you expecting with it so but yeah it is

00:56:29,200 --> 00:56:34,690
it is like a question particularly in

00:56:31,630 --> 00:56:37,559
the context of nodes and stuff sorry

00:56:34,690 --> 00:56:37,559
just behind you

00:57:25,070 --> 00:57:31,140
so just to repeat the answer for the

00:57:27,240 --> 00:57:31,920
tape jess was saying then that if you're

00:57:31,140 --> 00:57:33,060
looking for that sort of thing you

00:57:31,920 --> 00:57:36,030
probably want to look at something else

00:57:33,060 --> 00:57:37,710
this is more kind of it you know it's

00:57:36,030 --> 00:57:39,570
it's not unit testing but for a better

00:57:37,710 --> 00:57:41,670
sense of a word like testing the

00:57:39,570 --> 00:57:51,900
workflow in a fixed environment is that

00:57:41,670 --> 00:57:53,520
kind of paraphrasing yep sorry look I've

00:57:51,900 --> 00:57:57,230
been plugging in all through lunch I was

00:57:53,520 --> 00:57:57,230
very happy with that session on that

00:57:58,190 --> 00:58:01,190
yeah

00:58:13,910 --> 00:58:31,680
that if there's an error it'll have you

00:58:27,870 --> 00:58:33,480
got much time left we know two minutes

00:58:31,680 --> 00:58:35,520
well if you're not talking after but if

00:58:33,480 --> 00:58:37,920
we mock that test so failed so we check

00:58:35,520 --> 00:58:40,740
for twenty nine dollars or something you

00:58:37,920 --> 00:58:42,600
still get one of these even if it fails

00:58:40,740 --> 00:58:44,670
you still get this and you know if

00:58:42,600 --> 00:58:46,350
there's an exception or a warning it'll

00:58:44,670 --> 00:58:48,660
fail and you'll see the Drupal set

00:58:46,350 --> 00:58:52,350
message of you know undefined indexed

00:58:48,660 --> 00:58:54,510
through in line 74 of you know some file

00:58:52,350 --> 00:58:56,160
like if an error occurs in the test for

00:58:54,510 --> 00:58:58,770
a PHP warning exception a fatal error

00:58:56,160 --> 00:59:01,410
it'll fail and the Green Green Green

00:58:58,770 --> 00:59:02,700
Green Green that we had before will

00:59:01,410 --> 00:59:04,530
actually be green red green red green

00:59:02,700 --> 00:59:07,740
you know and you have a big red line and

00:59:04,530 --> 00:59:09,750
it'll say you know roll your order

00:59:07,740 --> 00:59:11,280
number one found Emma being red and

00:59:09,750 --> 00:59:13,620
you'll be able to check on that the most

00:59:11,280 --> 00:59:16,230
message and children so actually I think

00:59:13,620 --> 00:59:18,150
it's better than a screenshot but yeah I

00:59:16,230 --> 00:59:20,700
mean one thing this doesn't test is the

00:59:18,150 --> 00:59:23,910
visual aspects and that's often a large

00:59:20,700 --> 00:59:25,860
part of what we do you know making sure

00:59:23,910 --> 00:59:27,660
that the buttons lineup and that you

00:59:25,860 --> 00:59:29,550
know the JavaScript does what it does so

00:59:27,660 --> 00:59:40,080
you this isn't the answer for everything

00:59:29,550 --> 00:59:41,700
but yeah yep we've I'll talk to you

00:59:40,080 --> 00:59:44,010
later but yeah we've there is this thing

00:59:41,700 --> 00:59:45,810
that stuff we guys did we did together

00:59:44,010 --> 00:59:52,890
like the end to end testing of all that

00:59:45,810 --> 00:59:55,460
function ya know yeah which is more of a

00:59:52,890 --> 00:59:55,460
JavaScript

00:59:56,420 --> 01:00:19,740
yep basically is so like you're waiting

01:00:18,390 --> 01:00:36,570
for the Dom to load so the question was

01:00:19,740 --> 01:00:46,800
with selenium you have to wait getting

01:00:36,570 --> 01:00:48,960
files innocent timing um it's based on

01:00:46,800 --> 01:00:51,540
curl correct me if I'm wrong Susan curl

01:00:48,960 --> 01:00:52,800
so it's actually doing a performing a

01:00:51,540 --> 01:00:54,030
request that's why the same for if you

01:00:52,800 --> 01:00:56,280
run it through drush you've got to have

01:00:54,030 --> 01:00:58,560
you know you've got a pass at the URL

01:00:56,280 --> 01:00:59,670
that you testing against then Nick down

01:00:58,560 --> 01:01:02,400
the front of the test that you know if

01:00:59,670 --> 01:01:03,480
you've got HT orth running you know

01:01:02,400 --> 01:01:13,560
you've got to configure it there is

01:01:03,480 --> 01:01:15,480
actually as settings tab no no if you're

01:01:13,560 --> 01:01:17,940
getting a timeout issue it'll be a time

01:01:15,480 --> 01:01:20,520
at PHP max execution time tom at issue

01:01:17,940 --> 01:01:22,770
um yeah you can you can pass HT

01:01:20,520 --> 01:01:25,500
authentication stuff there um you know

01:01:22,770 --> 01:01:27,420
if your if your server is behind HTTP

01:01:25,500 --> 01:01:30,000
authentication this simple test is

01:01:27,420 --> 01:01:32,910
outside using curl to make the requests

01:01:30,000 --> 01:01:34,590
and so if it can't I mean this similar

01:01:32,910 --> 01:01:37,370
test is a Drupal is emits you know we

01:01:34,590 --> 01:01:46,730
kind of we still maintain a lot of this

01:01:37,370 --> 01:01:46,730
now don't we yeah yeah

01:01:53,329 --> 01:02:10,530
yeah yeah I mean there's what more than

01:02:00,650 --> 01:02:13,200
25,000 tests there so if there are

01:02:10,530 --> 01:02:15,480
better solutions and what they said that

01:02:13,200 --> 01:02:18,210
is that we we're currently maintaining

01:02:15,480 --> 01:02:19,289
this just for Drupal but to move

01:02:18,210 --> 01:02:22,079
something else is a big undertaking

01:02:19,289 --> 01:02:24,450
there's two and a half thousand test

01:02:22,079 --> 01:02:29,309
methods and fifty thousand asserts so

01:02:24,450 --> 01:02:31,460
yeah that's a that's a huge task all

01:02:29,309 --> 01:02:31,460
right

01:02:38,220 --> 01:02:40,280

YouTube URL: https://www.youtube.com/watch?v=fk17s1V6ofw


