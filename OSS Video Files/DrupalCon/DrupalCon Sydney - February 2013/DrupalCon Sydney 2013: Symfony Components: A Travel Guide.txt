Title: DrupalCon Sydney 2013: Symfony Components: A Travel Guide
Publication date: 2013-03-29
Playlist: DrupalCon Sydney - February 2013
Description: 
	The introduction of Symfony Components into Drupal 8 is a much talked about feature. But what are these libraries and how will they benefit those who work with custom modules? We will explore Symfony Components with an introduction and then a detailed look at the benefits of these clean, decoupled goodies.

We will see:

an introduction to Symfony and it's components
how Drupal 8 is using Symfony Components
why decoupling and sharing is a win for everyone
how additional components can be downloaded into your project via Composer
By the end of this session we will have covered an introduction to Symfony Components, seen how they can benefit developers working with Drupal 8 and investigated the code distribution systems which drive them. With their quality, portability and diversity -- Symfony Components offer an invaluable new resource to the Drupal community. This is your Symfony Components Travel Guide.

Pre-Requisites

Familiarity with key principles of Drupal custom modules. A medium level of knowledge of object oriented coding with PHP.

Audience

The target audience is Drupal 7 developers who want to take advantage of, or contribute to Symfony Components.
Captions: 
	00:00:00,000 --> 00:00:04,770
well okay you should turn out here

00:00:01,879 --> 00:00:06,140
that's fantastic look I really

00:00:04,770 --> 00:00:08,820
appreciate everybody turning up

00:00:06,140 --> 00:00:10,170
suffering and considering all the pretty

00:00:08,820 --> 00:00:13,559
amazing sessions that seem to be going

00:00:10,170 --> 00:00:15,719
on this is the simply components a

00:00:13,559 --> 00:00:17,810
travel guide session so if your

00:00:15,719 --> 00:00:19,680
misplaced this is the time to escape

00:00:17,810 --> 00:00:22,500
otherwise I think the doors will be

00:00:19,680 --> 00:00:27,480
locked in a few moments so you're stuck

00:00:22,500 --> 00:00:28,980
with me my name's peers warmers I'm not

00:00:27,480 --> 00:00:31,980
a dribble developer so you probably

00:00:28,980 --> 00:00:33,360
don't know me and I'm really excited to

00:00:31,980 --> 00:00:35,550
be here to meet everybody maybe after

00:00:33,360 --> 00:00:38,340
the sessions are over but i've been

00:00:35,550 --> 00:00:40,860
working in PHP for a long time now more

00:00:38,340 --> 00:00:42,270
than 10 years and have also been working

00:00:40,860 --> 00:00:44,629
with simply write back from when it was

00:00:42,270 --> 00:00:46,739
in its early alpha stages and

00:00:44,629 --> 00:00:50,340
predominantly now I work on symphony

00:00:46,739 --> 00:00:52,860
based projects so before I get started

00:00:50,340 --> 00:00:54,300
on to the real core of the topic today I

00:00:52,860 --> 00:00:57,239
thought it probably better to give a

00:00:54,300 --> 00:01:00,000
little bit of context as to why we're

00:00:57,239 --> 00:01:01,440
probably all here and interesting how

00:01:00,000 --> 00:01:04,140
symphony and Drupal are getting together

00:01:01,440 --> 00:01:07,470
so to take a little bit of a step back

00:01:04,140 --> 00:01:11,070
in time that's 1996 which is pretty

00:01:07,470 --> 00:01:13,020
awesome and when PHP gets his first

00:01:11,070 --> 00:01:15,240
release and it's great the community

00:01:13,020 --> 00:01:17,520
loves it for the first time we can bed

00:01:15,240 --> 00:01:20,700
simple script into our HTML documents

00:01:17,520 --> 00:01:23,759
and that's pretty exciting stuff but

00:01:20,700 --> 00:01:27,540
it's a powerful tool as we know PHP is

00:01:23,759 --> 00:01:30,810
and it also gave us a few problems and

00:01:27,540 --> 00:01:35,100
we were bad we did naughty things that

00:01:30,810 --> 00:01:37,890
PHP and I'm probably no lone saying that

00:01:35,100 --> 00:01:41,189
I have been guilty for things like this

00:01:37,890 --> 00:01:45,869
back in the day and yeah not

00:01:41,189 --> 00:01:48,030
particularly pretty a PHP community grew

00:01:45,869 --> 00:01:50,939
really strongly and there was a strong

00:01:48,030 --> 00:01:53,850
open-source ethos that develop in the

00:01:50,939 --> 00:01:55,680
community and while there are a lot of

00:01:53,850 --> 00:01:57,719
projects blossoming all over the place

00:01:55,680 --> 00:02:01,740
and a lot of really cool applications

00:01:57,719 --> 00:02:03,960
like drupal and PHP BB these communities

00:02:01,740 --> 00:02:05,880
were grabbing coded around the place and

00:02:03,960 --> 00:02:08,509
so are the developers but not to pull

00:02:05,880 --> 00:02:13,160
any punches by my sort of perspective

00:02:08,509 --> 00:02:16,070
sharing in PHP really was about copying

00:02:13,160 --> 00:02:18,590
sting and that's not the greatest way to

00:02:16,070 --> 00:02:20,330
share code now there are things to help

00:02:18,590 --> 00:02:25,010
us get it man making a little bit

00:02:20,330 --> 00:02:26,180
prettier I know but the pair I don't

00:02:25,010 --> 00:02:29,900
know how many people here have actually

00:02:26,180 --> 00:02:31,430
suffer pair channel right so it's a good

00:02:29,900 --> 00:02:33,380
example for a community that's really

00:02:31,430 --> 00:02:35,420
heavily focused on open source and

00:02:33,380 --> 00:02:37,640
sharing coded the fact that one of the

00:02:35,420 --> 00:02:39,890
predominant sharing mechanisms isn't

00:02:37,640 --> 00:02:42,620
really used by many people at all and

00:02:39,890 --> 00:02:45,410
that's a big problem sober my thinking

00:02:42,620 --> 00:02:49,400
here really is facing a few problems and

00:02:45,410 --> 00:02:52,160
it's not a great way forward but in 2009

00:02:49,400 --> 00:02:54,770
something changed now PHP had a whole of

00:02:52,160 --> 00:02:56,720
object-oriented support already but it

00:02:54,770 --> 00:02:58,490
was getting pretty savvy in the way it

00:02:56,720 --> 00:03:00,880
was delivering speeches to us and there

00:02:58,490 --> 00:03:04,730
are a few features to live in the PHP

00:03:00,880 --> 00:03:06,140
5.3 release well a couple that we'll be

00:03:04,730 --> 00:03:09,470
talking about today or one in particular

00:03:06,140 --> 00:03:11,420
is namespaces which really presented a

00:03:09,470 --> 00:03:14,150
few good opportunities for the PHP

00:03:11,420 --> 00:03:16,280
community to clean its act up a little

00:03:14,150 --> 00:03:19,370
bit and get serious about sharing code

00:03:16,280 --> 00:03:22,280
and writing clean code and shortly after

00:03:19,370 --> 00:03:24,350
PHP 5.3 was a little rivers released the

00:03:22,280 --> 00:03:26,150
framework interoperability group put

00:03:24,350 --> 00:03:29,420
together a couple of recommendations and

00:03:26,150 --> 00:03:32,390
they were the PSR 0 1 2 and 3 is

00:03:29,420 --> 00:03:34,850
everybody heard of these as it is

00:03:32,390 --> 00:03:36,980
anybody working sort of towards those

00:03:34,850 --> 00:03:38,180
stairs that's fantastic look it's

00:03:36,980 --> 00:03:39,890
probably worthwhile then I'm glad

00:03:38,180 --> 00:03:41,209
there's not many people that really have

00:03:39,890 --> 00:03:42,830
arm have much to do it so I'll go

00:03:41,209 --> 00:03:44,930
through a couple of slides just to give

00:03:42,830 --> 00:03:47,720
you a very quick run through what if it

00:03:44,930 --> 00:03:49,880
was all about so Pierce r0 came forward

00:03:47,720 --> 00:03:52,610
and made recommendations about how we

00:03:49,880 --> 00:03:56,870
named classes and how we use namespaces

00:03:52,610 --> 00:03:58,730
and then in turn make sure that we put

00:03:56,870 --> 00:04:01,700
those classes in a directory structure

00:03:58,730 --> 00:04:03,380
which is succinct with the class name

00:04:01,700 --> 00:04:05,540
and namespace so I have nothing too

00:04:03,380 --> 00:04:07,060
exciting there but it's a good thing to

00:04:05,540 --> 00:04:11,030
do when you're trying to keep code clean

00:04:07,060 --> 00:04:12,500
the PSR Zhu Tam one was about getting a

00:04:11,030 --> 00:04:14,660
little bit more standardized than the

00:04:12,500 --> 00:04:17,270
way we named things so we started

00:04:14,660 --> 00:04:19,669
getting directions how on how classes

00:04:17,270 --> 00:04:23,060
should be named how constants should be

00:04:19,669 --> 00:04:24,830
named how property should be named and

00:04:23,060 --> 00:04:26,960
also how functions should be named

00:04:24,830 --> 00:04:28,880
nothing special there either but it was

00:04:26,960 --> 00:04:31,400
really big to see the community actually

00:04:28,880 --> 00:04:36,889
working towards a single target and that

00:04:31,400 --> 00:04:39,020
was conforming code this r2 got a little

00:04:36,889 --> 00:04:41,720
bit more extended on that basic premise

00:04:39,020 --> 00:04:43,729
and told us that we really must be using

00:04:41,720 --> 00:04:46,130
namespaces from now on this is important

00:04:43,729 --> 00:04:48,620
stuff and we really need to be using

00:04:46,130 --> 00:04:52,039
used statements to declare what classes

00:04:48,620 --> 00:04:53,599
rely on we're told a little bit more

00:04:52,039 --> 00:04:55,789
about how it should in data and end our

00:04:53,599 --> 00:05:02,599
braces that's the most important thing

00:04:55,789 --> 00:05:04,669
encoding of course I'm a bit of an

00:05:02,599 --> 00:05:05,960
obsessive-compulsive so things like that

00:05:04,669 --> 00:05:08,240
really disturbed me when I'm writing

00:05:05,960 --> 00:05:10,280
code and over the years I kind of

00:05:08,240 --> 00:05:11,509
switched between different styles and

00:05:10,280 --> 00:05:14,270
I'm just glad someone's telling me how

00:05:11,509 --> 00:05:17,330
to do it now so it actually makes sense

00:05:14,270 --> 00:05:19,099
to me we also had to declare how the

00:05:17,330 --> 00:05:21,650
visibility worked for our methods and

00:05:19,099 --> 00:05:25,159
properties in classes another good

00:05:21,650 --> 00:05:26,720
cleaning tip there and so things were

00:05:25,159 --> 00:05:28,639
getting pretty organized in the PHP

00:05:26,720 --> 00:05:30,080
community ok I'll leave it there for a

00:05:28,639 --> 00:05:32,479
second and I'll jump onto one of the

00:05:30,080 --> 00:05:35,360
main topics today and that is it's what

00:05:32,479 --> 00:05:37,759
is symphony so symphony is a little bit

00:05:35,360 --> 00:05:40,430
hard to describe in some ways I think

00:05:37,759 --> 00:05:42,590
particularly because it started like a

00:05:40,430 --> 00:05:47,539
reg Regular PHP framework back in the

00:05:42,590 --> 00:05:49,550
day so simply version one was like many

00:05:47,539 --> 00:05:53,000
frameworks out there a big blob of code

00:05:49,550 --> 00:05:54,289
that's SAT there and when version 2 came

00:05:53,000 --> 00:05:57,610
along it got a little bit more

00:05:54,289 --> 00:06:00,050
complicated in some way so symphony is

00:05:57,610 --> 00:06:02,479
these things so first of all it's a

00:06:00,050 --> 00:06:06,740
collection of object oriented PHP 5.3 of

00:06:02,479 --> 00:06:10,940
course classes they all conform to the

00:06:06,740 --> 00:06:12,680
PSR recommendations put forward and the

00:06:10,940 --> 00:06:15,169
classes are all grouped into components

00:06:12,680 --> 00:06:17,270
so this is kind of interesting so the

00:06:15,169 --> 00:06:20,060
components themselves are just simply

00:06:17,270 --> 00:06:21,919
libraries that are organized in a way

00:06:20,060 --> 00:06:26,389
where they reduced into their core

00:06:21,919 --> 00:06:28,669
functions so PHP so symphony framework

00:06:26,389 --> 00:06:31,580
how does this differ so simply framework

00:06:28,669 --> 00:06:34,219
is really just these components put

00:06:31,580 --> 00:06:36,339
together into a context so it's an

00:06:34,219 --> 00:06:38,690
implementation of symphony components

00:06:36,339 --> 00:06:40,009
and this implies something quite

00:06:38,690 --> 00:06:42,559
interesting

00:06:40,009 --> 00:06:44,990
and I'll refer to a quote here which i

00:06:42,559 --> 00:06:46,430
think is pretty concise and illustrates

00:06:44,990 --> 00:06:48,319
things really well so symphony is

00:06:46,430 --> 00:06:51,469
decoupled components that are put

00:06:48,319 --> 00:06:53,960
together in a context to solve common

00:06:51,469 --> 00:06:56,539
web problems and that's exactly what's

00:06:53,960 --> 00:06:58,430
happening with Drupal so what are these

00:06:56,539 --> 00:07:00,229
components well there's a big list you

00:06:58,430 --> 00:07:01,639
know if we run down the list you'll

00:07:00,229 --> 00:07:02,960
probably recognize a few little pieces

00:07:01,639 --> 00:07:05,059
that pop out and as we said before

00:07:02,960 --> 00:07:07,249
they're there to solve common web

00:07:05,059 --> 00:07:11,300
development problems things like working

00:07:07,249 --> 00:07:14,059
with HTTP routing security configuration

00:07:11,300 --> 00:07:16,279
management working with forms and form

00:07:14,059 --> 00:07:17,870
validation there's some also there's

00:07:16,279 --> 00:07:20,990
also some very cool components in there

00:07:17,870 --> 00:07:24,409
for translation with am i 18 n and also

00:07:20,990 --> 00:07:26,930
l10n handling so all these things kind

00:07:24,409 --> 00:07:28,550
of put together and are built into a

00:07:26,930 --> 00:07:30,680
distribution which is Symphony framework

00:07:28,550 --> 00:07:32,089
but they're not required you're you're

00:07:30,680 --> 00:07:33,949
not required to actually use Symphony

00:07:32,089 --> 00:07:35,389
framework to get the benefit out of any

00:07:33,949 --> 00:07:40,879
of these components they're all

00:07:35,389 --> 00:07:42,770
decoupled such a couple components to

00:07:40,879 --> 00:07:44,870
put it simply these these components can

00:07:42,770 --> 00:07:45,979
be moved around as you need them so you

00:07:44,870 --> 00:07:50,029
can cherry-pick the ones that are

00:07:45,979 --> 00:07:52,339
appropriate for your project this has

00:07:50,029 --> 00:07:54,169
been the core move for the symphony to

00:07:52,339 --> 00:07:55,430
framework now this is even different to

00:07:54,169 --> 00:07:58,189
the symphony one framework which others

00:07:55,430 --> 00:08:00,139
i said was much more of a standard PHP

00:07:58,189 --> 00:08:03,080
application a big blob of code but in to

00:08:00,139 --> 00:08:05,149
everything changed symphony symphonies

00:08:03,080 --> 00:08:08,779
core / arm focus was to make these

00:08:05,149 --> 00:08:11,300
components as decoupled as possible but

00:08:08,779 --> 00:08:12,740
this actually causes a couple of pretty

00:08:11,300 --> 00:08:14,269
interesting questions for this arm the

00:08:12,740 --> 00:08:16,819
PHP community what about cross

00:08:14,269 --> 00:08:20,259
dependencies if you take a PHP library

00:08:16,819 --> 00:08:22,249
out to its most reduced minimal function

00:08:20,259 --> 00:08:24,889
there's always give me the case where it

00:08:22,249 --> 00:08:27,409
requires some other library and that's a

00:08:24,889 --> 00:08:29,449
really complicated problem when you

00:08:27,409 --> 00:08:31,189
start thinking about it so one component

00:08:29,449 --> 00:08:34,010
requires another it also requires a

00:08:31,189 --> 00:08:35,690
specific version two components that are

00:08:34,010 --> 00:08:38,569
interlinked together may also share a

00:08:35,690 --> 00:08:40,760
dependency of a single library so now we

00:08:38,569 --> 00:08:43,039
start seeing a pretty complex map of

00:08:40,760 --> 00:08:45,800
dependencies here and that needed to be

00:08:43,039 --> 00:08:47,269
solved so there's also been another new

00:08:45,800 --> 00:08:51,199
community that's been popping up

00:08:47,269 --> 00:08:53,600
recently and that's the composer utility

00:08:51,199 --> 00:08:56,269
has everybody here heard of composer

00:08:53,600 --> 00:08:58,610
okay so that's great so composer is

00:08:56,269 --> 00:09:00,920
simply a dependency management utility

00:08:58,610 --> 00:09:04,069
and it knits a couple of things things

00:09:00,920 --> 00:09:06,110
like PR 0 which defines how packages are

00:09:04,069 --> 00:09:09,560
all components be structured along with

00:09:06,110 --> 00:09:11,600
some versioning specifications to make

00:09:09,560 --> 00:09:13,970
sure they can be mapped into a release

00:09:11,600 --> 00:09:16,819
cycle it Maps all these things together

00:09:13,970 --> 00:09:19,250
and allows you to much more with much

00:09:16,819 --> 00:09:22,750
greater ease include a component into

00:09:19,250 --> 00:09:25,300
your project now complains that also is

00:09:22,750 --> 00:09:28,870
often talked about in relation to

00:09:25,300 --> 00:09:30,910
packages so packages is a directory of

00:09:28,870 --> 00:09:34,279
thousands and thousands of packages

00:09:30,910 --> 00:09:38,779
which allows which is a lookup service

00:09:34,279 --> 00:09:40,490
for composer by the way if you're not

00:09:38,779 --> 00:09:42,889
wanting your code open source there's

00:09:40,490 --> 00:09:44,389
also a SATA server there that you can

00:09:42,889 --> 00:09:45,589
take a look at if you want to work

00:09:44,389 --> 00:09:49,699
within the bounds of a company it's

00:09:45,589 --> 00:09:51,319
definitely worth checking out so the

00:09:49,699 --> 00:09:52,790
composer and packages were together to

00:09:51,319 --> 00:09:54,290
map dependencies and they do this with a

00:09:52,790 --> 00:09:57,319
simple configuration system it's a

00:09:54,290 --> 00:09:59,870
composer JSON file and each component in

00:09:57,319 --> 00:10:02,300
a system where has one of these and in

00:09:59,870 --> 00:10:03,500
turn it maps its own dependencies inside

00:10:02,300 --> 00:10:05,779
that file will take a look at that in a

00:10:03,500 --> 00:10:07,970
second there's another part to composer

00:10:05,779 --> 00:10:09,560
which is a composer fire file this is

00:10:07,970 --> 00:10:11,990
actually the command line utility that

00:10:09,560 --> 00:10:13,939
you run to install the packages on your

00:10:11,990 --> 00:10:15,860
system if you are familiar with drush

00:10:13,939 --> 00:10:17,839
it's a similar sort of idea where you

00:10:15,860 --> 00:10:21,110
download a package and that provides

00:10:17,839 --> 00:10:24,290
some command line tools for installing

00:10:21,110 --> 00:10:25,550
these packages and the final part 2

00:10:24,290 --> 00:10:30,230
composer which is really quite

00:10:25,550 --> 00:10:31,699
interesting is a locked file so for

00:10:30,230 --> 00:10:34,100
whenever you're working with teams and

00:10:31,699 --> 00:10:35,870
you've got a system which requires one

00:10:34,100 --> 00:10:37,970
system requires another it can get quite

00:10:35,870 --> 00:10:39,889
complicated when you have that call from

00:10:37,970 --> 00:10:41,959
a fellow developer saying it's broken on

00:10:39,889 --> 00:10:43,670
my system and a lot of the times that

00:10:41,959 --> 00:10:46,100
can be another down to a version

00:10:43,670 --> 00:10:47,569
conflict where you can't guarantee that

00:10:46,100 --> 00:10:50,240
everybody's working off the same

00:10:47,569 --> 00:10:52,910
versions depending on different systems

00:10:50,240 --> 00:10:54,949
pair was really notorious for this where

00:10:52,910 --> 00:10:56,720
you would install a library via pair it

00:10:54,949 --> 00:10:59,420
would work on for one person would break

00:10:56,720 --> 00:11:03,199
for another so composer is really good

00:10:59,420 --> 00:11:05,120
at this it supplies a composer lock file

00:11:03,199 --> 00:11:06,680
which you actually support um send to

00:11:05,120 --> 00:11:07,379
your get repository or your versioning

00:11:06,680 --> 00:11:09,509
system

00:11:07,379 --> 00:11:11,069
then distribute out across a team and

00:11:09,509 --> 00:11:12,869
that way you know that everybody in the

00:11:11,069 --> 00:11:15,869
team is running off exactly the same

00:11:12,869 --> 00:11:17,899
version pretty cool feature so how does

00:11:15,869 --> 00:11:21,089
this look back in our dependency maps

00:11:17,899 --> 00:11:23,369
well every node as we said has a

00:11:21,089 --> 00:11:25,649
composer to JSON file in that file it

00:11:23,369 --> 00:11:31,049
will then in turn map out what it

00:11:25,649 --> 00:11:32,819
requires and what versions those files

00:11:31,049 --> 00:11:33,929
look a fact an example here this is kind

00:11:32,819 --> 00:11:37,009
of interesting because this is actually

00:11:33,929 --> 00:11:40,289
off the drupal.org site and i found this

00:11:37,009 --> 00:11:42,779
group will get library and the

00:11:40,289 --> 00:11:45,359
developers here are also defining a

00:11:42,779 --> 00:11:46,979
requirement and i'll just jump up here a

00:11:45,359 --> 00:11:49,679
requirement here which is a project

00:11:46,979 --> 00:11:52,499
outside of drupal being dragged in as

00:11:49,679 --> 00:11:56,489
the Geezer library and in this case this

00:11:52,499 --> 00:11:57,839
module is marking it as a dependency so

00:11:56,489 --> 00:11:59,220
that's quite interesting so one of the

00:11:57,839 --> 00:12:01,289
next steps if I'm we were trying to do

00:11:59,220 --> 00:12:03,269
something that like this with a composer

00:12:01,289 --> 00:12:05,309
JSON file well we'd have to flip back to

00:12:03,269 --> 00:12:07,229
the terminal and as we sit home looked

00:12:05,309 --> 00:12:10,109
at before there's also a command-line

00:12:07,229 --> 00:12:12,569
utility and it's packaged into a fire

00:12:10,109 --> 00:12:13,679
file for those of you who aren't

00:12:12,569 --> 00:12:16,589
familiar with fire files it's an

00:12:13,679 --> 00:12:18,839
archiving system for PHP and you can

00:12:16,589 --> 00:12:20,729
embed a micro application in there it's

00:12:18,839 --> 00:12:21,959
also a pain in the neck sometimes get

00:12:20,729 --> 00:12:24,209
working on this system because there's a

00:12:21,959 --> 00:12:26,189
lot of system dependent sort of our

00:12:24,209 --> 00:12:28,529
nuances with it so there's an installer

00:12:26,189 --> 00:12:29,789
from get composer org and this our first

00:12:28,529 --> 00:12:32,489
line here is simply grabbing the

00:12:29,789 --> 00:12:34,409
installer and then it in turn will build

00:12:32,489 --> 00:12:36,419
you a composer oddvar file in your

00:12:34,409 --> 00:12:38,579
system making sure you don't get in any

00:12:36,419 --> 00:12:40,229
errors in the process and once you've

00:12:38,579 --> 00:12:42,509
got that you can actually run it with an

00:12:40,229 --> 00:12:44,819
install command and it'll run off to the

00:12:42,509 --> 00:12:46,409
web and drag in the dependencies in this

00:12:44,819 --> 00:12:48,239
case there's two dependence of

00:12:46,409 --> 00:12:50,429
dependencies which have been dragged in

00:12:48,239 --> 00:12:52,289
the first there is a symphony process

00:12:50,429 --> 00:12:54,269
component now that wasn't actually

00:12:52,289 --> 00:12:56,220
marked over in this composite of JSON

00:12:54,269 --> 00:12:59,609
file on the left because it's actually a

00:12:56,220 --> 00:13:03,629
dependency of the get er library not the

00:12:59,609 --> 00:13:05,639
Drupal it module so composer has worked

00:13:03,629 --> 00:13:07,249
out become the dependency there and

00:13:05,639 --> 00:13:09,599
dragged in that other library as well

00:13:07,249 --> 00:13:12,599
now the libraries are packed into a

00:13:09,599 --> 00:13:14,279
vendor directory and inside the vendor

00:13:12,599 --> 00:13:16,439
directory is also a very handy utility

00:13:14,279 --> 00:13:19,709
which is an auto load script which

00:13:16,439 --> 00:13:21,310
allows you to include classes in your

00:13:19,709 --> 00:13:25,510
code without wiring

00:13:21,310 --> 00:13:26,950
about where their location is so at the

00:13:25,510 --> 00:13:28,810
top of your code you could simply write

00:13:26,950 --> 00:13:33,580
something like that and you have access

00:13:28,810 --> 00:13:35,680
to all the libraries you are wanting so

00:13:33,580 --> 00:13:37,150
i don't know i'm probably not i don't

00:13:35,680 --> 00:13:39,130
worry i don't project i think my

00:13:37,150 --> 00:13:41,529
excitement about this very well i don't

00:13:39,130 --> 00:13:43,690
know how crazy I'm looking up here but

00:13:41,529 --> 00:13:46,210
this stuff is really really cool it's

00:13:43,690 --> 00:13:48,850
really important to just reflect on how

00:13:46,210 --> 00:13:52,240
complex that scenario is and how easily

00:13:48,850 --> 00:13:54,070
composer can be can sort of act as a

00:13:52,240 --> 00:13:55,420
bridge between including all these

00:13:54,070 --> 00:13:56,770
libraries and getting them into your

00:13:55,420 --> 00:13:58,510
code and then moving forward also

00:13:56,770 --> 00:14:01,570
maintaining versions and doing updates

00:13:58,510 --> 00:14:03,790
so that's fantastic you get over I think

00:14:01,570 --> 00:14:06,730
so this number was actually taken last

00:14:03,790 --> 00:14:09,580
night so on the packages site there's

00:14:06,730 --> 00:14:11,290
over 7,200 libraries at your disposal

00:14:09,580 --> 00:14:12,940
there and that's not to say you have to

00:14:11,290 --> 00:14:15,279
use packages either you can actually

00:14:12,940 --> 00:14:17,170
drag libraries in via composer from this

00:14:15,279 --> 00:14:19,870
sort of their versioning sources as well

00:14:17,170 --> 00:14:23,170
that's a huge number and definitely an

00:14:19,870 --> 00:14:26,620
interesting directory to go and take a

00:14:23,170 --> 00:14:28,720
look at it's simple it really is simple

00:14:26,620 --> 00:14:30,640
once you get your head around it it

00:14:28,720 --> 00:14:33,820
provides you with an end-to-end way to

00:14:30,640 --> 00:14:35,230
package and your own code and also then

00:14:33,820 --> 00:14:40,600
grab other people's code into your

00:14:35,230 --> 00:14:42,730
project in a neat and elegant way so I'm

00:14:40,600 --> 00:14:44,710
really surprised at my sort of how this

00:14:42,730 --> 00:14:46,660
change my developing cycle now when I

00:14:44,710 --> 00:14:48,490
start a new project I think the first

00:14:46,660 --> 00:14:50,410
thing I do is really sit down with the

00:14:48,490 --> 00:14:53,110
composer file and I go and search for

00:14:50,410 --> 00:14:55,510
it's already out there because it's easy

00:14:53,110 --> 00:14:58,600
I can go and get really good code I can

00:14:55,510 --> 00:15:00,670
see code along with its history and see

00:14:58,600 --> 00:15:02,230
who else is using it and then i can say

00:15:00,670 --> 00:15:03,820
i can build a shopping list essentially

00:15:02,230 --> 00:15:05,560
for my project and i think this is a

00:15:03,820 --> 00:15:08,110
really good way to break the not

00:15:05,560 --> 00:15:12,209
invented here cycle which for so often

00:15:08,110 --> 00:15:15,130
really in the PHP world i think was very

00:15:12,209 --> 00:15:17,620
predominant go through another source

00:15:15,130 --> 00:15:19,750
like sourceforge or to github and take a

00:15:17,620 --> 00:15:21,880
copy and paste of somebody else's code

00:15:19,750 --> 00:15:23,500
and it's not the neatest way you can do

00:15:21,880 --> 00:15:26,320
things so this is a really important

00:15:23,500 --> 00:15:27,940
feature finally and this is removing the

00:15:26,320 --> 00:15:32,020
barriers to getting your code out there

00:15:27,940 --> 00:15:33,940
it's really simple to work with packages

00:15:32,020 --> 00:15:35,110
so if you're writing a library it

00:15:33,940 --> 00:15:36,490
doesn't have that any bout

00:15:35,110 --> 00:15:38,320
not many boundaries at all really to get

00:15:36,490 --> 00:15:40,000
your library back out into the community

00:15:38,320 --> 00:15:42,640
and I think well I know the Drupal is

00:15:40,000 --> 00:15:45,339
are very focused on sharing code and the

00:15:42,640 --> 00:15:46,750
PHP community in general would really

00:15:45,339 --> 00:15:49,420
benefit for them seeing the Drupal

00:15:46,750 --> 00:15:51,070
developers are throwing bits and pieces

00:15:49,420 --> 00:15:53,560
out of Drupal modules back into the

00:15:51,070 --> 00:15:56,260
greater PHP comedian arm this sort of

00:15:53,560 --> 00:15:59,860
tool is a great way to allow you to do

00:15:56,260 --> 00:16:02,260
that so what it's doing to the PHP

00:15:59,860 --> 00:16:04,480
community in general well I think it's

00:16:02,260 --> 00:16:06,579
taking a whole lot of really big systems

00:16:04,480 --> 00:16:09,100
that are out there at the moment drupal

00:16:06,579 --> 00:16:11,050
being one of them and forcing take a

00:16:09,100 --> 00:16:14,769
little bit of a look at their own code

00:16:11,050 --> 00:16:16,209
and identify common logic because

00:16:14,769 --> 00:16:18,250
there's no real reason why you should be

00:16:16,209 --> 00:16:20,019
writing pretty boring parts of the code

00:16:18,250 --> 00:16:22,660
or code that can be better handled on a

00:16:20,019 --> 00:16:23,829
community level in general rather what

00:16:22,660 --> 00:16:27,519
you want to be doing is taking that

00:16:23,829 --> 00:16:32,220
repeated logic identifying a likely

00:16:27,519 --> 00:16:35,970
source which can take control of it and

00:16:32,220 --> 00:16:38,649
then moving into your own projects so I

00:16:35,970 --> 00:16:40,449
this is another number i took off the

00:16:38,649 --> 00:16:42,970
packages right on website so over 10

00:16:40,449 --> 00:16:45,310
million install since april last year

00:16:42,970 --> 00:16:46,600
that's a pretty amazing number it's a

00:16:45,310 --> 00:16:49,209
new project and it's growing really

00:16:46,600 --> 00:16:51,040
really fast so i would expect that then

00:16:49,209 --> 00:16:54,399
it in the next 12 months would serve far

00:16:51,040 --> 00:16:55,779
bigger number so that's packages

00:16:54,399 --> 00:16:58,390
composer a little bit of an introduction

00:16:55,779 --> 00:17:00,480
to symphony the next step here I think

00:16:58,390 --> 00:17:04,660
is taking a look at some code in action

00:17:00,480 --> 00:17:07,179
and I've taken a few examples which

00:17:04,660 --> 00:17:10,809
aren't entirely random the first one

00:17:07,179 --> 00:17:14,049
here is to look at a very simple request

00:17:10,809 --> 00:17:15,400
coming through and PHP there's some good

00:17:14,049 --> 00:17:16,809
reasons why you don't want to handle

00:17:15,400 --> 00:17:19,839
this with the old-fashioned are

00:17:16,809 --> 00:17:23,110
procedural PHP code it can be more

00:17:19,839 --> 00:17:24,939
complex than it first looks and in this

00:17:23,110 --> 00:17:26,860
case here we're going to use a composer

00:17:24,939 --> 00:17:29,620
to JSON file and this is actually the

00:17:26,860 --> 00:17:32,110
entire file and as complicated as it

00:17:29,620 --> 00:17:34,720
needs to be right now we're taking in a

00:17:32,110 --> 00:17:37,090
dependency which is a sympathy component

00:17:34,720 --> 00:17:40,900
the HTTP foundation and inside that

00:17:37,090 --> 00:17:45,580
component has some classes for handling

00:17:40,900 --> 00:17:47,140
requests objects once it's installed we

00:17:45,580 --> 00:17:50,190
can simply get access to that code by

00:17:47,140 --> 00:17:50,190
including the auto load

00:17:51,240 --> 00:17:56,830
which will drag in the classes that we

00:17:53,440 --> 00:18:01,530
need and when we use the class is at our

00:17:56,830 --> 00:18:03,700
disposal already we can instantiate it

00:18:01,530 --> 00:18:06,810
and then we can use it to get a variable

00:18:03,700 --> 00:18:09,550
back from a get parameter property a

00:18:06,810 --> 00:18:12,220
really complicated example but it

00:18:09,550 --> 00:18:14,740
illustrates how simple it is to actually

00:18:12,220 --> 00:18:16,210
include a complicated library a library

00:18:14,740 --> 00:18:19,690
which is really really has a lot of

00:18:16,210 --> 00:18:22,570
function for handling requests in HTTP

00:18:19,690 --> 00:18:26,980
and getting it into your code is really

00:18:22,570 --> 00:18:28,330
really simple I'll show another example

00:18:26,980 --> 00:18:29,650
here which is of course the next step

00:18:28,330 --> 00:18:32,650
this is the response again we're using

00:18:29,650 --> 00:18:35,560
HTTP foundation course request and

00:18:32,650 --> 00:18:40,480
response tool kits are in the same

00:18:35,560 --> 00:18:44,410
component again we look at the auto load

00:18:40,480 --> 00:18:45,910
and a used use statement but further

00:18:44,410 --> 00:18:47,740
down there we see the response is being

00:18:45,910 --> 00:18:49,300
built and that's actually I think a

00:18:47,740 --> 00:18:52,270
really interesting example there because

00:18:49,300 --> 00:18:53,680
we can see that the setting in the

00:18:52,270 --> 00:18:55,780
response back to the browser along with

00:18:53,680 --> 00:18:58,120
the status code and also a tutti only by

00:18:55,780 --> 00:19:01,510
no means of these comprehensive in the

00:18:58,120 --> 00:19:03,250
example is a lot more handling of the

00:19:01,510 --> 00:19:04,960
HTTP response to an available in that

00:19:03,250 --> 00:19:09,700
class but this gives you an example of

00:19:04,960 --> 00:19:11,260
how quickly a very neatly handled

00:19:09,700 --> 00:19:16,870
response can be made by using this

00:19:11,260 --> 00:19:19,930
canarm component so the next example

00:19:16,870 --> 00:19:21,160
here is a little bit more complex it's

00:19:19,930 --> 00:19:22,690
actually talking about routing and

00:19:21,160 --> 00:19:26,380
there's another component which is being

00:19:22,690 --> 00:19:30,190
an including this composer to JSON file

00:19:26,380 --> 00:19:33,280
and it's the routing component it allows

00:19:30,190 --> 00:19:35,410
you to create a route collection and via

00:19:33,280 --> 00:19:38,560
simple handles in this case the say

00:19:35,410 --> 00:19:42,250
handle define a routing rule along with

00:19:38,560 --> 00:19:43,840
default property values fantastic I

00:19:42,250 --> 00:19:45,340
don't know if anybody's actually worked

00:19:43,840 --> 00:19:47,200
with routing logic before it can

00:19:45,340 --> 00:19:49,150
actually be quite complicated and by

00:19:47,200 --> 00:19:52,240
using utility like this you're outside

00:19:49,150 --> 00:19:55,870
sourcing all of that complexity to the

00:19:52,240 --> 00:19:57,940
composer and the component and then to

00:19:55,870 --> 00:20:00,130
use it now this is probably a not the

00:19:57,940 --> 00:20:02,430
best example here we go through some

00:20:00,130 --> 00:20:05,800
setup pieces

00:20:02,430 --> 00:20:08,740
we go back to our good old response

00:20:05,800 --> 00:20:11,830
object and now it gets quite interesting

00:20:08,740 --> 00:20:15,190
we can actually put the route collection

00:20:11,830 --> 00:20:17,380
to task let's see if we have a match in

00:20:15,190 --> 00:20:18,880
this case if we do have a match we can

00:20:17,380 --> 00:20:22,150
set some content into the response

00:20:18,880 --> 00:20:23,770
fairly standard down process but one

00:20:22,150 --> 00:20:27,340
interesting little detail to note here

00:20:23,770 --> 00:20:29,800
is the neat wire way failed route

00:20:27,340 --> 00:20:31,300
matches a handle that's in the next

00:20:29,800 --> 00:20:34,480
section here so we can actually catch

00:20:31,300 --> 00:20:35,980
them because it's all object oriented we

00:20:34,480 --> 00:20:37,930
have a neatly throw an exception and

00:20:35,980 --> 00:20:41,590
therefore the opportunity to catch these

00:20:37,930 --> 00:20:45,520
and provide appropriate responses in one

00:20:41,590 --> 00:20:46,960
case it's for a method not allowed so we

00:20:45,520 --> 00:20:49,090
may be looking for a route that is only

00:20:46,960 --> 00:20:52,300
matchable via a get call rather than a

00:20:49,090 --> 00:20:53,770
post and if the wrong type of call is he

00:20:52,300 --> 00:20:55,780
armed found we can throw an exception

00:20:53,770 --> 00:21:02,380
for that and the second case there of

00:20:55,780 --> 00:21:04,750
course the old 404 error I'll move away

00:21:02,380 --> 00:21:07,450
from Symphony components for a second

00:21:04,750 --> 00:21:09,340
and give an example here of twig

00:21:07,450 --> 00:21:10,690
templating engine which arm I know

00:21:09,340 --> 00:21:13,980
there's quite a controversial topic in

00:21:10,690 --> 00:21:16,210
the Drupal community at the moment and

00:21:13,980 --> 00:21:18,100
they'll go reflect on some of those

00:21:16,210 --> 00:21:19,870
armed service of those details later in

00:21:18,100 --> 00:21:21,070
the presentation but to start off with

00:21:19,870 --> 00:21:24,790
just to give you a very simple example

00:21:21,070 --> 00:21:27,100
of how we can actually include tweak

00:21:24,790 --> 00:21:28,930
into a simple piece of code again we're

00:21:27,100 --> 00:21:31,860
using composer tour JSON to defined the

00:21:28,930 --> 00:21:33,910
requirement of the twig library and

00:21:31,860 --> 00:21:39,370
digging into a little bit of code here

00:21:33,910 --> 00:21:41,800
we can see that the response object can

00:21:39,370 --> 00:21:44,830
be decorated or the list of content can

00:21:41,800 --> 00:21:48,400
be placed in via the twigs tweak

00:21:44,830 --> 00:21:50,100
template engine in the first part here

00:21:48,400 --> 00:21:54,460
we're defining actual template file

00:21:50,100 --> 00:21:56,770
which is relatively simple and we're

00:21:54,460 --> 00:22:00,100
also providing a message to send through

00:21:56,770 --> 00:22:02,050
as a property into that template so look

00:22:00,100 --> 00:22:04,470
it's a very very simple example here but

00:22:02,050 --> 00:22:06,310
I think it illustrates how easy it is to

00:22:04,470 --> 00:22:07,600
include some of these libraries

00:22:06,310 --> 00:22:10,830
particularly when they've been developed

00:22:07,600 --> 00:22:13,780
with modularity or decoupling in mind

00:22:10,830 --> 00:22:16,060
okay final example to go on with and

00:22:13,780 --> 00:22:18,040
this is actually an interesting one

00:22:16,060 --> 00:22:21,820
for part of a monologue library which is

00:22:18,040 --> 00:22:24,760
a PSR 0ps are three compliant library

00:22:21,820 --> 00:22:28,360
Pierce are three really outlines a

00:22:24,760 --> 00:22:30,280
logging sort of set of standards and one

00:22:28,360 --> 00:22:31,510
along conforms to those it's a great

00:22:30,280 --> 00:22:32,800
library if you haven't used before and

00:22:31,510 --> 00:22:35,380
you have any sort of logging

00:22:32,800 --> 00:22:38,350
requirements of course getting it

00:22:35,380 --> 00:22:39,760
started is really really simple once you

00:22:38,350 --> 00:22:41,440
have instantiated your object on the

00:22:39,760 --> 00:22:43,450
constructor you can actually say where

00:22:41,440 --> 00:22:45,400
your access where your log file is

00:22:43,450 --> 00:22:49,060
located and also define the log level

00:22:45,400 --> 00:22:50,820
and then of course throwing logs log

00:22:49,060 --> 00:22:52,780
messages into that file is simple

00:22:50,820 --> 00:22:53,980
there's a little example down there of

00:22:52,780 --> 00:22:57,010
what that actually looks like in the

00:22:53,980 --> 00:22:59,440
file so that's just a couple of examples

00:22:57,010 --> 00:23:04,630
to illustrate how components can be

00:22:59,440 --> 00:23:06,220
dragged into your code I hope they've

00:23:04,630 --> 00:23:07,840
given a little bit of an illustration of

00:23:06,220 --> 00:23:09,220
how simple the process is particularly

00:23:07,840 --> 00:23:12,210
when you start with the composer file

00:23:09,220 --> 00:23:15,610
composure composure JSON files aren't

00:23:12,210 --> 00:23:17,760
very complex in fact at their most basic

00:23:15,610 --> 00:23:19,900
that can be ridiculously simple and

00:23:17,760 --> 00:23:21,700
dragging those libraries into your code

00:23:19,900 --> 00:23:25,540
and getting started with it on a

00:23:21,700 --> 00:23:26,680
functional level can take seconds ok so

00:23:25,540 --> 00:23:32,230
I'll move on to the next part of the

00:23:26,680 --> 00:23:35,820
talk which is Drupal and symphony really

00:23:32,230 --> 00:23:35,820
what we're here or to hear about and

00:23:36,090 --> 00:23:40,600
symphony as we saw before is a big set

00:23:38,380 --> 00:23:42,070
of components and Drupal is definitely

00:23:40,600 --> 00:23:44,920
making use of some of these components

00:23:42,070 --> 00:23:47,830
not all of them so Drupal is making use

00:23:44,920 --> 00:23:50,640
of the following components as of a very

00:23:47,830 --> 00:23:53,830
recent scan through the Drupal 8 code

00:23:50,640 --> 00:23:56,380
that i conducted a short time ago it is

00:23:53,830 --> 00:23:58,510
changing from time to time so if this is

00:23:56,380 --> 00:23:59,920
slightly outdated apologies for that I

00:23:58,510 --> 00:24:01,480
also noted that there was some

00:23:59,920 --> 00:24:03,160
conversation the dribble got all excited

00:24:01,480 --> 00:24:05,740
about the event dispatcher which i think

00:24:03,160 --> 00:24:09,700
is now being moved back to Drupal nine

00:24:05,740 --> 00:24:12,700
but I'm not entirely sure if that's

00:24:09,700 --> 00:24:13,960
still the case but you can see the the

00:24:12,700 --> 00:24:15,310
components that are being used here a

00:24:13,960 --> 00:24:19,260
few of them will actually be familiar

00:24:15,310 --> 00:24:23,950
from our examples like HTTP foundation

00:24:19,260 --> 00:24:25,330
the routing actually in this example

00:24:23,950 --> 00:24:28,120
here those two are the ones we use in

00:24:25,330 --> 00:24:29,860
the examples to give you an idea about

00:24:28,120 --> 00:24:31,690
what the others are use for well

00:24:29,860 --> 00:24:33,850
there's a class loading utility there

00:24:31,690 --> 00:24:36,100
which is a sort of extended our library

00:24:33,850 --> 00:24:37,630
for handling classes and the auto

00:24:36,100 --> 00:24:39,850
loading which is saw which we saw

00:24:37,630 --> 00:24:44,260
composer doing symphony provide some

00:24:39,850 --> 00:24:46,360
tools around that as well there's also a

00:24:44,260 --> 00:24:48,070
dependency injection library being

00:24:46,360 --> 00:24:49,890
included and has everybody used to

00:24:48,070 --> 00:24:52,900
depends in our dependency injection a

00:24:49,890 --> 00:24:54,910
few people I guess I'm pretty sure

00:24:52,900 --> 00:24:56,710
actually all of you are doing it but

00:24:54,910 --> 00:25:00,960
just don't know you are so dependency

00:24:56,710 --> 00:25:03,910
injection is simply a pattern where you

00:25:00,960 --> 00:25:07,270
take commonly accessed libraries or

00:25:03,910 --> 00:25:09,220
utility forearm classes around your

00:25:07,270 --> 00:25:13,360
application ones that you load all the

00:25:09,220 --> 00:25:15,130
time and basically say instantiate this

00:25:13,360 --> 00:25:17,140
for me and that's simply what dependency

00:25:15,130 --> 00:25:19,330
injection is about and the instantiation

00:25:17,140 --> 00:25:21,220
process is handled by a service and

00:25:19,330 --> 00:25:24,070
therefore you can ask the service to

00:25:21,220 --> 00:25:25,780
give you a complex object back again

00:25:24,070 --> 00:25:28,270
without having to go through the

00:25:25,780 --> 00:25:29,830
configuration of that object when you

00:25:28,270 --> 00:25:31,210
when you're retrieving it it's really

00:25:29,830 --> 00:25:32,260
handy if you're working in arm different

00:25:31,210 --> 00:25:33,880
it separated environments like

00:25:32,260 --> 00:25:35,500
development to production where you can

00:25:33,880 --> 00:25:39,880
actually instantiate objects using

00:25:35,500 --> 00:25:42,100
configuration variables HTTP foundation

00:25:39,880 --> 00:25:44,350
HTTP Colonel we saw the actual EP

00:25:42,100 --> 00:25:47,429
foundation are being used previously in

00:25:44,350 --> 00:25:50,919
the examples it provides utilities like

00:25:47,429 --> 00:25:53,049
request and response the HTTP kernel is

00:25:50,919 --> 00:25:56,290
a little bit more of a wrapping utility

00:25:53,049 --> 00:25:58,299
which can can take control of more

00:25:56,290 --> 00:26:01,540
complicate and complicated logic like

00:25:58,299 --> 00:26:03,280
matching routes back to some sort of

00:26:01,540 --> 00:26:05,919
logic business logic behind the scenes

00:26:03,280 --> 00:26:08,380
and also then handling responses it

00:26:05,919 --> 00:26:11,860
requests and responses to knit all that

00:26:08,380 --> 00:26:13,419
together there's a routing command

00:26:11,860 --> 00:26:18,190
component we saw the usage of that as

00:26:13,419 --> 00:26:19,780
well there's a yam all component being

00:26:18,190 --> 00:26:21,790
included I think that I'm in Drupal 8

00:26:19,780 --> 00:26:23,650
you're moving to a yemen-based

00:26:21,790 --> 00:26:26,049
configuration system is that still the

00:26:23,650 --> 00:26:27,940
case does anybody know that for sure I

00:26:26,049 --> 00:26:30,610
think it is still the case and I'm

00:26:27,940 --> 00:26:33,070
gemmell is a another c-arm sort of

00:26:30,610 --> 00:26:35,559
serialized format to store persist

00:26:33,070 --> 00:26:37,240
configuration and there's also a library

00:26:35,559 --> 00:26:40,660
to help with a serialization d

00:26:37,240 --> 00:26:42,930
serialization of configuration and being

00:26:40,660 --> 00:26:44,310
included as well

00:26:42,930 --> 00:26:46,290
but just to reflect a little bit just

00:26:44,310 --> 00:26:49,050
remember the inclusion of components

00:26:46,290 --> 00:26:50,400
into Drupal 8 isn't limited a symphony

00:26:49,050 --> 00:26:52,230
in fact there's a number of these

00:26:50,400 --> 00:26:57,810
components being including I'll go

00:26:52,230 --> 00:26:59,910
through those with you now doctrine is a

00:26:57,810 --> 00:27:02,280
fantastic library which is works around

00:26:59,910 --> 00:27:05,160
database support so there's database

00:27:02,280 --> 00:27:06,930
abstraction layer and also object

00:27:05,160 --> 00:27:08,160
relational mapping it's a really

00:27:06,930 --> 00:27:09,660
fantastic library I don't if you

00:27:08,160 --> 00:27:11,460
familiar with it but it's definitely

00:27:09,660 --> 00:27:15,450
worth checking out and it's being

00:27:11,460 --> 00:27:19,050
included in Drupal 8 the guzzle oops the

00:27:15,450 --> 00:27:21,930
guzzle some plan toolkit is there for

00:27:19,050 --> 00:27:23,850
consuming restful services is also an RD

00:27:21,930 --> 00:27:26,180
is erdf library which is also another

00:27:23,850 --> 00:27:29,870
great way to handle rdf documents and

00:27:26,180 --> 00:27:31,710
there's also the symphony cmf routing

00:27:29,870 --> 00:27:33,360
component oh this one's actually quite

00:27:31,710 --> 00:27:36,710
interesting because I doubt with you've

00:27:33,360 --> 00:27:40,550
heard of this symphony has his own small

00:27:36,710 --> 00:27:43,650
CMS project going on symphony cmf and

00:27:40,550 --> 00:27:47,730
it's also building its architecture on a

00:27:43,650 --> 00:27:50,610
decoupled model so bits and pieces of

00:27:47,730 --> 00:27:52,710
the symphony cmf can be taken out and

00:27:50,610 --> 00:27:54,150
used in other CMS's and that's a pretty

00:27:52,710 --> 00:27:56,550
cool thing when you think about so we've

00:27:54,150 --> 00:27:58,560
got one CMS group having some of its

00:27:56,550 --> 00:28:03,570
libraries elegantly shared into another

00:27:58,560 --> 00:28:05,490
CMS brewery I think you know just to

00:28:03,570 --> 00:28:07,140
have a bit of a shoot through to the

00:28:05,490 --> 00:28:10,160
future wouldn't be great one day if we

00:28:07,140 --> 00:28:15,380
saw in the symphony cmf in its composer

00:28:10,160 --> 00:28:17,130
JSON file a requirement Drupal page

00:28:15,380 --> 00:28:18,810
component I think that'd be a really

00:28:17,130 --> 00:28:20,640
great thing to see in the future and i

00:28:18,810 --> 00:28:23,100
think the symphony community have a

00:28:20,640 --> 00:28:24,810
little bit of an aspiration that one day

00:28:23,100 --> 00:28:27,300
will be dragging bits of drupal out

00:28:24,810 --> 00:28:29,640
elegantly by composer and using more

00:28:27,300 --> 00:28:31,020
around the place so just an interesting

00:28:29,640 --> 00:28:32,250
little part there plus there's a couple

00:28:31,020 --> 00:28:34,230
of very very interesting ones there's

00:28:32,250 --> 00:28:36,060
also our chris paul smiths aesthetic

00:28:34,230 --> 00:28:38,280
library if you haven't used it it's

00:28:36,060 --> 00:28:40,920
fantastic it's a filtering system where

00:28:38,280 --> 00:28:43,680
you can apply a range of compilation

00:28:40,920 --> 00:28:46,200
filters are two things like CSS file so

00:28:43,680 --> 00:28:49,050
you can take less and SAS code and then

00:28:46,200 --> 00:28:51,960
convert it back into CM CSS and also

00:28:49,050 --> 00:28:54,060
compress it and minify it into a single

00:28:51,960 --> 00:28:56,550
file or just many compressed versions of

00:28:54,060 --> 00:28:57,450
the files you've got so it's fantastic

00:28:56,550 --> 00:28:59,639
for CSS

00:28:57,450 --> 00:29:01,710
it's also fantastic for working with

00:28:59,639 --> 00:29:03,600
JavaScript it'll provide a range of

00:29:01,710 --> 00:29:07,169
compiles and compresses for your

00:29:03,600 --> 00:29:08,820
JavaScript files and finally it's also

00:29:07,169 --> 00:29:11,340
fantastic for working with images and

00:29:08,820 --> 00:29:14,130
optimizing optimizing them for their

00:29:11,340 --> 00:29:16,769
final presentation on the web there's

00:29:14,130 --> 00:29:19,740
another really great library and we've

00:29:16,769 --> 00:29:23,730
already touched on this earlier it's

00:29:19,740 --> 00:29:25,019
tweaked the very ominous tweak and this

00:29:23,730 --> 00:29:29,370
is actually the logo of twig if you

00:29:25,019 --> 00:29:34,260
haven't seen before nope the cold dead

00:29:29,370 --> 00:29:36,330
eyes no twigs not very frightening tweak

00:29:34,260 --> 00:29:40,320
is awesome in fact and some good reasons

00:29:36,330 --> 00:29:42,179
why I think it's awesome twig is really

00:29:40,320 --> 00:29:44,909
far so for a templating language it

00:29:42,179 --> 00:29:47,730
compiles back into PHP not just PHP but

00:29:44,909 --> 00:29:50,370
optimized PHP meaning it runs very very

00:29:47,730 --> 00:29:51,899
fast and you don't have the overhead

00:29:50,370 --> 00:29:57,799
that you might attribute to some other

00:29:51,899 --> 00:30:01,309
templating languages it's concise so I

00:29:57,799 --> 00:30:03,870
look at PHP embedded in templates and I

00:30:01,309 --> 00:30:07,500
know what's going on but I know the

00:30:03,870 --> 00:30:10,019
designers look at it and fear a little

00:30:07,500 --> 00:30:12,690
tear PHP tags because they're horrible

00:30:10,019 --> 00:30:14,370
and they complicate templates so I think

00:30:12,690 --> 00:30:16,260
twig is really great because it makes

00:30:14,370 --> 00:30:18,380
the templates very concise by removing a

00:30:16,260 --> 00:30:22,590
lot of the object and logic out of them

00:30:18,380 --> 00:30:24,720
it's secure really secure so output is

00:30:22,590 --> 00:30:28,490
escape by default with tweek meaning you

00:30:24,720 --> 00:30:31,590
don't well it's one more barrier for a

00:30:28,490 --> 00:30:35,010
cross-site scripting attack to get to

00:30:31,590 --> 00:30:36,330
its arm target all the output is escaped

00:30:35,010 --> 00:30:37,889
so you don't have to worry if user

00:30:36,330 --> 00:30:39,870
generated content is being put into your

00:30:37,889 --> 00:30:41,549
templates it's a little bit of a

00:30:39,870 --> 00:30:44,100
reassurance to know that's being escaped

00:30:41,549 --> 00:30:46,080
by default it's also sandbox so this is

00:30:44,100 --> 00:30:48,090
really important if you're moving

00:30:46,080 --> 00:30:50,940
template development to another group

00:30:48,090 --> 00:30:52,559
which you may not know particularly well

00:30:50,940 --> 00:30:54,059
or just in general you want to have

00:30:52,559 --> 00:30:56,250
templates coming back into your project

00:30:54,059 --> 00:30:59,190
knowing that there's been no sneaky

00:30:56,250 --> 00:31:00,450
additions to the templates know PHP tags

00:30:59,190 --> 00:31:03,840
which are either going to be a security

00:31:00,450 --> 00:31:05,519
risk a proper security risk or just our

00:31:03,840 --> 00:31:07,980
performance risk to your website

00:31:05,519 --> 00:31:10,289
operating in a healthy way so it's

00:31:07,980 --> 00:31:11,250
fantastic with the sandbox the other

00:31:10,289 --> 00:31:14,010
thing that really forces

00:31:11,250 --> 00:31:17,100
do I sorry this also extendable so you

00:31:14,010 --> 00:31:19,380
can actually write custom extensions to

00:31:17,100 --> 00:31:21,260
it filters and tags another useful thing

00:31:19,380 --> 00:31:23,970
for when you're building websites and

00:31:21,260 --> 00:31:25,740
finally it's really good for making sure

00:31:23,970 --> 00:31:26,910
the business logic it stays where it

00:31:25,740 --> 00:31:29,250
should be that's in the business side of

00:31:26,910 --> 00:31:31,710
things and your presentation logic is

00:31:29,250 --> 00:31:33,420
kept in the templates so it's a really

00:31:31,710 --> 00:31:36,630
good arm utility for making sure you

00:31:33,420 --> 00:31:39,300
adhere to separation of concerns okay so

00:31:36,630 --> 00:31:42,420
that's tweaked by the way there is a

00:31:39,300 --> 00:31:44,010
twig panel tomorrow I think this time is

00:31:42,420 --> 00:31:45,840
correct definitely check your schedules

00:31:44,010 --> 00:31:47,610
but arm should be interesting ever

00:31:45,840 --> 00:31:49,020
released looks like there's going to be

00:31:47,610 --> 00:31:54,060
a lot of opportunity to ask questions

00:31:49,020 --> 00:31:55,980
about it so the big question I guess for

00:31:54,060 --> 00:32:00,480
drupal and this big train changing

00:31:55,980 --> 00:32:03,630
Drupal 8 yoi well drupal is always

00:32:00,480 --> 00:32:05,310
improving with every major release it's

00:32:03,630 --> 00:32:07,080
moving forward and I think the Drupal

00:32:05,310 --> 00:32:09,090
core team are pushing this idea of

00:32:07,080 --> 00:32:12,830
improving the architecture making sure

00:32:09,090 --> 00:32:16,380
that it's at its most most elegant and

00:32:12,830 --> 00:32:18,180
up-to-date as it can be this is going to

00:32:16,380 --> 00:32:19,650
require a little bit of effort not just

00:32:18,180 --> 00:32:22,230
from the core team but everybody

00:32:19,650 --> 00:32:24,000
involved it's an upgrade and there's

00:32:22,230 --> 00:32:26,430
changes changes are going to be part of

00:32:24,000 --> 00:32:30,150
that but I hope that through the course

00:32:26,430 --> 00:32:32,160
of this discussion I've quilled any sort

00:32:30,150 --> 00:32:33,570
of anxieties that might be floating

00:32:32,160 --> 00:32:36,840
around what components are and how

00:32:33,570 --> 00:32:38,220
complicated they might be and of course

00:32:36,840 --> 00:32:39,990
the reason why you're really doing is

00:32:38,220 --> 00:32:42,900
doing this is this huge gains to be made

00:32:39,990 --> 00:32:44,220
so the gains well there's good you can

00:32:42,900 --> 00:32:45,780
be moving towards a more standardized

00:32:44,220 --> 00:32:47,880
architecture than that that's really

00:32:45,780 --> 00:32:49,050
really important why is it really

00:32:47,880 --> 00:32:51,720
important it's not just about improving

00:32:49,050 --> 00:32:54,060
the code it's also making sure that new

00:32:51,720 --> 00:32:56,070
people coming into Drupal are provided

00:32:54,060 --> 00:32:57,570
with a familiar interface for when

00:32:56,070 --> 00:33:00,780
they're working with it with your code

00:32:57,570 --> 00:33:02,550
so I'm a PHP developer I've been working

00:33:00,780 --> 00:33:04,860
with PHP for a long time but I would not

00:33:02,550 --> 00:33:06,450
say that I'm a drupal developer and it's

00:33:04,860 --> 00:33:08,790
kind of a funny place to be in

00:33:06,450 --> 00:33:11,040
considering that it should be far easier

00:33:08,790 --> 00:33:13,560
for somebody out of the Drupal community

00:33:11,040 --> 00:33:15,390
to come in and I think moving towards a

00:33:13,560 --> 00:33:19,590
more standard architecture will really

00:33:15,390 --> 00:33:21,690
improve that position it's also going to

00:33:19,590 --> 00:33:23,429
free up a lot of time for the Drupal

00:33:21,690 --> 00:33:25,059
core team they don't have to worry about

00:33:23,429 --> 00:33:27,279
every single

00:33:25,059 --> 00:33:31,600
function of the CMS say for instance

00:33:27,279 --> 00:33:32,919
routing complexities or HTTP kernels if

00:33:31,600 --> 00:33:34,539
they're outsourcing some of this to the

00:33:32,919 --> 00:33:36,519
broader community it's a big win for

00:33:34,539 --> 00:33:38,649
Drupal as well they get to focus on

00:33:36,519 --> 00:33:41,919
things like building better features

00:33:38,649 --> 00:33:46,480
into the core delivery which is a CMS

00:33:41,919 --> 00:33:47,889
that's a big win I think it also allows

00:33:46,480 --> 00:33:50,019
the better integration so I touched on

00:33:47,889 --> 00:33:52,029
this earlier so integration from

00:33:50,019 --> 00:33:55,840
external projects back into Drupal and

00:33:52,029 --> 00:33:58,570
then also in the future possibly taking

00:33:55,840 --> 00:34:00,549
the couple bit pieces of Drupal code

00:33:58,570 --> 00:34:02,320
back into the community and I think

00:34:00,549 --> 00:34:06,129
that's a really exciting prospect for

00:34:02,320 --> 00:34:07,450
everybody finally I just I'll just show

00:34:06,129 --> 00:34:09,760
you a little quote here which i think is

00:34:07,450 --> 00:34:12,159
pretty cool it's from a computer

00:34:09,760 --> 00:34:14,050
scientist I pronounce his name terribly

00:34:12,159 --> 00:34:16,599
circles any people that know how to

00:34:14,050 --> 00:34:20,319
pronounce better I'm sorry it's good did

00:34:16,599 --> 00:34:21,399
screw said that one of the most

00:34:20,319 --> 00:34:22,899
important things for when you're working

00:34:21,399 --> 00:34:24,490
with technology is how it influences

00:34:22,899 --> 00:34:27,579
your behavior and I think it's a really

00:34:24,490 --> 00:34:30,099
profound statement to just when you

00:34:27,579 --> 00:34:31,929
think about it what do you want when

00:34:30,099 --> 00:34:33,700
you're using technologies like Drupal is

00:34:31,929 --> 00:34:35,679
to make sure the users are subtly and

00:34:33,700 --> 00:34:38,290
behind-the-scenes influence and improved

00:34:35,679 --> 00:34:40,000
as they work with the arm the technology

00:34:38,290 --> 00:34:43,510
itself and I think that's a great thing

00:34:40,000 --> 00:34:45,399
to bear in mind and finally just before

00:34:43,510 --> 00:34:46,990
I wrap this up look there's some

00:34:45,399 --> 00:34:49,419
homework if you are interested if I've

00:34:46,990 --> 00:34:51,639
sparked any interest am today I've put

00:34:49,419 --> 00:34:54,730
together a little bit of code this will

00:34:51,639 --> 00:34:56,379
be available online as well there's some

00:34:54,730 --> 00:34:58,900
links down the bottom if you are

00:34:56,379 --> 00:35:00,670
interested but what this will do is take

00:34:58,900 --> 00:35:04,359
a little gifts that I've put together

00:35:00,670 --> 00:35:06,160
and it's not exactly succinct with the

00:35:04,359 --> 00:35:08,680
examples I put damn i showed you earlier

00:35:06,160 --> 00:35:10,410
but it's pretty close and actually

00:35:08,680 --> 00:35:13,359
enhances a few of them like the tweak

00:35:10,410 --> 00:35:15,310
templating so definitely check that out

00:35:13,359 --> 00:35:17,470
it may need a little bit of tweaking

00:35:15,310 --> 00:35:20,650
depending on your own personal system

00:35:17,470 --> 00:35:25,540
but once you run that you'll be able to

00:35:20,650 --> 00:35:28,859
get an amazing amazing example shown to

00:35:25,540 --> 00:35:32,260
you so so you definitely check it out

00:35:28,859 --> 00:35:33,400
just before I really do finish some

00:35:32,260 --> 00:35:34,900
things you might want to have a bit of a

00:35:33,400 --> 00:35:36,369
discussion about in certainly I can I

00:35:34,900 --> 00:35:38,530
thought these were interesting topic so

00:35:36,369 --> 00:35:41,680
and this brush support

00:35:38,530 --> 00:35:44,560
for composer already it is as far as I'm

00:35:41,680 --> 00:35:48,300
aware it's a rapper fer composer

00:35:44,560 --> 00:35:52,660
functions and will also provide some

00:35:48,300 --> 00:35:54,910
installation hooks for modules that use

00:35:52,660 --> 00:35:56,560
composer as well now please don't take

00:35:54,910 --> 00:35:59,350
my word for it that's probably a

00:35:56,560 --> 00:36:00,550
discussion for yourselves there's also

00:35:59,350 --> 00:36:02,290
an interesting discussion on the

00:36:00,550 --> 00:36:04,480
drupal.org website that I saw which was

00:36:02,290 --> 00:36:06,340
for moving the vendor directory from

00:36:04,480 --> 00:36:09,430
core back down to the root level this is

00:36:06,340 --> 00:36:11,050
really an interesting discussion having

00:36:09,430 --> 00:36:14,170
the vendor directory into the inside

00:36:11,050 --> 00:36:17,350
Drupal core is not particularly normal

00:36:14,170 --> 00:36:19,900
for external developers typically you

00:36:17,350 --> 00:36:21,430
see we would expect coming into a

00:36:19,900 --> 00:36:22,960
project which has composer being used

00:36:21,430 --> 00:36:25,000
that there be a single vendor directory

00:36:22,960 --> 00:36:27,070
and therefore of two different say a

00:36:25,000 --> 00:36:29,200
module rook has a requirement of

00:36:27,070 --> 00:36:30,880
particular dependency that Drupal also

00:36:29,200 --> 00:36:33,370
shares they're both running out of the

00:36:30,880 --> 00:36:35,200
single vendor system at the moment some

00:36:33,370 --> 00:36:37,660
of the modules that are using composer

00:36:35,200 --> 00:36:39,430
actually have their own vendor directory

00:36:37,660 --> 00:36:41,560
inside the module so this is a little

00:36:39,430 --> 00:36:43,330
bit of a interesting sort of a situation

00:36:41,560 --> 00:36:48,700
and this is a good discussion going on

00:36:43,330 --> 00:36:53,860
about it I believe okay finally why not

00:36:48,700 --> 00:36:57,850
make Drupal core a component and also

00:36:53,860 --> 00:36:59,890
dependency for drupal CMS so that a

00:36:57,850 --> 00:37:02,200
Drupal distribution would have a

00:36:59,890 --> 00:37:05,050
composer file and then also mark as its

00:37:02,200 --> 00:37:07,450
primary dependency compose a core would

00:37:05,050 --> 00:37:11,800
be really really cool by the way so if

00:37:07,450 --> 00:37:14,620
you ever decide to rent at a Drupal core

00:37:11,800 --> 00:37:16,600
developer ID I'd suggest this might be a

00:37:14,620 --> 00:37:18,250
good conversation to strike up but

00:37:16,600 --> 00:37:21,820
possibly an irritating one if they've

00:37:18,250 --> 00:37:23,650
heard it before so and the final thing

00:37:21,820 --> 00:37:25,090
is start playing like it's really simple

00:37:23,650 --> 00:37:27,160
to get your code back out in the

00:37:25,090 --> 00:37:29,290
community using composer and also if you

00:37:27,160 --> 00:37:32,350
bear in mind you write code with a

00:37:29,290 --> 00:37:35,440
decoupled sort of i and philosophy

00:37:32,350 --> 00:37:36,700
behind it it's going to be a win for

00:37:35,440 --> 00:37:38,080
everybody you're going to be providing

00:37:36,700 --> 00:37:39,610
feeding back into the ground of PHP

00:37:38,080 --> 00:37:41,950
community and also developing really

00:37:39,610 --> 00:37:46,120
cool well engineered code for drupal

00:37:41,950 --> 00:37:47,500
itself and that's it I've been

00:37:46,120 --> 00:37:50,380
instructed to also say you should go to

00:37:47,500 --> 00:37:52,270
the the website the dribble con website

00:37:50,380 --> 00:37:54,670
and provide some feedback from

00:37:52,270 --> 00:37:57,480
discussion today any feedback is well

00:37:54,670 --> 00:38:00,280
welcome good or bad so please do and

00:37:57,480 --> 00:38:02,560
look there's some type of question so if

00:38:00,280 --> 00:38:08,740
anybody has any questions now's the your

00:38:02,560 --> 00:38:12,810
opportunity yes of course ah that might

00:38:08,740 --> 00:38:12,810
be let me see what I can do

00:38:33,420 --> 00:38:36,570
apparently not

00:38:41,990 --> 00:38:46,190
ah the slides are also available on the

00:38:44,450 --> 00:38:53,560
website as well so sure you want to take

00:38:46,190 --> 00:38:56,450
a copy of them that is very recent yes I

00:38:53,560 --> 00:39:01,060
think down to about 20 minutes before

00:38:56,450 --> 00:39:01,060
this started so sorry down the back

00:39:11,240 --> 00:39:18,060
they they all have a composer file but

00:39:15,810 --> 00:39:20,820
they all load their dependencies into a

00:39:18,060 --> 00:39:22,620
single vendor directory so it's a great

00:39:20,820 --> 00:39:25,170
question so yes there are many composers

00:39:22,620 --> 00:39:27,990
of JSON files each to couple component

00:39:25,170 --> 00:39:30,840
will hold its own but when composer runs

00:39:27,990 --> 00:39:32,550
it will then in turn load all those

00:39:30,840 --> 00:39:34,890
dependencies into a single vendor

00:39:32,550 --> 00:39:37,620
directory there's one root composer file

00:39:34,890 --> 00:39:39,420
and that's the project dependency sort

00:39:37,620 --> 00:39:40,830
of mapping so when you start your

00:39:39,420 --> 00:39:43,020
project on the very root level you'll

00:39:40,830 --> 00:39:44,610
have your own composer file the examples

00:39:43,020 --> 00:39:52,310
of what I gave earlier were examples of

00:39:44,610 --> 00:40:03,540
just such a file yep yeah oh cool okay

00:39:52,310 --> 00:40:06,080
okay a good clone yes there is yes you

00:40:03,540 --> 00:40:08,940
can actually provide say take an entire

00:40:06,080 --> 00:40:11,090
local clone as well so yes you can do

00:40:08,940 --> 00:40:11,090
that

00:40:19,930 --> 00:40:24,050
you would map that I believe in the

00:40:22,520 --> 00:40:26,690
composer version so you would say you

00:40:24,050 --> 00:40:28,310
can move to a dev branch of that's what

00:40:26,690 --> 00:40:38,990
do you mean by the question a question I

00:40:28,310 --> 00:40:40,490
think I'm not sure I look I actually I

00:40:38,990 --> 00:40:42,620
don't know and there's a great question

00:40:40,490 --> 00:40:45,860
and if there's anybody else have an

00:40:42,620 --> 00:40:46,970
answer to that no it's a fantastic

00:40:45,860 --> 00:40:48,890
question I can definitely look it up for

00:40:46,970 --> 00:40:51,710
you and now I get back to you talk to me

00:40:48,890 --> 00:40:54,790
later and yeah give details any other

00:40:51,710 --> 00:40:54,790
questions yep

00:41:10,119 --> 00:41:14,980
look I think some of the decisions made

00:41:12,630 --> 00:41:16,539
behind what components are being dragged

00:41:14,980 --> 00:41:18,700
in were based pretty much on what you

00:41:16,539 --> 00:41:19,720
say I I believe in the very early days

00:41:18,700 --> 00:41:22,749
there were some discussion about

00:41:19,720 --> 00:41:24,400
including form components but there were

00:41:22,749 --> 00:41:26,769
complexities and you know Drupal is a

00:41:24,400 --> 00:41:28,089
big system it's complicated so there's

00:41:26,769 --> 00:41:30,369
going to be elements will have to be

00:41:28,089 --> 00:41:31,900
sort of our mapped in piece by piece or

00:41:30,369 --> 00:41:35,380
it may never be mapped in it at all

00:41:31,900 --> 00:41:36,640
drupal main decide that in the end it

00:41:35,380 --> 00:41:39,069
should to stick with his own form

00:41:36,640 --> 00:41:40,359
component maybe eventually even adding

00:41:39,069 --> 00:41:42,490
that back into the community as well as

00:41:40,359 --> 00:41:44,559
an independent component component of

00:41:42,490 --> 00:41:46,119
Drupal so yeah there's definitely

00:41:44,559 --> 00:41:47,950
complexities an arm just running through

00:41:46,119 --> 00:41:51,730
certain time the presentation taking a

00:41:47,950 --> 00:41:53,079
look at the cycles of droop or Drupal

00:41:51,730 --> 00:41:55,569
sites development you can definitely see

00:41:53,079 --> 00:41:57,700
where decisions have been made and this

00:41:55,569 --> 00:41:59,319
complexities all along the way to sub

00:41:57,700 --> 00:42:02,259
integrating that they're doing a great

00:41:59,319 --> 00:42:10,509
job this residency yeah yeah the

00:42:02,259 --> 00:42:14,230
questions yeah there is actually I think

00:42:10,509 --> 00:42:15,489
there's a p2p extension now for tweak so

00:42:14,230 --> 00:42:17,140
yeah I think yeah definitely i haven't

00:42:15,489 --> 00:42:19,359
actually have installed on my system so

00:42:17,140 --> 00:42:25,839
but it should speed things up a little

00:42:19,359 --> 00:42:27,249
bit yeah okay all right we'll look all

00:42:25,839 --> 00:42:29,170
hang around here should anybody want to

00:42:27,249 --> 00:42:31,089
have a bit of a chat about anything and

00:42:29,170 --> 00:42:33,160
look thanks so much for turning up that

00:42:31,089 --> 00:42:35,309
I really appreciate it it's great to see

00:42:33,160 --> 00:42:35,309

YouTube URL: https://www.youtube.com/watch?v=yRTS80bjrWY


