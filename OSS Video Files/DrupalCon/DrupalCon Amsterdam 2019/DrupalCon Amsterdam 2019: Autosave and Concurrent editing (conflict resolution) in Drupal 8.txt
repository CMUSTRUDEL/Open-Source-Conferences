Title: DrupalCon Amsterdam 2019: Autosave and Concurrent editing (conflict resolution) in Drupal 8
Publication date: 2019-10-29
Playlist: DrupalCon Amsterdam 2019
Description: 
	Hristo Chonov
bio.logis Genetic Information Management (GIM) GmbH, Frankfurt am Main, Germany

This session will introduce two modules enhancing the editorial experience in Drupal 8 - Autosave Form and Conflict.

Autosave ensures that content changes will not be lost if a sudden power outage or network disruption occurs. The current state of each entity form is continuously autosaved, so that the user is able to always resume from the last autosaved state.

The concurrent editing feature provided by the conflict module allows for the simultaneous editing of the same content by multiple users. Whenever possible automatic merges are performed. When conflicts occur the user is provided with a visual tool for resolving them.

During this talk we'll take a look at the current state of the modules and what is yet to come. We will see how they could work independent of each other and what is the added value of enabling both of them. The modules are being developed with the idea of allowing for customizations and we'll dive deeper into both of them and clarify how their functionality could be extended or adjusted.
Captions: 
	00:00:00,740 --> 00:00:07,410
welcome to the session how to say friend

00:00:04,020 --> 00:00:11,610
and current editing in Drupal 8 my name

00:00:07,410 --> 00:00:15,089
is Chris Cuomo I'm a senior software

00:00:11,610 --> 00:00:19,039
developer and one of the official

00:00:15,089 --> 00:00:21,840
comment a nurse over to the lathe I'm a

00:00:19,039 --> 00:00:25,439
senior software engineer and one of the

00:00:21,840 --> 00:00:29,279
official Drupal 8 core commentators for

00:00:25,439 --> 00:00:31,199
the entity API and outer and main

00:00:29,279 --> 00:00:33,390
maintainer of several Drupal modules

00:00:31,199 --> 00:00:36,210
including the tool that I'm going to

00:00:33,390 --> 00:00:41,219
present now how to say form and conflict

00:00:36,210 --> 00:00:44,520
branch 2.6 I work for biologics genetic

00:00:41,219 --> 00:00:48,059
information management company based in

00:00:44,520 --> 00:00:51,300
Frankfurt Germany we're a triple

00:00:48,059 --> 00:00:53,699
contributor and stated us in the survey

00:00:51,300 --> 00:00:55,829
made by Greece in his blog post

00:00:53,699 --> 00:00:59,309
who sponsors Drupal development we are

00:00:55,829 --> 00:01:02,430
one of three Drupal end-users for

00:00:59,309 --> 00:01:04,409
sponsoring the Drupal development so

00:01:02,430 --> 00:01:07,939
let's start it out to say for it's

00:01:04,409 --> 00:01:10,740
basically like the name suggests a

00:01:07,939 --> 00:01:12,020
module that takes care of continuously

00:01:10,740 --> 00:01:16,890
auto-saving

00:01:12,020 --> 00:01:19,950
984 it basically consists of the user

00:01:16,890 --> 00:01:21,780
input and the state of the form the

00:01:19,950 --> 00:01:25,100
module works out of the box but there

00:01:21,780 --> 00:01:28,400
are several configuration options like

00:01:25,100 --> 00:01:30,810
the autosave interval how often the

00:01:28,400 --> 00:01:33,540
autosave submission will be triggered or

00:01:30,810 --> 00:01:37,049
to enable it on only on specific entity

00:01:33,540 --> 00:01:40,229
types currently we support only content

00:01:37,049 --> 00:01:43,590
entity forms but with some custom count

00:01:40,229 --> 00:01:46,799
it's possible to add support for config

00:01:43,590 --> 00:01:51,030
entity forms as well it basically works

00:01:46,799 --> 00:01:54,180
like when it decorates the form builder

00:01:51,030 --> 00:01:55,799
in order to turn off all the four

00:01:54,180 --> 00:01:57,689
functionality of Drupal because we

00:01:55,799 --> 00:01:59,430
basically need a role input and we want

00:01:57,689 --> 00:02:01,979
to prevent all kinds of validation or

00:01:59,430 --> 00:02:04,890
who invocation we just need our own

00:02:01,979 --> 00:02:07,530
input and we want to prevent the

00:02:04,890 --> 00:02:10,619
multi-step forums updating the form

00:02:07,530 --> 00:02:13,140
built ID and all the complexity we just

00:02:10,619 --> 00:02:15,570
turn all that functionality off

00:02:13,140 --> 00:02:20,010
and we create autosave States they're

00:02:15,570 --> 00:02:24,900
based there per user which means they're

00:02:20,010 --> 00:02:27,480
not share and they represent draft a new

00:02:24,900 --> 00:02:29,250
stage will be created each time changes

00:02:27,480 --> 00:02:31,830
made so it means if there are multiple

00:02:29,250 --> 00:02:34,200
autosave submissions but they're the

00:02:31,830 --> 00:02:36,960
page hasn't change then there will be no

00:02:34,200 --> 00:02:39,420
new how to say States this makes it

00:02:36,960 --> 00:02:42,480
possible to implement and undo a radio

00:02:39,420 --> 00:02:44,220
functionality on top of it the module

00:02:42,480 --> 00:02:46,500
behaves differently your own entity

00:02:44,220 --> 00:02:49,350
saves dependent on that whether the

00:02:46,500 --> 00:02:51,210
conflict module is enabled or not if

00:02:49,350 --> 00:02:54,240
it's enabled then own it out to save

00:02:51,210 --> 00:02:56,490
session for the current user and the

00:02:54,240 --> 00:02:59,130
column density will be deleted otherwise

00:02:56,490 --> 00:03:00,480
all out of save stations sessions for

00:02:59,130 --> 00:03:03,390
this entity will be deleted because

00:03:00,480 --> 00:03:05,760
otherwise the user will be will not be

00:03:03,390 --> 00:03:07,500
able to save the form anyway because

00:03:05,760 --> 00:03:10,100
there will be conflict and without

00:03:07,500 --> 00:03:14,670
conflict we cannot resolve conflicts

00:03:10,100 --> 00:03:18,600
concurrently is not possible some of the

00:03:14,670 --> 00:03:21,660
future tasks that are on our plan are to

00:03:18,600 --> 00:03:23,400
make it possible to save how to save

00:03:21,660 --> 00:03:29,760
States in the browser local storage so

00:03:23,400 --> 00:03:32,820
that we preserve bandwidth and also make

00:03:29,760 --> 00:03:34,500
it possible to save autosave States

00:03:32,820 --> 00:03:36,480
without an active internet connection

00:03:34,500 --> 00:03:41,040
for example when somebody is in the

00:03:36,480 --> 00:03:42,950
train and is working on an article there

00:03:41,040 --> 00:03:45,510
are some core conversations about

00:03:42,950 --> 00:03:48,000
implementing autosave States as forward

00:03:45,510 --> 00:03:50,610
revisions which unfortunately have a lot

00:03:48,000 --> 00:03:52,739
of technical limitations like not no

00:03:50,610 --> 00:03:55,350
constraints in the database for like

00:03:52,739 --> 00:03:57,720
missing values and specific fields or

00:03:55,350 --> 00:04:00,890
what about non revision of our entity

00:03:57,720 --> 00:04:03,300
types currently out firm form doesn't

00:04:00,890 --> 00:04:05,940
care if the entity type is provision

00:04:03,300 --> 00:04:07,770
ball or not so they're like I've

00:04:05,940 --> 00:04:10,110
mentioned there's a core conversation

00:04:07,770 --> 00:04:14,010
and it's being considered for inclusion

00:04:10,110 --> 00:04:16,859
in core and for sure you are here sir

00:04:14,010 --> 00:04:19,230
welcome conflict

00:04:16,859 --> 00:04:21,630
it makes the concurrent editing possible

00:04:19,230 --> 00:04:23,400
we support all kinds of content entity

00:04:21,630 --> 00:04:24,560
types no matter their reasonable non

00:04:23,400 --> 00:04:28,250
revision of all

00:04:24,560 --> 00:04:30,680
and we like without to say if we haven't

00:04:28,250 --> 00:04:32,210
added support for confident et types the

00:04:30,680 --> 00:04:33,950
reason is that we mainly work with

00:04:32,210 --> 00:04:37,010
content density types as well as the

00:04:33,950 --> 00:04:39,889
most of them Drupal users at least we

00:04:37,010 --> 00:04:44,360
doing so that must not be necessary

00:04:39,889 --> 00:04:47,740
the fact it's built basically as an

00:04:44,360 --> 00:04:51,950
entity handle which you can exchange and

00:04:47,740 --> 00:04:54,560
adapt to your needs but basically it

00:04:51,950 --> 00:04:57,640
offers it registers a conflict entity

00:04:54,560 --> 00:05:00,680
builder in the entity form and then

00:04:57,640 --> 00:05:03,410
conflict detection is being performed

00:05:00,680 --> 00:05:05,930
using the trigger a comparison and for

00:05:03,410 --> 00:05:07,790
that we use three entities the one is

00:05:05,930 --> 00:05:10,430
the initial entity that was has been

00:05:07,790 --> 00:05:12,800
used to generate the form the other one

00:05:10,430 --> 00:05:15,919
is the entity that is being built from

00:05:12,800 --> 00:05:18,110
the current form videos and also the

00:05:15,919 --> 00:05:20,180
entity from the storage which might be

00:05:18,110 --> 00:05:22,010
already in on your work that's

00:05:20,180 --> 00:05:25,760
concurrent editing clear talking about

00:05:22,010 --> 00:05:29,330
so after that we offer some default

00:05:25,760 --> 00:05:32,060
autumn Arjun and we have introduced

00:05:29,330 --> 00:05:36,080
recently on an event system for extended

00:05:32,060 --> 00:05:38,990
conflict to discover infrastructure what

00:05:36,080 --> 00:05:42,560
we can album are there are fields that

00:05:38,990 --> 00:05:45,500
are not enabled in the currently used

00:05:42,560 --> 00:05:47,630
entity form displays fields that the

00:05:45,500 --> 00:05:49,220
current user doesn't have access to even

00:05:47,630 --> 00:05:51,260
if they're enabled in the form this day

00:05:49,220 --> 00:05:53,800
because they are not being shown and the

00:05:51,260 --> 00:05:55,520
user basically cannot change them

00:05:53,800 --> 00:05:58,150
translatable fields from other

00:05:55,520 --> 00:06:00,380
translations to make it possible that

00:05:58,150 --> 00:06:03,110
different translators edit different

00:06:00,380 --> 00:06:04,970
entity translations which hasn't be

00:06:03,110 --> 00:06:08,390
impossible in core until the

00:06:04,970 --> 00:06:10,669
introduction of conflict 2.6 we oughta

00:06:08,390 --> 00:06:13,280
merge also entity metadata so to change

00:06:10,669 --> 00:06:15,020
timestamp revision metadata and all

00:06:13,280 --> 00:06:19,060
kinds of stuff that actually happens

00:06:15,020 --> 00:06:22,550
under the quote in the entity area and

00:06:19,060 --> 00:06:24,110
at last we also mark huge the fields

00:06:22,550 --> 00:06:27,440
that have been changed in the current

00:06:24,110 --> 00:06:31,880
form or in the newest version but we do

00:06:27,440 --> 00:06:34,669
not merge such fields if they have been

00:06:31,880 --> 00:06:38,270
changed at both places why because this

00:06:34,669 --> 00:06:40,910
is actually a conflict so

00:06:38,270 --> 00:06:43,160
and the extended mechanism for conflict

00:06:40,910 --> 00:06:45,560
discovery and resolution is the event

00:06:43,160 --> 00:06:47,990
system that we use we have to event we

00:06:45,560 --> 00:06:50,180
have introduced to events for that first

00:06:47,990 --> 00:06:51,889
we fire the entity conflict discovery

00:06:50,180 --> 00:06:54,889
event where we have the three entities

00:06:51,889 --> 00:06:58,400
that I've talked about named here left

00:06:54,889 --> 00:07:01,160
right and base and we add also a context

00:06:58,400 --> 00:07:03,590
for example the form form state from

00:07:01,160 --> 00:07:05,900
this play and eventually you can add

00:07:03,590 --> 00:07:10,160
revision branch metadata the idea is

00:07:05,900 --> 00:07:12,830
that this system could be used also not

00:07:10,160 --> 00:07:16,210
only for concurrent editing but also for

00:07:12,830 --> 00:07:20,479
merging different revision branches so

00:07:16,210 --> 00:07:22,940
actually there is a issue on Drupal or

00:07:20,479 --> 00:07:25,340
about something like this and it's been

00:07:22,940 --> 00:07:27,860
made a patch out of conflict to import

00:07:25,340 --> 00:07:31,819
it in code this system this exact wave

00:07:27,860 --> 00:07:36,020
system so during that event we build a

00:07:31,819 --> 00:07:38,120
list of conflicting properties and after

00:07:36,020 --> 00:07:41,930
we are ready then we fire another event

00:07:38,120 --> 00:07:43,969
for automatic conflict resolution named

00:07:41,930 --> 00:07:46,699
entity conflict resolution event there

00:07:43,969 --> 00:07:48,830
we have the same as in the previous one

00:07:46,699 --> 00:07:50,449
but we have additional in the result

00:07:48,830 --> 00:07:53,570
entity on top of which we apply the

00:07:50,449 --> 00:07:56,360
changes and do you also have access to

00:07:53,570 --> 00:08:00,349
the conflict list from which we can

00:07:56,360 --> 00:08:04,490
remove the conflicting pets or fields

00:08:00,349 --> 00:08:08,090
after we've successfully resolve the

00:08:04,490 --> 00:08:13,430
conflict automatically or in some way

00:08:08,090 --> 00:08:16,340
semi automatically or whatever so we

00:08:13,430 --> 00:08:20,180
have basic support for manual resolution

00:08:16,340 --> 00:08:22,909
we have dialogue based conflict

00:08:20,180 --> 00:08:26,780
resolution and in one base diode based

00:08:22,909 --> 00:08:31,400
is mainly for in one nested in onhd

00:08:26,780 --> 00:08:34,930
forms we're like in a dialogue the user

00:08:31,400 --> 00:08:37,250
is offered with multiple steps to

00:08:34,930 --> 00:08:39,860
resolve the conflict for each of the

00:08:37,250 --> 00:08:43,400
entities or in wine based which is

00:08:39,860 --> 00:08:46,680
mainly for regular entity for

00:08:43,400 --> 00:08:49,140
however this is the work in progress it

00:08:46,680 --> 00:08:51,630
works for us but if you need like a

00:08:49,140 --> 00:08:56,760
better user interface then I'm going to

00:08:51,630 --> 00:08:59,610
meet your help something that has been

00:08:56,760 --> 00:09:02,250
suggested why or go for conflict but

00:08:59,610 --> 00:09:05,160
unfortunately I kevin have the time to

00:09:02,250 --> 00:09:08,250
work on that but I still want to find

00:09:05,160 --> 00:09:11,340
that time is to make it possible to

00:09:08,250 --> 00:09:12,090
autumn our text fields which defy

00:09:11,340 --> 00:09:14,700
writing

00:09:12,090 --> 00:09:19,320
thanks to this fiber and Jake very much

00:09:14,700 --> 00:09:21,510
for PHP it's being considered I've told

00:09:19,320 --> 00:09:24,780
you already four core important a page

00:09:21,510 --> 00:09:29,400
has been made and that's as part of the

00:09:24,780 --> 00:09:31,080
workflow initiative so after I've talked

00:09:29,400 --> 00:09:33,690
a little bit about that and just going

00:09:31,080 --> 00:09:39,000
to show it how it works

00:09:33,690 --> 00:09:42,810
I've enabled both just both of the

00:09:39,000 --> 00:09:45,840
modules on my day 7 eater Easter day 8 7

00:09:42,810 --> 00:09:48,510
installation and I'm walking with two

00:09:45,840 --> 00:09:52,170
different users Margaret and grace so I

00:09:48,510 --> 00:09:54,510
just go on the same entity forum and I

00:09:52,170 --> 00:09:57,930
make some changes for example the

00:09:54,510 --> 00:10:03,210
preparation time ray stinks it should

00:09:57,930 --> 00:10:05,430
take 20 minutes but no Margaret thinks

00:10:03,210 --> 00:10:09,120
it should take 20 minutes but racing's

00:10:05,430 --> 00:10:12,060
it rotated only 10 minutes so like we

00:10:09,120 --> 00:10:14,730
see when I exit the page and we enter

00:10:12,060 --> 00:10:17,730
the Edit form I can resume the editing

00:10:14,730 --> 00:10:21,750
the same will be offered to Margaret as

00:10:17,730 --> 00:10:24,959
well so when a resume here I have 20

00:10:21,750 --> 00:10:28,649
and here I have to have ten now when I

00:10:24,959 --> 00:10:30,540
save the form the other user could

00:10:28,649 --> 00:10:34,259
theoretically still edit the form like

00:10:30,540 --> 00:10:36,810
we see in the right corner right down

00:10:34,259 --> 00:10:39,569
corner how to save submissions are being

00:10:36,810 --> 00:10:42,420
triggered and now when I save there is

00:10:39,569 --> 00:10:45,600
conflict and I can either resolve the

00:10:42,420 --> 00:10:48,000
conflict or start over and if I want to

00:10:45,600 --> 00:10:50,399
resolve the conflict then I have this

00:10:48,000 --> 00:10:53,250
overview of the three versions that we

00:10:50,399 --> 00:10:56,399
had for the field and I can decide which

00:10:53,250 --> 00:11:00,660
one I have I want to have and just enter

00:10:56,399 --> 00:11:05,149
it or I could enter like value in

00:11:00,660 --> 00:11:08,519
between like for example 717 minutes and

00:11:05,149 --> 00:11:12,360
I have to confirm that I've reviewed

00:11:08,519 --> 00:11:16,860
this change and then after that I can

00:11:12,360 --> 00:11:18,860
save successfully so that's basically

00:11:16,860 --> 00:11:25,730
how to save and conflict work together

00:11:18,860 --> 00:11:25,730
in order to offer this editorial benefit

00:11:30,120 --> 00:11:38,320
[Applause]

00:11:43,170 --> 00:11:51,990
there was recent like I told you I the

00:11:49,050 --> 00:11:55,320
question was about some more complexes

00:11:51,990 --> 00:11:59,490
cases like when using paragraphs or next

00:11:55,320 --> 00:12:02,760
in line and reforms in general and we

00:11:59,490 --> 00:12:04,770
have our custom Enki inline model which

00:12:02,760 --> 00:12:08,250
is also no power and you're assuming

00:12:04,770 --> 00:12:10,830
it's a in a development state but we've

00:12:08,250 --> 00:12:12,750
tested it with it and it works perfectly

00:12:10,830 --> 00:12:15,570
there is some custom code that has to be

00:12:12,750 --> 00:12:17,790
added but it's just a old implementation

00:12:15,570 --> 00:12:21,480
and recently there was an issue on the

00:12:17,790 --> 00:12:24,090
issue of conflict 2.6 about paragraphs

00:12:21,480 --> 00:12:27,630
and somebody mission that it works when

00:12:24,090 --> 00:12:29,280
the paragraphs are open open but it

00:12:27,630 --> 00:12:30,870
doesn't work when they're closed I am

00:12:29,280 --> 00:12:32,250
not really sure how the cost

00:12:30,870 --> 00:12:35,370
functionality is implemented in

00:12:32,250 --> 00:12:37,230
paragraphs but it might be that's there

00:12:35,370 --> 00:12:39,480
you don't have an entity form and then

00:12:37,230 --> 00:12:42,330
it doesn't work so in that case I might

00:12:39,480 --> 00:12:44,580
need the support of the paragraphs

00:12:42,330 --> 00:12:47,490
maintainer because I'm not really aware

00:12:44,580 --> 00:12:49,320
of the internals of paragraphs but if

00:12:47,490 --> 00:12:52,500
they're willing to we can work together

00:12:49,320 --> 00:12:56,360
in order to make the module available

00:12:52,500 --> 00:12:56,360
for all paragraphs views guests

00:12:57,330 --> 00:13:03,360
it's also work when one user has

00:13:00,030 --> 00:13:07,220
multiple tabs oh sorry when one user has

00:13:03,360 --> 00:13:07,220
multiple tabs is happening the same

00:13:08,210 --> 00:13:15,890
for how to say for work for country yeah

00:13:12,730 --> 00:13:18,170
that doesn't really work correctly right

00:13:15,890 --> 00:13:21,680
now because you hear them do different

00:13:18,170 --> 00:13:24,110
submissions I'm not really sure how it

00:13:21,680 --> 00:13:27,620
will behave but there was a issue that

00:13:24,110 --> 00:13:30,470
we supported and I think it will be hard

00:13:27,620 --> 00:13:32,780
I think I might be possible might not

00:13:30,470 --> 00:13:35,710
but it will be hard I haven't thought on

00:13:32,780 --> 00:13:35,710
statistics Tuesdays

00:13:37,920 --> 00:13:47,069
leaffilter uses an entity port so does

00:13:43,920 --> 00:13:49,199
this work with layer builder I'm not

00:13:47,069 --> 00:13:49,680
familiar with the layer builder layout

00:13:49,199 --> 00:13:52,440
builder

00:13:49,680 --> 00:13:55,440
unfortunately so I cannot speak for that

00:13:52,440 --> 00:13:57,660
okay sorry probably what might be some

00:13:55,440 --> 00:14:00,690
people could tell that's not thirsty or

00:13:57,660 --> 00:14:03,480
something yes exactly and I will be all

00:14:00,690 --> 00:14:05,430
around so if you want to if there is

00:14:03,480 --> 00:14:07,199
something that doesn't work feel free to

00:14:05,430 --> 00:14:08,329
contact me and we can work it out

00:14:07,199 --> 00:14:11,540
together

00:14:08,329 --> 00:14:11,540
yes this

00:14:14,990 --> 00:14:18,860
so the question is if there are water

00:14:16,670 --> 00:14:21,410
fields yes sir it works with a water

00:14:18,860 --> 00:14:23,839
fields in order to spare time because I

00:14:21,410 --> 00:14:25,610
have only 20 minutes I've just shown one

00:14:23,839 --> 00:14:28,700
field but it works with every field

00:14:25,610 --> 00:14:32,660
actually so I can have conflicts and all

00:14:28,700 --> 00:14:36,040
the fields and still this in wine form

00:14:32,660 --> 00:14:36,040
will be home everywhere

00:14:40,890 --> 00:14:43,640
yes please

00:14:49,170 --> 00:15:12,799
I don't hear you sorry it works for all

00:15:01,319 --> 00:15:15,660
kinds of content tasty types yeah that

00:15:12,799 --> 00:15:17,910
there was a problem for because of that

00:15:15,660 --> 00:15:20,279
because it was defined the road for now

00:15:17,910 --> 00:15:23,369
that was defined so the controller

00:15:20,279 --> 00:15:25,470
directive and I made a new page for

00:15:23,369 --> 00:15:27,989
Drupal 8 and it was committed

00:15:25,470 --> 00:15:30,329
so we Drupal 883 workout of the gospel

00:15:27,989 --> 00:15:33,059
for know that it should work out of the

00:15:30,329 --> 00:15:34,919
box but there is also a page for that on

00:15:33,059 --> 00:15:37,649
the issue queue that you have to apply

00:15:34,919 --> 00:15:40,319
as well so this is a functionality that

00:15:37,649 --> 00:15:42,600
we will be supported maybe couple of

00:15:40,319 --> 00:15:44,809
weeks or you can support me and work

00:15:42,600 --> 00:15:44,809
with me

00:15:45,589 --> 00:15:51,239
thanks yes please again or first the

00:15:49,919 --> 00:15:54,439
other one because you already had

00:15:51,239 --> 00:15:54,439
question yes please

00:15:56,310 --> 00:16:01,000
layout builder the question was say to

00:15:58,810 --> 00:16:03,940
place previously I'm not aware of the

00:16:01,000 --> 00:16:06,210
way I would be ever so I don't know you

00:16:03,940 --> 00:16:06,210
please

00:16:10,560 --> 00:16:16,740
do you mean complete moderation

00:16:13,189 --> 00:16:18,689
unfortunately it doesn't the question

00:16:16,740 --> 00:16:21,540
was if it works with contact moderation

00:16:18,689 --> 00:16:23,550
and unfortunately it doesn't really work

00:16:21,540 --> 00:16:25,649
with content moderation but the problems

00:16:23,550 --> 00:16:27,689
are in completely moderation I recently

00:16:25,649 --> 00:16:29,639
created an issue and contact moderation

00:16:27,689 --> 00:16:31,199
for that but it's basically following

00:16:29,639 --> 00:16:34,079
editing the published version and not

00:16:31,199 --> 00:16:36,480
draft but I guess we might need to work

00:16:34,079 --> 00:16:38,939
with the content moderation people and

00:16:36,480 --> 00:16:42,209
developers in order to make it work

00:16:38,939 --> 00:16:44,220
between balls because that basically

00:16:42,209 --> 00:16:46,079
balls create rafts and it's just

00:16:44,220 --> 00:17:02,670
different way and that are different

00:16:46,079 --> 00:17:04,770
concepts so yes yes you have tested it

00:17:02,670 --> 00:17:06,900
with our name accessibility custom real

00:17:04,770 --> 00:17:09,689
time so as an if you have a forum where

00:17:06,900 --> 00:17:12,150
there is fields which have been a

00:17:09,689 --> 00:17:14,309
modulus defined like custom field type

00:17:12,150 --> 00:17:16,110
of the cost of widget we did work

00:17:14,309 --> 00:17:18,329
automatically those or would you need to

00:17:16,110 --> 00:17:20,760
do some grid I as a developer need to do

00:17:18,329 --> 00:17:22,439
some modifications or have some certain

00:17:20,760 --> 00:17:26,309
constraints they might feel tight to

00:17:22,439 --> 00:17:29,220
make it work I would say we have one of

00:17:26,309 --> 00:17:32,940
the most complex Drupal sites out there

00:17:29,220 --> 00:17:34,799
so with a lot of custom widgets core

00:17:32,940 --> 00:17:37,549
matters and everything then it's better

00:17:34,799 --> 00:17:37,549
field tested

00:17:38,490 --> 00:17:46,910
and the question was if we've tested it

00:17:41,040 --> 00:17:46,910
with custom fields and custom widgets

00:17:49,850 --> 00:17:53,320
any more questions

00:17:55,500 --> 00:18:02,100
anyone wait wait wait wait wait if you

00:17:59,820 --> 00:18:05,640
want to learn more about what we do at

00:18:02,100 --> 00:18:08,190
our company then I would like to invite

00:18:05,640 --> 00:18:12,230
you on Wednesday at another session from

00:18:08,190 --> 00:18:15,120
our company which starts at nine o'clock

00:18:12,230 --> 00:18:17,820
there are you are going to be see really

00:18:15,120 --> 00:18:21,450
amazing stuff about genetic and contact

00:18:17,820 --> 00:18:24,090
management systems and also please come

00:18:21,450 --> 00:18:27,000
to our booth we have ball brought an

00:18:24,090 --> 00:18:30,780
arcade machine and if you play pac-man

00:18:27,000 --> 00:18:37,220
you or any game and win the higher score

00:18:30,780 --> 00:18:39,030
you can win genetic analysis for free

00:18:37,220 --> 00:18:46,880
thank you

00:18:39,030 --> 00:18:46,880
[Applause]

00:18:51,180 --> 00:18:57,090
thank you that's funny useful if

00:18:53,560 --> 00:18:59,230
demonstration hi I've been looking at

00:18:57,090 --> 00:19:03,490
potential thirsty there's an issue to

00:18:59,230 --> 00:19:06,150
get a generic provision UI or provision

00:19:03,490 --> 00:19:12,210
routes in the core like the one year so

00:19:06,150 --> 00:19:12,210

YouTube URL: https://www.youtube.com/watch?v=eIj6P5mH3iU


