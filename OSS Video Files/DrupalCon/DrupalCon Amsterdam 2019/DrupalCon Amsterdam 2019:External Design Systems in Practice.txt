Title: DrupalCon Amsterdam 2019:External Design Systems in Practice
Publication date: 2019-10-29
Playlist: DrupalCon Amsterdam 2019
Description: 
	Room: Auditorium
Presenter: Brian Perry
Description: When developing a pattern library or design system that will be used in support of a Drupal project, a key decision must be made regarding where the design system should live. Conceptually, many agree that it should be an external dependency of a Drupal theme in order to promote reuse, but a large number of projects still embed the design system inside of the theme in order to simplify workflow and component integration.

While in the past I’ve occasionally found it difficult to justify developing a design system independently from Drupal, on a recent rebranding project I made the case to configure a workflow using this approach. At the start, our plan was to migrate 3 sites into Drupal 8. By the end of the project we ended up with a partial migration to Drupal 8, with two supporting sites still in WordPress - all under the same brand and using the exact same components. In the middle it became apparent that choosing to use an external design system up front allowed us to make decisions that would have otherwise been impossible, and had a major impact on our ability to still hit our planned launch date as the project evolved.

In reviewing this rebranding effort, we’ll take a closer look at our approach to a shared design system including:

* The structure of our design system repository
* Requiring the design system in your Drupal project as a composer dependency
* Workflow and managing releases
* Using Twig components in WordPress with the Timber Plugin
* Challenges and areas for future improvement

We'll also explore approaches to using a shared design system on decoupled Drupal projects, including:

* The structure of a design system used by both Drupal and React.
* Sharing styles between Drupal and React using CSS Modules.
* The role of a shared design system in projects that use multiple templating engines.

By the end of this session you will have a better understanding of when using an external design system could benefit your project, along with a clearer understanding of how this approach could be implemented - both in projects using Twig and a projects using a mix of templating engines.
Captions: 
	00:00:14,540 --> 00:00:19,100
all right I guess we'll get going thanks

00:00:17,120 --> 00:00:21,140
everybody for coming out this is

00:00:19,100 --> 00:00:23,180
external design systems and practice I

00:00:21,140 --> 00:00:25,400
was asked a couple minutes ago if I

00:00:23,180 --> 00:00:27,050
wanted to have everybody move up I feel

00:00:25,400 --> 00:00:28,490
like everybody who made it here at the

00:00:27,050 --> 00:00:29,270
end of the day deserves to sit wherever

00:00:28,490 --> 00:00:34,190
they want

00:00:29,270 --> 00:00:36,470
so congratulations yes that's right

00:00:34,190 --> 00:00:40,280
so there's a little link to the slides a

00:00:36,470 --> 00:00:43,100
bitly link external DS - AMS if you want

00:00:40,280 --> 00:00:43,460
the slides or some resources they're

00:00:43,100 --> 00:00:48,409
online

00:00:43,460 --> 00:00:49,850
so enjoy I am Brian Perry I'm a lead

00:00:48,409 --> 00:00:52,940
front-end developer at a company called

00:00:49,850 --> 00:00:56,900
bounteous I live in the Chicago suburbs

00:00:52,940 --> 00:01:00,010
in the US I think I've gotten past my

00:00:56,900 --> 00:01:02,720
jet lag but we'll find out right now and

00:01:00,010 --> 00:01:04,430
I'm lover of all things component based

00:01:02,720 --> 00:01:08,330
and component driven so building with

00:01:04,430 --> 00:01:10,190
components in Drupal and design systems

00:01:08,330 --> 00:01:13,760
and tools like pattern lab and storybook

00:01:10,190 --> 00:01:15,500
and increasingly building with component

00:01:13,760 --> 00:01:18,010
based JavaScript frameworks like react

00:01:15,500 --> 00:01:20,030
and I'm also a lover of all things

00:01:18,010 --> 00:01:21,170
Nintendo so if you want to track me down

00:01:20,030 --> 00:01:24,400
and talk about the cool games you're

00:01:21,170 --> 00:01:27,650
playing on your switch by all means I'm

00:01:24,400 --> 00:01:29,630
playing Fire Emblem and then also

00:01:27,650 --> 00:01:30,710
started return of the oh bird in on the

00:01:29,630 --> 00:01:34,100
flight out here which is like a murder

00:01:30,710 --> 00:01:36,110
mystery game it's really great and I'm

00:01:34,100 --> 00:01:38,000
available on the internet in a variety

00:01:36,110 --> 00:01:41,660
of places and would love to internet

00:01:38,000 --> 00:01:44,240
with you and as I mentioned I work at a

00:01:41,660 --> 00:01:46,130
company called bounteous first and

00:01:44,240 --> 00:01:48,020
foremost I want to thank them graciously

00:01:46,130 --> 00:01:50,720
for sending me out here a little bit

00:01:48,020 --> 00:01:54,170
more of a haul than usual coming out to

00:01:50,720 --> 00:01:56,930
Amsterdam we have offices throughout

00:01:54,170 --> 00:01:59,120
North America Drupal is one of a handful

00:01:56,930 --> 00:02:01,040
of things that we do but I get to work

00:01:59,120 --> 00:02:03,020
with a great Drupal team and learn so

00:02:01,040 --> 00:02:04,850
much from the folks that I work with

00:02:03,020 --> 00:02:07,250
we're often hiring so if you're looking

00:02:04,850 --> 00:02:08,390
to do you know great Drupal work get in

00:02:07,250 --> 00:02:11,810
touch and also if you're looking to have

00:02:08,390 --> 00:02:16,640
great Drupal work done I can get you in

00:02:11,810 --> 00:02:18,830
touch as well but if you happen to have

00:02:16,640 --> 00:02:21,110
if you know me or happen to have seen me

00:02:18,830 --> 00:02:22,489
speak you might be familiar with me

00:02:21,110 --> 00:02:26,749
working for a company called hs2

00:02:22,489 --> 00:02:28,430
solutions I did not quit hs2 solutions

00:02:26,749 --> 00:02:31,189
about a year ago rebranded

00:02:28,430 --> 00:02:32,299
as as baniyas and the reason I mentioned

00:02:31,189 --> 00:02:34,939
that is because it's kind of the

00:02:32,299 --> 00:02:37,459
jumping-off point into the first of a

00:02:34,939 --> 00:02:40,609
couple things we'll be focusing on in

00:02:37,459 --> 00:02:43,430
the time that we have so our rebranding

00:02:40,609 --> 00:02:45,950
process and specifically the things that

00:02:43,430 --> 00:02:47,510
having a what we call the design system

00:02:45,950 --> 00:02:50,329
repository that was an external

00:02:47,510 --> 00:02:52,099
dependency of the project what that

00:02:50,329 --> 00:02:55,819
brought to our rebranding and our

00:02:52,099 --> 00:02:57,439
rebuild and then later on after we look

00:02:55,819 --> 00:03:00,019
at this from more of a traditional CMS

00:02:57,439 --> 00:03:02,260
architecture the second half we'll look

00:03:00,019 --> 00:03:07,010
at some of these concepts applied to a

00:03:02,260 --> 00:03:10,489
progressively decoupled build as well so

00:03:07,010 --> 00:03:14,299
but starting with the rebranding so this

00:03:10,489 --> 00:03:16,819
is our old hs2 solutions website on the

00:03:14,299 --> 00:03:19,459
left and the new concept for a bounteous

00:03:16,819 --> 00:03:21,109
site on the right and we had a brand

00:03:19,459 --> 00:03:24,040
launch that was targeted for November

00:03:21,109 --> 00:03:26,269
5th 2018 just about a year ago and

00:03:24,040 --> 00:03:29,209
although it didn't feel like it to me

00:03:26,269 --> 00:03:32,000
necessarily leading the website rebuild

00:03:29,209 --> 00:03:33,979
effort the it was just the website was

00:03:32,000 --> 00:03:37,459
just part of a larger coordinated effort

00:03:33,979 --> 00:03:39,949
things like press releases and new

00:03:37,459 --> 00:03:44,510
business cards email addresses notifying

00:03:39,949 --> 00:03:47,229
our client base things like that and

00:03:44,510 --> 00:03:49,250
then also as part of this process

00:03:47,229 --> 00:03:52,250
contributing to why we were rebranding

00:03:49,250 --> 00:03:53,989
we had a number of acquisitions so there

00:03:52,250 --> 00:03:55,639
were a few different sites that we were

00:03:53,989 --> 00:03:58,939
migrating into our new Drupal 8 build

00:03:55,639 --> 00:04:01,909
the existing hs2 solution site was in

00:03:58,939 --> 00:04:04,449
Drupal 7 and then Luna metrics an

00:04:01,909 --> 00:04:07,250
infield digital both had WordPress sites

00:04:04,449 --> 00:04:09,709
we were specifically focusing on mostly

00:04:07,250 --> 00:04:12,739
the blog content especially Luna metrics

00:04:09,709 --> 00:04:14,150
they had years and years of great blog

00:04:12,739 --> 00:04:18,590
content that we wanted to be able to

00:04:14,150 --> 00:04:22,009
live on and Nate took the lead on the

00:04:18,590 --> 00:04:24,380
migrations so was working in in our new

00:04:22,009 --> 00:04:26,210
Drupal 8 repository working on

00:04:24,380 --> 00:04:30,580
migrations having that content land in

00:04:26,210 --> 00:04:33,409
this new instance and then meanwhile

00:04:30,580 --> 00:04:36,229
Leon on our XD team is starting to work

00:04:33,409 --> 00:04:38,510
on initial wireframes and early concepts

00:04:36,229 --> 00:04:40,490
of what this site could look like in

00:04:38,510 --> 00:04:41,750
sketch and sharing things in envision

00:04:40,490 --> 00:04:44,300
and I'm do

00:04:41,750 --> 00:04:47,360
my best to follow alongside him and do

00:04:44,300 --> 00:04:50,150
prototyping in the browser using pattern

00:04:47,360 --> 00:04:51,110
lab as a tool so you know seeing what

00:04:50,150 --> 00:04:54,110
things actually look like in a browser

00:04:51,110 --> 00:04:56,330
giving a chance to be hands-on with you

00:04:54,110 --> 00:04:58,700
know non-traditional device widths that

00:04:56,330 --> 00:05:03,260
we might not have wireframes for things

00:04:58,700 --> 00:05:06,260
like that and then as the the concept

00:05:03,260 --> 00:05:08,900
kind of solidifies jolene took the lead

00:05:06,260 --> 00:05:11,750
on higher fidelity prototypes but I

00:05:08,900 --> 00:05:14,180
continue to follow along in that pattern

00:05:11,750 --> 00:05:16,880
lab instance building out these concepts

00:05:14,180 --> 00:05:20,510
and some supporting components all in

00:05:16,880 --> 00:05:22,520
pattern lab so that kind of brings us to

00:05:20,510 --> 00:05:23,990
the point where we have this design

00:05:22,520 --> 00:05:26,810
system we're calling a design system

00:05:23,990 --> 00:05:28,760
repository with these prototypes and

00:05:26,810 --> 00:05:30,800
some components that we can reuse and

00:05:28,760 --> 00:05:33,200
then also the Drupal instance where we

00:05:30,800 --> 00:05:36,610
start to have content from the existing

00:05:33,200 --> 00:05:38,780
sites land in there so we need to

00:05:36,610 --> 00:05:40,780
consider exactly how we're gonna

00:05:38,780 --> 00:05:43,610
integrate those two things together and

00:05:40,780 --> 00:05:45,800
or what I'm gonna use kind of a somewhat

00:05:43,610 --> 00:05:49,640
ridiculous example to describe where we

00:05:45,800 --> 00:05:51,980
want to put the mustard so I also wasn't

00:05:49,640 --> 00:05:55,310
sure coming out here if if mayonnaise

00:05:51,980 --> 00:05:56,870
was just like a gross thing in the US

00:05:55,310 --> 00:05:59,900
but it's also a gross thing around here

00:05:56,870 --> 00:06:01,880
I've confirmed so but the the two kind

00:05:59,900 --> 00:06:04,670
of cases we'll be talking about here is

00:06:01,880 --> 00:06:06,050
the mustard Anna's case on the left-hand

00:06:04,670 --> 00:06:09,350
side there's the screenshot from a

00:06:06,050 --> 00:06:11,870
sketch comedy show one big jar with

00:06:09,350 --> 00:06:14,930
mustard and mayonnaise combined in one

00:06:11,870 --> 00:06:16,430
place versus having your mustard and

00:06:14,930 --> 00:06:18,800
your mayonnaise your condiments separate

00:06:16,430 --> 00:06:19,520
that you can choose to do with as you as

00:06:18,800 --> 00:06:23,270
you see fit

00:06:19,520 --> 00:06:26,150
so the combined mustard and mayonnaise

00:06:23,270 --> 00:06:29,200
approach is kind of what I had been

00:06:26,150 --> 00:06:31,460
doing on projects up into this point so

00:06:29,200 --> 00:06:33,700
pattern lab or some sort of pattern

00:06:31,460 --> 00:06:36,800
library tool embedded in a Drupal theme

00:06:33,700 --> 00:06:39,200
also pretty common in component based

00:06:36,800 --> 00:06:41,930
themes in the community even in the

00:06:39,200 --> 00:06:43,340
contribs face as well so there's some

00:06:41,930 --> 00:06:46,550
advantages and disadvantages to that

00:06:43,340 --> 00:06:48,740
approach it's theoretically easier for

00:06:46,550 --> 00:06:50,240
drupal to get at your components because

00:06:48,740 --> 00:06:52,460
they're right there in your theme in

00:06:50,240 --> 00:06:55,340
that approach in some ways that's also

00:06:52,460 --> 00:06:57,050
going to simplify the build process

00:06:55,340 --> 00:06:58,670
and for developers who might not be

00:06:57,050 --> 00:07:00,500
familiar with this component based

00:06:58,670 --> 00:07:01,760
approach it's a little bit easier for

00:07:00,500 --> 00:07:03,740
them to wrap their heads around and

00:07:01,760 --> 00:07:05,870
understand they look in the theme the

00:07:03,740 --> 00:07:08,840
theme things are there they can change

00:07:05,870 --> 00:07:11,990
them and see you know the intended

00:07:08,840 --> 00:07:13,700
effects but also at the same time having

00:07:11,990 --> 00:07:17,210
that tightly coupled like that it's

00:07:13,700 --> 00:07:20,120
prone to Drupal specific things finding

00:07:17,210 --> 00:07:23,270
their way into these components and it

00:07:20,120 --> 00:07:25,130
depends on your project and how this is

00:07:23,270 --> 00:07:28,480
going to be used whether or not that is

00:07:25,130 --> 00:07:32,120
actually a problem or not but it may be

00:07:28,480 --> 00:07:34,700
and then on the other side of keeping

00:07:32,120 --> 00:07:36,440
the projects independent that's kind of

00:07:34,700 --> 00:07:37,880
where we were at this point in time on

00:07:36,440 --> 00:07:40,160
this project we had that separate design

00:07:37,880 --> 00:07:43,040
system repository and a separate rupal

00:07:40,160 --> 00:07:45,170
repository and in theory that is going

00:07:43,040 --> 00:07:46,790
to promote reuse beyond just a single

00:07:45,170 --> 00:07:49,760
Drupal project that it's embedded in

00:07:46,790 --> 00:07:51,230
could be multiple Drupal projects or

00:07:49,760 --> 00:07:55,100
themes that she's done or potentially

00:07:51,230 --> 00:07:57,170
even beyond just Drupal so we had to

00:07:55,100 --> 00:07:58,310
come to a conclusion about exactly what

00:07:57,170 --> 00:08:01,490
we're gonna do where we're gonna put the

00:07:58,310 --> 00:08:03,200
the Mustard in this case and we decided

00:08:01,490 --> 00:08:06,920
to keep the the mustard and mayonnaise

00:08:03,200 --> 00:08:09,020
separates not this Heinz Mayo must which

00:08:06,920 --> 00:08:11,270
is actually a thing you can buy in u.s.

00:08:09,020 --> 00:08:12,710
grocery stores pre combined mayonnaise

00:08:11,270 --> 00:08:16,700
and mustard for people who are really

00:08:12,710 --> 00:08:20,440
busy apparently but some of the the

00:08:16,700 --> 00:08:22,820
rationale behind this decision again it

00:08:20,440 --> 00:08:26,630
potentially keeps the components more

00:08:22,820 --> 00:08:29,540
Drupal agnostic or CMS agnostic I think

00:08:26,630 --> 00:08:32,390
it also encourages prototyping so when

00:08:29,540 --> 00:08:34,640
things are tightly coupled within a

00:08:32,390 --> 00:08:36,470
Drupal theme I find that people tend to

00:08:34,640 --> 00:08:37,670
stand things up in Drupal to see what

00:08:36,470 --> 00:08:40,220
they might look like or what changes

00:08:37,670 --> 00:08:43,100
might look like and if it's a separate

00:08:40,220 --> 00:08:46,430
project with separate tooling I think

00:08:43,100 --> 00:08:48,260
people tend to you take advantage of

00:08:46,430 --> 00:08:50,870
lightweight prototyping more frequently

00:08:48,260 --> 00:08:52,070
and you know it already was a separate

00:08:50,870 --> 00:08:54,290
project at this point so it's kind of

00:08:52,070 --> 00:08:57,200
the path of least resistance some other

00:08:54,290 --> 00:08:58,910
gut feelings that go into it it's always

00:08:57,200 --> 00:09:01,730
kind of conceptually felt like the right

00:08:58,910 --> 00:09:05,180
approach to me even if it wasn't what I

00:09:01,730 --> 00:09:07,130
actually did and it was also advocated

00:09:05,180 --> 00:09:08,960
by many in the community whose opinions

00:09:07,130 --> 00:09:11,420
I trust which is a great

00:09:08,960 --> 00:09:14,300
and there was the suspicion that we

00:09:11,420 --> 00:09:16,490
might be able to reuse these components

00:09:14,300 --> 00:09:18,920
on other web projects related to our

00:09:16,490 --> 00:09:20,600
brand although there weren't any hard

00:09:18,920 --> 00:09:24,140
requirements at the start of this

00:09:20,600 --> 00:09:26,120
project and it also felt right for our

00:09:24,140 --> 00:09:28,100
company and the diverse skills of our

00:09:26,120 --> 00:09:29,510
company all these people are not

00:09:28,100 --> 00:09:31,370
developers and not all of them are

00:09:29,510 --> 00:09:33,380
front-end developers but many of them

00:09:31,370 --> 00:09:35,420
are and of those front-end developers

00:09:33,380 --> 00:09:37,730
some of them don't have experience with

00:09:35,420 --> 00:09:39,649
Drupal some of them specifically do not

00:09:37,730 --> 00:09:43,580
care about Drupal believe it or not here

00:09:39,649 --> 00:09:44,959
at Drupal con but having this set up in

00:09:43,580 --> 00:09:47,990
such a way that people who can just

00:09:44,959 --> 00:09:49,279
write good HTML CSS and JavaScript more

00:09:47,990 --> 00:09:50,690
front-end developers throughout our

00:09:49,279 --> 00:09:54,670
company could contribute to our website

00:09:50,690 --> 00:09:57,410
seemed like a really positive thing so

00:09:54,670 --> 00:09:59,209
now that we landed on that decision

00:09:57,410 --> 00:10:01,970
let's talk a little bit about how it's

00:09:59,209 --> 00:10:04,550
actually structured and how we include

00:10:01,970 --> 00:10:07,279
this dependency so in the design system

00:10:04,550 --> 00:10:09,260
repository we just so first off worth

00:10:07,279 --> 00:10:10,880
mentioning we were using the the PHP

00:10:09,260 --> 00:10:13,120
version of pattern lab this is about a

00:10:10,880 --> 00:10:15,350
year ago so it's a composer dependency

00:10:13,120 --> 00:10:18,560
in the design system just created a

00:10:15,350 --> 00:10:21,709
simple composer to a JSON file giving it

00:10:18,560 --> 00:10:24,740
a name a description and then the

00:10:21,709 --> 00:10:26,209
Installer type of design system which we

00:10:24,740 --> 00:10:27,410
you know essentially just made up in

00:10:26,209 --> 00:10:32,810
this case we'll see how that's used in a

00:10:27,410 --> 00:10:34,850
second and then in the Drupal project in

00:10:32,810 --> 00:10:37,880
the main composer JSON file had to do a

00:10:34,850 --> 00:10:41,810
couple things so we had to add in the

00:10:37,880 --> 00:10:44,300
repository section our bitbucket get

00:10:41,810 --> 00:10:47,990
linked in this case right next to

00:10:44,300 --> 00:10:51,470
packages drupal.org and then in the

00:10:47,990 --> 00:10:53,600
extra section here under we added the

00:10:51,470 --> 00:10:55,610
installer type of design system so that

00:10:53,600 --> 00:10:57,860
it can be aware of this design system

00:10:55,610 --> 00:11:00,950
type that we defined and then under

00:10:57,860 --> 00:11:03,140
installer paths we specify where

00:11:00,950 --> 00:11:06,529
something of a type design system is

00:11:03,140 --> 00:11:08,630
going to go so for a group Allah

00:11:06,529 --> 00:11:11,839
composer project you know it'll move the

00:11:08,630 --> 00:11:14,839
modules into modules contribs like that

00:11:11,839 --> 00:11:16,459
based on this as well oops we put it in

00:11:14,839 --> 00:11:17,000
a libraries directory inside of the

00:11:16,459 --> 00:11:18,529
theme

00:11:17,000 --> 00:11:20,900
hopefully indicating that it's you know

00:11:18,529 --> 00:11:22,430
a hands-off dependency a lot of other

00:11:20,900 --> 00:11:23,810
things we could have done there

00:11:22,430 --> 00:11:26,300
we looked at just keeping it in the

00:11:23,810 --> 00:11:28,279
vendor directory but found that it was

00:11:26,300 --> 00:11:30,350
in some cases challenging to reach deep

00:11:28,279 --> 00:11:32,960
into the vendor directory to get things

00:11:30,350 --> 00:11:35,750
like templates in a theme so that's

00:11:32,960 --> 00:11:39,560
where we landed on that and then that

00:11:35,750 --> 00:11:44,540
allows us to composer require the design

00:11:39,560 --> 00:11:46,100
system repository so leading up to the

00:11:44,540 --> 00:11:48,260
you know in kind of the pre-launch cycle

00:11:46,100 --> 00:11:51,830
we required things that dev thinks we're

00:11:48,260 --> 00:11:54,380
moving pretty fast and then also it

00:11:51,830 --> 00:11:56,810
allows us to in the Drupal project run

00:11:54,380 --> 00:11:59,750
composer updates so we have control as

00:11:56,810 --> 00:12:01,910
to when new and updated versions of the

00:11:59,750 --> 00:12:04,760
design system are going to be part of

00:12:01,910 --> 00:12:06,380
the theme and also we can tag releases

00:12:04,760 --> 00:12:08,270
in the design system so we can require

00:12:06,380 --> 00:12:12,490
at a specific release rollback to a

00:12:08,270 --> 00:12:14,839
release all that good stuff and then

00:12:12,490 --> 00:12:17,540
actually so now that we have the

00:12:14,839 --> 00:12:19,459
dependency available how we incorporate

00:12:17,540 --> 00:12:22,700
it into the theme if you're familiar

00:12:19,459 --> 00:12:24,110
with the component based theme approach

00:12:22,700 --> 00:12:26,990
there's probably nothing all that new

00:12:24,110 --> 00:12:28,820
here but in our libraries yamo file we

00:12:26,990 --> 00:12:31,940
created a global global library that had

00:12:28,820 --> 00:12:34,459
our compiled assets so a compiled CSS

00:12:31,940 --> 00:12:40,070
file our Java Script bundles from web

00:12:34,459 --> 00:12:43,550
pack and then using the components

00:12:40,070 --> 00:12:45,589
module created some twig namespaces so

00:12:43,550 --> 00:12:46,940
it could have access to the templates

00:12:45,589 --> 00:12:49,940
from our design system and also give us

00:12:46,940 --> 00:12:52,610
some shortcuts following kind of the

00:12:49,940 --> 00:12:54,800
structure of our naming convention not

00:12:52,610 --> 00:13:00,200
quite the default atomic design naming

00:12:54,800 --> 00:13:02,980
but in the neighborhood so now that we

00:13:00,200 --> 00:13:06,920
have the dependency available and

00:13:02,980 --> 00:13:08,770
incorporated into our theme workflow

00:13:06,920 --> 00:13:10,940
that we kind of fell into with the the

00:13:08,770 --> 00:13:14,690
folks that we had working on the project

00:13:10,940 --> 00:13:16,940
so we had Sean who can certainly do

00:13:14,690 --> 00:13:20,240
Drupal things but as another developer

00:13:16,940 --> 00:13:22,970
who I think is is often his best self

00:13:20,240 --> 00:13:27,230
writing great just general HTML CSS and

00:13:22,970 --> 00:13:28,579
JavaScript so he worked on a bunch of

00:13:27,230 --> 00:13:30,770
the remaining components in the design

00:13:28,579 --> 00:13:33,410
system in the design system repository

00:13:30,770 --> 00:13:36,050
so without him we probably wouldn't have

00:13:33,410 --> 00:13:38,510
had a theme but he only ended up having

00:13:36,050 --> 00:13:41,450
two commits in the drupal repository and

00:13:38,510 --> 00:13:43,370
then wait kind of played the middleman

00:13:41,450 --> 00:13:46,100
integrating these components into drupal

00:13:43,370 --> 00:13:49,519
so he was wiring up the design system

00:13:46,100 --> 00:13:52,040
components to content in drupal adding

00:13:49,519 --> 00:13:53,930
things to layouts and layout builder and

00:13:52,040 --> 00:13:57,079
most of his effort was in the drupal

00:13:53,930 --> 00:13:59,570
repository but he would you know make

00:13:57,079 --> 00:14:00,529
some changes in the design system if

00:13:59,570 --> 00:14:02,750
there were things that weren't

00:14:00,529 --> 00:14:04,640
considered on the drupal side or you

00:14:02,750 --> 00:14:07,220
know some refactoring to make his life a

00:14:04,640 --> 00:14:08,720
little bit easier and in general we

00:14:07,220 --> 00:14:10,010
found that that that workflow at least

00:14:08,720 --> 00:14:13,839
with the team that we have work work

00:14:10,010 --> 00:14:17,990
pretty nicely leading up to the launch

00:14:13,839 --> 00:14:20,450
so as is often the case in in in any

00:14:17,990 --> 00:14:23,300
project we found some scope related

00:14:20,450 --> 00:14:25,519
surprises as we went along but

00:14:23,300 --> 00:14:27,769
specifically ones that having this

00:14:25,519 --> 00:14:31,339
design system dependency opened up some

00:14:27,769 --> 00:14:33,980
really interesting possibilities so the

00:14:31,339 --> 00:14:36,500
first is the existing luna metrics site

00:14:33,980 --> 00:14:38,570
lunar metrics now bounteous offers

00:14:36,500 --> 00:14:40,790
trainings through north america for

00:14:38,570 --> 00:14:43,190
Google Analytics Google tag manager the

00:14:40,790 --> 00:14:44,329
general Google suite and they had a

00:14:43,190 --> 00:14:47,079
training section of their site that

00:14:44,329 --> 00:14:49,550
would list the upcoming trainings and

00:14:47,079 --> 00:14:52,130
also allow people to sign up and

00:14:49,550 --> 00:14:53,390
register and we came to the conclusion

00:14:52,130 --> 00:14:55,850
that we weren't going to be able to

00:14:53,390 --> 00:14:58,430
reimplementation ality in time for our

00:14:55,850 --> 00:15:00,860
date also because there were some

00:14:58,430 --> 00:15:04,820
changes and new features that were just

00:15:00,860 --> 00:15:07,459
recently added to the site so what we

00:15:04,820 --> 00:15:10,100
decided we were going to do is keep the

00:15:07,459 --> 00:15:13,579
WordPress site alive at a subdomain

00:15:10,100 --> 00:15:15,860
training bounty Escom and make it match

00:15:13,579 --> 00:15:18,980
the look and feel of our new Drupal 8

00:15:15,860 --> 00:15:20,660
site and I don't know that that would

00:15:18,980 --> 00:15:23,570
have really been a realistic option if

00:15:20,660 --> 00:15:26,480
we didn't have these components ready to

00:15:23,570 --> 00:15:28,160
go and be used in another system and I

00:15:26,480 --> 00:15:29,149
also don't know if it was would even be

00:15:28,160 --> 00:15:33,050
something that we would have considered

00:15:29,149 --> 00:15:34,279
in the first place so the WordPress

00:15:33,050 --> 00:15:37,940
integration we worked with a company

00:15:34,279 --> 00:15:40,459
called Walia creative to handle the this

00:15:37,940 --> 00:15:41,839
bri theming they did the initial theme

00:15:40,459 --> 00:15:42,769
for the luna metrics site so it's great

00:15:41,839 --> 00:15:45,350
to have people who are already familiar

00:15:42,769 --> 00:15:47,779
with what was there and they actually

00:15:45,350 --> 00:15:49,139
introduced us or at least me to the

00:15:47,779 --> 00:15:51,899
timber plugin

00:15:49,139 --> 00:15:55,230
for WordPress and that allows you to use

00:15:51,899 --> 00:15:56,489
twig in WordPress which is certainly

00:15:55,230 --> 00:15:59,339
handy given we had all these twig

00:15:56,489 --> 00:16:01,019
components I love their their slogan

00:15:59,339 --> 00:16:02,790
here because WordPress is awesome but

00:16:01,019 --> 00:16:04,609
the loop isn't which personally

00:16:02,790 --> 00:16:07,910
something I agree with

00:16:04,609 --> 00:16:09,959
so they created an initial prototype

00:16:07,910 --> 00:16:12,480
using the components from the design

00:16:09,959 --> 00:16:14,369
system and timber to stand things up

00:16:12,480 --> 00:16:15,629
pretty quickly and prove that we really

00:16:14,369 --> 00:16:18,569
were going to be able to create

00:16:15,629 --> 00:16:20,129
something that matches the look and feel

00:16:18,569 --> 00:16:24,389
of the Drupal 8 site that we were

00:16:20,129 --> 00:16:27,869
building so just a little bit on how

00:16:24,389 --> 00:16:31,709
that actually works so this is a look at

00:16:27,869 --> 00:16:34,439
the training landing page and there's a

00:16:31,709 --> 00:16:38,009
list of all the upcoming trainings of

00:16:34,439 --> 00:16:40,439
training items in this case then in the

00:16:38,009 --> 00:16:42,660
training module that PHP template here

00:16:40,439 --> 00:16:45,089
we've got a wrapping div with a parent

00:16:42,660 --> 00:16:47,389
class and then a for loop that goes

00:16:45,089 --> 00:16:50,429
through in this case course data and

00:16:47,389 --> 00:16:53,040
assembles these training elements

00:16:50,429 --> 00:16:55,980
specifying the event data that we want

00:16:53,040 --> 00:16:57,389
passing into an array here you know not

00:16:55,980 --> 00:16:59,249
unlike some of the things we might be

00:16:57,389 --> 00:17:02,239
assembling in a quick template or

00:16:59,249 --> 00:17:05,399
prepping things for a render array and

00:17:02,239 --> 00:17:07,769
then in the training element a PHP

00:17:05,399 --> 00:17:10,339
template we're just saying if there is

00:17:07,769 --> 00:17:12,240
data we're calling timber render

00:17:10,339 --> 00:17:14,549
specifying the template that we want to

00:17:12,240 --> 00:17:19,019
pass it through from the design system

00:17:14,549 --> 00:17:21,990
and passing in the data and that ends us

00:17:19,019 --> 00:17:24,870
giving us all of the upcoming trainings

00:17:21,990 --> 00:17:27,750
using the same components same twig

00:17:24,870 --> 00:17:29,490
components from the design system so we

00:17:27,750 --> 00:17:31,919
were able to create a version of the

00:17:29,490 --> 00:17:34,110
training page using you know keeping

00:17:31,919 --> 00:17:36,330
WordPress where it was something that

00:17:34,110 --> 00:17:37,850
really did match the look and feel for

00:17:36,330 --> 00:17:40,380
our main Drupal eight site really nicely

00:17:37,850 --> 00:17:42,269
included in the main navigation and

00:17:40,380 --> 00:17:44,010
everything if you're looking at the

00:17:42,269 --> 00:17:45,750
address bar obviously you'll know you're

00:17:44,010 --> 00:17:47,460
going someplace else and you should be

00:17:45,750 --> 00:17:49,679
looking at the address bar

00:17:47,460 --> 00:17:53,909
but hopefully visually it's pretty

00:17:49,679 --> 00:17:56,010
seamless and then another surprise

00:17:53,909 --> 00:17:58,980
really close to launch we found out that

00:17:56,010 --> 00:18:01,970
d-mac media in Toronto was also going to

00:17:58,980 --> 00:18:04,280
be joining the bounteous family

00:18:01,970 --> 00:18:07,370
and we wanted to rebrand their site as

00:18:04,280 --> 00:18:09,320
bounteous CA for a variety of reasons

00:18:07,370 --> 00:18:11,150
including the timeline we knew that this

00:18:09,320 --> 00:18:13,730
was going to be a smaller scale effort

00:18:11,150 --> 00:18:15,830
it wasn't going to match one-to-one but

00:18:13,730 --> 00:18:18,140
we still wanted to be able to have a lot

00:18:15,830 --> 00:18:21,260
of the elements of this new brand and

00:18:18,140 --> 00:18:22,850
having the the design system repository

00:18:21,260 --> 00:18:24,530
in this case also really helped the

00:18:22,850 --> 00:18:26,480
conversation the first call where we got

00:18:24,530 --> 00:18:27,800
the developers together I was able to

00:18:26,480 --> 00:18:29,960
say you know we have this repository

00:18:27,800 --> 00:18:31,820
calling it the design system here's

00:18:29,960 --> 00:18:34,550
what's in it here's the tools that are

00:18:31,820 --> 00:18:37,490
available and you can use that however

00:18:34,550 --> 00:18:41,000
you see fit to make this challenging

00:18:37,490 --> 00:18:43,670
timeline possible and ended up being a

00:18:41,000 --> 00:18:46,790
lot more of a kind of manual selective

00:18:43,670 --> 00:18:48,980
process picking and choosing classes and

00:18:46,790 --> 00:18:51,110
borrowing some markup there were some

00:18:48,980 --> 00:18:52,550
assets that they used wholesale but

00:18:51,110 --> 00:18:54,860
still gave us something that had a lot

00:18:52,550 --> 00:19:00,560
of the feel of our new brand and our new

00:18:54,860 --> 00:19:04,210
site so we we made our November 5th

00:19:00,560 --> 00:19:06,290
dates everybody took a very long nap and

00:19:04,210 --> 00:19:10,640
after that we kind of rolled into our

00:19:06,290 --> 00:19:12,740
post launch reality so at this point I

00:19:10,640 --> 00:19:14,540
am kind of ramping off of the day-to-day

00:19:12,740 --> 00:19:18,230
and other developers in this case kyle

00:19:14,540 --> 00:19:22,010
and steve are coming on to help out and

00:19:18,230 --> 00:19:24,110
at this point the majority of what its

00:19:22,010 --> 00:19:27,650
coming their way it's really drupal

00:19:24,110 --> 00:19:29,660
specific so you know bug fixes things

00:19:27,650 --> 00:19:31,280
that didn't make the initial scope but

00:19:29,660 --> 00:19:35,480
they're doing the vast majority of their

00:19:31,280 --> 00:19:36,560
work in drupal and you know putting

00:19:35,480 --> 00:19:39,080
words in their mouth a little bit here

00:19:36,560 --> 00:19:41,210
but you know faced with the design

00:19:39,080 --> 00:19:42,200
system that that dependency and the kind

00:19:41,210 --> 00:19:44,030
of slightly different set up here

00:19:42,200 --> 00:19:46,520
they're probably wondering you know why

00:19:44,030 --> 00:19:47,840
can't i just drupal things why can't i

00:19:46,520 --> 00:19:51,560
just reach into the theme why do i have

00:19:47,840 --> 00:19:52,790
to make a commit over here and pull in

00:19:51,560 --> 00:19:55,610
the composer dependency and all that

00:19:52,790 --> 00:19:58,820
good stuff so some lessons learned from

00:19:55,610 --> 00:20:01,130
that one is that you know documentation

00:19:58,820 --> 00:20:04,070
is is really important here i think we

00:20:01,130 --> 00:20:05,870
did a decent job of documenting the the

00:20:04,070 --> 00:20:08,180
how like what the process actually

00:20:05,870 --> 00:20:10,760
looked like where you make changes how

00:20:08,180 --> 00:20:12,380
you pull them in but in hindsight it

00:20:10,760 --> 00:20:13,490
really would have helped to have more

00:20:12,380 --> 00:20:17,330
around the

00:20:13,490 --> 00:20:18,919
so why are we taking this approach you

00:20:17,330 --> 00:20:21,020
know what advantages does it bring us

00:20:18,919 --> 00:20:23,570
what are the other contexts outside of

00:20:21,020 --> 00:20:25,039
Drupal that it's being used and you know

00:20:23,570 --> 00:20:26,630
what are some of the challenges that we

00:20:25,039 --> 00:20:28,669
envision I think that would have changed

00:20:26,630 --> 00:20:33,890
the conversation a little bit maybe

00:20:28,669 --> 00:20:35,149
reduce some frustration also became

00:20:33,890 --> 00:20:36,470
increasingly apparent that it was

00:20:35,149 --> 00:20:39,080
important to have a really efficient

00:20:36,470 --> 00:20:41,380
workflow to be able to experiment in the

00:20:39,080 --> 00:20:43,779
context of your particular CMS

00:20:41,380 --> 00:20:47,840
thankfully got this in place before

00:20:43,779 --> 00:20:50,029
others came on but in this case it was a

00:20:47,840 --> 00:20:51,890
pretty simple set of gulp tasks that

00:20:50,029 --> 00:20:54,649
copy things over so you can make changes

00:20:51,890 --> 00:20:56,270
locally see what they look like before

00:20:54,649 --> 00:20:59,320
committing them over to the design

00:20:56,270 --> 00:21:03,340
system since then saw some other

00:20:59,320 --> 00:21:07,399
approaches to this so there's a composer

00:21:03,340 --> 00:21:09,440
package that lets you do like local

00:21:07,399 --> 00:21:12,110
linking of a dependency so you can do

00:21:09,440 --> 00:21:15,230
local development and try out changes

00:21:12,110 --> 00:21:17,270
that way now we'd probably be using the

00:21:15,230 --> 00:21:21,350
node version of pattern lab and node has

00:21:17,270 --> 00:21:23,510
the NPM link feature which lets you sim

00:21:21,350 --> 00:21:25,970
link a version of a dependency and then

00:21:23,510 --> 00:21:27,890
swap back to the published version of a

00:21:25,970 --> 00:21:30,500
package so that's probably how I'd

00:21:27,890 --> 00:21:31,940
approach that we also found that it was

00:21:30,500 --> 00:21:33,620
increasingly important to be really

00:21:31,940 --> 00:21:35,149
strict about versioning we mentioned

00:21:33,620 --> 00:21:37,789
that we're kind of requiring a head

00:21:35,149 --> 00:21:40,010
leading up to launch past launch that

00:21:37,789 --> 00:21:42,169
obviously did not scale especially as we

00:21:40,010 --> 00:21:44,210
were juggling some pretty divergent

00:21:42,169 --> 00:21:46,580
branches with with new functionality so

00:21:44,210 --> 00:21:49,010
we really need needed to get better with

00:21:46,580 --> 00:21:51,649
tagging our releases and pull them in so

00:21:49,010 --> 00:21:53,690
that we prevented things that landed

00:21:51,649 --> 00:21:55,159
early in the design system for to make

00:21:53,690 --> 00:21:58,100
their way into the drupal repository

00:21:55,159 --> 00:22:00,649
unexpectedly um and all this is to say

00:21:58,100 --> 00:22:02,809
that this external approach does add

00:22:00,649 --> 00:22:04,909
some overhead so it's a you know a cost

00:22:02,809 --> 00:22:06,919
that you have to weigh I think for this

00:22:04,909 --> 00:22:10,220
project ADA it definitely had a

00:22:06,919 --> 00:22:11,990
worthwhile benefits and then kind of one

00:22:10,220 --> 00:22:14,149
other thing that we saw is we saw the

00:22:11,990 --> 00:22:17,149
lines between the CMS's blur in this

00:22:14,149 --> 00:22:20,240
case so take the training items and say

00:22:17,149 --> 00:22:22,639
that we added a hover effect

00:22:20,240 --> 00:22:23,870
kristan testing in QA and you know john

00:22:22,639 --> 00:22:26,149
and marketing who manages that the

00:22:23,870 --> 00:22:26,990
training sites you know they would

00:22:26,149 --> 00:22:28,160
expect

00:22:26,990 --> 00:22:30,590
if we take on a ticket for that the

00:22:28,160 --> 00:22:33,559
change that happens on the the Drupal

00:22:30,590 --> 00:22:36,080
homepage would also apply on the the

00:22:33,559 --> 00:22:37,640
training landing page in WordPress and

00:22:36,080 --> 00:22:39,890
we saw some cases where that that didn't

00:22:37,640 --> 00:22:41,600
happen did some kind of traditional

00:22:39,890 --> 00:22:44,390
WordPress they mainly get us across that

00:22:41,600 --> 00:22:46,550
finish line so after launch we came back

00:22:44,390 --> 00:22:48,650
and we factored things and used more of

00:22:46,550 --> 00:22:51,470
that the timber approach to be able to

00:22:48,650 --> 00:22:52,760
use the components as they stood and

00:22:51,470 --> 00:22:55,070
make it a little bit easier to pull in

00:22:52,760 --> 00:22:57,559
the design system dependency into

00:22:55,070 --> 00:22:59,270
WordPress so that more often than not

00:22:57,559 --> 00:23:05,390
you know one change would really apply

00:22:59,270 --> 00:23:07,429
in both cases so that's kind of an

00:23:05,390 --> 00:23:09,110
overview of that approach with

00:23:07,429 --> 00:23:12,230
traditional CMS and our rebranding

00:23:09,110 --> 00:23:13,550
efforts now with the remaining time that

00:23:12,230 --> 00:23:16,670
we have we'll talk a little bit about

00:23:13,550 --> 00:23:19,360
some of these concepts and attempting to

00:23:16,670 --> 00:23:21,700
apply them in a decoupled build

00:23:19,360 --> 00:23:24,590
specifically looking at situations where

00:23:21,700 --> 00:23:26,630
you're not sharing a template engine you

00:23:24,590 --> 00:23:31,040
can't just use twig everywhere

00:23:26,630 --> 00:23:32,780
necessarily so we're gonna look at a

00:23:31,040 --> 00:23:34,700
progressively decouple project at a

00:23:32,780 --> 00:23:39,800
pretty high level still an ongoing

00:23:34,700 --> 00:23:42,110
project but on the Drupal side we have a

00:23:39,800 --> 00:23:45,890
element of this is a traditional Drupal

00:23:42,110 --> 00:23:48,740
build but we're also providing api's to

00:23:45,890 --> 00:23:52,240
react default JSON API endpoints and

00:23:48,740 --> 00:23:55,730
also some custom JSON API endpoints and

00:23:52,240 --> 00:23:57,500
then on the react side it's consuming

00:23:55,730 --> 00:24:01,390
those Drupal api's and essentially

00:23:57,500 --> 00:24:04,160
providing an authenticated user portal

00:24:01,390 --> 00:24:07,610
so then the context of both things

00:24:04,160 --> 00:24:08,660
combined there's you know traditional

00:24:07,610 --> 00:24:12,500
Drupal content and then also a

00:24:08,660 --> 00:24:17,290
namespaced route owned by react and that

00:24:12,500 --> 00:24:20,750
user portal so that also prevents

00:24:17,290 --> 00:24:26,059
presents a number of different developer

00:24:20,750 --> 00:24:27,320
contacts here as well so there's Drupal

00:24:26,059 --> 00:24:30,500
developers and a portion of the Drupal

00:24:27,320 --> 00:24:32,710
implementation that really isn't going

00:24:30,500 --> 00:24:34,940
to be interacting with react at all on

00:24:32,710 --> 00:24:38,870
the react side we wanted to make sure

00:24:34,940 --> 00:24:40,909
that our react developers kind of had

00:24:38,870 --> 00:24:43,580
the development experience that they

00:24:40,909 --> 00:24:47,029
are used to so we wanted to make it easy

00:24:43,580 --> 00:24:49,250
for them to be able to develop in in

00:24:47,029 --> 00:24:50,960
isolation without having to spin up

00:24:49,250 --> 00:24:54,250
Drupal environment so some of that was

00:24:50,960 --> 00:24:57,200
accomplished through mocking services

00:24:54,250 --> 00:24:59,450
some of it was you know environment

00:24:57,200 --> 00:25:03,230
variables to use our development or

00:24:59,450 --> 00:25:04,370
staging Drupal environments as API is we

00:25:03,230 --> 00:25:06,889
also want to make sure they had their

00:25:04,370 --> 00:25:08,570
you know hot module replacement so their

00:25:06,889 --> 00:25:11,240
changes are reflected automatically in

00:25:08,570 --> 00:25:13,129
the browser but of course there is the

00:25:11,240 --> 00:25:15,289
very important context of the real-world

00:25:13,129 --> 00:25:17,240
integration of the portions for the site

00:25:15,289 --> 00:25:21,559
where a drupal and reactor working

00:25:17,240 --> 00:25:24,529
together and overlapping so then looking

00:25:21,559 --> 00:25:27,710
at templating in Styles Drupal obviously

00:25:24,529 --> 00:25:29,690
uses twig the Drupal portion of the

00:25:27,710 --> 00:25:33,740
project did have some of its own unique

00:25:29,690 --> 00:25:36,230
styles and components react is using JSX

00:25:33,740 --> 00:25:39,679
and did have some of its own unique

00:25:36,230 --> 00:25:41,629
styles and components but then in the

00:25:39,679 --> 00:25:46,429
overlap there were definitely global

00:25:41,629 --> 00:25:48,740
styles that applied everywhere but we

00:25:46,429 --> 00:25:50,600
did we were wondering initially if there

00:25:48,740 --> 00:25:52,549
were going to be a lot of components

00:25:50,600 --> 00:25:55,039
that we need to use in both places we

00:25:52,549 --> 00:25:57,559
found that there weren't too many of

00:25:55,039 --> 00:26:00,259
them and so far it really hasn't been

00:25:57,559 --> 00:26:01,789
enough that we've been willing to take

00:26:00,259 --> 00:26:03,919
on the effort of trying to tackle and

00:26:01,789 --> 00:26:06,799
solve that problem of literally using

00:26:03,919 --> 00:26:08,720
the same component in both places we'll

00:26:06,799 --> 00:26:11,960
talk a little bit about you know what we

00:26:08,720 --> 00:26:14,690
think that might look like but we still

00:26:11,960 --> 00:26:16,039
had a lot of styles that were shared

00:26:14,690 --> 00:26:18,559
between and we wanted to be able to use

00:26:16,039 --> 00:26:20,450
it in all of the different contexts so

00:26:18,559 --> 00:26:22,309
you know we started wondering if

00:26:20,450 --> 00:26:23,990
something like a design system something

00:26:22,309 --> 00:26:25,850
that lives in the middle could serve

00:26:23,990 --> 00:26:28,639
these projects and handle those global

00:26:25,850 --> 00:26:30,500
styles so we were considering how we

00:26:28,639 --> 00:26:33,830
might be able to approach that also

00:26:30,500 --> 00:26:37,970
around the same time the continued

00:26:33,830 --> 00:26:41,450
debate around CSS and j/s rages on as it

00:26:37,970 --> 00:26:43,909
does to this day but also around that

00:26:41,450 --> 00:26:47,929
time I was hearing a lot about CSS

00:26:43,909 --> 00:26:50,929
modules as an approach to this john

00:26:47,929 --> 00:26:53,360
alban had a great talk in at in Drupal

00:26:50,929 --> 00:26:54,560
con Seattle giving an overview of the

00:26:53,360 --> 00:26:56,180
CSS and J's solution

00:26:54,560 --> 00:26:59,750
but kind of zeroing in on some of the

00:26:56,180 --> 00:27:01,610
advantages of CSS modules Gatsby ships

00:26:59,750 --> 00:27:03,830
with CSS module support out of the box

00:27:01,610 --> 00:27:05,900
so it had the opportunity to use it in

00:27:03,830 --> 00:27:07,820
that context I think create react app

00:27:05,900 --> 00:27:12,440
also ships with the support for it now

00:27:07,820 --> 00:27:14,540
as well so just a little bit about CSS

00:27:12,440 --> 00:27:17,330
modules for anybody who might not be

00:27:14,540 --> 00:27:19,160
familiar with it it's it's not a package

00:27:17,330 --> 00:27:22,070
in the way something like styled

00:27:19,160 --> 00:27:25,040
components or a motion other popular CSS

00:27:22,070 --> 00:27:27,710
and j/s this case react libraries are

00:27:25,040 --> 00:27:30,320
it's something that's handled by the the

00:27:27,710 --> 00:27:32,600
build process and the bundler like web

00:27:30,320 --> 00:27:35,720
pack it scopes

00:27:32,600 --> 00:27:38,000
the styles locally by default and will

00:27:35,720 --> 00:27:39,590
look a little bit about you know what

00:27:38,000 --> 00:27:42,820
that means

00:27:39,590 --> 00:27:45,890
it also plays nicely with sass which was

00:27:42,820 --> 00:27:48,770
useful for our team and it has this nice

00:27:45,890 --> 00:27:50,290
super snarky logo with a module since

00:27:48,770 --> 00:27:53,290
the SS modules overflows the container

00:27:50,290 --> 00:27:53,290
haha

00:27:53,690 --> 00:27:59,240
so think about scope CSS we will just

00:27:57,770 --> 00:28:01,550
look at this little side project about

00:27:59,240 --> 00:28:05,630
static sites I created a while back

00:28:01,550 --> 00:28:09,250
these card components so here is a

00:28:05,630 --> 00:28:12,350
project card that module that s CSS file

00:28:09,250 --> 00:28:14,630
the actual Styles themselves not

00:28:12,350 --> 00:28:16,520
particularly important here but the

00:28:14,630 --> 00:28:18,980
general structure is the most relevant

00:28:16,520 --> 00:28:22,580
piece so we have the parent class of

00:28:18,980 --> 00:28:25,540
project card and then we have the you

00:28:22,580 --> 00:28:28,880
know title language description class

00:28:25,540 --> 00:28:30,890
we're also not explicitly using like a

00:28:28,880 --> 00:28:35,090
BEM naming convention here we certainly

00:28:30,890 --> 00:28:37,280
could if we want but the the component

00:28:35,090 --> 00:28:39,650
scoping is also going to handle some of

00:28:37,280 --> 00:28:43,760
that name spacing that sometimes people

00:28:39,650 --> 00:28:46,880
look to BEM for and then in the

00:28:43,760 --> 00:28:50,000
component in project car Jas here we're

00:28:46,880 --> 00:28:53,150
importing styles from that project card

00:28:50,000 --> 00:28:56,330
module dot CSS and that gives us a

00:28:53,150 --> 00:28:59,420
styles object that we can use in our JSX

00:28:56,330 --> 00:29:02,240
so you'll see that we have our our div

00:28:59,420 --> 00:29:04,190
and then the class name prop and at the

00:29:02,240 --> 00:29:06,950
top level we're passing in styles dot

00:29:04,190 --> 00:29:08,060
project card for that project card class

00:29:06,950 --> 00:29:11,530
and then unsurprised

00:29:08,060 --> 00:29:14,600
the styles that language styles title

00:29:11,530 --> 00:29:18,200
and then if we actually look in a

00:29:14,600 --> 00:29:20,210
browser and inspect this component what

00:29:18,200 --> 00:29:25,100
we get is this so there's a combination

00:29:20,210 --> 00:29:27,350
of the module name the class name and

00:29:25,100 --> 00:29:29,900
then that kind of unique string tacked

00:29:27,350 --> 00:29:32,300
on to the end and that's giving us a

00:29:29,900 --> 00:29:34,640
class that really is specific and scoped

00:29:32,300 --> 00:29:37,580
to this component it's not gonna leak

00:29:34,640 --> 00:29:40,160
out elsewhere you unless you did

00:29:37,580 --> 00:29:43,210
something crazy you can't also can't

00:29:40,160 --> 00:29:45,320
really reuse this class elsewhere either

00:29:43,210 --> 00:29:48,220
so it's nice that it gives us some nice

00:29:45,320 --> 00:29:53,480
encapsulated Styles to this component

00:29:48,220 --> 00:29:57,110
but also global CSS certainly has a home

00:29:53,480 --> 00:29:58,910
as well and it can work in concert

00:29:57,110 --> 00:30:01,550
nicely with this approach as well so

00:29:58,910 --> 00:30:04,550
this is a look if we were just using a

00:30:01,550 --> 00:30:06,710
traditional task partial doesn't have

00:30:04,550 --> 00:30:10,250
that dot module extension which what's

00:30:06,710 --> 00:30:12,140
helps webpack pick up on it so if we

00:30:10,250 --> 00:30:14,630
just say import project card debt as CSS

00:30:12,140 --> 00:30:18,710
that's going to give us these styles in

00:30:14,630 --> 00:30:20,360
the global namespace and then we can use

00:30:18,710 --> 00:30:21,770
the class name prop with just a string

00:30:20,360 --> 00:30:24,470
passed in rather than that object that

00:30:21,770 --> 00:30:27,140
we saw before and these classes are

00:30:24,470 --> 00:30:28,640
classes that we can use elsewhere and if

00:30:27,140 --> 00:30:30,740
they're written in such a way that they

00:30:28,640 --> 00:30:33,200
would cascade or apply outside of this

00:30:30,740 --> 00:30:35,570
component they would but obviously that

00:30:33,200 --> 00:30:39,550
that it helps quite a bit for styles

00:30:35,570 --> 00:30:39,550
that are in fact intended to be global

00:30:39,610 --> 00:30:46,070
so this is kind of the initial approach

00:30:43,040 --> 00:30:48,170
that we used with all this in mind we

00:30:46,070 --> 00:30:49,460
had separate repositories for kind of

00:30:48,170 --> 00:30:52,160
these different pieces these different

00:30:49,460 --> 00:30:54,500
contacts you'll notice that since I say

00:30:52,160 --> 00:30:59,210
initial approach it was not our final

00:30:54,500 --> 00:31:00,950
approach spoiler alert but so in the the

00:30:59,210 --> 00:31:03,410
design system repository we had a little

00:31:00,950 --> 00:31:05,660
gasp gatsby site that showed these

00:31:03,410 --> 00:31:08,630
global styles and context and then

00:31:05,660 --> 00:31:10,940
allowed the different projects to pull

00:31:08,630 --> 00:31:13,610
these in as NPM dependencies and use

00:31:10,940 --> 00:31:15,950
those partials that as they saw fit so

00:31:13,610 --> 00:31:18,200
on the react side things were imported

00:31:15,950 --> 00:31:20,900
in JavaScript with a mix of global and

00:31:18,200 --> 00:31:21,840
component scope and then there is also

00:31:20,900 --> 00:31:25,919
some project

00:31:21,840 --> 00:31:28,950
cific CSS as well and then on the drupal

00:31:25,919 --> 00:31:31,529
side still using webpack but creating

00:31:28,950 --> 00:31:33,390
one global CSS file that is a

00:31:31,529 --> 00:31:37,820
combination of design system partials

00:31:33,390 --> 00:31:40,580
and things that are specific to Drupal

00:31:37,820 --> 00:31:43,860
so just looking a little bit about how

00:31:40,580 --> 00:31:47,309
that was consumed on the Drupal side so

00:31:43,860 --> 00:31:49,919
in our package that JSON file here we

00:31:47,309 --> 00:31:51,929
have just our gate repository for the

00:31:49,919 --> 00:31:54,870
design system which allows us to pull

00:31:51,929 --> 00:31:56,309
that in and then web pack staffs loader

00:31:54,870 --> 00:31:59,190
I think in this case allows you to use a

00:31:56,309 --> 00:32:01,260
tilde for non-relative imports and

00:31:59,190 --> 00:32:05,039
that's what lets us in this example on

00:32:01,260 --> 00:32:08,779
the right here combine pulling in

00:32:05,039 --> 00:32:11,279
partials from node modules alongside

00:32:08,779 --> 00:32:12,659
partials from our Drupal theme as well

00:32:11,279 --> 00:32:16,820
so again we can kind of pick and choose

00:32:12,659 --> 00:32:16,820
the pieces that the Drupal theme needs

00:32:16,909 --> 00:32:21,809
so as I alluded to it was not all that

00:32:20,580 --> 00:32:23,039
this approach was not all that well

00:32:21,809 --> 00:32:24,360
received by the team once we started

00:32:23,039 --> 00:32:27,809
running with it

00:32:24,360 --> 00:32:29,730
managing dependencies in this way was

00:32:27,809 --> 00:32:31,679
that the team found it tedious so we had

00:32:29,730 --> 00:32:33,600
situations where we'd have to make

00:32:31,679 --> 00:32:35,429
multiple pull requests and different

00:32:33,600 --> 00:32:38,669
repositories and then have them all land

00:32:35,429 --> 00:32:40,710
at once for a single feature we

00:32:38,669 --> 00:32:42,450
definitely found situations where people

00:32:40,710 --> 00:32:45,149
knew the project were a little bit

00:32:42,450 --> 00:32:48,960
unclear on where their changes needed to

00:32:45,149 --> 00:32:50,760
be made another thing motivating some of

00:32:48,960 --> 00:32:53,460
these decisions was the you know trying

00:32:50,760 --> 00:32:54,870
to have that context for our react

00:32:53,460 --> 00:32:58,260
developers to be able to develop in

00:32:54,870 --> 00:32:59,610
isolation and it's not explicitly

00:32:58,260 --> 00:33:01,799
necessary for that to stand on its own

00:32:59,610 --> 00:33:05,250
for that to be possible even in a shared

00:33:01,799 --> 00:33:07,409
repository that certainly doable but

00:33:05,250 --> 00:33:09,000
also given its a progressively decoupled

00:33:07,409 --> 00:33:12,929
project at the end of the day it's

00:33:09,000 --> 00:33:18,240
really just one website so we adjusted

00:33:12,929 --> 00:33:20,669
to using a single repository so you know

00:33:18,240 --> 00:33:22,830
we still had those shared Styles but the

00:33:20,669 --> 00:33:25,620
different context could again pull in

00:33:22,830 --> 00:33:27,630
what they they need but also use the

00:33:25,620 --> 00:33:30,630
tooling that was appropriate in their

00:33:27,630 --> 00:33:32,970
their case so on the react side you CSS

00:33:30,630 --> 00:33:35,370
modules as we talked about and storybook

00:33:32,970 --> 00:33:37,890
as a place to be able to see

00:33:35,370 --> 00:33:43,230
components in context and then on the

00:33:37,890 --> 00:33:45,980
drupal side web pack to create our one

00:33:43,230 --> 00:33:50,250
CSS file and using pattern lab to show

00:33:45,980 --> 00:33:52,050
these things in context and then you'll

00:33:50,250 --> 00:33:55,350
also notice that this is a little bit

00:33:52,050 --> 00:33:57,540
closer to that combined mayonnaise and

00:33:55,350 --> 00:34:00,420
mustard approach the Mayo must that we

00:33:57,540 --> 00:34:03,390
saw before but it just happened to be

00:34:00,420 --> 00:34:08,370
what worked the best for this project in

00:34:03,390 --> 00:34:11,880
this particular group of people so a few

00:34:08,370 --> 00:34:14,730
few lessons learned so not really

00:34:11,880 --> 00:34:17,310
specific to this project but using a

00:34:14,730 --> 00:34:18,990
couple of different web pack builds that

00:34:17,310 --> 00:34:22,140
were similar in some ways but not

00:34:18,990 --> 00:34:23,400
exactly the same some quirks come out of

00:34:22,140 --> 00:34:26,790
that that can be a little bit of pain

00:34:23,400 --> 00:34:28,590
having things different we talked a lot

00:34:26,790 --> 00:34:30,270
about the different approaches to this

00:34:28,590 --> 00:34:30,690
dependency and it's really just a

00:34:30,270 --> 00:34:34,020
trade-off

00:34:30,690 --> 00:34:36,120
so having multiple repositories does

00:34:34,020 --> 00:34:37,710
introduce overhead but on the flip side

00:34:36,120 --> 00:34:41,130
we found that you know going back to

00:34:37,710 --> 00:34:42,930
having a single repository can open the

00:34:41,130 --> 00:34:45,660
doors to regression we saw more cases

00:34:42,930 --> 00:34:48,840
where you know change on the react side

00:34:45,660 --> 00:34:51,590
has unintended changes elsewhere and you

00:34:48,840 --> 00:34:56,010
have less control as to when these new

00:34:51,590 --> 00:34:58,530
global changes come in and then also you

00:34:56,010 --> 00:35:00,030
know the idea to not over design your

00:34:58,530 --> 00:35:01,850
design system and you know this would

00:35:00,030 --> 00:35:04,350
certainly in a lot of ways beyond me but

00:35:01,850 --> 00:35:06,840
you know looking back on this is this

00:35:04,350 --> 00:35:10,650
really a design system may be a little

00:35:06,840 --> 00:35:12,390
too too buzzword excited here it feels

00:35:10,650 --> 00:35:14,970
like something a little bit different

00:35:12,390 --> 00:35:17,520
shared styles or design tokens that

00:35:14,970 --> 00:35:19,260
we're using throughout the system that

00:35:17,520 --> 00:35:21,420
probably requires a different approach

00:35:19,260 --> 00:35:25,860
that hopefully we can recognize next

00:35:21,420 --> 00:35:28,380
time around a few things that we aren't

00:35:25,860 --> 00:35:31,860
doing quite yet so we touched on the

00:35:28,380 --> 00:35:35,370
fact that we're not actually reusing

00:35:31,860 --> 00:35:37,260
components in in both places mostly we

00:35:35,370 --> 00:35:40,790
just haven't found enough overlap to

00:35:37,260 --> 00:35:43,770
make the effort for that seem worthwhile

00:35:40,790 --> 00:35:47,520
we have seen some small opportunities

00:35:43,770 --> 00:35:49,230
for shared JavaScript and also haven't

00:35:47,520 --> 00:35:50,430
invested too heavily into that but the

00:35:49,230 --> 00:35:52,500
the main thing that we're doing when we

00:35:50,430 --> 00:35:54,450
identify that is trying to write

00:35:52,500 --> 00:35:57,690
JavaScript in those cases using as much

00:35:54,450 --> 00:35:59,310
vanilla JavaScript as possible which

00:35:57,690 --> 00:36:03,119
should at the very least make it easier

00:35:59,310 --> 00:36:06,750
to port some of that stuff over and then

00:36:03,119 --> 00:36:08,250
you know to actually truly reuse the

00:36:06,750 --> 00:36:10,920
components here it would probably

00:36:08,250 --> 00:36:12,599
require more JavaScript at the end of

00:36:10,920 --> 00:36:16,290
the day at this particular point I'm

00:36:12,599 --> 00:36:18,690
either more react on the Drupal side or

00:36:16,290 --> 00:36:20,849
building things using web components and

00:36:18,690 --> 00:36:23,730
using those web components both in

00:36:20,849 --> 00:36:24,930
Drupal and react although I understand

00:36:23,730 --> 00:36:27,119
there are potentially some changes

00:36:24,930 --> 00:36:30,930
challenges on the react side doing that

00:36:27,119 --> 00:36:32,339
but I don't have a ton of experience we

00:36:30,930 --> 00:36:35,940
also although everything's in one

00:36:32,339 --> 00:36:37,800
repository we're not taking like a

00:36:35,940 --> 00:36:41,010
traditional mono repo approach something

00:36:37,800 --> 00:36:44,130
like the the Gatsby mono repo for

00:36:41,010 --> 00:36:46,230
example where it has individual like

00:36:44,130 --> 00:36:50,250
packages published out of it that can be

00:36:46,230 --> 00:36:51,900
pulled in as needed or using a tool like

00:36:50,250 --> 00:36:53,490
learner I think is something that can

00:36:51,900 --> 00:36:56,520
help manage that sort of mono repo

00:36:53,490 --> 00:36:58,920
dependency on the node side so we

00:36:56,520 --> 00:37:01,650
haven't done that but as we mentioned

00:36:58,920 --> 00:37:03,420
before I think taking that approach

00:37:01,650 --> 00:37:05,520
would give us some more of that control

00:37:03,420 --> 00:37:09,240
that we lost down and we move to a

00:37:05,520 --> 00:37:12,359
single repository and we're using

00:37:09,240 --> 00:37:15,150
separate tools you know pattern library

00:37:12,359 --> 00:37:16,650
wise we're not using twig and react in a

00:37:15,150 --> 00:37:19,650
combined story book we did look at that

00:37:16,650 --> 00:37:22,319
initially but didn't find a path to

00:37:19,650 --> 00:37:23,940
making that happen since then there

00:37:22,319 --> 00:37:27,300
seems to have been a decent amount of

00:37:23,940 --> 00:37:29,550
movement in that area at a couple days

00:37:27,300 --> 00:37:31,109
over the summer some of the amazing

00:37:29,550 --> 00:37:33,540
folks gave a talk where there they were

00:37:31,109 --> 00:37:35,819
using twig in story book with the HTML

00:37:33,540 --> 00:37:37,589
version of storybook the latest version

00:37:35,819 --> 00:37:41,310
of the mul safai theme I believe also

00:37:37,589 --> 00:37:43,470
uses twig in story book and then the

00:37:41,310 --> 00:37:45,180
next release I believe of story book

00:37:43,470 --> 00:37:46,440
they're targeting the ability to use

00:37:45,180 --> 00:37:49,470
multiple I think what they call

00:37:46,440 --> 00:37:51,450
frameworks in a single story book so

00:37:49,470 --> 00:37:53,069
going forward this seems like it might

00:37:51,450 --> 00:37:54,660
be more of a viable option if we did

00:37:53,069 --> 00:37:57,480
want to have our twig components and our

00:37:54,660 --> 00:38:02,670
react components side-by-side where we

00:37:57,480 --> 00:38:05,190
can see them together so kind of come to

00:38:02,670 --> 00:38:06,630
in here but based on these couple of

00:38:05,190 --> 00:38:09,000
examples a question you might be asking

00:38:06,630 --> 00:38:11,970
yourself is you know what you should do

00:38:09,000 --> 00:38:14,039
if it makes sense to have a external

00:38:11,970 --> 00:38:17,579
design system dependency like this or

00:38:14,039 --> 00:38:18,900
where you should put your mustard so

00:38:17,579 --> 00:38:20,430
some things to consider you you know

00:38:18,900 --> 00:38:23,309
you're probably not surprised to hear

00:38:20,430 --> 00:38:28,380
that there really isn't a black and

00:38:23,309 --> 00:38:29,490
white all cases answer for this but you

00:38:28,380 --> 00:38:32,269
know ask yourself if there is going to

00:38:29,490 --> 00:38:34,650
be value in reusing these components

00:38:32,269 --> 00:38:36,420
sometimes though it might be hard to

00:38:34,650 --> 00:38:38,279
know for sure like in the rebranding

00:38:36,420 --> 00:38:39,660
effort we really didn't know that they

00:38:38,279 --> 00:38:41,029
were going to be reused as much as they

00:38:39,660 --> 00:38:43,619
were

00:38:41,029 --> 00:38:45,240
I'd also asked the role that prototyping

00:38:43,619 --> 00:38:49,289
you want prototyping to play on this

00:38:45,240 --> 00:38:52,859
project I think that having the pattern

00:38:49,289 --> 00:38:55,799
library design system less coupled can

00:38:52,859 --> 00:38:57,269
encourage rapid prototyping you also

00:38:55,799 --> 00:38:59,279
have to ask how it's going to fit into

00:38:57,269 --> 00:39:02,309
your team's workflow and your team's

00:38:59,279 --> 00:39:04,859
makeup is it gonna allow more people to

00:39:02,309 --> 00:39:08,849
contribute is it going to you know make

00:39:04,859 --> 00:39:10,109
it harder for folks to participate and a

00:39:08,849 --> 00:39:12,480
couple things that have come up in past

00:39:10,109 --> 00:39:14,160
versions of this talk so you know

00:39:12,480 --> 00:39:16,799
there's also the perspective of having

00:39:14,160 --> 00:39:18,930
this is a separate dependency as a way

00:39:16,799 --> 00:39:20,789
to help lock down your design system and

00:39:18,930 --> 00:39:22,109
give you more control over when things

00:39:20,789 --> 00:39:25,230
are published

00:39:22,109 --> 00:39:27,839
you know when new versions are pulled in

00:39:25,230 --> 00:39:29,640
things like that and then also from the

00:39:27,839 --> 00:39:33,210
perspective of taking this component

00:39:29,640 --> 00:39:35,839
based approach to building in Drupal you

00:39:33,210 --> 00:39:38,460
know there's a whole set of challenges

00:39:35,839 --> 00:39:40,380
potentially with that which would be a

00:39:38,460 --> 00:39:41,819
whole nother talk that many people have

00:39:40,380 --> 00:39:42,930
given but I at least wanted to

00:39:41,819 --> 00:39:47,069
acknowledge this you know this talk

00:39:42,930 --> 00:39:49,349
doesn't really go into it at all but

00:39:47,069 --> 00:39:52,740
yeah the the kind of at the end of the

00:39:49,349 --> 00:39:54,869
day one particular Mustard does not fit

00:39:52,740 --> 00:39:57,839
all there I found that there are cases

00:39:54,869 --> 00:39:59,730
where having a separate dependency can

00:39:57,839 --> 00:40:01,559
be a great advantage others where it

00:39:59,730 --> 00:40:03,390
might make more sense to have things a

00:40:01,559 --> 00:40:06,059
little bit more tightly coupled more of

00:40:03,390 --> 00:40:07,470
the the male must approach but at the

00:40:06,059 --> 00:40:09,900
end of the day you know we're all trying

00:40:07,470 --> 00:40:11,609
to make a sandwich with our preferred

00:40:09,900 --> 00:40:14,460
condiments and making sure it doesn't

00:40:11,609 --> 00:40:16,500
fall over so

00:40:14,460 --> 00:40:18,180
that's pretty much it

00:40:16,500 --> 00:40:22,770
definitely would encourage everybody to

00:40:18,180 --> 00:40:24,660
on Thursday go to the contribution day

00:40:22,770 --> 00:40:27,510
I'm sure you've seen this slide handful

00:40:24,660 --> 00:40:29,099
times already but always a fun effort

00:40:27,510 --> 00:40:31,980
great way to give back to the project

00:40:29,099 --> 00:40:35,339
and would love to have any feedback that

00:40:31,980 --> 00:40:36,990
you have on this session either the

00:40:35,339 --> 00:40:39,089
session itself you can go on the web

00:40:36,990 --> 00:40:42,109
sites and there's a survey or there's a

00:40:39,089 --> 00:40:45,630
survey for DrupalCon Amsterdam as well

00:40:42,109 --> 00:40:47,190
so we're pretty much up on time might be

00:40:45,630 --> 00:40:50,010
able to sneak in a few questions if

00:40:47,190 --> 00:40:52,770
anybody has any also I'll be around

00:40:50,010 --> 00:40:59,730
outside or at the conference happy to

00:40:52,770 --> 00:41:00,810
talk more about this stuff but thanks if

00:40:59,730 --> 00:41:09,570
anybody has questions we have these

00:41:00,810 --> 00:41:12,300
fancy boxes but I don't see any

00:41:09,570 --> 00:41:26,700
questions yet oh got one all right well

00:41:12,300 --> 00:41:29,190
get box yeah this is working instead of

00:41:26,700 --> 00:41:29,790
the Mayo in the mustard maybe mayo and

00:41:29,190 --> 00:41:33,930
ketchup

00:41:29,790 --> 00:41:37,440
that's better combination that's just

00:41:33,930 --> 00:41:39,780
because nuance in it like you said some

00:41:37,440 --> 00:41:42,180
in some cases it works in some cases it

00:41:39,780 --> 00:41:46,140
doesn't yep I haven't really seen a lot

00:41:42,180 --> 00:41:48,150
of cases where we would approach this in

00:41:46,140 --> 00:41:49,140
this way and my company in the places

00:41:48,150 --> 00:41:52,950
I've worked but it looks very

00:41:49,140 --> 00:41:55,710
interesting but what I would ask is how

00:41:52,950 --> 00:41:59,069
would you convince a company to invest

00:41:55,710 --> 00:42:00,869
in this approach because at the start

00:41:59,069 --> 00:42:03,030
it's a lot of overhead just like when

00:42:00,869 --> 00:42:04,920
you approach design systems in general

00:42:03,030 --> 00:42:06,900
because you have a lot of static content

00:42:04,920 --> 00:42:08,910
and static stuff that you have to add so

00:42:06,900 --> 00:42:12,089
how would you approach trying to

00:42:08,910 --> 00:42:14,280
convince or to tell the team that this

00:42:12,089 --> 00:42:16,640
is a good way to do it

00:42:14,280 --> 00:42:21,150
the things they would have to look at

00:42:16,640 --> 00:42:23,160
yeah honestly the the great question and

00:42:21,150 --> 00:42:24,510
also yeah maybe we can make this ketchup

00:42:23,160 --> 00:42:27,060
instead of mustard oh okay working on

00:42:24,510 --> 00:42:30,870
that the biggest thing for me is

00:42:27,060 --> 00:42:32,490
probably reuse if you are confident that

00:42:30,870 --> 00:42:35,430
they're gonna be situations where these

00:42:32,490 --> 00:42:37,050
things can be reused I think this

00:42:35,430 --> 00:42:39,660
approach makes a lot more sense so

00:42:37,050 --> 00:42:41,640
whether it be you know there's the more

00:42:39,660 --> 00:42:43,290
potentially extreme case of using these

00:42:41,640 --> 00:42:45,810
same components and rupal and WordPress

00:42:43,290 --> 00:42:49,890
but even you know having it not locked

00:42:45,810 --> 00:42:51,480
into one particular Drupal project so if

00:42:49,890 --> 00:42:54,660
there really are opportunities to reuse

00:42:51,480 --> 00:42:56,820
maybe on similar sites things like that

00:42:54,660 --> 00:42:59,550
it could make sense and then also from

00:42:56,820 --> 00:43:01,410
like an agency perspective as a way to

00:42:59,550 --> 00:43:03,000
build reusable components that you might

00:43:01,410 --> 00:43:04,500
be able to use on multiple projects

00:43:03,000 --> 00:43:07,590
there's definitely some some

00:43:04,500 --> 00:43:09,180
possibilities there but I would say that

00:43:07,590 --> 00:43:12,270
if there if you are really confident

00:43:09,180 --> 00:43:13,650
that these things will not be reused it

00:43:12,270 --> 00:43:16,340
probably doesn't make sense that's

00:43:13,650 --> 00:43:20,180
probably the biggest one that I consider

00:43:16,340 --> 00:43:24,860
awesome any other question another one

00:43:20,180 --> 00:43:24,860
back there if you can pass the the box

00:43:25,280 --> 00:43:31,080
thank you

00:43:27,390 --> 00:43:37,410
what do you use for a local environment

00:43:31,080 --> 00:43:39,240
for such mixture containers yeah I don't

00:43:37,410 --> 00:43:41,790
know that there was anything specific

00:43:39,240 --> 00:43:43,830
about our local environment that had to

00:43:41,790 --> 00:43:48,030
change based on this approach for our

00:43:43,830 --> 00:43:52,590
Drupal projects we use Drupal VM so

00:43:48,030 --> 00:43:53,820
that's what we used and yeah that's

00:43:52,590 --> 00:43:57,990
about it we didn't like spin up

00:43:53,820 --> 00:43:58,980
individual containers for the react side

00:43:57,990 --> 00:44:02,870
of things so people would be running

00:43:58,980 --> 00:44:11,310
node locally that's what we did anyway

00:44:02,870 --> 00:44:12,420
okay any other questions again it's the

00:44:11,310 --> 00:44:14,820
end of the day the fact that you guys

00:44:12,420 --> 00:44:15,390
even made it here is wonderful in and of

00:44:14,820 --> 00:44:17,910
itself

00:44:15,390 --> 00:44:19,050
all right thanks happy talk about s'more

00:44:17,910 --> 00:44:22,280
if you have other questions but thank

00:44:19,050 --> 00:44:22,280

YouTube URL: https://www.youtube.com/watch?v=69GOvYIY8p4


