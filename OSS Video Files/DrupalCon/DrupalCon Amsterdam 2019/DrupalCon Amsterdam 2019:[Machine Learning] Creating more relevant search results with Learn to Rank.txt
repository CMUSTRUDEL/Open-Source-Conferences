Title: DrupalCon Amsterdam 2019:[Machine Learning] Creating more relevant search results with Learn to Rank
Publication date: 2019-10-29
Playlist: DrupalCon Amsterdam 2019
Description: 
	Room: Auditorium
Performer:  Nick Veenhof, Mattias Michaux
Description: In this session I'll give you a summary of what machine learning is but more importantly how can you use it for a very common problem, namely the relevancy of your internal site search.

Recently, a client of ours shared with us their frustration that their website’s internal site search results didn’t display the most relevant items when searching for certain keywords. They had done their homework and provided us with a list of over 150 keywords and the expected corresponding search result performance. I'll take you on a roadshow how complex Search is and why we all came to rely on Google and came to expect similar quality from our other searches online. You can expect to learn new concepts.

You'll leave the session with a general understanding of not only machine learning in function of search/relevancy but also how search works and how you can use the toolkit of Solr/Lucene to improve your site search with minimal impact for your Drupal site. I'll try to keep it understandable for all audiences but do expect a high level of technical content and concepts.

More detailed information can already be found at https://dropsolid.com/en/blog/machine-learning-optimizing-search-results-drupal-apache-solr
Captions: 
	00:00:02,810 --> 00:00:10,019
sorry all right good afternoon hope

00:00:07,940 --> 00:00:13,920
everyone is seated or about to get

00:00:10,019 --> 00:00:16,470
seated I'm going to talk about creating

00:00:13,920 --> 00:00:19,650
more relevant search results with learn

00:00:16,470 --> 00:00:21,000
to rank my name is Nick fennhoff you can

00:00:19,650 --> 00:00:24,050
see there's like an and and an or

00:00:21,000 --> 00:00:27,330
together with mati asked me show it

00:00:24,050 --> 00:00:29,910
looks like a query but the reason for

00:00:27,330 --> 00:00:33,300
that is that my girlfriend could call me

00:00:29,910 --> 00:00:38,100
any moment to go to the hospital to get

00:00:33,300 --> 00:00:39,480
the baby so if I run away apologies

00:00:38,100 --> 00:00:41,190
apologies

00:00:39,480 --> 00:00:44,370
mati else is over there so if you see

00:00:41,190 --> 00:00:47,219
him running he can take over we practice

00:00:44,370 --> 00:00:48,690
this session we both of us practice it

00:00:47,219 --> 00:00:52,739
because I didn't know I was going to be

00:00:48,690 --> 00:00:55,559
here today so for that maybe a little

00:00:52,739 --> 00:00:57,270
bit of history about myself I've been

00:00:55,559 --> 00:01:00,180
involved with the Drupal project for

00:00:57,270 --> 00:01:05,030
over 12 years now currently work for a

00:01:00,180 --> 00:01:07,799
drop solid as CTO there and started with

00:01:05,030 --> 00:01:10,290
Apache Solr as an internship with our

00:01:07,799 --> 00:01:12,390
quia to port the Drupal 6 module to

00:01:10,290 --> 00:01:16,320
Drupal 7 then I got involved with Search

00:01:12,390 --> 00:01:19,229
API to merge the two projects so it has

00:01:16,320 --> 00:01:24,119
been like a pet project slash my job for

00:01:19,229 --> 00:01:25,680
quite a while now now before we can do

00:01:24,119 --> 00:01:26,970
any of this we need to understand a

00:01:25,680 --> 00:01:30,509
little bit of the basic concepts of

00:01:26,970 --> 00:01:34,229
machine learning I won't go into two

00:01:30,509 --> 00:01:36,329
scientifical depths depths but we'll get

00:01:34,229 --> 00:01:39,360
started by a little example so this is a

00:01:36,329 --> 00:01:41,759
Drupal a Doric search and I tried to

00:01:39,360 --> 00:01:44,250
search for install Apache I'm a new user

00:01:41,759 --> 00:01:47,070
I want to figure out how to run Drupal

00:01:44,250 --> 00:01:49,619
today there's this command and to run

00:01:47,070 --> 00:01:51,689
Drupal but most of the cases you still

00:01:49,619 --> 00:01:53,939
have a lamp stack but for some reason

00:01:51,689 --> 00:01:55,649
this is the first page the second result

00:01:53,939 --> 00:01:59,040
is actually about this session

00:01:55,649 --> 00:02:00,719
that's not very relevant because most

00:01:59,040 --> 00:02:02,939
likely when you search for install

00:02:00,719 --> 00:02:03,630
apache you're searching for something

00:02:02,939 --> 00:02:07,079
like this

00:02:03,630 --> 00:02:09,440
so how do you increase that relevancy

00:02:07,079 --> 00:02:12,420
how do you figure out in Drupal itself

00:02:09,440 --> 00:02:13,650
towards maybe solar which is like a

00:02:12,420 --> 00:02:16,440
back-end component

00:02:13,650 --> 00:02:21,269
that you can use to optimize this to put

00:02:16,440 --> 00:02:25,260
that result more to the top why was this

00:02:21,269 --> 00:02:27,209
created or why did this session happen I

00:02:25,260 --> 00:02:29,069
went to force them in the beginning of

00:02:27,209 --> 00:02:32,879
the year for stem is a massive open

00:02:29,069 --> 00:02:35,489
source conference sponsored and attended

00:02:32,879 --> 00:02:37,019
by people from Mozilla Google really

00:02:35,489 --> 00:02:40,170
believe a company small companies

00:02:37,019 --> 00:02:42,980
massive conference in Brussels and there

00:02:40,170 --> 00:02:47,069
was a presentation about learn to rank

00:02:42,980 --> 00:02:48,930
within solar and Lucene and at the same

00:02:47,069 --> 00:02:51,840
time or just a little later there was a

00:02:48,930 --> 00:02:54,540
case of a hospital in Belgium that came

00:02:51,840 --> 00:02:57,150
with a question uh-huh our search is

00:02:54,540 --> 00:03:00,269
really really bad it's made in Drupal

00:02:57,150 --> 00:03:02,760
but we don't know how to improve it and

00:03:00,269 --> 00:03:04,739
then there was a little tool with that

00:03:02,760 --> 00:03:06,540
presentation and forced them where you

00:03:04,739 --> 00:03:08,849
could get it connected to the solar

00:03:06,540 --> 00:03:11,040
index you can click on the results that

00:03:08,849 --> 00:03:14,430
were relevant or not relevant that's

00:03:11,040 --> 00:03:17,819
already a good start so this is a search

00:03:14,430 --> 00:03:23,790
results as is ideally these three float

00:03:17,819 --> 00:03:26,160
to the top that's the basics now we have

00:03:23,790 --> 00:03:28,049
the wonderful umami demo and I'll

00:03:26,160 --> 00:03:30,900
explain that also later and hopefully

00:03:28,049 --> 00:03:34,410
also do a live demo where we have

00:03:30,900 --> 00:03:35,879
imported a bunch of recipes because the

00:03:34,410 --> 00:03:37,590
default of umami it doesn't come with

00:03:35,879 --> 00:03:40,950
enough content to actually do the

00:03:37,590 --> 00:03:44,370
learning where we have chocolate cake as

00:03:40,950 --> 00:03:46,500
a use case and I don't want the hazelnut

00:03:44,370 --> 00:03:48,090
ice box case I actually just want the

00:03:46,500 --> 00:03:49,919
regular chocolate cake as the first

00:03:48,090 --> 00:03:52,739
result most likely that's what we want

00:03:49,919 --> 00:03:54,840
to search for this is a hypothetical

00:03:52,739 --> 00:03:57,239
example and you can translate that in

00:03:54,840 --> 00:04:02,209
your head to maybe another real-life

00:03:57,239 --> 00:04:08,650
example so here's the current situation

00:04:02,209 --> 00:04:12,069
let's see Jim

00:04:08,650 --> 00:04:14,830
so if we search for chocolate cake in

00:04:12,069 --> 00:04:17,229
this umami demo we see the hazelnuts the

00:04:14,830 --> 00:04:18,130
flourless etc there's also like a

00:04:17,229 --> 00:04:20,940
Halloween cake

00:04:18,130 --> 00:04:23,770
maybe that's very relevant for this week

00:04:20,940 --> 00:04:25,840
you can see in the module that we'll

00:04:23,770 --> 00:04:29,500
explain later you can actually rank

00:04:25,840 --> 00:04:31,270
these results from the site builders

00:04:29,500 --> 00:04:32,889
perspective it could also be maybe from

00:04:31,270 --> 00:04:36,550
the users perspective that's something

00:04:32,889 --> 00:04:40,180
that permission could solve so today

00:04:36,550 --> 00:04:42,669
this is not ideal maybe also to give you

00:04:40,180 --> 00:04:45,250
a bit of insight into the statistics I

00:04:42,669 --> 00:04:50,139
will dive into what it means also in a

00:04:45,250 --> 00:04:52,419
bit the top 10 results from everything

00:04:50,139 --> 00:04:54,310
that we ranked as may relevant or at

00:04:52,419 --> 00:04:55,690
least like that we want to see so that's

00:04:54,310 --> 00:04:59,560
the third number that you see on the

00:04:55,690 --> 00:05:01,660
screen 95 95 percent of these results

00:04:59,560 --> 00:05:04,870
appear in the top 10 but actually from

00:05:01,660 --> 00:05:09,460
the top 5 only 75 percent in that top

00:05:04,870 --> 00:05:12,639
five were rated as relevant so let's try

00:05:09,460 --> 00:05:14,289
in this session to improve that you

00:05:12,639 --> 00:05:16,419
could think of that chocolate cake that

00:05:14,289 --> 00:05:23,050
needs to flow to the top but then across

00:05:16,419 --> 00:05:26,470
all the results okay now back to some

00:05:23,050 --> 00:05:28,180
theory what is machine learning I don't

00:05:26,470 --> 00:05:29,740
know if I asked 10 people here in the

00:05:28,180 --> 00:05:33,430
room I probably would get 10 different

00:05:29,740 --> 00:05:34,840
answers and that's certainly valid if I

00:05:33,430 --> 00:05:36,490
do the same question with artificial

00:05:34,840 --> 00:05:39,789
intelligence I would even get more

00:05:36,490 --> 00:05:43,180
diverse answers but it's basically a

00:05:39,789 --> 00:05:47,199
subset of artificial intelligence where

00:05:43,180 --> 00:05:49,150
based on training data you get or you

00:05:47,199 --> 00:05:51,820
try to achieve a certain result and

00:05:49,150 --> 00:05:55,020
whatever is generated in the middle to

00:05:51,820 --> 00:05:58,479
get to that result is a model without

00:05:55,020 --> 00:06:02,770
if-else statements to explicitly do that

00:05:58,479 --> 00:06:05,830
task sounds simple for example facial

00:06:02,770 --> 00:06:09,190
recognition the CAPTCHA stuff that's all

00:06:05,830 --> 00:06:11,740
machine learning traditional machine

00:06:09,190 --> 00:06:14,229
learning and this is a bit how I got

00:06:11,740 --> 00:06:17,409
into this concept I also worked for

00:06:14,229 --> 00:06:21,070
Acquia in the past and also for Mahlum

00:06:17,409 --> 00:06:22,240
and malam was a anti-spam service for

00:06:21,070 --> 00:06:25,150
example if you

00:06:22,240 --> 00:06:27,729
type in some text and it was deemed in

00:06:25,150 --> 00:06:30,639
the training data as spammy it would be

00:06:27,729 --> 00:06:32,380
classified as a classifier and with a

00:06:30,639 --> 00:06:35,440
certain score and say oh nope

00:06:32,380 --> 00:06:37,770
you're probably spam this is very

00:06:35,440 --> 00:06:41,770
traditional prediction machine learning

00:06:37,770 --> 00:06:43,690
what we are going to try to do here is

00:06:41,770 --> 00:06:47,289
very different it's not that we get a

00:06:43,690 --> 00:06:50,919
set of keywords it's a single answer

00:06:47,289 --> 00:06:53,949
based on a training data set no you have

00:06:50,919 --> 00:06:56,110
a keyword there's results and based on

00:06:53,949 --> 00:06:59,800
the training data we know that certain

00:06:56,110 --> 00:07:02,470
results have a higher value so learning

00:06:59,800 --> 00:07:04,960
to rank as a subset or class of

00:07:02,470 --> 00:07:07,539
techniques to apply supervised machine

00:07:04,960 --> 00:07:11,289
learning because it's with training to

00:07:07,539 --> 00:07:13,539
solve these ranking problems okay so far

00:07:11,289 --> 00:07:14,889
so good yeah I won't go too much in that

00:07:13,539 --> 00:07:17,460
but you need to understand these basic

00:07:14,889 --> 00:07:20,289
concepts before we can go back to Drupal

00:07:17,460 --> 00:07:23,560
they did some research and they figure

00:07:20,289 --> 00:07:27,940
it out rank net and in the bottom you

00:07:23,560 --> 00:07:30,159
see an example on how Spotify does a

00:07:27,940 --> 00:07:32,530
match between you and someone that has a

00:07:30,159 --> 00:07:34,479
very similar music taste how can you

00:07:32,530 --> 00:07:36,190
figure that out and they try to find out

00:07:34,479 --> 00:07:38,860
what is the the techniques or what are

00:07:36,190 --> 00:07:42,969
the music's that you listen to what is

00:07:38,860 --> 00:07:44,860
the combined difference between you and

00:07:42,969 --> 00:07:48,699
someone else because that makes you

00:07:44,860 --> 00:07:51,400
similar and then maybe you can propose

00:07:48,699 --> 00:07:53,229
similar music tastes because they figure

00:07:51,400 --> 00:07:55,750
out that you have similar music tastes

00:07:53,229 --> 00:08:00,490
and they can propose music and so the

00:07:55,750 --> 00:08:03,219
inversions in ranking that's called but

00:08:00,490 --> 00:08:05,800
they did some more iterations agile

00:08:03,219 --> 00:08:08,289
working with lambda ranked random arts

00:08:05,800 --> 00:08:11,440
and and here it's actually where it

00:08:08,289 --> 00:08:14,500
becomes important for our use case in

00:08:11,440 --> 00:08:18,430
this case we're trying to figure out how

00:08:14,500 --> 00:08:22,020
much of the result is from the actual

00:08:18,430 --> 00:08:25,150
result when we try to replicate that

00:08:22,020 --> 00:08:28,210
specific search query so these arrows

00:08:25,150 --> 00:08:31,570
you see the the bigger the red arrow the

00:08:28,210 --> 00:08:33,190
higher the cost of putting it on top you

00:08:31,570 --> 00:08:35,350
don't need to know anything else for

00:08:33,190 --> 00:08:39,850
this this is the basics

00:08:35,350 --> 00:08:42,070
back to Drupal and solar how many of you

00:08:39,850 --> 00:08:45,070
have worked with a Drupal in combination

00:08:42,070 --> 00:08:47,710
of Search API or maybe in Drupal 7 the

00:08:45,070 --> 00:08:50,310
Apache Solr module I probably should

00:08:47,710 --> 00:08:52,690
reverse the question how many have not

00:08:50,310 --> 00:08:55,240
nobody everyone worked with that module

00:08:52,690 --> 00:08:55,960
awesome there's an issue in the core

00:08:55,240 --> 00:08:59,550
idsq

00:08:55,960 --> 00:09:01,960
to get it into core if you want to help

00:08:59,550 --> 00:09:05,740
but there's also like an elastic search

00:09:01,960 --> 00:09:07,660
module in practice and in theory it's

00:09:05,740 --> 00:09:12,070
the same it's all powered by Lucene and

00:09:07,660 --> 00:09:14,230
there's a couple of concepts so there's

00:09:12,070 --> 00:09:17,140
a document the document contains a field

00:09:14,230 --> 00:09:19,900
and the field is made of types the type

00:09:17,140 --> 00:09:22,480
could be a full text or a number or

00:09:19,900 --> 00:09:25,480
string and they're normalized by

00:09:22,480 --> 00:09:29,920
processors a processor could mean oh I

00:09:25,480 --> 00:09:32,920
see a word and I know that word can be

00:09:29,920 --> 00:09:34,480
split into two for example in Dutch

00:09:32,920 --> 00:09:37,090
there is the word called air alone

00:09:34,480 --> 00:09:40,390
supplement for those that understand

00:09:37,090 --> 00:09:43,900
Dutch and that words could be splits

00:09:40,390 --> 00:09:45,220
into air alone and supplement this is

00:09:43,900 --> 00:09:46,840
something quite tricky to do because

00:09:45,220 --> 00:09:49,810
then you get into the natural language

00:09:46,840 --> 00:09:52,840
processing stuff but that's why you use

00:09:49,810 --> 00:09:54,850
technologies like leucine to do this for

00:09:52,840 --> 00:09:57,550
you don't try to do this in Drupal it's

00:09:54,850 --> 00:09:59,440
not made for that all of this is stored

00:09:57,550 --> 00:10:02,530
in index and each document is by default

00:09:59,440 --> 00:10:04,690
standalone it's very different from a

00:10:02,530 --> 00:10:07,630
regular database because in a database

00:10:04,690 --> 00:10:10,000
you have connections or relations in

00:10:07,630 --> 00:10:13,840
this case you don't have relations you

00:10:10,000 --> 00:10:17,350
have a single document for a result this

00:10:13,840 --> 00:10:19,210
has a wild card there are cases in solar

00:10:17,350 --> 00:10:20,860
where you could refer or relate to

00:10:19,210 --> 00:10:22,840
things but then it could be used for

00:10:20,860 --> 00:10:27,520
personalized search which is a different

00:10:22,840 --> 00:10:30,280
use case 99% of you probably stayed with

00:10:27,520 --> 00:10:32,440
a single document now add this index is

00:10:30,280 --> 00:10:34,390
created so that tokens could be

00:10:32,440 --> 00:10:37,000
generated and then you have a reverse

00:10:34,390 --> 00:10:39,310
document based on a word you find out

00:10:37,000 --> 00:10:40,660
where is this word located ah this is

00:10:39,310 --> 00:10:45,640
the document and you return that

00:10:40,660 --> 00:10:48,860
document okay maybe to get some solar

00:10:45,640 --> 00:10:50,450
101 with the query

00:10:48,860 --> 00:10:54,140
I don't know if many of you looked into

00:10:50,450 --> 00:10:56,330
the solar lock or saw the rock query I

00:10:54,140 --> 00:10:59,480
suppose they're a little less Hance if I

00:10:56,330 --> 00:11:03,010
ask that so let's go through a generated

00:10:59,480 --> 00:11:05,600
query of Search API solar 8rx treated X

00:11:03,010 --> 00:11:08,180
in this case and we're searching for

00:11:05,600 --> 00:11:10,250
cookies so you can see there is a cube

00:11:08,180 --> 00:11:14,660
parameter and there's cookies a little

00:11:10,250 --> 00:11:17,810
bit further we limit the search purely

00:11:14,660 --> 00:11:21,710
on whatever we generate from a search

00:11:17,810 --> 00:11:23,690
api processor called rendered item but I

00:11:21,710 --> 00:11:27,320
also want to find out if it's in the

00:11:23,690 --> 00:11:29,780
title the rendered item is one in

00:11:27,320 --> 00:11:35,150
importance the title is 5 so it's 5 to 1

00:11:29,780 --> 00:11:37,490
ratio in importance okay so then we all

00:11:35,150 --> 00:11:40,310
could we can see how heavily we need to

00:11:37,490 --> 00:11:43,150
boost each item in search api solar

00:11:40,310 --> 00:11:47,870
treated X it was added into a separate

00:11:43,150 --> 00:11:50,870
item and then we also want to tell solar

00:11:47,870 --> 00:11:53,600
I want to return the ID the score which

00:11:50,870 --> 00:11:56,360
is how relevant it is and then I want to

00:11:53,600 --> 00:11:57,580
return the title and the URL all right

00:11:56,360 --> 00:12:00,170
so far so good

00:11:57,580 --> 00:12:03,200
because Search API Solar allows you to

00:12:00,170 --> 00:12:06,320
index multiple items or the same item

00:12:03,200 --> 00:12:09,530
multiple times in different indexes in

00:12:06,320 --> 00:12:12,980
the same solar core that's a little

00:12:09,530 --> 00:12:16,340
tricky you can limit it to say I only

00:12:12,980 --> 00:12:19,520
want to see this index from this hash

00:12:16,340 --> 00:12:21,500
even if you for example add all the in

00:12:19,520 --> 00:12:23,090
the all the contents in one solar core

00:12:21,500 --> 00:12:25,610
for development staging and production

00:12:23,090 --> 00:12:30,110
you could limit it for this sites and

00:12:25,610 --> 00:12:31,820
this specific environment the ideal case

00:12:30,110 --> 00:12:34,880
or the best practice is to have separate

00:12:31,820 --> 00:12:40,610
ones and then at the end ok I want to

00:12:34,880 --> 00:12:45,170
return 10 ok I'll still following so

00:12:40,610 --> 00:12:47,780
what is relevant I want you to think a

00:12:45,170 --> 00:12:51,500
bit about this concept if you start to

00:12:47,780 --> 00:12:54,440
create search pages in Drupal how do you

00:12:51,500 --> 00:12:56,720
configure Drupal to show you the most

00:12:54,440 --> 00:12:59,000
relevant results if you take the

00:12:56,720 --> 00:13:01,100
restaurants as an example when searching

00:12:59,000 --> 00:13:02,450
for a restaurant what is the criteria

00:13:01,100 --> 00:13:05,900
that makes a certain rest

00:13:02,450 --> 00:13:09,740
appealing I'm not entirely sure if

00:13:05,900 --> 00:13:10,970
someone can shouts an idea what kind of

00:13:09,740 --> 00:13:15,260
criteria would make a restaurant

00:13:10,970 --> 00:13:17,180
interesting I can I don't know if this

00:13:15,260 --> 00:13:26,510
will work there's like this microphone

00:13:17,180 --> 00:13:30,260
who wants to answer good food and how do

00:13:26,510 --> 00:13:33,350
you see good food in your index maybe

00:13:30,260 --> 00:13:35,000
with a rating and so the the rating of a

00:13:33,350 --> 00:13:38,210
restaurant could be a very interesting

00:13:35,000 --> 00:13:41,480
factor so if we do this with articles or

00:13:38,210 --> 00:13:44,060
recipes and pages this is an example

00:13:41,480 --> 00:13:46,190
that I made you could have the amount of

00:13:44,060 --> 00:13:48,890
tags for example how many ingredients

00:13:46,190 --> 00:13:50,990
you have and the freshness not

00:13:48,890 --> 00:13:54,110
necessarily the ingredient freshness but

00:13:50,990 --> 00:13:57,290
how more or how recent and our recipe

00:13:54,110 --> 00:13:59,300
was added you could have more for

00:13:57,290 --> 00:14:02,420
example how many comments were added to

00:13:59,300 --> 00:14:05,030
specific article or restaurants with all

00:14:02,420 --> 00:14:07,490
of these things are concepts that today

00:14:05,030 --> 00:14:10,610
in in Drupal and in solar and search api

00:14:07,490 --> 00:14:14,050
are not really thought of so you could

00:14:10,610 --> 00:14:18,730
use these factors as extra relevancy

00:14:14,050 --> 00:14:22,550
numbers to boost the relevancy now

00:14:18,730 --> 00:14:25,430
luckily and in solar 6.5 and 7 this was

00:14:22,550 --> 00:14:28,940
added and it's part of the whole concept

00:14:25,430 --> 00:14:30,800
of learning to rank you can add instead

00:14:28,940 --> 00:14:33,410
of just one score field you can add

00:14:30,800 --> 00:14:35,300
multiple score fields the regular score

00:14:33,410 --> 00:14:38,150
is based on a string within the whole

00:14:35,300 --> 00:14:40,520
text this are features and it's also

00:14:38,150 --> 00:14:42,590
called like this feature definitions to

00:14:40,520 --> 00:14:44,090
say okay this is from a description this

00:14:42,590 --> 00:14:45,950
is the amount of tags these are the

00:14:44,090 --> 00:14:47,690
amount of comments this is the rating or

00:14:45,950 --> 00:14:50,450
the common rating of a specific

00:14:47,690 --> 00:14:52,430
restaurant and you could even go in in a

00:14:50,450 --> 00:14:53,960
little bit craziness of doing ratings

00:14:52,430 --> 00:14:56,360
per individual and then have

00:14:53,960 --> 00:14:58,700
personalized search because their

00:14:56,360 --> 00:15:04,910
relevancy will be different based on an

00:14:58,700 --> 00:15:06,590
individual okay back to droop on the

00:15:04,910 --> 00:15:08,780
database best practices can be found at

00:15:06,590 --> 00:15:11,630
Drupal dot

00:15:08,780 --> 00:15:14,180
judge it's not really pronounceable just

00:15:11,630 --> 00:15:15,860
say Drupal search and the code could be

00:15:14,180 --> 00:15:17,899
found at github

00:15:15,860 --> 00:15:21,230
it was an effort or combined effort of

00:15:17,899 --> 00:15:23,689
the search ecosystem ain't a nurse and a

00:15:21,230 --> 00:15:28,069
couple of sprints in previous events to

00:15:23,689 --> 00:15:30,559
have an example but the database best

00:15:28,069 --> 00:15:33,319
practices are different from the solar

00:15:30,559 --> 00:15:36,649
best practices so let me give you a

00:15:33,319 --> 00:15:38,509
little sneak preview on what I think are

00:15:36,649 --> 00:15:43,730
the solar best practices it's ok to

00:15:38,509 --> 00:15:46,309
differ in opinion obviously but if you

00:15:43,730 --> 00:15:48,139
want to index your content you should

00:15:46,309 --> 00:15:50,569
probably stay as close as possible as to

00:15:48,139 --> 00:15:51,199
what Google does you index the whole

00:15:50,569 --> 00:15:53,089
content

00:15:51,199 --> 00:15:55,610
you probably shouldn't care too much

00:15:53,089 --> 00:15:58,239
about specific fields don't try to add

00:15:55,610 --> 00:16:01,999
fields into the index that are not

00:15:58,239 --> 00:16:04,670
visible in a sense except for maybe meta

00:16:01,999 --> 00:16:07,429
tags or those kind of things so there is

00:16:04,670 --> 00:16:09,679
an easy processor to say ok I want my

00:16:07,429 --> 00:16:12,350
rendered item I want to see it as

00:16:09,679 --> 00:16:15,259
anonymous and I want to have a specific

00:16:12,350 --> 00:16:17,540
View mode because maybe you don't want

00:16:15,259 --> 00:16:19,970
the labels to show if you use view modes

00:16:17,540 --> 00:16:23,179
in that way be careful of layout builder

00:16:19,970 --> 00:16:25,339
it can have unintended side effects or

00:16:23,179 --> 00:16:27,529
consequences if you do layout builder on

00:16:25,339 --> 00:16:30,889
an individual basis so you have

00:16:27,529 --> 00:16:33,529
different variations per content you

00:16:30,889 --> 00:16:35,899
won't be able to index blocks that you

00:16:33,529 --> 00:16:38,480
add true layout builder with the

00:16:35,899 --> 00:16:42,619
rendered item so this is a discussion

00:16:38,480 --> 00:16:44,749
you still need to have if Google can see

00:16:42,619 --> 00:16:47,449
your meta tags why shouldn't your index

00:16:44,749 --> 00:16:49,069
see your meta tags if you have keywords

00:16:47,449 --> 00:16:51,079
that you add even though maybe Google

00:16:49,069 --> 00:16:52,939
doesn't always go to those keywords or

00:16:51,079 --> 00:16:54,949
it doesn't support them anymore it could

00:16:52,939 --> 00:16:56,779
be a very important feature for you to

00:16:54,949 --> 00:16:59,929
say on these keywords I want to increase

00:16:56,779 --> 00:17:02,629
my relevancy so there's a patch for meta

00:16:59,929 --> 00:17:08,659
tag to enable it to be seen in search

00:17:02,629 --> 00:17:10,909
API in the index as a field ok all the

00:17:08,659 --> 00:17:14,389
other fields that you add are probably

00:17:10,909 --> 00:17:16,459
not very useful except for if you want

00:17:14,389 --> 00:17:19,459
to show them as facets as filters on the

00:17:16,459 --> 00:17:20,839
side or you want to use them in the

00:17:19,459 --> 00:17:25,250
future definition for the machine

00:17:20,839 --> 00:17:26,630
learning model ok and then in views

00:17:25,250 --> 00:17:29,090
itself there's a bunch of different

00:17:26,630 --> 00:17:29,539
parts modes I suggest you use the

00:17:29,090 --> 00:17:31,999
multiple

00:17:29,539 --> 00:17:36,289
with EDA smacks then you can get the

00:17:31,999 --> 00:17:37,820
query as I showed earlier yeah these are

00:17:36,289 --> 00:17:39,470
the fields that you went to certain to

00:17:37,820 --> 00:17:41,499
search for because you index those to

00:17:39,470 --> 00:17:44,299
add a title and aggregated fields

00:17:41,499 --> 00:17:47,659
there's a couple of processors you can

00:17:44,299 --> 00:17:49,850
enable the highlight filter to show

00:17:47,659 --> 00:17:52,460
little snippet and to show where the

00:17:49,850 --> 00:17:54,979
word was seen in that snippet there is

00:17:52,460 --> 00:17:57,320
HTML filter you don't want to get HTML

00:17:54,979 --> 00:18:01,220
into that index I'm not sure if you ever

00:17:57,320 --> 00:18:02,509
want to search for the strong tag not

00:18:01,220 --> 00:18:05,659
entirely sure what kind of site you're

00:18:02,509 --> 00:18:09,019
building then but probably not content

00:18:05,659 --> 00:18:11,119
itself and you could add maybe some type

00:18:09,019 --> 00:18:13,460
specific boosting to say that a blog is

00:18:11,119 --> 00:18:15,070
more important than a news article or

00:18:13,460 --> 00:18:17,239
vice versa

00:18:15,070 --> 00:18:19,639
and then there's a little trick enos

00:18:17,239 --> 00:18:22,909
there how to get that little snippets in

00:18:19,639 --> 00:18:25,309
that view to see okay solar did the

00:18:22,909 --> 00:18:28,009
query it probably found a documents and

00:18:25,309 --> 00:18:30,139
ADA can also show where in that document

00:18:28,009 --> 00:18:34,749
it found the keywords that you were

00:18:30,139 --> 00:18:37,849
relating to so here in search api index

00:18:34,749 --> 00:18:40,070
you enable these two boxes of retrieve

00:18:37,849 --> 00:18:44,869
result from solar get the highlighted

00:18:40,070 --> 00:18:46,879
snippets and then in the view you do

00:18:44,869 --> 00:18:48,229
another check box of create excerpt and

00:18:46,879 --> 00:18:51,739
even if there's no keys available

00:18:48,229 --> 00:18:53,450
otherwise you get empty snippets and

00:18:51,739 --> 00:18:57,679
then you say okay from which fields do

00:18:53,450 --> 00:19:00,590
you want them okay and then in the field

00:18:57,679 --> 00:19:04,639
itself you can add it to the search

00:19:00,590 --> 00:19:06,499
excerpt or to the fields you can even do

00:19:04,639 --> 00:19:09,950
okay instead of showing the whole View

00:19:06,499 --> 00:19:12,470
mode in there you do the fields in views

00:19:09,950 --> 00:19:14,539
and say okay I want to see the rendered

00:19:12,470 --> 00:19:16,759
item as a View mode as a field and then

00:19:14,539 --> 00:19:20,539
add the excerpt because it doesn't come

00:19:16,759 --> 00:19:22,039
from Drupal it comes from solar and then

00:19:20,539 --> 00:19:24,229
there's not a check box that you need to

00:19:22,039 --> 00:19:25,639
do use highlight field data I think this

00:19:24,229 --> 00:19:31,489
process probably should be simplified a

00:19:25,639 --> 00:19:33,859
bit but it's certainly possible so back

00:19:31,489 --> 00:19:39,649
to learn to rank we have the best

00:19:33,859 --> 00:19:41,450
practices of Drupal and solar and this

00:19:39,649 --> 00:19:43,040
is the case that I was talking about of

00:19:41,450 --> 00:19:44,990
the hospital

00:19:43,040 --> 00:19:47,920
where we did this training and say okay

00:19:44,990 --> 00:19:51,250
this is the keyword that I added and

00:19:47,920 --> 00:19:54,170
these are the results that the customer

00:19:51,250 --> 00:19:56,210
clicked on and say this is relevant this

00:19:54,170 --> 00:19:58,640
is not relevant this is relevant is not

00:19:56,210 --> 00:20:01,460
relevant and after a little while we

00:19:58,640 --> 00:20:04,250
were able to make statistics on how well

00:20:01,460 --> 00:20:06,880
our search index was performing so

00:20:04,250 --> 00:20:10,190
before applying these best practices and

00:20:06,880 --> 00:20:12,650
maybe to to add a little context there

00:20:10,190 --> 00:20:14,080
this was also Drupal 7 so it was a

00:20:12,650 --> 00:20:19,460
different case

00:20:14,080 --> 00:20:21,590
we were at 49% of items we expected in

00:20:19,460 --> 00:20:25,660
the top five that were actually in the

00:20:21,590 --> 00:20:28,760
top five so that's the recall parameter

00:20:25,660 --> 00:20:30,740
if we take a look at the top 10 it's

00:20:28,760 --> 00:20:35,000
actually quite disappointing because it

00:20:30,740 --> 00:20:37,810
only added temp like 6% of relevant

00:20:35,000 --> 00:20:40,430
results in the top 10 so that means that

00:20:37,810 --> 00:20:43,730
45% of the results that were expected

00:20:40,430 --> 00:20:45,500
didn't show up in the first page if you

00:20:43,730 --> 00:20:47,510
take a look at the statistics of google

00:20:45,500 --> 00:20:50,360
you probably just click away if you

00:20:47,510 --> 00:20:52,880
don't see it on the first page there's

00:20:50,360 --> 00:20:54,530
kind of like a probably a support group

00:20:52,880 --> 00:20:56,930
of people that actually click true page

00:20:54,530 --> 00:21:00,680
2 in Google it's the same on your Drupal

00:20:56,930 --> 00:21:03,080
site after the optimizations without the

00:21:00,680 --> 00:21:10,760
learning to rank algorithm we got it up

00:21:03,080 --> 00:21:12,680
to this is Google ok 285 sorry 76% so

00:21:10,760 --> 00:21:16,490
just by applying the best practices

00:21:12,680 --> 00:21:19,610
within Drupal and then for the top 10 it

00:21:16,490 --> 00:21:23,240
went up from 55 to 81% this is without

00:21:19,610 --> 00:21:25,190
the machine learning if we then apply

00:21:23,240 --> 00:21:28,220
the machine learning model we actually

00:21:25,190 --> 00:21:32,060
got up until 85 percent and in the top

00:21:28,220 --> 00:21:35,510
10 to 91 percent so that's quite a huge

00:21:32,060 --> 00:21:38,000
boost resulting in a lot less like a lot

00:21:35,510 --> 00:21:42,830
fewer support calls towards that

00:21:38,000 --> 00:21:45,830
Hospital so you can see there was a tool

00:21:42,830 --> 00:21:48,440
built for this inspired on the FOSDEM a

00:21:45,830 --> 00:21:52,610
talk that I saw where you see all these

00:21:48,440 --> 00:21:54,980
different parameters by keywords so in a

00:21:52,610 --> 00:21:57,590
sense you really go into depth into your

00:21:54,980 --> 00:22:00,890
search relevancy optimus

00:21:57,590 --> 00:22:02,720
by mathematics you don't say okay from

00:22:00,890 --> 00:22:04,730
this words I want to see that on the top

00:22:02,720 --> 00:22:06,950
from that word I want to see that on the

00:22:04,730 --> 00:22:09,200
top because if you start to optimize

00:22:06,950 --> 00:22:12,950
your search in that way you probably

00:22:09,200 --> 00:22:15,610
will get lost in the long run and it

00:22:12,950 --> 00:22:20,060
won't be very performance as well

00:22:15,610 --> 00:22:22,130
alright so as we saw the recall the

00:22:20,060 --> 00:22:25,310
recall should be nearing 100% as much as

00:22:22,130 --> 00:22:27,500
possible and so from all the relevant

00:22:25,310 --> 00:22:31,190
results that we ranked how many of those

00:22:27,500 --> 00:22:33,830
did I see on that first page if you want

00:22:31,190 --> 00:22:36,110
to find some more info or detail there's

00:22:33,830 --> 00:22:40,100
a lot of resources out there to show

00:22:36,110 --> 00:22:42,890
this so with this rank clip library that

00:22:40,100 --> 00:22:44,630
we had in the Tyrian in the beginning we

00:22:42,890 --> 00:22:47,930
can actually generate a model and it's

00:22:44,630 --> 00:22:49,340
natively supported by solar so you

00:22:47,930 --> 00:22:52,370
generate a JSON file

00:22:49,340 --> 00:22:54,560
and I'll show the model in a bit you

00:22:52,370 --> 00:22:57,440
just uploaded it to arrest API endpoint

00:22:54,560 --> 00:23:05,450
from solar itself and you can enable it

00:22:57,440 --> 00:23:09,610
so let's take a look at such a model I'm

00:23:05,450 --> 00:23:13,670
gonna scroll quite quickly this is a

00:23:09,610 --> 00:23:15,920
adjacent model from the umami site that

00:23:13,670 --> 00:23:18,290
was generated and the main thing that

00:23:15,920 --> 00:23:20,870
you should see is that there's no

00:23:18,290 --> 00:23:24,730
keywords in there there is no reference

00:23:20,870 --> 00:23:27,200
to any node ID entity ID whatever

00:23:24,730 --> 00:23:29,150
nothing like chocolate cake or any of

00:23:27,200 --> 00:23:33,250
that stuff the only thing that it shows

00:23:29,150 --> 00:23:36,050
is the features that we defined and the

00:23:33,250 --> 00:23:37,790
optimizations on how it generated that

00:23:36,050 --> 00:23:44,680
model towards those features depending

00:23:37,790 --> 00:23:44,680
on the result okay

00:23:48,390 --> 00:23:54,100
how do you then apply this in solar it's

00:23:51,610 --> 00:23:54,910
very simple you add one parameter to

00:23:54,100 --> 00:23:59,050
that same query

00:23:54,910 --> 00:24:01,450
it's the RQ parameter you say the query

00:23:59,050 --> 00:24:03,640
words chocolate cake for example and

00:24:01,450 --> 00:24:07,150
then the model that was generated by

00:24:03,640 --> 00:24:08,680
that tool and it essentially means that

00:24:07,150 --> 00:24:12,160
you are rearing

00:24:08,680 --> 00:24:15,760
from the hundred results that you see in

00:24:12,160 --> 00:24:18,550
the first 100 using the model yuri

00:24:15,760 --> 00:24:23,520
ranked those 100 results to then get a

00:24:18,550 --> 00:24:26,890
new result okay there's a drupal module

00:24:23,520 --> 00:24:29,980
out there also called search api ltr'

00:24:26,890 --> 00:24:32,170
where there's a dredge command to

00:24:29,980 --> 00:24:36,280
generate the model you can see the model

00:24:32,170 --> 00:24:38,440
in search api itself select it you can

00:24:36,280 --> 00:24:42,820
train it in the view itself to then

00:24:38,440 --> 00:24:46,750
re-rank your results in real time so how

00:24:42,820 --> 00:24:49,180
can you do this it's out there the hard

00:24:46,750 --> 00:24:51,790
part of this is to define the feature

00:24:49,180 --> 00:24:54,640
sets you need to figure out what your

00:24:51,790 --> 00:24:58,900
data model is and what is more relevant

00:24:54,640 --> 00:25:00,730
towards you there's no magic bullet so

00:24:58,900 --> 00:25:02,200
if we don't apply that in the results

00:25:00,730 --> 00:25:05,620
and we'll do that in the demo as well

00:25:02,200 --> 00:25:08,710
you can see that it from the three green

00:25:05,620 --> 00:25:10,960
ones that we selected and I used to be

00:25:08,710 --> 00:25:12,430
like a bit of everywhere they were

00:25:10,960 --> 00:25:13,080
floating or now they're floating to the

00:25:12,430 --> 00:25:17,170
top

00:25:13,080 --> 00:25:19,750
the really nice thing of this method is

00:25:17,170 --> 00:25:22,930
that it doesn't use any keywords so it

00:25:19,750 --> 00:25:26,230
also means that for future keywords it

00:25:22,930 --> 00:25:30,010
will still use that model and it will

00:25:26,230 --> 00:25:32,020
try to predict what is relevant so even

00:25:30,010 --> 00:25:34,450
if you only trained half of the keywords

00:25:32,020 --> 00:25:36,580
that you think are really important most

00:25:34,450 --> 00:25:41,800
likely the rest of your search results

00:25:36,580 --> 00:25:49,990
will also become more relevant all right

00:25:41,800 --> 00:25:52,089
let's see a little demo so here we see

00:25:49,990 --> 00:25:56,019
the statistics

00:25:52,089 --> 00:25:57,940
and I switched the numbers a little bit

00:25:56,019 --> 00:26:01,179
so the recall of the top five is on the

00:25:57,940 --> 00:26:04,179
left we see that from all the results

00:26:01,179 --> 00:26:06,369
that I deemed as important and you can

00:26:04,179 --> 00:26:10,979
see that here I added a whole bunch of

00:26:06,369 --> 00:26:13,710
words in this tool to see the statistics

00:26:10,979 --> 00:26:22,299
75% of those float to the top five

00:26:13,710 --> 00:26:25,809
alright so let's see about a chocolate

00:26:22,299 --> 00:26:29,649
cake so this far rose chocalate cake I

00:26:25,809 --> 00:26:32,830
think is very relevant a little Ajax

00:26:29,649 --> 00:26:35,349
eating happening and because it's

00:26:32,830 --> 00:26:39,700
Halloween I also think this creepy

00:26:35,349 --> 00:26:43,899
crawly cake is very relevant if we then

00:26:39,700 --> 00:26:45,909
go to the the back end of the Search API

00:26:43,899 --> 00:26:48,909
interface there you can see there's a

00:26:45,909 --> 00:26:52,929
little tab at it and here in the bottom

00:26:48,909 --> 00:26:55,269
is the the result of what I just

00:26:52,929 --> 00:26:58,149
selected as relevant or not relevant so

00:26:55,269 --> 00:27:00,190
you remember the machine learning parts

00:26:58,149 --> 00:27:02,529
where you have a training data set this

00:27:00,190 --> 00:27:07,299
is your training data set okay

00:27:02,529 --> 00:27:09,190
and I think here you see added as the

00:27:07,299 --> 00:27:11,950
last part it's a little tricky to see

00:27:09,190 --> 00:27:20,099
here chocolate cake has two results that

00:27:11,950 --> 00:27:24,190
were added all right so then with drush

00:27:20,099 --> 00:27:25,839
you can have a command and you define

00:27:24,190 --> 00:27:28,599
the view where you did the training

00:27:25,839 --> 00:27:30,729
because in search api or in Drupal

00:27:28,599 --> 00:27:33,820
itself you basically create search pages

00:27:30,729 --> 00:27:36,669
using views so the page that you want to

00:27:33,820 --> 00:27:39,369
trigger to train from or to create your

00:27:36,669 --> 00:27:41,799
model from is a view and a specific

00:27:39,369 --> 00:27:45,580
display ID so in this case it's the

00:27:41,799 --> 00:27:47,349
search view with page 1 it will execute

00:27:45,580 --> 00:27:49,509
all the searches that I did including

00:27:47,349 --> 00:27:51,489
chocolate cake it will look at the

00:27:49,509 --> 00:27:54,719
training data to see what is rather than

00:27:51,489 --> 00:27:56,619
what is not it will also look at the

00:27:54,719 --> 00:28:00,639
scores of all these different features

00:27:56,619 --> 00:28:04,780
and then send it to the rank clip Java

00:28:00,639 --> 00:28:07,720
library to generate the model

00:28:04,780 --> 00:28:11,850
upload it into a solar using the Drupal

00:28:07,720 --> 00:28:20,680
api's so now you can see it was added

00:28:11,850 --> 00:28:23,110
and if we take a look here you can see

00:28:20,680 --> 00:28:28,930
now there is like a second model sorry

00:28:23,110 --> 00:28:32,440
for the screen but I'll apply it and

00:28:28,930 --> 00:28:36,880
let's see if our chocolate cake has a

00:28:32,440 --> 00:28:39,040
different results all right very cool

00:28:36,880 --> 00:28:42,160
because now I have the flourless

00:28:39,040 --> 00:28:44,440
chocolate cake on top the creepy crawly

00:28:42,160 --> 00:28:46,030
cake in the second one you can see that

00:28:44,440 --> 00:28:48,430
even though I ranked it as highly

00:28:46,030 --> 00:28:51,370
relevant it doesn't go to all the top

00:28:48,430 --> 00:28:53,830
because it needs to take into account

00:28:51,370 --> 00:28:56,860
all the other search query words and so

00:28:53,830 --> 00:29:00,010
the model needs to be generic enough for

00:28:56,860 --> 00:29:03,490
all the keywords to work if we don't

00:29:00,010 --> 00:29:05,860
take a look at our statistics and this

00:29:03,490 --> 00:29:07,870
is a part that isn't in Drupal itself

00:29:05,860 --> 00:29:10,630
we're intending to also port it towards

00:29:07,870 --> 00:29:13,870
Drupal you can see that now from the top

00:29:10,630 --> 00:29:17,470
five results 91% of what we marked as

00:29:13,870 --> 00:29:20,020
relevant is in that top five if we take

00:29:17,470 --> 00:29:21,370
a look at the top 10 it doesn't really

00:29:20,020 --> 00:29:23,140
make any sense because we don't have

00:29:21,370 --> 00:29:27,130
enough results so it always will be

00:29:23,140 --> 00:29:28,690
close to 95 but for the top 5 this is

00:29:27,130 --> 00:29:31,420
very important and now we actually

00:29:28,690 --> 00:29:33,850
optimized the relevancy or we optimized

00:29:31,420 --> 00:29:36,540
the search pages based on feedback based

00:29:33,850 --> 00:29:39,490
on training data it created a model

00:29:36,540 --> 00:29:42,700
using that model weari rank the results

00:29:39,490 --> 00:29:47,080
real time to show more relevant results

00:29:42,700 --> 00:29:49,890
in the top 5 of our search pages so

00:29:47,080 --> 00:29:49,890
that's awesome

00:29:56,130 --> 00:30:00,940
now this tool also allows you to quickly

00:29:59,830 --> 00:30:04,380
check the difference

00:30:00,940 --> 00:30:12,850
so here chocolate cake was the original

00:30:04,380 --> 00:30:14,590
you can see the difference all right if

00:30:12,850 --> 00:30:16,360
we have time we can maybe try like a

00:30:14,590 --> 00:30:18,190
live keyword from someone in the

00:30:16,360 --> 00:30:24,760
audience if you don't believe me with

00:30:18,190 --> 00:30:27,730
this sample set but that's basically the

00:30:24,760 --> 00:30:29,380
conclusion so we really optimized the

00:30:27,730 --> 00:30:32,230
search relevancy of this thing so we

00:30:29,380 --> 00:30:35,230
compile this learning set we trained a

00:30:32,230 --> 00:30:38,350
model and uploaded this result to solar

00:30:35,230 --> 00:30:41,550
it's natively supported from solar 6.5

00:30:38,350 --> 00:30:46,330
if you want to use this inelastic search

00:30:41,550 --> 00:30:48,310
you have to recompile elasticsearch you

00:30:46,330 --> 00:30:50,770
have to enable certain flags to get it

00:30:48,310 --> 00:30:52,900
up and running so I'm not saying it's

00:30:50,770 --> 00:30:55,780
impossible but you will have to work a

00:30:52,900 --> 00:30:59,440
little bit against this stream we use

00:30:55,780 --> 00:31:02,140
this model during our queries in real

00:30:59,440 --> 00:31:04,720
time - rear rank these results based on

00:31:02,140 --> 00:31:06,910
the train model so we always ask what's

00:31:04,720 --> 00:31:11,200
the original search and then you change

00:31:06,910 --> 00:31:12,760
the the order but it's insanely

00:31:11,200 --> 00:31:15,190
important to have this good data model

00:31:12,760 --> 00:31:17,890
first which means getting all the basics

00:31:15,190 --> 00:31:20,140
on search covered first it doesn't make

00:31:17,890 --> 00:31:23,680
any sense to start doing this if you

00:31:20,140 --> 00:31:26,230
don't have that basic stuff covered so

00:31:23,680 --> 00:31:28,270
in in order to do that also for drop

00:31:26,230 --> 00:31:30,390
salt which is the company I work for we

00:31:28,270 --> 00:31:32,350
enable and allowed this out of the box

00:31:30,390 --> 00:31:34,120
for the machine learning there's a

00:31:32,350 --> 00:31:37,420
couple of switches you need to do in

00:31:34,120 --> 00:31:41,650
solar itself to get this end-to-end

00:31:37,420 --> 00:31:43,780
running and then obviously the company

00:31:41,650 --> 00:31:45,510
pitch if you got interested after this

00:31:43,780 --> 00:31:47,710
talk to work with us and we're hiring

00:31:45,510 --> 00:31:53,410
come see me if you're up for challenges

00:31:47,710 --> 00:31:55,090
like this now also help us move Drupal

00:31:53,410 --> 00:31:56,980
forwards you saw in the previous session

00:31:55,090 --> 00:31:59,680
in the keynote that there's a lot of

00:31:56,980 --> 00:32:02,410
help needed as drop solids we intend to

00:31:59,680 --> 00:32:03,870
do our part there's a little survey you

00:32:02,410 --> 00:32:06,480
can fill in and

00:32:03,870 --> 00:32:09,779
in order like as an exchange we will

00:32:06,480 --> 00:32:13,080
donate 15 minutes of time to a core

00:32:09,779 --> 00:32:14,039
contributor by paying someone those 15

00:32:13,080 --> 00:32:17,669
minutes

00:32:14,039 --> 00:32:21,330
I think the counter is like above 1000

00:32:17,669 --> 00:32:22,559
minutes already and then I'm also part

00:32:21,330 --> 00:32:24,659
of the organizing team of Drupal

00:32:22,559 --> 00:32:27,440
developer days it will happen from 6:00

00:32:24,659 --> 00:32:30,270
to tenth of April in 2020

00:32:27,440 --> 00:32:33,360
maybe we can all sprint together on

00:32:30,270 --> 00:32:37,200
search related items or on other related

00:32:33,360 --> 00:32:40,649
initiatives but it's in our hometown so

00:32:37,200 --> 00:32:42,330
hope to see you there and then also

00:32:40,649 --> 00:32:44,730
tonight there is a splash Awards I'm

00:32:42,330 --> 00:32:48,090
also part of this initiative so I'm also

00:32:44,730 --> 00:32:50,520
hoping to see all of you there or maybe

00:32:48,090 --> 00:32:51,539
some of you already enter the case where

00:32:50,520 --> 00:32:54,210
maybe you could win

00:32:51,539 --> 00:32:56,909
I was also reminded by Bob is that there

00:32:54,210 --> 00:32:58,049
is a dinner for strangers tonight and I

00:32:56,909 --> 00:33:02,399
think you can still sign up

00:32:58,049 --> 00:33:05,460
he's the green person over there sign up

00:33:02,399 --> 00:33:07,770
before 5:00 so with that we still have

00:33:05,460 --> 00:33:09,390
around like 10 minutes each left so I

00:33:07,770 --> 00:33:12,270
will open up the floor for some

00:33:09,390 --> 00:33:14,880
questions if there's any we have these

00:33:12,270 --> 00:33:21,149
little boxes that I can't row that

00:33:14,880 --> 00:33:22,890
feature has speakers okay there's

00:33:21,149 --> 00:33:24,870
another box over there so you can throw

00:33:22,890 --> 00:33:29,250
it already to the next person has a

00:33:24,870 --> 00:33:33,299
question yeah question there so this is

00:33:29,250 --> 00:33:36,360
just rearranging the position it's not

00:33:33,299 --> 00:33:38,370
filtering the data these models correct

00:33:36,360 --> 00:33:43,010
so you will always have the same data it

00:33:38,370 --> 00:33:43,010
will just rewrite as it says the data

00:33:43,309 --> 00:33:51,860
maybe the other box if yeah there's

00:33:46,140 --> 00:33:51,860
another I just throw it to some hands

00:33:57,350 --> 00:34:09,699
I think for the person your fronts there

00:33:59,450 --> 00:34:12,100
was a blue box over there as well hi

00:34:09,699 --> 00:34:16,070
[Music]

00:34:12,100 --> 00:34:19,370
yeah that you are using is a precision

00:34:16,070 --> 00:34:22,399
at K and recall at K have you tried to

00:34:19,370 --> 00:34:26,120
use the other matrix like map okay means

00:34:22,399 --> 00:34:30,020
a first position or and the GS so the

00:34:26,120 --> 00:34:32,350
the Rhine clip library offers a couple

00:34:30,020 --> 00:34:44,300
of algorithms to try

00:34:32,350 --> 00:34:45,860
okay maybe show it here in the code it's

00:34:44,300 --> 00:34:48,230
hard to see and I don't know how like

00:34:45,860 --> 00:34:50,870
how can really zoom in here but there is

00:34:48,230 --> 00:34:53,990
rank net rank boost add a rank

00:34:50,870 --> 00:34:55,970
coordinate essence lambda Mart's list

00:34:53,990 --> 00:34:58,610
net and random forced is also a linear

00:34:55,970 --> 00:35:01,870
regression those models or those

00:34:58,610 --> 00:35:04,400
algorithms could be used in this library

00:35:01,870 --> 00:35:06,890
when testing them I found the best

00:35:04,400 --> 00:35:10,780
results with lambda Mart and then a

00:35:06,890 --> 00:35:13,190
specific parameter called MDC G at 10

00:35:10,780 --> 00:35:15,860
but it's up to you to experiment with

00:35:13,190 --> 00:35:18,320
that it doesn't really matter for solar

00:35:15,860 --> 00:35:19,280
it accepts any of these formats I don't

00:35:18,320 --> 00:35:26,870
know if that's an answer to your

00:35:19,280 --> 00:35:30,980
question because you are using the nd GS

00:35:26,870 --> 00:35:33,370
right metric to calculate the sorry to

00:35:30,980 --> 00:35:37,640
calculate the relevancy of the result

00:35:33,370 --> 00:35:41,060
but then your presentation is you are

00:35:37,640 --> 00:35:42,650
using precision and recall so it's kind

00:35:41,060 --> 00:35:45,440
of like I'm bit confused about it

00:35:42,650 --> 00:35:46,730
because doesn't match it when I'm happy

00:35:45,440 --> 00:35:49,130
to listen to you in terms of the

00:35:46,730 --> 00:35:51,320
mathematical side of that this is also

00:35:49,130 --> 00:35:53,240
how I learned it so maybe it's wrong and

00:35:51,320 --> 00:35:56,990
then hopefully I can correct it for the

00:35:53,240 --> 00:36:02,870
next one yeah no perfect come up

00:35:56,990 --> 00:36:04,520
afterwards hello hi I was wondering how

00:36:02,870 --> 00:36:06,680
much content

00:36:04,520 --> 00:36:10,510
would this be useful for I mean you

00:36:06,680 --> 00:36:13,400
showed the new mommy has only ten pages

00:36:10,510 --> 00:36:16,610
starting of how many pages would this be

00:36:13,400 --> 00:36:19,280
useful for that's also a good question

00:36:16,610 --> 00:36:22,700
it also depends on how often your search

00:36:19,280 --> 00:36:25,340
pages are used it could be very useful

00:36:22,700 --> 00:36:27,980
to look into Google Analytics how long

00:36:25,340 --> 00:36:30,740
people stay in your search pages if you

00:36:27,980 --> 00:36:33,740
don't get a conversion from those search

00:36:30,740 --> 00:36:35,870
pages as you expect most likely this

00:36:33,740 --> 00:36:40,010
could help and then it doesn't really

00:36:35,870 --> 00:36:42,770
matter how many items you have obviously

00:36:40,010 --> 00:36:44,810
if you only show 10 results and you only

00:36:42,770 --> 00:36:47,870
have 10 items then it doesn't make any

00:36:44,810 --> 00:36:49,540
sense except for maybe you want to float

00:36:47,870 --> 00:36:52,280
it to the top but I think with some

00:36:49,540 --> 00:36:55,760
Drupal specific optimizations you could

00:36:52,280 --> 00:36:58,430
already solve that I have another

00:36:55,760 --> 00:37:00,020
question maybe also for for answering

00:36:58,430 --> 00:37:01,790
that if you use the database back-end

00:37:00,020 --> 00:37:03,770
and it's good enough for you then you

00:37:01,790 --> 00:37:09,320
cannot use this so then that's also kind

00:37:03,770 --> 00:37:12,980
of an answer another question what

00:37:09,320 --> 00:37:15,530
happens if if content is rewritten would

00:37:12,980 --> 00:37:20,090
that be re indexed and would that matter

00:37:15,530 --> 00:37:21,860
for the for the indexing of it doesn't

00:37:20,090 --> 00:37:24,680
matter because the model is not based on

00:37:21,860 --> 00:37:27,320
keywords it's not based on content even

00:37:24,680 --> 00:37:30,580
if you add new contents delete content

00:37:27,320 --> 00:37:32,600
the model will stay active and present

00:37:30,580 --> 00:37:36,830
that's why it's more interesting than

00:37:32,600 --> 00:37:39,230
adding or using the elevate XML file in

00:37:36,830 --> 00:37:40,970
solar because that uses specific

00:37:39,230 --> 00:37:42,620
document IDs to float to the top for

00:37:40,970 --> 00:37:45,740
certain keywords and that's not very

00:37:42,620 --> 00:37:47,870
maintainable thank you

00:37:45,740 --> 00:37:50,600
there's more question I see another hand

00:37:47,870 --> 00:37:51,110
there I don't know if there's more yeah

00:37:50,600 --> 00:37:56,180
go ahead

00:37:51,110 --> 00:38:00,320
okay so I assume that users can affect

00:37:56,180 --> 00:38:03,110
the rating globally so that it effects

00:38:00,320 --> 00:38:05,900
for the results for everyone else as

00:38:03,110 --> 00:38:07,610
well so there's a couple of things you

00:38:05,900 --> 00:38:08,870
could do there I guess I don't know if

00:38:07,610 --> 00:38:09,680
your question was finished already no

00:38:08,870 --> 00:38:13,010
I'm sorry

00:38:09,680 --> 00:38:15,830
so if it was like this I've learned

00:38:13,010 --> 00:38:18,220
learned before that if you let users to

00:38:15,830 --> 00:38:22,480
do that kind of thing globally the

00:38:18,220 --> 00:38:25,720
we'll input like anything like something

00:38:22,480 --> 00:38:28,599
that is not relevant or or it's like

00:38:25,720 --> 00:38:31,660
crap so do you have any ideas to work

00:38:28,599 --> 00:38:34,210
around that what I showed is for the

00:38:31,660 --> 00:38:37,210
site builder so not necessarily for the

00:38:34,210 --> 00:38:39,760
user of the site the visitor you could

00:38:37,210 --> 00:38:42,970
for example use Google Analytics to see

00:38:39,760 --> 00:38:44,440
what results were clicked on based on

00:38:42,970 --> 00:38:47,980
certain words and create your own

00:38:44,440 --> 00:38:50,109
training data set based on that the

00:38:47,980 --> 00:38:51,849
module itself doesn't give you any

00:38:50,109 --> 00:38:54,540
assumption on how you generate this

00:38:51,849 --> 00:38:58,270
field it's a JSON file with document IDs

00:38:54,540 --> 00:39:00,730
it generates a model for that these

00:38:58,270 --> 00:39:06,940
little things are just a helper for site

00:39:00,730 --> 00:39:10,210
builders okay thanks I was wondering you

00:39:06,940 --> 00:39:13,359
you show a lot of examples that have to

00:39:10,210 --> 00:39:16,960
do with keywords but what if users

00:39:13,359 --> 00:39:18,910
prefer newer content over older content

00:39:16,960 --> 00:39:21,790
would the system also be able to learn

00:39:18,910 --> 00:39:26,020
from that yes so this is what I showed

00:39:21,790 --> 00:39:29,170
here and the feature schema so here's a

00:39:26,020 --> 00:39:32,170
feature called freshness so it adds

00:39:29,170 --> 00:39:35,170
another relevancy factor to freshness of

00:39:32,170 --> 00:39:38,020
content and because you train the data

00:39:35,170 --> 00:39:42,430
the model will learn how important

00:39:38,020 --> 00:39:45,400
freshness is to you usually you also can

00:39:42,430 --> 00:39:48,160
add this as an extra query in solar

00:39:45,400 --> 00:39:49,930
itself so as the base query and then rel

00:39:48,160 --> 00:39:52,540
like more recent content will always be

00:39:49,930 --> 00:39:55,750
more relevant and only after that Yury

00:39:52,540 --> 00:39:58,660
rank the results based on a model so

00:39:55,750 --> 00:40:00,369
maybe to reiterate it doesn't remove you

00:39:58,660 --> 00:40:03,130
from doing crazy things with your query

00:40:00,369 --> 00:40:06,820
it only rear ank's the results that

00:40:03,130 --> 00:40:10,480
comes from that original query Thanks

00:40:06,820 --> 00:40:14,380
hopefully that was maybe one last

00:40:10,480 --> 00:40:15,000
question or two last questions a couple

00:40:14,380 --> 00:40:23,680
more minutes

00:40:15,000 --> 00:40:26,950
thank you you said that it should be

00:40:23,680 --> 00:40:31,230
trained for view pages between by for

00:40:26,950 --> 00:40:32,380
the custom page with a search API API

00:40:31,230 --> 00:40:33,700
you

00:40:32,380 --> 00:40:35,920
good but then you're responsible

00:40:33,700 --> 00:40:37,720
yourself how you can get those bullets

00:40:35,920 --> 00:40:41,890
in there or how you can get that jacent

00:40:37,720 --> 00:40:45,039
data so in this sense the view that

00:40:41,890 --> 00:40:49,119
comes with a module this is just another

00:40:45,039 --> 00:40:51,819
field added in the view so you can see

00:40:49,119 --> 00:40:54,549
this is the title this is a snippet and

00:40:51,819 --> 00:40:56,619
this is the relevancy field in the view

00:40:54,549 --> 00:40:59,940
if you can figure out how to do that for

00:40:56,619 --> 00:41:03,789
custom pages by all means if you somehow

00:40:59,940 --> 00:41:06,430
generates this yourself because you know

00:41:03,789 --> 00:41:09,759
which items or which content items are

00:41:06,430 --> 00:41:12,609
more important also feel free that's why

00:41:09,759 --> 00:41:15,700
it's an open text box and I really want

00:41:12,609 --> 00:41:17,349
this stuff to be as little black box as

00:41:15,700 --> 00:41:22,299
possible even though it's quite

00:41:17,349 --> 00:41:27,009
complicated material hopefully that was

00:41:22,299 --> 00:41:31,660
an answer maybe one last question behind

00:41:27,009 --> 00:41:34,329
you yeah all right so in a project

00:41:31,660 --> 00:41:37,900
architecture wherein we are not using

00:41:34,329 --> 00:41:40,119
the fully coupled system so very now I'm

00:41:37,900 --> 00:41:42,519
not using the Drupal Search API and just

00:41:40,119 --> 00:41:45,430
specifically using the elastic search

00:41:42,519 --> 00:41:47,769
now so rank up would not be the most

00:41:45,430 --> 00:41:50,349
applicable in those system so what would

00:41:47,769 --> 00:41:54,579
you suggest for the most relevancy

00:41:50,349 --> 00:41:56,559
search in that case and your indexing

00:41:54,579 --> 00:42:05,710
using Drupal or your indexing somehow

00:41:56,559 --> 00:42:09,309
differently if you somehow index it by

00:42:05,710 --> 00:42:11,619
crawling then it's gonna be tricky

00:42:09,309 --> 00:42:14,710
because you need to be similarly smart

00:42:11,619 --> 00:42:17,230
as Google to figure out the metadata to

00:42:14,710 --> 00:42:18,730
get structured information to then do

00:42:17,230 --> 00:42:22,329
relevancy boosting based on that

00:42:18,730 --> 00:42:25,089
structure data like the day when it was

00:42:22,329 --> 00:42:26,619
created and those kind of things if you

00:42:25,089 --> 00:42:28,690
figure out how to get that structured

00:42:26,619 --> 00:42:30,849
data you can probably do boosting

00:42:28,690 --> 00:42:33,009
inelastic search on that structured data

00:42:30,849 --> 00:42:35,170
and then if you can't want to go crazy

00:42:33,009 --> 00:42:38,589
you can recompile elastic search and use

00:42:35,170 --> 00:42:40,359
the re ranking capabilities with the

00:42:38,589 --> 00:42:43,329
model and you train but you have to do

00:42:40,359 --> 00:42:44,680
all these steps yourself so it might get

00:42:43,329 --> 00:42:48,369
tricky

00:42:44,680 --> 00:42:49,900
thank you all right thank you so much

00:42:48,369 --> 00:42:54,789
for your attention hopefully this was

00:42:49,900 --> 00:42:57,180
useful and see you around I didn't get a

00:42:54,789 --> 00:42:57,180

YouTube URL: https://www.youtube.com/watch?v=7CAmwIxueag


