Title: DrupalCon Amsterdam 2019: Configuration Management Initiative 2.0 updates
Publication date: 2019-10-29
Playlist: DrupalCon Amsterdam 2019
Description: 
	Fabian Bircher
Nuvole Web Srl, Parma, Italy

The Configuration Management is one of the signature improvements of Drupal 8.

However, now that the community has a couple of years of building Drupal 8 sites behind them, various limitations have surfaced: various common workflows are not natively supported; core's config APIs have missing functionality. While many of these problems have contrib workarounds, often these solutions can conflict with one another, and there's no one set of best practices that works for all.

Hence the Configuration Management Initiative 2.0.

The key aspects are:
₀ Installing sites from config: Config Installer in core (8.6)
₀ Replacing Config Filter: The new ConfigTransform api (8.8)
₀ Environment-specific configuration: Config Exclude in core (8.8) Config Split in core (9.x)
₀ Updating config without overriding customizations (modules and distros)
₀ Documentation for both workflows to use it and API to develop with (“best practices”)

This session will give you an overview on the progress of CMI 2.0 and our roadmap. And in addition, show you how you can structure your projects and workflows with contrib solutions that exist today to minimize disruption. We will introduce the future best practices based on the contrib experience and give you practical examples for real world challenges.

Participants will need to have experience with basic configuration management workflows in Drupal 8 and will walk away with a better understanding of how the limitations can be addressed and how they can help make it happen.

The precise content will depend on what will actually get committed in time.
Captions: 
	00:00:00,030 --> 00:00:05,339
so this is the session about the

00:00:02,490 --> 00:00:07,830
configuration management initiative 2.0

00:00:05,339 --> 00:00:10,170
updates

00:00:07,830 --> 00:00:12,389
I am Fabien bear here I am a senior

00:00:10,170 --> 00:00:15,920
software engineer and I work at DU

00:00:12,389 --> 00:00:19,830
Bellay you can follow us on twitter and

00:00:15,920 --> 00:00:24,630
my tuple that ork username is just my

00:00:19,830 --> 00:00:26,730
last name I work for a novella and novel

00:00:24,630 --> 00:00:30,689
as a distributed team in Italy Belgium

00:00:26,730 --> 00:00:32,489
and the Czech Republic we have a lot of

00:00:30,689 --> 00:00:37,190
international organizations and

00:00:32,489 --> 00:00:40,200
institutions as our clients and we use

00:00:37,190 --> 00:00:41,879
like we do fast deliveries usually so

00:00:40,200 --> 00:00:45,629
several developers are working on the

00:00:41,879 --> 00:00:47,940
same site that at the same time and we

00:00:45,629 --> 00:00:51,059
have automated tests and we frequently

00:00:47,940 --> 00:00:55,350
deploy things so we need a workflow that

00:00:51,059 --> 00:00:58,170
is safe and this slide is a basically

00:00:55,350 --> 00:01:00,750
copy-paste since ten years or more I I

00:00:58,170 --> 00:01:02,460
found out in with discussion that this

00:01:00,750 --> 00:01:05,339
is actually my tenth Drupal con and the

00:01:02,460 --> 00:01:08,729
first two person I attended my

00:01:05,339 --> 00:01:10,590
colleagues gave a session on the

00:01:08,729 --> 00:01:15,680
mainstage about configuration management

00:01:10,590 --> 00:01:19,890
so it's kind of a tradition so so to say

00:01:15,680 --> 00:01:23,130
the brief outline of the session I the

00:01:19,890 --> 00:01:24,930
brief introduction very brief history I

00:01:23,130 --> 00:01:27,420
can talk about this topic for ages so

00:01:24,930 --> 00:01:32,040
come to me afterwards if you want to

00:01:27,420 --> 00:01:36,030
know more about it then the CMI to focus

00:01:32,040 --> 00:01:40,549
areas the achievements we we have now in

00:01:36,030 --> 00:01:43,979
8.8 the things that are still open for

00:01:40,549 --> 00:01:47,490
8.8 but need work and need your input

00:01:43,979 --> 00:01:49,619
and then future plans for realistically

00:01:47,490 --> 00:01:52,890
more top online and and beyond

00:01:49,619 --> 00:01:55,200
finally some best practices on how you

00:01:52,890 --> 00:01:59,159
can be ready for for the future already

00:01:55,200 --> 00:02:00,869
today even with previous versions of

00:01:59,159 --> 00:02:08,129
Drupal

00:02:00,869 --> 00:02:10,560
and and how you can get involved so most

00:02:08,129 --> 00:02:13,200
of you or some of you are probably aware

00:02:10,560 --> 00:02:15,739
that the CMI the the original

00:02:13,200 --> 00:02:18,959
configuration management initiative was

00:02:15,739 --> 00:02:21,180
before Drupal 8 was released the CMI

00:02:18,959 --> 00:02:24,799
stopped when Drupal 8 was released and

00:02:21,180 --> 00:02:28,080
its main target was to provide a

00:02:24,799 --> 00:02:29,940
declarative configuration workflow into

00:02:28,080 --> 00:02:32,340
Drupal core and and since eight point

00:02:29,940 --> 00:02:36,780
eight eight point zero point zero we had

00:02:32,340 --> 00:02:41,220
that it was targeted to the like most

00:02:36,780 --> 00:02:43,290
common use case which is staging the

00:02:41,220 --> 00:02:47,819
same site between different environments

00:02:43,290 --> 00:02:50,430
so but all configuration is exported all

00:02:47,819 --> 00:02:53,099
configuration is important and that was

00:02:50,430 --> 00:02:55,500
an important distinction and an

00:02:53,099 --> 00:03:00,120
important decision to to specify exactly

00:02:55,500 --> 00:03:03,299
a limited amount of workflow so that it

00:03:00,120 --> 00:03:04,680
can be done and and it's I agree that's

00:03:03,299 --> 00:03:07,590
totally much better to have something

00:03:04,680 --> 00:03:09,989
that works then to have many plans and

00:03:07,590 --> 00:03:13,530
none of them actually are implemented so

00:03:09,989 --> 00:03:16,230
they left everything basically to

00:03:13,530 --> 00:03:19,280
contract to figure out and fill in the

00:03:16,230 --> 00:03:25,709
gaps for all of these leads and and

00:03:19,280 --> 00:03:28,079
contribute it and so now we have

00:03:25,709 --> 00:03:30,720
contributions for some of these problems

00:03:28,079 --> 00:03:33,630
and they work quite well

00:03:30,720 --> 00:03:38,190
they're config papers 1 million

00:03:33,630 --> 00:03:40,620
downloads for example and so we created

00:03:38,190 --> 00:03:43,709
the CMI to to to bring some of it to

00:03:40,620 --> 00:03:47,430
core it we have three different focus

00:03:43,709 --> 00:03:51,079
areas all of them need a lot of help the

00:03:47,430 --> 00:03:53,849
first one is the one that is probably

00:03:51,079 --> 00:03:57,000
least active so to say and that's

00:03:53,849 --> 00:03:59,700
documentation so all the tools are

00:03:57,000 --> 00:04:01,829
basically as useful as the best

00:03:59,700 --> 00:04:04,709
documentation you have and there's not

00:04:01,829 --> 00:04:07,859
that much documentation on both how to

00:04:04,709 --> 00:04:10,230
use it and also how to extend it and how

00:04:07,859 --> 00:04:12,660
to use the API so we need better

00:04:10,230 --> 00:04:15,570
documentation for both of the

00:04:12,660 --> 00:04:17,760
the developers and and also the end

00:04:15,570 --> 00:04:22,680
users because this is a feature that

00:04:17,760 --> 00:04:24,840
meant for for everybody then the the

00:04:22,680 --> 00:04:28,320
focus area for which we have made the

00:04:24,840 --> 00:04:30,270
most progress so far is to an enhance

00:04:28,320 --> 00:04:32,640
environment specific configuration

00:04:30,270 --> 00:04:36,660
between different environments of the

00:04:32,640 --> 00:04:38,370
same site so so this is the the

00:04:36,660 --> 00:04:41,820
development modules that you don't want

00:04:38,370 --> 00:04:44,250
to deploy to production for example this

00:04:41,820 --> 00:04:47,810
is where the most mature contributions

00:04:44,250 --> 00:04:52,110
are and we we've gathered the best like

00:04:47,810 --> 00:04:55,650
ideas and made them in football and the

00:04:52,110 --> 00:04:58,260
third one is the one that I get most of

00:04:55,650 --> 00:05:01,800
the questions about at these events but

00:04:58,260 --> 00:05:04,380
where there is no current a best

00:05:01,800 --> 00:05:06,330
practice let's say so and that's the

00:05:04,380 --> 00:05:08,700
cross site configuration so is when you

00:05:06,330 --> 00:05:11,810
have several sites that where you share

00:05:08,700 --> 00:05:18,390
configuration between them

00:05:11,810 --> 00:05:19,890
distributions has many names so shortly

00:05:18,390 --> 00:05:22,680
about the organization how we work and

00:05:19,890 --> 00:05:26,060
how you can help out Alec spot and me

00:05:22,680 --> 00:05:30,690
are the initiative leads at the moment

00:05:26,060 --> 00:05:31,710
we have a biweekly meeting at 5:00 in

00:05:30,690 --> 00:05:35,430
the evening

00:05:31,710 --> 00:05:37,200
on a slack there's this config channel

00:05:35,430 --> 00:05:41,730
and we'll be meet there there's also a

00:05:37,200 --> 00:05:44,040
triple at org project page CMI - which

00:05:41,730 --> 00:05:45,510
is like the start to find the issues

00:05:44,040 --> 00:05:50,610
that are attacked for our initiatives

00:05:45,510 --> 00:05:53,030
and to to find I think more so this is

00:05:50,610 --> 00:05:56,789
the best place to join in - to ask

00:05:53,030 --> 00:06:01,409
config related questions

00:05:56,789 --> 00:06:02,669
next achievements 48.8 gota highlight

00:06:01,409 --> 00:06:06,930
that probably the reason why you're all

00:06:02,669 --> 00:06:09,960
here installing from existing

00:06:06,930 --> 00:06:11,909
configuration this is not actually a 8.8

00:06:09,960 --> 00:06:14,279
achievement with the 8.6 achievement

00:06:11,909 --> 00:06:18,629
yeah but it's still like one of the

00:06:14,279 --> 00:06:23,999
major and the first real tangible result

00:06:18,629 --> 00:06:25,680
from our initiative you can define the

00:06:23,999 --> 00:06:29,909
config sync directory is your settings

00:06:25,680 --> 00:06:33,089
PHP and or add it to your custom profile

00:06:29,909 --> 00:06:36,629
and then just run rush site install with

00:06:33,089 --> 00:06:41,999
the existing config flag or of course

00:06:36,629 --> 00:06:43,919
via the UI there's there will be an

00:06:41,999 --> 00:06:45,899
option like you can select from your

00:06:43,919 --> 00:06:49,770
install profiles but then there's also

00:06:45,899 --> 00:06:51,930
used existing configuration there is a

00:06:49,770 --> 00:06:57,839
small aspect I will get to at the end or

00:06:51,930 --> 00:07:00,180
later then another important update

00:06:57,839 --> 00:07:02,639
arena an important update that affects

00:07:00,180 --> 00:07:04,949
everybody alike all of you only 300

00:07:02,639 --> 00:07:08,240
percent of people who use configuration

00:07:04,949 --> 00:07:10,740
management is that there is now only one

00:07:08,240 --> 00:07:14,159
configuration directory in your settings

00:07:10,740 --> 00:07:16,050
dot PHP and it's not no longer an array

00:07:14,159 --> 00:07:19,370
and it's no longer that config

00:07:16,050 --> 00:07:23,669
directories variable global variable and

00:07:19,370 --> 00:07:27,479
the reason for this is it used to be an

00:07:23,669 --> 00:07:30,779
array because of an accident or or it

00:07:27,479 --> 00:07:32,219
was never meant to be an array it was an

00:07:30,779 --> 00:07:37,229
array because of historical reasons

00:07:32,219 --> 00:07:40,580
because of when the first TMI made their

00:07:37,229 --> 00:07:44,009
progress and and there was a time in

00:07:40,580 --> 00:07:46,919
very unstable alpha of Drupal core where

00:07:44,009 --> 00:07:50,669
there were more than one key but since

00:07:46,919 --> 00:07:55,830
8.0 point zero there was only ever one

00:07:50,669 --> 00:07:58,199
key in this array and me included I came

00:07:55,830 --> 00:08:00,360
as a coil this is an array cool that

00:07:58,199 --> 00:08:04,020
means more than one value right I mean

00:08:00,360 --> 00:08:05,759
it's that's what I race do and you think

00:08:04,020 --> 00:08:08,639
like oh how can I use this cool new

00:08:05,759 --> 00:08:10,350
feature until you find out that actually

00:08:08,639 --> 00:08:13,230
it hurts more

00:08:10,350 --> 00:08:15,180
it should and there is no reason for

00:08:13,230 --> 00:08:18,420
that so we it's a developer experience

00:08:15,180 --> 00:08:20,880
improvement but it means it limits you

00:08:18,420 --> 00:08:23,640
in the future because they're so you can

00:08:20,880 --> 00:08:27,050
come up with and rush support labels and

00:08:23,640 --> 00:08:29,700
all of these things but in an effort to

00:08:27,050 --> 00:08:31,650
consolidate and to make configuration

00:08:29,700 --> 00:08:36,030
management easier to understand and

00:08:31,650 --> 00:08:38,310
easier to teach it's important to to

00:08:36,030 --> 00:08:41,760
make sure that this actually core only

00:08:38,310 --> 00:08:45,240
ever supported this one key and nobody

00:08:41,760 --> 00:08:47,190
stops you from adding anything else but

00:08:45,240 --> 00:08:51,870
core only supports one and therefore

00:08:47,190 --> 00:08:55,320
core only has one setting and it makes

00:08:51,870 --> 00:08:56,970
everything easier when you get used to

00:08:55,320 --> 00:09:01,050
it when you let go of this idea that

00:08:56,970 --> 00:09:03,570
there could be more that there are for

00:09:01,050 --> 00:09:07,890
sure certain stances and situation where

00:09:03,570 --> 00:09:11,510
more can make sense but it's not the 90%

00:09:07,890 --> 00:09:16,430
use case and so now we've changed it and

00:09:11,510 --> 00:09:19,560
it's for most cases a single scriptable

00:09:16,430 --> 00:09:22,350
replacement of the old config

00:09:19,560 --> 00:09:25,710
directories to these new settings same

00:09:22,350 --> 00:09:28,560
place everything works the same way but

00:09:25,710 --> 00:09:30,960
it doesn't mislead anymore and that's

00:09:28,560 --> 00:09:33,240
that's the big win the big win is like

00:09:30,960 --> 00:09:38,520
the PR aspect not how the code works

00:09:33,240 --> 00:09:42,030
because it's the same way next we have

00:09:38,520 --> 00:09:44,100
an export API we have configuration

00:09:42,030 --> 00:09:47,370
management which is about exporting and

00:09:44,100 --> 00:09:49,920
importing configuration but until rupal

00:09:47,370 --> 00:09:54,720
8.8 there was no API to export

00:09:49,920 --> 00:09:59,520
configuration sounds a bit silly you

00:09:54,720 --> 00:10:01,620
know but it was never necessary because

00:09:59,520 --> 00:10:04,380
all the tools were just exporting from

00:10:01,620 --> 00:10:06,540
from the same place from the active

00:10:04,380 --> 00:10:10,050
configuration store and every everybody

00:10:06,540 --> 00:10:12,990
did did it this way but the problem is

00:10:10,050 --> 00:10:15,870
there is no extension point with that

00:10:12,990 --> 00:10:18,540
you can interact with if if you export

00:10:15,870 --> 00:10:20,820
directly from the active configuration

00:10:18,540 --> 00:10:22,890
then you cannot extend the system you

00:10:20,820 --> 00:10:25,920
cannot you cannot say oh but now that

00:10:22,890 --> 00:10:27,960
the active configuration store behaves

00:10:25,920 --> 00:10:30,030
differently when you use it normally or

00:10:27,960 --> 00:10:32,060
when you export from it it's it doesn't

00:10:30,030 --> 00:10:35,820
make a lot of sense so we added another

00:10:32,060 --> 00:10:38,610
config storage and so the replacement

00:10:35,820 --> 00:10:42,210
for it is really simple you just instead

00:10:38,610 --> 00:10:45,480
of using config storage you use config

00:10:42,210 --> 00:10:50,730
storage dot export and you it's the same

00:10:45,480 --> 00:10:56,130
code from their own and this allowed us

00:10:50,730 --> 00:10:57,960
to then do more we now and this is for

00:10:56,130 --> 00:11:01,490
me my personal highlight the

00:10:57,960 --> 00:11:06,720
configuration storage transformation API

00:11:01,490 --> 00:11:08,450
it's relatively simple it's a glorified

00:11:06,720 --> 00:11:12,360
altar hook

00:11:08,450 --> 00:11:16,320
it's a event-driven so it's a symphony

00:11:12,360 --> 00:11:18,360
event and they're dispatched both when

00:11:16,320 --> 00:11:20,130
you export the configuration so when

00:11:18,360 --> 00:11:24,150
when this other storage that I just

00:11:20,130 --> 00:11:28,530
mentioned is accessed or when you import

00:11:24,150 --> 00:11:30,090
the configuration if if your develop if

00:11:28,530 --> 00:11:31,230
your the dress maintain row tuple

00:11:30,090 --> 00:11:35,280
console maintainer or a module

00:11:31,230 --> 00:11:37,350
maintainer that does the import with

00:11:35,280 --> 00:11:40,110
like non-standard ways then there is a

00:11:37,350 --> 00:11:43,830
small thing that you need to do but

00:11:40,110 --> 00:11:48,240
otherwise as a user of this API it's an

00:11:43,830 --> 00:11:52,500
event that you can subscribe to and it

00:11:48,240 --> 00:11:56,160
contains a configuration storage the the

00:11:52,500 --> 00:11:59,100
same type as as all of the other

00:11:56,160 --> 00:12:01,760
configuration storages are and you just

00:11:59,100 --> 00:12:04,290
massage it the way you want you you you

00:12:01,760 --> 00:12:05,820
you can add configuration to it you can

00:12:04,290 --> 00:12:08,460
remove from it you can change the

00:12:05,820 --> 00:12:10,680
configuration that's in it the event

00:12:08,460 --> 00:12:12,660
doesn't mean that the interaction

00:12:10,680 --> 00:12:15,660
happens like this event is also

00:12:12,660 --> 00:12:19,290
dispatched when you want to see the diff

00:12:15,660 --> 00:12:22,290
like what is going to be important but

00:12:19,290 --> 00:12:25,620
whatever you you happen to do to this

00:12:22,290 --> 00:12:27,720
even configuration storage is then what

00:12:25,620 --> 00:12:30,470
is actually imported or what is actually

00:12:27,720 --> 00:12:30,470
exported

00:12:31,829 --> 00:12:40,120
so far everything clear of course we

00:12:38,230 --> 00:12:42,399
cannot just add a new API to core

00:12:40,120 --> 00:12:45,730
without using it in core and this was

00:12:42,399 --> 00:12:48,310
actually the the biggest hurdle so to

00:12:45,730 --> 00:12:50,319
say to get this in into court to make

00:12:48,310 --> 00:12:55,149
core work this way

00:12:50,319 --> 00:12:59,139
so we added functionality that used to

00:12:55,149 --> 00:13:03,420
be part of the brush command the skip

00:12:59,139 --> 00:13:06,329
modules then it became a contract module

00:13:03,420 --> 00:13:09,130
and now it in court you don't need to

00:13:06,329 --> 00:13:12,120
install any module for this this works

00:13:09,130 --> 00:13:14,860
8/8 out-of-the-box

00:13:12,120 --> 00:13:17,470
all you need to do is you add in your

00:13:14,860 --> 00:13:22,170
settings dot PHP there are settings with

00:13:17,470 --> 00:13:24,940
the key config exclude modules and an

00:13:22,170 --> 00:13:31,029
array of module names that you want to

00:13:24,940 --> 00:13:33,069
exclude and provided your system for

00:13:31,029 --> 00:13:37,170
importing and exporting uses this new

00:13:33,069 --> 00:13:40,329
API so for example the rush 10 or the UI

00:13:37,170 --> 00:13:43,410
when you export the configuration these

00:13:40,329 --> 00:13:46,389
modules will never be part of it so the

00:13:43,410 --> 00:13:49,920
if you have the valance Talde on your on

00:13:46,389 --> 00:13:53,740
your machine and you have this setting

00:13:49,920 --> 00:13:55,839
then the export will be as if you had

00:13:53,740 --> 00:13:58,360
uninstalled the well before exporting it

00:13:55,839 --> 00:14:01,180
it will remove all the configuration

00:13:58,360 --> 00:14:03,639
that depends on the valve and it will

00:14:01,180 --> 00:14:08,010
remove the well from the core extensions

00:14:03,639 --> 00:14:08,010
from from the enabled modules

00:14:08,119 --> 00:14:16,009
and on the other way if you import

00:14:12,829 --> 00:14:18,199
configuration that doesn't have the well

00:14:16,009 --> 00:14:20,990
as part of the package that you import

00:14:18,199 --> 00:14:24,110
the the zip or the the file system but

00:14:20,990 --> 00:14:26,329
you have it developed on your site it

00:14:24,110 --> 00:14:29,119
will not uninstall the well it will keep

00:14:26,329 --> 00:14:31,339
them out there and it will just keep it

00:14:29,119 --> 00:14:34,910
the way it is it will not change any of

00:14:31,339 --> 00:14:36,949
the configuration so your your

00:14:34,910 --> 00:14:39,949
development environment is not affected

00:14:36,949 --> 00:14:44,300
by importing the configuration that

00:14:39,949 --> 00:14:46,220
doesn't have the well installed if you

00:14:44,300 --> 00:14:48,589
didn't have for example final stage

00:14:46,220 --> 00:14:53,029
proxy installed it will not install it

00:14:48,589 --> 00:14:54,829
for you and if you didn't have it

00:14:53,029 --> 00:14:58,869
installed it will also not remove it

00:14:54,829 --> 00:14:58,869
because there is nothing to remove and

00:14:59,199 --> 00:15:07,119
this system is made for development

00:15:03,889 --> 00:15:10,429
modules or modules that you want to be

00:15:07,119 --> 00:15:13,730
completely excluded from the

00:15:10,429 --> 00:15:17,589
configuration synchronization this does

00:15:13,730 --> 00:15:22,579
not work at all with user system

00:15:17,589 --> 00:15:24,619
language probably note all the configure

00:15:22,579 --> 00:15:29,290
all the modules that have a heavy

00:15:24,619 --> 00:15:29,290
influence on configuration entities

00:15:30,750 --> 00:15:35,639
it will work when you export it it will

00:15:33,420 --> 00:15:38,850
remove system and user and all of that

00:15:35,639 --> 00:15:40,740
language from your export but the import

00:15:38,850 --> 00:15:43,529
will not work anymore the import will

00:15:40,740 --> 00:15:46,230
just say like sorry can't uninstall

00:15:43,529 --> 00:15:48,350
system and it will not allow you to

00:15:46,230 --> 00:15:50,730
import it which makes sense it's that's

00:15:48,350 --> 00:15:53,240
that's the that's the reason why we use

00:15:50,730 --> 00:15:56,189
the import it it gives you some safety

00:15:53,240 --> 00:15:58,620
but using this system means also that

00:15:56,189 --> 00:16:00,720
one of you you take off one of these

00:15:58,620 --> 00:16:02,759
safety belts it's there's the

00:16:00,720 --> 00:16:06,029
configuration management from from the

00:16:02,759 --> 00:16:11,970
Drupal 8.0 has a lot of safety belt it

00:16:06,029 --> 00:16:13,399
has a lot of like built-in ways of of

00:16:11,970 --> 00:16:15,839
making sure the configuration

00:16:13,399 --> 00:16:19,050
synchronization is safe and and it

00:16:15,839 --> 00:16:22,519
doesn't just blow away your content and

00:16:19,050 --> 00:16:25,430
it doesn't do all of this using this

00:16:22,519 --> 00:16:29,370
allows you to have development modules

00:16:25,430 --> 00:16:33,720
but at the cost of a little bit less

00:16:29,370 --> 00:16:35,399
safety it's still relatively safe but if

00:16:33,720 --> 00:16:38,240
you abuse it it's your own fault

00:16:35,399 --> 00:16:38,240
you have been one

00:16:39,680 --> 00:16:44,930
I mean people will get creative and try

00:16:42,740 --> 00:16:49,040
to use this for many ways for which is

00:16:44,930 --> 00:16:51,530
not intended but also then you

00:16:49,040 --> 00:16:53,780
I mean it's PHP and it's your own Drupal

00:16:51,530 --> 00:16:58,970
site you you can do it whatever you want

00:16:53,780 --> 00:17:01,730
I'm just not recommending it at this

00:16:58,970 --> 00:17:03,770
stage a huge thank you for for all the

00:17:01,730 --> 00:17:05,830
people who were involved so far and all

00:17:03,770 --> 00:17:11,180
the people who are going to be involved

00:17:05,830 --> 00:17:13,940
because the cement too is mostly

00:17:11,180 --> 00:17:17,209
volunteer driven I every once in a while

00:17:13,940 --> 00:17:20,480
I I have a couple of minutes or two

00:17:17,209 --> 00:17:22,580
spare to to kick other people to like

00:17:20,480 --> 00:17:28,160
push them a little bit or what what was

00:17:22,580 --> 00:17:31,730
it he you know he was on my list to

00:17:28,160 --> 00:17:34,310
think of people to to not like hey there

00:17:31,730 --> 00:17:37,720
is a patch that someone wrote and maybe

00:17:34,310 --> 00:17:37,720
you should look at because

00:17:39,000 --> 00:17:46,830
most and this is probably like a reason

00:17:43,980 --> 00:17:48,480
for it that most of like the country of

00:17:46,830 --> 00:17:51,090
solutions they kind of work and you

00:17:48,480 --> 00:17:54,990
don't actually need this to be in core

00:17:51,090 --> 00:17:56,820
and so you can just take the country

00:17:54,990 --> 00:17:59,400
module so it's it's very difficult to

00:17:56,820 --> 00:18:02,490
motivate like why why why should I spend

00:17:59,400 --> 00:18:04,770
so much time on bond doing this when it

00:18:02,490 --> 00:18:07,470
actually works for for my side like I

00:18:04,770 --> 00:18:09,480
don't have a problem it's like you know

00:18:07,470 --> 00:18:13,590
why I fix something that's not broken

00:18:09,480 --> 00:18:15,360
right so it's really like thank you very

00:18:13,590 --> 00:18:19,860
much to all the people who are involved

00:18:15,360 --> 00:18:21,810
to like test issues test patches even

00:18:19,860 --> 00:18:25,310
even people who write new issues and and

00:18:21,810 --> 00:18:29,780
like explain what what is not working

00:18:25,310 --> 00:18:32,040
and and this way we can move forward

00:18:29,780 --> 00:18:34,520
there's still a couple of areas that

00:18:32,040 --> 00:18:37,380
need help

00:18:34,520 --> 00:18:39,360
so I said before one of the achievements

00:18:37,380 --> 00:18:42,870
from 8.6 was to install from

00:18:39,360 --> 00:18:45,720
configuration except it doesn't work

00:18:42,870 --> 00:18:50,760
with the standard profile which is a bit

00:18:45,720 --> 00:18:53,550
ironic so the reason for this was we

00:18:50,760 --> 00:18:56,940
needed to exclude as much complexity as

00:18:53,550 --> 00:18:59,970
we can to get it done it was better to

00:18:56,940 --> 00:19:03,660
have installed from config work for

00:18:59,970 --> 00:19:06,270
minimal and your custom profiles then to

00:19:03,660 --> 00:19:11,180
try to solve all the problems at the

00:19:06,270 --> 00:19:13,320
same time and not have it so we excluded

00:19:11,180 --> 00:19:18,720
profiles with the hook install

00:19:13,320 --> 00:19:21,180
implementation because when you install

00:19:18,720 --> 00:19:23,430
a module there's two ways in which you

00:19:21,180 --> 00:19:26,160
can install module the one is you go to

00:19:23,430 --> 00:19:30,030
your site you install the module and the

00:19:26,160 --> 00:19:31,890
other one is you had your site with a

00:19:30,030 --> 00:19:33,390
module X told you to export the

00:19:31,890 --> 00:19:34,860
configuration and you go to your other

00:19:33,390 --> 00:19:36,540
site where the module is not yet

00:19:34,860 --> 00:19:39,630
installed a new import the configuration

00:19:36,540 --> 00:19:42,300
and the module will be installed so that

00:19:39,630 --> 00:19:45,690
the import process installs the module

00:19:42,300 --> 00:19:50,490
and these are different different way

00:19:45,690 --> 00:19:52,470
these different processes and the order

00:19:50,490 --> 00:19:56,010
in which the hooks are called

00:19:52,470 --> 00:20:00,440
is different so when you install a

00:19:56,010 --> 00:20:02,040
module from like the UI then your

00:20:00,440 --> 00:20:04,380
configuration that comes with your

00:20:02,040 --> 00:20:07,680
module is installed and then the hook

00:20:04,380 --> 00:20:09,530
install is called when module is

00:20:07,680 --> 00:20:12,780
installed as part of the configured

00:20:09,530 --> 00:20:14,730
synchronization then all the modules

00:20:12,780 --> 00:20:16,700
that will be installed will be installed

00:20:14,730 --> 00:20:20,580
and have their hook installed

00:20:16,700 --> 00:20:22,320
called and then all the configuration is

00:20:20,580 --> 00:20:24,180
imported but not the one from the

00:20:22,320 --> 00:20:29,970
modules but the one from the sync

00:20:24,180 --> 00:20:31,920
directory or let the sync part and this

00:20:29,970 --> 00:20:34,800
this is has always been this way for

00:20:31,920 --> 00:20:36,420
modules and so you you cannot rely on

00:20:34,800 --> 00:20:38,370
the configuration that you ship with

00:20:36,420 --> 00:20:44,700
your module in your modules hook install

00:20:38,370 --> 00:20:46,440
for method function and and that's okay

00:20:44,700 --> 00:20:48,930
that's a limitation everybody got used

00:20:46,440 --> 00:20:52,290
to living with this the problem is that

00:20:48,930 --> 00:20:55,770
with profiles there's only one way to

00:20:52,290 --> 00:20:58,620
ever call the hook install of a profile

00:20:55,770 --> 00:21:02,370
it only gets called once the first time

00:20:58,620 --> 00:21:05,180
you install your drop links but now if

00:21:02,370 --> 00:21:07,890
we have installing from configuration

00:21:05,180 --> 00:21:09,750
then the same happens so installing from

00:21:07,890 --> 00:21:15,870
configuration is essentially install

00:21:09,750 --> 00:21:18,450
system and then config import and the

00:21:15,870 --> 00:21:20,910
profiles then also get installed as a

00:21:18,450 --> 00:21:22,800
config import and then none of the

00:21:20,910 --> 00:21:25,620
configuration is actually there when you

00:21:22,800 --> 00:21:28,080
expect it to be there and so it creates

00:21:25,620 --> 00:21:30,900
this problem that it cannot actually

00:21:28,080 --> 00:21:32,760
work so he said okay well we just don't

00:21:30,900 --> 00:21:35,450
do it for now and have config install

00:21:32,760 --> 00:21:37,890
for other for all the other profiles and

00:21:35,450 --> 00:21:40,410
now is the time to actually fix this

00:21:37,890 --> 00:21:44,850
because this in my opinion is still a

00:21:40,410 --> 00:21:47,870
bit broken it's it's clearly a feature

00:21:44,850 --> 00:21:47,870
that needs to be there

00:21:48,180 --> 00:21:52,350
but how it's going to be fixed this is

00:21:50,430 --> 00:21:55,050
still an open question because there is

00:21:52,350 --> 00:21:58,920
many different avenues we could go down

00:21:55,050 --> 00:22:01,020
on on how this we could solve this can

00:21:58,920 --> 00:22:05,310
we say okay we added this other feature

00:22:01,020 --> 00:22:08,580
in eight point six point zero so now

00:22:05,310 --> 00:22:10,320
everybody had time to refactor their

00:22:08,580 --> 00:22:11,940
hook install method because anyway it

00:22:10,320 --> 00:22:14,550
didn't work you couldn't use this

00:22:11,940 --> 00:22:18,480
feature like standard for example now

00:22:14,550 --> 00:22:22,010
works or do we say ok we be special case

00:22:18,480 --> 00:22:25,320
the modules and we had a lot of code to

00:22:22,010 --> 00:22:28,580
have the profiles hook install work

00:22:25,320 --> 00:22:33,060
differently than a normal module and

00:22:28,580 --> 00:22:34,710
yeah there's there's I don't know it's

00:22:33,060 --> 00:22:38,880
up to you as value with the feedback is

00:22:34,710 --> 00:22:43,610
welcome ideas are welcome patches are

00:22:38,880 --> 00:22:43,610
welcome reviews or patches are welcome

00:22:47,480 --> 00:22:54,510
no standard profile would work but

00:22:52,680 --> 00:22:56,940
currently there is a piece of code that

00:22:54,510 --> 00:23:00,750
says if a profile has a hook install

00:22:56,940 --> 00:23:04,590
don't allow it because we don't know if

00:23:00,750 --> 00:23:06,600
it's safe to allow it the easiest is to

00:23:04,590 --> 00:23:08,280
just patch it and and remove the hook

00:23:06,600 --> 00:23:10,890
install or rename the hook install and

00:23:08,280 --> 00:23:13,050
then you can install from standard by

00:23:10,890 --> 00:23:16,190
not calling the hooks like standard and

00:23:13,050 --> 00:23:18,750
so on there is a list of other modules

00:23:16,190 --> 00:23:21,780
there links so I will upload the

00:23:18,750 --> 00:23:23,760
presentation somewhere where you can

00:23:21,780 --> 00:23:27,480
then click on I will also have this list

00:23:23,760 --> 00:23:29,940
for the contribution day so some of

00:23:27,480 --> 00:23:31,740
these are harder some of these are

00:23:29,940 --> 00:23:36,690
easier but these are skill issues that

00:23:31,740 --> 00:23:38,700
could make it in eight point nine ninety

00:23:36,690 --> 00:23:42,570
nine point eight anymore I think because

00:23:38,700 --> 00:23:45,480
some of them are bug fixes and some of

00:23:42,570 --> 00:23:48,600
them are like the the add constraints to

00:23:45,480 --> 00:23:52,170
all config entity types would for

00:23:48,600 --> 00:23:56,310
example allow the JSON API and the API

00:23:52,170 --> 00:23:59,640
first part to to use the configuration

00:23:56,310 --> 00:24:01,980
entities but some of them

00:23:59,640 --> 00:24:03,809
like the there is no indication on

00:24:01,980 --> 00:24:10,140
config forums if there are overwritten

00:24:03,809 --> 00:24:12,780
values need more input because if you

00:24:10,140 --> 00:24:14,670
overwrite the configuration then there

00:24:12,780 --> 00:24:17,040
could be many reasons for this maybe it

00:24:14,670 --> 00:24:20,010
is an API key that you don't want to

00:24:17,040 --> 00:24:23,549
show on the UI but currently it's not

00:24:20,010 --> 00:24:27,420
very convenient to not know that your

00:24:23,549 --> 00:24:29,190
form is like you show on the form a

00:24:27,420 --> 00:24:35,150
value but actually another one is used

00:24:29,190 --> 00:24:39,950
and for fixing this one code for example

00:24:35,150 --> 00:24:43,470
make forms more connected to the

00:24:39,950 --> 00:24:46,440
configuration schema which is related to

00:24:43,470 --> 00:24:50,100
the constraints for example so it's a

00:24:46,440 --> 00:24:52,080
bit interconnected but if you want to

00:24:50,100 --> 00:24:54,630
work on any of these then I'll be half

00:24:52,080 --> 00:24:59,059
happy to point you in the in the

00:24:54,630 --> 00:24:59,059
direction and help you getting along

00:25:00,410 --> 00:25:06,120
the config environment the the module

00:25:03,390 --> 00:25:10,950
that helped us to get the other

00:25:06,120 --> 00:25:13,080
achievements done so we we added the API

00:25:10,950 --> 00:25:14,880
to this module and then we added the use

00:25:13,080 --> 00:25:16,950
of the API that to this module and then

00:25:14,880 --> 00:25:18,990
we removed the API from the module and

00:25:16,950 --> 00:25:21,650
put it in core and then we removed the

00:25:18,990 --> 00:25:27,539
use of the API and put it in current and

00:25:21,650 --> 00:25:30,330
then now the module is empty again and

00:25:27,539 --> 00:25:33,929
so but the idea of it is postponed and

00:25:30,330 --> 00:25:36,090
not canceled so we still want to allow

00:25:33,929 --> 00:25:38,010
managing an environment specific

00:25:36,090 --> 00:25:41,039
configuration which which was the outset

00:25:38,010 --> 00:25:44,690
like the original goal that we agreed on

00:25:41,039 --> 00:25:48,059
was was to make this happen we we didn't

00:25:44,690 --> 00:25:52,110
we have to compromise and make a put in

00:25:48,059 --> 00:25:55,020
a much simpler version in in court again

00:25:52,110 --> 00:25:58,830
it's better to have something smaller

00:25:55,020 --> 00:26:05,820
done and then to dream of the the big

00:25:58,830 --> 00:26:11,400
fancy thing that wasn't done so this

00:26:05,820 --> 00:26:13,020
this is all not Rupa 9 only and I think

00:26:11,400 --> 00:26:14,640
in the meantime we will focus on on

00:26:13,020 --> 00:26:17,340
upgrading the contrib

00:26:14,640 --> 00:26:20,340
ecosystem we will not forget about this

00:26:17,340 --> 00:26:24,049
and you can still also help working on

00:26:20,340 --> 00:26:29,000
this it's not going to be wasted effort

00:26:24,049 --> 00:26:29,000
hopefully most likely

00:26:29,440 --> 00:26:36,110
it's always the amount of effort that

00:26:34,070 --> 00:26:39,950
goes into it if if it gets abandoned

00:26:36,110 --> 00:26:41,990
then it gets abandoned but as long as

00:26:39,950 --> 00:26:43,850
someone is interested in in in this and

00:26:41,990 --> 00:26:47,420
and I think there is still a clear use

00:26:43,850 --> 00:26:50,050
case for managing environment specific

00:26:47,420 --> 00:26:54,310
configuration then there will be a

00:26:50,050 --> 00:26:54,310
motivation to have this available

00:26:55,029 --> 00:27:01,139
so best practices and and how you can

00:26:59,190 --> 00:27:06,669
get involved

00:27:01,139 --> 00:27:11,729
so for contrib solutions use the new api

00:27:06,669 --> 00:27:15,580
where it makes sense help port all the I

00:27:11,729 --> 00:27:18,820
forgot how many the other initiatives

00:27:15,580 --> 00:27:22,090
had like a nice slide with like the con

00:27:18,820 --> 00:27:24,700
with their modules ecosystem there

00:27:22,090 --> 00:27:26,799
there's a lot of modules in with config

00:27:24,700 --> 00:27:30,070
something some of them can be

00:27:26,799 --> 00:27:32,979
consolidated because the new API is a

00:27:30,070 --> 00:27:36,509
different approach than all the modules

00:27:32,979 --> 00:27:36,509
that depend on config filter for example

00:27:37,469 --> 00:27:43,779
if if you want to be prepared for for

00:27:41,919 --> 00:27:45,339
this config environment module that I

00:27:43,779 --> 00:27:47,950
talked about that we're still going to

00:27:45,339 --> 00:27:50,349
work on for 2 / 9 then the best is to

00:27:47,950 --> 00:27:52,809
use config split but with only one

00:27:50,349 --> 00:27:57,190
environment per module with only one

00:27:52,809 --> 00:28:02,259
split per environment currently config

00:27:57,190 --> 00:28:05,649
split allows for as many as you want but

00:28:02,259 --> 00:28:09,309
when we get the config environment into

00:28:05,649 --> 00:28:13,539
core we will need to make it simpler and

00:28:09,309 --> 00:28:15,219
and more with less edge cases because

00:28:13,539 --> 00:28:17,080
config split allows for many different

00:28:15,219 --> 00:28:22,929
workflows and many different edge cases

00:28:17,080 --> 00:28:25,450
and some of them they work and most of

00:28:22,929 --> 00:28:29,879
them work but you can also corner

00:28:25,450 --> 00:28:34,059
yourself especially with updating

00:28:29,879 --> 00:28:37,149
configuration example if you have a

00:28:34,059 --> 00:28:38,649
split and you have configuration for a

00:28:37,149 --> 00:28:42,580
module that is only enabled in

00:28:38,649 --> 00:28:44,799
production and then you update this

00:28:42,580 --> 00:28:46,719
module and you have an update hook from

00:28:44,799 --> 00:28:50,339
this module then this update hook only

00:28:46,719 --> 00:28:52,509
runs in production and therefore the

00:28:50,339 --> 00:28:54,879
configuration that might be changed from

00:28:52,509 --> 00:28:57,519
this update hook only run in production

00:28:54,879 --> 00:29:00,190
and then you have nothing to import from

00:28:57,519 --> 00:29:03,009
sort of to still keep it safe it config

00:29:00,190 --> 00:29:04,779
split you can have you can adjust your

00:29:03,009 --> 00:29:07,539
workflow to export the configuration

00:29:04,779 --> 00:29:08,200
first like only the specific one but it

00:29:07,539 --> 00:29:10,630
all

00:29:08,200 --> 00:29:12,700
depending on how you use it and if we

00:29:10,630 --> 00:29:14,649
want to put it in core it needs to be

00:29:12,700 --> 00:29:17,830
solid like it needs to work for

00:29:14,649 --> 00:29:22,240
everybody the same way so we need to cut

00:29:17,830 --> 00:29:23,860
down a bit the complexity so you will

00:29:22,240 --> 00:29:28,090
not have multiple environments at the

00:29:23,860 --> 00:29:32,549
same time active for example as one of

00:29:28,090 --> 00:29:32,549
the ways of keeping it simple

00:29:32,779 --> 00:29:40,360
for distributions so like this third

00:29:35,690 --> 00:29:43,549
part of the CMI - there's three steps

00:29:40,360 --> 00:29:45,500
come together join the initiative and

00:29:43,549 --> 00:29:48,440
find the consensus around the workflow

00:29:45,500 --> 00:29:53,980
because there's a lot of people who

00:29:48,440 --> 00:29:57,080
maintain fantastic distributions but

00:29:53,980 --> 00:29:59,960
every distribution handles configuration

00:29:57,080 --> 00:30:04,850
updates in their own way and in their

00:29:59,960 --> 00:30:06,830
separate way and if you start a new

00:30:04,850 --> 00:30:09,169
distribution you you can choose one of

00:30:06,830 --> 00:30:13,190
the approaches and choose your own

00:30:09,169 --> 00:30:16,520
adventure and it would be great if we

00:30:13,190 --> 00:30:19,039
could find like a common solution or or

00:30:16,520 --> 00:30:21,409
like a common ground a common

00:30:19,039 --> 00:30:25,250
denominator that then every distribution

00:30:21,409 --> 00:30:28,340
can specialize and and benefit from but

00:30:25,250 --> 00:30:31,370
there is like a common ground of how you

00:30:28,340 --> 00:30:33,320
do this because currently while Drupal 8

00:30:31,370 --> 00:30:35,750
supports distributions you can obviously

00:30:33,320 --> 00:30:37,220
build distributions on Drupal 8 but the

00:30:35,750 --> 00:30:41,210
configuration management of the

00:30:37,220 --> 00:30:45,850
distribution in Drupal 8 is somewhat

00:30:41,210 --> 00:30:50,000
lacking call it and be nice for it and

00:30:45,850 --> 00:30:52,460
the important note here the this new API

00:30:50,000 --> 00:30:56,240
that will be added is for is designed

00:30:52,460 --> 00:30:58,190
for configuration synchronization so do

00:30:56,240 --> 00:31:02,559
not try to use this new API for

00:30:58,190 --> 00:31:07,580
distributions but there's a very good

00:31:02,559 --> 00:31:10,340
alternative the config distro the it is

00:31:07,580 --> 00:31:12,529
a module it named config distro because

00:31:10,340 --> 00:31:14,690
naming things is hard and I didn't

00:31:12,529 --> 00:31:17,330
really know how to better name it

00:31:14,690 --> 00:31:19,669
ideally this would be something that

00:31:17,330 --> 00:31:21,620
core would support but we need to have a

00:31:19,669 --> 00:31:24,200
consensus first we need to first know

00:31:21,620 --> 00:31:28,279
that this is actually what core should

00:31:24,200 --> 00:31:30,500
support and if there's an athlete

00:31:28,279 --> 00:31:32,260
because currently there is the patch is

00:31:30,500 --> 00:31:35,419
not committed yet but there is a patch

00:31:32,260 --> 00:31:38,240
that transforms completely how config

00:31:35,419 --> 00:31:41,210
distro used to work in to working the

00:31:38,240 --> 00:31:43,640
same way as the new API does so there is

00:31:41,210 --> 00:31:46,820
a new event that is dispatched when the

00:31:43,640 --> 00:31:49,310
configuration is updated so

00:31:46,820 --> 00:31:52,280
the way it works is you import the

00:31:49,310 --> 00:31:55,010
configuration but instead of importing

00:31:52,280 --> 00:31:57,680
it from the sync directory from from the

00:31:55,010 --> 00:31:58,940
configuration that you staged it imports

00:31:57,680 --> 00:32:02,690
from itself from the Eclipse

00:31:58,940 --> 00:32:05,090
configuration and then it applies like

00:32:02,690 --> 00:32:09,190
the event system like you do all all of

00:32:05,090 --> 00:32:12,020
the event subscribers can change the

00:32:09,190 --> 00:32:15,670
configuration that you want to be active

00:32:12,020 --> 00:32:24,380
after you have updated your distribution

00:32:15,670 --> 00:32:28,370
so it's it's a way around update hoops

00:32:24,380 --> 00:32:31,090
currently probably the best solution is

00:32:28,370 --> 00:32:33,860
to use update hoops for your

00:32:31,090 --> 00:32:35,840
distribution like you change your

00:32:33,860 --> 00:32:37,880
configuration way in your module and

00:32:35,840 --> 00:32:39,710
then you have an update hooks that makes

00:32:37,880 --> 00:32:41,900
the new configuration be the same as the

00:32:39,710 --> 00:32:44,420
old and you have to have a lot of logic

00:32:41,900 --> 00:32:47,060
around to make sure that the the

00:32:44,420 --> 00:32:50,720
configuration is updated in such a way

00:32:47,060 --> 00:32:52,670
that it still makes sense because the

00:32:50,720 --> 00:32:54,110
people that install the site based on

00:32:52,670 --> 00:32:57,410
your distribution might have changed it

00:32:54,110 --> 00:32:59,350
or might not have and maybe you want to

00:32:57,410 --> 00:33:02,060
allow this change and made in updates

00:32:59,350 --> 00:33:04,580
yeah we need to find a good a common

00:33:02,060 --> 00:33:07,130
workflow or some some sort of consensus

00:33:04,580 --> 00:33:11,809
around this

00:33:07,130 --> 00:33:18,200
and finally a word about multi-site last

00:33:11,809 --> 00:33:21,100
time at the developer days like 90% of

00:33:18,200 --> 00:33:23,809
the questions were about multi-site and

00:33:21,100 --> 00:33:26,230
my suggestion would be to treat a

00:33:23,809 --> 00:33:29,179
multi-site as you would a distribution

00:33:26,230 --> 00:33:31,909
with like a multi-site is a distribution

00:33:29,179 --> 00:33:34,190
where it just happens that the person

00:33:31,909 --> 00:33:36,649
who uses the distribution and the person

00:33:34,190 --> 00:33:42,740
who maintains the distribution is the

00:33:36,649 --> 00:33:46,009
same team so shared code but only shared

00:33:42,740 --> 00:33:49,929
some of the configuration it's a bit it

00:33:46,009 --> 00:33:52,669
can work but with lots of caveats the

00:33:49,929 --> 00:33:56,990
the configuration split has been used

00:33:52,669 --> 00:33:58,940
successfully by some I was told but if

00:33:56,990 --> 00:34:00,799
if you use the configuration

00:33:58,940 --> 00:34:04,159
synchronization process which is meant

00:34:00,799 --> 00:34:08,000
for deploying the configuration of one

00:34:04,159 --> 00:34:10,129
site to another environment you're not

00:34:08,000 --> 00:34:14,810
using the tool for what it is built for

00:34:10,129 --> 00:34:16,940
and and it depends like really on if

00:34:14,810 --> 00:34:19,819
this is a good fit for your workflow so

00:34:16,940 --> 00:34:22,270
if do you have a staging environment for

00:34:19,819 --> 00:34:25,970
each of the site in your multi-site

00:34:22,270 --> 00:34:28,159
installation or how do you develop do

00:34:25,970 --> 00:34:30,589
you have like a master instance or do

00:34:28,159 --> 00:34:33,050
you develop block features for each of

00:34:30,589 --> 00:34:36,649
them do you switch locally between which

00:34:33,050 --> 00:34:39,260
instance of the multi-site you have all

00:34:36,649 --> 00:34:40,970
of these things also here come together

00:34:39,260 --> 00:34:42,859
we would love to have more input of

00:34:40,970 --> 00:34:45,020
people who use multi-site with the

00:34:42,859 --> 00:34:48,649
configuration management

00:34:45,020 --> 00:34:51,580
so yeah join the conflict

00:34:48,649 --> 00:34:55,520
conversation it's important that you

00:34:51,580 --> 00:34:59,240
contribute as well due to the ideas and

00:34:55,520 --> 00:34:59,810
if you if your business model depends on

00:34:59,240 --> 00:35:02,180
it

00:34:59,810 --> 00:35:03,619
then you have a very good motivation to

00:35:02,180 --> 00:35:07,310
help out

00:35:03,619 --> 00:35:10,550
I think join us for the contribution

00:35:07,310 --> 00:35:12,830
opportunist I will be there to help

00:35:10,550 --> 00:35:16,190
review patches and commit stuff to my

00:35:12,830 --> 00:35:21,110
country things obviously I cannot commit

00:35:16,190 --> 00:35:24,020
to other things but also on core issues

00:35:21,110 --> 00:35:27,110
that I can also not commit but I can

00:35:24,020 --> 00:35:29,470
help with and great the session thank

00:35:27,110 --> 00:35:29,470
you very much

00:35:35,820 --> 00:35:41,350
and there's still a couple of minutes

00:35:38,830 --> 00:35:42,490
for questions and there's too many of

00:35:41,350 --> 00:35:47,950
you for all of you to ask questions

00:35:42,490 --> 00:35:49,540
about that yeah go ahead personal for

00:35:47,950 --> 00:35:52,630
regarding distributions is there an

00:35:49,540 --> 00:35:56,550
issue that's probably just saying that I

00:35:52,630 --> 00:35:56,550
would like to portrait or

00:35:58,170 --> 00:36:02,690
a good place to talk about

00:36:03,880 --> 00:36:07,410
all right was on the first night

00:36:09,740 --> 00:36:12,880
yeah that one

00:36:14,180 --> 00:36:52,170
yes exactly so you would also read like

00:36:50,580 --> 00:36:56,310
what kind of system do you currently use

00:36:52,170 --> 00:37:04,650
to to use this module like what how do

00:36:56,310 --> 00:37:06,660
you hook into the yes when you and you

00:37:04,650 --> 00:37:08,400
edit you it records but how how do you

00:37:06,660 --> 00:37:14,880
make sure that the recorded

00:37:08,400 --> 00:37:17,609
configuration doesn't get reverted it

00:37:14,880 --> 00:37:20,890
shows up which changes have been made by

00:37:17,609 --> 00:37:26,339
which user and then

00:37:20,890 --> 00:37:26,339
this traitor you can check this locks

00:37:27,589 --> 00:37:33,439
would like to override the configuration

00:37:30,769 --> 00:37:35,910
changes from the client you can delete

00:37:33,439 --> 00:37:38,160
blocks

00:37:35,910 --> 00:37:45,210
no but I think we need to discuss this

00:37:38,160 --> 00:37:48,950
later so it's very interesting I will

00:37:45,210 --> 00:37:48,950
check it out other questions yes

00:37:52,520 --> 00:38:00,010
which country modules are abandoned so I

00:37:58,500 --> 00:38:01,880
[Music]

00:38:00,010 --> 00:38:06,349
don't know exactly

00:38:01,880 --> 00:38:08,720
and the conflict exclude module is

00:38:06,349 --> 00:38:10,369
completely replaced you if you can

00:38:08,720 --> 00:38:14,240
already start using it on eight point

00:38:10,369 --> 00:38:16,220
seven it was it's not by by the

00:38:14,240 --> 00:38:18,349
drupal.org statistics a widely used

00:38:16,220 --> 00:38:19,910
module but you can use it on eight point

00:38:18,349 --> 00:38:21,650
seven already or eight point six and

00:38:19,910 --> 00:38:23,030
then when you update to eight point

00:38:21,650 --> 00:38:26,510
eight it will it will be a drop-in

00:38:23,030 --> 00:38:30,950
replacement it that's for sure then the

00:38:26,510 --> 00:38:33,080
other one the config filter there is

00:38:30,950 --> 00:38:35,780
already a patch but we need to update

00:38:33,080 --> 00:38:39,349
the test for it for config filter to

00:38:35,780 --> 00:38:41,720
make a 2 dot X that if you use modules

00:38:39,349 --> 00:38:44,630
that depend on config filter they will

00:38:41,720 --> 00:38:47,599
use the new API so the config filter 2

00:38:44,630 --> 00:38:49,910
dot X will be the bridge between the

00:38:47,599 --> 00:38:52,540
config filter 1 dot X and the new

00:38:49,910 --> 00:38:52,540
Carribean

00:38:54,460 --> 00:39:00,970
one more question one more minute yes

00:38:56,660 --> 00:39:00,970
you had mentioned is not disabling

00:39:02,460 --> 00:39:04,819
feelings

00:39:06,120 --> 00:39:11,130
you I

00:39:08,050 --> 00:39:11,130
for example field

00:39:12,500 --> 00:39:17,360
yeah so all the modules that don't have

00:39:14,810 --> 00:39:19,520
like a huge impact on the configuration

00:39:17,360 --> 00:39:22,250
so if you have notice that provide

00:39:19,520 --> 00:39:24,980
third-party settings for example they're

00:39:22,250 --> 00:39:27,140
dangerous but modules that that are just

00:39:24,980 --> 00:39:28,970
at you is like views UI

00:39:27,140 --> 00:39:32,140
perfectly safe you use your eyes doesn't

00:39:28,970 --> 00:39:36,050
have any like special configuration that

00:39:32,140 --> 00:39:38,000
effects all the configuration like the

00:39:36,050 --> 00:39:41,330
val has also configuration but only its

00:39:38,000 --> 00:39:46,550
own it doesn't go and change

00:39:41,330 --> 00:39:49,930
lots of configuration I think that's it

00:39:46,550 --> 00:39:49,930
thank you very much for joining

00:39:51,570 --> 00:39:56,970

YouTube URL: https://www.youtube.com/watch?v=k-I3oOWHWVA


