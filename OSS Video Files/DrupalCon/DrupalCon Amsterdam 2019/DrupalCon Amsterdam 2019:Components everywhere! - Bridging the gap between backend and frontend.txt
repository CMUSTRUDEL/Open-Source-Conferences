Title: DrupalCon Amsterdam 2019:Components everywhere! - Bridging the gap between backend and frontend
Publication date: 2019-10-29
Playlist: DrupalCon Amsterdam 2019
Description: 
	Room: Auditorium
Presenter: Fabian Franz
Description: React, Webcomponents, Vue, Svelte, ... the number of frontend technologies has increased steadily, but it is still a challenge to bridge the gap between the backend and interactive digital experiences within Drupal.

While decoupled Drupal is one answer, not every application is suited for the decoupled way.

I think I have finally cracked the code and want to propose a way to structure web sites so that (web-)components become a first-class citizen -- also on the backend.

The goal is to convert a 'most_recent' content block from being rendered server-side in the traditional way to being rendered in a hybrid way first by Drupal that is then updated in real-time via React.

There will be a sweet demo that you don't want to miss!

After this session every participant should be able to implement this pattern and hopefully Core can in Drupal 9 and 10 lay the groundwork to make all of this easier!

This is the culmination of years of research in this area and is fascinatingly related to performance as well.
Captions: 
	00:00:00,000 --> 00:00:14,219
ah hello and welcome people are still

00:00:10,950 --> 00:00:19,520
shooting in a little bit so but we start

00:00:14,219 --> 00:00:22,650
kind of like whispering things so we

00:00:19,520 --> 00:00:26,430
talk a little bit my name is Fabian

00:00:22,650 --> 00:00:28,699
France and I'm here today and I'm so

00:00:26,430 --> 00:00:34,410
excited to be here again at DrupalCon

00:00:28,699 --> 00:00:36,809
speaking to you and what I have today

00:00:34,410 --> 00:00:40,530
for you I'm so excited about I've talked

00:00:36,809 --> 00:00:43,140
everyone I talked to right now and so

00:00:40,530 --> 00:00:46,110
even if people coming in style will

00:00:43,140 --> 00:00:47,280
start they would then need to watch a

00:00:46,110 --> 00:00:49,820
recording later

00:00:47,280 --> 00:00:51,780
it's a packed session so there we go

00:00:49,820 --> 00:00:53,460
components everywhere we are bridging

00:00:51,780 --> 00:00:55,379
the gap between the back and then the

00:00:53,460 --> 00:00:59,100
front end it's a vision for Drupal core

00:00:55,379 --> 00:01:00,960
and first of all a huge hello to you all

00:00:59,100 --> 00:01:03,170
in Amsterdam

00:01:00,960 --> 00:01:08,880
welcome to Drupal con welcome to my talk

00:01:03,170 --> 00:01:10,409
I said I'm I am excited and this is so

00:01:08,880 --> 00:01:14,490
cool

00:01:10,409 --> 00:01:16,290
a bit first of all please click away the

00:01:14,490 --> 00:01:20,820
cookie banner accept our terms and

00:01:16,290 --> 00:01:22,830
conditions no it's targeted mainly as a

00:01:20,820 --> 00:01:24,540
beginner session however everyone should

00:01:22,830 --> 00:01:26,400
be able to learn something because as

00:01:24,540 --> 00:01:28,549
some never-before-seen concepts I've

00:01:26,400 --> 00:01:31,259
searched all Internet

00:01:28,549 --> 00:01:33,210
the session description had react but

00:01:31,259 --> 00:01:35,270
I've decided in the end for vous because

00:01:33,210 --> 00:01:37,650
it's a little bit easier to understand

00:01:35,270 --> 00:01:39,869
but everything is kind of fronted

00:01:37,650 --> 00:01:42,240
technology agnostic you can implement it

00:01:39,869 --> 00:01:44,210
with whatever you want it's just that

00:01:42,240 --> 00:01:47,009
that turned out to be the easiest one

00:01:44,210 --> 00:01:50,210
there's working patterns in code that

00:01:47,009 --> 00:01:53,700
you could be implementing today however

00:01:50,210 --> 00:01:55,409
it's important that a lot a lot a lot a

00:01:53,700 --> 00:01:57,390
lot a lot of this work and still needs

00:01:55,409 --> 00:02:01,579
to be done there's some basic color

00:01:57,390 --> 00:02:04,079
codes unfortunately it's not completely

00:02:01,579 --> 00:02:05,729
super everything but if you see those

00:02:04,079 --> 00:02:08,280
colors you can be pretty sure or what it

00:02:05,729 --> 00:02:11,310
means the Drupal or the backend it's

00:02:08,280 --> 00:02:13,400
blue drop-ins blue obviously we react up

00:02:11,310 --> 00:02:14,840
components I've made green

00:02:13,400 --> 00:02:18,230
whenever we're talking about real-time

00:02:14,840 --> 00:02:20,150
technologies they will be pink if

00:02:18,230 --> 00:02:21,439
there's something that's important that

00:02:20,150 --> 00:02:23,780
attention please

00:02:21,439 --> 00:02:26,480
it's yellow and if something doesn't

00:02:23,780 --> 00:02:29,569
work I don't like it or it's a problem

00:02:26,480 --> 00:02:33,349
then we make it right let's let's start

00:02:29,569 --> 00:02:36,170
about you who of you has used Troopa 5.0

00:02:33,349 --> 00:02:40,900
and lower Wow

00:02:36,170 --> 00:02:48,680
quite some veterans Drupal 6 and huh Wow

00:02:40,900 --> 00:02:53,540
cool true 7 and Drupal 8 nice Drupal 9

00:02:48,680 --> 00:02:58,670
someone and trooper 42 any time

00:02:53,540 --> 00:03:00,590
travelers here no too bad so about me

00:02:58,670 --> 00:03:02,450
I'm Fabien France I'm a senior architect

00:03:00,590 --> 00:03:04,489
performance and team leader I take one

00:03:02,450 --> 00:03:06,260
consulting it's best company I've ever

00:03:04,489 --> 00:03:09,530
worked on I'm a Drupal 7 branch

00:03:06,260 --> 00:03:11,239
maintainer I got tricked into Drupal 8

00:03:09,530 --> 00:03:12,799
Korra before the feature freeze and

00:03:11,239 --> 00:03:15,079
afterwards I've helped hundreds of

00:03:12,799 --> 00:03:18,049
contributors that actually made the real

00:03:15,079 --> 00:03:19,669
work of making it possible I've attacked

00:03:18,049 --> 00:03:21,169
the Drupal 8 caching system together

00:03:19,669 --> 00:03:23,359
with familiars I've brought you

00:03:21,169 --> 00:03:25,790
placeholders and big pipe we've talked a

00:03:23,359 --> 00:03:32,599
lot about that in previous Drupal cons

00:03:25,790 --> 00:03:35,359
and this is my next big thing one of the

00:03:32,599 --> 00:03:37,489
challenges I faced when I was looking in

00:03:35,359 --> 00:03:41,480
all this d kappa drupal and all the

00:03:37,489 --> 00:03:43,069
things is that no g as singer said

00:03:41,480 --> 00:03:45,819
renewing is not the answer

00:03:43,069 --> 00:03:48,650
overall d kappa drupal it works great

00:03:45,819 --> 00:03:50,900
react move out or whatever they all have

00:03:48,650 --> 00:03:53,780
server-side rendering but there's a

00:03:50,900 --> 00:03:56,359
problem because why should i mix this

00:03:53,780 --> 00:03:59,510
PHP and node and not just direct to use

00:03:56,359 --> 00:04:03,560
a node based CMS and it's something we

00:03:59,510 --> 00:04:06,319
hear more and more in like this PHP

00:04:03,560 --> 00:04:08,690
world we as kind of starting to do this

00:04:06,319 --> 00:04:10,669
market share there add to the node thing

00:04:08,690 --> 00:04:13,760
and we are also seen by a lot of people

00:04:10,669 --> 00:04:16,449
like from the react community effect was

00:04:13,760 --> 00:04:18,169
a lot of like react developers in the

00:04:16,449 --> 00:04:20,389
past month

00:04:18,169 --> 00:04:24,139
pure reactive elements like the hardcore

00:04:20,389 --> 00:04:26,990
front NS and really great people and we

00:04:24,139 --> 00:04:29,690
are seen at that thing from the past

00:04:26,990 --> 00:04:32,300
and one example for example when we were

00:04:29,690 --> 00:04:33,979
like yeah we will just wear HTML in the

00:04:32,300 --> 00:04:36,530
database they were like oh but what

00:04:33,979 --> 00:04:38,720
about security what about that and we've

00:04:36,530 --> 00:04:40,669
solved that problem longer than react

00:04:38,720 --> 00:04:45,320
exists with our input file output

00:04:40,669 --> 00:04:47,210
filtering anyway also not every

00:04:45,320 --> 00:04:49,190
application is suited for the fully

00:04:47,210 --> 00:04:52,120
decoupled way there's still a lot of

00:04:49,190 --> 00:04:54,410
benefit to building Drupal things

00:04:52,120 --> 00:04:56,840
traditionally like you've ever done with

00:04:54,410 --> 00:04:59,449
page requests and everything so the goal

00:04:56,840 --> 00:05:01,940
of that saying is said no no TS is

00:04:59,449 --> 00:05:04,190
needed we have mostly PHP a little bit

00:05:01,940 --> 00:05:07,310
of JavaScript not like all JavaScript

00:05:04,190 --> 00:05:10,070
and then a little PHP and we still have

00:05:07,310 --> 00:05:14,330
interactive apps and also to make Drupal

00:05:10,070 --> 00:05:17,539
front and finally easy and fun the other

00:05:14,330 --> 00:05:19,340
motivation I had was and I've been I

00:05:17,539 --> 00:05:20,840
mean everyone's saying web components

00:05:19,340 --> 00:05:22,460
are the future than others are saying no

00:05:20,840 --> 00:05:25,090
it's not they're not of future they're

00:05:22,460 --> 00:05:28,190
totally not the future they're bad but

00:05:25,090 --> 00:05:30,229
components web components they're not

00:05:28,190 --> 00:05:32,330
the future they are here now they're

00:05:30,229 --> 00:05:34,099
here at Drupal con there was one

00:05:32,330 --> 00:05:35,630
training about it there are several

00:05:34,099 --> 00:05:36,919
sessions about it there are several

00:05:35,630 --> 00:05:39,760
buffs about it

00:05:36,919 --> 00:05:42,949
components pattern lab all of that

00:05:39,760 --> 00:05:45,050
they're here but we actually need them

00:05:42,949 --> 00:05:45,889
in core we don't need them somewhere

00:05:45,050 --> 00:05:48,080
here and there

00:05:45,889 --> 00:05:51,050
etc because when I've learned one thing

00:05:48,080 --> 00:05:52,789
about my long history with Drupal it was

00:05:51,050 --> 00:05:55,190
that if you really want to make change

00:05:52,789 --> 00:05:57,500
it needs to begin at the core and there

00:05:55,190 --> 00:06:00,470
is where you can make the huge impact on

00:05:57,500 --> 00:06:01,880
things like what's trick yes we could

00:06:00,470 --> 00:06:04,729
have a conjure up trick but it would

00:06:01,880 --> 00:06:06,500
never have had the impact that trick was

00:06:04,729 --> 00:06:09,530
and core would have as author has came

00:06:06,500 --> 00:06:11,389
to all the nice features unfortunately

00:06:09,530 --> 00:06:13,370
the same component libraries can nowhere

00:06:11,389 --> 00:06:15,590
so far that was kind of where I stopped

00:06:13,370 --> 00:06:18,080
at previous to pecans I kind of worked

00:06:15,590 --> 00:06:20,479
with Sigma's along the way he again

00:06:18,080 --> 00:06:23,210
began at the contribution days and we

00:06:20,479 --> 00:06:25,490
brainstormed and we checked etc but in

00:06:23,210 --> 00:06:28,310
the end kind of would whim others etc

00:06:25,490 --> 00:06:31,490
found this team compound library in core

00:06:28,310 --> 00:06:34,610
there wasn't a real benefit there was

00:06:31,490 --> 00:06:38,539
nothing that would like say that this

00:06:34,610 --> 00:06:40,669
investment would be worth it that we

00:06:38,539 --> 00:06:43,729
should be doing that same system works

00:06:40,669 --> 00:06:47,749
it works great um it was not different

00:06:43,729 --> 00:06:50,689
enough from what we have to say that we

00:06:47,749 --> 00:06:53,330
should be doing it so what's the web

00:06:50,689 --> 00:06:55,849
component at a very basic level web

00:06:53,330 --> 00:06:59,300
components are custom elements that mean

00:06:55,849 --> 00:07:02,389
you just define like menu item or you

00:06:59,300 --> 00:07:05,029
define section you define article you

00:07:02,389 --> 00:07:06,229
define my date picker you define

00:07:05,029 --> 00:07:09,499
whatever you want

00:07:06,229 --> 00:07:12,050
it's just custom HTML tag it's your HTML

00:07:09,499 --> 00:07:15,650
tag you are using it ence defined in

00:07:12,050 --> 00:07:17,750
JavaScript a component consists usually

00:07:15,650 --> 00:07:21,099
of HTML CSS and JavaScript

00:07:17,750 --> 00:07:25,779
it is a template so you have a template

00:07:21,099 --> 00:07:28,370
then you have CSS it's usually scoped to

00:07:25,779 --> 00:07:30,379
the component itself so it shouldn't

00:07:28,370 --> 00:07:32,509
affect anything else on the page and

00:07:30,379 --> 00:07:34,520
then we have JavaScript it's also scoped

00:07:32,509 --> 00:07:39,129
so it should only affect the component

00:07:34,520 --> 00:07:41,509
and not the navbar which would be bad

00:07:39,129 --> 00:07:45,550
components are overall configured via

00:07:41,509 --> 00:07:49,639
props and object attributes props means

00:07:45,550 --> 00:07:52,159
you all know it image does whatever

00:07:49,639 --> 00:07:54,139
very simple here we have our custom menu

00:07:52,159 --> 00:07:57,020
item we are just putting I want to

00:07:54,139 --> 00:08:00,319
reference a section one and now I have a

00:07:57,020 --> 00:08:02,649
prop the problem is if I want to put a

00:08:00,319 --> 00:08:06,589
prop in there and they have an object

00:08:02,649 --> 00:08:09,710
then what JavaScript puts out is bracket

00:08:06,589 --> 00:08:11,899
object bracket and that's not so useful

00:08:09,710 --> 00:08:16,000
so there's another way to work with web

00:08:11,899 --> 00:08:19,250
components and that is to assign like an

00:08:16,000 --> 00:08:21,949
attribute to the object itself and then

00:08:19,250 --> 00:08:24,589
I can put more data in it and I don't

00:08:21,949 --> 00:08:26,779
really like that in my opinion whenever

00:08:24,589 --> 00:08:28,849
we have something that's so complex it

00:08:26,779 --> 00:08:30,500
needs to come from a data tree it

00:08:28,849 --> 00:08:32,930
shouldn't be a property it's no longer

00:08:30,500 --> 00:08:34,519
configuration it's data and if it's

00:08:32,930 --> 00:08:39,409
configuration something is wrong with

00:08:34,519 --> 00:08:40,820
the design of it a pure men's component

00:08:39,409 --> 00:08:44,769
especially for all of those familiar

00:08:40,820 --> 00:08:44,769
with stupid six seven and eight and

00:08:44,920 --> 00:08:49,490
because we can build like it like a pure

00:08:47,540 --> 00:08:52,040
men's component like right now we take a

00:08:49,490 --> 00:08:54,370
trick template let me take the Drupal

00:08:52,040 --> 00:08:55,870
behaviors and if you ever

00:08:54,370 --> 00:08:59,200
in the drupal behavior you know there

00:08:55,870 --> 00:09:00,790
are some best practices around it some

00:08:59,200 --> 00:09:04,450
are not for outsmart fallout but

00:09:00,790 --> 00:09:06,700
basically what you ensure is you have

00:09:04,450 --> 00:09:09,070
like usually you have an configuration

00:09:06,700 --> 00:09:12,160
it's it's generate configuration for for

00:09:09,070 --> 00:09:13,990
example a photo slideshow then you have

00:09:12,160 --> 00:09:16,300
instance configuration this photo

00:09:13,990 --> 00:09:18,790
slideshow has three columns then you

00:09:16,300 --> 00:09:20,590
have dot ones I only want to apply this

00:09:18,790 --> 00:09:23,800
once and then you have the context which

00:09:20,590 --> 00:09:28,560
the scope it is Drupal JavaScript Ajax

00:09:23,800 --> 00:09:31,780
Pacific but so basically I've kind of

00:09:28,560 --> 00:09:33,520
was too long for the slide here but I've

00:09:31,780 --> 00:09:35,560
written it up some time and we could

00:09:33,520 --> 00:09:37,450
completely abstract that all out the

00:09:35,560 --> 00:09:41,290
scoping etc and just have a class that

00:09:37,450 --> 00:09:44,800
now said similar to a web component this

00:09:41,290 --> 00:09:47,980
is as yes it sucks but just putting in

00:09:44,800 --> 00:09:51,070
that menu item before everything you can

00:09:47,980 --> 00:09:52,720
scope it obviously all the front-end

00:09:51,070 --> 00:09:54,850
technologies make this much nicer it

00:09:52,720 --> 00:09:56,560
cetera and then we could also be

00:09:54,850 --> 00:09:57,940
investing in the technology however we

00:09:56,560 --> 00:09:59,590
have something that works now it's

00:09:57,940 --> 00:10:02,410
pyramids component but we have all that

00:09:59,590 --> 00:10:06,640
we need so it's not a component what's

00:10:02,410 --> 00:10:08,800
not a component is this and so there we

00:10:06,640 --> 00:10:11,380
have a div he has a class we have a li

00:10:08,800 --> 00:10:13,570
we have a div and yeah it's kind of a

00:10:11,380 --> 00:10:17,620
Drupal outputs right now and actually

00:10:13,570 --> 00:10:22,240
it's diff diff diff diff it's Martin

00:10:17,620 --> 00:10:24,850
snagged me so what's really cool about

00:10:22,240 --> 00:10:27,250
component trees and one of the things

00:10:24,850 --> 00:10:30,670
that really excites me is they're so

00:10:27,250 --> 00:10:34,240
nice to read and so nice to to write

00:10:30,670 --> 00:10:36,850
also it's like it gives the fun back

00:10:34,240 --> 00:10:41,740
into into seeming like that in that I

00:10:36,850 --> 00:10:44,290
can just write HTML code and I write my

00:10:41,740 --> 00:10:46,420
components directly as HTML I don't have

00:10:44,290 --> 00:10:48,430
to learn some syntax for including have

00:10:46,420 --> 00:10:50,950
a function available or not available I

00:10:48,430 --> 00:10:53,890
have a component library and I use those

00:10:50,950 --> 00:10:56,880
components and I think also that's a

00:10:53,890 --> 00:11:00,580
huge appeal of all those technologies

00:10:56,880 --> 00:11:02,770
that are out in the front end so but

00:11:00,580 --> 00:11:04,750
that we have set already like we have

00:11:02,770 --> 00:11:07,170
such many API we have such render tree

00:11:04,750 --> 00:11:10,850
we have the same

00:11:07,170 --> 00:11:16,589
hooks we have the types etc thanks much

00:11:10,850 --> 00:11:19,290
and in a way we have been in a way we

00:11:16,589 --> 00:11:22,079
don't and to understand a little why

00:11:19,290 --> 00:11:23,160
it's not enough we have to like take a

00:11:22,079 --> 00:11:25,949
little history lesson

00:11:23,160 --> 00:11:28,470
so because troopers Rena tree in a sense

00:11:25,949 --> 00:11:32,970
it is like a virtual home but it has one

00:11:28,470 --> 00:11:34,680
floor you've never thought about I bet

00:11:32,970 --> 00:11:40,170
you all just got a session because of

00:11:34,680 --> 00:11:43,380
that linkbait so in Drupal 6 what we had

00:11:40,170 --> 00:11:45,930
was HTML seam item list was the template

00:11:43,380 --> 00:11:46,560
had all the logic in it and it's not

00:11:45,930 --> 00:11:50,130
pure

00:11:46,560 --> 00:11:51,899
it was early rendering so HTML then we

00:11:50,130 --> 00:11:55,980
would be putting the HTML and some other

00:11:51,899 --> 00:11:58,649
HTML etc at 5:00 in Drupal 6 that

00:11:55,980 --> 00:12:01,430
changed thanks to our miles a million of

00:11:58,649 --> 00:12:04,230
cows many were still now him also fuse

00:12:01,430 --> 00:12:06,120
recently tied Shaun's talked with him

00:12:04,230 --> 00:12:08,910
about it and he was like yeah

00:12:06,120 --> 00:12:12,300
pure templates that was why I introduced

00:12:08,910 --> 00:12:14,970
pre process in it and I was like ah that

00:12:12,300 --> 00:12:17,209
was it was about I mean it seems us to

00:12:14,970 --> 00:12:20,430
maintain us a long time here but well

00:12:17,209 --> 00:12:22,949
understanding history helps so now our

00:12:20,430 --> 00:12:25,170
templates are pure they have no business

00:12:22,949 --> 00:12:27,329
logic they have just a presentation the

00:12:25,170 --> 00:12:29,579
pre process is preparing the data and

00:12:27,329 --> 00:12:33,959
then it's displayed but the problem is

00:12:29,579 --> 00:12:36,029
we still had the early rendering so that

00:12:33,959 --> 00:12:38,579
changed in Drupal 7 because women really

00:12:36,029 --> 00:12:42,060
give contrib more possibility of

00:12:38,579 --> 00:12:44,070
changing the render tree later so and

00:12:42,060 --> 00:12:46,320
that was actually inspired by form API

00:12:44,070 --> 00:12:49,019
so we're building a render tree we are

00:12:46,320 --> 00:12:52,560
rendering that tree and this looks kind

00:12:49,019 --> 00:12:55,380
of like this seam item list items but

00:12:52,560 --> 00:12:57,480
the templates are not poor but huge

00:12:55,380 --> 00:13:02,069
advantage it can be modified till the

00:12:57,480 --> 00:13:04,260
end there's also this render so we had

00:13:02,069 --> 00:13:06,300
to put a render whenever it's a render

00:13:04,260 --> 00:13:08,670
array and not a random and it was not a

00:13:06,300 --> 00:13:11,730
render array so there was a little thing

00:13:08,670 --> 00:13:13,949
and then trick came and it says one

00:13:11,730 --> 00:13:15,540
thing I would regret today he is not

00:13:13,949 --> 00:13:19,200
getting rid of her and that raised at

00:13:15,540 --> 00:13:23,470
that point but instead supporting them

00:13:19,200 --> 00:13:25,510
because the templates are not pure bet

00:13:23,470 --> 00:13:27,339
they seem pure because it can just

00:13:25,510 --> 00:13:29,110
four-eyed side by left but internally

00:13:27,339 --> 00:13:31,000
it's still doing the same render called

00:13:29,110 --> 00:13:34,390
like before because we kept those

00:13:31,000 --> 00:13:37,510
memories then big pipe and placeholders

00:13:34,390 --> 00:13:40,330
dynamic page cash came along and we said

00:13:37,510 --> 00:13:44,050
we need to render even later to improve

00:13:40,330 --> 00:13:45,850
performance we take the static and the

00:13:44,050 --> 00:13:48,100
dynamic sayings we put them out together

00:13:45,850 --> 00:13:49,900
and then we first went to the static

00:13:48,100 --> 00:13:52,540
sayings later we render the other things

00:13:49,900 --> 00:13:54,339
and then we found out those objects in

00:13:52,540 --> 00:13:56,529
the render tree that's because it could

00:13:54,339 --> 00:14:00,580
be modified or even did that was

00:13:56,529 --> 00:14:02,800
comments a big problem so we introduced

00:14:00,580 --> 00:14:05,470
lazy builders safe no dependencies on

00:14:02,800 --> 00:14:06,220
the current page requests usually they

00:14:05,470 --> 00:14:09,040
are really great

00:14:06,220 --> 00:14:12,700
the Colbeck lords the data and they

00:14:09,040 --> 00:14:15,160
would pursuit of Hawaii is a Ajax etc so

00:14:12,700 --> 00:14:17,290
lazy builders are really nice and clean

00:14:15,160 --> 00:14:20,350
in that they would be good stepping

00:14:17,290 --> 00:14:22,330
stone for implementing that so we found

00:14:20,350 --> 00:14:24,270
a pattern here we try to render later

00:14:22,330 --> 00:14:27,760
and later to improve performance

00:14:24,270 --> 00:14:34,839
so in Drupal 42 we're directly running

00:14:27,760 --> 00:14:37,420
inside your hat just you wait so Drupal

00:14:34,839 --> 00:14:39,300
nine ten eleven let's run it even later

00:14:37,420 --> 00:14:42,600
we just ran out on the client you know

00:14:39,300 --> 00:14:46,330
we have said already decoupled Drupal

00:14:42,600 --> 00:14:48,010
kind of no we don't have that and the

00:14:46,330 --> 00:14:49,660
reason is and that's the key and it's

00:14:48,010 --> 00:14:52,120
one key sense of this whole presentation

00:14:49,660 --> 00:14:53,890
we need to Decapolis in the backend we

00:14:52,120 --> 00:14:55,779
need to recover dualism back and we need

00:14:53,890 --> 00:14:56,620
to describe within the backend just

00:14:55,779 --> 00:14:59,620
repeat after me

00:14:56,620 --> 00:15:02,680
we need to dekappa Drupal within the

00:14:59,620 --> 00:15:05,650
backend and the reason is because the

00:15:02,680 --> 00:15:07,029
render tree is so complex we have data

00:15:05,650 --> 00:15:09,220
we have configuration we have

00:15:07,029 --> 00:15:10,750
presentation we have templates we have

00:15:09,220 --> 00:15:12,760
pre process we have functions we have

00:15:10,750 --> 00:15:15,029
even access control in that and that's

00:15:12,760 --> 00:15:22,540
all in one tree and that's really over

00:15:15,029 --> 00:15:24,430
how do you recover that so let's take a

00:15:22,540 --> 00:15:27,459
look under the hood of how like a

00:15:24,430 --> 00:15:32,460
typical react component like would work

00:15:27,459 --> 00:15:35,370
in that we have like a react thing

00:15:32,460 --> 00:15:38,040
so usually every component here how it

00:15:35,370 --> 00:15:40,410
works usually you have like a function

00:15:38,040 --> 00:15:42,660
when the component is mounted that means

00:15:40,410 --> 00:15:46,170
you have your single page application

00:15:42,660 --> 00:15:48,810
the component gets mounted in it that

00:15:46,170 --> 00:15:50,850
means it starts to be rendered in it and

00:15:48,810 --> 00:15:53,190
then before it gets mounted it gets the

00:15:50,850 --> 00:15:56,220
data from somewhere so for example I

00:15:53,190 --> 00:15:59,610
have my I want my favorite books in a

00:15:56,220 --> 00:16:03,740
block so I would say yeah this dot

00:15:59,610 --> 00:16:09,390
favorites would be fetch the favorites

00:16:03,740 --> 00:16:12,360
from some API graph QL JSON API all of

00:16:09,390 --> 00:16:14,670
those nice API first things and then a

00:16:12,360 --> 00:16:17,520
typical view template would be looking

00:16:14,670 --> 00:16:20,100
like there's a list for for item in

00:16:17,520 --> 00:16:24,030
favorites and then I just play for

00:16:20,100 --> 00:16:26,820
example the item name Drupal looks a

00:16:24,030 --> 00:16:31,080
little bit different so we have the same

00:16:26,820 --> 00:16:35,130
for each no loop then we build a render

00:16:31,080 --> 00:16:36,540
array like out of that with our favorite

00:16:35,130 --> 00:16:39,840
here we are seaming the favorites

00:16:36,540 --> 00:16:41,790
differently and in the end we return an

00:16:39,840 --> 00:16:44,100
item list another any array we put the

00:16:41,790 --> 00:16:48,000
items in it and that's kind of Drupal

00:16:44,100 --> 00:16:51,660
thing just things so Drupal is here

00:16:48,000 --> 00:16:56,370
mixing the data and stayed with the

00:16:51,660 --> 00:16:59,460
presentation actually however react and

00:16:56,370 --> 00:17:01,710
we just get it from some data source and

00:16:59,460 --> 00:17:04,230
that's a very very important point

00:17:01,710 --> 00:17:07,080
because inside we are getting here is

00:17:04,230 --> 00:17:12,570
that the data decoupling of that thing

00:17:07,080 --> 00:17:15,780
is the key to success here so because if

00:17:12,570 --> 00:17:18,360
you take our same block like a standard

00:17:15,780 --> 00:17:21,810
Drupal block and we just give it a data

00:17:18,360 --> 00:17:24,720
function and that returns from some

00:17:21,810 --> 00:17:28,760
store from entity manager from loading

00:17:24,720 --> 00:17:31,350
from whatever from calling Google Docs

00:17:28,760 --> 00:17:34,080
doesn't matter where data comes from but

00:17:31,350 --> 00:17:36,330
it returns your favorites then in render

00:17:34,080 --> 00:17:39,480
we're using that data from the favorites

00:17:36,330 --> 00:17:42,570
and then we export that same data for

00:17:39,480 --> 00:17:45,510
example in Drupal settings now we have

00:17:42,570 --> 00:17:45,809
achieved that we have the same data can

00:17:45,510 --> 00:17:47,730
drive

00:17:45,809 --> 00:17:51,149
frontin in the back end because the same

00:17:47,730 --> 00:17:55,379
data is now suddenly available at the

00:17:51,149 --> 00:17:57,210
front end and at the back end so just to

00:17:55,379 --> 00:17:59,220
recap that again and you could be

00:17:57,210 --> 00:18:01,860
implement this today it's so cool

00:17:59,220 --> 00:18:04,259
we have a data generator we have a

00:18:01,860 --> 00:18:06,029
source of the data that could be custom

00:18:04,259 --> 00:18:08,309
code it could be a suitable view it

00:18:06,029 --> 00:18:12,899
could even be calling JSON API be an

00:18:08,309 --> 00:18:15,539
internal call back with an correlative

00:18:12,899 --> 00:18:18,629
SAP request even could be graft well the

00:18:15,539 --> 00:18:20,940
rest whatever you want really whatever

00:18:18,629 --> 00:18:23,490
you want it could even in some way come

00:18:20,940 --> 00:18:27,779
from the render tree was too complex for

00:18:23,490 --> 00:18:30,210
the talk but I have the architecture we

00:18:27,779 --> 00:18:32,490
exported to Drupal settings and now we

00:18:30,210 --> 00:18:35,399
have the same data that's driving the

00:18:32,490 --> 00:18:37,019
front-end it is driving the backend we

00:18:35,399 --> 00:18:38,999
still need one template for the

00:18:37,019 --> 00:18:43,740
front-end we still need one template for

00:18:38,999 --> 00:18:48,749
the backend however we have the same

00:18:43,740 --> 00:18:50,909
data we can render the same markup as I

00:18:48,749 --> 00:18:53,580
said you can implement that today you

00:18:50,909 --> 00:18:56,460
just need to decouple your data and so

00:18:53,580 --> 00:18:58,590
that's so important how we still have a

00:18:56,460 --> 00:19:00,029
little bit problem because I really

00:18:58,590 --> 00:19:03,960
don't want to write the same template

00:19:00,029 --> 00:19:04,409
apply twice so we have trick we have

00:19:03,960 --> 00:19:06,419
trick

00:19:04,409 --> 00:19:09,419
we have trick trick compounds to the

00:19:06,419 --> 00:19:11,309
rescue and yes actually they are there

00:19:09,419 --> 00:19:15,090
are several different libraries there's

00:19:11,309 --> 00:19:17,700
trick tears trick tears and twing the

00:19:15,090 --> 00:19:20,700
one trick J as the server compile so

00:19:17,700 --> 00:19:23,309
it's PHP code on the server compiling to

00:19:20,700 --> 00:19:26,220
JavaScript or transpiling as you would

00:19:23,309 --> 00:19:28,679
like and then those are sent to the

00:19:26,220 --> 00:19:30,389
client the client can use them then they

00:19:28,679 --> 00:19:33,389
are strictly a switch purely trick

00:19:30,389 --> 00:19:37,529
client based JavaScript works a node and

00:19:33,389 --> 00:19:39,779
then they a string which is was they

00:19:37,529 --> 00:19:43,399
also said it was even made for Drupal 8

00:19:39,779 --> 00:19:47,159
in that because he wanted to use

00:19:43,399 --> 00:19:50,279
templates on the client twig templates

00:19:47,159 --> 00:19:53,279
directly and twing has a huge advantage

00:19:50,279 --> 00:19:56,129
said it passes the trick test suit so

00:19:53,279 --> 00:19:58,890
it's probably the most stable technology

00:19:56,129 --> 00:20:00,929
out there that's here and sure

00:19:58,890 --> 00:20:03,240
can it work for pure components it can

00:20:00,929 --> 00:20:05,190
totally work for the core trick

00:20:03,240 --> 00:20:09,240
templates we have right now it's a

00:20:05,190 --> 00:20:11,190
little bit difficult however we still

00:20:09,240 --> 00:20:13,890
have some problems because front-end

00:20:11,190 --> 00:20:16,410
work is not just about rendering sure

00:20:13,890 --> 00:20:18,570
trick template we ran etc but we also

00:20:16,410 --> 00:20:20,010
have reactivity we have virtual Dom

00:20:18,570 --> 00:20:22,440
dating

00:20:20,010 --> 00:20:26,220
what does reactivity mean reactivity

00:20:22,440 --> 00:20:29,460
means you click something and something

00:20:26,220 --> 00:20:31,350
happens somewhere else virtual Dom the

00:20:29,460 --> 00:20:33,660
thing will come to that in a moment

00:20:31,350 --> 00:20:35,910
so do we really need to reinvent react

00:20:33,660 --> 00:20:38,520
vu etc do we need to write another way

00:20:35,910 --> 00:20:42,090
that's just true Polly whew whatever no

00:20:38,520 --> 00:20:44,220
we don't fortunately we need to do a

00:20:42,090 --> 00:20:45,960
little deep dive into Jai's eggs and

00:20:44,220 --> 00:20:48,600
secrete element functions because

00:20:45,960 --> 00:20:51,840
there's one thing and I've worked on

00:20:48,600 --> 00:20:55,200
this two years ago and I failed because

00:20:51,840 --> 00:20:57,150
trick renders to a string and at that

00:20:55,200 --> 00:20:59,400
time I was thinking that was a show

00:20:57,150 --> 00:21:01,650
block huh there was a road block that I

00:20:59,400 --> 00:21:05,850
could never get over that it would

00:21:01,650 --> 00:21:09,470
completely destroy my dream of this talk

00:21:05,850 --> 00:21:12,570
here it turns out that was not true

00:21:09,470 --> 00:21:15,210
because react and view etc they ran into

00:21:12,570 --> 00:21:16,770
a virtual dome and the virtual dome

00:21:15,210 --> 00:21:21,000
actually allows you a very very great

00:21:16,770 --> 00:21:24,450
experience you have like like span you

00:21:21,000 --> 00:21:28,440
have a counter and only what changes is

00:21:24,450 --> 00:21:31,919
we render it and that's so so practical

00:21:28,440 --> 00:21:34,200
because it allows you to not have to

00:21:31,919 --> 00:21:36,150
re-render all those pans and everything

00:21:34,200 --> 00:21:38,429
that's behind it only the text of the

00:21:36,150 --> 00:21:40,380
counter will be updated and this gives

00:21:38,429 --> 00:21:43,860
the best user experience possible and

00:21:40,380 --> 00:21:45,360
that troopers a Jake's old replace

00:21:43,860 --> 00:21:48,570
elements not suitable because what

00:21:45,360 --> 00:21:51,750
replace all the spans as well and this

00:21:48,570 --> 00:21:54,299
Java JS X is actually transpired to

00:21:51,750 --> 00:21:56,820
creat elements bank with a text element

00:21:54,299 --> 00:21:58,710
hello world so it's creating this tree

00:21:56,820 --> 00:22:01,140
internally that's also one of the

00:21:58,710 --> 00:22:03,570
reasons why view angular etc uses syntax

00:22:01,140 --> 00:22:06,150
that adds the directly to the dome nodes

00:22:03,570 --> 00:22:08,730
and that only allows like like place

00:22:06,150 --> 00:22:10,919
holders within properties of that

00:22:08,730 --> 00:22:11,800
because it's a dome language twick is no

00:22:10,919 --> 00:22:13,900
dome language

00:22:11,800 --> 00:22:17,020
trick can do everything it can output

00:22:13,900 --> 00:22:20,650
C++ code it can output JavaScript code

00:22:17,020 --> 00:22:24,070
it can output SQL it's easy but it's a

00:22:20,650 --> 00:22:26,260
problem for us here because we was

00:22:24,070 --> 00:22:28,990
really simple to pass into a virtual Dom

00:22:26,260 --> 00:22:31,420
tree so tricking virtual Domino friends

00:22:28,990 --> 00:22:33,750
and I even tried that that's where I

00:22:31,420 --> 00:22:36,550
felt like and then I had this example

00:22:33,750 --> 00:22:39,190
you can do that in trick it's valid it

00:22:36,550 --> 00:22:42,040
will output valid HTML but it's almost

00:22:39,190 --> 00:22:44,590
impossible to inspire that into a

00:22:42,040 --> 00:22:46,270
virtual dome before actually doing it so

00:22:44,590 --> 00:22:49,750
we have to do don't passing it straight

00:22:46,270 --> 00:22:51,880
off but it's ok and we also need a

00:22:49,750 --> 00:22:53,500
component tree because who needs to

00:22:51,880 --> 00:22:55,660
actually know that there's a block and

00:22:53,500 --> 00:22:57,700
the sidebar there's an entity inside bar

00:22:55,660 --> 00:23:00,730
because we we want to be able to

00:22:57,700 --> 00:23:02,890
remember that everything fortunately we

00:23:00,730 --> 00:23:07,000
especially has an inline template father

00:23:02,890 --> 00:23:09,010
so any HTML using v1 timing J ass can be

00:23:07,000 --> 00:23:12,160
converted into virtual Dom at runtime

00:23:09,010 --> 00:23:13,750
and it turns out who doesn't care if you

00:23:12,160 --> 00:23:17,140
first render to a string and then

00:23:13,750 --> 00:23:19,270
convert it into a virtual dome it works

00:23:17,140 --> 00:23:21,220
it really needs the virtual Dom for the

00:23:19,270 --> 00:23:23,679
dipping of things it doesn't need it for

00:23:21,220 --> 00:23:27,340
and for finding the components it

00:23:23,679 --> 00:23:31,080
doesn't need it for actually rendering

00:23:27,340 --> 00:23:33,820
the things and using the props and that

00:23:31,080 --> 00:23:36,520
so what we can do now we have a trick

00:23:33,820 --> 00:23:38,830
template with context we turn it into a

00:23:36,520 --> 00:23:41,230
string of HTML and components and that

00:23:38,830 --> 00:23:43,800
return to a virtual Dom so get all the

00:23:41,230 --> 00:23:46,510
benefits of so founded technologies and

00:23:43,800 --> 00:23:49,270
yep just create a virtual Dom converter

00:23:46,510 --> 00:23:53,590
for things could be as easy as in HTML

00:23:49,270 --> 00:23:55,750
because it's pure HTML we have and put

00:23:53,590 --> 00:23:59,440
that into react whatever changed it to

00:23:55,750 --> 00:24:02,920
creat element should all work it's a

00:23:59,440 --> 00:24:05,620
performance penalty yes it is but it's

00:24:02,920 --> 00:24:07,720
still good enough for the 95 % case you

00:24:05,620 --> 00:24:09,670
might be wondering hey Fabian is like

00:24:07,720 --> 00:24:11,230
this performance person and now he tells

00:24:09,670 --> 00:24:13,809
us performance not important performance

00:24:11,230 --> 00:24:15,730
is very important however if I have the

00:24:13,809 --> 00:24:18,730
choice between writing every template

00:24:15,730 --> 00:24:20,260
twice and only writing 5% of the

00:24:18,730 --> 00:24:22,990
templates that are performance critical

00:24:20,260 --> 00:24:25,179
twice and it might probably still even

00:24:22,990 --> 00:24:28,179
be much much faster than just rendering

00:24:25,179 --> 00:24:30,159
Ajax from the server and I take this

00:24:28,179 --> 00:24:33,070
trade-off for being able to at least do

00:24:30,159 --> 00:24:37,239
the 95 percent case so what about the

00:24:33,070 --> 00:24:40,479
back end again a key saying we need as a

00:24:37,239 --> 00:24:43,419
PHP community even web components custom

00:24:40,479 --> 00:24:45,549
Elementium and PHP and it's pretty

00:24:43,419 --> 00:24:47,589
simple even we do it like we we passed

00:24:45,549 --> 00:24:49,509
down we were just as a components in the

00:24:47,589 --> 00:24:51,999
library we search for the registered

00:24:49,509 --> 00:24:54,839
custom elements we pass slot content we

00:24:51,999 --> 00:24:57,969
ran in the component and a Pyrrhic match

00:24:54,839 --> 00:24:59,619
pretty simple can't even do that we are

00:24:57,969 --> 00:25:02,679
doing that for big pipe like them very

00:24:59,619 --> 00:25:05,229
very simple down parsing and it's not a

00:25:02,679 --> 00:25:08,169
huge performance penalty in that looks

00:25:05,229 --> 00:25:10,289
really cool so we have success we have

00:25:08,169 --> 00:25:11,979
server-side rendering by Drupal as ago

00:25:10,289 --> 00:25:14,649
so how does it work

00:25:11,979 --> 00:25:17,440
everything has representation so we have

00:25:14,649 --> 00:25:21,070
a template menu item and this gives us

00:25:17,440 --> 00:25:22,960
output and I had a hard time

00:25:21,070 --> 00:25:24,729
understanding this kind of there's two

00:25:22,960 --> 00:25:27,279
words that are converted in each other

00:25:24,729 --> 00:25:29,320
so what I found much easier was when it

00:25:27,279 --> 00:25:32,229
wasn't the web components world suddenly

00:25:29,320 --> 00:25:34,059
and it was like oh yeah it's just in a

00:25:32,229 --> 00:25:35,979
part of that menu item it's just how the

00:25:34,059 --> 00:25:37,119
browser's rendering he doesn't know

00:25:35,979 --> 00:25:39,849
about a menu item

00:25:37,119 --> 00:25:42,129
he'd just know about what's inside it's

00:25:39,849 --> 00:25:44,049
kind of like that in in web components

00:25:42,129 --> 00:25:46,119
it's a shadow dome so it's hidden from

00:25:44,049 --> 00:25:50,769
your user and you keep the nice markup

00:25:46,119 --> 00:25:52,779
shadow Dom is optional but we can also

00:25:50,769 --> 00:25:54,070
just do the back output allotropic or

00:25:52,779 --> 00:25:56,619
and that's actually not a bad idea

00:25:54,070 --> 00:25:58,809
because it really shows you where that

00:25:56,619 --> 00:26:00,669
markup came from but instead of like

00:25:58,809 --> 00:26:03,190
this was including the strict Empire

00:26:00,669 --> 00:26:07,690
it's just showing kind of this or just

00:26:03,190 --> 00:26:09,279
seem hook etc so we went onto a

00:26:07,690 --> 00:26:11,499
component we expose the data and

00:26:09,279 --> 00:26:13,479
template via settings we just with just

00:26:11,499 --> 00:26:15,580
a we component automatically for each

00:26:13,479 --> 00:26:18,339
custom saying the amounts would view

00:26:15,580 --> 00:26:20,859
components and we get the data for the

00:26:18,339 --> 00:26:22,389
component out of the Drupal settings and

00:26:20,859 --> 00:26:26,729
that's basically it

00:26:22,389 --> 00:26:29,859
now we have kind of all we need to do it

00:26:26,729 --> 00:26:32,320
almost server-side rendering in Ruby we

00:26:29,859 --> 00:26:34,779
need to either add a special thing that

00:26:32,320 --> 00:26:37,120
this thing was already server rendered

00:26:34,779 --> 00:26:41,440
or we just use a special parameter

00:26:37,120 --> 00:26:43,930
but now we are there maybe not no

00:26:41,440 --> 00:26:51,880
actually we are not there yet because oh

00:26:43,930 --> 00:26:54,970
my god oh my god the reactivity it does

00:26:51,880 --> 00:26:58,270
not work because hey I changed the

00:26:54,970 --> 00:27:01,690
Drupal settings favorite and nothing

00:26:58,270 --> 00:27:04,300
happens but why and the reason is that

00:27:01,690 --> 00:27:07,030
when we are mounting this component in

00:27:04,300 --> 00:27:09,790
view it makes a copy this that favorites

00:27:07,030 --> 00:27:10,720
it equals Drupal settings favorites here

00:27:09,790 --> 00:27:12,870
we have a copy

00:27:10,720 --> 00:27:16,000
so whenever view is using this

00:27:12,870 --> 00:27:18,240
internally it looks that if you were

00:27:16,000 --> 00:27:22,990
changing the favorites of that component

00:27:18,240 --> 00:27:26,230
it would be all working well but in this

00:27:22,990 --> 00:27:27,780
case it doesn't because readers know

00:27:26,230 --> 00:27:30,250
nothing about Drupal settings

00:27:27,780 --> 00:27:32,320
fortunately that's a totally solved

00:27:30,250 --> 00:27:35,440
problem in the front-end world already

00:27:32,320 --> 00:27:38,110
it was all fear flux weeks whatever you

00:27:35,440 --> 00:27:40,750
just use a store and the store is really

00:27:38,110 --> 00:27:43,660
cool because you just use item and

00:27:40,750 --> 00:27:45,790
distort order favorites and then the

00:27:43,660 --> 00:27:48,010
Ajax command would be as simple as to us

00:27:45,790 --> 00:27:48,760
that state favorites a new favorite and

00:27:48,010 --> 00:27:52,000
that's it

00:27:48,760 --> 00:27:53,590
and obviously implementation details

00:27:52,000 --> 00:27:55,960
will differ between difference towards

00:27:53,590 --> 00:27:58,120
whatever I really like flexible J SMS

00:27:55,960 --> 00:28:00,700
but whatever you want to use you can use

00:27:58,120 --> 00:28:02,830
a store and now the nice thing is now

00:28:00,700 --> 00:28:05,800
that we have a store we can update it

00:28:02,830 --> 00:28:08,970
reactivity works we can also put that

00:28:05,800 --> 00:28:11,380
store to be real-time and offline first

00:28:08,970 --> 00:28:13,420
real-time and offline first means the

00:28:11,380 --> 00:28:16,690
client has a copy of the data it's there

00:28:13,420 --> 00:28:19,180
it connects to a store to store to

00:28:16,690 --> 00:28:22,660
real-time system there's yjs fire by

00:28:19,180 --> 00:28:27,610
based a standard eco it's name of such

00:28:22,660 --> 00:28:30,280
library and what happens here is a

00:28:27,610 --> 00:28:33,310
remote state changes and because our

00:28:30,280 --> 00:28:34,840
store is informed about changes that are

00:28:33,310 --> 00:28:37,540
happening for example on the google

00:28:34,840 --> 00:28:40,420
firebase thing here it's synchronized

00:28:37,540 --> 00:28:42,820
automatically so what we can do now is

00:28:40,420 --> 00:28:44,980
we don't even need to output the Ajax

00:28:42,820 --> 00:28:47,650
anymore we can just write to the

00:28:44,980 --> 00:28:49,940
real-time store directly we just write

00:28:47,650 --> 00:28:53,030
the new favorites of the user to fire

00:28:49,940 --> 00:28:57,530
and the front end and all his devices

00:28:53,030 --> 00:29:00,050
the mobile the desktop the iPad the

00:28:57,530 --> 00:29:03,680
presentation screen everywhere it

00:29:00,050 --> 00:29:05,690
changes automatically and I think people

00:29:03,680 --> 00:29:08,570
more and more expect this kind of

00:29:05,690 --> 00:29:11,500
real-time experiences but Drupal so far

00:29:08,570 --> 00:29:13,930
I had no answer not even getting there

00:29:11,500 --> 00:29:17,420
decoupled of course a little bit more

00:29:13,930 --> 00:29:19,880
but not with our traditional model and

00:29:17,420 --> 00:29:22,280
really want to bridge that gap also into

00:29:19,880 --> 00:29:25,130
the real time sayings if you want to try

00:29:22,280 --> 00:29:27,290
that use firebase it's a it's commercial

00:29:25,130 --> 00:29:29,810
it costs a lot but it's just simplest to

00:29:27,290 --> 00:29:32,120
use free and open-source there would be

00:29:29,810 --> 00:29:35,150
a real time collaborative editor obvious

00:29:32,120 --> 00:29:37,610
yjs that you can try you really should

00:29:35,150 --> 00:29:40,250
give it a try it's like Google Docs in

00:29:37,610 --> 00:29:42,380
your C mass if you integrate it it's

00:29:40,250 --> 00:29:44,450
fantastic we talked about it about in

00:29:42,380 --> 00:29:45,650
our tech team talk deep dive into

00:29:44,450 --> 00:29:47,540
real-time collaborative editing

00:29:45,650 --> 00:29:51,200
solutions you'll learn about a lot about

00:29:47,540 --> 00:29:52,940
real-time things as well here and I'll

00:29:51,200 --> 00:29:54,800
also be doing a future team talk about

00:29:52,940 --> 00:29:58,700
this where as a topic and all the

00:29:54,800 --> 00:30:00,320
technical details I had a bit here so

00:29:58,700 --> 00:30:03,260
what are the next steps

00:30:00,320 --> 00:30:05,420
I can definitely share a lot more

00:30:03,260 --> 00:30:07,010
technique the details this is not just

00:30:05,420 --> 00:30:10,010
this presentation this is actually a

00:30:07,010 --> 00:30:12,800
solid architecture with many many things

00:30:10,010 --> 00:30:14,240
so true of how we can get there there

00:30:12,800 --> 00:30:15,980
was just not enough time for this

00:30:14,240 --> 00:30:18,680
presentation because I want to give you

00:30:15,980 --> 00:30:19,250
a chance to answer ask some questions

00:30:18,680 --> 00:30:22,220
too

00:30:19,250 --> 00:30:23,870
so maybe an idea would be everyone that

00:30:22,220 --> 00:30:25,820
would be interested in front end and

00:30:23,870 --> 00:30:27,920
still here they are to meet up on

00:30:25,820 --> 00:30:29,720
Thursday to discuss all of that we could

00:30:27,920 --> 00:30:32,330
also be doing a barf if there's enough

00:30:29,720 --> 00:30:34,730
interest and that you can hit me up on

00:30:32,330 --> 00:30:38,120
Twitter we can do it in contributes

00:30:34,730 --> 00:30:40,160
slack whatever will connect somehow and

00:30:38,120 --> 00:30:43,550
together let's create the best funding

00:30:40,160 --> 00:30:45,020
experience ever and now comes kind of

00:30:43,550 --> 00:30:47,300
the vision part of all the nice things

00:30:45,020 --> 00:30:49,910
we can do if you start to implement even

00:30:47,300 --> 00:30:52,730
a little bit of that because what we had

00:30:49,910 --> 00:30:55,100
here in Drupal con los angeles is the

00:30:52,730 --> 00:30:57,380
unique on dream and the dream it was

00:30:55,100 --> 00:30:59,840
morton stream was he went to build a

00:30:57,380 --> 00:31:03,220
Drupal site with just one index.html

00:30:59,840 --> 00:31:05,320
track and this components index kind of

00:31:03,220 --> 00:31:07,929
finally makes as possible and thanks to

00:31:05,320 --> 00:31:10,240
slots there was missing piece kind of

00:31:07,929 --> 00:31:12,400
all these years and web components have

00:31:10,240 --> 00:31:14,650
those slots view has those slots

00:31:12,400 --> 00:31:17,350
even trick has those locks slots as

00:31:14,650 --> 00:31:19,600
blocks but starting to understand them

00:31:17,350 --> 00:31:22,360
it's really solving this because here

00:31:19,600 --> 00:31:24,309
Morton can put his block and all the

00:31:22,360 --> 00:31:26,440
other things that someone configured in

00:31:24,309 --> 00:31:29,140
the UI they are still output Morton is

00:31:26,440 --> 00:31:31,270
not overriding it he's extending it he's

00:31:29,140 --> 00:31:34,659
putting into the head of the sidebar and

00:31:31,270 --> 00:31:36,909
Morton is also overriding this this

00:31:34,659 --> 00:31:39,820
title of the block very simple he just

00:31:36,909 --> 00:31:44,799
puts law title overriding it boom done

00:31:39,820 --> 00:31:47,679
and this is it was closed

00:31:44,799 --> 00:31:51,580
deprecated inline template it was an

00:31:47,679 --> 00:31:55,570
issue we should be careful it was an

00:31:51,580 --> 00:31:58,360
issue where I tried to do kind of like

00:31:55,570 --> 00:32:02,020
this just with pure twig it get so

00:31:58,360 --> 00:32:04,179
complicated I had to give manage to do

00:32:02,020 --> 00:32:06,850
it but it was never core already but

00:32:04,179 --> 00:32:08,590
this could be call ready you could

00:32:06,850 --> 00:32:10,570
create plugins for more than editors

00:32:08,590 --> 00:32:12,490
which just used configure those custom

00:32:10,570 --> 00:32:15,760
elements see cared her five postmark

00:32:12,490 --> 00:32:18,429
clip no more filter convert display

00:32:15,760 --> 00:32:20,860
image i de ren h them are you directing

00:32:18,429 --> 00:32:22,559
output the configured component and

00:32:20,860 --> 00:32:25,270
trooper will do the rest

00:32:22,559 --> 00:32:28,090
big pad placeholders this default

00:32:25,270 --> 00:32:29,919
content could be finally easy it would

00:32:28,090 --> 00:32:32,110
be so simple you just right block you

00:32:29,919 --> 00:32:33,850
save drupal placeholder big pad puts the

00:32:32,110 --> 00:32:36,429
default content and once the content

00:32:33,850 --> 00:32:38,380
arrives it's there don't even need need

00:32:36,429 --> 00:32:40,480
all those javascript brenda on the same

00:32:38,380 --> 00:32:43,150
just our traditional big pipe it could

00:32:40,480 --> 00:32:45,520
be so enhanced by Centex the performance

00:32:43,150 --> 00:32:48,100
could be improved dramatically if you're

00:32:45,520 --> 00:32:49,929
using a store for more sayings you just

00:32:48,100 --> 00:32:52,179
update the real-time key value store

00:32:49,929 --> 00:32:54,370
even if even if it's just on drupal

00:32:52,179 --> 00:32:56,679
whatever you output it via settings and

00:32:54,370 --> 00:33:00,669
the data-driven mindset makes it so much

00:32:56,679 --> 00:33:03,130
easier to think about in that you export

00:33:00,669 --> 00:33:04,600
the data the templates to for example s3

00:33:03,130 --> 00:33:07,900
you could load it on a completely

00:33:04,600 --> 00:33:09,789
different microsite my company nav its

00:33:07,900 --> 00:33:12,280
your component is lots of data from

00:33:09,789 --> 00:33:15,159
somewhere it works and the company nav

00:33:12,280 --> 00:33:15,870
is always active on all sides were using

00:33:15,159 --> 00:33:18,630
that component

00:33:15,870 --> 00:33:20,070
because it clots it from the remote it

00:33:18,630 --> 00:33:22,170
keeps all the nice things like

00:33:20,070 --> 00:33:24,990
contextual links as part of the data

00:33:22,170 --> 00:33:27,150
tree there was a huge problem as

00:33:24,990 --> 00:33:29,059
decoupled implementations always like

00:33:27,150 --> 00:33:32,460
contextual links we are losing so much

00:33:29,059 --> 00:33:35,220
the preview live preview all of those

00:33:32,460 --> 00:33:37,590
things it also makes progressive

00:33:35,220 --> 00:33:39,360
decoupling as a year than ever

00:33:37,590 --> 00:33:42,000
there's also session here Drupal con

00:33:39,360 --> 00:33:44,400
about progressive decoupling this view

00:33:42,000 --> 00:33:47,370
that we might check out it's completely

00:33:44,400 --> 00:33:49,559
funded technology agnostic without

00:33:47,370 --> 00:33:51,480
reinventing the wheel so we don't have

00:33:49,559 --> 00:33:54,000
to reinvent away we don't have to write

00:33:51,480 --> 00:33:57,000
another way we can really just just just

00:33:54,000 --> 00:33:59,460
use it and last but not least this would

00:33:57,000 --> 00:34:02,010
make single page applications possible

00:33:59,460 --> 00:34:06,290
without writing a single line of

00:34:02,010 --> 00:34:11,419
JavaScript what do you think

00:34:06,290 --> 00:34:14,669
[Applause]

00:34:11,419 --> 00:34:16,799
thank you very much please like

00:34:14,669 --> 00:34:18,779
subscribe follow me on Twitter and it's

00:34:16,799 --> 00:34:21,029
about I mean rate my session

00:34:18,779 --> 00:34:23,760
I'm Fabien France Fame and talk one

00:34:21,029 --> 00:34:26,809
consulting.com if you have questions

00:34:23,760 --> 00:34:26,809
please ask

00:34:36,419 --> 00:34:39,019
yeah

00:34:52,419 --> 00:34:57,980
yeah

00:34:54,409 --> 00:35:01,670
basically the question was I've said a

00:34:57,980 --> 00:35:04,609
lot had a lot of view examples and the

00:35:01,670 --> 00:35:06,829
question was if it's possible to use any

00:35:04,609 --> 00:35:10,010
funded technology to implement this

00:35:06,829 --> 00:35:14,049
pattern the answer is yes you can you

00:35:10,010 --> 00:35:16,490
might need to do some work like for

00:35:14,049 --> 00:35:19,280
putting it into the virtual dome

00:35:16,490 --> 00:35:21,829
differential dome whatever your

00:35:19,280 --> 00:35:25,160
technology users but in general as

00:35:21,829 --> 00:35:27,619
possible it it's completely fonda and

00:35:25,160 --> 00:35:29,720
technology agnostic as long as you have

00:35:27,619 --> 00:35:32,270
a render function that you can customize

00:35:29,720 --> 00:35:43,030
yourself but all the bigger front-end

00:35:32,270 --> 00:35:43,030
things have a next question yeah

00:35:47,420 --> 00:35:54,450
so the question was what needs to happen

00:35:50,790 --> 00:35:56,910
Andrew pakora to make this possible one

00:35:54,450 --> 00:35:59,430
of the things we could be starting at is

00:35:56,910 --> 00:36:02,630
to convert more of things into lazy

00:35:59,430 --> 00:36:05,730
builders then the other thing is because

00:36:02,630 --> 00:36:08,430
once we have like no more dependencies

00:36:05,730 --> 00:36:10,200
in our render tree it would be very very

00:36:08,430 --> 00:36:12,320
more simple to convert that into a

00:36:10,200 --> 00:36:15,900
component tree the other thing is

00:36:12,320 --> 00:36:19,650
basically we need like a hook and we can

00:36:15,900 --> 00:36:22,110
totally start that in contrib that after

00:36:19,650 --> 00:36:24,750
each rendering of the trick template is

00:36:22,110 --> 00:36:27,180
going through and passing the dome for a

00:36:24,750 --> 00:36:29,700
custom component and then for each

00:36:27,180 --> 00:36:33,330
component we are finding like the menu

00:36:29,700 --> 00:36:35,400
item we would just call seam menu item

00:36:33,330 --> 00:36:37,410
like and then we would be going to the

00:36:35,400 --> 00:36:39,960
next component like that so the main

00:36:37,410 --> 00:36:42,480
difference is basically wire before you

00:36:39,960 --> 00:36:45,630
would be having like include menu item

00:36:42,480 --> 00:36:48,060
or include menu or whatever with those

00:36:45,630 --> 00:36:51,930
bars in the trick syntax you would know

00:36:48,060 --> 00:36:55,080
just writing HTML so it kind of even

00:36:51,930 --> 00:36:58,500
Maps a little bit 1 to 1 in that that

00:36:55,080 --> 00:37:03,330
you can do it it's just the the huge

00:36:58,500 --> 00:37:05,430
problem is include is that's very kind

00:37:03,330 --> 00:37:07,980
of fails and just give some real quick

00:37:05,430 --> 00:37:10,260
historic data and members like coming to

00:37:07,980 --> 00:37:12,270
us I think was also LA and they're like

00:37:10,260 --> 00:37:14,040
hey we have such data tree and then we

00:37:12,270 --> 00:37:15,600
have this component tree and we put that

00:37:14,040 --> 00:37:17,100
together like that and we were like hey

00:37:15,600 --> 00:37:18,720
that's great we want to do that as well

00:37:17,100 --> 00:37:21,360
you start with the templates and we were

00:37:18,720 --> 00:37:24,570
like and how do we wear another children

00:37:21,360 --> 00:37:29,940
now etc so for example you take a simple

00:37:24,570 --> 00:37:31,770
template like the entity template and it

00:37:29,940 --> 00:37:34,470
displays an entity internally and it's

00:37:31,770 --> 00:37:36,930
just a render tree like that for

00:37:34,470 --> 00:37:39,780
displaying this entity and we now it's a

00:37:36,930 --> 00:37:42,840
render array which has just the hashtag

00:37:39,780 --> 00:37:45,120
entity so instead of doing kind of what

00:37:42,840 --> 00:37:47,370
we do we can extract the properties and

00:37:45,120 --> 00:37:49,920
there's a lot of like how also pattern

00:37:47,370 --> 00:37:54,930
lab etc already works and we can just

00:37:49,920 --> 00:37:57,890
say entity and have this component

00:37:54,930 --> 00:38:00,110
entity and then we put the data in and

00:37:57,890 --> 00:38:02,180
that's kind of one thing but what we

00:38:00,110 --> 00:38:04,850
need to be sure is that in the end every

00:38:02,180 --> 00:38:07,070
template we have all the output with the

00:38:04,850 --> 00:38:09,770
component still intact not replaced was

00:38:07,070 --> 00:38:12,470
includes it's like a recursive tree in

00:38:09,770 --> 00:38:32,060
itself once we have that we can make a

00:38:12,470 --> 00:38:35,420
single page application yeah okay

00:38:32,060 --> 00:38:38,210
Universal datastore a little bit quick

00:38:35,420 --> 00:38:40,790
about that but the store basically was

00:38:38,210 --> 00:38:42,710
the store pattern means you have a

00:38:40,790 --> 00:38:45,080
stores on where and you can think about

00:38:42,710 --> 00:38:46,850
it as a key value store you so you put

00:38:45,080 --> 00:38:49,040
data in at some key and you get it out

00:38:46,850 --> 00:38:53,210
it's a key for example as simple as that

00:38:49,040 --> 00:38:55,280
user one favorites that's my key that

00:38:53,210 --> 00:38:57,800
slightly relate to caching because in

00:38:55,280 --> 00:38:59,630
essence the favorites of user the data

00:38:57,800 --> 00:39:02,360
of that whenever it changes we need to

00:38:59,630 --> 00:39:05,270
change the store so I favorite something

00:39:02,360 --> 00:39:09,230
else I change the store so it's a

00:39:05,270 --> 00:39:12,380
permanent cache because it's always

00:39:09,230 --> 00:39:16,160
accurate reflecting what the favorites

00:39:12,380 --> 00:39:19,250
of my user are now I have two

00:39:16,160 --> 00:39:21,350
possibilities I can output those

00:39:19,250 --> 00:39:26,150
favorites within Drupal settings and

00:39:21,350 --> 00:39:28,010
that's the kind of normal way how you

00:39:26,150 --> 00:39:30,800
would be getting the initial data into

00:39:28,010 --> 00:39:33,920
the store and then if I have an update I

00:39:30,800 --> 00:39:37,580
would set the state the universal store

00:39:33,920 --> 00:39:40,070
is different there there there we can

00:39:37,580 --> 00:39:45,740
just imagine this is Google and this is

00:39:40,070 --> 00:39:49,640
firebase so in this case with Google and

00:39:45,740 --> 00:39:52,430
firebase we would be writing the user

00:39:49,640 --> 00:39:54,680
favorites over there and the front end

00:39:52,430 --> 00:39:57,800
would also be getting it from over there

00:39:54,680 --> 00:40:01,480
and whenever it changes they inform us

00:39:57,800 --> 00:40:05,180
that this has changed now they inform us

00:40:01,480 --> 00:40:07,700
and all our devices are synchronized so

00:40:05,180 --> 00:40:10,280
Drupal in this case would indeed be

00:40:07,700 --> 00:40:11,510
directly writing to firebase it would

00:40:10,280 --> 00:40:13,760
not be coming

00:40:11,510 --> 00:40:16,100
mr. front-end but it would just

00:40:13,760 --> 00:40:18,140
communicate with that store that alone

00:40:16,100 --> 00:40:20,180
is also a pretty powerful pattern and

00:40:18,140 --> 00:40:23,560
with my days it would be possible to

00:40:20,180 --> 00:40:29,210
implement it even peer to peer

00:40:23,560 --> 00:40:42,109
completely open-source we out of time

00:40:29,210 --> 00:40:45,770
but one last question yeah the thing is

00:40:42,109 --> 00:40:49,100
it's never too late now it needs to be a

00:40:45,770 --> 00:40:51,230
new API it really needs to be a new API

00:40:49,100 --> 00:40:53,510
it needs to be completely backward

00:40:51,230 --> 00:40:55,970
compatible to everything we have it

00:40:53,510 --> 00:40:58,010
can't replace anything it can't change

00:40:55,970 --> 00:40:58,640
anything that not how Drupal works

00:40:58,010 --> 00:41:01,280
anymore

00:40:58,640 --> 00:41:03,530
it is a new API and if there's

00:41:01,280 --> 00:41:05,690
sufficient interest at the community and

00:41:03,530 --> 00:41:08,359
everyone has switched to it then at one

00:41:05,690 --> 00:41:11,180
point in ten eleven whatever etc we

00:41:08,359 --> 00:41:14,000
could think about deprecating the render

00:41:11,180 --> 00:41:16,520
trees etc that that kind of how the

00:41:14,000 --> 00:41:20,090
thing works too slowly deprecated things

00:41:16,520 --> 00:41:22,040
in it replace it with something else but

00:41:20,090 --> 00:41:25,640
make it until the next major version

00:41:22,040 --> 00:41:27,670
keep it around so no one is forced to do

00:41:25,640 --> 00:41:27,670
it

00:41:32,010 --> 00:41:42,530
okay we are out of time thank you very

00:41:40,350 --> 00:41:44,940
much please join us for the contribution

00:41:42,530 --> 00:41:47,460
opportunities and rate the session and

00:41:44,940 --> 00:41:51,860
thanks to my wife for making the nice

00:41:47,460 --> 00:41:56,409
illustrations late at night for so cool

00:41:51,860 --> 00:41:56,409

YouTube URL: https://www.youtube.com/watch?v=RK4BG3hsN3I


