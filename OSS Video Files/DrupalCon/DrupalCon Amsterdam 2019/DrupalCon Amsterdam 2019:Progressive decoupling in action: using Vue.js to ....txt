Title: DrupalCon Amsterdam 2019:Progressive decoupling in action: using Vue.js to ...
Publication date: 2019-10-30
Playlist: DrupalCon Amsterdam 2019
Description: 
	Room: Auditorium
Title: Progressive decoupling in action: using Vue.js to add rich application-like functionality to the course pages of a UK Higher Education institution's Drupal 8 site
Presenter: Phil Wolstenholme
Description: This session will:

– Provide real-world examples of using Vue for adding rich application-like functionality to parts of an otherwise standard (‘coupled’) Drupal 8 site

– Discuss why Vue is a particularly good fit for a lightly or progressively decoupled site compared to other options such as React

– Run through some Vue fundamentals in a Drupal context, including…
–– Passing data to Vue’s data object from Drupal
–– Moving away from jQuery-style DOM manipulation, and instead taking advantage of Vue’s reactivity, computed properties and watchers for less bug-prone and easier to maintain code
–– Interacting with existing non-Vue JS on the same page, for example Foundation tabs or jQuery

– Highlight how Vue’s HTML-based templating makes adding Vue functionality to a Drupal site easy and accessible to a wide range of skill sets, and how this approach to templating works very well with Twig. As part of this I’ll demonstrate how I used a custom Twig macro and the Bamboo Twig module to render fields from Drupal in a specific format for our Vue application to consume.

– Discuss the accessibility and SEO implications of this approach compared to fully server rendered pages, and how to start to address these issues.

I’ll finish up with some tips and tricks learnt from this project, including a demonstration of Vue’s excellent developer tools, a tip to prevent Vue from stripping Drupal’s theme suggestions HTML comments, and how to use hook_library_info_alter to switch between different builds of Vue to get the best balance of developer experience in development, and performance in production.
Captions: 
	00:00:04,940 --> 00:00:11,490
hi everyone thanks for coming my talk

00:00:09,450 --> 00:00:15,000
about progressive decoupling and using

00:00:11,490 --> 00:00:16,859
view alongside Drupal I've got quite off

00:00:15,000 --> 00:00:18,390
code examples and they're generally

00:00:16,859 --> 00:00:20,520
images and the contrast isn't always

00:00:18,390 --> 00:00:24,990
great so if you'd like to follow along

00:00:20,520 --> 00:00:27,449
on your own screens and bitly /dc - view

00:00:24,990 --> 00:00:29,010
- prague will bring up the slides and

00:00:27,449 --> 00:00:33,360
then there's like jsfiddle links and you

00:00:29,010 --> 00:00:35,100
can adjust the contrast and stuff so my

00:00:33,360 --> 00:00:37,620
name is Phil Wilson home I'm a front-end

00:00:35,100 --> 00:00:39,750
developer at CTO digital in Manchester

00:00:37,620 --> 00:00:43,079
in the United Kingdom can find me on

00:00:39,750 --> 00:00:46,350
drupal.org as Phil - Wilson home and on

00:00:43,079 --> 00:00:47,969
Twitter as Phil W underscore we've got

00:00:46,350 --> 00:00:49,440
quite a lot to talk about I was quite

00:00:47,969 --> 00:00:51,890
ambitious in what I put in my talk

00:00:49,440 --> 00:00:54,719
abstract and possibly overly ambitious

00:00:51,890 --> 00:00:57,270
so if we run out of time then come find

00:00:54,719 --> 00:01:00,210
me at lunch talk to me on Twitter happy

00:00:57,270 --> 00:01:01,739
to answer questions then so we're going

00:01:00,210 --> 00:01:03,359
to be running through what progressive

00:01:01,739 --> 00:01:06,240
decoupling is compared to regular

00:01:03,359 --> 00:01:08,070
coupling or decoupling rather can we

00:01:06,240 --> 00:01:10,520
talk about what viewers in the context

00:01:08,070 --> 00:01:13,680
of front-end UI frameworks and libraries

00:01:10,520 --> 00:01:16,020
talking about why I feel view and Drupal

00:01:13,680 --> 00:01:17,369
are really good partners then getting

00:01:16,020 --> 00:01:19,560
into a little bit of a case study and

00:01:17,369 --> 00:01:21,119
then finally some tips if you want to

00:01:19,560 --> 00:01:25,350
take this back home and start playing

00:01:21,119 --> 00:01:27,479
around with view of Drupal so we'll

00:01:25,350 --> 00:01:31,320
start with what progressive decoupling

00:01:27,479 --> 00:01:33,689
is so decoupling in general is when we

00:01:31,320 --> 00:01:35,430
break the bond between Drupal as a

00:01:33,689 --> 00:01:38,790
back-end CMS system that provides data

00:01:35,430 --> 00:01:40,920
and Drupal as a sort of system that

00:01:38,790 --> 00:01:42,930
renders your front-end we can think

00:01:40,920 --> 00:01:46,049
about coupling and decoupling on a sort

00:01:42,930 --> 00:01:47,880
of scale or continuum and this is what

00:01:46,049 --> 00:01:50,100
we have up here so on the left hand side

00:01:47,880 --> 00:01:53,340
we have our traditional couple Drupal

00:01:50,100 --> 00:01:54,840
site where Drupal gets the data Drupal

00:01:53,340 --> 00:01:56,460
renders it in those exactly what's going

00:01:54,840 --> 00:01:57,659
to be on the page and because it knows

00:01:56,460 --> 00:02:00,140
exactly what's gonna be on the page it

00:01:57,659 --> 00:02:02,640
can do nice things like in-place editing

00:02:00,140 --> 00:02:04,649
contextual links layer builder live

00:02:02,640 --> 00:02:07,799
previews all that kind of Drupal II

00:02:04,649 --> 00:02:09,750
stuff that we we know in love a fully

00:02:07,799 --> 00:02:11,610
decoupled site is on the opposite side

00:02:09,750 --> 00:02:12,680
of the spectrum so on the right-hand

00:02:11,610 --> 00:02:14,900
side

00:02:12,680 --> 00:02:17,689
and that's where Drupal is purely sort

00:02:14,900 --> 00:02:20,989
of an API a data repository a Content

00:02:17,689 --> 00:02:22,909
hub and use a framework a library live

00:02:20,989 --> 00:02:26,629
view or angular react to handle the

00:02:22,909 --> 00:02:28,280
front-end routine content changes UI

00:02:26,629 --> 00:02:32,060
staff all through client-side JavaScript

00:02:28,280 --> 00:02:34,129
code progressive decoupling exists in

00:02:32,060 --> 00:02:37,579
the middle in a sort of a happy place

00:02:34,129 --> 00:02:40,010
where we use Drupal to do all the bits

00:02:37,579 --> 00:02:41,959
that it's really good at and then we add

00:02:40,010 --> 00:02:44,659
a layer of JavaScript on top to do sort

00:02:41,959 --> 00:02:46,310
of more dynamic application like stuff

00:02:44,659 --> 00:02:48,409
that Drupal is not necessarily so good

00:02:46,310 --> 00:02:50,409
at we'll come back to more benefits of

00:02:48,409 --> 00:02:54,739
that in a later slide

00:02:50,409 --> 00:02:57,169
so we're progressive decoupling Drupal

00:02:54,739 --> 00:02:58,840
handles the routine collecting data from

00:02:57,169 --> 00:03:00,919
the database or other sources

00:02:58,840 --> 00:03:03,530
transforming it through things like text

00:03:00,919 --> 00:03:06,230
filters making a render tree allowing

00:03:03,530 --> 00:03:08,359
other modules contrib custom ones themes

00:03:06,230 --> 00:03:10,700
to transform that render tree and then

00:03:08,359 --> 00:03:12,560
finally dump it all on the page as HTML

00:03:10,700 --> 00:03:14,780
so up to that point it's a traditional

00:03:12,560 --> 00:03:17,030
Drupal site the difference with

00:03:14,780 --> 00:03:19,069
progressive decoupling is that we then

00:03:17,030 --> 00:03:22,430
layer on top of that a bit of extra

00:03:19,069 --> 00:03:24,109
JavaScript and this could target just a

00:03:22,430 --> 00:03:27,829
small part of the page it could be like

00:03:24,109 --> 00:03:30,139
a block with a live weather widget in it

00:03:27,829 --> 00:03:34,099
or it could be a larger part of the page

00:03:30,139 --> 00:03:37,370
for example like a a real-time block for

00:03:34,099 --> 00:03:38,989
a sport event or a political event so we

00:03:37,370 --> 00:03:40,909
can imagine that most of the page would

00:03:38,989 --> 00:03:42,439
be Drupal their header and footer could

00:03:40,909 --> 00:03:44,810
be normal Drupal blocks that could be a

00:03:42,439 --> 00:03:46,129
sidebar of normal Drupal blocks the only

00:03:44,810 --> 00:03:48,019
thing that would be handled by the

00:03:46,129 --> 00:03:49,699
JavaScript would be the section in the

00:03:48,019 --> 00:03:53,449
middle where we need the dynamic content

00:03:49,699 --> 00:03:56,120
everything else is is standard this is a

00:03:53,449 --> 00:03:58,819
pretty crazy diagram from a Driss blog

00:03:56,120 --> 00:04:00,949
post in 2019 we don't need to look at it

00:03:58,819 --> 00:04:02,479
too closely but I'll talk through and

00:04:00,949 --> 00:04:04,909
what it describes because there's a good

00:04:02,479 --> 00:04:07,639
way of covering the benefits in this top

00:04:04,909 --> 00:04:10,489
red box we've got two columns on the

00:04:07,639 --> 00:04:12,049
Left we have editorial interests so I

00:04:10,489 --> 00:04:14,180
want to be able to have a live preview

00:04:12,049 --> 00:04:16,310
I want to have to control page layout I

00:04:14,180 --> 00:04:18,709
want to use in-place editing and then

00:04:16,310 --> 00:04:20,989
what may HTML to be accessible this is a

00:04:18,709 --> 00:04:23,060
big thing for me if decoupling and a lot

00:04:20,989 --> 00:04:24,560
of effort in Drupal goes into

00:04:23,060 --> 00:04:26,510
accessibility we have an accessibility

00:04:24,560 --> 00:04:28,790
gate so we know

00:04:26,510 --> 00:04:30,140
sure that things like our form API is

00:04:28,790 --> 00:04:32,750
always going to produce accessible

00:04:30,140 --> 00:04:35,060
markup when we give control of things

00:04:32,750 --> 00:04:36,680
like forms to a decoupled site there

00:04:35,060 --> 00:04:37,820
isn't that guarantee so you have to make

00:04:36,680 --> 00:04:39,620
sure that your developers are

00:04:37,820 --> 00:04:42,020
sufficiently aware and skilled up and

00:04:39,620 --> 00:04:44,390
and able to match through people's level

00:04:42,020 --> 00:04:45,800
of accessibility if you have a couple

00:04:44,390 --> 00:04:47,300
site or progressively decoupled where

00:04:45,800 --> 00:04:49,640
triples handle in the forms you don't

00:04:47,300 --> 00:04:51,050
need to worry about that as much on the

00:04:49,640 --> 00:04:53,330
right hand side we have sort of more

00:04:51,050 --> 00:04:55,280
development needs so these are things

00:04:53,330 --> 00:04:59,180
like I need to have to control the

00:04:55,280 --> 00:05:00,560
markup exactly I want to use JavaScript

00:04:59,180 --> 00:05:02,300
because I'm going to be putting in lots

00:05:00,560 --> 00:05:04,750
of API so I want to do real-time stuff

00:05:02,300 --> 00:05:07,250
it's gonna be hard to do that in PHP

00:05:04,750 --> 00:05:09,260
there's also sort of agency needs like

00:05:07,250 --> 00:05:10,490
we find it hard to find good Drupal

00:05:09,260 --> 00:05:12,590
developers but everyone wants to do

00:05:10,490 --> 00:05:14,470
react so maybe we should just build more

00:05:12,590 --> 00:05:17,840
react sites because it might be easier

00:05:14,470 --> 00:05:19,430
progressed with the coupling is when you

00:05:17,840 --> 00:05:21,290
have both of those problems you have

00:05:19,430 --> 00:05:23,090
editorial needs you have developer needs

00:05:21,290 --> 00:05:24,730
and you need to find a compromise and

00:05:23,090 --> 00:05:27,140
that's what the second box says it says

00:05:24,730 --> 00:05:29,120
requirements reflect both editorial and

00:05:27,140 --> 00:05:31,040
development needs and a decision tree

00:05:29,120 --> 00:05:36,710
there leads down to a progressively

00:05:31,040 --> 00:05:38,210
decoupled website so it's a quick

00:05:36,710 --> 00:05:41,840
introduction to progressively uploading

00:05:38,210 --> 00:05:43,310
now let's talk about view I am this

00:05:41,840 --> 00:05:44,450
isn't gonna be like a super technical

00:05:43,310 --> 00:05:46,760
talk it's not going to introduce

00:05:44,450 --> 00:05:48,920
anything like crazy not too much detail

00:05:46,760 --> 00:05:51,650
a really too under one a raise awareness

00:05:48,920 --> 00:05:53,060
of using view because it's probably in

00:05:51,650 --> 00:05:54,830
the last five years been the thing

00:05:53,060 --> 00:05:56,870
that's made me most excited about my job

00:05:54,830 --> 00:05:58,250
and it's changed how I feel about

00:05:56,870 --> 00:06:01,310
front-end development especially with

00:05:58,250 --> 00:06:04,700
Drupal um and I absolutely I love it

00:06:01,310 --> 00:06:07,010
it's really amazing I don't want this to

00:06:04,700 --> 00:06:08,480
get into like a view versus angular view

00:06:07,010 --> 00:06:09,800
versus rap talks it's not that kind of

00:06:08,480 --> 00:06:11,600
talk if you want that that's like

00:06:09,800 --> 00:06:13,250
millions and medium articles about that

00:06:11,600 --> 00:06:15,260
but I am going to talk about what I

00:06:13,250 --> 00:06:20,360
think view strengths are especially in a

00:06:15,260 --> 00:06:22,370
Drupal context so view UJS pronounced

00:06:20,360 --> 00:06:24,470
view and it's an open source UI

00:06:22,370 --> 00:06:26,060
framework and it's sort of from the

00:06:24,470 --> 00:06:27,860
second generation of these things so

00:06:26,060 --> 00:06:31,250
it's not like ember on knockout it's

00:06:27,860 --> 00:06:34,190
more similar to react it's maintained by

00:06:31,250 --> 00:06:36,290
core team similar to Drupal in a way the

00:06:34,190 --> 00:06:38,390
lead developer ever knew used to work at

00:06:36,290 --> 00:06:39,540
Google and he used angular day-in

00:06:38,390 --> 00:06:41,640
day-out and he thought

00:06:39,540 --> 00:06:44,310
there's good bits about this as bad bits

00:06:41,640 --> 00:06:45,810
well if I made my own version and he's

00:06:44,310 --> 00:06:47,970
doesn't actually work a GUI anymore he

00:06:45,810 --> 00:06:50,520
works full-time on view funded by a

00:06:47,970 --> 00:06:53,370
patreon campaign so I checked this last

00:06:50,520 --> 00:06:55,740
night and he receives twenty and a half

00:06:53,370 --> 00:06:57,810
thousand dollars a month from commercial

00:06:55,740 --> 00:06:59,340
and individual sponsorship and I think

00:06:57,810 --> 00:07:01,680
that shows how strongly the view

00:06:59,340 --> 00:07:03,420
community feels about the product and as

00:07:01,680 --> 00:07:07,740
a result of that views independent from

00:07:03,420 --> 00:07:10,350
any big tech tech tech company it brands

00:07:07,740 --> 00:07:12,600
itself as a progressive framework what

00:07:10,350 --> 00:07:14,100
that means is it's incremental adoptable

00:07:12,600 --> 00:07:16,110
you can start off using it really easily

00:07:14,100 --> 00:07:18,510
to control just one thing on your page

00:07:16,110 --> 00:07:20,820
and then as your skills develop as your

00:07:18,510 --> 00:07:23,190
appetite for using view develops as your

00:07:20,820 --> 00:07:25,260
requirements get more complex and it

00:07:23,190 --> 00:07:28,830
scales with you it's really powerful but

00:07:25,260 --> 00:07:30,810
it's not overwhelming finally the last

00:07:28,830 --> 00:07:34,050
thing is really important its template

00:07:30,810 --> 00:07:35,910
based so rather than writing sort of a

00:07:34,050 --> 00:07:36,540
JavaScript defied version of HTML like

00:07:35,910 --> 00:07:40,680
JSX

00:07:36,540 --> 00:07:42,600
you write valid HTML and view will pass

00:07:40,680 --> 00:07:46,260
that and not turn it into a virtual Dom

00:07:42,600 --> 00:07:48,420
at runtime got another one of these

00:07:46,260 --> 00:07:51,030
scale slides and here we're going to be

00:07:48,420 --> 00:07:52,440
talking about the sort of footprint or

00:07:51,030 --> 00:07:55,020
the size and the ambition of these

00:07:52,440 --> 00:07:58,170
frameworks or libraries so on the left

00:07:55,020 --> 00:08:00,030
hand side we've got react and it's a

00:07:58,170 --> 00:08:01,290
library rather than framework it does

00:08:00,030 --> 00:08:03,270
one thing and it does it really really

00:08:01,290 --> 00:08:05,310
well and it helps you be able to I so

00:08:03,270 --> 00:08:07,950
react to user input for other features

00:08:05,310 --> 00:08:10,110
there's a massive ecosystem and there's

00:08:07,950 --> 00:08:12,180
so many additional things which you can

00:08:10,110 --> 00:08:13,980
extend your view app with and that

00:08:12,180 --> 00:08:16,470
ecosystems healthy is big and that's

00:08:13,980 --> 00:08:17,730
really great there's kind of a cost to

00:08:16,470 --> 00:08:20,460
that size as there's so many options

00:08:17,730 --> 00:08:21,810
people have very strong opinions and you

00:08:20,460 --> 00:08:23,370
need to spend time finding what works

00:08:21,810 --> 00:08:26,520
for you and there's sort of a cost to

00:08:23,370 --> 00:08:28,020
that decision-making angular on the

00:08:26,520 --> 00:08:29,760
other side of the sketch spectrum is a

00:08:28,020 --> 00:08:31,710
framework so it tries to do everything

00:08:29,760 --> 00:08:34,890
it will handle your routing for you your

00:08:31,710 --> 00:08:35,460
form validation or your UI stuff it's

00:08:34,890 --> 00:08:37,110
quite a heavyweight

00:08:35,460 --> 00:08:39,510
you need to buy into using it you need

00:08:37,110 --> 00:08:40,470
to commit to using it but it saves you

00:08:39,510 --> 00:08:43,560
from having to make design decisions

00:08:40,470 --> 00:08:46,890
which can take time and be difficult if

00:08:43,560 --> 00:08:48,180
it's not your specialist area view

00:08:46,890 --> 00:08:51,270
similar to progressive decoupling

00:08:48,180 --> 00:08:52,530
occupies this nice middle spot the view

00:08:51,270 --> 00:08:55,050
core is

00:08:52,530 --> 00:08:58,260
quite small it's about the same size as

00:08:55,050 --> 00:09:00,570
j.crew it does everything react does

00:08:58,260 --> 00:09:03,210
with a few sort of extra syntactical

00:09:00,570 --> 00:09:04,620
sugar site stuff it's got em tools for

00:09:03,210 --> 00:09:07,530
managing animations tools for managing

00:09:04,620 --> 00:09:09,660
transitions but it it's not too heavy

00:09:07,530 --> 00:09:13,080
way as kind of stops there if you want

00:09:09,660 --> 00:09:14,550
to extend it there's core plugins so

00:09:13,080 --> 00:09:15,960
they're separate from the core code base

00:09:14,550 --> 00:09:18,270
but they're maintained by the core team

00:09:15,960 --> 00:09:20,310
and there's an ecosystem which is much

00:09:18,270 --> 00:09:23,070
smaller than reacts but it also has less

00:09:20,310 --> 00:09:25,200
duplication so if you need to extend it

00:09:23,070 --> 00:09:27,930
there's generally one thing that most

00:09:25,200 --> 00:09:29,220
people use or one or two things and so

00:09:27,930 --> 00:09:31,140
it's got a small footprint you can

00:09:29,220 --> 00:09:34,530
extend it and when you need to extend it

00:09:31,140 --> 00:09:36,210
it's not overwhelming with choice you

00:09:34,530 --> 00:09:39,120
can talk about why I think it's really

00:09:36,210 --> 00:09:42,240
really cool the fundamental thing is

00:09:39,120 --> 00:09:43,350
that it's kind of it gives you a shift

00:09:42,240 --> 00:09:46,650
in the way you think about your

00:09:43,350 --> 00:09:48,480
front-end development so rather than the

00:09:46,650 --> 00:09:51,330
Dom being a single source of truth as it

00:09:48,480 --> 00:09:53,850
was in the jquery days everything is now

00:09:51,330 --> 00:09:56,220
data based so if you have an element and

00:09:53,850 --> 00:09:58,110
you want to add a class to it you have a

00:09:56,220 --> 00:10:00,300
javascript object that represents that

00:09:58,110 --> 00:10:02,040
elements classes you bind that object to

00:10:00,300 --> 00:10:03,480
the element for a view directive which

00:10:02,040 --> 00:10:05,460
we'll talk about in a minute and then

00:10:03,480 --> 00:10:07,950
whenever anything adds to that object

00:10:05,460 --> 00:10:09,270
whether it's a method in your own code

00:10:07,950 --> 00:10:11,460
whether it's someone using the view

00:10:09,270 --> 00:10:13,650
developer tools and whether it's

00:10:11,460 --> 00:10:16,470
anything else the Dom will automatically

00:10:13,650 --> 00:10:17,910
be updated in real time so you tell view

00:10:16,470 --> 00:10:19,470
what data you want to track and that

00:10:17,910 --> 00:10:21,450
could be strings it could be objects or

00:10:19,470 --> 00:10:23,250
classes it could be arrays whenever

00:10:21,450 --> 00:10:26,580
those things are modified in any way it

00:10:23,250 --> 00:10:27,870
picks up on it and it updates the Dom so

00:10:26,580 --> 00:10:29,910
there's no need to create events to

00:10:27,870 --> 00:10:32,340
watch for changes and we don't have to

00:10:29,910 --> 00:10:33,630
bind our code to sort of long query

00:10:32,340 --> 00:10:36,180
string selectors or anything like that

00:10:33,630 --> 00:10:40,590
and and it just works really really

00:10:36,180 --> 00:10:41,970
nicely as a bonus and a lot of people

00:10:40,590 --> 00:10:45,450
are use in view as a replacement for

00:10:41,970 --> 00:10:47,820
jQuery so there's two articles here

00:10:45,450 --> 00:10:49,380
Smashing Magazine and CSS tricks I'll

00:10:47,820 --> 00:10:52,080
tweet the link to my slides afterwards

00:10:49,380 --> 00:10:53,790
if you want to check them out and view

00:10:52,080 --> 00:10:56,640
works similar to jQuery and that you can

00:10:53,790 --> 00:10:58,170
attach it to anything on the page it can

00:10:56,640 --> 00:10:59,640
use existing markup which is really

00:10:58,170 --> 00:11:01,590
really great for working with templates

00:10:59,640 --> 00:11:04,140
and then we've actually got an example

00:11:01,590 --> 00:11:04,750
here so I won't spend too long on this

00:11:04,140 --> 00:11:07,030
because it's the

00:11:04,750 --> 00:11:10,570
many of us will be familiar with but in

00:11:07,030 --> 00:11:12,430
the jQuery way we writes a selector we

00:11:10,570 --> 00:11:14,020
attach a clicker then we do some class

00:11:12,430 --> 00:11:16,480
toggler and reduce an attribute toggle

00:11:14,020 --> 00:11:17,980
then if I was to change that button to a

00:11:16,480 --> 00:11:19,360
different element I have to change that

00:11:17,980 --> 00:11:23,890
total class the whole thing would stop

00:11:19,360 --> 00:11:26,860
working with you we've got two new

00:11:23,890 --> 00:11:29,170
things to introduce so we have view

00:11:26,860 --> 00:11:30,910
directives which are kind of extensions

00:11:29,170 --> 00:11:33,760
to HTML that you put in your twig and

00:11:30,910 --> 00:11:35,740
which tell view what to do basically so

00:11:33,760 --> 00:11:38,020
that clique that means attach a click

00:11:35,740 --> 00:11:41,470
event the colon before aria-pressed

00:11:38,020 --> 00:11:46,150
means bind value of aria-pressed to

00:11:41,470 --> 00:11:47,950
active or evaluate this JavaScript these

00:11:46,150 --> 00:11:50,440
things would normally be in your

00:11:47,950 --> 00:11:53,590
JavaScript you wouldn't have like the

00:11:50,440 --> 00:11:55,810
actual and click event function in the

00:11:53,590 --> 00:11:59,080
code but it's just an example later on

00:11:55,810 --> 00:12:01,330
I'll show you a bigger example and and

00:11:59,080 --> 00:12:03,610
then allow JavaScript it's just four

00:12:01,330 --> 00:12:05,740
lines of code we tell view that we're

00:12:03,610 --> 00:12:08,590
dealing with this element and we tell it

00:12:05,740 --> 00:12:10,210
to track a piece of data called active

00:12:08,590 --> 00:12:12,820
which is a boolean and it starts off

00:12:10,210 --> 00:12:14,620
false when the click event happens

00:12:12,820 --> 00:12:16,660
active will be set through the opposite

00:12:14,620 --> 00:12:18,580
of its current value and as a result

00:12:16,660 --> 00:12:19,060
this will update so aria-pressed will be

00:12:18,580 --> 00:12:21,550
toggled

00:12:19,060 --> 00:12:24,760
to I've also got a class example here

00:12:21,550 --> 00:12:27,550
where we've got a object which is bound

00:12:24,760 --> 00:12:30,250
to class attribute and the class red

00:12:27,550 --> 00:12:30,910
will be shown if the value of active is

00:12:30,250 --> 00:12:33,640
true or false

00:12:30,910 --> 00:12:35,350
so we're not using like a toggle class

00:12:33,640 --> 00:12:37,690
function we're just dealing with

00:12:35,350 --> 00:12:39,790
standard JavaScript objects standard

00:12:37,690 --> 00:12:43,810
Bulli and stuff and which really helps

00:12:39,790 --> 00:12:45,760
you not get too confused another massive

00:12:43,810 --> 00:12:47,589
thing for me is easygoing learning curve

00:12:45,760 --> 00:12:52,000
so it feels like an extension of HTML

00:12:47,589 --> 00:12:53,410
and rather than a replacement and the

00:12:52,000 --> 00:12:55,540
documentation is really solid

00:12:53,410 --> 00:12:57,580
the community is nice the dev tools are

00:12:55,540 --> 00:13:01,690
grey it's quite an easy thing to get

00:12:57,580 --> 00:13:04,330
yourself into as an example of the

00:13:01,690 --> 00:13:05,710
developer experience I want to show how

00:13:04,330 --> 00:13:08,860
to do something and react and then how

00:13:05,710 --> 00:13:12,670
to do something review and this is how

00:13:08,860 --> 00:13:14,920
to do to a data bind in so what that

00:13:12,670 --> 00:13:17,709
means is when I type in this input the

00:13:14,920 --> 00:13:18,170
value up here is updated so our HTML is

00:13:17,709 --> 00:13:20,450
just

00:13:18,170 --> 00:13:22,970
d-dave called app and then in here we've

00:13:20,450 --> 00:13:25,010
got a react component we set up some

00:13:22,970 --> 00:13:27,200
state to track value we've got a

00:13:25,010 --> 00:13:29,960
function that handles changes and then

00:13:27,200 --> 00:13:31,760
we've got sort of template in the

00:13:29,960 --> 00:13:33,920
JavaScript file which gets rendered on

00:13:31,760 --> 00:13:37,040
to the page so it's it's quite amount

00:13:33,920 --> 00:13:38,300
quite a lot I think of code I'm sure

00:13:37,040 --> 00:13:39,920
someone who's better than me at react

00:13:38,300 --> 00:13:42,140
would have to write that in a nicer way

00:13:39,920 --> 00:13:44,900
and but this is an example I adapted

00:13:42,140 --> 00:13:48,610
from Flavio copes tutorial so hopefully

00:13:44,900 --> 00:13:54,260
it's OK to do the same thing in view is

00:13:48,610 --> 00:13:55,850
that so this is an example of a view C

00:13:54,260 --> 00:13:57,110
view knowing that there's going to be a

00:13:55,850 --> 00:13:58,910
lot of people doing this a lot of the

00:13:57,110 --> 00:14:01,490
time and it provides a little shortcut

00:13:58,910 --> 00:14:04,430
which is V model so the model means

00:14:01,490 --> 00:14:07,160
basically bind this value and then

00:14:04,430 --> 00:14:08,390
unchanged also update that value so

00:14:07,160 --> 00:14:10,430
rather than having to specify those two

00:14:08,390 --> 00:14:14,690
things separately we're doing it just

00:14:10,430 --> 00:14:17,090
with the V model and directive so this

00:14:14,690 --> 00:14:19,670
would be our twig file and we can see

00:14:17,090 --> 00:14:21,650
that the mark-up is in twig so we don't

00:14:19,670 --> 00:14:23,990
have to like reconfigure our IDE to do

00:14:21,650 --> 00:14:25,460
syntax highlighting differently if we've

00:14:23,990 --> 00:14:28,100
got things processing those twig files

00:14:25,460 --> 00:14:30,110
we can still process them the mark-up

00:14:28,100 --> 00:14:33,620
stays where it belongs really which is

00:14:30,110 --> 00:14:36,140
in a Drupal templating language on the

00:14:33,620 --> 00:14:38,090
JavaScript side of things we attach view

00:14:36,140 --> 00:14:41,450
to the element which is the ID in the

00:14:38,090 --> 00:14:44,510
HTML and again we sell it to track a

00:14:41,450 --> 00:14:47,690
piece of data according aim so that's

00:14:44,510 --> 00:14:49,640
all it takes and this is a slightly more

00:14:47,690 --> 00:14:51,710
complex example it's like a name badge

00:14:49,640 --> 00:14:54,080
generator I'm typing in here the name

00:14:51,710 --> 00:14:57,950
badges updated and we're going to show

00:14:54,080 --> 00:14:59,540
you some more view directives here so up

00:14:57,950 --> 00:15:02,810
here we've got something called V cloak

00:14:59,540 --> 00:15:06,080
and what that does is that is removed

00:15:02,810 --> 00:15:08,330
once view has initiated itself so in

00:15:06,080 --> 00:15:10,220
your CSS if you put V cloak display:none

00:15:08,330 --> 00:15:12,260
that means this whole thing will be

00:15:10,220 --> 00:15:13,670
hidden until the JavaScript run and that

00:15:12,260 --> 00:15:17,480
stops the user from seeing the

00:15:13,670 --> 00:15:20,210
placeholders we've got V if here which

00:15:17,480 --> 00:15:21,800
we used to toggle so if the names empty

00:15:20,210 --> 00:15:23,180
we get the shrug emoji which comes from

00:15:21,800 --> 00:15:25,580
here because we've got an exclamation

00:15:23,180 --> 00:15:27,650
mark in front of the name if name has a

00:15:25,580 --> 00:15:30,650
true value then we show the capitalized

00:15:27,650 --> 00:15:31,640
name well capitalized name is is an

00:15:30,650 --> 00:15:34,279
example of

00:15:31,640 --> 00:15:36,019
computed property in view so computed

00:15:34,279 --> 00:15:38,269
properties are really really cool and

00:15:36,019 --> 00:15:40,430
they basically take an existent piece of

00:15:38,269 --> 00:15:43,279
data which is named and they transform

00:15:40,430 --> 00:15:44,750
it and view is clever enough to work out

00:15:43,279 --> 00:15:46,970
what the dependencies of the commutative

00:15:44,750 --> 00:15:49,220
property are so it knows that if name

00:15:46,970 --> 00:15:53,660
changes then capitalise name needs to

00:15:49,220 --> 00:15:55,310
change and it's clever enough to only

00:15:53,660 --> 00:15:57,230
update the bits of the Dom that need it

00:15:55,310 --> 00:15:59,839
so it's not going to render the whole

00:15:57,230 --> 00:16:01,940
page again this is an example of the

00:15:59,839 --> 00:16:04,490
view dev tools which I love they make

00:16:01,940 --> 00:16:05,870
debugging so much easier and I've

00:16:04,490 --> 00:16:09,170
extended the example a little bit

00:16:05,870 --> 00:16:10,820
there's like now a range slider and you

00:16:09,170 --> 00:16:12,680
can say how excited you are and then

00:16:10,820 --> 00:16:14,240
this gets bolder and exclamation marks

00:16:12,680 --> 00:16:16,790
you can see the excitement values

00:16:14,240 --> 00:16:19,700
increased and up here you can also see

00:16:16,790 --> 00:16:20,930
when saw on fixed submit this array

00:16:19,700 --> 00:16:23,480
which is currently empty

00:16:20,930 --> 00:16:26,120
it's going to get a value pushed into it

00:16:23,480 --> 00:16:27,890
so I'm doing this and I think with the

00:16:26,120 --> 00:16:29,660
keyboard or the mouse but we can see

00:16:27,890 --> 00:16:31,220
that the dev tools is updated in real

00:16:29,660 --> 00:16:32,360
time which is like really useful for

00:16:31,220 --> 00:16:35,149
when something's not working and you

00:16:32,360 --> 00:16:36,410
want to try and figure out important

00:16:35,149 --> 00:16:38,420
thing to note is that in both those

00:16:36,410 --> 00:16:39,860
examples there was no build process we

00:16:38,420 --> 00:16:43,160
weren't having to run NPM watch or

00:16:39,860 --> 00:16:46,310
anything and you can you can use view

00:16:43,160 --> 00:16:47,570
just by including it as a script tag if

00:16:46,310 --> 00:16:48,589
you've got a massive application you're

00:16:47,570 --> 00:16:49,880
probably not going to want to do that

00:16:48,589 --> 00:16:52,010
you'll want to use webpack or whatever

00:16:49,880 --> 00:16:53,300
but you can start off just doing it like

00:16:52,010 --> 00:16:54,769
that and that's why I meant earlier

00:16:53,300 --> 00:17:01,940
about it been really easy to dip your

00:16:54,769 --> 00:17:04,520
toes into it so for me view feels really

00:17:01,940 --> 00:17:06,169
complimentary of Drupal and they both

00:17:04,520 --> 00:17:08,089
have a focus on doing things in markup

00:17:06,169 --> 00:17:10,459
it would replate we started doing a lot

00:17:08,089 --> 00:17:12,350
more of Twigg with you we keep our

00:17:10,459 --> 00:17:13,760
directives alongside our markup so

00:17:12,350 --> 00:17:15,770
there's less contact shift in between

00:17:13,760 --> 00:17:17,419
files and there's an argument there

00:17:15,770 --> 00:17:19,400
about separation of concerns but for me

00:17:17,419 --> 00:17:20,630
I'd rather spend less time switching

00:17:19,400 --> 00:17:22,730
between files and try and remember what

00:17:20,630 --> 00:17:25,130
I'm doing and perhaps that's a personal

00:17:22,730 --> 00:17:26,449
opinion they both have a small core

00:17:25,130 --> 00:17:28,339
functionality but lots of plugins

00:17:26,449 --> 00:17:31,490
they're both sort of independent

00:17:28,339 --> 00:17:33,380
open-source projects and with the case

00:17:31,490 --> 00:17:35,570
of view is easy to add to existing sites

00:17:33,380 --> 00:17:37,400
so the project I mean we talked about in

00:17:35,570 --> 00:17:39,679
a moment we built as a standard Drupal

00:17:37,400 --> 00:17:41,059
site until we realized the Drupal Ajax

00:17:39,679 --> 00:17:46,690
stuff wasn't going to cut it and we had

00:17:41,059 --> 00:17:46,690
to use view so let's talk about that now

00:17:48,370 --> 00:17:53,180
the site we were working on was a

00:17:50,960 --> 00:17:55,250
University website so obviously is one

00:17:53,180 --> 00:17:56,990
of its core functions was to promote the

00:17:55,250 --> 00:18:01,070
programs the courses the degrees that

00:17:56,990 --> 00:18:02,360
their university offers for especially

00:18:01,070 --> 00:18:04,760
their undergraduate degrees they had a

00:18:02,360 --> 00:18:07,670
lot of what they called variants so if I

00:18:04,760 --> 00:18:10,100
wanted to do a course in my airline

00:18:07,670 --> 00:18:12,410
management I could do it full-time I

00:18:10,100 --> 00:18:13,760
could do it part-time I could do it with

00:18:12,410 --> 00:18:15,800
a foundation yeah I could do it an

00:18:13,760 --> 00:18:17,540
industrial placement yeah I could start

00:18:15,800 --> 00:18:20,360
in September I could start maybe in the

00:18:17,540 --> 00:18:22,070
calendar year in January and all these

00:18:20,360 --> 00:18:24,500
variants have different content because

00:18:22,070 --> 00:18:27,220
one of a placement year will take longer

00:18:24,500 --> 00:18:29,420
to complete it might cost a bit more and

00:18:27,220 --> 00:18:31,940
until the redevelopment of their web

00:18:29,420 --> 00:18:33,800
site each of these course variants was

00:18:31,940 --> 00:18:35,480
its own node so there was a lot of

00:18:33,800 --> 00:18:38,390
shared content between the nodes but

00:18:35,480 --> 00:18:40,520
also a few different says the university

00:18:38,390 --> 00:18:42,860
was hit with duplicate content penalties

00:18:40,520 --> 00:18:45,680
from an SEO point of view and they also

00:18:42,860 --> 00:18:46,940
had a maintenance overhead their CMS

00:18:45,680 --> 00:18:48,500
users we're having to spend a lot of

00:18:46,940 --> 00:18:50,660
time updating the same things in

00:18:48,500 --> 00:18:55,340
different places there was even a bit of

00:18:50,660 --> 00:18:57,590
a concern about regulations so the

00:18:55,340 --> 00:18:59,150
courses have content which has to be

00:18:57,590 --> 00:19:01,940
there by law and it has to be update

00:18:59,150 --> 00:19:04,550
updated rather and they were concerned

00:19:01,940 --> 00:19:06,170
that having the different nodes would

00:19:04,550 --> 00:19:09,470
mean that they might not always have the

00:19:06,170 --> 00:19:11,900
right content in the right place so we

00:19:09,470 --> 00:19:13,940
wanted to get all of this stuff on one

00:19:11,900 --> 00:19:16,670
single page we wanted to have a single

00:19:13,940 --> 00:19:18,590
canonical URL and we wanted to have all

00:19:16,670 --> 00:19:21,680
their google juice on focus on that one

00:19:18,590 --> 00:19:24,220
page rather than distributed we also

00:19:21,680 --> 00:19:27,140
wanted a much better user experience the

00:19:24,220 --> 00:19:28,280
prospective students were frustrated

00:19:27,140 --> 00:19:30,110
about switching between all these

00:19:28,280 --> 00:19:31,340
different pages trying to work out what

00:19:30,110 --> 00:19:33,920
was different which one they should be

00:19:31,340 --> 00:19:35,600
looking at so he wanted a more app like

00:19:33,920 --> 00:19:37,940
user experience we wanted content

00:19:35,600 --> 00:19:40,610
through update automatically on the page

00:19:37,940 --> 00:19:41,660
for changes to be highlighted and for

00:19:40,610 --> 00:19:46,550
all of that to happen sort of

00:19:41,660 --> 00:19:49,820
instantaneously so this is the the

00:19:46,550 --> 00:19:51,320
Drupal side of the solution and nothing

00:19:49,820 --> 00:19:53,420
we did here was particularly complex but

00:19:51,320 --> 00:19:55,340
we had a really good end result and I

00:19:53,420 --> 00:19:57,710
think that is one things that encourage

00:19:55,340 --> 00:19:58,880
me to do is talk we built something that

00:19:57,710 --> 00:20:00,290
feels advanced but

00:19:58,880 --> 00:20:02,270
when you look at the code isn't actually

00:20:00,290 --> 00:20:04,130
that complex and as a result we've had

00:20:02,270 --> 00:20:07,400
very very few like big issues with it

00:20:04,130 --> 00:20:09,620
very few big bugs on the Drupal side of

00:20:07,400 --> 00:20:12,130
things we have a content type for

00:20:09,620 --> 00:20:14,450
courses with all the usual fields

00:20:12,130 --> 00:20:16,520
anything that static that stays the same

00:20:14,450 --> 00:20:18,680
between variants is just a regular field

00:20:16,520 --> 00:20:20,840
on the content type and then we have a

00:20:18,680 --> 00:20:23,030
paragraph field which contains all our

00:20:20,840 --> 00:20:25,190
variants so each variant would be like

00:20:23,030 --> 00:20:27,110
starting at this time doing it full-time

00:20:25,190 --> 00:20:31,520
starting this time doing it part-time

00:20:27,110 --> 00:20:33,260
and so on we exposed a variant data to

00:20:31,520 --> 00:20:34,670
our view application for Drupal settings

00:20:33,260 --> 00:20:38,240
which I'll talk about in a moment and

00:20:34,670 --> 00:20:40,460
then we have a custom tweak macro which

00:20:38,240 --> 00:20:42,830
prints these variant fields but with a

00:20:40,460 --> 00:20:45,260
sort of wrapping element which view uses

00:20:42,830 --> 00:20:47,360
to control their visibility so all the

00:20:45,260 --> 00:20:49,220
data is actually on the page and Drupal

00:20:47,360 --> 00:20:51,770
prints it they're all we're using view

00:20:49,220 --> 00:20:54,170
for well primarily what we're using view

00:20:51,770 --> 00:20:56,060
for is to control its visibility we also

00:20:54,170 --> 00:20:57,980
use it to like update the URL so people

00:20:56,060 --> 00:21:00,740
can share a query string parameter of

00:20:57,980 --> 00:21:02,900
the variance and we use it to allow the

00:21:00,740 --> 00:21:04,280
user to copy the application code to

00:21:02,900 --> 00:21:07,040
their clipboard for when they apply on

00:21:04,280 --> 00:21:08,420
an external site few more things but the

00:21:07,040 --> 00:21:10,520
main thing is shown and hide in these

00:21:08,420 --> 00:21:16,430
variants and presenting a user interface

00:21:10,520 --> 00:21:17,990
to to talk about between them so this is

00:21:16,430 --> 00:21:20,540
kind of a zoomed out view of what it

00:21:17,990 --> 00:21:23,380
looks like and on the left hand side

00:21:20,540 --> 00:21:25,970
we've got a larger view of the page and

00:21:23,380 --> 00:21:29,300
and I've highlighted in pink some of the

00:21:25,970 --> 00:21:31,490
things that change so this shows what

00:21:29,300 --> 00:21:33,170
modules are available like what units of

00:21:31,490 --> 00:21:35,420
study and it's also got some

00:21:33,170 --> 00:21:37,430
introductory text that can change so

00:21:35,420 --> 00:21:39,530
that will all be updated lower down

00:21:37,430 --> 00:21:41,840
there's lots more of those examples and

00:21:39,530 --> 00:21:44,480
up here and on the right hand side we've

00:21:41,840 --> 00:21:47,780
got an example of the user interface so

00:21:44,480 --> 00:21:49,190
this is a sticky bar and we have a study

00:21:47,780 --> 00:21:51,140
option here which is the sort of

00:21:49,190 --> 00:21:52,880
full-time part-time thing you also have

00:21:51,140 --> 00:21:54,950
a start date and both of those are

00:21:52,880 --> 00:21:56,330
select elements if you update one the

00:21:54,950 --> 00:21:59,930
list and the other will change depending

00:21:56,330 --> 00:22:02,600
on what's available but we did some user

00:21:59,930 --> 00:22:04,210
testing and it turns out not everyone

00:22:02,600 --> 00:22:07,130
sort of thought to interact with those

00:22:04,210 --> 00:22:08,630
so lower down we've got these things

00:22:07,130 --> 00:22:11,810
which look like sort of links or buttons

00:22:08,630 --> 00:22:12,740
and these do exactly the same so if the

00:22:11,810 --> 00:22:14,659
user misses the

00:22:12,740 --> 00:22:17,120
Asians here in the Select element they

00:22:14,659 --> 00:22:18,500
can use these instead and of course if

00:22:17,120 --> 00:22:20,299
they change them down here it also

00:22:18,500 --> 00:22:21,710
changes it up there it keeps it all in

00:22:20,299 --> 00:22:24,260
sync and that would have been really

00:22:21,710 --> 00:22:26,809
hard to do I think with a sort of Dom in

00:22:24,260 --> 00:22:29,299
control approach but with the data and

00:22:26,809 --> 00:22:31,520
control approach that's fine because we

00:22:29,299 --> 00:22:36,169
just rights a data object and then view

00:22:31,520 --> 00:22:37,279
updates everything for us so this is

00:22:36,169 --> 00:22:38,899
what it looks like in Drupal

00:22:37,279 --> 00:22:41,360
you can see we've got a bunch of course

00:22:38,899 --> 00:22:43,730
variant paragraphs and inside then this

00:22:41,360 --> 00:22:45,529
there's quite a lot of things start date

00:22:43,730 --> 00:22:48,559
sort of codes for the application

00:22:45,529 --> 00:22:50,029
systems and how long it takes some more

00:22:48,559 --> 00:22:52,909
internal stuff there's some entity

00:22:50,029 --> 00:22:54,529
references there to shared content like

00:22:52,909 --> 00:22:58,909
information about the funding options

00:22:54,529 --> 00:23:00,260
available or application requirements so

00:22:58,909 --> 00:23:05,000
let's talk about how we get that data

00:23:00,260 --> 00:23:07,580
out of our paragraphs and interview so

00:23:05,000 --> 00:23:10,159
this is a simplified example we're going

00:23:07,580 --> 00:23:12,830
to build a little view app which toggles

00:23:10,159 --> 00:23:14,240
between two logos and this wasn't taken

00:23:12,830 --> 00:23:15,590
from the University project it was a

00:23:14,240 --> 00:23:17,270
project I was working on recently which

00:23:15,590 --> 00:23:19,100
had like sub brands and we wanted to

00:23:17,270 --> 00:23:21,460
sort of we have to change the logo

00:23:19,100 --> 00:23:25,070
through view based on the Drupal set in

00:23:21,460 --> 00:23:27,919
so on the PHP side we've got a HTML

00:23:25,070 --> 00:23:30,500
pre-process function and we've set in

00:23:27,919 --> 00:23:33,620
our logo there in value to be B there's

00:23:30,500 --> 00:23:35,299
a as the hero setting it to B we tell

00:23:33,620 --> 00:23:36,860
Drupal we're going to be using some

00:23:35,299 --> 00:23:39,200
Drupal settings on this page so we

00:23:36,860 --> 00:23:40,880
attach that library and then we create a

00:23:39,200 --> 00:23:43,309
Drupal session with our module name and

00:23:40,880 --> 00:23:45,200
our logo variant key and we set it to

00:23:43,309 --> 00:23:50,330
the value of logo variant so it's going

00:23:45,200 --> 00:23:52,429
to be B then in our view and we create

00:23:50,330 --> 00:23:55,730
the component or app we tie it to the ID

00:23:52,429 --> 00:23:58,460
of app it could be anything in our data

00:23:55,730 --> 00:24:00,320
object we have got current source and

00:23:58,460 --> 00:24:01,789
we're reading this from Drupal settings

00:24:00,320 --> 00:24:04,399
which will already be on the page

00:24:01,789 --> 00:24:06,409
because we attach the library so current

00:24:04,399 --> 00:24:08,270
source is going to be Drupal settings

00:24:06,409 --> 00:24:12,230
module name logo variant which will

00:24:08,270 --> 00:24:16,299
evaluate to B then we've got an object

00:24:12,230 --> 00:24:21,139
of our two different logos so two images

00:24:16,299 --> 00:24:23,360
hosted on cloud inari a and B down here

00:24:21,139 --> 00:24:25,730
and we've got another computed value

00:24:23,360 --> 00:24:26,300
called logo source and what logo source

00:24:25,730 --> 00:24:30,220
is going to do

00:24:26,300 --> 00:24:34,100
as it's going to return from the array

00:24:30,220 --> 00:24:36,500
the key which matches this current

00:24:34,100 --> 00:24:38,870
source so this current source Drupal

00:24:36,500 --> 00:24:41,330
setting will be B it will pick this out

00:24:38,870 --> 00:24:43,700
of the object and then in our markup

00:24:41,330 --> 00:24:45,740
we've put a colon in front of the source

00:24:43,700 --> 00:24:48,320
attribute which means we want the

00:24:45,740 --> 00:24:50,600
blindness to review and a piece of data

00:24:48,320 --> 00:24:56,600
and we're binding it to logo source

00:24:50,600 --> 00:25:00,620
which we had on the previous slide so

00:24:56,600 --> 00:25:01,970
let's talk about how we used this and we

00:25:00,620 --> 00:25:06,170
had some things which were like simple

00:25:01,970 --> 00:25:09,530
strings so those and we just output a

00:25:06,170 --> 00:25:10,730
view placeholder with the double curly

00:25:09,530 --> 00:25:12,950
brackets which we'll talk about in a

00:25:10,730 --> 00:25:15,100
minute and then when that changes in the

00:25:12,950 --> 00:25:18,230
view data it gets updated automatically

00:25:15,100 --> 00:25:19,730
we had some more complex stuff we had

00:25:18,230 --> 00:25:20,870
things that which weren't just the

00:25:19,730 --> 00:25:23,360
simple string but we're like whole

00:25:20,870 --> 00:25:24,620
collections and markup and those things

00:25:23,360 --> 00:25:26,179
like the entity references I spoke about

00:25:24,620 --> 00:25:29,600
earlier which put it in like almost a

00:25:26,179 --> 00:25:33,620
mini page for those we made a custom

00:25:29,600 --> 00:25:36,590
twig function and a twig macro and what

00:25:33,620 --> 00:25:37,670
that does is it outputs the field as per

00:25:36,590 --> 00:25:39,440
normal in Drupal

00:25:37,670 --> 00:25:41,059
but it wraps the div around it which has

00:25:39,440 --> 00:25:42,550
some of these view directives and we'll

00:25:41,059 --> 00:25:45,679
look at that in a second

00:25:42,550 --> 00:25:48,410
so if you hide shows and hides those

00:25:45,679 --> 00:25:52,040
elements and views got two ways of doing

00:25:48,410 --> 00:25:53,780
that you can use VF which will actually

00:25:52,040 --> 00:25:56,559
add and remove things from the Dom and

00:25:53,780 --> 00:25:59,600
has V Show which will display none or

00:25:56,559 --> 00:26:01,880
display what it was initially we used to

00:25:59,600 --> 00:26:03,230
be show and mainly for performance

00:26:01,880 --> 00:26:04,540
reasons if you've got a lot of things

00:26:03,230 --> 00:26:07,400
changed on the page

00:26:04,540 --> 00:26:09,290
VF will be updated and removing the Dom

00:26:07,400 --> 00:26:10,940
in quite a lot of places whereas if use

00:26:09,290 --> 00:26:12,350
V show it's just toggling visibility

00:26:10,940 --> 00:26:14,600
which is a much cheaper way of doing it

00:26:12,350 --> 00:26:16,309
from performance point of view what's

00:26:14,600 --> 00:26:18,890
interesting is we didn't actually use

00:26:16,309 --> 00:26:20,270
any api's for this and when the work

00:26:18,890 --> 00:26:22,790
first came in we were like oh cool we

00:26:20,270 --> 00:26:24,320
can use JSON API that'll be great but in

00:26:22,790 --> 00:26:26,450
reality we didn't kind of didn't really

00:26:24,320 --> 00:26:28,520
need to because we're just talking the

00:26:26,450 --> 00:26:31,010
visibility an advanced of that is

00:26:28,520 --> 00:26:32,780
there's no network request being made so

00:26:31,010 --> 00:26:34,580
if I'm using this on my phone and I go

00:26:32,780 --> 00:26:36,590
for a tunnel like say I'm on a train or

00:26:34,580 --> 00:26:37,090
something it's still gonna work because

00:26:36,590 --> 00:26:40,390
we're not

00:26:37,090 --> 00:26:42,520
query in an API and for more complex

00:26:40,390 --> 00:26:44,500
examples of things with external data

00:26:42,520 --> 00:26:46,240
we'd probably have to use an API but in

00:26:44,500 --> 00:26:49,990
this case we didn't need to which was

00:26:46,240 --> 00:26:54,010
nice so let's get into the the twig side

00:26:49,990 --> 00:26:56,380
of it and what we've got here is two

00:26:54,010 --> 00:26:59,890
divs we've got a data attribute here

00:26:56,380 --> 00:27:02,560
which we just use em to flash with CSS

00:26:59,890 --> 00:27:05,440
if it's updated and then we've got a

00:27:02,560 --> 00:27:10,360
condition for this one we're gonna be

00:27:05,440 --> 00:27:12,220
showing this if the user said they want

00:27:10,360 --> 00:27:15,550
to override this bit of content a

00:27:12,220 --> 00:27:16,510
variant level the more interesting bit

00:27:15,550 --> 00:27:19,540
is what we've got here

00:27:16,510 --> 00:27:21,040
so Rutherford is our theme and it's like

00:27:19,540 --> 00:27:22,750
an atomic design theme with pattern app

00:27:21,040 --> 00:27:25,480
so we named after Rutherford who was an

00:27:22,750 --> 00:27:27,370
atomic scientist in Manchester and so

00:27:25,480 --> 00:27:29,500
we're loading our theme we're getting

00:27:27,370 --> 00:27:31,750
its twig macros and we've got a twig

00:27:29,500 --> 00:27:34,240
macro called print variant we give it

00:27:31,750 --> 00:27:36,310
the field name we give it a list of

00:27:34,240 --> 00:27:37,870
variants which we want to print so this

00:27:36,310 --> 00:27:39,370
is going to print one two three four as

00:27:37,870 --> 00:27:41,650
many as variance as there are for that

00:27:39,370 --> 00:27:46,570
field and we give it a field type which

00:27:41,650 --> 00:27:50,620
in this case is long text one this is

00:27:46,570 --> 00:27:55,210
our twig macro so the main thing for us

00:27:50,620 --> 00:27:59,500
to focus on is the middle what this does

00:27:55,210 --> 00:28:02,380
is we render our Drupal field here and

00:27:59,500 --> 00:28:04,120
so we've got a set block we put the

00:28:02,380 --> 00:28:06,120
field markup in it we endless that block

00:28:04,120 --> 00:28:09,820
and that's going to get printed out here

00:28:06,120 --> 00:28:12,040
to wrap it we've got a div we've got a V

00:28:09,820 --> 00:28:14,200
cloak attribute so the user won't see

00:28:12,040 --> 00:28:15,840
like five different variants and then

00:28:14,200 --> 00:28:18,160
suddenly one as the JavaScript runs

00:28:15,840 --> 00:28:19,420
we've got some data attributes which we

00:28:18,160 --> 00:28:22,930
use for the styling as I mentioned

00:28:19,420 --> 00:28:26,140
earlier and then down here we have got a

00:28:22,930 --> 00:28:30,910
V show directive and what this is saying

00:28:26,140 --> 00:28:33,610
to view is I only show this div and its

00:28:30,910 --> 00:28:36,070
contents if the current variant which

00:28:33,610 --> 00:28:38,980
comes from the view data object match is

00:28:36,070 --> 00:28:42,250
the variant ID which twig is going to

00:28:38,980 --> 00:28:44,110
print a integer - we also have a check

00:28:42,250 --> 00:28:46,330
to see what the current funding

00:28:44,110 --> 00:28:47,920
nationality is so some things like the

00:28:46,330 --> 00:28:50,020
course fees are going to vary if you're

00:28:47,920 --> 00:28:52,480
applying from within the

00:28:50,020 --> 00:28:54,460
you or domestically and compared to if

00:28:52,480 --> 00:28:56,260
you're applying from overseas so that

00:28:54,460 --> 00:28:59,350
added a little extra layer of complexity

00:28:56,260 --> 00:29:04,990
but in most cases it was just updates in

00:28:59,350 --> 00:29:06,280
high statements so and Twix will run

00:29:04,990 --> 00:29:07,900
through this it will print all our

00:29:06,280 --> 00:29:11,110
different variants view will control

00:29:07,900 --> 00:29:12,970
what's shown and what's not the next

00:29:11,110 --> 00:29:15,430
thing to do was to build the UI for the

00:29:12,970 --> 00:29:17,740
variant selector so this is the thing we

00:29:15,430 --> 00:29:19,830
saw earlier where you can use the select

00:29:17,740 --> 00:29:22,810
element you can use the links or buttons

00:29:19,830 --> 00:29:24,880
and I've pulled up dev tools here so

00:29:22,810 --> 00:29:27,610
it's really small but in this

00:29:24,880 --> 00:29:29,830
highlighted area as the user interacts

00:29:27,610 --> 00:29:32,850
with these things we can see that these

00:29:29,830 --> 00:29:35,800
integers have been updated in real time

00:29:32,850 --> 00:29:37,690
so whenever one of these is selected we

00:29:35,800 --> 00:29:44,950
know the user is going to need to see

00:29:37,690 --> 00:29:50,380
some new content so we run through all

00:29:44,950 --> 00:29:52,510
of the possible variants we look at all

00:29:50,380 --> 00:29:54,040
the start dates all their study options

00:29:52,510 --> 00:29:56,440
so they're two full-time part-time stuff

00:29:54,040 --> 00:29:59,500
we reduce those two arrays to their

00:29:56,440 --> 00:30:01,150
unique values and then we find start

00:29:59,500 --> 00:30:03,820
dates that match that study option and

00:30:01,150 --> 00:30:06,070
we update the list so we used quite a

00:30:03,820 --> 00:30:08,260
lot of them lo - here we use the lo -

00:30:06,070 --> 00:30:10,990
filter function quite a lot they're the

00:30:08,260 --> 00:30:12,850
one that extracts unique values we could

00:30:10,990 --> 00:30:14,530
probably have done that with sort of es6

00:30:12,850 --> 00:30:15,880
stuff but in my opinion it would have

00:30:14,530 --> 00:30:17,680
made it harder for other people to work

00:30:15,880 --> 00:30:18,910
on and harder for the product to be

00:30:17,680 --> 00:30:22,480
supported it and it would have like

00:30:18,910 --> 00:30:25,000
increased the the barrier entry to work

00:30:22,480 --> 00:30:28,690
on out something that's cool to know is

00:30:25,000 --> 00:30:31,540
that these are not actually buttons

00:30:28,690 --> 00:30:33,730
they're not anchors they're styled radio

00:30:31,540 --> 00:30:35,860
buttons the reason we did that is

00:30:33,730 --> 00:30:38,620
because these things can only ever have

00:30:35,860 --> 00:30:41,020
one value they can only ever be like

00:30:38,620 --> 00:30:43,180
this one toggled or this one toggle for

00:30:41,020 --> 00:30:45,700
the dates and that's something that

00:30:43,180 --> 00:30:47,740
radio elements or rather inputs with a

00:30:45,700 --> 00:30:49,960
radio type give you out-of-the-box with

00:30:47,740 --> 00:30:51,130
native HTML so we didn't need to write

00:30:49,960 --> 00:30:54,460
any JavaScript functionality to make

00:30:51,130 --> 00:30:56,200
that work it just worked and that's kind

00:30:54,460 --> 00:30:58,390
of a trend I see a lot in looking other

00:30:56,200 --> 00:31:00,850
people's view code the way it feels like

00:30:58,390 --> 00:31:03,220
an extension of HTML means that you're

00:31:00,850 --> 00:31:05,040
more likely to use sort of built in HTML

00:31:03,220 --> 00:31:08,410
thing

00:31:05,040 --> 00:31:10,720
so there are some caveats with

00:31:08,410 --> 00:31:13,630
progressive decoupling just like any

00:31:10,720 --> 00:31:15,220
other type of decoupling let's run

00:31:13,630 --> 00:31:16,390
through those we've got about eight

00:31:15,220 --> 00:31:18,880
minutes plus we need to do some

00:31:16,390 --> 00:31:21,220
questions as well so accessibility is a

00:31:18,880 --> 00:31:22,930
big thing and browsers have been around

00:31:21,220 --> 00:31:24,460
for a long time they're really good at

00:31:22,930 --> 00:31:28,360
letting the user know when there's been

00:31:24,460 --> 00:31:29,950
a page change javascript and updating

00:31:28,360 --> 00:31:31,780
the Dom dynamically is less good at

00:31:29,950 --> 00:31:34,230
doing those things but we've got a few

00:31:31,780 --> 00:31:37,330
ways around that first thing is to do

00:31:34,230 --> 00:31:39,610
you can consider using Aria live regions

00:31:37,330 --> 00:31:42,010
so Drupal has a helper function for this

00:31:39,610 --> 00:31:44,590
if you search for Drupal announced and

00:31:42,010 --> 00:31:47,220
it basically just reads out string so

00:31:44,590 --> 00:31:49,600
you can announce that something's change

00:31:47,220 --> 00:31:52,330
for people that might have trouble

00:31:49,600 --> 00:31:54,670
observing which bits are different you

00:31:52,330 --> 00:31:56,170
might consider using an animation or

00:31:54,670 --> 00:31:58,300
like a focus ring type thing to

00:31:56,170 --> 00:31:59,590
highlight what's being changed if you're

00:31:58,300 --> 00:32:01,660
concerned about making the page too

00:31:59,590 --> 00:32:04,120
flashy for people that might prefer less

00:32:01,660 --> 00:32:06,010
motion there's their prefers reduced

00:32:04,120 --> 00:32:08,200
motion media query so you could turn

00:32:06,010 --> 00:32:10,480
that off and you should also consider

00:32:08,200 --> 00:32:12,760
setting focus to things I've changed if

00:32:10,480 --> 00:32:14,350
there is one part the page which is

00:32:12,760 --> 00:32:16,900
changing it's more difficult when

00:32:14,350 --> 00:32:17,950
there's multiple things changing and if

00:32:16,900 --> 00:32:19,720
you want to read more about this it's

00:32:17,950 --> 00:32:21,400
like a massive subject and it's quite

00:32:19,720 --> 00:32:23,020
easy to get wrong but there's also a lot

00:32:21,400 --> 00:32:26,250
of basics which cover most people's

00:32:23,020 --> 00:32:30,130
mistakes and the accessibility project

00:32:26,250 --> 00:32:32,470
a11y it's a numeron m and accessibly

00:32:30,130 --> 00:32:34,930
project anyone why project comm has a

00:32:32,470 --> 00:32:37,420
checklist and a resources page and I'll

00:32:34,930 --> 00:32:42,370
tweet those links later on the other

00:32:37,420 --> 00:32:44,140
thing to watch out for is SEO so search

00:32:42,370 --> 00:32:46,360
engines particularly Google have got a

00:32:44,140 --> 00:32:48,790
lot better over the years with indexing

00:32:46,360 --> 00:32:49,900
dynamic content the way Google does it

00:32:48,790 --> 00:32:52,810
at the moment to the best of my

00:32:49,900 --> 00:32:54,610
knowledge is with two waves so it will

00:32:52,810 --> 00:32:56,860
initially index your site without

00:32:54,610 --> 00:32:59,800
JavaScript enabled it will look at your

00:32:56,860 --> 00:33:02,350
sort of plain HTML content and then

00:32:59,800 --> 00:33:05,080
later on it will do a second wave and

00:33:02,350 --> 00:33:07,870
that's when it will run JavaScript so

00:33:05,080 --> 00:33:11,170
it's best to serve your sort of default

00:33:07,870 --> 00:33:12,790
state as HTML so in our case the

00:33:11,170 --> 00:33:14,020
paragraph which is at the top of that

00:33:12,790 --> 00:33:16,580
multi-value field

00:33:14,020 --> 00:33:18,170
paragraphs field that's always shown

00:33:16,580 --> 00:33:19,460
and so when Google runs through the page

00:33:18,170 --> 00:33:21,260
the first time that's what will get

00:33:19,460 --> 00:33:22,400
indexed when it runs through the second

00:33:21,260 --> 00:33:24,350
time it will realize there's a bit more

00:33:22,400 --> 00:33:26,900
interactivity going on and it will ill

00:33:24,350 --> 00:33:28,910
handle that if you want to see how your

00:33:26,900 --> 00:33:33,530
site looks from Google's point of view

00:33:28,910 --> 00:33:35,930
use their fetch as Google tool finally

00:33:33,530 --> 00:33:37,820
we've got some tips and tricks for using

00:33:35,930 --> 00:33:41,480
Drupal and view so these are things that

00:33:37,820 --> 00:33:42,740
I learned the hard way the key thing of

00:33:41,480 --> 00:33:45,710
Twigg is that they have the same de

00:33:42,740 --> 00:33:47,780
limiters so if you print a view variable

00:33:45,710 --> 00:33:49,190
and if you print a twig variable

00:33:47,780 --> 00:33:51,230
they're both wrapped in those double

00:33:49,190 --> 00:33:53,210
curly brackets so we need to get around

00:33:51,230 --> 00:33:54,410
that otherwise you spend ages refreshing

00:33:53,210 --> 00:33:57,470
your page wondering why there's nothing

00:33:54,410 --> 00:34:01,400
on it one way to do that is with twigs

00:33:57,470 --> 00:34:05,120
for Batum filter so what verbatim in a

00:34:01,400 --> 00:34:10,550
single curly bracket and a percentage

00:34:05,120 --> 00:34:15,050
sign means is ignore everything until I

00:34:10,550 --> 00:34:17,480
end this verbatim tag yeah it's not a

00:34:15,050 --> 00:34:19,130
filter is it and but that's really good

00:34:17,480 --> 00:34:20,810
because then twig won't worry about

00:34:19,130 --> 00:34:22,940
those double curly brackets and they'll

00:34:20,810 --> 00:34:26,000
get past the browser which means view

00:34:22,940 --> 00:34:29,390
will be able to deal with them a second

00:34:26,000 --> 00:34:31,400
way around that is to not use the double

00:34:29,390 --> 00:34:34,070
curly brackets at all so if you've got

00:34:31,400 --> 00:34:36,590
quite a simple situation where we have

00:34:34,070 --> 00:34:39,380
this fan and we want to put some text in

00:34:36,590 --> 00:34:41,870
it we can use the v-tex directive so

00:34:39,380 --> 00:34:44,179
what that means is update the inner text

00:34:41,870 --> 00:34:47,179
of this HTML element to the value of

00:34:44,179 --> 00:34:48,860
leader type in this case if you want to

00:34:47,179 --> 00:34:51,050
get really creative you can also change

00:34:48,860 --> 00:34:52,280
the view de limiters and you can set

00:34:51,050 --> 00:34:53,929
something on the window object which

00:34:52,280 --> 00:34:56,330
does that or you can do it per app so

00:34:53,929 --> 00:34:58,130
you could have it as like that double

00:34:56,330 --> 00:34:59,840
dashes or triple underscores or whatever

00:34:58,130 --> 00:35:01,190
but then that's going to make it harder

00:34:59,840 --> 00:35:02,360
for people that are new to your project

00:35:01,190 --> 00:35:05,270
they have to figure out what that what

00:35:02,360 --> 00:35:06,590
the like special delimiter czar so these

00:35:05,270 --> 00:35:10,250
those two of my favorite ways of doing

00:35:06,590 --> 00:35:12,110
it next tip is switching between the

00:35:10,250 --> 00:35:13,700
minified version of view which is great

00:35:12,110 --> 00:35:17,050
for production but doesn't have the dev

00:35:13,700 --> 00:35:20,150
tools the way we do that is we have a

00:35:17,050 --> 00:35:23,990
view Drupal library for the minified

00:35:20,150 --> 00:35:26,180
version then we have a library also hook

00:35:23,990 --> 00:35:27,800
we check to see whether Java Script

00:35:26,180 --> 00:35:29,020
pre-processing is turned on at a Drupal

00:35:27,800 --> 00:35:32,020
level

00:35:29,020 --> 00:35:33,490
and if it isn't then we switch out the

00:35:32,020 --> 00:35:35,349
minified version for the under minified

00:35:33,490 --> 00:35:37,690
version which gives us access to dev

00:35:35,349 --> 00:35:41,859
tools and sort of much nicer error

00:35:37,690 --> 00:35:43,930
reporting final tip and view tries to be

00:35:41,859 --> 00:35:45,730
helpful and it strips our HTML comments

00:35:43,930 --> 00:35:47,950
from view templates if your view

00:35:45,730 --> 00:35:49,540
template is also your twig template that

00:35:47,950 --> 00:35:51,250
means it's going to get rid of your nice

00:35:49,540 --> 00:35:52,930
Drupal theme debugging comments which

00:35:51,250 --> 00:35:56,290
tell you what templates are being used

00:35:52,930 --> 00:35:59,530
to fix that just add this comments true

00:35:56,290 --> 00:36:00,940
em line to your to your view files and

00:35:59,530 --> 00:36:05,950
then it will leave the Drupal template

00:36:00,940 --> 00:36:09,070
and comments as they are so in

00:36:05,950 --> 00:36:11,530
conclusion I love working with you I

00:36:09,070 --> 00:36:13,540
think it's really simple but it's also

00:36:11,530 --> 00:36:15,130
powerful and I think it's a really good

00:36:13,540 --> 00:36:16,720
fit with Drupal particularly because of

00:36:15,130 --> 00:36:19,930
how you can use it with existing markup

00:36:16,720 --> 00:36:22,349
and intake files and that's it thank you

00:36:19,930 --> 00:36:22,349
very much

00:36:27,020 --> 00:36:32,690
so we have three and a half minutes for

00:36:30,260 --> 00:36:34,190
questions so maybe you do one or two and

00:36:32,690 --> 00:36:37,070
then I'll be around at lunch if anyone

00:36:34,190 --> 00:36:56,420
wants to talk about any of this does

00:36:37,070 --> 00:36:58,610
anyone have a question Hey yeah

00:36:56,420 --> 00:37:00,320
definitely so the question was we're

00:36:58,610 --> 00:37:02,300
using view on this project do we still

00:37:00,320 --> 00:37:05,080
use jQuery do we use Drupal behaviors

00:37:02,300 --> 00:37:08,720
and the answer is yes absolutely

00:37:05,080 --> 00:37:10,280
maybe if I was a purist if my team was a

00:37:08,720 --> 00:37:13,040
curious we wouldn't be doing that but

00:37:10,280 --> 00:37:15,290
the reality is we've got plugins on the

00:37:13,040 --> 00:37:16,790
page like how tabbed plug-in and we need

00:37:15,290 --> 00:37:19,730
to control that and that's done for

00:37:16,790 --> 00:37:22,460
jQuery events so we use jQuery there and

00:37:19,730 --> 00:37:25,550
I also ran into a problem where our lazy

00:37:22,460 --> 00:37:28,369
loading script lazy sizes wasn't

00:37:25,550 --> 00:37:31,070
detecting some of views' changes so we

00:37:28,369 --> 00:37:33,410
used a little bit of quite dirty jQuery

00:37:31,070 --> 00:37:35,210
there to fix that we used Drupal

00:37:33,410 --> 00:37:38,710
behaviors for the content on the page

00:37:35,210 --> 00:37:42,350
which isn't handled by view and we also

00:37:38,710 --> 00:37:44,570
call attached behaviors every time and

00:37:42,350 --> 00:37:47,660
view update certain parts of the pages

00:37:44,570 --> 00:37:50,660
so that our drupal behaviors that handle

00:37:47,660 --> 00:37:53,240
things like the tabs run and so yeah the

00:37:50,660 --> 00:37:55,040
two can coexist and we haven't really

00:37:53,240 --> 00:37:56,660
had any problems with integration there

00:37:55,040 --> 00:37:58,640
and they haven't been problems of

00:37:56,660 --> 00:38:00,500
conflict so it's kind of a mixed

00:37:58,640 --> 00:38:02,180
codebase at the moment but we're using

00:38:00,500 --> 00:38:03,350
what feels like the right to offer the

00:38:02,180 --> 00:38:05,840
right job if there's a lot of really

00:38:03,350 --> 00:38:07,790
heavy Dom stuff and that can't be done

00:38:05,840 --> 00:38:09,380
with this data based approach then we

00:38:07,790 --> 00:38:10,940
use jQuery because that's kind of what

00:38:09,380 --> 00:38:15,460
it's made for and it's it's still good

00:38:10,940 --> 00:38:19,359
at that you're welcome and anyone else

00:38:15,460 --> 00:38:19,359
okay at the back in red

00:38:26,390 --> 00:38:30,590
breaking someone's glasses or something

00:38:42,490 --> 00:38:47,480
Hey hi

00:38:45,260 --> 00:38:50,120
I'm wondering what would be your

00:38:47,480 --> 00:38:52,220
suggestion in terms of strategy for

00:38:50,120 --> 00:38:54,590
progressive decoupling for example my

00:38:52,220 --> 00:38:57,800
team and I are playing with Commerce

00:38:54,590 --> 00:38:59,780
site so shop we have a couple of things

00:38:57,800 --> 00:39:02,660
the couple not using new we are

00:38:59,780 --> 00:39:04,970
considering it but I don't know first

00:39:02,660 --> 00:39:07,760
kind things comes to my mind is I don't

00:39:04,970 --> 00:39:10,610
know product variation switching you

00:39:07,760 --> 00:39:14,990
know not to use Ajax but maybe switch to

00:39:10,610 --> 00:39:17,720
view so back to my question is you know

00:39:14,990 --> 00:39:19,880
what about strategy you know how how to

00:39:17,720 --> 00:39:21,920
approach progressive decoupling for

00:39:19,880 --> 00:39:25,100
example with commerce sites what is your

00:39:21,920 --> 00:39:25,700
experience and suggestion um good

00:39:25,100 --> 00:39:27,590
question

00:39:25,700 --> 00:39:29,900
something I didn't x-men once this was

00:39:27,590 --> 00:39:31,640
my first time using view of Drupal I've

00:39:29,900 --> 00:39:33,050
used it for building SPS I've used it

00:39:31,640 --> 00:39:35,180
for hobbyist stuff but this is the first

00:39:33,050 --> 00:39:37,760
time I've done it with Drupal so not

00:39:35,180 --> 00:39:39,110
barely means an expert I mean I think

00:39:37,760 --> 00:39:41,390
you're right in pointing out that the

00:39:39,110 --> 00:39:46,160
product variation has similarities with

00:39:41,390 --> 00:39:47,900
the course variations and so I can

00:39:46,160 --> 00:39:50,480
imagine that a similar approach to what

00:39:47,900 --> 00:39:53,720
we did here would work and in terms of

00:39:50,480 --> 00:39:58,310
strategy perhaps consider building like

00:39:53,720 --> 00:40:00,200
a an MVP so a sort of prototype and get

00:39:58,310 --> 00:40:02,810
one product which has a few variations

00:40:00,200 --> 00:40:05,090
and then maybe mock up quite a sort of

00:40:02,810 --> 00:40:07,550
rough-and-ready simple looking up and

00:40:05,090 --> 00:40:09,260
like I said it's the the view learning

00:40:07,550 --> 00:40:10,970
curve is gentle there's a lot of really

00:40:09,260 --> 00:40:12,170
good learning resources you could even

00:40:10,970 --> 00:40:16,160
just build in a code pen or something

00:40:12,170 --> 00:40:18,020
and maybe I'm not a good strategist but

00:40:16,160 --> 00:40:19,760
I think maybe start with a sort of

00:40:18,020 --> 00:40:22,280
simple reduced case like that and then

00:40:19,760 --> 00:40:23,780
if you feel like it's gray if you really

00:40:22,280 --> 00:40:26,240
like it you can look at doing it in

00:40:23,780 --> 00:40:28,460
Drupal it's probably not the best

00:40:26,240 --> 00:40:30,310
possible answer though I guess the

00:40:28,460 --> 00:40:35,360
advice is just to try it

00:40:30,310 --> 00:40:37,370
Thanks and yeah it's really one more we

00:40:35,360 --> 00:40:41,390
are over so feel free to go but I think

00:40:37,370 --> 00:40:45,200
someone's way right search and filtering

00:40:41,390 --> 00:40:46,790
for courses on university pages on

00:40:45,200 --> 00:40:51,550
course catalogs one of important

00:40:46,790 --> 00:40:54,920
features is searching question is do you

00:40:51,550 --> 00:40:59,390
search and filtering using Drupal

00:40:54,920 --> 00:40:59,810
filters or view functions okay yeah good

00:40:59,390 --> 00:41:02,150
question

00:40:59,810 --> 00:41:04,190
and so this piece of work was covering

00:41:02,150 --> 00:41:05,690
their course pages themselves we had

00:41:04,190 --> 00:41:08,240
some other work which was the course

00:41:05,690 --> 00:41:09,320
search functionality we're not actually

00:41:08,240 --> 00:41:12,860
using view for that

00:41:09,320 --> 00:41:14,720
yeah we could do I know some of the

00:41:12,860 --> 00:41:17,870
universities have like really nice sort

00:41:14,720 --> 00:41:19,820
of real-time searches if you're

00:41:17,870 --> 00:41:21,140
interested in that I think I'll go Leah

00:41:19,820 --> 00:41:22,850
are really really good at sort of

00:41:21,140 --> 00:41:24,530
JavaScript based search and they

00:41:22,850 --> 00:41:27,350
interact with view well I know that

00:41:24,530 --> 00:41:29,540
their team uses that but in our case and

00:41:27,350 --> 00:41:32,720
the core search is is sort of Search API

00:41:29,540 --> 00:41:36,140
or Sola M which runs off the the Drupal

00:41:32,720 --> 00:41:39,050
data and it's got its got facets but

00:41:36,140 --> 00:41:41,300
they're handled by Drupal and behaviour

00:41:39,050 --> 00:41:42,860
raveling view but there's an area there

00:41:41,300 --> 00:41:52,070
to potentially look at improving in the

00:41:42,860 --> 00:41:54,310
future great thank you very much don't

00:41:52,070 --> 00:41:57,020
forget to come to contribution and to

00:41:54,310 --> 00:41:59,200
leave your session feedback thanks a lot

00:41:57,020 --> 00:41:59,200

YouTube URL: https://www.youtube.com/watch?v=TBLlwvM_uPc


