Title: DrupalCon Asia 2016: DRUPAL AND ISOMORPHIC JAVASCRIPT
Publication date: 2016-04-21
Playlist: DrupalCon Asia - Feb 2016
Description: 
	
Captions: 
	00:00:00,000 --> 00:00:06,870
let everybody else also join and then

00:00:01,829 --> 00:00:15,299
we'll stop no I would like to welcome

00:00:06,870 --> 00:00:17,250
all and hello arrogant Haven so we are

00:00:15,299 --> 00:00:24,090
here to discuss I some of a JavaScript

00:00:17,250 --> 00:00:26,960
and with me I like let her so I am a

00:00:24,090 --> 00:00:32,700
book on I work for 57 private limited

00:00:26,960 --> 00:00:35,700
and I'm a certified elbow with me I have

00:00:32,700 --> 00:00:40,950
nickel so cool so hi everybody good

00:00:35,700 --> 00:00:43,590
evening last session of Drupal core

00:00:40,950 --> 00:00:47,879
nisha excited everybody for tomorrow

00:00:43,590 --> 00:00:50,100
sprint we should be so I am working as a

00:00:47,879 --> 00:00:54,329
senior triple architekten care in 5g

00:00:50,100 --> 00:01:00,000
solutions ok so I am working with this

00:00:54,329 --> 00:01:03,930
forum for a long time now ok so let's

00:01:00,000 --> 00:01:07,439
start not but here long enough to do lot

00:01:03,930 --> 00:01:10,200
of contributions in rupee so let's start

00:01:07,439 --> 00:01:13,520
with this session of isomorphic

00:01:10,200 --> 00:01:17,130
JavaScript with Drupal ready everybody

00:01:13,520 --> 00:01:19,259
ok so just to get a feel feel of

00:01:17,130 --> 00:01:21,799
audience how many of you go I saw a

00:01:19,259 --> 00:01:21,799
concept

00:01:24,100 --> 00:01:34,640
so what were they are what do you know

00:01:26,960 --> 00:01:36,650
about isomorphic exactly ok so the

00:01:34,640 --> 00:01:40,220
topics which are going to cover or what

00:01:36,650 --> 00:01:43,160
is isomorphic JavaScript why I so Murphy

00:01:40,220 --> 00:01:44,900
JavaScript why this instinct idea then

00:01:43,160 --> 00:01:46,660
the sites which are using isomorphic

00:01:44,900 --> 00:01:50,120
java scape the sites return production

00:01:46,660 --> 00:01:51,860
then how to I swim off available

00:01:50,120 --> 00:01:55,690
libraries which library we can use to

00:01:51,860 --> 00:01:58,190
build our isomorphic applications then

00:01:55,690 --> 00:02:00,590
we look on isomorphic JavaScript with

00:01:58,190 --> 00:02:03,800
Drupal so we have prepared a small demo

00:02:00,590 --> 00:02:11,450
using Drupal and last we will see the

00:02:03,800 --> 00:02:17,209
code ok so let us start is what is

00:02:11,450 --> 00:02:20,000
isomorphic JavaScript so isomorphic as

00:02:17,209 --> 00:02:23,720
the term goes is actually means I so

00:02:20,000 --> 00:02:26,060
mean same and morphic means form it was

00:02:23,720 --> 00:02:30,320
actually coined by Charles Charles

00:02:26,060 --> 00:02:32,750
Robbins jolly Robbins actually in 2011

00:02:30,320 --> 00:02:35,030
in one of his blocks and what he was

00:02:32,750 --> 00:02:37,459
actually talking about is that we can

00:02:35,030 --> 00:02:41,090
actually share the same JavaScript code

00:02:37,459 --> 00:02:42,650
in client as it as on server so that was

00:02:41,090 --> 00:02:45,290
actually he was talking about his vision

00:02:42,650 --> 00:02:47,630
war that we need to have JavaScript

00:02:45,290 --> 00:02:52,340
frameworks or JavaScript libraries which

00:02:47,630 --> 00:02:54,890
actually have this which actually have

00:02:52,340 --> 00:02:57,170
the same JavaScript code which can be

00:02:54,890 --> 00:03:01,640
executed same on the server as well as

00:02:57,170 --> 00:03:05,900
on the client so what exactly is

00:03:01,640 --> 00:03:08,000
isomorphic application so in literal

00:03:05,900 --> 00:03:10,280
sense isomorphic applications with a

00:03:08,000 --> 00:03:11,989
dynamic website which literally means

00:03:10,280 --> 00:03:14,540
that it actually JavaScript based

00:03:11,989 --> 00:03:19,150
website everything is absolutely dynamic

00:03:14,540 --> 00:03:24,470
it has a capability to generate its HTML

00:03:19,150 --> 00:03:26,600
well this term is not exactly very small

00:03:24,470 --> 00:03:28,489
here we can have a separate session on

00:03:26,600 --> 00:03:31,940
it because it's actually talking about

00:03:28,489 --> 00:03:34,010
something known as virtual Dom so there

00:03:31,940 --> 00:03:35,660
is a concept of virtual Dom which is

00:03:34,010 --> 00:03:38,730
being there for a while now

00:03:35,660 --> 00:03:40,560
generally we nowadays using virtual Dom

00:03:38,730 --> 00:03:43,380
in some of the library which are using

00:03:40,560 --> 00:03:45,060
isomorphic concept where as in

00:03:43,380 --> 00:03:47,400
traditional JavaScript or traditional

00:03:45,060 --> 00:03:50,400
way we were using structural Dom so Dom

00:03:47,400 --> 00:03:52,380
if you know document object model it's a

00:03:50,400 --> 00:03:54,030
way that HTML and Java scripts are

00:03:52,380 --> 00:03:57,209
rendered or a stream is rendered in a

00:03:54,030 --> 00:03:59,120
structured way in HTML page virtual Dom

00:03:57,209 --> 00:04:01,590
is a way where when actually you can

00:03:59,120 --> 00:04:04,110
rear-ender the HTML brain based on the

00:04:01,590 --> 00:04:06,660
dynamic content that's the whole idea of

00:04:04,110 --> 00:04:10,290
virtual Dom and it is the capability of

00:04:06,660 --> 00:04:12,720
isomorphic application yes that's where

00:04:10,290 --> 00:04:15,540
the last line is use same code in boats

00:04:12,720 --> 00:04:17,910
server and the client so actually in

00:04:15,540 --> 00:04:21,209
this diagram what you are seeing it's

00:04:17,910 --> 00:04:23,610
not actually ideal because as for the

00:04:21,209 --> 00:04:25,590
isomorphic application concept the

00:04:23,610 --> 00:04:27,300
amount of code which need to be shared

00:04:25,590 --> 00:04:34,230
between client and the server should be

00:04:27,300 --> 00:04:36,240
at least eighty to ninety percent so for

00:04:34,230 --> 00:04:38,130
the sake of this presentation we are

00:04:36,240 --> 00:04:40,380
actually talking about with respect to

00:04:38,130 --> 00:04:44,160
Drupal and how we can share the code

00:04:40,380 --> 00:04:46,260
from Drupal to the browser though the

00:04:44,160 --> 00:04:51,960
isomorphic application can easily share

00:04:46,260 --> 00:04:54,030
the code for iOS or for Android so we

00:04:51,960 --> 00:04:56,610
can actually use isomorphic applications

00:04:54,030 --> 00:04:58,169
code for any kind of platform it's a

00:04:56,610 --> 00:05:01,440
cross-platform thing you can actually

00:04:58,169 --> 00:05:06,300
use for iOS Android Microsoft or

00:05:01,440 --> 00:05:08,520
anything so why I saw movie JavaScript

00:05:06,300 --> 00:05:12,330
why we required as a morphic JavaScript

00:05:08,520 --> 00:05:15,540
what is the need of it so let's talk

00:05:12,330 --> 00:05:18,060
about a history behind web applications

00:05:15,540 --> 00:05:20,270
so generally the web application to

00:05:18,060 --> 00:05:23,370
start with was actually a server

00:05:20,270 --> 00:05:25,800
rendered application to start with long

00:05:23,370 --> 00:05:28,380
back when the web started we are

00:05:25,800 --> 00:05:31,110
actually having a same kind of request

00:05:28,380 --> 00:05:33,450
coming from the browser going to the

00:05:31,110 --> 00:05:35,669
server the server was actually giving

00:05:33,450 --> 00:05:38,669
the entire application in either a

00:05:35,669 --> 00:05:41,070
static HTML format and are very minimal

00:05:38,669 --> 00:05:42,750
dynamic content on it the entire edge

00:05:41,070 --> 00:05:45,090
trim will get rendered on the browser

00:05:42,750 --> 00:05:48,270
and then we can see the application or

00:05:45,090 --> 00:05:49,320
when we can see the website so that was

00:05:48,270 --> 00:05:52,740
the strategy

00:05:49,320 --> 00:05:55,110
era so very lately after that people

00:05:52,740 --> 00:05:56,940
will start thinking that why only

00:05:55,110 --> 00:05:59,130
server-side why can't we try something

00:05:56,940 --> 00:06:01,830
from the client side so people started

00:05:59,130 --> 00:06:04,440
working with fat clients fat client

00:06:01,830 --> 00:06:05,850
means where lots of codes are already

00:06:04,440 --> 00:06:08,030
available from the bra on the browser

00:06:05,850 --> 00:06:11,280
itself rather on the server side and

00:06:08,030 --> 00:06:13,320
then nowadays people are talking about a

00:06:11,280 --> 00:06:15,930
concept known as isomorphic web

00:06:13,320 --> 00:06:18,270
application don't worry this is only the

00:06:15,930 --> 00:06:20,250
three things in detail we are coming in

00:06:18,270 --> 00:06:23,460
the slides or anyways so let's talk

00:06:20,250 --> 00:06:26,670
about in detail in the server Android

00:06:23,460 --> 00:06:29,280
application so let's talk about server

00:06:26,670 --> 00:06:30,990
and application so ideal scenario in a

00:06:29,280 --> 00:06:32,910
server in an application you actually

00:06:30,990 --> 00:06:35,490
have a dom manipulation and user

00:06:32,910 --> 00:06:37,910
interface on the client side and you

00:06:35,490 --> 00:06:40,530
have view layer application logic

00:06:37,910 --> 00:06:43,470
routing persistence which actually your

00:06:40,530 --> 00:06:45,840
data layer on the server side it can be

00:06:43,470 --> 00:06:48,090
on any language can be in rupal Ruby

00:06:45,840 --> 00:06:51,870
Python you name it it will be on the

00:06:48,090 --> 00:06:54,510
server side itself the flow which in

00:06:51,870 --> 00:06:56,640
which happens is is from the browser

00:06:54,510 --> 00:07:00,990
side on the client side we actually get

00:06:56,640 --> 00:07:05,520
a request and then from the server side

00:07:00,990 --> 00:07:07,620
you get a response and again if you want

00:07:05,520 --> 00:07:10,320
another request to come from the server

00:07:07,620 --> 00:07:11,910
side and again we get a response sorry

00:07:10,320 --> 00:07:14,040
from the client side and again we get a

00:07:11,910 --> 00:07:16,170
response from the server side the

00:07:14,040 --> 00:07:18,210
request response loop is keep on

00:07:16,170 --> 00:07:19,770
happening so for every request coming

00:07:18,210 --> 00:07:22,200
from the client will be asked ideal

00:07:19,770 --> 00:07:23,880
response coming from the server this

00:07:22,200 --> 00:07:28,830
ideal scenario server rendered

00:07:23,880 --> 00:07:31,320
applications so if a client is sending a

00:07:28,830 --> 00:07:34,440
request to the server what happens in

00:07:31,320 --> 00:07:38,070
the background so the server we send a

00:07:34,440 --> 00:07:41,100
response the clown will download the

00:07:38,070 --> 00:07:43,200
response the response downloading the

00:07:41,100 --> 00:07:48,420
response mean actually having only the

00:07:43,200 --> 00:07:50,760
static HTML empty dips and then it will

00:07:48,420 --> 00:07:53,280
render that esteem but what will follow

00:07:50,760 --> 00:07:55,140
after that it will download starting the

00:07:53,280 --> 00:07:57,570
Essex there such means it can be

00:07:55,140 --> 00:08:00,090
JavaScript assets images and all those

00:07:57,570 --> 00:08:01,600
things and when the Java scripts a

00:08:00,090 --> 00:08:03,660
certain images are downloaded

00:08:01,600 --> 00:08:06,490
it will start executing those scripts

00:08:03,660 --> 00:08:09,460
this is a very standard way of server

00:08:06,490 --> 00:08:11,230
Android application right so what

00:08:09,460 --> 00:08:13,630
happens inside an application what is

00:08:11,230 --> 00:08:16,240
that want it is of it server enders the

00:08:13,630 --> 00:08:18,160
content yeah and nowadays over an

00:08:16,240 --> 00:08:20,380
application you can actually have using

00:08:18,160 --> 00:08:23,020
a jacks or jQuery lot of effects if you

00:08:20,380 --> 00:08:26,080
wants in several hundred applications it

00:08:23,020 --> 00:08:28,150
will serve HTML fast load and it is very

00:08:26,080 --> 00:08:30,160
very fast definitely from server and

00:08:28,150 --> 00:08:33,160
application if your performance is

00:08:30,160 --> 00:08:35,650
optimized your time to load that

00:08:33,160 --> 00:08:38,919
particular page really very fast right

00:08:35,650 --> 00:08:40,960
and the web page will be SEO friendly so

00:08:38,919 --> 00:08:42,940
the search engines can actually do lot

00:08:40,960 --> 00:08:46,000
of SEO on it and it will be have in the

00:08:42,940 --> 00:08:50,530
Google's on anywhere on the top 10 often

00:08:46,000 --> 00:08:53,230
sides of the world but what happens what

00:08:50,530 --> 00:08:55,090
is a disadvantage of it maintaining you

00:08:53,230 --> 00:08:57,220
I and render logic in both client and

00:08:55,090 --> 00:08:58,540
server so what happens is you need to

00:08:57,220 --> 00:09:01,390
have logic i'm not talking about

00:08:58,540 --> 00:09:03,190
javascript i'm talking about logic so in

00:09:01,390 --> 00:09:05,680
case of logic you need to have some

00:09:03,190 --> 00:09:08,230
logic to render the things on the server

00:09:05,680 --> 00:09:10,180
then on the same logic you need to have

00:09:08,230 --> 00:09:11,740
on the client it can be with the

00:09:10,180 --> 00:09:13,540
javascript logic it can with the server

00:09:11,740 --> 00:09:15,790
logic so what happens you have a

00:09:13,540 --> 00:09:18,790
duplication of logic you have two

00:09:15,790 --> 00:09:20,440
languages two frameworks to development

00:09:18,790 --> 00:09:23,770
stab or two templates whatever way you

00:09:20,440 --> 00:09:27,730
think of it's all duplicated right so

00:09:23,770 --> 00:09:29,590
it's not easy to maintain so the idea

00:09:27,730 --> 00:09:31,120
what came up after that force a rather

00:09:29,590 --> 00:09:33,220
than maintaining all this let's go to

00:09:31,120 --> 00:09:34,570
client Android applications why not we

00:09:33,220 --> 00:09:37,090
have a client rendered thing rather than

00:09:34,570 --> 00:09:38,620
having a server and done so in the

00:09:37,090 --> 00:09:40,930
client in that application it was

00:09:38,620 --> 00:09:42,790
actually concept of a fat client so we

00:09:40,930 --> 00:09:45,550
have a dom manipulation user interface

00:09:42,790 --> 00:09:48,640
view layer application logic routing all

00:09:45,550 --> 00:09:51,220
on the browser basting and on the server

00:09:48,640 --> 00:09:54,760
side well my server is very very thin

00:09:51,220 --> 00:09:59,530
what it has is only half database just

00:09:54,760 --> 00:10:02,380
get the connection have it so the client

00:09:59,530 --> 00:10:05,770
will request for persistence that is

00:10:02,380 --> 00:10:08,260
only for data and then the request will

00:10:05,770 --> 00:10:11,160
be response will be sent by the server

00:10:08,260 --> 00:10:13,779
to the client and that the way it was

00:10:11,160 --> 00:10:17,470
but in that case think of

00:10:13,779 --> 00:10:20,019
a mobile think of a browser in Mobile

00:10:17,470 --> 00:10:23,199
this fat line thing won't work there

00:10:20,019 --> 00:10:25,180
it's too heavy it won't work in this

00:10:23,199 --> 00:10:27,670
kind of scenarios we actually want an

00:10:25,180 --> 00:10:30,279
ideal scenario in which both should work

00:10:27,670 --> 00:10:32,680
in a same direction and shading the same

00:10:30,279 --> 00:10:34,420
amount of coal otherwise my browser will

00:10:32,680 --> 00:10:37,149
be too heavy on the client side which is

00:10:34,420 --> 00:10:38,980
not actually acceptable right now does

00:10:37,149 --> 00:10:41,290
nobody try to have a browser which is

00:10:38,980 --> 00:10:43,779
very very heavy to crash it or mobile

00:10:41,290 --> 00:10:45,999
will crash or hang or something so what

00:10:43,779 --> 00:10:48,430
happens when you have a server client

00:10:45,999 --> 00:10:50,559
requesting for a client ended

00:10:48,430 --> 00:10:52,720
application so the server will send a

00:10:50,559 --> 00:10:56,370
response the client will download the

00:10:52,720 --> 00:10:59,769
response it will download the assets

00:10:56,370 --> 00:11:02,139
it'll execute the script it will fetch

00:10:59,769 --> 00:11:04,720
the data if it is API and I am still

00:11:02,139 --> 00:11:07,540
waiting I'm still waiting still loading

00:11:04,720 --> 00:11:10,839
showing me a spinner on my page and

00:11:07,540 --> 00:11:13,779
haven't got anything till now on my

00:11:10,839 --> 00:11:18,819
browser then it rendered the template

00:11:13,779 --> 00:11:22,089
and now I got initiative so think about

00:11:18,819 --> 00:11:24,459
it that it's taking so much of time to

00:11:22,089 --> 00:11:28,509
do a client Android application what we

00:11:24,459 --> 00:11:30,759
used to get is animated things loading

00:11:28,509 --> 00:11:32,800
gifs we used to get that on the browser

00:11:30,759 --> 00:11:34,569
it's keep on loading loading loading and

00:11:32,800 --> 00:11:37,809
loading and suddenly you get the browser

00:11:34,569 --> 00:11:40,000
and then we think I'm at once and we

00:11:37,809 --> 00:11:43,019
don't have patience of so many minutes

00:11:40,000 --> 00:11:46,059
seconds to wait and get all these things

00:11:43,019 --> 00:11:48,910
so in client in an application what is

00:11:46,059 --> 00:11:50,709
the advantage of it yes in client

00:11:48,910 --> 00:11:52,750
entered again it renders the content as

00:11:50,709 --> 00:11:55,089
the server side it is separate

00:11:52,750 --> 00:11:57,189
application logic and data retrieval

00:11:55,089 --> 00:11:59,050
because the lot of logic is there on the

00:11:57,189 --> 00:12:01,929
client side and the server side is

00:11:59,050 --> 00:12:04,420
different yeah you have very much

00:12:01,929 --> 00:12:06,490
optimistic you are the UI can be proper

00:12:04,420 --> 00:12:08,170
you can actually make DRAG&DROP

00:12:06,490 --> 00:12:10,389
application on the browser's if you

00:12:08,170 --> 00:12:12,670
require a client rendered application

00:12:10,389 --> 00:12:15,279
but is very very heavy right and then

00:12:12,670 --> 00:12:17,259
the examples can be gmail offline gmail

00:12:15,279 --> 00:12:19,240
is actually a application which is

00:12:17,259 --> 00:12:21,249
client render you can actually use that

00:12:19,240 --> 00:12:25,000
or you are using it already I hope so

00:12:21,249 --> 00:12:26,620
and what happens what is a disadvantage

00:12:25,000 --> 00:12:29,320
of it so let's think

00:12:26,620 --> 00:12:30,730
about SEO is not SEO friendly lot of

00:12:29,320 --> 00:12:34,240
JavaScript code and everything is

00:12:30,730 --> 00:12:36,790
available within that HTML page and user

00:12:34,240 --> 00:12:39,220
have to wait that's what we just saw few

00:12:36,790 --> 00:12:41,920
seconds or minutes to load the spinner

00:12:39,220 --> 00:12:44,520
and then see the content and yeah it's

00:12:41,920 --> 00:12:47,380
very expensive for the maintenance goes

00:12:44,520 --> 00:12:49,320
to summarize and the client rendered

00:12:47,380 --> 00:12:54,610
application is our android application

00:12:49,320 --> 00:12:58,750
so server initial load is good client

00:12:54,610 --> 00:13:02,290
bad and the server SEO is good client

00:12:58,750 --> 00:13:03,880
bad in the server user experience not so

00:13:02,290 --> 00:13:06,220
good because you actually have to render

00:13:03,880 --> 00:13:07,900
from the server itself in the client

00:13:06,220 --> 00:13:12,460
it's good I mean you can actually make

00:13:07,900 --> 00:13:14,260
the UI very good so what we should do we

00:13:12,460 --> 00:13:18,250
should do for server in an application

00:13:14,260 --> 00:13:20,590
or client in an application is so like

00:13:18,250 --> 00:13:22,660
we have always imagined being server in

00:13:20,590 --> 00:13:27,280
the client so we need to think about the

00:13:22,660 --> 00:13:29,080
best of the both worlds so we can

00:13:27,280 --> 00:13:34,390
implement isomorphic JavaScript over

00:13:29,080 --> 00:13:35,950
here so let's see the dagga the basic

00:13:34,390 --> 00:13:37,870
diagram which we can get when you search

00:13:35,950 --> 00:13:40,150
that I some of it so we can have a

00:13:37,870 --> 00:13:44,200
client the initiated ah sleep in the

00:13:40,150 --> 00:13:46,600
back end so the state of java script

00:13:44,200 --> 00:13:49,960
contains fueler application logic and

00:13:46,600 --> 00:13:53,410
routing so this is the main whole part

00:13:49,960 --> 00:13:56,860
for the shinobi application if you see

00:13:53,410 --> 00:13:58,480
the flow for SMS a job application for

00:13:56,860 --> 00:14:02,310
the first time request so we have

00:13:58,480 --> 00:14:06,370
domination user interface you just said

00:14:02,310 --> 00:14:11,530
request for a some data will allow

00:14:06,370 --> 00:14:13,540
script at this time our said JavaScript

00:14:11,530 --> 00:14:16,450
read it as the back end at the server

00:14:13,540 --> 00:14:18,970
side so what happened we get it wastes

00:14:16,450 --> 00:14:21,660
from a client it processes manipulating

00:14:18,970 --> 00:14:24,400
and sends a response back to the plant

00:14:21,660 --> 00:14:26,200
so while sending the response to the

00:14:24,400 --> 00:14:27,790
client it also send view layer at

00:14:26,200 --> 00:14:30,880
mixology grouting that you share

00:14:27,790 --> 00:14:32,470
JavaScript with a client so what

00:14:30,880 --> 00:14:35,460
happened for the second addressed

00:14:32,470 --> 00:14:35,460
subsequent requests

00:14:36,040 --> 00:14:41,990
so I mean we do a request so this time

00:14:39,500 --> 00:14:44,420
you want go to the server because we

00:14:41,990 --> 00:14:48,769
already have a our JavaScript in the

00:14:44,420 --> 00:14:51,259
clans side so we have a request it is

00:14:48,769 --> 00:14:53,449
getting served by our JavaScript because

00:14:51,259 --> 00:14:55,370
we have application logic it manipulates

00:14:53,449 --> 00:14:57,319
this request it builds a virtual down

00:14:55,370 --> 00:15:00,649
over here and sensors response back to

00:14:57,319 --> 00:15:03,350
the client again we have request it

00:15:00,649 --> 00:15:06,560
again goes to the our state JavaScript

00:15:03,350 --> 00:15:08,329
and sent the response so as you can see

00:15:06,560 --> 00:15:10,490
we have great out requests in response

00:15:08,329 --> 00:15:12,949
to the server it doesn't mean that the

00:15:10,490 --> 00:15:16,550
best will never go to the server if we

00:15:12,949 --> 00:15:21,440
do a hard refresh a page so at that time

00:15:16,550 --> 00:15:23,690
the request we go to the server so let's

00:15:21,440 --> 00:15:26,410
see what happened for the item of

00:15:23,690 --> 00:15:30,800
application for the first time request

00:15:26,410 --> 00:15:33,889
so we have a server response it download

00:15:30,800 --> 00:15:36,980
the response and user can see the

00:15:33,889 --> 00:15:41,630
container at the same time it will

00:15:36,980 --> 00:15:44,600
download the app logic and a render

00:15:41,630 --> 00:15:46,819
updated and so the client is now having

00:15:44,600 --> 00:15:50,589
all men you've listened to all in

00:15:46,819 --> 00:15:53,600
JavaScript and for a subsequent request

00:15:50,589 --> 00:15:56,300
so it will not go to the server it will

00:15:53,600 --> 00:15:58,759
come to the node at logic it will face

00:15:56,300 --> 00:16:00,829
that request it will do the manipulation

00:15:58,759 --> 00:16:06,079
be virtual Dom it sends back to the

00:16:00,829 --> 00:16:08,680
server back to the clines so this

00:16:06,079 --> 00:16:12,620
happens for or the subsequent requests

00:16:08,680 --> 00:16:14,750
so let's talk about few late so we're

00:16:12,620 --> 00:16:17,209
viewer is really made of about different

00:16:14,750 --> 00:16:20,420
components and if you are trying to pass

00:16:17,209 --> 00:16:23,170
out video to the right answer so we need

00:16:20,420 --> 00:16:29,060
to make it this layer as an isomorphic

00:16:23,170 --> 00:16:30,529
so what are the components markup markup

00:16:29,060 --> 00:16:34,220
is HTML

00:16:30,529 --> 00:16:36,410
the template part 10 here data

00:16:34,220 --> 00:16:38,300
presentation so we get data from the

00:16:36,410 --> 00:16:40,779
server we need to massage it somewhere

00:16:38,300 --> 00:16:43,850
because we need to let make it more

00:16:40,779 --> 00:16:47,509
effectively to the client side so we

00:16:43,850 --> 00:16:49,610
need to add some CSS JavaScript and all

00:16:47,509 --> 00:16:51,829
the beautification party then we have

00:16:49,610 --> 00:16:54,079
internationalisation we have date

00:16:51,829 --> 00:16:56,870
currency formatting and get bigger is in

00:16:54,079 --> 00:16:58,850
good example with us we do once we click

00:16:56,870 --> 00:17:02,209
on the date picker so it automatically

00:16:58,850 --> 00:17:05,390
populate the calendar then we are you

00:17:02,209 --> 00:17:08,270
are formatting so basically we need for

00:17:05,390 --> 00:17:14,780
our a smoky JavaScript you need to pass

00:17:08,270 --> 00:17:17,140
our template our isomorphic so why all

00:17:14,780 --> 00:17:23,059
this trouble why we need this one

00:17:17,140 --> 00:17:26,089
because we want our performance so it

00:17:23,059 --> 00:17:28,789
include a slower speed because we have

00:17:26,089 --> 00:17:34,220
first time you guys is passed but for

00:17:28,789 --> 00:17:37,580
second request is more fast SEO is

00:17:34,220 --> 00:17:39,530
scrollable single page app so currently

00:17:37,580 --> 00:17:42,320
google provides support for isomorphic

00:17:39,530 --> 00:17:47,210
apps because your clients love google

00:17:42,320 --> 00:17:49,460
can index of now grant page it's

00:17:47,210 --> 00:17:51,370
flexible because your same code is

00:17:49,460 --> 00:17:55,970
running both on client and the server

00:17:51,370 --> 00:17:57,890
and because it's flexible it's also easy

00:17:55,970 --> 00:18:00,500
to maintain we have a single quote you

00:17:57,890 --> 00:18:05,720
maintain so the mentality cost is the

00:18:00,500 --> 00:18:07,340
ultimate league game loop so let's see

00:18:05,720 --> 00:18:13,760
what are the sites which are currently

00:18:07,340 --> 00:18:17,230
using isomorphic ok so let's talk about

00:18:13,760 --> 00:18:21,020
the sides using isomorphic JavaScript

00:18:17,230 --> 00:18:23,600
one of the good examples is Flicka so

00:18:21,020 --> 00:18:26,330
you can see here we have lot of pictures

00:18:23,600 --> 00:18:30,169
of Taj Mahal so when I search for Taj

00:18:26,330 --> 00:18:32,419
mail I get a list like this and then

00:18:30,169 --> 00:18:36,080
when you click on any of the image you

00:18:32,419 --> 00:18:38,570
get like this so you get a pop-up it

00:18:36,080 --> 00:18:40,440
actually shows you the image and then it

00:18:38,570 --> 00:18:42,870
shows the related content for the

00:18:40,440 --> 00:18:46,320
particularly mention and it's all being

00:18:42,870 --> 00:18:48,810
done by isomorphic wave so flicker is a

00:18:46,320 --> 00:18:53,640
very good example of how to use a

00:18:48,810 --> 00:18:57,150
synoptic application so what flickr uses

00:18:53,640 --> 00:18:59,970
is actually mochito so mijito is a

00:18:57,150 --> 00:19:02,910
framework which is actually a successor

00:18:59,970 --> 00:19:05,940
of more down so flickr was actually

00:19:02,910 --> 00:19:07,770
using a framework known as more down and

00:19:05,940 --> 00:19:10,650
then they discontinued it and make it as

00:19:07,770 --> 00:19:12,570
mijito so mijito is a framework a

00:19:10,650 --> 00:19:16,730
javascript framework was used by flickr

00:19:12,570 --> 00:19:16,730
to get the isomorphic effect here

00:19:17,360 --> 00:19:23,400
another example is Instagram

00:19:20,780 --> 00:19:25,470
surprisingly Instagram is not actually

00:19:23,400 --> 00:19:28,770
using it right now for the production

00:19:25,470 --> 00:19:32,160
sites but they actually implemented this

00:19:28,770 --> 00:19:35,270
for their sandbox for a while and this

00:19:32,160 --> 00:19:38,820
is also using an isomorphic concept here

00:19:35,270 --> 00:19:42,360
so here if I click on a picture I get a

00:19:38,820 --> 00:19:43,680
pop up like this and actually in the

00:19:42,360 --> 00:19:48,690
pop-up you can see there lot of

00:19:43,680 --> 00:19:51,780
information available and what kind of

00:19:48,690 --> 00:19:54,870
framework they were using is react so

00:19:51,780 --> 00:19:57,150
react is one of the best isomorphic la

00:19:54,870 --> 00:20:00,180
framework or library you can see

00:19:57,150 --> 00:20:03,810
available and they were actually using

00:20:00,180 --> 00:20:06,180
in the back end as Python so Django is a

00:20:03,810 --> 00:20:08,730
Python framework they were using in the

00:20:06,180 --> 00:20:11,430
back end so they try to experiment it in

00:20:08,730 --> 00:20:15,530
their sandbox and that time they

00:20:11,430 --> 00:20:19,310
actually tried using react with zangle

00:20:15,530 --> 00:20:22,980
do you think Drupal is far behind no

00:20:19,310 --> 00:20:28,530
solo about around seven to eight months

00:20:22,980 --> 00:20:30,810
back launched they arrived some of exact

00:20:28,530 --> 00:20:34,350
soul all about is actually using

00:20:30,810 --> 00:20:37,190
isomorphic can we have a round of

00:20:34,350 --> 00:20:37,190
applause for a la la

00:20:38,390 --> 00:20:45,660
because they are stupid so so loll about

00:20:43,350 --> 00:20:48,150
is using the way they are using Drupal

00:20:45,660 --> 00:20:50,460
is and the way they are using isomorphic

00:20:48,150 --> 00:20:53,820
is they're using react they are using

00:20:50,460 --> 00:20:56,970
node.js watch TV in front of it and

00:20:53,820 --> 00:20:59,310
drupal as a pack and CMS so the actually

00:20:56,970 --> 00:21:05,010
using their these core technologies to

00:20:59,310 --> 00:21:08,970
have this isomorphic thing time so not

00:21:05,010 --> 00:21:10,950
only lolla wat there's so many more so

00:21:08,970 --> 00:21:12,780
Facebook is anyway using it everybody

00:21:10,950 --> 00:21:14,730
knows phase will react is actually from

00:21:12,780 --> 00:21:18,630
Facebook's or Facebook will be using it

00:21:14,730 --> 00:21:21,800
definitely yahoo is using it asana asana

00:21:18,630 --> 00:21:25,650
is a very good site go and check it out

00:21:21,800 --> 00:21:28,470
it actually a task management tool is a

00:21:25,650 --> 00:21:30,210
browser-based task management tool try

00:21:28,470 --> 00:21:31,950
to check it out it's very very

00:21:30,210 --> 00:21:34,800
user-friendly into actually using

00:21:31,950 --> 00:21:37,290
isomorphic application behind it then we

00:21:34,800 --> 00:21:39,000
have rising stack Airbnb and not so

00:21:37,290 --> 00:21:43,470
everybody lot of things i have been

00:21:39,000 --> 00:21:46,830
using isomorphic air so actually how do

00:21:43,470 --> 00:21:50,910
i saw off how we can build an asthmatic

00:21:46,830 --> 00:21:52,710
application so if i categorize I some of

00:21:50,910 --> 00:21:55,380
the JavaScript so it can be a cat

00:21:52,710 --> 00:21:59,360
against to part one is involved agnostic

00:21:55,380 --> 00:22:02,040
and second White's Esper involved

00:21:59,360 --> 00:22:04,770
environment agnostic does not depend on

00:22:02,040 --> 00:22:07,800
any client specific properties or

00:22:04,770 --> 00:22:11,070
browsers properties so like we have a

00:22:07,800 --> 00:22:12,750
window we have processed hot environment

00:22:11,070 --> 00:22:15,780
because out cookies so does not depend

00:22:12,750 --> 00:22:20,580
on any of the browser or Times best

00:22:15,780 --> 00:22:22,470
properties aspirin comment exploits

00:22:20,580 --> 00:22:25,170
environment specific properties so one

00:22:22,470 --> 00:22:27,060
can expose a single API but under the

00:22:25,170 --> 00:22:30,630
hood there are a salute to involve is

00:22:27,060 --> 00:22:32,670
running then it's like it has been door

00:22:30,630 --> 00:22:37,610
on location got pathname request your

00:22:32,670 --> 00:22:40,970
path have section

00:22:37,610 --> 00:22:42,590
so one of my favorite is set cookies so

00:22:40,970 --> 00:22:44,510
if you have to set the cookies at the

00:22:42,590 --> 00:22:47,360
client site should we use document or

00:22:44,510 --> 00:22:51,170
cookie their booty name and the bending

00:22:47,360 --> 00:22:54,320
and on the server side we have responds

00:22:51,170 --> 00:22:58,610
or set header and then set header name

00:22:54,320 --> 00:23:00,500
cookie name and the cookie value and the

00:22:58,610 --> 00:23:03,770
green on the gray in the green you can

00:23:00,500 --> 00:23:07,190
see we are using react so it's you set

00:23:03,770 --> 00:23:08,840
cookie cookie name and cookie value so

00:23:07,190 --> 00:23:11,540
we don't have to write it two times like

00:23:08,840 --> 00:23:17,330
client and server you can use a set

00:23:11,540 --> 00:23:19,610
cookie for both redirects same thing so

00:23:17,330 --> 00:23:22,370
we have document dot locations or xref

00:23:19,610 --> 00:23:25,070
and the destination URL and if I were to

00:23:22,370 --> 00:23:27,440
do some more html5 things more fancy

00:23:25,070 --> 00:23:30,380
part so we can use window dot posted and

00:23:27,440 --> 00:23:32,960
the restriction thing in the server side

00:23:30,380 --> 00:23:35,559
will have response don't redirect and we

00:23:32,960 --> 00:23:39,770
are sending an HTTP header over here and

00:23:35,559 --> 00:23:41,360
if we see on the isometric part so these

00:23:39,770 --> 00:23:47,150
two are transitioned to in the

00:23:41,360 --> 00:23:50,030
destination you are so writing or

00:23:47,150 --> 00:23:51,740
cookies or like if you take a compass of

00:23:50,030 --> 00:23:55,660
cookies we have some other properties

00:23:51,740 --> 00:23:59,450
like domain name path and then expires

00:23:55,660 --> 00:24:02,150
so it is a complete strength but if you

00:23:59,450 --> 00:24:04,940
write on isomorphic we can write in this

00:24:02,150 --> 00:24:07,910
way we have given name then our domain

00:24:04,940 --> 00:24:09,890
expires so it's like an erica format we

00:24:07,910 --> 00:24:14,390
can see to swipe easy then that

00:24:09,890 --> 00:24:16,309
completes string which string so there

00:24:14,390 --> 00:24:19,549
are very J's library which are

00:24:16,309 --> 00:24:24,140
isomorphic and some of them we are

00:24:19,549 --> 00:24:27,160
already using so let's see which are

00:24:24,140 --> 00:24:30,610
those react

00:24:27,160 --> 00:24:35,160
ender meteor lozito so there are lots of

00:24:30,610 --> 00:24:38,950
things I am mostly interested on react

00:24:35,160 --> 00:24:40,990
render and meteor as per my

00:24:38,950 --> 00:24:44,260
understanding these are mostly used for

00:24:40,990 --> 00:24:46,210
isomorphic applications so reactor

00:24:44,260 --> 00:24:49,270
JavaScript library for building a user

00:24:46,210 --> 00:24:53,740
interface meter is a JavaScript app

00:24:49,270 --> 00:24:56,170
platform that builds apps and render is

00:24:53,740 --> 00:25:01,780
a small library that allows you to run a

00:24:56,170 --> 00:25:06,250
backbone else so we will be taking a

00:25:01,780 --> 00:25:09,010
react for our demo purpose so react is

00:25:06,250 --> 00:25:14,320
basically introduced by aya by Facebook

00:25:09,010 --> 00:25:17,800
and why we have taken react so it has

00:25:14,320 --> 00:25:19,390
some advantages so it's new leg a

00:25:17,800 --> 00:25:21,280
JavaScript library for building user

00:25:19,390 --> 00:25:25,660
interface it's just open source

00:25:21,280 --> 00:25:29,740
celebrity it's new and fashionable new

00:25:25,660 --> 00:25:32,560
because we have released from 2013 and

00:25:29,740 --> 00:25:36,030
the stable was pissed on twentieth of

00:25:32,560 --> 00:25:39,610
January 2016 I just quite a days before

00:25:36,030 --> 00:25:42,880
it uses a virtual Dom and sinks only the

00:25:39,610 --> 00:25:45,370
change park so if you have to change a

00:25:42,880 --> 00:25:48,280
specific part of a web page like it can

00:25:45,370 --> 00:25:50,290
be a blog it can be a reason it can be a

00:25:48,280 --> 00:25:57,250
header it can be a footer so we can use

00:25:50,290 --> 00:25:59,800
it jsx it's in JavaScript XML so it

00:25:57,250 --> 00:26:03,630
helps order / to write an estimate like

00:25:59,800 --> 00:26:08,200
syntax that compiles down to JavaScript

00:26:03,630 --> 00:26:12,130
the experts HTML into JavaScript so all

00:26:08,200 --> 00:26:15,430
the HTML parser care tax Dave span table

00:26:12,130 --> 00:26:16,870
or goes into a JavaScript it's

00:26:15,430 --> 00:26:18,250
lightweight as compared to other

00:26:16,870 --> 00:26:19,720
libraries entry

00:26:18,250 --> 00:26:24,630
so that is the reason we have Susan

00:26:19,720 --> 00:26:27,910
react so if you see a simple application

00:26:24,630 --> 00:26:30,550
if you have to build on VA so we have a

00:26:27,910 --> 00:26:33,550
simple HTML page on the header part we

00:26:30,550 --> 00:26:37,030
have script tag so it's used build / v

00:26:33,550 --> 00:26:39,640
FG s and then we have a jet transformer

00:26:37,030 --> 00:26:42,100
tortillas so in essence yes library so

00:26:39,640 --> 00:26:45,100
even if you use the vapor chase so it'd

00:26:42,100 --> 00:26:48,580
be like you can with your hands on the

00:26:45,100 --> 00:26:51,640
body part we have an empty div which has

00:26:48,580 --> 00:26:56,110
ID block slider and we have a script

00:26:51,640 --> 00:27:03,150
type text flash Joslyn and our react

00:26:56,110 --> 00:27:06,550
code will go over here let's see how so

00:27:03,150 --> 00:27:08,890
we have react or trender and then we are

00:27:06,550 --> 00:27:11,080
printing a hello world over there so how

00:27:08,890 --> 00:27:16,930
to get replaced it's replaced by a

00:27:11,080 --> 00:27:19,480
ticket element by ID so if we r do a

00:27:16,930 --> 00:27:21,430
most specifically using react so we can

00:27:19,480 --> 00:27:25,810
build a component components are

00:27:21,430 --> 00:27:28,090
basically a functions react so we have a

00:27:25,810 --> 00:27:31,120
component by component then we have a

00:27:28,090 --> 00:27:33,340
reactor pair class render function then

00:27:31,120 --> 00:27:37,080
hello world and it's again passed the

00:27:33,340 --> 00:27:37,080
value to the top bit

00:27:37,990 --> 00:27:45,280
so I saw off a JavaScript with Drupal

00:27:40,510 --> 00:27:48,730
how we can implement this one so I

00:27:45,280 --> 00:27:52,600
stretch it out on the Superdog I found

00:27:48,730 --> 00:27:55,559
react with two models react and we my

00:27:52,600 --> 00:27:58,660
react yes so basically we act is further

00:27:55,559 --> 00:28:01,540
this this wave is basically download on

00:27:58,660 --> 00:28:05,559
the libraries and it's pro language api

00:28:01,540 --> 00:28:07,660
and then my earlier JS it sent a test

00:28:05,559 --> 00:28:10,990
model where they are building a pie

00:28:07,660 --> 00:28:13,300
chart using react and then we have a

00:28:10,990 --> 00:28:15,910
video it's a sandbox project and not

00:28:13,300 --> 00:28:21,370
been upgraded from while for render we

00:28:15,910 --> 00:28:25,690
don't have anymore there are still risk

00:28:21,370 --> 00:28:27,610
either reactor still growing as the

00:28:25,690 --> 00:28:31,740
stable version on beer is on Jan Murray

00:28:27,610 --> 00:28:35,350
so is still growing debugging is tricky

00:28:31,740 --> 00:28:38,620
we don't have any tools such now to

00:28:35,350 --> 00:28:41,770
debug the reactive relations then avoid

00:28:38,620 --> 00:28:44,890
exposing sensitive data because what we

00:28:41,770 --> 00:28:47,740
are passed via critical up or which is

00:28:44,890 --> 00:28:49,720
getting shared by client and server so

00:28:47,740 --> 00:28:52,929
we should not like use it for sensitive

00:28:49,720 --> 00:28:54,220
sites instigator and then need to put a

00:28:52,929 --> 00:28:57,400
number of libraries for routing

00:28:54,220 --> 00:29:00,120
enforcing huntin national flows where it

00:28:57,400 --> 00:29:02,559
be as far as taking dependency in

00:29:00,120 --> 00:29:04,900
different ways to declare a component so

00:29:02,559 --> 00:29:06,010
the example which we have seen so there

00:29:04,900 --> 00:29:11,410
are different ways to reverse the

00:29:06,010 --> 00:29:14,050
economy so I think we have already

00:29:11,410 --> 00:29:16,650
talked much about guys Norfolk so let's

00:29:14,050 --> 00:29:16,650
see the code

00:29:20,080 --> 00:29:25,480
so this is the demo which we have built

00:29:22,590 --> 00:29:28,690
we are we have use our fight excite and

00:29:25,480 --> 00:29:31,330
we have changed the slider so only the

00:29:28,690 --> 00:29:35,019
block part you see we have just make it

00:29:31,330 --> 00:29:41,230
is isomorphic Sophie click on the

00:29:35,019 --> 00:29:43,630
navigation part so we have panels layout

00:29:41,230 --> 00:29:49,419
duration is there different options we

00:29:43,630 --> 00:29:51,580
can use just like quite fancy party so

00:29:49,419 --> 00:29:55,000
previously we are using this thing that

00:29:51,580 --> 00:29:57,190
from views we used to change this view

00:29:55,000 --> 00:29:58,750
slideshow and then save it out and then

00:29:57,190 --> 00:30:03,549
you're going to go to the homepage or

00:29:58,750 --> 00:30:07,110
here we have configured the block so

00:30:03,549 --> 00:30:07,110
let's see the code behind this one

00:30:13,320 --> 00:30:19,549
so I have created a simple model demo

00:30:16,950 --> 00:30:24,059
underscore react this is an info file

00:30:19,549 --> 00:30:27,630
which has stylesheet' simple CSS which

00:30:24,059 --> 00:30:31,019
we have written on for this demo and

00:30:27,630 --> 00:30:33,690
then we have it react dot mndot GS maybe

00:30:31,019 --> 00:30:36,269
we had to be implemented Korean and we

00:30:33,690 --> 00:30:42,509
have created a 100 GS demo disc or react

00:30:36,269 --> 00:30:45,049
gorgeous that's an customer yes son

00:30:42,509 --> 00:30:45,049
triple seven

00:30:47,280 --> 00:30:51,330
so we have created a simple block we

00:30:49,740 --> 00:30:54,000
have a block underscore hook under scope

00:30:51,330 --> 00:30:58,980
block under school info info it shows my

00:30:54,000 --> 00:31:02,460
slider then it is a block underscore

00:30:58,980 --> 00:31:09,030
view subject as my slider then it is

00:31:02,460 --> 00:31:10,740
called a function so we have Drupal get

00:31:09,030 --> 00:31:13,380
path model name and then it's called

00:31:10,740 --> 00:31:17,490
adjacent you re so this junior can be

00:31:13,380 --> 00:31:21,530
from any third party Jason currently we

00:31:17,490 --> 00:31:21,530
have created of you using data source

00:31:27,800 --> 00:31:32,450
so we have no Jason data format over

00:31:30,230 --> 00:31:35,630
here we have used a single field image

00:31:32,450 --> 00:31:42,670
feel over here and if I click on the

00:31:35,630 --> 00:31:46,190
demo part so we have adjacent over here

00:31:42,670 --> 00:31:55,700
so basically a complete URL for the

00:31:46,190 --> 00:31:57,860
image so we have created a array very

00:31:55,700 --> 00:32:00,200
pair over here and then we can we are

00:31:57,860 --> 00:32:04,250
all storing all the image URLs over in

00:32:00,200 --> 00:32:06,380
this variable then we have created in

00:32:04,250 --> 00:32:09,650
Drupal ideas where we are passing this

00:32:06,380 --> 00:32:12,560
variable to every fgs file and then we

00:32:09,650 --> 00:32:14,480
have a theme so maybe all logic goes on

00:32:12,560 --> 00:32:19,220
the slider I some of your template let's

00:32:14,480 --> 00:32:21,770
see oh we don't have anything on this

00:32:19,220 --> 00:32:24,350
one we have divided slider content this

00:32:21,770 --> 00:32:32,630
text will get replaced by the act so

00:32:24,350 --> 00:32:35,440
let's see on the demo part let's see the

00:32:32,630 --> 00:32:35,440
view source of this one

00:32:57,180 --> 00:33:01,890
so as you can see we have a team ID over

00:32:59,430 --> 00:33:03,780
here so this text we get this back yet

00:33:01,890 --> 00:33:10,470
even on the source we don't have the

00:33:03,780 --> 00:33:15,450
code where it's come from so we have dem

00:33:10,470 --> 00:33:17,580
underscore react dot GS so this code is

00:33:15,450 --> 00:33:20,460
already available on Drupal and we in

00:33:17,580 --> 00:33:22,440
this second it's an open source so we

00:33:20,460 --> 00:33:28,490
have downloaded from there so what we

00:33:22,440 --> 00:33:31,800
have done over here we have passed the

00:33:28,490 --> 00:33:40,010
ID for the day which going to replace

00:33:31,800 --> 00:33:44,810
and at the bottom we have passed the URL

00:33:40,010 --> 00:33:44,810
the image yours there is an air

00:33:53,250 --> 00:34:04,250
so basically it includes a class

00:33:57,770 --> 00:34:04,250
initialization in the render

00:34:04,620 --> 00:34:08,990
and this gives the effect of her slider

00:34:19,230 --> 00:34:42,629
that's all for the demo for I smile yes

00:34:26,700 --> 00:34:44,700
so so basically we had one model name of

00:34:42,629 --> 00:34:48,899
the model is react there's one more

00:34:44,700 --> 00:34:51,690
model why we addressed basically we can

00:34:48,899 --> 00:34:54,629
use the create water what it does it

00:34:51,690 --> 00:34:58,710
just download all the libraries for the

00:34:54,629 --> 00:35:00,270
react and my radius is an Ahmadi which

00:34:58,710 --> 00:35:03,390
has been built for just for the demo

00:35:00,270 --> 00:35:05,760
purpose it has the feature it has see

00:35:03,390 --> 00:35:07,859
tools and get abused so basically it's

00:35:05,760 --> 00:35:10,560
it creates a content type at the back

00:35:07,859 --> 00:35:13,440
end and you get like exposed on the data

00:35:10,560 --> 00:35:15,330
by Jason over there and you can just

00:35:13,440 --> 00:35:18,119
build a pie chart a user python library

00:35:15,330 --> 00:35:19,530
they pass all their data to that pie

00:35:18,119 --> 00:35:27,290
chart and they leave the graph over

00:35:19,530 --> 00:35:33,290
there indeed and it a lot cells not yet

00:35:27,290 --> 00:35:33,290
any other yes so the usual

00:35:37,190 --> 00:35:41,539
so doesn't definitely

00:35:42,850 --> 00:35:51,760
it won't pass it won't get any data I

00:35:45,100 --> 00:35:54,910
want to show the blog's you yep so will

00:35:51,760 --> 00:36:02,590
it be a fan there is no data actual

00:35:54,910 --> 00:36:05,310
markup of the box it will so like we

00:36:02,590 --> 00:36:08,700
have a reactor jsw foundation so that

00:36:05,310 --> 00:36:11,400
Google is smart enough to like call that

00:36:08,700 --> 00:36:14,620
JavaScript so infinite face from there

00:36:11,400 --> 00:36:16,950
so what happens is in case of react as

00:36:14,620 --> 00:36:19,450
what what you have studied the only

00:36:16,950 --> 00:36:21,490
search engine which is actually able to

00:36:19,450 --> 00:36:23,680
work for isomorphic javascript is google

00:36:21,490 --> 00:36:25,540
right now and they say that they are

00:36:23,680 --> 00:36:28,150
able to search inside it but you are

00:36:25,540 --> 00:36:30,580
right that as per the view source code

00:36:28,150 --> 00:36:33,130
we are just replacing that particular

00:36:30,580 --> 00:36:36,090
thing dynamically so the crawler won't

00:36:33,130 --> 00:36:36,090
able to get that

00:36:39,640 --> 00:36:46,030
look from that

00:36:46,700 --> 00:36:53,250
the title right so instead of showing

00:36:51,619 --> 00:37:00,580
the title description

00:36:53,250 --> 00:37:03,340
is that correct correct yes so I have

00:37:00,580 --> 00:37:06,640
worked with angular JS and angular is

00:37:03,340 --> 00:37:08,800
more of a framework then a library and

00:37:06,640 --> 00:37:11,200
they both have a different things

00:37:08,800 --> 00:37:13,090
altogether but angler is more in that

00:37:11,200 --> 00:37:15,520
perspective but yet SEO is not there

00:37:13,090 --> 00:37:17,380
they are also so I don't think currently

00:37:15,520 --> 00:37:19,060
we have a solution on it but you can

00:37:17,380 --> 00:37:20,980
search on it currently I don't think in

00:37:19,060 --> 00:37:22,540
angular we have a solution for it my own

00:37:20,980 --> 00:37:25,720
site is in angular I am still struggling

00:37:22,540 --> 00:37:27,609
on it yeah but in react what they said

00:37:25,720 --> 00:37:30,130
is that's what the Google goes they do

00:37:27,609 --> 00:37:34,450
that I don't know how but we need to

00:37:30,130 --> 00:37:36,520
search on it yeah no they're not only

00:37:34,450 --> 00:37:39,820
doing that they are also using node.js

00:37:36,520 --> 00:37:41,740
in front of it so it's here we don't

00:37:39,820 --> 00:37:45,430
have any node.js thing we only have

00:37:41,740 --> 00:37:47,260
Drupal and we only have reality there

00:37:45,430 --> 00:37:49,990
they have four things as we have seen

00:37:47,260 --> 00:37:52,660
the slide so they have no JS coach TB

00:37:49,990 --> 00:37:53,859
Drupal so there are four things involved

00:37:52,660 --> 00:37:56,350
and that's why they were able to get

00:37:53,859 --> 00:37:58,359
that effect so lot of push thing is

00:37:56,350 --> 00:38:00,220
happening from the node.js which is not

00:37:58,359 --> 00:38:02,590
possible in case of normal Drupal

00:38:00,220 --> 00:38:05,560
application it's more of get and then

00:38:02,590 --> 00:38:07,780
post so we are just creating an

00:38:05,560 --> 00:38:09,850
application where it's more of only

00:38:07,780 --> 00:38:12,340
using Drupal and how you can do react

00:38:09,850 --> 00:38:17,369
yes OSU is one of the things which we

00:38:12,340 --> 00:38:17,369
need to take off any other

00:38:22,240 --> 00:38:34,240
ok so thanks a lot thank you for coming

00:38:26,619 --> 00:38:38,230
I hope you enjoyed it and please give us

00:38:34,240 --> 00:38:41,280
the feedback which is there here thank

00:38:38,230 --> 00:38:41,280

YouTube URL: https://www.youtube.com/watch?v=T-yVKZPDBLI


