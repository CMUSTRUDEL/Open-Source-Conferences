Title: DrupalCon Prague 2013: FRONTEND OPS
Publication date: 2013-09-26
Playlist: DrupalCon Prague - September 2013
Description: 
	We all hear about websites needing to be fast and how frontend is most often the real bottleneck, but how can you keep things humming and get all your work done at the same time? The real solution is finding problems as they occur instead of waiting until launch day to start debugging.

The real solution is frontend ops.

Frontend operations skills will allow you to set up automated testing to catch bugs and regressions when they happen, before you merge to trunk. We'll look at tools like PhantomJS which provide almost endless testing abilities: CSS regressions, log network waterfalls, YSlow scores, and more â€” all on a per-commit basis :)

Session will be technical and assumes you are both familiar with node.js and some devops stuff such as version control, separate developer environments, and (in some cases) the ability to automate tasks using a tool like Jenkins.

Slides: http://rupl.github.io/frontend-ops/
Examples: https://github.com/rupl/frontend-ops/tree/master/examples
Captions: 
	00:00:00,000 --> 00:00:04,159
alright cool it's about quarter till now

00:00:04,730 --> 00:00:10,620
thanks for coming this is a front end

00:00:07,649 --> 00:00:12,480
ops session so we're going to be talking

00:00:10,620 --> 00:00:14,580
about a lot of cool stuff that you can

00:00:12,480 --> 00:00:16,710
do to automate your front-end workflow

00:00:14,580 --> 00:00:19,560
and also automate other pieces of

00:00:16,710 --> 00:00:21,630
front-end development and really this is

00:00:19,560 --> 00:00:23,880
what i like to call how to automate the

00:00:21,630 --> 00:00:26,250
process of breaking things because

00:00:23,880 --> 00:00:27,840
that's mostly what i did in order to get

00:00:26,250 --> 00:00:34,489
to this point to be able to share all

00:00:27,840 --> 00:00:37,500
this with you so my name is chris rupal

00:00:34,489 --> 00:00:40,170
one consonant short of our favorite

00:00:37,500 --> 00:00:41,969
content management framework i'm a

00:00:40,170 --> 00:00:45,989
front-end developer at four kitchens in

00:00:41,969 --> 00:00:49,079
austin texas you can hit me on all these

00:00:45,989 --> 00:00:51,930
things are you PL is a my username

00:00:49,079 --> 00:00:53,610
everywhere that i can make it that and

00:00:51,930 --> 00:00:56,219
then like I said we're good for kitchens

00:00:53,610 --> 00:01:01,440
where development shop in Austin maybe

00:00:56,219 --> 00:01:03,449
you've heard of us if not we have done a

00:01:01,440 --> 00:01:06,450
lot of stuff around server performance

00:01:03,449 --> 00:01:08,900
in the past namely with a press flow

00:01:06,450 --> 00:01:11,549
making triple six Bible for like

00:01:08,900 --> 00:01:15,720
integrating with the larger web stack

00:01:11,549 --> 00:01:18,390
like my sequel replication varnish and

00:01:15,720 --> 00:01:19,979
that kind of stuff I have nothing to do

00:01:18,390 --> 00:01:23,210
with that so don't ask me any questions

00:01:19,979 --> 00:01:26,189
about any of that because I don't know

00:01:23,210 --> 00:01:28,619
also we're hiring so if you feel like

00:01:26,189 --> 00:01:30,810
working at a pretty awesome company with

00:01:28,619 --> 00:01:33,750
a lot of cool people hit the hit the

00:01:30,810 --> 00:01:36,630
link in the slides here these slides are

00:01:33,750 --> 00:01:37,979
already posted on my session page so you

00:01:36,630 --> 00:01:40,829
can go there and check it out via the

00:01:37,979 --> 00:01:43,140
schedule if you want and follow along if

00:01:40,829 --> 00:01:44,970
not that's cool too there's lots of

00:01:43,140 --> 00:01:49,560
codes because code examples and I'll get

00:01:44,970 --> 00:01:51,630
to that in a second so I've done a

00:01:49,560 --> 00:01:53,520
couple contributions to Drupal here I

00:01:51,630 --> 00:01:56,070
don't have many of them listed just

00:01:53,520 --> 00:01:58,170
because I had to pick a few the big one

00:01:56,070 --> 00:02:01,229
that I really focus on is the modernizer

00:01:58,170 --> 00:02:03,210
drupal module that in turn led me to be

00:02:01,229 --> 00:02:05,399
able to make some small contributions to

00:02:03,210 --> 00:02:06,930
modernize her itself I've got a pretty

00:02:05,399 --> 00:02:09,360
cool jekyll schedule thing that's out

00:02:06,930 --> 00:02:11,489
there like okay sorry Jekyll I should

00:02:09,360 --> 00:02:13,380
have mentioned that and then I've done

00:02:11,489 --> 00:02:14,730
some work on Drupal 8

00:02:13,380 --> 00:02:17,220
way back in the day when it was more

00:02:14,730 --> 00:02:19,500
like drupal 7 than anything else also

00:02:17,220 --> 00:02:23,430
making it little mobile friendly and oh

00:02:19,500 --> 00:02:24,990
well I've taken a hiatus I am interested

00:02:23,430 --> 00:02:25,980
in all the Drupal 8 javascript stuff if

00:02:24,990 --> 00:02:28,710
you were just in here for nods

00:02:25,980 --> 00:02:32,990
presentation before there's some cool

00:02:28,710 --> 00:02:36,600
things that are happening so that's me

00:02:32,990 --> 00:02:38,610
so this is in the DevOps track and it's

00:02:36,600 --> 00:02:40,740
it's fairly simple compared to a lot of

00:02:38,610 --> 00:02:43,110
stuff that's going on because front end

00:02:40,740 --> 00:02:44,690
is uh although we're like starting to

00:02:43,110 --> 00:02:49,380
gain these tools in the front end world

00:02:44,690 --> 00:02:51,270
no this is like new so you know if you

00:02:49,380 --> 00:02:53,550
are already familiar with like a lot of

00:02:51,270 --> 00:02:55,200
DevOps and like you're the person that

00:02:53,550 --> 00:02:56,820
handles all that in your organization

00:02:55,200 --> 00:02:58,440
then I'm probably not gonna be like

00:02:56,820 --> 00:02:59,850
blowing your mind with the fact that you

00:02:58,440 --> 00:03:01,830
can automate some of these things but

00:02:59,850 --> 00:03:03,540
hopefully I'll show you be able to show

00:03:01,830 --> 00:03:05,220
you a few tools that you can leverage

00:03:03,540 --> 00:03:07,830
using a system that you've already got

00:03:05,220 --> 00:03:10,020
set up having said that I'm not going to

00:03:07,830 --> 00:03:11,490
cover the specifics of like setting up

00:03:10,020 --> 00:03:13,320
Jenkins or anything like that because

00:03:11,490 --> 00:03:14,940
that's kind of like out of the scope of

00:03:13,320 --> 00:03:16,620
this and this is there's other material

00:03:14,940 --> 00:03:19,380
where you can go and learn that type of

00:03:16,620 --> 00:03:21,140
thing so we're going to talk about other

00:03:19,380 --> 00:03:23,370
things that we can integrate with

00:03:21,140 --> 00:03:27,480
continuous integration and those types

00:03:23,370 --> 00:03:29,940
of systems but like I said front end is

00:03:27,480 --> 00:03:31,740
a maturing as a trade and it really has

00:03:29,940 --> 00:03:34,590
matured a lot in the last few years and

00:03:31,740 --> 00:03:36,540
so we're starting to feel a lot of pain

00:03:34,590 --> 00:03:40,290
points that people already felt in other

00:03:36,540 --> 00:03:42,570
communities long ago so like you know

00:03:40,290 --> 00:03:44,520
when you break a PHP script it just like

00:03:42,570 --> 00:03:46,800
gives you nothing or it gives you an ex

00:03:44,520 --> 00:03:48,570
debug stack or something like that and

00:03:46,800 --> 00:03:51,330
so you either get your HTML to the page

00:03:48,570 --> 00:03:53,760
or you don't and then yes there are

00:03:51,330 --> 00:03:55,590
other nuances involved in like errors in

00:03:53,760 --> 00:03:57,120
PHP and you can have lots of weird

00:03:55,590 --> 00:03:59,430
things but you know if you really break

00:03:57,120 --> 00:04:02,340
something you're either breaking it or

00:03:59,430 --> 00:04:04,500
it's not broken and then on the front

00:04:02,340 --> 00:04:06,570
end because of the way that browsers

00:04:04,500 --> 00:04:07,770
evolved in the big because of the way

00:04:06,570 --> 00:04:09,660
that they have to support all these

00:04:07,770 --> 00:04:11,610
different scenarios there's lots of

00:04:09,660 --> 00:04:14,070
weird subtle things that can happen to

00:04:11,610 --> 00:04:17,040
your browser into a mobile phone into

00:04:14,070 --> 00:04:18,690
other devices like that that are very

00:04:17,040 --> 00:04:20,100
very subtle and unnoticeable until

00:04:18,690 --> 00:04:24,419
they've become like this bigger problem

00:04:20,100 --> 00:04:27,330
and so a lot of this stuff are things

00:04:24,419 --> 00:04:28,979
that we just you know rely on someone to

00:04:27,330 --> 00:04:31,650
like fixing the not break but we never

00:04:28,979 --> 00:04:33,419
had any way of making sure that someone

00:04:31,650 --> 00:04:36,150
isn't doing that and error checking all

00:04:33,419 --> 00:04:38,069
these things like CSS you know minor

00:04:36,150 --> 00:04:40,469
padding changes our margin changes

00:04:38,069 --> 00:04:42,120
changes to jas files that break things

00:04:40,469 --> 00:04:44,689
like you know just adding or removing a

00:04:42,120 --> 00:04:48,379
semicolon can delete an entire

00:04:44,689 --> 00:04:50,550
aggregates worth of usefulness

00:04:48,379 --> 00:04:52,500
aggregates changing one not necessary

00:04:50,550 --> 00:04:55,830
and that kind of thing introducing like

00:04:52,500 --> 00:04:58,819
performance regressions when when you

00:04:55,830 --> 00:05:01,889
don't really need to be doing that so

00:04:58,819 --> 00:05:03,690
and then also like I said there's tools

00:05:01,889 --> 00:05:05,819
that are evolving too and we need to use

00:05:03,690 --> 00:05:07,740
these tools because although it's not

00:05:05,819 --> 00:05:10,710
all about the tools tools can really

00:05:07,740 --> 00:05:14,069
help you to provide a better experience

00:05:10,710 --> 00:05:16,560
to users in a way because if they take

00:05:14,069 --> 00:05:18,960
out a lot of automatic they provide

00:05:16,560 --> 00:05:21,680
automation and take a lot of tedium away

00:05:18,960 --> 00:05:24,810
from your work then you're able to use

00:05:21,680 --> 00:05:26,400
proper testing protocols and that kind

00:05:24,810 --> 00:05:28,409
of stuff a little more thoroughly

00:05:26,400 --> 00:05:29,789
because you've got a tool doing this for

00:05:28,409 --> 00:05:32,159
you instead of having to like run this

00:05:29,789 --> 00:05:34,620
automatically so like I said there's

00:05:32,159 --> 00:05:38,219
workflow tools in PHP there's more than

00:05:34,620 --> 00:05:40,979
I could possibly name and so we need the

00:05:38,219 --> 00:05:43,889
same community of tools built around the

00:05:40,979 --> 00:05:47,129
front end trade because that's how it

00:05:43,889 --> 00:05:49,520
can be taken more it can be taken to the

00:05:47,129 --> 00:05:52,050
next level and be more effective so

00:05:49,520 --> 00:05:54,199
there's lots of things now that you can

00:05:52,050 --> 00:05:57,300
do in front end that are just a few

00:05:54,199 --> 00:05:59,099
commands away on your command line that

00:05:57,300 --> 00:06:01,199
we're just not even existing two or

00:05:59,099 --> 00:06:03,839
three years ago things like dependency

00:06:01,199 --> 00:06:06,360
management automated testing and review

00:06:03,839 --> 00:06:07,620
tools and like even holding people

00:06:06,360 --> 00:06:11,819
accountable for the changes that they

00:06:07,620 --> 00:06:14,580
make to the codebase so um this is not

00:06:11,819 --> 00:06:16,080
my term and this is this is a term

00:06:14,580 --> 00:06:17,460
that's been around it's kind of been on

00:06:16,080 --> 00:06:19,620
the tip of everyone's tongue and it's

00:06:17,460 --> 00:06:21,360
still like a spot that hasn't been

00:06:19,620 --> 00:06:27,810
explicitly filled in most organizations

00:06:21,360 --> 00:06:30,150
or really mo almost all there's a guy

00:06:27,810 --> 00:06:33,000
Alex sect Sexton that wrote an article

00:06:30,150 --> 00:06:35,129
for smashing magazine describing the

00:06:33,000 --> 00:06:37,770
ideal front end ops engineer and so he

00:06:35,129 --> 00:06:39,810
goes through the whole spiel of what he

00:06:37,770 --> 00:06:41,160
considers to be fronting operations and

00:06:39,810 --> 00:06:43,020
there's a lot there

00:06:41,160 --> 00:06:45,600
if you go read this article it is linked

00:06:43,020 --> 00:06:48,720
in these slides it's kind of buried in

00:06:45,600 --> 00:06:51,630
the in the green there but you can go

00:06:48,720 --> 00:06:54,240
read it and he talks about everything

00:06:51,630 --> 00:06:56,490
from you know deployment and asset

00:06:54,240 --> 00:06:57,930
management to making sure that rendering

00:06:56,490 --> 00:06:59,370
times are staying the same and your

00:06:57,930 --> 00:07:02,520
browser stack and all that kind of stuff

00:06:59,370 --> 00:07:04,920
so there's a lot lot lot there however

00:07:02,520 --> 00:07:06,630
we are at a Drupal conference and most

00:07:04,920 --> 00:07:08,490
people for the most part are just

00:07:06,630 --> 00:07:11,370
building websites instead of building

00:07:08,490 --> 00:07:14,190
like a product or a huge like complex

00:07:11,370 --> 00:07:15,990
application and so all the examples i'm

00:07:14,190 --> 00:07:18,450
going to show you today are kind of like

00:07:15,990 --> 00:07:20,040
starter examples that should get you

00:07:18,450 --> 00:07:22,290
thinking about this kind of stuff and

00:07:20,040 --> 00:07:25,860
you can apply it and just build on this

00:07:22,290 --> 00:07:28,260
and keep it going because these are

00:07:25,860 --> 00:07:32,130
useful for basically all websites that

00:07:28,260 --> 00:07:33,960
are being built and it can be taken to

00:07:32,130 --> 00:07:36,810
so many degrees past what i'm going to

00:07:33,960 --> 00:07:38,820
show you that it blows my mind when i

00:07:36,810 --> 00:07:44,520
see what's going on in the front end

00:07:38,820 --> 00:07:46,890
world so the main takeaway today is that

00:07:44,520 --> 00:07:49,500
we want to change how we work we don't

00:07:46,890 --> 00:07:51,930
want to change like and and be married

00:07:49,500 --> 00:07:53,730
to a particular tool this stuff you know

00:07:51,930 --> 00:07:58,530
changes really fast but what we do want

00:07:53,730 --> 00:08:00,780
to do is change how we're working was

00:07:58,530 --> 00:08:03,960
there a question back there or okay

00:08:00,780 --> 00:08:05,940
sorry yeah i'm i'm a fan of just like

00:08:03,960 --> 00:08:07,500
stopping if anyone wants to stop me and

00:08:05,940 --> 00:08:09,030
ask a question at the end of a section

00:08:07,500 --> 00:08:12,540
i'll try and put some space in there so

00:08:09,030 --> 00:08:14,220
we don't have to wait till the end so

00:08:12,540 --> 00:08:17,460
feel free if you want to just come up to

00:08:14,220 --> 00:08:20,130
one of those mics so in order to deliver

00:08:17,460 --> 00:08:22,020
the best fastest site possible we do

00:08:20,130 --> 00:08:25,430
have to you know think about our

00:08:22,020 --> 00:08:28,530
development process and updated a little

00:08:25,430 --> 00:08:31,650
my my huge perf crush right now is a

00:08:28,530 --> 00:08:34,140
ilya grigoriev google he's on the make

00:08:31,650 --> 00:08:37,020
the web fast team at the part of the

00:08:34,140 --> 00:08:38,130
chrome team basically and all he does

00:08:37,020 --> 00:08:39,930
his performance and he's basically

00:08:38,130 --> 00:08:41,490
always saying you know this isn't like a

00:08:39,930 --> 00:08:42,810
checklist that you look at at the end of

00:08:41,490 --> 00:08:46,410
your project this is something that has

00:08:42,810 --> 00:08:48,030
to be continuous as you develop this you

00:08:46,410 --> 00:08:51,240
cannot put it at the end and expect to

00:08:48,030 --> 00:08:52,620
be successful and and then fear which

00:08:51,240 --> 00:08:55,350
i'm not even going to try and pronounce

00:08:52,620 --> 00:08:57,540
his real name has a great quote here

00:08:55,350 --> 00:08:59,040
that says when you're trying to fix a

00:08:57,540 --> 00:09:01,380
website or make it better don't take

00:08:59,040 --> 00:09:02,880
measures without measuring them that's a

00:09:01,380 --> 00:09:06,000
bit of an english word play but still

00:09:02,880 --> 00:09:07,650
don't do something without testing what

00:09:06,000 --> 00:09:09,330
you're doing don't like radically train

00:09:07,650 --> 00:09:12,300
change a strategy that you're

00:09:09,330 --> 00:09:13,710
approaching to you know like we've got a

00:09:12,300 --> 00:09:15,780
lot of things figured out in Drupal like

00:09:13,710 --> 00:09:17,220
aggregation for example but you know if

00:09:15,780 --> 00:09:18,360
you're going to change something or like

00:09:17,220 --> 00:09:20,280
change the way you're loading your

00:09:18,360 --> 00:09:21,900
assets make sure you've got good data

00:09:20,280 --> 00:09:24,060
that says that this is useful for your

00:09:21,900 --> 00:09:29,900
target audience so a lot of these things

00:09:24,060 --> 00:09:32,910
are going to help you do that yes right

00:09:29,900 --> 00:09:36,089
we all agree because this question

00:09:32,910 --> 00:09:38,339
always comes up very often yes all this

00:09:36,089 --> 00:09:41,130
stuff is on github already the links are

00:09:38,339 --> 00:09:42,630
on the session page check it out you can

00:09:41,130 --> 00:09:44,040
take the code from the slides it's all

00:09:42,630 --> 00:09:48,360
freely available use it for commercial

00:09:44,040 --> 00:09:50,220
purposes or whatever I don't care and

00:09:48,360 --> 00:09:51,210
also actually this is a slight lie

00:09:50,220 --> 00:09:53,580
because I was like I don't want to get

00:09:51,210 --> 00:09:57,390
caught by the Wi-Fi gremlins but I

00:09:53,580 --> 00:09:58,890
basically about 15 minutes ago took a

00:09:57,390 --> 00:10:01,680
fresh clone of these slides and

00:09:58,890 --> 00:10:02,760
basically installed all the NPM modules

00:10:01,680 --> 00:10:05,730
that i'm going to show you so i'm not

00:10:02,760 --> 00:10:07,770
going to run the npm installs but the

00:10:05,730 --> 00:10:11,850
slide should work out of the box and

00:10:07,770 --> 00:10:14,130
also one of the ruby examples you might

00:10:11,850 --> 00:10:17,339
need an RV m version or something like

00:10:14,130 --> 00:10:18,870
that but still they should be pretty

00:10:17,339 --> 00:10:25,890
close to working out of the box so that

00:10:18,870 --> 00:10:29,700
you can inspect them so cool automating

00:10:25,890 --> 00:10:33,630
workflow this is the first thing that

00:10:29,700 --> 00:10:37,170
we'll talk about here I'm just going to

00:10:33,630 --> 00:10:39,510
go over a couple tools that help us stop

00:10:37,170 --> 00:10:41,760
doing manual labor and like I said when

00:10:39,510 --> 00:10:46,020
you stop doing manual labor you can more

00:10:41,760 --> 00:10:48,690
frequently focus on delivering your work

00:10:46,020 --> 00:10:51,180
and letting the testing tools just kind

00:10:48,690 --> 00:10:52,890
of do that for themselves so automation

00:10:51,180 --> 00:10:57,540
helps us stay consistent and it helps us

00:10:52,890 --> 00:10:58,709
deliver a quality product grunt is

00:10:57,540 --> 00:11:01,320
everyone heard a grunt what's going to

00:10:58,709 --> 00:11:04,350
show of hands okay yeah that's decent

00:11:01,320 --> 00:11:06,750
cool so grunt is bills itself as a

00:11:04,350 --> 00:11:07,779
JavaScript task runner and what that

00:11:06,750 --> 00:11:09,220
means is that

00:11:07,779 --> 00:11:10,720
a bunch of grunt work for you it does

00:11:09,220 --> 00:11:14,139
all these tedious things that you don't

00:11:10,720 --> 00:11:16,420
want to do and it does this in an

00:11:14,139 --> 00:11:18,819
automated fashion so you can read more

00:11:16,420 --> 00:11:20,529
about grunt j/s but basically it's a set

00:11:18,819 --> 00:11:22,990
of tools that you run on your computer

00:11:20,529 --> 00:11:24,939
on your dev environment and it allows

00:11:22,990 --> 00:11:26,800
you it basically does things for you

00:11:24,939 --> 00:11:30,670
that you wouldn't want to do on your own

00:11:26,800 --> 00:11:32,110
and then everyone's happy because that

00:11:30,670 --> 00:11:35,470
both the things are getting done and

00:11:32,110 --> 00:11:37,870
we're not doing them hooray the basics

00:11:35,470 --> 00:11:40,269
of grunt a grind is basically it's got a

00:11:37,870 --> 00:11:42,339
core and then it's got contribs just

00:11:40,269 --> 00:11:44,680
like drupal so what you're going to do

00:11:42,339 --> 00:11:49,029
is it's all based on NPM which is a

00:11:44,680 --> 00:11:50,559
nodes package manager and p.m. and so if

00:11:49,029 --> 00:11:52,329
you're not familiar with nodejs you

00:11:50,559 --> 00:11:53,319
don't really have to be to run all this

00:11:52,329 --> 00:11:55,240
stuff you're going to see the code

00:11:53,319 --> 00:11:56,829
examples and see how little we're

00:11:55,240 --> 00:12:00,490
actually interacting with node once you

00:11:56,829 --> 00:12:02,589
install it and basically we're just

00:12:00,490 --> 00:12:05,889
going to run a couple commands and then

00:12:02,589 --> 00:12:07,089
you're done they do have excellent intro

00:12:05,889 --> 00:12:09,100
instructions if you want to be familiar

00:12:07,089 --> 00:12:12,279
with grunt and the slides contain the

00:12:09,100 --> 00:12:14,079
examples another tool I'm just going to

00:12:12,279 --> 00:12:15,220
go through a summary of all the tools

00:12:14,079 --> 00:12:19,540
and we're going to move on and look at

00:12:15,220 --> 00:12:21,160
them phantom jas Phantom is a headless

00:12:19,540 --> 00:12:23,230
instance of WebKit and what that means

00:12:21,160 --> 00:12:25,350
is that it's exactly like the web

00:12:23,230 --> 00:12:28,120
browser that you're using I guess Safari

00:12:25,350 --> 00:12:31,809
not chrome anymore but they're close

00:12:28,120 --> 00:12:33,430
enough that it's still useful and so it

00:12:31,809 --> 00:12:35,110
does anything a webkit browser can do

00:12:33,430 --> 00:12:36,970
except there's no monitor it's all just

00:12:35,110 --> 00:12:40,449
happening inside the computer it can

00:12:36,970 --> 00:12:41,800
however produce visual like screenshots

00:12:40,449 --> 00:12:44,230
and that kind of stuff which I'm going

00:12:41,800 --> 00:12:45,550
to specifically demo in a little bit so

00:12:44,230 --> 00:12:47,769
this thing is really cool and it gives

00:12:45,550 --> 00:12:49,990
you a console and you can like run

00:12:47,769 --> 00:12:52,600
jquery and evaluate dom nodes and do all

00:12:49,990 --> 00:12:54,339
sorts of stuff and fandom is its own

00:12:52,600 --> 00:12:57,459
tool which i'm going to show you

00:12:54,339 --> 00:13:00,459
extremely specific applications of you

00:12:57,459 --> 00:13:02,050
can do tons of stuff and phantom tons

00:13:00,459 --> 00:13:06,550
tons more than i'm going to show today

00:13:02,050 --> 00:13:09,939
it's a super awesome tool so yep like I

00:13:06,550 --> 00:13:12,759
said it's indispensable and you if you

00:13:09,939 --> 00:13:14,170
have a task like taking a screenshot at

00:13:12,759 --> 00:13:15,639
like several different break points or

00:13:14,170 --> 00:13:17,350
something like that you find yourself

00:13:15,639 --> 00:13:19,329
needing to do that to get like sign off

00:13:17,350 --> 00:13:21,279
on a bunch of work then like phantom is

00:13:19,329 --> 00:13:24,370
the tool for you so

00:13:21,279 --> 00:13:28,329
check that one out Doc's API blah blah

00:13:24,370 --> 00:13:31,110
blah slimer I don't really know I guess

00:13:28,329 --> 00:13:34,029
Slimer like Ghostbusters or something is

00:13:31,110 --> 00:13:35,649
the not yet headless instance of gecko

00:13:34,029 --> 00:13:40,809
which is the engine that runs Firefox

00:13:35,649 --> 00:13:42,399
and i hope i'm not positive but that

00:13:40,809 --> 00:13:46,420
it's going to apply to firefox OS as

00:13:42,399 --> 00:13:48,009
well which would be huge slammer Jas is

00:13:46,420 --> 00:13:49,420
newer than Phantom so it doesn't have

00:13:48,009 --> 00:13:52,389
all the bells and whistles but they aim

00:13:49,420 --> 00:13:54,459
to be like API compatible so that you

00:13:52,389 --> 00:13:56,439
can take like one script and say phantom

00:13:54,459 --> 00:13:58,480
do this slimer do this and you can do

00:13:56,439 --> 00:14:01,660
them both at the same time which would

00:13:58,480 --> 00:14:04,449
be rad so there's docks here and like I

00:14:01,660 --> 00:14:08,589
said it actually requires like Firefox

00:14:04,449 --> 00:14:11,319
like do stuff it's not headless yet so

00:14:08,589 --> 00:14:15,430
on to some actual automation here right

00:14:11,319 --> 00:14:18,209
who here authors CSS and jas right yeah

00:14:15,430 --> 00:14:21,490
only three of you okay interesting

00:14:18,209 --> 00:14:23,529
that's surprising so do we have like an

00:14:21,490 --> 00:14:27,000
entire group of IT here or what's going

00:14:23,529 --> 00:14:29,259
on I guess just lazy maybe I don't know

00:14:27,000 --> 00:14:31,269
so the meat and potatoes of front-end is

00:14:29,259 --> 00:14:33,639
CSS and Jas I hope a few front-end

00:14:31,269 --> 00:14:36,759
people are here to take it to kind of

00:14:33,639 --> 00:14:38,439
start imagining this stuff if you're in

00:14:36,759 --> 00:14:40,420
the last session about Drupal 8

00:14:38,439 --> 00:14:43,029
JavaScript you may have heard Theodore

00:14:40,420 --> 00:14:44,680
mentioned j/s hint and so what they did

00:14:43,029 --> 00:14:45,970
was they went through the code base and

00:14:44,680 --> 00:14:49,240
they made sure that all the JavaScript

00:14:45,970 --> 00:14:52,620
in Drupal 8 could adhere to strict j/s

00:14:49,240 --> 00:14:55,029
hint uh linting is what it's called and

00:14:52,620 --> 00:15:02,439
so basically if you look at j/s hint

00:14:55,029 --> 00:15:06,370
let's see if I can yeah yeah there we go

00:15:02,439 --> 00:15:07,329
so Jason tis a codes quality tool and

00:15:06,370 --> 00:15:09,220
what you do is you put a bunch of

00:15:07,329 --> 00:15:11,079
JavaScript in here and you just type and

00:15:09,220 --> 00:15:12,699
then you know it tells you what's wrong

00:15:11,079 --> 00:15:15,459
with your JavaScript we're not going to

00:15:12,699 --> 00:15:18,220
do that now but it can basically help

00:15:15,459 --> 00:15:19,990
you debug and j s and help you catch

00:15:18,220 --> 00:15:22,029
little mistakes that you might make so

00:15:19,990 --> 00:15:23,649
you know sometimes you can like forget a

00:15:22,029 --> 00:15:25,240
semicolon and then it affects something

00:15:23,649 --> 00:15:26,649
that's like 30 lines down the document

00:15:25,240 --> 00:15:28,389
when the parser finally catches up with

00:15:26,649 --> 00:15:30,850
it right and so that's really hard to

00:15:28,389 --> 00:15:32,199
find but Jason it makes this easy and it

00:15:30,850 --> 00:15:34,300
does other things like tell you hey

00:15:32,199 --> 00:15:35,110
you're not using this variable or you

00:15:34,300 --> 00:15:38,769
know you haven't

00:15:35,110 --> 00:15:40,570
used the triple equals which is like it

00:15:38,769 --> 00:15:44,260
avoids coercing variables and it's more

00:15:40,570 --> 00:15:46,899
of a strict conditional to check so it

00:15:44,260 --> 00:15:49,750
does all this cool stuff actually you

00:15:46,899 --> 00:15:51,610
know what I can show you here's some

00:15:49,750 --> 00:15:54,820
check boxes at the bottom so this is a

00:15:51,610 --> 00:15:57,640
good example so it does it does all

00:15:54,820 --> 00:16:01,420
these things just for the video later

00:15:57,640 --> 00:16:04,269
too including like strict or even loose

00:16:01,420 --> 00:16:06,850
checking of ECMO script so you can go it

00:16:04,269 --> 00:16:09,250
defaults to five and you can go up to

00:16:06,850 --> 00:16:11,110
six or down to three and going down to

00:16:09,250 --> 00:16:12,730
three is useful if you've got IE six

00:16:11,110 --> 00:16:15,310
seven eight implementations that you

00:16:12,730 --> 00:16:21,850
want to work with and then there's all

00:16:15,310 --> 00:16:23,380
this other stuff too so no so like I

00:16:21,850 --> 00:16:24,640
said this is a useful tool but sometimes

00:16:23,380 --> 00:16:27,310
it's tedious to go and like put the

00:16:24,640 --> 00:16:31,089
javascript in there every time so let's

00:16:27,310 --> 00:16:32,350
automate this thing so I'm going to jump

00:16:31,089 --> 00:16:34,600
over to the console here and going to

00:16:32,350 --> 00:16:37,480
skip the install like i said but

00:16:34,600 --> 00:16:42,640
basically we're going to run grunt watch

00:16:37,480 --> 00:16:43,930
on this particular example so now i'm in

00:16:42,640 --> 00:16:46,930
the jas hint directory and i'm just

00:16:43,930 --> 00:16:49,149
going to type grunt and now grunt says

00:16:46,930 --> 00:16:51,399
it's running a watch task now what does

00:16:49,149 --> 00:16:54,670
that mean it says it's for this

00:16:51,399 --> 00:16:58,060
particular task i used a module in grunt

00:16:54,670 --> 00:16:59,680
called grunt watch which what it does is

00:16:58,060 --> 00:17:01,839
it watches the directory that you're

00:16:59,680 --> 00:17:03,670
developing in or like a theme folder

00:17:01,839 --> 00:17:07,480
that you're developing in and it

00:17:03,670 --> 00:17:09,939
basically does stuff when you change the

00:17:07,480 --> 00:17:11,530
code so I've got the code over here and

00:17:09,939 --> 00:17:13,299
you can see at the top this file does

00:17:11,530 --> 00:17:16,449
have syntax errors that will trigger

00:17:13,299 --> 00:17:18,040
feedback from Jace hint so I'm going to

00:17:16,449 --> 00:17:21,610
save this file and you can see on the

00:17:18,040 --> 00:17:24,010
left that it instantly gives me a bunch

00:17:21,610 --> 00:17:26,770
of errors here so it spit out a bunch of

00:17:24,010 --> 00:17:29,140
J's hint output to me that I can now

00:17:26,770 --> 00:17:31,299
read and groc and it's saying for

00:17:29,140 --> 00:17:35,110
starters that I'm missing a semicolon at

00:17:31,299 --> 00:17:38,830
the end of this line and it also says on

00:17:35,110 --> 00:17:43,510
line 7 that I didn't do triple equals

00:17:38,830 --> 00:17:46,600
and we'll just do this again and see how

00:17:43,510 --> 00:17:48,490
grunt likes it

00:17:46,600 --> 00:17:52,030
alright I'd scrolled down but normally

00:17:48,490 --> 00:17:54,630
it you can see it when you so now you

00:17:52,030 --> 00:17:58,539
can see it says example j/s changed

00:17:54,630 --> 00:18:00,760
again and it's running this stuff again

00:17:58,539 --> 00:18:02,350
and this time it says that I've got an

00:18:00,760 --> 00:18:07,630
extra comma here at the end of value to

00:18:02,350 --> 00:18:11,860
on on line 13 and what that means is

00:18:07,630 --> 00:18:14,740
that I actually run I ran this with es 3

00:18:11,860 --> 00:18:16,840
true right here and so that option that

00:18:14,740 --> 00:18:19,600
I just showed you on Jas hint I have

00:18:16,840 --> 00:18:21,250
enabled for the grunt file and this is

00:18:19,600 --> 00:18:24,580
just the configuration for the grunt

00:18:21,250 --> 00:18:27,549
task and what this means is that it's

00:18:24,580 --> 00:18:29,409
actually checking this and producing

00:18:27,549 --> 00:18:32,590
errors that IE six seven and eight would

00:18:29,409 --> 00:18:34,450
produce also so I can do two things here

00:18:32,590 --> 00:18:38,169
I can either change this to false or I

00:18:34,450 --> 00:18:39,970
can take the comma away from value to

00:18:38,169 --> 00:18:42,610
hear and I will just change this to

00:18:39,970 --> 00:18:44,950
false real fast just to show you that

00:18:42,610 --> 00:18:46,720
there's only one error now and it's

00:18:44,950 --> 00:18:48,070
actually watching the grunt file itself

00:18:46,720 --> 00:18:51,730
so when I change the grunt

00:18:48,070 --> 00:18:56,710
fileconfiguration it automatically fixes

00:18:51,730 --> 00:18:59,200
some of the other stuff here so we're

00:18:56,710 --> 00:19:04,710
missing a semicolon is the last thing

00:18:59,200 --> 00:19:08,200
and I don't even know where that is but

00:19:04,710 --> 00:19:11,289
it's okay because it tells me there we

00:19:08,200 --> 00:19:14,860
go and see it even highlights the little

00:19:11,289 --> 00:19:17,049
red thing for me so oh great file

00:19:14,860 --> 00:19:18,820
example J has changed we're running it

00:19:17,049 --> 00:19:20,200
two files are lint free and it's done

00:19:18,820 --> 00:19:22,900
without errors so you know that you have

00:19:20,200 --> 00:19:25,659
produced quality code now and you can

00:19:22,900 --> 00:19:27,190
move on and be assured that the code

00:19:25,659 --> 00:19:28,870
doesn't have any errors that you didn't

00:19:27,190 --> 00:19:30,700
catch because jay is hint has told you

00:19:28,870 --> 00:19:32,770
oh hey you're good to go which is pretty

00:19:30,700 --> 00:19:34,120
awesome how many people have had

00:19:32,770 --> 00:19:36,250
problems with JavaScript and like this

00:19:34,120 --> 00:19:37,750
alone would be like something awesome

00:19:36,250 --> 00:19:42,159
that would help your day thank you yeah

00:19:37,750 --> 00:19:45,159
me too so this is this is great stuff if

00:19:42,159 --> 00:19:48,460
you write a lot of JavaScript so cool

00:19:45,159 --> 00:19:50,760
that's Jays hint any questions about j

00:19:48,460 --> 00:19:50,760
SN

00:19:52,360 --> 00:19:56,240
the performance with large files it's a

00:19:54,860 --> 00:19:57,740
good question there's not really a

00:19:56,240 --> 00:20:01,669
problem this is all local development

00:19:57,740 --> 00:20:04,940
too and I've had installs that have like

00:20:01,669 --> 00:20:07,220
dozens and dozens of files that you know

00:20:04,940 --> 00:20:10,040
I either road or vendor files and you

00:20:07,220 --> 00:20:12,380
can also in the configuration here if

00:20:10,040 --> 00:20:13,790
you do have lots of files so like I

00:20:12,380 --> 00:20:17,630
accidentally set this up incorrectly

00:20:13,790 --> 00:20:19,429
before and and I had like it was

00:20:17,630 --> 00:20:22,610
actually checking node modules the

00:20:19,429 --> 00:20:25,790
folder node modules um which is bad

00:20:22,610 --> 00:20:27,799
because node modules you know like when

00:20:25,790 --> 00:20:30,559
you in npm install stuff it'll go grab

00:20:27,799 --> 00:20:31,880
like you know 20 30 packages or

00:20:30,559 --> 00:20:33,830
something like that and then they all

00:20:31,880 --> 00:20:36,679
had like these strict validation errors

00:20:33,830 --> 00:20:39,559
so this configuration file is just

00:20:36,679 --> 00:20:41,929
checking top-level jayus files and if i

00:20:39,559 --> 00:20:44,660
switch this to something like star star

00:20:41,929 --> 00:20:48,020
star jazz now it'll check all those node

00:20:44,660 --> 00:20:50,660
modules that here I can show you oh now

00:20:48,020 --> 00:21:00,169
i turned the i turn the es stuff off

00:20:50,660 --> 00:21:02,450
here oh my task is dead oh that's funny

00:21:00,169 --> 00:21:04,160
well anyway the point is that you can

00:21:02,450 --> 00:21:06,140
specify different directories and that

00:21:04,160 --> 00:21:07,960
kind of thing so if you only want to hit

00:21:06,140 --> 00:21:10,370
a one directory that's totally possible

00:21:07,960 --> 00:21:12,410
so everything is in that grunt file too

00:21:10,370 --> 00:21:15,410
and you can see that the watch task that

00:21:12,410 --> 00:21:17,299
I wrote very very simple the watch just

00:21:15,410 --> 00:21:19,340
checks a bunch of files and then says

00:21:17,299 --> 00:21:21,830
run it on j SN in fact that's probably

00:21:19,340 --> 00:21:22,940
where this needs to go but i'm not going

00:21:21,830 --> 00:21:26,990
to hack on this in the middle of a

00:21:22,940 --> 00:21:29,150
presentation so that that's the kind of

00:21:26,990 --> 00:21:30,679
thing to watch out for it it's a really

00:21:29,150 --> 00:21:32,059
good question so thank you for bringing

00:21:30,679 --> 00:21:33,440
out you shouldn't have any problems with

00:21:32,059 --> 00:21:34,850
this and if you do you just kind of skip

00:21:33,440 --> 00:21:37,220
the pieces that you don't have any

00:21:34,850 --> 00:21:41,720
control over upstream packages and the

00:21:37,220 --> 00:21:45,530
like oh and then also this force flag

00:21:41,720 --> 00:21:47,179
can allow you to by default it will just

00:21:45,530 --> 00:21:49,460
like stop when it finds errors and it's

00:21:47,179 --> 00:21:50,960
like fix this before I'll even think

00:21:49,460 --> 00:21:52,850
about going on and you can make it

00:21:50,960 --> 00:21:56,360
generate everything for you so you can

00:21:52,850 --> 00:21:58,580
do them in really big passes and then as

00:21:56,360 --> 00:22:03,620
we just saw you can save your files like

00:21:58,580 --> 00:22:04,410
normal and you're hinting there are tons

00:22:03,620 --> 00:22:07,620
and tons

00:22:04,410 --> 00:22:11,160
of examples of grunt watch and earlier

00:22:07,620 --> 00:22:13,440
this year we went full in on it and for

00:22:11,160 --> 00:22:15,030
our drupalcamp Austin site and so we've

00:22:13,440 --> 00:22:18,630
got a great grunt file with a bunch of

00:22:15,030 --> 00:22:20,610
docs and also in the back there is a Ian

00:22:18,630 --> 00:22:23,160
who is the mastermind behind all this so

00:22:20,610 --> 00:22:24,600
i may just like punt it to him if if

00:22:23,160 --> 00:22:27,060
anybody's got like really advanced

00:22:24,600 --> 00:22:29,220
questions about grunt watch but the

00:22:27,060 --> 00:22:32,160
grunt file has all these built into it

00:22:29,220 --> 00:22:33,930
so j/s hint uglify which minify is your

00:22:32,160 --> 00:22:36,420
javascript then you can concatenate

00:22:33,930 --> 00:22:38,910
things into different builds you can

00:22:36,420 --> 00:22:41,190
minify your images you can run compass

00:22:38,910 --> 00:22:43,410
you can run right live reload you can

00:22:41,190 --> 00:22:45,300
run Jekyll and you can even have flags

00:22:43,410 --> 00:22:47,040
that do dev and prod build modes for

00:22:45,300 --> 00:22:49,320
this kind of stuff which is pretty

00:22:47,040 --> 00:22:50,520
awesome so if you want to build your

00:22:49,320 --> 00:22:52,170
javascript differently when you're

00:22:50,520 --> 00:22:53,670
developing or not minify it when you're

00:22:52,170 --> 00:22:55,620
developing and then minify it in your

00:22:53,670 --> 00:23:01,320
production you can have all this stuff

00:22:55,620 --> 00:23:03,060
running through grunt no problemo any

00:23:01,320 --> 00:23:10,730
more questions about grunt watch grunt

00:23:03,060 --> 00:23:13,020
in general cool so performance testing

00:23:10,730 --> 00:23:15,270
this is a hot topic because like I said

00:23:13,020 --> 00:23:16,560
if you want to build a fast site you got

00:23:15,270 --> 00:23:17,940
to start out by building fast site

00:23:16,560 --> 00:23:20,970
instead of just trying to tack it on at

00:23:17,940 --> 00:23:22,830
the end that will not work as well as we

00:23:20,970 --> 00:23:26,730
all want it to even though it would be

00:23:22,830 --> 00:23:28,770
great if it did so everyone's familiar

00:23:26,730 --> 00:23:30,660
with why slow right everyone's use why

00:23:28,770 --> 00:23:33,300
slow we've all used why slow that's

00:23:30,660 --> 00:23:35,910
awesome so why slow is that service the

00:23:33,300 --> 00:23:38,310
grades front-end performance for you and

00:23:35,910 --> 00:23:41,220
then there are many best practices that

00:23:38,310 --> 00:23:43,590
are checked here and you get a grade so

00:23:41,220 --> 00:23:45,630
it delivers a through f I don't know if

00:23:43,590 --> 00:23:49,890
that's a common grading system but it is

00:23:45,630 --> 00:23:51,690
common to us pupils historically you had

00:23:49,890 --> 00:23:54,540
to go to each webpage that you wanted a

00:23:51,690 --> 00:24:00,360
test in why slow but that is boring and

00:23:54,540 --> 00:24:03,240
tedious so you can capture the data that

00:24:00,360 --> 00:24:07,340
you need to perform analysis via why

00:24:03,240 --> 00:24:11,700
slow very easily using phantom so

00:24:07,340 --> 00:24:14,310
phantom comes with a net sniff jayus or

00:24:11,700 --> 00:24:17,500
net sniff coffee if that's your thing to

00:24:14,310 --> 00:24:19,300
allow you to generate horror files

00:24:17,500 --> 00:24:21,010
I don't even remember what it stands for

00:24:19,300 --> 00:24:24,010
but it's basically when you look at a

00:24:21,010 --> 00:24:25,390
network waterfall that it's not going to

00:24:24,010 --> 00:24:28,870
show up here but this network tab

00:24:25,390 --> 00:24:32,160
basically is what you're looking at when

00:24:28,870 --> 00:24:36,280
the heart is a JSON file that this is

00:24:32,160 --> 00:24:40,260
visualizing and so you can install the

00:24:36,280 --> 00:24:42,850
why slow node module and basically get a

00:24:40,260 --> 00:24:47,790
readout of this thing so I'm going to

00:24:42,850 --> 00:24:47,790
take this example here oh no I'm not

00:24:49,080 --> 00:24:55,540
this is what you get for there we go i

00:24:52,270 --> 00:24:58,360
think that's the end of it perfect oh

00:24:55,540 --> 00:25:01,030
man that's some wacky reveal stuff

00:24:58,360 --> 00:25:02,580
happening but so i'm going to run this

00:25:01,030 --> 00:25:04,870
command and it's a little big but i'll

00:25:02,580 --> 00:25:08,860
talk about each piece here before we do

00:25:04,870 --> 00:25:11,890
it oh actually here it's at the top now

00:25:08,860 --> 00:25:14,740
at the beginning cut off here is phantom

00:25:11,890 --> 00:25:16,210
jas that's all it says and then we're

00:25:14,740 --> 00:25:25,510
going to actually this is going to work

00:25:16,210 --> 00:25:27,850
in this directory so hold on okay cool

00:25:25,510 --> 00:25:30,520
so now I'm going to run phantom j/s in

00:25:27,850 --> 00:25:32,110
the examples folder of phantom and it's

00:25:30,520 --> 00:25:33,640
going to use the net sniff and it's

00:25:32,110 --> 00:25:36,040
going to look up for kitchen scom which

00:25:33,640 --> 00:25:37,870
is my employers website and then the

00:25:36,040 --> 00:25:40,150
pipe means that it's going to pipe it to

00:25:37,870 --> 00:25:42,280
why slow and then I've told it to grade

00:25:40,150 --> 00:25:44,230
me and give it in a plain format so it's

00:25:42,280 --> 00:25:45,640
going to look pretty in the console all

00:25:44,230 --> 00:25:47,110
right so I'm gonna hit enter there's a

00:25:45,640 --> 00:25:49,240
delay because what it's doing is it's

00:25:47,110 --> 00:25:51,370
requesting the website and it's pulling

00:25:49,240 --> 00:25:52,930
down this JSON and then it's grading

00:25:51,370 --> 00:25:55,870
everything and it's running this node

00:25:52,930 --> 00:25:57,010
module on this on the thing here so

00:25:55,870 --> 00:26:00,730
actually this is like too much

00:25:57,010 --> 00:26:03,340
information for the screen but here's

00:26:00,730 --> 00:26:05,200
the basic stuff here and broken out you

00:26:03,340 --> 00:26:08,980
see oh we're not using a CDN so we got

00:26:05,200 --> 00:26:12,070
an F but and this is a terrible

00:26:08,980 --> 00:26:13,410
conference Wi-Fi and what actually it's

00:26:12,070 --> 00:26:15,820
not that terrible I take that back

00:26:13,410 --> 00:26:18,120
conference and since this is being

00:26:15,820 --> 00:26:18,120
recorded

00:26:19,080 --> 00:26:24,880
so it's actually being pretty good but

00:26:22,960 --> 00:26:26,650
it's not it's not the number i want to

00:26:24,880 --> 00:26:29,140
see when i'm like checking this stuff

00:26:26,650 --> 00:26:31,180
which is a footnote that i'll get to in

00:26:29,140 --> 00:26:34,630
a second you can see here that it says

00:26:31,180 --> 00:26:37,120
that our website is 512 k hooray and the

00:26:34,630 --> 00:26:40,870
overall score is a B which is really not

00:26:37,120 --> 00:26:42,880
that bad B is for not that bad and then

00:26:40,870 --> 00:26:45,220
the URL the number of requests that we

00:26:42,880 --> 00:26:46,660
incurred when we were doing this the

00:26:45,220 --> 00:26:48,100
ruleset and then like the number of

00:26:46,660 --> 00:26:50,260
milliseconds that it took for the page

00:26:48,100 --> 00:26:52,120
to load now off the top of my head I

00:26:50,260 --> 00:26:55,060
don't know if this is the content Dom

00:26:52,120 --> 00:26:58,540
loaded event or the Dom content loaded

00:26:55,060 --> 00:27:00,610
via and/or the page on load which comes

00:26:58,540 --> 00:27:03,010
much later in the stack especially if

00:27:00,610 --> 00:27:05,730
you're doing things right but basically

00:27:03,010 --> 00:27:07,930
you can get this basic information and

00:27:05,730 --> 00:27:09,820
if you hook this up to Jenkins and you

00:27:07,930 --> 00:27:11,680
like push a branch to github and then

00:27:09,820 --> 00:27:13,900
the Y so comes back and emails you and

00:27:11,680 --> 00:27:15,460
says like hey by the way you added 12

00:27:13,900 --> 00:27:16,990
hundred milliseconds to your page load

00:27:15,460 --> 00:27:18,640
time you know that you're not done

00:27:16,990 --> 00:27:19,720
working because you need to unbreak

00:27:18,640 --> 00:27:21,880
whatever you broke while you were

00:27:19,720 --> 00:27:23,590
working unless of course your goal was

00:27:21,880 --> 00:27:27,510
to add a carousel to your homepage and

00:27:23,590 --> 00:27:31,120
then you've done what you meant to do so

00:27:27,510 --> 00:27:33,390
that's a why slow in a nutshell and then

00:27:31,120 --> 00:27:36,880
also there are other versions of this

00:27:33,390 --> 00:27:39,040
you can do why slow for phantom and this

00:27:36,880 --> 00:27:40,660
is the exact same command in a different

00:27:39,040 --> 00:27:43,200
syntax actually it's not the exact same

00:27:40,660 --> 00:27:47,680
command because it says example calm but

00:27:43,200 --> 00:27:50,140
you do need to watch out for these tools

00:27:47,680 --> 00:27:51,790
because due to the way they're built you

00:27:50,140 --> 00:27:54,340
can find significant differences between

00:27:51,790 --> 00:27:57,400
the tools and so like one test is never

00:27:54,340 --> 00:27:59,620
good enough like to get a good margin of

00:27:57,400 --> 00:28:01,510
error sometimes I'll run like 10 of them

00:27:59,620 --> 00:28:03,310
just to see what the average is for all

00:28:01,510 --> 00:28:04,810
of them and I don't have a way of like

00:28:03,310 --> 00:28:06,340
scripting all that together but you can

00:28:04,810 --> 00:28:08,620
at least look and see like is there a

00:28:06,340 --> 00:28:11,620
problem with our Wi-Fi right now or

00:28:08,620 --> 00:28:13,210
something like that a lot of these tools

00:28:11,620 --> 00:28:14,710
aren't going to be handled handy for

00:28:13,210 --> 00:28:17,170
local development you want to do this on

00:28:14,710 --> 00:28:19,180
some sort of staging QA server right so

00:28:17,170 --> 00:28:20,770
that you're using the real internet with

00:28:19,180 --> 00:28:24,430
latency involved and all that kind of

00:28:20,770 --> 00:28:30,040
stuff so does anybody have any questions

00:28:24,430 --> 00:28:30,970
about why slow cool total experts I like

00:28:30,040 --> 00:28:38,590
this all right

00:28:30,970 --> 00:28:41,080
what's up the question was I put the URL

00:28:38,590 --> 00:28:42,549
the the particular URL is it going to

00:28:41,080 --> 00:28:44,950
scan the whole website or just one page

00:28:42,549 --> 00:28:47,110
and the answer is one page it'll just

00:28:44,950 --> 00:28:48,640
scan the URL that you provide so if you

00:28:47,110 --> 00:28:50,590
wanted to do this multiple times you'd

00:28:48,640 --> 00:28:54,429
have to set up the command multiple

00:28:50,590 --> 00:28:59,289
times and do it for / about / team you

00:28:54,429 --> 00:29:00,820
know / subscriptions or whatever but if

00:28:59,289 --> 00:29:02,679
you've put this into a script it's

00:29:00,820 --> 00:29:05,740
really not that bad and this in

00:29:02,679 --> 00:29:07,659
particular is very low power like it's

00:29:05,740 --> 00:29:09,610
not going to pound your server to do

00:29:07,659 --> 00:29:11,980
this and if you had like 10 URLs you

00:29:09,610 --> 00:29:15,220
wanted to check no problem it does in

00:29:11,980 --> 00:29:18,480
just a second another question Alan is

00:29:15,220 --> 00:29:25,570
there an equivalent for basting

00:29:18,480 --> 00:29:29,830
automating PageSpeed yeah yeah thank you

00:29:25,570 --> 00:29:31,570
that was totally unplanned by the way so

00:29:29,830 --> 00:29:32,799
not to be outdone by yahoo google has a

00:29:31,570 --> 00:29:35,500
competing service called PageSpeed

00:29:32,799 --> 00:29:37,929
insights depending on how you feel about

00:29:35,500 --> 00:29:39,309
Google and Yahoo and all that you might

00:29:37,929 --> 00:29:41,770
find this one to be more interesting

00:29:39,309 --> 00:29:45,970
right so he can also be automated by

00:29:41,770 --> 00:29:47,860
getting an API key and then you can also

00:29:45,970 --> 00:29:49,330
sign up for their service which right

00:29:47,860 --> 00:29:51,159
now is free but you have to sign up for

00:29:49,330 --> 00:29:54,429
a waiting list and they say that this is

00:29:51,159 --> 00:29:56,799
going to become a paid service so using

00:29:54,429 --> 00:29:59,110
the API may suit you better if you don't

00:29:56,799 --> 00:30:01,539
want to incur a subscription costs later

00:29:59,110 --> 00:30:03,250
on at some unplanned date but they are

00:30:01,539 --> 00:30:04,480
being forthcoming about saying that yes

00:30:03,250 --> 00:30:06,190
this is going to turn into a paid

00:30:04,480 --> 00:30:07,960
service once we've hammered out all the

00:30:06,190 --> 00:30:13,030
kinks and we feel really good about

00:30:07,960 --> 00:30:14,980
offering it so yes Google can do the

00:30:13,030 --> 00:30:17,559
exact same thing they don't use the

00:30:14,980 --> 00:30:19,659
letter grading system they just use a

00:30:17,559 --> 00:30:22,120
bunch of numbers and they score it out

00:30:19,659 --> 00:30:27,280
of 100 I think each each way or each

00:30:22,120 --> 00:30:28,419
facet so the page b8 API is documenting

00:30:27,280 --> 00:30:31,480
quite thoroughly but there's also a

00:30:28,419 --> 00:30:35,770
grunt plugin for this so if you were

00:30:31,480 --> 00:30:38,200
developing on a remote server you can

00:30:35,770 --> 00:30:40,450
have this set up to run when you like

00:30:38,200 --> 00:30:42,909
for example like I used to blind so I

00:30:40,450 --> 00:30:43,730
have to have the files locally and then

00:30:42,909 --> 00:30:45,680
like when I

00:30:43,730 --> 00:30:48,260
show something on a remote server i have

00:30:45,680 --> 00:30:50,480
to ftp it up automatically right well

00:30:48,260 --> 00:30:52,730
you could like put a delay in there and

00:30:50,480 --> 00:30:54,770
then have your computer do the PageSpeed

00:30:52,730 --> 00:30:56,570
look up or the Y so look up on your

00:30:54,770 --> 00:31:00,050
remote server as you're developing so

00:30:56,570 --> 00:31:01,550
everything stays in sync but grunts

00:31:00,050 --> 00:31:03,740
PageSpeed is basically the same thing

00:31:01,550 --> 00:31:08,240
here we're going to back out of that one

00:31:03,740 --> 00:31:11,450
go to page speed so we're in examples

00:31:08,240 --> 00:31:14,330
grant page speed in the repo that's on

00:31:11,450 --> 00:31:16,250
the drupalcon site and so I've already

00:31:14,330 --> 00:31:18,530
done NPM install but I'm just going to

00:31:16,250 --> 00:31:21,980
run grunt and this is set up to grade

00:31:18,530 --> 00:31:24,560
for kitchen scom once again and so it's

00:31:21,980 --> 00:31:26,690
running the task and unlike watch this

00:31:24,560 --> 00:31:30,290
is a discrete command that you have to

00:31:26,690 --> 00:31:32,510
run Adam at a moment's notice now you

00:31:30,290 --> 00:31:34,760
could set it up with grunt watch that's

00:31:32,510 --> 00:31:36,590
totally doable but as I have it here

00:31:34,760 --> 00:31:37,940
it's just a command that I run you can

00:31:36,590 --> 00:31:40,400
see that my shell is returned at the

00:31:37,940 --> 00:31:42,440
bottom of the screen and we're back at

00:31:40,400 --> 00:31:44,140
the prompt you can see you can see this

00:31:42,440 --> 00:31:48,530
is a shell because i actually have a

00:31:44,140 --> 00:31:51,410
shell I'm so proud of my emotion so

00:31:48,530 --> 00:31:54,260
here's the the results of the PageSpeed

00:31:51,410 --> 00:31:56,200
desktop task now you're probably

00:31:54,260 --> 00:31:58,730
thinking in your head Chris don't you

00:31:56,200 --> 00:32:00,950
aren't you a proponent of not using

00:31:58,730 --> 00:32:03,470
those types of words well in this case I

00:32:00,950 --> 00:32:06,470
have to because PageSpeed has two modes

00:32:03,470 --> 00:32:08,930
desktop and mobile so that's their

00:32:06,470 --> 00:32:11,180
decision not mine and so the grunt

00:32:08,930 --> 00:32:12,770
plugin basically you can do both of them

00:32:11,180 --> 00:32:14,180
and it's just a matter of configuring it

00:32:12,770 --> 00:32:15,910
and I can show the grunt file in a

00:32:14,180 --> 00:32:17,960
second if anyone's interested or

00:32:15,910 --> 00:32:20,810
afterwards if not too many people are

00:32:17,960 --> 00:32:23,300
interested so basically it said here's

00:32:20,810 --> 00:32:25,550
your URL your score is 84 grading us a

00:32:23,300 --> 00:32:32,710
little harder you can see the green on

00:32:25,550 --> 00:32:32,710
the side because I set a threshold of 80

00:32:36,729 --> 00:32:42,889
so for kitchens calm it says us strategy

00:32:40,820 --> 00:32:44,989
is desktop and the threshold the score

00:32:42,889 --> 00:32:46,489
that we're looking for is 80 you can see

00:32:44,989 --> 00:32:47,899
here that mobile is set up exactly the

00:32:46,489 --> 00:32:53,269
same with the same threshold but the

00:32:47,899 --> 00:32:56,119
strategy is mobile hooray so excuse me

00:32:53,269 --> 00:32:57,349
it shows the number of resources the

00:32:56,119 --> 00:32:59,960
number of hosts that are pulling this

00:32:57,349 --> 00:33:02,349
stuff see it complained about CD ends

00:32:59,960 --> 00:33:05,539
earlier but we are kind of using a CDN

00:33:02,349 --> 00:33:07,849
the total requesting bytes and all this

00:33:05,539 --> 00:33:09,049
sort of response time stuff and you can

00:33:07,849 --> 00:33:11,059
look at these and make sure that your

00:33:09,049 --> 00:33:13,489
numbers aren't changing or going up too

00:33:11,059 --> 00:33:14,899
far and all that kind of stuff the

00:33:13,489 --> 00:33:17,029
number of files that you're loading and

00:33:14,899 --> 00:33:18,739
so forth and so this is great then it

00:33:17,029 --> 00:33:21,139
tells you a bunch of other more advanced

00:33:18,739 --> 00:33:22,639
stuff that is when I start tugging on

00:33:21,139 --> 00:33:25,669
the shoulder of someone at my job and

00:33:22,639 --> 00:33:28,159
sailing how do we do gzip compression so

00:33:25,669 --> 00:33:29,210
you want to avoid redirecting and it'll

00:33:28,159 --> 00:33:30,710
tell you how many times you've

00:33:29,210 --> 00:33:34,039
redirected because if you're using M

00:33:30,710 --> 00:33:38,059
dots or anything like that rethink that

00:33:34,039 --> 00:33:40,629
and you know leveraging browser caching

00:33:38,059 --> 00:33:42,799
and all these advanced features right so

00:33:40,629 --> 00:33:45,109
these are numbers that you can get out

00:33:42,799 --> 00:33:46,719
of the PageSpeed plugin and then what

00:33:45,109 --> 00:33:49,820
I'm going to do here is I'm going to run

00:33:46,719 --> 00:33:53,869
PageSpeed colon mobile which is if you

00:33:49,820 --> 00:33:56,570
saw up here running PageSpeed colon

00:33:53,869 --> 00:34:00,229
desktop that's the what's called the

00:33:56,570 --> 00:34:03,589
default task in grunt and so it does

00:34:00,229 --> 00:34:05,089
PageSpeed here and then since the

00:34:03,589 --> 00:34:07,219
desktop is the first thing inside

00:34:05,089 --> 00:34:09,849
PageSpeed it just picks desktop if I

00:34:07,219 --> 00:34:12,500
were to move these it would load mobile

00:34:09,849 --> 00:34:19,279
instead of desktop when I just ran grunt

00:34:12,500 --> 00:34:22,779
so now whoops there we go grunt

00:34:19,279 --> 00:34:22,779
PageSpeed mobile

00:34:23,500 --> 00:34:27,820
it's doing the exact same thing although

00:34:25,690 --> 00:34:31,000
it's simulating a mobile phone this time

00:34:27,820 --> 00:34:32,980
and look at that it's red so because the

00:34:31,000 --> 00:34:35,790
threshold is still 80 and I got an

00:34:32,980 --> 00:34:38,020
overall score of 69 you can see that

00:34:35,790 --> 00:34:40,389
it's saying that hey you've kind of

00:34:38,020 --> 00:34:41,860
fallen below your absolute threshold so

00:34:40,389 --> 00:34:43,330
you could have this thing basically

00:34:41,860 --> 00:34:45,550
alert you whenever you fall below

00:34:43,330 --> 00:34:48,970
particular threshold rather than having

00:34:45,550 --> 00:34:50,830
to check it manually every time and same

00:34:48,970 --> 00:34:52,810
numbers are here it's just done in a

00:34:50,830 --> 00:34:54,610
different way and it has like a little

00:34:52,810 --> 00:34:56,530
stricter requirements for this type of

00:34:54,610 --> 00:34:58,720
stuff because it knows that mobile

00:34:56,530 --> 00:35:02,250
phones have smaller cache files and that

00:34:58,720 --> 00:35:07,510
kind of thing so that's all good right

00:35:02,250 --> 00:35:11,700
and and that's basically page speed in a

00:35:07,510 --> 00:35:16,240
nutshell any questions about page speed

00:35:11,700 --> 00:35:18,400
nap cool this one is also really awesome

00:35:16,240 --> 00:35:21,220
CSS regression testing so like I said in

00:35:18,400 --> 00:35:23,560
the beginning you can nudge CSS around

00:35:21,220 --> 00:35:26,380
really easily because CSS has no scope

00:35:23,560 --> 00:35:28,180
and so you know sometimes you're just

00:35:26,380 --> 00:35:32,530
like whoa someone messed up the CSS

00:35:28,180 --> 00:35:34,300
that's impossible so CSS can be knocked

00:35:32,530 --> 00:35:37,540
out of place really easily and we need

00:35:34,300 --> 00:35:39,760
to prevent this so enter Wraith Wraith

00:35:37,540 --> 00:35:41,640
is a tool from BBC news and it's open

00:35:39,760 --> 00:35:44,350
source and what it allows you to do is

00:35:41,640 --> 00:35:46,060
leverage phantom or slimer your choice

00:35:44,350 --> 00:35:48,310
to take screenshots of two different

00:35:46,060 --> 00:35:52,180
environments producing a visual diff of

00:35:48,310 --> 00:35:54,700
those two screenshots holy cow alright

00:35:52,180 --> 00:35:56,950
so we've got an example here of BBC News

00:35:54,700 --> 00:35:59,350
and you can see all this blue on the

00:35:56,950 --> 00:36:01,240
page is stuff that changed just a little

00:35:59,350 --> 00:36:02,980
and so someone like nudged it out of

00:36:01,240 --> 00:36:05,170
place or maybe increase the font size a

00:36:02,980 --> 00:36:08,920
little and it starts to just go haywire

00:36:05,170 --> 00:36:10,060
basically and this is a super cool thing

00:36:08,920 --> 00:36:11,890
and then also there's that little blue

00:36:10,060 --> 00:36:13,900
circle at the top I think someone like

00:36:11,890 --> 00:36:18,430
added an icon or something like this

00:36:13,900 --> 00:36:21,700
this work oh yeah there we go so that's

00:36:18,430 --> 00:36:24,130
Wraith let's do a really quick Wraith

00:36:21,700 --> 00:36:26,800
check here so I'm going to install it

00:36:24,130 --> 00:36:33,610
and then we're going to run the default

00:36:26,800 --> 00:36:36,020
that comes with rake so and yeah it's

00:36:33,610 --> 00:36:39,840
all there

00:36:36,020 --> 00:36:41,460
so we're going to run rake which is this

00:36:39,840 --> 00:36:43,980
is a ruby tool and so this is the

00:36:41,460 --> 00:36:46,109
command that runs the tool that we're

00:36:43,980 --> 00:36:50,580
using so what it's doing is it's looking

00:36:46,109 --> 00:36:53,910
up I believe like BBC Russian and BBC UK

00:36:50,580 --> 00:36:56,850
and it's checking the slash path so it's

00:36:53,910 --> 00:36:59,340
checking home and I guess I'll talk a

00:36:56,850 --> 00:37:02,609
little slower because sometimes this

00:36:59,340 --> 00:37:05,340
takes a while and you can see it says

00:37:02,609 --> 00:37:10,290
it's doing with 320 and now it's going

00:37:05,340 --> 00:37:13,470
to do 607 20,000 24 a couple different

00:37:10,290 --> 00:37:15,300
options here and it's literally loading

00:37:13,470 --> 00:37:17,460
up the web page resizing the window

00:37:15,300 --> 00:37:19,080
taking a full screen shot of it saving

00:37:17,460 --> 00:37:21,150
it to disk and then doing the other

00:37:19,080 --> 00:37:23,400
domain as well and it's setting all

00:37:21,150 --> 00:37:24,990
those together and it's putting them

00:37:23,400 --> 00:37:26,430
aside and then after it takes all the

00:37:24,990 --> 00:37:28,290
screenshots what's it's going to do it's

00:37:26,430 --> 00:37:31,140
going to run a diff just like a code div

00:37:28,290 --> 00:37:34,050
or but it's a diff on the images

00:37:31,140 --> 00:37:35,850
themselves and it's going to show us

00:37:34,050 --> 00:37:40,950
those changes that were introduced

00:37:35,850 --> 00:37:46,800
between the two domains this one can

00:37:40,950 --> 00:37:49,350
actually run a behind htx or no HT to

00:37:46,800 --> 00:37:51,600
http off so if you have like a really

00:37:49,350 --> 00:37:53,700
informal user pass on your dev

00:37:51,600 --> 00:37:55,590
environments and it you know prompts you

00:37:53,700 --> 00:37:57,270
to enter the user pass before you hit

00:37:55,590 --> 00:37:59,640
your dev environment you can actually

00:37:57,270 --> 00:38:03,359
include that by just saying like HTTP

00:37:59,640 --> 00:38:08,340
colon slash slash user Colin name at my

00:38:03,359 --> 00:38:10,890
dev domain what dot whatever up now it's

00:38:08,340 --> 00:38:12,750
doing another one hooray I should have

00:38:10,890 --> 00:38:14,490
made the config file shorter but

00:38:12,750 --> 00:38:17,780
basically it's running through all these

00:38:14,490 --> 00:38:20,520
configs that are sitting there and then

00:38:17,780 --> 00:38:23,400
at the end it's going to give us a web

00:38:20,520 --> 00:38:25,350
page a nicely formatted web page like

00:38:23,400 --> 00:38:32,060
we're getting a little too much for our

00:38:25,350 --> 00:38:35,340
money here which is none so whenever

00:38:32,060 --> 00:38:37,740
someone comes into a queue and it's kind

00:38:35,340 --> 00:38:39,390
of cranky at me I learned from I believe

00:38:37,740 --> 00:38:40,890
I heard this from greggles originally

00:38:39,390 --> 00:38:43,050
but just tell them hey you're getting

00:38:40,890 --> 00:38:45,740
what you paid for but in this case we

00:38:43,050 --> 00:38:45,740
really are so

00:38:46,019 --> 00:38:50,499
we're almost done here we got two more

00:38:48,219 --> 00:38:54,939
12 80s to go then we're going to see the

00:38:50,499 --> 00:38:56,439
results which are awesome cbay have any

00:38:54,939 --> 00:38:58,599
questions about this what's finishing up

00:38:56,439 --> 00:39:00,369
it's just a visual output or do you get

00:38:58,599 --> 00:39:03,009
some sort of mathematical ninety-nine

00:39:00,369 --> 00:39:05,739
percent difference right now as the Tool

00:39:03,009 --> 00:39:07,900
Works it it just gives you visual output

00:39:05,739 --> 00:39:10,630
and it crops them and puts thumbnails on

00:39:07,900 --> 00:39:12,999
this gallery page but I haven't dug into

00:39:10,630 --> 00:39:16,329
the code deeply but I feel like you

00:39:12,999 --> 00:39:18,910
could probably produce those numbers if

00:39:16,329 --> 00:39:23,019
you altered the tool or something like

00:39:18,910 --> 00:39:31,059
that so saving tips here it's almost

00:39:23,019 --> 00:39:38,469
done any other questions all right here

00:39:31,059 --> 00:39:39,849
we go shots gallery alright so here's

00:39:38,469 --> 00:39:41,349
the difference this is actually huge

00:39:39,849 --> 00:39:43,569
it's a lot bigger than it was last time

00:39:41,349 --> 00:39:45,789
but you get the point so we just did

00:39:43,569 --> 00:39:47,829
this dynamically and you can see that

00:39:45,789 --> 00:39:49,599
because they've got this huge cookie

00:39:47,829 --> 00:39:54,099
prompt at the top it makes it kind of

00:39:49,599 --> 00:39:55,689
useless but you can run this I think it

00:39:54,099 --> 00:39:58,539
would be possible to run it with no j/s

00:39:55,689 --> 00:40:01,479
and stuff like that no javascript is

00:39:58,539 --> 00:40:03,219
what I mean but you can see that it

00:40:01,479 --> 00:40:05,049
labels them all with resolutions and

00:40:03,219 --> 00:40:07,569
then it moves on to the UK index page

00:40:05,049 --> 00:40:09,279
here and so you can set up many

00:40:07,569 --> 00:40:13,239
different config files and these are

00:40:09,279 --> 00:40:18,279
actually pretty simple so if I show the

00:40:13,239 --> 00:40:19,869
Wraith configs and actually as I was

00:40:18,279 --> 00:40:21,789
messing with this I found that it had a

00:40:19,869 --> 00:40:23,589
config bug which they've actually fixed

00:40:21,789 --> 00:40:26,349
now so you can run multiple configs or

00:40:23,589 --> 00:40:30,189
you can say rake config whatever and

00:40:26,349 --> 00:40:31,900
just run one of them so basically it'll

00:40:30,189 --> 00:40:35,499
put it in the shots here you put your

00:40:31,900 --> 00:40:37,869
domains right here you tell your screen

00:40:35,499 --> 00:40:40,089
with what you want and then pass also so

00:40:37,869 --> 00:40:43,689
very simple syntax and it does the rest

00:40:40,089 --> 00:40:45,910
for you very very simple here so the

00:40:43,689 --> 00:40:48,520
people in the back

00:40:45,910 --> 00:40:51,490
when you attend to use for say a local

00:40:48,520 --> 00:40:53,140
environment to stage yeah so the first

00:40:51,490 --> 00:40:56,289
time I used this it was incredibly

00:40:53,140 --> 00:40:58,000
useful because we're on a crunch and so

00:40:56,289 --> 00:40:59,980
like for two or three weeks I was just

00:40:58,000 --> 00:41:01,539
like oh I e 8 i'm not going to test it

00:40:59,980 --> 00:41:03,670
and it was a responsive site and i did a

00:41:01,539 --> 00:41:06,700
bunch of bad things right and so then

00:41:03,670 --> 00:41:09,970
what came came time to actually fixing

00:41:06,700 --> 00:41:11,799
that and so I was like okay let's fix

00:41:09,970 --> 00:41:13,180
the IE 8 problems I made sure that I was

00:41:11,799 --> 00:41:14,950
fixing him but what I did at the same

00:41:13,180 --> 00:41:17,589
time was that Iran Wraith after i was

00:41:14,950 --> 00:41:20,500
done and I produced a zero byte if on

00:41:17,589 --> 00:41:22,359
all of my WebKit screenshots to confirm

00:41:20,500 --> 00:41:24,940
that I had not created any regressions

00:41:22,359 --> 00:41:27,130
while I was doing the IE fixes so the IE

00:41:24,940 --> 00:41:29,319
fixes had to be done manually in browser

00:41:27,130 --> 00:41:32,170
scope and VMS and stuff like that but

00:41:29,319 --> 00:41:33,250
yes you can basically confirm a lot of

00:41:32,170 --> 00:41:35,710
times what you're confirming is that

00:41:33,250 --> 00:41:37,900
you're not changing anything so Alan to

00:41:35,710 --> 00:41:40,270
answer your question a second ago it

00:41:37,900 --> 00:41:42,430
does tell you the numbers here in bytes

00:41:40,270 --> 00:41:43,930
but there's no percentage but you can

00:41:42,430 --> 00:41:45,880
actually like grep through this page

00:41:43,930 --> 00:41:48,039
that it generates and find that you if

00:41:45,880 --> 00:41:49,569
it says anything other than zero bytes

00:41:48,039 --> 00:41:52,630
then you know you got a little work to

00:41:49,569 --> 00:41:54,880
do so you can automate that even further

00:41:52,630 --> 00:41:56,680
I suppose although i don't have it set

00:41:54,880 --> 00:41:58,359
up right now but that is something you

00:41:56,680 --> 00:42:00,339
could also do with phantom because you

00:41:58,359 --> 00:42:02,710
could look this web page up locally on

00:42:00,339 --> 00:42:05,710
your hard drive loaded with phantom look

00:42:02,710 --> 00:42:07,869
for these zero byte strings the actual

00:42:05,710 --> 00:42:10,150
string of zero bytes and that kind of

00:42:07,869 --> 00:42:15,119
thing does that answer your question

00:42:10,150 --> 00:42:15,119
mostly cool awesome yeah

00:42:26,230 --> 00:42:30,080
that's an interesting question the

00:42:28,310 --> 00:42:34,040
question was could you use this for

00:42:30,080 --> 00:42:36,109
design QA getting screenshots from a PSD

00:42:34,040 --> 00:42:40,640
I assume or something like that and then

00:42:36,109 --> 00:42:43,420
comparing your web output to a static

00:42:40,640 --> 00:42:46,790
like image that was generated before I

00:42:43,420 --> 00:42:48,830
don't know I don't know if that would be

00:42:46,790 --> 00:42:50,270
easy to do immediately but you could run

00:42:48,830 --> 00:42:54,710
through the diff code and I'll bet that

00:42:50,270 --> 00:42:55,940
that could be a possibility so yes it's

00:42:54,710 --> 00:42:58,040
technically possible but it's not a

00:42:55,940 --> 00:42:59,480
feature of this tool right at the moment

00:42:58,040 --> 00:43:04,040
out of the box but that's a very

00:42:59,480 --> 00:43:05,510
interesting point well okay so yeah

00:43:04,040 --> 00:43:08,180
that's also a good point you could put a

00:43:05,510 --> 00:43:10,070
JPEG of your site up on the website

00:43:08,180 --> 00:43:11,720
somewhere and then do that type of a dip

00:43:10,070 --> 00:43:14,390
so yeah that'd be an easy kind of like

00:43:11,720 --> 00:43:17,770
workaround for not changing the tool but

00:43:14,390 --> 00:43:20,630
just getting a URL out of the thing yeah

00:43:17,770 --> 00:43:23,750
and then also they're working on doing

00:43:20,630 --> 00:43:25,609
slimer versus phantom comparisons so you

00:43:23,750 --> 00:43:27,589
load up the same URL the same path

00:43:25,609 --> 00:43:28,910
you're not changing any of those so

00:43:27,589 --> 00:43:30,800
you're not changing dev environments but

00:43:28,910 --> 00:43:32,810
what you're changing is the engine which

00:43:30,800 --> 00:43:34,490
is rendering the web page so you can see

00:43:32,810 --> 00:43:37,820
differences between slimer and gecko

00:43:34,490 --> 00:43:39,770
sorry phantom and slimer which are

00:43:37,820 --> 00:43:41,290
WebKit and gecko you can kind of see the

00:43:39,770 --> 00:43:44,390
differences between those two I

00:43:41,290 --> 00:43:46,820
personally am not too worried about that

00:43:44,390 --> 00:43:48,589
type of thing because it is the web and

00:43:46,820 --> 00:43:50,720
you've got to like embrace the

00:43:48,589 --> 00:43:53,750
squishiness and the diversity of

00:43:50,720 --> 00:43:56,030
everything but still it's something that

00:43:53,750 --> 00:43:59,089
you want to know sometimes so you might

00:43:56,030 --> 00:44:02,990
want to compare the two engines any

00:43:59,089 --> 00:44:06,109
other questions I II can't do this you

00:44:02,990 --> 00:44:07,970
just need a more modern stack that like

00:44:06,109 --> 00:44:10,310
so the part of the reason is because

00:44:07,970 --> 00:44:12,410
it's not open source so both phantom and

00:44:10,310 --> 00:44:14,150
slimer are only possible because the

00:44:12,410 --> 00:44:15,980
engines themselves are open source and

00:44:14,150 --> 00:44:20,450
you can fork them and do with them what

00:44:15,980 --> 00:44:25,160
you want and so that's a that's just how

00:44:20,450 --> 00:44:27,349
it is but basically Wraith can do all

00:44:25,160 --> 00:44:29,630
this stuff and if there were ever an IE

00:44:27,349 --> 00:44:31,369
engine that were produced that like a

00:44:29,630 --> 00:44:33,680
tool that were to produce this way I'm

00:44:31,369 --> 00:44:35,030
sure someone would immediately add it to

00:44:33,680 --> 00:44:38,060
the stack because it would be certainly

00:44:35,030 --> 00:44:41,620
useful we already talked about this but

00:44:38,060 --> 00:44:45,200
this is the syntax for multiple config

00:44:41,620 --> 00:44:46,610
so yeah I said at the beginning I

00:44:45,200 --> 00:44:48,710
wouldn't talk about Jenkins at all

00:44:46,610 --> 00:44:50,450
really and I'm not going to show you how

00:44:48,710 --> 00:44:52,490
to do this but we do have a blog post up

00:44:50,450 --> 00:44:55,370
here that illustrates the general

00:44:52,490 --> 00:44:57,620
concepts needed to automate all this

00:44:55,370 --> 00:45:00,890
stuff so basically what you're doing is

00:44:57,620 --> 00:45:03,650
you're combining get hooks and some sort

00:45:00,890 --> 00:45:05,780
of CI server of your choice so I'm not

00:45:03,650 --> 00:45:08,810
at all opinionated about what you should

00:45:05,780 --> 00:45:10,880
or shouldn't use but you basically need

00:45:08,810 --> 00:45:13,400
those two ingredients a way to trigger

00:45:10,880 --> 00:45:15,470
things via version control or disk i/o

00:45:13,400 --> 00:45:18,260
and then a way to do something with that

00:45:15,470 --> 00:45:21,670
trigger so we use Jenkins and github web

00:45:18,260 --> 00:45:25,460
hooks they're really easy and we have a

00:45:21,670 --> 00:45:27,950
blog post here that outline specifically

00:45:25,460 --> 00:45:30,050
how you build a Jenkins job so that when

00:45:27,950 --> 00:45:33,350
you push to master it updates your trunk

00:45:30,050 --> 00:45:37,010
and while this is a fairly mundane

00:45:33,350 --> 00:45:39,560
process in terms of CI it does have all

00:45:37,010 --> 00:45:40,550
the ingredients necessary to get you up

00:45:39,560 --> 00:45:43,190
and running with you like your first

00:45:40,550 --> 00:45:44,600
Jenkins job so I included this just so

00:45:43,190 --> 00:45:46,310
you'd have somewhere to start if you

00:45:44,600 --> 00:45:48,320
weren't as familiar with Jenkins and

00:45:46,310 --> 00:45:50,930
then you can go from there and basically

00:45:48,320 --> 00:45:53,300
read on your own but I'm by no means

00:45:50,930 --> 00:45:54,770
even an expert at that so whenever I do

00:45:53,300 --> 00:45:57,800
Jenkins stuff I have a lot of help from

00:45:54,770 --> 00:46:00,320
my colleagues and all that kind of stuff

00:45:57,800 --> 00:46:02,360
but basically you push to a repo it

00:46:00,320 --> 00:46:05,030
sends a message to your CI server and

00:46:02,360 --> 00:46:06,650
says hey I've got some new stuff the CI

00:46:05,030 --> 00:46:10,760
services cool i'm going to do something

00:46:06,650 --> 00:46:13,660
with the new stuff and you're done so in

00:46:10,760 --> 00:46:23,270
general we have any general questions

00:46:13,660 --> 00:46:26,330
how am I good on time yeah okay cool oh

00:46:23,270 --> 00:46:28,250
gotcha alright because this is the

00:46:26,330 --> 00:46:32,210
DevOps track I'm going to read you some

00:46:28,250 --> 00:46:33,650
information drupal.org infrastructure

00:46:32,210 --> 00:46:36,020
team responsible for all infrastructure

00:46:33,650 --> 00:46:38,300
for the Drupal project including drupal

00:46:36,020 --> 00:46:40,490
org and all the sub-sites is looking for

00:46:38,300 --> 00:46:41,960
help they have too many tasks to deal

00:46:40,490 --> 00:46:44,450
with and are looking to bring new people

00:46:41,960 --> 00:46:48,380
on to the team they have a community

00:46:44,450 --> 00:46:52,250
conversation this Thursday 1pm 13 in

00:46:48,380 --> 00:46:53,640
room 225 if you're interested come and

00:46:52,250 --> 00:46:55,680
see how you can help

00:46:53,640 --> 00:47:04,640
and the URL that I am going to show you

00:46:55,680 --> 00:47:12,529
is Lee whoops oh man now I've done it in

00:47:04,640 --> 00:47:16,470
for a team I think I did that right yeah

00:47:12,529 --> 00:47:25,470
uh-huh so um if anyone's interested in

00:47:16,470 --> 00:47:29,160
helping out drupal.org sorry thanks Sam

00:47:25,470 --> 00:47:33,869
I don't understand are you talking about

00:47:29,160 --> 00:47:39,960
the large URL underneath it okay cool

00:47:33,869 --> 00:47:45,690
man so does anybody have any other

00:47:39,960 --> 00:47:47,099
questions or suggestions no oh really

00:47:45,690 --> 00:47:50,150
that means I did terrible if no one has

00:47:47,099 --> 00:47:53,130
questions that's that makes me feel bad

00:47:50,150 --> 00:47:54,599
are you into grateful whoa are you

00:47:53,130 --> 00:47:56,279
integrating any sort of commercial

00:47:54,599 --> 00:47:59,089
services as both of these open source

00:47:56,279 --> 00:48:01,950
tools so sauce labs or I mean um

00:47:59,089 --> 00:48:04,109
PageSpeed would be the one thing that's

00:48:01,950 --> 00:48:05,910
potentially commercial that you might

00:48:04,109 --> 00:48:08,730
rely on but like i said the grunt plugin

00:48:05,910 --> 00:48:11,160
just reuses the api and you sign up for

00:48:08,730 --> 00:48:12,740
a freaky it took me two minutes to log

00:48:11,160 --> 00:48:15,839
into google and like turn the key on

00:48:12,740 --> 00:48:20,880
generate it I kind of skipped this part

00:48:15,839 --> 00:48:22,970
but the grunt file actually has a a key

00:48:20,880 --> 00:48:26,339
thing here which I just basically said

00:48:22,970 --> 00:48:28,619
read the file out of my file system and

00:48:26,339 --> 00:48:30,329
so I don't have to like check in my key

00:48:28,619 --> 00:48:33,779
into the open source repo that I'm

00:48:30,329 --> 00:48:36,210
hosting and basically then you have

00:48:33,779 --> 00:48:37,559
25,000 requests a day but if there were

00:48:36,210 --> 00:48:39,720
other commercial services that were

00:48:37,559 --> 00:48:41,549
worth it I would and one that comes to

00:48:39,720 --> 00:48:43,440
mind is browser stack they have

00:48:41,549 --> 00:48:45,329
automated selenium testing or something

00:48:43,440 --> 00:48:47,190
like that so if you do want to do some

00:48:45,329 --> 00:48:50,549
of this stuff with IE browser stack

00:48:47,190 --> 00:48:52,680
might be the option now oftentimes like

00:48:50,549 --> 00:48:55,170
I haven't had the real need to do like

00:48:52,680 --> 00:48:57,480
serious like you know week's worth of ie

00:48:55,170 --> 00:48:58,980
testing in order to like get something

00:48:57,480 --> 00:49:00,599
right but if I did have to do that I

00:48:58,980 --> 00:49:02,730
might take a couple days and like go and

00:49:00,599 --> 00:49:05,279
figure out selenium on browser stack its

00:49:02,730 --> 00:49:07,020
browser stack calm and it's a cool

00:49:05,279 --> 00:49:10,680
service if you've never used it

00:49:07,020 --> 00:49:18,350
QA and stuff we had a question oh he's

00:49:10,680 --> 00:49:22,200
going to the mic awesome can you mix the

00:49:18,350 --> 00:49:27,510
only these things between scrapes team

00:49:22,200 --> 00:49:30,210
the staff phantom test with his Casper

00:49:27,510 --> 00:49:32,370
EAS or something like that you can mix

00:49:30,210 --> 00:49:34,140
hold all this city yeah you could

00:49:32,370 --> 00:49:36,030
totally mix all these so another one

00:49:34,140 --> 00:49:38,880
that was mentioned just now is Casper

00:49:36,030 --> 00:49:40,380
and Casper is like in an API on top of

00:49:38,880 --> 00:49:44,790
phantom because Casper is another

00:49:40,380 --> 00:49:46,110
phantom and so all these all these tools

00:49:44,790 --> 00:49:48,300
are built on each other there's another

00:49:46,110 --> 00:49:51,510
one called phantom CSS which I was

00:49:48,300 --> 00:49:53,550
initially interested in but Wraith it

00:49:51,510 --> 00:49:55,590
gets get you get you what you want with

00:49:53,550 --> 00:49:57,720
slightly less trouble in my experience

00:49:55,590 --> 00:49:59,760
although I have had someone tell me that

00:49:57,720 --> 00:50:01,920
I was crazy because they found it dead

00:49:59,760 --> 00:50:03,660
simple to set up phantom CSS so I'm not

00:50:01,920 --> 00:50:05,070
actually making a claim here but I'm

00:50:03,660 --> 00:50:07,590
just saying in my experience I've found

00:50:05,070 --> 00:50:10,320
one easy and one hard I picked one based

00:50:07,590 --> 00:50:13,440
on that basically but yeah by all means

00:50:10,320 --> 00:50:16,470
mix these together phantom uses require

00:50:13,440 --> 00:50:17,610
natively now require Jas and so what

00:50:16,470 --> 00:50:19,770
that means is that you can load other

00:50:17,610 --> 00:50:22,020
modules other JavaScript modules which

00:50:19,770 --> 00:50:24,240
I'm talking about AMD modules in that

00:50:22,020 --> 00:50:27,240
case we over use the word module i think

00:50:24,240 --> 00:50:31,410
in front end now but basically you can

00:50:27,240 --> 00:50:32,670
add in other libraries and integrate

00:50:31,410 --> 00:50:35,420
them and mash them up and do all that

00:50:32,670 --> 00:50:38,280
kind of stuff yeah totally possible hmm

00:50:35,420 --> 00:50:42,740
they see one more hand back there on the

00:50:38,280 --> 00:50:42,740
other side nope

00:50:44,940 --> 00:50:49,680
ah webpagetest what do I think about

00:50:46,859 --> 00:50:53,190
webpagetest in like the last talk I gave

00:50:49,680 --> 00:50:55,200
in Munich last year I advertise it it's

00:50:53,190 --> 00:50:58,020
it's good I think it's a great service

00:50:55,200 --> 00:50:59,520
web page tests is good in that you can

00:50:58,020 --> 00:51:02,240
get higher files you can get water falls

00:50:59,520 --> 00:51:05,790
out of the data and also it lets you

00:51:02,240 --> 00:51:08,569
truly test geographic locations which is

00:51:05,790 --> 00:51:13,260
fantastic so you can say I want an

00:51:08,569 --> 00:51:14,430
iphone 3g from Syria or something like

00:51:13,260 --> 00:51:17,640
that you know you can just like pick a

00:51:14,430 --> 00:51:20,099
location or I want to test some sort of

00:51:17,640 --> 00:51:22,050
like Nexus device from actual Korea you

00:51:20,099 --> 00:51:24,300
know and so you can do all these tests

00:51:22,050 --> 00:51:27,960
and throttle your bandwidth and web page

00:51:24,300 --> 00:51:29,910
Tess's is a really great tool I'm not up

00:51:27,960 --> 00:51:31,920
on the level of automation that's

00:51:29,910 --> 00:51:34,800
possible with those but it is a great

00:51:31,920 --> 00:51:36,510
tool to look into and then actually you

00:51:34,800 --> 00:51:37,380
could just scan my github which was a

00:51:36,510 --> 00:51:39,349
link at the beginning of this

00:51:37,380 --> 00:51:43,349
presentation and there's some slides

00:51:39,349 --> 00:51:44,760
called front end / for high-performance

00:51:43,349 --> 00:51:47,160
theming or something like that that have

00:51:44,760 --> 00:51:50,069
a bunch of information about both web

00:51:47,160 --> 00:51:53,180
page tests and blaze io which was the

00:51:50,069 --> 00:52:00,390
mobile version that Akamai acquired so

00:51:53,180 --> 00:52:03,510
whoops so any other questions cool one

00:52:00,390 --> 00:52:06,690
last thing here I think this is the

00:52:03,510 --> 00:52:09,720
right URL no it's not there that's the

00:52:06,690 --> 00:52:18,920
right URL so here we can we can do the

00:52:09,720 --> 00:52:21,690
big thing again so if you could please

00:52:18,920 --> 00:52:25,170
help me and the drupal association out

00:52:21,690 --> 00:52:26,940
by rating this session it helps me make

00:52:25,170 --> 00:52:29,579
better presentations and i want to hear

00:52:26,940 --> 00:52:31,200
like when i was too boring when I was

00:52:29,579 --> 00:52:33,270
inaccurate about something when I

00:52:31,200 --> 00:52:35,760
offended you all that kind of thing

00:52:33,270 --> 00:52:38,040
actually I definitely when I offend of

00:52:35,760 --> 00:52:45,119
you so if you could just go to this URL

00:52:38,040 --> 00:52:46,890
it's JM p / DC p dash f 0 PS it's really

00:52:45,119 --> 00:52:48,300
easy to rate the sessions on drupal.org

00:52:46,890 --> 00:52:50,579
and i will take you straight to the page

00:52:48,300 --> 00:52:52,710
if you're logged in and other than that

00:52:50,579 --> 00:52:55,099
thank you for coming and I hope you

00:52:52,710 --> 00:52:55,099

YouTube URL: https://www.youtube.com/watch?v=segbikKwOfE


