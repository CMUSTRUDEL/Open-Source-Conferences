Title: DrupalCon Munich 2012: Real Data: Why your intuition isn't trustworthy
Publication date: 2013-03-29
Playlist: DrupalCon Munich - August 2012
Description: 
	On typical site performance audits, I'm usually given a summary of the problems from the developers of the site. About 80% of the time this information is wrong.

As developers, we have a tendency to be remarkably unscientific when analyzing performance issues. We like to look first at hardware or software configuration issues, which are usually the most difficult to measure and beyond the scope of a typical developer's skill set. We then like to suggest solutions to problems based on evidence that is anecdotal, based on intuition, or if actual data was collected, is measuring the wrong thing. This inevitably leads to premature optimization, micro-optimization, or simply solving problems you don't have, all of which add complexity to your infrastructure.

In this session, I'll discuss:

How I approach a new site to get an unbiased perspective
The methods and tools I use to collect and analyze data to diagnose performance issues
Mark works as a performance engineer at Acquia. He is the author of the XHProf drupal module, XHProfLib, xhprof.me, and is a member of the Drush core team. Past presentations include:

Profiling Drupal with XHProf (at BADCamp, PNWDS, New York, and Austin)
Configuration Management with Chef
Advanced Drush
Captions: 
	                              welcome to my session I'm marks on a dog                               I'm a performance engineer Takuya this                               talk i put together based on the                               experiences I have in my job it's a                               little unique and the things i see from                               google community and drupal developers                               in general so my job is actually just to                               work on internal products that aria I                               don't work on our sites that much but I                                do end up getting pulled into it and                                seen seeing a site choose me louder is                                not on sorry I'm tall alright i can i                                can get closer so i usually see sites                                after they've been through a couple                                iterations of luck performance                                optimizations and tuning and the problem                                is has been worked on before before I                                see it and so I have been fascinated in                                the process of how how this I got to                                that point and have found some things                                that we talked about so this is the                                typical scenario that I see all the time                                so the general symptom that we owe each                                gate is like well this page is slow and                                really I guess you're lucky to get that                                sometimes so really common to just like                                turn on developer a log just start                                looking at queries and then just from                                there you start trying to fix those                                things you found and that may or may not                                have actually fixed it but you just fix                                those things because you found those                                things and then as soon as you don't                                have as soon as you can't find anything                                else in that one little place that one a                                piece of data that you got you then go                                to crazy crazy things like that right                                it's really I mean it's almost kind of                                not funny because uh I see that all the                                time where it's like you get to a point                                and I hear slave databases or read                                slaves and ESI so much that I almost                                don't want to use them when they're                                actually appropriate so looking at a                                performance problem and fixing it is                                relatively simple I mean that's a total                                oversimplification but                                the problem with this is that first one                                is the most important right and that's                                often the one that people skip so all of                                those other steps are dependent on                                getting that one right if you don't know                                what your problem actually is you'll go                                on to solving other problems it's also                                the most difficult unfortunately I I                                can't tell you that the collecting and                                looking at that data and really figure                                out what your problem is is simple but                                it's also just completely necessary and                                yeah it's also the easiest out so I                                see that all the time where you get the                                you get the data you maybe look at it                                the wrong way you get the wrong data or                                you just don't know what data to get to                                the game of so when you do miss diagnose                                the things that I see most often I see                                lots of premature optimization so you                                might see something like like if you're                                like if you're looking at queries on a                                page is the thing I've seen a lot where                                you where you see okay this this query                                is called ten times and it's the same                                query over and over okay you might you                                might help to to fix that word only gets                                called once but how fast was that query                                right that query might be so fast that                                it really doesn't matter in the end like                                you're not going to get much of a gain                                out of that so yeah and premature                                optimization it's I mean it's a whole                                talk in itself but micro optimization is                                sort of the same thing actually more of                                what I was describing solving problems                                you don't have is it sounds really dumb                                but the I see this all the time people                                are always solving problems they don't                                have and their era consoles ones with                                consequences to that and I get the                                feeling that uh that people perform                                these optimizations as if they are free                                and they're really not so if you say                                like okay add a de- will read slave                                because it can't hurt right it can only                                make the performance better except                                that's not the actual cost to it the                                cost is the complexity in your setup                                right                                when you when you go around just adding                                aesthetic caches everywhere two things                                 your code becomes less readable and more                                 bug prone I don't I don't remember who                                 said it but remember a quote sometimes                                 like a like a cache is a bug waiting to                                 happen and it's very very true I mean                                 caches are great but they make your code                                 more complex and it's harder to manage                                 so they're not always the answer to                                 everything and especially with static                                 ashes one thing we just don't really                                 think about a lot is that you're                                 actually adding a lot of memory overhead                                 to the page if you have some big results                                 that that you that maybe gets called a                                 couple times and you just want to try to                                 avoid that query you put a static cash                                 on it was like well now you have that in                                 memory for the entire request whereas                                 that you may not have had that before so                                 data caches are not free and yet for                                 your infrastructure I mean adding                                 something like varnish or my school read                                 slaves I mean furnished by itself is not                                 that bad but varnish with ESI you have                                 to have a team that can handle that and                                 not there's very few Drupal teams that                                 I've seen that have but also have the                                 instructor team to manage that and you                                 you can get over your head very very                                 quickly                                 so yeah what I'm describing sounds very                                 unscientific right so what we're                                 supposed to be doing as developers this                                 is sort of related to computer science                                 you'd think right but it kind of isn't                                 the way we do it we as developers we                                 really like to use logic and reason why                                 this is the problem but that's really                                 just totally useless it doesn't matter                                 it doesn't matter how clever you are or                                 like how you can reason into figuring                                 out what the issue is the only thing                                 that matters is what was when you                                 measure it and you and you have the raw                                 data no this is something something that                                 I've learned doing this because I I'm                                 often measuring things and it's like I                                 work with the hosting team fairies here                                 somewhere I'm always met yeah I'm always                                 measuring things and then showing                                 showing data to bury and I'm just sort                                 of i just get in that workflow because i                                 know that if i don't give it to him he's                                 going to ask and when you do that it's a                                 very humbling experience because you'll                                 find that when you actually measure                                 things you're wrong fifty percent or                                 more usually and then you see oh                                 actually I thought I knew a lot about                                 this but I don't actually know mysql is                                 a big one like that i thought i knew                                 things about mysql and it turns out my                                 skills really really complex so                                 collecting data is the big issue I'm                                 going to briefly go briefly go over just                                 some of the general tools and techniques                                 for for collecting the right data so if                                 you're debugging just took cold response                                 time like this page is slow in Drupal                                 like time to first byte before it gets                                 the browser profile it if I mean I much                                 much prefer XH prof I think they're                                 probably no reason to not use XOX prof                                 anything else is guessing if you I mean                                 you can use the devel thing that will                                 tell you how long your pages but that                                 doesn't give you anything to dig down                                 into and that's that's actually the                                 thing that I see most is that for some                                 reason there's just this barrier to                                 profilers a comment I mean how many                                 bueller here are developers                                 okay most how many have XD bugs set up                                 in their environment with like an IDE so                                 you can do like debugging how many have                                 X's prof. installed and like ready to                                 use all right fewer this is probably a                                 special room generally that's not the                                 case but and those of you who have set                                 up XH prof no it's considerably simpler                                 than actually getting X debug working                                 with a debugger it's not difficult at                                 all but it's just something that we                                 don't consider part of our standard tool                                 chain and I've everything I can to fix                                 that i wrote the XH prof drupal module                                 which saves you the step of getting the                                 like PHP source from facebook and                                 setting it up on another v host and                                 working on some other exit prof. related                                 things to make it easier but there's                                 still just the barrier of installing                                 that PHP extension and and even if you                                 don't a lot of people set it up and just                                 get the report and have a hard time                                 reading it I would say even if you get                                 to that point that's still valuable                                 because then you can give that to                                 somebody who does know how to read it                                 and then they can help you but that's                                 but getting to that point is really                                 important and I find that's what most                                 people miss                                 so                                 at most people i mean there's most times                                 i ever see anyone do benchmarks                                 especially i like true blood or they're                                 always using stuff like a bee it isn't                                 awful but i just wanted to point out                                 that if you're if you're making code                                 changes like i just made the small code                                 change now i'm going to run AV to figure                                 out if it's faster or slower that might                                 work it probably will work most of the                                 time but why would you want to measure                                 that many things if you only need to                                 measure one you know that doesn't really                                 make a lot of sense because there's a                                 lot of different ways that that test can                                 get messed up you can end up with a                                 confounding variable that makes the                                 mixture test worthless essentially                                 because then somebody else going to do                                 it was like a laggy wildly different                                 results like well that's because you're                                 testing five different things and in                                 that case for code changes just use XH                                 proper it's really easy like both vexes                                 rough module and the PHP Facebook source                                 you can give it two runs and you can do                                 a diff between them and then you can                                 drill down to just that function and                                 you've ever seen ever seeing the core                                 issues where I've done profiling I                                 always attached images from XH prof and                                 I always show the like that particular                                 function and the difference and the time                                 spent with in that function and because                                 and it's so easy to get there's a sort                                 of no excuse to to do anything else                                 because you have the data right there in                                 front of you just have to collect it so                                 this is a really like just a gross                                 oversimplification but if you're ever                                 doing just like front end I mean there's                                 a bunch of ways to collect data on                                 front-end performance but I find the                                 most helpful thing that but I see missed                                 a lot is that people don't know the                                 chrome dev tools as well as they could                                 it is the most incredible tool we've                                 ever had for looking at these things the                                 network tab has been great for ever the                                 like the job like the actual like                                 JavaScript I forget what the whole tab                                 is but it shows how things are painted                                 it really complex but it's also really                                 really worth learning and just if you                                 look at that network graph and                                 understand what the two lines mean right                                 the the document ready and window load                                 event knowing what those events mean and                                 if you see that first line is super                                 important                                 and that one that's the one it's like                                 until it's finished a user cannot really                                 like interact with the page and so if                                 you see a bunch of requests that are                                 that seem to be pushing that one out                                 that's a good good thing to look into                                 you because you probably have scripts                                 that are like puppy at the top of the                                 page that are blocking and other content                                 from loading but yeah that's that's                                 obviously the entire talk in itself but                                 learn that and for front-end stuff                                 really that's that's the only till I use                                 I don't think I use any other tools but                                 that is yeah so Firebug essentially does                                 the same thing and actually I mean                                    really great way to collect raw data                                 from browsers is in the horror format                                 there's a bunch of different ways to                                 collect hard but in chrome you can                                 actually like right click on the network                                 graph and say export is hard and hard                                 just a big-ass JSON array of all of that                                 data and like things I've web page if                                 you ever go to like webpagetest org or                                 like browser mob has there there little                                 checker deal but although although all                                 the sites were you turn a URL and then                                 it goes and crawls it they all save hars                                 and then they all usually show it with                                 the horror viewer and horror viewer is a                                 an open source like just really simple                                 like javascript HTML thing that you just                                 give it a and that it'll show it                                 to you and that code is actually                                 extracted from the Firefox net tab so                                 it's good i select firefox say up for                                 web servers just just please stop                                 benchmarking them there it's really                                 really unlikely that it's your problem                                 and people love to talk about benchmark                                 events / web servers and they love to                                 benchmark them and to look at how much                                 faster engine X is to Apache and                                 whatever that's awesome like I would                                 love if you can show me that with your                                 web server is actually your bottleneck                                 that seems worthwhile but I've yet to                                 see the Drupal site where it is so I                                 think it's very very unlikely it's more                                 likely that your web server is                                 misconfigured so if you don't have like                                 say like Max clients can figure                                 correctly that's sort of an issue but                                 that's not a performance optimization                                 that's just configuring it correctly                                 and so for custom stuff most mostly                                 actual measurement I end up doing end of                                 ends up being custom because I end up                                 having to measure something specific to                                 like like on the Aqua hosting stack and                                 the only thing I would have to say is                                 that you should always just record the                                 raw values I see a lot of people will                                 give me data that they collect it and                                 they'll give it to me in a format that's                                 already sort of calculated it's like                                 it's already is like it average or                                 attack requests per second or something                                 and that seriously limits your ability                                 to look at that data later because                                 you're already sort of locked in to                                 interview the way you wanted to view                                 that data so if you can get the raw data                                 CSV is incredibly simple and useful I                                 also see a lot of you'll put stats                                 directly like MySQL I guess you could                                 but that seems a lot more complex to me                                 any scripting language I mean you can                                 even do this with bash it's really                                 really simple to just write out data                                 that ends up in a CSV format and then                                 most good plotting and visualization                                 tools can read CSVs                                 so just briefly want to talk about like                                 the idea of confounding variables if                                 anyone saw like probably lots of you saw                                 like six months ago or so I was a really                                 good blog post my said Shaw like a like                                 programmers need to learn statistics                                 right will kill them it's worth worth                                 googling and he touches on this a lot                                 and it's but it's really a huge problem                                 that people don't understand the idea of                                 confounding variables affecting your                                 benchmarks it's somewhat of what I                                 touched on earlier we're talking about                                 not using a be like any other piece of                                 that stack that you're measuring that's                                 not the thing you're supposed to be                                 measuring it's potentially a confounding                                 variable so yeah and here's my                                 completely made up stat on benchmarks on                                 the internet but you should know like                                 you can't always remove all of them                                 shouldn't use that as excuse not to try                                 but it's I found it sort of about                                 finding the balance between realism and                                 isolation so like if you're doing                                 there's some kinds of tests when I want                                 to set or test a site or like a like a                                 whole stack where I'll want to go                                 through and use the tool like browser                                 mob and actually make sure that people                                 are going into browsers and everything                                 is happening like it normally would but                                 that can often be like if I'm just                                 trying to measure the difference in a                                 code change that's probably overkill and                                 they're probably way too many things                                 there that I'm actually measuring and                                 I'm not isolating what I want to met or                                 what I want to so I might compromise and                                 just write like a small script that just                                 hit some URLs that I want but you can                                 but if you go to the extreme and then                                 just use like let's say you're tuning                                 mysql and they need to do something like                                 Alexis bench that's great and you can                                 write down like your your eyes per                                 second and you can show them to people                                 but that may or may not actually tell                                 you that if your drupal site will run                                 better and so it's always about finding                                 the balance of measuring just the exact                                 thing that you want but then also also                                 making a realistic enough to where still                                 relevant to your actual use case so just                                 the really simple things that I do to                                 try to avoid this work in a known clean                                 environment for me this is this is my                                 macbook air when somebody gives me a                                 site and says                                 site is slow I never ever look at it in                                 that environment first I always get a                                 copy of it get it running locally and I                                 profile it because I know if I can                                 recreate that same page load time on my                                 laptop then it's really clear I can                                 figure out what it is even if the time                                 even it is usually a little bit faster                                 if it's a couple seconds different                                 that's fine because really all I'm                                 looking at like an X age prof is the                                 relative times I can see well seventy                                 percent of the time is spent in this                                 thing so if I fix that ideally it's                                 going to be have the same effect in the                                 other environment and that's fine if it                                 doesn't because if it doesn't and I get                                 it working well locally then I can move                                 into the environment and say okay well                                 now I know that this is an environmental                                 issue so it doesn't matter so much that                                 I mean I'm a completely different OS on                                 an SSD it's totally different stack the                                 only thing that matters is that I know                                 it and so I know what to expect and if                                 there is something that's different I'll                                 recognize it quickly yeah                                 so                                 once you get the data remember tools                                 like exit prof they have like built-in                                 viewers but when you're dealing with any                                 kind of custom data or even data from a                                 be if you are using that it has like a                                 really good option to export CSV that                                 you normally put in good new plot but                                 i've been using are a lot i think it's a                                 really great tool for for visualization                                 it's not the easiest thing in the world                                 but it's a it's very worthwhile because                                 if you if you get your data in a certain                                 way to visualize your data in a certain                                 way in arts it's much easier to to view                                 it in a completely different way with                                 with very little work and very little                                 code so just out of the box it comes                                 with its own built-in plotting but then                                 there's most people use a library code                                 ggplot                                                                pretty shitty example because these are                                 it makes it look like ggplot gives you                                 pastel but it's a bit more than that                                 so and just a little bit about the                                 different kinds of ways to visualize                                 data this is something I'm I've music                                 degrees I don't know statistics that                                 well I'm sort of learning all this                                 myself and I never occurred to me how                                 different different types of plots are                                 and it wasn't obvious to me initially                                 like which ones where appropriate for                                 for what kind of data set line I always                                 intend to go to lines and if I was                                 specially if I'm doing time series stuff                                 I do it less now but like this is one                                 example where it is pretty appropriate I                                 was actually measuring I was measuring                                 the rate at which PHP process respond                                 sent a bunch of traffic to a machine and                                 waited to see like how how fast you gi                                 would spawn them and this was really                                 illuminating because I could see over                                 time how long it takes like while some                                 well some already got to the max he                                 still took a while for the other ones to                                 catch up which was surprising but that's                                 specifically at I'm serious thing and i                                 like to use area for time series but i                                 think just mostly because it's pretty I                                 don't think it's all that useful most                                 the time because yeah you can just see                                 that it's very spiky that tells you                                 something that tells you if there's lots                                 of variation but I think there's better                                 ways to view that at most of them                                 so bar is another one that we see a lot                                 it's a little more complex though if                                 you're just looking at data that you                                 usually see in like a bar form it's                                 probably averaged I think the better way                                 to view it is like like this is a                                 histogram so it's showing you like so as                                 I measured what percent of memory mysql                                 was using across all the servers in aqua                                 club and so that's just showing me how                                 many there are each percentage point and                                 then I just took the median line on top                                 of that but that's a good example is                                 like giving our the like the basic raw                                 data and then it can calculate how many                                 occurrences of that that there are in                                 the data set and I don't have to like                                 pre calculate that so get touched on                                 before with averaging you see this a lot                                 I see this all the time where you're                                 presented with data and say okay this                                 thing is faster than this thing because                                 I took all those values and then I                                 average them especially when you're                                 doing any kind of performance measuring                                 averages are really inappropriate most                                 of the time they're not really telling                                 you the whole story so this is actually                                 this came from data that we very                                 recently collected like another engineer                                 collected some data on the new Amazon                                 provisioned I ops and then this is the                                 like he gave us some numbers I was like                                 all right that's that's interesting like                                 you can look give me the raw data for                                 that say I have a feeling there's                                 there's maybe more to this and if you                                 just looked at that you would say well                                  version I ops is slow let's not use                                 it right but if you look at it with a                                 box plot box plots are really great I                                 use these all the time it shows you like                                 that big line in the middle that's the                                 the medium and I guess I should explain                                 really quickly like a mean is average                                 median is the point at which fifty                                 percent of the data is above or below                                 that which i think is most of the time a                                 better metric to use than mean but it's                                 good to see them both so that's the mean                                 the top of the box is the third quartile                                 and the bottom is the first quartile so                                 all the data fits within like                                 twenty-five percent                                    and then it also gives you the lines                                 extend to the min/max and then it gives                                 you what it's considering outliers but                                 from this you can see so one of the                                 things with provisioned I ops is it's                                 supposed to be way more consistent there                                 isn't going to be a lot of variation in                                 I oh right that's clearly visible here                                 because you don't even see the box                                 there's practically no variation at all                                 whereas with regular DBS there's quite a                                 bit so what you get from this graph is                                 not that one is slower than the other                                 it's the one is more consistent and                                 without knowing the standard deviation                                 of the data set meet I mean averages are                                 just completely useless so feels a                                 little silly to put a link like                                 stackoverflow but if you are interested                                 in learning are it's absolutely the best                                 resource and there's actually a special                                 like statistics stack overflow and and                                 that one book that I've been going                                 through has been really helpful there's                                 a huge our community out there and                                 there's lots of resources and lots of                                 help and I didn't put it in but actually                                 just recently started using like our                                 studio which is a like an IDE I don't                                 usually use IDs but it's really great                                 and you can put things in this form I                                 called our mark down where you can it                                 shows you the code like you normally                                 would and mark down but then it'll                                 actually embed the plots in it and then                                 there's a service type to it called our                                 pubs and you're going to save publish                                 and your code goes like goes to the site                                 it's like gifting graphs and you can                                 have a URL for that and then all the                                 data and all your code and then the                                 results of that are all there which is                                 really nice because I could pass that on                                 and everyone can see each other's work                                 so i highly suggest checking
YouTube URL: https://www.youtube.com/watch?v=V7NbajFV6AE


